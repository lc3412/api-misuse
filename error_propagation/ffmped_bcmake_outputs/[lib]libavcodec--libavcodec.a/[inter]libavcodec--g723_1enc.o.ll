; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--g723_1enc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--g723_1enc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.G723_1_Context = type { %struct.AVClass*, i32, [2 x %struct.G723_1_ChannelContext] }
%struct.G723_1_ChannelContext = type { [4 x %struct.G723_1_Subframe], i32, i32, i32, [3 x i8], [2 x i32], i32, [10 x i16], [10 x i16], [145 x i16], [389 x i16], [10 x i16], [10 x i16], [10 x i32], i32, i32, i32, i32, i32, i32, i32, i32, [399 x i16], [120 x i16], [145 x i16], i16, i32, [10 x i16], [10 x i16], [145 x i16] }
%struct.G723_1_Subframe = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.HFParam = type { i32, i32 }
%struct.FCBParam = type { i32, i32, i32, i32, [6 x i32], [6 x i32] }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%union.unaligned_32 = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"g723_1\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"G.723.1\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 1, i32 -1], align 4
@defaults = internal constant [2 x %struct.AVCodecDefault] [%struct.AVCodecDefault { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0) }, %struct.AVCodecDefault zeroinitializer], align 16
@ff_g723_1_encoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86068, i32 0, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 6072, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* getelementptr inbounds ([2 x %struct.AVCodecDefault], [2 x %struct.AVCodecDefault]* @defaults, i32 0, i32 0), void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @g723_1_encode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* @g723_1_encode_frame, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"6300\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"Only 8000Hz sample rate supported\0A\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"Only mono supported\0A\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"Use bitrate 6300 instead of 5300.\0A\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"Bitrate 5300\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Bitrate not supported, use 6300\0A\00", align 1
@dc_lsp = internal constant [10 x i16] [i16 3131, i16 4721, i16 7690, i16 10806, i16 13872, i16 16495, i16 19752, i16 22260, i16 25484, i16 27718], align 16
@hamming_window = internal constant [180 x i16] [i16 2621, i16 2631, i16 2659, i16 2705, i16 2770, i16 2853, i16 2955, i16 3074, i16 3212, i16 3367, i16 3541, i16 3731, i16 3939, i16 4164, i16 4405, i16 4663, i16 4937, i16 5226, i16 5531, i16 5851, i16 6186, i16 6534, i16 6897, i16 7273, i16 7661, i16 8062, i16 8475, i16 8899, i16 9334, i16 9780, i16 10235, i16 10699, i16 11172, i16 11653, i16 12141, i16 12636, i16 13138, i16 13645, i16 14157, i16 14673, i16 15193, i16 15716, i16 16242, i16 16769, i16 17298, i16 17827, i16 18356, i16 18884, i16 19411, i16 19935, i16 20457, i16 20975, i16 21489, i16 21999, i16 22503, i16 23002, i16 23494, i16 23978, i16 24455, i16 24924, i16 25384, i16 25834, i16 26274, i16 26704, i16 27122, i16 27529, i16 27924, i16 28306, i16 28675, i16 29031, i16 29373, i16 29700, i16 30012, i16 30310, i16 30592, i16 30857, i16 31107, i16 31340, i16 31557, i16 31756, i16 31938, i16 32102, i16 32249, i16 32377, i16 32488, i16 32580, i16 32654, i16 32710, i16 32747, i16 32766, i16 32766, i16 32747, i16 32710, i16 32654, i16 32580, i16 32488, i16 32377, i16 32249, i16 32102, i16 31938, i16 31756, i16 31557, i16 31340, i16 31107, i16 30857, i16 30592, i16 30310, i16 30012, i16 29700, i16 29373, i16 29031, i16 28675, i16 28306, i16 27924, i16 27529, i16 27122, i16 26704, i16 26274, i16 25834, i16 25384, i16 24924, i16 24455, i16 23978, i16 23494, i16 23002, i16 22503, i16 21999, i16 21489, i16 20975, i16 20457, i16 19935, i16 19411, i16 18884, i16 18356, i16 17827, i16 17298, i16 16769, i16 16242, i16 15716, i16 15193, i16 14673, i16 14157, i16 13645, i16 13138, i16 12636, i16 12141, i16 11653, i16 11172, i16 10699, i16 10235, i16 9780, i16 9334, i16 8899, i16 8475, i16 8062, i16 7661, i16 7273, i16 6897, i16 6534, i16 6186, i16 5851, i16 5531, i16 5226, i16 4937, i16 4663, i16 4405, i16 4164, i16 3939, i16 3731, i16 3541, i16 3367, i16 3212, i16 3074, i16 2955, i16 2853, i16 2770, i16 2705, i16 2659, i16 2631, i16 2621], align 16
@binomial_window = internal constant [10 x i16] [i16 32749, i16 32695, i16 32604, i16 32477, i16 32315, i16 32118, i16 31887, i16 31622, i16 31324, i16 30995], align 16
@bandwidth_expand = internal constant [10 x i16] [i16 32571, i16 32376, i16 32182, i16 31989, i16 31797, i16 31606, i16 31416, i16 31228, i16 31040, i16 30854], align 16
@cos_tab = internal constant [513 x i16] [i16 16384, i16 16383, i16 16379, i16 16373, i16 16364, i16 16353, i16 16340, i16 16324, i16 16305, i16 16284, i16 16261, i16 16235, i16 16207, i16 16176, i16 16143, i16 16107, i16 16069, i16 16029, i16 15986, i16 15941, i16 15893, i16 15843, i16 15791, i16 15736, i16 15679, i16 15619, i16 15557, i16 15493, i16 15426, i16 15357, i16 15286, i16 15213, i16 15137, i16 15059, i16 14978, i16 14896, i16 14811, i16 14724, i16 14635, i16 14543, i16 14449, i16 14354, i16 14256, i16 14155, i16 14053, i16 13949, i16 13842, i16 13733, i16 13623, i16 13510, i16 13395, i16 13279, i16 13160, i16 13039, i16 12916, i16 12792, i16 12665, i16 12537, i16 12406, i16 12274, i16 12140, i16 12004, i16 11866, i16 11727, i16 11585, i16 11442, i16 11297, i16 11151, i16 11003, i16 10853, i16 10702, i16 10549, i16 10394, i16 10238, i16 10080, i16 9921, i16 9760, i16 9598, i16 9434, i16 9269, i16 9102, i16 8935, i16 8765, i16 8595, i16 8423, i16 8250, i16 8076, i16 7900, i16 7723, i16 7545, i16 7366, i16 7186, i16 7005, i16 6823, i16 6639, i16 6455, i16 6270, i16 6084, i16 5897, i16 5708, i16 5520, i16 5330, i16 5139, i16 4948, i16 4756, i16 4563, i16 4370, i16 4176, i16 3981, i16 3786, i16 3590, i16 3393, i16 3196, i16 2999, i16 2801, i16 2603, i16 2404, i16 2205, i16 2006, i16 1806, i16 1606, i16 1406, i16 1205, i16 1005, i16 804, i16 603, i16 402, i16 201, i16 0, i16 -201, i16 -402, i16 -603, i16 -804, i16 -1005, i16 -1205, i16 -1406, i16 -1606, i16 -1806, i16 -2006, i16 -2205, i16 -2404, i16 -2603, i16 -2801, i16 -2999, i16 -3196, i16 -3393, i16 -3590, i16 -3786, i16 -3981, i16 -4176, i16 -4370, i16 -4563, i16 -4756, i16 -4948, i16 -5139, i16 -5330, i16 -5520, i16 -5708, i16 -5897, i16 -6084, i16 -6270, i16 -6455, i16 -6639, i16 -6823, i16 -7005, i16 -7186, i16 -7366, i16 -7545, i16 -7723, i16 -7900, i16 -8076, i16 -8250, i16 -8423, i16 -8595, i16 -8765, i16 -8935, i16 -9102, i16 -9269, i16 -9434, i16 -9598, i16 -9760, i16 -9921, i16 -10080, i16 -10238, i16 -10394, i16 -10549, i16 -10702, i16 -10853, i16 -11003, i16 -11151, i16 -11297, i16 -11442, i16 -11585, i16 -11727, i16 -11866, i16 -12004, i16 -12140, i16 -12274, i16 -12406, i16 -12537, i16 -12665, i16 -12792, i16 -12916, i16 -13039, i16 -13160, i16 -13279, i16 -13395, i16 -13510, i16 -13623, i16 -13733, i16 -13842, i16 -13949, i16 -14053, i16 -14155, i16 -14256, i16 -14354, i16 -14449, i16 -14543, i16 -14635, i16 -14724, i16 -14811, i16 -14896, i16 -14978, i16 -15059, i16 -15137, i16 -15213, i16 -15286, i16 -15357, i16 -15426, i16 -15493, i16 -15557, i16 -15619, i16 -15679, i16 -15736, i16 -15791, i16 -15843, i16 -15893, i16 -15941, i16 -15986, i16 -16029, i16 -16069, i16 -16107, i16 -16143, i16 -16176, i16 -16207, i16 -16235, i16 -16261, i16 -16284, i16 -16305, i16 -16324, i16 -16340, i16 -16353, i16 -16364, i16 -16373, i16 -16379, i16 -16383, i16 -16384, i16 -16383, i16 -16379, i16 -16373, i16 -16364, i16 -16353, i16 -16340, i16 -16324, i16 -16305, i16 -16284, i16 -16261, i16 -16235, i16 -16207, i16 -16176, i16 -16143, i16 -16107, i16 -16069, i16 -16029, i16 -15986, i16 -15941, i16 -15893, i16 -15843, i16 -15791, i16 -15736, i16 -15679, i16 -15619, i16 -15557, i16 -15493, i16 -15426, i16 -15357, i16 -15286, i16 -15213, i16 -15137, i16 -15059, i16 -14978, i16 -14896, i16 -14811, i16 -14724, i16 -14635, i16 -14543, i16 -14449, i16 -14354, i16 -14256, i16 -14155, i16 -14053, i16 -13949, i16 -13842, i16 -13733, i16 -13623, i16 -13510, i16 -13395, i16 -13279, i16 -13160, i16 -13039, i16 -12916, i16 -12792, i16 -12665, i16 -12537, i16 -12406, i16 -12274, i16 -12140, i16 -12004, i16 -11866, i16 -11727, i16 -11585, i16 -11442, i16 -11297, i16 -11151, i16 -11003, i16 -10853, i16 -10702, i16 -10549, i16 -10394, i16 -10238, i16 -10080, i16 -9921, i16 -9760, i16 -9598, i16 -9434, i16 -9269, i16 -9102, i16 -8935, i16 -8765, i16 -8595, i16 -8423, i16 -8250, i16 -8076, i16 -7900, i16 -7723, i16 -7545, i16 -7366, i16 -7186, i16 -7005, i16 -6823, i16 -6639, i16 -6455, i16 -6270, i16 -6084, i16 -5897, i16 -5708, i16 -5520, i16 -5330, i16 -5139, i16 -4948, i16 -4756, i16 -4563, i16 -4370, i16 -4176, i16 -3981, i16 -3786, i16 -3590, i16 -3393, i16 -3196, i16 -2999, i16 -2801, i16 -2603, i16 -2404, i16 -2205, i16 -2006, i16 -1806, i16 -1606, i16 -1406, i16 -1205, i16 -1005, i16 -804, i16 -603, i16 -402, i16 -201, i16 0, i16 201, i16 402, i16 603, i16 804, i16 1005, i16 1205, i16 1406, i16 1606, i16 1806, i16 2006, i16 2205, i16 2404, i16 2603, i16 2801, i16 2999, i16 3196, i16 3393, i16 3590, i16 3786, i16 3981, i16 4176, i16 4370, i16 4563, i16 4756, i16 4948, i16 5139, i16 5330, i16 5520, i16 5708, i16 5897, i16 6084, i16 6270, i16 6455, i16 6639, i16 6823, i16 7005, i16 7186, i16 7366, i16 7545, i16 7723, i16 7900, i16 8076, i16 8250, i16 8423, i16 8595, i16 8765, i16 8935, i16 9102, i16 9269, i16 9434, i16 9598, i16 9760, i16 9921, i16 10080, i16 10238, i16 10394, i16 10549, i16 10702, i16 10853, i16 11003, i16 11151, i16 11297, i16 11442, i16 11585, i16 11727, i16 11866, i16 12004, i16 12140, i16 12274, i16 12406, i16 12537, i16 12665, i16 12792, i16 12916, i16 13039, i16 13160, i16 13279, i16 13395, i16 13510, i16 13623, i16 13733, i16 13842, i16 13949, i16 14053, i16 14155, i16 14256, i16 14354, i16 14449, i16 14543, i16 14635, i16 14724, i16 14811, i16 14896, i16 14978, i16 15059, i16 15137, i16 15213, i16 15286, i16 15357, i16 15426, i16 15493, i16 15557, i16 15619, i16 15679, i16 15736, i16 15791, i16 15843, i16 15893, i16 15941, i16 15986, i16 16029, i16 16069, i16 16107, i16 16143, i16 16176, i16 16207, i16 16235, i16 16261, i16 16284, i16 16305, i16 16324, i16 16340, i16 16353, i16 16364, i16 16373, i16 16379, i16 16383, i16 16384], align 16
@lsp_band0 = internal constant [256 x [3 x i16]] [[3 x i16] zeroinitializer, [3 x i16] [i16 -270, i16 -1372, i16 -1032], [3 x i16] [i16 -541, i16 -1650, i16 -1382], [3 x i16] [i16 -723, i16 -2011, i16 -2213], [3 x i16] [i16 -941, i16 -1122, i16 -1942], [3 x i16] [i16 -780, i16 -1145, i16 -2454], [3 x i16] [i16 -884, i16 -1309, i16 -1373], [3 x i16] [i16 -1051, i16 -1523, i16 -1766], [3 x i16] [i16 -1083, i16 -1622, i16 -2300], [3 x i16] [i16 -777, i16 -1377, i16 -2147], [3 x i16] [i16 -935, i16 -1467, i16 -2763], [3 x i16] [i16 -802, i16 -1327, i16 -3471], [3 x i16] [i16 -935, i16 -1959, i16 -3999], [3 x i16] [i16 -240, i16 -89, i16 222], [3 x i16] [i16 -661, i16 -257, i16 -160], [3 x i16] [i16 -994, i16 -466, i16 -419], [3 x i16] [i16 -188, i16 -164, i16 -278], [3 x i16] [i16 -342, i16 -512, i16 -415], [3 x i16] [i16 -607, i16 -511, i16 -797], [3 x i16] [i16 16, i16 19, i16 -716], [3 x i16] [i16 374, i16 425, i16 -972], [3 x i16] [i16 -346, i16 245, i16 -282], [3 x i16] [i16 -265, i16 506, i16 -754], [3 x i16] [i16 -620, i16 -147, i16 1955], [3 x i16] [i16 -742, i16 -860, i16 2597], [3 x i16] [i16 -150, i16 -352, i16 2704], [3 x i16] [i16 305, i16 880, i16 1954], [3 x i16] [i16 123, i16 731, i16 2766], [3 x i16] [i16 -348, i16 765, i16 3327], [3 x i16] [i16 618, i16 221, i16 3258], [3 x i16] [i16 -178, i16 -47, i16 4219], [3 x i16] [i16 393, i16 1304, i16 3842], [3 x i16] [i16 698, i16 1702, i16 4801], [3 x i16] [i16 63, i16 -584, i16 1229], [3 x i16] [i16 -215, i16 -732, i16 1704], [3 x i16] [i16 172, i16 -335, i16 1909], [3 x i16] [i16 -2, i16 216, i16 1797], [3 x i16] [i16 353, i16 127, i16 2205], [3 x i16] [i16 -1208, i16 188, i16 11], [3 x i16] [i16 -513, i16 -75, i16 -683], [3 x i16] [i16 -973, i16 222, i16 -646], [3 x i16] [i16 -616, i16 -843, i16 -388], [3 x i16] [i16 -950, i16 -1113, i16 -359], [3 x i16] [i16 -1431, i16 -623, i16 -705], [3 x i16] [i16 -1398, i16 -1063, i16 -178], [3 x i16] [i16 -45, i16 -461, i16 35], [3 x i16] [i16 -9, i16 -657, i16 -216], [3 x i16] [i16 127, i16 -1078, i16 95], [3 x i16] [i16 -950, i16 -1156, i16 584], [3 x i16] [i16 -1480, i16 -1494, i16 449], [3 x i16] [i16 -120, i16 -705, i16 516], [3 x i16] [i16 -368, i16 -961, i16 727], [3 x i16] [i16 -378, i16 -526, i16 973], [3 x i16] [i16 -793, i16 -614, i16 676], [3 x i16] [i16 -801, i16 -755, i16 1287], [3 x i16] [i16 -1476, i16 -340, i16 1636], [3 x i16] [i16 -505, i16 -1254, i16 1543], [3 x i16] [i16 -1243, i16 -1622, i16 1532], [3 x i16] [i16 -776, i16 -1477, i16 -655], [3 x i16] [i16 -1151, i16 -1296, i16 -823], [3 x i16] [i16 -1153, i16 -1672, i16 -1124], [3 x i16] [i16 -1291, i16 -2003, i16 -1702], [3 x i16] [i16 -622, i16 -1283, i16 57], [3 x i16] [i16 -471, i16 -1611, i16 509], [3 x i16] [i16 -1060, i16 -1570, i16 -139], [3 x i16] [i16 -873, i16 -2156, i16 -536], [3 x i16] [i16 -1716, i16 -2021, i16 -364], [3 x i16] [i16 -2150, i16 -3218, i16 -1291], [3 x i16] [i16 -1248, i16 -1945, i16 -2904], [3 x i16] [i16 -1215, i16 -2633, i16 -2855], [3 x i16] [i16 167, i16 -244, i16 84], [3 x i16] [i16 349, i16 -412, i16 -217], [3 x i16] [i16 -40, i16 -352, i16 632], [3 x i16] [i16 227, i16 -529, i16 405], [3 x i16] [i16 68, i16 -383, i16 -443], [3 x i16] [i16 167, i16 -558, i16 -706], [3 x i16] [i16 -275, i16 -854, i16 -14], [3 x i16] [i16 -351, i16 -1089, i16 -449], [3 x i16] [i16 341, i16 -72, i16 -289], [3 x i16] [i16 603, i16 -106, i16 -474], [3 x i16] [i16 322, i16 -219, i16 -649], [3 x i16] [i16 179, i16 -317, i16 -998], [3 x i16] [i16 450, i16 -291, i16 -996], [3 x i16] [i16 555, i16 195, i16 -525], [3 x i16] [i16 784, i16 272, i16 -831], [3 x i16] [i16 -148, i16 -384, i16 -849], [3 x i16] [i16 82, i16 -536, i16 -1357], [3 x i16] [i16 238, i16 -172, i16 -1354], [3 x i16] [i16 422, i16 -268, i16 -1841], [3 x i16] [i16 297, i16 -737, i16 -2079], [3 x i16] [i16 -111, i16 -801, i16 -598], [3 x i16] [i16 1, i16 -668, i16 -984], [3 x i16] [i16 -131, i16 -818, i16 -1299], [3 x i16] [i16 -329, i16 -521, i16 -1310], [3 x i16] [i16 -151, i16 -778, i16 -1834], [3 x i16] [i16 -93, i16 -352, i16 -1746], [3 x i16] [i16 -568, i16 -640, i16 -1821], [3 x i16] [i16 -509, i16 -941, i16 -2183], [3 x i16] [i16 464, i16 -815, i16 -1250], [3 x i16] [i16 79, i16 -1133, i16 -1597], [3 x i16] [i16 -184, i16 -1353, i16 -2123], [3 x i16] [i16 -196, i16 -410, i16 -2427], [3 x i16] [i16 -192, i16 -833, i16 -2810], [3 x i16] [i16 -259, i16 -1382, i16 -3045], [3 x i16] [i16 -217, i16 4, i16 -1166], [3 x i16] [i16 -800, i16 -325, i16 -1219], [3 x i16] [i16 -363, i16 -830, i16 -898], [3 x i16] [i16 -661, i16 -1134, i16 -960], [3 x i16] [i16 -386, i16 -980, i16 -1501], [3 x i16] [i16 -627, i16 -1159, i16 -1722], [3 x i16] [i16 -903, i16 -829, i16 -855], [3 x i16] [i16 -685, i16 -829, i16 -1313], [3 x i16] [i16 -1065, i16 -959, i16 -1405], [3 x i16] [i16 441, i16 25, i16 -847], [3 x i16] [i16 655, i16 -27, i16 -1181], [3 x i16] [i16 1159, i16 -110, i16 -705], [3 x i16] [i16 856, i16 253, i16 -1671], [3 x i16] [i16 415, i16 404, i16 -1], [3 x i16] [i16 322, i16 903, i16 -398], [3 x i16] [i16 670, i16 499, i16 -292], [3 x i16] [i16 803, i16 591, i16 -610], [3 x i16] [i16 1144, i16 591, i16 -814], [3 x i16] [i16 717, i16 183, i16 393], [3 x i16] [i16 857, i16 381, i16 106], [3 x i16] [i16 609, i16 62, i16 -27], [3 x i16] [i16 792, i16 198, i16 -325], [3 x i16] [i16 735, i16 805, i16 88], [3 x i16] [i16 1142, i16 812, i16 78], [3 x i16] [i16 1028, i16 366, i16 -292], [3 x i16] [i16 1309, i16 743, i16 -237], [3 x i16] [i16 1615, i16 589, i16 -79], [3 x i16] [i16 1010, i16 639, i16 -243], [3 x i16] [i16 999, i16 964, i16 -311], [3 x i16] [i16 1500, i16 1137, i16 -615], [3 x i16] [i16 988, i16 357, i16 646], [3 x i16] [i16 1227, i16 667, i16 683], [3 x i16] [i16 1164, i16 1565, i16 894], [3 x i16] [i16 1392, i16 2015, i16 477], [3 x i16] [i16 1138, i16 533, i16 250], [3 x i16] [i16 1437, i16 896, i16 391], [3 x i16] [i16 1765, i16 1118, i16 99], [3 x i16] [i16 1112, i16 1090, i16 802], [3 x i16] [i16 1596, i16 846, i16 1134], [3 x i16] [i16 937, i16 1161, i16 279], [3 x i16] [i16 1719, i16 1254, i16 683], [3 x i16] [i16 1338, i16 1086, i16 35], [3 x i16] [i16 1419, i16 1324, i16 428], [3 x i16] [i16 1428, i16 1524, i16 40], [3 x i16] [i16 2108, i16 1594, i16 89], [3 x i16] [i16 1015, i16 544, i16 1222], [3 x i16] [i16 1121, i16 925, i16 1263], [3 x i16] [i16 1030, i16 1318, i16 1485], [3 x i16] [i16 1295, i16 789, i16 1817], [3 x i16] [i16 1323, i16 1272, i16 1909], [3 x i16] [i16 1724, i16 1237, i16 1803], [3 x i16] [i16 1797, i16 1689, i16 858], [3 x i16] [i16 2149, i16 1367, i16 1301], [3 x i16] [i16 2302, i16 1867, i16 761], [3 x i16] [i16 2863, i16 2351, i16 1053], [3 x i16] [i16 52, i16 163, i16 -76], [3 x i16] [i16 230, i16 309, i16 -492], [3 x i16] [i16 -71, i16 619, i16 39], [3 x i16] [i16 -218, i16 856, i16 499], [3 x i16] [i16 -654, i16 736, i16 -207], [3 x i16] [i16 -535, i16 1259, i16 155], [3 x i16] [i16 -480, i16 1476, i16 643], [3 x i16] [i16 262, i16 1081, i16 102], [3 x i16] [i16 309, i16 1592, i16 -182], [3 x i16] [i16 627, i16 1629, i16 534], [3 x i16] [i16 337, i16 643, i16 456], [3 x i16] [i16 758, i16 670, i16 713], [3 x i16] [i16 202, i16 1126, i16 658], [3 x i16] [i16 612, i16 1131, i16 666], [3 x i16] [i16 686, i16 1223, i16 1136], [3 x i16] [i16 -131, i16 377, i16 525], [3 x i16] [i16 42, i16 708, i16 907], [3 x i16] [i16 87, i16 1488, i16 1035], [3 x i16] [i16 432, i16 2117, i16 904], [3 x i16] [i16 137, i16 981, i16 1332], [3 x i16] [i16 -447, i16 1014, i16 1136], [3 x i16] [i16 -839, i16 1793, i16 1246], [3 x i16] [i16 -559, i16 297, i16 198], [3 x i16] [i16 -850, i16 685, i16 446], [3 x i16] [i16 -1273, i16 632, i16 826], [3 x i16] [i16 -401, i16 -544, i16 173], [3 x i16] [i16 -753, i16 -793, i16 144], [3 x i16] [i16 -436, i16 -9, i16 772], [3 x i16] [i16 -115, i16 -243, i16 1310], [3 x i16] [i16 -670, i16 -269, i16 374], [3 x i16] [i16 -1027, i16 -13, i16 639], [3 x i16] [i16 -887, i16 -81, i16 1137], [3 x i16] [i16 -1277, i16 -455, i16 158], [3 x i16] [i16 -1411, i16 -720, i16 736], [3 x i16] [i16 172, i16 88, i16 403], [3 x i16] [i16 386, i16 255, i16 756], [3 x i16] [i16 -500, i16 522, i16 910], [3 x i16] [i16 -958, i16 659, i16 1388], [3 x i16] [i16 -395, i16 301, i16 1344], [3 x i16] [i16 -356, i16 768, i16 1813], [3 x i16] [i16 -613, i16 841, i16 2419], [3 x i16] [i16 445, i16 -122, i16 252], [3 x i16] [i16 629, i16 -87, i16 723], [3 x i16] [i16 283, i16 -253, i16 870], [3 x i16] [i16 456, i16 -116, i16 1381], [3 x i16] [i16 757, i16 180, i16 1059], [3 x i16] [i16 532, i16 408, i16 1509], [3 x i16] [i16 947, i16 288, i16 1806], [3 x i16] [i16 1325, i16 994, i16 2524], [3 x i16] [i16 892, i16 1219, i16 3023], [3 x i16] [i16 1397, i16 1596, i16 3406], [3 x i16] [i16 1143, i16 1552, i16 2546], [3 x i16] [i16 1850, i16 1433, i16 2710], [3 x i16] [i16 -10, i16 134, i16 1002], [3 x i16] [i16 154, i16 499, i16 1323], [3 x i16] [i16 508, i16 792, i16 1117], [3 x i16] [i16 509, i16 1340, i16 1616], [3 x i16] [i16 762, i16 862, i16 1608], [3 x i16] [i16 787, i16 740, i16 2320], [3 x i16] [i16 794, i16 1727, i16 1283], [3 x i16] [i16 465, i16 2108, i16 1660], [3 x i16] [i16 -120, i16 1451, i16 1613], [3 x i16] [i16 -386, i16 2016, i16 2169], [3 x i16] [i16 891, i16 1225, i16 2050], [3 x i16] [i16 456, i16 1480, i16 2185], [3 x i16] [i16 1493, i16 1283, i16 1209], [3 x i16] [i16 1397, i16 1636, i16 1518], [3 x i16] [i16 1776, i16 1738, i16 1552], [3 x i16] [i16 1572, i16 1698, i16 2141], [3 x i16] [i16 1389, i16 2126, i16 1271], [3 x i16] [i16 1959, i16 2413, i16 1119], [3 x i16] [i16 1365, i16 2892, i16 1505], [3 x i16] [i16 2206, i16 1971, i16 1623], [3 x i16] [i16 2076, i16 1950, i16 2280], [3 x i16] [i16 1717, i16 2291, i16 1867], [3 x i16] [i16 2366, i16 2515, i16 1953], [3 x i16] [i16 2865, i16 2838, i16 2522], [3 x i16] [i16 2535, i16 3465, i16 2011], [3 x i16] [i16 3381, i16 4127, i16 2638], [3 x i16] [i16 836, i16 2667, i16 2289], [3 x i16] [i16 1761, i16 2773, i16 2337], [3 x i16] [i16 1415, i16 3325, i16 2911], [3 x i16] [i16 2354, i16 3138, i16 3126], [3 x i16] [i16 2659, i16 4192, i16 4010], [3 x i16] [i16 1048, i16 1786, i16 1818], [3 x i16] [i16 1242, i16 2111, i16 2240], [3 x i16] [i16 1512, i16 2079, i16 2780], [3 x i16] [i16 1573, i16 2491, i16 3138], [3 x i16] [i16 2230, i16 2377, i16 2782], [3 x i16] [i16 416, i16 1773, i16 2704], [3 x i16] [i16 725, i16 2336, i16 3297], [3 x i16] [i16 1252, i16 2373, i16 3978], [3 x i16] [i16 2094, i16 2268, i16 3568], [3 x i16] [i16 2011, i16 2712, i16 4528], [3 x i16] [i16 1341, i16 3507, i16 3876], [3 x i16] [i16 1216, i16 3919, i16 4922], [3 x i16] [i16 1693, i16 4793, i16 6012]], align 16
@lsp_band1 = internal constant [256 x [3 x i16]] [[3 x i16] zeroinitializer, [3 x i16] [i16 -2114, i16 -1302, i16 76], [3 x i16] [i16 -2652, i16 -1278, i16 -1368], [3 x i16] [i16 -2847, i16 -828, i16 -349], [3 x i16] [i16 -3812, i16 -2190, i16 -349], [3 x i16] [i16 -3946, i16 -364, i16 -449], [3 x i16] [i16 -2725, i16 -4492, i16 -3607], [3 x i16] [i16 -3495, i16 -4764, i16 -1744], [3 x i16] [i16 -51, i16 -756, i16 84], [3 x i16] [i16 -153, i16 -1191, i16 504], [3 x i16] [i16 108, i16 -1418, i16 1167], [3 x i16] [i16 -835, i16 -896, i16 390], [3 x i16] [i16 -569, i16 -1702, i16 87], [3 x i16] [i16 -1151, i16 -1818, i16 933], [3 x i16] [i16 -1826, i16 -2547, i16 411], [3 x i16] [i16 -1842, i16 -1818, i16 1451], [3 x i16] [i16 -2438, i16 -1611, i16 781], [3 x i16] [i16 -2747, i16 -2477, i16 1311], [3 x i16] [i16 -940, i16 1252, i16 477], [3 x i16] [i16 -1629, i16 1688, i16 602], [3 x i16] [i16 -1202, i16 617, i16 280], [3 x i16] [i16 -1737, i16 393, i16 580], [3 x i16] [i16 -1528, i16 1077, i16 1199], [3 x i16] [i16 -2165, i16 -161, i16 1408], [3 x i16] [i16 -2504, i16 -1087, i16 2371], [3 x i16] [i16 -3458, i16 -175, i16 1395], [3 x i16] [i16 -1397, i16 -98, i16 -843], [3 x i16] [i16 -2252, i16 -177, i16 -1149], [3 x i16] [i16 -1489, i16 -726, i16 -1283], [3 x i16] [i16 -1558, i16 -265, i16 -1744], [3 x i16] [i16 -1867, i16 -821, i16 -1897], [3 x i16] [i16 -2062, i16 -1516, i16 -2340], [3 x i16] [i16 -2595, i16 -1142, i16 -2861], [3 x i16] [i16 170, i16 46, i16 -819], [3 x i16] [i16 -193, i16 -204, i16 -1151], [3 x i16] [i16 326, i16 -196, i16 -1532], [3 x i16] [i16 780, i16 329, i16 -816], [3 x i16] [i16 201, i16 369, i16 -1243], [3 x i16] [i16 650, i16 -209, i16 -1060], [3 x i16] [i16 1144, i16 -15, i16 -1216], [3 x i16] [i16 1203, i16 -259, i16 -1867], [3 x i16] [i16 -890, i16 -564, i16 -1430], [3 x i16] [i16 -638, i16 -852, i16 -1921], [3 x i16] [i16 177, i16 -739, i16 -1358], [3 x i16] [i16 -261, i16 -526, i16 -1666], [3 x i16] [i16 206, i16 -407, i16 -2255], [3 x i16] [i16 338, i16 -526, i16 -822], [3 x i16] [i16 421, i16 -1095, i16 -1009], [3 x i16] [i16 765, i16 -607, i16 -1408], [3 x i16] [i16 825, i16 -1295, i16 -2004], [3 x i16] [i16 357, i16 -905, i16 -1815], [3 x i16] [i16 -58, i16 -1248, i16 -1588], [3 x i16] [i16 -596, i16 -1436, i16 -2046], [3 x i16] [i16 -73, i16 -1159, i16 -2116], [3 x i16] [i16 -115, i16 -1382, i16 -2581], [3 x i16] [i16 -160, i16 -1723, i16 -1952], [3 x i16] [i16 -6, i16 -2196, i16 -2954], [3 x i16] [i16 -649, i16 -1705, i16 -2603], [3 x i16] [i16 -617, i16 -1453, i16 -3282], [3 x i16] [i16 -949, i16 -2019, i16 -3102], [3 x i16] [i16 -812, i16 1544, i16 1937], [3 x i16] [i16 -1854, i16 574, i16 2000], [3 x i16] [i16 -1463, i16 1140, i16 2649], [3 x i16] [i16 -2683, i16 1748, i16 1452], [3 x i16] [i16 -2486, i16 2241, i16 2523], [3 x i16] [i16 783, i16 1910, i16 1435], [3 x i16] [i16 581, i16 2682, i16 1376], [3 x i16] [i16 236, i16 2197, i16 1885], [3 x i16] [i16 -453, i16 2943, i16 2057], [3 x i16] [i16 -682, i16 2178, i16 2565], [3 x i16] [i16 -1342, i16 3201, i16 3328], [3 x i16] [i16 -288, i16 -184, i16 262], [3 x i16] [i16 121, i16 -149, i16 -183], [3 x i16] [i16 758, i16 -412, i16 206], [3 x i16] [i16 1038, i16 -204, i16 853], [3 x i16] [i16 1577, i16 -457, i16 700], [3 x i16] [i16 937, i16 -640, i16 -567], [3 x i16] [i16 1508, i16 -528, i16 -1024], [3 x i16] [i16 -225, i16 -527, i16 -427], [3 x i16] [i16 -564, i16 -1095, i16 -332], [3 x i16] [i16 -742, i16 -353, i16 -186], [3 x i16] [i16 -1288, i16 -459, i16 84], [3 x i16] [i16 -1853, i16 -484, i16 -274], [3 x i16] [i16 -1554, i16 -731, i16 825], [3 x i16] [i16 -2425, i16 -234, i16 382], [3 x i16] [i16 -1722, i16 293, i16 -271], [3 x i16] [i16 -2515, i16 425, i16 -564], [3 x i16] [i16 -2599, i16 818, i16 464], [3 x i16] [i16 -358, i16 118, i16 -375], [3 x i16] [i16 -613, i16 198, i16 -874], [3 x i16] [i16 -690, i16 683, i16 -324], [3 x i16] [i16 -1352, i16 1155, i16 -168], [3 x i16] [i16 -1093, i16 129, i16 -324], [3 x i16] [i16 -1184, i16 611, i16 -858], [3 x i16] [i16 433, i16 386, i16 -372], [3 x i16] [i16 -120, i16 486, i16 -634], [3 x i16] [i16 234, i16 851, i16 -631], [3 x i16] [i16 602, i16 128, i16 46], [3 x i16] [i16 1099, i16 410, i16 159], [3 x i16] [i16 715, i16 -145, i16 -424], [3 x i16] [i16 1198, i16 -85, i16 -593], [3 x i16] [i16 1390, i16 367, i16 -358], [3 x i16] [i16 1683, i16 362, i16 -964], [3 x i16] [i16 1711, i16 622, i16 45], [3 x i16] [i16 2033, i16 833, i16 -383], [3 x i16] [i16 2890, i16 549, i16 -506], [3 x i16] [i16 7, i16 401, i16 52], [3 x i16] [i16 72, i16 811, i16 415], [3 x i16] [i16 566, i16 668, i16 41], [3 x i16] [i16 467, i16 1218, i16 130], [3 x i16] [i16 68, i16 957, i16 -187], [3 x i16] [i16 -25, i16 1649, i16 -103], [3 x i16] [i16 -661, i16 260, i16 214], [3 x i16] [i16 -925, i16 -94, i16 612], [3 x i16] [i16 -321, i16 -422, i16 965], [3 x i16] [i16 -788, i16 -672, i16 1783], [3 x i16] [i16 400, i16 -673, i16 779], [3 x i16] [i16 741, i16 -595, i16 1635], [3 x i16] [i16 -161, i16 307, i16 657], [3 x i16] [i16 -382, i16 836, i16 871], [3 x i16] [i16 -814, i16 400, i16 1223], [3 x i16] [i16 364, i16 606, i16 1247], [3 x i16] [i16 57, i16 75, i16 1571], [3 x i16] [i16 151, i16 471, i16 2287], [3 x i16] [i16 -81, i16 1021, i16 1502], [3 x i16] [i16 227, i16 1470, i16 1097], [3 x i16] [i16 658, i16 1275, i16 1653], [3 x i16] [i16 664, i16 1478, i16 2377], [3 x i16] [i16 263, i16 -127, i16 444], [3 x i16] [i16 264, i16 89, i16 969], [3 x i16] [i16 794, i16 171, i16 576], [3 x i16] [i16 821, i16 186, i16 1226], [3 x i16] [i16 404, i16 462, i16 517], [3 x i16] [i16 339, i16 918, i16 794], [3 x i16] [i16 1280, i16 1423, i16 196], [3 x i16] [i16 1453, i16 2019, i16 365], [3 x i16] [i16 1615, i16 1481, i16 672], [3 x i16] [i16 2394, i16 1708, i16 508], [3 x i16] [i16 806, i16 1238, i16 573], [3 x i16] [i16 713, i16 1158, i16 1078], [3 x i16] [i16 1285, i16 1436, i16 1232], [3 x i16] [i16 1790, i16 1188, i16 1141], [3 x i16] [i16 765, i16 643, i16 864], [3 x i16] [i16 1032, i16 797, i16 1279], [3 x i16] [i16 900, i16 563, i16 1827], [3 x i16] [i16 1514, i16 673, i16 2312], [3 x i16] [i16 1544, i16 1129, i16 3240], [3 x i16] [i16 1469, i16 1050, i16 1594], [3 x i16] [i16 1945, i16 1318, i16 1988], [3 x i16] [i16 2397, i16 2026, i16 2060], [3 x i16] [i16 3538, i16 2057, i16 2620], [3 x i16] [i16 1249, i16 -118, i16 74], [3 x i16] [i16 1727, i16 194, i16 421], [3 x i16] [i16 2078, i16 -50, i16 -463], [3 x i16] [i16 970, i16 688, i16 -432], [3 x i16] [i16 1149, i16 952, i16 -110], [3 x i16] [i16 1254, i16 1275, i16 -651], [3 x i16] [i16 1386, i16 929, i16 401], [3 x i16] [i16 1960, i16 1167, i16 232], [3 x i16] [i16 407, i16 -752, i16 -243], [3 x i16] [i16 859, i16 -1118, i16 172], [3 x i16] [i16 -227, i16 -860, i16 -992], [3 x i16] [i16 -796, i16 -1175, i16 -1380], [3 x i16] [i16 8, i16 -1282, i16 -388], [3 x i16] [i16 353, i16 -1781, i16 -1037], [3 x i16] [i16 -732, i16 -397, i16 -807], [3 x i16] [i16 -853, i16 -28, i16 -1342], [3 x i16] [i16 -1229, i16 -1207, i16 -1959], [3 x i16] [i16 -1015, i16 -1125, i16 -2543], [3 x i16] [i16 -1452, i16 -1791, i16 -2725], [3 x i16] [i16 -1891, i16 -2416, i16 -3269], [3 x i16] [i16 -918, i16 -1629, i16 -783], [3 x i16] [i16 -580, i16 -2155, i16 -698], [3 x i16] [i16 -1097, i16 -2364, i16 -96], [3 x i16] [i16 -1387, i16 -1513, i16 7], [3 x i16] [i16 -1588, i16 -2076, i16 -664], [3 x i16] [i16 -1473, i16 -2740, i16 -784], [3 x i16] [i16 -2378, i16 -3149, i16 -56], [3 x i16] [i16 -2856, i16 -2092, i16 -169], [3 x i16] [i16 -3391, i16 -3708, i16 316], [3 x i16] [i16 -1176, i16 -890, i16 -614], [3 x i16] [i16 -1944, i16 -1061, i16 -800], [3 x i16] [i16 -299, i16 -1517, i16 -1000], [3 x i16] [i16 -640, i16 -1850, i16 -1526], [3 x i16] [i16 -1454, i16 -1536, i16 -1233], [3 x i16] [i16 -1890, i16 -1955, i16 -1756], [3 x i16] [i16 -1086, i16 -1921, i16 -2122], [3 x i16] [i16 -750, i16 -2325, i16 -2260], [3 x i16] [i16 -1325, i16 -2413, i16 -2673], [3 x i16] [i16 -1114, i16 -2542, i16 -3459], [3 x i16] [i16 -1341, i16 -2901, i16 -3963], [3 x i16] [i16 -1160, i16 -2226, i16 -1393], [3 x i16] [i16 -1001, i16 -2772, i16 -1573], [3 x i16] [i16 -1594, i16 -2641, i16 -1978], [3 x i16] [i16 -1534, i16 -3046, i16 -2624], [3 x i16] [i16 -2224, i16 -2196, i16 -675], [3 x i16] [i16 -2807, i16 -3054, i16 -1102], [3 x i16] [i16 -2008, i16 -2840, i16 -1186], [3 x i16] [i16 -1980, i16 -3332, i16 -1695], [3 x i16] [i16 -1715, i16 -3562, i16 -505], [3 x i16] [i16 -2527, i16 -4000, i16 -1887], [3 x i16] [i16 -2333, i16 -2734, i16 -2296], [3 x i16] [i16 -3440, i16 -2401, i16 -3211], [3 x i16] [i16 -2008, i16 -3528, i16 -3337], [3 x i16] [i16 -2247, i16 -3291, i16 -4510], [3 x i16] [i16 -475, i16 949, i16 155], [3 x i16] [i16 -149, i16 1365, i16 545], [3 x i16] [i16 -757, i16 1644, i16 1083], [3 x i16] [i16 -217, i16 2053, i16 1353], [3 x i16] [i16 -1433, i16 2301, i16 1462], [3 x i16] [i16 495, i16 1661, i16 529], [3 x i16] [i16 10, i16 2037, i16 740], [3 x i16] [i16 2082, i16 1898, i16 978], [3 x i16] [i16 2831, i16 2294, i16 911], [3 x i16] [i16 842, i16 793, i16 420], [3 x i16] [i16 1223, i16 1023, i16 863], [3 x i16] [i16 1237, i16 451, i16 780], [3 x i16] [i16 1744, i16 708, i16 822], [3 x i16] [i16 1533, i16 284, i16 1384], [3 x i16] [i16 2135, i16 609, i16 1538], [3 x i16] [i16 2305, i16 626, i16 540], [3 x i16] [i16 2368, i16 1187, i16 955], [3 x i16] [i16 2586, i16 1255, i16 -7], [3 x i16] [i16 3116, i16 1131, i16 726], [3 x i16] [i16 3431, i16 1730, i16 428], [3 x i16] [i16 2734, i16 1648, i16 1307], [3 x i16] [i16 2988, i16 1231, i16 2010], [3 x i16] [i16 3523, i16 2024, i16 1488], [3 x i16] [i16 1034, i16 1657, i16 871], [3 x i16] [i16 1206, i16 2163, i16 1036], [3 x i16] [i16 1807, i16 2372, i16 1233], [3 x i16] [i16 1808, i16 1769, i16 1493], [3 x i16] [i16 1573, i16 2332, i16 1779], [3 x i16] [i16 1216, i16 1609, i16 1866], [3 x i16] [i16 1480, i16 1898, i16 2513], [3 x i16] [i16 465, i16 2708, i16 2776], [3 x i16] [i16 771, i16 3638, i16 3338], [3 x i16] [i16 1869, i16 2599, i16 2623], [3 x i16] [i16 2825, i16 2745, i16 2468], [3 x i16] [i16 2638, i16 2439, i16 1585], [3 x i16] [i16 2094, i16 2970, i16 1308], [3 x i16] [i16 2022, i16 3057, i16 1999], [3 x i16] [i16 3428, i16 2912, i16 1816], [3 x i16] [i16 4536, i16 2974, i16 2129], [3 x i16] [i16 1046, i16 2563, i16 2086], [3 x i16] [i16 1363, i16 3562, i16 2318], [3 x i16] [i16 2511, i16 1891, i16 2984], [3 x i16] [i16 1866, i16 2306, i16 3986], [3 x i16] [i16 3272, i16 2924, i16 3682], [3 x i16] [i16 3146, i16 3564, i16 2272], [3 x i16] [i16 3592, i16 3968, i16 2822], [3 x i16] [i16 2431, i16 3369, i16 3069], [3 x i16] [i16 1931, i16 4709, i16 3090], [3 x i16] [i16 2629, i16 4220, i16 3986], [3 x i16] [i16 4639, i16 4056, i16 3664], [3 x i16] [i16 4035, i16 5334, i16 4912]], align 16
@lsp_band2 = internal constant [256 x [4 x i16]] [[4 x i16] zeroinitializer, [4 x i16] [i16 601, i16 512, i16 -542, i16 334], [4 x i16] [i16 428, i16 1087, i16 -484, i16 -132], [4 x i16] [i16 652, i16 622, i16 -391, i16 -572], [4 x i16] [i16 378, i16 799, i16 141, i16 -860], [4 x i16] [i16 1040, i16 409, i16 112, i16 -554], [4 x i16] [i16 1123, i16 670, i16 -75, i16 -847], [4 x i16] [i16 1421, i16 494, i16 -315, i16 -1095], [4 x i16] [i16 787, i16 1001, i16 114, i16 -460], [4 x i16] [i16 988, i16 1672, i16 216, i16 -681], [4 x i16] [i16 1007, i16 1241, i16 -132, i16 -1247], [4 x i16] [i16 1073, i16 399, i16 186, i16 -5], [4 x i16] [i16 1262, i16 193, i16 -694, i16 -129], [4 x i16] [i16 325, i16 196, i16 51, i16 -641], [4 x i16] [i16 861, i16 -59, i16 350, i16 -458], [4 x i16] [i16 1261, i16 567, i16 586, i16 -346], [4 x i16] [i16 1532, i16 885, i16 210, i16 -517], [4 x i16] [i16 2027, i16 937, i16 113, i16 -792], [4 x i16] [i16 1383, i16 1064, i16 334, i16 38], [4 x i16] [i16 1964, i16 1468, i16 459, i16 133], [4 x i16] [i16 2062, i16 1186, i16 -98, i16 -121], [4 x i16] [i16 2577, i16 1445, i16 506, i16 -373], [4 x i16] [i16 2310, i16 1682, i16 -2, i16 -960], [4 x i16] [i16 2876, i16 1939, i16 765, i16 138], [4 x i16] [i16 3581, i16 2360, i16 649, i16 -414], [4 x i16] [i16 219, i16 176, i16 -398, i16 -309], [4 x i16] [i16 434, i16 -78, i16 -435, i16 -880], [4 x i16] [i16 -344, i16 301, i16 265, i16 -552], [4 x i16] [i16 -915, i16 470, i16 657, i16 -380], [4 x i16] [i16 419, i16 -432, i16 -163, i16 -453], [4 x i16] [i16 351, i16 -953, i16 8, i16 -562], [4 x i16] [i16 789, i16 -43, i16 20, i16 -958], [4 x i16] [i16 302, i16 -594, i16 -352, i16 -1159], [4 x i16] [i16 1040, i16 108, i16 -668, i16 -924], [4 x i16] [i16 1333, i16 210, i16 -1217, i16 -1663], [4 x i16] [i16 483, i16 589, i16 -350, i16 -1140], [4 x i16] [i16 1003, i16 824, i16 -802, i16 -1184], [4 x i16] [i16 745, i16 58, i16 -589, i16 -1443], [4 x i16] [i16 346, i16 247, i16 -915, i16 -1683], [4 x i16] [i16 270, i16 796, i16 -720, i16 -2043], [4 x i16] [i16 1208, i16 722, i16 -222, i16 -193], [4 x i16] [i16 1486, i16 1180, i16 -412, i16 -672], [4 x i16] [i16 1722, i16 179, i16 -69, i16 -521], [4 x i16] [i16 2047, i16 860, i16 -666, i16 -1410], [4 x i16] [i16 -146, i16 222, i16 -281, i16 -805], [4 x i16] [i16 -189, i16 90, i16 -114, i16 -1307], [4 x i16] [i16 -152, i16 1086, i16 -241, i16 -764], [4 x i16] [i16 -439, i16 733, i16 -601, i16 -1302], [4 x i16] [i16 -833, i16 -167, i16 -351, i16 -601], [4 x i16] [i16 -856, i16 -422, i16 -411, i16 -1059], [4 x i16] [i16 -747, i16 -355, i16 -582, i16 -1644], [4 x i16] [i16 -837, i16 210, i16 -916, i16 -1144], [4 x i16] [i16 -1800, i16 32, i16 -878, i16 -1687], [4 x i16] [i16 -48, i16 -23, i16 -1146, i16 52], [4 x i16] [i16 -350, i16 -409, i16 -1656, i16 -364], [4 x i16] [i16 265, i16 -728, i16 -858, i16 -577], [4 x i16] [i16 458, i16 -247, i16 -1141, i16 -997], [4 x i16] [i16 691, i16 -407, i16 -1988, i16 -1161], [4 x i16] [i16 -66, i16 -104, i16 -705, i16 -1249], [4 x i16] [i16 -431, i16 -93, i16 -1191, i16 -1844], [4 x i16] [i16 203, i16 -732, i16 -1000, i16 -1693], [4 x i16] [i16 10, i16 -832, i16 -1846, i16 -1819], [4 x i16] [i16 493, i16 -128, i16 -1436, i16 -1768], [4 x i16] [i16 488, i16 -311, i16 -1730, i16 -2540], [4 x i16] [i16 -653, i16 -532, i16 -1150, i16 -1172], [4 x i16] [i16 -1086, i16 -289, i16 -1706, i16 -1533], [4 x i16] [i16 -699, i16 -1205, i16 -1216, i16 -1766], [4 x i16] [i16 -1032, i16 -1481, i16 -2074, i16 -1523], [4 x i16] [i16 -721, i16 -1220, i16 -2277, i16 -2600], [4 x i16] [i16 12, i16 -539, i16 -1484, i16 -1131], [4 x i16] [i16 -40, i16 -911, i16 -2106, i16 -441], [4 x i16] [i16 -471, i16 -484, i16 -2267, i16 -1549], [4 x i16] [i16 -141, i16 -988, i16 -3006, i16 -1721], [4 x i16] [i16 -1545, i16 -2102, i16 -583, i16 342], [4 x i16] [i16 -1383, i16 -2772, i16 -386, i16 -13], [4 x i16] [i16 -2118, i16 -2589, i16 -1205, i16 72], [4 x i16] [i16 -2147, i16 -3231, i16 -965, i16 390], [4 x i16] [i16 -2949, i16 -3300, i16 -621, i16 637], [4 x i16] [i16 -3907, i16 -4138, i16 -865, i16 803], [4 x i16] [i16 -1287, i16 -845, i16 -375, i16 -548], [4 x i16] [i16 -1416, i16 -1169, i16 -487, i16 -1277], [4 x i16] [i16 -1400, i16 -1690, i16 -1027, i16 -418], [4 x i16] [i16 -2018, i16 -1909, i16 -1188, i16 -1260], [4 x i16] [i16 -1418, i16 -2222, i16 -2029, i16 -128], [4 x i16] [i16 -2067, i16 -2998, i16 -2693, i16 -310], [4 x i16] [i16 -950, i16 -1028, i16 -1538, i16 185], [4 x i16] [i16 -1616, i16 -915, i16 -2205, i16 -549], [4 x i16] [i16 19, i16 -821, i16 -1145, i16 352], [4 x i16] [i16 184, i16 -1175, i16 -1356, i16 -627], [4 x i16] [i16 -547, i16 -1088, i16 -1661, i16 -911], [4 x i16] [i16 -216, i16 -1502, i16 -2197, i16 -948], [4 x i16] [i16 -795, i16 -1306, i16 -2374, i16 -451], [4 x i16] [i16 -924, i16 -1889, i16 -2796, i16 -680], [4 x i16] [i16 -600, i16 -1614, i16 -3609, i16 -885], [4 x i16] [i16 -2392, i16 -2528, i16 319, i16 303], [4 x i16] [i16 -2908, i16 -2095, i16 -310, i16 573], [4 x i16] [i16 -3460, i16 -2141, i16 49, i16 -113], [4 x i16] [i16 -2231, i16 -448, i16 675, i16 -146], [4 x i16] [i16 -2805, i16 -532, i16 1231, i16 479], [4 x i16] [i16 -2684, i16 -486, i16 -200, i16 611], [4 x i16] [i16 -3525, i16 -971, i16 -198, i16 704], [4 x i16] [i16 -3707, i16 173, i16 349, i16 254], [4 x i16] [i16 -4734, i16 -1447, i16 -34, i16 880], [4 x i16] [i16 777, i16 -512, i16 114, i16 -10], [4 x i16] [i16 1250, i16 -66, i16 442, i16 -5], [4 x i16] [i16 604, i16 613, i16 452, i16 -352], [4 x i16] [i16 1224, i16 777, i16 675, i16 -1014], [4 x i16] [i16 -1372, i16 -79, i16 -1208, i16 -238], [4 x i16] [i16 -2389, i16 -17, i16 -1157, i16 -818], [4 x i16] [i16 -1504, i16 -673, i16 -1133, i16 -1060], [4 x i16] [i16 -1984, i16 -799, i16 -2005, i16 -1973], [4 x i16] [i16 -2037, i16 -798, i16 -1068, i16 -105], [4 x i16] [i16 -3190, i16 -899, i16 -1817, i16 -194], [4 x i16] [i16 -156, i16 -886, i16 394, i16 -318], [4 x i16] [i16 -258, i16 -1283, i16 551, i16 202], [4 x i16] [i16 -536, i16 -1729, i16 910, i16 331], [4 x i16] [i16 -847, i16 -1109, i16 795, i16 -163], [4 x i16] [i16 -1171, i16 -1128, i16 715, i16 519], [4 x i16] [i16 -1080, i16 -1319, i16 1685, i16 668], [4 x i16] [i16 -1000, i16 -1921, i16 96, i16 211], [4 x i16] [i16 -1487, i16 -2148, i16 831, i16 174], [4 x i16] [i16 -1139, i16 -374, i16 414, i16 -4], [4 x i16] [i16 -1517, i16 -1383, i16 396, i16 -352], [4 x i16] [i16 -1012, i16 439, i16 -59, i16 -967], [4 x i16] [i16 -1812, i16 706, i16 -440, i16 -1030], [4 x i16] [i16 -1971, i16 -329, i16 -34, i16 -827], [4 x i16] [i16 -2472, i16 -1588, i16 -151, i16 -606], [4 x i16] [i16 -2161, i16 374, i16 -281, i16 76], [4 x i16] [i16 -3012, i16 231, i16 -15, i16 -690], [4 x i16] [i16 1104, i16 566, i16 721, i16 209], [4 x i16] [i16 1685, i16 564, i16 383, i16 98], [4 x i16] [i16 1898, i16 750, i16 792, i16 -97], [4 x i16] [i16 556, i16 -64, i16 561, i16 -93], [4 x i16] [i16 876, i16 162, i16 913, i16 -22], [4 x i16] [i16 961, i16 675, i16 1296, i16 140], [4 x i16] [i16 756, i16 -396, i16 851, i16 544], [4 x i16] [i16 360, i16 -303, i16 1341, i16 396], [4 x i16] [i16 878, i16 -22, i16 1464, i16 863], [4 x i16] [i16 -309, i16 -273, i16 642, i16 -129], [4 x i16] [i16 -686, i16 -82, i16 842, i16 454], [4 x i16] [i16 -5, i16 -47, i16 1069, i16 998], [4 x i16] [i16 -94, i16 967, i16 1277, i16 298], [4 x i16] [i16 -489, i16 385, i16 1473, i16 746], [4 x i16] [i16 -369, i16 -717, i16 1333, i16 242], [4 x i16] [i16 281, i16 -993, i16 1726, i16 924], [4 x i16] [i16 464, i16 601, i16 1575, i16 1376], [4 x i16] [i16 -250, i16 206, i16 2339, i16 1175], [4 x i16] [i16 -438, i16 377, i16 -597, i16 -285], [4 x i16] [i16 -1020, i16 787, i16 -790, i16 -287], [4 x i16] [i16 -458, i16 -410, i16 215, i16 295], [4 x i16] [i16 -589, i16 -860, i16 -121, i16 797], [4 x i16] [i16 -1175, i16 122, i16 -437, i16 466], [4 x i16] [i16 -1480, i16 -121, i16 367, i16 924], [4 x i16] [i16 234, i16 323, i16 770, i16 -555], [4 x i16] [i16 145, i16 30, i16 996, i16 26], [4 x i16] [i16 66, i16 849, i16 93, i16 -145], [4 x i16] [i16 -117, i16 1261, i16 474, i16 -399], [4 x i16] [i16 -1495, i16 1051, i16 218, i16 -506], [4 x i16] [i16 -1390, i16 694, i16 994, i16 88], [4 x i16] [i16 616, i16 7, i16 78, i16 304], [4 x i16] [i16 1060, i16 52, i16 -62, i16 835], [4 x i16] [i16 833, i16 454, i16 649, i16 1359], [4 x i16] [i16 -770, i16 464, i16 47, i16 93], [4 x i16] [i16 -574, i16 1199, i16 -39, i16 379], [4 x i16] [i16 114, i16 -98, i16 488, i16 485], [4 x i16] [i16 727, i16 244, i16 606, i16 696], [4 x i16] [i16 -76, i16 455, i16 671, i16 546], [4 x i16] [i16 -565, i16 -13, i16 145, i16 819], [4 x i16] [i16 -376, i16 569, i16 448, i16 1128], [4 x i16] [i16 218, i16 122, i16 265, i16 1167], [4 x i16] [i16 230, i16 738, i16 932, i16 1003], [4 x i16] [i16 138, i16 477, i16 36, i16 450], [4 x i16] [i16 404, i16 787, i16 -73, i16 1000], [4 x i16] [i16 497, i16 1259, i16 387, i16 1231], [4 x i16] [i16 17, i16 207, i16 195, i16 -79], [4 x i16] [i16 562, i16 358, i16 53, i16 -158], [4 x i16] [i16 493, i16 387, i16 478, i16 189], [4 x i16] [i16 678, i16 831, i16 640, i16 558], [4 x i16] [i16 -197, i16 523, i16 613, i16 57], [4 x i16] [i16 429, i16 894, i16 769, i16 111], [4 x i16] [i16 67, i16 1174, i16 568, i16 511], [4 x i16] [i16 1242, i16 824, i16 251, i16 840], [4 x i16] [i16 1419, i16 1074, i16 864, i16 481], [4 x i16] [i16 924, i16 1474, i16 669, i16 724], [4 x i16] [i16 1539, i16 1879, i16 654, i16 1590], [4 x i16] [i16 445, i16 337, i16 1111, i16 541], [4 x i16] [i16 472, i16 1421, i16 1264, i16 1094], [4 x i16] [i16 794, i16 735, i16 1103, i16 668], [4 x i16] [i16 1055, i16 863, i16 1192, i16 1020], [4 x i16] [i16 778, i16 1105, i16 806, i16 1798], [4 x i16] [i16 1052, i16 1527, i16 1587, i16 2151], [4 x i16] [i16 881, i16 1552, i16 1265, i16 391], [4 x i16] [i16 726, i16 872, i16 1812, i16 601], [4 x i16] [i16 1469, i16 280, i16 1008, i16 616], [4 x i16] [i16 1403, i16 577, i16 1803, i16 1244], [4 x i16] [i16 1650, i16 1314, i16 1148, i16 1072], [4 x i16] [i16 1297, i16 1669, i16 1911, i16 1026], [4 x i16] [i16 2093, i16 1044, i16 2115, i16 1189], [4 x i16] [i16 1644, i16 1961, i16 2587, i16 1512], [4 x i16] [i16 25, i16 -315, i16 -9, i16 -106], [4 x i16] [i16 290, i16 -339, i16 428, i16 -444], [4 x i16] [i16 -68, i16 -783, i16 735, i16 772], [4 x i16] [i16 245, i16 -555, i16 468, i16 47], [4 x i16] [i16 334, i16 -895, i16 814, i16 146], [4 x i16] [i16 235, i16 368, i16 -964, i16 -959], [4 x i16] [i16 -203, i16 315, i16 -1566, i16 -1217], [4 x i16] [i16 801, i16 17, i16 -276, i16 -354], [4 x i16] [i16 894, i16 -495, i16 -789, i16 -635], [4 x i16] [i16 716, i16 291, i16 -1189, i16 -357], [4 x i16] [i16 560, i16 -260, i16 -733, i16 -2], [4 x i16] [i16 679, i16 -508, i16 -1429, i16 211], [4 x i16] [i16 -51, i16 -62, i16 -428, i16 557], [4 x i16] [i16 322, i16 -638, i16 -211, i16 614], [4 x i16] [i16 -878, i16 -1057, i16 -84, i16 -71], [4 x i16] [i16 -388, i16 -1415, i16 -167, i16 -318], [4 x i16] [i16 -754, i16 -1574, i16 214, i16 -539], [4 x i16] [i16 -1419, i16 -2004, i16 -92, i16 -787], [4 x i16] [i16 -47, i16 -856, i16 -347, i16 -255], [4 x i16] [i16 23, i16 -1211, i16 -173, i16 320], [4 x i16] [i16 -658, i16 -487, i16 -893, i16 353], [4 x i16] [i16 -783, i16 -1587, i16 -584, i16 507], [4 x i16] [i16 -1420, i16 -859, i16 -378, i16 441], [4 x i16] [i16 -2095, i16 -1491, i16 -137, i16 439], [4 x i16] [i16 -321, i16 -1450, i16 -1288, i16 -12], [4 x i16] [i16 -359, i16 -2113, i16 -553, i16 -8], [4 x i16] [i16 -831, i16 -1918, i16 -1561, i16 32], [4 x i16] [i16 -1014, i16 -2487, i16 -1359, i16 -939], [4 x i16] [i16 -475, i16 -311, i16 -169, i16 -236], [4 x i16] [i16 -907, i16 -426, i16 276, i16 -611], [4 x i16] [i16 -96, i16 -400, i16 50, i16 -710], [4 x i16] [i16 -426, i16 -1022, i16 -10, i16 -985], [4 x i16] [i16 -197, i16 -258, i16 -744, i16 -575], [4 x i16] [i16 -611, i16 -930, i16 -771, i16 -394], [4 x i16] [i16 -267, i16 -776, i16 -612, i16 -939], [4 x i16] [i16 -256, i16 -1346, i16 -802, i16 -1122], [4 x i16] [i16 -796, i16 -1570, i16 -825, i16 -754], [4 x i16] [i16 712, i16 876, i16 141, i16 227], [4 x i16] [i16 981, i16 1509, i16 85, i16 124], [4 x i16] [i16 1462, i16 1228, i16 979, i16 -39], [4 x i16] [i16 1734, i16 999, i16 1481, i16 440], [4 x i16] [i16 2293, i16 1116, i16 769, i16 440], [4 x i16] [i16 2504, i16 1480, i16 1241, i16 356], [4 x i16] [i16 2474, i16 1909, i16 1558, i16 810], [4 x i16] [i16 917, i16 1134, i16 607, i16 -134], [4 x i16] [i16 509, i16 1809, i16 781, i16 -123], [4 x i16] [i16 1712, i16 1506, i16 559, i16 -423], [4 x i16] [i16 2037, i16 2317, i16 726, i16 -155], [4 x i16] [i16 3031, i16 2676, i16 1203, i16 331], [4 x i16] [i16 3664, i16 3274, i16 1768, i16 531], [4 x i16] [i16 1610, i16 1839, i16 867, i16 183], [4 x i16] [i16 1774, i16 1972, i16 1538, i16 97], [4 x i16] [i16 1822, i16 2158, i16 1282, i16 659], [4 x i16] [i16 2222, i16 2758, i16 1818, i16 900], [4 x i16] [i16 3251, i16 2124, i16 1723, i16 996], [4 x i16] [i16 3633, i16 2336, i16 2408, i16 1453], [4 x i16] [i16 2923, i16 3517, i16 2567, i16 1318]], align 16
@percept_flt_tbl = internal constant [2 x [10 x i16]] [[10 x i16] [i16 29491, i16 26542, i16 23888, i16 21499, i16 19349, i16 17414, i16 15673, i16 14106, i16 12695, i16 11425], [10 x i16] [i16 16384, i16 8192, i16 4096, i16 2048, i16 1024, i16 512, i16 256, i16 128, i16 64, i16 32]], align 16
@adaptive_cb_gain85 = internal constant [1700 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 800, i16 1496, i16 167, i16 -256, i16 -338, i16 -39, i16 -136, i16 -1, i16 -4, i16 -6, i16 -73, i16 -8, i16 -15, i16 12, i16 23, i16 2, i16 16, i16 30, i16 3, i16 -5, i16 -462, i16 -686, i16 493, i16 2575, i16 311, i16 -13, i16 -28, i16 -14, i16 -404, i16 -5, i16 -19, i16 13, i16 20, i16 72, i16 107, i16 -77, i16 8, i16 13, i16 -9, i16 -48, i16 1483, i16 144, i16 784, i16 928, i16 1243, i16 -134, i16 -1, i16 -37, i16 -52, i16 -94, i16 -13, i16 -71, i16 -6, i16 -84, i16 -8, i16 -44, i16 -112, i16 -10, i16 -59, i16 -70, i16 -77, i16 275, i16 3522, i16 1056, i16 -1254, i16 0, i16 -4, i16 -757, i16 -68, i16 -95, i16 1, i16 16, i16 -59, i16 4, i16 -17, i16 -227, i16 -5, i16 21, i16 269, i16 80, i16 -125, i16 -40, i16 -264, i16 381, i16 5027, i16 0, i16 0, i16 -4, i16 -8, i16 -1542, i16 0, i16 -2, i16 0, i16 2, i16 0, i16 6, i16 38, i16 12, i16 81, i16 -117, i16 138, i16 332, i16 2215, i16 2574, i16 1339, i16 -1, i16 -6, i16 -299, i16 -404, i16 -109, i16 -2, i16 -18, i16 -44, i16 -21, i16 -52, i16 -348, i16 -11, i16 -27, i16 -181, i16 -210, i16 3685, i16 2883, i16 -887, i16 866, i16 -1639, i16 -828, i16 -507, i16 -48, i16 -45, i16 -164, i16 -648, i16 199, i16 156, i16 -194, i16 -152, i16 46, i16 368, i16 288, i16 -88, i16 86, i16 1396, i16 2146, i16 2235, i16 345, i16 942, i16 -118, i16 -281, i16 -305, i16 -7, i16 -54, i16 -182, i16 -190, i16 -292, i16 -29, i16 -45, i16 -47, i16 -80, i16 -123, i16 -128, i16 -19, i16 13, i16 4475, i16 3549, i16 -804, i16 -655, i16 0, i16 -1222, i16 -768, i16 -39, i16 -26, i16 -3, i16 -2, i16 -969, i16 0, i16 219, i16 174, i16 0, i16 179, i16 141, i16 -32, i16 -724, i16 254, i16 242, i16 6049, i16 2462, i16 -32, i16 -3, i16 -3, i16 -2233, i16 -370, i16 11, i16 10, i16 -3, i16 267, i16 -94, i16 -89, i16 108, i16 -38, i16 -36, i16 -909, i16 626, i16 -1713, i16 6121, i16 4561, i16 -1061, i16 -23, i16 -179, i16 -2287, i16 -1270, i16 -68, i16 65, i16 -233, i16 640, i16 -174, i16 477, i16 -1704, i16 40, i16 -111, i16 396, i16 295, i16 -350, i16 1391, i16 7985, i16 511, i16 -405, i16 -7, i16 -118, i16 -3892, i16 -15, i16 -10, i16 29, i16 170, i16 -678, i16 10, i16 -43, i16 -249, i16 -8, i16 34, i16 197, i16 12, i16 3144, i16 -529, i16 608, i16 2530, i16 3878, i16 -603, i16 -17, i16 -22, i16 -390, i16 -918, i16 101, i16 -116, i16 19, i16 -485, i16 81, i16 -93, i16 -744, i16 125, i16 -144, i16 -599, i16 2589, i16 -689, i16 3045, i16 5603, i16 -404, i16 -409, i16 -29, i16 -566, i16 -1916, i16 -10, i16 108, i16 -481, i16 128, i16 -885, i16 235, i16 -1041, i16 63, i16 -17, i16 75, i16 138, i16 3107, i16 513, i16 1374, i16 -3594, i16 -4922, i16 -589, i16 -16, i16 -115, i16 -788, i16 -1478, i16 -97, i16 -260, i16 -43, i16 681, i16 112, i16 301, i16 933, i16 154, i16 413, i16 -1079, i16 2468, i16 6010, i16 1107, i16 -390, i16 1961, i16 -372, i16 -2204, i16 -74, i16 -9, i16 -234, i16 -905, i16 -166, i16 -406, i16 58, i16 143, i16 26, i16 -295, i16 -719, i16 -132, i16 46, i16 4773, i16 2766, i16 2368, i16 4862, i16 -4044, i16 -1390, i16 -467, i16 -342, i16 -1443, i16 -998, i16 -806, i16 -690, i16 -399, i16 -1416, i16 -821, i16 -702, i16 1178, i16 682, i16 584, i16 1200, i16 1665, i16 -1879, i16 1443, i16 1701, i16 8562, i16 -169, i16 -215, i16 -127, i16 -176, i16 -4475, i16 190, i16 -146, i16 165, i16 -172, i16 195, i16 -149, i16 -870, i16 982, i16 -754, i16 -889, i16 2716, i16 9011, i16 -1007, i16 755, i16 -1785, i16 -450, i16 -4956, i16 -61, i16 -34, i16 -194, i16 -1493, i16 167, i16 554, i16 -125, i16 -415, i16 46, i16 296, i16 982, i16 -109, i16 82, i16 -2727, i16 7548, i16 1285, i16 938, i16 3420, i16 -453, i16 -3478, i16 -100, i16 -53, i16 -714, i16 1256, i16 213, i16 -592, i16 156, i16 -432, i16 -73, i16 569, i16 -1576, i16 -268, i16 -196, i16 3677, i16 882, i16 4050, i16 1202, i16 2323, i16 -825, i16 -47, i16 -1001, i16 -88, i16 -329, i16 -198, i16 -909, i16 -218, i16 -269, i16 -64, i16 -297, i16 -521, i16 -125, i16 -574, i16 -170, i16 2046, i16 -753, i16 122, i16 10102, i16 603, i16 -255, i16 -34, i16 0, i16 -6229, i16 -22, i16 94, i16 -15, i16 5, i16 -1261, i16 464, i16 -75, i16 -75, i16 27, i16 -4, i16 -372, i16 449, i16 -1815, i16 10690, i16 3870, i16 -527, i16 -12, i16 -201, i16 -6976, i16 -914, i16 -16, i16 49, i16 -293, i16 1184, i16 -106, i16 428, i16 -2525, i16 14, i16 -58, i16 344, i16 124, i16 -941, i16 2352, i16 5049, i16 3650, i16 2637, i16 -54, i16 -337, i16 -1556, i16 -813, i16 -424, i16 135, i16 290, i16 -725, i16 209, i16 -524, i16 -1125, i16 151, i16 -378, i16 -812, i16 -587, i16 -1879, i16 796, i16 3117, i16 9569, i16 -404, i16 -215, i16 -38, i16 -593, i16 -5589, i16 -9, i16 91, i16 357, i16 -151, i16 1097, i16 -464, i16 -1821, i16 -46, i16 19, i16 76, i16 236, i16 -1715, i16 2043, i16 -2096, i16 9946, i16 4001, i16 -179, i16 -254, i16 -268, i16 -6038, i16 -977, i16 213, i16 -219, i16 261, i16 1041, i16 -1240, i16 1272, i16 418, i16 -498, i16 511, i16 -2429, i16 -5772, i16 -618, i16 -3921, i16 284, i16 -3155, i16 -2033, i16 -23, i16 -938, i16 -4, i16 -607, i16 -218, i16 -1381, i16 -148, i16 100, i16 10, i16 68, i16 -1111, i16 -119, i16 -755, i16 54, i16 382, i16 4748, i16 8003, i16 -2064, i16 2198, i16 -8, i16 -1376, i16 -3909, i16 -260, i16 -294, i16 -110, i16 -186, i16 -2319, i16 48, i16 598, i16 1008, i16 -51, i16 -637, i16 -1073, i16 277, i16 -867, i16 3015, i16 11926, i16 -1675, i16 947, i16 -45, i16 -555, i16 -8681, i16 -171, i16 -54, i16 159, i16 631, i16 -2195, i16 -88, i16 308, i16 1219, i16 50, i16 -174, i16 -690, i16 96, i16 -4933, i16 -432, i16 6757, i16 3771, i16 1352, i16 -1485, i16 -11, i16 -2786, i16 -867, i16 -111, i16 -130, i16 2034, i16 178, i16 1135, i16 99, i16 -1555, i16 407, i16 35, i16 -557, i16 -311, i16 152, i16 9726, i16 4231, i16 -1928, i16 1490, i16 -1, i16 -5774, i16 -1092, i16 -226, i16 -135, i16 -90, i16 -39, i16 -2511, i16 17, i16 1144, i16 498, i16 -13, i16 -884, i16 -384, i16 175, i16 2512, i16 193, i16 9033, i16 5361, i16 -3148, i16 -385, i16 -2, i16 -4980, i16 -1754, i16 -605, i16 -29, i16 -1385, i16 -106, i16 -822, i16 -63, i16 -2956, i16 482, i16 37, i16 1735, i16 1030, i16 8464, i16 2844, i16 12, i16 549, i16 2132, i16 -4373, i16 -493, i16 0, i16 -18, i16 -277, i16 -1469, i16 -6, i16 -2, i16 -284, i16 -95, i16 0, i16 -1101, i16 -370, i16 -1, i16 -71, i16 2141, i16 -2602, i16 7166, i16 9046, i16 -1350, i16 -279, i16 -413, i16 -3134, i16 -4994, i16 -111, i16 340, i16 -936, i16 1138, i16 -1182, i16 1436, i16 -3957, i16 176, i16 -214, i16 590, i16 745, i16 -244, i16 278, i16 13307, i16 1227, i16 -161, i16 -3, i16 -4, i16 -10808, i16 -91, i16 -1, i16 4, i16 198, i16 -226, i16 18, i16 -20, i16 -997, i16 -2, i16 2, i16 131, i16 12, i16 -1947, i16 8217, i16 6269, i16 917, i16 -2559, i16 -231, i16 -4121, i16 -2399, i16 -51, i16 -399, i16 976, i16 745, i16 -3144, i16 108, i16 -460, i16 -350, i16 -304, i16 1283, i16 979, i16 143, i16 -1810, i16 2061, i16 -2781, i16 6056, i16 10058, i16 -200, i16 -259, i16 -472, i16 -2238, i16 -6174, i16 227, i16 -307, i16 349, i16 669, i16 -761, i16 1028, i16 1111, i16 -1265, i16 1707, i16 -3717, i16 7827, i16 9161, i16 -3409, i16 2473, i16 -1510, i16 -3739, i16 -5122, i16 -709, i16 -373, i16 -139, i16 -4376, i16 1628, i16 1906, i16 -1181, i16 -1382, i16 514, i16 721, i16 844, i16 -314, i16 228, i16 -1430, i16 8313, i16 9541, i16 -2955, i16 1626, i16 -124, i16 -4218, i16 -5556, i16 -533, i16 -161, i16 725, i16 832, i16 -4841, i16 -257, i16 1499, i16 1721, i16 142, i16 -825, i16 -947, i16 293, i16 2819, i16 -4247, i16 5391, i16 8673, i16 2756, i16 -485, i16 -1101, i16 -1774, i16 -4591, i16 -463, i16 730, i16 -927, i16 1397, i16 -1492, i16 2248, i16 -2854, i16 -474, i16 714, i16 -907, i16 -1459, i16 141, i16 14552, i16 690, i16 257, i16 -112, i16 -1, i16 -12926, i16 -29, i16 -4, i16 0, i16 -125, i16 -5, i16 -613, i16 -2, i16 -228, i16 -10, i16 0, i16 99, i16 4, i16 1, i16 11938, i16 -1859, i16 1806, i16 -962, i16 -884, i16 -8699, i16 -211, i16 -199, i16 -56, i16 -47, i16 1355, i16 -1316, i16 205, i16 701, i16 -109, i16 106, i16 644, i16 -100, i16 97, i16 -51, i16 3728, i16 1982, i16 2264, i16 4584, i16 3131, i16 -848, i16 -239, i16 -312, i16 -1282, i16 -598, i16 -451, i16 -515, i16 -273, i16 -1043, i16 -554, i16 -633, i16 -712, i16 -378, i16 -432, i16 -876, i16 -1181, i16 766, i16 720, i16 14303, i16 -216, i16 -85, i16 -35, i16 -31, i16 -12486, i16 -2, i16 55, i16 51, i16 -33, i16 1031, i16 -668, i16 -628, i16 -15, i16 10, i16 9, i16 189, i16 -4385, i16 4826, i16 10112, i16 1569, i16 3388, i16 -1173, i16 -1421, i16 -6242, i16 -150, i16 -700, i16 1291, i16 2706, i16 -2979, i16 420, i16 -462, i16 -969, i16 906, i16 -998, i16 -2091, i16 -324, i16 -448, i16 1932, i16 15591, i16 -1842, i16 657, i16 -12, i16 -227, i16 -14837, i16 -207, i16 -26, i16 52, i16 427, i16 -1838, i16 -50, i16 217, i16 1753, i16 18, i16 -77, i16 -626, i16 74, i16 -4141, i16 1844, i16 3962, i16 5517, i16 6220, i16 -1046, i16 -207, i16 -958, i16 -1858, i16 -2361, i16 466, i16 1001, i16 -446, i16 1394, i16 -621, i16 -1334, i16 1572, i16 -700, i16 -1504, i16 -2094, i16 729, i16 -2299, i16 14755, i16 3657, i16 -952, i16 -32, i16 -322, i16 -13288, i16 -816, i16 -55, i16 102, i16 -656, i16 2071, i16 -162, i16 513, i16 -3294, i16 42, i16 -133, i16 857, i16 212, i16 -1385, i16 5801, i16 13339, i16 -3137, i16 1344, i16 -117, i16 -2054, i16 -10861, i16 -600, i16 -110, i16 490, i16 1127, i16 -4723, i16 -265, i16 1111, i16 2554, i16 113, i16 -476, i16 -1094, i16 257, i16 4710, i16 9661, i16 1073, i16 -2467, i16 3274, i16 -1354, i16 -5697, i16 -70, i16 -371, i16 -654, i16 -2777, i16 -308, i16 -633, i16 709, i16 1455, i16 161, i16 -941, i16 -1930, i16 -214, i16 493, i16 1843, i16 -3624, i16 12422, i16 6898, i16 -1559, i16 -207, i16 -802, i16 -9419, i16 -2904, i16 -148, i16 407, i16 -1397, i16 2748, i16 -775, i16 1526, i16 -5230, i16 175, i16 -344, i16 1182, i16 656, i16 1433, i16 2394, i16 2507, i16 1380, i16 8780, i16 -125, i16 -349, i16 -383, i16 -116, i16 -4705, i16 -209, i16 -219, i16 -366, i16 -120, i16 -201, i16 -211, i16 -768, i16 -1283, i16 -1343, i16 -740, i16 -1712, i16 12915, i16 5883, i16 -2197, i16 991, i16 -179, i16 -10181, i16 -2112, i16 -294, i16 -60, i16 1350, i16 615, i16 -4638, i16 -229, i16 1732, i16 789, i16 103, i16 -781, i16 -356, i16 133, i16 15072, i16 2158, i16 -1245, i16 910, i16 -496, i16 -13865, i16 -284, i16 -94, i16 -50, i16 -15, i16 -1986, i16 1145, i16 164, i16 -837, i16 -119, i16 69, i16 456, i16 65, i16 -37, i16 27, i16 4655, i16 7319, i16 4916, i16 586, i16 -3381, i16 -1322, i16 -3270, i16 -1475, i16 -20, i16 -697, i16 -2079, i16 -1396, i16 -2196, i16 -166, i16 -261, i16 -175, i16 960, i16 1510, i16 1014, i16 120, i16 1191, i16 -2140, i16 5120, i16 13498, i16 -1418, i16 -86, i16 -279, i16 -1600, i16 -11121, i16 -122, i16 155, i16 -372, i16 669, i16 -981, i16 1763, i16 -4218, i16 103, i16 -185, i16 443, i16 1168, i16 -1530, i16 -817, i16 8191, i16 9632, i16 -1452, i16 -143, i16 -40, i16 -4095, i16 -5663, i16 -128, i16 -76, i16 765, i16 408, i16 900, i16 480, i16 -4815, i16 -135, i16 -72, i16 726, i16 854, i16 -3236, i16 607, i16 1696, i16 -2106, i16 11485, i16 -639, i16 -22, i16 -175, i16 -270, i16 -8051, i16 119, i16 335, i16 -62, i16 -416, i16 78, i16 218, i16 2268, i16 -425, i16 -1189, i16 1476, i16 3203, i16 -1903, i16 -837, i16 9679, i16 7057, i16 -626, i16 -221, i16 -42, i16 -5718, i16 -3039, i16 372, i16 163, i16 -97, i16 -1892, i16 1124, i16 494, i16 -1380, i16 819, i16 360, i16 -4169, i16 213, i16 -655, i16 17015, i16 620, i16 -384, i16 -2, i16 -26, i16 -17671, i16 -23, i16 -9, i16 8, i16 -221, i16 681, i16 -8, i16 24, i16 -644, i16 5, i16 -15, i16 399, i16 14, i16 5088, i16 35, i16 -3339, i16 3726, i16 8488, i16 -1580, i16 0, i16 -680, i16 -847, i16 -4397, i16 -10, i16 1037, i16 7, i16 -1157, i16 -8, i16 759, i16 -2636, i16 -18, i16 1730, i16 -1930, i16 -988, i16 1454, i16 -2688, i16 15039, i16 2682, i16 -59, i16 -129, i16 -441, i16 -13805, i16 -439, i16 87, i16 -162, i16 238, i16 907, i16 -1335, i16 2467, i16 161, i16 -238, i16 440, i16 -2462, i16 -4865, i16 -2842, i16 -53, i16 5495, i16 6523, i16 -1445, i16 -493, i16 0, i16 -1843, i16 -2597, i16 -844, i16 -16, i16 -9, i16 1632, i16 953, i16 18, i16 1937, i16 1131, i16 21, i16 -2188, i16 3076, i16 15069, i16 -2914, i16 1810, i16 -971, i16 -577, i16 -13860, i16 -518, i16 -200, i16 -57, i16 -2829, i16 547, i16 2680, i16 -339, i16 -1665, i16 322, i16 182, i16 893, i16 -172, i16 107, i16 1311, i16 5355, i16 11054, i16 2299, i16 -3654, i16 -105, i16 -1750, i16 -7458, i16 -322, i16 -814, i16 -428, i16 -885, i16 -3613, i16 -184, i16 -751, i16 -1551, i16 292, i16 1194, i16 2465, i16 512, i16 4035, i16 5619, i16 4618, i16 1815, i16 1912, i16 -994, i16 -1927, i16 -1301, i16 -201, i16 -223, i16 -1384, i16 -1137, i16 -1583, i16 -447, i16 -622, i16 -511, i16 -471, i16 -656, i16 -539, i16 -211, i16 -2131, i16 2754, i16 -4501, i16 12879, i16 7432, i16 -277, i16 -463, i16 -1236, i16 -10124, i16 -3371, i16 358, i16 -585, i16 756, i16 1675, i16 -2165, i16 3538, i16 967, i16 -1249, i16 2042, i16 -5842, i16 5618, i16 -515, i16 3219, i16 -4149, i16 4857, i16 -1926, i16 -16, i16 -632, i16 -1050, i16 -1440, i16 176, i16 -1104, i16 101, i16 1422, i16 -130, i16 815, i16 -1666, i16 152, i16 -954, i16 1230, i16 1838, i16 -1709, i16 1139, i16 16867, i16 716, i16 -206, i16 -178, i16 -79, i16 -17366, i16 -31, i16 191, i16 -127, i16 118, i16 -1892, i16 1759, i16 -1173, i16 -80, i16 74, i16 -49, i16 -737, i16 1978, i16 -3845, i16 10050, i16 11854, i16 -2492, i16 -238, i16 -902, i16 -6164, i16 -8576, i16 -379, i16 464, i16 -1213, i16 2358, i16 -1431, i16 2782, i16 -7271, i16 301, i16 -585, i16 1529, i16 1803, i16 -2600, i16 11246, i16 11289, i16 -3647, i16 1463, i16 -412, i16 -7720, i16 -7778, i16 -812, i16 -130, i16 1784, i16 1791, i16 -7749, i16 -578, i16 2504, i16 2513, i16 232, i16 -1004, i16 -1008, i16 325, i16 3442, i16 907, i16 2725, i16 8970, i16 3638, i16 -723, i16 -50, i16 -453, i16 -4911, i16 -808, i16 -190, i16 -572, i16 -150, i16 -1884, i16 -496, i16 -1492, i16 -764, i16 -201, i16 -605, i16 -1992, i16 -126, i16 17498, i16 3481, i16 -2003, i16 1090, i16 0, i16 -18689, i16 -739, i16 -244, i16 -72, i16 135, i16 26, i16 -3717, i16 -15, i16 2139, i16 425, i16 8, i16 -1165, i16 -231, i16 133, i16 -1814, i16 1048, i16 -2164, i16 4070, i16 16272, i16 -200, i16 -67, i16 -285, i16 -1011, i16 -16160, i16 116, i16 -239, i16 138, i16 450, i16 -260, i16 537, i16 1801, i16 -1041, i16 2149, i16 -4042, i16 9354, i16 12580, i16 -1883, i16 962, i16 -617, i16 -5341, i16 -9660, i16 -216, i16 -56, i16 -23, i16 -7183, i16 1075, i16 1446, i16 -549, i16 -738, i16 110, i16 352, i16 474, i16 -71, i16 36, i16 1708, i16 4199, i16 7387, i16 6335, i16 1003, i16 -178, i16 -1076, i16 -3330, i16 -2449, i16 -61, i16 -437, i16 -770, i16 -1893, i16 -660, i16 -1623, i16 -2856, i16 -104, i16 -257, i16 -452, i16 -388, i16 -2624, i16 5623, i16 17310, i16 -2353, i16 592, i16 -420, i16 -1930, i16 -18288, i16 -338, i16 -21, i16 900, i16 2772, i16 -5941, i16 -376, i16 807, i16 2486, i16 94, i16 -203, i16 -625, i16 85, i16 1211, i16 -850, i16 1193, i16 -1926, i16 15992, i16 -89, i16 -44, i16 -86, i16 -226, i16 -15609, i16 62, i16 -88, i16 61, i16 142, i16 -100, i16 140, i16 -1182, i16 830, i16 -1165, i16 1880, i16 3983, i16 -2054, i16 11506, i16 -19, i16 3622, i16 -968, i16 -257, i16 -8080, i16 0, i16 -801, i16 499, i16 -2797, i16 1442, i16 4, i16 -2, i16 13, i16 -880, i16 454, i16 -2544, i16 4, i16 -786, i16 -1354, i16 16092, i16 7246, i16 -1665, i16 -37, i16 -111, i16 -15805, i16 -3205, i16 -169, i16 -65, i16 772, i16 1330, i16 348, i16 599, i16 -7117, i16 -80, i16 -137, i16 1636, i16 736, i16 -4316, i16 -511, i16 6674, i16 11665, i16 4633, i16 -1137, i16 -15, i16 -2719, i16 -8305, i16 -1310, i16 -134, i16 1758, i16 208, i16 3073, i16 364, i16 -4752, i16 1220, i16 144, i16 -1887, i16 -3299, i16 7912, i16 4557, i16 1937, i16 1885, i16 7037, i16 -3821, i16 -1267, i16 -229, i16 -216, i16 -3022, i16 -2200, i16 -935, i16 -538, i16 -910, i16 -524, i16 -222, i16 -3398, i16 -1957, i16 -832, i16 -809, i16 3434, i16 2967, i16 5867, i16 8196, i16 8766, i16 -720, i16 -537, i16 -2101, i16 -4100, i16 -4690, i16 -622, i16 -1230, i16 -1062, i16 -1718, i16 -1484, i16 -2935, i16 -1837, i16 -1588, i16 -3139, i16 -4385, i16 5881, i16 9176, i16 8119, i16 3934, i16 3355, i16 -2111, i16 -5139, i16 -4023, i16 -944, i16 -687, i16 -3294, i16 -2914, i16 -4547, i16 -1412, i16 -2203, i16 -1949, i16 -1204, i16 -1879, i16 -1662, i16 -805], align 16
@adaptive_cb_gain170 = internal constant [3400 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 776, i16 212, i16 715, i16 670, i16 809, i16 -36, i16 -2, i16 -31, i16 -27, i16 -39, i16 -10, i16 -33, i16 -9, i16 -31, i16 -8, i16 -29, i16 -38, i16 -10, i16 -35, i16 -33, i16 1296, i16 1316, i16 -168, i16 -320, i16 -815, i16 -102, i16 -105, i16 -1, i16 -6, i16 -40, i16 -104, i16 13, i16 13, i16 25, i16 25, i16 -3, i16 64, i16 65, i16 -8, i16 -15, i16 -589, i16 680, i16 2478, i16 308, i16 -596, i16 -21, i16 -28, i16 -375, i16 -5, i16 -21, i16 24, i16 89, i16 -102, i16 11, i16 -12, i16 -46, i16 -21, i16 24, i16 90, i16 11, i16 -735, i16 -487, i16 -5, i16 2948, i16 468, i16 -33, i16 -14, i16 0, i16 -530, i16 -13, i16 -21, i16 0, i16 0, i16 132, i16 87, i16 0, i16 21, i16 13, i16 0, i16 -84, i16 1042, i16 1730, i16 1068, i16 333, i16 626, i16 -66, i16 -182, i16 -69, i16 -6, i16 -23, i16 -110, i16 -67, i16 -112, i16 -21, i16 -35, i16 -21, i16 -39, i16 -66, i16 -40, i16 -12, i16 486, i16 -769, i16 4074, i16 2825, i16 -1107, i16 -14, i16 -36, i16 -1013, i16 -487, i16 -74, i16 22, i16 -120, i16 191, i16 -83, i16 132, i16 -702, i16 32, i16 -52, i16 275, i16 191, i16 1521, i16 -767, i16 -124, i16 4320, i16 1026, i16 -141, i16 -35, i16 0, i16 -1139, i16 -64, i16 71, i16 11, i16 -5, i16 -401, i16 202, i16 32, i16 -95, i16 48, i16 7, i16 -270, i16 2425, i16 1267, i16 3439, i16 -91, i16 -1166, i16 -359, i16 -98, i16 -722, i16 0, i16 -83, i16 -187, i16 -509, i16 -266, i16 13, i16 7, i16 19, i16 172, i16 90, i16 244, i16 -6, i16 -1251, i16 975, i16 173, i16 4039, i16 2005, i16 -95, i16 -58, i16 -1, i16 -996, i16 -245, i16 74, i16 13, i16 -10, i16 308, i16 -240, i16 -42, i16 153, i16 -119, i16 -21, i16 -494, i16 1820, i16 632, i16 1322, i16 2062, i16 1031, i16 -202, i16 -24, i16 -106, i16 -259, i16 -64, i16 -70, i16 -146, i16 -51, i16 -229, i16 -79, i16 -166, i16 -114, i16 -39, i16 -83, i16 -129, i16 -447, i16 4904, i16 244, i16 -315, i16 -2038, i16 -12, i16 -1467, i16 -3, i16 -6, i16 -253, i16 134, i16 6, i16 -73, i16 -8, i16 94, i16 4, i16 -55, i16 610, i16 30, i16 -39, i16 -208, i16 -1102, i16 463, i16 -448, i16 5653, i16 -2, i16 -74, i16 -13, i16 -12, i16 -1950, i16 -14, i16 5, i16 31, i16 -5, i16 -30, i16 12, i16 71, i16 380, i16 -159, i16 154, i16 4739, i16 2600, i16 -1864, i16 856, i16 -1554, i16 -1371, i16 -412, i16 -212, i16 -44, i16 -147, i16 -752, i16 539, i16 295, i16 -247, i16 -135, i16 97, i16 449, i16 246, i16 -176, i16 81, i16 1894, i16 3533, i16 35, i16 -26, i16 2145, i16 -219, i16 -762, i16 0, i16 0, i16 -280, i16 -408, i16 -4, i16 -7, i16 3, i16 5, i16 0, i16 -248, i16 -462, i16 -4, i16 3, i16 -2699, i16 1841, i16 4072, i16 2443, i16 1582, i16 -444, i16 -207, i16 -1012, i16 -364, i16 -152, i16 303, i16 670, i16 -457, i16 402, i16 -274, i16 -607, i16 260, i16 -177, i16 -393, i16 -236, i16 -844, i16 3358, i16 6106, i16 -1059, i16 -537, i16 -43, i16 -688, i16 -2275, i16 -68, i16 -17, i16 173, i16 314, i16 -1251, i16 -54, i16 217, i16 395, i16 -27, i16 110, i16 200, i16 -34, i16 1251, i16 1016, i16 3020, i16 2210, i16 1445, i16 -95, i16 -63, i16 -556, i16 -298, i16 -127, i16 -77, i16 -230, i16 -187, i16 -168, i16 -137, i16 -407, i16 -110, i16 -89, i16 -266, i16 -194, i16 2099, i16 2277, i16 4038, i16 3533, i16 -2870, i16 -269, i16 -316, i16 -995, i16 -762, i16 -503, i16 -291, i16 -517, i16 -561, i16 -452, i16 -491, i16 -871, i16 367, i16 399, i16 707, i16 619, i16 400, i16 -1114, i16 8516, i16 2422, i16 -1117, i16 -9, i16 -75, i16 -4426, i16 -358, i16 -76, i16 27, i16 -208, i16 579, i16 -59, i16 164, i16 -1259, i16 27, i16 -75, i16 580, i16 165, i16 -4398, i16 -2011, i16 3912, i16 -2407, i16 2258, i16 -1180, i16 -247, i16 -934, i16 -353, i16 -311, i16 -540, i16 1050, i16 480, i16 -646, i16 -295, i16 575, i16 606, i16 277, i16 -539, i16 331, i16 1767, i16 -1447, i16 4240, i16 6160, i16 -757, i16 -190, i16 -127, i16 -1097, i16 -2316, i16 -35, i16 156, i16 -457, i16 374, i16 -664, i16 544, i16 -1594, i16 81, i16 -66, i16 195, i16 284, i16 1594, i16 -1463, i16 1035, i16 6938, i16 1920, i16 -155, i16 -130, i16 -65, i16 -2938, i16 -225, i16 142, i16 -100, i16 92, i16 -675, i16 619, i16 -438, i16 -186, i16 171, i16 -121, i16 -813, i16 -562, i16 4716, i16 4085, i16 -591, i16 2421, i16 -19, i16 -1357, i16 -1018, i16 -21, i16 -357, i16 162, i16 140, i16 -1175, i16 -20, i16 170, i16 147, i16 83, i16 -696, i16 -603, i16 87, i16 1552, i16 8778, i16 -935, i16 354, i16 -1424, i16 -147, i16 -4703, i16 -53, i16 -7, i16 -123, i16 -831, i16 88, i16 501, i16 -33, i16 -189, i16 20, i16 134, i16 763, i16 -81, i16 30, i16 4831, i16 -4431, i16 41, i16 -1479, i16 -2976, i16 -1424, i16 -1198, i16 0, i16 -133, i16 -540, i16 1306, i16 -12, i16 11, i16 436, i16 -400, i16 3, i16 877, i16 -804, i16 7, i16 -268, i16 2090, i16 1192, i16 1006, i16 1645, i16 4853, i16 -266, i16 -86, i16 -61, i16 -165, i16 -1437, i16 -152, i16 -128, i16 -73, i16 -210, i16 -119, i16 -101, i16 -619, i16 -353, i16 -298, i16 -487, i16 2386, i16 5712, i16 1426, i16 -94, i16 1350, i16 -347, i16 -1991, i16 -124, i16 0, i16 -111, i16 -832, i16 -207, i16 -497, i16 13, i16 32, i16 8, i16 -196, i16 -470, i16 -117, i16 7, i16 -1349, i16 1091, i16 1659, i16 8891, i16 313, i16 -111, i16 -72, i16 -168, i16 -4825, i16 -5, i16 89, i16 136, i16 -110, i16 732, i16 -592, i16 -900, i16 25, i16 -20, i16 -31, i16 -170, i16 9980, i16 916, i16 -381, i16 -808, i16 88, i16 -6080, i16 -51, i16 -8, i16 -39, i16 0, i16 -558, i16 232, i16 21, i16 492, i16 45, i16 -18, i16 -53, i16 -4, i16 2, i16 4, i16 2338, i16 -1031, i16 -248, i16 3928, i16 6484, i16 -333, i16 -64, i16 -3, i16 -942, i16 -2566, i16 147, i16 35, i16 -15, i16 -560, i16 247, i16 59, i16 -925, i16 408, i16 98, i16 -1555, i16 6166, i16 -1240, i16 -337, i16 3672, i16 -1277, i16 -2320, i16 -93, i16 -6, i16 -823, i16 -99, i16 466, i16 126, i16 -25, i16 -1382, i16 278, i16 75, i16 480, i16 -96, i16 -26, i16 286, i16 4377, i16 -132, i16 -2588, i16 1701, i16 4865, i16 -1169, i16 -1, i16 -409, i16 -176, i16 -1444, i16 35, i16 691, i16 -20, i16 -454, i16 13, i16 268, i16 -1299, i16 39, i16 768, i16 -505, i16 2594, i16 3295, i16 3944, i16 1481, i16 682, i16 -410, i16 -662, i16 -949, i16 -133, i16 -28, i16 -521, i16 -624, i16 -793, i16 -234, i16 -297, i16 -356, i16 -108, i16 -137, i16 -164, i16 -61, i16 4151, i16 624, i16 815, i16 4485, i16 2229, i16 -1052, i16 -23, i16 -40, i16 -1228, i16 -303, i16 -158, i16 -206, i16 -31, i16 -1136, i16 -170, i16 -223, i16 -565, i16 -84, i16 -111, i16 -610, i16 -3575, i16 -361, i16 4924, i16 2791, i16 4698, i16 -780, i16 -7, i16 -1480, i16 -475, i16 -1347, i16 -78, i16 1074, i16 108, i16 609, i16 61, i16 -839, i16 1025, i16 103, i16 -1412, i16 -800, i16 -2518, i16 3791, i16 8623, i16 315, i16 2465, i16 -387, i16 -877, i16 -4538, i16 -6, i16 -370, i16 582, i16 1325, i16 -1995, i16 48, i16 -73, i16 -166, i16 378, i16 -570, i16 -1297, i16 -47, i16 -691, i16 2989, i16 9957, i16 -421, i16 -1142, i16 -29, i16 -545, i16 -6051, i16 -10, i16 -79, i16 126, i16 420, i16 -1817, i16 -17, i16 76, i16 256, i16 -48, i16 208, i16 694, i16 -29, i16 -1918, i16 104, i16 -3190, i16 -3410, i16 -4440, i16 -224, i16 0, i16 -621, i16 -709, i16 -1203, i16 12, i16 -373, i16 20, i16 -399, i16 21, i16 -664, i16 -519, i16 28, i16 -864, i16 -924, i16 -3359, i16 -1668, i16 1854, i16 6939, i16 1430, i16 -688, i16 -169, i16 -209, i16 -2939, i16 -124, i16 -341, i16 380, i16 188, i16 1422, i16 706, i16 -785, i16 293, i16 145, i16 -161, i16 -606, i16 42, i16 9706, i16 3164, i16 -952, i16 907, i16 0, i16 -5750, i16 -611, i16 -55, i16 -50, i16 -25, i16 -8, i16 -1874, i16 2, i16 564, i16 183, i16 -2, i16 -537, i16 -175, i16 52, i16 1607, i16 785, i16 2862, i16 4327, i16 3307, i16 -157, i16 -37, i16 -500, i16 -1143, i16 -667, i16 -77, i16 -280, i16 -137, i16 -424, i16 -207, i16 -756, i16 -324, i16 -158, i16 -577, i16 -873, i16 6801, i16 3416, i16 2227, i16 1682, i16 -3217, i16 -2823, i16 -712, i16 -302, i16 -172, i16 -631, i16 -1418, i16 -924, i16 -464, i16 -698, i16 -350, i16 -228, i16 1335, i16 670, i16 437, i16 330, i16 3459, i16 3898, i16 364, i16 7841, i16 -2640, i16 -730, i16 -927, i16 -8, i16 -3753, i16 -425, i16 -823, i16 -76, i16 -86, i16 -1655, i16 -1865, i16 -174, i16 557, i16 628, i16 58, i16 1263, i16 -5902, i16 -3458, i16 -2465, i16 -1886, i16 4334, i16 -2126, i16 -730, i16 -371, i16 -217, i16 -1146, i16 -1245, i16 -888, i16 -520, i16 -679, i16 -398, i16 -283, i16 1561, i16 915, i16 652, i16 499, i16 -3710, i16 1133, i16 7849, i16 3443, i16 -215, i16 -840, i16 -78, i16 -3760, i16 -723, i16 -2, i16 256, i16 1777, i16 -543, i16 779, i16 -238, i16 -1649, i16 -48, i16 14, i16 103, i16 45, i16 4132, i16 2828, i16 2, i16 -4212, i16 -4116, i16 -1042, i16 -488, i16 0, i16 -1083, i16 -1034, i16 -713, i16 0, i16 0, i16 1062, i16 727, i16 0, i16 1038, i16 710, i16 0, i16 -1058, i16 5875, i16 8496, i16 -1796, i16 1376, i16 -1786, i16 -2107, i16 -4406, i16 -197, i16 -115, i16 -194, i16 -3047, i16 644, i16 931, i16 -493, i16 -713, i16 150, i16 640, i16 926, i16 -195, i16 150, i16 3143, i16 3483, i16 3546, i16 -793, i16 4489, i16 -603, i16 -740, i16 -767, i16 -38, i16 -1230, i16 -668, i16 -680, i16 -754, i16 152, i16 168, i16 171, i16 -861, i16 -954, i16 -971, i16 217, i16 2845, i16 7965, i16 3695, i16 -5432, i16 3978, i16 -494, i16 -3873, i16 -833, i16 -1801, i16 -966, i16 -1383, i16 -641, i16 -1796, i16 943, i16 2641, i16 1225, i16 -691, i16 -1934, i16 -897, i16 1319, i16 1538, i16 150, i16 7139, i16 2049, i16 3097, i16 -144, i16 -1, i16 -3110, i16 -256, i16 -585, i16 -14, i16 -670, i16 -65, i16 -192, i16 -18, i16 -892, i16 -290, i16 -28, i16 -1349, i16 -387, i16 618, i16 7520, i16 4729, i16 -238, i16 -3373, i16 -23, i16 -3452, i16 -1365, i16 -3, i16 -694, i16 -283, i16 -178, i16 -2170, i16 8, i16 109, i16 68, i16 127, i16 1548, i16 973, i16 -49, i16 2965, i16 -3013, i16 7912, i16 7076, i16 -1997, i16 -536, i16 -554, i16 -3821, i16 -3056, i16 -243, i16 545, i16 -1431, i16 1455, i16 -1280, i16 1301, i16 -3417, i16 361, i16 -367, i16 964, i16 862, i16 2443, i16 -929, i16 -1113, i16 9677, i16 4138, i16 -364, i16 -52, i16 -75, i16 -5716, i16 -1045, i16 138, i16 166, i16 -63, i16 -1443, i16 549, i16 657, i16 -617, i16 234, i16 281, i16 -2444, i16 1966, i16 3309, i16 10085, i16 -3399, i16 2105, i16 -236, i16 -668, i16 -6207, i16 -705, i16 -270, i16 -397, i16 -1210, i16 -2037, i16 408, i16 686, i16 2092, i16 -252, i16 -425, i16 -1295, i16 436, i16 -112, i16 -1368, i16 8868, i16 4822, i16 2048, i16 0, i16 -114, i16 -4800, i16 -1419, i16 -256, i16 -9, i16 61, i16 740, i16 33, i16 402, i16 -2610, i16 14, i16 171, i16 -1108, i16 -602, i16 -2597, i16 438, i16 -1839, i16 6229, i16 7266, i16 -411, i16 -11, i16 -206, i16 -2368, i16 -3223, i16 69, i16 -291, i16 49, i16 987, i16 -166, i16 699, i16 1152, i16 -194, i16 816, i16 -2763, i16 3454, i16 553, i16 9127, i16 4946, i16 -5596, i16 -728, i16 -18, i16 -5084, i16 -1493, i16 -1911, i16 -116, i16 -1924, i16 -308, i16 -1042, i16 -166, i16 -2755, i16 1179, i16 188, i16 3117, i16 1689, i16 -532, i16 -663, i16 12262, i16 2495, i16 -1004, i16 -17, i16 -26, i16 -9177, i16 -380, i16 -61, i16 -21, i16 398, i16 496, i16 81, i16 101, i16 -1867, i16 -32, i16 -40, i16 751, i16 152, i16 -2100, i16 1317, i16 -1509, i16 11425, i16 2997, i16 -269, i16 -105, i16 -139, i16 -7967, i16 -548, i16 168, i16 -193, i16 121, i16 1464, i16 -918, i16 1052, i16 384, i16 -240, i16 276, i16 -2090, i16 1193, i16 -2697, i16 11259, i16 5373, i16 -763, i16 -86, i16 -444, i16 -7737, i16 -1762, i16 -35, i16 196, i16 -819, i16 1853, i16 -391, i16 884, i16 -3692, i16 55, i16 -125, i16 525, i16 250, i16 2405, i16 -471, i16 11079, i16 203, i16 782, i16 -353, i16 -13, i16 -7491, i16 -2, i16 -37, i16 69, i16 -1626, i16 318, i16 -29, i16 5, i16 -137, i16 -114, i16 22, i16 -529, i16 -9, i16 -1871, i16 5685, i16 11290, i16 -2662, i16 1353, i16 -213, i16 -1972, i16 -7780, i16 -432, i16 -111, i16 649, i16 1289, i16 -3917, i16 -304, i16 923, i16 1834, i16 154, i16 -469, i16 -932, i16 220, i16 -3768, i16 5927, i16 -3093, i16 5041, i16 5212, i16 -866, i16 -2144, i16 -584, i16 -1551, i16 -1658, i16 1363, i16 -711, i16 1119, i16 1159, i16 -1824, i16 951, i16 1198, i16 -1885, i16 984, i16 -1603, i16 -2546, i16 9502, i16 5969, i16 -2440, i16 1928, i16 -395, i16 -5511, i16 -2175, i16 -363, i16 -226, i16 1477, i16 927, i16 -3462, i16 -379, i16 1415, i16 889, i16 299, i16 -1118, i16 -702, i16 287, i16 -4963, i16 3568, i16 4592, i16 5508, i16 3451, i16 -1503, i16 -777, i16 -1287, i16 -1851, i16 -727, i16 1080, i16 1391, i16 -1000, i16 1668, i16 -1199, i16 -1543, i16 1045, i16 -751, i16 -967, i16 -1160, i16 1745, i16 -2586, i16 3983, i16 10899, i16 -1551, i16 -186, i16 -408, i16 -968, i16 -7250, i16 -146, i16 275, i16 -424, i16 628, i16 -1161, i16 1720, i16 -2649, i16 165, i16 -244, i16 377, i16 1032, i16 867, i16 -456, i16 -727, i16 3369, i16 11822, i16 -45, i16 -12, i16 -32, i16 -692, i16 -8531, i16 24, i16 38, i16 -20, i16 -178, i16 93, i16 149, i16 -625, i16 329, i16 525, i16 -2431, i16 7535, i16 2422, i16 1926, i16 1405, i16 1599, i16 -3466, i16 -358, i16 -226, i16 -120, i16 -156, i16 -1114, i16 -886, i16 -284, i16 -646, i16 -207, i16 -165, i16 -735, i16 -236, i16 -188, i16 -137, i16 1041, i16 -735, i16 -142, i16 13209, i16 1515, i16 -66, i16 -33, i16 -1, i16 -10649, i16 -140, i16 46, i16 9, i16 -6, i16 -839, i16 593, i16 114, i16 -96, i16 68, i16 13, i16 -1222, i16 7950, i16 6745, i16 -1444, i16 -1008, i16 2721, i16 -3857, i16 -2777, i16 -127, i16 -62, i16 -452, i16 -3273, i16 700, i16 594, i16 489, i16 415, i16 -88, i16 -1320, i16 -1120, i16 239, i16 167, i16 -4754, i16 -1379, i16 4522, i16 -578, i16 -5733, i16 -1379, i16 -116, i16 -1248, i16 -20, i16 -2006, i16 -400, i16 1312, i16 380, i16 -167, i16 -48, i16 159, i16 -1663, i16 -482, i16 1582, i16 -202, i16 3220, i16 5978, i16 5923, i16 2430, i16 -2689, i16 -633, i16 -2181, i16 -2141, i16 -360, i16 -441, i16 -1175, i16 -1164, i16 -2161, i16 -477, i16 -886, i16 -878, i16 528, i16 981, i16 972, i16 398, i16 377, i16 1312, i16 13978, i16 -1470, i16 677, i16 -8, i16 -105, i16 -11925, i16 -132, i16 -28, i16 -30, i16 -321, i16 -1119, i16 33, i16 117, i16 1254, i16 -15, i16 -54, i16 -577, i16 60, i16 -3435, i16 6770, i16 314, i16 -885, i16 5686, i16 -720, i16 -2797, i16 -6, i16 -47, i16 -1973, i16 1419, i16 65, i16 -129, i16 -185, i16 366, i16 16, i16 1192, i16 -2349, i16 -109, i16 307, i16 3171, i16 8774, i16 -2260, i16 2679, i16 3069, i16 -613, i16 -4699, i16 -312, i16 -438, i16 -575, i16 -1698, i16 437, i16 1210, i16 -518, i16 -1435, i16 369, i16 -594, i16 -1643, i16 423, i16 -501, i16 5557, i16 1509, i16 5407, i16 -125, i16 -7386, i16 -1884, i16 -139, i16 -1784, i16 0, i16 -3330, i16 -511, i16 -1834, i16 -498, i16 42, i16 11, i16 41, i16 2505, i16 680, i16 2438, i16 -56, i16 -2838, i16 2595, i16 13228, i16 271, i16 1793, i16 -491, i16 -411, i16 -10680, i16 -4, i16 -196, i16 449, i16 2291, i16 -2095, i16 47, i16 -42, i16 -219, i16 310, i16 -284, i16 -1447, i16 -29, i16 664, i16 -278, i16 14966, i16 951, i16 -711, i16 -26, i16 -4, i16 -13672, i16 -55, i16 -30, i16 11, i16 -606, i16 253, i16 -38, i16 16, i16 -869, i16 28, i16 -12, i16 650, i16 41, i16 808, i16 1770, i16 8658, i16 5863, i16 -1486, i16 -39, i16 -191, i16 -4576, i16 -2098, i16 -134, i16 -87, i16 -427, i16 -935, i16 -289, i16 -633, i16 -3098, i16 73, i16 160, i16 785, i16 531, i16 3063, i16 1539, i16 2000, i16 -542, i16 9576, i16 -572, i16 -144, i16 -244, i16 -17, i16 -5597, i16 -287, i16 -374, i16 -188, i16 101, i16 51, i16 66, i16 -1790, i16 -900, i16 -1169, i16 317, i16 514, i16 14083, i16 -323, i16 896, i16 -891, i16 -16, i16 -12106, i16 -6, i16 -49, i16 -48, i16 -442, i16 10, i16 277, i16 -28, i16 -770, i16 17, i16 27, i16 766, i16 -17, i16 48, i16 892, i16 158, i16 5237, i16 11057, i16 -1603, i16 -48, i16 -1, i16 -1674, i16 -7462, i16 -156, i16 -8, i16 -285, i16 -50, i16 -602, i16 -106, i16 -3534, i16 87, i16 15, i16 512, i16 1082, i16 -1612, i16 2564, i16 -4296, i16 12526, i16 5710, i16 -158, i16 -401, i16 -1126, i16 -9576, i16 -1990, i16 252, i16 -422, i16 672, i16 1232, i16 -1960, i16 3284, i16 561, i16 -893, i16 1497, i16 -4365, i16 4889, i16 -6878, i16 612, i16 6109, i16 4753, i16 -1459, i16 -2887, i16 -22, i16 -2277, i16 -1379, i16 2052, i16 -182, i16 257, i16 -1823, i16 2564, i16 -228, i16 -1418, i16 1995, i16 -177, i16 -1772, i16 3053, i16 -506, i16 2403, i16 9625, i16 1322, i16 -569, i16 -15, i16 -352, i16 -5655, i16 -106, i16 94, i16 -448, i16 74, i16 -1794, i16 297, i16 -1412, i16 -246, i16 40, i16 -194, i16 -777, i16 -754, i16 12904, i16 4480, i16 -2113, i16 1471, i16 -34, i16 -10163, i16 -1225, i16 -272, i16 -132, i16 594, i16 206, i16 -3529, i16 -97, i16 1664, i16 577, i16 67, i16 -1159, i16 -402, i16 189, i16 4255, i16 1476, i16 5055, i16 2393, i16 2912, i16 -1105, i16 -132, i16 -1559, i16 -349, i16 -517, i16 -383, i16 -1313, i16 -455, i16 -621, i16 -215, i16 -738, i16 -756, i16 -262, i16 -898, i16 -425, i16 -1371, i16 535, i16 1417, i16 14604, i16 -997, i16 -114, i16 -17, i16 -122, i16 -13017, i16 -60, i16 44, i16 118, i16 -46, i16 1222, i16 -477, i16 -1263, i16 -83, i16 32, i16 86, i16 888, i16 5368, i16 -1744, i16 4083, i16 -1236, i16 3753, i16 -1758, i16 -185, i16 -1017, i16 -93, i16 -860, i16 571, i16 -1338, i16 434, i16 405, i16 -131, i16 308, i16 -1229, i16 399, i16 -935, i16 283, i16 1588, i16 -3097, i16 14415, i16 3699, i16 -1171, i16 -154, i16 -585, i16 -12683, i16 -835, i16 -83, i16 300, i16 -1397, i16 2725, i16 -358, i16 699, i16 -3255, i16 113, i16 -221, i16 1030, i16 264, i16 212, i16 7989, i16 9471, i16 -3344, i16 2009, i16 -2, i16 -3895, i16 -5475, i16 -682, i16 -246, i16 -103, i16 -123, i16 -4618, i16 43, i16 1630, i16 1933, i16 -26, i16 -979, i16 -1161, i16 410, i16 856, i16 2294, i16 -627, i16 6930, i16 6929, i16 -44, i16 -321, i16 -24, i16 -2931, i16 -2930, i16 -119, i16 32, i16 87, i16 -362, i16 -970, i16 265, i16 -362, i16 -970, i16 265, i16 -2931, i16 2357, i16 -4187, i16 7162, i16 7683, i16 3371, i16 -339, i16 -1070, i16 -3131, i16 -3603, i16 -693, i16 602, i16 -1030, i16 1830, i16 -1105, i16 1963, i16 -3359, i16 -485, i16 861, i16 -1474, i16 -1581, i16 350, i16 4585, i16 14053, i16 -3819, i16 1218, i16 -7, i16 -1283, i16 -12054, i16 -890, i16 -90, i16 -97, i16 -300, i16 -3933, i16 81, i16 1068, i16 3275, i16 -26, i16 -341, i16 -1045, i16 284, i16 -3248, i16 3531, i16 475, i16 2137, i16 11711, i16 -644, i16 -761, i16 -13, i16 -278, i16 -8372, i16 700, i16 94, i16 -102, i16 423, i16 -460, i16 -62, i16 2322, i16 -2524, i16 -340, i16 -1528, i16 -3017, i16 3852, i16 1725, i16 8440, i16 5257, i16 -555, i16 -905, i16 -181, i16 -4348, i16 -1686, i16 709, i16 317, i16 -405, i16 1554, i16 -1984, i16 -889, i16 968, i16 -1236, i16 -553, i16 -2708, i16 -909, i16 3196, i16 15512, i16 -2528, i16 1066, i16 -50, i16 -623, i16 -14686, i16 -390, i16 -69, i16 177, i16 861, i16 -3026, i16 -140, i16 493, i16 2393, i16 59, i16 -208, i16 -1009, i16 164, i16 959, i16 -3370, i16 9617, i16 9545, i16 -1761, i16 -56, i16 -693, i16 -5645, i16 -5561, i16 -189, i16 197, i16 -563, i16 1978, i16 -558, i16 1963, i16 -5603, i16 103, i16 -362, i16 1034, i16 1026, i16 7575, i16 11796, i16 -4845, i16 3252, i16 -1703, i16 -3502, i16 -8493, i16 -1433, i16 -645, i16 -177, i16 -5454, i16 2240, i16 3488, i16 -1503, i16 -2341, i16 961, i16 787, i16 1226, i16 -503, i16 338, i16 6409, i16 1722, i16 1764, i16 -4191, i16 6015, i16 -2507, i16 -181, i16 -189, i16 -1072, i16 -2208, i16 -673, i16 -690, i16 -185, i16 1639, i16 440, i16 451, i16 -2353, i16 -632, i16 -647, i16 1538, i16 -2420, i16 12161, i16 5038, i16 1286, i16 -2098, i16 -357, i16 -9027, i16 -1549, i16 -100, i16 -268, i16 1796, i16 744, i16 -3740, i16 190, i16 -954, i16 -395, i16 -310, i16 1557, i16 645, i16 164, i16 -2232, i16 -1341, i16 7246, i16 9470, i16 -1977, i16 -304, i16 -109, i16 -3204, i16 -5474, i16 -238, i16 -182, i16 987, i16 593, i16 1290, i16 775, i16 -4188, i16 -269, i16 -161, i16 874, i16 1143, i16 1030, i16 7034, i16 4231, i16 1551, i16 3077, i16 -64, i16 -3019, i16 -1093, i16 -146, i16 -577, i16 -442, i16 -266, i16 -1816, i16 -97, i16 -666, i16 -400, i16 -193, i16 -1321, i16 -794, i16 -291, i16 5121, i16 11835, i16 -477, i16 -1749, i16 2298, i16 -1601, i16 -8549, i16 -13, i16 -186, i16 -322, i16 -3699, i16 149, i16 344, i16 546, i16 1264, i16 -50, i16 -718, i16 -1660, i16 66, i16 245, i16 -3328, i16 3827, i16 5921, i16 9976, i16 -1045, i16 -676, i16 -894, i16 -2140, i16 -6075, i16 -66, i16 777, i16 1203, i16 -1383, i16 2027, i16 -2330, i16 -3605, i16 -212, i16 244, i16 377, i16 636, i16 3813, i16 5718, i16 -4666, i16 -3412, i16 5674, i16 -887, i16 -1995, i16 -1329, i16 -710, i16 -1965, i16 -1331, i16 1086, i16 1628, i16 794, i16 1191, i16 -972, i16 -1320, i16 -1980, i16 1616, i16 1181, i16 1348, i16 -3672, i16 13154, i16 6938, i16 -1690, i16 -110, i16 -823, i16 -10561, i16 -2938, i16 -174, i16 302, i16 -1082, i16 2948, i16 -570, i16 1555, i16 -5570, i16 139, i16 -379, i16 1357, i16 716, i16 2151, i16 -3586, i16 6949, i16 12131, i16 -1224, i16 -282, i16 -785, i16 -2947, i16 -8982, i16 -91, i16 470, i16 -912, i16 1521, i16 -1592, i16 2655, i16 -5145, i16 160, i16 -268, i16 519, i16 906, i16 -2889, i16 9647, i16 10276, i16 -2728, i16 995, i16 -509, i16 -5680, i16 -6445, i16 -454, i16 -60, i16 1701, i16 1812, i16 -6051, i16 -481, i16 1606, i16 1711, i16 175, i16 -586, i16 -624, i16 165, i16 6177, i16 2184, i16 555, i16 1985, i16 6589, i16 -2329, i16 -291, i16 -18, i16 -240, i16 -2650, i16 -823, i16 -209, i16 -74, i16 -748, i16 -264, i16 -67, i16 -2484, i16 -878, i16 -223, i16 -798, i16 -492, i16 391, i16 17166, i16 -681, i16 240, i16 -14, i16 -9, i16 -17987, i16 -28, i16 -3, i16 11, i16 515, i16 -410, i16 -20, i16 16, i16 713, i16 7, i16 -5, i16 -252, i16 10, i16 12628, i16 5448, i16 -2630, i16 3011, i16 -2695, i16 -9733, i16 -1811, i16 -422, i16 -553, i16 -443, i16 -4199, i16 2027, i16 874, i16 -2321, i16 -1001, i16 483, i16 2077, i16 896, i16 -432, i16 495, i16 -3628, i16 -534, i16 3447, i16 7002, i16 6751, i16 -803, i16 -17, i16 -725, i16 -2992, i16 -2782, i16 -118, i16 763, i16 112, i16 1550, i16 228, i16 -1473, i16 1495, i16 220, i16 -1420, i16 -2885, i16 -5239, i16 5901, i16 8107, i16 3650, i16 4846, i16 -1675, i16 -2125, i16 -4012, i16 -813, i16 -1433, i16 1887, i16 2592, i16 -2920, i16 1167, i16 -1315, i16 -1806, i16 1550, i16 -1745, i16 -2398, i16 -1080, i16 6157, i16 6678, i16 4099, i16 -1074, i16 2348, i16 -2314, i16 -2722, i16 -1025, i16 -70, i16 -336, i16 -2509, i16 -1540, i16 -1670, i16 403, i16 437, i16 268, i16 -882, i16 -957, i16 -587, i16 153, i16 1079, i16 16099, i16 242, i16 -881, i16 1690, i16 -71, i16 -15820, i16 -3, i16 -47, i16 -174, i16 -1060, i16 -16, i16 -238, i16 58, i16 865, i16 13, i16 -111, i16 -1661, i16 -25, i16 90, i16 -278, i16 227, i16 -1039, i16 1636, i16 16945, i16 -4, i16 -3, i16 -65, i16 -163, i16 -17526, i16 3, i16 -17, i16 14, i16 27, i16 -22, i16 103, i16 287, i16 -234, i16 1074, i16 -1693, i16 15778, i16 -1454, i16 574, i16 -603, i16 -107, i16 -15195, i16 -129, i16 -20, i16 -22, i16 0, i16 1400, i16 -553, i16 51, i16 581, i16 -53, i16 21, i16 103, i16 -9, i16 3, i16 -3, i16 2406, i16 -836, i16 13224, i16 7993, i16 -4266, i16 -353, i16 -42, i16 -10673, i16 -3899, i16 -1111, i16 122, i16 -1942, i16 674, i16 -1174, i16 407, i16 -6451, i16 626, i16 -217, i16 3443, i16 2081, i16 3184, i16 14368, i16 -3336, i16 2255, i16 -1801, i16 -619, i16 -12600, i16 -679, i16 -310, i16 -198, i16 -2793, i16 648, i16 2926, i16 -438, i16 -1977, i16 459, i16 350, i16 1580, i16 -366, i16 247, i16 -1698, i16 17076, i16 2504, i16 -539, i16 -646, i16 -176, i16 -17798, i16 -382, i16 -17, i16 -25, i16 1770, i16 259, i16 -2610, i16 -55, i16 561, i16 82, i16 -67, i16 673, i16 98, i16 -21, i16 2375, i16 -797, i16 -2696, i16 14483, i16 5383, i16 -344, i16 -38, i16 -443, i16 -12803, i16 -1769, i16 115, i16 391, i16 -131, i16 -2100, i16 705, i16 2384, i16 -780, i16 262, i16 886, i16 -4759, i16 -2691, i16 2554, i16 -4520, i16 9573, i16 10655, i16 -442, i16 -398, i16 -1247, i16 -5594, i16 -6930, i16 419, i16 -742, i16 704, i16 1572, i16 -1492, i16 2641, i16 1750, i16 -1661, i16 2939, i16 -6226, i16 -4332, i16 -4399, i16 -1657, i16 4880, i16 7375, i16 -1145, i16 -1181, i16 -167, i16 -1453, i16 -3319, i16 -1163, i16 -438, i16 -444, i16 1290, i16 1310, i16 493, i16 1950, i16 1980, i16 745, i16 -2196, i16 -3498, i16 7405, i16 9955, i16 2693, i16 -2971, i16 -746, i16 -3347, i16 -6049, i16 -442, i16 -538, i16 1581, i16 2125, i16 -4499, i16 575, i16 -1217, i16 -1636, i16 -634, i16 1342, i16 1805, i16 488, i16 6717, i16 -3792, i16 7739, i16 2798, i16 3489, i16 -2754, i16 -877, i16 -3655, i16 -477, i16 -743, i16 1554, i16 -3173, i16 1791, i16 -1147, i16 647, i16 -1321, i16 -1430, i16 807, i16 -1648, i16 -595, i16 5263, i16 9770, i16 3463, i16 1069, i16 -3971, i16 -1690, i16 -5826, i16 -732, i16 -69, i16 -962, i16 -3138, i16 -1112, i16 -2065, i16 -343, i16 -637, i16 -226, i16 1275, i16 2368, i16 839, i16 259, i16 1243, i16 -2634, i16 16772, i16 1871, i16 332, i16 -94, i16 -423, i16 -17169, i16 -213, i16 -6, i16 199, i16 -1273, i16 2696, i16 -142, i16 300, i16 -1915, i16 -25, i16 53, i16 -339, i16 -37, i16 2691, i16 2836, i16 3105, i16 5711, i16 4817, i16 -442, i16 -491, i16 -588, i16 -1991, i16 -1416, i16 -465, i16 -510, i16 -537, i16 -938, i16 -988, i16 -1082, i16 -791, i16 -834, i16 -913, i16 -1679, i16 4366, i16 2944, i16 7210, i16 3627, i16 1161, i16 -1163, i16 -529, i16 -3172, i16 -803, i16 -82, i16 -784, i16 -1921, i16 -1295, i16 -966, i16 -651, i16 -1596, i16 -309, i16 -208, i16 -511, i16 -257, i16 13888, i16 3951, i16 -671, i16 -2305, i16 3354, i16 -11773, i16 -953, i16 -27, i16 -324, i16 -686, i16 -3349, i16 569, i16 161, i16 1954, i16 556, i16 -94, i16 -2843, i16 -809, i16 137, i16 472, i16 7053, i16 5847, i16 2929, i16 8378, i16 -4794, i16 -3036, i16 -2086, i16 -523, i16 -4284, i16 -1403, i16 -2517, i16 -1261, i16 -1045, i16 -3607, i16 -2990, i16 -1498, i16 2064, i16 1711, i16 857, i16 2451, i16 -2191, i16 12838, i16 9182, i16 -3915, i16 1617, i16 -293, i16 -10059, i16 -5146, i16 -935, i16 -159, i16 1717, i16 1228, i16 -7195, i16 -523, i16 3068, i16 2194, i16 216, i16 -1267, i16 -906, i16 386, i16 -4881, i16 13114, i16 5767, i16 -435, i16 4155, i16 -1454, i16 -10498, i16 -2030, i16 -11, i16 -1054, i16 3907, i16 1718, i16 -4616, i16 -129, i16 348, i16 153, i16 1238, i16 -3326, i16 -1462, i16 110, i16 7843, i16 -1250, i16 210, i16 7106, i16 -5203, i16 -3754, i16 -95, i16 -2, i16 -3082, i16 -1652, i16 598, i16 -100, i16 16, i16 -3402, i16 542, i16 -91, i16 2491, i16 -397, i16 66, i16 2257, i16 -2463, i16 8168, i16 14551, i16 -3908, i16 1828, i16 -370, i16 -4072, i16 -12923, i16 -932, i16 -204, i16 1228, i16 2188, i16 -7254, i16 -587, i16 1948, i16 3471, i16 274, i16 -911, i16 -1623, i16 436, i16 -1579, i16 347, i16 -272, i16 -2735, i16 16031, i16 -152, i16 -7, i16 -4, i16 -456, i16 -15686, i16 33, i16 -26, i16 5, i16 -263, i16 58, i16 -45, i16 1545, i16 -340, i16 266, i16 2676, i16 -6327, i16 1328, i16 5093, i16 -5079, i16 7617, i16 -2443, i16 -107, i16 -1583, i16 -1574, i16 -3541, i16 513, i16 1967, i16 -413, i16 -1961, i16 411, i16 1578, i16 2941, i16 -617, i16 -2367, i16 2361, i16 3286, i16 -4509, i16 11306, i16 11025, i16 -2623, i16 -659, i16 -1241, i16 -7802, i16 -7419, i16 -420, i16 904, i16 -2267, i16 3112, i16 -2211, i16 3034, i16 -7608, i16 526, i16 -722, i16 1810, i16 1765, i16 5567, i16 17853, i16 -3754, i16 1166, i16 -519, i16 -1892, i16 -19455, i16 -860, i16 -83, i16 -16, i16 -6067, i16 1275, i16 4090, i16 -396, i16 -1271, i16 267, i16 176, i16 566, i16 -119, i16 37, i16 -2136, i16 -424, i16 15292, i16 5108, i16 -1648, i16 -278, i16 -10, i16 -14273, i16 -1593, i16 -165, i16 -55, i16 1993, i16 396, i16 666, i16 132, i16 -4768, i16 -214, i16 -42, i16 1538, i16 514, i16 2267, i16 -3297, i16 2549, i16 16563, i16 -791, i16 -313, i16 -663, i16 -396, i16 -16745, i16 -38, i16 456, i16 -352, i16 513, i16 -2291, i16 3333, i16 -2576, i16 109, i16 -159, i16 123, i16 799, i16 3655, i16 1899, i16 -3364, i16 6279, i16 12510, i16 -815, i16 -220, i16 -690, i16 -2406, i16 -9552, i16 -423, i16 750, i16 390, i16 -1400, i16 -728, i16 1289, i16 -2791, i16 -1450, i16 2568, i16 -4794, i16 8052, i16 2285, i16 -6193, i16 5138, i16 6003, i16 -3957, i16 -318, i16 -2341, i16 -1611, i16 -2199, i16 -1123, i16 3044, i16 864, i16 -2525, i16 -716, i16 1942, i16 -2950, i16 -837, i16 2269, i16 -1882, i16 -386, i16 -2291, i16 7679, i16 15387, i16 -2723, i16 -9, i16 -320, i16 -3599, i16 -14452, i16 -452, i16 -54, i16 181, i16 1074, i16 362, i16 2152, i16 -7212, i16 -64, i16 -380, i16 1276, i16 2557, i16 2777, i16 -1173, i16 3984, i16 13079, i16 2508, i16 -470, i16 -84, i16 -969, i16 -10440, i16 -384, i16 198, i16 -675, i16 285, i16 -2217, i16 936, i16 -3180, i16 -425, i16 179, i16 -610, i16 -2002, i16 -1879, i16 1771, i16 -2684, i16 16705, i16 1833, i16 -215, i16 -191, i16 -439, i16 -17032, i16 -205, i16 203, i16 -308, i16 290, i16 1916, i16 -1805, i16 2736, i16 210, i16 -198, i16 300, i16 -1869, i16 1052, i16 4495, i16 15519, i16 1467, i16 -4032, i16 -67, i16 -1233, i16 -14700, i16 -131, i16 -992, i16 -288, i16 -997, i16 -4257, i16 -94, i16 -402, i16 -1389, i16 259, i16 1106, i16 3819, i16 361, i16 3010, i16 2544, i16 6969, i16 7559, i16 1996, i16 -553, i16 -395, i16 -2964, i16 -3487, i16 -243, i16 -467, i16 -1280, i16 -1082, i16 -1388, i16 -1174, i16 -3215, i16 -366, i16 -310, i16 -849, i16 -921, i16 -5209, i16 -1867, i16 8713, i16 10351, i16 1549, i16 -1656, i16 -212, i16 -4634, i16 -6540, i16 -146, i16 -593, i16 2770, i16 993, i16 3291, i16 1180, i16 -5505, i16 492, i16 176, i16 -824, i16 -979, i16 -4314, i16 8513, i16 913, i16 7547, i16 -2723, i16 -1135, i16 -4423, i16 -50, i16 -3476, i16 -452, i16 2241, i16 240, i16 -474, i16 1987, i16 -3921, i16 -420, i16 -717, i16 1415, i16 151, i16 1254, i16 12929, i16 -1219, i16 2448, i16 1757, i16 6303, i16 -10204, i16 -90, i16 -365, i16 -188, i16 -2425, i16 962, i16 -1932, i16 182, i16 -1386, i16 130, i16 -262, i16 -4974, i16 469, i16 -941, i16 -676, i16 6465, i16 4132, i16 3167, i16 3160, i16 5697, i16 -2551, i16 -1042, i16 -612, i16 -609, i16 -1981, i16 -1630, i16 -1249, i16 -798, i16 -1247, i16 -797, i16 -611, i16 -2248, i16 -1437, i16 -1101, i16 -1099, i16 -3636, i16 4859, i16 18914, i16 -1335, i16 810, i16 -807, i16 -1441, i16 -21836, i16 -108, i16 -40, i16 1078, i16 4198, i16 -5609, i16 -296, i16 396, i16 1541, i16 179, i16 -240, i16 -936, i16 66, i16 8844, i16 7864, i16 654, i16 -4063, i16 -5680, i16 -4774, i16 -3774, i16 -26, i16 -1007, i16 -1969, i16 -4245, i16 -353, i16 -314, i16 2193, i16 1950, i16 162, i16 3066, i16 2726, i16 226, i16 -1408, i16 1859, i16 2634, i16 9228, i16 996, i16 9464, i16 -211, i16 -423, i16 -5197, i16 -60, i16 -5467, i16 -299, i16 -1047, i16 -1483, i16 -113, i16 -160, i16 -561, i16 -1074, i16 -1521, i16 -5330, i16 -575, i16 2949, i16 12260, i16 10290, i16 -497, i16 -3943, i16 -530, i16 -9174, i16 -6463, i16 -15, i16 -949, i16 -2206, i16 -1852, i16 -7700, i16 89, i16 372, i16 312, i16 709, i16 2950, i16 2476, i16 -119, i16 -2903, i16 1552, i16 14867, i16 9970, i16 -496, i16 -514, i16 -147, i16 -13491, i16 -6068, i16 -15, i16 275, i16 2634, i16 -1408, i16 1766, i16 -944, i16 -9047, i16 -87, i16 47, i16 450, i16 302, i16 3243, i16 8234, i16 7586, i16 3373, i16 2151, i16 -642, i16 -4138, i16 -3512, i16 -694, i16 -282, i16 -1630, i16 -1501, i16 -3812, i16 -667, i16 -1695, i16 -1561, i16 -425, i16 -1081, i16 -996, i16 -442, i16 -9631, i16 60, i16 3501, i16 5359, i16 10150, i16 -5662, i16 0, i16 -748, i16 -1752, i16 -6288, i16 35, i16 2058, i16 -12, i16 3150, i16 -19, i16 -1145, i16 5967, i16 -37, i16 -2169, i16 -3320, i16 -6874, i16 -2553, i16 -5446, i16 -2195, i16 -7841, i16 -2884, i16 -397, i16 -1810, i16 -294, i16 -3753, i16 -1071, i16 -2285, i16 -848, i16 -921, i16 -342, i16 -729, i16 -3290, i16 -1221, i16 -2606, i16 -1050, i16 -3413, i16 -1141, i16 4630, i16 13612, i16 7897, i16 -711, i16 -79, i16 -1308, i16 -11310, i16 -3806, i16 -237, i16 964, i16 322, i16 2836, i16 948, i16 -3847, i16 1645, i16 550, i16 -2231, i16 -6561, i16 4410, i16 -5678, i16 8006, i16 -3992, i16 3811, i16 -1187, i16 -1968, i16 -3912, i16 -973, i16 -886, i16 1528, i16 -2155, i16 2775, i16 1074, i16 -1383, i16 1951, i16 -1025, i16 1321, i16 -1862, i16 928, i16 5659, i16 11535, i16 2203, i16 -452, i16 7169, i16 -1954, i16 -8121, i16 -296, i16 -12, i16 -3137, i16 -3984, i16 -761, i16 -1551, i16 156, i16 318, i16 60, i16 -2476, i16 -5048, i16 -964, i16 197, i16 2914, i16 -2914, i16 3485, i16 -3965, i16 13675, i16 -518, i16 -518, i16 -741, i16 -959, i16 -11414, i16 518, i16 -620, i16 620, i16 705, i16 -705, i16 843, i16 -2433, i16 2432, i16 -2909, i16 3310, i16 7843, i16 1907, i16 1022, i16 8882, i16 7972, i16 -3755, i16 -222, i16 -63, i16 -4815, i16 -3879, i16 -913, i16 -489, i16 -119, i16 -4252, i16 -1034, i16 -554, i16 -3816, i16 -928, i16 -497, i16 -4322, i16 13807, i16 9531, i16 1436, i16 1612, i16 1779, i16 -11636, i16 -5544, i16 -125, i16 -158, i16 -193, i16 -8032, i16 -1210, i16 -835, i16 -1358, i16 -938, i16 -141, i16 -1499, i16 -1035, i16 -156, i16 -175, i16 13620, i16 -5337, i16 5450, i16 -2263, i16 1723, i16 -11322, i16 -1738, i16 -1813, i16 -312, i16 -181, i16 4436, i16 -4531, i16 1775, i16 1881, i16 -737, i16 752, i16 -1432, i16 561, i16 -573, i16 238, i16 5297, i16 8374, i16 8872, i16 7694, i16 6538, i16 -1712, i16 -4280, i16 -4804, i16 -3613, i16 -2609, i16 -2707, i16 -2868, i16 -4534, i16 -2487, i16 -3932, i16 -4166, i16 -2113, i16 -3341, i16 -3540, i16 -3070], align 16
@pulses = internal constant [4 x i8] c"\06\05\06\05", align 1
@fixed_cb_gain = internal constant [24 x i16] [i16 1, i16 2, i16 3, i16 4, i16 6, i16 9, i16 13, i16 18, i16 26, i16 38, i16 55, i16 80, i16 115, i16 166, i16 240, i16 348, i16 502, i16 726, i16 1050, i16 1517, i16 2193, i16 3170, i16 4582, i16 6623], align 16
@combinatorial_table = internal constant [6 x [30 x i32]] [[30 x i32] [i32 118755, i32 98280, i32 80730, i32 65780, i32 53130, i32 42504, i32 33649, i32 26334, i32 20349, i32 15504, i32 11628, i32 8568, i32 6188, i32 4368, i32 3003, i32 2002, i32 1287, i32 792, i32 462, i32 252, i32 126, i32 56, i32 21, i32 6, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 23751, i32 20475, i32 17550, i32 14950, i32 12650, i32 10626, i32 8855, i32 7315, i32 5985, i32 4845, i32 3876, i32 3060, i32 2380, i32 1820, i32 1365, i32 1001, i32 715, i32 495, i32 330, i32 210, i32 126, i32 70, i32 35, i32 15, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 3654, i32 3276, i32 2925, i32 2600, i32 2300, i32 2024, i32 1771, i32 1540, i32 1330, i32 1140, i32 969, i32 816, i32 680, i32 560, i32 455, i32 364, i32 286, i32 220, i32 165, i32 120, i32 84, i32 56, i32 35, i32 20, i32 10, i32 4, i32 1, i32 0, i32 0, i32 0], [30 x i32] [i32 406, i32 378, i32 351, i32 325, i32 300, i32 276, i32 253, i32 231, i32 210, i32 190, i32 171, i32 153, i32 136, i32 120, i32 105, i32 91, i32 78, i32 66, i32 55, i32 45, i32 36, i32 28, i32 21, i32 15, i32 10, i32 6, i32 3, i32 1, i32 0, i32 0], [30 x i32] [i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0], [30 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1]], align 16
@frame_size = internal constant [4 x i8] c"\18\14\04\01", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @g723_1_encode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1753 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.G723_1_Context*, align 8
  %p = alloca %struct.G723_1_ChannelContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1755, metadata !1756), !dbg !1757
  call void @llvm.dbg.declare(metadata %struct.G723_1_Context** %s, metadata !1758, metadata !1756), !dbg !1829
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1830
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1831
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1831
  %2 = bitcast i8* %1 to %struct.G723_1_Context*, !dbg !1830
  store %struct.G723_1_Context* %2, %struct.G723_1_Context** %s, align 8, !dbg !1829
  call void @llvm.dbg.declare(metadata %struct.G723_1_ChannelContext** %p, metadata !1832, metadata !1756), !dbg !1834
  %3 = load %struct.G723_1_Context*, %struct.G723_1_Context** %s, align 8, !dbg !1835
  %ch = getelementptr inbounds %struct.G723_1_Context, %struct.G723_1_Context* %3, i32 0, i32 2, !dbg !1836
  %arrayidx = getelementptr inbounds [2 x %struct.G723_1_ChannelContext], [2 x %struct.G723_1_ChannelContext]* %ch, i64 0, i64 0, !dbg !1835
  store %struct.G723_1_ChannelContext* %arrayidx, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1834
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1837
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 82, !dbg !1839
  %5 = load i32, i32* %sample_rate, align 8, !dbg !1839
  %cmp = icmp ne i32 %5, 8000, !dbg !1840
  br i1 %cmp, label %if.then, label %if.end, !dbg !1841

if.then:                                          ; preds = %entry
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1842
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !1842
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i32 0, i32 0)), !dbg !1844
  store i32 -22, i32* %retval, align 4, !dbg !1845
  br label %return, !dbg !1845

if.end:                                           ; preds = %entry
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1846
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 83, !dbg !1848
  %9 = load i32, i32* %channels, align 4, !dbg !1848
  %cmp1 = icmp ne i32 %9, 1, !dbg !1849
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1850

if.then2:                                         ; preds = %if.end
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1851
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !1851
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i32 0, i32 0)), !dbg !1853
  store i32 -22, i32* %retval, align 4, !dbg !1854
  br label %return, !dbg !1854

if.end3:                                          ; preds = %if.end
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1855
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 9, !dbg !1857
  %13 = load i64, i64* %bit_rate, align 8, !dbg !1857
  %cmp4 = icmp eq i64 %13, 6300, !dbg !1858
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !1859

if.then5:                                         ; preds = %if.end3
  %14 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1860
  %cur_rate = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %14, i32 0, i32 3, !dbg !1862
  store i32 0, i32* %cur_rate, align 4, !dbg !1863
  br label %if.end10, !dbg !1864

if.else:                                          ; preds = %if.end3
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1865
  %bit_rate6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 9, !dbg !1868
  %16 = load i64, i64* %bit_rate6, align 8, !dbg !1868
  %cmp7 = icmp eq i64 %16, 5300, !dbg !1869
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !1865

if.then8:                                         ; preds = %if.else
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1870
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !1870
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i32 0, i32 0)), !dbg !1872
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1873
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !1873
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0)), !dbg !1874
  store i32 -1163346256, i32* %retval, align 4, !dbg !1875
  br label %return, !dbg !1875

if.else9:                                         ; preds = %if.else
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1876
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !1876
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0)), !dbg !1878
  store i32 -22, i32* %retval, align 4, !dbg !1879
  br label %return, !dbg !1879

if.end10:                                         ; preds = %if.then5
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1880
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 85, !dbg !1881
  store i32 240, i32* %frame_size, align 4, !dbg !1882
  %24 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1883
  %prev_lsp = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %24, i32 0, i32 7, !dbg !1884
  %arraydecay = getelementptr inbounds [10 x i16], [10 x i16]* %prev_lsp, i32 0, i32 0, !dbg !1885
  %25 = bitcast i16* %arraydecay to i8*, !dbg !1885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* bitcast ([10 x i16]* @dc_lsp to i8*), i64 20, i32 4, i1 false), !dbg !1885
  store i32 0, i32* %retval, align 4, !dbg !1886
  br label %return, !dbg !1886

return:                                           ; preds = %if.end10, %if.else9, %if.then8, %if.then2, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !1887
  ret i32 %26, !dbg !1887
}

; Function Attrs: nounwind uwtable
define internal i32 @g723_1_encode_frame(%struct.AVCodecContext* %avctx, %struct.AVPacket* %avpkt, %struct.AVFrame* %frame, i32* %got_packet_ptr) #1 !dbg !1888 {
entry:
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !1889, metadata !1756), !dbg !1894
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_packet_ptr.addr = alloca i32*, align 8
  %s = alloca %struct.G723_1_Context*, align 8
  %p = alloca %struct.G723_1_ChannelContext*, align 8
  %unq_lpc = alloca [40 x i16], align 16
  %qnt_lpc = alloca [40 x i16], align 16
  %cur_lsp = alloca [10 x i16], align 16
  %weighted_lpc = alloca [80 x i16], align 16
  %vector = alloca [385 x i16], align 16
  %offset = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %in = alloca i16*, align 8
  %start = alloca i16*, align 8
  %hf = alloca [4 x %struct.HFParam], align 16
  %impulse_resp = alloca [60 x i16], align 16
  %residual = alloca [64 x i16], align 16
  %flt_in = alloca [60 x i16], align 16
  %zero = alloca [10 x i16], align 16
  %fir = alloca [10 x i16], align 16
  %iir = alloca [10 x i16], align 16
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1901, metadata !1756), !dbg !1902
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !1903, metadata !1756), !dbg !1904
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !1905, metadata !1756), !dbg !1906
  store i32* %got_packet_ptr, i32** %got_packet_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_packet_ptr.addr, metadata !1907, metadata !1756), !dbg !1908
  call void @llvm.dbg.declare(metadata %struct.G723_1_Context** %s, metadata !1909, metadata !1756), !dbg !1910
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1911
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1912
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1912
  %2 = bitcast i8* %1 to %struct.G723_1_Context*, !dbg !1911
  store %struct.G723_1_Context* %2, %struct.G723_1_Context** %s, align 8, !dbg !1910
  call void @llvm.dbg.declare(metadata %struct.G723_1_ChannelContext** %p, metadata !1913, metadata !1756), !dbg !1914
  %3 = load %struct.G723_1_Context*, %struct.G723_1_Context** %s, align 8, !dbg !1915
  %ch = getelementptr inbounds %struct.G723_1_Context, %struct.G723_1_Context* %3, i32 0, i32 2, !dbg !1916
  %arrayidx = getelementptr inbounds [2 x %struct.G723_1_ChannelContext], [2 x %struct.G723_1_ChannelContext]* %ch, i64 0, i64 0, !dbg !1915
  store %struct.G723_1_ChannelContext* %arrayidx, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1914
  call void @llvm.dbg.declare(metadata [40 x i16]* %unq_lpc, metadata !1917, metadata !1756), !dbg !1921
  call void @llvm.dbg.declare(metadata [40 x i16]* %qnt_lpc, metadata !1922, metadata !1756), !dbg !1923
  call void @llvm.dbg.declare(metadata [10 x i16]* %cur_lsp, metadata !1924, metadata !1756), !dbg !1925
  call void @llvm.dbg.declare(metadata [80 x i16]* %weighted_lpc, metadata !1926, metadata !1756), !dbg !1930
  call void @llvm.dbg.declare(metadata [385 x i16]* %vector, metadata !1931, metadata !1756), !dbg !1935
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !1936, metadata !1756), !dbg !1937
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1938, metadata !1756), !dbg !1939
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1940, metadata !1756), !dbg !1941
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1942, metadata !1756), !dbg !1943
  call void @llvm.dbg.declare(metadata i16** %in, metadata !1944, metadata !1756), !dbg !1946
  call void @llvm.dbg.declare(metadata i16** %start, metadata !1947, metadata !1756), !dbg !1948
  call void @llvm.dbg.declare(metadata [4 x %struct.HFParam]* %hf, metadata !1949, metadata !1756), !dbg !1956
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !1957
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 5, !dbg !1958
  %5 = load i32, i32* %nb_samples, align 8, !dbg !1958
  %conv = sext i32 %5 to i64, !dbg !1957
  %mul = mul i64 %conv, 2, !dbg !1959
  %call = call noalias i8* @av_malloc(i64 %mul), !dbg !1960
  %6 = bitcast i8* %call to i16*, !dbg !1960
  store i16* %6, i16** %in, align 8, !dbg !1961
  store i16* %6, i16** %start, align 8, !dbg !1962
  %7 = load i16*, i16** %in, align 8, !dbg !1963
  %tobool = icmp ne i16* %7, null, !dbg !1963
  br i1 %tobool, label %if.end, label %if.then, !dbg !1965

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !1966
  br label %return, !dbg !1966

if.end:                                           ; preds = %entry
  %8 = load i16*, i16** %in, align 8, !dbg !1967
  %9 = bitcast i16* %8 to i8*, !dbg !1968
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !1969
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 0, !dbg !1970
  %arrayidx1 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !1969
  %11 = load i8*, i8** %arrayidx1, align 8, !dbg !1969
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !1971
  %nb_samples2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %12, i32 0, i32 5, !dbg !1972
  %13 = load i32, i32* %nb_samples2, align 8, !dbg !1972
  %conv3 = sext i32 %13 to i64, !dbg !1971
  %mul4 = mul i64 %conv3, 2, !dbg !1973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %11, i64 %mul4, i32 1, i1 false), !dbg !1968
  %14 = load i16*, i16** %in, align 8, !dbg !1974
  %15 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1975
  %hpf_fir_mem = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %15, i32 0, i32 25, !dbg !1976
  %16 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1977
  %hpf_iir_mem = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %16, i32 0, i32 26, !dbg !1978
  call void @highpass_filter(i16* %14, i16* %hpf_fir_mem, i32* %hpf_iir_mem), !dbg !1979
  %arraydecay = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !1980
  %17 = bitcast i16* %arraydecay to i8*, !dbg !1980
  %18 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1981
  %prev_data = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %18, i32 0, i32 23, !dbg !1982
  %arraydecay5 = getelementptr inbounds [120 x i16], [120 x i16]* %prev_data, i32 0, i32 0, !dbg !1980
  %19 = bitcast i16* %arraydecay5 to i8*, !dbg !1980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 240, i32 2, i1 false), !dbg !1980
  %arraydecay6 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !1983
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay6, i64 120, !dbg !1984
  %20 = bitcast i16* %add.ptr to i8*, !dbg !1985
  %21 = load i16*, i16** %in, align 8, !dbg !1986
  %22 = bitcast i16* %21 to i8*, !dbg !1985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %22, i64 480, i32 2, i1 false), !dbg !1985
  %arraydecay7 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !1987
  %arraydecay8 = getelementptr inbounds [40 x i16], [40 x i16]* %unq_lpc, i32 0, i32 0, !dbg !1988
  call void @comp_lpc_coeff(i16* %arraydecay7, i16* %arraydecay8), !dbg !1989
  %arrayidx9 = getelementptr inbounds [40 x i16], [40 x i16]* %unq_lpc, i64 0, i64 30, !dbg !1990
  %23 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1991
  %prev_lsp = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %23, i32 0, i32 7, !dbg !1992
  %arraydecay10 = getelementptr inbounds [10 x i16], [10 x i16]* %prev_lsp, i32 0, i32 0, !dbg !1991
  %arraydecay11 = getelementptr inbounds [10 x i16], [10 x i16]* %cur_lsp, i32 0, i32 0, !dbg !1993
  call void @lpc2lsp(i16* %arrayidx9, i16* %arraydecay10, i16* %arraydecay11), !dbg !1994
  %24 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1995
  %lsp_index = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %24, i32 0, i32 4, !dbg !1996
  %arraydecay12 = getelementptr inbounds [3 x i8], [3 x i8]* %lsp_index, i32 0, i32 0, !dbg !1995
  %arraydecay13 = getelementptr inbounds [10 x i16], [10 x i16]* %cur_lsp, i32 0, i32 0, !dbg !1997
  %25 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !1998
  %prev_lsp14 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %25, i32 0, i32 7, !dbg !1999
  %arraydecay15 = getelementptr inbounds [10 x i16], [10 x i16]* %prev_lsp14, i32 0, i32 0, !dbg !1998
  call void @lsp_quantize(i8* %arraydecay12, i16* %arraydecay13, i16* %arraydecay15), !dbg !2000
  %arraydecay16 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2001
  %add.ptr17 = getelementptr inbounds i16, i16* %arraydecay16, i64 10, !dbg !2002
  %26 = bitcast i16* %add.ptr17 to i8*, !dbg !2003
  %27 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2004
  %prev_data18 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %27, i32 0, i32 23, !dbg !2005
  %arraydecay19 = getelementptr inbounds [120 x i16], [120 x i16]* %prev_data18, i32 0, i32 0, !dbg !2004
  %add.ptr20 = getelementptr inbounds i16, i16* %arraydecay19, i64 60, !dbg !2006
  %28 = bitcast i16* %add.ptr20 to i8*, !dbg !2003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %28, i64 120, i32 2, i1 false), !dbg !2003
  %arraydecay21 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2007
  %add.ptr22 = getelementptr inbounds i16, i16* %arraydecay21, i64 10, !dbg !2008
  %add.ptr23 = getelementptr inbounds i16, i16* %add.ptr22, i64 60, !dbg !2009
  %29 = bitcast i16* %add.ptr23 to i8*, !dbg !2010
  %30 = load i16*, i16** %in, align 8, !dbg !2011
  %31 = bitcast i16* %30 to i8*, !dbg !2010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %31, i64 360, i32 2, i1 false), !dbg !2010
  %32 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2012
  %prev_data24 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %32, i32 0, i32 23, !dbg !2013
  %arraydecay25 = getelementptr inbounds [120 x i16], [120 x i16]* %prev_data24, i32 0, i32 0, !dbg !2014
  %33 = bitcast i16* %arraydecay25 to i8*, !dbg !2014
  %34 = load i16*, i16** %in, align 8, !dbg !2015
  %add.ptr26 = getelementptr inbounds i16, i16* %34, i64 120, !dbg !2016
  %35 = bitcast i16* %add.ptr26 to i8*, !dbg !2014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %35, i64 240, i32 2, i1 false), !dbg !2014
  %36 = load i16*, i16** %in, align 8, !dbg !2017
  %37 = bitcast i16* %36 to i8*, !dbg !2018
  %arraydecay27 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2019
  %add.ptr28 = getelementptr inbounds i16, i16* %arraydecay27, i64 10, !dbg !2020
  %38 = bitcast i16* %add.ptr28 to i8*, !dbg !2018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 480, i32 2, i1 false), !dbg !2018
  %39 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2021
  %arraydecay29 = getelementptr inbounds [80 x i16], [80 x i16]* %weighted_lpc, i32 0, i32 0, !dbg !2022
  %arraydecay30 = getelementptr inbounds [40 x i16], [40 x i16]* %unq_lpc, i32 0, i32 0, !dbg !2023
  %arraydecay31 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2024
  call void @perceptual_filter(%struct.G723_1_ChannelContext* %39, i16* %arraydecay29, i16* %arraydecay30, i16* %arraydecay31), !dbg !2025
  %40 = load i16*, i16** %in, align 8, !dbg !2026
  %41 = bitcast i16* %40 to i8*, !dbg !2027
  %arraydecay32 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2028
  %add.ptr33 = getelementptr inbounds i16, i16* %arraydecay32, i64 10, !dbg !2029
  %42 = bitcast i16* %add.ptr33 to i8*, !dbg !2027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 480, i32 2, i1 false), !dbg !2027
  %arraydecay34 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2030
  %43 = bitcast i16* %arraydecay34 to i8*, !dbg !2030
  %44 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2031
  %prev_weight_sig = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %44, i32 0, i32 24, !dbg !2032
  %arraydecay35 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_weight_sig, i32 0, i32 0, !dbg !2030
  %45 = bitcast i16* %arraydecay35 to i8*, !dbg !2030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %45, i64 290, i32 2, i1 false), !dbg !2030
  %arraydecay36 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2033
  %add.ptr37 = getelementptr inbounds i16, i16* %arraydecay36, i64 145, !dbg !2034
  %46 = bitcast i16* %add.ptr37 to i8*, !dbg !2035
  %47 = load i16*, i16** %in, align 8, !dbg !2036
  %48 = bitcast i16* %47 to i8*, !dbg !2035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %48, i64 480, i32 2, i1 false), !dbg !2035
  %arraydecay38 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2037
  %arraydecay39 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2038
  %call40 = call i32 @ff_g723_1_scale_vector(i16* %arraydecay38, i16* %arraydecay39, i32 385), !dbg !2039
  %arraydecay41 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2040
  %call42 = call i32 @estimate_pitch(i16* %arraydecay41, i32 145), !dbg !2041
  %49 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2042
  %pitch_lag = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %49, i32 0, i32 5, !dbg !2043
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag, i64 0, i64 0, !dbg !2042
  store i32 %call42, i32* %arrayidx43, align 4, !dbg !2044
  %arraydecay44 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2045
  %call45 = call i32 @estimate_pitch(i16* %arraydecay44, i32 265), !dbg !2046
  %50 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2047
  %pitch_lag46 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %50, i32 0, i32 5, !dbg !2048
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag46, i64 0, i64 1, !dbg !2047
  store i32 %call45, i32* %arrayidx47, align 4, !dbg !2049
  store i32 145, i32* %i, align 4, !dbg !2050
  store i32 0, i32* %j, align 4, !dbg !2052
  br label %for.cond, !dbg !2053

for.cond:                                         ; preds = %for.inc, %if.end
  %51 = load i32, i32* %j, align 4, !dbg !2054
  %cmp = icmp slt i32 %51, 4, !dbg !2057
  br i1 %cmp, label %for.body, label %for.end, !dbg !2058

for.body:                                         ; preds = %for.cond
  %arraydecay49 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2059
  %52 = load i32, i32* %i, align 4, !dbg !2060
  %idx.ext = sext i32 %52 to i64, !dbg !2061
  %add.ptr50 = getelementptr inbounds i16, i16* %arraydecay49, i64 %idx.ext, !dbg !2061
  %53 = load i32, i32* %j, align 4, !dbg !2062
  %shr = ashr i32 %53, 1, !dbg !2063
  %idxprom = sext i32 %shr to i64, !dbg !2064
  %54 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2064
  %pitch_lag51 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %54, i32 0, i32 5, !dbg !2065
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag51, i64 0, i64 %idxprom, !dbg !2064
  %55 = load i32, i32* %arrayidx52, align 4, !dbg !2064
  %conv53 = trunc i32 %55 to i16, !dbg !2064
  %arraydecay54 = getelementptr inbounds [4 x %struct.HFParam], [4 x %struct.HFParam]* %hf, i32 0, i32 0, !dbg !2066
  %56 = load i32, i32* %j, align 4, !dbg !2067
  %idx.ext55 = sext i32 %56 to i64, !dbg !2068
  %add.ptr56 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %arraydecay54, i64 %idx.ext55, !dbg !2068
  call void @comp_harmonic_coeff(i16* %add.ptr50, i16 signext %conv53, %struct.HFParam* %add.ptr56), !dbg !2069
  br label %for.inc, !dbg !2069

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !2070
  %add = add nsw i32 %57, 60, !dbg !2070
  store i32 %add, i32* %i, align 4, !dbg !2070
  %58 = load i32, i32* %j, align 4, !dbg !2072
  %inc = add nsw i32 %58, 1, !dbg !2072
  store i32 %inc, i32* %j, align 4, !dbg !2072
  br label %for.cond, !dbg !2073, !llvm.loop !2074

for.end:                                          ; preds = %for.cond
  %arraydecay57 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2076
  %59 = bitcast i16* %arraydecay57 to i8*, !dbg !2076
  %60 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2077
  %prev_weight_sig58 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %60, i32 0, i32 24, !dbg !2078
  %arraydecay59 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_weight_sig58, i32 0, i32 0, !dbg !2076
  %61 = bitcast i16* %arraydecay59 to i8*, !dbg !2076
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %61, i64 290, i32 2, i1 false), !dbg !2076
  %arraydecay60 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2079
  %add.ptr61 = getelementptr inbounds i16, i16* %arraydecay60, i64 145, !dbg !2080
  %62 = bitcast i16* %add.ptr61 to i8*, !dbg !2081
  %63 = load i16*, i16** %in, align 8, !dbg !2082
  %64 = bitcast i16* %63 to i8*, !dbg !2081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %64, i64 480, i32 2, i1 false), !dbg !2081
  %65 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2083
  %prev_weight_sig62 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %65, i32 0, i32 24, !dbg !2084
  %arraydecay63 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_weight_sig62, i32 0, i32 0, !dbg !2085
  %66 = bitcast i16* %arraydecay63 to i8*, !dbg !2085
  %arraydecay64 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2086
  %add.ptr65 = getelementptr inbounds i16, i16* %arraydecay64, i64 240, !dbg !2087
  %67 = bitcast i16* %add.ptr65 to i8*, !dbg !2085
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 290, i32 2, i1 false), !dbg !2085
  store i32 0, i32* %i, align 4, !dbg !2088
  store i32 0, i32* %j, align 4, !dbg !2090
  br label %for.cond66, !dbg !2091

for.cond66:                                       ; preds = %for.inc79, %for.end
  %68 = load i32, i32* %j, align 4, !dbg !2092
  %cmp67 = icmp slt i32 %68, 4, !dbg !2095
  br i1 %cmp67, label %for.body69, label %for.end82, !dbg !2096

for.body69:                                       ; preds = %for.cond66
  %arraydecay70 = getelementptr inbounds [4 x %struct.HFParam], [4 x %struct.HFParam]* %hf, i32 0, i32 0, !dbg !2097
  %69 = load i32, i32* %j, align 4, !dbg !2098
  %idx.ext71 = sext i32 %69 to i64, !dbg !2099
  %add.ptr72 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %arraydecay70, i64 %idx.ext71, !dbg !2099
  %arraydecay73 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2100
  %add.ptr74 = getelementptr inbounds i16, i16* %arraydecay73, i64 145, !dbg !2101
  %70 = load i32, i32* %i, align 4, !dbg !2102
  %idx.ext75 = sext i32 %70 to i64, !dbg !2103
  %add.ptr76 = getelementptr inbounds i16, i16* %add.ptr74, i64 %idx.ext75, !dbg !2103
  %71 = load i16*, i16** %in, align 8, !dbg !2104
  %72 = load i32, i32* %i, align 4, !dbg !2105
  %idx.ext77 = sext i32 %72 to i64, !dbg !2106
  %add.ptr78 = getelementptr inbounds i16, i16* %71, i64 %idx.ext77, !dbg !2106
  call void @harmonic_filter(%struct.HFParam* %add.ptr72, i16* %add.ptr76, i16* %add.ptr78), !dbg !2107
  br label %for.inc79, !dbg !2107

for.inc79:                                        ; preds = %for.body69
  %73 = load i32, i32* %i, align 4, !dbg !2108
  %add80 = add nsw i32 %73, 60, !dbg !2108
  store i32 %add80, i32* %i, align 4, !dbg !2108
  %74 = load i32, i32* %j, align 4, !dbg !2110
  %inc81 = add nsw i32 %74, 1, !dbg !2110
  store i32 %inc81, i32* %j, align 4, !dbg !2110
  br label %for.cond66, !dbg !2111, !llvm.loop !2112

for.end82:                                        ; preds = %for.cond66
  %arraydecay83 = getelementptr inbounds [10 x i16], [10 x i16]* %cur_lsp, i32 0, i32 0, !dbg !2114
  %75 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2115
  %prev_lsp84 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %75, i32 0, i32 7, !dbg !2116
  %arraydecay85 = getelementptr inbounds [10 x i16], [10 x i16]* %prev_lsp84, i32 0, i32 0, !dbg !2115
  %76 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2117
  %lsp_index86 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %76, i32 0, i32 4, !dbg !2118
  %arraydecay87 = getelementptr inbounds [3 x i8], [3 x i8]* %lsp_index86, i32 0, i32 0, !dbg !2117
  call void @ff_g723_1_inverse_quant(i16* %arraydecay83, i16* %arraydecay85, i8* %arraydecay87, i32 0), !dbg !2119
  %arraydecay88 = getelementptr inbounds [40 x i16], [40 x i16]* %qnt_lpc, i32 0, i32 0, !dbg !2120
  %arraydecay89 = getelementptr inbounds [10 x i16], [10 x i16]* %cur_lsp, i32 0, i32 0, !dbg !2121
  %77 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2122
  %prev_lsp90 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %77, i32 0, i32 7, !dbg !2123
  %arraydecay91 = getelementptr inbounds [10 x i16], [10 x i16]* %prev_lsp90, i32 0, i32 0, !dbg !2122
  call void @ff_g723_1_lsp_interpolate(i16* %arraydecay88, i16* %arraydecay89, i16* %arraydecay91), !dbg !2124
  %78 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2125
  %prev_lsp92 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %78, i32 0, i32 7, !dbg !2126
  %arraydecay93 = getelementptr inbounds [10 x i16], [10 x i16]* %prev_lsp92, i32 0, i32 0, !dbg !2127
  %79 = bitcast i16* %arraydecay93 to i8*, !dbg !2127
  %arraydecay94 = getelementptr inbounds [10 x i16], [10 x i16]* %cur_lsp, i32 0, i32 0, !dbg !2127
  %80 = bitcast i16* %arraydecay94 to i8*, !dbg !2127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 20, i32 4, i1 false), !dbg !2127
  store i32 0, i32* %offset, align 4, !dbg !2128
  store i32 0, i32* %i, align 4, !dbg !2129
  br label %for.cond95, !dbg !2130

for.cond95:                                       ; preds = %for.inc220, %for.end82
  %81 = load i32, i32* %i, align 4, !dbg !2131
  %cmp96 = icmp slt i32 %81, 4, !dbg !2133
  br i1 %cmp96, label %for.body98, label %for.end222, !dbg !2134

for.body98:                                       ; preds = %for.cond95
  call void @llvm.dbg.declare(metadata [60 x i16]* %impulse_resp, metadata !2135, metadata !1756), !dbg !2139
  call void @llvm.dbg.declare(metadata [64 x i16]* %residual, metadata !2140, metadata !1756), !dbg !2144
  call void @llvm.dbg.declare(metadata [60 x i16]* %flt_in, metadata !2145, metadata !1756), !dbg !2146
  call void @llvm.dbg.declare(metadata [10 x i16]* %zero, metadata !2147, metadata !1756), !dbg !2148
  call void @llvm.dbg.declare(metadata [10 x i16]* %fir, metadata !2149, metadata !1756), !dbg !2150
  call void @llvm.dbg.declare(metadata [10 x i16]* %iir, metadata !2151, metadata !1756), !dbg !2152
  %arraydecay99 = getelementptr inbounds [10 x i16], [10 x i16]* %zero, i32 0, i32 0, !dbg !2153
  %82 = bitcast i16* %arraydecay99 to i8*, !dbg !2153
  call void @llvm.memset.p0i8.i64(i8* %82, i8 0, i64 20, i32 16, i1 false), !dbg !2153
  %arraydecay100 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2154
  %83 = bitcast i16* %arraydecay100 to i8*, !dbg !2154
  call void @llvm.memset.p0i8.i64(i8* %83, i8 0, i64 290, i32 16, i1 false), !dbg !2154
  %arraydecay101 = getelementptr inbounds [60 x i16], [60 x i16]* %flt_in, i32 0, i32 0, !dbg !2155
  %84 = bitcast i16* %arraydecay101 to i8*, !dbg !2155
  call void @llvm.memset.p0i8.i64(i8* %84, i8 0, i64 120, i32 16, i1 false), !dbg !2155
  %arrayidx102 = getelementptr inbounds [60 x i16], [60 x i16]* %flt_in, i64 0, i64 0, !dbg !2156
  store i16 8192, i16* %arrayidx102, align 16, !dbg !2157
  %arraydecay103 = getelementptr inbounds [40 x i16], [40 x i16]* %qnt_lpc, i32 0, i32 0, !dbg !2158
  %85 = load i32, i32* %offset, align 4, !dbg !2159
  %idx.ext104 = sext i32 %85 to i64, !dbg !2160
  %add.ptr105 = getelementptr inbounds i16, i16* %arraydecay103, i64 %idx.ext104, !dbg !2160
  %arraydecay106 = getelementptr inbounds [80 x i16], [80 x i16]* %weighted_lpc, i32 0, i32 0, !dbg !2161
  %86 = load i32, i32* %offset, align 4, !dbg !2162
  %shl = shl i32 %86, 1, !dbg !2163
  %idx.ext107 = sext i32 %shl to i64, !dbg !2164
  %add.ptr108 = getelementptr inbounds i16, i16* %arraydecay106, i64 %idx.ext107, !dbg !2164
  %arraydecay109 = getelementptr inbounds [10 x i16], [10 x i16]* %zero, i32 0, i32 0, !dbg !2165
  %arraydecay110 = getelementptr inbounds [10 x i16], [10 x i16]* %zero, i32 0, i32 0, !dbg !2166
  %arraydecay111 = getelementptr inbounds [60 x i16], [60 x i16]* %flt_in, i32 0, i32 0, !dbg !2167
  %arraydecay112 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2168
  %add.ptr113 = getelementptr inbounds i16, i16* %arraydecay112, i64 145, !dbg !2169
  call void @synth_percept_filter(i16* %add.ptr105, i16* %add.ptr108, i16* %arraydecay109, i16* %arraydecay110, i16* %arraydecay111, i16* %add.ptr113, i32 1), !dbg !2170
  %arraydecay114 = getelementptr inbounds [4 x %struct.HFParam], [4 x %struct.HFParam]* %hf, i32 0, i32 0, !dbg !2171
  %87 = load i32, i32* %i, align 4, !dbg !2172
  %idx.ext115 = sext i32 %87 to i64, !dbg !2173
  %add.ptr116 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %arraydecay114, i64 %idx.ext115, !dbg !2173
  %arraydecay117 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2174
  %add.ptr118 = getelementptr inbounds i16, i16* %arraydecay117, i64 145, !dbg !2175
  %arraydecay119 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_resp, i32 0, i32 0, !dbg !2176
  call void @harmonic_filter(%struct.HFParam* %add.ptr116, i16* %add.ptr118, i16* %arraydecay119), !dbg !2177
  %arrayidx120 = getelementptr inbounds [60 x i16], [60 x i16]* %flt_in, i64 0, i64 0, !dbg !2178
  store i16 0, i16* %arrayidx120, align 16, !dbg !2179
  %arraydecay121 = getelementptr inbounds [10 x i16], [10 x i16]* %fir, i32 0, i32 0, !dbg !2180
  %88 = bitcast i16* %arraydecay121 to i8*, !dbg !2180
  %89 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2181
  %perf_fir_mem = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %89, i32 0, i32 27, !dbg !2182
  %arraydecay122 = getelementptr inbounds [10 x i16], [10 x i16]* %perf_fir_mem, i32 0, i32 0, !dbg !2180
  %90 = bitcast i16* %arraydecay122 to i8*, !dbg !2180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %90, i64 20, i32 4, i1 false), !dbg !2180
  %arraydecay123 = getelementptr inbounds [10 x i16], [10 x i16]* %iir, i32 0, i32 0, !dbg !2183
  %91 = bitcast i16* %arraydecay123 to i8*, !dbg !2183
  %92 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2184
  %perf_iir_mem = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %92, i32 0, i32 28, !dbg !2185
  %arraydecay124 = getelementptr inbounds [10 x i16], [10 x i16]* %perf_iir_mem, i32 0, i32 0, !dbg !2183
  %93 = bitcast i16* %arraydecay124 to i8*, !dbg !2183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %93, i64 20, i32 4, i1 false), !dbg !2183
  %arraydecay125 = getelementptr inbounds [40 x i16], [40 x i16]* %qnt_lpc, i32 0, i32 0, !dbg !2186
  %94 = load i32, i32* %offset, align 4, !dbg !2187
  %idx.ext126 = sext i32 %94 to i64, !dbg !2188
  %add.ptr127 = getelementptr inbounds i16, i16* %arraydecay125, i64 %idx.ext126, !dbg !2188
  %arraydecay128 = getelementptr inbounds [80 x i16], [80 x i16]* %weighted_lpc, i32 0, i32 0, !dbg !2189
  %95 = load i32, i32* %offset, align 4, !dbg !2190
  %shl129 = shl i32 %95, 1, !dbg !2191
  %idx.ext130 = sext i32 %shl129 to i64, !dbg !2192
  %add.ptr131 = getelementptr inbounds i16, i16* %arraydecay128, i64 %idx.ext130, !dbg !2192
  %arraydecay132 = getelementptr inbounds [10 x i16], [10 x i16]* %fir, i32 0, i32 0, !dbg !2193
  %arraydecay133 = getelementptr inbounds [10 x i16], [10 x i16]* %iir, i32 0, i32 0, !dbg !2194
  %arraydecay134 = getelementptr inbounds [60 x i16], [60 x i16]* %flt_in, i32 0, i32 0, !dbg !2195
  %arraydecay135 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2196
  %add.ptr136 = getelementptr inbounds i16, i16* %arraydecay135, i64 145, !dbg !2197
  call void @synth_percept_filter(i16* %add.ptr127, i16* %add.ptr131, i16* %arraydecay132, i16* %arraydecay133, i16* %arraydecay134, i16* %add.ptr136, i32 0), !dbg !2198
  %arraydecay137 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2199
  %96 = bitcast i16* %arraydecay137 to i8*, !dbg !2199
  %97 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2200
  %harmonic_mem = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %97, i32 0, i32 29, !dbg !2201
  %arraydecay138 = getelementptr inbounds [145 x i16], [145 x i16]* %harmonic_mem, i32 0, i32 0, !dbg !2199
  %98 = bitcast i16* %arraydecay138 to i8*, !dbg !2199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %98, i64 290, i32 4, i1 false), !dbg !2199
  %arraydecay139 = getelementptr inbounds [4 x %struct.HFParam], [4 x %struct.HFParam]* %hf, i32 0, i32 0, !dbg !2202
  %99 = load i32, i32* %i, align 4, !dbg !2203
  %idx.ext140 = sext i32 %99 to i64, !dbg !2204
  %add.ptr141 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %arraydecay139, i64 %idx.ext140, !dbg !2204
  %arraydecay142 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2205
  %add.ptr143 = getelementptr inbounds i16, i16* %arraydecay142, i64 145, !dbg !2206
  %100 = load i16*, i16** %in, align 8, !dbg !2207
  call void @harmonic_noise_sub(%struct.HFParam* %add.ptr141, i16* %add.ptr143, i16* %100), !dbg !2208
  %101 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2209
  %arraydecay144 = getelementptr inbounds [64 x i16], [64 x i16]* %residual, i32 0, i32 0, !dbg !2210
  %arraydecay145 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_resp, i32 0, i32 0, !dbg !2211
  %102 = load i16*, i16** %in, align 8, !dbg !2212
  %103 = load i32, i32* %i, align 4, !dbg !2213
  call void @acb_search(%struct.G723_1_ChannelContext* %101, i16* %arraydecay144, i16* %arraydecay145, i16* %102, i32 %103), !dbg !2214
  %arraydecay146 = getelementptr inbounds [64 x i16], [64 x i16]* %residual, i32 0, i32 0, !dbg !2215
  %104 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2216
  %prev_excitation = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %104, i32 0, i32 9, !dbg !2217
  %arraydecay147 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_excitation, i32 0, i32 0, !dbg !2216
  %105 = load i32, i32* %i, align 4, !dbg !2218
  %shr148 = ashr i32 %105, 1, !dbg !2219
  %idxprom149 = sext i32 %shr148 to i64, !dbg !2220
  %106 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2220
  %pitch_lag150 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %106, i32 0, i32 5, !dbg !2221
  %arrayidx151 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag150, i64 0, i64 %idxprom149, !dbg !2220
  %107 = load i32, i32* %arrayidx151, align 4, !dbg !2220
  %108 = load i32, i32* %i, align 4, !dbg !2222
  %idxprom152 = sext i32 %108 to i64, !dbg !2223
  %109 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2223
  %subframe = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %109, i32 0, i32 0, !dbg !2224
  %arrayidx153 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe, i64 0, i64 %idxprom152, !dbg !2223
  %110 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2225
  %cur_rate = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %110, i32 0, i32 3, !dbg !2226
  %111 = load i32, i32* %cur_rate, align 4, !dbg !2226
  call void @ff_g723_1_gen_acb_excitation(i16* %arraydecay146, i16* %arraydecay147, i32 %107, %struct.G723_1_Subframe* %arrayidx153, i32 %111), !dbg !2227
  %arraydecay154 = getelementptr inbounds [64 x i16], [64 x i16]* %residual, i32 0, i32 0, !dbg !2228
  %arraydecay155 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_resp, i32 0, i32 0, !dbg !2229
  %112 = load i16*, i16** %in, align 8, !dbg !2230
  call void @sub_acb_contrib(i16* %arraydecay154, i16* %arraydecay155, i16* %112), !dbg !2231
  %113 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2232
  %arraydecay156 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_resp, i32 0, i32 0, !dbg !2233
  %114 = load i16*, i16** %in, align 8, !dbg !2234
  %115 = load i32, i32* %i, align 4, !dbg !2235
  call void @fcb_search(%struct.G723_1_ChannelContext* %113, i16* %arraydecay156, i16* %114, i32 %115), !dbg !2236
  %arraydecay157 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_resp, i32 0, i32 0, !dbg !2237
  %116 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2238
  %prev_excitation158 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %116, i32 0, i32 9, !dbg !2239
  %arraydecay159 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_excitation158, i32 0, i32 0, !dbg !2238
  %117 = load i32, i32* %i, align 4, !dbg !2240
  %shr160 = ashr i32 %117, 1, !dbg !2241
  %idxprom161 = sext i32 %shr160 to i64, !dbg !2242
  %118 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2242
  %pitch_lag162 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %118, i32 0, i32 5, !dbg !2243
  %arrayidx163 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag162, i64 0, i64 %idxprom161, !dbg !2242
  %119 = load i32, i32* %arrayidx163, align 4, !dbg !2242
  %120 = load i32, i32* %i, align 4, !dbg !2244
  %idxprom164 = sext i32 %120 to i64, !dbg !2245
  %121 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2245
  %subframe165 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %121, i32 0, i32 0, !dbg !2246
  %arrayidx166 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe165, i64 0, i64 %idxprom164, !dbg !2245
  call void @ff_g723_1_gen_acb_excitation(i16* %arraydecay157, i16* %arraydecay159, i32 %119, %struct.G723_1_Subframe* %arrayidx166, i32 0), !dbg !2247
  %122 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2248
  %prev_excitation167 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %122, i32 0, i32 9, !dbg !2249
  %arraydecay168 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_excitation167, i32 0, i32 0, !dbg !2250
  %123 = bitcast i16* %arraydecay168 to i8*, !dbg !2250
  %124 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2251
  %prev_excitation169 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %124, i32 0, i32 9, !dbg !2252
  %arraydecay170 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_excitation169, i32 0, i32 0, !dbg !2251
  %add.ptr171 = getelementptr inbounds i16, i16* %arraydecay170, i64 60, !dbg !2253
  %125 = bitcast i16* %add.ptr171 to i8*, !dbg !2250
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %123, i8* %125, i64 170, i32 2, i1 false), !dbg !2250
  store i32 0, i32* %j, align 4, !dbg !2254
  br label %for.cond172, !dbg !2255

for.cond172:                                      ; preds = %for.inc187, %for.body98
  %126 = load i32, i32* %j, align 4, !dbg !2256
  %cmp173 = icmp slt i32 %126, 60, !dbg !2258
  br i1 %cmp173, label %for.body175, label %for.end189, !dbg !2259

for.body175:                                      ; preds = %for.cond172
  %127 = load i32, i32* %j, align 4, !dbg !2260
  %idxprom176 = sext i32 %127 to i64, !dbg !2261
  %128 = load i16*, i16** %in, align 8, !dbg !2261
  %arrayidx177 = getelementptr inbounds i16, i16* %128, i64 %idxprom176, !dbg !2261
  %129 = load i16, i16* %arrayidx177, align 2, !dbg !2261
  %conv178 = sext i16 %129 to i32, !dbg !2261
  %shl179 = shl i32 %conv178, 1, !dbg !2262
  %130 = load i32, i32* %j, align 4, !dbg !2263
  %idxprom180 = sext i32 %130 to i64, !dbg !2264
  %arrayidx181 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_resp, i64 0, i64 %idxprom180, !dbg !2264
  %131 = load i16, i16* %arrayidx181, align 2, !dbg !2264
  %conv182 = sext i16 %131 to i32, !dbg !2264
  %add183 = add nsw i32 %shl179, %conv182, !dbg !2265
  store i32 %add183, i32* %a.addr.i, align 4, !dbg !2266
  %132 = load i32, i32* %a.addr.i, align 4, !dbg !2267
  %add.i = add i32 %132, 32768, !dbg !2269
  %and.i = and i32 %add.i, -65536, !dbg !2270
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2270
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2271

if.then.i:                                        ; preds = %for.body175
  %133 = load i32, i32* %a.addr.i, align 4, !dbg !2272
  %shr.i = ashr i32 %133, 31, !dbg !2274
  %xor.i = xor i32 %shr.i, 32767, !dbg !2275
  %conv.i = trunc i32 %xor.i to i16, !dbg !2276
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !2277
  br label %av_clip_int16_c.exit, !dbg !2277

if.else.i:                                        ; preds = %for.body175
  %134 = load i32, i32* %a.addr.i, align 4, !dbg !2278
  %conv1.i = trunc i32 %134 to i16, !dbg !2278
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !2279
  br label %av_clip_int16_c.exit, !dbg !2279

av_clip_int16_c.exit:                             ; preds = %if.then.i, %if.else.i
  %135 = load i16, i16* %retval.i, align 2, !dbg !2280
  %136 = load i32, i32* %j, align 4, !dbg !2281
  %idxprom185 = sext i32 %136 to i64, !dbg !2282
  %137 = load i16*, i16** %in, align 8, !dbg !2282
  %arrayidx186 = getelementptr inbounds i16, i16* %137, i64 %idxprom185, !dbg !2282
  store i16 %135, i16* %arrayidx186, align 2, !dbg !2283
  br label %for.inc187, !dbg !2282

for.inc187:                                       ; preds = %av_clip_int16_c.exit
  %138 = load i32, i32* %j, align 4, !dbg !2284
  %inc188 = add nsw i32 %138, 1, !dbg !2284
  store i32 %inc188, i32* %j, align 4, !dbg !2284
  br label %for.cond172, !dbg !2286, !llvm.loop !2287

for.end189:                                       ; preds = %for.cond172
  %139 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2289
  %prev_excitation190 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %139, i32 0, i32 9, !dbg !2290
  %arraydecay191 = getelementptr inbounds [145 x i16], [145 x i16]* %prev_excitation190, i32 0, i32 0, !dbg !2289
  %add.ptr192 = getelementptr inbounds i16, i16* %arraydecay191, i64 145, !dbg !2291
  %add.ptr193 = getelementptr inbounds i16, i16* %add.ptr192, i64 -60, !dbg !2292
  %140 = bitcast i16* %add.ptr193 to i8*, !dbg !2293
  %141 = load i16*, i16** %in, align 8, !dbg !2294
  %142 = bitcast i16* %141 to i8*, !dbg !2293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %142, i64 120, i32 2, i1 false), !dbg !2293
  %arraydecay194 = getelementptr inbounds [40 x i16], [40 x i16]* %qnt_lpc, i32 0, i32 0, !dbg !2295
  %143 = load i32, i32* %offset, align 4, !dbg !2296
  %idx.ext195 = sext i32 %143 to i64, !dbg !2297
  %add.ptr196 = getelementptr inbounds i16, i16* %arraydecay194, i64 %idx.ext195, !dbg !2297
  %arraydecay197 = getelementptr inbounds [80 x i16], [80 x i16]* %weighted_lpc, i32 0, i32 0, !dbg !2298
  %144 = load i32, i32* %offset, align 4, !dbg !2299
  %shl198 = shl i32 %144, 1, !dbg !2300
  %idx.ext199 = sext i32 %shl198 to i64, !dbg !2301
  %add.ptr200 = getelementptr inbounds i16, i16* %arraydecay197, i64 %idx.ext199, !dbg !2301
  %145 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2302
  %perf_fir_mem201 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %145, i32 0, i32 27, !dbg !2303
  %arraydecay202 = getelementptr inbounds [10 x i16], [10 x i16]* %perf_fir_mem201, i32 0, i32 0, !dbg !2302
  %146 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2304
  %perf_iir_mem203 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %146, i32 0, i32 28, !dbg !2305
  %arraydecay204 = getelementptr inbounds [10 x i16], [10 x i16]* %perf_iir_mem203, i32 0, i32 0, !dbg !2304
  %147 = load i16*, i16** %in, align 8, !dbg !2306
  %arraydecay205 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2307
  %add.ptr206 = getelementptr inbounds i16, i16* %arraydecay205, i64 145, !dbg !2308
  call void @synth_percept_filter(i16* %add.ptr196, i16* %add.ptr200, i16* %arraydecay202, i16* %arraydecay204, i16* %147, i16* %add.ptr206, i32 0), !dbg !2309
  %148 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2310
  %harmonic_mem207 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %148, i32 0, i32 29, !dbg !2311
  %arraydecay208 = getelementptr inbounds [145 x i16], [145 x i16]* %harmonic_mem207, i32 0, i32 0, !dbg !2312
  %149 = bitcast i16* %arraydecay208 to i8*, !dbg !2312
  %150 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2313
  %harmonic_mem209 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %150, i32 0, i32 29, !dbg !2314
  %arraydecay210 = getelementptr inbounds [145 x i16], [145 x i16]* %harmonic_mem209, i32 0, i32 0, !dbg !2313
  %add.ptr211 = getelementptr inbounds i16, i16* %arraydecay210, i64 60, !dbg !2315
  %151 = bitcast i16* %add.ptr211 to i8*, !dbg !2312
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %149, i8* %151, i64 170, i32 2, i1 false), !dbg !2312
  %152 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2316
  %harmonic_mem212 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %152, i32 0, i32 29, !dbg !2317
  %arraydecay213 = getelementptr inbounds [145 x i16], [145 x i16]* %harmonic_mem212, i32 0, i32 0, !dbg !2316
  %add.ptr214 = getelementptr inbounds i16, i16* %arraydecay213, i64 145, !dbg !2318
  %add.ptr215 = getelementptr inbounds i16, i16* %add.ptr214, i64 -60, !dbg !2319
  %153 = bitcast i16* %add.ptr215 to i8*, !dbg !2320
  %arraydecay216 = getelementptr inbounds [385 x i16], [385 x i16]* %vector, i32 0, i32 0, !dbg !2321
  %add.ptr217 = getelementptr inbounds i16, i16* %arraydecay216, i64 145, !dbg !2322
  %154 = bitcast i16* %add.ptr217 to i8*, !dbg !2320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 120, i32 2, i1 false), !dbg !2320
  %155 = load i16*, i16** %in, align 8, !dbg !2323
  %add.ptr218 = getelementptr inbounds i16, i16* %155, i64 60, !dbg !2323
  store i16* %add.ptr218, i16** %in, align 8, !dbg !2323
  %156 = load i32, i32* %offset, align 4, !dbg !2324
  %add219 = add nsw i32 %156, 10, !dbg !2324
  store i32 %add219, i32* %offset, align 4, !dbg !2324
  br label %for.inc220, !dbg !2325

for.inc220:                                       ; preds = %for.end189
  %157 = load i32, i32* %i, align 4, !dbg !2326
  %inc221 = add nsw i32 %157, 1, !dbg !2326
  store i32 %inc221, i32* %i, align 4, !dbg !2326
  br label %for.cond95, !dbg !2328, !llvm.loop !2329

for.end222:                                       ; preds = %for.cond95
  %158 = load i16*, i16** %start, align 8, !dbg !2331
  %159 = bitcast i16* %158 to i8*, !dbg !2331
  call void @av_free(i8* %159), !dbg !2332
  %160 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2333
  %161 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2335
  %call223 = call i32 @ff_alloc_packet2(%struct.AVCodecContext* %160, %struct.AVPacket* %161, i64 24, i64 0), !dbg !2336
  store i32 %call223, i32* %ret, align 4, !dbg !2337
  %cmp224 = icmp slt i32 %call223, 0, !dbg !2338
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !2339

if.then226:                                       ; preds = %for.end222
  %162 = load i32, i32* %ret, align 4, !dbg !2340
  store i32 %162, i32* %retval, align 4, !dbg !2341
  br label %return, !dbg !2341

if.end227:                                        ; preds = %for.end222
  %163 = load i32*, i32** %got_packet_ptr.addr, align 8, !dbg !2342
  store i32 1, i32* %163, align 4, !dbg !2343
  %164 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p, align 8, !dbg !2344
  %165 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2345
  %call228 = call i32 @pack_bitstream(%struct.G723_1_ChannelContext* %164, %struct.AVPacket* %165), !dbg !2346
  %166 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2347
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %166, i32 0, i32 4, !dbg !2348
  store i32 %call228, i32* %size, align 8, !dbg !2349
  store i32 0, i32* %retval, align 4, !dbg !2350
  br label %return, !dbg !2350

return:                                           ; preds = %if.end227, %if.then226, %if.then
  %167 = load i32, i32* %retval, align 4, !dbg !2351
  ret i32 %167, !dbg !2351
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_log(i8*, i32, i8*, ...) #3

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare noalias i8* @av_malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal void @highpass_filter(i16* %buf, i16* %fir, i32* %iir) #1 !dbg !2352 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !2359
  %buf.addr = alloca i16*, align 8
  %fir.addr = alloca i16*, align 8
  %iir.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !2364, metadata !1756), !dbg !2365
  store i16* %fir, i16** %fir.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %fir.addr, metadata !2366, metadata !1756), !dbg !2367
  store i32* %iir, i32** %iir.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %iir.addr, metadata !2368, metadata !1756), !dbg !2369
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2370, metadata !1756), !dbg !2371
  store i32 0, i32* %i, align 4, !dbg !2372
  br label %for.cond, !dbg !2373

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2374
  %cmp = icmp slt i32 %0, 240, !dbg !2376
  br i1 %cmp, label %for.body, label %for.end, !dbg !2377

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2378
  %idxprom = sext i32 %1 to i64, !dbg !2379
  %2 = load i16*, i16** %buf.addr, align 8, !dbg !2379
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !2379
  %3 = load i16, i16* %arrayidx, align 2, !dbg !2379
  %conv = sext i16 %3 to i32, !dbg !2379
  %shl = shl i32 %conv, 15, !dbg !2380
  %4 = load i16*, i16** %fir.addr, align 8, !dbg !2381
  %5 = load i16, i16* %4, align 2, !dbg !2382
  %conv1 = sext i16 %5 to i32, !dbg !2382
  %sub = sub nsw i32 0, %conv1, !dbg !2383
  %shl2 = shl i32 %sub, 15, !dbg !2384
  %add = add nsw i32 %shl, %shl2, !dbg !2385
  %6 = load i32*, i32** %iir.addr, align 8, !dbg !2386
  %7 = load i32, i32* %6, align 4, !dbg !2387
  %shr = ashr i32 %7, 16, !dbg !2388
  %mul = mul nsw i32 %shr, 32512, !dbg !2389
  %mul3 = mul nsw i32 %mul, 2, !dbg !2390
  %8 = load i32*, i32** %iir.addr, align 8, !dbg !2391
  %9 = load i32, i32* %8, align 4, !dbg !2392
  %and = and i32 %9, 65535, !dbg !2393
  %mul4 = mul nsw i32 %and, 32512, !dbg !2394
  %shr5 = ashr i32 %mul4, 15, !dbg !2395
  %add6 = add nsw i32 %mul3, %shr5, !dbg !2396
  %add7 = add nsw i32 %add, %add6, !dbg !2397
  %10 = load i32*, i32** %iir.addr, align 8, !dbg !2398
  store i32 %add7, i32* %10, align 4, !dbg !2399
  %11 = load i32, i32* %i, align 4, !dbg !2400
  %idxprom8 = sext i32 %11 to i64, !dbg !2401
  %12 = load i16*, i16** %buf.addr, align 8, !dbg !2401
  %arrayidx9 = getelementptr inbounds i16, i16* %12, i64 %idxprom8, !dbg !2401
  %13 = load i16, i16* %arrayidx9, align 2, !dbg !2401
  %14 = load i16*, i16** %fir.addr, align 8, !dbg !2402
  store i16 %13, i16* %14, align 2, !dbg !2403
  %15 = load i32*, i32** %iir.addr, align 8, !dbg !2404
  %16 = load i32, i32* %15, align 4, !dbg !2405
  %conv10 = sext i32 %16 to i64, !dbg !2406
  %add11 = add nsw i64 %conv10, 32768, !dbg !2407
  store i64 %add11, i64* %a.addr.i, align 8, !dbg !2408
  %17 = load i64, i64* %a.addr.i, align 8, !dbg !2409
  %add.i = add nsw i64 %17, 2147483648, !dbg !2411
  %and.i = and i64 %add.i, -4294967296, !dbg !2412
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !2412
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2413

if.then.i:                                        ; preds = %for.body
  %18 = load i64, i64* %a.addr.i, align 8, !dbg !2414
  %shr.i = ashr i64 %18, 63, !dbg !2416
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !2417
  %conv.i = trunc i64 %xor.i to i32, !dbg !2418
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !2419
  br label %av_clipl_int32_c.exit, !dbg !2419

if.else.i:                                        ; preds = %for.body
  %19 = load i64, i64* %a.addr.i, align 8, !dbg !2420
  %conv1.i = trunc i64 %19 to i32, !dbg !2421
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !2422
  br label %av_clipl_int32_c.exit, !dbg !2422

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %20 = load i32, i32* %retval.i, align 4, !dbg !2423
  %shr12 = ashr i32 %20, 16, !dbg !2424
  %conv13 = trunc i32 %shr12 to i16, !dbg !2408
  %21 = load i32, i32* %i, align 4, !dbg !2425
  %idxprom14 = sext i32 %21 to i64, !dbg !2426
  %22 = load i16*, i16** %buf.addr, align 8, !dbg !2426
  %arrayidx15 = getelementptr inbounds i16, i16* %22, i64 %idxprom14, !dbg !2426
  store i16 %conv13, i16* %arrayidx15, align 2, !dbg !2427
  br label %for.inc, !dbg !2428

for.inc:                                          ; preds = %av_clipl_int32_c.exit
  %23 = load i32, i32* %i, align 4, !dbg !2429
  %inc = add nsw i32 %23, 1, !dbg !2429
  store i32 %inc, i32* %i, align 4, !dbg !2429
  br label %for.cond, !dbg !2431, !llvm.loop !2432

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2434
}

; Function Attrs: nounwind uwtable
define internal void @comp_lpc_coeff(i16* %buf, i16* %lpc) #1 !dbg !2435 {
entry:
  %buf.addr = alloca i16*, align 8
  %lpc.addr = alloca i16*, align 8
  %autocorr = alloca [44 x i16], align 16
  %autocorr_ptr = alloca i16*, align 8
  %lpc_ptr = alloca i16*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !2438, metadata !1756), !dbg !2439
  store i16* %lpc, i16** %lpc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lpc.addr, metadata !2440, metadata !1756), !dbg !2441
  call void @llvm.dbg.declare(metadata [44 x i16]* %autocorr, metadata !2442, metadata !1756), !dbg !2446
  call void @llvm.dbg.declare(metadata i16** %autocorr_ptr, metadata !2447, metadata !1756), !dbg !2448
  %arraydecay = getelementptr inbounds [44 x i16], [44 x i16]* %autocorr, i32 0, i32 0, !dbg !2449
  store i16* %arraydecay, i16** %autocorr_ptr, align 8, !dbg !2448
  call void @llvm.dbg.declare(metadata i16** %lpc_ptr, metadata !2450, metadata !1756), !dbg !2451
  %0 = load i16*, i16** %lpc.addr, align 8, !dbg !2452
  store i16* %0, i16** %lpc_ptr, align 8, !dbg !2451
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2453, metadata !1756), !dbg !2454
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2455, metadata !1756), !dbg !2456
  store i32 0, i32* %i, align 4, !dbg !2457
  store i32 0, i32* %j, align 4, !dbg !2459
  br label %for.cond, !dbg !2460

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %j, align 4, !dbg !2461
  %cmp = icmp slt i32 %1, 4, !dbg !2464
  br i1 %cmp, label %for.body, label %for.end, !dbg !2465

for.body:                                         ; preds = %for.cond
  %2 = load i16*, i16** %buf.addr, align 8, !dbg !2466
  %3 = load i32, i32* %i, align 4, !dbg !2468
  %idx.ext = sext i32 %3 to i64, !dbg !2469
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %idx.ext, !dbg !2469
  %4 = load i16*, i16** %autocorr_ptr, align 8, !dbg !2470
  call void @comp_autocorr(i16* %add.ptr, i16* %4), !dbg !2471
  %5 = load i16*, i16** %lpc_ptr, align 8, !dbg !2472
  %6 = load i16*, i16** %autocorr_ptr, align 8, !dbg !2473
  %add.ptr1 = getelementptr inbounds i16, i16* %6, i64 1, !dbg !2474
  %7 = load i16*, i16** %autocorr_ptr, align 8, !dbg !2475
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 0, !dbg !2475
  %8 = load i16, i16* %arrayidx, align 2, !dbg !2475
  call void @levinson_durbin(i16* %5, i16* %add.ptr1, i16 signext %8), !dbg !2476
  %9 = load i16*, i16** %lpc_ptr, align 8, !dbg !2477
  %add.ptr2 = getelementptr inbounds i16, i16* %9, i64 10, !dbg !2477
  store i16* %add.ptr2, i16** %lpc_ptr, align 8, !dbg !2477
  %10 = load i16*, i16** %autocorr_ptr, align 8, !dbg !2478
  %add.ptr3 = getelementptr inbounds i16, i16* %10, i64 11, !dbg !2478
  store i16* %add.ptr3, i16** %autocorr_ptr, align 8, !dbg !2478
  br label %for.inc, !dbg !2479

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !2480
  %add = add nsw i32 %11, 60, !dbg !2480
  store i32 %add, i32* %i, align 4, !dbg !2480
  %12 = load i32, i32* %j, align 4, !dbg !2482
  %inc = add nsw i32 %12, 1, !dbg !2482
  store i32 %inc, i32* %j, align 4, !dbg !2482
  br label %for.cond, !dbg !2483, !llvm.loop !2484

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2486
}

; Function Attrs: nounwind uwtable
define internal void @lpc2lsp(i16* %lpc, i16* %prev_lsp, i16* %lsp) #1 !dbg !2487 {
entry:
  %retval.i244 = alloca i32, align 4
  %a.addr.i245 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i245, metadata !2355, metadata !1756), !dbg !2490
  %retval.i232 = alloca i32, align 4
  %a.addr.i233 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i233, metadata !2355, metadata !1756), !dbg !2492
  %retval.i220 = alloca i32, align 4
  %a.addr.i221 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i221, metadata !2355, metadata !1756), !dbg !2497
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !2501
  %lpc.addr = alloca i16*, align 8
  %prev_lsp.addr = alloca i16*, align 8
  %lsp.addr = alloca i16*, align 8
  %f = alloca [12 x i32], align 16
  %max = alloca i32, align 4
  %shift = alloca i32, align 4
  %cur_val = alloca i32, align 4
  %prev_val = alloca i32, align 4
  %count = alloca i32, align 4
  %p = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %temp = alloca i64, align 8
  %abs_cur = alloca i32, align 4
  %abs_prev = alloca i32, align 4
  %sum = alloca i32, align 4
  store i16* %lpc, i16** %lpc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lpc.addr, metadata !2505, metadata !1756), !dbg !2506
  store i16* %prev_lsp, i16** %prev_lsp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %prev_lsp.addr, metadata !2507, metadata !1756), !dbg !2508
  store i16* %lsp, i16** %lsp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lsp.addr, metadata !2509, metadata !1756), !dbg !2510
  call void @llvm.dbg.declare(metadata [12 x i32]* %f, metadata !2511, metadata !1756), !dbg !2515
  call void @llvm.dbg.declare(metadata i32* %max, metadata !2516, metadata !1756), !dbg !2517
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !2518, metadata !1756), !dbg !2519
  call void @llvm.dbg.declare(metadata i32* %cur_val, metadata !2520, metadata !1756), !dbg !2521
  call void @llvm.dbg.declare(metadata i32* %prev_val, metadata !2522, metadata !1756), !dbg !2523
  call void @llvm.dbg.declare(metadata i32* %count, metadata !2524, metadata !1756), !dbg !2525
  call void @llvm.dbg.declare(metadata i32* %p, metadata !2526, metadata !1756), !dbg !2527
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2528, metadata !1756), !dbg !2529
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2530, metadata !1756), !dbg !2531
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !2532, metadata !1756), !dbg !2533
  store i32 0, i32* %i, align 4, !dbg !2534
  br label %for.cond, !dbg !2536

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2537
  %cmp = icmp slt i32 %0, 10, !dbg !2540
  br i1 %cmp, label %for.body, label %for.end, !dbg !2541

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2542
  %idxprom = sext i32 %1 to i64, !dbg !2543
  %2 = load i16*, i16** %lpc.addr, align 8, !dbg !2543
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !2543
  %3 = load i16, i16* %arrayidx, align 2, !dbg !2543
  %conv = sext i16 %3 to i32, !dbg !2543
  %4 = load i32, i32* %i, align 4, !dbg !2544
  %idxprom1 = sext i32 %4 to i64, !dbg !2545
  %arrayidx2 = getelementptr inbounds [10 x i16], [10 x i16]* @bandwidth_expand, i64 0, i64 %idxprom1, !dbg !2545
  %5 = load i16, i16* %arrayidx2, align 2, !dbg !2545
  %conv3 = sext i16 %5 to i32, !dbg !2545
  %mul = mul nsw i32 %conv, %conv3, !dbg !2546
  %add = add nsw i32 %mul, 16384, !dbg !2547
  %shr = ashr i32 %add, 15, !dbg !2548
  %conv4 = trunc i32 %shr to i16, !dbg !2549
  %6 = load i32, i32* %i, align 4, !dbg !2550
  %idxprom5 = sext i32 %6 to i64, !dbg !2551
  %7 = load i16*, i16** %lsp.addr, align 8, !dbg !2551
  %arrayidx6 = getelementptr inbounds i16, i16* %7, i64 %idxprom5, !dbg !2551
  store i16 %conv4, i16* %arrayidx6, align 2, !dbg !2552
  br label %for.inc, !dbg !2551

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !2553
  %inc = add nsw i32 %8, 1, !dbg !2553
  store i32 %inc, i32* %i, align 4, !dbg !2553
  br label %for.cond, !dbg !2555, !llvm.loop !2556

for.end:                                          ; preds = %for.cond
  %arrayidx7 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 1, !dbg !2558
  store i32 33554432, i32* %arrayidx7, align 4, !dbg !2559
  %arrayidx8 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 0, !dbg !2560
  store i32 33554432, i32* %arrayidx8, align 16, !dbg !2561
  store i32 0, i32* %i, align 4, !dbg !2562
  br label %for.cond9, !dbg !2564

for.cond9:                                        ; preds = %for.inc47, %for.end
  %9 = load i32, i32* %i, align 4, !dbg !2565
  %cmp10 = icmp slt i32 %9, 5, !dbg !2568
  br i1 %cmp10, label %for.body12, label %for.end49, !dbg !2569

for.body12:                                       ; preds = %for.cond9
  %10 = load i32, i32* %i, align 4, !dbg !2570
  %mul13 = mul nsw i32 2, %10, !dbg !2572
  %idxprom14 = sext i32 %mul13 to i64, !dbg !2573
  %arrayidx15 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom14, !dbg !2573
  %11 = load i32, i32* %arrayidx15, align 4, !dbg !2573
  %sub = sub nsw i32 0, %11, !dbg !2574
  %12 = load i32, i32* %i, align 4, !dbg !2575
  %idxprom16 = sext i32 %12 to i64, !dbg !2576
  %13 = load i16*, i16** %lsp.addr, align 8, !dbg !2576
  %arrayidx17 = getelementptr inbounds i16, i16* %13, i64 %idxprom16, !dbg !2576
  %14 = load i16, i16* %arrayidx17, align 2, !dbg !2576
  %conv18 = sext i16 %14 to i32, !dbg !2576
  %15 = load i32, i32* %i, align 4, !dbg !2577
  %sub19 = sub nsw i32 9, %15, !dbg !2578
  %idxprom20 = sext i32 %sub19 to i64, !dbg !2579
  %16 = load i16*, i16** %lsp.addr, align 8, !dbg !2579
  %arrayidx21 = getelementptr inbounds i16, i16* %16, i64 %idxprom20, !dbg !2579
  %17 = load i16, i16* %arrayidx21, align 2, !dbg !2579
  %conv22 = sext i16 %17 to i32, !dbg !2579
  %add23 = add nsw i32 %conv18, %conv22, !dbg !2580
  %shl = shl i32 %add23, 12, !dbg !2581
  %sub24 = sub nsw i32 %sub, %shl, !dbg !2582
  %18 = load i32, i32* %i, align 4, !dbg !2583
  %mul25 = mul nsw i32 2, %18, !dbg !2584
  %add26 = add nsw i32 %mul25, 2, !dbg !2585
  %idxprom27 = sext i32 %add26 to i64, !dbg !2586
  %arrayidx28 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom27, !dbg !2586
  store i32 %sub24, i32* %arrayidx28, align 4, !dbg !2587
  %19 = load i32, i32* %i, align 4, !dbg !2588
  %mul29 = mul nsw i32 2, %19, !dbg !2589
  %add30 = add nsw i32 %mul29, 1, !dbg !2590
  %idxprom31 = sext i32 %add30 to i64, !dbg !2591
  %arrayidx32 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom31, !dbg !2591
  %20 = load i32, i32* %arrayidx32, align 4, !dbg !2591
  %21 = load i32, i32* %i, align 4, !dbg !2592
  %idxprom33 = sext i32 %21 to i64, !dbg !2593
  %22 = load i16*, i16** %lsp.addr, align 8, !dbg !2593
  %arrayidx34 = getelementptr inbounds i16, i16* %22, i64 %idxprom33, !dbg !2593
  %23 = load i16, i16* %arrayidx34, align 2, !dbg !2593
  %conv35 = sext i16 %23 to i32, !dbg !2593
  %24 = load i32, i32* %i, align 4, !dbg !2594
  %sub36 = sub nsw i32 9, %24, !dbg !2595
  %idxprom37 = sext i32 %sub36 to i64, !dbg !2596
  %25 = load i16*, i16** %lsp.addr, align 8, !dbg !2596
  %arrayidx38 = getelementptr inbounds i16, i16* %25, i64 %idxprom37, !dbg !2596
  %26 = load i16, i16* %arrayidx38, align 2, !dbg !2596
  %conv39 = sext i16 %26 to i32, !dbg !2596
  %sub40 = sub nsw i32 %conv35, %conv39, !dbg !2597
  %shl41 = shl i32 %sub40, 12, !dbg !2598
  %sub42 = sub nsw i32 %20, %shl41, !dbg !2599
  %27 = load i32, i32* %i, align 4, !dbg !2600
  %mul43 = mul nsw i32 2, %27, !dbg !2601
  %add44 = add nsw i32 %mul43, 3, !dbg !2602
  %idxprom45 = sext i32 %add44 to i64, !dbg !2603
  %arrayidx46 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom45, !dbg !2603
  store i32 %sub42, i32* %arrayidx46, align 4, !dbg !2604
  br label %for.inc47, !dbg !2605

for.inc47:                                        ; preds = %for.body12
  %28 = load i32, i32* %i, align 4, !dbg !2606
  %inc48 = add nsw i32 %28, 1, !dbg !2606
  store i32 %inc48, i32* %i, align 4, !dbg !2606
  br label %for.cond9, !dbg !2608, !llvm.loop !2609

for.end49:                                        ; preds = %for.cond9
  %arrayidx50 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 10, !dbg !2611
  %29 = load i32, i32* %arrayidx50, align 8, !dbg !2612
  %shr51 = ashr i32 %29, 1, !dbg !2612
  store i32 %shr51, i32* %arrayidx50, align 8, !dbg !2612
  %arrayidx52 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 11, !dbg !2613
  %30 = load i32, i32* %arrayidx52, align 4, !dbg !2614
  %shr53 = ashr i32 %30, 1, !dbg !2614
  store i32 %shr53, i32* %arrayidx52, align 4, !dbg !2614
  %arrayidx54 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 0, !dbg !2615
  %31 = load i32, i32* %arrayidx54, align 16, !dbg !2615
  %cmp55 = icmp sge i32 %31, 0, !dbg !2616
  br i1 %cmp55, label %cond.true, label %cond.false, !dbg !2617

cond.true:                                        ; preds = %for.end49
  %arrayidx57 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 0, !dbg !2618
  %32 = load i32, i32* %arrayidx57, align 16, !dbg !2618
  br label %cond.end, !dbg !2620

cond.false:                                       ; preds = %for.end49
  %arrayidx58 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 0, !dbg !2621
  %33 = load i32, i32* %arrayidx58, align 16, !dbg !2621
  %sub59 = sub nsw i32 0, %33, !dbg !2623
  br label %cond.end, !dbg !2624

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ %sub59, %cond.false ], !dbg !2625
  store i32 %cond, i32* %max, align 4, !dbg !2627
  store i32 1, i32* %i, align 4, !dbg !2628
  br label %for.cond60, !dbg !2630

for.cond60:                                       ; preds = %for.inc96, %cond.end
  %34 = load i32, i32* %i, align 4, !dbg !2631
  %cmp61 = icmp slt i32 %34, 12, !dbg !2634
  br i1 %cmp61, label %for.body63, label %for.end98, !dbg !2635

for.body63:                                       ; preds = %for.cond60
  %35 = load i32, i32* %max, align 4, !dbg !2636
  %36 = load i32, i32* %i, align 4, !dbg !2637
  %idxprom64 = sext i32 %36 to i64, !dbg !2638
  %arrayidx65 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom64, !dbg !2638
  %37 = load i32, i32* %arrayidx65, align 4, !dbg !2638
  %cmp66 = icmp sge i32 %37, 0, !dbg !2639
  br i1 %cmp66, label %cond.true68, label %cond.false71, !dbg !2640

cond.true68:                                      ; preds = %for.body63
  %38 = load i32, i32* %i, align 4, !dbg !2641
  %idxprom69 = sext i32 %38 to i64, !dbg !2642
  %arrayidx70 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom69, !dbg !2642
  %39 = load i32, i32* %arrayidx70, align 4, !dbg !2642
  br label %cond.end75, !dbg !2643

cond.false71:                                     ; preds = %for.body63
  %40 = load i32, i32* %i, align 4, !dbg !2644
  %idxprom72 = sext i32 %40 to i64, !dbg !2646
  %arrayidx73 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom72, !dbg !2646
  %41 = load i32, i32* %arrayidx73, align 4, !dbg !2646
  %sub74 = sub nsw i32 0, %41, !dbg !2647
  br label %cond.end75, !dbg !2648

cond.end75:                                       ; preds = %cond.false71, %cond.true68
  %cond76 = phi i32 [ %39, %cond.true68 ], [ %sub74, %cond.false71 ], !dbg !2649
  %cmp77 = icmp sgt i32 %35, %cond76, !dbg !2651
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !2652

cond.true79:                                      ; preds = %cond.end75
  %42 = load i32, i32* %max, align 4, !dbg !2653
  br label %cond.end94, !dbg !2655

cond.false80:                                     ; preds = %cond.end75
  %43 = load i32, i32* %i, align 4, !dbg !2656
  %idxprom81 = sext i32 %43 to i64, !dbg !2658
  %arrayidx82 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom81, !dbg !2658
  %44 = load i32, i32* %arrayidx82, align 4, !dbg !2658
  %cmp83 = icmp sge i32 %44, 0, !dbg !2659
  br i1 %cmp83, label %cond.true85, label %cond.false88, !dbg !2660

cond.true85:                                      ; preds = %cond.false80
  %45 = load i32, i32* %i, align 4, !dbg !2661
  %idxprom86 = sext i32 %45 to i64, !dbg !2663
  %arrayidx87 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom86, !dbg !2663
  %46 = load i32, i32* %arrayidx87, align 4, !dbg !2663
  br label %cond.end92, !dbg !2664

cond.false88:                                     ; preds = %cond.false80
  %47 = load i32, i32* %i, align 4, !dbg !2665
  %idxprom89 = sext i32 %47 to i64, !dbg !2667
  %arrayidx90 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom89, !dbg !2667
  %48 = load i32, i32* %arrayidx90, align 4, !dbg !2667
  %sub91 = sub nsw i32 0, %48, !dbg !2668
  br label %cond.end92, !dbg !2669

cond.end92:                                       ; preds = %cond.false88, %cond.true85
  %cond93 = phi i32 [ %46, %cond.true85 ], [ %sub91, %cond.false88 ], !dbg !2670
  br label %cond.end94, !dbg !2672

cond.end94:                                       ; preds = %cond.end92, %cond.true79
  %cond95 = phi i32 [ %42, %cond.true79 ], [ %cond93, %cond.end92 ], !dbg !2673
  store i32 %cond95, i32* %max, align 4, !dbg !2675
  br label %for.inc96, !dbg !2676

for.inc96:                                        ; preds = %cond.end94
  %49 = load i32, i32* %i, align 4, !dbg !2677
  %inc97 = add nsw i32 %49, 1, !dbg !2677
  store i32 %inc97, i32* %i, align 4, !dbg !2677
  br label %for.cond60, !dbg !2678, !llvm.loop !2679

for.end98:                                        ; preds = %for.cond60
  %50 = load i32, i32* %max, align 4, !dbg !2681
  %call = call i32 @ff_g723_1_normalize_bits(i32 %50, i32 31), !dbg !2682
  store i32 %call, i32* %shift, align 4, !dbg !2683
  store i32 0, i32* %i, align 4, !dbg !2684
  br label %for.cond99, !dbg !2685

for.cond99:                                       ; preds = %for.inc112, %for.end98
  %51 = load i32, i32* %i, align 4, !dbg !2686
  %cmp100 = icmp slt i32 %51, 12, !dbg !2688
  br i1 %cmp100, label %for.body102, label %for.end114, !dbg !2689

for.body102:                                      ; preds = %for.cond99
  %52 = load i32, i32* %i, align 4, !dbg !2690
  %idxprom103 = sext i32 %52 to i64, !dbg !2691
  %arrayidx104 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom103, !dbg !2691
  %53 = load i32, i32* %arrayidx104, align 4, !dbg !2691
  %54 = load i32, i32* %shift, align 4, !dbg !2692
  %shl105 = shl i32 %53, %54, !dbg !2693
  %conv106 = sext i32 %shl105 to i64, !dbg !2694
  %add107 = add nsw i64 %conv106, 32768, !dbg !2695
  store i64 %add107, i64* %a.addr.i, align 8, !dbg !2696
  %55 = load i64, i64* %a.addr.i, align 8, !dbg !2697
  %add.i = add nsw i64 %55, 2147483648, !dbg !2698
  %and.i = and i64 %add.i, -4294967296, !dbg !2699
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !2699
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2700

if.then.i:                                        ; preds = %for.body102
  %56 = load i64, i64* %a.addr.i, align 8, !dbg !2701
  %shr.i = ashr i64 %56, 63, !dbg !2702
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !2703
  %conv.i = trunc i64 %xor.i to i32, !dbg !2704
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !2705
  br label %av_clipl_int32_c.exit, !dbg !2705

if.else.i:                                        ; preds = %for.body102
  %57 = load i64, i64* %a.addr.i, align 8, !dbg !2706
  %conv1.i = trunc i64 %57 to i32, !dbg !2707
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !2708
  br label %av_clipl_int32_c.exit, !dbg !2708

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %58 = load i32, i32* %retval.i, align 4, !dbg !2709
  %shr109 = ashr i32 %58, 16, !dbg !2710
  %59 = load i32, i32* %i, align 4, !dbg !2711
  %idxprom110 = sext i32 %59 to i64, !dbg !2712
  %arrayidx111 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom110, !dbg !2712
  store i32 %shr109, i32* %arrayidx111, align 4, !dbg !2713
  br label %for.inc112, !dbg !2712

for.inc112:                                       ; preds = %av_clipl_int32_c.exit
  %60 = load i32, i32* %i, align 4, !dbg !2714
  %inc113 = add nsw i32 %60, 1, !dbg !2714
  store i32 %inc113, i32* %i, align 4, !dbg !2714
  br label %for.cond99, !dbg !2716, !llvm.loop !2717

for.end114:                                       ; preds = %for.cond99
  store i32 0, i32* %p, align 4, !dbg !2719
  store i64 0, i64* %temp, align 8, !dbg !2720
  store i32 0, i32* %i, align 4, !dbg !2721
  br label %for.cond115, !dbg !2723

for.cond115:                                      ; preds = %for.inc126, %for.end114
  %61 = load i32, i32* %i, align 4, !dbg !2724
  %cmp116 = icmp sle i32 %61, 5, !dbg !2727
  br i1 %cmp116, label %for.body118, label %for.end128, !dbg !2728

for.body118:                                      ; preds = %for.cond115
  %62 = load i32, i32* %i, align 4, !dbg !2729
  %mul119 = mul nsw i32 2, %62, !dbg !2730
  %idxprom120 = sext i32 %mul119 to i64, !dbg !2731
  %arrayidx121 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom120, !dbg !2731
  %63 = load i32, i32* %arrayidx121, align 4, !dbg !2731
  %64 = load i16, i16* getelementptr inbounds ([513 x i16], [513 x i16]* @cos_tab, i64 0, i64 0), align 16, !dbg !2732
  %conv122 = sext i16 %64 to i32, !dbg !2732
  %mul123 = mul nsw i32 %63, %conv122, !dbg !2733
  %conv124 = sext i32 %mul123 to i64, !dbg !2731
  %65 = load i64, i64* %temp, align 8, !dbg !2734
  %add125 = add nsw i64 %65, %conv124, !dbg !2734
  store i64 %add125, i64* %temp, align 8, !dbg !2734
  br label %for.inc126, !dbg !2735

for.inc126:                                       ; preds = %for.body118
  %66 = load i32, i32* %i, align 4, !dbg !2736
  %inc127 = add nsw i32 %66, 1, !dbg !2736
  store i32 %inc127, i32* %i, align 4, !dbg !2736
  br label %for.cond115, !dbg !2738, !llvm.loop !2739

for.end128:                                       ; preds = %for.cond115
  %67 = load i64, i64* %temp, align 8, !dbg !2741
  %shl129 = shl i64 %67, 1, !dbg !2742
  store i64 %shl129, i64* %a.addr.i245, align 8, !dbg !2743
  %68 = load i64, i64* %a.addr.i245, align 8, !dbg !2744
  %add.i246 = add nsw i64 %68, 2147483648, !dbg !2745
  %and.i247 = and i64 %add.i246, -4294967296, !dbg !2746
  %tobool.i248 = icmp ne i64 %and.i247, 0, !dbg !2746
  br i1 %tobool.i248, label %if.then.i252, label %if.else.i254, !dbg !2747

if.then.i252:                                     ; preds = %for.end128
  %69 = load i64, i64* %a.addr.i245, align 8, !dbg !2748
  %shr.i249 = ashr i64 %69, 63, !dbg !2749
  %xor.i250 = xor i64 %shr.i249, 2147483647, !dbg !2750
  %conv.i251 = trunc i64 %xor.i250 to i32, !dbg !2751
  store i32 %conv.i251, i32* %retval.i244, align 4, !dbg !2752
  br label %av_clipl_int32_c.exit255, !dbg !2752

if.else.i254:                                     ; preds = %for.end128
  %70 = load i64, i64* %a.addr.i245, align 8, !dbg !2753
  %conv1.i253 = trunc i64 %70 to i32, !dbg !2754
  store i32 %conv1.i253, i32* %retval.i244, align 4, !dbg !2755
  br label %av_clipl_int32_c.exit255, !dbg !2755

av_clipl_int32_c.exit255:                         ; preds = %if.then.i252, %if.else.i254
  %71 = load i32, i32* %retval.i244, align 4, !dbg !2756
  store i32 %71, i32* %prev_val, align 4, !dbg !2757
  store i32 0, i32* %count, align 4, !dbg !2758
  store i32 1, i32* %i, align 4, !dbg !2759
  br label %for.cond131, !dbg !2760

for.cond131:                                      ; preds = %for.inc213, %av_clipl_int32_c.exit255
  %72 = load i32, i32* %i, align 4, !dbg !2761
  %cmp132 = icmp slt i32 %72, 256, !dbg !2763
  br i1 %cmp132, label %for.body134, label %for.end215, !dbg !2764

for.body134:                                      ; preds = %for.cond131
  store i64 0, i64* %temp, align 8, !dbg !2765
  store i32 0, i32* %j, align 4, !dbg !2766
  br label %for.cond135, !dbg !2768

for.cond135:                                      ; preds = %for.inc151, %for.body134
  %73 = load i32, i32* %j, align 4, !dbg !2769
  %cmp136 = icmp sle i32 %73, 5, !dbg !2772
  br i1 %cmp136, label %for.body138, label %for.end153, !dbg !2773

for.body138:                                      ; preds = %for.cond135
  %74 = load i32, i32* %j, align 4, !dbg !2774
  %mul139 = mul nsw i32 2, %74, !dbg !2775
  %sub140 = sub nsw i32 10, %mul139, !dbg !2776
  %75 = load i32, i32* %p, align 4, !dbg !2777
  %add141 = add nsw i32 %sub140, %75, !dbg !2778
  %idxprom142 = sext i32 %add141 to i64, !dbg !2779
  %arrayidx143 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom142, !dbg !2779
  %76 = load i32, i32* %arrayidx143, align 4, !dbg !2779
  %77 = load i32, i32* %i, align 4, !dbg !2780
  %78 = load i32, i32* %j, align 4, !dbg !2781
  %mul144 = mul nsw i32 %77, %78, !dbg !2782
  %rem = srem i32 %mul144, 512, !dbg !2783
  %idxprom145 = sext i32 %rem to i64, !dbg !2784
  %arrayidx146 = getelementptr inbounds [513 x i16], [513 x i16]* @cos_tab, i64 0, i64 %idxprom145, !dbg !2784
  %79 = load i16, i16* %arrayidx146, align 2, !dbg !2784
  %conv147 = sext i16 %79 to i32, !dbg !2784
  %mul148 = mul nsw i32 %76, %conv147, !dbg !2785
  %conv149 = sext i32 %mul148 to i64, !dbg !2779
  %80 = load i64, i64* %temp, align 8, !dbg !2786
  %add150 = add nsw i64 %80, %conv149, !dbg !2786
  store i64 %add150, i64* %temp, align 8, !dbg !2786
  br label %for.inc151, !dbg !2787

for.inc151:                                       ; preds = %for.body138
  %81 = load i32, i32* %j, align 4, !dbg !2788
  %inc152 = add nsw i32 %81, 1, !dbg !2788
  store i32 %inc152, i32* %j, align 4, !dbg !2788
  br label %for.cond135, !dbg !2790, !llvm.loop !2791

for.end153:                                       ; preds = %for.cond135
  %82 = load i64, i64* %temp, align 8, !dbg !2793
  %shl154 = shl i64 %82, 1, !dbg !2794
  store i64 %shl154, i64* %a.addr.i233, align 8, !dbg !2795
  %83 = load i64, i64* %a.addr.i233, align 8, !dbg !2796
  %add.i234 = add nsw i64 %83, 2147483648, !dbg !2797
  %and.i235 = and i64 %add.i234, -4294967296, !dbg !2798
  %tobool.i236 = icmp ne i64 %and.i235, 0, !dbg !2798
  br i1 %tobool.i236, label %if.then.i240, label %if.else.i242, !dbg !2799

if.then.i240:                                     ; preds = %for.end153
  %84 = load i64, i64* %a.addr.i233, align 8, !dbg !2800
  %shr.i237 = ashr i64 %84, 63, !dbg !2801
  %xor.i238 = xor i64 %shr.i237, 2147483647, !dbg !2802
  %conv.i239 = trunc i64 %xor.i238 to i32, !dbg !2803
  store i32 %conv.i239, i32* %retval.i232, align 4, !dbg !2804
  br label %av_clipl_int32_c.exit243, !dbg !2804

if.else.i242:                                     ; preds = %for.end153
  %85 = load i64, i64* %a.addr.i233, align 8, !dbg !2805
  %conv1.i241 = trunc i64 %85 to i32, !dbg !2806
  store i32 %conv1.i241, i32* %retval.i232, align 4, !dbg !2807
  br label %av_clipl_int32_c.exit243, !dbg !2807

av_clipl_int32_c.exit243:                         ; preds = %if.then.i240, %if.else.i242
  %86 = load i32, i32* %retval.i232, align 4, !dbg !2808
  store i32 %86, i32* %cur_val, align 4, !dbg !2809
  %87 = load i32, i32* %cur_val, align 4, !dbg !2810
  %88 = load i32, i32* %prev_val, align 4, !dbg !2811
  %xor = xor i32 %87, %88, !dbg !2812
  %cmp156 = icmp slt i32 %xor, 0, !dbg !2813
  br i1 %cmp156, label %if.then, label %if.end212, !dbg !2814

if.then:                                          ; preds = %av_clipl_int32_c.exit243
  call void @llvm.dbg.declare(metadata i32* %abs_cur, metadata !2815, metadata !1756), !dbg !2816
  %89 = load i32, i32* %cur_val, align 4, !dbg !2817
  %cmp158 = icmp sge i32 %89, 0, !dbg !2818
  br i1 %cmp158, label %cond.true160, label %cond.false161, !dbg !2819

cond.true160:                                     ; preds = %if.then
  %90 = load i32, i32* %cur_val, align 4, !dbg !2820
  br label %cond.end163, !dbg !2822

cond.false161:                                    ; preds = %if.then
  %91 = load i32, i32* %cur_val, align 4, !dbg !2823
  %sub162 = sub nsw i32 0, %91, !dbg !2825
  br label %cond.end163, !dbg !2826

cond.end163:                                      ; preds = %cond.false161, %cond.true160
  %cond164 = phi i32 [ %90, %cond.true160 ], [ %sub162, %cond.false161 ], !dbg !2827
  store i32 %cond164, i32* %abs_cur, align 4, !dbg !2829
  call void @llvm.dbg.declare(metadata i32* %abs_prev, metadata !2830, metadata !1756), !dbg !2831
  %92 = load i32, i32* %prev_val, align 4, !dbg !2832
  %cmp165 = icmp sge i32 %92, 0, !dbg !2833
  br i1 %cmp165, label %cond.true167, label %cond.false168, !dbg !2834

cond.true167:                                     ; preds = %cond.end163
  %93 = load i32, i32* %prev_val, align 4, !dbg !2835
  br label %cond.end170, !dbg !2836

cond.false168:                                    ; preds = %cond.end163
  %94 = load i32, i32* %prev_val, align 4, !dbg !2837
  %sub169 = sub nsw i32 0, %94, !dbg !2838
  br label %cond.end170, !dbg !2839

cond.end170:                                      ; preds = %cond.false168, %cond.true167
  %cond171 = phi i32 [ %93, %cond.true167 ], [ %sub169, %cond.false168 ], !dbg !2840
  store i32 %cond171, i32* %abs_prev, align 4, !dbg !2841
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !2842, metadata !1756), !dbg !2843
  %95 = load i32, i32* %abs_cur, align 4, !dbg !2844
  %96 = load i32, i32* %abs_prev, align 4, !dbg !2845
  %add172 = add nsw i32 %95, %96, !dbg !2846
  store i32 %add172, i32* %sum, align 4, !dbg !2843
  %97 = load i32, i32* %sum, align 4, !dbg !2847
  %call173 = call i32 @ff_g723_1_normalize_bits(i32 %97, i32 31), !dbg !2848
  store i32 %call173, i32* %shift, align 4, !dbg !2849
  %98 = load i32, i32* %shift, align 4, !dbg !2850
  %99 = load i32, i32* %sum, align 4, !dbg !2851
  %shl174 = shl i32 %99, %98, !dbg !2851
  store i32 %shl174, i32* %sum, align 4, !dbg !2851
  %100 = load i32, i32* %abs_prev, align 4, !dbg !2852
  %101 = load i32, i32* %shift, align 4, !dbg !2853
  %shl175 = shl i32 %100, %101, !dbg !2854
  %shr176 = ashr i32 %shl175, 8, !dbg !2855
  store i32 %shr176, i32* %abs_prev, align 4, !dbg !2856
  %102 = load i32, i32* %i, align 4, !dbg !2857
  %sub177 = sub nsw i32 %102, 1, !dbg !2858
  %shl178 = shl i32 %sub177, 7, !dbg !2859
  %103 = load i32, i32* %abs_prev, align 4, !dbg !2860
  %shr179 = ashr i32 %103, 1, !dbg !2861
  %104 = load i32, i32* %sum, align 4, !dbg !2862
  %shr180 = ashr i32 %104, 16, !dbg !2863
  %div = sdiv i32 %shr179, %shr180, !dbg !2864
  %add181 = add nsw i32 %shl178, %div, !dbg !2865
  %conv182 = trunc i32 %add181 to i16, !dbg !2866
  %105 = load i32, i32* %count, align 4, !dbg !2867
  %inc183 = add nsw i32 %105, 1, !dbg !2867
  store i32 %inc183, i32* %count, align 4, !dbg !2867
  %idxprom184 = sext i32 %105 to i64, !dbg !2868
  %106 = load i16*, i16** %lsp.addr, align 8, !dbg !2868
  %arrayidx185 = getelementptr inbounds i16, i16* %106, i64 %idxprom184, !dbg !2868
  store i16 %conv182, i16* %arrayidx185, align 2, !dbg !2869
  %107 = load i32, i32* %count, align 4, !dbg !2870
  %cmp186 = icmp eq i32 %107, 10, !dbg !2872
  br i1 %cmp186, label %if.then188, label %if.end, !dbg !2873

if.then188:                                       ; preds = %cond.end170
  br label %for.end215, !dbg !2874

if.end:                                           ; preds = %cond.end170
  %108 = load i32, i32* %p, align 4, !dbg !2875
  %xor189 = xor i32 %108, 1, !dbg !2875
  store i32 %xor189, i32* %p, align 4, !dbg !2875
  store i64 0, i64* %temp, align 8, !dbg !2876
  store i32 0, i32* %j, align 4, !dbg !2877
  br label %for.cond190, !dbg !2879

for.cond190:                                      ; preds = %for.inc207, %if.end
  %109 = load i32, i32* %j, align 4, !dbg !2880
  %cmp191 = icmp sle i32 %109, 5, !dbg !2883
  br i1 %cmp191, label %for.body193, label %for.end209, !dbg !2884

for.body193:                                      ; preds = %for.cond190
  %110 = load i32, i32* %j, align 4, !dbg !2885
  %mul194 = mul nsw i32 2, %110, !dbg !2886
  %sub195 = sub nsw i32 10, %mul194, !dbg !2887
  %111 = load i32, i32* %p, align 4, !dbg !2888
  %add196 = add nsw i32 %sub195, %111, !dbg !2889
  %idxprom197 = sext i32 %add196 to i64, !dbg !2890
  %arrayidx198 = getelementptr inbounds [12 x i32], [12 x i32]* %f, i64 0, i64 %idxprom197, !dbg !2890
  %112 = load i32, i32* %arrayidx198, align 4, !dbg !2890
  %113 = load i32, i32* %i, align 4, !dbg !2891
  %114 = load i32, i32* %j, align 4, !dbg !2892
  %mul199 = mul nsw i32 %113, %114, !dbg !2893
  %rem200 = srem i32 %mul199, 512, !dbg !2894
  %idxprom201 = sext i32 %rem200 to i64, !dbg !2895
  %arrayidx202 = getelementptr inbounds [513 x i16], [513 x i16]* @cos_tab, i64 0, i64 %idxprom201, !dbg !2895
  %115 = load i16, i16* %arrayidx202, align 2, !dbg !2895
  %conv203 = sext i16 %115 to i32, !dbg !2895
  %mul204 = mul nsw i32 %112, %conv203, !dbg !2896
  %conv205 = sext i32 %mul204 to i64, !dbg !2890
  %116 = load i64, i64* %temp, align 8, !dbg !2897
  %add206 = add nsw i64 %116, %conv205, !dbg !2897
  store i64 %add206, i64* %temp, align 8, !dbg !2897
  br label %for.inc207, !dbg !2898

for.inc207:                                       ; preds = %for.body193
  %117 = load i32, i32* %j, align 4, !dbg !2899
  %inc208 = add nsw i32 %117, 1, !dbg !2899
  store i32 %inc208, i32* %j, align 4, !dbg !2899
  br label %for.cond190, !dbg !2901, !llvm.loop !2902

for.end209:                                       ; preds = %for.cond190
  %118 = load i64, i64* %temp, align 8, !dbg !2904
  %shl210 = shl i64 %118, 1, !dbg !2905
  store i64 %shl210, i64* %a.addr.i221, align 8, !dbg !2906
  %119 = load i64, i64* %a.addr.i221, align 8, !dbg !2907
  %add.i222 = add nsw i64 %119, 2147483648, !dbg !2908
  %and.i223 = and i64 %add.i222, -4294967296, !dbg !2909
  %tobool.i224 = icmp ne i64 %and.i223, 0, !dbg !2909
  br i1 %tobool.i224, label %if.then.i228, label %if.else.i230, !dbg !2910

if.then.i228:                                     ; preds = %for.end209
  %120 = load i64, i64* %a.addr.i221, align 8, !dbg !2911
  %shr.i225 = ashr i64 %120, 63, !dbg !2912
  %xor.i226 = xor i64 %shr.i225, 2147483647, !dbg !2913
  %conv.i227 = trunc i64 %xor.i226 to i32, !dbg !2914
  store i32 %conv.i227, i32* %retval.i220, align 4, !dbg !2915
  br label %av_clipl_int32_c.exit231, !dbg !2915

if.else.i230:                                     ; preds = %for.end209
  %121 = load i64, i64* %a.addr.i221, align 8, !dbg !2916
  %conv1.i229 = trunc i64 %121 to i32, !dbg !2917
  store i32 %conv1.i229, i32* %retval.i220, align 4, !dbg !2918
  br label %av_clipl_int32_c.exit231, !dbg !2918

av_clipl_int32_c.exit231:                         ; preds = %if.then.i228, %if.else.i230
  %122 = load i32, i32* %retval.i220, align 4, !dbg !2919
  store i32 %122, i32* %cur_val, align 4, !dbg !2920
  br label %if.end212, !dbg !2921

if.end212:                                        ; preds = %av_clipl_int32_c.exit231, %av_clipl_int32_c.exit243
  %123 = load i32, i32* %cur_val, align 4, !dbg !2922
  store i32 %123, i32* %prev_val, align 4, !dbg !2923
  br label %for.inc213, !dbg !2924

for.inc213:                                       ; preds = %if.end212
  %124 = load i32, i32* %i, align 4, !dbg !2925
  %inc214 = add nsw i32 %124, 1, !dbg !2925
  store i32 %inc214, i32* %i, align 4, !dbg !2925
  br label %for.cond131, !dbg !2927, !llvm.loop !2928

for.end215:                                       ; preds = %if.then188, %for.cond131
  %125 = load i32, i32* %count, align 4, !dbg !2930
  %cmp216 = icmp ne i32 %125, 10, !dbg !2932
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !2933

if.then218:                                       ; preds = %for.end215
  %126 = load i16*, i16** %lsp.addr, align 8, !dbg !2934
  %127 = bitcast i16* %126 to i8*, !dbg !2935
  %128 = load i16*, i16** %prev_lsp.addr, align 8, !dbg !2936
  %129 = bitcast i16* %128 to i8*, !dbg !2935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %129, i64 20, i32 2, i1 false), !dbg !2935
  br label %if.end219, !dbg !2935

if.end219:                                        ; preds = %if.then218, %for.end215
  ret void, !dbg !2937
}

; Function Attrs: nounwind uwtable
define internal void @lsp_quantize(i8* %lsp_index, i16* %lsp, i16* %prev_lsp) #1 !dbg !2938 {
entry:
  %lsp_index.addr = alloca i8*, align 8
  %lsp.addr = alloca i16*, align 8
  %prev_lsp.addr = alloca i16*, align 8
  %weight = alloca [10 x i16], align 16
  %min = alloca i16, align 2
  %max = alloca i16, align 2
  %shift = alloca i32, align 4
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  %max115 = alloca i32, align 4
  %temp = alloca [4 x i16], align 2
  %i116 = alloca i32, align 4
  %j = alloca i32, align 4
  %error160 = alloca i32, align 4
  %max161 = alloca i32, align 4
  %temp162 = alloca [4 x i16], align 2
  %i163 = alloca i32, align 4
  %j164 = alloca i32, align 4
  %error210 = alloca i32, align 4
  %max211 = alloca i32, align 4
  %temp212 = alloca [4 x i16], align 2
  %i213 = alloca i32, align 4
  %j214 = alloca i32, align 4
  store i8* %lsp_index, i8** %lsp_index.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %lsp_index.addr, metadata !2941, metadata !1756), !dbg !2942
  store i16* %lsp, i16** %lsp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lsp.addr, metadata !2943, metadata !1756), !dbg !2944
  store i16* %prev_lsp, i16** %prev_lsp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %prev_lsp.addr, metadata !2945, metadata !1756), !dbg !2946
  call void @llvm.dbg.declare(metadata [10 x i16]* %weight, metadata !2947, metadata !1756), !dbg !2948
  call void @llvm.dbg.declare(metadata i16* %min, metadata !2949, metadata !1756), !dbg !2950
  call void @llvm.dbg.declare(metadata i16* %max, metadata !2951, metadata !1756), !dbg !2952
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !2953, metadata !1756), !dbg !2954
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2955, metadata !1756), !dbg !2956
  %0 = load i16*, i16** %lsp.addr, align 8, !dbg !2957
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 1, !dbg !2957
  %1 = load i16, i16* %arrayidx, align 2, !dbg !2957
  %conv = sext i16 %1 to i32, !dbg !2957
  %2 = load i16*, i16** %lsp.addr, align 8, !dbg !2958
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !2958
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !2958
  %conv2 = sext i16 %3 to i32, !dbg !2958
  %sub = sub nsw i32 %conv, %conv2, !dbg !2959
  %div = sdiv i32 1048576, %sub, !dbg !2960
  %conv3 = trunc i32 %div to i16, !dbg !2961
  %arrayidx4 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 0, !dbg !2962
  store i16 %conv3, i16* %arrayidx4, align 16, !dbg !2963
  %4 = load i16*, i16** %lsp.addr, align 8, !dbg !2964
  %arrayidx5 = getelementptr inbounds i16, i16* %4, i64 9, !dbg !2964
  %5 = load i16, i16* %arrayidx5, align 2, !dbg !2964
  %conv6 = sext i16 %5 to i32, !dbg !2964
  %6 = load i16*, i16** %lsp.addr, align 8, !dbg !2965
  %arrayidx7 = getelementptr inbounds i16, i16* %6, i64 8, !dbg !2965
  %7 = load i16, i16* %arrayidx7, align 2, !dbg !2965
  %conv8 = sext i16 %7 to i32, !dbg !2965
  %sub9 = sub nsw i32 %conv6, %conv8, !dbg !2966
  %div10 = sdiv i32 1048576, %sub9, !dbg !2967
  %conv11 = trunc i32 %div10 to i16, !dbg !2968
  %arrayidx12 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 9, !dbg !2969
  store i16 %conv11, i16* %arrayidx12, align 2, !dbg !2970
  store i32 1, i32* %i, align 4, !dbg !2971
  br label %for.cond, !dbg !2973

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2974
  %cmp = icmp slt i32 %8, 9, !dbg !2977
  br i1 %cmp, label %for.body, label %for.end, !dbg !2978

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !2979
  %idxprom = sext i32 %9 to i64, !dbg !2981
  %10 = load i16*, i16** %lsp.addr, align 8, !dbg !2981
  %arrayidx14 = getelementptr inbounds i16, i16* %10, i64 %idxprom, !dbg !2981
  %11 = load i16, i16* %arrayidx14, align 2, !dbg !2981
  %conv15 = sext i16 %11 to i32, !dbg !2981
  %12 = load i32, i32* %i, align 4, !dbg !2982
  %sub16 = sub nsw i32 %12, 1, !dbg !2983
  %idxprom17 = sext i32 %sub16 to i64, !dbg !2984
  %13 = load i16*, i16** %lsp.addr, align 8, !dbg !2984
  %arrayidx18 = getelementptr inbounds i16, i16* %13, i64 %idxprom17, !dbg !2984
  %14 = load i16, i16* %arrayidx18, align 2, !dbg !2984
  %conv19 = sext i16 %14 to i32, !dbg !2984
  %sub20 = sub nsw i32 %conv15, %conv19, !dbg !2985
  %15 = load i32, i32* %i, align 4, !dbg !2986
  %add = add nsw i32 %15, 1, !dbg !2987
  %idxprom21 = sext i32 %add to i64, !dbg !2988
  %16 = load i16*, i16** %lsp.addr, align 8, !dbg !2988
  %arrayidx22 = getelementptr inbounds i16, i16* %16, i64 %idxprom21, !dbg !2988
  %17 = load i16, i16* %arrayidx22, align 2, !dbg !2988
  %conv23 = sext i16 %17 to i32, !dbg !2988
  %18 = load i32, i32* %i, align 4, !dbg !2989
  %idxprom24 = sext i32 %18 to i64, !dbg !2990
  %19 = load i16*, i16** %lsp.addr, align 8, !dbg !2990
  %arrayidx25 = getelementptr inbounds i16, i16* %19, i64 %idxprom24, !dbg !2990
  %20 = load i16, i16* %arrayidx25, align 2, !dbg !2990
  %conv26 = sext i16 %20 to i32, !dbg !2990
  %sub27 = sub nsw i32 %conv23, %conv26, !dbg !2991
  %cmp28 = icmp sgt i32 %sub20, %sub27, !dbg !2992
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !2993

cond.true:                                        ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !2994
  %add30 = add nsw i32 %21, 1, !dbg !2996
  %idxprom31 = sext i32 %add30 to i64, !dbg !2997
  %22 = load i16*, i16** %lsp.addr, align 8, !dbg !2997
  %arrayidx32 = getelementptr inbounds i16, i16* %22, i64 %idxprom31, !dbg !2997
  %23 = load i16, i16* %arrayidx32, align 2, !dbg !2997
  %conv33 = sext i16 %23 to i32, !dbg !2997
  %24 = load i32, i32* %i, align 4, !dbg !2998
  %idxprom34 = sext i32 %24 to i64, !dbg !2999
  %25 = load i16*, i16** %lsp.addr, align 8, !dbg !2999
  %arrayidx35 = getelementptr inbounds i16, i16* %25, i64 %idxprom34, !dbg !2999
  %26 = load i16, i16* %arrayidx35, align 2, !dbg !2999
  %conv36 = sext i16 %26 to i32, !dbg !2999
  %sub37 = sub nsw i32 %conv33, %conv36, !dbg !3000
  br label %cond.end, !dbg !3001

cond.false:                                       ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !3002
  %idxprom38 = sext i32 %27 to i64, !dbg !3004
  %28 = load i16*, i16** %lsp.addr, align 8, !dbg !3004
  %arrayidx39 = getelementptr inbounds i16, i16* %28, i64 %idxprom38, !dbg !3004
  %29 = load i16, i16* %arrayidx39, align 2, !dbg !3004
  %conv40 = sext i16 %29 to i32, !dbg !3004
  %30 = load i32, i32* %i, align 4, !dbg !3005
  %sub41 = sub nsw i32 %30, 1, !dbg !3006
  %idxprom42 = sext i32 %sub41 to i64, !dbg !3007
  %31 = load i16*, i16** %lsp.addr, align 8, !dbg !3007
  %arrayidx43 = getelementptr inbounds i16, i16* %31, i64 %idxprom42, !dbg !3007
  %32 = load i16, i16* %arrayidx43, align 2, !dbg !3007
  %conv44 = sext i16 %32 to i32, !dbg !3007
  %sub45 = sub nsw i32 %conv40, %conv44, !dbg !3008
  br label %cond.end, !dbg !3009

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub37, %cond.true ], [ %sub45, %cond.false ], !dbg !3010
  %conv46 = trunc i32 %cond to i16, !dbg !3012
  store i16 %conv46, i16* %min, align 2, !dbg !3013
  %33 = load i16, i16* %min, align 2, !dbg !3014
  %conv47 = sext i16 %33 to i32, !dbg !3014
  %cmp48 = icmp sgt i32 %conv47, 32, !dbg !3016
  br i1 %cmp48, label %if.then, label %if.else, !dbg !3017

if.then:                                          ; preds = %cond.end
  %34 = load i16, i16* %min, align 2, !dbg !3018
  %conv50 = sext i16 %34 to i32, !dbg !3018
  %div51 = sdiv i32 1048576, %conv50, !dbg !3019
  %conv52 = trunc i32 %div51 to i16, !dbg !3020
  %35 = load i32, i32* %i, align 4, !dbg !3021
  %idxprom53 = sext i32 %35 to i64, !dbg !3022
  %arrayidx54 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom53, !dbg !3022
  store i16 %conv52, i16* %arrayidx54, align 2, !dbg !3023
  br label %if.end, !dbg !3022

if.else:                                          ; preds = %cond.end
  %36 = load i32, i32* %i, align 4, !dbg !3024
  %idxprom55 = sext i32 %36 to i64, !dbg !3025
  %arrayidx56 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom55, !dbg !3025
  store i16 32767, i16* %arrayidx56, align 2, !dbg !3026
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !3027

for.inc:                                          ; preds = %if.end
  %37 = load i32, i32* %i, align 4, !dbg !3028
  %inc = add nsw i32 %37, 1, !dbg !3028
  store i32 %inc, i32* %i, align 4, !dbg !3028
  br label %for.cond, !dbg !3030, !llvm.loop !3031

for.end:                                          ; preds = %for.cond
  store i16 0, i16* %max, align 2, !dbg !3033
  store i32 0, i32* %i, align 4, !dbg !3034
  br label %for.cond57, !dbg !3036

for.cond57:                                       ; preds = %for.inc76, %for.end
  %38 = load i32, i32* %i, align 4, !dbg !3037
  %cmp58 = icmp slt i32 %38, 10, !dbg !3040
  br i1 %cmp58, label %for.body60, label %for.end78, !dbg !3041

for.body60:                                       ; preds = %for.cond57
  %39 = load i32, i32* %i, align 4, !dbg !3042
  %idxprom61 = sext i32 %39 to i64, !dbg !3043
  %arrayidx62 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom61, !dbg !3043
  %40 = load i16, i16* %arrayidx62, align 2, !dbg !3043
  %conv63 = sext i16 %40 to i32, !dbg !3044
  %41 = load i16, i16* %max, align 2, !dbg !3045
  %conv64 = sext i16 %41 to i32, !dbg !3046
  %cmp65 = icmp sgt i32 %conv63, %conv64, !dbg !3047
  br i1 %cmp65, label %cond.true67, label %cond.false71, !dbg !3044

cond.true67:                                      ; preds = %for.body60
  %42 = load i32, i32* %i, align 4, !dbg !3048
  %idxprom68 = sext i32 %42 to i64, !dbg !3049
  %arrayidx69 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom68, !dbg !3049
  %43 = load i16, i16* %arrayidx69, align 2, !dbg !3049
  %conv70 = sext i16 %43 to i32, !dbg !3050
  br label %cond.end73, !dbg !3051

cond.false71:                                     ; preds = %for.body60
  %44 = load i16, i16* %max, align 2, !dbg !3052
  %conv72 = sext i16 %44 to i32, !dbg !3054
  br label %cond.end73, !dbg !3055

cond.end73:                                       ; preds = %cond.false71, %cond.true67
  %cond74 = phi i32 [ %conv70, %cond.true67 ], [ %conv72, %cond.false71 ], !dbg !3056
  %conv75 = trunc i32 %cond74 to i16, !dbg !3058
  store i16 %conv75, i16* %max, align 2, !dbg !3059
  br label %for.inc76, !dbg !3060

for.inc76:                                        ; preds = %cond.end73
  %45 = load i32, i32* %i, align 4, !dbg !3061
  %inc77 = add nsw i32 %45, 1, !dbg !3061
  store i32 %inc77, i32* %i, align 4, !dbg !3061
  br label %for.cond57, !dbg !3062, !llvm.loop !3063

for.end78:                                        ; preds = %for.cond57
  %46 = load i16, i16* %max, align 2, !dbg !3065
  %conv79 = sext i16 %46 to i32, !dbg !3065
  %call = call i32 @ff_g723_1_normalize_bits(i32 %conv79, i32 15), !dbg !3066
  store i32 %call, i32* %shift, align 4, !dbg !3067
  store i32 0, i32* %i, align 4, !dbg !3068
  br label %for.cond80, !dbg !3070

for.cond80:                                       ; preds = %for.inc88, %for.end78
  %47 = load i32, i32* %i, align 4, !dbg !3071
  %cmp81 = icmp slt i32 %47, 10, !dbg !3074
  br i1 %cmp81, label %for.body83, label %for.end90, !dbg !3075

for.body83:                                       ; preds = %for.cond80
  %48 = load i32, i32* %shift, align 4, !dbg !3076
  %49 = load i32, i32* %i, align 4, !dbg !3078
  %idxprom84 = sext i32 %49 to i64, !dbg !3079
  %arrayidx85 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom84, !dbg !3079
  %50 = load i16, i16* %arrayidx85, align 2, !dbg !3080
  %conv86 = sext i16 %50 to i32, !dbg !3080
  %shl = shl i32 %conv86, %48, !dbg !3080
  %conv87 = trunc i32 %shl to i16, !dbg !3080
  store i16 %conv87, i16* %arrayidx85, align 2, !dbg !3080
  br label %for.inc88, !dbg !3081

for.inc88:                                        ; preds = %for.body83
  %51 = load i32, i32* %i, align 4, !dbg !3082
  %inc89 = add nsw i32 %51, 1, !dbg !3082
  store i32 %inc89, i32* %i, align 4, !dbg !3082
  br label %for.cond80, !dbg !3084, !llvm.loop !3085

for.end90:                                        ; preds = %for.cond80
  store i32 0, i32* %i, align 4, !dbg !3087
  br label %for.cond91, !dbg !3089

for.cond91:                                       ; preds = %for.inc112, %for.end90
  %52 = load i32, i32* %i, align 4, !dbg !3090
  %cmp92 = icmp slt i32 %52, 10, !dbg !3093
  br i1 %cmp92, label %for.body94, label %for.end114, !dbg !3094

for.body94:                                       ; preds = %for.cond91
  %53 = load i32, i32* %i, align 4, !dbg !3095
  %idxprom95 = sext i32 %53 to i64, !dbg !3097
  %arrayidx96 = getelementptr inbounds [10 x i16], [10 x i16]* @dc_lsp, i64 0, i64 %idxprom95, !dbg !3097
  %54 = load i16, i16* %arrayidx96, align 2, !dbg !3097
  %conv97 = sext i16 %54 to i32, !dbg !3097
  %55 = load i32, i32* %i, align 4, !dbg !3098
  %idxprom98 = sext i32 %55 to i64, !dbg !3099
  %56 = load i16*, i16** %prev_lsp.addr, align 8, !dbg !3099
  %arrayidx99 = getelementptr inbounds i16, i16* %56, i64 %idxprom98, !dbg !3099
  %57 = load i16, i16* %arrayidx99, align 2, !dbg !3099
  %conv100 = sext i16 %57 to i32, !dbg !3099
  %58 = load i32, i32* %i, align 4, !dbg !3100
  %idxprom101 = sext i32 %58 to i64, !dbg !3101
  %arrayidx102 = getelementptr inbounds [10 x i16], [10 x i16]* @dc_lsp, i64 0, i64 %idxprom101, !dbg !3101
  %59 = load i16, i16* %arrayidx102, align 2, !dbg !3101
  %conv103 = sext i16 %59 to i32, !dbg !3101
  %sub104 = sub nsw i32 %conv100, %conv103, !dbg !3102
  %mul = mul nsw i32 %sub104, 12288, !dbg !3103
  %add105 = add nsw i32 %mul, 16384, !dbg !3104
  %shr = ashr i32 %add105, 15, !dbg !3105
  %add106 = add nsw i32 %conv97, %shr, !dbg !3106
  %60 = load i32, i32* %i, align 4, !dbg !3107
  %idxprom107 = sext i32 %60 to i64, !dbg !3108
  %61 = load i16*, i16** %lsp.addr, align 8, !dbg !3108
  %arrayidx108 = getelementptr inbounds i16, i16* %61, i64 %idxprom107, !dbg !3108
  %62 = load i16, i16* %arrayidx108, align 2, !dbg !3109
  %conv109 = sext i16 %62 to i32, !dbg !3109
  %sub110 = sub nsw i32 %conv109, %add106, !dbg !3109
  %conv111 = trunc i32 %sub110 to i16, !dbg !3109
  store i16 %conv111, i16* %arrayidx108, align 2, !dbg !3109
  br label %for.inc112, !dbg !3110

for.inc112:                                       ; preds = %for.body94
  %63 = load i32, i32* %i, align 4, !dbg !3111
  %inc113 = add nsw i32 %63, 1, !dbg !3111
  store i32 %inc113, i32* %i, align 4, !dbg !3111
  br label %for.cond91, !dbg !3113, !llvm.loop !3114

for.end114:                                       ; preds = %for.cond91
  call void @llvm.dbg.declare(metadata i32* %error, metadata !3116, metadata !1756), !dbg !3118
  call void @llvm.dbg.declare(metadata i32* %max115, metadata !3119, metadata !1756), !dbg !3120
  store i32 -1, i32* %max115, align 4, !dbg !3120
  call void @llvm.dbg.declare(metadata [4 x i16]* %temp, metadata !3121, metadata !1756), !dbg !3123
  call void @llvm.dbg.declare(metadata i32* %i116, metadata !3124, metadata !1756), !dbg !3125
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3126, metadata !1756), !dbg !3127
  store i32 0, i32* %i116, align 4, !dbg !3128
  br label %for.cond117, !dbg !3130

for.cond117:                                      ; preds = %for.inc157, %for.end114
  %64 = load i32, i32* %i116, align 4, !dbg !3131
  %cmp118 = icmp slt i32 %64, 256, !dbg !3134
  br i1 %cmp118, label %for.body120, label %for.end159, !dbg !3135

for.body120:                                      ; preds = %for.cond117
  store i32 0, i32* %j, align 4, !dbg !3136
  br label %for.cond121, !dbg !3140

for.cond121:                                      ; preds = %for.inc140, %for.body120
  %65 = load i32, i32* %j, align 4, !dbg !3141
  %cmp122 = icmp slt i32 %65, 3, !dbg !3144
  br i1 %cmp122, label %for.body124, label %for.end142, !dbg !3145

for.body124:                                      ; preds = %for.cond121
  %66 = load i32, i32* %j, align 4, !dbg !3146
  %add125 = add nsw i32 %66, 0, !dbg !3149
  %idxprom126 = sext i32 %add125 to i64, !dbg !3150
  %arrayidx127 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom126, !dbg !3150
  %67 = load i16, i16* %arrayidx127, align 2, !dbg !3150
  %conv128 = sext i16 %67 to i32, !dbg !3150
  %68 = load i32, i32* %j, align 4, !dbg !3151
  %idxprom129 = sext i32 %68 to i64, !dbg !3152
  %69 = load i32, i32* %i116, align 4, !dbg !3153
  %idxprom130 = sext i32 %69 to i64, !dbg !3152
  %arrayidx131 = getelementptr inbounds [256 x [3 x i16]], [256 x [3 x i16]]* @lsp_band0, i64 0, i64 %idxprom130, !dbg !3152
  %arrayidx132 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx131, i64 0, i64 %idxprom129, !dbg !3152
  %70 = load i16, i16* %arrayidx132, align 2, !dbg !3152
  %conv133 = sext i16 %70 to i32, !dbg !3152
  %mul134 = mul nsw i32 %conv128, %conv133, !dbg !3154
  %add135 = add nsw i32 %mul134, 16384, !dbg !3155
  %shr136 = ashr i32 %add135, 15, !dbg !3156
  %conv137 = trunc i32 %shr136 to i16, !dbg !3157
  %71 = load i32, i32* %j, align 4, !dbg !3158
  %idxprom138 = sext i32 %71 to i64, !dbg !3159
  %arrayidx139 = getelementptr inbounds [4 x i16], [4 x i16]* %temp, i64 0, i64 %idxprom138, !dbg !3159
  store i16 %conv137, i16* %arrayidx139, align 2, !dbg !3160
  br label %for.inc140, !dbg !3161

for.inc140:                                       ; preds = %for.body124
  %72 = load i32, i32* %j, align 4, !dbg !3162
  %inc141 = add nsw i32 %72, 1, !dbg !3162
  store i32 %inc141, i32* %j, align 4, !dbg !3162
  br label %for.cond121, !dbg !3164, !llvm.loop !3165

for.end142:                                       ; preds = %for.cond121
  %73 = load i16*, i16** %lsp.addr, align 8, !dbg !3167
  %add.ptr = getelementptr inbounds i16, i16* %73, i64 0, !dbg !3169
  %arraydecay = getelementptr inbounds [4 x i16], [4 x i16]* %temp, i32 0, i32 0, !dbg !3170
  %call143 = call i32 @ff_g723_1_dot_product(i16* %add.ptr, i16* %arraydecay, i32 3), !dbg !3171
  %shl144 = shl i32 %call143, 1, !dbg !3172
  store i32 %shl144, i32* %error, align 4, !dbg !3173
  %74 = load i32, i32* %i116, align 4, !dbg !3174
  %idxprom145 = sext i32 %74 to i64, !dbg !3175
  %arrayidx146 = getelementptr inbounds [256 x [3 x i16]], [256 x [3 x i16]]* @lsp_band0, i64 0, i64 %idxprom145, !dbg !3175
  %arraydecay147 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx146, i32 0, i32 0, !dbg !3175
  %arraydecay148 = getelementptr inbounds [4 x i16], [4 x i16]* %temp, i32 0, i32 0, !dbg !3176
  %call149 = call i32 @ff_g723_1_dot_product(i16* %arraydecay147, i16* %arraydecay148, i32 3), !dbg !3177
  %75 = load i32, i32* %error, align 4, !dbg !3179
  %sub150 = sub nsw i32 %75, %call149, !dbg !3179
  store i32 %sub150, i32* %error, align 4, !dbg !3179
  %76 = load i32, i32* %error, align 4, !dbg !3180
  %77 = load i32, i32* %max115, align 4, !dbg !3181
  %cmp151 = icmp sgt i32 %76, %77, !dbg !3182
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !3180

if.then153:                                       ; preds = %for.end142
  %78 = load i32, i32* %error, align 4, !dbg !3183
  store i32 %78, i32* %max115, align 4, !dbg !3187
  %79 = load i32, i32* %i116, align 4, !dbg !3188
  %conv154 = trunc i32 %79 to i8, !dbg !3188
  %80 = load i8*, i8** %lsp_index.addr, align 8, !dbg !3189
  %arrayidx155 = getelementptr inbounds i8, i8* %80, i64 0, !dbg !3189
  store i8 %conv154, i8* %arrayidx155, align 1, !dbg !3190
  br label %if.end156, !dbg !3191

if.end156:                                        ; preds = %if.then153, %for.end142
  br label %for.inc157, !dbg !3192

for.inc157:                                       ; preds = %if.end156
  %81 = load i32, i32* %i116, align 4, !dbg !3194
  %inc158 = add nsw i32 %81, 1, !dbg !3194
  store i32 %inc158, i32* %i116, align 4, !dbg !3194
  br label %for.cond117, !dbg !3196, !llvm.loop !3197

for.end159:                                       ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata i32* %error160, metadata !3199, metadata !1756), !dbg !3201
  call void @llvm.dbg.declare(metadata i32* %max161, metadata !3202, metadata !1756), !dbg !3203
  store i32 -1, i32* %max161, align 4, !dbg !3203
  call void @llvm.dbg.declare(metadata [4 x i16]* %temp162, metadata !3204, metadata !1756), !dbg !3205
  call void @llvm.dbg.declare(metadata i32* %i163, metadata !3206, metadata !1756), !dbg !3207
  call void @llvm.dbg.declare(metadata i32* %j164, metadata !3208, metadata !1756), !dbg !3209
  store i32 0, i32* %i163, align 4, !dbg !3210
  br label %for.cond165, !dbg !3212

for.cond165:                                      ; preds = %for.inc207, %for.end159
  %82 = load i32, i32* %i163, align 4, !dbg !3213
  %cmp166 = icmp slt i32 %82, 256, !dbg !3216
  br i1 %cmp166, label %for.body168, label %for.end209, !dbg !3217

for.body168:                                      ; preds = %for.cond165
  store i32 0, i32* %j164, align 4, !dbg !3218
  br label %for.cond169, !dbg !3222

for.cond169:                                      ; preds = %for.inc188, %for.body168
  %83 = load i32, i32* %j164, align 4, !dbg !3223
  %cmp170 = icmp slt i32 %83, 3, !dbg !3226
  br i1 %cmp170, label %for.body172, label %for.end190, !dbg !3227

for.body172:                                      ; preds = %for.cond169
  %84 = load i32, i32* %j164, align 4, !dbg !3228
  %add173 = add nsw i32 %84, 3, !dbg !3231
  %idxprom174 = sext i32 %add173 to i64, !dbg !3232
  %arrayidx175 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom174, !dbg !3232
  %85 = load i16, i16* %arrayidx175, align 2, !dbg !3232
  %conv176 = sext i16 %85 to i32, !dbg !3232
  %86 = load i32, i32* %j164, align 4, !dbg !3233
  %idxprom177 = sext i32 %86 to i64, !dbg !3234
  %87 = load i32, i32* %i163, align 4, !dbg !3235
  %idxprom178 = sext i32 %87 to i64, !dbg !3234
  %arrayidx179 = getelementptr inbounds [256 x [3 x i16]], [256 x [3 x i16]]* @lsp_band1, i64 0, i64 %idxprom178, !dbg !3234
  %arrayidx180 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx179, i64 0, i64 %idxprom177, !dbg !3234
  %88 = load i16, i16* %arrayidx180, align 2, !dbg !3234
  %conv181 = sext i16 %88 to i32, !dbg !3234
  %mul182 = mul nsw i32 %conv176, %conv181, !dbg !3236
  %add183 = add nsw i32 %mul182, 16384, !dbg !3237
  %shr184 = ashr i32 %add183, 15, !dbg !3238
  %conv185 = trunc i32 %shr184 to i16, !dbg !3239
  %89 = load i32, i32* %j164, align 4, !dbg !3240
  %idxprom186 = sext i32 %89 to i64, !dbg !3241
  %arrayidx187 = getelementptr inbounds [4 x i16], [4 x i16]* %temp162, i64 0, i64 %idxprom186, !dbg !3241
  store i16 %conv185, i16* %arrayidx187, align 2, !dbg !3242
  br label %for.inc188, !dbg !3243

for.inc188:                                       ; preds = %for.body172
  %90 = load i32, i32* %j164, align 4, !dbg !3244
  %inc189 = add nsw i32 %90, 1, !dbg !3244
  store i32 %inc189, i32* %j164, align 4, !dbg !3244
  br label %for.cond169, !dbg !3246, !llvm.loop !3247

for.end190:                                       ; preds = %for.cond169
  %91 = load i16*, i16** %lsp.addr, align 8, !dbg !3249
  %add.ptr191 = getelementptr inbounds i16, i16* %91, i64 3, !dbg !3251
  %arraydecay192 = getelementptr inbounds [4 x i16], [4 x i16]* %temp162, i32 0, i32 0, !dbg !3252
  %call193 = call i32 @ff_g723_1_dot_product(i16* %add.ptr191, i16* %arraydecay192, i32 3), !dbg !3253
  %shl194 = shl i32 %call193, 1, !dbg !3254
  store i32 %shl194, i32* %error160, align 4, !dbg !3255
  %92 = load i32, i32* %i163, align 4, !dbg !3256
  %idxprom195 = sext i32 %92 to i64, !dbg !3257
  %arrayidx196 = getelementptr inbounds [256 x [3 x i16]], [256 x [3 x i16]]* @lsp_band1, i64 0, i64 %idxprom195, !dbg !3257
  %arraydecay197 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx196, i32 0, i32 0, !dbg !3257
  %arraydecay198 = getelementptr inbounds [4 x i16], [4 x i16]* %temp162, i32 0, i32 0, !dbg !3258
  %call199 = call i32 @ff_g723_1_dot_product(i16* %arraydecay197, i16* %arraydecay198, i32 3), !dbg !3259
  %93 = load i32, i32* %error160, align 4, !dbg !3261
  %sub200 = sub nsw i32 %93, %call199, !dbg !3261
  store i32 %sub200, i32* %error160, align 4, !dbg !3261
  %94 = load i32, i32* %error160, align 4, !dbg !3262
  %95 = load i32, i32* %max161, align 4, !dbg !3263
  %cmp201 = icmp sgt i32 %94, %95, !dbg !3264
  br i1 %cmp201, label %if.then203, label %if.end206, !dbg !3262

if.then203:                                       ; preds = %for.end190
  %96 = load i32, i32* %error160, align 4, !dbg !3265
  store i32 %96, i32* %max161, align 4, !dbg !3269
  %97 = load i32, i32* %i163, align 4, !dbg !3270
  %conv204 = trunc i32 %97 to i8, !dbg !3270
  %98 = load i8*, i8** %lsp_index.addr, align 8, !dbg !3271
  %arrayidx205 = getelementptr inbounds i8, i8* %98, i64 1, !dbg !3271
  store i8 %conv204, i8* %arrayidx205, align 1, !dbg !3272
  br label %if.end206, !dbg !3273

if.end206:                                        ; preds = %if.then203, %for.end190
  br label %for.inc207, !dbg !3274

for.inc207:                                       ; preds = %if.end206
  %99 = load i32, i32* %i163, align 4, !dbg !3276
  %inc208 = add nsw i32 %99, 1, !dbg !3276
  store i32 %inc208, i32* %i163, align 4, !dbg !3276
  br label %for.cond165, !dbg !3278, !llvm.loop !3279

for.end209:                                       ; preds = %for.cond165
  call void @llvm.dbg.declare(metadata i32* %error210, metadata !3281, metadata !1756), !dbg !3283
  call void @llvm.dbg.declare(metadata i32* %max211, metadata !3284, metadata !1756), !dbg !3285
  store i32 -1, i32* %max211, align 4, !dbg !3285
  call void @llvm.dbg.declare(metadata [4 x i16]* %temp212, metadata !3286, metadata !1756), !dbg !3287
  call void @llvm.dbg.declare(metadata i32* %i213, metadata !3288, metadata !1756), !dbg !3289
  call void @llvm.dbg.declare(metadata i32* %j214, metadata !3290, metadata !1756), !dbg !3291
  store i32 0, i32* %i213, align 4, !dbg !3292
  br label %for.cond215, !dbg !3294

for.cond215:                                      ; preds = %for.inc257, %for.end209
  %100 = load i32, i32* %i213, align 4, !dbg !3295
  %cmp216 = icmp slt i32 %100, 256, !dbg !3298
  br i1 %cmp216, label %for.body218, label %for.end259, !dbg !3299

for.body218:                                      ; preds = %for.cond215
  store i32 0, i32* %j214, align 4, !dbg !3300
  br label %for.cond219, !dbg !3304

for.cond219:                                      ; preds = %for.inc238, %for.body218
  %101 = load i32, i32* %j214, align 4, !dbg !3305
  %cmp220 = icmp slt i32 %101, 4, !dbg !3308
  br i1 %cmp220, label %for.body222, label %for.end240, !dbg !3309

for.body222:                                      ; preds = %for.cond219
  %102 = load i32, i32* %j214, align 4, !dbg !3310
  %add223 = add nsw i32 %102, 6, !dbg !3313
  %idxprom224 = sext i32 %add223 to i64, !dbg !3314
  %arrayidx225 = getelementptr inbounds [10 x i16], [10 x i16]* %weight, i64 0, i64 %idxprom224, !dbg !3314
  %103 = load i16, i16* %arrayidx225, align 2, !dbg !3314
  %conv226 = sext i16 %103 to i32, !dbg !3314
  %104 = load i32, i32* %j214, align 4, !dbg !3315
  %idxprom227 = sext i32 %104 to i64, !dbg !3316
  %105 = load i32, i32* %i213, align 4, !dbg !3317
  %idxprom228 = sext i32 %105 to i64, !dbg !3316
  %arrayidx229 = getelementptr inbounds [256 x [4 x i16]], [256 x [4 x i16]]* @lsp_band2, i64 0, i64 %idxprom228, !dbg !3316
  %arrayidx230 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx229, i64 0, i64 %idxprom227, !dbg !3316
  %106 = load i16, i16* %arrayidx230, align 2, !dbg !3316
  %conv231 = sext i16 %106 to i32, !dbg !3316
  %mul232 = mul nsw i32 %conv226, %conv231, !dbg !3318
  %add233 = add nsw i32 %mul232, 16384, !dbg !3319
  %shr234 = ashr i32 %add233, 15, !dbg !3320
  %conv235 = trunc i32 %shr234 to i16, !dbg !3321
  %107 = load i32, i32* %j214, align 4, !dbg !3322
  %idxprom236 = sext i32 %107 to i64, !dbg !3323
  %arrayidx237 = getelementptr inbounds [4 x i16], [4 x i16]* %temp212, i64 0, i64 %idxprom236, !dbg !3323
  store i16 %conv235, i16* %arrayidx237, align 2, !dbg !3324
  br label %for.inc238, !dbg !3325

for.inc238:                                       ; preds = %for.body222
  %108 = load i32, i32* %j214, align 4, !dbg !3326
  %inc239 = add nsw i32 %108, 1, !dbg !3326
  store i32 %inc239, i32* %j214, align 4, !dbg !3326
  br label %for.cond219, !dbg !3328, !llvm.loop !3329

for.end240:                                       ; preds = %for.cond219
  %109 = load i16*, i16** %lsp.addr, align 8, !dbg !3331
  %add.ptr241 = getelementptr inbounds i16, i16* %109, i64 6, !dbg !3333
  %arraydecay242 = getelementptr inbounds [4 x i16], [4 x i16]* %temp212, i32 0, i32 0, !dbg !3334
  %call243 = call i32 @ff_g723_1_dot_product(i16* %add.ptr241, i16* %arraydecay242, i32 4), !dbg !3335
  %shl244 = shl i32 %call243, 1, !dbg !3336
  store i32 %shl244, i32* %error210, align 4, !dbg !3337
  %110 = load i32, i32* %i213, align 4, !dbg !3338
  %idxprom245 = sext i32 %110 to i64, !dbg !3339
  %arrayidx246 = getelementptr inbounds [256 x [4 x i16]], [256 x [4 x i16]]* @lsp_band2, i64 0, i64 %idxprom245, !dbg !3339
  %arraydecay247 = getelementptr inbounds [4 x i16], [4 x i16]* %arrayidx246, i32 0, i32 0, !dbg !3339
  %arraydecay248 = getelementptr inbounds [4 x i16], [4 x i16]* %temp212, i32 0, i32 0, !dbg !3340
  %call249 = call i32 @ff_g723_1_dot_product(i16* %arraydecay247, i16* %arraydecay248, i32 4), !dbg !3341
  %111 = load i32, i32* %error210, align 4, !dbg !3343
  %sub250 = sub nsw i32 %111, %call249, !dbg !3343
  store i32 %sub250, i32* %error210, align 4, !dbg !3343
  %112 = load i32, i32* %error210, align 4, !dbg !3344
  %113 = load i32, i32* %max211, align 4, !dbg !3345
  %cmp251 = icmp sgt i32 %112, %113, !dbg !3346
  br i1 %cmp251, label %if.then253, label %if.end256, !dbg !3344

if.then253:                                       ; preds = %for.end240
  %114 = load i32, i32* %error210, align 4, !dbg !3347
  store i32 %114, i32* %max211, align 4, !dbg !3351
  %115 = load i32, i32* %i213, align 4, !dbg !3352
  %conv254 = trunc i32 %115 to i8, !dbg !3352
  %116 = load i8*, i8** %lsp_index.addr, align 8, !dbg !3353
  %arrayidx255 = getelementptr inbounds i8, i8* %116, i64 2, !dbg !3353
  store i8 %conv254, i8* %arrayidx255, align 1, !dbg !3354
  br label %if.end256, !dbg !3355

if.end256:                                        ; preds = %if.then253, %for.end240
  br label %for.inc257, !dbg !3356

for.inc257:                                       ; preds = %if.end256
  %117 = load i32, i32* %i213, align 4, !dbg !3358
  %inc258 = add nsw i32 %117, 1, !dbg !3358
  store i32 %inc258, i32* %i213, align 4, !dbg !3358
  br label %for.cond215, !dbg !3360, !llvm.loop !3361

for.end259:                                       ; preds = %for.cond215
  ret void, !dbg !3363
}

; Function Attrs: nounwind uwtable
define internal void @perceptual_filter(%struct.G723_1_ChannelContext* %p, i16* %flt_coef, i16* %unq_lpc, i16* %buf) #1 !dbg !3364 {
entry:
  %p.addr = alloca %struct.G723_1_ChannelContext*, align 8
  %flt_coef.addr = alloca i16*, align 8
  %unq_lpc.addr = alloca i16*, align 8
  %buf.addr = alloca i16*, align 8
  %vector = alloca [250 x i16], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  store %struct.G723_1_ChannelContext* %p, %struct.G723_1_ChannelContext** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.G723_1_ChannelContext** %p.addr, metadata !3367, metadata !1756), !dbg !3368
  store i16* %flt_coef, i16** %flt_coef.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %flt_coef.addr, metadata !3369, metadata !1756), !dbg !3370
  store i16* %unq_lpc, i16** %unq_lpc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %unq_lpc.addr, metadata !3371, metadata !1756), !dbg !3372
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !3373, metadata !1756), !dbg !3374
  call void @llvm.dbg.declare(metadata [250 x i16]* %vector, metadata !3375, metadata !1756), !dbg !3379
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3380, metadata !1756), !dbg !3381
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3382, metadata !1756), !dbg !3383
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3384, metadata !1756), !dbg !3385
  call void @llvm.dbg.declare(metadata i32* %l, metadata !3386, metadata !1756), !dbg !3387
  store i32 0, i32* %l, align 4, !dbg !3387
  %0 = load i16*, i16** %buf.addr, align 8, !dbg !3388
  %1 = bitcast i16* %0 to i8*, !dbg !3389
  %2 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !3390
  %iir_mem = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %2, i32 0, i32 13, !dbg !3391
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %iir_mem, i32 0, i32 0, !dbg !3389
  %3 = bitcast i32* %arraydecay to i8*, !dbg !3389
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %3, i64 20, i32 2, i1 false), !dbg !3389
  %arraydecay1 = getelementptr inbounds [250 x i16], [250 x i16]* %vector, i32 0, i32 0, !dbg !3392
  %4 = bitcast i16* %arraydecay1 to i8*, !dbg !3392
  %5 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !3393
  %fir_mem = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %5, i32 0, i32 12, !dbg !3394
  %arraydecay2 = getelementptr inbounds [10 x i16], [10 x i16]* %fir_mem, i32 0, i32 0, !dbg !3392
  %6 = bitcast i16* %arraydecay2 to i8*, !dbg !3392
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %6, i64 20, i32 4, i1 false), !dbg !3392
  %arraydecay3 = getelementptr inbounds [250 x i16], [250 x i16]* %vector, i32 0, i32 0, !dbg !3395
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay3, i64 10, !dbg !3396
  %7 = bitcast i16* %add.ptr to i8*, !dbg !3397
  %8 = load i16*, i16** %buf.addr, align 8, !dbg !3398
  %add.ptr4 = getelementptr inbounds i16, i16* %8, i64 10, !dbg !3399
  %9 = bitcast i16* %add.ptr4 to i8*, !dbg !3397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %9, i64 480, i32 2, i1 false), !dbg !3397
  store i32 10, i32* %i, align 4, !dbg !3400
  store i32 0, i32* %j, align 4, !dbg !3402
  br label %for.cond, !dbg !3403

for.cond:                                         ; preds = %for.inc45, %entry
  %10 = load i32, i32* %j, align 4, !dbg !3404
  %cmp = icmp slt i32 %10, 4, !dbg !3407
  br i1 %cmp, label %for.body, label %for.end48, !dbg !3408

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !3409
  br label %for.cond5, !dbg !3412

for.cond5:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %k, align 4, !dbg !3413
  %cmp6 = icmp slt i32 %11, 10, !dbg !3416
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !3417

for.body7:                                        ; preds = %for.cond5
  %12 = load i32, i32* %k, align 4, !dbg !3418
  %13 = load i32, i32* %l, align 4, !dbg !3420
  %add = add nsw i32 %12, %13, !dbg !3421
  %idxprom = sext i32 %add to i64, !dbg !3422
  %14 = load i16*, i16** %unq_lpc.addr, align 8, !dbg !3422
  %arrayidx = getelementptr inbounds i16, i16* %14, i64 %idxprom, !dbg !3422
  %15 = load i16, i16* %arrayidx, align 2, !dbg !3422
  %conv = sext i16 %15 to i32, !dbg !3422
  %16 = load i32, i32* %k, align 4, !dbg !3423
  %idxprom8 = sext i32 %16 to i64, !dbg !3424
  %arrayidx9 = getelementptr inbounds [10 x i16], [10 x i16]* getelementptr inbounds ([2 x [10 x i16]], [2 x [10 x i16]]* @percept_flt_tbl, i64 0, i64 0), i64 0, i64 %idxprom8, !dbg !3424
  %17 = load i16, i16* %arrayidx9, align 2, !dbg !3424
  %conv10 = sext i16 %17 to i32, !dbg !3424
  %mul = mul nsw i32 %conv, %conv10, !dbg !3425
  %add11 = add nsw i32 %mul, 16384, !dbg !3426
  %shr = ashr i32 %add11, 15, !dbg !3427
  %conv12 = trunc i32 %shr to i16, !dbg !3428
  %18 = load i32, i32* %k, align 4, !dbg !3429
  %19 = load i32, i32* %l, align 4, !dbg !3430
  %mul13 = mul nsw i32 2, %19, !dbg !3431
  %add14 = add nsw i32 %18, %mul13, !dbg !3432
  %idxprom15 = sext i32 %add14 to i64, !dbg !3433
  %20 = load i16*, i16** %flt_coef.addr, align 8, !dbg !3433
  %arrayidx16 = getelementptr inbounds i16, i16* %20, i64 %idxprom15, !dbg !3433
  store i16 %conv12, i16* %arrayidx16, align 2, !dbg !3434
  %21 = load i32, i32* %k, align 4, !dbg !3435
  %22 = load i32, i32* %l, align 4, !dbg !3436
  %add17 = add nsw i32 %21, %22, !dbg !3437
  %idxprom18 = sext i32 %add17 to i64, !dbg !3438
  %23 = load i16*, i16** %unq_lpc.addr, align 8, !dbg !3438
  %arrayidx19 = getelementptr inbounds i16, i16* %23, i64 %idxprom18, !dbg !3438
  %24 = load i16, i16* %arrayidx19, align 2, !dbg !3438
  %conv20 = sext i16 %24 to i32, !dbg !3438
  %25 = load i32, i32* %k, align 4, !dbg !3439
  %idxprom21 = sext i32 %25 to i64, !dbg !3440
  %arrayidx22 = getelementptr inbounds [10 x i16], [10 x i16]* getelementptr inbounds ([2 x [10 x i16]], [2 x [10 x i16]]* @percept_flt_tbl, i64 0, i64 1), i64 0, i64 %idxprom21, !dbg !3440
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !3440
  %conv23 = sext i16 %26 to i32, !dbg !3440
  %mul24 = mul nsw i32 %conv20, %conv23, !dbg !3441
  %add25 = add nsw i32 %mul24, 16384, !dbg !3442
  %shr26 = ashr i32 %add25, 15, !dbg !3443
  %conv27 = trunc i32 %shr26 to i16, !dbg !3444
  %27 = load i32, i32* %k, align 4, !dbg !3445
  %28 = load i32, i32* %l, align 4, !dbg !3446
  %mul28 = mul nsw i32 2, %28, !dbg !3447
  %add29 = add nsw i32 %27, %mul28, !dbg !3448
  %add30 = add nsw i32 %add29, 10, !dbg !3449
  %idxprom31 = sext i32 %add30 to i64, !dbg !3450
  %29 = load i16*, i16** %flt_coef.addr, align 8, !dbg !3450
  %arrayidx32 = getelementptr inbounds i16, i16* %29, i64 %idxprom31, !dbg !3450
  store i16 %conv27, i16* %arrayidx32, align 2, !dbg !3451
  br label %for.inc, !dbg !3452

for.inc:                                          ; preds = %for.body7
  %30 = load i32, i32* %k, align 4, !dbg !3453
  %inc = add nsw i32 %30, 1, !dbg !3453
  store i32 %inc, i32* %k, align 4, !dbg !3453
  br label %for.cond5, !dbg !3455, !llvm.loop !3456

for.end:                                          ; preds = %for.cond5
  %31 = load i16*, i16** %flt_coef.addr, align 8, !dbg !3458
  %32 = load i32, i32* %l, align 4, !dbg !3459
  %mul33 = mul nsw i32 2, %32, !dbg !3460
  %idx.ext = sext i32 %mul33 to i64, !dbg !3461
  %add.ptr34 = getelementptr inbounds i16, i16* %31, i64 %idx.ext, !dbg !3461
  %33 = load i16*, i16** %flt_coef.addr, align 8, !dbg !3462
  %34 = load i32, i32* %l, align 4, !dbg !3463
  %mul35 = mul nsw i32 2, %34, !dbg !3464
  %idx.ext36 = sext i32 %mul35 to i64, !dbg !3465
  %add.ptr37 = getelementptr inbounds i16, i16* %33, i64 %idx.ext36, !dbg !3465
  %add.ptr38 = getelementptr inbounds i16, i16* %add.ptr37, i64 10, !dbg !3466
  %arraydecay39 = getelementptr inbounds [250 x i16], [250 x i16]* %vector, i32 0, i32 0, !dbg !3467
  %35 = load i32, i32* %i, align 4, !dbg !3468
  %idx.ext40 = sext i32 %35 to i64, !dbg !3469
  %add.ptr41 = getelementptr inbounds i16, i16* %arraydecay39, i64 %idx.ext40, !dbg !3469
  %36 = load i16*, i16** %buf.addr, align 8, !dbg !3470
  %37 = load i32, i32* %i, align 4, !dbg !3471
  %idx.ext42 = sext i32 %37 to i64, !dbg !3472
  %add.ptr43 = getelementptr inbounds i16, i16* %36, i64 %idx.ext42, !dbg !3472
  call void @iir_filter(i16* %add.ptr34, i16* %add.ptr38, i16* %add.ptr41, i16* %add.ptr43), !dbg !3473
  %38 = load i32, i32* %l, align 4, !dbg !3474
  %add44 = add nsw i32 %38, 10, !dbg !3474
  store i32 %add44, i32* %l, align 4, !dbg !3474
  br label %for.inc45, !dbg !3475

for.inc45:                                        ; preds = %for.end
  %39 = load i32, i32* %i, align 4, !dbg !3476
  %add46 = add nsw i32 %39, 60, !dbg !3476
  store i32 %add46, i32* %i, align 4, !dbg !3476
  %40 = load i32, i32* %j, align 4, !dbg !3478
  %inc47 = add nsw i32 %40, 1, !dbg !3478
  store i32 %inc47, i32* %j, align 4, !dbg !3478
  br label %for.cond, !dbg !3479, !llvm.loop !3480

for.end48:                                        ; preds = %for.cond
  %41 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !3482
  %iir_mem49 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %41, i32 0, i32 13, !dbg !3483
  %arraydecay50 = getelementptr inbounds [10 x i32], [10 x i32]* %iir_mem49, i32 0, i32 0, !dbg !3484
  %42 = bitcast i32* %arraydecay50 to i8*, !dbg !3484
  %43 = load i16*, i16** %buf.addr, align 8, !dbg !3485
  %add.ptr51 = getelementptr inbounds i16, i16* %43, i64 240, !dbg !3486
  %44 = bitcast i16* %add.ptr51 to i8*, !dbg !3484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %44, i64 20, i32 2, i1 false), !dbg !3484
  %45 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !3487
  %fir_mem52 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %45, i32 0, i32 12, !dbg !3488
  %arraydecay53 = getelementptr inbounds [10 x i16], [10 x i16]* %fir_mem52, i32 0, i32 0, !dbg !3489
  %46 = bitcast i16* %arraydecay53 to i8*, !dbg !3489
  %arraydecay54 = getelementptr inbounds [250 x i16], [250 x i16]* %vector, i32 0, i32 0, !dbg !3490
  %add.ptr55 = getelementptr inbounds i16, i16* %arraydecay54, i64 240, !dbg !3491
  %47 = bitcast i16* %add.ptr55 to i8*, !dbg !3489
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 20, i32 2, i1 false), !dbg !3489
  ret void, !dbg !3492
}

declare i32 @ff_g723_1_scale_vector(i16*, i16*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @estimate_pitch(i16* %buf, i32 %start) #1 !dbg !3493 {
entry:
  %retval.i78 = alloca i32, align 4
  %a.addr.i79 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i79, metadata !2355, metadata !1756), !dbg !3496
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !3501
  %buf.addr = alloca i16*, align 8
  %start.addr = alloca i32, align 4
  %max_exp = alloca i32, align 4
  %max_ccr = alloca i32, align 4
  %max_eng = alloca i32, align 4
  %index = alloca i32, align 4
  %offset = alloca i32, align 4
  %ccr = alloca i32, align 4
  %eng = alloca i32, align 4
  %orig_eng = alloca i32, align 4
  %ccr_eng = alloca i32, align 4
  %exp = alloca i32, align 4
  %diff = alloca i32, align 4
  %temp = alloca i32, align 4
  %i = alloca i32, align 4
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !3503, metadata !1756), !dbg !3504
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !3505, metadata !1756), !dbg !3506
  call void @llvm.dbg.declare(metadata i32* %max_exp, metadata !3507, metadata !1756), !dbg !3508
  store i32 32, i32* %max_exp, align 4, !dbg !3508
  call void @llvm.dbg.declare(metadata i32* %max_ccr, metadata !3509, metadata !1756), !dbg !3510
  store i32 16384, i32* %max_ccr, align 4, !dbg !3510
  call void @llvm.dbg.declare(metadata i32* %max_eng, metadata !3511, metadata !1756), !dbg !3512
  store i32 32767, i32* %max_eng, align 4, !dbg !3512
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3513, metadata !1756), !dbg !3514
  store i32 18, i32* %index, align 4, !dbg !3514
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3515, metadata !1756), !dbg !3516
  %0 = load i32, i32* %start.addr, align 4, !dbg !3517
  %sub = sub nsw i32 %0, 18, !dbg !3518
  %add = add nsw i32 %sub, 1, !dbg !3519
  store i32 %add, i32* %offset, align 4, !dbg !3516
  call void @llvm.dbg.declare(metadata i32* %ccr, metadata !3520, metadata !1756), !dbg !3521
  call void @llvm.dbg.declare(metadata i32* %eng, metadata !3522, metadata !1756), !dbg !3523
  call void @llvm.dbg.declare(metadata i32* %orig_eng, metadata !3524, metadata !1756), !dbg !3525
  call void @llvm.dbg.declare(metadata i32* %ccr_eng, metadata !3526, metadata !1756), !dbg !3527
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !3528, metadata !1756), !dbg !3529
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !3530, metadata !1756), !dbg !3531
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !3532, metadata !1756), !dbg !3533
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3534, metadata !1756), !dbg !3535
  %1 = load i16*, i16** %buf.addr, align 8, !dbg !3536
  %2 = load i32, i32* %offset, align 4, !dbg !3537
  %idx.ext = sext i32 %2 to i64, !dbg !3538
  %add.ptr = getelementptr inbounds i16, i16* %1, i64 %idx.ext, !dbg !3538
  %3 = load i16*, i16** %buf.addr, align 8, !dbg !3539
  %4 = load i32, i32* %offset, align 4, !dbg !3540
  %idx.ext1 = sext i32 %4 to i64, !dbg !3541
  %add.ptr2 = getelementptr inbounds i16, i16* %3, i64 %idx.ext1, !dbg !3541
  %call = call i64 @ff_dot_product(i16* %add.ptr, i16* %add.ptr2, i32 120), !dbg !3542
  %conv = trunc i64 %call to i32, !dbg !3542
  store i32 %conv, i32* %orig_eng, align 4, !dbg !3543
  store i32 18, i32* %i, align 4, !dbg !3544
  br label %for.cond, !dbg !3545

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !3546
  %cmp = icmp sle i32 %5, 142, !dbg !3548
  br i1 %cmp, label %for.body, label %for.end, !dbg !3549

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %offset, align 4, !dbg !3550
  %dec = add nsw i32 %6, -1, !dbg !3550
  store i32 %dec, i32* %offset, align 4, !dbg !3550
  %7 = load i32, i32* %offset, align 4, !dbg !3551
  %idxprom = sext i32 %7 to i64, !dbg !3552
  %8 = load i16*, i16** %buf.addr, align 8, !dbg !3552
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !3552
  %9 = load i16, i16* %arrayidx, align 2, !dbg !3552
  %conv4 = sext i16 %9 to i32, !dbg !3552
  %10 = load i32, i32* %offset, align 4, !dbg !3553
  %idxprom5 = sext i32 %10 to i64, !dbg !3554
  %11 = load i16*, i16** %buf.addr, align 8, !dbg !3554
  %arrayidx6 = getelementptr inbounds i16, i16* %11, i64 %idxprom5, !dbg !3554
  %12 = load i16, i16* %arrayidx6, align 2, !dbg !3554
  %conv7 = sext i16 %12 to i32, !dbg !3554
  %mul = mul nsw i32 %conv4, %conv7, !dbg !3555
  %13 = load i32, i32* %offset, align 4, !dbg !3556
  %add8 = add nsw i32 %13, 120, !dbg !3557
  %idxprom9 = sext i32 %add8 to i64, !dbg !3558
  %14 = load i16*, i16** %buf.addr, align 8, !dbg !3558
  %arrayidx10 = getelementptr inbounds i16, i16* %14, i64 %idxprom9, !dbg !3558
  %15 = load i16, i16* %arrayidx10, align 2, !dbg !3558
  %conv11 = sext i16 %15 to i32, !dbg !3558
  %16 = load i32, i32* %offset, align 4, !dbg !3559
  %add12 = add nsw i32 %16, 120, !dbg !3560
  %idxprom13 = sext i32 %add12 to i64, !dbg !3561
  %17 = load i16*, i16** %buf.addr, align 8, !dbg !3561
  %arrayidx14 = getelementptr inbounds i16, i16* %17, i64 %idxprom13, !dbg !3561
  %18 = load i16, i16* %arrayidx14, align 2, !dbg !3561
  %conv15 = sext i16 %18 to i32, !dbg !3561
  %mul16 = mul nsw i32 %conv11, %conv15, !dbg !3562
  %sub17 = sub nsw i32 %mul, %mul16, !dbg !3563
  %19 = load i32, i32* %orig_eng, align 4, !dbg !3564
  %add18 = add nsw i32 %19, %sub17, !dbg !3564
  store i32 %add18, i32* %orig_eng, align 4, !dbg !3564
  %20 = load i16*, i16** %buf.addr, align 8, !dbg !3565
  %21 = load i32, i32* %start.addr, align 4, !dbg !3566
  %idx.ext19 = sext i32 %21 to i64, !dbg !3567
  %add.ptr20 = getelementptr inbounds i16, i16* %20, i64 %idx.ext19, !dbg !3567
  %22 = load i16*, i16** %buf.addr, align 8, !dbg !3568
  %23 = load i32, i32* %offset, align 4, !dbg !3569
  %idx.ext21 = sext i32 %23 to i64, !dbg !3570
  %add.ptr22 = getelementptr inbounds i16, i16* %22, i64 %idx.ext21, !dbg !3570
  %call23 = call i64 @ff_dot_product(i16* %add.ptr20, i16* %add.ptr22, i32 120), !dbg !3571
  %conv24 = trunc i64 %call23 to i32, !dbg !3571
  store i32 %conv24, i32* %ccr, align 4, !dbg !3572
  %24 = load i32, i32* %ccr, align 4, !dbg !3573
  %cmp25 = icmp sle i32 %24, 0, !dbg !3575
  br i1 %cmp25, label %if.then, label %if.end, !dbg !3576

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !3577

if.end:                                           ; preds = %for.body
  %25 = load i32, i32* %ccr, align 4, !dbg !3578
  %call27 = call i32 @ff_g723_1_normalize_bits(i32 %25, i32 31), !dbg !3579
  store i32 %call27, i32* %exp, align 4, !dbg !3580
  %26 = load i32, i32* %ccr, align 4, !dbg !3581
  %27 = load i32, i32* %exp, align 4, !dbg !3582
  %shl = shl i32 %26, %27, !dbg !3583
  %conv28 = sext i32 %shl to i64, !dbg !3584
  %add29 = add nsw i64 %conv28, 32768, !dbg !3585
  store i64 %add29, i64* %a.addr.i, align 8, !dbg !3586
  %28 = load i64, i64* %a.addr.i, align 8, !dbg !3587
  %add.i = add nsw i64 %28, 2147483648, !dbg !3588
  %and.i = and i64 %add.i, -4294967296, !dbg !3589
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !3589
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3590

if.then.i:                                        ; preds = %if.end
  %29 = load i64, i64* %a.addr.i, align 8, !dbg !3591
  %shr.i = ashr i64 %29, 63, !dbg !3592
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !3593
  %conv.i = trunc i64 %xor.i to i32, !dbg !3594
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !3595
  br label %av_clipl_int32_c.exit, !dbg !3595

if.else.i:                                        ; preds = %if.end
  %30 = load i64, i64* %a.addr.i, align 8, !dbg !3596
  %conv1.i = trunc i64 %30 to i32, !dbg !3597
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !3598
  br label %av_clipl_int32_c.exit, !dbg !3598

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %31 = load i32, i32* %retval.i, align 4, !dbg !3599
  %shr = ashr i32 %31, 16, !dbg !3600
  store i32 %shr, i32* %ccr, align 4, !dbg !3601
  %32 = load i32, i32* %exp, align 4, !dbg !3602
  %shl31 = shl i32 %32, 1, !dbg !3602
  store i32 %shl31, i32* %exp, align 4, !dbg !3602
  %33 = load i32, i32* %ccr, align 4, !dbg !3603
  %34 = load i32, i32* %ccr, align 4, !dbg !3604
  %mul32 = mul nsw i32 %34, %33, !dbg !3604
  store i32 %mul32, i32* %ccr, align 4, !dbg !3604
  %35 = load i32, i32* %ccr, align 4, !dbg !3605
  %call33 = call i32 @ff_g723_1_normalize_bits(i32 %35, i32 31), !dbg !3606
  store i32 %call33, i32* %temp, align 4, !dbg !3607
  %36 = load i32, i32* %ccr, align 4, !dbg !3608
  %37 = load i32, i32* %temp, align 4, !dbg !3609
  %shl34 = shl i32 %36, %37, !dbg !3610
  %shr35 = ashr i32 %shl34, 16, !dbg !3611
  store i32 %shr35, i32* %ccr, align 4, !dbg !3612
  %38 = load i32, i32* %temp, align 4, !dbg !3613
  %39 = load i32, i32* %exp, align 4, !dbg !3614
  %add36 = add nsw i32 %39, %38, !dbg !3614
  store i32 %add36, i32* %exp, align 4, !dbg !3614
  %40 = load i32, i32* %orig_eng, align 4, !dbg !3615
  %call37 = call i32 @ff_g723_1_normalize_bits(i32 %40, i32 31), !dbg !3616
  store i32 %call37, i32* %temp, align 4, !dbg !3617
  %41 = load i32, i32* %orig_eng, align 4, !dbg !3618
  %42 = load i32, i32* %temp, align 4, !dbg !3619
  %shl38 = shl i32 %41, %42, !dbg !3620
  %conv39 = sext i32 %shl38 to i64, !dbg !3621
  %add40 = add nsw i64 %conv39, 32768, !dbg !3622
  store i64 %add40, i64* %a.addr.i79, align 8, !dbg !3623
  %43 = load i64, i64* %a.addr.i79, align 8, !dbg !3624
  %add.i80 = add nsw i64 %43, 2147483648, !dbg !3625
  %and.i81 = and i64 %add.i80, -4294967296, !dbg !3626
  %tobool.i82 = icmp ne i64 %and.i81, 0, !dbg !3626
  br i1 %tobool.i82, label %if.then.i86, label %if.else.i88, !dbg !3627

if.then.i86:                                      ; preds = %av_clipl_int32_c.exit
  %44 = load i64, i64* %a.addr.i79, align 8, !dbg !3628
  %shr.i83 = ashr i64 %44, 63, !dbg !3629
  %xor.i84 = xor i64 %shr.i83, 2147483647, !dbg !3630
  %conv.i85 = trunc i64 %xor.i84 to i32, !dbg !3631
  store i32 %conv.i85, i32* %retval.i78, align 4, !dbg !3632
  br label %av_clipl_int32_c.exit89, !dbg !3632

if.else.i88:                                      ; preds = %av_clipl_int32_c.exit
  %45 = load i64, i64* %a.addr.i79, align 8, !dbg !3633
  %conv1.i87 = trunc i64 %45 to i32, !dbg !3634
  store i32 %conv1.i87, i32* %retval.i78, align 4, !dbg !3635
  br label %av_clipl_int32_c.exit89, !dbg !3635

av_clipl_int32_c.exit89:                          ; preds = %if.then.i86, %if.else.i88
  %46 = load i32, i32* %retval.i78, align 4, !dbg !3636
  %shr42 = ashr i32 %46, 16, !dbg !3637
  store i32 %shr42, i32* %eng, align 4, !dbg !3638
  %47 = load i32, i32* %temp, align 4, !dbg !3639
  %48 = load i32, i32* %exp, align 4, !dbg !3640
  %sub43 = sub nsw i32 %48, %47, !dbg !3640
  store i32 %sub43, i32* %exp, align 4, !dbg !3640
  %49 = load i32, i32* %ccr, align 4, !dbg !3641
  %50 = load i32, i32* %eng, align 4, !dbg !3643
  %cmp44 = icmp sge i32 %49, %50, !dbg !3644
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !3645

if.then46:                                        ; preds = %av_clipl_int32_c.exit89
  %51 = load i32, i32* %exp, align 4, !dbg !3646
  %dec47 = add nsw i32 %51, -1, !dbg !3646
  store i32 %dec47, i32* %exp, align 4, !dbg !3646
  %52 = load i32, i32* %ccr, align 4, !dbg !3648
  %shr48 = ashr i32 %52, 1, !dbg !3648
  store i32 %shr48, i32* %ccr, align 4, !dbg !3648
  br label %if.end49, !dbg !3649

if.end49:                                         ; preds = %if.then46, %av_clipl_int32_c.exit89
  %53 = load i32, i32* %exp, align 4, !dbg !3650
  %54 = load i32, i32* %max_exp, align 4, !dbg !3652
  %cmp50 = icmp sgt i32 %53, %54, !dbg !3653
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !3654

if.then52:                                        ; preds = %if.end49
  br label %for.inc, !dbg !3655

if.end53:                                         ; preds = %if.end49
  %55 = load i32, i32* %exp, align 4, !dbg !3656
  %add54 = add nsw i32 %55, 1, !dbg !3658
  %56 = load i32, i32* %max_exp, align 4, !dbg !3659
  %cmp55 = icmp slt i32 %add54, %56, !dbg !3660
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !3661

if.then57:                                        ; preds = %if.end53
  br label %update, !dbg !3662

if.end58:                                         ; preds = %if.end53
  %57 = load i32, i32* %exp, align 4, !dbg !3663
  %add59 = add nsw i32 %57, 1, !dbg !3665
  %58 = load i32, i32* %max_exp, align 4, !dbg !3666
  %cmp60 = icmp eq i32 %add59, %58, !dbg !3667
  br i1 %cmp60, label %if.then62, label %if.else, !dbg !3668

if.then62:                                        ; preds = %if.end58
  %59 = load i32, i32* %max_ccr, align 4, !dbg !3669
  %shr63 = ashr i32 %59, 1, !dbg !3670
  store i32 %shr63, i32* %temp, align 4, !dbg !3671
  br label %if.end64, !dbg !3672

if.else:                                          ; preds = %if.end58
  %60 = load i32, i32* %max_ccr, align 4, !dbg !3673
  store i32 %60, i32* %temp, align 4, !dbg !3674
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then62
  %61 = load i32, i32* %ccr, align 4, !dbg !3675
  %62 = load i32, i32* %max_eng, align 4, !dbg !3676
  %mul65 = mul nsw i32 %61, %62, !dbg !3677
  store i32 %mul65, i32* %ccr_eng, align 4, !dbg !3678
  %63 = load i32, i32* %ccr_eng, align 4, !dbg !3679
  %64 = load i32, i32* %eng, align 4, !dbg !3680
  %65 = load i32, i32* %temp, align 4, !dbg !3681
  %mul66 = mul nsw i32 %64, %65, !dbg !3682
  %sub67 = sub nsw i32 %63, %mul66, !dbg !3683
  store i32 %sub67, i32* %diff, align 4, !dbg !3684
  %66 = load i32, i32* %diff, align 4, !dbg !3685
  %cmp68 = icmp sgt i32 %66, 0, !dbg !3687
  br i1 %cmp68, label %land.lhs.true, label %if.end77, !dbg !3688

land.lhs.true:                                    ; preds = %if.end64
  %67 = load i32, i32* %i, align 4, !dbg !3689
  %68 = load i32, i32* %index, align 4, !dbg !3691
  %sub70 = sub nsw i32 %67, %68, !dbg !3692
  %cmp71 = icmp slt i32 %sub70, 18, !dbg !3693
  br i1 %cmp71, label %if.then76, label %lor.lhs.false, !dbg !3694

lor.lhs.false:                                    ; preds = %land.lhs.true
  %69 = load i32, i32* %diff, align 4, !dbg !3695
  %70 = load i32, i32* %ccr_eng, align 4, !dbg !3697
  %shr73 = ashr i32 %70, 2, !dbg !3698
  %cmp74 = icmp sgt i32 %69, %shr73, !dbg !3699
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !3700

if.then76:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %update, !dbg !3701

update:                                           ; preds = %if.then76, %if.then57
  %71 = load i32, i32* %i, align 4, !dbg !3703
  store i32 %71, i32* %index, align 4, !dbg !3705
  %72 = load i32, i32* %exp, align 4, !dbg !3706
  store i32 %72, i32* %max_exp, align 4, !dbg !3707
  %73 = load i32, i32* %ccr, align 4, !dbg !3708
  store i32 %73, i32* %max_ccr, align 4, !dbg !3709
  %74 = load i32, i32* %eng, align 4, !dbg !3710
  store i32 %74, i32* %max_eng, align 4, !dbg !3711
  br label %if.end77, !dbg !3712

if.end77:                                         ; preds = %update, %lor.lhs.false, %if.end64
  br label %for.inc, !dbg !3713

for.inc:                                          ; preds = %if.end77, %if.then52, %if.then
  %75 = load i32, i32* %i, align 4, !dbg !3714
  %inc = add nsw i32 %75, 1, !dbg !3714
  store i32 %inc, i32* %i, align 4, !dbg !3714
  br label %for.cond, !dbg !3716, !llvm.loop !3717

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* %index, align 4, !dbg !3719
  ret i32 %76, !dbg !3720
}

; Function Attrs: nounwind uwtable
define internal void @comp_harmonic_coeff(i16* %buf, i16 signext %pitch_lag, %struct.HFParam* %hf) #1 !dbg !3721 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !3725
  %buf.addr = alloca i16*, align 8
  %pitch_lag.addr = alloca i16, align 2
  %hf.addr = alloca %struct.HFParam*, align 8
  %ccr = alloca i32, align 4
  %eng = alloca i32, align 4
  %max_ccr = alloca i32, align 4
  %max_eng = alloca i32, align 4
  %exp = alloca i32, align 4
  %max = alloca i32, align 4
  %diff = alloca i32, align 4
  %energy = alloca [15 x i32], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !3730, metadata !1756), !dbg !3731
  store i16 %pitch_lag, i16* %pitch_lag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pitch_lag.addr, metadata !3732, metadata !1756), !dbg !3733
  store %struct.HFParam* %hf, %struct.HFParam** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HFParam** %hf.addr, metadata !3734, metadata !1756), !dbg !3735
  call void @llvm.dbg.declare(metadata i32* %ccr, metadata !3736, metadata !1756), !dbg !3737
  call void @llvm.dbg.declare(metadata i32* %eng, metadata !3738, metadata !1756), !dbg !3739
  call void @llvm.dbg.declare(metadata i32* %max_ccr, metadata !3740, metadata !1756), !dbg !3741
  call void @llvm.dbg.declare(metadata i32* %max_eng, metadata !3742, metadata !1756), !dbg !3743
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !3744, metadata !1756), !dbg !3745
  call void @llvm.dbg.declare(metadata i32* %max, metadata !3746, metadata !1756), !dbg !3747
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !3748, metadata !1756), !dbg !3749
  call void @llvm.dbg.declare(metadata [15 x i32]* %energy, metadata !3750, metadata !1756), !dbg !3754
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3755, metadata !1756), !dbg !3756
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3757, metadata !1756), !dbg !3758
  store i32 0, i32* %i, align 4, !dbg !3759
  %0 = load i16, i16* %pitch_lag.addr, align 2, !dbg !3761
  %conv = sext i16 %0 to i32, !dbg !3761
  %sub = sub nsw i32 %conv, 3, !dbg !3762
  store i32 %sub, i32* %j, align 4, !dbg !3763
  br label %for.cond, !dbg !3764

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %j, align 4, !dbg !3765
  %2 = load i16, i16* %pitch_lag.addr, align 2, !dbg !3768
  %conv1 = sext i16 %2 to i32, !dbg !3768
  %add = add nsw i32 %conv1, 3, !dbg !3769
  %cmp = icmp sle i32 %1, %add, !dbg !3770
  br i1 %cmp, label %for.body, label %for.end, !dbg !3771

for.body:                                         ; preds = %for.cond
  %3 = load i16*, i16** %buf.addr, align 8, !dbg !3772
  %4 = load i32, i32* %j, align 4, !dbg !3774
  %idx.ext = sext i32 %4 to i64, !dbg !3775
  %idx.neg = sub i64 0, %idx.ext, !dbg !3775
  %add.ptr = getelementptr inbounds i16, i16* %3, i64 %idx.neg, !dbg !3775
  %5 = load i16*, i16** %buf.addr, align 8, !dbg !3776
  %6 = load i32, i32* %j, align 4, !dbg !3777
  %idx.ext3 = sext i32 %6 to i64, !dbg !3778
  %idx.neg4 = sub i64 0, %idx.ext3, !dbg !3778
  %add.ptr5 = getelementptr inbounds i16, i16* %5, i64 %idx.neg4, !dbg !3778
  %call = call i64 @ff_dot_product(i16* %add.ptr, i16* %add.ptr5, i32 60), !dbg !3779
  %conv6 = trunc i64 %call to i32, !dbg !3779
  %7 = load i32, i32* %i, align 4, !dbg !3780
  %shl = shl i32 %7, 1, !dbg !3781
  %idxprom = sext i32 %shl to i64, !dbg !3782
  %arrayidx = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom, !dbg !3782
  store i32 %conv6, i32* %arrayidx, align 4, !dbg !3783
  %8 = load i16*, i16** %buf.addr, align 8, !dbg !3784
  %9 = load i16*, i16** %buf.addr, align 8, !dbg !3785
  %10 = load i32, i32* %j, align 4, !dbg !3786
  %idx.ext7 = sext i32 %10 to i64, !dbg !3787
  %idx.neg8 = sub i64 0, %idx.ext7, !dbg !3787
  %add.ptr9 = getelementptr inbounds i16, i16* %9, i64 %idx.neg8, !dbg !3787
  %call10 = call i64 @ff_dot_product(i16* %8, i16* %add.ptr9, i32 60), !dbg !3788
  %conv11 = trunc i64 %call10 to i32, !dbg !3788
  %11 = load i32, i32* %i, align 4, !dbg !3789
  %shl12 = shl i32 %11, 1, !dbg !3790
  %add13 = add nsw i32 %shl12, 1, !dbg !3791
  %idxprom14 = sext i32 %add13 to i64, !dbg !3792
  %arrayidx15 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom14, !dbg !3792
  store i32 %conv11, i32* %arrayidx15, align 4, !dbg !3793
  br label %for.inc, !dbg !3794

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !3795
  %inc = add nsw i32 %12, 1, !dbg !3795
  store i32 %inc, i32* %i, align 4, !dbg !3795
  %13 = load i32, i32* %j, align 4, !dbg !3797
  %inc16 = add nsw i32 %13, 1, !dbg !3797
  store i32 %inc16, i32* %j, align 4, !dbg !3797
  br label %for.cond, !dbg !3798, !llvm.loop !3799

for.end:                                          ; preds = %for.cond
  %14 = load i16*, i16** %buf.addr, align 8, !dbg !3801
  %15 = load i16*, i16** %buf.addr, align 8, !dbg !3802
  %call17 = call i64 @ff_dot_product(i16* %14, i16* %15, i32 60), !dbg !3803
  %conv18 = trunc i64 %call17 to i32, !dbg !3803
  %arrayidx19 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 14, !dbg !3804
  store i32 %conv18, i32* %arrayidx19, align 8, !dbg !3805
  store i32 0, i32* %max, align 4, !dbg !3806
  store i32 0, i32* %i, align 4, !dbg !3807
  br label %for.cond20, !dbg !3809

for.cond20:                                       ; preds = %for.inc52, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !3810
  %cmp21 = icmp slt i32 %16, 15, !dbg !3813
  br i1 %cmp21, label %for.body23, label %for.end54, !dbg !3814

for.body23:                                       ; preds = %for.cond20
  %17 = load i32, i32* %max, align 4, !dbg !3815
  %18 = load i32, i32* %i, align 4, !dbg !3816
  %idxprom24 = sext i32 %18 to i64, !dbg !3817
  %arrayidx25 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom24, !dbg !3817
  %19 = load i32, i32* %arrayidx25, align 4, !dbg !3817
  %cmp26 = icmp sge i32 %19, 0, !dbg !3818
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !3819

cond.true:                                        ; preds = %for.body23
  %20 = load i32, i32* %i, align 4, !dbg !3820
  %idxprom28 = sext i32 %20 to i64, !dbg !3821
  %arrayidx29 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom28, !dbg !3821
  %21 = load i32, i32* %arrayidx29, align 4, !dbg !3821
  br label %cond.end, !dbg !3822

cond.false:                                       ; preds = %for.body23
  %22 = load i32, i32* %i, align 4, !dbg !3823
  %idxprom30 = sext i32 %22 to i64, !dbg !3825
  %arrayidx31 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom30, !dbg !3825
  %23 = load i32, i32* %arrayidx31, align 4, !dbg !3825
  %sub32 = sub nsw i32 0, %23, !dbg !3826
  br label %cond.end, !dbg !3827

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %sub32, %cond.false ], !dbg !3828
  %cmp33 = icmp sgt i32 %17, %cond, !dbg !3830
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !3831

cond.true35:                                      ; preds = %cond.end
  %24 = load i32, i32* %max, align 4, !dbg !3832
  br label %cond.end50, !dbg !3834

cond.false36:                                     ; preds = %cond.end
  %25 = load i32, i32* %i, align 4, !dbg !3835
  %idxprom37 = sext i32 %25 to i64, !dbg !3837
  %arrayidx38 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom37, !dbg !3837
  %26 = load i32, i32* %arrayidx38, align 4, !dbg !3837
  %cmp39 = icmp sge i32 %26, 0, !dbg !3838
  br i1 %cmp39, label %cond.true41, label %cond.false44, !dbg !3839

cond.true41:                                      ; preds = %cond.false36
  %27 = load i32, i32* %i, align 4, !dbg !3840
  %idxprom42 = sext i32 %27 to i64, !dbg !3842
  %arrayidx43 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom42, !dbg !3842
  %28 = load i32, i32* %arrayidx43, align 4, !dbg !3842
  br label %cond.end48, !dbg !3843

cond.false44:                                     ; preds = %cond.false36
  %29 = load i32, i32* %i, align 4, !dbg !3844
  %idxprom45 = sext i32 %29 to i64, !dbg !3846
  %arrayidx46 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom45, !dbg !3846
  %30 = load i32, i32* %arrayidx46, align 4, !dbg !3846
  %sub47 = sub nsw i32 0, %30, !dbg !3847
  br label %cond.end48, !dbg !3848

cond.end48:                                       ; preds = %cond.false44, %cond.true41
  %cond49 = phi i32 [ %28, %cond.true41 ], [ %sub47, %cond.false44 ], !dbg !3849
  br label %cond.end50, !dbg !3851

cond.end50:                                       ; preds = %cond.end48, %cond.true35
  %cond51 = phi i32 [ %24, %cond.true35 ], [ %cond49, %cond.end48 ], !dbg !3852
  store i32 %cond51, i32* %max, align 4, !dbg !3854
  br label %for.inc52, !dbg !3855

for.inc52:                                        ; preds = %cond.end50
  %31 = load i32, i32* %i, align 4, !dbg !3856
  %inc53 = add nsw i32 %31, 1, !dbg !3856
  store i32 %inc53, i32* %i, align 4, !dbg !3856
  br label %for.cond20, !dbg !3857, !llvm.loop !3858

for.end54:                                        ; preds = %for.cond20
  %32 = load i32, i32* %max, align 4, !dbg !3860
  %call55 = call i32 @ff_g723_1_normalize_bits(i32 %32, i32 31), !dbg !3861
  store i32 %call55, i32* %exp, align 4, !dbg !3862
  store i32 0, i32* %i, align 4, !dbg !3863
  br label %for.cond56, !dbg !3864

for.cond56:                                       ; preds = %for.inc68, %for.end54
  %33 = load i32, i32* %i, align 4, !dbg !3865
  %cmp57 = icmp slt i32 %33, 15, !dbg !3867
  br i1 %cmp57, label %for.body59, label %for.end70, !dbg !3868

for.body59:                                       ; preds = %for.cond56
  %34 = load i32, i32* %i, align 4, !dbg !3869
  %idxprom60 = sext i32 %34 to i64, !dbg !3870
  %arrayidx61 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom60, !dbg !3870
  %35 = load i32, i32* %arrayidx61, align 4, !dbg !3870
  %36 = load i32, i32* %exp, align 4, !dbg !3871
  %shl62 = shl i32 %35, %36, !dbg !3872
  %conv63 = sext i32 %shl62 to i64, !dbg !3873
  %add64 = add nsw i64 %conv63, 32768, !dbg !3874
  store i64 %add64, i64* %a.addr.i, align 8, !dbg !3875
  %37 = load i64, i64* %a.addr.i, align 8, !dbg !3876
  %add.i = add nsw i64 %37, 2147483648, !dbg !3877
  %and.i = and i64 %add.i, -4294967296, !dbg !3878
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !3878
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3879

if.then.i:                                        ; preds = %for.body59
  %38 = load i64, i64* %a.addr.i, align 8, !dbg !3880
  %shr.i = ashr i64 %38, 63, !dbg !3881
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !3882
  %conv.i = trunc i64 %xor.i to i32, !dbg !3883
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !3884
  br label %av_clipl_int32_c.exit, !dbg !3884

if.else.i:                                        ; preds = %for.body59
  %39 = load i64, i64* %a.addr.i, align 8, !dbg !3885
  %conv1.i = trunc i64 %39 to i32, !dbg !3886
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !3887
  br label %av_clipl_int32_c.exit, !dbg !3887

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %40 = load i32, i32* %retval.i, align 4, !dbg !3888
  %shr = ashr i32 %40, 16, !dbg !3889
  %41 = load i32, i32* %i, align 4, !dbg !3890
  %idxprom66 = sext i32 %41 to i64, !dbg !3891
  %arrayidx67 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom66, !dbg !3891
  store i32 %shr, i32* %arrayidx67, align 4, !dbg !3892
  br label %for.inc68, !dbg !3893

for.inc68:                                        ; preds = %av_clipl_int32_c.exit
  %42 = load i32, i32* %i, align 4, !dbg !3894
  %inc69 = add nsw i32 %42, 1, !dbg !3894
  store i32 %inc69, i32* %i, align 4, !dbg !3894
  br label %for.cond56, !dbg !3896, !llvm.loop !3897

for.end70:                                        ; preds = %for.cond56
  %43 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !3899
  %index = getelementptr inbounds %struct.HFParam, %struct.HFParam* %43, i32 0, i32 0, !dbg !3900
  store i32 -1, i32* %index, align 4, !dbg !3901
  %44 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !3902
  %gain = getelementptr inbounds %struct.HFParam, %struct.HFParam* %44, i32 0, i32 1, !dbg !3903
  store i32 0, i32* %gain, align 4, !dbg !3904
  store i32 1, i32* %max_ccr, align 4, !dbg !3905
  store i32 32767, i32* %max_eng, align 4, !dbg !3906
  store i32 0, i32* %i, align 4, !dbg !3907
  br label %for.cond71, !dbg !3909

for.cond71:                                       ; preds = %for.inc94, %for.end70
  %45 = load i32, i32* %i, align 4, !dbg !3910
  %cmp72 = icmp sle i32 %45, 6, !dbg !3913
  br i1 %cmp72, label %for.body74, label %for.end96, !dbg !3914

for.body74:                                       ; preds = %for.cond71
  %46 = load i32, i32* %i, align 4, !dbg !3915
  %shl75 = shl i32 %46, 1, !dbg !3917
  %idxprom76 = sext i32 %shl75 to i64, !dbg !3918
  %arrayidx77 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom76, !dbg !3918
  %47 = load i32, i32* %arrayidx77, align 4, !dbg !3918
  store i32 %47, i32* %eng, align 4, !dbg !3919
  %48 = load i32, i32* %i, align 4, !dbg !3920
  %shl78 = shl i32 %48, 1, !dbg !3921
  %add79 = add nsw i32 %shl78, 1, !dbg !3922
  %idxprom80 = sext i32 %add79 to i64, !dbg !3923
  %arrayidx81 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom80, !dbg !3923
  %49 = load i32, i32* %arrayidx81, align 4, !dbg !3923
  store i32 %49, i32* %ccr, align 4, !dbg !3924
  %50 = load i32, i32* %ccr, align 4, !dbg !3925
  %cmp82 = icmp sle i32 %50, 0, !dbg !3927
  br i1 %cmp82, label %if.then, label %if.end, !dbg !3928

if.then:                                          ; preds = %for.body74
  br label %for.inc94, !dbg !3929

if.end:                                           ; preds = %for.body74
  %51 = load i32, i32* %ccr, align 4, !dbg !3930
  %52 = load i32, i32* %ccr, align 4, !dbg !3931
  %mul = mul nsw i32 %51, %52, !dbg !3932
  %add84 = add nsw i32 %mul, 16384, !dbg !3933
  %shr85 = ashr i32 %add84, 15, !dbg !3934
  store i32 %shr85, i32* %ccr, align 4, !dbg !3935
  %53 = load i32, i32* %ccr, align 4, !dbg !3936
  %54 = load i32, i32* %max_eng, align 4, !dbg !3937
  %mul86 = mul nsw i32 %53, %54, !dbg !3938
  %55 = load i32, i32* %eng, align 4, !dbg !3939
  %56 = load i32, i32* %max_ccr, align 4, !dbg !3940
  %mul87 = mul nsw i32 %55, %56, !dbg !3941
  %sub88 = sub nsw i32 %mul86, %mul87, !dbg !3942
  store i32 %sub88, i32* %diff, align 4, !dbg !3943
  %57 = load i32, i32* %diff, align 4, !dbg !3944
  %cmp89 = icmp sgt i32 %57, 0, !dbg !3946
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !3947

if.then91:                                        ; preds = %if.end
  %58 = load i32, i32* %ccr, align 4, !dbg !3948
  store i32 %58, i32* %max_ccr, align 4, !dbg !3950
  %59 = load i32, i32* %eng, align 4, !dbg !3951
  store i32 %59, i32* %max_eng, align 4, !dbg !3952
  %60 = load i32, i32* %i, align 4, !dbg !3953
  %61 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !3954
  %index92 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %61, i32 0, i32 0, !dbg !3955
  store i32 %60, i32* %index92, align 4, !dbg !3956
  br label %if.end93, !dbg !3957

if.end93:                                         ; preds = %if.then91, %if.end
  br label %for.inc94, !dbg !3958

for.inc94:                                        ; preds = %if.end93, %if.then
  %62 = load i32, i32* %i, align 4, !dbg !3959
  %inc95 = add nsw i32 %62, 1, !dbg !3959
  store i32 %inc95, i32* %i, align 4, !dbg !3959
  br label %for.cond71, !dbg !3961, !llvm.loop !3962

for.end96:                                        ; preds = %for.cond71
  %63 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !3964
  %index97 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %63, i32 0, i32 0, !dbg !3966
  %64 = load i32, i32* %index97, align 4, !dbg !3966
  %cmp98 = icmp eq i32 %64, -1, !dbg !3967
  br i1 %cmp98, label %if.then100, label %if.end103, !dbg !3968

if.then100:                                       ; preds = %for.end96
  %65 = load i16, i16* %pitch_lag.addr, align 2, !dbg !3969
  %conv101 = sext i16 %65 to i32, !dbg !3969
  %66 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !3971
  %index102 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %66, i32 0, i32 0, !dbg !3972
  store i32 %conv101, i32* %index102, align 4, !dbg !3973
  br label %return, !dbg !3974

if.end103:                                        ; preds = %for.end96
  %arrayidx104 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 14, !dbg !3975
  %67 = load i32, i32* %arrayidx104, align 8, !dbg !3975
  %68 = load i32, i32* %max_eng, align 4, !dbg !3976
  %mul105 = mul nsw i32 %67, %68, !dbg !3977
  store i32 %mul105, i32* %eng, align 4, !dbg !3978
  %69 = load i32, i32* %eng, align 4, !dbg !3979
  %shr106 = ashr i32 %69, 2, !dbg !3980
  %70 = load i32, i32* %eng, align 4, !dbg !3981
  %shr107 = ashr i32 %70, 3, !dbg !3982
  %add108 = add nsw i32 %shr106, %shr107, !dbg !3983
  store i32 %add108, i32* %eng, align 4, !dbg !3984
  %71 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !3985
  %index109 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %71, i32 0, i32 0, !dbg !3986
  %72 = load i32, i32* %index109, align 4, !dbg !3986
  %shl110 = shl i32 %72, 1, !dbg !3987
  %add111 = add nsw i32 %shl110, 1, !dbg !3988
  %idxprom112 = sext i32 %add111 to i64, !dbg !3989
  %arrayidx113 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom112, !dbg !3989
  %73 = load i32, i32* %arrayidx113, align 4, !dbg !3989
  %74 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !3990
  %index114 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %74, i32 0, i32 0, !dbg !3991
  %75 = load i32, i32* %index114, align 4, !dbg !3991
  %shl115 = shl i32 %75, 1, !dbg !3992
  %add116 = add nsw i32 %shl115, 1, !dbg !3993
  %idxprom117 = sext i32 %add116 to i64, !dbg !3994
  %arrayidx118 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom117, !dbg !3994
  %76 = load i32, i32* %arrayidx118, align 4, !dbg !3994
  %mul119 = mul nsw i32 %73, %76, !dbg !3995
  store i32 %mul119, i32* %ccr, align 4, !dbg !3996
  %77 = load i32, i32* %eng, align 4, !dbg !3997
  %78 = load i32, i32* %ccr, align 4, !dbg !3999
  %cmp120 = icmp slt i32 %77, %78, !dbg !4000
  br i1 %cmp120, label %if.then122, label %if.end138, !dbg !4001

if.then122:                                       ; preds = %if.end103
  %79 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4002
  %index123 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %79, i32 0, i32 0, !dbg !4004
  %80 = load i32, i32* %index123, align 4, !dbg !4004
  %shl124 = shl i32 %80, 1, !dbg !4005
  %add125 = add nsw i32 %shl124, 1, !dbg !4006
  %idxprom126 = sext i32 %add125 to i64, !dbg !4007
  %arrayidx127 = getelementptr inbounds [15 x i32], [15 x i32]* %energy, i64 0, i64 %idxprom126, !dbg !4007
  %81 = load i32, i32* %arrayidx127, align 4, !dbg !4007
  store i32 %81, i32* %eng, align 4, !dbg !4008
  %82 = load i32, i32* %eng, align 4, !dbg !4009
  %83 = load i32, i32* %max_eng, align 4, !dbg !4011
  %cmp128 = icmp sge i32 %82, %83, !dbg !4012
  br i1 %cmp128, label %if.then130, label %if.else, !dbg !4013

if.then130:                                       ; preds = %if.then122
  %84 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4014
  %gain131 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %84, i32 0, i32 1, !dbg !4015
  store i32 10240, i32* %gain131, align 4, !dbg !4016
  br label %if.end137, !dbg !4014

if.else:                                          ; preds = %if.then122
  %85 = load i32, i32* %eng, align 4, !dbg !4017
  %shl132 = shl i32 %85, 15, !dbg !4018
  %86 = load i32, i32* %max_eng, align 4, !dbg !4019
  %div = sdiv i32 %shl132, %86, !dbg !4020
  %mul133 = mul nsw i32 %div, 10240, !dbg !4021
  %add134 = add nsw i32 %mul133, 16384, !dbg !4022
  %shr135 = ashr i32 %add134, 15, !dbg !4023
  %87 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4024
  %gain136 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %87, i32 0, i32 1, !dbg !4025
  store i32 %shr135, i32* %gain136, align 4, !dbg !4026
  br label %if.end137

if.end137:                                        ; preds = %if.else, %if.then130
  br label %if.end138, !dbg !4027

if.end138:                                        ; preds = %if.end137, %if.end103
  %88 = load i16, i16* %pitch_lag.addr, align 2, !dbg !4028
  %conv139 = sext i16 %88 to i32, !dbg !4028
  %sub140 = sub nsw i32 %conv139, 3, !dbg !4029
  %89 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4030
  %index141 = getelementptr inbounds %struct.HFParam, %struct.HFParam* %89, i32 0, i32 0, !dbg !4031
  %90 = load i32, i32* %index141, align 4, !dbg !4032
  %add142 = add nsw i32 %90, %sub140, !dbg !4032
  store i32 %add142, i32* %index141, align 4, !dbg !4032
  br label %return, !dbg !4033

return:                                           ; preds = %if.end138, %if.then100
  ret void, !dbg !4034
}

; Function Attrs: nounwind uwtable
define internal void @harmonic_filter(%struct.HFParam* %hf, i16* %src, i16* %dest) #1 !dbg !4036 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !4040
  %hf.addr = alloca %struct.HFParam*, align 8
  %src.addr = alloca i16*, align 8
  %dest.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  %temp = alloca i64, align 8
  store %struct.HFParam* %hf, %struct.HFParam** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HFParam** %hf.addr, metadata !4045, metadata !1756), !dbg !4046
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !4047, metadata !1756), !dbg !4048
  store i16* %dest, i16** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dest.addr, metadata !4049, metadata !1756), !dbg !4050
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4051, metadata !1756), !dbg !4052
  store i32 0, i32* %i, align 4, !dbg !4053
  br label %for.cond, !dbg !4054

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4055
  %cmp = icmp slt i32 %0, 60, !dbg !4057
  br i1 %cmp, label %for.body, label %for.end, !dbg !4058

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !4059, metadata !1756), !dbg !4060
  %1 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4061
  %gain = getelementptr inbounds %struct.HFParam, %struct.HFParam* %1, i32 0, i32 1, !dbg !4062
  %2 = load i32, i32* %gain, align 4, !dbg !4062
  %3 = load i32, i32* %i, align 4, !dbg !4063
  %4 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4064
  %index = getelementptr inbounds %struct.HFParam, %struct.HFParam* %4, i32 0, i32 0, !dbg !4065
  %5 = load i32, i32* %index, align 4, !dbg !4065
  %sub = sub nsw i32 %3, %5, !dbg !4066
  %idxprom = sext i32 %sub to i64, !dbg !4067
  %6 = load i16*, i16** %src.addr, align 8, !dbg !4067
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !4067
  %7 = load i16, i16* %arrayidx, align 2, !dbg !4067
  %conv = sext i16 %7 to i32, !dbg !4067
  %mul = mul nsw i32 %2, %conv, !dbg !4068
  %shl = shl i32 %mul, 1, !dbg !4069
  %conv1 = sext i32 %shl to i64, !dbg !4061
  store i64 %conv1, i64* %temp, align 8, !dbg !4060
  %8 = load i32, i32* %i, align 4, !dbg !4070
  %idxprom2 = sext i32 %8 to i64, !dbg !4071
  %9 = load i16*, i16** %src.addr, align 8, !dbg !4071
  %arrayidx3 = getelementptr inbounds i16, i16* %9, i64 %idxprom2, !dbg !4071
  %10 = load i16, i16* %arrayidx3, align 2, !dbg !4071
  %conv4 = sext i16 %10 to i32, !dbg !4071
  %shl5 = shl i32 %conv4, 16, !dbg !4072
  %conv6 = sext i32 %shl5 to i64, !dbg !4073
  %11 = load i64, i64* %temp, align 8, !dbg !4074
  %sub7 = sub nsw i64 %conv6, %11, !dbg !4075
  %add = add nsw i64 %sub7, 32768, !dbg !4076
  store i64 %add, i64* %a.addr.i, align 8, !dbg !4077
  %12 = load i64, i64* %a.addr.i, align 8, !dbg !4078
  %add.i = add nsw i64 %12, 2147483648, !dbg !4079
  %and.i = and i64 %add.i, -4294967296, !dbg !4080
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !4080
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4081

if.then.i:                                        ; preds = %for.body
  %13 = load i64, i64* %a.addr.i, align 8, !dbg !4082
  %shr.i = ashr i64 %13, 63, !dbg !4083
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !4084
  %conv.i = trunc i64 %xor.i to i32, !dbg !4085
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !4086
  br label %av_clipl_int32_c.exit, !dbg !4086

if.else.i:                                        ; preds = %for.body
  %14 = load i64, i64* %a.addr.i, align 8, !dbg !4087
  %conv1.i = trunc i64 %14 to i32, !dbg !4088
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !4089
  br label %av_clipl_int32_c.exit, !dbg !4089

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %15 = load i32, i32* %retval.i, align 4, !dbg !4090
  %shr = ashr i32 %15, 16, !dbg !4091
  %conv8 = trunc i32 %shr to i16, !dbg !4077
  %16 = load i32, i32* %i, align 4, !dbg !4092
  %idxprom9 = sext i32 %16 to i64, !dbg !4093
  %17 = load i16*, i16** %dest.addr, align 8, !dbg !4093
  %arrayidx10 = getelementptr inbounds i16, i16* %17, i64 %idxprom9, !dbg !4093
  store i16 %conv8, i16* %arrayidx10, align 2, !dbg !4094
  br label %for.inc, !dbg !4095

for.inc:                                          ; preds = %av_clipl_int32_c.exit
  %18 = load i32, i32* %i, align 4, !dbg !4096
  %inc = add nsw i32 %18, 1, !dbg !4096
  store i32 %inc, i32* %i, align 4, !dbg !4096
  br label %for.cond, !dbg !4098, !llvm.loop !4099

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4101
}

declare void @ff_g723_1_inverse_quant(i16*, i16*, i8*, i32) #3

declare void @ff_g723_1_lsp_interpolate(i16*, i16*, i16*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @synth_percept_filter(i16* %qnt_lpc, i16* %perf_lpc, i16* %perf_fir, i16* %perf_iir, i16* %src, i16* %dest, i32 %scale) #1 !dbg !4102 {
entry:
  %retval.i82 = alloca i32, align 4
  %a.addr.i83 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i83, metadata !2355, metadata !1756), !dbg !4105
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !4110
  %qnt_lpc.addr = alloca i16*, align 8
  %perf_lpc.addr = alloca i16*, align 8
  %perf_fir.addr = alloca i16*, align 8
  %perf_iir.addr = alloca i16*, align 8
  %src.addr = alloca i16*, align 8
  %dest.addr = alloca i16*, align 8
  %scale.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %buf_16 = alloca [70 x i16], align 16
  %buf = alloca [60 x i64], align 16
  %bptr_16 = alloca i16*, align 8
  %temp = alloca i64, align 8
  %fir = alloca i64, align 8
  %iir = alloca i64, align 8
  store i16* %qnt_lpc, i16** %qnt_lpc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %qnt_lpc.addr, metadata !4115, metadata !1756), !dbg !4116
  store i16* %perf_lpc, i16** %perf_lpc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %perf_lpc.addr, metadata !4117, metadata !1756), !dbg !4118
  store i16* %perf_fir, i16** %perf_fir.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %perf_fir.addr, metadata !4119, metadata !1756), !dbg !4120
  store i16* %perf_iir, i16** %perf_iir.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %perf_iir.addr, metadata !4121, metadata !1756), !dbg !4122
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !4123, metadata !1756), !dbg !4124
  store i16* %dest, i16** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dest.addr, metadata !4125, metadata !1756), !dbg !4126
  store i32 %scale, i32* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale.addr, metadata !4127, metadata !1756), !dbg !4128
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4129, metadata !1756), !dbg !4130
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4131, metadata !1756), !dbg !4132
  call void @llvm.dbg.declare(metadata [70 x i16]* %buf_16, metadata !4133, metadata !1756), !dbg !4137
  call void @llvm.dbg.declare(metadata [60 x i64]* %buf, metadata !4138, metadata !1756), !dbg !4140
  call void @llvm.dbg.declare(metadata i16** %bptr_16, metadata !4141, metadata !1756), !dbg !4142
  %arraydecay = getelementptr inbounds [70 x i16], [70 x i16]* %buf_16, i32 0, i32 0, !dbg !4143
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 10, !dbg !4144
  store i16* %add.ptr, i16** %bptr_16, align 8, !dbg !4142
  %arraydecay1 = getelementptr inbounds [70 x i16], [70 x i16]* %buf_16, i32 0, i32 0, !dbg !4145
  %0 = bitcast i16* %arraydecay1 to i8*, !dbg !4145
  %1 = load i16*, i16** %perf_fir.addr, align 8, !dbg !4146
  %2 = bitcast i16* %1 to i8*, !dbg !4145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %2, i64 20, i32 2, i1 false), !dbg !4145
  %3 = load i16*, i16** %dest.addr, align 8, !dbg !4147
  %add.ptr2 = getelementptr inbounds i16, i16* %3, i64 -10, !dbg !4148
  %4 = bitcast i16* %add.ptr2 to i8*, !dbg !4149
  %5 = load i16*, i16** %perf_iir.addr, align 8, !dbg !4150
  %6 = bitcast i16* %5 to i8*, !dbg !4149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %6, i64 20, i32 2, i1 false), !dbg !4149
  store i32 0, i32* %i, align 4, !dbg !4151
  br label %for.cond, !dbg !4152

for.cond:                                         ; preds = %for.inc25, %entry
  %7 = load i32, i32* %i, align 4, !dbg !4153
  %cmp = icmp slt i32 %7, 60, !dbg !4155
  br i1 %cmp, label %for.body, label %for.end27, !dbg !4156

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !4157, metadata !1756), !dbg !4158
  store i64 0, i64* %temp, align 8, !dbg !4158
  store i32 1, i32* %j, align 4, !dbg !4159
  br label %for.cond3, !dbg !4161

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %j, align 4, !dbg !4162
  %cmp4 = icmp sle i32 %8, 10, !dbg !4165
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !4166

for.body5:                                        ; preds = %for.cond3
  %9 = load i32, i32* %j, align 4, !dbg !4167
  %sub = sub nsw i32 %9, 1, !dbg !4168
  %idxprom = sext i32 %sub to i64, !dbg !4169
  %10 = load i16*, i16** %qnt_lpc.addr, align 8, !dbg !4169
  %arrayidx = getelementptr inbounds i16, i16* %10, i64 %idxprom, !dbg !4169
  %11 = load i16, i16* %arrayidx, align 2, !dbg !4169
  %conv = sext i16 %11 to i32, !dbg !4169
  %12 = load i32, i32* %i, align 4, !dbg !4170
  %13 = load i32, i32* %j, align 4, !dbg !4171
  %sub6 = sub nsw i32 %12, %13, !dbg !4172
  %idxprom7 = sext i32 %sub6 to i64, !dbg !4173
  %14 = load i16*, i16** %bptr_16, align 8, !dbg !4173
  %arrayidx8 = getelementptr inbounds i16, i16* %14, i64 %idxprom7, !dbg !4173
  %15 = load i16, i16* %arrayidx8, align 2, !dbg !4173
  %conv9 = sext i16 %15 to i32, !dbg !4173
  %mul = mul nsw i32 %conv, %conv9, !dbg !4174
  %conv10 = sext i32 %mul to i64, !dbg !4169
  %16 = load i64, i64* %temp, align 8, !dbg !4175
  %sub11 = sub nsw i64 %16, %conv10, !dbg !4175
  store i64 %sub11, i64* %temp, align 8, !dbg !4175
  br label %for.inc, !dbg !4176

for.inc:                                          ; preds = %for.body5
  %17 = load i32, i32* %j, align 4, !dbg !4177
  %inc = add nsw i32 %17, 1, !dbg !4177
  store i32 %inc, i32* %j, align 4, !dbg !4177
  br label %for.cond3, !dbg !4179, !llvm.loop !4180

for.end:                                          ; preds = %for.cond3
  %18 = load i32, i32* %i, align 4, !dbg !4182
  %idxprom12 = sext i32 %18 to i64, !dbg !4183
  %19 = load i16*, i16** %src.addr, align 8, !dbg !4183
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !4183
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !4183
  %conv14 = sext i16 %20 to i32, !dbg !4183
  %shl = shl i32 %conv14, 15, !dbg !4184
  %conv15 = sext i32 %shl to i64, !dbg !4185
  %21 = load i64, i64* %temp, align 8, !dbg !4186
  %shl16 = shl i64 %21, 3, !dbg !4187
  %add = add nsw i64 %conv15, %shl16, !dbg !4188
  %22 = load i32, i32* %i, align 4, !dbg !4189
  %idxprom17 = sext i32 %22 to i64, !dbg !4190
  %arrayidx18 = getelementptr inbounds [60 x i64], [60 x i64]* %buf, i64 0, i64 %idxprom17, !dbg !4190
  store i64 %add, i64* %arrayidx18, align 8, !dbg !4191
  %23 = load i32, i32* %i, align 4, !dbg !4192
  %idxprom19 = sext i32 %23 to i64, !dbg !4193
  %arrayidx20 = getelementptr inbounds [60 x i64], [60 x i64]* %buf, i64 0, i64 %idxprom19, !dbg !4193
  %24 = load i64, i64* %arrayidx20, align 8, !dbg !4193
  %add21 = add nsw i64 %24, 32768, !dbg !4194
  store i64 %add21, i64* %a.addr.i, align 8, !dbg !4195
  %25 = load i64, i64* %a.addr.i, align 8, !dbg !4196
  %add.i = add nsw i64 %25, 2147483648, !dbg !4197
  %and.i = and i64 %add.i, -4294967296, !dbg !4198
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !4198
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4199

if.then.i:                                        ; preds = %for.end
  %26 = load i64, i64* %a.addr.i, align 8, !dbg !4200
  %shr.i = ashr i64 %26, 63, !dbg !4201
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !4202
  %conv.i = trunc i64 %xor.i to i32, !dbg !4203
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !4204
  br label %av_clipl_int32_c.exit, !dbg !4204

if.else.i:                                        ; preds = %for.end
  %27 = load i64, i64* %a.addr.i, align 8, !dbg !4205
  %conv1.i = trunc i64 %27 to i32, !dbg !4206
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !4207
  br label %av_clipl_int32_c.exit, !dbg !4207

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %28 = load i32, i32* %retval.i, align 4, !dbg !4208
  %shr = ashr i32 %28, 16, !dbg !4209
  %conv22 = trunc i32 %shr to i16, !dbg !4195
  %29 = load i32, i32* %i, align 4, !dbg !4210
  %idxprom23 = sext i32 %29 to i64, !dbg !4211
  %30 = load i16*, i16** %bptr_16, align 8, !dbg !4211
  %arrayidx24 = getelementptr inbounds i16, i16* %30, i64 %idxprom23, !dbg !4211
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !4212
  br label %for.inc25, !dbg !4213

for.inc25:                                        ; preds = %av_clipl_int32_c.exit
  %31 = load i32, i32* %i, align 4, !dbg !4214
  %inc26 = add nsw i32 %31, 1, !dbg !4214
  store i32 %inc26, i32* %i, align 4, !dbg !4214
  br label %for.cond, !dbg !4216, !llvm.loop !4217

for.end27:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4219
  br label %for.cond28, !dbg !4220

for.cond28:                                       ; preds = %for.inc75, %for.end27
  %32 = load i32, i32* %i, align 4, !dbg !4221
  %cmp29 = icmp slt i32 %32, 60, !dbg !4223
  br i1 %cmp29, label %for.body31, label %for.end77, !dbg !4224

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata i64* %fir, metadata !4225, metadata !1756), !dbg !4226
  store i64 0, i64* %fir, align 8, !dbg !4226
  call void @llvm.dbg.declare(metadata i64* %iir, metadata !4227, metadata !1756), !dbg !4228
  store i64 0, i64* %iir, align 8, !dbg !4228
  store i32 1, i32* %j, align 4, !dbg !4229
  br label %for.cond32, !dbg !4231

for.cond32:                                       ; preds = %for.inc59, %for.body31
  %33 = load i32, i32* %j, align 4, !dbg !4232
  %cmp33 = icmp sle i32 %33, 10, !dbg !4235
  br i1 %cmp33, label %for.body35, label %for.end61, !dbg !4236

for.body35:                                       ; preds = %for.cond32
  %34 = load i32, i32* %j, align 4, !dbg !4237
  %sub36 = sub nsw i32 %34, 1, !dbg !4239
  %idxprom37 = sext i32 %sub36 to i64, !dbg !4240
  %35 = load i16*, i16** %perf_lpc.addr, align 8, !dbg !4240
  %arrayidx38 = getelementptr inbounds i16, i16* %35, i64 %idxprom37, !dbg !4240
  %36 = load i16, i16* %arrayidx38, align 2, !dbg !4240
  %conv39 = sext i16 %36 to i32, !dbg !4240
  %37 = load i32, i32* %i, align 4, !dbg !4241
  %38 = load i32, i32* %j, align 4, !dbg !4242
  %sub40 = sub nsw i32 %37, %38, !dbg !4243
  %idxprom41 = sext i32 %sub40 to i64, !dbg !4244
  %39 = load i16*, i16** %bptr_16, align 8, !dbg !4244
  %arrayidx42 = getelementptr inbounds i16, i16* %39, i64 %idxprom41, !dbg !4244
  %40 = load i16, i16* %arrayidx42, align 2, !dbg !4244
  %conv43 = sext i16 %40 to i32, !dbg !4244
  %mul44 = mul nsw i32 %conv39, %conv43, !dbg !4245
  %conv45 = sext i32 %mul44 to i64, !dbg !4240
  %41 = load i64, i64* %fir, align 8, !dbg !4246
  %sub46 = sub nsw i64 %41, %conv45, !dbg !4246
  store i64 %sub46, i64* %fir, align 8, !dbg !4246
  %42 = load i32, i32* %j, align 4, !dbg !4247
  %add47 = add nsw i32 %42, 10, !dbg !4248
  %sub48 = sub nsw i32 %add47, 1, !dbg !4249
  %idxprom49 = sext i32 %sub48 to i64, !dbg !4250
  %43 = load i16*, i16** %perf_lpc.addr, align 8, !dbg !4250
  %arrayidx50 = getelementptr inbounds i16, i16* %43, i64 %idxprom49, !dbg !4250
  %44 = load i16, i16* %arrayidx50, align 2, !dbg !4250
  %conv51 = sext i16 %44 to i32, !dbg !4250
  %45 = load i32, i32* %i, align 4, !dbg !4251
  %46 = load i32, i32* %j, align 4, !dbg !4252
  %sub52 = sub nsw i32 %45, %46, !dbg !4253
  %idxprom53 = sext i32 %sub52 to i64, !dbg !4254
  %47 = load i16*, i16** %dest.addr, align 8, !dbg !4254
  %arrayidx54 = getelementptr inbounds i16, i16* %47, i64 %idxprom53, !dbg !4254
  %48 = load i16, i16* %arrayidx54, align 2, !dbg !4254
  %conv55 = sext i16 %48 to i32, !dbg !4254
  %mul56 = mul nsw i32 %conv51, %conv55, !dbg !4255
  %conv57 = sext i32 %mul56 to i64, !dbg !4250
  %49 = load i64, i64* %iir, align 8, !dbg !4256
  %add58 = add nsw i64 %49, %conv57, !dbg !4256
  store i64 %add58, i64* %iir, align 8, !dbg !4256
  br label %for.inc59, !dbg !4257

for.inc59:                                        ; preds = %for.body35
  %50 = load i32, i32* %j, align 4, !dbg !4258
  %inc60 = add nsw i32 %50, 1, !dbg !4258
  store i32 %inc60, i32* %j, align 4, !dbg !4258
  br label %for.cond32, !dbg !4260, !llvm.loop !4261

for.end61:                                        ; preds = %for.cond32
  %51 = load i32, i32* %i, align 4, !dbg !4263
  %idxprom62 = sext i32 %51 to i64, !dbg !4264
  %arrayidx63 = getelementptr inbounds [60 x i64], [60 x i64]* %buf, i64 0, i64 %idxprom62, !dbg !4264
  %52 = load i64, i64* %arrayidx63, align 8, !dbg !4264
  %53 = load i64, i64* %fir, align 8, !dbg !4265
  %shl64 = shl i64 %53, 3, !dbg !4266
  %add65 = add nsw i64 %52, %shl64, !dbg !4267
  %54 = load i32, i32* %scale.addr, align 4, !dbg !4268
  %sh_prom = zext i32 %54 to i64, !dbg !4269
  %shl66 = shl i64 %add65, %sh_prom, !dbg !4269
  %55 = load i64, i64* %iir, align 8, !dbg !4270
  %shl67 = shl i64 %55, 3, !dbg !4271
  %add68 = add nsw i64 %shl66, %shl67, !dbg !4272
  %add69 = add nsw i64 %add68, 32768, !dbg !4273
  store i64 %add69, i64* %a.addr.i83, align 8, !dbg !4274
  %56 = load i64, i64* %a.addr.i83, align 8, !dbg !4275
  %add.i84 = add nsw i64 %56, 2147483648, !dbg !4276
  %and.i85 = and i64 %add.i84, -4294967296, !dbg !4277
  %tobool.i86 = icmp ne i64 %and.i85, 0, !dbg !4277
  br i1 %tobool.i86, label %if.then.i90, label %if.else.i92, !dbg !4278

if.then.i90:                                      ; preds = %for.end61
  %57 = load i64, i64* %a.addr.i83, align 8, !dbg !4279
  %shr.i87 = ashr i64 %57, 63, !dbg !4280
  %xor.i88 = xor i64 %shr.i87, 2147483647, !dbg !4281
  %conv.i89 = trunc i64 %xor.i88 to i32, !dbg !4282
  store i32 %conv.i89, i32* %retval.i82, align 4, !dbg !4283
  br label %av_clipl_int32_c.exit93, !dbg !4283

if.else.i92:                                      ; preds = %for.end61
  %58 = load i64, i64* %a.addr.i83, align 8, !dbg !4284
  %conv1.i91 = trunc i64 %58 to i32, !dbg !4285
  store i32 %conv1.i91, i32* %retval.i82, align 4, !dbg !4286
  br label %av_clipl_int32_c.exit93, !dbg !4286

av_clipl_int32_c.exit93:                          ; preds = %if.then.i90, %if.else.i92
  %59 = load i32, i32* %retval.i82, align 4, !dbg !4287
  %shr71 = ashr i32 %59, 16, !dbg !4288
  %conv72 = trunc i32 %shr71 to i16, !dbg !4274
  %60 = load i32, i32* %i, align 4, !dbg !4289
  %idxprom73 = sext i32 %60 to i64, !dbg !4290
  %61 = load i16*, i16** %dest.addr, align 8, !dbg !4290
  %arrayidx74 = getelementptr inbounds i16, i16* %61, i64 %idxprom73, !dbg !4290
  store i16 %conv72, i16* %arrayidx74, align 2, !dbg !4291
  br label %for.inc75, !dbg !4292

for.inc75:                                        ; preds = %av_clipl_int32_c.exit93
  %62 = load i32, i32* %i, align 4, !dbg !4293
  %inc76 = add nsw i32 %62, 1, !dbg !4293
  store i32 %inc76, i32* %i, align 4, !dbg !4293
  br label %for.cond28, !dbg !4295, !llvm.loop !4296

for.end77:                                        ; preds = %for.cond28
  %63 = load i16*, i16** %perf_fir.addr, align 8, !dbg !4298
  %64 = bitcast i16* %63 to i8*, !dbg !4299
  %arraydecay78 = getelementptr inbounds [70 x i16], [70 x i16]* %buf_16, i32 0, i32 0, !dbg !4300
  %add.ptr79 = getelementptr inbounds i16, i16* %arraydecay78, i64 60, !dbg !4301
  %65 = bitcast i16* %add.ptr79 to i8*, !dbg !4299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 20, i32 2, i1 false), !dbg !4299
  %66 = load i16*, i16** %perf_iir.addr, align 8, !dbg !4302
  %67 = bitcast i16* %66 to i8*, !dbg !4303
  %68 = load i16*, i16** %dest.addr, align 8, !dbg !4304
  %add.ptr80 = getelementptr inbounds i16, i16* %68, i64 60, !dbg !4305
  %add.ptr81 = getelementptr inbounds i16, i16* %add.ptr80, i64 -10, !dbg !4306
  %69 = bitcast i16* %add.ptr81 to i8*, !dbg !4303
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %69, i64 20, i32 2, i1 false), !dbg !4303
  ret void, !dbg !4307
}

; Function Attrs: nounwind uwtable
define internal void @harmonic_noise_sub(%struct.HFParam* %hf, i16* %src, i16* %dest) #1 !dbg !4308 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !4309
  %hf.addr = alloca %struct.HFParam*, align 8
  %src.addr = alloca i16*, align 8
  %dest.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  %temp = alloca i64, align 8
  store %struct.HFParam* %hf, %struct.HFParam** %hf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HFParam** %hf.addr, metadata !4314, metadata !1756), !dbg !4315
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !4316, metadata !1756), !dbg !4317
  store i16* %dest, i16** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dest.addr, metadata !4318, metadata !1756), !dbg !4319
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4320, metadata !1756), !dbg !4321
  store i32 0, i32* %i, align 4, !dbg !4322
  br label %for.cond, !dbg !4323

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4324
  %cmp = icmp slt i32 %0, 60, !dbg !4326
  br i1 %cmp, label %for.body, label %for.end, !dbg !4327

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !4328, metadata !1756), !dbg !4329
  %1 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4330
  %gain = getelementptr inbounds %struct.HFParam, %struct.HFParam* %1, i32 0, i32 1, !dbg !4331
  %2 = load i32, i32* %gain, align 4, !dbg !4331
  %3 = load i32, i32* %i, align 4, !dbg !4332
  %4 = load %struct.HFParam*, %struct.HFParam** %hf.addr, align 8, !dbg !4333
  %index = getelementptr inbounds %struct.HFParam, %struct.HFParam* %4, i32 0, i32 0, !dbg !4334
  %5 = load i32, i32* %index, align 4, !dbg !4334
  %sub = sub nsw i32 %3, %5, !dbg !4335
  %idxprom = sext i32 %sub to i64, !dbg !4336
  %6 = load i16*, i16** %src.addr, align 8, !dbg !4336
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !4336
  %7 = load i16, i16* %arrayidx, align 2, !dbg !4336
  %conv = sext i16 %7 to i32, !dbg !4336
  %mul = mul nsw i32 %2, %conv, !dbg !4337
  %shl = shl i32 %mul, 1, !dbg !4338
  %conv1 = sext i32 %shl to i64, !dbg !4330
  store i64 %conv1, i64* %temp, align 8, !dbg !4329
  %8 = load i32, i32* %i, align 4, !dbg !4339
  %idxprom2 = sext i32 %8 to i64, !dbg !4340
  %9 = load i16*, i16** %dest.addr, align 8, !dbg !4340
  %arrayidx3 = getelementptr inbounds i16, i16* %9, i64 %idxprom2, !dbg !4340
  %10 = load i16, i16* %arrayidx3, align 2, !dbg !4340
  %conv4 = sext i16 %10 to i32, !dbg !4340
  %11 = load i32, i32* %i, align 4, !dbg !4341
  %idxprom5 = sext i32 %11 to i64, !dbg !4342
  %12 = load i16*, i16** %src.addr, align 8, !dbg !4342
  %arrayidx6 = getelementptr inbounds i16, i16* %12, i64 %idxprom5, !dbg !4342
  %13 = load i16, i16* %arrayidx6, align 2, !dbg !4342
  %conv7 = sext i16 %13 to i32, !dbg !4342
  %sub8 = sub nsw i32 %conv4, %conv7, !dbg !4343
  %shl9 = shl i32 %sub8, 16, !dbg !4344
  %conv10 = sext i32 %shl9 to i64, !dbg !4345
  %14 = load i64, i64* %temp, align 8, !dbg !4346
  %add = add nsw i64 %conv10, %14, !dbg !4347
  %add11 = add nsw i64 %add, 32768, !dbg !4348
  store i64 %add11, i64* %a.addr.i, align 8, !dbg !4349
  %15 = load i64, i64* %a.addr.i, align 8, !dbg !4350
  %add.i = add nsw i64 %15, 2147483648, !dbg !4351
  %and.i = and i64 %add.i, -4294967296, !dbg !4352
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !4352
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4353

if.then.i:                                        ; preds = %for.body
  %16 = load i64, i64* %a.addr.i, align 8, !dbg !4354
  %shr.i = ashr i64 %16, 63, !dbg !4355
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !4356
  %conv.i = trunc i64 %xor.i to i32, !dbg !4357
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !4358
  br label %av_clipl_int32_c.exit, !dbg !4358

if.else.i:                                        ; preds = %for.body
  %17 = load i64, i64* %a.addr.i, align 8, !dbg !4359
  %conv1.i = trunc i64 %17 to i32, !dbg !4360
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !4361
  br label %av_clipl_int32_c.exit, !dbg !4361

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %18 = load i32, i32* %retval.i, align 4, !dbg !4362
  %shr = ashr i32 %18, 16, !dbg !4363
  %conv12 = trunc i32 %shr to i16, !dbg !4349
  %19 = load i32, i32* %i, align 4, !dbg !4364
  %idxprom13 = sext i32 %19 to i64, !dbg !4365
  %20 = load i16*, i16** %dest.addr, align 8, !dbg !4365
  %arrayidx14 = getelementptr inbounds i16, i16* %20, i64 %idxprom13, !dbg !4365
  store i16 %conv12, i16* %arrayidx14, align 2, !dbg !4366
  br label %for.inc, !dbg !4367

for.inc:                                          ; preds = %av_clipl_int32_c.exit
  %21 = load i32, i32* %i, align 4, !dbg !4368
  %inc = add nsw i32 %21, 1, !dbg !4368
  store i32 %inc, i32* %i, align 4, !dbg !4368
  br label %for.cond, !dbg !4370, !llvm.loop !4371

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4373
}

; Function Attrs: nounwind uwtable
define internal void @acb_search(%struct.G723_1_ChannelContext* %p, i16* %residual, i16* %impulse_resp, i16* %buf, i32 %index) #1 !dbg !4374 {
entry:
  %retval.i316 = alloca i32, align 4
  %a.addr.i317 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i317, metadata !2355, metadata !1756), !dbg !4377
  %retval.i304 = alloca i32, align 4
  %a.addr.i305 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i305, metadata !2355, metadata !1756), !dbg !4388
  %retval.i292 = alloca i32, align 4
  %a.addr.i293 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i293, metadata !2355, metadata !1756), !dbg !4393
  %retval.i280 = alloca i32, align 4
  %a.addr.i281 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i281, metadata !2355, metadata !1756), !dbg !4401
  %retval.i268 = alloca i32, align 4
  %a.addr.i269 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i269, metadata !2355, metadata !1756), !dbg !4405
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !4413
  %p.addr = alloca %struct.G723_1_ChannelContext*, align 8
  %residual.addr = alloca i16*, align 8
  %impulse_resp.addr = alloca i16*, align 8
  %buf.addr = alloca i16*, align 8
  %index.addr = alloca i32, align 4
  %flt_buf = alloca [5 x [60 x i16]], align 16
  %cb_tbl = alloca i16*, align 8
  %ccr_buf = alloca [80 x i32], align 16
  %pitch_lag = alloca i32, align 4
  %acb_lag = alloca i32, align 4
  %acb_gain = alloca i32, align 4
  %odd_frame = alloca i32, align 4
  %iter = alloca i32, align 4
  %count = alloca i32, align 4
  %tbl_size = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %max = alloca i32, align 4
  %temp = alloca i64, align 8
  store %struct.G723_1_ChannelContext* %p, %struct.G723_1_ChannelContext** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.G723_1_ChannelContext** %p.addr, metadata !4418, metadata !1756), !dbg !4419
  store i16* %residual, i16** %residual.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %residual.addr, metadata !4420, metadata !1756), !dbg !4421
  store i16* %impulse_resp, i16** %impulse_resp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %impulse_resp.addr, metadata !4422, metadata !1756), !dbg !4423
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !4424, metadata !1756), !dbg !4425
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4426, metadata !1756), !dbg !4427
  call void @llvm.dbg.declare(metadata [5 x [60 x i16]]* %flt_buf, metadata !4428, metadata !1756), !dbg !4432
  call void @llvm.dbg.declare(metadata i16** %cb_tbl, metadata !4433, metadata !1756), !dbg !4434
  store i16* getelementptr inbounds ([1700 x i16], [1700 x i16]* @adaptive_cb_gain85, i32 0, i32 0), i16** %cb_tbl, align 8, !dbg !4434
  call void @llvm.dbg.declare(metadata [80 x i32]* %ccr_buf, metadata !4435, metadata !1756), !dbg !4437
  call void @llvm.dbg.declare(metadata i32* %pitch_lag, metadata !4438, metadata !1756), !dbg !4439
  %0 = load i32, i32* %index.addr, align 4, !dbg !4440
  %shr = ashr i32 %0, 1, !dbg !4441
  %idxprom = sext i32 %shr to i64, !dbg !4442
  %1 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !4442
  %pitch_lag1 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %1, i32 0, i32 5, !dbg !4443
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag1, i64 0, i64 %idxprom, !dbg !4442
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4442
  store i32 %2, i32* %pitch_lag, align 4, !dbg !4439
  call void @llvm.dbg.declare(metadata i32* %acb_lag, metadata !4444, metadata !1756), !dbg !4445
  store i32 1, i32* %acb_lag, align 4, !dbg !4445
  call void @llvm.dbg.declare(metadata i32* %acb_gain, metadata !4446, metadata !1756), !dbg !4447
  store i32 0, i32* %acb_gain, align 4, !dbg !4447
  call void @llvm.dbg.declare(metadata i32* %odd_frame, metadata !4448, metadata !1756), !dbg !4449
  %3 = load i32, i32* %index.addr, align 4, !dbg !4450
  %and = and i32 %3, 1, !dbg !4451
  store i32 %and, i32* %odd_frame, align 4, !dbg !4449
  call void @llvm.dbg.declare(metadata i32* %iter, metadata !4452, metadata !1756), !dbg !4453
  %4 = load i32, i32* %odd_frame, align 4, !dbg !4454
  %add = add nsw i32 3, %4, !dbg !4455
  store i32 %add, i32* %iter, align 4, !dbg !4453
  call void @llvm.dbg.declare(metadata i32* %count, metadata !4456, metadata !1756), !dbg !4457
  store i32 0, i32* %count, align 4, !dbg !4457
  call void @llvm.dbg.declare(metadata i32* %tbl_size, metadata !4458, metadata !1756), !dbg !4459
  store i32 85, i32* %tbl_size, align 4, !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4460, metadata !1756), !dbg !4461
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4462, metadata !1756), !dbg !4463
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4464, metadata !1756), !dbg !4465
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4466, metadata !1756), !dbg !4467
  call void @llvm.dbg.declare(metadata i32* %max, metadata !4468, metadata !1756), !dbg !4469
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !4470, metadata !1756), !dbg !4471
  %5 = load i32, i32* %odd_frame, align 4, !dbg !4472
  %tobool = icmp ne i32 %5, 0, !dbg !4472
  br i1 %tobool, label %if.end4, label %if.then, !dbg !4474

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %pitch_lag, align 4, !dbg !4475
  %cmp = icmp eq i32 %6, 18, !dbg !4478
  br i1 %cmp, label %if.then2, label %if.else, !dbg !4479

if.then2:                                         ; preds = %if.then
  %7 = load i32, i32* %pitch_lag, align 4, !dbg !4480
  %inc = add nsw i32 %7, 1, !dbg !4480
  store i32 %inc, i32* %pitch_lag, align 4, !dbg !4480
  br label %if.end, !dbg !4481

if.else:                                          ; preds = %if.then
  %8 = load i32, i32* %pitch_lag, align 4, !dbg !4482
  %cmp3 = icmp sgt i32 %8, 140, !dbg !4483
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !4484

cond.true:                                        ; preds = %if.else
  br label %cond.end, !dbg !4485

cond.false:                                       ; preds = %if.else
  %9 = load i32, i32* %pitch_lag, align 4, !dbg !4487
  br label %cond.end, !dbg !4489

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 140, %cond.true ], [ %9, %cond.false ], !dbg !4490
  store i32 %cond, i32* %pitch_lag, align 4, !dbg !4492
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then2
  br label %if.end4, !dbg !4493

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, i32* %i, align 4, !dbg !4494
  br label %for.cond, !dbg !4495

for.cond:                                         ; preds = %for.inc140, %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !4496
  %11 = load i32, i32* %iter, align 4, !dbg !4498
  %cmp5 = icmp slt i32 %10, %11, !dbg !4499
  br i1 %cmp5, label %for.body, label %for.end142, !dbg !4500

for.body:                                         ; preds = %for.cond
  %12 = load i16*, i16** %residual.addr, align 8, !dbg !4501
  %13 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !4502
  %prev_excitation = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %13, i32 0, i32 9, !dbg !4503
  %arraydecay = getelementptr inbounds [145 x i16], [145 x i16]* %prev_excitation, i32 0, i32 0, !dbg !4502
  %14 = load i32, i32* %pitch_lag, align 4, !dbg !4504
  %15 = load i32, i32* %i, align 4, !dbg !4505
  %add6 = add nsw i32 %14, %15, !dbg !4506
  %sub = sub nsw i32 %add6, 1, !dbg !4507
  call void @ff_g723_1_get_residual(i16* %12, i16* %arraydecay, i32 %sub), !dbg !4508
  store i32 0, i32* %j, align 4, !dbg !4509
  br label %for.cond7, !dbg !4510

for.cond7:                                        ; preds = %for.inc29, %for.body
  %16 = load i32, i32* %j, align 4, !dbg !4511
  %cmp8 = icmp slt i32 %16, 60, !dbg !4513
  br i1 %cmp8, label %for.body9, label %for.end31, !dbg !4514

for.body9:                                        ; preds = %for.cond7
  store i64 0, i64* %temp, align 8, !dbg !4515
  store i32 0, i32* %k, align 4, !dbg !4516
  br label %for.cond10, !dbg !4518

for.cond10:                                       ; preds = %for.inc, %for.body9
  %17 = load i32, i32* %k, align 4, !dbg !4519
  %18 = load i32, i32* %j, align 4, !dbg !4522
  %cmp11 = icmp sle i32 %17, %18, !dbg !4523
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !4524

for.body12:                                       ; preds = %for.cond10
  %19 = load i32, i32* %k, align 4, !dbg !4525
  %add13 = add nsw i32 4, %19, !dbg !4526
  %idxprom14 = sext i32 %add13 to i64, !dbg !4527
  %20 = load i16*, i16** %residual.addr, align 8, !dbg !4527
  %arrayidx15 = getelementptr inbounds i16, i16* %20, i64 %idxprom14, !dbg !4527
  %21 = load i16, i16* %arrayidx15, align 2, !dbg !4527
  %conv = sext i16 %21 to i32, !dbg !4527
  %22 = load i32, i32* %j, align 4, !dbg !4528
  %23 = load i32, i32* %k, align 4, !dbg !4529
  %sub16 = sub nsw i32 %22, %23, !dbg !4530
  %idxprom17 = sext i32 %sub16 to i64, !dbg !4531
  %24 = load i16*, i16** %impulse_resp.addr, align 8, !dbg !4531
  %arrayidx18 = getelementptr inbounds i16, i16* %24, i64 %idxprom17, !dbg !4531
  %25 = load i16, i16* %arrayidx18, align 2, !dbg !4531
  %conv19 = sext i16 %25 to i32, !dbg !4531
  %mul = mul nsw i32 %conv, %conv19, !dbg !4532
  %conv20 = sext i32 %mul to i64, !dbg !4527
  %26 = load i64, i64* %temp, align 8, !dbg !4533
  %add21 = add nsw i64 %26, %conv20, !dbg !4533
  store i64 %add21, i64* %temp, align 8, !dbg !4533
  br label %for.inc, !dbg !4534

for.inc:                                          ; preds = %for.body12
  %27 = load i32, i32* %k, align 4, !dbg !4535
  %inc22 = add nsw i32 %27, 1, !dbg !4535
  store i32 %inc22, i32* %k, align 4, !dbg !4535
  br label %for.cond10, !dbg !4537, !llvm.loop !4538

for.end:                                          ; preds = %for.cond10
  %28 = load i64, i64* %temp, align 8, !dbg !4540
  %shl = shl i64 %28, 1, !dbg !4541
  %add23 = add nsw i64 %shl, 32768, !dbg !4542
  store i64 %add23, i64* %a.addr.i, align 8, !dbg !4543
  %29 = load i64, i64* %a.addr.i, align 8, !dbg !4544
  %add.i = add nsw i64 %29, 2147483648, !dbg !4545
  %and.i = and i64 %add.i, -4294967296, !dbg !4546
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !4546
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4547

if.then.i:                                        ; preds = %for.end
  %30 = load i64, i64* %a.addr.i, align 8, !dbg !4548
  %shr.i = ashr i64 %30, 63, !dbg !4549
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !4550
  %conv.i = trunc i64 %xor.i to i32, !dbg !4551
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !4552
  br label %av_clipl_int32_c.exit, !dbg !4552

if.else.i:                                        ; preds = %for.end
  %31 = load i64, i64* %a.addr.i, align 8, !dbg !4553
  %conv1.i = trunc i64 %31 to i32, !dbg !4554
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !4555
  br label %av_clipl_int32_c.exit, !dbg !4555

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %32 = load i32, i32* %retval.i, align 4, !dbg !4556
  %shr24 = ashr i32 %32, 16, !dbg !4557
  %conv25 = trunc i32 %shr24 to i16, !dbg !4543
  %33 = load i32, i32* %j, align 4, !dbg !4558
  %idxprom26 = sext i32 %33 to i64, !dbg !4559
  %arrayidx27 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 4, !dbg !4559
  %arrayidx28 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx27, i64 0, i64 %idxprom26, !dbg !4559
  store i16 %conv25, i16* %arrayidx28, align 2, !dbg !4560
  br label %for.inc29, !dbg !4561

for.inc29:                                        ; preds = %av_clipl_int32_c.exit
  %34 = load i32, i32* %j, align 4, !dbg !4562
  %inc30 = add nsw i32 %34, 1, !dbg !4562
  store i32 %inc30, i32* %j, align 4, !dbg !4562
  br label %for.cond7, !dbg !4564, !llvm.loop !4565

for.end31:                                        ; preds = %for.cond7
  store i32 3, i32* %j, align 4, !dbg !4567
  br label %for.cond32, !dbg !4568

for.cond32:                                       ; preds = %for.inc79, %for.end31
  %35 = load i32, i32* %j, align 4, !dbg !4569
  %cmp33 = icmp sge i32 %35, 0, !dbg !4571
  br i1 %cmp33, label %for.body35, label %for.end80, !dbg !4572

for.body35:                                       ; preds = %for.cond32
  %36 = load i32, i32* %j, align 4, !dbg !4573
  %idxprom36 = sext i32 %36 to i64, !dbg !4574
  %37 = load i16*, i16** %residual.addr, align 8, !dbg !4574
  %arrayidx37 = getelementptr inbounds i16, i16* %37, i64 %idxprom36, !dbg !4574
  %38 = load i16, i16* %arrayidx37, align 2, !dbg !4574
  %conv38 = sext i16 %38 to i32, !dbg !4574
  %shl39 = shl i32 %conv38, 13, !dbg !4575
  %add40 = add nsw i32 %shl39, 16384, !dbg !4576
  %shr41 = ashr i32 %add40, 15, !dbg !4577
  %conv42 = trunc i32 %shr41 to i16, !dbg !4578
  %39 = load i32, i32* %j, align 4, !dbg !4579
  %idxprom43 = sext i32 %39 to i64, !dbg !4580
  %arrayidx44 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom43, !dbg !4580
  %arrayidx45 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx44, i64 0, i64 0, !dbg !4580
  store i16 %conv42, i16* %arrayidx45, align 8, !dbg !4581
  store i32 1, i32* %k, align 4, !dbg !4582
  br label %for.cond46, !dbg !4583

for.cond46:                                       ; preds = %for.inc76, %for.body35
  %40 = load i32, i32* %k, align 4, !dbg !4584
  %cmp47 = icmp slt i32 %40, 60, !dbg !4586
  br i1 %cmp47, label %for.body49, label %for.end78, !dbg !4587

for.body49:                                       ; preds = %for.cond46
  %41 = load i32, i32* %k, align 4, !dbg !4588
  %sub50 = sub nsw i32 %41, 1, !dbg !4589
  %idxprom51 = sext i32 %sub50 to i64, !dbg !4590
  %42 = load i32, i32* %j, align 4, !dbg !4591
  %add52 = add nsw i32 %42, 1, !dbg !4592
  %idxprom53 = sext i32 %add52 to i64, !dbg !4590
  %arrayidx54 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom53, !dbg !4590
  %arrayidx55 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx54, i64 0, i64 %idxprom51, !dbg !4590
  %43 = load i16, i16* %arrayidx55, align 2, !dbg !4590
  %conv56 = sext i16 %43 to i32, !dbg !4590
  %shl57 = shl i32 %conv56, 15, !dbg !4593
  %44 = load i32, i32* %j, align 4, !dbg !4594
  %idxprom58 = sext i32 %44 to i64, !dbg !4595
  %45 = load i16*, i16** %residual.addr, align 8, !dbg !4595
  %arrayidx59 = getelementptr inbounds i16, i16* %45, i64 %idxprom58, !dbg !4595
  %46 = load i16, i16* %arrayidx59, align 2, !dbg !4595
  %conv60 = sext i16 %46 to i32, !dbg !4595
  %47 = load i32, i32* %k, align 4, !dbg !4596
  %idxprom61 = sext i32 %47 to i64, !dbg !4597
  %48 = load i16*, i16** %impulse_resp.addr, align 8, !dbg !4597
  %arrayidx62 = getelementptr inbounds i16, i16* %48, i64 %idxprom61, !dbg !4597
  %49 = load i16, i16* %arrayidx62, align 2, !dbg !4597
  %conv63 = sext i16 %49 to i32, !dbg !4597
  %mul64 = mul nsw i32 %conv60, %conv63, !dbg !4598
  %add65 = add nsw i32 %shl57, %mul64, !dbg !4599
  %conv66 = sext i32 %add65 to i64, !dbg !4600
  store i64 %conv66, i64* %temp, align 8, !dbg !4601
  %50 = load i64, i64* %temp, align 8, !dbg !4602
  %shl67 = shl i64 %50, 1, !dbg !4603
  %add68 = add nsw i64 %shl67, 32768, !dbg !4604
  store i64 %add68, i64* %a.addr.i317, align 8, !dbg !4605
  %51 = load i64, i64* %a.addr.i317, align 8, !dbg !4606
  %add.i318 = add nsw i64 %51, 2147483648, !dbg !4607
  %and.i319 = and i64 %add.i318, -4294967296, !dbg !4608
  %tobool.i320 = icmp ne i64 %and.i319, 0, !dbg !4608
  br i1 %tobool.i320, label %if.then.i324, label %if.else.i326, !dbg !4609

if.then.i324:                                     ; preds = %for.body49
  %52 = load i64, i64* %a.addr.i317, align 8, !dbg !4610
  %shr.i321 = ashr i64 %52, 63, !dbg !4611
  %xor.i322 = xor i64 %shr.i321, 2147483647, !dbg !4612
  %conv.i323 = trunc i64 %xor.i322 to i32, !dbg !4613
  store i32 %conv.i323, i32* %retval.i316, align 4, !dbg !4614
  br label %av_clipl_int32_c.exit327, !dbg !4614

if.else.i326:                                     ; preds = %for.body49
  %53 = load i64, i64* %a.addr.i317, align 8, !dbg !4615
  %conv1.i325 = trunc i64 %53 to i32, !dbg !4616
  store i32 %conv1.i325, i32* %retval.i316, align 4, !dbg !4617
  br label %av_clipl_int32_c.exit327, !dbg !4617

av_clipl_int32_c.exit327:                         ; preds = %if.then.i324, %if.else.i326
  %54 = load i32, i32* %retval.i316, align 4, !dbg !4618
  %shr70 = ashr i32 %54, 16, !dbg !4619
  %conv71 = trunc i32 %shr70 to i16, !dbg !4605
  %55 = load i32, i32* %k, align 4, !dbg !4620
  %idxprom72 = sext i32 %55 to i64, !dbg !4621
  %56 = load i32, i32* %j, align 4, !dbg !4622
  %idxprom73 = sext i32 %56 to i64, !dbg !4621
  %arrayidx74 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom73, !dbg !4621
  %arrayidx75 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx74, i64 0, i64 %idxprom72, !dbg !4621
  store i16 %conv71, i16* %arrayidx75, align 2, !dbg !4623
  br label %for.inc76, !dbg !4624

for.inc76:                                        ; preds = %av_clipl_int32_c.exit327
  %57 = load i32, i32* %k, align 4, !dbg !4625
  %inc77 = add nsw i32 %57, 1, !dbg !4625
  store i32 %inc77, i32* %k, align 4, !dbg !4625
  br label %for.cond46, !dbg !4627, !llvm.loop !4628

for.end78:                                        ; preds = %for.cond46
  br label %for.inc79, !dbg !4630

for.inc79:                                        ; preds = %for.end78
  %58 = load i32, i32* %j, align 4, !dbg !4631
  %dec = add nsw i32 %58, -1, !dbg !4631
  store i32 %dec, i32* %j, align 4, !dbg !4631
  br label %for.cond32, !dbg !4633, !llvm.loop !4634

for.end80:                                        ; preds = %for.cond32
  store i32 0, i32* %j, align 4, !dbg !4636
  br label %for.cond81, !dbg !4637

for.cond81:                                       ; preds = %for.inc94, %for.end80
  %59 = load i32, i32* %j, align 4, !dbg !4638
  %cmp82 = icmp slt i32 %59, 5, !dbg !4640
  br i1 %cmp82, label %for.body84, label %for.end96, !dbg !4641

for.body84:                                       ; preds = %for.cond81
  %60 = load i16*, i16** %buf.addr, align 8, !dbg !4642
  %61 = load i32, i32* %j, align 4, !dbg !4643
  %idxprom85 = sext i32 %61 to i64, !dbg !4644
  %arrayidx86 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom85, !dbg !4644
  %arraydecay87 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx86, i32 0, i32 0, !dbg !4644
  %call88 = call i64 @ff_dot_product(i16* %60, i16* %arraydecay87, i32 60), !dbg !4645
  store i64 %call88, i64* %temp, align 8, !dbg !4646
  %62 = load i64, i64* %temp, align 8, !dbg !4647
  %shl89 = shl i64 %62, 1, !dbg !4648
  store i64 %shl89, i64* %a.addr.i305, align 8, !dbg !4649
  %63 = load i64, i64* %a.addr.i305, align 8, !dbg !4650
  %add.i306 = add nsw i64 %63, 2147483648, !dbg !4651
  %and.i307 = and i64 %add.i306, -4294967296, !dbg !4652
  %tobool.i308 = icmp ne i64 %and.i307, 0, !dbg !4652
  br i1 %tobool.i308, label %if.then.i312, label %if.else.i314, !dbg !4653

if.then.i312:                                     ; preds = %for.body84
  %64 = load i64, i64* %a.addr.i305, align 8, !dbg !4654
  %shr.i309 = ashr i64 %64, 63, !dbg !4655
  %xor.i310 = xor i64 %shr.i309, 2147483647, !dbg !4656
  %conv.i311 = trunc i64 %xor.i310 to i32, !dbg !4657
  store i32 %conv.i311, i32* %retval.i304, align 4, !dbg !4658
  br label %av_clipl_int32_c.exit315, !dbg !4658

if.else.i314:                                     ; preds = %for.body84
  %65 = load i64, i64* %a.addr.i305, align 8, !dbg !4659
  %conv1.i313 = trunc i64 %65 to i32, !dbg !4660
  store i32 %conv1.i313, i32* %retval.i304, align 4, !dbg !4661
  br label %av_clipl_int32_c.exit315, !dbg !4661

av_clipl_int32_c.exit315:                         ; preds = %if.then.i312, %if.else.i314
  %66 = load i32, i32* %retval.i304, align 4, !dbg !4662
  %67 = load i32, i32* %count, align 4, !dbg !4663
  %inc91 = add nsw i32 %67, 1, !dbg !4663
  store i32 %inc91, i32* %count, align 4, !dbg !4663
  %idxprom92 = sext i32 %67 to i64, !dbg !4664
  %arrayidx93 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom92, !dbg !4664
  store i32 %66, i32* %arrayidx93, align 4, !dbg !4665
  br label %for.inc94, !dbg !4666

for.inc94:                                        ; preds = %av_clipl_int32_c.exit315
  %68 = load i32, i32* %j, align 4, !dbg !4667
  %inc95 = add nsw i32 %68, 1, !dbg !4667
  store i32 %inc95, i32* %j, align 4, !dbg !4667
  br label %for.cond81, !dbg !4669, !llvm.loop !4670

for.end96:                                        ; preds = %for.cond81
  store i32 0, i32* %j, align 4, !dbg !4672
  br label %for.cond97, !dbg !4674

for.cond97:                                       ; preds = %for.inc111, %for.end96
  %69 = load i32, i32* %j, align 4, !dbg !4675
  %cmp98 = icmp slt i32 %69, 5, !dbg !4678
  br i1 %cmp98, label %for.body100, label %for.end113, !dbg !4679

for.body100:                                      ; preds = %for.cond97
  %70 = load i32, i32* %j, align 4, !dbg !4680
  %idxprom101 = sext i32 %70 to i64, !dbg !4682
  %arrayidx102 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom101, !dbg !4682
  %arraydecay103 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx102, i32 0, i32 0, !dbg !4682
  %71 = load i32, i32* %j, align 4, !dbg !4683
  %idxprom104 = sext i32 %71 to i64, !dbg !4684
  %arrayidx105 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom104, !dbg !4684
  %arraydecay106 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx105, i32 0, i32 0, !dbg !4684
  %call107 = call i32 @ff_g723_1_dot_product(i16* %arraydecay103, i16* %arraydecay106, i32 60), !dbg !4685
  %72 = load i32, i32* %count, align 4, !dbg !4686
  %inc108 = add nsw i32 %72, 1, !dbg !4686
  store i32 %inc108, i32* %count, align 4, !dbg !4686
  %idxprom109 = sext i32 %72 to i64, !dbg !4687
  %arrayidx110 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom109, !dbg !4687
  store i32 %call107, i32* %arrayidx110, align 4, !dbg !4688
  br label %for.inc111, !dbg !4689

for.inc111:                                       ; preds = %for.body100
  %73 = load i32, i32* %j, align 4, !dbg !4690
  %inc112 = add nsw i32 %73, 1, !dbg !4690
  store i32 %inc112, i32* %j, align 4, !dbg !4690
  br label %for.cond97, !dbg !4692, !llvm.loop !4693

for.end113:                                       ; preds = %for.cond97
  store i32 1, i32* %j, align 4, !dbg !4695
  br label %for.cond114, !dbg !4696

for.cond114:                                      ; preds = %for.inc137, %for.end113
  %74 = load i32, i32* %j, align 4, !dbg !4697
  %cmp115 = icmp slt i32 %74, 5, !dbg !4699
  br i1 %cmp115, label %for.body117, label %for.end139, !dbg !4700

for.body117:                                      ; preds = %for.cond114
  store i32 0, i32* %k, align 4, !dbg !4701
  br label %for.cond118, !dbg !4702

for.cond118:                                      ; preds = %for.inc134, %for.body117
  %75 = load i32, i32* %k, align 4, !dbg !4703
  %76 = load i32, i32* %j, align 4, !dbg !4705
  %cmp119 = icmp slt i32 %75, %76, !dbg !4706
  br i1 %cmp119, label %for.body121, label %for.end136, !dbg !4707

for.body121:                                      ; preds = %for.cond118
  %77 = load i32, i32* %j, align 4, !dbg !4708
  %idxprom122 = sext i32 %77 to i64, !dbg !4709
  %arrayidx123 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom122, !dbg !4709
  %arraydecay124 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx123, i32 0, i32 0, !dbg !4709
  %78 = load i32, i32* %k, align 4, !dbg !4710
  %idxprom125 = sext i32 %78 to i64, !dbg !4711
  %arrayidx126 = getelementptr inbounds [5 x [60 x i16]], [5 x [60 x i16]]* %flt_buf, i64 0, i64 %idxprom125, !dbg !4711
  %arraydecay127 = getelementptr inbounds [60 x i16], [60 x i16]* %arrayidx126, i32 0, i32 0, !dbg !4711
  %call128 = call i64 @ff_dot_product(i16* %arraydecay124, i16* %arraydecay127, i32 60), !dbg !4712
  store i64 %call128, i64* %temp, align 8, !dbg !4713
  %79 = load i64, i64* %temp, align 8, !dbg !4714
  %shl129 = shl i64 %79, 2, !dbg !4715
  store i64 %shl129, i64* %a.addr.i293, align 8, !dbg !4716
  %80 = load i64, i64* %a.addr.i293, align 8, !dbg !4717
  %add.i294 = add nsw i64 %80, 2147483648, !dbg !4718
  %and.i295 = and i64 %add.i294, -4294967296, !dbg !4719
  %tobool.i296 = icmp ne i64 %and.i295, 0, !dbg !4719
  br i1 %tobool.i296, label %if.then.i300, label %if.else.i302, !dbg !4720

if.then.i300:                                     ; preds = %for.body121
  %81 = load i64, i64* %a.addr.i293, align 8, !dbg !4721
  %shr.i297 = ashr i64 %81, 63, !dbg !4722
  %xor.i298 = xor i64 %shr.i297, 2147483647, !dbg !4723
  %conv.i299 = trunc i64 %xor.i298 to i32, !dbg !4724
  store i32 %conv.i299, i32* %retval.i292, align 4, !dbg !4725
  br label %av_clipl_int32_c.exit303, !dbg !4725

if.else.i302:                                     ; preds = %for.body121
  %82 = load i64, i64* %a.addr.i293, align 8, !dbg !4726
  %conv1.i301 = trunc i64 %82 to i32, !dbg !4727
  store i32 %conv1.i301, i32* %retval.i292, align 4, !dbg !4728
  br label %av_clipl_int32_c.exit303, !dbg !4728

av_clipl_int32_c.exit303:                         ; preds = %if.then.i300, %if.else.i302
  %83 = load i32, i32* %retval.i292, align 4, !dbg !4729
  %84 = load i32, i32* %count, align 4, !dbg !4730
  %inc131 = add nsw i32 %84, 1, !dbg !4730
  store i32 %inc131, i32* %count, align 4, !dbg !4730
  %idxprom132 = sext i32 %84 to i64, !dbg !4731
  %arrayidx133 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom132, !dbg !4731
  store i32 %83, i32* %arrayidx133, align 4, !dbg !4732
  br label %for.inc134, !dbg !4733

for.inc134:                                       ; preds = %av_clipl_int32_c.exit303
  %85 = load i32, i32* %k, align 4, !dbg !4734
  %inc135 = add nsw i32 %85, 1, !dbg !4734
  store i32 %inc135, i32* %k, align 4, !dbg !4734
  br label %for.cond118, !dbg !4736, !llvm.loop !4737

for.end136:                                       ; preds = %for.cond118
  br label %for.inc137, !dbg !4739

for.inc137:                                       ; preds = %for.end136
  %86 = load i32, i32* %j, align 4, !dbg !4740
  %inc138 = add nsw i32 %86, 1, !dbg !4740
  store i32 %inc138, i32* %j, align 4, !dbg !4740
  br label %for.cond114, !dbg !4742, !llvm.loop !4743

for.end139:                                       ; preds = %for.cond114
  br label %for.inc140, !dbg !4745

for.inc140:                                       ; preds = %for.end139
  %87 = load i32, i32* %i, align 4, !dbg !4746
  %inc141 = add nsw i32 %87, 1, !dbg !4746
  store i32 %inc141, i32* %i, align 4, !dbg !4746
  br label %for.cond, !dbg !4748, !llvm.loop !4749

for.end142:                                       ; preds = %for.cond
  store i32 0, i32* %max, align 4, !dbg !4751
  store i32 0, i32* %i, align 4, !dbg !4752
  br label %for.cond143, !dbg !4754

for.cond143:                                      ; preds = %for.inc180, %for.end142
  %88 = load i32, i32* %i, align 4, !dbg !4755
  %89 = load i32, i32* %iter, align 4, !dbg !4758
  %mul144 = mul nsw i32 20, %89, !dbg !4759
  %cmp145 = icmp slt i32 %88, %mul144, !dbg !4760
  br i1 %cmp145, label %for.body147, label %for.end182, !dbg !4761

for.body147:                                      ; preds = %for.cond143
  %90 = load i32, i32* %max, align 4, !dbg !4762
  %91 = load i32, i32* %i, align 4, !dbg !4763
  %idxprom148 = sext i32 %91 to i64, !dbg !4764
  %arrayidx149 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom148, !dbg !4764
  %92 = load i32, i32* %arrayidx149, align 4, !dbg !4764
  %cmp150 = icmp sge i32 %92, 0, !dbg !4765
  br i1 %cmp150, label %cond.true152, label %cond.false155, !dbg !4766

cond.true152:                                     ; preds = %for.body147
  %93 = load i32, i32* %i, align 4, !dbg !4767
  %idxprom153 = sext i32 %93 to i64, !dbg !4768
  %arrayidx154 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom153, !dbg !4768
  %94 = load i32, i32* %arrayidx154, align 4, !dbg !4768
  br label %cond.end159, !dbg !4769

cond.false155:                                    ; preds = %for.body147
  %95 = load i32, i32* %i, align 4, !dbg !4770
  %idxprom156 = sext i32 %95 to i64, !dbg !4772
  %arrayidx157 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom156, !dbg !4772
  %96 = load i32, i32* %arrayidx157, align 4, !dbg !4772
  %sub158 = sub nsw i32 0, %96, !dbg !4773
  br label %cond.end159, !dbg !4774

cond.end159:                                      ; preds = %cond.false155, %cond.true152
  %cond160 = phi i32 [ %94, %cond.true152 ], [ %sub158, %cond.false155 ], !dbg !4775
  %cmp161 = icmp sgt i32 %90, %cond160, !dbg !4777
  br i1 %cmp161, label %cond.true163, label %cond.false164, !dbg !4778

cond.true163:                                     ; preds = %cond.end159
  %97 = load i32, i32* %max, align 4, !dbg !4779
  br label %cond.end178, !dbg !4781

cond.false164:                                    ; preds = %cond.end159
  %98 = load i32, i32* %i, align 4, !dbg !4782
  %idxprom165 = sext i32 %98 to i64, !dbg !4784
  %arrayidx166 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom165, !dbg !4784
  %99 = load i32, i32* %arrayidx166, align 4, !dbg !4784
  %cmp167 = icmp sge i32 %99, 0, !dbg !4785
  br i1 %cmp167, label %cond.true169, label %cond.false172, !dbg !4786

cond.true169:                                     ; preds = %cond.false164
  %100 = load i32, i32* %i, align 4, !dbg !4787
  %idxprom170 = sext i32 %100 to i64, !dbg !4789
  %arrayidx171 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom170, !dbg !4789
  %101 = load i32, i32* %arrayidx171, align 4, !dbg !4789
  br label %cond.end176, !dbg !4790

cond.false172:                                    ; preds = %cond.false164
  %102 = load i32, i32* %i, align 4, !dbg !4791
  %idxprom173 = sext i32 %102 to i64, !dbg !4793
  %arrayidx174 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom173, !dbg !4793
  %103 = load i32, i32* %arrayidx174, align 4, !dbg !4793
  %sub175 = sub nsw i32 0, %103, !dbg !4794
  br label %cond.end176, !dbg !4795

cond.end176:                                      ; preds = %cond.false172, %cond.true169
  %cond177 = phi i32 [ %101, %cond.true169 ], [ %sub175, %cond.false172 ], !dbg !4796
  br label %cond.end178, !dbg !4798

cond.end178:                                      ; preds = %cond.end176, %cond.true163
  %cond179 = phi i32 [ %97, %cond.true163 ], [ %cond177, %cond.end176 ], !dbg !4799
  store i32 %cond179, i32* %max, align 4, !dbg !4801
  br label %for.inc180, !dbg !4802

for.inc180:                                       ; preds = %cond.end178
  %104 = load i32, i32* %i, align 4, !dbg !4803
  %inc181 = add nsw i32 %104, 1, !dbg !4803
  store i32 %inc181, i32* %i, align 4, !dbg !4803
  br label %for.cond143, !dbg !4804, !llvm.loop !4805

for.end182:                                       ; preds = %for.cond143
  %105 = load i32, i32* %max, align 4, !dbg !4807
  %call183 = call i32 @ff_g723_1_normalize_bits(i32 %105, i32 31), !dbg !4808
  %conv184 = sext i32 %call183 to i64, !dbg !4808
  store i64 %conv184, i64* %temp, align 8, !dbg !4809
  store i32 0, i32* %i, align 4, !dbg !4810
  br label %for.cond185, !dbg !4811

for.cond185:                                      ; preds = %for.inc199, %for.end182
  %106 = load i32, i32* %i, align 4, !dbg !4812
  %107 = load i32, i32* %iter, align 4, !dbg !4814
  %mul186 = mul nsw i32 20, %107, !dbg !4815
  %cmp187 = icmp slt i32 %106, %mul186, !dbg !4816
  br i1 %cmp187, label %for.body189, label %for.end201, !dbg !4817

for.body189:                                      ; preds = %for.cond185
  %108 = load i32, i32* %i, align 4, !dbg !4818
  %idxprom190 = sext i32 %108 to i64, !dbg !4819
  %arrayidx191 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom190, !dbg !4819
  %109 = load i32, i32* %arrayidx191, align 4, !dbg !4819
  %110 = load i64, i64* %temp, align 8, !dbg !4820
  %sh_prom = trunc i64 %110 to i32, !dbg !4821
  %shl192 = shl i32 %109, %sh_prom, !dbg !4821
  %conv193 = sext i32 %shl192 to i64, !dbg !4822
  %add194 = add nsw i64 %conv193, 32768, !dbg !4823
  store i64 %add194, i64* %a.addr.i281, align 8, !dbg !4824
  %111 = load i64, i64* %a.addr.i281, align 8, !dbg !4825
  %add.i282 = add nsw i64 %111, 2147483648, !dbg !4826
  %and.i283 = and i64 %add.i282, -4294967296, !dbg !4827
  %tobool.i284 = icmp ne i64 %and.i283, 0, !dbg !4827
  br i1 %tobool.i284, label %if.then.i288, label %if.else.i290, !dbg !4828

if.then.i288:                                     ; preds = %for.body189
  %112 = load i64, i64* %a.addr.i281, align 8, !dbg !4829
  %shr.i285 = ashr i64 %112, 63, !dbg !4830
  %xor.i286 = xor i64 %shr.i285, 2147483647, !dbg !4831
  %conv.i287 = trunc i64 %xor.i286 to i32, !dbg !4832
  store i32 %conv.i287, i32* %retval.i280, align 4, !dbg !4833
  br label %av_clipl_int32_c.exit291, !dbg !4833

if.else.i290:                                     ; preds = %for.body189
  %113 = load i64, i64* %a.addr.i281, align 8, !dbg !4834
  %conv1.i289 = trunc i64 %113 to i32, !dbg !4835
  store i32 %conv1.i289, i32* %retval.i280, align 4, !dbg !4836
  br label %av_clipl_int32_c.exit291, !dbg !4836

av_clipl_int32_c.exit291:                         ; preds = %if.then.i288, %if.else.i290
  %114 = load i32, i32* %retval.i280, align 4, !dbg !4837
  %shr196 = ashr i32 %114, 16, !dbg !4838
  %115 = load i32, i32* %i, align 4, !dbg !4839
  %idxprom197 = sext i32 %115 to i64, !dbg !4840
  %arrayidx198 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom197, !dbg !4840
  store i32 %shr196, i32* %arrayidx198, align 4, !dbg !4841
  br label %for.inc199, !dbg !4840

for.inc199:                                       ; preds = %av_clipl_int32_c.exit291
  %116 = load i32, i32* %i, align 4, !dbg !4842
  %inc200 = add nsw i32 %116, 1, !dbg !4842
  store i32 %inc200, i32* %i, align 4, !dbg !4842
  br label %for.cond185, !dbg !4844, !llvm.loop !4845

for.end201:                                       ; preds = %for.cond185
  store i32 0, i32* %max, align 4, !dbg !4847
  store i32 0, i32* %i, align 4, !dbg !4848
  br label %for.cond202, !dbg !4849

for.cond202:                                      ; preds = %for.inc251, %for.end201
  %117 = load i32, i32* %i, align 4, !dbg !4850
  %118 = load i32, i32* %iter, align 4, !dbg !4852
  %cmp203 = icmp slt i32 %117, %118, !dbg !4853
  br i1 %cmp203, label %for.body205, label %for.end253, !dbg !4854

for.body205:                                      ; preds = %for.cond202
  %119 = load i32, i32* %odd_frame, align 4, !dbg !4855
  %tobool206 = icmp ne i32 %119, 0, !dbg !4855
  br i1 %tobool206, label %lor.lhs.false, label %land.lhs.true, !dbg !4857

land.lhs.true:                                    ; preds = %for.body205
  %120 = load i32, i32* %pitch_lag, align 4, !dbg !4858
  %121 = load i32, i32* %i, align 4, !dbg !4860
  %add207 = add nsw i32 %120, %121, !dbg !4861
  %sub208 = sub nsw i32 %add207, 1, !dbg !4862
  %cmp209 = icmp sge i32 %sub208, 58, !dbg !4863
  br i1 %cmp209, label %if.then215, label %lor.lhs.false, !dbg !4864

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body205
  %122 = load i32, i32* %odd_frame, align 4, !dbg !4865
  %tobool211 = icmp ne i32 %122, 0, !dbg !4865
  br i1 %tobool211, label %land.lhs.true212, label %if.end216, !dbg !4866

land.lhs.true212:                                 ; preds = %lor.lhs.false
  %123 = load i32, i32* %pitch_lag, align 4, !dbg !4867
  %cmp213 = icmp sge i32 %123, 58, !dbg !4868
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !4869

if.then215:                                       ; preds = %land.lhs.true212, %land.lhs.true
  store i16* getelementptr inbounds ([3400 x i16], [3400 x i16]* @adaptive_cb_gain170, i32 0, i32 0), i16** %cb_tbl, align 8, !dbg !4871
  store i32 170, i32* %tbl_size, align 4, !dbg !4873
  br label %if.end216, !dbg !4874

if.end216:                                        ; preds = %if.then215, %land.lhs.true212, %lor.lhs.false
  store i32 0, i32* %j, align 4, !dbg !4875
  store i32 0, i32* %k, align 4, !dbg !4876
  br label %for.cond217, !dbg !4877

for.cond217:                                      ; preds = %for.inc247, %if.end216
  %124 = load i32, i32* %j, align 4, !dbg !4878
  %125 = load i32, i32* %tbl_size, align 4, !dbg !4880
  %cmp218 = icmp slt i32 %124, %125, !dbg !4881
  br i1 %cmp218, label %for.body220, label %for.end250, !dbg !4882

for.body220:                                      ; preds = %for.cond217
  store i64 0, i64* %temp, align 8, !dbg !4883
  store i32 0, i32* %l, align 4, !dbg !4884
  br label %for.cond221, !dbg !4886

for.cond221:                                      ; preds = %for.inc236, %for.body220
  %126 = load i32, i32* %l, align 4, !dbg !4887
  %cmp222 = icmp slt i32 %126, 20, !dbg !4890
  br i1 %cmp222, label %for.body224, label %for.end238, !dbg !4891

for.body224:                                      ; preds = %for.cond221
  %127 = load i32, i32* %i, align 4, !dbg !4892
  %mul225 = mul nsw i32 20, %127, !dbg !4893
  %128 = load i32, i32* %l, align 4, !dbg !4894
  %add226 = add nsw i32 %mul225, %128, !dbg !4895
  %idxprom227 = sext i32 %add226 to i64, !dbg !4896
  %arrayidx228 = getelementptr inbounds [80 x i32], [80 x i32]* %ccr_buf, i64 0, i64 %idxprom227, !dbg !4896
  %129 = load i32, i32* %arrayidx228, align 4, !dbg !4896
  %130 = load i32, i32* %k, align 4, !dbg !4897
  %131 = load i32, i32* %l, align 4, !dbg !4898
  %add229 = add nsw i32 %130, %131, !dbg !4899
  %idxprom230 = sext i32 %add229 to i64, !dbg !4900
  %132 = load i16*, i16** %cb_tbl, align 8, !dbg !4900
  %arrayidx231 = getelementptr inbounds i16, i16* %132, i64 %idxprom230, !dbg !4900
  %133 = load i16, i16* %arrayidx231, align 2, !dbg !4900
  %conv232 = sext i16 %133 to i32, !dbg !4900
  %mul233 = mul nsw i32 %129, %conv232, !dbg !4901
  %conv234 = sext i32 %mul233 to i64, !dbg !4896
  %134 = load i64, i64* %temp, align 8, !dbg !4902
  %add235 = add nsw i64 %134, %conv234, !dbg !4902
  store i64 %add235, i64* %temp, align 8, !dbg !4902
  br label %for.inc236, !dbg !4903

for.inc236:                                       ; preds = %for.body224
  %135 = load i32, i32* %l, align 4, !dbg !4904
  %inc237 = add nsw i32 %135, 1, !dbg !4904
  store i32 %inc237, i32* %l, align 4, !dbg !4904
  br label %for.cond221, !dbg !4906, !llvm.loop !4907

for.end238:                                       ; preds = %for.cond221
  %136 = load i64, i64* %temp, align 8, !dbg !4909
  store i64 %136, i64* %a.addr.i269, align 8, !dbg !4910
  %137 = load i64, i64* %a.addr.i269, align 8, !dbg !4911
  %add.i270 = add nsw i64 %137, 2147483648, !dbg !4912
  %and.i271 = and i64 %add.i270, -4294967296, !dbg !4913
  %tobool.i272 = icmp ne i64 %and.i271, 0, !dbg !4913
  br i1 %tobool.i272, label %if.then.i276, label %if.else.i278, !dbg !4914

if.then.i276:                                     ; preds = %for.end238
  %138 = load i64, i64* %a.addr.i269, align 8, !dbg !4915
  %shr.i273 = ashr i64 %138, 63, !dbg !4916
  %xor.i274 = xor i64 %shr.i273, 2147483647, !dbg !4917
  %conv.i275 = trunc i64 %xor.i274 to i32, !dbg !4918
  store i32 %conv.i275, i32* %retval.i268, align 4, !dbg !4919
  br label %av_clipl_int32_c.exit279, !dbg !4919

if.else.i278:                                     ; preds = %for.end238
  %139 = load i64, i64* %a.addr.i269, align 8, !dbg !4920
  %conv1.i277 = trunc i64 %139 to i32, !dbg !4921
  store i32 %conv1.i277, i32* %retval.i268, align 4, !dbg !4922
  br label %av_clipl_int32_c.exit279, !dbg !4922

av_clipl_int32_c.exit279:                         ; preds = %if.then.i276, %if.else.i278
  %140 = load i32, i32* %retval.i268, align 4, !dbg !4923
  %conv240 = sext i32 %140 to i64, !dbg !4910
  store i64 %conv240, i64* %temp, align 8, !dbg !4924
  %141 = load i64, i64* %temp, align 8, !dbg !4925
  %142 = load i32, i32* %max, align 4, !dbg !4927
  %conv241 = sext i32 %142 to i64, !dbg !4927
  %cmp242 = icmp sgt i64 %141, %conv241, !dbg !4928
  br i1 %cmp242, label %if.then244, label %if.end246, !dbg !4929

if.then244:                                       ; preds = %av_clipl_int32_c.exit279
  %143 = load i64, i64* %temp, align 8, !dbg !4930
  %conv245 = trunc i64 %143 to i32, !dbg !4930
  store i32 %conv245, i32* %max, align 4, !dbg !4932
  %144 = load i32, i32* %j, align 4, !dbg !4933
  store i32 %144, i32* %acb_gain, align 4, !dbg !4934
  %145 = load i32, i32* %i, align 4, !dbg !4935
  store i32 %145, i32* %acb_lag, align 4, !dbg !4936
  br label %if.end246, !dbg !4937

if.end246:                                        ; preds = %if.then244, %av_clipl_int32_c.exit279
  br label %for.inc247, !dbg !4938

for.inc247:                                       ; preds = %if.end246
  %146 = load i32, i32* %j, align 4, !dbg !4939
  %inc248 = add nsw i32 %146, 1, !dbg !4939
  store i32 %inc248, i32* %j, align 4, !dbg !4939
  %147 = load i32, i32* %k, align 4, !dbg !4941
  %add249 = add nsw i32 %147, 20, !dbg !4941
  store i32 %add249, i32* %k, align 4, !dbg !4941
  br label %for.cond217, !dbg !4942, !llvm.loop !4943

for.end250:                                       ; preds = %for.cond217
  br label %for.inc251, !dbg !4945

for.inc251:                                       ; preds = %for.end250
  %148 = load i32, i32* %i, align 4, !dbg !4946
  %inc252 = add nsw i32 %148, 1, !dbg !4946
  store i32 %inc252, i32* %i, align 4, !dbg !4946
  br label %for.cond202, !dbg !4948, !llvm.loop !4949

for.end253:                                       ; preds = %for.cond202
  %149 = load i32, i32* %odd_frame, align 4, !dbg !4951
  %tobool254 = icmp ne i32 %149, 0, !dbg !4951
  br i1 %tobool254, label %if.end258, label %if.then255, !dbg !4953

if.then255:                                       ; preds = %for.end253
  %150 = load i32, i32* %acb_lag, align 4, !dbg !4954
  %sub256 = sub nsw i32 %150, 1, !dbg !4956
  %151 = load i32, i32* %pitch_lag, align 4, !dbg !4957
  %add257 = add nsw i32 %151, %sub256, !dbg !4957
  store i32 %add257, i32* %pitch_lag, align 4, !dbg !4957
  store i32 1, i32* %acb_lag, align 4, !dbg !4958
  br label %if.end258, !dbg !4959

if.end258:                                        ; preds = %if.then255, %for.end253
  %152 = load i32, i32* %pitch_lag, align 4, !dbg !4960
  %153 = load i32, i32* %index.addr, align 4, !dbg !4961
  %shr259 = ashr i32 %153, 1, !dbg !4962
  %idxprom260 = sext i32 %shr259 to i64, !dbg !4963
  %154 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !4963
  %pitch_lag261 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %154, i32 0, i32 5, !dbg !4964
  %arrayidx262 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag261, i64 0, i64 %idxprom260, !dbg !4963
  store i32 %152, i32* %arrayidx262, align 4, !dbg !4965
  %155 = load i32, i32* %acb_lag, align 4, !dbg !4966
  %156 = load i32, i32* %index.addr, align 4, !dbg !4967
  %idxprom263 = sext i32 %156 to i64, !dbg !4968
  %157 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !4968
  %subframe = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %157, i32 0, i32 0, !dbg !4969
  %arrayidx264 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe, i64 0, i64 %idxprom263, !dbg !4968
  %ad_cb_lag = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx264, i32 0, i32 0, !dbg !4970
  store i32 %155, i32* %ad_cb_lag, align 4, !dbg !4971
  %158 = load i32, i32* %acb_gain, align 4, !dbg !4972
  %159 = load i32, i32* %index.addr, align 4, !dbg !4973
  %idxprom265 = sext i32 %159 to i64, !dbg !4974
  %160 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !4974
  %subframe266 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %160, i32 0, i32 0, !dbg !4975
  %arrayidx267 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe266, i64 0, i64 %idxprom265, !dbg !4974
  %ad_cb_gain = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx267, i32 0, i32 1, !dbg !4976
  store i32 %158, i32* %ad_cb_gain, align 4, !dbg !4977
  ret void, !dbg !4978
}

declare void @ff_g723_1_gen_acb_excitation(i16*, i16*, i32, %struct.G723_1_Subframe*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @sub_acb_contrib(i16* %residual, i16* %impulse_resp, i16* %buf) #1 !dbg !4979 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !4982
  %residual.addr = alloca i16*, align 8
  %impulse_resp.addr = alloca i16*, align 8
  %buf.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %temp = alloca i64, align 8
  store i16* %residual, i16** %residual.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %residual.addr, metadata !4987, metadata !1756), !dbg !4988
  store i16* %impulse_resp, i16** %impulse_resp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %impulse_resp.addr, metadata !4989, metadata !1756), !dbg !4990
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !4991, metadata !1756), !dbg !4992
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4993, metadata !1756), !dbg !4994
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4995, metadata !1756), !dbg !4996
  store i32 0, i32* %i, align 4, !dbg !4997
  br label %for.cond, !dbg !4998

for.cond:                                         ; preds = %for.inc18, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4999
  %cmp = icmp slt i32 %0, 60, !dbg !5001
  br i1 %cmp, label %for.body, label %for.end20, !dbg !5002

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !5003, metadata !1756), !dbg !5004
  %1 = load i32, i32* %i, align 4, !dbg !5005
  %idxprom = sext i32 %1 to i64, !dbg !5006
  %2 = load i16*, i16** %buf.addr, align 8, !dbg !5006
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !5006
  %3 = load i16, i16* %arrayidx, align 2, !dbg !5006
  %conv = sext i16 %3 to i32, !dbg !5006
  %shl = shl i32 %conv, 14, !dbg !5007
  %conv1 = sext i32 %shl to i64, !dbg !5006
  store i64 %conv1, i64* %temp, align 8, !dbg !5004
  store i32 0, i32* %j, align 4, !dbg !5008
  br label %for.cond2, !dbg !5010

for.cond2:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !5011
  %5 = load i32, i32* %i, align 4, !dbg !5014
  %cmp3 = icmp sle i32 %4, %5, !dbg !5015
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !5016

for.body5:                                        ; preds = %for.cond2
  %6 = load i32, i32* %j, align 4, !dbg !5017
  %idxprom6 = sext i32 %6 to i64, !dbg !5018
  %7 = load i16*, i16** %residual.addr, align 8, !dbg !5018
  %arrayidx7 = getelementptr inbounds i16, i16* %7, i64 %idxprom6, !dbg !5018
  %8 = load i16, i16* %arrayidx7, align 2, !dbg !5018
  %conv8 = sext i16 %8 to i32, !dbg !5018
  %9 = load i32, i32* %i, align 4, !dbg !5019
  %10 = load i32, i32* %j, align 4, !dbg !5020
  %sub = sub nsw i32 %9, %10, !dbg !5021
  %idxprom9 = sext i32 %sub to i64, !dbg !5022
  %11 = load i16*, i16** %impulse_resp.addr, align 8, !dbg !5022
  %arrayidx10 = getelementptr inbounds i16, i16* %11, i64 %idxprom9, !dbg !5022
  %12 = load i16, i16* %arrayidx10, align 2, !dbg !5022
  %conv11 = sext i16 %12 to i32, !dbg !5022
  %mul = mul nsw i32 %conv8, %conv11, !dbg !5023
  %conv12 = sext i32 %mul to i64, !dbg !5018
  %13 = load i64, i64* %temp, align 8, !dbg !5024
  %sub13 = sub nsw i64 %13, %conv12, !dbg !5024
  store i64 %sub13, i64* %temp, align 8, !dbg !5024
  br label %for.inc, !dbg !5025

for.inc:                                          ; preds = %for.body5
  %14 = load i32, i32* %j, align 4, !dbg !5026
  %inc = add nsw i32 %14, 1, !dbg !5026
  store i32 %inc, i32* %j, align 4, !dbg !5026
  br label %for.cond2, !dbg !5028, !llvm.loop !5029

for.end:                                          ; preds = %for.cond2
  %15 = load i64, i64* %temp, align 8, !dbg !5031
  %shl14 = shl i64 %15, 2, !dbg !5032
  %add = add nsw i64 %shl14, 32768, !dbg !5033
  store i64 %add, i64* %a.addr.i, align 8, !dbg !5034
  %16 = load i64, i64* %a.addr.i, align 8, !dbg !5035
  %add.i = add nsw i64 %16, 2147483648, !dbg !5036
  %and.i = and i64 %add.i, -4294967296, !dbg !5037
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !5037
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5038

if.then.i:                                        ; preds = %for.end
  %17 = load i64, i64* %a.addr.i, align 8, !dbg !5039
  %shr.i = ashr i64 %17, 63, !dbg !5040
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !5041
  %conv.i = trunc i64 %xor.i to i32, !dbg !5042
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !5043
  br label %av_clipl_int32_c.exit, !dbg !5043

if.else.i:                                        ; preds = %for.end
  %18 = load i64, i64* %a.addr.i, align 8, !dbg !5044
  %conv1.i = trunc i64 %18 to i32, !dbg !5045
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !5046
  br label %av_clipl_int32_c.exit, !dbg !5046

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %19 = load i32, i32* %retval.i, align 4, !dbg !5047
  %shr = ashr i32 %19, 16, !dbg !5048
  %conv15 = trunc i32 %shr to i16, !dbg !5034
  %20 = load i32, i32* %i, align 4, !dbg !5049
  %idxprom16 = sext i32 %20 to i64, !dbg !5050
  %21 = load i16*, i16** %buf.addr, align 8, !dbg !5050
  %arrayidx17 = getelementptr inbounds i16, i16* %21, i64 %idxprom16, !dbg !5050
  store i16 %conv15, i16* %arrayidx17, align 2, !dbg !5051
  br label %for.inc18, !dbg !5052

for.inc18:                                        ; preds = %av_clipl_int32_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !5053
  %inc19 = add nsw i32 %22, 1, !dbg !5053
  store i32 %inc19, i32* %i, align 4, !dbg !5053
  br label %for.cond, !dbg !5055, !llvm.loop !5056

for.end20:                                        ; preds = %for.cond
  ret void, !dbg !5058
}

; Function Attrs: nounwind uwtable
define internal void @fcb_search(%struct.G723_1_ChannelContext* %p, i16* %impulse_resp, i16* %buf, i32 %index) #1 !dbg !5059 {
entry:
  %p.addr = alloca %struct.G723_1_ChannelContext*, align 8
  %impulse_resp.addr = alloca i16*, align 8
  %buf.addr = alloca i16*, align 8
  %index.addr = alloca i32, align 4
  %optim = alloca %struct.FCBParam, align 4
  %pulse_cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.G723_1_ChannelContext* %p, %struct.G723_1_ChannelContext** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.G723_1_ChannelContext** %p.addr, metadata !5062, metadata !1756), !dbg !5063
  store i16* %impulse_resp, i16** %impulse_resp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %impulse_resp.addr, metadata !5064, metadata !1756), !dbg !5065
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !5066, metadata !1756), !dbg !5067
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5068, metadata !1756), !dbg !5069
  call void @llvm.dbg.declare(metadata %struct.FCBParam* %optim, metadata !5070, metadata !1756), !dbg !5082
  call void @llvm.dbg.declare(metadata i32* %pulse_cnt, metadata !5083, metadata !1756), !dbg !5084
  %0 = load i32, i32* %index.addr, align 4, !dbg !5085
  %idxprom = sext i32 %0 to i64, !dbg !5086
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* @pulses, i64 0, i64 %idxprom, !dbg !5086
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5086
  %conv = sext i8 %1 to i32, !dbg !5086
  store i32 %conv, i32* %pulse_cnt, align 4, !dbg !5084
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5087, metadata !1756), !dbg !5088
  %min_err = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %optim, i32 0, i32 0, !dbg !5089
  store i32 1073741824, i32* %min_err, align 4, !dbg !5090
  %2 = load i16*, i16** %impulse_resp.addr, align 8, !dbg !5091
  %3 = load i16*, i16** %buf.addr, align 8, !dbg !5092
  %4 = load i32, i32* %pulse_cnt, align 4, !dbg !5093
  call void @get_fcb_param(%struct.FCBParam* %optim, i16* %2, i16* %3, i32 %4, i32 60), !dbg !5094
  %5 = load i32, i32* %index.addr, align 4, !dbg !5095
  %shr = ashr i32 %5, 1, !dbg !5097
  %idxprom1 = sext i32 %shr to i64, !dbg !5098
  %6 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5098
  %pitch_lag = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %6, i32 0, i32 5, !dbg !5099
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag, i64 0, i64 %idxprom1, !dbg !5098
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !5098
  %cmp = icmp slt i32 %7, 58, !dbg !5100
  br i1 %cmp, label %if.then, label %if.end, !dbg !5101

if.then:                                          ; preds = %entry
  %8 = load i16*, i16** %impulse_resp.addr, align 8, !dbg !5102
  %9 = load i16*, i16** %buf.addr, align 8, !dbg !5104
  %10 = load i32, i32* %pulse_cnt, align 4, !dbg !5105
  %11 = load i32, i32* %index.addr, align 4, !dbg !5106
  %shr4 = ashr i32 %11, 1, !dbg !5107
  %idxprom5 = sext i32 %shr4 to i64, !dbg !5108
  %12 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5108
  %pitch_lag6 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %12, i32 0, i32 5, !dbg !5109
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag6, i64 0, i64 %idxprom5, !dbg !5108
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !5108
  call void @get_fcb_param(%struct.FCBParam* %optim, i16* %8, i16* %9, i32 %10, i32 %13), !dbg !5110
  br label %if.end, !dbg !5111

if.end:                                           ; preds = %if.then, %entry
  %14 = load i16*, i16** %buf.addr, align 8, !dbg !5112
  %15 = bitcast i16* %14 to i8*, !dbg !5113
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 120, i32 2, i1 false), !dbg !5113
  store i32 0, i32* %i, align 4, !dbg !5114
  br label %for.cond, !dbg !5116

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %i, align 4, !dbg !5117
  %17 = load i32, i32* %pulse_cnt, align 4, !dbg !5120
  %cmp8 = icmp slt i32 %16, %17, !dbg !5121
  br i1 %cmp8, label %for.body, label %for.end, !dbg !5122

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !5123
  %idxprom10 = sext i32 %18 to i64, !dbg !5124
  %pulse_sign = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %optim, i32 0, i32 5, !dbg !5125
  %arrayidx11 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_sign, i64 0, i64 %idxprom10, !dbg !5124
  %19 = load i32, i32* %arrayidx11, align 4, !dbg !5124
  %conv12 = trunc i32 %19 to i16, !dbg !5124
  %20 = load i32, i32* %i, align 4, !dbg !5126
  %idxprom13 = sext i32 %20 to i64, !dbg !5127
  %pulse_pos = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %optim, i32 0, i32 4, !dbg !5128
  %arrayidx14 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos, i64 0, i64 %idxprom13, !dbg !5127
  %21 = load i32, i32* %arrayidx14, align 4, !dbg !5127
  %idxprom15 = sext i32 %21 to i64, !dbg !5129
  %22 = load i16*, i16** %buf.addr, align 8, !dbg !5129
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !5129
  store i16 %conv12, i16* %arrayidx16, align 2, !dbg !5130
  br label %for.inc, !dbg !5129

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !5131
  %inc = add nsw i32 %23, 1, !dbg !5131
  store i32 %inc, i32* %i, align 4, !dbg !5131
  br label %for.cond, !dbg !5133, !llvm.loop !5134

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %index.addr, align 4, !dbg !5136
  %idxprom17 = sext i32 %24 to i64, !dbg !5137
  %25 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5137
  %subframe = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %25, i32 0, i32 0, !dbg !5138
  %arrayidx18 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe, i64 0, i64 %idxprom17, !dbg !5137
  %26 = load i16*, i16** %buf.addr, align 8, !dbg !5139
  %27 = load i32, i32* %pulse_cnt, align 4, !dbg !5140
  call void @pack_fcb_param(%struct.G723_1_Subframe* %arrayidx18, %struct.FCBParam* %optim, i16* %26, i32 %27), !dbg !5141
  %dirac_train = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %optim, i32 0, i32 3, !dbg !5142
  %28 = load i32, i32* %dirac_train, align 4, !dbg !5142
  %tobool = icmp ne i32 %28, 0, !dbg !5144
  br i1 %tobool, label %if.then19, label %if.end24, !dbg !5145

if.then19:                                        ; preds = %for.end
  %29 = load i16*, i16** %buf.addr, align 8, !dbg !5146
  %30 = load i32, i32* %index.addr, align 4, !dbg !5147
  %shr20 = ashr i32 %30, 1, !dbg !5148
  %idxprom21 = sext i32 %shr20 to i64, !dbg !5149
  %31 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5149
  %pitch_lag22 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %31, i32 0, i32 5, !dbg !5150
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag22, i64 0, i64 %idxprom21, !dbg !5149
  %32 = load i32, i32* %arrayidx23, align 4, !dbg !5149
  call void @ff_g723_1_gen_dirac_train(i16* %29, i32 %32), !dbg !5151
  br label %if.end24, !dbg !5151

if.end24:                                         ; preds = %if.then19, %for.end
  ret void, !dbg !5152
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

declare void @av_free(i8*) #3

declare i32 @ff_alloc_packet2(%struct.AVCodecContext*, %struct.AVPacket*, i64, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @pack_bitstream(%struct.G723_1_ChannelContext* %p, %struct.AVPacket* %avpkt) #1 !dbg !5153 {
entry:
  %p.addr = alloca %struct.G723_1_ChannelContext*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %pb = alloca %struct.PutBitContext, align 8
  %info_bits = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  store %struct.G723_1_ChannelContext* %p, %struct.G723_1_ChannelContext** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.G723_1_ChannelContext** %p.addr, metadata !5156, metadata !1756), !dbg !5157
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !5158, metadata !1756), !dbg !5159
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %pb, metadata !5160, metadata !1756), !dbg !5171
  call void @llvm.dbg.declare(metadata i32* %info_bits, metadata !5172, metadata !1756), !dbg !5173
  store i32 0, i32* %info_bits, align 4, !dbg !5173
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5174, metadata !1756), !dbg !5175
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !5176, metadata !1756), !dbg !5177
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !5178
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !5179
  %1 = load i8*, i8** %data, align 8, !dbg !5179
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !5180
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !5181
  %3 = load i32, i32* %size, align 8, !dbg !5181
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %1, i32 %3), !dbg !5182
  %4 = load i32, i32* %info_bits, align 4, !dbg !5183
  call void @put_bits(%struct.PutBitContext* %pb, i32 2, i32 %4), !dbg !5184
  %5 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5185
  %lsp_index = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %5, i32 0, i32 4, !dbg !5186
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %lsp_index, i64 0, i64 2, !dbg !5185
  %6 = load i8, i8* %arrayidx, align 2, !dbg !5185
  %conv = zext i8 %6 to i32, !dbg !5185
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv), !dbg !5187
  %7 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5188
  %lsp_index1 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %7, i32 0, i32 4, !dbg !5189
  %arrayidx2 = getelementptr inbounds [3 x i8], [3 x i8]* %lsp_index1, i64 0, i64 1, !dbg !5188
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !5188
  %conv3 = zext i8 %8 to i32, !dbg !5188
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv3), !dbg !5190
  %9 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5191
  %lsp_index4 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %9, i32 0, i32 4, !dbg !5192
  %arrayidx5 = getelementptr inbounds [3 x i8], [3 x i8]* %lsp_index4, i64 0, i64 0, !dbg !5191
  %10 = load i8, i8* %arrayidx5, align 4, !dbg !5191
  %conv6 = zext i8 %10 to i32, !dbg !5191
  call void @put_bits(%struct.PutBitContext* %pb, i32 8, i32 %conv6), !dbg !5193
  %11 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5194
  %pitch_lag = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %11, i32 0, i32 5, !dbg !5195
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag, i64 0, i64 0, !dbg !5194
  %12 = load i32, i32* %arrayidx7, align 4, !dbg !5194
  %sub = sub nsw i32 %12, 18, !dbg !5196
  call void @put_bits(%struct.PutBitContext* %pb, i32 7, i32 %sub), !dbg !5197
  %13 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5198
  %subframe = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %13, i32 0, i32 0, !dbg !5199
  %arrayidx8 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe, i64 0, i64 1, !dbg !5198
  %ad_cb_lag = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx8, i32 0, i32 0, !dbg !5200
  %14 = load i32, i32* %ad_cb_lag, align 4, !dbg !5200
  call void @put_bits(%struct.PutBitContext* %pb, i32 2, i32 %14), !dbg !5201
  %15 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5202
  %pitch_lag9 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %15, i32 0, i32 5, !dbg !5203
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %pitch_lag9, i64 0, i64 1, !dbg !5202
  %16 = load i32, i32* %arrayidx10, align 4, !dbg !5202
  %sub11 = sub nsw i32 %16, 18, !dbg !5204
  call void @put_bits(%struct.PutBitContext* %pb, i32 7, i32 %sub11), !dbg !5205
  %17 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5206
  %subframe12 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %17, i32 0, i32 0, !dbg !5207
  %arrayidx13 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe12, i64 0, i64 3, !dbg !5206
  %ad_cb_lag14 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx13, i32 0, i32 0, !dbg !5208
  %18 = load i32, i32* %ad_cb_lag14, align 4, !dbg !5208
  call void @put_bits(%struct.PutBitContext* %pb, i32 2, i32 %18), !dbg !5209
  store i32 0, i32* %i, align 4, !dbg !5210
  br label %for.cond, !dbg !5212

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %i, align 4, !dbg !5213
  %cmp = icmp slt i32 %19, 4, !dbg !5216
  br i1 %cmp, label %for.body, label %for.end, !dbg !5217

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !5218
  %idxprom = sext i32 %20 to i64, !dbg !5220
  %21 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5220
  %subframe16 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %21, i32 0, i32 0, !dbg !5221
  %arrayidx17 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe16, i64 0, i64 %idxprom, !dbg !5220
  %ad_cb_gain = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx17, i32 0, i32 1, !dbg !5222
  %22 = load i32, i32* %ad_cb_gain, align 4, !dbg !5222
  %mul = mul nsw i32 %22, 24, !dbg !5223
  %23 = load i32, i32* %i, align 4, !dbg !5224
  %idxprom18 = sext i32 %23 to i64, !dbg !5225
  %24 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5225
  %subframe19 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %24, i32 0, i32 0, !dbg !5226
  %arrayidx20 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe19, i64 0, i64 %idxprom18, !dbg !5225
  %amp_index = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx20, i32 0, i32 5, !dbg !5227
  %25 = load i32, i32* %amp_index, align 4, !dbg !5227
  %add = add nsw i32 %mul, %25, !dbg !5228
  store i32 %add, i32* %temp, align 4, !dbg !5229
  %26 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5230
  %cur_rate = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %26, i32 0, i32 3, !dbg !5232
  %27 = load i32, i32* %cur_rate, align 4, !dbg !5232
  %cmp21 = icmp eq i32 %27, 0, !dbg !5233
  br i1 %cmp21, label %if.then, label %if.end, !dbg !5234

if.then:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !5235
  %idxprom23 = sext i32 %28 to i64, !dbg !5236
  %29 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5236
  %subframe24 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %29, i32 0, i32 0, !dbg !5237
  %arrayidx25 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe24, i64 0, i64 %idxprom23, !dbg !5236
  %dirac_train = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx25, i32 0, i32 2, !dbg !5238
  %30 = load i32, i32* %dirac_train, align 4, !dbg !5238
  %shl = shl i32 %30, 11, !dbg !5239
  %31 = load i32, i32* %temp, align 4, !dbg !5240
  %add26 = add nsw i32 %31, %shl, !dbg !5240
  store i32 %add26, i32* %temp, align 4, !dbg !5240
  br label %if.end, !dbg !5241

if.end:                                           ; preds = %if.then, %for.body
  %32 = load i32, i32* %temp, align 4, !dbg !5242
  call void @put_bits(%struct.PutBitContext* %pb, i32 12, i32 %32), !dbg !5243
  br label %for.inc, !dbg !5244

for.inc:                                          ; preds = %if.end
  %33 = load i32, i32* %i, align 4, !dbg !5245
  %inc = add nsw i32 %33, 1, !dbg !5245
  store i32 %inc, i32* %i, align 4, !dbg !5245
  br label %for.cond, !dbg !5247, !llvm.loop !5248

for.end:                                          ; preds = %for.cond
  %34 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5250
  %subframe27 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %34, i32 0, i32 0, !dbg !5251
  %arrayidx28 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe27, i64 0, i64 0, !dbg !5250
  %grid_index = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx28, i32 0, i32 4, !dbg !5252
  %35 = load i32, i32* %grid_index, align 4, !dbg !5252
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %35), !dbg !5253
  %36 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5254
  %subframe29 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %36, i32 0, i32 0, !dbg !5255
  %arrayidx30 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe29, i64 0, i64 1, !dbg !5254
  %grid_index31 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx30, i32 0, i32 4, !dbg !5256
  %37 = load i32, i32* %grid_index31, align 4, !dbg !5256
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %37), !dbg !5257
  %38 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5258
  %subframe32 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %38, i32 0, i32 0, !dbg !5259
  %arrayidx33 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe32, i64 0, i64 2, !dbg !5258
  %grid_index34 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx33, i32 0, i32 4, !dbg !5260
  %39 = load i32, i32* %grid_index34, align 4, !dbg !5260
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %39), !dbg !5261
  %40 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5262
  %subframe35 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %40, i32 0, i32 0, !dbg !5263
  %arrayidx36 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe35, i64 0, i64 3, !dbg !5262
  %grid_index37 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx36, i32 0, i32 4, !dbg !5264
  %41 = load i32, i32* %grid_index37, align 4, !dbg !5264
  call void @put_bits(%struct.PutBitContext* %pb, i32 1, i32 %41), !dbg !5265
  %42 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5266
  %cur_rate38 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %42, i32 0, i32 3, !dbg !5268
  %43 = load i32, i32* %cur_rate38, align 4, !dbg !5268
  %cmp39 = icmp eq i32 %43, 0, !dbg !5269
  br i1 %cmp39, label %if.then41, label %if.end88, !dbg !5270

if.then41:                                        ; preds = %for.end
  call void @skip_put_bits(%struct.PutBitContext* %pb, i32 1), !dbg !5271
  %44 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5273
  %subframe42 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %44, i32 0, i32 0, !dbg !5274
  %arrayidx43 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe42, i64 0, i64 0, !dbg !5273
  %pulse_pos = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx43, i32 0, i32 6, !dbg !5275
  %45 = load i32, i32* %pulse_pos, align 4, !dbg !5275
  %shr = ashr i32 %45, 16, !dbg !5276
  %mul44 = mul nsw i32 %shr, 810, !dbg !5277
  %46 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5278
  %subframe45 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %46, i32 0, i32 0, !dbg !5279
  %arrayidx46 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe45, i64 0, i64 1, !dbg !5278
  %pulse_pos47 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx46, i32 0, i32 6, !dbg !5280
  %47 = load i32, i32* %pulse_pos47, align 4, !dbg !5280
  %shr48 = ashr i32 %47, 14, !dbg !5281
  %mul49 = mul nsw i32 %shr48, 90, !dbg !5282
  %add50 = add nsw i32 %mul44, %mul49, !dbg !5283
  %48 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5284
  %subframe51 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %48, i32 0, i32 0, !dbg !5285
  %arrayidx52 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe51, i64 0, i64 2, !dbg !5284
  %pulse_pos53 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx52, i32 0, i32 6, !dbg !5286
  %49 = load i32, i32* %pulse_pos53, align 4, !dbg !5286
  %shr54 = ashr i32 %49, 16, !dbg !5287
  %mul55 = mul nsw i32 %shr54, 9, !dbg !5288
  %add56 = add nsw i32 %add50, %mul55, !dbg !5289
  %50 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5290
  %subframe57 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %50, i32 0, i32 0, !dbg !5291
  %arrayidx58 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe57, i64 0, i64 3, !dbg !5290
  %pulse_pos59 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx58, i32 0, i32 6, !dbg !5292
  %51 = load i32, i32* %pulse_pos59, align 4, !dbg !5292
  %shr60 = ashr i32 %51, 14, !dbg !5293
  %add61 = add nsw i32 %add56, %shr60, !dbg !5294
  store i32 %add61, i32* %temp, align 4, !dbg !5295
  %52 = load i32, i32* %temp, align 4, !dbg !5296
  call void @put_bits(%struct.PutBitContext* %pb, i32 13, i32 %52), !dbg !5297
  %53 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5298
  %subframe62 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %53, i32 0, i32 0, !dbg !5299
  %arrayidx63 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe62, i64 0, i64 0, !dbg !5298
  %pulse_pos64 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx63, i32 0, i32 6, !dbg !5300
  %54 = load i32, i32* %pulse_pos64, align 4, !dbg !5300
  %and = and i32 %54, 65535, !dbg !5301
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 %and), !dbg !5302
  %55 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5303
  %subframe65 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %55, i32 0, i32 0, !dbg !5304
  %arrayidx66 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe65, i64 0, i64 1, !dbg !5303
  %pulse_pos67 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx66, i32 0, i32 6, !dbg !5305
  %56 = load i32, i32* %pulse_pos67, align 4, !dbg !5305
  %and68 = and i32 %56, 16383, !dbg !5306
  call void @put_bits(%struct.PutBitContext* %pb, i32 14, i32 %and68), !dbg !5307
  %57 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5308
  %subframe69 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %57, i32 0, i32 0, !dbg !5309
  %arrayidx70 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe69, i64 0, i64 2, !dbg !5308
  %pulse_pos71 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx70, i32 0, i32 6, !dbg !5310
  %58 = load i32, i32* %pulse_pos71, align 4, !dbg !5310
  %and72 = and i32 %58, 65535, !dbg !5311
  call void @put_bits(%struct.PutBitContext* %pb, i32 16, i32 %and72), !dbg !5312
  %59 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5313
  %subframe73 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %59, i32 0, i32 0, !dbg !5314
  %arrayidx74 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe73, i64 0, i64 3, !dbg !5313
  %pulse_pos75 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx74, i32 0, i32 6, !dbg !5315
  %60 = load i32, i32* %pulse_pos75, align 4, !dbg !5315
  %and76 = and i32 %60, 16383, !dbg !5316
  call void @put_bits(%struct.PutBitContext* %pb, i32 14, i32 %and76), !dbg !5317
  %61 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5318
  %subframe77 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %61, i32 0, i32 0, !dbg !5319
  %arrayidx78 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe77, i64 0, i64 0, !dbg !5318
  %pulse_sign = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx78, i32 0, i32 3, !dbg !5320
  %62 = load i32, i32* %pulse_sign, align 4, !dbg !5320
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 %62), !dbg !5321
  %63 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5322
  %subframe79 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %63, i32 0, i32 0, !dbg !5323
  %arrayidx80 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe79, i64 0, i64 1, !dbg !5322
  %pulse_sign81 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx80, i32 0, i32 3, !dbg !5324
  %64 = load i32, i32* %pulse_sign81, align 4, !dbg !5324
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %64), !dbg !5325
  %65 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5326
  %subframe82 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %65, i32 0, i32 0, !dbg !5327
  %arrayidx83 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe82, i64 0, i64 2, !dbg !5326
  %pulse_sign84 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx83, i32 0, i32 3, !dbg !5328
  %66 = load i32, i32* %pulse_sign84, align 4, !dbg !5328
  call void @put_bits(%struct.PutBitContext* %pb, i32 6, i32 %66), !dbg !5329
  %67 = load %struct.G723_1_ChannelContext*, %struct.G723_1_ChannelContext** %p.addr, align 8, !dbg !5330
  %subframe85 = getelementptr inbounds %struct.G723_1_ChannelContext, %struct.G723_1_ChannelContext* %67, i32 0, i32 0, !dbg !5331
  %arrayidx86 = getelementptr inbounds [4 x %struct.G723_1_Subframe], [4 x %struct.G723_1_Subframe]* %subframe85, i64 0, i64 3, !dbg !5330
  %pulse_sign87 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %arrayidx86, i32 0, i32 3, !dbg !5332
  %68 = load i32, i32* %pulse_sign87, align 4, !dbg !5332
  call void @put_bits(%struct.PutBitContext* %pb, i32 5, i32 %68), !dbg !5333
  br label %if.end88, !dbg !5334

if.end88:                                         ; preds = %if.then41, %for.end
  call void @flush_put_bits(%struct.PutBitContext* %pb), !dbg !5335
  %69 = load i32, i32* %info_bits, align 4, !dbg !5336
  %idxprom89 = sext i32 %69 to i64, !dbg !5337
  %arrayidx90 = getelementptr inbounds [4 x i8], [4 x i8]* @frame_size, i64 0, i64 %idxprom89, !dbg !5337
  %70 = load i8, i8* %arrayidx90, align 1, !dbg !5337
  %conv91 = zext i8 %70 to i32, !dbg !5337
  ret i32 %conv91, !dbg !5338
}

; Function Attrs: nounwind uwtable
define internal void @comp_autocorr(i16* %buf, i16* %autocorr) #1 !dbg !5339 {
entry:
  %retval.i56 = alloca i32, align 4
  %a.addr.i57 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i57, metadata !2355, metadata !1756), !dbg !5340
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !5347
  %buf.addr = alloca i16*, align 8
  %autocorr.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  %scale = alloca i32, align 4
  %temp = alloca i32, align 4
  %vector = alloca [180 x i16], align 16
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !5349, metadata !1756), !dbg !5350
  store i16* %autocorr, i16** %autocorr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %autocorr.addr, metadata !5351, metadata !1756), !dbg !5352
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5353, metadata !1756), !dbg !5354
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !5355, metadata !1756), !dbg !5356
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !5357, metadata !1756), !dbg !5358
  call void @llvm.dbg.declare(metadata [180 x i16]* %vector, metadata !5359, metadata !1756), !dbg !5361
  %arraydecay = getelementptr inbounds [180 x i16], [180 x i16]* %vector, i32 0, i32 0, !dbg !5362
  %0 = load i16*, i16** %buf.addr, align 8, !dbg !5363
  %call = call i32 @ff_g723_1_scale_vector(i16* %arraydecay, i16* %0, i32 180), !dbg !5364
  store i32 0, i32* %i, align 4, !dbg !5365
  br label %for.cond, !dbg !5367

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !5368
  %cmp = icmp slt i32 %1, 180, !dbg !5371
  br i1 %cmp, label %for.body, label %for.end, !dbg !5372

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !5373
  %idxprom = sext i32 %2 to i64, !dbg !5374
  %arrayidx = getelementptr inbounds [180 x i16], [180 x i16]* %vector, i64 0, i64 %idxprom, !dbg !5374
  %3 = load i16, i16* %arrayidx, align 2, !dbg !5374
  %conv = sext i16 %3 to i32, !dbg !5374
  %4 = load i32, i32* %i, align 4, !dbg !5375
  %idxprom1 = sext i32 %4 to i64, !dbg !5376
  %arrayidx2 = getelementptr inbounds [180 x i16], [180 x i16]* @hamming_window, i64 0, i64 %idxprom1, !dbg !5376
  %5 = load i16, i16* %arrayidx2, align 2, !dbg !5376
  %conv3 = sext i16 %5 to i32, !dbg !5376
  %mul = mul nsw i32 %conv, %conv3, !dbg !5377
  %add = add nsw i32 %mul, 16384, !dbg !5378
  %shr = ashr i32 %add, 15, !dbg !5379
  %conv4 = trunc i32 %shr to i16, !dbg !5380
  %6 = load i32, i32* %i, align 4, !dbg !5381
  %idxprom5 = sext i32 %6 to i64, !dbg !5382
  %arrayidx6 = getelementptr inbounds [180 x i16], [180 x i16]* %vector, i64 0, i64 %idxprom5, !dbg !5382
  store i16 %conv4, i16* %arrayidx6, align 2, !dbg !5383
  br label %for.inc, !dbg !5382

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !5384
  %inc = add nsw i32 %7, 1, !dbg !5384
  store i32 %inc, i32* %i, align 4, !dbg !5384
  br label %for.cond, !dbg !5386, !llvm.loop !5387

for.end:                                          ; preds = %for.cond
  %arraydecay7 = getelementptr inbounds [180 x i16], [180 x i16]* %vector, i32 0, i32 0, !dbg !5389
  %arraydecay8 = getelementptr inbounds [180 x i16], [180 x i16]* %vector, i32 0, i32 0, !dbg !5390
  %call9 = call i64 @ff_dot_product(i16* %arraydecay7, i16* %arraydecay8, i32 180), !dbg !5391
  %conv10 = trunc i64 %call9 to i32, !dbg !5391
  store i32 %conv10, i32* %temp, align 4, !dbg !5392
  %8 = load i32, i32* %temp, align 4, !dbg !5393
  %shr11 = ashr i32 %8, 10, !dbg !5394
  %9 = load i32, i32* %temp, align 4, !dbg !5395
  %add12 = add nsw i32 %9, %shr11, !dbg !5395
  store i32 %add12, i32* %temp, align 4, !dbg !5395
  %10 = load i32, i32* %temp, align 4, !dbg !5396
  %call13 = call i32 @ff_g723_1_normalize_bits(i32 %10, i32 31), !dbg !5397
  store i32 %call13, i32* %scale, align 4, !dbg !5398
  %11 = load i32, i32* %temp, align 4, !dbg !5399
  %12 = load i32, i32* %scale, align 4, !dbg !5400
  %shl = shl i32 %11, %12, !dbg !5401
  %conv14 = sext i32 %shl to i64, !dbg !5402
  %add15 = add nsw i64 %conv14, 32768, !dbg !5403
  store i64 %add15, i64* %a.addr.i, align 8, !dbg !5404
  %13 = load i64, i64* %a.addr.i, align 8, !dbg !5405
  %add.i = add nsw i64 %13, 2147483648, !dbg !5406
  %and.i = and i64 %add.i, -4294967296, !dbg !5407
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !5407
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5408

if.then.i:                                        ; preds = %for.end
  %14 = load i64, i64* %a.addr.i, align 8, !dbg !5409
  %shr.i = ashr i64 %14, 63, !dbg !5410
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !5411
  %conv.i = trunc i64 %xor.i to i32, !dbg !5412
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !5413
  br label %av_clipl_int32_c.exit, !dbg !5413

if.else.i:                                        ; preds = %for.end
  %15 = load i64, i64* %a.addr.i, align 8, !dbg !5414
  %conv1.i = trunc i64 %15 to i32, !dbg !5415
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !5416
  br label %av_clipl_int32_c.exit, !dbg !5416

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %16 = load i32, i32* %retval.i, align 4, !dbg !5417
  %shr17 = ashr i32 %16, 16, !dbg !5418
  %conv18 = trunc i32 %shr17 to i16, !dbg !5404
  %17 = load i16*, i16** %autocorr.addr, align 8, !dbg !5419
  %arrayidx19 = getelementptr inbounds i16, i16* %17, i64 0, !dbg !5419
  store i16 %conv18, i16* %arrayidx19, align 2, !dbg !5420
  %18 = load i16*, i16** %autocorr.addr, align 8, !dbg !5421
  %arrayidx20 = getelementptr inbounds i16, i16* %18, i64 0, !dbg !5421
  %19 = load i16, i16* %arrayidx20, align 2, !dbg !5421
  %tobool = icmp ne i16 %19, 0, !dbg !5421
  br i1 %tobool, label %if.else, label %if.then, !dbg !5422

if.then:                                          ; preds = %av_clipl_int32_c.exit
  %20 = load i16*, i16** %autocorr.addr, align 8, !dbg !5423
  %add.ptr = getelementptr inbounds i16, i16* %20, i64 1, !dbg !5425
  %21 = bitcast i16* %add.ptr to i8*, !dbg !5426
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 20, i32 2, i1 false), !dbg !5426
  br label %if.end, !dbg !5427

if.else:                                          ; preds = %av_clipl_int32_c.exit
  store i32 1, i32* %i, align 4, !dbg !5428
  br label %for.cond21, !dbg !5429

for.cond21:                                       ; preds = %for.inc53, %if.else
  %22 = load i32, i32* %i, align 4, !dbg !5430
  %cmp22 = icmp sle i32 %22, 10, !dbg !5432
  br i1 %cmp22, label %for.body24, label %for.end55, !dbg !5433

for.body24:                                       ; preds = %for.cond21
  %arraydecay25 = getelementptr inbounds [180 x i16], [180 x i16]* %vector, i32 0, i32 0, !dbg !5434
  %arraydecay26 = getelementptr inbounds [180 x i16], [180 x i16]* %vector, i32 0, i32 0, !dbg !5435
  %23 = load i32, i32* %i, align 4, !dbg !5436
  %idx.ext = sext i32 %23 to i64, !dbg !5437
  %add.ptr27 = getelementptr inbounds i16, i16* %arraydecay26, i64 %idx.ext, !dbg !5437
  %24 = load i32, i32* %i, align 4, !dbg !5438
  %sub = sub nsw i32 180, %24, !dbg !5439
  %call28 = call i64 @ff_dot_product(i16* %arraydecay25, i16* %add.ptr27, i32 %sub), !dbg !5440
  %conv29 = trunc i64 %call28 to i32, !dbg !5440
  store i32 %conv29, i32* %temp, align 4, !dbg !5441
  %25 = load i32, i32* %temp, align 4, !dbg !5442
  %26 = load i32, i32* %scale, align 4, !dbg !5443
  %shl30 = shl i32 %25, %26, !dbg !5444
  %shr31 = ashr i32 %shl30, 16, !dbg !5445
  %27 = load i32, i32* %i, align 4, !dbg !5446
  %sub32 = sub nsw i32 %27, 1, !dbg !5447
  %idxprom33 = sext i32 %sub32 to i64, !dbg !5448
  %arrayidx34 = getelementptr inbounds [10 x i16], [10 x i16]* @binomial_window, i64 0, i64 %idxprom33, !dbg !5448
  %28 = load i16, i16* %arrayidx34, align 2, !dbg !5448
  %conv35 = sext i16 %28 to i32, !dbg !5449
  %mul36 = mul nsw i32 %shr31, %conv35, !dbg !5450
  %mul37 = mul nsw i32 %mul36, 2, !dbg !5451
  %29 = load i32, i32* %temp, align 4, !dbg !5452
  %30 = load i32, i32* %scale, align 4, !dbg !5453
  %shl38 = shl i32 %29, %30, !dbg !5454
  %and = and i32 %shl38, 65535, !dbg !5455
  %31 = load i32, i32* %i, align 4, !dbg !5456
  %sub39 = sub nsw i32 %31, 1, !dbg !5457
  %idxprom40 = sext i32 %sub39 to i64, !dbg !5458
  %arrayidx41 = getelementptr inbounds [10 x i16], [10 x i16]* @binomial_window, i64 0, i64 %idxprom40, !dbg !5458
  %32 = load i16, i16* %arrayidx41, align 2, !dbg !5458
  %conv42 = sext i16 %32 to i32, !dbg !5459
  %mul43 = mul nsw i32 %and, %conv42, !dbg !5460
  %shr44 = ashr i32 %mul43, 15, !dbg !5461
  %add45 = add nsw i32 %mul37, %shr44, !dbg !5462
  store i32 %add45, i32* %temp, align 4, !dbg !5463
  %33 = load i32, i32* %temp, align 4, !dbg !5464
  %conv46 = sext i32 %33 to i64, !dbg !5465
  %add47 = add nsw i64 %conv46, 32768, !dbg !5466
  store i64 %add47, i64* %a.addr.i57, align 8, !dbg !5467
  %34 = load i64, i64* %a.addr.i57, align 8, !dbg !5468
  %add.i58 = add nsw i64 %34, 2147483648, !dbg !5469
  %and.i59 = and i64 %add.i58, -4294967296, !dbg !5470
  %tobool.i60 = icmp ne i64 %and.i59, 0, !dbg !5470
  br i1 %tobool.i60, label %if.then.i64, label %if.else.i66, !dbg !5471

if.then.i64:                                      ; preds = %for.body24
  %35 = load i64, i64* %a.addr.i57, align 8, !dbg !5472
  %shr.i61 = ashr i64 %35, 63, !dbg !5473
  %xor.i62 = xor i64 %shr.i61, 2147483647, !dbg !5474
  %conv.i63 = trunc i64 %xor.i62 to i32, !dbg !5475
  store i32 %conv.i63, i32* %retval.i56, align 4, !dbg !5476
  br label %av_clipl_int32_c.exit67, !dbg !5476

if.else.i66:                                      ; preds = %for.body24
  %36 = load i64, i64* %a.addr.i57, align 8, !dbg !5477
  %conv1.i65 = trunc i64 %36 to i32, !dbg !5478
  store i32 %conv1.i65, i32* %retval.i56, align 4, !dbg !5479
  br label %av_clipl_int32_c.exit67, !dbg !5479

av_clipl_int32_c.exit67:                          ; preds = %if.then.i64, %if.else.i66
  %37 = load i32, i32* %retval.i56, align 4, !dbg !5480
  %shr49 = ashr i32 %37, 16, !dbg !5481
  %conv50 = trunc i32 %shr49 to i16, !dbg !5467
  %38 = load i32, i32* %i, align 4, !dbg !5482
  %idxprom51 = sext i32 %38 to i64, !dbg !5483
  %39 = load i16*, i16** %autocorr.addr, align 8, !dbg !5483
  %arrayidx52 = getelementptr inbounds i16, i16* %39, i64 %idxprom51, !dbg !5483
  store i16 %conv50, i16* %arrayidx52, align 2, !dbg !5484
  br label %for.inc53, !dbg !5485

for.inc53:                                        ; preds = %av_clipl_int32_c.exit67
  %40 = load i32, i32* %i, align 4, !dbg !5486
  %inc54 = add nsw i32 %40, 1, !dbg !5486
  store i32 %inc54, i32* %i, align 4, !dbg !5486
  br label %for.cond21, !dbg !5488, !llvm.loop !5489

for.end55:                                        ; preds = %for.cond21
  br label %if.end

if.end:                                           ; preds = %for.end55, %if.then
  ret void, !dbg !5491
}

; Function Attrs: nounwind uwtable
define internal void @levinson_durbin(i16* %lpc, i16* %autocorr, i16 signext %error) #1 !dbg !5492 {
entry:
  %retval.i92 = alloca i32, align 4
  %a.addr.i93 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i93, metadata !2355, metadata !1756), !dbg !5495
  %retval.i80 = alloca i32, align 4
  %a.addr.i81 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i81, metadata !2355, metadata !1756), !dbg !5500
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !5505
  %lpc.addr = alloca i16*, align 8
  %autocorr.addr = alloca i16*, align 8
  %error.addr = alloca i16, align 2
  %vector = alloca [10 x i16], align 16
  %partial_corr = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %temp = alloca i32, align 4
  store i16* %lpc, i16** %lpc.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lpc.addr, metadata !5507, metadata !1756), !dbg !5508
  store i16* %autocorr, i16** %autocorr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %autocorr.addr, metadata !5509, metadata !1756), !dbg !5510
  store i16 %error, i16* %error.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %error.addr, metadata !5511, metadata !1756), !dbg !5512
  call void @llvm.dbg.declare(metadata [10 x i16]* %vector, metadata !5513, metadata !1756), !dbg !5514
  call void @llvm.dbg.declare(metadata i16* %partial_corr, metadata !5515, metadata !1756), !dbg !5516
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5517, metadata !1756), !dbg !5518
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5519, metadata !1756), !dbg !5520
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !5521, metadata !1756), !dbg !5522
  %0 = load i16*, i16** %lpc.addr, align 8, !dbg !5523
  %1 = bitcast i16* %0 to i8*, !dbg !5524
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 20, i32 2, i1 false), !dbg !5524
  store i32 0, i32* %i, align 4, !dbg !5525
  br label %for.cond, !dbg !5526

for.cond:                                         ; preds = %for.inc77, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5527
  %cmp = icmp slt i32 %2, 10, !dbg !5529
  br i1 %cmp, label %for.body, label %for.end79, !dbg !5530

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %temp, align 4, !dbg !5531
  store i32 0, i32* %j, align 4, !dbg !5532
  br label %for.cond1, !dbg !5534

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !5535
  %4 = load i32, i32* %i, align 4, !dbg !5538
  %cmp2 = icmp slt i32 %3, %4, !dbg !5539
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !5540

for.body3:                                        ; preds = %for.cond1
  %5 = load i32, i32* %j, align 4, !dbg !5541
  %idxprom = sext i32 %5 to i64, !dbg !5542
  %6 = load i16*, i16** %lpc.addr, align 8, !dbg !5542
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !5542
  %7 = load i16, i16* %arrayidx, align 2, !dbg !5542
  %conv = sext i16 %7 to i32, !dbg !5542
  %8 = load i32, i32* %i, align 4, !dbg !5543
  %9 = load i32, i32* %j, align 4, !dbg !5544
  %sub = sub nsw i32 %8, %9, !dbg !5545
  %sub4 = sub nsw i32 %sub, 1, !dbg !5546
  %idxprom5 = sext i32 %sub4 to i64, !dbg !5547
  %10 = load i16*, i16** %autocorr.addr, align 8, !dbg !5547
  %arrayidx6 = getelementptr inbounds i16, i16* %10, i64 %idxprom5, !dbg !5547
  %11 = load i16, i16* %arrayidx6, align 2, !dbg !5547
  %conv7 = sext i16 %11 to i32, !dbg !5547
  %mul = mul nsw i32 %conv, %conv7, !dbg !5548
  %12 = load i32, i32* %temp, align 4, !dbg !5549
  %sub8 = sub nsw i32 %12, %mul, !dbg !5549
  store i32 %sub8, i32* %temp, align 4, !dbg !5549
  br label %for.inc, !dbg !5550

for.inc:                                          ; preds = %for.body3
  %13 = load i32, i32* %j, align 4, !dbg !5551
  %inc = add nsw i32 %13, 1, !dbg !5551
  store i32 %inc, i32* %j, align 4, !dbg !5551
  br label %for.cond1, !dbg !5553, !llvm.loop !5554

for.end:                                          ; preds = %for.cond1
  %14 = load i32, i32* %i, align 4, !dbg !5556
  %idxprom9 = sext i32 %14 to i64, !dbg !5557
  %15 = load i16*, i16** %autocorr.addr, align 8, !dbg !5557
  %arrayidx10 = getelementptr inbounds i16, i16* %15, i64 %idxprom9, !dbg !5557
  %16 = load i16, i16* %arrayidx10, align 2, !dbg !5557
  %conv11 = sext i16 %16 to i32, !dbg !5557
  %shl = shl i32 %conv11, 13, !dbg !5558
  %17 = load i32, i32* %temp, align 4, !dbg !5559
  %add = add nsw i32 %shl, %17, !dbg !5560
  %shl12 = shl i32 %add, 3, !dbg !5561
  store i32 %shl12, i32* %temp, align 4, !dbg !5562
  %18 = load i32, i32* %temp, align 4, !dbg !5563
  %cmp13 = icmp sge i32 %18, 0, !dbg !5565
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !5566

cond.true:                                        ; preds = %for.end
  %19 = load i32, i32* %temp, align 4, !dbg !5567
  br label %cond.end, !dbg !5569

cond.false:                                       ; preds = %for.end
  %20 = load i32, i32* %temp, align 4, !dbg !5570
  %sub15 = sub nsw i32 0, %20, !dbg !5572
  br label %cond.end, !dbg !5573

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ %sub15, %cond.false ], !dbg !5574
  %21 = load i16, i16* %error.addr, align 2, !dbg !5576
  %conv16 = sext i16 %21 to i32, !dbg !5576
  %shl17 = shl i32 %conv16, 16, !dbg !5577
  %cmp18 = icmp sge i32 %cond, %shl17, !dbg !5578
  br i1 %cmp18, label %if.then, label %if.end, !dbg !5579

if.then:                                          ; preds = %cond.end
  br label %for.end79, !dbg !5580

if.end:                                           ; preds = %cond.end
  %22 = load i32, i32* %temp, align 4, !dbg !5581
  %23 = load i16, i16* %error.addr, align 2, !dbg !5582
  %conv20 = sext i16 %23 to i32, !dbg !5582
  %shl21 = shl i32 %conv20, 1, !dbg !5583
  %div = sdiv i32 %22, %shl21, !dbg !5584
  %conv22 = trunc i32 %div to i16, !dbg !5581
  store i16 %conv22, i16* %partial_corr, align 2, !dbg !5585
  %24 = load i16, i16* %partial_corr, align 2, !dbg !5586
  %conv23 = sext i16 %24 to i32, !dbg !5586
  %shl24 = shl i32 %conv23, 14, !dbg !5587
  %conv25 = sext i32 %shl24 to i64, !dbg !5588
  %add26 = add nsw i64 %conv25, 32768, !dbg !5589
  store i64 %add26, i64* %a.addr.i, align 8, !dbg !5590
  %25 = load i64, i64* %a.addr.i, align 8, !dbg !5591
  %add.i = add nsw i64 %25, 2147483648, !dbg !5592
  %and.i = and i64 %add.i, -4294967296, !dbg !5593
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !5593
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5594

if.then.i:                                        ; preds = %if.end
  %26 = load i64, i64* %a.addr.i, align 8, !dbg !5595
  %shr.i = ashr i64 %26, 63, !dbg !5596
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !5597
  %conv.i = trunc i64 %xor.i to i32, !dbg !5598
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !5599
  br label %av_clipl_int32_c.exit, !dbg !5599

if.else.i:                                        ; preds = %if.end
  %27 = load i64, i64* %a.addr.i, align 8, !dbg !5600
  %conv1.i = trunc i64 %27 to i32, !dbg !5601
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !5602
  br label %av_clipl_int32_c.exit, !dbg !5602

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %28 = load i32, i32* %retval.i, align 4, !dbg !5603
  %shr = ashr i32 %28, 16, !dbg !5604
  %conv27 = trunc i32 %shr to i16, !dbg !5590
  %29 = load i32, i32* %i, align 4, !dbg !5605
  %idxprom28 = sext i32 %29 to i64, !dbg !5606
  %30 = load i16*, i16** %lpc.addr, align 8, !dbg !5606
  %arrayidx29 = getelementptr inbounds i16, i16* %30, i64 %idxprom28, !dbg !5606
  store i16 %conv27, i16* %arrayidx29, align 2, !dbg !5607
  %31 = load i32, i32* %temp, align 4, !dbg !5608
  %shr30 = ashr i32 %31, 16, !dbg !5609
  %32 = load i16, i16* %partial_corr, align 2, !dbg !5610
  %conv31 = sext i16 %32 to i32, !dbg !5611
  %mul32 = mul nsw i32 %shr30, %conv31, !dbg !5612
  %mul33 = mul nsw i32 %mul32, 2, !dbg !5613
  %33 = load i32, i32* %temp, align 4, !dbg !5614
  %and = and i32 %33, 65535, !dbg !5615
  %34 = load i16, i16* %partial_corr, align 2, !dbg !5616
  %conv34 = sext i16 %34 to i32, !dbg !5617
  %mul35 = mul nsw i32 %and, %conv34, !dbg !5618
  %shr36 = ashr i32 %mul35, 15, !dbg !5619
  %add37 = add nsw i32 %mul33, %shr36, !dbg !5620
  store i32 %add37, i32* %temp, align 4, !dbg !5621
  %35 = load i16, i16* %error.addr, align 2, !dbg !5622
  %conv38 = sext i16 %35 to i32, !dbg !5622
  %shl39 = shl i32 %conv38, 16, !dbg !5623
  %conv40 = sext i32 %shl39 to i64, !dbg !5624
  %36 = load i32, i32* %temp, align 4, !dbg !5625
  %conv41 = sext i32 %36 to i64, !dbg !5625
  %sub42 = sub nsw i64 %conv40, %conv41, !dbg !5626
  %add43 = add nsw i64 %sub42, 32768, !dbg !5627
  store i64 %add43, i64* %a.addr.i93, align 8, !dbg !5628
  %37 = load i64, i64* %a.addr.i93, align 8, !dbg !5629
  %add.i94 = add nsw i64 %37, 2147483648, !dbg !5630
  %and.i95 = and i64 %add.i94, -4294967296, !dbg !5631
  %tobool.i96 = icmp ne i64 %and.i95, 0, !dbg !5631
  br i1 %tobool.i96, label %if.then.i100, label %if.else.i102, !dbg !5632

if.then.i100:                                     ; preds = %av_clipl_int32_c.exit
  %38 = load i64, i64* %a.addr.i93, align 8, !dbg !5633
  %shr.i97 = ashr i64 %38, 63, !dbg !5634
  %xor.i98 = xor i64 %shr.i97, 2147483647, !dbg !5635
  %conv.i99 = trunc i64 %xor.i98 to i32, !dbg !5636
  store i32 %conv.i99, i32* %retval.i92, align 4, !dbg !5637
  br label %av_clipl_int32_c.exit103, !dbg !5637

if.else.i102:                                     ; preds = %av_clipl_int32_c.exit
  %39 = load i64, i64* %a.addr.i93, align 8, !dbg !5638
  %conv1.i101 = trunc i64 %39 to i32, !dbg !5639
  store i32 %conv1.i101, i32* %retval.i92, align 4, !dbg !5640
  br label %av_clipl_int32_c.exit103, !dbg !5640

av_clipl_int32_c.exit103:                         ; preds = %if.then.i100, %if.else.i102
  %40 = load i32, i32* %retval.i92, align 4, !dbg !5641
  %shr45 = ashr i32 %40, 16, !dbg !5642
  %conv46 = trunc i32 %shr45 to i16, !dbg !5628
  store i16 %conv46, i16* %error.addr, align 2, !dbg !5643
  %arraydecay = getelementptr inbounds [10 x i16], [10 x i16]* %vector, i32 0, i32 0, !dbg !5644
  %41 = bitcast i16* %arraydecay to i8*, !dbg !5644
  %42 = load i16*, i16** %lpc.addr, align 8, !dbg !5645
  %43 = bitcast i16* %42 to i8*, !dbg !5644
  %44 = load i32, i32* %i, align 4, !dbg !5646
  %conv47 = sext i32 %44 to i64, !dbg !5646
  %mul48 = mul i64 %conv47, 2, !dbg !5647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %43, i64 %mul48, i32 2, i1 false), !dbg !5644
  store i32 0, i32* %j, align 4, !dbg !5648
  br label %for.cond49, !dbg !5649

for.cond49:                                       ; preds = %for.inc74, %av_clipl_int32_c.exit103
  %45 = load i32, i32* %j, align 4, !dbg !5650
  %46 = load i32, i32* %i, align 4, !dbg !5652
  %cmp50 = icmp slt i32 %45, %46, !dbg !5653
  br i1 %cmp50, label %for.body52, label %for.end76, !dbg !5654

for.body52:                                       ; preds = %for.cond49
  %47 = load i16, i16* %partial_corr, align 2, !dbg !5655
  %conv53 = sext i16 %47 to i32, !dbg !5655
  %48 = load i32, i32* %i, align 4, !dbg !5656
  %49 = load i32, i32* %j, align 4, !dbg !5657
  %sub54 = sub nsw i32 %48, %49, !dbg !5658
  %sub55 = sub nsw i32 %sub54, 1, !dbg !5659
  %idxprom56 = sext i32 %sub55 to i64, !dbg !5660
  %arrayidx57 = getelementptr inbounds [10 x i16], [10 x i16]* %vector, i64 0, i64 %idxprom56, !dbg !5660
  %50 = load i16, i16* %arrayidx57, align 2, !dbg !5660
  %conv58 = sext i16 %50 to i32, !dbg !5660
  %mul59 = mul nsw i32 %conv53, %conv58, !dbg !5661
  %shl60 = shl i32 %mul59, 1, !dbg !5662
  store i32 %shl60, i32* %temp, align 4, !dbg !5663
  %51 = load i32, i32* %j, align 4, !dbg !5664
  %idxprom61 = sext i32 %51 to i64, !dbg !5665
  %52 = load i16*, i16** %lpc.addr, align 8, !dbg !5665
  %arrayidx62 = getelementptr inbounds i16, i16* %52, i64 %idxprom61, !dbg !5665
  %53 = load i16, i16* %arrayidx62, align 2, !dbg !5665
  %conv63 = sext i16 %53 to i32, !dbg !5665
  %shl64 = shl i32 %conv63, 16, !dbg !5666
  %conv65 = sext i32 %shl64 to i64, !dbg !5667
  %54 = load i32, i32* %temp, align 4, !dbg !5668
  %conv66 = sext i32 %54 to i64, !dbg !5668
  %sub67 = sub nsw i64 %conv65, %conv66, !dbg !5669
  %add68 = add nsw i64 %sub67, 32768, !dbg !5670
  store i64 %add68, i64* %a.addr.i81, align 8, !dbg !5671
  %55 = load i64, i64* %a.addr.i81, align 8, !dbg !5672
  %add.i82 = add nsw i64 %55, 2147483648, !dbg !5673
  %and.i83 = and i64 %add.i82, -4294967296, !dbg !5674
  %tobool.i84 = icmp ne i64 %and.i83, 0, !dbg !5674
  br i1 %tobool.i84, label %if.then.i88, label %if.else.i90, !dbg !5675

if.then.i88:                                      ; preds = %for.body52
  %56 = load i64, i64* %a.addr.i81, align 8, !dbg !5676
  %shr.i85 = ashr i64 %56, 63, !dbg !5677
  %xor.i86 = xor i64 %shr.i85, 2147483647, !dbg !5678
  %conv.i87 = trunc i64 %xor.i86 to i32, !dbg !5679
  store i32 %conv.i87, i32* %retval.i80, align 4, !dbg !5680
  br label %av_clipl_int32_c.exit91, !dbg !5680

if.else.i90:                                      ; preds = %for.body52
  %57 = load i64, i64* %a.addr.i81, align 8, !dbg !5681
  %conv1.i89 = trunc i64 %57 to i32, !dbg !5682
  store i32 %conv1.i89, i32* %retval.i80, align 4, !dbg !5683
  br label %av_clipl_int32_c.exit91, !dbg !5683

av_clipl_int32_c.exit91:                          ; preds = %if.then.i88, %if.else.i90
  %58 = load i32, i32* %retval.i80, align 4, !dbg !5684
  %shr70 = ashr i32 %58, 16, !dbg !5685
  %conv71 = trunc i32 %shr70 to i16, !dbg !5671
  %59 = load i32, i32* %j, align 4, !dbg !5686
  %idxprom72 = sext i32 %59 to i64, !dbg !5687
  %60 = load i16*, i16** %lpc.addr, align 8, !dbg !5687
  %arrayidx73 = getelementptr inbounds i16, i16* %60, i64 %idxprom72, !dbg !5687
  store i16 %conv71, i16* %arrayidx73, align 2, !dbg !5688
  br label %for.inc74, !dbg !5689

for.inc74:                                        ; preds = %av_clipl_int32_c.exit91
  %61 = load i32, i32* %j, align 4, !dbg !5690
  %inc75 = add nsw i32 %61, 1, !dbg !5690
  store i32 %inc75, i32* %j, align 4, !dbg !5690
  br label %for.cond49, !dbg !5692, !llvm.loop !5693

for.end76:                                        ; preds = %for.cond49
  br label %for.inc77, !dbg !5695

for.inc77:                                        ; preds = %for.end76
  %62 = load i32, i32* %i, align 4, !dbg !5696
  %inc78 = add nsw i32 %62, 1, !dbg !5696
  store i32 %inc78, i32* %i, align 4, !dbg !5696
  br label %for.cond, !dbg !5698, !llvm.loop !5699

for.end79:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5701
}

declare i64 @ff_dot_product(i16*, i16*, i32) #3

declare i32 @ff_g723_1_normalize_bits(i32, i32) #3

declare i32 @ff_g723_1_dot_product(i16*, i16*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @iir_filter(i16* %fir_coef, i16* %iir_coef, i16* %src, i16* %dest) #1 !dbg !5702 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !5705
  %fir_coef.addr = alloca i16*, align 8
  %iir_coef.addr = alloca i16*, align 8
  %src.addr = alloca i16*, align 8
  %dest.addr = alloca i16*, align 8
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %filter = alloca i64, align 8
  store i16* %fir_coef, i16** %fir_coef.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %fir_coef.addr, metadata !5710, metadata !1756), !dbg !5711
  store i16* %iir_coef, i16** %iir_coef.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %iir_coef.addr, metadata !5712, metadata !1756), !dbg !5713
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !5714, metadata !1756), !dbg !5715
  store i16* %dest, i16** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dest.addr, metadata !5716, metadata !1756), !dbg !5717
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5718, metadata !1756), !dbg !5719
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5720, metadata !1756), !dbg !5721
  store i32 0, i32* %m, align 4, !dbg !5722
  br label %for.cond, !dbg !5723

for.cond:                                         ; preds = %for.inc29, %entry
  %0 = load i32, i32* %m, align 4, !dbg !5724
  %cmp = icmp slt i32 %0, 60, !dbg !5726
  br i1 %cmp, label %for.body, label %for.end31, !dbg !5727

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %filter, metadata !5728, metadata !1756), !dbg !5729
  store i64 0, i64* %filter, align 8, !dbg !5729
  store i32 1, i32* %n, align 4, !dbg !5730
  br label %for.cond1, !dbg !5732

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %n, align 4, !dbg !5733
  %cmp2 = icmp sle i32 %1, 10, !dbg !5736
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !5737

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %n, align 4, !dbg !5738
  %sub = sub nsw i32 %2, 1, !dbg !5740
  %idxprom = sext i32 %sub to i64, !dbg !5741
  %3 = load i16*, i16** %fir_coef.addr, align 8, !dbg !5741
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !5741
  %4 = load i16, i16* %arrayidx, align 2, !dbg !5741
  %conv = sext i16 %4 to i32, !dbg !5741
  %5 = load i32, i32* %m, align 4, !dbg !5742
  %6 = load i32, i32* %n, align 4, !dbg !5743
  %sub4 = sub nsw i32 %5, %6, !dbg !5744
  %idxprom5 = sext i32 %sub4 to i64, !dbg !5745
  %7 = load i16*, i16** %src.addr, align 8, !dbg !5745
  %arrayidx6 = getelementptr inbounds i16, i16* %7, i64 %idxprom5, !dbg !5745
  %8 = load i16, i16* %arrayidx6, align 2, !dbg !5745
  %conv7 = sext i16 %8 to i32, !dbg !5745
  %mul = mul nsw i32 %conv, %conv7, !dbg !5746
  %9 = load i32, i32* %n, align 4, !dbg !5747
  %sub8 = sub nsw i32 %9, 1, !dbg !5748
  %idxprom9 = sext i32 %sub8 to i64, !dbg !5749
  %10 = load i16*, i16** %iir_coef.addr, align 8, !dbg !5749
  %arrayidx10 = getelementptr inbounds i16, i16* %10, i64 %idxprom9, !dbg !5749
  %11 = load i16, i16* %arrayidx10, align 2, !dbg !5749
  %conv11 = sext i16 %11 to i32, !dbg !5749
  %12 = load i32, i32* %m, align 4, !dbg !5750
  %13 = load i32, i32* %n, align 4, !dbg !5751
  %sub12 = sub nsw i32 %12, %13, !dbg !5752
  %idxprom13 = sext i32 %sub12 to i64, !dbg !5753
  %14 = load i16*, i16** %dest.addr, align 8, !dbg !5753
  %arrayidx14 = getelementptr inbounds i16, i16* %14, i64 %idxprom13, !dbg !5753
  %15 = load i16, i16* %arrayidx14, align 2, !dbg !5753
  %conv15 = sext i16 %15 to i32, !dbg !5753
  %mul16 = mul nsw i32 %conv11, %conv15, !dbg !5754
  %sub17 = sub nsw i32 %mul, %mul16, !dbg !5755
  %conv18 = sext i32 %sub17 to i64, !dbg !5741
  %16 = load i64, i64* %filter, align 8, !dbg !5756
  %sub19 = sub nsw i64 %16, %conv18, !dbg !5756
  store i64 %sub19, i64* %filter, align 8, !dbg !5756
  br label %for.inc, !dbg !5757

for.inc:                                          ; preds = %for.body3
  %17 = load i32, i32* %n, align 4, !dbg !5758
  %inc = add nsw i32 %17, 1, !dbg !5758
  store i32 %inc, i32* %n, align 4, !dbg !5758
  br label %for.cond1, !dbg !5760, !llvm.loop !5761

for.end:                                          ; preds = %for.cond1
  %18 = load i32, i32* %m, align 4, !dbg !5763
  %idxprom20 = sext i32 %18 to i64, !dbg !5764
  %19 = load i16*, i16** %src.addr, align 8, !dbg !5764
  %arrayidx21 = getelementptr inbounds i16, i16* %19, i64 %idxprom20, !dbg !5764
  %20 = load i16, i16* %arrayidx21, align 2, !dbg !5764
  %conv22 = sext i16 %20 to i32, !dbg !5764
  %shl = shl i32 %conv22, 16, !dbg !5765
  %conv23 = sext i32 %shl to i64, !dbg !5766
  %21 = load i64, i64* %filter, align 8, !dbg !5767
  %shl24 = shl i64 %21, 3, !dbg !5768
  %add = add nsw i64 %conv23, %shl24, !dbg !5769
  %add25 = add nsw i64 %add, 32768, !dbg !5770
  store i64 %add25, i64* %a.addr.i, align 8, !dbg !5771
  %22 = load i64, i64* %a.addr.i, align 8, !dbg !5772
  %add.i = add nsw i64 %22, 2147483648, !dbg !5773
  %and.i = and i64 %add.i, -4294967296, !dbg !5774
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !5774
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5775

if.then.i:                                        ; preds = %for.end
  %23 = load i64, i64* %a.addr.i, align 8, !dbg !5776
  %shr.i = ashr i64 %23, 63, !dbg !5777
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !5778
  %conv.i = trunc i64 %xor.i to i32, !dbg !5779
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !5780
  br label %av_clipl_int32_c.exit, !dbg !5780

if.else.i:                                        ; preds = %for.end
  %24 = load i64, i64* %a.addr.i, align 8, !dbg !5781
  %conv1.i = trunc i64 %24 to i32, !dbg !5782
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !5783
  br label %av_clipl_int32_c.exit, !dbg !5783

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %25 = load i32, i32* %retval.i, align 4, !dbg !5784
  %shr = ashr i32 %25, 16, !dbg !5785
  %conv26 = trunc i32 %shr to i16, !dbg !5771
  %26 = load i32, i32* %m, align 4, !dbg !5786
  %idxprom27 = sext i32 %26 to i64, !dbg !5787
  %27 = load i16*, i16** %dest.addr, align 8, !dbg !5787
  %arrayidx28 = getelementptr inbounds i16, i16* %27, i64 %idxprom27, !dbg !5787
  store i16 %conv26, i16* %arrayidx28, align 2, !dbg !5788
  br label %for.inc29, !dbg !5789

for.inc29:                                        ; preds = %av_clipl_int32_c.exit
  %28 = load i32, i32* %m, align 4, !dbg !5790
  %inc30 = add nsw i32 %28, 1, !dbg !5790
  store i32 %inc30, i32* %m, align 4, !dbg !5790
  br label %for.cond, !dbg !5792, !llvm.loop !5793

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !5795
}

declare void @ff_g723_1_get_residual(i16*, i16*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @get_fcb_param(%struct.FCBParam* %optim, i16* %impulse_resp, i16* %buf, i32 %pulse_cnt, i32 %pitch_lag) #1 !dbg !5796 {
entry:
  %retval.i490 = alloca i32, align 4
  %a.addr.i491 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i491, metadata !2355, metadata !1756), !dbg !5800
  %retval.i478 = alloca i32, align 4
  %a.addr.i479 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i479, metadata !2355, metadata !1756), !dbg !5805
  %retval.i466 = alloca i32, align 4
  %a.addr.i467 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i467, metadata !2355, metadata !1756), !dbg !5811
  %retval.i454 = alloca i32, align 4
  %a.addr.i455 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i455, metadata !2355, metadata !1756), !dbg !5819
  %retval.i442 = alloca i32, align 4
  %a.addr.i443 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i443, metadata !2355, metadata !1756), !dbg !5830
  %retval.i430 = alloca i32, align 4
  %a.addr.i431 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i431, metadata !2355, metadata !1756), !dbg !5838
  %retval.i418 = alloca i32, align 4
  %a.addr.i419 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i419, metadata !2355, metadata !1756), !dbg !5840
  %retval.i406 = alloca i32, align 4
  %a.addr.i407 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i407, metadata !2355, metadata !1756), !dbg !5845
  %retval.i394 = alloca i32, align 4
  %a.addr.i395 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i395, metadata !2355, metadata !1756), !dbg !5847
  %retval.i382 = alloca i32, align 4
  %a.addr.i383 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i383, metadata !2355, metadata !1756), !dbg !5849
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr.i, metadata !2355, metadata !1756), !dbg !5851
  %optim.addr = alloca %struct.FCBParam*, align 8
  %impulse_resp.addr = alloca i16*, align 8
  %buf.addr = alloca i16*, align 8
  %pulse_cnt.addr = alloca i32, align 4
  %pitch_lag.addr = alloca i32, align 4
  %param = alloca %struct.FCBParam, align 4
  %impulse_r = alloca [60 x i16], align 16
  %temp_corr = alloca [60 x i16], align 16
  %impulse_corr = alloca [60 x i16], align 16
  %ccr1 = alloca [60 x i32], align 16
  %ccr2 = alloca [60 x i32], align 16
  %amp = alloca i32, align 4
  %err = alloca i32, align 4
  %max = alloca i32, align 4
  %max_amp_index = alloca i32, align 4
  %min = alloca i32, align 4
  %scale = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %temp = alloca i64, align 8
  %prod = alloca i32, align 4
  %prod319 = alloca i64, align 8
  store %struct.FCBParam* %optim, %struct.FCBParam** %optim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FCBParam** %optim.addr, metadata !5853, metadata !1756), !dbg !5854
  store i16* %impulse_resp, i16** %impulse_resp.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %impulse_resp.addr, metadata !5855, metadata !1756), !dbg !5856
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !5857, metadata !1756), !dbg !5858
  store i32 %pulse_cnt, i32* %pulse_cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pulse_cnt.addr, metadata !5859, metadata !1756), !dbg !5860
  store i32 %pitch_lag, i32* %pitch_lag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pitch_lag.addr, metadata !5861, metadata !1756), !dbg !5862
  call void @llvm.dbg.declare(metadata %struct.FCBParam* %param, metadata !5863, metadata !1756), !dbg !5864
  call void @llvm.dbg.declare(metadata [60 x i16]* %impulse_r, metadata !5865, metadata !1756), !dbg !5866
  call void @llvm.dbg.declare(metadata [60 x i16]* %temp_corr, metadata !5867, metadata !1756), !dbg !5868
  call void @llvm.dbg.declare(metadata [60 x i16]* %impulse_corr, metadata !5869, metadata !1756), !dbg !5870
  call void @llvm.dbg.declare(metadata [60 x i32]* %ccr1, metadata !5871, metadata !1756), !dbg !5873
  call void @llvm.dbg.declare(metadata [60 x i32]* %ccr2, metadata !5874, metadata !1756), !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %amp, metadata !5876, metadata !1756), !dbg !5877
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5878, metadata !1756), !dbg !5879
  call void @llvm.dbg.declare(metadata i32* %max, metadata !5880, metadata !1756), !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %max_amp_index, metadata !5882, metadata !1756), !dbg !5883
  call void @llvm.dbg.declare(metadata i32* %min, metadata !5884, metadata !1756), !dbg !5885
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !5886, metadata !1756), !dbg !5887
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5888, metadata !1756), !dbg !5889
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5890, metadata !1756), !dbg !5891
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5892, metadata !1756), !dbg !5893
  call void @llvm.dbg.declare(metadata i32* %l, metadata !5894, metadata !1756), !dbg !5895
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !5896, metadata !1756), !dbg !5897
  %arraydecay = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_r, i32 0, i32 0, !dbg !5898
  %0 = bitcast i16* %arraydecay to i8*, !dbg !5898
  %1 = load i16*, i16** %impulse_resp.addr, align 8, !dbg !5899
  %2 = bitcast i16* %1 to i8*, !dbg !5898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %2, i64 120, i32 2, i1 false), !dbg !5898
  %dirac_train = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 3, !dbg !5900
  store i32 0, i32* %dirac_train, align 4, !dbg !5901
  %3 = load i32, i32* %pitch_lag.addr, align 4, !dbg !5902
  %cmp = icmp slt i32 %3, 58, !dbg !5904
  br i1 %cmp, label %if.then, label %if.end, !dbg !5905

if.then:                                          ; preds = %entry
  %dirac_train1 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 3, !dbg !5906
  store i32 1, i32* %dirac_train1, align 4, !dbg !5908
  %arraydecay2 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_r, i32 0, i32 0, !dbg !5909
  %4 = load i32, i32* %pitch_lag.addr, align 4, !dbg !5910
  call void @ff_g723_1_gen_dirac_train(i16* %arraydecay2, i32 %4), !dbg !5911
  br label %if.end, !dbg !5912

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !5913
  br label %for.cond, !dbg !5915

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !5916
  %cmp3 = icmp slt i32 %5, 60, !dbg !5919
  br i1 %cmp3, label %for.body, label %for.end, !dbg !5920

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !5921
  %idxprom = sext i32 %6 to i64, !dbg !5922
  %arrayidx = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_r, i64 0, i64 %idxprom, !dbg !5922
  %7 = load i16, i16* %arrayidx, align 2, !dbg !5922
  %conv = sext i16 %7 to i32, !dbg !5922
  %shr = ashr i32 %conv, 1, !dbg !5923
  %conv4 = trunc i32 %shr to i16, !dbg !5922
  %8 = load i32, i32* %i, align 4, !dbg !5924
  %idxprom5 = sext i32 %8 to i64, !dbg !5925
  %arrayidx6 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom5, !dbg !5925
  store i16 %conv4, i16* %arrayidx6, align 2, !dbg !5926
  br label %for.inc, !dbg !5925

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !5927
  %inc = add nsw i32 %9, 1, !dbg !5927
  store i32 %inc, i32* %i, align 4, !dbg !5927
  br label %for.cond, !dbg !5929, !llvm.loop !5930

for.end:                                          ; preds = %for.cond
  %arraydecay7 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i32 0, i32 0, !dbg !5932
  %arraydecay8 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i32 0, i32 0, !dbg !5933
  %call = call i32 @ff_g723_1_dot_product(i16* %arraydecay7, i16* %arraydecay8, i32 60), !dbg !5934
  %conv9 = sext i32 %call to i64, !dbg !5934
  store i64 %conv9, i64* %temp, align 8, !dbg !5935
  %10 = load i64, i64* %temp, align 8, !dbg !5936
  %conv10 = trunc i64 %10 to i32, !dbg !5936
  %call11 = call i32 @ff_g723_1_normalize_bits(i32 %conv10, i32 31), !dbg !5937
  store i32 %call11, i32* %scale, align 4, !dbg !5938
  %11 = load i64, i64* %temp, align 8, !dbg !5939
  %12 = load i32, i32* %scale, align 4, !dbg !5940
  %sh_prom = zext i32 %12 to i64, !dbg !5941
  %shl = shl i64 %11, %sh_prom, !dbg !5941
  %add = add nsw i64 %shl, 32768, !dbg !5942
  store i64 %add, i64* %a.addr.i, align 8, !dbg !5943
  %13 = load i64, i64* %a.addr.i, align 8, !dbg !5944
  %add.i = add nsw i64 %13, 2147483648, !dbg !5945
  %and.i = and i64 %add.i, -4294967296, !dbg !5946
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !5946
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5947

if.then.i:                                        ; preds = %for.end
  %14 = load i64, i64* %a.addr.i, align 8, !dbg !5948
  %shr.i = ashr i64 %14, 63, !dbg !5949
  %xor.i = xor i64 %shr.i, 2147483647, !dbg !5950
  %conv.i = trunc i64 %xor.i to i32, !dbg !5951
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !5952
  br label %av_clipl_int32_c.exit, !dbg !5952

if.else.i:                                        ; preds = %for.end
  %15 = load i64, i64* %a.addr.i, align 8, !dbg !5953
  %conv1.i = trunc i64 %15 to i32, !dbg !5954
  store i32 %conv1.i, i32* %retval.i, align 4, !dbg !5955
  br label %av_clipl_int32_c.exit, !dbg !5955

av_clipl_int32_c.exit:                            ; preds = %if.then.i, %if.else.i
  %16 = load i32, i32* %retval.i, align 4, !dbg !5956
  %shr13 = ashr i32 %16, 16, !dbg !5957
  %conv14 = trunc i32 %shr13 to i16, !dbg !5943
  %arrayidx15 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_corr, i64 0, i64 0, !dbg !5958
  store i16 %conv14, i16* %arrayidx15, align 16, !dbg !5959
  store i32 1, i32* %i, align 4, !dbg !5960
  br label %for.cond16, !dbg !5961

for.cond16:                                       ; preds = %for.inc32, %av_clipl_int32_c.exit
  %17 = load i32, i32* %i, align 4, !dbg !5962
  %cmp17 = icmp slt i32 %17, 60, !dbg !5964
  br i1 %cmp17, label %for.body19, label %for.end34, !dbg !5965

for.body19:                                       ; preds = %for.cond16
  %arraydecay20 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i32 0, i32 0, !dbg !5966
  %18 = load i32, i32* %i, align 4, !dbg !5967
  %idx.ext = sext i32 %18 to i64, !dbg !5968
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay20, i64 %idx.ext, !dbg !5968
  %arraydecay21 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i32 0, i32 0, !dbg !5969
  %19 = load i32, i32* %i, align 4, !dbg !5970
  %sub = sub nsw i32 60, %19, !dbg !5971
  %call22 = call i32 @ff_g723_1_dot_product(i16* %add.ptr, i16* %arraydecay21, i32 %sub), !dbg !5972
  %conv23 = sext i32 %call22 to i64, !dbg !5972
  store i64 %conv23, i64* %temp, align 8, !dbg !5973
  %20 = load i64, i64* %temp, align 8, !dbg !5974
  %21 = load i32, i32* %scale, align 4, !dbg !5975
  %sh_prom24 = zext i32 %21 to i64, !dbg !5976
  %shl25 = shl i64 %20, %sh_prom24, !dbg !5976
  %add26 = add nsw i64 %shl25, 32768, !dbg !5977
  store i64 %add26, i64* %a.addr.i491, align 8, !dbg !5978
  %22 = load i64, i64* %a.addr.i491, align 8, !dbg !5979
  %add.i492 = add nsw i64 %22, 2147483648, !dbg !5980
  %and.i493 = and i64 %add.i492, -4294967296, !dbg !5981
  %tobool.i494 = icmp ne i64 %and.i493, 0, !dbg !5981
  br i1 %tobool.i494, label %if.then.i498, label %if.else.i500, !dbg !5982

if.then.i498:                                     ; preds = %for.body19
  %23 = load i64, i64* %a.addr.i491, align 8, !dbg !5983
  %shr.i495 = ashr i64 %23, 63, !dbg !5984
  %xor.i496 = xor i64 %shr.i495, 2147483647, !dbg !5985
  %conv.i497 = trunc i64 %xor.i496 to i32, !dbg !5986
  store i32 %conv.i497, i32* %retval.i490, align 4, !dbg !5987
  br label %av_clipl_int32_c.exit501, !dbg !5987

if.else.i500:                                     ; preds = %for.body19
  %24 = load i64, i64* %a.addr.i491, align 8, !dbg !5988
  %conv1.i499 = trunc i64 %24 to i32, !dbg !5989
  store i32 %conv1.i499, i32* %retval.i490, align 4, !dbg !5990
  br label %av_clipl_int32_c.exit501, !dbg !5990

av_clipl_int32_c.exit501:                         ; preds = %if.then.i498, %if.else.i500
  %25 = load i32, i32* %retval.i490, align 4, !dbg !5991
  %shr28 = ashr i32 %25, 16, !dbg !5992
  %conv29 = trunc i32 %shr28 to i16, !dbg !5978
  %26 = load i32, i32* %i, align 4, !dbg !5993
  %idxprom30 = sext i32 %26 to i64, !dbg !5994
  %arrayidx31 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_corr, i64 0, i64 %idxprom30, !dbg !5994
  store i16 %conv29, i16* %arrayidx31, align 2, !dbg !5995
  br label %for.inc32, !dbg !5996

for.inc32:                                        ; preds = %av_clipl_int32_c.exit501
  %27 = load i32, i32* %i, align 4, !dbg !5997
  %inc33 = add nsw i32 %27, 1, !dbg !5997
  store i32 %inc33, i32* %i, align 4, !dbg !5997
  br label %for.cond16, !dbg !5999, !llvm.loop !6000

for.end34:                                        ; preds = %for.cond16
  %28 = load i32, i32* %scale, align 4, !dbg !6002
  %sub35 = sub nsw i32 %28, 4, !dbg !6002
  store i32 %sub35, i32* %scale, align 4, !dbg !6002
  store i32 0, i32* %i, align 4, !dbg !6003
  br label %for.cond36, !dbg !6004

for.cond36:                                       ; preds = %for.inc61, %for.end34
  %29 = load i32, i32* %i, align 4, !dbg !6005
  %cmp37 = icmp slt i32 %29, 60, !dbg !6007
  br i1 %cmp37, label %for.body39, label %for.end63, !dbg !6008

for.body39:                                       ; preds = %for.cond36
  %30 = load i16*, i16** %buf.addr, align 8, !dbg !6009
  %31 = load i32, i32* %i, align 4, !dbg !6010
  %idx.ext40 = sext i32 %31 to i64, !dbg !6011
  %add.ptr41 = getelementptr inbounds i16, i16* %30, i64 %idx.ext40, !dbg !6011
  %arraydecay42 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_r, i32 0, i32 0, !dbg !6012
  %32 = load i32, i32* %i, align 4, !dbg !6013
  %sub43 = sub nsw i32 60, %32, !dbg !6014
  %call44 = call i32 @ff_g723_1_dot_product(i16* %add.ptr41, i16* %arraydecay42, i32 %sub43), !dbg !6015
  %conv45 = sext i32 %call44 to i64, !dbg !6015
  store i64 %conv45, i64* %temp, align 8, !dbg !6016
  %33 = load i32, i32* %scale, align 4, !dbg !6017
  %cmp46 = icmp slt i32 %33, 0, !dbg !6018
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !6019

if.then48:                                        ; preds = %for.body39
  %34 = load i64, i64* %temp, align 8, !dbg !6020
  %35 = load i32, i32* %scale, align 4, !dbg !6021
  %sub49 = sub nsw i32 0, %35, !dbg !6022
  %sh_prom50 = zext i32 %sub49 to i64, !dbg !6023
  %shr51 = ashr i64 %34, %sh_prom50, !dbg !6023
  %conv52 = trunc i64 %shr51 to i32, !dbg !6020
  %36 = load i32, i32* %i, align 4, !dbg !6024
  %idxprom53 = sext i32 %36 to i64, !dbg !6025
  %arrayidx54 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr1, i64 0, i64 %idxprom53, !dbg !6025
  store i32 %conv52, i32* %arrayidx54, align 4, !dbg !6026
  br label %if.end60, !dbg !6025

if.else:                                          ; preds = %for.body39
  %37 = load i64, i64* %temp, align 8, !dbg !6027
  %38 = load i32, i32* %scale, align 4, !dbg !6028
  %sh_prom55 = zext i32 %38 to i64, !dbg !6029
  %shl56 = shl i64 %37, %sh_prom55, !dbg !6029
  store i64 %shl56, i64* %a.addr.i479, align 8, !dbg !6030
  %39 = load i64, i64* %a.addr.i479, align 8, !dbg !6031
  %add.i480 = add nsw i64 %39, 2147483648, !dbg !6032
  %and.i481 = and i64 %add.i480, -4294967296, !dbg !6033
  %tobool.i482 = icmp ne i64 %and.i481, 0, !dbg !6033
  br i1 %tobool.i482, label %if.then.i486, label %if.else.i488, !dbg !6034

if.then.i486:                                     ; preds = %if.else
  %40 = load i64, i64* %a.addr.i479, align 8, !dbg !6035
  %shr.i483 = ashr i64 %40, 63, !dbg !6036
  %xor.i484 = xor i64 %shr.i483, 2147483647, !dbg !6037
  %conv.i485 = trunc i64 %xor.i484 to i32, !dbg !6038
  store i32 %conv.i485, i32* %retval.i478, align 4, !dbg !6039
  br label %av_clipl_int32_c.exit489, !dbg !6039

if.else.i488:                                     ; preds = %if.else
  %41 = load i64, i64* %a.addr.i479, align 8, !dbg !6040
  %conv1.i487 = trunc i64 %41 to i32, !dbg !6041
  store i32 %conv1.i487, i32* %retval.i478, align 4, !dbg !6042
  br label %av_clipl_int32_c.exit489, !dbg !6042

av_clipl_int32_c.exit489:                         ; preds = %if.then.i486, %if.else.i488
  %42 = load i32, i32* %retval.i478, align 4, !dbg !6043
  %43 = load i32, i32* %i, align 4, !dbg !6044
  %idxprom58 = sext i32 %43 to i64, !dbg !6045
  %arrayidx59 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr1, i64 0, i64 %idxprom58, !dbg !6045
  store i32 %42, i32* %arrayidx59, align 4, !dbg !6046
  br label %if.end60

if.end60:                                         ; preds = %av_clipl_int32_c.exit489, %if.then48
  br label %for.inc61, !dbg !6047

for.inc61:                                        ; preds = %if.end60
  %44 = load i32, i32* %i, align 4, !dbg !6048
  %inc62 = add nsw i32 %44, 1, !dbg !6048
  store i32 %inc62, i32* %i, align 4, !dbg !6048
  br label %for.cond36, !dbg !6050, !llvm.loop !6051

for.end63:                                        ; preds = %for.cond36
  store i32 0, i32* %i, align 4, !dbg !6053
  br label %for.cond64, !dbg !6054

for.cond64:                                       ; preds = %for.inc379, %for.end63
  %45 = load i32, i32* %i, align 4, !dbg !6055
  %cmp65 = icmp slt i32 %45, 2, !dbg !6057
  br i1 %cmp65, label %for.body67, label %for.end381, !dbg !6058

for.body67:                                       ; preds = %for.cond64
  store i32 0, i32* %max, align 4, !dbg !6059
  %46 = load i32, i32* %i, align 4, !dbg !6060
  store i32 %46, i32* %j, align 4, !dbg !6062
  br label %for.cond68, !dbg !6063

for.cond68:                                       ; preds = %for.inc89, %for.body67
  %47 = load i32, i32* %j, align 4, !dbg !6064
  %cmp69 = icmp slt i32 %47, 60, !dbg !6067
  br i1 %cmp69, label %for.body71, label %for.end91, !dbg !6068

for.body71:                                       ; preds = %for.cond68
  %48 = load i32, i32* %j, align 4, !dbg !6069
  %idxprom72 = sext i32 %48 to i64, !dbg !6071
  %arrayidx73 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr1, i64 0, i64 %idxprom72, !dbg !6071
  %49 = load i32, i32* %arrayidx73, align 4, !dbg !6071
  %cmp74 = icmp sge i32 %49, 0, !dbg !6072
  br i1 %cmp74, label %cond.true, label %cond.false, !dbg !6073

cond.true:                                        ; preds = %for.body71
  %50 = load i32, i32* %j, align 4, !dbg !6074
  %idxprom76 = sext i32 %50 to i64, !dbg !6076
  %arrayidx77 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr1, i64 0, i64 %idxprom76, !dbg !6076
  %51 = load i32, i32* %arrayidx77, align 4, !dbg !6076
  br label %cond.end, !dbg !6077

cond.false:                                       ; preds = %for.body71
  %52 = load i32, i32* %j, align 4, !dbg !6078
  %idxprom78 = sext i32 %52 to i64, !dbg !6080
  %arrayidx79 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr1, i64 0, i64 %idxprom78, !dbg !6080
  %53 = load i32, i32* %arrayidx79, align 4, !dbg !6080
  %sub80 = sub nsw i32 0, %53, !dbg !6081
  br label %cond.end, !dbg !6082

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %51, %cond.true ], [ %sub80, %cond.false ], !dbg !6083
  %conv81 = sext i32 %cond to i64, !dbg !6085
  store i64 %conv81, i64* %temp, align 8, !dbg !6086
  %54 = load i64, i64* %temp, align 8, !dbg !6087
  %55 = load i32, i32* %max, align 4, !dbg !6089
  %conv82 = sext i32 %55 to i64, !dbg !6089
  %cmp83 = icmp sge i64 %54, %conv82, !dbg !6090
  br i1 %cmp83, label %if.then85, label %if.end88, !dbg !6091

if.then85:                                        ; preds = %cond.end
  %56 = load i64, i64* %temp, align 8, !dbg !6092
  %conv86 = trunc i64 %56 to i32, !dbg !6092
  store i32 %conv86, i32* %max, align 4, !dbg !6094
  %57 = load i32, i32* %j, align 4, !dbg !6095
  %pulse_pos = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6096
  %arrayidx87 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos, i64 0, i64 0, !dbg !6097
  store i32 %57, i32* %arrayidx87, align 4, !dbg !6098
  br label %if.end88, !dbg !6099

if.end88:                                         ; preds = %if.then85, %cond.end
  br label %for.inc89, !dbg !6100

for.inc89:                                        ; preds = %if.end88
  %58 = load i32, i32* %j, align 4, !dbg !6101
  %add90 = add nsw i32 %58, 2, !dbg !6101
  store i32 %add90, i32* %j, align 4, !dbg !6101
  br label %for.cond68, !dbg !6103, !llvm.loop !6104

for.end91:                                        ; preds = %for.cond68
  %59 = load i32, i32* %max, align 4, !dbg !6106
  store i32 %59, i32* %amp, align 4, !dbg !6107
  store i32 1073741824, i32* %min, align 4, !dbg !6108
  store i32 22, i32* %max_amp_index, align 4, !dbg !6109
  %60 = load i32, i32* %max_amp_index, align 4, !dbg !6110
  store i32 %60, i32* %j, align 4, !dbg !6111
  br label %for.cond92, !dbg !6112

for.cond92:                                       ; preds = %for.inc123, %for.end91
  %61 = load i32, i32* %j, align 4, !dbg !6113
  %cmp93 = icmp sge i32 %61, 2, !dbg !6115
  br i1 %cmp93, label %for.body95, label %for.end124, !dbg !6116

for.body95:                                       ; preds = %for.cond92
  %62 = load i32, i32* %j, align 4, !dbg !6117
  %idxprom96 = sext i32 %62 to i64, !dbg !6118
  %arrayidx97 = getelementptr inbounds [24 x i16], [24 x i16]* @fixed_cb_gain, i64 0, i64 %idxprom96, !dbg !6118
  %63 = load i16, i16* %arrayidx97, align 2, !dbg !6118
  %conv98 = sext i16 %63 to i64, !dbg !6119
  %arrayidx99 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_corr, i64 0, i64 0, !dbg !6120
  %64 = load i16, i16* %arrayidx99, align 16, !dbg !6120
  %conv100 = sext i16 %64 to i64, !dbg !6120
  %mul = mul nsw i64 %conv98, %conv100, !dbg !6121
  %shl101 = shl i64 %mul, 1, !dbg !6122
  store i64 %shl101, i64* %a.addr.i467, align 8, !dbg !6123
  %65 = load i64, i64* %a.addr.i467, align 8, !dbg !6124
  %add.i468 = add nsw i64 %65, 2147483648, !dbg !6125
  %and.i469 = and i64 %add.i468, -4294967296, !dbg !6126
  %tobool.i470 = icmp ne i64 %and.i469, 0, !dbg !6126
  br i1 %tobool.i470, label %if.then.i474, label %if.else.i476, !dbg !6127

if.then.i474:                                     ; preds = %for.body95
  %66 = load i64, i64* %a.addr.i467, align 8, !dbg !6128
  %shr.i471 = ashr i64 %66, 63, !dbg !6129
  %xor.i472 = xor i64 %shr.i471, 2147483647, !dbg !6130
  %conv.i473 = trunc i64 %xor.i472 to i32, !dbg !6131
  store i32 %conv.i473, i32* %retval.i466, align 4, !dbg !6132
  br label %av_clipl_int32_c.exit477, !dbg !6132

if.else.i476:                                     ; preds = %for.body95
  %67 = load i64, i64* %a.addr.i467, align 8, !dbg !6133
  %conv1.i475 = trunc i64 %67 to i32, !dbg !6134
  store i32 %conv1.i475, i32* %retval.i466, align 4, !dbg !6135
  br label %av_clipl_int32_c.exit477, !dbg !6135

av_clipl_int32_c.exit477:                         ; preds = %if.then.i474, %if.else.i476
  %68 = load i32, i32* %retval.i466, align 4, !dbg !6136
  %conv103 = sext i32 %68 to i64, !dbg !6123
  store i64 %conv103, i64* %temp, align 8, !dbg !6137
  %69 = load i64, i64* %temp, align 8, !dbg !6138
  %70 = load i32, i32* %amp, align 4, !dbg !6139
  %conv104 = sext i32 %70 to i64, !dbg !6139
  %sub105 = sub nsw i64 %69, %conv104, !dbg !6140
  %cmp106 = icmp sge i64 %sub105, 0, !dbg !6141
  br i1 %cmp106, label %cond.true108, label %cond.false111, !dbg !6142

cond.true108:                                     ; preds = %av_clipl_int32_c.exit477
  %71 = load i64, i64* %temp, align 8, !dbg !6143
  %72 = load i32, i32* %amp, align 4, !dbg !6145
  %conv109 = sext i32 %72 to i64, !dbg !6145
  %sub110 = sub nsw i64 %71, %conv109, !dbg !6146
  br label %cond.end115, !dbg !6147

cond.false111:                                    ; preds = %av_clipl_int32_c.exit477
  %73 = load i64, i64* %temp, align 8, !dbg !6148
  %74 = load i32, i32* %amp, align 4, !dbg !6150
  %conv112 = sext i32 %74 to i64, !dbg !6150
  %sub113 = sub nsw i64 %73, %conv112, !dbg !6151
  %sub114 = sub nsw i64 0, %sub113, !dbg !6152
  br label %cond.end115, !dbg !6153

cond.end115:                                      ; preds = %cond.false111, %cond.true108
  %cond116 = phi i64 [ %sub110, %cond.true108 ], [ %sub114, %cond.false111 ], !dbg !6154
  store i64 %cond116, i64* %temp, align 8, !dbg !6156
  %75 = load i64, i64* %temp, align 8, !dbg !6157
  %76 = load i32, i32* %min, align 4, !dbg !6159
  %conv117 = sext i32 %76 to i64, !dbg !6159
  %cmp118 = icmp slt i64 %75, %conv117, !dbg !6160
  br i1 %cmp118, label %if.then120, label %if.end122, !dbg !6161

if.then120:                                       ; preds = %cond.end115
  %77 = load i64, i64* %temp, align 8, !dbg !6162
  %conv121 = trunc i64 %77 to i32, !dbg !6162
  store i32 %conv121, i32* %min, align 4, !dbg !6164
  %78 = load i32, i32* %j, align 4, !dbg !6165
  store i32 %78, i32* %max_amp_index, align 4, !dbg !6166
  br label %if.end122, !dbg !6167

if.end122:                                        ; preds = %if.then120, %cond.end115
  br label %for.inc123, !dbg !6168

for.inc123:                                       ; preds = %if.end122
  %79 = load i32, i32* %j, align 4, !dbg !6169
  %dec = add nsw i32 %79, -1, !dbg !6169
  store i32 %dec, i32* %j, align 4, !dbg !6169
  br label %for.cond92, !dbg !6171, !llvm.loop !6172

for.end124:                                       ; preds = %for.cond92
  %80 = load i32, i32* %max_amp_index, align 4, !dbg !6174
  %dec125 = add nsw i32 %80, -1, !dbg !6174
  store i32 %dec125, i32* %max_amp_index, align 4, !dbg !6174
  store i32 1, i32* %j, align 4, !dbg !6175
  br label %for.cond126, !dbg !6176

for.cond126:                                      ; preds = %for.inc376, %for.end124
  %81 = load i32, i32* %j, align 4, !dbg !6177
  %cmp127 = icmp slt i32 %81, 5, !dbg !6179
  br i1 %cmp127, label %for.body129, label %for.end378, !dbg !6180

for.body129:                                      ; preds = %for.cond126
  %82 = load i32, i32* %i, align 4, !dbg !6181
  store i32 %82, i32* %k, align 4, !dbg !6183
  br label %for.cond130, !dbg !6184

for.cond130:                                      ; preds = %for.inc140, %for.body129
  %83 = load i32, i32* %k, align 4, !dbg !6185
  %cmp131 = icmp slt i32 %83, 60, !dbg !6188
  br i1 %cmp131, label %for.body133, label %for.end142, !dbg !6189

for.body133:                                      ; preds = %for.cond130
  %84 = load i32, i32* %k, align 4, !dbg !6190
  %idxprom134 = sext i32 %84 to i64, !dbg !6192
  %arrayidx135 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom134, !dbg !6192
  store i16 0, i16* %arrayidx135, align 2, !dbg !6193
  %85 = load i32, i32* %k, align 4, !dbg !6194
  %idxprom136 = sext i32 %85 to i64, !dbg !6195
  %arrayidx137 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr1, i64 0, i64 %idxprom136, !dbg !6195
  %86 = load i32, i32* %arrayidx137, align 4, !dbg !6195
  %87 = load i32, i32* %k, align 4, !dbg !6196
  %idxprom138 = sext i32 %87 to i64, !dbg !6197
  %arrayidx139 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr2, i64 0, i64 %idxprom138, !dbg !6197
  store i32 %86, i32* %arrayidx139, align 4, !dbg !6198
  br label %for.inc140, !dbg !6199

for.inc140:                                       ; preds = %for.body133
  %88 = load i32, i32* %k, align 4, !dbg !6200
  %add141 = add nsw i32 %88, 2, !dbg !6200
  store i32 %add141, i32* %k, align 4, !dbg !6200
  br label %for.cond130, !dbg !6202, !llvm.loop !6203

for.end142:                                       ; preds = %for.cond130
  %89 = load i32, i32* %max_amp_index, align 4, !dbg !6205
  %90 = load i32, i32* %j, align 4, !dbg !6206
  %add143 = add nsw i32 %89, %90, !dbg !6207
  %sub144 = sub nsw i32 %add143, 2, !dbg !6208
  %amp_index = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 1, !dbg !6209
  store i32 %sub144, i32* %amp_index, align 4, !dbg !6210
  %amp_index145 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 1, !dbg !6211
  %91 = load i32, i32* %amp_index145, align 4, !dbg !6211
  %idxprom146 = sext i32 %91 to i64, !dbg !6212
  %arrayidx147 = getelementptr inbounds [24 x i16], [24 x i16]* @fixed_cb_gain, i64 0, i64 %idxprom146, !dbg !6212
  %92 = load i16, i16* %arrayidx147, align 2, !dbg !6212
  %conv148 = sext i16 %92 to i32, !dbg !6212
  store i32 %conv148, i32* %amp, align 4, !dbg !6213
  %pulse_pos149 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6214
  %arrayidx150 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos149, i64 0, i64 0, !dbg !6215
  %93 = load i32, i32* %arrayidx150, align 4, !dbg !6215
  %idxprom151 = sext i32 %93 to i64, !dbg !6216
  %arrayidx152 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr2, i64 0, i64 %idxprom151, !dbg !6216
  %94 = load i32, i32* %arrayidx152, align 4, !dbg !6216
  %cmp153 = icmp slt i32 %94, 0, !dbg !6217
  br i1 %cmp153, label %cond.true155, label %cond.false157, !dbg !6218

cond.true155:                                     ; preds = %for.end142
  %95 = load i32, i32* %amp, align 4, !dbg !6219
  %sub156 = sub nsw i32 0, %95, !dbg !6221
  br label %cond.end158, !dbg !6222

cond.false157:                                    ; preds = %for.end142
  %96 = load i32, i32* %amp, align 4, !dbg !6223
  br label %cond.end158, !dbg !6225

cond.end158:                                      ; preds = %cond.false157, %cond.true155
  %cond159 = phi i32 [ %sub156, %cond.true155 ], [ %96, %cond.false157 ], !dbg !6226
  %pulse_sign = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 5, !dbg !6228
  %arrayidx160 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_sign, i64 0, i64 0, !dbg !6229
  store i32 %cond159, i32* %arrayidx160, align 4, !dbg !6230
  %pulse_pos161 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6231
  %arrayidx162 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos161, i64 0, i64 0, !dbg !6232
  %97 = load i32, i32* %arrayidx162, align 4, !dbg !6232
  %idxprom163 = sext i32 %97 to i64, !dbg !6233
  %arrayidx164 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom163, !dbg !6233
  store i16 1, i16* %arrayidx164, align 2, !dbg !6234
  store i32 1, i32* %k, align 4, !dbg !6235
  br label %for.cond165, !dbg !6236

for.cond165:                                      ; preds = %for.inc262, %cond.end158
  %98 = load i32, i32* %k, align 4, !dbg !6237
  %99 = load i32, i32* %pulse_cnt.addr, align 4, !dbg !6239
  %cmp166 = icmp slt i32 %98, %99, !dbg !6240
  br i1 %cmp166, label %for.body168, label %for.end264, !dbg !6241

for.body168:                                      ; preds = %for.cond165
  store i32 -2147483648, i32* %max, align 4, !dbg !6242
  %100 = load i32, i32* %i, align 4, !dbg !6243
  store i32 %100, i32* %l, align 4, !dbg !6244
  br label %for.cond169, !dbg !6245

for.cond169:                                      ; preds = %for.inc239, %for.body168
  %101 = load i32, i32* %l, align 4, !dbg !6246
  %cmp170 = icmp slt i32 %101, 60, !dbg !6248
  br i1 %cmp170, label %for.body172, label %for.end241, !dbg !6249

for.body172:                                      ; preds = %for.cond169
  %102 = load i32, i32* %l, align 4, !dbg !6250
  %idxprom173 = sext i32 %102 to i64, !dbg !6252
  %arrayidx174 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom173, !dbg !6252
  %103 = load i16, i16* %arrayidx174, align 2, !dbg !6252
  %tobool = icmp ne i16 %103, 0, !dbg !6252
  br i1 %tobool, label %if.then175, label %if.end176, !dbg !6253

if.then175:                                       ; preds = %for.body172
  br label %for.inc239, !dbg !6254

if.end176:                                        ; preds = %for.body172
  %104 = load i32, i32* %l, align 4, !dbg !6255
  %105 = load i32, i32* %k, align 4, !dbg !6256
  %sub177 = sub nsw i32 %105, 1, !dbg !6257
  %idxprom178 = sext i32 %sub177 to i64, !dbg !6258
  %pulse_pos179 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6259
  %arrayidx180 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos179, i64 0, i64 %idxprom178, !dbg !6258
  %106 = load i32, i32* %arrayidx180, align 4, !dbg !6258
  %sub181 = sub nsw i32 %104, %106, !dbg !6260
  %cmp182 = icmp sge i32 %sub181, 0, !dbg !6261
  br i1 %cmp182, label %cond.true184, label %cond.false190, !dbg !6262

cond.true184:                                     ; preds = %if.end176
  %107 = load i32, i32* %l, align 4, !dbg !6263
  %108 = load i32, i32* %k, align 4, !dbg !6265
  %sub185 = sub nsw i32 %108, 1, !dbg !6266
  %idxprom186 = sext i32 %sub185 to i64, !dbg !6267
  %pulse_pos187 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6268
  %arrayidx188 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos187, i64 0, i64 %idxprom186, !dbg !6267
  %109 = load i32, i32* %arrayidx188, align 4, !dbg !6267
  %sub189 = sub nsw i32 %107, %109, !dbg !6269
  br label %cond.end197, !dbg !6270

cond.false190:                                    ; preds = %if.end176
  %110 = load i32, i32* %l, align 4, !dbg !6271
  %111 = load i32, i32* %k, align 4, !dbg !6273
  %sub191 = sub nsw i32 %111, 1, !dbg !6274
  %idxprom192 = sext i32 %sub191 to i64, !dbg !6275
  %pulse_pos193 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6276
  %arrayidx194 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos193, i64 0, i64 %idxprom192, !dbg !6275
  %112 = load i32, i32* %arrayidx194, align 4, !dbg !6275
  %sub195 = sub nsw i32 %110, %112, !dbg !6277
  %sub196 = sub nsw i32 0, %sub195, !dbg !6278
  br label %cond.end197, !dbg !6279

cond.end197:                                      ; preds = %cond.false190, %cond.true184
  %cond198 = phi i32 [ %sub189, %cond.true184 ], [ %sub196, %cond.false190 ], !dbg !6280
  %idxprom199 = sext i32 %cond198 to i64, !dbg !6282
  %arrayidx200 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_corr, i64 0, i64 %idxprom199, !dbg !6282
  %113 = load i16, i16* %arrayidx200, align 2, !dbg !6282
  %conv201 = sext i16 %113 to i64, !dbg !6282
  store i64 %conv201, i64* %temp, align 8, !dbg !6283
  %114 = load i64, i64* %temp, align 8, !dbg !6284
  %115 = load i32, i32* %k, align 4, !dbg !6285
  %sub202 = sub nsw i32 %115, 1, !dbg !6286
  %idxprom203 = sext i32 %sub202 to i64, !dbg !6287
  %pulse_sign204 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 5, !dbg !6288
  %arrayidx205 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_sign204, i64 0, i64 %idxprom203, !dbg !6287
  %116 = load i32, i32* %arrayidx205, align 4, !dbg !6287
  %conv206 = sext i32 %116 to i64, !dbg !6287
  %mul207 = mul nsw i64 %114, %conv206, !dbg !6289
  %shl208 = shl i64 %mul207, 1, !dbg !6290
  store i64 %shl208, i64* %a.addr.i455, align 8, !dbg !6291
  %117 = load i64, i64* %a.addr.i455, align 8, !dbg !6292
  %add.i456 = add nsw i64 %117, 2147483648, !dbg !6293
  %and.i457 = and i64 %add.i456, -4294967296, !dbg !6294
  %tobool.i458 = icmp ne i64 %and.i457, 0, !dbg !6294
  br i1 %tobool.i458, label %if.then.i462, label %if.else.i464, !dbg !6295

if.then.i462:                                     ; preds = %cond.end197
  %118 = load i64, i64* %a.addr.i455, align 8, !dbg !6296
  %shr.i459 = ashr i64 %118, 63, !dbg !6297
  %xor.i460 = xor i64 %shr.i459, 2147483647, !dbg !6298
  %conv.i461 = trunc i64 %xor.i460 to i32, !dbg !6299
  store i32 %conv.i461, i32* %retval.i454, align 4, !dbg !6300
  br label %av_clipl_int32_c.exit465, !dbg !6300

if.else.i464:                                     ; preds = %cond.end197
  %119 = load i64, i64* %a.addr.i455, align 8, !dbg !6301
  %conv1.i463 = trunc i64 %119 to i32, !dbg !6302
  store i32 %conv1.i463, i32* %retval.i454, align 4, !dbg !6303
  br label %av_clipl_int32_c.exit465, !dbg !6303

av_clipl_int32_c.exit465:                         ; preds = %if.then.i462, %if.else.i464
  %120 = load i32, i32* %retval.i454, align 4, !dbg !6304
  %conv210 = sext i32 %120 to i64, !dbg !6291
  store i64 %conv210, i64* %temp, align 8, !dbg !6305
  %121 = load i64, i64* %temp, align 8, !dbg !6306
  %122 = load i32, i32* %l, align 4, !dbg !6307
  %idxprom211 = sext i32 %122 to i64, !dbg !6308
  %arrayidx212 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr2, i64 0, i64 %idxprom211, !dbg !6308
  %123 = load i32, i32* %arrayidx212, align 4, !dbg !6309
  %conv213 = sext i32 %123 to i64, !dbg !6309
  %sub214 = sub nsw i64 %conv213, %121, !dbg !6309
  %conv215 = trunc i64 %sub214 to i32, !dbg !6309
  store i32 %conv215, i32* %arrayidx212, align 4, !dbg !6309
  %124 = load i32, i32* %l, align 4, !dbg !6310
  %idxprom216 = sext i32 %124 to i64, !dbg !6311
  %arrayidx217 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr2, i64 0, i64 %idxprom216, !dbg !6311
  %125 = load i32, i32* %arrayidx217, align 4, !dbg !6311
  %cmp218 = icmp sge i32 %125, 0, !dbg !6312
  br i1 %cmp218, label %cond.true220, label %cond.false223, !dbg !6313

cond.true220:                                     ; preds = %av_clipl_int32_c.exit465
  %126 = load i32, i32* %l, align 4, !dbg !6314
  %idxprom221 = sext i32 %126 to i64, !dbg !6315
  %arrayidx222 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr2, i64 0, i64 %idxprom221, !dbg !6315
  %127 = load i32, i32* %arrayidx222, align 4, !dbg !6315
  br label %cond.end227, !dbg !6316

cond.false223:                                    ; preds = %av_clipl_int32_c.exit465
  %128 = load i32, i32* %l, align 4, !dbg !6317
  %idxprom224 = sext i32 %128 to i64, !dbg !6318
  %arrayidx225 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr2, i64 0, i64 %idxprom224, !dbg !6318
  %129 = load i32, i32* %arrayidx225, align 4, !dbg !6318
  %sub226 = sub nsw i32 0, %129, !dbg !6319
  br label %cond.end227, !dbg !6320

cond.end227:                                      ; preds = %cond.false223, %cond.true220
  %cond228 = phi i32 [ %127, %cond.true220 ], [ %sub226, %cond.false223 ], !dbg !6321
  %conv229 = sext i32 %cond228 to i64, !dbg !6322
  store i64 %conv229, i64* %temp, align 8, !dbg !6323
  %130 = load i64, i64* %temp, align 8, !dbg !6324
  %131 = load i32, i32* %max, align 4, !dbg !6326
  %conv230 = sext i32 %131 to i64, !dbg !6326
  %cmp231 = icmp sgt i64 %130, %conv230, !dbg !6327
  br i1 %cmp231, label %if.then233, label %if.end238, !dbg !6328

if.then233:                                       ; preds = %cond.end227
  %132 = load i64, i64* %temp, align 8, !dbg !6329
  %conv234 = trunc i64 %132 to i32, !dbg !6329
  store i32 %conv234, i32* %max, align 4, !dbg !6331
  %133 = load i32, i32* %l, align 4, !dbg !6332
  %134 = load i32, i32* %k, align 4, !dbg !6333
  %idxprom235 = sext i32 %134 to i64, !dbg !6334
  %pulse_pos236 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6335
  %arrayidx237 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos236, i64 0, i64 %idxprom235, !dbg !6334
  store i32 %133, i32* %arrayidx237, align 4, !dbg !6336
  br label %if.end238, !dbg !6337

if.end238:                                        ; preds = %if.then233, %cond.end227
  br label %for.inc239, !dbg !6338

for.inc239:                                       ; preds = %if.end238, %if.then175
  %135 = load i32, i32* %l, align 4, !dbg !6339
  %add240 = add nsw i32 %135, 2, !dbg !6339
  store i32 %add240, i32* %l, align 4, !dbg !6339
  br label %for.cond169, !dbg !6341, !llvm.loop !6342

for.end241:                                       ; preds = %for.cond169
  %136 = load i32, i32* %k, align 4, !dbg !6344
  %idxprom242 = sext i32 %136 to i64, !dbg !6345
  %pulse_pos243 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6346
  %arrayidx244 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos243, i64 0, i64 %idxprom242, !dbg !6345
  %137 = load i32, i32* %arrayidx244, align 4, !dbg !6345
  %idxprom245 = sext i32 %137 to i64, !dbg !6347
  %arrayidx246 = getelementptr inbounds [60 x i32], [60 x i32]* %ccr2, i64 0, i64 %idxprom245, !dbg !6347
  %138 = load i32, i32* %arrayidx246, align 4, !dbg !6347
  %cmp247 = icmp slt i32 %138, 0, !dbg !6348
  br i1 %cmp247, label %cond.true249, label %cond.false251, !dbg !6349

cond.true249:                                     ; preds = %for.end241
  %139 = load i32, i32* %amp, align 4, !dbg !6350
  %sub250 = sub nsw i32 0, %139, !dbg !6351
  br label %cond.end252, !dbg !6352

cond.false251:                                    ; preds = %for.end241
  %140 = load i32, i32* %amp, align 4, !dbg !6354
  br label %cond.end252, !dbg !6355

cond.end252:                                      ; preds = %cond.false251, %cond.true249
  %cond253 = phi i32 [ %sub250, %cond.true249 ], [ %140, %cond.false251 ], !dbg !6357
  %141 = load i32, i32* %k, align 4, !dbg !6359
  %idxprom254 = sext i32 %141 to i64, !dbg !6360
  %pulse_sign255 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 5, !dbg !6361
  %arrayidx256 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_sign255, i64 0, i64 %idxprom254, !dbg !6360
  store i32 %cond253, i32* %arrayidx256, align 4, !dbg !6362
  %142 = load i32, i32* %k, align 4, !dbg !6363
  %idxprom257 = sext i32 %142 to i64, !dbg !6364
  %pulse_pos258 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6365
  %arrayidx259 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos258, i64 0, i64 %idxprom257, !dbg !6364
  %143 = load i32, i32* %arrayidx259, align 4, !dbg !6364
  %idxprom260 = sext i32 %143 to i64, !dbg !6366
  %arrayidx261 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom260, !dbg !6366
  store i16 1, i16* %arrayidx261, align 2, !dbg !6367
  br label %for.inc262, !dbg !6368

for.inc262:                                       ; preds = %cond.end252
  %144 = load i32, i32* %k, align 4, !dbg !6369
  %inc263 = add nsw i32 %144, 1, !dbg !6369
  store i32 %inc263, i32* %k, align 4, !dbg !6369
  br label %for.cond165, !dbg !6371, !llvm.loop !6372

for.end264:                                       ; preds = %for.cond165
  %arraydecay265 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i32 0, i32 0, !dbg !6374
  %145 = bitcast i16* %arraydecay265 to i8*, !dbg !6374
  call void @llvm.memset.p0i8.i64(i8* %145, i8 0, i64 120, i32 16, i1 false), !dbg !6374
  store i32 0, i32* %k, align 4, !dbg !6375
  br label %for.cond266, !dbg !6377

for.cond266:                                      ; preds = %for.inc279, %for.end264
  %146 = load i32, i32* %k, align 4, !dbg !6378
  %147 = load i32, i32* %pulse_cnt.addr, align 4, !dbg !6381
  %cmp267 = icmp slt i32 %146, %147, !dbg !6382
  br i1 %cmp267, label %for.body269, label %for.end281, !dbg !6383

for.body269:                                      ; preds = %for.cond266
  %148 = load i32, i32* %k, align 4, !dbg !6384
  %idxprom270 = sext i32 %148 to i64, !dbg !6385
  %pulse_sign271 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 5, !dbg !6386
  %arrayidx272 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_sign271, i64 0, i64 %idxprom270, !dbg !6385
  %149 = load i32, i32* %arrayidx272, align 4, !dbg !6385
  %conv273 = trunc i32 %149 to i16, !dbg !6385
  %150 = load i32, i32* %k, align 4, !dbg !6387
  %idxprom274 = sext i32 %150 to i64, !dbg !6388
  %pulse_pos275 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6389
  %arrayidx276 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos275, i64 0, i64 %idxprom274, !dbg !6388
  %151 = load i32, i32* %arrayidx276, align 4, !dbg !6388
  %idxprom277 = sext i32 %151 to i64, !dbg !6390
  %arrayidx278 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom277, !dbg !6390
  store i16 %conv273, i16* %arrayidx278, align 2, !dbg !6391
  br label %for.inc279, !dbg !6390

for.inc279:                                       ; preds = %for.body269
  %152 = load i32, i32* %k, align 4, !dbg !6392
  %inc280 = add nsw i32 %152, 1, !dbg !6392
  store i32 %inc280, i32* %k, align 4, !dbg !6392
  br label %for.cond266, !dbg !6394, !llvm.loop !6395

for.end281:                                       ; preds = %for.cond266
  store i32 59, i32* %k, align 4, !dbg !6397
  br label %for.cond282, !dbg !6398

for.cond282:                                      ; preds = %for.inc312, %for.end281
  %153 = load i32, i32* %k, align 4, !dbg !6399
  %cmp283 = icmp sge i32 %153, 0, !dbg !6401
  br i1 %cmp283, label %for.body285, label %for.end314, !dbg !6402

for.body285:                                      ; preds = %for.cond282
  store i64 0, i64* %temp, align 8, !dbg !6403
  store i32 0, i32* %l, align 4, !dbg !6404
  br label %for.cond286, !dbg !6405

for.cond286:                                      ; preds = %for.inc304, %for.body285
  %154 = load i32, i32* %l, align 4, !dbg !6406
  %155 = load i32, i32* %k, align 4, !dbg !6408
  %cmp287 = icmp sle i32 %154, %155, !dbg !6409
  br i1 %cmp287, label %for.body289, label %for.end306, !dbg !6410

for.body289:                                      ; preds = %for.cond286
  call void @llvm.dbg.declare(metadata i32* %prod, metadata !6411, metadata !1756), !dbg !6412
  %156 = load i32, i32* %l, align 4, !dbg !6413
  %idxprom290 = sext i32 %156 to i64, !dbg !6414
  %arrayidx291 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom290, !dbg !6414
  %157 = load i16, i16* %arrayidx291, align 2, !dbg !6414
  %conv292 = sext i16 %157 to i64, !dbg !6415
  %158 = load i32, i32* %k, align 4, !dbg !6416
  %159 = load i32, i32* %l, align 4, !dbg !6417
  %sub293 = sub nsw i32 %158, %159, !dbg !6418
  %idxprom294 = sext i32 %sub293 to i64, !dbg !6419
  %arrayidx295 = getelementptr inbounds [60 x i16], [60 x i16]* %impulse_r, i64 0, i64 %idxprom294, !dbg !6419
  %160 = load i16, i16* %arrayidx295, align 2, !dbg !6419
  %conv296 = sext i16 %160 to i64, !dbg !6419
  %mul297 = mul nsw i64 %conv292, %conv296, !dbg !6420
  %shl298 = shl i64 %mul297, 1, !dbg !6421
  store i64 %shl298, i64* %a.addr.i443, align 8, !dbg !6422
  %161 = load i64, i64* %a.addr.i443, align 8, !dbg !6423
  %add.i444 = add nsw i64 %161, 2147483648, !dbg !6424
  %and.i445 = and i64 %add.i444, -4294967296, !dbg !6425
  %tobool.i446 = icmp ne i64 %and.i445, 0, !dbg !6425
  br i1 %tobool.i446, label %if.then.i450, label %if.else.i452, !dbg !6426

if.then.i450:                                     ; preds = %for.body289
  %162 = load i64, i64* %a.addr.i443, align 8, !dbg !6427
  %shr.i447 = ashr i64 %162, 63, !dbg !6428
  %xor.i448 = xor i64 %shr.i447, 2147483647, !dbg !6429
  %conv.i449 = trunc i64 %xor.i448 to i32, !dbg !6430
  store i32 %conv.i449, i32* %retval.i442, align 4, !dbg !6431
  br label %av_clipl_int32_c.exit453, !dbg !6431

if.else.i452:                                     ; preds = %for.body289
  %163 = load i64, i64* %a.addr.i443, align 8, !dbg !6432
  %conv1.i451 = trunc i64 %163 to i32, !dbg !6433
  store i32 %conv1.i451, i32* %retval.i442, align 4, !dbg !6434
  br label %av_clipl_int32_c.exit453, !dbg !6434

av_clipl_int32_c.exit453:                         ; preds = %if.then.i450, %if.else.i452
  %164 = load i32, i32* %retval.i442, align 4, !dbg !6435
  store i32 %164, i32* %prod, align 4, !dbg !6412
  %165 = load i64, i64* %temp, align 8, !dbg !6436
  %166 = load i32, i32* %prod, align 4, !dbg !6437
  %conv300 = sext i32 %166 to i64, !dbg !6437
  %add301 = add nsw i64 %165, %conv300, !dbg !6438
  store i64 %add301, i64* %a.addr.i431, align 8, !dbg !6439
  %167 = load i64, i64* %a.addr.i431, align 8, !dbg !6440
  %add.i432 = add nsw i64 %167, 2147483648, !dbg !6441
  %and.i433 = and i64 %add.i432, -4294967296, !dbg !6442
  %tobool.i434 = icmp ne i64 %and.i433, 0, !dbg !6442
  br i1 %tobool.i434, label %if.then.i438, label %if.else.i440, !dbg !6443

if.then.i438:                                     ; preds = %av_clipl_int32_c.exit453
  %168 = load i64, i64* %a.addr.i431, align 8, !dbg !6444
  %shr.i435 = ashr i64 %168, 63, !dbg !6445
  %xor.i436 = xor i64 %shr.i435, 2147483647, !dbg !6446
  %conv.i437 = trunc i64 %xor.i436 to i32, !dbg !6447
  store i32 %conv.i437, i32* %retval.i430, align 4, !dbg !6448
  br label %av_clipl_int32_c.exit441, !dbg !6448

if.else.i440:                                     ; preds = %av_clipl_int32_c.exit453
  %169 = load i64, i64* %a.addr.i431, align 8, !dbg !6449
  %conv1.i439 = trunc i64 %169 to i32, !dbg !6450
  store i32 %conv1.i439, i32* %retval.i430, align 4, !dbg !6451
  br label %av_clipl_int32_c.exit441, !dbg !6451

av_clipl_int32_c.exit441:                         ; preds = %if.then.i438, %if.else.i440
  %170 = load i32, i32* %retval.i430, align 4, !dbg !6452
  %conv303 = sext i32 %170 to i64, !dbg !6439
  store i64 %conv303, i64* %temp, align 8, !dbg !6453
  br label %for.inc304, !dbg !6454

for.inc304:                                       ; preds = %av_clipl_int32_c.exit441
  %171 = load i32, i32* %l, align 4, !dbg !6455
  %inc305 = add nsw i32 %171, 1, !dbg !6455
  store i32 %inc305, i32* %l, align 4, !dbg !6455
  br label %for.cond286, !dbg !6457, !llvm.loop !6458

for.end306:                                       ; preds = %for.cond286
  %172 = load i64, i64* %temp, align 8, !dbg !6460
  %shl307 = shl i64 %172, 2, !dbg !6461
  %shr308 = ashr i64 %shl307, 16, !dbg !6462
  %conv309 = trunc i64 %shr308 to i16, !dbg !6460
  %173 = load i32, i32* %k, align 4, !dbg !6463
  %idxprom310 = sext i32 %173 to i64, !dbg !6464
  %arrayidx311 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom310, !dbg !6464
  store i16 %conv309, i16* %arrayidx311, align 2, !dbg !6465
  br label %for.inc312, !dbg !6466

for.inc312:                                       ; preds = %for.end306
  %174 = load i32, i32* %k, align 4, !dbg !6467
  %dec313 = add nsw i32 %174, -1, !dbg !6467
  store i32 %dec313, i32* %k, align 4, !dbg !6467
  br label %for.cond282, !dbg !6469, !llvm.loop !6470

for.end314:                                       ; preds = %for.cond282
  store i32 0, i32* %err, align 4, !dbg !6472
  store i32 0, i32* %k, align 4, !dbg !6473
  br label %for.cond315, !dbg !6474

for.cond315:                                      ; preds = %for.inc345, %for.end314
  %175 = load i32, i32* %k, align 4, !dbg !6475
  %cmp316 = icmp slt i32 %175, 60, !dbg !6477
  br i1 %cmp316, label %for.body318, label %for.end347, !dbg !6478

for.body318:                                      ; preds = %for.cond315
  call void @llvm.dbg.declare(metadata i64* %prod319, metadata !6479, metadata !1756), !dbg !6480
  %176 = load i32, i32* %k, align 4, !dbg !6481
  %idxprom320 = sext i32 %176 to i64, !dbg !6482
  %177 = load i16*, i16** %buf.addr, align 8, !dbg !6482
  %arrayidx321 = getelementptr inbounds i16, i16* %177, i64 %idxprom320, !dbg !6482
  %178 = load i16, i16* %arrayidx321, align 2, !dbg !6482
  %conv322 = sext i16 %178 to i64, !dbg !6483
  %179 = load i32, i32* %k, align 4, !dbg !6484
  %idxprom323 = sext i32 %179 to i64, !dbg !6485
  %arrayidx324 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom323, !dbg !6485
  %180 = load i16, i16* %arrayidx324, align 2, !dbg !6485
  %conv325 = sext i16 %180 to i64, !dbg !6485
  %mul326 = mul nsw i64 %conv322, %conv325, !dbg !6486
  %shl327 = shl i64 %mul326, 1, !dbg !6487
  store i64 %shl327, i64* %a.addr.i419, align 8, !dbg !6488
  %181 = load i64, i64* %a.addr.i419, align 8, !dbg !6489
  %add.i420 = add nsw i64 %181, 2147483648, !dbg !6490
  %and.i421 = and i64 %add.i420, -4294967296, !dbg !6491
  %tobool.i422 = icmp ne i64 %and.i421, 0, !dbg !6491
  br i1 %tobool.i422, label %if.then.i426, label %if.else.i428, !dbg !6492

if.then.i426:                                     ; preds = %for.body318
  %182 = load i64, i64* %a.addr.i419, align 8, !dbg !6493
  %shr.i423 = ashr i64 %182, 63, !dbg !6494
  %xor.i424 = xor i64 %shr.i423, 2147483647, !dbg !6495
  %conv.i425 = trunc i64 %xor.i424 to i32, !dbg !6496
  store i32 %conv.i425, i32* %retval.i418, align 4, !dbg !6497
  br label %av_clipl_int32_c.exit429, !dbg !6497

if.else.i428:                                     ; preds = %for.body318
  %183 = load i64, i64* %a.addr.i419, align 8, !dbg !6498
  %conv1.i427 = trunc i64 %183 to i32, !dbg !6499
  store i32 %conv1.i427, i32* %retval.i418, align 4, !dbg !6500
  br label %av_clipl_int32_c.exit429, !dbg !6500

av_clipl_int32_c.exit429:                         ; preds = %if.then.i426, %if.else.i428
  %184 = load i32, i32* %retval.i418, align 4, !dbg !6501
  %conv329 = sext i32 %184 to i64, !dbg !6488
  store i64 %conv329, i64* %prod319, align 8, !dbg !6502
  %185 = load i32, i32* %err, align 4, !dbg !6503
  %conv330 = sext i32 %185 to i64, !dbg !6503
  %186 = load i64, i64* %prod319, align 8, !dbg !6504
  %sub331 = sub nsw i64 %conv330, %186, !dbg !6505
  store i64 %sub331, i64* %a.addr.i407, align 8, !dbg !6506
  %187 = load i64, i64* %a.addr.i407, align 8, !dbg !6507
  %add.i408 = add nsw i64 %187, 2147483648, !dbg !6508
  %and.i409 = and i64 %add.i408, -4294967296, !dbg !6509
  %tobool.i410 = icmp ne i64 %and.i409, 0, !dbg !6509
  br i1 %tobool.i410, label %if.then.i414, label %if.else.i416, !dbg !6510

if.then.i414:                                     ; preds = %av_clipl_int32_c.exit429
  %188 = load i64, i64* %a.addr.i407, align 8, !dbg !6511
  %shr.i411 = ashr i64 %188, 63, !dbg !6512
  %xor.i412 = xor i64 %shr.i411, 2147483647, !dbg !6513
  %conv.i413 = trunc i64 %xor.i412 to i32, !dbg !6514
  store i32 %conv.i413, i32* %retval.i406, align 4, !dbg !6515
  br label %av_clipl_int32_c.exit417, !dbg !6515

if.else.i416:                                     ; preds = %av_clipl_int32_c.exit429
  %189 = load i64, i64* %a.addr.i407, align 8, !dbg !6516
  %conv1.i415 = trunc i64 %189 to i32, !dbg !6517
  store i32 %conv1.i415, i32* %retval.i406, align 4, !dbg !6518
  br label %av_clipl_int32_c.exit417, !dbg !6518

av_clipl_int32_c.exit417:                         ; preds = %if.then.i414, %if.else.i416
  %190 = load i32, i32* %retval.i406, align 4, !dbg !6519
  store i32 %190, i32* %err, align 4, !dbg !6520
  %191 = load i32, i32* %k, align 4, !dbg !6521
  %idxprom333 = sext i32 %191 to i64, !dbg !6522
  %arrayidx334 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom333, !dbg !6522
  %192 = load i16, i16* %arrayidx334, align 2, !dbg !6522
  %conv335 = sext i16 %192 to i64, !dbg !6523
  %193 = load i32, i32* %k, align 4, !dbg !6524
  %idxprom336 = sext i32 %193 to i64, !dbg !6525
  %arrayidx337 = getelementptr inbounds [60 x i16], [60 x i16]* %temp_corr, i64 0, i64 %idxprom336, !dbg !6525
  %194 = load i16, i16* %arrayidx337, align 2, !dbg !6525
  %conv338 = sext i16 %194 to i64, !dbg !6525
  %mul339 = mul nsw i64 %conv335, %conv338, !dbg !6526
  store i64 %mul339, i64* %a.addr.i395, align 8, !dbg !6527
  %195 = load i64, i64* %a.addr.i395, align 8, !dbg !6528
  %add.i396 = add nsw i64 %195, 2147483648, !dbg !6529
  %and.i397 = and i64 %add.i396, -4294967296, !dbg !6530
  %tobool.i398 = icmp ne i64 %and.i397, 0, !dbg !6530
  br i1 %tobool.i398, label %if.then.i402, label %if.else.i404, !dbg !6531

if.then.i402:                                     ; preds = %av_clipl_int32_c.exit417
  %196 = load i64, i64* %a.addr.i395, align 8, !dbg !6532
  %shr.i399 = ashr i64 %196, 63, !dbg !6533
  %xor.i400 = xor i64 %shr.i399, 2147483647, !dbg !6534
  %conv.i401 = trunc i64 %xor.i400 to i32, !dbg !6535
  store i32 %conv.i401, i32* %retval.i394, align 4, !dbg !6536
  br label %av_clipl_int32_c.exit405, !dbg !6536

if.else.i404:                                     ; preds = %av_clipl_int32_c.exit417
  %197 = load i64, i64* %a.addr.i395, align 8, !dbg !6537
  %conv1.i403 = trunc i64 %197 to i32, !dbg !6538
  store i32 %conv1.i403, i32* %retval.i394, align 4, !dbg !6539
  br label %av_clipl_int32_c.exit405, !dbg !6539

av_clipl_int32_c.exit405:                         ; preds = %if.then.i402, %if.else.i404
  %198 = load i32, i32* %retval.i394, align 4, !dbg !6540
  %conv341 = sext i32 %198 to i64, !dbg !6527
  store i64 %conv341, i64* %prod319, align 8, !dbg !6541
  %199 = load i32, i32* %err, align 4, !dbg !6542
  %conv342 = sext i32 %199 to i64, !dbg !6542
  %200 = load i64, i64* %prod319, align 8, !dbg !6543
  %add343 = add nsw i64 %conv342, %200, !dbg !6544
  store i64 %add343, i64* %a.addr.i383, align 8, !dbg !6545
  %201 = load i64, i64* %a.addr.i383, align 8, !dbg !6546
  %add.i384 = add nsw i64 %201, 2147483648, !dbg !6547
  %and.i385 = and i64 %add.i384, -4294967296, !dbg !6548
  %tobool.i386 = icmp ne i64 %and.i385, 0, !dbg !6548
  br i1 %tobool.i386, label %if.then.i390, label %if.else.i392, !dbg !6549

if.then.i390:                                     ; preds = %av_clipl_int32_c.exit405
  %202 = load i64, i64* %a.addr.i383, align 8, !dbg !6550
  %shr.i387 = ashr i64 %202, 63, !dbg !6551
  %xor.i388 = xor i64 %shr.i387, 2147483647, !dbg !6552
  %conv.i389 = trunc i64 %xor.i388 to i32, !dbg !6553
  store i32 %conv.i389, i32* %retval.i382, align 4, !dbg !6554
  br label %av_clipl_int32_c.exit393, !dbg !6554

if.else.i392:                                     ; preds = %av_clipl_int32_c.exit405
  %203 = load i64, i64* %a.addr.i383, align 8, !dbg !6555
  %conv1.i391 = trunc i64 %203 to i32, !dbg !6556
  store i32 %conv1.i391, i32* %retval.i382, align 4, !dbg !6557
  br label %av_clipl_int32_c.exit393, !dbg !6557

av_clipl_int32_c.exit393:                         ; preds = %if.then.i390, %if.else.i392
  %204 = load i32, i32* %retval.i382, align 4, !dbg !6558
  store i32 %204, i32* %err, align 4, !dbg !6559
  br label %for.inc345, !dbg !6560

for.inc345:                                       ; preds = %av_clipl_int32_c.exit393
  %205 = load i32, i32* %k, align 4, !dbg !6561
  %inc346 = add nsw i32 %205, 1, !dbg !6561
  store i32 %inc346, i32* %k, align 4, !dbg !6561
  br label %for.cond315, !dbg !6563, !llvm.loop !6564

for.end347:                                       ; preds = %for.cond315
  %206 = load i32, i32* %err, align 4, !dbg !6566
  %207 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6568
  %min_err = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %207, i32 0, i32 0, !dbg !6569
  %208 = load i32, i32* %min_err, align 4, !dbg !6569
  %cmp348 = icmp slt i32 %206, %208, !dbg !6570
  br i1 %cmp348, label %if.then350, label %if.end375, !dbg !6571

if.then350:                                       ; preds = %for.end347
  %209 = load i32, i32* %err, align 4, !dbg !6572
  %210 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6574
  %min_err351 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %210, i32 0, i32 0, !dbg !6575
  store i32 %209, i32* %min_err351, align 4, !dbg !6576
  %211 = load i32, i32* %i, align 4, !dbg !6577
  %212 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6578
  %grid_index = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %212, i32 0, i32 2, !dbg !6579
  store i32 %211, i32* %grid_index, align 4, !dbg !6580
  %amp_index352 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 1, !dbg !6581
  %213 = load i32, i32* %amp_index352, align 4, !dbg !6581
  %214 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6582
  %amp_index353 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %214, i32 0, i32 1, !dbg !6583
  store i32 %213, i32* %amp_index353, align 4, !dbg !6584
  %dirac_train354 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 3, !dbg !6585
  %215 = load i32, i32* %dirac_train354, align 4, !dbg !6585
  %216 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6586
  %dirac_train355 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %216, i32 0, i32 3, !dbg !6587
  store i32 %215, i32* %dirac_train355, align 4, !dbg !6588
  store i32 0, i32* %k, align 4, !dbg !6589
  br label %for.cond356, !dbg !6591

for.cond356:                                      ; preds = %for.inc372, %if.then350
  %217 = load i32, i32* %k, align 4, !dbg !6592
  %218 = load i32, i32* %pulse_cnt.addr, align 4, !dbg !6595
  %cmp357 = icmp slt i32 %217, %218, !dbg !6596
  br i1 %cmp357, label %for.body359, label %for.end374, !dbg !6597

for.body359:                                      ; preds = %for.cond356
  %219 = load i32, i32* %k, align 4, !dbg !6598
  %idxprom360 = sext i32 %219 to i64, !dbg !6600
  %pulse_sign361 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 5, !dbg !6601
  %arrayidx362 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_sign361, i64 0, i64 %idxprom360, !dbg !6600
  %220 = load i32, i32* %arrayidx362, align 4, !dbg !6600
  %221 = load i32, i32* %k, align 4, !dbg !6602
  %idxprom363 = sext i32 %221 to i64, !dbg !6603
  %222 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6603
  %pulse_sign364 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %222, i32 0, i32 5, !dbg !6604
  %arrayidx365 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_sign364, i64 0, i64 %idxprom363, !dbg !6603
  store i32 %220, i32* %arrayidx365, align 4, !dbg !6605
  %223 = load i32, i32* %k, align 4, !dbg !6606
  %idxprom366 = sext i32 %223 to i64, !dbg !6607
  %pulse_pos367 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %param, i32 0, i32 4, !dbg !6608
  %arrayidx368 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos367, i64 0, i64 %idxprom366, !dbg !6607
  %224 = load i32, i32* %arrayidx368, align 4, !dbg !6607
  %225 = load i32, i32* %k, align 4, !dbg !6609
  %idxprom369 = sext i32 %225 to i64, !dbg !6610
  %226 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6610
  %pulse_pos370 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %226, i32 0, i32 4, !dbg !6611
  %arrayidx371 = getelementptr inbounds [6 x i32], [6 x i32]* %pulse_pos370, i64 0, i64 %idxprom369, !dbg !6610
  store i32 %224, i32* %arrayidx371, align 4, !dbg !6612
  br label %for.inc372, !dbg !6613

for.inc372:                                       ; preds = %for.body359
  %227 = load i32, i32* %k, align 4, !dbg !6614
  %inc373 = add nsw i32 %227, 1, !dbg !6614
  store i32 %inc373, i32* %k, align 4, !dbg !6614
  br label %for.cond356, !dbg !6616, !llvm.loop !6617

for.end374:                                       ; preds = %for.cond356
  br label %if.end375, !dbg !6619

if.end375:                                        ; preds = %for.end374, %for.end347
  br label %for.inc376, !dbg !6620

for.inc376:                                       ; preds = %if.end375
  %228 = load i32, i32* %j, align 4, !dbg !6621
  %inc377 = add nsw i32 %228, 1, !dbg !6621
  store i32 %inc377, i32* %j, align 4, !dbg !6621
  br label %for.cond126, !dbg !6623, !llvm.loop !6624

for.end378:                                       ; preds = %for.cond126
  br label %for.inc379, !dbg !6626

for.inc379:                                       ; preds = %for.end378
  %229 = load i32, i32* %i, align 4, !dbg !6627
  %inc380 = add nsw i32 %229, 1, !dbg !6627
  store i32 %inc380, i32* %i, align 4, !dbg !6627
  br label %for.cond64, !dbg !6629, !llvm.loop !6630

for.end381:                                       ; preds = %for.cond64
  ret void, !dbg !6632
}

; Function Attrs: nounwind uwtable
define internal void @pack_fcb_param(%struct.G723_1_Subframe* %subfrm, %struct.FCBParam* %optim, i16* %buf, i32 %pulse_cnt) #1 !dbg !6633 {
entry:
  %subfrm.addr = alloca %struct.G723_1_Subframe*, align 8
  %optim.addr = alloca %struct.FCBParam*, align 8
  %buf.addr = alloca i16*, align 8
  %pulse_cnt.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.G723_1_Subframe* %subfrm, %struct.G723_1_Subframe** %subfrm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.G723_1_Subframe** %subfrm.addr, metadata !6637, metadata !1756), !dbg !6638
  store %struct.FCBParam* %optim, %struct.FCBParam** %optim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FCBParam** %optim.addr, metadata !6639, metadata !1756), !dbg !6640
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !6641, metadata !1756), !dbg !6642
  store i32 %pulse_cnt, i32* %pulse_cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pulse_cnt.addr, metadata !6643, metadata !1756), !dbg !6644
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6645, metadata !1756), !dbg !6646
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6647, metadata !1756), !dbg !6648
  %0 = load i32, i32* %pulse_cnt.addr, align 4, !dbg !6649
  %sub = sub nsw i32 6, %0, !dbg !6650
  store i32 %sub, i32* %j, align 4, !dbg !6651
  %1 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6652
  %pulse_sign = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %1, i32 0, i32 3, !dbg !6653
  store i32 0, i32* %pulse_sign, align 4, !dbg !6654
  %2 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6655
  %pulse_pos = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %2, i32 0, i32 6, !dbg !6656
  store i32 0, i32* %pulse_pos, align 4, !dbg !6657
  store i32 0, i32* %i, align 4, !dbg !6658
  br label %for.cond, !dbg !6660

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !6661
  %cmp = icmp slt i32 %3, 30, !dbg !6664
  br i1 %cmp, label %for.body, label %for.end, !dbg !6665

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6666, metadata !1756), !dbg !6668
  %4 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6669
  %grid_index = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %4, i32 0, i32 2, !dbg !6670
  %5 = load i32, i32* %grid_index, align 4, !dbg !6670
  %6 = load i32, i32* %i, align 4, !dbg !6671
  %shl = shl i32 %6, 1, !dbg !6672
  %add = add nsw i32 %5, %shl, !dbg !6673
  %idxprom = sext i32 %add to i64, !dbg !6674
  %7 = load i16*, i16** %buf.addr, align 8, !dbg !6674
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !6674
  %8 = load i16, i16* %arrayidx, align 2, !dbg !6674
  %conv = sext i16 %8 to i32, !dbg !6674
  store i32 %conv, i32* %val, align 4, !dbg !6668
  %9 = load i32, i32* %val, align 4, !dbg !6675
  %tobool = icmp ne i32 %9, 0, !dbg !6675
  br i1 %tobool, label %if.else, label %if.then, !dbg !6677

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6678
  %idxprom1 = sext i32 %10 to i64, !dbg !6680
  %11 = load i32, i32* %j, align 4, !dbg !6681
  %idxprom2 = sext i32 %11 to i64, !dbg !6680
  %arrayidx3 = getelementptr inbounds [6 x [30 x i32]], [6 x [30 x i32]]* @combinatorial_table, i64 0, i64 %idxprom2, !dbg !6680
  %arrayidx4 = getelementptr inbounds [30 x i32], [30 x i32]* %arrayidx3, i64 0, i64 %idxprom1, !dbg !6680
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !6680
  %13 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6682
  %pulse_pos5 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %13, i32 0, i32 6, !dbg !6683
  %14 = load i32, i32* %pulse_pos5, align 4, !dbg !6684
  %add6 = add nsw i32 %14, %12, !dbg !6684
  store i32 %add6, i32* %pulse_pos5, align 4, !dbg !6684
  br label %if.end18, !dbg !6685

if.else:                                          ; preds = %for.body
  %15 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6686
  %pulse_sign7 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %15, i32 0, i32 3, !dbg !6688
  %16 = load i32, i32* %pulse_sign7, align 4, !dbg !6689
  %shl8 = shl i32 %16, 1, !dbg !6689
  store i32 %shl8, i32* %pulse_sign7, align 4, !dbg !6689
  %17 = load i32, i32* %val, align 4, !dbg !6690
  %cmp9 = icmp slt i32 %17, 0, !dbg !6692
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !6693

if.then11:                                        ; preds = %if.else
  %18 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6694
  %pulse_sign12 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %18, i32 0, i32 3, !dbg !6695
  %19 = load i32, i32* %pulse_sign12, align 4, !dbg !6696
  %inc = add nsw i32 %19, 1, !dbg !6696
  store i32 %inc, i32* %pulse_sign12, align 4, !dbg !6696
  br label %if.end, !dbg !6694

if.end:                                           ; preds = %if.then11, %if.else
  %20 = load i32, i32* %j, align 4, !dbg !6697
  %inc13 = add nsw i32 %20, 1, !dbg !6697
  store i32 %inc13, i32* %j, align 4, !dbg !6697
  %21 = load i32, i32* %j, align 4, !dbg !6698
  %cmp14 = icmp eq i32 %21, 6, !dbg !6700
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6701

if.then16:                                        ; preds = %if.end
  br label %for.end, !dbg !6702

if.end17:                                         ; preds = %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  br label %for.inc, !dbg !6703

for.inc:                                          ; preds = %if.end18
  %22 = load i32, i32* %i, align 4, !dbg !6704
  %inc19 = add nsw i32 %22, 1, !dbg !6704
  store i32 %inc19, i32* %i, align 4, !dbg !6704
  br label %for.cond, !dbg !6706, !llvm.loop !6707

for.end:                                          ; preds = %if.then16, %for.cond
  %23 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6709
  %amp_index = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %23, i32 0, i32 1, !dbg !6710
  %24 = load i32, i32* %amp_index, align 4, !dbg !6710
  %25 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6711
  %amp_index20 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %25, i32 0, i32 5, !dbg !6712
  store i32 %24, i32* %amp_index20, align 4, !dbg !6713
  %26 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6714
  %grid_index21 = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %26, i32 0, i32 2, !dbg !6715
  %27 = load i32, i32* %grid_index21, align 4, !dbg !6715
  %28 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6716
  %grid_index22 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %28, i32 0, i32 4, !dbg !6717
  store i32 %27, i32* %grid_index22, align 4, !dbg !6718
  %29 = load %struct.FCBParam*, %struct.FCBParam** %optim.addr, align 8, !dbg !6719
  %dirac_train = getelementptr inbounds %struct.FCBParam, %struct.FCBParam* %29, i32 0, i32 3, !dbg !6720
  %30 = load i32, i32* %dirac_train, align 4, !dbg !6720
  %31 = load %struct.G723_1_Subframe*, %struct.G723_1_Subframe** %subfrm.addr, align 8, !dbg !6721
  %dirac_train23 = getelementptr inbounds %struct.G723_1_Subframe, %struct.G723_1_Subframe* %31, i32 0, i32 2, !dbg !6722
  store i32 %30, i32* %dirac_train23, align 4, !dbg !6723
  ret void, !dbg !6724
}

declare void @ff_g723_1_gen_dirac_train(i16*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #5 !dbg !6725 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !6729, metadata !1756), !dbg !6730
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6731, metadata !1756), !dbg !6732
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !6733, metadata !1756), !dbg !6734
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !6735
  %cmp = icmp slt i32 %0, 0, !dbg !6737
  br i1 %cmp, label %if.then, label %if.end, !dbg !6738

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !6739
  store i8* null, i8** %buffer.addr, align 8, !dbg !6741
  br label %if.end, !dbg !6742

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !6743
  %mul = mul nsw i32 8, %1, !dbg !6744
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6745
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !6746
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !6747
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !6748
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6749
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !6750
  store i8* %3, i8** %buf, align 8, !dbg !6751
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6752
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !6753
  %6 = load i8*, i8** %buf1, align 8, !dbg !6753
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !6754
  %idx.ext = sext i32 %7 to i64, !dbg !6755
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !6755
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6756
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !6757
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !6758
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6759
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !6760
  %10 = load i8*, i8** %buf2, align 8, !dbg !6760
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6761
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !6762
  store i8* %10, i8** %buf_ptr, align 8, !dbg !6763
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6764
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !6765
  store i32 32, i32* %bit_left, align 4, !dbg !6766
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6767
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !6768
  store i32 0, i32* %bit_buf, align 8, !dbg !6769
  ret void, !dbg !6770
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #5 !dbg !6771 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !6774, metadata !1756), !dbg !6775
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6776, metadata !1756), !dbg !6777
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6778, metadata !1756), !dbg !6779
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !6780, metadata !1756), !dbg !6781
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !6782, metadata !1756), !dbg !6783
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6784
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !6785
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !6785
  store i32 %1, i32* %bit_buf, align 4, !dbg !6786
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6787
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !6788
  %3 = load i32, i32* %bit_left2, align 4, !dbg !6788
  store i32 %3, i32* %bit_left, align 4, !dbg !6789
  %4 = load i32, i32* %value.addr, align 4, !dbg !6790
  %5 = load i32, i32* %bit_left, align 4, !dbg !6791
  %sub = sub nsw i32 32, %5, !dbg !6792
  %shl = shl i32 %4, %sub, !dbg !6793
  %6 = load i32, i32* %bit_buf, align 4, !dbg !6794
  %or = or i32 %6, %shl, !dbg !6794
  store i32 %or, i32* %bit_buf, align 4, !dbg !6794
  %7 = load i32, i32* %n.addr, align 4, !dbg !6795
  %8 = load i32, i32* %bit_left, align 4, !dbg !6797
  %cmp = icmp sge i32 %7, %8, !dbg !6798
  br i1 %cmp, label %if.then, label %if.end7, !dbg !6799

if.then:                                          ; preds = %entry
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6800
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 4, !dbg !6803
  %10 = load i8*, i8** %buf_end, align 8, !dbg !6803
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6804
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !6805
  %12 = load i8*, i8** %buf_ptr, align 8, !dbg !6805
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !6806
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !6806
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6806
  %cmp3 = icmp slt i64 3, %sub.ptr.sub, !dbg !6807
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !6808

if.then4:                                         ; preds = %if.then
  %13 = load i32, i32* %bit_buf, align 4, !dbg !6809
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6811
  %buf_ptr5 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !6812
  %15 = load i8*, i8** %buf_ptr5, align 8, !dbg !6812
  %16 = bitcast i8* %15 to %union.unaligned_32*, !dbg !6813
  %l = bitcast %union.unaligned_32* %16 to i32*, !dbg !6813
  store i32 %13, i32* %l, align 1, !dbg !6814
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6815
  %buf_ptr6 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 3, !dbg !6816
  %18 = load i8*, i8** %buf_ptr6, align 8, !dbg !6817
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 4, !dbg !6817
  store i8* %add.ptr, i8** %buf_ptr6, align 8, !dbg !6817
  br label %if.end, !dbg !6818

if.else:                                          ; preds = %if.then
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i32 0, i32 0)), !dbg !6819
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %19 = load i32, i32* %value.addr, align 4, !dbg !6821
  %20 = load i32, i32* %bit_left, align 4, !dbg !6822
  %shr = lshr i32 %19, %20, !dbg !6823
  store i32 %shr, i32* %bit_buf, align 4, !dbg !6824
  %21 = load i32, i32* %bit_left, align 4, !dbg !6825
  %add = add nsw i32 %21, 32, !dbg !6825
  store i32 %add, i32* %bit_left, align 4, !dbg !6825
  br label %if.end7, !dbg !6826

if.end7:                                          ; preds = %if.end, %entry
  %22 = load i32, i32* %n.addr, align 4, !dbg !6827
  %23 = load i32, i32* %bit_left, align 4, !dbg !6828
  %sub8 = sub nsw i32 %23, %22, !dbg !6828
  store i32 %sub8, i32* %bit_left, align 4, !dbg !6828
  %24 = load i32, i32* %bit_buf, align 4, !dbg !6829
  %25 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6830
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %25, i32 0, i32 0, !dbg !6831
  store i32 %24, i32* %bit_buf9, align 8, !dbg !6832
  %26 = load i32, i32* %bit_left, align 4, !dbg !6833
  %27 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6834
  %bit_left10 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %27, i32 0, i32 1, !dbg !6835
  store i32 %26, i32* %bit_left10, align 4, !dbg !6836
  ret void, !dbg !6837
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_put_bits(%struct.PutBitContext* %s, i32 %n) #5 !dbg !6838 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !6841, metadata !1756), !dbg !6842
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6843, metadata !1756), !dbg !6844
  %0 = load i32, i32* %n.addr, align 4, !dbg !6845
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6846
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %1, i32 0, i32 1, !dbg !6847
  %2 = load i32, i32* %bit_left, align 4, !dbg !6848
  %sub = sub nsw i32 %2, %0, !dbg !6848
  store i32 %sub, i32* %bit_left, align 4, !dbg !6848
  %3 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6849
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %3, i32 0, i32 1, !dbg !6850
  %4 = load i32, i32* %bit_left1, align 4, !dbg !6850
  %shr = ashr i32 %4, 5, !dbg !6851
  %mul = mul nsw i32 4, %shr, !dbg !6852
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6853
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 3, !dbg !6854
  %6 = load i8*, i8** %buf_ptr, align 8, !dbg !6855
  %idx.ext = sext i32 %mul to i64, !dbg !6855
  %idx.neg = sub i64 0, %idx.ext, !dbg !6855
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.neg, !dbg !6855
  store i8* %add.ptr, i8** %buf_ptr, align 8, !dbg !6855
  %7 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6856
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %7, i32 0, i32 1, !dbg !6857
  %8 = load i32, i32* %bit_left2, align 4, !dbg !6858
  %and = and i32 %8, 31, !dbg !6858
  store i32 %and, i32* %bit_left2, align 4, !dbg !6858
  ret void, !dbg !6859
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #5 !dbg !6860 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !6863, metadata !1756), !dbg !6864
  br label %while.cond, !dbg !6865

while.cond:                                       ; preds = %do.end, %entry
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6866
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !6868
  %1 = load i32, i32* %bit_left, align 4, !dbg !6868
  %cmp = icmp slt i32 %1, 32, !dbg !6869
  br i1 %cmp, label %while.body, label %while.end, !dbg !6870

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !6871, !llvm.loop !6873

do.body:                                          ; preds = %while.body
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6874
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 3, !dbg !6878
  %3 = load i8*, i8** %buf_ptr, align 8, !dbg !6878
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6879
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 4, !dbg !6880
  %5 = load i8*, i8** %buf_end, align 8, !dbg !6880
  %cmp1 = icmp ult i8* %3, %5, !dbg !6881
  br i1 %cmp1, label %if.end, label %if.then, !dbg !6882

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), i32 108), !dbg !6883
  call void @abort() #7, !dbg !6886
  unreachable, !dbg !6888

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !6889

do.end:                                           ; preds = %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6891
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 0, !dbg !6892
  %7 = load i32, i32* %bit_buf, align 8, !dbg !6892
  %conv = trunc i32 %7 to i8, !dbg !6891
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6893
  %buf_ptr2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !6894
  %9 = load i8*, i8** %buf_ptr2, align 8, !dbg !6895
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6895
  store i8* %incdec.ptr, i8** %buf_ptr2, align 8, !dbg !6895
  store i8 %conv, i8* %9, align 1, !dbg !6896
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6897
  %bit_buf3 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 0, !dbg !6898
  %11 = load i32, i32* %bit_buf3, align 8, !dbg !6899
  %shr = lshr i32 %11, 8, !dbg !6899
  store i32 %shr, i32* %bit_buf3, align 8, !dbg !6899
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6900
  %bit_left4 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !6901
  %13 = load i32, i32* %bit_left4, align 4, !dbg !6902
  %add = add nsw i32 %13, 8, !dbg !6902
  store i32 %add, i32* %bit_left4, align 4, !dbg !6902
  br label %while.cond, !dbg !6903, !llvm.loop !6905

while.end:                                        ; preds = %while.cond
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6906
  %bit_left5 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 1, !dbg !6907
  store i32 32, i32* %bit_left5, align 4, !dbg !6908
  %15 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !6909
  %bit_buf6 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %15, i32 0, i32 0, !dbg !6910
  store i32 0, i32* %bit_buf6, align 8, !dbg !6911
  ret void, !dbg !6912
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1750, !1751}
!llvm.ident = !{!1752}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !919, globals: !933)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--g723_1enc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909, !915}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FrameType", file: !910, line: 63, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "libavcodec/g723_1.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913, !914}
!912 = !DIEnumerator(name: "ACTIVE_FRAME", value: 0)
!913 = !DIEnumerator(name: "SID_FRAME", value: 1)
!914 = !DIEnumerator(name: "UNTRANSMITTED_FRAME", value: 2)
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Rate", file: !910, line: 72, size: 32, align: 32, elements: !916)
!916 = !{!917, !918}
!917 = !DIEnumerator(name: "RATE_6300", value: 0)
!918 = !DIEnumerator(name: "RATE_5300", value: 1)
!919 = !{!920, !921, !922, !925, !926, !932}
!920 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!921 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !923, line: 40, baseType: !924)
!923 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!924 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !923, line: 38, baseType: !920)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64, align: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !928, line: 221, size: 32, align: 8, elements: !929)
!928 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!929 = !{!930}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !927, file: !928, line: 221, baseType: !931, size: 32, align: 32)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !923, line: 51, baseType: !921)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!933 = !{!934, !1694, !1698, !1705, !1709, !1710, !1711, !1715, !1720, !1721, !1724, !1727, !1731, !1735, !1738, !1742, !1748}
!934 = distinct !DIGlobalVariable(name: "ff_g723_1_encoder", scope: !0, file: !935, line: 1199, type: !936, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_g723_1_encoder)
!935 = !DIFile(filename: "libavcodec/g723_1enc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !938)
!938 = !{!939, !943, !944, !945, !946, !947, !956, !959, !962, !965, !970, !973, !1046, !1054, !1055, !1056, !1058, !1609, !1615, !1623, !1627, !1628, !1665, !1669, !1673, !1674, !1678, !1682, !1683, !1687, !1688, !1689}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !937, file: !14, line: 3475, baseType: !940, size: 64, align: 64)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!942 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !937, file: !14, line: 3480, baseType: !940, size: 64, align: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !937, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !937, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !937, file: !14, line: 3487, baseType: !920, size: 32, align: 32, offset: 192)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !937, file: !14, line: 3488, baseType: !948, size: 64, align: 64, offset: 256)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64, align: 64)
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !951, line: 61, baseType: !952)
!951 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !951, line: 58, size: 64, align: 32, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !952, file: !951, line: 59, baseType: !920, size: 32, align: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !952, file: !951, line: 60, baseType: !920, size: 32, align: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !937, file: !14, line: 3489, baseType: !957, size: 64, align: 64, offset: 320)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64, align: 64)
!958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !937, file: !14, line: 3490, baseType: !960, size: 64, align: 64, offset: 384)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !937, file: !14, line: 3491, baseType: !963, size: 64, align: 64, offset: 448)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64, align: 64)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !937, file: !14, line: 3492, baseType: !966, size: 64, align: 64, offset: 512)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !923, line: 55, baseType: !969)
!969 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !937, file: !14, line: 3493, baseType: !971, size: 8, align: 8, offset: 576)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !923, line: 48, baseType: !972)
!972 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !937, file: !14, line: 3494, baseType: !974, size: 64, align: 64, offset: 640)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64, align: 64)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !978)
!978 = !{!979, !980, !984, !1005, !1006, !1007, !1008, !1012, !1018, !1020, !1024}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !977, file: !713, line: 72, baseType: !940, size: 64, align: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !977, file: !713, line: 78, baseType: !981, size: 64, align: 64, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{!940, !932}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !977, file: !713, line: 85, baseType: !985, size: 64, align: 64, offset: 128)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !988)
!988 = !{!989, !990, !991, !992, !993, !1001, !1002, !1003, !1004}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !987, file: !691, line: 247, baseType: !940, size: 64, align: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !987, file: !691, line: 253, baseType: !940, size: 64, align: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !987, file: !691, line: 259, baseType: !920, size: 32, align: 32, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !987, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !987, file: !691, line: 271, baseType: !994, size: 64, align: 64, offset: 192)
!994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !987, file: !691, line: 265, size: 64, align: 64, elements: !995)
!995 = !{!996, !997, !999, !1000}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !994, file: !691, line: 266, baseType: !922, size: 64, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !994, file: !691, line: 267, baseType: !998, size: 64, align: 64)
!998 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !994, file: !691, line: 268, baseType: !940, size: 64, align: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !994, file: !691, line: 270, baseType: !950, size: 64, align: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !987, file: !691, line: 272, baseType: !998, size: 64, align: 64, offset: 256)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !987, file: !691, line: 273, baseType: !998, size: 64, align: 64, offset: 320)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !987, file: !691, line: 275, baseType: !920, size: 32, align: 32, offset: 384)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !987, file: !691, line: 300, baseType: !940, size: 64, align: 64, offset: 448)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !977, file: !713, line: 93, baseType: !920, size: 32, align: 32, offset: 192)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !977, file: !713, line: 99, baseType: !920, size: 32, align: 32, offset: 224)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !977, file: !713, line: 108, baseType: !920, size: 32, align: 32, offset: 256)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !977, file: !713, line: 113, baseType: !1009, size: 64, align: 64, offset: 320)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!932, !932, !932}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !977, file: !713, line: 123, baseType: !1013, size: 64, align: 64, offset: 384)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!1016, !1016}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !977, file: !713, line: 130, baseType: !1019, size: 32, align: 32, offset: 448)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !977, file: !713, line: 136, baseType: !1021, size: 64, align: 64, offset: 512)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!1019, !932}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !977, file: !713, line: 142, baseType: !1025, size: 64, align: 64, offset: 576)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!920, !1028, !932, !940, !920}
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1031)
!1031 = !{!1032, !1044, !1045}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1030, file: !691, line: 360, baseType: !1033, size: 64, align: 64)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1037)
!1037 = !{!1038, !1039, !1040, !1041, !1042, !1043}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1036, file: !691, line: 307, baseType: !940, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1036, file: !691, line: 313, baseType: !998, size: 64, align: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1036, file: !691, line: 313, baseType: !998, size: 64, align: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1036, file: !691, line: 318, baseType: !998, size: 64, align: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1036, file: !691, line: 318, baseType: !998, size: 64, align: 64, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1036, file: !691, line: 323, baseType: !920, size: 32, align: 32, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1030, file: !691, line: 364, baseType: !920, size: 32, align: 32, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1030, file: !691, line: 368, baseType: !920, size: 32, align: 32, offset: 96)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !937, file: !14, line: 3495, baseType: !1047, size: 64, align: 64, offset: 704)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1050)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1051)
!1051 = !{!1052, !1053}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1050, file: !14, line: 3402, baseType: !920, size: 32, align: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1050, file: !14, line: 3403, baseType: !940, size: 64, align: 64, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !937, file: !14, line: 3507, baseType: !940, size: 64, align: 64, offset: 768)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !937, file: !14, line: 3516, baseType: !920, size: 32, align: 32, offset: 832)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !937, file: !14, line: 3517, baseType: !1057, size: 64, align: 64, offset: 896)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !937, file: !14, line: 3527, baseType: !1059, size: 64, align: 64, offset: 960)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!920, !1062}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1065)
!1065 = !{!1066, !1067, !1068, !1069, !1072, !1073, !1074, !1075, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1355, !1359, !1360, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1547, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1064, file: !14, line: 1561, baseType: !974, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1064, file: !14, line: 1562, baseType: !920, size: 32, align: 32, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1064, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1064, file: !14, line: 1565, baseType: !1070, size: 64, align: 64, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1064, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1064, file: !14, line: 1581, baseType: !921, size: 32, align: 32, offset: 224)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1064, file: !14, line: 1583, baseType: !932, size: 64, align: 64, offset: 256)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1064, file: !14, line: 1591, baseType: !1076, size: 64, align: 64, offset: 320)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1078, line: 129, size: 1664, align: 64, elements: !1079)
!1078 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1079 = !{!1080, !1081, !1082, !1083, !1181, !1202, !1203, !1232, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1077, file: !1078, line: 136, baseType: !920, size: 32, align: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1077, file: !1078, line: 151, baseType: !920, size: 32, align: 32, offset: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1077, file: !1078, line: 157, baseType: !920, size: 32, align: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1077, file: !1078, line: 159, baseType: !1084, size: 64, align: 64, offset: 128)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1087)
!1087 = !{!1088, !1093, !1095, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1133, !1135, !1136, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1169, !1170, !1171, !1172, !1173, !1174, !1177, !1178, !1179, !1180}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1086, file: !744, line: 282, baseType: !1089, size: 512, align: 64)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1090, size: 512, align: 64, elements: !1091)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!1091 = !{!1092}
!1092 = !DISubrange(count: 8)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1086, file: !744, line: 299, baseType: !1094, size: 256, align: 32, offset: 512)
!1094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 256, align: 32, elements: !1091)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1086, file: !744, line: 315, baseType: !1096, size: 64, align: 64, offset: 768)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1086, file: !744, line: 326, baseType: !920, size: 32, align: 32, offset: 832)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1086, file: !744, line: 326, baseType: !920, size: 32, align: 32, offset: 864)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1086, file: !744, line: 334, baseType: !920, size: 32, align: 32, offset: 896)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1086, file: !744, line: 341, baseType: !920, size: 32, align: 32, offset: 928)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1086, file: !744, line: 346, baseType: !920, size: 32, align: 32, offset: 960)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1086, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1086, file: !744, line: 356, baseType: !950, size: 64, align: 32, offset: 1024)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1086, file: !744, line: 361, baseType: !922, size: 64, align: 64, offset: 1088)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1086, file: !744, line: 369, baseType: !922, size: 64, align: 64, offset: 1152)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1086, file: !744, line: 377, baseType: !922, size: 64, align: 64, offset: 1216)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1086, file: !744, line: 382, baseType: !920, size: 32, align: 32, offset: 1280)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1086, file: !744, line: 386, baseType: !920, size: 32, align: 32, offset: 1312)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1086, file: !744, line: 391, baseType: !920, size: 32, align: 32, offset: 1344)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1086, file: !744, line: 396, baseType: !932, size: 64, align: 64, offset: 1408)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1086, file: !744, line: 403, baseType: !1112, size: 512, align: 64, offset: 1472)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 512, align: 64, elements: !1091)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1086, file: !744, line: 410, baseType: !920, size: 32, align: 32, offset: 1984)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1086, file: !744, line: 415, baseType: !920, size: 32, align: 32, offset: 2016)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1086, file: !744, line: 420, baseType: !920, size: 32, align: 32, offset: 2048)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1086, file: !744, line: 425, baseType: !920, size: 32, align: 32, offset: 2080)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1086, file: !744, line: 435, baseType: !922, size: 64, align: 64, offset: 2112)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1086, file: !744, line: 440, baseType: !920, size: 32, align: 32, offset: 2176)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1086, file: !744, line: 445, baseType: !968, size: 64, align: 64, offset: 2240)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1086, file: !744, line: 459, baseType: !1121, size: 512, align: 64, offset: 2304)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1122, size: 512, align: 64, elements: !1091)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64, align: 64)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1124, line: 94, baseType: !1125)
!1124 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1124, line: 81, size: 192, align: 64, elements: !1126)
!1126 = !{!1127, !1131, !1132}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1125, file: !1124, line: 82, baseType: !1128, size: 64, align: 64)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1124, line: 73, baseType: !1130)
!1130 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1124, line: 73, flags: DIFlagFwdDecl)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1125, file: !1124, line: 89, baseType: !1090, size: 64, align: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1125, file: !1124, line: 93, baseType: !920, size: 32, align: 32, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1086, file: !744, line: 473, baseType: !1134, size: 64, align: 64, offset: 2816)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64, align: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1086, file: !744, line: 477, baseType: !920, size: 32, align: 32, offset: 2880)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1086, file: !744, line: 479, baseType: !1137, size: 64, align: 64, offset: 2944)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1141)
!1141 = !{!1142, !1143, !1144, !1145, !1150}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1140, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1140, file: !744, line: 203, baseType: !1090, size: 64, align: 64, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1140, file: !744, line: 204, baseType: !920, size: 32, align: 32, offset: 128)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1140, file: !744, line: 205, baseType: !1146, size: 64, align: 64, offset: 192)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1148, line: 86, baseType: !1149)
!1148 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1149 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1148, line: 86, flags: DIFlagFwdDecl)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1140, file: !744, line: 206, baseType: !1122, size: 64, align: 64, offset: 256)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1086, file: !744, line: 480, baseType: !920, size: 32, align: 32, offset: 3008)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1086, file: !744, line: 505, baseType: !920, size: 32, align: 32, offset: 3040)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1086, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1086, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1086, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1086, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1086, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1086, file: !744, line: 532, baseType: !922, size: 64, align: 64, offset: 3264)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1086, file: !744, line: 539, baseType: !922, size: 64, align: 64, offset: 3328)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1086, file: !744, line: 547, baseType: !922, size: 64, align: 64, offset: 3392)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1086, file: !744, line: 554, baseType: !1146, size: 64, align: 64, offset: 3456)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1086, file: !744, line: 563, baseType: !920, size: 32, align: 32, offset: 3520)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1086, file: !744, line: 572, baseType: !920, size: 32, align: 32, offset: 3552)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1086, file: !744, line: 581, baseType: !920, size: 32, align: 32, offset: 3584)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1086, file: !744, line: 588, baseType: !1166, size: 64, align: 64, offset: 3648)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !923, line: 36, baseType: !1168)
!1168 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1086, file: !744, line: 593, baseType: !920, size: 32, align: 32, offset: 3712)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1086, file: !744, line: 596, baseType: !920, size: 32, align: 32, offset: 3744)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1086, file: !744, line: 599, baseType: !1122, size: 64, align: 64, offset: 3776)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1086, file: !744, line: 605, baseType: !1122, size: 64, align: 64, offset: 3840)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1086, file: !744, line: 616, baseType: !1122, size: 64, align: 64, offset: 3904)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1086, file: !744, line: 626, baseType: !1175, size: 64, align: 64, offset: 3968)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1176, line: 216, baseType: !969)
!1176 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1086, file: !744, line: 627, baseType: !1175, size: 64, align: 64, offset: 4032)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1086, file: !744, line: 628, baseType: !1175, size: 64, align: 64, offset: 4096)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1086, file: !744, line: 629, baseType: !1175, size: 64, align: 64, offset: 4160)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1086, file: !744, line: 645, baseType: !1122, size: 64, align: 64, offset: 4224)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1077, file: !1078, line: 161, baseType: !1182, size: 64, align: 64, offset: 192)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1078, line: 117, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1078, line: 100, size: 832, align: 64, elements: !1185)
!1185 = !{!1186, !1193, !1194, !1195, !1196, !1197, !1199, !1200, !1201}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1184, file: !1078, line: 105, baseType: !1187, size: 256, align: 64)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 256, align: 64, elements: !1191)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1124, line: 238, baseType: !1190)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1124, line: 238, flags: DIFlagFwdDecl)
!1191 = !{!1192}
!1192 = !DISubrange(count: 4)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1184, file: !1078, line: 110, baseType: !920, size: 32, align: 32, offset: 256)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1184, file: !1078, line: 111, baseType: !920, size: 32, align: 32, offset: 288)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1184, file: !1078, line: 111, baseType: !920, size: 32, align: 32, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1184, file: !1078, line: 112, baseType: !1094, size: 256, align: 32, offset: 352)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1184, file: !1078, line: 113, baseType: !1198, size: 128, align: 32, offset: 608)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 128, align: 32, elements: !1191)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1184, file: !1078, line: 114, baseType: !920, size: 32, align: 32, offset: 736)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1184, file: !1078, line: 115, baseType: !920, size: 32, align: 32, offset: 768)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1184, file: !1078, line: 116, baseType: !920, size: 32, align: 32, offset: 800)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1077, file: !1078, line: 163, baseType: !932, size: 64, align: 64, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1077, file: !1078, line: 165, baseType: !1204, size: 128, align: 64, offset: 320)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1078, line: 122, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1078, line: 119, size: 128, align: 64, elements: !1206)
!1206 = !{!1207, !1231}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1205, file: !1078, line: 120, baseType: !1208, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1227, !1228, !1229, !1230}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1210, file: !14, line: 1451, baseType: !1122, size: 64, align: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1210, file: !14, line: 1461, baseType: !922, size: 64, align: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1210, file: !14, line: 1467, baseType: !922, size: 64, align: 64, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1210, file: !14, line: 1468, baseType: !1090, size: 64, align: 64, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1210, file: !14, line: 1469, baseType: !920, size: 32, align: 32, offset: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1210, file: !14, line: 1470, baseType: !920, size: 32, align: 32, offset: 288)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1210, file: !14, line: 1474, baseType: !920, size: 32, align: 32, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1210, file: !14, line: 1479, baseType: !1220, size: 64, align: 64, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64, align: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1223)
!1223 = !{!1224, !1225, !1226}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1222, file: !14, line: 1412, baseType: !1090, size: 64, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1222, file: !14, line: 1413, baseType: !920, size: 32, align: 32, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1222, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1210, file: !14, line: 1480, baseType: !920, size: 32, align: 32, offset: 448)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1210, file: !14, line: 1486, baseType: !922, size: 64, align: 64, offset: 512)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1210, file: !14, line: 1488, baseType: !922, size: 64, align: 64, offset: 576)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1210, file: !14, line: 1497, baseType: !922, size: 64, align: 64, offset: 640)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1205, file: !1078, line: 121, baseType: !1084, size: 64, align: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1077, file: !1078, line: 166, baseType: !1233, size: 128, align: 64, offset: 448)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1078, line: 127, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1078, line: 124, size: 128, align: 64, elements: !1235)
!1235 = !{!1236, !1309}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1234, file: !1078, line: 125, baseType: !1237, size: 64, align: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1241)
!1241 = !{!1242, !1243, !1267, !1271, !1272, !1306, !1307, !1308}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1240, file: !14, line: 5751, baseType: !974, size: 64, align: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1240, file: !14, line: 5756, baseType: !1244, size: 64, align: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64, align: 64)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1247)
!1247 = !{!1248, !1249, !1252, !1253, !1254, !1258, !1262, !1266}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1246, file: !14, line: 5797, baseType: !940, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1246, file: !14, line: 5804, baseType: !1250, size: 64, align: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1246, file: !14, line: 5815, baseType: !974, size: 64, align: 64, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1246, file: !14, line: 5825, baseType: !920, size: 32, align: 32, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1246, file: !14, line: 5826, baseType: !1255, size: 64, align: 64, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64, align: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!920, !1238}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1246, file: !14, line: 5827, baseType: !1259, size: 64, align: 64, offset: 320)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!920, !1238, !1208}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1246, file: !14, line: 5828, baseType: !1263, size: 64, align: 64, offset: 384)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{null, !1238}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1246, file: !14, line: 5829, baseType: !1263, size: 64, align: 64, offset: 448)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1240, file: !14, line: 5762, baseType: !1268, size: 64, align: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64, align: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1270)
!1270 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1240, file: !14, line: 5768, baseType: !932, size: 64, align: 64, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1240, file: !14, line: 5775, baseType: !1273, size: 64, align: 64, offset: 256)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64, align: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1276)
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1275, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1275, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1275, file: !14, line: 3948, baseType: !931, size: 32, align: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1275, file: !14, line: 3958, baseType: !1090, size: 64, align: 64, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1275, file: !14, line: 3962, baseType: !920, size: 32, align: 32, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1275, file: !14, line: 3968, baseType: !920, size: 32, align: 32, offset: 224)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1275, file: !14, line: 3973, baseType: !922, size: 64, align: 64, offset: 256)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1275, file: !14, line: 3986, baseType: !920, size: 32, align: 32, offset: 320)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1275, file: !14, line: 3999, baseType: !920, size: 32, align: 32, offset: 352)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1275, file: !14, line: 4004, baseType: !920, size: 32, align: 32, offset: 384)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1275, file: !14, line: 4005, baseType: !920, size: 32, align: 32, offset: 416)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1275, file: !14, line: 4010, baseType: !920, size: 32, align: 32, offset: 448)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1275, file: !14, line: 4011, baseType: !920, size: 32, align: 32, offset: 480)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1275, file: !14, line: 4020, baseType: !950, size: 64, align: 32, offset: 512)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1275, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1275, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1275, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1275, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1275, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1275, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1275, file: !14, line: 4039, baseType: !920, size: 32, align: 32, offset: 768)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1275, file: !14, line: 4046, baseType: !968, size: 64, align: 64, offset: 832)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1275, file: !14, line: 4050, baseType: !920, size: 32, align: 32, offset: 896)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1275, file: !14, line: 4054, baseType: !920, size: 32, align: 32, offset: 928)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1275, file: !14, line: 4061, baseType: !920, size: 32, align: 32, offset: 960)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1275, file: !14, line: 4065, baseType: !920, size: 32, align: 32, offset: 992)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1275, file: !14, line: 4073, baseType: !920, size: 32, align: 32, offset: 1024)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1275, file: !14, line: 4080, baseType: !920, size: 32, align: 32, offset: 1056)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1275, file: !14, line: 4084, baseType: !920, size: 32, align: 32, offset: 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1240, file: !14, line: 5781, baseType: !1273, size: 64, align: 64, offset: 320)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1240, file: !14, line: 5787, baseType: !950, size: 64, align: 32, offset: 384)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1240, file: !14, line: 5793, baseType: !950, size: 64, align: 32, offset: 448)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1234, file: !1078, line: 126, baseType: !920, size: 32, align: 32, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1077, file: !1078, line: 172, baseType: !1208, size: 64, align: 64, offset: 576)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1077, file: !1078, line: 177, baseType: !1090, size: 64, align: 64, offset: 640)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1077, file: !1078, line: 178, baseType: !921, size: 32, align: 32, offset: 704)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1077, file: !1078, line: 180, baseType: !932, size: 64, align: 64, offset: 768)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1077, file: !1078, line: 185, baseType: !920, size: 32, align: 32, offset: 832)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1077, file: !1078, line: 190, baseType: !932, size: 64, align: 64, offset: 896)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1077, file: !1078, line: 195, baseType: !920, size: 32, align: 32, offset: 960)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1077, file: !1078, line: 200, baseType: !1208, size: 64, align: 64, offset: 1024)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1077, file: !1078, line: 201, baseType: !920, size: 32, align: 32, offset: 1088)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1077, file: !1078, line: 202, baseType: !1084, size: 64, align: 64, offset: 1152)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1077, file: !1078, line: 203, baseType: !920, size: 32, align: 32, offset: 1216)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1077, file: !1078, line: 205, baseType: !920, size: 32, align: 32, offset: 1248)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1077, file: !1078, line: 206, baseType: !920, size: 32, align: 32, offset: 1280)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1077, file: !1078, line: 209, baseType: !1175, size: 64, align: 64, offset: 1344)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1077, file: !1078, line: 212, baseType: !1175, size: 64, align: 64, offset: 1408)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1077, file: !1078, line: 213, baseType: !1084, size: 64, align: 64, offset: 1472)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1077, file: !1078, line: 215, baseType: !920, size: 32, align: 32, offset: 1536)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1077, file: !1078, line: 217, baseType: !920, size: 32, align: 32, offset: 1568)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1077, file: !1078, line: 220, baseType: !920, size: 32, align: 32, offset: 1600)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1064, file: !14, line: 1598, baseType: !932, size: 64, align: 64, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1064, file: !14, line: 1606, baseType: !922, size: 64, align: 64, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1064, file: !14, line: 1614, baseType: !920, size: 32, align: 32, offset: 512)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1064, file: !14, line: 1622, baseType: !920, size: 32, align: 32, offset: 544)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1064, file: !14, line: 1628, baseType: !920, size: 32, align: 32, offset: 576)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1064, file: !14, line: 1636, baseType: !920, size: 32, align: 32, offset: 608)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1064, file: !14, line: 1643, baseType: !920, size: 32, align: 32, offset: 640)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1064, file: !14, line: 1657, baseType: !1090, size: 64, align: 64, offset: 704)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1064, file: !14, line: 1658, baseType: !920, size: 32, align: 32, offset: 768)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1064, file: !14, line: 1679, baseType: !950, size: 64, align: 32, offset: 800)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1064, file: !14, line: 1688, baseType: !920, size: 32, align: 32, offset: 864)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1064, file: !14, line: 1712, baseType: !920, size: 32, align: 32, offset: 896)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1064, file: !14, line: 1729, baseType: !920, size: 32, align: 32, offset: 928)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1064, file: !14, line: 1729, baseType: !920, size: 32, align: 32, offset: 960)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1064, file: !14, line: 1744, baseType: !920, size: 32, align: 32, offset: 992)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1064, file: !14, line: 1744, baseType: !920, size: 32, align: 32, offset: 1024)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1064, file: !14, line: 1751, baseType: !920, size: 32, align: 32, offset: 1056)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1064, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1064, file: !14, line: 1791, baseType: !1348, size: 64, align: 64, offset: 1152)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64, align: 64)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{null, !1351, !1352, !1354, !920, !920, !920}
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64, align: 64)
!1353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1085)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64, align: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1064, file: !14, line: 1808, baseType: !1356, size: 64, align: 64, offset: 1216)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64, align: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!473, !1351, !957}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1064, file: !14, line: 1816, baseType: !920, size: 32, align: 32, offset: 1280)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1064, file: !14, line: 1825, baseType: !1361, size: 32, align: 32, offset: 1312)
!1361 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1064, file: !14, line: 1830, baseType: !920, size: 32, align: 32, offset: 1344)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1064, file: !14, line: 1838, baseType: !1361, size: 32, align: 32, offset: 1376)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1064, file: !14, line: 1846, baseType: !920, size: 32, align: 32, offset: 1408)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1064, file: !14, line: 1851, baseType: !920, size: 32, align: 32, offset: 1440)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1064, file: !14, line: 1861, baseType: !1361, size: 32, align: 32, offset: 1472)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1064, file: !14, line: 1868, baseType: !1361, size: 32, align: 32, offset: 1504)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1064, file: !14, line: 1875, baseType: !1361, size: 32, align: 32, offset: 1536)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1064, file: !14, line: 1882, baseType: !1361, size: 32, align: 32, offset: 1568)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1064, file: !14, line: 1889, baseType: !1361, size: 32, align: 32, offset: 1600)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1064, file: !14, line: 1896, baseType: !1361, size: 32, align: 32, offset: 1632)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1064, file: !14, line: 1903, baseType: !1361, size: 32, align: 32, offset: 1664)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1064, file: !14, line: 1910, baseType: !920, size: 32, align: 32, offset: 1696)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1064, file: !14, line: 1915, baseType: !920, size: 32, align: 32, offset: 1728)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1064, file: !14, line: 1926, baseType: !1354, size: 64, align: 64, offset: 1792)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1064, file: !14, line: 1935, baseType: !950, size: 64, align: 32, offset: 1856)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1064, file: !14, line: 1942, baseType: !920, size: 32, align: 32, offset: 1920)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1064, file: !14, line: 1948, baseType: !920, size: 32, align: 32, offset: 1952)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1064, file: !14, line: 1954, baseType: !920, size: 32, align: 32, offset: 1984)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1064, file: !14, line: 1960, baseType: !920, size: 32, align: 32, offset: 2016)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1064, file: !14, line: 1984, baseType: !920, size: 32, align: 32, offset: 2048)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1064, file: !14, line: 1991, baseType: !920, size: 32, align: 32, offset: 2080)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1064, file: !14, line: 1996, baseType: !920, size: 32, align: 32, offset: 2112)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1064, file: !14, line: 2004, baseType: !920, size: 32, align: 32, offset: 2144)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1064, file: !14, line: 2011, baseType: !920, size: 32, align: 32, offset: 2176)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1064, file: !14, line: 2018, baseType: !920, size: 32, align: 32, offset: 2208)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1064, file: !14, line: 2027, baseType: !920, size: 32, align: 32, offset: 2240)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1064, file: !14, line: 2034, baseType: !920, size: 32, align: 32, offset: 2272)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1064, file: !14, line: 2044, baseType: !920, size: 32, align: 32, offset: 2304)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1064, file: !14, line: 2054, baseType: !1391, size: 64, align: 64, offset: 2368)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !923, line: 49, baseType: !1393)
!1393 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1064, file: !14, line: 2061, baseType: !1391, size: 64, align: 64, offset: 2432)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1064, file: !14, line: 2066, baseType: !920, size: 32, align: 32, offset: 2496)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1064, file: !14, line: 2070, baseType: !920, size: 32, align: 32, offset: 2528)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1064, file: !14, line: 2078, baseType: !920, size: 32, align: 32, offset: 2560)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1064, file: !14, line: 2085, baseType: !920, size: 32, align: 32, offset: 2592)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1064, file: !14, line: 2092, baseType: !920, size: 32, align: 32, offset: 2624)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1064, file: !14, line: 2099, baseType: !920, size: 32, align: 32, offset: 2656)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1064, file: !14, line: 2106, baseType: !920, size: 32, align: 32, offset: 2688)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1064, file: !14, line: 2113, baseType: !920, size: 32, align: 32, offset: 2720)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1064, file: !14, line: 2120, baseType: !920, size: 32, align: 32, offset: 2752)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1064, file: !14, line: 2125, baseType: !920, size: 32, align: 32, offset: 2784)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1064, file: !14, line: 2133, baseType: !920, size: 32, align: 32, offset: 2816)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1064, file: !14, line: 2140, baseType: !920, size: 32, align: 32, offset: 2848)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1064, file: !14, line: 2145, baseType: !920, size: 32, align: 32, offset: 2880)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1064, file: !14, line: 2153, baseType: !920, size: 32, align: 32, offset: 2912)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1064, file: !14, line: 2158, baseType: !920, size: 32, align: 32, offset: 2944)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1064, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1064, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1064, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1064, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1064, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1064, file: !14, line: 2203, baseType: !920, size: 32, align: 32, offset: 3136)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1064, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1064, file: !14, line: 2212, baseType: !920, size: 32, align: 32, offset: 3200)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1064, file: !14, line: 2213, baseType: !920, size: 32, align: 32, offset: 3232)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1064, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1064, file: !14, line: 2232, baseType: !920, size: 32, align: 32, offset: 3296)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1064, file: !14, line: 2243, baseType: !920, size: 32, align: 32, offset: 3328)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1064, file: !14, line: 2249, baseType: !920, size: 32, align: 32, offset: 3360)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1064, file: !14, line: 2256, baseType: !920, size: 32, align: 32, offset: 3392)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1064, file: !14, line: 2263, baseType: !968, size: 64, align: 64, offset: 3456)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1064, file: !14, line: 2270, baseType: !968, size: 64, align: 64, offset: 3520)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1064, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1064, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1064, file: !14, line: 2367, baseType: !1429, size: 64, align: 64, offset: 3648)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64, align: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!920, !1351, !1084, !920}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1064, file: !14, line: 2383, baseType: !920, size: 32, align: 32, offset: 3712)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1064, file: !14, line: 2386, baseType: !1361, size: 32, align: 32, offset: 3744)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1064, file: !14, line: 2387, baseType: !1361, size: 32, align: 32, offset: 3776)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1064, file: !14, line: 2394, baseType: !920, size: 32, align: 32, offset: 3808)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1064, file: !14, line: 2401, baseType: !920, size: 32, align: 32, offset: 3840)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1064, file: !14, line: 2408, baseType: !920, size: 32, align: 32, offset: 3872)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1064, file: !14, line: 2415, baseType: !920, size: 32, align: 32, offset: 3904)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1064, file: !14, line: 2422, baseType: !920, size: 32, align: 32, offset: 3936)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1064, file: !14, line: 2423, baseType: !1441, size: 64, align: 64, offset: 3968)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64, align: 64)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1443, file: !14, line: 827, baseType: !920, size: 32, align: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1443, file: !14, line: 828, baseType: !920, size: 32, align: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1443, file: !14, line: 829, baseType: !920, size: 32, align: 32, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1443, file: !14, line: 830, baseType: !1361, size: 32, align: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1064, file: !14, line: 2430, baseType: !922, size: 64, align: 64, offset: 4032)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1064, file: !14, line: 2437, baseType: !922, size: 64, align: 64, offset: 4096)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1064, file: !14, line: 2444, baseType: !1361, size: 32, align: 32, offset: 4160)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1064, file: !14, line: 2451, baseType: !1361, size: 32, align: 32, offset: 4192)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1064, file: !14, line: 2458, baseType: !920, size: 32, align: 32, offset: 4224)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1064, file: !14, line: 2469, baseType: !920, size: 32, align: 32, offset: 4256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1064, file: !14, line: 2475, baseType: !920, size: 32, align: 32, offset: 4288)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1064, file: !14, line: 2481, baseType: !920, size: 32, align: 32, offset: 4320)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1064, file: !14, line: 2485, baseType: !920, size: 32, align: 32, offset: 4352)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1064, file: !14, line: 2489, baseType: !920, size: 32, align: 32, offset: 4384)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1064, file: !14, line: 2493, baseType: !920, size: 32, align: 32, offset: 4416)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1064, file: !14, line: 2501, baseType: !920, size: 32, align: 32, offset: 4448)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1064, file: !14, line: 2506, baseType: !920, size: 32, align: 32, offset: 4480)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1064, file: !14, line: 2510, baseType: !920, size: 32, align: 32, offset: 4512)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1064, file: !14, line: 2514, baseType: !922, size: 64, align: 64, offset: 4544)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1064, file: !14, line: 2528, baseType: !1465, size: 64, align: 64, offset: 4608)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{null, !1351, !932, !920, !920}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1064, file: !14, line: 2534, baseType: !920, size: 32, align: 32, offset: 4672)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1064, file: !14, line: 2545, baseType: !920, size: 32, align: 32, offset: 4704)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1064, file: !14, line: 2547, baseType: !920, size: 32, align: 32, offset: 4736)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1064, file: !14, line: 2549, baseType: !920, size: 32, align: 32, offset: 4768)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1064, file: !14, line: 2551, baseType: !920, size: 32, align: 32, offset: 4800)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1064, file: !14, line: 2553, baseType: !920, size: 32, align: 32, offset: 4832)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1064, file: !14, line: 2555, baseType: !920, size: 32, align: 32, offset: 4864)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1064, file: !14, line: 2557, baseType: !920, size: 32, align: 32, offset: 4896)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1064, file: !14, line: 2559, baseType: !920, size: 32, align: 32, offset: 4928)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1064, file: !14, line: 2563, baseType: !920, size: 32, align: 32, offset: 4960)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1064, file: !14, line: 2571, baseType: !1479, size: 64, align: 64, offset: 4992)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64, align: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1064, file: !14, line: 2579, baseType: !1479, size: 64, align: 64, offset: 5056)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1064, file: !14, line: 2586, baseType: !920, size: 32, align: 32, offset: 5120)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1064, file: !14, line: 2615, baseType: !920, size: 32, align: 32, offset: 5152)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1064, file: !14, line: 2627, baseType: !920, size: 32, align: 32, offset: 5184)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1064, file: !14, line: 2637, baseType: !920, size: 32, align: 32, offset: 5216)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1064, file: !14, line: 2681, baseType: !920, size: 32, align: 32, offset: 5248)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1064, file: !14, line: 2709, baseType: !922, size: 64, align: 64, offset: 5312)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1064, file: !14, line: 2716, baseType: !1488, size: 64, align: 64, offset: 5376)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496, !1497, !1501, !1507, !1511, !1512, !1513, !1514, !1520, !1521, !1522, !1523, !1524}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1490, file: !14, line: 3642, baseType: !940, size: 64, align: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1490, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1490, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1490, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1490, file: !14, line: 3669, baseType: !920, size: 32, align: 32, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1490, file: !14, line: 3682, baseType: !1498, size: 64, align: 64, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64, align: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!920, !1062, !1084}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1490, file: !14, line: 3698, baseType: !1502, size: 64, align: 64, offset: 256)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64, align: 64)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!920, !1062, !1505, !931}
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64, align: 64)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !971)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1490, file: !14, line: 3712, baseType: !1508, size: 64, align: 64, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64, align: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!920, !1062, !920, !1505, !931}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1490, file: !14, line: 3726, baseType: !1502, size: 64, align: 64, offset: 384)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1490, file: !14, line: 3737, baseType: !1059, size: 64, align: 64, offset: 448)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1490, file: !14, line: 3746, baseType: !920, size: 32, align: 32, offset: 512)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1490, file: !14, line: 3757, baseType: !1515, size: 64, align: 64, offset: 576)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{null, !1518}
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1490, file: !14, line: 3766, baseType: !1059, size: 64, align: 64, offset: 640)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1490, file: !14, line: 3774, baseType: !1059, size: 64, align: 64, offset: 704)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1490, file: !14, line: 3780, baseType: !920, size: 32, align: 32, offset: 768)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1490, file: !14, line: 3785, baseType: !920, size: 32, align: 32, offset: 800)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1490, file: !14, line: 3795, baseType: !1525, size: 64, align: 64, offset: 832)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, align: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!920, !1062, !1122}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1064, file: !14, line: 2728, baseType: !932, size: 64, align: 64, offset: 5440)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1064, file: !14, line: 2735, baseType: !1112, size: 512, align: 64, offset: 5504)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1064, file: !14, line: 2742, baseType: !920, size: 32, align: 32, offset: 6016)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1064, file: !14, line: 2755, baseType: !920, size: 32, align: 32, offset: 6048)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1064, file: !14, line: 2776, baseType: !920, size: 32, align: 32, offset: 6080)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1064, file: !14, line: 2783, baseType: !920, size: 32, align: 32, offset: 6112)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1064, file: !14, line: 2791, baseType: !920, size: 32, align: 32, offset: 6144)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1064, file: !14, line: 2802, baseType: !1084, size: 64, align: 64, offset: 6208)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1064, file: !14, line: 2811, baseType: !920, size: 32, align: 32, offset: 6272)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1064, file: !14, line: 2821, baseType: !920, size: 32, align: 32, offset: 6304)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1064, file: !14, line: 2830, baseType: !920, size: 32, align: 32, offset: 6336)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1064, file: !14, line: 2840, baseType: !920, size: 32, align: 32, offset: 6368)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1064, file: !14, line: 2851, baseType: !1541, size: 64, align: 64, offset: 6400)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64, align: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!920, !1351, !1544, !932, !1354, !920, !920}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64, align: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!920, !1351, !932}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1064, file: !14, line: 2871, baseType: !1548, size: 64, align: 64, offset: 6464)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!920, !1351, !1551, !932, !1354, !920}
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64, align: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!920, !1351, !932, !920, !920}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1064, file: !14, line: 2878, baseType: !920, size: 32, align: 32, offset: 6528)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1064, file: !14, line: 2885, baseType: !920, size: 32, align: 32, offset: 6560)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1064, file: !14, line: 3005, baseType: !920, size: 32, align: 32, offset: 6592)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1064, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1064, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1064, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1064, file: !14, line: 3037, baseType: !1090, size: 64, align: 64, offset: 6720)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1064, file: !14, line: 3038, baseType: !920, size: 32, align: 32, offset: 6784)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1064, file: !14, line: 3050, baseType: !968, size: 64, align: 64, offset: 6848)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1064, file: !14, line: 3065, baseType: !920, size: 32, align: 32, offset: 6912)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1064, file: !14, line: 3083, baseType: !920, size: 32, align: 32, offset: 6944)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1064, file: !14, line: 3092, baseType: !950, size: 64, align: 32, offset: 6976)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1064, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1064, file: !14, line: 3106, baseType: !950, size: 64, align: 32, offset: 7072)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1064, file: !14, line: 3113, baseType: !1569, size: 64, align: 64, offset: 7168)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1582}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1572, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1572, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1572, file: !14, line: 720, baseType: !940, size: 64, align: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1572, file: !14, line: 724, baseType: !940, size: 64, align: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1572, file: !14, line: 728, baseType: !920, size: 32, align: 32, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1572, file: !14, line: 734, baseType: !1580, size: 64, align: 64, offset: 256)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64, align: 64)
!1581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1572, file: !14, line: 739, baseType: !1583, size: 64, align: 64, offset: 320)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64, align: 64)
!1584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1064, file: !14, line: 3129, baseType: !922, size: 64, align: 64, offset: 7232)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1064, file: !14, line: 3130, baseType: !922, size: 64, align: 64, offset: 7296)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1064, file: !14, line: 3131, baseType: !922, size: 64, align: 64, offset: 7360)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1064, file: !14, line: 3132, baseType: !922, size: 64, align: 64, offset: 7424)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1064, file: !14, line: 3139, baseType: !1479, size: 64, align: 64, offset: 7488)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1064, file: !14, line: 3147, baseType: !920, size: 32, align: 32, offset: 7552)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1064, file: !14, line: 3165, baseType: !920, size: 32, align: 32, offset: 7584)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1064, file: !14, line: 3172, baseType: !920, size: 32, align: 32, offset: 7616)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1064, file: !14, line: 3180, baseType: !920, size: 32, align: 32, offset: 7648)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1064, file: !14, line: 3191, baseType: !1391, size: 64, align: 64, offset: 7680)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1064, file: !14, line: 3199, baseType: !1090, size: 64, align: 64, offset: 7744)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1064, file: !14, line: 3207, baseType: !1479, size: 64, align: 64, offset: 7808)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1064, file: !14, line: 3214, baseType: !921, size: 32, align: 32, offset: 7872)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1064, file: !14, line: 3224, baseType: !1220, size: 64, align: 64, offset: 7936)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1064, file: !14, line: 3225, baseType: !920, size: 32, align: 32, offset: 8000)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1064, file: !14, line: 3249, baseType: !1122, size: 64, align: 64, offset: 8064)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1064, file: !14, line: 3256, baseType: !920, size: 32, align: 32, offset: 8128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1064, file: !14, line: 3271, baseType: !920, size: 32, align: 32, offset: 8160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1064, file: !14, line: 3279, baseType: !922, size: 64, align: 64, offset: 8192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1064, file: !14, line: 3301, baseType: !1122, size: 64, align: 64, offset: 8256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1064, file: !14, line: 3310, baseType: !920, size: 32, align: 32, offset: 8320)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1064, file: !14, line: 3337, baseType: !920, size: 32, align: 32, offset: 8352)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1064, file: !14, line: 3351, baseType: !920, size: 32, align: 32, offset: 8384)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1064, file: !14, line: 3359, baseType: !920, size: 32, align: 32, offset: 8416)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !937, file: !14, line: 3535, baseType: !1610, size: 64, align: 64, offset: 1024)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64, align: 64)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!920, !1062, !1613}
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64, align: 64)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !937, file: !14, line: 3541, baseType: !1616, size: 64, align: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1078, line: 223, size: 128, align: 64, elements: !1620)
!1620 = !{!1621, !1622}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1619, file: !1078, line: 224, baseType: !1505, size: 64, align: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1619, file: !1078, line: 225, baseType: !1505, size: 64, align: 64, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !937, file: !14, line: 3549, baseType: !1624, size: 64, align: 64, offset: 1152)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64, align: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{null, !1057}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !937, file: !14, line: 3551, baseType: !1059, size: 64, align: 64, offset: 1216)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !937, file: !14, line: 3552, baseType: !1629, size: 64, align: 64, offset: 1280)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64, align: 64)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!920, !1062, !1090, !920, !1632}
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1664}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1634, file: !14, line: 3921, baseType: !1392, size: 16, align: 16)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1634, file: !14, line: 3922, baseType: !931, size: 32, align: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1634, file: !14, line: 3923, baseType: !931, size: 32, align: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1634, file: !14, line: 3924, baseType: !921, size: 32, align: 32, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1634, file: !14, line: 3925, baseType: !1641, size: 64, align: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64, align: 64)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64, align: 64)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1650, !1651, !1657, !1659, !1660, !1661, !1662, !1663}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1644, file: !14, line: 3886, baseType: !920, size: 32, align: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1644, file: !14, line: 3887, baseType: !920, size: 32, align: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1644, file: !14, line: 3888, baseType: !920, size: 32, align: 32, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1644, file: !14, line: 3889, baseType: !920, size: 32, align: 32, offset: 96)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1644, file: !14, line: 3890, baseType: !920, size: 32, align: 32, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1644, file: !14, line: 3897, baseType: !1652, size: 768, align: 64, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1653, file: !14, line: 3855, baseType: !1089, size: 512, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1653, file: !14, line: 3857, baseType: !1094, size: 256, align: 32, offset: 512)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1644, file: !14, line: 3903, baseType: !1658, size: 256, align: 64, offset: 960)
!1658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1090, size: 256, align: 64, elements: !1191)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1644, file: !14, line: 3904, baseType: !1198, size: 128, align: 32, offset: 1216)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1644, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1644, file: !14, line: 3908, baseType: !1479, size: 64, align: 64, offset: 1408)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1644, file: !14, line: 3915, baseType: !1479, size: 64, align: 64, offset: 1472)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1644, file: !14, line: 3917, baseType: !920, size: 32, align: 32, offset: 1536)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1634, file: !14, line: 3926, baseType: !922, size: 64, align: 64, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !937, file: !14, line: 3564, baseType: !1666, size: 64, align: 64, offset: 1344)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!920, !1062, !1208, !1352, !1354}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !937, file: !14, line: 3566, baseType: !1670, size: 64, align: 64, offset: 1408)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64, align: 64)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{!920, !1062, !932, !1354, !1208}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !937, file: !14, line: 3567, baseType: !1059, size: 64, align: 64, offset: 1472)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !937, file: !14, line: 3576, baseType: !1675, size: 64, align: 64, offset: 1536)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64, align: 64)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!920, !1062, !1352}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !937, file: !14, line: 3577, baseType: !1679, size: 64, align: 64, offset: 1600)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64, align: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!920, !1062, !1208}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !937, file: !14, line: 3584, baseType: !1498, size: 64, align: 64, offset: 1664)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !937, file: !14, line: 3589, baseType: !1684, size: 64, align: 64, offset: 1728)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64, align: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{null, !1062}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !937, file: !14, line: 3594, baseType: !920, size: 32, align: 32, offset: 1792)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !937, file: !14, line: 3600, baseType: !940, size: 64, align: 64, offset: 1856)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !937, file: !14, line: 3609, baseType: !1690, size: 64, align: 64, offset: 1920)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64, align: 64)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1693 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1694 = distinct !DIGlobalVariable(name: "defaults", scope: !0, file: !935, line: 1194, type: !1695, isLocal: true, isDefinition: true, variable: [2 x %struct.AVCodecDefault]* @defaults)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1617, size: 256, align: 64, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 2)
!1698 = distinct !DIGlobalVariable(name: "dc_lsp", scope: !0, file: !910, line: 232, type: !1699, isLocal: true, isDefinition: true, variable: [10 x i16]* @dc_lsp)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 160, align: 16, elements: !1703)
!1700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1701)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !923, line: 37, baseType: !1702)
!1702 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1703 = !{!1704}
!1704 = !DISubrange(count: 10)
!1705 = distinct !DIGlobalVariable(name: "hamming_window", scope: !0, file: !910, line: 1393, type: !1706, isLocal: true, isDefinition: true, variable: [180 x i16]* @hamming_window)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 2880, align: 16, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: 180)
!1709 = distinct !DIGlobalVariable(name: "binomial_window", scope: !0, file: !910, line: 1417, type: !1699, isLocal: true, isDefinition: true, variable: [10 x i16]* @binomial_window)
!1710 = distinct !DIGlobalVariable(name: "bandwidth_expand", scope: !0, file: !910, line: 1424, type: !1699, isLocal: true, isDefinition: true, variable: [10 x i16]* @bandwidth_expand)
!1711 = distinct !DIGlobalVariable(name: "cos_tab", scope: !0, file: !910, line: 246, type: !1712, isLocal: true, isDefinition: true, variable: [513 x i16]* @cos_tab)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 8208, align: 16, elements: !1713)
!1713 = !{!1714}
!1714 = !DISubrange(count: 513)
!1715 = distinct !DIGlobalVariable(name: "lsp_band0", scope: !0, file: !910, line: 317, type: !1716, isLocal: true, isDefinition: true, variable: [256 x [3 x i16]]* @lsp_band0)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 12288, align: 16, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DISubrange(count: 256)
!1719 = !DISubrange(count: 3)
!1720 = distinct !DIGlobalVariable(name: "lsp_band1", scope: !0, file: !910, line: 406, type: !1716, isLocal: true, isDefinition: true, variable: [256 x [3 x i16]]* @lsp_band1)
!1721 = distinct !DIGlobalVariable(name: "lsp_band2", scope: !0, file: !910, line: 495, type: !1722, isLocal: true, isDefinition: true, variable: [256 x [4 x i16]]* @lsp_band2)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 16384, align: 16, elements: !1723)
!1723 = !{!1718, !1192}
!1724 = distinct !DIGlobalVariable(name: "percept_flt_tbl", scope: !0, file: !910, line: 1431, type: !1725, isLocal: true, isDefinition: true, variable: [2 x [10 x i16]]* @percept_flt_tbl)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 320, align: 16, elements: !1726)
!1726 = !{!1697, !1704}
!1727 = distinct !DIGlobalVariable(name: "adaptive_cb_gain85", scope: !0, file: !910, line: 736, type: !1728, isLocal: true, isDefinition: true, variable: [1700 x i16]* @adaptive_cb_gain85)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 27200, align: 16, elements: !1729)
!1729 = !{!1730}
!1730 = !DISubrange(count: 1700)
!1731 = distinct !DIGlobalVariable(name: "adaptive_cb_gain170", scope: !0, file: !910, line: 952, type: !1732, isLocal: true, isDefinition: true, variable: [3400 x i16]* @adaptive_cb_gain170)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 54400, align: 16, elements: !1733)
!1733 = !{!1734}
!1734 = !DISubrange(count: 3400)
!1735 = distinct !DIGlobalVariable(name: "pulses", scope: !0, file: !910, line: 723, type: !1736, isLocal: true, isDefinition: true, variable: [4 x i8]* @pulses)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1737, size: 32, align: 8, elements: !1191)
!1737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1167)
!1738 = distinct !DIGlobalVariable(name: "fixed_cb_gain", scope: !0, file: !910, line: 730, type: !1739, isLocal: true, isDefinition: true, variable: [24 x i16]* @fixed_cb_gain)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1700, size: 384, align: 16, elements: !1740)
!1740 = !{!1741}
!1741 = !DISubrange(count: 24)
!1742 = distinct !DIGlobalVariable(name: "combinatorial_table", scope: !0, file: !910, line: 630, type: !1743, isLocal: true, isDefinition: true, variable: [6 x [30 x i32]]* @combinatorial_table)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 5760, align: 32, elements: !1745)
!1744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!1745 = !{!1746, !1747}
!1746 = !DISubrange(count: 6)
!1747 = !DISubrange(count: 30)
!1748 = distinct !DIGlobalVariable(name: "frame_size", scope: !0, file: !910, line: 222, type: !1749, isLocal: true, isDefinition: true, variable: [4 x i8]* @frame_size)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1506, size: 32, align: 8, elements: !1191)
!1750 = !{i32 2, !"Dwarf Version", i32 4}
!1751 = !{i32 2, !"Debug Info Version", i32 3}
!1752 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1753 = distinct !DISubprogram(name: "g723_1_encode_init", scope: !935, file: !935, line: 43, type: !1060, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!1754 = !{}
!1755 = !DILocalVariable(name: "avctx", arg: 1, scope: !1753, file: !935, line: 43, type: !1062)
!1756 = !DIExpression()
!1757 = !DILocation(line: 43, column: 69, scope: !1753)
!1758 = !DILocalVariable(name: "s", scope: !1753, file: !935, line: 45, type: !1759)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "G723_1_Context", file: !910, line: 164, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "G723_1_Context", file: !910, line: 159, size: 48576, align: 64, elements: !1762)
!1762 = !{!1763, !1765, !1766}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1761, file: !910, line: 160, baseType: !1764, size: 64, align: 64)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "postfilter", scope: !1761, file: !910, line: 161, baseType: !920, size: 32, align: 32, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !1761, file: !910, line: 163, baseType: !1767, size: 48448, align: 32, offset: 96)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1768, size: 48448, align: 32, elements: !1696)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "G723_1_ChannelContext", file: !910, line: 157, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "G723_1_ChannelContext", file: !910, line: 119, size: 24224, align: 32, elements: !1770)
!1770 = !{!1771, !1783, !1784, !1785, !1786, !1789, !1791, !1792, !1794, !1795, !1799, !1803, !1804, !1805, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1819, !1823, !1824, !1825, !1826, !1827, !1828}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1769, file: !910, line: 120, baseType: !1772, size: 896, align: 32)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1773, size: 896, align: 32, elements: !1191)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "G723_1_Subframe", file: !910, line: 88, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "G723_1_Subframe", file: !910, line: 80, size: 224, align: 32, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781, !1782}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ad_cb_lag", scope: !1774, file: !910, line: 81, baseType: !920, size: 32, align: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ad_cb_gain", scope: !1774, file: !910, line: 82, baseType: !920, size: 32, align: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "dirac_train", scope: !1774, file: !910, line: 83, baseType: !920, size: 32, align: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pulse_sign", scope: !1774, file: !910, line: 84, baseType: !920, size: 32, align: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "grid_index", scope: !1774, file: !910, line: 85, baseType: !920, size: 32, align: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "amp_index", scope: !1774, file: !910, line: 86, baseType: !920, size: 32, align: 32, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "pulse_pos", scope: !1774, file: !910, line: 87, baseType: !920, size: 32, align: 32, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_type", scope: !1769, file: !910, line: 121, baseType: !909, size: 32, align: 32, offset: 896)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "past_frame_type", scope: !1769, file: !910, line: 122, baseType: !909, size: 32, align: 32, offset: 928)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "cur_rate", scope: !1769, file: !910, line: 123, baseType: !915, size: 32, align: 32, offset: 960)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "lsp_index", scope: !1769, file: !910, line: 124, baseType: !1787, size: 24, align: 8, offset: 992)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 24, align: 8, elements: !1788)
!1788 = !{!1719}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pitch_lag", scope: !1769, file: !910, line: 125, baseType: !1790, size: 64, align: 32, offset: 1024)
!1790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 64, align: 32, elements: !1696)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "erased_frames", scope: !1769, file: !910, line: 126, baseType: !920, size: 32, align: 32, offset: 1088)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "prev_lsp", scope: !1769, file: !910, line: 128, baseType: !1793, size: 160, align: 16, offset: 1120)
!1793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 160, align: 16, elements: !1703)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sid_lsp", scope: !1769, file: !910, line: 129, baseType: !1793, size: 160, align: 16, offset: 1280)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "prev_excitation", scope: !1769, file: !910, line: 130, baseType: !1796, size: 2320, align: 16, offset: 1440)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 2320, align: 16, elements: !1797)
!1797 = !{!1798}
!1798 = !DISubrange(count: 145)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "excitation", scope: !1769, file: !910, line: 131, baseType: !1800, size: 6224, align: 16, offset: 3760)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 6224, align: 16, elements: !1801)
!1801 = !{!1802}
!1802 = !DISubrange(count: 389)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "synth_mem", scope: !1769, file: !910, line: 132, baseType: !1793, size: 160, align: 16, offset: 9984)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "fir_mem", scope: !1769, file: !910, line: 133, baseType: !1793, size: 160, align: 16, offset: 10144)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "iir_mem", scope: !1769, file: !910, line: 134, baseType: !1806, size: 320, align: 32, offset: 10304)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 320, align: 32, elements: !1703)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "random_seed", scope: !1769, file: !910, line: 136, baseType: !920, size: 32, align: 32, offset: 10624)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "cng_random_seed", scope: !1769, file: !910, line: 137, baseType: !920, size: 32, align: 32, offset: 10656)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "interp_index", scope: !1769, file: !910, line: 138, baseType: !920, size: 32, align: 32, offset: 10688)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "interp_gain", scope: !1769, file: !910, line: 139, baseType: !920, size: 32, align: 32, offset: 10720)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "sid_gain", scope: !1769, file: !910, line: 140, baseType: !920, size: 32, align: 32, offset: 10752)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "cur_gain", scope: !1769, file: !910, line: 141, baseType: !920, size: 32, align: 32, offset: 10784)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_coef", scope: !1769, file: !910, line: 142, baseType: !920, size: 32, align: 32, offset: 10816)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pf_gain", scope: !1769, file: !910, line: 143, baseType: !920, size: 32, align: 32, offset: 10848)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1769, file: !910, line: 145, baseType: !1816, size: 6384, align: 16, offset: 10880)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 6384, align: 16, elements: !1817)
!1817 = !{!1818}
!1818 = !DISubrange(count: 399)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "prev_data", scope: !1769, file: !910, line: 148, baseType: !1820, size: 1920, align: 16, offset: 17264)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 1920, align: 16, elements: !1821)
!1821 = !{!1822}
!1822 = !DISubrange(count: 120)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "prev_weight_sig", scope: !1769, file: !910, line: 149, baseType: !1796, size: 2320, align: 16, offset: 19184)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "hpf_fir_mem", scope: !1769, file: !910, line: 151, baseType: !1701, size: 16, align: 16, offset: 21504)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "hpf_iir_mem", scope: !1769, file: !910, line: 152, baseType: !920, size: 32, align: 32, offset: 21536)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "perf_fir_mem", scope: !1769, file: !910, line: 153, baseType: !1793, size: 160, align: 16, offset: 21568)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "perf_iir_mem", scope: !1769, file: !910, line: 154, baseType: !1793, size: 160, align: 16, offset: 21728)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "harmonic_mem", scope: !1769, file: !910, line: 156, baseType: !1796, size: 2320, align: 16, offset: 21888)
!1829 = !DILocation(line: 45, column: 21, scope: !1753)
!1830 = !DILocation(line: 45, column: 25, scope: !1753)
!1831 = !DILocation(line: 45, column: 32, scope: !1753)
!1832 = !DILocalVariable(name: "p", scope: !1753, file: !935, line: 46, type: !1833)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64, align: 64)
!1834 = !DILocation(line: 46, column: 28, scope: !1753)
!1835 = !DILocation(line: 46, column: 33, scope: !1753)
!1836 = !DILocation(line: 46, column: 36, scope: !1753)
!1837 = !DILocation(line: 48, column: 9, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1753, file: !935, line: 48, column: 9)
!1839 = !DILocation(line: 48, column: 16, scope: !1838)
!1840 = !DILocation(line: 48, column: 28, scope: !1838)
!1841 = !DILocation(line: 48, column: 9, scope: !1753)
!1842 = !DILocation(line: 49, column: 16, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1838, file: !935, line: 48, column: 37)
!1844 = !DILocation(line: 49, column: 9, scope: !1843)
!1845 = !DILocation(line: 50, column: 9, scope: !1843)
!1846 = !DILocation(line: 53, column: 9, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1753, file: !935, line: 53, column: 9)
!1848 = !DILocation(line: 53, column: 16, scope: !1847)
!1849 = !DILocation(line: 53, column: 25, scope: !1847)
!1850 = !DILocation(line: 53, column: 9, scope: !1753)
!1851 = !DILocation(line: 54, column: 16, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1847, file: !935, line: 53, column: 31)
!1853 = !DILocation(line: 54, column: 9, scope: !1852)
!1854 = !DILocation(line: 55, column: 9, scope: !1852)
!1855 = !DILocation(line: 58, column: 9, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1753, file: !935, line: 58, column: 9)
!1857 = !DILocation(line: 58, column: 16, scope: !1856)
!1858 = !DILocation(line: 58, column: 25, scope: !1856)
!1859 = !DILocation(line: 58, column: 9, scope: !1753)
!1860 = !DILocation(line: 59, column: 9, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1856, file: !935, line: 58, column: 34)
!1862 = !DILocation(line: 59, column: 12, scope: !1861)
!1863 = !DILocation(line: 59, column: 21, scope: !1861)
!1864 = !DILocation(line: 60, column: 5, scope: !1861)
!1865 = !DILocation(line: 60, column: 16, scope: !1866)
!1866 = !DILexicalBlockFile(scope: !1867, file: !935, discriminator: 1)
!1867 = distinct !DILexicalBlock(scope: !1856, file: !935, line: 60, column: 16)
!1868 = !DILocation(line: 60, column: 23, scope: !1866)
!1869 = !DILocation(line: 60, column: 32, scope: !1866)
!1870 = !DILocation(line: 61, column: 16, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1867, file: !935, line: 60, column: 41)
!1872 = !DILocation(line: 61, column: 9, scope: !1871)
!1873 = !DILocation(line: 62, column: 39, scope: !1871)
!1874 = !DILocation(line: 62, column: 9, scope: !1871)
!1875 = !DILocation(line: 63, column: 9, scope: !1871)
!1876 = !DILocation(line: 65, column: 16, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1867, file: !935, line: 64, column: 12)
!1878 = !DILocation(line: 65, column: 9, scope: !1877)
!1879 = !DILocation(line: 66, column: 9, scope: !1877)
!1880 = !DILocation(line: 68, column: 5, scope: !1753)
!1881 = !DILocation(line: 68, column: 12, scope: !1753)
!1882 = !DILocation(line: 68, column: 23, scope: !1753)
!1883 = !DILocation(line: 69, column: 12, scope: !1753)
!1884 = !DILocation(line: 69, column: 15, scope: !1753)
!1885 = !DILocation(line: 69, column: 5, scope: !1753)
!1886 = !DILocation(line: 71, column: 5, scope: !1753)
!1887 = !DILocation(line: 72, column: 1, scope: !1753)
!1888 = distinct !DISubprogram(name: "g723_1_encode_frame", scope: !935, file: !935, line: 1057, type: !1667, isLocal: true, isDefinition: true, scopeLine: 1059, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!1889 = !DILocalVariable(name: "a", arg: 1, scope: !1890, file: !1891, line: 192, type: !920)
!1890 = distinct !DISubprogram(name: "av_clip_int16_c", scope: !1891, file: !1891, line: 192, type: !1892, isLocal: true, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!1891 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!1701, !920}
!1894 = !DILocation(line: 192, column: 97, scope: !1890, inlinedAt: !1895)
!1895 = distinct !DILocation(line: 1167, column: 21, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1897, file: !935, line: 1166, column: 9)
!1897 = distinct !DILexicalBlock(scope: !1898, file: !935, line: 1166, column: 9)
!1898 = distinct !DILexicalBlock(scope: !1899, file: !935, line: 1122, column: 29)
!1899 = distinct !DILexicalBlock(scope: !1900, file: !935, line: 1122, column: 5)
!1900 = distinct !DILexicalBlock(scope: !1888, file: !935, line: 1122, column: 5)
!1901 = !DILocalVariable(name: "avctx", arg: 1, scope: !1888, file: !935, line: 1057, type: !1062)
!1902 = !DILocation(line: 1057, column: 48, scope: !1888)
!1903 = !DILocalVariable(name: "avpkt", arg: 2, scope: !1888, file: !935, line: 1057, type: !1208)
!1904 = !DILocation(line: 1057, column: 65, scope: !1888)
!1905 = !DILocalVariable(name: "frame", arg: 3, scope: !1888, file: !935, line: 1058, type: !1352)
!1906 = !DILocation(line: 1058, column: 47, scope: !1888)
!1907 = !DILocalVariable(name: "got_packet_ptr", arg: 4, scope: !1888, file: !935, line: 1058, type: !1354)
!1908 = !DILocation(line: 1058, column: 59, scope: !1888)
!1909 = !DILocalVariable(name: "s", scope: !1888, file: !935, line: 1060, type: !1759)
!1910 = !DILocation(line: 1060, column: 21, scope: !1888)
!1911 = !DILocation(line: 1060, column: 25, scope: !1888)
!1912 = !DILocation(line: 1060, column: 32, scope: !1888)
!1913 = !DILocalVariable(name: "p", scope: !1888, file: !935, line: 1061, type: !1833)
!1914 = !DILocation(line: 1061, column: 28, scope: !1888)
!1915 = !DILocation(line: 1061, column: 33, scope: !1888)
!1916 = !DILocation(line: 1061, column: 36, scope: !1888)
!1917 = !DILocalVariable(name: "unq_lpc", scope: !1888, file: !935, line: 1062, type: !1918)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 640, align: 16, elements: !1919)
!1919 = !{!1920}
!1920 = !DISubrange(count: 40)
!1921 = !DILocation(line: 1062, column: 13, scope: !1888)
!1922 = !DILocalVariable(name: "qnt_lpc", scope: !1888, file: !935, line: 1063, type: !1918)
!1923 = !DILocation(line: 1063, column: 13, scope: !1888)
!1924 = !DILocalVariable(name: "cur_lsp", scope: !1888, file: !935, line: 1064, type: !1793)
!1925 = !DILocation(line: 1064, column: 13, scope: !1888)
!1926 = !DILocalVariable(name: "weighted_lpc", scope: !1888, file: !935, line: 1065, type: !1927)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 1280, align: 16, elements: !1928)
!1928 = !{!1929}
!1929 = !DISubrange(count: 80)
!1930 = !DILocation(line: 1065, column: 13, scope: !1888)
!1931 = !DILocalVariable(name: "vector", scope: !1888, file: !935, line: 1066, type: !1932)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 6160, align: 16, elements: !1933)
!1933 = !{!1934}
!1934 = !DISubrange(count: 385)
!1935 = !DILocation(line: 1066, column: 13, scope: !1888)
!1936 = !DILocalVariable(name: "offset", scope: !1888, file: !935, line: 1067, type: !920)
!1937 = !DILocation(line: 1067, column: 9, scope: !1888)
!1938 = !DILocalVariable(name: "ret", scope: !1888, file: !935, line: 1067, type: !920)
!1939 = !DILocation(line: 1067, column: 17, scope: !1888)
!1940 = !DILocalVariable(name: "i", scope: !1888, file: !935, line: 1067, type: !920)
!1941 = !DILocation(line: 1067, column: 22, scope: !1888)
!1942 = !DILocalVariable(name: "j", scope: !1888, file: !935, line: 1067, type: !920)
!1943 = !DILocation(line: 1067, column: 25, scope: !1888)
!1944 = !DILocalVariable(name: "in", scope: !1888, file: !935, line: 1068, type: !1945)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1946 = !DILocation(line: 1068, column: 14, scope: !1888)
!1947 = !DILocalVariable(name: "start", scope: !1888, file: !935, line: 1068, type: !1945)
!1948 = !DILocation(line: 1068, column: 19, scope: !1888)
!1949 = !DILocalVariable(name: "hf", scope: !1888, file: !935, line: 1069, type: !1950)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 256, align: 32, elements: !1191)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "HFParam", file: !910, line: 105, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HFParam", file: !910, line: 102, size: 64, align: 32, elements: !1953)
!1953 = !{!1954, !1955}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1952, file: !910, line: 103, baseType: !920, size: 32, align: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1952, file: !910, line: 104, baseType: !920, size: 32, align: 32, offset: 32)
!1956 = !DILocation(line: 1069, column: 13, scope: !1888)
!1957 = !DILocation(line: 1072, column: 28, scope: !1888)
!1958 = !DILocation(line: 1072, column: 35, scope: !1888)
!1959 = !DILocation(line: 1072, column: 46, scope: !1888)
!1960 = !DILocation(line: 1072, column: 18, scope: !1888)
!1961 = !DILocation(line: 1072, column: 16, scope: !1888)
!1962 = !DILocation(line: 1072, column: 11, scope: !1888)
!1963 = !DILocation(line: 1073, column: 10, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1888, file: !935, line: 1073, column: 9)
!1965 = !DILocation(line: 1073, column: 9, scope: !1888)
!1966 = !DILocation(line: 1074, column: 9, scope: !1964)
!1967 = !DILocation(line: 1075, column: 12, scope: !1888)
!1968 = !DILocation(line: 1075, column: 5, scope: !1888)
!1969 = !DILocation(line: 1075, column: 16, scope: !1888)
!1970 = !DILocation(line: 1075, column: 23, scope: !1888)
!1971 = !DILocation(line: 1075, column: 32, scope: !1888)
!1972 = !DILocation(line: 1075, column: 39, scope: !1888)
!1973 = !DILocation(line: 1075, column: 50, scope: !1888)
!1974 = !DILocation(line: 1077, column: 21, scope: !1888)
!1975 = !DILocation(line: 1077, column: 26, scope: !1888)
!1976 = !DILocation(line: 1077, column: 29, scope: !1888)
!1977 = !DILocation(line: 1077, column: 43, scope: !1888)
!1978 = !DILocation(line: 1077, column: 46, scope: !1888)
!1979 = !DILocation(line: 1077, column: 5, scope: !1888)
!1980 = !DILocation(line: 1079, column: 5, scope: !1888)
!1981 = !DILocation(line: 1079, column: 20, scope: !1888)
!1982 = !DILocation(line: 1079, column: 23, scope: !1888)
!1983 = !DILocation(line: 1080, column: 12, scope: !1888)
!1984 = !DILocation(line: 1080, column: 19, scope: !1888)
!1985 = !DILocation(line: 1080, column: 5, scope: !1888)
!1986 = !DILocation(line: 1080, column: 38, scope: !1888)
!1987 = !DILocation(line: 1082, column: 20, scope: !1888)
!1988 = !DILocation(line: 1082, column: 28, scope: !1888)
!1989 = !DILocation(line: 1082, column: 5, scope: !1888)
!1990 = !DILocation(line: 1083, column: 14, scope: !1888)
!1991 = !DILocation(line: 1083, column: 31, scope: !1888)
!1992 = !DILocation(line: 1083, column: 34, scope: !1888)
!1993 = !DILocation(line: 1083, column: 44, scope: !1888)
!1994 = !DILocation(line: 1083, column: 5, scope: !1888)
!1995 = !DILocation(line: 1084, column: 18, scope: !1888)
!1996 = !DILocation(line: 1084, column: 21, scope: !1888)
!1997 = !DILocation(line: 1084, column: 32, scope: !1888)
!1998 = !DILocation(line: 1084, column: 41, scope: !1888)
!1999 = !DILocation(line: 1084, column: 44, scope: !1888)
!2000 = !DILocation(line: 1084, column: 5, scope: !1888)
!2001 = !DILocation(line: 1087, column: 12, scope: !1888)
!2002 = !DILocation(line: 1087, column: 19, scope: !1888)
!2003 = !DILocation(line: 1087, column: 5, scope: !1888)
!2004 = !DILocation(line: 1087, column: 25, scope: !1888)
!2005 = !DILocation(line: 1087, column: 28, scope: !1888)
!2006 = !DILocation(line: 1087, column: 38, scope: !1888)
!2007 = !DILocation(line: 1089, column: 12, scope: !1888)
!2008 = !DILocation(line: 1089, column: 19, scope: !1888)
!2009 = !DILocation(line: 1089, column: 24, scope: !1888)
!2010 = !DILocation(line: 1089, column: 5, scope: !1888)
!2011 = !DILocation(line: 1089, column: 30, scope: !1888)
!2012 = !DILocation(line: 1091, column: 12, scope: !1888)
!2013 = !DILocation(line: 1091, column: 15, scope: !1888)
!2014 = !DILocation(line: 1091, column: 5, scope: !1888)
!2015 = !DILocation(line: 1091, column: 26, scope: !1888)
!2016 = !DILocation(line: 1091, column: 29, scope: !1888)
!2017 = !DILocation(line: 1093, column: 12, scope: !1888)
!2018 = !DILocation(line: 1093, column: 5, scope: !1888)
!2019 = !DILocation(line: 1093, column: 16, scope: !1888)
!2020 = !DILocation(line: 1093, column: 23, scope: !1888)
!2021 = !DILocation(line: 1095, column: 23, scope: !1888)
!2022 = !DILocation(line: 1095, column: 26, scope: !1888)
!2023 = !DILocation(line: 1095, column: 40, scope: !1888)
!2024 = !DILocation(line: 1095, column: 49, scope: !1888)
!2025 = !DILocation(line: 1095, column: 5, scope: !1888)
!2026 = !DILocation(line: 1097, column: 12, scope: !1888)
!2027 = !DILocation(line: 1097, column: 5, scope: !1888)
!2028 = !DILocation(line: 1097, column: 16, scope: !1888)
!2029 = !DILocation(line: 1097, column: 23, scope: !1888)
!2030 = !DILocation(line: 1098, column: 5, scope: !1888)
!2031 = !DILocation(line: 1098, column: 20, scope: !1888)
!2032 = !DILocation(line: 1098, column: 23, scope: !1888)
!2033 = !DILocation(line: 1099, column: 12, scope: !1888)
!2034 = !DILocation(line: 1099, column: 19, scope: !1888)
!2035 = !DILocation(line: 1099, column: 5, scope: !1888)
!2036 = !DILocation(line: 1099, column: 33, scope: !1888)
!2037 = !DILocation(line: 1101, column: 28, scope: !1888)
!2038 = !DILocation(line: 1101, column: 36, scope: !1888)
!2039 = !DILocation(line: 1101, column: 5, scope: !1888)
!2040 = !DILocation(line: 1103, column: 38, scope: !1888)
!2041 = !DILocation(line: 1103, column: 23, scope: !1888)
!2042 = !DILocation(line: 1103, column: 5, scope: !1888)
!2043 = !DILocation(line: 1103, column: 8, scope: !1888)
!2044 = !DILocation(line: 1103, column: 21, scope: !1888)
!2045 = !DILocation(line: 1104, column: 38, scope: !1888)
!2046 = !DILocation(line: 1104, column: 23, scope: !1888)
!2047 = !DILocation(line: 1104, column: 5, scope: !1888)
!2048 = !DILocation(line: 1104, column: 8, scope: !1888)
!2049 = !DILocation(line: 1104, column: 21, scope: !1888)
!2050 = !DILocation(line: 1106, column: 12, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !1888, file: !935, line: 1106, column: 5)
!2052 = !DILocation(line: 1106, column: 28, scope: !2051)
!2053 = !DILocation(line: 1106, column: 10, scope: !2051)
!2054 = !DILocation(line: 1106, column: 33, scope: !2055)
!2055 = !DILexicalBlockFile(scope: !2056, file: !935, discriminator: 1)
!2056 = distinct !DILexicalBlock(scope: !2051, file: !935, line: 1106, column: 5)
!2057 = !DILocation(line: 1106, column: 35, scope: !2055)
!2058 = !DILocation(line: 1106, column: 5, scope: !2055)
!2059 = !DILocation(line: 1107, column: 29, scope: !2056)
!2060 = !DILocation(line: 1107, column: 38, scope: !2056)
!2061 = !DILocation(line: 1107, column: 36, scope: !2056)
!2062 = !DILocation(line: 1107, column: 54, scope: !2056)
!2063 = !DILocation(line: 1107, column: 56, scope: !2056)
!2064 = !DILocation(line: 1107, column: 41, scope: !2056)
!2065 = !DILocation(line: 1107, column: 44, scope: !2056)
!2066 = !DILocation(line: 1107, column: 63, scope: !2056)
!2067 = !DILocation(line: 1107, column: 68, scope: !2056)
!2068 = !DILocation(line: 1107, column: 66, scope: !2056)
!2069 = !DILocation(line: 1107, column: 9, scope: !2056)
!2070 = !DILocation(line: 1106, column: 42, scope: !2071)
!2071 = !DILexicalBlockFile(scope: !2056, file: !935, discriminator: 2)
!2072 = !DILocation(line: 1106, column: 50, scope: !2071)
!2073 = !DILocation(line: 1106, column: 5, scope: !2071)
!2074 = distinct !{!2074, !2075}
!2075 = !DILocation(line: 1106, column: 5, scope: !1888)
!2076 = !DILocation(line: 1109, column: 5, scope: !1888)
!2077 = !DILocation(line: 1109, column: 20, scope: !1888)
!2078 = !DILocation(line: 1109, column: 23, scope: !1888)
!2079 = !DILocation(line: 1110, column: 12, scope: !1888)
!2080 = !DILocation(line: 1110, column: 19, scope: !1888)
!2081 = !DILocation(line: 1110, column: 5, scope: !1888)
!2082 = !DILocation(line: 1110, column: 33, scope: !1888)
!2083 = !DILocation(line: 1111, column: 12, scope: !1888)
!2084 = !DILocation(line: 1111, column: 15, scope: !1888)
!2085 = !DILocation(line: 1111, column: 5, scope: !1888)
!2086 = !DILocation(line: 1111, column: 32, scope: !1888)
!2087 = !DILocation(line: 1111, column: 39, scope: !1888)
!2088 = !DILocation(line: 1113, column: 12, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !1888, file: !935, line: 1113, column: 5)
!2090 = !DILocation(line: 1113, column: 19, scope: !2089)
!2091 = !DILocation(line: 1113, column: 10, scope: !2089)
!2092 = !DILocation(line: 1113, column: 24, scope: !2093)
!2093 = !DILexicalBlockFile(scope: !2094, file: !935, discriminator: 1)
!2094 = distinct !DILexicalBlock(scope: !2089, file: !935, line: 1113, column: 5)
!2095 = !DILocation(line: 1113, column: 26, scope: !2093)
!2096 = !DILocation(line: 1113, column: 5, scope: !2093)
!2097 = !DILocation(line: 1114, column: 25, scope: !2094)
!2098 = !DILocation(line: 1114, column: 30, scope: !2094)
!2099 = !DILocation(line: 1114, column: 28, scope: !2094)
!2100 = !DILocation(line: 1114, column: 33, scope: !2094)
!2101 = !DILocation(line: 1114, column: 40, scope: !2094)
!2102 = !DILocation(line: 1114, column: 55, scope: !2094)
!2103 = !DILocation(line: 1114, column: 53, scope: !2094)
!2104 = !DILocation(line: 1114, column: 58, scope: !2094)
!2105 = !DILocation(line: 1114, column: 63, scope: !2094)
!2106 = !DILocation(line: 1114, column: 61, scope: !2094)
!2107 = !DILocation(line: 1114, column: 9, scope: !2094)
!2108 = !DILocation(line: 1113, column: 33, scope: !2109)
!2109 = !DILexicalBlockFile(scope: !2094, file: !935, discriminator: 2)
!2110 = !DILocation(line: 1113, column: 41, scope: !2109)
!2111 = !DILocation(line: 1113, column: 5, scope: !2109)
!2112 = distinct !{!2112, !2113}
!2113 = !DILocation(line: 1113, column: 5, scope: !1888)
!2114 = !DILocation(line: 1116, column: 29, scope: !1888)
!2115 = !DILocation(line: 1116, column: 38, scope: !1888)
!2116 = !DILocation(line: 1116, column: 41, scope: !1888)
!2117 = !DILocation(line: 1116, column: 51, scope: !1888)
!2118 = !DILocation(line: 1116, column: 54, scope: !1888)
!2119 = !DILocation(line: 1116, column: 5, scope: !1888)
!2120 = !DILocation(line: 1117, column: 31, scope: !1888)
!2121 = !DILocation(line: 1117, column: 40, scope: !1888)
!2122 = !DILocation(line: 1117, column: 49, scope: !1888)
!2123 = !DILocation(line: 1117, column: 52, scope: !1888)
!2124 = !DILocation(line: 1117, column: 5, scope: !1888)
!2125 = !DILocation(line: 1119, column: 12, scope: !1888)
!2126 = !DILocation(line: 1119, column: 15, scope: !1888)
!2127 = !DILocation(line: 1119, column: 5, scope: !1888)
!2128 = !DILocation(line: 1121, column: 12, scope: !1888)
!2129 = !DILocation(line: 1122, column: 12, scope: !1900)
!2130 = !DILocation(line: 1122, column: 10, scope: !1900)
!2131 = !DILocation(line: 1122, column: 17, scope: !2132)
!2132 = !DILexicalBlockFile(scope: !1899, file: !935, discriminator: 1)
!2133 = !DILocation(line: 1122, column: 19, scope: !2132)
!2134 = !DILocation(line: 1122, column: 5, scope: !2132)
!2135 = !DILocalVariable(name: "impulse_resp", scope: !1898, file: !935, line: 1123, type: !2136)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 960, align: 16, elements: !2137)
!2137 = !{!2138}
!2138 = !DISubrange(count: 60)
!2139 = !DILocation(line: 1123, column: 17, scope: !1898)
!2140 = !DILocalVariable(name: "residual", scope: !1898, file: !935, line: 1124, type: !2141)
!2141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 1024, align: 16, elements: !2142)
!2142 = !{!2143}
!2143 = !DISubrange(count: 64)
!2144 = !DILocation(line: 1124, column: 17, scope: !1898)
!2145 = !DILocalVariable(name: "flt_in", scope: !1898, file: !935, line: 1125, type: !2136)
!2146 = !DILocation(line: 1125, column: 17, scope: !1898)
!2147 = !DILocalVariable(name: "zero", scope: !1898, file: !935, line: 1126, type: !1793)
!2148 = !DILocation(line: 1126, column: 17, scope: !1898)
!2149 = !DILocalVariable(name: "fir", scope: !1898, file: !935, line: 1126, type: !1793)
!2150 = !DILocation(line: 1126, column: 27, scope: !1898)
!2151 = !DILocalVariable(name: "iir", scope: !1898, file: !935, line: 1126, type: !1793)
!2152 = !DILocation(line: 1126, column: 36, scope: !1898)
!2153 = !DILocation(line: 1132, column: 9, scope: !1898)
!2154 = !DILocation(line: 1133, column: 9, scope: !1898)
!2155 = !DILocation(line: 1134, column: 9, scope: !1898)
!2156 = !DILocation(line: 1136, column: 9, scope: !1898)
!2157 = !DILocation(line: 1136, column: 19, scope: !1898)
!2158 = !DILocation(line: 1137, column: 30, scope: !1898)
!2159 = !DILocation(line: 1137, column: 40, scope: !1898)
!2160 = !DILocation(line: 1137, column: 38, scope: !1898)
!2161 = !DILocation(line: 1137, column: 48, scope: !1898)
!2162 = !DILocation(line: 1137, column: 64, scope: !1898)
!2163 = !DILocation(line: 1137, column: 71, scope: !1898)
!2164 = !DILocation(line: 1137, column: 61, scope: !1898)
!2165 = !DILocation(line: 1138, column: 30, scope: !1898)
!2166 = !DILocation(line: 1138, column: 36, scope: !1898)
!2167 = !DILocation(line: 1138, column: 42, scope: !1898)
!2168 = !DILocation(line: 1138, column: 50, scope: !1898)
!2169 = !DILocation(line: 1138, column: 57, scope: !1898)
!2170 = !DILocation(line: 1137, column: 9, scope: !1898)
!2171 = !DILocation(line: 1139, column: 25, scope: !1898)
!2172 = !DILocation(line: 1139, column: 30, scope: !1898)
!2173 = !DILocation(line: 1139, column: 28, scope: !1898)
!2174 = !DILocation(line: 1139, column: 33, scope: !1898)
!2175 = !DILocation(line: 1139, column: 40, scope: !1898)
!2176 = !DILocation(line: 1139, column: 54, scope: !1898)
!2177 = !DILocation(line: 1139, column: 9, scope: !1898)
!2178 = !DILocation(line: 1142, column: 9, scope: !1898)
!2179 = !DILocation(line: 1142, column: 19, scope: !1898)
!2180 = !DILocation(line: 1143, column: 9, scope: !1898)
!2181 = !DILocation(line: 1143, column: 21, scope: !1898)
!2182 = !DILocation(line: 1143, column: 24, scope: !1898)
!2183 = !DILocation(line: 1144, column: 9, scope: !1898)
!2184 = !DILocation(line: 1144, column: 21, scope: !1898)
!2185 = !DILocation(line: 1144, column: 24, scope: !1898)
!2186 = !DILocation(line: 1146, column: 30, scope: !1898)
!2187 = !DILocation(line: 1146, column: 40, scope: !1898)
!2188 = !DILocation(line: 1146, column: 38, scope: !1898)
!2189 = !DILocation(line: 1146, column: 48, scope: !1898)
!2190 = !DILocation(line: 1146, column: 64, scope: !1898)
!2191 = !DILocation(line: 1146, column: 71, scope: !1898)
!2192 = !DILocation(line: 1146, column: 61, scope: !1898)
!2193 = !DILocation(line: 1147, column: 30, scope: !1898)
!2194 = !DILocation(line: 1147, column: 35, scope: !1898)
!2195 = !DILocation(line: 1147, column: 40, scope: !1898)
!2196 = !DILocation(line: 1147, column: 48, scope: !1898)
!2197 = !DILocation(line: 1147, column: 55, scope: !1898)
!2198 = !DILocation(line: 1146, column: 9, scope: !1898)
!2199 = !DILocation(line: 1148, column: 9, scope: !1898)
!2200 = !DILocation(line: 1148, column: 24, scope: !1898)
!2201 = !DILocation(line: 1148, column: 27, scope: !1898)
!2202 = !DILocation(line: 1149, column: 28, scope: !1898)
!2203 = !DILocation(line: 1149, column: 33, scope: !1898)
!2204 = !DILocation(line: 1149, column: 31, scope: !1898)
!2205 = !DILocation(line: 1149, column: 36, scope: !1898)
!2206 = !DILocation(line: 1149, column: 43, scope: !1898)
!2207 = !DILocation(line: 1149, column: 57, scope: !1898)
!2208 = !DILocation(line: 1149, column: 9, scope: !1898)
!2209 = !DILocation(line: 1151, column: 20, scope: !1898)
!2210 = !DILocation(line: 1151, column: 23, scope: !1898)
!2211 = !DILocation(line: 1151, column: 33, scope: !1898)
!2212 = !DILocation(line: 1151, column: 47, scope: !1898)
!2213 = !DILocation(line: 1151, column: 51, scope: !1898)
!2214 = !DILocation(line: 1151, column: 9, scope: !1898)
!2215 = !DILocation(line: 1152, column: 38, scope: !1898)
!2216 = !DILocation(line: 1152, column: 48, scope: !1898)
!2217 = !DILocation(line: 1152, column: 51, scope: !1898)
!2218 = !DILocation(line: 1153, column: 51, scope: !1898)
!2219 = !DILocation(line: 1153, column: 53, scope: !1898)
!2220 = !DILocation(line: 1153, column: 38, scope: !1898)
!2221 = !DILocation(line: 1153, column: 41, scope: !1898)
!2222 = !DILocation(line: 1153, column: 73, scope: !1898)
!2223 = !DILocation(line: 1153, column: 61, scope: !1898)
!2224 = !DILocation(line: 1153, column: 64, scope: !1898)
!2225 = !DILocation(line: 1154, column: 38, scope: !1898)
!2226 = !DILocation(line: 1154, column: 41, scope: !1898)
!2227 = !DILocation(line: 1152, column: 9, scope: !1898)
!2228 = !DILocation(line: 1155, column: 25, scope: !1898)
!2229 = !DILocation(line: 1155, column: 35, scope: !1898)
!2230 = !DILocation(line: 1155, column: 49, scope: !1898)
!2231 = !DILocation(line: 1155, column: 9, scope: !1898)
!2232 = !DILocation(line: 1157, column: 20, scope: !1898)
!2233 = !DILocation(line: 1157, column: 23, scope: !1898)
!2234 = !DILocation(line: 1157, column: 37, scope: !1898)
!2235 = !DILocation(line: 1157, column: 41, scope: !1898)
!2236 = !DILocation(line: 1157, column: 9, scope: !1898)
!2237 = !DILocation(line: 1160, column: 38, scope: !1898)
!2238 = !DILocation(line: 1160, column: 52, scope: !1898)
!2239 = !DILocation(line: 1160, column: 55, scope: !1898)
!2240 = !DILocation(line: 1161, column: 51, scope: !1898)
!2241 = !DILocation(line: 1161, column: 53, scope: !1898)
!2242 = !DILocation(line: 1161, column: 38, scope: !1898)
!2243 = !DILocation(line: 1161, column: 41, scope: !1898)
!2244 = !DILocation(line: 1161, column: 73, scope: !1898)
!2245 = !DILocation(line: 1161, column: 61, scope: !1898)
!2246 = !DILocation(line: 1161, column: 64, scope: !1898)
!2247 = !DILocation(line: 1160, column: 9, scope: !1898)
!2248 = !DILocation(line: 1164, column: 17, scope: !1898)
!2249 = !DILocation(line: 1164, column: 20, scope: !1898)
!2250 = !DILocation(line: 1164, column: 9, scope: !1898)
!2251 = !DILocation(line: 1164, column: 37, scope: !1898)
!2252 = !DILocation(line: 1164, column: 40, scope: !1898)
!2253 = !DILocation(line: 1164, column: 56, scope: !1898)
!2254 = !DILocation(line: 1166, column: 16, scope: !1897)
!2255 = !DILocation(line: 1166, column: 14, scope: !1897)
!2256 = !DILocation(line: 1166, column: 21, scope: !2257)
!2257 = !DILexicalBlockFile(scope: !1896, file: !935, discriminator: 1)
!2258 = !DILocation(line: 1166, column: 23, scope: !2257)
!2259 = !DILocation(line: 1166, column: 9, scope: !2257)
!2260 = !DILocation(line: 1167, column: 41, scope: !1896)
!2261 = !DILocation(line: 1167, column: 38, scope: !1896)
!2262 = !DILocation(line: 1167, column: 44, scope: !1896)
!2263 = !DILocation(line: 1167, column: 65, scope: !1896)
!2264 = !DILocation(line: 1167, column: 52, scope: !1896)
!2265 = !DILocation(line: 1167, column: 50, scope: !1896)
!2266 = !DILocation(line: 1167, column: 21, scope: !1896)
!2267 = !DILocation(line: 194, column: 10, scope: !2268, inlinedAt: !1895)
!2268 = distinct !DILexicalBlock(scope: !1890, file: !1891, line: 194, column: 9)
!2269 = !DILocation(line: 194, column: 11, scope: !2268, inlinedAt: !1895)
!2270 = !DILocation(line: 194, column: 21, scope: !2268, inlinedAt: !1895)
!2271 = !DILocation(line: 194, column: 9, scope: !1890, inlinedAt: !1895)
!2272 = !DILocation(line: 194, column: 40, scope: !2273, inlinedAt: !1895)
!2273 = !DILexicalBlockFile(scope: !2268, file: !1891, discriminator: 1)
!2274 = !DILocation(line: 194, column: 41, scope: !2273, inlinedAt: !1895)
!2275 = !DILocation(line: 194, column: 47, scope: !2273, inlinedAt: !1895)
!2276 = !DILocation(line: 194, column: 39, scope: !2273, inlinedAt: !1895)
!2277 = !DILocation(line: 194, column: 32, scope: !2273, inlinedAt: !1895)
!2278 = !DILocation(line: 195, column: 17, scope: !2268, inlinedAt: !1895)
!2279 = !DILocation(line: 195, column: 10, scope: !2268, inlinedAt: !1895)
!2280 = !DILocation(line: 196, column: 1, scope: !1890, inlinedAt: !1895)
!2281 = !DILocation(line: 1167, column: 16, scope: !1896)
!2282 = !DILocation(line: 1167, column: 13, scope: !1896)
!2283 = !DILocation(line: 1167, column: 19, scope: !1896)
!2284 = !DILocation(line: 1166, column: 30, scope: !2285)
!2285 = !DILexicalBlockFile(scope: !1896, file: !935, discriminator: 2)
!2286 = !DILocation(line: 1166, column: 9, scope: !2285)
!2287 = distinct !{!2287, !2288}
!2288 = !DILocation(line: 1166, column: 9, scope: !1898)
!2289 = !DILocation(line: 1168, column: 16, scope: !1898)
!2290 = !DILocation(line: 1168, column: 19, scope: !1898)
!2291 = !DILocation(line: 1168, column: 35, scope: !1898)
!2292 = !DILocation(line: 1168, column: 48, scope: !1898)
!2293 = !DILocation(line: 1168, column: 9, scope: !1898)
!2294 = !DILocation(line: 1168, column: 54, scope: !1898)
!2295 = !DILocation(line: 1172, column: 30, scope: !1898)
!2296 = !DILocation(line: 1172, column: 40, scope: !1898)
!2297 = !DILocation(line: 1172, column: 38, scope: !1898)
!2298 = !DILocation(line: 1172, column: 48, scope: !1898)
!2299 = !DILocation(line: 1172, column: 64, scope: !1898)
!2300 = !DILocation(line: 1172, column: 71, scope: !1898)
!2301 = !DILocation(line: 1172, column: 61, scope: !1898)
!2302 = !DILocation(line: 1173, column: 30, scope: !1898)
!2303 = !DILocation(line: 1173, column: 33, scope: !1898)
!2304 = !DILocation(line: 1173, column: 47, scope: !1898)
!2305 = !DILocation(line: 1173, column: 50, scope: !1898)
!2306 = !DILocation(line: 1174, column: 30, scope: !1898)
!2307 = !DILocation(line: 1174, column: 34, scope: !1898)
!2308 = !DILocation(line: 1174, column: 41, scope: !1898)
!2309 = !DILocation(line: 1172, column: 9, scope: !1898)
!2310 = !DILocation(line: 1175, column: 17, scope: !1898)
!2311 = !DILocation(line: 1175, column: 20, scope: !1898)
!2312 = !DILocation(line: 1175, column: 9, scope: !1898)
!2313 = !DILocation(line: 1175, column: 34, scope: !1898)
!2314 = !DILocation(line: 1175, column: 37, scope: !1898)
!2315 = !DILocation(line: 1175, column: 50, scope: !1898)
!2316 = !DILocation(line: 1177, column: 16, scope: !1898)
!2317 = !DILocation(line: 1177, column: 19, scope: !1898)
!2318 = !DILocation(line: 1177, column: 32, scope: !1898)
!2319 = !DILocation(line: 1177, column: 45, scope: !1898)
!2320 = !DILocation(line: 1177, column: 9, scope: !1898)
!2321 = !DILocation(line: 1177, column: 51, scope: !1898)
!2322 = !DILocation(line: 1177, column: 58, scope: !1898)
!2323 = !DILocation(line: 1180, column: 12, scope: !1898)
!2324 = !DILocation(line: 1181, column: 16, scope: !1898)
!2325 = !DILocation(line: 1182, column: 5, scope: !1898)
!2326 = !DILocation(line: 1122, column: 25, scope: !2327)
!2327 = !DILexicalBlockFile(scope: !1899, file: !935, discriminator: 2)
!2328 = !DILocation(line: 1122, column: 5, scope: !2327)
!2329 = distinct !{!2329, !2330}
!2330 = !DILocation(line: 1122, column: 5, scope: !1888)
!2331 = !DILocation(line: 1184, column: 13, scope: !1888)
!2332 = !DILocation(line: 1184, column: 5, scope: !1888)
!2333 = !DILocation(line: 1186, column: 33, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !1888, file: !935, line: 1186, column: 9)
!2335 = !DILocation(line: 1186, column: 40, scope: !2334)
!2336 = !DILocation(line: 1186, column: 16, scope: !2334)
!2337 = !DILocation(line: 1186, column: 14, scope: !2334)
!2338 = !DILocation(line: 1186, column: 55, scope: !2334)
!2339 = !DILocation(line: 1186, column: 9, scope: !1888)
!2340 = !DILocation(line: 1187, column: 16, scope: !2334)
!2341 = !DILocation(line: 1187, column: 9, scope: !2334)
!2342 = !DILocation(line: 1189, column: 6, scope: !1888)
!2343 = !DILocation(line: 1189, column: 21, scope: !1888)
!2344 = !DILocation(line: 1190, column: 34, scope: !1888)
!2345 = !DILocation(line: 1190, column: 37, scope: !1888)
!2346 = !DILocation(line: 1190, column: 19, scope: !1888)
!2347 = !DILocation(line: 1190, column: 5, scope: !1888)
!2348 = !DILocation(line: 1190, column: 12, scope: !1888)
!2349 = !DILocation(line: 1190, column: 17, scope: !1888)
!2350 = !DILocation(line: 1191, column: 5, scope: !1888)
!2351 = !DILocation(line: 1192, column: 1, scope: !1888)
!2352 = distinct !DISubprogram(name: "highpass_filter", scope: !935, file: !935, line: 81, type: !2353, isLocal: true, isDefinition: true, scopeLine: 82, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !1945, !1945, !1354}
!2355 = !DILocalVariable(name: "a", arg: 1, scope: !2356, file: !1891, line: 203, type: !922)
!2356 = distinct !DISubprogram(name: "av_clipl_int32_c", scope: !1891, file: !1891, line: 203, type: !2357, isLocal: true, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!925, !922}
!2359 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !2360)
!2360 = distinct !DILocation(line: 87, column: 18, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2362, file: !935, line: 84, column: 37)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !935, line: 84, column: 5)
!2363 = distinct !DILexicalBlock(scope: !2352, file: !935, line: 84, column: 5)
!2364 = !DILocalVariable(name: "buf", arg: 1, scope: !2352, file: !935, line: 81, type: !1945)
!2365 = !DILocation(line: 81, column: 38, scope: !2352)
!2366 = !DILocalVariable(name: "fir", arg: 2, scope: !2352, file: !935, line: 81, type: !1945)
!2367 = !DILocation(line: 81, column: 52, scope: !2352)
!2368 = !DILocalVariable(name: "iir", arg: 3, scope: !2352, file: !935, line: 81, type: !1354)
!2369 = !DILocation(line: 81, column: 62, scope: !2352)
!2370 = !DILocalVariable(name: "i", scope: !2352, file: !935, line: 83, type: !920)
!2371 = !DILocation(line: 83, column: 9, scope: !2352)
!2372 = !DILocation(line: 84, column: 12, scope: !2363)
!2373 = !DILocation(line: 84, column: 10, scope: !2363)
!2374 = !DILocation(line: 84, column: 17, scope: !2375)
!2375 = !DILexicalBlockFile(scope: !2362, file: !935, discriminator: 1)
!2376 = !DILocation(line: 84, column: 19, scope: !2375)
!2377 = !DILocation(line: 84, column: 5, scope: !2375)
!2378 = !DILocation(line: 85, column: 21, scope: !2361)
!2379 = !DILocation(line: 85, column: 17, scope: !2361)
!2380 = !DILocation(line: 85, column: 24, scope: !2361)
!2381 = !DILocation(line: 85, column: 37, scope: !2361)
!2382 = !DILocation(line: 85, column: 36, scope: !2361)
!2383 = !DILocation(line: 85, column: 35, scope: !2361)
!2384 = !DILocation(line: 85, column: 42, scope: !2361)
!2385 = !DILocation(line: 85, column: 31, scope: !2361)
!2386 = !DILocation(line: 85, column: 56, scope: !2361)
!2387 = !DILocation(line: 85, column: 55, scope: !2361)
!2388 = !DILocation(line: 85, column: 61, scope: !2361)
!2389 = !DILocation(line: 85, column: 68, scope: !2361)
!2390 = !DILocation(line: 85, column: 79, scope: !2361)
!2391 = !DILocation(line: 85, column: 90, scope: !2361)
!2392 = !DILocation(line: 85, column: 89, scope: !2361)
!2393 = !DILocation(line: 85, column: 95, scope: !2361)
!2394 = !DILocation(line: 85, column: 105, scope: !2361)
!2395 = !DILocation(line: 85, column: 116, scope: !2361)
!2396 = !DILocation(line: 85, column: 84, scope: !2361)
!2397 = !DILocation(line: 85, column: 49, scope: !2361)
!2398 = !DILocation(line: 85, column: 10, scope: !2361)
!2399 = !DILocation(line: 85, column: 14, scope: !2361)
!2400 = !DILocation(line: 86, column: 20, scope: !2361)
!2401 = !DILocation(line: 86, column: 16, scope: !2361)
!2402 = !DILocation(line: 86, column: 10, scope: !2361)
!2403 = !DILocation(line: 86, column: 14, scope: !2361)
!2404 = !DILocation(line: 87, column: 45, scope: !2361)
!2405 = !DILocation(line: 87, column: 44, scope: !2361)
!2406 = !DILocation(line: 87, column: 35, scope: !2361)
!2407 = !DILocation(line: 87, column: 49, scope: !2361)
!2408 = !DILocation(line: 87, column: 18, scope: !2361)
!2409 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !2360)
!2410 = distinct !DILexicalBlock(scope: !2356, file: !1891, line: 205, column: 9)
!2411 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !2360)
!2412 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !2360)
!2413 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !2360)
!2414 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !2360)
!2415 = !DILexicalBlockFile(scope: !2410, file: !1891, discriminator: 1)
!2416 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !2360)
!2417 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !2360)
!2418 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !2360)
!2419 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !2360)
!2420 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !2360)
!2421 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !2360)
!2422 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !2360)
!2423 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !2360)
!2424 = !DILocation(line: 87, column: 62, scope: !2361)
!2425 = !DILocation(line: 87, column: 13, scope: !2361)
!2426 = !DILocation(line: 87, column: 9, scope: !2361)
!2427 = !DILocation(line: 87, column: 16, scope: !2361)
!2428 = !DILocation(line: 88, column: 5, scope: !2361)
!2429 = !DILocation(line: 84, column: 33, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !2362, file: !935, discriminator: 2)
!2431 = !DILocation(line: 84, column: 5, scope: !2430)
!2432 = distinct !{!2432, !2433}
!2433 = !DILocation(line: 84, column: 5, scope: !2352)
!2434 = !DILocation(line: 89, column: 1, scope: !2352)
!2435 = distinct !DISubprogram(name: "comp_lpc_coeff", scope: !935, file: !935, line: 183, type: !2436, isLocal: true, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{null, !1945, !1945}
!2438 = !DILocalVariable(name: "buf", arg: 1, scope: !2435, file: !935, line: 183, type: !1945)
!2439 = !DILocation(line: 183, column: 37, scope: !2435)
!2440 = !DILocalVariable(name: "lpc", arg: 2, scope: !2435, file: !935, line: 183, type: !1945)
!2441 = !DILocation(line: 183, column: 51, scope: !2435)
!2442 = !DILocalVariable(name: "autocorr", scope: !2435, file: !935, line: 185, type: !2443)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 704, align: 16, elements: !2444)
!2444 = !{!2445}
!2445 = !DISubrange(count: 44)
!2446 = !DILocation(line: 185, column: 13, scope: !2435)
!2447 = !DILocalVariable(name: "autocorr_ptr", scope: !2435, file: !935, line: 186, type: !1945)
!2448 = !DILocation(line: 186, column: 14, scope: !2435)
!2449 = !DILocation(line: 186, column: 29, scope: !2435)
!2450 = !DILocalVariable(name: "lpc_ptr", scope: !2435, file: !935, line: 187, type: !1945)
!2451 = !DILocation(line: 187, column: 14, scope: !2435)
!2452 = !DILocation(line: 187, column: 24, scope: !2435)
!2453 = !DILocalVariable(name: "i", scope: !2435, file: !935, line: 188, type: !920)
!2454 = !DILocation(line: 188, column: 9, scope: !2435)
!2455 = !DILocalVariable(name: "j", scope: !2435, file: !935, line: 188, type: !920)
!2456 = !DILocation(line: 188, column: 12, scope: !2435)
!2457 = !DILocation(line: 190, column: 12, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2435, file: !935, line: 190, column: 5)
!2459 = !DILocation(line: 190, column: 19, scope: !2458)
!2460 = !DILocation(line: 190, column: 10, scope: !2458)
!2461 = !DILocation(line: 190, column: 24, scope: !2462)
!2462 = !DILexicalBlockFile(scope: !2463, file: !935, discriminator: 1)
!2463 = distinct !DILexicalBlock(scope: !2458, file: !935, line: 190, column: 5)
!2464 = !DILocation(line: 190, column: 26, scope: !2462)
!2465 = !DILocation(line: 190, column: 5, scope: !2462)
!2466 = !DILocation(line: 191, column: 23, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2463, file: !935, line: 190, column: 45)
!2468 = !DILocation(line: 191, column: 29, scope: !2467)
!2469 = !DILocation(line: 191, column: 27, scope: !2467)
!2470 = !DILocation(line: 191, column: 32, scope: !2467)
!2471 = !DILocation(line: 191, column: 9, scope: !2467)
!2472 = !DILocation(line: 192, column: 25, scope: !2467)
!2473 = !DILocation(line: 192, column: 34, scope: !2467)
!2474 = !DILocation(line: 192, column: 47, scope: !2467)
!2475 = !DILocation(line: 192, column: 52, scope: !2467)
!2476 = !DILocation(line: 192, column: 9, scope: !2467)
!2477 = !DILocation(line: 194, column: 17, scope: !2467)
!2478 = !DILocation(line: 195, column: 22, scope: !2467)
!2479 = !DILocation(line: 196, column: 5, scope: !2467)
!2480 = !DILocation(line: 190, column: 33, scope: !2481)
!2481 = !DILexicalBlockFile(scope: !2463, file: !935, discriminator: 2)
!2482 = !DILocation(line: 190, column: 41, scope: !2481)
!2483 = !DILocation(line: 190, column: 5, scope: !2481)
!2484 = distinct !{!2484, !2485}
!2485 = !DILocation(line: 190, column: 5, scope: !2435)
!2486 = !DILocation(line: 197, column: 1, scope: !2435)
!2487 = distinct !DISubprogram(name: "lpc2lsp", scope: !935, file: !935, line: 199, type: !2488, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{null, !1945, !1945, !1945}
!2490 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !2491)
!2491 = distinct !DILocation(line: 246, column: 16, scope: !2487)
!2492 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !2493)
!2493 = distinct !DILocation(line: 253, column: 19, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2495, file: !935, line: 248, column: 35)
!2495 = distinct !DILexicalBlock(scope: !2496, file: !935, line: 248, column: 5)
!2496 = distinct !DILexicalBlock(scope: !2487, file: !935, line: 248, column: 5)
!2497 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !2498)
!2498 = distinct !DILocation(line: 277, column: 23, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2500, file: !935, line: 256, column: 39)
!2500 = distinct !DILexicalBlock(scope: !2494, file: !935, line: 256, column: 13)
!2501 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !2502)
!2502 = distinct !DILocation(line: 236, column: 16, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2504, file: !935, line: 235, column: 5)
!2504 = distinct !DILexicalBlock(scope: !2487, file: !935, line: 235, column: 5)
!2505 = !DILocalVariable(name: "lpc", arg: 1, scope: !2487, file: !935, line: 199, type: !1945)
!2506 = !DILocation(line: 199, column: 30, scope: !2487)
!2507 = !DILocalVariable(name: "prev_lsp", arg: 2, scope: !2487, file: !935, line: 199, type: !1945)
!2508 = !DILocation(line: 199, column: 44, scope: !2487)
!2509 = !DILocalVariable(name: "lsp", arg: 3, scope: !2487, file: !935, line: 199, type: !1945)
!2510 = !DILocation(line: 199, column: 63, scope: !2487)
!2511 = !DILocalVariable(name: "f", scope: !2487, file: !935, line: 201, type: !2512)
!2512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 384, align: 32, elements: !2513)
!2513 = !{!2514}
!2514 = !DISubrange(count: 12)
!2515 = !DILocation(line: 201, column: 9, scope: !2487)
!2516 = !DILocalVariable(name: "max", scope: !2487, file: !935, line: 205, type: !920)
!2517 = !DILocation(line: 205, column: 9, scope: !2487)
!2518 = !DILocalVariable(name: "shift", scope: !2487, file: !935, line: 205, type: !920)
!2519 = !DILocation(line: 205, column: 14, scope: !2487)
!2520 = !DILocalVariable(name: "cur_val", scope: !2487, file: !935, line: 205, type: !920)
!2521 = !DILocation(line: 205, column: 21, scope: !2487)
!2522 = !DILocalVariable(name: "prev_val", scope: !2487, file: !935, line: 205, type: !920)
!2523 = !DILocation(line: 205, column: 30, scope: !2487)
!2524 = !DILocalVariable(name: "count", scope: !2487, file: !935, line: 205, type: !920)
!2525 = !DILocation(line: 205, column: 40, scope: !2487)
!2526 = !DILocalVariable(name: "p", scope: !2487, file: !935, line: 205, type: !920)
!2527 = !DILocation(line: 205, column: 47, scope: !2487)
!2528 = !DILocalVariable(name: "i", scope: !2487, file: !935, line: 206, type: !920)
!2529 = !DILocation(line: 206, column: 9, scope: !2487)
!2530 = !DILocalVariable(name: "j", scope: !2487, file: !935, line: 206, type: !920)
!2531 = !DILocation(line: 206, column: 12, scope: !2487)
!2532 = !DILocalVariable(name: "temp", scope: !2487, file: !935, line: 207, type: !922)
!2533 = !DILocation(line: 207, column: 13, scope: !2487)
!2534 = !DILocation(line: 210, column: 12, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2487, file: !935, line: 210, column: 5)
!2536 = !DILocation(line: 210, column: 10, scope: !2535)
!2537 = !DILocation(line: 210, column: 17, scope: !2538)
!2538 = !DILexicalBlockFile(scope: !2539, file: !935, discriminator: 1)
!2539 = distinct !DILexicalBlock(scope: !2535, file: !935, line: 210, column: 5)
!2540 = !DILocation(line: 210, column: 19, scope: !2538)
!2541 = !DILocation(line: 210, column: 5, scope: !2538)
!2542 = !DILocation(line: 211, column: 23, scope: !2539)
!2543 = !DILocation(line: 211, column: 19, scope: !2539)
!2544 = !DILocation(line: 211, column: 45, scope: !2539)
!2545 = !DILocation(line: 211, column: 28, scope: !2539)
!2546 = !DILocation(line: 211, column: 26, scope: !2539)
!2547 = !DILocation(line: 211, column: 48, scope: !2539)
!2548 = !DILocation(line: 211, column: 61, scope: !2539)
!2549 = !DILocation(line: 211, column: 18, scope: !2539)
!2550 = !DILocation(line: 211, column: 13, scope: !2539)
!2551 = !DILocation(line: 211, column: 9, scope: !2539)
!2552 = !DILocation(line: 211, column: 16, scope: !2539)
!2553 = !DILocation(line: 210, column: 26, scope: !2554)
!2554 = !DILexicalBlockFile(scope: !2539, file: !935, discriminator: 2)
!2555 = !DILocation(line: 210, column: 5, scope: !2554)
!2556 = distinct !{!2556, !2557}
!2557 = !DILocation(line: 210, column: 5, scope: !2487)
!2558 = !DILocation(line: 214, column: 12, scope: !2487)
!2559 = !DILocation(line: 214, column: 17, scope: !2487)
!2560 = !DILocation(line: 214, column: 5, scope: !2487)
!2561 = !DILocation(line: 214, column: 10, scope: !2487)
!2562 = !DILocation(line: 217, column: 12, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2487, file: !935, line: 217, column: 5)
!2564 = !DILocation(line: 217, column: 10, scope: !2563)
!2565 = !DILocation(line: 217, column: 17, scope: !2566)
!2566 = !DILexicalBlockFile(scope: !2567, file: !935, discriminator: 1)
!2567 = distinct !DILexicalBlock(scope: !2563, file: !935, line: 217, column: 5)
!2568 = !DILocation(line: 217, column: 19, scope: !2566)
!2569 = !DILocation(line: 217, column: 5, scope: !2566)
!2570 = !DILocation(line: 219, column: 31, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2567, file: !935, line: 217, column: 34)
!2572 = !DILocation(line: 219, column: 29, scope: !2571)
!2573 = !DILocation(line: 219, column: 25, scope: !2571)
!2574 = !DILocation(line: 219, column: 24, scope: !2571)
!2575 = !DILocation(line: 219, column: 42, scope: !2571)
!2576 = !DILocation(line: 219, column: 38, scope: !2571)
!2577 = !DILocation(line: 219, column: 60, scope: !2571)
!2578 = !DILocation(line: 219, column: 58, scope: !2571)
!2579 = !DILocation(line: 219, column: 47, scope: !2571)
!2580 = !DILocation(line: 219, column: 45, scope: !2571)
!2581 = !DILocation(line: 219, column: 64, scope: !2571)
!2582 = !DILocation(line: 219, column: 34, scope: !2571)
!2583 = !DILocation(line: 219, column: 15, scope: !2571)
!2584 = !DILocation(line: 219, column: 13, scope: !2571)
!2585 = !DILocation(line: 219, column: 17, scope: !2571)
!2586 = !DILocation(line: 219, column: 9, scope: !2571)
!2587 = !DILocation(line: 219, column: 22, scope: !2571)
!2588 = !DILocation(line: 221, column: 30, scope: !2571)
!2589 = !DILocation(line: 221, column: 28, scope: !2571)
!2590 = !DILocation(line: 221, column: 32, scope: !2571)
!2591 = !DILocation(line: 221, column: 24, scope: !2571)
!2592 = !DILocation(line: 221, column: 45, scope: !2571)
!2593 = !DILocation(line: 221, column: 41, scope: !2571)
!2594 = !DILocation(line: 221, column: 63, scope: !2571)
!2595 = !DILocation(line: 221, column: 61, scope: !2571)
!2596 = !DILocation(line: 221, column: 50, scope: !2571)
!2597 = !DILocation(line: 221, column: 48, scope: !2571)
!2598 = !DILocation(line: 221, column: 67, scope: !2571)
!2599 = !DILocation(line: 221, column: 37, scope: !2571)
!2600 = !DILocation(line: 221, column: 15, scope: !2571)
!2601 = !DILocation(line: 221, column: 13, scope: !2571)
!2602 = !DILocation(line: 221, column: 17, scope: !2571)
!2603 = !DILocation(line: 221, column: 9, scope: !2571)
!2604 = !DILocation(line: 221, column: 22, scope: !2571)
!2605 = !DILocation(line: 222, column: 5, scope: !2571)
!2606 = !DILocation(line: 217, column: 30, scope: !2607)
!2607 = !DILexicalBlockFile(scope: !2567, file: !935, discriminator: 2)
!2608 = !DILocation(line: 217, column: 5, scope: !2607)
!2609 = distinct !{!2609, !2610}
!2610 = !DILocation(line: 217, column: 5, scope: !2487)
!2611 = !DILocation(line: 225, column: 5, scope: !2487)
!2612 = !DILocation(line: 225, column: 11, scope: !2487)
!2613 = !DILocation(line: 226, column: 5, scope: !2487)
!2614 = !DILocation(line: 226, column: 15, scope: !2487)
!2615 = !DILocation(line: 229, column: 13, scope: !2487)
!2616 = !DILocation(line: 229, column: 19, scope: !2487)
!2617 = !DILocation(line: 229, column: 12, scope: !2487)
!2618 = !DILocation(line: 229, column: 27, scope: !2619)
!2619 = !DILexicalBlockFile(scope: !2487, file: !935, discriminator: 1)
!2620 = !DILocation(line: 229, column: 12, scope: !2619)
!2621 = !DILocation(line: 229, column: 38, scope: !2622)
!2622 = !DILexicalBlockFile(scope: !2487, file: !935, discriminator: 2)
!2623 = !DILocation(line: 229, column: 36, scope: !2622)
!2624 = !DILocation(line: 229, column: 12, scope: !2622)
!2625 = !DILocation(line: 229, column: 12, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2487, file: !935, discriminator: 3)
!2627 = !DILocation(line: 229, column: 9, scope: !2626)
!2628 = !DILocation(line: 230, column: 12, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2487, file: !935, line: 230, column: 5)
!2630 = !DILocation(line: 230, column: 10, scope: !2629)
!2631 = !DILocation(line: 230, column: 17, scope: !2632)
!2632 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 1)
!2633 = distinct !DILexicalBlock(scope: !2629, file: !935, line: 230, column: 5)
!2634 = !DILocation(line: 230, column: 19, scope: !2632)
!2635 = !DILocation(line: 230, column: 5, scope: !2632)
!2636 = !DILocation(line: 231, column: 17, scope: !2633)
!2637 = !DILocation(line: 231, column: 29, scope: !2633)
!2638 = !DILocation(line: 231, column: 27, scope: !2633)
!2639 = !DILocation(line: 231, column: 33, scope: !2633)
!2640 = !DILocation(line: 231, column: 26, scope: !2633)
!2641 = !DILocation(line: 231, column: 43, scope: !2632)
!2642 = !DILocation(line: 231, column: 41, scope: !2632)
!2643 = !DILocation(line: 231, column: 26, scope: !2632)
!2644 = !DILocation(line: 231, column: 54, scope: !2645)
!2645 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 2)
!2646 = !DILocation(line: 231, column: 52, scope: !2645)
!2647 = !DILocation(line: 231, column: 50, scope: !2645)
!2648 = !DILocation(line: 231, column: 26, scope: !2645)
!2649 = !DILocation(line: 231, column: 26, scope: !2650)
!2650 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 3)
!2651 = !DILocation(line: 231, column: 22, scope: !2650)
!2652 = !DILocation(line: 231, column: 16, scope: !2650)
!2653 = !DILocation(line: 231, column: 64, scope: !2654)
!2654 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 4)
!2655 = !DILocation(line: 231, column: 16, scope: !2654)
!2656 = !DILocation(line: 231, column: 76, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 5)
!2658 = !DILocation(line: 231, column: 74, scope: !2657)
!2659 = !DILocation(line: 231, column: 80, scope: !2657)
!2660 = !DILocation(line: 231, column: 73, scope: !2657)
!2661 = !DILocation(line: 231, column: 90, scope: !2662)
!2662 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 6)
!2663 = !DILocation(line: 231, column: 88, scope: !2662)
!2664 = !DILocation(line: 231, column: 73, scope: !2662)
!2665 = !DILocation(line: 231, column: 101, scope: !2666)
!2666 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 7)
!2667 = !DILocation(line: 231, column: 99, scope: !2666)
!2668 = !DILocation(line: 231, column: 97, scope: !2666)
!2669 = !DILocation(line: 231, column: 73, scope: !2666)
!2670 = !DILocation(line: 231, column: 73, scope: !2671)
!2671 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 8)
!2672 = !DILocation(line: 231, column: 16, scope: !2671)
!2673 = !DILocation(line: 231, column: 16, scope: !2674)
!2674 = !DILexicalBlockFile(scope: !2633, file: !935, discriminator: 9)
!2675 = !DILocation(line: 231, column: 13, scope: !2674)
!2676 = !DILocation(line: 231, column: 9, scope: !2674)
!2677 = !DILocation(line: 230, column: 30, scope: !2645)
!2678 = !DILocation(line: 230, column: 5, scope: !2645)
!2679 = distinct !{!2679, !2680}
!2680 = !DILocation(line: 230, column: 5, scope: !2487)
!2681 = !DILocation(line: 233, column: 38, scope: !2487)
!2682 = !DILocation(line: 233, column: 13, scope: !2487)
!2683 = !DILocation(line: 233, column: 11, scope: !2487)
!2684 = !DILocation(line: 235, column: 12, scope: !2504)
!2685 = !DILocation(line: 235, column: 10, scope: !2504)
!2686 = !DILocation(line: 235, column: 17, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !2503, file: !935, discriminator: 1)
!2688 = !DILocation(line: 235, column: 19, scope: !2687)
!2689 = !DILocation(line: 235, column: 5, scope: !2687)
!2690 = !DILocation(line: 236, column: 46, scope: !2503)
!2691 = !DILocation(line: 236, column: 44, scope: !2503)
!2692 = !DILocation(line: 236, column: 52, scope: !2503)
!2693 = !DILocation(line: 236, column: 49, scope: !2503)
!2694 = !DILocation(line: 236, column: 33, scope: !2503)
!2695 = !DILocation(line: 236, column: 59, scope: !2503)
!2696 = !DILocation(line: 236, column: 16, scope: !2503)
!2697 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !2502)
!2698 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !2502)
!2699 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !2502)
!2700 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !2502)
!2701 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !2502)
!2702 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !2502)
!2703 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !2502)
!2704 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !2502)
!2705 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !2502)
!2706 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !2502)
!2707 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !2502)
!2708 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !2502)
!2709 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !2502)
!2710 = !DILocation(line: 236, column: 72, scope: !2503)
!2711 = !DILocation(line: 236, column: 11, scope: !2503)
!2712 = !DILocation(line: 236, column: 9, scope: !2503)
!2713 = !DILocation(line: 236, column: 14, scope: !2503)
!2714 = !DILocation(line: 235, column: 30, scope: !2715)
!2715 = !DILexicalBlockFile(scope: !2503, file: !935, discriminator: 2)
!2716 = !DILocation(line: 235, column: 5, scope: !2715)
!2717 = distinct !{!2717, !2718}
!2718 = !DILocation(line: 235, column: 5, scope: !2487)
!2719 = !DILocation(line: 242, column: 7, scope: !2487)
!2720 = !DILocation(line: 243, column: 10, scope: !2487)
!2721 = !DILocation(line: 244, column: 12, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2487, file: !935, line: 244, column: 5)
!2723 = !DILocation(line: 244, column: 10, scope: !2722)
!2724 = !DILocation(line: 244, column: 17, scope: !2725)
!2725 = !DILexicalBlockFile(scope: !2726, file: !935, discriminator: 1)
!2726 = distinct !DILexicalBlock(scope: !2722, file: !935, line: 244, column: 5)
!2727 = !DILocation(line: 244, column: 19, scope: !2725)
!2728 = !DILocation(line: 244, column: 5, scope: !2725)
!2729 = !DILocation(line: 245, column: 23, scope: !2726)
!2730 = !DILocation(line: 245, column: 21, scope: !2726)
!2731 = !DILocation(line: 245, column: 17, scope: !2726)
!2732 = !DILocation(line: 245, column: 28, scope: !2726)
!2733 = !DILocation(line: 245, column: 26, scope: !2726)
!2734 = !DILocation(line: 245, column: 14, scope: !2726)
!2735 = !DILocation(line: 245, column: 9, scope: !2726)
!2736 = !DILocation(line: 244, column: 31, scope: !2737)
!2737 = !DILexicalBlockFile(scope: !2726, file: !935, discriminator: 2)
!2738 = !DILocation(line: 244, column: 5, scope: !2737)
!2739 = distinct !{!2739, !2740}
!2740 = !DILocation(line: 244, column: 5, scope: !2487)
!2741 = !DILocation(line: 246, column: 33, scope: !2487)
!2742 = !DILocation(line: 246, column: 38, scope: !2487)
!2743 = !DILocation(line: 246, column: 16, scope: !2487)
!2744 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !2491)
!2745 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !2491)
!2746 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !2491)
!2747 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !2491)
!2748 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !2491)
!2749 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !2491)
!2750 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !2491)
!2751 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !2491)
!2752 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !2491)
!2753 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !2491)
!2754 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !2491)
!2755 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !2491)
!2756 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !2491)
!2757 = !DILocation(line: 246, column: 14, scope: !2487)
!2758 = !DILocation(line: 247, column: 11, scope: !2487)
!2759 = !DILocation(line: 248, column: 12, scope: !2496)
!2760 = !DILocation(line: 248, column: 10, scope: !2496)
!2761 = !DILocation(line: 248, column: 17, scope: !2762)
!2762 = !DILexicalBlockFile(scope: !2495, file: !935, discriminator: 1)
!2763 = !DILocation(line: 248, column: 19, scope: !2762)
!2764 = !DILocation(line: 248, column: 5, scope: !2762)
!2765 = !DILocation(line: 250, column: 14, scope: !2494)
!2766 = !DILocation(line: 251, column: 16, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2494, file: !935, line: 251, column: 9)
!2768 = !DILocation(line: 251, column: 14, scope: !2767)
!2769 = !DILocation(line: 251, column: 21, scope: !2770)
!2770 = !DILexicalBlockFile(scope: !2771, file: !935, discriminator: 1)
!2771 = distinct !DILexicalBlock(scope: !2767, file: !935, line: 251, column: 9)
!2772 = !DILocation(line: 251, column: 23, scope: !2770)
!2773 = !DILocation(line: 251, column: 9, scope: !2770)
!2774 = !DILocation(line: 252, column: 32, scope: !2771)
!2775 = !DILocation(line: 252, column: 30, scope: !2771)
!2776 = !DILocation(line: 252, column: 26, scope: !2771)
!2777 = !DILocation(line: 252, column: 36, scope: !2771)
!2778 = !DILocation(line: 252, column: 34, scope: !2771)
!2779 = !DILocation(line: 252, column: 21, scope: !2771)
!2780 = !DILocation(line: 252, column: 49, scope: !2771)
!2781 = !DILocation(line: 252, column: 53, scope: !2771)
!2782 = !DILocation(line: 252, column: 51, scope: !2771)
!2783 = !DILocation(line: 252, column: 55, scope: !2771)
!2784 = !DILocation(line: 252, column: 41, scope: !2771)
!2785 = !DILocation(line: 252, column: 39, scope: !2771)
!2786 = !DILocation(line: 252, column: 18, scope: !2771)
!2787 = !DILocation(line: 252, column: 13, scope: !2771)
!2788 = !DILocation(line: 251, column: 35, scope: !2789)
!2789 = !DILexicalBlockFile(scope: !2771, file: !935, discriminator: 2)
!2790 = !DILocation(line: 251, column: 9, scope: !2789)
!2791 = distinct !{!2791, !2792}
!2792 = !DILocation(line: 251, column: 9, scope: !2494)
!2793 = !DILocation(line: 253, column: 36, scope: !2494)
!2794 = !DILocation(line: 253, column: 41, scope: !2494)
!2795 = !DILocation(line: 253, column: 19, scope: !2494)
!2796 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !2493)
!2797 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !2493)
!2798 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !2493)
!2799 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !2493)
!2800 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !2493)
!2801 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !2493)
!2802 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !2493)
!2803 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !2493)
!2804 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !2493)
!2805 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !2493)
!2806 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !2493)
!2807 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !2493)
!2808 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !2493)
!2809 = !DILocation(line: 253, column: 17, scope: !2494)
!2810 = !DILocation(line: 256, column: 14, scope: !2500)
!2811 = !DILocation(line: 256, column: 24, scope: !2500)
!2812 = !DILocation(line: 256, column: 22, scope: !2500)
!2813 = !DILocation(line: 256, column: 34, scope: !2500)
!2814 = !DILocation(line: 256, column: 13, scope: !2494)
!2815 = !DILocalVariable(name: "abs_cur", scope: !2499, file: !935, line: 257, type: !920)
!2816 = !DILocation(line: 257, column: 17, scope: !2499)
!2817 = !DILocation(line: 257, column: 29, scope: !2499)
!2818 = !DILocation(line: 257, column: 38, scope: !2499)
!2819 = !DILocation(line: 257, column: 28, scope: !2499)
!2820 = !DILocation(line: 257, column: 46, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2499, file: !935, discriminator: 1)
!2822 = !DILocation(line: 257, column: 28, scope: !2821)
!2823 = !DILocation(line: 257, column: 60, scope: !2824)
!2824 = !DILexicalBlockFile(scope: !2499, file: !935, discriminator: 2)
!2825 = !DILocation(line: 257, column: 58, scope: !2824)
!2826 = !DILocation(line: 257, column: 28, scope: !2824)
!2827 = !DILocation(line: 257, column: 28, scope: !2828)
!2828 = !DILexicalBlockFile(scope: !2499, file: !935, discriminator: 3)
!2829 = !DILocation(line: 257, column: 17, scope: !2828)
!2830 = !DILocalVariable(name: "abs_prev", scope: !2499, file: !935, line: 258, type: !920)
!2831 = !DILocation(line: 258, column: 17, scope: !2499)
!2832 = !DILocation(line: 258, column: 30, scope: !2499)
!2833 = !DILocation(line: 258, column: 40, scope: !2499)
!2834 = !DILocation(line: 258, column: 29, scope: !2499)
!2835 = !DILocation(line: 258, column: 48, scope: !2821)
!2836 = !DILocation(line: 258, column: 29, scope: !2821)
!2837 = !DILocation(line: 258, column: 63, scope: !2824)
!2838 = !DILocation(line: 258, column: 61, scope: !2824)
!2839 = !DILocation(line: 258, column: 29, scope: !2824)
!2840 = !DILocation(line: 258, column: 29, scope: !2828)
!2841 = !DILocation(line: 258, column: 17, scope: !2828)
!2842 = !DILocalVariable(name: "sum", scope: !2499, file: !935, line: 259, type: !920)
!2843 = !DILocation(line: 259, column: 17, scope: !2499)
!2844 = !DILocation(line: 259, column: 23, scope: !2499)
!2845 = !DILocation(line: 259, column: 33, scope: !2499)
!2846 = !DILocation(line: 259, column: 31, scope: !2499)
!2847 = !DILocation(line: 261, column: 46, scope: !2499)
!2848 = !DILocation(line: 261, column: 21, scope: !2499)
!2849 = !DILocation(line: 261, column: 19, scope: !2499)
!2850 = !DILocation(line: 262, column: 21, scope: !2499)
!2851 = !DILocation(line: 262, column: 17, scope: !2499)
!2852 = !DILocation(line: 263, column: 24, scope: !2499)
!2853 = !DILocation(line: 263, column: 36, scope: !2499)
!2854 = !DILocation(line: 263, column: 33, scope: !2499)
!2855 = !DILocation(line: 263, column: 42, scope: !2499)
!2856 = !DILocation(line: 263, column: 22, scope: !2499)
!2857 = !DILocation(line: 264, column: 30, scope: !2499)
!2858 = !DILocation(line: 264, column: 32, scope: !2499)
!2859 = !DILocation(line: 264, column: 37, scope: !2499)
!2860 = !DILocation(line: 264, column: 46, scope: !2499)
!2861 = !DILocation(line: 264, column: 55, scope: !2499)
!2862 = !DILocation(line: 264, column: 64, scope: !2499)
!2863 = !DILocation(line: 264, column: 68, scope: !2499)
!2864 = !DILocation(line: 264, column: 61, scope: !2499)
!2865 = !DILocation(line: 264, column: 43, scope: !2499)
!2866 = !DILocation(line: 264, column: 28, scope: !2499)
!2867 = !DILocation(line: 264, column: 22, scope: !2499)
!2868 = !DILocation(line: 264, column: 13, scope: !2499)
!2869 = !DILocation(line: 264, column: 26, scope: !2499)
!2870 = !DILocation(line: 266, column: 17, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2499, file: !935, line: 266, column: 17)
!2872 = !DILocation(line: 266, column: 23, scope: !2871)
!2873 = !DILocation(line: 266, column: 17, scope: !2499)
!2874 = !DILocation(line: 267, column: 17, scope: !2871)
!2875 = !DILocation(line: 270, column: 15, scope: !2499)
!2876 = !DILocation(line: 273, column: 18, scope: !2499)
!2877 = !DILocation(line: 274, column: 20, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2499, file: !935, line: 274, column: 13)
!2879 = !DILocation(line: 274, column: 18, scope: !2878)
!2880 = !DILocation(line: 274, column: 25, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2882, file: !935, discriminator: 1)
!2882 = distinct !DILexicalBlock(scope: !2878, file: !935, line: 274, column: 13)
!2883 = !DILocation(line: 274, column: 27, scope: !2881)
!2884 = !DILocation(line: 274, column: 13, scope: !2881)
!2885 = !DILocation(line: 275, column: 36, scope: !2882)
!2886 = !DILocation(line: 275, column: 34, scope: !2882)
!2887 = !DILocation(line: 275, column: 30, scope: !2882)
!2888 = !DILocation(line: 275, column: 40, scope: !2882)
!2889 = !DILocation(line: 275, column: 38, scope: !2882)
!2890 = !DILocation(line: 275, column: 25, scope: !2882)
!2891 = !DILocation(line: 276, column: 33, scope: !2882)
!2892 = !DILocation(line: 276, column: 37, scope: !2882)
!2893 = !DILocation(line: 276, column: 35, scope: !2882)
!2894 = !DILocation(line: 276, column: 39, scope: !2882)
!2895 = !DILocation(line: 276, column: 25, scope: !2882)
!2896 = !DILocation(line: 275, column: 43, scope: !2882)
!2897 = !DILocation(line: 275, column: 22, scope: !2882)
!2898 = !DILocation(line: 275, column: 17, scope: !2882)
!2899 = !DILocation(line: 274, column: 39, scope: !2900)
!2900 = !DILexicalBlockFile(scope: !2882, file: !935, discriminator: 2)
!2901 = !DILocation(line: 274, column: 13, scope: !2900)
!2902 = distinct !{!2902, !2903}
!2903 = !DILocation(line: 274, column: 13, scope: !2499)
!2904 = !DILocation(line: 277, column: 40, scope: !2499)
!2905 = !DILocation(line: 277, column: 45, scope: !2499)
!2906 = !DILocation(line: 277, column: 23, scope: !2499)
!2907 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !2498)
!2908 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !2498)
!2909 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !2498)
!2910 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !2498)
!2911 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !2498)
!2912 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !2498)
!2913 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !2498)
!2914 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !2498)
!2915 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !2498)
!2916 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !2498)
!2917 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !2498)
!2918 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !2498)
!2919 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !2498)
!2920 = !DILocation(line: 277, column: 21, scope: !2499)
!2921 = !DILocation(line: 278, column: 9, scope: !2499)
!2922 = !DILocation(line: 279, column: 20, scope: !2494)
!2923 = !DILocation(line: 279, column: 18, scope: !2494)
!2924 = !DILocation(line: 280, column: 5, scope: !2494)
!2925 = !DILocation(line: 248, column: 31, scope: !2926)
!2926 = !DILexicalBlockFile(scope: !2495, file: !935, discriminator: 2)
!2927 = !DILocation(line: 248, column: 5, scope: !2926)
!2928 = distinct !{!2928, !2929}
!2929 = !DILocation(line: 248, column: 5, scope: !2487)
!2930 = !DILocation(line: 282, column: 9, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2487, file: !935, line: 282, column: 9)
!2932 = !DILocation(line: 282, column: 15, scope: !2931)
!2933 = !DILocation(line: 282, column: 9, scope: !2487)
!2934 = !DILocation(line: 283, column: 16, scope: !2931)
!2935 = !DILocation(line: 283, column: 9, scope: !2931)
!2936 = !DILocation(line: 283, column: 21, scope: !2931)
!2937 = !DILocation(line: 284, column: 1, scope: !2487)
!2938 = distinct !DISubprogram(name: "lsp_quantize", scope: !935, file: !935, line: 319, type: !2939, isLocal: true, isDefinition: true, scopeLine: 320, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{null, !1090, !1945, !1945}
!2941 = !DILocalVariable(name: "lsp_index", arg: 1, scope: !2938, file: !935, line: 319, type: !1090)
!2942 = !DILocation(line: 319, column: 35, scope: !2938)
!2943 = !DILocalVariable(name: "lsp", arg: 2, scope: !2938, file: !935, line: 319, type: !1945)
!2944 = !DILocation(line: 319, column: 55, scope: !2938)
!2945 = !DILocalVariable(name: "prev_lsp", arg: 3, scope: !2938, file: !935, line: 319, type: !1945)
!2946 = !DILocation(line: 319, column: 69, scope: !2938)
!2947 = !DILocalVariable(name: "weight", scope: !2938, file: !935, line: 321, type: !1793)
!2948 = !DILocation(line: 321, column: 13, scope: !2938)
!2949 = !DILocalVariable(name: "min", scope: !2938, file: !935, line: 322, type: !1701)
!2950 = !DILocation(line: 322, column: 13, scope: !2938)
!2951 = !DILocalVariable(name: "max", scope: !2938, file: !935, line: 322, type: !1701)
!2952 = !DILocation(line: 322, column: 18, scope: !2938)
!2953 = !DILocalVariable(name: "shift", scope: !2938, file: !935, line: 323, type: !920)
!2954 = !DILocation(line: 323, column: 9, scope: !2938)
!2955 = !DILocalVariable(name: "i", scope: !2938, file: !935, line: 323, type: !920)
!2956 = !DILocation(line: 323, column: 16, scope: !2938)
!2957 = !DILocation(line: 326, column: 30, scope: !2938)
!2958 = !DILocation(line: 326, column: 39, scope: !2938)
!2959 = !DILocation(line: 326, column: 37, scope: !2938)
!2960 = !DILocation(line: 326, column: 27, scope: !2938)
!2961 = !DILocation(line: 326, column: 17, scope: !2938)
!2962 = !DILocation(line: 326, column: 5, scope: !2938)
!2963 = !DILocation(line: 326, column: 15, scope: !2938)
!2964 = !DILocation(line: 328, column: 30, scope: !2938)
!2965 = !DILocation(line: 328, column: 44, scope: !2938)
!2966 = !DILocation(line: 328, column: 42, scope: !2938)
!2967 = !DILocation(line: 327, column: 32, scope: !2938)
!2968 = !DILocation(line: 327, column: 22, scope: !2938)
!2969 = !DILocation(line: 327, column: 5, scope: !2938)
!2970 = !DILocation(line: 327, column: 20, scope: !2938)
!2971 = !DILocation(line: 330, column: 12, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2938, file: !935, line: 330, column: 5)
!2973 = !DILocation(line: 330, column: 10, scope: !2972)
!2974 = !DILocation(line: 330, column: 17, scope: !2975)
!2975 = !DILexicalBlockFile(scope: !2976, file: !935, discriminator: 1)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !935, line: 330, column: 5)
!2977 = !DILocation(line: 330, column: 19, scope: !2975)
!2978 = !DILocation(line: 330, column: 5, scope: !2975)
!2979 = !DILocation(line: 331, column: 21, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2976, file: !935, line: 330, column: 34)
!2981 = !DILocation(line: 331, column: 17, scope: !2980)
!2982 = !DILocation(line: 331, column: 30, scope: !2980)
!2983 = !DILocation(line: 331, column: 32, scope: !2980)
!2984 = !DILocation(line: 331, column: 26, scope: !2980)
!2985 = !DILocation(line: 331, column: 24, scope: !2980)
!2986 = !DILocation(line: 331, column: 45, scope: !2980)
!2987 = !DILocation(line: 331, column: 47, scope: !2980)
!2988 = !DILocation(line: 331, column: 41, scope: !2980)
!2989 = !DILocation(line: 331, column: 58, scope: !2980)
!2990 = !DILocation(line: 331, column: 54, scope: !2980)
!2991 = !DILocation(line: 331, column: 52, scope: !2980)
!2992 = !DILocation(line: 331, column: 38, scope: !2980)
!2993 = !DILocation(line: 331, column: 16, scope: !2980)
!2994 = !DILocation(line: 331, column: 69, scope: !2995)
!2995 = !DILexicalBlockFile(scope: !2980, file: !935, discriminator: 1)
!2996 = !DILocation(line: 331, column: 71, scope: !2995)
!2997 = !DILocation(line: 331, column: 65, scope: !2995)
!2998 = !DILocation(line: 331, column: 82, scope: !2995)
!2999 = !DILocation(line: 331, column: 78, scope: !2995)
!3000 = !DILocation(line: 331, column: 76, scope: !2995)
!3001 = !DILocation(line: 331, column: 16, scope: !2995)
!3002 = !DILocation(line: 331, column: 93, scope: !3003)
!3003 = !DILexicalBlockFile(scope: !2980, file: !935, discriminator: 2)
!3004 = !DILocation(line: 331, column: 89, scope: !3003)
!3005 = !DILocation(line: 331, column: 102, scope: !3003)
!3006 = !DILocation(line: 331, column: 104, scope: !3003)
!3007 = !DILocation(line: 331, column: 98, scope: !3003)
!3008 = !DILocation(line: 331, column: 96, scope: !3003)
!3009 = !DILocation(line: 331, column: 16, scope: !3003)
!3010 = !DILocation(line: 331, column: 16, scope: !3011)
!3011 = !DILexicalBlockFile(scope: !2980, file: !935, discriminator: 3)
!3012 = !DILocation(line: 331, column: 15, scope: !3011)
!3013 = !DILocation(line: 331, column: 13, scope: !3011)
!3014 = !DILocation(line: 332, column: 13, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2980, file: !935, line: 332, column: 13)
!3016 = !DILocation(line: 332, column: 17, scope: !3015)
!3017 = !DILocation(line: 332, column: 13, scope: !2980)
!3018 = !DILocation(line: 333, column: 37, scope: !3015)
!3019 = !DILocation(line: 333, column: 35, scope: !3015)
!3020 = !DILocation(line: 333, column: 25, scope: !3015)
!3021 = !DILocation(line: 333, column: 20, scope: !3015)
!3022 = !DILocation(line: 333, column: 13, scope: !3015)
!3023 = !DILocation(line: 333, column: 23, scope: !3015)
!3024 = !DILocation(line: 335, column: 20, scope: !3015)
!3025 = !DILocation(line: 335, column: 13, scope: !3015)
!3026 = !DILocation(line: 335, column: 23, scope: !3015)
!3027 = !DILocation(line: 336, column: 5, scope: !2980)
!3028 = !DILocation(line: 330, column: 30, scope: !3029)
!3029 = !DILexicalBlockFile(scope: !2976, file: !935, discriminator: 2)
!3030 = !DILocation(line: 330, column: 5, scope: !3029)
!3031 = distinct !{!3031, !3032}
!3032 = !DILocation(line: 330, column: 5, scope: !2938)
!3033 = !DILocation(line: 339, column: 9, scope: !2938)
!3034 = !DILocation(line: 340, column: 12, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !2938, file: !935, line: 340, column: 5)
!3036 = !DILocation(line: 340, column: 10, scope: !3035)
!3037 = !DILocation(line: 340, column: 17, scope: !3038)
!3038 = !DILexicalBlockFile(scope: !3039, file: !935, discriminator: 1)
!3039 = distinct !DILexicalBlock(scope: !3035, file: !935, line: 340, column: 5)
!3040 = !DILocation(line: 340, column: 19, scope: !3038)
!3041 = !DILocation(line: 340, column: 5, scope: !3038)
!3042 = !DILocation(line: 341, column: 24, scope: !3039)
!3043 = !DILocation(line: 341, column: 17, scope: !3039)
!3044 = !DILocation(line: 341, column: 16, scope: !3039)
!3045 = !DILocation(line: 341, column: 31, scope: !3039)
!3046 = !DILocation(line: 341, column: 30, scope: !3039)
!3047 = !DILocation(line: 341, column: 28, scope: !3039)
!3048 = !DILocation(line: 341, column: 46, scope: !3038)
!3049 = !DILocation(line: 341, column: 39, scope: !3038)
!3050 = !DILocation(line: 341, column: 38, scope: !3038)
!3051 = !DILocation(line: 341, column: 16, scope: !3038)
!3052 = !DILocation(line: 341, column: 53, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3039, file: !935, discriminator: 2)
!3054 = !DILocation(line: 341, column: 52, scope: !3053)
!3055 = !DILocation(line: 341, column: 16, scope: !3053)
!3056 = !DILocation(line: 341, column: 16, scope: !3057)
!3057 = !DILexicalBlockFile(scope: !3039, file: !935, discriminator: 3)
!3058 = !DILocation(line: 341, column: 15, scope: !3057)
!3059 = !DILocation(line: 341, column: 13, scope: !3057)
!3060 = !DILocation(line: 341, column: 9, scope: !3057)
!3061 = !DILocation(line: 340, column: 26, scope: !3053)
!3062 = !DILocation(line: 340, column: 5, scope: !3053)
!3063 = distinct !{!3063, !3064}
!3064 = !DILocation(line: 340, column: 5, scope: !2938)
!3065 = !DILocation(line: 343, column: 38, scope: !2938)
!3066 = !DILocation(line: 343, column: 13, scope: !2938)
!3067 = !DILocation(line: 343, column: 11, scope: !2938)
!3068 = !DILocation(line: 344, column: 12, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !2938, file: !935, line: 344, column: 5)
!3070 = !DILocation(line: 344, column: 10, scope: !3069)
!3071 = !DILocation(line: 344, column: 17, scope: !3072)
!3072 = !DILexicalBlockFile(scope: !3073, file: !935, discriminator: 1)
!3073 = distinct !DILexicalBlock(scope: !3069, file: !935, line: 344, column: 5)
!3074 = !DILocation(line: 344, column: 19, scope: !3072)
!3075 = !DILocation(line: 344, column: 5, scope: !3072)
!3076 = !DILocation(line: 345, column: 23, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3073, file: !935, line: 344, column: 30)
!3078 = !DILocation(line: 345, column: 16, scope: !3077)
!3079 = !DILocation(line: 345, column: 9, scope: !3077)
!3080 = !DILocation(line: 345, column: 19, scope: !3077)
!3081 = !DILocation(line: 346, column: 5, scope: !3077)
!3082 = !DILocation(line: 344, column: 26, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !3073, file: !935, discriminator: 2)
!3084 = !DILocation(line: 344, column: 5, scope: !3083)
!3085 = distinct !{!3085, !3086}
!3086 = !DILocation(line: 344, column: 5, scope: !2938)
!3087 = !DILocation(line: 349, column: 12, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !2938, file: !935, line: 349, column: 5)
!3089 = !DILocation(line: 349, column: 10, scope: !3088)
!3090 = !DILocation(line: 349, column: 17, scope: !3091)
!3091 = !DILexicalBlockFile(scope: !3092, file: !935, discriminator: 1)
!3092 = distinct !DILexicalBlock(scope: !3088, file: !935, line: 349, column: 5)
!3093 = !DILocation(line: 349, column: 19, scope: !3091)
!3094 = !DILocation(line: 349, column: 5, scope: !3091)
!3095 = !DILocation(line: 350, column: 26, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3092, file: !935, line: 349, column: 30)
!3097 = !DILocation(line: 350, column: 19, scope: !3096)
!3098 = !DILocation(line: 351, column: 31, scope: !3096)
!3099 = !DILocation(line: 351, column: 22, scope: !3096)
!3100 = !DILocation(line: 351, column: 43, scope: !3096)
!3101 = !DILocation(line: 351, column: 36, scope: !3096)
!3102 = !DILocation(line: 351, column: 34, scope: !3096)
!3103 = !DILocation(line: 351, column: 47, scope: !3096)
!3104 = !DILocation(line: 351, column: 55, scope: !3096)
!3105 = !DILocation(line: 351, column: 68, scope: !3096)
!3106 = !DILocation(line: 350, column: 29, scope: !3096)
!3107 = !DILocation(line: 350, column: 13, scope: !3096)
!3108 = !DILocation(line: 350, column: 9, scope: !3096)
!3109 = !DILocation(line: 350, column: 16, scope: !3096)
!3110 = !DILocation(line: 352, column: 5, scope: !3096)
!3111 = !DILocation(line: 349, column: 26, scope: !3112)
!3112 = !DILexicalBlockFile(scope: !3092, file: !935, discriminator: 2)
!3113 = !DILocation(line: 349, column: 5, scope: !3112)
!3114 = distinct !{!3114, !3115}
!3115 = !DILocation(line: 349, column: 5, scope: !2938)
!3116 = !DILocalVariable(name: "error", scope: !3117, file: !935, line: 354, type: !920)
!3117 = distinct !DILexicalBlock(scope: !2938, file: !935, line: 354, column: 5)
!3118 = !DILocation(line: 354, column: 11, scope: !3117)
!3119 = !DILocalVariable(name: "max", scope: !3117, file: !935, line: 354, type: !920)
!3120 = !DILocation(line: 354, column: 18, scope: !3117)
!3121 = !DILocalVariable(name: "temp", scope: !3117, file: !935, line: 354, type: !3122)
!3122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 64, align: 16, elements: !1191)
!3123 = !DILocation(line: 354, column: 36, scope: !3117)
!3124 = !DILocalVariable(name: "i", scope: !3117, file: !935, line: 354, type: !920)
!3125 = !DILocation(line: 354, column: 49, scope: !3117)
!3126 = !DILocalVariable(name: "j", scope: !3117, file: !935, line: 354, type: !920)
!3127 = !DILocation(line: 354, column: 52, scope: !3117)
!3128 = !DILocation(line: 354, column: 62, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3117, file: !935, line: 354, column: 55)
!3130 = !DILocation(line: 354, column: 60, scope: !3129)
!3131 = !DILocation(line: 354, column: 67, scope: !3132)
!3132 = !DILexicalBlockFile(scope: !3133, file: !935, discriminator: 1)
!3133 = distinct !DILexicalBlock(scope: !3129, file: !935, line: 354, column: 55)
!3134 = !DILocation(line: 354, column: 69, scope: !3132)
!3135 = !DILocation(line: 354, column: 55, scope: !3132)
!3136 = !DILocation(line: 354, column: 90, scope: !3137)
!3137 = !DILexicalBlockFile(scope: !3138, file: !935, discriminator: 2)
!3138 = distinct !DILexicalBlock(scope: !3139, file: !935, line: 354, column: 83)
!3139 = distinct !DILexicalBlock(scope: !3133, file: !935, line: 354, column: 81)
!3140 = !DILocation(line: 354, column: 88, scope: !3137)
!3141 = !DILocation(line: 354, column: 95, scope: !3142)
!3142 = !DILexicalBlockFile(scope: !3143, file: !935, discriminator: 3)
!3143 = distinct !DILexicalBlock(scope: !3138, file: !935, line: 354, column: 83)
!3144 = !DILocation(line: 354, column: 97, scope: !3142)
!3145 = !DILocation(line: 354, column: 83, scope: !3142)
!3146 = !DILocation(line: 354, column: 126, scope: !3147)
!3147 = !DILexicalBlockFile(scope: !3148, file: !935, discriminator: 4)
!3148 = distinct !DILexicalBlock(scope: !3143, file: !935, line: 354, column: 106)
!3149 = !DILocation(line: 354, column: 128, scope: !3147)
!3150 = !DILocation(line: 354, column: 119, scope: !3147)
!3151 = !DILocation(line: 354, column: 150, scope: !3147)
!3152 = !DILocation(line: 354, column: 137, scope: !3147)
!3153 = !DILocation(line: 354, column: 147, scope: !3147)
!3154 = !DILocation(line: 354, column: 135, scope: !3147)
!3155 = !DILocation(line: 354, column: 153, scope: !3147)
!3156 = !DILocation(line: 354, column: 166, scope: !3147)
!3157 = !DILocation(line: 354, column: 118, scope: !3147)
!3158 = !DILocation(line: 354, column: 113, scope: !3147)
!3159 = !DILocation(line: 354, column: 108, scope: !3147)
!3160 = !DILocation(line: 354, column: 116, scope: !3147)
!3161 = !DILocation(line: 354, column: 173, scope: !3147)
!3162 = !DILocation(line: 354, column: 103, scope: !3163)
!3163 = !DILexicalBlockFile(scope: !3143, file: !935, discriminator: 5)
!3164 = !DILocation(line: 354, column: 83, scope: !3163)
!3165 = distinct !{!3165, !3166}
!3166 = !DILocation(line: 354, column: 83, scope: !3139)
!3167 = !DILocation(line: 354, column: 205, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !3139, file: !935, discriminator: 6)
!3169 = !DILocation(line: 354, column: 209, scope: !3168)
!3170 = !DILocation(line: 354, column: 216, scope: !3168)
!3171 = !DILocation(line: 354, column: 183, scope: !3168)
!3172 = !DILocation(line: 354, column: 225, scope: !3168)
!3173 = !DILocation(line: 354, column: 181, scope: !3168)
!3174 = !DILocation(line: 354, column: 272, scope: !3168)
!3175 = !DILocation(line: 354, column: 262, scope: !3168)
!3176 = !DILocation(line: 354, column: 276, scope: !3168)
!3177 = !DILocation(line: 354, column: 240, scope: !3178)
!3178 = !DILexicalBlockFile(scope: !3168, file: !935, discriminator: 10)
!3179 = !DILocation(line: 354, column: 237, scope: !3168)
!3180 = !DILocation(line: 354, column: 290, scope: !3168)
!3181 = !DILocation(line: 354, column: 298, scope: !3168)
!3182 = !DILocation(line: 354, column: 296, scope: !3168)
!3183 = !DILocation(line: 354, column: 311, scope: !3184)
!3184 = !DILexicalBlockFile(scope: !3185, file: !935, discriminator: 7)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !935, line: 354, column: 303)
!3186 = distinct !DILexicalBlock(scope: !3139, file: !935, line: 354, column: 290)
!3187 = !DILocation(line: 354, column: 309, scope: !3184)
!3188 = !DILocation(line: 354, column: 333, scope: !3184)
!3189 = !DILocation(line: 354, column: 318, scope: !3184)
!3190 = !DILocation(line: 354, column: 331, scope: !3184)
!3191 = !DILocation(line: 354, column: 336, scope: !3184)
!3192 = !DILocation(line: 354, column: 338, scope: !3193)
!3193 = !DILexicalBlockFile(scope: !3139, file: !935, discriminator: 8)
!3194 = !DILocation(line: 354, column: 77, scope: !3195)
!3195 = !DILexicalBlockFile(scope: !3133, file: !935, discriminator: 9)
!3196 = !DILocation(line: 354, column: 55, scope: !3195)
!3197 = distinct !{!3197, !3198}
!3198 = !DILocation(line: 354, column: 55, scope: !3117)
!3199 = !DILocalVariable(name: "error", scope: !3200, file: !935, line: 355, type: !920)
!3200 = distinct !DILexicalBlock(scope: !2938, file: !935, line: 355, column: 5)
!3201 = !DILocation(line: 355, column: 11, scope: !3200)
!3202 = !DILocalVariable(name: "max", scope: !3200, file: !935, line: 355, type: !920)
!3203 = !DILocation(line: 355, column: 18, scope: !3200)
!3204 = !DILocalVariable(name: "temp", scope: !3200, file: !935, line: 355, type: !3122)
!3205 = !DILocation(line: 355, column: 36, scope: !3200)
!3206 = !DILocalVariable(name: "i", scope: !3200, file: !935, line: 355, type: !920)
!3207 = !DILocation(line: 355, column: 49, scope: !3200)
!3208 = !DILocalVariable(name: "j", scope: !3200, file: !935, line: 355, type: !920)
!3209 = !DILocation(line: 355, column: 52, scope: !3200)
!3210 = !DILocation(line: 355, column: 62, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3200, file: !935, line: 355, column: 55)
!3212 = !DILocation(line: 355, column: 60, scope: !3211)
!3213 = !DILocation(line: 355, column: 67, scope: !3214)
!3214 = !DILexicalBlockFile(scope: !3215, file: !935, discriminator: 1)
!3215 = distinct !DILexicalBlock(scope: !3211, file: !935, line: 355, column: 55)
!3216 = !DILocation(line: 355, column: 69, scope: !3214)
!3217 = !DILocation(line: 355, column: 55, scope: !3214)
!3218 = !DILocation(line: 355, column: 90, scope: !3219)
!3219 = !DILexicalBlockFile(scope: !3220, file: !935, discriminator: 2)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !935, line: 355, column: 83)
!3221 = distinct !DILexicalBlock(scope: !3215, file: !935, line: 355, column: 81)
!3222 = !DILocation(line: 355, column: 88, scope: !3219)
!3223 = !DILocation(line: 355, column: 95, scope: !3224)
!3224 = !DILexicalBlockFile(scope: !3225, file: !935, discriminator: 3)
!3225 = distinct !DILexicalBlock(scope: !3220, file: !935, line: 355, column: 83)
!3226 = !DILocation(line: 355, column: 97, scope: !3224)
!3227 = !DILocation(line: 355, column: 83, scope: !3224)
!3228 = !DILocation(line: 355, column: 126, scope: !3229)
!3229 = !DILexicalBlockFile(scope: !3230, file: !935, discriminator: 4)
!3230 = distinct !DILexicalBlock(scope: !3225, file: !935, line: 355, column: 106)
!3231 = !DILocation(line: 355, column: 128, scope: !3229)
!3232 = !DILocation(line: 355, column: 119, scope: !3229)
!3233 = !DILocation(line: 355, column: 150, scope: !3229)
!3234 = !DILocation(line: 355, column: 137, scope: !3229)
!3235 = !DILocation(line: 355, column: 147, scope: !3229)
!3236 = !DILocation(line: 355, column: 135, scope: !3229)
!3237 = !DILocation(line: 355, column: 153, scope: !3229)
!3238 = !DILocation(line: 355, column: 166, scope: !3229)
!3239 = !DILocation(line: 355, column: 118, scope: !3229)
!3240 = !DILocation(line: 355, column: 113, scope: !3229)
!3241 = !DILocation(line: 355, column: 108, scope: !3229)
!3242 = !DILocation(line: 355, column: 116, scope: !3229)
!3243 = !DILocation(line: 355, column: 173, scope: !3229)
!3244 = !DILocation(line: 355, column: 103, scope: !3245)
!3245 = !DILexicalBlockFile(scope: !3225, file: !935, discriminator: 5)
!3246 = !DILocation(line: 355, column: 83, scope: !3245)
!3247 = distinct !{!3247, !3248}
!3248 = !DILocation(line: 355, column: 83, scope: !3221)
!3249 = !DILocation(line: 355, column: 205, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3221, file: !935, discriminator: 6)
!3251 = !DILocation(line: 355, column: 209, scope: !3250)
!3252 = !DILocation(line: 355, column: 216, scope: !3250)
!3253 = !DILocation(line: 355, column: 183, scope: !3250)
!3254 = !DILocation(line: 355, column: 225, scope: !3250)
!3255 = !DILocation(line: 355, column: 181, scope: !3250)
!3256 = !DILocation(line: 355, column: 272, scope: !3250)
!3257 = !DILocation(line: 355, column: 262, scope: !3250)
!3258 = !DILocation(line: 355, column: 276, scope: !3250)
!3259 = !DILocation(line: 355, column: 240, scope: !3260)
!3260 = !DILexicalBlockFile(scope: !3250, file: !935, discriminator: 10)
!3261 = !DILocation(line: 355, column: 237, scope: !3250)
!3262 = !DILocation(line: 355, column: 290, scope: !3250)
!3263 = !DILocation(line: 355, column: 298, scope: !3250)
!3264 = !DILocation(line: 355, column: 296, scope: !3250)
!3265 = !DILocation(line: 355, column: 311, scope: !3266)
!3266 = !DILexicalBlockFile(scope: !3267, file: !935, discriminator: 7)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !935, line: 355, column: 303)
!3268 = distinct !DILexicalBlock(scope: !3221, file: !935, line: 355, column: 290)
!3269 = !DILocation(line: 355, column: 309, scope: !3266)
!3270 = !DILocation(line: 355, column: 333, scope: !3266)
!3271 = !DILocation(line: 355, column: 318, scope: !3266)
!3272 = !DILocation(line: 355, column: 331, scope: !3266)
!3273 = !DILocation(line: 355, column: 336, scope: !3266)
!3274 = !DILocation(line: 355, column: 338, scope: !3275)
!3275 = !DILexicalBlockFile(scope: !3221, file: !935, discriminator: 8)
!3276 = !DILocation(line: 355, column: 77, scope: !3277)
!3277 = !DILexicalBlockFile(scope: !3215, file: !935, discriminator: 9)
!3278 = !DILocation(line: 355, column: 55, scope: !3277)
!3279 = distinct !{!3279, !3280}
!3280 = !DILocation(line: 355, column: 55, scope: !3200)
!3281 = !DILocalVariable(name: "error", scope: !3282, file: !935, line: 356, type: !920)
!3282 = distinct !DILexicalBlock(scope: !2938, file: !935, line: 356, column: 5)
!3283 = !DILocation(line: 356, column: 11, scope: !3282)
!3284 = !DILocalVariable(name: "max", scope: !3282, file: !935, line: 356, type: !920)
!3285 = !DILocation(line: 356, column: 18, scope: !3282)
!3286 = !DILocalVariable(name: "temp", scope: !3282, file: !935, line: 356, type: !3122)
!3287 = !DILocation(line: 356, column: 36, scope: !3282)
!3288 = !DILocalVariable(name: "i", scope: !3282, file: !935, line: 356, type: !920)
!3289 = !DILocation(line: 356, column: 49, scope: !3282)
!3290 = !DILocalVariable(name: "j", scope: !3282, file: !935, line: 356, type: !920)
!3291 = !DILocation(line: 356, column: 52, scope: !3282)
!3292 = !DILocation(line: 356, column: 62, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3282, file: !935, line: 356, column: 55)
!3294 = !DILocation(line: 356, column: 60, scope: !3293)
!3295 = !DILocation(line: 356, column: 67, scope: !3296)
!3296 = !DILexicalBlockFile(scope: !3297, file: !935, discriminator: 1)
!3297 = distinct !DILexicalBlock(scope: !3293, file: !935, line: 356, column: 55)
!3298 = !DILocation(line: 356, column: 69, scope: !3296)
!3299 = !DILocation(line: 356, column: 55, scope: !3296)
!3300 = !DILocation(line: 356, column: 90, scope: !3301)
!3301 = !DILexicalBlockFile(scope: !3302, file: !935, discriminator: 2)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !935, line: 356, column: 83)
!3303 = distinct !DILexicalBlock(scope: !3297, file: !935, line: 356, column: 81)
!3304 = !DILocation(line: 356, column: 88, scope: !3301)
!3305 = !DILocation(line: 356, column: 95, scope: !3306)
!3306 = !DILexicalBlockFile(scope: !3307, file: !935, discriminator: 3)
!3307 = distinct !DILexicalBlock(scope: !3302, file: !935, line: 356, column: 83)
!3308 = !DILocation(line: 356, column: 97, scope: !3306)
!3309 = !DILocation(line: 356, column: 83, scope: !3306)
!3310 = !DILocation(line: 356, column: 126, scope: !3311)
!3311 = !DILexicalBlockFile(scope: !3312, file: !935, discriminator: 4)
!3312 = distinct !DILexicalBlock(scope: !3307, file: !935, line: 356, column: 106)
!3313 = !DILocation(line: 356, column: 128, scope: !3311)
!3314 = !DILocation(line: 356, column: 119, scope: !3311)
!3315 = !DILocation(line: 356, column: 150, scope: !3311)
!3316 = !DILocation(line: 356, column: 137, scope: !3311)
!3317 = !DILocation(line: 356, column: 147, scope: !3311)
!3318 = !DILocation(line: 356, column: 135, scope: !3311)
!3319 = !DILocation(line: 356, column: 153, scope: !3311)
!3320 = !DILocation(line: 356, column: 166, scope: !3311)
!3321 = !DILocation(line: 356, column: 118, scope: !3311)
!3322 = !DILocation(line: 356, column: 113, scope: !3311)
!3323 = !DILocation(line: 356, column: 108, scope: !3311)
!3324 = !DILocation(line: 356, column: 116, scope: !3311)
!3325 = !DILocation(line: 356, column: 173, scope: !3311)
!3326 = !DILocation(line: 356, column: 103, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3307, file: !935, discriminator: 5)
!3328 = !DILocation(line: 356, column: 83, scope: !3327)
!3329 = distinct !{!3329, !3330}
!3330 = !DILocation(line: 356, column: 83, scope: !3303)
!3331 = !DILocation(line: 356, column: 205, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3303, file: !935, discriminator: 6)
!3333 = !DILocation(line: 356, column: 209, scope: !3332)
!3334 = !DILocation(line: 356, column: 216, scope: !3332)
!3335 = !DILocation(line: 356, column: 183, scope: !3332)
!3336 = !DILocation(line: 356, column: 225, scope: !3332)
!3337 = !DILocation(line: 356, column: 181, scope: !3332)
!3338 = !DILocation(line: 356, column: 272, scope: !3332)
!3339 = !DILocation(line: 356, column: 262, scope: !3332)
!3340 = !DILocation(line: 356, column: 276, scope: !3332)
!3341 = !DILocation(line: 356, column: 240, scope: !3342)
!3342 = !DILexicalBlockFile(scope: !3332, file: !935, discriminator: 10)
!3343 = !DILocation(line: 356, column: 237, scope: !3332)
!3344 = !DILocation(line: 356, column: 290, scope: !3332)
!3345 = !DILocation(line: 356, column: 298, scope: !3332)
!3346 = !DILocation(line: 356, column: 296, scope: !3332)
!3347 = !DILocation(line: 356, column: 311, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !3349, file: !935, discriminator: 7)
!3349 = distinct !DILexicalBlock(scope: !3350, file: !935, line: 356, column: 303)
!3350 = distinct !DILexicalBlock(scope: !3303, file: !935, line: 356, column: 290)
!3351 = !DILocation(line: 356, column: 309, scope: !3348)
!3352 = !DILocation(line: 356, column: 333, scope: !3348)
!3353 = !DILocation(line: 356, column: 318, scope: !3348)
!3354 = !DILocation(line: 356, column: 331, scope: !3348)
!3355 = !DILocation(line: 356, column: 336, scope: !3348)
!3356 = !DILocation(line: 356, column: 338, scope: !3357)
!3357 = !DILexicalBlockFile(scope: !3303, file: !935, discriminator: 8)
!3358 = !DILocation(line: 356, column: 77, scope: !3359)
!3359 = !DILexicalBlockFile(scope: !3297, file: !935, discriminator: 9)
!3360 = !DILocation(line: 356, column: 55, scope: !3359)
!3361 = distinct !{!3361, !3362}
!3362 = !DILocation(line: 356, column: 55, scope: !3282)
!3363 = !DILocation(line: 357, column: 1, scope: !2938)
!3364 = distinct !DISubprogram(name: "perceptual_filter", scope: !935, file: !935, line: 390, type: !3365, isLocal: true, isDefinition: true, scopeLine: 392, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{null, !1833, !1945, !1945, !1945}
!3367 = !DILocalVariable(name: "p", arg: 1, scope: !3364, file: !935, line: 390, type: !1833)
!3368 = !DILocation(line: 390, column: 54, scope: !3364)
!3369 = !DILocalVariable(name: "flt_coef", arg: 2, scope: !3364, file: !935, line: 390, type: !1945)
!3370 = !DILocation(line: 390, column: 66, scope: !3364)
!3371 = !DILocalVariable(name: "unq_lpc", arg: 3, scope: !3364, file: !935, line: 391, type: !1945)
!3372 = !DILocation(line: 391, column: 40, scope: !3364)
!3373 = !DILocalVariable(name: "buf", arg: 4, scope: !3364, file: !935, line: 391, type: !1945)
!3374 = !DILocation(line: 391, column: 58, scope: !3364)
!3375 = !DILocalVariable(name: "vector", scope: !3364, file: !935, line: 393, type: !3376)
!3376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 4000, align: 16, elements: !3377)
!3377 = !{!3378}
!3378 = !DISubrange(count: 250)
!3379 = !DILocation(line: 393, column: 13, scope: !3364)
!3380 = !DILocalVariable(name: "i", scope: !3364, file: !935, line: 394, type: !920)
!3381 = !DILocation(line: 394, column: 9, scope: !3364)
!3382 = !DILocalVariable(name: "j", scope: !3364, file: !935, line: 394, type: !920)
!3383 = !DILocation(line: 394, column: 12, scope: !3364)
!3384 = !DILocalVariable(name: "k", scope: !3364, file: !935, line: 394, type: !920)
!3385 = !DILocation(line: 394, column: 15, scope: !3364)
!3386 = !DILocalVariable(name: "l", scope: !3364, file: !935, line: 394, type: !920)
!3387 = !DILocation(line: 394, column: 18, scope: !3364)
!3388 = !DILocation(line: 396, column: 12, scope: !3364)
!3389 = !DILocation(line: 396, column: 5, scope: !3364)
!3390 = !DILocation(line: 396, column: 17, scope: !3364)
!3391 = !DILocation(line: 396, column: 20, scope: !3364)
!3392 = !DILocation(line: 397, column: 5, scope: !3364)
!3393 = !DILocation(line: 397, column: 20, scope: !3364)
!3394 = !DILocation(line: 397, column: 23, scope: !3364)
!3395 = !DILocation(line: 398, column: 12, scope: !3364)
!3396 = !DILocation(line: 398, column: 19, scope: !3364)
!3397 = !DILocation(line: 398, column: 5, scope: !3364)
!3398 = !DILocation(line: 398, column: 25, scope: !3364)
!3399 = !DILocation(line: 398, column: 29, scope: !3364)
!3400 = !DILocation(line: 400, column: 12, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3364, file: !935, line: 400, column: 5)
!3402 = !DILocation(line: 400, column: 20, scope: !3401)
!3403 = !DILocation(line: 400, column: 10, scope: !3401)
!3404 = !DILocation(line: 400, column: 25, scope: !3405)
!3405 = !DILexicalBlockFile(scope: !3406, file: !935, discriminator: 1)
!3406 = distinct !DILexicalBlock(scope: !3401, file: !935, line: 400, column: 5)
!3407 = !DILocation(line: 400, column: 27, scope: !3405)
!3408 = !DILocation(line: 400, column: 5, scope: !3405)
!3409 = !DILocation(line: 401, column: 16, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !935, line: 401, column: 9)
!3411 = distinct !DILexicalBlock(scope: !3406, file: !935, line: 400, column: 46)
!3412 = !DILocation(line: 401, column: 14, scope: !3410)
!3413 = !DILocation(line: 401, column: 21, scope: !3414)
!3414 = !DILexicalBlockFile(scope: !3415, file: !935, discriminator: 1)
!3415 = distinct !DILexicalBlock(scope: !3410, file: !935, line: 401, column: 9)
!3416 = !DILocation(line: 401, column: 23, scope: !3414)
!3417 = !DILocation(line: 401, column: 9, scope: !3414)
!3418 = !DILocation(line: 402, column: 44, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3415, file: !935, line: 401, column: 34)
!3420 = !DILocation(line: 402, column: 48, scope: !3419)
!3421 = !DILocation(line: 402, column: 46, scope: !3419)
!3422 = !DILocation(line: 402, column: 36, scope: !3419)
!3423 = !DILocation(line: 402, column: 72, scope: !3419)
!3424 = !DILocation(line: 402, column: 53, scope: !3419)
!3425 = !DILocation(line: 402, column: 51, scope: !3419)
!3426 = !DILocation(line: 402, column: 75, scope: !3419)
!3427 = !DILocation(line: 403, column: 47, scope: !3419)
!3428 = !DILocation(line: 402, column: 35, scope: !3419)
!3429 = !DILocation(line: 402, column: 22, scope: !3419)
!3430 = !DILocation(line: 402, column: 30, scope: !3419)
!3431 = !DILocation(line: 402, column: 28, scope: !3419)
!3432 = !DILocation(line: 402, column: 24, scope: !3419)
!3433 = !DILocation(line: 402, column: 13, scope: !3419)
!3434 = !DILocation(line: 402, column: 33, scope: !3419)
!3435 = !DILocation(line: 404, column: 49, scope: !3419)
!3436 = !DILocation(line: 404, column: 53, scope: !3419)
!3437 = !DILocation(line: 404, column: 51, scope: !3419)
!3438 = !DILocation(line: 404, column: 41, scope: !3419)
!3439 = !DILocation(line: 405, column: 67, scope: !3419)
!3440 = !DILocation(line: 405, column: 48, scope: !3419)
!3441 = !DILocation(line: 404, column: 56, scope: !3419)
!3442 = !DILocation(line: 405, column: 70, scope: !3419)
!3443 = !DILocation(line: 406, column: 59, scope: !3419)
!3444 = !DILocation(line: 404, column: 40, scope: !3419)
!3445 = !DILocation(line: 404, column: 22, scope: !3419)
!3446 = !DILocation(line: 404, column: 30, scope: !3419)
!3447 = !DILocation(line: 404, column: 28, scope: !3419)
!3448 = !DILocation(line: 404, column: 24, scope: !3419)
!3449 = !DILocation(line: 404, column: 32, scope: !3419)
!3450 = !DILocation(line: 404, column: 13, scope: !3419)
!3451 = !DILocation(line: 404, column: 38, scope: !3419)
!3452 = !DILocation(line: 407, column: 9, scope: !3419)
!3453 = !DILocation(line: 401, column: 30, scope: !3454)
!3454 = !DILexicalBlockFile(scope: !3415, file: !935, discriminator: 2)
!3455 = !DILocation(line: 401, column: 9, scope: !3454)
!3456 = distinct !{!3456, !3457}
!3457 = !DILocation(line: 401, column: 9, scope: !3411)
!3458 = !DILocation(line: 408, column: 20, scope: !3411)
!3459 = !DILocation(line: 408, column: 35, scope: !3411)
!3460 = !DILocation(line: 408, column: 33, scope: !3411)
!3461 = !DILocation(line: 408, column: 29, scope: !3411)
!3462 = !DILocation(line: 408, column: 38, scope: !3411)
!3463 = !DILocation(line: 408, column: 53, scope: !3411)
!3464 = !DILocation(line: 408, column: 51, scope: !3411)
!3465 = !DILocation(line: 408, column: 47, scope: !3411)
!3466 = !DILocation(line: 408, column: 55, scope: !3411)
!3467 = !DILocation(line: 409, column: 20, scope: !3411)
!3468 = !DILocation(line: 409, column: 29, scope: !3411)
!3469 = !DILocation(line: 409, column: 27, scope: !3411)
!3470 = !DILocation(line: 409, column: 32, scope: !3411)
!3471 = !DILocation(line: 409, column: 38, scope: !3411)
!3472 = !DILocation(line: 409, column: 36, scope: !3411)
!3473 = !DILocation(line: 408, column: 9, scope: !3411)
!3474 = !DILocation(line: 410, column: 11, scope: !3411)
!3475 = !DILocation(line: 411, column: 5, scope: !3411)
!3476 = !DILocation(line: 400, column: 34, scope: !3477)
!3477 = !DILexicalBlockFile(scope: !3406, file: !935, discriminator: 2)
!3478 = !DILocation(line: 400, column: 42, scope: !3477)
!3479 = !DILocation(line: 400, column: 5, scope: !3477)
!3480 = distinct !{!3480, !3481}
!3481 = !DILocation(line: 400, column: 5, scope: !3364)
!3482 = !DILocation(line: 412, column: 12, scope: !3364)
!3483 = !DILocation(line: 412, column: 15, scope: !3364)
!3484 = !DILocation(line: 412, column: 5, scope: !3364)
!3485 = !DILocation(line: 412, column: 24, scope: !3364)
!3486 = !DILocation(line: 412, column: 28, scope: !3364)
!3487 = !DILocation(line: 413, column: 12, scope: !3364)
!3488 = !DILocation(line: 413, column: 15, scope: !3364)
!3489 = !DILocation(line: 413, column: 5, scope: !3364)
!3490 = !DILocation(line: 413, column: 24, scope: !3364)
!3491 = !DILocation(line: 413, column: 31, scope: !3364)
!3492 = !DILocation(line: 414, column: 1, scope: !3364)
!3493 = distinct !DISubprogram(name: "estimate_pitch", scope: !935, file: !935, line: 422, type: !3494, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!920, !1945, !920}
!3496 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !3497)
!3497 = distinct !DILocation(line: 457, column: 15, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !935, line: 437, column: 44)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !935, line: 437, column: 5)
!3500 = distinct !DILexicalBlock(scope: !3493, file: !935, line: 437, column: 5)
!3501 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !3502)
!3502 = distinct !DILocation(line: 449, column: 15, scope: !3498)
!3503 = !DILocalVariable(name: "buf", arg: 1, scope: !3493, file: !935, line: 422, type: !1945)
!3504 = !DILocation(line: 422, column: 36, scope: !3493)
!3505 = !DILocalVariable(name: "start", arg: 2, scope: !3493, file: !935, line: 422, type: !920)
!3506 = !DILocation(line: 422, column: 45, scope: !3493)
!3507 = !DILocalVariable(name: "max_exp", scope: !3493, file: !935, line: 424, type: !920)
!3508 = !DILocation(line: 424, column: 9, scope: !3493)
!3509 = !DILocalVariable(name: "max_ccr", scope: !3493, file: !935, line: 425, type: !920)
!3510 = !DILocation(line: 425, column: 9, scope: !3493)
!3511 = !DILocalVariable(name: "max_eng", scope: !3493, file: !935, line: 426, type: !920)
!3512 = !DILocation(line: 426, column: 9, scope: !3493)
!3513 = !DILocalVariable(name: "index", scope: !3493, file: !935, line: 427, type: !920)
!3514 = !DILocation(line: 427, column: 9, scope: !3493)
!3515 = !DILocalVariable(name: "offset", scope: !3493, file: !935, line: 428, type: !920)
!3516 = !DILocation(line: 428, column: 9, scope: !3493)
!3517 = !DILocation(line: 428, column: 18, scope: !3493)
!3518 = !DILocation(line: 428, column: 24, scope: !3493)
!3519 = !DILocation(line: 428, column: 29, scope: !3493)
!3520 = !DILocalVariable(name: "ccr", scope: !3493, file: !935, line: 430, type: !920)
!3521 = !DILocation(line: 430, column: 9, scope: !3493)
!3522 = !DILocalVariable(name: "eng", scope: !3493, file: !935, line: 430, type: !920)
!3523 = !DILocation(line: 430, column: 14, scope: !3493)
!3524 = !DILocalVariable(name: "orig_eng", scope: !3493, file: !935, line: 430, type: !920)
!3525 = !DILocation(line: 430, column: 19, scope: !3493)
!3526 = !DILocalVariable(name: "ccr_eng", scope: !3493, file: !935, line: 430, type: !920)
!3527 = !DILocation(line: 430, column: 29, scope: !3493)
!3528 = !DILocalVariable(name: "exp", scope: !3493, file: !935, line: 430, type: !920)
!3529 = !DILocation(line: 430, column: 38, scope: !3493)
!3530 = !DILocalVariable(name: "diff", scope: !3493, file: !935, line: 431, type: !920)
!3531 = !DILocation(line: 431, column: 9, scope: !3493)
!3532 = !DILocalVariable(name: "temp", scope: !3493, file: !935, line: 431, type: !920)
!3533 = !DILocation(line: 431, column: 15, scope: !3493)
!3534 = !DILocalVariable(name: "i", scope: !3493, file: !935, line: 433, type: !920)
!3535 = !DILocation(line: 433, column: 9, scope: !3493)
!3536 = !DILocation(line: 435, column: 31, scope: !3493)
!3537 = !DILocation(line: 435, column: 37, scope: !3493)
!3538 = !DILocation(line: 435, column: 35, scope: !3493)
!3539 = !DILocation(line: 435, column: 45, scope: !3493)
!3540 = !DILocation(line: 435, column: 51, scope: !3493)
!3541 = !DILocation(line: 435, column: 49, scope: !3493)
!3542 = !DILocation(line: 435, column: 16, scope: !3493)
!3543 = !DILocation(line: 435, column: 14, scope: !3493)
!3544 = !DILocation(line: 437, column: 12, scope: !3500)
!3545 = !DILocation(line: 437, column: 10, scope: !3500)
!3546 = !DILocation(line: 437, column: 18, scope: !3547)
!3547 = !DILexicalBlockFile(scope: !3499, file: !935, discriminator: 1)
!3548 = !DILocation(line: 437, column: 20, scope: !3547)
!3549 = !DILocation(line: 437, column: 5, scope: !3547)
!3550 = !DILocation(line: 438, column: 15, scope: !3498)
!3551 = !DILocation(line: 441, column: 25, scope: !3498)
!3552 = !DILocation(line: 441, column: 21, scope: !3498)
!3553 = !DILocation(line: 441, column: 39, scope: !3498)
!3554 = !DILocation(line: 441, column: 35, scope: !3498)
!3555 = !DILocation(line: 441, column: 33, scope: !3498)
!3556 = !DILocation(line: 442, column: 25, scope: !3498)
!3557 = !DILocation(line: 442, column: 32, scope: !3498)
!3558 = !DILocation(line: 442, column: 21, scope: !3498)
!3559 = !DILocation(line: 442, column: 57, scope: !3498)
!3560 = !DILocation(line: 442, column: 64, scope: !3498)
!3561 = !DILocation(line: 442, column: 53, scope: !3498)
!3562 = !DILocation(line: 442, column: 51, scope: !3498)
!3563 = !DILocation(line: 441, column: 47, scope: !3498)
!3564 = !DILocation(line: 441, column: 18, scope: !3498)
!3565 = !DILocation(line: 443, column: 30, scope: !3498)
!3566 = !DILocation(line: 443, column: 36, scope: !3498)
!3567 = !DILocation(line: 443, column: 34, scope: !3498)
!3568 = !DILocation(line: 443, column: 43, scope: !3498)
!3569 = !DILocation(line: 443, column: 49, scope: !3498)
!3570 = !DILocation(line: 443, column: 47, scope: !3498)
!3571 = !DILocation(line: 443, column: 15, scope: !3498)
!3572 = !DILocation(line: 443, column: 13, scope: !3498)
!3573 = !DILocation(line: 444, column: 13, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3498, file: !935, line: 444, column: 13)
!3575 = !DILocation(line: 444, column: 17, scope: !3574)
!3576 = !DILocation(line: 444, column: 13, scope: !3498)
!3577 = !DILocation(line: 445, column: 13, scope: !3574)
!3578 = !DILocation(line: 448, column: 40, scope: !3498)
!3579 = !DILocation(line: 448, column: 15, scope: !3498)
!3580 = !DILocation(line: 448, column: 13, scope: !3498)
!3581 = !DILocation(line: 449, column: 43, scope: !3498)
!3582 = !DILocation(line: 449, column: 50, scope: !3498)
!3583 = !DILocation(line: 449, column: 47, scope: !3498)
!3584 = !DILocation(line: 449, column: 32, scope: !3498)
!3585 = !DILocation(line: 449, column: 55, scope: !3498)
!3586 = !DILocation(line: 449, column: 15, scope: !3498)
!3587 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !3502)
!3588 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !3502)
!3589 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !3502)
!3590 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !3502)
!3591 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !3502)
!3592 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !3502)
!3593 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !3502)
!3594 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !3502)
!3595 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !3502)
!3596 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !3502)
!3597 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !3502)
!3598 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !3502)
!3599 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !3502)
!3600 = !DILocation(line: 449, column: 68, scope: !3498)
!3601 = !DILocation(line: 449, column: 13, scope: !3498)
!3602 = !DILocation(line: 450, column: 13, scope: !3498)
!3603 = !DILocation(line: 451, column: 16, scope: !3498)
!3604 = !DILocation(line: 451, column: 13, scope: !3498)
!3605 = !DILocation(line: 452, column: 41, scope: !3498)
!3606 = !DILocation(line: 452, column: 16, scope: !3498)
!3607 = !DILocation(line: 452, column: 14, scope: !3498)
!3608 = !DILocation(line: 453, column: 15, scope: !3498)
!3609 = !DILocation(line: 453, column: 22, scope: !3498)
!3610 = !DILocation(line: 453, column: 19, scope: !3498)
!3611 = !DILocation(line: 453, column: 27, scope: !3498)
!3612 = !DILocation(line: 453, column: 13, scope: !3498)
!3613 = !DILocation(line: 454, column: 16, scope: !3498)
!3614 = !DILocation(line: 454, column: 13, scope: !3498)
!3615 = !DILocation(line: 456, column: 41, scope: !3498)
!3616 = !DILocation(line: 456, column: 16, scope: !3498)
!3617 = !DILocation(line: 456, column: 14, scope: !3498)
!3618 = !DILocation(line: 457, column: 43, scope: !3498)
!3619 = !DILocation(line: 457, column: 55, scope: !3498)
!3620 = !DILocation(line: 457, column: 52, scope: !3498)
!3621 = !DILocation(line: 457, column: 32, scope: !3498)
!3622 = !DILocation(line: 457, column: 61, scope: !3498)
!3623 = !DILocation(line: 457, column: 15, scope: !3498)
!3624 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !3497)
!3625 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !3497)
!3626 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !3497)
!3627 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !3497)
!3628 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !3497)
!3629 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !3497)
!3630 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !3497)
!3631 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !3497)
!3632 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !3497)
!3633 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !3497)
!3634 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !3497)
!3635 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !3497)
!3636 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !3497)
!3637 = !DILocation(line: 457, column: 74, scope: !3498)
!3638 = !DILocation(line: 457, column: 13, scope: !3498)
!3639 = !DILocation(line: 458, column: 16, scope: !3498)
!3640 = !DILocation(line: 458, column: 13, scope: !3498)
!3641 = !DILocation(line: 460, column: 13, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3498, file: !935, line: 460, column: 13)
!3643 = !DILocation(line: 460, column: 20, scope: !3642)
!3644 = !DILocation(line: 460, column: 17, scope: !3642)
!3645 = !DILocation(line: 460, column: 13, scope: !3498)
!3646 = !DILocation(line: 461, column: 16, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3642, file: !935, line: 460, column: 25)
!3648 = !DILocation(line: 462, column: 17, scope: !3647)
!3649 = !DILocation(line: 463, column: 9, scope: !3647)
!3650 = !DILocation(line: 464, column: 13, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3498, file: !935, line: 464, column: 13)
!3652 = !DILocation(line: 464, column: 19, scope: !3651)
!3653 = !DILocation(line: 464, column: 17, scope: !3651)
!3654 = !DILocation(line: 464, column: 13, scope: !3498)
!3655 = !DILocation(line: 465, column: 13, scope: !3651)
!3656 = !DILocation(line: 467, column: 13, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3498, file: !935, line: 467, column: 13)
!3658 = !DILocation(line: 467, column: 17, scope: !3657)
!3659 = !DILocation(line: 467, column: 23, scope: !3657)
!3660 = !DILocation(line: 467, column: 21, scope: !3657)
!3661 = !DILocation(line: 467, column: 13, scope: !3498)
!3662 = !DILocation(line: 468, column: 13, scope: !3657)
!3663 = !DILocation(line: 471, column: 13, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3498, file: !935, line: 471, column: 13)
!3665 = !DILocation(line: 471, column: 17, scope: !3664)
!3666 = !DILocation(line: 471, column: 24, scope: !3664)
!3667 = !DILocation(line: 471, column: 21, scope: !3664)
!3668 = !DILocation(line: 471, column: 13, scope: !3498)
!3669 = !DILocation(line: 472, column: 20, scope: !3664)
!3670 = !DILocation(line: 472, column: 28, scope: !3664)
!3671 = !DILocation(line: 472, column: 18, scope: !3664)
!3672 = !DILocation(line: 472, column: 13, scope: !3664)
!3673 = !DILocation(line: 474, column: 20, scope: !3664)
!3674 = !DILocation(line: 474, column: 18, scope: !3664)
!3675 = !DILocation(line: 475, column: 19, scope: !3498)
!3676 = !DILocation(line: 475, column: 25, scope: !3498)
!3677 = !DILocation(line: 475, column: 23, scope: !3498)
!3678 = !DILocation(line: 475, column: 17, scope: !3498)
!3679 = !DILocation(line: 476, column: 16, scope: !3498)
!3680 = !DILocation(line: 476, column: 26, scope: !3498)
!3681 = !DILocation(line: 476, column: 32, scope: !3498)
!3682 = !DILocation(line: 476, column: 30, scope: !3498)
!3683 = !DILocation(line: 476, column: 24, scope: !3498)
!3684 = !DILocation(line: 476, column: 14, scope: !3498)
!3685 = !DILocation(line: 477, column: 13, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3498, file: !935, line: 477, column: 13)
!3687 = !DILocation(line: 477, column: 18, scope: !3686)
!3688 = !DILocation(line: 477, column: 22, scope: !3686)
!3689 = !DILocation(line: 477, column: 26, scope: !3690)
!3690 = !DILexicalBlockFile(scope: !3686, file: !935, discriminator: 1)
!3691 = !DILocation(line: 477, column: 30, scope: !3690)
!3692 = !DILocation(line: 477, column: 28, scope: !3690)
!3693 = !DILocation(line: 477, column: 36, scope: !3690)
!3694 = !DILocation(line: 477, column: 41, scope: !3690)
!3695 = !DILocation(line: 477, column: 44, scope: !3696)
!3696 = !DILexicalBlockFile(scope: !3686, file: !935, discriminator: 2)
!3697 = !DILocation(line: 477, column: 51, scope: !3696)
!3698 = !DILocation(line: 477, column: 59, scope: !3696)
!3699 = !DILocation(line: 477, column: 49, scope: !3696)
!3700 = !DILocation(line: 477, column: 13, scope: !3696)
!3701 = !DILocation(line: 477, column: 66, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !3686, file: !935, discriminator: 3)
!3703 = !DILocation(line: 479, column: 21, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3686, file: !935, line: 477, column: 66)
!3705 = !DILocation(line: 479, column: 19, scope: !3704)
!3706 = !DILocation(line: 480, column: 23, scope: !3704)
!3707 = !DILocation(line: 480, column: 21, scope: !3704)
!3708 = !DILocation(line: 481, column: 23, scope: !3704)
!3709 = !DILocation(line: 481, column: 21, scope: !3704)
!3710 = !DILocation(line: 482, column: 23, scope: !3704)
!3711 = !DILocation(line: 482, column: 21, scope: !3704)
!3712 = !DILocation(line: 483, column: 9, scope: !3704)
!3713 = !DILocation(line: 484, column: 5, scope: !3498)
!3714 = !DILocation(line: 437, column: 40, scope: !3715)
!3715 = !DILexicalBlockFile(scope: !3499, file: !935, discriminator: 2)
!3716 = !DILocation(line: 437, column: 5, scope: !3715)
!3717 = distinct !{!3717, !3718}
!3718 = !DILocation(line: 437, column: 5, scope: !3493)
!3719 = !DILocation(line: 485, column: 12, scope: !3493)
!3720 = !DILocation(line: 485, column: 5, scope: !3493)
!3721 = distinct !DISubprogram(name: "comp_harmonic_coeff", scope: !935, file: !935, line: 495, type: !3722, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{null, !1945, !1701, !3724}
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64, align: 64)
!3725 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !3726)
!3726 = distinct !DILocation(line: 519, column: 21, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !935, line: 518, column: 30)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !935, line: 518, column: 5)
!3729 = distinct !DILexicalBlock(scope: !3721, file: !935, line: 518, column: 5)
!3730 = !DILocalVariable(name: "buf", arg: 1, scope: !3721, file: !935, line: 495, type: !1945)
!3731 = !DILocation(line: 495, column: 42, scope: !3721)
!3732 = !DILocalVariable(name: "pitch_lag", arg: 2, scope: !3721, file: !935, line: 495, type: !1701)
!3733 = !DILocation(line: 495, column: 55, scope: !3721)
!3734 = !DILocalVariable(name: "hf", arg: 3, scope: !3721, file: !935, line: 495, type: !3724)
!3735 = !DILocation(line: 495, column: 75, scope: !3721)
!3736 = !DILocalVariable(name: "ccr", scope: !3721, file: !935, line: 497, type: !920)
!3737 = !DILocation(line: 497, column: 9, scope: !3721)
!3738 = !DILocalVariable(name: "eng", scope: !3721, file: !935, line: 497, type: !920)
!3739 = !DILocation(line: 497, column: 14, scope: !3721)
!3740 = !DILocalVariable(name: "max_ccr", scope: !3721, file: !935, line: 497, type: !920)
!3741 = !DILocation(line: 497, column: 19, scope: !3721)
!3742 = !DILocalVariable(name: "max_eng", scope: !3721, file: !935, line: 497, type: !920)
!3743 = !DILocation(line: 497, column: 28, scope: !3721)
!3744 = !DILocalVariable(name: "exp", scope: !3721, file: !935, line: 498, type: !920)
!3745 = !DILocation(line: 498, column: 9, scope: !3721)
!3746 = !DILocalVariable(name: "max", scope: !3721, file: !935, line: 498, type: !920)
!3747 = !DILocation(line: 498, column: 14, scope: !3721)
!3748 = !DILocalVariable(name: "diff", scope: !3721, file: !935, line: 498, type: !920)
!3749 = !DILocation(line: 498, column: 19, scope: !3721)
!3750 = !DILocalVariable(name: "energy", scope: !3721, file: !935, line: 499, type: !3751)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 480, align: 32, elements: !3752)
!3752 = !{!3753}
!3753 = !DISubrange(count: 15)
!3754 = !DILocation(line: 499, column: 9, scope: !3721)
!3755 = !DILocalVariable(name: "i", scope: !3721, file: !935, line: 500, type: !920)
!3756 = !DILocation(line: 500, column: 9, scope: !3721)
!3757 = !DILocalVariable(name: "j", scope: !3721, file: !935, line: 500, type: !920)
!3758 = !DILocation(line: 500, column: 12, scope: !3721)
!3759 = !DILocation(line: 502, column: 12, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3721, file: !935, line: 502, column: 5)
!3761 = !DILocation(line: 502, column: 21, scope: !3760)
!3762 = !DILocation(line: 502, column: 31, scope: !3760)
!3763 = !DILocation(line: 502, column: 19, scope: !3760)
!3764 = !DILocation(line: 502, column: 10, scope: !3760)
!3765 = !DILocation(line: 502, column: 36, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !3767, file: !935, discriminator: 1)
!3767 = distinct !DILexicalBlock(scope: !3760, file: !935, line: 502, column: 5)
!3768 = !DILocation(line: 502, column: 41, scope: !3766)
!3769 = !DILocation(line: 502, column: 51, scope: !3766)
!3770 = !DILocation(line: 502, column: 38, scope: !3766)
!3771 = !DILocation(line: 502, column: 5, scope: !3766)
!3772 = !DILocation(line: 504, column: 41, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3767, file: !935, line: 502, column: 66)
!3774 = !DILocation(line: 504, column: 47, scope: !3773)
!3775 = !DILocation(line: 504, column: 45, scope: !3773)
!3776 = !DILocation(line: 504, column: 50, scope: !3773)
!3777 = !DILocation(line: 504, column: 56, scope: !3773)
!3778 = !DILocation(line: 504, column: 54, scope: !3773)
!3779 = !DILocation(line: 504, column: 26, scope: !3773)
!3780 = !DILocation(line: 504, column: 16, scope: !3773)
!3781 = !DILocation(line: 504, column: 18, scope: !3773)
!3782 = !DILocation(line: 504, column: 9, scope: !3773)
!3783 = !DILocation(line: 504, column: 24, scope: !3773)
!3784 = !DILocation(line: 506, column: 47, scope: !3773)
!3785 = !DILocation(line: 506, column: 52, scope: !3773)
!3786 = !DILocation(line: 506, column: 58, scope: !3773)
!3787 = !DILocation(line: 506, column: 56, scope: !3773)
!3788 = !DILocation(line: 506, column: 32, scope: !3773)
!3789 = !DILocation(line: 506, column: 17, scope: !3773)
!3790 = !DILocation(line: 506, column: 19, scope: !3773)
!3791 = !DILocation(line: 506, column: 25, scope: !3773)
!3792 = !DILocation(line: 506, column: 9, scope: !3773)
!3793 = !DILocation(line: 506, column: 30, scope: !3773)
!3794 = !DILocation(line: 507, column: 5, scope: !3773)
!3795 = !DILocation(line: 502, column: 57, scope: !3796)
!3796 = !DILexicalBlockFile(scope: !3767, file: !935, discriminator: 2)
!3797 = !DILocation(line: 502, column: 62, scope: !3796)
!3798 = !DILocation(line: 502, column: 5, scope: !3796)
!3799 = distinct !{!3799, !3800}
!3800 = !DILocation(line: 502, column: 5, scope: !3721)
!3801 = !DILocation(line: 510, column: 33, scope: !3721)
!3802 = !DILocation(line: 510, column: 38, scope: !3721)
!3803 = !DILocation(line: 510, column: 18, scope: !3721)
!3804 = !DILocation(line: 510, column: 5, scope: !3721)
!3805 = !DILocation(line: 510, column: 16, scope: !3721)
!3806 = !DILocation(line: 513, column: 9, scope: !3721)
!3807 = !DILocation(line: 514, column: 12, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3721, file: !935, line: 514, column: 5)
!3809 = !DILocation(line: 514, column: 10, scope: !3808)
!3810 = !DILocation(line: 514, column: 17, scope: !3811)
!3811 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 1)
!3812 = distinct !DILexicalBlock(scope: !3808, file: !935, line: 514, column: 5)
!3813 = !DILocation(line: 514, column: 19, scope: !3811)
!3814 = !DILocation(line: 514, column: 5, scope: !3811)
!3815 = !DILocation(line: 515, column: 17, scope: !3812)
!3816 = !DILocation(line: 515, column: 34, scope: !3812)
!3817 = !DILocation(line: 515, column: 27, scope: !3812)
!3818 = !DILocation(line: 515, column: 38, scope: !3812)
!3819 = !DILocation(line: 515, column: 26, scope: !3812)
!3820 = !DILocation(line: 515, column: 53, scope: !3811)
!3821 = !DILocation(line: 515, column: 46, scope: !3811)
!3822 = !DILocation(line: 515, column: 26, scope: !3811)
!3823 = !DILocation(line: 515, column: 69, scope: !3824)
!3824 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 2)
!3825 = !DILocation(line: 515, column: 62, scope: !3824)
!3826 = !DILocation(line: 515, column: 60, scope: !3824)
!3827 = !DILocation(line: 515, column: 26, scope: !3824)
!3828 = !DILocation(line: 515, column: 26, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 3)
!3830 = !DILocation(line: 515, column: 22, scope: !3829)
!3831 = !DILocation(line: 515, column: 16, scope: !3829)
!3832 = !DILocation(line: 515, column: 79, scope: !3833)
!3833 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 4)
!3834 = !DILocation(line: 515, column: 16, scope: !3833)
!3835 = !DILocation(line: 515, column: 96, scope: !3836)
!3836 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 5)
!3837 = !DILocation(line: 515, column: 89, scope: !3836)
!3838 = !DILocation(line: 515, column: 100, scope: !3836)
!3839 = !DILocation(line: 515, column: 88, scope: !3836)
!3840 = !DILocation(line: 515, column: 115, scope: !3841)
!3841 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 6)
!3842 = !DILocation(line: 515, column: 108, scope: !3841)
!3843 = !DILocation(line: 515, column: 88, scope: !3841)
!3844 = !DILocation(line: 515, column: 131, scope: !3845)
!3845 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 7)
!3846 = !DILocation(line: 515, column: 124, scope: !3845)
!3847 = !DILocation(line: 515, column: 122, scope: !3845)
!3848 = !DILocation(line: 515, column: 88, scope: !3845)
!3849 = !DILocation(line: 515, column: 88, scope: !3850)
!3850 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 8)
!3851 = !DILocation(line: 515, column: 16, scope: !3850)
!3852 = !DILocation(line: 515, column: 16, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !3812, file: !935, discriminator: 9)
!3854 = !DILocation(line: 515, column: 13, scope: !3853)
!3855 = !DILocation(line: 515, column: 9, scope: !3853)
!3856 = !DILocation(line: 514, column: 26, scope: !3824)
!3857 = !DILocation(line: 514, column: 5, scope: !3824)
!3858 = distinct !{!3858, !3859}
!3859 = !DILocation(line: 514, column: 5, scope: !3721)
!3860 = !DILocation(line: 517, column: 36, scope: !3721)
!3861 = !DILocation(line: 517, column: 11, scope: !3721)
!3862 = !DILocation(line: 517, column: 9, scope: !3721)
!3863 = !DILocation(line: 518, column: 12, scope: !3729)
!3864 = !DILocation(line: 518, column: 10, scope: !3729)
!3865 = !DILocation(line: 518, column: 17, scope: !3866)
!3866 = !DILexicalBlockFile(scope: !3728, file: !935, discriminator: 1)
!3867 = !DILocation(line: 518, column: 19, scope: !3866)
!3868 = !DILocation(line: 518, column: 5, scope: !3866)
!3869 = !DILocation(line: 519, column: 55, scope: !3727)
!3870 = !DILocation(line: 519, column: 48, scope: !3727)
!3871 = !DILocation(line: 519, column: 61, scope: !3727)
!3872 = !DILocation(line: 519, column: 58, scope: !3727)
!3873 = !DILocation(line: 519, column: 38, scope: !3727)
!3874 = !DILocation(line: 519, column: 66, scope: !3727)
!3875 = !DILocation(line: 519, column: 21, scope: !3727)
!3876 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !3726)
!3877 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !3726)
!3878 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !3726)
!3879 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !3726)
!3880 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !3726)
!3881 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !3726)
!3882 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !3726)
!3883 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !3726)
!3884 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !3726)
!3885 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !3726)
!3886 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !3726)
!3887 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !3726)
!3888 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !3726)
!3889 = !DILocation(line: 520, column: 47, scope: !3727)
!3890 = !DILocation(line: 519, column: 16, scope: !3727)
!3891 = !DILocation(line: 519, column: 9, scope: !3727)
!3892 = !DILocation(line: 519, column: 19, scope: !3727)
!3893 = !DILocation(line: 521, column: 5, scope: !3727)
!3894 = !DILocation(line: 518, column: 26, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !3728, file: !935, discriminator: 2)
!3896 = !DILocation(line: 518, column: 5, scope: !3895)
!3897 = distinct !{!3897, !3898}
!3898 = !DILocation(line: 518, column: 5, scope: !3721)
!3899 = !DILocation(line: 523, column: 5, scope: !3721)
!3900 = !DILocation(line: 523, column: 9, scope: !3721)
!3901 = !DILocation(line: 523, column: 15, scope: !3721)
!3902 = !DILocation(line: 524, column: 5, scope: !3721)
!3903 = !DILocation(line: 524, column: 9, scope: !3721)
!3904 = !DILocation(line: 524, column: 14, scope: !3721)
!3905 = !DILocation(line: 525, column: 13, scope: !3721)
!3906 = !DILocation(line: 526, column: 13, scope: !3721)
!3907 = !DILocation(line: 528, column: 12, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3721, file: !935, line: 528, column: 5)
!3909 = !DILocation(line: 528, column: 10, scope: !3908)
!3910 = !DILocation(line: 528, column: 17, scope: !3911)
!3911 = !DILexicalBlockFile(scope: !3912, file: !935, discriminator: 1)
!3912 = distinct !DILexicalBlock(scope: !3908, file: !935, line: 528, column: 5)
!3913 = !DILocation(line: 528, column: 19, scope: !3911)
!3914 = !DILocation(line: 528, column: 5, scope: !3911)
!3915 = !DILocation(line: 529, column: 22, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3912, file: !935, line: 528, column: 30)
!3917 = !DILocation(line: 529, column: 24, scope: !3916)
!3918 = !DILocation(line: 529, column: 15, scope: !3916)
!3919 = !DILocation(line: 529, column: 13, scope: !3916)
!3920 = !DILocation(line: 530, column: 23, scope: !3916)
!3921 = !DILocation(line: 530, column: 25, scope: !3916)
!3922 = !DILocation(line: 530, column: 31, scope: !3916)
!3923 = !DILocation(line: 530, column: 15, scope: !3916)
!3924 = !DILocation(line: 530, column: 13, scope: !3916)
!3925 = !DILocation(line: 532, column: 13, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3916, file: !935, line: 532, column: 13)
!3927 = !DILocation(line: 532, column: 17, scope: !3926)
!3928 = !DILocation(line: 532, column: 13, scope: !3916)
!3929 = !DILocation(line: 533, column: 13, scope: !3926)
!3930 = !DILocation(line: 535, column: 16, scope: !3916)
!3931 = !DILocation(line: 535, column: 22, scope: !3916)
!3932 = !DILocation(line: 535, column: 20, scope: !3916)
!3933 = !DILocation(line: 535, column: 26, scope: !3916)
!3934 = !DILocation(line: 535, column: 39, scope: !3916)
!3935 = !DILocation(line: 535, column: 13, scope: !3916)
!3936 = !DILocation(line: 536, column: 16, scope: !3916)
!3937 = !DILocation(line: 536, column: 22, scope: !3916)
!3938 = !DILocation(line: 536, column: 20, scope: !3916)
!3939 = !DILocation(line: 536, column: 32, scope: !3916)
!3940 = !DILocation(line: 536, column: 38, scope: !3916)
!3941 = !DILocation(line: 536, column: 36, scope: !3916)
!3942 = !DILocation(line: 536, column: 30, scope: !3916)
!3943 = !DILocation(line: 536, column: 14, scope: !3916)
!3944 = !DILocation(line: 537, column: 13, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3916, file: !935, line: 537, column: 13)
!3946 = !DILocation(line: 537, column: 18, scope: !3945)
!3947 = !DILocation(line: 537, column: 13, scope: !3916)
!3948 = !DILocation(line: 538, column: 23, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3945, file: !935, line: 537, column: 23)
!3950 = !DILocation(line: 538, column: 21, scope: !3949)
!3951 = !DILocation(line: 539, column: 23, scope: !3949)
!3952 = !DILocation(line: 539, column: 21, scope: !3949)
!3953 = !DILocation(line: 540, column: 25, scope: !3949)
!3954 = !DILocation(line: 540, column: 13, scope: !3949)
!3955 = !DILocation(line: 540, column: 17, scope: !3949)
!3956 = !DILocation(line: 540, column: 23, scope: !3949)
!3957 = !DILocation(line: 541, column: 9, scope: !3949)
!3958 = !DILocation(line: 542, column: 5, scope: !3916)
!3959 = !DILocation(line: 528, column: 26, scope: !3960)
!3960 = !DILexicalBlockFile(scope: !3912, file: !935, discriminator: 2)
!3961 = !DILocation(line: 528, column: 5, scope: !3960)
!3962 = distinct !{!3962, !3963}
!3963 = !DILocation(line: 528, column: 5, scope: !3721)
!3964 = !DILocation(line: 544, column: 9, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3721, file: !935, line: 544, column: 9)
!3966 = !DILocation(line: 544, column: 13, scope: !3965)
!3967 = !DILocation(line: 544, column: 19, scope: !3965)
!3968 = !DILocation(line: 544, column: 9, scope: !3721)
!3969 = !DILocation(line: 545, column: 21, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3965, file: !935, line: 544, column: 26)
!3971 = !DILocation(line: 545, column: 9, scope: !3970)
!3972 = !DILocation(line: 545, column: 13, scope: !3970)
!3973 = !DILocation(line: 545, column: 19, scope: !3970)
!3974 = !DILocation(line: 546, column: 9, scope: !3970)
!3975 = !DILocation(line: 549, column: 11, scope: !3721)
!3976 = !DILocation(line: 549, column: 24, scope: !3721)
!3977 = !DILocation(line: 549, column: 22, scope: !3721)
!3978 = !DILocation(line: 549, column: 9, scope: !3721)
!3979 = !DILocation(line: 550, column: 12, scope: !3721)
!3980 = !DILocation(line: 550, column: 16, scope: !3721)
!3981 = !DILocation(line: 550, column: 25, scope: !3721)
!3982 = !DILocation(line: 550, column: 29, scope: !3721)
!3983 = !DILocation(line: 550, column: 22, scope: !3721)
!3984 = !DILocation(line: 550, column: 9, scope: !3721)
!3985 = !DILocation(line: 551, column: 19, scope: !3721)
!3986 = !DILocation(line: 551, column: 23, scope: !3721)
!3987 = !DILocation(line: 551, column: 29, scope: !3721)
!3988 = !DILocation(line: 551, column: 35, scope: !3721)
!3989 = !DILocation(line: 551, column: 11, scope: !3721)
!3990 = !DILocation(line: 551, column: 50, scope: !3721)
!3991 = !DILocation(line: 551, column: 54, scope: !3721)
!3992 = !DILocation(line: 551, column: 60, scope: !3721)
!3993 = !DILocation(line: 551, column: 66, scope: !3721)
!3994 = !DILocation(line: 551, column: 42, scope: !3721)
!3995 = !DILocation(line: 551, column: 40, scope: !3721)
!3996 = !DILocation(line: 551, column: 9, scope: !3721)
!3997 = !DILocation(line: 552, column: 9, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3721, file: !935, line: 552, column: 9)
!3999 = !DILocation(line: 552, column: 15, scope: !3998)
!4000 = !DILocation(line: 552, column: 13, scope: !3998)
!4001 = !DILocation(line: 552, column: 9, scope: !3721)
!4002 = !DILocation(line: 553, column: 23, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3998, file: !935, line: 552, column: 20)
!4004 = !DILocation(line: 553, column: 27, scope: !4003)
!4005 = !DILocation(line: 553, column: 33, scope: !4003)
!4006 = !DILocation(line: 553, column: 39, scope: !4003)
!4007 = !DILocation(line: 553, column: 15, scope: !4003)
!4008 = !DILocation(line: 553, column: 13, scope: !4003)
!4009 = !DILocation(line: 555, column: 13, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4003, file: !935, line: 555, column: 13)
!4011 = !DILocation(line: 555, column: 20, scope: !4010)
!4012 = !DILocation(line: 555, column: 17, scope: !4010)
!4013 = !DILocation(line: 555, column: 13, scope: !4003)
!4014 = !DILocation(line: 556, column: 13, scope: !4010)
!4015 = !DILocation(line: 556, column: 17, scope: !4010)
!4016 = !DILocation(line: 556, column: 22, scope: !4010)
!4017 = !DILocation(line: 558, column: 26, scope: !4010)
!4018 = !DILocation(line: 558, column: 30, scope: !4010)
!4019 = !DILocation(line: 558, column: 39, scope: !4010)
!4020 = !DILocation(line: 558, column: 37, scope: !4010)
!4021 = !DILocation(line: 558, column: 47, scope: !4010)
!4022 = !DILocation(line: 558, column: 56, scope: !4010)
!4023 = !DILocation(line: 558, column: 69, scope: !4010)
!4024 = !DILocation(line: 558, column: 13, scope: !4010)
!4025 = !DILocation(line: 558, column: 17, scope: !4010)
!4026 = !DILocation(line: 558, column: 22, scope: !4010)
!4027 = !DILocation(line: 559, column: 5, scope: !4003)
!4028 = !DILocation(line: 560, column: 18, scope: !3721)
!4029 = !DILocation(line: 560, column: 28, scope: !3721)
!4030 = !DILocation(line: 560, column: 5, scope: !3721)
!4031 = !DILocation(line: 560, column: 9, scope: !3721)
!4032 = !DILocation(line: 560, column: 15, scope: !3721)
!4033 = !DILocation(line: 561, column: 1, scope: !3721)
!4034 = !DILocation(line: 561, column: 1, scope: !4035)
!4035 = !DILexicalBlockFile(scope: !3721, file: !935, discriminator: 1)
!4036 = distinct !DISubprogram(name: "harmonic_filter", scope: !935, file: !935, line: 568, type: !4037, isLocal: true, isDefinition: true, scopeLine: 569, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{null, !3724, !4039, !1945}
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64, align: 64)
!4040 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4041)
!4041 = distinct !DILocation(line: 574, column: 19, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !935, line: 572, column: 30)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !935, line: 572, column: 5)
!4044 = distinct !DILexicalBlock(scope: !4036, file: !935, line: 572, column: 5)
!4045 = !DILocalVariable(name: "hf", arg: 1, scope: !4036, file: !935, line: 568, type: !3724)
!4046 = !DILocation(line: 568, column: 38, scope: !4036)
!4047 = !DILocalVariable(name: "src", arg: 2, scope: !4036, file: !935, line: 568, type: !4039)
!4048 = !DILocation(line: 568, column: 57, scope: !4036)
!4049 = !DILocalVariable(name: "dest", arg: 3, scope: !4036, file: !935, line: 568, type: !1945)
!4050 = !DILocation(line: 568, column: 71, scope: !4036)
!4051 = !DILocalVariable(name: "i", scope: !4036, file: !935, line: 570, type: !920)
!4052 = !DILocation(line: 570, column: 9, scope: !4036)
!4053 = !DILocation(line: 572, column: 12, scope: !4044)
!4054 = !DILocation(line: 572, column: 10, scope: !4044)
!4055 = !DILocation(line: 572, column: 17, scope: !4056)
!4056 = !DILexicalBlockFile(scope: !4043, file: !935, discriminator: 1)
!4057 = !DILocation(line: 572, column: 19, scope: !4056)
!4058 = !DILocation(line: 572, column: 5, scope: !4056)
!4059 = !DILocalVariable(name: "temp", scope: !4042, file: !935, line: 573, type: !922)
!4060 = !DILocation(line: 573, column: 17, scope: !4042)
!4061 = !DILocation(line: 573, column: 24, scope: !4042)
!4062 = !DILocation(line: 573, column: 28, scope: !4042)
!4063 = !DILocation(line: 573, column: 39, scope: !4042)
!4064 = !DILocation(line: 573, column: 43, scope: !4042)
!4065 = !DILocation(line: 573, column: 47, scope: !4042)
!4066 = !DILocation(line: 573, column: 41, scope: !4042)
!4067 = !DILocation(line: 573, column: 35, scope: !4042)
!4068 = !DILocation(line: 573, column: 33, scope: !4042)
!4069 = !DILocation(line: 573, column: 54, scope: !4042)
!4070 = !DILocation(line: 574, column: 41, scope: !4042)
!4071 = !DILocation(line: 574, column: 37, scope: !4042)
!4072 = !DILocation(line: 574, column: 44, scope: !4042)
!4073 = !DILocation(line: 574, column: 36, scope: !4042)
!4074 = !DILocation(line: 574, column: 53, scope: !4042)
!4075 = !DILocation(line: 574, column: 51, scope: !4042)
!4076 = !DILocation(line: 574, column: 58, scope: !4042)
!4077 = !DILocation(line: 574, column: 19, scope: !4042)
!4078 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4041)
!4079 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4041)
!4080 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4041)
!4081 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4041)
!4082 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4041)
!4083 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4041)
!4084 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4041)
!4085 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4041)
!4086 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4041)
!4087 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4041)
!4088 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4041)
!4089 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4041)
!4090 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4041)
!4091 = !DILocation(line: 574, column: 71, scope: !4042)
!4092 = !DILocation(line: 574, column: 14, scope: !4042)
!4093 = !DILocation(line: 574, column: 9, scope: !4042)
!4094 = !DILocation(line: 574, column: 17, scope: !4042)
!4095 = !DILocation(line: 575, column: 5, scope: !4042)
!4096 = !DILocation(line: 572, column: 26, scope: !4097)
!4097 = !DILexicalBlockFile(scope: !4043, file: !935, discriminator: 2)
!4098 = !DILocation(line: 572, column: 5, scope: !4097)
!4099 = distinct !{!4099, !4100}
!4100 = !DILocation(line: 572, column: 5, scope: !4036)
!4101 = !DILocation(line: 576, column: 1, scope: !4036)
!4102 = distinct !DISubprogram(name: "synth_percept_filter", scope: !935, file: !935, line: 597, type: !4103, isLocal: true, isDefinition: true, scopeLine: 600, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{null, !1945, !1945, !1945, !1945, !4039, !1945, !920}
!4105 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4106)
!4106 = distinct !DILocation(line: 625, column: 19, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !935, line: 619, column: 30)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !935, line: 619, column: 5)
!4109 = distinct !DILexicalBlock(scope: !4102, file: !935, line: 619, column: 5)
!4110 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4111)
!4111 = distinct !DILocation(line: 616, column: 22, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !935, line: 610, column: 30)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !935, line: 610, column: 5)
!4114 = distinct !DILexicalBlock(scope: !4102, file: !935, line: 610, column: 5)
!4115 = !DILocalVariable(name: "qnt_lpc", arg: 1, scope: !4102, file: !935, line: 597, type: !1945)
!4116 = !DILocation(line: 597, column: 43, scope: !4102)
!4117 = !DILocalVariable(name: "perf_lpc", arg: 2, scope: !4102, file: !935, line: 597, type: !1945)
!4118 = !DILocation(line: 597, column: 61, scope: !4102)
!4119 = !DILocalVariable(name: "perf_fir", arg: 3, scope: !4102, file: !935, line: 598, type: !1945)
!4120 = !DILocation(line: 598, column: 43, scope: !4102)
!4121 = !DILocalVariable(name: "perf_iir", arg: 4, scope: !4102, file: !935, line: 598, type: !1945)
!4122 = !DILocation(line: 598, column: 62, scope: !4102)
!4123 = !DILocalVariable(name: "src", arg: 5, scope: !4102, file: !935, line: 599, type: !4039)
!4124 = !DILocation(line: 599, column: 49, scope: !4102)
!4125 = !DILocalVariable(name: "dest", arg: 6, scope: !4102, file: !935, line: 599, type: !1945)
!4126 = !DILocation(line: 599, column: 63, scope: !4102)
!4127 = !DILocalVariable(name: "scale", arg: 7, scope: !4102, file: !935, line: 599, type: !920)
!4128 = !DILocation(line: 599, column: 73, scope: !4102)
!4129 = !DILocalVariable(name: "i", scope: !4102, file: !935, line: 601, type: !920)
!4130 = !DILocation(line: 601, column: 9, scope: !4102)
!4131 = !DILocalVariable(name: "j", scope: !4102, file: !935, line: 601, type: !920)
!4132 = !DILocation(line: 601, column: 12, scope: !4102)
!4133 = !DILocalVariable(name: "buf_16", scope: !4102, file: !935, line: 602, type: !4134)
!4134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 1120, align: 16, elements: !4135)
!4135 = !{!4136}
!4136 = !DISubrange(count: 70)
!4137 = !DILocation(line: 602, column: 13, scope: !4102)
!4138 = !DILocalVariable(name: "buf", scope: !4102, file: !935, line: 603, type: !4139)
!4139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !922, size: 3840, align: 64, elements: !2137)
!4140 = !DILocation(line: 603, column: 13, scope: !4102)
!4141 = !DILocalVariable(name: "bptr_16", scope: !4102, file: !935, line: 605, type: !1945)
!4142 = !DILocation(line: 605, column: 14, scope: !4102)
!4143 = !DILocation(line: 605, column: 24, scope: !4102)
!4144 = !DILocation(line: 605, column: 31, scope: !4102)
!4145 = !DILocation(line: 607, column: 5, scope: !4102)
!4146 = !DILocation(line: 607, column: 20, scope: !4102)
!4147 = !DILocation(line: 608, column: 12, scope: !4102)
!4148 = !DILocation(line: 608, column: 17, scope: !4102)
!4149 = !DILocation(line: 608, column: 5, scope: !4102)
!4150 = !DILocation(line: 608, column: 23, scope: !4102)
!4151 = !DILocation(line: 610, column: 12, scope: !4114)
!4152 = !DILocation(line: 610, column: 10, scope: !4114)
!4153 = !DILocation(line: 610, column: 17, scope: !4154)
!4154 = !DILexicalBlockFile(scope: !4113, file: !935, discriminator: 1)
!4155 = !DILocation(line: 610, column: 19, scope: !4154)
!4156 = !DILocation(line: 610, column: 5, scope: !4154)
!4157 = !DILocalVariable(name: "temp", scope: !4112, file: !935, line: 611, type: !922)
!4158 = !DILocation(line: 611, column: 17, scope: !4112)
!4159 = !DILocation(line: 612, column: 16, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4112, file: !935, line: 612, column: 9)
!4161 = !DILocation(line: 612, column: 14, scope: !4160)
!4162 = !DILocation(line: 612, column: 21, scope: !4163)
!4163 = !DILexicalBlockFile(scope: !4164, file: !935, discriminator: 1)
!4164 = distinct !DILexicalBlock(scope: !4160, file: !935, line: 612, column: 9)
!4165 = !DILocation(line: 612, column: 23, scope: !4163)
!4166 = !DILocation(line: 612, column: 9, scope: !4163)
!4167 = !DILocation(line: 613, column: 29, scope: !4164)
!4168 = !DILocation(line: 613, column: 31, scope: !4164)
!4169 = !DILocation(line: 613, column: 21, scope: !4164)
!4170 = !DILocation(line: 613, column: 46, scope: !4164)
!4171 = !DILocation(line: 613, column: 50, scope: !4164)
!4172 = !DILocation(line: 613, column: 48, scope: !4164)
!4173 = !DILocation(line: 613, column: 38, scope: !4164)
!4174 = !DILocation(line: 613, column: 36, scope: !4164)
!4175 = !DILocation(line: 613, column: 18, scope: !4164)
!4176 = !DILocation(line: 613, column: 13, scope: !4164)
!4177 = !DILocation(line: 612, column: 31, scope: !4178)
!4178 = !DILexicalBlockFile(scope: !4164, file: !935, discriminator: 2)
!4179 = !DILocation(line: 612, column: 9, scope: !4178)
!4180 = distinct !{!4180, !4181}
!4181 = !DILocation(line: 612, column: 9, scope: !4112)
!4182 = !DILocation(line: 615, column: 23, scope: !4112)
!4183 = !DILocation(line: 615, column: 19, scope: !4112)
!4184 = !DILocation(line: 615, column: 26, scope: !4112)
!4185 = !DILocation(line: 615, column: 18, scope: !4112)
!4186 = !DILocation(line: 615, column: 36, scope: !4112)
!4187 = !DILocation(line: 615, column: 41, scope: !4112)
!4188 = !DILocation(line: 615, column: 33, scope: !4112)
!4189 = !DILocation(line: 615, column: 13, scope: !4112)
!4190 = !DILocation(line: 615, column: 9, scope: !4112)
!4191 = !DILocation(line: 615, column: 16, scope: !4112)
!4192 = !DILocation(line: 616, column: 43, scope: !4112)
!4193 = !DILocation(line: 616, column: 39, scope: !4112)
!4194 = !DILocation(line: 616, column: 46, scope: !4112)
!4195 = !DILocation(line: 616, column: 22, scope: !4112)
!4196 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4111)
!4197 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4111)
!4198 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4111)
!4199 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4111)
!4200 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4111)
!4201 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4111)
!4202 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4111)
!4203 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4111)
!4204 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4111)
!4205 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4111)
!4206 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4111)
!4207 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4111)
!4208 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4111)
!4209 = !DILocation(line: 616, column: 59, scope: !4112)
!4210 = !DILocation(line: 616, column: 17, scope: !4112)
!4211 = !DILocation(line: 616, column: 9, scope: !4112)
!4212 = !DILocation(line: 616, column: 20, scope: !4112)
!4213 = !DILocation(line: 617, column: 5, scope: !4112)
!4214 = !DILocation(line: 610, column: 26, scope: !4215)
!4215 = !DILexicalBlockFile(scope: !4113, file: !935, discriminator: 2)
!4216 = !DILocation(line: 610, column: 5, scope: !4215)
!4217 = distinct !{!4217, !4218}
!4218 = !DILocation(line: 610, column: 5, scope: !4102)
!4219 = !DILocation(line: 619, column: 12, scope: !4109)
!4220 = !DILocation(line: 619, column: 10, scope: !4109)
!4221 = !DILocation(line: 619, column: 17, scope: !4222)
!4222 = !DILexicalBlockFile(scope: !4108, file: !935, discriminator: 1)
!4223 = !DILocation(line: 619, column: 19, scope: !4222)
!4224 = !DILocation(line: 619, column: 5, scope: !4222)
!4225 = !DILocalVariable(name: "fir", scope: !4107, file: !935, line: 620, type: !922)
!4226 = !DILocation(line: 620, column: 17, scope: !4107)
!4227 = !DILocalVariable(name: "iir", scope: !4107, file: !935, line: 620, type: !922)
!4228 = !DILocation(line: 620, column: 26, scope: !4107)
!4229 = !DILocation(line: 621, column: 16, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4107, file: !935, line: 621, column: 9)
!4231 = !DILocation(line: 621, column: 14, scope: !4230)
!4232 = !DILocation(line: 621, column: 21, scope: !4233)
!4233 = !DILexicalBlockFile(scope: !4234, file: !935, discriminator: 1)
!4234 = distinct !DILexicalBlock(scope: !4230, file: !935, line: 621, column: 9)
!4235 = !DILocation(line: 621, column: 23, scope: !4233)
!4236 = !DILocation(line: 621, column: 9, scope: !4233)
!4237 = !DILocation(line: 622, column: 29, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4234, file: !935, line: 621, column: 35)
!4239 = !DILocation(line: 622, column: 31, scope: !4238)
!4240 = !DILocation(line: 622, column: 20, scope: !4238)
!4241 = !DILocation(line: 622, column: 46, scope: !4238)
!4242 = !DILocation(line: 622, column: 50, scope: !4238)
!4243 = !DILocation(line: 622, column: 48, scope: !4238)
!4244 = !DILocation(line: 622, column: 38, scope: !4238)
!4245 = !DILocation(line: 622, column: 36, scope: !4238)
!4246 = !DILocation(line: 622, column: 17, scope: !4238)
!4247 = !DILocation(line: 623, column: 29, scope: !4238)
!4248 = !DILocation(line: 623, column: 31, scope: !4238)
!4249 = !DILocation(line: 623, column: 36, scope: !4238)
!4250 = !DILocation(line: 623, column: 20, scope: !4238)
!4251 = !DILocation(line: 623, column: 48, scope: !4238)
!4252 = !DILocation(line: 623, column: 52, scope: !4238)
!4253 = !DILocation(line: 623, column: 50, scope: !4238)
!4254 = !DILocation(line: 623, column: 43, scope: !4238)
!4255 = !DILocation(line: 623, column: 41, scope: !4238)
!4256 = !DILocation(line: 623, column: 17, scope: !4238)
!4257 = !DILocation(line: 624, column: 9, scope: !4238)
!4258 = !DILocation(line: 621, column: 31, scope: !4259)
!4259 = !DILexicalBlockFile(scope: !4234, file: !935, discriminator: 2)
!4260 = !DILocation(line: 621, column: 9, scope: !4259)
!4261 = distinct !{!4261, !4262}
!4262 = !DILocation(line: 621, column: 9, scope: !4107)
!4263 = !DILocation(line: 625, column: 42, scope: !4107)
!4264 = !DILocation(line: 625, column: 38, scope: !4107)
!4265 = !DILocation(line: 625, column: 48, scope: !4107)
!4266 = !DILocation(line: 625, column: 52, scope: !4107)
!4267 = !DILocation(line: 625, column: 45, scope: !4107)
!4268 = !DILocation(line: 625, column: 62, scope: !4107)
!4269 = !DILocation(line: 625, column: 59, scope: !4107)
!4270 = !DILocation(line: 625, column: 72, scope: !4107)
!4271 = !DILocation(line: 625, column: 76, scope: !4107)
!4272 = !DILocation(line: 625, column: 69, scope: !4107)
!4273 = !DILocation(line: 625, column: 82, scope: !4107)
!4274 = !DILocation(line: 625, column: 19, scope: !4107)
!4275 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4106)
!4276 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4106)
!4277 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4106)
!4278 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4106)
!4279 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4106)
!4280 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4106)
!4281 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4106)
!4282 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4106)
!4283 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4106)
!4284 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4106)
!4285 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4106)
!4286 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4106)
!4287 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4106)
!4288 = !DILocation(line: 626, column: 45, scope: !4107)
!4289 = !DILocation(line: 625, column: 14, scope: !4107)
!4290 = !DILocation(line: 625, column: 9, scope: !4107)
!4291 = !DILocation(line: 625, column: 17, scope: !4107)
!4292 = !DILocation(line: 627, column: 5, scope: !4107)
!4293 = !DILocation(line: 619, column: 26, scope: !4294)
!4294 = !DILexicalBlockFile(scope: !4108, file: !935, discriminator: 2)
!4295 = !DILocation(line: 619, column: 5, scope: !4294)
!4296 = distinct !{!4296, !4297}
!4297 = !DILocation(line: 619, column: 5, scope: !4102)
!4298 = !DILocation(line: 628, column: 12, scope: !4102)
!4299 = !DILocation(line: 628, column: 5, scope: !4102)
!4300 = !DILocation(line: 628, column: 22, scope: !4102)
!4301 = !DILocation(line: 628, column: 29, scope: !4102)
!4302 = !DILocation(line: 629, column: 12, scope: !4102)
!4303 = !DILocation(line: 629, column: 5, scope: !4102)
!4304 = !DILocation(line: 629, column: 22, scope: !4102)
!4305 = !DILocation(line: 629, column: 27, scope: !4102)
!4306 = !DILocation(line: 629, column: 32, scope: !4102)
!4307 = !DILocation(line: 631, column: 1, scope: !4102)
!4308 = distinct !DISubprogram(name: "harmonic_noise_sub", scope: !935, file: !935, line: 578, type: !4037, isLocal: true, isDefinition: true, scopeLine: 579, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!4309 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4310)
!4310 = distinct !DILocation(line: 583, column: 19, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !935, line: 581, column: 30)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !935, line: 581, column: 5)
!4313 = distinct !DILexicalBlock(scope: !4308, file: !935, line: 581, column: 5)
!4314 = !DILocalVariable(name: "hf", arg: 1, scope: !4308, file: !935, line: 578, type: !3724)
!4315 = !DILocation(line: 578, column: 41, scope: !4308)
!4316 = !DILocalVariable(name: "src", arg: 2, scope: !4308, file: !935, line: 578, type: !4039)
!4317 = !DILocation(line: 578, column: 60, scope: !4308)
!4318 = !DILocalVariable(name: "dest", arg: 3, scope: !4308, file: !935, line: 578, type: !1945)
!4319 = !DILocation(line: 578, column: 74, scope: !4308)
!4320 = !DILocalVariable(name: "i", scope: !4308, file: !935, line: 580, type: !920)
!4321 = !DILocation(line: 580, column: 9, scope: !4308)
!4322 = !DILocation(line: 581, column: 12, scope: !4313)
!4323 = !DILocation(line: 581, column: 10, scope: !4313)
!4324 = !DILocation(line: 581, column: 17, scope: !4325)
!4325 = !DILexicalBlockFile(scope: !4312, file: !935, discriminator: 1)
!4326 = !DILocation(line: 581, column: 19, scope: !4325)
!4327 = !DILocation(line: 581, column: 5, scope: !4325)
!4328 = !DILocalVariable(name: "temp", scope: !4311, file: !935, line: 582, type: !922)
!4329 = !DILocation(line: 582, column: 17, scope: !4311)
!4330 = !DILocation(line: 582, column: 24, scope: !4311)
!4331 = !DILocation(line: 582, column: 28, scope: !4311)
!4332 = !DILocation(line: 582, column: 39, scope: !4311)
!4333 = !DILocation(line: 582, column: 43, scope: !4311)
!4334 = !DILocation(line: 582, column: 47, scope: !4311)
!4335 = !DILocation(line: 582, column: 41, scope: !4311)
!4336 = !DILocation(line: 582, column: 35, scope: !4311)
!4337 = !DILocation(line: 582, column: 33, scope: !4311)
!4338 = !DILocation(line: 582, column: 54, scope: !4311)
!4339 = !DILocation(line: 583, column: 43, scope: !4311)
!4340 = !DILocation(line: 583, column: 38, scope: !4311)
!4341 = !DILocation(line: 583, column: 52, scope: !4311)
!4342 = !DILocation(line: 583, column: 48, scope: !4311)
!4343 = !DILocation(line: 583, column: 46, scope: !4311)
!4344 = !DILocation(line: 583, column: 56, scope: !4311)
!4345 = !DILocation(line: 583, column: 36, scope: !4311)
!4346 = !DILocation(line: 583, column: 65, scope: !4311)
!4347 = !DILocation(line: 583, column: 63, scope: !4311)
!4348 = !DILocation(line: 583, column: 70, scope: !4311)
!4349 = !DILocation(line: 583, column: 19, scope: !4311)
!4350 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4310)
!4351 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4310)
!4352 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4310)
!4353 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4310)
!4354 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4310)
!4355 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4310)
!4356 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4310)
!4357 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4310)
!4358 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4310)
!4359 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4310)
!4360 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4310)
!4361 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4310)
!4362 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4310)
!4363 = !DILocation(line: 584, column: 45, scope: !4311)
!4364 = !DILocation(line: 583, column: 14, scope: !4311)
!4365 = !DILocation(line: 583, column: 9, scope: !4311)
!4366 = !DILocation(line: 583, column: 17, scope: !4311)
!4367 = !DILocation(line: 585, column: 5, scope: !4311)
!4368 = !DILocation(line: 581, column: 26, scope: !4369)
!4369 = !DILexicalBlockFile(scope: !4312, file: !935, discriminator: 2)
!4370 = !DILocation(line: 581, column: 5, scope: !4369)
!4371 = distinct !{!4371, !4372}
!4372 = !DILocation(line: 581, column: 5, scope: !4308)
!4373 = !DILocation(line: 586, column: 1, scope: !4308)
!4374 = distinct !DISubprogram(name: "acb_search", scope: !935, file: !935, line: 639, type: !4375, isLocal: true, isDefinition: true, scopeLine: 642, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{null, !1833, !1945, !1945, !4039, !920}
!4377 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4378)
!4378 = distinct !DILocation(line: 683, column: 33, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !935, line: 680, column: 38)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !935, line: 680, column: 13)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !935, line: 680, column: 13)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !935, line: 678, column: 38)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !935, line: 678, column: 9)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !935, line: 678, column: 9)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !935, line: 667, column: 32)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !935, line: 667, column: 5)
!4387 = distinct !DILexicalBlock(scope: !4374, file: !935, line: 667, column: 5)
!4388 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4389)
!4389 = distinct !DILocation(line: 690, column: 32, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !935, line: 688, column: 33)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !935, line: 688, column: 9)
!4392 = distinct !DILexicalBlock(scope: !4385, file: !935, line: 688, column: 9)
!4393 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4394)
!4394 = distinct !DILocation(line: 702, column: 36, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !935, line: 700, column: 37)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !935, line: 700, column: 13)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !935, line: 700, column: 13)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !935, line: 699, column: 33)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !935, line: 699, column: 9)
!4400 = distinct !DILexicalBlock(scope: !4385, file: !935, line: 699, column: 9)
!4401 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4402)
!4402 = distinct !DILocation(line: 715, column: 22, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !935, line: 714, column: 5)
!4404 = distinct !DILexicalBlock(scope: !4374, file: !935, line: 714, column: 5)
!4405 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4406)
!4406 = distinct !DILocation(line: 731, column: 20, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !935, line: 727, column: 56)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !935, line: 727, column: 9)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !935, line: 727, column: 9)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !935, line: 719, column: 32)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !935, line: 719, column: 5)
!4412 = distinct !DILexicalBlock(scope: !4374, file: !935, line: 719, column: 5)
!4413 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4414)
!4414 = distinct !DILocation(line: 674, column: 33, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !935, line: 670, column: 34)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !935, line: 670, column: 9)
!4417 = distinct !DILexicalBlock(scope: !4385, file: !935, line: 670, column: 9)
!4418 = !DILocalVariable(name: "p", arg: 1, scope: !4374, file: !935, line: 639, type: !1833)
!4419 = !DILocation(line: 639, column: 47, scope: !4374)
!4420 = !DILocalVariable(name: "residual", arg: 2, scope: !4374, file: !935, line: 639, type: !1945)
!4421 = !DILocation(line: 639, column: 59, scope: !4374)
!4422 = !DILocalVariable(name: "impulse_resp", arg: 3, scope: !4374, file: !935, line: 640, type: !1945)
!4423 = !DILocation(line: 640, column: 33, scope: !4374)
!4424 = !DILocalVariable(name: "buf", arg: 4, scope: !4374, file: !935, line: 640, type: !4039)
!4425 = !DILocation(line: 640, column: 62, scope: !4374)
!4426 = !DILocalVariable(name: "index", arg: 5, scope: !4374, file: !935, line: 641, type: !920)
!4427 = !DILocation(line: 641, column: 28, scope: !4374)
!4428 = !DILocalVariable(name: "flt_buf", scope: !4374, file: !935, line: 643, type: !4429)
!4429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 4800, align: 16, elements: !4430)
!4430 = !{!4431, !2138}
!4431 = !DISubrange(count: 5)
!4432 = !DILocation(line: 643, column: 13, scope: !4374)
!4433 = !DILocalVariable(name: "cb_tbl", scope: !4374, file: !935, line: 645, type: !4039)
!4434 = !DILocation(line: 645, column: 20, scope: !4374)
!4435 = !DILocalVariable(name: "ccr_buf", scope: !4374, file: !935, line: 647, type: !4436)
!4436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 2560, align: 32, elements: !1928)
!4437 = !DILocation(line: 647, column: 9, scope: !4374)
!4438 = !DILocalVariable(name: "pitch_lag", scope: !4374, file: !935, line: 649, type: !920)
!4439 = !DILocation(line: 649, column: 9, scope: !4374)
!4440 = !DILocation(line: 649, column: 34, scope: !4374)
!4441 = !DILocation(line: 649, column: 40, scope: !4374)
!4442 = !DILocation(line: 649, column: 21, scope: !4374)
!4443 = !DILocation(line: 649, column: 24, scope: !4374)
!4444 = !DILocalVariable(name: "acb_lag", scope: !4374, file: !935, line: 650, type: !920)
!4445 = !DILocation(line: 650, column: 9, scope: !4374)
!4446 = !DILocalVariable(name: "acb_gain", scope: !4374, file: !935, line: 651, type: !920)
!4447 = !DILocation(line: 651, column: 9, scope: !4374)
!4448 = !DILocalVariable(name: "odd_frame", scope: !4374, file: !935, line: 652, type: !920)
!4449 = !DILocation(line: 652, column: 9, scope: !4374)
!4450 = !DILocation(line: 652, column: 21, scope: !4374)
!4451 = !DILocation(line: 652, column: 27, scope: !4374)
!4452 = !DILocalVariable(name: "iter", scope: !4374, file: !935, line: 653, type: !920)
!4453 = !DILocation(line: 653, column: 9, scope: !4374)
!4454 = !DILocation(line: 653, column: 20, scope: !4374)
!4455 = !DILocation(line: 653, column: 18, scope: !4374)
!4456 = !DILocalVariable(name: "count", scope: !4374, file: !935, line: 654, type: !920)
!4457 = !DILocation(line: 654, column: 9, scope: !4374)
!4458 = !DILocalVariable(name: "tbl_size", scope: !4374, file: !935, line: 655, type: !920)
!4459 = !DILocation(line: 655, column: 9, scope: !4374)
!4460 = !DILocalVariable(name: "i", scope: !4374, file: !935, line: 657, type: !920)
!4461 = !DILocation(line: 657, column: 9, scope: !4374)
!4462 = !DILocalVariable(name: "j", scope: !4374, file: !935, line: 657, type: !920)
!4463 = !DILocation(line: 657, column: 12, scope: !4374)
!4464 = !DILocalVariable(name: "k", scope: !4374, file: !935, line: 657, type: !920)
!4465 = !DILocation(line: 657, column: 15, scope: !4374)
!4466 = !DILocalVariable(name: "l", scope: !4374, file: !935, line: 657, type: !920)
!4467 = !DILocation(line: 657, column: 18, scope: !4374)
!4468 = !DILocalVariable(name: "max", scope: !4374, file: !935, line: 657, type: !920)
!4469 = !DILocation(line: 657, column: 21, scope: !4374)
!4470 = !DILocalVariable(name: "temp", scope: !4374, file: !935, line: 658, type: !922)
!4471 = !DILocation(line: 658, column: 13, scope: !4374)
!4472 = !DILocation(line: 660, column: 10, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4374, file: !935, line: 660, column: 9)
!4474 = !DILocation(line: 660, column: 9, scope: !4374)
!4475 = !DILocation(line: 661, column: 13, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !935, line: 661, column: 13)
!4477 = distinct !DILexicalBlock(scope: !4473, file: !935, line: 660, column: 21)
!4478 = !DILocation(line: 661, column: 23, scope: !4476)
!4479 = !DILocation(line: 661, column: 13, scope: !4477)
!4480 = !DILocation(line: 662, column: 22, scope: !4476)
!4481 = !DILocation(line: 662, column: 13, scope: !4476)
!4482 = !DILocation(line: 664, column: 27, scope: !4476)
!4483 = !DILocation(line: 664, column: 38, scope: !4476)
!4484 = !DILocation(line: 664, column: 26, scope: !4476)
!4485 = !DILocation(line: 664, column: 26, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !4476, file: !935, discriminator: 1)
!4487 = !DILocation(line: 664, column: 79, scope: !4488)
!4488 = !DILexicalBlockFile(scope: !4476, file: !935, discriminator: 2)
!4489 = !DILocation(line: 664, column: 26, scope: !4488)
!4490 = !DILocation(line: 664, column: 26, scope: !4491)
!4491 = !DILexicalBlockFile(scope: !4476, file: !935, discriminator: 3)
!4492 = !DILocation(line: 664, column: 23, scope: !4491)
!4493 = !DILocation(line: 665, column: 5, scope: !4477)
!4494 = !DILocation(line: 667, column: 12, scope: !4387)
!4495 = !DILocation(line: 667, column: 10, scope: !4387)
!4496 = !DILocation(line: 667, column: 17, scope: !4497)
!4497 = !DILexicalBlockFile(scope: !4386, file: !935, discriminator: 1)
!4498 = !DILocation(line: 667, column: 21, scope: !4497)
!4499 = !DILocation(line: 667, column: 19, scope: !4497)
!4500 = !DILocation(line: 667, column: 5, scope: !4497)
!4501 = !DILocation(line: 668, column: 32, scope: !4385)
!4502 = !DILocation(line: 668, column: 42, scope: !4385)
!4503 = !DILocation(line: 668, column: 45, scope: !4385)
!4504 = !DILocation(line: 668, column: 62, scope: !4385)
!4505 = !DILocation(line: 668, column: 74, scope: !4385)
!4506 = !DILocation(line: 668, column: 72, scope: !4385)
!4507 = !DILocation(line: 668, column: 76, scope: !4385)
!4508 = !DILocation(line: 668, column: 9, scope: !4385)
!4509 = !DILocation(line: 670, column: 16, scope: !4417)
!4510 = !DILocation(line: 670, column: 14, scope: !4417)
!4511 = !DILocation(line: 670, column: 21, scope: !4512)
!4512 = !DILexicalBlockFile(scope: !4416, file: !935, discriminator: 1)
!4513 = !DILocation(line: 670, column: 23, scope: !4512)
!4514 = !DILocation(line: 670, column: 9, scope: !4512)
!4515 = !DILocation(line: 671, column: 18, scope: !4415)
!4516 = !DILocation(line: 672, column: 20, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4415, file: !935, line: 672, column: 13)
!4518 = !DILocation(line: 672, column: 18, scope: !4517)
!4519 = !DILocation(line: 672, column: 25, scope: !4520)
!4520 = !DILexicalBlockFile(scope: !4521, file: !935, discriminator: 1)
!4521 = distinct !DILexicalBlock(scope: !4517, file: !935, line: 672, column: 13)
!4522 = !DILocation(line: 672, column: 30, scope: !4520)
!4523 = !DILocation(line: 672, column: 27, scope: !4520)
!4524 = !DILocation(line: 672, column: 13, scope: !4520)
!4525 = !DILocation(line: 673, column: 42, scope: !4521)
!4526 = !DILocation(line: 673, column: 40, scope: !4521)
!4527 = !DILocation(line: 673, column: 25, scope: !4521)
!4528 = !DILocation(line: 673, column: 60, scope: !4521)
!4529 = !DILocation(line: 673, column: 64, scope: !4521)
!4530 = !DILocation(line: 673, column: 62, scope: !4521)
!4531 = !DILocation(line: 673, column: 47, scope: !4521)
!4532 = !DILocation(line: 673, column: 45, scope: !4521)
!4533 = !DILocation(line: 673, column: 22, scope: !4521)
!4534 = !DILocation(line: 673, column: 17, scope: !4521)
!4535 = !DILocation(line: 672, column: 34, scope: !4536)
!4536 = !DILexicalBlockFile(scope: !4521, file: !935, discriminator: 2)
!4537 = !DILocation(line: 672, column: 13, scope: !4536)
!4538 = distinct !{!4538, !4539}
!4539 = !DILocation(line: 672, column: 13, scope: !4415)
!4540 = !DILocation(line: 674, column: 51, scope: !4415)
!4541 = !DILocation(line: 674, column: 56, scope: !4415)
!4542 = !DILocation(line: 674, column: 62, scope: !4415)
!4543 = !DILocation(line: 674, column: 33, scope: !4415)
!4544 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4414)
!4545 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4414)
!4546 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4414)
!4547 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4414)
!4548 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4414)
!4549 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4414)
!4550 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4414)
!4551 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4414)
!4552 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4414)
!4553 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4414)
!4554 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4414)
!4555 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4414)
!4556 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4414)
!4557 = !DILocation(line: 675, column: 69, scope: !4415)
!4558 = !DILocation(line: 674, column: 28, scope: !4415)
!4559 = !DILocation(line: 674, column: 13, scope: !4415)
!4560 = !DILocation(line: 674, column: 31, scope: !4415)
!4561 = !DILocation(line: 676, column: 9, scope: !4415)
!4562 = !DILocation(line: 670, column: 30, scope: !4563)
!4563 = !DILexicalBlockFile(scope: !4416, file: !935, discriminator: 2)
!4564 = !DILocation(line: 670, column: 9, scope: !4563)
!4565 = distinct !{!4565, !4566}
!4566 = !DILocation(line: 670, column: 9, scope: !4385)
!4567 = !DILocation(line: 678, column: 16, scope: !4384)
!4568 = !DILocation(line: 678, column: 14, scope: !4384)
!4569 = !DILocation(line: 678, column: 25, scope: !4570)
!4570 = !DILexicalBlockFile(scope: !4383, file: !935, discriminator: 1)
!4571 = !DILocation(line: 678, column: 27, scope: !4570)
!4572 = !DILocation(line: 678, column: 9, scope: !4570)
!4573 = !DILocation(line: 679, column: 40, scope: !4382)
!4574 = !DILocation(line: 679, column: 31, scope: !4382)
!4575 = !DILocation(line: 679, column: 43, scope: !4382)
!4576 = !DILocation(line: 679, column: 50, scope: !4382)
!4577 = !DILocation(line: 679, column: 63, scope: !4382)
!4578 = !DILocation(line: 679, column: 29, scope: !4382)
!4579 = !DILocation(line: 679, column: 21, scope: !4382)
!4580 = !DILocation(line: 679, column: 13, scope: !4382)
!4581 = !DILocation(line: 679, column: 27, scope: !4382)
!4582 = !DILocation(line: 680, column: 20, scope: !4381)
!4583 = !DILocation(line: 680, column: 18, scope: !4381)
!4584 = !DILocation(line: 680, column: 25, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !4380, file: !935, discriminator: 1)
!4586 = !DILocation(line: 680, column: 27, scope: !4585)
!4587 = !DILocation(line: 680, column: 13, scope: !4585)
!4588 = !DILocation(line: 681, column: 40, scope: !4379)
!4589 = !DILocation(line: 681, column: 42, scope: !4379)
!4590 = !DILocation(line: 681, column: 25, scope: !4379)
!4591 = !DILocation(line: 681, column: 33, scope: !4379)
!4592 = !DILocation(line: 681, column: 35, scope: !4379)
!4593 = !DILocation(line: 681, column: 47, scope: !4379)
!4594 = !DILocation(line: 682, column: 33, scope: !4379)
!4595 = !DILocation(line: 682, column: 24, scope: !4379)
!4596 = !DILocation(line: 682, column: 51, scope: !4379)
!4597 = !DILocation(line: 682, column: 38, scope: !4379)
!4598 = !DILocation(line: 682, column: 36, scope: !4379)
!4599 = !DILocation(line: 681, column: 54, scope: !4379)
!4600 = !DILocation(line: 681, column: 24, scope: !4379)
!4601 = !DILocation(line: 681, column: 22, scope: !4379)
!4602 = !DILocation(line: 683, column: 51, scope: !4379)
!4603 = !DILocation(line: 683, column: 56, scope: !4379)
!4604 = !DILocation(line: 683, column: 62, scope: !4379)
!4605 = !DILocation(line: 683, column: 33, scope: !4379)
!4606 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4378)
!4607 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4378)
!4608 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4378)
!4609 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4378)
!4610 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4378)
!4611 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4378)
!4612 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4378)
!4613 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4378)
!4614 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4378)
!4615 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4378)
!4616 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4378)
!4617 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4378)
!4618 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4378)
!4619 = !DILocation(line: 683, column: 75, scope: !4379)
!4620 = !DILocation(line: 683, column: 28, scope: !4379)
!4621 = !DILocation(line: 683, column: 17, scope: !4379)
!4622 = !DILocation(line: 683, column: 25, scope: !4379)
!4623 = !DILocation(line: 683, column: 31, scope: !4379)
!4624 = !DILocation(line: 684, column: 13, scope: !4379)
!4625 = !DILocation(line: 680, column: 34, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !4380, file: !935, discriminator: 2)
!4627 = !DILocation(line: 680, column: 13, scope: !4626)
!4628 = distinct !{!4628, !4629}
!4629 = !DILocation(line: 680, column: 13, scope: !4382)
!4630 = !DILocation(line: 685, column: 9, scope: !4382)
!4631 = !DILocation(line: 678, column: 34, scope: !4632)
!4632 = !DILexicalBlockFile(scope: !4383, file: !935, discriminator: 2)
!4633 = !DILocation(line: 678, column: 9, scope: !4632)
!4634 = distinct !{!4634, !4635}
!4635 = !DILocation(line: 678, column: 9, scope: !4385)
!4636 = !DILocation(line: 688, column: 16, scope: !4392)
!4637 = !DILocation(line: 688, column: 14, scope: !4392)
!4638 = !DILocation(line: 688, column: 21, scope: !4639)
!4639 = !DILexicalBlockFile(scope: !4391, file: !935, discriminator: 1)
!4640 = !DILocation(line: 688, column: 23, scope: !4639)
!4641 = !DILocation(line: 688, column: 9, scope: !4639)
!4642 = !DILocation(line: 689, column: 35, scope: !4390)
!4643 = !DILocation(line: 689, column: 48, scope: !4390)
!4644 = !DILocation(line: 689, column: 40, scope: !4390)
!4645 = !DILocation(line: 689, column: 20, scope: !4390)
!4646 = !DILocation(line: 689, column: 18, scope: !4390)
!4647 = !DILocation(line: 690, column: 49, scope: !4390)
!4648 = !DILocation(line: 690, column: 54, scope: !4390)
!4649 = !DILocation(line: 690, column: 32, scope: !4390)
!4650 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4389)
!4651 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4389)
!4652 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4389)
!4653 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4389)
!4654 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4389)
!4655 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4389)
!4656 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4389)
!4657 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4389)
!4658 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4389)
!4659 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4389)
!4660 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4389)
!4661 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4389)
!4662 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4389)
!4663 = !DILocation(line: 690, column: 26, scope: !4390)
!4664 = !DILocation(line: 690, column: 13, scope: !4390)
!4665 = !DILocation(line: 690, column: 30, scope: !4390)
!4666 = !DILocation(line: 691, column: 9, scope: !4390)
!4667 = !DILocation(line: 688, column: 29, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !4391, file: !935, discriminator: 2)
!4669 = !DILocation(line: 688, column: 9, scope: !4668)
!4670 = distinct !{!4670, !4671}
!4671 = !DILocation(line: 688, column: 9, scope: !4385)
!4672 = !DILocation(line: 694, column: 16, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4385, file: !935, line: 694, column: 9)
!4674 = !DILocation(line: 694, column: 14, scope: !4673)
!4675 = !DILocation(line: 694, column: 21, scope: !4676)
!4676 = !DILexicalBlockFile(scope: !4677, file: !935, discriminator: 1)
!4677 = distinct !DILexicalBlock(scope: !4673, file: !935, line: 694, column: 9)
!4678 = !DILocation(line: 694, column: 23, scope: !4676)
!4679 = !DILocation(line: 694, column: 9, scope: !4676)
!4680 = !DILocation(line: 695, column: 62, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4677, file: !935, line: 694, column: 33)
!4682 = !DILocation(line: 695, column: 54, scope: !4681)
!4683 = !DILocation(line: 695, column: 74, scope: !4681)
!4684 = !DILocation(line: 695, column: 66, scope: !4681)
!4685 = !DILocation(line: 695, column: 32, scope: !4681)
!4686 = !DILocation(line: 695, column: 26, scope: !4681)
!4687 = !DILocation(line: 695, column: 13, scope: !4681)
!4688 = !DILocation(line: 695, column: 30, scope: !4681)
!4689 = !DILocation(line: 697, column: 9, scope: !4681)
!4690 = !DILocation(line: 694, column: 29, scope: !4691)
!4691 = !DILexicalBlockFile(scope: !4677, file: !935, discriminator: 2)
!4692 = !DILocation(line: 694, column: 9, scope: !4691)
!4693 = distinct !{!4693, !4694}
!4694 = !DILocation(line: 694, column: 9, scope: !4385)
!4695 = !DILocation(line: 699, column: 16, scope: !4400)
!4696 = !DILocation(line: 699, column: 14, scope: !4400)
!4697 = !DILocation(line: 699, column: 21, scope: !4698)
!4698 = !DILexicalBlockFile(scope: !4399, file: !935, discriminator: 1)
!4699 = !DILocation(line: 699, column: 23, scope: !4698)
!4700 = !DILocation(line: 699, column: 9, scope: !4698)
!4701 = !DILocation(line: 700, column: 20, scope: !4397)
!4702 = !DILocation(line: 700, column: 18, scope: !4397)
!4703 = !DILocation(line: 700, column: 25, scope: !4704)
!4704 = !DILexicalBlockFile(scope: !4396, file: !935, discriminator: 1)
!4705 = !DILocation(line: 700, column: 29, scope: !4704)
!4706 = !DILocation(line: 700, column: 27, scope: !4704)
!4707 = !DILocation(line: 700, column: 13, scope: !4704)
!4708 = !DILocation(line: 701, column: 47, scope: !4395)
!4709 = !DILocation(line: 701, column: 39, scope: !4395)
!4710 = !DILocation(line: 701, column: 59, scope: !4395)
!4711 = !DILocation(line: 701, column: 51, scope: !4395)
!4712 = !DILocation(line: 701, column: 24, scope: !4395)
!4713 = !DILocation(line: 701, column: 22, scope: !4395)
!4714 = !DILocation(line: 702, column: 53, scope: !4395)
!4715 = !DILocation(line: 702, column: 58, scope: !4395)
!4716 = !DILocation(line: 702, column: 36, scope: !4395)
!4717 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4394)
!4718 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4394)
!4719 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4394)
!4720 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4394)
!4721 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4394)
!4722 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4394)
!4723 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4394)
!4724 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4394)
!4725 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4394)
!4726 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4394)
!4727 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4394)
!4728 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4394)
!4729 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4394)
!4730 = !DILocation(line: 702, column: 30, scope: !4395)
!4731 = !DILocation(line: 702, column: 17, scope: !4395)
!4732 = !DILocation(line: 702, column: 34, scope: !4395)
!4733 = !DILocation(line: 703, column: 13, scope: !4395)
!4734 = !DILocation(line: 700, column: 33, scope: !4735)
!4735 = !DILexicalBlockFile(scope: !4396, file: !935, discriminator: 2)
!4736 = !DILocation(line: 700, column: 13, scope: !4735)
!4737 = distinct !{!4737, !4738}
!4738 = !DILocation(line: 700, column: 13, scope: !4398)
!4739 = !DILocation(line: 704, column: 9, scope: !4398)
!4740 = !DILocation(line: 699, column: 29, scope: !4741)
!4741 = !DILexicalBlockFile(scope: !4399, file: !935, discriminator: 2)
!4742 = !DILocation(line: 699, column: 9, scope: !4741)
!4743 = distinct !{!4743, !4744}
!4744 = !DILocation(line: 699, column: 9, scope: !4385)
!4745 = !DILocation(line: 705, column: 5, scope: !4385)
!4746 = !DILocation(line: 667, column: 28, scope: !4747)
!4747 = !DILexicalBlockFile(scope: !4386, file: !935, discriminator: 2)
!4748 = !DILocation(line: 667, column: 5, scope: !4747)
!4749 = distinct !{!4749, !4750}
!4750 = !DILocation(line: 667, column: 5, scope: !4374)
!4751 = !DILocation(line: 708, column: 9, scope: !4374)
!4752 = !DILocation(line: 709, column: 12, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4374, file: !935, line: 709, column: 5)
!4754 = !DILocation(line: 709, column: 10, scope: !4753)
!4755 = !DILocation(line: 709, column: 17, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 1)
!4757 = distinct !DILexicalBlock(scope: !4753, file: !935, line: 709, column: 5)
!4758 = !DILocation(line: 709, column: 26, scope: !4756)
!4759 = !DILocation(line: 709, column: 24, scope: !4756)
!4760 = !DILocation(line: 709, column: 19, scope: !4756)
!4761 = !DILocation(line: 709, column: 5, scope: !4756)
!4762 = !DILocation(line: 710, column: 17, scope: !4757)
!4763 = !DILocation(line: 710, column: 35, scope: !4757)
!4764 = !DILocation(line: 710, column: 27, scope: !4757)
!4765 = !DILocation(line: 710, column: 39, scope: !4757)
!4766 = !DILocation(line: 710, column: 26, scope: !4757)
!4767 = !DILocation(line: 710, column: 55, scope: !4756)
!4768 = !DILocation(line: 710, column: 47, scope: !4756)
!4769 = !DILocation(line: 710, column: 26, scope: !4756)
!4770 = !DILocation(line: 710, column: 72, scope: !4771)
!4771 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 2)
!4772 = !DILocation(line: 710, column: 64, scope: !4771)
!4773 = !DILocation(line: 710, column: 62, scope: !4771)
!4774 = !DILocation(line: 710, column: 26, scope: !4771)
!4775 = !DILocation(line: 710, column: 26, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 3)
!4777 = !DILocation(line: 710, column: 22, scope: !4776)
!4778 = !DILocation(line: 710, column: 16, scope: !4776)
!4779 = !DILocation(line: 710, column: 82, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 4)
!4781 = !DILocation(line: 710, column: 16, scope: !4780)
!4782 = !DILocation(line: 710, column: 100, scope: !4783)
!4783 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 5)
!4784 = !DILocation(line: 710, column: 92, scope: !4783)
!4785 = !DILocation(line: 710, column: 104, scope: !4783)
!4786 = !DILocation(line: 710, column: 91, scope: !4783)
!4787 = !DILocation(line: 710, column: 120, scope: !4788)
!4788 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 6)
!4789 = !DILocation(line: 710, column: 112, scope: !4788)
!4790 = !DILocation(line: 710, column: 91, scope: !4788)
!4791 = !DILocation(line: 710, column: 137, scope: !4792)
!4792 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 7)
!4793 = !DILocation(line: 710, column: 129, scope: !4792)
!4794 = !DILocation(line: 710, column: 127, scope: !4792)
!4795 = !DILocation(line: 710, column: 91, scope: !4792)
!4796 = !DILocation(line: 710, column: 91, scope: !4797)
!4797 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 8)
!4798 = !DILocation(line: 710, column: 16, scope: !4797)
!4799 = !DILocation(line: 710, column: 16, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4757, file: !935, discriminator: 9)
!4801 = !DILocation(line: 710, column: 13, scope: !4800)
!4802 = !DILocation(line: 710, column: 9, scope: !4800)
!4803 = !DILocation(line: 709, column: 33, scope: !4771)
!4804 = !DILocation(line: 709, column: 5, scope: !4771)
!4805 = distinct !{!4805, !4806}
!4806 = !DILocation(line: 709, column: 5, scope: !4374)
!4807 = !DILocation(line: 712, column: 37, scope: !4374)
!4808 = !DILocation(line: 712, column: 12, scope: !4374)
!4809 = !DILocation(line: 712, column: 10, scope: !4374)
!4810 = !DILocation(line: 714, column: 12, scope: !4404)
!4811 = !DILocation(line: 714, column: 10, scope: !4404)
!4812 = !DILocation(line: 714, column: 17, scope: !4813)
!4813 = !DILexicalBlockFile(scope: !4403, file: !935, discriminator: 1)
!4814 = !DILocation(line: 714, column: 26, scope: !4813)
!4815 = !DILocation(line: 714, column: 24, scope: !4813)
!4816 = !DILocation(line: 714, column: 19, scope: !4813)
!4817 = !DILocation(line: 714, column: 5, scope: !4813)
!4818 = !DILocation(line: 715, column: 58, scope: !4403)
!4819 = !DILocation(line: 715, column: 50, scope: !4403)
!4820 = !DILocation(line: 715, column: 64, scope: !4403)
!4821 = !DILocation(line: 715, column: 61, scope: !4403)
!4822 = !DILocation(line: 715, column: 39, scope: !4403)
!4823 = !DILocation(line: 715, column: 70, scope: !4403)
!4824 = !DILocation(line: 715, column: 22, scope: !4403)
!4825 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4402)
!4826 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4402)
!4827 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4402)
!4828 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4402)
!4829 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4402)
!4830 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4402)
!4831 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4402)
!4832 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4402)
!4833 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4402)
!4834 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4402)
!4835 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4402)
!4836 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4402)
!4837 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4402)
!4838 = !DILocation(line: 716, column: 48, scope: !4403)
!4839 = !DILocation(line: 715, column: 17, scope: !4403)
!4840 = !DILocation(line: 715, column: 9, scope: !4403)
!4841 = !DILocation(line: 715, column: 20, scope: !4403)
!4842 = !DILocation(line: 714, column: 33, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4403, file: !935, discriminator: 2)
!4844 = !DILocation(line: 714, column: 5, scope: !4843)
!4845 = distinct !{!4845, !4846}
!4846 = !DILocation(line: 714, column: 5, scope: !4374)
!4847 = !DILocation(line: 718, column: 9, scope: !4374)
!4848 = !DILocation(line: 719, column: 12, scope: !4412)
!4849 = !DILocation(line: 719, column: 10, scope: !4412)
!4850 = !DILocation(line: 719, column: 17, scope: !4851)
!4851 = !DILexicalBlockFile(scope: !4411, file: !935, discriminator: 1)
!4852 = !DILocation(line: 719, column: 21, scope: !4851)
!4853 = !DILocation(line: 719, column: 19, scope: !4851)
!4854 = !DILocation(line: 719, column: 5, scope: !4851)
!4855 = !DILocation(line: 721, column: 14, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4410, file: !935, line: 721, column: 13)
!4857 = !DILocation(line: 721, column: 24, scope: !4856)
!4858 = !DILocation(line: 721, column: 27, scope: !4859)
!4859 = !DILexicalBlockFile(scope: !4856, file: !935, discriminator: 1)
!4860 = !DILocation(line: 721, column: 39, scope: !4859)
!4861 = !DILocation(line: 721, column: 37, scope: !4859)
!4862 = !DILocation(line: 721, column: 41, scope: !4859)
!4863 = !DILocation(line: 721, column: 45, scope: !4859)
!4864 = !DILocation(line: 721, column: 55, scope: !4859)
!4865 = !DILocation(line: 722, column: 13, scope: !4856)
!4866 = !DILocation(line: 722, column: 23, scope: !4856)
!4867 = !DILocation(line: 722, column: 26, scope: !4859)
!4868 = !DILocation(line: 722, column: 36, scope: !4859)
!4869 = !DILocation(line: 721, column: 13, scope: !4870)
!4870 = !DILexicalBlockFile(scope: !4410, file: !935, discriminator: 2)
!4871 = !DILocation(line: 723, column: 20, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4856, file: !935, line: 722, column: 47)
!4873 = !DILocation(line: 724, column: 22, scope: !4872)
!4874 = !DILocation(line: 725, column: 9, scope: !4872)
!4875 = !DILocation(line: 727, column: 16, scope: !4409)
!4876 = !DILocation(line: 727, column: 23, scope: !4409)
!4877 = !DILocation(line: 727, column: 14, scope: !4409)
!4878 = !DILocation(line: 727, column: 28, scope: !4879)
!4879 = !DILexicalBlockFile(scope: !4408, file: !935, discriminator: 1)
!4880 = !DILocation(line: 727, column: 32, scope: !4879)
!4881 = !DILocation(line: 727, column: 30, scope: !4879)
!4882 = !DILocation(line: 727, column: 9, scope: !4879)
!4883 = !DILocation(line: 728, column: 18, scope: !4407)
!4884 = !DILocation(line: 729, column: 20, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4407, file: !935, line: 729, column: 13)
!4886 = !DILocation(line: 729, column: 18, scope: !4885)
!4887 = !DILocation(line: 729, column: 25, scope: !4888)
!4888 = !DILexicalBlockFile(scope: !4889, file: !935, discriminator: 1)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !935, line: 729, column: 13)
!4890 = !DILocation(line: 729, column: 27, scope: !4888)
!4891 = !DILocation(line: 729, column: 13, scope: !4888)
!4892 = !DILocation(line: 730, column: 38, scope: !4889)
!4893 = !DILocation(line: 730, column: 36, scope: !4889)
!4894 = !DILocation(line: 730, column: 42, scope: !4889)
!4895 = !DILocation(line: 730, column: 40, scope: !4889)
!4896 = !DILocation(line: 730, column: 25, scope: !4889)
!4897 = !DILocation(line: 730, column: 54, scope: !4889)
!4898 = !DILocation(line: 730, column: 58, scope: !4889)
!4899 = !DILocation(line: 730, column: 56, scope: !4889)
!4900 = !DILocation(line: 730, column: 47, scope: !4889)
!4901 = !DILocation(line: 730, column: 45, scope: !4889)
!4902 = !DILocation(line: 730, column: 22, scope: !4889)
!4903 = !DILocation(line: 730, column: 17, scope: !4889)
!4904 = !DILocation(line: 729, column: 34, scope: !4905)
!4905 = !DILexicalBlockFile(scope: !4889, file: !935, discriminator: 2)
!4906 = !DILocation(line: 729, column: 13, scope: !4905)
!4907 = distinct !{!4907, !4908}
!4908 = !DILocation(line: 729, column: 13, scope: !4407)
!4909 = !DILocation(line: 731, column: 37, scope: !4407)
!4910 = !DILocation(line: 731, column: 20, scope: !4407)
!4911 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4406)
!4912 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4406)
!4913 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4406)
!4914 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4406)
!4915 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4406)
!4916 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4406)
!4917 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4406)
!4918 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4406)
!4919 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4406)
!4920 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4406)
!4921 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4406)
!4922 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4406)
!4923 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4406)
!4924 = !DILocation(line: 731, column: 18, scope: !4407)
!4925 = !DILocation(line: 733, column: 17, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4407, file: !935, line: 733, column: 17)
!4927 = !DILocation(line: 733, column: 24, scope: !4926)
!4928 = !DILocation(line: 733, column: 22, scope: !4926)
!4929 = !DILocation(line: 733, column: 17, scope: !4407)
!4930 = !DILocation(line: 734, column: 23, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4926, file: !935, line: 733, column: 29)
!4932 = !DILocation(line: 734, column: 21, scope: !4931)
!4933 = !DILocation(line: 735, column: 28, scope: !4931)
!4934 = !DILocation(line: 735, column: 26, scope: !4931)
!4935 = !DILocation(line: 736, column: 27, scope: !4931)
!4936 = !DILocation(line: 736, column: 25, scope: !4931)
!4937 = !DILocation(line: 737, column: 13, scope: !4931)
!4938 = !DILocation(line: 738, column: 9, scope: !4407)
!4939 = !DILocation(line: 727, column: 43, scope: !4940)
!4940 = !DILexicalBlockFile(scope: !4408, file: !935, discriminator: 2)
!4941 = !DILocation(line: 727, column: 49, scope: !4940)
!4942 = !DILocation(line: 727, column: 9, scope: !4940)
!4943 = distinct !{!4943, !4944}
!4944 = !DILocation(line: 727, column: 9, scope: !4410)
!4945 = !DILocation(line: 739, column: 5, scope: !4410)
!4946 = !DILocation(line: 719, column: 28, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !4411, file: !935, discriminator: 2)
!4948 = !DILocation(line: 719, column: 5, scope: !4947)
!4949 = distinct !{!4949, !4950}
!4950 = !DILocation(line: 719, column: 5, scope: !4374)
!4951 = !DILocation(line: 741, column: 10, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4374, file: !935, line: 741, column: 9)
!4953 = !DILocation(line: 741, column: 9, scope: !4374)
!4954 = !DILocation(line: 742, column: 22, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !935, line: 741, column: 21)
!4956 = !DILocation(line: 742, column: 30, scope: !4955)
!4957 = !DILocation(line: 742, column: 19, scope: !4955)
!4958 = !DILocation(line: 743, column: 17, scope: !4955)
!4959 = !DILocation(line: 744, column: 5, scope: !4955)
!4960 = !DILocation(line: 746, column: 32, scope: !4374)
!4961 = !DILocation(line: 746, column: 18, scope: !4374)
!4962 = !DILocation(line: 746, column: 24, scope: !4374)
!4963 = !DILocation(line: 746, column: 5, scope: !4374)
!4964 = !DILocation(line: 746, column: 8, scope: !4374)
!4965 = !DILocation(line: 746, column: 30, scope: !4374)
!4966 = !DILocation(line: 747, column: 36, scope: !4374)
!4967 = !DILocation(line: 747, column: 17, scope: !4374)
!4968 = !DILocation(line: 747, column: 5, scope: !4374)
!4969 = !DILocation(line: 747, column: 8, scope: !4374)
!4970 = !DILocation(line: 747, column: 24, scope: !4374)
!4971 = !DILocation(line: 747, column: 34, scope: !4374)
!4972 = !DILocation(line: 748, column: 37, scope: !4374)
!4973 = !DILocation(line: 748, column: 17, scope: !4374)
!4974 = !DILocation(line: 748, column: 5, scope: !4374)
!4975 = !DILocation(line: 748, column: 8, scope: !4374)
!4976 = !DILocation(line: 748, column: 24, scope: !4374)
!4977 = !DILocation(line: 748, column: 35, scope: !4374)
!4978 = !DILocation(line: 749, column: 1, scope: !4374)
!4979 = distinct !DISubprogram(name: "sub_acb_contrib", scope: !935, file: !935, line: 757, type: !4980, isLocal: true, isDefinition: true, scopeLine: 759, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !4039, !4039, !1945}
!4982 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !4983)
!4983 = distinct !DILocation(line: 767, column: 18, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !935, line: 762, column: 30)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !935, line: 762, column: 5)
!4986 = distinct !DILexicalBlock(scope: !4979, file: !935, line: 762, column: 5)
!4987 = !DILocalVariable(name: "residual", arg: 1, scope: !4979, file: !935, line: 757, type: !4039)
!4988 = !DILocation(line: 757, column: 44, scope: !4979)
!4989 = !DILocalVariable(name: "impulse_resp", arg: 2, scope: !4979, file: !935, line: 757, type: !4039)
!4990 = !DILocation(line: 757, column: 69, scope: !4979)
!4991 = !DILocalVariable(name: "buf", arg: 3, scope: !4979, file: !935, line: 758, type: !1945)
!4992 = !DILocation(line: 758, column: 38, scope: !4979)
!4993 = !DILocalVariable(name: "i", scope: !4979, file: !935, line: 760, type: !920)
!4994 = !DILocation(line: 760, column: 9, scope: !4979)
!4995 = !DILocalVariable(name: "j", scope: !4979, file: !935, line: 760, type: !920)
!4996 = !DILocation(line: 760, column: 12, scope: !4979)
!4997 = !DILocation(line: 762, column: 12, scope: !4986)
!4998 = !DILocation(line: 762, column: 10, scope: !4986)
!4999 = !DILocation(line: 762, column: 17, scope: !5000)
!5000 = !DILexicalBlockFile(scope: !4985, file: !935, discriminator: 1)
!5001 = !DILocation(line: 762, column: 19, scope: !5000)
!5002 = !DILocation(line: 762, column: 5, scope: !5000)
!5003 = !DILocalVariable(name: "temp", scope: !4984, file: !935, line: 763, type: !922)
!5004 = !DILocation(line: 763, column: 17, scope: !4984)
!5005 = !DILocation(line: 763, column: 28, scope: !4984)
!5006 = !DILocation(line: 763, column: 24, scope: !4984)
!5007 = !DILocation(line: 763, column: 31, scope: !4984)
!5008 = !DILocation(line: 764, column: 16, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4984, file: !935, line: 764, column: 9)
!5010 = !DILocation(line: 764, column: 14, scope: !5009)
!5011 = !DILocation(line: 764, column: 21, scope: !5012)
!5012 = !DILexicalBlockFile(scope: !5013, file: !935, discriminator: 1)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !935, line: 764, column: 9)
!5014 = !DILocation(line: 764, column: 26, scope: !5012)
!5015 = !DILocation(line: 764, column: 23, scope: !5012)
!5016 = !DILocation(line: 764, column: 9, scope: !5012)
!5017 = !DILocation(line: 765, column: 30, scope: !5013)
!5018 = !DILocation(line: 765, column: 21, scope: !5013)
!5019 = !DILocation(line: 765, column: 48, scope: !5013)
!5020 = !DILocation(line: 765, column: 52, scope: !5013)
!5021 = !DILocation(line: 765, column: 50, scope: !5013)
!5022 = !DILocation(line: 765, column: 35, scope: !5013)
!5023 = !DILocation(line: 765, column: 33, scope: !5013)
!5024 = !DILocation(line: 765, column: 18, scope: !5013)
!5025 = !DILocation(line: 765, column: 13, scope: !5013)
!5026 = !DILocation(line: 764, column: 30, scope: !5027)
!5027 = !DILexicalBlockFile(scope: !5013, file: !935, discriminator: 2)
!5028 = !DILocation(line: 764, column: 9, scope: !5027)
!5029 = distinct !{!5029, !5030}
!5030 = !DILocation(line: 764, column: 9, scope: !4984)
!5031 = !DILocation(line: 767, column: 36, scope: !4984)
!5032 = !DILocation(line: 767, column: 41, scope: !4984)
!5033 = !DILocation(line: 767, column: 47, scope: !4984)
!5034 = !DILocation(line: 767, column: 18, scope: !4984)
!5035 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !4983)
!5036 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !4983)
!5037 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !4983)
!5038 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !4983)
!5039 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !4983)
!5040 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !4983)
!5041 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !4983)
!5042 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !4983)
!5043 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !4983)
!5044 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !4983)
!5045 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !4983)
!5046 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !4983)
!5047 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !4983)
!5048 = !DILocation(line: 767, column: 60, scope: !4984)
!5049 = !DILocation(line: 767, column: 13, scope: !4984)
!5050 = !DILocation(line: 767, column: 9, scope: !4984)
!5051 = !DILocation(line: 767, column: 16, scope: !4984)
!5052 = !DILocation(line: 768, column: 5, scope: !4984)
!5053 = !DILocation(line: 762, column: 26, scope: !5054)
!5054 = !DILexicalBlockFile(scope: !4985, file: !935, discriminator: 2)
!5055 = !DILocation(line: 762, column: 5, scope: !5054)
!5056 = distinct !{!5056, !5057}
!5057 = !DILocation(line: 762, column: 5, scope: !4979)
!5058 = !DILocation(line: 769, column: 1, scope: !4979)
!5059 = distinct !DISubprogram(name: "fcb_search", scope: !935, file: !935, line: 967, type: !5060, isLocal: true, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !1833, !1945, !1945, !920}
!5062 = !DILocalVariable(name: "p", arg: 1, scope: !5059, file: !935, line: 967, type: !1833)
!5063 = !DILocation(line: 967, column: 47, scope: !5059)
!5064 = !DILocalVariable(name: "impulse_resp", arg: 2, scope: !5059, file: !935, line: 967, type: !1945)
!5065 = !DILocation(line: 967, column: 59, scope: !5059)
!5066 = !DILocalVariable(name: "buf", arg: 3, scope: !5059, file: !935, line: 968, type: !1945)
!5067 = !DILocation(line: 968, column: 33, scope: !5059)
!5068 = !DILocalVariable(name: "index", arg: 4, scope: !5059, file: !935, line: 968, type: !920)
!5069 = !DILocation(line: 968, column: 42, scope: !5059)
!5070 = !DILocalVariable(name: "optim", scope: !5059, file: !935, line: 970, type: !5071)
!5071 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCBParam", file: !910, line: 117, baseType: !5072)
!5072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCBParam", file: !910, line: 110, size: 512, align: 32, elements: !5073)
!5073 = !{!5074, !5075, !5076, !5077, !5078, !5081}
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "min_err", scope: !5072, file: !910, line: 111, baseType: !920, size: 32, align: 32)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "amp_index", scope: !5072, file: !910, line: 112, baseType: !920, size: 32, align: 32, offset: 32)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "grid_index", scope: !5072, file: !910, line: 113, baseType: !920, size: 32, align: 32, offset: 64)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "dirac_train", scope: !5072, file: !910, line: 114, baseType: !920, size: 32, align: 32, offset: 96)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "pulse_pos", scope: !5072, file: !910, line: 115, baseType: !5079, size: 192, align: 32, offset: 128)
!5079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 192, align: 32, elements: !5080)
!5080 = !{!1746}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "pulse_sign", scope: !5072, file: !910, line: 116, baseType: !5079, size: 192, align: 32, offset: 320)
!5082 = !DILocation(line: 970, column: 14, scope: !5059)
!5083 = !DILocalVariable(name: "pulse_cnt", scope: !5059, file: !935, line: 971, type: !920)
!5084 = !DILocation(line: 971, column: 9, scope: !5059)
!5085 = !DILocation(line: 971, column: 28, scope: !5059)
!5086 = !DILocation(line: 971, column: 21, scope: !5059)
!5087 = !DILocalVariable(name: "i", scope: !5059, file: !935, line: 972, type: !920)
!5088 = !DILocation(line: 972, column: 9, scope: !5059)
!5089 = !DILocation(line: 974, column: 11, scope: !5059)
!5090 = !DILocation(line: 974, column: 19, scope: !5059)
!5091 = !DILocation(line: 975, column: 27, scope: !5059)
!5092 = !DILocation(line: 975, column: 41, scope: !5059)
!5093 = !DILocation(line: 975, column: 46, scope: !5059)
!5094 = !DILocation(line: 975, column: 5, scope: !5059)
!5095 = !DILocation(line: 977, column: 22, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5059, file: !935, line: 977, column: 9)
!5097 = !DILocation(line: 977, column: 28, scope: !5096)
!5098 = !DILocation(line: 977, column: 9, scope: !5096)
!5099 = !DILocation(line: 977, column: 12, scope: !5096)
!5100 = !DILocation(line: 977, column: 34, scope: !5096)
!5101 = !DILocation(line: 977, column: 9, scope: !5059)
!5102 = !DILocation(line: 978, column: 31, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5096, file: !935, line: 977, column: 44)
!5104 = !DILocation(line: 978, column: 45, scope: !5103)
!5105 = !DILocation(line: 978, column: 50, scope: !5103)
!5106 = !DILocation(line: 979, column: 36, scope: !5103)
!5107 = !DILocation(line: 979, column: 42, scope: !5103)
!5108 = !DILocation(line: 979, column: 23, scope: !5103)
!5109 = !DILocation(line: 979, column: 26, scope: !5103)
!5110 = !DILocation(line: 978, column: 9, scope: !5103)
!5111 = !DILocation(line: 980, column: 5, scope: !5103)
!5112 = !DILocation(line: 983, column: 12, scope: !5059)
!5113 = !DILocation(line: 983, column: 5, scope: !5059)
!5114 = !DILocation(line: 984, column: 12, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5059, file: !935, line: 984, column: 5)
!5116 = !DILocation(line: 984, column: 10, scope: !5115)
!5117 = !DILocation(line: 984, column: 17, scope: !5118)
!5118 = !DILexicalBlockFile(scope: !5119, file: !935, discriminator: 1)
!5119 = distinct !DILexicalBlock(scope: !5115, file: !935, line: 984, column: 5)
!5120 = !DILocation(line: 984, column: 21, scope: !5118)
!5121 = !DILocation(line: 984, column: 19, scope: !5118)
!5122 = !DILocation(line: 984, column: 5, scope: !5118)
!5123 = !DILocation(line: 985, column: 52, scope: !5119)
!5124 = !DILocation(line: 985, column: 35, scope: !5119)
!5125 = !DILocation(line: 985, column: 41, scope: !5119)
!5126 = !DILocation(line: 985, column: 29, scope: !5119)
!5127 = !DILocation(line: 985, column: 13, scope: !5119)
!5128 = !DILocation(line: 985, column: 19, scope: !5119)
!5129 = !DILocation(line: 985, column: 9, scope: !5119)
!5130 = !DILocation(line: 985, column: 33, scope: !5119)
!5131 = !DILocation(line: 984, column: 33, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !5119, file: !935, discriminator: 2)
!5133 = !DILocation(line: 984, column: 5, scope: !5132)
!5134 = distinct !{!5134, !5135}
!5135 = !DILocation(line: 984, column: 5, scope: !5059)
!5136 = !DILocation(line: 987, column: 33, scope: !5059)
!5137 = !DILocation(line: 987, column: 21, scope: !5059)
!5138 = !DILocation(line: 987, column: 24, scope: !5059)
!5139 = !DILocation(line: 987, column: 49, scope: !5059)
!5140 = !DILocation(line: 987, column: 54, scope: !5059)
!5141 = !DILocation(line: 987, column: 5, scope: !5059)
!5142 = !DILocation(line: 989, column: 15, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5059, file: !935, line: 989, column: 9)
!5144 = !DILocation(line: 989, column: 9, scope: !5143)
!5145 = !DILocation(line: 989, column: 9, scope: !5059)
!5146 = !DILocation(line: 990, column: 35, scope: !5143)
!5147 = !DILocation(line: 990, column: 53, scope: !5143)
!5148 = !DILocation(line: 990, column: 59, scope: !5143)
!5149 = !DILocation(line: 990, column: 40, scope: !5143)
!5150 = !DILocation(line: 990, column: 43, scope: !5143)
!5151 = !DILocation(line: 990, column: 9, scope: !5143)
!5152 = !DILocation(line: 991, column: 1, scope: !5059)
!5153 = distinct !DISubprogram(name: "pack_bitstream", scope: !935, file: !935, line: 999, type: !5154, isLocal: true, isDefinition: true, scopeLine: 1000, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{!920, !1833, !1208}
!5156 = !DILocalVariable(name: "p", arg: 1, scope: !5153, file: !935, line: 999, type: !1833)
!5157 = !DILocation(line: 999, column: 50, scope: !5153)
!5158 = !DILocalVariable(name: "avpkt", arg: 2, scope: !5153, file: !935, line: 999, type: !1208)
!5159 = !DILocation(line: 999, column: 63, scope: !5153)
!5160 = !DILocalVariable(name: "pb", scope: !5153, file: !935, line: 1001, type: !5161)
!5161 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !5162, line: 40, baseType: !5163)
!5162 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !5162, line: 35, size: 320, align: 64, elements: !5164)
!5164 = !{!5165, !5166, !5167, !5168, !5169, !5170}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !5163, file: !5162, line: 36, baseType: !931, size: 32, align: 32)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !5163, file: !5162, line: 37, baseType: !920, size: 32, align: 32, offset: 32)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5163, file: !5162, line: 38, baseType: !1090, size: 64, align: 64, offset: 64)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !5163, file: !5162, line: 38, baseType: !1090, size: 64, align: 64, offset: 128)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !5163, file: !5162, line: 38, baseType: !1090, size: 64, align: 64, offset: 192)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !5163, file: !5162, line: 39, baseType: !920, size: 32, align: 32, offset: 256)
!5171 = !DILocation(line: 1001, column: 19, scope: !5153)
!5172 = !DILocalVariable(name: "info_bits", scope: !5153, file: !935, line: 1002, type: !920)
!5173 = !DILocation(line: 1002, column: 9, scope: !5153)
!5174 = !DILocalVariable(name: "i", scope: !5153, file: !935, line: 1003, type: !920)
!5175 = !DILocation(line: 1003, column: 9, scope: !5153)
!5176 = !DILocalVariable(name: "temp", scope: !5153, file: !935, line: 1003, type: !920)
!5177 = !DILocation(line: 1003, column: 12, scope: !5153)
!5178 = !DILocation(line: 1005, column: 24, scope: !5153)
!5179 = !DILocation(line: 1005, column: 31, scope: !5153)
!5180 = !DILocation(line: 1005, column: 37, scope: !5153)
!5181 = !DILocation(line: 1005, column: 44, scope: !5153)
!5182 = !DILocation(line: 1005, column: 5, scope: !5153)
!5183 = !DILocation(line: 1007, column: 22, scope: !5153)
!5184 = !DILocation(line: 1007, column: 5, scope: !5153)
!5185 = !DILocation(line: 1009, column: 22, scope: !5153)
!5186 = !DILocation(line: 1009, column: 25, scope: !5153)
!5187 = !DILocation(line: 1009, column: 5, scope: !5153)
!5188 = !DILocation(line: 1010, column: 22, scope: !5153)
!5189 = !DILocation(line: 1010, column: 25, scope: !5153)
!5190 = !DILocation(line: 1010, column: 5, scope: !5153)
!5191 = !DILocation(line: 1011, column: 22, scope: !5153)
!5192 = !DILocation(line: 1011, column: 25, scope: !5153)
!5193 = !DILocation(line: 1011, column: 5, scope: !5153)
!5194 = !DILocation(line: 1013, column: 22, scope: !5153)
!5195 = !DILocation(line: 1013, column: 25, scope: !5153)
!5196 = !DILocation(line: 1013, column: 38, scope: !5153)
!5197 = !DILocation(line: 1013, column: 5, scope: !5153)
!5198 = !DILocation(line: 1014, column: 22, scope: !5153)
!5199 = !DILocation(line: 1014, column: 25, scope: !5153)
!5200 = !DILocation(line: 1014, column: 37, scope: !5153)
!5201 = !DILocation(line: 1014, column: 5, scope: !5153)
!5202 = !DILocation(line: 1015, column: 22, scope: !5153)
!5203 = !DILocation(line: 1015, column: 25, scope: !5153)
!5204 = !DILocation(line: 1015, column: 38, scope: !5153)
!5205 = !DILocation(line: 1015, column: 5, scope: !5153)
!5206 = !DILocation(line: 1016, column: 22, scope: !5153)
!5207 = !DILocation(line: 1016, column: 25, scope: !5153)
!5208 = !DILocation(line: 1016, column: 37, scope: !5153)
!5209 = !DILocation(line: 1016, column: 5, scope: !5153)
!5210 = !DILocation(line: 1019, column: 12, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5153, file: !935, line: 1019, column: 5)
!5212 = !DILocation(line: 1019, column: 10, scope: !5211)
!5213 = !DILocation(line: 1019, column: 17, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5215, file: !935, discriminator: 1)
!5215 = distinct !DILexicalBlock(scope: !5211, file: !935, line: 1019, column: 5)
!5216 = !DILocation(line: 1019, column: 19, scope: !5214)
!5217 = !DILocation(line: 1019, column: 5, scope: !5214)
!5218 = !DILocation(line: 1020, column: 28, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5215, file: !935, line: 1019, column: 29)
!5220 = !DILocation(line: 1020, column: 16, scope: !5219)
!5221 = !DILocation(line: 1020, column: 19, scope: !5219)
!5222 = !DILocation(line: 1020, column: 31, scope: !5219)
!5223 = !DILocation(line: 1020, column: 42, scope: !5219)
!5224 = !DILocation(line: 1021, column: 28, scope: !5219)
!5225 = !DILocation(line: 1021, column: 16, scope: !5219)
!5226 = !DILocation(line: 1021, column: 19, scope: !5219)
!5227 = !DILocation(line: 1021, column: 31, scope: !5219)
!5228 = !DILocation(line: 1020, column: 47, scope: !5219)
!5229 = !DILocation(line: 1020, column: 14, scope: !5219)
!5230 = !DILocation(line: 1022, column: 13, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5219, file: !935, line: 1022, column: 13)
!5232 = !DILocation(line: 1022, column: 16, scope: !5231)
!5233 = !DILocation(line: 1022, column: 25, scope: !5231)
!5234 = !DILocation(line: 1022, column: 13, scope: !5219)
!5235 = !DILocation(line: 1023, column: 33, scope: !5231)
!5236 = !DILocation(line: 1023, column: 21, scope: !5231)
!5237 = !DILocation(line: 1023, column: 24, scope: !5231)
!5238 = !DILocation(line: 1023, column: 36, scope: !5231)
!5239 = !DILocation(line: 1023, column: 48, scope: !5231)
!5240 = !DILocation(line: 1023, column: 18, scope: !5231)
!5241 = !DILocation(line: 1023, column: 13, scope: !5231)
!5242 = !DILocation(line: 1024, column: 27, scope: !5219)
!5243 = !DILocation(line: 1024, column: 9, scope: !5219)
!5244 = !DILocation(line: 1025, column: 5, scope: !5219)
!5245 = !DILocation(line: 1019, column: 25, scope: !5246)
!5246 = !DILexicalBlockFile(scope: !5215, file: !935, discriminator: 2)
!5247 = !DILocation(line: 1019, column: 5, scope: !5246)
!5248 = distinct !{!5248, !5249}
!5249 = !DILocation(line: 1019, column: 5, scope: !5153)
!5250 = !DILocation(line: 1027, column: 22, scope: !5153)
!5251 = !DILocation(line: 1027, column: 25, scope: !5153)
!5252 = !DILocation(line: 1027, column: 37, scope: !5153)
!5253 = !DILocation(line: 1027, column: 5, scope: !5153)
!5254 = !DILocation(line: 1028, column: 22, scope: !5153)
!5255 = !DILocation(line: 1028, column: 25, scope: !5153)
!5256 = !DILocation(line: 1028, column: 37, scope: !5153)
!5257 = !DILocation(line: 1028, column: 5, scope: !5153)
!5258 = !DILocation(line: 1029, column: 22, scope: !5153)
!5259 = !DILocation(line: 1029, column: 25, scope: !5153)
!5260 = !DILocation(line: 1029, column: 37, scope: !5153)
!5261 = !DILocation(line: 1029, column: 5, scope: !5153)
!5262 = !DILocation(line: 1030, column: 22, scope: !5153)
!5263 = !DILocation(line: 1030, column: 25, scope: !5153)
!5264 = !DILocation(line: 1030, column: 37, scope: !5153)
!5265 = !DILocation(line: 1030, column: 5, scope: !5153)
!5266 = !DILocation(line: 1032, column: 9, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5153, file: !935, line: 1032, column: 9)
!5268 = !DILocation(line: 1032, column: 12, scope: !5267)
!5269 = !DILocation(line: 1032, column: 21, scope: !5267)
!5270 = !DILocation(line: 1032, column: 9, scope: !5153)
!5271 = !DILocation(line: 1033, column: 9, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5267, file: !935, line: 1032, column: 35)
!5273 = !DILocation(line: 1036, column: 17, scope: !5272)
!5274 = !DILocation(line: 1036, column: 20, scope: !5272)
!5275 = !DILocation(line: 1036, column: 32, scope: !5272)
!5276 = !DILocation(line: 1036, column: 42, scope: !5272)
!5277 = !DILocation(line: 1036, column: 49, scope: !5272)
!5278 = !DILocation(line: 1037, column: 17, scope: !5272)
!5279 = !DILocation(line: 1037, column: 20, scope: !5272)
!5280 = !DILocation(line: 1037, column: 32, scope: !5272)
!5281 = !DILocation(line: 1037, column: 42, scope: !5272)
!5282 = !DILocation(line: 1037, column: 49, scope: !5272)
!5283 = !DILocation(line: 1036, column: 55, scope: !5272)
!5284 = !DILocation(line: 1038, column: 17, scope: !5272)
!5285 = !DILocation(line: 1038, column: 20, scope: !5272)
!5286 = !DILocation(line: 1038, column: 32, scope: !5272)
!5287 = !DILocation(line: 1038, column: 42, scope: !5272)
!5288 = !DILocation(line: 1038, column: 49, scope: !5272)
!5289 = !DILocation(line: 1037, column: 54, scope: !5272)
!5290 = !DILocation(line: 1039, column: 17, scope: !5272)
!5291 = !DILocation(line: 1039, column: 20, scope: !5272)
!5292 = !DILocation(line: 1039, column: 32, scope: !5272)
!5293 = !DILocation(line: 1039, column: 42, scope: !5272)
!5294 = !DILocation(line: 1038, column: 53, scope: !5272)
!5295 = !DILocation(line: 1036, column: 14, scope: !5272)
!5296 = !DILocation(line: 1040, column: 27, scope: !5272)
!5297 = !DILocation(line: 1040, column: 9, scope: !5272)
!5298 = !DILocation(line: 1042, column: 27, scope: !5272)
!5299 = !DILocation(line: 1042, column: 30, scope: !5272)
!5300 = !DILocation(line: 1042, column: 42, scope: !5272)
!5301 = !DILocation(line: 1042, column: 52, scope: !5272)
!5302 = !DILocation(line: 1042, column: 9, scope: !5272)
!5303 = !DILocation(line: 1043, column: 27, scope: !5272)
!5304 = !DILocation(line: 1043, column: 30, scope: !5272)
!5305 = !DILocation(line: 1043, column: 42, scope: !5272)
!5306 = !DILocation(line: 1043, column: 52, scope: !5272)
!5307 = !DILocation(line: 1043, column: 9, scope: !5272)
!5308 = !DILocation(line: 1044, column: 27, scope: !5272)
!5309 = !DILocation(line: 1044, column: 30, scope: !5272)
!5310 = !DILocation(line: 1044, column: 42, scope: !5272)
!5311 = !DILocation(line: 1044, column: 52, scope: !5272)
!5312 = !DILocation(line: 1044, column: 9, scope: !5272)
!5313 = !DILocation(line: 1045, column: 27, scope: !5272)
!5314 = !DILocation(line: 1045, column: 30, scope: !5272)
!5315 = !DILocation(line: 1045, column: 42, scope: !5272)
!5316 = !DILocation(line: 1045, column: 52, scope: !5272)
!5317 = !DILocation(line: 1045, column: 9, scope: !5272)
!5318 = !DILocation(line: 1047, column: 26, scope: !5272)
!5319 = !DILocation(line: 1047, column: 29, scope: !5272)
!5320 = !DILocation(line: 1047, column: 41, scope: !5272)
!5321 = !DILocation(line: 1047, column: 9, scope: !5272)
!5322 = !DILocation(line: 1048, column: 26, scope: !5272)
!5323 = !DILocation(line: 1048, column: 29, scope: !5272)
!5324 = !DILocation(line: 1048, column: 41, scope: !5272)
!5325 = !DILocation(line: 1048, column: 9, scope: !5272)
!5326 = !DILocation(line: 1049, column: 26, scope: !5272)
!5327 = !DILocation(line: 1049, column: 29, scope: !5272)
!5328 = !DILocation(line: 1049, column: 41, scope: !5272)
!5329 = !DILocation(line: 1049, column: 9, scope: !5272)
!5330 = !DILocation(line: 1050, column: 26, scope: !5272)
!5331 = !DILocation(line: 1050, column: 29, scope: !5272)
!5332 = !DILocation(line: 1050, column: 41, scope: !5272)
!5333 = !DILocation(line: 1050, column: 9, scope: !5272)
!5334 = !DILocation(line: 1051, column: 5, scope: !5272)
!5335 = !DILocation(line: 1053, column: 5, scope: !5153)
!5336 = !DILocation(line: 1054, column: 23, scope: !5153)
!5337 = !DILocation(line: 1054, column: 12, scope: !5153)
!5338 = !DILocation(line: 1054, column: 5, scope: !5153)
!5339 = distinct !DISubprogram(name: "comp_autocorr", scope: !935, file: !935, line: 97, type: !2436, isLocal: true, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!5340 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5341)
!5341 = distinct !DILocation(line: 126, column: 27, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !935, line: 123, column: 35)
!5343 = distinct !DILexicalBlock(scope: !5344, file: !935, line: 123, column: 9)
!5344 = distinct !DILexicalBlock(scope: !5345, file: !935, line: 123, column: 9)
!5345 = distinct !DILexicalBlock(scope: !5346, file: !935, line: 122, column: 12)
!5346 = distinct !DILexicalBlock(scope: !5339, file: !935, line: 120, column: 9)
!5347 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5348)
!5348 = distinct !DILocation(line: 116, column: 19, scope: !5339)
!5349 = !DILocalVariable(name: "buf", arg: 1, scope: !5339, file: !935, line: 97, type: !1945)
!5350 = !DILocation(line: 97, column: 36, scope: !5339)
!5351 = !DILocalVariable(name: "autocorr", arg: 2, scope: !5339, file: !935, line: 97, type: !1945)
!5352 = !DILocation(line: 97, column: 50, scope: !5339)
!5353 = !DILocalVariable(name: "i", scope: !5339, file: !935, line: 99, type: !920)
!5354 = !DILocation(line: 99, column: 9, scope: !5339)
!5355 = !DILocalVariable(name: "scale", scope: !5339, file: !935, line: 99, type: !920)
!5356 = !DILocation(line: 99, column: 12, scope: !5339)
!5357 = !DILocalVariable(name: "temp", scope: !5339, file: !935, line: 99, type: !920)
!5358 = !DILocation(line: 99, column: 19, scope: !5339)
!5359 = !DILocalVariable(name: "vector", scope: !5339, file: !935, line: 100, type: !5360)
!5360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 2880, align: 16, elements: !1707)
!5361 = !DILocation(line: 100, column: 13, scope: !5339)
!5362 = !DILocation(line: 102, column: 28, scope: !5339)
!5363 = !DILocation(line: 102, column: 36, scope: !5339)
!5364 = !DILocation(line: 102, column: 5, scope: !5339)
!5365 = !DILocation(line: 105, column: 12, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5339, file: !935, line: 105, column: 5)
!5367 = !DILocation(line: 105, column: 10, scope: !5366)
!5368 = !DILocation(line: 105, column: 17, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !5370, file: !935, discriminator: 1)
!5370 = distinct !DILexicalBlock(scope: !5366, file: !935, line: 105, column: 5)
!5371 = !DILocation(line: 105, column: 19, scope: !5369)
!5372 = !DILocation(line: 105, column: 5, scope: !5369)
!5373 = !DILocation(line: 106, column: 29, scope: !5370)
!5374 = !DILocation(line: 106, column: 22, scope: !5370)
!5375 = !DILocation(line: 106, column: 49, scope: !5370)
!5376 = !DILocation(line: 106, column: 34, scope: !5370)
!5377 = !DILocation(line: 106, column: 32, scope: !5370)
!5378 = !DILocation(line: 106, column: 52, scope: !5370)
!5379 = !DILocation(line: 106, column: 65, scope: !5370)
!5380 = !DILocation(line: 106, column: 21, scope: !5370)
!5381 = !DILocation(line: 106, column: 16, scope: !5370)
!5382 = !DILocation(line: 106, column: 9, scope: !5370)
!5383 = !DILocation(line: 106, column: 19, scope: !5370)
!5384 = !DILocation(line: 105, column: 46, scope: !5385)
!5385 = !DILexicalBlockFile(scope: !5370, file: !935, discriminator: 2)
!5386 = !DILocation(line: 105, column: 5, scope: !5385)
!5387 = distinct !{!5387, !5388}
!5388 = !DILocation(line: 105, column: 5, scope: !5339)
!5389 = !DILocation(line: 109, column: 27, scope: !5339)
!5390 = !DILocation(line: 109, column: 35, scope: !5339)
!5391 = !DILocation(line: 109, column: 12, scope: !5339)
!5392 = !DILocation(line: 109, column: 10, scope: !5339)
!5393 = !DILocation(line: 112, column: 13, scope: !5339)
!5394 = !DILocation(line: 112, column: 18, scope: !5339)
!5395 = !DILocation(line: 112, column: 10, scope: !5339)
!5396 = !DILocation(line: 115, column: 38, scope: !5339)
!5397 = !DILocation(line: 115, column: 13, scope: !5339)
!5398 = !DILocation(line: 115, column: 11, scope: !5339)
!5399 = !DILocation(line: 116, column: 47, scope: !5339)
!5400 = !DILocation(line: 116, column: 55, scope: !5339)
!5401 = !DILocation(line: 116, column: 52, scope: !5339)
!5402 = !DILocation(line: 116, column: 36, scope: !5339)
!5403 = !DILocation(line: 116, column: 62, scope: !5339)
!5404 = !DILocation(line: 116, column: 19, scope: !5339)
!5405 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5348)
!5406 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5348)
!5407 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5348)
!5408 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5348)
!5409 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5348)
!5410 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5348)
!5411 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5348)
!5412 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5348)
!5413 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5348)
!5414 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5348)
!5415 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5348)
!5416 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5348)
!5417 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5348)
!5418 = !DILocation(line: 117, column: 45, scope: !5339)
!5419 = !DILocation(line: 116, column: 5, scope: !5339)
!5420 = !DILocation(line: 116, column: 17, scope: !5339)
!5421 = !DILocation(line: 120, column: 10, scope: !5346)
!5422 = !DILocation(line: 120, column: 9, scope: !5339)
!5423 = !DILocation(line: 121, column: 16, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5346, file: !935, line: 120, column: 23)
!5425 = !DILocation(line: 121, column: 25, scope: !5424)
!5426 = !DILocation(line: 121, column: 9, scope: !5424)
!5427 = !DILocation(line: 122, column: 5, scope: !5424)
!5428 = !DILocation(line: 123, column: 16, scope: !5344)
!5429 = !DILocation(line: 123, column: 14, scope: !5344)
!5430 = !DILocation(line: 123, column: 21, scope: !5431)
!5431 = !DILexicalBlockFile(scope: !5343, file: !935, discriminator: 1)
!5432 = !DILocation(line: 123, column: 23, scope: !5431)
!5433 = !DILocation(line: 123, column: 9, scope: !5431)
!5434 = !DILocation(line: 124, column: 35, scope: !5342)
!5435 = !DILocation(line: 124, column: 43, scope: !5342)
!5436 = !DILocation(line: 124, column: 52, scope: !5342)
!5437 = !DILocation(line: 124, column: 50, scope: !5342)
!5438 = !DILocation(line: 124, column: 80, scope: !5342)
!5439 = !DILocation(line: 124, column: 78, scope: !5342)
!5440 = !DILocation(line: 124, column: 20, scope: !5342)
!5441 = !DILocation(line: 124, column: 18, scope: !5342)
!5442 = !DILocation(line: 125, column: 25, scope: !5342)
!5443 = !DILocation(line: 125, column: 33, scope: !5342)
!5444 = !DILocation(line: 125, column: 30, scope: !5342)
!5445 = !DILocation(line: 125, column: 41, scope: !5342)
!5446 = !DILocation(line: 125, column: 67, scope: !5342)
!5447 = !DILocation(line: 125, column: 69, scope: !5342)
!5448 = !DILocation(line: 125, column: 51, scope: !5342)
!5449 = !DILocation(line: 125, column: 50, scope: !5342)
!5450 = !DILocation(line: 125, column: 48, scope: !5342)
!5451 = !DILocation(line: 125, column: 75, scope: !5342)
!5452 = !DILocation(line: 125, column: 86, scope: !5342)
!5453 = !DILocation(line: 125, column: 94, scope: !5342)
!5454 = !DILocation(line: 125, column: 91, scope: !5342)
!5455 = !DILocation(line: 125, column: 102, scope: !5342)
!5456 = !DILocation(line: 125, column: 131, scope: !5342)
!5457 = !DILocation(line: 125, column: 133, scope: !5342)
!5458 = !DILocation(line: 125, column: 115, scope: !5342)
!5459 = !DILocation(line: 125, column: 114, scope: !5342)
!5460 = !DILocation(line: 125, column: 112, scope: !5342)
!5461 = !DILocation(line: 125, column: 139, scope: !5342)
!5462 = !DILocation(line: 125, column: 80, scope: !5342)
!5463 = !DILocation(line: 125, column: 18, scope: !5342)
!5464 = !DILocation(line: 126, column: 54, scope: !5342)
!5465 = !DILocation(line: 126, column: 44, scope: !5342)
!5466 = !DILocation(line: 126, column: 59, scope: !5342)
!5467 = !DILocation(line: 126, column: 27, scope: !5342)
!5468 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5341)
!5469 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5341)
!5470 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5341)
!5471 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5341)
!5472 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5341)
!5473 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5341)
!5474 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5341)
!5475 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5341)
!5476 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5341)
!5477 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5341)
!5478 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5341)
!5479 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5341)
!5480 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5341)
!5481 = !DILocation(line: 126, column: 72, scope: !5342)
!5482 = !DILocation(line: 126, column: 22, scope: !5342)
!5483 = !DILocation(line: 126, column: 13, scope: !5342)
!5484 = !DILocation(line: 126, column: 25, scope: !5342)
!5485 = !DILocation(line: 127, column: 9, scope: !5342)
!5486 = !DILocation(line: 123, column: 31, scope: !5487)
!5487 = !DILexicalBlockFile(scope: !5343, file: !935, discriminator: 2)
!5488 = !DILocation(line: 123, column: 9, scope: !5487)
!5489 = distinct !{!5489, !5490}
!5490 = !DILocation(line: 123, column: 9, scope: !5345)
!5491 = !DILocation(line: 129, column: 1, scope: !5339)
!5492 = distinct !DISubprogram(name: "levinson_durbin", scope: !935, file: !935, line: 139, type: !5493, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!5493 = !DISubroutineType(types: !5494)
!5494 = !{null, !1945, !1945, !1701}
!5495 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5496)
!5496 = distinct !DILocation(line: 164, column: 17, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !935, line: 147, column: 30)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !935, line: 147, column: 5)
!5499 = distinct !DILexicalBlock(scope: !5492, file: !935, line: 147, column: 5)
!5500 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5501)
!5501 = distinct !DILocation(line: 170, column: 22, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !935, line: 168, column: 33)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !935, line: 168, column: 9)
!5504 = distinct !DILexicalBlock(scope: !5497, file: !935, line: 168, column: 9)
!5505 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5506)
!5506 = distinct !DILocation(line: 159, column: 18, scope: !5497)
!5507 = !DILocalVariable(name: "lpc", arg: 1, scope: !5492, file: !935, line: 139, type: !1945)
!5508 = !DILocation(line: 139, column: 38, scope: !5492)
!5509 = !DILocalVariable(name: "autocorr", arg: 2, scope: !5492, file: !935, line: 139, type: !1945)
!5510 = !DILocation(line: 139, column: 52, scope: !5492)
!5511 = !DILocalVariable(name: "error", arg: 3, scope: !5492, file: !935, line: 139, type: !1701)
!5512 = !DILocation(line: 139, column: 70, scope: !5492)
!5513 = !DILocalVariable(name: "vector", scope: !5492, file: !935, line: 141, type: !1793)
!5514 = !DILocation(line: 141, column: 13, scope: !5492)
!5515 = !DILocalVariable(name: "partial_corr", scope: !5492, file: !935, line: 142, type: !1701)
!5516 = !DILocation(line: 142, column: 13, scope: !5492)
!5517 = !DILocalVariable(name: "i", scope: !5492, file: !935, line: 143, type: !920)
!5518 = !DILocation(line: 143, column: 9, scope: !5492)
!5519 = !DILocalVariable(name: "j", scope: !5492, file: !935, line: 143, type: !920)
!5520 = !DILocation(line: 143, column: 12, scope: !5492)
!5521 = !DILocalVariable(name: "temp", scope: !5492, file: !935, line: 143, type: !920)
!5522 = !DILocation(line: 143, column: 15, scope: !5492)
!5523 = !DILocation(line: 145, column: 12, scope: !5492)
!5524 = !DILocation(line: 145, column: 5, scope: !5492)
!5525 = !DILocation(line: 147, column: 12, scope: !5499)
!5526 = !DILocation(line: 147, column: 10, scope: !5499)
!5527 = !DILocation(line: 147, column: 17, scope: !5528)
!5528 = !DILexicalBlockFile(scope: !5498, file: !935, discriminator: 1)
!5529 = !DILocation(line: 147, column: 19, scope: !5528)
!5530 = !DILocation(line: 147, column: 5, scope: !5528)
!5531 = !DILocation(line: 149, column: 14, scope: !5497)
!5532 = !DILocation(line: 150, column: 16, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5497, file: !935, line: 150, column: 9)
!5534 = !DILocation(line: 150, column: 14, scope: !5533)
!5535 = !DILocation(line: 150, column: 21, scope: !5536)
!5536 = !DILexicalBlockFile(scope: !5537, file: !935, discriminator: 1)
!5537 = distinct !DILexicalBlock(scope: !5533, file: !935, line: 150, column: 9)
!5538 = !DILocation(line: 150, column: 25, scope: !5536)
!5539 = !DILocation(line: 150, column: 23, scope: !5536)
!5540 = !DILocation(line: 150, column: 9, scope: !5536)
!5541 = !DILocation(line: 151, column: 25, scope: !5537)
!5542 = !DILocation(line: 151, column: 21, scope: !5537)
!5543 = !DILocation(line: 151, column: 39, scope: !5537)
!5544 = !DILocation(line: 151, column: 43, scope: !5537)
!5545 = !DILocation(line: 151, column: 41, scope: !5537)
!5546 = !DILocation(line: 151, column: 45, scope: !5537)
!5547 = !DILocation(line: 151, column: 30, scope: !5537)
!5548 = !DILocation(line: 151, column: 28, scope: !5537)
!5549 = !DILocation(line: 151, column: 18, scope: !5537)
!5550 = !DILocation(line: 151, column: 13, scope: !5537)
!5551 = !DILocation(line: 150, column: 29, scope: !5552)
!5552 = !DILexicalBlockFile(scope: !5537, file: !935, discriminator: 2)
!5553 = !DILocation(line: 150, column: 9, scope: !5552)
!5554 = distinct !{!5554, !5555}
!5555 = !DILocation(line: 150, column: 9, scope: !5497)
!5556 = !DILocation(line: 152, column: 27, scope: !5497)
!5557 = !DILocation(line: 152, column: 18, scope: !5497)
!5558 = !DILocation(line: 152, column: 30, scope: !5497)
!5559 = !DILocation(line: 152, column: 39, scope: !5497)
!5560 = !DILocation(line: 152, column: 37, scope: !5497)
!5561 = !DILocation(line: 152, column: 45, scope: !5497)
!5562 = !DILocation(line: 152, column: 14, scope: !5497)
!5563 = !DILocation(line: 154, column: 15, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5497, file: !935, line: 154, column: 13)
!5565 = !DILocation(line: 154, column: 21, scope: !5564)
!5566 = !DILocation(line: 154, column: 14, scope: !5564)
!5567 = !DILocation(line: 154, column: 29, scope: !5568)
!5568 = !DILexicalBlockFile(scope: !5564, file: !935, discriminator: 1)
!5569 = !DILocation(line: 154, column: 14, scope: !5568)
!5570 = !DILocation(line: 154, column: 40, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5564, file: !935, discriminator: 2)
!5572 = !DILocation(line: 154, column: 38, scope: !5571)
!5573 = !DILocation(line: 154, column: 14, scope: !5571)
!5574 = !DILocation(line: 154, column: 14, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !5564, file: !935, discriminator: 3)
!5576 = !DILocation(line: 154, column: 52, scope: !5575)
!5577 = !DILocation(line: 154, column: 58, scope: !5575)
!5578 = !DILocation(line: 154, column: 48, scope: !5575)
!5579 = !DILocation(line: 154, column: 13, scope: !5575)
!5580 = !DILocation(line: 155, column: 13, scope: !5564)
!5581 = !DILocation(line: 157, column: 24, scope: !5497)
!5582 = !DILocation(line: 157, column: 32, scope: !5497)
!5583 = !DILocation(line: 157, column: 38, scope: !5497)
!5584 = !DILocation(line: 157, column: 29, scope: !5497)
!5585 = !DILocation(line: 157, column: 22, scope: !5497)
!5586 = !DILocation(line: 159, column: 46, scope: !5497)
!5587 = !DILocation(line: 159, column: 59, scope: !5497)
!5588 = !DILocation(line: 159, column: 35, scope: !5497)
!5589 = !DILocation(line: 159, column: 66, scope: !5497)
!5590 = !DILocation(line: 159, column: 18, scope: !5497)
!5591 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5506)
!5592 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5506)
!5593 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5506)
!5594 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5506)
!5595 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5506)
!5596 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5506)
!5597 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5506)
!5598 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5506)
!5599 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5506)
!5600 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5506)
!5601 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5506)
!5602 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5506)
!5603 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5506)
!5604 = !DILocation(line: 160, column: 44, scope: !5497)
!5605 = !DILocation(line: 159, column: 13, scope: !5497)
!5606 = !DILocation(line: 159, column: 9, scope: !5497)
!5607 = !DILocation(line: 159, column: 16, scope: !5497)
!5608 = !DILocation(line: 163, column: 20, scope: !5497)
!5609 = !DILocation(line: 163, column: 26, scope: !5497)
!5610 = !DILocation(line: 163, column: 36, scope: !5497)
!5611 = !DILocation(line: 163, column: 35, scope: !5497)
!5612 = !DILocation(line: 163, column: 33, scope: !5497)
!5613 = !DILocation(line: 163, column: 50, scope: !5497)
!5614 = !DILocation(line: 163, column: 60, scope: !5497)
!5615 = !DILocation(line: 163, column: 66, scope: !5497)
!5616 = !DILocation(line: 163, column: 79, scope: !5497)
!5617 = !DILocation(line: 163, column: 78, scope: !5497)
!5618 = !DILocation(line: 163, column: 76, scope: !5497)
!5619 = !DILocation(line: 163, column: 93, scope: !5497)
!5620 = !DILocation(line: 163, column: 55, scope: !5497)
!5621 = !DILocation(line: 163, column: 14, scope: !5497)
!5622 = !DILocation(line: 164, column: 45, scope: !5497)
!5623 = !DILocation(line: 164, column: 51, scope: !5497)
!5624 = !DILocation(line: 164, column: 34, scope: !5497)
!5625 = !DILocation(line: 164, column: 60, scope: !5497)
!5626 = !DILocation(line: 164, column: 58, scope: !5497)
!5627 = !DILocation(line: 164, column: 65, scope: !5497)
!5628 = !DILocation(line: 164, column: 17, scope: !5497)
!5629 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5496)
!5630 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5496)
!5631 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5496)
!5632 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5496)
!5633 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5496)
!5634 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5496)
!5635 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5496)
!5636 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5496)
!5637 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5496)
!5638 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5496)
!5639 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5496)
!5640 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5496)
!5641 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5496)
!5642 = !DILocation(line: 165, column: 43, scope: !5497)
!5643 = !DILocation(line: 164, column: 15, scope: !5497)
!5644 = !DILocation(line: 167, column: 9, scope: !5497)
!5645 = !DILocation(line: 167, column: 24, scope: !5497)
!5646 = !DILocation(line: 167, column: 29, scope: !5497)
!5647 = !DILocation(line: 167, column: 31, scope: !5497)
!5648 = !DILocation(line: 168, column: 16, scope: !5504)
!5649 = !DILocation(line: 168, column: 14, scope: !5504)
!5650 = !DILocation(line: 168, column: 21, scope: !5651)
!5651 = !DILexicalBlockFile(scope: !5503, file: !935, discriminator: 1)
!5652 = !DILocation(line: 168, column: 25, scope: !5651)
!5653 = !DILocation(line: 168, column: 23, scope: !5651)
!5654 = !DILocation(line: 168, column: 9, scope: !5651)
!5655 = !DILocation(line: 169, column: 20, scope: !5502)
!5656 = !DILocation(line: 169, column: 42, scope: !5502)
!5657 = !DILocation(line: 169, column: 46, scope: !5502)
!5658 = !DILocation(line: 169, column: 44, scope: !5502)
!5659 = !DILocation(line: 169, column: 48, scope: !5502)
!5660 = !DILocation(line: 169, column: 35, scope: !5502)
!5661 = !DILocation(line: 169, column: 33, scope: !5502)
!5662 = !DILocation(line: 169, column: 53, scope: !5502)
!5663 = !DILocation(line: 169, column: 18, scope: !5502)
!5664 = !DILocation(line: 170, column: 54, scope: !5502)
!5665 = !DILocation(line: 170, column: 50, scope: !5502)
!5666 = !DILocation(line: 170, column: 57, scope: !5502)
!5667 = !DILocation(line: 170, column: 39, scope: !5502)
!5668 = !DILocation(line: 170, column: 66, scope: !5502)
!5669 = !DILocation(line: 170, column: 64, scope: !5502)
!5670 = !DILocation(line: 170, column: 71, scope: !5502)
!5671 = !DILocation(line: 170, column: 22, scope: !5502)
!5672 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5501)
!5673 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5501)
!5674 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5501)
!5675 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5501)
!5676 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5501)
!5677 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5501)
!5678 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5501)
!5679 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5501)
!5680 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5501)
!5681 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5501)
!5682 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5501)
!5683 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5501)
!5684 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5501)
!5685 = !DILocation(line: 171, column: 48, scope: !5502)
!5686 = !DILocation(line: 170, column: 17, scope: !5502)
!5687 = !DILocation(line: 170, column: 13, scope: !5502)
!5688 = !DILocation(line: 170, column: 20, scope: !5502)
!5689 = !DILocation(line: 172, column: 9, scope: !5502)
!5690 = !DILocation(line: 168, column: 29, scope: !5691)
!5691 = !DILexicalBlockFile(scope: !5503, file: !935, discriminator: 2)
!5692 = !DILocation(line: 168, column: 9, scope: !5691)
!5693 = distinct !{!5693, !5694}
!5694 = !DILocation(line: 168, column: 9, scope: !5497)
!5695 = !DILocation(line: 173, column: 5, scope: !5497)
!5696 = !DILocation(line: 147, column: 26, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !5498, file: !935, discriminator: 2)
!5698 = !DILocation(line: 147, column: 5, scope: !5697)
!5699 = distinct !{!5699, !5700}
!5700 = !DILocation(line: 147, column: 5, scope: !5492)
!5701 = !DILocation(line: 174, column: 1, scope: !5492)
!5702 = distinct !DISubprogram(name: "iir_filter", scope: !935, file: !935, line: 367, type: !5703, isLocal: true, isDefinition: true, scopeLine: 369, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{null, !1945, !1945, !1945, !1945}
!5705 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5706)
!5706 = distinct !DILocation(line: 379, column: 19, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !935, line: 372, column: 30)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !935, line: 372, column: 5)
!5709 = distinct !DILexicalBlock(scope: !5702, file: !935, line: 372, column: 5)
!5710 = !DILocalVariable(name: "fir_coef", arg: 1, scope: !5702, file: !935, line: 367, type: !1945)
!5711 = !DILocation(line: 367, column: 33, scope: !5702)
!5712 = !DILocalVariable(name: "iir_coef", arg: 2, scope: !5702, file: !935, line: 367, type: !1945)
!5713 = !DILocation(line: 367, column: 52, scope: !5702)
!5714 = !DILocalVariable(name: "src", arg: 3, scope: !5702, file: !935, line: 368, type: !1945)
!5715 = !DILocation(line: 368, column: 33, scope: !5702)
!5716 = !DILocalVariable(name: "dest", arg: 4, scope: !5702, file: !935, line: 368, type: !1945)
!5717 = !DILocation(line: 368, column: 47, scope: !5702)
!5718 = !DILocalVariable(name: "m", scope: !5702, file: !935, line: 370, type: !920)
!5719 = !DILocation(line: 370, column: 9, scope: !5702)
!5720 = !DILocalVariable(name: "n", scope: !5702, file: !935, line: 370, type: !920)
!5721 = !DILocation(line: 370, column: 12, scope: !5702)
!5722 = !DILocation(line: 372, column: 12, scope: !5709)
!5723 = !DILocation(line: 372, column: 10, scope: !5709)
!5724 = !DILocation(line: 372, column: 17, scope: !5725)
!5725 = !DILexicalBlockFile(scope: !5708, file: !935, discriminator: 1)
!5726 = !DILocation(line: 372, column: 19, scope: !5725)
!5727 = !DILocation(line: 372, column: 5, scope: !5725)
!5728 = !DILocalVariable(name: "filter", scope: !5707, file: !935, line: 373, type: !922)
!5729 = !DILocation(line: 373, column: 17, scope: !5707)
!5730 = !DILocation(line: 374, column: 16, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5707, file: !935, line: 374, column: 9)
!5732 = !DILocation(line: 374, column: 14, scope: !5731)
!5733 = !DILocation(line: 374, column: 21, scope: !5734)
!5734 = !DILexicalBlockFile(scope: !5735, file: !935, discriminator: 1)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !935, line: 374, column: 9)
!5736 = !DILocation(line: 374, column: 23, scope: !5734)
!5737 = !DILocation(line: 374, column: 9, scope: !5734)
!5738 = !DILocation(line: 375, column: 32, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5735, file: !935, line: 374, column: 35)
!5740 = !DILocation(line: 375, column: 34, scope: !5739)
!5741 = !DILocation(line: 375, column: 23, scope: !5739)
!5742 = !DILocation(line: 375, column: 45, scope: !5739)
!5743 = !DILocation(line: 375, column: 49, scope: !5739)
!5744 = !DILocation(line: 375, column: 47, scope: !5739)
!5745 = !DILocation(line: 375, column: 41, scope: !5739)
!5746 = !DILocation(line: 375, column: 39, scope: !5739)
!5747 = !DILocation(line: 376, column: 32, scope: !5739)
!5748 = !DILocation(line: 376, column: 34, scope: !5739)
!5749 = !DILocation(line: 376, column: 23, scope: !5739)
!5750 = !DILocation(line: 376, column: 46, scope: !5739)
!5751 = !DILocation(line: 376, column: 50, scope: !5739)
!5752 = !DILocation(line: 376, column: 48, scope: !5739)
!5753 = !DILocation(line: 376, column: 41, scope: !5739)
!5754 = !DILocation(line: 376, column: 39, scope: !5739)
!5755 = !DILocation(line: 375, column: 52, scope: !5739)
!5756 = !DILocation(line: 375, column: 20, scope: !5739)
!5757 = !DILocation(line: 377, column: 9, scope: !5739)
!5758 = !DILocation(line: 374, column: 31, scope: !5759)
!5759 = !DILexicalBlockFile(scope: !5735, file: !935, discriminator: 2)
!5760 = !DILocation(line: 374, column: 9, scope: !5759)
!5761 = distinct !{!5761, !5762}
!5762 = !DILocation(line: 374, column: 9, scope: !5707)
!5763 = !DILocation(line: 379, column: 41, scope: !5707)
!5764 = !DILocation(line: 379, column: 37, scope: !5707)
!5765 = !DILocation(line: 379, column: 44, scope: !5707)
!5766 = !DILocation(line: 379, column: 36, scope: !5707)
!5767 = !DILocation(line: 379, column: 54, scope: !5707)
!5768 = !DILocation(line: 379, column: 61, scope: !5707)
!5769 = !DILocation(line: 379, column: 51, scope: !5707)
!5770 = !DILocation(line: 379, column: 67, scope: !5707)
!5771 = !DILocation(line: 379, column: 19, scope: !5707)
!5772 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5706)
!5773 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5706)
!5774 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5706)
!5775 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5706)
!5776 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5706)
!5777 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5706)
!5778 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5706)
!5779 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5706)
!5780 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5706)
!5781 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5706)
!5782 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5706)
!5783 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5706)
!5784 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5706)
!5785 = !DILocation(line: 380, column: 45, scope: !5707)
!5786 = !DILocation(line: 379, column: 14, scope: !5707)
!5787 = !DILocation(line: 379, column: 9, scope: !5707)
!5788 = !DILocation(line: 379, column: 17, scope: !5707)
!5789 = !DILocation(line: 381, column: 5, scope: !5707)
!5790 = !DILocation(line: 372, column: 26, scope: !5791)
!5791 = !DILexicalBlockFile(scope: !5708, file: !935, discriminator: 2)
!5792 = !DILocation(line: 372, column: 5, scope: !5791)
!5793 = distinct !{!5793, !5794}
!5794 = !DILocation(line: 372, column: 5, scope: !5702)
!5795 = !DILocation(line: 382, column: 1, scope: !5702)
!5796 = distinct !DISubprogram(name: "get_fcb_param", scope: !935, file: !935, line: 777, type: !5797, isLocal: true, isDefinition: true, scopeLine: 779, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{null, !5799, !1945, !1945, !920, !920}
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64, align: 64)
!5800 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5801)
!5801 = distinct !DILocation(line: 811, column: 27, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !935, line: 808, column: 30)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !935, line: 808, column: 5)
!5804 = distinct !DILexicalBlock(scope: !5796, file: !935, line: 808, column: 5)
!5805 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5806)
!5806 = distinct !DILocation(line: 821, column: 23, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !935, line: 818, column: 13)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !935, line: 816, column: 30)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !935, line: 816, column: 5)
!5810 = distinct !DILexicalBlock(scope: !5796, file: !935, line: 816, column: 5)
!5811 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5812)
!5812 = distinct !DILocation(line: 841, column: 20, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5814, file: !935, line: 840, column: 46)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !935, line: 840, column: 9)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !935, line: 840, column: 9)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !935, line: 825, column: 29)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !935, line: 825, column: 5)
!5818 = distinct !DILexicalBlock(scope: !5796, file: !935, line: 825, column: 5)
!5819 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5820)
!5820 = distinct !DILocation(line: 869, column: 28, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5822, file: !935, line: 865, column: 45)
!5822 = distinct !DILexicalBlock(scope: !5823, file: !935, line: 865, column: 17)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !935, line: 865, column: 17)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !935, line: 863, column: 45)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !935, line: 863, column: 13)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !935, line: 863, column: 13)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !935, line: 852, column: 33)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !935, line: 852, column: 9)
!5829 = distinct !DILexicalBlock(scope: !5816, file: !935, line: 852, column: 9)
!5830 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5831)
!5831 = distinct !DILocation(line: 893, column: 32, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5833, file: !935, line: 892, column: 42)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !935, line: 892, column: 17)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !935, line: 892, column: 17)
!5835 = distinct !DILexicalBlock(scope: !5836, file: !935, line: 890, column: 43)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !935, line: 890, column: 13)
!5837 = distinct !DILexicalBlock(scope: !5827, file: !935, line: 890, column: 13)
!5838 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5839)
!5839 = distinct !DILocation(line: 895, column: 28, scope: !5832)
!5840 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5841)
!5841 = distinct !DILocation(line: 904, column: 24, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !935, line: 902, column: 38)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !935, line: 902, column: 13)
!5844 = distinct !DILexicalBlock(scope: !5827, file: !935, line: 902, column: 13)
!5845 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5846)
!5846 = distinct !DILocation(line: 905, column: 23, scope: !5842)
!5847 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5848)
!5848 = distinct !DILocation(line: 906, column: 24, scope: !5842)
!5849 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5850)
!5850 = distinct !DILocation(line: 907, column: 23, scope: !5842)
!5851 = !DILocation(line: 203, column: 102, scope: !2356, inlinedAt: !5852)
!5852 = distinct !DILocation(line: 806, column: 23, scope: !5796)
!5853 = !DILocalVariable(name: "optim", arg: 1, scope: !5796, file: !935, line: 777, type: !5799)
!5854 = !DILocation(line: 777, column: 37, scope: !5796)
!5855 = !DILocalVariable(name: "impulse_resp", arg: 2, scope: !5796, file: !935, line: 777, type: !1945)
!5856 = !DILocation(line: 777, column: 53, scope: !5796)
!5857 = !DILocalVariable(name: "buf", arg: 3, scope: !5796, file: !935, line: 778, type: !1945)
!5858 = !DILocation(line: 778, column: 36, scope: !5796)
!5859 = !DILocalVariable(name: "pulse_cnt", arg: 4, scope: !5796, file: !935, line: 778, type: !920)
!5860 = !DILocation(line: 778, column: 45, scope: !5796)
!5861 = !DILocalVariable(name: "pitch_lag", arg: 5, scope: !5796, file: !935, line: 778, type: !920)
!5862 = !DILocation(line: 778, column: 60, scope: !5796)
!5863 = !DILocalVariable(name: "param", scope: !5796, file: !935, line: 780, type: !5071)
!5864 = !DILocation(line: 780, column: 14, scope: !5796)
!5865 = !DILocalVariable(name: "impulse_r", scope: !5796, file: !935, line: 781, type: !2136)
!5866 = !DILocation(line: 781, column: 13, scope: !5796)
!5867 = !DILocalVariable(name: "temp_corr", scope: !5796, file: !935, line: 782, type: !2136)
!5868 = !DILocation(line: 782, column: 13, scope: !5796)
!5869 = !DILocalVariable(name: "impulse_corr", scope: !5796, file: !935, line: 783, type: !2136)
!5870 = !DILocation(line: 783, column: 13, scope: !5796)
!5871 = !DILocalVariable(name: "ccr1", scope: !5796, file: !935, line: 785, type: !5872)
!5872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 1920, align: 32, elements: !2137)
!5873 = !DILocation(line: 785, column: 9, scope: !5796)
!5874 = !DILocalVariable(name: "ccr2", scope: !5796, file: !935, line: 786, type: !5872)
!5875 = !DILocation(line: 786, column: 9, scope: !5796)
!5876 = !DILocalVariable(name: "amp", scope: !5796, file: !935, line: 787, type: !920)
!5877 = !DILocation(line: 787, column: 9, scope: !5796)
!5878 = !DILocalVariable(name: "err", scope: !5796, file: !935, line: 787, type: !920)
!5879 = !DILocation(line: 787, column: 14, scope: !5796)
!5880 = !DILocalVariable(name: "max", scope: !5796, file: !935, line: 787, type: !920)
!5881 = !DILocation(line: 787, column: 19, scope: !5796)
!5882 = !DILocalVariable(name: "max_amp_index", scope: !5796, file: !935, line: 787, type: !920)
!5883 = !DILocation(line: 787, column: 24, scope: !5796)
!5884 = !DILocalVariable(name: "min", scope: !5796, file: !935, line: 787, type: !920)
!5885 = !DILocation(line: 787, column: 39, scope: !5796)
!5886 = !DILocalVariable(name: "scale", scope: !5796, file: !935, line: 787, type: !920)
!5887 = !DILocation(line: 787, column: 44, scope: !5796)
!5888 = !DILocalVariable(name: "i", scope: !5796, file: !935, line: 787, type: !920)
!5889 = !DILocation(line: 787, column: 51, scope: !5796)
!5890 = !DILocalVariable(name: "j", scope: !5796, file: !935, line: 787, type: !920)
!5891 = !DILocation(line: 787, column: 54, scope: !5796)
!5892 = !DILocalVariable(name: "k", scope: !5796, file: !935, line: 787, type: !920)
!5893 = !DILocation(line: 787, column: 57, scope: !5796)
!5894 = !DILocalVariable(name: "l", scope: !5796, file: !935, line: 787, type: !920)
!5895 = !DILocation(line: 787, column: 60, scope: !5796)
!5896 = !DILocalVariable(name: "temp", scope: !5796, file: !935, line: 789, type: !922)
!5897 = !DILocation(line: 789, column: 13, scope: !5796)
!5898 = !DILocation(line: 792, column: 5, scope: !5796)
!5899 = !DILocation(line: 792, column: 23, scope: !5796)
!5900 = !DILocation(line: 793, column: 11, scope: !5796)
!5901 = !DILocation(line: 793, column: 23, scope: !5796)
!5902 = !DILocation(line: 794, column: 9, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5796, file: !935, line: 794, column: 9)
!5904 = !DILocation(line: 794, column: 19, scope: !5903)
!5905 = !DILocation(line: 794, column: 9, scope: !5796)
!5906 = !DILocation(line: 795, column: 15, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5903, file: !935, line: 794, column: 29)
!5908 = !DILocation(line: 795, column: 27, scope: !5907)
!5909 = !DILocation(line: 796, column: 35, scope: !5907)
!5910 = !DILocation(line: 796, column: 46, scope: !5907)
!5911 = !DILocation(line: 796, column: 9, scope: !5907)
!5912 = !DILocation(line: 797, column: 5, scope: !5907)
!5913 = !DILocation(line: 799, column: 12, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5796, file: !935, line: 799, column: 5)
!5915 = !DILocation(line: 799, column: 10, scope: !5914)
!5916 = !DILocation(line: 799, column: 17, scope: !5917)
!5917 = !DILexicalBlockFile(scope: !5918, file: !935, discriminator: 1)
!5918 = distinct !DILexicalBlock(scope: !5914, file: !935, line: 799, column: 5)
!5919 = !DILocation(line: 799, column: 19, scope: !5917)
!5920 = !DILocation(line: 799, column: 5, scope: !5917)
!5921 = !DILocation(line: 800, column: 34, scope: !5918)
!5922 = !DILocation(line: 800, column: 24, scope: !5918)
!5923 = !DILocation(line: 800, column: 37, scope: !5918)
!5924 = !DILocation(line: 800, column: 19, scope: !5918)
!5925 = !DILocation(line: 800, column: 9, scope: !5918)
!5926 = !DILocation(line: 800, column: 22, scope: !5918)
!5927 = !DILocation(line: 799, column: 26, scope: !5928)
!5928 = !DILexicalBlockFile(scope: !5918, file: !935, discriminator: 2)
!5929 = !DILocation(line: 799, column: 5, scope: !5928)
!5930 = distinct !{!5930, !5931}
!5931 = !DILocation(line: 799, column: 5, scope: !5796)
!5932 = !DILocation(line: 803, column: 34, scope: !5796)
!5933 = !DILocation(line: 803, column: 45, scope: !5796)
!5934 = !DILocation(line: 803, column: 12, scope: !5796)
!5935 = !DILocation(line: 803, column: 10, scope: !5796)
!5936 = !DILocation(line: 805, column: 38, scope: !5796)
!5937 = !DILocation(line: 805, column: 13, scope: !5796)
!5938 = !DILocation(line: 805, column: 11, scope: !5796)
!5939 = !DILocation(line: 806, column: 41, scope: !5796)
!5940 = !DILocation(line: 806, column: 49, scope: !5796)
!5941 = !DILocation(line: 806, column: 46, scope: !5796)
!5942 = !DILocation(line: 806, column: 56, scope: !5796)
!5943 = !DILocation(line: 806, column: 23, scope: !5796)
!5944 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5852)
!5945 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5852)
!5946 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5852)
!5947 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5852)
!5948 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5852)
!5949 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5852)
!5950 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5852)
!5951 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5852)
!5952 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5852)
!5953 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5852)
!5954 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5852)
!5955 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5852)
!5956 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5852)
!5957 = !DILocation(line: 806, column: 69, scope: !5796)
!5958 = !DILocation(line: 806, column: 5, scope: !5796)
!5959 = !DILocation(line: 806, column: 21, scope: !5796)
!5960 = !DILocation(line: 808, column: 12, scope: !5804)
!5961 = !DILocation(line: 808, column: 10, scope: !5804)
!5962 = !DILocation(line: 808, column: 17, scope: !5963)
!5963 = !DILexicalBlockFile(scope: !5803, file: !935, discriminator: 1)
!5964 = !DILocation(line: 808, column: 19, scope: !5963)
!5965 = !DILocation(line: 808, column: 5, scope: !5963)
!5966 = !DILocation(line: 809, column: 38, scope: !5802)
!5967 = !DILocation(line: 809, column: 50, scope: !5802)
!5968 = !DILocation(line: 809, column: 48, scope: !5802)
!5969 = !DILocation(line: 809, column: 53, scope: !5802)
!5970 = !DILocation(line: 810, column: 43, scope: !5802)
!5971 = !DILocation(line: 810, column: 41, scope: !5802)
!5972 = !DILocation(line: 809, column: 16, scope: !5802)
!5973 = !DILocation(line: 809, column: 14, scope: !5802)
!5974 = !DILocation(line: 811, column: 45, scope: !5802)
!5975 = !DILocation(line: 811, column: 53, scope: !5802)
!5976 = !DILocation(line: 811, column: 50, scope: !5802)
!5977 = !DILocation(line: 811, column: 60, scope: !5802)
!5978 = !DILocation(line: 811, column: 27, scope: !5802)
!5979 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5801)
!5980 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5801)
!5981 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5801)
!5982 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5801)
!5983 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5801)
!5984 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5801)
!5985 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5801)
!5986 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5801)
!5987 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5801)
!5988 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5801)
!5989 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5801)
!5990 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5801)
!5991 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5801)
!5992 = !DILocation(line: 811, column: 73, scope: !5802)
!5993 = !DILocation(line: 811, column: 22, scope: !5802)
!5994 = !DILocation(line: 811, column: 9, scope: !5802)
!5995 = !DILocation(line: 811, column: 25, scope: !5802)
!5996 = !DILocation(line: 812, column: 5, scope: !5802)
!5997 = !DILocation(line: 808, column: 26, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !5803, file: !935, discriminator: 2)
!5999 = !DILocation(line: 808, column: 5, scope: !5998)
!6000 = distinct !{!6000, !6001}
!6001 = !DILocation(line: 808, column: 5, scope: !5796)
!6002 = !DILocation(line: 815, column: 11, scope: !5796)
!6003 = !DILocation(line: 816, column: 12, scope: !5810)
!6004 = !DILocation(line: 816, column: 10, scope: !5810)
!6005 = !DILocation(line: 816, column: 17, scope: !6006)
!6006 = !DILexicalBlockFile(scope: !5809, file: !935, discriminator: 1)
!6007 = !DILocation(line: 816, column: 19, scope: !6006)
!6008 = !DILocation(line: 816, column: 5, scope: !6006)
!6009 = !DILocation(line: 817, column: 38, scope: !5808)
!6010 = !DILocation(line: 817, column: 44, scope: !5808)
!6011 = !DILocation(line: 817, column: 42, scope: !5808)
!6012 = !DILocation(line: 817, column: 47, scope: !5808)
!6013 = !DILocation(line: 817, column: 63, scope: !5808)
!6014 = !DILocation(line: 817, column: 61, scope: !5808)
!6015 = !DILocation(line: 817, column: 16, scope: !5808)
!6016 = !DILocation(line: 817, column: 14, scope: !5808)
!6017 = !DILocation(line: 818, column: 13, scope: !5807)
!6018 = !DILocation(line: 818, column: 19, scope: !5807)
!6019 = !DILocation(line: 818, column: 13, scope: !5808)
!6020 = !DILocation(line: 819, column: 23, scope: !5807)
!6021 = !DILocation(line: 819, column: 32, scope: !5807)
!6022 = !DILocation(line: 819, column: 31, scope: !5807)
!6023 = !DILocation(line: 819, column: 28, scope: !5807)
!6024 = !DILocation(line: 819, column: 18, scope: !5807)
!6025 = !DILocation(line: 819, column: 13, scope: !5807)
!6026 = !DILocation(line: 819, column: 21, scope: !5807)
!6027 = !DILocation(line: 821, column: 40, scope: !5807)
!6028 = !DILocation(line: 821, column: 48, scope: !5807)
!6029 = !DILocation(line: 821, column: 45, scope: !5807)
!6030 = !DILocation(line: 821, column: 23, scope: !5807)
!6031 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5806)
!6032 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5806)
!6033 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5806)
!6034 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5806)
!6035 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5806)
!6036 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5806)
!6037 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5806)
!6038 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5806)
!6039 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5806)
!6040 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5806)
!6041 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5806)
!6042 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5806)
!6043 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5806)
!6044 = !DILocation(line: 821, column: 18, scope: !5807)
!6045 = !DILocation(line: 821, column: 13, scope: !5807)
!6046 = !DILocation(line: 821, column: 21, scope: !5807)
!6047 = !DILocation(line: 822, column: 5, scope: !5808)
!6048 = !DILocation(line: 816, column: 26, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !5809, file: !935, discriminator: 2)
!6050 = !DILocation(line: 816, column: 5, scope: !6049)
!6051 = distinct !{!6051, !6052}
!6052 = !DILocation(line: 816, column: 5, scope: !5796)
!6053 = !DILocation(line: 825, column: 12, scope: !5818)
!6054 = !DILocation(line: 825, column: 10, scope: !5818)
!6055 = !DILocation(line: 825, column: 17, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !5817, file: !935, discriminator: 1)
!6057 = !DILocation(line: 825, column: 19, scope: !6056)
!6058 = !DILocation(line: 825, column: 5, scope: !6056)
!6059 = !DILocation(line: 827, column: 13, scope: !5816)
!6060 = !DILocation(line: 828, column: 18, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !5816, file: !935, line: 828, column: 9)
!6062 = !DILocation(line: 828, column: 16, scope: !6061)
!6063 = !DILocation(line: 828, column: 14, scope: !6061)
!6064 = !DILocation(line: 828, column: 21, scope: !6065)
!6065 = !DILexicalBlockFile(scope: !6066, file: !935, discriminator: 1)
!6066 = distinct !DILexicalBlock(scope: !6061, file: !935, line: 828, column: 9)
!6067 = !DILocation(line: 828, column: 23, scope: !6065)
!6068 = !DILocation(line: 828, column: 9, scope: !6065)
!6069 = !DILocation(line: 829, column: 27, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6066, file: !935, line: 828, column: 37)
!6071 = !DILocation(line: 829, column: 22, scope: !6070)
!6072 = !DILocation(line: 829, column: 31, scope: !6070)
!6073 = !DILocation(line: 829, column: 21, scope: !6070)
!6074 = !DILocation(line: 829, column: 44, scope: !6075)
!6075 = !DILexicalBlockFile(scope: !6070, file: !935, discriminator: 1)
!6076 = !DILocation(line: 829, column: 39, scope: !6075)
!6077 = !DILocation(line: 829, column: 21, scope: !6075)
!6078 = !DILocation(line: 829, column: 58, scope: !6079)
!6079 = !DILexicalBlockFile(scope: !6070, file: !935, discriminator: 2)
!6080 = !DILocation(line: 829, column: 53, scope: !6079)
!6081 = !DILocation(line: 829, column: 51, scope: !6079)
!6082 = !DILocation(line: 829, column: 21, scope: !6079)
!6083 = !DILocation(line: 829, column: 21, scope: !6084)
!6084 = !DILexicalBlockFile(scope: !6070, file: !935, discriminator: 3)
!6085 = !DILocation(line: 829, column: 20, scope: !6084)
!6086 = !DILocation(line: 829, column: 18, scope: !6084)
!6087 = !DILocation(line: 830, column: 17, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6070, file: !935, line: 830, column: 17)
!6089 = !DILocation(line: 830, column: 25, scope: !6088)
!6090 = !DILocation(line: 830, column: 22, scope: !6088)
!6091 = !DILocation(line: 830, column: 17, scope: !6070)
!6092 = !DILocation(line: 831, column: 23, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !935, line: 830, column: 30)
!6094 = !DILocation(line: 831, column: 21, scope: !6093)
!6095 = !DILocation(line: 832, column: 38, scope: !6093)
!6096 = !DILocation(line: 832, column: 23, scope: !6093)
!6097 = !DILocation(line: 832, column: 17, scope: !6093)
!6098 = !DILocation(line: 832, column: 36, scope: !6093)
!6099 = !DILocation(line: 833, column: 13, scope: !6093)
!6100 = !DILocation(line: 834, column: 9, scope: !6070)
!6101 = !DILocation(line: 828, column: 31, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !6066, file: !935, discriminator: 2)
!6103 = !DILocation(line: 828, column: 9, scope: !6102)
!6104 = distinct !{!6104, !6105}
!6105 = !DILocation(line: 828, column: 9, scope: !5816)
!6106 = !DILocation(line: 837, column: 15, scope: !5816)
!6107 = !DILocation(line: 837, column: 13, scope: !5816)
!6108 = !DILocation(line: 838, column: 13, scope: !5816)
!6109 = !DILocation(line: 839, column: 23, scope: !5816)
!6110 = !DILocation(line: 840, column: 18, scope: !5815)
!6111 = !DILocation(line: 840, column: 16, scope: !5815)
!6112 = !DILocation(line: 840, column: 14, scope: !5815)
!6113 = !DILocation(line: 840, column: 33, scope: !6114)
!6114 = !DILexicalBlockFile(scope: !5814, file: !935, discriminator: 1)
!6115 = !DILocation(line: 840, column: 35, scope: !6114)
!6116 = !DILocation(line: 840, column: 9, scope: !6114)
!6117 = !DILocation(line: 841, column: 61, scope: !5813)
!6118 = !DILocation(line: 841, column: 47, scope: !5813)
!6119 = !DILocation(line: 841, column: 37, scope: !5813)
!6120 = !DILocation(line: 842, column: 35, scope: !5813)
!6121 = !DILocation(line: 841, column: 64, scope: !5813)
!6122 = !DILocation(line: 842, column: 51, scope: !5813)
!6123 = !DILocation(line: 841, column: 20, scope: !5813)
!6124 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5812)
!6125 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5812)
!6126 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5812)
!6127 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5812)
!6128 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5812)
!6129 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5812)
!6130 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5812)
!6131 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5812)
!6132 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5812)
!6133 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5812)
!6134 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5812)
!6135 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5812)
!6136 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5812)
!6137 = !DILocation(line: 841, column: 18, scope: !5813)
!6138 = !DILocation(line: 843, column: 22, scope: !5813)
!6139 = !DILocation(line: 843, column: 29, scope: !5813)
!6140 = !DILocation(line: 843, column: 27, scope: !5813)
!6141 = !DILocation(line: 843, column: 34, scope: !5813)
!6142 = !DILocation(line: 843, column: 21, scope: !5813)
!6143 = !DILocation(line: 843, column: 42, scope: !6144)
!6144 = !DILexicalBlockFile(scope: !5813, file: !935, discriminator: 1)
!6145 = !DILocation(line: 843, column: 49, scope: !6144)
!6146 = !DILocation(line: 843, column: 47, scope: !6144)
!6147 = !DILocation(line: 843, column: 21, scope: !6144)
!6148 = !DILocation(line: 843, column: 59, scope: !6149)
!6149 = !DILexicalBlockFile(scope: !5813, file: !935, discriminator: 2)
!6150 = !DILocation(line: 843, column: 66, scope: !6149)
!6151 = !DILocation(line: 843, column: 64, scope: !6149)
!6152 = !DILocation(line: 843, column: 57, scope: !6149)
!6153 = !DILocation(line: 843, column: 21, scope: !6149)
!6154 = !DILocation(line: 843, column: 21, scope: !6155)
!6155 = !DILexicalBlockFile(scope: !5813, file: !935, discriminator: 3)
!6156 = !DILocation(line: 843, column: 18, scope: !6155)
!6157 = !DILocation(line: 844, column: 17, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !5813, file: !935, line: 844, column: 17)
!6159 = !DILocation(line: 844, column: 24, scope: !6158)
!6160 = !DILocation(line: 844, column: 22, scope: !6158)
!6161 = !DILocation(line: 844, column: 17, scope: !5813)
!6162 = !DILocation(line: 845, column: 23, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6158, file: !935, line: 844, column: 29)
!6164 = !DILocation(line: 845, column: 21, scope: !6163)
!6165 = !DILocation(line: 846, column: 33, scope: !6163)
!6166 = !DILocation(line: 846, column: 31, scope: !6163)
!6167 = !DILocation(line: 847, column: 13, scope: !6163)
!6168 = !DILocation(line: 848, column: 9, scope: !5813)
!6169 = !DILocation(line: 840, column: 42, scope: !6170)
!6170 = !DILexicalBlockFile(scope: !5814, file: !935, discriminator: 2)
!6171 = !DILocation(line: 840, column: 9, scope: !6170)
!6172 = distinct !{!6172, !6173}
!6173 = !DILocation(line: 840, column: 9, scope: !5816)
!6174 = !DILocation(line: 850, column: 22, scope: !5816)
!6175 = !DILocation(line: 852, column: 16, scope: !5829)
!6176 = !DILocation(line: 852, column: 14, scope: !5829)
!6177 = !DILocation(line: 852, column: 21, scope: !6178)
!6178 = !DILexicalBlockFile(scope: !5828, file: !935, discriminator: 1)
!6179 = !DILocation(line: 852, column: 23, scope: !6178)
!6180 = !DILocation(line: 852, column: 9, scope: !6178)
!6181 = !DILocation(line: 853, column: 22, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !5827, file: !935, line: 853, column: 13)
!6183 = !DILocation(line: 853, column: 20, scope: !6182)
!6184 = !DILocation(line: 853, column: 18, scope: !6182)
!6185 = !DILocation(line: 853, column: 25, scope: !6186)
!6186 = !DILexicalBlockFile(scope: !6187, file: !935, discriminator: 1)
!6187 = distinct !DILexicalBlock(scope: !6182, file: !935, line: 853, column: 13)
!6188 = !DILocation(line: 853, column: 27, scope: !6186)
!6189 = !DILocation(line: 853, column: 13, scope: !6186)
!6190 = !DILocation(line: 854, column: 27, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6187, file: !935, line: 853, column: 41)
!6192 = !DILocation(line: 854, column: 17, scope: !6191)
!6193 = !DILocation(line: 854, column: 30, scope: !6191)
!6194 = !DILocation(line: 855, column: 32, scope: !6191)
!6195 = !DILocation(line: 855, column: 27, scope: !6191)
!6196 = !DILocation(line: 855, column: 22, scope: !6191)
!6197 = !DILocation(line: 855, column: 17, scope: !6191)
!6198 = !DILocation(line: 855, column: 25, scope: !6191)
!6199 = !DILocation(line: 856, column: 13, scope: !6191)
!6200 = !DILocation(line: 853, column: 35, scope: !6201)
!6201 = !DILexicalBlockFile(scope: !6187, file: !935, discriminator: 2)
!6202 = !DILocation(line: 853, column: 13, scope: !6201)
!6203 = distinct !{!6203, !6204}
!6204 = !DILocation(line: 853, column: 13, scope: !5827)
!6205 = !DILocation(line: 857, column: 31, scope: !5827)
!6206 = !DILocation(line: 857, column: 47, scope: !5827)
!6207 = !DILocation(line: 857, column: 45, scope: !5827)
!6208 = !DILocation(line: 857, column: 49, scope: !5827)
!6209 = !DILocation(line: 857, column: 19, scope: !5827)
!6210 = !DILocation(line: 857, column: 29, scope: !5827)
!6211 = !DILocation(line: 858, column: 39, scope: !5827)
!6212 = !DILocation(line: 858, column: 19, scope: !5827)
!6213 = !DILocation(line: 858, column: 17, scope: !5827)
!6214 = !DILocation(line: 860, column: 47, scope: !5827)
!6215 = !DILocation(line: 860, column: 41, scope: !5827)
!6216 = !DILocation(line: 860, column: 36, scope: !5827)
!6217 = !DILocation(line: 860, column: 61, scope: !5827)
!6218 = !DILocation(line: 860, column: 35, scope: !5827)
!6219 = !DILocation(line: 860, column: 69, scope: !6220)
!6220 = !DILexicalBlockFile(scope: !5827, file: !935, discriminator: 1)
!6221 = !DILocation(line: 860, column: 68, scope: !6220)
!6222 = !DILocation(line: 860, column: 35, scope: !6220)
!6223 = !DILocation(line: 860, column: 75, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !5827, file: !935, discriminator: 2)
!6225 = !DILocation(line: 860, column: 35, scope: !6224)
!6226 = !DILocation(line: 860, column: 35, scope: !6227)
!6227 = !DILexicalBlockFile(scope: !5827, file: !935, discriminator: 3)
!6228 = !DILocation(line: 860, column: 19, scope: !6227)
!6229 = !DILocation(line: 860, column: 13, scope: !6227)
!6230 = !DILocation(line: 860, column: 33, scope: !6227)
!6231 = !DILocation(line: 861, column: 29, scope: !5827)
!6232 = !DILocation(line: 861, column: 23, scope: !5827)
!6233 = !DILocation(line: 861, column: 13, scope: !5827)
!6234 = !DILocation(line: 861, column: 43, scope: !5827)
!6235 = !DILocation(line: 863, column: 20, scope: !5826)
!6236 = !DILocation(line: 863, column: 18, scope: !5826)
!6237 = !DILocation(line: 863, column: 25, scope: !6238)
!6238 = !DILexicalBlockFile(scope: !5825, file: !935, discriminator: 1)
!6239 = !DILocation(line: 863, column: 29, scope: !6238)
!6240 = !DILocation(line: 863, column: 27, scope: !6238)
!6241 = !DILocation(line: 863, column: 13, scope: !6238)
!6242 = !DILocation(line: 864, column: 21, scope: !5824)
!6243 = !DILocation(line: 865, column: 26, scope: !5823)
!6244 = !DILocation(line: 865, column: 24, scope: !5823)
!6245 = !DILocation(line: 865, column: 22, scope: !5823)
!6246 = !DILocation(line: 865, column: 29, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !5822, file: !935, discriminator: 1)
!6248 = !DILocation(line: 865, column: 31, scope: !6247)
!6249 = !DILocation(line: 865, column: 17, scope: !6247)
!6250 = !DILocation(line: 866, column: 35, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !5821, file: !935, line: 866, column: 25)
!6252 = !DILocation(line: 866, column: 25, scope: !6251)
!6253 = !DILocation(line: 866, column: 25, scope: !5821)
!6254 = !DILocation(line: 867, column: 25, scope: !6251)
!6255 = !DILocation(line: 868, column: 43, scope: !5821)
!6256 = !DILocation(line: 868, column: 63, scope: !5821)
!6257 = !DILocation(line: 868, column: 65, scope: !5821)
!6258 = !DILocation(line: 868, column: 47, scope: !5821)
!6259 = !DILocation(line: 868, column: 53, scope: !5821)
!6260 = !DILocation(line: 868, column: 45, scope: !5821)
!6261 = !DILocation(line: 868, column: 71, scope: !5821)
!6262 = !DILocation(line: 868, column: 42, scope: !5821)
!6263 = !DILocation(line: 868, column: 79, scope: !6264)
!6264 = !DILexicalBlockFile(scope: !5821, file: !935, discriminator: 1)
!6265 = !DILocation(line: 868, column: 99, scope: !6264)
!6266 = !DILocation(line: 868, column: 101, scope: !6264)
!6267 = !DILocation(line: 868, column: 83, scope: !6264)
!6268 = !DILocation(line: 868, column: 89, scope: !6264)
!6269 = !DILocation(line: 868, column: 81, scope: !6264)
!6270 = !DILocation(line: 868, column: 42, scope: !6264)
!6271 = !DILocation(line: 868, column: 112, scope: !6272)
!6272 = !DILexicalBlockFile(scope: !5821, file: !935, discriminator: 2)
!6273 = !DILocation(line: 868, column: 132, scope: !6272)
!6274 = !DILocation(line: 868, column: 134, scope: !6272)
!6275 = !DILocation(line: 868, column: 116, scope: !6272)
!6276 = !DILocation(line: 868, column: 122, scope: !6272)
!6277 = !DILocation(line: 868, column: 114, scope: !6272)
!6278 = !DILocation(line: 868, column: 110, scope: !6272)
!6279 = !DILocation(line: 868, column: 42, scope: !6272)
!6280 = !DILocation(line: 868, column: 42, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !5821, file: !935, discriminator: 3)
!6282 = !DILocation(line: 868, column: 28, scope: !6281)
!6283 = !DILocation(line: 868, column: 26, scope: !6281)
!6284 = !DILocation(line: 869, column: 55, scope: !5821)
!6285 = !DILocation(line: 870, column: 60, scope: !5821)
!6286 = !DILocation(line: 870, column: 62, scope: !5821)
!6287 = !DILocation(line: 870, column: 43, scope: !5821)
!6288 = !DILocation(line: 870, column: 49, scope: !5821)
!6289 = !DILocation(line: 869, column: 60, scope: !5821)
!6290 = !DILocation(line: 870, column: 67, scope: !5821)
!6291 = !DILocation(line: 869, column: 28, scope: !5821)
!6292 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5820)
!6293 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5820)
!6294 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5820)
!6295 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5820)
!6296 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5820)
!6297 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5820)
!6298 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5820)
!6299 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5820)
!6300 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5820)
!6301 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5820)
!6302 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5820)
!6303 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5820)
!6304 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5820)
!6305 = !DILocation(line: 869, column: 26, scope: !5821)
!6306 = !DILocation(line: 871, column: 32, scope: !5821)
!6307 = !DILocation(line: 871, column: 26, scope: !5821)
!6308 = !DILocation(line: 871, column: 21, scope: !5821)
!6309 = !DILocation(line: 871, column: 29, scope: !5821)
!6310 = !DILocation(line: 872, column: 35, scope: !5821)
!6311 = !DILocation(line: 872, column: 30, scope: !5821)
!6312 = !DILocation(line: 872, column: 39, scope: !5821)
!6313 = !DILocation(line: 872, column: 29, scope: !5821)
!6314 = !DILocation(line: 872, column: 52, scope: !6264)
!6315 = !DILocation(line: 872, column: 47, scope: !6264)
!6316 = !DILocation(line: 872, column: 29, scope: !6264)
!6317 = !DILocation(line: 872, column: 66, scope: !6272)
!6318 = !DILocation(line: 872, column: 61, scope: !6272)
!6319 = !DILocation(line: 872, column: 59, scope: !6272)
!6320 = !DILocation(line: 872, column: 29, scope: !6272)
!6321 = !DILocation(line: 872, column: 29, scope: !6281)
!6322 = !DILocation(line: 872, column: 28, scope: !6281)
!6323 = !DILocation(line: 872, column: 26, scope: !6281)
!6324 = !DILocation(line: 873, column: 25, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !5821, file: !935, line: 873, column: 25)
!6326 = !DILocation(line: 873, column: 32, scope: !6325)
!6327 = !DILocation(line: 873, column: 30, scope: !6325)
!6328 = !DILocation(line: 873, column: 25, scope: !5821)
!6329 = !DILocation(line: 874, column: 31, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6325, file: !935, line: 873, column: 37)
!6331 = !DILocation(line: 874, column: 29, scope: !6330)
!6332 = !DILocation(line: 875, column: 46, scope: !6330)
!6333 = !DILocation(line: 875, column: 41, scope: !6330)
!6334 = !DILocation(line: 875, column: 25, scope: !6330)
!6335 = !DILocation(line: 875, column: 31, scope: !6330)
!6336 = !DILocation(line: 875, column: 44, scope: !6330)
!6337 = !DILocation(line: 876, column: 21, scope: !6330)
!6338 = !DILocation(line: 877, column: 17, scope: !5821)
!6339 = !DILocation(line: 865, column: 39, scope: !6340)
!6340 = !DILexicalBlockFile(scope: !5822, file: !935, discriminator: 2)
!6341 = !DILocation(line: 865, column: 17, scope: !6340)
!6342 = distinct !{!6342, !6343}
!6343 = !DILocation(line: 865, column: 17, scope: !5824)
!6344 = !DILocation(line: 879, column: 61, scope: !5824)
!6345 = !DILocation(line: 879, column: 45, scope: !5824)
!6346 = !DILocation(line: 879, column: 51, scope: !5824)
!6347 = !DILocation(line: 879, column: 40, scope: !5824)
!6348 = !DILocation(line: 879, column: 65, scope: !5824)
!6349 = !DILocation(line: 879, column: 39, scope: !5824)
!6350 = !DILocation(line: 880, column: 40, scope: !5824)
!6351 = !DILocation(line: 880, column: 39, scope: !5824)
!6352 = !DILocation(line: 879, column: 39, scope: !6353)
!6353 = !DILexicalBlockFile(scope: !5824, file: !935, discriminator: 1)
!6354 = !DILocation(line: 880, column: 46, scope: !6353)
!6355 = !DILocation(line: 879, column: 39, scope: !6356)
!6356 = !DILexicalBlockFile(scope: !5824, file: !935, discriminator: 2)
!6357 = !DILocation(line: 879, column: 39, scope: !6358)
!6358 = !DILexicalBlockFile(scope: !5824, file: !935, discriminator: 3)
!6359 = !DILocation(line: 879, column: 34, scope: !6358)
!6360 = !DILocation(line: 879, column: 17, scope: !6358)
!6361 = !DILocation(line: 879, column: 23, scope: !6358)
!6362 = !DILocation(line: 879, column: 37, scope: !6358)
!6363 = !DILocation(line: 881, column: 43, scope: !5824)
!6364 = !DILocation(line: 881, column: 27, scope: !5824)
!6365 = !DILocation(line: 881, column: 33, scope: !5824)
!6366 = !DILocation(line: 881, column: 17, scope: !5824)
!6367 = !DILocation(line: 881, column: 47, scope: !5824)
!6368 = !DILocation(line: 882, column: 13, scope: !5824)
!6369 = !DILocation(line: 863, column: 41, scope: !6370)
!6370 = !DILexicalBlockFile(scope: !5825, file: !935, discriminator: 2)
!6371 = !DILocation(line: 863, column: 13, scope: !6370)
!6372 = distinct !{!6372, !6373}
!6373 = !DILocation(line: 863, column: 13, scope: !5827)
!6374 = !DILocation(line: 885, column: 13, scope: !5827)
!6375 = !DILocation(line: 887, column: 20, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !5827, file: !935, line: 887, column: 13)
!6377 = !DILocation(line: 887, column: 18, scope: !6376)
!6378 = !DILocation(line: 887, column: 25, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6380, file: !935, discriminator: 1)
!6380 = distinct !DILexicalBlock(scope: !6376, file: !935, line: 887, column: 13)
!6381 = !DILocation(line: 887, column: 29, scope: !6379)
!6382 = !DILocation(line: 887, column: 27, scope: !6379)
!6383 = !DILocation(line: 887, column: 13, scope: !6379)
!6384 = !DILocation(line: 888, column: 66, scope: !6380)
!6385 = !DILocation(line: 888, column: 49, scope: !6380)
!6386 = !DILocation(line: 888, column: 55, scope: !6380)
!6387 = !DILocation(line: 888, column: 43, scope: !6380)
!6388 = !DILocation(line: 888, column: 27, scope: !6380)
!6389 = !DILocation(line: 888, column: 33, scope: !6380)
!6390 = !DILocation(line: 888, column: 17, scope: !6380)
!6391 = !DILocation(line: 888, column: 47, scope: !6380)
!6392 = !DILocation(line: 887, column: 41, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !6380, file: !935, discriminator: 2)
!6394 = !DILocation(line: 887, column: 13, scope: !6393)
!6395 = distinct !{!6395, !6396}
!6396 = !DILocation(line: 887, column: 13, scope: !5827)
!6397 = !DILocation(line: 890, column: 20, scope: !5837)
!6398 = !DILocation(line: 890, column: 18, scope: !5837)
!6399 = !DILocation(line: 890, column: 30, scope: !6400)
!6400 = !DILexicalBlockFile(scope: !5836, file: !935, discriminator: 1)
!6401 = !DILocation(line: 890, column: 32, scope: !6400)
!6402 = !DILocation(line: 890, column: 13, scope: !6400)
!6403 = !DILocation(line: 891, column: 22, scope: !5835)
!6404 = !DILocation(line: 892, column: 24, scope: !5834)
!6405 = !DILocation(line: 892, column: 22, scope: !5834)
!6406 = !DILocation(line: 892, column: 29, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !5833, file: !935, discriminator: 1)
!6408 = !DILocation(line: 892, column: 34, scope: !6407)
!6409 = !DILocation(line: 892, column: 31, scope: !6407)
!6410 = !DILocation(line: 892, column: 17, scope: !6407)
!6411 = !DILocalVariable(name: "prod", scope: !5832, file: !935, line: 893, type: !920)
!6412 = !DILocation(line: 893, column: 25, scope: !5832)
!6413 = !DILocation(line: 893, column: 69, scope: !5832)
!6414 = !DILocation(line: 893, column: 59, scope: !5832)
!6415 = !DILocation(line: 893, column: 49, scope: !5832)
!6416 = !DILocation(line: 894, column: 57, scope: !5832)
!6417 = !DILocation(line: 894, column: 61, scope: !5832)
!6418 = !DILocation(line: 894, column: 59, scope: !5832)
!6419 = !DILocation(line: 894, column: 47, scope: !5832)
!6420 = !DILocation(line: 893, column: 72, scope: !5832)
!6421 = !DILocation(line: 894, column: 64, scope: !5832)
!6422 = !DILocation(line: 893, column: 32, scope: !5832)
!6423 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5831)
!6424 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5831)
!6425 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5831)
!6426 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5831)
!6427 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5831)
!6428 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5831)
!6429 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5831)
!6430 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5831)
!6431 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5831)
!6432 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5831)
!6433 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5831)
!6434 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5831)
!6435 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5831)
!6436 = !DILocation(line: 895, column: 45, scope: !5832)
!6437 = !DILocation(line: 895, column: 52, scope: !5832)
!6438 = !DILocation(line: 895, column: 50, scope: !5832)
!6439 = !DILocation(line: 895, column: 28, scope: !5832)
!6440 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5839)
!6441 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5839)
!6442 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5839)
!6443 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5839)
!6444 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5839)
!6445 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5839)
!6446 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5839)
!6447 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5839)
!6448 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5839)
!6449 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5839)
!6450 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5839)
!6451 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5839)
!6452 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5839)
!6453 = !DILocation(line: 895, column: 26, scope: !5832)
!6454 = !DILocation(line: 896, column: 17, scope: !5832)
!6455 = !DILocation(line: 892, column: 38, scope: !6456)
!6456 = !DILexicalBlockFile(scope: !5833, file: !935, discriminator: 2)
!6457 = !DILocation(line: 892, column: 17, scope: !6456)
!6458 = distinct !{!6458, !6459}
!6459 = !DILocation(line: 892, column: 17, scope: !5835)
!6460 = !DILocation(line: 897, column: 32, scope: !5835)
!6461 = !DILocation(line: 897, column: 37, scope: !5835)
!6462 = !DILocation(line: 897, column: 42, scope: !5835)
!6463 = !DILocation(line: 897, column: 27, scope: !5835)
!6464 = !DILocation(line: 897, column: 17, scope: !5835)
!6465 = !DILocation(line: 897, column: 30, scope: !5835)
!6466 = !DILocation(line: 898, column: 13, scope: !5835)
!6467 = !DILocation(line: 890, column: 39, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !5836, file: !935, discriminator: 2)
!6469 = !DILocation(line: 890, column: 13, scope: !6468)
!6470 = distinct !{!6470, !6471}
!6471 = !DILocation(line: 890, column: 13, scope: !5827)
!6472 = !DILocation(line: 901, column: 17, scope: !5827)
!6473 = !DILocation(line: 902, column: 20, scope: !5844)
!6474 = !DILocation(line: 902, column: 18, scope: !5844)
!6475 = !DILocation(line: 902, column: 25, scope: !6476)
!6476 = !DILexicalBlockFile(scope: !5843, file: !935, discriminator: 1)
!6477 = !DILocation(line: 902, column: 27, scope: !6476)
!6478 = !DILocation(line: 902, column: 13, scope: !6476)
!6479 = !DILocalVariable(name: "prod", scope: !5842, file: !935, line: 903, type: !922)
!6480 = !DILocation(line: 903, column: 25, scope: !5842)
!6481 = !DILocation(line: 904, column: 55, scope: !5842)
!6482 = !DILocation(line: 904, column: 51, scope: !5842)
!6483 = !DILocation(line: 904, column: 41, scope: !5842)
!6484 = !DILocation(line: 904, column: 70, scope: !5842)
!6485 = !DILocation(line: 904, column: 60, scope: !5842)
!6486 = !DILocation(line: 904, column: 58, scope: !5842)
!6487 = !DILocation(line: 904, column: 73, scope: !5842)
!6488 = !DILocation(line: 904, column: 24, scope: !5842)
!6489 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5841)
!6490 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5841)
!6491 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5841)
!6492 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5841)
!6493 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5841)
!6494 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5841)
!6495 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5841)
!6496 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5841)
!6497 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5841)
!6498 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5841)
!6499 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5841)
!6500 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5841)
!6501 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5841)
!6502 = !DILocation(line: 904, column: 22, scope: !5842)
!6503 = !DILocation(line: 905, column: 40, scope: !5842)
!6504 = !DILocation(line: 905, column: 46, scope: !5842)
!6505 = !DILocation(line: 905, column: 44, scope: !5842)
!6506 = !DILocation(line: 905, column: 23, scope: !5842)
!6507 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5846)
!6508 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5846)
!6509 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5846)
!6510 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5846)
!6511 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5846)
!6512 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5846)
!6513 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5846)
!6514 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5846)
!6515 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5846)
!6516 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5846)
!6517 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5846)
!6518 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5846)
!6519 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5846)
!6520 = !DILocation(line: 905, column: 21, scope: !5842)
!6521 = !DILocation(line: 906, column: 61, scope: !5842)
!6522 = !DILocation(line: 906, column: 51, scope: !5842)
!6523 = !DILocation(line: 906, column: 41, scope: !5842)
!6524 = !DILocation(line: 906, column: 76, scope: !5842)
!6525 = !DILocation(line: 906, column: 66, scope: !5842)
!6526 = !DILocation(line: 906, column: 64, scope: !5842)
!6527 = !DILocation(line: 906, column: 24, scope: !5842)
!6528 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5848)
!6529 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5848)
!6530 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5848)
!6531 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5848)
!6532 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5848)
!6533 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5848)
!6534 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5848)
!6535 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5848)
!6536 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5848)
!6537 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5848)
!6538 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5848)
!6539 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5848)
!6540 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5848)
!6541 = !DILocation(line: 906, column: 22, scope: !5842)
!6542 = !DILocation(line: 907, column: 40, scope: !5842)
!6543 = !DILocation(line: 907, column: 46, scope: !5842)
!6544 = !DILocation(line: 907, column: 44, scope: !5842)
!6545 = !DILocation(line: 907, column: 23, scope: !5842)
!6546 = !DILocation(line: 205, column: 10, scope: !2410, inlinedAt: !5850)
!6547 = !DILocation(line: 205, column: 11, scope: !2410, inlinedAt: !5850)
!6548 = !DILocation(line: 205, column: 25, scope: !2410, inlinedAt: !5850)
!6549 = !DILocation(line: 205, column: 9, scope: !2356, inlinedAt: !5850)
!6550 = !DILocation(line: 205, column: 60, scope: !2415, inlinedAt: !5850)
!6551 = !DILocation(line: 205, column: 61, scope: !2415, inlinedAt: !5850)
!6552 = !DILocation(line: 205, column: 67, scope: !2415, inlinedAt: !5850)
!6553 = !DILocation(line: 205, column: 49, scope: !2415, inlinedAt: !5850)
!6554 = !DILocation(line: 205, column: 42, scope: !2415, inlinedAt: !5850)
!6555 = !DILocation(line: 206, column: 26, scope: !2410, inlinedAt: !5850)
!6556 = !DILocation(line: 206, column: 17, scope: !2410, inlinedAt: !5850)
!6557 = !DILocation(line: 206, column: 10, scope: !2410, inlinedAt: !5850)
!6558 = !DILocation(line: 207, column: 1, scope: !2356, inlinedAt: !5850)
!6559 = !DILocation(line: 907, column: 21, scope: !5842)
!6560 = !DILocation(line: 908, column: 13, scope: !5842)
!6561 = !DILocation(line: 902, column: 34, scope: !6562)
!6562 = !DILexicalBlockFile(scope: !5843, file: !935, discriminator: 2)
!6563 = !DILocation(line: 902, column: 13, scope: !6562)
!6564 = distinct !{!6564, !6565}
!6565 = !DILocation(line: 902, column: 13, scope: !5827)
!6566 = !DILocation(line: 911, column: 17, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !5827, file: !935, line: 911, column: 17)
!6568 = !DILocation(line: 911, column: 23, scope: !6567)
!6569 = !DILocation(line: 911, column: 30, scope: !6567)
!6570 = !DILocation(line: 911, column: 21, scope: !6567)
!6571 = !DILocation(line: 911, column: 17, scope: !5827)
!6572 = !DILocation(line: 912, column: 34, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6567, file: !935, line: 911, column: 39)
!6574 = !DILocation(line: 912, column: 17, scope: !6573)
!6575 = !DILocation(line: 912, column: 24, scope: !6573)
!6576 = !DILocation(line: 912, column: 32, scope: !6573)
!6577 = !DILocation(line: 913, column: 37, scope: !6573)
!6578 = !DILocation(line: 913, column: 17, scope: !6573)
!6579 = !DILocation(line: 913, column: 24, scope: !6573)
!6580 = !DILocation(line: 913, column: 35, scope: !6573)
!6581 = !DILocation(line: 914, column: 42, scope: !6573)
!6582 = !DILocation(line: 914, column: 17, scope: !6573)
!6583 = !DILocation(line: 914, column: 24, scope: !6573)
!6584 = !DILocation(line: 914, column: 34, scope: !6573)
!6585 = !DILocation(line: 915, column: 44, scope: !6573)
!6586 = !DILocation(line: 915, column: 17, scope: !6573)
!6587 = !DILocation(line: 915, column: 24, scope: !6573)
!6588 = !DILocation(line: 915, column: 36, scope: !6573)
!6589 = !DILocation(line: 917, column: 24, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6573, file: !935, line: 917, column: 17)
!6591 = !DILocation(line: 917, column: 22, scope: !6590)
!6592 = !DILocation(line: 917, column: 29, scope: !6593)
!6593 = !DILexicalBlockFile(scope: !6594, file: !935, discriminator: 1)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !935, line: 917, column: 17)
!6595 = !DILocation(line: 917, column: 33, scope: !6593)
!6596 = !DILocation(line: 917, column: 31, scope: !6593)
!6597 = !DILocation(line: 917, column: 17, scope: !6593)
!6598 = !DILocation(line: 918, column: 61, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6594, file: !935, line: 917, column: 49)
!6600 = !DILocation(line: 918, column: 44, scope: !6599)
!6601 = !DILocation(line: 918, column: 50, scope: !6599)
!6602 = !DILocation(line: 918, column: 39, scope: !6599)
!6603 = !DILocation(line: 918, column: 21, scope: !6599)
!6604 = !DILocation(line: 918, column: 28, scope: !6599)
!6605 = !DILocation(line: 918, column: 42, scope: !6599)
!6606 = !DILocation(line: 919, column: 59, scope: !6599)
!6607 = !DILocation(line: 919, column: 43, scope: !6599)
!6608 = !DILocation(line: 919, column: 49, scope: !6599)
!6609 = !DILocation(line: 919, column: 38, scope: !6599)
!6610 = !DILocation(line: 919, column: 21, scope: !6599)
!6611 = !DILocation(line: 919, column: 28, scope: !6599)
!6612 = !DILocation(line: 919, column: 41, scope: !6599)
!6613 = !DILocation(line: 920, column: 17, scope: !6599)
!6614 = !DILocation(line: 917, column: 45, scope: !6615)
!6615 = !DILexicalBlockFile(scope: !6594, file: !935, discriminator: 2)
!6616 = !DILocation(line: 917, column: 17, scope: !6615)
!6617 = distinct !{!6617, !6618}
!6618 = !DILocation(line: 917, column: 17, scope: !6573)
!6619 = !DILocation(line: 921, column: 13, scope: !6573)
!6620 = !DILocation(line: 922, column: 9, scope: !5827)
!6621 = !DILocation(line: 852, column: 29, scope: !6622)
!6622 = !DILexicalBlockFile(scope: !5828, file: !935, discriminator: 2)
!6623 = !DILocation(line: 852, column: 9, scope: !6622)
!6624 = distinct !{!6624, !6625}
!6625 = !DILocation(line: 852, column: 9, scope: !5816)
!6626 = !DILocation(line: 923, column: 5, scope: !5816)
!6627 = !DILocation(line: 825, column: 25, scope: !6628)
!6628 = !DILexicalBlockFile(scope: !5817, file: !935, discriminator: 2)
!6629 = !DILocation(line: 825, column: 5, scope: !6628)
!6630 = distinct !{!6630, !6631}
!6631 = !DILocation(line: 825, column: 5, scope: !5796)
!6632 = !DILocation(line: 924, column: 1, scope: !5796)
!6633 = distinct !DISubprogram(name: "pack_fcb_param", scope: !935, file: !935, line: 932, type: !6634, isLocal: true, isDefinition: true, scopeLine: 934, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{null, !6636, !5799, !1945, !920}
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64, align: 64)
!6637 = !DILocalVariable(name: "subfrm", arg: 1, scope: !6633, file: !935, line: 932, type: !6636)
!6638 = !DILocation(line: 932, column: 45, scope: !6633)
!6639 = !DILocalVariable(name: "optim", arg: 2, scope: !6633, file: !935, line: 932, type: !5799)
!6640 = !DILocation(line: 932, column: 63, scope: !6633)
!6641 = !DILocalVariable(name: "buf", arg: 3, scope: !6633, file: !935, line: 933, type: !1945)
!6642 = !DILocation(line: 933, column: 37, scope: !6633)
!6643 = !DILocalVariable(name: "pulse_cnt", arg: 4, scope: !6633, file: !935, line: 933, type: !920)
!6644 = !DILocation(line: 933, column: 46, scope: !6633)
!6645 = !DILocalVariable(name: "i", scope: !6633, file: !935, line: 935, type: !920)
!6646 = !DILocation(line: 935, column: 9, scope: !6633)
!6647 = !DILocalVariable(name: "j", scope: !6633, file: !935, line: 935, type: !920)
!6648 = !DILocation(line: 935, column: 12, scope: !6633)
!6649 = !DILocation(line: 937, column: 13, scope: !6633)
!6650 = !DILocation(line: 937, column: 11, scope: !6633)
!6651 = !DILocation(line: 937, column: 7, scope: !6633)
!6652 = !DILocation(line: 939, column: 5, scope: !6633)
!6653 = !DILocation(line: 939, column: 13, scope: !6633)
!6654 = !DILocation(line: 939, column: 24, scope: !6633)
!6655 = !DILocation(line: 940, column: 5, scope: !6633)
!6656 = !DILocation(line: 940, column: 13, scope: !6633)
!6657 = !DILocation(line: 940, column: 23, scope: !6633)
!6658 = !DILocation(line: 942, column: 12, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6633, file: !935, line: 942, column: 5)
!6660 = !DILocation(line: 942, column: 10, scope: !6659)
!6661 = !DILocation(line: 942, column: 17, scope: !6662)
!6662 = !DILexicalBlockFile(scope: !6663, file: !935, discriminator: 1)
!6663 = distinct !DILexicalBlock(scope: !6659, file: !935, line: 942, column: 5)
!6664 = !DILocation(line: 942, column: 19, scope: !6662)
!6665 = !DILocation(line: 942, column: 5, scope: !6662)
!6666 = !DILocalVariable(name: "val", scope: !6667, file: !935, line: 943, type: !920)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !935, line: 942, column: 35)
!6668 = !DILocation(line: 943, column: 13, scope: !6667)
!6669 = !DILocation(line: 943, column: 23, scope: !6667)
!6670 = !DILocation(line: 943, column: 30, scope: !6667)
!6671 = !DILocation(line: 943, column: 44, scope: !6667)
!6672 = !DILocation(line: 943, column: 46, scope: !6667)
!6673 = !DILocation(line: 943, column: 41, scope: !6667)
!6674 = !DILocation(line: 943, column: 19, scope: !6667)
!6675 = !DILocation(line: 944, column: 14, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6667, file: !935, line: 944, column: 13)
!6677 = !DILocation(line: 944, column: 13, scope: !6667)
!6678 = !DILocation(line: 945, column: 57, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6676, file: !935, line: 944, column: 19)
!6680 = !DILocation(line: 945, column: 34, scope: !6679)
!6681 = !DILocation(line: 945, column: 54, scope: !6679)
!6682 = !DILocation(line: 945, column: 13, scope: !6679)
!6683 = !DILocation(line: 945, column: 21, scope: !6679)
!6684 = !DILocation(line: 945, column: 31, scope: !6679)
!6685 = !DILocation(line: 946, column: 9, scope: !6679)
!6686 = !DILocation(line: 947, column: 13, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6676, file: !935, line: 946, column: 16)
!6688 = !DILocation(line: 947, column: 21, scope: !6687)
!6689 = !DILocation(line: 947, column: 32, scope: !6687)
!6690 = !DILocation(line: 948, column: 17, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6687, file: !935, line: 948, column: 17)
!6692 = !DILocation(line: 948, column: 21, scope: !6691)
!6693 = !DILocation(line: 948, column: 17, scope: !6687)
!6694 = !DILocation(line: 949, column: 17, scope: !6691)
!6695 = !DILocation(line: 949, column: 25, scope: !6691)
!6696 = !DILocation(line: 949, column: 35, scope: !6691)
!6697 = !DILocation(line: 950, column: 14, scope: !6687)
!6698 = !DILocation(line: 952, column: 17, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6687, file: !935, line: 952, column: 17)
!6700 = !DILocation(line: 952, column: 19, scope: !6699)
!6701 = !DILocation(line: 952, column: 17, scope: !6687)
!6702 = !DILocation(line: 953, column: 17, scope: !6699)
!6703 = !DILocation(line: 955, column: 5, scope: !6667)
!6704 = !DILocation(line: 942, column: 31, scope: !6705)
!6705 = !DILexicalBlockFile(scope: !6663, file: !935, discriminator: 2)
!6706 = !DILocation(line: 942, column: 5, scope: !6705)
!6707 = distinct !{!6707, !6708}
!6708 = !DILocation(line: 942, column: 5, scope: !6633)
!6709 = !DILocation(line: 956, column: 25, scope: !6633)
!6710 = !DILocation(line: 956, column: 32, scope: !6633)
!6711 = !DILocation(line: 956, column: 5, scope: !6633)
!6712 = !DILocation(line: 956, column: 13, scope: !6633)
!6713 = !DILocation(line: 956, column: 23, scope: !6633)
!6714 = !DILocation(line: 957, column: 26, scope: !6633)
!6715 = !DILocation(line: 957, column: 33, scope: !6633)
!6716 = !DILocation(line: 957, column: 5, scope: !6633)
!6717 = !DILocation(line: 957, column: 13, scope: !6633)
!6718 = !DILocation(line: 957, column: 24, scope: !6633)
!6719 = !DILocation(line: 958, column: 27, scope: !6633)
!6720 = !DILocation(line: 958, column: 34, scope: !6633)
!6721 = !DILocation(line: 958, column: 5, scope: !6633)
!6722 = !DILocation(line: 958, column: 13, scope: !6633)
!6723 = !DILocation(line: 958, column: 25, scope: !6633)
!6724 = !DILocation(line: 959, column: 1, scope: !6633)
!6725 = distinct !DISubprogram(name: "init_put_bits", scope: !5162, file: !5162, line: 48, type: !6726, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{null, !6728, !1090, !920}
!6728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5161, size: 64, align: 64)
!6729 = !DILocalVariable(name: "s", arg: 1, scope: !6725, file: !5162, line: 48, type: !6728)
!6730 = !DILocation(line: 48, column: 49, scope: !6725)
!6731 = !DILocalVariable(name: "buffer", arg: 2, scope: !6725, file: !5162, line: 48, type: !1090)
!6732 = !DILocation(line: 48, column: 61, scope: !6725)
!6733 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !6725, file: !5162, line: 49, type: !920)
!6734 = !DILocation(line: 49, column: 38, scope: !6725)
!6735 = !DILocation(line: 51, column: 9, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6725, file: !5162, line: 51, column: 9)
!6737 = !DILocation(line: 51, column: 21, scope: !6736)
!6738 = !DILocation(line: 51, column: 9, scope: !6725)
!6739 = !DILocation(line: 52, column: 21, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6736, file: !5162, line: 51, column: 26)
!6741 = !DILocation(line: 53, column: 16, scope: !6740)
!6742 = !DILocation(line: 54, column: 5, scope: !6740)
!6743 = !DILocation(line: 56, column: 27, scope: !6725)
!6744 = !DILocation(line: 56, column: 25, scope: !6725)
!6745 = !DILocation(line: 56, column: 5, scope: !6725)
!6746 = !DILocation(line: 56, column: 8, scope: !6725)
!6747 = !DILocation(line: 56, column: 21, scope: !6725)
!6748 = !DILocation(line: 57, column: 14, scope: !6725)
!6749 = !DILocation(line: 57, column: 5, scope: !6725)
!6750 = !DILocation(line: 57, column: 8, scope: !6725)
!6751 = !DILocation(line: 57, column: 12, scope: !6725)
!6752 = !DILocation(line: 58, column: 18, scope: !6725)
!6753 = !DILocation(line: 58, column: 21, scope: !6725)
!6754 = !DILocation(line: 58, column: 27, scope: !6725)
!6755 = !DILocation(line: 58, column: 25, scope: !6725)
!6756 = !DILocation(line: 58, column: 5, scope: !6725)
!6757 = !DILocation(line: 58, column: 8, scope: !6725)
!6758 = !DILocation(line: 58, column: 16, scope: !6725)
!6759 = !DILocation(line: 59, column: 18, scope: !6725)
!6760 = !DILocation(line: 59, column: 21, scope: !6725)
!6761 = !DILocation(line: 59, column: 5, scope: !6725)
!6762 = !DILocation(line: 59, column: 8, scope: !6725)
!6763 = !DILocation(line: 59, column: 16, scope: !6725)
!6764 = !DILocation(line: 60, column: 5, scope: !6725)
!6765 = !DILocation(line: 60, column: 8, scope: !6725)
!6766 = !DILocation(line: 60, column: 17, scope: !6725)
!6767 = !DILocation(line: 61, column: 5, scope: !6725)
!6768 = !DILocation(line: 61, column: 8, scope: !6725)
!6769 = !DILocation(line: 61, column: 16, scope: !6725)
!6770 = !DILocation(line: 62, column: 1, scope: !6725)
!6771 = distinct !DISubprogram(name: "put_bits", scope: !5162, file: !5162, line: 164, type: !6772, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{null, !6728, !920, !921}
!6774 = !DILocalVariable(name: "s", arg: 1, scope: !6771, file: !5162, line: 164, type: !6728)
!6775 = !DILocation(line: 164, column: 44, scope: !6771)
!6776 = !DILocalVariable(name: "n", arg: 2, scope: !6771, file: !5162, line: 164, type: !920)
!6777 = !DILocation(line: 164, column: 51, scope: !6771)
!6778 = !DILocalVariable(name: "value", arg: 3, scope: !6771, file: !5162, line: 164, type: !921)
!6779 = !DILocation(line: 164, column: 67, scope: !6771)
!6780 = !DILocalVariable(name: "bit_buf", scope: !6771, file: !5162, line: 166, type: !921)
!6781 = !DILocation(line: 166, column: 18, scope: !6771)
!6782 = !DILocalVariable(name: "bit_left", scope: !6771, file: !5162, line: 167, type: !920)
!6783 = !DILocation(line: 167, column: 9, scope: !6771)
!6784 = !DILocation(line: 171, column: 15, scope: !6771)
!6785 = !DILocation(line: 171, column: 18, scope: !6771)
!6786 = !DILocation(line: 171, column: 13, scope: !6771)
!6787 = !DILocation(line: 172, column: 16, scope: !6771)
!6788 = !DILocation(line: 172, column: 19, scope: !6771)
!6789 = !DILocation(line: 172, column: 14, scope: !6771)
!6790 = !DILocation(line: 176, column: 16, scope: !6771)
!6791 = !DILocation(line: 176, column: 31, scope: !6771)
!6792 = !DILocation(line: 176, column: 29, scope: !6771)
!6793 = !DILocation(line: 176, column: 22, scope: !6771)
!6794 = !DILocation(line: 176, column: 13, scope: !6771)
!6795 = !DILocation(line: 177, column: 9, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6771, file: !5162, line: 177, column: 9)
!6797 = !DILocation(line: 177, column: 14, scope: !6796)
!6798 = !DILocation(line: 177, column: 11, scope: !6796)
!6799 = !DILocation(line: 177, column: 9, scope: !6771)
!6800 = !DILocation(line: 178, column: 17, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !5162, line: 178, column: 13)
!6802 = distinct !DILexicalBlock(scope: !6796, file: !5162, line: 177, column: 24)
!6803 = !DILocation(line: 178, column: 20, scope: !6801)
!6804 = !DILocation(line: 178, column: 30, scope: !6801)
!6805 = !DILocation(line: 178, column: 33, scope: !6801)
!6806 = !DILocation(line: 178, column: 28, scope: !6801)
!6807 = !DILocation(line: 178, column: 15, scope: !6801)
!6808 = !DILocation(line: 178, column: 13, scope: !6802)
!6809 = !DILocation(line: 179, column: 60, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6801, file: !5162, line: 178, column: 42)
!6811 = !DILocation(line: 179, column: 40, scope: !6810)
!6812 = !DILocation(line: 179, column: 43, scope: !6810)
!6813 = !DILocation(line: 179, column: 54, scope: !6810)
!6814 = !DILocation(line: 179, column: 57, scope: !6810)
!6815 = !DILocation(line: 180, column: 13, scope: !6810)
!6816 = !DILocation(line: 180, column: 16, scope: !6810)
!6817 = !DILocation(line: 180, column: 24, scope: !6810)
!6818 = !DILocation(line: 181, column: 9, scope: !6810)
!6819 = !DILocation(line: 182, column: 13, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6801, file: !5162, line: 181, column: 16)
!6821 = !DILocation(line: 185, column: 19, scope: !6802)
!6822 = !DILocation(line: 185, column: 28, scope: !6802)
!6823 = !DILocation(line: 185, column: 25, scope: !6802)
!6824 = !DILocation(line: 185, column: 17, scope: !6802)
!6825 = !DILocation(line: 186, column: 18, scope: !6802)
!6826 = !DILocation(line: 187, column: 5, scope: !6802)
!6827 = !DILocation(line: 188, column: 17, scope: !6771)
!6828 = !DILocation(line: 188, column: 14, scope: !6771)
!6829 = !DILocation(line: 208, column: 18, scope: !6771)
!6830 = !DILocation(line: 208, column: 5, scope: !6771)
!6831 = !DILocation(line: 208, column: 8, scope: !6771)
!6832 = !DILocation(line: 208, column: 16, scope: !6771)
!6833 = !DILocation(line: 209, column: 19, scope: !6771)
!6834 = !DILocation(line: 209, column: 5, scope: !6771)
!6835 = !DILocation(line: 209, column: 8, scope: !6771)
!6836 = !DILocation(line: 209, column: 17, scope: !6771)
!6837 = !DILocation(line: 210, column: 1, scope: !6771)
!6838 = distinct !DISubprogram(name: "skip_put_bits", scope: !5162, file: !5162, line: 346, type: !6839, isLocal: true, isDefinition: true, scopeLine: 347, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!6839 = !DISubroutineType(types: !6840)
!6840 = !{null, !6728, !920}
!6841 = !DILocalVariable(name: "s", arg: 1, scope: !6838, file: !5162, line: 346, type: !6728)
!6842 = !DILocation(line: 346, column: 49, scope: !6838)
!6843 = !DILocalVariable(name: "n", arg: 2, scope: !6838, file: !5162, line: 346, type: !920)
!6844 = !DILocation(line: 346, column: 56, scope: !6838)
!6845 = !DILocation(line: 348, column: 20, scope: !6838)
!6846 = !DILocation(line: 348, column: 5, scope: !6838)
!6847 = !DILocation(line: 348, column: 8, scope: !6838)
!6848 = !DILocation(line: 348, column: 17, scope: !6838)
!6849 = !DILocation(line: 349, column: 24, scope: !6838)
!6850 = !DILocation(line: 349, column: 27, scope: !6838)
!6851 = !DILocation(line: 349, column: 36, scope: !6838)
!6852 = !DILocation(line: 349, column: 21, scope: !6838)
!6853 = !DILocation(line: 349, column: 5, scope: !6838)
!6854 = !DILocation(line: 349, column: 8, scope: !6838)
!6855 = !DILocation(line: 349, column: 16, scope: !6838)
!6856 = !DILocation(line: 350, column: 5, scope: !6838)
!6857 = !DILocation(line: 350, column: 8, scope: !6838)
!6858 = !DILocation(line: 350, column: 17, scope: !6838)
!6859 = !DILocation(line: 351, column: 1, scope: !6838)
!6860 = distinct !DISubprogram(name: "flush_put_bits", scope: !5162, file: !5162, line: 101, type: !6861, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1754)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{null, !6728}
!6863 = !DILocalVariable(name: "s", arg: 1, scope: !6860, file: !5162, line: 101, type: !6728)
!6864 = !DILocation(line: 101, column: 50, scope: !6860)
!6865 = !DILocation(line: 107, column: 5, scope: !6860)
!6866 = !DILocation(line: 107, column: 12, scope: !6867)
!6867 = !DILexicalBlockFile(scope: !6860, file: !5162, discriminator: 1)
!6868 = !DILocation(line: 107, column: 15, scope: !6867)
!6869 = !DILocation(line: 107, column: 24, scope: !6867)
!6870 = !DILocation(line: 107, column: 5, scope: !6867)
!6871 = !DILocation(line: 108, column: 9, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6860, file: !5162, line: 107, column: 30)
!6873 = distinct !{!6873, !6871}
!6874 = !DILocation(line: 108, column: 20, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !6876, file: !5162, discriminator: 1)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !5162, line: 108, column: 18)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !5162, line: 108, column: 12)
!6878 = !DILocation(line: 108, column: 23, scope: !6875)
!6879 = !DILocation(line: 108, column: 33, scope: !6875)
!6880 = !DILocation(line: 108, column: 36, scope: !6875)
!6881 = !DILocation(line: 108, column: 31, scope: !6875)
!6882 = !DILocation(line: 108, column: 18, scope: !6875)
!6883 = !DILocation(line: 108, column: 48, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !6885, file: !5162, discriminator: 2)
!6885 = distinct !DILexicalBlock(scope: !6876, file: !5162, line: 108, column: 46)
!6886 = !DILocation(line: 108, column: 105, scope: !6887)
!6887 = !DILexicalBlockFile(scope: !6884, file: !5162, discriminator: 4)
!6888 = !DILocation(line: 108, column: 105, scope: !6884)
!6889 = !DILocation(line: 108, column: 116, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6877, file: !5162, discriminator: 3)
!6891 = !DILocation(line: 110, column: 25, scope: !6872)
!6892 = !DILocation(line: 110, column: 28, scope: !6872)
!6893 = !DILocation(line: 110, column: 10, scope: !6872)
!6894 = !DILocation(line: 110, column: 13, scope: !6872)
!6895 = !DILocation(line: 110, column: 20, scope: !6872)
!6896 = !DILocation(line: 110, column: 23, scope: !6872)
!6897 = !DILocation(line: 111, column: 9, scope: !6872)
!6898 = !DILocation(line: 111, column: 12, scope: !6872)
!6899 = !DILocation(line: 111, column: 20, scope: !6872)
!6900 = !DILocation(line: 116, column: 9, scope: !6872)
!6901 = !DILocation(line: 116, column: 12, scope: !6872)
!6902 = !DILocation(line: 116, column: 21, scope: !6872)
!6903 = !DILocation(line: 107, column: 5, scope: !6904)
!6904 = !DILexicalBlockFile(scope: !6860, file: !5162, discriminator: 2)
!6905 = distinct !{!6905, !6865}
!6906 = !DILocation(line: 118, column: 5, scope: !6860)
!6907 = !DILocation(line: 118, column: 8, scope: !6860)
!6908 = !DILocation(line: 118, column: 17, scope: !6860)
!6909 = !DILocation(line: 119, column: 5, scope: !6860)
!6910 = !DILocation(line: 119, column: 8, scope: !6860)
!6911 = !DILocation(line: 119, column: 16, scope: !6860)
!6912 = !DILocation(line: 120, column: 1, scope: !6860)
