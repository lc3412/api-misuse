; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vp3.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vp3.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.Vp3DecodeContext = type { %struct.AVCodecContext*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ThreadFrame, %struct.ThreadFrame, %struct.ThreadFrame, i32, [64 x i8], [64 x i8], %struct.HpelDSPContext, %struct.VideoDSPContext, %struct.VP3DSPContext, [64 x i16], i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, [2 x i32], [2 x i32], %struct.Vp3Fragment*, [3 x i32], [3 x i32], i8, i8, i32, [2 x [2 x i8]*], [64 x i16], [64 x i32], [384 x [64 x i8]], [2 x [3 x i8]], [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i16]]], [3 x [64 x i16*]], i16*, [3 x [64 x i32]], i32, [3 x i32*], i32*, i32*, [3 x i32], [16 x %struct.VLC], [16 x %struct.VLC], [16 x %struct.VLC], [16 x %struct.VLC], [16 x %struct.VLC], %struct.VLC, %struct.VLC, %struct.VLC, %struct.VLC, [3 x [2 x [3 x [64 x i16]]]], i32*, i8*, i8*, i32, i32, i32, i32, [80 x [32 x [2 x i32]]], [64 x i8], [258 x i32] }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.VP3DSPContext = type { void (i8*, i8*, i8*, i64, i32)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i32*)*, void (i8*, i64, i32*)* }
%struct.Vp3Fragment = type { i16, i8, i8 }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.unaligned_32 = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"theora\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Theora\00", align 1
@ff_theora_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 30, i32 4099, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 55488, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* @vp3_init_thread_copy, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* @vp3_update_thread_context, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @theora_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @vp3_decode_frame, i32 (%struct.AVCodecContext*)* @vp3_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @vp3_decode_flush, i32 16, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"vp3\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"On2 VP3\00", align 1
@ff_vp3_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i32 0, i32 29, i32 4099, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 55488, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* @vp3_init_thread_copy, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* @vp3_update_thread_context, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @vp3_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @vp3_decode_frame, i32 (%struct.AVCodecContext*)* @vp3_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @vp3_decode_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@hilbert_offset = internal constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\01\01", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\03", [2 x i8] c"\01\02", [2 x i8] c"\02\02", [2 x i8] c"\02\03", [2 x i8] c"\03\03", [2 x i8] c"\03\02", [2 x i8] c"\03\01", [2 x i8] c"\02\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00"], align 16
@.str.4 = private unnamed_addr constant [20 x i8] c"Missing extradata!\0A\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"Corrupt extradata\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Invalid extradata!\0A\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Unknown Theora config packet: %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"%d bits left in packet %X\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"Theora bitstream version %X\0A\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"Old (<alpha3) Theora bitstream, flipped image\0A\00", align 1
@.str.11 = private unnamed_addr constant [57 x i8] c"Invalid frame dimensions - w:%d h:%d x:%d y:%d (%dx%d).\0A\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"Invalid framerate\0A\00", align 1
@theora_pix_fmts = internal constant [4 x i32] [i32 0, i32 -1, i32 4, i32 5], align 16
@.str.13 = private unnamed_addr constant [22 x i8] c"Invalid pixel format\0A\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"invalid number of base matrixes\0A\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"invalid base matrix index\0A\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"invalid qi %d > 63\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"huffman tree overflow\0A\00", align 1
@.str.18 = private unnamed_addr constant [78 x i8] c"midstream reconfiguration with multithreading is unsupported, try -threads 1\0A\00", align 1
@.str.19 = private unnamed_addr constant [49 x i8] c"Header packet passed to frame decoder, skipping\0A\00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c"Data packet without prior valid headers\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c" VP3 %sframe #%d: Q index = %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.23 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"VP version: %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [45 x i8] c"Warning, unsupported keyframe coding type?!\0A\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"vp3: first frame not a keyframe\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"error in unpack_superblocks\0A\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"error in unpack_modes\0A\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"error in unpack_vectors\0A\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"error in unpack_block_qpis\0A\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"error in unpack_dct_coeffs\0A\00", align 1
@.str.32 = private unnamed_addr constant [47 x i8] c"Invalid partially coded superblock run length\0A\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"Invalid fully coded superblock run length\0A\00", align 1
@ModeAlphabet = internal constant [6 x [8 x i32]] [[8 x i32] [i32 3, i32 4, i32 2, i32 0, i32 1, i32 5, i32 6, i32 7], [8 x i32] [i32 3, i32 4, i32 0, i32 2, i32 1, i32 5, i32 6, i32 7], [8 x i32] [i32 3, i32 2, i32 4, i32 0, i32 1, i32 5, i32 6, i32 7], [8 x i32] [i32 3, i32 2, i32 0, i32 4, i32 1, i32 5, i32 6, i32 7], [8 x i32] [i32 0, i32 3, i32 4, i32 2, i32 1, i32 5, i32 6, i32 7], [8 x i32] [i32 0, i32 5, i32 3, i32 4, i32 2, i32 1, i32 6, i32 7]], align 16
@motion_vector_table = internal constant [63 x i8] c"\00\01\FF\02\FE\03\FD\04\FC\05\FB\06\FA\07\F9\08\F8\09\F7\0A\F6\0B\F5\0C\F4\0D\F3\0E\F2\0F\F1\10\F0\11\EF\12\EE\13\ED\14\EC\15\EB\16\EA\17\E9\18\E8\19\E7\1A\E6\1B\E5\1C\E4\1D\E3\1E\E2\1F\E1", align 16
@fixed_motion_vector_table = internal constant [64 x i8] c"\00\00\01\FF\02\FE\03\FD\04\FC\05\FB\06\FA\07\F9\08\F8\09\F7\0A\F6\0B\F5\0C\F4\0D\F3\0E\F2\0F\F1\10\F0\11\EF\12\EE\13\ED\14\EC\15\EB\16\EA\17\E9\18\E8\19\E7\1A\E6\1B\E5\1C\E4\1D\E3\1E\E2\1F\E1", align 16
@.str.34 = private unnamed_addr constant [44 x i8] c"Invalid number of coefficients at level %d\0A\00", align 1
@eob_run_base = internal constant [7 x i8] c"\01\02\03\04\08\10\00", align 1
@eob_run_get_bits = internal constant [7 x i8] c"\00\00\00\02\03\04\0C", align 1
@coeff_get_bits = internal constant [32 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\02\03\04\05\06\0A\01\01\01\01\01\01\01\02\02", align 16
@coeff_tables = internal constant [32 x i16*] [i16* null, i16* null, i16* null, i16* null, i16* null, i16* null, i16* null, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @coeff_table_token_7_8, i32 0, i32 0), i16* getelementptr inbounds ([1 x i16], [1 x i16]* @coeff_table_token_7_8, i32 0, i32 0), i16* getelementptr inbounds ([1 x i16], [1 x i16]* @coeff_table_token_9, i32 0, i32 0), i16* getelementptr inbounds ([1 x i16], [1 x i16]* @coeff_table_token_10, i32 0, i32 0), i16* getelementptr inbounds ([1 x i16], [1 x i16]* @coeff_table_token_11, i32 0, i32 0), i16* getelementptr inbounds ([1 x i16], [1 x i16]* @coeff_table_token_12, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_13, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_14, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_15, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_16, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @coeff_table_token_17, i32 0, i32 0), i16* getelementptr inbounds ([8 x i16], [8 x i16]* @coeff_table_token_18, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @coeff_table_token_19, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @coeff_table_token_20, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @coeff_table_token_21, i32 0, i32 0), i16* getelementptr inbounds ([1024 x i16], [1024 x i16]* @coeff_table_token_22, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29, i32 0, i32 0), i16* getelementptr inbounds ([2 x i16], [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @coeff_table_token_30, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @coeff_table_token_31, i32 0, i32 0)], align 16
@zero_run_base = internal constant [32 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\02\03\04\05\06\0A\01\02", align 16
@zero_run_get_bits = internal constant [32 x i8] c"\00\00\00\00\00\00\00\03\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\03\00\01", align 16
@.str.35 = private unnamed_addr constant [44 x i8] c"Invalid zero run of %d with %d coeffs left\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"Invalid token %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [31 x i8] c"More blocks ended than coded!\0A\00", align 1
@coeff_table_token_7_8 = internal constant [1 x i16] zeroinitializer, align 2
@coeff_table_token_9 = internal constant [1 x i16] [i16 1], align 2
@coeff_table_token_10 = internal constant [1 x i16] [i16 -1], align 2
@coeff_table_token_11 = internal constant [1 x i16] [i16 2], align 2
@coeff_table_token_12 = internal constant [1 x i16] [i16 -2], align 2
@coeff_table_token_13 = internal constant [2 x i16] [i16 3, i16 -3], align 2
@coeff_table_token_14 = internal constant [2 x i16] [i16 4, i16 -4], align 2
@coeff_table_token_15 = internal constant [2 x i16] [i16 5, i16 -5], align 2
@coeff_table_token_16 = internal constant [2 x i16] [i16 6, i16 -6], align 2
@coeff_table_token_17 = internal constant [4 x i16] [i16 7, i16 8, i16 -7, i16 -8], align 2
@coeff_table_token_18 = internal constant [8 x i16] [i16 9, i16 10, i16 11, i16 12, i16 -9, i16 -10, i16 -11, i16 -12], align 16
@coeff_table_token_19 = internal constant [16 x i16] [i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 -13, i16 -14, i16 -15, i16 -16, i16 -17, i16 -18, i16 -19, i16 -20], align 16
@coeff_table_token_20 = internal constant [32 x i16] [i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 -21, i16 -22, i16 -23, i16 -24, i16 -25, i16 -26, i16 -27, i16 -28, i16 -29, i16 -30, i16 -31, i16 -32, i16 -33, i16 -34, i16 -35, i16 -36], align 16
@coeff_table_token_21 = internal constant [64 x i16] [i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 -37, i16 -38, i16 -39, i16 -40, i16 -41, i16 -42, i16 -43, i16 -44, i16 -45, i16 -46, i16 -47, i16 -48, i16 -49, i16 -50, i16 -51, i16 -52, i16 -53, i16 -54, i16 -55, i16 -56, i16 -57, i16 -58, i16 -59, i16 -60, i16 -61, i16 -62, i16 -63, i16 -64, i16 -65, i16 -66, i16 -67, i16 -68], align 16
@coeff_table_token_22 = internal constant [1024 x i16] [i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 141, i16 142, i16 143, i16 144, i16 145, i16 146, i16 147, i16 148, i16 149, i16 150, i16 151, i16 152, i16 153, i16 154, i16 155, i16 156, i16 157, i16 158, i16 159, i16 160, i16 161, i16 162, i16 163, i16 164, i16 165, i16 166, i16 167, i16 168, i16 169, i16 170, i16 171, i16 172, i16 173, i16 174, i16 175, i16 176, i16 177, i16 178, i16 179, i16 180, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 187, i16 188, i16 189, i16 190, i16 191, i16 192, i16 193, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199, i16 200, i16 201, i16 202, i16 203, i16 204, i16 205, i16 206, i16 207, i16 208, i16 209, i16 210, i16 211, i16 212, i16 213, i16 214, i16 215, i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 223, i16 224, i16 225, i16 226, i16 227, i16 228, i16 229, i16 230, i16 231, i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 269, i16 270, i16 271, i16 272, i16 273, i16 274, i16 275, i16 276, i16 277, i16 278, i16 279, i16 280, i16 281, i16 282, i16 283, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 290, i16 291, i16 292, i16 293, i16 294, i16 295, i16 296, i16 297, i16 298, i16 299, i16 300, i16 301, i16 302, i16 303, i16 304, i16 305, i16 306, i16 307, i16 308, i16 309, i16 310, i16 311, i16 312, i16 313, i16 314, i16 315, i16 316, i16 317, i16 318, i16 319, i16 320, i16 321, i16 322, i16 323, i16 324, i16 325, i16 326, i16 327, i16 328, i16 329, i16 330, i16 331, i16 332, i16 333, i16 334, i16 335, i16 336, i16 337, i16 338, i16 339, i16 340, i16 341, i16 342, i16 343, i16 344, i16 345, i16 346, i16 347, i16 348, i16 349, i16 350, i16 351, i16 352, i16 353, i16 354, i16 355, i16 356, i16 357, i16 358, i16 359, i16 360, i16 361, i16 362, i16 363, i16 364, i16 365, i16 366, i16 367, i16 368, i16 369, i16 370, i16 371, i16 372, i16 373, i16 374, i16 375, i16 376, i16 377, i16 378, i16 379, i16 380, i16 381, i16 382, i16 383, i16 384, i16 385, i16 386, i16 387, i16 388, i16 389, i16 390, i16 391, i16 392, i16 393, i16 394, i16 395, i16 396, i16 397, i16 398, i16 399, i16 400, i16 401, i16 402, i16 403, i16 404, i16 405, i16 406, i16 407, i16 408, i16 409, i16 410, i16 411, i16 412, i16 413, i16 414, i16 415, i16 416, i16 417, i16 418, i16 419, i16 420, i16 421, i16 422, i16 423, i16 424, i16 425, i16 426, i16 427, i16 428, i16 429, i16 430, i16 431, i16 432, i16 433, i16 434, i16 435, i16 436, i16 437, i16 438, i16 439, i16 440, i16 441, i16 442, i16 443, i16 444, i16 445, i16 446, i16 447, i16 448, i16 449, i16 450, i16 451, i16 452, i16 453, i16 454, i16 455, i16 456, i16 457, i16 458, i16 459, i16 460, i16 461, i16 462, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 473, i16 474, i16 475, i16 476, i16 477, i16 478, i16 479, i16 480, i16 481, i16 482, i16 483, i16 484, i16 485, i16 486, i16 487, i16 488, i16 489, i16 490, i16 491, i16 492, i16 493, i16 494, i16 495, i16 496, i16 497, i16 498, i16 499, i16 500, i16 501, i16 502, i16 503, i16 504, i16 505, i16 506, i16 507, i16 508, i16 509, i16 510, i16 511, i16 512, i16 513, i16 514, i16 515, i16 516, i16 517, i16 518, i16 519, i16 520, i16 521, i16 522, i16 523, i16 524, i16 525, i16 526, i16 527, i16 528, i16 529, i16 530, i16 531, i16 532, i16 533, i16 534, i16 535, i16 536, i16 537, i16 538, i16 539, i16 540, i16 541, i16 542, i16 543, i16 544, i16 545, i16 546, i16 547, i16 548, i16 549, i16 550, i16 551, i16 552, i16 553, i16 554, i16 555, i16 556, i16 557, i16 558, i16 559, i16 560, i16 561, i16 562, i16 563, i16 564, i16 565, i16 566, i16 567, i16 568, i16 569, i16 570, i16 571, i16 572, i16 573, i16 574, i16 575, i16 576, i16 577, i16 578, i16 579, i16 580, i16 -69, i16 -70, i16 -71, i16 -72, i16 -73, i16 -74, i16 -75, i16 -76, i16 -77, i16 -78, i16 -79, i16 -80, i16 -81, i16 -82, i16 -83, i16 -84, i16 -85, i16 -86, i16 -87, i16 -88, i16 -89, i16 -90, i16 -91, i16 -92, i16 -93, i16 -94, i16 -95, i16 -96, i16 -97, i16 -98, i16 -99, i16 -100, i16 -101, i16 -102, i16 -103, i16 -104, i16 -105, i16 -106, i16 -107, i16 -108, i16 -109, i16 -110, i16 -111, i16 -112, i16 -113, i16 -114, i16 -115, i16 -116, i16 -117, i16 -118, i16 -119, i16 -120, i16 -121, i16 -122, i16 -123, i16 -124, i16 -125, i16 -126, i16 -127, i16 -128, i16 -129, i16 -130, i16 -131, i16 -132, i16 -133, i16 -134, i16 -135, i16 -136, i16 -137, i16 -138, i16 -139, i16 -140, i16 -141, i16 -142, i16 -143, i16 -144, i16 -145, i16 -146, i16 -147, i16 -148, i16 -149, i16 -150, i16 -151, i16 -152, i16 -153, i16 -154, i16 -155, i16 -156, i16 -157, i16 -158, i16 -159, i16 -160, i16 -161, i16 -162, i16 -163, i16 -164, i16 -165, i16 -166, i16 -167, i16 -168, i16 -169, i16 -170, i16 -171, i16 -172, i16 -173, i16 -174, i16 -175, i16 -176, i16 -177, i16 -178, i16 -179, i16 -180, i16 -181, i16 -182, i16 -183, i16 -184, i16 -185, i16 -186, i16 -187, i16 -188, i16 -189, i16 -190, i16 -191, i16 -192, i16 -193, i16 -194, i16 -195, i16 -196, i16 -197, i16 -198, i16 -199, i16 -200, i16 -201, i16 -202, i16 -203, i16 -204, i16 -205, i16 -206, i16 -207, i16 -208, i16 -209, i16 -210, i16 -211, i16 -212, i16 -213, i16 -214, i16 -215, i16 -216, i16 -217, i16 -218, i16 -219, i16 -220, i16 -221, i16 -222, i16 -223, i16 -224, i16 -225, i16 -226, i16 -227, i16 -228, i16 -229, i16 -230, i16 -231, i16 -232, i16 -233, i16 -234, i16 -235, i16 -236, i16 -237, i16 -238, i16 -239, i16 -240, i16 -241, i16 -242, i16 -243, i16 -244, i16 -245, i16 -246, i16 -247, i16 -248, i16 -249, i16 -250, i16 -251, i16 -252, i16 -253, i16 -254, i16 -255, i16 -256, i16 -257, i16 -258, i16 -259, i16 -260, i16 -261, i16 -262, i16 -263, i16 -264, i16 -265, i16 -266, i16 -267, i16 -268, i16 -269, i16 -270, i16 -271, i16 -272, i16 -273, i16 -274, i16 -275, i16 -276, i16 -277, i16 -278, i16 -279, i16 -280, i16 -281, i16 -282, i16 -283, i16 -284, i16 -285, i16 -286, i16 -287, i16 -288, i16 -289, i16 -290, i16 -291, i16 -292, i16 -293, i16 -294, i16 -295, i16 -296, i16 -297, i16 -298, i16 -299, i16 -300, i16 -301, i16 -302, i16 -303, i16 -304, i16 -305, i16 -306, i16 -307, i16 -308, i16 -309, i16 -310, i16 -311, i16 -312, i16 -313, i16 -314, i16 -315, i16 -316, i16 -317, i16 -318, i16 -319, i16 -320, i16 -321, i16 -322, i16 -323, i16 -324, i16 -325, i16 -326, i16 -327, i16 -328, i16 -329, i16 -330, i16 -331, i16 -332, i16 -333, i16 -334, i16 -335, i16 -336, i16 -337, i16 -338, i16 -339, i16 -340, i16 -341, i16 -342, i16 -343, i16 -344, i16 -345, i16 -346, i16 -347, i16 -348, i16 -349, i16 -350, i16 -351, i16 -352, i16 -353, i16 -354, i16 -355, i16 -356, i16 -357, i16 -358, i16 -359, i16 -360, i16 -361, i16 -362, i16 -363, i16 -364, i16 -365, i16 -366, i16 -367, i16 -368, i16 -369, i16 -370, i16 -371, i16 -372, i16 -373, i16 -374, i16 -375, i16 -376, i16 -377, i16 -378, i16 -379, i16 -380, i16 -381, i16 -382, i16 -383, i16 -384, i16 -385, i16 -386, i16 -387, i16 -388, i16 -389, i16 -390, i16 -391, i16 -392, i16 -393, i16 -394, i16 -395, i16 -396, i16 -397, i16 -398, i16 -399, i16 -400, i16 -401, i16 -402, i16 -403, i16 -404, i16 -405, i16 -406, i16 -407, i16 -408, i16 -409, i16 -410, i16 -411, i16 -412, i16 -413, i16 -414, i16 -415, i16 -416, i16 -417, i16 -418, i16 -419, i16 -420, i16 -421, i16 -422, i16 -423, i16 -424, i16 -425, i16 -426, i16 -427, i16 -428, i16 -429, i16 -430, i16 -431, i16 -432, i16 -433, i16 -434, i16 -435, i16 -436, i16 -437, i16 -438, i16 -439, i16 -440, i16 -441, i16 -442, i16 -443, i16 -444, i16 -445, i16 -446, i16 -447, i16 -448, i16 -449, i16 -450, i16 -451, i16 -452, i16 -453, i16 -454, i16 -455, i16 -456, i16 -457, i16 -458, i16 -459, i16 -460, i16 -461, i16 -462, i16 -463, i16 -464, i16 -465, i16 -466, i16 -467, i16 -468, i16 -469, i16 -470, i16 -471, i16 -472, i16 -473, i16 -474, i16 -475, i16 -476, i16 -477, i16 -478, i16 -479, i16 -480, i16 -481, i16 -482, i16 -483, i16 -484, i16 -485, i16 -486, i16 -487, i16 -488, i16 -489, i16 -490, i16 -491, i16 -492, i16 -493, i16 -494, i16 -495, i16 -496, i16 -497, i16 -498, i16 -499, i16 -500, i16 -501, i16 -502, i16 -503, i16 -504, i16 -505, i16 -506, i16 -507, i16 -508, i16 -509, i16 -510, i16 -511, i16 -512, i16 -513, i16 -514, i16 -515, i16 -516, i16 -517, i16 -518, i16 -519, i16 -520, i16 -521, i16 -522, i16 -523, i16 -524, i16 -525, i16 -526, i16 -527, i16 -528, i16 -529, i16 -530, i16 -531, i16 -532, i16 -533, i16 -534, i16 -535, i16 -536, i16 -537, i16 -538, i16 -539, i16 -540, i16 -541, i16 -542, i16 -543, i16 -544, i16 -545, i16 -546, i16 -547, i16 -548, i16 -549, i16 -550, i16 -551, i16 -552, i16 -553, i16 -554, i16 -555, i16 -556, i16 -557, i16 -558, i16 -559, i16 -560, i16 -561, i16 -562, i16 -563, i16 -564, i16 -565, i16 -566, i16 -567, i16 -568, i16 -569, i16 -570, i16 -571, i16 -572, i16 -573, i16 -574, i16 -575, i16 -576, i16 -577, i16 -578, i16 -579, i16 -580], align 16
@coeff_table_token_23_24_25_26_27_28_29 = internal constant [2 x i16] [i16 1, i16 -1], align 2
@coeff_table_token_30 = internal constant [4 x i16] [i16 2, i16 3, i16 -2, i16 -3], align 2
@coeff_table_token_31 = internal constant [4 x i16] [i16 2, i16 3, i16 -2, i16 -3], align 2
@reverse_dc_prediction.predictor_transform = internal constant [16 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 0, i32 128], [4 x i32] [i32 0, i32 0, i32 128, i32 0], [4 x i32] [i32 0, i32 0, i32 53, i32 75], [4 x i32] [i32 0, i32 128, i32 0, i32 0], [4 x i32] [i32 0, i32 64, i32 0, i32 64], [4 x i32] [i32 0, i32 128, i32 0, i32 0], [4 x i32] [i32 0, i32 0, i32 53, i32 75], [4 x i32] [i32 128, i32 0, i32 0, i32 0], [4 x i32] [i32 0, i32 0, i32 0, i32 128], [4 x i32] [i32 64, i32 0, i32 64, i32 0], [4 x i32] [i32 0, i32 0, i32 53, i32 75], [4 x i32] [i32 0, i32 128, i32 0, i32 0], [4 x i32] [i32 -104, i32 116, i32 0, i32 116], [4 x i32] [i32 24, i32 80, i32 24, i32 0], [4 x i32] [i32 -104, i32 116, i32 0, i32 116]], align 16
@reverse_dc_prediction.compatible_frame = internal constant [9 x i8] c"\01\00\01\01\01\02\02\01\03", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"Coefficient index overflow\0A\00", align 1
@ff_zigzag_direct = external constant [64 x i8], align 16
@vp31_dc_scale_factor = internal constant [64 x i8] c"\DC\C8\BE\B4\AA\AA\A0\A0\96\96\8C\8C\82\82xxnnddZZZPPPFFF<<<<2222(((((\1E\1E\1E\1E\1E\1E\1E\14\14\14\14\14\14\14\14\0A\0A\0A\0A\0A\0A\0A", align 16
@vp31_ac_scale_factor = internal constant [64 x i16] [i16 500, i16 450, i16 400, i16 370, i16 340, i16 310, i16 285, i16 265, i16 245, i16 225, i16 210, i16 195, i16 185, i16 180, i16 170, i16 160, i16 150, i16 145, i16 135, i16 130, i16 125, i16 115, i16 110, i16 107, i16 100, i16 96, i16 93, i16 89, i16 85, i16 82, i16 75, i16 74, i16 70, i16 68, i16 64, i16 60, i16 57, i16 56, i16 52, i16 50, i16 49, i16 45, i16 44, i16 43, i16 40, i16 38, i16 37, i16 35, i16 33, i16 32, i16 30, i16 29, i16 28, i16 25, i16 24, i16 22, i16 21, i16 19, i16 18, i16 17, i16 15, i16 13, i16 12, i16 10], align 16
@vp31_intra_y_dequant = internal constant [64 x i8] c"\10\0B\0A\10\18(3=\0C\0C\0E\13\1A:<7\0E\0D\10\18(9E8\0E\11\16\1D3WP>\12\16%:DmgM\18#7@Qhq\5C1@NWgyxeH\5C_bpdgc", align 16
@vp31_intra_c_dequant = internal constant [64 x i8] c"\11\12\18/cccc\12\15\1ABcccc\18\1A8ccccc/Bcccccccccccccccccccccccccccccccccccccc", align 16
@vp31_inter_dequant = internal constant [64 x i8] c"\10\10\10\14\18\1C (\10\10\14\18\1C (0\10\14\18\1C (0@\14\18\1C (0@@\18\1C (0@@@\1C (0@@@` (0@@@`\80(0@@@`\80\80", align 16
@vp31_filter_limit_values = internal constant [64 x i8] c"\1E\19\14\14\0F\0F\0E\0E\0D\0D\0C\0C\0B\0B\0A\0A\09\09\08\08\07\07\07\07\06\06\06\06\05\05\05\05\04\04\04\04\03\03\03\03\02\02\02\02\02\02\02\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@dc_bias = internal constant [16 x [32 x [2 x i16]]] [[32 x [2 x i16]] [[2 x i16] [i16 45, i16 6], [2 x i16] [i16 38, i16 7], [2 x i16] [i16 358, i16 9], [2 x i16] [i16 78, i16 8], [2 x i16] [i16 718, i16 10], [2 x i16] [i16 1438, i16 11], [2 x i16] [i16 637, i16 11], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 1273, i16 12], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 178, i16 8], [2 x i16] [i16 1272, i16 12], [2 x i16] [i16 1439, i16 11], [2 x i16] [i16 158, i16 9], [2 x i16] [i16 319, i16 10], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 88, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 16, i16 5], [2 x i16] [i16 71, i16 7], [2 x i16] [i16 511, i16 9], [2 x i16] [i16 140, i16 8], [2 x i16] [i16 1020, i16 10], [2 x i16] [i16 1130, i16 11], [2 x i16] [i16 1129, i16 11], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 4513, i16 13], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 283, i16 9], [2 x i16] [i16 2257, i16 12], [2 x i16] [i16 1021, i16 10], [2 x i16] [i16 1131, i16 11], [2 x i16] [i16 4512, i16 13], [2 x i16] [i16 124, i16 7], [2 x i16] [i16 254, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 22, i16 5], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 134, i16 8], [2 x i16] [i16 135, i16 8], [2 x i16] [i16 871, i16 10], [2 x i16] [i16 1740, i16 11], [2 x i16] [i16 1739, i16 11], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 13933, i16 14], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 109, i16 7], [2 x i16] [i16 868, i16 10], [2 x i16] [i16 3482, i16 12], [2 x i16] [i16 1738, i16 11], [2 x i16] [i16 6967, i16 13], [2 x i16] [i16 13932, i16 14], [2 x i16] [i16 66, i16 7], [2 x i16] [i16 216, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 0, i16 4], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 247, i16 8], [2 x i16] [i16 88, i16 7], [2 x i16] [i16 359, i16 9], [2 x i16] [i16 715, i16 10], [2 x i16] [i16 714, i16 10], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 5729, i16 13], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 15, i16 6], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 356, i16 9], [2 x i16] [i16 1433, i16 11], [2 x i16] [i16 717, i16 10], [2 x i16] [i16 2865, i16 12], [2 x i16] [i16 5728, i16 13], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 246, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 4], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 15, i16 7], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 29, i16 8], [2 x i16] [i16 32, i16 9], [2 x i16] [i16 114, i16 10], [2 x i16] [i16 6, i16 6], [2 x i16] [i16 921, i16 13], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 17, i16 8], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 5, i16 6], [2 x i16] [i16 33, i16 9], [2 x i16] [i16 231, i16 11], [2 x i16] [i16 56, i16 9], [2 x i16] [i16 461, i16 12], [2 x i16] [i16 920, i16 13], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 9, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 9, i16 4], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 7, i16 6], [2 x i16] [i16 236, i16 8], [2 x i16] [i16 209, i16 9], [2 x i16] [i16 422, i16 10], [2 x i16] [i16 6, i16 6], [2 x i16] [i16 3361, i16 13], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 53, i16 7], [2 x i16] [i16 423, i16 10], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 421, i16 10], [2 x i16] [i16 841, i16 11], [2 x i16] [i16 208, i16 9], [2 x i16] [i16 1681, i16 12], [2 x i16] [i16 3360, i16 13], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 237, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 10, i16 4], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 183, i16 8], [2 x i16] [i16 364, i16 9], [2 x i16] [i16 153, i16 9], [2 x i16] [i16 90, i16 7], [2 x i16] [i16 5848, i16 13], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 77, i16 8], [2 x i16] [i16 11699, i16 14], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 730, i16 10], [2 x i16] [i16 1463, i16 11], [2 x i16] [i16 152, i16 9], [2 x i16] [i16 2925, i16 12], [2 x i16] [i16 11698, i16 14], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 39, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 13, i16 4], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 81, i16 7], [2 x i16] [i16 86, i16 8], [2 x i16] [i16 175, i16 9], [2 x i16] [i16 42, i16 7], [2 x i16] [i16 5258, i16 13], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 80, i16 7], [2 x i16] [i16 174, i16 9], [2 x i16] [i16 10519, i16 14], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 656, i16 10], [2 x i16] [i16 1315, i16 11], [2 x i16] [i16 329, i16 9], [2 x i16] [i16 2628, i16 12], [2 x i16] [i16 10518, i16 14], [2 x i16] [i16 83, i16 7], [2 x i16] [i16 165, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 1, i16 4], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 589, i16 10], [2 x i16] [i16 1177, i16 11], [2 x i16] [i16 1176, i16 11], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 37, i16 6], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 13, i16 6], [2 x i16] [i16 72, i16 7], [2 x i16] [i16 146, i16 8], [2 x i16] [i16 295, i16 9], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 12, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 0, i16 5], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 19, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 4], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 13, i16 7], [2 x i16] [i16 49, i16 9], [2 x i16] [i16 97, i16 10], [2 x i16] [i16 96, i16 10], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 37, i16 6], [2 x i16] [i16 7, i16 6], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 36, i16 6], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 65, i16 7], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 25, i16 8], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 19, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 10, i16 4], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 1, i16 6], [2 x i16] [i16 9, i16 6], [2 x i16] [i16 305, i16 9], [2 x i16] [i16 609, i16 10], [2 x i16] [i16 608, i16 10], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 39, i16 6], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 77, i16 7], [2 x i16] [i16 153, i16 8], [2 x i16] [i16 0, i16 7], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 8, i16 6], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 1, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 16, i16 7], [2 x i16] [i16 249, i16 10], [2 x i16] [i16 248, i16 10], [2 x i16] [i16 30, i16 7], [2 x i16] [i16 63, i16 8], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 80, i16 7], [2 x i16] [i16 17, i16 7], [2 x i16] [i16 125, i16 9], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 9, i16 6], [2 x i16] [i16 81, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 83, i16 7], [2 x i16] [i16 661, i16 10], [2 x i16] [i16 660, i16 10], [2 x i16] [i16 164, i16 8], [2 x i16] [i16 124, i16 8], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 125, i16 8], [2 x i16] [i16 331, i16 9], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 63, i16 7], [2 x i16] [i16 214, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 127, i16 8], [2 x i16] [i16 752, i16 10], [2 x i16] [i16 408, i16 9], [2 x i16] [i16 377, i16 9], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 100, i16 7], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 103, i16 7], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 205, i16 8], [2 x i16] [i16 126, i16 8], [2 x i16] [i16 753, i16 10], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 62, i16 7], [2 x i16] [i16 189, i16 8], [2 x i16] [i16 409, i16 9]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 92, i16 7], [2 x i16] [i16 349, i16 9], [2 x i16] [i16 348, i16 9], [2 x i16] [i16 703, i16 10], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 94, i16 7], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 100, i16 7], [2 x i16] [i16 93, i16 7], [2 x i16] [i16 203, i16 8], [2 x i16] [i16 173, i16 8], [2 x i16] [i16 702, i16 10], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 107, i16 7], [2 x i16] [i16 202, i16 8], [2 x i16] [i16 172, i16 8], [2 x i16] [i16 350, i16 9]], [32 x [2 x i16]] [[2 x i16] [i16 15, i16 4], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 214, i16 8], [2 x i16] [i16 1361, i16 11], [2 x i16] [i16 2721, i16 12], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 87, i16 7], [2 x i16] [i16 106, i16 7], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 86, i16 7], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 341, i16 9], [2 x i16] [i16 2720, i16 12], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 171, i16 8], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 169, i16 8], [2 x i16] [i16 337, i16 9], [2 x i16] [i16 336, i16 9], [2 x i16] [i16 681, i16 10]]], align 16
@ac_bias_0 = internal constant [16 x [32 x [2 x i16]]] [[32 x [2 x i16]] [[2 x i16] [i16 8, i16 5], [2 x i16] [i16 37, i16 7], [2 x i16] [i16 378, i16 9], [2 x i16] [i16 759, i16 10], [2 x i16] [i16 3035, i16 12], [2 x i16] [i16 6068, i16 13], [2 x i16] [i16 12139, i16 14], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 12138, i16 14], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 19, i16 6], [2 x i16] [i16 93, i16 7], [2 x i16] [i16 36, i16 7], [2 x i16] [i16 188, i16 8], [2 x i16] [i16 92, i16 7], [2 x i16] [i16 1516, i16 11], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 95, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 15, i16 5], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 75, i16 8], [2 x i16] [i16 198, i16 8], [2 x i16] [i16 797, i16 10], [2 x i16] [i16 3185, i16 12], [2 x i16] [i16 3184, i16 12], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 3187, i16 12], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 19, i16 6], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 48, i16 6], [2 x i16] [i16 98, i16 7], [2 x i16] [i16 36, i16 7], [2 x i16] [i16 74, i16 8], [2 x i16] [i16 399, i16 9], [2 x i16] [i16 3186, i16 12], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 17, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 27, i16 5], [2 x i16] [i16 3, i16 6], [2 x i16] [i16 141, i16 8], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 569, i16 10], [2 x i16] [i16 1137, i16 11], [2 x i16] [i16 2272, i16 12], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 4547, i16 13], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 0, i16 5], [2 x i16] [i16 65, i16 7], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 2, i16 6], [2 x i16] [i16 143, i16 8], [2 x i16] [i16 140, i16 8], [2 x i16] [i16 285, i16 9], [2 x i16] [i16 4546, i16 13], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 33, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 31, i16 5], [2 x i16] [i16 3, i16 6], [2 x i16] [i16 3, i16 7], [2 x i16] [i16 67, i16 7], [2 x i16] [i16 11, i16 9], [2 x i16] [i16 21, i16 10], [2 x i16] [i16 81, i16 12], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 80, i16 12], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 2, i16 6], [2 x i16] [i16 4, i16 8], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 66, i16 7], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 0, i16 7], [2 x i16] [i16 41, i16 11], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 44, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 4], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 58, i16 7], [2 x i16] [i16 93, i16 7], [2 x i16] [i16 371, i16 9], [2 x i16] [i16 740, i16 10], [2 x i16] [i16 5933, i16 13], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 5932, i16 13], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 56, i16 7], [2 x i16] [i16 1482, i16 11], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 59, i16 7], [2 x i16] [i16 57, i16 7], [2 x i16] [i16 184, i16 8], [2 x i16] [i16 2967, i16 12], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 54, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 6, i16 4], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 93, i16 7], [2 x i16] [i16 12, i16 6], [2 x i16] [i16 185, i16 8], [2 x i16] [i16 739, i16 10], [2 x i16] [i16 1476, i16 11], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 5909, i16 13], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 94, i16 7], [2 x i16] [i16 368, i16 9], [2 x i16] [i16 5908, i16 13], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 27, i16 7], [2 x i16] [i16 26, i16 7], [2 x i16] [i16 2955, i16 12], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 7, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 12, i16 4], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 240, i16 8], [2 x i16] [i16 281, i16 9], [2 x i16] [i16 560, i16 10], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 2244, i16 12], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 141, i16 8], [2 x i16] [i16 4491, i16 13], [2 x i16] [i16 4490, i16 13], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 71, i16 7], [2 x i16] [i16 241, i16 8], [2 x i16] [i16 1123, i16 11], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 12, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 70, i16 7], [2 x i16] [i16 483, i16 9], [2 x i16] [i16 965, i16 10], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 7713, i16 13], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 240, i16 8], [2 x i16] [i16 7712, i16 13], [2 x i16] [i16 7715, i16 13], [2 x i16] [i16 7714, i16 13], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 71, i16 7], [2 x i16] [i16 1929, i16 11], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 16, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 29, i16 5], [2 x i16] [i16 97, i16 7], [2 x i16] [i16 78, i16 8], [2 x i16] [i16 158, i16 9], [2 x i16] [i16 636, i16 11], [2 x i16] [i16 2549, i16 13], [2 x i16] [i16 2548, i16 13], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 96, i16 7], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 18, i16 6], [2 x i16] [i16 38, i16 7], [2 x i16] [i16 319, i16 10], [2 x i16] [i16 1275, i16 12], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 25, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 7, i16 4], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 171, i16 8], [2 x i16] [i16 170, i16 8], [2 x i16] [i16 281, i16 10], [2 x i16] [i16 1121, i16 12], [2 x i16] [i16 1120, i16 12], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 71, i16 8], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 34, i16 7], [2 x i16] [i16 141, i16 9], [2 x i16] [i16 561, i16 11], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 84, i16 7], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 20, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 12, i16 4], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 8, i16 6], [2 x i16] [i16 91, i16 7], [2 x i16] [i16 77, i16 9], [2 x i16] [i16 305, i16 11], [2 x i16] [i16 609, i16 12], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 18, i16 7], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 90, i16 7], [2 x i16] [i16 39, i16 8], [2 x i16] [i16 153, i16 10], [2 x i16] [i16 608, i16 12], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 23, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 15, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 36, i16 6], [2 x i16] [i16 149, i16 8], [2 x i16] [i16 593, i16 10], [2 x i16] [i16 1184, i16 11], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 200, i16 8], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 75, i16 7], [2 x i16] [i16 201, i16 8], [2 x i16] [i16 297, i16 9], [2 x i16] [i16 2371, i16 12], [2 x i16] [i16 2370, i16 12], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 59, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 3], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 40, i16 7], [2 x i16] [i16 917, i16 10], [2 x i16] [i16 3665, i16 12], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 42, i16 7], [2 x i16] [i16 43, i16 7], [2 x i16] [i16 41, i16 7], [2 x i16] [i16 459, i16 9], [2 x i16] [i16 1833, i16 11], [2 x i16] [i16 7329, i16 13], [2 x i16] [i16 7328, i16 13], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 59, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 501, i16 9], [2 x i16] [i16 2001, i16 11], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 502, i16 9], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 248, i16 8], [2 x i16] [i16 249, i16 8], [2 x i16] [i16 503, i16 9], [2 x i16] [i16 1001, i16 10], [2 x i16] [i16 4000, i16 12], [2 x i16] [i16 8003, i16 13], [2 x i16] [i16 8002, i16 13], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 51, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 49, i16 7], [2 x i16] [i16 375, i16 9], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 374, i16 9], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 92, i16 7], [2 x i16] [i16 186, i16 8], [2 x i16] [i16 97, i16 8], [2 x i16] [i16 193, i16 9], [2 x i16] [i16 384, i16 10], [2 x i16] [i16 770, i16 11], [2 x i16] [i16 1543, i16 12], [2 x i16] [i16 1542, i16 12], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 47, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 94, i16 7], [2 x i16] [i16 915, i16 11], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 115, i16 8], [2 x i16] [i16 229, i16 9], [2 x i16] [i16 456, i16 10], [2 x i16] [i16 3658, i16 13], [2 x i16] [i16 7319, i16 14], [2 x i16] [i16 7318, i16 14], [2 x i16] [i16 3657, i16 13], [2 x i16] [i16 3656, i16 13], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 56, i16 7], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 121, i16 7]]], align 16
@ac_bias_1 = internal constant [16 x [32 x [2 x i16]]] [[32 x [2 x i16]] [[2 x i16] [i16 11, i16 5], [2 x i16] [i16 43, i16 7], [2 x i16] [i16 84, i16 8], [2 x i16] [i16 439, i16 9], [2 x i16] [i16 1753, i16 11], [2 x i16] [i16 3505, i16 12], [2 x i16] [i16 3504, i16 12], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 171, i16 9], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 3, i16 6], [2 x i16] [i16 170, i16 9], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 0, i16 5], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 108, i16 7], [2 x i16] [i16 218, i16 8], [2 x i16] [i16 2, i16 6], [2 x i16] [i16 877, i16 10], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 55, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 29, i16 5], [2 x i16] [i16 4, i16 6], [2 x i16] [i16 182, i16 8], [2 x i16] [i16 106, i16 8], [2 x i16] [i16 1465, i16 11], [2 x i16] [i16 5857, i16 13], [2 x i16] [i16 5856, i16 13], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 367, i16 9], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 107, i16 8], [2 x i16] [i16 2929, i16 12], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 3, i16 5], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 90, i16 7], [2 x i16] [i16 52, i16 7], [2 x i16] [i16 5, i16 6], [2 x i16] [i16 733, i16 10], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 12, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 4], [2 x i16] [i16 127, i16 7], [2 x i16] [i16 161, i16 8], [2 x i16] [i16 160, i16 8], [2 x i16] [i16 524, i16 10], [2 x i16] [i16 2100, i16 12], [2 x i16] [i16 4203, i16 13], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 130, i16 8], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 1051, i16 11], [2 x i16] [i16 4202, i16 13], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 126, i16 7], [2 x i16] [i16 81, i16 7], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 263, i16 9], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 11, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 7, i16 4], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 246, i16 8], [2 x i16] [i16 233, i16 8], [2 x i16] [i16 929, i16 10], [2 x i16] [i16 1856, i16 11], [2 x i16] [i16 3714, i16 12], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 495, i16 9], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 3, i16 5], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 465, i16 9], [2 x i16] [i16 7431, i16 13], [2 x i16] [i16 7430, i16 13], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 494, i16 9], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 12, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 13, i16 4], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 66, i16 7], [2 x i16] [i16 55, i16 7], [2 x i16] [i16 217, i16 9], [2 x i16] [i16 866, i16 11], [2 x i16] [i16 1734, i16 12], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 134, i16 8], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 37, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 135, i16 8], [2 x i16] [i16 432, i16 10], [2 x i16] [i16 3471, i16 13], [2 x i16] [i16 3470, i16 13], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 36, i16 6], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 109, i16 8], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 14, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 333, i16 9], [2 x i16] [i16 1331, i16 11], [2 x i16] [i16 5321, i16 13], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 165, i16 8], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 167, i16 8], [2 x i16] [i16 664, i16 10], [2 x i16] [i16 5320, i16 13], [2 x i16] [i16 5323, i16 13], [2 x i16] [i16 5322, i16 13], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 164, i16 8], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 6, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 237, i16 8], [2 x i16] [i16 643, i16 10], [2 x i16] [i16 2570, i16 12], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 161, i16 8], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 163, i16 8], [2 x i16] [i16 162, i16 8], [2 x i16] [i16 320, i16 9], [2 x i16] [i16 5143, i16 13], [2 x i16] [i16 5142, i16 13], [2 x i16] [i16 2569, i16 12], [2 x i16] [i16 2568, i16 12], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 236, i16 8], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 5, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 228, i16 8], [2 x i16] [i16 463, i16 11], [2 x i16] [i16 29, i16 7], [2 x i16] [i16 114, i16 9], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 56, i16 8], [2 x i16] [i16 462, i16 11], [2 x i16] [i16 923, i16 12], [2 x i16] [i16 920, i16 12], [2 x i16] [i16 1843, i16 13], [2 x i16] [i16 1842, i16 13], [2 x i16] [i16 1845, i16 13], [2 x i16] [i16 1844, i16 13], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 15, i16 6], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 229, i16 8], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 56, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 22, i16 5], [2 x i16] [i16 80, i16 7], [2 x i16] [i16 370, i16 9], [2 x i16] [i16 743, i16 10], [2 x i16] [i16 5938, i16 13], [2 x i16] [i16 11879, i16 14], [2 x i16] [i16 11878, i16 14], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 81, i16 7], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 93, i16 7], [2 x i16] [i16 184, i16 8], [2 x i16] [i16 1485, i16 11], [2 x i16] [i16 5937, i16 13], [2 x i16] [i16 5936, i16 13], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 21, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 9, i16 4], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 64, i16 7], [2 x i16] [i16 173, i16 8], [2 x i16] [i16 688, i16 10], [2 x i16] [i16 5513, i16 13], [2 x i16] [i16 5512, i16 13], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 87, i16 7], [2 x i16] [i16 94, i16 7], [2 x i16] [i16 65, i16 7], [2 x i16] [i16 345, i16 9], [2 x i16] [i16 1379, i16 11], [2 x i16] [i16 5515, i16 13], [2 x i16] [i16 5514, i16 13], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 22, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 14, i16 4], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 70, i16 7], [2 x i16] [i16 69, i16 7], [2 x i16] [i16 100, i16 9], [2 x i16] [i16 810, i16 12], [2 x i16] [i16 1623, i16 13], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 13, i16 6], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 71, i16 7], [2 x i16] [i16 68, i16 7], [2 x i16] [i16 24, i16 7], [2 x i16] [i16 51, i16 8], [2 x i16] [i16 203, i16 10], [2 x i16] [i16 1622, i16 13], [2 x i16] [i16 809, i16 12], [2 x i16] [i16 808, i16 12], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 16, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 3], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 35, i16 6], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 404, i16 9], [2 x i16] [i16 6486, i16 13], [2 x i16] [i16 12975, i16 14], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 100, i16 7], [2 x i16] [i16 407, i16 9], [2 x i16] [i16 406, i16 9], [2 x i16] [i16 811, i16 10], [2 x i16] [i16 1620, i16 11], [2 x i16] [i16 12974, i16 14], [2 x i16] [i16 6485, i16 13], [2 x i16] [i16 6484, i16 13], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 51, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 3], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 72, i16 7], [2 x i16] [i16 2367, i16 12], [2 x i16] [i16 9466, i16 14], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 103, i16 7], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 146, i16 8], [2 x i16] [i16 294, i16 9], [2 x i16] [i16 590, i16 10], [2 x i16] [i16 1182, i16 11], [2 x i16] [i16 18935, i16 15], [2 x i16] [i16 18934, i16 15], [2 x i16] [i16 9465, i16 14], [2 x i16] [i16 9464, i16 14], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 37, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 3], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 234, i16 9], [2 x i16] [i16 7541, i16 14], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 102, i16 7], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 59, i16 7], [2 x i16] [i16 116, i16 8], [2 x i16] [i16 470, i16 10], [2 x i16] [i16 943, i16 11], [2 x i16] [i16 7540, i16 14], [2 x i16] [i16 7543, i16 14], [2 x i16] [i16 7542, i16 14], [2 x i16] [i16 3769, i16 13], [2 x i16] [i16 3768, i16 13], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 103, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 230, i16 8], [2 x i16] [i16 1668, i16 11], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 231, i16 8], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 24, i16 6], [2 x i16] [i16 209, i16 8], [2 x i16] [i16 416, i16 9], [2 x i16] [i16 1670, i16 11], [2 x i16] [i16 3343, i16 12], [2 x i16] [i16 3338, i16 12], [2 x i16] [i16 6679, i16 13], [2 x i16] [i16 6678, i16 13], [2 x i16] [i16 6685, i16 13], [2 x i16] [i16 6684, i16 13], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 105, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 81, i16 9], [2 x i16] [i16 188, i16 8], [2 x i16] [i16 83, i16 9], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 21, i16 7], [2 x i16] [i16 80, i16 9], [2 x i16] [i16 164, i16 10], [2 x i16] [i16 660, i16 12], [2 x i16] [i16 1323, i16 13], [2 x i16] [i16 1322, i16 13], [2 x i16] [i16 1325, i16 13], [2 x i16] [i16 1324, i16 13], [2 x i16] [i16 1327, i16 13], [2 x i16] [i16 1326, i16 13], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 11, i16 6], [2 x i16] [i16 95, i16 7], [2 x i16] [i16 189, i16 8]]], align 16
@ac_bias_2 = internal constant [16 x [32 x [2 x i16]]] [[32 x [2 x i16]] [[2 x i16] [i16 3, i16 4], [2 x i16] [i16 9, i16 6], [2 x i16] [i16 208, i16 8], [2 x i16] [i16 419, i16 9], [2 x i16] [i16 836, i16 10], [2 x i16] [i16 3348, i16 12], [2 x i16] [i16 6699, i16 13], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 21, i16 7], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 20, i16 7], [2 x i16] [i16 1675, i16 11], [2 x i16] [i16 6698, i16 13], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 11, i16 6], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 8, i16 6], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 12, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 10, i16 4], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 50, i16 7], [2 x i16] [i16 48, i16 7], [2 x i16] [i16 197, i16 9], [2 x i16] [i16 1569, i16 12], [2 x i16] [i16 1568, i16 12], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 51, i16 7], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 38, i16 6], [2 x i16] [i16 39, i16 6], [2 x i16] [i16 20, i16 6], [2 x i16] [i16 99, i16 8], [2 x i16] [i16 393, i16 10], [2 x i16] [i16 1571, i16 12], [2 x i16] [i16 1570, i16 12], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 21, i16 6], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 35, i16 6], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 16, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 15, i16 4], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 67, i16 7], [2 x i16] [i16 16, i16 6], [2 x i16] [i16 68, i16 8], [2 x i16] [i16 276, i16 10], [2 x i16] [i16 1109, i16 12], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 35, i16 7], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 66, i16 7], [2 x i16] [i16 139, i16 9], [2 x i16] [i16 1108, i16 12], [2 x i16] [i16 1111, i16 12], [2 x i16] [i16 1110, i16 12], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 17, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 1, i16 3], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 160, i16 8], [2 x i16] [i16 645, i16 10], [2 x i16] [i16 5157, i16 13], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 0, i16 7], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 1, i16 6], [2 x i16] [i16 81, i16 7], [2 x i16] [i16 1, i16 7], [2 x i16] [i16 323, i16 9], [2 x i16] [i16 1288, i16 11], [2 x i16] [i16 5156, i16 13], [2 x i16] [i16 5159, i16 13], [2 x i16] [i16 5158, i16 13], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 3, i16 5], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 1, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 22, i16 7], [2 x i16] [i16 83, i16 9], [2 x i16] [i16 330, i16 11], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 42, i16 8], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 55, i16 6], [2 x i16] [i16 23, i16 7], [2 x i16] [i16 43, i16 8], [2 x i16] [i16 40, i16 8], [2 x i16] [i16 164, i16 10], [2 x i16] [i16 1325, i16 13], [2 x i16] [i16 1324, i16 13], [2 x i16] [i16 1327, i16 13], [2 x i16] [i16 1326, i16 13], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 60, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 9, i16 6], [2 x i16] [i16 499, i16 9], [2 x i16] [i16 1991, i16 11], [2 x i16] [i16 8, i16 6], [2 x i16] [i16 496, i16 9], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 498, i16 9], [2 x i16] [i16 1990, i16 11], [2 x i16] [i16 1989, i16 11], [2 x i16] [i16 7954, i16 13], [2 x i16] [i16 15911, i16 14], [2 x i16] [i16 15910, i16 14], [2 x i16] [i16 7953, i16 13], [2 x i16] [i16 7952, i16 13], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 45, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 53, i16 7], [2 x i16] [i16 79, i16 9], [2 x i16] [i16 18, i16 7], [2 x i16] [i16 1253, i16 13], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 38, i16 8], [2 x i16] [i16 157, i16 10], [2 x i16] [i16 1252, i16 13], [2 x i16] [i16 1255, i16 13], [2 x i16] [i16 1254, i16 13], [2 x i16] [i16 1249, i16 13], [2 x i16] [i16 1248, i16 13], [2 x i16] [i16 1251, i16 13], [2 x i16] [i16 1250, i16 13], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 50, i16 6], [2 x i16] [i16 52, i16 7], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 8, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 7, i16 5], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 232, i16 8], [2 x i16] [i16 7466, i16 13], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 3734, i16 12], [2 x i16] [i16 14935, i16 14], [2 x i16] [i16 14934, i16 14], [2 x i16] [i16 14941, i16 14], [2 x i16] [i16 14940, i16 14], [2 x i16] [i16 14943, i16 14], [2 x i16] [i16 14942, i16 14], [2 x i16] [i16 7465, i16 13], [2 x i16] [i16 7464, i16 13], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 44, i16 7], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 118, i16 7], [2 x i16] [i16 467, i16 9], [2 x i16] [i16 932, i16 10], [2 x i16] [i16 45, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 10, i16 4], [2 x i16] [i16 36, i16 6], [2 x i16] [i16 191, i16 8], [2 x i16] [i16 133, i16 8], [2 x i16] [i16 529, i16 10], [2 x i16] [i16 2114, i16 12], [2 x i16] [i16 4231, i16 13], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 37, i16 6], [2 x i16] [i16 94, i16 7], [2 x i16] [i16 67, i16 7], [2 x i16] [i16 190, i16 8], [2 x i16] [i16 265, i16 9], [2 x i16] [i16 4230, i16 13], [2 x i16] [i16 2113, i16 12], [2 x i16] [i16 2112, i16 12], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 0, i16 5], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 22, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 97, i16 7], [2 x i16] [i16 884, i16 10], [2 x i16] [i16 7080, i16 13], [2 x i16] [i16 14163, i16 14], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 96, i16 7], [2 x i16] [i16 220, i16 8], [2 x i16] [i16 443, i16 9], [2 x i16] [i16 1771, i16 11], [2 x i16] [i16 7083, i16 13], [2 x i16] [i16 14162, i16 14], [2 x i16] [i16 14165, i16 14], [2 x i16] [i16 14164, i16 14], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 63, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 3], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 37, i16 6], [2 x i16] [i16 36, i16 6], [2 x i16] [i16 474, i16 9], [2 x i16] [i16 7613, i16 13], [2 x i16] [i16 15228, i16 14], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 119, i16 7], [2 x i16] [i16 236, i16 8], [2 x i16] [i16 950, i16 10], [2 x i16] [i16 1902, i16 11], [2 x i16] [i16 7615, i16 13], [2 x i16] [i16 30459, i16 15], [2 x i16] [i16 30458, i16 15], [2 x i16] [i16 15225, i16 14], [2 x i16] [i16 15224, i16 14], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 8, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 58, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 3], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 143, i16 8], [2 x i16] [i16 1141, i16 11], [2 x i16] [i16 4561, i16 13], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 39, i16 6], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 38, i16 6], [2 x i16] [i16 70, i16 7], [2 x i16] [i16 284, i16 9], [2 x i16] [i16 1143, i16 11], [2 x i16] [i16 2285, i16 12], [2 x i16] [i16 4560, i16 13], [2 x i16] [i16 4563, i16 13], [2 x i16] [i16 4562, i16 13], [2 x i16] [i16 4569, i16 13], [2 x i16] [i16 4568, i16 13], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 5, i16 5], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 34, i16 6], [2 x i16] [i16 120, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 6, i16 6], [2 x i16] [i16 994, i16 10], [2 x i16] [i16 15933, i16 14], [2 x i16] [i16 15, i16 7], [2 x i16] [i16 52, i16 6], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 125, i16 7], [2 x i16] [i16 496, i16 9], [2 x i16] [i16 1990, i16 11], [2 x i16] [i16 15932, i16 14], [2 x i16] [i16 15935, i16 14], [2 x i16] [i16 15934, i16 14], [2 x i16] [i16 15929, i16 14], [2 x i16] [i16 15928, i16 14], [2 x i16] [i16 15931, i16 14], [2 x i16] [i16 15930, i16 14], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 53, i16 6], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 14, i16 7], [2 x i16] [i16 249, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 30, i16 6], [2 x i16] [i16 224, i16 9], [2 x i16] [i16 3614, i16 13], [2 x i16] [i16 113, i16 8], [2 x i16] [i16 57, i16 7], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 32, i16 7], [2 x i16] [i16 450, i16 10], [2 x i16] [i16 7231, i16 14], [2 x i16] [i16 7230, i16 14], [2 x i16] [i16 3609, i16 13], [2 x i16] [i16 3608, i16 13], [2 x i16] [i16 3611, i16 13], [2 x i16] [i16 3610, i16 13], [2 x i16] [i16 3613, i16 13], [2 x i16] [i16 3612, i16 13], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 9, i16 5], [2 x i16] [i16 29, i16 6], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 17, i16 6], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 67, i16 8], [2 x i16] [i16 66, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 364, i16 9], [2 x i16] [i16 5841, i16 13], [2 x i16] [i16 735, i16 10], [2 x i16] [i16 366, i16 9], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 734, i16 10], [2 x i16] [i16 5840, i16 13], [2 x i16] [i16 5843, i16 13], [2 x i16] [i16 5842, i16 13], [2 x i16] [i16 11701, i16 14], [2 x i16] [i16 11700, i16 14], [2 x i16] [i16 11703, i16 14], [2 x i16] [i16 11702, i16 14], [2 x i16] [i16 5849, i16 13], [2 x i16] [i16 5848, i16 13], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 90, i16 7], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 1463, i16 11], [2 x i16] [i16 1461, i16 11]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 2], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 428, i16 9], [2 x i16] [i16 6872, i16 13], [2 x i16] [i16 13747, i16 14], [2 x i16] [i16 13746, i16 14], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 13757, i16 14], [2 x i16] [i16 13756, i16 14], [2 x i16] [i16 13759, i16 14], [2 x i16] [i16 13758, i16 14], [2 x i16] [i16 13753, i16 14], [2 x i16] [i16 13752, i16 14], [2 x i16] [i16 13755, i16 14], [2 x i16] [i16 13754, i16 14], [2 x i16] [i16 13749, i16 14], [2 x i16] [i16 13748, i16 14], [2 x i16] [i16 425, i16 9], [2 x i16] [i16 424, i16 9], [2 x i16] [i16 858, i16 10], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 213, i16 8], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 13751, i16 14], [2 x i16] [i16 13750, i16 14]]], align 16
@ac_bias_3 = internal constant [16 x [32 x [2 x i16]]] [[32 x [2 x i16]] [[2 x i16] [i16 0, i16 3], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 114, i16 7], [2 x i16] [i16 113, i16 7], [2 x i16] [i16 340, i16 9], [2 x i16] [i16 2731, i16 12], [2 x i16] [i16 2728, i16 12], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 115, i16 7], [2 x i16] [i16 84, i16 7], [2 x i16] [i16 171, i16 8], [2 x i16] [i16 683, i16 10], [2 x i16] [i16 5459, i16 13], [2 x i16] [i16 5458, i16 13], [2 x i16] [i16 5461, i16 13], [2 x i16] [i16 5460, i16 13], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 43, i16 6], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 19, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 3], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 41, i16 6], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 12, i16 7], [2 x i16] [i16 105, i16 10], [2 x i16] [i16 837, i16 13], [2 x i16] [i16 2, i16 5], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 7, i16 6], [2 x i16] [i16 27, i16 8], [2 x i16] [i16 107, i16 10], [2 x i16] [i16 106, i16 10], [2 x i16] [i16 836, i16 13], [2 x i16] [i16 839, i16 13], [2 x i16] [i16 838, i16 13], [2 x i16] [i16 417, i16 12], [2 x i16] [i16 416, i16 12], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 18, i16 5], [2 x i16] [i16 0, i16 5], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 19, i16 5], [2 x i16] [i16 1, i16 5]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 20, i16 5], [2 x i16] [i16 86, i16 7], [2 x i16] [i16 348, i16 9], [2 x i16] [i16 5589, i16 13], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 42, i16 6], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 12, i16 5], [2 x i16] [i16 175, i16 8], [2 x i16] [i16 699, i16 10], [2 x i16] [i16 5588, i16 13], [2 x i16] [i16 5591, i16 13], [2 x i16] [i16 5590, i16 13], [2 x i16] [i16 5585, i16 13], [2 x i16] [i16 5584, i16 13], [2 x i16] [i16 5587, i16 13], [2 x i16] [i16 5586, i16 13], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 13, i16 5], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 49, i16 6], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 48, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 3], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 17, i16 8], [2 x i16] [i16 262, i16 12], [2 x i16] [i16 10, i16 7], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 33, i16 9], [2 x i16] [i16 527, i16 13], [2 x i16] [i16 526, i16 13], [2 x i16] [i16 257, i16 12], [2 x i16] [i16 256, i16 12], [2 x i16] [i16 259, i16 12], [2 x i16] [i16 258, i16 12], [2 x i16] [i16 261, i16 12], [2 x i16] [i16 260, i16 12], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 3, i16 5], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 11, i16 7], [2 x i16] [i16 9, i16 7]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 3], [2 x i16] [i16 14, i16 4], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 31, i16 5], [2 x i16] [i16 110, i16 7], [2 x i16] [i16 173, i16 10], [2 x i16] [i16 175, i16 10], [2 x i16] [i16 20, i16 7], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 42, i16 8], [2 x i16] [i16 1398, i16 13], [2 x i16] [i16 2799, i16 14], [2 x i16] [i16 2798, i16 14], [2 x i16] [i16 1393, i16 13], [2 x i16] [i16 1392, i16 13], [2 x i16] [i16 1395, i16 13], [2 x i16] [i16 1394, i16 13], [2 x i16] [i16 1397, i16 13], [2 x i16] [i16 1396, i16 13], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 22, i16 5], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 54, i16 6], [2 x i16] [i16 11, i16 6], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 111, i16 7], [2 x i16] [i16 172, i16 10]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 1318, i16 11], [2 x i16] [i16 5269, i16 13], [2 x i16] [i16 166, i16 8], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 5268, i16 13], [2 x i16] [i16 5271, i16 13], [2 x i16] [i16 5270, i16 13], [2 x i16] [i16 5265, i16 13], [2 x i16] [i16 5264, i16 13], [2 x i16] [i16 5267, i16 13], [2 x i16] [i16 5266, i16 13], [2 x i16] [i16 10557, i16 14], [2 x i16] [i16 10556, i16 14], [2 x i16] [i16 10559, i16 14], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 165, i16 8], [2 x i16] [i16 328, i16 9], [2 x i16] [i16 167, i16 8], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 2638, i16 12], [2 x i16] [i16 10558, i16 14]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 1318, i16 11], [2 x i16] [i16 5269, i16 13], [2 x i16] [i16 166, i16 8], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 5268, i16 13], [2 x i16] [i16 5271, i16 13], [2 x i16] [i16 5270, i16 13], [2 x i16] [i16 5265, i16 13], [2 x i16] [i16 5264, i16 13], [2 x i16] [i16 5267, i16 13], [2 x i16] [i16 5266, i16 13], [2 x i16] [i16 10557, i16 14], [2 x i16] [i16 10556, i16 14], [2 x i16] [i16 10559, i16 14], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 165, i16 8], [2 x i16] [i16 328, i16 9], [2 x i16] [i16 167, i16 8], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 2638, i16 12], [2 x i16] [i16 10558, i16 14]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 3, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 47, i16 6], [2 x i16] [i16 1318, i16 11], [2 x i16] [i16 5269, i16 13], [2 x i16] [i16 166, i16 8], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 45, i16 6], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 5268, i16 13], [2 x i16] [i16 5271, i16 13], [2 x i16] [i16 5270, i16 13], [2 x i16] [i16 5265, i16 13], [2 x i16] [i16 5264, i16 13], [2 x i16] [i16 5267, i16 13], [2 x i16] [i16 5266, i16 13], [2 x i16] [i16 10557, i16 14], [2 x i16] [i16 10556, i16 14], [2 x i16] [i16 10559, i16 14], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 40, i16 6], [2 x i16] [i16 165, i16 8], [2 x i16] [i16 328, i16 9], [2 x i16] [i16 167, i16 8], [2 x i16] [i16 46, i16 6], [2 x i16] [i16 21, i16 5], [2 x i16] [i16 2638, i16 12], [2 x i16] [i16 10558, i16 14]], [32 x [2 x i16]] [[2 x i16] [i16 3, i16 3], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 269, i16 9], [2 x i16] [i16 2147, i16 12], [2 x i16] [i16 2144, i16 12], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 117, i16 7], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 66, i16 7], [2 x i16] [i16 271, i16 9], [2 x i16] [i16 270, i16 9], [2 x i16] [i16 537, i16 10], [2 x i16] [i16 4291, i16 13], [2 x i16] [i16 4290, i16 13], [2 x i16] [i16 4293, i16 13], [2 x i16] [i16 4292, i16 13], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 25, i16 5], [2 x i16] [i16 11, i16 5], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 26, i16 5], [2 x i16] [i16 59, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 226, i16 8], [2 x i16] [i16 7279, i16 13], [2 x i16] [i16 14553, i16 14], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 31, i16 6], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 8, i16 4], [2 x i16] [i16 0, i16 5], [2 x i16] [i16 112, i16 7], [2 x i16] [i16 455, i16 9], [2 x i16] [i16 908, i16 10], [2 x i16] [i16 1818, i16 11], [2 x i16] [i16 14552, i16 14], [2 x i16] [i16 14555, i16 14], [2 x i16] [i16 14554, i16 14], [2 x i16] [i16 14557, i16 14], [2 x i16] [i16 14556, i16 14], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 29, i16 5], [2 x i16] [i16 14, i16 5], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 60, i16 6], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 61, i16 6], [2 x i16] [i16 30, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 6, i16 3], [2 x i16] [i16 11, i16 4], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 30, i16 5], [2 x i16] [i16 116, i16 7], [2 x i16] [i16 938, i16 10], [2 x i16] [i16 7516, i16 13], [2 x i16] [i16 1, i16 6], [2 x i16] [i16 33, i16 6], [2 x i16] [i16 1, i16 3], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 62, i16 6], [2 x i16] [i16 235, i16 8], [2 x i16] [i16 468, i16 9], [2 x i16] [i16 3759, i16 12], [2 x i16] [i16 15035, i16 14], [2 x i16] [i16 15034, i16 14], [2 x i16] [i16 7513, i16 13], [2 x i16] [i16 7512, i16 13], [2 x i16] [i16 7515, i16 13], [2 x i16] [i16 7514, i16 13], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 1, i16 5], [2 x i16] [i16 63, i16 6], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 32, i16 6], [2 x i16] [i16 0, i16 6]], [32 x [2 x i16]] [[2 x i16] [i16 4, i16 3], [2 x i16] [i16 10, i16 4], [2 x i16] [i16 23, i16 5], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 22, i16 6], [2 x i16] [i16 362, i16 9], [2 x i16] [i16 5809, i16 13], [2 x i16] [i16 23, i16 7], [2 x i16] [i16 91, i16 7], [2 x i16] [i16 6, i16 3], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 1, i16 4], [2 x i16] [i16 0, i16 4], [2 x i16] [i16 10, i16 6], [2 x i16] [i16 727, i16 10], [2 x i16] [i16 2906, i16 12], [2 x i16] [i16 5808, i16 13], [2 x i16] [i16 5811, i16 13], [2 x i16] [i16 5810, i16 13], [2 x i16] [i16 11629, i16 14], [2 x i16] [i16 11628, i16 14], [2 x i16] [i16 11631, i16 14], [2 x i16] [i16 11630, i16 14], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 10, i16 5], [2 x i16] [i16 4, i16 5], [2 x i16] [i16 44, i16 6], [2 x i16] [i16 23, i16 6], [2 x i16] [i16 3, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 22, i16 7], [2 x i16] [i16 180, i16 8]], [32 x [2 x i16]] [[2 x i16] [i16 5, i16 3], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 5, i16 4], [2 x i16] [i16 9, i16 4], [2 x i16] [i16 51, i16 6], [2 x i16] [i16 403, i16 9], [2 x i16] [i16 6444, i16 13], [2 x i16] [i16 97, i16 8], [2 x i16] [i16 49, i16 7], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 7, i16 3], [2 x i16] [i16 16, i16 5], [2 x i16] [i16 17, i16 5], [2 x i16] [i16 200, i16 8], [2 x i16] [i16 6447, i16 13], [2 x i16] [i16 12891, i16 14], [2 x i16] [i16 12890, i16 14], [2 x i16] [i16 6441, i16 13], [2 x i16] [i16 6440, i16 13], [2 x i16] [i16 6443, i16 13], [2 x i16] [i16 6442, i16 13], [2 x i16] [i16 12893, i16 14], [2 x i16] [i16 12892, i16 14], [2 x i16] [i16 24, i16 5], [2 x i16] [i16 26, i16 6], [2 x i16] [i16 27, i16 6], [2 x i16] [i16 101, i16 7], [2 x i16] [i16 25, i16 6], [2 x i16] [i16 4, i16 4], [2 x i16] [i16 7, i16 4], [2 x i16] [i16 96, i16 8], [2 x i16] [i16 804, i16 10]], [32 x [2 x i16]] [[2 x i16] [i16 6, i16 3], [2 x i16] [i16 0, i16 3], [2 x i16] [i16 2, i16 4], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 473, i16 9], [2 x i16] [i16 7554, i16 13], [2 x i16] [i16 1889, i16 11], [2 x i16] [i16 958, i16 10], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 15, i16 6], [2 x i16] [i16 14, i16 6], [2 x i16] [i16 1890, i16 11], [2 x i16] [i16 15111, i16 14], [2 x i16] [i16 15110, i16 14], [2 x i16] [i16 15133, i16 14], [2 x i16] [i16 15132, i16 14], [2 x i16] [i16 15135, i16 14], [2 x i16] [i16 15134, i16 14], [2 x i16] [i16 15129, i16 14], [2 x i16] [i16 15128, i16 14], [2 x i16] [i16 15131, i16 14], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 478, i16 9], [2 x i16] [i16 237, i16 8], [2 x i16] [i16 959, i16 10], [2 x i16] [i16 238, i16 8], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 6, i16 5], [2 x i16] [i16 3776, i16 12], [2 x i16] [i16 15130, i16 14]], [32 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 2, i16 3], [2 x i16] [i16 15, i16 5], [2 x i16] [i16 6, i16 4], [2 x i16] [i16 28, i16 6], [2 x i16] [i16 464, i16 10], [2 x i16] [i16 3724, i16 13], [2 x i16] [i16 7451, i16 14], [2 x i16] [i16 7450, i16 14], [2 x i16] [i16 3, i16 2], [2 x i16] [i16 2, i16 2], [2 x i16] [i16 234, i16 9], [2 x i16] [i16 233, i16 9], [2 x i16] [i16 3721, i16 13], [2 x i16] [i16 3720, i16 13], [2 x i16] [i16 3723, i16 13], [2 x i16] [i16 3722, i16 13], [2 x i16] [i16 7525, i16 14], [2 x i16] [i16 7524, i16 14], [2 x i16] [i16 7527, i16 14], [2 x i16] [i16 7526, i16 14], [2 x i16] [i16 7521, i16 14], [2 x i16] [i16 7520, i16 14], [2 x i16] [i16 941, i16 11], [2 x i16] [i16 7523, i16 14], [2 x i16] [i16 7522, i16 14], [2 x i16] [i16 7453, i16 14], [2 x i16] [i16 7452, i16 14], [2 x i16] [i16 59, i16 7], [2 x i16] [i16 471, i16 10], [2 x i16] [i16 7455, i16 14], [2 x i16] [i16 7454, i16 14]], [32 x [2 x i16]] [[2 x i16] [i16 2, i16 2], [2 x i16] [i16 15, i16 4], [2 x i16] [i16 28, i16 5], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 428, i16 9], [2 x i16] [i16 6872, i16 13], [2 x i16] [i16 13747, i16 14], [2 x i16] [i16 13746, i16 14], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 0, i16 2], [2 x i16] [i16 105, i16 7], [2 x i16] [i16 104, i16 7], [2 x i16] [i16 13757, i16 14], [2 x i16] [i16 13756, i16 14], [2 x i16] [i16 13759, i16 14], [2 x i16] [i16 13758, i16 14], [2 x i16] [i16 13753, i16 14], [2 x i16] [i16 13752, i16 14], [2 x i16] [i16 13755, i16 14], [2 x i16] [i16 13754, i16 14], [2 x i16] [i16 13749, i16 14], [2 x i16] [i16 13748, i16 14], [2 x i16] [i16 425, i16 9], [2 x i16] [i16 424, i16 9], [2 x i16] [i16 858, i16 10], [2 x i16] [i16 215, i16 8], [2 x i16] [i16 213, i16 8], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 27, i16 5], [2 x i16] [i16 13751, i16 14], [2 x i16] [i16 13750, i16 14]]], align 16
@superblock_run_length_vlc_table = internal constant [34 x [2 x i16]] [[2 x i16] [i16 0, i16 1], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 240, i16 8], [2 x i16] [i16 241, i16 8], [2 x i16] [i16 242, i16 8], [2 x i16] [i16 243, i16 8], [2 x i16] [i16 244, i16 8], [2 x i16] [i16 245, i16 8], [2 x i16] [i16 246, i16 8], [2 x i16] [i16 247, i16 8], [2 x i16] [i16 992, i16 10], [2 x i16] [i16 993, i16 10], [2 x i16] [i16 994, i16 10], [2 x i16] [i16 995, i16 10], [2 x i16] [i16 996, i16 10], [2 x i16] [i16 997, i16 10], [2 x i16] [i16 998, i16 10], [2 x i16] [i16 999, i16 10], [2 x i16] [i16 1000, i16 10], [2 x i16] [i16 1001, i16 10], [2 x i16] [i16 1002, i16 10], [2 x i16] [i16 1003, i16 10], [2 x i16] [i16 1004, i16 10], [2 x i16] [i16 1005, i16 10], [2 x i16] [i16 1006, i16 10], [2 x i16] [i16 1007, i16 10], [2 x i16] [i16 63, i16 6]], align 16
@fragment_run_length_vlc_table = internal constant [30 x [2 x i16]] [[2 x i16] [i16 0, i16 2], [2 x i16] [i16 1, i16 2], [2 x i16] [i16 4, i16 3], [2 x i16] [i16 5, i16 3], [2 x i16] [i16 12, i16 4], [2 x i16] [i16 13, i16 4], [2 x i16] [i16 56, i16 6], [2 x i16] [i16 57, i16 6], [2 x i16] [i16 58, i16 6], [2 x i16] [i16 59, i16 6], [2 x i16] [i16 120, i16 7], [2 x i16] [i16 121, i16 7], [2 x i16] [i16 122, i16 7], [2 x i16] [i16 123, i16 7], [2 x i16] [i16 496, i16 9], [2 x i16] [i16 497, i16 9], [2 x i16] [i16 498, i16 9], [2 x i16] [i16 499, i16 9], [2 x i16] [i16 500, i16 9], [2 x i16] [i16 501, i16 9], [2 x i16] [i16 502, i16 9], [2 x i16] [i16 503, i16 9], [2 x i16] [i16 504, i16 9], [2 x i16] [i16 505, i16 9], [2 x i16] [i16 506, i16 9], [2 x i16] [i16 507, i16 9], [2 x i16] [i16 508, i16 9], [2 x i16] [i16 509, i16 9], [2 x i16] [i16 510, i16 9], [2 x i16] [i16 511, i16 9]], align 16
@mode_code_vlc_table = internal constant [8 x [2 x i8]] [[2 x i8] c"\00\01", [2 x i8] c"\02\02", [2 x i8] c"\06\03", [2 x i8] c"\0E\04", [2 x i8] c"\1E\05", [2 x i8] c">\06", [2 x i8] c"~\07", [2 x i8] c"\7F\07"], align 16
@motion_vector_vlc_table = internal constant [63 x [2 x i8]] [[2 x i8] c"\00\03", [2 x i8] c"\01\03", [2 x i8] c"\02\03", [2 x i8] c"\06\04", [2 x i8] c"\07\04", [2 x i8] c"\08\04", [2 x i8] c"\09\04", [2 x i8] c"(\06", [2 x i8] c")\06", [2 x i8] c"*\06", [2 x i8] c"+\06", [2 x i8] c",\06", [2 x i8] c"-\06", [2 x i8] c".\06", [2 x i8] c"/\06", [2 x i8] c"`\07", [2 x i8] c"a\07", [2 x i8] c"b\07", [2 x i8] c"c\07", [2 x i8] c"d\07", [2 x i8] c"e\07", [2 x i8] c"f\07", [2 x i8] c"g\07", [2 x i8] c"h\07", [2 x i8] c"i\07", [2 x i8] c"j\07", [2 x i8] c"k\07", [2 x i8] c"l\07", [2 x i8] c"m\07", [2 x i8] c"n\07", [2 x i8] c"o\07", [2 x i8] c"\E0\08", [2 x i8] c"\E1\08", [2 x i8] c"\E2\08", [2 x i8] c"\E3\08", [2 x i8] c"\E4\08", [2 x i8] c"\E5\08", [2 x i8] c"\E6\08", [2 x i8] c"\E7\08", [2 x i8] c"\E8\08", [2 x i8] c"\E9\08", [2 x i8] c"\EA\08", [2 x i8] c"\EB\08", [2 x i8] c"\EC\08", [2 x i8] c"\ED\08", [2 x i8] c"\EE\08", [2 x i8] c"\EF\08", [2 x i8] c"\F0\08", [2 x i8] c"\F1\08", [2 x i8] c"\F2\08", [2 x i8] c"\F3\08", [2 x i8] c"\F4\08", [2 x i8] c"\F5\08", [2 x i8] c"\F6\08", [2 x i8] c"\F7\08", [2 x i8] c"\F8\08", [2 x i8] c"\F9\08", [2 x i8] c"\FA\08", [2 x i8] c"\FB\08", [2 x i8] c"\FC\08", [2 x i8] c"\FD\08", [2 x i8] c"\FE\08", [2 x i8] c"\FF\08"], align 16
@.str.39 = private unnamed_addr constant [23 x i8] c"Invalid huffman table\0A\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @vp3_init_thread_copy(%struct.AVCodecContext* %avctx) #0 !dbg !1940 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1941, metadata !1942), !dbg !1943
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !1944, metadata !1942), !dbg !1945
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1946
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1947
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1947
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !1946
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !1945
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1948
  %superblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 34, !dbg !1949
  store i8* null, i8** %superblock_coding, align 16, !dbg !1950
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1951
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 41, !dbg !1952
  store %struct.Vp3Fragment* null, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !1953
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1954
  %coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 58, !dbg !1955
  %arrayidx = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list, i64 0, i64 0, !dbg !1954
  store i32* null, i32** %arrayidx, align 8, !dbg !1956
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1957
  %kf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 59, !dbg !1958
  store i32* null, i32** %kf_coded_fragment_list, align 16, !dbg !1959
  %7 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1960
  %nkf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %7, i32 0, i32 60, !dbg !1961
  store i32* null, i32** %nkf_coded_fragment_list, align 8, !dbg !1962
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1963
  %dct_tokens_base = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 55, !dbg !1964
  store i16* null, i16** %dct_tokens_base, align 8, !dbg !1965
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1966
  %superblock_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 72, !dbg !1967
  store i32* null, i32** %superblock_fragments, align 16, !dbg !1968
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1969
  %macroblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 73, !dbg !1970
  store i8* null, i8** %macroblock_coding, align 8, !dbg !1971
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1972
  %motion_val = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 47, !dbg !1973
  %arrayidx1 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val, i64 0, i64 0, !dbg !1972
  store [2 x i8]* null, [2 x i8]** %arrayidx1, align 16, !dbg !1974
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1975
  %motion_val2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 47, !dbg !1976
  %arrayidx3 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val2, i64 0, i64 1, !dbg !1975
  store [2 x i8]* null, [2 x i8]** %arrayidx3, align 8, !dbg !1977
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1978
  %edge_emu_buffer = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 74, !dbg !1979
  store i8* null, i8** %edge_emu_buffer, align 16, !dbg !1980
  %14 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !1981
  %call = call i32 @init_frames(%struct.Vp3DecodeContext* %14), !dbg !1982
  ret i32 %call, !dbg !1983
}

; Function Attrs: nounwind uwtable
define internal i32 @vp3_update_thread_context(%struct.AVCodecContext* %dst, %struct.AVCodecContext* %src) #0 !dbg !1984 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca %struct.AVCodecContext*, align 8
  %src.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %s1 = alloca %struct.Vp3DecodeContext*, align 8
  %qps_changed = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %y_fragment_count = alloca i32, align 4
  %c_fragment_count = alloca i32, align 4
  store %struct.AVCodecContext* %dst, %struct.AVCodecContext** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %dst.addr, metadata !1985, metadata !1942), !dbg !1986
  store %struct.AVCodecContext* %src, %struct.AVCodecContext** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %src.addr, metadata !1987, metadata !1942), !dbg !1988
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !1989, metadata !1942), !dbg !1990
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dst.addr, align 8, !dbg !1991
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1992
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1992
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !1991
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !1990
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s1, metadata !1993, metadata !1942), !dbg !1994
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %src.addr, align 8, !dbg !1995
  %priv_data1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 6, !dbg !1996
  %4 = load i8*, i8** %priv_data1, align 8, !dbg !1996
  %5 = bitcast i8* %4 to %struct.Vp3DecodeContext*, !dbg !1995
  store %struct.Vp3DecodeContext* %5, %struct.Vp3DecodeContext** %s1, align 8, !dbg !1994
  call void @llvm.dbg.declare(metadata i32* %qps_changed, metadata !1997, metadata !1942), !dbg !1998
  store i32 0, i32* %qps_changed, align 4, !dbg !1998
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1999, metadata !1942), !dbg !2000
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2001, metadata !1942), !dbg !2002
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2003
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 11, !dbg !2005
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame, i32 0, i32 0, !dbg !2006
  %7 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !2006
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 0, !dbg !2007
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !2003
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !2003
  %tobool = icmp ne i8* %8, null, !dbg !2003
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2008

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2009
  %width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 5, !dbg !2010
  %10 = load i32, i32* %width, align 8, !dbg !2010
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2011
  %width2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 5, !dbg !2012
  %12 = load i32, i32* %width2, align 8, !dbg !2012
  %cmp = icmp ne i32 %10, %12, !dbg !2013
  br i1 %cmp, label %if.then, label %lor.lhs.false3, !dbg !2014

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2015
  %height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 6, !dbg !2017
  %14 = load i32, i32* %height, align 4, !dbg !2017
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2018
  %height4 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 6, !dbg !2019
  %16 = load i32, i32* %height4, align 4, !dbg !2019
  %cmp5 = icmp ne i32 %14, %16, !dbg !2020
  br i1 %cmp5, label %if.then, label %if.end8, !dbg !2021

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %17 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2023
  %18 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2026
  %cmp6 = icmp ne %struct.Vp3DecodeContext* %17, %18, !dbg !2027
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !2028

if.then7:                                         ; preds = %if.then
  %19 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2029
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2030
  %call = call i32 @ref_frames(%struct.Vp3DecodeContext* %19, %struct.Vp3DecodeContext* %20), !dbg !2031
  br label %if.end, !dbg !2031

if.end:                                           ; preds = %if.then7, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !2032
  br label %return, !dbg !2032

if.end8:                                          ; preds = %lor.lhs.false3
  %21 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2033
  %22 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2035
  %cmp9 = icmp ne %struct.Vp3DecodeContext* %21, %22, !dbg !2036
  br i1 %cmp9, label %if.then10, label %if.end79, !dbg !2037

if.then10:                                        ; preds = %if.end8
  %23 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2038
  %current_frame11 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %23, i32 0, i32 11, !dbg !2041
  %f12 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame11, i32 0, i32 0, !dbg !2042
  %24 = load %struct.AVFrame*, %struct.AVFrame** %f12, align 8, !dbg !2042
  %tobool13 = icmp ne %struct.AVFrame* %24, null, !dbg !2038
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !2043

if.then14:                                        ; preds = %if.then10
  store i32 -12, i32* %retval, align 4, !dbg !2044
  br label %return, !dbg !2044

if.end15:                                         ; preds = %if.then10
  %25 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2045
  %current_frame16 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %25, i32 0, i32 11, !dbg !2047
  %f17 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame16, i32 0, i32 0, !dbg !2048
  %26 = load %struct.AVFrame*, %struct.AVFrame** %f17, align 8, !dbg !2048
  %data18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 0, !dbg !2049
  %arrayidx19 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data18, i64 0, i64 0, !dbg !2045
  %27 = load i8*, i8** %arrayidx19, align 8, !dbg !2045
  %tobool20 = icmp ne i8* %27, null, !dbg !2045
  br i1 %tobool20, label %if.end43, label %if.then21, !dbg !2050

if.then21:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i32* %y_fragment_count, metadata !2051, metadata !1942), !dbg !2053
  call void @llvm.dbg.declare(metadata i32* %c_fragment_count, metadata !2054, metadata !1942), !dbg !2055
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dst.addr, align 8, !dbg !2056
  %29 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2057
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %29, i32 0, i32 0, !dbg !2058
  store %struct.AVCodecContext* %28, %struct.AVCodecContext** %avctx, align 16, !dbg !2059
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dst.addr, align 8, !dbg !2060
  %call22 = call i32 @allocate_tables(%struct.AVCodecContext* %30), !dbg !2061
  store i32 %call22, i32* %err, align 4, !dbg !2062
  %31 = load i32, i32* %err, align 4, !dbg !2063
  %tobool23 = icmp ne i32 %31, 0, !dbg !2063
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !2065

if.then24:                                        ; preds = %if.then21
  %32 = load i32, i32* %err, align 4, !dbg !2066
  store i32 %32, i32* %retval, align 4, !dbg !2067
  br label %return, !dbg !2067

if.end25:                                         ; preds = %if.then21
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2068
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 39, !dbg !2069
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 0, !dbg !2068
  %34 = load i32, i32* %arrayidx26, align 8, !dbg !2068
  %35 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2070
  %fragment_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %35, i32 0, i32 40, !dbg !2071
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height, i64 0, i64 0, !dbg !2070
  %36 = load i32, i32* %arrayidx27, align 16, !dbg !2070
  %mul = mul nsw i32 %34, %36, !dbg !2072
  store i32 %mul, i32* %y_fragment_count, align 4, !dbg !2073
  %37 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2074
  %fragment_width28 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %37, i32 0, i32 39, !dbg !2075
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width28, i64 0, i64 1, !dbg !2074
  %38 = load i32, i32* %arrayidx29, align 4, !dbg !2074
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2076
  %fragment_height30 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 40, !dbg !2077
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height30, i64 0, i64 1, !dbg !2076
  %40 = load i32, i32* %arrayidx31, align 4, !dbg !2076
  %mul32 = mul nsw i32 %38, %40, !dbg !2078
  store i32 %mul32, i32* %c_fragment_count, align 4, !dbg !2079
  %41 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2080
  %motion_val = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %41, i32 0, i32 47, !dbg !2081
  %arrayidx33 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val, i64 0, i64 0, !dbg !2080
  %42 = load [2 x i8]*, [2 x i8]** %arrayidx33, align 16, !dbg !2080
  %43 = bitcast [2 x i8]* %42 to i8*, !dbg !2082
  %44 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2083
  %motion_val34 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %44, i32 0, i32 47, !dbg !2084
  %arrayidx35 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val34, i64 0, i64 0, !dbg !2083
  %45 = load [2 x i8]*, [2 x i8]** %arrayidx35, align 16, !dbg !2083
  %46 = bitcast [2 x i8]* %45 to i8*, !dbg !2082
  %47 = load i32, i32* %y_fragment_count, align 4, !dbg !2085
  %conv = sext i32 %47 to i64, !dbg !2085
  %mul36 = mul i64 %conv, 2, !dbg !2086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %46, i64 %mul36, i32 1, i1 false), !dbg !2082
  %48 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2087
  %motion_val37 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %48, i32 0, i32 47, !dbg !2088
  %arrayidx38 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val37, i64 0, i64 1, !dbg !2087
  %49 = load [2 x i8]*, [2 x i8]** %arrayidx38, align 8, !dbg !2087
  %50 = bitcast [2 x i8]* %49 to i8*, !dbg !2089
  %51 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2090
  %motion_val39 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %51, i32 0, i32 47, !dbg !2091
  %arrayidx40 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val39, i64 0, i64 1, !dbg !2090
  %52 = load [2 x i8]*, [2 x i8]** %arrayidx40, align 8, !dbg !2090
  %53 = bitcast [2 x i8]* %52 to i8*, !dbg !2089
  %54 = load i32, i32* %c_fragment_count, align 4, !dbg !2092
  %conv41 = sext i32 %54 to i64, !dbg !2092
  %mul42 = mul i64 %conv41, 2, !dbg !2093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %53, i64 %mul42, i32 1, i1 false), !dbg !2089
  br label %if.end43, !dbg !2094

if.end43:                                         ; preds = %if.end25, %if.end15
  %55 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2095
  %56 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2097
  %call44 = call i32 @ref_frames(%struct.Vp3DecodeContext* %55, %struct.Vp3DecodeContext* %56), !dbg !2098
  store i32 %call44, i32* %err, align 4, !dbg !2099
  %cmp45 = icmp slt i32 %call44, 0, !dbg !2100
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !2101

if.then47:                                        ; preds = %if.end43
  %57 = load i32, i32* %err, align 4, !dbg !2102
  store i32 %57, i32* %retval, align 4, !dbg !2103
  br label %return, !dbg !2103

if.end48:                                         ; preds = %if.end43
  %58 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2104
  %keyframe = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %58, i32 0, i32 12, !dbg !2105
  %59 = load i32, i32* %keyframe, align 8, !dbg !2105
  %60 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2106
  %keyframe49 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %60, i32 0, i32 12, !dbg !2107
  store i32 %59, i32* %keyframe49, align 8, !dbg !2108
  store i32 0, i32* %i, align 4, !dbg !2109
  br label %for.cond, !dbg !2111

for.cond:                                         ; preds = %for.inc, %if.end48
  %61 = load i32, i32* %i, align 4, !dbg !2112
  %cmp50 = icmp slt i32 %61, 3, !dbg !2115
  br i1 %cmp50, label %for.body, label %for.end, !dbg !2116

for.body:                                         ; preds = %for.cond
  %62 = load i32, i32* %i, align 4, !dbg !2117
  %idxprom = sext i32 %62 to i64, !dbg !2120
  %63 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2120
  %qps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %63, i32 0, i32 22, !dbg !2121
  %arrayidx52 = getelementptr inbounds [3 x i32], [3 x i32]* %qps, i64 0, i64 %idxprom, !dbg !2120
  %64 = load i32, i32* %arrayidx52, align 4, !dbg !2120
  %65 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2122
  %qps53 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %65, i32 0, i32 22, !dbg !2123
  %arrayidx54 = getelementptr inbounds [3 x i32], [3 x i32]* %qps53, i64 0, i64 1, !dbg !2122
  %66 = load i32, i32* %arrayidx54, align 4, !dbg !2122
  %cmp55 = icmp ne i32 %64, %66, !dbg !2124
  br i1 %cmp55, label %if.then57, label %if.end63, !dbg !2125

if.then57:                                        ; preds = %for.body
  store i32 1, i32* %qps_changed, align 4, !dbg !2126
  %67 = load i32, i32* %i, align 4, !dbg !2128
  %idxprom58 = sext i32 %67 to i64, !dbg !2129
  %68 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2129
  %qmat = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %68, i32 0, i32 71, !dbg !2130
  %arrayidx59 = getelementptr inbounds [3 x [2 x [3 x [64 x i16]]]], [3 x [2 x [3 x [64 x i16]]]]* %qmat, i64 0, i64 %idxprom58, !dbg !2129
  %69 = bitcast [2 x [3 x [64 x i16]]]* %arrayidx59 to i8*, !dbg !2131
  %70 = load i32, i32* %i, align 4, !dbg !2132
  %idxprom60 = sext i32 %70 to i64, !dbg !2133
  %71 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2133
  %qmat61 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %71, i32 0, i32 71, !dbg !2134
  %arrayidx62 = getelementptr inbounds [3 x [2 x [3 x [64 x i16]]]], [3 x [2 x [3 x [64 x i16]]]]* %qmat61, i64 0, i64 %idxprom60, !dbg !2133
  %72 = bitcast [2 x [3 x [64 x i16]]]* %arrayidx62 to i8*, !dbg !2131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %72, i64 768, i32 16, i1 false), !dbg !2131
  br label %if.end63, !dbg !2135

if.end63:                                         ; preds = %if.then57, %for.body
  br label %for.inc, !dbg !2136

for.inc:                                          ; preds = %if.end63
  %73 = load i32, i32* %i, align 4, !dbg !2137
  %inc = add nsw i32 %73, 1, !dbg !2137
  store i32 %inc, i32* %i, align 4, !dbg !2137
  br label %for.cond, !dbg !2139, !llvm.loop !2140

for.end:                                          ; preds = %for.cond
  %74 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2142
  %qps64 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %74, i32 0, i32 22, !dbg !2144
  %arrayidx65 = getelementptr inbounds [3 x i32], [3 x i32]* %qps64, i64 0, i64 0, !dbg !2142
  %75 = load i32, i32* %arrayidx65, align 4, !dbg !2142
  %76 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2145
  %qps66 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %76, i32 0, i32 22, !dbg !2146
  %arrayidx67 = getelementptr inbounds [3 x i32], [3 x i32]* %qps66, i64 0, i64 0, !dbg !2145
  %77 = load i32, i32* %arrayidx67, align 4, !dbg !2145
  %cmp68 = icmp ne i32 %75, %77, !dbg !2147
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !2148

if.then70:                                        ; preds = %for.end
  %78 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2149
  %bounding_values_array = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %78, i32 0, i32 81, !dbg !2150
  %79 = bitcast [258 x i32]* %bounding_values_array to i8*, !dbg !2151
  %80 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2152
  %bounding_values_array71 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %80, i32 0, i32 81, !dbg !2153
  %81 = bitcast [258 x i32]* %bounding_values_array71 to i8*, !dbg !2151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %81, i64 1032, i32 8, i1 false), !dbg !2151
  br label %if.end72, !dbg !2151

if.end72:                                         ; preds = %if.then70, %for.end
  %82 = load i32, i32* %qps_changed, align 4, !dbg !2154
  %tobool73 = icmp ne i32 %82, 0, !dbg !2154
  br i1 %tobool73, label %if.then74, label %if.end78, !dbg !2156

if.then74:                                        ; preds = %if.end72
  %83 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2157
  %qps75 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %83, i32 0, i32 22, !dbg !2158
  %84 = bitcast [3 x i32]* %qps75 to i8*, !dbg !2159
  %85 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s1, align 8, !dbg !2160
  %qps76 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %85, i32 0, i32 22, !dbg !2161
  %86 = bitcast [3 x i32]* %qps76 to i8*, !dbg !2159
  %87 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2162
  %superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %87, i32 0, i32 25, !dbg !2163
  %88 = bitcast i32* %superblock_count to i8*, !dbg !2164
  %89 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2165
  %qps77 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %89, i32 0, i32 22, !dbg !2166
  %90 = bitcast [3 x i32]* %qps77 to i8*, !dbg !2167
  %sub.ptr.lhs.cast = ptrtoint i8* %88 to i64, !dbg !2168
  %sub.ptr.rhs.cast = ptrtoint i8* %90 to i64, !dbg !2168
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %86, i64 %sub.ptr.sub, i32 4, i1 false), !dbg !2159
  br label %if.end78, !dbg !2159

if.end78:                                         ; preds = %if.then74, %if.end72
  br label %if.end79, !dbg !2169

if.end79:                                         ; preds = %if.end78, %if.end8
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dst.addr, align 8, !dbg !2170
  %call80 = call i32 @update_frames(%struct.AVCodecContext* %91), !dbg !2171
  store i32 %call80, i32* %retval, align 4, !dbg !2172
  br label %return, !dbg !2172

return:                                           ; preds = %if.end79, %if.then47, %if.then24, %if.then14, %if.end
  %92 = load i32, i32* %retval, align 4, !dbg !2173
  ret i32 %92, !dbg !2173
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @theora_decode_init(%struct.AVCodecContext* %avctx) #1 !dbg !2174 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %ptype = alloca i32, align 4
  %header_start = alloca [3 x i8*], align 16
  %header_len = alloca [3 x i32], align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2175, metadata !1942), !dbg !2176
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !2177, metadata !1942), !dbg !2178
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2179
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2180
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2180
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !2179
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !2178
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !2181, metadata !1942), !dbg !2191
  call void @llvm.dbg.declare(metadata i32* %ptype, metadata !2192, metadata !1942), !dbg !2193
  call void @llvm.dbg.declare(metadata [3 x i8*]* %header_start, metadata !2194, metadata !1942), !dbg !2196
  call void @llvm.dbg.declare(metadata [3 x i32]* %header_len, metadata !2197, metadata !1942), !dbg !2198
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2199, metadata !1942), !dbg !2200
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2201, metadata !1942), !dbg !2202
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2203
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 25, !dbg !2204
  store i32 0, i32* %pix_fmt, align 8, !dbg !2205
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2206
  %theora = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 1, !dbg !2207
  store i32 1, i32* %theora, align 8, !dbg !2208
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2209
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 16, !dbg !2211
  %6 = load i32, i32* %extradata_size, align 8, !dbg !2211
  %tobool = icmp ne i32 %6, 0, !dbg !2209
  br i1 %tobool, label %if.end, label %if.then, !dbg !2212

if.then:                                          ; preds = %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2213
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !2213
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0)), !dbg !2215
  store i32 -1, i32* %retval, align 4, !dbg !2216
  br label %return, !dbg !2216

if.end:                                           ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2217
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 15, !dbg !2219
  %10 = load i8*, i8** %extradata, align 8, !dbg !2219
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2220
  %extradata_size1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 16, !dbg !2221
  %12 = load i32, i32* %extradata_size1, align 8, !dbg !2221
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %header_start, i32 0, i32 0, !dbg !2222
  %arraydecay2 = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i32 0, i32 0, !dbg !2223
  %call = call i32 @avpriv_split_xiph_headers(i8* %10, i32 %12, i32 42, i8** %arraydecay, i32* %arraydecay2), !dbg !2224
  %cmp = icmp slt i32 %call, 0, !dbg !2225
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !2226

if.then3:                                         ; preds = %if.end
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2227
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !2227
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0)), !dbg !2229
  store i32 -1, i32* %retval, align 4, !dbg !2230
  br label %return, !dbg !2230

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !2231
  br label %for.cond, !dbg !2233

for.cond:                                         ; preds = %for.inc, %if.end4
  %15 = load i32, i32* %i, align 4, !dbg !2234
  %cmp5 = icmp slt i32 %15, 3, !dbg !2237
  br i1 %cmp5, label %for.body, label %for.end, !dbg !2238

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !2239
  %idxprom = sext i32 %16 to i64, !dbg !2242
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i64 0, i64 %idxprom, !dbg !2242
  %17 = load i32, i32* %arrayidx, align 4, !dbg !2242
  %cmp6 = icmp sle i32 %17, 0, !dbg !2243
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2244

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !2245

if.end8:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !2246
  %idxprom9 = sext i32 %18 to i64, !dbg !2247
  %arrayidx10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %header_start, i64 0, i64 %idxprom9, !dbg !2247
  %19 = load i8*, i8** %arrayidx10, align 8, !dbg !2247
  %20 = load i32, i32* %i, align 4, !dbg !2248
  %idxprom11 = sext i32 %20 to i64, !dbg !2249
  %arrayidx12 = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i64 0, i64 %idxprom11, !dbg !2249
  %21 = load i32, i32* %arrayidx12, align 4, !dbg !2249
  %call13 = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %19, i32 %21), !dbg !2250
  store i32 %call13, i32* %ret, align 4, !dbg !2251
  %22 = load i32, i32* %ret, align 4, !dbg !2252
  %cmp14 = icmp slt i32 %22, 0, !dbg !2254
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2255

if.then15:                                        ; preds = %if.end8
  %23 = load i32, i32* %ret, align 4, !dbg !2256
  store i32 %23, i32* %retval, align 4, !dbg !2257
  br label %return, !dbg !2257

if.end16:                                         ; preds = %if.end8
  %call17 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !2258
  store i32 %call17, i32* %ptype, align 4, !dbg !2259
  %24 = load i32, i32* %ptype, align 4, !dbg !2260
  %and = and i32 %24, 128, !dbg !2262
  %tobool18 = icmp ne i32 %and, 0, !dbg !2262
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !2263

if.then19:                                        ; preds = %if.end16
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2264
  %26 = bitcast %struct.AVCodecContext* %25 to i8*, !dbg !2264
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0)), !dbg !2266
  br label %if.end20, !dbg !2267

if.end20:                                         ; preds = %if.then19, %if.end16
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 48), !dbg !2268
  %27 = load i32, i32* %ptype, align 4, !dbg !2269
  switch i32 %27, label %sw.default [
    i32 128, label %sw.bb
    i32 129, label %sw.bb25
    i32 130, label %sw.bb26
  ], !dbg !2270

sw.bb:                                            ; preds = %if.end20
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2271
  %call21 = call i32 @theora_decode_header(%struct.AVCodecContext* %28, %struct.GetBitContext* %gb), !dbg !2274
  %cmp22 = icmp slt i32 %call21, 0, !dbg !2275
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2276

if.then23:                                        ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !2277
  br label %return, !dbg !2277

if.end24:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !2278

sw.bb25:                                          ; preds = %if.end20
  br label %sw.epilog, !dbg !2279

sw.bb26:                                          ; preds = %if.end20
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2280
  %call27 = call i32 @theora_decode_tables(%struct.AVCodecContext* %29, %struct.GetBitContext* %gb), !dbg !2282
  %tobool28 = icmp ne i32 %call27, 0, !dbg !2282
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !2283

if.then29:                                        ; preds = %sw.bb26
  store i32 -1, i32* %retval, align 4, !dbg !2284
  br label %return, !dbg !2284

if.end30:                                         ; preds = %sw.bb26
  br label %sw.epilog, !dbg !2285

sw.default:                                       ; preds = %if.end20
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2286
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !2286
  %32 = load i32, i32* %ptype, align 4, !dbg !2287
  %and31 = and i32 %32, -129, !dbg !2288
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0), i32 %and31), !dbg !2289
  br label %sw.epilog, !dbg !2290

sw.epilog:                                        ; preds = %sw.default, %if.end30, %sw.bb25, %if.end24
  %33 = load i32, i32* %ptype, align 4, !dbg !2291
  %cmp32 = icmp ne i32 %33, 129, !dbg !2293
  br i1 %cmp32, label %land.lhs.true, label %if.end42, !dbg !2294

land.lhs.true:                                    ; preds = %sw.epilog
  %34 = load i32, i32* %i, align 4, !dbg !2295
  %idxprom33 = sext i32 %34 to i64, !dbg !2297
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i64 0, i64 %idxprom33, !dbg !2297
  %35 = load i32, i32* %arrayidx34, align 4, !dbg !2297
  %mul = mul nsw i32 8, %35, !dbg !2298
  %call35 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !2299
  %cmp36 = icmp ne i32 %mul, %call35, !dbg !2300
  br i1 %cmp36, label %if.then37, label %if.end42, !dbg !2301

if.then37:                                        ; preds = %land.lhs.true
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2302
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !2302
  %38 = load i32, i32* %i, align 4, !dbg !2303
  %idxprom38 = sext i32 %38 to i64, !dbg !2304
  %arrayidx39 = getelementptr inbounds [3 x i32], [3 x i32]* %header_len, i64 0, i64 %idxprom38, !dbg !2304
  %39 = load i32, i32* %arrayidx39, align 4, !dbg !2304
  %mul40 = mul nsw i32 8, %39, !dbg !2305
  %call41 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !2306
  %sub = sub nsw i32 %mul40, %call41, !dbg !2307
  %40 = load i32, i32* %ptype, align 4, !dbg !2308
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i32 %sub, i32 %40), !dbg !2309
  br label %if.end42, !dbg !2309

if.end42:                                         ; preds = %if.then37, %land.lhs.true, %sw.epilog
  %41 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2310
  %theora43 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %41, i32 0, i32 1, !dbg !2312
  %42 = load i32, i32* %theora43, align 8, !dbg !2312
  %cmp44 = icmp slt i32 %42, 197120, !dbg !2313
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !2314

if.then45:                                        ; preds = %if.end42
  br label %for.end, !dbg !2315

if.end46:                                         ; preds = %if.end42
  br label %for.inc, !dbg !2316

for.inc:                                          ; preds = %if.end46, %if.then7
  %43 = load i32, i32* %i, align 4, !dbg !2317
  %inc = add nsw i32 %43, 1, !dbg !2317
  store i32 %inc, i32* %i, align 4, !dbg !2317
  br label %for.cond, !dbg !2319, !llvm.loop !2320

for.end:                                          ; preds = %if.then45, %for.cond
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2322
  %call47 = call i32 @vp3_decode_init(%struct.AVCodecContext* %44), !dbg !2323
  store i32 %call47, i32* %retval, align 4, !dbg !2324
  br label %return, !dbg !2324

return:                                           ; preds = %for.end, %if.then29, %if.then23, %if.then15, %if.then3, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !2325
  ret i32 %45, !dbg !2325
}

; Function Attrs: nounwind uwtable
define internal i32 @vp3_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #0 !dbg !2326 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %type = alloca i32, align 4
  %height = alloca i32, align 4
  %row = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2327, metadata !1942), !dbg !2328
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2329, metadata !1942), !dbg !2330
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !2331, metadata !1942), !dbg !2332
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2333, metadata !1942), !dbg !2334
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2335, metadata !1942), !dbg !2336
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2337
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2337
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2336
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2338, metadata !1942), !dbg !2339
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2340
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !2341
  %3 = load i8*, i8** %data1, align 8, !dbg !2341
  store i8* %3, i8** %buf, align 8, !dbg !2339
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2342, metadata !1942), !dbg !2343
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2344
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !2345
  %5 = load i32, i32* %size, align 8, !dbg !2345
  store i32 %5, i32* %buf_size, align 4, !dbg !2343
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !2346, metadata !1942), !dbg !2347
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2348
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !2349
  %7 = load i8*, i8** %priv_data, align 8, !dbg !2349
  %8 = bitcast i8* %7 to %struct.Vp3DecodeContext*, !dbg !2348
  store %struct.Vp3DecodeContext* %8, %struct.Vp3DecodeContext** %s, align 8, !dbg !2347
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !2350, metadata !1942), !dbg !2351
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2352, metadata !1942), !dbg !2353
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2354, metadata !1942), !dbg !2355
  %9 = load i8*, i8** %buf, align 8, !dbg !2356
  %10 = load i32, i32* %buf_size, align 4, !dbg !2358
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %9, i32 %10), !dbg !2359
  store i32 %call, i32* %ret, align 4, !dbg !2360
  %cmp = icmp slt i32 %call, 0, !dbg !2361
  br i1 %cmp, label %if.then, label %if.end, !dbg !2362

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !2363
  store i32 %11, i32* %retval, align 4, !dbg !2364
  br label %return, !dbg !2364

if.end:                                           ; preds = %entry
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2365
  %theora = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 1, !dbg !2367
  %13 = load i32, i32* %theora, align 8, !dbg !2367
  %tobool = icmp ne i32 %13, 0, !dbg !2365
  br i1 %tobool, label %land.lhs.true, label %if.end36, !dbg !2368

land.lhs.true:                                    ; preds = %if.end
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2369
  %tobool3 = icmp ne i32 %call2, 0, !dbg !2369
  br i1 %tobool3, label %if.then4, label %if.end36, !dbg !2371

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %type, metadata !2372, metadata !1942), !dbg !2374
  %call5 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 7), !dbg !2375
  store i32 %call5, i32* %type, align 4, !dbg !2374
  call void @skip_bits_long(%struct.GetBitContext* %gb, i32 48), !dbg !2376
  %14 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2377
  %avctx6 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %14, i32 0, i32 0, !dbg !2379
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 16, !dbg !2379
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 148, !dbg !2380
  %16 = load i32, i32* %active_thread_type, align 8, !dbg !2380
  %and = and i32 %16, 1, !dbg !2381
  %tobool7 = icmp ne i32 %and, 0, !dbg !2381
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !2382

if.then8:                                         ; preds = %if.then4
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2383
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !2383
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i32 0, i32 0)), !dbg !2385
  store i32 -1163346256, i32* %retval, align 4, !dbg !2386
  br label %return, !dbg !2386

if.end9:                                          ; preds = %if.then4
  %19 = load i32, i32* %type, align 4, !dbg !2387
  %cmp10 = icmp eq i32 %19, 0, !dbg !2389
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !2390

if.then11:                                        ; preds = %if.end9
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2391
  %call12 = call i32 @vp3_decode_end(%struct.AVCodecContext* %20), !dbg !2393
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2394
  %call13 = call i32 @theora_decode_header(%struct.AVCodecContext* %21, %struct.GetBitContext* %gb), !dbg !2395
  store i32 %call13, i32* %ret, align 4, !dbg !2396
  %22 = load i32, i32* %ret, align 4, !dbg !2397
  %cmp14 = icmp sge i32 %22, 0, !dbg !2399
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !2400

if.then15:                                        ; preds = %if.then11
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2401
  %call16 = call i32 @vp3_decode_init(%struct.AVCodecContext* %23), !dbg !2402
  store i32 %call16, i32* %ret, align 4, !dbg !2403
  br label %if.end17, !dbg !2404

if.end17:                                         ; preds = %if.then15, %if.then11
  %24 = load i32, i32* %ret, align 4, !dbg !2405
  %cmp18 = icmp slt i32 %24, 0, !dbg !2407
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !2408

if.then19:                                        ; preds = %if.end17
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2409
  %call20 = call i32 @vp3_decode_end(%struct.AVCodecContext* %25), !dbg !2411
  %26 = load i32, i32* %ret, align 4, !dbg !2412
  store i32 %26, i32* %retval, align 4, !dbg !2413
  br label %return, !dbg !2413

if.end21:                                         ; preds = %if.end17
  %27 = load i32, i32* %buf_size, align 4, !dbg !2414
  store i32 %27, i32* %retval, align 4, !dbg !2415
  br label %return, !dbg !2415

if.else:                                          ; preds = %if.end9
  %28 = load i32, i32* %type, align 4, !dbg !2416
  %cmp22 = icmp eq i32 %28, 2, !dbg !2418
  br i1 %cmp22, label %if.then23, label %if.end34, !dbg !2419

if.then23:                                        ; preds = %if.else
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2420
  %call24 = call i32 @vp3_decode_end(%struct.AVCodecContext* %29), !dbg !2422
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2423
  %call25 = call i32 @theora_decode_tables(%struct.AVCodecContext* %30, %struct.GetBitContext* %gb), !dbg !2424
  store i32 %call25, i32* %ret, align 4, !dbg !2425
  %31 = load i32, i32* %ret, align 4, !dbg !2426
  %cmp26 = icmp sge i32 %31, 0, !dbg !2428
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !2429

if.then27:                                        ; preds = %if.then23
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2430
  %call28 = call i32 @vp3_decode_init(%struct.AVCodecContext* %32), !dbg !2431
  store i32 %call28, i32* %ret, align 4, !dbg !2432
  br label %if.end29, !dbg !2433

if.end29:                                         ; preds = %if.then27, %if.then23
  %33 = load i32, i32* %ret, align 4, !dbg !2434
  %cmp30 = icmp slt i32 %33, 0, !dbg !2436
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !2437

if.then31:                                        ; preds = %if.end29
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2438
  %call32 = call i32 @vp3_decode_end(%struct.AVCodecContext* %34), !dbg !2440
  %35 = load i32, i32* %ret, align 4, !dbg !2441
  store i32 %35, i32* %retval, align 4, !dbg !2442
  br label %return, !dbg !2442

if.end33:                                         ; preds = %if.end29
  %36 = load i32, i32* %buf_size, align 4, !dbg !2443
  store i32 %36, i32* %retval, align 4, !dbg !2444
  br label %return, !dbg !2444

if.end34:                                         ; preds = %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2445
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !2445
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19, i32 0, i32 0)), !dbg !2446
  store i32 -1, i32* %retval, align 4, !dbg !2447
  br label %return, !dbg !2447

if.end36:                                         ; preds = %land.lhs.true, %if.end
  %call37 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2448
  %tobool38 = icmp ne i32 %call37, 0, !dbg !2449
  %lnot = xor i1 %tobool38, true, !dbg !2449
  %lnot.ext = zext i1 %lnot to i32, !dbg !2449
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2450
  %keyframe = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 12, !dbg !2451
  store i32 %lnot.ext, i32* %keyframe, align 8, !dbg !2452
  %40 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2453
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %40, i32 0, i32 41, !dbg !2455
  %41 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !2455
  %tobool39 = icmp ne %struct.Vp3Fragment* %41, null, !dbg !2453
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !2456

if.then40:                                        ; preds = %if.end36
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2457
  %43 = bitcast %struct.AVCodecContext* %42 to i8*, !dbg !2457
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i32 0, i32 0)), !dbg !2459
  store i32 -1, i32* %retval, align 4, !dbg !2460
  br label %return, !dbg !2460

if.end41:                                         ; preds = %if.end36
  %44 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2461
  %theora42 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %44, i32 0, i32 1, !dbg !2463
  %45 = load i32, i32* %theora42, align 8, !dbg !2463
  %tobool43 = icmp ne i32 %45, 0, !dbg !2461
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !2464

if.then44:                                        ; preds = %if.end41
  call void @skip_bits(%struct.GetBitContext* %gb, i32 1), !dbg !2465
  br label %if.end45, !dbg !2465

if.end45:                                         ; preds = %if.then44, %if.end41
  store i32 0, i32* %i, align 4, !dbg !2466
  br label %for.cond, !dbg !2468

for.cond:                                         ; preds = %for.inc, %if.end45
  %46 = load i32, i32* %i, align 4, !dbg !2469
  %cmp46 = icmp slt i32 %46, 3, !dbg !2472
  br i1 %cmp46, label %for.body, label %for.end, !dbg !2473

for.body:                                         ; preds = %for.cond
  %47 = load i32, i32* %i, align 4, !dbg !2474
  %idxprom = sext i32 %47 to i64, !dbg !2475
  %48 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2475
  %qps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %48, i32 0, i32 22, !dbg !2476
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %qps, i64 0, i64 %idxprom, !dbg !2475
  %49 = load i32, i32* %arrayidx, align 4, !dbg !2475
  %50 = load i32, i32* %i, align 4, !dbg !2477
  %idxprom47 = sext i32 %50 to i64, !dbg !2478
  %51 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2478
  %last_qps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %51, i32 0, i32 24, !dbg !2479
  %arrayidx48 = getelementptr inbounds [3 x i32], [3 x i32]* %last_qps, i64 0, i64 %idxprom47, !dbg !2478
  store i32 %49, i32* %arrayidx48, align 4, !dbg !2480
  br label %for.inc, !dbg !2478

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %i, align 4, !dbg !2481
  %inc = add nsw i32 %52, 1, !dbg !2481
  store i32 %inc, i32* %i, align 4, !dbg !2481
  br label %for.cond, !dbg !2483, !llvm.loop !2484

for.end:                                          ; preds = %for.cond
  %53 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2486
  %nqps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %53, i32 0, i32 23, !dbg !2487
  store i32 0, i32* %nqps, align 8, !dbg !2488
  br label %do.body, !dbg !2489, !llvm.loop !2490

do.body:                                          ; preds = %land.end, %for.end
  %call49 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 6), !dbg !2491
  %54 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2493
  %nqps50 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %54, i32 0, i32 23, !dbg !2494
  %55 = load i32, i32* %nqps50, align 8, !dbg !2495
  %inc51 = add nsw i32 %55, 1, !dbg !2495
  store i32 %inc51, i32* %nqps50, align 8, !dbg !2495
  %idxprom52 = sext i32 %55 to i64, !dbg !2496
  %56 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2496
  %qps53 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %56, i32 0, i32 22, !dbg !2497
  %arrayidx54 = getelementptr inbounds [3 x i32], [3 x i32]* %qps53, i64 0, i64 %idxprom52, !dbg !2496
  store i32 %call49, i32* %arrayidx54, align 4, !dbg !2498
  br label %do.cond, !dbg !2499

do.cond:                                          ; preds = %do.body
  %57 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2500
  %theora55 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %57, i32 0, i32 1, !dbg !2502
  %58 = load i32, i32* %theora55, align 8, !dbg !2502
  %cmp56 = icmp sge i32 %58, 197120, !dbg !2503
  br i1 %cmp56, label %land.lhs.true57, label %land.end, !dbg !2504

land.lhs.true57:                                  ; preds = %do.cond
  %59 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2505
  %nqps58 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %59, i32 0, i32 23, !dbg !2507
  %60 = load i32, i32* %nqps58, align 8, !dbg !2507
  %cmp59 = icmp slt i32 %60, 3, !dbg !2508
  br i1 %cmp59, label %land.rhs, label %land.end, !dbg !2509

land.rhs:                                         ; preds = %land.lhs.true57
  %call60 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2510
  %tobool61 = icmp ne i32 %call60, 0, !dbg !2512
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true57, %do.cond
  %61 = phi i1 [ false, %land.lhs.true57 ], [ false, %do.cond ], [ %tobool61, %land.rhs ]
  br i1 %61, label %do.body, label %do.end, !dbg !2513, !llvm.loop !2490

do.end:                                           ; preds = %land.end
  %62 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2515
  %nqps62 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %62, i32 0, i32 23, !dbg !2517
  %63 = load i32, i32* %nqps62, align 8, !dbg !2517
  store i32 %63, i32* %i, align 4, !dbg !2518
  br label %for.cond63, !dbg !2519

for.cond63:                                       ; preds = %for.inc69, %do.end
  %64 = load i32, i32* %i, align 4, !dbg !2520
  %cmp64 = icmp slt i32 %64, 3, !dbg !2523
  br i1 %cmp64, label %for.body65, label %for.end71, !dbg !2524

for.body65:                                       ; preds = %for.cond63
  %65 = load i32, i32* %i, align 4, !dbg !2525
  %idxprom66 = sext i32 %65 to i64, !dbg !2526
  %66 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2526
  %qps67 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %66, i32 0, i32 22, !dbg !2527
  %arrayidx68 = getelementptr inbounds [3 x i32], [3 x i32]* %qps67, i64 0, i64 %idxprom66, !dbg !2526
  store i32 -1, i32* %arrayidx68, align 4, !dbg !2528
  br label %for.inc69, !dbg !2526

for.inc69:                                        ; preds = %for.body65
  %67 = load i32, i32* %i, align 4, !dbg !2529
  %inc70 = add nsw i32 %67, 1, !dbg !2529
  store i32 %inc70, i32* %i, align 4, !dbg !2529
  br label %for.cond63, !dbg !2531, !llvm.loop !2532

for.end71:                                        ; preds = %for.cond63
  %68 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2534
  %avctx72 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %68, i32 0, i32 0, !dbg !2536
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx72, align 16, !dbg !2536
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 134, !dbg !2537
  %70 = load i32, i32* %debug, align 4, !dbg !2537
  %and73 = and i32 %70, 1, !dbg !2538
  %tobool74 = icmp ne i32 %and73, 0, !dbg !2538
  br i1 %tobool74, label %if.then75, label %if.end81, !dbg !2539

if.then75:                                        ; preds = %for.end71
  %71 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2540
  %avctx76 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %71, i32 0, i32 0, !dbg !2541
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx76, align 16, !dbg !2541
  %73 = bitcast %struct.AVCodecContext* %72 to i8*, !dbg !2540
  %74 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2542
  %keyframe77 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %74, i32 0, i32 12, !dbg !2543
  %75 = load i32, i32* %keyframe77, align 8, !dbg !2543
  %tobool78 = icmp ne i32 %75, 0, !dbg !2542
  %cond = select i1 %tobool78, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i32 0, i32 0), !dbg !2542
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2544
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 86, !dbg !2545
  %77 = load i32, i32* %frame_number, align 8, !dbg !2545
  %add = add nsw i32 %77, 1, !dbg !2546
  %78 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2547
  %qps79 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %78, i32 0, i32 22, !dbg !2548
  %arrayidx80 = getelementptr inbounds [3 x i32], [3 x i32]* %qps79, i64 0, i64 0, !dbg !2547
  %79 = load i32, i32* %arrayidx80, align 4, !dbg !2547
  call void (i8*, i32, i8*, ...) @av_log(i8* %73, i32 32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0), i8* %cond, i32 %add, i32 %79), !dbg !2549
  br label %if.end81, !dbg !2549

if.end81:                                         ; preds = %if.then75, %for.end71
  %80 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2550
  %qps82 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %80, i32 0, i32 22, !dbg !2551
  %arrayidx83 = getelementptr inbounds [3 x i32], [3 x i32]* %qps82, i64 0, i64 0, !dbg !2550
  %81 = load i32, i32* %arrayidx83, align 4, !dbg !2550
  %idxprom84 = sext i32 %81 to i64, !dbg !2552
  %82 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2552
  %filter_limit_values = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %82, i32 0, i32 80, !dbg !2553
  %arrayidx85 = getelementptr inbounds [64 x i8], [64 x i8]* %filter_limit_values, i64 0, i64 %idxprom84, !dbg !2552
  %83 = load i8, i8* %arrayidx85, align 1, !dbg !2552
  %tobool86 = icmp ne i8 %83, 0, !dbg !2552
  br i1 %tobool86, label %lor.rhs, label %lor.end, !dbg !2554

lor.rhs:                                          ; preds = %if.end81
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2555
  %skip_loop_filter = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %84, i32 0, i32 155, !dbg !2556
  %85 = load i32, i32* %skip_loop_filter, align 4, !dbg !2556
  %86 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2557
  %keyframe87 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %86, i32 0, i32 12, !dbg !2558
  %87 = load i32, i32* %keyframe87, align 8, !dbg !2558
  %tobool88 = icmp ne i32 %87, 0, !dbg !2557
  %cond89 = select i1 %tobool88, i32 48, i32 32, !dbg !2557
  %cmp90 = icmp sge i32 %85, %cond89, !dbg !2559
  br label %lor.end, !dbg !2560

lor.end:                                          ; preds = %lor.rhs, %if.end81
  %88 = phi i1 [ true, %if.end81 ], [ %cmp90, %lor.rhs ]
  %lor.ext = zext i1 %88 to i32, !dbg !2561
  %89 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2562
  %skip_loop_filter91 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %89, i32 0, i32 21, !dbg !2563
  store i32 %lor.ext, i32* %skip_loop_filter91, align 8, !dbg !2564
  %90 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2565
  %qps92 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %90, i32 0, i32 22, !dbg !2567
  %arrayidx93 = getelementptr inbounds [3 x i32], [3 x i32]* %qps92, i64 0, i64 0, !dbg !2565
  %91 = load i32, i32* %arrayidx93, align 4, !dbg !2565
  %92 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2568
  %last_qps94 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %92, i32 0, i32 24, !dbg !2569
  %arrayidx95 = getelementptr inbounds [3 x i32], [3 x i32]* %last_qps94, i64 0, i64 0, !dbg !2568
  %93 = load i32, i32* %arrayidx95, align 4, !dbg !2568
  %cmp96 = icmp ne i32 %91, %93, !dbg !2570
  br i1 %cmp96, label %if.then97, label %if.end98, !dbg !2571

if.then97:                                        ; preds = %lor.end
  %94 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2572
  call void @init_loop_filter(%struct.Vp3DecodeContext* %94), !dbg !2573
  br label %if.end98, !dbg !2573

if.end98:                                         ; preds = %if.then97, %lor.end
  store i32 0, i32* %i, align 4, !dbg !2574
  br label %for.cond99, !dbg !2576

for.cond99:                                       ; preds = %for.inc117, %if.end98
  %95 = load i32, i32* %i, align 4, !dbg !2577
  %96 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2580
  %nqps100 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %96, i32 0, i32 23, !dbg !2581
  %97 = load i32, i32* %nqps100, align 8, !dbg !2581
  %cmp101 = icmp slt i32 %95, %97, !dbg !2582
  br i1 %cmp101, label %for.body102, label %for.end119, !dbg !2583

for.body102:                                      ; preds = %for.cond99
  %98 = load i32, i32* %i, align 4, !dbg !2584
  %idxprom103 = sext i32 %98 to i64, !dbg !2586
  %99 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2586
  %qps104 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %99, i32 0, i32 22, !dbg !2587
  %arrayidx105 = getelementptr inbounds [3 x i32], [3 x i32]* %qps104, i64 0, i64 %idxprom103, !dbg !2586
  %100 = load i32, i32* %arrayidx105, align 4, !dbg !2586
  %101 = load i32, i32* %i, align 4, !dbg !2588
  %idxprom106 = sext i32 %101 to i64, !dbg !2589
  %102 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2589
  %last_qps107 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %102, i32 0, i32 24, !dbg !2590
  %arrayidx108 = getelementptr inbounds [3 x i32], [3 x i32]* %last_qps107, i64 0, i64 %idxprom106, !dbg !2589
  %103 = load i32, i32* %arrayidx108, align 4, !dbg !2589
  %cmp109 = icmp ne i32 %100, %103, !dbg !2591
  br i1 %cmp109, label %if.then115, label %lor.lhs.false, !dbg !2592

lor.lhs.false:                                    ; preds = %for.body102
  %104 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2593
  %qps110 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %104, i32 0, i32 22, !dbg !2595
  %arrayidx111 = getelementptr inbounds [3 x i32], [3 x i32]* %qps110, i64 0, i64 0, !dbg !2593
  %105 = load i32, i32* %arrayidx111, align 4, !dbg !2593
  %106 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2596
  %last_qps112 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %106, i32 0, i32 24, !dbg !2597
  %arrayidx113 = getelementptr inbounds [3 x i32], [3 x i32]* %last_qps112, i64 0, i64 0, !dbg !2596
  %107 = load i32, i32* %arrayidx113, align 4, !dbg !2596
  %cmp114 = icmp ne i32 %105, %107, !dbg !2598
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !2599

if.then115:                                       ; preds = %lor.lhs.false, %for.body102
  %108 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2600
  %109 = load i32, i32* %i, align 4, !dbg !2601
  call void @init_dequantizer(%struct.Vp3DecodeContext* %108, i32 %109), !dbg !2602
  br label %if.end116, !dbg !2602

if.end116:                                        ; preds = %if.then115, %lor.lhs.false
  br label %for.inc117, !dbg !2603

for.inc117:                                       ; preds = %if.end116
  %110 = load i32, i32* %i, align 4, !dbg !2605
  %inc118 = add nsw i32 %110, 1, !dbg !2605
  store i32 %inc118, i32* %i, align 4, !dbg !2605
  br label %for.cond99, !dbg !2607, !llvm.loop !2608

for.end119:                                       ; preds = %for.cond99
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2610
  %skip_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 157, !dbg !2612
  %112 = load i32, i32* %skip_frame, align 4, !dbg !2612
  %cmp120 = icmp sge i32 %112, 32, !dbg !2613
  br i1 %cmp120, label %land.lhs.true121, label %if.end125, !dbg !2614

land.lhs.true121:                                 ; preds = %for.end119
  %113 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2615
  %keyframe122 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %113, i32 0, i32 12, !dbg !2617
  %114 = load i32, i32* %keyframe122, align 8, !dbg !2617
  %tobool123 = icmp ne i32 %114, 0, !dbg !2615
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !2618

if.then124:                                       ; preds = %land.lhs.true121
  %115 = load i32, i32* %buf_size, align 4, !dbg !2619
  store i32 %115, i32* %retval, align 4, !dbg !2620
  br label %return, !dbg !2620

if.end125:                                        ; preds = %land.lhs.true121, %for.end119
  %116 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2621
  %keyframe126 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %116, i32 0, i32 12, !dbg !2622
  %117 = load i32, i32* %keyframe126, align 8, !dbg !2622
  %tobool127 = icmp ne i32 %117, 0, !dbg !2621
  %cond128 = select i1 %tobool127, i32 1, i32 2, !dbg !2621
  %118 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2623
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %118, i32 0, i32 11, !dbg !2624
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame, i32 0, i32 0, !dbg !2625
  %119 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !2625
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %119, i32 0, i32 8, !dbg !2626
  store i32 %cond128, i32* %pict_type, align 4, !dbg !2627
  %120 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2628
  %keyframe129 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %120, i32 0, i32 12, !dbg !2629
  %121 = load i32, i32* %keyframe129, align 8, !dbg !2629
  %122 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2630
  %current_frame130 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %122, i32 0, i32 11, !dbg !2631
  %f131 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame130, i32 0, i32 0, !dbg !2632
  %123 = load %struct.AVFrame*, %struct.AVFrame** %f131, align 8, !dbg !2632
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %123, i32 0, i32 7, !dbg !2633
  store i32 %121, i32* %key_frame, align 8, !dbg !2634
  %124 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2635
  %125 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2637
  %current_frame132 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %125, i32 0, i32 11, !dbg !2638
  %call133 = call i32 @ff_thread_get_buffer(%struct.AVCodecContext* %124, %struct.ThreadFrame* %current_frame132, i32 1), !dbg !2639
  %cmp134 = icmp slt i32 %call133, 0, !dbg !2640
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !2641

if.then135:                                       ; preds = %if.end125
  br label %error, !dbg !2642

if.end136:                                        ; preds = %if.end125
  %126 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2643
  %edge_emu_buffer = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %126, i32 0, i32 74, !dbg !2645
  %127 = load i8*, i8** %edge_emu_buffer, align 16, !dbg !2645
  %tobool137 = icmp ne i8* %127, null, !dbg !2643
  br i1 %tobool137, label %if.end154, label %if.then138, !dbg !2646

if.then138:                                       ; preds = %if.end136
  %128 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2647
  %current_frame139 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %128, i32 0, i32 11, !dbg !2648
  %f140 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame139, i32 0, i32 0, !dbg !2649
  %129 = load %struct.AVFrame*, %struct.AVFrame** %f140, align 8, !dbg !2649
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %129, i32 0, i32 1, !dbg !2650
  %arrayidx141 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !2647
  %130 = load i32, i32* %arrayidx141, align 8, !dbg !2647
  %cmp142 = icmp sge i32 %130, 0, !dbg !2651
  br i1 %cmp142, label %cond.true, label %cond.false, !dbg !2652

cond.true:                                        ; preds = %if.then138
  %131 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2653
  %current_frame143 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %131, i32 0, i32 11, !dbg !2655
  %f144 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame143, i32 0, i32 0, !dbg !2656
  %132 = load %struct.AVFrame*, %struct.AVFrame** %f144, align 8, !dbg !2656
  %linesize145 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %132, i32 0, i32 1, !dbg !2657
  %arrayidx146 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize145, i64 0, i64 0, !dbg !2653
  %133 = load i32, i32* %arrayidx146, align 8, !dbg !2653
  br label %cond.end, !dbg !2658

cond.false:                                       ; preds = %if.then138
  %134 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2659
  %current_frame147 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %134, i32 0, i32 11, !dbg !2661
  %f148 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame147, i32 0, i32 0, !dbg !2662
  %135 = load %struct.AVFrame*, %struct.AVFrame** %f148, align 8, !dbg !2662
  %linesize149 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %135, i32 0, i32 1, !dbg !2663
  %arrayidx150 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize149, i64 0, i64 0, !dbg !2659
  %136 = load i32, i32* %arrayidx150, align 8, !dbg !2659
  %sub = sub nsw i32 0, %136, !dbg !2664
  br label %cond.end, !dbg !2665

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond151 = phi i32 [ %133, %cond.true ], [ %sub, %cond.false ], !dbg !2666
  %mul = mul nsw i32 9, %cond151, !dbg !2668
  %conv = sext i32 %mul to i64, !dbg !2669
  %call152 = call noalias i8* @av_malloc(i64 %conv), !dbg !2670
  %137 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2671
  %edge_emu_buffer153 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %137, i32 0, i32 74, !dbg !2672
  store i8* %call152, i8** %edge_emu_buffer153, align 16, !dbg !2673
  br label %if.end154, !dbg !2671

if.end154:                                        ; preds = %cond.end, %if.end136
  %138 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2674
  %keyframe155 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %138, i32 0, i32 12, !dbg !2676
  %139 = load i32, i32* %keyframe155, align 8, !dbg !2676
  %tobool156 = icmp ne i32 %139, 0, !dbg !2674
  br i1 %tobool156, label %if.then157, label %if.else186, !dbg !2677

if.then157:                                       ; preds = %if.end154
  %140 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2678
  %theora158 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %140, i32 0, i32 1, !dbg !2681
  %141 = load i32, i32* %theora158, align 8, !dbg !2681
  %tobool159 = icmp ne i32 %141, 0, !dbg !2678
  br i1 %tobool159, label %if.end173, label %if.then160, !dbg !2682

if.then160:                                       ; preds = %if.then157
  call void @skip_bits(%struct.GetBitContext* %gb, i32 4), !dbg !2683
  call void @skip_bits(%struct.GetBitContext* %gb, i32 4), !dbg !2685
  %142 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2686
  %version = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %142, i32 0, i32 4, !dbg !2688
  %143 = load i32, i32* %version, align 4, !dbg !2688
  %tobool161 = icmp ne i32 %143, 0, !dbg !2686
  br i1 %tobool161, label %if.then162, label %if.end172, !dbg !2689

if.then162:                                       ; preds = %if.then160
  %call163 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 5), !dbg !2690
  %144 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2692
  %version164 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %144, i32 0, i32 4, !dbg !2693
  store i32 %call163, i32* %version164, align 4, !dbg !2694
  %145 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2695
  %frame_number165 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %145, i32 0, i32 86, !dbg !2697
  %146 = load i32, i32* %frame_number165, align 8, !dbg !2697
  %cmp166 = icmp eq i32 %146, 0, !dbg !2698
  br i1 %cmp166, label %if.then168, label %if.end171, !dbg !2699

if.then168:                                       ; preds = %if.then162
  %147 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2700
  %avctx169 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %147, i32 0, i32 0, !dbg !2701
  %148 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx169, align 16, !dbg !2701
  %149 = bitcast %struct.AVCodecContext* %148 to i8*, !dbg !2700
  %150 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2702
  %version170 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %150, i32 0, i32 4, !dbg !2703
  %151 = load i32, i32* %version170, align 4, !dbg !2703
  call void (i8*, i32, i8*, ...) @av_log(i8* %149, i32 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0), i32 %151), !dbg !2704
  br label %if.end171, !dbg !2704

if.end171:                                        ; preds = %if.then168, %if.then162
  br label %if.end172, !dbg !2705

if.end172:                                        ; preds = %if.end171, %if.then160
  br label %if.end173, !dbg !2706

if.end173:                                        ; preds = %if.end172, %if.then157
  %152 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2707
  %version174 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %152, i32 0, i32 4, !dbg !2709
  %153 = load i32, i32* %version174, align 4, !dbg !2709
  %tobool175 = icmp ne i32 %153, 0, !dbg !2707
  br i1 %tobool175, label %if.then179, label %lor.lhs.false176, !dbg !2710

lor.lhs.false176:                                 ; preds = %if.end173
  %154 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2711
  %theora177 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %154, i32 0, i32 1, !dbg !2713
  %155 = load i32, i32* %theora177, align 8, !dbg !2713
  %tobool178 = icmp ne i32 %155, 0, !dbg !2711
  br i1 %tobool178, label %if.then179, label %if.end185, !dbg !2714

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %call180 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !2715
  %tobool181 = icmp ne i32 %call180, 0, !dbg !2715
  br i1 %tobool181, label %if.then182, label %if.end184, !dbg !2718

if.then182:                                       ; preds = %if.then179
  %156 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2719
  %avctx183 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %156, i32 0, i32 0, !dbg !2720
  %157 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx183, align 16, !dbg !2720
  %158 = bitcast %struct.AVCodecContext* %157 to i8*, !dbg !2719
  call void (i8*, i32, i8*, ...) @av_log(i8* %158, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i32 0, i32 0)), !dbg !2721
  br label %if.end184, !dbg !2721

if.end184:                                        ; preds = %if.then182, %if.then179
  call void @skip_bits(%struct.GetBitContext* %gb, i32 2), !dbg !2722
  br label %if.end185, !dbg !2723

if.end185:                                        ; preds = %if.end184, %lor.lhs.false176
  br label %if.end211, !dbg !2724

if.else186:                                       ; preds = %if.end154
  %159 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2725
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %159, i32 0, i32 9, !dbg !2728
  %f187 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame, i32 0, i32 0, !dbg !2729
  %160 = load %struct.AVFrame*, %struct.AVFrame** %f187, align 8, !dbg !2729
  %data188 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %160, i32 0, i32 0, !dbg !2730
  %arrayidx189 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data188, i64 0, i64 0, !dbg !2725
  %161 = load i8*, i8** %arrayidx189, align 8, !dbg !2725
  %tobool190 = icmp ne i8* %161, null, !dbg !2725
  br i1 %tobool190, label %if.end210, label %if.then191, !dbg !2731

if.then191:                                       ; preds = %if.else186
  %162 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2732
  %avctx192 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %162, i32 0, i32 0, !dbg !2734
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx192, align 16, !dbg !2734
  %164 = bitcast %struct.AVCodecContext* %163 to i8*, !dbg !2732
  call void (i8*, i32, i8*, ...) @av_log(i8* %164, i32 24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i32 0, i32 0)), !dbg !2735
  %165 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2736
  %golden_frame193 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %165, i32 0, i32 9, !dbg !2737
  %f194 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame193, i32 0, i32 0, !dbg !2738
  %166 = load %struct.AVFrame*, %struct.AVFrame** %f194, align 8, !dbg !2738
  %pict_type195 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %166, i32 0, i32 8, !dbg !2739
  store i32 1, i32* %pict_type195, align 4, !dbg !2740
  %167 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2741
  %168 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2743
  %golden_frame196 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %168, i32 0, i32 9, !dbg !2744
  %call197 = call i32 @ff_thread_get_buffer(%struct.AVCodecContext* %167, %struct.ThreadFrame* %golden_frame196, i32 1), !dbg !2745
  %cmp198 = icmp slt i32 %call197, 0, !dbg !2746
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !2747

if.then200:                                       ; preds = %if.then191
  br label %error, !dbg !2748

if.end201:                                        ; preds = %if.then191
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2749
  %170 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2750
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %170, i32 0, i32 10, !dbg !2751
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %169, %struct.ThreadFrame* %last_frame), !dbg !2752
  %171 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2753
  %last_frame202 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %171, i32 0, i32 10, !dbg !2755
  %172 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2756
  %golden_frame203 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %172, i32 0, i32 9, !dbg !2757
  %call204 = call i32 @ff_thread_ref_frame(%struct.ThreadFrame* %last_frame202, %struct.ThreadFrame* %golden_frame203), !dbg !2758
  store i32 %call204, i32* %ret, align 4, !dbg !2759
  %cmp205 = icmp slt i32 %call204, 0, !dbg !2760
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !2761

if.then207:                                       ; preds = %if.end201
  br label %error, !dbg !2762

if.end208:                                        ; preds = %if.end201
  %173 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2763
  %last_frame209 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %173, i32 0, i32 10, !dbg !2764
  call void @ff_thread_report_progress(%struct.ThreadFrame* %last_frame209, i32 2147483647, i32 0), !dbg !2765
  br label %if.end210, !dbg !2766

if.end210:                                        ; preds = %if.end208, %if.else186
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.end185
  %174 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2767
  %all_fragments212 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %174, i32 0, i32 41, !dbg !2768
  %175 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments212, align 8, !dbg !2768
  %176 = bitcast %struct.Vp3Fragment* %175 to i8*, !dbg !2769
  %177 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2770
  %fragment_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %177, i32 0, i32 38, !dbg !2771
  %178 = load i32, i32* %fragment_count, align 4, !dbg !2771
  %conv213 = sext i32 %178 to i64, !dbg !2770
  %mul214 = mul i64 %conv213, 4, !dbg !2772
  call void @llvm.memset.p0i8.i64(i8* %176, i8 0, i64 %mul214, i32 2, i1 false), !dbg !2769
  %179 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2773
  call void @ff_thread_finish_setup(%struct.AVCodecContext* %179), !dbg !2774
  %180 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2775
  %call215 = call i32 @unpack_superblocks(%struct.Vp3DecodeContext* %180, %struct.GetBitContext* %gb), !dbg !2777
  %tobool216 = icmp ne i32 %call215, 0, !dbg !2777
  br i1 %tobool216, label %if.then217, label %if.end219, !dbg !2778

if.then217:                                       ; preds = %if.end211
  %181 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2779
  %avctx218 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %181, i32 0, i32 0, !dbg !2781
  %182 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx218, align 16, !dbg !2781
  %183 = bitcast %struct.AVCodecContext* %182 to i8*, !dbg !2779
  call void (i8*, i32, i8*, ...) @av_log(i8* %183, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0)), !dbg !2782
  br label %error, !dbg !2783

if.end219:                                        ; preds = %if.end211
  %184 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2784
  %call220 = call i32 @unpack_modes(%struct.Vp3DecodeContext* %184, %struct.GetBitContext* %gb), !dbg !2786
  %tobool221 = icmp ne i32 %call220, 0, !dbg !2786
  br i1 %tobool221, label %if.then222, label %if.end224, !dbg !2787

if.then222:                                       ; preds = %if.end219
  %185 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2788
  %avctx223 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %185, i32 0, i32 0, !dbg !2790
  %186 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx223, align 16, !dbg !2790
  %187 = bitcast %struct.AVCodecContext* %186 to i8*, !dbg !2788
  call void (i8*, i32, i8*, ...) @av_log(i8* %187, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i32 0, i32 0)), !dbg !2791
  br label %error, !dbg !2792

if.end224:                                        ; preds = %if.end219
  %188 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2793
  %call225 = call i32 @unpack_vectors(%struct.Vp3DecodeContext* %188, %struct.GetBitContext* %gb), !dbg !2795
  %tobool226 = icmp ne i32 %call225, 0, !dbg !2795
  br i1 %tobool226, label %if.then227, label %if.end229, !dbg !2796

if.then227:                                       ; preds = %if.end224
  %189 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2797
  %avctx228 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %189, i32 0, i32 0, !dbg !2799
  %190 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx228, align 16, !dbg !2799
  %191 = bitcast %struct.AVCodecContext* %190 to i8*, !dbg !2797
  call void (i8*, i32, i8*, ...) @av_log(i8* %191, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0)), !dbg !2800
  br label %error, !dbg !2801

if.end229:                                        ; preds = %if.end224
  %192 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2802
  %call230 = call i32 @unpack_block_qpis(%struct.Vp3DecodeContext* %192, %struct.GetBitContext* %gb), !dbg !2804
  %tobool231 = icmp ne i32 %call230, 0, !dbg !2804
  br i1 %tobool231, label %if.then232, label %if.end234, !dbg !2805

if.then232:                                       ; preds = %if.end229
  %193 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2806
  %avctx233 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %193, i32 0, i32 0, !dbg !2808
  %194 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx233, align 16, !dbg !2808
  %195 = bitcast %struct.AVCodecContext* %194 to i8*, !dbg !2806
  call void (i8*, i32, i8*, ...) @av_log(i8* %195, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0)), !dbg !2809
  br label %error, !dbg !2810

if.end234:                                        ; preds = %if.end229
  %196 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2811
  %call235 = call i32 @unpack_dct_coeffs(%struct.Vp3DecodeContext* %196, %struct.GetBitContext* %gb), !dbg !2813
  %tobool236 = icmp ne i32 %call235, 0, !dbg !2813
  br i1 %tobool236, label %if.then237, label %if.end239, !dbg !2814

if.then237:                                       ; preds = %if.end234
  %197 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2815
  %avctx238 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %197, i32 0, i32 0, !dbg !2817
  %198 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx238, align 16, !dbg !2817
  %199 = bitcast %struct.AVCodecContext* %198 to i8*, !dbg !2815
  call void (i8*, i32, i8*, ...) @av_log(i8* %199, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0)), !dbg !2818
  br label %error, !dbg !2819

if.end239:                                        ; preds = %if.end234
  store i32 0, i32* %i, align 4, !dbg !2820
  br label %for.cond240, !dbg !2822

for.cond240:                                      ; preds = %for.inc265, %if.end239
  %200 = load i32, i32* %i, align 4, !dbg !2823
  %cmp241 = icmp slt i32 %200, 3, !dbg !2826
  br i1 %cmp241, label %for.body243, label %for.end267, !dbg !2827

for.body243:                                      ; preds = %for.cond240
  call void @llvm.dbg.declare(metadata i32* %height, metadata !2828, metadata !1942), !dbg !2830
  %201 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2831
  %height244 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %201, i32 0, i32 6, !dbg !2832
  %202 = load i32, i32* %height244, align 4, !dbg !2832
  %203 = load i32, i32* %i, align 4, !dbg !2833
  %tobool245 = icmp ne i32 %203, 0, !dbg !2833
  br i1 %tobool245, label %land.rhs246, label %land.end248, !dbg !2834

land.rhs246:                                      ; preds = %for.body243
  %204 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2835
  %chroma_y_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %204, i32 0, i32 8, !dbg !2837
  %205 = load i32, i32* %chroma_y_shift, align 4, !dbg !2837
  %tobool247 = icmp ne i32 %205, 0, !dbg !2838
  br label %land.end248

land.end248:                                      ; preds = %land.rhs246, %for.body243
  %206 = phi i1 [ false, %for.body243 ], [ %tobool247, %land.rhs246 ]
  %land.ext = zext i1 %206 to i32, !dbg !2839
  %shr = ashr i32 %202, %land.ext, !dbg !2841
  store i32 %shr, i32* %height, align 4, !dbg !2842
  %207 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2843
  %flipped_image = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %207, i32 0, i32 19, !dbg !2845
  %208 = load i32, i32* %flipped_image, align 16, !dbg !2845
  %tobool249 = icmp ne i32 %208, 0, !dbg !2843
  br i1 %tobool249, label %if.then250, label %if.else253, !dbg !2846

if.then250:                                       ; preds = %land.end248
  %209 = load i32, i32* %i, align 4, !dbg !2847
  %idxprom251 = sext i32 %209 to i64, !dbg !2848
  %210 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2848
  %data_offset = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %210, i32 0, i32 43, !dbg !2849
  %arrayidx252 = getelementptr inbounds [3 x i32], [3 x i32]* %data_offset, i64 0, i64 %idxprom251, !dbg !2848
  store i32 0, i32* %arrayidx252, align 4, !dbg !2850
  br label %if.end264, !dbg !2848

if.else253:                                       ; preds = %land.end248
  %211 = load i32, i32* %height, align 4, !dbg !2851
  %sub254 = sub nsw i32 %211, 1, !dbg !2852
  %212 = load i32, i32* %i, align 4, !dbg !2853
  %idxprom255 = sext i32 %212 to i64, !dbg !2854
  %213 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2854
  %current_frame256 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %213, i32 0, i32 11, !dbg !2855
  %f257 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame256, i32 0, i32 0, !dbg !2856
  %214 = load %struct.AVFrame*, %struct.AVFrame** %f257, align 8, !dbg !2856
  %linesize258 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %214, i32 0, i32 1, !dbg !2857
  %arrayidx259 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize258, i64 0, i64 %idxprom255, !dbg !2854
  %215 = load i32, i32* %arrayidx259, align 4, !dbg !2854
  %mul260 = mul nsw i32 %sub254, %215, !dbg !2858
  %216 = load i32, i32* %i, align 4, !dbg !2859
  %idxprom261 = sext i32 %216 to i64, !dbg !2860
  %217 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2860
  %data_offset262 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %217, i32 0, i32 43, !dbg !2861
  %arrayidx263 = getelementptr inbounds [3 x i32], [3 x i32]* %data_offset262, i64 0, i64 %idxprom261, !dbg !2860
  store i32 %mul260, i32* %arrayidx263, align 4, !dbg !2862
  br label %if.end264

if.end264:                                        ; preds = %if.else253, %if.then250
  br label %for.inc265, !dbg !2863

for.inc265:                                       ; preds = %if.end264
  %218 = load i32, i32* %i, align 4, !dbg !2864
  %inc266 = add nsw i32 %218, 1, !dbg !2864
  store i32 %inc266, i32* %i, align 4, !dbg !2864
  br label %for.cond240, !dbg !2866, !llvm.loop !2867

for.end267:                                       ; preds = %for.cond240
  %219 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2869
  %last_slice_end = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %219, i32 0, i32 20, !dbg !2870
  store i32 0, i32* %last_slice_end, align 4, !dbg !2871
  store i32 0, i32* %i, align 4, !dbg !2872
  br label %for.cond268, !dbg !2874

for.cond268:                                      ; preds = %for.inc272, %for.end267
  %220 = load i32, i32* %i, align 4, !dbg !2875
  %221 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2878
  %c_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %221, i32 0, i32 30, !dbg !2879
  %222 = load i32, i32* %c_superblock_height, align 4, !dbg !2879
  %cmp269 = icmp slt i32 %220, %222, !dbg !2880
  br i1 %cmp269, label %for.body271, label %for.end274, !dbg !2881

for.body271:                                      ; preds = %for.cond268
  %223 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2882
  %224 = load i32, i32* %i, align 4, !dbg !2883
  call void @render_slice(%struct.Vp3DecodeContext* %223, i32 %224), !dbg !2884
  br label %for.inc272, !dbg !2884

for.inc272:                                       ; preds = %for.body271
  %225 = load i32, i32* %i, align 4, !dbg !2885
  %inc273 = add nsw i32 %225, 1, !dbg !2885
  store i32 %inc273, i32* %i, align 4, !dbg !2885
  br label %for.cond268, !dbg !2887, !llvm.loop !2888

for.end274:                                       ; preds = %for.cond268
  store i32 0, i32* %i, align 4, !dbg !2890
  br label %for.cond275, !dbg !2892

for.cond275:                                      ; preds = %for.inc290, %for.end274
  %226 = load i32, i32* %i, align 4, !dbg !2893
  %cmp276 = icmp slt i32 %226, 3, !dbg !2896
  br i1 %cmp276, label %for.body278, label %for.end292, !dbg !2897

for.body278:                                      ; preds = %for.cond275
  call void @llvm.dbg.declare(metadata i32* %row, metadata !2898, metadata !1942), !dbg !2900
  %227 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2901
  %height279 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %227, i32 0, i32 6, !dbg !2902
  %228 = load i32, i32* %height279, align 4, !dbg !2902
  %229 = load i32, i32* %i, align 4, !dbg !2903
  %tobool280 = icmp ne i32 %229, 0, !dbg !2903
  br i1 %tobool280, label %land.rhs281, label %land.end284, !dbg !2904

land.rhs281:                                      ; preds = %for.body278
  %230 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2905
  %chroma_y_shift282 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %230, i32 0, i32 8, !dbg !2907
  %231 = load i32, i32* %chroma_y_shift282, align 4, !dbg !2907
  %tobool283 = icmp ne i32 %231, 0, !dbg !2908
  br label %land.end284

land.end284:                                      ; preds = %land.rhs281, %for.body278
  %232 = phi i1 [ false, %for.body278 ], [ %tobool283, %land.rhs281 ]
  %land.ext285 = zext i1 %232 to i32, !dbg !2909
  %add286 = add nsw i32 3, %land.ext285, !dbg !2911
  %shr287 = ashr i32 %228, %add286, !dbg !2912
  %sub288 = sub nsw i32 %shr287, 1, !dbg !2913
  store i32 %sub288, i32* %row, align 4, !dbg !2914
  %233 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2915
  %234 = load i32, i32* %i, align 4, !dbg !2916
  %235 = load i32, i32* %row, align 4, !dbg !2917
  %236 = load i32, i32* %row, align 4, !dbg !2918
  %add289 = add nsw i32 %236, 1, !dbg !2919
  call void @apply_loop_filter(%struct.Vp3DecodeContext* %233, i32 %234, i32 %235, i32 %add289), !dbg !2920
  br label %for.inc290, !dbg !2921

for.inc290:                                       ; preds = %land.end284
  %237 = load i32, i32* %i, align 4, !dbg !2922
  %inc291 = add nsw i32 %237, 1, !dbg !2922
  store i32 %inc291, i32* %i, align 4, !dbg !2922
  br label %for.cond275, !dbg !2924, !llvm.loop !2925

for.end292:                                       ; preds = %for.cond275
  %238 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2927
  %239 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2928
  %height293 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %239, i32 0, i32 6, !dbg !2929
  %240 = load i32, i32* %height293, align 4, !dbg !2929
  call void @vp3_draw_horiz_band(%struct.Vp3DecodeContext* %238, i32 %240), !dbg !2930
  %241 = load i8*, i8** %data.addr, align 8, !dbg !2931
  %242 = bitcast i8* %241 to %struct.AVFrame*, !dbg !2931
  %243 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2933
  %current_frame294 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %243, i32 0, i32 11, !dbg !2934
  %f295 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame294, i32 0, i32 0, !dbg !2935
  %244 = load %struct.AVFrame*, %struct.AVFrame** %f295, align 8, !dbg !2935
  %call296 = call i32 @av_frame_ref(%struct.AVFrame* %242, %struct.AVFrame* %244), !dbg !2936
  store i32 %call296, i32* %ret, align 4, !dbg !2937
  %cmp297 = icmp slt i32 %call296, 0, !dbg !2938
  br i1 %cmp297, label %if.then299, label %if.end300, !dbg !2939

if.then299:                                       ; preds = %for.end292
  %245 = load i32, i32* %ret, align 4, !dbg !2940
  store i32 %245, i32* %retval, align 4, !dbg !2941
  br label %return, !dbg !2941

if.end300:                                        ; preds = %for.end292
  %246 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2942
  %offset_x = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %246, i32 0, i32 44, !dbg !2943
  %247 = load i8, i8* %offset_x, align 8, !dbg !2943
  %conv301 = zext i8 %247 to i64, !dbg !2942
  %248 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2944
  %crop_left = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %248, i32 0, i32 51, !dbg !2945
  store i64 %conv301, i64* %crop_left, align 8, !dbg !2946
  %249 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2947
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %249, i32 0, i32 22, !dbg !2948
  %250 = load i32, i32* %coded_width, align 4, !dbg !2948
  %251 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2949
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %251, i32 0, i32 20, !dbg !2950
  %252 = load i32, i32* %width, align 4, !dbg !2950
  %sub302 = sub nsw i32 %250, %252, !dbg !2951
  %253 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2952
  %offset_x303 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %253, i32 0, i32 44, !dbg !2953
  %254 = load i8, i8* %offset_x303, align 8, !dbg !2953
  %conv304 = zext i8 %254 to i32, !dbg !2952
  %sub305 = sub nsw i32 %sub302, %conv304, !dbg !2954
  %conv306 = sext i32 %sub305 to i64, !dbg !2947
  %255 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2955
  %crop_right = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %255, i32 0, i32 52, !dbg !2956
  store i64 %conv306, i64* %crop_right, align 8, !dbg !2957
  %256 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2958
  %offset_y = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %256, i32 0, i32 45, !dbg !2959
  %257 = load i8, i8* %offset_y, align 1, !dbg !2959
  %conv307 = zext i8 %257 to i64, !dbg !2958
  %258 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2960
  %crop_top = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %258, i32 0, i32 49, !dbg !2961
  store i64 %conv307, i64* %crop_top, align 8, !dbg !2962
  %259 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2963
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %259, i32 0, i32 23, !dbg !2964
  %260 = load i32, i32* %coded_height, align 8, !dbg !2964
  %261 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2965
  %height308 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %261, i32 0, i32 21, !dbg !2966
  %262 = load i32, i32* %height308, align 8, !dbg !2966
  %sub309 = sub nsw i32 %260, %262, !dbg !2967
  %263 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2968
  %offset_y310 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %263, i32 0, i32 45, !dbg !2969
  %264 = load i8, i8* %offset_y310, align 1, !dbg !2969
  %conv311 = zext i8 %264 to i32, !dbg !2968
  %sub312 = sub nsw i32 %sub309, %conv311, !dbg !2970
  %conv313 = sext i32 %sub312 to i64, !dbg !2963
  %265 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2971
  %crop_bottom = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %265, i32 0, i32 50, !dbg !2972
  store i64 %conv313, i64* %crop_bottom, align 8, !dbg !2973
  %266 = load i32*, i32** %got_frame.addr, align 8, !dbg !2974
  store i32 1, i32* %266, align 4, !dbg !2975
  %267 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2976
  %avctx314 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %267, i32 0, i32 0, !dbg !2978
  %268 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx314, align 16, !dbg !2978
  %active_thread_type315 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %268, i32 0, i32 148, !dbg !2979
  %269 = load i32, i32* %active_thread_type315, align 8, !dbg !2979
  %and316 = and i32 %269, 1, !dbg !2980
  %tobool317 = icmp ne i32 %and316, 0, !dbg !2980
  br i1 %tobool317, label %if.end324, label %if.then318, !dbg !2981

if.then318:                                       ; preds = %if.end300
  %270 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2982
  %call319 = call i32 @update_frames(%struct.AVCodecContext* %270), !dbg !2984
  store i32 %call319, i32* %ret, align 4, !dbg !2985
  %271 = load i32, i32* %ret, align 4, !dbg !2986
  %cmp320 = icmp slt i32 %271, 0, !dbg !2988
  br i1 %cmp320, label %if.then322, label %if.end323, !dbg !2989

if.then322:                                       ; preds = %if.then318
  %272 = load i32, i32* %ret, align 4, !dbg !2990
  store i32 %272, i32* %retval, align 4, !dbg !2991
  br label %return, !dbg !2991

if.end323:                                        ; preds = %if.then318
  br label %if.end324, !dbg !2992

if.end324:                                        ; preds = %if.end323, %if.end300
  %273 = load i32, i32* %buf_size, align 4, !dbg !2993
  store i32 %273, i32* %retval, align 4, !dbg !2994
  br label %return, !dbg !2994

error:                                            ; preds = %if.then237, %if.then232, %if.then227, %if.then222, %if.then217, %if.then207, %if.then200, %if.then135
  %274 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2995
  %current_frame325 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %274, i32 0, i32 11, !dbg !2996
  call void @ff_thread_report_progress(%struct.ThreadFrame* %current_frame325, i32 2147483647, i32 0), !dbg !2997
  %275 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !2998
  %avctx326 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %275, i32 0, i32 0, !dbg !3000
  %276 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx326, align 16, !dbg !3000
  %active_thread_type327 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %276, i32 0, i32 148, !dbg !3001
  %277 = load i32, i32* %active_thread_type327, align 8, !dbg !3001
  %and328 = and i32 %277, 1, !dbg !3002
  %tobool329 = icmp ne i32 %and328, 0, !dbg !3002
  br i1 %tobool329, label %if.end333, label %if.then330, !dbg !3003

if.then330:                                       ; preds = %error
  %278 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3004
  %current_frame331 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %278, i32 0, i32 11, !dbg !3005
  %f332 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame331, i32 0, i32 0, !dbg !3006
  %279 = load %struct.AVFrame*, %struct.AVFrame** %f332, align 8, !dbg !3006
  call void @av_frame_unref(%struct.AVFrame* %279), !dbg !3007
  br label %if.end333, !dbg !3007

if.end333:                                        ; preds = %if.then330, %error
  store i32 -1, i32* %retval, align 4, !dbg !3008
  br label %return, !dbg !3008

return:                                           ; preds = %if.end333, %if.end324, %if.then322, %if.then299, %if.then124, %if.then40, %if.end35, %if.end33, %if.then31, %if.end21, %if.then19, %if.then8, %if.then
  %280 = load i32, i32* %retval, align 4, !dbg !3009
  ret i32 %280, !dbg !3009
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vp3_decode_end(%struct.AVCodecContext* %avctx) #1 !dbg !3010 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3011, metadata !1942), !dbg !3012
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !3013, metadata !1942), !dbg !3014
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3015
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3016
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3016
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !3015
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !3014
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3017, metadata !1942), !dbg !3018
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3019
  call void @free_tables(%struct.AVCodecContext* %3), !dbg !3020
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3021
  %edge_emu_buffer = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 74, !dbg !3022
  %5 = bitcast i8** %edge_emu_buffer to i8*, !dbg !3023
  call void @av_freep(i8* %5), !dbg !3024
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3025
  %theora_tables = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 2, !dbg !3026
  store i32 0, i32* %theora_tables, align 4, !dbg !3027
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3028
  call void @vp3_decode_flush(%struct.AVCodecContext* %7), !dbg !3029
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3030
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 11, !dbg !3031
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame, i32 0, i32 0, !dbg !3032
  call void @av_frame_free(%struct.AVFrame** %f), !dbg !3033
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3034
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 10, !dbg !3035
  %f1 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_frame, i32 0, i32 0, !dbg !3036
  call void @av_frame_free(%struct.AVFrame** %f1), !dbg !3037
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3038
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 9, !dbg !3039
  %f2 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame, i32 0, i32 0, !dbg !3040
  call void @av_frame_free(%struct.AVFrame** %f2), !dbg !3041
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3042
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 7, !dbg !3044
  %12 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !3044
  %is_copy = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %12, i32 0, i32 0, !dbg !3045
  %13 = load i32, i32* %is_copy, align 8, !dbg !3045
  %tobool = icmp ne i32 %13, 0, !dbg !3042
  br i1 %tobool, label %if.then, label %if.end, !dbg !3046

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3047
  br label %return, !dbg !3047

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !3048
  br label %for.cond, !dbg !3050

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !3051
  %cmp = icmp slt i32 %14, 16, !dbg !3054
  br i1 %cmp, label %for.body, label %for.end, !dbg !3055

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !3056
  %idxprom = sext i32 %15 to i64, !dbg !3058
  %16 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3058
  %dc_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %16, i32 0, i32 62, !dbg !3059
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %dc_vlc, i64 0, i64 %idxprom, !dbg !3058
  call void @ff_free_vlc(%struct.VLC* %arrayidx), !dbg !3060
  %17 = load i32, i32* %i, align 4, !dbg !3061
  %idxprom3 = sext i32 %17 to i64, !dbg !3062
  %18 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3062
  %ac_vlc_1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %18, i32 0, i32 63, !dbg !3063
  %arrayidx4 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_1, i64 0, i64 %idxprom3, !dbg !3062
  call void @ff_free_vlc(%struct.VLC* %arrayidx4), !dbg !3064
  %19 = load i32, i32* %i, align 4, !dbg !3065
  %idxprom5 = sext i32 %19 to i64, !dbg !3066
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3066
  %ac_vlc_2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %20, i32 0, i32 64, !dbg !3067
  %arrayidx6 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_2, i64 0, i64 %idxprom5, !dbg !3066
  call void @ff_free_vlc(%struct.VLC* %arrayidx6), !dbg !3068
  %21 = load i32, i32* %i, align 4, !dbg !3069
  %idxprom7 = sext i32 %21 to i64, !dbg !3070
  %22 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3070
  %ac_vlc_3 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %22, i32 0, i32 65, !dbg !3071
  %arrayidx8 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_3, i64 0, i64 %idxprom7, !dbg !3070
  call void @ff_free_vlc(%struct.VLC* %arrayidx8), !dbg !3072
  %23 = load i32, i32* %i, align 4, !dbg !3073
  %idxprom9 = sext i32 %23 to i64, !dbg !3074
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3074
  %ac_vlc_4 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 66, !dbg !3075
  %arrayidx10 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_4, i64 0, i64 %idxprom9, !dbg !3074
  call void @ff_free_vlc(%struct.VLC* %arrayidx10), !dbg !3076
  br label %for.inc, !dbg !3077

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !3078
  %inc = add nsw i32 %25, 1, !dbg !3078
  store i32 %inc, i32* %i, align 4, !dbg !3078
  br label %for.cond, !dbg !3080, !llvm.loop !3081

for.end:                                          ; preds = %for.cond
  %26 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3083
  %superblock_run_length_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %26, i32 0, i32 67, !dbg !3084
  call void @ff_free_vlc(%struct.VLC* %superblock_run_length_vlc), !dbg !3085
  %27 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3086
  %fragment_run_length_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %27, i32 0, i32 68, !dbg !3087
  call void @ff_free_vlc(%struct.VLC* %fragment_run_length_vlc), !dbg !3088
  %28 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3089
  %mode_code_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %28, i32 0, i32 69, !dbg !3090
  call void @ff_free_vlc(%struct.VLC* %mode_code_vlc), !dbg !3091
  %29 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3092
  %motion_vector_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %29, i32 0, i32 70, !dbg !3093
  call void @ff_free_vlc(%struct.VLC* %motion_vector_vlc), !dbg !3094
  store i32 0, i32* %retval, align 4, !dbg !3095
  br label %return, !dbg !3095

return:                                           ; preds = %for.end, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !3096
  ret i32 %30, !dbg !3096
}

; Function Attrs: nounwind uwtable
define internal void @vp3_decode_flush(%struct.AVCodecContext* %avctx) #0 !dbg !3097 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3098, metadata !1942), !dbg !3099
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !3100, metadata !1942), !dbg !3101
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3102
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3103
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3103
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !3102
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !3101
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3104
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 9, !dbg !3106
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame, i32 0, i32 0, !dbg !3107
  %4 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !3107
  %tobool = icmp ne %struct.AVFrame* %4, null, !dbg !3104
  br i1 %tobool, label %if.then, label %if.end, !dbg !3108

if.then:                                          ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3109
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3110
  %golden_frame1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 9, !dbg !3111
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %5, %struct.ThreadFrame* %golden_frame1), !dbg !3112
  br label %if.end, !dbg !3112

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3113
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %7, i32 0, i32 10, !dbg !3115
  %f2 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_frame, i32 0, i32 0, !dbg !3116
  %8 = load %struct.AVFrame*, %struct.AVFrame** %f2, align 8, !dbg !3116
  %tobool3 = icmp ne %struct.AVFrame* %8, null, !dbg !3113
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !3117

if.then4:                                         ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3118
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3119
  %last_frame5 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 10, !dbg !3120
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %9, %struct.ThreadFrame* %last_frame5), !dbg !3121
  br label %if.end6, !dbg !3121

if.end6:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3122
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 11, !dbg !3124
  %f7 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame, i32 0, i32 0, !dbg !3125
  %12 = load %struct.AVFrame*, %struct.AVFrame** %f7, align 8, !dbg !3125
  %tobool8 = icmp ne %struct.AVFrame* %12, null, !dbg !3122
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !3126

if.then9:                                         ; preds = %if.end6
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3127
  %14 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3128
  %current_frame10 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %14, i32 0, i32 11, !dbg !3129
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %13, %struct.ThreadFrame* %current_frame10), !dbg !3130
  br label %if.end11, !dbg !3130

if.end11:                                         ; preds = %if.then9, %if.end6
  ret void, !dbg !3131
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vp3_decode_init(%struct.AVCodecContext* %avctx) #1 !dbg !3132 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %i = alloca i32, align 4
  %inter = alloca i32, align 4
  %plane = alloca i32, align 4
  %ret = alloca i32, align 4
  %c_width = alloca i32, align 4
  %c_height = alloca i32, align 4
  %y_fragment_count = alloca i32, align 4
  %c_fragment_count = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3133, metadata !1942), !dbg !3134
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !3135, metadata !1942), !dbg !3136
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3137
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3138
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3138
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !3137
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !3136
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3139, metadata !1942), !dbg !3140
  call void @llvm.dbg.declare(metadata i32* %inter, metadata !3141, metadata !1942), !dbg !3142
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !3143, metadata !1942), !dbg !3144
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3145, metadata !1942), !dbg !3146
  call void @llvm.dbg.declare(metadata i32* %c_width, metadata !3147, metadata !1942), !dbg !3148
  call void @llvm.dbg.declare(metadata i32* %c_height, metadata !3149, metadata !1942), !dbg !3150
  call void @llvm.dbg.declare(metadata i32* %y_fragment_count, metadata !3151, metadata !1942), !dbg !3152
  call void @llvm.dbg.declare(metadata i32* %c_fragment_count, metadata !3153, metadata !1942), !dbg !3154
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3155
  %call = call i32 @init_frames(%struct.Vp3DecodeContext* %3), !dbg !3156
  store i32 %call, i32* %ret, align 4, !dbg !3157
  %4 = load i32, i32* %ret, align 4, !dbg !3158
  %cmp = icmp slt i32 %4, 0, !dbg !3160
  br i1 %cmp, label %if.then, label %if.end, !dbg !3161

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !3162
  store i32 %5, i32* %retval, align 4, !dbg !3163
  br label %return, !dbg !3163

if.end:                                           ; preds = %entry
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3164
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 7, !dbg !3165
  %7 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !3165
  %allocate_progress = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %7, i32 0, i32 1, !dbg !3166
  store i32 1, i32* %allocate_progress, align 4, !dbg !3167
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3168
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 5, !dbg !3170
  %9 = load i32, i32* %codec_tag, align 4, !dbg !3170
  %cmp1 = icmp eq i32 %9, 808669270, !dbg !3171
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !3172

if.then2:                                         ; preds = %if.end
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3173
  %version = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 4, !dbg !3174
  store i32 0, i32* %version, align 4, !dbg !3175
  br label %if.end4, !dbg !3173

if.else:                                          ; preds = %if.end
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3176
  %version3 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 4, !dbg !3177
  store i32 1, i32* %version3, align 4, !dbg !3178
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3179
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3180
  %avctx5 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 0, !dbg !3181
  store %struct.AVCodecContext* %12, %struct.AVCodecContext** %avctx5, align 16, !dbg !3182
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3183
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 22, !dbg !3184
  %15 = load i32, i32* %coded_width, align 4, !dbg !3184
  %add = add nsw i32 %15, 16, !dbg !3185
  %sub = sub nsw i32 %add, 1, !dbg !3186
  %and = and i32 %sub, -16, !dbg !3187
  %16 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3188
  %width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %16, i32 0, i32 5, !dbg !3189
  store i32 %and, i32* %width, align 8, !dbg !3190
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3191
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 23, !dbg !3192
  %18 = load i32, i32* %coded_height, align 8, !dbg !3192
  %add6 = add nsw i32 %18, 16, !dbg !3193
  %sub7 = sub nsw i32 %add6, 1, !dbg !3194
  %and8 = and i32 %sub7, -16, !dbg !3195
  %19 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3196
  %height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %19, i32 0, i32 6, !dbg !3197
  store i32 %and8, i32* %height, align 4, !dbg !3198
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3199
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 4, !dbg !3201
  %21 = load i32, i32* %codec_id, align 8, !dbg !3201
  %cmp9 = icmp ne i32 %21, 30, !dbg !3202
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3203

if.then10:                                        ; preds = %if.end4
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3204
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 25, !dbg !3205
  store i32 0, i32* %pix_fmt, align 8, !dbg !3206
  br label %if.end11, !dbg !3204

if.end11:                                         ; preds = %if.then10, %if.end4
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3207
  %chroma_sample_location = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %23, i32 0, i32 79, !dbg !3208
  store i32 2, i32* %chroma_sample_location, align 4, !dbg !3209
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3210
  %hdsp = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 15, !dbg !3211
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3212
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %25, i32 0, i32 13, !dbg !3213
  %26 = load i32, i32* %flags, align 4, !dbg !3213
  %or = or i32 %26, 8388608, !dbg !3214
  call void @ff_hpeldsp_init(%struct.HpelDSPContext* %hdsp, i32 %or), !dbg !3215
  %27 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3216
  %vdsp = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %27, i32 0, i32 16, !dbg !3217
  call void @ff_videodsp_init(%struct.VideoDSPContext* %vdsp, i32 8), !dbg !3218
  %28 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3219
  %vp3dsp = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %28, i32 0, i32 17, !dbg !3220
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3221
  %flags12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 13, !dbg !3222
  %30 = load i32, i32* %flags12, align 4, !dbg !3222
  call void @ff_vp3dsp_init(%struct.VP3DSPContext* %vp3dsp, i32 %30), !dbg !3223
  store i32 0, i32* %i, align 4, !dbg !3224
  br label %for.cond, !dbg !3226

for.cond:                                         ; preds = %for.inc, %if.end11
  %31 = load i32, i32* %i, align 4, !dbg !3227
  %cmp13 = icmp slt i32 %31, 64, !dbg !3230
  br i1 %cmp13, label %for.body, label %for.end, !dbg !3231

for.body:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !3232
  %shr = ashr i32 %32, 3, !dbg !3234
  %33 = load i32, i32* %i, align 4, !dbg !3235
  %and14 = and i32 %33, 7, !dbg !3236
  %shl = shl i32 %and14, 3, !dbg !3237
  %or15 = or i32 %shr, %shl, !dbg !3238
  %conv = trunc i32 %or15 to i8, !dbg !3239
  %34 = load i32, i32* %i, align 4, !dbg !3240
  %idxprom = sext i32 %34 to i64, !dbg !3241
  %35 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3241
  %idct_permutation = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %35, i32 0, i32 13, !dbg !3242
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation, i64 0, i64 %idxprom, !dbg !3241
  store i8 %conv, i8* %arrayidx, align 1, !dbg !3243
  %36 = load i32, i32* %i, align 4, !dbg !3244
  %idxprom16 = sext i32 %36 to i64, !dbg !3245
  %arrayidx17 = getelementptr inbounds [64 x i8], [64 x i8]* @ff_zigzag_direct, i64 0, i64 %idxprom16, !dbg !3245
  %37 = load i8, i8* %arrayidx17, align 1, !dbg !3245
  %conv18 = zext i8 %37 to i32, !dbg !3246
  %shr19 = ashr i32 %conv18, 3, !dbg !3247
  %38 = load i32, i32* %i, align 4, !dbg !3248
  %idxprom20 = sext i32 %38 to i64, !dbg !3249
  %arrayidx21 = getelementptr inbounds [64 x i8], [64 x i8]* @ff_zigzag_direct, i64 0, i64 %idxprom20, !dbg !3249
  %39 = load i8, i8* %arrayidx21, align 1, !dbg !3249
  %conv22 = zext i8 %39 to i32, !dbg !3250
  %and23 = and i32 %conv22, 7, !dbg !3251
  %shl24 = shl i32 %and23, 3, !dbg !3252
  %or25 = or i32 %shr19, %shl24, !dbg !3253
  %conv26 = trunc i32 %or25 to i8, !dbg !3254
  %40 = load i32, i32* %i, align 4, !dbg !3255
  %idxprom27 = sext i32 %40 to i64, !dbg !3256
  %41 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3256
  %idct_scantable = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %41, i32 0, i32 14, !dbg !3257
  %arrayidx28 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_scantable, i64 0, i64 %idxprom27, !dbg !3256
  store i8 %conv26, i8* %arrayidx28, align 1, !dbg !3258
  br label %for.inc, !dbg !3259

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4, !dbg !3260
  %inc = add nsw i32 %42, 1, !dbg !3260
  store i32 %inc, i32* %i, align 4, !dbg !3260
  br label %for.cond, !dbg !3262, !llvm.loop !3263

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3265
  br label %for.cond29, !dbg !3267

for.cond29:                                       ; preds = %for.inc35, %for.end
  %43 = load i32, i32* %i, align 4, !dbg !3268
  %cmp30 = icmp slt i32 %43, 3, !dbg !3271
  br i1 %cmp30, label %for.body32, label %for.end37, !dbg !3272

for.body32:                                       ; preds = %for.cond29
  %44 = load i32, i32* %i, align 4, !dbg !3273
  %idxprom33 = sext i32 %44 to i64, !dbg !3274
  %45 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3274
  %qps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %45, i32 0, i32 22, !dbg !3275
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %qps, i64 0, i64 %idxprom33, !dbg !3274
  store i32 -1, i32* %arrayidx34, align 4, !dbg !3276
  br label %for.inc35, !dbg !3274

for.inc35:                                        ; preds = %for.body32
  %46 = load i32, i32* %i, align 4, !dbg !3277
  %inc36 = add nsw i32 %46, 1, !dbg !3277
  store i32 %inc36, i32* %i, align 4, !dbg !3277
  br label %for.cond29, !dbg !3279, !llvm.loop !3280

for.end37:                                        ; preds = %for.cond29
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3282
  %pix_fmt38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 25, !dbg !3283
  %48 = load i32, i32* %pix_fmt38, align 8, !dbg !3283
  %49 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3284
  %chroma_x_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %49, i32 0, i32 7, !dbg !3285
  %50 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3286
  %chroma_y_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %50, i32 0, i32 8, !dbg !3287
  %call39 = call i32 @av_pix_fmt_get_chroma_sub_sample(i32 %48, i32* %chroma_x_shift, i32* %chroma_y_shift), !dbg !3288
  store i32 %call39, i32* %ret, align 4, !dbg !3289
  %51 = load i32, i32* %ret, align 4, !dbg !3290
  %tobool = icmp ne i32 %51, 0, !dbg !3290
  br i1 %tobool, label %if.then40, label %if.end41, !dbg !3292

if.then40:                                        ; preds = %for.end37
  %52 = load i32, i32* %ret, align 4, !dbg !3293
  store i32 %52, i32* %retval, align 4, !dbg !3294
  br label %return, !dbg !3294

if.end41:                                         ; preds = %for.end37
  %53 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3295
  %width42 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %53, i32 0, i32 5, !dbg !3296
  %54 = load i32, i32* %width42, align 8, !dbg !3296
  %add43 = add nsw i32 %54, 31, !dbg !3297
  %div = sdiv i32 %add43, 32, !dbg !3298
  %55 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3299
  %y_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %55, i32 0, i32 26, !dbg !3300
  store i32 %div, i32* %y_superblock_width, align 4, !dbg !3301
  %56 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3302
  %height44 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %56, i32 0, i32 6, !dbg !3303
  %57 = load i32, i32* %height44, align 4, !dbg !3303
  %add45 = add nsw i32 %57, 31, !dbg !3304
  %div46 = sdiv i32 %add45, 32, !dbg !3305
  %58 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3306
  %y_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %58, i32 0, i32 27, !dbg !3307
  store i32 %div46, i32* %y_superblock_height, align 16, !dbg !3308
  %59 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3309
  %y_superblock_width47 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %59, i32 0, i32 26, !dbg !3310
  %60 = load i32, i32* %y_superblock_width47, align 4, !dbg !3310
  %61 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3311
  %y_superblock_height48 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %61, i32 0, i32 27, !dbg !3312
  %62 = load i32, i32* %y_superblock_height48, align 16, !dbg !3312
  %mul = mul nsw i32 %60, %62, !dbg !3313
  %63 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3314
  %y_superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %63, i32 0, i32 28, !dbg !3315
  store i32 %mul, i32* %y_superblock_count, align 4, !dbg !3316
  %64 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3317
  %width49 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %64, i32 0, i32 5, !dbg !3318
  %65 = load i32, i32* %width49, align 8, !dbg !3318
  %66 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3319
  %chroma_x_shift50 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %66, i32 0, i32 7, !dbg !3320
  %67 = load i32, i32* %chroma_x_shift50, align 16, !dbg !3320
  %shr51 = ashr i32 %65, %67, !dbg !3321
  store i32 %shr51, i32* %c_width, align 4, !dbg !3322
  %68 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3323
  %height52 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %68, i32 0, i32 6, !dbg !3324
  %69 = load i32, i32* %height52, align 4, !dbg !3324
  %70 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3325
  %chroma_y_shift53 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %70, i32 0, i32 8, !dbg !3326
  %71 = load i32, i32* %chroma_y_shift53, align 4, !dbg !3326
  %shr54 = ashr i32 %69, %71, !dbg !3327
  store i32 %shr54, i32* %c_height, align 4, !dbg !3328
  %72 = load i32, i32* %c_width, align 4, !dbg !3329
  %add55 = add nsw i32 %72, 31, !dbg !3330
  %div56 = sdiv i32 %add55, 32, !dbg !3331
  %73 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3332
  %c_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %73, i32 0, i32 29, !dbg !3333
  store i32 %div56, i32* %c_superblock_width, align 8, !dbg !3334
  %74 = load i32, i32* %c_height, align 4, !dbg !3335
  %add57 = add nsw i32 %74, 31, !dbg !3336
  %div58 = sdiv i32 %add57, 32, !dbg !3337
  %75 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3338
  %c_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %75, i32 0, i32 30, !dbg !3339
  store i32 %div58, i32* %c_superblock_height, align 4, !dbg !3340
  %76 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3341
  %c_superblock_width59 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %76, i32 0, i32 29, !dbg !3342
  %77 = load i32, i32* %c_superblock_width59, align 8, !dbg !3342
  %78 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3343
  %c_superblock_height60 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %78, i32 0, i32 30, !dbg !3344
  %79 = load i32, i32* %c_superblock_height60, align 4, !dbg !3344
  %mul61 = mul nsw i32 %77, %79, !dbg !3345
  %80 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3346
  %c_superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %80, i32 0, i32 31, !dbg !3347
  store i32 %mul61, i32* %c_superblock_count, align 16, !dbg !3348
  %81 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3349
  %y_superblock_count62 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %81, i32 0, i32 28, !dbg !3350
  %82 = load i32, i32* %y_superblock_count62, align 4, !dbg !3350
  %83 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3351
  %c_superblock_count63 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %83, i32 0, i32 31, !dbg !3352
  %84 = load i32, i32* %c_superblock_count63, align 16, !dbg !3352
  %mul64 = mul nsw i32 %84, 2, !dbg !3353
  %add65 = add nsw i32 %82, %mul64, !dbg !3354
  %85 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3355
  %superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %85, i32 0, i32 25, !dbg !3356
  store i32 %add65, i32* %superblock_count, align 8, !dbg !3357
  %86 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3358
  %y_superblock_count66 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %86, i32 0, i32 28, !dbg !3359
  %87 = load i32, i32* %y_superblock_count66, align 4, !dbg !3359
  %88 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3360
  %u_superblock_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %88, i32 0, i32 32, !dbg !3361
  store i32 %87, i32* %u_superblock_start, align 4, !dbg !3362
  %89 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3363
  %u_superblock_start67 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %89, i32 0, i32 32, !dbg !3364
  %90 = load i32, i32* %u_superblock_start67, align 4, !dbg !3364
  %91 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3365
  %c_superblock_count68 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %91, i32 0, i32 31, !dbg !3366
  %92 = load i32, i32* %c_superblock_count68, align 16, !dbg !3366
  %add69 = add nsw i32 %90, %92, !dbg !3367
  %93 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3368
  %v_superblock_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %93, i32 0, i32 33, !dbg !3369
  store i32 %add69, i32* %v_superblock_start, align 8, !dbg !3370
  %94 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3371
  %width70 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %94, i32 0, i32 5, !dbg !3372
  %95 = load i32, i32* %width70, align 8, !dbg !3372
  %add71 = add nsw i32 %95, 15, !dbg !3373
  %div72 = sdiv i32 %add71, 16, !dbg !3374
  %96 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3375
  %macroblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %96, i32 0, i32 36, !dbg !3376
  store i32 %div72, i32* %macroblock_width, align 4, !dbg !3377
  %97 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3378
  %height73 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %97, i32 0, i32 6, !dbg !3379
  %98 = load i32, i32* %height73, align 4, !dbg !3379
  %add74 = add nsw i32 %98, 15, !dbg !3380
  %div75 = sdiv i32 %add74, 16, !dbg !3381
  %99 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3382
  %macroblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %99, i32 0, i32 37, !dbg !3383
  store i32 %div75, i32* %macroblock_height, align 16, !dbg !3384
  %100 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3385
  %macroblock_width76 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %100, i32 0, i32 36, !dbg !3386
  %101 = load i32, i32* %macroblock_width76, align 4, !dbg !3386
  %102 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3387
  %macroblock_height77 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %102, i32 0, i32 37, !dbg !3388
  %103 = load i32, i32* %macroblock_height77, align 16, !dbg !3388
  %mul78 = mul nsw i32 %101, %103, !dbg !3389
  %104 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3390
  %macroblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %104, i32 0, i32 35, !dbg !3391
  store i32 %mul78, i32* %macroblock_count, align 8, !dbg !3392
  %105 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3393
  %width79 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %105, i32 0, i32 5, !dbg !3394
  %106 = load i32, i32* %width79, align 8, !dbg !3394
  %div80 = sdiv i32 %106, 8, !dbg !3395
  %107 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3396
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %107, i32 0, i32 39, !dbg !3397
  %arrayidx81 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 0, !dbg !3396
  store i32 %div80, i32* %arrayidx81, align 8, !dbg !3398
  %108 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3399
  %height82 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %108, i32 0, i32 6, !dbg !3400
  %109 = load i32, i32* %height82, align 4, !dbg !3400
  %div83 = sdiv i32 %109, 8, !dbg !3401
  %110 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3402
  %fragment_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %110, i32 0, i32 40, !dbg !3403
  %arrayidx84 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height, i64 0, i64 0, !dbg !3402
  store i32 %div83, i32* %arrayidx84, align 16, !dbg !3404
  %111 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3405
  %fragment_width85 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %111, i32 0, i32 39, !dbg !3406
  %arrayidx86 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width85, i64 0, i64 0, !dbg !3405
  %112 = load i32, i32* %arrayidx86, align 8, !dbg !3405
  %113 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3407
  %chroma_x_shift87 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %113, i32 0, i32 7, !dbg !3408
  %114 = load i32, i32* %chroma_x_shift87, align 16, !dbg !3408
  %shr88 = ashr i32 %112, %114, !dbg !3409
  %115 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3410
  %fragment_width89 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %115, i32 0, i32 39, !dbg !3411
  %arrayidx90 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width89, i64 0, i64 1, !dbg !3410
  store i32 %shr88, i32* %arrayidx90, align 4, !dbg !3412
  %116 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3413
  %fragment_height91 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %116, i32 0, i32 40, !dbg !3414
  %arrayidx92 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height91, i64 0, i64 0, !dbg !3413
  %117 = load i32, i32* %arrayidx92, align 16, !dbg !3413
  %118 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3415
  %chroma_y_shift93 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %118, i32 0, i32 8, !dbg !3416
  %119 = load i32, i32* %chroma_y_shift93, align 4, !dbg !3416
  %shr94 = ashr i32 %117, %119, !dbg !3417
  %120 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3418
  %fragment_height95 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %120, i32 0, i32 40, !dbg !3419
  %arrayidx96 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height95, i64 0, i64 1, !dbg !3418
  store i32 %shr94, i32* %arrayidx96, align 4, !dbg !3420
  %121 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3421
  %fragment_width97 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %121, i32 0, i32 39, !dbg !3422
  %arrayidx98 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width97, i64 0, i64 0, !dbg !3421
  %122 = load i32, i32* %arrayidx98, align 8, !dbg !3421
  %123 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3423
  %fragment_height99 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %123, i32 0, i32 40, !dbg !3424
  %arrayidx100 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height99, i64 0, i64 0, !dbg !3423
  %124 = load i32, i32* %arrayidx100, align 16, !dbg !3423
  %mul101 = mul nsw i32 %122, %124, !dbg !3425
  store i32 %mul101, i32* %y_fragment_count, align 4, !dbg !3426
  %125 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3427
  %fragment_width102 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %125, i32 0, i32 39, !dbg !3428
  %arrayidx103 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width102, i64 0, i64 1, !dbg !3427
  %126 = load i32, i32* %arrayidx103, align 4, !dbg !3427
  %127 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3429
  %fragment_height104 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %127, i32 0, i32 40, !dbg !3430
  %arrayidx105 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height104, i64 0, i64 1, !dbg !3429
  %128 = load i32, i32* %arrayidx105, align 4, !dbg !3429
  %mul106 = mul nsw i32 %126, %128, !dbg !3431
  store i32 %mul106, i32* %c_fragment_count, align 4, !dbg !3432
  %129 = load i32, i32* %y_fragment_count, align 4, !dbg !3433
  %130 = load i32, i32* %c_fragment_count, align 4, !dbg !3434
  %mul107 = mul nsw i32 2, %130, !dbg !3435
  %add108 = add nsw i32 %129, %mul107, !dbg !3436
  %131 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3437
  %fragment_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %131, i32 0, i32 38, !dbg !3438
  store i32 %add108, i32* %fragment_count, align 4, !dbg !3439
  %132 = load i32, i32* %y_fragment_count, align 4, !dbg !3440
  %133 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3441
  %fragment_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %133, i32 0, i32 42, !dbg !3442
  %arrayidx109 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start, i64 0, i64 1, !dbg !3441
  store i32 %132, i32* %arrayidx109, align 4, !dbg !3443
  %134 = load i32, i32* %y_fragment_count, align 4, !dbg !3444
  %135 = load i32, i32* %c_fragment_count, align 4, !dbg !3445
  %add110 = add nsw i32 %134, %135, !dbg !3446
  %136 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3447
  %fragment_start111 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %136, i32 0, i32 42, !dbg !3448
  %arrayidx112 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start111, i64 0, i64 2, !dbg !3447
  store i32 %add110, i32* %arrayidx112, align 8, !dbg !3449
  %137 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3450
  %theora_tables = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %137, i32 0, i32 2, !dbg !3452
  %138 = load i32, i32* %theora_tables, align 4, !dbg !3452
  %tobool113 = icmp ne i32 %138, 0, !dbg !3450
  br i1 %tobool113, label %if.else258, label %if.then114, !dbg !3453

if.then114:                                       ; preds = %if.end41
  store i32 0, i32* %i, align 4, !dbg !3454
  br label %for.cond115, !dbg !3457

for.cond115:                                      ; preds = %for.inc150, %if.then114
  %139 = load i32, i32* %i, align 4, !dbg !3458
  %cmp116 = icmp slt i32 %139, 64, !dbg !3461
  br i1 %cmp116, label %for.body118, label %for.end152, !dbg !3462

for.body118:                                      ; preds = %for.cond115
  %140 = load i32, i32* %i, align 4, !dbg !3463
  %idxprom119 = sext i32 %140 to i64, !dbg !3465
  %arrayidx120 = getelementptr inbounds [64 x i8], [64 x i8]* @vp31_dc_scale_factor, i64 0, i64 %idxprom119, !dbg !3465
  %141 = load i8, i8* %arrayidx120, align 1, !dbg !3465
  %conv121 = zext i8 %141 to i16, !dbg !3465
  %142 = load i32, i32* %i, align 4, !dbg !3466
  %idxprom122 = sext i32 %142 to i64, !dbg !3467
  %143 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3467
  %coded_dc_scale_factor = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %143, i32 0, i32 48, !dbg !3468
  %arrayidx123 = getelementptr inbounds [64 x i16], [64 x i16]* %coded_dc_scale_factor, i64 0, i64 %idxprom122, !dbg !3467
  store i16 %conv121, i16* %arrayidx123, align 2, !dbg !3469
  %144 = load i32, i32* %i, align 4, !dbg !3470
  %idxprom124 = sext i32 %144 to i64, !dbg !3471
  %arrayidx125 = getelementptr inbounds [64 x i16], [64 x i16]* @vp31_ac_scale_factor, i64 0, i64 %idxprom124, !dbg !3471
  %145 = load i16, i16* %arrayidx125, align 2, !dbg !3471
  %conv126 = zext i16 %145 to i32, !dbg !3471
  %146 = load i32, i32* %i, align 4, !dbg !3472
  %idxprom127 = sext i32 %146 to i64, !dbg !3473
  %147 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3473
  %coded_ac_scale_factor = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %147, i32 0, i32 49, !dbg !3474
  %arrayidx128 = getelementptr inbounds [64 x i32], [64 x i32]* %coded_ac_scale_factor, i64 0, i64 %idxprom127, !dbg !3473
  store i32 %conv126, i32* %arrayidx128, align 4, !dbg !3475
  %148 = load i32, i32* %i, align 4, !dbg !3476
  %idxprom129 = sext i32 %148 to i64, !dbg !3477
  %arrayidx130 = getelementptr inbounds [64 x i8], [64 x i8]* @vp31_intra_y_dequant, i64 0, i64 %idxprom129, !dbg !3477
  %149 = load i8, i8* %arrayidx130, align 1, !dbg !3477
  %150 = load i32, i32* %i, align 4, !dbg !3478
  %idxprom131 = sext i32 %150 to i64, !dbg !3479
  %151 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3479
  %base_matrix = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %151, i32 0, i32 50, !dbg !3480
  %arrayidx132 = getelementptr inbounds [384 x [64 x i8]], [384 x [64 x i8]]* %base_matrix, i64 0, i64 0, !dbg !3479
  %arrayidx133 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx132, i64 0, i64 %idxprom131, !dbg !3479
  store i8 %149, i8* %arrayidx133, align 1, !dbg !3481
  %152 = load i32, i32* %i, align 4, !dbg !3482
  %idxprom134 = sext i32 %152 to i64, !dbg !3483
  %arrayidx135 = getelementptr inbounds [64 x i8], [64 x i8]* @vp31_intra_c_dequant, i64 0, i64 %idxprom134, !dbg !3483
  %153 = load i8, i8* %arrayidx135, align 1, !dbg !3483
  %154 = load i32, i32* %i, align 4, !dbg !3484
  %idxprom136 = sext i32 %154 to i64, !dbg !3485
  %155 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3485
  %base_matrix137 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %155, i32 0, i32 50, !dbg !3486
  %arrayidx138 = getelementptr inbounds [384 x [64 x i8]], [384 x [64 x i8]]* %base_matrix137, i64 0, i64 1, !dbg !3485
  %arrayidx139 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx138, i64 0, i64 %idxprom136, !dbg !3485
  store i8 %153, i8* %arrayidx139, align 1, !dbg !3487
  %156 = load i32, i32* %i, align 4, !dbg !3488
  %idxprom140 = sext i32 %156 to i64, !dbg !3489
  %arrayidx141 = getelementptr inbounds [64 x i8], [64 x i8]* @vp31_inter_dequant, i64 0, i64 %idxprom140, !dbg !3489
  %157 = load i8, i8* %arrayidx141, align 1, !dbg !3489
  %158 = load i32, i32* %i, align 4, !dbg !3490
  %idxprom142 = sext i32 %158 to i64, !dbg !3491
  %159 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3491
  %base_matrix143 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %159, i32 0, i32 50, !dbg !3492
  %arrayidx144 = getelementptr inbounds [384 x [64 x i8]], [384 x [64 x i8]]* %base_matrix143, i64 0, i64 2, !dbg !3491
  %arrayidx145 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx144, i64 0, i64 %idxprom142, !dbg !3491
  store i8 %157, i8* %arrayidx145, align 1, !dbg !3493
  %160 = load i32, i32* %i, align 4, !dbg !3494
  %idxprom146 = sext i32 %160 to i64, !dbg !3495
  %arrayidx147 = getelementptr inbounds [64 x i8], [64 x i8]* @vp31_filter_limit_values, i64 0, i64 %idxprom146, !dbg !3495
  %161 = load i8, i8* %arrayidx147, align 1, !dbg !3495
  %162 = load i32, i32* %i, align 4, !dbg !3496
  %idxprom148 = sext i32 %162 to i64, !dbg !3497
  %163 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3497
  %filter_limit_values = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %163, i32 0, i32 80, !dbg !3498
  %arrayidx149 = getelementptr inbounds [64 x i8], [64 x i8]* %filter_limit_values, i64 0, i64 %idxprom148, !dbg !3497
  store i8 %161, i8* %arrayidx149, align 1, !dbg !3499
  br label %for.inc150, !dbg !3500

for.inc150:                                       ; preds = %for.body118
  %164 = load i32, i32* %i, align 4, !dbg !3501
  %inc151 = add nsw i32 %164, 1, !dbg !3501
  store i32 %inc151, i32* %i, align 4, !dbg !3501
  br label %for.cond115, !dbg !3503, !llvm.loop !3504

for.end152:                                       ; preds = %for.cond115
  store i32 0, i32* %inter, align 4, !dbg !3506
  br label %for.cond153, !dbg !3508

for.cond153:                                      ; preds = %for.inc193, %for.end152
  %165 = load i32, i32* %inter, align 4, !dbg !3509
  %cmp154 = icmp slt i32 %165, 2, !dbg !3512
  br i1 %cmp154, label %for.body156, label %for.end195, !dbg !3513

for.body156:                                      ; preds = %for.cond153
  store i32 0, i32* %plane, align 4, !dbg !3514
  br label %for.cond157, !dbg !3517

for.cond157:                                      ; preds = %for.inc190, %for.body156
  %166 = load i32, i32* %plane, align 4, !dbg !3518
  %cmp158 = icmp slt i32 %166, 3, !dbg !3521
  br i1 %cmp158, label %for.body160, label %for.end192, !dbg !3522

for.body160:                                      ; preds = %for.cond157
  %167 = load i32, i32* %plane, align 4, !dbg !3523
  %idxprom161 = sext i32 %167 to i64, !dbg !3525
  %168 = load i32, i32* %inter, align 4, !dbg !3526
  %idxprom162 = sext i32 %168 to i64, !dbg !3525
  %169 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3525
  %qr_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %169, i32 0, i32 51, !dbg !3527
  %arrayidx163 = getelementptr inbounds [2 x [3 x i8]], [2 x [3 x i8]]* %qr_count, i64 0, i64 %idxprom162, !dbg !3525
  %arrayidx164 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx163, i64 0, i64 %idxprom161, !dbg !3525
  store i8 1, i8* %arrayidx164, align 1, !dbg !3528
  %170 = load i32, i32* %plane, align 4, !dbg !3529
  %idxprom165 = sext i32 %170 to i64, !dbg !3530
  %171 = load i32, i32* %inter, align 4, !dbg !3531
  %idxprom166 = sext i32 %171 to i64, !dbg !3530
  %172 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3530
  %qr_size = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %172, i32 0, i32 52, !dbg !3532
  %arrayidx167 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size, i64 0, i64 %idxprom166, !dbg !3530
  %arrayidx168 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx167, i64 0, i64 %idxprom165, !dbg !3530
  %arrayidx169 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx168, i64 0, i64 0, !dbg !3530
  store i8 63, i8* %arrayidx169, align 2, !dbg !3533
  %173 = load i32, i32* %inter, align 4, !dbg !3534
  %mul170 = mul nsw i32 2, %173, !dbg !3535
  %174 = load i32, i32* %plane, align 4, !dbg !3536
  %tobool171 = icmp ne i32 %174, 0, !dbg !3537
  %lnot = xor i1 %tobool171, true, !dbg !3537
  %lnot172 = xor i1 %lnot, true, !dbg !3538
  %lnot.ext = zext i1 %lnot172 to i32, !dbg !3538
  %175 = load i32, i32* %inter, align 4, !dbg !3539
  %tobool173 = icmp ne i32 %175, 0, !dbg !3540
  %lnot174 = xor i1 %tobool173, true, !dbg !3540
  %lnot.ext175 = zext i1 %lnot174 to i32, !dbg !3540
  %mul176 = mul nsw i32 %lnot.ext, %lnot.ext175, !dbg !3541
  %add177 = add nsw i32 %mul170, %mul176, !dbg !3542
  %conv178 = trunc i32 %add177 to i16, !dbg !3543
  %176 = load i32, i32* %plane, align 4, !dbg !3544
  %idxprom179 = sext i32 %176 to i64, !dbg !3545
  %177 = load i32, i32* %inter, align 4, !dbg !3546
  %idxprom180 = sext i32 %177 to i64, !dbg !3545
  %178 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3545
  %qr_base = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %178, i32 0, i32 53, !dbg !3547
  %arrayidx181 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %qr_base, i64 0, i64 %idxprom180, !dbg !3545
  %arrayidx182 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx181, i64 0, i64 %idxprom179, !dbg !3545
  %arrayidx183 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx182, i64 0, i64 1, !dbg !3545
  store i16 %conv178, i16* %arrayidx183, align 2, !dbg !3548
  %179 = load i32, i32* %plane, align 4, !dbg !3549
  %idxprom184 = sext i32 %179 to i64, !dbg !3550
  %180 = load i32, i32* %inter, align 4, !dbg !3551
  %idxprom185 = sext i32 %180 to i64, !dbg !3550
  %181 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3550
  %qr_base186 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %181, i32 0, i32 53, !dbg !3552
  %arrayidx187 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %qr_base186, i64 0, i64 %idxprom185, !dbg !3550
  %arrayidx188 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx187, i64 0, i64 %idxprom184, !dbg !3550
  %arrayidx189 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx188, i64 0, i64 0, !dbg !3550
  store i16 %conv178, i16* %arrayidx189, align 2, !dbg !3553
  br label %for.inc190, !dbg !3554

for.inc190:                                       ; preds = %for.body160
  %182 = load i32, i32* %plane, align 4, !dbg !3555
  %inc191 = add nsw i32 %182, 1, !dbg !3555
  store i32 %inc191, i32* %plane, align 4, !dbg !3555
  br label %for.cond157, !dbg !3557, !llvm.loop !3558

for.end192:                                       ; preds = %for.cond157
  br label %for.inc193, !dbg !3560

for.inc193:                                       ; preds = %for.end192
  %183 = load i32, i32* %inter, align 4, !dbg !3561
  %inc194 = add nsw i32 %183, 1, !dbg !3561
  store i32 %inc194, i32* %inter, align 4, !dbg !3561
  br label %for.cond153, !dbg !3563, !llvm.loop !3564

for.end195:                                       ; preds = %for.cond153
  store i32 0, i32* %i, align 4, !dbg !3566
  br label %for.cond196, !dbg !3568

for.cond196:                                      ; preds = %for.inc255, %for.end195
  %184 = load i32, i32* %i, align 4, !dbg !3569
  %cmp197 = icmp slt i32 %184, 16, !dbg !3572
  br i1 %cmp197, label %for.body199, label %for.end257, !dbg !3573

for.body199:                                      ; preds = %for.cond196
  %185 = load i32, i32* %i, align 4, !dbg !3574
  %idxprom200 = sext i32 %185 to i64, !dbg !3576
  %186 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3576
  %dc_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %186, i32 0, i32 62, !dbg !3577
  %arrayidx201 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %dc_vlc, i64 0, i64 %idxprom200, !dbg !3576
  %187 = load i32, i32* %i, align 4, !dbg !3578
  %idxprom202 = sext i32 %187 to i64, !dbg !3579
  %arrayidx203 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @dc_bias, i64 0, i64 %idxprom202, !dbg !3579
  %arrayidx204 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx203, i64 0, i64 0, !dbg !3579
  %arrayidx205 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx204, i64 0, i64 1, !dbg !3579
  %188 = bitcast i16* %arrayidx205 to i8*, !dbg !3580
  %189 = load i32, i32* %i, align 4, !dbg !3581
  %idxprom206 = sext i32 %189 to i64, !dbg !3582
  %arrayidx207 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @dc_bias, i64 0, i64 %idxprom206, !dbg !3582
  %arrayidx208 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx207, i64 0, i64 0, !dbg !3582
  %arrayidx209 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx208, i64 0, i64 0, !dbg !3582
  %190 = bitcast i16* %arrayidx209 to i8*, !dbg !3583
  %call210 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx201, i32 11, i32 32, i8* %188, i32 4, i32 2, i8* %190, i32 4, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !3584
  %191 = load i32, i32* %i, align 4, !dbg !3585
  %idxprom211 = sext i32 %191 to i64, !dbg !3586
  %192 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3586
  %ac_vlc_1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %192, i32 0, i32 63, !dbg !3587
  %arrayidx212 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_1, i64 0, i64 %idxprom211, !dbg !3586
  %193 = load i32, i32* %i, align 4, !dbg !3588
  %idxprom213 = sext i32 %193 to i64, !dbg !3589
  %arrayidx214 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_0, i64 0, i64 %idxprom213, !dbg !3589
  %arrayidx215 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx214, i64 0, i64 0, !dbg !3589
  %arrayidx216 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx215, i64 0, i64 1, !dbg !3589
  %194 = bitcast i16* %arrayidx216 to i8*, !dbg !3590
  %195 = load i32, i32* %i, align 4, !dbg !3591
  %idxprom217 = sext i32 %195 to i64, !dbg !3592
  %arrayidx218 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_0, i64 0, i64 %idxprom217, !dbg !3592
  %arrayidx219 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx218, i64 0, i64 0, !dbg !3592
  %arrayidx220 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx219, i64 0, i64 0, !dbg !3592
  %196 = bitcast i16* %arrayidx220 to i8*, !dbg !3593
  %call221 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx212, i32 11, i32 32, i8* %194, i32 4, i32 2, i8* %196, i32 4, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !3594
  %197 = load i32, i32* %i, align 4, !dbg !3595
  %idxprom222 = sext i32 %197 to i64, !dbg !3596
  %198 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3596
  %ac_vlc_2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %198, i32 0, i32 64, !dbg !3597
  %arrayidx223 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_2, i64 0, i64 %idxprom222, !dbg !3596
  %199 = load i32, i32* %i, align 4, !dbg !3598
  %idxprom224 = sext i32 %199 to i64, !dbg !3599
  %arrayidx225 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_1, i64 0, i64 %idxprom224, !dbg !3599
  %arrayidx226 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx225, i64 0, i64 0, !dbg !3599
  %arrayidx227 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx226, i64 0, i64 1, !dbg !3599
  %200 = bitcast i16* %arrayidx227 to i8*, !dbg !3600
  %201 = load i32, i32* %i, align 4, !dbg !3601
  %idxprom228 = sext i32 %201 to i64, !dbg !3602
  %arrayidx229 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_1, i64 0, i64 %idxprom228, !dbg !3602
  %arrayidx230 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx229, i64 0, i64 0, !dbg !3602
  %arrayidx231 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx230, i64 0, i64 0, !dbg !3602
  %202 = bitcast i16* %arrayidx231 to i8*, !dbg !3603
  %call232 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx223, i32 11, i32 32, i8* %200, i32 4, i32 2, i8* %202, i32 4, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !3604
  %203 = load i32, i32* %i, align 4, !dbg !3605
  %idxprom233 = sext i32 %203 to i64, !dbg !3606
  %204 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3606
  %ac_vlc_3 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %204, i32 0, i32 65, !dbg !3607
  %arrayidx234 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_3, i64 0, i64 %idxprom233, !dbg !3606
  %205 = load i32, i32* %i, align 4, !dbg !3608
  %idxprom235 = sext i32 %205 to i64, !dbg !3609
  %arrayidx236 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_2, i64 0, i64 %idxprom235, !dbg !3609
  %arrayidx237 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx236, i64 0, i64 0, !dbg !3609
  %arrayidx238 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx237, i64 0, i64 1, !dbg !3609
  %206 = bitcast i16* %arrayidx238 to i8*, !dbg !3610
  %207 = load i32, i32* %i, align 4, !dbg !3611
  %idxprom239 = sext i32 %207 to i64, !dbg !3612
  %arrayidx240 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_2, i64 0, i64 %idxprom239, !dbg !3612
  %arrayidx241 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx240, i64 0, i64 0, !dbg !3612
  %arrayidx242 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx241, i64 0, i64 0, !dbg !3612
  %208 = bitcast i16* %arrayidx242 to i8*, !dbg !3613
  %call243 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx234, i32 11, i32 32, i8* %206, i32 4, i32 2, i8* %208, i32 4, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !3614
  %209 = load i32, i32* %i, align 4, !dbg !3615
  %idxprom244 = sext i32 %209 to i64, !dbg !3616
  %210 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3616
  %ac_vlc_4 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %210, i32 0, i32 66, !dbg !3617
  %arrayidx245 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_4, i64 0, i64 %idxprom244, !dbg !3616
  %211 = load i32, i32* %i, align 4, !dbg !3618
  %idxprom246 = sext i32 %211 to i64, !dbg !3619
  %arrayidx247 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_3, i64 0, i64 %idxprom246, !dbg !3619
  %arrayidx248 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx247, i64 0, i64 0, !dbg !3619
  %arrayidx249 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx248, i64 0, i64 1, !dbg !3619
  %212 = bitcast i16* %arrayidx249 to i8*, !dbg !3620
  %213 = load i32, i32* %i, align 4, !dbg !3621
  %idxprom250 = sext i32 %213 to i64, !dbg !3622
  %arrayidx251 = getelementptr inbounds [16 x [32 x [2 x i16]]], [16 x [32 x [2 x i16]]]* @ac_bias_3, i64 0, i64 %idxprom250, !dbg !3622
  %arrayidx252 = getelementptr inbounds [32 x [2 x i16]], [32 x [2 x i16]]* %arrayidx251, i64 0, i64 0, !dbg !3622
  %arrayidx253 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx252, i64 0, i64 0, !dbg !3622
  %214 = bitcast i16* %arrayidx253 to i8*, !dbg !3623
  %call254 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx245, i32 11, i32 32, i8* %212, i32 4, i32 2, i8* %214, i32 4, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !3624
  br label %for.inc255, !dbg !3625

for.inc255:                                       ; preds = %for.body199
  %215 = load i32, i32* %i, align 4, !dbg !3626
  %inc256 = add nsw i32 %215, 1, !dbg !3626
  store i32 %inc256, i32* %i, align 4, !dbg !3626
  br label %for.cond196, !dbg !3628, !llvm.loop !3629

for.end257:                                       ; preds = %for.cond196
  br label %if.end363, !dbg !3631

if.else258:                                       ; preds = %if.end41
  store i32 0, i32* %i, align 4, !dbg !3632
  br label %for.cond259, !dbg !3635

for.cond259:                                      ; preds = %for.inc360, %if.else258
  %216 = load i32, i32* %i, align 4, !dbg !3636
  %cmp260 = icmp slt i32 %216, 16, !dbg !3639
  br i1 %cmp260, label %for.body262, label %for.end362, !dbg !3640

for.body262:                                      ; preds = %for.cond259
  %217 = load i32, i32* %i, align 4, !dbg !3641
  %idxprom263 = sext i32 %217 to i64, !dbg !3644
  %218 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3644
  %dc_vlc264 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %218, i32 0, i32 62, !dbg !3645
  %arrayidx265 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %dc_vlc264, i64 0, i64 %idxprom263, !dbg !3644
  %219 = load i32, i32* %i, align 4, !dbg !3646
  %idxprom266 = sext i32 %219 to i64, !dbg !3647
  %220 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3647
  %huffman_table = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %220, i32 0, i32 79, !dbg !3648
  %arrayidx267 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table, i64 0, i64 %idxprom266, !dbg !3647
  %arrayidx268 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx267, i64 0, i64 0, !dbg !3647
  %arrayidx269 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx268, i64 0, i64 1, !dbg !3647
  %221 = bitcast i32* %arrayidx269 to i8*, !dbg !3649
  %222 = load i32, i32* %i, align 4, !dbg !3650
  %idxprom270 = sext i32 %222 to i64, !dbg !3651
  %223 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3651
  %huffman_table271 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %223, i32 0, i32 79, !dbg !3652
  %arrayidx272 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table271, i64 0, i64 %idxprom270, !dbg !3651
  %arrayidx273 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx272, i64 0, i64 0, !dbg !3651
  %arrayidx274 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx273, i64 0, i64 0, !dbg !3651
  %224 = bitcast i32* %arrayidx274 to i8*, !dbg !3653
  %call275 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx265, i32 11, i32 32, i8* %221, i32 8, i32 4, i8* %224, i32 8, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !3654
  %cmp276 = icmp slt i32 %call275, 0, !dbg !3655
  br i1 %cmp276, label %if.then278, label %if.end279, !dbg !3656

if.then278:                                       ; preds = %for.body262
  br label %vlc_fail, !dbg !3657

if.end279:                                        ; preds = %for.body262
  %225 = load i32, i32* %i, align 4, !dbg !3658
  %idxprom280 = sext i32 %225 to i64, !dbg !3660
  %226 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3660
  %ac_vlc_1281 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %226, i32 0, i32 63, !dbg !3661
  %arrayidx282 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_1281, i64 0, i64 %idxprom280, !dbg !3660
  %227 = load i32, i32* %i, align 4, !dbg !3662
  %add283 = add nsw i32 %227, 16, !dbg !3663
  %idxprom284 = sext i32 %add283 to i64, !dbg !3664
  %228 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3664
  %huffman_table285 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %228, i32 0, i32 79, !dbg !3665
  %arrayidx286 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table285, i64 0, i64 %idxprom284, !dbg !3664
  %arrayidx287 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx286, i64 0, i64 0, !dbg !3664
  %arrayidx288 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx287, i64 0, i64 1, !dbg !3664
  %229 = bitcast i32* %arrayidx288 to i8*, !dbg !3666
  %230 = load i32, i32* %i, align 4, !dbg !3667
  %add289 = add nsw i32 %230, 16, !dbg !3668
  %idxprom290 = sext i32 %add289 to i64, !dbg !3669
  %231 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3669
  %huffman_table291 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %231, i32 0, i32 79, !dbg !3670
  %arrayidx292 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table291, i64 0, i64 %idxprom290, !dbg !3669
  %arrayidx293 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx292, i64 0, i64 0, !dbg !3669
  %arrayidx294 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx293, i64 0, i64 0, !dbg !3669
  %232 = bitcast i32* %arrayidx294 to i8*, !dbg !3671
  %call295 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx282, i32 11, i32 32, i8* %229, i32 8, i32 4, i8* %232, i32 8, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !3672
  %cmp296 = icmp slt i32 %call295, 0, !dbg !3673
  br i1 %cmp296, label %if.then298, label %if.end299, !dbg !3674

if.then298:                                       ; preds = %if.end279
  br label %vlc_fail, !dbg !3675

if.end299:                                        ; preds = %if.end279
  %233 = load i32, i32* %i, align 4, !dbg !3676
  %idxprom300 = sext i32 %233 to i64, !dbg !3678
  %234 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3678
  %ac_vlc_2301 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %234, i32 0, i32 64, !dbg !3679
  %arrayidx302 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_2301, i64 0, i64 %idxprom300, !dbg !3678
  %235 = load i32, i32* %i, align 4, !dbg !3680
  %add303 = add nsw i32 %235, 32, !dbg !3681
  %idxprom304 = sext i32 %add303 to i64, !dbg !3682
  %236 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3682
  %huffman_table305 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %236, i32 0, i32 79, !dbg !3683
  %arrayidx306 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table305, i64 0, i64 %idxprom304, !dbg !3682
  %arrayidx307 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx306, i64 0, i64 0, !dbg !3682
  %arrayidx308 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx307, i64 0, i64 1, !dbg !3682
  %237 = bitcast i32* %arrayidx308 to i8*, !dbg !3684
  %238 = load i32, i32* %i, align 4, !dbg !3685
  %add309 = add nsw i32 %238, 32, !dbg !3686
  %idxprom310 = sext i32 %add309 to i64, !dbg !3687
  %239 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3687
  %huffman_table311 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %239, i32 0, i32 79, !dbg !3688
  %arrayidx312 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table311, i64 0, i64 %idxprom310, !dbg !3687
  %arrayidx313 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx312, i64 0, i64 0, !dbg !3687
  %arrayidx314 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx313, i64 0, i64 0, !dbg !3687
  %240 = bitcast i32* %arrayidx314 to i8*, !dbg !3689
  %call315 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx302, i32 11, i32 32, i8* %237, i32 8, i32 4, i8* %240, i32 8, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !3690
  %cmp316 = icmp slt i32 %call315, 0, !dbg !3691
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !3692

if.then318:                                       ; preds = %if.end299
  br label %vlc_fail, !dbg !3693

if.end319:                                        ; preds = %if.end299
  %241 = load i32, i32* %i, align 4, !dbg !3694
  %idxprom320 = sext i32 %241 to i64, !dbg !3696
  %242 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3696
  %ac_vlc_3321 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %242, i32 0, i32 65, !dbg !3697
  %arrayidx322 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_3321, i64 0, i64 %idxprom320, !dbg !3696
  %243 = load i32, i32* %i, align 4, !dbg !3698
  %add323 = add nsw i32 %243, 48, !dbg !3699
  %idxprom324 = sext i32 %add323 to i64, !dbg !3700
  %244 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3700
  %huffman_table325 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %244, i32 0, i32 79, !dbg !3701
  %arrayidx326 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table325, i64 0, i64 %idxprom324, !dbg !3700
  %arrayidx327 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx326, i64 0, i64 0, !dbg !3700
  %arrayidx328 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx327, i64 0, i64 1, !dbg !3700
  %245 = bitcast i32* %arrayidx328 to i8*, !dbg !3702
  %246 = load i32, i32* %i, align 4, !dbg !3703
  %add329 = add nsw i32 %246, 48, !dbg !3704
  %idxprom330 = sext i32 %add329 to i64, !dbg !3705
  %247 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3705
  %huffman_table331 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %247, i32 0, i32 79, !dbg !3706
  %arrayidx332 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table331, i64 0, i64 %idxprom330, !dbg !3705
  %arrayidx333 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx332, i64 0, i64 0, !dbg !3705
  %arrayidx334 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx333, i64 0, i64 0, !dbg !3705
  %248 = bitcast i32* %arrayidx334 to i8*, !dbg !3707
  %call335 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx322, i32 11, i32 32, i8* %245, i32 8, i32 4, i8* %248, i32 8, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !3708
  %cmp336 = icmp slt i32 %call335, 0, !dbg !3709
  br i1 %cmp336, label %if.then338, label %if.end339, !dbg !3710

if.then338:                                       ; preds = %if.end319
  br label %vlc_fail, !dbg !3711

if.end339:                                        ; preds = %if.end319
  %249 = load i32, i32* %i, align 4, !dbg !3712
  %idxprom340 = sext i32 %249 to i64, !dbg !3714
  %250 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3714
  %ac_vlc_4341 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %250, i32 0, i32 66, !dbg !3715
  %arrayidx342 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_4341, i64 0, i64 %idxprom340, !dbg !3714
  %251 = load i32, i32* %i, align 4, !dbg !3716
  %add343 = add nsw i32 %251, 64, !dbg !3717
  %idxprom344 = sext i32 %add343 to i64, !dbg !3718
  %252 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3718
  %huffman_table345 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %252, i32 0, i32 79, !dbg !3719
  %arrayidx346 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table345, i64 0, i64 %idxprom344, !dbg !3718
  %arrayidx347 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx346, i64 0, i64 0, !dbg !3718
  %arrayidx348 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx347, i64 0, i64 1, !dbg !3718
  %253 = bitcast i32* %arrayidx348 to i8*, !dbg !3720
  %254 = load i32, i32* %i, align 4, !dbg !3721
  %add349 = add nsw i32 %254, 64, !dbg !3722
  %idxprom350 = sext i32 %add349 to i64, !dbg !3723
  %255 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3723
  %huffman_table351 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %255, i32 0, i32 79, !dbg !3724
  %arrayidx352 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table351, i64 0, i64 %idxprom350, !dbg !3723
  %arrayidx353 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx352, i64 0, i64 0, !dbg !3723
  %arrayidx354 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx353, i64 0, i64 0, !dbg !3723
  %256 = bitcast i32* %arrayidx354 to i8*, !dbg !3725
  %call355 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx342, i32 11, i32 32, i8* %253, i32 8, i32 4, i8* %256, i32 8, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !3726
  %cmp356 = icmp slt i32 %call355, 0, !dbg !3727
  br i1 %cmp356, label %if.then358, label %if.end359, !dbg !3728

if.then358:                                       ; preds = %if.end339
  br label %vlc_fail, !dbg !3729

if.end359:                                        ; preds = %if.end339
  br label %for.inc360, !dbg !3730

for.inc360:                                       ; preds = %if.end359
  %257 = load i32, i32* %i, align 4, !dbg !3731
  %inc361 = add nsw i32 %257, 1, !dbg !3731
  store i32 %inc361, i32* %i, align 4, !dbg !3731
  br label %for.cond259, !dbg !3733, !llvm.loop !3734

for.end362:                                       ; preds = %for.cond259
  br label %if.end363

if.end363:                                        ; preds = %for.end362, %for.end257
  %258 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3736
  %superblock_run_length_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %258, i32 0, i32 67, !dbg !3737
  %call364 = call i32 @ff_init_vlc_sparse(%struct.VLC* %superblock_run_length_vlc, i32 6, i32 34, i8* bitcast (i16* getelementptr inbounds ([34 x [2 x i16]], [34 x [2 x i16]]* @superblock_run_length_vlc_table, i64 0, i64 0, i64 1) to i8*), i32 4, i32 2, i8* bitcast ([34 x [2 x i16]]* @superblock_run_length_vlc_table to i8*), i32 4, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !3738
  %259 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3739
  %fragment_run_length_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %259, i32 0, i32 68, !dbg !3740
  %call365 = call i32 @ff_init_vlc_sparse(%struct.VLC* %fragment_run_length_vlc, i32 5, i32 30, i8* bitcast (i16* getelementptr inbounds ([30 x [2 x i16]], [30 x [2 x i16]]* @fragment_run_length_vlc_table, i64 0, i64 0, i64 1) to i8*), i32 4, i32 2, i8* bitcast ([30 x [2 x i16]]* @fragment_run_length_vlc_table to i8*), i32 4, i32 2, i8* null, i32 0, i32 0, i32 0), !dbg !3741
  %260 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3742
  %mode_code_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %260, i32 0, i32 69, !dbg !3743
  %call366 = call i32 @ff_init_vlc_sparse(%struct.VLC* %mode_code_vlc, i32 3, i32 8, i8* getelementptr inbounds ([8 x [2 x i8]], [8 x [2 x i8]]* @mode_code_vlc_table, i64 0, i64 0, i64 1), i32 2, i32 1, i8* getelementptr inbounds ([8 x [2 x i8]], [8 x [2 x i8]]* @mode_code_vlc_table, i64 0, i64 0, i64 0), i32 2, i32 1, i8* null, i32 0, i32 0, i32 0), !dbg !3744
  %261 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3745
  %motion_vector_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %261, i32 0, i32 70, !dbg !3746
  %call367 = call i32 @ff_init_vlc_sparse(%struct.VLC* %motion_vector_vlc, i32 6, i32 63, i8* getelementptr inbounds ([63 x [2 x i8]], [63 x [2 x i8]]* @motion_vector_vlc_table, i64 0, i64 0, i64 1), i32 2, i32 1, i8* getelementptr inbounds ([63 x [2 x i8]], [63 x [2 x i8]]* @motion_vector_vlc_table, i64 0, i64 0, i64 0), i32 2, i32 1, i8* null, i32 0, i32 0, i32 0), !dbg !3747
  %262 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3748
  %call368 = call i32 @allocate_tables(%struct.AVCodecContext* %262), !dbg !3749
  store i32 %call368, i32* %retval, align 4, !dbg !3750
  br label %return, !dbg !3750

vlc_fail:                                         ; preds = %if.then358, %if.then338, %if.then318, %if.then298, %if.then278
  %263 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3751
  %264 = bitcast %struct.AVCodecContext* %263 to i8*, !dbg !3751
  call void (i8*, i32, i8*, ...) @av_log(i8* %264, i32 8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i32 0, i32 0)), !dbg !3752
  store i32 -1, i32* %retval, align 4, !dbg !3753
  br label %return, !dbg !3753

return:                                           ; preds = %vlc_fail, %if.end363, %if.then40, %if.then
  %265 = load i32, i32* %retval, align 4, !dbg !3754
  ret i32 %265, !dbg !3754
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @init_frames(%struct.Vp3DecodeContext* %s) #1 !dbg !3755 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !3758, metadata !1942), !dbg !3759
  %call = call %struct.AVFrame* @av_frame_alloc(), !dbg !3760
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3761
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 11, !dbg !3762
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame, i32 0, i32 0, !dbg !3763
  store %struct.AVFrame* %call, %struct.AVFrame** %f, align 8, !dbg !3764
  %call1 = call %struct.AVFrame* @av_frame_alloc(), !dbg !3765
  %1 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3766
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %1, i32 0, i32 10, !dbg !3767
  %f2 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_frame, i32 0, i32 0, !dbg !3768
  store %struct.AVFrame* %call1, %struct.AVFrame** %f2, align 8, !dbg !3769
  %call3 = call %struct.AVFrame* @av_frame_alloc(), !dbg !3770
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3771
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 9, !dbg !3772
  %f4 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame, i32 0, i32 0, !dbg !3773
  store %struct.AVFrame* %call3, %struct.AVFrame** %f4, align 8, !dbg !3774
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3775
  %current_frame5 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 11, !dbg !3777
  %f6 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame5, i32 0, i32 0, !dbg !3778
  %4 = load %struct.AVFrame*, %struct.AVFrame** %f6, align 8, !dbg !3778
  %tobool = icmp ne %struct.AVFrame* %4, null, !dbg !3775
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3779

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3780
  %last_frame7 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 10, !dbg !3782
  %f8 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_frame7, i32 0, i32 0, !dbg !3783
  %6 = load %struct.AVFrame*, %struct.AVFrame** %f8, align 8, !dbg !3783
  %tobool9 = icmp ne %struct.AVFrame* %6, null, !dbg !3780
  br i1 %tobool9, label %lor.lhs.false10, label %if.then, !dbg !3784

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %7 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3785
  %golden_frame11 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %7, i32 0, i32 9, !dbg !3787
  %f12 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame11, i32 0, i32 0, !dbg !3788
  %8 = load %struct.AVFrame*, %struct.AVFrame** %f12, align 8, !dbg !3788
  %tobool13 = icmp ne %struct.AVFrame* %8, null, !dbg !3785
  br i1 %tobool13, label %if.end, label %if.then, !dbg !3789

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false, %entry
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3790
  %current_frame14 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 11, !dbg !3792
  %f15 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame14, i32 0, i32 0, !dbg !3793
  call void @av_frame_free(%struct.AVFrame** %f15), !dbg !3794
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3795
  %last_frame16 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 10, !dbg !3796
  %f17 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_frame16, i32 0, i32 0, !dbg !3797
  call void @av_frame_free(%struct.AVFrame** %f17), !dbg !3798
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !3799
  %golden_frame18 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 9, !dbg !3800
  %f19 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame18, i32 0, i32 0, !dbg !3801
  call void @av_frame_free(%struct.AVFrame** %f19), !dbg !3802
  store i32 -12, i32* %retval, align 4, !dbg !3803
  br label %return, !dbg !3803

if.end:                                           ; preds = %lor.lhs.false10
  store i32 0, i32* %retval, align 4, !dbg !3804
  br label %return, !dbg !3804

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !3805
  ret i32 %12, !dbg !3805
}

declare %struct.AVFrame* @av_frame_alloc() #3

declare void @av_frame_free(%struct.AVFrame**) #3

; Function Attrs: nounwind uwtable
define internal i32 @ref_frames(%struct.Vp3DecodeContext* %dst, %struct.Vp3DecodeContext* %src) #0 !dbg !3806 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca %struct.Vp3DecodeContext*, align 8
  %src.addr = alloca %struct.Vp3DecodeContext*, align 8
  %ret = alloca i32, align 4
  store %struct.Vp3DecodeContext* %dst, %struct.Vp3DecodeContext** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %dst.addr, metadata !3809, metadata !1942), !dbg !3810
  store %struct.Vp3DecodeContext* %src, %struct.Vp3DecodeContext** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %src.addr, metadata !3811, metadata !1942), !dbg !3812
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3813, metadata !1942), !dbg !3814
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %dst.addr, align 8, !dbg !3815
  %1 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %dst.addr, align 8, !dbg !3817
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %1, i32 0, i32 11, !dbg !3818
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %src.addr, align 8, !dbg !3819
  %current_frame1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 11, !dbg !3820
  %call = call i32 @ref_frame(%struct.Vp3DecodeContext* %0, %struct.ThreadFrame* %current_frame, %struct.ThreadFrame* %current_frame1), !dbg !3821
  store i32 %call, i32* %ret, align 4, !dbg !3822
  %cmp = icmp slt i32 %call, 0, !dbg !3823
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3824

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %dst.addr, align 8, !dbg !3825
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %dst.addr, align 8, !dbg !3826
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 9, !dbg !3827
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %src.addr, align 8, !dbg !3828
  %golden_frame2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 9, !dbg !3829
  %call3 = call i32 @ref_frame(%struct.Vp3DecodeContext* %3, %struct.ThreadFrame* %golden_frame, %struct.ThreadFrame* %golden_frame2), !dbg !3830
  store i32 %call3, i32* %ret, align 4, !dbg !3831
  %cmp4 = icmp slt i32 %call3, 0, !dbg !3832
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !3833

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %dst.addr, align 8, !dbg !3834
  %7 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %dst.addr, align 8, !dbg !3835
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %7, i32 0, i32 10, !dbg !3836
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %src.addr, align 8, !dbg !3837
  %last_frame6 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 10, !dbg !3838
  %call7 = call i32 @ref_frame(%struct.Vp3DecodeContext* %6, %struct.ThreadFrame* %last_frame, %struct.ThreadFrame* %last_frame6), !dbg !3839
  store i32 %call7, i32* %ret, align 4, !dbg !3840
  %cmp8 = icmp slt i32 %call7, 0, !dbg !3841
  br i1 %cmp8, label %if.then, label %if.end, !dbg !3842

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  %9 = load i32, i32* %ret, align 4, !dbg !3844
  store i32 %9, i32* %retval, align 4, !dbg !3845
  br label %return, !dbg !3845

if.end:                                           ; preds = %lor.lhs.false5
  store i32 0, i32* %retval, align 4, !dbg !3846
  br label %return, !dbg !3846

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !3847
  ret i32 %10, !dbg !3847
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @allocate_tables(%struct.AVCodecContext* %avctx) #1 !dbg !3848 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %y_fragment_count = alloca i32, align 4
  %c_fragment_count = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3849, metadata !1942), !dbg !3850
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !3851, metadata !1942), !dbg !3852
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3853
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3854
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3854
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !3853
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !3852
  call void @llvm.dbg.declare(metadata i32* %y_fragment_count, metadata !3855, metadata !1942), !dbg !3856
  call void @llvm.dbg.declare(metadata i32* %c_fragment_count, metadata !3857, metadata !1942), !dbg !3858
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3859
  call void @free_tables(%struct.AVCodecContext* %3), !dbg !3860
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3861
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 39, !dbg !3862
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 0, !dbg !3861
  %5 = load i32, i32* %arrayidx, align 8, !dbg !3861
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3863
  %fragment_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 40, !dbg !3864
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height, i64 0, i64 0, !dbg !3863
  %7 = load i32, i32* %arrayidx1, align 16, !dbg !3863
  %mul = mul nsw i32 %5, %7, !dbg !3865
  store i32 %mul, i32* %y_fragment_count, align 4, !dbg !3866
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3867
  %fragment_width2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 39, !dbg !3868
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width2, i64 0, i64 1, !dbg !3867
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !3867
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3869
  %fragment_height4 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 40, !dbg !3870
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height4, i64 0, i64 1, !dbg !3869
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !3869
  %mul6 = mul nsw i32 %9, %11, !dbg !3871
  store i32 %mul6, i32* %c_fragment_count, align 4, !dbg !3872
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3873
  %superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 25, !dbg !3874
  %13 = load i32, i32* %superblock_count, align 8, !dbg !3874
  %conv = sext i32 %13 to i64, !dbg !3873
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !3875
  %14 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3876
  %superblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %14, i32 0, i32 34, !dbg !3877
  store i8* %call, i8** %superblock_coding, align 16, !dbg !3878
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3879
  %fragment_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 38, !dbg !3880
  %16 = load i32, i32* %fragment_count, align 4, !dbg !3880
  %conv7 = sext i32 %16 to i64, !dbg !3879
  %call8 = call i8* @av_mallocz_array(i64 %conv7, i64 4), !dbg !3881
  %17 = bitcast i8* %call8 to %struct.Vp3Fragment*, !dbg !3881
  %18 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3882
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %18, i32 0, i32 41, !dbg !3883
  store %struct.Vp3Fragment* %17, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !3884
  %19 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3885
  %fragment_count9 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %19, i32 0, i32 38, !dbg !3886
  %20 = load i32, i32* %fragment_count9, align 4, !dbg !3886
  %conv10 = sext i32 %20 to i64, !dbg !3885
  %call11 = call i8* @av_mallocz_array(i64 %conv10, i64 4), !dbg !3887
  %21 = bitcast i8* %call11 to i32*, !dbg !3887
  %22 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3888
  %kf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %22, i32 0, i32 59, !dbg !3889
  store i32* %21, i32** %kf_coded_fragment_list, align 16, !dbg !3890
  %23 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3891
  %fragment_count12 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %23, i32 0, i32 38, !dbg !3892
  %24 = load i32, i32* %fragment_count12, align 4, !dbg !3892
  %conv13 = sext i32 %24 to i64, !dbg !3891
  %call14 = call i8* @av_mallocz_array(i64 %conv13, i64 4), !dbg !3893
  %25 = bitcast i8* %call14 to i32*, !dbg !3893
  %26 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3894
  %nkf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %26, i32 0, i32 60, !dbg !3895
  store i32* %25, i32** %nkf_coded_fragment_list, align 8, !dbg !3896
  %27 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3897
  %num_kf_coded_fragment = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %27, i32 0, i32 61, !dbg !3898
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %num_kf_coded_fragment, i32 0, i32 0, !dbg !3899
  %28 = bitcast i32* %arraydecay to i8*, !dbg !3899
  call void @llvm.memset.p0i8.i64(i8* %28, i8 -1, i64 12, i32 16, i1 false), !dbg !3899
  %29 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3900
  %fragment_count15 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %29, i32 0, i32 38, !dbg !3901
  %30 = load i32, i32* %fragment_count15, align 4, !dbg !3901
  %conv16 = sext i32 %30 to i64, !dbg !3900
  %call17 = call i8* @av_mallocz_array(i64 %conv16, i64 128), !dbg !3902
  %31 = bitcast i8* %call17 to i16*, !dbg !3902
  %32 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3903
  %dct_tokens_base = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %32, i32 0, i32 55, !dbg !3904
  store i16* %31, i16** %dct_tokens_base, align 8, !dbg !3905
  %33 = load i32, i32* %y_fragment_count, align 4, !dbg !3906
  %conv18 = sext i32 %33 to i64, !dbg !3906
  %call19 = call i8* @av_mallocz_array(i64 %conv18, i64 2), !dbg !3907
  %34 = bitcast i8* %call19 to [2 x i8]*, !dbg !3907
  %35 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3908
  %motion_val = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %35, i32 0, i32 47, !dbg !3909
  %arrayidx20 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val, i64 0, i64 0, !dbg !3908
  store [2 x i8]* %34, [2 x i8]** %arrayidx20, align 16, !dbg !3910
  %36 = load i32, i32* %c_fragment_count, align 4, !dbg !3911
  %conv21 = sext i32 %36 to i64, !dbg !3911
  %call22 = call i8* @av_mallocz_array(i64 %conv21, i64 2), !dbg !3912
  %37 = bitcast i8* %call22 to [2 x i8]*, !dbg !3912
  %38 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3913
  %motion_val23 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %38, i32 0, i32 47, !dbg !3914
  %arrayidx24 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val23, i64 0, i64 1, !dbg !3913
  store [2 x i8]* %37, [2 x i8]** %arrayidx24, align 8, !dbg !3915
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3916
  %superblock_count25 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 25, !dbg !3917
  %40 = load i32, i32* %superblock_count25, align 8, !dbg !3917
  %conv26 = sext i32 %40 to i64, !dbg !3916
  %call27 = call i8* @av_mallocz_array(i64 %conv26, i64 64), !dbg !3918
  %41 = bitcast i8* %call27 to i32*, !dbg !3918
  %42 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3919
  %superblock_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %42, i32 0, i32 72, !dbg !3920
  store i32* %41, i32** %superblock_fragments, align 16, !dbg !3921
  %43 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3922
  %macroblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %43, i32 0, i32 35, !dbg !3923
  %44 = load i32, i32* %macroblock_count, align 8, !dbg !3923
  %add = add nsw i32 %44, 1, !dbg !3924
  %conv28 = sext i32 %add to i64, !dbg !3922
  %call29 = call noalias i8* @av_mallocz(i64 %conv28), !dbg !3925
  %45 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3926
  %macroblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %45, i32 0, i32 73, !dbg !3927
  store i8* %call29, i8** %macroblock_coding, align 8, !dbg !3928
  %46 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3929
  %superblock_coding30 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %46, i32 0, i32 34, !dbg !3931
  %47 = load i8*, i8** %superblock_coding30, align 16, !dbg !3931
  %tobool = icmp ne i8* %47, null, !dbg !3929
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3932

lor.lhs.false:                                    ; preds = %entry
  %48 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3933
  %all_fragments31 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %48, i32 0, i32 41, !dbg !3935
  %49 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments31, align 8, !dbg !3935
  %tobool32 = icmp ne %struct.Vp3Fragment* %49, null, !dbg !3933
  br i1 %tobool32, label %lor.lhs.false33, label %if.then, !dbg !3936

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %50 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3937
  %dct_tokens_base34 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %50, i32 0, i32 55, !dbg !3938
  %51 = load i16*, i16** %dct_tokens_base34, align 8, !dbg !3938
  %tobool35 = icmp ne i16* %51, null, !dbg !3937
  br i1 %tobool35, label %lor.lhs.false36, label %if.then, !dbg !3939

lor.lhs.false36:                                  ; preds = %lor.lhs.false33
  %52 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3940
  %kf_coded_fragment_list37 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %52, i32 0, i32 59, !dbg !3941
  %53 = load i32*, i32** %kf_coded_fragment_list37, align 16, !dbg !3941
  %tobool38 = icmp ne i32* %53, null, !dbg !3940
  br i1 %tobool38, label %lor.lhs.false39, label %if.then, !dbg !3942

lor.lhs.false39:                                  ; preds = %lor.lhs.false36
  %54 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3943
  %nkf_coded_fragment_list40 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %54, i32 0, i32 60, !dbg !3944
  %55 = load i32*, i32** %nkf_coded_fragment_list40, align 8, !dbg !3944
  %tobool41 = icmp ne i32* %55, null, !dbg !3943
  br i1 %tobool41, label %lor.lhs.false42, label %if.then, !dbg !3945

lor.lhs.false42:                                  ; preds = %lor.lhs.false39
  %56 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3946
  %superblock_fragments43 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %56, i32 0, i32 72, !dbg !3947
  %57 = load i32*, i32** %superblock_fragments43, align 16, !dbg !3947
  %tobool44 = icmp ne i32* %57, null, !dbg !3946
  br i1 %tobool44, label %lor.lhs.false45, label %if.then, !dbg !3948

lor.lhs.false45:                                  ; preds = %lor.lhs.false42
  %58 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3949
  %macroblock_coding46 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %58, i32 0, i32 73, !dbg !3950
  %59 = load i8*, i8** %macroblock_coding46, align 8, !dbg !3950
  %tobool47 = icmp ne i8* %59, null, !dbg !3949
  br i1 %tobool47, label %lor.lhs.false48, label %if.then, !dbg !3951

lor.lhs.false48:                                  ; preds = %lor.lhs.false45
  %60 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3952
  %motion_val49 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %60, i32 0, i32 47, !dbg !3953
  %arrayidx50 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val49, i64 0, i64 0, !dbg !3952
  %61 = load [2 x i8]*, [2 x i8]** %arrayidx50, align 16, !dbg !3952
  %tobool51 = icmp ne [2 x i8]* %61, null, !dbg !3952
  br i1 %tobool51, label %lor.lhs.false52, label %if.then, !dbg !3954

lor.lhs.false52:                                  ; preds = %lor.lhs.false48
  %62 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3955
  %motion_val53 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %62, i32 0, i32 47, !dbg !3956
  %arrayidx54 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val53, i64 0, i64 1, !dbg !3955
  %63 = load [2 x i8]*, [2 x i8]** %arrayidx54, align 8, !dbg !3955
  %tobool55 = icmp ne [2 x i8]* %63, null, !dbg !3955
  br i1 %tobool55, label %if.end, label %if.then, !dbg !3957

if.then:                                          ; preds = %lor.lhs.false52, %lor.lhs.false48, %lor.lhs.false45, %lor.lhs.false42, %lor.lhs.false39, %lor.lhs.false36, %lor.lhs.false33, %lor.lhs.false, %entry
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3959
  %call56 = call i32 @vp3_decode_end(%struct.AVCodecContext* %64), !dbg !3961
  store i32 -1, i32* %retval, align 4, !dbg !3962
  br label %return, !dbg !3962

if.end:                                           ; preds = %lor.lhs.false52
  %65 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3963
  %call57 = call i32 @init_block_mapping(%struct.Vp3DecodeContext* %65), !dbg !3964
  store i32 0, i32* %retval, align 4, !dbg !3965
  br label %return, !dbg !3965

return:                                           ; preds = %if.end, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !3966
  ret i32 %66, !dbg !3966
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @update_frames(%struct.AVCodecContext* %avctx) #0 !dbg !3967 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3968, metadata !1942), !dbg !3969
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !3970, metadata !1942), !dbg !3971
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3972
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3973
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3973
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !3972
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !3971
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3974, metadata !1942), !dbg !3975
  store i32 0, i32* %ret, align 4, !dbg !3975
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3976
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3977
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 10, !dbg !3978
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %3, %struct.ThreadFrame* %last_frame), !dbg !3979
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3980
  %last_frame1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 10, !dbg !3981
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3982
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 11, !dbg !3983
  %call = call i32 @ff_thread_ref_frame(%struct.ThreadFrame* %last_frame1, %struct.ThreadFrame* %current_frame), !dbg !3984
  store i32 %call, i32* %ret, align 4, !dbg !3985
  %7 = load i32, i32* %ret, align 4, !dbg !3986
  %cmp = icmp slt i32 %7, 0, !dbg !3988
  br i1 %cmp, label %if.then, label %if.end, !dbg !3989

if.then:                                          ; preds = %entry
  br label %fail, !dbg !3990

if.end:                                           ; preds = %entry
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3991
  %keyframe = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 12, !dbg !3993
  %9 = load i32, i32* %keyframe, align 8, !dbg !3993
  %tobool = icmp ne i32 %9, 0, !dbg !3991
  br i1 %tobool, label %if.then2, label %if.end6, !dbg !3994

if.then2:                                         ; preds = %if.end
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3995
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !3997
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 9, !dbg !3998
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %10, %struct.ThreadFrame* %golden_frame), !dbg !3999
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4000
  %golden_frame3 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 9, !dbg !4001
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4002
  %current_frame4 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 11, !dbg !4003
  %call5 = call i32 @ff_thread_ref_frame(%struct.ThreadFrame* %golden_frame3, %struct.ThreadFrame* %current_frame4), !dbg !4004
  store i32 %call5, i32* %ret, align 4, !dbg !4005
  br label %if.end6, !dbg !4006

if.end6:                                          ; preds = %if.then2, %if.end
  br label %fail, !dbg !4007

fail:                                             ; preds = %if.end6, %if.then
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4009
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4010
  %current_frame7 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 11, !dbg !4011
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %14, %struct.ThreadFrame* %current_frame7), !dbg !4012
  %16 = load i32, i32* %ret, align 4, !dbg !4013
  ret i32 %16, !dbg !4014
}

; Function Attrs: nounwind uwtable
define internal i32 @ref_frame(%struct.Vp3DecodeContext* %s, %struct.ThreadFrame* %dst, %struct.ThreadFrame* %src) #0 !dbg !4015 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %dst.addr = alloca %struct.ThreadFrame*, align 8
  %src.addr = alloca %struct.ThreadFrame*, align 8
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !4019, metadata !1942), !dbg !4020
  store %struct.ThreadFrame* %dst, %struct.ThreadFrame** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame** %dst.addr, metadata !4021, metadata !1942), !dbg !4022
  store %struct.ThreadFrame* %src, %struct.ThreadFrame** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame** %src.addr, metadata !4023, metadata !1942), !dbg !4024
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4025
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 0, !dbg !4026
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !4026
  %2 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !4027
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %1, %struct.ThreadFrame* %2), !dbg !4028
  %3 = load %struct.ThreadFrame*, %struct.ThreadFrame** %src.addr, align 8, !dbg !4029
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %3, i32 0, i32 0, !dbg !4031
  %4 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !4031
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 0, !dbg !4032
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !4029
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !4029
  %tobool = icmp ne i8* %5, null, !dbg !4029
  br i1 %tobool, label %if.then, label %if.end, !dbg !4033

if.then:                                          ; preds = %entry
  %6 = load %struct.ThreadFrame*, %struct.ThreadFrame** %dst.addr, align 8, !dbg !4034
  %7 = load %struct.ThreadFrame*, %struct.ThreadFrame** %src.addr, align 8, !dbg !4035
  %call = call i32 @ff_thread_ref_frame(%struct.ThreadFrame* %6, %struct.ThreadFrame* %7), !dbg !4036
  store i32 %call, i32* %retval, align 4, !dbg !4037
  br label %return, !dbg !4037

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4038
  br label %return, !dbg !4038

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4039
  ret i32 %8, !dbg !4039
}

declare void @ff_thread_release_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*) #3

declare i32 @ff_thread_ref_frame(%struct.ThreadFrame*, %struct.ThreadFrame*) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @free_tables(%struct.AVCodecContext* %avctx) #1 !dbg !4040 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4041, metadata !1942), !dbg !4042
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !4043, metadata !1942), !dbg !4044
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4045
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !4046
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4046
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !4045
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !4044
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4047
  %superblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 34, !dbg !4048
  %4 = bitcast i8** %superblock_coding to i8*, !dbg !4049
  call void @av_freep(i8* %4), !dbg !4050
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4051
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 41, !dbg !4052
  %6 = bitcast %struct.Vp3Fragment** %all_fragments to i8*, !dbg !4053
  call void @av_freep(i8* %6), !dbg !4054
  %7 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4055
  %nkf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %7, i32 0, i32 60, !dbg !4056
  %8 = bitcast i32** %nkf_coded_fragment_list to i8*, !dbg !4057
  call void @av_freep(i8* %8), !dbg !4058
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4059
  %kf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 59, !dbg !4060
  %10 = bitcast i32** %kf_coded_fragment_list to i8*, !dbg !4061
  call void @av_freep(i8* %10), !dbg !4062
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4063
  %dct_tokens_base = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 55, !dbg !4064
  %12 = bitcast i16** %dct_tokens_base to i8*, !dbg !4065
  call void @av_freep(i8* %12), !dbg !4066
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4067
  %superblock_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 72, !dbg !4068
  %14 = bitcast i32** %superblock_fragments to i8*, !dbg !4069
  call void @av_freep(i8* %14), !dbg !4070
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4071
  %macroblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 73, !dbg !4072
  %16 = bitcast i8** %macroblock_coding to i8*, !dbg !4073
  call void @av_freep(i8* %16), !dbg !4074
  %17 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4075
  %motion_val = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %17, i32 0, i32 47, !dbg !4076
  %arrayidx = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val, i64 0, i64 0, !dbg !4075
  %18 = bitcast [2 x i8]** %arrayidx to i8*, !dbg !4077
  call void @av_freep(i8* %18), !dbg !4078
  %19 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4079
  %motion_val1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %19, i32 0, i32 47, !dbg !4080
  %arrayidx2 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val1, i64 0, i64 1, !dbg !4079
  %20 = bitcast [2 x i8]** %arrayidx2 to i8*, !dbg !4081
  call void @av_freep(i8* %20), !dbg !4082
  ret void, !dbg !4083
}

declare noalias i8* @av_mallocz(i64) #3

declare i8* @av_mallocz_array(i64, i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @init_block_mapping(%struct.Vp3DecodeContext* %s) #0 !dbg !4084 {
entry:
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %sb_x = alloca i32, align 4
  %sb_y = alloca i32, align 4
  %plane = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sb_width = alloca i32, align 4
  %sb_height = alloca i32, align 4
  %frag_width = alloca i32, align 4
  %frag_height = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !4085, metadata !1942), !dbg !4086
  call void @llvm.dbg.declare(metadata i32* %sb_x, metadata !4087, metadata !1942), !dbg !4088
  call void @llvm.dbg.declare(metadata i32* %sb_y, metadata !4089, metadata !1942), !dbg !4090
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !4091, metadata !1942), !dbg !4092
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4093, metadata !1942), !dbg !4094
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4095, metadata !1942), !dbg !4096
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4097, metadata !1942), !dbg !4098
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4099, metadata !1942), !dbg !4100
  store i32 0, i32* %j, align 4, !dbg !4100
  store i32 0, i32* %plane, align 4, !dbg !4101
  br label %for.cond, !dbg !4103

for.cond:                                         ; preds = %for.inc55, %entry
  %0 = load i32, i32* %plane, align 4, !dbg !4104
  %cmp = icmp slt i32 %0, 3, !dbg !4107
  br i1 %cmp, label %for.body, label %for.end57, !dbg !4108

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sb_width, metadata !4109, metadata !1942), !dbg !4111
  %1 = load i32, i32* %plane, align 4, !dbg !4112
  %tobool = icmp ne i32 %1, 0, !dbg !4112
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4112

cond.true:                                        ; preds = %for.body
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4113
  %c_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 29, !dbg !4115
  %3 = load i32, i32* %c_superblock_width, align 8, !dbg !4115
  br label %cond.end, !dbg !4116

cond.false:                                       ; preds = %for.body
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4117
  %y_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 26, !dbg !4118
  %5 = load i32, i32* %y_superblock_width, align 4, !dbg !4118
  br label %cond.end, !dbg !4119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %5, %cond.false ], !dbg !4121
  store i32 %cond, i32* %sb_width, align 4, !dbg !4123
  call void @llvm.dbg.declare(metadata i32* %sb_height, metadata !4124, metadata !1942), !dbg !4125
  %6 = load i32, i32* %plane, align 4, !dbg !4126
  %tobool1 = icmp ne i32 %6, 0, !dbg !4126
  br i1 %tobool1, label %cond.true2, label %cond.false3, !dbg !4126

cond.true2:                                       ; preds = %cond.end
  %7 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4127
  %c_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %7, i32 0, i32 30, !dbg !4128
  %8 = load i32, i32* %c_superblock_height, align 4, !dbg !4128
  br label %cond.end4, !dbg !4129

cond.false3:                                      ; preds = %cond.end
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4130
  %y_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 27, !dbg !4131
  %10 = load i32, i32* %y_superblock_height, align 16, !dbg !4131
  br label %cond.end4, !dbg !4132

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %8, %cond.true2 ], [ %10, %cond.false3 ], !dbg !4133
  store i32 %cond5, i32* %sb_height, align 4, !dbg !4134
  call void @llvm.dbg.declare(metadata i32* %frag_width, metadata !4135, metadata !1942), !dbg !4136
  %11 = load i32, i32* %plane, align 4, !dbg !4137
  %tobool6 = icmp ne i32 %11, 0, !dbg !4138
  %lnot = xor i1 %tobool6, true, !dbg !4138
  %lnot7 = xor i1 %lnot, true, !dbg !4139
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !4139
  %idxprom = sext i32 %lnot.ext to i64, !dbg !4140
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4140
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 39, !dbg !4141
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 %idxprom, !dbg !4140
  %13 = load i32, i32* %arrayidx, align 4, !dbg !4140
  store i32 %13, i32* %frag_width, align 4, !dbg !4136
  call void @llvm.dbg.declare(metadata i32* %frag_height, metadata !4142, metadata !1942), !dbg !4143
  %14 = load i32, i32* %plane, align 4, !dbg !4144
  %tobool8 = icmp ne i32 %14, 0, !dbg !4145
  %lnot9 = xor i1 %tobool8, true, !dbg !4145
  %lnot11 = xor i1 %lnot9, true, !dbg !4146
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !4146
  %idxprom13 = sext i32 %lnot.ext12 to i64, !dbg !4147
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4147
  %fragment_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 40, !dbg !4148
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height, i64 0, i64 %idxprom13, !dbg !4147
  %16 = load i32, i32* %arrayidx14, align 4, !dbg !4147
  store i32 %16, i32* %frag_height, align 4, !dbg !4143
  store i32 0, i32* %sb_y, align 4, !dbg !4149
  br label %for.cond15, !dbg !4151

for.cond15:                                       ; preds = %for.inc52, %cond.end4
  %17 = load i32, i32* %sb_y, align 4, !dbg !4152
  %18 = load i32, i32* %sb_height, align 4, !dbg !4155
  %cmp16 = icmp slt i32 %17, %18, !dbg !4156
  br i1 %cmp16, label %for.body17, label %for.end54, !dbg !4157

for.body17:                                       ; preds = %for.cond15
  store i32 0, i32* %sb_x, align 4, !dbg !4158
  br label %for.cond18, !dbg !4160

for.cond18:                                       ; preds = %for.inc49, %for.body17
  %19 = load i32, i32* %sb_x, align 4, !dbg !4161
  %20 = load i32, i32* %sb_width, align 4, !dbg !4164
  %cmp19 = icmp slt i32 %19, %20, !dbg !4165
  br i1 %cmp19, label %for.body20, label %for.end51, !dbg !4166

for.body20:                                       ; preds = %for.cond18
  store i32 0, i32* %i, align 4, !dbg !4167
  br label %for.cond21, !dbg !4169

for.cond21:                                       ; preds = %for.inc, %for.body20
  %21 = load i32, i32* %i, align 4, !dbg !4170
  %cmp22 = icmp slt i32 %21, 16, !dbg !4173
  br i1 %cmp22, label %for.body23, label %for.end, !dbg !4174

for.body23:                                       ; preds = %for.cond21
  %22 = load i32, i32* %sb_x, align 4, !dbg !4175
  %mul = mul nsw i32 4, %22, !dbg !4177
  %23 = load i32, i32* %i, align 4, !dbg !4178
  %idxprom24 = sext i32 %23 to i64, !dbg !4179
  %arrayidx25 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @hilbert_offset, i64 0, i64 %idxprom24, !dbg !4179
  %arrayidx26 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx25, i64 0, i64 0, !dbg !4179
  %24 = load i8, i8* %arrayidx26, align 2, !dbg !4179
  %conv = zext i8 %24 to i32, !dbg !4179
  %add = add nsw i32 %mul, %conv, !dbg !4180
  store i32 %add, i32* %x, align 4, !dbg !4181
  %25 = load i32, i32* %sb_y, align 4, !dbg !4182
  %mul27 = mul nsw i32 4, %25, !dbg !4183
  %26 = load i32, i32* %i, align 4, !dbg !4184
  %idxprom28 = sext i32 %26 to i64, !dbg !4185
  %arrayidx29 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @hilbert_offset, i64 0, i64 %idxprom28, !dbg !4185
  %arrayidx30 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx29, i64 0, i64 1, !dbg !4185
  %27 = load i8, i8* %arrayidx30, align 1, !dbg !4185
  %conv31 = zext i8 %27 to i32, !dbg !4185
  %add32 = add nsw i32 %mul27, %conv31, !dbg !4186
  store i32 %add32, i32* %y, align 4, !dbg !4187
  %28 = load i32, i32* %x, align 4, !dbg !4188
  %29 = load i32, i32* %frag_width, align 4, !dbg !4190
  %cmp33 = icmp slt i32 %28, %29, !dbg !4191
  br i1 %cmp33, label %land.lhs.true, label %if.else, !dbg !4192

land.lhs.true:                                    ; preds = %for.body23
  %30 = load i32, i32* %y, align 4, !dbg !4193
  %31 = load i32, i32* %frag_height, align 4, !dbg !4195
  %cmp35 = icmp slt i32 %30, %31, !dbg !4196
  br i1 %cmp35, label %if.then, label %if.else, !dbg !4197

if.then:                                          ; preds = %land.lhs.true
  %32 = load i32, i32* %plane, align 4, !dbg !4198
  %idxprom37 = sext i32 %32 to i64, !dbg !4199
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4199
  %fragment_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 42, !dbg !4200
  %arrayidx38 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start, i64 0, i64 %idxprom37, !dbg !4199
  %34 = load i32, i32* %arrayidx38, align 4, !dbg !4199
  %35 = load i32, i32* %y, align 4, !dbg !4201
  %36 = load i32, i32* %frag_width, align 4, !dbg !4202
  %mul39 = mul nsw i32 %35, %36, !dbg !4203
  %add40 = add nsw i32 %34, %mul39, !dbg !4204
  %37 = load i32, i32* %x, align 4, !dbg !4205
  %add41 = add nsw i32 %add40, %37, !dbg !4206
  %38 = load i32, i32* %j, align 4, !dbg !4207
  %inc = add nsw i32 %38, 1, !dbg !4207
  store i32 %inc, i32* %j, align 4, !dbg !4207
  %idxprom42 = sext i32 %38 to i64, !dbg !4208
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4208
  %superblock_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 72, !dbg !4209
  %40 = load i32*, i32** %superblock_fragments, align 16, !dbg !4209
  %arrayidx43 = getelementptr inbounds i32, i32* %40, i64 %idxprom42, !dbg !4208
  store i32 %add41, i32* %arrayidx43, align 4, !dbg !4210
  br label %if.end, !dbg !4208

if.else:                                          ; preds = %land.lhs.true, %for.body23
  %41 = load i32, i32* %j, align 4, !dbg !4211
  %inc44 = add nsw i32 %41, 1, !dbg !4211
  store i32 %inc44, i32* %j, align 4, !dbg !4211
  %idxprom45 = sext i32 %41 to i64, !dbg !4212
  %42 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !4212
  %superblock_fragments46 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %42, i32 0, i32 72, !dbg !4213
  %43 = load i32*, i32** %superblock_fragments46, align 16, !dbg !4213
  %arrayidx47 = getelementptr inbounds i32, i32* %43, i64 %idxprom45, !dbg !4212
  store i32 -1, i32* %arrayidx47, align 4, !dbg !4214
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !4215

for.inc:                                          ; preds = %if.end
  %44 = load i32, i32* %i, align 4, !dbg !4216
  %inc48 = add nsw i32 %44, 1, !dbg !4216
  store i32 %inc48, i32* %i, align 4, !dbg !4216
  br label %for.cond21, !dbg !4218, !llvm.loop !4219

for.end:                                          ; preds = %for.cond21
  br label %for.inc49, !dbg !4221

for.inc49:                                        ; preds = %for.end
  %45 = load i32, i32* %sb_x, align 4, !dbg !4223
  %inc50 = add nsw i32 %45, 1, !dbg !4223
  store i32 %inc50, i32* %sb_x, align 4, !dbg !4223
  br label %for.cond18, !dbg !4225, !llvm.loop !4226

for.end51:                                        ; preds = %for.cond18
  br label %for.inc52, !dbg !4228

for.inc52:                                        ; preds = %for.end51
  %46 = load i32, i32* %sb_y, align 4, !dbg !4230
  %inc53 = add nsw i32 %46, 1, !dbg !4230
  store i32 %inc53, i32* %sb_y, align 4, !dbg !4230
  br label %for.cond15, !dbg !4232, !llvm.loop !4233

for.end54:                                        ; preds = %for.cond15
  br label %for.inc55, !dbg !4235

for.inc55:                                        ; preds = %for.end54
  %47 = load i32, i32* %plane, align 4, !dbg !4236
  %inc56 = add nsw i32 %47, 1, !dbg !4236
  store i32 %inc56, i32* %plane, align 4, !dbg !4236
  br label %for.cond, !dbg !4238, !llvm.loop !4239

for.end57:                                        ; preds = %for.cond
  ret i32 0, !dbg !4241
}

declare void @av_freep(i8*) #3

declare void @av_log(i8*, i32, i8*, ...) #3

declare i32 @avpriv_split_xiph_headers(i8*, i32, i32, i8**, i32*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #5 !dbg !4242 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4246, metadata !1942), !dbg !4247
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4248, metadata !1942), !dbg !4249
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !4250, metadata !1942), !dbg !4251
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !4252
  %cmp = icmp sgt i32 %0, 268435455, !dbg !4254
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4255

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !4256
  %cmp1 = icmp slt i32 %1, 0, !dbg !4258
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4259

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !4260
  br label %if.end, !dbg !4261

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4262
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !4263
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !4264
  %mul = mul nsw i32 %4, 8, !dbg !4265
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !4266
  ret i32 %call, !dbg !4267
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !4268 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4271, metadata !1942), !dbg !4276
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4278, metadata !1942), !dbg !4279
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4280, metadata !1942), !dbg !4281
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4282, metadata !1942), !dbg !4283
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4284, metadata !1942), !dbg !4285
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4286
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4287
  %1 = load i32, i32* %index, align 8, !dbg !4287
  store i32 %1, i32* %re_index, align 4, !dbg !4285
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4288, metadata !1942), !dbg !4289
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4290, metadata !1942), !dbg !4291
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4292
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4293
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4293
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4291
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4294
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !4295
  %5 = load i8*, i8** %buffer, align 8, !dbg !4295
  %6 = load i32, i32* %re_index, align 4, !dbg !4296
  %shr = lshr i32 %6, 3, !dbg !4297
  %idx.ext = zext i32 %shr to i64, !dbg !4298
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !4298
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4299
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !4299
  %8 = load i32, i32* %l, align 1, !dbg !4299
  store i32 %8, i32* %x.addr.i, align 4, !dbg !4300
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !4301
  %shl.i = shl i32 %9, 8, !dbg !4302
  %and.i = and i32 %shl.i, 65280, !dbg !4303
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !4304
  %shr.i = lshr i32 %10, 8, !dbg !4305
  %and1.i = and i32 %shr.i, 255, !dbg !4306
  %or.i = or i32 %and.i, %and1.i, !dbg !4307
  %shl2.i = shl i32 %or.i, 16, !dbg !4308
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !4309
  %shr3.i = lshr i32 %11, 16, !dbg !4310
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4311
  %and5.i = and i32 %shl4.i, 65280, !dbg !4312
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !4313
  %shr6.i = lshr i32 %12, 16, !dbg !4314
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4315
  %and8.i = and i32 %shr7.i, 255, !dbg !4316
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4317
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4318
  %13 = load i32, i32* %re_index, align 4, !dbg !4319
  %and = and i32 %13, 7, !dbg !4320
  %shl = shl i32 %or10.i, %and, !dbg !4321
  store i32 %shl, i32* %re_cache, align 4, !dbg !4322
  %14 = load i32, i32* %re_cache, align 4, !dbg !4323
  %15 = load i32, i32* %n.addr, align 4, !dbg !4324
  %conv = trunc i32 %15 to i8, !dbg !4324
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !4325
  store i32 %call4, i32* %tmp, align 4, !dbg !4326
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !4327
  %17 = load i32, i32* %re_index, align 4, !dbg !4328
  %18 = load i32, i32* %n.addr, align 4, !dbg !4329
  %add = add i32 %17, %18, !dbg !4330
  %cmp = icmp ugt i32 %16, %add, !dbg !4331
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4332

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !4333
  %20 = load i32, i32* %n.addr, align 4, !dbg !4335
  %add6 = add i32 %19, %20, !dbg !4336
  br label %cond.end, !dbg !4337

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !4338
  br label %cond.end, !dbg !4340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !4341
  store i32 %cond, i32* %re_index, align 4, !dbg !4343
  %22 = load i32, i32* %re_index, align 4, !dbg !4344
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4345
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !4346
  store i32 %22, i32* %index7, align 8, !dbg !4347
  %24 = load i32, i32* %tmp, align 4, !dbg !4348
  ret i32 %24, !dbg !4349
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !4350 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4353, metadata !1942), !dbg !4358
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4360, metadata !1942), !dbg !4361
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4362, metadata !1942), !dbg !4363
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4364, metadata !1942), !dbg !4365
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4366, metadata !1942), !dbg !4367
  %0 = load i32, i32* %n.addr, align 4, !dbg !4368
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4369
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !4370
  %2 = load i32, i32* %index, align 8, !dbg !4370
  %sub = sub nsw i32 0, %2, !dbg !4371
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4372
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !4373
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4373
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4374
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !4375
  %6 = load i32, i32* %index1, align 8, !dbg !4375
  %sub2 = sub nsw i32 %4, %6, !dbg !4376
  store i32 %0, i32* %a.addr.i, align 4, !dbg !4377
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !4377
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !4377
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !4378
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !4380
  %cmp.i = icmp slt i32 %7, %8, !dbg !4381
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4382

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !4383
  store i32 %9, i32* %retval.i, align 4, !dbg !4385
  br label %av_clip_c.exit, !dbg !4385

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !4386
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !4388
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !4389
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4390

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !4391
  store i32 %12, i32* %retval.i, align 4, !dbg !4393
  br label %av_clip_c.exit, !dbg !4393

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !4394
  store i32 %13, i32* %retval.i, align 4, !dbg !4395
  br label %av_clip_c.exit, !dbg !4395

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !4396
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4397
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4398
  %16 = load i32, i32* %index3, align 8, !dbg !4399
  %add = add nsw i32 %16, %14, !dbg !4399
  store i32 %add, i32* %index3, align 8, !dbg !4399
  ret void, !dbg !4400
}

; Function Attrs: nounwind uwtable
define internal i32 @theora_decode_header(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb) #0 !dbg !4401 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %visible_width = alloca i32, align 4
  %visible_height = alloca i32, align 4
  %colorspace = alloca i32, align 4
  %offset_x = alloca i8, align 1
  %offset_y = alloca i8, align 1
  %ret = alloca i32, align 4
  %fps = alloca %struct.AVRational, align 4
  %aspect = alloca %struct.AVRational, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4404, metadata !1942), !dbg !4405
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4406, metadata !1942), !dbg !4407
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !4408, metadata !1942), !dbg !4409
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4410
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !4411
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4411
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !4410
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !4409
  call void @llvm.dbg.declare(metadata i32* %visible_width, metadata !4412, metadata !1942), !dbg !4413
  call void @llvm.dbg.declare(metadata i32* %visible_height, metadata !4414, metadata !1942), !dbg !4415
  call void @llvm.dbg.declare(metadata i32* %colorspace, metadata !4416, metadata !1942), !dbg !4417
  call void @llvm.dbg.declare(metadata i8* %offset_x, metadata !4418, metadata !1942), !dbg !4419
  store i8 0, i8* %offset_x, align 1, !dbg !4419
  call void @llvm.dbg.declare(metadata i8* %offset_y, metadata !4420, metadata !1942), !dbg !4421
  store i8 0, i8* %offset_y, align 1, !dbg !4421
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4422, metadata !1942), !dbg !4423
  call void @llvm.dbg.declare(metadata %struct.AVRational* %fps, metadata !4424, metadata !1942), !dbg !4425
  call void @llvm.dbg.declare(metadata %struct.AVRational* %aspect, metadata !4426, metadata !1942), !dbg !4427
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4428
  %theora_header = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 3, !dbg !4429
  store i32 0, i32* %theora_header, align 16, !dbg !4430
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4431
  %call = call i32 @get_bits_long(%struct.GetBitContext* %4, i32 24), !dbg !4432
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4433
  %theora = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 1, !dbg !4434
  store i32 %call, i32* %theora, align 8, !dbg !4435
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4436
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !4436
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4437
  %theora1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 1, !dbg !4438
  %9 = load i32, i32* %theora1, align 8, !dbg !4438
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 %9), !dbg !4439
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4440
  %theora2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 1, !dbg !4442
  %11 = load i32, i32* %theora2, align 8, !dbg !4442
  %cmp = icmp slt i32 %11, 197120, !dbg !4443
  br i1 %cmp, label %if.then, label %if.end, !dbg !4444

if.then:                                          ; preds = %entry
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4445
  %flipped_image = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 19, !dbg !4447
  store i32 1, i32* %flipped_image, align 16, !dbg !4448
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4449
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !4449
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i32 0, i32 0)), !dbg !4450
  br label %if.end, !dbg !4451

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4452
  %call3 = call i32 @get_bits(%struct.GetBitContext* %15, i32 16), !dbg !4453
  %shl = shl i32 %call3, 4, !dbg !4454
  %16 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4455
  %width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %16, i32 0, i32 5, !dbg !4456
  store i32 %shl, i32* %width, align 8, !dbg !4457
  store i32 %shl, i32* %visible_width, align 4, !dbg !4458
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4459
  %call4 = call i32 @get_bits(%struct.GetBitContext* %17, i32 16), !dbg !4460
  %shl5 = shl i32 %call4, 4, !dbg !4461
  %18 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4462
  %height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %18, i32 0, i32 6, !dbg !4463
  store i32 %shl5, i32* %height, align 4, !dbg !4464
  store i32 %shl5, i32* %visible_height, align 4, !dbg !4465
  %19 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4466
  %theora6 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %19, i32 0, i32 1, !dbg !4468
  %20 = load i32, i32* %theora6, align 8, !dbg !4468
  %cmp7 = icmp sge i32 %20, 197120, !dbg !4469
  br i1 %cmp7, label %if.then8, label %if.end14, !dbg !4470

if.then8:                                         ; preds = %if.end
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4471
  %call9 = call i32 @get_bits_long(%struct.GetBitContext* %21, i32 24), !dbg !4473
  store i32 %call9, i32* %visible_width, align 4, !dbg !4474
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4475
  %call10 = call i32 @get_bits_long(%struct.GetBitContext* %22, i32 24), !dbg !4476
  store i32 %call10, i32* %visible_height, align 4, !dbg !4477
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4478
  %call11 = call i32 @get_bits(%struct.GetBitContext* %23, i32 8), !dbg !4479
  %conv = trunc i32 %call11 to i8, !dbg !4479
  store i8 %conv, i8* %offset_x, align 1, !dbg !4480
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4481
  %call12 = call i32 @get_bits(%struct.GetBitContext* %24, i32 8), !dbg !4482
  %conv13 = trunc i32 %call12 to i8, !dbg !4482
  store i8 %conv13, i8* %offset_y, align 1, !dbg !4483
  br label %if.end14, !dbg !4484

if.end14:                                         ; preds = %if.then8, %if.end
  %25 = load i32, i32* %visible_width, align 4, !dbg !4485
  %26 = load i32, i32* %visible_height, align 4, !dbg !4487
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4488
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !4488
  %call15 = call i32 @av_image_check_size(i32 %25, i32 %26, i32 0, i8* %28), !dbg !4489
  %cmp16 = icmp slt i32 %call15, 0, !dbg !4490
  br i1 %cmp16, label %if.then28, label %lor.lhs.false, !dbg !4491

lor.lhs.false:                                    ; preds = %if.end14
  %29 = load i32, i32* %visible_width, align 4, !dbg !4492
  %30 = load i8, i8* %offset_x, align 1, !dbg !4493
  %conv18 = zext i8 %30 to i32, !dbg !4493
  %add = add nsw i32 %29, %conv18, !dbg !4494
  %31 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4495
  %width19 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %31, i32 0, i32 5, !dbg !4496
  %32 = load i32, i32* %width19, align 8, !dbg !4496
  %cmp20 = icmp sgt i32 %add, %32, !dbg !4497
  br i1 %cmp20, label %if.then28, label %lor.lhs.false22, !dbg !4498

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %33 = load i32, i32* %visible_height, align 4, !dbg !4499
  %34 = load i8, i8* %offset_y, align 1, !dbg !4500
  %conv23 = zext i8 %34 to i32, !dbg !4500
  %add24 = add nsw i32 %33, %conv23, !dbg !4501
  %35 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4502
  %height25 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %35, i32 0, i32 6, !dbg !4503
  %36 = load i32, i32* %height25, align 4, !dbg !4503
  %cmp26 = icmp sgt i32 %add24, %36, !dbg !4504
  br i1 %cmp26, label %if.then28, label %if.end33, !dbg !4505

if.then28:                                        ; preds = %lor.lhs.false22, %lor.lhs.false, %if.end14
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4507
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !4507
  %39 = load i32, i32* %visible_width, align 4, !dbg !4509
  %40 = load i32, i32* %visible_height, align 4, !dbg !4510
  %41 = load i8, i8* %offset_x, align 1, !dbg !4511
  %conv29 = zext i8 %41 to i32, !dbg !4511
  %42 = load i8, i8* %offset_y, align 1, !dbg !4512
  %conv30 = zext i8 %42 to i32, !dbg !4512
  %43 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4513
  %width31 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %43, i32 0, i32 5, !dbg !4514
  %44 = load i32, i32* %width31, align 8, !dbg !4514
  %45 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4515
  %height32 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %45, i32 0, i32 6, !dbg !4516
  %46 = load i32, i32* %height32, align 4, !dbg !4516
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11, i32 0, i32 0), i32 %39, i32 %40, i32 %conv29, i32 %conv30, i32 %44, i32 %46), !dbg !4517
  store i32 -1094995529, i32* %retval, align 4, !dbg !4518
  br label %return, !dbg !4518

if.end33:                                         ; preds = %lor.lhs.false22
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4519
  %call34 = call i32 @get_bits_long(%struct.GetBitContext* %47, i32 32), !dbg !4520
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 0, !dbg !4521
  store i32 %call34, i32* %num, align 4, !dbg !4522
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4523
  %call35 = call i32 @get_bits_long(%struct.GetBitContext* %48, i32 32), !dbg !4524
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 1, !dbg !4525
  store i32 %call35, i32* %den, align 4, !dbg !4526
  %num36 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 0, !dbg !4527
  %49 = load i32, i32* %num36, align 4, !dbg !4527
  %tobool = icmp ne i32 %49, 0, !dbg !4529
  br i1 %tobool, label %land.lhs.true, label %if.end57, !dbg !4530

land.lhs.true:                                    ; preds = %if.end33
  %den37 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 1, !dbg !4531
  %50 = load i32, i32* %den37, align 4, !dbg !4531
  %tobool38 = icmp ne i32 %50, 0, !dbg !4533
  br i1 %tobool38, label %if.then39, label %if.end57, !dbg !4534

if.then39:                                        ; preds = %land.lhs.true
  %num40 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 0, !dbg !4535
  %51 = load i32, i32* %num40, align 4, !dbg !4535
  %cmp41 = icmp slt i32 %51, 0, !dbg !4538
  br i1 %cmp41, label %if.then47, label %lor.lhs.false43, !dbg !4539

lor.lhs.false43:                                  ; preds = %if.then39
  %den44 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 1, !dbg !4540
  %52 = load i32, i32* %den44, align 4, !dbg !4540
  %cmp45 = icmp slt i32 %52, 0, !dbg !4542
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !4543

if.then47:                                        ; preds = %lor.lhs.false43, %if.then39
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4544
  %54 = bitcast %struct.AVCodecContext* %53 to i8*, !dbg !4544
  call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i32 0, i32 0)), !dbg !4546
  store i32 -1094995529, i32* %retval, align 4, !dbg !4547
  br label %return, !dbg !4547

if.end48:                                         ; preds = %lor.lhs.false43
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4548
  %framerate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %55, i32 0, i32 163, !dbg !4549
  %den49 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate, i32 0, i32 1, !dbg !4550
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4551
  %framerate50 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 163, !dbg !4552
  %num51 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %framerate50, i32 0, i32 0, !dbg !4553
  %den52 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 1, !dbg !4554
  %57 = load i32, i32* %den52, align 4, !dbg !4554
  %conv53 = sext i32 %57 to i64, !dbg !4555
  %num54 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %fps, i32 0, i32 0, !dbg !4556
  %58 = load i32, i32* %num54, align 4, !dbg !4556
  %conv55 = sext i32 %58 to i64, !dbg !4557
  %call56 = call i32 @av_reduce(i32* %den49, i32* %num51, i64 %conv53, i64 %conv55, i64 1073741824), !dbg !4558
  br label %if.end57, !dbg !4559

if.end57:                                         ; preds = %if.end48, %land.lhs.true, %if.end33
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4560
  %call58 = call i32 @get_bits_long(%struct.GetBitContext* %59, i32 24), !dbg !4561
  %num59 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect, i32 0, i32 0, !dbg !4562
  store i32 %call58, i32* %num59, align 4, !dbg !4563
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4564
  %call60 = call i32 @get_bits_long(%struct.GetBitContext* %60, i32 24), !dbg !4565
  %den61 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect, i32 0, i32 1, !dbg !4566
  store i32 %call60, i32* %den61, align 4, !dbg !4567
  %num62 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect, i32 0, i32 0, !dbg !4568
  %61 = load i32, i32* %num62, align 4, !dbg !4568
  %tobool63 = icmp ne i32 %61, 0, !dbg !4570
  br i1 %tobool63, label %land.lhs.true64, label %if.end78, !dbg !4571

land.lhs.true64:                                  ; preds = %if.end57
  %den65 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect, i32 0, i32 1, !dbg !4572
  %62 = load i32, i32* %den65, align 4, !dbg !4572
  %tobool66 = icmp ne i32 %62, 0, !dbg !4574
  br i1 %tobool66, label %if.then67, label %if.end78, !dbg !4575

if.then67:                                        ; preds = %land.lhs.true64
  %63 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4576
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %63, i32 0, i32 44, !dbg !4578
  %num68 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !4579
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4580
  %sample_aspect_ratio69 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 44, !dbg !4581
  %den70 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio69, i32 0, i32 1, !dbg !4582
  %num71 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect, i32 0, i32 0, !dbg !4583
  %65 = load i32, i32* %num71, align 4, !dbg !4583
  %conv72 = sext i32 %65 to i64, !dbg !4584
  %den73 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect, i32 0, i32 1, !dbg !4585
  %66 = load i32, i32* %den73, align 4, !dbg !4585
  %conv74 = sext i32 %66 to i64, !dbg !4586
  %call75 = call i32 @av_reduce(i32* %num68, i32* %den70, i64 %conv72, i64 %conv74, i64 1073741824), !dbg !4587
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4588
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4589
  %sample_aspect_ratio76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %68, i32 0, i32 44, !dbg !4590
  %69 = bitcast %struct.AVRational* %sample_aspect_ratio76 to i64*, !dbg !4591
  %70 = load i64, i64* %69, align 8, !dbg !4591
  %call77 = call i32 @ff_set_sar(%struct.AVCodecContext* %67, i64 %70), !dbg !4591
  br label %if.end78, !dbg !4592

if.end78:                                         ; preds = %if.then67, %land.lhs.true64, %if.end57
  %71 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4593
  %theora79 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %71, i32 0, i32 1, !dbg !4595
  %72 = load i32, i32* %theora79, align 8, !dbg !4595
  %cmp80 = icmp slt i32 %72, 197120, !dbg !4596
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !4597

if.then82:                                        ; preds = %if.end78
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4598
  call void @skip_bits(%struct.GetBitContext* %73, i32 5), !dbg !4599
  br label %if.end83, !dbg !4599

if.end83:                                         ; preds = %if.then82, %if.end78
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4600
  %call84 = call i32 @get_bits(%struct.GetBitContext* %74, i32 8), !dbg !4601
  store i32 %call84, i32* %colorspace, align 4, !dbg !4602
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4603
  call void @skip_bits(%struct.GetBitContext* %75, i32 24), !dbg !4604
  %76 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4605
  call void @skip_bits(%struct.GetBitContext* %76, i32 6), !dbg !4606
  %77 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4607
  %theora85 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %77, i32 0, i32 1, !dbg !4609
  %78 = load i32, i32* %theora85, align 8, !dbg !4609
  %cmp86 = icmp sge i32 %78, 197120, !dbg !4610
  br i1 %cmp86, label %if.then88, label %if.else, !dbg !4611

if.then88:                                        ; preds = %if.end83
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4612
  call void @skip_bits(%struct.GetBitContext* %79, i32 5), !dbg !4614
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4615
  %call89 = call i32 @get_bits(%struct.GetBitContext* %80, i32 2), !dbg !4616
  %idxprom = zext i32 %call89 to i64, !dbg !4617
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @theora_pix_fmts, i64 0, i64 %idxprom, !dbg !4617
  %81 = load i32, i32* %arrayidx, align 4, !dbg !4617
  %82 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4618
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %82, i32 0, i32 25, !dbg !4619
  store i32 %81, i32* %pix_fmt, align 8, !dbg !4620
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4621
  %pix_fmt90 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %83, i32 0, i32 25, !dbg !4623
  %84 = load i32, i32* %pix_fmt90, align 8, !dbg !4623
  %cmp91 = icmp eq i32 %84, -1, !dbg !4624
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !4625

if.then93:                                        ; preds = %if.then88
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4626
  %86 = bitcast %struct.AVCodecContext* %85 to i8*, !dbg !4626
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0)), !dbg !4628
  store i32 -1094995529, i32* %retval, align 4, !dbg !4629
  br label %return, !dbg !4629

if.end94:                                         ; preds = %if.then88
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4630
  call void @skip_bits(%struct.GetBitContext* %87, i32 3), !dbg !4631
  br label %if.end96, !dbg !4632

if.else:                                          ; preds = %if.end83
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4633
  %pix_fmt95 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %88, i32 0, i32 25, !dbg !4634
  store i32 0, i32* %pix_fmt95, align 8, !dbg !4635
  br label %if.end96

if.end96:                                         ; preds = %if.else, %if.end94
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4636
  %90 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4637
  %width97 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %90, i32 0, i32 5, !dbg !4638
  %91 = load i32, i32* %width97, align 8, !dbg !4638
  %92 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4639
  %height98 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %92, i32 0, i32 6, !dbg !4640
  %93 = load i32, i32* %height98, align 4, !dbg !4640
  %call99 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %89, i32 %91, i32 %93), !dbg !4641
  store i32 %call99, i32* %ret, align 4, !dbg !4642
  %94 = load i32, i32* %ret, align 4, !dbg !4643
  %cmp100 = icmp slt i32 %94, 0, !dbg !4645
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !4646

if.then102:                                       ; preds = %if.end96
  %95 = load i32, i32* %ret, align 4, !dbg !4647
  store i32 %95, i32* %retval, align 4, !dbg !4648
  br label %return, !dbg !4648

if.end103:                                        ; preds = %if.end96
  %96 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4649
  %flags2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %96, i32 0, i32 14, !dbg !4651
  %97 = load i32, i32* %flags2, align 8, !dbg !4651
  %and = and i32 %97, 65536, !dbg !4652
  %tobool104 = icmp ne i32 %and, 0, !dbg !4652
  br i1 %tobool104, label %if.end114, label %if.then105, !dbg !4653

if.then105:                                       ; preds = %if.end103
  %98 = load i32, i32* %visible_width, align 4, !dbg !4654
  %99 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4656
  %width106 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %99, i32 0, i32 20, !dbg !4657
  store i32 %98, i32* %width106, align 4, !dbg !4658
  %100 = load i32, i32* %visible_height, align 4, !dbg !4659
  %101 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4660
  %height107 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %101, i32 0, i32 21, !dbg !4661
  store i32 %100, i32* %height107, align 8, !dbg !4662
  %102 = load i8, i8* %offset_x, align 1, !dbg !4663
  %103 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4664
  %offset_x108 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %103, i32 0, i32 44, !dbg !4665
  store i8 %102, i8* %offset_x108, align 8, !dbg !4666
  %104 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4667
  %height109 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %104, i32 0, i32 6, !dbg !4668
  %105 = load i32, i32* %height109, align 4, !dbg !4668
  %106 = load i32, i32* %visible_height, align 4, !dbg !4669
  %sub = sub nsw i32 %105, %106, !dbg !4670
  %107 = load i8, i8* %offset_y, align 1, !dbg !4671
  %conv110 = zext i8 %107 to i32, !dbg !4671
  %sub111 = sub nsw i32 %sub, %conv110, !dbg !4672
  %conv112 = trunc i32 %sub111 to i8, !dbg !4667
  %108 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4673
  %offset_y113 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %108, i32 0, i32 45, !dbg !4674
  store i8 %conv112, i8* %offset_y113, align 1, !dbg !4675
  br label %if.end114, !dbg !4676

if.end114:                                        ; preds = %if.then105, %if.end103
  %109 = load i32, i32* %colorspace, align 4, !dbg !4677
  %cmp115 = icmp eq i32 %109, 1, !dbg !4679
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !4680

if.then117:                                       ; preds = %if.end114
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4681
  %color_primaries = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 75, !dbg !4682
  store i32 4, i32* %color_primaries, align 4, !dbg !4683
  br label %if.end124, !dbg !4681

if.else118:                                       ; preds = %if.end114
  %111 = load i32, i32* %colorspace, align 4, !dbg !4684
  %cmp119 = icmp eq i32 %111, 2, !dbg !4686
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !4687

if.then121:                                       ; preds = %if.else118
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4688
  %color_primaries122 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %112, i32 0, i32 75, !dbg !4689
  store i32 5, i32* %color_primaries122, align 4, !dbg !4690
  br label %if.end123, !dbg !4688

if.end123:                                        ; preds = %if.then121, %if.else118
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then117
  %113 = load i32, i32* %colorspace, align 4, !dbg !4691
  %cmp125 = icmp eq i32 %113, 1, !dbg !4693
  br i1 %cmp125, label %if.then130, label %lor.lhs.false127, !dbg !4694

lor.lhs.false127:                                 ; preds = %if.end124
  %114 = load i32, i32* %colorspace, align 4, !dbg !4695
  %cmp128 = icmp eq i32 %114, 2, !dbg !4697
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !4698

if.then130:                                       ; preds = %lor.lhs.false127, %if.end124
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4699
  %colorspace131 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 77, !dbg !4701
  store i32 5, i32* %colorspace131, align 4, !dbg !4702
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4703
  %color_trc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %116, i32 0, i32 76, !dbg !4704
  store i32 1, i32* %color_trc, align 8, !dbg !4705
  br label %if.end132, !dbg !4706

if.end132:                                        ; preds = %if.then130, %lor.lhs.false127
  %117 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4707
  %theora_header133 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %117, i32 0, i32 3, !dbg !4708
  store i32 1, i32* %theora_header133, align 16, !dbg !4709
  store i32 0, i32* %retval, align 4, !dbg !4710
  br label %return, !dbg !4710

return:                                           ; preds = %if.end132, %if.then102, %if.then93, %if.then47, %if.then28
  %118 = load i32, i32* %retval, align 4, !dbg !4711
  ret i32 %118, !dbg !4711
}

; Function Attrs: nounwind uwtable
define internal i32 @theora_decode_tables(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb) #0 !dbg !4712 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %matrices = alloca i32, align 4
  %inter = alloca i32, align 4
  %plane = alloca i32, align 4
  %newqr = alloca i32, align 4
  %qtj = alloca i32, align 4
  %plj = alloca i32, align 4
  %qri = alloca i32, align 4
  %qi = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4713, metadata !1942), !dbg !4714
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4715, metadata !1942), !dbg !4716
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !4717, metadata !1942), !dbg !4718
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4719
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !4720
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4720
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !4719
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !4718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4721, metadata !1942), !dbg !4722
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4723, metadata !1942), !dbg !4724
  call void @llvm.dbg.declare(metadata i32* %matrices, metadata !4725, metadata !1942), !dbg !4726
  call void @llvm.dbg.declare(metadata i32* %inter, metadata !4727, metadata !1942), !dbg !4728
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !4729, metadata !1942), !dbg !4730
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4731
  %theora_header = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 3, !dbg !4733
  %4 = load i32, i32* %theora_header, align 16, !dbg !4733
  %tobool = icmp ne i32 %4, 0, !dbg !4731
  br i1 %tobool, label %if.end, label %if.then, !dbg !4734

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !4735
  br label %return, !dbg !4735

if.end:                                           ; preds = %entry
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4736
  %theora = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 1, !dbg !4738
  %6 = load i32, i32* %theora, align 8, !dbg !4738
  %cmp = icmp sge i32 %6, 197120, !dbg !4739
  br i1 %cmp, label %if.then1, label %if.end7, !dbg !4740

if.then1:                                         ; preds = %if.end
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4741
  %call = call i32 @get_bits(%struct.GetBitContext* %7, i32 3), !dbg !4743
  store i32 %call, i32* %n, align 4, !dbg !4744
  %8 = load i32, i32* %n, align 4, !dbg !4745
  %tobool2 = icmp ne i32 %8, 0, !dbg !4745
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !4747

if.then3:                                         ; preds = %if.then1
  store i32 0, i32* %i, align 4, !dbg !4748
  br label %for.cond, !dbg !4750

for.cond:                                         ; preds = %for.inc, %if.then3
  %9 = load i32, i32* %i, align 4, !dbg !4751
  %cmp4 = icmp slt i32 %9, 64, !dbg !4754
  br i1 %cmp4, label %for.body, label %for.end, !dbg !4755

for.body:                                         ; preds = %for.cond
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4756
  %11 = load i32, i32* %n, align 4, !dbg !4757
  %call5 = call i32 @get_bits(%struct.GetBitContext* %10, i32 %11), !dbg !4758
  %conv = trunc i32 %call5 to i8, !dbg !4758
  %12 = load i32, i32* %i, align 4, !dbg !4759
  %idxprom = sext i32 %12 to i64, !dbg !4760
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4760
  %filter_limit_values = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 80, !dbg !4761
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %filter_limit_values, i64 0, i64 %idxprom, !dbg !4760
  store i8 %conv, i8* %arrayidx, align 1, !dbg !4762
  br label %for.inc, !dbg !4760

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !4763
  %inc = add nsw i32 %14, 1, !dbg !4763
  store i32 %inc, i32* %i, align 4, !dbg !4763
  br label %for.cond, !dbg !4765, !llvm.loop !4766

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !4768

if.end6:                                          ; preds = %for.end, %if.then1
  br label %if.end7, !dbg !4770

if.end7:                                          ; preds = %if.end6, %if.end
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4771
  %theora8 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 1, !dbg !4773
  %16 = load i32, i32* %theora8, align 8, !dbg !4773
  %cmp9 = icmp sge i32 %16, 197120, !dbg !4774
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !4775

if.then11:                                        ; preds = %if.end7
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4776
  %call12 = call i32 @get_bits(%struct.GetBitContext* %17, i32 4), !dbg !4777
  %add = add i32 %call12, 1, !dbg !4778
  store i32 %add, i32* %n, align 4, !dbg !4779
  br label %if.end13, !dbg !4780

if.else:                                          ; preds = %if.end7
  store i32 16, i32* %n, align 4, !dbg !4781
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  store i32 0, i32* %i, align 4, !dbg !4782
  br label %for.cond14, !dbg !4784

for.cond14:                                       ; preds = %for.inc21, %if.end13
  %18 = load i32, i32* %i, align 4, !dbg !4785
  %cmp15 = icmp slt i32 %18, 64, !dbg !4788
  br i1 %cmp15, label %for.body17, label %for.end23, !dbg !4789

for.body17:                                       ; preds = %for.cond14
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4790
  %20 = load i32, i32* %n, align 4, !dbg !4791
  %call18 = call i32 @get_bits(%struct.GetBitContext* %19, i32 %20), !dbg !4792
  %21 = load i32, i32* %i, align 4, !dbg !4793
  %idxprom19 = sext i32 %21 to i64, !dbg !4794
  %22 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4794
  %coded_ac_scale_factor = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %22, i32 0, i32 49, !dbg !4795
  %arrayidx20 = getelementptr inbounds [64 x i32], [64 x i32]* %coded_ac_scale_factor, i64 0, i64 %idxprom19, !dbg !4794
  store i32 %call18, i32* %arrayidx20, align 4, !dbg !4796
  br label %for.inc21, !dbg !4794

for.inc21:                                        ; preds = %for.body17
  %23 = load i32, i32* %i, align 4, !dbg !4797
  %inc22 = add nsw i32 %23, 1, !dbg !4797
  store i32 %inc22, i32* %i, align 4, !dbg !4797
  br label %for.cond14, !dbg !4799, !llvm.loop !4800

for.end23:                                        ; preds = %for.cond14
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4802
  %theora24 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 1, !dbg !4804
  %25 = load i32, i32* %theora24, align 8, !dbg !4804
  %cmp25 = icmp sge i32 %25, 197120, !dbg !4805
  br i1 %cmp25, label %if.then27, label %if.else30, !dbg !4806

if.then27:                                        ; preds = %for.end23
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4807
  %call28 = call i32 @get_bits(%struct.GetBitContext* %26, i32 4), !dbg !4808
  %add29 = add i32 %call28, 1, !dbg !4809
  store i32 %add29, i32* %n, align 4, !dbg !4810
  br label %if.end31, !dbg !4811

if.else30:                                        ; preds = %for.end23
  store i32 16, i32* %n, align 4, !dbg !4812
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %if.then27
  store i32 0, i32* %i, align 4, !dbg !4813
  br label %for.cond32, !dbg !4815

for.cond32:                                       ; preds = %for.inc40, %if.end31
  %27 = load i32, i32* %i, align 4, !dbg !4816
  %cmp33 = icmp slt i32 %27, 64, !dbg !4819
  br i1 %cmp33, label %for.body35, label %for.end42, !dbg !4820

for.body35:                                       ; preds = %for.cond32
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4821
  %29 = load i32, i32* %n, align 4, !dbg !4822
  %call36 = call i32 @get_bits(%struct.GetBitContext* %28, i32 %29), !dbg !4823
  %conv37 = trunc i32 %call36 to i16, !dbg !4823
  %30 = load i32, i32* %i, align 4, !dbg !4824
  %idxprom38 = sext i32 %30 to i64, !dbg !4825
  %31 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4825
  %coded_dc_scale_factor = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %31, i32 0, i32 48, !dbg !4826
  %arrayidx39 = getelementptr inbounds [64 x i16], [64 x i16]* %coded_dc_scale_factor, i64 0, i64 %idxprom38, !dbg !4825
  store i16 %conv37, i16* %arrayidx39, align 2, !dbg !4827
  br label %for.inc40, !dbg !4825

for.inc40:                                        ; preds = %for.body35
  %32 = load i32, i32* %i, align 4, !dbg !4828
  %inc41 = add nsw i32 %32, 1, !dbg !4828
  store i32 %inc41, i32* %i, align 4, !dbg !4828
  br label %for.cond32, !dbg !4830, !llvm.loop !4831

for.end42:                                        ; preds = %for.cond32
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4833
  %theora43 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 1, !dbg !4835
  %34 = load i32, i32* %theora43, align 8, !dbg !4835
  %cmp44 = icmp sge i32 %34, 197120, !dbg !4836
  br i1 %cmp44, label %if.then46, label %if.else49, !dbg !4837

if.then46:                                        ; preds = %for.end42
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4838
  %call47 = call i32 @get_bits(%struct.GetBitContext* %35, i32 9), !dbg !4839
  %add48 = add i32 %call47, 1, !dbg !4840
  store i32 %add48, i32* %matrices, align 4, !dbg !4841
  br label %if.end50, !dbg !4842

if.else49:                                        ; preds = %for.end42
  store i32 3, i32* %matrices, align 4, !dbg !4843
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then46
  %36 = load i32, i32* %matrices, align 4, !dbg !4844
  %cmp51 = icmp sgt i32 %36, 384, !dbg !4846
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !4847

if.then53:                                        ; preds = %if.end50
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4848
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !4848
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i32 0, i32 0)), !dbg !4850
  store i32 -1, i32* %retval, align 4, !dbg !4851
  br label %return, !dbg !4851

if.end54:                                         ; preds = %if.end50
  store i32 0, i32* %n, align 4, !dbg !4852
  br label %for.cond55, !dbg !4854

for.cond55:                                       ; preds = %for.inc72, %if.end54
  %39 = load i32, i32* %n, align 4, !dbg !4855
  %40 = load i32, i32* %matrices, align 4, !dbg !4858
  %cmp56 = icmp slt i32 %39, %40, !dbg !4859
  br i1 %cmp56, label %for.body58, label %for.end74, !dbg !4860

for.body58:                                       ; preds = %for.cond55
  store i32 0, i32* %i, align 4, !dbg !4861
  br label %for.cond59, !dbg !4863

for.cond59:                                       ; preds = %for.inc69, %for.body58
  %41 = load i32, i32* %i, align 4, !dbg !4864
  %cmp60 = icmp slt i32 %41, 64, !dbg !4867
  br i1 %cmp60, label %for.body62, label %for.end71, !dbg !4868

for.body62:                                       ; preds = %for.cond59
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4869
  %call63 = call i32 @get_bits(%struct.GetBitContext* %42, i32 8), !dbg !4870
  %conv64 = trunc i32 %call63 to i8, !dbg !4870
  %43 = load i32, i32* %i, align 4, !dbg !4871
  %idxprom65 = sext i32 %43 to i64, !dbg !4872
  %44 = load i32, i32* %n, align 4, !dbg !4873
  %idxprom66 = sext i32 %44 to i64, !dbg !4872
  %45 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4872
  %base_matrix = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %45, i32 0, i32 50, !dbg !4874
  %arrayidx67 = getelementptr inbounds [384 x [64 x i8]], [384 x [64 x i8]]* %base_matrix, i64 0, i64 %idxprom66, !dbg !4872
  %arrayidx68 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx67, i64 0, i64 %idxprom65, !dbg !4872
  store i8 %conv64, i8* %arrayidx68, align 1, !dbg !4875
  br label %for.inc69, !dbg !4872

for.inc69:                                        ; preds = %for.body62
  %46 = load i32, i32* %i, align 4, !dbg !4876
  %inc70 = add nsw i32 %46, 1, !dbg !4876
  store i32 %inc70, i32* %i, align 4, !dbg !4876
  br label %for.cond59, !dbg !4878, !llvm.loop !4879

for.end71:                                        ; preds = %for.cond59
  br label %for.inc72, !dbg !4881

for.inc72:                                        ; preds = %for.end71
  %47 = load i32, i32* %n, align 4, !dbg !4883
  %inc73 = add nsw i32 %47, 1, !dbg !4883
  store i32 %inc73, i32* %n, align 4, !dbg !4883
  br label %for.cond55, !dbg !4885, !llvm.loop !4886

for.end74:                                        ; preds = %for.cond55
  store i32 0, i32* %inter, align 4, !dbg !4888
  br label %for.cond75, !dbg !4890

for.cond75:                                       ; preds = %for.inc182, %for.end74
  %48 = load i32, i32* %inter, align 4, !dbg !4891
  %cmp76 = icmp sle i32 %48, 1, !dbg !4894
  br i1 %cmp76, label %for.body78, label %for.end184, !dbg !4895

for.body78:                                       ; preds = %for.cond75
  store i32 0, i32* %plane, align 4, !dbg !4896
  br label %for.cond79, !dbg !4899

for.cond79:                                       ; preds = %for.inc179, %for.body78
  %49 = load i32, i32* %plane, align 4, !dbg !4900
  %cmp80 = icmp sle i32 %49, 2, !dbg !4903
  br i1 %cmp80, label %for.body82, label %for.end181, !dbg !4904

for.body82:                                       ; preds = %for.cond79
  call void @llvm.dbg.declare(metadata i32* %newqr, metadata !4905, metadata !1942), !dbg !4907
  store i32 1, i32* %newqr, align 4, !dbg !4907
  %50 = load i32, i32* %inter, align 4, !dbg !4908
  %tobool83 = icmp ne i32 %50, 0, !dbg !4908
  br i1 %tobool83, label %if.then86, label %lor.lhs.false, !dbg !4910

lor.lhs.false:                                    ; preds = %for.body82
  %51 = load i32, i32* %plane, align 4, !dbg !4911
  %cmp84 = icmp sgt i32 %51, 0, !dbg !4913
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !4914

if.then86:                                        ; preds = %lor.lhs.false, %for.body82
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4915
  %call87 = call i32 @get_bits1(%struct.GetBitContext* %52), !dbg !4916
  store i32 %call87, i32* %newqr, align 4, !dbg !4917
  br label %if.end88, !dbg !4918

if.end88:                                         ; preds = %if.then86, %lor.lhs.false
  %53 = load i32, i32* %newqr, align 4, !dbg !4919
  %tobool89 = icmp ne i32 %53, 0, !dbg !4919
  br i1 %tobool89, label %if.else129, label %if.then90, !dbg !4921

if.then90:                                        ; preds = %if.end88
  call void @llvm.dbg.declare(metadata i32* %qtj, metadata !4922, metadata !1942), !dbg !4924
  call void @llvm.dbg.declare(metadata i32* %plj, metadata !4925, metadata !1942), !dbg !4926
  %54 = load i32, i32* %inter, align 4, !dbg !4927
  %tobool91 = icmp ne i32 %54, 0, !dbg !4927
  br i1 %tobool91, label %land.lhs.true, label %if.else95, !dbg !4929

land.lhs.true:                                    ; preds = %if.then90
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4930
  %call92 = call i32 @get_bits1(%struct.GetBitContext* %55), !dbg !4932
  %tobool93 = icmp ne i32 %call92, 0, !dbg !4932
  br i1 %tobool93, label %if.then94, label %if.else95, !dbg !4933

if.then94:                                        ; preds = %land.lhs.true
  store i32 0, i32* %qtj, align 4, !dbg !4934
  %56 = load i32, i32* %plane, align 4, !dbg !4936
  store i32 %56, i32* %plj, align 4, !dbg !4937
  br label %if.end98, !dbg !4938

if.else95:                                        ; preds = %land.lhs.true, %if.then90
  %57 = load i32, i32* %inter, align 4, !dbg !4939
  %mul = mul nsw i32 3, %57, !dbg !4941
  %58 = load i32, i32* %plane, align 4, !dbg !4942
  %add96 = add nsw i32 %mul, %58, !dbg !4943
  %sub = sub nsw i32 %add96, 1, !dbg !4944
  %div = sdiv i32 %sub, 3, !dbg !4945
  store i32 %div, i32* %qtj, align 4, !dbg !4946
  %59 = load i32, i32* %plane, align 4, !dbg !4947
  %add97 = add nsw i32 %59, 2, !dbg !4948
  %rem = srem i32 %add97, 3, !dbg !4949
  store i32 %rem, i32* %plj, align 4, !dbg !4950
  br label %if.end98

if.end98:                                         ; preds = %if.else95, %if.then94
  %60 = load i32, i32* %plj, align 4, !dbg !4951
  %idxprom99 = sext i32 %60 to i64, !dbg !4952
  %61 = load i32, i32* %qtj, align 4, !dbg !4953
  %idxprom100 = sext i32 %61 to i64, !dbg !4952
  %62 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4952
  %qr_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %62, i32 0, i32 51, !dbg !4954
  %arrayidx101 = getelementptr inbounds [2 x [3 x i8]], [2 x [3 x i8]]* %qr_count, i64 0, i64 %idxprom100, !dbg !4952
  %arrayidx102 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx101, i64 0, i64 %idxprom99, !dbg !4952
  %63 = load i8, i8* %arrayidx102, align 1, !dbg !4952
  %64 = load i32, i32* %plane, align 4, !dbg !4955
  %idxprom103 = sext i32 %64 to i64, !dbg !4956
  %65 = load i32, i32* %inter, align 4, !dbg !4957
  %idxprom104 = sext i32 %65 to i64, !dbg !4956
  %66 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4956
  %qr_count105 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %66, i32 0, i32 51, !dbg !4958
  %arrayidx106 = getelementptr inbounds [2 x [3 x i8]], [2 x [3 x i8]]* %qr_count105, i64 0, i64 %idxprom104, !dbg !4956
  %arrayidx107 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx106, i64 0, i64 %idxprom103, !dbg !4956
  store i8 %63, i8* %arrayidx107, align 1, !dbg !4959
  %67 = load i32, i32* %plane, align 4, !dbg !4960
  %idxprom108 = sext i32 %67 to i64, !dbg !4961
  %68 = load i32, i32* %inter, align 4, !dbg !4962
  %idxprom109 = sext i32 %68 to i64, !dbg !4961
  %69 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4961
  %qr_size = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %69, i32 0, i32 52, !dbg !4963
  %arrayidx110 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size, i64 0, i64 %idxprom109, !dbg !4961
  %arrayidx111 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx110, i64 0, i64 %idxprom108, !dbg !4961
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx111, i32 0, i32 0, !dbg !4964
  %70 = load i32, i32* %plj, align 4, !dbg !4965
  %idxprom112 = sext i32 %70 to i64, !dbg !4966
  %71 = load i32, i32* %qtj, align 4, !dbg !4967
  %idxprom113 = sext i32 %71 to i64, !dbg !4966
  %72 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4966
  %qr_size114 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %72, i32 0, i32 52, !dbg !4968
  %arrayidx115 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size114, i64 0, i64 %idxprom113, !dbg !4966
  %arrayidx116 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx115, i64 0, i64 %idxprom112, !dbg !4966
  %arraydecay117 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx116, i32 0, i32 0, !dbg !4964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay117, i64 64, i32 2, i1 false), !dbg !4964
  %73 = load i32, i32* %plane, align 4, !dbg !4969
  %idxprom118 = sext i32 %73 to i64, !dbg !4970
  %74 = load i32, i32* %inter, align 4, !dbg !4971
  %idxprom119 = sext i32 %74 to i64, !dbg !4970
  %75 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4970
  %qr_base = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %75, i32 0, i32 53, !dbg !4972
  %arrayidx120 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %qr_base, i64 0, i64 %idxprom119, !dbg !4970
  %arrayidx121 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx120, i64 0, i64 %idxprom118, !dbg !4970
  %arraydecay122 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx121, i32 0, i32 0, !dbg !4973
  %76 = bitcast i16* %arraydecay122 to i8*, !dbg !4973
  %77 = load i32, i32* %plj, align 4, !dbg !4974
  %idxprom123 = sext i32 %77 to i64, !dbg !4975
  %78 = load i32, i32* %qtj, align 4, !dbg !4976
  %idxprom124 = sext i32 %78 to i64, !dbg !4975
  %79 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !4975
  %qr_base125 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %79, i32 0, i32 53, !dbg !4977
  %arrayidx126 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %qr_base125, i64 0, i64 %idxprom124, !dbg !4975
  %arrayidx127 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx126, i64 0, i64 %idxprom123, !dbg !4975
  %arraydecay128 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx127, i32 0, i32 0, !dbg !4973
  %80 = bitcast i16* %arraydecay128 to i8*, !dbg !4973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %80, i64 128, i32 2, i1 false), !dbg !4973
  br label %if.end178, !dbg !4978

if.else129:                                       ; preds = %if.end88
  call void @llvm.dbg.declare(metadata i32* %qri, metadata !4979, metadata !1942), !dbg !4981
  store i32 0, i32* %qri, align 4, !dbg !4981
  call void @llvm.dbg.declare(metadata i32* %qi, metadata !4982, metadata !1942), !dbg !4983
  store i32 0, i32* %qi, align 4, !dbg !4983
  br label %for.cond130, !dbg !4984

for.cond130:                                      ; preds = %if.end150, %if.else129
  %81 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4985
  %82 = load i32, i32* %matrices, align 4, !dbg !4989
  %sub131 = sub nsw i32 %82, 1, !dbg !4990
  %or = or i32 %sub131, 1, !dbg !4991
  %83 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4992
  %sub132 = sub nsw i32 31, %83, !dbg !4993
  %add133 = add nsw i32 %sub132, 1, !dbg !4994
  %call134 = call i32 @get_bits(%struct.GetBitContext* %81, i32 %add133), !dbg !4995
  store i32 %call134, i32* %i, align 4, !dbg !4997
  %84 = load i32, i32* %i, align 4, !dbg !4998
  %85 = load i32, i32* %matrices, align 4, !dbg !5000
  %cmp135 = icmp sge i32 %84, %85, !dbg !5001
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !5002

if.then137:                                       ; preds = %for.cond130
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5003
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !5003
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i32 0, i32 0)), !dbg !5005
  store i32 -1, i32* %retval, align 4, !dbg !5006
  br label %return, !dbg !5006

if.end138:                                        ; preds = %for.cond130
  %88 = load i32, i32* %i, align 4, !dbg !5007
  %conv139 = trunc i32 %88 to i16, !dbg !5007
  %89 = load i32, i32* %qri, align 4, !dbg !5008
  %idxprom140 = sext i32 %89 to i64, !dbg !5009
  %90 = load i32, i32* %plane, align 4, !dbg !5010
  %idxprom141 = sext i32 %90 to i64, !dbg !5009
  %91 = load i32, i32* %inter, align 4, !dbg !5011
  %idxprom142 = sext i32 %91 to i64, !dbg !5009
  %92 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5009
  %qr_base143 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %92, i32 0, i32 53, !dbg !5012
  %arrayidx144 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %qr_base143, i64 0, i64 %idxprom142, !dbg !5009
  %arrayidx145 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx144, i64 0, i64 %idxprom141, !dbg !5009
  %arrayidx146 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx145, i64 0, i64 %idxprom140, !dbg !5009
  store i16 %conv139, i16* %arrayidx146, align 2, !dbg !5013
  %93 = load i32, i32* %qi, align 4, !dbg !5014
  %cmp147 = icmp sge i32 %93, 63, !dbg !5016
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !5017

if.then149:                                       ; preds = %if.end138
  br label %for.end167, !dbg !5018

if.end150:                                        ; preds = %if.end138
  %94 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5019
  %95 = load i32, i32* %qi, align 4, !dbg !5020
  %sub151 = sub nsw i32 63, %95, !dbg !5021
  %or152 = or i32 %sub151, 1, !dbg !5022
  %96 = call i32 @llvm.ctlz.i32(i32 %or152, i1 true), !dbg !5023
  %sub153 = sub nsw i32 31, %96, !dbg !5024
  %add154 = add nsw i32 %sub153, 1, !dbg !5025
  %call155 = call i32 @get_bits(%struct.GetBitContext* %94, i32 %add154), !dbg !5026
  %add156 = add i32 %call155, 1, !dbg !5027
  store i32 %add156, i32* %i, align 4, !dbg !5028
  %97 = load i32, i32* %i, align 4, !dbg !5029
  %conv157 = trunc i32 %97 to i8, !dbg !5029
  %98 = load i32, i32* %qri, align 4, !dbg !5030
  %inc158 = add nsw i32 %98, 1, !dbg !5030
  store i32 %inc158, i32* %qri, align 4, !dbg !5030
  %idxprom159 = sext i32 %98 to i64, !dbg !5031
  %99 = load i32, i32* %plane, align 4, !dbg !5032
  %idxprom160 = sext i32 %99 to i64, !dbg !5031
  %100 = load i32, i32* %inter, align 4, !dbg !5033
  %idxprom161 = sext i32 %100 to i64, !dbg !5031
  %101 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5031
  %qr_size162 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %101, i32 0, i32 52, !dbg !5034
  %arrayidx163 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size162, i64 0, i64 %idxprom161, !dbg !5031
  %arrayidx164 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx163, i64 0, i64 %idxprom160, !dbg !5031
  %arrayidx165 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx164, i64 0, i64 %idxprom159, !dbg !5031
  store i8 %conv157, i8* %arrayidx165, align 1, !dbg !5035
  %102 = load i32, i32* %i, align 4, !dbg !5036
  %103 = load i32, i32* %qi, align 4, !dbg !5037
  %add166 = add nsw i32 %103, %102, !dbg !5037
  store i32 %add166, i32* %qi, align 4, !dbg !5037
  br label %for.cond130, !dbg !5038, !llvm.loop !5040

for.end167:                                       ; preds = %if.then149
  %104 = load i32, i32* %qi, align 4, !dbg !5041
  %cmp168 = icmp sgt i32 %104, 63, !dbg !5043
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !5044

if.then170:                                       ; preds = %for.end167
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5045
  %106 = bitcast %struct.AVCodecContext* %105 to i8*, !dbg !5045
  %107 = load i32, i32* %qi, align 4, !dbg !5047
  call void (i8*, i32, i8*, ...) @av_log(i8* %106, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i32 0, i32 0), i32 %107), !dbg !5048
  store i32 -1, i32* %retval, align 4, !dbg !5049
  br label %return, !dbg !5049

if.end171:                                        ; preds = %for.end167
  %108 = load i32, i32* %qri, align 4, !dbg !5050
  %conv172 = trunc i32 %108 to i8, !dbg !5050
  %109 = load i32, i32* %plane, align 4, !dbg !5051
  %idxprom173 = sext i32 %109 to i64, !dbg !5052
  %110 = load i32, i32* %inter, align 4, !dbg !5053
  %idxprom174 = sext i32 %110 to i64, !dbg !5052
  %111 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5052
  %qr_count175 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %111, i32 0, i32 51, !dbg !5054
  %arrayidx176 = getelementptr inbounds [2 x [3 x i8]], [2 x [3 x i8]]* %qr_count175, i64 0, i64 %idxprom174, !dbg !5052
  %arrayidx177 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx176, i64 0, i64 %idxprom173, !dbg !5052
  store i8 %conv172, i8* %arrayidx177, align 1, !dbg !5055
  br label %if.end178

if.end178:                                        ; preds = %if.end171, %if.end98
  br label %for.inc179, !dbg !5056

for.inc179:                                       ; preds = %if.end178
  %112 = load i32, i32* %plane, align 4, !dbg !5057
  %inc180 = add nsw i32 %112, 1, !dbg !5057
  store i32 %inc180, i32* %plane, align 4, !dbg !5057
  br label %for.cond79, !dbg !5059, !llvm.loop !5060

for.end181:                                       ; preds = %for.cond79
  br label %for.inc182, !dbg !5062

for.inc182:                                       ; preds = %for.end181
  %113 = load i32, i32* %inter, align 4, !dbg !5063
  %inc183 = add nsw i32 %113, 1, !dbg !5063
  store i32 %inc183, i32* %inter, align 4, !dbg !5063
  br label %for.cond75, !dbg !5065, !llvm.loop !5066

for.end184:                                       ; preds = %for.cond75
  %114 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5068
  %hti = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %114, i32 0, i32 75, !dbg !5070
  store i32 0, i32* %hti, align 8, !dbg !5071
  br label %for.cond185, !dbg !5068

for.cond185:                                      ; preds = %for.inc203, %for.end184
  %115 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5072
  %hti186 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %115, i32 0, i32 75, !dbg !5075
  %116 = load i32, i32* %hti186, align 8, !dbg !5075
  %cmp187 = icmp slt i32 %116, 80, !dbg !5076
  br i1 %cmp187, label %for.body189, label %for.end206, !dbg !5077

for.body189:                                      ; preds = %for.cond185
  %117 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5078
  %entries = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %117, i32 0, i32 77, !dbg !5080
  store i32 0, i32* %entries, align 16, !dbg !5081
  %118 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5082
  %huff_code_size = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %118, i32 0, i32 78, !dbg !5083
  store i32 1, i32* %huff_code_size, align 4, !dbg !5084
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5085
  %call190 = call i32 @get_bits1(%struct.GetBitContext* %119), !dbg !5087
  %tobool191 = icmp ne i32 %call190, 0, !dbg !5087
  br i1 %tobool191, label %if.end202, label %if.then192, !dbg !5088

if.then192:                                       ; preds = %for.body189
  %120 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5089
  %hbits = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %120, i32 0, i32 76, !dbg !5091
  store i32 0, i32* %hbits, align 4, !dbg !5092
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5093
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5095
  %call193 = call i32 @read_huffman_tree(%struct.AVCodecContext* %121, %struct.GetBitContext* %122), !dbg !5096
  %tobool194 = icmp ne i32 %call193, 0, !dbg !5096
  br i1 %tobool194, label %if.then195, label %if.end196, !dbg !5097

if.then195:                                       ; preds = %if.then192
  store i32 -1, i32* %retval, align 4, !dbg !5098
  br label %return, !dbg !5098

if.end196:                                        ; preds = %if.then192
  %123 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5099
  %hbits197 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %123, i32 0, i32 76, !dbg !5100
  store i32 1, i32* %hbits197, align 4, !dbg !5101
  %124 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5102
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5104
  %call198 = call i32 @read_huffman_tree(%struct.AVCodecContext* %124, %struct.GetBitContext* %125), !dbg !5105
  %tobool199 = icmp ne i32 %call198, 0, !dbg !5105
  br i1 %tobool199, label %if.then200, label %if.end201, !dbg !5106

if.then200:                                       ; preds = %if.end196
  store i32 -1, i32* %retval, align 4, !dbg !5107
  br label %return, !dbg !5107

if.end201:                                        ; preds = %if.end196
  br label %if.end202, !dbg !5108

if.end202:                                        ; preds = %if.end201, %for.body189
  br label %for.inc203, !dbg !5109

for.inc203:                                       ; preds = %if.end202
  %126 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5110
  %hti204 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %126, i32 0, i32 75, !dbg !5112
  %127 = load i32, i32* %hti204, align 8, !dbg !5113
  %inc205 = add nsw i32 %127, 1, !dbg !5113
  store i32 %inc205, i32* %hti204, align 8, !dbg !5113
  br label %for.cond185, !dbg !5114, !llvm.loop !5115

for.end206:                                       ; preds = %for.cond185
  %128 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5117
  %theora_tables = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %128, i32 0, i32 2, !dbg !5118
  store i32 1, i32* %theora_tables, align 4, !dbg !5119
  store i32 0, i32* %retval, align 4, !dbg !5120
  br label %return, !dbg !5120

return:                                           ; preds = %for.end206, %if.then200, %if.then195, %if.then170, %if.then137, %if.then53, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !5121
  ret i32 %129, !dbg !5121
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #5 !dbg !5122 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5127, metadata !1942), !dbg !5128
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5129
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5130
  %1 = load i32, i32* %index, align 8, !dbg !5130
  ret i32 %1, !dbg !5131
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #5 !dbg !5132 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5133, metadata !1942), !dbg !5134
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5135, metadata !1942), !dbg !5136
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !5137, metadata !1942), !dbg !5138
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !5139, metadata !1942), !dbg !5140
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5141, metadata !1942), !dbg !5142
  store i32 0, i32* %ret, align 4, !dbg !5142
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !5143
  %cmp = icmp sge i32 %0, 2147483135, !dbg !5145
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5146

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !5147
  %cmp1 = icmp slt i32 %1, 0, !dbg !5149
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5150

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !5151
  %tobool = icmp ne i8* %2, null, !dbg !5151
  br i1 %tobool, label %if.end, label %if.then, !dbg !5153

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !5154
  store i8* null, i8** %buffer.addr, align 8, !dbg !5156
  store i32 -1094995529, i32* %ret, align 4, !dbg !5157
  br label %if.end, !dbg !5158

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !5159
  %add = add nsw i32 %3, 7, !dbg !5160
  %shr = ashr i32 %add, 3, !dbg !5161
  store i32 %shr, i32* %buffer_size, align 4, !dbg !5162
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !5163
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5164
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !5165
  store i8* %4, i8** %buffer3, align 8, !dbg !5166
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !5167
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5168
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !5169
  store i32 %6, i32* %size_in_bits, align 4, !dbg !5170
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !5171
  %add4 = add nsw i32 %8, 8, !dbg !5172
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5173
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !5174
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !5175
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !5176
  %11 = load i32, i32* %buffer_size, align 4, !dbg !5177
  %idx.ext = sext i32 %11 to i64, !dbg !5178
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5178
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5179
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !5180
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !5181
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5182
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !5183
  store i32 0, i32* %index, align 8, !dbg !5184
  %14 = load i32, i32* %ret, align 4, !dbg !5185
  ret i32 %14, !dbg !5186
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #5 !dbg !5187 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5191, metadata !1942), !dbg !5192
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !5193, metadata !1942), !dbg !5194
  %0 = load i32, i32* %a.addr, align 4, !dbg !5195
  %1 = load i8, i8* %s.addr, align 1, !dbg !5196
  %conv = sext i8 %1 to i32, !dbg !5196
  %sub = sub nsw i32 0, %conv, !dbg !5197
  %conv1 = trunc i32 %sub to i8, !dbg !5198
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !5195, !srcloc !5199
  store i32 %2, i32* %a.addr, align 4, !dbg !5195
  %3 = load i32, i32* %a.addr, align 4, !dbg !5200
  ret i32 %3, !dbg !5201
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #5 !dbg !5202 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5203, metadata !1942), !dbg !5204
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5205, metadata !1942), !dbg !5206
  %0 = load i32, i32* %n.addr, align 4, !dbg !5207
  %tobool = icmp ne i32 %0, 0, !dbg !5207
  br i1 %tobool, label %if.else, label %if.then, !dbg !5209

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5210
  br label %return, !dbg !5210

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !5212
  %cmp = icmp sle i32 %1, 25, !dbg !5214
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !5215

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5216
  %3 = load i32, i32* %n.addr, align 4, !dbg !5218
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !5219
  store i32 %call, i32* %retval, align 4, !dbg !5220
  br label %return, !dbg !5220

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5221, metadata !1942), !dbg !5223
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5224
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !5225
  %5 = load i32, i32* %n.addr, align 4, !dbg !5226
  %sub = sub nsw i32 %5, 16, !dbg !5227
  %shl = shl i32 %call3, %sub, !dbg !5228
  store i32 %shl, i32* %ret, align 4, !dbg !5223
  %6 = load i32, i32* %ret, align 4, !dbg !5229
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5230
  %8 = load i32, i32* %n.addr, align 4, !dbg !5231
  %sub4 = sub nsw i32 %8, 16, !dbg !5232
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !5233
  %or = or i32 %6, %call5, !dbg !5234
  store i32 %or, i32* %retval, align 4, !dbg !5235
  br label %return, !dbg !5235

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5236
  ret i32 %9, !dbg !5236
}

declare i32 @av_image_check_size(i32, i32, i32, i8*) #3

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) #3

declare i32 @ff_set_sar(%struct.AVCodecContext*, i64) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #5 !dbg !5237 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5238, metadata !1942), !dbg !5239
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5240, metadata !1942), !dbg !5241
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !5242, metadata !1942), !dbg !5243
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5244
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5245
  %1 = load i32, i32* %index, align 8, !dbg !5245
  store i32 %1, i32* %re_index, align 4, !dbg !5243
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !5246, metadata !1942), !dbg !5247
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !5248, metadata !1942), !dbg !5249
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5250
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !5251
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5251
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !5249
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !5252
  %5 = load i32, i32* %re_index, align 4, !dbg !5253
  %6 = load i32, i32* %n.addr, align 4, !dbg !5254
  %add = add i32 %5, %6, !dbg !5255
  %cmp = icmp ugt i32 %4, %add, !dbg !5256
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5257

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !5258
  %8 = load i32, i32* %n.addr, align 4, !dbg !5260
  %add1 = add i32 %7, %8, !dbg !5261
  br label %cond.end, !dbg !5262

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !5263
  br label %cond.end, !dbg !5265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !5266
  store i32 %cond, i32* %re_index, align 4, !dbg !5268
  %10 = load i32, i32* %re_index, align 4, !dbg !5269
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5270
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !5271
  store i32 %10, i32* %index2, align 8, !dbg !5272
  ret void, !dbg !5273
}

declare i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #5 !dbg !5274 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5277, metadata !1942), !dbg !5278
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5279, metadata !1942), !dbg !5280
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5281
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5282
  %1 = load i32, i32* %index1, align 8, !dbg !5282
  store i32 %1, i32* %index, align 4, !dbg !5280
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5283, metadata !1942), !dbg !5284
  %2 = load i32, i32* %index, align 4, !dbg !5285
  %shr = lshr i32 %2, 3, !dbg !5286
  %idxprom = zext i32 %shr to i64, !dbg !5287
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5287
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !5288
  %4 = load i8*, i8** %buffer, align 8, !dbg !5288
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5287
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5287
  store i8 %5, i8* %result, align 1, !dbg !5284
  %6 = load i32, i32* %index, align 4, !dbg !5289
  %and = and i32 %6, 7, !dbg !5290
  %7 = load i8, i8* %result, align 1, !dbg !5291
  %conv = zext i8 %7 to i32, !dbg !5291
  %shl = shl i32 %conv, %and, !dbg !5291
  %conv2 = trunc i32 %shl to i8, !dbg !5291
  store i8 %conv2, i8* %result, align 1, !dbg !5291
  %8 = load i8, i8* %result, align 1, !dbg !5292
  %conv3 = zext i8 %8 to i32, !dbg !5292
  %shr4 = ashr i32 %conv3, 7, !dbg !5292
  %conv5 = trunc i32 %shr4 to i8, !dbg !5292
  store i8 %conv5, i8* %result, align 1, !dbg !5292
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5293
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !5295
  %10 = load i32, i32* %index6, align 8, !dbg !5295
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5296
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !5297
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5297
  %cmp = icmp slt i32 %10, %12, !dbg !5298
  br i1 %cmp, label %if.then, label %if.end, !dbg !5299

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !5300
  %inc = add i32 %13, 1, !dbg !5300
  store i32 %inc, i32* %index, align 4, !dbg !5300
  br label %if.end, !dbg !5301

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !5302
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5303
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5304
  store i32 %14, i32* %index8, align 8, !dbg !5305
  %16 = load i8, i8* %result, align 1, !dbg !5306
  %conv9 = zext i8 %16 to i32, !dbg !5306
  ret i32 %conv9, !dbg !5307
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_huffman_tree(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb) #0 !dbg !5308 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %s = alloca %struct.Vp3DecodeContext*, align 8
  %token = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5309, metadata !1942), !dbg !5310
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5311, metadata !1942), !dbg !5312
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s, metadata !5313, metadata !1942), !dbg !5314
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5315
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !5316
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5316
  %2 = bitcast i8* %1 to %struct.Vp3DecodeContext*, !dbg !5315
  store %struct.Vp3DecodeContext* %2, %struct.Vp3DecodeContext** %s, align 8, !dbg !5314
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5317
  %call = call i32 @get_bits1(%struct.GetBitContext* %3), !dbg !5319
  %tobool = icmp ne i32 %call, 0, !dbg !5319
  br i1 %tobool, label %if.then, label %if.else, !dbg !5320

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %token, metadata !5321, metadata !1942), !dbg !5323
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5324
  %entries = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 77, !dbg !5326
  %5 = load i32, i32* %entries, align 16, !dbg !5326
  %cmp = icmp sge i32 %5, 32, !dbg !5327
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5328

if.then1:                                         ; preds = %if.then
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5329
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !5329
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0)), !dbg !5331
  store i32 -1, i32* %retval, align 4, !dbg !5332
  br label %return, !dbg !5332

if.end:                                           ; preds = %if.then
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5333
  %call2 = call i32 @get_bits(%struct.GetBitContext* %8, i32 5), !dbg !5334
  store i32 %call2, i32* %token, align 4, !dbg !5335
  br label %do.body, !dbg !5336, !llvm.loop !5337

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5338

do.end:                                           ; preds = %do.body
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5341
  %hbits = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 76, !dbg !5342
  %10 = load i32, i32* %hbits, align 4, !dbg !5342
  %11 = load i32, i32* %token, align 4, !dbg !5343
  %idxprom = sext i32 %11 to i64, !dbg !5344
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5345
  %hti = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 75, !dbg !5346
  %13 = load i32, i32* %hti, align 8, !dbg !5346
  %idxprom3 = sext i32 %13 to i64, !dbg !5344
  %14 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5344
  %huffman_table = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %14, i32 0, i32 79, !dbg !5347
  %arrayidx = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table, i64 0, i64 %idxprom3, !dbg !5344
  %arrayidx4 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx, i64 0, i64 %idxprom, !dbg !5344
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i64 0, i64 0, !dbg !5344
  store i32 %10, i32* %arrayidx5, align 8, !dbg !5348
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5349
  %huff_code_size = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 78, !dbg !5350
  %16 = load i32, i32* %huff_code_size, align 4, !dbg !5350
  %17 = load i32, i32* %token, align 4, !dbg !5351
  %idxprom6 = sext i32 %17 to i64, !dbg !5352
  %18 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5353
  %hti7 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %18, i32 0, i32 75, !dbg !5354
  %19 = load i32, i32* %hti7, align 8, !dbg !5354
  %idxprom8 = sext i32 %19 to i64, !dbg !5352
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5352
  %huffman_table9 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %20, i32 0, i32 79, !dbg !5355
  %arrayidx10 = getelementptr inbounds [80 x [32 x [2 x i32]]], [80 x [32 x [2 x i32]]]* %huffman_table9, i64 0, i64 %idxprom8, !dbg !5352
  %arrayidx11 = getelementptr inbounds [32 x [2 x i32]], [32 x [2 x i32]]* %arrayidx10, i64 0, i64 %idxprom6, !dbg !5352
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx11, i64 0, i64 1, !dbg !5352
  store i32 %16, i32* %arrayidx12, align 4, !dbg !5356
  %21 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5357
  %entries13 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %21, i32 0, i32 77, !dbg !5358
  %22 = load i32, i32* %entries13, align 16, !dbg !5359
  %inc = add nsw i32 %22, 1, !dbg !5359
  store i32 %inc, i32* %entries13, align 16, !dbg !5359
  br label %if.end32, !dbg !5360

if.else:                                          ; preds = %entry
  %23 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5361
  %huff_code_size14 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %23, i32 0, i32 78, !dbg !5364
  %24 = load i32, i32* %huff_code_size14, align 4, !dbg !5364
  %cmp15 = icmp sge i32 %24, 32, !dbg !5365
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !5366

if.then16:                                        ; preds = %if.else
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5367
  %26 = bitcast %struct.AVCodecContext* %25 to i8*, !dbg !5367
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0)), !dbg !5369
  store i32 -1, i32* %retval, align 4, !dbg !5370
  br label %return, !dbg !5370

if.end17:                                         ; preds = %if.else
  %27 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5371
  %huff_code_size18 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %27, i32 0, i32 78, !dbg !5372
  %28 = load i32, i32* %huff_code_size18, align 4, !dbg !5373
  %inc19 = add nsw i32 %28, 1, !dbg !5373
  store i32 %inc19, i32* %huff_code_size18, align 4, !dbg !5373
  %29 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5374
  %hbits20 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %29, i32 0, i32 76, !dbg !5375
  %30 = load i32, i32* %hbits20, align 4, !dbg !5376
  %shl = shl i32 %30, 1, !dbg !5376
  store i32 %shl, i32* %hbits20, align 4, !dbg !5376
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5377
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5379
  %call21 = call i32 @read_huffman_tree(%struct.AVCodecContext* %31, %struct.GetBitContext* %32), !dbg !5380
  %tobool22 = icmp ne i32 %call21, 0, !dbg !5380
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5381

if.then23:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !5382
  br label %return, !dbg !5382

if.end24:                                         ; preds = %if.end17
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5383
  %hbits25 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 76, !dbg !5384
  %34 = load i32, i32* %hbits25, align 4, !dbg !5385
  %or = or i32 %34, 1, !dbg !5385
  store i32 %or, i32* %hbits25, align 4, !dbg !5385
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5386
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5388
  %call26 = call i32 @read_huffman_tree(%struct.AVCodecContext* %35, %struct.GetBitContext* %36), !dbg !5389
  %tobool27 = icmp ne i32 %call26, 0, !dbg !5389
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5390

if.then28:                                        ; preds = %if.end24
  store i32 -1, i32* %retval, align 4, !dbg !5391
  br label %return, !dbg !5391

if.end29:                                         ; preds = %if.end24
  %37 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5392
  %hbits30 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %37, i32 0, i32 76, !dbg !5393
  %38 = load i32, i32* %hbits30, align 4, !dbg !5394
  %shr = lshr i32 %38, 1, !dbg !5394
  store i32 %shr, i32* %hbits30, align 4, !dbg !5394
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s, align 8, !dbg !5395
  %huff_code_size31 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 78, !dbg !5396
  %40 = load i32, i32* %huff_code_size31, align 4, !dbg !5397
  %dec = add nsw i32 %40, -1, !dbg !5397
  store i32 %dec, i32* %huff_code_size31, align 4, !dbg !5397
  br label %if.end32

if.end32:                                         ; preds = %if.end29, %do.end
  store i32 0, i32* %retval, align 4, !dbg !5398
  br label %return, !dbg !5398

return:                                           ; preds = %if.end32, %if.then28, %if.then23, %if.then16, %if.then1
  %41 = load i32, i32* %retval, align 4, !dbg !5399
  ret i32 %41, !dbg !5399
}

; Function Attrs: nounwind uwtable
define internal void @init_loop_filter(%struct.Vp3DecodeContext* %s) #0 !dbg !5400 {
entry:
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !5403, metadata !1942), !dbg !5404
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5405
  %bounding_values_array = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 81, !dbg !5406
  %arraydecay = getelementptr inbounds [258 x i32], [258 x i32]* %bounding_values_array, i32 0, i32 0, !dbg !5405
  %1 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5407
  %qps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %1, i32 0, i32 22, !dbg !5408
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %qps, i64 0, i64 0, !dbg !5407
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5407
  %idxprom = sext i32 %2 to i64, !dbg !5409
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5409
  %filter_limit_values = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 80, !dbg !5410
  %arrayidx1 = getelementptr inbounds [64 x i8], [64 x i8]* %filter_limit_values, i64 0, i64 %idxprom, !dbg !5409
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !5409
  %conv = zext i8 %4 to i32, !dbg !5409
  call void @ff_vp3dsp_set_bounding_values(i32* %arraydecay, i32 %conv), !dbg !5411
  ret void, !dbg !5412
}

; Function Attrs: nounwind uwtable
define internal void @init_dequantizer(%struct.Vp3DecodeContext* %s, i32 %qpi) #0 !dbg !5413 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4353, metadata !1942), !dbg !5416
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4360, metadata !1942), !dbg !5427
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4362, metadata !1942), !dbg !5428
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %qpi.addr = alloca i32, align 4
  %ac_scale_factor = alloca i32, align 4
  %dc_scale_factor = alloca i32, align 4
  %i = alloca i32, align 4
  %plane = alloca i32, align 4
  %inter = alloca i32, align 4
  %qri = alloca i32, align 4
  %bmi = alloca i32, align 4
  %bmj = alloca i32, align 4
  %qistart = alloca i32, align 4
  %sum = alloca i32, align 4
  %coeff = alloca i32, align 4
  %qmin = alloca i32, align 4
  %qscale = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !5429, metadata !1942), !dbg !5430
  store i32 %qpi, i32* %qpi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qpi.addr, metadata !5431, metadata !1942), !dbg !5432
  call void @llvm.dbg.declare(metadata i32* %ac_scale_factor, metadata !5433, metadata !1942), !dbg !5434
  %0 = load i32, i32* %qpi.addr, align 4, !dbg !5435
  %idxprom = sext i32 %0 to i64, !dbg !5436
  %1 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5436
  %qps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %1, i32 0, i32 22, !dbg !5437
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %qps, i64 0, i64 %idxprom, !dbg !5436
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5436
  %idxprom1 = sext i32 %2 to i64, !dbg !5438
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5438
  %coded_ac_scale_factor = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 49, !dbg !5439
  %arrayidx2 = getelementptr inbounds [64 x i32], [64 x i32]* %coded_ac_scale_factor, i64 0, i64 %idxprom1, !dbg !5438
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !5438
  store i32 %4, i32* %ac_scale_factor, align 4, !dbg !5434
  call void @llvm.dbg.declare(metadata i32* %dc_scale_factor, metadata !5440, metadata !1942), !dbg !5441
  %5 = load i32, i32* %qpi.addr, align 4, !dbg !5442
  %idxprom3 = sext i32 %5 to i64, !dbg !5443
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5443
  %qps4 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 22, !dbg !5444
  %arrayidx5 = getelementptr inbounds [3 x i32], [3 x i32]* %qps4, i64 0, i64 %idxprom3, !dbg !5443
  %7 = load i32, i32* %arrayidx5, align 4, !dbg !5443
  %idxprom6 = sext i32 %7 to i64, !dbg !5445
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5445
  %coded_dc_scale_factor = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 48, !dbg !5446
  %arrayidx7 = getelementptr inbounds [64 x i16], [64 x i16]* %coded_dc_scale_factor, i64 0, i64 %idxprom6, !dbg !5445
  %9 = load i16, i16* %arrayidx7, align 2, !dbg !5445
  %conv = zext i16 %9 to i32, !dbg !5445
  store i32 %conv, i32* %dc_scale_factor, align 4, !dbg !5441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5447, metadata !1942), !dbg !5448
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !5449, metadata !1942), !dbg !5450
  call void @llvm.dbg.declare(metadata i32* %inter, metadata !5451, metadata !1942), !dbg !5452
  call void @llvm.dbg.declare(metadata i32* %qri, metadata !5453, metadata !1942), !dbg !5454
  call void @llvm.dbg.declare(metadata i32* %bmi, metadata !5455, metadata !1942), !dbg !5456
  call void @llvm.dbg.declare(metadata i32* %bmj, metadata !5457, metadata !1942), !dbg !5458
  call void @llvm.dbg.declare(metadata i32* %qistart, metadata !5459, metadata !1942), !dbg !5460
  store i32 0, i32* %inter, align 4, !dbg !5461
  br label %for.cond, !dbg !5462

for.cond:                                         ; preds = %for.inc140, %entry
  %10 = load i32, i32* %inter, align 4, !dbg !5463
  %cmp = icmp slt i32 %10, 2, !dbg !5465
  br i1 %cmp, label %for.body, label %for.end142, !dbg !5466

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %plane, align 4, !dbg !5467
  br label %for.cond9, !dbg !5468

for.cond9:                                        ; preds = %for.inc137, %for.body
  %11 = load i32, i32* %plane, align 4, !dbg !5469
  %cmp10 = icmp slt i32 %11, 3, !dbg !5471
  br i1 %cmp10, label %for.body12, label %for.end139, !dbg !5472

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !5473, metadata !1942), !dbg !5474
  store i32 0, i32* %sum, align 4, !dbg !5474
  store i32 0, i32* %qri, align 4, !dbg !5475
  br label %for.cond13, !dbg !5477

for.cond13:                                       ; preds = %for.inc, %for.body12
  %12 = load i32, i32* %qri, align 4, !dbg !5478
  %13 = load i32, i32* %plane, align 4, !dbg !5481
  %idxprom14 = sext i32 %13 to i64, !dbg !5482
  %14 = load i32, i32* %inter, align 4, !dbg !5483
  %idxprom15 = sext i32 %14 to i64, !dbg !5482
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5482
  %qr_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 51, !dbg !5484
  %arrayidx16 = getelementptr inbounds [2 x [3 x i8]], [2 x [3 x i8]]* %qr_count, i64 0, i64 %idxprom15, !dbg !5482
  %arrayidx17 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !5482
  %16 = load i8, i8* %arrayidx17, align 1, !dbg !5482
  %conv18 = zext i8 %16 to i32, !dbg !5482
  %cmp19 = icmp slt i32 %12, %conv18, !dbg !5485
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !5486

for.body21:                                       ; preds = %for.cond13
  %17 = load i32, i32* %qri, align 4, !dbg !5487
  %idxprom22 = sext i32 %17 to i64, !dbg !5489
  %18 = load i32, i32* %plane, align 4, !dbg !5490
  %idxprom23 = sext i32 %18 to i64, !dbg !5489
  %19 = load i32, i32* %inter, align 4, !dbg !5491
  %idxprom24 = sext i32 %19 to i64, !dbg !5489
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5489
  %qr_size = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %20, i32 0, i32 52, !dbg !5492
  %arrayidx25 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size, i64 0, i64 %idxprom24, !dbg !5489
  %arrayidx26 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx25, i64 0, i64 %idxprom23, !dbg !5489
  %arrayidx27 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx26, i64 0, i64 %idxprom22, !dbg !5489
  %21 = load i8, i8* %arrayidx27, align 1, !dbg !5489
  %conv28 = zext i8 %21 to i32, !dbg !5489
  %22 = load i32, i32* %sum, align 4, !dbg !5493
  %add = add nsw i32 %22, %conv28, !dbg !5493
  store i32 %add, i32* %sum, align 4, !dbg !5493
  %23 = load i32, i32* %qpi.addr, align 4, !dbg !5494
  %idxprom29 = sext i32 %23 to i64, !dbg !5496
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5496
  %qps30 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 22, !dbg !5497
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %qps30, i64 0, i64 %idxprom29, !dbg !5496
  %25 = load i32, i32* %arrayidx31, align 4, !dbg !5496
  %26 = load i32, i32* %sum, align 4, !dbg !5498
  %cmp32 = icmp sle i32 %25, %26, !dbg !5499
  br i1 %cmp32, label %if.then, label %if.end, !dbg !5500

if.then:                                          ; preds = %for.body21
  br label %for.end, !dbg !5501

if.end:                                           ; preds = %for.body21
  br label %for.inc, !dbg !5502

for.inc:                                          ; preds = %if.end
  %27 = load i32, i32* %qri, align 4, !dbg !5503
  %inc = add nsw i32 %27, 1, !dbg !5503
  store i32 %inc, i32* %qri, align 4, !dbg !5503
  br label %for.cond13, !dbg !5505, !llvm.loop !5506

for.end:                                          ; preds = %if.then, %for.cond13
  %28 = load i32, i32* %sum, align 4, !dbg !5508
  %29 = load i32, i32* %qri, align 4, !dbg !5509
  %idxprom34 = sext i32 %29 to i64, !dbg !5510
  %30 = load i32, i32* %plane, align 4, !dbg !5511
  %idxprom35 = sext i32 %30 to i64, !dbg !5510
  %31 = load i32, i32* %inter, align 4, !dbg !5512
  %idxprom36 = sext i32 %31 to i64, !dbg !5510
  %32 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5510
  %qr_size37 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %32, i32 0, i32 52, !dbg !5513
  %arrayidx38 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size37, i64 0, i64 %idxprom36, !dbg !5510
  %arrayidx39 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx38, i64 0, i64 %idxprom35, !dbg !5510
  %arrayidx40 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx39, i64 0, i64 %idxprom34, !dbg !5510
  %33 = load i8, i8* %arrayidx40, align 1, !dbg !5510
  %conv41 = zext i8 %33 to i32, !dbg !5510
  %sub = sub nsw i32 %28, %conv41, !dbg !5514
  store i32 %sub, i32* %qistart, align 4, !dbg !5515
  %34 = load i32, i32* %qri, align 4, !dbg !5516
  %idxprom42 = sext i32 %34 to i64, !dbg !5517
  %35 = load i32, i32* %plane, align 4, !dbg !5518
  %idxprom43 = sext i32 %35 to i64, !dbg !5517
  %36 = load i32, i32* %inter, align 4, !dbg !5519
  %idxprom44 = sext i32 %36 to i64, !dbg !5517
  %37 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5517
  %qr_base = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %37, i32 0, i32 53, !dbg !5520
  %arrayidx45 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %qr_base, i64 0, i64 %idxprom44, !dbg !5517
  %arrayidx46 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx45, i64 0, i64 %idxprom43, !dbg !5517
  %arrayidx47 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx46, i64 0, i64 %idxprom42, !dbg !5517
  %38 = load i16, i16* %arrayidx47, align 2, !dbg !5517
  %conv48 = zext i16 %38 to i32, !dbg !5517
  store i32 %conv48, i32* %bmi, align 4, !dbg !5521
  %39 = load i32, i32* %qri, align 4, !dbg !5522
  %add49 = add nsw i32 %39, 1, !dbg !5523
  %idxprom50 = sext i32 %add49 to i64, !dbg !5524
  %40 = load i32, i32* %plane, align 4, !dbg !5525
  %idxprom51 = sext i32 %40 to i64, !dbg !5524
  %41 = load i32, i32* %inter, align 4, !dbg !5526
  %idxprom52 = sext i32 %41 to i64, !dbg !5524
  %42 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5524
  %qr_base53 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %42, i32 0, i32 53, !dbg !5527
  %arrayidx54 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %qr_base53, i64 0, i64 %idxprom52, !dbg !5524
  %arrayidx55 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx54, i64 0, i64 %idxprom51, !dbg !5524
  %arrayidx56 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx55, i64 0, i64 %idxprom50, !dbg !5524
  %43 = load i16, i16* %arrayidx56, align 2, !dbg !5524
  %conv57 = zext i16 %43 to i32, !dbg !5524
  store i32 %conv57, i32* %bmj, align 4, !dbg !5528
  store i32 0, i32* %i, align 4, !dbg !5529
  br label %for.cond58, !dbg !5530

for.cond58:                                       ; preds = %for.inc119, %for.end
  %44 = load i32, i32* %i, align 4, !dbg !5531
  %cmp59 = icmp slt i32 %44, 64, !dbg !5533
  br i1 %cmp59, label %for.body61, label %for.end121, !dbg !5534

for.body61:                                       ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata i32* %coeff, metadata !5535, metadata !1942), !dbg !5536
  %45 = load i32, i32* %sum, align 4, !dbg !5537
  %46 = load i32, i32* %qpi.addr, align 4, !dbg !5538
  %idxprom62 = sext i32 %46 to i64, !dbg !5539
  %47 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5539
  %qps63 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %47, i32 0, i32 22, !dbg !5540
  %arrayidx64 = getelementptr inbounds [3 x i32], [3 x i32]* %qps63, i64 0, i64 %idxprom62, !dbg !5539
  %48 = load i32, i32* %arrayidx64, align 4, !dbg !5539
  %sub65 = sub nsw i32 %45, %48, !dbg !5541
  %mul = mul nsw i32 2, %sub65, !dbg !5542
  %49 = load i32, i32* %i, align 4, !dbg !5543
  %idxprom66 = sext i32 %49 to i64, !dbg !5544
  %50 = load i32, i32* %bmi, align 4, !dbg !5545
  %idxprom67 = sext i32 %50 to i64, !dbg !5544
  %51 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5544
  %base_matrix = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %51, i32 0, i32 50, !dbg !5546
  %arrayidx68 = getelementptr inbounds [384 x [64 x i8]], [384 x [64 x i8]]* %base_matrix, i64 0, i64 %idxprom67, !dbg !5544
  %arrayidx69 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx68, i64 0, i64 %idxprom66, !dbg !5544
  %52 = load i8, i8* %arrayidx69, align 1, !dbg !5544
  %conv70 = zext i8 %52 to i32, !dbg !5544
  %mul71 = mul nsw i32 %mul, %conv70, !dbg !5547
  %53 = load i32, i32* %qistart, align 4, !dbg !5548
  %54 = load i32, i32* %qpi.addr, align 4, !dbg !5549
  %idxprom72 = sext i32 %54 to i64, !dbg !5550
  %55 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5550
  %qps73 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %55, i32 0, i32 22, !dbg !5551
  %arrayidx74 = getelementptr inbounds [3 x i32], [3 x i32]* %qps73, i64 0, i64 %idxprom72, !dbg !5550
  %56 = load i32, i32* %arrayidx74, align 4, !dbg !5550
  %sub75 = sub nsw i32 %53, %56, !dbg !5552
  %mul76 = mul nsw i32 2, %sub75, !dbg !5553
  %57 = load i32, i32* %i, align 4, !dbg !5554
  %idxprom77 = sext i32 %57 to i64, !dbg !5555
  %58 = load i32, i32* %bmj, align 4, !dbg !5556
  %idxprom78 = sext i32 %58 to i64, !dbg !5555
  %59 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5555
  %base_matrix79 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %59, i32 0, i32 50, !dbg !5557
  %arrayidx80 = getelementptr inbounds [384 x [64 x i8]], [384 x [64 x i8]]* %base_matrix79, i64 0, i64 %idxprom78, !dbg !5555
  %arrayidx81 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx80, i64 0, i64 %idxprom77, !dbg !5555
  %60 = load i8, i8* %arrayidx81, align 1, !dbg !5555
  %conv82 = zext i8 %60 to i32, !dbg !5555
  %mul83 = mul nsw i32 %mul76, %conv82, !dbg !5558
  %sub84 = sub nsw i32 %mul71, %mul83, !dbg !5559
  %61 = load i32, i32* %qri, align 4, !dbg !5560
  %idxprom85 = sext i32 %61 to i64, !dbg !5561
  %62 = load i32, i32* %plane, align 4, !dbg !5562
  %idxprom86 = sext i32 %62 to i64, !dbg !5561
  %63 = load i32, i32* %inter, align 4, !dbg !5563
  %idxprom87 = sext i32 %63 to i64, !dbg !5561
  %64 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5561
  %qr_size88 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %64, i32 0, i32 52, !dbg !5564
  %arrayidx89 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size88, i64 0, i64 %idxprom87, !dbg !5561
  %arrayidx90 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx89, i64 0, i64 %idxprom86, !dbg !5561
  %arrayidx91 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx90, i64 0, i64 %idxprom85, !dbg !5561
  %65 = load i8, i8* %arrayidx91, align 1, !dbg !5561
  %conv92 = zext i8 %65 to i32, !dbg !5561
  %add93 = add nsw i32 %sub84, %conv92, !dbg !5565
  %66 = load i32, i32* %qri, align 4, !dbg !5566
  %idxprom94 = sext i32 %66 to i64, !dbg !5567
  %67 = load i32, i32* %plane, align 4, !dbg !5568
  %idxprom95 = sext i32 %67 to i64, !dbg !5567
  %68 = load i32, i32* %inter, align 4, !dbg !5569
  %idxprom96 = sext i32 %68 to i64, !dbg !5567
  %69 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5567
  %qr_size97 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %69, i32 0, i32 52, !dbg !5570
  %arrayidx98 = getelementptr inbounds [2 x [3 x [64 x i8]]], [2 x [3 x [64 x i8]]]* %qr_size97, i64 0, i64 %idxprom96, !dbg !5567
  %arrayidx99 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %arrayidx98, i64 0, i64 %idxprom95, !dbg !5567
  %arrayidx100 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx99, i64 0, i64 %idxprom94, !dbg !5567
  %70 = load i8, i8* %arrayidx100, align 1, !dbg !5567
  %conv101 = zext i8 %70 to i32, !dbg !5567
  %mul102 = mul nsw i32 2, %conv101, !dbg !5571
  %div = sdiv i32 %add93, %mul102, !dbg !5572
  store i32 %div, i32* %coeff, align 4, !dbg !5536
  call void @llvm.dbg.declare(metadata i32* %qmin, metadata !5573, metadata !1942), !dbg !5574
  %71 = load i32, i32* %inter, align 4, !dbg !5575
  %72 = load i32, i32* %i, align 4, !dbg !5576
  %tobool = icmp ne i32 %72, 0, !dbg !5577
  %lnot = xor i1 %tobool, true, !dbg !5577
  %lnot.ext = zext i1 %lnot to i32, !dbg !5577
  %add103 = add nsw i32 %71, %lnot.ext, !dbg !5578
  %shl = shl i32 8, %add103, !dbg !5579
  store i32 %shl, i32* %qmin, align 4, !dbg !5574
  call void @llvm.dbg.declare(metadata i32* %qscale, metadata !5580, metadata !1942), !dbg !5581
  %73 = load i32, i32* %i, align 4, !dbg !5582
  %tobool104 = icmp ne i32 %73, 0, !dbg !5582
  br i1 %tobool104, label %cond.true, label %cond.false, !dbg !5582

cond.true:                                        ; preds = %for.body61
  %74 = load i32, i32* %ac_scale_factor, align 4, !dbg !5583
  br label %cond.end, !dbg !5585

cond.false:                                       ; preds = %for.body61
  %75 = load i32, i32* %dc_scale_factor, align 4, !dbg !5586
  br label %cond.end, !dbg !5588

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %74, %cond.true ], [ %75, %cond.false ], !dbg !5589
  store i32 %cond, i32* %qscale, align 4, !dbg !5591
  %76 = load i32, i32* %qscale, align 4, !dbg !5592
  %77 = load i32, i32* %coeff, align 4, !dbg !5593
  %mul105 = mul nsw i32 %76, %77, !dbg !5594
  %div106 = sdiv i32 %mul105, 100, !dbg !5595
  %mul107 = mul nsw i32 %div106, 4, !dbg !5596
  %78 = load i32, i32* %qmin, align 4, !dbg !5597
  store i32 %mul107, i32* %a.addr.i, align 4, !dbg !5598
  store i32 %78, i32* %amin.addr.i, align 4, !dbg !5598
  store i32 4096, i32* %amax.addr.i, align 4, !dbg !5598
  %79 = load i32, i32* %a.addr.i, align 4, !dbg !5599
  %80 = load i32, i32* %amin.addr.i, align 4, !dbg !5600
  %cmp.i = icmp slt i32 %79, %80, !dbg !5601
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5602

if.then.i:                                        ; preds = %cond.end
  %81 = load i32, i32* %amin.addr.i, align 4, !dbg !5603
  store i32 %81, i32* %retval.i, align 4, !dbg !5604
  br label %av_clip_c.exit, !dbg !5604

if.else.i:                                        ; preds = %cond.end
  %82 = load i32, i32* %a.addr.i, align 4, !dbg !5605
  %83 = load i32, i32* %amax.addr.i, align 4, !dbg !5606
  %cmp1.i = icmp sgt i32 %82, %83, !dbg !5607
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5608

if.then2.i:                                       ; preds = %if.else.i
  %84 = load i32, i32* %amax.addr.i, align 4, !dbg !5609
  store i32 %84, i32* %retval.i, align 4, !dbg !5610
  br label %av_clip_c.exit, !dbg !5610

if.else3.i:                                       ; preds = %if.else.i
  %85 = load i32, i32* %a.addr.i, align 4, !dbg !5611
  store i32 %85, i32* %retval.i, align 4, !dbg !5612
  br label %av_clip_c.exit, !dbg !5612

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %86 = load i32, i32* %retval.i, align 4, !dbg !5613
  %conv108 = trunc i32 %86 to i16, !dbg !5598
  %87 = load i32, i32* %i, align 4, !dbg !5614
  %idxprom109 = sext i32 %87 to i64, !dbg !5615
  %88 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5615
  %idct_permutation = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %88, i32 0, i32 13, !dbg !5616
  %arrayidx110 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_permutation, i64 0, i64 %idxprom109, !dbg !5615
  %89 = load i8, i8* %arrayidx110, align 1, !dbg !5615
  %idxprom111 = zext i8 %89 to i64, !dbg !5617
  %90 = load i32, i32* %plane, align 4, !dbg !5618
  %idxprom112 = sext i32 %90 to i64, !dbg !5617
  %91 = load i32, i32* %inter, align 4, !dbg !5619
  %idxprom113 = sext i32 %91 to i64, !dbg !5617
  %92 = load i32, i32* %qpi.addr, align 4, !dbg !5620
  %idxprom114 = sext i32 %92 to i64, !dbg !5617
  %93 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5617
  %qmat = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %93, i32 0, i32 71, !dbg !5621
  %arrayidx115 = getelementptr inbounds [3 x [2 x [3 x [64 x i16]]]], [3 x [2 x [3 x [64 x i16]]]]* %qmat, i64 0, i64 %idxprom114, !dbg !5617
  %arrayidx116 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %arrayidx115, i64 0, i64 %idxprom113, !dbg !5617
  %arrayidx117 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx116, i64 0, i64 %idxprom112, !dbg !5617
  %arrayidx118 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx117, i64 0, i64 %idxprom111, !dbg !5617
  store i16 %conv108, i16* %arrayidx118, align 2, !dbg !5622
  br label %for.inc119, !dbg !5623

for.inc119:                                       ; preds = %av_clip_c.exit
  %94 = load i32, i32* %i, align 4, !dbg !5624
  %inc120 = add nsw i32 %94, 1, !dbg !5624
  store i32 %inc120, i32* %i, align 4, !dbg !5624
  br label %for.cond58, !dbg !5626, !llvm.loop !5627

for.end121:                                       ; preds = %for.cond58
  %95 = load i32, i32* %plane, align 4, !dbg !5629
  %idxprom122 = sext i32 %95 to i64, !dbg !5630
  %96 = load i32, i32* %inter, align 4, !dbg !5631
  %idxprom123 = sext i32 %96 to i64, !dbg !5630
  %97 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5630
  %qmat124 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %97, i32 0, i32 71, !dbg !5632
  %arrayidx125 = getelementptr inbounds [3 x [2 x [3 x [64 x i16]]]], [3 x [2 x [3 x [64 x i16]]]]* %qmat124, i64 0, i64 0, !dbg !5630
  %arrayidx126 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %arrayidx125, i64 0, i64 %idxprom123, !dbg !5630
  %arrayidx127 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx126, i64 0, i64 %idxprom122, !dbg !5630
  %arrayidx128 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx127, i64 0, i64 0, !dbg !5630
  %98 = load i16, i16* %arrayidx128, align 16, !dbg !5630
  %99 = load i32, i32* %plane, align 4, !dbg !5633
  %idxprom129 = sext i32 %99 to i64, !dbg !5634
  %100 = load i32, i32* %inter, align 4, !dbg !5635
  %idxprom130 = sext i32 %100 to i64, !dbg !5634
  %101 = load i32, i32* %qpi.addr, align 4, !dbg !5636
  %idxprom131 = sext i32 %101 to i64, !dbg !5634
  %102 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5634
  %qmat132 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %102, i32 0, i32 71, !dbg !5637
  %arrayidx133 = getelementptr inbounds [3 x [2 x [3 x [64 x i16]]]], [3 x [2 x [3 x [64 x i16]]]]* %qmat132, i64 0, i64 %idxprom131, !dbg !5634
  %arrayidx134 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %arrayidx133, i64 0, i64 %idxprom130, !dbg !5634
  %arrayidx135 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx134, i64 0, i64 %idxprom129, !dbg !5634
  %arrayidx136 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx135, i64 0, i64 0, !dbg !5634
  store i16 %98, i16* %arrayidx136, align 16, !dbg !5638
  br label %for.inc137, !dbg !5639

for.inc137:                                       ; preds = %for.end121
  %103 = load i32, i32* %plane, align 4, !dbg !5640
  %inc138 = add nsw i32 %103, 1, !dbg !5640
  store i32 %inc138, i32* %plane, align 4, !dbg !5640
  br label %for.cond9, !dbg !5642, !llvm.loop !5643

for.end139:                                       ; preds = %for.cond9
  br label %for.inc140, !dbg !5645

for.inc140:                                       ; preds = %for.end139
  %104 = load i32, i32* %inter, align 4, !dbg !5646
  %inc141 = add nsw i32 %104, 1, !dbg !5646
  store i32 %inc141, i32* %inter, align 4, !dbg !5646
  br label %for.cond, !dbg !5648, !llvm.loop !5649

for.end142:                                       ; preds = %for.cond
  ret void, !dbg !5651
}

declare i32 @ff_thread_get_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*, i32) #3

declare noalias i8* @av_malloc(i64) #3

declare void @ff_thread_report_progress(%struct.ThreadFrame*, i32, i32) #3

declare void @ff_thread_finish_setup(%struct.AVCodecContext*) #3

; Function Attrs: nounwind uwtable
define internal i32 @unpack_superblocks(%struct.Vp3DecodeContext* %s, %struct.GetBitContext* %gb) #0 !dbg !5652 {
entry:
  %x.addr.i96.i403 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i403, metadata !4271, metadata !1942), !dbg !5655
  %x.addr.i81.i404 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i404, metadata !4271, metadata !1942), !dbg !5684
  %x.addr.i.i405 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i405, metadata !4271, metadata !1942), !dbg !5687
  %s.addr.i406 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i406, metadata !5689, metadata !1942), !dbg !5690
  %table.addr.i407 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i407, metadata !5691, metadata !1942), !dbg !5692
  %bits.addr.i408 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i408, metadata !5693, metadata !1942), !dbg !5694
  %max_depth.addr.i409 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i409, metadata !5695, metadata !1942), !dbg !5696
  %code.i410 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i410, metadata !5697, metadata !1942), !dbg !5698
  %re_index.i411 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i411, metadata !5699, metadata !1942), !dbg !5700
  %re_cache.i412 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i412, metadata !5701, metadata !1942), !dbg !5702
  %re_size_plus8.i413 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i413, metadata !5703, metadata !1942), !dbg !5704
  %n.i414 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i414, metadata !5705, metadata !1942), !dbg !5706
  %nb_bits.i415 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i415, metadata !5707, metadata !1942), !dbg !5708
  %index1.i416 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i416, metadata !5709, metadata !1942), !dbg !5710
  %x.addr.i96.i257 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i257, metadata !4271, metadata !1942), !dbg !5711
  %x.addr.i81.i258 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i258, metadata !4271, metadata !1942), !dbg !5719
  %x.addr.i.i259 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i259, metadata !4271, metadata !1942), !dbg !5721
  %s.addr.i260 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i260, metadata !5689, metadata !1942), !dbg !5723
  %table.addr.i261 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i261, metadata !5691, metadata !1942), !dbg !5724
  %bits.addr.i262 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i262, metadata !5693, metadata !1942), !dbg !5725
  %max_depth.addr.i263 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i263, metadata !5695, metadata !1942), !dbg !5726
  %code.i264 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i264, metadata !5697, metadata !1942), !dbg !5727
  %re_index.i265 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i265, metadata !5699, metadata !1942), !dbg !5728
  %re_cache.i266 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i266, metadata !5701, metadata !1942), !dbg !5729
  %re_size_plus8.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i267, metadata !5703, metadata !1942), !dbg !5730
  %n.i268 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i268, metadata !5705, metadata !1942), !dbg !5731
  %nb_bits.i269 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i269, metadata !5707, metadata !1942), !dbg !5732
  %index1.i270 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i270, metadata !5709, metadata !1942), !dbg !5733
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4271, metadata !1942), !dbg !5734
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4271, metadata !1942), !dbg !5738
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4271, metadata !1942), !dbg !5740
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5689, metadata !1942), !dbg !5742
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5691, metadata !1942), !dbg !5743
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5693, metadata !1942), !dbg !5744
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5695, metadata !1942), !dbg !5745
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5697, metadata !1942), !dbg !5746
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5699, metadata !1942), !dbg !5747
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5701, metadata !1942), !dbg !5748
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5703, metadata !1942), !dbg !5749
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5705, metadata !1942), !dbg !5750
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5707, metadata !1942), !dbg !5751
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5709, metadata !1942), !dbg !5752
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %superblock_starts = alloca [3 x i32], align 4
  %bit = alloca i32, align 4
  %current_superblock = alloca i32, align 4
  %current_run = alloca i32, align 4
  %num_partial_superblocks = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %current_fragment = alloca i32, align 4
  %plane = alloca i32, align 4
  %plane0_num_coded_frags = alloca i32, align 4
  %superblocks_decoded = alloca i32, align 4
  %sb_start = alloca i32, align 4
  %sb_end = alloca i32, align 4
  %num_coded_frags = alloca i32, align 4
  %coded = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !5753, metadata !1942), !dbg !5754
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5755, metadata !1942), !dbg !5756
  call void @llvm.dbg.declare(metadata [3 x i32]* %superblock_starts, metadata !5757, metadata !1942), !dbg !5758
  %arrayinit.begin = getelementptr inbounds [3 x i32], [3 x i32]* %superblock_starts, i64 0, i64 0, !dbg !5759
  store i32 0, i32* %arrayinit.begin, align 4, !dbg !5759
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !5759
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5760
  %u_superblock_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 32, !dbg !5761
  %1 = load i32, i32* %u_superblock_start, align 4, !dbg !5761
  store i32 %1, i32* %arrayinit.element, align 4, !dbg !5759
  %arrayinit.element1 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !5759
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5762
  %v_superblock_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 33, !dbg !5763
  %3 = load i32, i32* %v_superblock_start, align 8, !dbg !5763
  store i32 %3, i32* %arrayinit.element1, align 4, !dbg !5759
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !5764, metadata !1942), !dbg !5765
  store i32 0, i32* %bit, align 4, !dbg !5765
  call void @llvm.dbg.declare(metadata i32* %current_superblock, metadata !5766, metadata !1942), !dbg !5767
  store i32 0, i32* %current_superblock, align 4, !dbg !5767
  call void @llvm.dbg.declare(metadata i32* %current_run, metadata !5768, metadata !1942), !dbg !5769
  store i32 0, i32* %current_run, align 4, !dbg !5769
  call void @llvm.dbg.declare(metadata i32* %num_partial_superblocks, metadata !5770, metadata !1942), !dbg !5771
  store i32 0, i32* %num_partial_superblocks, align 4, !dbg !5771
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5772, metadata !1942), !dbg !5773
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5774, metadata !1942), !dbg !5775
  call void @llvm.dbg.declare(metadata i32* %current_fragment, metadata !5776, metadata !1942), !dbg !5777
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !5778, metadata !1942), !dbg !5779
  call void @llvm.dbg.declare(metadata i32* %plane0_num_coded_frags, metadata !5780, metadata !1942), !dbg !5781
  store i32 0, i32* %plane0_num_coded_frags, align 4, !dbg !5781
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5782
  %keyframe = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 12, !dbg !5783
  %5 = load i32, i32* %keyframe, align 8, !dbg !5783
  %tobool = icmp ne i32 %5, 0, !dbg !5782
  br i1 %tobool, label %if.then, label %if.else, !dbg !5784

if.then:                                          ; preds = %entry
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5785
  %superblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 34, !dbg !5787
  %7 = load i8*, i8** %superblock_coding, align 16, !dbg !5787
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5788
  %superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 25, !dbg !5789
  %9 = load i32, i32* %superblock_count, align 8, !dbg !5789
  %conv = sext i32 %9 to i64, !dbg !5788
  call void @llvm.memset.p0i8.i64(i8* %7, i8 2, i64 %conv, i32 1, i1 false), !dbg !5790
  br label %if.end97, !dbg !5791

if.else:                                          ; preds = %entry
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5792
  %call = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !5793
  %xor = xor i32 %call, 1, !dbg !5794
  store i32 %xor, i32* %bit, align 4, !dbg !5795
  store i32 0, i32* %current_run, align 4, !dbg !5796
  br label %while.cond, !dbg !5797

while.cond:                                       ; preds = %if.end32, %if.else
  %11 = load i32, i32* %current_superblock, align 4, !dbg !5798
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5800
  %superblock_count2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 25, !dbg !5801
  %13 = load i32, i32* %superblock_count2, align 8, !dbg !5801
  %cmp = icmp slt i32 %11, %13, !dbg !5802
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5803

land.rhs:                                         ; preds = %while.cond
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5804
  %call4 = call i32 @get_bits_left(%struct.GetBitContext* %14), !dbg !5806
  %cmp5 = icmp sgt i32 %call4, 0, !dbg !5807
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %15 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ]
  br i1 %15, label %while.body, label %while.end, !dbg !5808

while.body:                                       ; preds = %land.end
  %16 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5810
  %theora = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %16, i32 0, i32 1, !dbg !5812
  %17 = load i32, i32* %theora, align 8, !dbg !5812
  %tobool7 = icmp ne i32 %17, 0, !dbg !5810
  br i1 %tobool7, label %land.lhs.true, label %if.else12, !dbg !5813

land.lhs.true:                                    ; preds = %while.body
  %18 = load i32, i32* %current_run, align 4, !dbg !5814
  %cmp8 = icmp eq i32 %18, 4129, !dbg !5816
  br i1 %cmp8, label %if.then10, label %if.else12, !dbg !5817

if.then10:                                        ; preds = %land.lhs.true
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5818
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %19), !dbg !5819
  store i32 %call11, i32* %bit, align 4, !dbg !5820
  br label %if.end, !dbg !5821

if.else12:                                        ; preds = %land.lhs.true, %while.body
  %20 = load i32, i32* %bit, align 4, !dbg !5822
  %xor13 = xor i32 %20, 1, !dbg !5822
  store i32 %xor13, i32* %bit, align 4, !dbg !5822
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then10
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5823
  %22 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !5824
  %superblock_run_length_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %22, i32 0, i32 67, !dbg !5825
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %superblock_run_length_vlc, i32 0, i32 1, !dbg !5826
  %23 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !5826
  store %struct.GetBitContext* %21, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5827
  store [2 x i16]* %23, [2 x i16]** %table.addr.i, align 8, !dbg !5827
  store i32 6, i32* %bits.addr.i, align 4, !dbg !5827
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !5827
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5828
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %24, i32 0, i32 2, !dbg !5829
  %25 = load i32, i32* %index.i, align 8, !dbg !5829
  store i32 %25, i32* %re_index.i, align 4, !dbg !5747
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5830
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %26, i32 0, i32 4, !dbg !5831
  %27 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !5831
  store i32 %27, i32* %re_size_plus8.i, align 4, !dbg !5749
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5832
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %28, i32 0, i32 0, !dbg !5833
  %29 = load i8*, i8** %buffer.i, align 8, !dbg !5833
  %30 = load i32, i32* %re_index.i, align 4, !dbg !5834
  %shr.i = lshr i32 %30, 3, !dbg !5835
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !5836
  %add.ptr.i = getelementptr inbounds i8, i8* %29, i64 %idx.ext.i, !dbg !5836
  %31 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !5837
  %l.i = bitcast %union.unaligned_32* %31 to i32*, !dbg !5837
  %32 = load i32, i32* %l.i, align 1, !dbg !5837
  store i32 %32, i32* %x.addr.i.i, align 4, !dbg !5838
  %33 = load i32, i32* %x.addr.i.i, align 4, !dbg !5839
  %shl.i.i = shl i32 %33, 8, !dbg !5840
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !5841
  %34 = load i32, i32* %x.addr.i.i, align 4, !dbg !5842
  %shr.i.i = lshr i32 %34, 8, !dbg !5843
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !5844
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !5845
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !5846
  %35 = load i32, i32* %x.addr.i.i, align 4, !dbg !5847
  %shr3.i.i = lshr i32 %35, 16, !dbg !5848
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !5849
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !5850
  %36 = load i32, i32* %x.addr.i.i, align 4, !dbg !5851
  %shr6.i.i = lshr i32 %36, 16, !dbg !5852
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !5853
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !5854
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !5855
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !5856
  %37 = load i32, i32* %re_index.i, align 4, !dbg !5857
  %and.i = and i32 %37, 7, !dbg !5858
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !5859
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !5860
  %38 = load i32, i32* %re_cache.i, align 4, !dbg !5861
  %39 = load i32, i32* %bits.addr.i, align 4, !dbg !5863
  %conv.i = trunc i32 %39 to i8, !dbg !5863
  %call2.i = call i32 @NEG_USR32(i32 %38, i8 signext %conv.i) #6, !dbg !5864
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !5865
  %40 = load i32, i32* %index1.i, align 4, !dbg !5866
  %idxprom.i = zext i32 %40 to i64, !dbg !5867
  %41 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5867
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %41, i64 %idxprom.i, !dbg !5867
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !5867
  %42 = load i16, i16* %arrayidx3.i, align 2, !dbg !5867
  %conv4.i = sext i16 %42 to i32, !dbg !5867
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !5868
  %43 = load i32, i32* %index1.i, align 4, !dbg !5869
  %idxprom5.i = zext i32 %43 to i64, !dbg !5870
  %44 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5870
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %44, i64 %idxprom5.i, !dbg !5870
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !5870
  %45 = load i16, i16* %arrayidx7.i, align 2, !dbg !5870
  %conv8.i = sext i16 %45 to i32, !dbg !5870
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !5871
  %46 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5872
  %cmp.i = icmp sgt i32 %46, 1, !dbg !5873
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !5874

land.lhs.true.i:                                  ; preds = %if.end
  %47 = load i32, i32* %n.i, align 4, !dbg !5875
  %cmp10.i = icmp slt i32 %47, 0, !dbg !5877
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !5878

if.then.i:                                        ; preds = %land.lhs.true.i
  %48 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5879
  %49 = load i32, i32* %re_index.i, align 4, !dbg !5881
  %50 = load i32, i32* %bits.addr.i, align 4, !dbg !5882
  %add.i = add i32 %49, %50, !dbg !5883
  %cmp12.i = icmp ugt i32 %48, %add.i, !dbg !5884
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !5885

cond.true.i:                                      ; preds = %if.then.i
  %51 = load i32, i32* %re_index.i, align 4, !dbg !5886
  %52 = load i32, i32* %bits.addr.i, align 4, !dbg !5888
  %add14.i = add i32 %51, %52, !dbg !5889
  br label %cond.end.i, !dbg !5890

cond.false.i:                                     ; preds = %if.then.i
  %53 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5891
  br label %cond.end.i, !dbg !5893

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %53, %cond.false.i ], !dbg !5894
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !5895
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5896
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %54, i32 0, i32 0, !dbg !5897
  %55 = load i8*, i8** %buffer15.i, align 8, !dbg !5897
  %56 = load i32, i32* %re_index.i, align 4, !dbg !5898
  %shr16.i = lshr i32 %56, 3, !dbg !5899
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !5900
  %add.ptr18.i = getelementptr inbounds i8, i8* %55, i64 %idx.ext17.i, !dbg !5900
  %57 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !5901
  %l19.i = bitcast %union.unaligned_32* %57 to i32*, !dbg !5901
  %58 = load i32, i32* %l19.i, align 1, !dbg !5901
  store i32 %58, i32* %x.addr.i81.i, align 4, !dbg !5902
  %59 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5903
  %shl.i82.i = shl i32 %59, 8, !dbg !5904
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !5905
  %60 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5906
  %shr.i84.i = lshr i32 %60, 8, !dbg !5907
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !5908
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !5909
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !5910
  %61 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5911
  %shr3.i88.i = lshr i32 %61, 16, !dbg !5912
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !5913
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !5914
  %62 = load i32, i32* %x.addr.i81.i, align 4, !dbg !5915
  %shr6.i91.i = lshr i32 %62, 16, !dbg !5916
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !5917
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !5918
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !5919
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !5920
  %63 = load i32, i32* %re_index.i, align 4, !dbg !5921
  %and21.i = and i32 %63, 7, !dbg !5922
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !5923
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !5924
  %64 = load i32, i32* %n.i, align 4, !dbg !5925
  %sub.i = sub nsw i32 0, %64, !dbg !5926
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !5927
  %65 = load i32, i32* %re_cache.i, align 4, !dbg !5928
  %66 = load i32, i32* %nb_bits.i, align 4, !dbg !5929
  %conv23.i = trunc i32 %66 to i8, !dbg !5929
  %call24.i = call i32 @NEG_USR32(i32 %65, i8 signext %conv23.i) #6, !dbg !5930
  %67 = load i32, i32* %code.i, align 4, !dbg !5932
  %add25.i = add i32 %call24.i, %67, !dbg !5933
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !5934
  %68 = load i32, i32* %index1.i, align 4, !dbg !5935
  %idxprom26.i = zext i32 %68 to i64, !dbg !5936
  %69 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5936
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %69, i64 %idxprom26.i, !dbg !5936
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !5936
  %70 = load i16, i16* %arrayidx28.i, align 2, !dbg !5936
  %conv29.i = sext i16 %70 to i32, !dbg !5936
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !5937
  %71 = load i32, i32* %index1.i, align 4, !dbg !5938
  %idxprom30.i = zext i32 %71 to i64, !dbg !5939
  %72 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5939
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %72, i64 %idxprom30.i, !dbg !5939
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !5939
  %73 = load i16, i16* %arrayidx32.i, align 2, !dbg !5939
  %conv33.i = sext i16 %73 to i32, !dbg !5939
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !5940
  %74 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5941
  %cmp34.i = icmp sgt i32 %74, 2, !dbg !5942
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !5943

land.lhs.true36.i:                                ; preds = %cond.end.i
  %75 = load i32, i32* %n.i, align 4, !dbg !5944
  %cmp37.i = icmp slt i32 %75, 0, !dbg !5946
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !5947

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %76 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5948
  %77 = load i32, i32* %re_index.i, align 4, !dbg !5950
  %78 = load i32, i32* %nb_bits.i, align 4, !dbg !5951
  %add40.i = add i32 %77, %78, !dbg !5952
  %cmp41.i = icmp ugt i32 %76, %add40.i, !dbg !5953
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !5954

cond.true43.i:                                    ; preds = %if.then39.i
  %79 = load i32, i32* %re_index.i, align 4, !dbg !5955
  %80 = load i32, i32* %nb_bits.i, align 4, !dbg !5957
  %add44.i = add i32 %79, %80, !dbg !5958
  br label %cond.end46.i, !dbg !5959

cond.false45.i:                                   ; preds = %if.then39.i
  %81 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5960
  br label %cond.end46.i, !dbg !5962

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %81, %cond.false45.i ], !dbg !5963
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !5964
  %82 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5965
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %82, i32 0, i32 0, !dbg !5966
  %83 = load i8*, i8** %buffer48.i, align 8, !dbg !5966
  %84 = load i32, i32* %re_index.i, align 4, !dbg !5967
  %shr49.i = lshr i32 %84, 3, !dbg !5968
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !5969
  %add.ptr51.i = getelementptr inbounds i8, i8* %83, i64 %idx.ext50.i, !dbg !5969
  %85 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !5970
  %l52.i = bitcast %union.unaligned_32* %85 to i32*, !dbg !5970
  %86 = load i32, i32* %l52.i, align 1, !dbg !5970
  store i32 %86, i32* %x.addr.i96.i, align 4, !dbg !5971
  %87 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5972
  %shl.i97.i = shl i32 %87, 8, !dbg !5973
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !5974
  %88 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5975
  %shr.i99.i = lshr i32 %88, 8, !dbg !5976
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !5977
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !5978
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !5979
  %89 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5980
  %shr3.i103.i = lshr i32 %89, 16, !dbg !5981
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !5982
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !5983
  %90 = load i32, i32* %x.addr.i96.i, align 4, !dbg !5984
  %shr6.i106.i = lshr i32 %90, 16, !dbg !5985
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !5986
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !5987
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !5988
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !5989
  %91 = load i32, i32* %re_index.i, align 4, !dbg !5990
  %and54.i = and i32 %91, 7, !dbg !5991
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !5992
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !5993
  %92 = load i32, i32* %n.i, align 4, !dbg !5994
  %sub56.i = sub nsw i32 0, %92, !dbg !5995
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !5996
  %93 = load i32, i32* %re_cache.i, align 4, !dbg !5997
  %94 = load i32, i32* %nb_bits.i, align 4, !dbg !5998
  %conv57.i = trunc i32 %94 to i8, !dbg !5998
  %call58.i = call i32 @NEG_USR32(i32 %93, i8 signext %conv57.i) #6, !dbg !5999
  %95 = load i32, i32* %code.i, align 4, !dbg !6001
  %add59.i = add i32 %call58.i, %95, !dbg !6002
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !6003
  %96 = load i32, i32* %index1.i, align 4, !dbg !6004
  %idxprom60.i = zext i32 %96 to i64, !dbg !6005
  %97 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6005
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %97, i64 %idxprom60.i, !dbg !6005
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !6005
  %98 = load i16, i16* %arrayidx62.i, align 2, !dbg !6005
  %conv63.i = sext i16 %98 to i32, !dbg !6005
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !6006
  %99 = load i32, i32* %index1.i, align 4, !dbg !6007
  %idxprom64.i = zext i32 %99 to i64, !dbg !6008
  %100 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6008
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %100, i64 %idxprom64.i, !dbg !6008
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !6008
  %101 = load i16, i16* %arrayidx66.i, align 2, !dbg !6008
  %conv67.i = sext i16 %101 to i32, !dbg !6008
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !6009
  br label %if.end.i, !dbg !6010

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !6011

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end
  %102 = load i32, i32* %n.i, align 4, !dbg !6013
  %103 = load i32, i32* %re_cache.i, align 4, !dbg !6016
  %shl70.i = shl i32 %103, %102, !dbg !6016
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !6016
  %104 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6017
  %105 = load i32, i32* %re_index.i, align 4, !dbg !6018
  %106 = load i32, i32* %n.i, align 4, !dbg !6019
  %add71.i = add i32 %105, %106, !dbg !6020
  %cmp72.i = icmp ugt i32 %104, %add71.i, !dbg !6021
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !6022

cond.true74.i:                                    ; preds = %if.end68.i
  %107 = load i32, i32* %re_index.i, align 4, !dbg !6023
  %108 = load i32, i32* %n.i, align 4, !dbg !6025
  %add75.i = add i32 %107, %108, !dbg !6026
  br label %get_vlc2.exit, !dbg !6027

cond.false76.i:                                   ; preds = %if.end68.i
  %109 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6028
  br label %get_vlc2.exit, !dbg !6030

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %109, %cond.false76.i ], !dbg !6031
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !6033
  %110 = load i32, i32* %re_index.i, align 4, !dbg !6034
  %111 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6035
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %111, i32 0, i32 2, !dbg !6036
  store i32 %110, i32* %index80.i, align 8, !dbg !6037
  %112 = load i32, i32* %code.i, align 4, !dbg !6038
  %add = add nsw i32 %112, 1, !dbg !6039
  store i32 %add, i32* %current_run, align 4, !dbg !6040
  %113 = load i32, i32* %current_run, align 4, !dbg !6041
  %cmp15 = icmp eq i32 %113, 34, !dbg !6043
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !6044

if.then17:                                        ; preds = %get_vlc2.exit
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6045
  %call18 = call i32 @get_bits(%struct.GetBitContext* %114, i32 12), !dbg !6046
  %115 = load i32, i32* %current_run, align 4, !dbg !6047
  %add19 = add i32 %115, %call18, !dbg !6047
  store i32 %add19, i32* %current_run, align 4, !dbg !6047
  br label %if.end20, !dbg !6048

if.end20:                                         ; preds = %if.then17, %get_vlc2.exit
  %116 = load i32, i32* %current_run, align 4, !dbg !6049
  %117 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6051
  %superblock_count21 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %117, i32 0, i32 25, !dbg !6052
  %118 = load i32, i32* %superblock_count21, align 8, !dbg !6052
  %119 = load i32, i32* %current_superblock, align 4, !dbg !6053
  %sub = sub nsw i32 %118, %119, !dbg !6054
  %cmp22 = icmp sgt i32 %116, %sub, !dbg !6055
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !6056

if.then24:                                        ; preds = %if.end20
  %120 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6057
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %120, i32 0, i32 0, !dbg !6059
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !6059
  %122 = bitcast %struct.AVCodecContext* %121 to i8*, !dbg !6057
  call void (i8*, i32, i8*, ...) @av_log(i8* %122, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.32, i32 0, i32 0)), !dbg !6060
  store i32 -1, i32* %retval, align 4, !dbg !6061
  br label %return, !dbg !6061

if.end25:                                         ; preds = %if.end20
  %123 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6062
  %superblock_coding26 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %123, i32 0, i32 34, !dbg !6063
  %124 = load i8*, i8** %superblock_coding26, align 16, !dbg !6063
  %125 = load i32, i32* %current_superblock, align 4, !dbg !6064
  %idx.ext = sext i32 %125 to i64, !dbg !6065
  %add.ptr = getelementptr inbounds i8, i8* %124, i64 %idx.ext, !dbg !6065
  %126 = load i32, i32* %bit, align 4, !dbg !6066
  %127 = trunc i32 %126 to i8, !dbg !6067
  %128 = load i32, i32* %current_run, align 4, !dbg !6068
  %conv27 = sext i32 %128 to i64, !dbg !6068
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 %127, i64 %conv27, i32 1, i1 false), !dbg !6067
  %129 = load i32, i32* %current_run, align 4, !dbg !6069
  %130 = load i32, i32* %current_superblock, align 4, !dbg !6070
  %add28 = add nsw i32 %130, %129, !dbg !6070
  store i32 %add28, i32* %current_superblock, align 4, !dbg !6070
  %131 = load i32, i32* %bit, align 4, !dbg !6071
  %tobool29 = icmp ne i32 %131, 0, !dbg !6071
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !6073

if.then30:                                        ; preds = %if.end25
  %132 = load i32, i32* %current_run, align 4, !dbg !6074
  %133 = load i32, i32* %num_partial_superblocks, align 4, !dbg !6075
  %add31 = add nsw i32 %133, %132, !dbg !6075
  store i32 %add31, i32* %num_partial_superblocks, align 4, !dbg !6075
  br label %if.end32, !dbg !6076

if.end32:                                         ; preds = %if.then30, %if.end25
  br label %while.cond, !dbg !6077, !llvm.loop !6079

while.end:                                        ; preds = %land.end
  %134 = load i32, i32* %num_partial_superblocks, align 4, !dbg !6080
  %135 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6081
  %superblock_count33 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %135, i32 0, i32 25, !dbg !6082
  %136 = load i32, i32* %superblock_count33, align 8, !dbg !6082
  %cmp34 = icmp slt i32 %134, %136, !dbg !6083
  br i1 %cmp34, label %if.then36, label %if.end91, !dbg !6084

if.then36:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %superblocks_decoded, metadata !6085, metadata !1942), !dbg !6086
  store i32 0, i32* %superblocks_decoded, align 4, !dbg !6086
  store i32 0, i32* %current_superblock, align 4, !dbg !6087
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6088
  %call37 = call i32 @get_bits1(%struct.GetBitContext* %137), !dbg !6089
  %xor38 = xor i32 %call37, 1, !dbg !6090
  store i32 %xor38, i32* %bit, align 4, !dbg !6091
  store i32 0, i32* %current_run, align 4, !dbg !6092
  br label %while.cond39, !dbg !6093

while.cond39:                                     ; preds = %for.end, %if.then36
  %138 = load i32, i32* %superblocks_decoded, align 4, !dbg !6094
  %139 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6096
  %superblock_count40 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %139, i32 0, i32 25, !dbg !6097
  %140 = load i32, i32* %superblock_count40, align 8, !dbg !6097
  %141 = load i32, i32* %num_partial_superblocks, align 4, !dbg !6098
  %sub41 = sub nsw i32 %140, %141, !dbg !6099
  %cmp42 = icmp slt i32 %138, %sub41, !dbg !6100
  br i1 %cmp42, label %land.rhs44, label %land.end48, !dbg !6101

land.rhs44:                                       ; preds = %while.cond39
  %142 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6102
  %call45 = call i32 @get_bits_left(%struct.GetBitContext* %142), !dbg !6103
  %cmp46 = icmp sgt i32 %call45, 0, !dbg !6104
  br label %land.end48

land.end48:                                       ; preds = %land.rhs44, %while.cond39
  %143 = phi i1 [ false, %while.cond39 ], [ %cmp46, %land.rhs44 ]
  br i1 %143, label %while.body49, label %while.end90, !dbg !6105

while.body49:                                     ; preds = %land.end48
  %144 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6107
  %theora50 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %144, i32 0, i32 1, !dbg !6109
  %145 = load i32, i32* %theora50, align 8, !dbg !6109
  %tobool51 = icmp ne i32 %145, 0, !dbg !6107
  br i1 %tobool51, label %land.lhs.true52, label %if.else57, !dbg !6110

land.lhs.true52:                                  ; preds = %while.body49
  %146 = load i32, i32* %current_run, align 4, !dbg !6111
  %cmp53 = icmp eq i32 %146, 4129, !dbg !6113
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !6114

if.then55:                                        ; preds = %land.lhs.true52
  %147 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6115
  %call56 = call i32 @get_bits1(%struct.GetBitContext* %147), !dbg !6116
  store i32 %call56, i32* %bit, align 4, !dbg !6117
  br label %if.end59, !dbg !6118

if.else57:                                        ; preds = %land.lhs.true52, %while.body49
  %148 = load i32, i32* %bit, align 4, !dbg !6119
  %xor58 = xor i32 %148, 1, !dbg !6119
  store i32 %xor58, i32* %bit, align 4, !dbg !6119
  br label %if.end59

if.end59:                                         ; preds = %if.else57, %if.then55
  %149 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6120
  %150 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6121
  %superblock_run_length_vlc60 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %150, i32 0, i32 67, !dbg !6122
  %table61 = getelementptr inbounds %struct.VLC, %struct.VLC* %superblock_run_length_vlc60, i32 0, i32 1, !dbg !6123
  %151 = load [2 x i16]*, [2 x i16]** %table61, align 8, !dbg !6123
  store %struct.GetBitContext* %149, %struct.GetBitContext** %s.addr.i260, align 8, !dbg !6124
  store [2 x i16]* %151, [2 x i16]** %table.addr.i261, align 8, !dbg !6124
  store i32 6, i32* %bits.addr.i262, align 4, !dbg !6124
  store i32 2, i32* %max_depth.addr.i263, align 4, !dbg !6124
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i260, align 8, !dbg !6125
  %index.i271 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %152, i32 0, i32 2, !dbg !6126
  %153 = load i32, i32* %index.i271, align 8, !dbg !6126
  store i32 %153, i32* %re_index.i265, align 4, !dbg !5728
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i260, align 8, !dbg !6127
  %size_in_bits_plus8.i272 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %154, i32 0, i32 4, !dbg !6128
  %155 = load i32, i32* %size_in_bits_plus8.i272, align 8, !dbg !6128
  store i32 %155, i32* %re_size_plus8.i267, align 4, !dbg !5730
  %156 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i260, align 8, !dbg !6129
  %buffer.i273 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %156, i32 0, i32 0, !dbg !6130
  %157 = load i8*, i8** %buffer.i273, align 8, !dbg !6130
  %158 = load i32, i32* %re_index.i265, align 4, !dbg !6131
  %shr.i274 = lshr i32 %158, 3, !dbg !6132
  %idx.ext.i275 = zext i32 %shr.i274 to i64, !dbg !6133
  %add.ptr.i276 = getelementptr inbounds i8, i8* %157, i64 %idx.ext.i275, !dbg !6133
  %159 = bitcast i8* %add.ptr.i276 to %union.unaligned_32*, !dbg !6134
  %l.i277 = bitcast %union.unaligned_32* %159 to i32*, !dbg !6134
  %160 = load i32, i32* %l.i277, align 1, !dbg !6134
  store i32 %160, i32* %x.addr.i.i259, align 4, !dbg !6135
  %161 = load i32, i32* %x.addr.i.i259, align 4, !dbg !6136
  %shl.i.i278 = shl i32 %161, 8, !dbg !6137
  %and.i.i279 = and i32 %shl.i.i278, 65280, !dbg !6138
  %162 = load i32, i32* %x.addr.i.i259, align 4, !dbg !6139
  %shr.i.i280 = lshr i32 %162, 8, !dbg !6140
  %and1.i.i281 = and i32 %shr.i.i280, 255, !dbg !6141
  %or.i.i282 = or i32 %and.i.i279, %and1.i.i281, !dbg !6142
  %shl2.i.i283 = shl i32 %or.i.i282, 16, !dbg !6143
  %163 = load i32, i32* %x.addr.i.i259, align 4, !dbg !6144
  %shr3.i.i284 = lshr i32 %163, 16, !dbg !6145
  %shl4.i.i285 = shl i32 %shr3.i.i284, 8, !dbg !6146
  %and5.i.i286 = and i32 %shl4.i.i285, 65280, !dbg !6147
  %164 = load i32, i32* %x.addr.i.i259, align 4, !dbg !6148
  %shr6.i.i287 = lshr i32 %164, 16, !dbg !6149
  %shr7.i.i288 = lshr i32 %shr6.i.i287, 8, !dbg !6150
  %and8.i.i289 = and i32 %shr7.i.i288, 255, !dbg !6151
  %or9.i.i290 = or i32 %and5.i.i286, %and8.i.i289, !dbg !6152
  %or10.i.i291 = or i32 %shl2.i.i283, %or9.i.i290, !dbg !6153
  %165 = load i32, i32* %re_index.i265, align 4, !dbg !6154
  %and.i292 = and i32 %165, 7, !dbg !6155
  %shl.i293 = shl i32 %or10.i.i291, %and.i292, !dbg !6156
  store i32 %shl.i293, i32* %re_cache.i266, align 4, !dbg !6157
  %166 = load i32, i32* %re_cache.i266, align 4, !dbg !6158
  %167 = load i32, i32* %bits.addr.i262, align 4, !dbg !6159
  %conv.i294 = trunc i32 %167 to i8, !dbg !6159
  %call2.i295 = call i32 @NEG_USR32(i32 %166, i8 signext %conv.i294) #6, !dbg !6160
  store i32 %call2.i295, i32* %index1.i270, align 4, !dbg !6161
  %168 = load i32, i32* %index1.i270, align 4, !dbg !6162
  %idxprom.i296 = zext i32 %168 to i64, !dbg !6163
  %169 = load [2 x i16]*, [2 x i16]** %table.addr.i261, align 8, !dbg !6163
  %arrayidx.i297 = getelementptr inbounds [2 x i16], [2 x i16]* %169, i64 %idxprom.i296, !dbg !6163
  %arrayidx3.i298 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i297, i64 0, i64 0, !dbg !6163
  %170 = load i16, i16* %arrayidx3.i298, align 2, !dbg !6163
  %conv4.i299 = sext i16 %170 to i32, !dbg !6163
  store i32 %conv4.i299, i32* %code.i264, align 4, !dbg !6164
  %171 = load i32, i32* %index1.i270, align 4, !dbg !6165
  %idxprom5.i300 = zext i32 %171 to i64, !dbg !6166
  %172 = load [2 x i16]*, [2 x i16]** %table.addr.i261, align 8, !dbg !6166
  %arrayidx6.i301 = getelementptr inbounds [2 x i16], [2 x i16]* %172, i64 %idxprom5.i300, !dbg !6166
  %arrayidx7.i302 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i301, i64 0, i64 1, !dbg !6166
  %173 = load i16, i16* %arrayidx7.i302, align 2, !dbg !6166
  %conv8.i303 = sext i16 %173 to i32, !dbg !6166
  store i32 %conv8.i303, i32* %n.i268, align 4, !dbg !6167
  %174 = load i32, i32* %max_depth.addr.i263, align 4, !dbg !6168
  %cmp.i304 = icmp sgt i32 %174, 1, !dbg !6169
  br i1 %cmp.i304, label %land.lhs.true.i306, label %if.end68.i393, !dbg !6170

land.lhs.true.i306:                               ; preds = %if.end59
  %175 = load i32, i32* %n.i268, align 4, !dbg !6171
  %cmp10.i305 = icmp slt i32 %175, 0, !dbg !6172
  br i1 %cmp10.i305, label %if.then.i309, label %if.end68.i393, !dbg !6173

if.then.i309:                                     ; preds = %land.lhs.true.i306
  %176 = load i32, i32* %re_size_plus8.i267, align 4, !dbg !6174
  %177 = load i32, i32* %re_index.i265, align 4, !dbg !6175
  %178 = load i32, i32* %bits.addr.i262, align 4, !dbg !6176
  %add.i307 = add i32 %177, %178, !dbg !6177
  %cmp12.i308 = icmp ugt i32 %176, %add.i307, !dbg !6178
  br i1 %cmp12.i308, label %cond.true.i311, label %cond.false.i312, !dbg !6179

cond.true.i311:                                   ; preds = %if.then.i309
  %179 = load i32, i32* %re_index.i265, align 4, !dbg !6180
  %180 = load i32, i32* %bits.addr.i262, align 4, !dbg !6181
  %add14.i310 = add i32 %179, %180, !dbg !6182
  br label %cond.end.i348, !dbg !6183

cond.false.i312:                                  ; preds = %if.then.i309
  %181 = load i32, i32* %re_size_plus8.i267, align 4, !dbg !6184
  br label %cond.end.i348, !dbg !6185

cond.end.i348:                                    ; preds = %cond.false.i312, %cond.true.i311
  %cond.i313 = phi i32 [ %add14.i310, %cond.true.i311 ], [ %181, %cond.false.i312 ], !dbg !6186
  store i32 %cond.i313, i32* %re_index.i265, align 4, !dbg !6187
  %182 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i260, align 8, !dbg !6188
  %buffer15.i314 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %182, i32 0, i32 0, !dbg !6189
  %183 = load i8*, i8** %buffer15.i314, align 8, !dbg !6189
  %184 = load i32, i32* %re_index.i265, align 4, !dbg !6190
  %shr16.i315 = lshr i32 %184, 3, !dbg !6191
  %idx.ext17.i316 = zext i32 %shr16.i315 to i64, !dbg !6192
  %add.ptr18.i317 = getelementptr inbounds i8, i8* %183, i64 %idx.ext17.i316, !dbg !6192
  %185 = bitcast i8* %add.ptr18.i317 to %union.unaligned_32*, !dbg !6193
  %l19.i318 = bitcast %union.unaligned_32* %185 to i32*, !dbg !6193
  %186 = load i32, i32* %l19.i318, align 1, !dbg !6193
  store i32 %186, i32* %x.addr.i81.i258, align 4, !dbg !6194
  %187 = load i32, i32* %x.addr.i81.i258, align 4, !dbg !6195
  %shl.i82.i319 = shl i32 %187, 8, !dbg !6196
  %and.i83.i320 = and i32 %shl.i82.i319, 65280, !dbg !6197
  %188 = load i32, i32* %x.addr.i81.i258, align 4, !dbg !6198
  %shr.i84.i321 = lshr i32 %188, 8, !dbg !6199
  %and1.i85.i322 = and i32 %shr.i84.i321, 255, !dbg !6200
  %or.i86.i323 = or i32 %and.i83.i320, %and1.i85.i322, !dbg !6201
  %shl2.i87.i324 = shl i32 %or.i86.i323, 16, !dbg !6202
  %189 = load i32, i32* %x.addr.i81.i258, align 4, !dbg !6203
  %shr3.i88.i325 = lshr i32 %189, 16, !dbg !6204
  %shl4.i89.i326 = shl i32 %shr3.i88.i325, 8, !dbg !6205
  %and5.i90.i327 = and i32 %shl4.i89.i326, 65280, !dbg !6206
  %190 = load i32, i32* %x.addr.i81.i258, align 4, !dbg !6207
  %shr6.i91.i328 = lshr i32 %190, 16, !dbg !6208
  %shr7.i92.i329 = lshr i32 %shr6.i91.i328, 8, !dbg !6209
  %and8.i93.i330 = and i32 %shr7.i92.i329, 255, !dbg !6210
  %or9.i94.i331 = or i32 %and5.i90.i327, %and8.i93.i330, !dbg !6211
  %or10.i95.i332 = or i32 %shl2.i87.i324, %or9.i94.i331, !dbg !6212
  %191 = load i32, i32* %re_index.i265, align 4, !dbg !6213
  %and21.i333 = and i32 %191, 7, !dbg !6214
  %shl22.i334 = shl i32 %or10.i95.i332, %and21.i333, !dbg !6215
  store i32 %shl22.i334, i32* %re_cache.i266, align 4, !dbg !6216
  %192 = load i32, i32* %n.i268, align 4, !dbg !6217
  %sub.i335 = sub nsw i32 0, %192, !dbg !6218
  store i32 %sub.i335, i32* %nb_bits.i269, align 4, !dbg !6219
  %193 = load i32, i32* %re_cache.i266, align 4, !dbg !6220
  %194 = load i32, i32* %nb_bits.i269, align 4, !dbg !6221
  %conv23.i336 = trunc i32 %194 to i8, !dbg !6221
  %call24.i337 = call i32 @NEG_USR32(i32 %193, i8 signext %conv23.i336) #6, !dbg !6222
  %195 = load i32, i32* %code.i264, align 4, !dbg !6223
  %add25.i338 = add i32 %call24.i337, %195, !dbg !6224
  store i32 %add25.i338, i32* %index1.i270, align 4, !dbg !6225
  %196 = load i32, i32* %index1.i270, align 4, !dbg !6226
  %idxprom26.i339 = zext i32 %196 to i64, !dbg !6227
  %197 = load [2 x i16]*, [2 x i16]** %table.addr.i261, align 8, !dbg !6227
  %arrayidx27.i340 = getelementptr inbounds [2 x i16], [2 x i16]* %197, i64 %idxprom26.i339, !dbg !6227
  %arrayidx28.i341 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i340, i64 0, i64 0, !dbg !6227
  %198 = load i16, i16* %arrayidx28.i341, align 2, !dbg !6227
  %conv29.i342 = sext i16 %198 to i32, !dbg !6227
  store i32 %conv29.i342, i32* %code.i264, align 4, !dbg !6228
  %199 = load i32, i32* %index1.i270, align 4, !dbg !6229
  %idxprom30.i343 = zext i32 %199 to i64, !dbg !6230
  %200 = load [2 x i16]*, [2 x i16]** %table.addr.i261, align 8, !dbg !6230
  %arrayidx31.i344 = getelementptr inbounds [2 x i16], [2 x i16]* %200, i64 %idxprom30.i343, !dbg !6230
  %arrayidx32.i345 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i344, i64 0, i64 1, !dbg !6230
  %201 = load i16, i16* %arrayidx32.i345, align 2, !dbg !6230
  %conv33.i346 = sext i16 %201 to i32, !dbg !6230
  store i32 %conv33.i346, i32* %n.i268, align 4, !dbg !6231
  %202 = load i32, i32* %max_depth.addr.i263, align 4, !dbg !6232
  %cmp34.i347 = icmp sgt i32 %202, 2, !dbg !6233
  br i1 %cmp34.i347, label %land.lhs.true36.i350, label %if.end.i392, !dbg !6234

land.lhs.true36.i350:                             ; preds = %cond.end.i348
  %203 = load i32, i32* %n.i268, align 4, !dbg !6235
  %cmp37.i349 = icmp slt i32 %203, 0, !dbg !6236
  br i1 %cmp37.i349, label %if.then39.i353, label %if.end.i392, !dbg !6237

if.then39.i353:                                   ; preds = %land.lhs.true36.i350
  %204 = load i32, i32* %re_size_plus8.i267, align 4, !dbg !6238
  %205 = load i32, i32* %re_index.i265, align 4, !dbg !6239
  %206 = load i32, i32* %nb_bits.i269, align 4, !dbg !6240
  %add40.i351 = add i32 %205, %206, !dbg !6241
  %cmp41.i352 = icmp ugt i32 %204, %add40.i351, !dbg !6242
  br i1 %cmp41.i352, label %cond.true43.i355, label %cond.false45.i356, !dbg !6243

cond.true43.i355:                                 ; preds = %if.then39.i353
  %207 = load i32, i32* %re_index.i265, align 4, !dbg !6244
  %208 = load i32, i32* %nb_bits.i269, align 4, !dbg !6245
  %add44.i354 = add i32 %207, %208, !dbg !6246
  br label %cond.end46.i391, !dbg !6247

cond.false45.i356:                                ; preds = %if.then39.i353
  %209 = load i32, i32* %re_size_plus8.i267, align 4, !dbg !6248
  br label %cond.end46.i391, !dbg !6249

cond.end46.i391:                                  ; preds = %cond.false45.i356, %cond.true43.i355
  %cond47.i357 = phi i32 [ %add44.i354, %cond.true43.i355 ], [ %209, %cond.false45.i356 ], !dbg !6250
  store i32 %cond47.i357, i32* %re_index.i265, align 4, !dbg !6251
  %210 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i260, align 8, !dbg !6252
  %buffer48.i358 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %210, i32 0, i32 0, !dbg !6253
  %211 = load i8*, i8** %buffer48.i358, align 8, !dbg !6253
  %212 = load i32, i32* %re_index.i265, align 4, !dbg !6254
  %shr49.i359 = lshr i32 %212, 3, !dbg !6255
  %idx.ext50.i360 = zext i32 %shr49.i359 to i64, !dbg !6256
  %add.ptr51.i361 = getelementptr inbounds i8, i8* %211, i64 %idx.ext50.i360, !dbg !6256
  %213 = bitcast i8* %add.ptr51.i361 to %union.unaligned_32*, !dbg !6257
  %l52.i362 = bitcast %union.unaligned_32* %213 to i32*, !dbg !6257
  %214 = load i32, i32* %l52.i362, align 1, !dbg !6257
  store i32 %214, i32* %x.addr.i96.i257, align 4, !dbg !6258
  %215 = load i32, i32* %x.addr.i96.i257, align 4, !dbg !6259
  %shl.i97.i363 = shl i32 %215, 8, !dbg !6260
  %and.i98.i364 = and i32 %shl.i97.i363, 65280, !dbg !6261
  %216 = load i32, i32* %x.addr.i96.i257, align 4, !dbg !6262
  %shr.i99.i365 = lshr i32 %216, 8, !dbg !6263
  %and1.i100.i366 = and i32 %shr.i99.i365, 255, !dbg !6264
  %or.i101.i367 = or i32 %and.i98.i364, %and1.i100.i366, !dbg !6265
  %shl2.i102.i368 = shl i32 %or.i101.i367, 16, !dbg !6266
  %217 = load i32, i32* %x.addr.i96.i257, align 4, !dbg !6267
  %shr3.i103.i369 = lshr i32 %217, 16, !dbg !6268
  %shl4.i104.i370 = shl i32 %shr3.i103.i369, 8, !dbg !6269
  %and5.i105.i371 = and i32 %shl4.i104.i370, 65280, !dbg !6270
  %218 = load i32, i32* %x.addr.i96.i257, align 4, !dbg !6271
  %shr6.i106.i372 = lshr i32 %218, 16, !dbg !6272
  %shr7.i107.i373 = lshr i32 %shr6.i106.i372, 8, !dbg !6273
  %and8.i108.i374 = and i32 %shr7.i107.i373, 255, !dbg !6274
  %or9.i109.i375 = or i32 %and5.i105.i371, %and8.i108.i374, !dbg !6275
  %or10.i110.i376 = or i32 %shl2.i102.i368, %or9.i109.i375, !dbg !6276
  %219 = load i32, i32* %re_index.i265, align 4, !dbg !6277
  %and54.i377 = and i32 %219, 7, !dbg !6278
  %shl55.i378 = shl i32 %or10.i110.i376, %and54.i377, !dbg !6279
  store i32 %shl55.i378, i32* %re_cache.i266, align 4, !dbg !6280
  %220 = load i32, i32* %n.i268, align 4, !dbg !6281
  %sub56.i379 = sub nsw i32 0, %220, !dbg !6282
  store i32 %sub56.i379, i32* %nb_bits.i269, align 4, !dbg !6283
  %221 = load i32, i32* %re_cache.i266, align 4, !dbg !6284
  %222 = load i32, i32* %nb_bits.i269, align 4, !dbg !6285
  %conv57.i380 = trunc i32 %222 to i8, !dbg !6285
  %call58.i381 = call i32 @NEG_USR32(i32 %221, i8 signext %conv57.i380) #6, !dbg !6286
  %223 = load i32, i32* %code.i264, align 4, !dbg !6287
  %add59.i382 = add i32 %call58.i381, %223, !dbg !6288
  store i32 %add59.i382, i32* %index1.i270, align 4, !dbg !6289
  %224 = load i32, i32* %index1.i270, align 4, !dbg !6290
  %idxprom60.i383 = zext i32 %224 to i64, !dbg !6291
  %225 = load [2 x i16]*, [2 x i16]** %table.addr.i261, align 8, !dbg !6291
  %arrayidx61.i384 = getelementptr inbounds [2 x i16], [2 x i16]* %225, i64 %idxprom60.i383, !dbg !6291
  %arrayidx62.i385 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i384, i64 0, i64 0, !dbg !6291
  %226 = load i16, i16* %arrayidx62.i385, align 2, !dbg !6291
  %conv63.i386 = sext i16 %226 to i32, !dbg !6291
  store i32 %conv63.i386, i32* %code.i264, align 4, !dbg !6292
  %227 = load i32, i32* %index1.i270, align 4, !dbg !6293
  %idxprom64.i387 = zext i32 %227 to i64, !dbg !6294
  %228 = load [2 x i16]*, [2 x i16]** %table.addr.i261, align 8, !dbg !6294
  %arrayidx65.i388 = getelementptr inbounds [2 x i16], [2 x i16]* %228, i64 %idxprom64.i387, !dbg !6294
  %arrayidx66.i389 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i388, i64 0, i64 1, !dbg !6294
  %229 = load i16, i16* %arrayidx66.i389, align 2, !dbg !6294
  %conv67.i390 = sext i16 %229 to i32, !dbg !6294
  store i32 %conv67.i390, i32* %n.i268, align 4, !dbg !6295
  br label %if.end.i392, !dbg !6296

if.end.i392:                                      ; preds = %cond.end46.i391, %land.lhs.true36.i350, %cond.end.i348
  br label %if.end68.i393, !dbg !6297

if.end68.i393:                                    ; preds = %if.end.i392, %land.lhs.true.i306, %if.end59
  %230 = load i32, i32* %n.i268, align 4, !dbg !6298
  %231 = load i32, i32* %re_cache.i266, align 4, !dbg !6299
  %shl70.i394 = shl i32 %231, %230, !dbg !6299
  store i32 %shl70.i394, i32* %re_cache.i266, align 4, !dbg !6299
  %232 = load i32, i32* %re_size_plus8.i267, align 4, !dbg !6300
  %233 = load i32, i32* %re_index.i265, align 4, !dbg !6301
  %234 = load i32, i32* %n.i268, align 4, !dbg !6302
  %add71.i395 = add i32 %233, %234, !dbg !6303
  %cmp72.i396 = icmp ugt i32 %232, %add71.i395, !dbg !6304
  br i1 %cmp72.i396, label %cond.true74.i398, label %cond.false76.i399, !dbg !6305

cond.true74.i398:                                 ; preds = %if.end68.i393
  %235 = load i32, i32* %re_index.i265, align 4, !dbg !6306
  %236 = load i32, i32* %n.i268, align 4, !dbg !6307
  %add75.i397 = add i32 %235, %236, !dbg !6308
  br label %get_vlc2.exit402, !dbg !6309

cond.false76.i399:                                ; preds = %if.end68.i393
  %237 = load i32, i32* %re_size_plus8.i267, align 4, !dbg !6310
  br label %get_vlc2.exit402, !dbg !6311

get_vlc2.exit402:                                 ; preds = %cond.true74.i398, %cond.false76.i399
  %cond78.i400 = phi i32 [ %add75.i397, %cond.true74.i398 ], [ %237, %cond.false76.i399 ], !dbg !6312
  store i32 %cond78.i400, i32* %re_index.i265, align 4, !dbg !6313
  %238 = load i32, i32* %re_index.i265, align 4, !dbg !6314
  %239 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i260, align 8, !dbg !6315
  %index80.i401 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %239, i32 0, i32 2, !dbg !6316
  store i32 %238, i32* %index80.i401, align 8, !dbg !6317
  %240 = load i32, i32* %code.i264, align 4, !dbg !6318
  %add63 = add nsw i32 %240, 1, !dbg !6319
  store i32 %add63, i32* %current_run, align 4, !dbg !6320
  %241 = load i32, i32* %current_run, align 4, !dbg !6321
  %cmp64 = icmp eq i32 %241, 34, !dbg !6323
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !6324

if.then66:                                        ; preds = %get_vlc2.exit402
  %242 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6325
  %call67 = call i32 @get_bits(%struct.GetBitContext* %242, i32 12), !dbg !6326
  %243 = load i32, i32* %current_run, align 4, !dbg !6327
  %add68 = add i32 %243, %call67, !dbg !6327
  store i32 %add68, i32* %current_run, align 4, !dbg !6327
  br label %if.end69, !dbg !6328

if.end69:                                         ; preds = %if.then66, %get_vlc2.exit402
  store i32 0, i32* %j, align 4, !dbg !6329
  br label %for.cond, !dbg !6331

for.cond:                                         ; preds = %for.inc, %if.end69
  %244 = load i32, i32* %j, align 4, !dbg !6332
  %245 = load i32, i32* %current_run, align 4, !dbg !6335
  %cmp70 = icmp slt i32 %244, %245, !dbg !6336
  br i1 %cmp70, label %for.body, label %for.end, !dbg !6337

for.body:                                         ; preds = %for.cond
  %246 = load i32, i32* %current_superblock, align 4, !dbg !6338
  %247 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6341
  %superblock_count72 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %247, i32 0, i32 25, !dbg !6342
  %248 = load i32, i32* %superblock_count72, align 8, !dbg !6342
  %cmp73 = icmp sge i32 %246, %248, !dbg !6343
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !6344

if.then75:                                        ; preds = %for.body
  %249 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6345
  %avctx76 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %249, i32 0, i32 0, !dbg !6347
  %250 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx76, align 16, !dbg !6347
  %251 = bitcast %struct.AVCodecContext* %250 to i8*, !dbg !6345
  call void (i8*, i32, i8*, ...) @av_log(i8* %251, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i32 0, i32 0)), !dbg !6348
  store i32 -1, i32* %retval, align 4, !dbg !6349
  br label %return, !dbg !6349

if.end77:                                         ; preds = %for.body
  %252 = load i32, i32* %current_superblock, align 4, !dbg !6350
  %idxprom = sext i32 %252 to i64, !dbg !6352
  %253 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6352
  %superblock_coding78 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %253, i32 0, i32 34, !dbg !6353
  %254 = load i8*, i8** %superblock_coding78, align 16, !dbg !6353
  %arrayidx = getelementptr inbounds i8, i8* %254, i64 %idxprom, !dbg !6352
  %255 = load i8, i8* %arrayidx, align 1, !dbg !6352
  %conv79 = zext i8 %255 to i32, !dbg !6352
  %cmp80 = icmp eq i32 %conv79, 0, !dbg !6354
  br i1 %cmp80, label %if.then82, label %if.end87, !dbg !6355

if.then82:                                        ; preds = %if.end77
  %256 = load i32, i32* %bit, align 4, !dbg !6356
  %mul = mul nsw i32 2, %256, !dbg !6358
  %conv83 = trunc i32 %mul to i8, !dbg !6359
  %257 = load i32, i32* %current_superblock, align 4, !dbg !6360
  %idxprom84 = sext i32 %257 to i64, !dbg !6361
  %258 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6361
  %superblock_coding85 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %258, i32 0, i32 34, !dbg !6362
  %259 = load i8*, i8** %superblock_coding85, align 16, !dbg !6362
  %arrayidx86 = getelementptr inbounds i8, i8* %259, i64 %idxprom84, !dbg !6361
  store i8 %conv83, i8* %arrayidx86, align 1, !dbg !6363
  %260 = load i32, i32* %j, align 4, !dbg !6364
  %inc = add nsw i32 %260, 1, !dbg !6364
  store i32 %inc, i32* %j, align 4, !dbg !6364
  br label %if.end87, !dbg !6365

if.end87:                                         ; preds = %if.then82, %if.end77
  br label %for.inc, !dbg !6366

for.inc:                                          ; preds = %if.end87
  %261 = load i32, i32* %current_superblock, align 4, !dbg !6367
  %inc88 = add nsw i32 %261, 1, !dbg !6367
  store i32 %inc88, i32* %current_superblock, align 4, !dbg !6367
  br label %for.cond, !dbg !6369, !llvm.loop !6370

for.end:                                          ; preds = %for.cond
  %262 = load i32, i32* %current_run, align 4, !dbg !6372
  %263 = load i32, i32* %superblocks_decoded, align 4, !dbg !6373
  %add89 = add nsw i32 %263, %262, !dbg !6373
  store i32 %add89, i32* %superblocks_decoded, align 4, !dbg !6373
  br label %while.cond39, !dbg !6374, !llvm.loop !6376

while.end90:                                      ; preds = %land.end48
  br label %if.end91, !dbg !6377

if.end91:                                         ; preds = %while.end90, %while.end
  %264 = load i32, i32* %num_partial_superblocks, align 4, !dbg !6378
  %tobool92 = icmp ne i32 %264, 0, !dbg !6378
  br i1 %tobool92, label %if.then93, label %if.end96, !dbg !6380

if.then93:                                        ; preds = %if.end91
  store i32 0, i32* %current_run, align 4, !dbg !6381
  %265 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6383
  %call94 = call i32 @get_bits1(%struct.GetBitContext* %265), !dbg !6384
  store i32 %call94, i32* %bit, align 4, !dbg !6385
  %266 = load i32, i32* %bit, align 4, !dbg !6386
  %xor95 = xor i32 %266, 1, !dbg !6386
  store i32 %xor95, i32* %bit, align 4, !dbg !6386
  br label %if.end96, !dbg !6387

if.end96:                                         ; preds = %if.then93, %if.end91
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then
  %267 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6388
  %total_num_coded_frags = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %267, i32 0, i32 57, !dbg !6389
  store i32 0, i32* %total_num_coded_frags, align 16, !dbg !6390
  %268 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6391
  %macroblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %268, i32 0, i32 73, !dbg !6392
  %269 = load i8*, i8** %macroblock_coding, align 8, !dbg !6392
  %270 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6393
  %macroblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %270, i32 0, i32 35, !dbg !6394
  %271 = load i32, i32* %macroblock_count, align 8, !dbg !6394
  %conv98 = sext i32 %271 to i64, !dbg !6393
  call void @llvm.memset.p0i8.i64(i8* %269, i8 8, i64 %conv98, i32 1, i1 false), !dbg !6395
  %272 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6396
  %keyframe99 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %272, i32 0, i32 12, !dbg !6397
  %273 = load i32, i32* %keyframe99, align 8, !dbg !6397
  %tobool100 = icmp ne i32 %273, 0, !dbg !6396
  br i1 %tobool100, label %cond.true, label %cond.false, !dbg !6396

cond.true:                                        ; preds = %if.end97
  %274 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6398
  %kf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %274, i32 0, i32 59, !dbg !6400
  %275 = load i32*, i32** %kf_coded_fragment_list, align 16, !dbg !6400
  br label %cond.end, !dbg !6401

cond.false:                                       ; preds = %if.end97
  %276 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6402
  %nkf_coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %276, i32 0, i32 60, !dbg !6403
  %277 = load i32*, i32** %nkf_coded_fragment_list, align 8, !dbg !6403
  br label %cond.end, !dbg !6404

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %275, %cond.true ], [ %277, %cond.false ], !dbg !6406
  %278 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6408
  %coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %278, i32 0, i32 58, !dbg !6409
  %arrayidx101 = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list, i64 0, i64 0, !dbg !6408
  store i32* %cond, i32** %arrayidx101, align 8, !dbg !6410
  store i32 0, i32* %plane, align 4, !dbg !6411
  br label %for.cond102, !dbg !6412

for.cond102:                                      ; preds = %for.inc254, %cond.end
  %279 = load i32, i32* %plane, align 4, !dbg !6413
  %cmp103 = icmp slt i32 %279, 3, !dbg !6415
  br i1 %cmp103, label %for.body105, label %for.end256, !dbg !6416

for.body105:                                      ; preds = %for.cond102
  call void @llvm.dbg.declare(metadata i32* %sb_start, metadata !6417, metadata !1942), !dbg !6418
  %280 = load i32, i32* %plane, align 4, !dbg !6419
  %idxprom106 = sext i32 %280 to i64, !dbg !6420
  %arrayidx107 = getelementptr inbounds [3 x i32], [3 x i32]* %superblock_starts, i64 0, i64 %idxprom106, !dbg !6420
  %281 = load i32, i32* %arrayidx107, align 4, !dbg !6420
  store i32 %281, i32* %sb_start, align 4, !dbg !6418
  call void @llvm.dbg.declare(metadata i32* %sb_end, metadata !6421, metadata !1942), !dbg !6422
  %282 = load i32, i32* %sb_start, align 4, !dbg !6423
  %283 = load i32, i32* %plane, align 4, !dbg !6424
  %tobool108 = icmp ne i32 %283, 0, !dbg !6424
  br i1 %tobool108, label %cond.true109, label %cond.false110, !dbg !6424

cond.true109:                                     ; preds = %for.body105
  %284 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6425
  %c_superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %284, i32 0, i32 31, !dbg !6427
  %285 = load i32, i32* %c_superblock_count, align 16, !dbg !6427
  br label %cond.end111, !dbg !6428

cond.false110:                                    ; preds = %for.body105
  %286 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6429
  %y_superblock_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %286, i32 0, i32 28, !dbg !6430
  %287 = load i32, i32* %y_superblock_count, align 4, !dbg !6430
  br label %cond.end111, !dbg !6431

cond.end111:                                      ; preds = %cond.false110, %cond.true109
  %cond112 = phi i32 [ %285, %cond.true109 ], [ %287, %cond.false110 ], !dbg !6433
  %add113 = add nsw i32 %282, %cond112, !dbg !6435
  store i32 %add113, i32* %sb_end, align 4, !dbg !6436
  call void @llvm.dbg.declare(metadata i32* %num_coded_frags, metadata !6437, metadata !1942), !dbg !6438
  store i32 0, i32* %num_coded_frags, align 4, !dbg !6438
  %288 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6439
  %keyframe114 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %288, i32 0, i32 12, !dbg !6440
  %289 = load i32, i32* %keyframe114, align 8, !dbg !6440
  %tobool115 = icmp ne i32 %289, 0, !dbg !6439
  br i1 %tobool115, label %if.then116, label %if.else158, !dbg !6441

if.then116:                                       ; preds = %cond.end111
  %290 = load i32, i32* %plane, align 4, !dbg !6442
  %idxprom117 = sext i32 %290 to i64, !dbg !6445
  %291 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6445
  %num_kf_coded_fragment = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %291, i32 0, i32 61, !dbg !6446
  %arrayidx118 = getelementptr inbounds [3 x i32], [3 x i32]* %num_kf_coded_fragment, i64 0, i64 %idxprom117, !dbg !6445
  %292 = load i32, i32* %arrayidx118, align 4, !dbg !6445
  %cmp119 = icmp eq i32 %292, -1, !dbg !6447
  br i1 %cmp119, label %if.then121, label %if.else153, !dbg !6448

if.then121:                                       ; preds = %if.then116
  %293 = load i32, i32* %sb_start, align 4, !dbg !6449
  store i32 %293, i32* %i, align 4, !dbg !6452
  br label %for.cond122, !dbg !6453

for.cond122:                                      ; preds = %for.inc147, %if.then121
  %294 = load i32, i32* %i, align 4, !dbg !6454
  %295 = load i32, i32* %sb_end, align 4, !dbg !6457
  %cmp123 = icmp slt i32 %294, %295, !dbg !6458
  br i1 %cmp123, label %for.body125, label %for.end149, !dbg !6459

for.body125:                                      ; preds = %for.cond122
  store i32 0, i32* %j, align 4, !dbg !6460
  br label %for.cond126, !dbg !6463

for.cond126:                                      ; preds = %for.inc144, %for.body125
  %296 = load i32, i32* %j, align 4, !dbg !6464
  %cmp127 = icmp slt i32 %296, 16, !dbg !6467
  br i1 %cmp127, label %for.body129, label %for.end146, !dbg !6468

for.body129:                                      ; preds = %for.cond126
  %297 = load i32, i32* %i, align 4, !dbg !6469
  %mul130 = mul nsw i32 %297, 16, !dbg !6471
  %298 = load i32, i32* %j, align 4, !dbg !6472
  %add131 = add nsw i32 %mul130, %298, !dbg !6473
  %idxprom132 = sext i32 %add131 to i64, !dbg !6474
  %299 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6474
  %superblock_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %299, i32 0, i32 72, !dbg !6475
  %300 = load i32*, i32** %superblock_fragments, align 16, !dbg !6475
  %arrayidx133 = getelementptr inbounds i32, i32* %300, i64 %idxprom132, !dbg !6474
  %301 = load i32, i32* %arrayidx133, align 4, !dbg !6474
  store i32 %301, i32* %current_fragment, align 4, !dbg !6476
  %302 = load i32, i32* %current_fragment, align 4, !dbg !6477
  %cmp134 = icmp ne i32 %302, -1, !dbg !6479
  br i1 %cmp134, label %if.then136, label %if.end143, !dbg !6480

if.then136:                                       ; preds = %for.body129
  %303 = load i32, i32* %current_fragment, align 4, !dbg !6481
  %304 = load i32, i32* %num_coded_frags, align 4, !dbg !6483
  %inc137 = add nsw i32 %304, 1, !dbg !6483
  store i32 %inc137, i32* %num_coded_frags, align 4, !dbg !6483
  %idxprom138 = sext i32 %304 to i64, !dbg !6484
  %305 = load i32, i32* %plane, align 4, !dbg !6485
  %idxprom139 = sext i32 %305 to i64, !dbg !6484
  %306 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6484
  %coded_fragment_list140 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %306, i32 0, i32 58, !dbg !6486
  %arrayidx141 = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list140, i64 0, i64 %idxprom139, !dbg !6484
  %307 = load i32*, i32** %arrayidx141, align 8, !dbg !6484
  %arrayidx142 = getelementptr inbounds i32, i32* %307, i64 %idxprom138, !dbg !6484
  store i32 %303, i32* %arrayidx142, align 4, !dbg !6487
  br label %if.end143, !dbg !6488

if.end143:                                        ; preds = %if.then136, %for.body129
  br label %for.inc144, !dbg !6489

for.inc144:                                       ; preds = %if.end143
  %308 = load i32, i32* %j, align 4, !dbg !6490
  %inc145 = add nsw i32 %308, 1, !dbg !6490
  store i32 %inc145, i32* %j, align 4, !dbg !6490
  br label %for.cond126, !dbg !6492, !llvm.loop !6493

for.end146:                                       ; preds = %for.cond126
  br label %for.inc147, !dbg !6495

for.inc147:                                       ; preds = %for.end146
  %309 = load i32, i32* %i, align 4, !dbg !6496
  %inc148 = add nsw i32 %309, 1, !dbg !6496
  store i32 %inc148, i32* %i, align 4, !dbg !6496
  br label %for.cond122, !dbg !6498, !llvm.loop !6499

for.end149:                                       ; preds = %for.cond122
  %310 = load i32, i32* %num_coded_frags, align 4, !dbg !6501
  %311 = load i32, i32* %plane, align 4, !dbg !6502
  %idxprom150 = sext i32 %311 to i64, !dbg !6503
  %312 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6503
  %num_kf_coded_fragment151 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %312, i32 0, i32 61, !dbg !6504
  %arrayidx152 = getelementptr inbounds [3 x i32], [3 x i32]* %num_kf_coded_fragment151, i64 0, i64 %idxprom150, !dbg !6503
  store i32 %310, i32* %arrayidx152, align 4, !dbg !6505
  br label %if.end157, !dbg !6506

if.else153:                                       ; preds = %if.then116
  %313 = load i32, i32* %plane, align 4, !dbg !6507
  %idxprom154 = sext i32 %313 to i64, !dbg !6508
  %314 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6508
  %num_kf_coded_fragment155 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %314, i32 0, i32 61, !dbg !6509
  %arrayidx156 = getelementptr inbounds [3 x i32], [3 x i32]* %num_kf_coded_fragment155, i64 0, i64 %idxprom154, !dbg !6508
  %315 = load i32, i32* %arrayidx156, align 4, !dbg !6508
  store i32 %315, i32* %num_coded_frags, align 4, !dbg !6510
  br label %if.end157

if.end157:                                        ; preds = %if.else153, %for.end149
  br label %if.end223, !dbg !6511

if.else158:                                       ; preds = %cond.end111
  %316 = load i32, i32* %sb_start, align 4, !dbg !6512
  store i32 %316, i32* %i, align 4, !dbg !6513
  br label %for.cond159, !dbg !6514

for.cond159:                                      ; preds = %for.inc220, %if.else158
  %317 = load i32, i32* %i, align 4, !dbg !6515
  %318 = load i32, i32* %sb_end, align 4, !dbg !6517
  %cmp160 = icmp slt i32 %317, %318, !dbg !6518
  br i1 %cmp160, label %land.rhs162, label %land.end166, !dbg !6519

land.rhs162:                                      ; preds = %for.cond159
  %319 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6520
  %call163 = call i32 @get_bits_left(%struct.GetBitContext* %319), !dbg !6522
  %cmp164 = icmp sgt i32 %call163, 0, !dbg !6523
  br label %land.end166

land.end166:                                      ; preds = %land.rhs162, %for.cond159
  %320 = phi i1 [ false, %for.cond159 ], [ %cmp164, %land.rhs162 ]
  br i1 %320, label %for.body167, label %for.end222, !dbg !6524

for.body167:                                      ; preds = %land.end166
  %321 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6526
  %call168 = call i32 @get_bits_left(%struct.GetBitContext* %321), !dbg !6528
  %322 = load i32, i32* %plane0_num_coded_frags, align 4, !dbg !6529
  %shr = ashr i32 %322, 2, !dbg !6530
  %cmp169 = icmp slt i32 %call168, %shr, !dbg !6531
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !6532

if.then171:                                       ; preds = %for.body167
  store i32 -1094995529, i32* %retval, align 4, !dbg !6533
  br label %return, !dbg !6533

if.end172:                                        ; preds = %for.body167
  store i32 0, i32* %j, align 4, !dbg !6535
  br label %for.cond173, !dbg !6536

for.cond173:                                      ; preds = %for.inc217, %if.end172
  %323 = load i32, i32* %j, align 4, !dbg !6537
  %cmp174 = icmp slt i32 %323, 16, !dbg !6539
  br i1 %cmp174, label %for.body176, label %for.end219, !dbg !6540

for.body176:                                      ; preds = %for.cond173
  %324 = load i32, i32* %i, align 4, !dbg !6541
  %mul177 = mul nsw i32 %324, 16, !dbg !6542
  %325 = load i32, i32* %j, align 4, !dbg !6543
  %add178 = add nsw i32 %mul177, %325, !dbg !6544
  %idxprom179 = sext i32 %add178 to i64, !dbg !6545
  %326 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6545
  %superblock_fragments180 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %326, i32 0, i32 72, !dbg !6546
  %327 = load i32*, i32** %superblock_fragments180, align 16, !dbg !6546
  %arrayidx181 = getelementptr inbounds i32, i32* %327, i64 %idxprom179, !dbg !6545
  %328 = load i32, i32* %arrayidx181, align 4, !dbg !6545
  store i32 %328, i32* %current_fragment, align 4, !dbg !6547
  %329 = load i32, i32* %current_fragment, align 4, !dbg !6548
  %cmp182 = icmp ne i32 %329, -1, !dbg !6549
  br i1 %cmp182, label %if.then184, label %if.end216, !dbg !6550

if.then184:                                       ; preds = %for.body176
  call void @llvm.dbg.declare(metadata i32* %coded, metadata !6551, metadata !1942), !dbg !6552
  %330 = load i32, i32* %i, align 4, !dbg !6553
  %idxprom185 = sext i32 %330 to i64, !dbg !6554
  %331 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6554
  %superblock_coding186 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %331, i32 0, i32 34, !dbg !6555
  %332 = load i8*, i8** %superblock_coding186, align 16, !dbg !6555
  %arrayidx187 = getelementptr inbounds i8, i8* %332, i64 %idxprom185, !dbg !6554
  %333 = load i8, i8* %arrayidx187, align 1, !dbg !6554
  %conv188 = zext i8 %333 to i32, !dbg !6554
  store i32 %conv188, i32* %coded, align 4, !dbg !6552
  %334 = load i32, i32* %coded, align 4, !dbg !6556
  %cmp189 = icmp eq i32 %334, 1, !dbg !6557
  br i1 %cmp189, label %if.then191, label %if.end199, !dbg !6558

if.then191:                                       ; preds = %if.then184
  %335 = load i32, i32* %current_run, align 4, !dbg !6559
  %dec = add nsw i32 %335, -1, !dbg !6559
  store i32 %dec, i32* %current_run, align 4, !dbg !6559
  %cmp192 = icmp eq i32 %335, 0, !dbg !6560
  br i1 %cmp192, label %if.then194, label %if.end198, !dbg !6561

if.then194:                                       ; preds = %if.then191
  %336 = load i32, i32* %bit, align 4, !dbg !6562
  %xor195 = xor i32 %336, 1, !dbg !6562
  store i32 %xor195, i32* %bit, align 4, !dbg !6562
  %337 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6563
  %338 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6564
  %fragment_run_length_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %338, i32 0, i32 68, !dbg !6565
  %table196 = getelementptr inbounds %struct.VLC, %struct.VLC* %fragment_run_length_vlc, i32 0, i32 1, !dbg !6566
  %339 = load [2 x i16]*, [2 x i16]** %table196, align 8, !dbg !6566
  store %struct.GetBitContext* %337, %struct.GetBitContext** %s.addr.i406, align 8, !dbg !6567
  store [2 x i16]* %339, [2 x i16]** %table.addr.i407, align 8, !dbg !6567
  store i32 5, i32* %bits.addr.i408, align 4, !dbg !6567
  store i32 2, i32* %max_depth.addr.i409, align 4, !dbg !6567
  %340 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i406, align 8, !dbg !6568
  %index.i417 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %340, i32 0, i32 2, !dbg !6569
  %341 = load i32, i32* %index.i417, align 8, !dbg !6569
  store i32 %341, i32* %re_index.i411, align 4, !dbg !5700
  %342 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i406, align 8, !dbg !6570
  %size_in_bits_plus8.i418 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %342, i32 0, i32 4, !dbg !6571
  %343 = load i32, i32* %size_in_bits_plus8.i418, align 8, !dbg !6571
  store i32 %343, i32* %re_size_plus8.i413, align 4, !dbg !5704
  %344 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i406, align 8, !dbg !6572
  %buffer.i419 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %344, i32 0, i32 0, !dbg !6573
  %345 = load i8*, i8** %buffer.i419, align 8, !dbg !6573
  %346 = load i32, i32* %re_index.i411, align 4, !dbg !6574
  %shr.i420 = lshr i32 %346, 3, !dbg !6575
  %idx.ext.i421 = zext i32 %shr.i420 to i64, !dbg !6576
  %add.ptr.i422 = getelementptr inbounds i8, i8* %345, i64 %idx.ext.i421, !dbg !6576
  %347 = bitcast i8* %add.ptr.i422 to %union.unaligned_32*, !dbg !6577
  %l.i423 = bitcast %union.unaligned_32* %347 to i32*, !dbg !6577
  %348 = load i32, i32* %l.i423, align 1, !dbg !6577
  store i32 %348, i32* %x.addr.i.i405, align 4, !dbg !6578
  %349 = load i32, i32* %x.addr.i.i405, align 4, !dbg !6579
  %shl.i.i424 = shl i32 %349, 8, !dbg !6580
  %and.i.i425 = and i32 %shl.i.i424, 65280, !dbg !6581
  %350 = load i32, i32* %x.addr.i.i405, align 4, !dbg !6582
  %shr.i.i426 = lshr i32 %350, 8, !dbg !6583
  %and1.i.i427 = and i32 %shr.i.i426, 255, !dbg !6584
  %or.i.i428 = or i32 %and.i.i425, %and1.i.i427, !dbg !6585
  %shl2.i.i429 = shl i32 %or.i.i428, 16, !dbg !6586
  %351 = load i32, i32* %x.addr.i.i405, align 4, !dbg !6587
  %shr3.i.i430 = lshr i32 %351, 16, !dbg !6588
  %shl4.i.i431 = shl i32 %shr3.i.i430, 8, !dbg !6589
  %and5.i.i432 = and i32 %shl4.i.i431, 65280, !dbg !6590
  %352 = load i32, i32* %x.addr.i.i405, align 4, !dbg !6591
  %shr6.i.i433 = lshr i32 %352, 16, !dbg !6592
  %shr7.i.i434 = lshr i32 %shr6.i.i433, 8, !dbg !6593
  %and8.i.i435 = and i32 %shr7.i.i434, 255, !dbg !6594
  %or9.i.i436 = or i32 %and5.i.i432, %and8.i.i435, !dbg !6595
  %or10.i.i437 = or i32 %shl2.i.i429, %or9.i.i436, !dbg !6596
  %353 = load i32, i32* %re_index.i411, align 4, !dbg !6597
  %and.i438 = and i32 %353, 7, !dbg !6598
  %shl.i439 = shl i32 %or10.i.i437, %and.i438, !dbg !6599
  store i32 %shl.i439, i32* %re_cache.i412, align 4, !dbg !6600
  %354 = load i32, i32* %re_cache.i412, align 4, !dbg !6601
  %355 = load i32, i32* %bits.addr.i408, align 4, !dbg !6602
  %conv.i440 = trunc i32 %355 to i8, !dbg !6602
  %call2.i441 = call i32 @NEG_USR32(i32 %354, i8 signext %conv.i440) #6, !dbg !6603
  store i32 %call2.i441, i32* %index1.i416, align 4, !dbg !6604
  %356 = load i32, i32* %index1.i416, align 4, !dbg !6605
  %idxprom.i442 = zext i32 %356 to i64, !dbg !6606
  %357 = load [2 x i16]*, [2 x i16]** %table.addr.i407, align 8, !dbg !6606
  %arrayidx.i443 = getelementptr inbounds [2 x i16], [2 x i16]* %357, i64 %idxprom.i442, !dbg !6606
  %arrayidx3.i444 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i443, i64 0, i64 0, !dbg !6606
  %358 = load i16, i16* %arrayidx3.i444, align 2, !dbg !6606
  %conv4.i445 = sext i16 %358 to i32, !dbg !6606
  store i32 %conv4.i445, i32* %code.i410, align 4, !dbg !6607
  %359 = load i32, i32* %index1.i416, align 4, !dbg !6608
  %idxprom5.i446 = zext i32 %359 to i64, !dbg !6609
  %360 = load [2 x i16]*, [2 x i16]** %table.addr.i407, align 8, !dbg !6609
  %arrayidx6.i447 = getelementptr inbounds [2 x i16], [2 x i16]* %360, i64 %idxprom5.i446, !dbg !6609
  %arrayidx7.i448 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i447, i64 0, i64 1, !dbg !6609
  %361 = load i16, i16* %arrayidx7.i448, align 2, !dbg !6609
  %conv8.i449 = sext i16 %361 to i32, !dbg !6609
  store i32 %conv8.i449, i32* %n.i414, align 4, !dbg !6610
  %362 = load i32, i32* %max_depth.addr.i409, align 4, !dbg !6611
  %cmp.i450 = icmp sgt i32 %362, 1, !dbg !6612
  br i1 %cmp.i450, label %land.lhs.true.i452, label %if.end68.i539, !dbg !6613

land.lhs.true.i452:                               ; preds = %if.then194
  %363 = load i32, i32* %n.i414, align 4, !dbg !6614
  %cmp10.i451 = icmp slt i32 %363, 0, !dbg !6615
  br i1 %cmp10.i451, label %if.then.i455, label %if.end68.i539, !dbg !6616

if.then.i455:                                     ; preds = %land.lhs.true.i452
  %364 = load i32, i32* %re_size_plus8.i413, align 4, !dbg !6617
  %365 = load i32, i32* %re_index.i411, align 4, !dbg !6618
  %366 = load i32, i32* %bits.addr.i408, align 4, !dbg !6619
  %add.i453 = add i32 %365, %366, !dbg !6620
  %cmp12.i454 = icmp ugt i32 %364, %add.i453, !dbg !6621
  br i1 %cmp12.i454, label %cond.true.i457, label %cond.false.i458, !dbg !6622

cond.true.i457:                                   ; preds = %if.then.i455
  %367 = load i32, i32* %re_index.i411, align 4, !dbg !6623
  %368 = load i32, i32* %bits.addr.i408, align 4, !dbg !6624
  %add14.i456 = add i32 %367, %368, !dbg !6625
  br label %cond.end.i494, !dbg !6626

cond.false.i458:                                  ; preds = %if.then.i455
  %369 = load i32, i32* %re_size_plus8.i413, align 4, !dbg !6627
  br label %cond.end.i494, !dbg !6628

cond.end.i494:                                    ; preds = %cond.false.i458, %cond.true.i457
  %cond.i459 = phi i32 [ %add14.i456, %cond.true.i457 ], [ %369, %cond.false.i458 ], !dbg !6629
  store i32 %cond.i459, i32* %re_index.i411, align 4, !dbg !6630
  %370 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i406, align 8, !dbg !6631
  %buffer15.i460 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %370, i32 0, i32 0, !dbg !6632
  %371 = load i8*, i8** %buffer15.i460, align 8, !dbg !6632
  %372 = load i32, i32* %re_index.i411, align 4, !dbg !6633
  %shr16.i461 = lshr i32 %372, 3, !dbg !6634
  %idx.ext17.i462 = zext i32 %shr16.i461 to i64, !dbg !6635
  %add.ptr18.i463 = getelementptr inbounds i8, i8* %371, i64 %idx.ext17.i462, !dbg !6635
  %373 = bitcast i8* %add.ptr18.i463 to %union.unaligned_32*, !dbg !6636
  %l19.i464 = bitcast %union.unaligned_32* %373 to i32*, !dbg !6636
  %374 = load i32, i32* %l19.i464, align 1, !dbg !6636
  store i32 %374, i32* %x.addr.i81.i404, align 4, !dbg !6637
  %375 = load i32, i32* %x.addr.i81.i404, align 4, !dbg !6638
  %shl.i82.i465 = shl i32 %375, 8, !dbg !6639
  %and.i83.i466 = and i32 %shl.i82.i465, 65280, !dbg !6640
  %376 = load i32, i32* %x.addr.i81.i404, align 4, !dbg !6641
  %shr.i84.i467 = lshr i32 %376, 8, !dbg !6642
  %and1.i85.i468 = and i32 %shr.i84.i467, 255, !dbg !6643
  %or.i86.i469 = or i32 %and.i83.i466, %and1.i85.i468, !dbg !6644
  %shl2.i87.i470 = shl i32 %or.i86.i469, 16, !dbg !6645
  %377 = load i32, i32* %x.addr.i81.i404, align 4, !dbg !6646
  %shr3.i88.i471 = lshr i32 %377, 16, !dbg !6647
  %shl4.i89.i472 = shl i32 %shr3.i88.i471, 8, !dbg !6648
  %and5.i90.i473 = and i32 %shl4.i89.i472, 65280, !dbg !6649
  %378 = load i32, i32* %x.addr.i81.i404, align 4, !dbg !6650
  %shr6.i91.i474 = lshr i32 %378, 16, !dbg !6651
  %shr7.i92.i475 = lshr i32 %shr6.i91.i474, 8, !dbg !6652
  %and8.i93.i476 = and i32 %shr7.i92.i475, 255, !dbg !6653
  %or9.i94.i477 = or i32 %and5.i90.i473, %and8.i93.i476, !dbg !6654
  %or10.i95.i478 = or i32 %shl2.i87.i470, %or9.i94.i477, !dbg !6655
  %379 = load i32, i32* %re_index.i411, align 4, !dbg !6656
  %and21.i479 = and i32 %379, 7, !dbg !6657
  %shl22.i480 = shl i32 %or10.i95.i478, %and21.i479, !dbg !6658
  store i32 %shl22.i480, i32* %re_cache.i412, align 4, !dbg !6659
  %380 = load i32, i32* %n.i414, align 4, !dbg !6660
  %sub.i481 = sub nsw i32 0, %380, !dbg !6661
  store i32 %sub.i481, i32* %nb_bits.i415, align 4, !dbg !6662
  %381 = load i32, i32* %re_cache.i412, align 4, !dbg !6663
  %382 = load i32, i32* %nb_bits.i415, align 4, !dbg !6664
  %conv23.i482 = trunc i32 %382 to i8, !dbg !6664
  %call24.i483 = call i32 @NEG_USR32(i32 %381, i8 signext %conv23.i482) #6, !dbg !6665
  %383 = load i32, i32* %code.i410, align 4, !dbg !6666
  %add25.i484 = add i32 %call24.i483, %383, !dbg !6667
  store i32 %add25.i484, i32* %index1.i416, align 4, !dbg !6668
  %384 = load i32, i32* %index1.i416, align 4, !dbg !6669
  %idxprom26.i485 = zext i32 %384 to i64, !dbg !6670
  %385 = load [2 x i16]*, [2 x i16]** %table.addr.i407, align 8, !dbg !6670
  %arrayidx27.i486 = getelementptr inbounds [2 x i16], [2 x i16]* %385, i64 %idxprom26.i485, !dbg !6670
  %arrayidx28.i487 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i486, i64 0, i64 0, !dbg !6670
  %386 = load i16, i16* %arrayidx28.i487, align 2, !dbg !6670
  %conv29.i488 = sext i16 %386 to i32, !dbg !6670
  store i32 %conv29.i488, i32* %code.i410, align 4, !dbg !6671
  %387 = load i32, i32* %index1.i416, align 4, !dbg !6672
  %idxprom30.i489 = zext i32 %387 to i64, !dbg !6673
  %388 = load [2 x i16]*, [2 x i16]** %table.addr.i407, align 8, !dbg !6673
  %arrayidx31.i490 = getelementptr inbounds [2 x i16], [2 x i16]* %388, i64 %idxprom30.i489, !dbg !6673
  %arrayidx32.i491 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i490, i64 0, i64 1, !dbg !6673
  %389 = load i16, i16* %arrayidx32.i491, align 2, !dbg !6673
  %conv33.i492 = sext i16 %389 to i32, !dbg !6673
  store i32 %conv33.i492, i32* %n.i414, align 4, !dbg !6674
  %390 = load i32, i32* %max_depth.addr.i409, align 4, !dbg !6675
  %cmp34.i493 = icmp sgt i32 %390, 2, !dbg !6676
  br i1 %cmp34.i493, label %land.lhs.true36.i496, label %if.end.i538, !dbg !6677

land.lhs.true36.i496:                             ; preds = %cond.end.i494
  %391 = load i32, i32* %n.i414, align 4, !dbg !6678
  %cmp37.i495 = icmp slt i32 %391, 0, !dbg !6679
  br i1 %cmp37.i495, label %if.then39.i499, label %if.end.i538, !dbg !6680

if.then39.i499:                                   ; preds = %land.lhs.true36.i496
  %392 = load i32, i32* %re_size_plus8.i413, align 4, !dbg !6681
  %393 = load i32, i32* %re_index.i411, align 4, !dbg !6682
  %394 = load i32, i32* %nb_bits.i415, align 4, !dbg !6683
  %add40.i497 = add i32 %393, %394, !dbg !6684
  %cmp41.i498 = icmp ugt i32 %392, %add40.i497, !dbg !6685
  br i1 %cmp41.i498, label %cond.true43.i501, label %cond.false45.i502, !dbg !6686

cond.true43.i501:                                 ; preds = %if.then39.i499
  %395 = load i32, i32* %re_index.i411, align 4, !dbg !6687
  %396 = load i32, i32* %nb_bits.i415, align 4, !dbg !6688
  %add44.i500 = add i32 %395, %396, !dbg !6689
  br label %cond.end46.i537, !dbg !6690

cond.false45.i502:                                ; preds = %if.then39.i499
  %397 = load i32, i32* %re_size_plus8.i413, align 4, !dbg !6691
  br label %cond.end46.i537, !dbg !6692

cond.end46.i537:                                  ; preds = %cond.false45.i502, %cond.true43.i501
  %cond47.i503 = phi i32 [ %add44.i500, %cond.true43.i501 ], [ %397, %cond.false45.i502 ], !dbg !6693
  store i32 %cond47.i503, i32* %re_index.i411, align 4, !dbg !6694
  %398 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i406, align 8, !dbg !6695
  %buffer48.i504 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %398, i32 0, i32 0, !dbg !6696
  %399 = load i8*, i8** %buffer48.i504, align 8, !dbg !6696
  %400 = load i32, i32* %re_index.i411, align 4, !dbg !6697
  %shr49.i505 = lshr i32 %400, 3, !dbg !6698
  %idx.ext50.i506 = zext i32 %shr49.i505 to i64, !dbg !6699
  %add.ptr51.i507 = getelementptr inbounds i8, i8* %399, i64 %idx.ext50.i506, !dbg !6699
  %401 = bitcast i8* %add.ptr51.i507 to %union.unaligned_32*, !dbg !6700
  %l52.i508 = bitcast %union.unaligned_32* %401 to i32*, !dbg !6700
  %402 = load i32, i32* %l52.i508, align 1, !dbg !6700
  store i32 %402, i32* %x.addr.i96.i403, align 4, !dbg !6701
  %403 = load i32, i32* %x.addr.i96.i403, align 4, !dbg !6702
  %shl.i97.i509 = shl i32 %403, 8, !dbg !6703
  %and.i98.i510 = and i32 %shl.i97.i509, 65280, !dbg !6704
  %404 = load i32, i32* %x.addr.i96.i403, align 4, !dbg !6705
  %shr.i99.i511 = lshr i32 %404, 8, !dbg !6706
  %and1.i100.i512 = and i32 %shr.i99.i511, 255, !dbg !6707
  %or.i101.i513 = or i32 %and.i98.i510, %and1.i100.i512, !dbg !6708
  %shl2.i102.i514 = shl i32 %or.i101.i513, 16, !dbg !6709
  %405 = load i32, i32* %x.addr.i96.i403, align 4, !dbg !6710
  %shr3.i103.i515 = lshr i32 %405, 16, !dbg !6711
  %shl4.i104.i516 = shl i32 %shr3.i103.i515, 8, !dbg !6712
  %and5.i105.i517 = and i32 %shl4.i104.i516, 65280, !dbg !6713
  %406 = load i32, i32* %x.addr.i96.i403, align 4, !dbg !6714
  %shr6.i106.i518 = lshr i32 %406, 16, !dbg !6715
  %shr7.i107.i519 = lshr i32 %shr6.i106.i518, 8, !dbg !6716
  %and8.i108.i520 = and i32 %shr7.i107.i519, 255, !dbg !6717
  %or9.i109.i521 = or i32 %and5.i105.i517, %and8.i108.i520, !dbg !6718
  %or10.i110.i522 = or i32 %shl2.i102.i514, %or9.i109.i521, !dbg !6719
  %407 = load i32, i32* %re_index.i411, align 4, !dbg !6720
  %and54.i523 = and i32 %407, 7, !dbg !6721
  %shl55.i524 = shl i32 %or10.i110.i522, %and54.i523, !dbg !6722
  store i32 %shl55.i524, i32* %re_cache.i412, align 4, !dbg !6723
  %408 = load i32, i32* %n.i414, align 4, !dbg !6724
  %sub56.i525 = sub nsw i32 0, %408, !dbg !6725
  store i32 %sub56.i525, i32* %nb_bits.i415, align 4, !dbg !6726
  %409 = load i32, i32* %re_cache.i412, align 4, !dbg !6727
  %410 = load i32, i32* %nb_bits.i415, align 4, !dbg !6728
  %conv57.i526 = trunc i32 %410 to i8, !dbg !6728
  %call58.i527 = call i32 @NEG_USR32(i32 %409, i8 signext %conv57.i526) #6, !dbg !6729
  %411 = load i32, i32* %code.i410, align 4, !dbg !6730
  %add59.i528 = add i32 %call58.i527, %411, !dbg !6731
  store i32 %add59.i528, i32* %index1.i416, align 4, !dbg !6732
  %412 = load i32, i32* %index1.i416, align 4, !dbg !6733
  %idxprom60.i529 = zext i32 %412 to i64, !dbg !6734
  %413 = load [2 x i16]*, [2 x i16]** %table.addr.i407, align 8, !dbg !6734
  %arrayidx61.i530 = getelementptr inbounds [2 x i16], [2 x i16]* %413, i64 %idxprom60.i529, !dbg !6734
  %arrayidx62.i531 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i530, i64 0, i64 0, !dbg !6734
  %414 = load i16, i16* %arrayidx62.i531, align 2, !dbg !6734
  %conv63.i532 = sext i16 %414 to i32, !dbg !6734
  store i32 %conv63.i532, i32* %code.i410, align 4, !dbg !6735
  %415 = load i32, i32* %index1.i416, align 4, !dbg !6736
  %idxprom64.i533 = zext i32 %415 to i64, !dbg !6737
  %416 = load [2 x i16]*, [2 x i16]** %table.addr.i407, align 8, !dbg !6737
  %arrayidx65.i534 = getelementptr inbounds [2 x i16], [2 x i16]* %416, i64 %idxprom64.i533, !dbg !6737
  %arrayidx66.i535 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i534, i64 0, i64 1, !dbg !6737
  %417 = load i16, i16* %arrayidx66.i535, align 2, !dbg !6737
  %conv67.i536 = sext i16 %417 to i32, !dbg !6737
  store i32 %conv67.i536, i32* %n.i414, align 4, !dbg !6738
  br label %if.end.i538, !dbg !6739

if.end.i538:                                      ; preds = %cond.end46.i537, %land.lhs.true36.i496, %cond.end.i494
  br label %if.end68.i539, !dbg !6740

if.end68.i539:                                    ; preds = %if.end.i538, %land.lhs.true.i452, %if.then194
  %418 = load i32, i32* %n.i414, align 4, !dbg !6741
  %419 = load i32, i32* %re_cache.i412, align 4, !dbg !6742
  %shl70.i540 = shl i32 %419, %418, !dbg !6742
  store i32 %shl70.i540, i32* %re_cache.i412, align 4, !dbg !6742
  %420 = load i32, i32* %re_size_plus8.i413, align 4, !dbg !6743
  %421 = load i32, i32* %re_index.i411, align 4, !dbg !6744
  %422 = load i32, i32* %n.i414, align 4, !dbg !6745
  %add71.i541 = add i32 %421, %422, !dbg !6746
  %cmp72.i542 = icmp ugt i32 %420, %add71.i541, !dbg !6747
  br i1 %cmp72.i542, label %cond.true74.i544, label %cond.false76.i545, !dbg !6748

cond.true74.i544:                                 ; preds = %if.end68.i539
  %423 = load i32, i32* %re_index.i411, align 4, !dbg !6749
  %424 = load i32, i32* %n.i414, align 4, !dbg !6750
  %add75.i543 = add i32 %423, %424, !dbg !6751
  br label %get_vlc2.exit548, !dbg !6752

cond.false76.i545:                                ; preds = %if.end68.i539
  %425 = load i32, i32* %re_size_plus8.i413, align 4, !dbg !6753
  br label %get_vlc2.exit548, !dbg !6754

get_vlc2.exit548:                                 ; preds = %cond.true74.i544, %cond.false76.i545
  %cond78.i546 = phi i32 [ %add75.i543, %cond.true74.i544 ], [ %425, %cond.false76.i545 ], !dbg !6755
  store i32 %cond78.i546, i32* %re_index.i411, align 4, !dbg !6756
  %426 = load i32, i32* %re_index.i411, align 4, !dbg !6757
  %427 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i406, align 8, !dbg !6758
  %index80.i547 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %427, i32 0, i32 2, !dbg !6759
  store i32 %426, i32* %index80.i547, align 8, !dbg !6760
  %428 = load i32, i32* %code.i410, align 4, !dbg !6761
  store i32 %428, i32* %current_run, align 4, !dbg !6762
  br label %if.end198, !dbg !6763

if.end198:                                        ; preds = %get_vlc2.exit548, %if.then191
  %429 = load i32, i32* %bit, align 4, !dbg !6764
  store i32 %429, i32* %coded, align 4, !dbg !6765
  br label %if.end199, !dbg !6766

if.end199:                                        ; preds = %if.end198, %if.then184
  %430 = load i32, i32* %coded, align 4, !dbg !6767
  %tobool200 = icmp ne i32 %430, 0, !dbg !6767
  br i1 %tobool200, label %if.then201, label %if.else210, !dbg !6769

if.then201:                                       ; preds = %if.end199
  %431 = load i32, i32* %current_fragment, align 4, !dbg !6770
  %idxprom202 = sext i32 %431 to i64, !dbg !6772
  %432 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6772
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %432, i32 0, i32 41, !dbg !6773
  %433 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !6773
  %arrayidx203 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %433, i64 %idxprom202, !dbg !6772
  %coding_method = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx203, i32 0, i32 1, !dbg !6774
  store i8 0, i8* %coding_method, align 2, !dbg !6775
  %434 = load i32, i32* %current_fragment, align 4, !dbg !6776
  %435 = load i32, i32* %num_coded_frags, align 4, !dbg !6777
  %inc204 = add nsw i32 %435, 1, !dbg !6777
  store i32 %inc204, i32* %num_coded_frags, align 4, !dbg !6777
  %idxprom205 = sext i32 %435 to i64, !dbg !6778
  %436 = load i32, i32* %plane, align 4, !dbg !6779
  %idxprom206 = sext i32 %436 to i64, !dbg !6778
  %437 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6778
  %coded_fragment_list207 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %437, i32 0, i32 58, !dbg !6780
  %arrayidx208 = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list207, i64 0, i64 %idxprom206, !dbg !6778
  %438 = load i32*, i32** %arrayidx208, align 8, !dbg !6778
  %arrayidx209 = getelementptr inbounds i32, i32* %438, i64 %idxprom205, !dbg !6778
  store i32 %434, i32* %arrayidx209, align 4, !dbg !6781
  br label %if.end215, !dbg !6782

if.else210:                                       ; preds = %if.end199
  %439 = load i32, i32* %current_fragment, align 4, !dbg !6783
  %idxprom211 = sext i32 %439 to i64, !dbg !6785
  %440 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6785
  %all_fragments212 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %440, i32 0, i32 41, !dbg !6786
  %441 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments212, align 8, !dbg !6786
  %arrayidx213 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %441, i64 %idxprom211, !dbg !6785
  %coding_method214 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx213, i32 0, i32 1, !dbg !6787
  store i8 8, i8* %coding_method214, align 2, !dbg !6788
  br label %if.end215

if.end215:                                        ; preds = %if.else210, %if.then201
  br label %if.end216, !dbg !6789

if.end216:                                        ; preds = %if.end215, %for.body176
  br label %for.inc217, !dbg !6790

for.inc217:                                       ; preds = %if.end216
  %442 = load i32, i32* %j, align 4, !dbg !6791
  %inc218 = add nsw i32 %442, 1, !dbg !6791
  store i32 %inc218, i32* %j, align 4, !dbg !6791
  br label %for.cond173, !dbg !6793, !llvm.loop !6794

for.end219:                                       ; preds = %for.cond173
  br label %for.inc220, !dbg !6796

for.inc220:                                       ; preds = %for.end219
  %443 = load i32, i32* %i, align 4, !dbg !6797
  %inc221 = add nsw i32 %443, 1, !dbg !6797
  store i32 %inc221, i32* %i, align 4, !dbg !6797
  br label %for.cond159, !dbg !6799, !llvm.loop !6800

for.end222:                                       ; preds = %land.end166
  br label %if.end223

if.end223:                                        ; preds = %for.end222, %if.end157
  %444 = load i32, i32* %plane, align 4, !dbg !6802
  %tobool224 = icmp ne i32 %444, 0, !dbg !6802
  br i1 %tobool224, label %if.end226, label %if.then225, !dbg !6804

if.then225:                                       ; preds = %if.end223
  %445 = load i32, i32* %num_coded_frags, align 4, !dbg !6805
  store i32 %445, i32* %plane0_num_coded_frags, align 4, !dbg !6806
  br label %if.end226, !dbg !6807

if.end226:                                        ; preds = %if.then225, %if.end223
  %446 = load i32, i32* %num_coded_frags, align 4, !dbg !6808
  %447 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6809
  %total_num_coded_frags227 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %447, i32 0, i32 57, !dbg !6810
  %448 = load i32, i32* %total_num_coded_frags227, align 16, !dbg !6811
  %add228 = add nsw i32 %448, %446, !dbg !6811
  store i32 %add228, i32* %total_num_coded_frags227, align 16, !dbg !6811
  store i32 0, i32* %i, align 4, !dbg !6812
  br label %for.cond229, !dbg !6814

for.cond229:                                      ; preds = %for.inc238, %if.end226
  %449 = load i32, i32* %i, align 4, !dbg !6815
  %cmp230 = icmp slt i32 %449, 64, !dbg !6818
  br i1 %cmp230, label %for.body232, label %for.end240, !dbg !6819

for.body232:                                      ; preds = %for.cond229
  %450 = load i32, i32* %num_coded_frags, align 4, !dbg !6820
  %451 = load i32, i32* %i, align 4, !dbg !6821
  %idxprom233 = sext i32 %451 to i64, !dbg !6822
  %452 = load i32, i32* %plane, align 4, !dbg !6823
  %idxprom234 = sext i32 %452 to i64, !dbg !6822
  %453 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6822
  %num_coded_frags235 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %453, i32 0, i32 56, !dbg !6824
  %arrayidx236 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %num_coded_frags235, i64 0, i64 %idxprom234, !dbg !6822
  %arrayidx237 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx236, i64 0, i64 %idxprom233, !dbg !6822
  store i32 %450, i32* %arrayidx237, align 4, !dbg !6825
  br label %for.inc238, !dbg !6822

for.inc238:                                       ; preds = %for.body232
  %454 = load i32, i32* %i, align 4, !dbg !6826
  %inc239 = add nsw i32 %454, 1, !dbg !6826
  store i32 %inc239, i32* %i, align 4, !dbg !6826
  br label %for.cond229, !dbg !6828, !llvm.loop !6829

for.end240:                                       ; preds = %for.cond229
  %455 = load i32, i32* %plane, align 4, !dbg !6831
  %cmp241 = icmp slt i32 %455, 2, !dbg !6833
  br i1 %cmp241, label %if.then243, label %if.end253, !dbg !6834

if.then243:                                       ; preds = %for.end240
  %456 = load i32, i32* %plane, align 4, !dbg !6835
  %idxprom244 = sext i32 %456 to i64, !dbg !6836
  %457 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6836
  %coded_fragment_list245 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %457, i32 0, i32 58, !dbg !6837
  %arrayidx246 = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list245, i64 0, i64 %idxprom244, !dbg !6836
  %458 = load i32*, i32** %arrayidx246, align 8, !dbg !6836
  %459 = load i32, i32* %num_coded_frags, align 4, !dbg !6838
  %idx.ext247 = sext i32 %459 to i64, !dbg !6839
  %add.ptr248 = getelementptr inbounds i32, i32* %458, i64 %idx.ext247, !dbg !6839
  %460 = load i32, i32* %plane, align 4, !dbg !6840
  %add249 = add nsw i32 %460, 1, !dbg !6841
  %idxprom250 = sext i32 %add249 to i64, !dbg !6842
  %461 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6842
  %coded_fragment_list251 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %461, i32 0, i32 58, !dbg !6843
  %arrayidx252 = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list251, i64 0, i64 %idxprom250, !dbg !6842
  store i32* %add.ptr248, i32** %arrayidx252, align 8, !dbg !6844
  br label %if.end253, !dbg !6842

if.end253:                                        ; preds = %if.then243, %for.end240
  br label %for.inc254, !dbg !6845

for.inc254:                                       ; preds = %if.end253
  %462 = load i32, i32* %plane, align 4, !dbg !6846
  %inc255 = add nsw i32 %462, 1, !dbg !6846
  store i32 %inc255, i32* %plane, align 4, !dbg !6846
  br label %for.cond102, !dbg !6848, !llvm.loop !6849

for.end256:                                       ; preds = %for.cond102
  store i32 0, i32* %retval, align 4, !dbg !6851
  br label %return, !dbg !6851

return:                                           ; preds = %for.end256, %if.then171, %if.then75, %if.then24
  %463 = load i32, i32* %retval, align 4, !dbg !6852
  ret i32 %463, !dbg !6852
}

; Function Attrs: nounwind uwtable
define internal i32 @unpack_modes(%struct.Vp3DecodeContext* %s, %struct.GetBitContext* %gb) #0 !dbg !6853 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4271, metadata !1942), !dbg !6854
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4271, metadata !1942), !dbg !6869
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4271, metadata !1942), !dbg !6871
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5689, metadata !1942), !dbg !6873
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5691, metadata !1942), !dbg !6874
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5693, metadata !1942), !dbg !6875
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5695, metadata !1942), !dbg !6876
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5697, metadata !1942), !dbg !6877
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5699, metadata !1942), !dbg !6878
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5701, metadata !1942), !dbg !6879
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5703, metadata !1942), !dbg !6880
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5705, metadata !1942), !dbg !6881
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5707, metadata !1942), !dbg !6882
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5709, metadata !1942), !dbg !6883
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %sb_x = alloca i32, align 4
  %sb_y = alloca i32, align 4
  %scheme = alloca i32, align 4
  %current_macroblock = alloca i32, align 4
  %current_fragment = alloca i32, align 4
  %coding_mode = alloca i32, align 4
  %custom_mode_alphabet = alloca [8 x i32], align 16
  %alphabet = alloca i32*, align 8
  %frag = alloca %struct.Vp3Fragment*, align 8
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !6884, metadata !1942), !dbg !6885
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6886, metadata !1942), !dbg !6887
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6888, metadata !1942), !dbg !6889
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6890, metadata !1942), !dbg !6891
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6892, metadata !1942), !dbg !6893
  call void @llvm.dbg.declare(metadata i32* %sb_x, metadata !6894, metadata !1942), !dbg !6895
  call void @llvm.dbg.declare(metadata i32* %sb_y, metadata !6896, metadata !1942), !dbg !6897
  call void @llvm.dbg.declare(metadata i32* %scheme, metadata !6898, metadata !1942), !dbg !6899
  call void @llvm.dbg.declare(metadata i32* %current_macroblock, metadata !6900, metadata !1942), !dbg !6901
  call void @llvm.dbg.declare(metadata i32* %current_fragment, metadata !6902, metadata !1942), !dbg !6903
  call void @llvm.dbg.declare(metadata i32* %coding_mode, metadata !6904, metadata !1942), !dbg !6905
  call void @llvm.dbg.declare(metadata [8 x i32]* %custom_mode_alphabet, metadata !6906, metadata !1942), !dbg !6907
  call void @llvm.dbg.declare(metadata i32** %alphabet, metadata !6908, metadata !1942), !dbg !6909
  call void @llvm.dbg.declare(metadata %struct.Vp3Fragment** %frag, metadata !6910, metadata !1942), !dbg !6911
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6912
  %keyframe = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 12, !dbg !6913
  %1 = load i32, i32* %keyframe, align 8, !dbg !6913
  %tobool = icmp ne i32 %1, 0, !dbg !6912
  br i1 %tobool, label %if.then, label %if.else, !dbg !6914

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6915
  br label %for.cond, !dbg !6918

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !6919
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6922
  %fragment_count = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 38, !dbg !6923
  %4 = load i32, i32* %fragment_count, align 4, !dbg !6923
  %cmp = icmp slt i32 %2, %4, !dbg !6924
  br i1 %cmp, label %for.body, label %for.end, !dbg !6925

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !6926
  %idxprom = sext i32 %5 to i64, !dbg !6927
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6927
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 41, !dbg !6928
  %7 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !6928
  %arrayidx = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %7, i64 %idxprom, !dbg !6927
  %coding_method = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx, i32 0, i32 1, !dbg !6929
  store i8 1, i8* %coding_method, align 2, !dbg !6930
  br label %for.inc, !dbg !6927

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6931
  %inc = add nsw i32 %8, 1, !dbg !6931
  store i32 %inc, i32* %i, align 4, !dbg !6931
  br label %for.cond, !dbg !6933, !llvm.loop !6934

for.end:                                          ; preds = %for.cond
  br label %if.end278, !dbg !6936

if.else:                                          ; preds = %entry
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6937
  %call = call i32 @get_bits(%struct.GetBitContext* %9, i32 3), !dbg !6938
  store i32 %call, i32* %scheme, align 4, !dbg !6939
  %10 = load i32, i32* %scheme, align 4, !dbg !6940
  %cmp1 = icmp eq i32 %10, 0, !dbg !6942
  br i1 %cmp1, label %if.then2, label %if.else20, !dbg !6943

if.then2:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !6944
  br label %for.cond3, !dbg !6947

for.cond3:                                        ; preds = %for.inc8, %if.then2
  %11 = load i32, i32* %i, align 4, !dbg !6948
  %cmp4 = icmp slt i32 %11, 8, !dbg !6951
  br i1 %cmp4, label %for.body5, label %for.end10, !dbg !6952

for.body5:                                        ; preds = %for.cond3
  %12 = load i32, i32* %i, align 4, !dbg !6953
  %idxprom6 = sext i32 %12 to i64, !dbg !6954
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %custom_mode_alphabet, i64 0, i64 %idxprom6, !dbg !6954
  store i32 0, i32* %arrayidx7, align 4, !dbg !6955
  br label %for.inc8, !dbg !6954

for.inc8:                                         ; preds = %for.body5
  %13 = load i32, i32* %i, align 4, !dbg !6956
  %inc9 = add nsw i32 %13, 1, !dbg !6956
  store i32 %inc9, i32* %i, align 4, !dbg !6956
  br label %for.cond3, !dbg !6958, !llvm.loop !6959

for.end10:                                        ; preds = %for.cond3
  store i32 0, i32* %i, align 4, !dbg !6961
  br label %for.cond11, !dbg !6963

for.cond11:                                       ; preds = %for.inc17, %for.end10
  %14 = load i32, i32* %i, align 4, !dbg !6964
  %cmp12 = icmp slt i32 %14, 8, !dbg !6967
  br i1 %cmp12, label %for.body13, label %for.end19, !dbg !6968

for.body13:                                       ; preds = %for.cond11
  %15 = load i32, i32* %i, align 4, !dbg !6969
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6970
  %call14 = call i32 @get_bits(%struct.GetBitContext* %16, i32 3), !dbg !6971
  %idxprom15 = zext i32 %call14 to i64, !dbg !6972
  %arrayidx16 = getelementptr inbounds [8 x i32], [8 x i32]* %custom_mode_alphabet, i64 0, i64 %idxprom15, !dbg !6972
  store i32 %15, i32* %arrayidx16, align 4, !dbg !6973
  br label %for.inc17, !dbg !6972

for.inc17:                                        ; preds = %for.body13
  %17 = load i32, i32* %i, align 4, !dbg !6974
  %inc18 = add nsw i32 %17, 1, !dbg !6974
  store i32 %inc18, i32* %i, align 4, !dbg !6974
  br label %for.cond11, !dbg !6976, !llvm.loop !6977

for.end19:                                        ; preds = %for.cond11
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %custom_mode_alphabet, i32 0, i32 0, !dbg !6979
  store i32* %arraydecay, i32** %alphabet, align 8, !dbg !6980
  br label %if.end, !dbg !6981

if.else20:                                        ; preds = %if.else
  %18 = load i32, i32* %scheme, align 4, !dbg !6982
  %sub = sub nsw i32 %18, 1, !dbg !6983
  %idxprom21 = sext i32 %sub to i64, !dbg !6984
  %arrayidx22 = getelementptr inbounds [6 x [8 x i32]], [6 x [8 x i32]]* @ModeAlphabet, i64 0, i64 %idxprom21, !dbg !6984
  %arraydecay23 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx22, i32 0, i32 0, !dbg !6984
  store i32* %arraydecay23, i32** %alphabet, align 8, !dbg !6985
  br label %if.end

if.end:                                           ; preds = %if.else20, %for.end19
  store i32 0, i32* %sb_y, align 4, !dbg !6986
  br label %for.cond24, !dbg !6987

for.cond24:                                       ; preds = %for.inc275, %if.end
  %19 = load i32, i32* %sb_y, align 4, !dbg !6988
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6990
  %y_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %20, i32 0, i32 27, !dbg !6991
  %21 = load i32, i32* %y_superblock_height, align 16, !dbg !6991
  %cmp25 = icmp slt i32 %19, %21, !dbg !6992
  br i1 %cmp25, label %for.body26, label %for.end277, !dbg !6993

for.body26:                                       ; preds = %for.cond24
  store i32 0, i32* %sb_x, align 4, !dbg !6994
  br label %for.cond27, !dbg !6995

for.cond27:                                       ; preds = %for.inc272, %for.body26
  %22 = load i32, i32* %sb_x, align 4, !dbg !6996
  %23 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !6998
  %y_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %23, i32 0, i32 26, !dbg !6999
  %24 = load i32, i32* %y_superblock_width, align 4, !dbg !6999
  %cmp28 = icmp slt i32 %22, %24, !dbg !7000
  br i1 %cmp28, label %for.body29, label %for.end274, !dbg !7001

for.body29:                                       ; preds = %for.cond27
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7002
  %call30 = call i32 @get_bits_left(%struct.GetBitContext* %25), !dbg !7004
  %cmp31 = icmp sle i32 %call30, 0, !dbg !7005
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !7006

if.then32:                                        ; preds = %for.body29
  store i32 -1, i32* %retval, align 4, !dbg !7007
  br label %return, !dbg !7007

if.end33:                                         ; preds = %for.body29
  store i32 0, i32* %j, align 4, !dbg !7008
  br label %for.cond34, !dbg !7009

for.cond34:                                       ; preds = %for.inc269, %if.end33
  %26 = load i32, i32* %j, align 4, !dbg !7010
  %cmp35 = icmp slt i32 %26, 4, !dbg !7012
  br i1 %cmp35, label %for.body36, label %for.end271, !dbg !7013

for.body36:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !7014, metadata !1942), !dbg !7015
  %27 = load i32, i32* %sb_x, align 4, !dbg !7016
  %mul = mul nsw i32 2, %27, !dbg !7017
  %28 = load i32, i32* %j, align 4, !dbg !7018
  %shr = ashr i32 %28, 1, !dbg !7019
  %add = add nsw i32 %mul, %shr, !dbg !7020
  store i32 %add, i32* %mb_x, align 4, !dbg !7015
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !7021, metadata !1942), !dbg !7022
  %29 = load i32, i32* %sb_y, align 4, !dbg !7023
  %mul37 = mul nsw i32 2, %29, !dbg !7024
  %30 = load i32, i32* %j, align 4, !dbg !7025
  %shr38 = ashr i32 %30, 1, !dbg !7026
  %31 = load i32, i32* %j, align 4, !dbg !7027
  %add39 = add nsw i32 %shr38, %31, !dbg !7028
  %and = and i32 %add39, 1, !dbg !7029
  %add40 = add nsw i32 %mul37, %and, !dbg !7030
  store i32 %add40, i32* %mb_y, align 4, !dbg !7022
  %32 = load i32, i32* %mb_y, align 4, !dbg !7031
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7032
  %macroblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 36, !dbg !7033
  %34 = load i32, i32* %macroblock_width, align 4, !dbg !7033
  %mul41 = mul nsw i32 %32, %34, !dbg !7034
  %35 = load i32, i32* %mb_x, align 4, !dbg !7035
  %add42 = add nsw i32 %mul41, %35, !dbg !7036
  store i32 %add42, i32* %current_macroblock, align 4, !dbg !7037
  %36 = load i32, i32* %mb_x, align 4, !dbg !7038
  %37 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7040
  %macroblock_width43 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %37, i32 0, i32 36, !dbg !7041
  %38 = load i32, i32* %macroblock_width43, align 4, !dbg !7041
  %cmp44 = icmp sge i32 %36, %38, !dbg !7042
  br i1 %cmp44, label %if.then46, label %lor.lhs.false, !dbg !7043

lor.lhs.false:                                    ; preds = %for.body36
  %39 = load i32, i32* %mb_y, align 4, !dbg !7044
  %40 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7045
  %macroblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %40, i32 0, i32 37, !dbg !7046
  %41 = load i32, i32* %macroblock_height, align 16, !dbg !7046
  %cmp45 = icmp sge i32 %39, %41, !dbg !7047
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !7048

if.then46:                                        ; preds = %lor.lhs.false, %for.body36
  br label %for.inc269, !dbg !7050

if.end47:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %k, align 4, !dbg !7051
  br label %for.cond48, !dbg !7053

for.cond48:                                       ; preds = %for.inc68, %if.end47
  %42 = load i32, i32* %k, align 4, !dbg !7054
  %cmp49 = icmp slt i32 %42, 4, !dbg !7057
  br i1 %cmp49, label %for.body50, label %for.end70, !dbg !7058

for.body50:                                       ; preds = %for.cond48
  %43 = load i32, i32* %mb_y, align 4, !dbg !7059
  %mul51 = mul nsw i32 2, %43, !dbg !7061
  %44 = load i32, i32* %k, align 4, !dbg !7062
  %shr52 = ashr i32 %44, 1, !dbg !7063
  %add53 = add nsw i32 %mul51, %shr52, !dbg !7064
  %45 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7065
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %45, i32 0, i32 39, !dbg !7066
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 0, !dbg !7065
  %46 = load i32, i32* %arrayidx54, align 8, !dbg !7065
  %mul55 = mul nsw i32 %add53, %46, !dbg !7067
  %47 = load i32, i32* %mb_x, align 4, !dbg !7068
  %mul56 = mul nsw i32 2, %47, !dbg !7069
  %48 = load i32, i32* %k, align 4, !dbg !7070
  %and57 = and i32 %48, 1, !dbg !7071
  %add58 = add nsw i32 %mul56, %and57, !dbg !7072
  %add59 = add nsw i32 %mul55, %add58, !dbg !7073
  store i32 %add59, i32* %current_fragment, align 4, !dbg !7074
  %49 = load i32, i32* %current_fragment, align 4, !dbg !7075
  %idxprom60 = sext i32 %49 to i64, !dbg !7077
  %50 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7077
  %all_fragments61 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %50, i32 0, i32 41, !dbg !7078
  %51 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments61, align 8, !dbg !7078
  %arrayidx62 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %51, i64 %idxprom60, !dbg !7077
  %coding_method63 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx62, i32 0, i32 1, !dbg !7079
  %52 = load i8, i8* %coding_method63, align 2, !dbg !7079
  %conv = zext i8 %52 to i32, !dbg !7077
  %cmp64 = icmp ne i32 %conv, 8, !dbg !7080
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !7081

if.then66:                                        ; preds = %for.body50
  br label %for.end70, !dbg !7082

if.end67:                                         ; preds = %for.body50
  br label %for.inc68, !dbg !7083

for.inc68:                                        ; preds = %if.end67
  %53 = load i32, i32* %k, align 4, !dbg !7084
  %inc69 = add nsw i32 %53, 1, !dbg !7084
  store i32 %inc69, i32* %k, align 4, !dbg !7084
  br label %for.cond48, !dbg !7086, !llvm.loop !7087

for.end70:                                        ; preds = %if.then66, %for.cond48
  %54 = load i32, i32* %k, align 4, !dbg !7089
  %cmp71 = icmp eq i32 %54, 4, !dbg !7091
  br i1 %cmp71, label %if.then73, label %if.end76, !dbg !7092

if.then73:                                        ; preds = %for.end70
  %55 = load i32, i32* %current_macroblock, align 4, !dbg !7093
  %idxprom74 = sext i32 %55 to i64, !dbg !7095
  %56 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7095
  %macroblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %56, i32 0, i32 73, !dbg !7096
  %57 = load i8*, i8** %macroblock_coding, align 8, !dbg !7096
  %arrayidx75 = getelementptr inbounds i8, i8* %57, i64 %idxprom74, !dbg !7095
  store i8 0, i8* %arrayidx75, align 1, !dbg !7097
  br label %for.inc269, !dbg !7098

if.end76:                                         ; preds = %for.end70
  %58 = load i32, i32* %scheme, align 4, !dbg !7099
  %cmp77 = icmp eq i32 %58, 7, !dbg !7100
  br i1 %cmp77, label %if.then79, label %if.else81, !dbg !7101

if.then79:                                        ; preds = %if.end76
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7102
  %call80 = call i32 @get_bits(%struct.GetBitContext* %59, i32 3), !dbg !7103
  store i32 %call80, i32* %coding_mode, align 4, !dbg !7104
  br label %if.end85, !dbg !7105

if.else81:                                        ; preds = %if.end76
  %60 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7106
  %61 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7107
  %mode_code_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %61, i32 0, i32 69, !dbg !7108
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %mode_code_vlc, i32 0, i32 1, !dbg !7109
  %62 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !7109
  store %struct.GetBitContext* %60, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7110
  store [2 x i16]* %62, [2 x i16]** %table.addr.i, align 8, !dbg !7110
  store i32 3, i32* %bits.addr.i, align 4, !dbg !7110
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !7110
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7111
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %63, i32 0, i32 2, !dbg !7112
  %64 = load i32, i32* %index.i, align 8, !dbg !7112
  store i32 %64, i32* %re_index.i, align 4, !dbg !6878
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7113
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %65, i32 0, i32 4, !dbg !7114
  %66 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !7114
  store i32 %66, i32* %re_size_plus8.i, align 4, !dbg !6880
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7115
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %67, i32 0, i32 0, !dbg !7116
  %68 = load i8*, i8** %buffer.i, align 8, !dbg !7116
  %69 = load i32, i32* %re_index.i, align 4, !dbg !7117
  %shr.i = lshr i32 %69, 3, !dbg !7118
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !7119
  %add.ptr.i = getelementptr inbounds i8, i8* %68, i64 %idx.ext.i, !dbg !7119
  %70 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !7120
  %l.i = bitcast %union.unaligned_32* %70 to i32*, !dbg !7120
  %71 = load i32, i32* %l.i, align 1, !dbg !7120
  store i32 %71, i32* %x.addr.i.i, align 4, !dbg !7121
  %72 = load i32, i32* %x.addr.i.i, align 4, !dbg !7122
  %shl.i.i = shl i32 %72, 8, !dbg !7123
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !7124
  %73 = load i32, i32* %x.addr.i.i, align 4, !dbg !7125
  %shr.i.i = lshr i32 %73, 8, !dbg !7126
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !7127
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !7128
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !7129
  %74 = load i32, i32* %x.addr.i.i, align 4, !dbg !7130
  %shr3.i.i = lshr i32 %74, 16, !dbg !7131
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !7132
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !7133
  %75 = load i32, i32* %x.addr.i.i, align 4, !dbg !7134
  %shr6.i.i = lshr i32 %75, 16, !dbg !7135
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !7136
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !7137
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !7138
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !7139
  %76 = load i32, i32* %re_index.i, align 4, !dbg !7140
  %and.i = and i32 %76, 7, !dbg !7141
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !7142
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !7143
  %77 = load i32, i32* %re_cache.i, align 4, !dbg !7144
  %78 = load i32, i32* %bits.addr.i, align 4, !dbg !7145
  %conv.i = trunc i32 %78 to i8, !dbg !7145
  %call2.i = call i32 @NEG_USR32(i32 %77, i8 signext %conv.i) #6, !dbg !7146
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !7147
  %79 = load i32, i32* %index1.i, align 4, !dbg !7148
  %idxprom.i = zext i32 %79 to i64, !dbg !7149
  %80 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7149
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %80, i64 %idxprom.i, !dbg !7149
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !7149
  %81 = load i16, i16* %arrayidx3.i, align 2, !dbg !7149
  %conv4.i = sext i16 %81 to i32, !dbg !7149
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !7150
  %82 = load i32, i32* %index1.i, align 4, !dbg !7151
  %idxprom5.i = zext i32 %82 to i64, !dbg !7152
  %83 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7152
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %83, i64 %idxprom5.i, !dbg !7152
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !7152
  %84 = load i16, i16* %arrayidx7.i, align 2, !dbg !7152
  %conv8.i = sext i16 %84 to i32, !dbg !7152
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !7153
  %85 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7154
  %cmp.i = icmp sgt i32 %85, 1, !dbg !7155
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !7156

land.lhs.true.i:                                  ; preds = %if.else81
  %86 = load i32, i32* %n.i, align 4, !dbg !7157
  %cmp10.i = icmp slt i32 %86, 0, !dbg !7158
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !7159

if.then.i:                                        ; preds = %land.lhs.true.i
  %87 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7160
  %88 = load i32, i32* %re_index.i, align 4, !dbg !7161
  %89 = load i32, i32* %bits.addr.i, align 4, !dbg !7162
  %add.i = add i32 %88, %89, !dbg !7163
  %cmp12.i = icmp ugt i32 %87, %add.i, !dbg !7164
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !7165

cond.true.i:                                      ; preds = %if.then.i
  %90 = load i32, i32* %re_index.i, align 4, !dbg !7166
  %91 = load i32, i32* %bits.addr.i, align 4, !dbg !7167
  %add14.i = add i32 %90, %91, !dbg !7168
  br label %cond.end.i, !dbg !7169

cond.false.i:                                     ; preds = %if.then.i
  %92 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7170
  br label %cond.end.i, !dbg !7171

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %92, %cond.false.i ], !dbg !7172
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !7173
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7174
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %93, i32 0, i32 0, !dbg !7175
  %94 = load i8*, i8** %buffer15.i, align 8, !dbg !7175
  %95 = load i32, i32* %re_index.i, align 4, !dbg !7176
  %shr16.i = lshr i32 %95, 3, !dbg !7177
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !7178
  %add.ptr18.i = getelementptr inbounds i8, i8* %94, i64 %idx.ext17.i, !dbg !7178
  %96 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !7179
  %l19.i = bitcast %union.unaligned_32* %96 to i32*, !dbg !7179
  %97 = load i32, i32* %l19.i, align 1, !dbg !7179
  store i32 %97, i32* %x.addr.i81.i, align 4, !dbg !7180
  %98 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7181
  %shl.i82.i = shl i32 %98, 8, !dbg !7182
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !7183
  %99 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7184
  %shr.i84.i = lshr i32 %99, 8, !dbg !7185
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !7186
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !7187
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !7188
  %100 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7189
  %shr3.i88.i = lshr i32 %100, 16, !dbg !7190
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !7191
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !7192
  %101 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7193
  %shr6.i91.i = lshr i32 %101, 16, !dbg !7194
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !7195
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !7196
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !7197
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !7198
  %102 = load i32, i32* %re_index.i, align 4, !dbg !7199
  %and21.i = and i32 %102, 7, !dbg !7200
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !7201
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !7202
  %103 = load i32, i32* %n.i, align 4, !dbg !7203
  %sub.i = sub nsw i32 0, %103, !dbg !7204
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !7205
  %104 = load i32, i32* %re_cache.i, align 4, !dbg !7206
  %105 = load i32, i32* %nb_bits.i, align 4, !dbg !7207
  %conv23.i = trunc i32 %105 to i8, !dbg !7207
  %call24.i = call i32 @NEG_USR32(i32 %104, i8 signext %conv23.i) #6, !dbg !7208
  %106 = load i32, i32* %code.i, align 4, !dbg !7209
  %add25.i = add i32 %call24.i, %106, !dbg !7210
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !7211
  %107 = load i32, i32* %index1.i, align 4, !dbg !7212
  %idxprom26.i = zext i32 %107 to i64, !dbg !7213
  %108 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7213
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %108, i64 %idxprom26.i, !dbg !7213
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !7213
  %109 = load i16, i16* %arrayidx28.i, align 2, !dbg !7213
  %conv29.i = sext i16 %109 to i32, !dbg !7213
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !7214
  %110 = load i32, i32* %index1.i, align 4, !dbg !7215
  %idxprom30.i = zext i32 %110 to i64, !dbg !7216
  %111 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7216
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %111, i64 %idxprom30.i, !dbg !7216
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !7216
  %112 = load i16, i16* %arrayidx32.i, align 2, !dbg !7216
  %conv33.i = sext i16 %112 to i32, !dbg !7216
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !7217
  %113 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7218
  %cmp34.i = icmp sgt i32 %113, 2, !dbg !7219
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !7220

land.lhs.true36.i:                                ; preds = %cond.end.i
  %114 = load i32, i32* %n.i, align 4, !dbg !7221
  %cmp37.i = icmp slt i32 %114, 0, !dbg !7222
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !7223

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7224
  %116 = load i32, i32* %re_index.i, align 4, !dbg !7225
  %117 = load i32, i32* %nb_bits.i, align 4, !dbg !7226
  %add40.i = add i32 %116, %117, !dbg !7227
  %cmp41.i = icmp ugt i32 %115, %add40.i, !dbg !7228
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !7229

cond.true43.i:                                    ; preds = %if.then39.i
  %118 = load i32, i32* %re_index.i, align 4, !dbg !7230
  %119 = load i32, i32* %nb_bits.i, align 4, !dbg !7231
  %add44.i = add i32 %118, %119, !dbg !7232
  br label %cond.end46.i, !dbg !7233

cond.false45.i:                                   ; preds = %if.then39.i
  %120 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7234
  br label %cond.end46.i, !dbg !7235

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %120, %cond.false45.i ], !dbg !7236
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !7237
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7238
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %121, i32 0, i32 0, !dbg !7239
  %122 = load i8*, i8** %buffer48.i, align 8, !dbg !7239
  %123 = load i32, i32* %re_index.i, align 4, !dbg !7240
  %shr49.i = lshr i32 %123, 3, !dbg !7241
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !7242
  %add.ptr51.i = getelementptr inbounds i8, i8* %122, i64 %idx.ext50.i, !dbg !7242
  %124 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !7243
  %l52.i = bitcast %union.unaligned_32* %124 to i32*, !dbg !7243
  %125 = load i32, i32* %l52.i, align 1, !dbg !7243
  store i32 %125, i32* %x.addr.i96.i, align 4, !dbg !7244
  %126 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7245
  %shl.i97.i = shl i32 %126, 8, !dbg !7246
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !7247
  %127 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7248
  %shr.i99.i = lshr i32 %127, 8, !dbg !7249
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !7250
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !7251
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !7252
  %128 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7253
  %shr3.i103.i = lshr i32 %128, 16, !dbg !7254
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !7255
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !7256
  %129 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7257
  %shr6.i106.i = lshr i32 %129, 16, !dbg !7258
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !7259
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !7260
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !7261
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !7262
  %130 = load i32, i32* %re_index.i, align 4, !dbg !7263
  %and54.i = and i32 %130, 7, !dbg !7264
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !7265
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !7266
  %131 = load i32, i32* %n.i, align 4, !dbg !7267
  %sub56.i = sub nsw i32 0, %131, !dbg !7268
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !7269
  %132 = load i32, i32* %re_cache.i, align 4, !dbg !7270
  %133 = load i32, i32* %nb_bits.i, align 4, !dbg !7271
  %conv57.i = trunc i32 %133 to i8, !dbg !7271
  %call58.i = call i32 @NEG_USR32(i32 %132, i8 signext %conv57.i) #6, !dbg !7272
  %134 = load i32, i32* %code.i, align 4, !dbg !7273
  %add59.i = add i32 %call58.i, %134, !dbg !7274
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !7275
  %135 = load i32, i32* %index1.i, align 4, !dbg !7276
  %idxprom60.i = zext i32 %135 to i64, !dbg !7277
  %136 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7277
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %136, i64 %idxprom60.i, !dbg !7277
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !7277
  %137 = load i16, i16* %arrayidx62.i, align 2, !dbg !7277
  %conv63.i = sext i16 %137 to i32, !dbg !7277
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !7278
  %138 = load i32, i32* %index1.i, align 4, !dbg !7279
  %idxprom64.i = zext i32 %138 to i64, !dbg !7280
  %139 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7280
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %139, i64 %idxprom64.i, !dbg !7280
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !7280
  %140 = load i16, i16* %arrayidx66.i, align 2, !dbg !7280
  %conv67.i = sext i16 %140 to i32, !dbg !7280
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !7281
  br label %if.end.i, !dbg !7282

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !7283

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.else81
  %141 = load i32, i32* %n.i, align 4, !dbg !7284
  %142 = load i32, i32* %re_cache.i, align 4, !dbg !7285
  %shl70.i = shl i32 %142, %141, !dbg !7285
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !7285
  %143 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7286
  %144 = load i32, i32* %re_index.i, align 4, !dbg !7287
  %145 = load i32, i32* %n.i, align 4, !dbg !7288
  %add71.i = add i32 %144, %145, !dbg !7289
  %cmp72.i = icmp ugt i32 %143, %add71.i, !dbg !7290
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !7291

cond.true74.i:                                    ; preds = %if.end68.i
  %146 = load i32, i32* %re_index.i, align 4, !dbg !7292
  %147 = load i32, i32* %n.i, align 4, !dbg !7293
  %add75.i = add i32 %146, %147, !dbg !7294
  br label %get_vlc2.exit, !dbg !7295

cond.false76.i:                                   ; preds = %if.end68.i
  %148 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7296
  br label %get_vlc2.exit, !dbg !7297

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %148, %cond.false76.i ], !dbg !7298
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !7299
  %149 = load i32, i32* %re_index.i, align 4, !dbg !7300
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7301
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %150, i32 0, i32 2, !dbg !7302
  store i32 %149, i32* %index80.i, align 8, !dbg !7303
  %151 = load i32, i32* %code.i, align 4, !dbg !7304
  %idxprom83 = sext i32 %151 to i64, !dbg !7305
  %152 = load i32*, i32** %alphabet, align 8, !dbg !7305
  %arrayidx84 = getelementptr inbounds i32, i32* %152, i64 %idxprom83, !dbg !7305
  %153 = load i32, i32* %arrayidx84, align 4, !dbg !7305
  store i32 %153, i32* %coding_mode, align 4, !dbg !7306
  br label %if.end85

if.end85:                                         ; preds = %get_vlc2.exit, %if.then79
  %154 = load i32, i32* %coding_mode, align 4, !dbg !7307
  %conv86 = trunc i32 %154 to i8, !dbg !7307
  %155 = load i32, i32* %current_macroblock, align 4, !dbg !7308
  %idxprom87 = sext i32 %155 to i64, !dbg !7309
  %156 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7309
  %macroblock_coding88 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %156, i32 0, i32 73, !dbg !7310
  %157 = load i8*, i8** %macroblock_coding88, align 8, !dbg !7310
  %arrayidx89 = getelementptr inbounds i8, i8* %157, i64 %idxprom87, !dbg !7309
  store i8 %conv86, i8* %arrayidx89, align 1, !dbg !7311
  store i32 0, i32* %k, align 4, !dbg !7312
  br label %for.cond90, !dbg !7314

for.cond90:                                       ; preds = %for.inc114, %if.end85
  %158 = load i32, i32* %k, align 4, !dbg !7315
  %cmp91 = icmp slt i32 %158, 4, !dbg !7318
  br i1 %cmp91, label %for.body93, label %for.end116, !dbg !7319

for.body93:                                       ; preds = %for.cond90
  %159 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7320
  %all_fragments94 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %159, i32 0, i32 41, !dbg !7322
  %160 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments94, align 8, !dbg !7322
  %161 = load i32, i32* %mb_y, align 4, !dbg !7323
  %mul95 = mul nsw i32 2, %161, !dbg !7324
  %162 = load i32, i32* %k, align 4, !dbg !7325
  %shr96 = ashr i32 %162, 1, !dbg !7326
  %add97 = add nsw i32 %mul95, %shr96, !dbg !7327
  %163 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7328
  %fragment_width98 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %163, i32 0, i32 39, !dbg !7329
  %arrayidx99 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width98, i64 0, i64 0, !dbg !7328
  %164 = load i32, i32* %arrayidx99, align 8, !dbg !7328
  %mul100 = mul nsw i32 %add97, %164, !dbg !7330
  %idx.ext = sext i32 %mul100 to i64, !dbg !7331
  %add.ptr = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %160, i64 %idx.ext, !dbg !7331
  %165 = load i32, i32* %mb_x, align 4, !dbg !7332
  %mul101 = mul nsw i32 2, %165, !dbg !7333
  %166 = load i32, i32* %k, align 4, !dbg !7334
  %and102 = and i32 %166, 1, !dbg !7335
  %add103 = add nsw i32 %mul101, %and102, !dbg !7336
  %idx.ext104 = sext i32 %add103 to i64, !dbg !7337
  %add.ptr105 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %add.ptr, i64 %idx.ext104, !dbg !7337
  store %struct.Vp3Fragment* %add.ptr105, %struct.Vp3Fragment** %frag, align 8, !dbg !7338
  %167 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7339
  %coding_method106 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %167, i32 0, i32 1, !dbg !7341
  %168 = load i8, i8* %coding_method106, align 2, !dbg !7341
  %conv107 = zext i8 %168 to i32, !dbg !7339
  %cmp108 = icmp ne i32 %conv107, 8, !dbg !7342
  br i1 %cmp108, label %if.then110, label %if.end113, !dbg !7343

if.then110:                                       ; preds = %for.body93
  %169 = load i32, i32* %coding_mode, align 4, !dbg !7344
  %conv111 = trunc i32 %169 to i8, !dbg !7344
  %170 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7345
  %coding_method112 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %170, i32 0, i32 1, !dbg !7346
  store i8 %conv111, i8* %coding_method112, align 2, !dbg !7347
  br label %if.end113, !dbg !7345

if.end113:                                        ; preds = %if.then110, %for.body93
  br label %for.inc114, !dbg !7348

for.inc114:                                       ; preds = %if.end113
  %171 = load i32, i32* %k, align 4, !dbg !7349
  %inc115 = add nsw i32 %171, 1, !dbg !7349
  store i32 %inc115, i32* %k, align 4, !dbg !7349
  br label %for.cond90, !dbg !7351, !llvm.loop !7352

for.end116:                                       ; preds = %for.cond90
  %172 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7354
  %chroma_y_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %172, i32 0, i32 8, !dbg !7356
  %173 = load i32, i32* %chroma_y_shift, align 4, !dbg !7356
  %tobool117 = icmp ne i32 %173, 0, !dbg !7354
  br i1 %tobool117, label %if.then118, label %if.else158, !dbg !7357

if.then118:                                       ; preds = %for.end116
  %174 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7358
  %all_fragments119 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %174, i32 0, i32 41, !dbg !7360
  %175 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments119, align 8, !dbg !7360
  %176 = load i32, i32* %mb_y, align 4, !dbg !7361
  %177 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7362
  %fragment_width120 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %177, i32 0, i32 39, !dbg !7363
  %arrayidx121 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width120, i64 0, i64 1, !dbg !7362
  %178 = load i32, i32* %arrayidx121, align 4, !dbg !7362
  %mul122 = mul nsw i32 %176, %178, !dbg !7364
  %idx.ext123 = sext i32 %mul122 to i64, !dbg !7365
  %add.ptr124 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %175, i64 %idx.ext123, !dbg !7365
  %179 = load i32, i32* %mb_x, align 4, !dbg !7366
  %idx.ext125 = sext i32 %179 to i64, !dbg !7367
  %add.ptr126 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %add.ptr124, i64 %idx.ext125, !dbg !7367
  store %struct.Vp3Fragment* %add.ptr126, %struct.Vp3Fragment** %frag, align 8, !dbg !7368
  %180 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7369
  %fragment_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %180, i32 0, i32 42, !dbg !7371
  %arrayidx127 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start, i64 0, i64 1, !dbg !7369
  %181 = load i32, i32* %arrayidx127, align 4, !dbg !7369
  %idxprom128 = sext i32 %181 to i64, !dbg !7372
  %182 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7372
  %arrayidx129 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %182, i64 %idxprom128, !dbg !7372
  %coding_method130 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx129, i32 0, i32 1, !dbg !7373
  %183 = load i8, i8* %coding_method130, align 2, !dbg !7373
  %conv131 = zext i8 %183 to i32, !dbg !7372
  %cmp132 = icmp ne i32 %conv131, 8, !dbg !7374
  br i1 %cmp132, label %if.then134, label %if.end141, !dbg !7375

if.then134:                                       ; preds = %if.then118
  %184 = load i32, i32* %coding_mode, align 4, !dbg !7376
  %conv135 = trunc i32 %184 to i8, !dbg !7376
  %185 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7378
  %fragment_start136 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %185, i32 0, i32 42, !dbg !7379
  %arrayidx137 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start136, i64 0, i64 1, !dbg !7378
  %186 = load i32, i32* %arrayidx137, align 4, !dbg !7378
  %idxprom138 = sext i32 %186 to i64, !dbg !7380
  %187 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7380
  %arrayidx139 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %187, i64 %idxprom138, !dbg !7380
  %coding_method140 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx139, i32 0, i32 1, !dbg !7381
  store i8 %conv135, i8* %coding_method140, align 2, !dbg !7382
  br label %if.end141, !dbg !7380

if.end141:                                        ; preds = %if.then134, %if.then118
  %188 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7383
  %fragment_start142 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %188, i32 0, i32 42, !dbg !7386
  %arrayidx143 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start142, i64 0, i64 2, !dbg !7383
  %189 = load i32, i32* %arrayidx143, align 8, !dbg !7383
  %idxprom144 = sext i32 %189 to i64, !dbg !7387
  %190 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7387
  %arrayidx145 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %190, i64 %idxprom144, !dbg !7387
  %coding_method146 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx145, i32 0, i32 1, !dbg !7388
  %191 = load i8, i8* %coding_method146, align 2, !dbg !7388
  %conv147 = zext i8 %191 to i32, !dbg !7387
  %cmp148 = icmp ne i32 %conv147, 8, !dbg !7389
  br i1 %cmp148, label %if.then150, label %if.end157, !dbg !7387

if.then150:                                       ; preds = %if.end141
  %192 = load i32, i32* %coding_mode, align 4, !dbg !7390
  %conv151 = trunc i32 %192 to i8, !dbg !7390
  %193 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7392
  %fragment_start152 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %193, i32 0, i32 42, !dbg !7393
  %arrayidx153 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start152, i64 0, i64 2, !dbg !7392
  %194 = load i32, i32* %arrayidx153, align 8, !dbg !7392
  %idxprom154 = sext i32 %194 to i64, !dbg !7394
  %195 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7394
  %arrayidx155 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %195, i64 %idxprom154, !dbg !7394
  %coding_method156 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx155, i32 0, i32 1, !dbg !7395
  store i8 %conv151, i8* %coding_method156, align 2, !dbg !7396
  br label %if.end157, !dbg !7394

if.end157:                                        ; preds = %if.then150, %if.end141
  br label %if.end268, !dbg !7397

if.else158:                                       ; preds = %for.end116
  %196 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7398
  %chroma_x_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %196, i32 0, i32 7, !dbg !7401
  %197 = load i32, i32* %chroma_x_shift, align 16, !dbg !7401
  %tobool159 = icmp ne i32 %197, 0, !dbg !7398
  br i1 %tobool159, label %if.then160, label %if.else213, !dbg !7398

if.then160:                                       ; preds = %if.else158
  %198 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7402
  %all_fragments161 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %198, i32 0, i32 41, !dbg !7404
  %199 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments161, align 8, !dbg !7404
  %200 = load i32, i32* %mb_y, align 4, !dbg !7405
  %mul162 = mul nsw i32 2, %200, !dbg !7406
  %201 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7407
  %fragment_width163 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %201, i32 0, i32 39, !dbg !7408
  %arrayidx164 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width163, i64 0, i64 1, !dbg !7407
  %202 = load i32, i32* %arrayidx164, align 4, !dbg !7407
  %mul165 = mul nsw i32 %mul162, %202, !dbg !7409
  %idx.ext166 = sext i32 %mul165 to i64, !dbg !7410
  %add.ptr167 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %199, i64 %idx.ext166, !dbg !7410
  %203 = load i32, i32* %mb_x, align 4, !dbg !7411
  %idx.ext168 = sext i32 %203 to i64, !dbg !7412
  %add.ptr169 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %add.ptr167, i64 %idx.ext168, !dbg !7412
  store %struct.Vp3Fragment* %add.ptr169, %struct.Vp3Fragment** %frag, align 8, !dbg !7413
  store i32 0, i32* %k, align 4, !dbg !7414
  br label %for.cond170, !dbg !7416

for.cond170:                                      ; preds = %for.inc210, %if.then160
  %204 = load i32, i32* %k, align 4, !dbg !7417
  %cmp171 = icmp slt i32 %204, 2, !dbg !7420
  br i1 %cmp171, label %for.body173, label %for.end212, !dbg !7421

for.body173:                                      ; preds = %for.cond170
  %205 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7422
  %fragment_start174 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %205, i32 0, i32 42, !dbg !7425
  %arrayidx175 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start174, i64 0, i64 1, !dbg !7422
  %206 = load i32, i32* %arrayidx175, align 4, !dbg !7422
  %idxprom176 = sext i32 %206 to i64, !dbg !7426
  %207 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7426
  %arrayidx177 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %207, i64 %idxprom176, !dbg !7426
  %coding_method178 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx177, i32 0, i32 1, !dbg !7427
  %208 = load i8, i8* %coding_method178, align 2, !dbg !7427
  %conv179 = zext i8 %208 to i32, !dbg !7426
  %cmp180 = icmp ne i32 %conv179, 8, !dbg !7428
  br i1 %cmp180, label %if.then182, label %if.end189, !dbg !7429

if.then182:                                       ; preds = %for.body173
  %209 = load i32, i32* %coding_mode, align 4, !dbg !7430
  %conv183 = trunc i32 %209 to i8, !dbg !7430
  %210 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7432
  %fragment_start184 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %210, i32 0, i32 42, !dbg !7433
  %arrayidx185 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start184, i64 0, i64 1, !dbg !7432
  %211 = load i32, i32* %arrayidx185, align 4, !dbg !7432
  %idxprom186 = sext i32 %211 to i64, !dbg !7434
  %212 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7434
  %arrayidx187 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %212, i64 %idxprom186, !dbg !7434
  %coding_method188 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx187, i32 0, i32 1, !dbg !7435
  store i8 %conv183, i8* %coding_method188, align 2, !dbg !7436
  br label %if.end189, !dbg !7434

if.end189:                                        ; preds = %if.then182, %for.body173
  %213 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7437
  %fragment_start190 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %213, i32 0, i32 42, !dbg !7440
  %arrayidx191 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start190, i64 0, i64 2, !dbg !7437
  %214 = load i32, i32* %arrayidx191, align 8, !dbg !7437
  %idxprom192 = sext i32 %214 to i64, !dbg !7441
  %215 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7441
  %arrayidx193 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %215, i64 %idxprom192, !dbg !7441
  %coding_method194 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx193, i32 0, i32 1, !dbg !7442
  %216 = load i8, i8* %coding_method194, align 2, !dbg !7442
  %conv195 = zext i8 %216 to i32, !dbg !7441
  %cmp196 = icmp ne i32 %conv195, 8, !dbg !7443
  br i1 %cmp196, label %if.then198, label %if.end205, !dbg !7441

if.then198:                                       ; preds = %if.end189
  %217 = load i32, i32* %coding_mode, align 4, !dbg !7444
  %conv199 = trunc i32 %217 to i8, !dbg !7444
  %218 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7446
  %fragment_start200 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %218, i32 0, i32 42, !dbg !7447
  %arrayidx201 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start200, i64 0, i64 2, !dbg !7446
  %219 = load i32, i32* %arrayidx201, align 8, !dbg !7446
  %idxprom202 = sext i32 %219 to i64, !dbg !7448
  %220 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7448
  %arrayidx203 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %220, i64 %idxprom202, !dbg !7448
  %coding_method204 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx203, i32 0, i32 1, !dbg !7449
  store i8 %conv199, i8* %coding_method204, align 2, !dbg !7450
  br label %if.end205, !dbg !7448

if.end205:                                        ; preds = %if.then198, %if.end189
  %221 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7451
  %fragment_width206 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %221, i32 0, i32 39, !dbg !7452
  %arrayidx207 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width206, i64 0, i64 1, !dbg !7451
  %222 = load i32, i32* %arrayidx207, align 4, !dbg !7451
  %223 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7453
  %idx.ext208 = sext i32 %222 to i64, !dbg !7453
  %add.ptr209 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %223, i64 %idx.ext208, !dbg !7453
  store %struct.Vp3Fragment* %add.ptr209, %struct.Vp3Fragment** %frag, align 8, !dbg !7453
  br label %for.inc210, !dbg !7454

for.inc210:                                       ; preds = %if.end205
  %224 = load i32, i32* %k, align 4, !dbg !7455
  %inc211 = add nsw i32 %224, 1, !dbg !7455
  store i32 %inc211, i32* %k, align 4, !dbg !7455
  br label %for.cond170, !dbg !7457, !llvm.loop !7458

for.end212:                                       ; preds = %for.cond170
  br label %if.end267, !dbg !7460

if.else213:                                       ; preds = %if.else158
  store i32 0, i32* %k, align 4, !dbg !7461
  br label %for.cond214, !dbg !7464

for.cond214:                                      ; preds = %for.inc264, %if.else213
  %225 = load i32, i32* %k, align 4, !dbg !7465
  %cmp215 = icmp slt i32 %225, 4, !dbg !7468
  br i1 %cmp215, label %for.body217, label %for.end266, !dbg !7469

for.body217:                                      ; preds = %for.cond214
  %226 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7470
  %all_fragments218 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %226, i32 0, i32 41, !dbg !7472
  %227 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments218, align 8, !dbg !7472
  %228 = load i32, i32* %mb_y, align 4, !dbg !7473
  %mul219 = mul nsw i32 2, %228, !dbg !7474
  %229 = load i32, i32* %k, align 4, !dbg !7475
  %shr220 = ashr i32 %229, 1, !dbg !7476
  %add221 = add nsw i32 %mul219, %shr220, !dbg !7477
  %230 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7478
  %fragment_width222 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %230, i32 0, i32 39, !dbg !7479
  %arrayidx223 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width222, i64 0, i64 1, !dbg !7478
  %231 = load i32, i32* %arrayidx223, align 4, !dbg !7478
  %mul224 = mul nsw i32 %add221, %231, !dbg !7480
  %idx.ext225 = sext i32 %mul224 to i64, !dbg !7481
  %add.ptr226 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %227, i64 %idx.ext225, !dbg !7481
  %232 = load i32, i32* %mb_x, align 4, !dbg !7482
  %mul227 = mul nsw i32 2, %232, !dbg !7483
  %233 = load i32, i32* %k, align 4, !dbg !7484
  %and228 = and i32 %233, 1, !dbg !7485
  %add229 = add nsw i32 %mul227, %and228, !dbg !7486
  %idx.ext230 = sext i32 %add229 to i64, !dbg !7487
  %add.ptr231 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %add.ptr226, i64 %idx.ext230, !dbg !7487
  store %struct.Vp3Fragment* %add.ptr231, %struct.Vp3Fragment** %frag, align 8, !dbg !7488
  %234 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7489
  %fragment_start232 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %234, i32 0, i32 42, !dbg !7491
  %arrayidx233 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start232, i64 0, i64 1, !dbg !7489
  %235 = load i32, i32* %arrayidx233, align 4, !dbg !7489
  %idxprom234 = sext i32 %235 to i64, !dbg !7492
  %236 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7492
  %arrayidx235 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %236, i64 %idxprom234, !dbg !7492
  %coding_method236 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx235, i32 0, i32 1, !dbg !7493
  %237 = load i8, i8* %coding_method236, align 2, !dbg !7493
  %conv237 = zext i8 %237 to i32, !dbg !7492
  %cmp238 = icmp ne i32 %conv237, 8, !dbg !7494
  br i1 %cmp238, label %if.then240, label %if.end247, !dbg !7495

if.then240:                                       ; preds = %for.body217
  %238 = load i32, i32* %coding_mode, align 4, !dbg !7496
  %conv241 = trunc i32 %238 to i8, !dbg !7496
  %239 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7498
  %fragment_start242 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %239, i32 0, i32 42, !dbg !7499
  %arrayidx243 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start242, i64 0, i64 1, !dbg !7498
  %240 = load i32, i32* %arrayidx243, align 4, !dbg !7498
  %idxprom244 = sext i32 %240 to i64, !dbg !7500
  %241 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7500
  %arrayidx245 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %241, i64 %idxprom244, !dbg !7500
  %coding_method246 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx245, i32 0, i32 1, !dbg !7501
  store i8 %conv241, i8* %coding_method246, align 2, !dbg !7502
  br label %if.end247, !dbg !7500

if.end247:                                        ; preds = %if.then240, %for.body217
  %242 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7503
  %fragment_start248 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %242, i32 0, i32 42, !dbg !7506
  %arrayidx249 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start248, i64 0, i64 2, !dbg !7503
  %243 = load i32, i32* %arrayidx249, align 8, !dbg !7503
  %idxprom250 = sext i32 %243 to i64, !dbg !7507
  %244 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7507
  %arrayidx251 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %244, i64 %idxprom250, !dbg !7507
  %coding_method252 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx251, i32 0, i32 1, !dbg !7508
  %245 = load i8, i8* %coding_method252, align 2, !dbg !7508
  %conv253 = zext i8 %245 to i32, !dbg !7507
  %cmp254 = icmp ne i32 %conv253, 8, !dbg !7509
  br i1 %cmp254, label %if.then256, label %if.end263, !dbg !7507

if.then256:                                       ; preds = %if.end247
  %246 = load i32, i32* %coding_mode, align 4, !dbg !7510
  %conv257 = trunc i32 %246 to i8, !dbg !7510
  %247 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7512
  %fragment_start258 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %247, i32 0, i32 42, !dbg !7513
  %arrayidx259 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start258, i64 0, i64 2, !dbg !7512
  %248 = load i32, i32* %arrayidx259, align 8, !dbg !7512
  %idxprom260 = sext i32 %248 to i64, !dbg !7514
  %249 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag, align 8, !dbg !7514
  %arrayidx261 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %249, i64 %idxprom260, !dbg !7514
  %coding_method262 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx261, i32 0, i32 1, !dbg !7515
  store i8 %conv257, i8* %coding_method262, align 2, !dbg !7516
  br label %if.end263, !dbg !7514

if.end263:                                        ; preds = %if.then256, %if.end247
  br label %for.inc264, !dbg !7517

for.inc264:                                       ; preds = %if.end263
  %250 = load i32, i32* %k, align 4, !dbg !7518
  %inc265 = add nsw i32 %250, 1, !dbg !7518
  store i32 %inc265, i32* %k, align 4, !dbg !7518
  br label %for.cond214, !dbg !7520, !llvm.loop !7521

for.end266:                                       ; preds = %for.cond214
  br label %if.end267

if.end267:                                        ; preds = %for.end266, %for.end212
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.end157
  br label %for.inc269, !dbg !7523

for.inc269:                                       ; preds = %if.end268, %if.then73, %if.then46
  %251 = load i32, i32* %j, align 4, !dbg !7524
  %inc270 = add nsw i32 %251, 1, !dbg !7524
  store i32 %inc270, i32* %j, align 4, !dbg !7524
  br label %for.cond34, !dbg !7526, !llvm.loop !7527

for.end271:                                       ; preds = %for.cond34
  br label %for.inc272, !dbg !7529

for.inc272:                                       ; preds = %for.end271
  %252 = load i32, i32* %sb_x, align 4, !dbg !7530
  %inc273 = add nsw i32 %252, 1, !dbg !7530
  store i32 %inc273, i32* %sb_x, align 4, !dbg !7530
  br label %for.cond27, !dbg !7532, !llvm.loop !7533

for.end274:                                       ; preds = %for.cond27
  br label %for.inc275, !dbg !7535

for.inc275:                                       ; preds = %for.end274
  %253 = load i32, i32* %sb_y, align 4, !dbg !7536
  %inc276 = add nsw i32 %253, 1, !dbg !7536
  store i32 %inc276, i32* %sb_y, align 4, !dbg !7536
  br label %for.cond24, !dbg !7538, !llvm.loop !7539

for.end277:                                       ; preds = %for.cond24
  br label %if.end278

if.end278:                                        ; preds = %for.end277, %for.end
  store i32 0, i32* %retval, align 4, !dbg !7541
  br label %return, !dbg !7541

return:                                           ; preds = %if.end278, %if.then32
  %254 = load i32, i32* %retval, align 4, !dbg !7542
  ret i32 %254, !dbg !7542
}

; Function Attrs: nounwind uwtable
define internal i32 @unpack_vectors(%struct.Vp3DecodeContext* %s, %struct.GetBitContext* %gb) #0 !dbg !7543 {
entry:
  %x.addr.i96.i796 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i796, metadata !4271, metadata !1942), !dbg !7544
  %x.addr.i81.i797 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i797, metadata !4271, metadata !1942), !dbg !7564
  %x.addr.i.i798 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i798, metadata !4271, metadata !1942), !dbg !7566
  %s.addr.i799 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i799, metadata !5689, metadata !1942), !dbg !7568
  %table.addr.i800 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i800, metadata !5691, metadata !1942), !dbg !7569
  %bits.addr.i801 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i801, metadata !5693, metadata !1942), !dbg !7570
  %max_depth.addr.i802 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i802, metadata !5695, metadata !1942), !dbg !7571
  %code.i803 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i803, metadata !5697, metadata !1942), !dbg !7572
  %re_index.i804 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i804, metadata !5699, metadata !1942), !dbg !7573
  %re_cache.i805 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i805, metadata !5701, metadata !1942), !dbg !7574
  %re_size_plus8.i806 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i806, metadata !5703, metadata !1942), !dbg !7575
  %n.i807 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i807, metadata !5705, metadata !1942), !dbg !7576
  %nb_bits.i808 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i808, metadata !5707, metadata !1942), !dbg !7577
  %index1.i809 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i809, metadata !5709, metadata !1942), !dbg !7578
  %x.addr.i96.i650 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i650, metadata !4271, metadata !1942), !dbg !7579
  %x.addr.i81.i651 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i651, metadata !4271, metadata !1942), !dbg !7582
  %x.addr.i.i652 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i652, metadata !4271, metadata !1942), !dbg !7584
  %s.addr.i653 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i653, metadata !5689, metadata !1942), !dbg !7586
  %table.addr.i654 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i654, metadata !5691, metadata !1942), !dbg !7587
  %bits.addr.i655 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i655, metadata !5693, metadata !1942), !dbg !7588
  %max_depth.addr.i656 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i656, metadata !5695, metadata !1942), !dbg !7589
  %code.i657 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i657, metadata !5697, metadata !1942), !dbg !7590
  %re_index.i658 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i658, metadata !5699, metadata !1942), !dbg !7591
  %re_cache.i659 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i659, metadata !5701, metadata !1942), !dbg !7592
  %re_size_plus8.i660 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i660, metadata !5703, metadata !1942), !dbg !7593
  %n.i661 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i661, metadata !5705, metadata !1942), !dbg !7594
  %nb_bits.i662 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i662, metadata !5707, metadata !1942), !dbg !7595
  %index1.i663 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i663, metadata !5709, metadata !1942), !dbg !7596
  %x.addr.i96.i504 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i504, metadata !4271, metadata !1942), !dbg !7597
  %x.addr.i81.i505 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i505, metadata !4271, metadata !1942), !dbg !7602
  %x.addr.i.i506 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i506, metadata !4271, metadata !1942), !dbg !7604
  %s.addr.i507 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i507, metadata !5689, metadata !1942), !dbg !7606
  %table.addr.i508 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i508, metadata !5691, metadata !1942), !dbg !7607
  %bits.addr.i509 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i509, metadata !5693, metadata !1942), !dbg !7608
  %max_depth.addr.i510 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i510, metadata !5695, metadata !1942), !dbg !7609
  %code.i511 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i511, metadata !5697, metadata !1942), !dbg !7610
  %re_index.i512 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i512, metadata !5699, metadata !1942), !dbg !7611
  %re_cache.i513 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i513, metadata !5701, metadata !1942), !dbg !7612
  %re_size_plus8.i514 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i514, metadata !5703, metadata !1942), !dbg !7613
  %n.i515 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i515, metadata !5705, metadata !1942), !dbg !7614
  %nb_bits.i516 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i516, metadata !5707, metadata !1942), !dbg !7615
  %index1.i517 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i517, metadata !5709, metadata !1942), !dbg !7616
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4271, metadata !1942), !dbg !7617
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4271, metadata !1942), !dbg !7620
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4271, metadata !1942), !dbg !7622
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5689, metadata !1942), !dbg !7624
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5691, metadata !1942), !dbg !7625
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5693, metadata !1942), !dbg !7626
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5695, metadata !1942), !dbg !7627
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5697, metadata !1942), !dbg !7628
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5699, metadata !1942), !dbg !7629
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5701, metadata !1942), !dbg !7630
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5703, metadata !1942), !dbg !7631
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5705, metadata !1942), !dbg !7632
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5707, metadata !1942), !dbg !7633
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5709, metadata !1942), !dbg !7634
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %sb_x = alloca i32, align 4
  %sb_y = alloca i32, align 4
  %coding_mode = alloca i32, align 4
  %motion_x = alloca [4 x i32], align 16
  %motion_y = alloca [4 x i32], align 16
  %last_motion_x = alloca i32, align 4
  %last_motion_y = alloca i32, align 4
  %prior_last_motion_x = alloca i32, align 4
  %prior_last_motion_y = alloca i32, align 4
  %current_macroblock = alloca i32, align 4
  %current_fragment = alloca i32, align 4
  %frag = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !7635, metadata !1942), !dbg !7636
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7637, metadata !1942), !dbg !7638
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7639, metadata !1942), !dbg !7640
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7641, metadata !1942), !dbg !7642
  call void @llvm.dbg.declare(metadata i32* %sb_x, metadata !7643, metadata !1942), !dbg !7644
  call void @llvm.dbg.declare(metadata i32* %sb_y, metadata !7645, metadata !1942), !dbg !7646
  call void @llvm.dbg.declare(metadata i32* %coding_mode, metadata !7647, metadata !1942), !dbg !7648
  call void @llvm.dbg.declare(metadata [4 x i32]* %motion_x, metadata !7649, metadata !1942), !dbg !7650
  call void @llvm.dbg.declare(metadata [4 x i32]* %motion_y, metadata !7651, metadata !1942), !dbg !7652
  call void @llvm.dbg.declare(metadata i32* %last_motion_x, metadata !7653, metadata !1942), !dbg !7654
  store i32 0, i32* %last_motion_x, align 4, !dbg !7654
  call void @llvm.dbg.declare(metadata i32* %last_motion_y, metadata !7655, metadata !1942), !dbg !7656
  store i32 0, i32* %last_motion_y, align 4, !dbg !7656
  call void @llvm.dbg.declare(metadata i32* %prior_last_motion_x, metadata !7657, metadata !1942), !dbg !7658
  store i32 0, i32* %prior_last_motion_x, align 4, !dbg !7658
  call void @llvm.dbg.declare(metadata i32* %prior_last_motion_y, metadata !7659, metadata !1942), !dbg !7660
  store i32 0, i32* %prior_last_motion_y, align 4, !dbg !7660
  call void @llvm.dbg.declare(metadata i32* %current_macroblock, metadata !7661, metadata !1942), !dbg !7662
  call void @llvm.dbg.declare(metadata i32* %current_fragment, metadata !7663, metadata !1942), !dbg !7664
  call void @llvm.dbg.declare(metadata i32* %frag, metadata !7665, metadata !1942), !dbg !7666
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7667
  %keyframe = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 12, !dbg !7669
  %1 = load i32, i32* %keyframe, align 8, !dbg !7669
  %tobool = icmp ne i32 %1, 0, !dbg !7667
  br i1 %tobool, label %if.then, label %if.end, !dbg !7670

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7671
  br label %return, !dbg !7671

if.end:                                           ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7672
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !7673
  store i32 %call, i32* %coding_mode, align 4, !dbg !7674
  store i32 0, i32* %sb_y, align 4, !dbg !7675
  br label %for.cond, !dbg !7676

for.cond:                                         ; preds = %for.inc501, %if.end
  %3 = load i32, i32* %sb_y, align 4, !dbg !7677
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7679
  %y_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 27, !dbg !7680
  %5 = load i32, i32* %y_superblock_height, align 16, !dbg !7680
  %cmp = icmp slt i32 %3, %5, !dbg !7681
  br i1 %cmp, label %for.body, label %for.end503, !dbg !7682

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb_x, align 4, !dbg !7683
  br label %for.cond1, !dbg !7684

for.cond1:                                        ; preds = %for.inc498, %for.body
  %6 = load i32, i32* %sb_x, align 4, !dbg !7685
  %7 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7687
  %y_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %7, i32 0, i32 26, !dbg !7688
  %8 = load i32, i32* %y_superblock_width, align 4, !dbg !7688
  %cmp2 = icmp slt i32 %6, %8, !dbg !7689
  br i1 %cmp2, label %for.body3, label %for.end500, !dbg !7690

for.body3:                                        ; preds = %for.cond1
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7691
  %call4 = call i32 @get_bits_left(%struct.GetBitContext* %9), !dbg !7693
  %cmp5 = icmp sle i32 %call4, 0, !dbg !7694
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7695

if.then6:                                         ; preds = %for.body3
  store i32 -1, i32* %retval, align 4, !dbg !7696
  br label %return, !dbg !7696

if.end7:                                          ; preds = %for.body3
  store i32 0, i32* %j, align 4, !dbg !7697
  br label %for.cond8, !dbg !7698

for.cond8:                                        ; preds = %for.inc495, %if.end7
  %10 = load i32, i32* %j, align 4, !dbg !7699
  %cmp9 = icmp slt i32 %10, 4, !dbg !7701
  br i1 %cmp9, label %for.body10, label %for.end497, !dbg !7702

for.body10:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata i32* %mb_x, metadata !7703, metadata !1942), !dbg !7704
  %11 = load i32, i32* %sb_x, align 4, !dbg !7705
  %mul = mul nsw i32 2, %11, !dbg !7706
  %12 = load i32, i32* %j, align 4, !dbg !7707
  %shr = ashr i32 %12, 1, !dbg !7708
  %add = add nsw i32 %mul, %shr, !dbg !7709
  store i32 %add, i32* %mb_x, align 4, !dbg !7704
  call void @llvm.dbg.declare(metadata i32* %mb_y, metadata !7710, metadata !1942), !dbg !7711
  %13 = load i32, i32* %sb_y, align 4, !dbg !7712
  %mul11 = mul nsw i32 2, %13, !dbg !7713
  %14 = load i32, i32* %j, align 4, !dbg !7714
  %shr12 = ashr i32 %14, 1, !dbg !7715
  %15 = load i32, i32* %j, align 4, !dbg !7716
  %add13 = add nsw i32 %shr12, %15, !dbg !7717
  %and = and i32 %add13, 1, !dbg !7718
  %add14 = add nsw i32 %mul11, %and, !dbg !7719
  store i32 %add14, i32* %mb_y, align 4, !dbg !7711
  %16 = load i32, i32* %mb_y, align 4, !dbg !7720
  %17 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7721
  %macroblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %17, i32 0, i32 36, !dbg !7722
  %18 = load i32, i32* %macroblock_width, align 4, !dbg !7722
  %mul15 = mul nsw i32 %16, %18, !dbg !7723
  %19 = load i32, i32* %mb_x, align 4, !dbg !7724
  %add16 = add nsw i32 %mul15, %19, !dbg !7725
  store i32 %add16, i32* %current_macroblock, align 4, !dbg !7726
  %20 = load i32, i32* %mb_x, align 4, !dbg !7727
  %21 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7729
  %macroblock_width17 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %21, i32 0, i32 36, !dbg !7730
  %22 = load i32, i32* %macroblock_width17, align 4, !dbg !7730
  %cmp18 = icmp sge i32 %20, %22, !dbg !7731
  br i1 %cmp18, label %if.then23, label %lor.lhs.false, !dbg !7732

lor.lhs.false:                                    ; preds = %for.body10
  %23 = load i32, i32* %mb_y, align 4, !dbg !7733
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7734
  %macroblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 37, !dbg !7735
  %25 = load i32, i32* %macroblock_height, align 16, !dbg !7735
  %cmp19 = icmp sge i32 %23, %25, !dbg !7736
  br i1 %cmp19, label %if.then23, label %lor.lhs.false20, !dbg !7737

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %26 = load i32, i32* %current_macroblock, align 4, !dbg !7738
  %idxprom = sext i32 %26 to i64, !dbg !7739
  %27 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7739
  %macroblock_coding = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %27, i32 0, i32 73, !dbg !7740
  %28 = load i8*, i8** %macroblock_coding, align 8, !dbg !7740
  %arrayidx = getelementptr inbounds i8, i8* %28, i64 %idxprom, !dbg !7739
  %29 = load i8, i8* %arrayidx, align 1, !dbg !7739
  %conv = zext i8 %29 to i32, !dbg !7739
  %cmp21 = icmp eq i32 %conv, 8, !dbg !7741
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !7742

if.then23:                                        ; preds = %lor.lhs.false20, %lor.lhs.false, %for.body10
  br label %for.inc495, !dbg !7744

if.end24:                                         ; preds = %lor.lhs.false20
  %30 = load i32, i32* %current_macroblock, align 4, !dbg !7745
  %idxprom25 = sext i32 %30 to i64, !dbg !7746
  %31 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7746
  %macroblock_coding26 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %31, i32 0, i32 73, !dbg !7747
  %32 = load i8*, i8** %macroblock_coding26, align 8, !dbg !7747
  %arrayidx27 = getelementptr inbounds i8, i8* %32, i64 %idxprom25, !dbg !7746
  %33 = load i8, i8* %arrayidx27, align 1, !dbg !7746
  %conv28 = zext i8 %33 to i32, !dbg !7746
  switch i32 %conv28, label %sw.default [
    i32 2, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb65
    i32 3, label %sw.bb128
    i32 4, label %sw.bb131
  ], !dbg !7748

sw.bb:                                            ; preds = %if.end24, %if.end24
  %34 = load i32, i32* %coding_mode, align 4, !dbg !7749
  %cmp29 = icmp eq i32 %34, 0, !dbg !7750
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !7751

if.then31:                                        ; preds = %sw.bb
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7752
  %36 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7753
  %motion_vector_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %36, i32 0, i32 70, !dbg !7754
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %motion_vector_vlc, i32 0, i32 1, !dbg !7755
  %37 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !7755
  store %struct.GetBitContext* %35, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7756
  store [2 x i16]* %37, [2 x i16]** %table.addr.i, align 8, !dbg !7756
  store i32 6, i32* %bits.addr.i, align 4, !dbg !7756
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !7756
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7757
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %38, i32 0, i32 2, !dbg !7758
  %39 = load i32, i32* %index.i, align 8, !dbg !7758
  store i32 %39, i32* %re_index.i, align 4, !dbg !7629
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7759
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %40, i32 0, i32 4, !dbg !7760
  %41 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !7760
  store i32 %41, i32* %re_size_plus8.i, align 4, !dbg !7631
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7761
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %42, i32 0, i32 0, !dbg !7762
  %43 = load i8*, i8** %buffer.i, align 8, !dbg !7762
  %44 = load i32, i32* %re_index.i, align 4, !dbg !7763
  %shr.i = lshr i32 %44, 3, !dbg !7764
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !7765
  %add.ptr.i = getelementptr inbounds i8, i8* %43, i64 %idx.ext.i, !dbg !7765
  %45 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !7766
  %l.i = bitcast %union.unaligned_32* %45 to i32*, !dbg !7766
  %46 = load i32, i32* %l.i, align 1, !dbg !7766
  store i32 %46, i32* %x.addr.i.i, align 4, !dbg !7767
  %47 = load i32, i32* %x.addr.i.i, align 4, !dbg !7768
  %shl.i.i = shl i32 %47, 8, !dbg !7769
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !7770
  %48 = load i32, i32* %x.addr.i.i, align 4, !dbg !7771
  %shr.i.i = lshr i32 %48, 8, !dbg !7772
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !7773
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !7774
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !7775
  %49 = load i32, i32* %x.addr.i.i, align 4, !dbg !7776
  %shr3.i.i = lshr i32 %49, 16, !dbg !7777
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !7778
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !7779
  %50 = load i32, i32* %x.addr.i.i, align 4, !dbg !7780
  %shr6.i.i = lshr i32 %50, 16, !dbg !7781
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !7782
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !7783
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !7784
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !7785
  %51 = load i32, i32* %re_index.i, align 4, !dbg !7786
  %and.i = and i32 %51, 7, !dbg !7787
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !7788
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !7789
  %52 = load i32, i32* %re_cache.i, align 4, !dbg !7790
  %53 = load i32, i32* %bits.addr.i, align 4, !dbg !7791
  %conv.i = trunc i32 %53 to i8, !dbg !7791
  %call2.i = call i32 @NEG_USR32(i32 %52, i8 signext %conv.i) #6, !dbg !7792
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !7793
  %54 = load i32, i32* %index1.i, align 4, !dbg !7794
  %idxprom.i = zext i32 %54 to i64, !dbg !7795
  %55 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7795
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %55, i64 %idxprom.i, !dbg !7795
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !7795
  %56 = load i16, i16* %arrayidx3.i, align 2, !dbg !7795
  %conv4.i = sext i16 %56 to i32, !dbg !7795
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !7796
  %57 = load i32, i32* %index1.i, align 4, !dbg !7797
  %idxprom5.i = zext i32 %57 to i64, !dbg !7798
  %58 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7798
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %58, i64 %idxprom5.i, !dbg !7798
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !7798
  %59 = load i16, i16* %arrayidx7.i, align 2, !dbg !7798
  %conv8.i = sext i16 %59 to i32, !dbg !7798
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !7799
  %60 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7800
  %cmp.i = icmp sgt i32 %60, 1, !dbg !7801
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !7802

land.lhs.true.i:                                  ; preds = %if.then31
  %61 = load i32, i32* %n.i, align 4, !dbg !7803
  %cmp10.i = icmp slt i32 %61, 0, !dbg !7804
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !7805

if.then.i:                                        ; preds = %land.lhs.true.i
  %62 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7806
  %63 = load i32, i32* %re_index.i, align 4, !dbg !7807
  %64 = load i32, i32* %bits.addr.i, align 4, !dbg !7808
  %add.i = add i32 %63, %64, !dbg !7809
  %cmp12.i = icmp ugt i32 %62, %add.i, !dbg !7810
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !7811

cond.true.i:                                      ; preds = %if.then.i
  %65 = load i32, i32* %re_index.i, align 4, !dbg !7812
  %66 = load i32, i32* %bits.addr.i, align 4, !dbg !7813
  %add14.i = add i32 %65, %66, !dbg !7814
  br label %cond.end.i, !dbg !7815

cond.false.i:                                     ; preds = %if.then.i
  %67 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7816
  br label %cond.end.i, !dbg !7817

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %67, %cond.false.i ], !dbg !7818
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !7819
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7820
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %68, i32 0, i32 0, !dbg !7821
  %69 = load i8*, i8** %buffer15.i, align 8, !dbg !7821
  %70 = load i32, i32* %re_index.i, align 4, !dbg !7822
  %shr16.i = lshr i32 %70, 3, !dbg !7823
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !7824
  %add.ptr18.i = getelementptr inbounds i8, i8* %69, i64 %idx.ext17.i, !dbg !7824
  %71 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !7825
  %l19.i = bitcast %union.unaligned_32* %71 to i32*, !dbg !7825
  %72 = load i32, i32* %l19.i, align 1, !dbg !7825
  store i32 %72, i32* %x.addr.i81.i, align 4, !dbg !7826
  %73 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7827
  %shl.i82.i = shl i32 %73, 8, !dbg !7828
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !7829
  %74 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7830
  %shr.i84.i = lshr i32 %74, 8, !dbg !7831
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !7832
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !7833
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !7834
  %75 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7835
  %shr3.i88.i = lshr i32 %75, 16, !dbg !7836
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !7837
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !7838
  %76 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7839
  %shr6.i91.i = lshr i32 %76, 16, !dbg !7840
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !7841
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !7842
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !7843
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !7844
  %77 = load i32, i32* %re_index.i, align 4, !dbg !7845
  %and21.i = and i32 %77, 7, !dbg !7846
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !7847
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !7848
  %78 = load i32, i32* %n.i, align 4, !dbg !7849
  %sub.i = sub nsw i32 0, %78, !dbg !7850
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !7851
  %79 = load i32, i32* %re_cache.i, align 4, !dbg !7852
  %80 = load i32, i32* %nb_bits.i, align 4, !dbg !7853
  %conv23.i = trunc i32 %80 to i8, !dbg !7853
  %call24.i = call i32 @NEG_USR32(i32 %79, i8 signext %conv23.i) #6, !dbg !7854
  %81 = load i32, i32* %code.i, align 4, !dbg !7855
  %add25.i = add i32 %call24.i, %81, !dbg !7856
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !7857
  %82 = load i32, i32* %index1.i, align 4, !dbg !7858
  %idxprom26.i = zext i32 %82 to i64, !dbg !7859
  %83 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7859
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %83, i64 %idxprom26.i, !dbg !7859
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !7859
  %84 = load i16, i16* %arrayidx28.i, align 2, !dbg !7859
  %conv29.i = sext i16 %84 to i32, !dbg !7859
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !7860
  %85 = load i32, i32* %index1.i, align 4, !dbg !7861
  %idxprom30.i = zext i32 %85 to i64, !dbg !7862
  %86 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7862
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %86, i64 %idxprom30.i, !dbg !7862
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !7862
  %87 = load i16, i16* %arrayidx32.i, align 2, !dbg !7862
  %conv33.i = sext i16 %87 to i32, !dbg !7862
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !7863
  %88 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7864
  %cmp34.i = icmp sgt i32 %88, 2, !dbg !7865
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !7866

land.lhs.true36.i:                                ; preds = %cond.end.i
  %89 = load i32, i32* %n.i, align 4, !dbg !7867
  %cmp37.i = icmp slt i32 %89, 0, !dbg !7868
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !7869

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %90 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7870
  %91 = load i32, i32* %re_index.i, align 4, !dbg !7871
  %92 = load i32, i32* %nb_bits.i, align 4, !dbg !7872
  %add40.i = add i32 %91, %92, !dbg !7873
  %cmp41.i = icmp ugt i32 %90, %add40.i, !dbg !7874
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !7875

cond.true43.i:                                    ; preds = %if.then39.i
  %93 = load i32, i32* %re_index.i, align 4, !dbg !7876
  %94 = load i32, i32* %nb_bits.i, align 4, !dbg !7877
  %add44.i = add i32 %93, %94, !dbg !7878
  br label %cond.end46.i, !dbg !7879

cond.false45.i:                                   ; preds = %if.then39.i
  %95 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7880
  br label %cond.end46.i, !dbg !7881

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %95, %cond.false45.i ], !dbg !7882
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !7883
  %96 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7884
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %96, i32 0, i32 0, !dbg !7885
  %97 = load i8*, i8** %buffer48.i, align 8, !dbg !7885
  %98 = load i32, i32* %re_index.i, align 4, !dbg !7886
  %shr49.i = lshr i32 %98, 3, !dbg !7887
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !7888
  %add.ptr51.i = getelementptr inbounds i8, i8* %97, i64 %idx.ext50.i, !dbg !7888
  %99 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !7889
  %l52.i = bitcast %union.unaligned_32* %99 to i32*, !dbg !7889
  %100 = load i32, i32* %l52.i, align 1, !dbg !7889
  store i32 %100, i32* %x.addr.i96.i, align 4, !dbg !7890
  %101 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7891
  %shl.i97.i = shl i32 %101, 8, !dbg !7892
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !7893
  %102 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7894
  %shr.i99.i = lshr i32 %102, 8, !dbg !7895
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !7896
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !7897
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !7898
  %103 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7899
  %shr3.i103.i = lshr i32 %103, 16, !dbg !7900
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !7901
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !7902
  %104 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7903
  %shr6.i106.i = lshr i32 %104, 16, !dbg !7904
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !7905
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !7906
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !7907
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !7908
  %105 = load i32, i32* %re_index.i, align 4, !dbg !7909
  %and54.i = and i32 %105, 7, !dbg !7910
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !7911
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !7912
  %106 = load i32, i32* %n.i, align 4, !dbg !7913
  %sub56.i = sub nsw i32 0, %106, !dbg !7914
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !7915
  %107 = load i32, i32* %re_cache.i, align 4, !dbg !7916
  %108 = load i32, i32* %nb_bits.i, align 4, !dbg !7917
  %conv57.i = trunc i32 %108 to i8, !dbg !7917
  %call58.i = call i32 @NEG_USR32(i32 %107, i8 signext %conv57.i) #6, !dbg !7918
  %109 = load i32, i32* %code.i, align 4, !dbg !7919
  %add59.i = add i32 %call58.i, %109, !dbg !7920
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !7921
  %110 = load i32, i32* %index1.i, align 4, !dbg !7922
  %idxprom60.i = zext i32 %110 to i64, !dbg !7923
  %111 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7923
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %111, i64 %idxprom60.i, !dbg !7923
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !7923
  %112 = load i16, i16* %arrayidx62.i, align 2, !dbg !7923
  %conv63.i = sext i16 %112 to i32, !dbg !7923
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !7924
  %113 = load i32, i32* %index1.i, align 4, !dbg !7925
  %idxprom64.i = zext i32 %113 to i64, !dbg !7926
  %114 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7926
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %114, i64 %idxprom64.i, !dbg !7926
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !7926
  %115 = load i16, i16* %arrayidx66.i, align 2, !dbg !7926
  %conv67.i = sext i16 %115 to i32, !dbg !7926
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !7927
  br label %if.end.i, !dbg !7928

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !7929

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.then31
  %116 = load i32, i32* %n.i, align 4, !dbg !7930
  %117 = load i32, i32* %re_cache.i, align 4, !dbg !7931
  %shl70.i = shl i32 %117, %116, !dbg !7931
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !7931
  %118 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7932
  %119 = load i32, i32* %re_index.i, align 4, !dbg !7933
  %120 = load i32, i32* %n.i, align 4, !dbg !7934
  %add71.i = add i32 %119, %120, !dbg !7935
  %cmp72.i = icmp ugt i32 %118, %add71.i, !dbg !7936
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !7937

cond.true74.i:                                    ; preds = %if.end68.i
  %121 = load i32, i32* %re_index.i, align 4, !dbg !7938
  %122 = load i32, i32* %n.i, align 4, !dbg !7939
  %add75.i = add i32 %121, %122, !dbg !7940
  br label %get_vlc2.exit, !dbg !7941

cond.false76.i:                                   ; preds = %if.end68.i
  %123 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7942
  br label %get_vlc2.exit, !dbg !7943

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %123, %cond.false76.i ], !dbg !7944
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !7945
  %124 = load i32, i32* %re_index.i, align 4, !dbg !7946
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7947
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %125, i32 0, i32 2, !dbg !7948
  store i32 %124, i32* %index80.i, align 8, !dbg !7949
  %126 = load i32, i32* %code.i, align 4, !dbg !7950
  %idxprom33 = sext i32 %126 to i64, !dbg !7951
  %arrayidx34 = getelementptr inbounds [63 x i8], [63 x i8]* @motion_vector_table, i64 0, i64 %idxprom33, !dbg !7951
  %127 = load i8, i8* %arrayidx34, align 1, !dbg !7951
  %conv35 = sext i8 %127 to i32, !dbg !7951
  %arrayidx36 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !7952
  store i32 %conv35, i32* %arrayidx36, align 16, !dbg !7953
  %128 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7954
  %129 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !7955
  %motion_vector_vlc37 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %129, i32 0, i32 70, !dbg !7956
  %table38 = getelementptr inbounds %struct.VLC, %struct.VLC* %motion_vector_vlc37, i32 0, i32 1, !dbg !7957
  %130 = load [2 x i16]*, [2 x i16]** %table38, align 8, !dbg !7957
  store %struct.GetBitContext* %128, %struct.GetBitContext** %s.addr.i507, align 8, !dbg !7958
  store [2 x i16]* %130, [2 x i16]** %table.addr.i508, align 8, !dbg !7958
  store i32 6, i32* %bits.addr.i509, align 4, !dbg !7958
  store i32 2, i32* %max_depth.addr.i510, align 4, !dbg !7958
  %131 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i507, align 8, !dbg !7959
  %index.i518 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %131, i32 0, i32 2, !dbg !7960
  %132 = load i32, i32* %index.i518, align 8, !dbg !7960
  store i32 %132, i32* %re_index.i512, align 4, !dbg !7611
  %133 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i507, align 8, !dbg !7961
  %size_in_bits_plus8.i519 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %133, i32 0, i32 4, !dbg !7962
  %134 = load i32, i32* %size_in_bits_plus8.i519, align 8, !dbg !7962
  store i32 %134, i32* %re_size_plus8.i514, align 4, !dbg !7613
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i507, align 8, !dbg !7963
  %buffer.i520 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %135, i32 0, i32 0, !dbg !7964
  %136 = load i8*, i8** %buffer.i520, align 8, !dbg !7964
  %137 = load i32, i32* %re_index.i512, align 4, !dbg !7965
  %shr.i521 = lshr i32 %137, 3, !dbg !7966
  %idx.ext.i522 = zext i32 %shr.i521 to i64, !dbg !7967
  %add.ptr.i523 = getelementptr inbounds i8, i8* %136, i64 %idx.ext.i522, !dbg !7967
  %138 = bitcast i8* %add.ptr.i523 to %union.unaligned_32*, !dbg !7968
  %l.i524 = bitcast %union.unaligned_32* %138 to i32*, !dbg !7968
  %139 = load i32, i32* %l.i524, align 1, !dbg !7968
  store i32 %139, i32* %x.addr.i.i506, align 4, !dbg !7969
  %140 = load i32, i32* %x.addr.i.i506, align 4, !dbg !7970
  %shl.i.i525 = shl i32 %140, 8, !dbg !7971
  %and.i.i526 = and i32 %shl.i.i525, 65280, !dbg !7972
  %141 = load i32, i32* %x.addr.i.i506, align 4, !dbg !7973
  %shr.i.i527 = lshr i32 %141, 8, !dbg !7974
  %and1.i.i528 = and i32 %shr.i.i527, 255, !dbg !7975
  %or.i.i529 = or i32 %and.i.i526, %and1.i.i528, !dbg !7976
  %shl2.i.i530 = shl i32 %or.i.i529, 16, !dbg !7977
  %142 = load i32, i32* %x.addr.i.i506, align 4, !dbg !7978
  %shr3.i.i531 = lshr i32 %142, 16, !dbg !7979
  %shl4.i.i532 = shl i32 %shr3.i.i531, 8, !dbg !7980
  %and5.i.i533 = and i32 %shl4.i.i532, 65280, !dbg !7981
  %143 = load i32, i32* %x.addr.i.i506, align 4, !dbg !7982
  %shr6.i.i534 = lshr i32 %143, 16, !dbg !7983
  %shr7.i.i535 = lshr i32 %shr6.i.i534, 8, !dbg !7984
  %and8.i.i536 = and i32 %shr7.i.i535, 255, !dbg !7985
  %or9.i.i537 = or i32 %and5.i.i533, %and8.i.i536, !dbg !7986
  %or10.i.i538 = or i32 %shl2.i.i530, %or9.i.i537, !dbg !7987
  %144 = load i32, i32* %re_index.i512, align 4, !dbg !7988
  %and.i539 = and i32 %144, 7, !dbg !7989
  %shl.i540 = shl i32 %or10.i.i538, %and.i539, !dbg !7990
  store i32 %shl.i540, i32* %re_cache.i513, align 4, !dbg !7991
  %145 = load i32, i32* %re_cache.i513, align 4, !dbg !7992
  %146 = load i32, i32* %bits.addr.i509, align 4, !dbg !7993
  %conv.i541 = trunc i32 %146 to i8, !dbg !7993
  %call2.i542 = call i32 @NEG_USR32(i32 %145, i8 signext %conv.i541) #6, !dbg !7994
  store i32 %call2.i542, i32* %index1.i517, align 4, !dbg !7995
  %147 = load i32, i32* %index1.i517, align 4, !dbg !7996
  %idxprom.i543 = zext i32 %147 to i64, !dbg !7997
  %148 = load [2 x i16]*, [2 x i16]** %table.addr.i508, align 8, !dbg !7997
  %arrayidx.i544 = getelementptr inbounds [2 x i16], [2 x i16]* %148, i64 %idxprom.i543, !dbg !7997
  %arrayidx3.i545 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i544, i64 0, i64 0, !dbg !7997
  %149 = load i16, i16* %arrayidx3.i545, align 2, !dbg !7997
  %conv4.i546 = sext i16 %149 to i32, !dbg !7997
  store i32 %conv4.i546, i32* %code.i511, align 4, !dbg !7998
  %150 = load i32, i32* %index1.i517, align 4, !dbg !7999
  %idxprom5.i547 = zext i32 %150 to i64, !dbg !8000
  %151 = load [2 x i16]*, [2 x i16]** %table.addr.i508, align 8, !dbg !8000
  %arrayidx6.i548 = getelementptr inbounds [2 x i16], [2 x i16]* %151, i64 %idxprom5.i547, !dbg !8000
  %arrayidx7.i549 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i548, i64 0, i64 1, !dbg !8000
  %152 = load i16, i16* %arrayidx7.i549, align 2, !dbg !8000
  %conv8.i550 = sext i16 %152 to i32, !dbg !8000
  store i32 %conv8.i550, i32* %n.i515, align 4, !dbg !8001
  %153 = load i32, i32* %max_depth.addr.i510, align 4, !dbg !8002
  %cmp.i551 = icmp sgt i32 %153, 1, !dbg !8003
  br i1 %cmp.i551, label %land.lhs.true.i553, label %if.end68.i640, !dbg !8004

land.lhs.true.i553:                               ; preds = %get_vlc2.exit
  %154 = load i32, i32* %n.i515, align 4, !dbg !8005
  %cmp10.i552 = icmp slt i32 %154, 0, !dbg !8006
  br i1 %cmp10.i552, label %if.then.i556, label %if.end68.i640, !dbg !8007

if.then.i556:                                     ; preds = %land.lhs.true.i553
  %155 = load i32, i32* %re_size_plus8.i514, align 4, !dbg !8008
  %156 = load i32, i32* %re_index.i512, align 4, !dbg !8009
  %157 = load i32, i32* %bits.addr.i509, align 4, !dbg !8010
  %add.i554 = add i32 %156, %157, !dbg !8011
  %cmp12.i555 = icmp ugt i32 %155, %add.i554, !dbg !8012
  br i1 %cmp12.i555, label %cond.true.i558, label %cond.false.i559, !dbg !8013

cond.true.i558:                                   ; preds = %if.then.i556
  %158 = load i32, i32* %re_index.i512, align 4, !dbg !8014
  %159 = load i32, i32* %bits.addr.i509, align 4, !dbg !8015
  %add14.i557 = add i32 %158, %159, !dbg !8016
  br label %cond.end.i595, !dbg !8017

cond.false.i559:                                  ; preds = %if.then.i556
  %160 = load i32, i32* %re_size_plus8.i514, align 4, !dbg !8018
  br label %cond.end.i595, !dbg !8019

cond.end.i595:                                    ; preds = %cond.false.i559, %cond.true.i558
  %cond.i560 = phi i32 [ %add14.i557, %cond.true.i558 ], [ %160, %cond.false.i559 ], !dbg !8020
  store i32 %cond.i560, i32* %re_index.i512, align 4, !dbg !8021
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i507, align 8, !dbg !8022
  %buffer15.i561 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %161, i32 0, i32 0, !dbg !8023
  %162 = load i8*, i8** %buffer15.i561, align 8, !dbg !8023
  %163 = load i32, i32* %re_index.i512, align 4, !dbg !8024
  %shr16.i562 = lshr i32 %163, 3, !dbg !8025
  %idx.ext17.i563 = zext i32 %shr16.i562 to i64, !dbg !8026
  %add.ptr18.i564 = getelementptr inbounds i8, i8* %162, i64 %idx.ext17.i563, !dbg !8026
  %164 = bitcast i8* %add.ptr18.i564 to %union.unaligned_32*, !dbg !8027
  %l19.i565 = bitcast %union.unaligned_32* %164 to i32*, !dbg !8027
  %165 = load i32, i32* %l19.i565, align 1, !dbg !8027
  store i32 %165, i32* %x.addr.i81.i505, align 4, !dbg !8028
  %166 = load i32, i32* %x.addr.i81.i505, align 4, !dbg !8029
  %shl.i82.i566 = shl i32 %166, 8, !dbg !8030
  %and.i83.i567 = and i32 %shl.i82.i566, 65280, !dbg !8031
  %167 = load i32, i32* %x.addr.i81.i505, align 4, !dbg !8032
  %shr.i84.i568 = lshr i32 %167, 8, !dbg !8033
  %and1.i85.i569 = and i32 %shr.i84.i568, 255, !dbg !8034
  %or.i86.i570 = or i32 %and.i83.i567, %and1.i85.i569, !dbg !8035
  %shl2.i87.i571 = shl i32 %or.i86.i570, 16, !dbg !8036
  %168 = load i32, i32* %x.addr.i81.i505, align 4, !dbg !8037
  %shr3.i88.i572 = lshr i32 %168, 16, !dbg !8038
  %shl4.i89.i573 = shl i32 %shr3.i88.i572, 8, !dbg !8039
  %and5.i90.i574 = and i32 %shl4.i89.i573, 65280, !dbg !8040
  %169 = load i32, i32* %x.addr.i81.i505, align 4, !dbg !8041
  %shr6.i91.i575 = lshr i32 %169, 16, !dbg !8042
  %shr7.i92.i576 = lshr i32 %shr6.i91.i575, 8, !dbg !8043
  %and8.i93.i577 = and i32 %shr7.i92.i576, 255, !dbg !8044
  %or9.i94.i578 = or i32 %and5.i90.i574, %and8.i93.i577, !dbg !8045
  %or10.i95.i579 = or i32 %shl2.i87.i571, %or9.i94.i578, !dbg !8046
  %170 = load i32, i32* %re_index.i512, align 4, !dbg !8047
  %and21.i580 = and i32 %170, 7, !dbg !8048
  %shl22.i581 = shl i32 %or10.i95.i579, %and21.i580, !dbg !8049
  store i32 %shl22.i581, i32* %re_cache.i513, align 4, !dbg !8050
  %171 = load i32, i32* %n.i515, align 4, !dbg !8051
  %sub.i582 = sub nsw i32 0, %171, !dbg !8052
  store i32 %sub.i582, i32* %nb_bits.i516, align 4, !dbg !8053
  %172 = load i32, i32* %re_cache.i513, align 4, !dbg !8054
  %173 = load i32, i32* %nb_bits.i516, align 4, !dbg !8055
  %conv23.i583 = trunc i32 %173 to i8, !dbg !8055
  %call24.i584 = call i32 @NEG_USR32(i32 %172, i8 signext %conv23.i583) #6, !dbg !8056
  %174 = load i32, i32* %code.i511, align 4, !dbg !8057
  %add25.i585 = add i32 %call24.i584, %174, !dbg !8058
  store i32 %add25.i585, i32* %index1.i517, align 4, !dbg !8059
  %175 = load i32, i32* %index1.i517, align 4, !dbg !8060
  %idxprom26.i586 = zext i32 %175 to i64, !dbg !8061
  %176 = load [2 x i16]*, [2 x i16]** %table.addr.i508, align 8, !dbg !8061
  %arrayidx27.i587 = getelementptr inbounds [2 x i16], [2 x i16]* %176, i64 %idxprom26.i586, !dbg !8061
  %arrayidx28.i588 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i587, i64 0, i64 0, !dbg !8061
  %177 = load i16, i16* %arrayidx28.i588, align 2, !dbg !8061
  %conv29.i589 = sext i16 %177 to i32, !dbg !8061
  store i32 %conv29.i589, i32* %code.i511, align 4, !dbg !8062
  %178 = load i32, i32* %index1.i517, align 4, !dbg !8063
  %idxprom30.i590 = zext i32 %178 to i64, !dbg !8064
  %179 = load [2 x i16]*, [2 x i16]** %table.addr.i508, align 8, !dbg !8064
  %arrayidx31.i591 = getelementptr inbounds [2 x i16], [2 x i16]* %179, i64 %idxprom30.i590, !dbg !8064
  %arrayidx32.i592 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i591, i64 0, i64 1, !dbg !8064
  %180 = load i16, i16* %arrayidx32.i592, align 2, !dbg !8064
  %conv33.i593 = sext i16 %180 to i32, !dbg !8064
  store i32 %conv33.i593, i32* %n.i515, align 4, !dbg !8065
  %181 = load i32, i32* %max_depth.addr.i510, align 4, !dbg !8066
  %cmp34.i594 = icmp sgt i32 %181, 2, !dbg !8067
  br i1 %cmp34.i594, label %land.lhs.true36.i597, label %if.end.i639, !dbg !8068

land.lhs.true36.i597:                             ; preds = %cond.end.i595
  %182 = load i32, i32* %n.i515, align 4, !dbg !8069
  %cmp37.i596 = icmp slt i32 %182, 0, !dbg !8070
  br i1 %cmp37.i596, label %if.then39.i600, label %if.end.i639, !dbg !8071

if.then39.i600:                                   ; preds = %land.lhs.true36.i597
  %183 = load i32, i32* %re_size_plus8.i514, align 4, !dbg !8072
  %184 = load i32, i32* %re_index.i512, align 4, !dbg !8073
  %185 = load i32, i32* %nb_bits.i516, align 4, !dbg !8074
  %add40.i598 = add i32 %184, %185, !dbg !8075
  %cmp41.i599 = icmp ugt i32 %183, %add40.i598, !dbg !8076
  br i1 %cmp41.i599, label %cond.true43.i602, label %cond.false45.i603, !dbg !8077

cond.true43.i602:                                 ; preds = %if.then39.i600
  %186 = load i32, i32* %re_index.i512, align 4, !dbg !8078
  %187 = load i32, i32* %nb_bits.i516, align 4, !dbg !8079
  %add44.i601 = add i32 %186, %187, !dbg !8080
  br label %cond.end46.i638, !dbg !8081

cond.false45.i603:                                ; preds = %if.then39.i600
  %188 = load i32, i32* %re_size_plus8.i514, align 4, !dbg !8082
  br label %cond.end46.i638, !dbg !8083

cond.end46.i638:                                  ; preds = %cond.false45.i603, %cond.true43.i602
  %cond47.i604 = phi i32 [ %add44.i601, %cond.true43.i602 ], [ %188, %cond.false45.i603 ], !dbg !8084
  store i32 %cond47.i604, i32* %re_index.i512, align 4, !dbg !8085
  %189 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i507, align 8, !dbg !8086
  %buffer48.i605 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %189, i32 0, i32 0, !dbg !8087
  %190 = load i8*, i8** %buffer48.i605, align 8, !dbg !8087
  %191 = load i32, i32* %re_index.i512, align 4, !dbg !8088
  %shr49.i606 = lshr i32 %191, 3, !dbg !8089
  %idx.ext50.i607 = zext i32 %shr49.i606 to i64, !dbg !8090
  %add.ptr51.i608 = getelementptr inbounds i8, i8* %190, i64 %idx.ext50.i607, !dbg !8090
  %192 = bitcast i8* %add.ptr51.i608 to %union.unaligned_32*, !dbg !8091
  %l52.i609 = bitcast %union.unaligned_32* %192 to i32*, !dbg !8091
  %193 = load i32, i32* %l52.i609, align 1, !dbg !8091
  store i32 %193, i32* %x.addr.i96.i504, align 4, !dbg !8092
  %194 = load i32, i32* %x.addr.i96.i504, align 4, !dbg !8093
  %shl.i97.i610 = shl i32 %194, 8, !dbg !8094
  %and.i98.i611 = and i32 %shl.i97.i610, 65280, !dbg !8095
  %195 = load i32, i32* %x.addr.i96.i504, align 4, !dbg !8096
  %shr.i99.i612 = lshr i32 %195, 8, !dbg !8097
  %and1.i100.i613 = and i32 %shr.i99.i612, 255, !dbg !8098
  %or.i101.i614 = or i32 %and.i98.i611, %and1.i100.i613, !dbg !8099
  %shl2.i102.i615 = shl i32 %or.i101.i614, 16, !dbg !8100
  %196 = load i32, i32* %x.addr.i96.i504, align 4, !dbg !8101
  %shr3.i103.i616 = lshr i32 %196, 16, !dbg !8102
  %shl4.i104.i617 = shl i32 %shr3.i103.i616, 8, !dbg !8103
  %and5.i105.i618 = and i32 %shl4.i104.i617, 65280, !dbg !8104
  %197 = load i32, i32* %x.addr.i96.i504, align 4, !dbg !8105
  %shr6.i106.i619 = lshr i32 %197, 16, !dbg !8106
  %shr7.i107.i620 = lshr i32 %shr6.i106.i619, 8, !dbg !8107
  %and8.i108.i621 = and i32 %shr7.i107.i620, 255, !dbg !8108
  %or9.i109.i622 = or i32 %and5.i105.i618, %and8.i108.i621, !dbg !8109
  %or10.i110.i623 = or i32 %shl2.i102.i615, %or9.i109.i622, !dbg !8110
  %198 = load i32, i32* %re_index.i512, align 4, !dbg !8111
  %and54.i624 = and i32 %198, 7, !dbg !8112
  %shl55.i625 = shl i32 %or10.i110.i623, %and54.i624, !dbg !8113
  store i32 %shl55.i625, i32* %re_cache.i513, align 4, !dbg !8114
  %199 = load i32, i32* %n.i515, align 4, !dbg !8115
  %sub56.i626 = sub nsw i32 0, %199, !dbg !8116
  store i32 %sub56.i626, i32* %nb_bits.i516, align 4, !dbg !8117
  %200 = load i32, i32* %re_cache.i513, align 4, !dbg !8118
  %201 = load i32, i32* %nb_bits.i516, align 4, !dbg !8119
  %conv57.i627 = trunc i32 %201 to i8, !dbg !8119
  %call58.i628 = call i32 @NEG_USR32(i32 %200, i8 signext %conv57.i627) #6, !dbg !8120
  %202 = load i32, i32* %code.i511, align 4, !dbg !8121
  %add59.i629 = add i32 %call58.i628, %202, !dbg !8122
  store i32 %add59.i629, i32* %index1.i517, align 4, !dbg !8123
  %203 = load i32, i32* %index1.i517, align 4, !dbg !8124
  %idxprom60.i630 = zext i32 %203 to i64, !dbg !8125
  %204 = load [2 x i16]*, [2 x i16]** %table.addr.i508, align 8, !dbg !8125
  %arrayidx61.i631 = getelementptr inbounds [2 x i16], [2 x i16]* %204, i64 %idxprom60.i630, !dbg !8125
  %arrayidx62.i632 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i631, i64 0, i64 0, !dbg !8125
  %205 = load i16, i16* %arrayidx62.i632, align 2, !dbg !8125
  %conv63.i633 = sext i16 %205 to i32, !dbg !8125
  store i32 %conv63.i633, i32* %code.i511, align 4, !dbg !8126
  %206 = load i32, i32* %index1.i517, align 4, !dbg !8127
  %idxprom64.i634 = zext i32 %206 to i64, !dbg !8128
  %207 = load [2 x i16]*, [2 x i16]** %table.addr.i508, align 8, !dbg !8128
  %arrayidx65.i635 = getelementptr inbounds [2 x i16], [2 x i16]* %207, i64 %idxprom64.i634, !dbg !8128
  %arrayidx66.i636 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i635, i64 0, i64 1, !dbg !8128
  %208 = load i16, i16* %arrayidx66.i636, align 2, !dbg !8128
  %conv67.i637 = sext i16 %208 to i32, !dbg !8128
  store i32 %conv67.i637, i32* %n.i515, align 4, !dbg !8129
  br label %if.end.i639, !dbg !8130

if.end.i639:                                      ; preds = %cond.end46.i638, %land.lhs.true36.i597, %cond.end.i595
  br label %if.end68.i640, !dbg !8131

if.end68.i640:                                    ; preds = %if.end.i639, %land.lhs.true.i553, %get_vlc2.exit
  %209 = load i32, i32* %n.i515, align 4, !dbg !8132
  %210 = load i32, i32* %re_cache.i513, align 4, !dbg !8133
  %shl70.i641 = shl i32 %210, %209, !dbg !8133
  store i32 %shl70.i641, i32* %re_cache.i513, align 4, !dbg !8133
  %211 = load i32, i32* %re_size_plus8.i514, align 4, !dbg !8134
  %212 = load i32, i32* %re_index.i512, align 4, !dbg !8135
  %213 = load i32, i32* %n.i515, align 4, !dbg !8136
  %add71.i642 = add i32 %212, %213, !dbg !8137
  %cmp72.i643 = icmp ugt i32 %211, %add71.i642, !dbg !8138
  br i1 %cmp72.i643, label %cond.true74.i645, label %cond.false76.i646, !dbg !8139

cond.true74.i645:                                 ; preds = %if.end68.i640
  %214 = load i32, i32* %re_index.i512, align 4, !dbg !8140
  %215 = load i32, i32* %n.i515, align 4, !dbg !8141
  %add75.i644 = add i32 %214, %215, !dbg !8142
  br label %get_vlc2.exit649, !dbg !8143

cond.false76.i646:                                ; preds = %if.end68.i640
  %216 = load i32, i32* %re_size_plus8.i514, align 4, !dbg !8144
  br label %get_vlc2.exit649, !dbg !8145

get_vlc2.exit649:                                 ; preds = %cond.true74.i645, %cond.false76.i646
  %cond78.i647 = phi i32 [ %add75.i644, %cond.true74.i645 ], [ %216, %cond.false76.i646 ], !dbg !8146
  store i32 %cond78.i647, i32* %re_index.i512, align 4, !dbg !8147
  %217 = load i32, i32* %re_index.i512, align 4, !dbg !8148
  %218 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i507, align 8, !dbg !8149
  %index80.i648 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %218, i32 0, i32 2, !dbg !8150
  store i32 %217, i32* %index80.i648, align 8, !dbg !8151
  %219 = load i32, i32* %code.i511, align 4, !dbg !8152
  %idxprom40 = sext i32 %219 to i64, !dbg !8153
  %arrayidx41 = getelementptr inbounds [63 x i8], [63 x i8]* @motion_vector_table, i64 0, i64 %idxprom40, !dbg !8153
  %220 = load i8, i8* %arrayidx41, align 1, !dbg !8153
  %conv42 = sext i8 %220 to i32, !dbg !8153
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8154
  store i32 %conv42, i32* %arrayidx43, align 16, !dbg !8155
  br label %if.end54, !dbg !8156

if.else:                                          ; preds = %sw.bb
  %221 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8157
  %call44 = call i32 @get_bits(%struct.GetBitContext* %221, i32 6), !dbg !8159
  %idxprom45 = zext i32 %call44 to i64, !dbg !8160
  %arrayidx46 = getelementptr inbounds [64 x i8], [64 x i8]* @fixed_motion_vector_table, i64 0, i64 %idxprom45, !dbg !8160
  %222 = load i8, i8* %arrayidx46, align 1, !dbg !8160
  %conv47 = sext i8 %222 to i32, !dbg !8160
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8161
  store i32 %conv47, i32* %arrayidx48, align 16, !dbg !8162
  %223 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8163
  %call49 = call i32 @get_bits(%struct.GetBitContext* %223, i32 6), !dbg !8164
  %idxprom50 = zext i32 %call49 to i64, !dbg !8165
  %arrayidx51 = getelementptr inbounds [64 x i8], [64 x i8]* @fixed_motion_vector_table, i64 0, i64 %idxprom50, !dbg !8165
  %224 = load i8, i8* %arrayidx51, align 1, !dbg !8165
  %conv52 = sext i8 %224 to i32, !dbg !8165
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8166
  store i32 %conv52, i32* %arrayidx53, align 16, !dbg !8167
  br label %if.end54

if.end54:                                         ; preds = %if.else, %get_vlc2.exit649
  %225 = load i32, i32* %current_macroblock, align 4, !dbg !8168
  %idxprom55 = sext i32 %225 to i64, !dbg !8170
  %226 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8170
  %macroblock_coding56 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %226, i32 0, i32 73, !dbg !8171
  %227 = load i8*, i8** %macroblock_coding56, align 8, !dbg !8171
  %arrayidx57 = getelementptr inbounds i8, i8* %227, i64 %idxprom55, !dbg !8170
  %228 = load i8, i8* %arrayidx57, align 1, !dbg !8170
  %conv58 = zext i8 %228 to i32, !dbg !8170
  %cmp59 = icmp eq i32 %conv58, 2, !dbg !8172
  br i1 %cmp59, label %if.then61, label %if.end64, !dbg !8173

if.then61:                                        ; preds = %if.end54
  %229 = load i32, i32* %last_motion_x, align 4, !dbg !8174
  store i32 %229, i32* %prior_last_motion_x, align 4, !dbg !8176
  %230 = load i32, i32* %last_motion_y, align 4, !dbg !8177
  store i32 %230, i32* %prior_last_motion_y, align 4, !dbg !8178
  %arrayidx62 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8179
  %231 = load i32, i32* %arrayidx62, align 16, !dbg !8179
  store i32 %231, i32* %last_motion_x, align 4, !dbg !8180
  %arrayidx63 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8181
  %232 = load i32, i32* %arrayidx63, align 16, !dbg !8181
  store i32 %232, i32* %last_motion_y, align 4, !dbg !8182
  br label %if.end64, !dbg !8183

if.end64:                                         ; preds = %if.then61, %if.end54
  br label %sw.epilog, !dbg !8184

sw.bb65:                                          ; preds = %if.end24
  %233 = load i32, i32* %last_motion_x, align 4, !dbg !8185
  store i32 %233, i32* %prior_last_motion_x, align 4, !dbg !8186
  %234 = load i32, i32* %last_motion_y, align 4, !dbg !8187
  store i32 %234, i32* %prior_last_motion_y, align 4, !dbg !8188
  store i32 0, i32* %k, align 4, !dbg !8189
  br label %for.cond66, !dbg !8190

for.cond66:                                       ; preds = %for.inc, %sw.bb65
  %235 = load i32, i32* %k, align 4, !dbg !8191
  %cmp67 = icmp slt i32 %235, 4, !dbg !8193
  br i1 %cmp67, label %for.body69, label %for.end, !dbg !8194

for.body69:                                       ; preds = %for.cond66
  %236 = load i32, i32* %mb_y, align 4, !dbg !8195
  %mul70 = mul nsw i32 2, %236, !dbg !8196
  %237 = load i32, i32* %k, align 4, !dbg !8197
  %shr71 = ashr i32 %237, 1, !dbg !8198
  %add72 = add nsw i32 %mul70, %shr71, !dbg !8199
  %238 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8200
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %238, i32 0, i32 39, !dbg !8201
  %arrayidx73 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 0, !dbg !8200
  %239 = load i32, i32* %arrayidx73, align 8, !dbg !8200
  %mul74 = mul nsw i32 %add72, %239, !dbg !8202
  %240 = load i32, i32* %mb_x, align 4, !dbg !8203
  %mul75 = mul nsw i32 2, %240, !dbg !8204
  %241 = load i32, i32* %k, align 4, !dbg !8205
  %and76 = and i32 %241, 1, !dbg !8206
  %add77 = add nsw i32 %mul75, %and76, !dbg !8207
  %add78 = add nsw i32 %mul74, %add77, !dbg !8208
  store i32 %add78, i32* %current_fragment, align 4, !dbg !8209
  %242 = load i32, i32* %current_fragment, align 4, !dbg !8210
  %idxprom79 = sext i32 %242 to i64, !dbg !8211
  %243 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8211
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %243, i32 0, i32 41, !dbg !8212
  %244 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !8212
  %arrayidx80 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %244, i64 %idxprom79, !dbg !8211
  %coding_method = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx80, i32 0, i32 1, !dbg !8213
  %245 = load i8, i8* %coding_method, align 2, !dbg !8213
  %conv81 = zext i8 %245 to i32, !dbg !8211
  %cmp82 = icmp ne i32 %conv81, 8, !dbg !8214
  br i1 %cmp82, label %if.then84, label %if.else122, !dbg !8215

if.then84:                                        ; preds = %for.body69
  %246 = load i32, i32* %coding_mode, align 4, !dbg !8216
  %cmp85 = icmp eq i32 %246, 0, !dbg !8217
  br i1 %cmp85, label %if.then87, label %if.else104, !dbg !8218

if.then87:                                        ; preds = %if.then84
  %247 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8219
  %248 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8220
  %motion_vector_vlc88 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %248, i32 0, i32 70, !dbg !8221
  %table89 = getelementptr inbounds %struct.VLC, %struct.VLC* %motion_vector_vlc88, i32 0, i32 1, !dbg !8222
  %249 = load [2 x i16]*, [2 x i16]** %table89, align 8, !dbg !8222
  store %struct.GetBitContext* %247, %struct.GetBitContext** %s.addr.i653, align 8, !dbg !8223
  store [2 x i16]* %249, [2 x i16]** %table.addr.i654, align 8, !dbg !8223
  store i32 6, i32* %bits.addr.i655, align 4, !dbg !8223
  store i32 2, i32* %max_depth.addr.i656, align 4, !dbg !8223
  %250 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i653, align 8, !dbg !8224
  %index.i664 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %250, i32 0, i32 2, !dbg !8225
  %251 = load i32, i32* %index.i664, align 8, !dbg !8225
  store i32 %251, i32* %re_index.i658, align 4, !dbg !7591
  %252 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i653, align 8, !dbg !8226
  %size_in_bits_plus8.i665 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %252, i32 0, i32 4, !dbg !8227
  %253 = load i32, i32* %size_in_bits_plus8.i665, align 8, !dbg !8227
  store i32 %253, i32* %re_size_plus8.i660, align 4, !dbg !7593
  %254 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i653, align 8, !dbg !8228
  %buffer.i666 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %254, i32 0, i32 0, !dbg !8229
  %255 = load i8*, i8** %buffer.i666, align 8, !dbg !8229
  %256 = load i32, i32* %re_index.i658, align 4, !dbg !8230
  %shr.i667 = lshr i32 %256, 3, !dbg !8231
  %idx.ext.i668 = zext i32 %shr.i667 to i64, !dbg !8232
  %add.ptr.i669 = getelementptr inbounds i8, i8* %255, i64 %idx.ext.i668, !dbg !8232
  %257 = bitcast i8* %add.ptr.i669 to %union.unaligned_32*, !dbg !8233
  %l.i670 = bitcast %union.unaligned_32* %257 to i32*, !dbg !8233
  %258 = load i32, i32* %l.i670, align 1, !dbg !8233
  store i32 %258, i32* %x.addr.i.i652, align 4, !dbg !8234
  %259 = load i32, i32* %x.addr.i.i652, align 4, !dbg !8235
  %shl.i.i671 = shl i32 %259, 8, !dbg !8236
  %and.i.i672 = and i32 %shl.i.i671, 65280, !dbg !8237
  %260 = load i32, i32* %x.addr.i.i652, align 4, !dbg !8238
  %shr.i.i673 = lshr i32 %260, 8, !dbg !8239
  %and1.i.i674 = and i32 %shr.i.i673, 255, !dbg !8240
  %or.i.i675 = or i32 %and.i.i672, %and1.i.i674, !dbg !8241
  %shl2.i.i676 = shl i32 %or.i.i675, 16, !dbg !8242
  %261 = load i32, i32* %x.addr.i.i652, align 4, !dbg !8243
  %shr3.i.i677 = lshr i32 %261, 16, !dbg !8244
  %shl4.i.i678 = shl i32 %shr3.i.i677, 8, !dbg !8245
  %and5.i.i679 = and i32 %shl4.i.i678, 65280, !dbg !8246
  %262 = load i32, i32* %x.addr.i.i652, align 4, !dbg !8247
  %shr6.i.i680 = lshr i32 %262, 16, !dbg !8248
  %shr7.i.i681 = lshr i32 %shr6.i.i680, 8, !dbg !8249
  %and8.i.i682 = and i32 %shr7.i.i681, 255, !dbg !8250
  %or9.i.i683 = or i32 %and5.i.i679, %and8.i.i682, !dbg !8251
  %or10.i.i684 = or i32 %shl2.i.i676, %or9.i.i683, !dbg !8252
  %263 = load i32, i32* %re_index.i658, align 4, !dbg !8253
  %and.i685 = and i32 %263, 7, !dbg !8254
  %shl.i686 = shl i32 %or10.i.i684, %and.i685, !dbg !8255
  store i32 %shl.i686, i32* %re_cache.i659, align 4, !dbg !8256
  %264 = load i32, i32* %re_cache.i659, align 4, !dbg !8257
  %265 = load i32, i32* %bits.addr.i655, align 4, !dbg !8258
  %conv.i687 = trunc i32 %265 to i8, !dbg !8258
  %call2.i688 = call i32 @NEG_USR32(i32 %264, i8 signext %conv.i687) #6, !dbg !8259
  store i32 %call2.i688, i32* %index1.i663, align 4, !dbg !8260
  %266 = load i32, i32* %index1.i663, align 4, !dbg !8261
  %idxprom.i689 = zext i32 %266 to i64, !dbg !8262
  %267 = load [2 x i16]*, [2 x i16]** %table.addr.i654, align 8, !dbg !8262
  %arrayidx.i690 = getelementptr inbounds [2 x i16], [2 x i16]* %267, i64 %idxprom.i689, !dbg !8262
  %arrayidx3.i691 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i690, i64 0, i64 0, !dbg !8262
  %268 = load i16, i16* %arrayidx3.i691, align 2, !dbg !8262
  %conv4.i692 = sext i16 %268 to i32, !dbg !8262
  store i32 %conv4.i692, i32* %code.i657, align 4, !dbg !8263
  %269 = load i32, i32* %index1.i663, align 4, !dbg !8264
  %idxprom5.i693 = zext i32 %269 to i64, !dbg !8265
  %270 = load [2 x i16]*, [2 x i16]** %table.addr.i654, align 8, !dbg !8265
  %arrayidx6.i694 = getelementptr inbounds [2 x i16], [2 x i16]* %270, i64 %idxprom5.i693, !dbg !8265
  %arrayidx7.i695 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i694, i64 0, i64 1, !dbg !8265
  %271 = load i16, i16* %arrayidx7.i695, align 2, !dbg !8265
  %conv8.i696 = sext i16 %271 to i32, !dbg !8265
  store i32 %conv8.i696, i32* %n.i661, align 4, !dbg !8266
  %272 = load i32, i32* %max_depth.addr.i656, align 4, !dbg !8267
  %cmp.i697 = icmp sgt i32 %272, 1, !dbg !8268
  br i1 %cmp.i697, label %land.lhs.true.i699, label %if.end68.i786, !dbg !8269

land.lhs.true.i699:                               ; preds = %if.then87
  %273 = load i32, i32* %n.i661, align 4, !dbg !8270
  %cmp10.i698 = icmp slt i32 %273, 0, !dbg !8271
  br i1 %cmp10.i698, label %if.then.i702, label %if.end68.i786, !dbg !8272

if.then.i702:                                     ; preds = %land.lhs.true.i699
  %274 = load i32, i32* %re_size_plus8.i660, align 4, !dbg !8273
  %275 = load i32, i32* %re_index.i658, align 4, !dbg !8274
  %276 = load i32, i32* %bits.addr.i655, align 4, !dbg !8275
  %add.i700 = add i32 %275, %276, !dbg !8276
  %cmp12.i701 = icmp ugt i32 %274, %add.i700, !dbg !8277
  br i1 %cmp12.i701, label %cond.true.i704, label %cond.false.i705, !dbg !8278

cond.true.i704:                                   ; preds = %if.then.i702
  %277 = load i32, i32* %re_index.i658, align 4, !dbg !8279
  %278 = load i32, i32* %bits.addr.i655, align 4, !dbg !8280
  %add14.i703 = add i32 %277, %278, !dbg !8281
  br label %cond.end.i741, !dbg !8282

cond.false.i705:                                  ; preds = %if.then.i702
  %279 = load i32, i32* %re_size_plus8.i660, align 4, !dbg !8283
  br label %cond.end.i741, !dbg !8284

cond.end.i741:                                    ; preds = %cond.false.i705, %cond.true.i704
  %cond.i706 = phi i32 [ %add14.i703, %cond.true.i704 ], [ %279, %cond.false.i705 ], !dbg !8285
  store i32 %cond.i706, i32* %re_index.i658, align 4, !dbg !8286
  %280 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i653, align 8, !dbg !8287
  %buffer15.i707 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %280, i32 0, i32 0, !dbg !8288
  %281 = load i8*, i8** %buffer15.i707, align 8, !dbg !8288
  %282 = load i32, i32* %re_index.i658, align 4, !dbg !8289
  %shr16.i708 = lshr i32 %282, 3, !dbg !8290
  %idx.ext17.i709 = zext i32 %shr16.i708 to i64, !dbg !8291
  %add.ptr18.i710 = getelementptr inbounds i8, i8* %281, i64 %idx.ext17.i709, !dbg !8291
  %283 = bitcast i8* %add.ptr18.i710 to %union.unaligned_32*, !dbg !8292
  %l19.i711 = bitcast %union.unaligned_32* %283 to i32*, !dbg !8292
  %284 = load i32, i32* %l19.i711, align 1, !dbg !8292
  store i32 %284, i32* %x.addr.i81.i651, align 4, !dbg !8293
  %285 = load i32, i32* %x.addr.i81.i651, align 4, !dbg !8294
  %shl.i82.i712 = shl i32 %285, 8, !dbg !8295
  %and.i83.i713 = and i32 %shl.i82.i712, 65280, !dbg !8296
  %286 = load i32, i32* %x.addr.i81.i651, align 4, !dbg !8297
  %shr.i84.i714 = lshr i32 %286, 8, !dbg !8298
  %and1.i85.i715 = and i32 %shr.i84.i714, 255, !dbg !8299
  %or.i86.i716 = or i32 %and.i83.i713, %and1.i85.i715, !dbg !8300
  %shl2.i87.i717 = shl i32 %or.i86.i716, 16, !dbg !8301
  %287 = load i32, i32* %x.addr.i81.i651, align 4, !dbg !8302
  %shr3.i88.i718 = lshr i32 %287, 16, !dbg !8303
  %shl4.i89.i719 = shl i32 %shr3.i88.i718, 8, !dbg !8304
  %and5.i90.i720 = and i32 %shl4.i89.i719, 65280, !dbg !8305
  %288 = load i32, i32* %x.addr.i81.i651, align 4, !dbg !8306
  %shr6.i91.i721 = lshr i32 %288, 16, !dbg !8307
  %shr7.i92.i722 = lshr i32 %shr6.i91.i721, 8, !dbg !8308
  %and8.i93.i723 = and i32 %shr7.i92.i722, 255, !dbg !8309
  %or9.i94.i724 = or i32 %and5.i90.i720, %and8.i93.i723, !dbg !8310
  %or10.i95.i725 = or i32 %shl2.i87.i717, %or9.i94.i724, !dbg !8311
  %289 = load i32, i32* %re_index.i658, align 4, !dbg !8312
  %and21.i726 = and i32 %289, 7, !dbg !8313
  %shl22.i727 = shl i32 %or10.i95.i725, %and21.i726, !dbg !8314
  store i32 %shl22.i727, i32* %re_cache.i659, align 4, !dbg !8315
  %290 = load i32, i32* %n.i661, align 4, !dbg !8316
  %sub.i728 = sub nsw i32 0, %290, !dbg !8317
  store i32 %sub.i728, i32* %nb_bits.i662, align 4, !dbg !8318
  %291 = load i32, i32* %re_cache.i659, align 4, !dbg !8319
  %292 = load i32, i32* %nb_bits.i662, align 4, !dbg !8320
  %conv23.i729 = trunc i32 %292 to i8, !dbg !8320
  %call24.i730 = call i32 @NEG_USR32(i32 %291, i8 signext %conv23.i729) #6, !dbg !8321
  %293 = load i32, i32* %code.i657, align 4, !dbg !8322
  %add25.i731 = add i32 %call24.i730, %293, !dbg !8323
  store i32 %add25.i731, i32* %index1.i663, align 4, !dbg !8324
  %294 = load i32, i32* %index1.i663, align 4, !dbg !8325
  %idxprom26.i732 = zext i32 %294 to i64, !dbg !8326
  %295 = load [2 x i16]*, [2 x i16]** %table.addr.i654, align 8, !dbg !8326
  %arrayidx27.i733 = getelementptr inbounds [2 x i16], [2 x i16]* %295, i64 %idxprom26.i732, !dbg !8326
  %arrayidx28.i734 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i733, i64 0, i64 0, !dbg !8326
  %296 = load i16, i16* %arrayidx28.i734, align 2, !dbg !8326
  %conv29.i735 = sext i16 %296 to i32, !dbg !8326
  store i32 %conv29.i735, i32* %code.i657, align 4, !dbg !8327
  %297 = load i32, i32* %index1.i663, align 4, !dbg !8328
  %idxprom30.i736 = zext i32 %297 to i64, !dbg !8329
  %298 = load [2 x i16]*, [2 x i16]** %table.addr.i654, align 8, !dbg !8329
  %arrayidx31.i737 = getelementptr inbounds [2 x i16], [2 x i16]* %298, i64 %idxprom30.i736, !dbg !8329
  %arrayidx32.i738 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i737, i64 0, i64 1, !dbg !8329
  %299 = load i16, i16* %arrayidx32.i738, align 2, !dbg !8329
  %conv33.i739 = sext i16 %299 to i32, !dbg !8329
  store i32 %conv33.i739, i32* %n.i661, align 4, !dbg !8330
  %300 = load i32, i32* %max_depth.addr.i656, align 4, !dbg !8331
  %cmp34.i740 = icmp sgt i32 %300, 2, !dbg !8332
  br i1 %cmp34.i740, label %land.lhs.true36.i743, label %if.end.i785, !dbg !8333

land.lhs.true36.i743:                             ; preds = %cond.end.i741
  %301 = load i32, i32* %n.i661, align 4, !dbg !8334
  %cmp37.i742 = icmp slt i32 %301, 0, !dbg !8335
  br i1 %cmp37.i742, label %if.then39.i746, label %if.end.i785, !dbg !8336

if.then39.i746:                                   ; preds = %land.lhs.true36.i743
  %302 = load i32, i32* %re_size_plus8.i660, align 4, !dbg !8337
  %303 = load i32, i32* %re_index.i658, align 4, !dbg !8338
  %304 = load i32, i32* %nb_bits.i662, align 4, !dbg !8339
  %add40.i744 = add i32 %303, %304, !dbg !8340
  %cmp41.i745 = icmp ugt i32 %302, %add40.i744, !dbg !8341
  br i1 %cmp41.i745, label %cond.true43.i748, label %cond.false45.i749, !dbg !8342

cond.true43.i748:                                 ; preds = %if.then39.i746
  %305 = load i32, i32* %re_index.i658, align 4, !dbg !8343
  %306 = load i32, i32* %nb_bits.i662, align 4, !dbg !8344
  %add44.i747 = add i32 %305, %306, !dbg !8345
  br label %cond.end46.i784, !dbg !8346

cond.false45.i749:                                ; preds = %if.then39.i746
  %307 = load i32, i32* %re_size_plus8.i660, align 4, !dbg !8347
  br label %cond.end46.i784, !dbg !8348

cond.end46.i784:                                  ; preds = %cond.false45.i749, %cond.true43.i748
  %cond47.i750 = phi i32 [ %add44.i747, %cond.true43.i748 ], [ %307, %cond.false45.i749 ], !dbg !8349
  store i32 %cond47.i750, i32* %re_index.i658, align 4, !dbg !8350
  %308 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i653, align 8, !dbg !8351
  %buffer48.i751 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %308, i32 0, i32 0, !dbg !8352
  %309 = load i8*, i8** %buffer48.i751, align 8, !dbg !8352
  %310 = load i32, i32* %re_index.i658, align 4, !dbg !8353
  %shr49.i752 = lshr i32 %310, 3, !dbg !8354
  %idx.ext50.i753 = zext i32 %shr49.i752 to i64, !dbg !8355
  %add.ptr51.i754 = getelementptr inbounds i8, i8* %309, i64 %idx.ext50.i753, !dbg !8355
  %311 = bitcast i8* %add.ptr51.i754 to %union.unaligned_32*, !dbg !8356
  %l52.i755 = bitcast %union.unaligned_32* %311 to i32*, !dbg !8356
  %312 = load i32, i32* %l52.i755, align 1, !dbg !8356
  store i32 %312, i32* %x.addr.i96.i650, align 4, !dbg !8357
  %313 = load i32, i32* %x.addr.i96.i650, align 4, !dbg !8358
  %shl.i97.i756 = shl i32 %313, 8, !dbg !8359
  %and.i98.i757 = and i32 %shl.i97.i756, 65280, !dbg !8360
  %314 = load i32, i32* %x.addr.i96.i650, align 4, !dbg !8361
  %shr.i99.i758 = lshr i32 %314, 8, !dbg !8362
  %and1.i100.i759 = and i32 %shr.i99.i758, 255, !dbg !8363
  %or.i101.i760 = or i32 %and.i98.i757, %and1.i100.i759, !dbg !8364
  %shl2.i102.i761 = shl i32 %or.i101.i760, 16, !dbg !8365
  %315 = load i32, i32* %x.addr.i96.i650, align 4, !dbg !8366
  %shr3.i103.i762 = lshr i32 %315, 16, !dbg !8367
  %shl4.i104.i763 = shl i32 %shr3.i103.i762, 8, !dbg !8368
  %and5.i105.i764 = and i32 %shl4.i104.i763, 65280, !dbg !8369
  %316 = load i32, i32* %x.addr.i96.i650, align 4, !dbg !8370
  %shr6.i106.i765 = lshr i32 %316, 16, !dbg !8371
  %shr7.i107.i766 = lshr i32 %shr6.i106.i765, 8, !dbg !8372
  %and8.i108.i767 = and i32 %shr7.i107.i766, 255, !dbg !8373
  %or9.i109.i768 = or i32 %and5.i105.i764, %and8.i108.i767, !dbg !8374
  %or10.i110.i769 = or i32 %shl2.i102.i761, %or9.i109.i768, !dbg !8375
  %317 = load i32, i32* %re_index.i658, align 4, !dbg !8376
  %and54.i770 = and i32 %317, 7, !dbg !8377
  %shl55.i771 = shl i32 %or10.i110.i769, %and54.i770, !dbg !8378
  store i32 %shl55.i771, i32* %re_cache.i659, align 4, !dbg !8379
  %318 = load i32, i32* %n.i661, align 4, !dbg !8380
  %sub56.i772 = sub nsw i32 0, %318, !dbg !8381
  store i32 %sub56.i772, i32* %nb_bits.i662, align 4, !dbg !8382
  %319 = load i32, i32* %re_cache.i659, align 4, !dbg !8383
  %320 = load i32, i32* %nb_bits.i662, align 4, !dbg !8384
  %conv57.i773 = trunc i32 %320 to i8, !dbg !8384
  %call58.i774 = call i32 @NEG_USR32(i32 %319, i8 signext %conv57.i773) #6, !dbg !8385
  %321 = load i32, i32* %code.i657, align 4, !dbg !8386
  %add59.i775 = add i32 %call58.i774, %321, !dbg !8387
  store i32 %add59.i775, i32* %index1.i663, align 4, !dbg !8388
  %322 = load i32, i32* %index1.i663, align 4, !dbg !8389
  %idxprom60.i776 = zext i32 %322 to i64, !dbg !8390
  %323 = load [2 x i16]*, [2 x i16]** %table.addr.i654, align 8, !dbg !8390
  %arrayidx61.i777 = getelementptr inbounds [2 x i16], [2 x i16]* %323, i64 %idxprom60.i776, !dbg !8390
  %arrayidx62.i778 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i777, i64 0, i64 0, !dbg !8390
  %324 = load i16, i16* %arrayidx62.i778, align 2, !dbg !8390
  %conv63.i779 = sext i16 %324 to i32, !dbg !8390
  store i32 %conv63.i779, i32* %code.i657, align 4, !dbg !8391
  %325 = load i32, i32* %index1.i663, align 4, !dbg !8392
  %idxprom64.i780 = zext i32 %325 to i64, !dbg !8393
  %326 = load [2 x i16]*, [2 x i16]** %table.addr.i654, align 8, !dbg !8393
  %arrayidx65.i781 = getelementptr inbounds [2 x i16], [2 x i16]* %326, i64 %idxprom64.i780, !dbg !8393
  %arrayidx66.i782 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i781, i64 0, i64 1, !dbg !8393
  %327 = load i16, i16* %arrayidx66.i782, align 2, !dbg !8393
  %conv67.i783 = sext i16 %327 to i32, !dbg !8393
  store i32 %conv67.i783, i32* %n.i661, align 4, !dbg !8394
  br label %if.end.i785, !dbg !8395

if.end.i785:                                      ; preds = %cond.end46.i784, %land.lhs.true36.i743, %cond.end.i741
  br label %if.end68.i786, !dbg !8396

if.end68.i786:                                    ; preds = %if.end.i785, %land.lhs.true.i699, %if.then87
  %328 = load i32, i32* %n.i661, align 4, !dbg !8397
  %329 = load i32, i32* %re_cache.i659, align 4, !dbg !8398
  %shl70.i787 = shl i32 %329, %328, !dbg !8398
  store i32 %shl70.i787, i32* %re_cache.i659, align 4, !dbg !8398
  %330 = load i32, i32* %re_size_plus8.i660, align 4, !dbg !8399
  %331 = load i32, i32* %re_index.i658, align 4, !dbg !8400
  %332 = load i32, i32* %n.i661, align 4, !dbg !8401
  %add71.i788 = add i32 %331, %332, !dbg !8402
  %cmp72.i789 = icmp ugt i32 %330, %add71.i788, !dbg !8403
  br i1 %cmp72.i789, label %cond.true74.i791, label %cond.false76.i792, !dbg !8404

cond.true74.i791:                                 ; preds = %if.end68.i786
  %333 = load i32, i32* %re_index.i658, align 4, !dbg !8405
  %334 = load i32, i32* %n.i661, align 4, !dbg !8406
  %add75.i790 = add i32 %333, %334, !dbg !8407
  br label %get_vlc2.exit795, !dbg !8408

cond.false76.i792:                                ; preds = %if.end68.i786
  %335 = load i32, i32* %re_size_plus8.i660, align 4, !dbg !8409
  br label %get_vlc2.exit795, !dbg !8410

get_vlc2.exit795:                                 ; preds = %cond.true74.i791, %cond.false76.i792
  %cond78.i793 = phi i32 [ %add75.i790, %cond.true74.i791 ], [ %335, %cond.false76.i792 ], !dbg !8411
  store i32 %cond78.i793, i32* %re_index.i658, align 4, !dbg !8412
  %336 = load i32, i32* %re_index.i658, align 4, !dbg !8413
  %337 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i653, align 8, !dbg !8414
  %index80.i794 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %337, i32 0, i32 2, !dbg !8415
  store i32 %336, i32* %index80.i794, align 8, !dbg !8416
  %338 = load i32, i32* %code.i657, align 4, !dbg !8417
  %idxprom91 = sext i32 %338 to i64, !dbg !8418
  %arrayidx92 = getelementptr inbounds [63 x i8], [63 x i8]* @motion_vector_table, i64 0, i64 %idxprom91, !dbg !8418
  %339 = load i8, i8* %arrayidx92, align 1, !dbg !8418
  %conv93 = sext i8 %339 to i32, !dbg !8418
  %340 = load i32, i32* %k, align 4, !dbg !8419
  %idxprom94 = sext i32 %340 to i64, !dbg !8420
  %arrayidx95 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 %idxprom94, !dbg !8420
  store i32 %conv93, i32* %arrayidx95, align 4, !dbg !8421
  %341 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8422
  %342 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8423
  %motion_vector_vlc96 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %342, i32 0, i32 70, !dbg !8424
  %table97 = getelementptr inbounds %struct.VLC, %struct.VLC* %motion_vector_vlc96, i32 0, i32 1, !dbg !8425
  %343 = load [2 x i16]*, [2 x i16]** %table97, align 8, !dbg !8425
  store %struct.GetBitContext* %341, %struct.GetBitContext** %s.addr.i799, align 8, !dbg !8426
  store [2 x i16]* %343, [2 x i16]** %table.addr.i800, align 8, !dbg !8426
  store i32 6, i32* %bits.addr.i801, align 4, !dbg !8426
  store i32 2, i32* %max_depth.addr.i802, align 4, !dbg !8426
  %344 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i799, align 8, !dbg !8427
  %index.i810 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %344, i32 0, i32 2, !dbg !8428
  %345 = load i32, i32* %index.i810, align 8, !dbg !8428
  store i32 %345, i32* %re_index.i804, align 4, !dbg !7573
  %346 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i799, align 8, !dbg !8429
  %size_in_bits_plus8.i811 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %346, i32 0, i32 4, !dbg !8430
  %347 = load i32, i32* %size_in_bits_plus8.i811, align 8, !dbg !8430
  store i32 %347, i32* %re_size_plus8.i806, align 4, !dbg !7575
  %348 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i799, align 8, !dbg !8431
  %buffer.i812 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %348, i32 0, i32 0, !dbg !8432
  %349 = load i8*, i8** %buffer.i812, align 8, !dbg !8432
  %350 = load i32, i32* %re_index.i804, align 4, !dbg !8433
  %shr.i813 = lshr i32 %350, 3, !dbg !8434
  %idx.ext.i814 = zext i32 %shr.i813 to i64, !dbg !8435
  %add.ptr.i815 = getelementptr inbounds i8, i8* %349, i64 %idx.ext.i814, !dbg !8435
  %351 = bitcast i8* %add.ptr.i815 to %union.unaligned_32*, !dbg !8436
  %l.i816 = bitcast %union.unaligned_32* %351 to i32*, !dbg !8436
  %352 = load i32, i32* %l.i816, align 1, !dbg !8436
  store i32 %352, i32* %x.addr.i.i798, align 4, !dbg !8437
  %353 = load i32, i32* %x.addr.i.i798, align 4, !dbg !8438
  %shl.i.i817 = shl i32 %353, 8, !dbg !8439
  %and.i.i818 = and i32 %shl.i.i817, 65280, !dbg !8440
  %354 = load i32, i32* %x.addr.i.i798, align 4, !dbg !8441
  %shr.i.i819 = lshr i32 %354, 8, !dbg !8442
  %and1.i.i820 = and i32 %shr.i.i819, 255, !dbg !8443
  %or.i.i821 = or i32 %and.i.i818, %and1.i.i820, !dbg !8444
  %shl2.i.i822 = shl i32 %or.i.i821, 16, !dbg !8445
  %355 = load i32, i32* %x.addr.i.i798, align 4, !dbg !8446
  %shr3.i.i823 = lshr i32 %355, 16, !dbg !8447
  %shl4.i.i824 = shl i32 %shr3.i.i823, 8, !dbg !8448
  %and5.i.i825 = and i32 %shl4.i.i824, 65280, !dbg !8449
  %356 = load i32, i32* %x.addr.i.i798, align 4, !dbg !8450
  %shr6.i.i826 = lshr i32 %356, 16, !dbg !8451
  %shr7.i.i827 = lshr i32 %shr6.i.i826, 8, !dbg !8452
  %and8.i.i828 = and i32 %shr7.i.i827, 255, !dbg !8453
  %or9.i.i829 = or i32 %and5.i.i825, %and8.i.i828, !dbg !8454
  %or10.i.i830 = or i32 %shl2.i.i822, %or9.i.i829, !dbg !8455
  %357 = load i32, i32* %re_index.i804, align 4, !dbg !8456
  %and.i831 = and i32 %357, 7, !dbg !8457
  %shl.i832 = shl i32 %or10.i.i830, %and.i831, !dbg !8458
  store i32 %shl.i832, i32* %re_cache.i805, align 4, !dbg !8459
  %358 = load i32, i32* %re_cache.i805, align 4, !dbg !8460
  %359 = load i32, i32* %bits.addr.i801, align 4, !dbg !8461
  %conv.i833 = trunc i32 %359 to i8, !dbg !8461
  %call2.i834 = call i32 @NEG_USR32(i32 %358, i8 signext %conv.i833) #6, !dbg !8462
  store i32 %call2.i834, i32* %index1.i809, align 4, !dbg !8463
  %360 = load i32, i32* %index1.i809, align 4, !dbg !8464
  %idxprom.i835 = zext i32 %360 to i64, !dbg !8465
  %361 = load [2 x i16]*, [2 x i16]** %table.addr.i800, align 8, !dbg !8465
  %arrayidx.i836 = getelementptr inbounds [2 x i16], [2 x i16]* %361, i64 %idxprom.i835, !dbg !8465
  %arrayidx3.i837 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i836, i64 0, i64 0, !dbg !8465
  %362 = load i16, i16* %arrayidx3.i837, align 2, !dbg !8465
  %conv4.i838 = sext i16 %362 to i32, !dbg !8465
  store i32 %conv4.i838, i32* %code.i803, align 4, !dbg !8466
  %363 = load i32, i32* %index1.i809, align 4, !dbg !8467
  %idxprom5.i839 = zext i32 %363 to i64, !dbg !8468
  %364 = load [2 x i16]*, [2 x i16]** %table.addr.i800, align 8, !dbg !8468
  %arrayidx6.i840 = getelementptr inbounds [2 x i16], [2 x i16]* %364, i64 %idxprom5.i839, !dbg !8468
  %arrayidx7.i841 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i840, i64 0, i64 1, !dbg !8468
  %365 = load i16, i16* %arrayidx7.i841, align 2, !dbg !8468
  %conv8.i842 = sext i16 %365 to i32, !dbg !8468
  store i32 %conv8.i842, i32* %n.i807, align 4, !dbg !8469
  %366 = load i32, i32* %max_depth.addr.i802, align 4, !dbg !8470
  %cmp.i843 = icmp sgt i32 %366, 1, !dbg !8471
  br i1 %cmp.i843, label %land.lhs.true.i845, label %if.end68.i932, !dbg !8472

land.lhs.true.i845:                               ; preds = %get_vlc2.exit795
  %367 = load i32, i32* %n.i807, align 4, !dbg !8473
  %cmp10.i844 = icmp slt i32 %367, 0, !dbg !8474
  br i1 %cmp10.i844, label %if.then.i848, label %if.end68.i932, !dbg !8475

if.then.i848:                                     ; preds = %land.lhs.true.i845
  %368 = load i32, i32* %re_size_plus8.i806, align 4, !dbg !8476
  %369 = load i32, i32* %re_index.i804, align 4, !dbg !8477
  %370 = load i32, i32* %bits.addr.i801, align 4, !dbg !8478
  %add.i846 = add i32 %369, %370, !dbg !8479
  %cmp12.i847 = icmp ugt i32 %368, %add.i846, !dbg !8480
  br i1 %cmp12.i847, label %cond.true.i850, label %cond.false.i851, !dbg !8481

cond.true.i850:                                   ; preds = %if.then.i848
  %371 = load i32, i32* %re_index.i804, align 4, !dbg !8482
  %372 = load i32, i32* %bits.addr.i801, align 4, !dbg !8483
  %add14.i849 = add i32 %371, %372, !dbg !8484
  br label %cond.end.i887, !dbg !8485

cond.false.i851:                                  ; preds = %if.then.i848
  %373 = load i32, i32* %re_size_plus8.i806, align 4, !dbg !8486
  br label %cond.end.i887, !dbg !8487

cond.end.i887:                                    ; preds = %cond.false.i851, %cond.true.i850
  %cond.i852 = phi i32 [ %add14.i849, %cond.true.i850 ], [ %373, %cond.false.i851 ], !dbg !8488
  store i32 %cond.i852, i32* %re_index.i804, align 4, !dbg !8489
  %374 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i799, align 8, !dbg !8490
  %buffer15.i853 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %374, i32 0, i32 0, !dbg !8491
  %375 = load i8*, i8** %buffer15.i853, align 8, !dbg !8491
  %376 = load i32, i32* %re_index.i804, align 4, !dbg !8492
  %shr16.i854 = lshr i32 %376, 3, !dbg !8493
  %idx.ext17.i855 = zext i32 %shr16.i854 to i64, !dbg !8494
  %add.ptr18.i856 = getelementptr inbounds i8, i8* %375, i64 %idx.ext17.i855, !dbg !8494
  %377 = bitcast i8* %add.ptr18.i856 to %union.unaligned_32*, !dbg !8495
  %l19.i857 = bitcast %union.unaligned_32* %377 to i32*, !dbg !8495
  %378 = load i32, i32* %l19.i857, align 1, !dbg !8495
  store i32 %378, i32* %x.addr.i81.i797, align 4, !dbg !8496
  %379 = load i32, i32* %x.addr.i81.i797, align 4, !dbg !8497
  %shl.i82.i858 = shl i32 %379, 8, !dbg !8498
  %and.i83.i859 = and i32 %shl.i82.i858, 65280, !dbg !8499
  %380 = load i32, i32* %x.addr.i81.i797, align 4, !dbg !8500
  %shr.i84.i860 = lshr i32 %380, 8, !dbg !8501
  %and1.i85.i861 = and i32 %shr.i84.i860, 255, !dbg !8502
  %or.i86.i862 = or i32 %and.i83.i859, %and1.i85.i861, !dbg !8503
  %shl2.i87.i863 = shl i32 %or.i86.i862, 16, !dbg !8504
  %381 = load i32, i32* %x.addr.i81.i797, align 4, !dbg !8505
  %shr3.i88.i864 = lshr i32 %381, 16, !dbg !8506
  %shl4.i89.i865 = shl i32 %shr3.i88.i864, 8, !dbg !8507
  %and5.i90.i866 = and i32 %shl4.i89.i865, 65280, !dbg !8508
  %382 = load i32, i32* %x.addr.i81.i797, align 4, !dbg !8509
  %shr6.i91.i867 = lshr i32 %382, 16, !dbg !8510
  %shr7.i92.i868 = lshr i32 %shr6.i91.i867, 8, !dbg !8511
  %and8.i93.i869 = and i32 %shr7.i92.i868, 255, !dbg !8512
  %or9.i94.i870 = or i32 %and5.i90.i866, %and8.i93.i869, !dbg !8513
  %or10.i95.i871 = or i32 %shl2.i87.i863, %or9.i94.i870, !dbg !8514
  %383 = load i32, i32* %re_index.i804, align 4, !dbg !8515
  %and21.i872 = and i32 %383, 7, !dbg !8516
  %shl22.i873 = shl i32 %or10.i95.i871, %and21.i872, !dbg !8517
  store i32 %shl22.i873, i32* %re_cache.i805, align 4, !dbg !8518
  %384 = load i32, i32* %n.i807, align 4, !dbg !8519
  %sub.i874 = sub nsw i32 0, %384, !dbg !8520
  store i32 %sub.i874, i32* %nb_bits.i808, align 4, !dbg !8521
  %385 = load i32, i32* %re_cache.i805, align 4, !dbg !8522
  %386 = load i32, i32* %nb_bits.i808, align 4, !dbg !8523
  %conv23.i875 = trunc i32 %386 to i8, !dbg !8523
  %call24.i876 = call i32 @NEG_USR32(i32 %385, i8 signext %conv23.i875) #6, !dbg !8524
  %387 = load i32, i32* %code.i803, align 4, !dbg !8525
  %add25.i877 = add i32 %call24.i876, %387, !dbg !8526
  store i32 %add25.i877, i32* %index1.i809, align 4, !dbg !8527
  %388 = load i32, i32* %index1.i809, align 4, !dbg !8528
  %idxprom26.i878 = zext i32 %388 to i64, !dbg !8529
  %389 = load [2 x i16]*, [2 x i16]** %table.addr.i800, align 8, !dbg !8529
  %arrayidx27.i879 = getelementptr inbounds [2 x i16], [2 x i16]* %389, i64 %idxprom26.i878, !dbg !8529
  %arrayidx28.i880 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i879, i64 0, i64 0, !dbg !8529
  %390 = load i16, i16* %arrayidx28.i880, align 2, !dbg !8529
  %conv29.i881 = sext i16 %390 to i32, !dbg !8529
  store i32 %conv29.i881, i32* %code.i803, align 4, !dbg !8530
  %391 = load i32, i32* %index1.i809, align 4, !dbg !8531
  %idxprom30.i882 = zext i32 %391 to i64, !dbg !8532
  %392 = load [2 x i16]*, [2 x i16]** %table.addr.i800, align 8, !dbg !8532
  %arrayidx31.i883 = getelementptr inbounds [2 x i16], [2 x i16]* %392, i64 %idxprom30.i882, !dbg !8532
  %arrayidx32.i884 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i883, i64 0, i64 1, !dbg !8532
  %393 = load i16, i16* %arrayidx32.i884, align 2, !dbg !8532
  %conv33.i885 = sext i16 %393 to i32, !dbg !8532
  store i32 %conv33.i885, i32* %n.i807, align 4, !dbg !8533
  %394 = load i32, i32* %max_depth.addr.i802, align 4, !dbg !8534
  %cmp34.i886 = icmp sgt i32 %394, 2, !dbg !8535
  br i1 %cmp34.i886, label %land.lhs.true36.i889, label %if.end.i931, !dbg !8536

land.lhs.true36.i889:                             ; preds = %cond.end.i887
  %395 = load i32, i32* %n.i807, align 4, !dbg !8537
  %cmp37.i888 = icmp slt i32 %395, 0, !dbg !8538
  br i1 %cmp37.i888, label %if.then39.i892, label %if.end.i931, !dbg !8539

if.then39.i892:                                   ; preds = %land.lhs.true36.i889
  %396 = load i32, i32* %re_size_plus8.i806, align 4, !dbg !8540
  %397 = load i32, i32* %re_index.i804, align 4, !dbg !8541
  %398 = load i32, i32* %nb_bits.i808, align 4, !dbg !8542
  %add40.i890 = add i32 %397, %398, !dbg !8543
  %cmp41.i891 = icmp ugt i32 %396, %add40.i890, !dbg !8544
  br i1 %cmp41.i891, label %cond.true43.i894, label %cond.false45.i895, !dbg !8545

cond.true43.i894:                                 ; preds = %if.then39.i892
  %399 = load i32, i32* %re_index.i804, align 4, !dbg !8546
  %400 = load i32, i32* %nb_bits.i808, align 4, !dbg !8547
  %add44.i893 = add i32 %399, %400, !dbg !8548
  br label %cond.end46.i930, !dbg !8549

cond.false45.i895:                                ; preds = %if.then39.i892
  %401 = load i32, i32* %re_size_plus8.i806, align 4, !dbg !8550
  br label %cond.end46.i930, !dbg !8551

cond.end46.i930:                                  ; preds = %cond.false45.i895, %cond.true43.i894
  %cond47.i896 = phi i32 [ %add44.i893, %cond.true43.i894 ], [ %401, %cond.false45.i895 ], !dbg !8552
  store i32 %cond47.i896, i32* %re_index.i804, align 4, !dbg !8553
  %402 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i799, align 8, !dbg !8554
  %buffer48.i897 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %402, i32 0, i32 0, !dbg !8555
  %403 = load i8*, i8** %buffer48.i897, align 8, !dbg !8555
  %404 = load i32, i32* %re_index.i804, align 4, !dbg !8556
  %shr49.i898 = lshr i32 %404, 3, !dbg !8557
  %idx.ext50.i899 = zext i32 %shr49.i898 to i64, !dbg !8558
  %add.ptr51.i900 = getelementptr inbounds i8, i8* %403, i64 %idx.ext50.i899, !dbg !8558
  %405 = bitcast i8* %add.ptr51.i900 to %union.unaligned_32*, !dbg !8559
  %l52.i901 = bitcast %union.unaligned_32* %405 to i32*, !dbg !8559
  %406 = load i32, i32* %l52.i901, align 1, !dbg !8559
  store i32 %406, i32* %x.addr.i96.i796, align 4, !dbg !8560
  %407 = load i32, i32* %x.addr.i96.i796, align 4, !dbg !8561
  %shl.i97.i902 = shl i32 %407, 8, !dbg !8562
  %and.i98.i903 = and i32 %shl.i97.i902, 65280, !dbg !8563
  %408 = load i32, i32* %x.addr.i96.i796, align 4, !dbg !8564
  %shr.i99.i904 = lshr i32 %408, 8, !dbg !8565
  %and1.i100.i905 = and i32 %shr.i99.i904, 255, !dbg !8566
  %or.i101.i906 = or i32 %and.i98.i903, %and1.i100.i905, !dbg !8567
  %shl2.i102.i907 = shl i32 %or.i101.i906, 16, !dbg !8568
  %409 = load i32, i32* %x.addr.i96.i796, align 4, !dbg !8569
  %shr3.i103.i908 = lshr i32 %409, 16, !dbg !8570
  %shl4.i104.i909 = shl i32 %shr3.i103.i908, 8, !dbg !8571
  %and5.i105.i910 = and i32 %shl4.i104.i909, 65280, !dbg !8572
  %410 = load i32, i32* %x.addr.i96.i796, align 4, !dbg !8573
  %shr6.i106.i911 = lshr i32 %410, 16, !dbg !8574
  %shr7.i107.i912 = lshr i32 %shr6.i106.i911, 8, !dbg !8575
  %and8.i108.i913 = and i32 %shr7.i107.i912, 255, !dbg !8576
  %or9.i109.i914 = or i32 %and5.i105.i910, %and8.i108.i913, !dbg !8577
  %or10.i110.i915 = or i32 %shl2.i102.i907, %or9.i109.i914, !dbg !8578
  %411 = load i32, i32* %re_index.i804, align 4, !dbg !8579
  %and54.i916 = and i32 %411, 7, !dbg !8580
  %shl55.i917 = shl i32 %or10.i110.i915, %and54.i916, !dbg !8581
  store i32 %shl55.i917, i32* %re_cache.i805, align 4, !dbg !8582
  %412 = load i32, i32* %n.i807, align 4, !dbg !8583
  %sub56.i918 = sub nsw i32 0, %412, !dbg !8584
  store i32 %sub56.i918, i32* %nb_bits.i808, align 4, !dbg !8585
  %413 = load i32, i32* %re_cache.i805, align 4, !dbg !8586
  %414 = load i32, i32* %nb_bits.i808, align 4, !dbg !8587
  %conv57.i919 = trunc i32 %414 to i8, !dbg !8587
  %call58.i920 = call i32 @NEG_USR32(i32 %413, i8 signext %conv57.i919) #6, !dbg !8588
  %415 = load i32, i32* %code.i803, align 4, !dbg !8589
  %add59.i921 = add i32 %call58.i920, %415, !dbg !8590
  store i32 %add59.i921, i32* %index1.i809, align 4, !dbg !8591
  %416 = load i32, i32* %index1.i809, align 4, !dbg !8592
  %idxprom60.i922 = zext i32 %416 to i64, !dbg !8593
  %417 = load [2 x i16]*, [2 x i16]** %table.addr.i800, align 8, !dbg !8593
  %arrayidx61.i923 = getelementptr inbounds [2 x i16], [2 x i16]* %417, i64 %idxprom60.i922, !dbg !8593
  %arrayidx62.i924 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i923, i64 0, i64 0, !dbg !8593
  %418 = load i16, i16* %arrayidx62.i924, align 2, !dbg !8593
  %conv63.i925 = sext i16 %418 to i32, !dbg !8593
  store i32 %conv63.i925, i32* %code.i803, align 4, !dbg !8594
  %419 = load i32, i32* %index1.i809, align 4, !dbg !8595
  %idxprom64.i926 = zext i32 %419 to i64, !dbg !8596
  %420 = load [2 x i16]*, [2 x i16]** %table.addr.i800, align 8, !dbg !8596
  %arrayidx65.i927 = getelementptr inbounds [2 x i16], [2 x i16]* %420, i64 %idxprom64.i926, !dbg !8596
  %arrayidx66.i928 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i927, i64 0, i64 1, !dbg !8596
  %421 = load i16, i16* %arrayidx66.i928, align 2, !dbg !8596
  %conv67.i929 = sext i16 %421 to i32, !dbg !8596
  store i32 %conv67.i929, i32* %n.i807, align 4, !dbg !8597
  br label %if.end.i931, !dbg !8598

if.end.i931:                                      ; preds = %cond.end46.i930, %land.lhs.true36.i889, %cond.end.i887
  br label %if.end68.i932, !dbg !8599

if.end68.i932:                                    ; preds = %if.end.i931, %land.lhs.true.i845, %get_vlc2.exit795
  %422 = load i32, i32* %n.i807, align 4, !dbg !8600
  %423 = load i32, i32* %re_cache.i805, align 4, !dbg !8601
  %shl70.i933 = shl i32 %423, %422, !dbg !8601
  store i32 %shl70.i933, i32* %re_cache.i805, align 4, !dbg !8601
  %424 = load i32, i32* %re_size_plus8.i806, align 4, !dbg !8602
  %425 = load i32, i32* %re_index.i804, align 4, !dbg !8603
  %426 = load i32, i32* %n.i807, align 4, !dbg !8604
  %add71.i934 = add i32 %425, %426, !dbg !8605
  %cmp72.i935 = icmp ugt i32 %424, %add71.i934, !dbg !8606
  br i1 %cmp72.i935, label %cond.true74.i937, label %cond.false76.i938, !dbg !8607

cond.true74.i937:                                 ; preds = %if.end68.i932
  %427 = load i32, i32* %re_index.i804, align 4, !dbg !8608
  %428 = load i32, i32* %n.i807, align 4, !dbg !8609
  %add75.i936 = add i32 %427, %428, !dbg !8610
  br label %get_vlc2.exit941, !dbg !8611

cond.false76.i938:                                ; preds = %if.end68.i932
  %429 = load i32, i32* %re_size_plus8.i806, align 4, !dbg !8612
  br label %get_vlc2.exit941, !dbg !8613

get_vlc2.exit941:                                 ; preds = %cond.true74.i937, %cond.false76.i938
  %cond78.i939 = phi i32 [ %add75.i936, %cond.true74.i937 ], [ %429, %cond.false76.i938 ], !dbg !8614
  store i32 %cond78.i939, i32* %re_index.i804, align 4, !dbg !8615
  %430 = load i32, i32* %re_index.i804, align 4, !dbg !8616
  %431 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i799, align 8, !dbg !8617
  %index80.i940 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %431, i32 0, i32 2, !dbg !8618
  store i32 %430, i32* %index80.i940, align 8, !dbg !8619
  %432 = load i32, i32* %code.i803, align 4, !dbg !8620
  %idxprom99 = sext i32 %432 to i64, !dbg !8621
  %arrayidx100 = getelementptr inbounds [63 x i8], [63 x i8]* @motion_vector_table, i64 0, i64 %idxprom99, !dbg !8621
  %433 = load i8, i8* %arrayidx100, align 1, !dbg !8621
  %conv101 = sext i8 %433 to i32, !dbg !8621
  %434 = load i32, i32* %k, align 4, !dbg !8622
  %idxprom102 = sext i32 %434 to i64, !dbg !8623
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 %idxprom102, !dbg !8623
  store i32 %conv101, i32* %arrayidx103, align 4, !dbg !8624
  br label %if.end117, !dbg !8625

if.else104:                                       ; preds = %if.then84
  %435 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8626
  %call105 = call i32 @get_bits(%struct.GetBitContext* %435, i32 6), !dbg !8628
  %idxprom106 = zext i32 %call105 to i64, !dbg !8629
  %arrayidx107 = getelementptr inbounds [64 x i8], [64 x i8]* @fixed_motion_vector_table, i64 0, i64 %idxprom106, !dbg !8629
  %436 = load i8, i8* %arrayidx107, align 1, !dbg !8629
  %conv108 = sext i8 %436 to i32, !dbg !8629
  %437 = load i32, i32* %k, align 4, !dbg !8630
  %idxprom109 = sext i32 %437 to i64, !dbg !8631
  %arrayidx110 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 %idxprom109, !dbg !8631
  store i32 %conv108, i32* %arrayidx110, align 4, !dbg !8632
  %438 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8633
  %call111 = call i32 @get_bits(%struct.GetBitContext* %438, i32 6), !dbg !8634
  %idxprom112 = zext i32 %call111 to i64, !dbg !8635
  %arrayidx113 = getelementptr inbounds [64 x i8], [64 x i8]* @fixed_motion_vector_table, i64 0, i64 %idxprom112, !dbg !8635
  %439 = load i8, i8* %arrayidx113, align 1, !dbg !8635
  %conv114 = sext i8 %439 to i32, !dbg !8635
  %440 = load i32, i32* %k, align 4, !dbg !8636
  %idxprom115 = sext i32 %440 to i64, !dbg !8637
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 %idxprom115, !dbg !8637
  store i32 %conv114, i32* %arrayidx116, align 4, !dbg !8638
  br label %if.end117

if.end117:                                        ; preds = %if.else104, %get_vlc2.exit941
  %441 = load i32, i32* %k, align 4, !dbg !8639
  %idxprom118 = sext i32 %441 to i64, !dbg !8640
  %arrayidx119 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 %idxprom118, !dbg !8640
  %442 = load i32, i32* %arrayidx119, align 4, !dbg !8640
  store i32 %442, i32* %last_motion_x, align 4, !dbg !8641
  %443 = load i32, i32* %k, align 4, !dbg !8642
  %idxprom120 = sext i32 %443 to i64, !dbg !8643
  %arrayidx121 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 %idxprom120, !dbg !8643
  %444 = load i32, i32* %arrayidx121, align 4, !dbg !8643
  store i32 %444, i32* %last_motion_y, align 4, !dbg !8644
  br label %if.end127, !dbg !8645

if.else122:                                       ; preds = %for.body69
  %445 = load i32, i32* %k, align 4, !dbg !8646
  %idxprom123 = sext i32 %445 to i64, !dbg !8648
  %arrayidx124 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 %idxprom123, !dbg !8648
  store i32 0, i32* %arrayidx124, align 4, !dbg !8649
  %446 = load i32, i32* %k, align 4, !dbg !8650
  %idxprom125 = sext i32 %446 to i64, !dbg !8651
  %arrayidx126 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 %idxprom125, !dbg !8651
  store i32 0, i32* %arrayidx126, align 4, !dbg !8652
  br label %if.end127

if.end127:                                        ; preds = %if.else122, %if.end117
  br label %for.inc, !dbg !8653

for.inc:                                          ; preds = %if.end127
  %447 = load i32, i32* %k, align 4, !dbg !8654
  %inc = add nsw i32 %447, 1, !dbg !8654
  store i32 %inc, i32* %k, align 4, !dbg !8654
  br label %for.cond66, !dbg !8656, !llvm.loop !8657

for.end:                                          ; preds = %for.cond66
  br label %sw.epilog, !dbg !8659

sw.bb128:                                         ; preds = %if.end24
  %448 = load i32, i32* %last_motion_x, align 4, !dbg !8660
  %arrayidx129 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8661
  store i32 %448, i32* %arrayidx129, align 16, !dbg !8662
  %449 = load i32, i32* %last_motion_y, align 4, !dbg !8663
  %arrayidx130 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8664
  store i32 %449, i32* %arrayidx130, align 16, !dbg !8665
  br label %sw.epilog, !dbg !8666

sw.bb131:                                         ; preds = %if.end24
  %450 = load i32, i32* %prior_last_motion_x, align 4, !dbg !8667
  %arrayidx132 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8668
  store i32 %450, i32* %arrayidx132, align 16, !dbg !8669
  %451 = load i32, i32* %prior_last_motion_y, align 4, !dbg !8670
  %arrayidx133 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8671
  store i32 %451, i32* %arrayidx133, align 16, !dbg !8672
  %452 = load i32, i32* %last_motion_x, align 4, !dbg !8673
  store i32 %452, i32* %prior_last_motion_x, align 4, !dbg !8674
  %453 = load i32, i32* %last_motion_y, align 4, !dbg !8675
  store i32 %453, i32* %prior_last_motion_y, align 4, !dbg !8676
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8677
  %454 = load i32, i32* %arrayidx134, align 16, !dbg !8677
  store i32 %454, i32* %last_motion_x, align 4, !dbg !8678
  %arrayidx135 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8679
  %455 = load i32, i32* %arrayidx135, align 16, !dbg !8679
  store i32 %455, i32* %last_motion_y, align 4, !dbg !8680
  br label %sw.epilog, !dbg !8681

sw.default:                                       ; preds = %if.end24
  %arrayidx136 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8682
  store i32 0, i32* %arrayidx136, align 16, !dbg !8683
  %arrayidx137 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8684
  store i32 0, i32* %arrayidx137, align 16, !dbg !8685
  br label %sw.epilog, !dbg !8686

sw.epilog:                                        ; preds = %sw.default, %sw.bb131, %sw.bb128, %for.end, %if.end64
  store i32 0, i32* %k, align 4, !dbg !8687
  br label %for.cond138, !dbg !8689

for.cond138:                                      ; preds = %for.inc190, %sw.epilog
  %456 = load i32, i32* %k, align 4, !dbg !8690
  %cmp139 = icmp slt i32 %456, 4, !dbg !8693
  br i1 %cmp139, label %for.body141, label %for.end192, !dbg !8694

for.body141:                                      ; preds = %for.cond138
  %457 = load i32, i32* %mb_y, align 4, !dbg !8695
  %mul142 = mul nsw i32 2, %457, !dbg !8697
  %458 = load i32, i32* %k, align 4, !dbg !8698
  %shr143 = ashr i32 %458, 1, !dbg !8699
  %add144 = add nsw i32 %mul142, %shr143, !dbg !8700
  %459 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8701
  %fragment_width145 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %459, i32 0, i32 39, !dbg !8702
  %arrayidx146 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width145, i64 0, i64 0, !dbg !8701
  %460 = load i32, i32* %arrayidx146, align 8, !dbg !8701
  %mul147 = mul nsw i32 %add144, %460, !dbg !8703
  %461 = load i32, i32* %mb_x, align 4, !dbg !8704
  %mul148 = mul nsw i32 2, %461, !dbg !8705
  %462 = load i32, i32* %k, align 4, !dbg !8706
  %and149 = and i32 %462, 1, !dbg !8707
  %add150 = add nsw i32 %mul148, %and149, !dbg !8708
  %add151 = add nsw i32 %mul147, %add150, !dbg !8709
  store i32 %add151, i32* %current_fragment, align 4, !dbg !8710
  %463 = load i32, i32* %current_macroblock, align 4, !dbg !8711
  %idxprom152 = sext i32 %463 to i64, !dbg !8713
  %464 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8713
  %macroblock_coding153 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %464, i32 0, i32 73, !dbg !8714
  %465 = load i8*, i8** %macroblock_coding153, align 8, !dbg !8714
  %arrayidx154 = getelementptr inbounds i8, i8* %465, i64 %idxprom152, !dbg !8713
  %466 = load i8, i8* %arrayidx154, align 1, !dbg !8713
  %conv155 = zext i8 %466 to i32, !dbg !8713
  %cmp156 = icmp eq i32 %conv155, 7, !dbg !8715
  br i1 %cmp156, label %if.then158, label %if.else174, !dbg !8716

if.then158:                                       ; preds = %for.body141
  %467 = load i32, i32* %k, align 4, !dbg !8717
  %idxprom159 = sext i32 %467 to i64, !dbg !8719
  %arrayidx160 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 %idxprom159, !dbg !8719
  %468 = load i32, i32* %arrayidx160, align 4, !dbg !8719
  %conv161 = trunc i32 %468 to i8, !dbg !8719
  %469 = load i32, i32* %current_fragment, align 4, !dbg !8720
  %idxprom162 = sext i32 %469 to i64, !dbg !8721
  %470 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8721
  %motion_val = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %470, i32 0, i32 47, !dbg !8722
  %arrayidx163 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val, i64 0, i64 0, !dbg !8721
  %471 = load [2 x i8]*, [2 x i8]** %arrayidx163, align 16, !dbg !8721
  %arrayidx164 = getelementptr inbounds [2 x i8], [2 x i8]* %471, i64 %idxprom162, !dbg !8721
  %arrayidx165 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx164, i64 0, i64 0, !dbg !8721
  store i8 %conv161, i8* %arrayidx165, align 1, !dbg !8723
  %472 = load i32, i32* %k, align 4, !dbg !8724
  %idxprom166 = sext i32 %472 to i64, !dbg !8725
  %arrayidx167 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 %idxprom166, !dbg !8725
  %473 = load i32, i32* %arrayidx167, align 4, !dbg !8725
  %conv168 = trunc i32 %473 to i8, !dbg !8725
  %474 = load i32, i32* %current_fragment, align 4, !dbg !8726
  %idxprom169 = sext i32 %474 to i64, !dbg !8727
  %475 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8727
  %motion_val170 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %475, i32 0, i32 47, !dbg !8728
  %arrayidx171 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val170, i64 0, i64 0, !dbg !8727
  %476 = load [2 x i8]*, [2 x i8]** %arrayidx171, align 16, !dbg !8727
  %arrayidx172 = getelementptr inbounds [2 x i8], [2 x i8]* %476, i64 %idxprom169, !dbg !8727
  %arrayidx173 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx172, i64 0, i64 1, !dbg !8727
  store i8 %conv168, i8* %arrayidx173, align 1, !dbg !8729
  br label %if.end189, !dbg !8730

if.else174:                                       ; preds = %for.body141
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8731
  %477 = load i32, i32* %arrayidx175, align 16, !dbg !8731
  %conv176 = trunc i32 %477 to i8, !dbg !8731
  %478 = load i32, i32* %current_fragment, align 4, !dbg !8733
  %idxprom177 = sext i32 %478 to i64, !dbg !8734
  %479 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8734
  %motion_val178 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %479, i32 0, i32 47, !dbg !8735
  %arrayidx179 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val178, i64 0, i64 0, !dbg !8734
  %480 = load [2 x i8]*, [2 x i8]** %arrayidx179, align 16, !dbg !8734
  %arrayidx180 = getelementptr inbounds [2 x i8], [2 x i8]* %480, i64 %idxprom177, !dbg !8734
  %arrayidx181 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx180, i64 0, i64 0, !dbg !8734
  store i8 %conv176, i8* %arrayidx181, align 1, !dbg !8736
  %arrayidx182 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8737
  %481 = load i32, i32* %arrayidx182, align 16, !dbg !8737
  %conv183 = trunc i32 %481 to i8, !dbg !8737
  %482 = load i32, i32* %current_fragment, align 4, !dbg !8738
  %idxprom184 = sext i32 %482 to i64, !dbg !8739
  %483 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8739
  %motion_val185 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %483, i32 0, i32 47, !dbg !8740
  %arrayidx186 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val185, i64 0, i64 0, !dbg !8739
  %484 = load [2 x i8]*, [2 x i8]** %arrayidx186, align 16, !dbg !8739
  %arrayidx187 = getelementptr inbounds [2 x i8], [2 x i8]* %484, i64 %idxprom184, !dbg !8739
  %arrayidx188 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx187, i64 0, i64 1, !dbg !8739
  store i8 %conv183, i8* %arrayidx188, align 1, !dbg !8741
  br label %if.end189

if.end189:                                        ; preds = %if.else174, %if.then158
  br label %for.inc190, !dbg !8742

for.inc190:                                       ; preds = %if.end189
  %485 = load i32, i32* %k, align 4, !dbg !8743
  %inc191 = add nsw i32 %485, 1, !dbg !8743
  store i32 %inc191, i32* %k, align 4, !dbg !8743
  br label %for.cond138, !dbg !8745, !llvm.loop !8746

for.end192:                                       ; preds = %for.cond138
  %486 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8748
  %chroma_y_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %486, i32 0, i32 8, !dbg !8750
  %487 = load i32, i32* %chroma_y_shift, align 4, !dbg !8750
  %tobool193 = icmp ne i32 %487, 0, !dbg !8748
  br i1 %tobool193, label %if.then194, label %if.else293, !dbg !8751

if.then194:                                       ; preds = %for.end192
  %488 = load i32, i32* %current_macroblock, align 4, !dbg !8752
  %idxprom195 = sext i32 %488 to i64, !dbg !8755
  %489 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8755
  %macroblock_coding196 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %489, i32 0, i32 73, !dbg !8756
  %490 = load i8*, i8** %macroblock_coding196, align 8, !dbg !8756
  %arrayidx197 = getelementptr inbounds i8, i8* %490, i64 %idxprom195, !dbg !8755
  %491 = load i8, i8* %arrayidx197, align 1, !dbg !8755
  %conv198 = zext i8 %491 to i32, !dbg !8755
  %cmp199 = icmp eq i32 %conv198, 7, !dbg !8757
  br i1 %cmp199, label %if.then201, label %if.end263, !dbg !8758

if.then201:                                       ; preds = %if.then194
  %arrayidx202 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8759
  %492 = load i32, i32* %arrayidx202, align 16, !dbg !8759
  %arrayidx203 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8761
  %493 = load i32, i32* %arrayidx203, align 4, !dbg !8761
  %add204 = add nsw i32 %492, %493, !dbg !8762
  %arrayidx205 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 2, !dbg !8763
  %494 = load i32, i32* %arrayidx205, align 8, !dbg !8763
  %add206 = add nsw i32 %add204, %494, !dbg !8764
  %arrayidx207 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 3, !dbg !8765
  %495 = load i32, i32* %arrayidx207, align 4, !dbg !8765
  %add208 = add nsw i32 %add206, %495, !dbg !8766
  %cmp209 = icmp sgt i32 %add208, 0, !dbg !8767
  br i1 %cmp209, label %cond.true, label %cond.false, !dbg !8768

cond.true:                                        ; preds = %if.then201
  %arrayidx211 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8769
  %496 = load i32, i32* %arrayidx211, align 16, !dbg !8769
  %arrayidx212 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8771
  %497 = load i32, i32* %arrayidx212, align 4, !dbg !8771
  %add213 = add nsw i32 %496, %497, !dbg !8772
  %arrayidx214 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 2, !dbg !8773
  %498 = load i32, i32* %arrayidx214, align 8, !dbg !8773
  %add215 = add nsw i32 %add213, %498, !dbg !8774
  %arrayidx216 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 3, !dbg !8775
  %499 = load i32, i32* %arrayidx216, align 4, !dbg !8775
  %add217 = add nsw i32 %add215, %499, !dbg !8776
  %add218 = add nsw i32 %add217, 2, !dbg !8777
  %shr219 = ashr i32 %add218, 2, !dbg !8778
  br label %cond.end, !dbg !8779

cond.false:                                       ; preds = %if.then201
  %arrayidx220 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8780
  %500 = load i32, i32* %arrayidx220, align 16, !dbg !8780
  %arrayidx221 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8782
  %501 = load i32, i32* %arrayidx221, align 4, !dbg !8782
  %add222 = add nsw i32 %500, %501, !dbg !8783
  %arrayidx223 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 2, !dbg !8784
  %502 = load i32, i32* %arrayidx223, align 8, !dbg !8784
  %add224 = add nsw i32 %add222, %502, !dbg !8785
  %arrayidx225 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 3, !dbg !8786
  %503 = load i32, i32* %arrayidx225, align 4, !dbg !8786
  %add226 = add nsw i32 %add224, %503, !dbg !8787
  %add227 = add nsw i32 %add226, 2, !dbg !8788
  %sub = sub nsw i32 %add227, 1, !dbg !8789
  %shr228 = ashr i32 %sub, 2, !dbg !8790
  br label %cond.end, !dbg !8791

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shr219, %cond.true ], [ %shr228, %cond.false ], !dbg !8792
  %arrayidx229 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8794
  store i32 %cond, i32* %arrayidx229, align 16, !dbg !8795
  %arrayidx230 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8796
  %504 = load i32, i32* %arrayidx230, align 16, !dbg !8796
  %arrayidx231 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8797
  %505 = load i32, i32* %arrayidx231, align 4, !dbg !8797
  %add232 = add nsw i32 %504, %505, !dbg !8798
  %arrayidx233 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 2, !dbg !8799
  %506 = load i32, i32* %arrayidx233, align 8, !dbg !8799
  %add234 = add nsw i32 %add232, %506, !dbg !8800
  %arrayidx235 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 3, !dbg !8801
  %507 = load i32, i32* %arrayidx235, align 4, !dbg !8801
  %add236 = add nsw i32 %add234, %507, !dbg !8802
  %cmp237 = icmp sgt i32 %add236, 0, !dbg !8803
  br i1 %cmp237, label %cond.true239, label %cond.false249, !dbg !8804

cond.true239:                                     ; preds = %cond.end
  %arrayidx240 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8805
  %508 = load i32, i32* %arrayidx240, align 16, !dbg !8805
  %arrayidx241 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8806
  %509 = load i32, i32* %arrayidx241, align 4, !dbg !8806
  %add242 = add nsw i32 %508, %509, !dbg !8807
  %arrayidx243 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 2, !dbg !8808
  %510 = load i32, i32* %arrayidx243, align 8, !dbg !8808
  %add244 = add nsw i32 %add242, %510, !dbg !8809
  %arrayidx245 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 3, !dbg !8810
  %511 = load i32, i32* %arrayidx245, align 4, !dbg !8810
  %add246 = add nsw i32 %add244, %511, !dbg !8811
  %add247 = add nsw i32 %add246, 2, !dbg !8812
  %shr248 = ashr i32 %add247, 2, !dbg !8813
  br label %cond.end260, !dbg !8814

cond.false249:                                    ; preds = %cond.end
  %arrayidx250 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8815
  %512 = load i32, i32* %arrayidx250, align 16, !dbg !8815
  %arrayidx251 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8816
  %513 = load i32, i32* %arrayidx251, align 4, !dbg !8816
  %add252 = add nsw i32 %512, %513, !dbg !8817
  %arrayidx253 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 2, !dbg !8818
  %514 = load i32, i32* %arrayidx253, align 8, !dbg !8818
  %add254 = add nsw i32 %add252, %514, !dbg !8819
  %arrayidx255 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 3, !dbg !8820
  %515 = load i32, i32* %arrayidx255, align 4, !dbg !8820
  %add256 = add nsw i32 %add254, %515, !dbg !8821
  %add257 = add nsw i32 %add256, 2, !dbg !8822
  %sub258 = sub nsw i32 %add257, 1, !dbg !8823
  %shr259 = ashr i32 %sub258, 2, !dbg !8824
  br label %cond.end260, !dbg !8825

cond.end260:                                      ; preds = %cond.false249, %cond.true239
  %cond261 = phi i32 [ %shr248, %cond.true239 ], [ %shr259, %cond.false249 ], !dbg !8826
  %arrayidx262 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8827
  store i32 %cond261, i32* %arrayidx262, align 16, !dbg !8828
  br label %if.end263, !dbg !8829

if.end263:                                        ; preds = %cond.end260, %if.then194
  %arrayidx264 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8830
  %516 = load i32, i32* %arrayidx264, align 16, !dbg !8830
  %shr265 = ashr i32 %516, 1, !dbg !8831
  %arrayidx266 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8832
  %517 = load i32, i32* %arrayidx266, align 16, !dbg !8832
  %and267 = and i32 %517, 1, !dbg !8833
  %or = or i32 %shr265, %and267, !dbg !8834
  %arrayidx268 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8835
  store i32 %or, i32* %arrayidx268, align 16, !dbg !8836
  %arrayidx269 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8837
  %518 = load i32, i32* %arrayidx269, align 16, !dbg !8837
  %shr270 = ashr i32 %518, 1, !dbg !8838
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8839
  %519 = load i32, i32* %arrayidx271, align 16, !dbg !8839
  %and272 = and i32 %519, 1, !dbg !8840
  %or273 = or i32 %shr270, %and272, !dbg !8841
  %arrayidx274 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8842
  store i32 %or273, i32* %arrayidx274, align 16, !dbg !8843
  %520 = load i32, i32* %mb_y, align 4, !dbg !8844
  %521 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8845
  %fragment_width275 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %521, i32 0, i32 39, !dbg !8846
  %arrayidx276 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width275, i64 0, i64 1, !dbg !8845
  %522 = load i32, i32* %arrayidx276, align 4, !dbg !8845
  %mul277 = mul nsw i32 %520, %522, !dbg !8847
  %523 = load i32, i32* %mb_x, align 4, !dbg !8848
  %add278 = add nsw i32 %mul277, %523, !dbg !8849
  store i32 %add278, i32* %frag, align 4, !dbg !8850
  %arrayidx279 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8851
  %524 = load i32, i32* %arrayidx279, align 16, !dbg !8851
  %conv280 = trunc i32 %524 to i8, !dbg !8851
  %525 = load i32, i32* %frag, align 4, !dbg !8852
  %idxprom281 = sext i32 %525 to i64, !dbg !8853
  %526 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8853
  %motion_val282 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %526, i32 0, i32 47, !dbg !8854
  %arrayidx283 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val282, i64 0, i64 1, !dbg !8853
  %527 = load [2 x i8]*, [2 x i8]** %arrayidx283, align 8, !dbg !8853
  %arrayidx284 = getelementptr inbounds [2 x i8], [2 x i8]* %527, i64 %idxprom281, !dbg !8853
  %arrayidx285 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx284, i64 0, i64 0, !dbg !8853
  store i8 %conv280, i8* %arrayidx285, align 1, !dbg !8855
  %arrayidx286 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8856
  %528 = load i32, i32* %arrayidx286, align 16, !dbg !8856
  %conv287 = trunc i32 %528 to i8, !dbg !8856
  %529 = load i32, i32* %frag, align 4, !dbg !8857
  %idxprom288 = sext i32 %529 to i64, !dbg !8858
  %530 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8858
  %motion_val289 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %530, i32 0, i32 47, !dbg !8859
  %arrayidx290 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val289, i64 0, i64 1, !dbg !8858
  %531 = load [2 x i8]*, [2 x i8]** %arrayidx290, align 8, !dbg !8858
  %arrayidx291 = getelementptr inbounds [2 x i8], [2 x i8]* %531, i64 %idxprom288, !dbg !8858
  %arrayidx292 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx291, i64 0, i64 1, !dbg !8858
  store i8 %conv287, i8* %arrayidx292, align 1, !dbg !8860
  br label %if.end494, !dbg !8861

if.else293:                                       ; preds = %for.end192
  %532 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8862
  %chroma_x_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %532, i32 0, i32 7, !dbg !8865
  %533 = load i32, i32* %chroma_x_shift, align 16, !dbg !8865
  %tobool294 = icmp ne i32 %533, 0, !dbg !8862
  br i1 %tobool294, label %if.then295, label %if.else436, !dbg !8862

if.then295:                                       ; preds = %if.else293
  %534 = load i32, i32* %current_macroblock, align 4, !dbg !8866
  %idxprom296 = sext i32 %534 to i64, !dbg !8869
  %535 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8869
  %macroblock_coding297 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %535, i32 0, i32 73, !dbg !8870
  %536 = load i8*, i8** %macroblock_coding297, align 8, !dbg !8870
  %arrayidx298 = getelementptr inbounds i8, i8* %536, i64 %idxprom296, !dbg !8869
  %537 = load i8, i8* %arrayidx298, align 1, !dbg !8869
  %conv299 = zext i8 %537 to i32, !dbg !8869
  %cmp300 = icmp eq i32 %conv299, 7, !dbg !8871
  br i1 %cmp300, label %if.then302, label %if.else387, !dbg !8872

if.then302:                                       ; preds = %if.then295
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8873
  %538 = load i32, i32* %arrayidx303, align 16, !dbg !8873
  %arrayidx304 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8875
  %539 = load i32, i32* %arrayidx304, align 4, !dbg !8875
  %add305 = add nsw i32 %538, %539, !dbg !8876
  %cmp306 = icmp sgt i32 %add305, 0, !dbg !8877
  br i1 %cmp306, label %cond.true308, label %cond.false314, !dbg !8878

cond.true308:                                     ; preds = %if.then302
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8879
  %540 = load i32, i32* %arrayidx309, align 16, !dbg !8879
  %arrayidx310 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8881
  %541 = load i32, i32* %arrayidx310, align 4, !dbg !8881
  %add311 = add nsw i32 %540, %541, !dbg !8882
  %add312 = add nsw i32 %add311, 1, !dbg !8883
  %shr313 = ashr i32 %add312, 1, !dbg !8884
  br label %cond.end321, !dbg !8885

cond.false314:                                    ; preds = %if.then302
  %arrayidx315 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8886
  %542 = load i32, i32* %arrayidx315, align 16, !dbg !8886
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8888
  %543 = load i32, i32* %arrayidx316, align 4, !dbg !8888
  %add317 = add nsw i32 %542, %543, !dbg !8889
  %add318 = add nsw i32 %add317, 1, !dbg !8890
  %sub319 = sub nsw i32 %add318, 1, !dbg !8891
  %shr320 = ashr i32 %sub319, 1, !dbg !8892
  br label %cond.end321, !dbg !8893

cond.end321:                                      ; preds = %cond.false314, %cond.true308
  %cond322 = phi i32 [ %shr313, %cond.true308 ], [ %shr320, %cond.false314 ], !dbg !8894
  %arrayidx323 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8896
  store i32 %cond322, i32* %arrayidx323, align 16, !dbg !8897
  %arrayidx324 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8898
  %544 = load i32, i32* %arrayidx324, align 16, !dbg !8898
  %arrayidx325 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8899
  %545 = load i32, i32* %arrayidx325, align 4, !dbg !8899
  %add326 = add nsw i32 %544, %545, !dbg !8900
  %cmp327 = icmp sgt i32 %add326, 0, !dbg !8901
  br i1 %cmp327, label %cond.true329, label %cond.false335, !dbg !8902

cond.true329:                                     ; preds = %cond.end321
  %arrayidx330 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8903
  %546 = load i32, i32* %arrayidx330, align 16, !dbg !8903
  %arrayidx331 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8904
  %547 = load i32, i32* %arrayidx331, align 4, !dbg !8904
  %add332 = add nsw i32 %546, %547, !dbg !8905
  %add333 = add nsw i32 %add332, 1, !dbg !8906
  %shr334 = ashr i32 %add333, 1, !dbg !8907
  br label %cond.end342, !dbg !8908

cond.false335:                                    ; preds = %cond.end321
  %arrayidx336 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8909
  %548 = load i32, i32* %arrayidx336, align 16, !dbg !8909
  %arrayidx337 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8910
  %549 = load i32, i32* %arrayidx337, align 4, !dbg !8910
  %add338 = add nsw i32 %548, %549, !dbg !8911
  %add339 = add nsw i32 %add338, 1, !dbg !8912
  %sub340 = sub nsw i32 %add339, 1, !dbg !8913
  %shr341 = ashr i32 %sub340, 1, !dbg !8914
  br label %cond.end342, !dbg !8915

cond.end342:                                      ; preds = %cond.false335, %cond.true329
  %cond343 = phi i32 [ %shr334, %cond.true329 ], [ %shr341, %cond.false335 ], !dbg !8916
  %arrayidx344 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8917
  store i32 %cond343, i32* %arrayidx344, align 16, !dbg !8918
  %arrayidx345 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 2, !dbg !8919
  %550 = load i32, i32* %arrayidx345, align 8, !dbg !8919
  %arrayidx346 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 3, !dbg !8920
  %551 = load i32, i32* %arrayidx346, align 4, !dbg !8920
  %add347 = add nsw i32 %550, %551, !dbg !8921
  %cmp348 = icmp sgt i32 %add347, 0, !dbg !8922
  br i1 %cmp348, label %cond.true350, label %cond.false356, !dbg !8923

cond.true350:                                     ; preds = %cond.end342
  %arrayidx351 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 2, !dbg !8924
  %552 = load i32, i32* %arrayidx351, align 8, !dbg !8924
  %arrayidx352 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 3, !dbg !8925
  %553 = load i32, i32* %arrayidx352, align 4, !dbg !8925
  %add353 = add nsw i32 %552, %553, !dbg !8926
  %add354 = add nsw i32 %add353, 1, !dbg !8927
  %shr355 = ashr i32 %add354, 1, !dbg !8928
  br label %cond.end363, !dbg !8929

cond.false356:                                    ; preds = %cond.end342
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 2, !dbg !8930
  %554 = load i32, i32* %arrayidx357, align 8, !dbg !8930
  %arrayidx358 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 3, !dbg !8931
  %555 = load i32, i32* %arrayidx358, align 4, !dbg !8931
  %add359 = add nsw i32 %554, %555, !dbg !8932
  %add360 = add nsw i32 %add359, 1, !dbg !8933
  %sub361 = sub nsw i32 %add360, 1, !dbg !8934
  %shr362 = ashr i32 %sub361, 1, !dbg !8935
  br label %cond.end363, !dbg !8936

cond.end363:                                      ; preds = %cond.false356, %cond.true350
  %cond364 = phi i32 [ %shr355, %cond.true350 ], [ %shr362, %cond.false356 ], !dbg !8937
  %arrayidx365 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8938
  store i32 %cond364, i32* %arrayidx365, align 4, !dbg !8939
  %arrayidx366 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 2, !dbg !8940
  %556 = load i32, i32* %arrayidx366, align 8, !dbg !8940
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 3, !dbg !8941
  %557 = load i32, i32* %arrayidx367, align 4, !dbg !8941
  %add368 = add nsw i32 %556, %557, !dbg !8942
  %cmp369 = icmp sgt i32 %add368, 0, !dbg !8943
  br i1 %cmp369, label %cond.true371, label %cond.false377, !dbg !8944

cond.true371:                                     ; preds = %cond.end363
  %arrayidx372 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 2, !dbg !8945
  %558 = load i32, i32* %arrayidx372, align 8, !dbg !8945
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 3, !dbg !8946
  %559 = load i32, i32* %arrayidx373, align 4, !dbg !8946
  %add374 = add nsw i32 %558, %559, !dbg !8947
  %add375 = add nsw i32 %add374, 1, !dbg !8948
  %shr376 = ashr i32 %add375, 1, !dbg !8949
  br label %cond.end384, !dbg !8950

cond.false377:                                    ; preds = %cond.end363
  %arrayidx378 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 2, !dbg !8951
  %560 = load i32, i32* %arrayidx378, align 8, !dbg !8951
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 3, !dbg !8952
  %561 = load i32, i32* %arrayidx379, align 4, !dbg !8952
  %add380 = add nsw i32 %560, %561, !dbg !8953
  %add381 = add nsw i32 %add380, 1, !dbg !8954
  %sub382 = sub nsw i32 %add381, 1, !dbg !8955
  %shr383 = ashr i32 %sub382, 1, !dbg !8956
  br label %cond.end384, !dbg !8957

cond.end384:                                      ; preds = %cond.false377, %cond.true371
  %cond385 = phi i32 [ %shr376, %cond.true371 ], [ %shr383, %cond.false377 ], !dbg !8958
  %arrayidx386 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8959
  store i32 %cond385, i32* %arrayidx386, align 4, !dbg !8960
  br label %if.end392, !dbg !8961

if.else387:                                       ; preds = %if.then295
  %arrayidx388 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8962
  %562 = load i32, i32* %arrayidx388, align 16, !dbg !8962
  %arrayidx389 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8964
  store i32 %562, i32* %arrayidx389, align 4, !dbg !8965
  %arrayidx390 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !8966
  %563 = load i32, i32* %arrayidx390, align 16, !dbg !8966
  %arrayidx391 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 1, !dbg !8967
  store i32 %563, i32* %arrayidx391, align 4, !dbg !8968
  br label %if.end392

if.end392:                                        ; preds = %if.else387, %cond.end384
  %arrayidx393 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8969
  %564 = load i32, i32* %arrayidx393, align 16, !dbg !8969
  %shr394 = ashr i32 %564, 1, !dbg !8970
  %arrayidx395 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8971
  %565 = load i32, i32* %arrayidx395, align 16, !dbg !8971
  %and396 = and i32 %565, 1, !dbg !8972
  %or397 = or i32 %shr394, %and396, !dbg !8973
  %arrayidx398 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !8974
  store i32 %or397, i32* %arrayidx398, align 16, !dbg !8975
  %arrayidx399 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8976
  %566 = load i32, i32* %arrayidx399, align 4, !dbg !8976
  %shr400 = ashr i32 %566, 1, !dbg !8977
  %arrayidx401 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8978
  %567 = load i32, i32* %arrayidx401, align 4, !dbg !8978
  %and402 = and i32 %567, 1, !dbg !8979
  %or403 = or i32 %shr400, %and402, !dbg !8980
  %arrayidx404 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 1, !dbg !8981
  store i32 %or403, i32* %arrayidx404, align 4, !dbg !8982
  %568 = load i32, i32* %mb_y, align 4, !dbg !8983
  %mul405 = mul nsw i32 2, %568, !dbg !8984
  %569 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !8985
  %fragment_width406 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %569, i32 0, i32 39, !dbg !8986
  %arrayidx407 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width406, i64 0, i64 1, !dbg !8985
  %570 = load i32, i32* %arrayidx407, align 4, !dbg !8985
  %mul408 = mul nsw i32 %mul405, %570, !dbg !8987
  %571 = load i32, i32* %mb_x, align 4, !dbg !8988
  %add409 = add nsw i32 %mul408, %571, !dbg !8989
  store i32 %add409, i32* %frag, align 4, !dbg !8990
  store i32 0, i32* %k, align 4, !dbg !8991
  br label %for.cond410, !dbg !8993

for.cond410:                                      ; preds = %for.inc433, %if.end392
  %572 = load i32, i32* %k, align 4, !dbg !8994
  %cmp411 = icmp slt i32 %572, 2, !dbg !8997
  br i1 %cmp411, label %for.body413, label %for.end435, !dbg !8998

for.body413:                                      ; preds = %for.cond410
  %573 = load i32, i32* %k, align 4, !dbg !8999
  %idxprom414 = sext i32 %573 to i64, !dbg !9001
  %arrayidx415 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 %idxprom414, !dbg !9001
  %574 = load i32, i32* %arrayidx415, align 4, !dbg !9001
  %conv416 = trunc i32 %574 to i8, !dbg !9001
  %575 = load i32, i32* %frag, align 4, !dbg !9002
  %idxprom417 = sext i32 %575 to i64, !dbg !9003
  %576 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9003
  %motion_val418 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %576, i32 0, i32 47, !dbg !9004
  %arrayidx419 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val418, i64 0, i64 1, !dbg !9003
  %577 = load [2 x i8]*, [2 x i8]** %arrayidx419, align 8, !dbg !9003
  %arrayidx420 = getelementptr inbounds [2 x i8], [2 x i8]* %577, i64 %idxprom417, !dbg !9003
  %arrayidx421 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx420, i64 0, i64 0, !dbg !9003
  store i8 %conv416, i8* %arrayidx421, align 1, !dbg !9005
  %578 = load i32, i32* %k, align 4, !dbg !9006
  %idxprom422 = sext i32 %578 to i64, !dbg !9007
  %arrayidx423 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 %idxprom422, !dbg !9007
  %579 = load i32, i32* %arrayidx423, align 4, !dbg !9007
  %conv424 = trunc i32 %579 to i8, !dbg !9007
  %580 = load i32, i32* %frag, align 4, !dbg !9008
  %idxprom425 = sext i32 %580 to i64, !dbg !9009
  %581 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9009
  %motion_val426 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %581, i32 0, i32 47, !dbg !9010
  %arrayidx427 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val426, i64 0, i64 1, !dbg !9009
  %582 = load [2 x i8]*, [2 x i8]** %arrayidx427, align 8, !dbg !9009
  %arrayidx428 = getelementptr inbounds [2 x i8], [2 x i8]* %582, i64 %idxprom425, !dbg !9009
  %arrayidx429 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx428, i64 0, i64 1, !dbg !9009
  store i8 %conv424, i8* %arrayidx429, align 1, !dbg !9011
  %583 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9012
  %fragment_width430 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %583, i32 0, i32 39, !dbg !9013
  %arrayidx431 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width430, i64 0, i64 1, !dbg !9012
  %584 = load i32, i32* %arrayidx431, align 4, !dbg !9012
  %585 = load i32, i32* %frag, align 4, !dbg !9014
  %add432 = add nsw i32 %585, %584, !dbg !9014
  store i32 %add432, i32* %frag, align 4, !dbg !9014
  br label %for.inc433, !dbg !9015

for.inc433:                                       ; preds = %for.body413
  %586 = load i32, i32* %k, align 4, !dbg !9016
  %inc434 = add nsw i32 %586, 1, !dbg !9016
  store i32 %inc434, i32* %k, align 4, !dbg !9016
  br label %for.cond410, !dbg !9018, !llvm.loop !9019

for.end435:                                       ; preds = %for.cond410
  br label %if.end493, !dbg !9021

if.else436:                                       ; preds = %if.else293
  store i32 0, i32* %k, align 4, !dbg !9022
  br label %for.cond437, !dbg !9025

for.cond437:                                      ; preds = %for.inc490, %if.else436
  %587 = load i32, i32* %k, align 4, !dbg !9026
  %cmp438 = icmp slt i32 %587, 4, !dbg !9029
  br i1 %cmp438, label %for.body440, label %for.end492, !dbg !9030

for.body440:                                      ; preds = %for.cond437
  %588 = load i32, i32* %mb_y, align 4, !dbg !9031
  %mul441 = mul nsw i32 2, %588, !dbg !9033
  %589 = load i32, i32* %k, align 4, !dbg !9034
  %shr442 = ashr i32 %589, 1, !dbg !9035
  %add443 = add nsw i32 %mul441, %shr442, !dbg !9036
  %590 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9037
  %fragment_width444 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %590, i32 0, i32 39, !dbg !9038
  %arrayidx445 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width444, i64 0, i64 1, !dbg !9037
  %591 = load i32, i32* %arrayidx445, align 4, !dbg !9037
  %mul446 = mul nsw i32 %add443, %591, !dbg !9039
  %592 = load i32, i32* %mb_x, align 4, !dbg !9040
  %mul447 = mul nsw i32 2, %592, !dbg !9041
  %593 = load i32, i32* %k, align 4, !dbg !9042
  %and448 = and i32 %593, 1, !dbg !9043
  %add449 = add nsw i32 %mul447, %and448, !dbg !9044
  %add450 = add nsw i32 %mul446, %add449, !dbg !9045
  store i32 %add450, i32* %frag, align 4, !dbg !9046
  %594 = load i32, i32* %current_macroblock, align 4, !dbg !9047
  %idxprom451 = sext i32 %594 to i64, !dbg !9049
  %595 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9049
  %macroblock_coding452 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %595, i32 0, i32 73, !dbg !9050
  %596 = load i8*, i8** %macroblock_coding452, align 8, !dbg !9050
  %arrayidx453 = getelementptr inbounds i8, i8* %596, i64 %idxprom451, !dbg !9049
  %597 = load i8, i8* %arrayidx453, align 1, !dbg !9049
  %conv454 = zext i8 %597 to i32, !dbg !9049
  %cmp455 = icmp eq i32 %conv454, 7, !dbg !9051
  br i1 %cmp455, label %if.then457, label %if.else474, !dbg !9052

if.then457:                                       ; preds = %for.body440
  %598 = load i32, i32* %k, align 4, !dbg !9053
  %idxprom458 = sext i32 %598 to i64, !dbg !9055
  %arrayidx459 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 %idxprom458, !dbg !9055
  %599 = load i32, i32* %arrayidx459, align 4, !dbg !9055
  %conv460 = trunc i32 %599 to i8, !dbg !9055
  %600 = load i32, i32* %frag, align 4, !dbg !9056
  %idxprom461 = sext i32 %600 to i64, !dbg !9057
  %601 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9057
  %motion_val462 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %601, i32 0, i32 47, !dbg !9058
  %arrayidx463 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val462, i64 0, i64 1, !dbg !9057
  %602 = load [2 x i8]*, [2 x i8]** %arrayidx463, align 8, !dbg !9057
  %arrayidx464 = getelementptr inbounds [2 x i8], [2 x i8]* %602, i64 %idxprom461, !dbg !9057
  %arrayidx465 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx464, i64 0, i64 0, !dbg !9057
  store i8 %conv460, i8* %arrayidx465, align 1, !dbg !9059
  %603 = load i32, i32* %k, align 4, !dbg !9060
  %idxprom466 = sext i32 %603 to i64, !dbg !9061
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 %idxprom466, !dbg !9061
  %604 = load i32, i32* %arrayidx467, align 4, !dbg !9061
  %conv468 = trunc i32 %604 to i8, !dbg !9061
  %605 = load i32, i32* %frag, align 4, !dbg !9062
  %idxprom469 = sext i32 %605 to i64, !dbg !9063
  %606 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9063
  %motion_val470 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %606, i32 0, i32 47, !dbg !9064
  %arrayidx471 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val470, i64 0, i64 1, !dbg !9063
  %607 = load [2 x i8]*, [2 x i8]** %arrayidx471, align 8, !dbg !9063
  %arrayidx472 = getelementptr inbounds [2 x i8], [2 x i8]* %607, i64 %idxprom469, !dbg !9063
  %arrayidx473 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx472, i64 0, i64 1, !dbg !9063
  store i8 %conv468, i8* %arrayidx473, align 1, !dbg !9065
  br label %if.end489, !dbg !9066

if.else474:                                       ; preds = %for.body440
  %arrayidx475 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_x, i64 0, i64 0, !dbg !9067
  %608 = load i32, i32* %arrayidx475, align 16, !dbg !9067
  %conv476 = trunc i32 %608 to i8, !dbg !9067
  %609 = load i32, i32* %frag, align 4, !dbg !9069
  %idxprom477 = sext i32 %609 to i64, !dbg !9070
  %610 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9070
  %motion_val478 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %610, i32 0, i32 47, !dbg !9071
  %arrayidx479 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val478, i64 0, i64 1, !dbg !9070
  %611 = load [2 x i8]*, [2 x i8]** %arrayidx479, align 8, !dbg !9070
  %arrayidx480 = getelementptr inbounds [2 x i8], [2 x i8]* %611, i64 %idxprom477, !dbg !9070
  %arrayidx481 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx480, i64 0, i64 0, !dbg !9070
  store i8 %conv476, i8* %arrayidx481, align 1, !dbg !9072
  %arrayidx482 = getelementptr inbounds [4 x i32], [4 x i32]* %motion_y, i64 0, i64 0, !dbg !9073
  %612 = load i32, i32* %arrayidx482, align 16, !dbg !9073
  %conv483 = trunc i32 %612 to i8, !dbg !9073
  %613 = load i32, i32* %frag, align 4, !dbg !9074
  %idxprom484 = sext i32 %613 to i64, !dbg !9075
  %614 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9075
  %motion_val485 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %614, i32 0, i32 47, !dbg !9076
  %arrayidx486 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val485, i64 0, i64 1, !dbg !9075
  %615 = load [2 x i8]*, [2 x i8]** %arrayidx486, align 8, !dbg !9075
  %arrayidx487 = getelementptr inbounds [2 x i8], [2 x i8]* %615, i64 %idxprom484, !dbg !9075
  %arrayidx488 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx487, i64 0, i64 1, !dbg !9075
  store i8 %conv483, i8* %arrayidx488, align 1, !dbg !9077
  br label %if.end489

if.end489:                                        ; preds = %if.else474, %if.then457
  br label %for.inc490, !dbg !9078

for.inc490:                                       ; preds = %if.end489
  %616 = load i32, i32* %k, align 4, !dbg !9079
  %inc491 = add nsw i32 %616, 1, !dbg !9079
  store i32 %inc491, i32* %k, align 4, !dbg !9079
  br label %for.cond437, !dbg !9081, !llvm.loop !9082

for.end492:                                       ; preds = %for.cond437
  br label %if.end493

if.end493:                                        ; preds = %for.end492, %for.end435
  br label %if.end494

if.end494:                                        ; preds = %if.end493, %if.end263
  br label %for.inc495, !dbg !9084

for.inc495:                                       ; preds = %if.end494, %if.then23
  %617 = load i32, i32* %j, align 4, !dbg !9085
  %inc496 = add nsw i32 %617, 1, !dbg !9085
  store i32 %inc496, i32* %j, align 4, !dbg !9085
  br label %for.cond8, !dbg !9087, !llvm.loop !9088

for.end497:                                       ; preds = %for.cond8
  br label %for.inc498, !dbg !9090

for.inc498:                                       ; preds = %for.end497
  %618 = load i32, i32* %sb_x, align 4, !dbg !9091
  %inc499 = add nsw i32 %618, 1, !dbg !9091
  store i32 %inc499, i32* %sb_x, align 4, !dbg !9091
  br label %for.cond1, !dbg !9093, !llvm.loop !9094

for.end500:                                       ; preds = %for.cond1
  br label %for.inc501, !dbg !9096

for.inc501:                                       ; preds = %for.end500
  %619 = load i32, i32* %sb_y, align 4, !dbg !9097
  %inc502 = add nsw i32 %619, 1, !dbg !9097
  store i32 %inc502, i32* %sb_y, align 4, !dbg !9097
  br label %for.cond, !dbg !9099, !llvm.loop !9100

for.end503:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9102
  br label %return, !dbg !9102

return:                                           ; preds = %for.end503, %if.then6, %if.then
  %620 = load i32, i32* %retval, align 4, !dbg !9103
  ret i32 %620, !dbg !9103
}

; Function Attrs: nounwind uwtable
define internal i32 @unpack_block_qpis(%struct.Vp3DecodeContext* %s, %struct.GetBitContext* %gb) #0 !dbg !9104 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4271, metadata !1942), !dbg !9105
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4271, metadata !1942), !dbg !9112
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4271, metadata !1942), !dbg !9114
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5689, metadata !1942), !dbg !9116
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5691, metadata !1942), !dbg !9117
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5693, metadata !1942), !dbg !9118
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5695, metadata !1942), !dbg !9119
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5697, metadata !1942), !dbg !9120
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5699, metadata !1942), !dbg !9121
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5701, metadata !1942), !dbg !9122
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5703, metadata !1942), !dbg !9123
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5705, metadata !1942), !dbg !9124
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5707, metadata !1942), !dbg !9125
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5709, metadata !1942), !dbg !9126
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %qpi = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bit = alloca i32, align 4
  %run_length = alloca i32, align 4
  %blocks_decoded = alloca i32, align 4
  %num_blocks_at_qpi = alloca i32, align 4
  %num_blocks = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !9127, metadata !1942), !dbg !9128
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9129, metadata !1942), !dbg !9130
  call void @llvm.dbg.declare(metadata i32* %qpi, metadata !9131, metadata !1942), !dbg !9132
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9133, metadata !1942), !dbg !9134
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9135, metadata !1942), !dbg !9136
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !9137, metadata !1942), !dbg !9138
  call void @llvm.dbg.declare(metadata i32* %run_length, metadata !9139, metadata !1942), !dbg !9140
  call void @llvm.dbg.declare(metadata i32* %blocks_decoded, metadata !9141, metadata !1942), !dbg !9142
  call void @llvm.dbg.declare(metadata i32* %num_blocks_at_qpi, metadata !9143, metadata !1942), !dbg !9144
  call void @llvm.dbg.declare(metadata i32* %num_blocks, metadata !9145, metadata !1942), !dbg !9146
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9147
  %total_num_coded_frags = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 57, !dbg !9148
  %1 = load i32, i32* %total_num_coded_frags, align 16, !dbg !9148
  store i32 %1, i32* %num_blocks, align 4, !dbg !9146
  store i32 0, i32* %qpi, align 4, !dbg !9149
  br label %for.cond, !dbg !9150

for.cond:                                         ; preds = %for.inc50, %entry
  %2 = load i32, i32* %qpi, align 4, !dbg !9151
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9153
  %nqps = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 23, !dbg !9154
  %4 = load i32, i32* %nqps, align 8, !dbg !9154
  %sub = sub nsw i32 %4, 1, !dbg !9155
  %cmp = icmp slt i32 %2, %sub, !dbg !9156
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9157

land.rhs:                                         ; preds = %for.cond
  %5 = load i32, i32* %num_blocks, align 4, !dbg !9158
  %cmp1 = icmp sgt i32 %5, 0, !dbg !9160
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %6, label %for.body, label %for.end52, !dbg !9161

for.body:                                         ; preds = %land.end
  store i32 0, i32* %num_blocks_at_qpi, align 4, !dbg !9163
  store i32 0, i32* %blocks_decoded, align 4, !dbg !9164
  store i32 0, i32* %i, align 4, !dbg !9165
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9166
  %call = call i32 @get_bits1(%struct.GetBitContext* %7), !dbg !9167
  %xor = xor i32 %call, 1, !dbg !9168
  store i32 %xor, i32* %bit, align 4, !dbg !9169
  store i32 0, i32* %run_length, align 4, !dbg !9170
  br label %do.body, !dbg !9171, !llvm.loop !9172

do.body:                                          ; preds = %land.end48, %for.body
  %8 = load i32, i32* %run_length, align 4, !dbg !9173
  %cmp2 = icmp eq i32 %8, 4129, !dbg !9175
  br i1 %cmp2, label %if.then, label %if.else, !dbg !9176

if.then:                                          ; preds = %do.body
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9177
  %call3 = call i32 @get_bits1(%struct.GetBitContext* %9), !dbg !9178
  store i32 %call3, i32* %bit, align 4, !dbg !9179
  br label %if.end, !dbg !9180

if.else:                                          ; preds = %do.body
  %10 = load i32, i32* %bit, align 4, !dbg !9181
  %xor4 = xor i32 %10, 1, !dbg !9181
  store i32 %xor4, i32* %bit, align 4, !dbg !9181
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9182
  %12 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9183
  %superblock_run_length_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %12, i32 0, i32 67, !dbg !9184
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %superblock_run_length_vlc, i32 0, i32 1, !dbg !9185
  %13 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !9185
  store %struct.GetBitContext* %11, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9186
  store [2 x i16]* %13, [2 x i16]** %table.addr.i, align 8, !dbg !9186
  store i32 6, i32* %bits.addr.i, align 4, !dbg !9186
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !9186
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9187
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %14, i32 0, i32 2, !dbg !9188
  %15 = load i32, i32* %index.i, align 8, !dbg !9188
  store i32 %15, i32* %re_index.i, align 4, !dbg !9121
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9189
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %16, i32 0, i32 4, !dbg !9190
  %17 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !9190
  store i32 %17, i32* %re_size_plus8.i, align 4, !dbg !9123
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9191
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %18, i32 0, i32 0, !dbg !9192
  %19 = load i8*, i8** %buffer.i, align 8, !dbg !9192
  %20 = load i32, i32* %re_index.i, align 4, !dbg !9193
  %shr.i = lshr i32 %20, 3, !dbg !9194
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !9195
  %add.ptr.i = getelementptr inbounds i8, i8* %19, i64 %idx.ext.i, !dbg !9195
  %21 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !9196
  %l.i = bitcast %union.unaligned_32* %21 to i32*, !dbg !9196
  %22 = load i32, i32* %l.i, align 1, !dbg !9196
  store i32 %22, i32* %x.addr.i.i, align 4, !dbg !9197
  %23 = load i32, i32* %x.addr.i.i, align 4, !dbg !9198
  %shl.i.i = shl i32 %23, 8, !dbg !9199
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !9200
  %24 = load i32, i32* %x.addr.i.i, align 4, !dbg !9201
  %shr.i.i = lshr i32 %24, 8, !dbg !9202
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !9203
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !9204
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !9205
  %25 = load i32, i32* %x.addr.i.i, align 4, !dbg !9206
  %shr3.i.i = lshr i32 %25, 16, !dbg !9207
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !9208
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !9209
  %26 = load i32, i32* %x.addr.i.i, align 4, !dbg !9210
  %shr6.i.i = lshr i32 %26, 16, !dbg !9211
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !9212
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !9213
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !9214
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !9215
  %27 = load i32, i32* %re_index.i, align 4, !dbg !9216
  %and.i = and i32 %27, 7, !dbg !9217
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !9218
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !9219
  %28 = load i32, i32* %re_cache.i, align 4, !dbg !9220
  %29 = load i32, i32* %bits.addr.i, align 4, !dbg !9221
  %conv.i = trunc i32 %29 to i8, !dbg !9221
  %call2.i = call i32 @NEG_USR32(i32 %28, i8 signext %conv.i) #6, !dbg !9222
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !9223
  %30 = load i32, i32* %index1.i, align 4, !dbg !9224
  %idxprom.i = zext i32 %30 to i64, !dbg !9225
  %31 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9225
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %31, i64 %idxprom.i, !dbg !9225
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !9225
  %32 = load i16, i16* %arrayidx3.i, align 2, !dbg !9225
  %conv4.i = sext i16 %32 to i32, !dbg !9225
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !9226
  %33 = load i32, i32* %index1.i, align 4, !dbg !9227
  %idxprom5.i = zext i32 %33 to i64, !dbg !9228
  %34 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9228
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %34, i64 %idxprom5.i, !dbg !9228
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !9228
  %35 = load i16, i16* %arrayidx7.i, align 2, !dbg !9228
  %conv8.i = sext i16 %35 to i32, !dbg !9228
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !9229
  %36 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9230
  %cmp.i = icmp sgt i32 %36, 1, !dbg !9231
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !9232

land.lhs.true.i:                                  ; preds = %if.end
  %37 = load i32, i32* %n.i, align 4, !dbg !9233
  %cmp10.i = icmp slt i32 %37, 0, !dbg !9234
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !9235

if.then.i:                                        ; preds = %land.lhs.true.i
  %38 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9236
  %39 = load i32, i32* %re_index.i, align 4, !dbg !9237
  %40 = load i32, i32* %bits.addr.i, align 4, !dbg !9238
  %add.i = add i32 %39, %40, !dbg !9239
  %cmp12.i = icmp ugt i32 %38, %add.i, !dbg !9240
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !9241

cond.true.i:                                      ; preds = %if.then.i
  %41 = load i32, i32* %re_index.i, align 4, !dbg !9242
  %42 = load i32, i32* %bits.addr.i, align 4, !dbg !9243
  %add14.i = add i32 %41, %42, !dbg !9244
  br label %cond.end.i, !dbg !9245

cond.false.i:                                     ; preds = %if.then.i
  %43 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9246
  br label %cond.end.i, !dbg !9247

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %43, %cond.false.i ], !dbg !9248
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !9249
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9250
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %44, i32 0, i32 0, !dbg !9251
  %45 = load i8*, i8** %buffer15.i, align 8, !dbg !9251
  %46 = load i32, i32* %re_index.i, align 4, !dbg !9252
  %shr16.i = lshr i32 %46, 3, !dbg !9253
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !9254
  %add.ptr18.i = getelementptr inbounds i8, i8* %45, i64 %idx.ext17.i, !dbg !9254
  %47 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !9255
  %l19.i = bitcast %union.unaligned_32* %47 to i32*, !dbg !9255
  %48 = load i32, i32* %l19.i, align 1, !dbg !9255
  store i32 %48, i32* %x.addr.i81.i, align 4, !dbg !9256
  %49 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9257
  %shl.i82.i = shl i32 %49, 8, !dbg !9258
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !9259
  %50 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9260
  %shr.i84.i = lshr i32 %50, 8, !dbg !9261
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !9262
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !9263
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !9264
  %51 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9265
  %shr3.i88.i = lshr i32 %51, 16, !dbg !9266
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !9267
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !9268
  %52 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9269
  %shr6.i91.i = lshr i32 %52, 16, !dbg !9270
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !9271
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !9272
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !9273
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !9274
  %53 = load i32, i32* %re_index.i, align 4, !dbg !9275
  %and21.i = and i32 %53, 7, !dbg !9276
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !9277
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !9278
  %54 = load i32, i32* %n.i, align 4, !dbg !9279
  %sub.i = sub nsw i32 0, %54, !dbg !9280
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !9281
  %55 = load i32, i32* %re_cache.i, align 4, !dbg !9282
  %56 = load i32, i32* %nb_bits.i, align 4, !dbg !9283
  %conv23.i = trunc i32 %56 to i8, !dbg !9283
  %call24.i = call i32 @NEG_USR32(i32 %55, i8 signext %conv23.i) #6, !dbg !9284
  %57 = load i32, i32* %code.i, align 4, !dbg !9285
  %add25.i = add i32 %call24.i, %57, !dbg !9286
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !9287
  %58 = load i32, i32* %index1.i, align 4, !dbg !9288
  %idxprom26.i = zext i32 %58 to i64, !dbg !9289
  %59 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9289
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %59, i64 %idxprom26.i, !dbg !9289
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !9289
  %60 = load i16, i16* %arrayidx28.i, align 2, !dbg !9289
  %conv29.i = sext i16 %60 to i32, !dbg !9289
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !9290
  %61 = load i32, i32* %index1.i, align 4, !dbg !9291
  %idxprom30.i = zext i32 %61 to i64, !dbg !9292
  %62 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9292
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %62, i64 %idxprom30.i, !dbg !9292
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !9292
  %63 = load i16, i16* %arrayidx32.i, align 2, !dbg !9292
  %conv33.i = sext i16 %63 to i32, !dbg !9292
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !9293
  %64 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9294
  %cmp34.i = icmp sgt i32 %64, 2, !dbg !9295
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !9296

land.lhs.true36.i:                                ; preds = %cond.end.i
  %65 = load i32, i32* %n.i, align 4, !dbg !9297
  %cmp37.i = icmp slt i32 %65, 0, !dbg !9298
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !9299

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %66 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9300
  %67 = load i32, i32* %re_index.i, align 4, !dbg !9301
  %68 = load i32, i32* %nb_bits.i, align 4, !dbg !9302
  %add40.i = add i32 %67, %68, !dbg !9303
  %cmp41.i = icmp ugt i32 %66, %add40.i, !dbg !9304
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !9305

cond.true43.i:                                    ; preds = %if.then39.i
  %69 = load i32, i32* %re_index.i, align 4, !dbg !9306
  %70 = load i32, i32* %nb_bits.i, align 4, !dbg !9307
  %add44.i = add i32 %69, %70, !dbg !9308
  br label %cond.end46.i, !dbg !9309

cond.false45.i:                                   ; preds = %if.then39.i
  %71 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9310
  br label %cond.end46.i, !dbg !9311

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %71, %cond.false45.i ], !dbg !9312
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !9313
  %72 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9314
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %72, i32 0, i32 0, !dbg !9315
  %73 = load i8*, i8** %buffer48.i, align 8, !dbg !9315
  %74 = load i32, i32* %re_index.i, align 4, !dbg !9316
  %shr49.i = lshr i32 %74, 3, !dbg !9317
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !9318
  %add.ptr51.i = getelementptr inbounds i8, i8* %73, i64 %idx.ext50.i, !dbg !9318
  %75 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !9319
  %l52.i = bitcast %union.unaligned_32* %75 to i32*, !dbg !9319
  %76 = load i32, i32* %l52.i, align 1, !dbg !9319
  store i32 %76, i32* %x.addr.i96.i, align 4, !dbg !9320
  %77 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9321
  %shl.i97.i = shl i32 %77, 8, !dbg !9322
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !9323
  %78 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9324
  %shr.i99.i = lshr i32 %78, 8, !dbg !9325
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !9326
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !9327
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !9328
  %79 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9329
  %shr3.i103.i = lshr i32 %79, 16, !dbg !9330
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !9331
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !9332
  %80 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9333
  %shr6.i106.i = lshr i32 %80, 16, !dbg !9334
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !9335
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !9336
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !9337
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !9338
  %81 = load i32, i32* %re_index.i, align 4, !dbg !9339
  %and54.i = and i32 %81, 7, !dbg !9340
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !9341
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !9342
  %82 = load i32, i32* %n.i, align 4, !dbg !9343
  %sub56.i = sub nsw i32 0, %82, !dbg !9344
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !9345
  %83 = load i32, i32* %re_cache.i, align 4, !dbg !9346
  %84 = load i32, i32* %nb_bits.i, align 4, !dbg !9347
  %conv57.i = trunc i32 %84 to i8, !dbg !9347
  %call58.i = call i32 @NEG_USR32(i32 %83, i8 signext %conv57.i) #6, !dbg !9348
  %85 = load i32, i32* %code.i, align 4, !dbg !9349
  %add59.i = add i32 %call58.i, %85, !dbg !9350
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !9351
  %86 = load i32, i32* %index1.i, align 4, !dbg !9352
  %idxprom60.i = zext i32 %86 to i64, !dbg !9353
  %87 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9353
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %87, i64 %idxprom60.i, !dbg !9353
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !9353
  %88 = load i16, i16* %arrayidx62.i, align 2, !dbg !9353
  %conv63.i = sext i16 %88 to i32, !dbg !9353
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !9354
  %89 = load i32, i32* %index1.i, align 4, !dbg !9355
  %idxprom64.i = zext i32 %89 to i64, !dbg !9356
  %90 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9356
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %90, i64 %idxprom64.i, !dbg !9356
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !9356
  %91 = load i16, i16* %arrayidx66.i, align 2, !dbg !9356
  %conv67.i = sext i16 %91 to i32, !dbg !9356
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !9357
  br label %if.end.i, !dbg !9358

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !9359

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end
  %92 = load i32, i32* %n.i, align 4, !dbg !9360
  %93 = load i32, i32* %re_cache.i, align 4, !dbg !9361
  %shl70.i = shl i32 %93, %92, !dbg !9361
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !9361
  %94 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9362
  %95 = load i32, i32* %re_index.i, align 4, !dbg !9363
  %96 = load i32, i32* %n.i, align 4, !dbg !9364
  %add71.i = add i32 %95, %96, !dbg !9365
  %cmp72.i = icmp ugt i32 %94, %add71.i, !dbg !9366
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !9367

cond.true74.i:                                    ; preds = %if.end68.i
  %97 = load i32, i32* %re_index.i, align 4, !dbg !9368
  %98 = load i32, i32* %n.i, align 4, !dbg !9369
  %add75.i = add i32 %97, %98, !dbg !9370
  br label %get_vlc2.exit, !dbg !9371

cond.false76.i:                                   ; preds = %if.end68.i
  %99 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9372
  br label %get_vlc2.exit, !dbg !9373

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %99, %cond.false76.i ], !dbg !9374
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !9375
  %100 = load i32, i32* %re_index.i, align 4, !dbg !9376
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9377
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %101, i32 0, i32 2, !dbg !9378
  store i32 %100, i32* %index80.i, align 8, !dbg !9379
  %102 = load i32, i32* %code.i, align 4, !dbg !9380
  %add = add nsw i32 %102, 1, !dbg !9381
  store i32 %add, i32* %run_length, align 4, !dbg !9382
  %103 = load i32, i32* %run_length, align 4, !dbg !9383
  %cmp6 = icmp eq i32 %103, 34, !dbg !9385
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !9386

if.then7:                                         ; preds = %get_vlc2.exit
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9387
  %call8 = call i32 @get_bits(%struct.GetBitContext* %104, i32 12), !dbg !9388
  %105 = load i32, i32* %run_length, align 4, !dbg !9389
  %add9 = add i32 %105, %call8, !dbg !9389
  store i32 %add9, i32* %run_length, align 4, !dbg !9389
  br label %if.end10, !dbg !9390

if.end10:                                         ; preds = %if.then7, %get_vlc2.exit
  %106 = load i32, i32* %run_length, align 4, !dbg !9391
  %107 = load i32, i32* %blocks_decoded, align 4, !dbg !9392
  %add11 = add nsw i32 %107, %106, !dbg !9392
  store i32 %add11, i32* %blocks_decoded, align 4, !dbg !9392
  %108 = load i32, i32* %bit, align 4, !dbg !9393
  %tobool = icmp ne i32 %108, 0, !dbg !9393
  br i1 %tobool, label %if.end14, label %if.then12, !dbg !9395

if.then12:                                        ; preds = %if.end10
  %109 = load i32, i32* %run_length, align 4, !dbg !9396
  %110 = load i32, i32* %num_blocks_at_qpi, align 4, !dbg !9397
  %add13 = add nsw i32 %110, %109, !dbg !9397
  store i32 %add13, i32* %num_blocks_at_qpi, align 4, !dbg !9397
  br label %if.end14, !dbg !9398

if.end14:                                         ; preds = %if.then12, %if.end10
  store i32 0, i32* %j, align 4, !dbg !9399
  br label %for.cond15, !dbg !9401

for.cond15:                                       ; preds = %for.inc, %if.end14
  %111 = load i32, i32* %j, align 4, !dbg !9402
  %112 = load i32, i32* %run_length, align 4, !dbg !9405
  %cmp16 = icmp slt i32 %111, %112, !dbg !9406
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !9407

for.body17:                                       ; preds = %for.cond15
  %113 = load i32, i32* %i, align 4, !dbg !9408
  %114 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9411
  %total_num_coded_frags18 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %114, i32 0, i32 57, !dbg !9412
  %115 = load i32, i32* %total_num_coded_frags18, align 16, !dbg !9412
  %cmp19 = icmp sge i32 %113, %115, !dbg !9413
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !9414

if.then20:                                        ; preds = %for.body17
  store i32 -1, i32* %retval, align 4, !dbg !9415
  br label %return, !dbg !9415

if.end21:                                         ; preds = %for.body17
  %116 = load i32, i32* %i, align 4, !dbg !9416
  %idxprom = sext i32 %116 to i64, !dbg !9418
  %117 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9418
  %coded_fragment_list = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %117, i32 0, i32 58, !dbg !9419
  %arrayidx = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list, i64 0, i64 0, !dbg !9418
  %118 = load i32*, i32** %arrayidx, align 8, !dbg !9418
  %arrayidx22 = getelementptr inbounds i32, i32* %118, i64 %idxprom, !dbg !9418
  %119 = load i32, i32* %arrayidx22, align 4, !dbg !9418
  %idxprom23 = sext i32 %119 to i64, !dbg !9420
  %120 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9420
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %120, i32 0, i32 41, !dbg !9421
  %121 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !9421
  %arrayidx24 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %121, i64 %idxprom23, !dbg !9420
  %qpi25 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx24, i32 0, i32 2, !dbg !9422
  %122 = load i8, i8* %qpi25, align 1, !dbg !9422
  %conv = zext i8 %122 to i32, !dbg !9420
  %123 = load i32, i32* %qpi, align 4, !dbg !9423
  %cmp26 = icmp eq i32 %conv, %123, !dbg !9424
  br i1 %cmp26, label %if.then28, label %if.end40, !dbg !9425

if.then28:                                        ; preds = %if.end21
  %124 = load i32, i32* %bit, align 4, !dbg !9426
  %125 = load i32, i32* %i, align 4, !dbg !9428
  %idxprom29 = sext i32 %125 to i64, !dbg !9429
  %126 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9429
  %coded_fragment_list30 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %126, i32 0, i32 58, !dbg !9430
  %arrayidx31 = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list30, i64 0, i64 0, !dbg !9429
  %127 = load i32*, i32** %arrayidx31, align 8, !dbg !9429
  %arrayidx32 = getelementptr inbounds i32, i32* %127, i64 %idxprom29, !dbg !9429
  %128 = load i32, i32* %arrayidx32, align 4, !dbg !9429
  %idxprom33 = sext i32 %128 to i64, !dbg !9431
  %129 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9431
  %all_fragments34 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %129, i32 0, i32 41, !dbg !9432
  %130 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments34, align 8, !dbg !9432
  %arrayidx35 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %130, i64 %idxprom33, !dbg !9431
  %qpi36 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx35, i32 0, i32 2, !dbg !9433
  %131 = load i8, i8* %qpi36, align 1, !dbg !9434
  %conv37 = zext i8 %131 to i32, !dbg !9434
  %add38 = add nsw i32 %conv37, %124, !dbg !9434
  %conv39 = trunc i32 %add38 to i8, !dbg !9434
  store i8 %conv39, i8* %qpi36, align 1, !dbg !9434
  %132 = load i32, i32* %j, align 4, !dbg !9435
  %inc = add nsw i32 %132, 1, !dbg !9435
  store i32 %inc, i32* %j, align 4, !dbg !9435
  br label %if.end40, !dbg !9436

if.end40:                                         ; preds = %if.then28, %if.end21
  br label %for.inc, !dbg !9437

for.inc:                                          ; preds = %if.end40
  %133 = load i32, i32* %i, align 4, !dbg !9438
  %inc41 = add nsw i32 %133, 1, !dbg !9438
  store i32 %inc41, i32* %i, align 4, !dbg !9438
  br label %for.cond15, !dbg !9440, !llvm.loop !9441

for.end:                                          ; preds = %for.cond15
  br label %do.cond, !dbg !9443

do.cond:                                          ; preds = %for.end
  %134 = load i32, i32* %blocks_decoded, align 4, !dbg !9444
  %135 = load i32, i32* %num_blocks, align 4, !dbg !9446
  %cmp42 = icmp slt i32 %134, %135, !dbg !9447
  br i1 %cmp42, label %land.rhs44, label %land.end48, !dbg !9448

land.rhs44:                                       ; preds = %do.cond
  %136 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9449
  %call45 = call i32 @get_bits_left(%struct.GetBitContext* %136), !dbg !9451
  %cmp46 = icmp sgt i32 %call45, 0, !dbg !9452
  br label %land.end48

land.end48:                                       ; preds = %land.rhs44, %do.cond
  %137 = phi i1 [ false, %do.cond ], [ %cmp46, %land.rhs44 ]
  br i1 %137, label %do.body, label %do.end, !dbg !9453, !llvm.loop !9172

do.end:                                           ; preds = %land.end48
  %138 = load i32, i32* %num_blocks_at_qpi, align 4, !dbg !9455
  %139 = load i32, i32* %num_blocks, align 4, !dbg !9456
  %sub49 = sub nsw i32 %139, %138, !dbg !9456
  store i32 %sub49, i32* %num_blocks, align 4, !dbg !9456
  br label %for.inc50, !dbg !9457

for.inc50:                                        ; preds = %do.end
  %140 = load i32, i32* %qpi, align 4, !dbg !9458
  %inc51 = add nsw i32 %140, 1, !dbg !9458
  store i32 %inc51, i32* %qpi, align 4, !dbg !9458
  br label %for.cond, !dbg !9460, !llvm.loop !9461

for.end52:                                        ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !9463
  br label %return, !dbg !9463

return:                                           ; preds = %for.end52, %if.then20
  %141 = load i32, i32* %retval, align 4, !dbg !9464
  ret i32 %141, !dbg !9464
}

; Function Attrs: nounwind uwtable
define internal i32 @unpack_dct_coeffs(%struct.Vp3DecodeContext* %s, %struct.GetBitContext* %gb) #0 !dbg !9465 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  %dc_y_table = alloca i32, align 4
  %dc_c_table = alloca i32, align 4
  %ac_y_table = alloca i32, align 4
  %ac_c_table = alloca i32, align 4
  %residual_eob_run = alloca i32, align 4
  %y_tables = alloca [64 x %struct.VLC*], align 16
  %c_tables = alloca [64 x %struct.VLC*], align 16
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !9466, metadata !1942), !dbg !9467
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9468, metadata !1942), !dbg !9469
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9470, metadata !1942), !dbg !9471
  call void @llvm.dbg.declare(metadata i32* %dc_y_table, metadata !9472, metadata !1942), !dbg !9473
  call void @llvm.dbg.declare(metadata i32* %dc_c_table, metadata !9474, metadata !1942), !dbg !9475
  call void @llvm.dbg.declare(metadata i32* %ac_y_table, metadata !9476, metadata !1942), !dbg !9477
  call void @llvm.dbg.declare(metadata i32* %ac_c_table, metadata !9478, metadata !1942), !dbg !9479
  call void @llvm.dbg.declare(metadata i32* %residual_eob_run, metadata !9480, metadata !1942), !dbg !9481
  store i32 0, i32* %residual_eob_run, align 4, !dbg !9481
  call void @llvm.dbg.declare(metadata [64 x %struct.VLC*]* %y_tables, metadata !9482, metadata !1942), !dbg !9485
  call void @llvm.dbg.declare(metadata [64 x %struct.VLC*]* %c_tables, metadata !9486, metadata !1942), !dbg !9487
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9488
  %dct_tokens_base = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 55, !dbg !9489
  %1 = load i16*, i16** %dct_tokens_base, align 8, !dbg !9489
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9490
  %dct_tokens = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 54, !dbg !9491
  %arrayidx = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens, i64 0, i64 0, !dbg !9490
  %arrayidx1 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx, i64 0, i64 0, !dbg !9490
  store i16* %1, i16** %arrayidx1, align 8, !dbg !9492
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9493
  %call = call i32 @get_bits_left(%struct.GetBitContext* %3), !dbg !9495
  %cmp = icmp slt i32 %call, 16, !dbg !9496
  br i1 %cmp, label %if.then, label %if.end, !dbg !9497

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !9498
  br label %return, !dbg !9498

if.end:                                           ; preds = %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9499
  %call2 = call i32 @get_bits(%struct.GetBitContext* %4, i32 4), !dbg !9500
  store i32 %call2, i32* %dc_y_table, align 4, !dbg !9501
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9502
  %call3 = call i32 @get_bits(%struct.GetBitContext* %5, i32 4), !dbg !9503
  store i32 %call3, i32* %dc_c_table, align 4, !dbg !9504
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9505
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9506
  %8 = load i32, i32* %dc_y_table, align 4, !dbg !9507
  %idxprom = sext i32 %8 to i64, !dbg !9508
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9508
  %dc_vlc = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 62, !dbg !9509
  %arrayidx4 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %dc_vlc, i64 0, i64 %idxprom, !dbg !9508
  %10 = load i32, i32* %residual_eob_run, align 4, !dbg !9510
  %call5 = call i32 @unpack_vlcs(%struct.Vp3DecodeContext* %6, %struct.GetBitContext* %7, %struct.VLC* %arrayidx4, i32 0, i32 0, i32 %10), !dbg !9511
  store i32 %call5, i32* %residual_eob_run, align 4, !dbg !9512
  %11 = load i32, i32* %residual_eob_run, align 4, !dbg !9513
  %cmp6 = icmp slt i32 %11, 0, !dbg !9515
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9516

if.then7:                                         ; preds = %if.end
  %12 = load i32, i32* %residual_eob_run, align 4, !dbg !9517
  store i32 %12, i32* %retval, align 4, !dbg !9518
  br label %return, !dbg !9518

if.end8:                                          ; preds = %if.end
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9519
  %call9 = call i32 @get_bits_left(%struct.GetBitContext* %13), !dbg !9521
  %cmp10 = icmp slt i32 %call9, 8, !dbg !9522
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9523

if.then11:                                        ; preds = %if.end8
  store i32 -1094995529, i32* %retval, align 4, !dbg !9524
  br label %return, !dbg !9524

if.end12:                                         ; preds = %if.end8
  %14 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9525
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9526
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 39, !dbg !9527
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 0, !dbg !9526
  %16 = load i32, i32* %arrayidx13, align 8, !dbg !9526
  %17 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9528
  %fragment_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %17, i32 0, i32 40, !dbg !9529
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height, i64 0, i64 0, !dbg !9528
  %18 = load i32, i32* %arrayidx14, align 16, !dbg !9528
  call void @reverse_dc_prediction(%struct.Vp3DecodeContext* %14, i32 0, i32 %16, i32 %18), !dbg !9530
  %19 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9531
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9532
  %21 = load i32, i32* %dc_c_table, align 4, !dbg !9533
  %idxprom15 = sext i32 %21 to i64, !dbg !9534
  %22 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9534
  %dc_vlc16 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %22, i32 0, i32 62, !dbg !9535
  %arrayidx17 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %dc_vlc16, i64 0, i64 %idxprom15, !dbg !9534
  %23 = load i32, i32* %residual_eob_run, align 4, !dbg !9536
  %call18 = call i32 @unpack_vlcs(%struct.Vp3DecodeContext* %19, %struct.GetBitContext* %20, %struct.VLC* %arrayidx17, i32 0, i32 1, i32 %23), !dbg !9537
  store i32 %call18, i32* %residual_eob_run, align 4, !dbg !9538
  %24 = load i32, i32* %residual_eob_run, align 4, !dbg !9539
  %cmp19 = icmp slt i32 %24, 0, !dbg !9541
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !9542

if.then20:                                        ; preds = %if.end12
  %25 = load i32, i32* %residual_eob_run, align 4, !dbg !9543
  store i32 %25, i32* %retval, align 4, !dbg !9544
  br label %return, !dbg !9544

if.end21:                                         ; preds = %if.end12
  %26 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9545
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9546
  %28 = load i32, i32* %dc_c_table, align 4, !dbg !9547
  %idxprom22 = sext i32 %28 to i64, !dbg !9548
  %29 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9548
  %dc_vlc23 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %29, i32 0, i32 62, !dbg !9549
  %arrayidx24 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %dc_vlc23, i64 0, i64 %idxprom22, !dbg !9548
  %30 = load i32, i32* %residual_eob_run, align 4, !dbg !9550
  %call25 = call i32 @unpack_vlcs(%struct.Vp3DecodeContext* %26, %struct.GetBitContext* %27, %struct.VLC* %arrayidx24, i32 0, i32 2, i32 %30), !dbg !9551
  store i32 %call25, i32* %residual_eob_run, align 4, !dbg !9552
  %31 = load i32, i32* %residual_eob_run, align 4, !dbg !9553
  %cmp26 = icmp slt i32 %31, 0, !dbg !9555
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9556

if.then27:                                        ; preds = %if.end21
  %32 = load i32, i32* %residual_eob_run, align 4, !dbg !9557
  store i32 %32, i32* %retval, align 4, !dbg !9558
  br label %return, !dbg !9558

if.end28:                                         ; preds = %if.end21
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9559
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 0, !dbg !9561
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !9561
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 13, !dbg !9562
  %35 = load i32, i32* %flags, align 4, !dbg !9562
  %and = and i32 %35, 8192, !dbg !9563
  %tobool = icmp ne i32 %and, 0, !dbg !9563
  br i1 %tobool, label %if.end41, label %if.then29, !dbg !9564

if.then29:                                        ; preds = %if.end28
  %36 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9565
  %37 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9567
  %fragment_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %37, i32 0, i32 42, !dbg !9568
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start, i64 0, i64 1, !dbg !9567
  %38 = load i32, i32* %arrayidx30, align 4, !dbg !9567
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9569
  %fragment_width31 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 39, !dbg !9570
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width31, i64 0, i64 1, !dbg !9569
  %40 = load i32, i32* %arrayidx32, align 4, !dbg !9569
  %41 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9571
  %fragment_height33 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %41, i32 0, i32 40, !dbg !9572
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height33, i64 0, i64 1, !dbg !9571
  %42 = load i32, i32* %arrayidx34, align 4, !dbg !9571
  call void @reverse_dc_prediction(%struct.Vp3DecodeContext* %36, i32 %38, i32 %40, i32 %42), !dbg !9573
  %43 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9574
  %44 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9575
  %fragment_start35 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %44, i32 0, i32 42, !dbg !9576
  %arrayidx36 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start35, i64 0, i64 2, !dbg !9575
  %45 = load i32, i32* %arrayidx36, align 8, !dbg !9575
  %46 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9577
  %fragment_width37 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %46, i32 0, i32 39, !dbg !9578
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width37, i64 0, i64 1, !dbg !9577
  %47 = load i32, i32* %arrayidx38, align 4, !dbg !9577
  %48 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9579
  %fragment_height39 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %48, i32 0, i32 40, !dbg !9580
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height39, i64 0, i64 1, !dbg !9579
  %49 = load i32, i32* %arrayidx40, align 4, !dbg !9579
  call void @reverse_dc_prediction(%struct.Vp3DecodeContext* %43, i32 %45, i32 %47, i32 %49), !dbg !9581
  br label %if.end41, !dbg !9582

if.end41:                                         ; preds = %if.then29, %if.end28
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9583
  %call42 = call i32 @get_bits_left(%struct.GetBitContext* %50), !dbg !9585
  %cmp43 = icmp slt i32 %call42, 8, !dbg !9586
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !9587

if.then44:                                        ; preds = %if.end41
  store i32 -1094995529, i32* %retval, align 4, !dbg !9588
  br label %return, !dbg !9588

if.end45:                                         ; preds = %if.end41
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9589
  %call46 = call i32 @get_bits(%struct.GetBitContext* %51, i32 4), !dbg !9590
  store i32 %call46, i32* %ac_y_table, align 4, !dbg !9591
  %52 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9592
  %call47 = call i32 @get_bits(%struct.GetBitContext* %52, i32 4), !dbg !9593
  store i32 %call47, i32* %ac_c_table, align 4, !dbg !9594
  store i32 1, i32* %i, align 4, !dbg !9595
  br label %for.cond, !dbg !9597

for.cond:                                         ; preds = %for.inc, %if.end45
  %53 = load i32, i32* %i, align 4, !dbg !9598
  %cmp48 = icmp sle i32 %53, 5, !dbg !9601
  br i1 %cmp48, label %for.body, label %for.end, !dbg !9602

for.body:                                         ; preds = %for.cond
  %54 = load i32, i32* %ac_y_table, align 4, !dbg !9603
  %idxprom49 = sext i32 %54 to i64, !dbg !9605
  %55 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9605
  %ac_vlc_1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %55, i32 0, i32 63, !dbg !9606
  %arrayidx50 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_1, i64 0, i64 %idxprom49, !dbg !9605
  %56 = load i32, i32* %i, align 4, !dbg !9607
  %idxprom51 = sext i32 %56 to i64, !dbg !9608
  %arrayidx52 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %y_tables, i64 0, i64 %idxprom51, !dbg !9608
  store %struct.VLC* %arrayidx50, %struct.VLC** %arrayidx52, align 8, !dbg !9609
  %57 = load i32, i32* %ac_c_table, align 4, !dbg !9610
  %idxprom53 = sext i32 %57 to i64, !dbg !9611
  %58 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9611
  %ac_vlc_154 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %58, i32 0, i32 63, !dbg !9612
  %arrayidx55 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_154, i64 0, i64 %idxprom53, !dbg !9611
  %59 = load i32, i32* %i, align 4, !dbg !9613
  %idxprom56 = sext i32 %59 to i64, !dbg !9614
  %arrayidx57 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %c_tables, i64 0, i64 %idxprom56, !dbg !9614
  store %struct.VLC* %arrayidx55, %struct.VLC** %arrayidx57, align 8, !dbg !9615
  br label %for.inc, !dbg !9616

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4, !dbg !9617
  %inc = add nsw i32 %60, 1, !dbg !9617
  store i32 %inc, i32* %i, align 4, !dbg !9617
  br label %for.cond, !dbg !9619, !llvm.loop !9620

for.end:                                          ; preds = %for.cond
  store i32 6, i32* %i, align 4, !dbg !9622
  br label %for.cond58, !dbg !9624

for.cond58:                                       ; preds = %for.inc70, %for.end
  %61 = load i32, i32* %i, align 4, !dbg !9625
  %cmp59 = icmp sle i32 %61, 14, !dbg !9628
  br i1 %cmp59, label %for.body60, label %for.end72, !dbg !9629

for.body60:                                       ; preds = %for.cond58
  %62 = load i32, i32* %ac_y_table, align 4, !dbg !9630
  %idxprom61 = sext i32 %62 to i64, !dbg !9632
  %63 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9632
  %ac_vlc_2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %63, i32 0, i32 64, !dbg !9633
  %arrayidx62 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_2, i64 0, i64 %idxprom61, !dbg !9632
  %64 = load i32, i32* %i, align 4, !dbg !9634
  %idxprom63 = sext i32 %64 to i64, !dbg !9635
  %arrayidx64 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %y_tables, i64 0, i64 %idxprom63, !dbg !9635
  store %struct.VLC* %arrayidx62, %struct.VLC** %arrayidx64, align 8, !dbg !9636
  %65 = load i32, i32* %ac_c_table, align 4, !dbg !9637
  %idxprom65 = sext i32 %65 to i64, !dbg !9638
  %66 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9638
  %ac_vlc_266 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %66, i32 0, i32 64, !dbg !9639
  %arrayidx67 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_266, i64 0, i64 %idxprom65, !dbg !9638
  %67 = load i32, i32* %i, align 4, !dbg !9640
  %idxprom68 = sext i32 %67 to i64, !dbg !9641
  %arrayidx69 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %c_tables, i64 0, i64 %idxprom68, !dbg !9641
  store %struct.VLC* %arrayidx67, %struct.VLC** %arrayidx69, align 8, !dbg !9642
  br label %for.inc70, !dbg !9643

for.inc70:                                        ; preds = %for.body60
  %68 = load i32, i32* %i, align 4, !dbg !9644
  %inc71 = add nsw i32 %68, 1, !dbg !9644
  store i32 %inc71, i32* %i, align 4, !dbg !9644
  br label %for.cond58, !dbg !9646, !llvm.loop !9647

for.end72:                                        ; preds = %for.cond58
  store i32 15, i32* %i, align 4, !dbg !9649
  br label %for.cond73, !dbg !9651

for.cond73:                                       ; preds = %for.inc85, %for.end72
  %69 = load i32, i32* %i, align 4, !dbg !9652
  %cmp74 = icmp sle i32 %69, 27, !dbg !9655
  br i1 %cmp74, label %for.body75, label %for.end87, !dbg !9656

for.body75:                                       ; preds = %for.cond73
  %70 = load i32, i32* %ac_y_table, align 4, !dbg !9657
  %idxprom76 = sext i32 %70 to i64, !dbg !9659
  %71 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9659
  %ac_vlc_3 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %71, i32 0, i32 65, !dbg !9660
  %arrayidx77 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_3, i64 0, i64 %idxprom76, !dbg !9659
  %72 = load i32, i32* %i, align 4, !dbg !9661
  %idxprom78 = sext i32 %72 to i64, !dbg !9662
  %arrayidx79 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %y_tables, i64 0, i64 %idxprom78, !dbg !9662
  store %struct.VLC* %arrayidx77, %struct.VLC** %arrayidx79, align 8, !dbg !9663
  %73 = load i32, i32* %ac_c_table, align 4, !dbg !9664
  %idxprom80 = sext i32 %73 to i64, !dbg !9665
  %74 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9665
  %ac_vlc_381 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %74, i32 0, i32 65, !dbg !9666
  %arrayidx82 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_381, i64 0, i64 %idxprom80, !dbg !9665
  %75 = load i32, i32* %i, align 4, !dbg !9667
  %idxprom83 = sext i32 %75 to i64, !dbg !9668
  %arrayidx84 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %c_tables, i64 0, i64 %idxprom83, !dbg !9668
  store %struct.VLC* %arrayidx82, %struct.VLC** %arrayidx84, align 8, !dbg !9669
  br label %for.inc85, !dbg !9670

for.inc85:                                        ; preds = %for.body75
  %76 = load i32, i32* %i, align 4, !dbg !9671
  %inc86 = add nsw i32 %76, 1, !dbg !9671
  store i32 %inc86, i32* %i, align 4, !dbg !9671
  br label %for.cond73, !dbg !9673, !llvm.loop !9674

for.end87:                                        ; preds = %for.cond73
  store i32 28, i32* %i, align 4, !dbg !9676
  br label %for.cond88, !dbg !9678

for.cond88:                                       ; preds = %for.inc100, %for.end87
  %77 = load i32, i32* %i, align 4, !dbg !9679
  %cmp89 = icmp sle i32 %77, 63, !dbg !9682
  br i1 %cmp89, label %for.body90, label %for.end102, !dbg !9683

for.body90:                                       ; preds = %for.cond88
  %78 = load i32, i32* %ac_y_table, align 4, !dbg !9684
  %idxprom91 = sext i32 %78 to i64, !dbg !9686
  %79 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9686
  %ac_vlc_4 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %79, i32 0, i32 66, !dbg !9687
  %arrayidx92 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_4, i64 0, i64 %idxprom91, !dbg !9686
  %80 = load i32, i32* %i, align 4, !dbg !9688
  %idxprom93 = sext i32 %80 to i64, !dbg !9689
  %arrayidx94 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %y_tables, i64 0, i64 %idxprom93, !dbg !9689
  store %struct.VLC* %arrayidx92, %struct.VLC** %arrayidx94, align 8, !dbg !9690
  %81 = load i32, i32* %ac_c_table, align 4, !dbg !9691
  %idxprom95 = sext i32 %81 to i64, !dbg !9692
  %82 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9692
  %ac_vlc_496 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %82, i32 0, i32 66, !dbg !9693
  %arrayidx97 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %ac_vlc_496, i64 0, i64 %idxprom95, !dbg !9692
  %83 = load i32, i32* %i, align 4, !dbg !9694
  %idxprom98 = sext i32 %83 to i64, !dbg !9695
  %arrayidx99 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %c_tables, i64 0, i64 %idxprom98, !dbg !9695
  store %struct.VLC* %arrayidx97, %struct.VLC** %arrayidx99, align 8, !dbg !9696
  br label %for.inc100, !dbg !9697

for.inc100:                                       ; preds = %for.body90
  %84 = load i32, i32* %i, align 4, !dbg !9698
  %inc101 = add nsw i32 %84, 1, !dbg !9698
  store i32 %inc101, i32* %i, align 4, !dbg !9698
  br label %for.cond88, !dbg !9700, !llvm.loop !9701

for.end102:                                       ; preds = %for.cond88
  store i32 1, i32* %i, align 4, !dbg !9703
  br label %for.cond103, !dbg !9705

for.cond103:                                      ; preds = %for.inc124, %for.end102
  %85 = load i32, i32* %i, align 4, !dbg !9706
  %cmp104 = icmp sle i32 %85, 63, !dbg !9709
  br i1 %cmp104, label %for.body105, label %for.end126, !dbg !9710

for.body105:                                      ; preds = %for.cond103
  %86 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9711
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9713
  %88 = load i32, i32* %i, align 4, !dbg !9714
  %idxprom106 = sext i32 %88 to i64, !dbg !9715
  %arrayidx107 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %y_tables, i64 0, i64 %idxprom106, !dbg !9715
  %89 = load %struct.VLC*, %struct.VLC** %arrayidx107, align 8, !dbg !9715
  %90 = load i32, i32* %i, align 4, !dbg !9716
  %91 = load i32, i32* %residual_eob_run, align 4, !dbg !9717
  %call108 = call i32 @unpack_vlcs(%struct.Vp3DecodeContext* %86, %struct.GetBitContext* %87, %struct.VLC* %89, i32 %90, i32 0, i32 %91), !dbg !9718
  store i32 %call108, i32* %residual_eob_run, align 4, !dbg !9719
  %92 = load i32, i32* %residual_eob_run, align 4, !dbg !9720
  %cmp109 = icmp slt i32 %92, 0, !dbg !9722
  br i1 %cmp109, label %if.then110, label %if.end111, !dbg !9723

if.then110:                                       ; preds = %for.body105
  %93 = load i32, i32* %residual_eob_run, align 4, !dbg !9724
  store i32 %93, i32* %retval, align 4, !dbg !9725
  br label %return, !dbg !9725

if.end111:                                        ; preds = %for.body105
  %94 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9726
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9727
  %96 = load i32, i32* %i, align 4, !dbg !9728
  %idxprom112 = sext i32 %96 to i64, !dbg !9729
  %arrayidx113 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %c_tables, i64 0, i64 %idxprom112, !dbg !9729
  %97 = load %struct.VLC*, %struct.VLC** %arrayidx113, align 8, !dbg !9729
  %98 = load i32, i32* %i, align 4, !dbg !9730
  %99 = load i32, i32* %residual_eob_run, align 4, !dbg !9731
  %call114 = call i32 @unpack_vlcs(%struct.Vp3DecodeContext* %94, %struct.GetBitContext* %95, %struct.VLC* %97, i32 %98, i32 1, i32 %99), !dbg !9732
  store i32 %call114, i32* %residual_eob_run, align 4, !dbg !9733
  %100 = load i32, i32* %residual_eob_run, align 4, !dbg !9734
  %cmp115 = icmp slt i32 %100, 0, !dbg !9736
  br i1 %cmp115, label %if.then116, label %if.end117, !dbg !9737

if.then116:                                       ; preds = %if.end111
  %101 = load i32, i32* %residual_eob_run, align 4, !dbg !9738
  store i32 %101, i32* %retval, align 4, !dbg !9739
  br label %return, !dbg !9739

if.end117:                                        ; preds = %if.end111
  %102 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9740
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9741
  %104 = load i32, i32* %i, align 4, !dbg !9742
  %idxprom118 = sext i32 %104 to i64, !dbg !9743
  %arrayidx119 = getelementptr inbounds [64 x %struct.VLC*], [64 x %struct.VLC*]* %c_tables, i64 0, i64 %idxprom118, !dbg !9743
  %105 = load %struct.VLC*, %struct.VLC** %arrayidx119, align 8, !dbg !9743
  %106 = load i32, i32* %i, align 4, !dbg !9744
  %107 = load i32, i32* %residual_eob_run, align 4, !dbg !9745
  %call120 = call i32 @unpack_vlcs(%struct.Vp3DecodeContext* %102, %struct.GetBitContext* %103, %struct.VLC* %105, i32 %106, i32 2, i32 %107), !dbg !9746
  store i32 %call120, i32* %residual_eob_run, align 4, !dbg !9747
  %108 = load i32, i32* %residual_eob_run, align 4, !dbg !9748
  %cmp121 = icmp slt i32 %108, 0, !dbg !9750
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !9751

if.then122:                                       ; preds = %if.end117
  %109 = load i32, i32* %residual_eob_run, align 4, !dbg !9752
  store i32 %109, i32* %retval, align 4, !dbg !9753
  br label %return, !dbg !9753

if.end123:                                        ; preds = %if.end117
  br label %for.inc124, !dbg !9754

for.inc124:                                       ; preds = %if.end123
  %110 = load i32, i32* %i, align 4, !dbg !9755
  %inc125 = add nsw i32 %110, 1, !dbg !9755
  store i32 %inc125, i32* %i, align 4, !dbg !9755
  br label %for.cond103, !dbg !9757, !llvm.loop !9758

for.end126:                                       ; preds = %for.cond103
  store i32 0, i32* %retval, align 4, !dbg !9760
  br label %return, !dbg !9760

return:                                           ; preds = %for.end126, %if.then122, %if.then116, %if.then110, %if.then44, %if.then27, %if.then20, %if.then11, %if.then7, %if.then
  %111 = load i32, i32* %retval, align 4, !dbg !9761
  ret i32 %111, !dbg !9761
}

; Function Attrs: nounwind uwtable
define internal void @render_slice(%struct.Vp3DecodeContext* %s, i32 %slice) #0 !dbg !9762 {
entry:
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %slice.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fragment = alloca i32, align 4
  %block = alloca i16*, align 8
  %motion_x = alloca i32, align 4
  %motion_y = alloca i32, align 4
  %motion_halfpel_index = alloca i32, align 4
  %motion_source = alloca i8*, align 8
  %plane = alloca i32, align 4
  %first_pixel = alloca i32, align 4
  %output_plane = alloca i8*, align 8
  %last_plane = alloca i8*, align 8
  %golden_plane = alloca i8*, align 8
  %stride = alloca i64, align 8
  %plane_width = alloca i32, align 4
  %plane_height = alloca i32, align 4
  %motion_val = alloca [2 x i8]*, align 8
  %sb_x = alloca i32, align 4
  %sb_y = alloca i32, align 4
  %slice_height = alloca i32, align 4
  %slice_width = alloca i32, align 4
  %fragment_width = alloca i32, align 4
  %fragment_height = alloca i32, align 4
  %fragment_start = alloca i32, align 4
  %do_await = alloca i32, align 4
  %src_x = alloca i32, align 4
  %src_y = alloca i32, align 4
  %temp = alloca i8*, align 8
  %d = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !9763, metadata !1942), !dbg !9764
  store i32 %slice, i32* %slice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slice.addr, metadata !9765, metadata !1942), !dbg !9766
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9767, metadata !1942), !dbg !9768
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9769, metadata !1942), !dbg !9770
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9771, metadata !1942), !dbg !9772
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9773, metadata !1942), !dbg !9774
  call void @llvm.dbg.declare(metadata i32* %fragment, metadata !9775, metadata !1942), !dbg !9776
  call void @llvm.dbg.declare(metadata i16** %block, metadata !9777, metadata !1942), !dbg !9778
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9779
  %block1 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 18, !dbg !9780
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %block1, i32 0, i32 0, !dbg !9779
  store i16* %arraydecay, i16** %block, align 8, !dbg !9778
  call void @llvm.dbg.declare(metadata i32* %motion_x, metadata !9781, metadata !1942), !dbg !9782
  store i32 -559038737, i32* %motion_x, align 4, !dbg !9782
  call void @llvm.dbg.declare(metadata i32* %motion_y, metadata !9783, metadata !1942), !dbg !9784
  store i32 -559038737, i32* %motion_y, align 4, !dbg !9784
  call void @llvm.dbg.declare(metadata i32* %motion_halfpel_index, metadata !9785, metadata !1942), !dbg !9786
  call void @llvm.dbg.declare(metadata i8** %motion_source, metadata !9787, metadata !1942), !dbg !9788
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !9789, metadata !1942), !dbg !9790
  call void @llvm.dbg.declare(metadata i32* %first_pixel, metadata !9791, metadata !1942), !dbg !9792
  %1 = load i32, i32* %slice.addr, align 4, !dbg !9793
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9795
  %c_superblock_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 30, !dbg !9796
  %3 = load i32, i32* %c_superblock_height, align 4, !dbg !9796
  %cmp = icmp sge i32 %1, %3, !dbg !9797
  br i1 %cmp, label %if.then, label %if.end, !dbg !9798

if.then:                                          ; preds = %entry
  br label %return, !dbg !9799

if.end:                                           ; preds = %entry
  store i32 0, i32* %plane, align 4, !dbg !9800
  br label %for.cond, !dbg !9802

for.cond:                                         ; preds = %for.inc322, %if.end
  %4 = load i32, i32* %plane, align 4, !dbg !9803
  %cmp2 = icmp slt i32 %4, 3, !dbg !9806
  br i1 %cmp2, label %for.body, label %for.end324, !dbg !9807

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %output_plane, metadata !9808, metadata !1942), !dbg !9810
  %5 = load i32, i32* %plane, align 4, !dbg !9811
  %idxprom = sext i32 %5 to i64, !dbg !9812
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9812
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 11, !dbg !9813
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame, i32 0, i32 0, !dbg !9814
  %7 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !9814
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 0, !dbg !9815
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !9812
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !9812
  %9 = load i32, i32* %plane, align 4, !dbg !9816
  %idxprom3 = sext i32 %9 to i64, !dbg !9817
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9817
  %data_offset = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 43, !dbg !9818
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %data_offset, i64 0, i64 %idxprom3, !dbg !9817
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !9817
  %idx.ext = sext i32 %11 to i64, !dbg !9819
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !9819
  store i8* %add.ptr, i8** %output_plane, align 8, !dbg !9810
  call void @llvm.dbg.declare(metadata i8** %last_plane, metadata !9820, metadata !1942), !dbg !9821
  %12 = load i32, i32* %plane, align 4, !dbg !9822
  %idxprom5 = sext i32 %12 to i64, !dbg !9823
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9823
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 10, !dbg !9824
  %f6 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_frame, i32 0, i32 0, !dbg !9825
  %14 = load %struct.AVFrame*, %struct.AVFrame** %f6, align 8, !dbg !9825
  %data7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 0, !dbg !9826
  %arrayidx8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data7, i64 0, i64 %idxprom5, !dbg !9823
  %15 = load i8*, i8** %arrayidx8, align 8, !dbg !9823
  %16 = load i32, i32* %plane, align 4, !dbg !9827
  %idxprom9 = sext i32 %16 to i64, !dbg !9828
  %17 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9828
  %data_offset10 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %17, i32 0, i32 43, !dbg !9829
  %arrayidx11 = getelementptr inbounds [3 x i32], [3 x i32]* %data_offset10, i64 0, i64 %idxprom9, !dbg !9828
  %18 = load i32, i32* %arrayidx11, align 4, !dbg !9828
  %idx.ext12 = sext i32 %18 to i64, !dbg !9830
  %add.ptr13 = getelementptr inbounds i8, i8* %15, i64 %idx.ext12, !dbg !9830
  store i8* %add.ptr13, i8** %last_plane, align 8, !dbg !9821
  call void @llvm.dbg.declare(metadata i8** %golden_plane, metadata !9831, metadata !1942), !dbg !9832
  %19 = load i32, i32* %plane, align 4, !dbg !9833
  %idxprom14 = sext i32 %19 to i64, !dbg !9834
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9834
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %20, i32 0, i32 9, !dbg !9835
  %f15 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %golden_frame, i32 0, i32 0, !dbg !9836
  %21 = load %struct.AVFrame*, %struct.AVFrame** %f15, align 8, !dbg !9836
  %data16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %21, i32 0, i32 0, !dbg !9837
  %arrayidx17 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data16, i64 0, i64 %idxprom14, !dbg !9834
  %22 = load i8*, i8** %arrayidx17, align 8, !dbg !9834
  %23 = load i32, i32* %plane, align 4, !dbg !9838
  %idxprom18 = sext i32 %23 to i64, !dbg !9839
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9839
  %data_offset19 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 43, !dbg !9840
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %data_offset19, i64 0, i64 %idxprom18, !dbg !9839
  %25 = load i32, i32* %arrayidx20, align 4, !dbg !9839
  %idx.ext21 = sext i32 %25 to i64, !dbg !9841
  %add.ptr22 = getelementptr inbounds i8, i8* %22, i64 %idx.ext21, !dbg !9841
  store i8* %add.ptr22, i8** %golden_plane, align 8, !dbg !9832
  call void @llvm.dbg.declare(metadata i64* %stride, metadata !9842, metadata !1942), !dbg !9843
  %26 = load i32, i32* %plane, align 4, !dbg !9844
  %idxprom23 = sext i32 %26 to i64, !dbg !9845
  %27 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9845
  %current_frame24 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %27, i32 0, i32 11, !dbg !9846
  %f25 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame24, i32 0, i32 0, !dbg !9847
  %28 = load %struct.AVFrame*, %struct.AVFrame** %f25, align 8, !dbg !9847
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %28, i32 0, i32 1, !dbg !9848
  %arrayidx26 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom23, !dbg !9845
  %29 = load i32, i32* %arrayidx26, align 4, !dbg !9845
  %conv = sext i32 %29 to i64, !dbg !9845
  store i64 %conv, i64* %stride, align 8, !dbg !9843
  call void @llvm.dbg.declare(metadata i32* %plane_width, metadata !9849, metadata !1942), !dbg !9850
  %30 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9851
  %width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %30, i32 0, i32 5, !dbg !9852
  %31 = load i32, i32* %width, align 8, !dbg !9852
  %32 = load i32, i32* %plane, align 4, !dbg !9853
  %tobool = icmp ne i32 %32, 0, !dbg !9853
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9854

land.rhs:                                         ; preds = %for.body
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9855
  %chroma_x_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 7, !dbg !9857
  %34 = load i32, i32* %chroma_x_shift, align 16, !dbg !9857
  %tobool27 = icmp ne i32 %34, 0, !dbg !9858
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %35 = phi i1 [ false, %for.body ], [ %tobool27, %land.rhs ]
  %land.ext = zext i1 %35 to i32, !dbg !9859
  %shr = ashr i32 %31, %land.ext, !dbg !9861
  store i32 %shr, i32* %plane_width, align 4, !dbg !9862
  call void @llvm.dbg.declare(metadata i32* %plane_height, metadata !9863, metadata !1942), !dbg !9864
  %36 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9865
  %height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %36, i32 0, i32 6, !dbg !9866
  %37 = load i32, i32* %height, align 4, !dbg !9866
  %38 = load i32, i32* %plane, align 4, !dbg !9867
  %tobool28 = icmp ne i32 %38, 0, !dbg !9867
  br i1 %tobool28, label %land.rhs29, label %land.end31, !dbg !9868

land.rhs29:                                       ; preds = %land.end
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9869
  %chroma_y_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 8, !dbg !9870
  %40 = load i32, i32* %chroma_y_shift, align 4, !dbg !9870
  %tobool30 = icmp ne i32 %40, 0, !dbg !9871
  br label %land.end31

land.end31:                                       ; preds = %land.rhs29, %land.end
  %41 = phi i1 [ false, %land.end ], [ %tobool30, %land.rhs29 ]
  %land.ext32 = zext i1 %41 to i32, !dbg !9872
  %shr33 = ashr i32 %37, %land.ext32, !dbg !9873
  store i32 %shr33, i32* %plane_height, align 4, !dbg !9874
  call void @llvm.dbg.declare(metadata [2 x i8]** %motion_val, metadata !9875, metadata !1942), !dbg !9876
  %42 = load i32, i32* %plane, align 4, !dbg !9877
  %tobool34 = icmp ne i32 %42, 0, !dbg !9878
  %lnot = xor i1 %tobool34, true, !dbg !9878
  %lnot35 = xor i1 %lnot, true, !dbg !9879
  %lnot.ext = zext i1 %lnot35 to i32, !dbg !9879
  %idxprom36 = sext i32 %lnot.ext to i64, !dbg !9880
  %43 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9880
  %motion_val37 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %43, i32 0, i32 47, !dbg !9881
  %arrayidx38 = getelementptr inbounds [2 x [2 x i8]*], [2 x [2 x i8]*]* %motion_val37, i64 0, i64 %idxprom36, !dbg !9880
  %44 = load [2 x i8]*, [2 x i8]** %arrayidx38, align 8, !dbg !9880
  store [2 x i8]* %44, [2 x i8]** %motion_val, align 8, !dbg !9876
  call void @llvm.dbg.declare(metadata i32* %sb_x, metadata !9882, metadata !1942), !dbg !9883
  call void @llvm.dbg.declare(metadata i32* %sb_y, metadata !9884, metadata !1942), !dbg !9885
  %45 = load i32, i32* %slice.addr, align 4, !dbg !9886
  %46 = load i32, i32* %plane, align 4, !dbg !9887
  %tobool39 = icmp ne i32 %46, 0, !dbg !9887
  br i1 %tobool39, label %land.end43, label %land.rhs40, !dbg !9888

land.rhs40:                                       ; preds = %land.end31
  %47 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9889
  %chroma_y_shift41 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %47, i32 0, i32 8, !dbg !9890
  %48 = load i32, i32* %chroma_y_shift41, align 4, !dbg !9890
  %tobool42 = icmp ne i32 %48, 0, !dbg !9891
  br label %land.end43

land.end43:                                       ; preds = %land.rhs40, %land.end31
  %49 = phi i1 [ false, %land.end31 ], [ %tobool42, %land.rhs40 ]
  %land.ext44 = zext i1 %49 to i32, !dbg !9892
  %shl = shl i32 %45, %land.ext44, !dbg !9893
  store i32 %shl, i32* %sb_y, align 4, !dbg !9894
  call void @llvm.dbg.declare(metadata i32* %slice_height, metadata !9895, metadata !1942), !dbg !9896
  %50 = load i32, i32* %sb_y, align 4, !dbg !9897
  %add = add nsw i32 %50, 1, !dbg !9898
  %51 = load i32, i32* %plane, align 4, !dbg !9899
  %tobool45 = icmp ne i32 %51, 0, !dbg !9899
  br i1 %tobool45, label %land.end49, label %land.rhs46, !dbg !9900

land.rhs46:                                       ; preds = %land.end43
  %52 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9901
  %chroma_y_shift47 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %52, i32 0, i32 8, !dbg !9902
  %53 = load i32, i32* %chroma_y_shift47, align 4, !dbg !9902
  %tobool48 = icmp ne i32 %53, 0, !dbg !9903
  br label %land.end49

land.end49:                                       ; preds = %land.rhs46, %land.end43
  %54 = phi i1 [ false, %land.end43 ], [ %tobool48, %land.rhs46 ]
  %land.ext50 = zext i1 %54 to i32, !dbg !9904
  %add51 = add nsw i32 %add, %land.ext50, !dbg !9905
  store i32 %add51, i32* %slice_height, align 4, !dbg !9906
  call void @llvm.dbg.declare(metadata i32* %slice_width, metadata !9907, metadata !1942), !dbg !9908
  %55 = load i32, i32* %plane, align 4, !dbg !9909
  %tobool52 = icmp ne i32 %55, 0, !dbg !9909
  br i1 %tobool52, label %cond.true, label %cond.false, !dbg !9909

cond.true:                                        ; preds = %land.end49
  %56 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9910
  %c_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %56, i32 0, i32 29, !dbg !9911
  %57 = load i32, i32* %c_superblock_width, align 8, !dbg !9911
  br label %cond.end, !dbg !9912

cond.false:                                       ; preds = %land.end49
  %58 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9913
  %y_superblock_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %58, i32 0, i32 26, !dbg !9914
  %59 = load i32, i32* %y_superblock_width, align 4, !dbg !9914
  br label %cond.end, !dbg !9915

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %57, %cond.true ], [ %59, %cond.false ], !dbg !9916
  store i32 %cond, i32* %slice_width, align 4, !dbg !9918
  call void @llvm.dbg.declare(metadata i32* %fragment_width, metadata !9919, metadata !1942), !dbg !9920
  %60 = load i32, i32* %plane, align 4, !dbg !9921
  %tobool53 = icmp ne i32 %60, 0, !dbg !9922
  %lnot54 = xor i1 %tobool53, true, !dbg !9922
  %lnot56 = xor i1 %lnot54, true, !dbg !9923
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !9923
  %idxprom58 = sext i32 %lnot.ext57 to i64, !dbg !9924
  %61 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9924
  %fragment_width59 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %61, i32 0, i32 39, !dbg !9925
  %arrayidx60 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width59, i64 0, i64 %idxprom58, !dbg !9924
  %62 = load i32, i32* %arrayidx60, align 4, !dbg !9924
  store i32 %62, i32* %fragment_width, align 4, !dbg !9920
  call void @llvm.dbg.declare(metadata i32* %fragment_height, metadata !9926, metadata !1942), !dbg !9927
  %63 = load i32, i32* %plane, align 4, !dbg !9928
  %tobool61 = icmp ne i32 %63, 0, !dbg !9929
  %lnot62 = xor i1 %tobool61, true, !dbg !9929
  %lnot64 = xor i1 %lnot62, true, !dbg !9930
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !9930
  %idxprom66 = sext i32 %lnot.ext65 to i64, !dbg !9931
  %64 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9931
  %fragment_height67 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %64, i32 0, i32 40, !dbg !9932
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height67, i64 0, i64 %idxprom66, !dbg !9931
  %65 = load i32, i32* %arrayidx68, align 4, !dbg !9931
  store i32 %65, i32* %fragment_height, align 4, !dbg !9927
  call void @llvm.dbg.declare(metadata i32* %fragment_start, metadata !9933, metadata !1942), !dbg !9934
  %66 = load i32, i32* %plane, align 4, !dbg !9935
  %idxprom69 = sext i32 %66 to i64, !dbg !9936
  %67 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9936
  %fragment_start70 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %67, i32 0, i32 42, !dbg !9937
  %arrayidx71 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start70, i64 0, i64 %idxprom69, !dbg !9936
  %68 = load i32, i32* %arrayidx71, align 4, !dbg !9936
  store i32 %68, i32* %fragment_start, align 4, !dbg !9934
  call void @llvm.dbg.declare(metadata i32* %do_await, metadata !9938, metadata !1942), !dbg !9939
  %69 = load i32, i32* %plane, align 4, !dbg !9940
  %tobool72 = icmp ne i32 %69, 0, !dbg !9940
  br i1 %tobool72, label %land.end75, label %land.rhs73, !dbg !9941

land.rhs73:                                       ; preds = %cond.end
  %70 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9942
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %70, i32 0, i32 0, !dbg !9943
  %71 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !9943
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %71, i32 0, i32 148, !dbg !9944
  %72 = load i32, i32* %active_thread_type, align 8, !dbg !9944
  %and = and i32 %72, 1, !dbg !9945
  %tobool74 = icmp ne i32 %and, 0, !dbg !9946
  br label %land.end75

land.end75:                                       ; preds = %land.rhs73, %cond.end
  %73 = phi i1 [ false, %cond.end ], [ %tobool74, %land.rhs73 ]
  %land.ext76 = zext i1 %73 to i32, !dbg !9947
  store i32 %land.ext76, i32* %do_await, align 4, !dbg !9948
  %74 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !9949
  %flipped_image = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %74, i32 0, i32 19, !dbg !9951
  %75 = load i32, i32* %flipped_image, align 16, !dbg !9951
  %tobool77 = icmp ne i32 %75, 0, !dbg !9949
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !9952

if.then78:                                        ; preds = %land.end75
  %76 = load i64, i64* %stride, align 8, !dbg !9953
  %sub = sub nsw i64 0, %76, !dbg !9954
  store i64 %sub, i64* %stride, align 8, !dbg !9955
  br label %if.end79, !dbg !9956

if.end79:                                         ; preds = %if.then78, %land.end75
  br label %for.cond80, !dbg !9957

for.cond80:                                       ; preds = %for.inc319, %if.end79
  %77 = load i32, i32* %sb_y, align 4, !dbg !9958
  %78 = load i32, i32* %slice_height, align 4, !dbg !9962
  %cmp81 = icmp slt i32 %77, %78, !dbg !9963
  br i1 %cmp81, label %for.body83, label %for.end321, !dbg !9964

for.body83:                                       ; preds = %for.cond80
  store i32 0, i32* %sb_x, align 4, !dbg !9965
  br label %for.cond84, !dbg !9968

for.cond84:                                       ; preds = %for.inc294, %for.body83
  %79 = load i32, i32* %sb_x, align 4, !dbg !9969
  %80 = load i32, i32* %slice_width, align 4, !dbg !9972
  %cmp85 = icmp slt i32 %79, %80, !dbg !9973
  br i1 %cmp85, label %for.body87, label %for.end296, !dbg !9974

for.body87:                                       ; preds = %for.cond84
  store i32 0, i32* %j, align 4, !dbg !9975
  br label %for.cond88, !dbg !9978

for.cond88:                                       ; preds = %for.inc, %for.body87
  %81 = load i32, i32* %j, align 4, !dbg !9979
  %cmp89 = icmp slt i32 %81, 16, !dbg !9982
  br i1 %cmp89, label %for.body91, label %for.end, !dbg !9983

for.body91:                                       ; preds = %for.cond88
  %82 = load i32, i32* %sb_x, align 4, !dbg !9984
  %mul = mul nsw i32 4, %82, !dbg !9986
  %83 = load i32, i32* %j, align 4, !dbg !9987
  %idxprom92 = sext i32 %83 to i64, !dbg !9988
  %arrayidx93 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @hilbert_offset, i64 0, i64 %idxprom92, !dbg !9988
  %arrayidx94 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx93, i64 0, i64 0, !dbg !9988
  %84 = load i8, i8* %arrayidx94, align 2, !dbg !9988
  %conv95 = zext i8 %84 to i32, !dbg !9988
  %add96 = add nsw i32 %mul, %conv95, !dbg !9989
  store i32 %add96, i32* %x, align 4, !dbg !9990
  %85 = load i32, i32* %sb_y, align 4, !dbg !9991
  %mul97 = mul nsw i32 4, %85, !dbg !9992
  %86 = load i32, i32* %j, align 4, !dbg !9993
  %idxprom98 = sext i32 %86 to i64, !dbg !9994
  %arrayidx99 = getelementptr inbounds [16 x [2 x i8]], [16 x [2 x i8]]* @hilbert_offset, i64 0, i64 %idxprom98, !dbg !9994
  %arrayidx100 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx99, i64 0, i64 1, !dbg !9994
  %87 = load i8, i8* %arrayidx100, align 1, !dbg !9994
  %conv101 = zext i8 %87 to i32, !dbg !9994
  %add102 = add nsw i32 %mul97, %conv101, !dbg !9995
  store i32 %add102, i32* %y, align 4, !dbg !9996
  %88 = load i32, i32* %y, align 4, !dbg !9997
  %89 = load i32, i32* %fragment_width, align 4, !dbg !9998
  %mul103 = mul nsw i32 %88, %89, !dbg !9999
  %90 = load i32, i32* %x, align 4, !dbg !10000
  %add104 = add nsw i32 %mul103, %90, !dbg !10001
  store i32 %add104, i32* %fragment, align 4, !dbg !10002
  %91 = load i32, i32* %fragment_start, align 4, !dbg !10003
  %92 = load i32, i32* %fragment, align 4, !dbg !10004
  %add105 = add nsw i32 %91, %92, !dbg !10005
  store i32 %add105, i32* %i, align 4, !dbg !10006
  %93 = load i32, i32* %x, align 4, !dbg !10007
  %94 = load i32, i32* %fragment_width, align 4, !dbg !10009
  %cmp106 = icmp sge i32 %93, %94, !dbg !10010
  br i1 %cmp106, label %if.then110, label %lor.lhs.false, !dbg !10011

lor.lhs.false:                                    ; preds = %for.body91
  %95 = load i32, i32* %y, align 4, !dbg !10012
  %96 = load i32, i32* %fragment_height, align 4, !dbg !10014
  %cmp108 = icmp sge i32 %95, %96, !dbg !10015
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !10016

if.then110:                                       ; preds = %lor.lhs.false, %for.body91
  br label %for.inc, !dbg !10017

if.end111:                                        ; preds = %lor.lhs.false
  %97 = load i32, i32* %y, align 4, !dbg !10018
  %mul112 = mul nsw i32 8, %97, !dbg !10019
  %conv113 = sext i32 %mul112 to i64, !dbg !10020
  %98 = load i64, i64* %stride, align 8, !dbg !10021
  %mul114 = mul nsw i64 %conv113, %98, !dbg !10022
  %99 = load i32, i32* %x, align 4, !dbg !10023
  %mul115 = mul nsw i32 8, %99, !dbg !10024
  %conv116 = sext i32 %mul115 to i64, !dbg !10025
  %add117 = add nsw i64 %mul114, %conv116, !dbg !10026
  %conv118 = trunc i64 %add117 to i32, !dbg !10020
  store i32 %conv118, i32* %first_pixel, align 4, !dbg !10027
  %100 = load i32, i32* %do_await, align 4, !dbg !10028
  %tobool119 = icmp ne i32 %100, 0, !dbg !10028
  br i1 %tobool119, label %land.lhs.true, label %if.end136, !dbg !10030

land.lhs.true:                                    ; preds = %if.end111
  %101 = load i32, i32* %i, align 4, !dbg !10031
  %idxprom120 = sext i32 %101 to i64, !dbg !10032
  %102 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10032
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %102, i32 0, i32 41, !dbg !10033
  %103 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !10033
  %arrayidx121 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %103, i64 %idxprom120, !dbg !10032
  %coding_method = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx121, i32 0, i32 1, !dbg !10034
  %104 = load i8, i8* %coding_method, align 2, !dbg !10034
  %conv122 = zext i8 %104 to i32, !dbg !10032
  %cmp123 = icmp ne i32 %conv122, 1, !dbg !10035
  br i1 %cmp123, label %if.then125, label %if.end136, !dbg !10036

if.then125:                                       ; preds = %land.lhs.true
  %105 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10038
  %106 = load i32, i32* %i, align 4, !dbg !10039
  %idxprom126 = sext i32 %106 to i64, !dbg !10040
  %107 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10040
  %all_fragments127 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %107, i32 0, i32 41, !dbg !10041
  %108 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments127, align 8, !dbg !10041
  %arrayidx128 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %108, i64 %idxprom126, !dbg !10040
  %109 = load i32, i32* %fragment, align 4, !dbg !10042
  %idxprom129 = sext i32 %109 to i64, !dbg !10043
  %110 = load [2 x i8]*, [2 x i8]** %motion_val, align 8, !dbg !10043
  %arrayidx130 = getelementptr inbounds [2 x i8], [2 x i8]* %110, i64 %idxprom129, !dbg !10043
  %arrayidx131 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx130, i64 0, i64 1, !dbg !10043
  %111 = load i8, i8* %arrayidx131, align 1, !dbg !10043
  %conv132 = sext i8 %111 to i32, !dbg !10043
  %112 = load i32, i32* %y, align 4, !dbg !10044
  %mul133 = mul nsw i32 16, %112, !dbg !10045
  %113 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10046
  %chroma_y_shift134 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %113, i32 0, i32 8, !dbg !10047
  %114 = load i32, i32* %chroma_y_shift134, align 4, !dbg !10047
  %shr135 = ashr i32 %mul133, %114, !dbg !10048
  call void @await_reference_row(%struct.Vp3DecodeContext* %105, %struct.Vp3Fragment* %arrayidx128, i32 %conv132, i32 %shr135), !dbg !10049
  br label %if.end136, !dbg !10049

if.end136:                                        ; preds = %if.then125, %land.lhs.true, %if.end111
  %115 = load i32, i32* %i, align 4, !dbg !10050
  %idxprom137 = sext i32 %115 to i64, !dbg !10052
  %116 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10052
  %all_fragments138 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %116, i32 0, i32 41, !dbg !10053
  %117 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments138, align 8, !dbg !10053
  %arrayidx139 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %117, i64 %idxprom137, !dbg !10052
  %coding_method140 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx139, i32 0, i32 1, !dbg !10054
  %118 = load i8, i8* %coding_method140, align 2, !dbg !10054
  %conv141 = zext i8 %118 to i32, !dbg !10052
  %cmp142 = icmp ne i32 %conv141, 8, !dbg !10055
  br i1 %cmp142, label %if.then144, label %if.else285, !dbg !10056

if.then144:                                       ; preds = %if.end136
  %119 = load i32, i32* %i, align 4, !dbg !10057
  %idxprom145 = sext i32 %119 to i64, !dbg !10060
  %120 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10060
  %all_fragments146 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %120, i32 0, i32 41, !dbg !10061
  %121 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments146, align 8, !dbg !10061
  %arrayidx147 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %121, i64 %idxprom145, !dbg !10060
  %coding_method148 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx147, i32 0, i32 1, !dbg !10062
  %122 = load i8, i8* %coding_method148, align 2, !dbg !10062
  %conv149 = zext i8 %122 to i32, !dbg !10060
  %cmp150 = icmp eq i32 %conv149, 5, !dbg !10063
  br i1 %cmp150, label %if.then160, label %lor.lhs.false152, !dbg !10064

lor.lhs.false152:                                 ; preds = %if.then144
  %123 = load i32, i32* %i, align 4, !dbg !10065
  %idxprom153 = sext i32 %123 to i64, !dbg !10066
  %124 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10066
  %all_fragments154 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %124, i32 0, i32 41, !dbg !10067
  %125 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments154, align 8, !dbg !10067
  %arrayidx155 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %125, i64 %idxprom153, !dbg !10066
  %coding_method156 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx155, i32 0, i32 1, !dbg !10068
  %126 = load i8, i8* %coding_method156, align 2, !dbg !10068
  %conv157 = zext i8 %126 to i32, !dbg !10066
  %cmp158 = icmp eq i32 %conv157, 6, !dbg !10069
  br i1 %cmp158, label %if.then160, label %if.else, !dbg !10070

if.then160:                                       ; preds = %lor.lhs.false152, %if.then144
  %127 = load i8*, i8** %golden_plane, align 8, !dbg !10072
  store i8* %127, i8** %motion_source, align 8, !dbg !10073
  br label %if.end161, !dbg !10074

if.else:                                          ; preds = %lor.lhs.false152
  %128 = load i8*, i8** %last_plane, align 8, !dbg !10075
  store i8* %128, i8** %motion_source, align 8, !dbg !10076
  br label %if.end161

if.end161:                                        ; preds = %if.else, %if.then160
  %129 = load i32, i32* %first_pixel, align 4, !dbg !10077
  %130 = load i8*, i8** %motion_source, align 8, !dbg !10078
  %idx.ext162 = sext i32 %129 to i64, !dbg !10078
  %add.ptr163 = getelementptr inbounds i8, i8* %130, i64 %idx.ext162, !dbg !10078
  store i8* %add.ptr163, i8** %motion_source, align 8, !dbg !10078
  store i32 0, i32* %motion_halfpel_index, align 4, !dbg !10079
  %131 = load i32, i32* %i, align 4, !dbg !10080
  %idxprom164 = sext i32 %131 to i64, !dbg !10082
  %132 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10082
  %all_fragments165 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %132, i32 0, i32 41, !dbg !10083
  %133 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments165, align 8, !dbg !10083
  %arrayidx166 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %133, i64 %idxprom164, !dbg !10082
  %coding_method167 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx166, i32 0, i32 1, !dbg !10084
  %134 = load i8, i8* %coding_method167, align 2, !dbg !10084
  %conv168 = zext i8 %134 to i32, !dbg !10082
  %cmp169 = icmp sgt i32 %conv168, 1, !dbg !10085
  br i1 %cmp169, label %land.lhs.true171, label %if.end225, !dbg !10086

land.lhs.true171:                                 ; preds = %if.end161
  %135 = load i32, i32* %i, align 4, !dbg !10087
  %idxprom172 = sext i32 %135 to i64, !dbg !10088
  %136 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10088
  %all_fragments173 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %136, i32 0, i32 41, !dbg !10089
  %137 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments173, align 8, !dbg !10089
  %arrayidx174 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %137, i64 %idxprom172, !dbg !10088
  %coding_method175 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx174, i32 0, i32 1, !dbg !10090
  %138 = load i8, i8* %coding_method175, align 2, !dbg !10090
  %conv176 = zext i8 %138 to i32, !dbg !10088
  %cmp177 = icmp ne i32 %conv176, 5, !dbg !10091
  br i1 %cmp177, label %if.then179, label %if.end225, !dbg !10092

if.then179:                                       ; preds = %land.lhs.true171
  call void @llvm.dbg.declare(metadata i32* %src_x, metadata !10093, metadata !1942), !dbg !10095
  call void @llvm.dbg.declare(metadata i32* %src_y, metadata !10096, metadata !1942), !dbg !10097
  %139 = load i32, i32* %fragment, align 4, !dbg !10098
  %idxprom180 = sext i32 %139 to i64, !dbg !10099
  %140 = load [2 x i8]*, [2 x i8]** %motion_val, align 8, !dbg !10099
  %arrayidx181 = getelementptr inbounds [2 x i8], [2 x i8]* %140, i64 %idxprom180, !dbg !10099
  %arrayidx182 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx181, i64 0, i64 0, !dbg !10099
  %141 = load i8, i8* %arrayidx182, align 1, !dbg !10099
  %conv183 = sext i8 %141 to i32, !dbg !10099
  store i32 %conv183, i32* %motion_x, align 4, !dbg !10100
  %142 = load i32, i32* %fragment, align 4, !dbg !10101
  %idxprom184 = sext i32 %142 to i64, !dbg !10102
  %143 = load [2 x i8]*, [2 x i8]** %motion_val, align 8, !dbg !10102
  %arrayidx185 = getelementptr inbounds [2 x i8], [2 x i8]* %143, i64 %idxprom184, !dbg !10102
  %arrayidx186 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx185, i64 0, i64 1, !dbg !10102
  %144 = load i8, i8* %arrayidx186, align 1, !dbg !10102
  %conv187 = sext i8 %144 to i32, !dbg !10102
  store i32 %conv187, i32* %motion_y, align 4, !dbg !10103
  %145 = load i32, i32* %motion_x, align 4, !dbg !10104
  %shr188 = ashr i32 %145, 1, !dbg !10105
  %146 = load i32, i32* %x, align 4, !dbg !10106
  %mul189 = mul nsw i32 8, %146, !dbg !10107
  %add190 = add nsw i32 %shr188, %mul189, !dbg !10108
  store i32 %add190, i32* %src_x, align 4, !dbg !10109
  %147 = load i32, i32* %motion_y, align 4, !dbg !10110
  %shr191 = ashr i32 %147, 1, !dbg !10111
  %148 = load i32, i32* %y, align 4, !dbg !10112
  %mul192 = mul nsw i32 8, %148, !dbg !10113
  %add193 = add nsw i32 %shr191, %mul192, !dbg !10114
  store i32 %add193, i32* %src_y, align 4, !dbg !10115
  %149 = load i32, i32* %motion_x, align 4, !dbg !10116
  %and194 = and i32 %149, 1, !dbg !10117
  store i32 %and194, i32* %motion_halfpel_index, align 4, !dbg !10118
  %150 = load i32, i32* %motion_x, align 4, !dbg !10119
  %shr195 = ashr i32 %150, 1, !dbg !10120
  %151 = load i8*, i8** %motion_source, align 8, !dbg !10121
  %idx.ext196 = sext i32 %shr195 to i64, !dbg !10121
  %add.ptr197 = getelementptr inbounds i8, i8* %151, i64 %idx.ext196, !dbg !10121
  store i8* %add.ptr197, i8** %motion_source, align 8, !dbg !10121
  %152 = load i32, i32* %motion_y, align 4, !dbg !10122
  %and198 = and i32 %152, 1, !dbg !10123
  %shl199 = shl i32 %and198, 1, !dbg !10124
  %153 = load i32, i32* %motion_halfpel_index, align 4, !dbg !10125
  %or = or i32 %153, %shl199, !dbg !10125
  store i32 %or, i32* %motion_halfpel_index, align 4, !dbg !10125
  %154 = load i32, i32* %motion_y, align 4, !dbg !10126
  %shr200 = ashr i32 %154, 1, !dbg !10127
  %conv201 = sext i32 %shr200 to i64, !dbg !10128
  %155 = load i64, i64* %stride, align 8, !dbg !10129
  %mul202 = mul nsw i64 %conv201, %155, !dbg !10130
  %156 = load i8*, i8** %motion_source, align 8, !dbg !10131
  %add.ptr203 = getelementptr inbounds i8, i8* %156, i64 %mul202, !dbg !10131
  store i8* %add.ptr203, i8** %motion_source, align 8, !dbg !10131
  %157 = load i32, i32* %src_x, align 4, !dbg !10132
  %cmp204 = icmp slt i32 %157, 0, !dbg !10134
  br i1 %cmp204, label %if.then217, label %lor.lhs.false206, !dbg !10135

lor.lhs.false206:                                 ; preds = %if.then179
  %158 = load i32, i32* %src_y, align 4, !dbg !10136
  %cmp207 = icmp slt i32 %158, 0, !dbg !10138
  br i1 %cmp207, label %if.then217, label %lor.lhs.false209, !dbg !10139

lor.lhs.false209:                                 ; preds = %lor.lhs.false206
  %159 = load i32, i32* %src_x, align 4, !dbg !10140
  %add210 = add nsw i32 %159, 9, !dbg !10141
  %160 = load i32, i32* %plane_width, align 4, !dbg !10142
  %cmp211 = icmp sge i32 %add210, %160, !dbg !10143
  br i1 %cmp211, label %if.then217, label %lor.lhs.false213, !dbg !10144

lor.lhs.false213:                                 ; preds = %lor.lhs.false209
  %161 = load i32, i32* %src_y, align 4, !dbg !10145
  %add214 = add nsw i32 %161, 9, !dbg !10146
  %162 = load i32, i32* %plane_height, align 4, !dbg !10147
  %cmp215 = icmp sge i32 %add214, %162, !dbg !10148
  br i1 %cmp215, label %if.then217, label %if.end224, !dbg !10149

if.then217:                                       ; preds = %lor.lhs.false213, %lor.lhs.false209, %lor.lhs.false206, %if.then179
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !10151, metadata !1942), !dbg !10153
  %163 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10154
  %edge_emu_buffer = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %163, i32 0, i32 74, !dbg !10155
  %164 = load i8*, i8** %edge_emu_buffer, align 16, !dbg !10155
  store i8* %164, i8** %temp, align 8, !dbg !10153
  %165 = load i64, i64* %stride, align 8, !dbg !10156
  %cmp218 = icmp slt i64 %165, 0, !dbg !10158
  br i1 %cmp218, label %if.then220, label %if.end223, !dbg !10159

if.then220:                                       ; preds = %if.then217
  %166 = load i64, i64* %stride, align 8, !dbg !10160
  %mul221 = mul nsw i64 8, %166, !dbg !10161
  %167 = load i8*, i8** %temp, align 8, !dbg !10162
  %idx.neg = sub i64 0, %mul221, !dbg !10162
  %add.ptr222 = getelementptr inbounds i8, i8* %167, i64 %idx.neg, !dbg !10162
  store i8* %add.ptr222, i8** %temp, align 8, !dbg !10162
  br label %if.end223, !dbg !10163

if.end223:                                        ; preds = %if.then220, %if.then217
  %168 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10164
  %vdsp = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %168, i32 0, i32 16, !dbg !10165
  %emulated_edge_mc = getelementptr inbounds %struct.VideoDSPContext, %struct.VideoDSPContext* %vdsp, i32 0, i32 0, !dbg !10166
  %169 = load void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)** %emulated_edge_mc, align 16, !dbg !10166
  %170 = load i8*, i8** %temp, align 8, !dbg !10167
  %171 = load i8*, i8** %motion_source, align 8, !dbg !10168
  %172 = load i64, i64* %stride, align 8, !dbg !10169
  %173 = load i64, i64* %stride, align 8, !dbg !10170
  %174 = load i32, i32* %src_x, align 4, !dbg !10171
  %175 = load i32, i32* %src_y, align 4, !dbg !10172
  %176 = load i32, i32* %plane_width, align 4, !dbg !10173
  %177 = load i32, i32* %plane_height, align 4, !dbg !10174
  call void %169(i8* %170, i8* %171, i64 %172, i64 %173, i32 9, i32 9, i32 %174, i32 %175, i32 %176, i32 %177), !dbg !10164
  %178 = load i8*, i8** %temp, align 8, !dbg !10175
  store i8* %178, i8** %motion_source, align 8, !dbg !10176
  br label %if.end224, !dbg !10177

if.end224:                                        ; preds = %if.end223, %lor.lhs.false213
  br label %if.end225, !dbg !10178

if.end225:                                        ; preds = %if.end224, %land.lhs.true171, %if.end161
  %179 = load i32, i32* %i, align 4, !dbg !10179
  %idxprom226 = sext i32 %179 to i64, !dbg !10181
  %180 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10181
  %all_fragments227 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %180, i32 0, i32 41, !dbg !10182
  %181 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments227, align 8, !dbg !10182
  %arrayidx228 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %181, i64 %idxprom226, !dbg !10181
  %coding_method229 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx228, i32 0, i32 1, !dbg !10183
  %182 = load i8, i8* %coding_method229, align 2, !dbg !10183
  %conv230 = zext i8 %182 to i32, !dbg !10181
  %cmp231 = icmp ne i32 %conv230, 1, !dbg !10184
  br i1 %cmp231, label %if.then233, label %if.end254, !dbg !10185

if.then233:                                       ; preds = %if.end225
  %183 = load i32, i32* %motion_halfpel_index, align 4, !dbg !10186
  %cmp234 = icmp ne i32 %183, 3, !dbg !10189
  br i1 %cmp234, label %if.then236, label %if.else242, !dbg !10190

if.then236:                                       ; preds = %if.then233
  %184 = load i32, i32* %motion_halfpel_index, align 4, !dbg !10191
  %idxprom237 = sext i32 %184 to i64, !dbg !10193
  %185 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10193
  %hdsp = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %185, i32 0, i32 15, !dbg !10194
  %put_no_rnd_pixels_tab = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp, i32 0, i32 2, !dbg !10195
  %arrayidx238 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_no_rnd_pixels_tab, i64 0, i64 1, !dbg !10193
  %arrayidx239 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx238, i64 0, i64 %idxprom237, !dbg !10193
  %186 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx239, align 8, !dbg !10193
  %187 = load i8*, i8** %output_plane, align 8, !dbg !10196
  %188 = load i32, i32* %first_pixel, align 4, !dbg !10197
  %idx.ext240 = sext i32 %188 to i64, !dbg !10198
  %add.ptr241 = getelementptr inbounds i8, i8* %187, i64 %idx.ext240, !dbg !10198
  %189 = load i8*, i8** %motion_source, align 8, !dbg !10199
  %190 = load i64, i64* %stride, align 8, !dbg !10200
  call void %186(i8* %add.ptr241, i8* %189, i64 %190, i32 8), !dbg !10193
  br label %if.end253, !dbg !10201

if.else242:                                       ; preds = %if.then233
  call void @llvm.dbg.declare(metadata i32* %d, metadata !10202, metadata !1942), !dbg !10204
  %191 = load i32, i32* %motion_x, align 4, !dbg !10205
  %192 = load i32, i32* %motion_y, align 4, !dbg !10206
  %xor = xor i32 %191, %192, !dbg !10207
  %shr243 = ashr i32 %xor, 31, !dbg !10208
  store i32 %shr243, i32* %d, align 4, !dbg !10204
  %193 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10209
  %vp3dsp = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %193, i32 0, i32 17, !dbg !10210
  %put_no_rnd_pixels_l2 = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp, i32 0, i32 0, !dbg !10211
  %194 = load void (i8*, i8*, i8*, i64, i32)*, void (i8*, i8*, i8*, i64, i32)** %put_no_rnd_pixels_l2, align 16, !dbg !10211
  %195 = load i8*, i8** %output_plane, align 8, !dbg !10212
  %196 = load i32, i32* %first_pixel, align 4, !dbg !10213
  %idx.ext244 = sext i32 %196 to i64, !dbg !10214
  %add.ptr245 = getelementptr inbounds i8, i8* %195, i64 %idx.ext244, !dbg !10214
  %197 = load i8*, i8** %motion_source, align 8, !dbg !10215
  %198 = load i32, i32* %d, align 4, !dbg !10216
  %idx.ext246 = sext i32 %198 to i64, !dbg !10217
  %idx.neg247 = sub i64 0, %idx.ext246, !dbg !10217
  %add.ptr248 = getelementptr inbounds i8, i8* %197, i64 %idx.neg247, !dbg !10217
  %199 = load i8*, i8** %motion_source, align 8, !dbg !10218
  %200 = load i64, i64* %stride, align 8, !dbg !10219
  %add.ptr249 = getelementptr inbounds i8, i8* %199, i64 %200, !dbg !10220
  %add.ptr250 = getelementptr inbounds i8, i8* %add.ptr249, i64 1, !dbg !10221
  %201 = load i32, i32* %d, align 4, !dbg !10222
  %idx.ext251 = sext i32 %201 to i64, !dbg !10223
  %add.ptr252 = getelementptr inbounds i8, i8* %add.ptr250, i64 %idx.ext251, !dbg !10223
  %202 = load i64, i64* %stride, align 8, !dbg !10224
  call void %194(i8* %add.ptr245, i8* %add.ptr248, i8* %add.ptr252, i64 %202, i32 8), !dbg !10209
  br label %if.end253

if.end253:                                        ; preds = %if.else242, %if.then236
  br label %if.end254, !dbg !10225

if.end254:                                        ; preds = %if.end253, %if.end225
  %203 = load i32, i32* %i, align 4, !dbg !10226
  %idxprom255 = sext i32 %203 to i64, !dbg !10228
  %204 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10228
  %all_fragments256 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %204, i32 0, i32 41, !dbg !10229
  %205 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments256, align 8, !dbg !10229
  %arrayidx257 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %205, i64 %idxprom255, !dbg !10228
  %coding_method258 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx257, i32 0, i32 1, !dbg !10230
  %206 = load i8, i8* %coding_method258, align 2, !dbg !10230
  %conv259 = zext i8 %206 to i32, !dbg !10228
  %cmp260 = icmp eq i32 %conv259, 1, !dbg !10231
  br i1 %cmp260, label %if.then262, label %if.else269, !dbg !10232

if.then262:                                       ; preds = %if.end254
  %207 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10233
  %208 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10235
  %all_fragments263 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %208, i32 0, i32 41, !dbg !10236
  %209 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments263, align 8, !dbg !10236
  %210 = load i32, i32* %i, align 4, !dbg !10237
  %idx.ext264 = sext i32 %210 to i64, !dbg !10238
  %add.ptr265 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %209, i64 %idx.ext264, !dbg !10238
  %211 = load i32, i32* %plane, align 4, !dbg !10239
  %212 = load i16*, i16** %block, align 8, !dbg !10240
  %call = call i32 @vp3_dequant(%struct.Vp3DecodeContext* %207, %struct.Vp3Fragment* %add.ptr265, i32 %211, i32 0, i16* %212), !dbg !10241
  %213 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10242
  %vp3dsp266 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %213, i32 0, i32 17, !dbg !10243
  %idct_put = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp266, i32 0, i32 1, !dbg !10244
  %214 = load void (i8*, i64, i16*)*, void (i8*, i64, i16*)** %idct_put, align 8, !dbg !10244
  %215 = load i8*, i8** %output_plane, align 8, !dbg !10245
  %216 = load i32, i32* %first_pixel, align 4, !dbg !10246
  %idx.ext267 = sext i32 %216 to i64, !dbg !10247
  %add.ptr268 = getelementptr inbounds i8, i8* %215, i64 %idx.ext267, !dbg !10247
  %217 = load i64, i64* %stride, align 8, !dbg !10248
  %218 = load i16*, i16** %block, align 8, !dbg !10249
  call void %214(i8* %add.ptr268, i64 %217, i16* %218), !dbg !10242
  br label %if.end284, !dbg !10250

if.else269:                                       ; preds = %if.end254
  %219 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10251
  %220 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10254
  %all_fragments270 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %220, i32 0, i32 41, !dbg !10255
  %221 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments270, align 8, !dbg !10255
  %222 = load i32, i32* %i, align 4, !dbg !10256
  %idx.ext271 = sext i32 %222 to i64, !dbg !10257
  %add.ptr272 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %221, i64 %idx.ext271, !dbg !10257
  %223 = load i32, i32* %plane, align 4, !dbg !10258
  %224 = load i16*, i16** %block, align 8, !dbg !10259
  %call273 = call i32 @vp3_dequant(%struct.Vp3DecodeContext* %219, %struct.Vp3Fragment* %add.ptr272, i32 %223, i32 1, i16* %224), !dbg !10260
  %tobool274 = icmp ne i32 %call273, 0, !dbg !10260
  br i1 %tobool274, label %if.then275, label %if.else279, !dbg !10261

if.then275:                                       ; preds = %if.else269
  %225 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10262
  %vp3dsp276 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %225, i32 0, i32 17, !dbg !10264
  %idct_add = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp276, i32 0, i32 2, !dbg !10265
  %226 = load void (i8*, i64, i16*)*, void (i8*, i64, i16*)** %idct_add, align 16, !dbg !10265
  %227 = load i8*, i8** %output_plane, align 8, !dbg !10266
  %228 = load i32, i32* %first_pixel, align 4, !dbg !10267
  %idx.ext277 = sext i32 %228 to i64, !dbg !10268
  %add.ptr278 = getelementptr inbounds i8, i8* %227, i64 %idx.ext277, !dbg !10268
  %229 = load i64, i64* %stride, align 8, !dbg !10269
  %230 = load i16*, i16** %block, align 8, !dbg !10270
  call void %226(i8* %add.ptr278, i64 %229, i16* %230), !dbg !10262
  br label %if.end283, !dbg !10271

if.else279:                                       ; preds = %if.else269
  %231 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10272
  %vp3dsp280 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %231, i32 0, i32 17, !dbg !10274
  %idct_dc_add = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp280, i32 0, i32 3, !dbg !10275
  %232 = load void (i8*, i64, i16*)*, void (i8*, i64, i16*)** %idct_dc_add, align 8, !dbg !10275
  %233 = load i8*, i8** %output_plane, align 8, !dbg !10276
  %234 = load i32, i32* %first_pixel, align 4, !dbg !10277
  %idx.ext281 = sext i32 %234 to i64, !dbg !10278
  %add.ptr282 = getelementptr inbounds i8, i8* %233, i64 %idx.ext281, !dbg !10278
  %235 = load i64, i64* %stride, align 8, !dbg !10279
  %236 = load i16*, i16** %block, align 8, !dbg !10280
  call void %232(i8* %add.ptr282, i64 %235, i16* %236), !dbg !10272
  br label %if.end283

if.end283:                                        ; preds = %if.else279, %if.then275
  br label %if.end284

if.end284:                                        ; preds = %if.end283, %if.then262
  br label %if.end293, !dbg !10281

if.else285:                                       ; preds = %if.end136
  %237 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10282
  %hdsp286 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %237, i32 0, i32 15, !dbg !10284
  %put_pixels_tab = getelementptr inbounds %struct.HpelDSPContext, %struct.HpelDSPContext* %hdsp286, i32 0, i32 0, !dbg !10285
  %arrayidx287 = getelementptr inbounds [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]]* %put_pixels_tab, i64 0, i64 1, !dbg !10282
  %arrayidx288 = getelementptr inbounds [4 x void (i8*, i8*, i64, i32)*], [4 x void (i8*, i8*, i64, i32)*]* %arrayidx287, i64 0, i64 0, !dbg !10282
  %238 = load void (i8*, i8*, i64, i32)*, void (i8*, i8*, i64, i32)** %arrayidx288, align 16, !dbg !10282
  %239 = load i8*, i8** %output_plane, align 8, !dbg !10286
  %240 = load i32, i32* %first_pixel, align 4, !dbg !10287
  %idx.ext289 = sext i32 %240 to i64, !dbg !10288
  %add.ptr290 = getelementptr inbounds i8, i8* %239, i64 %idx.ext289, !dbg !10288
  %241 = load i8*, i8** %last_plane, align 8, !dbg !10289
  %242 = load i32, i32* %first_pixel, align 4, !dbg !10290
  %idx.ext291 = sext i32 %242 to i64, !dbg !10291
  %add.ptr292 = getelementptr inbounds i8, i8* %241, i64 %idx.ext291, !dbg !10291
  %243 = load i64, i64* %stride, align 8, !dbg !10292
  call void %238(i8* %add.ptr290, i8* %add.ptr292, i64 %243, i32 8), !dbg !10282
  br label %if.end293

if.end293:                                        ; preds = %if.else285, %if.end284
  br label %for.inc, !dbg !10293

for.inc:                                          ; preds = %if.end293, %if.then110
  %244 = load i32, i32* %j, align 4, !dbg !10294
  %inc = add nsw i32 %244, 1, !dbg !10294
  store i32 %inc, i32* %j, align 4, !dbg !10294
  br label %for.cond88, !dbg !10296, !llvm.loop !10297

for.end:                                          ; preds = %for.cond88
  br label %for.inc294, !dbg !10299

for.inc294:                                       ; preds = %for.end
  %245 = load i32, i32* %sb_x, align 4, !dbg !10300
  %inc295 = add nsw i32 %245, 1, !dbg !10300
  store i32 %inc295, i32* %sb_x, align 4, !dbg !10300
  br label %for.cond84, !dbg !10302, !llvm.loop !10303

for.end296:                                       ; preds = %for.cond84
  %246 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10305
  %skip_loop_filter = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %246, i32 0, i32 21, !dbg !10307
  %247 = load i32, i32* %skip_loop_filter, align 8, !dbg !10307
  %tobool297 = icmp ne i32 %247, 0, !dbg !10305
  br i1 %tobool297, label %if.end318, label %if.then298, !dbg !10308

if.then298:                                       ; preds = %for.end296
  %248 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10309
  %249 = load i32, i32* %plane, align 4, !dbg !10310
  %250 = load i32, i32* %sb_y, align 4, !dbg !10311
  %mul299 = mul nsw i32 4, %250, !dbg !10312
  %251 = load i32, i32* %sb_y, align 4, !dbg !10313
  %tobool300 = icmp ne i32 %251, 0, !dbg !10314
  %lnot301 = xor i1 %tobool300, true, !dbg !10314
  %lnot303 = xor i1 %lnot301, true, !dbg !10315
  %lnot.ext304 = zext i1 %lnot303 to i32, !dbg !10315
  %sub305 = sub nsw i32 %mul299, %lnot.ext304, !dbg !10316
  %252 = load i32, i32* %sb_y, align 4, !dbg !10317
  %mul306 = mul nsw i32 4, %252, !dbg !10318
  %add307 = add nsw i32 %mul306, 3, !dbg !10319
  %253 = load i32, i32* %fragment_height, align 4, !dbg !10320
  %sub308 = sub nsw i32 %253, 1, !dbg !10321
  %cmp309 = icmp sgt i32 %add307, %sub308, !dbg !10322
  br i1 %cmp309, label %cond.true311, label %cond.false313, !dbg !10323

cond.true311:                                     ; preds = %if.then298
  %254 = load i32, i32* %fragment_height, align 4, !dbg !10324
  %sub312 = sub nsw i32 %254, 1, !dbg !10326
  br label %cond.end316, !dbg !10327

cond.false313:                                    ; preds = %if.then298
  %255 = load i32, i32* %sb_y, align 4, !dbg !10328
  %mul314 = mul nsw i32 4, %255, !dbg !10330
  %add315 = add nsw i32 %mul314, 3, !dbg !10331
  br label %cond.end316, !dbg !10332

cond.end316:                                      ; preds = %cond.false313, %cond.true311
  %cond317 = phi i32 [ %sub312, %cond.true311 ], [ %add315, %cond.false313 ], !dbg !10333
  call void @apply_loop_filter(%struct.Vp3DecodeContext* %248, i32 %249, i32 %sub305, i32 %cond317), !dbg !10335
  br label %if.end318, !dbg !10335

if.end318:                                        ; preds = %cond.end316, %for.end296
  br label %for.inc319, !dbg !10336

for.inc319:                                       ; preds = %if.end318
  %256 = load i32, i32* %sb_y, align 4, !dbg !10337
  %inc320 = add nsw i32 %256, 1, !dbg !10337
  store i32 %inc320, i32* %sb_y, align 4, !dbg !10337
  br label %for.cond80, !dbg !10339, !llvm.loop !10340

for.end321:                                       ; preds = %for.cond80
  br label %for.inc322, !dbg !10341

for.inc322:                                       ; preds = %for.end321
  %257 = load i32, i32* %plane, align 4, !dbg !10342
  %inc323 = add nsw i32 %257, 1, !dbg !10342
  store i32 %inc323, i32* %plane, align 4, !dbg !10342
  br label %for.cond, !dbg !10344, !llvm.loop !10345

for.end324:                                       ; preds = %for.cond
  %258 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10347
  %259 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10348
  %chroma_y_shift325 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %259, i32 0, i32 8, !dbg !10349
  %260 = load i32, i32* %chroma_y_shift325, align 4, !dbg !10349
  %shl326 = shl i32 32, %260, !dbg !10350
  %261 = load i32, i32* %slice.addr, align 4, !dbg !10351
  %add327 = add nsw i32 %261, 1, !dbg !10352
  %mul328 = mul nsw i32 %shl326, %add327, !dbg !10353
  %sub329 = sub nsw i32 %mul328, 16, !dbg !10354
  %262 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10355
  %height330 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %262, i32 0, i32 6, !dbg !10356
  %263 = load i32, i32* %height330, align 4, !dbg !10356
  %sub331 = sub nsw i32 %263, 16, !dbg !10357
  %cmp332 = icmp sgt i32 %sub329, %sub331, !dbg !10358
  br i1 %cmp332, label %cond.true334, label %cond.false337, !dbg !10359

cond.true334:                                     ; preds = %for.end324
  %264 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10360
  %height335 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %264, i32 0, i32 6, !dbg !10362
  %265 = load i32, i32* %height335, align 4, !dbg !10362
  %sub336 = sub nsw i32 %265, 16, !dbg !10363
  br label %cond.end343, !dbg !10364

cond.false337:                                    ; preds = %for.end324
  %266 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10365
  %chroma_y_shift338 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %266, i32 0, i32 8, !dbg !10367
  %267 = load i32, i32* %chroma_y_shift338, align 4, !dbg !10367
  %shl339 = shl i32 32, %267, !dbg !10368
  %268 = load i32, i32* %slice.addr, align 4, !dbg !10369
  %add340 = add nsw i32 %268, 1, !dbg !10370
  %mul341 = mul nsw i32 %shl339, %add340, !dbg !10371
  %sub342 = sub nsw i32 %mul341, 16, !dbg !10372
  br label %cond.end343, !dbg !10373

cond.end343:                                      ; preds = %cond.false337, %cond.true334
  %cond344 = phi i32 [ %sub336, %cond.true334 ], [ %sub342, %cond.false337 ], !dbg !10374
  call void @vp3_draw_horiz_band(%struct.Vp3DecodeContext* %258, i32 %cond344), !dbg !10376
  br label %return, !dbg !10377

return:                                           ; preds = %cond.end343, %if.then
  ret void, !dbg !10378
}

; Function Attrs: nounwind uwtable
define internal void @apply_loop_filter(%struct.Vp3DecodeContext* %s, i32 %plane, i32 %ystart, i32 %yend) #0 !dbg !10379 {
entry:
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %plane.addr = alloca i32, align 4
  %ystart.addr = alloca i32, align 4
  %yend.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %bounding_values = alloca i32*, align 8
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %fragment = alloca i32, align 4
  %stride = alloca i64, align 8
  %plane_data = alloca i8*, align 8
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !10380, metadata !1942), !dbg !10381
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !10382, metadata !1942), !dbg !10383
  store i32 %ystart, i32* %ystart.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ystart.addr, metadata !10384, metadata !1942), !dbg !10385
  store i32 %yend, i32* %yend.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yend.addr, metadata !10386, metadata !1942), !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10388, metadata !1942), !dbg !10389
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10390, metadata !1942), !dbg !10391
  call void @llvm.dbg.declare(metadata i32** %bounding_values, metadata !10392, metadata !1942), !dbg !10393
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10394
  %bounding_values_array = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 81, !dbg !10395
  %arraydecay = getelementptr inbounds [258 x i32], [258 x i32]* %bounding_values_array, i32 0, i32 0, !dbg !10394
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 127, !dbg !10396
  store i32* %add.ptr, i32** %bounding_values, align 8, !dbg !10393
  call void @llvm.dbg.declare(metadata i32* %width, metadata !10397, metadata !1942), !dbg !10398
  %1 = load i32, i32* %plane.addr, align 4, !dbg !10399
  %tobool = icmp ne i32 %1, 0, !dbg !10400
  %lnot = xor i1 %tobool, true, !dbg !10400
  %lnot1 = xor i1 %lnot, true, !dbg !10401
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10401
  %idxprom = sext i32 %lnot.ext to i64, !dbg !10402
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10402
  %fragment_width = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 39, !dbg !10403
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_width, i64 0, i64 %idxprom, !dbg !10402
  %3 = load i32, i32* %arrayidx, align 4, !dbg !10402
  store i32 %3, i32* %width, align 4, !dbg !10398
  call void @llvm.dbg.declare(metadata i32* %height, metadata !10404, metadata !1942), !dbg !10405
  %4 = load i32, i32* %plane.addr, align 4, !dbg !10406
  %tobool2 = icmp ne i32 %4, 0, !dbg !10407
  %lnot3 = xor i1 %tobool2, true, !dbg !10407
  %lnot5 = xor i1 %lnot3, true, !dbg !10408
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10408
  %idxprom7 = sext i32 %lnot.ext6 to i64, !dbg !10409
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10409
  %fragment_height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 40, !dbg !10410
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %fragment_height, i64 0, i64 %idxprom7, !dbg !10409
  %6 = load i32, i32* %arrayidx8, align 4, !dbg !10409
  store i32 %6, i32* %height, align 4, !dbg !10405
  call void @llvm.dbg.declare(metadata i32* %fragment, metadata !10411, metadata !1942), !dbg !10412
  %7 = load i32, i32* %plane.addr, align 4, !dbg !10413
  %idxprom9 = sext i32 %7 to i64, !dbg !10414
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10414
  %fragment_start = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 42, !dbg !10415
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %fragment_start, i64 0, i64 %idxprom9, !dbg !10414
  %9 = load i32, i32* %arrayidx10, align 4, !dbg !10414
  %10 = load i32, i32* %ystart.addr, align 4, !dbg !10416
  %11 = load i32, i32* %width, align 4, !dbg !10417
  %mul = mul nsw i32 %10, %11, !dbg !10418
  %add = add nsw i32 %9, %mul, !dbg !10419
  store i32 %add, i32* %fragment, align 4, !dbg !10412
  call void @llvm.dbg.declare(metadata i64* %stride, metadata !10420, metadata !1942), !dbg !10421
  %12 = load i32, i32* %plane.addr, align 4, !dbg !10422
  %idxprom11 = sext i32 %12 to i64, !dbg !10423
  %13 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10423
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %13, i32 0, i32 11, !dbg !10424
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame, i32 0, i32 0, !dbg !10425
  %14 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !10425
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 1, !dbg !10426
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom11, !dbg !10423
  %15 = load i32, i32* %arrayidx12, align 4, !dbg !10423
  %conv = sext i32 %15 to i64, !dbg !10423
  store i64 %conv, i64* %stride, align 8, !dbg !10421
  call void @llvm.dbg.declare(metadata i8** %plane_data, metadata !10427, metadata !1942), !dbg !10428
  %16 = load i32, i32* %plane.addr, align 4, !dbg !10429
  %idxprom13 = sext i32 %16 to i64, !dbg !10430
  %17 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10430
  %current_frame14 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %17, i32 0, i32 11, !dbg !10431
  %f15 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame14, i32 0, i32 0, !dbg !10432
  %18 = load %struct.AVFrame*, %struct.AVFrame** %f15, align 8, !dbg !10432
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 0, !dbg !10433
  %arrayidx16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom13, !dbg !10430
  %19 = load i8*, i8** %arrayidx16, align 8, !dbg !10430
  store i8* %19, i8** %plane_data, align 8, !dbg !10428
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10434
  %flipped_image = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %20, i32 0, i32 19, !dbg !10436
  %21 = load i32, i32* %flipped_image, align 16, !dbg !10436
  %tobool17 = icmp ne i32 %21, 0, !dbg !10434
  br i1 %tobool17, label %if.end, label %if.then, !dbg !10437

if.then:                                          ; preds = %entry
  %22 = load i64, i64* %stride, align 8, !dbg !10438
  %sub = sub nsw i64 0, %22, !dbg !10439
  store i64 %sub, i64* %stride, align 8, !dbg !10440
  br label %if.end, !dbg !10441

if.end:                                           ; preds = %if.then, %entry
  %23 = load i32, i32* %plane.addr, align 4, !dbg !10442
  %idxprom18 = sext i32 %23 to i64, !dbg !10443
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10443
  %data_offset = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 43, !dbg !10444
  %arrayidx19 = getelementptr inbounds [3 x i32], [3 x i32]* %data_offset, i64 0, i64 %idxprom18, !dbg !10443
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !10443
  %conv20 = sext i32 %25 to i64, !dbg !10443
  %26 = load i32, i32* %ystart.addr, align 4, !dbg !10445
  %mul21 = mul nsw i32 8, %26, !dbg !10446
  %conv22 = sext i32 %mul21 to i64, !dbg !10447
  %27 = load i64, i64* %stride, align 8, !dbg !10448
  %mul23 = mul nsw i64 %conv22, %27, !dbg !10449
  %add24 = add nsw i64 %conv20, %mul23, !dbg !10450
  %28 = load i8*, i8** %plane_data, align 8, !dbg !10451
  %add.ptr25 = getelementptr inbounds i8, i8* %28, i64 %add24, !dbg !10451
  store i8* %add.ptr25, i8** %plane_data, align 8, !dbg !10451
  %29 = load i32, i32* %ystart.addr, align 4, !dbg !10452
  store i32 %29, i32* %y, align 4, !dbg !10454
  br label %for.cond, !dbg !10455

for.cond:                                         ; preds = %for.inc95, %if.end
  %30 = load i32, i32* %y, align 4, !dbg !10456
  %31 = load i32, i32* %yend.addr, align 4, !dbg !10459
  %cmp = icmp slt i32 %30, %31, !dbg !10460
  br i1 %cmp, label %for.body, label %for.end97, !dbg !10461

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !10462
  br label %for.cond27, !dbg !10465

for.cond27:                                       ; preds = %for.inc, %for.body
  %32 = load i32, i32* %x, align 4, !dbg !10466
  %33 = load i32, i32* %width, align 4, !dbg !10469
  %cmp28 = icmp slt i32 %32, %33, !dbg !10470
  br i1 %cmp28, label %for.body30, label %for.end, !dbg !10471

for.body30:                                       ; preds = %for.cond27
  %34 = load i32, i32* %fragment, align 4, !dbg !10472
  %idxprom31 = sext i32 %34 to i64, !dbg !10475
  %35 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10475
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %35, i32 0, i32 41, !dbg !10476
  %36 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !10476
  %arrayidx32 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %36, i64 %idxprom31, !dbg !10475
  %coding_method = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx32, i32 0, i32 1, !dbg !10477
  %37 = load i8, i8* %coding_method, align 2, !dbg !10477
  %conv33 = zext i8 %37 to i32, !dbg !10475
  %cmp34 = icmp ne i32 %conv33, 8, !dbg !10478
  br i1 %cmp34, label %if.then36, label %if.end91, !dbg !10479

if.then36:                                        ; preds = %for.body30
  %38 = load i32, i32* %x, align 4, !dbg !10480
  %cmp37 = icmp sgt i32 %38, 0, !dbg !10483
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !10484

if.then39:                                        ; preds = %if.then36
  %39 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10485
  %vp3dsp = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %39, i32 0, i32 17, !dbg !10487
  %h_loop_filter = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp, i32 0, i32 5, !dbg !10488
  %40 = load void (i8*, i64, i32*)*, void (i8*, i64, i32*)** %h_loop_filter, align 8, !dbg !10488
  %41 = load i8*, i8** %plane_data, align 8, !dbg !10489
  %42 = load i32, i32* %x, align 4, !dbg !10490
  %mul40 = mul nsw i32 8, %42, !dbg !10491
  %idx.ext = sext i32 %mul40 to i64, !dbg !10492
  %add.ptr41 = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !10492
  %43 = load i64, i64* %stride, align 8, !dbg !10493
  %44 = load i32*, i32** %bounding_values, align 8, !dbg !10494
  call void %40(i8* %add.ptr41, i64 %43, i32* %44), !dbg !10485
  br label %if.end42, !dbg !10495

if.end42:                                         ; preds = %if.then39, %if.then36
  %45 = load i32, i32* %y, align 4, !dbg !10496
  %cmp43 = icmp sgt i32 %45, 0, !dbg !10498
  br i1 %cmp43, label %if.then45, label %if.end50, !dbg !10499

if.then45:                                        ; preds = %if.end42
  %46 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10500
  %vp3dsp46 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %46, i32 0, i32 17, !dbg !10502
  %v_loop_filter = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp46, i32 0, i32 4, !dbg !10503
  %47 = load void (i8*, i64, i32*)*, void (i8*, i64, i32*)** %v_loop_filter, align 16, !dbg !10503
  %48 = load i8*, i8** %plane_data, align 8, !dbg !10504
  %49 = load i32, i32* %x, align 4, !dbg !10505
  %mul47 = mul nsw i32 8, %49, !dbg !10506
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !10507
  %add.ptr49 = getelementptr inbounds i8, i8* %48, i64 %idx.ext48, !dbg !10507
  %50 = load i64, i64* %stride, align 8, !dbg !10508
  %51 = load i32*, i32** %bounding_values, align 8, !dbg !10509
  call void %47(i8* %add.ptr49, i64 %50, i32* %51), !dbg !10500
  br label %if.end50, !dbg !10510

if.end50:                                         ; preds = %if.then45, %if.end42
  %52 = load i32, i32* %x, align 4, !dbg !10511
  %53 = load i32, i32* %width, align 4, !dbg !10513
  %sub51 = sub nsw i32 %53, 1, !dbg !10514
  %cmp52 = icmp slt i32 %52, %sub51, !dbg !10515
  br i1 %cmp52, label %land.lhs.true, label %if.end69, !dbg !10516

land.lhs.true:                                    ; preds = %if.end50
  %54 = load i32, i32* %fragment, align 4, !dbg !10517
  %add54 = add nsw i32 %54, 1, !dbg !10518
  %idxprom55 = sext i32 %add54 to i64, !dbg !10519
  %55 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10519
  %all_fragments56 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %55, i32 0, i32 41, !dbg !10520
  %56 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments56, align 8, !dbg !10520
  %arrayidx57 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %56, i64 %idxprom55, !dbg !10519
  %coding_method58 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx57, i32 0, i32 1, !dbg !10521
  %57 = load i8, i8* %coding_method58, align 2, !dbg !10521
  %conv59 = zext i8 %57 to i32, !dbg !10519
  %cmp60 = icmp eq i32 %conv59, 8, !dbg !10522
  br i1 %cmp60, label %if.then62, label %if.end69, !dbg !10523

if.then62:                                        ; preds = %land.lhs.true
  %58 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10525
  %vp3dsp63 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %58, i32 0, i32 17, !dbg !10527
  %h_loop_filter64 = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp63, i32 0, i32 5, !dbg !10528
  %59 = load void (i8*, i64, i32*)*, void (i8*, i64, i32*)** %h_loop_filter64, align 8, !dbg !10528
  %60 = load i8*, i8** %plane_data, align 8, !dbg !10529
  %61 = load i32, i32* %x, align 4, !dbg !10530
  %mul65 = mul nsw i32 8, %61, !dbg !10531
  %idx.ext66 = sext i32 %mul65 to i64, !dbg !10532
  %add.ptr67 = getelementptr inbounds i8, i8* %60, i64 %idx.ext66, !dbg !10532
  %add.ptr68 = getelementptr inbounds i8, i8* %add.ptr67, i64 8, !dbg !10533
  %62 = load i64, i64* %stride, align 8, !dbg !10534
  %63 = load i32*, i32** %bounding_values, align 8, !dbg !10535
  call void %59(i8* %add.ptr68, i64 %62, i32* %63), !dbg !10525
  br label %if.end69, !dbg !10536

if.end69:                                         ; preds = %if.then62, %land.lhs.true, %if.end50
  %64 = load i32, i32* %y, align 4, !dbg !10537
  %65 = load i32, i32* %height, align 4, !dbg !10539
  %sub70 = sub nsw i32 %65, 1, !dbg !10540
  %cmp71 = icmp slt i32 %64, %sub70, !dbg !10541
  br i1 %cmp71, label %land.lhs.true73, label %if.end90, !dbg !10542

land.lhs.true73:                                  ; preds = %if.end69
  %66 = load i32, i32* %fragment, align 4, !dbg !10543
  %67 = load i32, i32* %width, align 4, !dbg !10544
  %add74 = add nsw i32 %66, %67, !dbg !10545
  %idxprom75 = sext i32 %add74 to i64, !dbg !10546
  %68 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10546
  %all_fragments76 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %68, i32 0, i32 41, !dbg !10547
  %69 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments76, align 8, !dbg !10547
  %arrayidx77 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %69, i64 %idxprom75, !dbg !10546
  %coding_method78 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx77, i32 0, i32 1, !dbg !10548
  %70 = load i8, i8* %coding_method78, align 2, !dbg !10548
  %conv79 = zext i8 %70 to i32, !dbg !10546
  %cmp80 = icmp eq i32 %conv79, 8, !dbg !10549
  br i1 %cmp80, label %if.then82, label %if.end90, !dbg !10550

if.then82:                                        ; preds = %land.lhs.true73
  %71 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10551
  %vp3dsp83 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %71, i32 0, i32 17, !dbg !10553
  %v_loop_filter84 = getelementptr inbounds %struct.VP3DSPContext, %struct.VP3DSPContext* %vp3dsp83, i32 0, i32 4, !dbg !10554
  %72 = load void (i8*, i64, i32*)*, void (i8*, i64, i32*)** %v_loop_filter84, align 16, !dbg !10554
  %73 = load i8*, i8** %plane_data, align 8, !dbg !10555
  %74 = load i32, i32* %x, align 4, !dbg !10556
  %mul85 = mul nsw i32 8, %74, !dbg !10557
  %idx.ext86 = sext i32 %mul85 to i64, !dbg !10558
  %add.ptr87 = getelementptr inbounds i8, i8* %73, i64 %idx.ext86, !dbg !10558
  %75 = load i64, i64* %stride, align 8, !dbg !10559
  %mul88 = mul nsw i64 8, %75, !dbg !10560
  %add.ptr89 = getelementptr inbounds i8, i8* %add.ptr87, i64 %mul88, !dbg !10561
  %76 = load i64, i64* %stride, align 8, !dbg !10562
  %77 = load i32*, i32** %bounding_values, align 8, !dbg !10563
  call void %72(i8* %add.ptr89, i64 %76, i32* %77), !dbg !10551
  br label %if.end90, !dbg !10564

if.end90:                                         ; preds = %if.then82, %land.lhs.true73, %if.end69
  br label %if.end91, !dbg !10565

if.end91:                                         ; preds = %if.end90, %for.body30
  %78 = load i32, i32* %fragment, align 4, !dbg !10566
  %inc = add nsw i32 %78, 1, !dbg !10566
  store i32 %inc, i32* %fragment, align 4, !dbg !10566
  br label %for.inc, !dbg !10567

for.inc:                                          ; preds = %if.end91
  %79 = load i32, i32* %x, align 4, !dbg !10568
  %inc92 = add nsw i32 %79, 1, !dbg !10568
  store i32 %inc92, i32* %x, align 4, !dbg !10568
  br label %for.cond27, !dbg !10570, !llvm.loop !10571

for.end:                                          ; preds = %for.cond27
  %80 = load i64, i64* %stride, align 8, !dbg !10573
  %mul93 = mul nsw i64 8, %80, !dbg !10574
  %81 = load i8*, i8** %plane_data, align 8, !dbg !10575
  %add.ptr94 = getelementptr inbounds i8, i8* %81, i64 %mul93, !dbg !10575
  store i8* %add.ptr94, i8** %plane_data, align 8, !dbg !10575
  br label %for.inc95, !dbg !10576

for.inc95:                                        ; preds = %for.end
  %82 = load i32, i32* %y, align 4, !dbg !10577
  %inc96 = add nsw i32 %82, 1, !dbg !10577
  store i32 %inc96, i32* %y, align 4, !dbg !10577
  br label %for.cond, !dbg !10579, !llvm.loop !10580

for.end97:                                        ; preds = %for.cond
  ret void, !dbg !10582
}

; Function Attrs: nounwind uwtable
define internal void @vp3_draw_horiz_band(%struct.Vp3DecodeContext* %s, i32 %y) #0 !dbg !10583 {
entry:
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %y.addr = alloca i32, align 4
  %h = alloca i32, align 4
  %cy = alloca i32, align 4
  %i = alloca i32, align 4
  %offset = alloca [8 x i32], align 16
  %y_flipped = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !10584, metadata !1942), !dbg !10585
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10586, metadata !1942), !dbg !10587
  call void @llvm.dbg.declare(metadata i32* %h, metadata !10588, metadata !1942), !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !10590, metadata !1942), !dbg !10591
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10592, metadata !1942), !dbg !10593
  call void @llvm.dbg.declare(metadata [8 x i32]* %offset, metadata !10594, metadata !1942), !dbg !10595
  %0 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10596
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %0, i32 0, i32 0, !dbg !10598
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !10598
  %active_thread_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 148, !dbg !10599
  %2 = load i32, i32* %active_thread_type, align 8, !dbg !10599
  %and = and i32 %2, 1, !dbg !10600
  %tobool = icmp ne i32 %and, 0, !dbg !10600
  br i1 %tobool, label %if.then, label %if.end, !dbg !10601

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %y_flipped, metadata !10602, metadata !1942), !dbg !10604
  %3 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10605
  %flipped_image = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %3, i32 0, i32 19, !dbg !10606
  %4 = load i32, i32* %flipped_image, align 16, !dbg !10606
  %tobool1 = icmp ne i32 %4, 0, !dbg !10605
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10605

cond.true:                                        ; preds = %if.then
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10607
  %height = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 6, !dbg !10609
  %6 = load i32, i32* %height, align 4, !dbg !10609
  %7 = load i32, i32* %y.addr, align 4, !dbg !10610
  %sub = sub nsw i32 %6, %7, !dbg !10611
  br label %cond.end, !dbg !10612

cond.false:                                       ; preds = %if.then
  %8 = load i32, i32* %y.addr, align 4, !dbg !10613
  br label %cond.end, !dbg !10615

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %8, %cond.false ], !dbg !10616
  store i32 %cond, i32* %y_flipped, align 4, !dbg !10618
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10619
  %current_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 11, !dbg !10620
  %10 = load i32, i32* %y_flipped, align 4, !dbg !10621
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10622
  %height2 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 6, !dbg !10623
  %12 = load i32, i32* %height2, align 4, !dbg !10623
  %cmp = icmp eq i32 %10, %12, !dbg !10624
  br i1 %cmp, label %cond.true3, label %cond.false4, !dbg !10621

cond.true3:                                       ; preds = %cond.end
  br label %cond.end6, !dbg !10625

cond.false4:                                      ; preds = %cond.end
  %13 = load i32, i32* %y_flipped, align 4, !dbg !10626
  %sub5 = sub nsw i32 %13, 1, !dbg !10627
  br label %cond.end6, !dbg !10628

cond.end6:                                        ; preds = %cond.false4, %cond.true3
  %cond7 = phi i32 [ 2147483647, %cond.true3 ], [ %sub5, %cond.false4 ], !dbg !10629
  call void @ff_thread_report_progress(%struct.ThreadFrame* %current_frame, i32 %cond7, i32 0), !dbg !10630
  br label %if.end, !dbg !10631

if.end:                                           ; preds = %cond.end6, %entry
  %14 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10632
  %avctx8 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %14, i32 0, i32 0, !dbg !10634
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx8, align 16, !dbg !10634
  %draw_horiz_band = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 26, !dbg !10635
  %16 = load void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)** %draw_horiz_band, align 8, !dbg !10635
  %tobool9 = icmp ne void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)* %16, null, !dbg !10632
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10636

if.then10:                                        ; preds = %if.end
  br label %return, !dbg !10637

if.end11:                                         ; preds = %if.end
  %17 = load i32, i32* %y.addr, align 4, !dbg !10638
  %18 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10639
  %last_slice_end = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %18, i32 0, i32 20, !dbg !10640
  %19 = load i32, i32* %last_slice_end, align 4, !dbg !10640
  %sub12 = sub nsw i32 %17, %19, !dbg !10641
  store i32 %sub12, i32* %h, align 4, !dbg !10642
  %20 = load i32, i32* %y.addr, align 4, !dbg !10643
  %21 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10644
  %last_slice_end13 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %21, i32 0, i32 20, !dbg !10645
  store i32 %20, i32* %last_slice_end13, align 4, !dbg !10646
  %22 = load i32, i32* %h, align 4, !dbg !10647
  %23 = load i32, i32* %y.addr, align 4, !dbg !10648
  %sub14 = sub nsw i32 %23, %22, !dbg !10648
  store i32 %sub14, i32* %y.addr, align 4, !dbg !10648
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10649
  %flipped_image15 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 19, !dbg !10651
  %25 = load i32, i32* %flipped_image15, align 16, !dbg !10651
  %tobool16 = icmp ne i32 %25, 0, !dbg !10649
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !10652

if.then17:                                        ; preds = %if.end11
  %26 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10653
  %height18 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %26, i32 0, i32 6, !dbg !10654
  %27 = load i32, i32* %height18, align 4, !dbg !10654
  %28 = load i32, i32* %y.addr, align 4, !dbg !10655
  %sub19 = sub nsw i32 %27, %28, !dbg !10656
  %29 = load i32, i32* %h, align 4, !dbg !10657
  %sub20 = sub nsw i32 %sub19, %29, !dbg !10658
  store i32 %sub20, i32* %y.addr, align 4, !dbg !10659
  br label %if.end21, !dbg !10660

if.end21:                                         ; preds = %if.then17, %if.end11
  %30 = load i32, i32* %y.addr, align 4, !dbg !10661
  %31 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10662
  %chroma_y_shift = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %31, i32 0, i32 8, !dbg !10663
  %32 = load i32, i32* %chroma_y_shift, align 4, !dbg !10663
  %shr = ashr i32 %30, %32, !dbg !10664
  store i32 %shr, i32* %cy, align 4, !dbg !10665
  %33 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10666
  %current_frame22 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %33, i32 0, i32 11, !dbg !10667
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame22, i32 0, i32 0, !dbg !10668
  %34 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !10668
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 1, !dbg !10669
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !10666
  %35 = load i32, i32* %arrayidx, align 8, !dbg !10666
  %36 = load i32, i32* %y.addr, align 4, !dbg !10670
  %mul = mul nsw i32 %35, %36, !dbg !10671
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 0, !dbg !10672
  store i32 %mul, i32* %arrayidx23, align 16, !dbg !10673
  %37 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10674
  %current_frame24 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %37, i32 0, i32 11, !dbg !10675
  %f25 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame24, i32 0, i32 0, !dbg !10676
  %38 = load %struct.AVFrame*, %struct.AVFrame** %f25, align 8, !dbg !10676
  %linesize26 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %38, i32 0, i32 1, !dbg !10677
  %arrayidx27 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize26, i64 0, i64 1, !dbg !10674
  %39 = load i32, i32* %arrayidx27, align 4, !dbg !10674
  %40 = load i32, i32* %cy, align 4, !dbg !10678
  %mul28 = mul nsw i32 %39, %40, !dbg !10679
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 1, !dbg !10680
  store i32 %mul28, i32* %arrayidx29, align 4, !dbg !10681
  %41 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10682
  %current_frame30 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %41, i32 0, i32 11, !dbg !10683
  %f31 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame30, i32 0, i32 0, !dbg !10684
  %42 = load %struct.AVFrame*, %struct.AVFrame** %f31, align 8, !dbg !10684
  %linesize32 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 1, !dbg !10685
  %arrayidx33 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize32, i64 0, i64 2, !dbg !10682
  %43 = load i32, i32* %arrayidx33, align 8, !dbg !10682
  %44 = load i32, i32* %cy, align 4, !dbg !10686
  %mul34 = mul nsw i32 %43, %44, !dbg !10687
  %arrayidx35 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 2, !dbg !10688
  store i32 %mul34, i32* %arrayidx35, align 8, !dbg !10689
  store i32 3, i32* %i, align 4, !dbg !10690
  br label %for.cond, !dbg !10692

for.cond:                                         ; preds = %for.inc, %if.end21
  %45 = load i32, i32* %i, align 4, !dbg !10693
  %cmp36 = icmp slt i32 %45, 8, !dbg !10696
  br i1 %cmp36, label %for.body, label %for.end, !dbg !10697

for.body:                                         ; preds = %for.cond
  %46 = load i32, i32* %i, align 4, !dbg !10698
  %idxprom = sext i32 %46 to i64, !dbg !10699
  %arrayidx37 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 %idxprom, !dbg !10699
  store i32 0, i32* %arrayidx37, align 4, !dbg !10700
  br label %for.inc, !dbg !10699

for.inc:                                          ; preds = %for.body
  %47 = load i32, i32* %i, align 4, !dbg !10701
  %inc = add nsw i32 %47, 1, !dbg !10701
  store i32 %inc, i32* %i, align 4, !dbg !10701
  br label %for.cond, !dbg !10703, !llvm.loop !10704

for.end:                                          ; preds = %for.cond
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10706, !srcloc !10712
  %48 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10713
  %avctx38 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %48, i32 0, i32 0, !dbg !10714
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx38, align 16, !dbg !10714
  %draw_horiz_band39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 26, !dbg !10715
  %50 = load void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)** %draw_horiz_band39, align 8, !dbg !10715
  %51 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10716
  %avctx40 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %51, i32 0, i32 0, !dbg !10717
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx40, align 16, !dbg !10717
  %53 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10718
  %current_frame41 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %53, i32 0, i32 11, !dbg !10719
  %f42 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %current_frame41, i32 0, i32 0, !dbg !10720
  %54 = load %struct.AVFrame*, %struct.AVFrame** %f42, align 8, !dbg !10720
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i32 0, i32 0, !dbg !10721
  %55 = load i32, i32* %y.addr, align 4, !dbg !10722
  %56 = load i32, i32* %h, align 4, !dbg !10723
  call void %50(%struct.AVCodecContext* %52, %struct.AVFrame* %54, i32* %arraydecay, i32 %55, i32 3, i32 %56), !dbg !10713
  br label %return, !dbg !10724

return:                                           ; preds = %for.end, %if.then10
  ret void, !dbg !10725
}

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #3

declare void @av_frame_unref(%struct.AVFrame*) #3

declare void @ff_vp3dsp_set_bounding_values(i32*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #5 !dbg !10727 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10730, metadata !1942), !dbg !10731
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10732
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !10733
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !10733
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10734
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !10735
  %sub = sub nsw i32 %1, %call, !dbg !10736
  ret i32 %sub, !dbg !10737
}

; Function Attrs: nounwind uwtable
define internal i32 @unpack_vlcs(%struct.Vp3DecodeContext* %s, %struct.GetBitContext* %gb, %struct.VLC* %table, i32 %coeff_index, i32 %plane, i32 %eob_run) #0 !dbg !10738 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4271, metadata !1942), !dbg !10741
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4271, metadata !1942), !dbg !10745
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4271, metadata !1942), !dbg !10747
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5689, metadata !1942), !dbg !10749
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5691, metadata !1942), !dbg !10750
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5693, metadata !1942), !dbg !10751
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5695, metadata !1942), !dbg !10752
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5697, metadata !1942), !dbg !10753
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5699, metadata !1942), !dbg !10754
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5701, metadata !1942), !dbg !10755
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5703, metadata !1942), !dbg !10756
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5705, metadata !1942), !dbg !10757
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5707, metadata !1942), !dbg !10758
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5709, metadata !1942), !dbg !10759
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %table.addr = alloca %struct.VLC*, align 8
  %coeff_index.addr = alloca i32, align 4
  %plane.addr = alloca i32, align 4
  %eob_run.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %token = alloca i32, align 4
  %zero_run = alloca i32, align 4
  %coeff = alloca i16, align 2
  %bits_to_get = alloca i32, align 4
  %blocks_ended = alloca i32, align 4
  %coeff_i = alloca i32, align 4
  %num_coeffs = alloca i32, align 4
  %dct_tokens = alloca i16*, align 8
  %coded_fragment_list = alloca i32*, align 8
  %all_fragments = alloca %struct.Vp3Fragment*, align 8
  %vlc_table = alloca [2 x i16]*, align 8
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !10760, metadata !1942), !dbg !10761
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10762, metadata !1942), !dbg !10763
  store %struct.VLC* %table, %struct.VLC** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %table.addr, metadata !10764, metadata !1942), !dbg !10765
  store i32 %coeff_index, i32* %coeff_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coeff_index.addr, metadata !10766, metadata !1942), !dbg !10767
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !10768, metadata !1942), !dbg !10769
  store i32 %eob_run, i32* %eob_run.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eob_run.addr, metadata !10770, metadata !1942), !dbg !10771
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10772, metadata !1942), !dbg !10773
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10774, metadata !1942), !dbg !10775
  store i32 0, i32* %j, align 4, !dbg !10775
  call void @llvm.dbg.declare(metadata i32* %token, metadata !10776, metadata !1942), !dbg !10777
  call void @llvm.dbg.declare(metadata i32* %zero_run, metadata !10778, metadata !1942), !dbg !10779
  store i32 0, i32* %zero_run, align 4, !dbg !10779
  call void @llvm.dbg.declare(metadata i16* %coeff, metadata !10780, metadata !1942), !dbg !10781
  store i16 0, i16* %coeff, align 2, !dbg !10781
  call void @llvm.dbg.declare(metadata i32* %bits_to_get, metadata !10782, metadata !1942), !dbg !10783
  call void @llvm.dbg.declare(metadata i32* %blocks_ended, metadata !10784, metadata !1942), !dbg !10785
  call void @llvm.dbg.declare(metadata i32* %coeff_i, metadata !10786, metadata !1942), !dbg !10787
  store i32 0, i32* %coeff_i, align 4, !dbg !10787
  call void @llvm.dbg.declare(metadata i32* %num_coeffs, metadata !10788, metadata !1942), !dbg !10789
  %0 = load i32, i32* %coeff_index.addr, align 4, !dbg !10790
  %idxprom = sext i32 %0 to i64, !dbg !10791
  %1 = load i32, i32* %plane.addr, align 4, !dbg !10792
  %idxprom1 = sext i32 %1 to i64, !dbg !10791
  %2 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10791
  %num_coded_frags = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %2, i32 0, i32 56, !dbg !10793
  %arrayidx = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %num_coded_frags, i64 0, i64 %idxprom1, !dbg !10791
  %arrayidx2 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !10791
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !10791
  store i32 %3, i32* %num_coeffs, align 4, !dbg !10789
  call void @llvm.dbg.declare(metadata i16** %dct_tokens, metadata !10794, metadata !1942), !dbg !10795
  %4 = load i32, i32* %coeff_index.addr, align 4, !dbg !10796
  %idxprom3 = sext i32 %4 to i64, !dbg !10797
  %5 = load i32, i32* %plane.addr, align 4, !dbg !10798
  %idxprom4 = sext i32 %5 to i64, !dbg !10797
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10797
  %dct_tokens5 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 54, !dbg !10799
  %arrayidx6 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens5, i64 0, i64 %idxprom4, !dbg !10797
  %arrayidx7 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx6, i64 0, i64 %idxprom3, !dbg !10797
  %7 = load i16*, i16** %arrayidx7, align 8, !dbg !10797
  store i16* %7, i16** %dct_tokens, align 8, !dbg !10795
  call void @llvm.dbg.declare(metadata i32** %coded_fragment_list, metadata !10800, metadata !1942), !dbg !10801
  %8 = load i32, i32* %plane.addr, align 4, !dbg !10802
  %idxprom8 = sext i32 %8 to i64, !dbg !10803
  %9 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10803
  %coded_fragment_list9 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %9, i32 0, i32 58, !dbg !10804
  %arrayidx10 = getelementptr inbounds [3 x i32*], [3 x i32*]* %coded_fragment_list9, i64 0, i64 %idxprom8, !dbg !10803
  %10 = load i32*, i32** %arrayidx10, align 8, !dbg !10803
  store i32* %10, i32** %coded_fragment_list, align 8, !dbg !10801
  call void @llvm.dbg.declare(metadata %struct.Vp3Fragment** %all_fragments, metadata !10805, metadata !1942), !dbg !10806
  %11 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10807
  %all_fragments11 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %11, i32 0, i32 41, !dbg !10808
  %12 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments11, align 8, !dbg !10808
  store %struct.Vp3Fragment* %12, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !10806
  call void @llvm.dbg.declare(metadata [2 x i16]** %vlc_table, metadata !10809, metadata !1942), !dbg !10810
  %13 = load %struct.VLC*, %struct.VLC** %table.addr, align 8, !dbg !10811
  %table12 = getelementptr inbounds %struct.VLC, %struct.VLC* %13, i32 0, i32 1, !dbg !10812
  %14 = load [2 x i16]*, [2 x i16]** %table12, align 8, !dbg !10812
  store [2 x i16]* %14, [2 x i16]** %vlc_table, align 8, !dbg !10810
  %15 = load i32, i32* %num_coeffs, align 4, !dbg !10813
  %cmp = icmp slt i32 %15, 0, !dbg !10815
  br i1 %cmp, label %if.then, label %if.end, !dbg !10816

if.then:                                          ; preds = %entry
  %16 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !10817
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %16, i32 0, i32 0, !dbg !10819
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !10819
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !10817
  %19 = load i32, i32* %coeff_index.addr, align 4, !dbg !10820
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i32 0, i32 0), i32 %19), !dbg !10821
  store i32 -1094995529, i32* %retval, align 4, !dbg !10822
  br label %return, !dbg !10822

if.end:                                           ; preds = %entry
  %20 = load i32, i32* %eob_run.addr, align 4, !dbg !10823
  %21 = load i32, i32* %num_coeffs, align 4, !dbg !10825
  %cmp13 = icmp sgt i32 %20, %21, !dbg !10826
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !10827

if.then14:                                        ; preds = %if.end
  %22 = load i32, i32* %num_coeffs, align 4, !dbg !10828
  store i32 %22, i32* %blocks_ended, align 4, !dbg !10830
  store i32 %22, i32* %coeff_i, align 4, !dbg !10831
  %23 = load i32, i32* %num_coeffs, align 4, !dbg !10832
  %24 = load i32, i32* %eob_run.addr, align 4, !dbg !10833
  %sub = sub nsw i32 %24, %23, !dbg !10833
  store i32 %sub, i32* %eob_run.addr, align 4, !dbg !10833
  br label %if.end15, !dbg !10834

if.else:                                          ; preds = %if.end
  %25 = load i32, i32* %eob_run.addr, align 4, !dbg !10835
  store i32 %25, i32* %blocks_ended, align 4, !dbg !10837
  store i32 %25, i32* %coeff_i, align 4, !dbg !10838
  store i32 0, i32* %eob_run.addr, align 4, !dbg !10839
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then14
  %26 = load i32, i32* %blocks_ended, align 4, !dbg !10840
  %tobool = icmp ne i32 %26, 0, !dbg !10840
  br i1 %tobool, label %if.then16, label %if.end19, !dbg !10842

if.then16:                                        ; preds = %if.end15
  %27 = load i32, i32* %blocks_ended, align 4, !dbg !10843
  %shl = shl i32 %27, 2, !dbg !10844
  %conv = trunc i32 %shl to i16, !dbg !10843
  %28 = load i32, i32* %j, align 4, !dbg !10845
  %inc = add nsw i32 %28, 1, !dbg !10845
  store i32 %inc, i32* %j, align 4, !dbg !10845
  %idxprom17 = sext i32 %28 to i64, !dbg !10846
  %29 = load i16*, i16** %dct_tokens, align 8, !dbg !10846
  %arrayidx18 = getelementptr inbounds i16, i16* %29, i64 %idxprom17, !dbg !10846
  store i16 %conv, i16* %arrayidx18, align 2, !dbg !10847
  br label %if.end19, !dbg !10846

if.end19:                                         ; preds = %if.then16, %if.end15
  br label %while.cond, !dbg !10848

while.cond:                                       ; preds = %if.end142, %if.end19
  %30 = load i32, i32* %coeff_i, align 4, !dbg !10849
  %31 = load i32, i32* %num_coeffs, align 4, !dbg !10851
  %cmp20 = icmp slt i32 %30, %31, !dbg !10852
  br i1 %cmp20, label %land.rhs, label %land.end, !dbg !10853

land.rhs:                                         ; preds = %while.cond
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10854
  %call = call i32 @get_bits_left(%struct.GetBitContext* %32), !dbg !10856
  %cmp22 = icmp sgt i32 %call, 0, !dbg !10857
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %33 = phi i1 [ false, %while.cond ], [ %cmp22, %land.rhs ]
  br i1 %33, label %while.body, label %while.end, !dbg !10858

while.body:                                       ; preds = %land.end
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10860
  %35 = load [2 x i16]*, [2 x i16]** %vlc_table, align 8, !dbg !10861
  store %struct.GetBitContext* %34, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10862
  store [2 x i16]* %35, [2 x i16]** %table.addr.i, align 8, !dbg !10862
  store i32 11, i32* %bits.addr.i, align 4, !dbg !10862
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !10862
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10863
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %36, i32 0, i32 2, !dbg !10864
  %37 = load i32, i32* %index.i, align 8, !dbg !10864
  store i32 %37, i32* %re_index.i, align 4, !dbg !10754
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10865
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %38, i32 0, i32 4, !dbg !10866
  %39 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !10866
  store i32 %39, i32* %re_size_plus8.i, align 4, !dbg !10756
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10867
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %40, i32 0, i32 0, !dbg !10868
  %41 = load i8*, i8** %buffer.i, align 8, !dbg !10868
  %42 = load i32, i32* %re_index.i, align 4, !dbg !10869
  %shr.i = lshr i32 %42, 3, !dbg !10870
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !10871
  %add.ptr.i = getelementptr inbounds i8, i8* %41, i64 %idx.ext.i, !dbg !10871
  %43 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !10872
  %l.i = bitcast %union.unaligned_32* %43 to i32*, !dbg !10872
  %44 = load i32, i32* %l.i, align 1, !dbg !10872
  store i32 %44, i32* %x.addr.i.i, align 4, !dbg !10873
  %45 = load i32, i32* %x.addr.i.i, align 4, !dbg !10874
  %shl.i.i = shl i32 %45, 8, !dbg !10875
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !10876
  %46 = load i32, i32* %x.addr.i.i, align 4, !dbg !10877
  %shr.i.i = lshr i32 %46, 8, !dbg !10878
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !10879
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !10880
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !10881
  %47 = load i32, i32* %x.addr.i.i, align 4, !dbg !10882
  %shr3.i.i = lshr i32 %47, 16, !dbg !10883
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !10884
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !10885
  %48 = load i32, i32* %x.addr.i.i, align 4, !dbg !10886
  %shr6.i.i = lshr i32 %48, 16, !dbg !10887
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !10888
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !10889
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !10890
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !10891
  %49 = load i32, i32* %re_index.i, align 4, !dbg !10892
  %and.i = and i32 %49, 7, !dbg !10893
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !10894
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !10895
  %50 = load i32, i32* %re_cache.i, align 4, !dbg !10896
  %51 = load i32, i32* %bits.addr.i, align 4, !dbg !10897
  %conv.i = trunc i32 %51 to i8, !dbg !10897
  %call2.i = call i32 @NEG_USR32(i32 %50, i8 signext %conv.i) #6, !dbg !10898
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !10899
  %52 = load i32, i32* %index1.i, align 4, !dbg !10900
  %idxprom.i = zext i32 %52 to i64, !dbg !10901
  %53 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10901
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %53, i64 %idxprom.i, !dbg !10901
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !10901
  %54 = load i16, i16* %arrayidx3.i, align 2, !dbg !10901
  %conv4.i = sext i16 %54 to i32, !dbg !10901
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !10902
  %55 = load i32, i32* %index1.i, align 4, !dbg !10903
  %idxprom5.i = zext i32 %55 to i64, !dbg !10904
  %56 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10904
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %56, i64 %idxprom5.i, !dbg !10904
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !10904
  %57 = load i16, i16* %arrayidx7.i, align 2, !dbg !10904
  %conv8.i = sext i16 %57 to i32, !dbg !10904
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !10905
  %58 = load i32, i32* %max_depth.addr.i, align 4, !dbg !10906
  %cmp.i = icmp sgt i32 %58, 1, !dbg !10907
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !10908

land.lhs.true.i:                                  ; preds = %while.body
  %59 = load i32, i32* %n.i, align 4, !dbg !10909
  %cmp10.i = icmp slt i32 %59, 0, !dbg !10910
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !10911

if.then.i:                                        ; preds = %land.lhs.true.i
  %60 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10912
  %61 = load i32, i32* %re_index.i, align 4, !dbg !10913
  %62 = load i32, i32* %bits.addr.i, align 4, !dbg !10914
  %add.i = add i32 %61, %62, !dbg !10915
  %cmp12.i = icmp ugt i32 %60, %add.i, !dbg !10916
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !10917

cond.true.i:                                      ; preds = %if.then.i
  %63 = load i32, i32* %re_index.i, align 4, !dbg !10918
  %64 = load i32, i32* %bits.addr.i, align 4, !dbg !10919
  %add14.i = add i32 %63, %64, !dbg !10920
  br label %cond.end.i, !dbg !10921

cond.false.i:                                     ; preds = %if.then.i
  %65 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10922
  br label %cond.end.i, !dbg !10923

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %65, %cond.false.i ], !dbg !10924
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !10925
  %66 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10926
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %66, i32 0, i32 0, !dbg !10927
  %67 = load i8*, i8** %buffer15.i, align 8, !dbg !10927
  %68 = load i32, i32* %re_index.i, align 4, !dbg !10928
  %shr16.i = lshr i32 %68, 3, !dbg !10929
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !10930
  %add.ptr18.i = getelementptr inbounds i8, i8* %67, i64 %idx.ext17.i, !dbg !10930
  %69 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !10931
  %l19.i = bitcast %union.unaligned_32* %69 to i32*, !dbg !10931
  %70 = load i32, i32* %l19.i, align 1, !dbg !10931
  store i32 %70, i32* %x.addr.i81.i, align 4, !dbg !10932
  %71 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10933
  %shl.i82.i = shl i32 %71, 8, !dbg !10934
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !10935
  %72 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10936
  %shr.i84.i = lshr i32 %72, 8, !dbg !10937
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !10938
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !10939
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !10940
  %73 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10941
  %shr3.i88.i = lshr i32 %73, 16, !dbg !10942
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !10943
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !10944
  %74 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10945
  %shr6.i91.i = lshr i32 %74, 16, !dbg !10946
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !10947
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !10948
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !10949
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !10950
  %75 = load i32, i32* %re_index.i, align 4, !dbg !10951
  %and21.i = and i32 %75, 7, !dbg !10952
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !10953
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !10954
  %76 = load i32, i32* %n.i, align 4, !dbg !10955
  %sub.i = sub nsw i32 0, %76, !dbg !10956
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !10957
  %77 = load i32, i32* %re_cache.i, align 4, !dbg !10958
  %78 = load i32, i32* %nb_bits.i, align 4, !dbg !10959
  %conv23.i = trunc i32 %78 to i8, !dbg !10959
  %call24.i = call i32 @NEG_USR32(i32 %77, i8 signext %conv23.i) #6, !dbg !10960
  %79 = load i32, i32* %code.i, align 4, !dbg !10961
  %add25.i = add i32 %call24.i, %79, !dbg !10962
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !10963
  %80 = load i32, i32* %index1.i, align 4, !dbg !10964
  %idxprom26.i = zext i32 %80 to i64, !dbg !10965
  %81 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10965
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %81, i64 %idxprom26.i, !dbg !10965
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !10965
  %82 = load i16, i16* %arrayidx28.i, align 2, !dbg !10965
  %conv29.i = sext i16 %82 to i32, !dbg !10965
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !10966
  %83 = load i32, i32* %index1.i, align 4, !dbg !10967
  %idxprom30.i = zext i32 %83 to i64, !dbg !10968
  %84 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10968
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %84, i64 %idxprom30.i, !dbg !10968
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !10968
  %85 = load i16, i16* %arrayidx32.i, align 2, !dbg !10968
  %conv33.i = sext i16 %85 to i32, !dbg !10968
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !10969
  %86 = load i32, i32* %max_depth.addr.i, align 4, !dbg !10970
  %cmp34.i = icmp sgt i32 %86, 2, !dbg !10971
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !10972

land.lhs.true36.i:                                ; preds = %cond.end.i
  %87 = load i32, i32* %n.i, align 4, !dbg !10973
  %cmp37.i = icmp slt i32 %87, 0, !dbg !10974
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !10975

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %88 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10976
  %89 = load i32, i32* %re_index.i, align 4, !dbg !10977
  %90 = load i32, i32* %nb_bits.i, align 4, !dbg !10978
  %add40.i = add i32 %89, %90, !dbg !10979
  %cmp41.i = icmp ugt i32 %88, %add40.i, !dbg !10980
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !10981

cond.true43.i:                                    ; preds = %if.then39.i
  %91 = load i32, i32* %re_index.i, align 4, !dbg !10982
  %92 = load i32, i32* %nb_bits.i, align 4, !dbg !10983
  %add44.i = add i32 %91, %92, !dbg !10984
  br label %cond.end46.i, !dbg !10985

cond.false45.i:                                   ; preds = %if.then39.i
  %93 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10986
  br label %cond.end46.i, !dbg !10987

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %93, %cond.false45.i ], !dbg !10988
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !10989
  %94 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10990
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %94, i32 0, i32 0, !dbg !10991
  %95 = load i8*, i8** %buffer48.i, align 8, !dbg !10991
  %96 = load i32, i32* %re_index.i, align 4, !dbg !10992
  %shr49.i = lshr i32 %96, 3, !dbg !10993
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !10994
  %add.ptr51.i = getelementptr inbounds i8, i8* %95, i64 %idx.ext50.i, !dbg !10994
  %97 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !10995
  %l52.i = bitcast %union.unaligned_32* %97 to i32*, !dbg !10995
  %98 = load i32, i32* %l52.i, align 1, !dbg !10995
  store i32 %98, i32* %x.addr.i96.i, align 4, !dbg !10996
  %99 = load i32, i32* %x.addr.i96.i, align 4, !dbg !10997
  %shl.i97.i = shl i32 %99, 8, !dbg !10998
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !10999
  %100 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11000
  %shr.i99.i = lshr i32 %100, 8, !dbg !11001
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !11002
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !11003
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !11004
  %101 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11005
  %shr3.i103.i = lshr i32 %101, 16, !dbg !11006
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !11007
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !11008
  %102 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11009
  %shr6.i106.i = lshr i32 %102, 16, !dbg !11010
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !11011
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !11012
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !11013
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !11014
  %103 = load i32, i32* %re_index.i, align 4, !dbg !11015
  %and54.i = and i32 %103, 7, !dbg !11016
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !11017
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !11018
  %104 = load i32, i32* %n.i, align 4, !dbg !11019
  %sub56.i = sub nsw i32 0, %104, !dbg !11020
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !11021
  %105 = load i32, i32* %re_cache.i, align 4, !dbg !11022
  %106 = load i32, i32* %nb_bits.i, align 4, !dbg !11023
  %conv57.i = trunc i32 %106 to i8, !dbg !11023
  %call58.i = call i32 @NEG_USR32(i32 %105, i8 signext %conv57.i) #6, !dbg !11024
  %107 = load i32, i32* %code.i, align 4, !dbg !11025
  %add59.i = add i32 %call58.i, %107, !dbg !11026
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !11027
  %108 = load i32, i32* %index1.i, align 4, !dbg !11028
  %idxprom60.i = zext i32 %108 to i64, !dbg !11029
  %109 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11029
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %109, i64 %idxprom60.i, !dbg !11029
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !11029
  %110 = load i16, i16* %arrayidx62.i, align 2, !dbg !11029
  %conv63.i = sext i16 %110 to i32, !dbg !11029
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !11030
  %111 = load i32, i32* %index1.i, align 4, !dbg !11031
  %idxprom64.i = zext i32 %111 to i64, !dbg !11032
  %112 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11032
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %112, i64 %idxprom64.i, !dbg !11032
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !11032
  %113 = load i16, i16* %arrayidx66.i, align 2, !dbg !11032
  %conv67.i = sext i16 %113 to i32, !dbg !11032
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !11033
  br label %if.end.i, !dbg !11034

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !11035

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %while.body
  %114 = load i32, i32* %n.i, align 4, !dbg !11036
  %115 = load i32, i32* %re_cache.i, align 4, !dbg !11037
  %shl70.i = shl i32 %115, %114, !dbg !11037
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !11037
  %116 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11038
  %117 = load i32, i32* %re_index.i, align 4, !dbg !11039
  %118 = load i32, i32* %n.i, align 4, !dbg !11040
  %add71.i = add i32 %117, %118, !dbg !11041
  %cmp72.i = icmp ugt i32 %116, %add71.i, !dbg !11042
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !11043

cond.true74.i:                                    ; preds = %if.end68.i
  %119 = load i32, i32* %re_index.i, align 4, !dbg !11044
  %120 = load i32, i32* %n.i, align 4, !dbg !11045
  %add75.i = add i32 %119, %120, !dbg !11046
  br label %get_vlc2.exit, !dbg !11047

cond.false76.i:                                   ; preds = %if.end68.i
  %121 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11048
  br label %get_vlc2.exit, !dbg !11049

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %121, %cond.false76.i ], !dbg !11050
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !11051
  %122 = load i32, i32* %re_index.i, align 4, !dbg !11052
  %123 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11053
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %123, i32 0, i32 2, !dbg !11054
  store i32 %122, i32* %index80.i, align 8, !dbg !11055
  %124 = load i32, i32* %code.i, align 4, !dbg !11056
  store i32 %124, i32* %token, align 4, !dbg !11057
  %125 = load i32, i32* %token, align 4, !dbg !11058
  %cmp25 = icmp ule i32 %125, 6, !dbg !11060
  br i1 %cmp25, label %if.then27, label %if.else66, !dbg !11061

if.then27:                                        ; preds = %get_vlc2.exit
  %126 = load i32, i32* %token, align 4, !dbg !11062
  %idxprom28 = sext i32 %126 to i64, !dbg !11064
  %arrayidx29 = getelementptr inbounds [7 x i8], [7 x i8]* @eob_run_base, i64 0, i64 %idxprom28, !dbg !11064
  %127 = load i8, i8* %arrayidx29, align 1, !dbg !11064
  %conv30 = zext i8 %127 to i32, !dbg !11064
  store i32 %conv30, i32* %eob_run.addr, align 4, !dbg !11065
  %128 = load i32, i32* %token, align 4, !dbg !11066
  %idxprom31 = sext i32 %128 to i64, !dbg !11068
  %arrayidx32 = getelementptr inbounds [7 x i8], [7 x i8]* @eob_run_get_bits, i64 0, i64 %idxprom31, !dbg !11068
  %129 = load i8, i8* %arrayidx32, align 1, !dbg !11068
  %tobool33 = icmp ne i8 %129, 0, !dbg !11068
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !11069

if.then34:                                        ; preds = %if.then27
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11070
  %131 = load i32, i32* %token, align 4, !dbg !11071
  %idxprom35 = sext i32 %131 to i64, !dbg !11072
  %arrayidx36 = getelementptr inbounds [7 x i8], [7 x i8]* @eob_run_get_bits, i64 0, i64 %idxprom35, !dbg !11072
  %132 = load i8, i8* %arrayidx36, align 1, !dbg !11072
  %conv37 = zext i8 %132 to i32, !dbg !11072
  %call38 = call i32 @get_bits(%struct.GetBitContext* %130, i32 %conv37), !dbg !11073
  %133 = load i32, i32* %eob_run.addr, align 4, !dbg !11074
  %add = add i32 %133, %call38, !dbg !11074
  store i32 %add, i32* %eob_run.addr, align 4, !dbg !11074
  br label %if.end39, !dbg !11075

if.end39:                                         ; preds = %if.then34, %if.then27
  %134 = load i32, i32* %eob_run.addr, align 4, !dbg !11076
  %tobool40 = icmp ne i32 %134, 0, !dbg !11076
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !11078

if.then41:                                        ; preds = %if.end39
  store i32 2147483647, i32* %eob_run.addr, align 4, !dbg !11079
  br label %if.end42, !dbg !11080

if.end42:                                         ; preds = %if.then41, %if.end39
  %135 = load i32, i32* %eob_run.addr, align 4, !dbg !11081
  %136 = load i32, i32* %num_coeffs, align 4, !dbg !11083
  %137 = load i32, i32* %coeff_i, align 4, !dbg !11084
  %sub43 = sub nsw i32 %136, %137, !dbg !11085
  %cmp44 = icmp sgt i32 %135, %sub43, !dbg !11086
  br i1 %cmp44, label %if.then46, label %if.else57, !dbg !11087

if.then46:                                        ; preds = %if.end42
  %138 = load i32, i32* %num_coeffs, align 4, !dbg !11088
  %139 = load i32, i32* %coeff_i, align 4, !dbg !11090
  %sub47 = sub nsw i32 %138, %139, !dbg !11091
  %shl48 = shl i32 %sub47, 2, !dbg !11092
  %conv49 = trunc i32 %shl48 to i16, !dbg !11093
  %140 = load i32, i32* %j, align 4, !dbg !11094
  %inc50 = add nsw i32 %140, 1, !dbg !11094
  store i32 %inc50, i32* %j, align 4, !dbg !11094
  %idxprom51 = sext i32 %140 to i64, !dbg !11095
  %141 = load i16*, i16** %dct_tokens, align 8, !dbg !11095
  %arrayidx52 = getelementptr inbounds i16, i16* %141, i64 %idxprom51, !dbg !11095
  store i16 %conv49, i16* %arrayidx52, align 2, !dbg !11096
  %142 = load i32, i32* %num_coeffs, align 4, !dbg !11097
  %143 = load i32, i32* %coeff_i, align 4, !dbg !11098
  %sub53 = sub nsw i32 %142, %143, !dbg !11099
  %144 = load i32, i32* %blocks_ended, align 4, !dbg !11100
  %add54 = add nsw i32 %144, %sub53, !dbg !11100
  store i32 %add54, i32* %blocks_ended, align 4, !dbg !11100
  %145 = load i32, i32* %num_coeffs, align 4, !dbg !11101
  %146 = load i32, i32* %coeff_i, align 4, !dbg !11102
  %sub55 = sub nsw i32 %145, %146, !dbg !11103
  %147 = load i32, i32* %eob_run.addr, align 4, !dbg !11104
  %sub56 = sub nsw i32 %147, %sub55, !dbg !11104
  store i32 %sub56, i32* %eob_run.addr, align 4, !dbg !11104
  %148 = load i32, i32* %num_coeffs, align 4, !dbg !11105
  store i32 %148, i32* %coeff_i, align 4, !dbg !11106
  br label %if.end65, !dbg !11107

if.else57:                                        ; preds = %if.end42
  %149 = load i32, i32* %eob_run.addr, align 4, !dbg !11108
  %shl58 = shl i32 %149, 2, !dbg !11110
  %conv59 = trunc i32 %shl58 to i16, !dbg !11111
  %150 = load i32, i32* %j, align 4, !dbg !11112
  %inc60 = add nsw i32 %150, 1, !dbg !11112
  store i32 %inc60, i32* %j, align 4, !dbg !11112
  %idxprom61 = sext i32 %150 to i64, !dbg !11113
  %151 = load i16*, i16** %dct_tokens, align 8, !dbg !11113
  %arrayidx62 = getelementptr inbounds i16, i16* %151, i64 %idxprom61, !dbg !11113
  store i16 %conv59, i16* %arrayidx62, align 2, !dbg !11114
  %152 = load i32, i32* %eob_run.addr, align 4, !dbg !11115
  %153 = load i32, i32* %blocks_ended, align 4, !dbg !11116
  %add63 = add nsw i32 %153, %152, !dbg !11116
  store i32 %add63, i32* %blocks_ended, align 4, !dbg !11116
  %154 = load i32, i32* %eob_run.addr, align 4, !dbg !11117
  %155 = load i32, i32* %coeff_i, align 4, !dbg !11118
  %add64 = add nsw i32 %155, %154, !dbg !11118
  store i32 %add64, i32* %coeff_i, align 4, !dbg !11118
  store i32 0, i32* %eob_run.addr, align 4, !dbg !11119
  br label %if.end65

if.end65:                                         ; preds = %if.else57, %if.then46
  br label %if.end142, !dbg !11120

if.else66:                                        ; preds = %get_vlc2.exit
  %156 = load i32, i32* %token, align 4, !dbg !11121
  %cmp67 = icmp sge i32 %156, 0, !dbg !11124
  br i1 %cmp67, label %if.then69, label %if.else139, !dbg !11121

if.then69:                                        ; preds = %if.else66
  %157 = load i32, i32* %token, align 4, !dbg !11125
  %idxprom70 = sext i32 %157 to i64, !dbg !11127
  %arrayidx71 = getelementptr inbounds [32 x i8], [32 x i8]* @coeff_get_bits, i64 0, i64 %idxprom70, !dbg !11127
  %158 = load i8, i8* %arrayidx71, align 1, !dbg !11127
  %conv72 = zext i8 %158 to i32, !dbg !11127
  store i32 %conv72, i32* %bits_to_get, align 4, !dbg !11128
  %159 = load i32, i32* %bits_to_get, align 4, !dbg !11129
  %tobool73 = icmp ne i32 %159, 0, !dbg !11129
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !11131

if.then74:                                        ; preds = %if.then69
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11132
  %161 = load i32, i32* %bits_to_get, align 4, !dbg !11133
  %call75 = call i32 @get_bits(%struct.GetBitContext* %160, i32 %161), !dbg !11134
  store i32 %call75, i32* %bits_to_get, align 4, !dbg !11135
  br label %if.end76, !dbg !11136

if.end76:                                         ; preds = %if.then74, %if.then69
  %162 = load i32, i32* %bits_to_get, align 4, !dbg !11137
  %idxprom77 = sext i32 %162 to i64, !dbg !11138
  %163 = load i32, i32* %token, align 4, !dbg !11139
  %idxprom78 = sext i32 %163 to i64, !dbg !11138
  %arrayidx79 = getelementptr inbounds [32 x i16*], [32 x i16*]* @coeff_tables, i64 0, i64 %idxprom78, !dbg !11138
  %164 = load i16*, i16** %arrayidx79, align 8, !dbg !11138
  %arrayidx80 = getelementptr inbounds i16, i16* %164, i64 %idxprom77, !dbg !11138
  %165 = load i16, i16* %arrayidx80, align 2, !dbg !11138
  store i16 %165, i16* %coeff, align 2, !dbg !11140
  %166 = load i32, i32* %token, align 4, !dbg !11141
  %idxprom81 = sext i32 %166 to i64, !dbg !11142
  %arrayidx82 = getelementptr inbounds [32 x i8], [32 x i8]* @zero_run_base, i64 0, i64 %idxprom81, !dbg !11142
  %167 = load i8, i8* %arrayidx82, align 1, !dbg !11142
  %conv83 = zext i8 %167 to i32, !dbg !11142
  store i32 %conv83, i32* %zero_run, align 4, !dbg !11143
  %168 = load i32, i32* %token, align 4, !dbg !11144
  %idxprom84 = sext i32 %168 to i64, !dbg !11146
  %arrayidx85 = getelementptr inbounds [32 x i8], [32 x i8]* @zero_run_get_bits, i64 0, i64 %idxprom84, !dbg !11146
  %169 = load i8, i8* %arrayidx85, align 1, !dbg !11146
  %tobool86 = icmp ne i8 %169, 0, !dbg !11146
  br i1 %tobool86, label %if.then87, label %if.end93, !dbg !11147

if.then87:                                        ; preds = %if.end76
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11148
  %171 = load i32, i32* %token, align 4, !dbg !11149
  %idxprom88 = sext i32 %171 to i64, !dbg !11150
  %arrayidx89 = getelementptr inbounds [32 x i8], [32 x i8]* @zero_run_get_bits, i64 0, i64 %idxprom88, !dbg !11150
  %172 = load i8, i8* %arrayidx89, align 1, !dbg !11150
  %conv90 = zext i8 %172 to i32, !dbg !11150
  %call91 = call i32 @get_bits(%struct.GetBitContext* %170, i32 %conv90), !dbg !11151
  %173 = load i32, i32* %zero_run, align 4, !dbg !11152
  %add92 = add i32 %173, %call91, !dbg !11152
  store i32 %add92, i32* %zero_run, align 4, !dbg !11152
  br label %if.end93, !dbg !11153

if.end93:                                         ; preds = %if.then87, %if.end76
  %174 = load i32, i32* %zero_run, align 4, !dbg !11154
  %tobool94 = icmp ne i32 %174, 0, !dbg !11154
  br i1 %tobool94, label %if.then95, label %if.else104, !dbg !11156

if.then95:                                        ; preds = %if.end93
  %175 = load i16, i16* %coeff, align 2, !dbg !11157
  %conv96 = sext i16 %175 to i32, !dbg !11159
  %mul = mul nsw i32 %conv96, 512, !dbg !11160
  %176 = load i32, i32* %zero_run, align 4, !dbg !11161
  %shl97 = shl i32 %176, 2, !dbg !11162
  %add98 = add nsw i32 %mul, %shl97, !dbg !11163
  %add99 = add nsw i32 %add98, 1, !dbg !11164
  %conv100 = trunc i32 %add99 to i16, !dbg !11165
  %177 = load i32, i32* %j, align 4, !dbg !11166
  %inc101 = add nsw i32 %177, 1, !dbg !11166
  store i32 %inc101, i32* %j, align 4, !dbg !11166
  %idxprom102 = sext i32 %177 to i64, !dbg !11167
  %178 = load i16*, i16** %dct_tokens, align 8, !dbg !11167
  %arrayidx103 = getelementptr inbounds i16, i16* %178, i64 %idxprom102, !dbg !11167
  store i16 %conv100, i16* %arrayidx103, align 2, !dbg !11168
  br label %if.end119, !dbg !11169

if.else104:                                       ; preds = %if.end93
  %179 = load i32, i32* %coeff_index.addr, align 4, !dbg !11170
  %tobool105 = icmp ne i32 %179, 0, !dbg !11170
  br i1 %tobool105, label %if.end111, label %if.then106, !dbg !11173

if.then106:                                       ; preds = %if.else104
  %180 = load i16, i16* %coeff, align 2, !dbg !11174
  %181 = load i32, i32* %coeff_i, align 4, !dbg !11175
  %idxprom107 = sext i32 %181 to i64, !dbg !11176
  %182 = load i32*, i32** %coded_fragment_list, align 8, !dbg !11176
  %arrayidx108 = getelementptr inbounds i32, i32* %182, i64 %idxprom107, !dbg !11176
  %183 = load i32, i32* %arrayidx108, align 4, !dbg !11176
  %idxprom109 = sext i32 %183 to i64, !dbg !11177
  %184 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !11177
  %arrayidx110 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %184, i64 %idxprom109, !dbg !11177
  %dc = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx110, i32 0, i32 0, !dbg !11178
  store i16 %180, i16* %dc, align 2, !dbg !11179
  br label %if.end111, !dbg !11177

if.end111:                                        ; preds = %if.then106, %if.else104
  %185 = load i16, i16* %coeff, align 2, !dbg !11180
  %conv112 = sext i16 %185 to i32, !dbg !11181
  %mul113 = mul nsw i32 %conv112, 4, !dbg !11182
  %add114 = add nsw i32 %mul113, 2, !dbg !11183
  %conv115 = trunc i32 %add114 to i16, !dbg !11184
  %186 = load i32, i32* %j, align 4, !dbg !11185
  %inc116 = add nsw i32 %186, 1, !dbg !11185
  store i32 %inc116, i32* %j, align 4, !dbg !11185
  %idxprom117 = sext i32 %186 to i64, !dbg !11186
  %187 = load i16*, i16** %dct_tokens, align 8, !dbg !11186
  %arrayidx118 = getelementptr inbounds i16, i16* %187, i64 %idxprom117, !dbg !11186
  store i16 %conv115, i16* %arrayidx118, align 2, !dbg !11187
  br label %if.end119

if.end119:                                        ; preds = %if.end111, %if.then95
  %188 = load i32, i32* %coeff_index.addr, align 4, !dbg !11188
  %189 = load i32, i32* %zero_run, align 4, !dbg !11190
  %add120 = add nsw i32 %188, %189, !dbg !11191
  %cmp121 = icmp sgt i32 %add120, 64, !dbg !11192
  br i1 %cmp121, label %if.then123, label %if.end127, !dbg !11193

if.then123:                                       ; preds = %if.end119
  %190 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11194
  %avctx124 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %190, i32 0, i32 0, !dbg !11196
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx124, align 16, !dbg !11196
  %192 = bitcast %struct.AVCodecContext* %191 to i8*, !dbg !11194
  %193 = load i32, i32* %zero_run, align 4, !dbg !11197
  %194 = load i32, i32* %coeff_index.addr, align 4, !dbg !11198
  %sub125 = sub nsw i32 64, %194, !dbg !11199
  call void (i8*, i32, i8*, ...) @av_log(i8* %192, i32 48, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i32 0, i32 0), i32 %193, i32 %sub125), !dbg !11200
  %195 = load i32, i32* %coeff_index.addr, align 4, !dbg !11201
  %sub126 = sub nsw i32 64, %195, !dbg !11202
  store i32 %sub126, i32* %zero_run, align 4, !dbg !11203
  br label %if.end127, !dbg !11204

if.end127:                                        ; preds = %if.then123, %if.end119
  %196 = load i32, i32* %coeff_index.addr, align 4, !dbg !11205
  %add128 = add nsw i32 %196, 1, !dbg !11207
  store i32 %add128, i32* %i, align 4, !dbg !11208
  br label %for.cond, !dbg !11209

for.cond:                                         ; preds = %for.inc, %if.end127
  %197 = load i32, i32* %i, align 4, !dbg !11210
  %198 = load i32, i32* %coeff_index.addr, align 4, !dbg !11213
  %199 = load i32, i32* %zero_run, align 4, !dbg !11214
  %add129 = add nsw i32 %198, %199, !dbg !11215
  %cmp130 = icmp sle i32 %197, %add129, !dbg !11216
  br i1 %cmp130, label %for.body, label %for.end, !dbg !11217

for.body:                                         ; preds = %for.cond
  %200 = load i32, i32* %i, align 4, !dbg !11218
  %idxprom132 = sext i32 %200 to i64, !dbg !11219
  %201 = load i32, i32* %plane.addr, align 4, !dbg !11220
  %idxprom133 = sext i32 %201 to i64, !dbg !11219
  %202 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11219
  %num_coded_frags134 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %202, i32 0, i32 56, !dbg !11221
  %arrayidx135 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %num_coded_frags134, i64 0, i64 %idxprom133, !dbg !11219
  %arrayidx136 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx135, i64 0, i64 %idxprom132, !dbg !11219
  %203 = load i32, i32* %arrayidx136, align 4, !dbg !11222
  %dec = add nsw i32 %203, -1, !dbg !11222
  store i32 %dec, i32* %arrayidx136, align 4, !dbg !11222
  br label %for.inc, !dbg !11219

for.inc:                                          ; preds = %for.body
  %204 = load i32, i32* %i, align 4, !dbg !11223
  %inc137 = add nsw i32 %204, 1, !dbg !11223
  store i32 %inc137, i32* %i, align 4, !dbg !11223
  br label %for.cond, !dbg !11225, !llvm.loop !11226

for.end:                                          ; preds = %for.cond
  %205 = load i32, i32* %coeff_i, align 4, !dbg !11228
  %inc138 = add nsw i32 %205, 1, !dbg !11228
  store i32 %inc138, i32* %coeff_i, align 4, !dbg !11228
  br label %if.end141, !dbg !11229

if.else139:                                       ; preds = %if.else66
  %206 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11230
  %avctx140 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %206, i32 0, i32 0, !dbg !11232
  %207 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx140, align 16, !dbg !11232
  %208 = bitcast %struct.AVCodecContext* %207 to i8*, !dbg !11230
  %209 = load i32, i32* %token, align 4, !dbg !11233
  call void (i8*, i32, i8*, ...) @av_log(i8* %208, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i32 %209), !dbg !11234
  store i32 -1, i32* %retval, align 4, !dbg !11235
  br label %return, !dbg !11235

if.end141:                                        ; preds = %for.end
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.end65
  br label %while.cond, !dbg !11236, !llvm.loop !11238

while.end:                                        ; preds = %land.end
  %210 = load i32, i32* %blocks_ended, align 4, !dbg !11239
  %211 = load i32, i32* %coeff_index.addr, align 4, !dbg !11241
  %idxprom143 = sext i32 %211 to i64, !dbg !11242
  %212 = load i32, i32* %plane.addr, align 4, !dbg !11243
  %idxprom144 = sext i32 %212 to i64, !dbg !11242
  %213 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11242
  %num_coded_frags145 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %213, i32 0, i32 56, !dbg !11244
  %arrayidx146 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %num_coded_frags145, i64 0, i64 %idxprom144, !dbg !11242
  %arrayidx147 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx146, i64 0, i64 %idxprom143, !dbg !11242
  %214 = load i32, i32* %arrayidx147, align 4, !dbg !11242
  %cmp148 = icmp sgt i32 %210, %214, !dbg !11245
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !11246

if.then150:                                       ; preds = %while.end
  %215 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11247
  %avctx151 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %215, i32 0, i32 0, !dbg !11248
  %216 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx151, align 16, !dbg !11248
  %217 = bitcast %struct.AVCodecContext* %216 to i8*, !dbg !11247
  call void (i8*, i32, i8*, ...) @av_log(i8* %217, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37, i32 0, i32 0)), !dbg !11249
  br label %if.end152, !dbg !11249

if.end152:                                        ; preds = %if.then150, %while.end
  %218 = load i32, i32* %blocks_ended, align 4, !dbg !11250
  %tobool153 = icmp ne i32 %218, 0, !dbg !11250
  br i1 %tobool153, label %if.then154, label %if.end169, !dbg !11252

if.then154:                                       ; preds = %if.end152
  %219 = load i32, i32* %coeff_index.addr, align 4, !dbg !11253
  %add155 = add nsw i32 %219, 1, !dbg !11255
  store i32 %add155, i32* %i, align 4, !dbg !11256
  br label %for.cond156, !dbg !11257

for.cond156:                                      ; preds = %for.inc166, %if.then154
  %220 = load i32, i32* %i, align 4, !dbg !11258
  %cmp157 = icmp slt i32 %220, 64, !dbg !11261
  br i1 %cmp157, label %for.body159, label %for.end168, !dbg !11262

for.body159:                                      ; preds = %for.cond156
  %221 = load i32, i32* %blocks_ended, align 4, !dbg !11263
  %222 = load i32, i32* %i, align 4, !dbg !11264
  %idxprom160 = sext i32 %222 to i64, !dbg !11265
  %223 = load i32, i32* %plane.addr, align 4, !dbg !11266
  %idxprom161 = sext i32 %223 to i64, !dbg !11265
  %224 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11265
  %num_coded_frags162 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %224, i32 0, i32 56, !dbg !11267
  %arrayidx163 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %num_coded_frags162, i64 0, i64 %idxprom161, !dbg !11265
  %arrayidx164 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx163, i64 0, i64 %idxprom160, !dbg !11265
  %225 = load i32, i32* %arrayidx164, align 4, !dbg !11268
  %sub165 = sub nsw i32 %225, %221, !dbg !11268
  store i32 %sub165, i32* %arrayidx164, align 4, !dbg !11268
  br label %for.inc166, !dbg !11265

for.inc166:                                       ; preds = %for.body159
  %226 = load i32, i32* %i, align 4, !dbg !11269
  %inc167 = add nsw i32 %226, 1, !dbg !11269
  store i32 %inc167, i32* %i, align 4, !dbg !11269
  br label %for.cond156, !dbg !11271, !llvm.loop !11272

for.end168:                                       ; preds = %for.cond156
  br label %if.end169, !dbg !11274

if.end169:                                        ; preds = %for.end168, %if.end152
  %227 = load i32, i32* %plane.addr, align 4, !dbg !11276
  %cmp170 = icmp slt i32 %227, 2, !dbg !11278
  br i1 %cmp170, label %if.then172, label %if.else179, !dbg !11279

if.then172:                                       ; preds = %if.end169
  %228 = load i16*, i16** %dct_tokens, align 8, !dbg !11280
  %229 = load i32, i32* %j, align 4, !dbg !11281
  %idx.ext = sext i32 %229 to i64, !dbg !11282
  %add.ptr = getelementptr inbounds i16, i16* %228, i64 %idx.ext, !dbg !11282
  %230 = load i32, i32* %coeff_index.addr, align 4, !dbg !11283
  %idxprom173 = sext i32 %230 to i64, !dbg !11284
  %231 = load i32, i32* %plane.addr, align 4, !dbg !11285
  %add174 = add nsw i32 %231, 1, !dbg !11286
  %idxprom175 = sext i32 %add174 to i64, !dbg !11284
  %232 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11284
  %dct_tokens176 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %232, i32 0, i32 54, !dbg !11287
  %arrayidx177 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens176, i64 0, i64 %idxprom175, !dbg !11284
  %arrayidx178 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx177, i64 0, i64 %idxprom173, !dbg !11284
  store i16* %add.ptr, i16** %arrayidx178, align 8, !dbg !11288
  br label %if.end191, !dbg !11284

if.else179:                                       ; preds = %if.end169
  %233 = load i32, i32* %coeff_index.addr, align 4, !dbg !11289
  %cmp180 = icmp slt i32 %233, 63, !dbg !11291
  br i1 %cmp180, label %if.then182, label %if.end190, !dbg !11292

if.then182:                                       ; preds = %if.else179
  %234 = load i16*, i16** %dct_tokens, align 8, !dbg !11293
  %235 = load i32, i32* %j, align 4, !dbg !11294
  %idx.ext183 = sext i32 %235 to i64, !dbg !11295
  %add.ptr184 = getelementptr inbounds i16, i16* %234, i64 %idx.ext183, !dbg !11295
  %236 = load i32, i32* %coeff_index.addr, align 4, !dbg !11296
  %add185 = add nsw i32 %236, 1, !dbg !11297
  %idxprom186 = sext i32 %add185 to i64, !dbg !11298
  %237 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11298
  %dct_tokens187 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %237, i32 0, i32 54, !dbg !11299
  %arrayidx188 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens187, i64 0, i64 0, !dbg !11298
  %arrayidx189 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx188, i64 0, i64 %idxprom186, !dbg !11298
  store i16* %add.ptr184, i16** %arrayidx189, align 8, !dbg !11300
  br label %if.end190, !dbg !11298

if.end190:                                        ; preds = %if.then182, %if.else179
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then172
  %238 = load i32, i32* %eob_run.addr, align 4, !dbg !11301
  store i32 %238, i32* %retval, align 4, !dbg !11302
  br label %return, !dbg !11302

return:                                           ; preds = %if.end191, %if.else139, %if.then
  %239 = load i32, i32* %retval, align 4, !dbg !11303
  ret i32 %239, !dbg !11303
}

; Function Attrs: nounwind uwtable
define internal void @reverse_dc_prediction(%struct.Vp3DecodeContext* %s, i32 %first_fragment, i32 %fragment_width, i32 %fragment_height) #0 !dbg !1704 {
entry:
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %first_fragment.addr = alloca i32, align 4
  %fragment_width.addr = alloca i32, align 4
  %fragment_height.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %i = alloca i32, align 4
  %predicted_dc = alloca i32, align 4
  %vl = alloca i32, align 4
  %vul = alloca i32, align 4
  %vu = alloca i32, align 4
  %vur = alloca i32, align 4
  %l = alloca i32, align 4
  %ul = alloca i32, align 4
  %u = alloca i32, align 4
  %ur = alloca i32, align 4
  %current_frame_type = alloca i32, align 4
  %last_dc = alloca [3 x i16], align 2
  %transform = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !11304, metadata !1942), !dbg !11305
  store i32 %first_fragment, i32* %first_fragment.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_fragment.addr, metadata !11306, metadata !1942), !dbg !11307
  store i32 %fragment_width, i32* %fragment_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fragment_width.addr, metadata !11308, metadata !1942), !dbg !11309
  store i32 %fragment_height, i32* %fragment_height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fragment_height.addr, metadata !11310, metadata !1942), !dbg !11311
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11312, metadata !1942), !dbg !11313
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11314, metadata !1942), !dbg !11315
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11316, metadata !1942), !dbg !11317
  %0 = load i32, i32* %first_fragment.addr, align 4, !dbg !11318
  store i32 %0, i32* %i, align 4, !dbg !11317
  call void @llvm.dbg.declare(metadata i32* %predicted_dc, metadata !11319, metadata !1942), !dbg !11320
  call void @llvm.dbg.declare(metadata i32* %vl, metadata !11321, metadata !1942), !dbg !11322
  call void @llvm.dbg.declare(metadata i32* %vul, metadata !11323, metadata !1942), !dbg !11324
  call void @llvm.dbg.declare(metadata i32* %vu, metadata !11325, metadata !1942), !dbg !11326
  call void @llvm.dbg.declare(metadata i32* %vur, metadata !11327, metadata !1942), !dbg !11328
  call void @llvm.dbg.declare(metadata i32* %l, metadata !11329, metadata !1942), !dbg !11330
  call void @llvm.dbg.declare(metadata i32* %ul, metadata !11331, metadata !1942), !dbg !11332
  call void @llvm.dbg.declare(metadata i32* %u, metadata !11333, metadata !1942), !dbg !11334
  call void @llvm.dbg.declare(metadata i32* %ur, metadata !11335, metadata !1942), !dbg !11336
  call void @llvm.dbg.declare(metadata i32* %current_frame_type, metadata !11337, metadata !1942), !dbg !11338
  call void @llvm.dbg.declare(metadata [3 x i16]* %last_dc, metadata !11339, metadata !1942), !dbg !11341
  call void @llvm.dbg.declare(metadata i32* %transform, metadata !11342, metadata !1942), !dbg !11343
  store i32 0, i32* %transform, align 4, !dbg !11343
  store i32 0, i32* %vl, align 4, !dbg !11344
  store i32 0, i32* %vur, align 4, !dbg !11345
  store i32 0, i32* %vu, align 4, !dbg !11346
  store i32 0, i32* %vul, align 4, !dbg !11347
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* %last_dc, i64 0, i64 2, !dbg !11348
  store i16 0, i16* %arrayidx, align 2, !dbg !11349
  %arrayidx1 = getelementptr inbounds [3 x i16], [3 x i16]* %last_dc, i64 0, i64 1, !dbg !11350
  store i16 0, i16* %arrayidx1, align 2, !dbg !11351
  %arrayidx2 = getelementptr inbounds [3 x i16], [3 x i16]* %last_dc, i64 0, i64 0, !dbg !11352
  store i16 0, i16* %arrayidx2, align 2, !dbg !11353
  store i32 0, i32* %y, align 4, !dbg !11354
  br label %for.cond, !dbg !11356

for.cond:                                         ; preds = %for.inc184, %entry
  %1 = load i32, i32* %y, align 4, !dbg !11357
  %2 = load i32, i32* %fragment_height.addr, align 4, !dbg !11360
  %cmp = icmp slt i32 %1, %2, !dbg !11361
  br i1 %cmp, label %for.body, label %for.end186, !dbg !11362

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !11363
  br label %for.cond3, !dbg !11366

for.cond3:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %x, align 4, !dbg !11367
  %4 = load i32, i32* %fragment_width.addr, align 4, !dbg !11370
  %cmp4 = icmp slt i32 %3, %4, !dbg !11371
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !11372

for.body5:                                        ; preds = %for.cond3
  %5 = load i32, i32* %i, align 4, !dbg !11373
  %idxprom = sext i32 %5 to i64, !dbg !11376
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11376
  %all_fragments = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 41, !dbg !11377
  %7 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments, align 8, !dbg !11377
  %arrayidx6 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %7, i64 %idxprom, !dbg !11376
  %coding_method = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx6, i32 0, i32 1, !dbg !11378
  %8 = load i8, i8* %coding_method, align 2, !dbg !11378
  %conv = zext i8 %8 to i32, !dbg !11376
  %cmp7 = icmp ne i32 %conv, 8, !dbg !11379
  br i1 %cmp7, label %if.then, label %if.end182, !dbg !11380

if.then:                                          ; preds = %for.body5
  %9 = load i32, i32* %i, align 4, !dbg !11381
  %idxprom9 = sext i32 %9 to i64, !dbg !11383
  %10 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11383
  %all_fragments10 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %10, i32 0, i32 41, !dbg !11384
  %11 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments10, align 8, !dbg !11384
  %arrayidx11 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %11, i64 %idxprom9, !dbg !11383
  %coding_method12 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx11, i32 0, i32 1, !dbg !11385
  %12 = load i8, i8* %coding_method12, align 2, !dbg !11385
  %idxprom13 = zext i8 %12 to i64, !dbg !11386
  %arrayidx14 = getelementptr inbounds [9 x i8], [9 x i8]* @reverse_dc_prediction.compatible_frame, i64 0, i64 %idxprom13, !dbg !11386
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !11386
  %conv15 = zext i8 %13 to i32, !dbg !11386
  store i32 %conv15, i32* %current_frame_type, align 4, !dbg !11387
  store i32 0, i32* %transform, align 4, !dbg !11388
  %14 = load i32, i32* %x, align 4, !dbg !11389
  %tobool = icmp ne i32 %14, 0, !dbg !11389
  br i1 %tobool, label %if.then16, label %if.end31, !dbg !11391

if.then16:                                        ; preds = %if.then
  %15 = load i32, i32* %i, align 4, !dbg !11392
  %sub = sub nsw i32 %15, 1, !dbg !11394
  store i32 %sub, i32* %l, align 4, !dbg !11395
  %16 = load i32, i32* %l, align 4, !dbg !11396
  %idxprom17 = sext i32 %16 to i64, !dbg !11397
  %17 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11397
  %all_fragments18 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %17, i32 0, i32 41, !dbg !11398
  %18 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments18, align 8, !dbg !11398
  %arrayidx19 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %18, i64 %idxprom17, !dbg !11397
  %dc = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx19, i32 0, i32 0, !dbg !11399
  %19 = load i16, i16* %dc, align 2, !dbg !11399
  %conv20 = sext i16 %19 to i32, !dbg !11397
  store i32 %conv20, i32* %vl, align 4, !dbg !11400
  %20 = load i32, i32* %l, align 4, !dbg !11401
  %idxprom21 = sext i32 %20 to i64, !dbg !11403
  %21 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11403
  %all_fragments22 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %21, i32 0, i32 41, !dbg !11404
  %22 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments22, align 8, !dbg !11404
  %arrayidx23 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %22, i64 %idxprom21, !dbg !11403
  %coding_method24 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx23, i32 0, i32 1, !dbg !11405
  %23 = load i8, i8* %coding_method24, align 2, !dbg !11405
  %idxprom25 = zext i8 %23 to i64, !dbg !11406
  %arrayidx26 = getelementptr inbounds [9 x i8], [9 x i8]* @reverse_dc_prediction.compatible_frame, i64 0, i64 %idxprom25, !dbg !11406
  %24 = load i8, i8* %arrayidx26, align 1, !dbg !11406
  %conv27 = zext i8 %24 to i32, !dbg !11406
  %25 = load i32, i32* %current_frame_type, align 4, !dbg !11407
  %cmp28 = icmp eq i32 %conv27, %25, !dbg !11408
  br i1 %cmp28, label %if.then30, label %if.end, !dbg !11409

if.then30:                                        ; preds = %if.then16
  %26 = load i32, i32* %transform, align 4, !dbg !11410
  %or = or i32 %26, 1, !dbg !11410
  store i32 %or, i32* %transform, align 4, !dbg !11410
  br label %if.end, !dbg !11411

if.end:                                           ; preds = %if.then30, %if.then16
  br label %if.end31, !dbg !11412

if.end31:                                         ; preds = %if.end, %if.then
  %27 = load i32, i32* %y, align 4, !dbg !11413
  %tobool32 = icmp ne i32 %27, 0, !dbg !11413
  br i1 %tobool32, label %if.then33, label %if.end97, !dbg !11415

if.then33:                                        ; preds = %if.end31
  %28 = load i32, i32* %i, align 4, !dbg !11416
  %29 = load i32, i32* %fragment_width.addr, align 4, !dbg !11418
  %sub34 = sub nsw i32 %28, %29, !dbg !11419
  store i32 %sub34, i32* %u, align 4, !dbg !11420
  %30 = load i32, i32* %u, align 4, !dbg !11421
  %idxprom35 = sext i32 %30 to i64, !dbg !11422
  %31 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11422
  %all_fragments36 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %31, i32 0, i32 41, !dbg !11423
  %32 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments36, align 8, !dbg !11423
  %arrayidx37 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %32, i64 %idxprom35, !dbg !11422
  %dc38 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx37, i32 0, i32 0, !dbg !11424
  %33 = load i16, i16* %dc38, align 2, !dbg !11424
  %conv39 = sext i16 %33 to i32, !dbg !11422
  store i32 %conv39, i32* %vu, align 4, !dbg !11425
  %34 = load i32, i32* %u, align 4, !dbg !11426
  %idxprom40 = sext i32 %34 to i64, !dbg !11428
  %35 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11428
  %all_fragments41 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %35, i32 0, i32 41, !dbg !11429
  %36 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments41, align 8, !dbg !11429
  %arrayidx42 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %36, i64 %idxprom40, !dbg !11428
  %coding_method43 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx42, i32 0, i32 1, !dbg !11430
  %37 = load i8, i8* %coding_method43, align 2, !dbg !11430
  %idxprom44 = zext i8 %37 to i64, !dbg !11431
  %arrayidx45 = getelementptr inbounds [9 x i8], [9 x i8]* @reverse_dc_prediction.compatible_frame, i64 0, i64 %idxprom44, !dbg !11431
  %38 = load i8, i8* %arrayidx45, align 1, !dbg !11431
  %conv46 = zext i8 %38 to i32, !dbg !11431
  %39 = load i32, i32* %current_frame_type, align 4, !dbg !11432
  %cmp47 = icmp eq i32 %conv46, %39, !dbg !11433
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !11434

if.then49:                                        ; preds = %if.then33
  %40 = load i32, i32* %transform, align 4, !dbg !11435
  %or50 = or i32 %40, 4, !dbg !11435
  store i32 %or50, i32* %transform, align 4, !dbg !11435
  br label %if.end51, !dbg !11436

if.end51:                                         ; preds = %if.then49, %if.then33
  %41 = load i32, i32* %x, align 4, !dbg !11437
  %tobool52 = icmp ne i32 %41, 0, !dbg !11437
  br i1 %tobool52, label %if.then53, label %if.end73, !dbg !11439

if.then53:                                        ; preds = %if.end51
  %42 = load i32, i32* %i, align 4, !dbg !11440
  %43 = load i32, i32* %fragment_width.addr, align 4, !dbg !11442
  %sub54 = sub nsw i32 %42, %43, !dbg !11443
  %sub55 = sub nsw i32 %sub54, 1, !dbg !11444
  store i32 %sub55, i32* %ul, align 4, !dbg !11445
  %44 = load i32, i32* %ul, align 4, !dbg !11446
  %idxprom56 = sext i32 %44 to i64, !dbg !11447
  %45 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11447
  %all_fragments57 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %45, i32 0, i32 41, !dbg !11448
  %46 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments57, align 8, !dbg !11448
  %arrayidx58 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %46, i64 %idxprom56, !dbg !11447
  %dc59 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx58, i32 0, i32 0, !dbg !11449
  %47 = load i16, i16* %dc59, align 2, !dbg !11449
  %conv60 = sext i16 %47 to i32, !dbg !11447
  store i32 %conv60, i32* %vul, align 4, !dbg !11450
  %48 = load i32, i32* %ul, align 4, !dbg !11451
  %idxprom61 = sext i32 %48 to i64, !dbg !11453
  %49 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11453
  %all_fragments62 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %49, i32 0, i32 41, !dbg !11454
  %50 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments62, align 8, !dbg !11454
  %arrayidx63 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %50, i64 %idxprom61, !dbg !11453
  %coding_method64 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx63, i32 0, i32 1, !dbg !11455
  %51 = load i8, i8* %coding_method64, align 2, !dbg !11455
  %idxprom65 = zext i8 %51 to i64, !dbg !11456
  %arrayidx66 = getelementptr inbounds [9 x i8], [9 x i8]* @reverse_dc_prediction.compatible_frame, i64 0, i64 %idxprom65, !dbg !11456
  %52 = load i8, i8* %arrayidx66, align 1, !dbg !11456
  %conv67 = zext i8 %52 to i32, !dbg !11456
  %53 = load i32, i32* %current_frame_type, align 4, !dbg !11457
  %cmp68 = icmp eq i32 %conv67, %53, !dbg !11458
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !11459

if.then70:                                        ; preds = %if.then53
  %54 = load i32, i32* %transform, align 4, !dbg !11460
  %or71 = or i32 %54, 8, !dbg !11460
  store i32 %or71, i32* %transform, align 4, !dbg !11460
  br label %if.end72, !dbg !11461

if.end72:                                         ; preds = %if.then70, %if.then53
  br label %if.end73, !dbg !11462

if.end73:                                         ; preds = %if.end72, %if.end51
  %55 = load i32, i32* %x, align 4, !dbg !11463
  %add = add nsw i32 %55, 1, !dbg !11465
  %56 = load i32, i32* %fragment_width.addr, align 4, !dbg !11466
  %cmp74 = icmp slt i32 %add, %56, !dbg !11467
  br i1 %cmp74, label %if.then76, label %if.end96, !dbg !11468

if.then76:                                        ; preds = %if.end73
  %57 = load i32, i32* %i, align 4, !dbg !11469
  %58 = load i32, i32* %fragment_width.addr, align 4, !dbg !11471
  %sub77 = sub nsw i32 %57, %58, !dbg !11472
  %add78 = add nsw i32 %sub77, 1, !dbg !11473
  store i32 %add78, i32* %ur, align 4, !dbg !11474
  %59 = load i32, i32* %ur, align 4, !dbg !11475
  %idxprom79 = sext i32 %59 to i64, !dbg !11476
  %60 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11476
  %all_fragments80 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %60, i32 0, i32 41, !dbg !11477
  %61 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments80, align 8, !dbg !11477
  %arrayidx81 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %61, i64 %idxprom79, !dbg !11476
  %dc82 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx81, i32 0, i32 0, !dbg !11478
  %62 = load i16, i16* %dc82, align 2, !dbg !11478
  %conv83 = sext i16 %62 to i32, !dbg !11476
  store i32 %conv83, i32* %vur, align 4, !dbg !11479
  %63 = load i32, i32* %ur, align 4, !dbg !11480
  %idxprom84 = sext i32 %63 to i64, !dbg !11482
  %64 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11482
  %all_fragments85 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %64, i32 0, i32 41, !dbg !11483
  %65 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments85, align 8, !dbg !11483
  %arrayidx86 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %65, i64 %idxprom84, !dbg !11482
  %coding_method87 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx86, i32 0, i32 1, !dbg !11484
  %66 = load i8, i8* %coding_method87, align 2, !dbg !11484
  %idxprom88 = zext i8 %66 to i64, !dbg !11485
  %arrayidx89 = getelementptr inbounds [9 x i8], [9 x i8]* @reverse_dc_prediction.compatible_frame, i64 0, i64 %idxprom88, !dbg !11485
  %67 = load i8, i8* %arrayidx89, align 1, !dbg !11485
  %conv90 = zext i8 %67 to i32, !dbg !11485
  %68 = load i32, i32* %current_frame_type, align 4, !dbg !11486
  %cmp91 = icmp eq i32 %conv90, %68, !dbg !11487
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !11488

if.then93:                                        ; preds = %if.then76
  %69 = load i32, i32* %transform, align 4, !dbg !11489
  %or94 = or i32 %69, 2, !dbg !11489
  store i32 %or94, i32* %transform, align 4, !dbg !11489
  br label %if.end95, !dbg !11490

if.end95:                                         ; preds = %if.then93, %if.then76
  br label %if.end96, !dbg !11491

if.end96:                                         ; preds = %if.end95, %if.end73
  br label %if.end97, !dbg !11492

if.end97:                                         ; preds = %if.end96, %if.end31
  %70 = load i32, i32* %transform, align 4, !dbg !11493
  %cmp98 = icmp eq i32 %70, 0, !dbg !11495
  br i1 %cmp98, label %if.then100, label %if.else, !dbg !11496

if.then100:                                       ; preds = %if.end97
  %71 = load i32, i32* %current_frame_type, align 4, !dbg !11497
  %idxprom101 = sext i32 %71 to i64, !dbg !11499
  %arrayidx102 = getelementptr inbounds [3 x i16], [3 x i16]* %last_dc, i64 0, i64 %idxprom101, !dbg !11499
  %72 = load i16, i16* %arrayidx102, align 2, !dbg !11499
  %conv103 = sext i16 %72 to i32, !dbg !11499
  store i32 %conv103, i32* %predicted_dc, align 4, !dbg !11500
  br label %if.end168, !dbg !11501

if.else:                                          ; preds = %if.end97
  %73 = load i32, i32* %transform, align 4, !dbg !11502
  %idxprom104 = sext i32 %73 to i64, !dbg !11504
  %arrayidx105 = getelementptr inbounds [16 x [4 x i32]], [16 x [4 x i32]]* @reverse_dc_prediction.predictor_transform, i64 0, i64 %idxprom104, !dbg !11504
  %arrayidx106 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx105, i64 0, i64 0, !dbg !11504
  %74 = load i32, i32* %arrayidx106, align 16, !dbg !11504
  %75 = load i32, i32* %vul, align 4, !dbg !11505
  %mul = mul nsw i32 %74, %75, !dbg !11506
  %76 = load i32, i32* %transform, align 4, !dbg !11507
  %idxprom107 = sext i32 %76 to i64, !dbg !11508
  %arrayidx108 = getelementptr inbounds [16 x [4 x i32]], [16 x [4 x i32]]* @reverse_dc_prediction.predictor_transform, i64 0, i64 %idxprom107, !dbg !11508
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx108, i64 0, i64 1, !dbg !11508
  %77 = load i32, i32* %arrayidx109, align 4, !dbg !11508
  %78 = load i32, i32* %vu, align 4, !dbg !11509
  %mul110 = mul nsw i32 %77, %78, !dbg !11510
  %add111 = add nsw i32 %mul, %mul110, !dbg !11511
  %79 = load i32, i32* %transform, align 4, !dbg !11512
  %idxprom112 = sext i32 %79 to i64, !dbg !11513
  %arrayidx113 = getelementptr inbounds [16 x [4 x i32]], [16 x [4 x i32]]* @reverse_dc_prediction.predictor_transform, i64 0, i64 %idxprom112, !dbg !11513
  %arrayidx114 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx113, i64 0, i64 2, !dbg !11513
  %80 = load i32, i32* %arrayidx114, align 8, !dbg !11513
  %81 = load i32, i32* %vur, align 4, !dbg !11514
  %mul115 = mul nsw i32 %80, %81, !dbg !11515
  %add116 = add nsw i32 %add111, %mul115, !dbg !11516
  %82 = load i32, i32* %transform, align 4, !dbg !11517
  %idxprom117 = sext i32 %82 to i64, !dbg !11518
  %arrayidx118 = getelementptr inbounds [16 x [4 x i32]], [16 x [4 x i32]]* @reverse_dc_prediction.predictor_transform, i64 0, i64 %idxprom117, !dbg !11518
  %arrayidx119 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx118, i64 0, i64 3, !dbg !11518
  %83 = load i32, i32* %arrayidx119, align 4, !dbg !11518
  %84 = load i32, i32* %vl, align 4, !dbg !11519
  %mul120 = mul nsw i32 %83, %84, !dbg !11520
  %add121 = add nsw i32 %add116, %mul120, !dbg !11521
  store i32 %add121, i32* %predicted_dc, align 4, !dbg !11522
  %85 = load i32, i32* %predicted_dc, align 4, !dbg !11523
  %div = sdiv i32 %85, 128, !dbg !11523
  store i32 %div, i32* %predicted_dc, align 4, !dbg !11523
  %86 = load i32, i32* %transform, align 4, !dbg !11524
  %cmp122 = icmp eq i32 %86, 15, !dbg !11526
  br i1 %cmp122, label %if.then126, label %lor.lhs.false, !dbg !11527

lor.lhs.false:                                    ; preds = %if.else
  %87 = load i32, i32* %transform, align 4, !dbg !11528
  %cmp124 = icmp eq i32 %87, 13, !dbg !11530
  br i1 %cmp124, label %if.then126, label %if.end167, !dbg !11531

if.then126:                                       ; preds = %lor.lhs.false, %if.else
  %88 = load i32, i32* %predicted_dc, align 4, !dbg !11532
  %89 = load i32, i32* %vu, align 4, !dbg !11535
  %sub127 = sub nsw i32 %88, %89, !dbg !11536
  %cmp128 = icmp sge i32 %sub127, 0, !dbg !11537
  br i1 %cmp128, label %cond.true, label %cond.false, !dbg !11538

cond.true:                                        ; preds = %if.then126
  %90 = load i32, i32* %predicted_dc, align 4, !dbg !11539
  %91 = load i32, i32* %vu, align 4, !dbg !11541
  %sub130 = sub nsw i32 %90, %91, !dbg !11542
  br label %cond.end, !dbg !11543

cond.false:                                       ; preds = %if.then126
  %92 = load i32, i32* %predicted_dc, align 4, !dbg !11544
  %93 = load i32, i32* %vu, align 4, !dbg !11546
  %sub131 = sub nsw i32 %92, %93, !dbg !11547
  %sub132 = sub nsw i32 0, %sub131, !dbg !11548
  br label %cond.end, !dbg !11549

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub130, %cond.true ], [ %sub132, %cond.false ], !dbg !11550
  %cmp133 = icmp sgt i32 %cond, 128, !dbg !11552
  br i1 %cmp133, label %if.then135, label %if.else136, !dbg !11553

if.then135:                                       ; preds = %cond.end
  %94 = load i32, i32* %vu, align 4, !dbg !11554
  store i32 %94, i32* %predicted_dc, align 4, !dbg !11555
  br label %if.end166, !dbg !11556

if.else136:                                       ; preds = %cond.end
  %95 = load i32, i32* %predicted_dc, align 4, !dbg !11557
  %96 = load i32, i32* %vl, align 4, !dbg !11559
  %sub137 = sub nsw i32 %95, %96, !dbg !11560
  %cmp138 = icmp sge i32 %sub137, 0, !dbg !11561
  br i1 %cmp138, label %cond.true140, label %cond.false142, !dbg !11562

cond.true140:                                     ; preds = %if.else136
  %97 = load i32, i32* %predicted_dc, align 4, !dbg !11563
  %98 = load i32, i32* %vl, align 4, !dbg !11565
  %sub141 = sub nsw i32 %97, %98, !dbg !11566
  br label %cond.end145, !dbg !11567

cond.false142:                                    ; preds = %if.else136
  %99 = load i32, i32* %predicted_dc, align 4, !dbg !11568
  %100 = load i32, i32* %vl, align 4, !dbg !11570
  %sub143 = sub nsw i32 %99, %100, !dbg !11571
  %sub144 = sub nsw i32 0, %sub143, !dbg !11572
  br label %cond.end145, !dbg !11573

cond.end145:                                      ; preds = %cond.false142, %cond.true140
  %cond146 = phi i32 [ %sub141, %cond.true140 ], [ %sub144, %cond.false142 ], !dbg !11574
  %cmp147 = icmp sgt i32 %cond146, 128, !dbg !11576
  br i1 %cmp147, label %if.then149, label %if.else150, !dbg !11577

if.then149:                                       ; preds = %cond.end145
  %101 = load i32, i32* %vl, align 4, !dbg !11578
  store i32 %101, i32* %predicted_dc, align 4, !dbg !11579
  br label %if.end165, !dbg !11580

if.else150:                                       ; preds = %cond.end145
  %102 = load i32, i32* %predicted_dc, align 4, !dbg !11581
  %103 = load i32, i32* %vul, align 4, !dbg !11583
  %sub151 = sub nsw i32 %102, %103, !dbg !11584
  %cmp152 = icmp sge i32 %sub151, 0, !dbg !11585
  br i1 %cmp152, label %cond.true154, label %cond.false156, !dbg !11586

cond.true154:                                     ; preds = %if.else150
  %104 = load i32, i32* %predicted_dc, align 4, !dbg !11587
  %105 = load i32, i32* %vul, align 4, !dbg !11589
  %sub155 = sub nsw i32 %104, %105, !dbg !11590
  br label %cond.end159, !dbg !11591

cond.false156:                                    ; preds = %if.else150
  %106 = load i32, i32* %predicted_dc, align 4, !dbg !11592
  %107 = load i32, i32* %vul, align 4, !dbg !11594
  %sub157 = sub nsw i32 %106, %107, !dbg !11595
  %sub158 = sub nsw i32 0, %sub157, !dbg !11596
  br label %cond.end159, !dbg !11597

cond.end159:                                      ; preds = %cond.false156, %cond.true154
  %cond160 = phi i32 [ %sub155, %cond.true154 ], [ %sub158, %cond.false156 ], !dbg !11598
  %cmp161 = icmp sgt i32 %cond160, 128, !dbg !11600
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !11601

if.then163:                                       ; preds = %cond.end159
  %108 = load i32, i32* %vul, align 4, !dbg !11602
  store i32 %108, i32* %predicted_dc, align 4, !dbg !11603
  br label %if.end164, !dbg !11604

if.end164:                                        ; preds = %if.then163, %cond.end159
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then149
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.then135
  br label %if.end167, !dbg !11605

if.end167:                                        ; preds = %if.end166, %lor.lhs.false
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.then100
  %109 = load i32, i32* %predicted_dc, align 4, !dbg !11606
  %110 = load i32, i32* %i, align 4, !dbg !11607
  %idxprom169 = sext i32 %110 to i64, !dbg !11608
  %111 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11608
  %all_fragments170 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %111, i32 0, i32 41, !dbg !11609
  %112 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments170, align 8, !dbg !11609
  %arrayidx171 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %112, i64 %idxprom169, !dbg !11608
  %dc172 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx171, i32 0, i32 0, !dbg !11610
  %113 = load i16, i16* %dc172, align 2, !dbg !11611
  %conv173 = sext i16 %113 to i32, !dbg !11611
  %add174 = add nsw i32 %conv173, %109, !dbg !11611
  %conv175 = trunc i32 %add174 to i16, !dbg !11611
  store i16 %conv175, i16* %dc172, align 2, !dbg !11611
  %114 = load i32, i32* %i, align 4, !dbg !11612
  %idxprom176 = sext i32 %114 to i64, !dbg !11613
  %115 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11613
  %all_fragments177 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %115, i32 0, i32 41, !dbg !11614
  %116 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %all_fragments177, align 8, !dbg !11614
  %arrayidx178 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %116, i64 %idxprom176, !dbg !11613
  %dc179 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %arrayidx178, i32 0, i32 0, !dbg !11615
  %117 = load i16, i16* %dc179, align 2, !dbg !11615
  %118 = load i32, i32* %current_frame_type, align 4, !dbg !11616
  %idxprom180 = sext i32 %118 to i64, !dbg !11617
  %arrayidx181 = getelementptr inbounds [3 x i16], [3 x i16]* %last_dc, i64 0, i64 %idxprom180, !dbg !11617
  store i16 %117, i16* %arrayidx181, align 2, !dbg !11618
  br label %if.end182, !dbg !11619

if.end182:                                        ; preds = %if.end168, %for.body5
  br label %for.inc, !dbg !11620

for.inc:                                          ; preds = %if.end182
  %119 = load i32, i32* %x, align 4, !dbg !11621
  %inc = add nsw i32 %119, 1, !dbg !11621
  store i32 %inc, i32* %x, align 4, !dbg !11621
  %120 = load i32, i32* %i, align 4, !dbg !11623
  %inc183 = add nsw i32 %120, 1, !dbg !11623
  store i32 %inc183, i32* %i, align 4, !dbg !11623
  br label %for.cond3, !dbg !11624, !llvm.loop !11625

for.end:                                          ; preds = %for.cond3
  br label %for.inc184, !dbg !11627

for.inc184:                                       ; preds = %for.end
  %121 = load i32, i32* %y, align 4, !dbg !11628
  %inc185 = add nsw i32 %121, 1, !dbg !11628
  store i32 %inc185, i32* %y, align 4, !dbg !11628
  br label %for.cond, !dbg !11630, !llvm.loop !11631

for.end186:                                       ; preds = %for.cond
  ret void, !dbg !11633
}

; Function Attrs: nounwind uwtable
define internal void @await_reference_row(%struct.Vp3DecodeContext* %s, %struct.Vp3Fragment* %fragment, i32 %motion_y, i32 %y) #0 !dbg !11634 {
entry:
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %fragment.addr = alloca %struct.Vp3Fragment*, align 8
  %motion_y.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ref_frame = alloca %struct.ThreadFrame*, align 8
  %ref_row = alloca i32, align 4
  %border = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !11637, metadata !1942), !dbg !11638
  store %struct.Vp3Fragment* %fragment, %struct.Vp3Fragment** %fragment.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3Fragment** %fragment.addr, metadata !11639, metadata !1942), !dbg !11640
  store i32 %motion_y, i32* %motion_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %motion_y.addr, metadata !11641, metadata !1942), !dbg !11642
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11643, metadata !1942), !dbg !11644
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame** %ref_frame, metadata !11645, metadata !1942), !dbg !11646
  call void @llvm.dbg.declare(metadata i32* %ref_row, metadata !11647, metadata !1942), !dbg !11648
  call void @llvm.dbg.declare(metadata i32* %border, metadata !11649, metadata !1942), !dbg !11650
  %0 = load i32, i32* %motion_y.addr, align 4, !dbg !11651
  %and = and i32 %0, 1, !dbg !11652
  store i32 %and, i32* %border, align 4, !dbg !11650
  %1 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %fragment.addr, align 8, !dbg !11653
  %coding_method = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %1, i32 0, i32 1, !dbg !11655
  %2 = load i8, i8* %coding_method, align 2, !dbg !11655
  %conv = zext i8 %2 to i32, !dbg !11653
  %cmp = icmp eq i32 %conv, 5, !dbg !11656
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11657

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %fragment.addr, align 8, !dbg !11658
  %coding_method2 = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %3, i32 0, i32 1, !dbg !11659
  %4 = load i8, i8* %coding_method2, align 2, !dbg !11659
  %conv3 = zext i8 %4 to i32, !dbg !11658
  %cmp4 = icmp eq i32 %conv3, 6, !dbg !11660
  br i1 %cmp4, label %if.then, label %if.else, !dbg !11661

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11663
  %golden_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 9, !dbg !11664
  store %struct.ThreadFrame* %golden_frame, %struct.ThreadFrame** %ref_frame, align 8, !dbg !11665
  br label %if.end, !dbg !11666

if.else:                                          ; preds = %lor.lhs.false
  %6 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11667
  %last_frame = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %6, i32 0, i32 10, !dbg !11668
  store %struct.ThreadFrame* %last_frame, %struct.ThreadFrame** %ref_frame, align 8, !dbg !11669
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %y.addr, align 4, !dbg !11670
  %8 = load i32, i32* %motion_y.addr, align 4, !dbg !11671
  %shr = ashr i32 %8, 1, !dbg !11672
  %add = add nsw i32 %7, %shr, !dbg !11673
  store i32 %add, i32* %ref_row, align 4, !dbg !11674
  %9 = load i32, i32* %ref_row, align 4, !dbg !11675
  %cmp6 = icmp sge i32 %9, 0, !dbg !11676
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !11677

cond.true:                                        ; preds = %if.end
  %10 = load i32, i32* %ref_row, align 4, !dbg !11678
  br label %cond.end, !dbg !11679

cond.false:                                       ; preds = %if.end
  %11 = load i32, i32* %ref_row, align 4, !dbg !11680
  %sub = sub nsw i32 0, %11, !dbg !11682
  br label %cond.end, !dbg !11683

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %sub, %cond.false ], !dbg !11684
  %12 = load i32, i32* %ref_row, align 4, !dbg !11686
  %add8 = add nsw i32 %12, 8, !dbg !11687
  %13 = load i32, i32* %border, align 4, !dbg !11688
  %add9 = add nsw i32 %add8, %13, !dbg !11689
  %cmp10 = icmp sgt i32 %cond, %add9, !dbg !11690
  br i1 %cmp10, label %cond.true12, label %cond.false20, !dbg !11691

cond.true12:                                      ; preds = %cond.end
  %14 = load i32, i32* %ref_row, align 4, !dbg !11692
  %cmp13 = icmp sge i32 %14, 0, !dbg !11694
  br i1 %cmp13, label %cond.true15, label %cond.false16, !dbg !11695

cond.true15:                                      ; preds = %cond.true12
  %15 = load i32, i32* %ref_row, align 4, !dbg !11696
  br label %cond.end18, !dbg !11698

cond.false16:                                     ; preds = %cond.true12
  %16 = load i32, i32* %ref_row, align 4, !dbg !11699
  %sub17 = sub nsw i32 0, %16, !dbg !11701
  br label %cond.end18, !dbg !11702

cond.end18:                                       ; preds = %cond.false16, %cond.true15
  %cond19 = phi i32 [ %15, %cond.true15 ], [ %sub17, %cond.false16 ], !dbg !11703
  br label %cond.end23, !dbg !11705

cond.false20:                                     ; preds = %cond.end
  %17 = load i32, i32* %ref_row, align 4, !dbg !11706
  %add21 = add nsw i32 %17, 8, !dbg !11708
  %18 = load i32, i32* %border, align 4, !dbg !11709
  %add22 = add nsw i32 %add21, %18, !dbg !11710
  br label %cond.end23, !dbg !11711

cond.end23:                                       ; preds = %cond.false20, %cond.end18
  %cond24 = phi i32 [ %cond19, %cond.end18 ], [ %add22, %cond.false20 ], !dbg !11712
  store i32 %cond24, i32* %ref_row, align 4, !dbg !11714
  %19 = load %struct.ThreadFrame*, %struct.ThreadFrame** %ref_frame, align 8, !dbg !11715
  %20 = load i32, i32* %ref_row, align 4, !dbg !11716
  call void @ff_thread_await_progress(%struct.ThreadFrame* %19, i32 %20, i32 0), !dbg !11717
  ret void, !dbg !11718
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @vp3_dequant(%struct.Vp3DecodeContext* %s, %struct.Vp3Fragment* %frag, i32 %plane, i32 %inter, i16* %block) #5 !dbg !11719 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.Vp3DecodeContext*, align 8
  %frag.addr = alloca %struct.Vp3Fragment*, align 8
  %plane.addr = alloca i32, align 4
  %inter.addr = alloca i32, align 4
  %block.addr = alloca i16*, align 8
  %dequantizer = alloca i16*, align 8
  %perm = alloca i8*, align 8
  %i = alloca i32, align 4
  %token = alloca i32, align 4
  store %struct.Vp3DecodeContext* %s, %struct.Vp3DecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3DecodeContext** %s.addr, metadata !11722, metadata !1942), !dbg !11723
  store %struct.Vp3Fragment* %frag, %struct.Vp3Fragment** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vp3Fragment** %frag.addr, metadata !11724, metadata !1942), !dbg !11725
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !11726, metadata !1942), !dbg !11727
  store i32 %inter, i32* %inter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inter.addr, metadata !11728, metadata !1942), !dbg !11729
  store i16* %block, i16** %block.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %block.addr, metadata !11730, metadata !1942), !dbg !11731
  call void @llvm.dbg.declare(metadata i16** %dequantizer, metadata !11732, metadata !1942), !dbg !11733
  %0 = load i32, i32* %plane.addr, align 4, !dbg !11734
  %idxprom = sext i32 %0 to i64, !dbg !11735
  %1 = load i32, i32* %inter.addr, align 4, !dbg !11736
  %idxprom1 = sext i32 %1 to i64, !dbg !11735
  %2 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag.addr, align 8, !dbg !11737
  %qpi = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %2, i32 0, i32 2, !dbg !11738
  %3 = load i8, i8* %qpi, align 1, !dbg !11738
  %idxprom2 = zext i8 %3 to i64, !dbg !11735
  %4 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11735
  %qmat = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %4, i32 0, i32 71, !dbg !11739
  %arrayidx = getelementptr inbounds [3 x [2 x [3 x [64 x i16]]]], [3 x [2 x [3 x [64 x i16]]]]* %qmat, i64 0, i64 %idxprom2, !dbg !11735
  %arrayidx3 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %arrayidx, i64 0, i64 %idxprom1, !dbg !11735
  %arrayidx4 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx3, i64 0, i64 %idxprom, !dbg !11735
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx4, i32 0, i32 0, !dbg !11735
  store i16* %arraydecay, i16** %dequantizer, align 8, !dbg !11733
  call void @llvm.dbg.declare(metadata i8** %perm, metadata !11740, metadata !1942), !dbg !11741
  %5 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11742
  %idct_scantable = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %5, i32 0, i32 14, !dbg !11743
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %idct_scantable, i32 0, i32 0, !dbg !11742
  store i8* %arraydecay5, i8** %perm, align 8, !dbg !11741
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11744, metadata !1942), !dbg !11745
  store i32 0, i32* %i, align 4, !dbg !11745
  br label %do.body, !dbg !11746, !llvm.loop !11747

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i32* %token, metadata !11748, metadata !1942), !dbg !11750
  %6 = load i32, i32* %i, align 4, !dbg !11751
  %idxprom6 = sext i32 %6 to i64, !dbg !11752
  %7 = load i32, i32* %plane.addr, align 4, !dbg !11753
  %idxprom7 = sext i32 %7 to i64, !dbg !11752
  %8 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11752
  %dct_tokens = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %8, i32 0, i32 54, !dbg !11754
  %arrayidx8 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens, i64 0, i64 %idxprom7, !dbg !11752
  %arrayidx9 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !11752
  %9 = load i16*, i16** %arrayidx9, align 8, !dbg !11752
  %10 = load i16, i16* %9, align 2, !dbg !11755
  %conv = sext i16 %10 to i32, !dbg !11755
  store i32 %conv, i32* %token, align 4, !dbg !11750
  %11 = load i32, i32* %token, align 4, !dbg !11756
  %and = and i32 %11, 3, !dbg !11757
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
    i32 2, label %sw.bb46
  ], !dbg !11758

sw.bb:                                            ; preds = %do.body
  %12 = load i32, i32* %token, align 4, !dbg !11759
  %dec = add nsw i32 %12, -1, !dbg !11759
  store i32 %dec, i32* %token, align 4, !dbg !11759
  %cmp = icmp slt i32 %dec, 4, !dbg !11762
  br i1 %cmp, label %if.then, label %if.else, !dbg !11763

if.then:                                          ; preds = %sw.bb
  %13 = load i32, i32* %i, align 4, !dbg !11764
  %idxprom11 = sext i32 %13 to i64, !dbg !11765
  %14 = load i32, i32* %plane.addr, align 4, !dbg !11766
  %idxprom12 = sext i32 %14 to i64, !dbg !11765
  %15 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11765
  %dct_tokens13 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %15, i32 0, i32 54, !dbg !11767
  %arrayidx14 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens13, i64 0, i64 %idxprom12, !dbg !11765
  %arrayidx15 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx14, i64 0, i64 %idxprom11, !dbg !11765
  %16 = load i16*, i16** %arrayidx15, align 8, !dbg !11768
  %incdec.ptr = getelementptr inbounds i16, i16* %16, i32 1, !dbg !11768
  store i16* %incdec.ptr, i16** %arrayidx15, align 8, !dbg !11768
  br label %if.end, !dbg !11765

if.else:                                          ; preds = %sw.bb
  %17 = load i32, i32* %token, align 4, !dbg !11769
  %and16 = and i32 %17, -4, !dbg !11770
  %conv17 = trunc i32 %and16 to i16, !dbg !11769
  %18 = load i32, i32* %i, align 4, !dbg !11771
  %idxprom18 = sext i32 %18 to i64, !dbg !11772
  %19 = load i32, i32* %plane.addr, align 4, !dbg !11773
  %idxprom19 = sext i32 %19 to i64, !dbg !11772
  %20 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11772
  %dct_tokens20 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %20, i32 0, i32 54, !dbg !11774
  %arrayidx21 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens20, i64 0, i64 %idxprom19, !dbg !11772
  %arrayidx22 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !11772
  %21 = load i16*, i16** %arrayidx22, align 8, !dbg !11772
  store i16 %conv17, i16* %21, align 2, !dbg !11775
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %end, !dbg !11776

sw.bb23:                                          ; preds = %do.body
  %22 = load i32, i32* %i, align 4, !dbg !11777
  %idxprom24 = sext i32 %22 to i64, !dbg !11778
  %23 = load i32, i32* %plane.addr, align 4, !dbg !11779
  %idxprom25 = sext i32 %23 to i64, !dbg !11778
  %24 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11778
  %dct_tokens26 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %24, i32 0, i32 54, !dbg !11780
  %arrayidx27 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens26, i64 0, i64 %idxprom25, !dbg !11778
  %arrayidx28 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !11778
  %25 = load i16*, i16** %arrayidx28, align 8, !dbg !11781
  %incdec.ptr29 = getelementptr inbounds i16, i16* %25, i32 1, !dbg !11781
  store i16* %incdec.ptr29, i16** %arrayidx28, align 8, !dbg !11781
  %26 = load i32, i32* %token, align 4, !dbg !11782
  %shr = ashr i32 %26, 2, !dbg !11783
  %and30 = and i32 %shr, 127, !dbg !11784
  %27 = load i32, i32* %i, align 4, !dbg !11785
  %add = add nsw i32 %27, %and30, !dbg !11785
  store i32 %add, i32* %i, align 4, !dbg !11785
  %28 = load i32, i32* %i, align 4, !dbg !11786
  %cmp31 = icmp sgt i32 %28, 63, !dbg !11788
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !11789

if.then33:                                        ; preds = %sw.bb23
  %29 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11790
  %avctx = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %29, i32 0, i32 0, !dbg !11792
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !11792
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !11790
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i32 0, i32 0)), !dbg !11793
  %32 = load i32, i32* %i, align 4, !dbg !11794
  store i32 %32, i32* %retval, align 4, !dbg !11795
  br label %return, !dbg !11795

if.end34:                                         ; preds = %sw.bb23
  %33 = load i32, i32* %token, align 4, !dbg !11796
  %shr35 = ashr i32 %33, 9, !dbg !11797
  %34 = load i32, i32* %i, align 4, !dbg !11798
  %idxprom36 = sext i32 %34 to i64, !dbg !11799
  %35 = load i8*, i8** %perm, align 8, !dbg !11799
  %arrayidx37 = getelementptr inbounds i8, i8* %35, i64 %idxprom36, !dbg !11799
  %36 = load i8, i8* %arrayidx37, align 1, !dbg !11799
  %idxprom38 = zext i8 %36 to i64, !dbg !11800
  %37 = load i16*, i16** %dequantizer, align 8, !dbg !11800
  %arrayidx39 = getelementptr inbounds i16, i16* %37, i64 %idxprom38, !dbg !11800
  %38 = load i16, i16* %arrayidx39, align 2, !dbg !11800
  %conv40 = sext i16 %38 to i32, !dbg !11800
  %mul = mul nsw i32 %shr35, %conv40, !dbg !11801
  %conv41 = trunc i32 %mul to i16, !dbg !11802
  %39 = load i32, i32* %i, align 4, !dbg !11803
  %idxprom42 = sext i32 %39 to i64, !dbg !11804
  %40 = load i8*, i8** %perm, align 8, !dbg !11804
  %arrayidx43 = getelementptr inbounds i8, i8* %40, i64 %idxprom42, !dbg !11804
  %41 = load i8, i8* %arrayidx43, align 1, !dbg !11804
  %idxprom44 = zext i8 %41 to i64, !dbg !11805
  %42 = load i16*, i16** %block.addr, align 8, !dbg !11805
  %arrayidx45 = getelementptr inbounds i16, i16* %42, i64 %idxprom44, !dbg !11805
  store i16 %conv41, i16* %arrayidx45, align 2, !dbg !11806
  %43 = load i32, i32* %i, align 4, !dbg !11807
  %inc = add nsw i32 %43, 1, !dbg !11807
  store i32 %inc, i32* %i, align 4, !dbg !11807
  br label %sw.epilog, !dbg !11808

sw.bb46:                                          ; preds = %do.body
  %44 = load i32, i32* %token, align 4, !dbg !11809
  %shr47 = ashr i32 %44, 2, !dbg !11810
  %45 = load i32, i32* %i, align 4, !dbg !11811
  %idxprom48 = sext i32 %45 to i64, !dbg !11812
  %46 = load i8*, i8** %perm, align 8, !dbg !11812
  %arrayidx49 = getelementptr inbounds i8, i8* %46, i64 %idxprom48, !dbg !11812
  %47 = load i8, i8* %arrayidx49, align 1, !dbg !11812
  %idxprom50 = zext i8 %47 to i64, !dbg !11813
  %48 = load i16*, i16** %dequantizer, align 8, !dbg !11813
  %arrayidx51 = getelementptr inbounds i16, i16* %48, i64 %idxprom50, !dbg !11813
  %49 = load i16, i16* %arrayidx51, align 2, !dbg !11813
  %conv52 = sext i16 %49 to i32, !dbg !11813
  %mul53 = mul nsw i32 %shr47, %conv52, !dbg !11814
  %conv54 = trunc i32 %mul53 to i16, !dbg !11815
  %50 = load i32, i32* %i, align 4, !dbg !11816
  %idxprom55 = sext i32 %50 to i64, !dbg !11817
  %51 = load i8*, i8** %perm, align 8, !dbg !11817
  %arrayidx56 = getelementptr inbounds i8, i8* %51, i64 %idxprom55, !dbg !11817
  %52 = load i8, i8* %arrayidx56, align 1, !dbg !11817
  %idxprom57 = zext i8 %52 to i64, !dbg !11818
  %53 = load i16*, i16** %block.addr, align 8, !dbg !11818
  %arrayidx58 = getelementptr inbounds i16, i16* %53, i64 %idxprom57, !dbg !11818
  store i16 %conv54, i16* %arrayidx58, align 2, !dbg !11819
  %54 = load i32, i32* %i, align 4, !dbg !11820
  %inc59 = add nsw i32 %54, 1, !dbg !11820
  store i32 %inc59, i32* %i, align 4, !dbg !11820
  %idxprom60 = sext i32 %54 to i64, !dbg !11821
  %55 = load i32, i32* %plane.addr, align 4, !dbg !11822
  %idxprom61 = sext i32 %55 to i64, !dbg !11821
  %56 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11821
  %dct_tokens62 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %56, i32 0, i32 54, !dbg !11823
  %arrayidx63 = getelementptr inbounds [3 x [64 x i16*]], [3 x [64 x i16*]]* %dct_tokens62, i64 0, i64 %idxprom61, !dbg !11821
  %arrayidx64 = getelementptr inbounds [64 x i16*], [64 x i16*]* %arrayidx63, i64 0, i64 %idxprom60, !dbg !11821
  %57 = load i16*, i16** %arrayidx64, align 8, !dbg !11824
  %incdec.ptr65 = getelementptr inbounds i16, i16* %57, i32 1, !dbg !11824
  store i16* %incdec.ptr65, i16** %arrayidx64, align 8, !dbg !11824
  br label %sw.epilog, !dbg !11825

sw.default:                                       ; preds = %do.body
  %58 = load i32, i32* %i, align 4, !dbg !11826
  store i32 %58, i32* %retval, align 4, !dbg !11827
  br label %return, !dbg !11827

sw.epilog:                                        ; preds = %sw.bb46, %if.end34
  br label %do.cond, !dbg !11828

do.cond:                                          ; preds = %sw.epilog
  %59 = load i32, i32* %i, align 4, !dbg !11829
  %cmp66 = icmp slt i32 %59, 64, !dbg !11831
  br i1 %cmp66, label %do.body, label %do.end, !dbg !11832, !llvm.loop !11747

do.end:                                           ; preds = %do.cond
  %60 = load i32, i32* %i, align 4, !dbg !11833
  %dec68 = add nsw i32 %60, -1, !dbg !11833
  store i32 %dec68, i32* %i, align 4, !dbg !11833
  br label %end, !dbg !11834

end:                                              ; preds = %do.end, %if.end
  %61 = load %struct.Vp3Fragment*, %struct.Vp3Fragment** %frag.addr, align 8, !dbg !11835
  %dc = getelementptr inbounds %struct.Vp3Fragment, %struct.Vp3Fragment* %61, i32 0, i32 0, !dbg !11836
  %62 = load i16, i16* %dc, align 2, !dbg !11836
  %conv69 = sext i16 %62 to i32, !dbg !11835
  %63 = load i32, i32* %plane.addr, align 4, !dbg !11837
  %idxprom70 = sext i32 %63 to i64, !dbg !11838
  %64 = load i32, i32* %inter.addr, align 4, !dbg !11839
  %idxprom71 = sext i32 %64 to i64, !dbg !11838
  %65 = load %struct.Vp3DecodeContext*, %struct.Vp3DecodeContext** %s.addr, align 8, !dbg !11838
  %qmat72 = getelementptr inbounds %struct.Vp3DecodeContext, %struct.Vp3DecodeContext* %65, i32 0, i32 71, !dbg !11840
  %arrayidx73 = getelementptr inbounds [3 x [2 x [3 x [64 x i16]]]], [3 x [2 x [3 x [64 x i16]]]]* %qmat72, i64 0, i64 0, !dbg !11838
  %arrayidx74 = getelementptr inbounds [2 x [3 x [64 x i16]]], [2 x [3 x [64 x i16]]]* %arrayidx73, i64 0, i64 %idxprom71, !dbg !11838
  %arrayidx75 = getelementptr inbounds [3 x [64 x i16]], [3 x [64 x i16]]* %arrayidx74, i64 0, i64 %idxprom70, !dbg !11838
  %arrayidx76 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx75, i64 0, i64 0, !dbg !11838
  %66 = load i16, i16* %arrayidx76, align 16, !dbg !11838
  %conv77 = sext i16 %66 to i32, !dbg !11838
  %mul78 = mul nsw i32 %conv69, %conv77, !dbg !11841
  %conv79 = trunc i32 %mul78 to i16, !dbg !11835
  %67 = load i16*, i16** %block.addr, align 8, !dbg !11842
  %arrayidx80 = getelementptr inbounds i16, i16* %67, i64 0, !dbg !11842
  store i16 %conv79, i16* %arrayidx80, align 2, !dbg !11843
  %68 = load i32, i32* %i, align 4, !dbg !11844
  store i32 %68, i32* %retval, align 4, !dbg !11845
  br label %return, !dbg !11845

return:                                           ; preds = %end, %sw.default, %if.then33
  %69 = load i32, i32* %retval, align 4, !dbg !11846
  ret i32 %69, !dbg !11846
}

declare void @ff_thread_await_progress(%struct.ThreadFrame*, i32, i32) #3

declare void @ff_free_vlc(%struct.VLC*) #3

declare void @ff_hpeldsp_init(%struct.HpelDSPContext*, i32) #3

declare void @ff_videodsp_init(%struct.VideoDSPContext*, i32) #3

declare void @ff_vp3dsp_init(%struct.VP3DSPContext*, i32) #3

declare i32 @av_pix_fmt_get_chroma_sub_sample(i32, i32*, i32*) #3

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1937, !1938}
!llvm.ident = !{!1939}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !887, globals: !902)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vp3.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !{!888, !890, !891, !892, !900}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64, align: 64)
!889 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!890 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!891 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64, align: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !895, line: 221, size: 32, align: 8, elements: !896)
!895 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!896 = !{!897}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !894, file: !895, line: 221, baseType: !898, size: 32, align: 32)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !899, line: 51, baseType: !891)
!899 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !899, line: 48, baseType: !901)
!901 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!902 = !{!903, !1631, !1632, !1637, !1639, !1643, !1649, !1653, !1657, !1658, !1662, !1669, !1673, !1674, !1675, !1676, !1677, !1680, !1681, !1682, !1683, !1685, !1687, !1690, !1692, !1694, !1698, !1699, !1700, !1701, !1702, !1703, !1902, !1907, !1909, !1912, !1913, !1914, !1915, !1916, !1919, !1920, !1921, !1922, !1923, !1927, !1931, !1934}
!903 = distinct !DIGlobalVariable(name: "ff_theora_decoder", scope: !0, file: !904, line: 2578, type: !905, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_theora_decoder)
!904 = !DIFile(filename: "libavcodec/vp3.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !907)
!907 = !{!908, !911, !912, !913, !914, !915, !924, !927, !930, !933, !938, !939, !981, !989, !990, !991, !993, !1546, !1552, !1560, !1564, !1565, !1602, !1606, !1610, !1611, !1615, !1619, !1620, !1624, !1625, !1626}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !906, file: !14, line: 3475, baseType: !909, size: 64, align: 64)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64, align: 64)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !906, file: !14, line: 3480, baseType: !909, size: 64, align: 64, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !906, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !906, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !906, file: !14, line: 3487, baseType: !890, size: 32, align: 32, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !906, file: !14, line: 3488, baseType: !916, size: 64, align: 64, offset: 256)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !919, line: 61, baseType: !920)
!919 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !919, line: 58, size: 64, align: 32, elements: !921)
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !920, file: !919, line: 59, baseType: !890, size: 32, align: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !920, file: !919, line: 60, baseType: !890, size: 32, align: 32, offset: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !906, file: !14, line: 3489, baseType: !925, size: 64, align: 64, offset: 320)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !906, file: !14, line: 3490, baseType: !928, size: 64, align: 64, offset: 384)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64, align: 64)
!929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !906, file: !14, line: 3491, baseType: !931, size: 64, align: 64, offset: 448)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !906, file: !14, line: 3492, baseType: !934, size: 64, align: 64, offset: 512)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64, align: 64)
!935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !936)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !899, line: 55, baseType: !937)
!937 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !906, file: !14, line: 3493, baseType: !900, size: 8, align: 8, offset: 576)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !906, file: !14, line: 3494, baseType: !940, size: 64, align: 64, offset: 640)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !944)
!944 = !{!945, !946, !951, !955, !956, !957, !958, !962, !968, !970, !974}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !943, file: !691, line: 72, baseType: !909, size: 64, align: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !943, file: !691, line: 78, baseType: !947, size: 64, align: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64, align: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{!909, !950}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !943, file: !691, line: 85, baseType: !952, size: 64, align: 64, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64, align: 64)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !943, file: !691, line: 93, baseType: !890, size: 32, align: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !943, file: !691, line: 99, baseType: !890, size: 32, align: 32, offset: 224)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !943, file: !691, line: 108, baseType: !890, size: 32, align: 32, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !943, file: !691, line: 113, baseType: !959, size: 64, align: 64, offset: 320)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!950, !950, !950}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !943, file: !691, line: 123, baseType: !963, size: 64, align: 64, offset: 384)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64, align: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!966, !966}
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !943, file: !691, line: 130, baseType: !969, size: 32, align: 32, offset: 448)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !943, file: !691, line: 136, baseType: !971, size: 64, align: 64, offset: 512)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!969, !950}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !943, file: !691, line: 142, baseType: !975, size: 64, align: 64, offset: 576)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!890, !978, !950, !909, !890}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64, align: 64)
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !906, file: !14, line: 3495, baseType: !982, size: 64, align: 64, offset: 704)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !986)
!986 = !{!987, !988}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !985, file: !14, line: 3402, baseType: !890, size: 32, align: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !985, file: !14, line: 3403, baseType: !909, size: 64, align: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !906, file: !14, line: 3507, baseType: !909, size: 64, align: 64, offset: 768)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !906, file: !14, line: 3516, baseType: !890, size: 32, align: 32, offset: 832)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !906, file: !14, line: 3517, baseType: !992, size: 64, align: 64, offset: 896)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64, align: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !906, file: !14, line: 3527, baseType: !994, size: 64, align: 64, offset: 960)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!890, !997}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1007, !1008, !1009, !1010, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1293, !1297, !1298, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1484, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !999, file: !14, line: 1561, baseType: !940, size: 64, align: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !999, file: !14, line: 1562, baseType: !890, size: 32, align: 32, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !999, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !999, file: !14, line: 1565, baseType: !1005, size: 64, align: 64, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !999, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !999, file: !14, line: 1581, baseType: !891, size: 32, align: 32, offset: 224)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !999, file: !14, line: 1583, baseType: !950, size: 64, align: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !999, file: !14, line: 1591, baseType: !1011, size: 64, align: 64, offset: 320)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1013, line: 129, size: 1664, align: 64, elements: !1014)
!1013 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1014 = !{!1015, !1016, !1017, !1018, !1119, !1140, !1141, !1170, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1012, file: !1013, line: 136, baseType: !890, size: 32, align: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1012, file: !1013, line: 151, baseType: !890, size: 32, align: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1012, file: !1013, line: 157, baseType: !890, size: 32, align: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1012, file: !1013, line: 159, baseType: !1019, size: 64, align: 64, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1022)
!1022 = !{!1023, !1028, !1030, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1071, !1073, !1074, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1107, !1108, !1109, !1110, !1111, !1112, !1115, !1116, !1117, !1118}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1021, file: !722, line: 282, baseType: !1024, size: 512, align: 64)
!1024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 512, align: 64, elements: !1026)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64, align: 64)
!1026 = !{!1027}
!1027 = !DISubrange(count: 8)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1021, file: !722, line: 299, baseType: !1029, size: 256, align: 32, offset: 512)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 256, align: 32, elements: !1026)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1021, file: !722, line: 315, baseType: !1031, size: 64, align: 64, offset: 768)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1021, file: !722, line: 326, baseType: !890, size: 32, align: 32, offset: 832)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1021, file: !722, line: 326, baseType: !890, size: 32, align: 32, offset: 864)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1021, file: !722, line: 334, baseType: !890, size: 32, align: 32, offset: 896)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1021, file: !722, line: 341, baseType: !890, size: 32, align: 32, offset: 928)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1021, file: !722, line: 346, baseType: !890, size: 32, align: 32, offset: 960)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1021, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1021, file: !722, line: 356, baseType: !918, size: 64, align: 32, offset: 1024)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1021, file: !722, line: 361, baseType: !1040, size: 64, align: 64, offset: 1088)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1041, line: 197, baseType: !1042)
!1041 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1042 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1021, file: !722, line: 369, baseType: !1040, size: 64, align: 64, offset: 1152)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1021, file: !722, line: 377, baseType: !1040, size: 64, align: 64, offset: 1216)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1021, file: !722, line: 382, baseType: !890, size: 32, align: 32, offset: 1280)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1021, file: !722, line: 386, baseType: !890, size: 32, align: 32, offset: 1312)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1021, file: !722, line: 391, baseType: !890, size: 32, align: 32, offset: 1344)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1021, file: !722, line: 396, baseType: !950, size: 64, align: 64, offset: 1408)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1021, file: !722, line: 403, baseType: !1050, size: 512, align: 64, offset: 1472)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 512, align: 64, elements: !1026)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1021, file: !722, line: 410, baseType: !890, size: 32, align: 32, offset: 1984)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1021, file: !722, line: 415, baseType: !890, size: 32, align: 32, offset: 2016)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1021, file: !722, line: 420, baseType: !890, size: 32, align: 32, offset: 2048)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1021, file: !722, line: 425, baseType: !890, size: 32, align: 32, offset: 2080)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1021, file: !722, line: 435, baseType: !1040, size: 64, align: 64, offset: 2112)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1021, file: !722, line: 440, baseType: !890, size: 32, align: 32, offset: 2176)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1021, file: !722, line: 445, baseType: !936, size: 64, align: 64, offset: 2240)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1021, file: !722, line: 459, baseType: !1059, size: 512, align: 64, offset: 2304)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1060, size: 512, align: 64, elements: !1026)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1062, line: 94, baseType: !1063)
!1062 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1062, line: 81, size: 192, align: 64, elements: !1064)
!1064 = !{!1065, !1069, !1070}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1063, file: !1062, line: 82, baseType: !1066, size: 64, align: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1062, line: 73, baseType: !1068)
!1068 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1062, line: 73, flags: DIFlagFwdDecl)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1063, file: !1062, line: 89, baseType: !1025, size: 64, align: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1063, file: !1062, line: 93, baseType: !890, size: 32, align: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1021, file: !722, line: 473, baseType: !1072, size: 64, align: 64, offset: 2816)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1021, file: !722, line: 477, baseType: !890, size: 32, align: 32, offset: 2880)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1021, file: !722, line: 479, baseType: !1075, size: 64, align: 64, offset: 2944)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1079)
!1079 = !{!1080, !1081, !1082, !1083, !1088}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1078, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1078, file: !722, line: 203, baseType: !1025, size: 64, align: 64, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1078, file: !722, line: 204, baseType: !890, size: 32, align: 32, offset: 128)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1078, file: !722, line: 205, baseType: !1084, size: 64, align: 64, offset: 192)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1086, line: 86, baseType: !1087)
!1086 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1087 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1086, line: 86, flags: DIFlagFwdDecl)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1078, file: !722, line: 206, baseType: !1060, size: 64, align: 64, offset: 256)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1021, file: !722, line: 480, baseType: !890, size: 32, align: 32, offset: 3008)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1021, file: !722, line: 505, baseType: !890, size: 32, align: 32, offset: 3040)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1021, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1021, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1021, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1021, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1021, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1021, file: !722, line: 532, baseType: !1040, size: 64, align: 64, offset: 3264)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1021, file: !722, line: 539, baseType: !1040, size: 64, align: 64, offset: 3328)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1021, file: !722, line: 547, baseType: !1040, size: 64, align: 64, offset: 3392)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1021, file: !722, line: 554, baseType: !1084, size: 64, align: 64, offset: 3456)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1021, file: !722, line: 563, baseType: !890, size: 32, align: 32, offset: 3520)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1021, file: !722, line: 572, baseType: !890, size: 32, align: 32, offset: 3552)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1021, file: !722, line: 581, baseType: !890, size: 32, align: 32, offset: 3584)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1021, file: !722, line: 588, baseType: !1104, size: 64, align: 64, offset: 3648)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1041, line: 194, baseType: !1106)
!1106 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1021, file: !722, line: 593, baseType: !890, size: 32, align: 32, offset: 3712)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1021, file: !722, line: 596, baseType: !890, size: 32, align: 32, offset: 3744)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1021, file: !722, line: 599, baseType: !1060, size: 64, align: 64, offset: 3776)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1021, file: !722, line: 605, baseType: !1060, size: 64, align: 64, offset: 3840)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1021, file: !722, line: 616, baseType: !1060, size: 64, align: 64, offset: 3904)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1021, file: !722, line: 626, baseType: !1113, size: 64, align: 64, offset: 3968)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1114, line: 216, baseType: !937)
!1114 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1021, file: !722, line: 627, baseType: !1113, size: 64, align: 64, offset: 4032)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1021, file: !722, line: 628, baseType: !1113, size: 64, align: 64, offset: 4096)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1021, file: !722, line: 629, baseType: !1113, size: 64, align: 64, offset: 4160)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1021, file: !722, line: 645, baseType: !1060, size: 64, align: 64, offset: 4224)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1012, file: !1013, line: 161, baseType: !1120, size: 64, align: 64, offset: 192)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1013, line: 117, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1013, line: 100, size: 832, align: 64, elements: !1123)
!1123 = !{!1124, !1131, !1132, !1133, !1134, !1135, !1137, !1138, !1139}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1122, file: !1013, line: 105, baseType: !1125, size: 256, align: 64)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 256, align: 64, elements: !1129)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64, align: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1062, line: 238, baseType: !1128)
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1062, line: 238, flags: DIFlagFwdDecl)
!1129 = !{!1130}
!1130 = !DISubrange(count: 4)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1122, file: !1013, line: 110, baseType: !890, size: 32, align: 32, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1122, file: !1013, line: 111, baseType: !890, size: 32, align: 32, offset: 288)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1122, file: !1013, line: 111, baseType: !890, size: 32, align: 32, offset: 320)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1122, file: !1013, line: 112, baseType: !1029, size: 256, align: 32, offset: 352)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1122, file: !1013, line: 113, baseType: !1136, size: 128, align: 32, offset: 608)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 128, align: 32, elements: !1129)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1122, file: !1013, line: 114, baseType: !890, size: 32, align: 32, offset: 736)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1122, file: !1013, line: 115, baseType: !890, size: 32, align: 32, offset: 768)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1122, file: !1013, line: 116, baseType: !890, size: 32, align: 32, offset: 800)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1012, file: !1013, line: 163, baseType: !950, size: 64, align: 64, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1012, file: !1013, line: 165, baseType: !1142, size: 128, align: 64, offset: 320)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1013, line: 122, baseType: !1143)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1013, line: 119, size: 128, align: 64, elements: !1144)
!1144 = !{!1145, !1169}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1143, file: !1013, line: 120, baseType: !1146, size: 64, align: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1165, !1166, !1167, !1168}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1148, file: !14, line: 1451, baseType: !1060, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1148, file: !14, line: 1461, baseType: !1040, size: 64, align: 64, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1148, file: !14, line: 1467, baseType: !1040, size: 64, align: 64, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1148, file: !14, line: 1468, baseType: !1025, size: 64, align: 64, offset: 192)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1148, file: !14, line: 1469, baseType: !890, size: 32, align: 32, offset: 256)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1148, file: !14, line: 1470, baseType: !890, size: 32, align: 32, offset: 288)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1148, file: !14, line: 1474, baseType: !890, size: 32, align: 32, offset: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1148, file: !14, line: 1479, baseType: !1158, size: 64, align: 64, offset: 384)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64, align: 64)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1160, file: !14, line: 1412, baseType: !1025, size: 64, align: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1160, file: !14, line: 1413, baseType: !890, size: 32, align: 32, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1160, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1148, file: !14, line: 1480, baseType: !890, size: 32, align: 32, offset: 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1148, file: !14, line: 1486, baseType: !1040, size: 64, align: 64, offset: 512)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1148, file: !14, line: 1488, baseType: !1040, size: 64, align: 64, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1148, file: !14, line: 1497, baseType: !1040, size: 64, align: 64, offset: 640)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1143, file: !1013, line: 121, baseType: !1019, size: 64, align: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1012, file: !1013, line: 166, baseType: !1171, size: 128, align: 64, offset: 448)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1013, line: 127, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1013, line: 124, size: 128, align: 64, elements: !1173)
!1173 = !{!1174, !1247}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1172, file: !1013, line: 125, baseType: !1175, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1179)
!1179 = !{!1180, !1181, !1205, !1209, !1210, !1244, !1245, !1246}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1178, file: !14, line: 5751, baseType: !940, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1178, file: !14, line: 5756, baseType: !1182, size: 64, align: 64, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1185)
!1185 = !{!1186, !1187, !1190, !1191, !1192, !1196, !1200, !1204}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1184, file: !14, line: 5797, baseType: !909, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1184, file: !14, line: 5804, baseType: !1188, size: 64, align: 64, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1184, file: !14, line: 5815, baseType: !940, size: 64, align: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1184, file: !14, line: 5825, baseType: !890, size: 32, align: 32, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1184, file: !14, line: 5826, baseType: !1193, size: 64, align: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!890, !1176}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1184, file: !14, line: 5827, baseType: !1197, size: 64, align: 64, offset: 320)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!890, !1176, !1146}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1184, file: !14, line: 5828, baseType: !1201, size: 64, align: 64, offset: 384)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64, align: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{null, !1176}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1184, file: !14, line: 5829, baseType: !1201, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1178, file: !14, line: 5762, baseType: !1206, size: 64, align: 64, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1208)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1178, file: !14, line: 5768, baseType: !950, size: 64, align: 64, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1178, file: !14, line: 5775, baseType: !1211, size: 64, align: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1213, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1213, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1213, file: !14, line: 3948, baseType: !898, size: 32, align: 32, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1213, file: !14, line: 3958, baseType: !1025, size: 64, align: 64, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1213, file: !14, line: 3962, baseType: !890, size: 32, align: 32, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1213, file: !14, line: 3968, baseType: !890, size: 32, align: 32, offset: 224)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1213, file: !14, line: 3973, baseType: !1040, size: 64, align: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1213, file: !14, line: 3986, baseType: !890, size: 32, align: 32, offset: 320)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1213, file: !14, line: 3999, baseType: !890, size: 32, align: 32, offset: 352)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1213, file: !14, line: 4004, baseType: !890, size: 32, align: 32, offset: 384)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1213, file: !14, line: 4005, baseType: !890, size: 32, align: 32, offset: 416)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1213, file: !14, line: 4010, baseType: !890, size: 32, align: 32, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1213, file: !14, line: 4011, baseType: !890, size: 32, align: 32, offset: 480)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1213, file: !14, line: 4020, baseType: !918, size: 64, align: 32, offset: 512)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1213, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1213, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1213, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1213, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1213, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1213, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1213, file: !14, line: 4039, baseType: !890, size: 32, align: 32, offset: 768)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1213, file: !14, line: 4046, baseType: !936, size: 64, align: 64, offset: 832)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1213, file: !14, line: 4050, baseType: !890, size: 32, align: 32, offset: 896)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1213, file: !14, line: 4054, baseType: !890, size: 32, align: 32, offset: 928)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1213, file: !14, line: 4061, baseType: !890, size: 32, align: 32, offset: 960)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1213, file: !14, line: 4065, baseType: !890, size: 32, align: 32, offset: 992)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1213, file: !14, line: 4073, baseType: !890, size: 32, align: 32, offset: 1024)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1213, file: !14, line: 4080, baseType: !890, size: 32, align: 32, offset: 1056)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1213, file: !14, line: 4084, baseType: !890, size: 32, align: 32, offset: 1088)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1178, file: !14, line: 5781, baseType: !1211, size: 64, align: 64, offset: 320)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1178, file: !14, line: 5787, baseType: !918, size: 64, align: 32, offset: 384)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1178, file: !14, line: 5793, baseType: !918, size: 64, align: 32, offset: 448)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1172, file: !1013, line: 126, baseType: !890, size: 32, align: 32, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1012, file: !1013, line: 172, baseType: !1146, size: 64, align: 64, offset: 576)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1012, file: !1013, line: 177, baseType: !1025, size: 64, align: 64, offset: 640)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1012, file: !1013, line: 178, baseType: !891, size: 32, align: 32, offset: 704)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1012, file: !1013, line: 180, baseType: !950, size: 64, align: 64, offset: 768)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1012, file: !1013, line: 185, baseType: !890, size: 32, align: 32, offset: 832)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1012, file: !1013, line: 190, baseType: !950, size: 64, align: 64, offset: 896)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1012, file: !1013, line: 195, baseType: !890, size: 32, align: 32, offset: 960)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1012, file: !1013, line: 200, baseType: !1146, size: 64, align: 64, offset: 1024)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1012, file: !1013, line: 201, baseType: !890, size: 32, align: 32, offset: 1088)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1012, file: !1013, line: 202, baseType: !1019, size: 64, align: 64, offset: 1152)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1012, file: !1013, line: 203, baseType: !890, size: 32, align: 32, offset: 1216)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1012, file: !1013, line: 205, baseType: !890, size: 32, align: 32, offset: 1248)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1012, file: !1013, line: 206, baseType: !890, size: 32, align: 32, offset: 1280)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1012, file: !1013, line: 209, baseType: !1113, size: 64, align: 64, offset: 1344)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1012, file: !1013, line: 212, baseType: !1113, size: 64, align: 64, offset: 1408)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1012, file: !1013, line: 213, baseType: !1019, size: 64, align: 64, offset: 1472)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1012, file: !1013, line: 215, baseType: !890, size: 32, align: 32, offset: 1536)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1012, file: !1013, line: 217, baseType: !890, size: 32, align: 32, offset: 1568)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1012, file: !1013, line: 220, baseType: !890, size: 32, align: 32, offset: 1600)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !999, file: !14, line: 1598, baseType: !950, size: 64, align: 64, offset: 384)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !999, file: !14, line: 1606, baseType: !1040, size: 64, align: 64, offset: 448)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !999, file: !14, line: 1614, baseType: !890, size: 32, align: 32, offset: 512)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !999, file: !14, line: 1622, baseType: !890, size: 32, align: 32, offset: 544)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !999, file: !14, line: 1628, baseType: !890, size: 32, align: 32, offset: 576)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !999, file: !14, line: 1636, baseType: !890, size: 32, align: 32, offset: 608)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !999, file: !14, line: 1643, baseType: !890, size: 32, align: 32, offset: 640)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !999, file: !14, line: 1657, baseType: !1025, size: 64, align: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !999, file: !14, line: 1658, baseType: !890, size: 32, align: 32, offset: 768)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !999, file: !14, line: 1679, baseType: !918, size: 64, align: 32, offset: 800)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !999, file: !14, line: 1688, baseType: !890, size: 32, align: 32, offset: 864)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !999, file: !14, line: 1712, baseType: !890, size: 32, align: 32, offset: 896)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !999, file: !14, line: 1729, baseType: !890, size: 32, align: 32, offset: 928)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !999, file: !14, line: 1729, baseType: !890, size: 32, align: 32, offset: 960)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !999, file: !14, line: 1744, baseType: !890, size: 32, align: 32, offset: 992)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !999, file: !14, line: 1744, baseType: !890, size: 32, align: 32, offset: 1024)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !999, file: !14, line: 1751, baseType: !890, size: 32, align: 32, offset: 1056)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !999, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !999, file: !14, line: 1791, baseType: !1286, size: 64, align: 64, offset: 1152)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64, align: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !1289, !1290, !1292, !890, !890, !890}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64, align: 64)
!1291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64, align: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !999, file: !14, line: 1808, baseType: !1294, size: 64, align: 64, offset: 1216)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64, align: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!473, !1289, !925}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !999, file: !14, line: 1816, baseType: !890, size: 32, align: 32, offset: 1280)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !999, file: !14, line: 1825, baseType: !1299, size: 32, align: 32, offset: 1312)
!1299 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !999, file: !14, line: 1830, baseType: !890, size: 32, align: 32, offset: 1344)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !999, file: !14, line: 1838, baseType: !1299, size: 32, align: 32, offset: 1376)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !999, file: !14, line: 1846, baseType: !890, size: 32, align: 32, offset: 1408)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !999, file: !14, line: 1851, baseType: !890, size: 32, align: 32, offset: 1440)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !999, file: !14, line: 1861, baseType: !1299, size: 32, align: 32, offset: 1472)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !999, file: !14, line: 1868, baseType: !1299, size: 32, align: 32, offset: 1504)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !999, file: !14, line: 1875, baseType: !1299, size: 32, align: 32, offset: 1536)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !999, file: !14, line: 1882, baseType: !1299, size: 32, align: 32, offset: 1568)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !999, file: !14, line: 1889, baseType: !1299, size: 32, align: 32, offset: 1600)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !999, file: !14, line: 1896, baseType: !1299, size: 32, align: 32, offset: 1632)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !999, file: !14, line: 1903, baseType: !1299, size: 32, align: 32, offset: 1664)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !999, file: !14, line: 1910, baseType: !890, size: 32, align: 32, offset: 1696)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !999, file: !14, line: 1915, baseType: !890, size: 32, align: 32, offset: 1728)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !999, file: !14, line: 1926, baseType: !1292, size: 64, align: 64, offset: 1792)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !999, file: !14, line: 1935, baseType: !918, size: 64, align: 32, offset: 1856)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !999, file: !14, line: 1942, baseType: !890, size: 32, align: 32, offset: 1920)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !999, file: !14, line: 1948, baseType: !890, size: 32, align: 32, offset: 1952)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !999, file: !14, line: 1954, baseType: !890, size: 32, align: 32, offset: 1984)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !999, file: !14, line: 1960, baseType: !890, size: 32, align: 32, offset: 2016)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !999, file: !14, line: 1984, baseType: !890, size: 32, align: 32, offset: 2048)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !999, file: !14, line: 1991, baseType: !890, size: 32, align: 32, offset: 2080)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !999, file: !14, line: 1996, baseType: !890, size: 32, align: 32, offset: 2112)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !999, file: !14, line: 2004, baseType: !890, size: 32, align: 32, offset: 2144)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !999, file: !14, line: 2011, baseType: !890, size: 32, align: 32, offset: 2176)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !999, file: !14, line: 2018, baseType: !890, size: 32, align: 32, offset: 2208)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !999, file: !14, line: 2027, baseType: !890, size: 32, align: 32, offset: 2240)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !999, file: !14, line: 2034, baseType: !890, size: 32, align: 32, offset: 2272)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !999, file: !14, line: 2044, baseType: !890, size: 32, align: 32, offset: 2304)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !999, file: !14, line: 2054, baseType: !1329, size: 64, align: 64, offset: 2368)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !899, line: 49, baseType: !1331)
!1331 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !999, file: !14, line: 2061, baseType: !1329, size: 64, align: 64, offset: 2432)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !999, file: !14, line: 2066, baseType: !890, size: 32, align: 32, offset: 2496)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !999, file: !14, line: 2070, baseType: !890, size: 32, align: 32, offset: 2528)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !999, file: !14, line: 2078, baseType: !890, size: 32, align: 32, offset: 2560)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !999, file: !14, line: 2085, baseType: !890, size: 32, align: 32, offset: 2592)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !999, file: !14, line: 2092, baseType: !890, size: 32, align: 32, offset: 2624)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !999, file: !14, line: 2099, baseType: !890, size: 32, align: 32, offset: 2656)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !999, file: !14, line: 2106, baseType: !890, size: 32, align: 32, offset: 2688)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !999, file: !14, line: 2113, baseType: !890, size: 32, align: 32, offset: 2720)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !999, file: !14, line: 2120, baseType: !890, size: 32, align: 32, offset: 2752)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !999, file: !14, line: 2125, baseType: !890, size: 32, align: 32, offset: 2784)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !999, file: !14, line: 2133, baseType: !890, size: 32, align: 32, offset: 2816)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !999, file: !14, line: 2140, baseType: !890, size: 32, align: 32, offset: 2848)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !999, file: !14, line: 2145, baseType: !890, size: 32, align: 32, offset: 2880)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !999, file: !14, line: 2153, baseType: !890, size: 32, align: 32, offset: 2912)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !999, file: !14, line: 2158, baseType: !890, size: 32, align: 32, offset: 2944)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !999, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !999, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !999, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !999, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !999, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !999, file: !14, line: 2203, baseType: !890, size: 32, align: 32, offset: 3136)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !999, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !999, file: !14, line: 2212, baseType: !890, size: 32, align: 32, offset: 3200)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !999, file: !14, line: 2213, baseType: !890, size: 32, align: 32, offset: 3232)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !999, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !999, file: !14, line: 2232, baseType: !890, size: 32, align: 32, offset: 3296)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !999, file: !14, line: 2243, baseType: !890, size: 32, align: 32, offset: 3328)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !999, file: !14, line: 2249, baseType: !890, size: 32, align: 32, offset: 3360)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !999, file: !14, line: 2256, baseType: !890, size: 32, align: 32, offset: 3392)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !999, file: !14, line: 2263, baseType: !936, size: 64, align: 64, offset: 3456)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !999, file: !14, line: 2270, baseType: !936, size: 64, align: 64, offset: 3520)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !999, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !999, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !999, file: !14, line: 2367, baseType: !1367, size: 64, align: 64, offset: 3648)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!890, !1289, !1019, !890}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !999, file: !14, line: 2383, baseType: !890, size: 32, align: 32, offset: 3712)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !999, file: !14, line: 2386, baseType: !1299, size: 32, align: 32, offset: 3744)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !999, file: !14, line: 2387, baseType: !1299, size: 32, align: 32, offset: 3776)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !999, file: !14, line: 2394, baseType: !890, size: 32, align: 32, offset: 3808)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !999, file: !14, line: 2401, baseType: !890, size: 32, align: 32, offset: 3840)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !999, file: !14, line: 2408, baseType: !890, size: 32, align: 32, offset: 3872)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !999, file: !14, line: 2415, baseType: !890, size: 32, align: 32, offset: 3904)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !999, file: !14, line: 2422, baseType: !890, size: 32, align: 32, offset: 3936)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !999, file: !14, line: 2423, baseType: !1379, size: 64, align: 64, offset: 3968)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1381, file: !14, line: 827, baseType: !890, size: 32, align: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1381, file: !14, line: 828, baseType: !890, size: 32, align: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1381, file: !14, line: 829, baseType: !890, size: 32, align: 32, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1381, file: !14, line: 830, baseType: !1299, size: 32, align: 32, offset: 96)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !999, file: !14, line: 2430, baseType: !1040, size: 64, align: 64, offset: 4032)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !999, file: !14, line: 2437, baseType: !1040, size: 64, align: 64, offset: 4096)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !999, file: !14, line: 2444, baseType: !1299, size: 32, align: 32, offset: 4160)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !999, file: !14, line: 2451, baseType: !1299, size: 32, align: 32, offset: 4192)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !999, file: !14, line: 2458, baseType: !890, size: 32, align: 32, offset: 4224)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !999, file: !14, line: 2469, baseType: !890, size: 32, align: 32, offset: 4256)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !999, file: !14, line: 2475, baseType: !890, size: 32, align: 32, offset: 4288)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !999, file: !14, line: 2481, baseType: !890, size: 32, align: 32, offset: 4320)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !999, file: !14, line: 2485, baseType: !890, size: 32, align: 32, offset: 4352)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !999, file: !14, line: 2489, baseType: !890, size: 32, align: 32, offset: 4384)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !999, file: !14, line: 2493, baseType: !890, size: 32, align: 32, offset: 4416)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !999, file: !14, line: 2501, baseType: !890, size: 32, align: 32, offset: 4448)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !999, file: !14, line: 2506, baseType: !890, size: 32, align: 32, offset: 4480)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !999, file: !14, line: 2510, baseType: !890, size: 32, align: 32, offset: 4512)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !999, file: !14, line: 2514, baseType: !1040, size: 64, align: 64, offset: 4544)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !999, file: !14, line: 2528, baseType: !1403, size: 64, align: 64, offset: 4608)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64, align: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{null, !1289, !950, !890, !890}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !999, file: !14, line: 2534, baseType: !890, size: 32, align: 32, offset: 4672)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !999, file: !14, line: 2545, baseType: !890, size: 32, align: 32, offset: 4704)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !999, file: !14, line: 2547, baseType: !890, size: 32, align: 32, offset: 4736)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !999, file: !14, line: 2549, baseType: !890, size: 32, align: 32, offset: 4768)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !999, file: !14, line: 2551, baseType: !890, size: 32, align: 32, offset: 4800)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !999, file: !14, line: 2553, baseType: !890, size: 32, align: 32, offset: 4832)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !999, file: !14, line: 2555, baseType: !890, size: 32, align: 32, offset: 4864)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !999, file: !14, line: 2557, baseType: !890, size: 32, align: 32, offset: 4896)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !999, file: !14, line: 2559, baseType: !890, size: 32, align: 32, offset: 4928)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !999, file: !14, line: 2563, baseType: !890, size: 32, align: 32, offset: 4960)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !999, file: !14, line: 2571, baseType: !888, size: 64, align: 64, offset: 4992)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !999, file: !14, line: 2579, baseType: !888, size: 64, align: 64, offset: 5056)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !999, file: !14, line: 2586, baseType: !890, size: 32, align: 32, offset: 5120)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !999, file: !14, line: 2615, baseType: !890, size: 32, align: 32, offset: 5152)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !999, file: !14, line: 2627, baseType: !890, size: 32, align: 32, offset: 5184)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !999, file: !14, line: 2637, baseType: !890, size: 32, align: 32, offset: 5216)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !999, file: !14, line: 2681, baseType: !890, size: 32, align: 32, offset: 5248)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !999, file: !14, line: 2709, baseType: !1040, size: 64, align: 64, offset: 5312)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !999, file: !14, line: 2716, baseType: !1425, size: 64, align: 64, offset: 5376)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433, !1434, !1438, !1444, !1448, !1449, !1450, !1451, !1457, !1458, !1459, !1460, !1461}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1427, file: !14, line: 3642, baseType: !909, size: 64, align: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1427, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1427, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1427, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1427, file: !14, line: 3669, baseType: !890, size: 32, align: 32, offset: 160)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1427, file: !14, line: 3682, baseType: !1435, size: 64, align: 64, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!890, !997, !1019}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1427, file: !14, line: 3698, baseType: !1439, size: 64, align: 64, offset: 256)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64, align: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!890, !997, !1442, !898}
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1427, file: !14, line: 3712, baseType: !1445, size: 64, align: 64, offset: 320)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64, align: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!890, !997, !890, !1442, !898}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1427, file: !14, line: 3726, baseType: !1439, size: 64, align: 64, offset: 384)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1427, file: !14, line: 3737, baseType: !994, size: 64, align: 64, offset: 448)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1427, file: !14, line: 3746, baseType: !890, size: 32, align: 32, offset: 512)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1427, file: !14, line: 3757, baseType: !1452, size: 64, align: 64, offset: 576)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{null, !1455}
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1456 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1427, file: !14, line: 3766, baseType: !994, size: 64, align: 64, offset: 640)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1427, file: !14, line: 3774, baseType: !994, size: 64, align: 64, offset: 704)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1427, file: !14, line: 3780, baseType: !890, size: 32, align: 32, offset: 768)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1427, file: !14, line: 3785, baseType: !890, size: 32, align: 32, offset: 800)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1427, file: !14, line: 3795, baseType: !1462, size: 64, align: 64, offset: 832)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!890, !997, !1060}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !999, file: !14, line: 2728, baseType: !950, size: 64, align: 64, offset: 5440)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !999, file: !14, line: 2735, baseType: !1050, size: 512, align: 64, offset: 5504)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !999, file: !14, line: 2742, baseType: !890, size: 32, align: 32, offset: 6016)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !999, file: !14, line: 2755, baseType: !890, size: 32, align: 32, offset: 6048)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !999, file: !14, line: 2776, baseType: !890, size: 32, align: 32, offset: 6080)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !999, file: !14, line: 2783, baseType: !890, size: 32, align: 32, offset: 6112)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !999, file: !14, line: 2791, baseType: !890, size: 32, align: 32, offset: 6144)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !999, file: !14, line: 2802, baseType: !1019, size: 64, align: 64, offset: 6208)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !999, file: !14, line: 2811, baseType: !890, size: 32, align: 32, offset: 6272)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !999, file: !14, line: 2821, baseType: !890, size: 32, align: 32, offset: 6304)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !999, file: !14, line: 2830, baseType: !890, size: 32, align: 32, offset: 6336)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !999, file: !14, line: 2840, baseType: !890, size: 32, align: 32, offset: 6368)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !999, file: !14, line: 2851, baseType: !1478, size: 64, align: 64, offset: 6400)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!890, !1289, !1481, !950, !1292, !890, !890}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!890, !1289, !950}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !999, file: !14, line: 2871, baseType: !1485, size: 64, align: 64, offset: 6464)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!890, !1289, !1488, !950, !1292, !890}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!890, !1289, !950, !890, !890}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !999, file: !14, line: 2878, baseType: !890, size: 32, align: 32, offset: 6528)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !999, file: !14, line: 2885, baseType: !890, size: 32, align: 32, offset: 6560)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !999, file: !14, line: 3005, baseType: !890, size: 32, align: 32, offset: 6592)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !999, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !999, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !999, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !999, file: !14, line: 3037, baseType: !1025, size: 64, align: 64, offset: 6720)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !999, file: !14, line: 3038, baseType: !890, size: 32, align: 32, offset: 6784)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !999, file: !14, line: 3050, baseType: !936, size: 64, align: 64, offset: 6848)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !999, file: !14, line: 3065, baseType: !890, size: 32, align: 32, offset: 6912)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !999, file: !14, line: 3083, baseType: !890, size: 32, align: 32, offset: 6944)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !999, file: !14, line: 3092, baseType: !918, size: 64, align: 32, offset: 6976)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !999, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !999, file: !14, line: 3106, baseType: !918, size: 64, align: 32, offset: 7072)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !999, file: !14, line: 3113, baseType: !1506, size: 64, align: 64, offset: 7168)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64, align: 64)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1519}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1509, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1509, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1509, file: !14, line: 720, baseType: !909, size: 64, align: 64, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1509, file: !14, line: 724, baseType: !909, size: 64, align: 64, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1509, file: !14, line: 728, baseType: !890, size: 32, align: 32, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1509, file: !14, line: 734, baseType: !1517, size: 64, align: 64, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64, align: 64)
!1518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1509, file: !14, line: 739, baseType: !1520, size: 64, align: 64, offset: 320)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !999, file: !14, line: 3129, baseType: !1040, size: 64, align: 64, offset: 7232)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !999, file: !14, line: 3130, baseType: !1040, size: 64, align: 64, offset: 7296)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !999, file: !14, line: 3131, baseType: !1040, size: 64, align: 64, offset: 7360)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !999, file: !14, line: 3132, baseType: !1040, size: 64, align: 64, offset: 7424)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !999, file: !14, line: 3139, baseType: !888, size: 64, align: 64, offset: 7488)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !999, file: !14, line: 3147, baseType: !890, size: 32, align: 32, offset: 7552)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !999, file: !14, line: 3165, baseType: !890, size: 32, align: 32, offset: 7584)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !999, file: !14, line: 3172, baseType: !890, size: 32, align: 32, offset: 7616)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !999, file: !14, line: 3180, baseType: !890, size: 32, align: 32, offset: 7648)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !999, file: !14, line: 3191, baseType: !1329, size: 64, align: 64, offset: 7680)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !999, file: !14, line: 3199, baseType: !1025, size: 64, align: 64, offset: 7744)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !999, file: !14, line: 3207, baseType: !888, size: 64, align: 64, offset: 7808)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !999, file: !14, line: 3214, baseType: !891, size: 32, align: 32, offset: 7872)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !999, file: !14, line: 3224, baseType: !1158, size: 64, align: 64, offset: 7936)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !999, file: !14, line: 3225, baseType: !890, size: 32, align: 32, offset: 8000)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !999, file: !14, line: 3249, baseType: !1060, size: 64, align: 64, offset: 8064)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !999, file: !14, line: 3256, baseType: !890, size: 32, align: 32, offset: 8128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !999, file: !14, line: 3271, baseType: !890, size: 32, align: 32, offset: 8160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !999, file: !14, line: 3279, baseType: !1040, size: 64, align: 64, offset: 8192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !999, file: !14, line: 3301, baseType: !1060, size: 64, align: 64, offset: 8256)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !999, file: !14, line: 3310, baseType: !890, size: 32, align: 32, offset: 8320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !999, file: !14, line: 3337, baseType: !890, size: 32, align: 32, offset: 8352)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !999, file: !14, line: 3351, baseType: !890, size: 32, align: 32, offset: 8384)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !999, file: !14, line: 3359, baseType: !890, size: 32, align: 32, offset: 8416)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !906, file: !14, line: 3535, baseType: !1547, size: 64, align: 64, offset: 1024)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!890, !997, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64, align: 64)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !906, file: !14, line: 3541, baseType: !1553, size: 64, align: 64, offset: 1088)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1013, line: 223, size: 128, align: 64, elements: !1557)
!1557 = !{!1558, !1559}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1556, file: !1013, line: 224, baseType: !1442, size: 64, align: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1556, file: !1013, line: 225, baseType: !1442, size: 64, align: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !906, file: !14, line: 3549, baseType: !1561, size: 64, align: 64, offset: 1152)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64, align: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !992}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !906, file: !14, line: 3551, baseType: !994, size: 64, align: 64, offset: 1216)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !906, file: !14, line: 3552, baseType: !1566, size: 64, align: 64, offset: 1280)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64, align: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!890, !997, !1025, !890, !1569}
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1572)
!1572 = !{!1573, !1574, !1575, !1576, !1577, !1601}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1571, file: !14, line: 3921, baseType: !1330, size: 16, align: 16)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1571, file: !14, line: 3922, baseType: !898, size: 32, align: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1571, file: !14, line: 3923, baseType: !898, size: 32, align: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1571, file: !14, line: 3924, baseType: !891, size: 32, align: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1571, file: !14, line: 3925, baseType: !1578, size: 64, align: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1594, !1596, !1597, !1598, !1599, !1600}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1581, file: !14, line: 3886, baseType: !890, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1581, file: !14, line: 3887, baseType: !890, size: 32, align: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1581, file: !14, line: 3888, baseType: !890, size: 32, align: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1581, file: !14, line: 3889, baseType: !890, size: 32, align: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1581, file: !14, line: 3890, baseType: !890, size: 32, align: 32, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1581, file: !14, line: 3897, baseType: !1589, size: 768, align: 64, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1590)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1590, file: !14, line: 3855, baseType: !1024, size: 512, align: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1590, file: !14, line: 3857, baseType: !1029, size: 256, align: 32, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1581, file: !14, line: 3903, baseType: !1595, size: 256, align: 64, offset: 960)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 256, align: 64, elements: !1129)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1581, file: !14, line: 3904, baseType: !1136, size: 128, align: 32, offset: 1216)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1581, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1581, file: !14, line: 3908, baseType: !888, size: 64, align: 64, offset: 1408)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1581, file: !14, line: 3915, baseType: !888, size: 64, align: 64, offset: 1472)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1581, file: !14, line: 3917, baseType: !890, size: 32, align: 32, offset: 1536)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1571, file: !14, line: 3926, baseType: !1040, size: 64, align: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !906, file: !14, line: 3564, baseType: !1603, size: 64, align: 64, offset: 1344)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!890, !997, !1146, !1290, !1292}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !906, file: !14, line: 3566, baseType: !1607, size: 64, align: 64, offset: 1408)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!890, !997, !950, !1292, !1146}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !906, file: !14, line: 3567, baseType: !994, size: 64, align: 64, offset: 1472)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !906, file: !14, line: 3576, baseType: !1612, size: 64, align: 64, offset: 1536)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64, align: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!890, !997, !1290}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !906, file: !14, line: 3577, baseType: !1616, size: 64, align: 64, offset: 1600)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!890, !997, !1146}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !906, file: !14, line: 3584, baseType: !1435, size: 64, align: 64, offset: 1664)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !906, file: !14, line: 3589, baseType: !1621, size: 64, align: 64, offset: 1728)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64, align: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{null, !997}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !906, file: !14, line: 3594, baseType: !890, size: 32, align: 32, offset: 1792)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !906, file: !14, line: 3600, baseType: !909, size: 64, align: 64, offset: 1856)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !906, file: !14, line: 3609, baseType: !1627, size: 64, align: 64, offset: 1920)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1631 = distinct !DIGlobalVariable(name: "ff_vp3_decoder", scope: !0, file: !904, line: 2596, type: !905, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_vp3_decoder)
!1632 = distinct !DIGlobalVariable(name: "hilbert_offset", scope: !0, file: !904, line: 123, type: !1633, isLocal: true, isDefinition: true, variable: [16 x [2 x i8]]* @hilbert_offset)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 256, align: 8, elements: !1634)
!1634 = !{!1635, !1636}
!1635 = !DISubrange(count: 16)
!1636 = !DISubrange(count: 2)
!1637 = distinct !DIGlobalVariable(name: "theora_pix_fmts", scope: !0, file: !904, line: 2283, type: !1638, isLocal: true, isDefinition: true, variable: [4 x i32]* @theora_pix_fmts)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 128, align: 32, elements: !1129)
!1639 = distinct !DIGlobalVariable(name: "ModeAlphabet", scope: !0, file: !904, line: 85, type: !1640, isLocal: true, isDefinition: true, variable: [6 x [8 x i32]]* @ModeAlphabet)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 1536, align: 32, elements: !1641)
!1641 = !{!1642, !1027}
!1642 = !DISubrange(count: 6)
!1643 = distinct !DIGlobalVariable(name: "motion_vector_table", scope: !0, file: !1644, line: 179, type: !1645, isLocal: true, isDefinition: true, variable: [63 x i8]* @motion_vector_table)
!1644 = !DIFile(filename: "libavcodec/vp3data.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1646, size: 504, align: 8, elements: !1647)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1647 = !{!1648}
!1648 = !DISubrange(count: 63)
!1649 = distinct !DIGlobalVariable(name: "fixed_motion_vector_table", scope: !0, file: !1644, line: 189, type: !1650, isLocal: true, isDefinition: true, variable: [64 x i8]* @fixed_motion_vector_table)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1646, size: 512, align: 8, elements: !1651)
!1651 = !{!1652}
!1652 = !DISubrange(count: 64)
!1653 = distinct !DIGlobalVariable(name: "eob_run_base", scope: !0, file: !1644, line: 201, type: !1654, isLocal: true, isDefinition: true, variable: [7 x i8]* @eob_run_base)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 56, align: 8, elements: !1655)
!1655 = !{!1656}
!1656 = !DISubrange(count: 7)
!1657 = distinct !DIGlobalVariable(name: "eob_run_get_bits", scope: !0, file: !1644, line: 204, type: !1654, isLocal: true, isDefinition: true, variable: [7 x i8]* @eob_run_get_bits)
!1658 = distinct !DIGlobalVariable(name: "coeff_get_bits", scope: !0, file: !1644, line: 223, type: !1659, isLocal: true, isDefinition: true, variable: [32 x i8]* @coeff_get_bits)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 256, align: 8, elements: !1660)
!1660 = !{!1661}
!1661 = !DISubrange(count: 32)
!1662 = distinct !DIGlobalVariable(name: "coeff_tables", scope: !0, file: !1644, line: 408, type: !1663, isLocal: true, isDefinition: true, variable: [32 x i16*]* @coeff_tables)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1664, size: 2048, align: 64, elements: !1660)
!1664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1665)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64, align: 64)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1041, line: 195, baseType: !1668)
!1668 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1669 = distinct !DIGlobalVariable(name: "coeff_table_token_7_8", scope: !0, file: !1644, line: 232, type: !1670, isLocal: true, isDefinition: true, variable: [1 x i16]* @coeff_table_token_7_8)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 16, align: 16, elements: !1671)
!1671 = !{!1672}
!1672 = !DISubrange(count: 1)
!1673 = distinct !DIGlobalVariable(name: "coeff_table_token_9", scope: !0, file: !1644, line: 233, type: !1670, isLocal: true, isDefinition: true, variable: [1 x i16]* @coeff_table_token_9)
!1674 = distinct !DIGlobalVariable(name: "coeff_table_token_10", scope: !0, file: !1644, line: 234, type: !1670, isLocal: true, isDefinition: true, variable: [1 x i16]* @coeff_table_token_10)
!1675 = distinct !DIGlobalVariable(name: "coeff_table_token_11", scope: !0, file: !1644, line: 235, type: !1670, isLocal: true, isDefinition: true, variable: [1 x i16]* @coeff_table_token_11)
!1676 = distinct !DIGlobalVariable(name: "coeff_table_token_12", scope: !0, file: !1644, line: 236, type: !1670, isLocal: true, isDefinition: true, variable: [1 x i16]* @coeff_table_token_12)
!1677 = distinct !DIGlobalVariable(name: "coeff_table_token_13", scope: !0, file: !1644, line: 238, type: !1678, isLocal: true, isDefinition: true, variable: [2 x i16]* @coeff_table_token_13)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 32, align: 16, elements: !1679)
!1679 = !{!1636}
!1680 = distinct !DIGlobalVariable(name: "coeff_table_token_14", scope: !0, file: !1644, line: 239, type: !1678, isLocal: true, isDefinition: true, variable: [2 x i16]* @coeff_table_token_14)
!1681 = distinct !DIGlobalVariable(name: "coeff_table_token_15", scope: !0, file: !1644, line: 240, type: !1678, isLocal: true, isDefinition: true, variable: [2 x i16]* @coeff_table_token_15)
!1682 = distinct !DIGlobalVariable(name: "coeff_table_token_16", scope: !0, file: !1644, line: 241, type: !1678, isLocal: true, isDefinition: true, variable: [2 x i16]* @coeff_table_token_16)
!1683 = distinct !DIGlobalVariable(name: "coeff_table_token_17", scope: !0, file: !1644, line: 247, type: !1684, isLocal: true, isDefinition: true, variable: [4 x i16]* @coeff_table_token_17)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 64, align: 16, elements: !1129)
!1685 = distinct !DIGlobalVariable(name: "coeff_table_token_18", scope: !0, file: !1644, line: 251, type: !1686, isLocal: true, isDefinition: true, variable: [8 x i16]* @coeff_table_token_18)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 128, align: 16, elements: !1026)
!1687 = distinct !DIGlobalVariable(name: "coeff_table_token_19", scope: !0, file: !1644, line: 255, type: !1688, isLocal: true, isDefinition: true, variable: [16 x i16]* @coeff_table_token_19)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 256, align: 16, elements: !1689)
!1689 = !{!1635}
!1690 = distinct !DIGlobalVariable(name: "coeff_table_token_20", scope: !0, file: !1644, line: 259, type: !1691, isLocal: true, isDefinition: true, variable: [32 x i16]* @coeff_table_token_20)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 512, align: 16, elements: !1660)
!1692 = distinct !DIGlobalVariable(name: "coeff_table_token_21", scope: !0, file: !1644, line: 266, type: !1693, isLocal: true, isDefinition: true, variable: [64 x i16]* @coeff_table_token_21)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 1024, align: 16, elements: !1651)
!1694 = distinct !DIGlobalVariable(name: "coeff_table_token_22", scope: !0, file: !1644, line: 277, type: !1695, isLocal: true, isDefinition: true, variable: [1024 x i16]* @coeff_table_token_22)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 16384, align: 16, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 1024)
!1698 = distinct !DIGlobalVariable(name: "coeff_table_token_23_24_25_26_27_28_29", scope: !0, file: !1644, line: 243, type: !1678, isLocal: true, isDefinition: true, variable: [2 x i16]* @coeff_table_token_23_24_25_26_27_28_29)
!1699 = distinct !DIGlobalVariable(name: "coeff_table_token_30", scope: !0, file: !1644, line: 244, type: !1684, isLocal: true, isDefinition: true, variable: [4 x i16]* @coeff_table_token_30)
!1700 = distinct !DIGlobalVariable(name: "coeff_table_token_31", scope: !0, file: !1644, line: 245, type: !1684, isLocal: true, isDefinition: true, variable: [4 x i16]* @coeff_table_token_31)
!1701 = distinct !DIGlobalVariable(name: "zero_run_base", scope: !0, file: !1644, line: 208, type: !1659, isLocal: true, isDefinition: true, variable: [32 x i8]* @zero_run_base)
!1702 = distinct !DIGlobalVariable(name: "zero_run_get_bits", scope: !0, file: !1644, line: 215, type: !1659, isLocal: true, isDefinition: true, variable: [32 x i8]* @zero_run_get_bits)
!1703 = distinct !DIGlobalVariable(name: "predictor_transform", scope: !1704, file: !904, line: 1208, type: !1900, isLocal: true, isDefinition: true, variable: [16 x [4 x i32]]* @reverse_dc_prediction.predictor_transform)
!1704 = distinct !DISubprogram(name: "reverse_dc_prediction", scope: !904, file: !904, line: 1180, type: !1705, isLocal: true, isDefinition: true, scopeLine: 1184, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{null, !1707, !890, !890, !890}
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "Vp3DecodeContext", file: !904, line: 266, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Vp3DecodeContext", file: !904, line: 132, size: 443904, align: 128, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1729, !1730, !1731, !1732, !1734, !1735, !1752, !1765, !1786, !1788, !1789, !1790, !1791, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1808, !1809, !1810, !1811, !1812, !1814, !1815, !1823, !1824, !1825, !1826, !1827, !1828, !1832, !1834, !1836, !1840, !1843, !1846, !1848, !1851, !1852, !1854, !1855, !1857, !1858, !1859, !1860, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1894, !1895}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1709, file: !904, line: 133, baseType: !997, size: 64, align: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "theora", scope: !1709, file: !904, line: 134, baseType: !890, size: 32, align: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "theora_tables", scope: !1709, file: !904, line: 134, baseType: !890, size: 32, align: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "theora_header", scope: !1709, file: !904, line: 134, baseType: !890, size: 32, align: 32, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1709, file: !904, line: 135, baseType: !890, size: 32, align: 32, offset: 160)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1709, file: !904, line: 136, baseType: !890, size: 32, align: 32, offset: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1709, file: !904, line: 136, baseType: !890, size: 32, align: 32, offset: 224)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_x_shift", scope: !1709, file: !904, line: 137, baseType: !890, size: 32, align: 32, offset: 256)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_y_shift", scope: !1709, file: !904, line: 137, baseType: !890, size: 32, align: 32, offset: 288)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "golden_frame", scope: !1709, file: !904, line: 138, baseType: !1721, size: 256, align: 64, offset: 320)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !1722, line: 40, baseType: !1723)
!1722 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !1722, line: 34, size: 256, align: 64, elements: !1724)
!1724 = !{!1725, !1726, !1728}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1723, file: !1722, line: 35, baseType: !1019, size: 64, align: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1723, file: !1722, line: 36, baseType: !1727, size: 128, align: 64, offset: 64)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !997, size: 128, align: 64, elements: !1679)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1723, file: !1722, line: 39, baseType: !1060, size: 64, align: 64, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !1709, file: !904, line: 139, baseType: !1721, size: 256, align: 64, offset: 576)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "current_frame", scope: !1709, file: !904, line: 140, baseType: !1721, size: 256, align: 64, offset: 832)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe", scope: !1709, file: !904, line: 141, baseType: !890, size: 32, align: 32, offset: 1088)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !1709, file: !904, line: 142, baseType: !1733, size: 512, align: 8, offset: 1120)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 512, align: 8, elements: !1651)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "idct_scantable", scope: !1709, file: !904, line: 143, baseType: !1733, size: 512, align: 8, offset: 1632)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !1709, file: !904, line: 144, baseType: !1736, size: 3328, align: 64, offset: 2176)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !1737, line: 95, baseType: !1738)
!1737 = !DIFile(filename: "libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !1737, line: 45, size: 3328, align: 64, elements: !1739)
!1739 = !{!1740, !1748, !1749, !1750}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !1738, file: !1737, line: 56, baseType: !1741, size: 1024, align: 64)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1742, size: 1024, align: 64, elements: !1747)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !1737, line: 38, baseType: !1743)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64, align: 64)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{null, !1025, !1442, !1746, !890}
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1114, line: 149, baseType: !1042)
!1747 = !{!1130, !1130}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !1738, file: !1737, line: 68, baseType: !1741, size: 1024, align: 64, offset: 1024)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !1738, file: !1737, line: 82, baseType: !1741, size: 1024, align: 64, offset: 2048)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !1738, file: !1737, line: 94, baseType: !1751, size: 256, align: 64, offset: 3072)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1742, size: 256, align: 64, elements: !1129)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !1709, file: !904, line: 145, baseType: !1753, size: 128, align: 64, offset: 5504)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "VideoDSPContext", file: !1754, line: 77, baseType: !1755)
!1754 = !DIFile(filename: "libavcodec/videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VideoDSPContext", file: !1754, line: 41, size: 128, align: 64, elements: !1756)
!1756 = !{!1757, !1761}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "emulated_edge_mc", scope: !1755, file: !1754, line: 63, baseType: !1758, size: 64, align: 64)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64, align: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{null, !1025, !1442, !1746, !1746, !890, !890, !890, !890, !890, !890}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch", scope: !1755, file: !1754, line: 76, baseType: !1762, size: 64, align: 64, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64, align: 64)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{null, !1025, !1746, !890}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "vp3dsp", scope: !1709, file: !904, line: 146, baseType: !1766, size: 384, align: 64, offset: 5632)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "VP3DSPContext", file: !1767, line: 46, baseType: !1768)
!1767 = !DIFile(filename: "libavcodec/vp3dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VP3DSPContext", file: !1767, line: 25, size: 384, align: 64, elements: !1769)
!1769 = !{!1770, !1774, !1779, !1780, !1781, !1785}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_l2", scope: !1768, file: !1767, line: 36, baseType: !1771, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64, align: 64)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{null, !1025, !1442, !1442, !1746, !890}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1768, file: !1767, line: 41, baseType: !1775, size: 64, align: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64, align: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{null, !1025, !1746, !1778}
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1768, file: !1767, line: 42, baseType: !1775, size: 64, align: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "idct_dc_add", scope: !1768, file: !1767, line: 43, baseType: !1775, size: 64, align: 64, offset: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "v_loop_filter", scope: !1768, file: !1767, line: 44, baseType: !1782, size: 64, align: 64, offset: 256)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64, align: 64)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{null, !1025, !1746, !1292}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "h_loop_filter", scope: !1768, file: !1767, line: 45, baseType: !1782, size: 64, align: 64, offset: 320)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1709, file: !904, line: 147, baseType: !1787, size: 1024, align: 16, offset: 6016)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1667, size: 1024, align: 16, elements: !1651)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flipped_image", scope: !1709, file: !904, line: 148, baseType: !890, size: 32, align: 32, offset: 7040)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "last_slice_end", scope: !1709, file: !904, line: 149, baseType: !890, size: 32, align: 32, offset: 7072)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1709, file: !904, line: 150, baseType: !890, size: 32, align: 32, offset: 7104)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "qps", scope: !1709, file: !904, line: 152, baseType: !1792, size: 96, align: 32, offset: 7136)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 96, align: 32, elements: !1793)
!1793 = !{!1794}
!1794 = !DISubrange(count: 3)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "nqps", scope: !1709, file: !904, line: 153, baseType: !890, size: 32, align: 32, offset: 7232)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "last_qps", scope: !1709, file: !904, line: 154, baseType: !1792, size: 96, align: 32, offset: 7264)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "superblock_count", scope: !1709, file: !904, line: 156, baseType: !890, size: 32, align: 32, offset: 7360)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "y_superblock_width", scope: !1709, file: !904, line: 157, baseType: !890, size: 32, align: 32, offset: 7392)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "y_superblock_height", scope: !1709, file: !904, line: 158, baseType: !890, size: 32, align: 32, offset: 7424)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "y_superblock_count", scope: !1709, file: !904, line: 159, baseType: !890, size: 32, align: 32, offset: 7456)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "c_superblock_width", scope: !1709, file: !904, line: 160, baseType: !890, size: 32, align: 32, offset: 7488)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "c_superblock_height", scope: !1709, file: !904, line: 161, baseType: !890, size: 32, align: 32, offset: 7520)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "c_superblock_count", scope: !1709, file: !904, line: 162, baseType: !890, size: 32, align: 32, offset: 7552)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "u_superblock_start", scope: !1709, file: !904, line: 163, baseType: !890, size: 32, align: 32, offset: 7584)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "v_superblock_start", scope: !1709, file: !904, line: 164, baseType: !890, size: 32, align: 32, offset: 7616)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "superblock_coding", scope: !1709, file: !904, line: 165, baseType: !1807, size: 64, align: 64, offset: 7680)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "macroblock_count", scope: !1709, file: !904, line: 167, baseType: !890, size: 32, align: 32, offset: 7744)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "macroblock_width", scope: !1709, file: !904, line: 168, baseType: !890, size: 32, align: 32, offset: 7776)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "macroblock_height", scope: !1709, file: !904, line: 169, baseType: !890, size: 32, align: 32, offset: 7808)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_count", scope: !1709, file: !904, line: 171, baseType: !890, size: 32, align: 32, offset: 7840)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_width", scope: !1709, file: !904, line: 172, baseType: !1813, size: 64, align: 32, offset: 7872)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 64, align: 32, elements: !1679)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_height", scope: !1709, file: !904, line: 173, baseType: !1813, size: 64, align: 32, offset: 7936)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "all_fragments", scope: !1709, file: !904, line: 175, baseType: !1816, size: 64, align: 64, offset: 8000)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64, align: 64)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "Vp3Fragment", file: !904, line: 56, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Vp3Fragment", file: !904, line: 52, size: 32, align: 16, elements: !1819)
!1819 = !{!1820, !1821, !1822}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "dc", scope: !1818, file: !904, line: 53, baseType: !1667, size: 16, align: 16)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "coding_method", scope: !1818, file: !904, line: 54, baseType: !900, size: 8, align: 8, offset: 16)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "qpi", scope: !1818, file: !904, line: 55, baseType: !900, size: 8, align: 8, offset: 24)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_start", scope: !1709, file: !904, line: 176, baseType: !1792, size: 96, align: 32, offset: 8064)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !1709, file: !904, line: 177, baseType: !1792, size: 96, align: 32, offset: 8160)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "offset_x", scope: !1709, file: !904, line: 178, baseType: !900, size: 8, align: 8, offset: 8256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "offset_y", scope: !1709, file: !904, line: 179, baseType: !900, size: 8, align: 8, offset: 8264)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "offset_x_warned", scope: !1709, file: !904, line: 180, baseType: !890, size: 32, align: 32, offset: 8288)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !1709, file: !904, line: 182, baseType: !1829, size: 128, align: 64, offset: 8320)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1830, size: 128, align: 64, elements: !1679)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64, align: 64)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1105, size: 16, align: 8, elements: !1679)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "coded_dc_scale_factor", scope: !1709, file: !904, line: 185, baseType: !1833, size: 1024, align: 16, offset: 8448)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1330, size: 1024, align: 16, elements: !1651)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "coded_ac_scale_factor", scope: !1709, file: !904, line: 186, baseType: !1835, size: 2048, align: 32, offset: 9472)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 2048, align: 32, elements: !1651)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "base_matrix", scope: !1709, file: !904, line: 187, baseType: !1837, size: 196608, align: 8, offset: 11520)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 196608, align: 8, elements: !1838)
!1838 = !{!1839, !1652}
!1839 = !DISubrange(count: 384)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "qr_count", scope: !1709, file: !904, line: 188, baseType: !1841, size: 48, align: 8, offset: 208128)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 48, align: 8, elements: !1842)
!1842 = !{!1636, !1794}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "qr_size", scope: !1709, file: !904, line: 189, baseType: !1844, size: 3072, align: 8, offset: 208176)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 3072, align: 8, elements: !1845)
!1845 = !{!1636, !1794, !1652}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "qr_base", scope: !1709, file: !904, line: 190, baseType: !1847, size: 6144, align: 16, offset: 211248)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1330, size: 6144, align: 16, elements: !1845)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "dct_tokens", scope: !1709, file: !904, line: 209, baseType: !1849, size: 12288, align: 64, offset: 217408)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1778, size: 12288, align: 64, elements: !1850)
!1850 = !{!1794, !1652}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "dct_tokens_base", scope: !1709, file: !904, line: 210, baseType: !1778, size: 64, align: 64, offset: 229696)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "num_coded_frags", scope: !1709, file: !904, line: 219, baseType: !1853, size: 6144, align: 32, offset: 229760)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 6144, align: 32, elements: !1850)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "total_num_coded_frags", scope: !1709, file: !904, line: 220, baseType: !890, size: 32, align: 32, offset: 235904)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "coded_fragment_list", scope: !1709, file: !904, line: 224, baseType: !1856, size: 192, align: 64, offset: 235968)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 192, align: 64, elements: !1793)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "kf_coded_fragment_list", scope: !1709, file: !904, line: 226, baseType: !1292, size: 64, align: 64, offset: 236160)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "nkf_coded_fragment_list", scope: !1709, file: !904, line: 227, baseType: !1292, size: 64, align: 64, offset: 236224)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "num_kf_coded_fragment", scope: !1709, file: !904, line: 228, baseType: !1792, size: 96, align: 32, offset: 236288)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "dc_vlc", scope: !1709, file: !904, line: 230, baseType: !1861, size: 3072, align: 64, offset: 236416)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 3072, align: 64, elements: !1689)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1863, line: 30, baseType: !1864)
!1863 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1863, line: 26, size: 192, align: 64, elements: !1865)
!1865 = !{!1866, !1867, !1870, !1871}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1864, file: !1863, line: 27, baseType: !890, size: 32, align: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1864, file: !1863, line: 28, baseType: !1868, size: 64, align: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64, align: 64)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1667, size: 32, align: 16, elements: !1679)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1864, file: !1863, line: 29, baseType: !890, size: 32, align: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1864, file: !1863, line: 29, baseType: !890, size: 32, align: 32, offset: 160)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ac_vlc_1", scope: !1709, file: !904, line: 231, baseType: !1861, size: 3072, align: 64, offset: 239488)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ac_vlc_2", scope: !1709, file: !904, line: 232, baseType: !1861, size: 3072, align: 64, offset: 242560)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ac_vlc_3", scope: !1709, file: !904, line: 233, baseType: !1861, size: 3072, align: 64, offset: 245632)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ac_vlc_4", scope: !1709, file: !904, line: 234, baseType: !1861, size: 3072, align: 64, offset: 248704)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "superblock_run_length_vlc", scope: !1709, file: !904, line: 236, baseType: !1862, size: 192, align: 64, offset: 251776)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_run_length_vlc", scope: !1709, file: !904, line: 237, baseType: !1862, size: 192, align: 64, offset: 251968)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "mode_code_vlc", scope: !1709, file: !904, line: 238, baseType: !1862, size: 192, align: 64, offset: 252160)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "motion_vector_vlc", scope: !1709, file: !904, line: 239, baseType: !1862, size: 192, align: 64, offset: 252352)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "qmat", scope: !1709, file: !904, line: 243, baseType: !1881, size: 18432, align: 16, offset: 252544)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1667, size: 18432, align: 16, elements: !1882)
!1882 = !{!1794, !1636, !1794, !1652}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "superblock_fragments", scope: !1709, file: !904, line: 249, baseType: !1292, size: 64, align: 64, offset: 270976)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "macroblock_coding", scope: !1709, file: !904, line: 253, baseType: !1807, size: 64, align: 64, offset: 271040)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !1709, file: !904, line: 255, baseType: !1025, size: 64, align: 64, offset: 271104)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "hti", scope: !1709, file: !904, line: 258, baseType: !890, size: 32, align: 32, offset: 271168)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "hbits", scope: !1709, file: !904, line: 259, baseType: !891, size: 32, align: 32, offset: 271200)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1709, file: !904, line: 260, baseType: !890, size: 32, align: 32, offset: 271232)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "huff_code_size", scope: !1709, file: !904, line: 261, baseType: !890, size: 32, align: 32, offset: 271264)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "huffman_table", scope: !1709, file: !904, line: 262, baseType: !1891, size: 163840, align: 32, offset: 271296)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 163840, align: 32, elements: !1892)
!1892 = !{!1893, !1661, !1636}
!1893 = !DISubrange(count: 80)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "filter_limit_values", scope: !1709, file: !904, line: 264, baseType: !1733, size: 512, align: 8, offset: 435136)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "bounding_values_array", scope: !1709, file: !904, line: 265, baseType: !1896, size: 8256, align: 32, offset: 435648)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 8256, align: 32, elements: !1897)
!1897 = !{!1898}
!1898 = !DISubrange(count: 258)
!1899 = !{}
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 2048, align: 32, elements: !1901)
!1901 = !{!1635, !1130}
!1902 = distinct !DIGlobalVariable(name: "compatible_frame", scope: !1704, file: !904, line: 1233, type: !1903, isLocal: true, isDefinition: true, variable: [9 x i8]* @reverse_dc_prediction.compatible_frame)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1904, size: 72, align: 8, elements: !1905)
!1904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!1905 = !{!1906}
!1906 = !DISubrange(count: 9)
!1907 = distinct !DIGlobalVariable(name: "vp31_dc_scale_factor", scope: !0, file: !1644, line: 65, type: !1908, isLocal: true, isDefinition: true, variable: [64 x i8]* @vp31_dc_scale_factor)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 512, align: 8, elements: !1651)
!1909 = distinct !DIGlobalVariable(name: "vp31_ac_scale_factor", scope: !0, file: !1644, line: 76, type: !1910, isLocal: true, isDefinition: true, variable: [64 x i16]* @vp31_ac_scale_factor)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 1024, align: 16, elements: !1651)
!1911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1912 = distinct !DIGlobalVariable(name: "vp31_intra_y_dequant", scope: !0, file: !1644, line: 29, type: !1650, isLocal: true, isDefinition: true, variable: [64 x i8]* @vp31_intra_y_dequant)
!1913 = distinct !DIGlobalVariable(name: "vp31_intra_c_dequant", scope: !0, file: !1644, line: 42, type: !1650, isLocal: true, isDefinition: true, variable: [64 x i8]* @vp31_intra_c_dequant)
!1914 = distinct !DIGlobalVariable(name: "vp31_inter_dequant", scope: !0, file: !1644, line: 54, type: !1650, isLocal: true, isDefinition: true, variable: [64 x i8]* @vp31_inter_dequant)
!1915 = distinct !DIGlobalVariable(name: "vp31_filter_limit_values", scope: !0, file: !1644, line: 87, type: !1908, isLocal: true, isDefinition: true, variable: [64 x i8]* @vp31_filter_limit_values)
!1916 = distinct !DIGlobalVariable(name: "dc_bias", scope: !0, file: !1644, line: 446, type: !1917, isLocal: true, isDefinition: true, variable: [16 x [32 x [2 x i16]]]* @dc_bias)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 16384, align: 16, elements: !1918)
!1918 = !{!1635, !1661, !1636}
!1919 = distinct !DIGlobalVariable(name: "ac_bias_0", scope: !0, file: !1644, line: 993, type: !1917, isLocal: true, isDefinition: true, variable: [16 x [32 x [2 x i16]]]* @ac_bias_0)
!1920 = distinct !DIGlobalVariable(name: "ac_bias_1", scope: !0, file: !1644, line: 1540, type: !1917, isLocal: true, isDefinition: true, variable: [16 x [32 x [2 x i16]]]* @ac_bias_1)
!1921 = distinct !DIGlobalVariable(name: "ac_bias_2", scope: !0, file: !1644, line: 2087, type: !1917, isLocal: true, isDefinition: true, variable: [16 x [32 x [2 x i16]]]* @ac_bias_2)
!1922 = distinct !DIGlobalVariable(name: "ac_bias_3", scope: !0, file: !1644, line: 2634, type: !1917, isLocal: true, isDefinition: true, variable: [16 x [32 x [2 x i16]]]* @ac_bias_3)
!1923 = distinct !DIGlobalVariable(name: "superblock_run_length_vlc_table", scope: !0, file: !1644, line: 98, type: !1924, isLocal: true, isDefinition: true, variable: [34 x [2 x i16]]* @superblock_run_length_vlc_table)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 1088, align: 16, elements: !1925)
!1925 = !{!1926, !1636}
!1926 = !DISubrange(count: 34)
!1927 = distinct !DIGlobalVariable(name: "fragment_run_length_vlc_table", scope: !0, file: !1644, line: 119, type: !1928, isLocal: true, isDefinition: true, variable: [30 x [2 x i16]]* @fragment_run_length_vlc_table)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 960, align: 16, elements: !1929)
!1929 = !{!1930, !1636}
!1930 = !DISubrange(count: 30)
!1931 = distinct !DIGlobalVariable(name: "mode_code_vlc_table", scope: !0, file: !1644, line: 144, type: !1932, isLocal: true, isDefinition: true, variable: [8 x [2 x i8]]* @mode_code_vlc_table)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 128, align: 8, elements: !1933)
!1933 = !{!1027, !1636}
!1934 = distinct !DIGlobalVariable(name: "motion_vector_vlc_table", scope: !0, file: !1644, line: 151, type: !1935, isLocal: true, isDefinition: true, variable: [63 x [2 x i8]]* @motion_vector_vlc_table)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 1008, align: 8, elements: !1936)
!1936 = !{!1648, !1636}
!1937 = !{i32 2, !"Dwarf Version", i32 4}
!1938 = !{i32 2, !"Debug Info Version", i32 3}
!1939 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1940 = distinct !DISubprogram(name: "vp3_init_thread_copy", scope: !904, file: !904, line: 2262, type: !995, isLocal: true, isDefinition: true, scopeLine: 2263, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!1941 = !DILocalVariable(name: "avctx", arg: 1, scope: !1940, file: !904, line: 2262, type: !997)
!1942 = !DIExpression()
!1943 = !DILocation(line: 2262, column: 49, scope: !1940)
!1944 = !DILocalVariable(name: "s", scope: !1940, file: !904, line: 2264, type: !1707)
!1945 = !DILocation(line: 2264, column: 23, scope: !1940)
!1946 = !DILocation(line: 2264, column: 27, scope: !1940)
!1947 = !DILocation(line: 2264, column: 34, scope: !1940)
!1948 = !DILocation(line: 2266, column: 5, scope: !1940)
!1949 = !DILocation(line: 2266, column: 8, scope: !1940)
!1950 = !DILocation(line: 2266, column: 26, scope: !1940)
!1951 = !DILocation(line: 2267, column: 5, scope: !1940)
!1952 = !DILocation(line: 2267, column: 8, scope: !1940)
!1953 = !DILocation(line: 2267, column: 22, scope: !1940)
!1954 = !DILocation(line: 2268, column: 5, scope: !1940)
!1955 = !DILocation(line: 2268, column: 8, scope: !1940)
!1956 = !DILocation(line: 2268, column: 31, scope: !1940)
!1957 = !DILocation(line: 2269, column: 5, scope: !1940)
!1958 = !DILocation(line: 2269, column: 9, scope: !1940)
!1959 = !DILocation(line: 2269, column: 31, scope: !1940)
!1960 = !DILocation(line: 2270, column: 5, scope: !1940)
!1961 = !DILocation(line: 2270, column: 8, scope: !1940)
!1962 = !DILocation(line: 2270, column: 31, scope: !1940)
!1963 = !DILocation(line: 2271, column: 5, scope: !1940)
!1964 = !DILocation(line: 2271, column: 8, scope: !1940)
!1965 = !DILocation(line: 2271, column: 24, scope: !1940)
!1966 = !DILocation(line: 2272, column: 5, scope: !1940)
!1967 = !DILocation(line: 2272, column: 8, scope: !1940)
!1968 = !DILocation(line: 2272, column: 29, scope: !1940)
!1969 = !DILocation(line: 2273, column: 5, scope: !1940)
!1970 = !DILocation(line: 2273, column: 8, scope: !1940)
!1971 = !DILocation(line: 2273, column: 26, scope: !1940)
!1972 = !DILocation(line: 2274, column: 5, scope: !1940)
!1973 = !DILocation(line: 2274, column: 8, scope: !1940)
!1974 = !DILocation(line: 2274, column: 22, scope: !1940)
!1975 = !DILocation(line: 2275, column: 5, scope: !1940)
!1976 = !DILocation(line: 2275, column: 8, scope: !1940)
!1977 = !DILocation(line: 2275, column: 22, scope: !1940)
!1978 = !DILocation(line: 2276, column: 5, scope: !1940)
!1979 = !DILocation(line: 2276, column: 8, scope: !1940)
!1980 = !DILocation(line: 2276, column: 24, scope: !1940)
!1981 = !DILocation(line: 2278, column: 24, scope: !1940)
!1982 = !DILocation(line: 2278, column: 12, scope: !1940)
!1983 = !DILocation(line: 2278, column: 5, scope: !1940)
!1984 = distinct !DISubprogram(name: "vp3_update_thread_context", scope: !904, file: !904, line: 1963, type: !1548, isLocal: true, isDefinition: true, scopeLine: 1964, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!1985 = !DILocalVariable(name: "dst", arg: 1, scope: !1984, file: !904, line: 1963, type: !997)
!1986 = !DILocation(line: 1963, column: 54, scope: !1984)
!1987 = !DILocalVariable(name: "src", arg: 2, scope: !1984, file: !904, line: 1963, type: !1550)
!1988 = !DILocation(line: 1963, column: 81, scope: !1984)
!1989 = !DILocalVariable(name: "s", scope: !1984, file: !904, line: 1965, type: !1707)
!1990 = !DILocation(line: 1965, column: 23, scope: !1984)
!1991 = !DILocation(line: 1965, column: 27, scope: !1984)
!1992 = !DILocation(line: 1965, column: 32, scope: !1984)
!1993 = !DILocalVariable(name: "s1", scope: !1984, file: !904, line: 1965, type: !1707)
!1994 = !DILocation(line: 1965, column: 44, scope: !1984)
!1995 = !DILocation(line: 1965, column: 49, scope: !1984)
!1996 = !DILocation(line: 1965, column: 54, scope: !1984)
!1997 = !DILocalVariable(name: "qps_changed", scope: !1984, file: !904, line: 1966, type: !890)
!1998 = !DILocation(line: 1966, column: 9, scope: !1984)
!1999 = !DILocalVariable(name: "i", scope: !1984, file: !904, line: 1966, type: !890)
!2000 = !DILocation(line: 1966, column: 26, scope: !1984)
!2001 = !DILocalVariable(name: "err", scope: !1984, file: !904, line: 1966, type: !890)
!2002 = !DILocation(line: 1966, column: 29, scope: !1984)
!2003 = !DILocation(line: 1972, column: 10, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1984, file: !904, line: 1972, column: 9)
!2005 = !DILocation(line: 1972, column: 14, scope: !2004)
!2006 = !DILocation(line: 1972, column: 28, scope: !2004)
!2007 = !DILocation(line: 1972, column: 31, scope: !2004)
!2008 = !DILocation(line: 1972, column: 39, scope: !2004)
!2009 = !DILocation(line: 1973, column: 9, scope: !2004)
!2010 = !DILocation(line: 1973, column: 12, scope: !2004)
!2011 = !DILocation(line: 1973, column: 21, scope: !2004)
!2012 = !DILocation(line: 1973, column: 25, scope: !2004)
!2013 = !DILocation(line: 1973, column: 18, scope: !2004)
!2014 = !DILocation(line: 1973, column: 31, scope: !2004)
!2015 = !DILocation(line: 1973, column: 34, scope: !2016)
!2016 = !DILexicalBlockFile(scope: !2004, file: !904, discriminator: 1)
!2017 = !DILocation(line: 1973, column: 37, scope: !2016)
!2018 = !DILocation(line: 1973, column: 47, scope: !2016)
!2019 = !DILocation(line: 1973, column: 51, scope: !2016)
!2020 = !DILocation(line: 1973, column: 44, scope: !2016)
!2021 = !DILocation(line: 1972, column: 9, scope: !2022)
!2022 = !DILexicalBlockFile(scope: !1984, file: !904, discriminator: 1)
!2023 = !DILocation(line: 1974, column: 13, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !2025, file: !904, line: 1974, column: 13)
!2025 = distinct !DILexicalBlock(scope: !2004, file: !904, line: 1973, column: 59)
!2026 = !DILocation(line: 1974, column: 18, scope: !2024)
!2027 = !DILocation(line: 1974, column: 15, scope: !2024)
!2028 = !DILocation(line: 1974, column: 13, scope: !2025)
!2029 = !DILocation(line: 1975, column: 24, scope: !2024)
!2030 = !DILocation(line: 1975, column: 27, scope: !2024)
!2031 = !DILocation(line: 1975, column: 13, scope: !2024)
!2032 = !DILocation(line: 1976, column: 9, scope: !2025)
!2033 = !DILocation(line: 1979, column: 9, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !1984, file: !904, line: 1979, column: 9)
!2035 = !DILocation(line: 1979, column: 14, scope: !2034)
!2036 = !DILocation(line: 1979, column: 11, scope: !2034)
!2037 = !DILocation(line: 1979, column: 9, scope: !1984)
!2038 = !DILocation(line: 1980, column: 14, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2040, file: !904, line: 1980, column: 13)
!2040 = distinct !DILexicalBlock(scope: !2034, file: !904, line: 1979, column: 18)
!2041 = !DILocation(line: 1980, column: 17, scope: !2039)
!2042 = !DILocation(line: 1980, column: 31, scope: !2039)
!2043 = !DILocation(line: 1980, column: 13, scope: !2040)
!2044 = !DILocation(line: 1981, column: 13, scope: !2039)
!2045 = !DILocation(line: 1983, column: 14, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2040, file: !904, line: 1983, column: 13)
!2047 = !DILocation(line: 1983, column: 17, scope: !2046)
!2048 = !DILocation(line: 1983, column: 31, scope: !2046)
!2049 = !DILocation(line: 1983, column: 34, scope: !2046)
!2050 = !DILocation(line: 1983, column: 13, scope: !2040)
!2051 = !DILocalVariable(name: "y_fragment_count", scope: !2052, file: !904, line: 1984, type: !890)
!2052 = distinct !DILexicalBlock(scope: !2046, file: !904, line: 1983, column: 43)
!2053 = !DILocation(line: 1984, column: 17, scope: !2052)
!2054 = !DILocalVariable(name: "c_fragment_count", scope: !2052, file: !904, line: 1984, type: !890)
!2055 = !DILocation(line: 1984, column: 35, scope: !2052)
!2056 = !DILocation(line: 1985, column: 24, scope: !2052)
!2057 = !DILocation(line: 1985, column: 13, scope: !2052)
!2058 = !DILocation(line: 1985, column: 16, scope: !2052)
!2059 = !DILocation(line: 1985, column: 22, scope: !2052)
!2060 = !DILocation(line: 1986, column: 35, scope: !2052)
!2061 = !DILocation(line: 1986, column: 19, scope: !2052)
!2062 = !DILocation(line: 1986, column: 17, scope: !2052)
!2063 = !DILocation(line: 1987, column: 17, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !2052, file: !904, line: 1987, column: 17)
!2065 = !DILocation(line: 1987, column: 17, scope: !2052)
!2066 = !DILocation(line: 1988, column: 24, scope: !2064)
!2067 = !DILocation(line: 1988, column: 17, scope: !2064)
!2068 = !DILocation(line: 1989, column: 32, scope: !2052)
!2069 = !DILocation(line: 1989, column: 35, scope: !2052)
!2070 = !DILocation(line: 1989, column: 55, scope: !2052)
!2071 = !DILocation(line: 1989, column: 58, scope: !2052)
!2072 = !DILocation(line: 1989, column: 53, scope: !2052)
!2073 = !DILocation(line: 1989, column: 30, scope: !2052)
!2074 = !DILocation(line: 1990, column: 32, scope: !2052)
!2075 = !DILocation(line: 1990, column: 35, scope: !2052)
!2076 = !DILocation(line: 1990, column: 55, scope: !2052)
!2077 = !DILocation(line: 1990, column: 58, scope: !2052)
!2078 = !DILocation(line: 1990, column: 53, scope: !2052)
!2079 = !DILocation(line: 1990, column: 30, scope: !2052)
!2080 = !DILocation(line: 1991, column: 20, scope: !2052)
!2081 = !DILocation(line: 1991, column: 23, scope: !2052)
!2082 = !DILocation(line: 1991, column: 13, scope: !2052)
!2083 = !DILocation(line: 1991, column: 38, scope: !2052)
!2084 = !DILocation(line: 1991, column: 42, scope: !2052)
!2085 = !DILocation(line: 1992, column: 20, scope: !2052)
!2086 = !DILocation(line: 1992, column: 37, scope: !2052)
!2087 = !DILocation(line: 1993, column: 20, scope: !2052)
!2088 = !DILocation(line: 1993, column: 23, scope: !2052)
!2089 = !DILocation(line: 1993, column: 13, scope: !2052)
!2090 = !DILocation(line: 1993, column: 38, scope: !2052)
!2091 = !DILocation(line: 1993, column: 42, scope: !2052)
!2092 = !DILocation(line: 1994, column: 20, scope: !2052)
!2093 = !DILocation(line: 1994, column: 37, scope: !2052)
!2094 = !DILocation(line: 1995, column: 9, scope: !2052)
!2095 = !DILocation(line: 1998, column: 31, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2040, file: !904, line: 1998, column: 13)
!2097 = !DILocation(line: 1998, column: 34, scope: !2096)
!2098 = !DILocation(line: 1998, column: 20, scope: !2096)
!2099 = !DILocation(line: 1998, column: 18, scope: !2096)
!2100 = !DILocation(line: 1998, column: 39, scope: !2096)
!2101 = !DILocation(line: 1998, column: 13, scope: !2040)
!2102 = !DILocation(line: 1999, column: 20, scope: !2096)
!2103 = !DILocation(line: 1999, column: 13, scope: !2096)
!2104 = !DILocation(line: 2001, column: 23, scope: !2040)
!2105 = !DILocation(line: 2001, column: 27, scope: !2040)
!2106 = !DILocation(line: 2001, column: 9, scope: !2040)
!2107 = !DILocation(line: 2001, column: 12, scope: !2040)
!2108 = !DILocation(line: 2001, column: 21, scope: !2040)
!2109 = !DILocation(line: 2004, column: 16, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2040, file: !904, line: 2004, column: 9)
!2111 = !DILocation(line: 2004, column: 14, scope: !2110)
!2112 = !DILocation(line: 2004, column: 21, scope: !2113)
!2113 = !DILexicalBlockFile(scope: !2114, file: !904, discriminator: 1)
!2114 = distinct !DILexicalBlock(scope: !2110, file: !904, line: 2004, column: 9)
!2115 = !DILocation(line: 2004, column: 23, scope: !2113)
!2116 = !DILocation(line: 2004, column: 9, scope: !2113)
!2117 = !DILocation(line: 2005, column: 24, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2119, file: !904, line: 2005, column: 17)
!2119 = distinct !DILexicalBlock(scope: !2114, file: !904, line: 2004, column: 33)
!2120 = !DILocation(line: 2005, column: 17, scope: !2118)
!2121 = !DILocation(line: 2005, column: 20, scope: !2118)
!2122 = !DILocation(line: 2005, column: 30, scope: !2118)
!2123 = !DILocation(line: 2005, column: 34, scope: !2118)
!2124 = !DILocation(line: 2005, column: 27, scope: !2118)
!2125 = !DILocation(line: 2005, column: 17, scope: !2119)
!2126 = !DILocation(line: 2006, column: 29, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2118, file: !904, line: 2005, column: 42)
!2128 = !DILocation(line: 2007, column: 33, scope: !2127)
!2129 = !DILocation(line: 2007, column: 25, scope: !2127)
!2130 = !DILocation(line: 2007, column: 28, scope: !2127)
!2131 = !DILocation(line: 2007, column: 17, scope: !2127)
!2132 = !DILocation(line: 2007, column: 47, scope: !2127)
!2133 = !DILocation(line: 2007, column: 38, scope: !2127)
!2134 = !DILocation(line: 2007, column: 42, scope: !2127)
!2135 = !DILocation(line: 2008, column: 13, scope: !2127)
!2136 = !DILocation(line: 2009, column: 9, scope: !2119)
!2137 = !DILocation(line: 2004, column: 29, scope: !2138)
!2138 = !DILexicalBlockFile(scope: !2114, file: !904, discriminator: 2)
!2139 = !DILocation(line: 2004, column: 9, scope: !2138)
!2140 = distinct !{!2140, !2141}
!2141 = !DILocation(line: 2004, column: 9, scope: !2040)
!2142 = !DILocation(line: 2011, column: 13, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2040, file: !904, line: 2011, column: 13)
!2144 = !DILocation(line: 2011, column: 16, scope: !2143)
!2145 = !DILocation(line: 2011, column: 26, scope: !2143)
!2146 = !DILocation(line: 2011, column: 30, scope: !2143)
!2147 = !DILocation(line: 2011, column: 23, scope: !2143)
!2148 = !DILocation(line: 2011, column: 13, scope: !2040)
!2149 = !DILocation(line: 2012, column: 21, scope: !2143)
!2150 = !DILocation(line: 2012, column: 24, scope: !2143)
!2151 = !DILocation(line: 2012, column: 13, scope: !2143)
!2152 = !DILocation(line: 2012, column: 48, scope: !2143)
!2153 = !DILocation(line: 2012, column: 52, scope: !2143)
!2154 = !DILocation(line: 2015, column: 13, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2040, file: !904, line: 2015, column: 13)
!2156 = !DILocation(line: 2015, column: 13, scope: !2040)
!2157 = !DILocation(line: 2016, column: 21, scope: !2155)
!2158 = !DILocation(line: 2016, column: 24, scope: !2155)
!2159 = !DILocation(line: 2016, column: 13, scope: !2155)
!2160 = !DILocation(line: 2016, column: 30, scope: !2155)
!2161 = !DILocation(line: 2016, column: 34, scope: !2155)
!2162 = !DILocation(line: 2016, column: 49, scope: !2155)
!2163 = !DILocation(line: 2016, column: 52, scope: !2155)
!2164 = !DILocation(line: 2016, column: 39, scope: !2155)
!2165 = !DILocation(line: 2016, column: 81, scope: !2155)
!2166 = !DILocation(line: 2016, column: 84, scope: !2155)
!2167 = !DILocation(line: 2016, column: 71, scope: !2155)
!2168 = !DILocation(line: 2016, column: 69, scope: !2155)
!2169 = !DILocation(line: 2018, column: 5, scope: !2040)
!2170 = !DILocation(line: 2020, column: 26, scope: !1984)
!2171 = !DILocation(line: 2020, column: 12, scope: !1984)
!2172 = !DILocation(line: 2020, column: 5, scope: !1984)
!2173 = !DILocation(line: 2021, column: 1, scope: !1984)
!2174 = distinct !DISubprogram(name: "theora_decode_init", scope: !904, file: !904, line: 2507, type: !995, isLocal: true, isDefinition: true, scopeLine: 2508, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!2175 = !DILocalVariable(name: "avctx", arg: 1, scope: !2174, file: !904, line: 2507, type: !997)
!2176 = !DILocation(line: 2507, column: 69, scope: !2174)
!2177 = !DILocalVariable(name: "s", scope: !2174, file: !904, line: 2509, type: !1707)
!2178 = !DILocation(line: 2509, column: 23, scope: !2174)
!2179 = !DILocation(line: 2509, column: 27, scope: !2174)
!2180 = !DILocation(line: 2509, column: 34, scope: !2174)
!2181 = !DILocalVariable(name: "gb", scope: !2174, file: !904, line: 2510, type: !2182)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2183, line: 70, baseType: !2184)
!2183 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2183, line: 61, size: 256, align: 64, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2184, file: !2183, line: 62, baseType: !1442, size: 64, align: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2184, file: !2183, line: 62, baseType: !1442, size: 64, align: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2184, file: !2183, line: 67, baseType: !890, size: 32, align: 32, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2184, file: !2183, line: 68, baseType: !890, size: 32, align: 32, offset: 160)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2184, file: !2183, line: 69, baseType: !890, size: 32, align: 32, offset: 192)
!2191 = !DILocation(line: 2510, column: 19, scope: !2174)
!2192 = !DILocalVariable(name: "ptype", scope: !2174, file: !904, line: 2511, type: !890)
!2193 = !DILocation(line: 2511, column: 9, scope: !2174)
!2194 = !DILocalVariable(name: "header_start", scope: !2174, file: !904, line: 2512, type: !2195)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1442, size: 192, align: 64, elements: !1793)
!2196 = !DILocation(line: 2512, column: 20, scope: !2174)
!2197 = !DILocalVariable(name: "header_len", scope: !2174, file: !904, line: 2513, type: !1792)
!2198 = !DILocation(line: 2513, column: 9, scope: !2174)
!2199 = !DILocalVariable(name: "i", scope: !2174, file: !904, line: 2514, type: !890)
!2200 = !DILocation(line: 2514, column: 9, scope: !2174)
!2201 = !DILocalVariable(name: "ret", scope: !2174, file: !904, line: 2515, type: !890)
!2202 = !DILocation(line: 2515, column: 9, scope: !2174)
!2203 = !DILocation(line: 2517, column: 5, scope: !2174)
!2204 = !DILocation(line: 2517, column: 12, scope: !2174)
!2205 = !DILocation(line: 2517, column: 20, scope: !2174)
!2206 = !DILocation(line: 2519, column: 5, scope: !2174)
!2207 = !DILocation(line: 2519, column: 8, scope: !2174)
!2208 = !DILocation(line: 2519, column: 15, scope: !2174)
!2209 = !DILocation(line: 2521, column: 10, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2174, file: !904, line: 2521, column: 9)
!2211 = !DILocation(line: 2521, column: 17, scope: !2210)
!2212 = !DILocation(line: 2521, column: 9, scope: !2174)
!2213 = !DILocation(line: 2522, column: 16, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2210, file: !904, line: 2521, column: 33)
!2215 = !DILocation(line: 2522, column: 9, scope: !2214)
!2216 = !DILocation(line: 2523, column: 9, scope: !2214)
!2217 = !DILocation(line: 2526, column: 35, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2174, file: !904, line: 2526, column: 9)
!2219 = !DILocation(line: 2526, column: 42, scope: !2218)
!2220 = !DILocation(line: 2526, column: 53, scope: !2218)
!2221 = !DILocation(line: 2526, column: 60, scope: !2218)
!2222 = !DILocation(line: 2527, column: 39, scope: !2218)
!2223 = !DILocation(line: 2527, column: 53, scope: !2218)
!2224 = !DILocation(line: 2526, column: 9, scope: !2218)
!2225 = !DILocation(line: 2527, column: 65, scope: !2218)
!2226 = !DILocation(line: 2526, column: 9, scope: !2174)
!2227 = !DILocation(line: 2528, column: 16, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2218, file: !904, line: 2527, column: 70)
!2229 = !DILocation(line: 2528, column: 9, scope: !2228)
!2230 = !DILocation(line: 2529, column: 9, scope: !2228)
!2231 = !DILocation(line: 2532, column: 12, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2174, file: !904, line: 2532, column: 5)
!2233 = !DILocation(line: 2532, column: 10, scope: !2232)
!2234 = !DILocation(line: 2532, column: 17, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2236, file: !904, discriminator: 1)
!2236 = distinct !DILexicalBlock(scope: !2232, file: !904, line: 2532, column: 5)
!2237 = !DILocation(line: 2532, column: 19, scope: !2235)
!2238 = !DILocation(line: 2532, column: 5, scope: !2235)
!2239 = !DILocation(line: 2533, column: 24, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !904, line: 2533, column: 13)
!2241 = distinct !DILexicalBlock(scope: !2236, file: !904, line: 2532, column: 29)
!2242 = !DILocation(line: 2533, column: 13, scope: !2240)
!2243 = !DILocation(line: 2533, column: 27, scope: !2240)
!2244 = !DILocation(line: 2533, column: 13, scope: !2241)
!2245 = !DILocation(line: 2534, column: 13, scope: !2240)
!2246 = !DILocation(line: 2535, column: 48, scope: !2241)
!2247 = !DILocation(line: 2535, column: 35, scope: !2241)
!2248 = !DILocation(line: 2535, column: 63, scope: !2241)
!2249 = !DILocation(line: 2535, column: 52, scope: !2241)
!2250 = !DILocation(line: 2535, column: 15, scope: !2241)
!2251 = !DILocation(line: 2535, column: 13, scope: !2241)
!2252 = !DILocation(line: 2536, column: 13, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2241, file: !904, line: 2536, column: 13)
!2254 = !DILocation(line: 2536, column: 17, scope: !2253)
!2255 = !DILocation(line: 2536, column: 13, scope: !2241)
!2256 = !DILocation(line: 2537, column: 20, scope: !2253)
!2257 = !DILocation(line: 2537, column: 13, scope: !2253)
!2258 = !DILocation(line: 2539, column: 17, scope: !2241)
!2259 = !DILocation(line: 2539, column: 15, scope: !2241)
!2260 = !DILocation(line: 2541, column: 15, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2241, file: !904, line: 2541, column: 13)
!2262 = !DILocation(line: 2541, column: 21, scope: !2261)
!2263 = !DILocation(line: 2541, column: 13, scope: !2241)
!2264 = !DILocation(line: 2542, column: 20, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2261, file: !904, line: 2541, column: 30)
!2266 = !DILocation(line: 2542, column: 13, scope: !2265)
!2267 = !DILocation(line: 2544, column: 9, scope: !2265)
!2268 = !DILocation(line: 2547, column: 9, scope: !2241)
!2269 = !DILocation(line: 2549, column: 17, scope: !2241)
!2270 = !DILocation(line: 2549, column: 9, scope: !2241)
!2271 = !DILocation(line: 2551, column: 38, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2273, file: !904, line: 2551, column: 17)
!2273 = distinct !DILexicalBlock(scope: !2241, file: !904, line: 2549, column: 24)
!2274 = !DILocation(line: 2551, column: 17, scope: !2272)
!2275 = !DILocation(line: 2551, column: 50, scope: !2272)
!2276 = !DILocation(line: 2551, column: 17, scope: !2273)
!2277 = !DILocation(line: 2552, column: 17, scope: !2272)
!2278 = !DILocation(line: 2553, column: 13, scope: !2273)
!2279 = !DILocation(line: 2557, column: 13, scope: !2273)
!2280 = !DILocation(line: 2559, column: 38, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2273, file: !904, line: 2559, column: 17)
!2282 = !DILocation(line: 2559, column: 17, scope: !2281)
!2283 = !DILocation(line: 2559, column: 17, scope: !2273)
!2284 = !DILocation(line: 2560, column: 17, scope: !2281)
!2285 = !DILocation(line: 2561, column: 13, scope: !2273)
!2286 = !DILocation(line: 2563, column: 20, scope: !2273)
!2287 = !DILocation(line: 2564, column: 58, scope: !2273)
!2288 = !DILocation(line: 2564, column: 64, scope: !2273)
!2289 = !DILocation(line: 2563, column: 13, scope: !2273)
!2290 = !DILocation(line: 2565, column: 13, scope: !2273)
!2291 = !DILocation(line: 2567, column: 13, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2241, file: !904, line: 2567, column: 13)
!2293 = !DILocation(line: 2567, column: 19, scope: !2292)
!2294 = !DILocation(line: 2567, column: 27, scope: !2292)
!2295 = !DILocation(line: 2567, column: 45, scope: !2296)
!2296 = !DILexicalBlockFile(scope: !2292, file: !904, discriminator: 1)
!2297 = !DILocation(line: 2567, column: 34, scope: !2296)
!2298 = !DILocation(line: 2567, column: 32, scope: !2296)
!2299 = !DILocation(line: 2567, column: 51, scope: !2296)
!2300 = !DILocation(line: 2567, column: 48, scope: !2296)
!2301 = !DILocation(line: 2567, column: 13, scope: !2296)
!2302 = !DILocation(line: 2568, column: 20, scope: !2292)
!2303 = !DILocation(line: 2570, column: 35, scope: !2292)
!2304 = !DILocation(line: 2570, column: 24, scope: !2292)
!2305 = !DILocation(line: 2570, column: 22, scope: !2292)
!2306 = !DILocation(line: 2570, column: 40, scope: !2292)
!2307 = !DILocation(line: 2570, column: 38, scope: !2292)
!2308 = !DILocation(line: 2570, column: 61, scope: !2292)
!2309 = !DILocation(line: 2568, column: 13, scope: !2292)
!2310 = !DILocation(line: 2571, column: 13, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2241, file: !904, line: 2571, column: 13)
!2312 = !DILocation(line: 2571, column: 16, scope: !2311)
!2313 = !DILocation(line: 2571, column: 23, scope: !2311)
!2314 = !DILocation(line: 2571, column: 13, scope: !2241)
!2315 = !DILocation(line: 2572, column: 13, scope: !2311)
!2316 = !DILocation(line: 2573, column: 5, scope: !2241)
!2317 = !DILocation(line: 2532, column: 25, scope: !2318)
!2318 = !DILexicalBlockFile(scope: !2236, file: !904, discriminator: 2)
!2319 = !DILocation(line: 2532, column: 5, scope: !2318)
!2320 = distinct !{!2320, !2321}
!2321 = !DILocation(line: 2532, column: 5, scope: !2174)
!2322 = !DILocation(line: 2575, column: 28, scope: !2174)
!2323 = !DILocation(line: 2575, column: 12, scope: !2174)
!2324 = !DILocation(line: 2575, column: 5, scope: !2174)
!2325 = !DILocation(line: 2576, column: 1, scope: !2174)
!2326 = distinct !DISubprogram(name: "vp3_decode_frame", scope: !904, file: !904, line: 2024, type: !1608, isLocal: true, isDefinition: true, scopeLine: 2027, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!2327 = !DILocalVariable(name: "avctx", arg: 1, scope: !2326, file: !904, line: 2024, type: !997)
!2328 = !DILocation(line: 2024, column: 45, scope: !2326)
!2329 = !DILocalVariable(name: "data", arg: 2, scope: !2326, file: !904, line: 2025, type: !950)
!2330 = !DILocation(line: 2025, column: 35, scope: !2326)
!2331 = !DILocalVariable(name: "got_frame", arg: 3, scope: !2326, file: !904, line: 2025, type: !1292)
!2332 = !DILocation(line: 2025, column: 46, scope: !2326)
!2333 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2326, file: !904, line: 2026, type: !1146)
!2334 = !DILocation(line: 2026, column: 39, scope: !2326)
!2335 = !DILocalVariable(name: "frame", scope: !2326, file: !904, line: 2028, type: !1019)
!2336 = !DILocation(line: 2028, column: 14, scope: !2326)
!2337 = !DILocation(line: 2028, column: 22, scope: !2326)
!2338 = !DILocalVariable(name: "buf", scope: !2326, file: !904, line: 2029, type: !1442)
!2339 = !DILocation(line: 2029, column: 20, scope: !2326)
!2340 = !DILocation(line: 2029, column: 26, scope: !2326)
!2341 = !DILocation(line: 2029, column: 33, scope: !2326)
!2342 = !DILocalVariable(name: "buf_size", scope: !2326, file: !904, line: 2030, type: !890)
!2343 = !DILocation(line: 2030, column: 9, scope: !2326)
!2344 = !DILocation(line: 2030, column: 20, scope: !2326)
!2345 = !DILocation(line: 2030, column: 27, scope: !2326)
!2346 = !DILocalVariable(name: "s", scope: !2326, file: !904, line: 2031, type: !1707)
!2347 = !DILocation(line: 2031, column: 23, scope: !2326)
!2348 = !DILocation(line: 2031, column: 27, scope: !2326)
!2349 = !DILocation(line: 2031, column: 34, scope: !2326)
!2350 = !DILocalVariable(name: "gb", scope: !2326, file: !904, line: 2032, type: !2182)
!2351 = !DILocation(line: 2032, column: 19, scope: !2326)
!2352 = !DILocalVariable(name: "i", scope: !2326, file: !904, line: 2033, type: !890)
!2353 = !DILocation(line: 2033, column: 9, scope: !2326)
!2354 = !DILocalVariable(name: "ret", scope: !2326, file: !904, line: 2033, type: !890)
!2355 = !DILocation(line: 2033, column: 12, scope: !2326)
!2356 = !DILocation(line: 2035, column: 36, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2035, column: 9)
!2358 = !DILocation(line: 2035, column: 41, scope: !2357)
!2359 = !DILocation(line: 2035, column: 16, scope: !2357)
!2360 = !DILocation(line: 2035, column: 14, scope: !2357)
!2361 = !DILocation(line: 2035, column: 52, scope: !2357)
!2362 = !DILocation(line: 2035, column: 9, scope: !2326)
!2363 = !DILocation(line: 2036, column: 16, scope: !2357)
!2364 = !DILocation(line: 2036, column: 9, scope: !2357)
!2365 = !DILocation(line: 2039, column: 9, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2039, column: 9)
!2367 = !DILocation(line: 2039, column: 12, scope: !2366)
!2368 = !DILocation(line: 2039, column: 19, scope: !2366)
!2369 = !DILocation(line: 2039, column: 22, scope: !2370)
!2370 = !DILexicalBlockFile(scope: !2366, file: !904, discriminator: 1)
!2371 = !DILocation(line: 2039, column: 9, scope: !2370)
!2372 = !DILocalVariable(name: "type", scope: !2373, file: !904, line: 2040, type: !890)
!2373 = distinct !DILexicalBlock(scope: !2366, file: !904, line: 2039, column: 38)
!2374 = !DILocation(line: 2040, column: 13, scope: !2373)
!2375 = !DILocation(line: 2040, column: 20, scope: !2373)
!2376 = !DILocation(line: 2041, column: 9, scope: !2373)
!2377 = !DILocation(line: 2043, column: 13, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2373, file: !904, line: 2043, column: 13)
!2379 = !DILocation(line: 2043, column: 16, scope: !2378)
!2380 = !DILocation(line: 2043, column: 23, scope: !2378)
!2381 = !DILocation(line: 2043, column: 41, scope: !2378)
!2382 = !DILocation(line: 2043, column: 13, scope: !2373)
!2383 = !DILocation(line: 2044, column: 20, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2378, file: !904, line: 2043, column: 45)
!2385 = !DILocation(line: 2044, column: 13, scope: !2384)
!2386 = !DILocation(line: 2045, column: 13, scope: !2384)
!2387 = !DILocation(line: 2047, column: 13, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2373, file: !904, line: 2047, column: 13)
!2389 = !DILocation(line: 2047, column: 18, scope: !2388)
!2390 = !DILocation(line: 2047, column: 13, scope: !2373)
!2391 = !DILocation(line: 2048, column: 28, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2388, file: !904, line: 2047, column: 24)
!2393 = !DILocation(line: 2048, column: 13, scope: !2392)
!2394 = !DILocation(line: 2049, column: 40, scope: !2392)
!2395 = !DILocation(line: 2049, column: 19, scope: !2392)
!2396 = !DILocation(line: 2049, column: 17, scope: !2392)
!2397 = !DILocation(line: 2051, column: 17, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2392, file: !904, line: 2051, column: 17)
!2399 = !DILocation(line: 2051, column: 21, scope: !2398)
!2400 = !DILocation(line: 2051, column: 17, scope: !2392)
!2401 = !DILocation(line: 2052, column: 39, scope: !2398)
!2402 = !DILocation(line: 2052, column: 23, scope: !2398)
!2403 = !DILocation(line: 2052, column: 21, scope: !2398)
!2404 = !DILocation(line: 2052, column: 17, scope: !2398)
!2405 = !DILocation(line: 2053, column: 17, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2392, file: !904, line: 2053, column: 17)
!2407 = !DILocation(line: 2053, column: 21, scope: !2406)
!2408 = !DILocation(line: 2053, column: 17, scope: !2392)
!2409 = !DILocation(line: 2054, column: 32, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2406, file: !904, line: 2053, column: 26)
!2411 = !DILocation(line: 2054, column: 17, scope: !2410)
!2412 = !DILocation(line: 2055, column: 24, scope: !2410)
!2413 = !DILocation(line: 2055, column: 17, scope: !2410)
!2414 = !DILocation(line: 2057, column: 20, scope: !2392)
!2415 = !DILocation(line: 2057, column: 13, scope: !2392)
!2416 = !DILocation(line: 2058, column: 20, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2388, file: !904, line: 2058, column: 20)
!2418 = !DILocation(line: 2058, column: 25, scope: !2417)
!2419 = !DILocation(line: 2058, column: 20, scope: !2388)
!2420 = !DILocation(line: 2059, column: 28, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2417, file: !904, line: 2058, column: 31)
!2422 = !DILocation(line: 2059, column: 13, scope: !2421)
!2423 = !DILocation(line: 2060, column: 40, scope: !2421)
!2424 = !DILocation(line: 2060, column: 19, scope: !2421)
!2425 = !DILocation(line: 2060, column: 17, scope: !2421)
!2426 = !DILocation(line: 2061, column: 17, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2421, file: !904, line: 2061, column: 17)
!2428 = !DILocation(line: 2061, column: 21, scope: !2427)
!2429 = !DILocation(line: 2061, column: 17, scope: !2421)
!2430 = !DILocation(line: 2062, column: 39, scope: !2427)
!2431 = !DILocation(line: 2062, column: 23, scope: !2427)
!2432 = !DILocation(line: 2062, column: 21, scope: !2427)
!2433 = !DILocation(line: 2062, column: 17, scope: !2427)
!2434 = !DILocation(line: 2063, column: 17, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2421, file: !904, line: 2063, column: 17)
!2436 = !DILocation(line: 2063, column: 21, scope: !2435)
!2437 = !DILocation(line: 2063, column: 17, scope: !2421)
!2438 = !DILocation(line: 2064, column: 32, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2435, file: !904, line: 2063, column: 26)
!2440 = !DILocation(line: 2064, column: 17, scope: !2439)
!2441 = !DILocation(line: 2065, column: 24, scope: !2439)
!2442 = !DILocation(line: 2065, column: 17, scope: !2439)
!2443 = !DILocation(line: 2067, column: 20, scope: !2421)
!2444 = !DILocation(line: 2067, column: 13, scope: !2421)
!2445 = !DILocation(line: 2070, column: 16, scope: !2373)
!2446 = !DILocation(line: 2070, column: 9, scope: !2373)
!2447 = !DILocation(line: 2072, column: 9, scope: !2373)
!2448 = !DILocation(line: 2076, column: 20, scope: !2326)
!2449 = !DILocation(line: 2076, column: 19, scope: !2326)
!2450 = !DILocation(line: 2076, column: 5, scope: !2326)
!2451 = !DILocation(line: 2076, column: 8, scope: !2326)
!2452 = !DILocation(line: 2076, column: 17, scope: !2326)
!2453 = !DILocation(line: 2077, column: 10, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2077, column: 9)
!2455 = !DILocation(line: 2077, column: 13, scope: !2454)
!2456 = !DILocation(line: 2077, column: 9, scope: !2326)
!2457 = !DILocation(line: 2078, column: 16, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2454, file: !904, line: 2077, column: 28)
!2459 = !DILocation(line: 2078, column: 9, scope: !2458)
!2460 = !DILocation(line: 2079, column: 9, scope: !2458)
!2461 = !DILocation(line: 2081, column: 10, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2081, column: 9)
!2463 = !DILocation(line: 2081, column: 13, scope: !2462)
!2464 = !DILocation(line: 2081, column: 9, scope: !2326)
!2465 = !DILocation(line: 2082, column: 9, scope: !2462)
!2466 = !DILocation(line: 2083, column: 12, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2083, column: 5)
!2468 = !DILocation(line: 2083, column: 10, scope: !2467)
!2469 = !DILocation(line: 2083, column: 17, scope: !2470)
!2470 = !DILexicalBlockFile(scope: !2471, file: !904, discriminator: 1)
!2471 = distinct !DILexicalBlock(scope: !2467, file: !904, line: 2083, column: 5)
!2472 = !DILocation(line: 2083, column: 19, scope: !2470)
!2473 = !DILocation(line: 2083, column: 5, scope: !2470)
!2474 = !DILocation(line: 2084, column: 33, scope: !2471)
!2475 = !DILocation(line: 2084, column: 26, scope: !2471)
!2476 = !DILocation(line: 2084, column: 29, scope: !2471)
!2477 = !DILocation(line: 2084, column: 21, scope: !2471)
!2478 = !DILocation(line: 2084, column: 9, scope: !2471)
!2479 = !DILocation(line: 2084, column: 12, scope: !2471)
!2480 = !DILocation(line: 2084, column: 24, scope: !2471)
!2481 = !DILocation(line: 2083, column: 25, scope: !2482)
!2482 = !DILexicalBlockFile(scope: !2471, file: !904, discriminator: 2)
!2483 = !DILocation(line: 2083, column: 5, scope: !2482)
!2484 = distinct !{!2484, !2485}
!2485 = !DILocation(line: 2083, column: 5, scope: !2326)
!2486 = !DILocation(line: 2086, column: 5, scope: !2326)
!2487 = !DILocation(line: 2086, column: 8, scope: !2326)
!2488 = !DILocation(line: 2086, column: 13, scope: !2326)
!2489 = !DILocation(line: 2087, column: 5, scope: !2326)
!2490 = distinct !{!2490, !2489}
!2491 = !DILocation(line: 2088, column: 29, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2087, column: 8)
!2493 = !DILocation(line: 2088, column: 16, scope: !2492)
!2494 = !DILocation(line: 2088, column: 19, scope: !2492)
!2495 = !DILocation(line: 2088, column: 23, scope: !2492)
!2496 = !DILocation(line: 2088, column: 9, scope: !2492)
!2497 = !DILocation(line: 2088, column: 12, scope: !2492)
!2498 = !DILocation(line: 2088, column: 27, scope: !2492)
!2499 = !DILocation(line: 2089, column: 5, scope: !2492)
!2500 = !DILocation(line: 2089, column: 14, scope: !2501)
!2501 = !DILexicalBlockFile(scope: !2326, file: !904, discriminator: 1)
!2502 = !DILocation(line: 2089, column: 17, scope: !2501)
!2503 = !DILocation(line: 2089, column: 24, scope: !2501)
!2504 = !DILocation(line: 2089, column: 36, scope: !2501)
!2505 = !DILocation(line: 2089, column: 39, scope: !2506)
!2506 = !DILexicalBlockFile(scope: !2326, file: !904, discriminator: 2)
!2507 = !DILocation(line: 2089, column: 42, scope: !2506)
!2508 = !DILocation(line: 2089, column: 47, scope: !2506)
!2509 = !DILocation(line: 2089, column: 51, scope: !2506)
!2510 = !DILocation(line: 2089, column: 54, scope: !2511)
!2511 = !DILexicalBlockFile(scope: !2326, file: !904, discriminator: 3)
!2512 = !DILocation(line: 2089, column: 51, scope: !2511)
!2513 = !DILocation(line: 2089, column: 5, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2492, file: !904, discriminator: 4)
!2515 = !DILocation(line: 2090, column: 14, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2090, column: 5)
!2517 = !DILocation(line: 2090, column: 17, scope: !2516)
!2518 = !DILocation(line: 2090, column: 12, scope: !2516)
!2519 = !DILocation(line: 2090, column: 10, scope: !2516)
!2520 = !DILocation(line: 2090, column: 23, scope: !2521)
!2521 = !DILexicalBlockFile(scope: !2522, file: !904, discriminator: 1)
!2522 = distinct !DILexicalBlock(scope: !2516, file: !904, line: 2090, column: 5)
!2523 = !DILocation(line: 2090, column: 25, scope: !2521)
!2524 = !DILocation(line: 2090, column: 5, scope: !2521)
!2525 = !DILocation(line: 2091, column: 16, scope: !2522)
!2526 = !DILocation(line: 2091, column: 9, scope: !2522)
!2527 = !DILocation(line: 2091, column: 12, scope: !2522)
!2528 = !DILocation(line: 2091, column: 19, scope: !2522)
!2529 = !DILocation(line: 2090, column: 31, scope: !2530)
!2530 = !DILexicalBlockFile(scope: !2522, file: !904, discriminator: 2)
!2531 = !DILocation(line: 2090, column: 5, scope: !2530)
!2532 = distinct !{!2532, !2533}
!2533 = !DILocation(line: 2090, column: 5, scope: !2326)
!2534 = !DILocation(line: 2093, column: 9, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2093, column: 9)
!2536 = !DILocation(line: 2093, column: 12, scope: !2535)
!2537 = !DILocation(line: 2093, column: 19, scope: !2535)
!2538 = !DILocation(line: 2093, column: 25, scope: !2535)
!2539 = !DILocation(line: 2093, column: 9, scope: !2326)
!2540 = !DILocation(line: 2094, column: 16, scope: !2535)
!2541 = !DILocation(line: 2094, column: 19, scope: !2535)
!2542 = !DILocation(line: 2095, column: 16, scope: !2535)
!2543 = !DILocation(line: 2095, column: 19, scope: !2535)
!2544 = !DILocation(line: 2095, column: 42, scope: !2535)
!2545 = !DILocation(line: 2095, column: 49, scope: !2535)
!2546 = !DILocation(line: 2095, column: 62, scope: !2535)
!2547 = !DILocation(line: 2095, column: 67, scope: !2535)
!2548 = !DILocation(line: 2095, column: 70, scope: !2535)
!2549 = !DILocation(line: 2094, column: 9, scope: !2535)
!2550 = !DILocation(line: 2097, column: 51, scope: !2326)
!2551 = !DILocation(line: 2097, column: 54, scope: !2326)
!2552 = !DILocation(line: 2097, column: 28, scope: !2326)
!2553 = !DILocation(line: 2097, column: 31, scope: !2326)
!2554 = !DILocation(line: 2097, column: 62, scope: !2326)
!2555 = !DILocation(line: 2098, column: 27, scope: !2326)
!2556 = !DILocation(line: 2098, column: 34, scope: !2326)
!2557 = !DILocation(line: 2098, column: 55, scope: !2326)
!2558 = !DILocation(line: 2098, column: 58, scope: !2326)
!2559 = !DILocation(line: 2098, column: 51, scope: !2326)
!2560 = !DILocation(line: 2097, column: 62, scope: !2501)
!2561 = !DILocation(line: 2097, column: 62, scope: !2506)
!2562 = !DILocation(line: 2097, column: 5, scope: !2506)
!2563 = !DILocation(line: 2097, column: 8, scope: !2506)
!2564 = !DILocation(line: 2097, column: 25, scope: !2506)
!2565 = !DILocation(line: 2101, column: 9, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2101, column: 9)
!2567 = !DILocation(line: 2101, column: 12, scope: !2566)
!2568 = !DILocation(line: 2101, column: 22, scope: !2566)
!2569 = !DILocation(line: 2101, column: 25, scope: !2566)
!2570 = !DILocation(line: 2101, column: 19, scope: !2566)
!2571 = !DILocation(line: 2101, column: 9, scope: !2326)
!2572 = !DILocation(line: 2102, column: 26, scope: !2566)
!2573 = !DILocation(line: 2102, column: 9, scope: !2566)
!2574 = !DILocation(line: 2104, column: 12, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2104, column: 5)
!2576 = !DILocation(line: 2104, column: 10, scope: !2575)
!2577 = !DILocation(line: 2104, column: 17, scope: !2578)
!2578 = !DILexicalBlockFile(scope: !2579, file: !904, discriminator: 1)
!2579 = distinct !DILexicalBlock(scope: !2575, file: !904, line: 2104, column: 5)
!2580 = !DILocation(line: 2104, column: 21, scope: !2578)
!2581 = !DILocation(line: 2104, column: 24, scope: !2578)
!2582 = !DILocation(line: 2104, column: 19, scope: !2578)
!2583 = !DILocation(line: 2104, column: 5, scope: !2578)
!2584 = !DILocation(line: 2107, column: 20, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2579, file: !904, line: 2107, column: 13)
!2586 = !DILocation(line: 2107, column: 13, scope: !2585)
!2587 = !DILocation(line: 2107, column: 16, scope: !2585)
!2588 = !DILocation(line: 2107, column: 38, scope: !2585)
!2589 = !DILocation(line: 2107, column: 26, scope: !2585)
!2590 = !DILocation(line: 2107, column: 29, scope: !2585)
!2591 = !DILocation(line: 2107, column: 23, scope: !2585)
!2592 = !DILocation(line: 2107, column: 41, scope: !2585)
!2593 = !DILocation(line: 2107, column: 44, scope: !2594)
!2594 = !DILexicalBlockFile(scope: !2585, file: !904, discriminator: 1)
!2595 = !DILocation(line: 2107, column: 47, scope: !2594)
!2596 = !DILocation(line: 2107, column: 57, scope: !2594)
!2597 = !DILocation(line: 2107, column: 60, scope: !2594)
!2598 = !DILocation(line: 2107, column: 54, scope: !2594)
!2599 = !DILocation(line: 2107, column: 13, scope: !2594)
!2600 = !DILocation(line: 2108, column: 30, scope: !2585)
!2601 = !DILocation(line: 2108, column: 33, scope: !2585)
!2602 = !DILocation(line: 2108, column: 13, scope: !2585)
!2603 = !DILocation(line: 2107, column: 70, scope: !2604)
!2604 = !DILexicalBlockFile(scope: !2585, file: !904, discriminator: 2)
!2605 = !DILocation(line: 2104, column: 31, scope: !2606)
!2606 = !DILexicalBlockFile(scope: !2579, file: !904, discriminator: 2)
!2607 = !DILocation(line: 2104, column: 5, scope: !2606)
!2608 = distinct !{!2608, !2609}
!2609 = !DILocation(line: 2104, column: 5, scope: !2326)
!2610 = !DILocation(line: 2110, column: 9, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2110, column: 9)
!2612 = !DILocation(line: 2110, column: 16, scope: !2611)
!2613 = !DILocation(line: 2110, column: 27, scope: !2611)
!2614 = !DILocation(line: 2110, column: 47, scope: !2611)
!2615 = !DILocation(line: 2110, column: 51, scope: !2616)
!2616 = !DILexicalBlockFile(scope: !2611, file: !904, discriminator: 1)
!2617 = !DILocation(line: 2110, column: 54, scope: !2616)
!2618 = !DILocation(line: 2110, column: 9, scope: !2616)
!2619 = !DILocation(line: 2111, column: 16, scope: !2611)
!2620 = !DILocation(line: 2111, column: 9, scope: !2611)
!2621 = !DILocation(line: 2113, column: 37, scope: !2326)
!2622 = !DILocation(line: 2113, column: 40, scope: !2326)
!2623 = !DILocation(line: 2113, column: 5, scope: !2326)
!2624 = !DILocation(line: 2113, column: 8, scope: !2326)
!2625 = !DILocation(line: 2113, column: 22, scope: !2326)
!2626 = !DILocation(line: 2113, column: 25, scope: !2326)
!2627 = !DILocation(line: 2113, column: 35, scope: !2326)
!2628 = !DILocation(line: 2115, column: 37, scope: !2326)
!2629 = !DILocation(line: 2115, column: 40, scope: !2326)
!2630 = !DILocation(line: 2115, column: 5, scope: !2326)
!2631 = !DILocation(line: 2115, column: 8, scope: !2326)
!2632 = !DILocation(line: 2115, column: 22, scope: !2326)
!2633 = !DILocation(line: 2115, column: 25, scope: !2326)
!2634 = !DILocation(line: 2115, column: 35, scope: !2326)
!2635 = !DILocation(line: 2116, column: 30, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2116, column: 9)
!2637 = !DILocation(line: 2116, column: 38, scope: !2636)
!2638 = !DILocation(line: 2116, column: 41, scope: !2636)
!2639 = !DILocation(line: 2116, column: 9, scope: !2636)
!2640 = !DILocation(line: 2116, column: 66, scope: !2636)
!2641 = !DILocation(line: 2116, column: 9, scope: !2326)
!2642 = !DILocation(line: 2117, column: 9, scope: !2636)
!2643 = !DILocation(line: 2119, column: 10, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2119, column: 9)
!2645 = !DILocation(line: 2119, column: 13, scope: !2644)
!2646 = !DILocation(line: 2119, column: 9, scope: !2326)
!2647 = !DILocation(line: 2120, column: 46, scope: !2644)
!2648 = !DILocation(line: 2120, column: 49, scope: !2644)
!2649 = !DILocation(line: 2120, column: 63, scope: !2644)
!2650 = !DILocation(line: 2120, column: 66, scope: !2644)
!2651 = !DILocation(line: 2120, column: 79, scope: !2644)
!2652 = !DILocation(line: 2120, column: 45, scope: !2644)
!2653 = !DILocation(line: 2120, column: 87, scope: !2654)
!2654 = !DILexicalBlockFile(scope: !2644, file: !904, discriminator: 1)
!2655 = !DILocation(line: 2120, column: 90, scope: !2654)
!2656 = !DILocation(line: 2120, column: 104, scope: !2654)
!2657 = !DILocation(line: 2120, column: 107, scope: !2654)
!2658 = !DILocation(line: 2120, column: 45, scope: !2654)
!2659 = !DILocation(line: 2120, column: 125, scope: !2660)
!2660 = !DILexicalBlockFile(scope: !2644, file: !904, discriminator: 2)
!2661 = !DILocation(line: 2120, column: 128, scope: !2660)
!2662 = !DILocation(line: 2120, column: 142, scope: !2660)
!2663 = !DILocation(line: 2120, column: 145, scope: !2660)
!2664 = !DILocation(line: 2120, column: 123, scope: !2660)
!2665 = !DILocation(line: 2120, column: 45, scope: !2660)
!2666 = !DILocation(line: 2120, column: 45, scope: !2667)
!2667 = !DILexicalBlockFile(scope: !2644, file: !904, discriminator: 3)
!2668 = !DILocation(line: 2120, column: 42, scope: !2667)
!2669 = !DILocation(line: 2120, column: 40, scope: !2667)
!2670 = !DILocation(line: 2120, column: 30, scope: !2667)
!2671 = !DILocation(line: 2120, column: 9, scope: !2667)
!2672 = !DILocation(line: 2120, column: 12, scope: !2667)
!2673 = !DILocation(line: 2120, column: 28, scope: !2667)
!2674 = !DILocation(line: 2122, column: 9, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2122, column: 9)
!2676 = !DILocation(line: 2122, column: 12, scope: !2675)
!2677 = !DILocation(line: 2122, column: 9, scope: !2326)
!2678 = !DILocation(line: 2123, column: 14, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2680, file: !904, line: 2123, column: 13)
!2680 = distinct !DILexicalBlock(scope: !2675, file: !904, line: 2122, column: 22)
!2681 = !DILocation(line: 2123, column: 17, scope: !2679)
!2682 = !DILocation(line: 2123, column: 13, scope: !2680)
!2683 = !DILocation(line: 2124, column: 13, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2679, file: !904, line: 2123, column: 25)
!2685 = !DILocation(line: 2125, column: 13, scope: !2684)
!2686 = !DILocation(line: 2126, column: 17, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2684, file: !904, line: 2126, column: 17)
!2688 = !DILocation(line: 2126, column: 20, scope: !2687)
!2689 = !DILocation(line: 2126, column: 17, scope: !2684)
!2690 = !DILocation(line: 2127, column: 30, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2687, file: !904, line: 2126, column: 29)
!2692 = !DILocation(line: 2127, column: 17, scope: !2691)
!2693 = !DILocation(line: 2127, column: 20, scope: !2691)
!2694 = !DILocation(line: 2127, column: 28, scope: !2691)
!2695 = !DILocation(line: 2128, column: 21, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2691, file: !904, line: 2128, column: 21)
!2697 = !DILocation(line: 2128, column: 28, scope: !2696)
!2698 = !DILocation(line: 2128, column: 41, scope: !2696)
!2699 = !DILocation(line: 2128, column: 21, scope: !2691)
!2700 = !DILocation(line: 2129, column: 28, scope: !2696)
!2701 = !DILocation(line: 2129, column: 31, scope: !2696)
!2702 = !DILocation(line: 2130, column: 48, scope: !2696)
!2703 = !DILocation(line: 2130, column: 51, scope: !2696)
!2704 = !DILocation(line: 2129, column: 21, scope: !2696)
!2705 = !DILocation(line: 2131, column: 13, scope: !2691)
!2706 = !DILocation(line: 2132, column: 9, scope: !2684)
!2707 = !DILocation(line: 2133, column: 13, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2680, file: !904, line: 2133, column: 13)
!2709 = !DILocation(line: 2133, column: 16, scope: !2708)
!2710 = !DILocation(line: 2133, column: 24, scope: !2708)
!2711 = !DILocation(line: 2133, column: 27, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2708, file: !904, discriminator: 1)
!2713 = !DILocation(line: 2133, column: 30, scope: !2712)
!2714 = !DILocation(line: 2133, column: 13, scope: !2712)
!2715 = !DILocation(line: 2134, column: 17, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2717, file: !904, line: 2134, column: 17)
!2717 = distinct !DILexicalBlock(scope: !2708, file: !904, line: 2133, column: 38)
!2718 = !DILocation(line: 2134, column: 17, scope: !2717)
!2719 = !DILocation(line: 2135, column: 24, scope: !2716)
!2720 = !DILocation(line: 2135, column: 27, scope: !2716)
!2721 = !DILocation(line: 2135, column: 17, scope: !2716)
!2722 = !DILocation(line: 2137, column: 13, scope: !2717)
!2723 = !DILocation(line: 2138, column: 9, scope: !2717)
!2724 = !DILocation(line: 2139, column: 5, scope: !2680)
!2725 = !DILocation(line: 2140, column: 14, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2727, file: !904, line: 2140, column: 13)
!2727 = distinct !DILexicalBlock(scope: !2675, file: !904, line: 2139, column: 12)
!2728 = !DILocation(line: 2140, column: 17, scope: !2726)
!2729 = !DILocation(line: 2140, column: 30, scope: !2726)
!2730 = !DILocation(line: 2140, column: 33, scope: !2726)
!2731 = !DILocation(line: 2140, column: 13, scope: !2727)
!2732 = !DILocation(line: 2141, column: 20, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2726, file: !904, line: 2140, column: 42)
!2734 = !DILocation(line: 2141, column: 23, scope: !2733)
!2735 = !DILocation(line: 2141, column: 13, scope: !2733)
!2736 = !DILocation(line: 2144, column: 13, scope: !2733)
!2737 = !DILocation(line: 2144, column: 16, scope: !2733)
!2738 = !DILocation(line: 2144, column: 29, scope: !2733)
!2739 = !DILocation(line: 2144, column: 32, scope: !2733)
!2740 = !DILocation(line: 2144, column: 42, scope: !2733)
!2741 = !DILocation(line: 2145, column: 38, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2733, file: !904, line: 2145, column: 17)
!2743 = !DILocation(line: 2145, column: 46, scope: !2742)
!2744 = !DILocation(line: 2145, column: 49, scope: !2742)
!2745 = !DILocation(line: 2145, column: 17, scope: !2742)
!2746 = !DILocation(line: 2146, column: 48, scope: !2742)
!2747 = !DILocation(line: 2145, column: 17, scope: !2733)
!2748 = !DILocation(line: 2147, column: 17, scope: !2742)
!2749 = !DILocation(line: 2148, column: 38, scope: !2733)
!2750 = !DILocation(line: 2148, column: 46, scope: !2733)
!2751 = !DILocation(line: 2148, column: 49, scope: !2733)
!2752 = !DILocation(line: 2148, column: 13, scope: !2733)
!2753 = !DILocation(line: 2149, column: 45, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2733, file: !904, line: 2149, column: 17)
!2755 = !DILocation(line: 2149, column: 48, scope: !2754)
!2756 = !DILocation(line: 2150, column: 45, scope: !2754)
!2757 = !DILocation(line: 2150, column: 48, scope: !2754)
!2758 = !DILocation(line: 2149, column: 24, scope: !2754)
!2759 = !DILocation(line: 2149, column: 22, scope: !2754)
!2760 = !DILocation(line: 2150, column: 63, scope: !2754)
!2761 = !DILocation(line: 2149, column: 17, scope: !2733)
!2762 = !DILocation(line: 2151, column: 17, scope: !2754)
!2763 = !DILocation(line: 2152, column: 40, scope: !2733)
!2764 = !DILocation(line: 2152, column: 43, scope: !2733)
!2765 = !DILocation(line: 2152, column: 13, scope: !2733)
!2766 = !DILocation(line: 2153, column: 9, scope: !2733)
!2767 = !DILocation(line: 2156, column: 12, scope: !2326)
!2768 = !DILocation(line: 2156, column: 15, scope: !2326)
!2769 = !DILocation(line: 2156, column: 5, scope: !2326)
!2770 = !DILocation(line: 2156, column: 33, scope: !2326)
!2771 = !DILocation(line: 2156, column: 36, scope: !2326)
!2772 = !DILocation(line: 2156, column: 51, scope: !2326)
!2773 = !DILocation(line: 2157, column: 28, scope: !2326)
!2774 = !DILocation(line: 2157, column: 5, scope: !2326)
!2775 = !DILocation(line: 2159, column: 28, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2159, column: 9)
!2777 = !DILocation(line: 2159, column: 9, scope: !2776)
!2778 = !DILocation(line: 2159, column: 9, scope: !2326)
!2779 = !DILocation(line: 2160, column: 16, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2776, file: !904, line: 2159, column: 37)
!2781 = !DILocation(line: 2160, column: 19, scope: !2780)
!2782 = !DILocation(line: 2160, column: 9, scope: !2780)
!2783 = !DILocation(line: 2161, column: 9, scope: !2780)
!2784 = !DILocation(line: 2163, column: 22, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2163, column: 9)
!2786 = !DILocation(line: 2163, column: 9, scope: !2785)
!2787 = !DILocation(line: 2163, column: 9, scope: !2326)
!2788 = !DILocation(line: 2164, column: 16, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !904, line: 2163, column: 31)
!2790 = !DILocation(line: 2164, column: 19, scope: !2789)
!2791 = !DILocation(line: 2164, column: 9, scope: !2789)
!2792 = !DILocation(line: 2165, column: 9, scope: !2789)
!2793 = !DILocation(line: 2167, column: 24, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2167, column: 9)
!2795 = !DILocation(line: 2167, column: 9, scope: !2794)
!2796 = !DILocation(line: 2167, column: 9, scope: !2326)
!2797 = !DILocation(line: 2168, column: 16, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2794, file: !904, line: 2167, column: 33)
!2799 = !DILocation(line: 2168, column: 19, scope: !2798)
!2800 = !DILocation(line: 2168, column: 9, scope: !2798)
!2801 = !DILocation(line: 2169, column: 9, scope: !2798)
!2802 = !DILocation(line: 2171, column: 27, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2171, column: 9)
!2804 = !DILocation(line: 2171, column: 9, scope: !2803)
!2805 = !DILocation(line: 2171, column: 9, scope: !2326)
!2806 = !DILocation(line: 2172, column: 16, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2803, file: !904, line: 2171, column: 36)
!2808 = !DILocation(line: 2172, column: 19, scope: !2807)
!2809 = !DILocation(line: 2172, column: 9, scope: !2807)
!2810 = !DILocation(line: 2173, column: 9, scope: !2807)
!2811 = !DILocation(line: 2175, column: 27, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2175, column: 9)
!2813 = !DILocation(line: 2175, column: 9, scope: !2812)
!2814 = !DILocation(line: 2175, column: 9, scope: !2326)
!2815 = !DILocation(line: 2176, column: 16, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2812, file: !904, line: 2175, column: 36)
!2817 = !DILocation(line: 2176, column: 19, scope: !2816)
!2818 = !DILocation(line: 2176, column: 9, scope: !2816)
!2819 = !DILocation(line: 2177, column: 9, scope: !2816)
!2820 = !DILocation(line: 2180, column: 12, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2180, column: 5)
!2822 = !DILocation(line: 2180, column: 10, scope: !2821)
!2823 = !DILocation(line: 2180, column: 17, scope: !2824)
!2824 = !DILexicalBlockFile(scope: !2825, file: !904, discriminator: 1)
!2825 = distinct !DILexicalBlock(scope: !2821, file: !904, line: 2180, column: 5)
!2826 = !DILocation(line: 2180, column: 19, scope: !2824)
!2827 = !DILocation(line: 2180, column: 5, scope: !2824)
!2828 = !DILocalVariable(name: "height", scope: !2829, file: !904, line: 2181, type: !890)
!2829 = distinct !DILexicalBlock(scope: !2825, file: !904, line: 2180, column: 29)
!2830 = !DILocation(line: 2181, column: 13, scope: !2829)
!2831 = !DILocation(line: 2181, column: 22, scope: !2829)
!2832 = !DILocation(line: 2181, column: 25, scope: !2829)
!2833 = !DILocation(line: 2181, column: 36, scope: !2829)
!2834 = !DILocation(line: 2181, column: 38, scope: !2829)
!2835 = !DILocation(line: 2181, column: 41, scope: !2836)
!2836 = !DILexicalBlockFile(scope: !2829, file: !904, discriminator: 1)
!2837 = !DILocation(line: 2181, column: 44, scope: !2836)
!2838 = !DILocation(line: 2181, column: 38, scope: !2836)
!2839 = !DILocation(line: 2181, column: 38, scope: !2840)
!2840 = !DILexicalBlockFile(scope: !2829, file: !904, discriminator: 2)
!2841 = !DILocation(line: 2181, column: 32, scope: !2840)
!2842 = !DILocation(line: 2181, column: 13, scope: !2840)
!2843 = !DILocation(line: 2182, column: 13, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2829, file: !904, line: 2182, column: 13)
!2845 = !DILocation(line: 2182, column: 16, scope: !2844)
!2846 = !DILocation(line: 2182, column: 13, scope: !2829)
!2847 = !DILocation(line: 2183, column: 28, scope: !2844)
!2848 = !DILocation(line: 2183, column: 13, scope: !2844)
!2849 = !DILocation(line: 2183, column: 16, scope: !2844)
!2850 = !DILocation(line: 2183, column: 31, scope: !2844)
!2851 = !DILocation(line: 2185, column: 34, scope: !2844)
!2852 = !DILocation(line: 2185, column: 41, scope: !2844)
!2853 = !DILocation(line: 2185, column: 77, scope: !2844)
!2854 = !DILocation(line: 2185, column: 48, scope: !2844)
!2855 = !DILocation(line: 2185, column: 51, scope: !2844)
!2856 = !DILocation(line: 2185, column: 65, scope: !2844)
!2857 = !DILocation(line: 2185, column: 68, scope: !2844)
!2858 = !DILocation(line: 2185, column: 46, scope: !2844)
!2859 = !DILocation(line: 2185, column: 28, scope: !2844)
!2860 = !DILocation(line: 2185, column: 13, scope: !2844)
!2861 = !DILocation(line: 2185, column: 16, scope: !2844)
!2862 = !DILocation(line: 2185, column: 31, scope: !2844)
!2863 = !DILocation(line: 2186, column: 5, scope: !2829)
!2864 = !DILocation(line: 2180, column: 25, scope: !2865)
!2865 = !DILexicalBlockFile(scope: !2825, file: !904, discriminator: 2)
!2866 = !DILocation(line: 2180, column: 5, scope: !2865)
!2867 = distinct !{!2867, !2868}
!2868 = !DILocation(line: 2180, column: 5, scope: !2326)
!2869 = !DILocation(line: 2188, column: 5, scope: !2326)
!2870 = !DILocation(line: 2188, column: 8, scope: !2326)
!2871 = !DILocation(line: 2188, column: 23, scope: !2326)
!2872 = !DILocation(line: 2189, column: 12, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2189, column: 5)
!2874 = !DILocation(line: 2189, column: 10, scope: !2873)
!2875 = !DILocation(line: 2189, column: 17, scope: !2876)
!2876 = !DILexicalBlockFile(scope: !2877, file: !904, discriminator: 1)
!2877 = distinct !DILexicalBlock(scope: !2873, file: !904, line: 2189, column: 5)
!2878 = !DILocation(line: 2189, column: 21, scope: !2876)
!2879 = !DILocation(line: 2189, column: 24, scope: !2876)
!2880 = !DILocation(line: 2189, column: 19, scope: !2876)
!2881 = !DILocation(line: 2189, column: 5, scope: !2876)
!2882 = !DILocation(line: 2190, column: 22, scope: !2877)
!2883 = !DILocation(line: 2190, column: 25, scope: !2877)
!2884 = !DILocation(line: 2190, column: 9, scope: !2877)
!2885 = !DILocation(line: 2189, column: 46, scope: !2886)
!2886 = !DILexicalBlockFile(scope: !2877, file: !904, discriminator: 2)
!2887 = !DILocation(line: 2189, column: 5, scope: !2886)
!2888 = distinct !{!2888, !2889}
!2889 = !DILocation(line: 2189, column: 5, scope: !2326)
!2890 = !DILocation(line: 2193, column: 12, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2193, column: 5)
!2892 = !DILocation(line: 2193, column: 10, scope: !2891)
!2893 = !DILocation(line: 2193, column: 17, scope: !2894)
!2894 = !DILexicalBlockFile(scope: !2895, file: !904, discriminator: 1)
!2895 = distinct !DILexicalBlock(scope: !2891, file: !904, line: 2193, column: 5)
!2896 = !DILocation(line: 2193, column: 19, scope: !2894)
!2897 = !DILocation(line: 2193, column: 5, scope: !2894)
!2898 = !DILocalVariable(name: "row", scope: !2899, file: !904, line: 2194, type: !890)
!2899 = distinct !DILexicalBlock(scope: !2895, file: !904, line: 2193, column: 29)
!2900 = !DILocation(line: 2194, column: 13, scope: !2899)
!2901 = !DILocation(line: 2194, column: 20, scope: !2899)
!2902 = !DILocation(line: 2194, column: 23, scope: !2899)
!2903 = !DILocation(line: 2194, column: 39, scope: !2899)
!2904 = !DILocation(line: 2194, column: 41, scope: !2899)
!2905 = !DILocation(line: 2194, column: 44, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !2899, file: !904, discriminator: 1)
!2907 = !DILocation(line: 2194, column: 47, scope: !2906)
!2908 = !DILocation(line: 2194, column: 41, scope: !2906)
!2909 = !DILocation(line: 2194, column: 41, scope: !2910)
!2910 = !DILexicalBlockFile(scope: !2899, file: !904, discriminator: 2)
!2911 = !DILocation(line: 2194, column: 36, scope: !2910)
!2912 = !DILocation(line: 2194, column: 30, scope: !2910)
!2913 = !DILocation(line: 2194, column: 65, scope: !2910)
!2914 = !DILocation(line: 2194, column: 13, scope: !2910)
!2915 = !DILocation(line: 2195, column: 27, scope: !2899)
!2916 = !DILocation(line: 2195, column: 30, scope: !2899)
!2917 = !DILocation(line: 2195, column: 33, scope: !2899)
!2918 = !DILocation(line: 2195, column: 38, scope: !2899)
!2919 = !DILocation(line: 2195, column: 42, scope: !2899)
!2920 = !DILocation(line: 2195, column: 9, scope: !2899)
!2921 = !DILocation(line: 2196, column: 5, scope: !2899)
!2922 = !DILocation(line: 2193, column: 25, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2895, file: !904, discriminator: 2)
!2924 = !DILocation(line: 2193, column: 5, scope: !2923)
!2925 = distinct !{!2925, !2926}
!2926 = !DILocation(line: 2193, column: 5, scope: !2326)
!2927 = !DILocation(line: 2197, column: 25, scope: !2326)
!2928 = !DILocation(line: 2197, column: 28, scope: !2326)
!2929 = !DILocation(line: 2197, column: 31, scope: !2326)
!2930 = !DILocation(line: 2197, column: 5, scope: !2326)
!2931 = !DILocation(line: 2200, column: 29, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2200, column: 9)
!2933 = !DILocation(line: 2200, column: 35, scope: !2932)
!2934 = !DILocation(line: 2200, column: 38, scope: !2932)
!2935 = !DILocation(line: 2200, column: 52, scope: !2932)
!2936 = !DILocation(line: 2200, column: 16, scope: !2932)
!2937 = !DILocation(line: 2200, column: 14, scope: !2932)
!2938 = !DILocation(line: 2200, column: 56, scope: !2932)
!2939 = !DILocation(line: 2200, column: 9, scope: !2326)
!2940 = !DILocation(line: 2201, column: 16, scope: !2932)
!2941 = !DILocation(line: 2201, column: 9, scope: !2932)
!2942 = !DILocation(line: 2203, column: 24, scope: !2326)
!2943 = !DILocation(line: 2203, column: 27, scope: !2326)
!2944 = !DILocation(line: 2203, column: 5, scope: !2326)
!2945 = !DILocation(line: 2203, column: 12, scope: !2326)
!2946 = !DILocation(line: 2203, column: 22, scope: !2326)
!2947 = !DILocation(line: 2204, column: 25, scope: !2326)
!2948 = !DILocation(line: 2204, column: 32, scope: !2326)
!2949 = !DILocation(line: 2204, column: 46, scope: !2326)
!2950 = !DILocation(line: 2204, column: 53, scope: !2326)
!2951 = !DILocation(line: 2204, column: 44, scope: !2326)
!2952 = !DILocation(line: 2204, column: 61, scope: !2326)
!2953 = !DILocation(line: 2204, column: 64, scope: !2326)
!2954 = !DILocation(line: 2204, column: 59, scope: !2326)
!2955 = !DILocation(line: 2204, column: 5, scope: !2326)
!2956 = !DILocation(line: 2204, column: 12, scope: !2326)
!2957 = !DILocation(line: 2204, column: 23, scope: !2326)
!2958 = !DILocation(line: 2205, column: 23, scope: !2326)
!2959 = !DILocation(line: 2205, column: 26, scope: !2326)
!2960 = !DILocation(line: 2205, column: 5, scope: !2326)
!2961 = !DILocation(line: 2205, column: 12, scope: !2326)
!2962 = !DILocation(line: 2205, column: 21, scope: !2326)
!2963 = !DILocation(line: 2206, column: 26, scope: !2326)
!2964 = !DILocation(line: 2206, column: 33, scope: !2326)
!2965 = !DILocation(line: 2206, column: 48, scope: !2326)
!2966 = !DILocation(line: 2206, column: 55, scope: !2326)
!2967 = !DILocation(line: 2206, column: 46, scope: !2326)
!2968 = !DILocation(line: 2206, column: 64, scope: !2326)
!2969 = !DILocation(line: 2206, column: 67, scope: !2326)
!2970 = !DILocation(line: 2206, column: 62, scope: !2326)
!2971 = !DILocation(line: 2206, column: 5, scope: !2326)
!2972 = !DILocation(line: 2206, column: 12, scope: !2326)
!2973 = !DILocation(line: 2206, column: 24, scope: !2326)
!2974 = !DILocation(line: 2208, column: 6, scope: !2326)
!2975 = !DILocation(line: 2208, column: 16, scope: !2326)
!2976 = !DILocation(line: 2210, column: 17, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2210, column: 9)
!2978 = !DILocation(line: 2210, column: 20, scope: !2977)
!2979 = !DILocation(line: 2210, column: 27, scope: !2977)
!2980 = !DILocation(line: 2210, column: 46, scope: !2977)
!2981 = !DILocation(line: 2210, column: 9, scope: !2326)
!2982 = !DILocation(line: 2211, column: 29, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2977, file: !904, line: 2210, column: 52)
!2984 = !DILocation(line: 2211, column: 15, scope: !2983)
!2985 = !DILocation(line: 2211, column: 13, scope: !2983)
!2986 = !DILocation(line: 2212, column: 13, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2983, file: !904, line: 2212, column: 13)
!2988 = !DILocation(line: 2212, column: 17, scope: !2987)
!2989 = !DILocation(line: 2212, column: 13, scope: !2983)
!2990 = !DILocation(line: 2213, column: 20, scope: !2987)
!2991 = !DILocation(line: 2213, column: 13, scope: !2987)
!2992 = !DILocation(line: 2214, column: 5, scope: !2983)
!2993 = !DILocation(line: 2216, column: 12, scope: !2326)
!2994 = !DILocation(line: 2216, column: 5, scope: !2326)
!2995 = !DILocation(line: 2219, column: 32, scope: !2326)
!2996 = !DILocation(line: 2219, column: 35, scope: !2326)
!2997 = !DILocation(line: 2219, column: 5, scope: !2326)
!2998 = !DILocation(line: 2221, column: 17, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2326, file: !904, line: 2221, column: 9)
!3000 = !DILocation(line: 2221, column: 20, scope: !2999)
!3001 = !DILocation(line: 2221, column: 27, scope: !2999)
!3002 = !DILocation(line: 2221, column: 46, scope: !2999)
!3003 = !DILocation(line: 2221, column: 9, scope: !2326)
!3004 = !DILocation(line: 2222, column: 24, scope: !2999)
!3005 = !DILocation(line: 2222, column: 27, scope: !2999)
!3006 = !DILocation(line: 2222, column: 41, scope: !2999)
!3007 = !DILocation(line: 2222, column: 9, scope: !2999)
!3008 = !DILocation(line: 2224, column: 5, scope: !2326)
!3009 = !DILocation(line: 2225, column: 1, scope: !2326)
!3010 = distinct !DISubprogram(name: "vp3_decode_end", scope: !904, file: !904, line: 299, type: !995, isLocal: true, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!3011 = !DILocalVariable(name: "avctx", arg: 1, scope: !3010, file: !904, line: 299, type: !997)
!3012 = !DILocation(line: 299, column: 65, scope: !3010)
!3013 = !DILocalVariable(name: "s", scope: !3010, file: !904, line: 301, type: !1707)
!3014 = !DILocation(line: 301, column: 23, scope: !3010)
!3015 = !DILocation(line: 301, column: 27, scope: !3010)
!3016 = !DILocation(line: 301, column: 34, scope: !3010)
!3017 = !DILocalVariable(name: "i", scope: !3010, file: !904, line: 302, type: !890)
!3018 = !DILocation(line: 302, column: 9, scope: !3010)
!3019 = !DILocation(line: 304, column: 17, scope: !3010)
!3020 = !DILocation(line: 304, column: 5, scope: !3010)
!3021 = !DILocation(line: 305, column: 15, scope: !3010)
!3022 = !DILocation(line: 305, column: 18, scope: !3010)
!3023 = !DILocation(line: 305, column: 14, scope: !3010)
!3024 = !DILocation(line: 305, column: 5, scope: !3010)
!3025 = !DILocation(line: 307, column: 5, scope: !3010)
!3026 = !DILocation(line: 307, column: 8, scope: !3010)
!3027 = !DILocation(line: 307, column: 22, scope: !3010)
!3028 = !DILocation(line: 310, column: 22, scope: !3010)
!3029 = !DILocation(line: 310, column: 5, scope: !3010)
!3030 = !DILocation(line: 311, column: 20, scope: !3010)
!3031 = !DILocation(line: 311, column: 23, scope: !3010)
!3032 = !DILocation(line: 311, column: 37, scope: !3010)
!3033 = !DILocation(line: 311, column: 5, scope: !3010)
!3034 = !DILocation(line: 312, column: 20, scope: !3010)
!3035 = !DILocation(line: 312, column: 23, scope: !3010)
!3036 = !DILocation(line: 312, column: 34, scope: !3010)
!3037 = !DILocation(line: 312, column: 5, scope: !3010)
!3038 = !DILocation(line: 313, column: 20, scope: !3010)
!3039 = !DILocation(line: 313, column: 23, scope: !3010)
!3040 = !DILocation(line: 313, column: 36, scope: !3010)
!3041 = !DILocation(line: 313, column: 5, scope: !3010)
!3042 = !DILocation(line: 315, column: 9, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3010, file: !904, line: 315, column: 9)
!3044 = !DILocation(line: 315, column: 16, scope: !3043)
!3045 = !DILocation(line: 315, column: 26, scope: !3043)
!3046 = !DILocation(line: 315, column: 9, scope: !3010)
!3047 = !DILocation(line: 316, column: 9, scope: !3043)
!3048 = !DILocation(line: 318, column: 12, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3010, file: !904, line: 318, column: 5)
!3050 = !DILocation(line: 318, column: 10, scope: !3049)
!3051 = !DILocation(line: 318, column: 17, scope: !3052)
!3052 = !DILexicalBlockFile(scope: !3053, file: !904, discriminator: 1)
!3053 = distinct !DILexicalBlock(scope: !3049, file: !904, line: 318, column: 5)
!3054 = !DILocation(line: 318, column: 19, scope: !3052)
!3055 = !DILocation(line: 318, column: 5, scope: !3052)
!3056 = !DILocation(line: 319, column: 32, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3053, file: !904, line: 318, column: 30)
!3058 = !DILocation(line: 319, column: 22, scope: !3057)
!3059 = !DILocation(line: 319, column: 25, scope: !3057)
!3060 = !DILocation(line: 319, column: 9, scope: !3057)
!3061 = !DILocation(line: 320, column: 34, scope: !3057)
!3062 = !DILocation(line: 320, column: 22, scope: !3057)
!3063 = !DILocation(line: 320, column: 25, scope: !3057)
!3064 = !DILocation(line: 320, column: 9, scope: !3057)
!3065 = !DILocation(line: 321, column: 34, scope: !3057)
!3066 = !DILocation(line: 321, column: 22, scope: !3057)
!3067 = !DILocation(line: 321, column: 25, scope: !3057)
!3068 = !DILocation(line: 321, column: 9, scope: !3057)
!3069 = !DILocation(line: 322, column: 34, scope: !3057)
!3070 = !DILocation(line: 322, column: 22, scope: !3057)
!3071 = !DILocation(line: 322, column: 25, scope: !3057)
!3072 = !DILocation(line: 322, column: 9, scope: !3057)
!3073 = !DILocation(line: 323, column: 34, scope: !3057)
!3074 = !DILocation(line: 323, column: 22, scope: !3057)
!3075 = !DILocation(line: 323, column: 25, scope: !3057)
!3076 = !DILocation(line: 323, column: 9, scope: !3057)
!3077 = !DILocation(line: 324, column: 5, scope: !3057)
!3078 = !DILocation(line: 318, column: 26, scope: !3079)
!3079 = !DILexicalBlockFile(scope: !3053, file: !904, discriminator: 2)
!3080 = !DILocation(line: 318, column: 5, scope: !3079)
!3081 = distinct !{!3081, !3082}
!3082 = !DILocation(line: 318, column: 5, scope: !3010)
!3083 = !DILocation(line: 326, column: 18, scope: !3010)
!3084 = !DILocation(line: 326, column: 21, scope: !3010)
!3085 = !DILocation(line: 326, column: 5, scope: !3010)
!3086 = !DILocation(line: 327, column: 18, scope: !3010)
!3087 = !DILocation(line: 327, column: 21, scope: !3010)
!3088 = !DILocation(line: 327, column: 5, scope: !3010)
!3089 = !DILocation(line: 328, column: 18, scope: !3010)
!3090 = !DILocation(line: 328, column: 21, scope: !3010)
!3091 = !DILocation(line: 328, column: 5, scope: !3010)
!3092 = !DILocation(line: 329, column: 18, scope: !3010)
!3093 = !DILocation(line: 329, column: 21, scope: !3010)
!3094 = !DILocation(line: 329, column: 5, scope: !3010)
!3095 = !DILocation(line: 331, column: 5, scope: !3010)
!3096 = !DILocation(line: 332, column: 1, scope: !3010)
!3097 = distinct !DISubprogram(name: "vp3_decode_flush", scope: !904, file: !904, line: 287, type: !1622, isLocal: true, isDefinition: true, scopeLine: 288, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!3098 = !DILocalVariable(name: "avctx", arg: 1, scope: !3097, file: !904, line: 287, type: !997)
!3099 = !DILocation(line: 287, column: 46, scope: !3097)
!3100 = !DILocalVariable(name: "s", scope: !3097, file: !904, line: 289, type: !1707)
!3101 = !DILocation(line: 289, column: 23, scope: !3097)
!3102 = !DILocation(line: 289, column: 27, scope: !3097)
!3103 = !DILocation(line: 289, column: 34, scope: !3097)
!3104 = !DILocation(line: 291, column: 9, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3097, file: !904, line: 291, column: 9)
!3106 = !DILocation(line: 291, column: 12, scope: !3105)
!3107 = !DILocation(line: 291, column: 25, scope: !3105)
!3108 = !DILocation(line: 291, column: 9, scope: !3097)
!3109 = !DILocation(line: 292, column: 34, scope: !3105)
!3110 = !DILocation(line: 292, column: 42, scope: !3105)
!3111 = !DILocation(line: 292, column: 45, scope: !3105)
!3112 = !DILocation(line: 292, column: 9, scope: !3105)
!3113 = !DILocation(line: 293, column: 9, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3097, file: !904, line: 293, column: 9)
!3115 = !DILocation(line: 293, column: 12, scope: !3114)
!3116 = !DILocation(line: 293, column: 23, scope: !3114)
!3117 = !DILocation(line: 293, column: 9, scope: !3097)
!3118 = !DILocation(line: 294, column: 34, scope: !3114)
!3119 = !DILocation(line: 294, column: 42, scope: !3114)
!3120 = !DILocation(line: 294, column: 45, scope: !3114)
!3121 = !DILocation(line: 294, column: 9, scope: !3114)
!3122 = !DILocation(line: 295, column: 9, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3097, file: !904, line: 295, column: 9)
!3124 = !DILocation(line: 295, column: 12, scope: !3123)
!3125 = !DILocation(line: 295, column: 26, scope: !3123)
!3126 = !DILocation(line: 295, column: 9, scope: !3097)
!3127 = !DILocation(line: 296, column: 34, scope: !3123)
!3128 = !DILocation(line: 296, column: 42, scope: !3123)
!3129 = !DILocation(line: 296, column: 45, scope: !3123)
!3130 = !DILocation(line: 296, column: 9, scope: !3123)
!3131 = !DILocation(line: 297, column: 1, scope: !3097)
!3132 = distinct !DISubprogram(name: "vp3_decode_init", scope: !904, file: !904, line: 1743, type: !995, isLocal: true, isDefinition: true, scopeLine: 1744, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!3133 = !DILocalVariable(name: "avctx", arg: 1, scope: !3132, file: !904, line: 1743, type: !997)
!3134 = !DILocation(line: 1743, column: 66, scope: !3132)
!3135 = !DILocalVariable(name: "s", scope: !3132, file: !904, line: 1745, type: !1707)
!3136 = !DILocation(line: 1745, column: 23, scope: !3132)
!3137 = !DILocation(line: 1745, column: 27, scope: !3132)
!3138 = !DILocation(line: 1745, column: 34, scope: !3132)
!3139 = !DILocalVariable(name: "i", scope: !3132, file: !904, line: 1746, type: !890)
!3140 = !DILocation(line: 1746, column: 9, scope: !3132)
!3141 = !DILocalVariable(name: "inter", scope: !3132, file: !904, line: 1746, type: !890)
!3142 = !DILocation(line: 1746, column: 12, scope: !3132)
!3143 = !DILocalVariable(name: "plane", scope: !3132, file: !904, line: 1746, type: !890)
!3144 = !DILocation(line: 1746, column: 19, scope: !3132)
!3145 = !DILocalVariable(name: "ret", scope: !3132, file: !904, line: 1746, type: !890)
!3146 = !DILocation(line: 1746, column: 26, scope: !3132)
!3147 = !DILocalVariable(name: "c_width", scope: !3132, file: !904, line: 1747, type: !890)
!3148 = !DILocation(line: 1747, column: 9, scope: !3132)
!3149 = !DILocalVariable(name: "c_height", scope: !3132, file: !904, line: 1748, type: !890)
!3150 = !DILocation(line: 1748, column: 9, scope: !3132)
!3151 = !DILocalVariable(name: "y_fragment_count", scope: !3132, file: !904, line: 1749, type: !890)
!3152 = !DILocation(line: 1749, column: 9, scope: !3132)
!3153 = !DILocalVariable(name: "c_fragment_count", scope: !3132, file: !904, line: 1749, type: !890)
!3154 = !DILocation(line: 1749, column: 27, scope: !3132)
!3155 = !DILocation(line: 1751, column: 23, scope: !3132)
!3156 = !DILocation(line: 1751, column: 11, scope: !3132)
!3157 = !DILocation(line: 1751, column: 9, scope: !3132)
!3158 = !DILocation(line: 1752, column: 9, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3132, file: !904, line: 1752, column: 9)
!3160 = !DILocation(line: 1752, column: 13, scope: !3159)
!3161 = !DILocation(line: 1752, column: 9, scope: !3132)
!3162 = !DILocation(line: 1753, column: 16, scope: !3159)
!3163 = !DILocation(line: 1753, column: 9, scope: !3159)
!3164 = !DILocation(line: 1755, column: 5, scope: !3132)
!3165 = !DILocation(line: 1755, column: 12, scope: !3132)
!3166 = !DILocation(line: 1755, column: 22, scope: !3132)
!3167 = !DILocation(line: 1755, column: 40, scope: !3132)
!3168 = !DILocation(line: 1757, column: 9, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3132, file: !904, line: 1757, column: 9)
!3170 = !DILocation(line: 1757, column: 16, scope: !3169)
!3171 = !DILocation(line: 1757, column: 26, scope: !3169)
!3172 = !DILocation(line: 1757, column: 9, scope: !3132)
!3173 = !DILocation(line: 1758, column: 9, scope: !3169)
!3174 = !DILocation(line: 1758, column: 12, scope: !3169)
!3175 = !DILocation(line: 1758, column: 20, scope: !3169)
!3176 = !DILocation(line: 1760, column: 9, scope: !3169)
!3177 = !DILocation(line: 1760, column: 12, scope: !3169)
!3178 = !DILocation(line: 1760, column: 20, scope: !3169)
!3179 = !DILocation(line: 1762, column: 16, scope: !3132)
!3180 = !DILocation(line: 1762, column: 5, scope: !3132)
!3181 = !DILocation(line: 1762, column: 8, scope: !3132)
!3182 = !DILocation(line: 1762, column: 14, scope: !3132)
!3183 = !DILocation(line: 1763, column: 19, scope: !3132)
!3184 = !DILocation(line: 1763, column: 26, scope: !3132)
!3185 = !DILocation(line: 1763, column: 38, scope: !3132)
!3186 = !DILocation(line: 1763, column: 43, scope: !3132)
!3187 = !DILocation(line: 1763, column: 46, scope: !3132)
!3188 = !DILocation(line: 1763, column: 5, scope: !3132)
!3189 = !DILocation(line: 1763, column: 8, scope: !3132)
!3190 = !DILocation(line: 1763, column: 14, scope: !3132)
!3191 = !DILocation(line: 1764, column: 20, scope: !3132)
!3192 = !DILocation(line: 1764, column: 27, scope: !3132)
!3193 = !DILocation(line: 1764, column: 40, scope: !3132)
!3194 = !DILocation(line: 1764, column: 45, scope: !3132)
!3195 = !DILocation(line: 1764, column: 48, scope: !3132)
!3196 = !DILocation(line: 1764, column: 5, scope: !3132)
!3197 = !DILocation(line: 1764, column: 8, scope: !3132)
!3198 = !DILocation(line: 1764, column: 15, scope: !3132)
!3199 = !DILocation(line: 1765, column: 9, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3132, file: !904, line: 1765, column: 9)
!3201 = !DILocation(line: 1765, column: 16, scope: !3200)
!3202 = !DILocation(line: 1765, column: 25, scope: !3200)
!3203 = !DILocation(line: 1765, column: 9, scope: !3132)
!3204 = !DILocation(line: 1766, column: 9, scope: !3200)
!3205 = !DILocation(line: 1766, column: 16, scope: !3200)
!3206 = !DILocation(line: 1766, column: 24, scope: !3200)
!3207 = !DILocation(line: 1767, column: 5, scope: !3132)
!3208 = !DILocation(line: 1767, column: 12, scope: !3132)
!3209 = !DILocation(line: 1767, column: 35, scope: !3132)
!3210 = !DILocation(line: 1768, column: 22, scope: !3132)
!3211 = !DILocation(line: 1768, column: 25, scope: !3132)
!3212 = !DILocation(line: 1768, column: 31, scope: !3132)
!3213 = !DILocation(line: 1768, column: 38, scope: !3132)
!3214 = !DILocation(line: 1768, column: 44, scope: !3132)
!3215 = !DILocation(line: 1768, column: 5, scope: !3132)
!3216 = !DILocation(line: 1769, column: 23, scope: !3132)
!3217 = !DILocation(line: 1769, column: 26, scope: !3132)
!3218 = !DILocation(line: 1769, column: 5, scope: !3132)
!3219 = !DILocation(line: 1770, column: 21, scope: !3132)
!3220 = !DILocation(line: 1770, column: 24, scope: !3132)
!3221 = !DILocation(line: 1770, column: 32, scope: !3132)
!3222 = !DILocation(line: 1770, column: 39, scope: !3132)
!3223 = !DILocation(line: 1770, column: 5, scope: !3132)
!3224 = !DILocation(line: 1772, column: 12, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3132, file: !904, line: 1772, column: 5)
!3226 = !DILocation(line: 1772, column: 10, scope: !3225)
!3227 = !DILocation(line: 1772, column: 17, scope: !3228)
!3228 = !DILexicalBlockFile(scope: !3229, file: !904, discriminator: 1)
!3229 = distinct !DILexicalBlock(scope: !3225, file: !904, line: 1772, column: 5)
!3230 = !DILocation(line: 1772, column: 19, scope: !3228)
!3231 = !DILocation(line: 1772, column: 5, scope: !3228)
!3232 = !DILocation(line: 1774, column: 37, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3229, file: !904, line: 1772, column: 30)
!3234 = !DILocation(line: 1774, column: 40, scope: !3233)
!3235 = !DILocation(line: 1774, column: 51, scope: !3233)
!3236 = !DILocation(line: 1774, column: 54, scope: !3233)
!3237 = !DILocation(line: 1774, column: 59, scope: !3233)
!3238 = !DILocation(line: 1774, column: 46, scope: !3233)
!3239 = !DILocation(line: 1774, column: 34, scope: !3233)
!3240 = !DILocation(line: 1774, column: 29, scope: !3233)
!3241 = !DILocation(line: 1774, column: 9, scope: !3233)
!3242 = !DILocation(line: 1774, column: 12, scope: !3233)
!3243 = !DILocation(line: 1774, column: 32, scope: !3233)
!3244 = !DILocation(line: 1775, column: 52, scope: !3233)
!3245 = !DILocation(line: 1775, column: 35, scope: !3233)
!3246 = !DILocation(line: 1775, column: 34, scope: !3233)
!3247 = !DILocation(line: 1775, column: 56, scope: !3233)
!3248 = !DILocation(line: 1775, column: 84, scope: !3233)
!3249 = !DILocation(line: 1775, column: 67, scope: !3233)
!3250 = !DILocation(line: 1775, column: 66, scope: !3233)
!3251 = !DILocation(line: 1775, column: 88, scope: !3233)
!3252 = !DILocation(line: 1775, column: 93, scope: !3233)
!3253 = !DILocation(line: 1775, column: 62, scope: !3233)
!3254 = !DILocation(line: 1775, column: 32, scope: !3233)
!3255 = !DILocation(line: 1775, column: 27, scope: !3233)
!3256 = !DILocation(line: 1775, column: 9, scope: !3233)
!3257 = !DILocation(line: 1775, column: 12, scope: !3233)
!3258 = !DILocation(line: 1775, column: 30, scope: !3233)
!3259 = !DILocation(line: 1777, column: 5, scope: !3233)
!3260 = !DILocation(line: 1772, column: 26, scope: !3261)
!3261 = !DILexicalBlockFile(scope: !3229, file: !904, discriminator: 2)
!3262 = !DILocation(line: 1772, column: 5, scope: !3261)
!3263 = distinct !{!3263, !3264}
!3264 = !DILocation(line: 1772, column: 5, scope: !3132)
!3265 = !DILocation(line: 1781, column: 12, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3132, file: !904, line: 1781, column: 5)
!3267 = !DILocation(line: 1781, column: 10, scope: !3266)
!3268 = !DILocation(line: 1781, column: 17, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !3270, file: !904, discriminator: 1)
!3270 = distinct !DILexicalBlock(scope: !3266, file: !904, line: 1781, column: 5)
!3271 = !DILocation(line: 1781, column: 19, scope: !3269)
!3272 = !DILocation(line: 1781, column: 5, scope: !3269)
!3273 = !DILocation(line: 1782, column: 16, scope: !3270)
!3274 = !DILocation(line: 1782, column: 9, scope: !3270)
!3275 = !DILocation(line: 1782, column: 12, scope: !3270)
!3276 = !DILocation(line: 1782, column: 19, scope: !3270)
!3277 = !DILocation(line: 1781, column: 25, scope: !3278)
!3278 = !DILexicalBlockFile(scope: !3270, file: !904, discriminator: 2)
!3279 = !DILocation(line: 1781, column: 5, scope: !3278)
!3280 = distinct !{!3280, !3281}
!3281 = !DILocation(line: 1781, column: 5, scope: !3132)
!3282 = !DILocation(line: 1784, column: 44, scope: !3132)
!3283 = !DILocation(line: 1784, column: 51, scope: !3132)
!3284 = !DILocation(line: 1784, column: 61, scope: !3132)
!3285 = !DILocation(line: 1784, column: 64, scope: !3132)
!3286 = !DILocation(line: 1784, column: 81, scope: !3132)
!3287 = !DILocation(line: 1784, column: 84, scope: !3132)
!3288 = !DILocation(line: 1784, column: 11, scope: !3132)
!3289 = !DILocation(line: 1784, column: 9, scope: !3132)
!3290 = !DILocation(line: 1785, column: 9, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3132, file: !904, line: 1785, column: 9)
!3292 = !DILocation(line: 1785, column: 9, scope: !3132)
!3293 = !DILocation(line: 1786, column: 16, scope: !3291)
!3294 = !DILocation(line: 1786, column: 9, scope: !3291)
!3295 = !DILocation(line: 1788, column: 30, scope: !3132)
!3296 = !DILocation(line: 1788, column: 33, scope: !3132)
!3297 = !DILocation(line: 1788, column: 39, scope: !3132)
!3298 = !DILocation(line: 1788, column: 45, scope: !3132)
!3299 = !DILocation(line: 1788, column: 5, scope: !3132)
!3300 = !DILocation(line: 1788, column: 8, scope: !3132)
!3301 = !DILocation(line: 1788, column: 27, scope: !3132)
!3302 = !DILocation(line: 1789, column: 31, scope: !3132)
!3303 = !DILocation(line: 1789, column: 34, scope: !3132)
!3304 = !DILocation(line: 1789, column: 41, scope: !3132)
!3305 = !DILocation(line: 1789, column: 47, scope: !3132)
!3306 = !DILocation(line: 1789, column: 5, scope: !3132)
!3307 = !DILocation(line: 1789, column: 8, scope: !3132)
!3308 = !DILocation(line: 1789, column: 28, scope: !3132)
!3309 = !DILocation(line: 1790, column: 29, scope: !3132)
!3310 = !DILocation(line: 1790, column: 32, scope: !3132)
!3311 = !DILocation(line: 1790, column: 53, scope: !3132)
!3312 = !DILocation(line: 1790, column: 56, scope: !3132)
!3313 = !DILocation(line: 1790, column: 51, scope: !3132)
!3314 = !DILocation(line: 1790, column: 5, scope: !3132)
!3315 = !DILocation(line: 1790, column: 8, scope: !3132)
!3316 = !DILocation(line: 1790, column: 27, scope: !3132)
!3317 = !DILocation(line: 1793, column: 15, scope: !3132)
!3318 = !DILocation(line: 1793, column: 18, scope: !3132)
!3319 = !DILocation(line: 1793, column: 27, scope: !3132)
!3320 = !DILocation(line: 1793, column: 30, scope: !3132)
!3321 = !DILocation(line: 1793, column: 24, scope: !3132)
!3322 = !DILocation(line: 1793, column: 13, scope: !3132)
!3323 = !DILocation(line: 1794, column: 16, scope: !3132)
!3324 = !DILocation(line: 1794, column: 19, scope: !3132)
!3325 = !DILocation(line: 1794, column: 29, scope: !3132)
!3326 = !DILocation(line: 1794, column: 32, scope: !3132)
!3327 = !DILocation(line: 1794, column: 26, scope: !3132)
!3328 = !DILocation(line: 1794, column: 14, scope: !3132)
!3329 = !DILocation(line: 1795, column: 30, scope: !3132)
!3330 = !DILocation(line: 1795, column: 38, scope: !3132)
!3331 = !DILocation(line: 1795, column: 44, scope: !3132)
!3332 = !DILocation(line: 1795, column: 5, scope: !3132)
!3333 = !DILocation(line: 1795, column: 8, scope: !3132)
!3334 = !DILocation(line: 1795, column: 27, scope: !3132)
!3335 = !DILocation(line: 1796, column: 31, scope: !3132)
!3336 = !DILocation(line: 1796, column: 40, scope: !3132)
!3337 = !DILocation(line: 1796, column: 46, scope: !3132)
!3338 = !DILocation(line: 1796, column: 5, scope: !3132)
!3339 = !DILocation(line: 1796, column: 8, scope: !3132)
!3340 = !DILocation(line: 1796, column: 28, scope: !3132)
!3341 = !DILocation(line: 1797, column: 29, scope: !3132)
!3342 = !DILocation(line: 1797, column: 32, scope: !3132)
!3343 = !DILocation(line: 1797, column: 53, scope: !3132)
!3344 = !DILocation(line: 1797, column: 56, scope: !3132)
!3345 = !DILocation(line: 1797, column: 51, scope: !3132)
!3346 = !DILocation(line: 1797, column: 5, scope: !3132)
!3347 = !DILocation(line: 1797, column: 8, scope: !3132)
!3348 = !DILocation(line: 1797, column: 27, scope: !3132)
!3349 = !DILocation(line: 1799, column: 27, scope: !3132)
!3350 = !DILocation(line: 1799, column: 30, scope: !3132)
!3351 = !DILocation(line: 1799, column: 52, scope: !3132)
!3352 = !DILocation(line: 1799, column: 55, scope: !3132)
!3353 = !DILocation(line: 1799, column: 74, scope: !3132)
!3354 = !DILocation(line: 1799, column: 49, scope: !3132)
!3355 = !DILocation(line: 1799, column: 5, scope: !3132)
!3356 = !DILocation(line: 1799, column: 8, scope: !3132)
!3357 = !DILocation(line: 1799, column: 25, scope: !3132)
!3358 = !DILocation(line: 1800, column: 29, scope: !3132)
!3359 = !DILocation(line: 1800, column: 32, scope: !3132)
!3360 = !DILocation(line: 1800, column: 5, scope: !3132)
!3361 = !DILocation(line: 1800, column: 8, scope: !3132)
!3362 = !DILocation(line: 1800, column: 27, scope: !3132)
!3363 = !DILocation(line: 1801, column: 29, scope: !3132)
!3364 = !DILocation(line: 1801, column: 32, scope: !3132)
!3365 = !DILocation(line: 1801, column: 53, scope: !3132)
!3366 = !DILocation(line: 1801, column: 56, scope: !3132)
!3367 = !DILocation(line: 1801, column: 51, scope: !3132)
!3368 = !DILocation(line: 1801, column: 5, scope: !3132)
!3369 = !DILocation(line: 1801, column: 8, scope: !3132)
!3370 = !DILocation(line: 1801, column: 27, scope: !3132)
!3371 = !DILocation(line: 1803, column: 28, scope: !3132)
!3372 = !DILocation(line: 1803, column: 31, scope: !3132)
!3373 = !DILocation(line: 1803, column: 37, scope: !3132)
!3374 = !DILocation(line: 1803, column: 43, scope: !3132)
!3375 = !DILocation(line: 1803, column: 5, scope: !3132)
!3376 = !DILocation(line: 1803, column: 8, scope: !3132)
!3377 = !DILocation(line: 1803, column: 25, scope: !3132)
!3378 = !DILocation(line: 1804, column: 29, scope: !3132)
!3379 = !DILocation(line: 1804, column: 32, scope: !3132)
!3380 = !DILocation(line: 1804, column: 39, scope: !3132)
!3381 = !DILocation(line: 1804, column: 45, scope: !3132)
!3382 = !DILocation(line: 1804, column: 5, scope: !3132)
!3383 = !DILocation(line: 1804, column: 8, scope: !3132)
!3384 = !DILocation(line: 1804, column: 26, scope: !3132)
!3385 = !DILocation(line: 1805, column: 27, scope: !3132)
!3386 = !DILocation(line: 1805, column: 30, scope: !3132)
!3387 = !DILocation(line: 1805, column: 49, scope: !3132)
!3388 = !DILocation(line: 1805, column: 52, scope: !3132)
!3389 = !DILocation(line: 1805, column: 47, scope: !3132)
!3390 = !DILocation(line: 1805, column: 5, scope: !3132)
!3391 = !DILocation(line: 1805, column: 8, scope: !3132)
!3392 = !DILocation(line: 1805, column: 25, scope: !3132)
!3393 = !DILocation(line: 1807, column: 28, scope: !3132)
!3394 = !DILocation(line: 1807, column: 31, scope: !3132)
!3395 = !DILocation(line: 1807, column: 37, scope: !3132)
!3396 = !DILocation(line: 1807, column: 5, scope: !3132)
!3397 = !DILocation(line: 1807, column: 8, scope: !3132)
!3398 = !DILocation(line: 1807, column: 26, scope: !3132)
!3399 = !DILocation(line: 1808, column: 29, scope: !3132)
!3400 = !DILocation(line: 1808, column: 32, scope: !3132)
!3401 = !DILocation(line: 1808, column: 39, scope: !3132)
!3402 = !DILocation(line: 1808, column: 5, scope: !3132)
!3403 = !DILocation(line: 1808, column: 8, scope: !3132)
!3404 = !DILocation(line: 1808, column: 27, scope: !3132)
!3405 = !DILocation(line: 1809, column: 28, scope: !3132)
!3406 = !DILocation(line: 1809, column: 31, scope: !3132)
!3407 = !DILocation(line: 1809, column: 52, scope: !3132)
!3408 = !DILocation(line: 1809, column: 55, scope: !3132)
!3409 = !DILocation(line: 1809, column: 49, scope: !3132)
!3410 = !DILocation(line: 1809, column: 5, scope: !3132)
!3411 = !DILocation(line: 1809, column: 8, scope: !3132)
!3412 = !DILocation(line: 1809, column: 26, scope: !3132)
!3413 = !DILocation(line: 1810, column: 29, scope: !3132)
!3414 = !DILocation(line: 1810, column: 32, scope: !3132)
!3415 = !DILocation(line: 1810, column: 54, scope: !3132)
!3416 = !DILocation(line: 1810, column: 57, scope: !3132)
!3417 = !DILocation(line: 1810, column: 51, scope: !3132)
!3418 = !DILocation(line: 1810, column: 5, scope: !3132)
!3419 = !DILocation(line: 1810, column: 8, scope: !3132)
!3420 = !DILocation(line: 1810, column: 27, scope: !3132)
!3421 = !DILocation(line: 1813, column: 24, scope: !3132)
!3422 = !DILocation(line: 1813, column: 27, scope: !3132)
!3423 = !DILocation(line: 1813, column: 47, scope: !3132)
!3424 = !DILocation(line: 1813, column: 50, scope: !3132)
!3425 = !DILocation(line: 1813, column: 45, scope: !3132)
!3426 = !DILocation(line: 1813, column: 22, scope: !3132)
!3427 = !DILocation(line: 1814, column: 24, scope: !3132)
!3428 = !DILocation(line: 1814, column: 27, scope: !3132)
!3429 = !DILocation(line: 1814, column: 47, scope: !3132)
!3430 = !DILocation(line: 1814, column: 50, scope: !3132)
!3431 = !DILocation(line: 1814, column: 45, scope: !3132)
!3432 = !DILocation(line: 1814, column: 22, scope: !3132)
!3433 = !DILocation(line: 1815, column: 25, scope: !3132)
!3434 = !DILocation(line: 1815, column: 48, scope: !3132)
!3435 = !DILocation(line: 1815, column: 46, scope: !3132)
!3436 = !DILocation(line: 1815, column: 42, scope: !3132)
!3437 = !DILocation(line: 1815, column: 5, scope: !3132)
!3438 = !DILocation(line: 1815, column: 8, scope: !3132)
!3439 = !DILocation(line: 1815, column: 23, scope: !3132)
!3440 = !DILocation(line: 1816, column: 28, scope: !3132)
!3441 = !DILocation(line: 1816, column: 5, scope: !3132)
!3442 = !DILocation(line: 1816, column: 8, scope: !3132)
!3443 = !DILocation(line: 1816, column: 26, scope: !3132)
!3444 = !DILocation(line: 1817, column: 28, scope: !3132)
!3445 = !DILocation(line: 1817, column: 47, scope: !3132)
!3446 = !DILocation(line: 1817, column: 45, scope: !3132)
!3447 = !DILocation(line: 1817, column: 5, scope: !3132)
!3448 = !DILocation(line: 1817, column: 8, scope: !3132)
!3449 = !DILocation(line: 1817, column: 26, scope: !3132)
!3450 = !DILocation(line: 1819, column: 10, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3132, file: !904, line: 1819, column: 9)
!3452 = !DILocation(line: 1819, column: 13, scope: !3451)
!3453 = !DILocation(line: 1819, column: 9, scope: !3132)
!3454 = !DILocation(line: 1820, column: 16, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !904, line: 1820, column: 9)
!3456 = distinct !DILexicalBlock(scope: !3451, file: !904, line: 1819, column: 28)
!3457 = !DILocation(line: 1820, column: 14, scope: !3455)
!3458 = !DILocation(line: 1820, column: 21, scope: !3459)
!3459 = !DILexicalBlockFile(scope: !3460, file: !904, discriminator: 1)
!3460 = distinct !DILexicalBlock(scope: !3455, file: !904, line: 1820, column: 9)
!3461 = !DILocation(line: 1820, column: 23, scope: !3459)
!3462 = !DILocation(line: 1820, column: 9, scope: !3459)
!3463 = !DILocation(line: 1821, column: 64, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !904, line: 1820, column: 34)
!3465 = !DILocation(line: 1821, column: 43, scope: !3464)
!3466 = !DILocation(line: 1821, column: 38, scope: !3464)
!3467 = !DILocation(line: 1821, column: 13, scope: !3464)
!3468 = !DILocation(line: 1821, column: 16, scope: !3464)
!3469 = !DILocation(line: 1821, column: 41, scope: !3464)
!3470 = !DILocation(line: 1822, column: 64, scope: !3464)
!3471 = !DILocation(line: 1822, column: 43, scope: !3464)
!3472 = !DILocation(line: 1822, column: 38, scope: !3464)
!3473 = !DILocation(line: 1822, column: 13, scope: !3464)
!3474 = !DILocation(line: 1822, column: 16, scope: !3464)
!3475 = !DILocation(line: 1822, column: 41, scope: !3464)
!3476 = !DILocation(line: 1823, column: 57, scope: !3464)
!3477 = !DILocation(line: 1823, column: 36, scope: !3464)
!3478 = !DILocation(line: 1823, column: 31, scope: !3464)
!3479 = !DILocation(line: 1823, column: 13, scope: !3464)
!3480 = !DILocation(line: 1823, column: 16, scope: !3464)
!3481 = !DILocation(line: 1823, column: 34, scope: !3464)
!3482 = !DILocation(line: 1824, column: 57, scope: !3464)
!3483 = !DILocation(line: 1824, column: 36, scope: !3464)
!3484 = !DILocation(line: 1824, column: 31, scope: !3464)
!3485 = !DILocation(line: 1824, column: 13, scope: !3464)
!3486 = !DILocation(line: 1824, column: 16, scope: !3464)
!3487 = !DILocation(line: 1824, column: 34, scope: !3464)
!3488 = !DILocation(line: 1825, column: 55, scope: !3464)
!3489 = !DILocation(line: 1825, column: 36, scope: !3464)
!3490 = !DILocation(line: 1825, column: 31, scope: !3464)
!3491 = !DILocation(line: 1825, column: 13, scope: !3464)
!3492 = !DILocation(line: 1825, column: 16, scope: !3464)
!3493 = !DILocation(line: 1825, column: 34, scope: !3464)
!3494 = !DILocation(line: 1826, column: 66, scope: !3464)
!3495 = !DILocation(line: 1826, column: 41, scope: !3464)
!3496 = !DILocation(line: 1826, column: 36, scope: !3464)
!3497 = !DILocation(line: 1826, column: 13, scope: !3464)
!3498 = !DILocation(line: 1826, column: 16, scope: !3464)
!3499 = !DILocation(line: 1826, column: 39, scope: !3464)
!3500 = !DILocation(line: 1827, column: 9, scope: !3464)
!3501 = !DILocation(line: 1820, column: 30, scope: !3502)
!3502 = !DILexicalBlockFile(scope: !3460, file: !904, discriminator: 2)
!3503 = !DILocation(line: 1820, column: 9, scope: !3502)
!3504 = distinct !{!3504, !3505}
!3505 = !DILocation(line: 1820, column: 9, scope: !3456)
!3506 = !DILocation(line: 1829, column: 20, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3456, file: !904, line: 1829, column: 9)
!3508 = !DILocation(line: 1829, column: 14, scope: !3507)
!3509 = !DILocation(line: 1829, column: 25, scope: !3510)
!3510 = !DILexicalBlockFile(scope: !3511, file: !904, discriminator: 1)
!3511 = distinct !DILexicalBlock(scope: !3507, file: !904, line: 1829, column: 9)
!3512 = !DILocation(line: 1829, column: 31, scope: !3510)
!3513 = !DILocation(line: 1829, column: 9, scope: !3510)
!3514 = !DILocation(line: 1830, column: 24, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !904, line: 1830, column: 13)
!3516 = distinct !DILexicalBlock(scope: !3511, file: !904, line: 1829, column: 45)
!3517 = !DILocation(line: 1830, column: 18, scope: !3515)
!3518 = !DILocation(line: 1830, column: 29, scope: !3519)
!3519 = !DILexicalBlockFile(scope: !3520, file: !904, discriminator: 1)
!3520 = distinct !DILexicalBlock(scope: !3515, file: !904, line: 1830, column: 13)
!3521 = !DILocation(line: 1830, column: 35, scope: !3519)
!3522 = !DILocation(line: 1830, column: 13, scope: !3519)
!3523 = !DILocation(line: 1831, column: 36, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3520, file: !904, line: 1830, column: 49)
!3525 = !DILocation(line: 1831, column: 17, scope: !3524)
!3526 = !DILocation(line: 1831, column: 29, scope: !3524)
!3527 = !DILocation(line: 1831, column: 20, scope: !3524)
!3528 = !DILocation(line: 1831, column: 43, scope: !3524)
!3529 = !DILocation(line: 1832, column: 35, scope: !3524)
!3530 = !DILocation(line: 1832, column: 17, scope: !3524)
!3531 = !DILocation(line: 1832, column: 28, scope: !3524)
!3532 = !DILocation(line: 1832, column: 20, scope: !3524)
!3533 = !DILocation(line: 1832, column: 45, scope: !3524)
!3534 = !DILocation(line: 1834, column: 51, scope: !3524)
!3535 = !DILocation(line: 1834, column: 49, scope: !3524)
!3536 = !DILocation(line: 1834, column: 62, scope: !3524)
!3537 = !DILocation(line: 1834, column: 61, scope: !3524)
!3538 = !DILocation(line: 1834, column: 60, scope: !3524)
!3539 = !DILocation(line: 1834, column: 72, scope: !3524)
!3540 = !DILocation(line: 1834, column: 71, scope: !3524)
!3541 = !DILocation(line: 1834, column: 69, scope: !3524)
!3542 = !DILocation(line: 1834, column: 57, scope: !3524)
!3543 = !DILocation(line: 1834, column: 47, scope: !3524)
!3544 = !DILocation(line: 1834, column: 35, scope: !3524)
!3545 = !DILocation(line: 1834, column: 17, scope: !3524)
!3546 = !DILocation(line: 1834, column: 28, scope: !3524)
!3547 = !DILocation(line: 1834, column: 20, scope: !3524)
!3548 = !DILocation(line: 1834, column: 45, scope: !3524)
!3549 = !DILocation(line: 1833, column: 35, scope: !3524)
!3550 = !DILocation(line: 1833, column: 17, scope: !3524)
!3551 = !DILocation(line: 1833, column: 28, scope: !3524)
!3552 = !DILocation(line: 1833, column: 20, scope: !3524)
!3553 = !DILocation(line: 1833, column: 45, scope: !3524)
!3554 = !DILocation(line: 1835, column: 13, scope: !3524)
!3555 = !DILocation(line: 1830, column: 45, scope: !3556)
!3556 = !DILexicalBlockFile(scope: !3520, file: !904, discriminator: 2)
!3557 = !DILocation(line: 1830, column: 13, scope: !3556)
!3558 = distinct !{!3558, !3559}
!3559 = !DILocation(line: 1830, column: 13, scope: !3516)
!3560 = !DILocation(line: 1836, column: 9, scope: !3516)
!3561 = !DILocation(line: 1829, column: 41, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !3511, file: !904, discriminator: 2)
!3563 = !DILocation(line: 1829, column: 9, scope: !3562)
!3564 = distinct !{!3564, !3565}
!3565 = !DILocation(line: 1829, column: 9, scope: !3456)
!3566 = !DILocation(line: 1839, column: 16, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3456, file: !904, line: 1839, column: 9)
!3568 = !DILocation(line: 1839, column: 14, scope: !3567)
!3569 = !DILocation(line: 1839, column: 21, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !3571, file: !904, discriminator: 1)
!3571 = distinct !DILexicalBlock(scope: !3567, file: !904, line: 1839, column: 9)
!3572 = !DILocation(line: 1839, column: 23, scope: !3570)
!3573 = !DILocation(line: 1839, column: 9, scope: !3570)
!3574 = !DILocation(line: 1841, column: 43, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3571, file: !904, line: 1839, column: 34)
!3576 = !DILocation(line: 1841, column: 33, scope: !3575)
!3577 = !DILocation(line: 1841, column: 36, scope: !3575)
!3578 = !DILocation(line: 1841, column: 64, scope: !3575)
!3579 = !DILocation(line: 1841, column: 56, scope: !3575)
!3580 = !DILocation(line: 1841, column: 55, scope: !3575)
!3581 = !DILocation(line: 1841, column: 89, scope: !3575)
!3582 = !DILocation(line: 1841, column: 81, scope: !3575)
!3583 = !DILocation(line: 1841, column: 80, scope: !3575)
!3584 = !DILocation(line: 1841, column: 13, scope: !3575)
!3585 = !DILocation(line: 1846, column: 45, scope: !3575)
!3586 = !DILocation(line: 1846, column: 33, scope: !3575)
!3587 = !DILocation(line: 1846, column: 36, scope: !3575)
!3588 = !DILocation(line: 1846, column: 68, scope: !3575)
!3589 = !DILocation(line: 1846, column: 58, scope: !3575)
!3590 = !DILocation(line: 1846, column: 57, scope: !3575)
!3591 = !DILocation(line: 1846, column: 95, scope: !3575)
!3592 = !DILocation(line: 1846, column: 85, scope: !3575)
!3593 = !DILocation(line: 1846, column: 84, scope: !3575)
!3594 = !DILocation(line: 1846, column: 13, scope: !3575)
!3595 = !DILocation(line: 1851, column: 45, scope: !3575)
!3596 = !DILocation(line: 1851, column: 33, scope: !3575)
!3597 = !DILocation(line: 1851, column: 36, scope: !3575)
!3598 = !DILocation(line: 1851, column: 68, scope: !3575)
!3599 = !DILocation(line: 1851, column: 58, scope: !3575)
!3600 = !DILocation(line: 1851, column: 57, scope: !3575)
!3601 = !DILocation(line: 1851, column: 95, scope: !3575)
!3602 = !DILocation(line: 1851, column: 85, scope: !3575)
!3603 = !DILocation(line: 1851, column: 84, scope: !3575)
!3604 = !DILocation(line: 1851, column: 13, scope: !3575)
!3605 = !DILocation(line: 1856, column: 45, scope: !3575)
!3606 = !DILocation(line: 1856, column: 33, scope: !3575)
!3607 = !DILocation(line: 1856, column: 36, scope: !3575)
!3608 = !DILocation(line: 1856, column: 68, scope: !3575)
!3609 = !DILocation(line: 1856, column: 58, scope: !3575)
!3610 = !DILocation(line: 1856, column: 57, scope: !3575)
!3611 = !DILocation(line: 1856, column: 95, scope: !3575)
!3612 = !DILocation(line: 1856, column: 85, scope: !3575)
!3613 = !DILocation(line: 1856, column: 84, scope: !3575)
!3614 = !DILocation(line: 1856, column: 13, scope: !3575)
!3615 = !DILocation(line: 1861, column: 45, scope: !3575)
!3616 = !DILocation(line: 1861, column: 33, scope: !3575)
!3617 = !DILocation(line: 1861, column: 36, scope: !3575)
!3618 = !DILocation(line: 1861, column: 68, scope: !3575)
!3619 = !DILocation(line: 1861, column: 58, scope: !3575)
!3620 = !DILocation(line: 1861, column: 57, scope: !3575)
!3621 = !DILocation(line: 1861, column: 95, scope: !3575)
!3622 = !DILocation(line: 1861, column: 85, scope: !3575)
!3623 = !DILocation(line: 1861, column: 84, scope: !3575)
!3624 = !DILocation(line: 1861, column: 13, scope: !3575)
!3625 = !DILocation(line: 1864, column: 9, scope: !3575)
!3626 = !DILocation(line: 1839, column: 30, scope: !3627)
!3627 = !DILexicalBlockFile(scope: !3571, file: !904, discriminator: 2)
!3628 = !DILocation(line: 1839, column: 9, scope: !3627)
!3629 = distinct !{!3629, !3630}
!3630 = !DILocation(line: 1839, column: 9, scope: !3456)
!3631 = !DILocation(line: 1865, column: 5, scope: !3456)
!3632 = !DILocation(line: 1866, column: 16, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !904, line: 1866, column: 9)
!3634 = distinct !DILexicalBlock(scope: !3451, file: !904, line: 1865, column: 12)
!3635 = !DILocation(line: 1866, column: 14, scope: !3633)
!3636 = !DILocation(line: 1866, column: 21, scope: !3637)
!3637 = !DILexicalBlockFile(scope: !3638, file: !904, discriminator: 1)
!3638 = distinct !DILexicalBlock(scope: !3633, file: !904, line: 1866, column: 9)
!3639 = !DILocation(line: 1866, column: 23, scope: !3637)
!3640 = !DILocation(line: 1866, column: 9, scope: !3637)
!3641 = !DILocation(line: 1868, column: 47, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !904, line: 1868, column: 17)
!3643 = distinct !DILexicalBlock(scope: !3638, file: !904, line: 1866, column: 34)
!3644 = !DILocation(line: 1868, column: 37, scope: !3642)
!3645 = !DILocation(line: 1868, column: 40, scope: !3642)
!3646 = !DILocation(line: 1868, column: 77, scope: !3642)
!3647 = !DILocation(line: 1868, column: 60, scope: !3642)
!3648 = !DILocation(line: 1868, column: 63, scope: !3642)
!3649 = !DILocation(line: 1868, column: 59, scope: !3642)
!3650 = !DILocation(line: 1868, column: 111, scope: !3642)
!3651 = !DILocation(line: 1868, column: 94, scope: !3642)
!3652 = !DILocation(line: 1868, column: 97, scope: !3642)
!3653 = !DILocation(line: 1868, column: 93, scope: !3642)
!3654 = !DILocation(line: 1868, column: 17, scope: !3642)
!3655 = !DILocation(line: 1870, column: 63, scope: !3642)
!3656 = !DILocation(line: 1868, column: 17, scope: !3643)
!3657 = !DILocation(line: 1871, column: 17, scope: !3642)
!3658 = !DILocation(line: 1874, column: 49, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3643, file: !904, line: 1874, column: 17)
!3660 = !DILocation(line: 1874, column: 37, scope: !3659)
!3661 = !DILocation(line: 1874, column: 40, scope: !3659)
!3662 = !DILocation(line: 1874, column: 79, scope: !3659)
!3663 = !DILocation(line: 1874, column: 81, scope: !3659)
!3664 = !DILocation(line: 1874, column: 62, scope: !3659)
!3665 = !DILocation(line: 1874, column: 65, scope: !3659)
!3666 = !DILocation(line: 1874, column: 61, scope: !3659)
!3667 = !DILocation(line: 1874, column: 118, scope: !3659)
!3668 = !DILocation(line: 1874, column: 120, scope: !3659)
!3669 = !DILocation(line: 1874, column: 101, scope: !3659)
!3670 = !DILocation(line: 1874, column: 104, scope: !3659)
!3671 = !DILocation(line: 1874, column: 100, scope: !3659)
!3672 = !DILocation(line: 1874, column: 17, scope: !3659)
!3673 = !DILocation(line: 1876, column: 68, scope: !3659)
!3674 = !DILocation(line: 1874, column: 17, scope: !3643)
!3675 = !DILocation(line: 1877, column: 17, scope: !3659)
!3676 = !DILocation(line: 1880, column: 49, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3643, file: !904, line: 1880, column: 17)
!3678 = !DILocation(line: 1880, column: 37, scope: !3677)
!3679 = !DILocation(line: 1880, column: 40, scope: !3677)
!3680 = !DILocation(line: 1880, column: 79, scope: !3677)
!3681 = !DILocation(line: 1880, column: 81, scope: !3677)
!3682 = !DILocation(line: 1880, column: 62, scope: !3677)
!3683 = !DILocation(line: 1880, column: 65, scope: !3677)
!3684 = !DILocation(line: 1880, column: 61, scope: !3677)
!3685 = !DILocation(line: 1880, column: 122, scope: !3677)
!3686 = !DILocation(line: 1880, column: 124, scope: !3677)
!3687 = !DILocation(line: 1880, column: 105, scope: !3677)
!3688 = !DILocation(line: 1880, column: 108, scope: !3677)
!3689 = !DILocation(line: 1880, column: 104, scope: !3677)
!3690 = !DILocation(line: 1880, column: 17, scope: !3677)
!3691 = !DILocation(line: 1882, column: 72, scope: !3677)
!3692 = !DILocation(line: 1880, column: 17, scope: !3643)
!3693 = !DILocation(line: 1883, column: 17, scope: !3677)
!3694 = !DILocation(line: 1886, column: 49, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3643, file: !904, line: 1886, column: 17)
!3696 = !DILocation(line: 1886, column: 37, scope: !3695)
!3697 = !DILocation(line: 1886, column: 40, scope: !3695)
!3698 = !DILocation(line: 1886, column: 79, scope: !3695)
!3699 = !DILocation(line: 1886, column: 81, scope: !3695)
!3700 = !DILocation(line: 1886, column: 62, scope: !3695)
!3701 = !DILocation(line: 1886, column: 65, scope: !3695)
!3702 = !DILocation(line: 1886, column: 61, scope: !3695)
!3703 = !DILocation(line: 1886, column: 122, scope: !3695)
!3704 = !DILocation(line: 1886, column: 124, scope: !3695)
!3705 = !DILocation(line: 1886, column: 105, scope: !3695)
!3706 = !DILocation(line: 1886, column: 108, scope: !3695)
!3707 = !DILocation(line: 1886, column: 104, scope: !3695)
!3708 = !DILocation(line: 1886, column: 17, scope: !3695)
!3709 = !DILocation(line: 1888, column: 72, scope: !3695)
!3710 = !DILocation(line: 1886, column: 17, scope: !3643)
!3711 = !DILocation(line: 1889, column: 17, scope: !3695)
!3712 = !DILocation(line: 1892, column: 49, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3643, file: !904, line: 1892, column: 17)
!3714 = !DILocation(line: 1892, column: 37, scope: !3713)
!3715 = !DILocation(line: 1892, column: 40, scope: !3713)
!3716 = !DILocation(line: 1892, column: 79, scope: !3713)
!3717 = !DILocation(line: 1892, column: 81, scope: !3713)
!3718 = !DILocation(line: 1892, column: 62, scope: !3713)
!3719 = !DILocation(line: 1892, column: 65, scope: !3713)
!3720 = !DILocation(line: 1892, column: 61, scope: !3713)
!3721 = !DILocation(line: 1892, column: 122, scope: !3713)
!3722 = !DILocation(line: 1892, column: 124, scope: !3713)
!3723 = !DILocation(line: 1892, column: 105, scope: !3713)
!3724 = !DILocation(line: 1892, column: 108, scope: !3713)
!3725 = !DILocation(line: 1892, column: 104, scope: !3713)
!3726 = !DILocation(line: 1892, column: 17, scope: !3713)
!3727 = !DILocation(line: 1894, column: 72, scope: !3713)
!3728 = !DILocation(line: 1892, column: 17, scope: !3643)
!3729 = !DILocation(line: 1895, column: 17, scope: !3713)
!3730 = !DILocation(line: 1896, column: 9, scope: !3643)
!3731 = !DILocation(line: 1866, column: 30, scope: !3732)
!3732 = !DILexicalBlockFile(scope: !3638, file: !904, discriminator: 2)
!3733 = !DILocation(line: 1866, column: 9, scope: !3732)
!3734 = distinct !{!3734, !3735}
!3735 = !DILocation(line: 1866, column: 9, scope: !3634)
!3736 = !DILocation(line: 1899, column: 25, scope: !3132)
!3737 = !DILocation(line: 1899, column: 28, scope: !3132)
!3738 = !DILocation(line: 1899, column: 5, scope: !3132)
!3739 = !DILocation(line: 1903, column: 25, scope: !3132)
!3740 = !DILocation(line: 1903, column: 28, scope: !3132)
!3741 = !DILocation(line: 1903, column: 5, scope: !3132)
!3742 = !DILocation(line: 1907, column: 25, scope: !3132)
!3743 = !DILocation(line: 1907, column: 28, scope: !3132)
!3744 = !DILocation(line: 1907, column: 5, scope: !3132)
!3745 = !DILocation(line: 1911, column: 25, scope: !3132)
!3746 = !DILocation(line: 1911, column: 28, scope: !3132)
!3747 = !DILocation(line: 1911, column: 5, scope: !3132)
!3748 = !DILocation(line: 1915, column: 28, scope: !3132)
!3749 = !DILocation(line: 1915, column: 12, scope: !3132)
!3750 = !DILocation(line: 1915, column: 5, scope: !3132)
!3751 = !DILocation(line: 1918, column: 12, scope: !3132)
!3752 = !DILocation(line: 1918, column: 5, scope: !3132)
!3753 = !DILocation(line: 1919, column: 5, scope: !3132)
!3754 = !DILocation(line: 1920, column: 1, scope: !3132)
!3755 = distinct !DISubprogram(name: "init_frames", scope: !904, file: !904, line: 1727, type: !3756, isLocal: true, isDefinition: true, scopeLine: 1728, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!890, !1707}
!3758 = !DILocalVariable(name: "s", arg: 1, scope: !3755, file: !904, line: 1727, type: !1707)
!3759 = !DILocation(line: 1727, column: 64, scope: !3755)
!3760 = !DILocation(line: 1729, column: 26, scope: !3755)
!3761 = !DILocation(line: 1729, column: 5, scope: !3755)
!3762 = !DILocation(line: 1729, column: 8, scope: !3755)
!3763 = !DILocation(line: 1729, column: 22, scope: !3755)
!3764 = !DILocation(line: 1729, column: 24, scope: !3755)
!3765 = !DILocation(line: 1730, column: 23, scope: !3755)
!3766 = !DILocation(line: 1730, column: 5, scope: !3755)
!3767 = !DILocation(line: 1730, column: 8, scope: !3755)
!3768 = !DILocation(line: 1730, column: 19, scope: !3755)
!3769 = !DILocation(line: 1730, column: 21, scope: !3755)
!3770 = !DILocation(line: 1731, column: 25, scope: !3755)
!3771 = !DILocation(line: 1731, column: 5, scope: !3755)
!3772 = !DILocation(line: 1731, column: 8, scope: !3755)
!3773 = !DILocation(line: 1731, column: 21, scope: !3755)
!3774 = !DILocation(line: 1731, column: 23, scope: !3755)
!3775 = !DILocation(line: 1733, column: 10, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3755, file: !904, line: 1733, column: 9)
!3777 = !DILocation(line: 1733, column: 13, scope: !3776)
!3778 = !DILocation(line: 1733, column: 27, scope: !3776)
!3779 = !DILocation(line: 1733, column: 29, scope: !3776)
!3780 = !DILocation(line: 1733, column: 33, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3776, file: !904, discriminator: 1)
!3782 = !DILocation(line: 1733, column: 36, scope: !3781)
!3783 = !DILocation(line: 1733, column: 47, scope: !3781)
!3784 = !DILocation(line: 1733, column: 49, scope: !3781)
!3785 = !DILocation(line: 1733, column: 53, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !3776, file: !904, discriminator: 2)
!3787 = !DILocation(line: 1733, column: 56, scope: !3786)
!3788 = !DILocation(line: 1733, column: 69, scope: !3786)
!3789 = !DILocation(line: 1733, column: 9, scope: !3786)
!3790 = !DILocation(line: 1734, column: 24, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3776, file: !904, line: 1733, column: 72)
!3792 = !DILocation(line: 1734, column: 27, scope: !3791)
!3793 = !DILocation(line: 1734, column: 41, scope: !3791)
!3794 = !DILocation(line: 1734, column: 9, scope: !3791)
!3795 = !DILocation(line: 1735, column: 24, scope: !3791)
!3796 = !DILocation(line: 1735, column: 27, scope: !3791)
!3797 = !DILocation(line: 1735, column: 38, scope: !3791)
!3798 = !DILocation(line: 1735, column: 9, scope: !3791)
!3799 = !DILocation(line: 1736, column: 24, scope: !3791)
!3800 = !DILocation(line: 1736, column: 27, scope: !3791)
!3801 = !DILocation(line: 1736, column: 40, scope: !3791)
!3802 = !DILocation(line: 1736, column: 9, scope: !3791)
!3803 = !DILocation(line: 1737, column: 9, scope: !3791)
!3804 = !DILocation(line: 1740, column: 5, scope: !3755)
!3805 = !DILocation(line: 1741, column: 1, scope: !3755)
!3806 = distinct !DISubprogram(name: "ref_frames", scope: !904, file: !904, line: 1953, type: !3807, isLocal: true, isDefinition: true, scopeLine: 1954, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!890, !1707, !1707}
!3809 = !DILocalVariable(name: "dst", arg: 1, scope: !3806, file: !904, line: 1953, type: !1707)
!3810 = !DILocation(line: 1953, column: 41, scope: !3806)
!3811 = !DILocalVariable(name: "src", arg: 2, scope: !3806, file: !904, line: 1953, type: !1707)
!3812 = !DILocation(line: 1953, column: 64, scope: !3806)
!3813 = !DILocalVariable(name: "ret", scope: !3806, file: !904, line: 1955, type: !890)
!3814 = !DILocation(line: 1955, column: 9, scope: !3806)
!3815 = !DILocation(line: 1956, column: 26, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3806, file: !904, line: 1956, column: 9)
!3817 = !DILocation(line: 1956, column: 32, scope: !3816)
!3818 = !DILocation(line: 1956, column: 37, scope: !3816)
!3819 = !DILocation(line: 1956, column: 53, scope: !3816)
!3820 = !DILocation(line: 1956, column: 58, scope: !3816)
!3821 = !DILocation(line: 1956, column: 16, scope: !3816)
!3822 = !DILocation(line: 1956, column: 14, scope: !3816)
!3823 = !DILocation(line: 1956, column: 74, scope: !3816)
!3824 = !DILocation(line: 1956, column: 78, scope: !3816)
!3825 = !DILocation(line: 1957, column: 26, scope: !3816)
!3826 = !DILocation(line: 1957, column: 32, scope: !3816)
!3827 = !DILocation(line: 1957, column: 37, scope: !3816)
!3828 = !DILocation(line: 1957, column: 52, scope: !3816)
!3829 = !DILocation(line: 1957, column: 57, scope: !3816)
!3830 = !DILocation(line: 1957, column: 16, scope: !3816)
!3831 = !DILocation(line: 1957, column: 14, scope: !3816)
!3832 = !DILocation(line: 1957, column: 72, scope: !3816)
!3833 = !DILocation(line: 1957, column: 76, scope: !3816)
!3834 = !DILocation(line: 1958, column: 26, scope: !3816)
!3835 = !DILocation(line: 1958, column: 32, scope: !3816)
!3836 = !DILocation(line: 1958, column: 37, scope: !3816)
!3837 = !DILocation(line: 1958, column: 50, scope: !3816)
!3838 = !DILocation(line: 1958, column: 55, scope: !3816)
!3839 = !DILocation(line: 1958, column: 16, scope: !3816)
!3840 = !DILocation(line: 1958, column: 14, scope: !3816)
!3841 = !DILocation(line: 1958, column: 68, scope: !3816)
!3842 = !DILocation(line: 1956, column: 9, scope: !3843)
!3843 = !DILexicalBlockFile(scope: !3806, file: !904, discriminator: 1)
!3844 = !DILocation(line: 1959, column: 16, scope: !3816)
!3845 = !DILocation(line: 1959, column: 9, scope: !3816)
!3846 = !DILocation(line: 1960, column: 5, scope: !3806)
!3847 = !DILocation(line: 1961, column: 1, scope: !3806)
!3848 = distinct !DISubprogram(name: "allocate_tables", scope: !904, file: !904, line: 1687, type: !995, isLocal: true, isDefinition: true, scopeLine: 1688, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!3849 = !DILocalVariable(name: "avctx", arg: 1, scope: !3848, file: !904, line: 1687, type: !997)
!3850 = !DILocation(line: 1687, column: 66, scope: !3848)
!3851 = !DILocalVariable(name: "s", scope: !3848, file: !904, line: 1689, type: !1707)
!3852 = !DILocation(line: 1689, column: 23, scope: !3848)
!3853 = !DILocation(line: 1689, column: 27, scope: !3848)
!3854 = !DILocation(line: 1689, column: 34, scope: !3848)
!3855 = !DILocalVariable(name: "y_fragment_count", scope: !3848, file: !904, line: 1690, type: !890)
!3856 = !DILocation(line: 1690, column: 9, scope: !3848)
!3857 = !DILocalVariable(name: "c_fragment_count", scope: !3848, file: !904, line: 1690, type: !890)
!3858 = !DILocation(line: 1690, column: 27, scope: !3848)
!3859 = !DILocation(line: 1692, column: 17, scope: !3848)
!3860 = !DILocation(line: 1692, column: 5, scope: !3848)
!3861 = !DILocation(line: 1694, column: 24, scope: !3848)
!3862 = !DILocation(line: 1694, column: 27, scope: !3848)
!3863 = !DILocation(line: 1694, column: 47, scope: !3848)
!3864 = !DILocation(line: 1694, column: 50, scope: !3848)
!3865 = !DILocation(line: 1694, column: 45, scope: !3848)
!3866 = !DILocation(line: 1694, column: 22, scope: !3848)
!3867 = !DILocation(line: 1695, column: 24, scope: !3848)
!3868 = !DILocation(line: 1695, column: 27, scope: !3848)
!3869 = !DILocation(line: 1695, column: 47, scope: !3848)
!3870 = !DILocation(line: 1695, column: 50, scope: !3848)
!3871 = !DILocation(line: 1695, column: 45, scope: !3848)
!3872 = !DILocation(line: 1695, column: 22, scope: !3848)
!3873 = !DILocation(line: 1697, column: 39, scope: !3848)
!3874 = !DILocation(line: 1697, column: 42, scope: !3848)
!3875 = !DILocation(line: 1697, column: 28, scope: !3848)
!3876 = !DILocation(line: 1697, column: 5, scope: !3848)
!3877 = !DILocation(line: 1697, column: 8, scope: !3848)
!3878 = !DILocation(line: 1697, column: 26, scope: !3848)
!3879 = !DILocation(line: 1698, column: 41, scope: !3848)
!3880 = !DILocation(line: 1698, column: 44, scope: !3848)
!3881 = !DILocation(line: 1698, column: 24, scope: !3848)
!3882 = !DILocation(line: 1698, column: 5, scope: !3848)
!3883 = !DILocation(line: 1698, column: 8, scope: !3848)
!3884 = !DILocation(line: 1698, column: 22, scope: !3848)
!3885 = !DILocation(line: 1700, column: 51, scope: !3848)
!3886 = !DILocation(line: 1700, column: 54, scope: !3848)
!3887 = !DILocation(line: 1700, column: 34, scope: !3848)
!3888 = !DILocation(line: 1700, column: 5, scope: !3848)
!3889 = !DILocation(line: 1700, column: 9, scope: !3848)
!3890 = !DILocation(line: 1700, column: 32, scope: !3848)
!3891 = !DILocation(line: 1701, column: 51, scope: !3848)
!3892 = !DILocation(line: 1701, column: 54, scope: !3848)
!3893 = !DILocation(line: 1701, column: 34, scope: !3848)
!3894 = !DILocation(line: 1701, column: 5, scope: !3848)
!3895 = !DILocation(line: 1701, column: 8, scope: !3848)
!3896 = !DILocation(line: 1701, column: 32, scope: !3848)
!3897 = !DILocation(line: 1702, column: 12, scope: !3848)
!3898 = !DILocation(line: 1702, column: 16, scope: !3848)
!3899 = !DILocation(line: 1702, column: 5, scope: !3848)
!3900 = !DILocation(line: 1704, column: 43, scope: !3848)
!3901 = !DILocation(line: 1704, column: 46, scope: !3848)
!3902 = !DILocation(line: 1704, column: 26, scope: !3848)
!3903 = !DILocation(line: 1704, column: 5, scope: !3848)
!3904 = !DILocation(line: 1704, column: 8, scope: !3848)
!3905 = !DILocation(line: 1704, column: 24, scope: !3848)
!3906 = !DILocation(line: 1706, column: 41, scope: !3848)
!3907 = !DILocation(line: 1706, column: 24, scope: !3848)
!3908 = !DILocation(line: 1706, column: 5, scope: !3848)
!3909 = !DILocation(line: 1706, column: 8, scope: !3848)
!3910 = !DILocation(line: 1706, column: 22, scope: !3848)
!3911 = !DILocation(line: 1707, column: 41, scope: !3848)
!3912 = !DILocation(line: 1707, column: 24, scope: !3848)
!3913 = !DILocation(line: 1707, column: 5, scope: !3848)
!3914 = !DILocation(line: 1707, column: 8, scope: !3848)
!3915 = !DILocation(line: 1707, column: 22, scope: !3848)
!3916 = !DILocation(line: 1710, column: 48, scope: !3848)
!3917 = !DILocation(line: 1710, column: 51, scope: !3848)
!3918 = !DILocation(line: 1710, column: 31, scope: !3848)
!3919 = !DILocation(line: 1710, column: 5, scope: !3848)
!3920 = !DILocation(line: 1710, column: 8, scope: !3848)
!3921 = !DILocation(line: 1710, column: 29, scope: !3848)
!3922 = !DILocation(line: 1711, column: 39, scope: !3848)
!3923 = !DILocation(line: 1711, column: 42, scope: !3848)
!3924 = !DILocation(line: 1711, column: 59, scope: !3848)
!3925 = !DILocation(line: 1711, column: 28, scope: !3848)
!3926 = !DILocation(line: 1711, column: 5, scope: !3848)
!3927 = !DILocation(line: 1711, column: 8, scope: !3848)
!3928 = !DILocation(line: 1711, column: 26, scope: !3848)
!3929 = !DILocation(line: 1713, column: 10, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3848, file: !904, line: 1713, column: 9)
!3931 = !DILocation(line: 1713, column: 13, scope: !3930)
!3932 = !DILocation(line: 1713, column: 31, scope: !3930)
!3933 = !DILocation(line: 1713, column: 35, scope: !3934)
!3934 = !DILexicalBlockFile(scope: !3930, file: !904, discriminator: 1)
!3935 = !DILocation(line: 1713, column: 38, scope: !3934)
!3936 = !DILocation(line: 1713, column: 52, scope: !3934)
!3937 = !DILocation(line: 1714, column: 10, scope: !3930)
!3938 = !DILocation(line: 1714, column: 13, scope: !3930)
!3939 = !DILocation(line: 1714, column: 29, scope: !3930)
!3940 = !DILocation(line: 1714, column: 33, scope: !3934)
!3941 = !DILocation(line: 1714, column: 36, scope: !3934)
!3942 = !DILocation(line: 1714, column: 59, scope: !3934)
!3943 = !DILocation(line: 1715, column: 10, scope: !3930)
!3944 = !DILocation(line: 1715, column: 13, scope: !3930)
!3945 = !DILocation(line: 1715, column: 37, scope: !3930)
!3946 = !DILocation(line: 1716, column: 10, scope: !3930)
!3947 = !DILocation(line: 1716, column: 13, scope: !3930)
!3948 = !DILocation(line: 1716, column: 34, scope: !3930)
!3949 = !DILocation(line: 1716, column: 38, scope: !3934)
!3950 = !DILocation(line: 1716, column: 41, scope: !3934)
!3951 = !DILocation(line: 1716, column: 59, scope: !3934)
!3952 = !DILocation(line: 1717, column: 10, scope: !3930)
!3953 = !DILocation(line: 1717, column: 13, scope: !3930)
!3954 = !DILocation(line: 1717, column: 27, scope: !3930)
!3955 = !DILocation(line: 1717, column: 31, scope: !3934)
!3956 = !DILocation(line: 1717, column: 34, scope: !3934)
!3957 = !DILocation(line: 1713, column: 9, scope: !3958)
!3958 = !DILexicalBlockFile(scope: !3848, file: !904, discriminator: 2)
!3959 = !DILocation(line: 1718, column: 24, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3930, file: !904, line: 1717, column: 49)
!3961 = !DILocation(line: 1718, column: 9, scope: !3960)
!3962 = !DILocation(line: 1719, column: 9, scope: !3960)
!3963 = !DILocation(line: 1722, column: 24, scope: !3848)
!3964 = !DILocation(line: 1722, column: 5, scope: !3848)
!3965 = !DILocation(line: 1724, column: 5, scope: !3848)
!3966 = !DILocation(line: 1725, column: 1, scope: !3848)
!3967 = distinct !DISubprogram(name: "update_frames", scope: !904, file: !904, line: 1923, type: !995, isLocal: true, isDefinition: true, scopeLine: 1924, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!3968 = !DILocalVariable(name: "avctx", arg: 1, scope: !3967, file: !904, line: 1923, type: !997)
!3969 = !DILocation(line: 1923, column: 42, scope: !3967)
!3970 = !DILocalVariable(name: "s", scope: !3967, file: !904, line: 1925, type: !1707)
!3971 = !DILocation(line: 1925, column: 23, scope: !3967)
!3972 = !DILocation(line: 1925, column: 27, scope: !3967)
!3973 = !DILocation(line: 1925, column: 34, scope: !3967)
!3974 = !DILocalVariable(name: "ret", scope: !3967, file: !904, line: 1926, type: !890)
!3975 = !DILocation(line: 1926, column: 9, scope: !3967)
!3976 = !DILocation(line: 1929, column: 30, scope: !3967)
!3977 = !DILocation(line: 1929, column: 38, scope: !3967)
!3978 = !DILocation(line: 1929, column: 41, scope: !3967)
!3979 = !DILocation(line: 1929, column: 5, scope: !3967)
!3980 = !DILocation(line: 1930, column: 32, scope: !3967)
!3981 = !DILocation(line: 1930, column: 35, scope: !3967)
!3982 = !DILocation(line: 1930, column: 48, scope: !3967)
!3983 = !DILocation(line: 1930, column: 51, scope: !3967)
!3984 = !DILocation(line: 1930, column: 11, scope: !3967)
!3985 = !DILocation(line: 1930, column: 9, scope: !3967)
!3986 = !DILocation(line: 1931, column: 9, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3967, file: !904, line: 1931, column: 9)
!3988 = !DILocation(line: 1931, column: 13, scope: !3987)
!3989 = !DILocation(line: 1931, column: 9, scope: !3967)
!3990 = !DILocation(line: 1932, column: 9, scope: !3987)
!3991 = !DILocation(line: 1934, column: 9, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3967, file: !904, line: 1934, column: 9)
!3993 = !DILocation(line: 1934, column: 12, scope: !3992)
!3994 = !DILocation(line: 1934, column: 9, scope: !3967)
!3995 = !DILocation(line: 1935, column: 34, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !904, line: 1934, column: 22)
!3997 = !DILocation(line: 1935, column: 42, scope: !3996)
!3998 = !DILocation(line: 1935, column: 45, scope: !3996)
!3999 = !DILocation(line: 1935, column: 9, scope: !3996)
!4000 = !DILocation(line: 1936, column: 36, scope: !3996)
!4001 = !DILocation(line: 1936, column: 39, scope: !3996)
!4002 = !DILocation(line: 1936, column: 54, scope: !3996)
!4003 = !DILocation(line: 1936, column: 57, scope: !3996)
!4004 = !DILocation(line: 1936, column: 15, scope: !3996)
!4005 = !DILocation(line: 1936, column: 13, scope: !3996)
!4006 = !DILocation(line: 1937, column: 5, scope: !3996)
!4007 = !DILocation(line: 1934, column: 12, scope: !4008)
!4008 = !DILexicalBlockFile(scope: !3992, file: !904, discriminator: 1)
!4009 = !DILocation(line: 1940, column: 30, scope: !3967)
!4010 = !DILocation(line: 1940, column: 38, scope: !3967)
!4011 = !DILocation(line: 1940, column: 41, scope: !3967)
!4012 = !DILocation(line: 1940, column: 5, scope: !3967)
!4013 = !DILocation(line: 1941, column: 12, scope: !3967)
!4014 = !DILocation(line: 1941, column: 5, scope: !3967)
!4015 = distinct !DISubprogram(name: "ref_frame", scope: !904, file: !904, line: 1945, type: !4016, isLocal: true, isDefinition: true, scopeLine: 1946, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!890, !1707, !4018, !4018}
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!4019 = !DILocalVariable(name: "s", arg: 1, scope: !4015, file: !904, line: 1945, type: !1707)
!4020 = !DILocation(line: 1945, column: 40, scope: !4015)
!4021 = !DILocalVariable(name: "dst", arg: 2, scope: !4015, file: !904, line: 1945, type: !4018)
!4022 = !DILocation(line: 1945, column: 56, scope: !4015)
!4023 = !DILocalVariable(name: "src", arg: 3, scope: !4015, file: !904, line: 1945, type: !4018)
!4024 = !DILocation(line: 1945, column: 74, scope: !4015)
!4025 = !DILocation(line: 1947, column: 30, scope: !4015)
!4026 = !DILocation(line: 1947, column: 33, scope: !4015)
!4027 = !DILocation(line: 1947, column: 40, scope: !4015)
!4028 = !DILocation(line: 1947, column: 5, scope: !4015)
!4029 = !DILocation(line: 1948, column: 9, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4015, file: !904, line: 1948, column: 9)
!4031 = !DILocation(line: 1948, column: 14, scope: !4030)
!4032 = !DILocation(line: 1948, column: 17, scope: !4030)
!4033 = !DILocation(line: 1948, column: 9, scope: !4015)
!4034 = !DILocation(line: 1949, column: 36, scope: !4030)
!4035 = !DILocation(line: 1949, column: 41, scope: !4030)
!4036 = !DILocation(line: 1949, column: 16, scope: !4030)
!4037 = !DILocation(line: 1949, column: 9, scope: !4030)
!4038 = !DILocation(line: 1950, column: 5, scope: !4015)
!4039 = !DILocation(line: 1951, column: 1, scope: !4015)
!4040 = distinct !DISubprogram(name: "free_tables", scope: !904, file: !904, line: 272, type: !1622, isLocal: true, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4041 = !DILocalVariable(name: "avctx", arg: 1, scope: !4040, file: !904, line: 272, type: !997)
!4042 = !DILocation(line: 272, column: 63, scope: !4040)
!4043 = !DILocalVariable(name: "s", scope: !4040, file: !904, line: 274, type: !1707)
!4044 = !DILocation(line: 274, column: 23, scope: !4040)
!4045 = !DILocation(line: 274, column: 27, scope: !4040)
!4046 = !DILocation(line: 274, column: 34, scope: !4040)
!4047 = !DILocation(line: 276, column: 15, scope: !4040)
!4048 = !DILocation(line: 276, column: 18, scope: !4040)
!4049 = !DILocation(line: 276, column: 14, scope: !4040)
!4050 = !DILocation(line: 276, column: 5, scope: !4040)
!4051 = !DILocation(line: 277, column: 15, scope: !4040)
!4052 = !DILocation(line: 277, column: 18, scope: !4040)
!4053 = !DILocation(line: 277, column: 14, scope: !4040)
!4054 = !DILocation(line: 277, column: 5, scope: !4040)
!4055 = !DILocation(line: 278, column: 15, scope: !4040)
!4056 = !DILocation(line: 278, column: 18, scope: !4040)
!4057 = !DILocation(line: 278, column: 14, scope: !4040)
!4058 = !DILocation(line: 278, column: 5, scope: !4040)
!4059 = !DILocation(line: 279, column: 15, scope: !4040)
!4060 = !DILocation(line: 279, column: 18, scope: !4040)
!4061 = !DILocation(line: 279, column: 14, scope: !4040)
!4062 = !DILocation(line: 279, column: 5, scope: !4040)
!4063 = !DILocation(line: 280, column: 15, scope: !4040)
!4064 = !DILocation(line: 280, column: 18, scope: !4040)
!4065 = !DILocation(line: 280, column: 14, scope: !4040)
!4066 = !DILocation(line: 280, column: 5, scope: !4040)
!4067 = !DILocation(line: 281, column: 15, scope: !4040)
!4068 = !DILocation(line: 281, column: 18, scope: !4040)
!4069 = !DILocation(line: 281, column: 14, scope: !4040)
!4070 = !DILocation(line: 281, column: 5, scope: !4040)
!4071 = !DILocation(line: 282, column: 15, scope: !4040)
!4072 = !DILocation(line: 282, column: 18, scope: !4040)
!4073 = !DILocation(line: 282, column: 14, scope: !4040)
!4074 = !DILocation(line: 282, column: 5, scope: !4040)
!4075 = !DILocation(line: 283, column: 15, scope: !4040)
!4076 = !DILocation(line: 283, column: 18, scope: !4040)
!4077 = !DILocation(line: 283, column: 14, scope: !4040)
!4078 = !DILocation(line: 283, column: 5, scope: !4040)
!4079 = !DILocation(line: 284, column: 15, scope: !4040)
!4080 = !DILocation(line: 284, column: 18, scope: !4040)
!4081 = !DILocation(line: 284, column: 14, scope: !4040)
!4082 = !DILocation(line: 284, column: 5, scope: !4040)
!4083 = !DILocation(line: 285, column: 1, scope: !4040)
!4084 = distinct !DISubprogram(name: "init_block_mapping", scope: !904, file: !904, line: 341, type: !3756, isLocal: true, isDefinition: true, scopeLine: 342, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4085 = !DILocalVariable(name: "s", arg: 1, scope: !4084, file: !904, line: 341, type: !1707)
!4086 = !DILocation(line: 341, column: 49, scope: !4084)
!4087 = !DILocalVariable(name: "sb_x", scope: !4084, file: !904, line: 343, type: !890)
!4088 = !DILocation(line: 343, column: 9, scope: !4084)
!4089 = !DILocalVariable(name: "sb_y", scope: !4084, file: !904, line: 343, type: !890)
!4090 = !DILocation(line: 343, column: 15, scope: !4084)
!4091 = !DILocalVariable(name: "plane", scope: !4084, file: !904, line: 343, type: !890)
!4092 = !DILocation(line: 343, column: 21, scope: !4084)
!4093 = !DILocalVariable(name: "x", scope: !4084, file: !904, line: 344, type: !890)
!4094 = !DILocation(line: 344, column: 9, scope: !4084)
!4095 = !DILocalVariable(name: "y", scope: !4084, file: !904, line: 344, type: !890)
!4096 = !DILocation(line: 344, column: 12, scope: !4084)
!4097 = !DILocalVariable(name: "i", scope: !4084, file: !904, line: 344, type: !890)
!4098 = !DILocation(line: 344, column: 15, scope: !4084)
!4099 = !DILocalVariable(name: "j", scope: !4084, file: !904, line: 344, type: !890)
!4100 = !DILocation(line: 344, column: 18, scope: !4084)
!4101 = !DILocation(line: 346, column: 16, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4084, file: !904, line: 346, column: 5)
!4103 = !DILocation(line: 346, column: 10, scope: !4102)
!4104 = !DILocation(line: 346, column: 21, scope: !4105)
!4105 = !DILexicalBlockFile(scope: !4106, file: !904, discriminator: 1)
!4106 = distinct !DILexicalBlock(scope: !4102, file: !904, line: 346, column: 5)
!4107 = !DILocation(line: 346, column: 27, scope: !4105)
!4108 = !DILocation(line: 346, column: 5, scope: !4105)
!4109 = !DILocalVariable(name: "sb_width", scope: !4110, file: !904, line: 347, type: !890)
!4110 = distinct !DILexicalBlock(scope: !4106, file: !904, line: 346, column: 41)
!4111 = !DILocation(line: 347, column: 13, scope: !4110)
!4112 = !DILocation(line: 347, column: 24, scope: !4110)
!4113 = !DILocation(line: 347, column: 32, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !4110, file: !904, discriminator: 1)
!4115 = !DILocation(line: 347, column: 35, scope: !4114)
!4116 = !DILocation(line: 347, column: 24, scope: !4114)
!4117 = !DILocation(line: 348, column: 35, scope: !4110)
!4118 = !DILocation(line: 348, column: 38, scope: !4110)
!4119 = !DILocation(line: 347, column: 24, scope: !4120)
!4120 = !DILexicalBlockFile(scope: !4110, file: !904, discriminator: 2)
!4121 = !DILocation(line: 347, column: 24, scope: !4122)
!4122 = !DILexicalBlockFile(scope: !4110, file: !904, discriminator: 3)
!4123 = !DILocation(line: 347, column: 13, scope: !4122)
!4124 = !DILocalVariable(name: "sb_height", scope: !4110, file: !904, line: 349, type: !890)
!4125 = !DILocation(line: 349, column: 13, scope: !4110)
!4126 = !DILocation(line: 349, column: 25, scope: !4110)
!4127 = !DILocation(line: 349, column: 33, scope: !4114)
!4128 = !DILocation(line: 349, column: 36, scope: !4114)
!4129 = !DILocation(line: 349, column: 25, scope: !4114)
!4130 = !DILocation(line: 350, column: 35, scope: !4110)
!4131 = !DILocation(line: 350, column: 38, scope: !4110)
!4132 = !DILocation(line: 349, column: 25, scope: !4120)
!4133 = !DILocation(line: 349, column: 25, scope: !4122)
!4134 = !DILocation(line: 349, column: 13, scope: !4122)
!4135 = !DILocalVariable(name: "frag_width", scope: !4110, file: !904, line: 351, type: !890)
!4136 = !DILocation(line: 351, column: 13, scope: !4110)
!4137 = !DILocation(line: 351, column: 46, scope: !4110)
!4138 = !DILocation(line: 351, column: 45, scope: !4110)
!4139 = !DILocation(line: 351, column: 44, scope: !4110)
!4140 = !DILocation(line: 351, column: 26, scope: !4110)
!4141 = !DILocation(line: 351, column: 29, scope: !4110)
!4142 = !DILocalVariable(name: "frag_height", scope: !4110, file: !904, line: 352, type: !890)
!4143 = !DILocation(line: 352, column: 13, scope: !4110)
!4144 = !DILocation(line: 352, column: 48, scope: !4110)
!4145 = !DILocation(line: 352, column: 47, scope: !4110)
!4146 = !DILocation(line: 352, column: 46, scope: !4110)
!4147 = !DILocation(line: 352, column: 27, scope: !4110)
!4148 = !DILocation(line: 352, column: 30, scope: !4110)
!4149 = !DILocation(line: 354, column: 19, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4110, file: !904, line: 354, column: 9)
!4151 = !DILocation(line: 354, column: 14, scope: !4150)
!4152 = !DILocation(line: 354, column: 24, scope: !4153)
!4153 = !DILexicalBlockFile(scope: !4154, file: !904, discriminator: 1)
!4154 = distinct !DILexicalBlock(scope: !4150, file: !904, line: 354, column: 9)
!4155 = !DILocation(line: 354, column: 31, scope: !4153)
!4156 = !DILocation(line: 354, column: 29, scope: !4153)
!4157 = !DILocation(line: 354, column: 9, scope: !4153)
!4158 = !DILocation(line: 355, column: 23, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4154, file: !904, line: 355, column: 13)
!4160 = !DILocation(line: 355, column: 18, scope: !4159)
!4161 = !DILocation(line: 355, column: 28, scope: !4162)
!4162 = !DILexicalBlockFile(scope: !4163, file: !904, discriminator: 1)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !904, line: 355, column: 13)
!4164 = !DILocation(line: 355, column: 35, scope: !4162)
!4165 = !DILocation(line: 355, column: 33, scope: !4162)
!4166 = !DILocation(line: 355, column: 13, scope: !4162)
!4167 = !DILocation(line: 356, column: 24, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4163, file: !904, line: 356, column: 17)
!4169 = !DILocation(line: 356, column: 22, scope: !4168)
!4170 = !DILocation(line: 356, column: 29, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !4172, file: !904, discriminator: 1)
!4172 = distinct !DILexicalBlock(scope: !4168, file: !904, line: 356, column: 17)
!4173 = !DILocation(line: 356, column: 31, scope: !4171)
!4174 = !DILocation(line: 356, column: 17, scope: !4171)
!4175 = !DILocation(line: 357, column: 29, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4172, file: !904, line: 356, column: 42)
!4177 = !DILocation(line: 357, column: 27, scope: !4176)
!4178 = !DILocation(line: 357, column: 51, scope: !4176)
!4179 = !DILocation(line: 357, column: 36, scope: !4176)
!4180 = !DILocation(line: 357, column: 34, scope: !4176)
!4181 = !DILocation(line: 357, column: 23, scope: !4176)
!4182 = !DILocation(line: 358, column: 29, scope: !4176)
!4183 = !DILocation(line: 358, column: 27, scope: !4176)
!4184 = !DILocation(line: 358, column: 51, scope: !4176)
!4185 = !DILocation(line: 358, column: 36, scope: !4176)
!4186 = !DILocation(line: 358, column: 34, scope: !4176)
!4187 = !DILocation(line: 358, column: 23, scope: !4176)
!4188 = !DILocation(line: 360, column: 25, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4176, file: !904, line: 360, column: 25)
!4190 = !DILocation(line: 360, column: 29, scope: !4189)
!4191 = !DILocation(line: 360, column: 27, scope: !4189)
!4192 = !DILocation(line: 360, column: 40, scope: !4189)
!4193 = !DILocation(line: 360, column: 43, scope: !4194)
!4194 = !DILexicalBlockFile(scope: !4189, file: !904, discriminator: 1)
!4195 = !DILocation(line: 360, column: 47, scope: !4194)
!4196 = !DILocation(line: 360, column: 45, scope: !4194)
!4197 = !DILocation(line: 360, column: 25, scope: !4194)
!4198 = !DILocation(line: 361, column: 74, scope: !4189)
!4199 = !DILocation(line: 361, column: 56, scope: !4189)
!4200 = !DILocation(line: 361, column: 59, scope: !4189)
!4201 = !DILocation(line: 362, column: 56, scope: !4189)
!4202 = !DILocation(line: 362, column: 60, scope: !4189)
!4203 = !DILocation(line: 362, column: 58, scope: !4189)
!4204 = !DILocation(line: 361, column: 81, scope: !4189)
!4205 = !DILocation(line: 362, column: 73, scope: !4189)
!4206 = !DILocation(line: 362, column: 71, scope: !4189)
!4207 = !DILocation(line: 361, column: 50, scope: !4189)
!4208 = !DILocation(line: 361, column: 25, scope: !4189)
!4209 = !DILocation(line: 361, column: 28, scope: !4189)
!4210 = !DILocation(line: 361, column: 54, scope: !4189)
!4211 = !DILocation(line: 364, column: 50, scope: !4189)
!4212 = !DILocation(line: 364, column: 25, scope: !4189)
!4213 = !DILocation(line: 364, column: 28, scope: !4189)
!4214 = !DILocation(line: 364, column: 54, scope: !4189)
!4215 = !DILocation(line: 365, column: 17, scope: !4176)
!4216 = !DILocation(line: 356, column: 38, scope: !4217)
!4217 = !DILexicalBlockFile(scope: !4172, file: !904, discriminator: 2)
!4218 = !DILocation(line: 356, column: 17, scope: !4217)
!4219 = distinct !{!4219, !4220}
!4220 = !DILocation(line: 356, column: 17, scope: !4163)
!4221 = !DILocation(line: 365, column: 17, scope: !4222)
!4222 = !DILexicalBlockFile(scope: !4168, file: !904, discriminator: 1)
!4223 = !DILocation(line: 355, column: 49, scope: !4224)
!4224 = !DILexicalBlockFile(scope: !4163, file: !904, discriminator: 2)
!4225 = !DILocation(line: 355, column: 13, scope: !4224)
!4226 = distinct !{!4226, !4227}
!4227 = !DILocation(line: 355, column: 13, scope: !4154)
!4228 = !DILocation(line: 365, column: 17, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4159, file: !904, discriminator: 2)
!4230 = !DILocation(line: 354, column: 46, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !4154, file: !904, discriminator: 2)
!4232 = !DILocation(line: 354, column: 9, scope: !4231)
!4233 = distinct !{!4233, !4234}
!4234 = !DILocation(line: 354, column: 9, scope: !4110)
!4235 = !DILocation(line: 366, column: 5, scope: !4110)
!4236 = !DILocation(line: 346, column: 37, scope: !4237)
!4237 = !DILexicalBlockFile(scope: !4106, file: !904, discriminator: 2)
!4238 = !DILocation(line: 346, column: 5, scope: !4237)
!4239 = distinct !{!4239, !4240}
!4240 = !DILocation(line: 346, column: 5, scope: !4084)
!4241 = !DILocation(line: 368, column: 5, scope: !4084)
!4242 = distinct !DISubprogram(name: "init_get_bits8", scope: !2183, file: !2183, line: 650, type: !4243, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!890, !4245, !1442, !890}
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64, align: 64)
!4246 = !DILocalVariable(name: "s", arg: 1, scope: !4242, file: !2183, line: 650, type: !4245)
!4247 = !DILocation(line: 650, column: 49, scope: !4242)
!4248 = !DILocalVariable(name: "buffer", arg: 2, scope: !4242, file: !2183, line: 650, type: !1442)
!4249 = !DILocation(line: 650, column: 67, scope: !4242)
!4250 = !DILocalVariable(name: "byte_size", arg: 3, scope: !4242, file: !2183, line: 651, type: !890)
!4251 = !DILocation(line: 651, column: 38, scope: !4242)
!4252 = !DILocation(line: 653, column: 9, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4242, file: !2183, line: 653, column: 9)
!4254 = !DILocation(line: 653, column: 19, scope: !4253)
!4255 = !DILocation(line: 653, column: 36, scope: !4253)
!4256 = !DILocation(line: 653, column: 39, scope: !4257)
!4257 = !DILexicalBlockFile(scope: !4253, file: !2183, discriminator: 1)
!4258 = !DILocation(line: 653, column: 49, scope: !4257)
!4259 = !DILocation(line: 653, column: 9, scope: !4257)
!4260 = !DILocation(line: 654, column: 19, scope: !4253)
!4261 = !DILocation(line: 654, column: 9, scope: !4253)
!4262 = !DILocation(line: 655, column: 26, scope: !4242)
!4263 = !DILocation(line: 655, column: 29, scope: !4242)
!4264 = !DILocation(line: 655, column: 37, scope: !4242)
!4265 = !DILocation(line: 655, column: 47, scope: !4242)
!4266 = !DILocation(line: 655, column: 12, scope: !4242)
!4267 = !DILocation(line: 655, column: 5, scope: !4242)
!4268 = distinct !DISubprogram(name: "get_bits", scope: !2183, file: !2183, line: 381, type: !4269, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!891, !4245, !890}
!4271 = !DILocalVariable(name: "x", arg: 1, scope: !4272, file: !4273, line: 66, type: !898)
!4272 = distinct !DISubprogram(name: "av_bswap32", scope: !4273, file: !4273, line: 66, type: !4274, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4273 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!898, !898}
!4276 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !4277)
!4277 = distinct !DILocation(line: 401, column: 16, scope: !4268)
!4278 = !DILocalVariable(name: "s", arg: 1, scope: !4268, file: !2183, line: 381, type: !4245)
!4279 = !DILocation(line: 381, column: 52, scope: !4268)
!4280 = !DILocalVariable(name: "n", arg: 2, scope: !4268, file: !2183, line: 381, type: !890)
!4281 = !DILocation(line: 381, column: 59, scope: !4268)
!4282 = !DILocalVariable(name: "tmp", scope: !4268, file: !2183, line: 383, type: !890)
!4283 = !DILocation(line: 383, column: 18, scope: !4268)
!4284 = !DILocalVariable(name: "re_index", scope: !4268, file: !2183, line: 399, type: !891)
!4285 = !DILocation(line: 399, column: 18, scope: !4268)
!4286 = !DILocation(line: 399, column: 30, scope: !4268)
!4287 = !DILocation(line: 399, column: 34, scope: !4268)
!4288 = !DILocalVariable(name: "re_cache", scope: !4268, file: !2183, line: 399, type: !891)
!4289 = !DILocation(line: 399, column: 78, scope: !4268)
!4290 = !DILocalVariable(name: "re_size_plus8", scope: !4268, file: !2183, line: 399, type: !891)
!4291 = !DILocation(line: 399, column: 101, scope: !4268)
!4292 = !DILocation(line: 399, column: 118, scope: !4268)
!4293 = !DILocation(line: 399, column: 122, scope: !4268)
!4294 = !DILocation(line: 401, column: 60, scope: !4268)
!4295 = !DILocation(line: 401, column: 64, scope: !4268)
!4296 = !DILocation(line: 401, column: 74, scope: !4268)
!4297 = !DILocation(line: 401, column: 83, scope: !4268)
!4298 = !DILocation(line: 401, column: 71, scope: !4268)
!4299 = !DILocation(line: 401, column: 92, scope: !4268)
!4300 = !DILocation(line: 401, column: 16, scope: !4268)
!4301 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !4277)
!4302 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !4277)
!4303 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !4277)
!4304 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !4277)
!4305 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !4277)
!4306 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !4277)
!4307 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !4277)
!4308 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !4277)
!4309 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !4277)
!4310 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !4277)
!4311 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !4277)
!4312 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !4277)
!4313 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !4277)
!4314 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !4277)
!4315 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !4277)
!4316 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !4277)
!4317 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !4277)
!4318 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !4277)
!4319 = !DILocation(line: 401, column: 100, scope: !4268)
!4320 = !DILocation(line: 401, column: 109, scope: !4268)
!4321 = !DILocation(line: 401, column: 96, scope: !4268)
!4322 = !DILocation(line: 401, column: 14, scope: !4268)
!4323 = !DILocation(line: 402, column: 21, scope: !4268)
!4324 = !DILocation(line: 402, column: 31, scope: !4268)
!4325 = !DILocation(line: 402, column: 11, scope: !4268)
!4326 = !DILocation(line: 402, column: 9, scope: !4268)
!4327 = !DILocation(line: 403, column: 18, scope: !4268)
!4328 = !DILocation(line: 403, column: 36, scope: !4268)
!4329 = !DILocation(line: 403, column: 48, scope: !4268)
!4330 = !DILocation(line: 403, column: 45, scope: !4268)
!4331 = !DILocation(line: 403, column: 33, scope: !4268)
!4332 = !DILocation(line: 403, column: 17, scope: !4268)
!4333 = !DILocation(line: 403, column: 55, scope: !4334)
!4334 = !DILexicalBlockFile(scope: !4268, file: !2183, discriminator: 1)
!4335 = !DILocation(line: 403, column: 67, scope: !4334)
!4336 = !DILocation(line: 403, column: 64, scope: !4334)
!4337 = !DILocation(line: 403, column: 17, scope: !4334)
!4338 = !DILocation(line: 403, column: 74, scope: !4339)
!4339 = !DILexicalBlockFile(scope: !4268, file: !2183, discriminator: 2)
!4340 = !DILocation(line: 403, column: 17, scope: !4339)
!4341 = !DILocation(line: 403, column: 17, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4268, file: !2183, discriminator: 3)
!4343 = !DILocation(line: 403, column: 14, scope: !4342)
!4344 = !DILocation(line: 404, column: 18, scope: !4268)
!4345 = !DILocation(line: 404, column: 6, scope: !4268)
!4346 = !DILocation(line: 404, column: 10, scope: !4268)
!4347 = !DILocation(line: 404, column: 16, scope: !4268)
!4348 = !DILocation(line: 406, column: 12, scope: !4268)
!4349 = !DILocation(line: 406, column: 5, scope: !4268)
!4350 = distinct !DISubprogram(name: "skip_bits_long", scope: !2183, file: !2183, line: 293, type: !4351, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{null, !4245, !890}
!4353 = !DILocalVariable(name: "a", arg: 1, scope: !4354, file: !4355, line: 127, type: !890)
!4354 = distinct !DISubprogram(name: "av_clip_c", scope: !4355, file: !4355, line: 127, type: !4356, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4355 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!890, !890, !890, !890}
!4358 = !DILocation(line: 127, column: 87, scope: !4354, inlinedAt: !4359)
!4359 = distinct !DILocation(line: 301, column: 17, scope: !4350)
!4360 = !DILocalVariable(name: "amin", arg: 2, scope: !4354, file: !4355, line: 127, type: !890)
!4361 = !DILocation(line: 127, column: 94, scope: !4354, inlinedAt: !4359)
!4362 = !DILocalVariable(name: "amax", arg: 3, scope: !4354, file: !4355, line: 127, type: !890)
!4363 = !DILocation(line: 127, column: 104, scope: !4354, inlinedAt: !4359)
!4364 = !DILocalVariable(name: "s", arg: 1, scope: !4350, file: !2183, line: 293, type: !4245)
!4365 = !DILocation(line: 293, column: 50, scope: !4350)
!4366 = !DILocalVariable(name: "n", arg: 2, scope: !4350, file: !2183, line: 293, type: !890)
!4367 = !DILocation(line: 293, column: 57, scope: !4350)
!4368 = !DILocation(line: 301, column: 27, scope: !4350)
!4369 = !DILocation(line: 301, column: 31, scope: !4350)
!4370 = !DILocation(line: 301, column: 34, scope: !4350)
!4371 = !DILocation(line: 301, column: 30, scope: !4350)
!4372 = !DILocation(line: 301, column: 41, scope: !4350)
!4373 = !DILocation(line: 301, column: 44, scope: !4350)
!4374 = !DILocation(line: 301, column: 65, scope: !4350)
!4375 = !DILocation(line: 301, column: 68, scope: !4350)
!4376 = !DILocation(line: 301, column: 63, scope: !4350)
!4377 = !DILocation(line: 301, column: 17, scope: !4350)
!4378 = !DILocation(line: 132, column: 9, scope: !4379, inlinedAt: !4359)
!4379 = distinct !DILexicalBlock(scope: !4354, file: !4355, line: 132, column: 9)
!4380 = !DILocation(line: 132, column: 13, scope: !4379, inlinedAt: !4359)
!4381 = !DILocation(line: 132, column: 11, scope: !4379, inlinedAt: !4359)
!4382 = !DILocation(line: 132, column: 9, scope: !4354, inlinedAt: !4359)
!4383 = !DILocation(line: 132, column: 26, scope: !4384, inlinedAt: !4359)
!4384 = !DILexicalBlockFile(scope: !4379, file: !4355, discriminator: 1)
!4385 = !DILocation(line: 132, column: 19, scope: !4384, inlinedAt: !4359)
!4386 = !DILocation(line: 133, column: 14, scope: !4387, inlinedAt: !4359)
!4387 = distinct !DILexicalBlock(scope: !4379, file: !4355, line: 133, column: 14)
!4388 = !DILocation(line: 133, column: 18, scope: !4387, inlinedAt: !4359)
!4389 = !DILocation(line: 133, column: 16, scope: !4387, inlinedAt: !4359)
!4390 = !DILocation(line: 133, column: 14, scope: !4379, inlinedAt: !4359)
!4391 = !DILocation(line: 133, column: 31, scope: !4392, inlinedAt: !4359)
!4392 = !DILexicalBlockFile(scope: !4387, file: !4355, discriminator: 1)
!4393 = !DILocation(line: 133, column: 24, scope: !4392, inlinedAt: !4359)
!4394 = !DILocation(line: 134, column: 17, scope: !4387, inlinedAt: !4359)
!4395 = !DILocation(line: 134, column: 10, scope: !4387, inlinedAt: !4359)
!4396 = !DILocation(line: 135, column: 1, scope: !4354, inlinedAt: !4359)
!4397 = !DILocation(line: 301, column: 5, scope: !4350)
!4398 = !DILocation(line: 301, column: 8, scope: !4350)
!4399 = !DILocation(line: 301, column: 14, scope: !4350)
!4400 = !DILocation(line: 304, column: 1, scope: !4350)
!4401 = distinct !DISubprogram(name: "theora_decode_header", scope: !904, file: !904, line: 2287, type: !4402, isLocal: true, isDefinition: true, scopeLine: 2288, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!890, !997, !4245}
!4404 = !DILocalVariable(name: "avctx", arg: 1, scope: !4401, file: !904, line: 2287, type: !997)
!4405 = !DILocation(line: 2287, column: 49, scope: !4401)
!4406 = !DILocalVariable(name: "gb", arg: 2, scope: !4401, file: !904, line: 2287, type: !4245)
!4407 = !DILocation(line: 2287, column: 71, scope: !4401)
!4408 = !DILocalVariable(name: "s", scope: !4401, file: !904, line: 2289, type: !1707)
!4409 = !DILocation(line: 2289, column: 23, scope: !4401)
!4410 = !DILocation(line: 2289, column: 27, scope: !4401)
!4411 = !DILocation(line: 2289, column: 34, scope: !4401)
!4412 = !DILocalVariable(name: "visible_width", scope: !4401, file: !904, line: 2290, type: !890)
!4413 = !DILocation(line: 2290, column: 9, scope: !4401)
!4414 = !DILocalVariable(name: "visible_height", scope: !4401, file: !904, line: 2290, type: !890)
!4415 = !DILocation(line: 2290, column: 24, scope: !4401)
!4416 = !DILocalVariable(name: "colorspace", scope: !4401, file: !904, line: 2290, type: !890)
!4417 = !DILocation(line: 2290, column: 40, scope: !4401)
!4418 = !DILocalVariable(name: "offset_x", scope: !4401, file: !904, line: 2291, type: !900)
!4419 = !DILocation(line: 2291, column: 13, scope: !4401)
!4420 = !DILocalVariable(name: "offset_y", scope: !4401, file: !904, line: 2291, type: !900)
!4421 = !DILocation(line: 2291, column: 27, scope: !4401)
!4422 = !DILocalVariable(name: "ret", scope: !4401, file: !904, line: 2292, type: !890)
!4423 = !DILocation(line: 2292, column: 9, scope: !4401)
!4424 = !DILocalVariable(name: "fps", scope: !4401, file: !904, line: 2293, type: !918)
!4425 = !DILocation(line: 2293, column: 16, scope: !4401)
!4426 = !DILocalVariable(name: "aspect", scope: !4401, file: !904, line: 2293, type: !918)
!4427 = !DILocation(line: 2293, column: 21, scope: !4401)
!4428 = !DILocation(line: 2295, column: 5, scope: !4401)
!4429 = !DILocation(line: 2295, column: 8, scope: !4401)
!4430 = !DILocation(line: 2295, column: 22, scope: !4401)
!4431 = !DILocation(line: 2296, column: 31, scope: !4401)
!4432 = !DILocation(line: 2296, column: 17, scope: !4401)
!4433 = !DILocation(line: 2296, column: 5, scope: !4401)
!4434 = !DILocation(line: 2296, column: 8, scope: !4401)
!4435 = !DILocation(line: 2296, column: 15, scope: !4401)
!4436 = !DILocation(line: 2297, column: 12, scope: !4401)
!4437 = !DILocation(line: 2297, column: 56, scope: !4401)
!4438 = !DILocation(line: 2297, column: 59, scope: !4401)
!4439 = !DILocation(line: 2297, column: 5, scope: !4401)
!4440 = !DILocation(line: 2301, column: 9, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2301, column: 9)
!4442 = !DILocation(line: 2301, column: 12, scope: !4441)
!4443 = !DILocation(line: 2301, column: 19, scope: !4441)
!4444 = !DILocation(line: 2301, column: 9, scope: !4401)
!4445 = !DILocation(line: 2302, column: 9, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4441, file: !904, line: 2301, column: 31)
!4447 = !DILocation(line: 2302, column: 12, scope: !4446)
!4448 = !DILocation(line: 2302, column: 26, scope: !4446)
!4449 = !DILocation(line: 2303, column: 16, scope: !4446)
!4450 = !DILocation(line: 2303, column: 9, scope: !4446)
!4451 = !DILocation(line: 2305, column: 5, scope: !4446)
!4452 = !DILocation(line: 2308, column: 25, scope: !4401)
!4453 = !DILocation(line: 2308, column: 16, scope: !4401)
!4454 = !DILocation(line: 2308, column: 33, scope: !4401)
!4455 = !DILocation(line: 2308, column: 5, scope: !4401)
!4456 = !DILocation(line: 2308, column: 8, scope: !4401)
!4457 = !DILocation(line: 2308, column: 14, scope: !4401)
!4458 = !DILocation(line: 2307, column: 19, scope: !4401)
!4459 = !DILocation(line: 2310, column: 26, scope: !4401)
!4460 = !DILocation(line: 2310, column: 17, scope: !4401)
!4461 = !DILocation(line: 2310, column: 34, scope: !4401)
!4462 = !DILocation(line: 2310, column: 5, scope: !4401)
!4463 = !DILocation(line: 2310, column: 8, scope: !4401)
!4464 = !DILocation(line: 2310, column: 15, scope: !4401)
!4465 = !DILocation(line: 2309, column: 20, scope: !4401)
!4466 = !DILocation(line: 2312, column: 9, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2312, column: 9)
!4468 = !DILocation(line: 2312, column: 12, scope: !4467)
!4469 = !DILocation(line: 2312, column: 19, scope: !4467)
!4470 = !DILocation(line: 2312, column: 9, scope: !4401)
!4471 = !DILocation(line: 2313, column: 39, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4467, file: !904, line: 2312, column: 32)
!4473 = !DILocation(line: 2313, column: 25, scope: !4472)
!4474 = !DILocation(line: 2313, column: 23, scope: !4472)
!4475 = !DILocation(line: 2314, column: 40, scope: !4472)
!4476 = !DILocation(line: 2314, column: 26, scope: !4472)
!4477 = !DILocation(line: 2314, column: 24, scope: !4472)
!4478 = !DILocation(line: 2316, column: 29, scope: !4472)
!4479 = !DILocation(line: 2316, column: 20, scope: !4472)
!4480 = !DILocation(line: 2316, column: 18, scope: !4472)
!4481 = !DILocation(line: 2317, column: 29, scope: !4472)
!4482 = !DILocation(line: 2317, column: 20, scope: !4472)
!4483 = !DILocation(line: 2317, column: 18, scope: !4472)
!4484 = !DILocation(line: 2318, column: 5, scope: !4472)
!4485 = !DILocation(line: 2321, column: 29, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2321, column: 9)
!4487 = !DILocation(line: 2321, column: 44, scope: !4486)
!4488 = !DILocation(line: 2321, column: 63, scope: !4486)
!4489 = !DILocation(line: 2321, column: 9, scope: !4486)
!4490 = !DILocation(line: 2321, column: 70, scope: !4486)
!4491 = !DILocation(line: 2321, column: 74, scope: !4486)
!4492 = !DILocation(line: 2322, column: 9, scope: !4486)
!4493 = !DILocation(line: 2322, column: 25, scope: !4486)
!4494 = !DILocation(line: 2322, column: 23, scope: !4486)
!4495 = !DILocation(line: 2322, column: 36, scope: !4486)
!4496 = !DILocation(line: 2322, column: 39, scope: !4486)
!4497 = !DILocation(line: 2322, column: 34, scope: !4486)
!4498 = !DILocation(line: 2322, column: 45, scope: !4486)
!4499 = !DILocation(line: 2323, column: 9, scope: !4486)
!4500 = !DILocation(line: 2323, column: 26, scope: !4486)
!4501 = !DILocation(line: 2323, column: 24, scope: !4486)
!4502 = !DILocation(line: 2323, column: 37, scope: !4486)
!4503 = !DILocation(line: 2323, column: 40, scope: !4486)
!4504 = !DILocation(line: 2323, column: 35, scope: !4486)
!4505 = !DILocation(line: 2321, column: 9, scope: !4506)
!4506 = !DILexicalBlockFile(scope: !4401, file: !904, discriminator: 1)
!4507 = !DILocation(line: 2324, column: 16, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4486, file: !904, line: 2323, column: 48)
!4509 = !DILocation(line: 2326, column: 16, scope: !4508)
!4510 = !DILocation(line: 2326, column: 31, scope: !4508)
!4511 = !DILocation(line: 2326, column: 47, scope: !4508)
!4512 = !DILocation(line: 2326, column: 57, scope: !4508)
!4513 = !DILocation(line: 2327, column: 16, scope: !4508)
!4514 = !DILocation(line: 2327, column: 19, scope: !4508)
!4515 = !DILocation(line: 2327, column: 26, scope: !4508)
!4516 = !DILocation(line: 2327, column: 29, scope: !4508)
!4517 = !DILocation(line: 2324, column: 9, scope: !4508)
!4518 = !DILocation(line: 2328, column: 9, scope: !4508)
!4519 = !DILocation(line: 2331, column: 29, scope: !4401)
!4520 = !DILocation(line: 2331, column: 15, scope: !4401)
!4521 = !DILocation(line: 2331, column: 9, scope: !4401)
!4522 = !DILocation(line: 2331, column: 13, scope: !4401)
!4523 = !DILocation(line: 2332, column: 29, scope: !4401)
!4524 = !DILocation(line: 2332, column: 15, scope: !4401)
!4525 = !DILocation(line: 2332, column: 9, scope: !4401)
!4526 = !DILocation(line: 2332, column: 13, scope: !4401)
!4527 = !DILocation(line: 2333, column: 13, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2333, column: 9)
!4529 = !DILocation(line: 2333, column: 9, scope: !4528)
!4530 = !DILocation(line: 2333, column: 17, scope: !4528)
!4531 = !DILocation(line: 2333, column: 24, scope: !4532)
!4532 = !DILexicalBlockFile(scope: !4528, file: !904, discriminator: 1)
!4533 = !DILocation(line: 2333, column: 20, scope: !4532)
!4534 = !DILocation(line: 2333, column: 9, scope: !4532)
!4535 = !DILocation(line: 2334, column: 17, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !904, line: 2334, column: 13)
!4537 = distinct !DILexicalBlock(scope: !4528, file: !904, line: 2333, column: 29)
!4538 = !DILocation(line: 2334, column: 21, scope: !4536)
!4539 = !DILocation(line: 2334, column: 25, scope: !4536)
!4540 = !DILocation(line: 2334, column: 32, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !4536, file: !904, discriminator: 1)
!4542 = !DILocation(line: 2334, column: 36, scope: !4541)
!4543 = !DILocation(line: 2334, column: 13, scope: !4541)
!4544 = !DILocation(line: 2335, column: 20, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4536, file: !904, line: 2334, column: 41)
!4546 = !DILocation(line: 2335, column: 13, scope: !4545)
!4547 = !DILocation(line: 2336, column: 13, scope: !4545)
!4548 = !DILocation(line: 2338, column: 20, scope: !4537)
!4549 = !DILocation(line: 2338, column: 27, scope: !4537)
!4550 = !DILocation(line: 2338, column: 37, scope: !4537)
!4551 = !DILocation(line: 2338, column: 43, scope: !4537)
!4552 = !DILocation(line: 2338, column: 50, scope: !4537)
!4553 = !DILocation(line: 2338, column: 60, scope: !4537)
!4554 = !DILocation(line: 2339, column: 23, scope: !4537)
!4555 = !DILocation(line: 2339, column: 19, scope: !4537)
!4556 = !DILocation(line: 2339, column: 32, scope: !4537)
!4557 = !DILocation(line: 2339, column: 28, scope: !4537)
!4558 = !DILocation(line: 2338, column: 9, scope: !4537)
!4559 = !DILocation(line: 2340, column: 5, scope: !4537)
!4560 = !DILocation(line: 2342, column: 32, scope: !4401)
!4561 = !DILocation(line: 2342, column: 18, scope: !4401)
!4562 = !DILocation(line: 2342, column: 12, scope: !4401)
!4563 = !DILocation(line: 2342, column: 16, scope: !4401)
!4564 = !DILocation(line: 2343, column: 32, scope: !4401)
!4565 = !DILocation(line: 2343, column: 18, scope: !4401)
!4566 = !DILocation(line: 2343, column: 12, scope: !4401)
!4567 = !DILocation(line: 2343, column: 16, scope: !4401)
!4568 = !DILocation(line: 2344, column: 16, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2344, column: 9)
!4570 = !DILocation(line: 2344, column: 9, scope: !4569)
!4571 = !DILocation(line: 2344, column: 20, scope: !4569)
!4572 = !DILocation(line: 2344, column: 30, scope: !4573)
!4573 = !DILexicalBlockFile(scope: !4569, file: !904, discriminator: 1)
!4574 = !DILocation(line: 2344, column: 23, scope: !4573)
!4575 = !DILocation(line: 2344, column: 9, scope: !4573)
!4576 = !DILocation(line: 2345, column: 20, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4569, file: !904, line: 2344, column: 35)
!4578 = !DILocation(line: 2345, column: 27, scope: !4577)
!4579 = !DILocation(line: 2345, column: 47, scope: !4577)
!4580 = !DILocation(line: 2346, column: 20, scope: !4577)
!4581 = !DILocation(line: 2346, column: 27, scope: !4577)
!4582 = !DILocation(line: 2346, column: 47, scope: !4577)
!4583 = !DILocation(line: 2347, column: 26, scope: !4577)
!4584 = !DILocation(line: 2347, column: 19, scope: !4577)
!4585 = !DILocation(line: 2347, column: 38, scope: !4577)
!4586 = !DILocation(line: 2347, column: 31, scope: !4577)
!4587 = !DILocation(line: 2345, column: 9, scope: !4577)
!4588 = !DILocation(line: 2348, column: 20, scope: !4577)
!4589 = !DILocation(line: 2348, column: 27, scope: !4577)
!4590 = !DILocation(line: 2348, column: 34, scope: !4577)
!4591 = !DILocation(line: 2348, column: 9, scope: !4577)
!4592 = !DILocation(line: 2349, column: 5, scope: !4577)
!4593 = !DILocation(line: 2351, column: 9, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2351, column: 9)
!4595 = !DILocation(line: 2351, column: 12, scope: !4594)
!4596 = !DILocation(line: 2351, column: 19, scope: !4594)
!4597 = !DILocation(line: 2351, column: 9, scope: !4401)
!4598 = !DILocation(line: 2352, column: 19, scope: !4594)
!4599 = !DILocation(line: 2352, column: 9, scope: !4594)
!4600 = !DILocation(line: 2353, column: 27, scope: !4401)
!4601 = !DILocation(line: 2353, column: 18, scope: !4401)
!4602 = !DILocation(line: 2353, column: 16, scope: !4401)
!4603 = !DILocation(line: 2354, column: 15, scope: !4401)
!4604 = !DILocation(line: 2354, column: 5, scope: !4401)
!4605 = !DILocation(line: 2356, column: 15, scope: !4401)
!4606 = !DILocation(line: 2356, column: 5, scope: !4401)
!4607 = !DILocation(line: 2358, column: 9, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2358, column: 9)
!4609 = !DILocation(line: 2358, column: 12, scope: !4608)
!4610 = !DILocation(line: 2358, column: 19, scope: !4608)
!4611 = !DILocation(line: 2358, column: 9, scope: !4401)
!4612 = !DILocation(line: 2359, column: 19, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4608, file: !904, line: 2358, column: 32)
!4614 = !DILocation(line: 2359, column: 9, scope: !4613)
!4615 = !DILocation(line: 2360, column: 51, scope: !4613)
!4616 = !DILocation(line: 2360, column: 42, scope: !4613)
!4617 = !DILocation(line: 2360, column: 26, scope: !4613)
!4618 = !DILocation(line: 2360, column: 9, scope: !4613)
!4619 = !DILocation(line: 2360, column: 16, scope: !4613)
!4620 = !DILocation(line: 2360, column: 24, scope: !4613)
!4621 = !DILocation(line: 2361, column: 13, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4613, file: !904, line: 2361, column: 13)
!4623 = !DILocation(line: 2361, column: 20, scope: !4622)
!4624 = !DILocation(line: 2361, column: 28, scope: !4622)
!4625 = !DILocation(line: 2361, column: 13, scope: !4613)
!4626 = !DILocation(line: 2362, column: 20, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !904, line: 2361, column: 48)
!4628 = !DILocation(line: 2362, column: 13, scope: !4627)
!4629 = !DILocation(line: 2363, column: 13, scope: !4627)
!4630 = !DILocation(line: 2365, column: 19, scope: !4613)
!4631 = !DILocation(line: 2365, column: 9, scope: !4613)
!4632 = !DILocation(line: 2366, column: 5, scope: !4613)
!4633 = !DILocation(line: 2367, column: 9, scope: !4608)
!4634 = !DILocation(line: 2367, column: 16, scope: !4608)
!4635 = !DILocation(line: 2367, column: 24, scope: !4608)
!4636 = !DILocation(line: 2369, column: 29, scope: !4401)
!4637 = !DILocation(line: 2369, column: 36, scope: !4401)
!4638 = !DILocation(line: 2369, column: 39, scope: !4401)
!4639 = !DILocation(line: 2369, column: 46, scope: !4401)
!4640 = !DILocation(line: 2369, column: 49, scope: !4401)
!4641 = !DILocation(line: 2369, column: 11, scope: !4401)
!4642 = !DILocation(line: 2369, column: 9, scope: !4401)
!4643 = !DILocation(line: 2370, column: 9, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2370, column: 9)
!4645 = !DILocation(line: 2370, column: 13, scope: !4644)
!4646 = !DILocation(line: 2370, column: 9, scope: !4401)
!4647 = !DILocation(line: 2371, column: 16, scope: !4644)
!4648 = !DILocation(line: 2371, column: 9, scope: !4644)
!4649 = !DILocation(line: 2372, column: 11, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2372, column: 9)
!4651 = !DILocation(line: 2372, column: 18, scope: !4650)
!4652 = !DILocation(line: 2372, column: 25, scope: !4650)
!4653 = !DILocation(line: 2372, column: 9, scope: !4401)
!4654 = !DILocation(line: 2373, column: 24, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4650, file: !904, line: 2372, column: 39)
!4656 = !DILocation(line: 2373, column: 9, scope: !4655)
!4657 = !DILocation(line: 2373, column: 16, scope: !4655)
!4658 = !DILocation(line: 2373, column: 22, scope: !4655)
!4659 = !DILocation(line: 2374, column: 25, scope: !4655)
!4660 = !DILocation(line: 2374, column: 9, scope: !4655)
!4661 = !DILocation(line: 2374, column: 16, scope: !4655)
!4662 = !DILocation(line: 2374, column: 23, scope: !4655)
!4663 = !DILocation(line: 2377, column: 23, scope: !4655)
!4664 = !DILocation(line: 2377, column: 9, scope: !4655)
!4665 = !DILocation(line: 2377, column: 12, scope: !4655)
!4666 = !DILocation(line: 2377, column: 21, scope: !4655)
!4667 = !DILocation(line: 2378, column: 23, scope: !4655)
!4668 = !DILocation(line: 2378, column: 26, scope: !4655)
!4669 = !DILocation(line: 2378, column: 35, scope: !4655)
!4670 = !DILocation(line: 2378, column: 33, scope: !4655)
!4671 = !DILocation(line: 2378, column: 52, scope: !4655)
!4672 = !DILocation(line: 2378, column: 50, scope: !4655)
!4673 = !DILocation(line: 2378, column: 9, scope: !4655)
!4674 = !DILocation(line: 2378, column: 12, scope: !4655)
!4675 = !DILocation(line: 2378, column: 21, scope: !4655)
!4676 = !DILocation(line: 2379, column: 5, scope: !4655)
!4677 = !DILocation(line: 2381, column: 9, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2381, column: 9)
!4679 = !DILocation(line: 2381, column: 20, scope: !4678)
!4680 = !DILocation(line: 2381, column: 9, scope: !4401)
!4681 = !DILocation(line: 2382, column: 9, scope: !4678)
!4682 = !DILocation(line: 2382, column: 16, scope: !4678)
!4683 = !DILocation(line: 2382, column: 32, scope: !4678)
!4684 = !DILocation(line: 2383, column: 14, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4678, file: !904, line: 2383, column: 14)
!4686 = !DILocation(line: 2383, column: 25, scope: !4685)
!4687 = !DILocation(line: 2383, column: 14, scope: !4678)
!4688 = !DILocation(line: 2384, column: 9, scope: !4685)
!4689 = !DILocation(line: 2384, column: 16, scope: !4685)
!4690 = !DILocation(line: 2384, column: 32, scope: !4685)
!4691 = !DILocation(line: 2386, column: 9, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4401, file: !904, line: 2386, column: 9)
!4693 = !DILocation(line: 2386, column: 20, scope: !4692)
!4694 = !DILocation(line: 2386, column: 25, scope: !4692)
!4695 = !DILocation(line: 2386, column: 28, scope: !4696)
!4696 = !DILexicalBlockFile(scope: !4692, file: !904, discriminator: 1)
!4697 = !DILocation(line: 2386, column: 39, scope: !4696)
!4698 = !DILocation(line: 2386, column: 9, scope: !4696)
!4699 = !DILocation(line: 2387, column: 9, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4692, file: !904, line: 2386, column: 45)
!4701 = !DILocation(line: 2387, column: 16, scope: !4700)
!4702 = !DILocation(line: 2387, column: 27, scope: !4700)
!4703 = !DILocation(line: 2388, column: 9, scope: !4700)
!4704 = !DILocation(line: 2388, column: 16, scope: !4700)
!4705 = !DILocation(line: 2388, column: 26, scope: !4700)
!4706 = !DILocation(line: 2389, column: 5, scope: !4700)
!4707 = !DILocation(line: 2391, column: 5, scope: !4401)
!4708 = !DILocation(line: 2391, column: 8, scope: !4401)
!4709 = !DILocation(line: 2391, column: 22, scope: !4401)
!4710 = !DILocation(line: 2392, column: 5, scope: !4401)
!4711 = !DILocation(line: 2393, column: 1, scope: !4401)
!4712 = distinct !DISubprogram(name: "theora_decode_tables", scope: !904, file: !904, line: 2395, type: !4402, isLocal: true, isDefinition: true, scopeLine: 2396, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!4713 = !DILocalVariable(name: "avctx", arg: 1, scope: !4712, file: !904, line: 2395, type: !997)
!4714 = !DILocation(line: 2395, column: 49, scope: !4712)
!4715 = !DILocalVariable(name: "gb", arg: 2, scope: !4712, file: !904, line: 2395, type: !4245)
!4716 = !DILocation(line: 2395, column: 71, scope: !4712)
!4717 = !DILocalVariable(name: "s", scope: !4712, file: !904, line: 2397, type: !1707)
!4718 = !DILocation(line: 2397, column: 23, scope: !4712)
!4719 = !DILocation(line: 2397, column: 27, scope: !4712)
!4720 = !DILocation(line: 2397, column: 34, scope: !4712)
!4721 = !DILocalVariable(name: "i", scope: !4712, file: !904, line: 2398, type: !890)
!4722 = !DILocation(line: 2398, column: 9, scope: !4712)
!4723 = !DILocalVariable(name: "n", scope: !4712, file: !904, line: 2398, type: !890)
!4724 = !DILocation(line: 2398, column: 12, scope: !4712)
!4725 = !DILocalVariable(name: "matrices", scope: !4712, file: !904, line: 2398, type: !890)
!4726 = !DILocation(line: 2398, column: 15, scope: !4712)
!4727 = !DILocalVariable(name: "inter", scope: !4712, file: !904, line: 2398, type: !890)
!4728 = !DILocation(line: 2398, column: 25, scope: !4712)
!4729 = !DILocalVariable(name: "plane", scope: !4712, file: !904, line: 2398, type: !890)
!4730 = !DILocation(line: 2398, column: 32, scope: !4712)
!4731 = !DILocation(line: 2400, column: 10, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2400, column: 9)
!4733 = !DILocation(line: 2400, column: 13, scope: !4732)
!4734 = !DILocation(line: 2400, column: 9, scope: !4712)
!4735 = !DILocation(line: 2401, column: 9, scope: !4732)
!4736 = !DILocation(line: 2403, column: 9, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2403, column: 9)
!4738 = !DILocation(line: 2403, column: 12, scope: !4737)
!4739 = !DILocation(line: 2403, column: 19, scope: !4737)
!4740 = !DILocation(line: 2403, column: 9, scope: !4712)
!4741 = !DILocation(line: 2404, column: 22, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4737, file: !904, line: 2403, column: 32)
!4743 = !DILocation(line: 2404, column: 13, scope: !4742)
!4744 = !DILocation(line: 2404, column: 11, scope: !4742)
!4745 = !DILocation(line: 2406, column: 13, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !904, line: 2406, column: 13)
!4747 = !DILocation(line: 2406, column: 13, scope: !4742)
!4748 = !DILocation(line: 2407, column: 20, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4746, file: !904, line: 2407, column: 13)
!4750 = !DILocation(line: 2407, column: 18, scope: !4749)
!4751 = !DILocation(line: 2407, column: 25, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !4753, file: !904, discriminator: 1)
!4753 = distinct !DILexicalBlock(scope: !4749, file: !904, line: 2407, column: 13)
!4754 = !DILocation(line: 2407, column: 27, scope: !4752)
!4755 = !DILocation(line: 2407, column: 13, scope: !4752)
!4756 = !DILocation(line: 2408, column: 54, scope: !4753)
!4757 = !DILocation(line: 2408, column: 58, scope: !4753)
!4758 = !DILocation(line: 2408, column: 45, scope: !4753)
!4759 = !DILocation(line: 2408, column: 40, scope: !4753)
!4760 = !DILocation(line: 2408, column: 17, scope: !4753)
!4761 = !DILocation(line: 2408, column: 20, scope: !4753)
!4762 = !DILocation(line: 2408, column: 43, scope: !4753)
!4763 = !DILocation(line: 2407, column: 34, scope: !4764)
!4764 = !DILexicalBlockFile(scope: !4753, file: !904, discriminator: 2)
!4765 = !DILocation(line: 2407, column: 13, scope: !4764)
!4766 = distinct !{!4766, !4767}
!4767 = !DILocation(line: 2407, column: 13, scope: !4746)
!4768 = !DILocation(line: 2408, column: 59, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4749, file: !904, discriminator: 1)
!4770 = !DILocation(line: 2409, column: 5, scope: !4742)
!4771 = !DILocation(line: 2411, column: 9, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2411, column: 9)
!4773 = !DILocation(line: 2411, column: 12, scope: !4772)
!4774 = !DILocation(line: 2411, column: 19, scope: !4772)
!4775 = !DILocation(line: 2411, column: 9, scope: !4712)
!4776 = !DILocation(line: 2412, column: 22, scope: !4772)
!4777 = !DILocation(line: 2412, column: 13, scope: !4772)
!4778 = !DILocation(line: 2412, column: 29, scope: !4772)
!4779 = !DILocation(line: 2412, column: 11, scope: !4772)
!4780 = !DILocation(line: 2412, column: 9, scope: !4772)
!4781 = !DILocation(line: 2414, column: 11, scope: !4772)
!4782 = !DILocation(line: 2416, column: 12, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2416, column: 5)
!4784 = !DILocation(line: 2416, column: 10, scope: !4783)
!4785 = !DILocation(line: 2416, column: 17, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !4787, file: !904, discriminator: 1)
!4787 = distinct !DILexicalBlock(scope: !4783, file: !904, line: 2416, column: 5)
!4788 = !DILocation(line: 2416, column: 19, scope: !4786)
!4789 = !DILocation(line: 2416, column: 5, scope: !4786)
!4790 = !DILocation(line: 2417, column: 48, scope: !4787)
!4791 = !DILocation(line: 2417, column: 52, scope: !4787)
!4792 = !DILocation(line: 2417, column: 39, scope: !4787)
!4793 = !DILocation(line: 2417, column: 34, scope: !4787)
!4794 = !DILocation(line: 2417, column: 9, scope: !4787)
!4795 = !DILocation(line: 2417, column: 12, scope: !4787)
!4796 = !DILocation(line: 2417, column: 37, scope: !4787)
!4797 = !DILocation(line: 2416, column: 26, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !4787, file: !904, discriminator: 2)
!4799 = !DILocation(line: 2416, column: 5, scope: !4798)
!4800 = distinct !{!4800, !4801}
!4801 = !DILocation(line: 2416, column: 5, scope: !4712)
!4802 = !DILocation(line: 2419, column: 9, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2419, column: 9)
!4804 = !DILocation(line: 2419, column: 12, scope: !4803)
!4805 = !DILocation(line: 2419, column: 19, scope: !4803)
!4806 = !DILocation(line: 2419, column: 9, scope: !4712)
!4807 = !DILocation(line: 2420, column: 22, scope: !4803)
!4808 = !DILocation(line: 2420, column: 13, scope: !4803)
!4809 = !DILocation(line: 2420, column: 29, scope: !4803)
!4810 = !DILocation(line: 2420, column: 11, scope: !4803)
!4811 = !DILocation(line: 2420, column: 9, scope: !4803)
!4812 = !DILocation(line: 2422, column: 11, scope: !4803)
!4813 = !DILocation(line: 2424, column: 12, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2424, column: 5)
!4815 = !DILocation(line: 2424, column: 10, scope: !4814)
!4816 = !DILocation(line: 2424, column: 17, scope: !4817)
!4817 = !DILexicalBlockFile(scope: !4818, file: !904, discriminator: 1)
!4818 = distinct !DILexicalBlock(scope: !4814, file: !904, line: 2424, column: 5)
!4819 = !DILocation(line: 2424, column: 19, scope: !4817)
!4820 = !DILocation(line: 2424, column: 5, scope: !4817)
!4821 = !DILocation(line: 2425, column: 48, scope: !4818)
!4822 = !DILocation(line: 2425, column: 52, scope: !4818)
!4823 = !DILocation(line: 2425, column: 39, scope: !4818)
!4824 = !DILocation(line: 2425, column: 34, scope: !4818)
!4825 = !DILocation(line: 2425, column: 9, scope: !4818)
!4826 = !DILocation(line: 2425, column: 12, scope: !4818)
!4827 = !DILocation(line: 2425, column: 37, scope: !4818)
!4828 = !DILocation(line: 2424, column: 26, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !4818, file: !904, discriminator: 2)
!4830 = !DILocation(line: 2424, column: 5, scope: !4829)
!4831 = distinct !{!4831, !4832}
!4832 = !DILocation(line: 2424, column: 5, scope: !4712)
!4833 = !DILocation(line: 2427, column: 9, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2427, column: 9)
!4835 = !DILocation(line: 2427, column: 12, scope: !4834)
!4836 = !DILocation(line: 2427, column: 19, scope: !4834)
!4837 = !DILocation(line: 2427, column: 9, scope: !4712)
!4838 = !DILocation(line: 2428, column: 29, scope: !4834)
!4839 = !DILocation(line: 2428, column: 20, scope: !4834)
!4840 = !DILocation(line: 2428, column: 36, scope: !4834)
!4841 = !DILocation(line: 2428, column: 18, scope: !4834)
!4842 = !DILocation(line: 2428, column: 9, scope: !4834)
!4843 = !DILocation(line: 2430, column: 18, scope: !4834)
!4844 = !DILocation(line: 2432, column: 9, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2432, column: 9)
!4846 = !DILocation(line: 2432, column: 18, scope: !4845)
!4847 = !DILocation(line: 2432, column: 9, scope: !4712)
!4848 = !DILocation(line: 2433, column: 16, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4845, file: !904, line: 2432, column: 25)
!4850 = !DILocation(line: 2433, column: 9, scope: !4849)
!4851 = !DILocation(line: 2434, column: 9, scope: !4849)
!4852 = !DILocation(line: 2437, column: 12, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2437, column: 5)
!4854 = !DILocation(line: 2437, column: 10, scope: !4853)
!4855 = !DILocation(line: 2437, column: 17, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !4857, file: !904, discriminator: 1)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !904, line: 2437, column: 5)
!4858 = !DILocation(line: 2437, column: 21, scope: !4856)
!4859 = !DILocation(line: 2437, column: 19, scope: !4856)
!4860 = !DILocation(line: 2437, column: 5, scope: !4856)
!4861 = !DILocation(line: 2438, column: 16, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4857, file: !904, line: 2438, column: 9)
!4863 = !DILocation(line: 2438, column: 14, scope: !4862)
!4864 = !DILocation(line: 2438, column: 21, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4866, file: !904, discriminator: 1)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !904, line: 2438, column: 9)
!4867 = !DILocation(line: 2438, column: 23, scope: !4865)
!4868 = !DILocation(line: 2438, column: 9, scope: !4865)
!4869 = !DILocation(line: 2439, column: 45, scope: !4866)
!4870 = !DILocation(line: 2439, column: 36, scope: !4866)
!4871 = !DILocation(line: 2439, column: 31, scope: !4866)
!4872 = !DILocation(line: 2439, column: 13, scope: !4866)
!4873 = !DILocation(line: 2439, column: 28, scope: !4866)
!4874 = !DILocation(line: 2439, column: 16, scope: !4866)
!4875 = !DILocation(line: 2439, column: 34, scope: !4866)
!4876 = !DILocation(line: 2438, column: 30, scope: !4877)
!4877 = !DILexicalBlockFile(scope: !4866, file: !904, discriminator: 2)
!4878 = !DILocation(line: 2438, column: 9, scope: !4877)
!4879 = distinct !{!4879, !4880}
!4880 = !DILocation(line: 2438, column: 9, scope: !4857)
!4881 = !DILocation(line: 2439, column: 50, scope: !4882)
!4882 = !DILexicalBlockFile(scope: !4862, file: !904, discriminator: 1)
!4883 = !DILocation(line: 2437, column: 32, scope: !4884)
!4884 = !DILexicalBlockFile(scope: !4857, file: !904, discriminator: 2)
!4885 = !DILocation(line: 2437, column: 5, scope: !4884)
!4886 = distinct !{!4886, !4887}
!4887 = !DILocation(line: 2437, column: 5, scope: !4712)
!4888 = !DILocation(line: 2441, column: 16, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2441, column: 5)
!4890 = !DILocation(line: 2441, column: 10, scope: !4889)
!4891 = !DILocation(line: 2441, column: 21, scope: !4892)
!4892 = !DILexicalBlockFile(scope: !4893, file: !904, discriminator: 1)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !904, line: 2441, column: 5)
!4894 = !DILocation(line: 2441, column: 27, scope: !4892)
!4895 = !DILocation(line: 2441, column: 5, scope: !4892)
!4896 = !DILocation(line: 2442, column: 20, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !904, line: 2442, column: 9)
!4898 = distinct !DILexicalBlock(scope: !4893, file: !904, line: 2441, column: 42)
!4899 = !DILocation(line: 2442, column: 14, scope: !4897)
!4900 = !DILocation(line: 2442, column: 25, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4902, file: !904, discriminator: 1)
!4902 = distinct !DILexicalBlock(scope: !4897, file: !904, line: 2442, column: 9)
!4903 = !DILocation(line: 2442, column: 31, scope: !4901)
!4904 = !DILocation(line: 2442, column: 9, scope: !4901)
!4905 = !DILocalVariable(name: "newqr", scope: !4906, file: !904, line: 2443, type: !890)
!4906 = distinct !DILexicalBlock(scope: !4902, file: !904, line: 2442, column: 46)
!4907 = !DILocation(line: 2443, column: 17, scope: !4906)
!4908 = !DILocation(line: 2444, column: 17, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !904, line: 2444, column: 17)
!4910 = !DILocation(line: 2444, column: 23, scope: !4909)
!4911 = !DILocation(line: 2444, column: 26, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !4909, file: !904, discriminator: 1)
!4913 = !DILocation(line: 2444, column: 32, scope: !4912)
!4914 = !DILocation(line: 2444, column: 17, scope: !4912)
!4915 = !DILocation(line: 2445, column: 35, scope: !4909)
!4916 = !DILocation(line: 2445, column: 25, scope: !4909)
!4917 = !DILocation(line: 2445, column: 23, scope: !4909)
!4918 = !DILocation(line: 2445, column: 17, scope: !4909)
!4919 = !DILocation(line: 2446, column: 18, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4906, file: !904, line: 2446, column: 17)
!4921 = !DILocation(line: 2446, column: 17, scope: !4906)
!4922 = !DILocalVariable(name: "qtj", scope: !4923, file: !904, line: 2447, type: !890)
!4923 = distinct !DILexicalBlock(scope: !4920, file: !904, line: 2446, column: 25)
!4924 = !DILocation(line: 2447, column: 21, scope: !4923)
!4925 = !DILocalVariable(name: "plj", scope: !4923, file: !904, line: 2447, type: !890)
!4926 = !DILocation(line: 2447, column: 26, scope: !4923)
!4927 = !DILocation(line: 2448, column: 21, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4923, file: !904, line: 2448, column: 21)
!4929 = !DILocation(line: 2448, column: 27, scope: !4928)
!4930 = !DILocation(line: 2448, column: 40, scope: !4931)
!4931 = !DILexicalBlockFile(scope: !4928, file: !904, discriminator: 1)
!4932 = !DILocation(line: 2448, column: 30, scope: !4931)
!4933 = !DILocation(line: 2448, column: 21, scope: !4931)
!4934 = !DILocation(line: 2449, column: 25, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4928, file: !904, line: 2448, column: 45)
!4936 = !DILocation(line: 2450, column: 27, scope: !4935)
!4937 = !DILocation(line: 2450, column: 25, scope: !4935)
!4938 = !DILocation(line: 2451, column: 17, scope: !4935)
!4939 = !DILocation(line: 2452, column: 32, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4928, file: !904, line: 2451, column: 24)
!4941 = !DILocation(line: 2452, column: 30, scope: !4940)
!4942 = !DILocation(line: 2452, column: 40, scope: !4940)
!4943 = !DILocation(line: 2452, column: 38, scope: !4940)
!4944 = !DILocation(line: 2452, column: 46, scope: !4940)
!4945 = !DILocation(line: 2452, column: 51, scope: !4940)
!4946 = !DILocation(line: 2452, column: 25, scope: !4940)
!4947 = !DILocation(line: 2453, column: 28, scope: !4940)
!4948 = !DILocation(line: 2453, column: 34, scope: !4940)
!4949 = !DILocation(line: 2453, column: 39, scope: !4940)
!4950 = !DILocation(line: 2453, column: 25, scope: !4940)
!4951 = !DILocation(line: 2455, column: 62, scope: !4923)
!4952 = !DILocation(line: 2455, column: 45, scope: !4923)
!4953 = !DILocation(line: 2455, column: 57, scope: !4923)
!4954 = !DILocation(line: 2455, column: 48, scope: !4923)
!4955 = !DILocation(line: 2455, column: 36, scope: !4923)
!4956 = !DILocation(line: 2455, column: 17, scope: !4923)
!4957 = !DILocation(line: 2455, column: 29, scope: !4923)
!4958 = !DILocation(line: 2455, column: 20, scope: !4923)
!4959 = !DILocation(line: 2455, column: 43, scope: !4923)
!4960 = !DILocation(line: 2456, column: 42, scope: !4923)
!4961 = !DILocation(line: 2456, column: 24, scope: !4923)
!4962 = !DILocation(line: 2456, column: 35, scope: !4923)
!4963 = !DILocation(line: 2456, column: 27, scope: !4923)
!4964 = !DILocation(line: 2456, column: 17, scope: !4923)
!4965 = !DILocation(line: 2456, column: 66, scope: !4923)
!4966 = !DILocation(line: 2456, column: 50, scope: !4923)
!4967 = !DILocation(line: 2456, column: 61, scope: !4923)
!4968 = !DILocation(line: 2456, column: 53, scope: !4923)
!4969 = !DILocation(line: 2458, column: 42, scope: !4923)
!4970 = !DILocation(line: 2458, column: 24, scope: !4923)
!4971 = !DILocation(line: 2458, column: 35, scope: !4923)
!4972 = !DILocation(line: 2458, column: 27, scope: !4923)
!4973 = !DILocation(line: 2458, column: 17, scope: !4923)
!4974 = !DILocation(line: 2458, column: 66, scope: !4923)
!4975 = !DILocation(line: 2458, column: 50, scope: !4923)
!4976 = !DILocation(line: 2458, column: 61, scope: !4923)
!4977 = !DILocation(line: 2458, column: 53, scope: !4923)
!4978 = !DILocation(line: 2460, column: 13, scope: !4923)
!4979 = !DILocalVariable(name: "qri", scope: !4980, file: !904, line: 2461, type: !890)
!4980 = distinct !DILexicalBlock(scope: !4920, file: !904, line: 2460, column: 20)
!4981 = !DILocation(line: 2461, column: 21, scope: !4980)
!4982 = !DILocalVariable(name: "qi", scope: !4980, file: !904, line: 2462, type: !890)
!4983 = !DILocation(line: 2462, column: 21, scope: !4980)
!4984 = !DILocation(line: 2464, column: 17, scope: !4980)
!4985 = !DILocation(line: 2465, column: 34, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !904, line: 2464, column: 26)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !904, line: 2464, column: 17)
!4988 = distinct !DILexicalBlock(scope: !4980, file: !904, line: 2464, column: 17)
!4989 = !DILocation(line: 2465, column: 59, scope: !4986)
!4990 = !DILocation(line: 2465, column: 68, scope: !4986)
!4991 = !DILocation(line: 2465, column: 72, scope: !4986)
!4992 = !DILocation(line: 2465, column: 44, scope: !4986)
!4993 = !DILocation(line: 2465, column: 42, scope: !4986)
!4994 = !DILocation(line: 2465, column: 77, scope: !4986)
!4995 = !DILocation(line: 2465, column: 25, scope: !4996)
!4996 = !DILexicalBlockFile(scope: !4986, file: !904, discriminator: 1)
!4997 = !DILocation(line: 2465, column: 23, scope: !4986)
!4998 = !DILocation(line: 2466, column: 25, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4986, file: !904, line: 2466, column: 25)
!5000 = !DILocation(line: 2466, column: 30, scope: !4999)
!5001 = !DILocation(line: 2466, column: 27, scope: !4999)
!5002 = !DILocation(line: 2466, column: 25, scope: !4986)
!5003 = !DILocation(line: 2467, column: 32, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4999, file: !904, line: 2466, column: 40)
!5005 = !DILocation(line: 2467, column: 25, scope: !5004)
!5006 = !DILocation(line: 2469, column: 25, scope: !5004)
!5007 = !DILocation(line: 2471, column: 53, scope: !4986)
!5008 = !DILocation(line: 2471, column: 46, scope: !4986)
!5009 = !DILocation(line: 2471, column: 21, scope: !4986)
!5010 = !DILocation(line: 2471, column: 39, scope: !4986)
!5011 = !DILocation(line: 2471, column: 32, scope: !4986)
!5012 = !DILocation(line: 2471, column: 24, scope: !4986)
!5013 = !DILocation(line: 2471, column: 51, scope: !4986)
!5014 = !DILocation(line: 2472, column: 25, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4986, file: !904, line: 2472, column: 25)
!5016 = !DILocation(line: 2472, column: 28, scope: !5015)
!5017 = !DILocation(line: 2472, column: 25, scope: !4986)
!5018 = !DILocation(line: 2473, column: 25, scope: !5015)
!5019 = !DILocation(line: 2474, column: 34, scope: !4986)
!5020 = !DILocation(line: 2474, column: 64, scope: !4986)
!5021 = !DILocation(line: 2474, column: 62, scope: !4986)
!5022 = !DILocation(line: 2474, column: 67, scope: !4986)
!5023 = !DILocation(line: 2474, column: 44, scope: !4986)
!5024 = !DILocation(line: 2474, column: 42, scope: !4986)
!5025 = !DILocation(line: 2474, column: 72, scope: !4986)
!5026 = !DILocation(line: 2474, column: 25, scope: !4996)
!5027 = !DILocation(line: 2474, column: 77, scope: !4986)
!5028 = !DILocation(line: 2474, column: 23, scope: !4986)
!5029 = !DILocation(line: 2475, column: 55, scope: !4986)
!5030 = !DILocation(line: 2475, column: 49, scope: !4986)
!5031 = !DILocation(line: 2475, column: 21, scope: !4986)
!5032 = !DILocation(line: 2475, column: 39, scope: !4986)
!5033 = !DILocation(line: 2475, column: 32, scope: !4986)
!5034 = !DILocation(line: 2475, column: 24, scope: !4986)
!5035 = !DILocation(line: 2475, column: 53, scope: !4986)
!5036 = !DILocation(line: 2476, column: 27, scope: !4986)
!5037 = !DILocation(line: 2476, column: 24, scope: !4986)
!5038 = !DILocation(line: 2464, column: 17, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !4987, file: !904, discriminator: 1)
!5040 = distinct !{!5040, !4984}
!5041 = !DILocation(line: 2479, column: 21, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4980, file: !904, line: 2479, column: 21)
!5043 = !DILocation(line: 2479, column: 24, scope: !5042)
!5044 = !DILocation(line: 2479, column: 21, scope: !4980)
!5045 = !DILocation(line: 2480, column: 28, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5042, file: !904, line: 2479, column: 30)
!5047 = !DILocation(line: 2480, column: 63, scope: !5046)
!5048 = !DILocation(line: 2480, column: 21, scope: !5046)
!5049 = !DILocation(line: 2481, column: 21, scope: !5046)
!5050 = !DILocation(line: 2483, column: 45, scope: !4980)
!5051 = !DILocation(line: 2483, column: 36, scope: !4980)
!5052 = !DILocation(line: 2483, column: 17, scope: !4980)
!5053 = !DILocation(line: 2483, column: 29, scope: !4980)
!5054 = !DILocation(line: 2483, column: 20, scope: !4980)
!5055 = !DILocation(line: 2483, column: 43, scope: !4980)
!5056 = !DILocation(line: 2485, column: 9, scope: !4906)
!5057 = !DILocation(line: 2442, column: 42, scope: !5058)
!5058 = !DILexicalBlockFile(scope: !4902, file: !904, discriminator: 2)
!5059 = !DILocation(line: 2442, column: 9, scope: !5058)
!5060 = distinct !{!5060, !5061}
!5061 = !DILocation(line: 2442, column: 9, scope: !4898)
!5062 = !DILocation(line: 2486, column: 5, scope: !4898)
!5063 = !DILocation(line: 2441, column: 38, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !4893, file: !904, discriminator: 2)
!5065 = !DILocation(line: 2441, column: 5, scope: !5064)
!5066 = distinct !{!5066, !5067}
!5067 = !DILocation(line: 2441, column: 5, scope: !4712)
!5068 = !DILocation(line: 2489, column: 10, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !4712, file: !904, line: 2489, column: 5)
!5070 = !DILocation(line: 2489, column: 13, scope: !5069)
!5071 = !DILocation(line: 2489, column: 17, scope: !5069)
!5072 = !DILocation(line: 2489, column: 22, scope: !5073)
!5073 = !DILexicalBlockFile(scope: !5074, file: !904, discriminator: 1)
!5074 = distinct !DILexicalBlock(scope: !5069, file: !904, line: 2489, column: 5)
!5075 = !DILocation(line: 2489, column: 25, scope: !5073)
!5076 = !DILocation(line: 2489, column: 29, scope: !5073)
!5077 = !DILocation(line: 2489, column: 5, scope: !5073)
!5078 = !DILocation(line: 2490, column: 9, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5074, file: !904, line: 2489, column: 45)
!5080 = !DILocation(line: 2490, column: 12, scope: !5079)
!5081 = !DILocation(line: 2490, column: 20, scope: !5079)
!5082 = !DILocation(line: 2491, column: 9, scope: !5079)
!5083 = !DILocation(line: 2491, column: 12, scope: !5079)
!5084 = !DILocation(line: 2491, column: 27, scope: !5079)
!5085 = !DILocation(line: 2492, column: 24, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5079, file: !904, line: 2492, column: 13)
!5087 = !DILocation(line: 2492, column: 14, scope: !5086)
!5088 = !DILocation(line: 2492, column: 13, scope: !5079)
!5089 = !DILocation(line: 2493, column: 13, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5086, file: !904, line: 2492, column: 29)
!5091 = !DILocation(line: 2493, column: 16, scope: !5090)
!5092 = !DILocation(line: 2493, column: 22, scope: !5090)
!5093 = !DILocation(line: 2494, column: 35, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !904, line: 2494, column: 17)
!5095 = !DILocation(line: 2494, column: 42, scope: !5094)
!5096 = !DILocation(line: 2494, column: 17, scope: !5094)
!5097 = !DILocation(line: 2494, column: 17, scope: !5090)
!5098 = !DILocation(line: 2495, column: 17, scope: !5094)
!5099 = !DILocation(line: 2496, column: 13, scope: !5090)
!5100 = !DILocation(line: 2496, column: 16, scope: !5090)
!5101 = !DILocation(line: 2496, column: 22, scope: !5090)
!5102 = !DILocation(line: 2497, column: 35, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5090, file: !904, line: 2497, column: 17)
!5104 = !DILocation(line: 2497, column: 42, scope: !5103)
!5105 = !DILocation(line: 2497, column: 17, scope: !5103)
!5106 = !DILocation(line: 2497, column: 17, scope: !5090)
!5107 = !DILocation(line: 2498, column: 17, scope: !5103)
!5108 = !DILocation(line: 2499, column: 9, scope: !5090)
!5109 = !DILocation(line: 2500, column: 5, scope: !5079)
!5110 = !DILocation(line: 2489, column: 35, scope: !5111)
!5111 = !DILexicalBlockFile(scope: !5074, file: !904, discriminator: 2)
!5112 = !DILocation(line: 2489, column: 38, scope: !5111)
!5113 = !DILocation(line: 2489, column: 41, scope: !5111)
!5114 = !DILocation(line: 2489, column: 5, scope: !5111)
!5115 = distinct !{!5115, !5116}
!5116 = !DILocation(line: 2489, column: 5, scope: !4712)
!5117 = !DILocation(line: 2502, column: 5, scope: !4712)
!5118 = !DILocation(line: 2502, column: 8, scope: !4712)
!5119 = !DILocation(line: 2502, column: 22, scope: !4712)
!5120 = !DILocation(line: 2504, column: 5, scope: !4712)
!5121 = !DILocation(line: 2505, column: 1, scope: !4712)
!5122 = distinct !DISubprogram(name: "get_bits_count", scope: !2183, file: !2183, line: 219, type: !5123, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{!890, !5125}
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64, align: 64)
!5126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2182)
!5127 = !DILocalVariable(name: "s", arg: 1, scope: !5122, file: !2183, line: 219, type: !5125)
!5128 = !DILocation(line: 219, column: 55, scope: !5122)
!5129 = !DILocation(line: 224, column: 12, scope: !5122)
!5130 = !DILocation(line: 224, column: 15, scope: !5122)
!5131 = !DILocation(line: 224, column: 5, scope: !5122)
!5132 = distinct !DISubprogram(name: "init_get_bits", scope: !2183, file: !2183, line: 615, type: !4243, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5133 = !DILocalVariable(name: "s", arg: 1, scope: !5132, file: !2183, line: 615, type: !4245)
!5134 = !DILocation(line: 615, column: 48, scope: !5132)
!5135 = !DILocalVariable(name: "buffer", arg: 2, scope: !5132, file: !2183, line: 615, type: !1442)
!5136 = !DILocation(line: 615, column: 66, scope: !5132)
!5137 = !DILocalVariable(name: "bit_size", arg: 3, scope: !5132, file: !2183, line: 616, type: !890)
!5138 = !DILocation(line: 616, column: 37, scope: !5132)
!5139 = !DILocalVariable(name: "buffer_size", scope: !5132, file: !2183, line: 618, type: !890)
!5140 = !DILocation(line: 618, column: 9, scope: !5132)
!5141 = !DILocalVariable(name: "ret", scope: !5132, file: !2183, line: 619, type: !890)
!5142 = !DILocation(line: 619, column: 9, scope: !5132)
!5143 = !DILocation(line: 621, column: 9, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5132, file: !2183, line: 621, column: 9)
!5145 = !DILocation(line: 621, column: 18, scope: !5144)
!5146 = !DILocation(line: 621, column: 64, scope: !5144)
!5147 = !DILocation(line: 621, column: 67, scope: !5148)
!5148 = !DILexicalBlockFile(scope: !5144, file: !2183, discriminator: 1)
!5149 = !DILocation(line: 621, column: 76, scope: !5148)
!5150 = !DILocation(line: 621, column: 80, scope: !5148)
!5151 = !DILocation(line: 621, column: 84, scope: !5152)
!5152 = !DILexicalBlockFile(scope: !5144, file: !2183, discriminator: 2)
!5153 = !DILocation(line: 621, column: 9, scope: !5152)
!5154 = !DILocation(line: 622, column: 18, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5144, file: !2183, line: 621, column: 92)
!5156 = !DILocation(line: 623, column: 16, scope: !5155)
!5157 = !DILocation(line: 624, column: 13, scope: !5155)
!5158 = !DILocation(line: 625, column: 5, scope: !5155)
!5159 = !DILocation(line: 627, column: 20, scope: !5132)
!5160 = !DILocation(line: 627, column: 29, scope: !5132)
!5161 = !DILocation(line: 627, column: 34, scope: !5132)
!5162 = !DILocation(line: 627, column: 17, scope: !5132)
!5163 = !DILocation(line: 629, column: 17, scope: !5132)
!5164 = !DILocation(line: 629, column: 5, scope: !5132)
!5165 = !DILocation(line: 629, column: 8, scope: !5132)
!5166 = !DILocation(line: 629, column: 15, scope: !5132)
!5167 = !DILocation(line: 630, column: 23, scope: !5132)
!5168 = !DILocation(line: 630, column: 5, scope: !5132)
!5169 = !DILocation(line: 630, column: 8, scope: !5132)
!5170 = !DILocation(line: 630, column: 21, scope: !5132)
!5171 = !DILocation(line: 631, column: 29, scope: !5132)
!5172 = !DILocation(line: 631, column: 38, scope: !5132)
!5173 = !DILocation(line: 631, column: 5, scope: !5132)
!5174 = !DILocation(line: 631, column: 8, scope: !5132)
!5175 = !DILocation(line: 631, column: 27, scope: !5132)
!5176 = !DILocation(line: 632, column: 21, scope: !5132)
!5177 = !DILocation(line: 632, column: 30, scope: !5132)
!5178 = !DILocation(line: 632, column: 28, scope: !5132)
!5179 = !DILocation(line: 632, column: 5, scope: !5132)
!5180 = !DILocation(line: 632, column: 8, scope: !5132)
!5181 = !DILocation(line: 632, column: 19, scope: !5132)
!5182 = !DILocation(line: 633, column: 5, scope: !5132)
!5183 = !DILocation(line: 633, column: 8, scope: !5132)
!5184 = !DILocation(line: 633, column: 14, scope: !5132)
!5185 = !DILocation(line: 639, column: 12, scope: !5132)
!5186 = !DILocation(line: 639, column: 5, scope: !5132)
!5187 = distinct !DISubprogram(name: "NEG_USR32", scope: !5188, file: !5188, line: 124, type: !5189, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5188 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!898, !898, !1105}
!5191 = !DILocalVariable(name: "a", arg: 1, scope: !5187, file: !5188, line: 124, type: !898)
!5192 = !DILocation(line: 124, column: 43, scope: !5187)
!5193 = !DILocalVariable(name: "s", arg: 2, scope: !5187, file: !5188, line: 124, type: !1105)
!5194 = !DILocation(line: 124, column: 53, scope: !5187)
!5195 = !DILocation(line: 125, column: 5, scope: !5187)
!5196 = !DILocation(line: 127, column: 29, scope: !5187)
!5197 = !DILocation(line: 127, column: 28, scope: !5187)
!5198 = !DILocation(line: 127, column: 18, scope: !5187)
!5199 = !{i32 185327, i32 185341}
!5200 = !DILocation(line: 129, column: 12, scope: !5187)
!5201 = !DILocation(line: 129, column: 5, scope: !5187)
!5202 = distinct !DISubprogram(name: "get_bits_long", scope: !2183, file: !2183, line: 531, type: !4269, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5203 = !DILocalVariable(name: "s", arg: 1, scope: !5202, file: !2183, line: 531, type: !4245)
!5204 = !DILocation(line: 531, column: 57, scope: !5202)
!5205 = !DILocalVariable(name: "n", arg: 2, scope: !5202, file: !2183, line: 531, type: !890)
!5206 = !DILocation(line: 531, column: 64, scope: !5202)
!5207 = !DILocation(line: 534, column: 10, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5202, file: !2183, line: 534, column: 9)
!5209 = !DILocation(line: 534, column: 9, scope: !5202)
!5210 = !DILocation(line: 535, column: 9, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5208, file: !2183, line: 534, column: 13)
!5212 = !DILocation(line: 540, column: 16, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5208, file: !2183, line: 540, column: 16)
!5214 = !DILocation(line: 540, column: 18, scope: !5213)
!5215 = !DILocation(line: 540, column: 16, scope: !5208)
!5216 = !DILocation(line: 541, column: 25, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5213, file: !2183, line: 540, column: 25)
!5218 = !DILocation(line: 541, column: 28, scope: !5217)
!5219 = !DILocation(line: 541, column: 16, scope: !5217)
!5220 = !DILocation(line: 541, column: 9, scope: !5217)
!5221 = !DILocalVariable(name: "ret", scope: !5222, file: !2183, line: 547, type: !891)
!5222 = distinct !DILexicalBlock(scope: !5213, file: !2183, line: 542, column: 12)
!5223 = !DILocation(line: 547, column: 18, scope: !5222)
!5224 = !DILocation(line: 547, column: 33, scope: !5222)
!5225 = !DILocation(line: 547, column: 24, scope: !5222)
!5226 = !DILocation(line: 547, column: 44, scope: !5222)
!5227 = !DILocation(line: 547, column: 46, scope: !5222)
!5228 = !DILocation(line: 547, column: 40, scope: !5222)
!5229 = !DILocation(line: 548, column: 16, scope: !5222)
!5230 = !DILocation(line: 548, column: 31, scope: !5222)
!5231 = !DILocation(line: 548, column: 34, scope: !5222)
!5232 = !DILocation(line: 548, column: 36, scope: !5222)
!5233 = !DILocation(line: 548, column: 22, scope: !5222)
!5234 = !DILocation(line: 548, column: 20, scope: !5222)
!5235 = !DILocation(line: 548, column: 9, scope: !5222)
!5236 = !DILocation(line: 552, column: 1, scope: !5202)
!5237 = distinct !DISubprogram(name: "skip_bits", scope: !2183, file: !2183, line: 460, type: !4351, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5238 = !DILocalVariable(name: "s", arg: 1, scope: !5237, file: !2183, line: 460, type: !4245)
!5239 = !DILocation(line: 460, column: 45, scope: !5237)
!5240 = !DILocalVariable(name: "n", arg: 2, scope: !5237, file: !2183, line: 460, type: !890)
!5241 = !DILocation(line: 460, column: 52, scope: !5237)
!5242 = !DILocalVariable(name: "re_index", scope: !5237, file: !2183, line: 481, type: !891)
!5243 = !DILocation(line: 481, column: 18, scope: !5237)
!5244 = !DILocation(line: 481, column: 30, scope: !5237)
!5245 = !DILocation(line: 481, column: 34, scope: !5237)
!5246 = !DILocalVariable(name: "re_cache", scope: !5237, file: !2183, line: 481, type: !891)
!5247 = !DILocation(line: 481, column: 78, scope: !5237)
!5248 = !DILocalVariable(name: "re_size_plus8", scope: !5237, file: !2183, line: 481, type: !891)
!5249 = !DILocation(line: 481, column: 101, scope: !5237)
!5250 = !DILocation(line: 481, column: 118, scope: !5237)
!5251 = !DILocation(line: 481, column: 122, scope: !5237)
!5252 = !DILocation(line: 482, column: 18, scope: !5237)
!5253 = !DILocation(line: 482, column: 36, scope: !5237)
!5254 = !DILocation(line: 482, column: 48, scope: !5237)
!5255 = !DILocation(line: 482, column: 45, scope: !5237)
!5256 = !DILocation(line: 482, column: 33, scope: !5237)
!5257 = !DILocation(line: 482, column: 17, scope: !5237)
!5258 = !DILocation(line: 482, column: 55, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !5237, file: !2183, discriminator: 1)
!5260 = !DILocation(line: 482, column: 67, scope: !5259)
!5261 = !DILocation(line: 482, column: 64, scope: !5259)
!5262 = !DILocation(line: 482, column: 17, scope: !5259)
!5263 = !DILocation(line: 482, column: 74, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !5237, file: !2183, discriminator: 2)
!5265 = !DILocation(line: 482, column: 17, scope: !5264)
!5266 = !DILocation(line: 482, column: 17, scope: !5267)
!5267 = !DILexicalBlockFile(scope: !5237, file: !2183, discriminator: 3)
!5268 = !DILocation(line: 482, column: 14, scope: !5267)
!5269 = !DILocation(line: 483, column: 18, scope: !5237)
!5270 = !DILocation(line: 483, column: 6, scope: !5237)
!5271 = !DILocation(line: 483, column: 10, scope: !5237)
!5272 = !DILocation(line: 483, column: 16, scope: !5237)
!5273 = !DILocation(line: 485, column: 1, scope: !5237)
!5274 = distinct !DISubprogram(name: "get_bits1", scope: !2183, file: !2183, line: 487, type: !5275, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{!891, !4245}
!5277 = !DILocalVariable(name: "s", arg: 1, scope: !5274, file: !2183, line: 487, type: !4245)
!5278 = !DILocation(line: 487, column: 53, scope: !5274)
!5279 = !DILocalVariable(name: "index", scope: !5274, file: !2183, line: 499, type: !891)
!5280 = !DILocation(line: 499, column: 18, scope: !5274)
!5281 = !DILocation(line: 499, column: 26, scope: !5274)
!5282 = !DILocation(line: 499, column: 29, scope: !5274)
!5283 = !DILocalVariable(name: "result", scope: !5274, file: !2183, line: 500, type: !900)
!5284 = !DILocation(line: 500, column: 13, scope: !5274)
!5285 = !DILocation(line: 500, column: 32, scope: !5274)
!5286 = !DILocation(line: 500, column: 38, scope: !5274)
!5287 = !DILocation(line: 500, column: 22, scope: !5274)
!5288 = !DILocation(line: 500, column: 25, scope: !5274)
!5289 = !DILocation(line: 505, column: 16, scope: !5274)
!5290 = !DILocation(line: 505, column: 22, scope: !5274)
!5291 = !DILocation(line: 505, column: 12, scope: !5274)
!5292 = !DILocation(line: 506, column: 12, scope: !5274)
!5293 = !DILocation(line: 509, column: 9, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5274, file: !2183, line: 509, column: 9)
!5295 = !DILocation(line: 509, column: 12, scope: !5294)
!5296 = !DILocation(line: 509, column: 20, scope: !5294)
!5297 = !DILocation(line: 509, column: 23, scope: !5294)
!5298 = !DILocation(line: 509, column: 18, scope: !5294)
!5299 = !DILocation(line: 509, column: 9, scope: !5274)
!5300 = !DILocation(line: 511, column: 14, scope: !5294)
!5301 = !DILocation(line: 511, column: 9, scope: !5294)
!5302 = !DILocation(line: 512, column: 16, scope: !5274)
!5303 = !DILocation(line: 512, column: 5, scope: !5274)
!5304 = !DILocation(line: 512, column: 8, scope: !5274)
!5305 = !DILocation(line: 512, column: 14, scope: !5274)
!5306 = !DILocation(line: 514, column: 12, scope: !5274)
!5307 = !DILocation(line: 514, column: 5, scope: !5274)
!5308 = distinct !DISubprogram(name: "read_huffman_tree", scope: !904, file: !904, line: 2227, type: !4402, isLocal: true, isDefinition: true, scopeLine: 2228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5309 = !DILocalVariable(name: "avctx", arg: 1, scope: !5308, file: !904, line: 2227, type: !997)
!5310 = !DILocation(line: 2227, column: 46, scope: !5308)
!5311 = !DILocalVariable(name: "gb", arg: 2, scope: !5308, file: !904, line: 2227, type: !4245)
!5312 = !DILocation(line: 2227, column: 68, scope: !5308)
!5313 = !DILocalVariable(name: "s", scope: !5308, file: !904, line: 2229, type: !1707)
!5314 = !DILocation(line: 2229, column: 23, scope: !5308)
!5315 = !DILocation(line: 2229, column: 27, scope: !5308)
!5316 = !DILocation(line: 2229, column: 34, scope: !5308)
!5317 = !DILocation(line: 2231, column: 19, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5308, file: !904, line: 2231, column: 9)
!5319 = !DILocation(line: 2231, column: 9, scope: !5318)
!5320 = !DILocation(line: 2231, column: 9, scope: !5308)
!5321 = !DILocalVariable(name: "token", scope: !5322, file: !904, line: 2232, type: !890)
!5322 = distinct !DILexicalBlock(scope: !5318, file: !904, line: 2231, column: 24)
!5323 = !DILocation(line: 2232, column: 13, scope: !5322)
!5324 = !DILocation(line: 2233, column: 13, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5322, file: !904, line: 2233, column: 13)
!5326 = !DILocation(line: 2233, column: 16, scope: !5325)
!5327 = !DILocation(line: 2233, column: 24, scope: !5325)
!5328 = !DILocation(line: 2233, column: 13, scope: !5322)
!5329 = !DILocation(line: 2234, column: 20, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5325, file: !904, line: 2233, column: 31)
!5331 = !DILocation(line: 2234, column: 13, scope: !5330)
!5332 = !DILocation(line: 2235, column: 13, scope: !5330)
!5333 = !DILocation(line: 2237, column: 26, scope: !5322)
!5334 = !DILocation(line: 2237, column: 17, scope: !5322)
!5335 = !DILocation(line: 2237, column: 15, scope: !5322)
!5336 = !DILocation(line: 2238, column: 9, scope: !5322)
!5337 = distinct !{!5337, !5336}
!5338 = !DILocation(line: 2238, column: 145, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5340, file: !904, discriminator: 1)
!5340 = distinct !DILexicalBlock(scope: !5322, file: !904, line: 2238, column: 12)
!5341 = !DILocation(line: 2240, column: 46, scope: !5322)
!5342 = !DILocation(line: 2240, column: 49, scope: !5322)
!5343 = !DILocation(line: 2240, column: 34, scope: !5322)
!5344 = !DILocation(line: 2240, column: 9, scope: !5322)
!5345 = !DILocation(line: 2240, column: 26, scope: !5322)
!5346 = !DILocation(line: 2240, column: 29, scope: !5322)
!5347 = !DILocation(line: 2240, column: 12, scope: !5322)
!5348 = !DILocation(line: 2240, column: 44, scope: !5322)
!5349 = !DILocation(line: 2241, column: 46, scope: !5322)
!5350 = !DILocation(line: 2241, column: 49, scope: !5322)
!5351 = !DILocation(line: 2241, column: 34, scope: !5322)
!5352 = !DILocation(line: 2241, column: 9, scope: !5322)
!5353 = !DILocation(line: 2241, column: 26, scope: !5322)
!5354 = !DILocation(line: 2241, column: 29, scope: !5322)
!5355 = !DILocation(line: 2241, column: 12, scope: !5322)
!5356 = !DILocation(line: 2241, column: 44, scope: !5322)
!5357 = !DILocation(line: 2242, column: 9, scope: !5322)
!5358 = !DILocation(line: 2242, column: 12, scope: !5322)
!5359 = !DILocation(line: 2242, column: 19, scope: !5322)
!5360 = !DILocation(line: 2243, column: 5, scope: !5322)
!5361 = !DILocation(line: 2244, column: 13, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !904, line: 2244, column: 13)
!5363 = distinct !DILexicalBlock(scope: !5318, file: !904, line: 2243, column: 12)
!5364 = !DILocation(line: 2244, column: 16, scope: !5362)
!5365 = !DILocation(line: 2244, column: 31, scope: !5362)
!5366 = !DILocation(line: 2244, column: 13, scope: !5363)
!5367 = !DILocation(line: 2245, column: 20, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5362, file: !904, line: 2244, column: 38)
!5369 = !DILocation(line: 2245, column: 13, scope: !5368)
!5370 = !DILocation(line: 2246, column: 13, scope: !5368)
!5371 = !DILocation(line: 2248, column: 9, scope: !5363)
!5372 = !DILocation(line: 2248, column: 12, scope: !5363)
!5373 = !DILocation(line: 2248, column: 26, scope: !5363)
!5374 = !DILocation(line: 2249, column: 9, scope: !5363)
!5375 = !DILocation(line: 2249, column: 12, scope: !5363)
!5376 = !DILocation(line: 2249, column: 18, scope: !5363)
!5377 = !DILocation(line: 2250, column: 31, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5363, file: !904, line: 2250, column: 13)
!5379 = !DILocation(line: 2250, column: 38, scope: !5378)
!5380 = !DILocation(line: 2250, column: 13, scope: !5378)
!5381 = !DILocation(line: 2250, column: 13, scope: !5363)
!5382 = !DILocation(line: 2251, column: 13, scope: !5378)
!5383 = !DILocation(line: 2252, column: 9, scope: !5363)
!5384 = !DILocation(line: 2252, column: 12, scope: !5363)
!5385 = !DILocation(line: 2252, column: 18, scope: !5363)
!5386 = !DILocation(line: 2253, column: 31, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5363, file: !904, line: 2253, column: 13)
!5388 = !DILocation(line: 2253, column: 38, scope: !5387)
!5389 = !DILocation(line: 2253, column: 13, scope: !5387)
!5390 = !DILocation(line: 2253, column: 13, scope: !5363)
!5391 = !DILocation(line: 2254, column: 13, scope: !5387)
!5392 = !DILocation(line: 2255, column: 9, scope: !5363)
!5393 = !DILocation(line: 2255, column: 12, scope: !5363)
!5394 = !DILocation(line: 2255, column: 18, scope: !5363)
!5395 = !DILocation(line: 2256, column: 9, scope: !5363)
!5396 = !DILocation(line: 2256, column: 12, scope: !5363)
!5397 = !DILocation(line: 2256, column: 26, scope: !5363)
!5398 = !DILocation(line: 2258, column: 5, scope: !5308)
!5399 = !DILocation(line: 2259, column: 1, scope: !5308)
!5400 = distinct !DISubprogram(name: "init_loop_filter", scope: !904, file: !904, line: 417, type: !5401, isLocal: true, isDefinition: true, scopeLine: 418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{null, !1707}
!5403 = !DILocalVariable(name: "s", arg: 1, scope: !5400, file: !904, line: 417, type: !1707)
!5404 = !DILocation(line: 417, column: 48, scope: !5400)
!5405 = !DILocation(line: 419, column: 35, scope: !5400)
!5406 = !DILocation(line: 419, column: 38, scope: !5400)
!5407 = !DILocation(line: 419, column: 84, scope: !5400)
!5408 = !DILocation(line: 419, column: 87, scope: !5400)
!5409 = !DILocation(line: 419, column: 61, scope: !5400)
!5410 = !DILocation(line: 419, column: 64, scope: !5400)
!5411 = !DILocation(line: 419, column: 5, scope: !5400)
!5412 = !DILocation(line: 420, column: 1, scope: !5400)
!5413 = distinct !DISubprogram(name: "init_dequantizer", scope: !904, file: !904, line: 375, type: !5414, isLocal: true, isDefinition: true, scopeLine: 376, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5414 = !DISubroutineType(types: !5415)
!5415 = !{null, !1707, !890}
!5416 = !DILocation(line: 127, column: 87, scope: !4354, inlinedAt: !5417)
!5417 = distinct !DILocation(line: 402, column: 21, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !904, line: 392, column: 38)
!5419 = distinct !DILexicalBlock(scope: !5420, file: !904, line: 392, column: 13)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !904, line: 392, column: 13)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !904, line: 382, column: 45)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !904, line: 382, column: 9)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !904, line: 382, column: 9)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !904, line: 381, column: 41)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !904, line: 381, column: 5)
!5426 = distinct !DILexicalBlock(scope: !5413, file: !904, line: 381, column: 5)
!5427 = !DILocation(line: 127, column: 94, scope: !4354, inlinedAt: !5417)
!5428 = !DILocation(line: 127, column: 104, scope: !4354, inlinedAt: !5417)
!5429 = !DILocalVariable(name: "s", arg: 1, scope: !5413, file: !904, line: 375, type: !1707)
!5430 = !DILocation(line: 375, column: 48, scope: !5413)
!5431 = !DILocalVariable(name: "qpi", arg: 2, scope: !5413, file: !904, line: 375, type: !890)
!5432 = !DILocation(line: 375, column: 55, scope: !5413)
!5433 = !DILocalVariable(name: "ac_scale_factor", scope: !5413, file: !904, line: 377, type: !890)
!5434 = !DILocation(line: 377, column: 9, scope: !5413)
!5435 = !DILocation(line: 377, column: 59, scope: !5413)
!5436 = !DILocation(line: 377, column: 52, scope: !5413)
!5437 = !DILocation(line: 377, column: 55, scope: !5413)
!5438 = !DILocation(line: 377, column: 27, scope: !5413)
!5439 = !DILocation(line: 377, column: 30, scope: !5413)
!5440 = !DILocalVariable(name: "dc_scale_factor", scope: !5413, file: !904, line: 378, type: !890)
!5441 = !DILocation(line: 378, column: 9, scope: !5413)
!5442 = !DILocation(line: 378, column: 59, scope: !5413)
!5443 = !DILocation(line: 378, column: 52, scope: !5413)
!5444 = !DILocation(line: 378, column: 55, scope: !5413)
!5445 = !DILocation(line: 378, column: 27, scope: !5413)
!5446 = !DILocation(line: 378, column: 30, scope: !5413)
!5447 = !DILocalVariable(name: "i", scope: !5413, file: !904, line: 379, type: !890)
!5448 = !DILocation(line: 379, column: 9, scope: !5413)
!5449 = !DILocalVariable(name: "plane", scope: !5413, file: !904, line: 379, type: !890)
!5450 = !DILocation(line: 379, column: 12, scope: !5413)
!5451 = !DILocalVariable(name: "inter", scope: !5413, file: !904, line: 379, type: !890)
!5452 = !DILocation(line: 379, column: 19, scope: !5413)
!5453 = !DILocalVariable(name: "qri", scope: !5413, file: !904, line: 379, type: !890)
!5454 = !DILocation(line: 379, column: 26, scope: !5413)
!5455 = !DILocalVariable(name: "bmi", scope: !5413, file: !904, line: 379, type: !890)
!5456 = !DILocation(line: 379, column: 31, scope: !5413)
!5457 = !DILocalVariable(name: "bmj", scope: !5413, file: !904, line: 379, type: !890)
!5458 = !DILocation(line: 379, column: 36, scope: !5413)
!5459 = !DILocalVariable(name: "qistart", scope: !5413, file: !904, line: 379, type: !890)
!5460 = !DILocation(line: 379, column: 41, scope: !5413)
!5461 = !DILocation(line: 381, column: 16, scope: !5426)
!5462 = !DILocation(line: 381, column: 10, scope: !5426)
!5463 = !DILocation(line: 381, column: 21, scope: !5464)
!5464 = !DILexicalBlockFile(scope: !5425, file: !904, discriminator: 1)
!5465 = !DILocation(line: 381, column: 27, scope: !5464)
!5466 = !DILocation(line: 381, column: 5, scope: !5464)
!5467 = !DILocation(line: 382, column: 20, scope: !5423)
!5468 = !DILocation(line: 382, column: 14, scope: !5423)
!5469 = !DILocation(line: 382, column: 25, scope: !5470)
!5470 = !DILexicalBlockFile(scope: !5422, file: !904, discriminator: 1)
!5471 = !DILocation(line: 382, column: 31, scope: !5470)
!5472 = !DILocation(line: 382, column: 9, scope: !5470)
!5473 = !DILocalVariable(name: "sum", scope: !5421, file: !904, line: 383, type: !890)
!5474 = !DILocation(line: 383, column: 17, scope: !5421)
!5475 = !DILocation(line: 384, column: 22, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5421, file: !904, line: 384, column: 13)
!5477 = !DILocation(line: 384, column: 18, scope: !5476)
!5478 = !DILocation(line: 384, column: 27, scope: !5479)
!5479 = !DILexicalBlockFile(scope: !5480, file: !904, discriminator: 1)
!5480 = distinct !DILexicalBlock(scope: !5476, file: !904, line: 384, column: 13)
!5481 = !DILocation(line: 384, column: 52, scope: !5479)
!5482 = !DILocation(line: 384, column: 33, scope: !5479)
!5483 = !DILocation(line: 384, column: 45, scope: !5479)
!5484 = !DILocation(line: 384, column: 36, scope: !5479)
!5485 = !DILocation(line: 384, column: 31, scope: !5479)
!5486 = !DILocation(line: 384, column: 13, scope: !5479)
!5487 = !DILocation(line: 385, column: 49, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5480, file: !904, line: 384, column: 67)
!5489 = !DILocation(line: 385, column: 24, scope: !5488)
!5490 = !DILocation(line: 385, column: 42, scope: !5488)
!5491 = !DILocation(line: 385, column: 35, scope: !5488)
!5492 = !DILocation(line: 385, column: 27, scope: !5488)
!5493 = !DILocation(line: 385, column: 21, scope: !5488)
!5494 = !DILocation(line: 386, column: 28, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5488, file: !904, line: 386, column: 21)
!5496 = !DILocation(line: 386, column: 21, scope: !5495)
!5497 = !DILocation(line: 386, column: 24, scope: !5495)
!5498 = !DILocation(line: 386, column: 36, scope: !5495)
!5499 = !DILocation(line: 386, column: 33, scope: !5495)
!5500 = !DILocation(line: 386, column: 21, scope: !5488)
!5501 = !DILocation(line: 387, column: 21, scope: !5495)
!5502 = !DILocation(line: 388, column: 13, scope: !5488)
!5503 = !DILocation(line: 384, column: 63, scope: !5504)
!5504 = !DILexicalBlockFile(scope: !5480, file: !904, discriminator: 2)
!5505 = !DILocation(line: 384, column: 13, scope: !5504)
!5506 = distinct !{!5506, !5507}
!5507 = !DILocation(line: 384, column: 13, scope: !5421)
!5508 = !DILocation(line: 389, column: 23, scope: !5421)
!5509 = !DILocation(line: 389, column: 54, scope: !5421)
!5510 = !DILocation(line: 389, column: 29, scope: !5421)
!5511 = !DILocation(line: 389, column: 47, scope: !5421)
!5512 = !DILocation(line: 389, column: 40, scope: !5421)
!5513 = !DILocation(line: 389, column: 32, scope: !5421)
!5514 = !DILocation(line: 389, column: 27, scope: !5421)
!5515 = !DILocation(line: 389, column: 21, scope: !5421)
!5516 = !DILocation(line: 390, column: 44, scope: !5421)
!5517 = !DILocation(line: 390, column: 19, scope: !5421)
!5518 = !DILocation(line: 390, column: 37, scope: !5421)
!5519 = !DILocation(line: 390, column: 30, scope: !5421)
!5520 = !DILocation(line: 390, column: 22, scope: !5421)
!5521 = !DILocation(line: 390, column: 17, scope: !5421)
!5522 = !DILocation(line: 391, column: 44, scope: !5421)
!5523 = !DILocation(line: 391, column: 48, scope: !5421)
!5524 = !DILocation(line: 391, column: 19, scope: !5421)
!5525 = !DILocation(line: 391, column: 37, scope: !5421)
!5526 = !DILocation(line: 391, column: 30, scope: !5421)
!5527 = !DILocation(line: 391, column: 22, scope: !5421)
!5528 = !DILocation(line: 391, column: 17, scope: !5421)
!5529 = !DILocation(line: 392, column: 20, scope: !5420)
!5530 = !DILocation(line: 392, column: 18, scope: !5420)
!5531 = !DILocation(line: 392, column: 25, scope: !5532)
!5532 = !DILexicalBlockFile(scope: !5419, file: !904, discriminator: 1)
!5533 = !DILocation(line: 392, column: 27, scope: !5532)
!5534 = !DILocation(line: 392, column: 13, scope: !5532)
!5535 = !DILocalVariable(name: "coeff", scope: !5418, file: !904, line: 393, type: !890)
!5536 = !DILocation(line: 393, column: 21, scope: !5418)
!5537 = !DILocation(line: 393, column: 35, scope: !5418)
!5538 = !DILocation(line: 393, column: 48, scope: !5418)
!5539 = !DILocation(line: 393, column: 41, scope: !5418)
!5540 = !DILocation(line: 393, column: 44, scope: !5418)
!5541 = !DILocation(line: 393, column: 39, scope: !5418)
!5542 = !DILocation(line: 393, column: 32, scope: !5418)
!5543 = !DILocation(line: 393, column: 76, scope: !5418)
!5544 = !DILocation(line: 393, column: 56, scope: !5418)
!5545 = !DILocation(line: 393, column: 71, scope: !5418)
!5546 = !DILocation(line: 393, column: 59, scope: !5418)
!5547 = !DILocation(line: 393, column: 54, scope: !5418)
!5548 = !DILocation(line: 394, column: 35, scope: !5418)
!5549 = !DILocation(line: 394, column: 52, scope: !5418)
!5550 = !DILocation(line: 394, column: 45, scope: !5418)
!5551 = !DILocation(line: 394, column: 48, scope: !5418)
!5552 = !DILocation(line: 394, column: 43, scope: !5418)
!5553 = !DILocation(line: 394, column: 32, scope: !5418)
!5554 = !DILocation(line: 394, column: 80, scope: !5418)
!5555 = !DILocation(line: 394, column: 60, scope: !5418)
!5556 = !DILocation(line: 394, column: 75, scope: !5418)
!5557 = !DILocation(line: 394, column: 63, scope: !5418)
!5558 = !DILocation(line: 394, column: 58, scope: !5418)
!5559 = !DILocation(line: 393, column: 79, scope: !5418)
!5560 = !DILocation(line: 395, column: 55, scope: !5418)
!5561 = !DILocation(line: 395, column: 30, scope: !5418)
!5562 = !DILocation(line: 395, column: 48, scope: !5418)
!5563 = !DILocation(line: 395, column: 41, scope: !5418)
!5564 = !DILocation(line: 395, column: 33, scope: !5418)
!5565 = !DILocation(line: 394, column: 83, scope: !5418)
!5566 = !DILocation(line: 396, column: 59, scope: !5418)
!5567 = !DILocation(line: 396, column: 34, scope: !5418)
!5568 = !DILocation(line: 396, column: 52, scope: !5418)
!5569 = !DILocation(line: 396, column: 45, scope: !5418)
!5570 = !DILocation(line: 396, column: 37, scope: !5418)
!5571 = !DILocation(line: 396, column: 32, scope: !5418)
!5572 = !DILocation(line: 395, column: 61, scope: !5418)
!5573 = !DILocalVariable(name: "qmin", scope: !5418, file: !904, line: 398, type: !890)
!5574 = !DILocation(line: 398, column: 21, scope: !5418)
!5575 = !DILocation(line: 398, column: 34, scope: !5418)
!5576 = !DILocation(line: 398, column: 43, scope: !5418)
!5577 = !DILocation(line: 398, column: 42, scope: !5418)
!5578 = !DILocation(line: 398, column: 40, scope: !5418)
!5579 = !DILocation(line: 398, column: 30, scope: !5418)
!5580 = !DILocalVariable(name: "qscale", scope: !5418, file: !904, line: 399, type: !890)
!5581 = !DILocation(line: 399, column: 21, scope: !5418)
!5582 = !DILocation(line: 399, column: 30, scope: !5418)
!5583 = !DILocation(line: 399, column: 34, scope: !5584)
!5584 = !DILexicalBlockFile(scope: !5418, file: !904, discriminator: 1)
!5585 = !DILocation(line: 399, column: 30, scope: !5584)
!5586 = !DILocation(line: 399, column: 52, scope: !5587)
!5587 = !DILexicalBlockFile(scope: !5418, file: !904, discriminator: 2)
!5588 = !DILocation(line: 399, column: 30, scope: !5587)
!5589 = !DILocation(line: 399, column: 30, scope: !5590)
!5590 = !DILexicalBlockFile(scope: !5418, file: !904, discriminator: 3)
!5591 = !DILocation(line: 399, column: 21, scope: !5590)
!5592 = !DILocation(line: 402, column: 32, scope: !5418)
!5593 = !DILocation(line: 402, column: 41, scope: !5418)
!5594 = !DILocation(line: 402, column: 39, scope: !5418)
!5595 = !DILocation(line: 402, column: 48, scope: !5418)
!5596 = !DILocation(line: 402, column: 54, scope: !5418)
!5597 = !DILocation(line: 402, column: 59, scope: !5418)
!5598 = !DILocation(line: 402, column: 21, scope: !5418)
!5599 = !DILocation(line: 132, column: 9, scope: !4379, inlinedAt: !5417)
!5600 = !DILocation(line: 132, column: 13, scope: !4379, inlinedAt: !5417)
!5601 = !DILocation(line: 132, column: 11, scope: !4379, inlinedAt: !5417)
!5602 = !DILocation(line: 132, column: 9, scope: !4354, inlinedAt: !5417)
!5603 = !DILocation(line: 132, column: 26, scope: !4384, inlinedAt: !5417)
!5604 = !DILocation(line: 132, column: 19, scope: !4384, inlinedAt: !5417)
!5605 = !DILocation(line: 133, column: 14, scope: !4387, inlinedAt: !5417)
!5606 = !DILocation(line: 133, column: 18, scope: !4387, inlinedAt: !5417)
!5607 = !DILocation(line: 133, column: 16, scope: !4387, inlinedAt: !5417)
!5608 = !DILocation(line: 133, column: 14, scope: !4379, inlinedAt: !5417)
!5609 = !DILocation(line: 133, column: 31, scope: !4392, inlinedAt: !5417)
!5610 = !DILocation(line: 133, column: 24, scope: !4392, inlinedAt: !5417)
!5611 = !DILocation(line: 134, column: 17, scope: !4387, inlinedAt: !5417)
!5612 = !DILocation(line: 134, column: 10, scope: !4387, inlinedAt: !5417)
!5613 = !DILocation(line: 135, column: 1, scope: !4354, inlinedAt: !5417)
!5614 = !DILocation(line: 401, column: 64, scope: !5418)
!5615 = !DILocation(line: 401, column: 44, scope: !5418)
!5616 = !DILocation(line: 401, column: 47, scope: !5418)
!5617 = !DILocation(line: 401, column: 17, scope: !5418)
!5618 = !DILocation(line: 401, column: 37, scope: !5418)
!5619 = !DILocation(line: 401, column: 30, scope: !5418)
!5620 = !DILocation(line: 401, column: 25, scope: !5418)
!5621 = !DILocation(line: 401, column: 20, scope: !5418)
!5622 = !DILocation(line: 401, column: 68, scope: !5418)
!5623 = !DILocation(line: 403, column: 13, scope: !5418)
!5624 = !DILocation(line: 392, column: 34, scope: !5625)
!5625 = !DILexicalBlockFile(scope: !5419, file: !904, discriminator: 2)
!5626 = !DILocation(line: 392, column: 13, scope: !5625)
!5627 = distinct !{!5627, !5628}
!5628 = !DILocation(line: 392, column: 13, scope: !5421)
!5629 = !DILocation(line: 406, column: 63, scope: !5421)
!5630 = !DILocation(line: 406, column: 45, scope: !5421)
!5631 = !DILocation(line: 406, column: 56, scope: !5421)
!5632 = !DILocation(line: 406, column: 48, scope: !5421)
!5633 = !DILocation(line: 406, column: 33, scope: !5421)
!5634 = !DILocation(line: 406, column: 13, scope: !5421)
!5635 = !DILocation(line: 406, column: 26, scope: !5421)
!5636 = !DILocation(line: 406, column: 21, scope: !5421)
!5637 = !DILocation(line: 406, column: 16, scope: !5421)
!5638 = !DILocation(line: 406, column: 43, scope: !5421)
!5639 = !DILocation(line: 407, column: 9, scope: !5421)
!5640 = !DILocation(line: 382, column: 41, scope: !5641)
!5641 = !DILexicalBlockFile(scope: !5422, file: !904, discriminator: 2)
!5642 = !DILocation(line: 382, column: 9, scope: !5641)
!5643 = distinct !{!5643, !5644}
!5644 = !DILocation(line: 382, column: 9, scope: !5424)
!5645 = !DILocation(line: 408, column: 5, scope: !5424)
!5646 = !DILocation(line: 381, column: 37, scope: !5647)
!5647 = !DILexicalBlockFile(scope: !5425, file: !904, discriminator: 2)
!5648 = !DILocation(line: 381, column: 5, scope: !5647)
!5649 = distinct !{!5649, !5650}
!5650 = !DILocation(line: 381, column: 5, scope: !5413)
!5651 = !DILocation(line: 409, column: 1, scope: !5413)
!5652 = distinct !DISubprogram(name: "unpack_superblocks", scope: !904, file: !904, line: 426, type: !5653, isLocal: true, isDefinition: true, scopeLine: 427, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{!890, !1707, !4245}
!5655 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5656)
!5656 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !5666)
!5657 = !DILexicalBlockFile(scope: !5658, file: !2183, discriminator: 11)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !2183, line: 788, column: 490)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !2183, line: 788, column: 466)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !2183, line: 788, column: 154)
!5661 = distinct !DILexicalBlock(scope: !5662, file: !2183, line: 788, column: 130)
!5662 = distinct !DILexicalBlock(scope: !5663, file: !2183, line: 788, column: 8)
!5663 = distinct !DISubprogram(name: "get_vlc2", scope: !2183, file: !2183, line: 762, type: !5664, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!890, !4245, !1868, !890, !890}
!5666 = distinct !DILocation(line: 568, column: 47, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !904, line: 566, column: 53)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !904, line: 566, column: 33)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !904, line: 563, column: 41)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !904, line: 563, column: 29)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !904, line: 560, column: 49)
!5672 = distinct !DILexicalBlock(scope: !5673, file: !904, line: 560, column: 25)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !904, line: 557, column: 42)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !904, line: 557, column: 17)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !904, line: 557, column: 17)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !904, line: 552, column: 74)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !904, line: 552, column: 13)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !904, line: 552, column: 13)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !904, line: 551, column: 16)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !904, line: 535, column: 13)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !904, line: 529, column: 41)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !904, line: 529, column: 5)
!5683 = distinct !DILexicalBlock(scope: !5652, file: !904, line: 529, column: 5)
!5684 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5685)
!5685 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !5666)
!5686 = !DILexicalBlockFile(scope: !5660, file: !2183, discriminator: 6)
!5687 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5688)
!5688 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !5666)
!5689 = !DILocalVariable(name: "s", arg: 1, scope: !5663, file: !2183, line: 762, type: !4245)
!5690 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !5666)
!5691 = !DILocalVariable(name: "table", arg: 2, scope: !5663, file: !2183, line: 762, type: !1868)
!5692 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !5666)
!5693 = !DILocalVariable(name: "bits", arg: 3, scope: !5663, file: !2183, line: 763, type: !890)
!5694 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !5666)
!5695 = !DILocalVariable(name: "max_depth", arg: 4, scope: !5663, file: !2183, line: 763, type: !890)
!5696 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !5666)
!5697 = !DILocalVariable(name: "code", scope: !5663, file: !2183, line: 783, type: !890)
!5698 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !5666)
!5699 = !DILocalVariable(name: "re_index", scope: !5663, file: !2183, line: 785, type: !891)
!5700 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !5666)
!5701 = !DILocalVariable(name: "re_cache", scope: !5663, file: !2183, line: 785, type: !891)
!5702 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !5666)
!5703 = !DILocalVariable(name: "re_size_plus8", scope: !5663, file: !2183, line: 785, type: !891)
!5704 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !5666)
!5705 = !DILocalVariable(name: "n", scope: !5662, file: !2183, line: 788, type: !890)
!5706 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !5666)
!5707 = !DILocalVariable(name: "nb_bits", scope: !5662, file: !2183, line: 788, type: !890)
!5708 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !5666)
!5709 = !DILocalVariable(name: "index", scope: !5662, file: !2183, line: 788, type: !891)
!5710 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !5666)
!5711 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5712)
!5712 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !5713)
!5713 = distinct !DILocation(line: 488, column: 31, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5715, file: !904, line: 482, column: 43)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !904, line: 474, column: 60)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !904, line: 474, column: 13)
!5717 = distinct !DILexicalBlock(scope: !5718, file: !904, line: 443, column: 12)
!5718 = distinct !DILexicalBlock(scope: !5652, file: !904, line: 441, column: 9)
!5719 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5720)
!5720 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !5713)
!5721 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5722)
!5722 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !5713)
!5723 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !5713)
!5724 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !5713)
!5725 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !5713)
!5726 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !5713)
!5727 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !5713)
!5728 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !5713)
!5729 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !5713)
!5730 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !5713)
!5731 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !5713)
!5732 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !5713)
!5733 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !5713)
!5734 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5735)
!5735 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !5736)
!5736 = distinct !DILocation(line: 454, column: 27, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5717, file: !904, line: 448, column: 83)
!5738 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5739)
!5739 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !5736)
!5740 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !5741)
!5741 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !5736)
!5742 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !5736)
!5743 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !5736)
!5744 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !5736)
!5745 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !5736)
!5746 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !5736)
!5747 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !5736)
!5748 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !5736)
!5749 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !5736)
!5750 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !5736)
!5751 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !5736)
!5752 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !5736)
!5753 = !DILocalVariable(name: "s", arg: 1, scope: !5652, file: !904, line: 426, type: !1707)
!5754 = !DILocation(line: 426, column: 49, scope: !5652)
!5755 = !DILocalVariable(name: "gb", arg: 2, scope: !5652, file: !904, line: 426, type: !4245)
!5756 = !DILocation(line: 426, column: 67, scope: !5652)
!5757 = !DILocalVariable(name: "superblock_starts", scope: !5652, file: !904, line: 428, type: !1792)
!5758 = !DILocation(line: 428, column: 9, scope: !5652)
!5759 = !DILocation(line: 428, column: 32, scope: !5652)
!5760 = !DILocation(line: 429, column: 12, scope: !5652)
!5761 = !DILocation(line: 429, column: 15, scope: !5652)
!5762 = !DILocation(line: 429, column: 35, scope: !5652)
!5763 = !DILocation(line: 429, column: 38, scope: !5652)
!5764 = !DILocalVariable(name: "bit", scope: !5652, file: !904, line: 431, type: !890)
!5765 = !DILocation(line: 431, column: 9, scope: !5652)
!5766 = !DILocalVariable(name: "current_superblock", scope: !5652, file: !904, line: 432, type: !890)
!5767 = !DILocation(line: 432, column: 9, scope: !5652)
!5768 = !DILocalVariable(name: "current_run", scope: !5652, file: !904, line: 433, type: !890)
!5769 = !DILocation(line: 433, column: 9, scope: !5652)
!5770 = !DILocalVariable(name: "num_partial_superblocks", scope: !5652, file: !904, line: 434, type: !890)
!5771 = !DILocation(line: 434, column: 9, scope: !5652)
!5772 = !DILocalVariable(name: "i", scope: !5652, file: !904, line: 436, type: !890)
!5773 = !DILocation(line: 436, column: 9, scope: !5652)
!5774 = !DILocalVariable(name: "j", scope: !5652, file: !904, line: 436, type: !890)
!5775 = !DILocation(line: 436, column: 12, scope: !5652)
!5776 = !DILocalVariable(name: "current_fragment", scope: !5652, file: !904, line: 437, type: !890)
!5777 = !DILocation(line: 437, column: 9, scope: !5652)
!5778 = !DILocalVariable(name: "plane", scope: !5652, file: !904, line: 438, type: !890)
!5779 = !DILocation(line: 438, column: 9, scope: !5652)
!5780 = !DILocalVariable(name: "plane0_num_coded_frags", scope: !5652, file: !904, line: 439, type: !890)
!5781 = !DILocation(line: 439, column: 9, scope: !5652)
!5782 = !DILocation(line: 441, column: 9, scope: !5718)
!5783 = !DILocation(line: 441, column: 12, scope: !5718)
!5784 = !DILocation(line: 441, column: 9, scope: !5652)
!5785 = !DILocation(line: 442, column: 16, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5718, file: !904, line: 441, column: 22)
!5787 = !DILocation(line: 442, column: 19, scope: !5786)
!5788 = !DILocation(line: 442, column: 41, scope: !5786)
!5789 = !DILocation(line: 442, column: 44, scope: !5786)
!5790 = !DILocation(line: 442, column: 9, scope: !5786)
!5791 = !DILocation(line: 443, column: 5, scope: !5786)
!5792 = !DILocation(line: 445, column: 25, scope: !5717)
!5793 = !DILocation(line: 445, column: 15, scope: !5717)
!5794 = !DILocation(line: 445, column: 29, scope: !5717)
!5795 = !DILocation(line: 445, column: 13, scope: !5717)
!5796 = !DILocation(line: 446, column: 21, scope: !5717)
!5797 = !DILocation(line: 448, column: 9, scope: !5717)
!5798 = !DILocation(line: 448, column: 16, scope: !5799)
!5799 = !DILexicalBlockFile(scope: !5717, file: !904, discriminator: 1)
!5800 = !DILocation(line: 448, column: 37, scope: !5799)
!5801 = !DILocation(line: 448, column: 40, scope: !5799)
!5802 = !DILocation(line: 448, column: 35, scope: !5799)
!5803 = !DILocation(line: 448, column: 57, scope: !5799)
!5804 = !DILocation(line: 448, column: 74, scope: !5805)
!5805 = !DILexicalBlockFile(scope: !5717, file: !904, discriminator: 2)
!5806 = !DILocation(line: 448, column: 60, scope: !5805)
!5807 = !DILocation(line: 448, column: 78, scope: !5805)
!5808 = !DILocation(line: 448, column: 9, scope: !5809)
!5809 = !DILexicalBlockFile(scope: !5717, file: !904, discriminator: 3)
!5810 = !DILocation(line: 449, column: 17, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5737, file: !904, line: 449, column: 17)
!5812 = !DILocation(line: 449, column: 20, scope: !5811)
!5813 = !DILocation(line: 449, column: 27, scope: !5811)
!5814 = !DILocation(line: 449, column: 30, scope: !5815)
!5815 = !DILexicalBlockFile(scope: !5811, file: !904, discriminator: 1)
!5816 = !DILocation(line: 449, column: 42, scope: !5815)
!5817 = !DILocation(line: 449, column: 17, scope: !5815)
!5818 = !DILocation(line: 450, column: 33, scope: !5811)
!5819 = !DILocation(line: 450, column: 23, scope: !5811)
!5820 = !DILocation(line: 450, column: 21, scope: !5811)
!5821 = !DILocation(line: 450, column: 17, scope: !5811)
!5822 = !DILocation(line: 452, column: 21, scope: !5811)
!5823 = !DILocation(line: 454, column: 36, scope: !5737)
!5824 = !DILocation(line: 454, column: 40, scope: !5737)
!5825 = !DILocation(line: 454, column: 43, scope: !5737)
!5826 = !DILocation(line: 454, column: 69, scope: !5737)
!5827 = !DILocation(line: 454, column: 27, scope: !5737)
!5828 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !5736)
!5829 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !5736)
!5830 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !5736)
!5831 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !5736)
!5832 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !5736)
!5833 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !5736)
!5834 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !5736)
!5835 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !5736)
!5836 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !5736)
!5837 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !5736)
!5838 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !5736)
!5839 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5741)
!5840 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5741)
!5841 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5741)
!5842 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5741)
!5843 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5741)
!5844 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5741)
!5845 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5741)
!5846 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5741)
!5847 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5741)
!5848 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5741)
!5849 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5741)
!5850 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5741)
!5851 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5741)
!5852 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5741)
!5853 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5741)
!5854 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5741)
!5855 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5741)
!5856 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5741)
!5857 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !5736)
!5858 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !5736)
!5859 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !5736)
!5860 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !5736)
!5861 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !5736)
!5862 = !DILexicalBlockFile(scope: !5662, file: !2183, discriminator: 1)
!5863 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !5736)
!5864 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !5736)
!5865 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !5736)
!5866 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !5736)
!5867 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !5736)
!5868 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !5736)
!5869 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !5736)
!5870 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !5736)
!5871 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !5736)
!5872 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !5736)
!5873 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !5736)
!5874 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !5736)
!5875 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !5736)
!5876 = !DILexicalBlockFile(scope: !5661, file: !2183, discriminator: 2)
!5877 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !5736)
!5878 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !5736)
!5879 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !5736)
!5880 = !DILexicalBlockFile(scope: !5660, file: !2183, discriminator: 3)
!5881 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !5736)
!5882 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !5736)
!5883 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !5736)
!5884 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !5736)
!5885 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !5736)
!5886 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !5736)
!5887 = !DILexicalBlockFile(scope: !5660, file: !2183, discriminator: 4)
!5888 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !5736)
!5889 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !5736)
!5890 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !5736)
!5891 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !5736)
!5892 = !DILexicalBlockFile(scope: !5660, file: !2183, discriminator: 5)
!5893 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !5736)
!5894 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !5736)
!5895 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !5736)
!5896 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !5736)
!5897 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !5736)
!5898 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !5736)
!5899 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !5736)
!5900 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !5736)
!5901 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !5736)
!5902 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !5736)
!5903 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5739)
!5904 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5739)
!5905 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5739)
!5906 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5739)
!5907 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5739)
!5908 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5739)
!5909 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5739)
!5910 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5739)
!5911 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5739)
!5912 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5739)
!5913 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5739)
!5914 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5739)
!5915 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5739)
!5916 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5739)
!5917 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5739)
!5918 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5739)
!5919 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5739)
!5920 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5739)
!5921 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !5736)
!5922 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !5736)
!5923 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !5736)
!5924 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !5736)
!5925 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !5736)
!5926 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !5736)
!5927 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !5736)
!5928 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !5736)
!5929 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !5736)
!5930 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !5736)
!5931 = !DILexicalBlockFile(scope: !5686, file: !2183, discriminator: 19)
!5932 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !5736)
!5933 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !5736)
!5934 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !5736)
!5935 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !5736)
!5936 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !5736)
!5937 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !5736)
!5938 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !5736)
!5939 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !5736)
!5940 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !5736)
!5941 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !5736)
!5942 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !5736)
!5943 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !5736)
!5944 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !5736)
!5945 = !DILexicalBlockFile(scope: !5659, file: !2183, discriminator: 7)
!5946 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !5736)
!5947 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !5736)
!5948 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !5736)
!5949 = !DILexicalBlockFile(scope: !5658, file: !2183, discriminator: 8)
!5950 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !5736)
!5951 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !5736)
!5952 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !5736)
!5953 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !5736)
!5954 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !5736)
!5955 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !5736)
!5956 = !DILexicalBlockFile(scope: !5658, file: !2183, discriminator: 9)
!5957 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !5736)
!5958 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !5736)
!5959 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !5736)
!5960 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !5736)
!5961 = !DILexicalBlockFile(scope: !5658, file: !2183, discriminator: 10)
!5962 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !5736)
!5963 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !5736)
!5964 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !5736)
!5965 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !5736)
!5966 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !5736)
!5967 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !5736)
!5968 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !5736)
!5969 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !5736)
!5970 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !5736)
!5971 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !5736)
!5972 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5735)
!5973 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5735)
!5974 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5735)
!5975 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5735)
!5976 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5735)
!5977 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5735)
!5978 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5735)
!5979 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5735)
!5980 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5735)
!5981 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5735)
!5982 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5735)
!5983 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5735)
!5984 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5735)
!5985 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5735)
!5986 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5735)
!5987 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5735)
!5988 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5735)
!5989 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5735)
!5990 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !5736)
!5991 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !5736)
!5992 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !5736)
!5993 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !5736)
!5994 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !5736)
!5995 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !5736)
!5996 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !5736)
!5997 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !5736)
!5998 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !5736)
!5999 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !5736)
!6000 = !DILexicalBlockFile(scope: !5657, file: !2183, discriminator: 20)
!6001 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !5736)
!6002 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !5736)
!6003 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !5736)
!6004 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !5736)
!6005 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !5736)
!6006 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !5736)
!6007 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !5736)
!6008 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !5736)
!6009 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !5736)
!6010 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !5736)
!6011 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !5736)
!6012 = !DILexicalBlockFile(scope: !5660, file: !2183, discriminator: 12)
!6013 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !5736)
!6014 = !DILexicalBlockFile(scope: !6015, file: !2183, discriminator: 14)
!6015 = distinct !DILexicalBlock(scope: !5662, file: !2183, line: 788, column: 811)
!6016 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !5736)
!6017 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !5736)
!6018 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !5736)
!6019 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !5736)
!6020 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !5736)
!6021 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !5736)
!6022 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !5736)
!6023 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !5736)
!6024 = !DILexicalBlockFile(scope: !6015, file: !2183, discriminator: 15)
!6025 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !5736)
!6026 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !5736)
!6027 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !5736)
!6028 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !5736)
!6029 = !DILexicalBlockFile(scope: !6015, file: !2183, discriminator: 16)
!6030 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !5736)
!6031 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !5736)
!6032 = !DILexicalBlockFile(scope: !6015, file: !2183, discriminator: 17)
!6033 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !5736)
!6034 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !5736)
!6035 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !5736)
!6036 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !5736)
!6037 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !5736)
!6038 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !5736)
!6039 = !DILocation(line: 455, column: 42, scope: !5737)
!6040 = !DILocation(line: 454, column: 25, scope: !5737)
!6041 = !DILocation(line: 456, column: 17, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !5737, file: !904, line: 456, column: 17)
!6043 = !DILocation(line: 456, column: 29, scope: !6042)
!6044 = !DILocation(line: 456, column: 17, scope: !5737)
!6045 = !DILocation(line: 457, column: 41, scope: !6042)
!6046 = !DILocation(line: 457, column: 32, scope: !6042)
!6047 = !DILocation(line: 457, column: 29, scope: !6042)
!6048 = !DILocation(line: 457, column: 17, scope: !6042)
!6049 = !DILocation(line: 459, column: 17, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5737, file: !904, line: 459, column: 17)
!6051 = !DILocation(line: 459, column: 31, scope: !6050)
!6052 = !DILocation(line: 459, column: 34, scope: !6050)
!6053 = !DILocation(line: 459, column: 53, scope: !6050)
!6054 = !DILocation(line: 459, column: 51, scope: !6050)
!6055 = !DILocation(line: 459, column: 29, scope: !6050)
!6056 = !DILocation(line: 459, column: 17, scope: !5737)
!6057 = !DILocation(line: 460, column: 24, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6050, file: !904, line: 459, column: 73)
!6059 = !DILocation(line: 460, column: 27, scope: !6058)
!6060 = !DILocation(line: 460, column: 17, scope: !6058)
!6061 = !DILocation(line: 462, column: 17, scope: !6058)
!6062 = !DILocation(line: 465, column: 20, scope: !5737)
!6063 = !DILocation(line: 465, column: 23, scope: !5737)
!6064 = !DILocation(line: 465, column: 43, scope: !5737)
!6065 = !DILocation(line: 465, column: 41, scope: !5737)
!6066 = !DILocation(line: 465, column: 63, scope: !5737)
!6067 = !DILocation(line: 465, column: 13, scope: !5737)
!6068 = !DILocation(line: 465, column: 68, scope: !5737)
!6069 = !DILocation(line: 467, column: 35, scope: !5737)
!6070 = !DILocation(line: 467, column: 32, scope: !5737)
!6071 = !DILocation(line: 468, column: 17, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !5737, file: !904, line: 468, column: 17)
!6073 = !DILocation(line: 468, column: 17, scope: !5737)
!6074 = !DILocation(line: 469, column: 44, scope: !6072)
!6075 = !DILocation(line: 469, column: 41, scope: !6072)
!6076 = !DILocation(line: 469, column: 17, scope: !6072)
!6077 = !DILocation(line: 448, column: 9, scope: !6078)
!6078 = !DILexicalBlockFile(scope: !5717, file: !904, discriminator: 4)
!6079 = distinct !{!6079, !5797}
!6080 = !DILocation(line: 474, column: 13, scope: !5716)
!6081 = !DILocation(line: 474, column: 39, scope: !5716)
!6082 = !DILocation(line: 474, column: 42, scope: !5716)
!6083 = !DILocation(line: 474, column: 37, scope: !5716)
!6084 = !DILocation(line: 474, column: 13, scope: !5717)
!6085 = !DILocalVariable(name: "superblocks_decoded", scope: !5715, file: !904, line: 475, type: !890)
!6086 = !DILocation(line: 475, column: 17, scope: !5715)
!6087 = !DILocation(line: 477, column: 32, scope: !5715)
!6088 = !DILocation(line: 478, column: 29, scope: !5715)
!6089 = !DILocation(line: 478, column: 19, scope: !5715)
!6090 = !DILocation(line: 478, column: 33, scope: !5715)
!6091 = !DILocation(line: 478, column: 17, scope: !5715)
!6092 = !DILocation(line: 479, column: 25, scope: !5715)
!6093 = !DILocation(line: 481, column: 13, scope: !5715)
!6094 = !DILocation(line: 481, column: 20, scope: !6095)
!6095 = !DILexicalBlockFile(scope: !5715, file: !904, discriminator: 1)
!6096 = !DILocation(line: 481, column: 42, scope: !6095)
!6097 = !DILocation(line: 481, column: 45, scope: !6095)
!6098 = !DILocation(line: 481, column: 64, scope: !6095)
!6099 = !DILocation(line: 481, column: 62, scope: !6095)
!6100 = !DILocation(line: 481, column: 40, scope: !6095)
!6101 = !DILocation(line: 481, column: 88, scope: !6095)
!6102 = !DILocation(line: 482, column: 34, scope: !5715)
!6103 = !DILocation(line: 482, column: 20, scope: !5715)
!6104 = !DILocation(line: 482, column: 38, scope: !5715)
!6105 = !DILocation(line: 481, column: 13, scope: !6106)
!6106 = !DILexicalBlockFile(scope: !5715, file: !904, discriminator: 2)
!6107 = !DILocation(line: 483, column: 21, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !5714, file: !904, line: 483, column: 21)
!6109 = !DILocation(line: 483, column: 24, scope: !6108)
!6110 = !DILocation(line: 483, column: 31, scope: !6108)
!6111 = !DILocation(line: 483, column: 34, scope: !6112)
!6112 = !DILexicalBlockFile(scope: !6108, file: !904, discriminator: 1)
!6113 = !DILocation(line: 483, column: 46, scope: !6112)
!6114 = !DILocation(line: 483, column: 21, scope: !6112)
!6115 = !DILocation(line: 484, column: 37, scope: !6108)
!6116 = !DILocation(line: 484, column: 27, scope: !6108)
!6117 = !DILocation(line: 484, column: 25, scope: !6108)
!6118 = !DILocation(line: 484, column: 21, scope: !6108)
!6119 = !DILocation(line: 486, column: 25, scope: !6108)
!6120 = !DILocation(line: 488, column: 40, scope: !5714)
!6121 = !DILocation(line: 488, column: 44, scope: !5714)
!6122 = !DILocation(line: 488, column: 47, scope: !5714)
!6123 = !DILocation(line: 488, column: 73, scope: !5714)
!6124 = !DILocation(line: 488, column: 31, scope: !5714)
!6125 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !5713)
!6126 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !5713)
!6127 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !5713)
!6128 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !5713)
!6129 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !5713)
!6130 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !5713)
!6131 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !5713)
!6132 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !5713)
!6133 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !5713)
!6134 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !5713)
!6135 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !5713)
!6136 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5722)
!6137 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5722)
!6138 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5722)
!6139 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5722)
!6140 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5722)
!6141 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5722)
!6142 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5722)
!6143 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5722)
!6144 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5722)
!6145 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5722)
!6146 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5722)
!6147 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5722)
!6148 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5722)
!6149 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5722)
!6150 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5722)
!6151 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5722)
!6152 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5722)
!6153 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5722)
!6154 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !5713)
!6155 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !5713)
!6156 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !5713)
!6157 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !5713)
!6158 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !5713)
!6159 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !5713)
!6160 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !5713)
!6161 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !5713)
!6162 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !5713)
!6163 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !5713)
!6164 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !5713)
!6165 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !5713)
!6166 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !5713)
!6167 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !5713)
!6168 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !5713)
!6169 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !5713)
!6170 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !5713)
!6171 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !5713)
!6172 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !5713)
!6173 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !5713)
!6174 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !5713)
!6175 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !5713)
!6176 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !5713)
!6177 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !5713)
!6178 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !5713)
!6179 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !5713)
!6180 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !5713)
!6181 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !5713)
!6182 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !5713)
!6183 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !5713)
!6184 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !5713)
!6185 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !5713)
!6186 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !5713)
!6187 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !5713)
!6188 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !5713)
!6189 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !5713)
!6190 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !5713)
!6191 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !5713)
!6192 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !5713)
!6193 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !5713)
!6194 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !5713)
!6195 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5720)
!6196 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5720)
!6197 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5720)
!6198 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5720)
!6199 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5720)
!6200 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5720)
!6201 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5720)
!6202 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5720)
!6203 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5720)
!6204 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5720)
!6205 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5720)
!6206 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5720)
!6207 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5720)
!6208 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5720)
!6209 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5720)
!6210 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5720)
!6211 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5720)
!6212 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5720)
!6213 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !5713)
!6214 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !5713)
!6215 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !5713)
!6216 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !5713)
!6217 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !5713)
!6218 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !5713)
!6219 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !5713)
!6220 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !5713)
!6221 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !5713)
!6222 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !5713)
!6223 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !5713)
!6224 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !5713)
!6225 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !5713)
!6226 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !5713)
!6227 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !5713)
!6228 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !5713)
!6229 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !5713)
!6230 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !5713)
!6231 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !5713)
!6232 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !5713)
!6233 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !5713)
!6234 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !5713)
!6235 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !5713)
!6236 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !5713)
!6237 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !5713)
!6238 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !5713)
!6239 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !5713)
!6240 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !5713)
!6241 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !5713)
!6242 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !5713)
!6243 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !5713)
!6244 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !5713)
!6245 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !5713)
!6246 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !5713)
!6247 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !5713)
!6248 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !5713)
!6249 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !5713)
!6250 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !5713)
!6251 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !5713)
!6252 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !5713)
!6253 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !5713)
!6254 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !5713)
!6255 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !5713)
!6256 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !5713)
!6257 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !5713)
!6258 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !5713)
!6259 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5712)
!6260 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5712)
!6261 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5712)
!6262 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5712)
!6263 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5712)
!6264 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5712)
!6265 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5712)
!6266 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5712)
!6267 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5712)
!6268 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5712)
!6269 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5712)
!6270 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5712)
!6271 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5712)
!6272 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5712)
!6273 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5712)
!6274 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5712)
!6275 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5712)
!6276 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5712)
!6277 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !5713)
!6278 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !5713)
!6279 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !5713)
!6280 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !5713)
!6281 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !5713)
!6282 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !5713)
!6283 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !5713)
!6284 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !5713)
!6285 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !5713)
!6286 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !5713)
!6287 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !5713)
!6288 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !5713)
!6289 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !5713)
!6290 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !5713)
!6291 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !5713)
!6292 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !5713)
!6293 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !5713)
!6294 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !5713)
!6295 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !5713)
!6296 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !5713)
!6297 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !5713)
!6298 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !5713)
!6299 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !5713)
!6300 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !5713)
!6301 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !5713)
!6302 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !5713)
!6303 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !5713)
!6304 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !5713)
!6305 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !5713)
!6306 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !5713)
!6307 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !5713)
!6308 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !5713)
!6309 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !5713)
!6310 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !5713)
!6311 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !5713)
!6312 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !5713)
!6313 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !5713)
!6314 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !5713)
!6315 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !5713)
!6316 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !5713)
!6317 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !5713)
!6318 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !5713)
!6319 = !DILocation(line: 489, column: 46, scope: !5714)
!6320 = !DILocation(line: 488, column: 29, scope: !5714)
!6321 = !DILocation(line: 490, column: 21, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !5714, file: !904, line: 490, column: 21)
!6323 = !DILocation(line: 490, column: 33, scope: !6322)
!6324 = !DILocation(line: 490, column: 21, scope: !5714)
!6325 = !DILocation(line: 491, column: 45, scope: !6322)
!6326 = !DILocation(line: 491, column: 36, scope: !6322)
!6327 = !DILocation(line: 491, column: 33, scope: !6322)
!6328 = !DILocation(line: 491, column: 21, scope: !6322)
!6329 = !DILocation(line: 493, column: 24, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !5714, file: !904, line: 493, column: 17)
!6331 = !DILocation(line: 493, column: 22, scope: !6330)
!6332 = !DILocation(line: 493, column: 29, scope: !6333)
!6333 = !DILexicalBlockFile(scope: !6334, file: !904, discriminator: 1)
!6334 = distinct !DILexicalBlock(scope: !6330, file: !904, line: 493, column: 17)
!6335 = !DILocation(line: 493, column: 33, scope: !6333)
!6336 = !DILocation(line: 493, column: 31, scope: !6333)
!6337 = !DILocation(line: 493, column: 17, scope: !6333)
!6338 = !DILocation(line: 494, column: 25, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !904, line: 494, column: 25)
!6340 = distinct !DILexicalBlock(scope: !6334, file: !904, line: 493, column: 68)
!6341 = !DILocation(line: 494, column: 47, scope: !6339)
!6342 = !DILocation(line: 494, column: 50, scope: !6339)
!6343 = !DILocation(line: 494, column: 44, scope: !6339)
!6344 = !DILocation(line: 494, column: 25, scope: !6340)
!6345 = !DILocation(line: 495, column: 32, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6339, file: !904, line: 494, column: 68)
!6347 = !DILocation(line: 495, column: 35, scope: !6346)
!6348 = !DILocation(line: 495, column: 25, scope: !6346)
!6349 = !DILocation(line: 497, column: 25, scope: !6346)
!6350 = !DILocation(line: 501, column: 46, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6340, file: !904, line: 501, column: 25)
!6352 = !DILocation(line: 501, column: 25, scope: !6351)
!6353 = !DILocation(line: 501, column: 28, scope: !6351)
!6354 = !DILocation(line: 501, column: 66, scope: !6351)
!6355 = !DILocation(line: 501, column: 25, scope: !6340)
!6356 = !DILocation(line: 502, column: 72, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6351, file: !904, line: 501, column: 72)
!6358 = !DILocation(line: 502, column: 70, scope: !6357)
!6359 = !DILocation(line: 502, column: 68, scope: !6357)
!6360 = !DILocation(line: 502, column: 46, scope: !6357)
!6361 = !DILocation(line: 502, column: 25, scope: !6357)
!6362 = !DILocation(line: 502, column: 28, scope: !6357)
!6363 = !DILocation(line: 502, column: 66, scope: !6357)
!6364 = !DILocation(line: 503, column: 26, scope: !6357)
!6365 = !DILocation(line: 504, column: 21, scope: !6357)
!6366 = !DILocation(line: 505, column: 17, scope: !6340)
!6367 = !DILocation(line: 493, column: 64, scope: !6368)
!6368 = !DILexicalBlockFile(scope: !6334, file: !904, discriminator: 2)
!6369 = !DILocation(line: 493, column: 17, scope: !6368)
!6370 = distinct !{!6370, !6371}
!6371 = !DILocation(line: 493, column: 17, scope: !5714)
!6372 = !DILocation(line: 506, column: 40, scope: !5714)
!6373 = !DILocation(line: 506, column: 37, scope: !5714)
!6374 = !DILocation(line: 481, column: 13, scope: !6375)
!6375 = !DILexicalBlockFile(scope: !5715, file: !904, discriminator: 3)
!6376 = distinct !{!6376, !6093}
!6377 = !DILocation(line: 508, column: 9, scope: !5715)
!6378 = !DILocation(line: 512, column: 13, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !5717, file: !904, line: 512, column: 13)
!6380 = !DILocation(line: 512, column: 13, scope: !5717)
!6381 = !DILocation(line: 513, column: 25, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6379, file: !904, line: 512, column: 38)
!6383 = !DILocation(line: 514, column: 29, scope: !6382)
!6384 = !DILocation(line: 514, column: 19, scope: !6382)
!6385 = !DILocation(line: 514, column: 17, scope: !6382)
!6386 = !DILocation(line: 517, column: 17, scope: !6382)
!6387 = !DILocation(line: 518, column: 9, scope: !6382)
!6388 = !DILocation(line: 523, column: 5, scope: !5652)
!6389 = !DILocation(line: 523, column: 8, scope: !5652)
!6390 = !DILocation(line: 523, column: 30, scope: !5652)
!6391 = !DILocation(line: 524, column: 12, scope: !5652)
!6392 = !DILocation(line: 524, column: 15, scope: !5652)
!6393 = !DILocation(line: 524, column: 37, scope: !5652)
!6394 = !DILocation(line: 524, column: 40, scope: !5652)
!6395 = !DILocation(line: 524, column: 5, scope: !5652)
!6396 = !DILocation(line: 526, column: 33, scope: !5652)
!6397 = !DILocation(line: 526, column: 36, scope: !5652)
!6398 = !DILocation(line: 526, column: 47, scope: !6399)
!6399 = !DILexicalBlockFile(scope: !5652, file: !904, discriminator: 1)
!6400 = !DILocation(line: 526, column: 50, scope: !6399)
!6401 = !DILocation(line: 526, column: 33, scope: !6399)
!6402 = !DILocation(line: 527, column: 47, scope: !5652)
!6403 = !DILocation(line: 527, column: 50, scope: !5652)
!6404 = !DILocation(line: 526, column: 33, scope: !6405)
!6405 = !DILexicalBlockFile(scope: !5652, file: !904, discriminator: 2)
!6406 = !DILocation(line: 526, column: 33, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !5652, file: !904, discriminator: 3)
!6408 = !DILocation(line: 526, column: 5, scope: !6407)
!6409 = !DILocation(line: 526, column: 8, scope: !6407)
!6410 = !DILocation(line: 526, column: 31, scope: !6407)
!6411 = !DILocation(line: 529, column: 16, scope: !5683)
!6412 = !DILocation(line: 529, column: 10, scope: !5683)
!6413 = !DILocation(line: 529, column: 21, scope: !6414)
!6414 = !DILexicalBlockFile(scope: !5682, file: !904, discriminator: 1)
!6415 = !DILocation(line: 529, column: 27, scope: !6414)
!6416 = !DILocation(line: 529, column: 5, scope: !6414)
!6417 = !DILocalVariable(name: "sb_start", scope: !5681, file: !904, line: 530, type: !890)
!6418 = !DILocation(line: 530, column: 13, scope: !5681)
!6419 = !DILocation(line: 530, column: 42, scope: !5681)
!6420 = !DILocation(line: 530, column: 24, scope: !5681)
!6421 = !DILocalVariable(name: "sb_end", scope: !5681, file: !904, line: 531, type: !890)
!6422 = !DILocation(line: 531, column: 13, scope: !5681)
!6423 = !DILocation(line: 531, column: 22, scope: !5681)
!6424 = !DILocation(line: 531, column: 34, scope: !5681)
!6425 = !DILocation(line: 531, column: 42, scope: !6426)
!6426 = !DILexicalBlockFile(scope: !5681, file: !904, discriminator: 1)
!6427 = !DILocation(line: 531, column: 45, scope: !6426)
!6428 = !DILocation(line: 531, column: 34, scope: !6426)
!6429 = !DILocation(line: 532, column: 44, scope: !5681)
!6430 = !DILocation(line: 532, column: 47, scope: !5681)
!6431 = !DILocation(line: 531, column: 34, scope: !6432)
!6432 = !DILexicalBlockFile(scope: !5681, file: !904, discriminator: 2)
!6433 = !DILocation(line: 531, column: 34, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !5681, file: !904, discriminator: 3)
!6435 = !DILocation(line: 531, column: 31, scope: !6434)
!6436 = !DILocation(line: 531, column: 13, scope: !6434)
!6437 = !DILocalVariable(name: "num_coded_frags", scope: !5681, file: !904, line: 533, type: !890)
!6438 = !DILocation(line: 533, column: 13, scope: !5681)
!6439 = !DILocation(line: 535, column: 13, scope: !5680)
!6440 = !DILocation(line: 535, column: 16, scope: !5680)
!6441 = !DILocation(line: 535, column: 13, scope: !5681)
!6442 = !DILocation(line: 536, column: 42, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !904, line: 536, column: 17)
!6444 = distinct !DILexicalBlock(scope: !5680, file: !904, line: 535, column: 26)
!6445 = !DILocation(line: 536, column: 17, scope: !6443)
!6446 = !DILocation(line: 536, column: 20, scope: !6443)
!6447 = !DILocation(line: 536, column: 49, scope: !6443)
!6448 = !DILocation(line: 536, column: 17, scope: !6444)
!6449 = !DILocation(line: 537, column: 26, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !904, line: 537, column: 17)
!6451 = distinct !DILexicalBlock(scope: !6443, file: !904, line: 536, column: 56)
!6452 = !DILocation(line: 537, column: 24, scope: !6450)
!6453 = !DILocation(line: 537, column: 22, scope: !6450)
!6454 = !DILocation(line: 537, column: 36, scope: !6455)
!6455 = !DILexicalBlockFile(scope: !6456, file: !904, discriminator: 1)
!6456 = distinct !DILexicalBlock(scope: !6450, file: !904, line: 537, column: 17)
!6457 = !DILocation(line: 537, column: 40, scope: !6455)
!6458 = !DILocation(line: 537, column: 38, scope: !6455)
!6459 = !DILocation(line: 537, column: 17, scope: !6455)
!6460 = !DILocation(line: 539, column: 28, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6462, file: !904, line: 539, column: 21)
!6462 = distinct !DILexicalBlock(scope: !6456, file: !904, line: 537, column: 53)
!6463 = !DILocation(line: 539, column: 26, scope: !6461)
!6464 = !DILocation(line: 539, column: 33, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !6466, file: !904, discriminator: 1)
!6466 = distinct !DILexicalBlock(scope: !6461, file: !904, line: 539, column: 21)
!6467 = !DILocation(line: 539, column: 35, scope: !6465)
!6468 = !DILocation(line: 539, column: 21, scope: !6465)
!6469 = !DILocation(line: 541, column: 68, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6466, file: !904, line: 539, column: 46)
!6471 = !DILocation(line: 541, column: 70, scope: !6470)
!6472 = !DILocation(line: 541, column: 77, scope: !6470)
!6473 = !DILocation(line: 541, column: 75, scope: !6470)
!6474 = !DILocation(line: 541, column: 44, scope: !6470)
!6475 = !DILocation(line: 541, column: 47, scope: !6470)
!6476 = !DILocation(line: 541, column: 42, scope: !6470)
!6477 = !DILocation(line: 542, column: 29, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6470, file: !904, line: 542, column: 29)
!6479 = !DILocation(line: 542, column: 46, scope: !6478)
!6480 = !DILocation(line: 542, column: 29, scope: !6470)
!6481 = !DILocation(line: 544, column: 33, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6478, file: !904, line: 542, column: 53)
!6483 = !DILocation(line: 543, column: 74, scope: !6482)
!6484 = !DILocation(line: 543, column: 29, scope: !6482)
!6485 = !DILocation(line: 543, column: 52, scope: !6482)
!6486 = !DILocation(line: 543, column: 32, scope: !6482)
!6487 = !DILocation(line: 543, column: 78, scope: !6482)
!6488 = !DILocation(line: 545, column: 25, scope: !6482)
!6489 = !DILocation(line: 546, column: 21, scope: !6470)
!6490 = !DILocation(line: 539, column: 42, scope: !6491)
!6491 = !DILexicalBlockFile(scope: !6466, file: !904, discriminator: 2)
!6492 = !DILocation(line: 539, column: 21, scope: !6491)
!6493 = distinct !{!6493, !6494}
!6494 = !DILocation(line: 539, column: 21, scope: !6462)
!6495 = !DILocation(line: 547, column: 17, scope: !6462)
!6496 = !DILocation(line: 537, column: 49, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !6456, file: !904, discriminator: 2)
!6498 = !DILocation(line: 537, column: 17, scope: !6497)
!6499 = distinct !{!6499, !6500}
!6500 = !DILocation(line: 537, column: 17, scope: !6451)
!6501 = !DILocation(line: 548, column: 51, scope: !6451)
!6502 = !DILocation(line: 548, column: 42, scope: !6451)
!6503 = !DILocation(line: 548, column: 17, scope: !6451)
!6504 = !DILocation(line: 548, column: 20, scope: !6451)
!6505 = !DILocation(line: 548, column: 49, scope: !6451)
!6506 = !DILocation(line: 549, column: 13, scope: !6451)
!6507 = !DILocation(line: 550, column: 60, scope: !6443)
!6508 = !DILocation(line: 550, column: 35, scope: !6443)
!6509 = !DILocation(line: 550, column: 38, scope: !6443)
!6510 = !DILocation(line: 550, column: 33, scope: !6443)
!6511 = !DILocation(line: 551, column: 9, scope: !6444)
!6512 = !DILocation(line: 552, column: 22, scope: !5678)
!6513 = !DILocation(line: 552, column: 20, scope: !5678)
!6514 = !DILocation(line: 552, column: 18, scope: !5678)
!6515 = !DILocation(line: 552, column: 32, scope: !6516)
!6516 = !DILexicalBlockFile(scope: !5677, file: !904, discriminator: 1)
!6517 = !DILocation(line: 552, column: 36, scope: !6516)
!6518 = !DILocation(line: 552, column: 34, scope: !6516)
!6519 = !DILocation(line: 552, column: 43, scope: !6516)
!6520 = !DILocation(line: 552, column: 60, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !5677, file: !904, discriminator: 2)
!6522 = !DILocation(line: 552, column: 46, scope: !6521)
!6523 = !DILocation(line: 552, column: 64, scope: !6521)
!6524 = !DILocation(line: 552, column: 13, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !5678, file: !904, discriminator: 3)
!6526 = !DILocation(line: 553, column: 35, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !5676, file: !904, line: 553, column: 21)
!6528 = !DILocation(line: 553, column: 21, scope: !6527)
!6529 = !DILocation(line: 553, column: 41, scope: !6527)
!6530 = !DILocation(line: 553, column: 64, scope: !6527)
!6531 = !DILocation(line: 553, column: 39, scope: !6527)
!6532 = !DILocation(line: 553, column: 21, scope: !5676)
!6533 = !DILocation(line: 554, column: 21, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6527, file: !904, line: 553, column: 70)
!6535 = !DILocation(line: 557, column: 24, scope: !5675)
!6536 = !DILocation(line: 557, column: 22, scope: !5675)
!6537 = !DILocation(line: 557, column: 29, scope: !6538)
!6538 = !DILexicalBlockFile(scope: !5674, file: !904, discriminator: 1)
!6539 = !DILocation(line: 557, column: 31, scope: !6538)
!6540 = !DILocation(line: 557, column: 17, scope: !6538)
!6541 = !DILocation(line: 559, column: 64, scope: !5673)
!6542 = !DILocation(line: 559, column: 66, scope: !5673)
!6543 = !DILocation(line: 559, column: 73, scope: !5673)
!6544 = !DILocation(line: 559, column: 71, scope: !5673)
!6545 = !DILocation(line: 559, column: 40, scope: !5673)
!6546 = !DILocation(line: 559, column: 43, scope: !5673)
!6547 = !DILocation(line: 559, column: 38, scope: !5673)
!6548 = !DILocation(line: 560, column: 25, scope: !5672)
!6549 = !DILocation(line: 560, column: 42, scope: !5672)
!6550 = !DILocation(line: 560, column: 25, scope: !5673)
!6551 = !DILocalVariable(name: "coded", scope: !5671, file: !904, line: 561, type: !890)
!6552 = !DILocation(line: 561, column: 29, scope: !5671)
!6553 = !DILocation(line: 561, column: 58, scope: !5671)
!6554 = !DILocation(line: 561, column: 37, scope: !5671)
!6555 = !DILocation(line: 561, column: 40, scope: !5671)
!6556 = !DILocation(line: 563, column: 29, scope: !5670)
!6557 = !DILocation(line: 563, column: 35, scope: !5670)
!6558 = !DILocation(line: 563, column: 29, scope: !5671)
!6559 = !DILocation(line: 566, column: 44, scope: !5668)
!6560 = !DILocation(line: 566, column: 47, scope: !5668)
!6561 = !DILocation(line: 566, column: 33, scope: !5669)
!6562 = !DILocation(line: 567, column: 37, scope: !5667)
!6563 = !DILocation(line: 568, column: 56, scope: !5667)
!6564 = !DILocation(line: 568, column: 60, scope: !5667)
!6565 = !DILocation(line: 568, column: 63, scope: !5667)
!6566 = !DILocation(line: 568, column: 87, scope: !5667)
!6567 = !DILocation(line: 568, column: 47, scope: !5667)
!6568 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !5666)
!6569 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !5666)
!6570 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !5666)
!6571 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !5666)
!6572 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !5666)
!6573 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !5666)
!6574 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !5666)
!6575 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !5666)
!6576 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !5666)
!6577 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !5666)
!6578 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !5666)
!6579 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5688)
!6580 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5688)
!6581 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5688)
!6582 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5688)
!6583 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5688)
!6584 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5688)
!6585 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5688)
!6586 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5688)
!6587 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5688)
!6588 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5688)
!6589 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5688)
!6590 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5688)
!6591 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5688)
!6592 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5688)
!6593 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5688)
!6594 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5688)
!6595 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5688)
!6596 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5688)
!6597 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !5666)
!6598 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !5666)
!6599 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !5666)
!6600 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !5666)
!6601 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !5666)
!6602 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !5666)
!6603 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !5666)
!6604 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !5666)
!6605 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !5666)
!6606 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !5666)
!6607 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !5666)
!6608 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !5666)
!6609 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !5666)
!6610 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !5666)
!6611 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !5666)
!6612 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !5666)
!6613 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !5666)
!6614 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !5666)
!6615 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !5666)
!6616 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !5666)
!6617 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !5666)
!6618 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !5666)
!6619 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !5666)
!6620 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !5666)
!6621 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !5666)
!6622 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !5666)
!6623 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !5666)
!6624 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !5666)
!6625 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !5666)
!6626 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !5666)
!6627 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !5666)
!6628 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !5666)
!6629 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !5666)
!6630 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !5666)
!6631 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !5666)
!6632 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !5666)
!6633 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !5666)
!6634 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !5666)
!6635 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !5666)
!6636 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !5666)
!6637 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !5666)
!6638 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5685)
!6639 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5685)
!6640 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5685)
!6641 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5685)
!6642 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5685)
!6643 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5685)
!6644 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5685)
!6645 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5685)
!6646 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5685)
!6647 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5685)
!6648 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5685)
!6649 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5685)
!6650 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5685)
!6651 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5685)
!6652 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5685)
!6653 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5685)
!6654 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5685)
!6655 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5685)
!6656 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !5666)
!6657 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !5666)
!6658 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !5666)
!6659 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !5666)
!6660 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !5666)
!6661 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !5666)
!6662 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !5666)
!6663 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !5666)
!6664 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !5666)
!6665 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !5666)
!6666 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !5666)
!6667 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !5666)
!6668 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !5666)
!6669 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !5666)
!6670 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !5666)
!6671 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !5666)
!6672 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !5666)
!6673 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !5666)
!6674 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !5666)
!6675 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !5666)
!6676 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !5666)
!6677 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !5666)
!6678 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !5666)
!6679 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !5666)
!6680 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !5666)
!6681 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !5666)
!6682 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !5666)
!6683 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !5666)
!6684 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !5666)
!6685 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !5666)
!6686 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !5666)
!6687 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !5666)
!6688 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !5666)
!6689 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !5666)
!6690 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !5666)
!6691 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !5666)
!6692 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !5666)
!6693 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !5666)
!6694 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !5666)
!6695 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !5666)
!6696 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !5666)
!6697 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !5666)
!6698 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !5666)
!6699 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !5666)
!6700 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !5666)
!6701 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !5666)
!6702 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !5656)
!6703 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !5656)
!6704 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !5656)
!6705 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !5656)
!6706 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !5656)
!6707 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !5656)
!6708 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !5656)
!6709 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !5656)
!6710 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !5656)
!6711 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !5656)
!6712 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !5656)
!6713 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !5656)
!6714 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !5656)
!6715 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !5656)
!6716 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !5656)
!6717 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !5656)
!6718 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !5656)
!6719 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !5656)
!6720 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !5666)
!6721 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !5666)
!6722 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !5666)
!6723 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !5666)
!6724 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !5666)
!6725 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !5666)
!6726 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !5666)
!6727 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !5666)
!6728 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !5666)
!6729 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !5666)
!6730 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !5666)
!6731 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !5666)
!6732 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !5666)
!6733 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !5666)
!6734 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !5666)
!6735 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !5666)
!6736 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !5666)
!6737 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !5666)
!6738 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !5666)
!6739 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !5666)
!6740 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !5666)
!6741 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !5666)
!6742 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !5666)
!6743 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !5666)
!6744 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !5666)
!6745 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !5666)
!6746 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !5666)
!6747 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !5666)
!6748 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !5666)
!6749 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !5666)
!6750 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !5666)
!6751 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !5666)
!6752 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !5666)
!6753 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !5666)
!6754 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !5666)
!6755 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !5666)
!6756 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !5666)
!6757 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !5666)
!6758 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !5666)
!6759 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !5666)
!6760 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !5666)
!6761 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !5666)
!6762 = !DILocation(line: 568, column: 45, scope: !5667)
!6763 = !DILocation(line: 569, column: 29, scope: !5667)
!6764 = !DILocation(line: 570, column: 37, scope: !5669)
!6765 = !DILocation(line: 570, column: 35, scope: !5669)
!6766 = !DILocation(line: 571, column: 25, scope: !5669)
!6767 = !DILocation(line: 573, column: 29, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !5671, file: !904, line: 573, column: 29)
!6769 = !DILocation(line: 573, column: 29, scope: !5671)
!6770 = !DILocation(line: 576, column: 46, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6768, file: !904, line: 573, column: 36)
!6772 = !DILocation(line: 576, column: 29, scope: !6771)
!6773 = !DILocation(line: 576, column: 32, scope: !6771)
!6774 = !DILocation(line: 576, column: 64, scope: !6771)
!6775 = !DILocation(line: 576, column: 78, scope: !6771)
!6776 = !DILocation(line: 579, column: 33, scope: !6771)
!6777 = !DILocation(line: 578, column: 74, scope: !6771)
!6778 = !DILocation(line: 578, column: 29, scope: !6771)
!6779 = !DILocation(line: 578, column: 52, scope: !6771)
!6780 = !DILocation(line: 578, column: 32, scope: !6771)
!6781 = !DILocation(line: 578, column: 78, scope: !6771)
!6782 = !DILocation(line: 580, column: 25, scope: !6771)
!6783 = !DILocation(line: 582, column: 46, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6768, file: !904, line: 580, column: 32)
!6785 = !DILocation(line: 582, column: 29, scope: !6784)
!6786 = !DILocation(line: 582, column: 32, scope: !6784)
!6787 = !DILocation(line: 582, column: 64, scope: !6784)
!6788 = !DILocation(line: 582, column: 78, scope: !6784)
!6789 = !DILocation(line: 585, column: 21, scope: !5671)
!6790 = !DILocation(line: 586, column: 17, scope: !5673)
!6791 = !DILocation(line: 557, column: 38, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !5674, file: !904, discriminator: 2)
!6793 = !DILocation(line: 557, column: 17, scope: !6792)
!6794 = distinct !{!6794, !6795}
!6795 = !DILocation(line: 557, column: 17, scope: !5676)
!6796 = !DILocation(line: 587, column: 13, scope: !5676)
!6797 = !DILocation(line: 552, column: 70, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !5677, file: !904, discriminator: 4)
!6799 = !DILocation(line: 552, column: 13, scope: !6798)
!6800 = distinct !{!6800, !6801}
!6801 = !DILocation(line: 552, column: 13, scope: !5679)
!6802 = !DILocation(line: 589, column: 14, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !5681, file: !904, line: 589, column: 13)
!6804 = !DILocation(line: 589, column: 13, scope: !5681)
!6805 = !DILocation(line: 590, column: 38, scope: !6803)
!6806 = !DILocation(line: 590, column: 36, scope: !6803)
!6807 = !DILocation(line: 590, column: 13, scope: !6803)
!6808 = !DILocation(line: 591, column: 37, scope: !5681)
!6809 = !DILocation(line: 591, column: 9, scope: !5681)
!6810 = !DILocation(line: 591, column: 12, scope: !5681)
!6811 = !DILocation(line: 591, column: 34, scope: !5681)
!6812 = !DILocation(line: 592, column: 16, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !5681, file: !904, line: 592, column: 9)
!6814 = !DILocation(line: 592, column: 14, scope: !6813)
!6815 = !DILocation(line: 592, column: 21, scope: !6816)
!6816 = !DILexicalBlockFile(scope: !6817, file: !904, discriminator: 1)
!6817 = distinct !DILexicalBlock(scope: !6813, file: !904, line: 592, column: 9)
!6818 = !DILocation(line: 592, column: 23, scope: !6816)
!6819 = !DILocation(line: 592, column: 9, scope: !6816)
!6820 = !DILocation(line: 593, column: 44, scope: !6817)
!6821 = !DILocation(line: 593, column: 39, scope: !6817)
!6822 = !DILocation(line: 593, column: 13, scope: !6817)
!6823 = !DILocation(line: 593, column: 32, scope: !6817)
!6824 = !DILocation(line: 593, column: 16, scope: !6817)
!6825 = !DILocation(line: 593, column: 42, scope: !6817)
!6826 = !DILocation(line: 592, column: 30, scope: !6827)
!6827 = !DILexicalBlockFile(scope: !6817, file: !904, discriminator: 2)
!6828 = !DILocation(line: 592, column: 9, scope: !6827)
!6829 = distinct !{!6829, !6830}
!6830 = !DILocation(line: 592, column: 9, scope: !5681)
!6831 = !DILocation(line: 594, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !5681, file: !904, line: 594, column: 13)
!6833 = !DILocation(line: 594, column: 19, scope: !6832)
!6834 = !DILocation(line: 594, column: 13, scope: !5681)
!6835 = !DILocation(line: 595, column: 72, scope: !6832)
!6836 = !DILocation(line: 595, column: 49, scope: !6832)
!6837 = !DILocation(line: 595, column: 52, scope: !6832)
!6838 = !DILocation(line: 596, column: 49, scope: !6832)
!6839 = !DILocation(line: 595, column: 79, scope: !6832)
!6840 = !DILocation(line: 595, column: 36, scope: !6832)
!6841 = !DILocation(line: 595, column: 42, scope: !6832)
!6842 = !DILocation(line: 595, column: 13, scope: !6832)
!6843 = !DILocation(line: 595, column: 16, scope: !6832)
!6844 = !DILocation(line: 595, column: 47, scope: !6832)
!6845 = !DILocation(line: 597, column: 5, scope: !5681)
!6846 = !DILocation(line: 529, column: 37, scope: !6847)
!6847 = !DILexicalBlockFile(scope: !5682, file: !904, discriminator: 2)
!6848 = !DILocation(line: 529, column: 5, scope: !6847)
!6849 = distinct !{!6849, !6850}
!6850 = !DILocation(line: 529, column: 5, scope: !5652)
!6851 = !DILocation(line: 598, column: 5, scope: !5652)
!6852 = !DILocation(line: 599, column: 1, scope: !5652)
!6853 = distinct !DISubprogram(name: "unpack_modes", scope: !904, file: !904, line: 605, type: !5653, isLocal: true, isDefinition: true, scopeLine: 606, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!6854 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !6855)
!6855 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !6856)
!6856 = distinct !DILocation(line: 669, column: 48, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !904, line: 666, column: 25)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !904, line: 640, column: 41)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !904, line: 640, column: 17)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !904, line: 640, column: 17)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !904, line: 636, column: 66)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !904, line: 636, column: 13)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !904, line: 636, column: 13)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !904, line: 635, column: 63)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !904, line: 635, column: 9)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !904, line: 635, column: 9)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !904, line: 619, column: 12)
!6868 = distinct !DILexicalBlock(scope: !6853, file: !904, line: 616, column: 9)
!6869 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !6870)
!6870 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !6856)
!6871 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !6872)
!6872 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !6856)
!6873 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !6856)
!6874 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !6856)
!6875 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !6856)
!6876 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !6856)
!6877 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !6856)
!6878 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !6856)
!6879 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !6856)
!6880 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !6856)
!6881 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !6856)
!6882 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !6856)
!6883 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !6856)
!6884 = !DILocalVariable(name: "s", arg: 1, scope: !6853, file: !904, line: 605, type: !1707)
!6885 = !DILocation(line: 605, column: 43, scope: !6853)
!6886 = !DILocalVariable(name: "gb", arg: 2, scope: !6853, file: !904, line: 605, type: !4245)
!6887 = !DILocation(line: 605, column: 61, scope: !6853)
!6888 = !DILocalVariable(name: "i", scope: !6853, file: !904, line: 607, type: !890)
!6889 = !DILocation(line: 607, column: 9, scope: !6853)
!6890 = !DILocalVariable(name: "j", scope: !6853, file: !904, line: 607, type: !890)
!6891 = !DILocation(line: 607, column: 12, scope: !6853)
!6892 = !DILocalVariable(name: "k", scope: !6853, file: !904, line: 607, type: !890)
!6893 = !DILocation(line: 607, column: 15, scope: !6853)
!6894 = !DILocalVariable(name: "sb_x", scope: !6853, file: !904, line: 607, type: !890)
!6895 = !DILocation(line: 607, column: 18, scope: !6853)
!6896 = !DILocalVariable(name: "sb_y", scope: !6853, file: !904, line: 607, type: !890)
!6897 = !DILocation(line: 607, column: 24, scope: !6853)
!6898 = !DILocalVariable(name: "scheme", scope: !6853, file: !904, line: 608, type: !890)
!6899 = !DILocation(line: 608, column: 9, scope: !6853)
!6900 = !DILocalVariable(name: "current_macroblock", scope: !6853, file: !904, line: 609, type: !890)
!6901 = !DILocation(line: 609, column: 9, scope: !6853)
!6902 = !DILocalVariable(name: "current_fragment", scope: !6853, file: !904, line: 610, type: !890)
!6903 = !DILocation(line: 610, column: 9, scope: !6853)
!6904 = !DILocalVariable(name: "coding_mode", scope: !6853, file: !904, line: 611, type: !890)
!6905 = !DILocation(line: 611, column: 9, scope: !6853)
!6906 = !DILocalVariable(name: "custom_mode_alphabet", scope: !6853, file: !904, line: 612, type: !1029)
!6907 = !DILocation(line: 612, column: 9, scope: !6853)
!6908 = !DILocalVariable(name: "alphabet", scope: !6853, file: !904, line: 613, type: !928)
!6909 = !DILocation(line: 613, column: 16, scope: !6853)
!6910 = !DILocalVariable(name: "frag", scope: !6853, file: !904, line: 614, type: !1816)
!6911 = !DILocation(line: 614, column: 18, scope: !6853)
!6912 = !DILocation(line: 616, column: 9, scope: !6868)
!6913 = !DILocation(line: 616, column: 12, scope: !6868)
!6914 = !DILocation(line: 616, column: 9, scope: !6853)
!6915 = !DILocation(line: 617, column: 16, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !904, line: 617, column: 9)
!6917 = distinct !DILexicalBlock(scope: !6868, file: !904, line: 616, column: 22)
!6918 = !DILocation(line: 617, column: 14, scope: !6916)
!6919 = !DILocation(line: 617, column: 21, scope: !6920)
!6920 = !DILexicalBlockFile(scope: !6921, file: !904, discriminator: 1)
!6921 = distinct !DILexicalBlock(scope: !6916, file: !904, line: 617, column: 9)
!6922 = !DILocation(line: 617, column: 25, scope: !6920)
!6923 = !DILocation(line: 617, column: 28, scope: !6920)
!6924 = !DILocation(line: 617, column: 23, scope: !6920)
!6925 = !DILocation(line: 617, column: 9, scope: !6920)
!6926 = !DILocation(line: 618, column: 30, scope: !6921)
!6927 = !DILocation(line: 618, column: 13, scope: !6921)
!6928 = !DILocation(line: 618, column: 16, scope: !6921)
!6929 = !DILocation(line: 618, column: 33, scope: !6921)
!6930 = !DILocation(line: 618, column: 47, scope: !6921)
!6931 = !DILocation(line: 617, column: 45, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6921, file: !904, discriminator: 2)
!6933 = !DILocation(line: 617, column: 9, scope: !6932)
!6934 = distinct !{!6934, !6935}
!6935 = !DILocation(line: 617, column: 9, scope: !6917)
!6936 = !DILocation(line: 619, column: 5, scope: !6917)
!6937 = !DILocation(line: 621, column: 27, scope: !6867)
!6938 = !DILocation(line: 621, column: 18, scope: !6867)
!6939 = !DILocation(line: 621, column: 16, scope: !6867)
!6940 = !DILocation(line: 624, column: 13, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6867, file: !904, line: 624, column: 13)
!6942 = !DILocation(line: 624, column: 20, scope: !6941)
!6943 = !DILocation(line: 624, column: 13, scope: !6867)
!6944 = !DILocation(line: 625, column: 20, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !904, line: 625, column: 13)
!6946 = distinct !DILexicalBlock(scope: !6941, file: !904, line: 624, column: 26)
!6947 = !DILocation(line: 625, column: 18, scope: !6945)
!6948 = !DILocation(line: 625, column: 25, scope: !6949)
!6949 = !DILexicalBlockFile(scope: !6950, file: !904, discriminator: 1)
!6950 = distinct !DILexicalBlock(scope: !6945, file: !904, line: 625, column: 13)
!6951 = !DILocation(line: 625, column: 27, scope: !6949)
!6952 = !DILocation(line: 625, column: 13, scope: !6949)
!6953 = !DILocation(line: 626, column: 38, scope: !6950)
!6954 = !DILocation(line: 626, column: 17, scope: !6950)
!6955 = !DILocation(line: 626, column: 41, scope: !6950)
!6956 = !DILocation(line: 625, column: 33, scope: !6957)
!6957 = !DILexicalBlockFile(scope: !6950, file: !904, discriminator: 2)
!6958 = !DILocation(line: 625, column: 13, scope: !6957)
!6959 = distinct !{!6959, !6960}
!6960 = !DILocation(line: 625, column: 13, scope: !6946)
!6961 = !DILocation(line: 627, column: 20, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6946, file: !904, line: 627, column: 13)
!6963 = !DILocation(line: 627, column: 18, scope: !6962)
!6964 = !DILocation(line: 627, column: 25, scope: !6965)
!6965 = !DILexicalBlockFile(scope: !6966, file: !904, discriminator: 1)
!6966 = distinct !DILexicalBlock(scope: !6962, file: !904, line: 627, column: 13)
!6967 = !DILocation(line: 627, column: 27, scope: !6965)
!6968 = !DILocation(line: 627, column: 13, scope: !6965)
!6969 = !DILocation(line: 628, column: 57, scope: !6966)
!6970 = !DILocation(line: 628, column: 47, scope: !6966)
!6971 = !DILocation(line: 628, column: 38, scope: !6966)
!6972 = !DILocation(line: 628, column: 17, scope: !6966)
!6973 = !DILocation(line: 628, column: 55, scope: !6966)
!6974 = !DILocation(line: 627, column: 33, scope: !6975)
!6975 = !DILexicalBlockFile(scope: !6966, file: !904, discriminator: 2)
!6976 = !DILocation(line: 627, column: 13, scope: !6975)
!6977 = distinct !{!6977, !6978}
!6978 = !DILocation(line: 627, column: 13, scope: !6946)
!6979 = !DILocation(line: 629, column: 24, scope: !6946)
!6980 = !DILocation(line: 629, column: 22, scope: !6946)
!6981 = !DILocation(line: 630, column: 9, scope: !6946)
!6982 = !DILocation(line: 631, column: 37, scope: !6941)
!6983 = !DILocation(line: 631, column: 44, scope: !6941)
!6984 = !DILocation(line: 631, column: 24, scope: !6941)
!6985 = !DILocation(line: 631, column: 22, scope: !6941)
!6986 = !DILocation(line: 635, column: 19, scope: !6866)
!6987 = !DILocation(line: 635, column: 14, scope: !6866)
!6988 = !DILocation(line: 635, column: 24, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !6865, file: !904, discriminator: 1)
!6990 = !DILocation(line: 635, column: 31, scope: !6989)
!6991 = !DILocation(line: 635, column: 34, scope: !6989)
!6992 = !DILocation(line: 635, column: 29, scope: !6989)
!6993 = !DILocation(line: 635, column: 9, scope: !6989)
!6994 = !DILocation(line: 636, column: 23, scope: !6863)
!6995 = !DILocation(line: 636, column: 18, scope: !6863)
!6996 = !DILocation(line: 636, column: 28, scope: !6997)
!6997 = !DILexicalBlockFile(scope: !6862, file: !904, discriminator: 1)
!6998 = !DILocation(line: 636, column: 35, scope: !6997)
!6999 = !DILocation(line: 636, column: 38, scope: !6997)
!7000 = !DILocation(line: 636, column: 33, scope: !6997)
!7001 = !DILocation(line: 636, column: 13, scope: !6997)
!7002 = !DILocation(line: 637, column: 35, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6861, file: !904, line: 637, column: 21)
!7004 = !DILocation(line: 637, column: 21, scope: !7003)
!7005 = !DILocation(line: 637, column: 39, scope: !7003)
!7006 = !DILocation(line: 637, column: 21, scope: !6861)
!7007 = !DILocation(line: 638, column: 21, scope: !7003)
!7008 = !DILocation(line: 640, column: 24, scope: !6860)
!7009 = !DILocation(line: 640, column: 22, scope: !6860)
!7010 = !DILocation(line: 640, column: 29, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !6859, file: !904, discriminator: 1)
!7012 = !DILocation(line: 640, column: 31, scope: !7011)
!7013 = !DILocation(line: 640, column: 17, scope: !7011)
!7014 = !DILocalVariable(name: "mb_x", scope: !6858, file: !904, line: 641, type: !890)
!7015 = !DILocation(line: 641, column: 25, scope: !6858)
!7016 = !DILocation(line: 641, column: 36, scope: !6858)
!7017 = !DILocation(line: 641, column: 34, scope: !6858)
!7018 = !DILocation(line: 641, column: 44, scope: !6858)
!7019 = !DILocation(line: 641, column: 46, scope: !6858)
!7020 = !DILocation(line: 641, column: 41, scope: !6858)
!7021 = !DILocalVariable(name: "mb_y", scope: !6858, file: !904, line: 642, type: !890)
!7022 = !DILocation(line: 642, column: 25, scope: !6858)
!7023 = !DILocation(line: 642, column: 36, scope: !6858)
!7024 = !DILocation(line: 642, column: 34, scope: !6858)
!7025 = !DILocation(line: 642, column: 46, scope: !6858)
!7026 = !DILocation(line: 642, column: 48, scope: !6858)
!7027 = !DILocation(line: 642, column: 56, scope: !6858)
!7028 = !DILocation(line: 642, column: 54, scope: !6858)
!7029 = !DILocation(line: 642, column: 59, scope: !6858)
!7030 = !DILocation(line: 642, column: 41, scope: !6858)
!7031 = !DILocation(line: 643, column: 42, scope: !6858)
!7032 = !DILocation(line: 643, column: 49, scope: !6858)
!7033 = !DILocation(line: 643, column: 52, scope: !6858)
!7034 = !DILocation(line: 643, column: 47, scope: !6858)
!7035 = !DILocation(line: 643, column: 71, scope: !6858)
!7036 = !DILocation(line: 643, column: 69, scope: !6858)
!7037 = !DILocation(line: 643, column: 40, scope: !6858)
!7038 = !DILocation(line: 645, column: 25, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !6858, file: !904, line: 645, column: 25)
!7040 = !DILocation(line: 645, column: 33, scope: !7039)
!7041 = !DILocation(line: 645, column: 36, scope: !7039)
!7042 = !DILocation(line: 645, column: 30, scope: !7039)
!7043 = !DILocation(line: 645, column: 53, scope: !7039)
!7044 = !DILocation(line: 646, column: 25, scope: !7039)
!7045 = !DILocation(line: 646, column: 33, scope: !7039)
!7046 = !DILocation(line: 646, column: 36, scope: !7039)
!7047 = !DILocation(line: 646, column: 30, scope: !7039)
!7048 = !DILocation(line: 645, column: 25, scope: !7049)
!7049 = !DILexicalBlockFile(scope: !6858, file: !904, discriminator: 1)
!7050 = !DILocation(line: 647, column: 25, scope: !7039)
!7051 = !DILocation(line: 654, column: 28, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !6858, file: !904, line: 654, column: 21)
!7053 = !DILocation(line: 654, column: 26, scope: !7052)
!7054 = !DILocation(line: 654, column: 33, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !7056, file: !904, discriminator: 1)
!7056 = distinct !DILexicalBlock(scope: !7052, file: !904, line: 654, column: 21)
!7057 = !DILocation(line: 654, column: 35, scope: !7055)
!7058 = !DILocation(line: 654, column: 21, scope: !7055)
!7059 = !DILocation(line: 655, column: 49, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7056, file: !904, line: 654, column: 45)
!7061 = !DILocation(line: 655, column: 47, scope: !7060)
!7062 = !DILocation(line: 655, column: 57, scope: !7060)
!7063 = !DILocation(line: 655, column: 59, scope: !7060)
!7064 = !DILocation(line: 655, column: 54, scope: !7060)
!7065 = !DILocation(line: 656, column: 44, scope: !7060)
!7066 = !DILocation(line: 656, column: 47, scope: !7060)
!7067 = !DILocation(line: 655, column: 66, scope: !7060)
!7068 = !DILocation(line: 656, column: 72, scope: !7060)
!7069 = !DILocation(line: 656, column: 70, scope: !7060)
!7070 = !DILocation(line: 656, column: 80, scope: !7060)
!7071 = !DILocation(line: 656, column: 82, scope: !7060)
!7072 = !DILocation(line: 656, column: 77, scope: !7060)
!7073 = !DILocation(line: 656, column: 65, scope: !7060)
!7074 = !DILocation(line: 655, column: 42, scope: !7060)
!7075 = !DILocation(line: 657, column: 46, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7060, file: !904, line: 657, column: 29)
!7077 = !DILocation(line: 657, column: 29, scope: !7076)
!7078 = !DILocation(line: 657, column: 32, scope: !7076)
!7079 = !DILocation(line: 657, column: 64, scope: !7076)
!7080 = !DILocation(line: 657, column: 78, scope: !7076)
!7081 = !DILocation(line: 657, column: 29, scope: !7060)
!7082 = !DILocation(line: 658, column: 29, scope: !7076)
!7083 = !DILocation(line: 659, column: 21, scope: !7060)
!7084 = !DILocation(line: 654, column: 41, scope: !7085)
!7085 = !DILexicalBlockFile(scope: !7056, file: !904, discriminator: 2)
!7086 = !DILocation(line: 654, column: 21, scope: !7085)
!7087 = distinct !{!7087, !7088}
!7088 = !DILocation(line: 654, column: 21, scope: !6858)
!7089 = !DILocation(line: 660, column: 25, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !6858, file: !904, line: 660, column: 25)
!7091 = !DILocation(line: 660, column: 27, scope: !7090)
!7092 = !DILocation(line: 660, column: 25, scope: !6858)
!7093 = !DILocation(line: 661, column: 46, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7090, file: !904, line: 660, column: 33)
!7095 = !DILocation(line: 661, column: 25, scope: !7094)
!7096 = !DILocation(line: 661, column: 28, scope: !7094)
!7097 = !DILocation(line: 661, column: 66, scope: !7094)
!7098 = !DILocation(line: 662, column: 25, scope: !7094)
!7099 = !DILocation(line: 666, column: 25, scope: !6857)
!7100 = !DILocation(line: 666, column: 32, scope: !6857)
!7101 = !DILocation(line: 666, column: 25, scope: !6858)
!7102 = !DILocation(line: 667, column: 48, scope: !6857)
!7103 = !DILocation(line: 667, column: 39, scope: !6857)
!7104 = !DILocation(line: 667, column: 37, scope: !6857)
!7105 = !DILocation(line: 667, column: 25, scope: !6857)
!7106 = !DILocation(line: 669, column: 57, scope: !6857)
!7107 = !DILocation(line: 669, column: 61, scope: !6857)
!7108 = !DILocation(line: 669, column: 64, scope: !6857)
!7109 = !DILocation(line: 669, column: 78, scope: !6857)
!7110 = !DILocation(line: 669, column: 48, scope: !6857)
!7111 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !6856)
!7112 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !6856)
!7113 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !6856)
!7114 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !6856)
!7115 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !6856)
!7116 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !6856)
!7117 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !6856)
!7118 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !6856)
!7119 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !6856)
!7120 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !6856)
!7121 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !6856)
!7122 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !6872)
!7123 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !6872)
!7124 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !6872)
!7125 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !6872)
!7126 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !6872)
!7127 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !6872)
!7128 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !6872)
!7129 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !6872)
!7130 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !6872)
!7131 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !6872)
!7132 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !6872)
!7133 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !6872)
!7134 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !6872)
!7135 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !6872)
!7136 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !6872)
!7137 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !6872)
!7138 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !6872)
!7139 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !6872)
!7140 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !6856)
!7141 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !6856)
!7142 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !6856)
!7143 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !6856)
!7144 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !6856)
!7145 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !6856)
!7146 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !6856)
!7147 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !6856)
!7148 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !6856)
!7149 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !6856)
!7150 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !6856)
!7151 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !6856)
!7152 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !6856)
!7153 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !6856)
!7154 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !6856)
!7155 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !6856)
!7156 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !6856)
!7157 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !6856)
!7158 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !6856)
!7159 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !6856)
!7160 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !6856)
!7161 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !6856)
!7162 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !6856)
!7163 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !6856)
!7164 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !6856)
!7165 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !6856)
!7166 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !6856)
!7167 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !6856)
!7168 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !6856)
!7169 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !6856)
!7170 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !6856)
!7171 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !6856)
!7172 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !6856)
!7173 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !6856)
!7174 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !6856)
!7175 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !6856)
!7176 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !6856)
!7177 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !6856)
!7178 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !6856)
!7179 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !6856)
!7180 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !6856)
!7181 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !6870)
!7182 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !6870)
!7183 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !6870)
!7184 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !6870)
!7185 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !6870)
!7186 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !6870)
!7187 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !6870)
!7188 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !6870)
!7189 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !6870)
!7190 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !6870)
!7191 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !6870)
!7192 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !6870)
!7193 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !6870)
!7194 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !6870)
!7195 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !6870)
!7196 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !6870)
!7197 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !6870)
!7198 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !6870)
!7199 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !6856)
!7200 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !6856)
!7201 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !6856)
!7202 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !6856)
!7203 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !6856)
!7204 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !6856)
!7205 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !6856)
!7206 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !6856)
!7207 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !6856)
!7208 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !6856)
!7209 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !6856)
!7210 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !6856)
!7211 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !6856)
!7212 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !6856)
!7213 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !6856)
!7214 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !6856)
!7215 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !6856)
!7216 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !6856)
!7217 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !6856)
!7218 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !6856)
!7219 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !6856)
!7220 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !6856)
!7221 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !6856)
!7222 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !6856)
!7223 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !6856)
!7224 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !6856)
!7225 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !6856)
!7226 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !6856)
!7227 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !6856)
!7228 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !6856)
!7229 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !6856)
!7230 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !6856)
!7231 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !6856)
!7232 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !6856)
!7233 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !6856)
!7234 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !6856)
!7235 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !6856)
!7236 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !6856)
!7237 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !6856)
!7238 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !6856)
!7239 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !6856)
!7240 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !6856)
!7241 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !6856)
!7242 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !6856)
!7243 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !6856)
!7244 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !6856)
!7245 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !6855)
!7246 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !6855)
!7247 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !6855)
!7248 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !6855)
!7249 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !6855)
!7250 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !6855)
!7251 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !6855)
!7252 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !6855)
!7253 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !6855)
!7254 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !6855)
!7255 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !6855)
!7256 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !6855)
!7257 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !6855)
!7258 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !6855)
!7259 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !6855)
!7260 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !6855)
!7261 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !6855)
!7262 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !6855)
!7263 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !6856)
!7264 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !6856)
!7265 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !6856)
!7266 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !6856)
!7267 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !6856)
!7268 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !6856)
!7269 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !6856)
!7270 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !6856)
!7271 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !6856)
!7272 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !6856)
!7273 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !6856)
!7274 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !6856)
!7275 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !6856)
!7276 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !6856)
!7277 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !6856)
!7278 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !6856)
!7279 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !6856)
!7280 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !6856)
!7281 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !6856)
!7282 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !6856)
!7283 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !6856)
!7284 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !6856)
!7285 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !6856)
!7286 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !6856)
!7287 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !6856)
!7288 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !6856)
!7289 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !6856)
!7290 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !6856)
!7291 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !6856)
!7292 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !6856)
!7293 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !6856)
!7294 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !6856)
!7295 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !6856)
!7296 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !6856)
!7297 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !6856)
!7298 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !6856)
!7299 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !6856)
!7300 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !6856)
!7301 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !6856)
!7302 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !6856)
!7303 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !6856)
!7304 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !6856)
!7305 = !DILocation(line: 669, column: 39, scope: !6857)
!7306 = !DILocation(line: 669, column: 37, scope: !6857)
!7307 = !DILocation(line: 671, column: 64, scope: !6858)
!7308 = !DILocation(line: 671, column: 42, scope: !6858)
!7309 = !DILocation(line: 671, column: 21, scope: !6858)
!7310 = !DILocation(line: 671, column: 24, scope: !6858)
!7311 = !DILocation(line: 671, column: 62, scope: !6858)
!7312 = !DILocation(line: 672, column: 28, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !6858, file: !904, line: 672, column: 21)
!7314 = !DILocation(line: 672, column: 26, scope: !7313)
!7315 = !DILocation(line: 672, column: 33, scope: !7316)
!7316 = !DILexicalBlockFile(scope: !7317, file: !904, discriminator: 1)
!7317 = distinct !DILexicalBlock(scope: !7313, file: !904, line: 672, column: 21)
!7318 = !DILocation(line: 672, column: 35, scope: !7316)
!7319 = !DILocation(line: 672, column: 21, scope: !7316)
!7320 = !DILocation(line: 673, column: 32, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7317, file: !904, line: 672, column: 45)
!7322 = !DILocation(line: 673, column: 35, scope: !7321)
!7323 = !DILocation(line: 673, column: 56, scope: !7321)
!7324 = !DILocation(line: 673, column: 54, scope: !7321)
!7325 = !DILocation(line: 673, column: 64, scope: !7321)
!7326 = !DILocation(line: 673, column: 66, scope: !7321)
!7327 = !DILocation(line: 673, column: 61, scope: !7321)
!7328 = !DILocation(line: 673, column: 75, scope: !7321)
!7329 = !DILocation(line: 673, column: 78, scope: !7321)
!7330 = !DILocation(line: 673, column: 73, scope: !7321)
!7331 = !DILocation(line: 673, column: 49, scope: !7321)
!7332 = !DILocation(line: 673, column: 103, scope: !7321)
!7333 = !DILocation(line: 673, column: 101, scope: !7321)
!7334 = !DILocation(line: 673, column: 111, scope: !7321)
!7335 = !DILocation(line: 673, column: 113, scope: !7321)
!7336 = !DILocation(line: 673, column: 108, scope: !7321)
!7337 = !DILocation(line: 673, column: 96, scope: !7321)
!7338 = !DILocation(line: 673, column: 30, scope: !7321)
!7339 = !DILocation(line: 674, column: 29, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7321, file: !904, line: 674, column: 29)
!7341 = !DILocation(line: 674, column: 35, scope: !7340)
!7342 = !DILocation(line: 674, column: 49, scope: !7340)
!7343 = !DILocation(line: 674, column: 29, scope: !7321)
!7344 = !DILocation(line: 675, column: 51, scope: !7340)
!7345 = !DILocation(line: 675, column: 29, scope: !7340)
!7346 = !DILocation(line: 675, column: 35, scope: !7340)
!7347 = !DILocation(line: 675, column: 49, scope: !7340)
!7348 = !DILocation(line: 676, column: 21, scope: !7321)
!7349 = !DILocation(line: 672, column: 41, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !7317, file: !904, discriminator: 2)
!7351 = !DILocation(line: 672, column: 21, scope: !7350)
!7352 = distinct !{!7352, !7353}
!7353 = !DILocation(line: 672, column: 21, scope: !6858)
!7354 = !DILocation(line: 684, column: 25, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !6858, file: !904, line: 684, column: 25)
!7356 = !DILocation(line: 684, column: 28, scope: !7355)
!7357 = !DILocation(line: 684, column: 25, scope: !6858)
!7358 = !DILocation(line: 685, column: 32, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7355, file: !904, line: 684, column: 44)
!7360 = !DILocation(line: 685, column: 35, scope: !7359)
!7361 = !DILocation(line: 685, column: 51, scope: !7359)
!7362 = !DILocation(line: 686, column: 32, scope: !7359)
!7363 = !DILocation(line: 686, column: 35, scope: !7359)
!7364 = !DILocation(line: 685, column: 56, scope: !7359)
!7365 = !DILocation(line: 685, column: 49, scope: !7359)
!7366 = !DILocation(line: 686, column: 55, scope: !7359)
!7367 = !DILocation(line: 686, column: 53, scope: !7359)
!7368 = !DILocation(line: 685, column: 30, scope: !7359)
!7369 = !DILocation(line: 687, column: 34, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7359, file: !904, line: 687, column: 29)
!7371 = !DILocation(line: 687, column: 37, scope: !7370)
!7372 = !DILocation(line: 687, column: 29, scope: !7370)
!7373 = !DILocation(line: 687, column: 56, scope: !7370)
!7374 = !DILocation(line: 687, column: 70, scope: !7370)
!7375 = !DILocation(line: 687, column: 29, scope: !7359)
!7376 = !DILocation(line: 687, column: 119, scope: !7377)
!7377 = !DILexicalBlockFile(scope: !7370, file: !904, discriminator: 1)
!7378 = !DILocation(line: 687, column: 81, scope: !7377)
!7379 = !DILocation(line: 687, column: 84, scope: !7377)
!7380 = !DILocation(line: 687, column: 76, scope: !7377)
!7381 = !DILocation(line: 687, column: 103, scope: !7377)
!7382 = !DILocation(line: 687, column: 117, scope: !7377)
!7383 = !DILocation(line: 687, column: 141, scope: !7384)
!7384 = !DILexicalBlockFile(scope: !7385, file: !904, discriminator: 2)
!7385 = distinct !DILexicalBlock(scope: !7359, file: !904, line: 687, column: 136)
!7386 = !DILocation(line: 687, column: 144, scope: !7384)
!7387 = !DILocation(line: 687, column: 136, scope: !7384)
!7388 = !DILocation(line: 687, column: 163, scope: !7384)
!7389 = !DILocation(line: 687, column: 177, scope: !7384)
!7390 = !DILocation(line: 687, column: 226, scope: !7391)
!7391 = !DILexicalBlockFile(scope: !7385, file: !904, discriminator: 3)
!7392 = !DILocation(line: 687, column: 188, scope: !7391)
!7393 = !DILocation(line: 687, column: 191, scope: !7391)
!7394 = !DILocation(line: 687, column: 183, scope: !7391)
!7395 = !DILocation(line: 687, column: 210, scope: !7391)
!7396 = !DILocation(line: 687, column: 224, scope: !7391)
!7397 = !DILocation(line: 688, column: 21, scope: !7359)
!7398 = !DILocation(line: 688, column: 32, scope: !7399)
!7399 = !DILexicalBlockFile(scope: !7400, file: !904, discriminator: 1)
!7400 = distinct !DILexicalBlock(scope: !7355, file: !904, line: 688, column: 32)
!7401 = !DILocation(line: 688, column: 35, scope: !7399)
!7402 = !DILocation(line: 689, column: 32, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7400, file: !904, line: 688, column: 51)
!7404 = !DILocation(line: 689, column: 35, scope: !7403)
!7405 = !DILocation(line: 690, column: 36, scope: !7403)
!7406 = !DILocation(line: 690, column: 34, scope: !7403)
!7407 = !DILocation(line: 690, column: 43, scope: !7403)
!7408 = !DILocation(line: 690, column: 46, scope: !7403)
!7409 = !DILocation(line: 690, column: 41, scope: !7403)
!7410 = !DILocation(line: 689, column: 49, scope: !7403)
!7411 = !DILocation(line: 690, column: 66, scope: !7403)
!7412 = !DILocation(line: 690, column: 64, scope: !7403)
!7413 = !DILocation(line: 689, column: 30, scope: !7403)
!7414 = !DILocation(line: 691, column: 32, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7403, file: !904, line: 691, column: 25)
!7416 = !DILocation(line: 691, column: 30, scope: !7415)
!7417 = !DILocation(line: 691, column: 37, scope: !7418)
!7418 = !DILexicalBlockFile(scope: !7419, file: !904, discriminator: 1)
!7419 = distinct !DILexicalBlock(scope: !7415, file: !904, line: 691, column: 25)
!7420 = !DILocation(line: 691, column: 39, scope: !7418)
!7421 = !DILocation(line: 691, column: 25, scope: !7418)
!7422 = !DILocation(line: 692, column: 38, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7424, file: !904, line: 692, column: 33)
!7424 = distinct !DILexicalBlock(scope: !7419, file: !904, line: 691, column: 49)
!7425 = !DILocation(line: 692, column: 41, scope: !7423)
!7426 = !DILocation(line: 692, column: 33, scope: !7423)
!7427 = !DILocation(line: 692, column: 60, scope: !7423)
!7428 = !DILocation(line: 692, column: 74, scope: !7423)
!7429 = !DILocation(line: 692, column: 33, scope: !7424)
!7430 = !DILocation(line: 692, column: 123, scope: !7431)
!7431 = !DILexicalBlockFile(scope: !7423, file: !904, discriminator: 1)
!7432 = !DILocation(line: 692, column: 85, scope: !7431)
!7433 = !DILocation(line: 692, column: 88, scope: !7431)
!7434 = !DILocation(line: 692, column: 80, scope: !7431)
!7435 = !DILocation(line: 692, column: 107, scope: !7431)
!7436 = !DILocation(line: 692, column: 121, scope: !7431)
!7437 = !DILocation(line: 692, column: 145, scope: !7438)
!7438 = !DILexicalBlockFile(scope: !7439, file: !904, discriminator: 2)
!7439 = distinct !DILexicalBlock(scope: !7424, file: !904, line: 692, column: 140)
!7440 = !DILocation(line: 692, column: 148, scope: !7438)
!7441 = !DILocation(line: 692, column: 140, scope: !7438)
!7442 = !DILocation(line: 692, column: 167, scope: !7438)
!7443 = !DILocation(line: 692, column: 181, scope: !7438)
!7444 = !DILocation(line: 692, column: 230, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !7439, file: !904, discriminator: 3)
!7446 = !DILocation(line: 692, column: 192, scope: !7445)
!7447 = !DILocation(line: 692, column: 195, scope: !7445)
!7448 = !DILocation(line: 692, column: 187, scope: !7445)
!7449 = !DILocation(line: 692, column: 214, scope: !7445)
!7450 = !DILocation(line: 692, column: 228, scope: !7445)
!7451 = !DILocation(line: 693, column: 37, scope: !7424)
!7452 = !DILocation(line: 693, column: 40, scope: !7424)
!7453 = !DILocation(line: 693, column: 34, scope: !7424)
!7454 = !DILocation(line: 694, column: 25, scope: !7424)
!7455 = !DILocation(line: 691, column: 45, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7419, file: !904, discriminator: 2)
!7457 = !DILocation(line: 691, column: 25, scope: !7456)
!7458 = distinct !{!7458, !7459}
!7459 = !DILocation(line: 691, column: 25, scope: !7403)
!7460 = !DILocation(line: 695, column: 21, scope: !7403)
!7461 = !DILocation(line: 696, column: 32, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !904, line: 696, column: 25)
!7463 = distinct !DILexicalBlock(scope: !7400, file: !904, line: 695, column: 28)
!7464 = !DILocation(line: 696, column: 30, scope: !7462)
!7465 = !DILocation(line: 696, column: 37, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !7467, file: !904, discriminator: 1)
!7467 = distinct !DILexicalBlock(scope: !7462, file: !904, line: 696, column: 25)
!7468 = !DILocation(line: 696, column: 39, scope: !7466)
!7469 = !DILocation(line: 696, column: 25, scope: !7466)
!7470 = !DILocation(line: 697, column: 36, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7467, file: !904, line: 696, column: 49)
!7472 = !DILocation(line: 697, column: 39, scope: !7471)
!7473 = !DILocation(line: 698, column: 41, scope: !7471)
!7474 = !DILocation(line: 698, column: 39, scope: !7471)
!7475 = !DILocation(line: 698, column: 49, scope: !7471)
!7476 = !DILocation(line: 698, column: 51, scope: !7471)
!7477 = !DILocation(line: 698, column: 46, scope: !7471)
!7478 = !DILocation(line: 698, column: 60, scope: !7471)
!7479 = !DILocation(line: 698, column: 63, scope: !7471)
!7480 = !DILocation(line: 698, column: 58, scope: !7471)
!7481 = !DILocation(line: 697, column: 53, scope: !7471)
!7482 = !DILocation(line: 698, column: 88, scope: !7471)
!7483 = !DILocation(line: 698, column: 86, scope: !7471)
!7484 = !DILocation(line: 698, column: 96, scope: !7471)
!7485 = !DILocation(line: 698, column: 98, scope: !7471)
!7486 = !DILocation(line: 698, column: 93, scope: !7471)
!7487 = !DILocation(line: 698, column: 81, scope: !7471)
!7488 = !DILocation(line: 697, column: 34, scope: !7471)
!7489 = !DILocation(line: 699, column: 38, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7471, file: !904, line: 699, column: 33)
!7491 = !DILocation(line: 699, column: 41, scope: !7490)
!7492 = !DILocation(line: 699, column: 33, scope: !7490)
!7493 = !DILocation(line: 699, column: 60, scope: !7490)
!7494 = !DILocation(line: 699, column: 74, scope: !7490)
!7495 = !DILocation(line: 699, column: 33, scope: !7471)
!7496 = !DILocation(line: 699, column: 123, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7490, file: !904, discriminator: 1)
!7498 = !DILocation(line: 699, column: 85, scope: !7497)
!7499 = !DILocation(line: 699, column: 88, scope: !7497)
!7500 = !DILocation(line: 699, column: 80, scope: !7497)
!7501 = !DILocation(line: 699, column: 107, scope: !7497)
!7502 = !DILocation(line: 699, column: 121, scope: !7497)
!7503 = !DILocation(line: 699, column: 145, scope: !7504)
!7504 = !DILexicalBlockFile(scope: !7505, file: !904, discriminator: 2)
!7505 = distinct !DILexicalBlock(scope: !7471, file: !904, line: 699, column: 140)
!7506 = !DILocation(line: 699, column: 148, scope: !7504)
!7507 = !DILocation(line: 699, column: 140, scope: !7504)
!7508 = !DILocation(line: 699, column: 167, scope: !7504)
!7509 = !DILocation(line: 699, column: 181, scope: !7504)
!7510 = !DILocation(line: 699, column: 230, scope: !7511)
!7511 = !DILexicalBlockFile(scope: !7505, file: !904, discriminator: 3)
!7512 = !DILocation(line: 699, column: 192, scope: !7511)
!7513 = !DILocation(line: 699, column: 195, scope: !7511)
!7514 = !DILocation(line: 699, column: 187, scope: !7511)
!7515 = !DILocation(line: 699, column: 214, scope: !7511)
!7516 = !DILocation(line: 699, column: 228, scope: !7511)
!7517 = !DILocation(line: 700, column: 25, scope: !7471)
!7518 = !DILocation(line: 696, column: 45, scope: !7519)
!7519 = !DILexicalBlockFile(scope: !7467, file: !904, discriminator: 2)
!7520 = !DILocation(line: 696, column: 25, scope: !7519)
!7521 = distinct !{!7521, !7522}
!7522 = !DILocation(line: 696, column: 25, scope: !7463)
!7523 = !DILocation(line: 702, column: 17, scope: !6858)
!7524 = !DILocation(line: 640, column: 37, scope: !7525)
!7525 = !DILexicalBlockFile(scope: !6859, file: !904, discriminator: 2)
!7526 = !DILocation(line: 640, column: 17, scope: !7525)
!7527 = distinct !{!7527, !7528}
!7528 = !DILocation(line: 640, column: 17, scope: !6861)
!7529 = !DILocation(line: 703, column: 13, scope: !6861)
!7530 = !DILocation(line: 636, column: 62, scope: !7531)
!7531 = !DILexicalBlockFile(scope: !6862, file: !904, discriminator: 2)
!7532 = !DILocation(line: 636, column: 13, scope: !7531)
!7533 = distinct !{!7533, !7534}
!7534 = !DILocation(line: 636, column: 13, scope: !6864)
!7535 = !DILocation(line: 704, column: 9, scope: !6864)
!7536 = !DILocation(line: 635, column: 59, scope: !7537)
!7537 = !DILexicalBlockFile(scope: !6865, file: !904, discriminator: 2)
!7538 = !DILocation(line: 635, column: 9, scope: !7537)
!7539 = distinct !{!7539, !7540}
!7540 = !DILocation(line: 635, column: 9, scope: !6867)
!7541 = !DILocation(line: 707, column: 5, scope: !6853)
!7542 = !DILocation(line: 708, column: 1, scope: !6853)
!7543 = distinct !DISubprogram(name: "unpack_vectors", scope: !904, file: !904, line: 714, type: !5653, isLocal: true, isDefinition: true, scopeLine: 715, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!7544 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7545)
!7545 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7546)
!7546 = distinct !DILocation(line: 784, column: 67, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !904, line: 782, column: 51)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !904, line: 782, column: 33)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !904, line: 781, column: 84)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !904, line: 781, column: 29)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !904, line: 779, column: 45)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !904, line: 779, column: 21)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !904, line: 779, column: 21)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !904, line: 751, column: 67)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !904, line: 741, column: 37)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !904, line: 741, column: 13)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !904, line: 741, column: 13)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !904, line: 737, column: 62)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !904, line: 737, column: 9)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !904, line: 737, column: 9)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !904, line: 736, column: 59)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !904, line: 736, column: 5)
!7563 = distinct !DILexicalBlock(scope: !7543, file: !904, line: 736, column: 5)
!7564 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7565)
!7565 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7546)
!7566 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7567)
!7567 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7546)
!7568 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !7546)
!7569 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !7546)
!7570 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !7546)
!7571 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !7546)
!7572 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !7546)
!7573 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !7546)
!7574 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !7546)
!7575 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !7546)
!7576 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !7546)
!7577 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !7546)
!7578 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !7546)
!7579 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7580)
!7580 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7581)
!7581 = distinct !DILocation(line: 783, column: 67, scope: !7547)
!7582 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7583)
!7583 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7581)
!7584 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7585)
!7585 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7581)
!7586 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !7581)
!7587 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !7581)
!7588 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !7581)
!7589 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !7581)
!7590 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !7581)
!7591 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !7581)
!7592 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !7581)
!7593 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !7581)
!7594 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !7581)
!7595 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !7581)
!7596 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !7581)
!7597 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7598)
!7598 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7599)
!7599 = distinct !DILocation(line: 757, column: 59, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !904, line: 755, column: 43)
!7601 = distinct !DILexicalBlock(scope: !7554, file: !904, line: 755, column: 25)
!7602 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7603)
!7603 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7599)
!7604 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7605)
!7605 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7599)
!7606 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !7599)
!7607 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !7599)
!7608 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !7599)
!7609 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !7599)
!7610 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !7599)
!7611 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !7599)
!7612 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !7599)
!7613 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !7599)
!7614 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !7599)
!7615 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !7599)
!7616 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !7599)
!7617 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7618)
!7618 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7619)
!7619 = distinct !DILocation(line: 756, column: 59, scope: !7600)
!7620 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7621)
!7621 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7619)
!7622 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !7623)
!7623 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7619)
!7624 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !7619)
!7625 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !7619)
!7626 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !7619)
!7627 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !7619)
!7628 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !7619)
!7629 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !7619)
!7630 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !7619)
!7631 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !7619)
!7632 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !7619)
!7633 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !7619)
!7634 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !7619)
!7635 = !DILocalVariable(name: "s", arg: 1, scope: !7543, file: !904, line: 714, type: !1707)
!7636 = !DILocation(line: 714, column: 45, scope: !7543)
!7637 = !DILocalVariable(name: "gb", arg: 2, scope: !7543, file: !904, line: 714, type: !4245)
!7638 = !DILocation(line: 714, column: 63, scope: !7543)
!7639 = !DILocalVariable(name: "j", scope: !7543, file: !904, line: 716, type: !890)
!7640 = !DILocation(line: 716, column: 9, scope: !7543)
!7641 = !DILocalVariable(name: "k", scope: !7543, file: !904, line: 716, type: !890)
!7642 = !DILocation(line: 716, column: 12, scope: !7543)
!7643 = !DILocalVariable(name: "sb_x", scope: !7543, file: !904, line: 716, type: !890)
!7644 = !DILocation(line: 716, column: 15, scope: !7543)
!7645 = !DILocalVariable(name: "sb_y", scope: !7543, file: !904, line: 716, type: !890)
!7646 = !DILocation(line: 716, column: 21, scope: !7543)
!7647 = !DILocalVariable(name: "coding_mode", scope: !7543, file: !904, line: 717, type: !890)
!7648 = !DILocation(line: 717, column: 9, scope: !7543)
!7649 = !DILocalVariable(name: "motion_x", scope: !7543, file: !904, line: 718, type: !1136)
!7650 = !DILocation(line: 718, column: 9, scope: !7543)
!7651 = !DILocalVariable(name: "motion_y", scope: !7543, file: !904, line: 719, type: !1136)
!7652 = !DILocation(line: 719, column: 9, scope: !7543)
!7653 = !DILocalVariable(name: "last_motion_x", scope: !7543, file: !904, line: 720, type: !890)
!7654 = !DILocation(line: 720, column: 9, scope: !7543)
!7655 = !DILocalVariable(name: "last_motion_y", scope: !7543, file: !904, line: 721, type: !890)
!7656 = !DILocation(line: 721, column: 9, scope: !7543)
!7657 = !DILocalVariable(name: "prior_last_motion_x", scope: !7543, file: !904, line: 722, type: !890)
!7658 = !DILocation(line: 722, column: 9, scope: !7543)
!7659 = !DILocalVariable(name: "prior_last_motion_y", scope: !7543, file: !904, line: 723, type: !890)
!7660 = !DILocation(line: 723, column: 9, scope: !7543)
!7661 = !DILocalVariable(name: "current_macroblock", scope: !7543, file: !904, line: 724, type: !890)
!7662 = !DILocation(line: 724, column: 9, scope: !7543)
!7663 = !DILocalVariable(name: "current_fragment", scope: !7543, file: !904, line: 725, type: !890)
!7664 = !DILocation(line: 725, column: 9, scope: !7543)
!7665 = !DILocalVariable(name: "frag", scope: !7543, file: !904, line: 726, type: !890)
!7666 = !DILocation(line: 726, column: 9, scope: !7543)
!7667 = !DILocation(line: 728, column: 9, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7543, file: !904, line: 728, column: 9)
!7669 = !DILocation(line: 728, column: 12, scope: !7668)
!7670 = !DILocation(line: 728, column: 9, scope: !7543)
!7671 = !DILocation(line: 729, column: 9, scope: !7668)
!7672 = !DILocation(line: 732, column: 29, scope: !7543)
!7673 = !DILocation(line: 732, column: 19, scope: !7543)
!7674 = !DILocation(line: 732, column: 17, scope: !7543)
!7675 = !DILocation(line: 736, column: 15, scope: !7563)
!7676 = !DILocation(line: 736, column: 10, scope: !7563)
!7677 = !DILocation(line: 736, column: 20, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !7562, file: !904, discriminator: 1)
!7679 = !DILocation(line: 736, column: 27, scope: !7678)
!7680 = !DILocation(line: 736, column: 30, scope: !7678)
!7681 = !DILocation(line: 736, column: 25, scope: !7678)
!7682 = !DILocation(line: 736, column: 5, scope: !7678)
!7683 = !DILocation(line: 737, column: 19, scope: !7560)
!7684 = !DILocation(line: 737, column: 14, scope: !7560)
!7685 = !DILocation(line: 737, column: 24, scope: !7686)
!7686 = !DILexicalBlockFile(scope: !7559, file: !904, discriminator: 1)
!7687 = !DILocation(line: 737, column: 31, scope: !7686)
!7688 = !DILocation(line: 737, column: 34, scope: !7686)
!7689 = !DILocation(line: 737, column: 29, scope: !7686)
!7690 = !DILocation(line: 737, column: 9, scope: !7686)
!7691 = !DILocation(line: 738, column: 31, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7558, file: !904, line: 738, column: 17)
!7693 = !DILocation(line: 738, column: 17, scope: !7692)
!7694 = !DILocation(line: 738, column: 35, scope: !7692)
!7695 = !DILocation(line: 738, column: 17, scope: !7558)
!7696 = !DILocation(line: 739, column: 17, scope: !7692)
!7697 = !DILocation(line: 741, column: 20, scope: !7557)
!7698 = !DILocation(line: 741, column: 18, scope: !7557)
!7699 = !DILocation(line: 741, column: 25, scope: !7700)
!7700 = !DILexicalBlockFile(scope: !7556, file: !904, discriminator: 1)
!7701 = !DILocation(line: 741, column: 27, scope: !7700)
!7702 = !DILocation(line: 741, column: 13, scope: !7700)
!7703 = !DILocalVariable(name: "mb_x", scope: !7555, file: !904, line: 742, type: !890)
!7704 = !DILocation(line: 742, column: 21, scope: !7555)
!7705 = !DILocation(line: 742, column: 32, scope: !7555)
!7706 = !DILocation(line: 742, column: 30, scope: !7555)
!7707 = !DILocation(line: 742, column: 40, scope: !7555)
!7708 = !DILocation(line: 742, column: 42, scope: !7555)
!7709 = !DILocation(line: 742, column: 37, scope: !7555)
!7710 = !DILocalVariable(name: "mb_y", scope: !7555, file: !904, line: 743, type: !890)
!7711 = !DILocation(line: 743, column: 21, scope: !7555)
!7712 = !DILocation(line: 743, column: 32, scope: !7555)
!7713 = !DILocation(line: 743, column: 30, scope: !7555)
!7714 = !DILocation(line: 743, column: 42, scope: !7555)
!7715 = !DILocation(line: 743, column: 44, scope: !7555)
!7716 = !DILocation(line: 743, column: 52, scope: !7555)
!7717 = !DILocation(line: 743, column: 50, scope: !7555)
!7718 = !DILocation(line: 743, column: 55, scope: !7555)
!7719 = !DILocation(line: 743, column: 37, scope: !7555)
!7720 = !DILocation(line: 744, column: 38, scope: !7555)
!7721 = !DILocation(line: 744, column: 45, scope: !7555)
!7722 = !DILocation(line: 744, column: 48, scope: !7555)
!7723 = !DILocation(line: 744, column: 43, scope: !7555)
!7724 = !DILocation(line: 744, column: 67, scope: !7555)
!7725 = !DILocation(line: 744, column: 65, scope: !7555)
!7726 = !DILocation(line: 744, column: 36, scope: !7555)
!7727 = !DILocation(line: 746, column: 21, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7555, file: !904, line: 746, column: 21)
!7729 = !DILocation(line: 746, column: 29, scope: !7728)
!7730 = !DILocation(line: 746, column: 32, scope: !7728)
!7731 = !DILocation(line: 746, column: 26, scope: !7728)
!7732 = !DILocation(line: 746, column: 49, scope: !7728)
!7733 = !DILocation(line: 747, column: 21, scope: !7728)
!7734 = !DILocation(line: 747, column: 29, scope: !7728)
!7735 = !DILocation(line: 747, column: 32, scope: !7728)
!7736 = !DILocation(line: 747, column: 26, scope: !7728)
!7737 = !DILocation(line: 747, column: 50, scope: !7728)
!7738 = !DILocation(line: 748, column: 42, scope: !7728)
!7739 = !DILocation(line: 748, column: 21, scope: !7728)
!7740 = !DILocation(line: 748, column: 24, scope: !7728)
!7741 = !DILocation(line: 748, column: 62, scope: !7728)
!7742 = !DILocation(line: 746, column: 21, scope: !7743)
!7743 = !DILexicalBlockFile(scope: !7555, file: !904, discriminator: 1)
!7744 = !DILocation(line: 749, column: 21, scope: !7728)
!7745 = !DILocation(line: 751, column: 46, scope: !7555)
!7746 = !DILocation(line: 751, column: 25, scope: !7555)
!7747 = !DILocation(line: 751, column: 28, scope: !7555)
!7748 = !DILocation(line: 751, column: 17, scope: !7555)
!7749 = !DILocation(line: 755, column: 25, scope: !7601)
!7750 = !DILocation(line: 755, column: 37, scope: !7601)
!7751 = !DILocation(line: 755, column: 25, scope: !7554)
!7752 = !DILocation(line: 756, column: 68, scope: !7600)
!7753 = !DILocation(line: 756, column: 72, scope: !7600)
!7754 = !DILocation(line: 756, column: 75, scope: !7600)
!7755 = !DILocation(line: 756, column: 93, scope: !7600)
!7756 = !DILocation(line: 756, column: 59, scope: !7600)
!7757 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !7619)
!7758 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !7619)
!7759 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !7619)
!7760 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !7619)
!7761 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !7619)
!7762 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !7619)
!7763 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !7619)
!7764 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !7619)
!7765 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !7619)
!7766 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !7619)
!7767 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7619)
!7768 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7623)
!7769 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7623)
!7770 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7623)
!7771 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7623)
!7772 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7623)
!7773 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7623)
!7774 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7623)
!7775 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7623)
!7776 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7623)
!7777 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7623)
!7778 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7623)
!7779 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7623)
!7780 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7623)
!7781 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7623)
!7782 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7623)
!7783 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7623)
!7784 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7623)
!7785 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7623)
!7786 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !7619)
!7787 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !7619)
!7788 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !7619)
!7789 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !7619)
!7790 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !7619)
!7791 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !7619)
!7792 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !7619)
!7793 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !7619)
!7794 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !7619)
!7795 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !7619)
!7796 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !7619)
!7797 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !7619)
!7798 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !7619)
!7799 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !7619)
!7800 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !7619)
!7801 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !7619)
!7802 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !7619)
!7803 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !7619)
!7804 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !7619)
!7805 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !7619)
!7806 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !7619)
!7807 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !7619)
!7808 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !7619)
!7809 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !7619)
!7810 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !7619)
!7811 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !7619)
!7812 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !7619)
!7813 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !7619)
!7814 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !7619)
!7815 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !7619)
!7816 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !7619)
!7817 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !7619)
!7818 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !7619)
!7819 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !7619)
!7820 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !7619)
!7821 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !7619)
!7822 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !7619)
!7823 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !7619)
!7824 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !7619)
!7825 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !7619)
!7826 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7619)
!7827 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7621)
!7828 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7621)
!7829 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7621)
!7830 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7621)
!7831 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7621)
!7832 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7621)
!7833 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7621)
!7834 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7621)
!7835 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7621)
!7836 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7621)
!7837 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7621)
!7838 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7621)
!7839 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7621)
!7840 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7621)
!7841 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7621)
!7842 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7621)
!7843 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7621)
!7844 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7621)
!7845 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !7619)
!7846 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !7619)
!7847 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !7619)
!7848 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !7619)
!7849 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !7619)
!7850 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !7619)
!7851 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !7619)
!7852 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !7619)
!7853 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !7619)
!7854 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !7619)
!7855 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !7619)
!7856 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !7619)
!7857 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !7619)
!7858 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !7619)
!7859 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !7619)
!7860 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !7619)
!7861 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !7619)
!7862 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !7619)
!7863 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !7619)
!7864 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !7619)
!7865 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !7619)
!7866 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !7619)
!7867 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !7619)
!7868 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !7619)
!7869 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !7619)
!7870 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !7619)
!7871 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !7619)
!7872 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !7619)
!7873 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !7619)
!7874 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !7619)
!7875 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !7619)
!7876 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !7619)
!7877 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !7619)
!7878 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !7619)
!7879 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !7619)
!7880 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !7619)
!7881 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !7619)
!7882 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !7619)
!7883 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !7619)
!7884 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !7619)
!7885 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !7619)
!7886 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !7619)
!7887 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !7619)
!7888 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !7619)
!7889 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !7619)
!7890 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7619)
!7891 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7618)
!7892 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7618)
!7893 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7618)
!7894 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7618)
!7895 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7618)
!7896 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7618)
!7897 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7618)
!7898 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7618)
!7899 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7618)
!7900 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7618)
!7901 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7618)
!7902 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7618)
!7903 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7618)
!7904 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7618)
!7905 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7618)
!7906 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7618)
!7907 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7618)
!7908 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7618)
!7909 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !7619)
!7910 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !7619)
!7911 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !7619)
!7912 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !7619)
!7913 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !7619)
!7914 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !7619)
!7915 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !7619)
!7916 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !7619)
!7917 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !7619)
!7918 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !7619)
!7919 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !7619)
!7920 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !7619)
!7921 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !7619)
!7922 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !7619)
!7923 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !7619)
!7924 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !7619)
!7925 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !7619)
!7926 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !7619)
!7927 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !7619)
!7928 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !7619)
!7929 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !7619)
!7930 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !7619)
!7931 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !7619)
!7932 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !7619)
!7933 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !7619)
!7934 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !7619)
!7935 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !7619)
!7936 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !7619)
!7937 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !7619)
!7938 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !7619)
!7939 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !7619)
!7940 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !7619)
!7941 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !7619)
!7942 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !7619)
!7943 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !7619)
!7944 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !7619)
!7945 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !7619)
!7946 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !7619)
!7947 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !7619)
!7948 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !7619)
!7949 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !7619)
!7950 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !7619)
!7951 = !DILocation(line: 756, column: 39, scope: !7600)
!7952 = !DILocation(line: 756, column: 25, scope: !7600)
!7953 = !DILocation(line: 756, column: 37, scope: !7600)
!7954 = !DILocation(line: 757, column: 68, scope: !7600)
!7955 = !DILocation(line: 757, column: 72, scope: !7600)
!7956 = !DILocation(line: 757, column: 75, scope: !7600)
!7957 = !DILocation(line: 757, column: 93, scope: !7600)
!7958 = !DILocation(line: 757, column: 59, scope: !7600)
!7959 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !7599)
!7960 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !7599)
!7961 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !7599)
!7962 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !7599)
!7963 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !7599)
!7964 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !7599)
!7965 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !7599)
!7966 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !7599)
!7967 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !7599)
!7968 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !7599)
!7969 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7599)
!7970 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7605)
!7971 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7605)
!7972 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7605)
!7973 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7605)
!7974 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7605)
!7975 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7605)
!7976 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7605)
!7977 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7605)
!7978 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7605)
!7979 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7605)
!7980 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7605)
!7981 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7605)
!7982 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7605)
!7983 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7605)
!7984 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7605)
!7985 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7605)
!7986 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7605)
!7987 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7605)
!7988 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !7599)
!7989 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !7599)
!7990 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !7599)
!7991 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !7599)
!7992 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !7599)
!7993 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !7599)
!7994 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !7599)
!7995 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !7599)
!7996 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !7599)
!7997 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !7599)
!7998 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !7599)
!7999 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !7599)
!8000 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !7599)
!8001 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !7599)
!8002 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !7599)
!8003 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !7599)
!8004 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !7599)
!8005 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !7599)
!8006 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !7599)
!8007 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !7599)
!8008 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !7599)
!8009 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !7599)
!8010 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !7599)
!8011 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !7599)
!8012 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !7599)
!8013 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !7599)
!8014 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !7599)
!8015 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !7599)
!8016 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !7599)
!8017 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !7599)
!8018 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !7599)
!8019 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !7599)
!8020 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !7599)
!8021 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !7599)
!8022 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !7599)
!8023 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !7599)
!8024 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !7599)
!8025 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !7599)
!8026 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !7599)
!8027 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !7599)
!8028 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7599)
!8029 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7603)
!8030 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7603)
!8031 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7603)
!8032 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7603)
!8033 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7603)
!8034 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7603)
!8035 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7603)
!8036 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7603)
!8037 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7603)
!8038 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7603)
!8039 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7603)
!8040 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7603)
!8041 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7603)
!8042 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7603)
!8043 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7603)
!8044 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7603)
!8045 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7603)
!8046 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7603)
!8047 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !7599)
!8048 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !7599)
!8049 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !7599)
!8050 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !7599)
!8051 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !7599)
!8052 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !7599)
!8053 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !7599)
!8054 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !7599)
!8055 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !7599)
!8056 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !7599)
!8057 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !7599)
!8058 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !7599)
!8059 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !7599)
!8060 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !7599)
!8061 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !7599)
!8062 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !7599)
!8063 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !7599)
!8064 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !7599)
!8065 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !7599)
!8066 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !7599)
!8067 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !7599)
!8068 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !7599)
!8069 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !7599)
!8070 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !7599)
!8071 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !7599)
!8072 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !7599)
!8073 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !7599)
!8074 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !7599)
!8075 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !7599)
!8076 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !7599)
!8077 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !7599)
!8078 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !7599)
!8079 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !7599)
!8080 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !7599)
!8081 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !7599)
!8082 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !7599)
!8083 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !7599)
!8084 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !7599)
!8085 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !7599)
!8086 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !7599)
!8087 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !7599)
!8088 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !7599)
!8089 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !7599)
!8090 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !7599)
!8091 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !7599)
!8092 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7599)
!8093 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7598)
!8094 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7598)
!8095 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7598)
!8096 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7598)
!8097 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7598)
!8098 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7598)
!8099 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7598)
!8100 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7598)
!8101 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7598)
!8102 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7598)
!8103 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7598)
!8104 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7598)
!8105 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7598)
!8106 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7598)
!8107 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7598)
!8108 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7598)
!8109 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7598)
!8110 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7598)
!8111 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !7599)
!8112 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !7599)
!8113 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !7599)
!8114 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !7599)
!8115 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !7599)
!8116 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !7599)
!8117 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !7599)
!8118 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !7599)
!8119 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !7599)
!8120 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !7599)
!8121 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !7599)
!8122 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !7599)
!8123 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !7599)
!8124 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !7599)
!8125 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !7599)
!8126 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !7599)
!8127 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !7599)
!8128 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !7599)
!8129 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !7599)
!8130 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !7599)
!8131 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !7599)
!8132 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !7599)
!8133 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !7599)
!8134 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !7599)
!8135 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !7599)
!8136 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !7599)
!8137 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !7599)
!8138 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !7599)
!8139 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !7599)
!8140 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !7599)
!8141 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !7599)
!8142 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !7599)
!8143 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !7599)
!8144 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !7599)
!8145 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !7599)
!8146 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !7599)
!8147 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !7599)
!8148 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !7599)
!8149 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !7599)
!8150 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !7599)
!8151 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !7599)
!8152 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !7599)
!8153 = !DILocation(line: 757, column: 39, scope: !7600)
!8154 = !DILocation(line: 757, column: 25, scope: !7600)
!8155 = !DILocation(line: 757, column: 37, scope: !7600)
!8156 = !DILocation(line: 758, column: 21, scope: !7600)
!8157 = !DILocation(line: 759, column: 74, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !7601, file: !904, line: 758, column: 28)
!8159 = !DILocation(line: 759, column: 65, scope: !8158)
!8160 = !DILocation(line: 759, column: 39, scope: !8158)
!8161 = !DILocation(line: 759, column: 25, scope: !8158)
!8162 = !DILocation(line: 759, column: 37, scope: !8158)
!8163 = !DILocation(line: 760, column: 74, scope: !8158)
!8164 = !DILocation(line: 760, column: 65, scope: !8158)
!8165 = !DILocation(line: 760, column: 39, scope: !8158)
!8166 = !DILocation(line: 760, column: 25, scope: !8158)
!8167 = !DILocation(line: 760, column: 37, scope: !8158)
!8168 = !DILocation(line: 764, column: 46, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !7554, file: !904, line: 764, column: 25)
!8170 = !DILocation(line: 764, column: 25, scope: !8169)
!8171 = !DILocation(line: 764, column: 28, scope: !8169)
!8172 = !DILocation(line: 764, column: 66, scope: !8169)
!8173 = !DILocation(line: 764, column: 25, scope: !7554)
!8174 = !DILocation(line: 765, column: 47, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8169, file: !904, line: 764, column: 72)
!8176 = !DILocation(line: 765, column: 45, scope: !8175)
!8177 = !DILocation(line: 766, column: 47, scope: !8175)
!8178 = !DILocation(line: 766, column: 45, scope: !8175)
!8179 = !DILocation(line: 767, column: 41, scope: !8175)
!8180 = !DILocation(line: 767, column: 39, scope: !8175)
!8181 = !DILocation(line: 768, column: 41, scope: !8175)
!8182 = !DILocation(line: 768, column: 39, scope: !8175)
!8183 = !DILocation(line: 769, column: 21, scope: !8175)
!8184 = !DILocation(line: 770, column: 21, scope: !7554)
!8185 = !DILocation(line: 774, column: 43, scope: !7554)
!8186 = !DILocation(line: 774, column: 41, scope: !7554)
!8187 = !DILocation(line: 775, column: 43, scope: !7554)
!8188 = !DILocation(line: 775, column: 41, scope: !7554)
!8189 = !DILocation(line: 779, column: 28, scope: !7553)
!8190 = !DILocation(line: 779, column: 26, scope: !7553)
!8191 = !DILocation(line: 779, column: 33, scope: !8192)
!8192 = !DILexicalBlockFile(scope: !7552, file: !904, discriminator: 1)
!8193 = !DILocation(line: 779, column: 35, scope: !8192)
!8194 = !DILocation(line: 779, column: 21, scope: !8192)
!8195 = !DILocation(line: 780, column: 49, scope: !7551)
!8196 = !DILocation(line: 780, column: 47, scope: !7551)
!8197 = !DILocation(line: 780, column: 57, scope: !7551)
!8198 = !DILocation(line: 780, column: 59, scope: !7551)
!8199 = !DILocation(line: 780, column: 54, scope: !7551)
!8200 = !DILocation(line: 780, column: 68, scope: !7551)
!8201 = !DILocation(line: 780, column: 71, scope: !7551)
!8202 = !DILocation(line: 780, column: 66, scope: !7551)
!8203 = !DILocation(line: 780, column: 96, scope: !7551)
!8204 = !DILocation(line: 780, column: 94, scope: !7551)
!8205 = !DILocation(line: 780, column: 104, scope: !7551)
!8206 = !DILocation(line: 780, column: 106, scope: !7551)
!8207 = !DILocation(line: 780, column: 101, scope: !7551)
!8208 = !DILocation(line: 780, column: 89, scope: !7551)
!8209 = !DILocation(line: 780, column: 42, scope: !7551)
!8210 = !DILocation(line: 781, column: 46, scope: !7550)
!8211 = !DILocation(line: 781, column: 29, scope: !7550)
!8212 = !DILocation(line: 781, column: 32, scope: !7550)
!8213 = !DILocation(line: 781, column: 64, scope: !7550)
!8214 = !DILocation(line: 781, column: 78, scope: !7550)
!8215 = !DILocation(line: 781, column: 29, scope: !7551)
!8216 = !DILocation(line: 782, column: 33, scope: !7548)
!8217 = !DILocation(line: 782, column: 45, scope: !7548)
!8218 = !DILocation(line: 782, column: 33, scope: !7549)
!8219 = !DILocation(line: 783, column: 76, scope: !7547)
!8220 = !DILocation(line: 783, column: 80, scope: !7547)
!8221 = !DILocation(line: 783, column: 83, scope: !7547)
!8222 = !DILocation(line: 783, column: 101, scope: !7547)
!8223 = !DILocation(line: 783, column: 67, scope: !7547)
!8224 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !7581)
!8225 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !7581)
!8226 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !7581)
!8227 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !7581)
!8228 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !7581)
!8229 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !7581)
!8230 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !7581)
!8231 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !7581)
!8232 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !7581)
!8233 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !7581)
!8234 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7581)
!8235 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7585)
!8236 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7585)
!8237 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7585)
!8238 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7585)
!8239 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7585)
!8240 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7585)
!8241 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7585)
!8242 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7585)
!8243 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7585)
!8244 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7585)
!8245 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7585)
!8246 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7585)
!8247 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7585)
!8248 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7585)
!8249 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7585)
!8250 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7585)
!8251 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7585)
!8252 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7585)
!8253 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !7581)
!8254 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !7581)
!8255 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !7581)
!8256 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !7581)
!8257 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !7581)
!8258 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !7581)
!8259 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !7581)
!8260 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !7581)
!8261 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !7581)
!8262 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !7581)
!8263 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !7581)
!8264 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !7581)
!8265 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !7581)
!8266 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !7581)
!8267 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !7581)
!8268 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !7581)
!8269 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !7581)
!8270 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !7581)
!8271 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !7581)
!8272 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !7581)
!8273 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !7581)
!8274 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !7581)
!8275 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !7581)
!8276 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !7581)
!8277 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !7581)
!8278 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !7581)
!8279 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !7581)
!8280 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !7581)
!8281 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !7581)
!8282 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !7581)
!8283 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !7581)
!8284 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !7581)
!8285 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !7581)
!8286 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !7581)
!8287 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !7581)
!8288 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !7581)
!8289 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !7581)
!8290 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !7581)
!8291 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !7581)
!8292 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !7581)
!8293 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7581)
!8294 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7583)
!8295 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7583)
!8296 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7583)
!8297 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7583)
!8298 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7583)
!8299 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7583)
!8300 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7583)
!8301 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7583)
!8302 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7583)
!8303 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7583)
!8304 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7583)
!8305 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7583)
!8306 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7583)
!8307 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7583)
!8308 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7583)
!8309 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7583)
!8310 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7583)
!8311 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7583)
!8312 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !7581)
!8313 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !7581)
!8314 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !7581)
!8315 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !7581)
!8316 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !7581)
!8317 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !7581)
!8318 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !7581)
!8319 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !7581)
!8320 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !7581)
!8321 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !7581)
!8322 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !7581)
!8323 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !7581)
!8324 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !7581)
!8325 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !7581)
!8326 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !7581)
!8327 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !7581)
!8328 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !7581)
!8329 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !7581)
!8330 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !7581)
!8331 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !7581)
!8332 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !7581)
!8333 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !7581)
!8334 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !7581)
!8335 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !7581)
!8336 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !7581)
!8337 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !7581)
!8338 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !7581)
!8339 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !7581)
!8340 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !7581)
!8341 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !7581)
!8342 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !7581)
!8343 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !7581)
!8344 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !7581)
!8345 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !7581)
!8346 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !7581)
!8347 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !7581)
!8348 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !7581)
!8349 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !7581)
!8350 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !7581)
!8351 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !7581)
!8352 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !7581)
!8353 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !7581)
!8354 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !7581)
!8355 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !7581)
!8356 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !7581)
!8357 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7581)
!8358 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7580)
!8359 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7580)
!8360 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7580)
!8361 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7580)
!8362 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7580)
!8363 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7580)
!8364 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7580)
!8365 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7580)
!8366 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7580)
!8367 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7580)
!8368 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7580)
!8369 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7580)
!8370 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7580)
!8371 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7580)
!8372 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7580)
!8373 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7580)
!8374 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7580)
!8375 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7580)
!8376 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !7581)
!8377 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !7581)
!8378 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !7581)
!8379 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !7581)
!8380 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !7581)
!8381 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !7581)
!8382 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !7581)
!8383 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !7581)
!8384 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !7581)
!8385 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !7581)
!8386 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !7581)
!8387 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !7581)
!8388 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !7581)
!8389 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !7581)
!8390 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !7581)
!8391 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !7581)
!8392 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !7581)
!8393 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !7581)
!8394 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !7581)
!8395 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !7581)
!8396 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !7581)
!8397 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !7581)
!8398 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !7581)
!8399 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !7581)
!8400 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !7581)
!8401 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !7581)
!8402 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !7581)
!8403 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !7581)
!8404 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !7581)
!8405 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !7581)
!8406 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !7581)
!8407 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !7581)
!8408 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !7581)
!8409 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !7581)
!8410 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !7581)
!8411 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !7581)
!8412 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !7581)
!8413 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !7581)
!8414 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !7581)
!8415 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !7581)
!8416 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !7581)
!8417 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !7581)
!8418 = !DILocation(line: 783, column: 47, scope: !7547)
!8419 = !DILocation(line: 783, column: 42, scope: !7547)
!8420 = !DILocation(line: 783, column: 33, scope: !7547)
!8421 = !DILocation(line: 783, column: 45, scope: !7547)
!8422 = !DILocation(line: 784, column: 76, scope: !7547)
!8423 = !DILocation(line: 784, column: 80, scope: !7547)
!8424 = !DILocation(line: 784, column: 83, scope: !7547)
!8425 = !DILocation(line: 784, column: 101, scope: !7547)
!8426 = !DILocation(line: 784, column: 67, scope: !7547)
!8427 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !7546)
!8428 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !7546)
!8429 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !7546)
!8430 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !7546)
!8431 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !7546)
!8432 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !7546)
!8433 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !7546)
!8434 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !7546)
!8435 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !7546)
!8436 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !7546)
!8437 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !7546)
!8438 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7567)
!8439 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7567)
!8440 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7567)
!8441 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7567)
!8442 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7567)
!8443 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7567)
!8444 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7567)
!8445 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7567)
!8446 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7567)
!8447 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7567)
!8448 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7567)
!8449 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7567)
!8450 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7567)
!8451 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7567)
!8452 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7567)
!8453 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7567)
!8454 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7567)
!8455 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7567)
!8456 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !7546)
!8457 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !7546)
!8458 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !7546)
!8459 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !7546)
!8460 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !7546)
!8461 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !7546)
!8462 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !7546)
!8463 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !7546)
!8464 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !7546)
!8465 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !7546)
!8466 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !7546)
!8467 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !7546)
!8468 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !7546)
!8469 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !7546)
!8470 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !7546)
!8471 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !7546)
!8472 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !7546)
!8473 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !7546)
!8474 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !7546)
!8475 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !7546)
!8476 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !7546)
!8477 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !7546)
!8478 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !7546)
!8479 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !7546)
!8480 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !7546)
!8481 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !7546)
!8482 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !7546)
!8483 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !7546)
!8484 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !7546)
!8485 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !7546)
!8486 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !7546)
!8487 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !7546)
!8488 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !7546)
!8489 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !7546)
!8490 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !7546)
!8491 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !7546)
!8492 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !7546)
!8493 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !7546)
!8494 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !7546)
!8495 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !7546)
!8496 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !7546)
!8497 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7565)
!8498 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7565)
!8499 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7565)
!8500 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7565)
!8501 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7565)
!8502 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7565)
!8503 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7565)
!8504 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7565)
!8505 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7565)
!8506 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7565)
!8507 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7565)
!8508 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7565)
!8509 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7565)
!8510 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7565)
!8511 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7565)
!8512 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7565)
!8513 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7565)
!8514 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7565)
!8515 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !7546)
!8516 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !7546)
!8517 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !7546)
!8518 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !7546)
!8519 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !7546)
!8520 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !7546)
!8521 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !7546)
!8522 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !7546)
!8523 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !7546)
!8524 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !7546)
!8525 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !7546)
!8526 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !7546)
!8527 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !7546)
!8528 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !7546)
!8529 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !7546)
!8530 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !7546)
!8531 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !7546)
!8532 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !7546)
!8533 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !7546)
!8534 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !7546)
!8535 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !7546)
!8536 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !7546)
!8537 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !7546)
!8538 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !7546)
!8539 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !7546)
!8540 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !7546)
!8541 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !7546)
!8542 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !7546)
!8543 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !7546)
!8544 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !7546)
!8545 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !7546)
!8546 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !7546)
!8547 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !7546)
!8548 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !7546)
!8549 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !7546)
!8550 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !7546)
!8551 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !7546)
!8552 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !7546)
!8553 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !7546)
!8554 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !7546)
!8555 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !7546)
!8556 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !7546)
!8557 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !7546)
!8558 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !7546)
!8559 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !7546)
!8560 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !7546)
!8561 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !7545)
!8562 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !7545)
!8563 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !7545)
!8564 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !7545)
!8565 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !7545)
!8566 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !7545)
!8567 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !7545)
!8568 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !7545)
!8569 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !7545)
!8570 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !7545)
!8571 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !7545)
!8572 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !7545)
!8573 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !7545)
!8574 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !7545)
!8575 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !7545)
!8576 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !7545)
!8577 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !7545)
!8578 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !7545)
!8579 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !7546)
!8580 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !7546)
!8581 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !7546)
!8582 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !7546)
!8583 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !7546)
!8584 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !7546)
!8585 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !7546)
!8586 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !7546)
!8587 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !7546)
!8588 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !7546)
!8589 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !7546)
!8590 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !7546)
!8591 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !7546)
!8592 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !7546)
!8593 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !7546)
!8594 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !7546)
!8595 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !7546)
!8596 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !7546)
!8597 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !7546)
!8598 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !7546)
!8599 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !7546)
!8600 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !7546)
!8601 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !7546)
!8602 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !7546)
!8603 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !7546)
!8604 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !7546)
!8605 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !7546)
!8606 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !7546)
!8607 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !7546)
!8608 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !7546)
!8609 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !7546)
!8610 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !7546)
!8611 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !7546)
!8612 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !7546)
!8613 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !7546)
!8614 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !7546)
!8615 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !7546)
!8616 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !7546)
!8617 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !7546)
!8618 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !7546)
!8619 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !7546)
!8620 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !7546)
!8621 = !DILocation(line: 784, column: 47, scope: !7547)
!8622 = !DILocation(line: 784, column: 42, scope: !7547)
!8623 = !DILocation(line: 784, column: 33, scope: !7547)
!8624 = !DILocation(line: 784, column: 45, scope: !7547)
!8625 = !DILocation(line: 785, column: 29, scope: !7547)
!8626 = !DILocation(line: 786, column: 82, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !7548, file: !904, line: 785, column: 36)
!8628 = !DILocation(line: 786, column: 73, scope: !8627)
!8629 = !DILocation(line: 786, column: 47, scope: !8627)
!8630 = !DILocation(line: 786, column: 42, scope: !8627)
!8631 = !DILocation(line: 786, column: 33, scope: !8627)
!8632 = !DILocation(line: 786, column: 45, scope: !8627)
!8633 = !DILocation(line: 787, column: 82, scope: !8627)
!8634 = !DILocation(line: 787, column: 73, scope: !8627)
!8635 = !DILocation(line: 787, column: 47, scope: !8627)
!8636 = !DILocation(line: 787, column: 42, scope: !8627)
!8637 = !DILocation(line: 787, column: 33, scope: !8627)
!8638 = !DILocation(line: 787, column: 45, scope: !8627)
!8639 = !DILocation(line: 789, column: 54, scope: !7549)
!8640 = !DILocation(line: 789, column: 45, scope: !7549)
!8641 = !DILocation(line: 789, column: 43, scope: !7549)
!8642 = !DILocation(line: 790, column: 54, scope: !7549)
!8643 = !DILocation(line: 790, column: 45, scope: !7549)
!8644 = !DILocation(line: 790, column: 43, scope: !7549)
!8645 = !DILocation(line: 791, column: 25, scope: !7549)
!8646 = !DILocation(line: 792, column: 38, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !7550, file: !904, line: 791, column: 32)
!8648 = !DILocation(line: 792, column: 29, scope: !8647)
!8649 = !DILocation(line: 792, column: 41, scope: !8647)
!8650 = !DILocation(line: 793, column: 38, scope: !8647)
!8651 = !DILocation(line: 793, column: 29, scope: !8647)
!8652 = !DILocation(line: 793, column: 41, scope: !8647)
!8653 = !DILocation(line: 795, column: 21, scope: !7551)
!8654 = !DILocation(line: 779, column: 41, scope: !8655)
!8655 = !DILexicalBlockFile(scope: !7552, file: !904, discriminator: 2)
!8656 = !DILocation(line: 779, column: 21, scope: !8655)
!8657 = distinct !{!8657, !8658}
!8658 = !DILocation(line: 779, column: 21, scope: !7554)
!8659 = !DILocation(line: 796, column: 21, scope: !7554)
!8660 = !DILocation(line: 800, column: 35, scope: !7554)
!8661 = !DILocation(line: 800, column: 21, scope: !7554)
!8662 = !DILocation(line: 800, column: 33, scope: !7554)
!8663 = !DILocation(line: 801, column: 35, scope: !7554)
!8664 = !DILocation(line: 801, column: 21, scope: !7554)
!8665 = !DILocation(line: 801, column: 33, scope: !7554)
!8666 = !DILocation(line: 805, column: 21, scope: !7554)
!8667 = !DILocation(line: 810, column: 35, scope: !7554)
!8668 = !DILocation(line: 810, column: 21, scope: !7554)
!8669 = !DILocation(line: 810, column: 33, scope: !7554)
!8670 = !DILocation(line: 811, column: 35, scope: !7554)
!8671 = !DILocation(line: 811, column: 21, scope: !7554)
!8672 = !DILocation(line: 811, column: 33, scope: !7554)
!8673 = !DILocation(line: 814, column: 43, scope: !7554)
!8674 = !DILocation(line: 814, column: 41, scope: !7554)
!8675 = !DILocation(line: 815, column: 43, scope: !7554)
!8676 = !DILocation(line: 815, column: 41, scope: !7554)
!8677 = !DILocation(line: 816, column: 37, scope: !7554)
!8678 = !DILocation(line: 816, column: 35, scope: !7554)
!8679 = !DILocation(line: 817, column: 37, scope: !7554)
!8680 = !DILocation(line: 817, column: 35, scope: !7554)
!8681 = !DILocation(line: 818, column: 21, scope: !7554)
!8682 = !DILocation(line: 822, column: 21, scope: !7554)
!8683 = !DILocation(line: 822, column: 33, scope: !7554)
!8684 = !DILocation(line: 823, column: 21, scope: !7554)
!8685 = !DILocation(line: 823, column: 33, scope: !7554)
!8686 = !DILocation(line: 826, column: 21, scope: !7554)
!8687 = !DILocation(line: 830, column: 24, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !7555, file: !904, line: 830, column: 17)
!8689 = !DILocation(line: 830, column: 22, scope: !8688)
!8690 = !DILocation(line: 830, column: 29, scope: !8691)
!8691 = !DILexicalBlockFile(scope: !8692, file: !904, discriminator: 1)
!8692 = distinct !DILexicalBlock(scope: !8688, file: !904, line: 830, column: 17)
!8693 = !DILocation(line: 830, column: 31, scope: !8691)
!8694 = !DILocation(line: 830, column: 17, scope: !8691)
!8695 = !DILocation(line: 832, column: 30, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8692, file: !904, line: 830, column: 41)
!8697 = !DILocation(line: 832, column: 28, scope: !8696)
!8698 = !DILocation(line: 832, column: 38, scope: !8696)
!8699 = !DILocation(line: 832, column: 40, scope: !8696)
!8700 = !DILocation(line: 832, column: 35, scope: !8696)
!8701 = !DILocation(line: 832, column: 49, scope: !8696)
!8702 = !DILocation(line: 832, column: 52, scope: !8696)
!8703 = !DILocation(line: 832, column: 47, scope: !8696)
!8704 = !DILocation(line: 832, column: 77, scope: !8696)
!8705 = !DILocation(line: 832, column: 75, scope: !8696)
!8706 = !DILocation(line: 832, column: 85, scope: !8696)
!8707 = !DILocation(line: 832, column: 87, scope: !8696)
!8708 = !DILocation(line: 832, column: 82, scope: !8696)
!8709 = !DILocation(line: 832, column: 70, scope: !8696)
!8710 = !DILocation(line: 831, column: 38, scope: !8696)
!8711 = !DILocation(line: 833, column: 46, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8696, file: !904, line: 833, column: 25)
!8713 = !DILocation(line: 833, column: 25, scope: !8712)
!8714 = !DILocation(line: 833, column: 28, scope: !8712)
!8715 = !DILocation(line: 833, column: 66, scope: !8712)
!8716 = !DILocation(line: 833, column: 25, scope: !8696)
!8717 = !DILocation(line: 834, column: 74, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8712, file: !904, line: 833, column: 72)
!8719 = !DILocation(line: 834, column: 65, scope: !8718)
!8720 = !DILocation(line: 834, column: 42, scope: !8718)
!8721 = !DILocation(line: 834, column: 25, scope: !8718)
!8722 = !DILocation(line: 834, column: 28, scope: !8718)
!8723 = !DILocation(line: 834, column: 63, scope: !8718)
!8724 = !DILocation(line: 835, column: 74, scope: !8718)
!8725 = !DILocation(line: 835, column: 65, scope: !8718)
!8726 = !DILocation(line: 835, column: 42, scope: !8718)
!8727 = !DILocation(line: 835, column: 25, scope: !8718)
!8728 = !DILocation(line: 835, column: 28, scope: !8718)
!8729 = !DILocation(line: 835, column: 63, scope: !8718)
!8730 = !DILocation(line: 836, column: 21, scope: !8718)
!8731 = !DILocation(line: 837, column: 65, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8712, file: !904, line: 836, column: 28)
!8733 = !DILocation(line: 837, column: 42, scope: !8732)
!8734 = !DILocation(line: 837, column: 25, scope: !8732)
!8735 = !DILocation(line: 837, column: 28, scope: !8732)
!8736 = !DILocation(line: 837, column: 63, scope: !8732)
!8737 = !DILocation(line: 838, column: 65, scope: !8732)
!8738 = !DILocation(line: 838, column: 42, scope: !8732)
!8739 = !DILocation(line: 838, column: 25, scope: !8732)
!8740 = !DILocation(line: 838, column: 28, scope: !8732)
!8741 = !DILocation(line: 838, column: 63, scope: !8732)
!8742 = !DILocation(line: 840, column: 17, scope: !8696)
!8743 = !DILocation(line: 830, column: 37, scope: !8744)
!8744 = !DILexicalBlockFile(scope: !8692, file: !904, discriminator: 2)
!8745 = !DILocation(line: 830, column: 17, scope: !8744)
!8746 = distinct !{!8746, !8747}
!8747 = !DILocation(line: 830, column: 17, scope: !7555)
!8748 = !DILocation(line: 842, column: 21, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !7555, file: !904, line: 842, column: 21)
!8750 = !DILocation(line: 842, column: 24, scope: !8749)
!8751 = !DILocation(line: 842, column: 21, scope: !7555)
!8752 = !DILocation(line: 843, column: 46, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8754, file: !904, line: 843, column: 25)
!8754 = distinct !DILexicalBlock(scope: !8749, file: !904, line: 842, column: 40)
!8755 = !DILocation(line: 843, column: 25, scope: !8753)
!8756 = !DILocation(line: 843, column: 28, scope: !8753)
!8757 = !DILocation(line: 843, column: 66, scope: !8753)
!8758 = !DILocation(line: 843, column: 25, scope: !8754)
!8759 = !DILocation(line: 844, column: 41, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8753, file: !904, line: 843, column: 72)
!8761 = !DILocation(line: 844, column: 55, scope: !8760)
!8762 = !DILocation(line: 844, column: 53, scope: !8760)
!8763 = !DILocation(line: 844, column: 69, scope: !8760)
!8764 = !DILocation(line: 844, column: 67, scope: !8760)
!8765 = !DILocation(line: 844, column: 83, scope: !8760)
!8766 = !DILocation(line: 844, column: 81, scope: !8760)
!8767 = !DILocation(line: 844, column: 96, scope: !8760)
!8768 = !DILocation(line: 844, column: 40, scope: !8760)
!8769 = !DILocation(line: 844, column: 104, scope: !8770)
!8770 = !DILexicalBlockFile(scope: !8760, file: !904, discriminator: 1)
!8771 = !DILocation(line: 844, column: 118, scope: !8770)
!8772 = !DILocation(line: 844, column: 116, scope: !8770)
!8773 = !DILocation(line: 844, column: 132, scope: !8770)
!8774 = !DILocation(line: 844, column: 130, scope: !8770)
!8775 = !DILocation(line: 844, column: 146, scope: !8770)
!8776 = !DILocation(line: 844, column: 144, scope: !8770)
!8777 = !DILocation(line: 844, column: 159, scope: !8770)
!8778 = !DILocation(line: 844, column: 175, scope: !8770)
!8779 = !DILocation(line: 844, column: 40, scope: !8770)
!8780 = !DILocation(line: 844, column: 185, scope: !8781)
!8781 = !DILexicalBlockFile(scope: !8760, file: !904, discriminator: 2)
!8782 = !DILocation(line: 844, column: 199, scope: !8781)
!8783 = !DILocation(line: 844, column: 197, scope: !8781)
!8784 = !DILocation(line: 844, column: 213, scope: !8781)
!8785 = !DILocation(line: 844, column: 211, scope: !8781)
!8786 = !DILocation(line: 844, column: 227, scope: !8781)
!8787 = !DILocation(line: 844, column: 225, scope: !8781)
!8788 = !DILocation(line: 844, column: 240, scope: !8781)
!8789 = !DILocation(line: 844, column: 255, scope: !8781)
!8790 = !DILocation(line: 844, column: 258, scope: !8781)
!8791 = !DILocation(line: 844, column: 40, scope: !8781)
!8792 = !DILocation(line: 844, column: 40, scope: !8793)
!8793 = !DILexicalBlockFile(scope: !8760, file: !904, discriminator: 3)
!8794 = !DILocation(line: 844, column: 25, scope: !8793)
!8795 = !DILocation(line: 844, column: 37, scope: !8793)
!8796 = !DILocation(line: 846, column: 41, scope: !8760)
!8797 = !DILocation(line: 846, column: 55, scope: !8760)
!8798 = !DILocation(line: 846, column: 53, scope: !8760)
!8799 = !DILocation(line: 846, column: 69, scope: !8760)
!8800 = !DILocation(line: 846, column: 67, scope: !8760)
!8801 = !DILocation(line: 846, column: 83, scope: !8760)
!8802 = !DILocation(line: 846, column: 81, scope: !8760)
!8803 = !DILocation(line: 846, column: 96, scope: !8760)
!8804 = !DILocation(line: 846, column: 40, scope: !8760)
!8805 = !DILocation(line: 846, column: 104, scope: !8770)
!8806 = !DILocation(line: 846, column: 118, scope: !8770)
!8807 = !DILocation(line: 846, column: 116, scope: !8770)
!8808 = !DILocation(line: 846, column: 132, scope: !8770)
!8809 = !DILocation(line: 846, column: 130, scope: !8770)
!8810 = !DILocation(line: 846, column: 146, scope: !8770)
!8811 = !DILocation(line: 846, column: 144, scope: !8770)
!8812 = !DILocation(line: 846, column: 159, scope: !8770)
!8813 = !DILocation(line: 846, column: 175, scope: !8770)
!8814 = !DILocation(line: 846, column: 40, scope: !8770)
!8815 = !DILocation(line: 846, column: 185, scope: !8781)
!8816 = !DILocation(line: 846, column: 199, scope: !8781)
!8817 = !DILocation(line: 846, column: 197, scope: !8781)
!8818 = !DILocation(line: 846, column: 213, scope: !8781)
!8819 = !DILocation(line: 846, column: 211, scope: !8781)
!8820 = !DILocation(line: 846, column: 227, scope: !8781)
!8821 = !DILocation(line: 846, column: 225, scope: !8781)
!8822 = !DILocation(line: 846, column: 240, scope: !8781)
!8823 = !DILocation(line: 846, column: 255, scope: !8781)
!8824 = !DILocation(line: 846, column: 258, scope: !8781)
!8825 = !DILocation(line: 846, column: 40, scope: !8781)
!8826 = !DILocation(line: 846, column: 40, scope: !8793)
!8827 = !DILocation(line: 846, column: 25, scope: !8793)
!8828 = !DILocation(line: 846, column: 37, scope: !8793)
!8829 = !DILocation(line: 848, column: 21, scope: !8760)
!8830 = !DILocation(line: 849, column: 36, scope: !8754)
!8831 = !DILocation(line: 849, column: 48, scope: !8754)
!8832 = !DILocation(line: 849, column: 57, scope: !8754)
!8833 = !DILocation(line: 849, column: 69, scope: !8754)
!8834 = !DILocation(line: 849, column: 54, scope: !8754)
!8835 = !DILocation(line: 849, column: 21, scope: !8754)
!8836 = !DILocation(line: 849, column: 33, scope: !8754)
!8837 = !DILocation(line: 850, column: 36, scope: !8754)
!8838 = !DILocation(line: 850, column: 48, scope: !8754)
!8839 = !DILocation(line: 850, column: 57, scope: !8754)
!8840 = !DILocation(line: 850, column: 69, scope: !8754)
!8841 = !DILocation(line: 850, column: 54, scope: !8754)
!8842 = !DILocation(line: 850, column: 21, scope: !8754)
!8843 = !DILocation(line: 850, column: 33, scope: !8754)
!8844 = !DILocation(line: 851, column: 28, scope: !8754)
!8845 = !DILocation(line: 851, column: 35, scope: !8754)
!8846 = !DILocation(line: 851, column: 38, scope: !8754)
!8847 = !DILocation(line: 851, column: 33, scope: !8754)
!8848 = !DILocation(line: 851, column: 58, scope: !8754)
!8849 = !DILocation(line: 851, column: 56, scope: !8754)
!8850 = !DILocation(line: 851, column: 26, scope: !8754)
!8851 = !DILocation(line: 852, column: 49, scope: !8754)
!8852 = !DILocation(line: 852, column: 38, scope: !8754)
!8853 = !DILocation(line: 852, column: 21, scope: !8754)
!8854 = !DILocation(line: 852, column: 24, scope: !8754)
!8855 = !DILocation(line: 852, column: 47, scope: !8754)
!8856 = !DILocation(line: 853, column: 49, scope: !8754)
!8857 = !DILocation(line: 853, column: 38, scope: !8754)
!8858 = !DILocation(line: 853, column: 21, scope: !8754)
!8859 = !DILocation(line: 853, column: 24, scope: !8754)
!8860 = !DILocation(line: 853, column: 47, scope: !8754)
!8861 = !DILocation(line: 854, column: 17, scope: !8754)
!8862 = !DILocation(line: 854, column: 28, scope: !8863)
!8863 = !DILexicalBlockFile(scope: !8864, file: !904, discriminator: 1)
!8864 = distinct !DILexicalBlock(scope: !8749, file: !904, line: 854, column: 28)
!8865 = !DILocation(line: 854, column: 31, scope: !8863)
!8866 = !DILocation(line: 855, column: 46, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !904, line: 855, column: 25)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !904, line: 854, column: 47)
!8869 = !DILocation(line: 855, column: 25, scope: !8867)
!8870 = !DILocation(line: 855, column: 28, scope: !8867)
!8871 = !DILocation(line: 855, column: 66, scope: !8867)
!8872 = !DILocation(line: 855, column: 25, scope: !8868)
!8873 = !DILocation(line: 856, column: 41, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8867, file: !904, line: 855, column: 72)
!8875 = !DILocation(line: 856, column: 55, scope: !8874)
!8876 = !DILocation(line: 856, column: 53, scope: !8874)
!8877 = !DILocation(line: 856, column: 68, scope: !8874)
!8878 = !DILocation(line: 856, column: 40, scope: !8874)
!8879 = !DILocation(line: 856, column: 76, scope: !8880)
!8880 = !DILexicalBlockFile(scope: !8874, file: !904, discriminator: 1)
!8881 = !DILocation(line: 856, column: 90, scope: !8880)
!8882 = !DILocation(line: 856, column: 88, scope: !8880)
!8883 = !DILocation(line: 856, column: 103, scope: !8880)
!8884 = !DILocation(line: 856, column: 119, scope: !8880)
!8885 = !DILocation(line: 856, column: 40, scope: !8880)
!8886 = !DILocation(line: 856, column: 129, scope: !8887)
!8887 = !DILexicalBlockFile(scope: !8874, file: !904, discriminator: 2)
!8888 = !DILocation(line: 856, column: 143, scope: !8887)
!8889 = !DILocation(line: 856, column: 141, scope: !8887)
!8890 = !DILocation(line: 856, column: 156, scope: !8887)
!8891 = !DILocation(line: 856, column: 171, scope: !8887)
!8892 = !DILocation(line: 856, column: 174, scope: !8887)
!8893 = !DILocation(line: 856, column: 40, scope: !8887)
!8894 = !DILocation(line: 856, column: 40, scope: !8895)
!8895 = !DILexicalBlockFile(scope: !8874, file: !904, discriminator: 3)
!8896 = !DILocation(line: 856, column: 25, scope: !8895)
!8897 = !DILocation(line: 856, column: 37, scope: !8895)
!8898 = !DILocation(line: 857, column: 41, scope: !8874)
!8899 = !DILocation(line: 857, column: 55, scope: !8874)
!8900 = !DILocation(line: 857, column: 53, scope: !8874)
!8901 = !DILocation(line: 857, column: 68, scope: !8874)
!8902 = !DILocation(line: 857, column: 40, scope: !8874)
!8903 = !DILocation(line: 857, column: 76, scope: !8880)
!8904 = !DILocation(line: 857, column: 90, scope: !8880)
!8905 = !DILocation(line: 857, column: 88, scope: !8880)
!8906 = !DILocation(line: 857, column: 103, scope: !8880)
!8907 = !DILocation(line: 857, column: 119, scope: !8880)
!8908 = !DILocation(line: 857, column: 40, scope: !8880)
!8909 = !DILocation(line: 857, column: 129, scope: !8887)
!8910 = !DILocation(line: 857, column: 143, scope: !8887)
!8911 = !DILocation(line: 857, column: 141, scope: !8887)
!8912 = !DILocation(line: 857, column: 156, scope: !8887)
!8913 = !DILocation(line: 857, column: 171, scope: !8887)
!8914 = !DILocation(line: 857, column: 174, scope: !8887)
!8915 = !DILocation(line: 857, column: 40, scope: !8887)
!8916 = !DILocation(line: 857, column: 40, scope: !8895)
!8917 = !DILocation(line: 857, column: 25, scope: !8895)
!8918 = !DILocation(line: 857, column: 37, scope: !8895)
!8919 = !DILocation(line: 858, column: 41, scope: !8874)
!8920 = !DILocation(line: 858, column: 55, scope: !8874)
!8921 = !DILocation(line: 858, column: 53, scope: !8874)
!8922 = !DILocation(line: 858, column: 68, scope: !8874)
!8923 = !DILocation(line: 858, column: 40, scope: !8874)
!8924 = !DILocation(line: 858, column: 76, scope: !8880)
!8925 = !DILocation(line: 858, column: 90, scope: !8880)
!8926 = !DILocation(line: 858, column: 88, scope: !8880)
!8927 = !DILocation(line: 858, column: 103, scope: !8880)
!8928 = !DILocation(line: 858, column: 119, scope: !8880)
!8929 = !DILocation(line: 858, column: 40, scope: !8880)
!8930 = !DILocation(line: 858, column: 129, scope: !8887)
!8931 = !DILocation(line: 858, column: 143, scope: !8887)
!8932 = !DILocation(line: 858, column: 141, scope: !8887)
!8933 = !DILocation(line: 858, column: 156, scope: !8887)
!8934 = !DILocation(line: 858, column: 171, scope: !8887)
!8935 = !DILocation(line: 858, column: 174, scope: !8887)
!8936 = !DILocation(line: 858, column: 40, scope: !8887)
!8937 = !DILocation(line: 858, column: 40, scope: !8895)
!8938 = !DILocation(line: 858, column: 25, scope: !8895)
!8939 = !DILocation(line: 858, column: 37, scope: !8895)
!8940 = !DILocation(line: 859, column: 41, scope: !8874)
!8941 = !DILocation(line: 859, column: 55, scope: !8874)
!8942 = !DILocation(line: 859, column: 53, scope: !8874)
!8943 = !DILocation(line: 859, column: 68, scope: !8874)
!8944 = !DILocation(line: 859, column: 40, scope: !8874)
!8945 = !DILocation(line: 859, column: 76, scope: !8880)
!8946 = !DILocation(line: 859, column: 90, scope: !8880)
!8947 = !DILocation(line: 859, column: 88, scope: !8880)
!8948 = !DILocation(line: 859, column: 103, scope: !8880)
!8949 = !DILocation(line: 859, column: 119, scope: !8880)
!8950 = !DILocation(line: 859, column: 40, scope: !8880)
!8951 = !DILocation(line: 859, column: 129, scope: !8887)
!8952 = !DILocation(line: 859, column: 143, scope: !8887)
!8953 = !DILocation(line: 859, column: 141, scope: !8887)
!8954 = !DILocation(line: 859, column: 156, scope: !8887)
!8955 = !DILocation(line: 859, column: 171, scope: !8887)
!8956 = !DILocation(line: 859, column: 174, scope: !8887)
!8957 = !DILocation(line: 859, column: 40, scope: !8887)
!8958 = !DILocation(line: 859, column: 40, scope: !8895)
!8959 = !DILocation(line: 859, column: 25, scope: !8895)
!8960 = !DILocation(line: 859, column: 37, scope: !8895)
!8961 = !DILocation(line: 860, column: 21, scope: !8874)
!8962 = !DILocation(line: 861, column: 39, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8867, file: !904, line: 860, column: 28)
!8964 = !DILocation(line: 861, column: 25, scope: !8963)
!8965 = !DILocation(line: 861, column: 37, scope: !8963)
!8966 = !DILocation(line: 862, column: 39, scope: !8963)
!8967 = !DILocation(line: 862, column: 25, scope: !8963)
!8968 = !DILocation(line: 862, column: 37, scope: !8963)
!8969 = !DILocation(line: 864, column: 36, scope: !8868)
!8970 = !DILocation(line: 864, column: 48, scope: !8868)
!8971 = !DILocation(line: 864, column: 57, scope: !8868)
!8972 = !DILocation(line: 864, column: 69, scope: !8868)
!8973 = !DILocation(line: 864, column: 54, scope: !8868)
!8974 = !DILocation(line: 864, column: 21, scope: !8868)
!8975 = !DILocation(line: 864, column: 33, scope: !8868)
!8976 = !DILocation(line: 865, column: 36, scope: !8868)
!8977 = !DILocation(line: 865, column: 48, scope: !8868)
!8978 = !DILocation(line: 865, column: 57, scope: !8868)
!8979 = !DILocation(line: 865, column: 69, scope: !8868)
!8980 = !DILocation(line: 865, column: 54, scope: !8868)
!8981 = !DILocation(line: 865, column: 21, scope: !8868)
!8982 = !DILocation(line: 865, column: 33, scope: !8868)
!8983 = !DILocation(line: 867, column: 32, scope: !8868)
!8984 = !DILocation(line: 867, column: 30, scope: !8868)
!8985 = !DILocation(line: 867, column: 39, scope: !8868)
!8986 = !DILocation(line: 867, column: 42, scope: !8868)
!8987 = !DILocation(line: 867, column: 37, scope: !8868)
!8988 = !DILocation(line: 867, column: 62, scope: !8868)
!8989 = !DILocation(line: 867, column: 60, scope: !8868)
!8990 = !DILocation(line: 867, column: 26, scope: !8868)
!8991 = !DILocation(line: 868, column: 28, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8868, file: !904, line: 868, column: 21)
!8993 = !DILocation(line: 868, column: 26, scope: !8992)
!8994 = !DILocation(line: 868, column: 33, scope: !8995)
!8995 = !DILexicalBlockFile(scope: !8996, file: !904, discriminator: 1)
!8996 = distinct !DILexicalBlock(scope: !8992, file: !904, line: 868, column: 21)
!8997 = !DILocation(line: 868, column: 35, scope: !8995)
!8998 = !DILocation(line: 868, column: 21, scope: !8995)
!8999 = !DILocation(line: 869, column: 62, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !904, line: 868, column: 45)
!9001 = !DILocation(line: 869, column: 53, scope: !9000)
!9002 = !DILocation(line: 869, column: 42, scope: !9000)
!9003 = !DILocation(line: 869, column: 25, scope: !9000)
!9004 = !DILocation(line: 869, column: 28, scope: !9000)
!9005 = !DILocation(line: 869, column: 51, scope: !9000)
!9006 = !DILocation(line: 870, column: 62, scope: !9000)
!9007 = !DILocation(line: 870, column: 53, scope: !9000)
!9008 = !DILocation(line: 870, column: 42, scope: !9000)
!9009 = !DILocation(line: 870, column: 25, scope: !9000)
!9010 = !DILocation(line: 870, column: 28, scope: !9000)
!9011 = !DILocation(line: 870, column: 51, scope: !9000)
!9012 = !DILocation(line: 871, column: 33, scope: !9000)
!9013 = !DILocation(line: 871, column: 36, scope: !9000)
!9014 = !DILocation(line: 871, column: 30, scope: !9000)
!9015 = !DILocation(line: 872, column: 21, scope: !9000)
!9016 = !DILocation(line: 868, column: 41, scope: !9017)
!9017 = !DILexicalBlockFile(scope: !8996, file: !904, discriminator: 2)
!9018 = !DILocation(line: 868, column: 21, scope: !9017)
!9019 = distinct !{!9019, !9020}
!9020 = !DILocation(line: 868, column: 21, scope: !8868)
!9021 = !DILocation(line: 873, column: 17, scope: !8868)
!9022 = !DILocation(line: 874, column: 28, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !904, line: 874, column: 21)
!9024 = distinct !DILexicalBlock(scope: !8864, file: !904, line: 873, column: 24)
!9025 = !DILocation(line: 874, column: 26, scope: !9023)
!9026 = !DILocation(line: 874, column: 33, scope: !9027)
!9027 = !DILexicalBlockFile(scope: !9028, file: !904, discriminator: 1)
!9028 = distinct !DILexicalBlock(scope: !9023, file: !904, line: 874, column: 21)
!9029 = !DILocation(line: 874, column: 35, scope: !9027)
!9030 = !DILocation(line: 874, column: 21, scope: !9027)
!9031 = !DILocation(line: 875, column: 37, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9028, file: !904, line: 874, column: 45)
!9033 = !DILocation(line: 875, column: 35, scope: !9032)
!9034 = !DILocation(line: 875, column: 45, scope: !9032)
!9035 = !DILocation(line: 875, column: 47, scope: !9032)
!9036 = !DILocation(line: 875, column: 42, scope: !9032)
!9037 = !DILocation(line: 875, column: 56, scope: !9032)
!9038 = !DILocation(line: 875, column: 59, scope: !9032)
!9039 = !DILocation(line: 875, column: 54, scope: !9032)
!9040 = !DILocation(line: 875, column: 84, scope: !9032)
!9041 = !DILocation(line: 875, column: 82, scope: !9032)
!9042 = !DILocation(line: 875, column: 92, scope: !9032)
!9043 = !DILocation(line: 875, column: 94, scope: !9032)
!9044 = !DILocation(line: 875, column: 89, scope: !9032)
!9045 = !DILocation(line: 875, column: 77, scope: !9032)
!9046 = !DILocation(line: 875, column: 30, scope: !9032)
!9047 = !DILocation(line: 876, column: 50, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9032, file: !904, line: 876, column: 29)
!9049 = !DILocation(line: 876, column: 29, scope: !9048)
!9050 = !DILocation(line: 876, column: 32, scope: !9048)
!9051 = !DILocation(line: 876, column: 70, scope: !9048)
!9052 = !DILocation(line: 876, column: 29, scope: !9032)
!9053 = !DILocation(line: 877, column: 66, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9048, file: !904, line: 876, column: 76)
!9055 = !DILocation(line: 877, column: 57, scope: !9054)
!9056 = !DILocation(line: 877, column: 46, scope: !9054)
!9057 = !DILocation(line: 877, column: 29, scope: !9054)
!9058 = !DILocation(line: 877, column: 32, scope: !9054)
!9059 = !DILocation(line: 877, column: 55, scope: !9054)
!9060 = !DILocation(line: 878, column: 66, scope: !9054)
!9061 = !DILocation(line: 878, column: 57, scope: !9054)
!9062 = !DILocation(line: 878, column: 46, scope: !9054)
!9063 = !DILocation(line: 878, column: 29, scope: !9054)
!9064 = !DILocation(line: 878, column: 32, scope: !9054)
!9065 = !DILocation(line: 878, column: 55, scope: !9054)
!9066 = !DILocation(line: 879, column: 25, scope: !9054)
!9067 = !DILocation(line: 880, column: 57, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9048, file: !904, line: 879, column: 32)
!9069 = !DILocation(line: 880, column: 46, scope: !9068)
!9070 = !DILocation(line: 880, column: 29, scope: !9068)
!9071 = !DILocation(line: 880, column: 32, scope: !9068)
!9072 = !DILocation(line: 880, column: 55, scope: !9068)
!9073 = !DILocation(line: 881, column: 57, scope: !9068)
!9074 = !DILocation(line: 881, column: 46, scope: !9068)
!9075 = !DILocation(line: 881, column: 29, scope: !9068)
!9076 = !DILocation(line: 881, column: 32, scope: !9068)
!9077 = !DILocation(line: 881, column: 55, scope: !9068)
!9078 = !DILocation(line: 883, column: 21, scope: !9032)
!9079 = !DILocation(line: 874, column: 41, scope: !9080)
!9080 = !DILexicalBlockFile(scope: !9028, file: !904, discriminator: 2)
!9081 = !DILocation(line: 874, column: 21, scope: !9080)
!9082 = distinct !{!9082, !9083}
!9083 = !DILocation(line: 874, column: 21, scope: !9024)
!9084 = !DILocation(line: 885, column: 13, scope: !7555)
!9085 = !DILocation(line: 741, column: 33, scope: !9086)
!9086 = !DILexicalBlockFile(scope: !7556, file: !904, discriminator: 2)
!9087 = !DILocation(line: 741, column: 13, scope: !9086)
!9088 = distinct !{!9088, !9089}
!9089 = !DILocation(line: 741, column: 13, scope: !7558)
!9090 = !DILocation(line: 886, column: 9, scope: !7558)
!9091 = !DILocation(line: 737, column: 58, scope: !9092)
!9092 = !DILexicalBlockFile(scope: !7559, file: !904, discriminator: 2)
!9093 = !DILocation(line: 737, column: 9, scope: !9092)
!9094 = distinct !{!9094, !9095}
!9095 = !DILocation(line: 737, column: 9, scope: !7561)
!9096 = !DILocation(line: 887, column: 5, scope: !7561)
!9097 = !DILocation(line: 736, column: 55, scope: !9098)
!9098 = !DILexicalBlockFile(scope: !7562, file: !904, discriminator: 2)
!9099 = !DILocation(line: 736, column: 5, scope: !9098)
!9100 = distinct !{!9100, !9101}
!9101 = !DILocation(line: 736, column: 5, scope: !7543)
!9102 = !DILocation(line: 889, column: 5, scope: !7543)
!9103 = !DILocation(line: 890, column: 1, scope: !7543)
!9104 = distinct !DISubprogram(name: "unpack_block_qpis", scope: !904, file: !904, line: 892, type: !5653, isLocal: true, isDefinition: true, scopeLine: 893, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!9105 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !9106)
!9106 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !9107)
!9107 = distinct !DILocation(line: 909, column: 26, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !904, line: 903, column: 12)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !904, line: 897, column: 63)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !904, line: 897, column: 5)
!9111 = distinct !DILexicalBlock(scope: !9104, file: !904, line: 897, column: 5)
!9112 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !9113)
!9113 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !9107)
!9114 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !9115)
!9115 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !9107)
!9116 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !9107)
!9117 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !9107)
!9118 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !9107)
!9119 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !9107)
!9120 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !9107)
!9121 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !9107)
!9122 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !9107)
!9123 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !9107)
!9124 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !9107)
!9125 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !9107)
!9126 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !9107)
!9127 = !DILocalVariable(name: "s", arg: 1, scope: !9104, file: !904, line: 892, type: !1707)
!9128 = !DILocation(line: 892, column: 48, scope: !9104)
!9129 = !DILocalVariable(name: "gb", arg: 2, scope: !9104, file: !904, line: 892, type: !4245)
!9130 = !DILocation(line: 892, column: 66, scope: !9104)
!9131 = !DILocalVariable(name: "qpi", scope: !9104, file: !904, line: 894, type: !890)
!9132 = !DILocation(line: 894, column: 9, scope: !9104)
!9133 = !DILocalVariable(name: "i", scope: !9104, file: !904, line: 894, type: !890)
!9134 = !DILocation(line: 894, column: 14, scope: !9104)
!9135 = !DILocalVariable(name: "j", scope: !9104, file: !904, line: 894, type: !890)
!9136 = !DILocation(line: 894, column: 17, scope: !9104)
!9137 = !DILocalVariable(name: "bit", scope: !9104, file: !904, line: 894, type: !890)
!9138 = !DILocation(line: 894, column: 20, scope: !9104)
!9139 = !DILocalVariable(name: "run_length", scope: !9104, file: !904, line: 894, type: !890)
!9140 = !DILocation(line: 894, column: 25, scope: !9104)
!9141 = !DILocalVariable(name: "blocks_decoded", scope: !9104, file: !904, line: 894, type: !890)
!9142 = !DILocation(line: 894, column: 37, scope: !9104)
!9143 = !DILocalVariable(name: "num_blocks_at_qpi", scope: !9104, file: !904, line: 894, type: !890)
!9144 = !DILocation(line: 894, column: 53, scope: !9104)
!9145 = !DILocalVariable(name: "num_blocks", scope: !9104, file: !904, line: 895, type: !890)
!9146 = !DILocation(line: 895, column: 9, scope: !9104)
!9147 = !DILocation(line: 895, column: 22, scope: !9104)
!9148 = !DILocation(line: 895, column: 25, scope: !9104)
!9149 = !DILocation(line: 897, column: 14, scope: !9111)
!9150 = !DILocation(line: 897, column: 10, scope: !9111)
!9151 = !DILocation(line: 897, column: 19, scope: !9152)
!9152 = !DILexicalBlockFile(scope: !9110, file: !904, discriminator: 1)
!9153 = !DILocation(line: 897, column: 25, scope: !9152)
!9154 = !DILocation(line: 897, column: 28, scope: !9152)
!9155 = !DILocation(line: 897, column: 33, scope: !9152)
!9156 = !DILocation(line: 897, column: 23, scope: !9152)
!9157 = !DILocation(line: 897, column: 37, scope: !9152)
!9158 = !DILocation(line: 897, column: 40, scope: !9159)
!9159 = !DILexicalBlockFile(scope: !9110, file: !904, discriminator: 2)
!9160 = !DILocation(line: 897, column: 51, scope: !9159)
!9161 = !DILocation(line: 897, column: 5, scope: !9162)
!9162 = !DILexicalBlockFile(scope: !9111, file: !904, discriminator: 3)
!9163 = !DILocation(line: 898, column: 48, scope: !9109)
!9164 = !DILocation(line: 898, column: 28, scope: !9109)
!9165 = !DILocation(line: 898, column: 11, scope: !9109)
!9166 = !DILocation(line: 900, column: 25, scope: !9109)
!9167 = !DILocation(line: 900, column: 15, scope: !9109)
!9168 = !DILocation(line: 900, column: 29, scope: !9109)
!9169 = !DILocation(line: 900, column: 13, scope: !9109)
!9170 = !DILocation(line: 901, column: 20, scope: !9109)
!9171 = !DILocation(line: 903, column: 9, scope: !9109)
!9172 = distinct !{!9172, !9171}
!9173 = !DILocation(line: 904, column: 17, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9108, file: !904, line: 904, column: 17)
!9175 = !DILocation(line: 904, column: 28, scope: !9174)
!9176 = !DILocation(line: 904, column: 17, scope: !9108)
!9177 = !DILocation(line: 905, column: 33, scope: !9174)
!9178 = !DILocation(line: 905, column: 23, scope: !9174)
!9179 = !DILocation(line: 905, column: 21, scope: !9174)
!9180 = !DILocation(line: 905, column: 17, scope: !9174)
!9181 = !DILocation(line: 907, column: 21, scope: !9174)
!9182 = !DILocation(line: 909, column: 35, scope: !9108)
!9183 = !DILocation(line: 909, column: 39, scope: !9108)
!9184 = !DILocation(line: 909, column: 42, scope: !9108)
!9185 = !DILocation(line: 909, column: 68, scope: !9108)
!9186 = !DILocation(line: 909, column: 26, scope: !9108)
!9187 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !9107)
!9188 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !9107)
!9189 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !9107)
!9190 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !9107)
!9191 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !9107)
!9192 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !9107)
!9193 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !9107)
!9194 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !9107)
!9195 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !9107)
!9196 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !9107)
!9197 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !9107)
!9198 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !9115)
!9199 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !9115)
!9200 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !9115)
!9201 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !9115)
!9202 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !9115)
!9203 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !9115)
!9204 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !9115)
!9205 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !9115)
!9206 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !9115)
!9207 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !9115)
!9208 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !9115)
!9209 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !9115)
!9210 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !9115)
!9211 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !9115)
!9212 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !9115)
!9213 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !9115)
!9214 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !9115)
!9215 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !9115)
!9216 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !9107)
!9217 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !9107)
!9218 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !9107)
!9219 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !9107)
!9220 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !9107)
!9221 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !9107)
!9222 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !9107)
!9223 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !9107)
!9224 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !9107)
!9225 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !9107)
!9226 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !9107)
!9227 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !9107)
!9228 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !9107)
!9229 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !9107)
!9230 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !9107)
!9231 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !9107)
!9232 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !9107)
!9233 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !9107)
!9234 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !9107)
!9235 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !9107)
!9236 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !9107)
!9237 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !9107)
!9238 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !9107)
!9239 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !9107)
!9240 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !9107)
!9241 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !9107)
!9242 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !9107)
!9243 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !9107)
!9244 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !9107)
!9245 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !9107)
!9246 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !9107)
!9247 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !9107)
!9248 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !9107)
!9249 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !9107)
!9250 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !9107)
!9251 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !9107)
!9252 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !9107)
!9253 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !9107)
!9254 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !9107)
!9255 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !9107)
!9256 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !9107)
!9257 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !9113)
!9258 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !9113)
!9259 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !9113)
!9260 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !9113)
!9261 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !9113)
!9262 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !9113)
!9263 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !9113)
!9264 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !9113)
!9265 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !9113)
!9266 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !9113)
!9267 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !9113)
!9268 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !9113)
!9269 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !9113)
!9270 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !9113)
!9271 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !9113)
!9272 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !9113)
!9273 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !9113)
!9274 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !9113)
!9275 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !9107)
!9276 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !9107)
!9277 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !9107)
!9278 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !9107)
!9279 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !9107)
!9280 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !9107)
!9281 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !9107)
!9282 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !9107)
!9283 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !9107)
!9284 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !9107)
!9285 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !9107)
!9286 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !9107)
!9287 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !9107)
!9288 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !9107)
!9289 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !9107)
!9290 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !9107)
!9291 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !9107)
!9292 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !9107)
!9293 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !9107)
!9294 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !9107)
!9295 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !9107)
!9296 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !9107)
!9297 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !9107)
!9298 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !9107)
!9299 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !9107)
!9300 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !9107)
!9301 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !9107)
!9302 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !9107)
!9303 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !9107)
!9304 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !9107)
!9305 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !9107)
!9306 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !9107)
!9307 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !9107)
!9308 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !9107)
!9309 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !9107)
!9310 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !9107)
!9311 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !9107)
!9312 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !9107)
!9313 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !9107)
!9314 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !9107)
!9315 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !9107)
!9316 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !9107)
!9317 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !9107)
!9318 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !9107)
!9319 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !9107)
!9320 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !9107)
!9321 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !9106)
!9322 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !9106)
!9323 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !9106)
!9324 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !9106)
!9325 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !9106)
!9326 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !9106)
!9327 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !9106)
!9328 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !9106)
!9329 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !9106)
!9330 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !9106)
!9331 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !9106)
!9332 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !9106)
!9333 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !9106)
!9334 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !9106)
!9335 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !9106)
!9336 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !9106)
!9337 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !9106)
!9338 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !9106)
!9339 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !9107)
!9340 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !9107)
!9341 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !9107)
!9342 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !9107)
!9343 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !9107)
!9344 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !9107)
!9345 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !9107)
!9346 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !9107)
!9347 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !9107)
!9348 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !9107)
!9349 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !9107)
!9350 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !9107)
!9351 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !9107)
!9352 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !9107)
!9353 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !9107)
!9354 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !9107)
!9355 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !9107)
!9356 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !9107)
!9357 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !9107)
!9358 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !9107)
!9359 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !9107)
!9360 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !9107)
!9361 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !9107)
!9362 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !9107)
!9363 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !9107)
!9364 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !9107)
!9365 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !9107)
!9366 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !9107)
!9367 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !9107)
!9368 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !9107)
!9369 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !9107)
!9370 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !9107)
!9371 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !9107)
!9372 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !9107)
!9373 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !9107)
!9374 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !9107)
!9375 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !9107)
!9376 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !9107)
!9377 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !9107)
!9378 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !9107)
!9379 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !9107)
!9380 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !9107)
!9381 = !DILocation(line: 909, column: 81, scope: !9108)
!9382 = !DILocation(line: 909, column: 24, scope: !9108)
!9383 = !DILocation(line: 910, column: 17, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9108, file: !904, line: 910, column: 17)
!9385 = !DILocation(line: 910, column: 28, scope: !9384)
!9386 = !DILocation(line: 910, column: 17, scope: !9108)
!9387 = !DILocation(line: 911, column: 40, scope: !9384)
!9388 = !DILocation(line: 911, column: 31, scope: !9384)
!9389 = !DILocation(line: 911, column: 28, scope: !9384)
!9390 = !DILocation(line: 911, column: 17, scope: !9384)
!9391 = !DILocation(line: 912, column: 31, scope: !9108)
!9392 = !DILocation(line: 912, column: 28, scope: !9108)
!9393 = !DILocation(line: 914, column: 18, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9108, file: !904, line: 914, column: 17)
!9395 = !DILocation(line: 914, column: 17, scope: !9108)
!9396 = !DILocation(line: 915, column: 38, scope: !9394)
!9397 = !DILocation(line: 915, column: 35, scope: !9394)
!9398 = !DILocation(line: 915, column: 17, scope: !9394)
!9399 = !DILocation(line: 917, column: 20, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9108, file: !904, line: 917, column: 13)
!9401 = !DILocation(line: 917, column: 18, scope: !9400)
!9402 = !DILocation(line: 917, column: 25, scope: !9403)
!9403 = !DILexicalBlockFile(scope: !9404, file: !904, discriminator: 1)
!9404 = distinct !DILexicalBlock(scope: !9400, file: !904, line: 917, column: 13)
!9405 = !DILocation(line: 917, column: 29, scope: !9403)
!9406 = !DILocation(line: 917, column: 27, scope: !9403)
!9407 = !DILocation(line: 917, column: 13, scope: !9403)
!9408 = !DILocation(line: 918, column: 21, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !904, line: 918, column: 21)
!9410 = distinct !DILexicalBlock(scope: !9404, file: !904, line: 917, column: 46)
!9411 = !DILocation(line: 918, column: 26, scope: !9409)
!9412 = !DILocation(line: 918, column: 29, scope: !9409)
!9413 = !DILocation(line: 918, column: 23, scope: !9409)
!9414 = !DILocation(line: 918, column: 21, scope: !9410)
!9415 = !DILocation(line: 919, column: 21, scope: !9409)
!9416 = !DILocation(line: 921, column: 64, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9410, file: !904, line: 921, column: 21)
!9418 = !DILocation(line: 921, column: 38, scope: !9417)
!9419 = !DILocation(line: 921, column: 41, scope: !9417)
!9420 = !DILocation(line: 921, column: 21, scope: !9417)
!9421 = !DILocation(line: 921, column: 24, scope: !9417)
!9422 = !DILocation(line: 921, column: 68, scope: !9417)
!9423 = !DILocation(line: 921, column: 75, scope: !9417)
!9424 = !DILocation(line: 921, column: 72, scope: !9417)
!9425 = !DILocation(line: 921, column: 21, scope: !9410)
!9426 = !DILocation(line: 922, column: 75, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9417, file: !904, line: 921, column: 80)
!9428 = !DILocation(line: 922, column: 64, scope: !9427)
!9429 = !DILocation(line: 922, column: 38, scope: !9427)
!9430 = !DILocation(line: 922, column: 41, scope: !9427)
!9431 = !DILocation(line: 922, column: 21, scope: !9427)
!9432 = !DILocation(line: 922, column: 24, scope: !9427)
!9433 = !DILocation(line: 922, column: 68, scope: !9427)
!9434 = !DILocation(line: 922, column: 72, scope: !9427)
!9435 = !DILocation(line: 923, column: 22, scope: !9427)
!9436 = !DILocation(line: 924, column: 17, scope: !9427)
!9437 = !DILocation(line: 925, column: 13, scope: !9410)
!9438 = !DILocation(line: 917, column: 42, scope: !9439)
!9439 = !DILexicalBlockFile(scope: !9404, file: !904, discriminator: 2)
!9440 = !DILocation(line: 917, column: 13, scope: !9439)
!9441 = distinct !{!9441, !9442}
!9442 = !DILocation(line: 917, column: 13, scope: !9108)
!9443 = !DILocation(line: 926, column: 9, scope: !9108)
!9444 = !DILocation(line: 926, column: 18, scope: !9445)
!9445 = !DILexicalBlockFile(scope: !9109, file: !904, discriminator: 1)
!9446 = !DILocation(line: 926, column: 35, scope: !9445)
!9447 = !DILocation(line: 926, column: 33, scope: !9445)
!9448 = !DILocation(line: 926, column: 46, scope: !9445)
!9449 = !DILocation(line: 926, column: 63, scope: !9450)
!9450 = !DILexicalBlockFile(scope: !9109, file: !904, discriminator: 2)
!9451 = !DILocation(line: 926, column: 49, scope: !9450)
!9452 = !DILocation(line: 926, column: 67, scope: !9450)
!9453 = !DILocation(line: 926, column: 9, scope: !9454)
!9454 = !DILexicalBlockFile(scope: !9108, file: !904, discriminator: 3)
!9455 = !DILocation(line: 928, column: 23, scope: !9109)
!9456 = !DILocation(line: 928, column: 20, scope: !9109)
!9457 = !DILocation(line: 929, column: 5, scope: !9109)
!9458 = !DILocation(line: 897, column: 59, scope: !9459)
!9459 = !DILexicalBlockFile(scope: !9110, file: !904, discriminator: 4)
!9460 = !DILocation(line: 897, column: 5, scope: !9459)
!9461 = distinct !{!9461, !9462}
!9462 = !DILocation(line: 897, column: 5, scope: !9104)
!9463 = !DILocation(line: 931, column: 5, scope: !9104)
!9464 = !DILocation(line: 932, column: 1, scope: !9104)
!9465 = distinct !DISubprogram(name: "unpack_dct_coeffs", scope: !904, file: !904, line: 1078, type: !5653, isLocal: true, isDefinition: true, scopeLine: 1079, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!9466 = !DILocalVariable(name: "s", arg: 1, scope: !9465, file: !904, line: 1078, type: !1707)
!9467 = !DILocation(line: 1078, column: 48, scope: !9465)
!9468 = !DILocalVariable(name: "gb", arg: 2, scope: !9465, file: !904, line: 1078, type: !4245)
!9469 = !DILocation(line: 1078, column: 66, scope: !9465)
!9470 = !DILocalVariable(name: "i", scope: !9465, file: !904, line: 1080, type: !890)
!9471 = !DILocation(line: 1080, column: 9, scope: !9465)
!9472 = !DILocalVariable(name: "dc_y_table", scope: !9465, file: !904, line: 1081, type: !890)
!9473 = !DILocation(line: 1081, column: 9, scope: !9465)
!9474 = !DILocalVariable(name: "dc_c_table", scope: !9465, file: !904, line: 1082, type: !890)
!9475 = !DILocation(line: 1082, column: 9, scope: !9465)
!9476 = !DILocalVariable(name: "ac_y_table", scope: !9465, file: !904, line: 1083, type: !890)
!9477 = !DILocation(line: 1083, column: 9, scope: !9465)
!9478 = !DILocalVariable(name: "ac_c_table", scope: !9465, file: !904, line: 1084, type: !890)
!9479 = !DILocation(line: 1084, column: 9, scope: !9465)
!9480 = !DILocalVariable(name: "residual_eob_run", scope: !9465, file: !904, line: 1085, type: !890)
!9481 = !DILocation(line: 1085, column: 9, scope: !9465)
!9482 = !DILocalVariable(name: "y_tables", scope: !9465, file: !904, line: 1086, type: !9483)
!9483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9484, size: 4096, align: 64, elements: !1651)
!9484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64, align: 64)
!9485 = !DILocation(line: 1086, column: 10, scope: !9465)
!9486 = !DILocalVariable(name: "c_tables", scope: !9465, file: !904, line: 1087, type: !9483)
!9487 = !DILocation(line: 1087, column: 10, scope: !9465)
!9488 = !DILocation(line: 1089, column: 27, scope: !9465)
!9489 = !DILocation(line: 1089, column: 30, scope: !9465)
!9490 = !DILocation(line: 1089, column: 5, scope: !9465)
!9491 = !DILocation(line: 1089, column: 8, scope: !9465)
!9492 = !DILocation(line: 1089, column: 25, scope: !9465)
!9493 = !DILocation(line: 1091, column: 23, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1091, column: 9)
!9495 = !DILocation(line: 1091, column: 9, scope: !9494)
!9496 = !DILocation(line: 1091, column: 27, scope: !9494)
!9497 = !DILocation(line: 1091, column: 9, scope: !9465)
!9498 = !DILocation(line: 1092, column: 9, scope: !9494)
!9499 = !DILocation(line: 1095, column: 27, scope: !9465)
!9500 = !DILocation(line: 1095, column: 18, scope: !9465)
!9501 = !DILocation(line: 1095, column: 16, scope: !9465)
!9502 = !DILocation(line: 1096, column: 27, scope: !9465)
!9503 = !DILocation(line: 1096, column: 18, scope: !9465)
!9504 = !DILocation(line: 1096, column: 16, scope: !9465)
!9505 = !DILocation(line: 1099, column: 36, scope: !9465)
!9506 = !DILocation(line: 1099, column: 39, scope: !9465)
!9507 = !DILocation(line: 1099, column: 54, scope: !9465)
!9508 = !DILocation(line: 1099, column: 44, scope: !9465)
!9509 = !DILocation(line: 1099, column: 47, scope: !9465)
!9510 = !DILocation(line: 1100, column: 39, scope: !9465)
!9511 = !DILocation(line: 1099, column: 24, scope: !9465)
!9512 = !DILocation(line: 1099, column: 22, scope: !9465)
!9513 = !DILocation(line: 1101, column: 9, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1101, column: 9)
!9515 = !DILocation(line: 1101, column: 26, scope: !9514)
!9516 = !DILocation(line: 1101, column: 9, scope: !9465)
!9517 = !DILocation(line: 1102, column: 16, scope: !9514)
!9518 = !DILocation(line: 1102, column: 9, scope: !9514)
!9519 = !DILocation(line: 1103, column: 23, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1103, column: 9)
!9521 = !DILocation(line: 1103, column: 9, scope: !9520)
!9522 = !DILocation(line: 1103, column: 27, scope: !9520)
!9523 = !DILocation(line: 1103, column: 9, scope: !9465)
!9524 = !DILocation(line: 1104, column: 9, scope: !9520)
!9525 = !DILocation(line: 1107, column: 27, scope: !9465)
!9526 = !DILocation(line: 1107, column: 33, scope: !9465)
!9527 = !DILocation(line: 1107, column: 36, scope: !9465)
!9528 = !DILocation(line: 1107, column: 55, scope: !9465)
!9529 = !DILocation(line: 1107, column: 58, scope: !9465)
!9530 = !DILocation(line: 1107, column: 5, scope: !9465)
!9531 = !DILocation(line: 1110, column: 36, scope: !9465)
!9532 = !DILocation(line: 1110, column: 39, scope: !9465)
!9533 = !DILocation(line: 1110, column: 54, scope: !9465)
!9534 = !DILocation(line: 1110, column: 44, scope: !9465)
!9535 = !DILocation(line: 1110, column: 47, scope: !9465)
!9536 = !DILocation(line: 1111, column: 39, scope: !9465)
!9537 = !DILocation(line: 1110, column: 24, scope: !9465)
!9538 = !DILocation(line: 1110, column: 22, scope: !9465)
!9539 = !DILocation(line: 1112, column: 9, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1112, column: 9)
!9541 = !DILocation(line: 1112, column: 26, scope: !9540)
!9542 = !DILocation(line: 1112, column: 9, scope: !9465)
!9543 = !DILocation(line: 1113, column: 16, scope: !9540)
!9544 = !DILocation(line: 1113, column: 9, scope: !9540)
!9545 = !DILocation(line: 1114, column: 36, scope: !9465)
!9546 = !DILocation(line: 1114, column: 39, scope: !9465)
!9547 = !DILocation(line: 1114, column: 54, scope: !9465)
!9548 = !DILocation(line: 1114, column: 44, scope: !9465)
!9549 = !DILocation(line: 1114, column: 47, scope: !9465)
!9550 = !DILocation(line: 1115, column: 39, scope: !9465)
!9551 = !DILocation(line: 1114, column: 24, scope: !9465)
!9552 = !DILocation(line: 1114, column: 22, scope: !9465)
!9553 = !DILocation(line: 1116, column: 9, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1116, column: 9)
!9555 = !DILocation(line: 1116, column: 26, scope: !9554)
!9556 = !DILocation(line: 1116, column: 9, scope: !9465)
!9557 = !DILocation(line: 1117, column: 16, scope: !9554)
!9558 = !DILocation(line: 1117, column: 9, scope: !9554)
!9559 = !DILocation(line: 1120, column: 11, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1120, column: 9)
!9561 = !DILocation(line: 1120, column: 14, scope: !9560)
!9562 = !DILocation(line: 1120, column: 21, scope: !9560)
!9563 = !DILocation(line: 1120, column: 27, scope: !9560)
!9564 = !DILocation(line: 1120, column: 9, scope: !9465)
!9565 = !DILocation(line: 1121, column: 31, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9560, file: !904, line: 1120, column: 41)
!9567 = !DILocation(line: 1121, column: 34, scope: !9566)
!9568 = !DILocation(line: 1121, column: 37, scope: !9566)
!9569 = !DILocation(line: 1122, column: 31, scope: !9566)
!9570 = !DILocation(line: 1122, column: 34, scope: !9566)
!9571 = !DILocation(line: 1122, column: 53, scope: !9566)
!9572 = !DILocation(line: 1122, column: 56, scope: !9566)
!9573 = !DILocation(line: 1121, column: 9, scope: !9566)
!9574 = !DILocation(line: 1123, column: 31, scope: !9566)
!9575 = !DILocation(line: 1123, column: 34, scope: !9566)
!9576 = !DILocation(line: 1123, column: 37, scope: !9566)
!9577 = !DILocation(line: 1124, column: 31, scope: !9566)
!9578 = !DILocation(line: 1124, column: 34, scope: !9566)
!9579 = !DILocation(line: 1124, column: 53, scope: !9566)
!9580 = !DILocation(line: 1124, column: 56, scope: !9566)
!9581 = !DILocation(line: 1123, column: 9, scope: !9566)
!9582 = !DILocation(line: 1125, column: 5, scope: !9566)
!9583 = !DILocation(line: 1127, column: 23, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1127, column: 9)
!9585 = !DILocation(line: 1127, column: 9, scope: !9584)
!9586 = !DILocation(line: 1127, column: 27, scope: !9584)
!9587 = !DILocation(line: 1127, column: 9, scope: !9465)
!9588 = !DILocation(line: 1128, column: 9, scope: !9584)
!9589 = !DILocation(line: 1130, column: 27, scope: !9465)
!9590 = !DILocation(line: 1130, column: 18, scope: !9465)
!9591 = !DILocation(line: 1130, column: 16, scope: !9465)
!9592 = !DILocation(line: 1131, column: 27, scope: !9465)
!9593 = !DILocation(line: 1131, column: 18, scope: !9465)
!9594 = !DILocation(line: 1131, column: 16, scope: !9465)
!9595 = !DILocation(line: 1134, column: 12, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1134, column: 5)
!9597 = !DILocation(line: 1134, column: 10, scope: !9596)
!9598 = !DILocation(line: 1134, column: 17, scope: !9599)
!9599 = !DILexicalBlockFile(scope: !9600, file: !904, discriminator: 1)
!9600 = distinct !DILexicalBlock(scope: !9596, file: !904, line: 1134, column: 5)
!9601 = !DILocation(line: 1134, column: 19, scope: !9599)
!9602 = !DILocation(line: 1134, column: 5, scope: !9599)
!9603 = !DILocation(line: 1135, column: 36, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !904, line: 1134, column: 30)
!9605 = !DILocation(line: 1135, column: 24, scope: !9604)
!9606 = !DILocation(line: 1135, column: 27, scope: !9604)
!9607 = !DILocation(line: 1135, column: 18, scope: !9604)
!9608 = !DILocation(line: 1135, column: 9, scope: !9604)
!9609 = !DILocation(line: 1135, column: 21, scope: !9604)
!9610 = !DILocation(line: 1136, column: 36, scope: !9604)
!9611 = !DILocation(line: 1136, column: 24, scope: !9604)
!9612 = !DILocation(line: 1136, column: 27, scope: !9604)
!9613 = !DILocation(line: 1136, column: 18, scope: !9604)
!9614 = !DILocation(line: 1136, column: 9, scope: !9604)
!9615 = !DILocation(line: 1136, column: 21, scope: !9604)
!9616 = !DILocation(line: 1137, column: 5, scope: !9604)
!9617 = !DILocation(line: 1134, column: 26, scope: !9618)
!9618 = !DILexicalBlockFile(scope: !9600, file: !904, discriminator: 2)
!9619 = !DILocation(line: 1134, column: 5, scope: !9618)
!9620 = distinct !{!9620, !9621}
!9621 = !DILocation(line: 1134, column: 5, scope: !9465)
!9622 = !DILocation(line: 1138, column: 12, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1138, column: 5)
!9624 = !DILocation(line: 1138, column: 10, scope: !9623)
!9625 = !DILocation(line: 1138, column: 17, scope: !9626)
!9626 = !DILexicalBlockFile(scope: !9627, file: !904, discriminator: 1)
!9627 = distinct !DILexicalBlock(scope: !9623, file: !904, line: 1138, column: 5)
!9628 = !DILocation(line: 1138, column: 19, scope: !9626)
!9629 = !DILocation(line: 1138, column: 5, scope: !9626)
!9630 = !DILocation(line: 1139, column: 36, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9627, file: !904, line: 1138, column: 31)
!9632 = !DILocation(line: 1139, column: 24, scope: !9631)
!9633 = !DILocation(line: 1139, column: 27, scope: !9631)
!9634 = !DILocation(line: 1139, column: 18, scope: !9631)
!9635 = !DILocation(line: 1139, column: 9, scope: !9631)
!9636 = !DILocation(line: 1139, column: 21, scope: !9631)
!9637 = !DILocation(line: 1140, column: 36, scope: !9631)
!9638 = !DILocation(line: 1140, column: 24, scope: !9631)
!9639 = !DILocation(line: 1140, column: 27, scope: !9631)
!9640 = !DILocation(line: 1140, column: 18, scope: !9631)
!9641 = !DILocation(line: 1140, column: 9, scope: !9631)
!9642 = !DILocation(line: 1140, column: 21, scope: !9631)
!9643 = !DILocation(line: 1141, column: 5, scope: !9631)
!9644 = !DILocation(line: 1138, column: 27, scope: !9645)
!9645 = !DILexicalBlockFile(scope: !9627, file: !904, discriminator: 2)
!9646 = !DILocation(line: 1138, column: 5, scope: !9645)
!9647 = distinct !{!9647, !9648}
!9648 = !DILocation(line: 1138, column: 5, scope: !9465)
!9649 = !DILocation(line: 1142, column: 12, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1142, column: 5)
!9651 = !DILocation(line: 1142, column: 10, scope: !9650)
!9652 = !DILocation(line: 1142, column: 18, scope: !9653)
!9653 = !DILexicalBlockFile(scope: !9654, file: !904, discriminator: 1)
!9654 = distinct !DILexicalBlock(scope: !9650, file: !904, line: 1142, column: 5)
!9655 = !DILocation(line: 1142, column: 20, scope: !9653)
!9656 = !DILocation(line: 1142, column: 5, scope: !9653)
!9657 = !DILocation(line: 1143, column: 36, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9654, file: !904, line: 1142, column: 32)
!9659 = !DILocation(line: 1143, column: 24, scope: !9658)
!9660 = !DILocation(line: 1143, column: 27, scope: !9658)
!9661 = !DILocation(line: 1143, column: 18, scope: !9658)
!9662 = !DILocation(line: 1143, column: 9, scope: !9658)
!9663 = !DILocation(line: 1143, column: 21, scope: !9658)
!9664 = !DILocation(line: 1144, column: 36, scope: !9658)
!9665 = !DILocation(line: 1144, column: 24, scope: !9658)
!9666 = !DILocation(line: 1144, column: 27, scope: !9658)
!9667 = !DILocation(line: 1144, column: 18, scope: !9658)
!9668 = !DILocation(line: 1144, column: 9, scope: !9658)
!9669 = !DILocation(line: 1144, column: 21, scope: !9658)
!9670 = !DILocation(line: 1145, column: 5, scope: !9658)
!9671 = !DILocation(line: 1142, column: 28, scope: !9672)
!9672 = !DILexicalBlockFile(scope: !9654, file: !904, discriminator: 2)
!9673 = !DILocation(line: 1142, column: 5, scope: !9672)
!9674 = distinct !{!9674, !9675}
!9675 = !DILocation(line: 1142, column: 5, scope: !9465)
!9676 = !DILocation(line: 1146, column: 12, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1146, column: 5)
!9678 = !DILocation(line: 1146, column: 10, scope: !9677)
!9679 = !DILocation(line: 1146, column: 18, scope: !9680)
!9680 = !DILexicalBlockFile(scope: !9681, file: !904, discriminator: 1)
!9681 = distinct !DILexicalBlock(scope: !9677, file: !904, line: 1146, column: 5)
!9682 = !DILocation(line: 1146, column: 20, scope: !9680)
!9683 = !DILocation(line: 1146, column: 5, scope: !9680)
!9684 = !DILocation(line: 1147, column: 36, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9681, file: !904, line: 1146, column: 32)
!9686 = !DILocation(line: 1147, column: 24, scope: !9685)
!9687 = !DILocation(line: 1147, column: 27, scope: !9685)
!9688 = !DILocation(line: 1147, column: 18, scope: !9685)
!9689 = !DILocation(line: 1147, column: 9, scope: !9685)
!9690 = !DILocation(line: 1147, column: 21, scope: !9685)
!9691 = !DILocation(line: 1148, column: 36, scope: !9685)
!9692 = !DILocation(line: 1148, column: 24, scope: !9685)
!9693 = !DILocation(line: 1148, column: 27, scope: !9685)
!9694 = !DILocation(line: 1148, column: 18, scope: !9685)
!9695 = !DILocation(line: 1148, column: 9, scope: !9685)
!9696 = !DILocation(line: 1148, column: 21, scope: !9685)
!9697 = !DILocation(line: 1149, column: 5, scope: !9685)
!9698 = !DILocation(line: 1146, column: 28, scope: !9699)
!9699 = !DILexicalBlockFile(scope: !9681, file: !904, discriminator: 2)
!9700 = !DILocation(line: 1146, column: 5, scope: !9699)
!9701 = distinct !{!9701, !9702}
!9702 = !DILocation(line: 1146, column: 5, scope: !9465)
!9703 = !DILocation(line: 1152, column: 12, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9465, file: !904, line: 1152, column: 5)
!9705 = !DILocation(line: 1152, column: 10, scope: !9704)
!9706 = !DILocation(line: 1152, column: 17, scope: !9707)
!9707 = !DILexicalBlockFile(scope: !9708, file: !904, discriminator: 1)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !904, line: 1152, column: 5)
!9709 = !DILocation(line: 1152, column: 19, scope: !9707)
!9710 = !DILocation(line: 1152, column: 5, scope: !9707)
!9711 = !DILocation(line: 1153, column: 40, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9708, file: !904, line: 1152, column: 31)
!9713 = !DILocation(line: 1153, column: 43, scope: !9712)
!9714 = !DILocation(line: 1153, column: 56, scope: !9712)
!9715 = !DILocation(line: 1153, column: 47, scope: !9712)
!9716 = !DILocation(line: 1153, column: 60, scope: !9712)
!9717 = !DILocation(line: 1154, column: 43, scope: !9712)
!9718 = !DILocation(line: 1153, column: 28, scope: !9712)
!9719 = !DILocation(line: 1153, column: 26, scope: !9712)
!9720 = !DILocation(line: 1155, column: 13, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9712, file: !904, line: 1155, column: 13)
!9722 = !DILocation(line: 1155, column: 30, scope: !9721)
!9723 = !DILocation(line: 1155, column: 13, scope: !9712)
!9724 = !DILocation(line: 1156, column: 20, scope: !9721)
!9725 = !DILocation(line: 1156, column: 13, scope: !9721)
!9726 = !DILocation(line: 1158, column: 40, scope: !9712)
!9727 = !DILocation(line: 1158, column: 43, scope: !9712)
!9728 = !DILocation(line: 1158, column: 56, scope: !9712)
!9729 = !DILocation(line: 1158, column: 47, scope: !9712)
!9730 = !DILocation(line: 1158, column: 60, scope: !9712)
!9731 = !DILocation(line: 1159, column: 43, scope: !9712)
!9732 = !DILocation(line: 1158, column: 28, scope: !9712)
!9733 = !DILocation(line: 1158, column: 26, scope: !9712)
!9734 = !DILocation(line: 1160, column: 13, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9712, file: !904, line: 1160, column: 13)
!9736 = !DILocation(line: 1160, column: 30, scope: !9735)
!9737 = !DILocation(line: 1160, column: 13, scope: !9712)
!9738 = !DILocation(line: 1161, column: 20, scope: !9735)
!9739 = !DILocation(line: 1161, column: 13, scope: !9735)
!9740 = !DILocation(line: 1162, column: 40, scope: !9712)
!9741 = !DILocation(line: 1162, column: 43, scope: !9712)
!9742 = !DILocation(line: 1162, column: 56, scope: !9712)
!9743 = !DILocation(line: 1162, column: 47, scope: !9712)
!9744 = !DILocation(line: 1162, column: 60, scope: !9712)
!9745 = !DILocation(line: 1163, column: 43, scope: !9712)
!9746 = !DILocation(line: 1162, column: 28, scope: !9712)
!9747 = !DILocation(line: 1162, column: 26, scope: !9712)
!9748 = !DILocation(line: 1164, column: 13, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9712, file: !904, line: 1164, column: 13)
!9750 = !DILocation(line: 1164, column: 30, scope: !9749)
!9751 = !DILocation(line: 1164, column: 13, scope: !9712)
!9752 = !DILocation(line: 1165, column: 20, scope: !9749)
!9753 = !DILocation(line: 1165, column: 13, scope: !9749)
!9754 = !DILocation(line: 1166, column: 5, scope: !9712)
!9755 = !DILocation(line: 1152, column: 27, scope: !9756)
!9756 = !DILexicalBlockFile(scope: !9708, file: !904, discriminator: 2)
!9757 = !DILocation(line: 1152, column: 5, scope: !9756)
!9758 = distinct !{!9758, !9759}
!9759 = !DILocation(line: 1152, column: 5, scope: !9465)
!9760 = !DILocation(line: 1168, column: 5, scope: !9465)
!9761 = !DILocation(line: 1169, column: 1, scope: !9465)
!9762 = distinct !DISubprogram(name: "render_slice", scope: !904, file: !904, line: 1507, type: !5414, isLocal: true, isDefinition: true, scopeLine: 1508, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!9763 = !DILocalVariable(name: "s", arg: 1, scope: !9762, file: !904, line: 1507, type: !1707)
!9764 = !DILocation(line: 1507, column: 44, scope: !9762)
!9765 = !DILocalVariable(name: "slice", arg: 2, scope: !9762, file: !904, line: 1507, type: !890)
!9766 = !DILocation(line: 1507, column: 51, scope: !9762)
!9767 = !DILocalVariable(name: "x", scope: !9762, file: !904, line: 1509, type: !890)
!9768 = !DILocation(line: 1509, column: 9, scope: !9762)
!9769 = !DILocalVariable(name: "y", scope: !9762, file: !904, line: 1509, type: !890)
!9770 = !DILocation(line: 1509, column: 12, scope: !9762)
!9771 = !DILocalVariable(name: "i", scope: !9762, file: !904, line: 1509, type: !890)
!9772 = !DILocation(line: 1509, column: 15, scope: !9762)
!9773 = !DILocalVariable(name: "j", scope: !9762, file: !904, line: 1509, type: !890)
!9774 = !DILocation(line: 1509, column: 18, scope: !9762)
!9775 = !DILocalVariable(name: "fragment", scope: !9762, file: !904, line: 1509, type: !890)
!9776 = !DILocation(line: 1509, column: 21, scope: !9762)
!9777 = !DILocalVariable(name: "block", scope: !9762, file: !904, line: 1510, type: !1778)
!9778 = !DILocation(line: 1510, column: 14, scope: !9762)
!9779 = !DILocation(line: 1510, column: 22, scope: !9762)
!9780 = !DILocation(line: 1510, column: 25, scope: !9762)
!9781 = !DILocalVariable(name: "motion_x", scope: !9762, file: !904, line: 1511, type: !890)
!9782 = !DILocation(line: 1511, column: 9, scope: !9762)
!9783 = !DILocalVariable(name: "motion_y", scope: !9762, file: !904, line: 1511, type: !890)
!9784 = !DILocation(line: 1511, column: 32, scope: !9762)
!9785 = !DILocalVariable(name: "motion_halfpel_index", scope: !9762, file: !904, line: 1512, type: !890)
!9786 = !DILocation(line: 1512, column: 9, scope: !9762)
!9787 = !DILocalVariable(name: "motion_source", scope: !9762, file: !904, line: 1513, type: !1025)
!9788 = !DILocation(line: 1513, column: 14, scope: !9762)
!9789 = !DILocalVariable(name: "plane", scope: !9762, file: !904, line: 1514, type: !890)
!9790 = !DILocation(line: 1514, column: 9, scope: !9762)
!9791 = !DILocalVariable(name: "first_pixel", scope: !9762, file: !904, line: 1514, type: !890)
!9792 = !DILocation(line: 1514, column: 16, scope: !9762)
!9793 = !DILocation(line: 1516, column: 9, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9762, file: !904, line: 1516, column: 9)
!9795 = !DILocation(line: 1516, column: 18, scope: !9794)
!9796 = !DILocation(line: 1516, column: 21, scope: !9794)
!9797 = !DILocation(line: 1516, column: 15, scope: !9794)
!9798 = !DILocation(line: 1516, column: 9, scope: !9762)
!9799 = !DILocation(line: 1517, column: 9, scope: !9794)
!9800 = !DILocation(line: 1519, column: 16, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9762, file: !904, line: 1519, column: 5)
!9802 = !DILocation(line: 1519, column: 10, scope: !9801)
!9803 = !DILocation(line: 1519, column: 21, scope: !9804)
!9804 = !DILexicalBlockFile(scope: !9805, file: !904, discriminator: 1)
!9805 = distinct !DILexicalBlock(scope: !9801, file: !904, line: 1519, column: 5)
!9806 = !DILocation(line: 1519, column: 27, scope: !9804)
!9807 = !DILocation(line: 1519, column: 5, scope: !9804)
!9808 = !DILocalVariable(name: "output_plane", scope: !9809, file: !904, line: 1520, type: !1025)
!9809 = distinct !DILexicalBlock(scope: !9805, file: !904, line: 1519, column: 41)
!9810 = !DILocation(line: 1520, column: 18, scope: !9809)
!9811 = !DILocation(line: 1520, column: 58, scope: !9809)
!9812 = !DILocation(line: 1520, column: 33, scope: !9809)
!9813 = !DILocation(line: 1520, column: 36, scope: !9809)
!9814 = !DILocation(line: 1520, column: 50, scope: !9809)
!9815 = !DILocation(line: 1520, column: 53, scope: !9809)
!9816 = !DILocation(line: 1521, column: 48, scope: !9809)
!9817 = !DILocation(line: 1521, column: 33, scope: !9809)
!9818 = !DILocation(line: 1521, column: 36, scope: !9809)
!9819 = !DILocation(line: 1520, column: 65, scope: !9809)
!9820 = !DILocalVariable(name: "last_plane", scope: !9809, file: !904, line: 1522, type: !1025)
!9821 = !DILocation(line: 1522, column: 18, scope: !9809)
!9822 = !DILocation(line: 1522, column: 53, scope: !9809)
!9823 = !DILocation(line: 1522, column: 31, scope: !9809)
!9824 = !DILocation(line: 1522, column: 34, scope: !9809)
!9825 = !DILocation(line: 1522, column: 45, scope: !9809)
!9826 = !DILocation(line: 1522, column: 48, scope: !9809)
!9827 = !DILocation(line: 1523, column: 46, scope: !9809)
!9828 = !DILocation(line: 1523, column: 31, scope: !9809)
!9829 = !DILocation(line: 1523, column: 34, scope: !9809)
!9830 = !DILocation(line: 1522, column: 60, scope: !9809)
!9831 = !DILocalVariable(name: "golden_plane", scope: !9809, file: !904, line: 1524, type: !1025)
!9832 = !DILocation(line: 1524, column: 18, scope: !9809)
!9833 = !DILocation(line: 1524, column: 57, scope: !9809)
!9834 = !DILocation(line: 1524, column: 33, scope: !9809)
!9835 = !DILocation(line: 1524, column: 36, scope: !9809)
!9836 = !DILocation(line: 1524, column: 49, scope: !9809)
!9837 = !DILocation(line: 1524, column: 52, scope: !9809)
!9838 = !DILocation(line: 1525, column: 48, scope: !9809)
!9839 = !DILocation(line: 1525, column: 33, scope: !9809)
!9840 = !DILocation(line: 1525, column: 36, scope: !9809)
!9841 = !DILocation(line: 1524, column: 64, scope: !9809)
!9842 = !DILocalVariable(name: "stride", scope: !9809, file: !904, line: 1526, type: !1746)
!9843 = !DILocation(line: 1526, column: 19, scope: !9809)
!9844 = !DILocation(line: 1526, column: 57, scope: !9809)
!9845 = !DILocation(line: 1526, column: 28, scope: !9809)
!9846 = !DILocation(line: 1526, column: 31, scope: !9809)
!9847 = !DILocation(line: 1526, column: 45, scope: !9809)
!9848 = !DILocation(line: 1526, column: 48, scope: !9809)
!9849 = !DILocalVariable(name: "plane_width", scope: !9809, file: !904, line: 1527, type: !890)
!9850 = !DILocation(line: 1527, column: 13, scope: !9809)
!9851 = !DILocation(line: 1527, column: 27, scope: !9809)
!9852 = !DILocation(line: 1527, column: 30, scope: !9809)
!9853 = !DILocation(line: 1527, column: 40, scope: !9809)
!9854 = !DILocation(line: 1527, column: 46, scope: !9809)
!9855 = !DILocation(line: 1527, column: 49, scope: !9856)
!9856 = !DILexicalBlockFile(scope: !9809, file: !904, discriminator: 1)
!9857 = !DILocation(line: 1527, column: 52, scope: !9856)
!9858 = !DILocation(line: 1527, column: 46, scope: !9856)
!9859 = !DILocation(line: 1527, column: 46, scope: !9860)
!9860 = !DILexicalBlockFile(scope: !9809, file: !904, discriminator: 2)
!9861 = !DILocation(line: 1527, column: 36, scope: !9860)
!9862 = !DILocation(line: 1527, column: 13, scope: !9860)
!9863 = !DILocalVariable(name: "plane_height", scope: !9809, file: !904, line: 1528, type: !890)
!9864 = !DILocation(line: 1528, column: 13, scope: !9809)
!9865 = !DILocation(line: 1528, column: 28, scope: !9809)
!9866 = !DILocation(line: 1528, column: 31, scope: !9809)
!9867 = !DILocation(line: 1528, column: 42, scope: !9809)
!9868 = !DILocation(line: 1528, column: 48, scope: !9809)
!9869 = !DILocation(line: 1528, column: 51, scope: !9856)
!9870 = !DILocation(line: 1528, column: 54, scope: !9856)
!9871 = !DILocation(line: 1528, column: 48, scope: !9856)
!9872 = !DILocation(line: 1528, column: 48, scope: !9860)
!9873 = !DILocation(line: 1528, column: 38, scope: !9860)
!9874 = !DILocation(line: 1528, column: 13, scope: !9860)
!9875 = !DILocalVariable(name: "motion_val", scope: !9809, file: !904, line: 1529, type: !1830)
!9876 = !DILocation(line: 1529, column: 17, scope: !9809)
!9877 = !DILocation(line: 1529, column: 50, scope: !9809)
!9878 = !DILocation(line: 1529, column: 49, scope: !9809)
!9879 = !DILocation(line: 1529, column: 48, scope: !9809)
!9880 = !DILocation(line: 1529, column: 34, scope: !9809)
!9881 = !DILocation(line: 1529, column: 37, scope: !9809)
!9882 = !DILocalVariable(name: "sb_x", scope: !9809, file: !904, line: 1531, type: !890)
!9883 = !DILocation(line: 1531, column: 13, scope: !9809)
!9884 = !DILocalVariable(name: "sb_y", scope: !9809, file: !904, line: 1531, type: !890)
!9885 = !DILocation(line: 1531, column: 19, scope: !9809)
!9886 = !DILocation(line: 1531, column: 26, scope: !9809)
!9887 = !DILocation(line: 1531, column: 37, scope: !9809)
!9888 = !DILocation(line: 1531, column: 43, scope: !9809)
!9889 = !DILocation(line: 1531, column: 46, scope: !9856)
!9890 = !DILocation(line: 1531, column: 49, scope: !9856)
!9891 = !DILocation(line: 1531, column: 43, scope: !9856)
!9892 = !DILocation(line: 1531, column: 43, scope: !9860)
!9893 = !DILocation(line: 1531, column: 32, scope: !9860)
!9894 = !DILocation(line: 1531, column: 19, scope: !9860)
!9895 = !DILocalVariable(name: "slice_height", scope: !9809, file: !904, line: 1532, type: !890)
!9896 = !DILocation(line: 1532, column: 13, scope: !9809)
!9897 = !DILocation(line: 1532, column: 28, scope: !9809)
!9898 = !DILocation(line: 1532, column: 33, scope: !9809)
!9899 = !DILocation(line: 1532, column: 41, scope: !9809)
!9900 = !DILocation(line: 1532, column: 47, scope: !9809)
!9901 = !DILocation(line: 1532, column: 50, scope: !9856)
!9902 = !DILocation(line: 1532, column: 53, scope: !9856)
!9903 = !DILocation(line: 1532, column: 47, scope: !9856)
!9904 = !DILocation(line: 1532, column: 47, scope: !9860)
!9905 = !DILocation(line: 1532, column: 37, scope: !9860)
!9906 = !DILocation(line: 1532, column: 13, scope: !9860)
!9907 = !DILocalVariable(name: "slice_width", scope: !9809, file: !904, line: 1533, type: !890)
!9908 = !DILocation(line: 1533, column: 13, scope: !9809)
!9909 = !DILocation(line: 1533, column: 27, scope: !9809)
!9910 = !DILocation(line: 1533, column: 35, scope: !9856)
!9911 = !DILocation(line: 1533, column: 38, scope: !9856)
!9912 = !DILocation(line: 1533, column: 27, scope: !9856)
!9913 = !DILocation(line: 1534, column: 36, scope: !9809)
!9914 = !DILocation(line: 1534, column: 39, scope: !9809)
!9915 = !DILocation(line: 1533, column: 27, scope: !9860)
!9916 = !DILocation(line: 1533, column: 27, scope: !9917)
!9917 = !DILexicalBlockFile(scope: !9809, file: !904, discriminator: 3)
!9918 = !DILocation(line: 1533, column: 13, scope: !9917)
!9919 = !DILocalVariable(name: "fragment_width", scope: !9809, file: !904, line: 1536, type: !890)
!9920 = !DILocation(line: 1536, column: 13, scope: !9809)
!9921 = !DILocation(line: 1536, column: 50, scope: !9809)
!9922 = !DILocation(line: 1536, column: 49, scope: !9809)
!9923 = !DILocation(line: 1536, column: 48, scope: !9809)
!9924 = !DILocation(line: 1536, column: 30, scope: !9809)
!9925 = !DILocation(line: 1536, column: 33, scope: !9809)
!9926 = !DILocalVariable(name: "fragment_height", scope: !9809, file: !904, line: 1537, type: !890)
!9927 = !DILocation(line: 1537, column: 13, scope: !9809)
!9928 = !DILocation(line: 1537, column: 52, scope: !9809)
!9929 = !DILocation(line: 1537, column: 51, scope: !9809)
!9930 = !DILocation(line: 1537, column: 50, scope: !9809)
!9931 = !DILocation(line: 1537, column: 31, scope: !9809)
!9932 = !DILocation(line: 1537, column: 34, scope: !9809)
!9933 = !DILocalVariable(name: "fragment_start", scope: !9809, file: !904, line: 1538, type: !890)
!9934 = !DILocation(line: 1538, column: 13, scope: !9809)
!9935 = !DILocation(line: 1538, column: 48, scope: !9809)
!9936 = !DILocation(line: 1538, column: 30, scope: !9809)
!9937 = !DILocation(line: 1538, column: 33, scope: !9809)
!9938 = !DILocalVariable(name: "do_await", scope: !9809, file: !904, line: 1540, type: !890)
!9939 = !DILocation(line: 1540, column: 13, scope: !9809)
!9940 = !DILocation(line: 1540, column: 25, scope: !9809)
!9941 = !DILocation(line: 1540, column: 36, scope: !9809)
!9942 = !DILocation(line: 1541, column: 25, scope: !9809)
!9943 = !DILocation(line: 1541, column: 28, scope: !9809)
!9944 = !DILocation(line: 1541, column: 35, scope: !9809)
!9945 = !DILocation(line: 1541, column: 54, scope: !9809)
!9946 = !DILocation(line: 1540, column: 36, scope: !9856)
!9947 = !DILocation(line: 1540, column: 36, scope: !9860)
!9948 = !DILocation(line: 1540, column: 13, scope: !9860)
!9949 = !DILocation(line: 1543, column: 14, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9809, file: !904, line: 1543, column: 13)
!9951 = !DILocation(line: 1543, column: 17, scope: !9950)
!9952 = !DILocation(line: 1543, column: 13, scope: !9809)
!9953 = !DILocation(line: 1544, column: 23, scope: !9950)
!9954 = !DILocation(line: 1544, column: 22, scope: !9950)
!9955 = !DILocation(line: 1544, column: 20, scope: !9950)
!9956 = !DILocation(line: 1544, column: 13, scope: !9950)
!9957 = !DILocation(line: 1549, column: 9, scope: !9809)
!9958 = !DILocation(line: 1549, column: 16, scope: !9959)
!9959 = !DILexicalBlockFile(scope: !9960, file: !904, discriminator: 1)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !904, line: 1549, column: 9)
!9961 = distinct !DILexicalBlock(scope: !9809, file: !904, line: 1549, column: 9)
!9962 = !DILocation(line: 1549, column: 23, scope: !9959)
!9963 = !DILocation(line: 1549, column: 21, scope: !9959)
!9964 = !DILocation(line: 1549, column: 9, scope: !9959)
!9965 = !DILocation(line: 1551, column: 23, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !904, line: 1551, column: 13)
!9967 = distinct !DILexicalBlock(scope: !9960, file: !904, line: 1549, column: 45)
!9968 = !DILocation(line: 1551, column: 18, scope: !9966)
!9969 = !DILocation(line: 1551, column: 28, scope: !9970)
!9970 = !DILexicalBlockFile(scope: !9971, file: !904, discriminator: 1)
!9971 = distinct !DILexicalBlock(scope: !9966, file: !904, line: 1551, column: 13)
!9972 = !DILocation(line: 1551, column: 35, scope: !9970)
!9973 = !DILocation(line: 1551, column: 33, scope: !9970)
!9974 = !DILocation(line: 1551, column: 13, scope: !9970)
!9975 = !DILocation(line: 1553, column: 24, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !904, line: 1553, column: 17)
!9977 = distinct !DILexicalBlock(scope: !9971, file: !904, line: 1551, column: 56)
!9978 = !DILocation(line: 1553, column: 22, scope: !9976)
!9979 = !DILocation(line: 1553, column: 29, scope: !9980)
!9980 = !DILexicalBlockFile(scope: !9981, file: !904, discriminator: 1)
!9981 = distinct !DILexicalBlock(scope: !9976, file: !904, line: 1553, column: 17)
!9982 = !DILocation(line: 1553, column: 31, scope: !9980)
!9983 = !DILocation(line: 1553, column: 17, scope: !9980)
!9984 = !DILocation(line: 1554, column: 29, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9981, file: !904, line: 1553, column: 42)
!9986 = !DILocation(line: 1554, column: 27, scope: !9985)
!9987 = !DILocation(line: 1554, column: 51, scope: !9985)
!9988 = !DILocation(line: 1554, column: 36, scope: !9985)
!9989 = !DILocation(line: 1554, column: 34, scope: !9985)
!9990 = !DILocation(line: 1554, column: 23, scope: !9985)
!9991 = !DILocation(line: 1555, column: 29, scope: !9985)
!9992 = !DILocation(line: 1555, column: 27, scope: !9985)
!9993 = !DILocation(line: 1555, column: 51, scope: !9985)
!9994 = !DILocation(line: 1555, column: 36, scope: !9985)
!9995 = !DILocation(line: 1555, column: 34, scope: !9985)
!9996 = !DILocation(line: 1555, column: 23, scope: !9985)
!9997 = !DILocation(line: 1556, column: 32, scope: !9985)
!9998 = !DILocation(line: 1556, column: 36, scope: !9985)
!9999 = !DILocation(line: 1556, column: 34, scope: !9985)
!10000 = !DILocation(line: 1556, column: 53, scope: !9985)
!10001 = !DILocation(line: 1556, column: 51, scope: !9985)
!10002 = !DILocation(line: 1556, column: 30, scope: !9985)
!10003 = !DILocation(line: 1558, column: 25, scope: !9985)
!10004 = !DILocation(line: 1558, column: 42, scope: !9985)
!10005 = !DILocation(line: 1558, column: 40, scope: !9985)
!10006 = !DILocation(line: 1558, column: 23, scope: !9985)
!10007 = !DILocation(line: 1561, column: 25, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9985, file: !904, line: 1561, column: 25)
!10009 = !DILocation(line: 1561, column: 30, scope: !10008)
!10010 = !DILocation(line: 1561, column: 27, scope: !10008)
!10011 = !DILocation(line: 1561, column: 45, scope: !10008)
!10012 = !DILocation(line: 1561, column: 48, scope: !10013)
!10013 = !DILexicalBlockFile(scope: !10008, file: !904, discriminator: 1)
!10014 = !DILocation(line: 1561, column: 53, scope: !10013)
!10015 = !DILocation(line: 1561, column: 50, scope: !10013)
!10016 = !DILocation(line: 1561, column: 25, scope: !10013)
!10017 = !DILocation(line: 1562, column: 25, scope: !10008)
!10018 = !DILocation(line: 1564, column: 39, scope: !9985)
!10019 = !DILocation(line: 1564, column: 37, scope: !9985)
!10020 = !DILocation(line: 1564, column: 35, scope: !9985)
!10021 = !DILocation(line: 1564, column: 43, scope: !9985)
!10022 = !DILocation(line: 1564, column: 41, scope: !9985)
!10023 = !DILocation(line: 1564, column: 56, scope: !9985)
!10024 = !DILocation(line: 1564, column: 54, scope: !9985)
!10025 = !DILocation(line: 1564, column: 52, scope: !9985)
!10026 = !DILocation(line: 1564, column: 50, scope: !9985)
!10027 = !DILocation(line: 1564, column: 33, scope: !9985)
!10028 = !DILocation(line: 1566, column: 25, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !9985, file: !904, line: 1566, column: 25)
!10030 = !DILocation(line: 1566, column: 34, scope: !10029)
!10031 = !DILocation(line: 1567, column: 42, scope: !10029)
!10032 = !DILocation(line: 1567, column: 25, scope: !10029)
!10033 = !DILocation(line: 1567, column: 28, scope: !10029)
!10034 = !DILocation(line: 1567, column: 45, scope: !10029)
!10035 = !DILocation(line: 1567, column: 59, scope: !10029)
!10036 = !DILocation(line: 1566, column: 25, scope: !10037)
!10037 = !DILexicalBlockFile(scope: !9985, file: !904, discriminator: 1)
!10038 = !DILocation(line: 1568, column: 45, scope: !10029)
!10039 = !DILocation(line: 1568, column: 66, scope: !10029)
!10040 = !DILocation(line: 1568, column: 49, scope: !10029)
!10041 = !DILocation(line: 1568, column: 52, scope: !10029)
!10042 = !DILocation(line: 1569, column: 56, scope: !10029)
!10043 = !DILocation(line: 1569, column: 45, scope: !10029)
!10044 = !DILocation(line: 1570, column: 51, scope: !10029)
!10045 = !DILocation(line: 1570, column: 49, scope: !10029)
!10046 = !DILocation(line: 1570, column: 57, scope: !10029)
!10047 = !DILocation(line: 1570, column: 60, scope: !10029)
!10048 = !DILocation(line: 1570, column: 54, scope: !10029)
!10049 = !DILocation(line: 1568, column: 25, scope: !10029)
!10050 = !DILocation(line: 1573, column: 42, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !9985, file: !904, line: 1573, column: 25)
!10052 = !DILocation(line: 1573, column: 25, scope: !10051)
!10053 = !DILocation(line: 1573, column: 28, scope: !10051)
!10054 = !DILocation(line: 1573, column: 45, scope: !10051)
!10055 = !DILocation(line: 1573, column: 59, scope: !10051)
!10056 = !DILocation(line: 1573, column: 25, scope: !9985)
!10057 = !DILocation(line: 1574, column: 47, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !904, line: 1574, column: 29)
!10059 = distinct !DILexicalBlock(scope: !10051, file: !904, line: 1573, column: 65)
!10060 = !DILocation(line: 1574, column: 30, scope: !10058)
!10061 = !DILocation(line: 1574, column: 33, scope: !10058)
!10062 = !DILocation(line: 1574, column: 50, scope: !10058)
!10063 = !DILocation(line: 1574, column: 64, scope: !10058)
!10064 = !DILocation(line: 1574, column: 70, scope: !10058)
!10065 = !DILocation(line: 1575, column: 47, scope: !10058)
!10066 = !DILocation(line: 1575, column: 30, scope: !10058)
!10067 = !DILocation(line: 1575, column: 33, scope: !10058)
!10068 = !DILocation(line: 1575, column: 50, scope: !10058)
!10069 = !DILocation(line: 1575, column: 64, scope: !10058)
!10070 = !DILocation(line: 1574, column: 29, scope: !10071)
!10071 = !DILexicalBlockFile(scope: !10059, file: !904, discriminator: 1)
!10072 = !DILocation(line: 1576, column: 45, scope: !10058)
!10073 = !DILocation(line: 1576, column: 43, scope: !10058)
!10074 = !DILocation(line: 1576, column: 29, scope: !10058)
!10075 = !DILocation(line: 1578, column: 45, scope: !10058)
!10076 = !DILocation(line: 1578, column: 43, scope: !10058)
!10077 = !DILocation(line: 1580, column: 42, scope: !10059)
!10078 = !DILocation(line: 1580, column: 39, scope: !10059)
!10079 = !DILocation(line: 1581, column: 46, scope: !10059)
!10080 = !DILocation(line: 1585, column: 47, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10059, file: !904, line: 1585, column: 29)
!10082 = !DILocation(line: 1585, column: 30, scope: !10081)
!10083 = !DILocation(line: 1585, column: 33, scope: !10081)
!10084 = !DILocation(line: 1585, column: 50, scope: !10081)
!10085 = !DILocation(line: 1585, column: 64, scope: !10081)
!10086 = !DILocation(line: 1585, column: 69, scope: !10081)
!10087 = !DILocation(line: 1586, column: 47, scope: !10081)
!10088 = !DILocation(line: 1586, column: 30, scope: !10081)
!10089 = !DILocation(line: 1586, column: 33, scope: !10081)
!10090 = !DILocation(line: 1586, column: 50, scope: !10081)
!10091 = !DILocation(line: 1586, column: 64, scope: !10081)
!10092 = !DILocation(line: 1585, column: 29, scope: !10071)
!10093 = !DILocalVariable(name: "src_x", scope: !10094, file: !904, line: 1587, type: !890)
!10094 = distinct !DILexicalBlock(scope: !10081, file: !904, line: 1586, column: 71)
!10095 = !DILocation(line: 1587, column: 33, scope: !10094)
!10096 = !DILocalVariable(name: "src_y", scope: !10094, file: !904, line: 1587, type: !890)
!10097 = !DILocation(line: 1587, column: 40, scope: !10094)
!10098 = !DILocation(line: 1588, column: 51, scope: !10094)
!10099 = !DILocation(line: 1588, column: 40, scope: !10094)
!10100 = !DILocation(line: 1588, column: 38, scope: !10094)
!10101 = !DILocation(line: 1589, column: 51, scope: !10094)
!10102 = !DILocation(line: 1589, column: 40, scope: !10094)
!10103 = !DILocation(line: 1589, column: 38, scope: !10094)
!10104 = !DILocation(line: 1591, column: 38, scope: !10094)
!10105 = !DILocation(line: 1591, column: 47, scope: !10094)
!10106 = !DILocation(line: 1591, column: 59, scope: !10094)
!10107 = !DILocation(line: 1591, column: 57, scope: !10094)
!10108 = !DILocation(line: 1591, column: 53, scope: !10094)
!10109 = !DILocation(line: 1591, column: 35, scope: !10094)
!10110 = !DILocation(line: 1592, column: 38, scope: !10094)
!10111 = !DILocation(line: 1592, column: 47, scope: !10094)
!10112 = !DILocation(line: 1592, column: 59, scope: !10094)
!10113 = !DILocation(line: 1592, column: 57, scope: !10094)
!10114 = !DILocation(line: 1592, column: 53, scope: !10094)
!10115 = !DILocation(line: 1592, column: 35, scope: !10094)
!10116 = !DILocation(line: 1594, column: 52, scope: !10094)
!10117 = !DILocation(line: 1594, column: 61, scope: !10094)
!10118 = !DILocation(line: 1594, column: 50, scope: !10094)
!10119 = !DILocation(line: 1595, column: 47, scope: !10094)
!10120 = !DILocation(line: 1595, column: 56, scope: !10094)
!10121 = !DILocation(line: 1595, column: 43, scope: !10094)
!10122 = !DILocation(line: 1597, column: 54, scope: !10094)
!10123 = !DILocation(line: 1597, column: 63, scope: !10094)
!10124 = !DILocation(line: 1597, column: 71, scope: !10094)
!10125 = !DILocation(line: 1597, column: 50, scope: !10094)
!10126 = !DILocation(line: 1598, column: 48, scope: !10094)
!10127 = !DILocation(line: 1598, column: 57, scope: !10094)
!10128 = !DILocation(line: 1598, column: 47, scope: !10094)
!10129 = !DILocation(line: 1598, column: 65, scope: !10094)
!10130 = !DILocation(line: 1598, column: 63, scope: !10094)
!10131 = !DILocation(line: 1598, column: 43, scope: !10094)
!10132 = !DILocation(line: 1600, column: 33, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10094, file: !904, line: 1600, column: 33)
!10134 = !DILocation(line: 1600, column: 39, scope: !10133)
!10135 = !DILocation(line: 1600, column: 43, scope: !10133)
!10136 = !DILocation(line: 1600, column: 46, scope: !10137)
!10137 = !DILexicalBlockFile(scope: !10133, file: !904, discriminator: 1)
!10138 = !DILocation(line: 1600, column: 52, scope: !10137)
!10139 = !DILocation(line: 1600, column: 56, scope: !10137)
!10140 = !DILocation(line: 1601, column: 33, scope: !10133)
!10141 = !DILocation(line: 1601, column: 39, scope: !10133)
!10142 = !DILocation(line: 1601, column: 46, scope: !10133)
!10143 = !DILocation(line: 1601, column: 43, scope: !10133)
!10144 = !DILocation(line: 1601, column: 58, scope: !10133)
!10145 = !DILocation(line: 1602, column: 33, scope: !10133)
!10146 = !DILocation(line: 1602, column: 39, scope: !10133)
!10147 = !DILocation(line: 1602, column: 46, scope: !10133)
!10148 = !DILocation(line: 1602, column: 43, scope: !10133)
!10149 = !DILocation(line: 1600, column: 33, scope: !10150)
!10150 = !DILexicalBlockFile(scope: !10094, file: !904, discriminator: 2)
!10151 = !DILocalVariable(name: "temp", scope: !10152, file: !904, line: 1603, type: !1025)
!10152 = distinct !DILexicalBlock(scope: !10133, file: !904, line: 1602, column: 60)
!10153 = !DILocation(line: 1603, column: 42, scope: !10152)
!10154 = !DILocation(line: 1603, column: 49, scope: !10152)
!10155 = !DILocation(line: 1603, column: 52, scope: !10152)
!10156 = !DILocation(line: 1604, column: 37, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10152, file: !904, line: 1604, column: 37)
!10158 = !DILocation(line: 1604, column: 44, scope: !10157)
!10159 = !DILocation(line: 1604, column: 37, scope: !10152)
!10160 = !DILocation(line: 1605, column: 49, scope: !10157)
!10161 = !DILocation(line: 1605, column: 47, scope: !10157)
!10162 = !DILocation(line: 1605, column: 42, scope: !10157)
!10163 = !DILocation(line: 1605, column: 37, scope: !10157)
!10164 = !DILocation(line: 1607, column: 33, scope: !10152)
!10165 = !DILocation(line: 1607, column: 36, scope: !10152)
!10166 = !DILocation(line: 1607, column: 41, scope: !10152)
!10167 = !DILocation(line: 1607, column: 58, scope: !10152)
!10168 = !DILocation(line: 1607, column: 64, scope: !10152)
!10169 = !DILocation(line: 1608, column: 58, scope: !10152)
!10170 = !DILocation(line: 1608, column: 66, scope: !10152)
!10171 = !DILocation(line: 1609, column: 64, scope: !10152)
!10172 = !DILocation(line: 1609, column: 71, scope: !10152)
!10173 = !DILocation(line: 1610, column: 58, scope: !10152)
!10174 = !DILocation(line: 1611, column: 58, scope: !10152)
!10175 = !DILocation(line: 1612, column: 49, scope: !10152)
!10176 = !DILocation(line: 1612, column: 47, scope: !10152)
!10177 = !DILocation(line: 1613, column: 29, scope: !10152)
!10178 = !DILocation(line: 1614, column: 25, scope: !10094)
!10179 = !DILocation(line: 1618, column: 46, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10059, file: !904, line: 1618, column: 29)
!10181 = !DILocation(line: 1618, column: 29, scope: !10180)
!10182 = !DILocation(line: 1618, column: 32, scope: !10180)
!10183 = !DILocation(line: 1618, column: 49, scope: !10180)
!10184 = !DILocation(line: 1618, column: 63, scope: !10180)
!10185 = !DILocation(line: 1618, column: 29, scope: !10059)
!10186 = !DILocation(line: 1623, column: 33, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !904, line: 1623, column: 33)
!10188 = distinct !DILexicalBlock(scope: !10180, file: !904, line: 1618, column: 69)
!10189 = !DILocation(line: 1623, column: 54, scope: !10187)
!10190 = !DILocation(line: 1623, column: 33, scope: !10188)
!10191 = !DILocation(line: 1624, column: 66, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10187, file: !904, line: 1623, column: 60)
!10193 = !DILocation(line: 1624, column: 33, scope: !10192)
!10194 = !DILocation(line: 1624, column: 36, scope: !10192)
!10195 = !DILocation(line: 1624, column: 41, scope: !10192)
!10196 = !DILocation(line: 1625, column: 37, scope: !10192)
!10197 = !DILocation(line: 1625, column: 52, scope: !10192)
!10198 = !DILocation(line: 1625, column: 50, scope: !10192)
!10199 = !DILocation(line: 1626, column: 37, scope: !10192)
!10200 = !DILocation(line: 1626, column: 52, scope: !10192)
!10201 = !DILocation(line: 1627, column: 29, scope: !10192)
!10202 = !DILocalVariable(name: "d", scope: !10203, file: !904, line: 1630, type: !890)
!10203 = distinct !DILexicalBlock(scope: !10187, file: !904, line: 1627, column: 36)
!10204 = !DILocation(line: 1630, column: 37, scope: !10203)
!10205 = !DILocation(line: 1630, column: 42, scope: !10203)
!10206 = !DILocation(line: 1630, column: 53, scope: !10203)
!10207 = !DILocation(line: 1630, column: 51, scope: !10203)
!10208 = !DILocation(line: 1630, column: 63, scope: !10203)
!10209 = !DILocation(line: 1631, column: 33, scope: !10203)
!10210 = !DILocation(line: 1631, column: 36, scope: !10203)
!10211 = !DILocation(line: 1631, column: 43, scope: !10203)
!10212 = !DILocation(line: 1631, column: 64, scope: !10203)
!10213 = !DILocation(line: 1631, column: 79, scope: !10203)
!10214 = !DILocation(line: 1631, column: 77, scope: !10203)
!10215 = !DILocation(line: 1632, column: 64, scope: !10203)
!10216 = !DILocation(line: 1632, column: 80, scope: !10203)
!10217 = !DILocation(line: 1632, column: 78, scope: !10203)
!10218 = !DILocation(line: 1633, column: 64, scope: !10203)
!10219 = !DILocation(line: 1633, column: 80, scope: !10203)
!10220 = !DILocation(line: 1633, column: 78, scope: !10203)
!10221 = !DILocation(line: 1633, column: 87, scope: !10203)
!10222 = !DILocation(line: 1633, column: 93, scope: !10203)
!10223 = !DILocation(line: 1633, column: 91, scope: !10203)
!10224 = !DILocation(line: 1634, column: 64, scope: !10203)
!10225 = !DILocation(line: 1636, column: 25, scope: !10188)
!10226 = !DILocation(line: 1640, column: 46, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10059, file: !904, line: 1640, column: 29)
!10228 = !DILocation(line: 1640, column: 29, scope: !10227)
!10229 = !DILocation(line: 1640, column: 32, scope: !10227)
!10230 = !DILocation(line: 1640, column: 49, scope: !10227)
!10231 = !DILocation(line: 1640, column: 63, scope: !10227)
!10232 = !DILocation(line: 1640, column: 29, scope: !10059)
!10233 = !DILocation(line: 1641, column: 41, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10227, file: !904, line: 1640, column: 69)
!10235 = !DILocation(line: 1641, column: 44, scope: !10234)
!10236 = !DILocation(line: 1641, column: 47, scope: !10234)
!10237 = !DILocation(line: 1641, column: 63, scope: !10234)
!10238 = !DILocation(line: 1641, column: 61, scope: !10234)
!10239 = !DILocation(line: 1642, column: 41, scope: !10234)
!10240 = !DILocation(line: 1642, column: 51, scope: !10234)
!10241 = !DILocation(line: 1641, column: 29, scope: !10234)
!10242 = !DILocation(line: 1643, column: 29, scope: !10234)
!10243 = !DILocation(line: 1643, column: 32, scope: !10234)
!10244 = !DILocation(line: 1643, column: 39, scope: !10234)
!10245 = !DILocation(line: 1643, column: 48, scope: !10234)
!10246 = !DILocation(line: 1643, column: 63, scope: !10234)
!10247 = !DILocation(line: 1643, column: 61, scope: !10234)
!10248 = !DILocation(line: 1644, column: 48, scope: !10234)
!10249 = !DILocation(line: 1645, column: 48, scope: !10234)
!10250 = !DILocation(line: 1646, column: 25, scope: !10234)
!10251 = !DILocation(line: 1647, column: 45, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !904, line: 1647, column: 33)
!10253 = distinct !DILexicalBlock(scope: !10227, file: !904, line: 1646, column: 32)
!10254 = !DILocation(line: 1647, column: 48, scope: !10252)
!10255 = !DILocation(line: 1647, column: 51, scope: !10252)
!10256 = !DILocation(line: 1647, column: 67, scope: !10252)
!10257 = !DILocation(line: 1647, column: 65, scope: !10252)
!10258 = !DILocation(line: 1648, column: 45, scope: !10252)
!10259 = !DILocation(line: 1648, column: 55, scope: !10252)
!10260 = !DILocation(line: 1647, column: 33, scope: !10252)
!10261 = !DILocation(line: 1647, column: 33, scope: !10253)
!10262 = !DILocation(line: 1649, column: 33, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10252, file: !904, line: 1648, column: 63)
!10264 = !DILocation(line: 1649, column: 36, scope: !10263)
!10265 = !DILocation(line: 1649, column: 43, scope: !10263)
!10266 = !DILocation(line: 1649, column: 52, scope: !10263)
!10267 = !DILocation(line: 1649, column: 67, scope: !10263)
!10268 = !DILocation(line: 1649, column: 65, scope: !10263)
!10269 = !DILocation(line: 1650, column: 52, scope: !10263)
!10270 = !DILocation(line: 1651, column: 52, scope: !10263)
!10271 = !DILocation(line: 1652, column: 29, scope: !10263)
!10272 = !DILocation(line: 1653, column: 33, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10252, file: !904, line: 1652, column: 36)
!10274 = !DILocation(line: 1653, column: 36, scope: !10273)
!10275 = !DILocation(line: 1653, column: 43, scope: !10273)
!10276 = !DILocation(line: 1653, column: 55, scope: !10273)
!10277 = !DILocation(line: 1653, column: 70, scope: !10273)
!10278 = !DILocation(line: 1653, column: 68, scope: !10273)
!10279 = !DILocation(line: 1654, column: 55, scope: !10273)
!10280 = !DILocation(line: 1654, column: 63, scope: !10273)
!10281 = !DILocation(line: 1657, column: 21, scope: !10059)
!10282 = !DILocation(line: 1659, column: 25, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10051, file: !904, line: 1657, column: 28)
!10284 = !DILocation(line: 1659, column: 28, scope: !10283)
!10285 = !DILocation(line: 1659, column: 33, scope: !10283)
!10286 = !DILocation(line: 1660, column: 29, scope: !10283)
!10287 = !DILocation(line: 1660, column: 44, scope: !10283)
!10288 = !DILocation(line: 1660, column: 42, scope: !10283)
!10289 = !DILocation(line: 1661, column: 29, scope: !10283)
!10290 = !DILocation(line: 1661, column: 42, scope: !10283)
!10291 = !DILocation(line: 1661, column: 40, scope: !10283)
!10292 = !DILocation(line: 1662, column: 29, scope: !10283)
!10293 = !DILocation(line: 1664, column: 17, scope: !9985)
!10294 = !DILocation(line: 1553, column: 38, scope: !10295)
!10295 = !DILexicalBlockFile(scope: !9981, file: !904, discriminator: 2)
!10296 = !DILocation(line: 1553, column: 17, scope: !10295)
!10297 = distinct !{!10297, !10298}
!10298 = !DILocation(line: 1553, column: 17, scope: !9977)
!10299 = !DILocation(line: 1665, column: 13, scope: !9977)
!10300 = !DILocation(line: 1551, column: 52, scope: !10301)
!10301 = !DILexicalBlockFile(scope: !9971, file: !904, discriminator: 2)
!10302 = !DILocation(line: 1551, column: 13, scope: !10301)
!10303 = distinct !{!10303, !10304}
!10304 = !DILocation(line: 1551, column: 13, scope: !9967)
!10305 = !DILocation(line: 1668, column: 18, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !9967, file: !904, line: 1668, column: 17)
!10307 = !DILocation(line: 1668, column: 21, scope: !10306)
!10308 = !DILocation(line: 1668, column: 17, scope: !9967)
!10309 = !DILocation(line: 1669, column: 35, scope: !10306)
!10310 = !DILocation(line: 1669, column: 38, scope: !10306)
!10311 = !DILocation(line: 1669, column: 49, scope: !10306)
!10312 = !DILocation(line: 1669, column: 47, scope: !10306)
!10313 = !DILocation(line: 1669, column: 58, scope: !10306)
!10314 = !DILocation(line: 1669, column: 57, scope: !10306)
!10315 = !DILocation(line: 1669, column: 56, scope: !10306)
!10316 = !DILocation(line: 1669, column: 54, scope: !10306)
!10317 = !DILocation(line: 1670, column: 41, scope: !10306)
!10318 = !DILocation(line: 1670, column: 39, scope: !10306)
!10319 = !DILocation(line: 1670, column: 46, scope: !10306)
!10320 = !DILocation(line: 1670, column: 54, scope: !10306)
!10321 = !DILocation(line: 1670, column: 70, scope: !10306)
!10322 = !DILocation(line: 1670, column: 51, scope: !10306)
!10323 = !DILocation(line: 1670, column: 36, scope: !10306)
!10324 = !DILocation(line: 1670, column: 78, scope: !10325)
!10325 = !DILexicalBlockFile(scope: !10306, file: !904, discriminator: 1)
!10326 = !DILocation(line: 1670, column: 94, scope: !10325)
!10327 = !DILocation(line: 1670, column: 36, scope: !10325)
!10328 = !DILocation(line: 1670, column: 106, scope: !10329)
!10329 = !DILexicalBlockFile(scope: !10306, file: !904, discriminator: 2)
!10330 = !DILocation(line: 1670, column: 104, scope: !10329)
!10331 = !DILocation(line: 1670, column: 111, scope: !10329)
!10332 = !DILocation(line: 1670, column: 36, scope: !10329)
!10333 = !DILocation(line: 1670, column: 36, scope: !10334)
!10334 = !DILexicalBlockFile(scope: !10306, file: !904, discriminator: 3)
!10335 = !DILocation(line: 1669, column: 17, scope: !10325)
!10336 = !DILocation(line: 1671, column: 9, scope: !9967)
!10337 = !DILocation(line: 1549, column: 41, scope: !10338)
!10338 = !DILexicalBlockFile(scope: !9960, file: !904, discriminator: 2)
!10339 = !DILocation(line: 1549, column: 9, scope: !10338)
!10340 = distinct !{!10340, !9957}
!10341 = !DILocation(line: 1672, column: 5, scope: !9809)
!10342 = !DILocation(line: 1519, column: 37, scope: !10343)
!10343 = !DILexicalBlockFile(scope: !9805, file: !904, discriminator: 2)
!10344 = !DILocation(line: 1519, column: 5, scope: !10343)
!10345 = distinct !{!10345, !10346}
!10346 = !DILocation(line: 1519, column: 5, scope: !9762)
!10347 = !DILocation(line: 1682, column: 25, scope: !9762)
!10348 = !DILocation(line: 1682, column: 37, scope: !9762)
!10349 = !DILocation(line: 1682, column: 40, scope: !9762)
!10350 = !DILocation(line: 1682, column: 34, scope: !9762)
!10351 = !DILocation(line: 1682, column: 59, scope: !9762)
!10352 = !DILocation(line: 1682, column: 65, scope: !9762)
!10353 = !DILocation(line: 1682, column: 56, scope: !9762)
!10354 = !DILocation(line: 1682, column: 70, scope: !9762)
!10355 = !DILocation(line: 1682, column: 79, scope: !9762)
!10356 = !DILocation(line: 1682, column: 82, scope: !9762)
!10357 = !DILocation(line: 1682, column: 89, scope: !9762)
!10358 = !DILocation(line: 1682, column: 76, scope: !9762)
!10359 = !DILocation(line: 1682, column: 29, scope: !9762)
!10360 = !DILocation(line: 1682, column: 98, scope: !10361)
!10361 = !DILexicalBlockFile(scope: !9762, file: !904, discriminator: 1)
!10362 = !DILocation(line: 1682, column: 101, scope: !10361)
!10363 = !DILocation(line: 1682, column: 108, scope: !10361)
!10364 = !DILocation(line: 1682, column: 29, scope: !10361)
!10365 = !DILocation(line: 1682, column: 124, scope: !10366)
!10366 = !DILexicalBlockFile(scope: !9762, file: !904, discriminator: 2)
!10367 = !DILocation(line: 1682, column: 127, scope: !10366)
!10368 = !DILocation(line: 1682, column: 121, scope: !10366)
!10369 = !DILocation(line: 1682, column: 146, scope: !10366)
!10370 = !DILocation(line: 1682, column: 152, scope: !10366)
!10371 = !DILocation(line: 1682, column: 143, scope: !10366)
!10372 = !DILocation(line: 1682, column: 157, scope: !10366)
!10373 = !DILocation(line: 1682, column: 29, scope: !10366)
!10374 = !DILocation(line: 1682, column: 29, scope: !10375)
!10375 = !DILexicalBlockFile(scope: !9762, file: !904, discriminator: 3)
!10376 = !DILocation(line: 1682, column: 5, scope: !10375)
!10377 = !DILocation(line: 1684, column: 1, scope: !9762)
!10378 = !DILocation(line: 1684, column: 1, scope: !10361)
!10379 = distinct !DISubprogram(name: "apply_loop_filter", scope: !904, file: !904, line: 1330, type: !1705, isLocal: true, isDefinition: true, scopeLine: 1332, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!10380 = !DILocalVariable(name: "s", arg: 1, scope: !10379, file: !904, line: 1330, type: !1707)
!10381 = !DILocation(line: 1330, column: 49, scope: !10379)
!10382 = !DILocalVariable(name: "plane", arg: 2, scope: !10379, file: !904, line: 1330, type: !890)
!10383 = !DILocation(line: 1330, column: 56, scope: !10379)
!10384 = !DILocalVariable(name: "ystart", arg: 3, scope: !10379, file: !904, line: 1331, type: !890)
!10385 = !DILocation(line: 1331, column: 35, scope: !10379)
!10386 = !DILocalVariable(name: "yend", arg: 4, scope: !10379, file: !904, line: 1331, type: !890)
!10387 = !DILocation(line: 1331, column: 47, scope: !10379)
!10388 = !DILocalVariable(name: "x", scope: !10379, file: !904, line: 1333, type: !890)
!10389 = !DILocation(line: 1333, column: 9, scope: !10379)
!10390 = !DILocalVariable(name: "y", scope: !10379, file: !904, line: 1333, type: !890)
!10391 = !DILocation(line: 1333, column: 12, scope: !10379)
!10392 = !DILocalVariable(name: "bounding_values", scope: !10379, file: !904, line: 1334, type: !1292)
!10393 = !DILocation(line: 1334, column: 10, scope: !10379)
!10394 = !DILocation(line: 1334, column: 28, scope: !10379)
!10395 = !DILocation(line: 1334, column: 31, scope: !10379)
!10396 = !DILocation(line: 1334, column: 53, scope: !10379)
!10397 = !DILocalVariable(name: "width", scope: !10379, file: !904, line: 1336, type: !890)
!10398 = !DILocation(line: 1336, column: 9, scope: !10379)
!10399 = !DILocation(line: 1336, column: 37, scope: !10379)
!10400 = !DILocation(line: 1336, column: 36, scope: !10379)
!10401 = !DILocation(line: 1336, column: 35, scope: !10379)
!10402 = !DILocation(line: 1336, column: 17, scope: !10379)
!10403 = !DILocation(line: 1336, column: 20, scope: !10379)
!10404 = !DILocalVariable(name: "height", scope: !10379, file: !904, line: 1337, type: !890)
!10405 = !DILocation(line: 1337, column: 9, scope: !10379)
!10406 = !DILocation(line: 1337, column: 39, scope: !10379)
!10407 = !DILocation(line: 1337, column: 38, scope: !10379)
!10408 = !DILocation(line: 1337, column: 37, scope: !10379)
!10409 = !DILocation(line: 1337, column: 18, scope: !10379)
!10410 = !DILocation(line: 1337, column: 21, scope: !10379)
!10411 = !DILocalVariable(name: "fragment", scope: !10379, file: !904, line: 1338, type: !890)
!10412 = !DILocation(line: 1338, column: 9, scope: !10379)
!10413 = !DILocation(line: 1338, column: 38, scope: !10379)
!10414 = !DILocation(line: 1338, column: 20, scope: !10379)
!10415 = !DILocation(line: 1338, column: 23, scope: !10379)
!10416 = !DILocation(line: 1338, column: 47, scope: !10379)
!10417 = !DILocation(line: 1338, column: 56, scope: !10379)
!10418 = !DILocation(line: 1338, column: 54, scope: !10379)
!10419 = !DILocation(line: 1338, column: 45, scope: !10379)
!10420 = !DILocalVariable(name: "stride", scope: !10379, file: !904, line: 1339, type: !1746)
!10421 = !DILocation(line: 1339, column: 15, scope: !10379)
!10422 = !DILocation(line: 1339, column: 53, scope: !10379)
!10423 = !DILocation(line: 1339, column: 24, scope: !10379)
!10424 = !DILocation(line: 1339, column: 27, scope: !10379)
!10425 = !DILocation(line: 1339, column: 41, scope: !10379)
!10426 = !DILocation(line: 1339, column: 44, scope: !10379)
!10427 = !DILocalVariable(name: "plane_data", scope: !10379, file: !904, line: 1340, type: !1025)
!10428 = !DILocation(line: 1340, column: 14, scope: !10379)
!10429 = !DILocation(line: 1340, column: 52, scope: !10379)
!10430 = !DILocation(line: 1340, column: 27, scope: !10379)
!10431 = !DILocation(line: 1340, column: 30, scope: !10379)
!10432 = !DILocation(line: 1340, column: 44, scope: !10379)
!10433 = !DILocation(line: 1340, column: 47, scope: !10379)
!10434 = !DILocation(line: 1341, column: 10, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10379, file: !904, line: 1341, column: 9)
!10436 = !DILocation(line: 1341, column: 13, scope: !10435)
!10437 = !DILocation(line: 1341, column: 9, scope: !10379)
!10438 = !DILocation(line: 1342, column: 19, scope: !10435)
!10439 = !DILocation(line: 1342, column: 18, scope: !10435)
!10440 = !DILocation(line: 1342, column: 16, scope: !10435)
!10441 = !DILocation(line: 1342, column: 9, scope: !10435)
!10442 = !DILocation(line: 1343, column: 34, scope: !10379)
!10443 = !DILocation(line: 1343, column: 19, scope: !10379)
!10444 = !DILocation(line: 1343, column: 22, scope: !10379)
!10445 = !DILocation(line: 1343, column: 47, scope: !10379)
!10446 = !DILocation(line: 1343, column: 45, scope: !10379)
!10447 = !DILocation(line: 1343, column: 43, scope: !10379)
!10448 = !DILocation(line: 1343, column: 56, scope: !10379)
!10449 = !DILocation(line: 1343, column: 54, scope: !10379)
!10450 = !DILocation(line: 1343, column: 41, scope: !10379)
!10451 = !DILocation(line: 1343, column: 16, scope: !10379)
!10452 = !DILocation(line: 1345, column: 14, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10379, file: !904, line: 1345, column: 5)
!10454 = !DILocation(line: 1345, column: 12, scope: !10453)
!10455 = !DILocation(line: 1345, column: 10, scope: !10453)
!10456 = !DILocation(line: 1345, column: 22, scope: !10457)
!10457 = !DILexicalBlockFile(scope: !10458, file: !904, discriminator: 1)
!10458 = distinct !DILexicalBlock(scope: !10453, file: !904, line: 1345, column: 5)
!10459 = !DILocation(line: 1345, column: 26, scope: !10457)
!10460 = !DILocation(line: 1345, column: 24, scope: !10457)
!10461 = !DILocation(line: 1345, column: 5, scope: !10457)
!10462 = !DILocation(line: 1346, column: 16, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !904, line: 1346, column: 9)
!10464 = distinct !DILexicalBlock(scope: !10458, file: !904, line: 1345, column: 37)
!10465 = !DILocation(line: 1346, column: 14, scope: !10463)
!10466 = !DILocation(line: 1346, column: 21, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !10468, file: !904, discriminator: 1)
!10468 = distinct !DILexicalBlock(scope: !10463, file: !904, line: 1346, column: 9)
!10469 = !DILocation(line: 1346, column: 25, scope: !10467)
!10470 = !DILocation(line: 1346, column: 23, scope: !10467)
!10471 = !DILocation(line: 1346, column: 9, scope: !10467)
!10472 = !DILocation(line: 1351, column: 34, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !904, line: 1351, column: 17)
!10474 = distinct !DILexicalBlock(scope: !10468, file: !904, line: 1346, column: 37)
!10475 = !DILocation(line: 1351, column: 17, scope: !10473)
!10476 = !DILocation(line: 1351, column: 20, scope: !10473)
!10477 = !DILocation(line: 1351, column: 44, scope: !10473)
!10478 = !DILocation(line: 1351, column: 58, scope: !10473)
!10479 = !DILocation(line: 1351, column: 17, scope: !10474)
!10480 = !DILocation(line: 1353, column: 21, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !904, line: 1353, column: 21)
!10482 = distinct !DILexicalBlock(scope: !10473, file: !904, line: 1351, column: 64)
!10483 = !DILocation(line: 1353, column: 23, scope: !10481)
!10484 = !DILocation(line: 1353, column: 21, scope: !10482)
!10485 = !DILocation(line: 1354, column: 21, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10481, file: !904, line: 1353, column: 28)
!10487 = !DILocation(line: 1354, column: 24, scope: !10486)
!10488 = !DILocation(line: 1354, column: 31, scope: !10486)
!10489 = !DILocation(line: 1355, column: 25, scope: !10486)
!10490 = !DILocation(line: 1355, column: 42, scope: !10486)
!10491 = !DILocation(line: 1355, column: 40, scope: !10486)
!10492 = !DILocation(line: 1355, column: 36, scope: !10486)
!10493 = !DILocation(line: 1356, column: 25, scope: !10486)
!10494 = !DILocation(line: 1356, column: 33, scope: !10486)
!10495 = !DILocation(line: 1357, column: 17, scope: !10486)
!10496 = !DILocation(line: 1360, column: 21, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10482, file: !904, line: 1360, column: 21)
!10498 = !DILocation(line: 1360, column: 23, scope: !10497)
!10499 = !DILocation(line: 1360, column: 21, scope: !10482)
!10500 = !DILocation(line: 1361, column: 21, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10497, file: !904, line: 1360, column: 28)
!10502 = !DILocation(line: 1361, column: 24, scope: !10501)
!10503 = !DILocation(line: 1361, column: 31, scope: !10501)
!10504 = !DILocation(line: 1362, column: 25, scope: !10501)
!10505 = !DILocation(line: 1362, column: 42, scope: !10501)
!10506 = !DILocation(line: 1362, column: 40, scope: !10501)
!10507 = !DILocation(line: 1362, column: 36, scope: !10501)
!10508 = !DILocation(line: 1363, column: 25, scope: !10501)
!10509 = !DILocation(line: 1363, column: 33, scope: !10501)
!10510 = !DILocation(line: 1364, column: 17, scope: !10501)
!10511 = !DILocation(line: 1369, column: 22, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10482, file: !904, line: 1369, column: 21)
!10513 = !DILocation(line: 1369, column: 26, scope: !10512)
!10514 = !DILocation(line: 1369, column: 32, scope: !10512)
!10515 = !DILocation(line: 1369, column: 24, scope: !10512)
!10516 = !DILocation(line: 1369, column: 37, scope: !10512)
!10517 = !DILocation(line: 1370, column: 39, scope: !10512)
!10518 = !DILocation(line: 1370, column: 48, scope: !10512)
!10519 = !DILocation(line: 1370, column: 22, scope: !10512)
!10520 = !DILocation(line: 1370, column: 25, scope: !10512)
!10521 = !DILocation(line: 1370, column: 53, scope: !10512)
!10522 = !DILocation(line: 1370, column: 67, scope: !10512)
!10523 = !DILocation(line: 1369, column: 21, scope: !10524)
!10524 = !DILexicalBlockFile(scope: !10482, file: !904, discriminator: 1)
!10525 = !DILocation(line: 1371, column: 21, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10512, file: !904, line: 1370, column: 74)
!10527 = !DILocation(line: 1371, column: 24, scope: !10526)
!10528 = !DILocation(line: 1371, column: 31, scope: !10526)
!10529 = !DILocation(line: 1372, column: 25, scope: !10526)
!10530 = !DILocation(line: 1372, column: 42, scope: !10526)
!10531 = !DILocation(line: 1372, column: 40, scope: !10526)
!10532 = !DILocation(line: 1372, column: 36, scope: !10526)
!10533 = !DILocation(line: 1372, column: 44, scope: !10526)
!10534 = !DILocation(line: 1373, column: 25, scope: !10526)
!10535 = !DILocation(line: 1373, column: 33, scope: !10526)
!10536 = !DILocation(line: 1374, column: 17, scope: !10526)
!10537 = !DILocation(line: 1379, column: 22, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10482, file: !904, line: 1379, column: 21)
!10539 = !DILocation(line: 1379, column: 26, scope: !10538)
!10540 = !DILocation(line: 1379, column: 33, scope: !10538)
!10541 = !DILocation(line: 1379, column: 24, scope: !10538)
!10542 = !DILocation(line: 1379, column: 38, scope: !10538)
!10543 = !DILocation(line: 1380, column: 39, scope: !10538)
!10544 = !DILocation(line: 1380, column: 50, scope: !10538)
!10545 = !DILocation(line: 1380, column: 48, scope: !10538)
!10546 = !DILocation(line: 1380, column: 22, scope: !10538)
!10547 = !DILocation(line: 1380, column: 25, scope: !10538)
!10548 = !DILocation(line: 1380, column: 57, scope: !10538)
!10549 = !DILocation(line: 1380, column: 71, scope: !10538)
!10550 = !DILocation(line: 1379, column: 21, scope: !10524)
!10551 = !DILocation(line: 1381, column: 21, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10538, file: !904, line: 1380, column: 78)
!10553 = !DILocation(line: 1381, column: 24, scope: !10552)
!10554 = !DILocation(line: 1381, column: 31, scope: !10552)
!10555 = !DILocation(line: 1382, column: 25, scope: !10552)
!10556 = !DILocation(line: 1382, column: 42, scope: !10552)
!10557 = !DILocation(line: 1382, column: 40, scope: !10552)
!10558 = !DILocation(line: 1382, column: 36, scope: !10552)
!10559 = !DILocation(line: 1382, column: 50, scope: !10552)
!10560 = !DILocation(line: 1382, column: 48, scope: !10552)
!10561 = !DILocation(line: 1382, column: 44, scope: !10552)
!10562 = !DILocation(line: 1383, column: 25, scope: !10552)
!10563 = !DILocation(line: 1383, column: 33, scope: !10552)
!10564 = !DILocation(line: 1384, column: 17, scope: !10552)
!10565 = !DILocation(line: 1385, column: 13, scope: !10482)
!10566 = !DILocation(line: 1387, column: 21, scope: !10474)
!10567 = !DILocation(line: 1388, column: 9, scope: !10474)
!10568 = !DILocation(line: 1346, column: 33, scope: !10569)
!10569 = !DILexicalBlockFile(scope: !10468, file: !904, discriminator: 2)
!10570 = !DILocation(line: 1346, column: 9, scope: !10569)
!10571 = distinct !{!10571, !10572}
!10572 = !DILocation(line: 1346, column: 9, scope: !10464)
!10573 = !DILocation(line: 1389, column: 27, scope: !10464)
!10574 = !DILocation(line: 1389, column: 25, scope: !10464)
!10575 = !DILocation(line: 1389, column: 20, scope: !10464)
!10576 = !DILocation(line: 1390, column: 5, scope: !10464)
!10577 = !DILocation(line: 1345, column: 33, scope: !10578)
!10578 = !DILexicalBlockFile(scope: !10458, file: !904, discriminator: 2)
!10579 = !DILocation(line: 1345, column: 5, scope: !10578)
!10580 = distinct !{!10580, !10581}
!10581 = !DILocation(line: 1345, column: 5, scope: !10379)
!10582 = !DILocation(line: 1391, column: 1, scope: !10379)
!10583 = distinct !DISubprogram(name: "vp3_draw_horiz_band", scope: !904, file: !904, line: 1442, type: !5414, isLocal: true, isDefinition: true, scopeLine: 1443, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!10584 = !DILocalVariable(name: "s", arg: 1, scope: !10583, file: !904, line: 1442, type: !1707)
!10585 = !DILocation(line: 1442, column: 51, scope: !10583)
!10586 = !DILocalVariable(name: "y", arg: 2, scope: !10583, file: !904, line: 1442, type: !890)
!10587 = !DILocation(line: 1442, column: 58, scope: !10583)
!10588 = !DILocalVariable(name: "h", scope: !10583, file: !904, line: 1444, type: !890)
!10589 = !DILocation(line: 1444, column: 9, scope: !10583)
!10590 = !DILocalVariable(name: "cy", scope: !10583, file: !904, line: 1444, type: !890)
!10591 = !DILocation(line: 1444, column: 12, scope: !10583)
!10592 = !DILocalVariable(name: "i", scope: !10583, file: !904, line: 1444, type: !890)
!10593 = !DILocation(line: 1444, column: 16, scope: !10583)
!10594 = !DILocalVariable(name: "offset", scope: !10583, file: !904, line: 1445, type: !1029)
!10595 = !DILocation(line: 1445, column: 9, scope: !10583)
!10596 = !DILocation(line: 1447, column: 14, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10583, file: !904, line: 1447, column: 9)
!10598 = !DILocation(line: 1447, column: 17, scope: !10597)
!10599 = !DILocation(line: 1447, column: 24, scope: !10597)
!10600 = !DILocation(line: 1447, column: 43, scope: !10597)
!10601 = !DILocation(line: 1447, column: 9, scope: !10583)
!10602 = !DILocalVariable(name: "y_flipped", scope: !10603, file: !904, line: 1448, type: !890)
!10603 = distinct !DILexicalBlock(scope: !10597, file: !904, line: 1447, column: 48)
!10604 = !DILocation(line: 1448, column: 13, scope: !10603)
!10605 = !DILocation(line: 1448, column: 25, scope: !10603)
!10606 = !DILocation(line: 1448, column: 28, scope: !10603)
!10607 = !DILocation(line: 1448, column: 44, scope: !10608)
!10608 = !DILexicalBlockFile(scope: !10603, file: !904, discriminator: 1)
!10609 = !DILocation(line: 1448, column: 47, scope: !10608)
!10610 = !DILocation(line: 1448, column: 56, scope: !10608)
!10611 = !DILocation(line: 1448, column: 54, scope: !10608)
!10612 = !DILocation(line: 1448, column: 25, scope: !10608)
!10613 = !DILocation(line: 1448, column: 60, scope: !10614)
!10614 = !DILexicalBlockFile(scope: !10603, file: !904, discriminator: 2)
!10615 = !DILocation(line: 1448, column: 25, scope: !10614)
!10616 = !DILocation(line: 1448, column: 25, scope: !10617)
!10617 = !DILexicalBlockFile(scope: !10603, file: !904, discriminator: 3)
!10618 = !DILocation(line: 1448, column: 13, scope: !10617)
!10619 = !DILocation(line: 1453, column: 36, scope: !10603)
!10620 = !DILocation(line: 1453, column: 39, scope: !10603)
!10621 = !DILocation(line: 1454, column: 35, scope: !10603)
!10622 = !DILocation(line: 1454, column: 48, scope: !10603)
!10623 = !DILocation(line: 1454, column: 51, scope: !10603)
!10624 = !DILocation(line: 1454, column: 45, scope: !10603)
!10625 = !DILocation(line: 1454, column: 35, scope: !10608)
!10626 = !DILocation(line: 1455, column: 60, scope: !10603)
!10627 = !DILocation(line: 1455, column: 70, scope: !10603)
!10628 = !DILocation(line: 1454, column: 35, scope: !10614)
!10629 = !DILocation(line: 1454, column: 35, scope: !10617)
!10630 = !DILocation(line: 1453, column: 9, scope: !10608)
!10631 = !DILocation(line: 1457, column: 5, scope: !10603)
!10632 = !DILocation(line: 1459, column: 10, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10583, file: !904, line: 1459, column: 9)
!10634 = !DILocation(line: 1459, column: 13, scope: !10633)
!10635 = !DILocation(line: 1459, column: 20, scope: !10633)
!10636 = !DILocation(line: 1459, column: 9, scope: !10583)
!10637 = !DILocation(line: 1460, column: 9, scope: !10633)
!10638 = !DILocation(line: 1462, column: 9, scope: !10583)
!10639 = !DILocation(line: 1462, column: 13, scope: !10583)
!10640 = !DILocation(line: 1462, column: 16, scope: !10583)
!10641 = !DILocation(line: 1462, column: 11, scope: !10583)
!10642 = !DILocation(line: 1462, column: 7, scope: !10583)
!10643 = !DILocation(line: 1463, column: 25, scope: !10583)
!10644 = !DILocation(line: 1463, column: 5, scope: !10583)
!10645 = !DILocation(line: 1463, column: 8, scope: !10583)
!10646 = !DILocation(line: 1463, column: 23, scope: !10583)
!10647 = !DILocation(line: 1464, column: 10, scope: !10583)
!10648 = !DILocation(line: 1464, column: 7, scope: !10583)
!10649 = !DILocation(line: 1466, column: 10, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10583, file: !904, line: 1466, column: 9)
!10651 = !DILocation(line: 1466, column: 13, scope: !10650)
!10652 = !DILocation(line: 1466, column: 9, scope: !10583)
!10653 = !DILocation(line: 1467, column: 13, scope: !10650)
!10654 = !DILocation(line: 1467, column: 16, scope: !10650)
!10655 = !DILocation(line: 1467, column: 25, scope: !10650)
!10656 = !DILocation(line: 1467, column: 23, scope: !10650)
!10657 = !DILocation(line: 1467, column: 29, scope: !10650)
!10658 = !DILocation(line: 1467, column: 27, scope: !10650)
!10659 = !DILocation(line: 1467, column: 11, scope: !10650)
!10660 = !DILocation(line: 1467, column: 9, scope: !10650)
!10661 = !DILocation(line: 1469, column: 10, scope: !10583)
!10662 = !DILocation(line: 1469, column: 15, scope: !10583)
!10663 = !DILocation(line: 1469, column: 18, scope: !10583)
!10664 = !DILocation(line: 1469, column: 12, scope: !10583)
!10665 = !DILocation(line: 1469, column: 8, scope: !10583)
!10666 = !DILocation(line: 1470, column: 17, scope: !10583)
!10667 = !DILocation(line: 1470, column: 20, scope: !10583)
!10668 = !DILocation(line: 1470, column: 34, scope: !10583)
!10669 = !DILocation(line: 1470, column: 37, scope: !10583)
!10670 = !DILocation(line: 1470, column: 51, scope: !10583)
!10671 = !DILocation(line: 1470, column: 49, scope: !10583)
!10672 = !DILocation(line: 1470, column: 5, scope: !10583)
!10673 = !DILocation(line: 1470, column: 15, scope: !10583)
!10674 = !DILocation(line: 1471, column: 17, scope: !10583)
!10675 = !DILocation(line: 1471, column: 20, scope: !10583)
!10676 = !DILocation(line: 1471, column: 34, scope: !10583)
!10677 = !DILocation(line: 1471, column: 37, scope: !10583)
!10678 = !DILocation(line: 1471, column: 51, scope: !10583)
!10679 = !DILocation(line: 1471, column: 49, scope: !10583)
!10680 = !DILocation(line: 1471, column: 5, scope: !10583)
!10681 = !DILocation(line: 1471, column: 15, scope: !10583)
!10682 = !DILocation(line: 1472, column: 17, scope: !10583)
!10683 = !DILocation(line: 1472, column: 20, scope: !10583)
!10684 = !DILocation(line: 1472, column: 34, scope: !10583)
!10685 = !DILocation(line: 1472, column: 37, scope: !10583)
!10686 = !DILocation(line: 1472, column: 51, scope: !10583)
!10687 = !DILocation(line: 1472, column: 49, scope: !10583)
!10688 = !DILocation(line: 1472, column: 5, scope: !10583)
!10689 = !DILocation(line: 1472, column: 15, scope: !10583)
!10690 = !DILocation(line: 1473, column: 12, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10583, file: !904, line: 1473, column: 5)
!10692 = !DILocation(line: 1473, column: 10, scope: !10691)
!10693 = !DILocation(line: 1473, column: 17, scope: !10694)
!10694 = !DILexicalBlockFile(scope: !10695, file: !904, discriminator: 1)
!10695 = distinct !DILexicalBlock(scope: !10691, file: !904, line: 1473, column: 5)
!10696 = !DILocation(line: 1473, column: 19, scope: !10694)
!10697 = !DILocation(line: 1473, column: 5, scope: !10694)
!10698 = !DILocation(line: 1474, column: 16, scope: !10695)
!10699 = !DILocation(line: 1474, column: 9, scope: !10695)
!10700 = !DILocation(line: 1474, column: 19, scope: !10695)
!10701 = !DILocation(line: 1473, column: 25, scope: !10702)
!10702 = !DILexicalBlockFile(scope: !10695, file: !904, discriminator: 2)
!10703 = !DILocation(line: 1473, column: 5, scope: !10702)
!10704 = distinct !{!10704, !10705}
!10705 = !DILocation(line: 1473, column: 5, scope: !10583)
!10706 = !DILocation(line: 46, column: 9, scope: !10707, inlinedAt: !10711)
!10707 = distinct !DISubprogram(name: "emms_c", scope: !10708, file: !10708, line: 37, type: !10709, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!10708 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!10709 = !DISubroutineType(types: !10710)
!10710 = !{null}
!10711 = distinct !DILocation(line: 1476, column: 5, scope: !10583)
!10712 = !{i32 100559}
!10713 = !DILocation(line: 1477, column: 5, scope: !10583)
!10714 = !DILocation(line: 1477, column: 8, scope: !10583)
!10715 = !DILocation(line: 1477, column: 15, scope: !10583)
!10716 = !DILocation(line: 1477, column: 31, scope: !10583)
!10717 = !DILocation(line: 1477, column: 34, scope: !10583)
!10718 = !DILocation(line: 1477, column: 41, scope: !10583)
!10719 = !DILocation(line: 1477, column: 44, scope: !10583)
!10720 = !DILocation(line: 1477, column: 58, scope: !10583)
!10721 = !DILocation(line: 1477, column: 61, scope: !10583)
!10722 = !DILocation(line: 1477, column: 69, scope: !10583)
!10723 = !DILocation(line: 1477, column: 75, scope: !10583)
!10724 = !DILocation(line: 1478, column: 1, scope: !10583)
!10725 = !DILocation(line: 1478, column: 1, scope: !10726)
!10726 = !DILexicalBlockFile(scope: !10583, file: !904, discriminator: 1)
!10727 = distinct !DISubprogram(name: "get_bits_left", scope: !2183, file: !2183, line: 814, type: !10728, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!10728 = !DISubroutineType(types: !10729)
!10729 = !{!890, !4245}
!10730 = !DILocalVariable(name: "gb", arg: 1, scope: !10727, file: !2183, line: 814, type: !4245)
!10731 = !DILocation(line: 814, column: 48, scope: !10727)
!10732 = !DILocation(line: 816, column: 12, scope: !10727)
!10733 = !DILocation(line: 816, column: 16, scope: !10727)
!10734 = !DILocation(line: 816, column: 46, scope: !10727)
!10735 = !DILocation(line: 816, column: 31, scope: !10727)
!10736 = !DILocation(line: 816, column: 29, scope: !10727)
!10737 = !DILocation(line: 816, column: 5, scope: !10727)
!10738 = distinct !DISubprogram(name: "unpack_vlcs", scope: !904, file: !904, line: 946, type: !10739, isLocal: true, isDefinition: true, scopeLine: 950, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!10739 = !DISubroutineType(types: !10740)
!10740 = !{!890, !1707, !4245, !9484, !890, !890, !890}
!10741 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !10742)
!10742 = distinct !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !10743)
!10743 = distinct !DILocation(line: 988, column: 17, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10738, file: !904, line: 986, column: 59)
!10745 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !10746)
!10746 = distinct !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !10743)
!10747 = !DILocation(line: 66, column: 98, scope: !4272, inlinedAt: !10748)
!10748 = distinct !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !10743)
!10749 = !DILocation(line: 762, column: 74, scope: !5663, inlinedAt: !10743)
!10750 = !DILocation(line: 762, column: 87, scope: !5663, inlinedAt: !10743)
!10751 = !DILocation(line: 763, column: 42, scope: !5663, inlinedAt: !10743)
!10752 = !DILocation(line: 763, column: 52, scope: !5663, inlinedAt: !10743)
!10753 = !DILocation(line: 783, column: 9, scope: !5663, inlinedAt: !10743)
!10754 = !DILocation(line: 785, column: 18, scope: !5663, inlinedAt: !10743)
!10755 = !DILocation(line: 785, column: 78, scope: !5663, inlinedAt: !10743)
!10756 = !DILocation(line: 785, column: 101, scope: !5663, inlinedAt: !10743)
!10757 = !DILocation(line: 788, column: 14, scope: !5662, inlinedAt: !10743)
!10758 = !DILocation(line: 788, column: 17, scope: !5662, inlinedAt: !10743)
!10759 = !DILocation(line: 788, column: 39, scope: !5662, inlinedAt: !10743)
!10760 = !DILocalVariable(name: "s", arg: 1, scope: !10738, file: !904, line: 946, type: !1707)
!10761 = !DILocation(line: 946, column: 42, scope: !10738)
!10762 = !DILocalVariable(name: "gb", arg: 2, scope: !10738, file: !904, line: 946, type: !4245)
!10763 = !DILocation(line: 946, column: 60, scope: !10738)
!10764 = !DILocalVariable(name: "table", arg: 3, scope: !10738, file: !904, line: 947, type: !9484)
!10765 = !DILocation(line: 947, column: 29, scope: !10738)
!10766 = !DILocalVariable(name: "coeff_index", arg: 4, scope: !10738, file: !904, line: 947, type: !890)
!10767 = !DILocation(line: 947, column: 40, scope: !10738)
!10768 = !DILocalVariable(name: "plane", arg: 5, scope: !10738, file: !904, line: 948, type: !890)
!10769 = !DILocation(line: 948, column: 28, scope: !10738)
!10770 = !DILocalVariable(name: "eob_run", arg: 6, scope: !10738, file: !904, line: 949, type: !890)
!10771 = !DILocation(line: 949, column: 28, scope: !10738)
!10772 = !DILocalVariable(name: "i", scope: !10738, file: !904, line: 951, type: !890)
!10773 = !DILocation(line: 951, column: 9, scope: !10738)
!10774 = !DILocalVariable(name: "j", scope: !10738, file: !904, line: 951, type: !890)
!10775 = !DILocation(line: 951, column: 12, scope: !10738)
!10776 = !DILocalVariable(name: "token", scope: !10738, file: !904, line: 952, type: !890)
!10777 = !DILocation(line: 952, column: 9, scope: !10738)
!10778 = !DILocalVariable(name: "zero_run", scope: !10738, file: !904, line: 953, type: !890)
!10779 = !DILocation(line: 953, column: 9, scope: !10738)
!10780 = !DILocalVariable(name: "coeff", scope: !10738, file: !904, line: 954, type: !1667)
!10781 = !DILocation(line: 954, column: 13, scope: !10738)
!10782 = !DILocalVariable(name: "bits_to_get", scope: !10738, file: !904, line: 955, type: !890)
!10783 = !DILocation(line: 955, column: 9, scope: !10738)
!10784 = !DILocalVariable(name: "blocks_ended", scope: !10738, file: !904, line: 956, type: !890)
!10785 = !DILocation(line: 956, column: 9, scope: !10738)
!10786 = !DILocalVariable(name: "coeff_i", scope: !10738, file: !904, line: 957, type: !890)
!10787 = !DILocation(line: 957, column: 9, scope: !10738)
!10788 = !DILocalVariable(name: "num_coeffs", scope: !10738, file: !904, line: 958, type: !890)
!10789 = !DILocation(line: 958, column: 9, scope: !10738)
!10790 = !DILocation(line: 958, column: 48, scope: !10738)
!10791 = !DILocation(line: 958, column: 22, scope: !10738)
!10792 = !DILocation(line: 958, column: 41, scope: !10738)
!10793 = !DILocation(line: 958, column: 25, scope: !10738)
!10794 = !DILocalVariable(name: "dct_tokens", scope: !10738, file: !904, line: 959, type: !1778)
!10795 = !DILocation(line: 959, column: 14, scope: !10738)
!10796 = !DILocation(line: 959, column: 48, scope: !10738)
!10797 = !DILocation(line: 959, column: 27, scope: !10738)
!10798 = !DILocation(line: 959, column: 41, scope: !10738)
!10799 = !DILocation(line: 959, column: 30, scope: !10738)
!10800 = !DILocalVariable(name: "coded_fragment_list", scope: !10738, file: !904, line: 962, type: !1292)
!10801 = !DILocation(line: 962, column: 10, scope: !10738)
!10802 = !DILocation(line: 962, column: 55, scope: !10738)
!10803 = !DILocation(line: 962, column: 32, scope: !10738)
!10804 = !DILocation(line: 962, column: 35, scope: !10738)
!10805 = !DILocalVariable(name: "all_fragments", scope: !10738, file: !904, line: 963, type: !1816)
!10806 = !DILocation(line: 963, column: 18, scope: !10738)
!10807 = !DILocation(line: 963, column: 34, scope: !10738)
!10808 = !DILocation(line: 963, column: 37, scope: !10738)
!10809 = !DILocalVariable(name: "vlc_table", scope: !10738, file: !904, line: 964, type: !1868)
!10810 = !DILocation(line: 964, column: 14, scope: !10738)
!10811 = !DILocation(line: 964, column: 30, scope: !10738)
!10812 = !DILocation(line: 964, column: 37, scope: !10738)
!10813 = !DILocation(line: 966, column: 9, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10738, file: !904, line: 966, column: 9)
!10815 = !DILocation(line: 966, column: 20, scope: !10814)
!10816 = !DILocation(line: 966, column: 9, scope: !10738)
!10817 = !DILocation(line: 967, column: 16, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10814, file: !904, line: 966, column: 25)
!10819 = !DILocation(line: 967, column: 19, scope: !10818)
!10820 = !DILocation(line: 968, column: 64, scope: !10818)
!10821 = !DILocation(line: 967, column: 9, scope: !10818)
!10822 = !DILocation(line: 969, column: 9, scope: !10818)
!10823 = !DILocation(line: 972, column: 9, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10738, file: !904, line: 972, column: 9)
!10825 = !DILocation(line: 972, column: 19, scope: !10824)
!10826 = !DILocation(line: 972, column: 17, scope: !10824)
!10827 = !DILocation(line: 972, column: 9, scope: !10738)
!10828 = !DILocation(line: 974, column: 24, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10824, file: !904, line: 972, column: 31)
!10830 = !DILocation(line: 974, column: 22, scope: !10829)
!10831 = !DILocation(line: 973, column: 17, scope: !10829)
!10832 = !DILocation(line: 975, column: 20, scope: !10829)
!10833 = !DILocation(line: 975, column: 17, scope: !10829)
!10834 = !DILocation(line: 976, column: 5, scope: !10829)
!10835 = !DILocation(line: 978, column: 24, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10824, file: !904, line: 976, column: 12)
!10837 = !DILocation(line: 978, column: 22, scope: !10836)
!10838 = !DILocation(line: 977, column: 17, scope: !10836)
!10839 = !DILocation(line: 979, column: 17, scope: !10836)
!10840 = !DILocation(line: 983, column: 9, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10738, file: !904, line: 983, column: 9)
!10842 = !DILocation(line: 983, column: 9, scope: !10738)
!10843 = !DILocation(line: 984, column: 27, scope: !10841)
!10844 = !DILocation(line: 984, column: 40, scope: !10841)
!10845 = !DILocation(line: 984, column: 21, scope: !10841)
!10846 = !DILocation(line: 984, column: 9, scope: !10841)
!10847 = !DILocation(line: 984, column: 25, scope: !10841)
!10848 = !DILocation(line: 986, column: 5, scope: !10738)
!10849 = !DILocation(line: 986, column: 12, scope: !10850)
!10850 = !DILexicalBlockFile(scope: !10738, file: !904, discriminator: 1)
!10851 = !DILocation(line: 986, column: 22, scope: !10850)
!10852 = !DILocation(line: 986, column: 20, scope: !10850)
!10853 = !DILocation(line: 986, column: 33, scope: !10850)
!10854 = !DILocation(line: 986, column: 50, scope: !10855)
!10855 = !DILexicalBlockFile(scope: !10738, file: !904, discriminator: 2)
!10856 = !DILocation(line: 986, column: 36, scope: !10855)
!10857 = !DILocation(line: 986, column: 54, scope: !10855)
!10858 = !DILocation(line: 986, column: 5, scope: !10859)
!10859 = !DILexicalBlockFile(scope: !10738, file: !904, discriminator: 3)
!10860 = !DILocation(line: 988, column: 26, scope: !10744)
!10861 = !DILocation(line: 988, column: 30, scope: !10744)
!10862 = !DILocation(line: 988, column: 17, scope: !10744)
!10863 = !DILocation(line: 785, column: 30, scope: !5663, inlinedAt: !10743)
!10864 = !DILocation(line: 785, column: 34, scope: !5663, inlinedAt: !10743)
!10865 = !DILocation(line: 785, column: 118, scope: !5663, inlinedAt: !10743)
!10866 = !DILocation(line: 785, column: 122, scope: !5663, inlinedAt: !10743)
!10867 = !DILocation(line: 786, column: 60, scope: !5663, inlinedAt: !10743)
!10868 = !DILocation(line: 786, column: 64, scope: !5663, inlinedAt: !10743)
!10869 = !DILocation(line: 786, column: 74, scope: !5663, inlinedAt: !10743)
!10870 = !DILocation(line: 786, column: 83, scope: !5663, inlinedAt: !10743)
!10871 = !DILocation(line: 786, column: 71, scope: !5663, inlinedAt: !10743)
!10872 = !DILocation(line: 786, column: 92, scope: !5663, inlinedAt: !10743)
!10873 = !DILocation(line: 786, column: 16, scope: !5663, inlinedAt: !10743)
!10874 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !10748)
!10875 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !10748)
!10876 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !10748)
!10877 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !10748)
!10878 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !10748)
!10879 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !10748)
!10880 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !10748)
!10881 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !10748)
!10882 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !10748)
!10883 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !10748)
!10884 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !10748)
!10885 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !10748)
!10886 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !10748)
!10887 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !10748)
!10888 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !10748)
!10889 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !10748)
!10890 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !10748)
!10891 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !10748)
!10892 = !DILocation(line: 786, column: 100, scope: !5663, inlinedAt: !10743)
!10893 = !DILocation(line: 786, column: 109, scope: !5663, inlinedAt: !10743)
!10894 = !DILocation(line: 786, column: 96, scope: !5663, inlinedAt: !10743)
!10895 = !DILocation(line: 786, column: 14, scope: !5663, inlinedAt: !10743)
!10896 = !DILocation(line: 788, column: 64, scope: !5862, inlinedAt: !10743)
!10897 = !DILocation(line: 788, column: 74, scope: !5862, inlinedAt: !10743)
!10898 = !DILocation(line: 788, column: 54, scope: !5862, inlinedAt: !10743)
!10899 = !DILocation(line: 788, column: 52, scope: !5862, inlinedAt: !10743)
!10900 = !DILocation(line: 788, column: 94, scope: !5862, inlinedAt: !10743)
!10901 = !DILocation(line: 788, column: 88, scope: !5862, inlinedAt: !10743)
!10902 = !DILocation(line: 788, column: 86, scope: !5862, inlinedAt: !10743)
!10903 = !DILocation(line: 788, column: 115, scope: !5862, inlinedAt: !10743)
!10904 = !DILocation(line: 788, column: 109, scope: !5862, inlinedAt: !10743)
!10905 = !DILocation(line: 788, column: 107, scope: !5862, inlinedAt: !10743)
!10906 = !DILocation(line: 788, column: 130, scope: !5862, inlinedAt: !10743)
!10907 = !DILocation(line: 788, column: 140, scope: !5862, inlinedAt: !10743)
!10908 = !DILocation(line: 788, column: 144, scope: !5862, inlinedAt: !10743)
!10909 = !DILocation(line: 788, column: 147, scope: !5876, inlinedAt: !10743)
!10910 = !DILocation(line: 788, column: 149, scope: !5876, inlinedAt: !10743)
!10911 = !DILocation(line: 788, column: 130, scope: !5876, inlinedAt: !10743)
!10912 = !DILocation(line: 788, column: 169, scope: !5880, inlinedAt: !10743)
!10913 = !DILocation(line: 788, column: 187, scope: !5880, inlinedAt: !10743)
!10914 = !DILocation(line: 788, column: 199, scope: !5880, inlinedAt: !10743)
!10915 = !DILocation(line: 788, column: 196, scope: !5880, inlinedAt: !10743)
!10916 = !DILocation(line: 788, column: 184, scope: !5880, inlinedAt: !10743)
!10917 = !DILocation(line: 788, column: 168, scope: !5880, inlinedAt: !10743)
!10918 = !DILocation(line: 788, column: 209, scope: !5887, inlinedAt: !10743)
!10919 = !DILocation(line: 788, column: 221, scope: !5887, inlinedAt: !10743)
!10920 = !DILocation(line: 788, column: 218, scope: !5887, inlinedAt: !10743)
!10921 = !DILocation(line: 788, column: 168, scope: !5887, inlinedAt: !10743)
!10922 = !DILocation(line: 788, column: 231, scope: !5892, inlinedAt: !10743)
!10923 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !10743)
!10924 = !DILocation(line: 788, column: 168, scope: !5686, inlinedAt: !10743)
!10925 = !DILocation(line: 788, column: 165, scope: !5686, inlinedAt: !10743)
!10926 = !DILocation(line: 788, column: 303, scope: !5686, inlinedAt: !10743)
!10927 = !DILocation(line: 788, column: 307, scope: !5686, inlinedAt: !10743)
!10928 = !DILocation(line: 788, column: 317, scope: !5686, inlinedAt: !10743)
!10929 = !DILocation(line: 788, column: 326, scope: !5686, inlinedAt: !10743)
!10930 = !DILocation(line: 788, column: 314, scope: !5686, inlinedAt: !10743)
!10931 = !DILocation(line: 788, column: 335, scope: !5686, inlinedAt: !10743)
!10932 = !DILocation(line: 788, column: 259, scope: !5686, inlinedAt: !10743)
!10933 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !10746)
!10934 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !10746)
!10935 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !10746)
!10936 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !10746)
!10937 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !10746)
!10938 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !10746)
!10939 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !10746)
!10940 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !10746)
!10941 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !10746)
!10942 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !10746)
!10943 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !10746)
!10944 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !10746)
!10945 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !10746)
!10946 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !10746)
!10947 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !10746)
!10948 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !10746)
!10949 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !10746)
!10950 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !10746)
!10951 = !DILocation(line: 788, column: 343, scope: !5686, inlinedAt: !10743)
!10952 = !DILocation(line: 788, column: 352, scope: !5686, inlinedAt: !10743)
!10953 = !DILocation(line: 788, column: 339, scope: !5686, inlinedAt: !10743)
!10954 = !DILocation(line: 788, column: 257, scope: !5686, inlinedAt: !10743)
!10955 = !DILocation(line: 788, column: 369, scope: !5686, inlinedAt: !10743)
!10956 = !DILocation(line: 788, column: 368, scope: !5686, inlinedAt: !10743)
!10957 = !DILocation(line: 788, column: 366, scope: !5686, inlinedAt: !10743)
!10958 = !DILocation(line: 788, column: 390, scope: !5686, inlinedAt: !10743)
!10959 = !DILocation(line: 788, column: 400, scope: !5686, inlinedAt: !10743)
!10960 = !DILocation(line: 788, column: 380, scope: !5931, inlinedAt: !10743)
!10961 = !DILocation(line: 788, column: 411, scope: !5686, inlinedAt: !10743)
!10962 = !DILocation(line: 788, column: 409, scope: !5686, inlinedAt: !10743)
!10963 = !DILocation(line: 788, column: 378, scope: !5686, inlinedAt: !10743)
!10964 = !DILocation(line: 788, column: 430, scope: !5686, inlinedAt: !10743)
!10965 = !DILocation(line: 788, column: 424, scope: !5686, inlinedAt: !10743)
!10966 = !DILocation(line: 788, column: 422, scope: !5686, inlinedAt: !10743)
!10967 = !DILocation(line: 788, column: 451, scope: !5686, inlinedAt: !10743)
!10968 = !DILocation(line: 788, column: 445, scope: !5686, inlinedAt: !10743)
!10969 = !DILocation(line: 788, column: 443, scope: !5686, inlinedAt: !10743)
!10970 = !DILocation(line: 788, column: 466, scope: !5686, inlinedAt: !10743)
!10971 = !DILocation(line: 788, column: 476, scope: !5686, inlinedAt: !10743)
!10972 = !DILocation(line: 788, column: 480, scope: !5686, inlinedAt: !10743)
!10973 = !DILocation(line: 788, column: 483, scope: !5945, inlinedAt: !10743)
!10974 = !DILocation(line: 788, column: 485, scope: !5945, inlinedAt: !10743)
!10975 = !DILocation(line: 788, column: 466, scope: !5945, inlinedAt: !10743)
!10976 = !DILocation(line: 788, column: 505, scope: !5949, inlinedAt: !10743)
!10977 = !DILocation(line: 788, column: 523, scope: !5949, inlinedAt: !10743)
!10978 = !DILocation(line: 788, column: 535, scope: !5949, inlinedAt: !10743)
!10979 = !DILocation(line: 788, column: 532, scope: !5949, inlinedAt: !10743)
!10980 = !DILocation(line: 788, column: 520, scope: !5949, inlinedAt: !10743)
!10981 = !DILocation(line: 788, column: 504, scope: !5949, inlinedAt: !10743)
!10982 = !DILocation(line: 788, column: 548, scope: !5956, inlinedAt: !10743)
!10983 = !DILocation(line: 788, column: 560, scope: !5956, inlinedAt: !10743)
!10984 = !DILocation(line: 788, column: 557, scope: !5956, inlinedAt: !10743)
!10985 = !DILocation(line: 788, column: 504, scope: !5956, inlinedAt: !10743)
!10986 = !DILocation(line: 788, column: 573, scope: !5961, inlinedAt: !10743)
!10987 = !DILocation(line: 788, column: 504, scope: !5961, inlinedAt: !10743)
!10988 = !DILocation(line: 788, column: 504, scope: !5657, inlinedAt: !10743)
!10989 = !DILocation(line: 788, column: 501, scope: !5657, inlinedAt: !10743)
!10990 = !DILocation(line: 788, column: 645, scope: !5657, inlinedAt: !10743)
!10991 = !DILocation(line: 788, column: 649, scope: !5657, inlinedAt: !10743)
!10992 = !DILocation(line: 788, column: 659, scope: !5657, inlinedAt: !10743)
!10993 = !DILocation(line: 788, column: 668, scope: !5657, inlinedAt: !10743)
!10994 = !DILocation(line: 788, column: 656, scope: !5657, inlinedAt: !10743)
!10995 = !DILocation(line: 788, column: 677, scope: !5657, inlinedAt: !10743)
!10996 = !DILocation(line: 788, column: 601, scope: !5657, inlinedAt: !10743)
!10997 = !DILocation(line: 68, column: 16, scope: !4272, inlinedAt: !10742)
!10998 = !DILocation(line: 68, column: 19, scope: !4272, inlinedAt: !10742)
!10999 = !DILocation(line: 68, column: 24, scope: !4272, inlinedAt: !10742)
!11000 = !DILocation(line: 68, column: 38, scope: !4272, inlinedAt: !10742)
!11001 = !DILocation(line: 68, column: 41, scope: !4272, inlinedAt: !10742)
!11002 = !DILocation(line: 68, column: 46, scope: !4272, inlinedAt: !10742)
!11003 = !DILocation(line: 68, column: 34, scope: !4272, inlinedAt: !10742)
!11004 = !DILocation(line: 68, column: 57, scope: !4272, inlinedAt: !10742)
!11005 = !DILocation(line: 68, column: 69, scope: !4272, inlinedAt: !10742)
!11006 = !DILocation(line: 68, column: 72, scope: !4272, inlinedAt: !10742)
!11007 = !DILocation(line: 68, column: 79, scope: !4272, inlinedAt: !10742)
!11008 = !DILocation(line: 68, column: 84, scope: !4272, inlinedAt: !10742)
!11009 = !DILocation(line: 68, column: 99, scope: !4272, inlinedAt: !10742)
!11010 = !DILocation(line: 68, column: 102, scope: !4272, inlinedAt: !10742)
!11011 = !DILocation(line: 68, column: 109, scope: !4272, inlinedAt: !10742)
!11012 = !DILocation(line: 68, column: 114, scope: !4272, inlinedAt: !10742)
!11013 = !DILocation(line: 68, column: 94, scope: !4272, inlinedAt: !10742)
!11014 = !DILocation(line: 68, column: 63, scope: !4272, inlinedAt: !10742)
!11015 = !DILocation(line: 788, column: 685, scope: !5657, inlinedAt: !10743)
!11016 = !DILocation(line: 788, column: 694, scope: !5657, inlinedAt: !10743)
!11017 = !DILocation(line: 788, column: 681, scope: !5657, inlinedAt: !10743)
!11018 = !DILocation(line: 788, column: 599, scope: !5657, inlinedAt: !10743)
!11019 = !DILocation(line: 788, column: 711, scope: !5657, inlinedAt: !10743)
!11020 = !DILocation(line: 788, column: 710, scope: !5657, inlinedAt: !10743)
!11021 = !DILocation(line: 788, column: 708, scope: !5657, inlinedAt: !10743)
!11022 = !DILocation(line: 788, column: 732, scope: !5657, inlinedAt: !10743)
!11023 = !DILocation(line: 788, column: 742, scope: !5657, inlinedAt: !10743)
!11024 = !DILocation(line: 788, column: 722, scope: !6000, inlinedAt: !10743)
!11025 = !DILocation(line: 788, column: 753, scope: !5657, inlinedAt: !10743)
!11026 = !DILocation(line: 788, column: 751, scope: !5657, inlinedAt: !10743)
!11027 = !DILocation(line: 788, column: 720, scope: !5657, inlinedAt: !10743)
!11028 = !DILocation(line: 788, column: 772, scope: !5657, inlinedAt: !10743)
!11029 = !DILocation(line: 788, column: 766, scope: !5657, inlinedAt: !10743)
!11030 = !DILocation(line: 788, column: 764, scope: !5657, inlinedAt: !10743)
!11031 = !DILocation(line: 788, column: 793, scope: !5657, inlinedAt: !10743)
!11032 = !DILocation(line: 788, column: 787, scope: !5657, inlinedAt: !10743)
!11033 = !DILocation(line: 788, column: 785, scope: !5657, inlinedAt: !10743)
!11034 = !DILocation(line: 788, column: 804, scope: !5657, inlinedAt: !10743)
!11035 = !DILocation(line: 788, column: 806, scope: !6012, inlinedAt: !10743)
!11036 = !DILocation(line: 788, column: 827, scope: !6014, inlinedAt: !10743)
!11037 = !DILocation(line: 788, column: 822, scope: !6014, inlinedAt: !10743)
!11038 = !DILocation(line: 788, column: 844, scope: !6014, inlinedAt: !10743)
!11039 = !DILocation(line: 788, column: 862, scope: !6014, inlinedAt: !10743)
!11040 = !DILocation(line: 788, column: 874, scope: !6014, inlinedAt: !10743)
!11041 = !DILocation(line: 788, column: 871, scope: !6014, inlinedAt: !10743)
!11042 = !DILocation(line: 788, column: 859, scope: !6014, inlinedAt: !10743)
!11043 = !DILocation(line: 788, column: 843, scope: !6014, inlinedAt: !10743)
!11044 = !DILocation(line: 788, column: 881, scope: !6024, inlinedAt: !10743)
!11045 = !DILocation(line: 788, column: 893, scope: !6024, inlinedAt: !10743)
!11046 = !DILocation(line: 788, column: 890, scope: !6024, inlinedAt: !10743)
!11047 = !DILocation(line: 788, column: 843, scope: !6024, inlinedAt: !10743)
!11048 = !DILocation(line: 788, column: 900, scope: !6029, inlinedAt: !10743)
!11049 = !DILocation(line: 788, column: 843, scope: !6029, inlinedAt: !10743)
!11050 = !DILocation(line: 788, column: 843, scope: !6032, inlinedAt: !10743)
!11051 = !DILocation(line: 788, column: 840, scope: !6032, inlinedAt: !10743)
!11052 = !DILocation(line: 790, column: 18, scope: !5663, inlinedAt: !10743)
!11053 = !DILocation(line: 790, column: 6, scope: !5663, inlinedAt: !10743)
!11054 = !DILocation(line: 790, column: 10, scope: !5663, inlinedAt: !10743)
!11055 = !DILocation(line: 790, column: 16, scope: !5663, inlinedAt: !10743)
!11056 = !DILocation(line: 792, column: 12, scope: !5663, inlinedAt: !10743)
!11057 = !DILocation(line: 988, column: 15, scope: !10744)
!11058 = !DILocation(line: 990, column: 24, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !10744, file: !904, line: 990, column: 13)
!11060 = !DILocation(line: 990, column: 30, scope: !11059)
!11061 = !DILocation(line: 990, column: 13, scope: !10744)
!11062 = !DILocation(line: 991, column: 36, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11059, file: !904, line: 990, column: 37)
!11064 = !DILocation(line: 991, column: 23, scope: !11063)
!11065 = !DILocation(line: 991, column: 21, scope: !11063)
!11066 = !DILocation(line: 992, column: 34, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11063, file: !904, line: 992, column: 17)
!11068 = !DILocation(line: 992, column: 17, scope: !11067)
!11069 = !DILocation(line: 992, column: 17, scope: !11063)
!11070 = !DILocation(line: 993, column: 37, scope: !11067)
!11071 = !DILocation(line: 993, column: 58, scope: !11067)
!11072 = !DILocation(line: 993, column: 41, scope: !11067)
!11073 = !DILocation(line: 993, column: 28, scope: !11067)
!11074 = !DILocation(line: 993, column: 25, scope: !11067)
!11075 = !DILocation(line: 993, column: 17, scope: !11067)
!11076 = !DILocation(line: 995, column: 18, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11063, file: !904, line: 995, column: 17)
!11078 = !DILocation(line: 995, column: 17, scope: !11063)
!11079 = !DILocation(line: 996, column: 25, scope: !11077)
!11080 = !DILocation(line: 996, column: 17, scope: !11077)
!11081 = !DILocation(line: 1000, column: 17, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11063, file: !904, line: 1000, column: 17)
!11083 = !DILocation(line: 1000, column: 27, scope: !11082)
!11084 = !DILocation(line: 1000, column: 40, scope: !11082)
!11085 = !DILocation(line: 1000, column: 38, scope: !11082)
!11086 = !DILocation(line: 1000, column: 25, scope: !11082)
!11087 = !DILocation(line: 1000, column: 17, scope: !11063)
!11088 = !DILocation(line: 1001, column: 37, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11082, file: !904, line: 1000, column: 49)
!11090 = !DILocation(line: 1001, column: 50, scope: !11089)
!11091 = !DILocation(line: 1001, column: 48, scope: !11089)
!11092 = !DILocation(line: 1001, column: 59, scope: !11089)
!11093 = !DILocation(line: 1001, column: 35, scope: !11089)
!11094 = !DILocation(line: 1001, column: 29, scope: !11089)
!11095 = !DILocation(line: 1001, column: 17, scope: !11089)
!11096 = !DILocation(line: 1001, column: 33, scope: !11089)
!11097 = !DILocation(line: 1002, column: 33, scope: !11089)
!11098 = !DILocation(line: 1002, column: 46, scope: !11089)
!11099 = !DILocation(line: 1002, column: 44, scope: !11089)
!11100 = !DILocation(line: 1002, column: 30, scope: !11089)
!11101 = !DILocation(line: 1003, column: 28, scope: !11089)
!11102 = !DILocation(line: 1003, column: 41, scope: !11089)
!11103 = !DILocation(line: 1003, column: 39, scope: !11089)
!11104 = !DILocation(line: 1003, column: 25, scope: !11089)
!11105 = !DILocation(line: 1004, column: 27, scope: !11089)
!11106 = !DILocation(line: 1004, column: 25, scope: !11089)
!11107 = !DILocation(line: 1005, column: 13, scope: !11089)
!11108 = !DILocation(line: 1006, column: 37, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11082, file: !904, line: 1005, column: 20)
!11110 = !DILocation(line: 1006, column: 46, scope: !11109)
!11111 = !DILocation(line: 1006, column: 35, scope: !11109)
!11112 = !DILocation(line: 1006, column: 29, scope: !11109)
!11113 = !DILocation(line: 1006, column: 17, scope: !11109)
!11114 = !DILocation(line: 1006, column: 33, scope: !11109)
!11115 = !DILocation(line: 1007, column: 33, scope: !11109)
!11116 = !DILocation(line: 1007, column: 30, scope: !11109)
!11117 = !DILocation(line: 1008, column: 28, scope: !11109)
!11118 = !DILocation(line: 1008, column: 25, scope: !11109)
!11119 = !DILocation(line: 1009, column: 25, scope: !11109)
!11120 = !DILocation(line: 1011, column: 9, scope: !11063)
!11121 = !DILocation(line: 1011, column: 20, scope: !11122)
!11122 = !DILexicalBlockFile(scope: !11123, file: !904, discriminator: 1)
!11123 = distinct !DILexicalBlock(scope: !11059, file: !904, line: 1011, column: 20)
!11124 = !DILocation(line: 1011, column: 26, scope: !11122)
!11125 = !DILocation(line: 1012, column: 42, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11123, file: !904, line: 1011, column: 32)
!11127 = !DILocation(line: 1012, column: 27, scope: !11126)
!11128 = !DILocation(line: 1012, column: 25, scope: !11126)
!11129 = !DILocation(line: 1013, column: 17, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !904, line: 1013, column: 17)
!11131 = !DILocation(line: 1013, column: 17, scope: !11126)
!11132 = !DILocation(line: 1014, column: 40, scope: !11130)
!11133 = !DILocation(line: 1014, column: 44, scope: !11130)
!11134 = !DILocation(line: 1014, column: 31, scope: !11130)
!11135 = !DILocation(line: 1014, column: 29, scope: !11130)
!11136 = !DILocation(line: 1014, column: 17, scope: !11130)
!11137 = !DILocation(line: 1015, column: 41, scope: !11126)
!11138 = !DILocation(line: 1015, column: 21, scope: !11126)
!11139 = !DILocation(line: 1015, column: 34, scope: !11126)
!11140 = !DILocation(line: 1015, column: 19, scope: !11126)
!11141 = !DILocation(line: 1017, column: 38, scope: !11126)
!11142 = !DILocation(line: 1017, column: 24, scope: !11126)
!11143 = !DILocation(line: 1017, column: 22, scope: !11126)
!11144 = !DILocation(line: 1018, column: 35, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11126, file: !904, line: 1018, column: 17)
!11146 = !DILocation(line: 1018, column: 17, scope: !11145)
!11147 = !DILocation(line: 1018, column: 17, scope: !11126)
!11148 = !DILocation(line: 1019, column: 38, scope: !11145)
!11149 = !DILocation(line: 1019, column: 60, scope: !11145)
!11150 = !DILocation(line: 1019, column: 42, scope: !11145)
!11151 = !DILocation(line: 1019, column: 29, scope: !11145)
!11152 = !DILocation(line: 1019, column: 26, scope: !11145)
!11153 = !DILocation(line: 1019, column: 17, scope: !11145)
!11154 = !DILocation(line: 1021, column: 17, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11126, file: !904, line: 1021, column: 17)
!11156 = !DILocation(line: 1021, column: 17, scope: !11126)
!11157 = !DILocation(line: 1022, column: 38, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11155, file: !904, line: 1021, column: 27)
!11159 = !DILocation(line: 1022, column: 37, scope: !11158)
!11160 = !DILocation(line: 1022, column: 45, scope: !11158)
!11161 = !DILocation(line: 1022, column: 56, scope: !11158)
!11162 = !DILocation(line: 1022, column: 66, scope: !11158)
!11163 = !DILocation(line: 1022, column: 52, scope: !11158)
!11164 = !DILocation(line: 1022, column: 72, scope: !11158)
!11165 = !DILocation(line: 1022, column: 35, scope: !11158)
!11166 = !DILocation(line: 1022, column: 29, scope: !11158)
!11167 = !DILocation(line: 1022, column: 17, scope: !11158)
!11168 = !DILocation(line: 1022, column: 33, scope: !11158)
!11169 = !DILocation(line: 1023, column: 13, scope: !11158)
!11170 = !DILocation(line: 1028, column: 22, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !904, line: 1028, column: 21)
!11172 = distinct !DILexicalBlock(scope: !11155, file: !904, line: 1023, column: 20)
!11173 = !DILocation(line: 1028, column: 21, scope: !11172)
!11174 = !DILocation(line: 1029, column: 70, scope: !11171)
!11175 = !DILocation(line: 1029, column: 55, scope: !11171)
!11176 = !DILocation(line: 1029, column: 35, scope: !11171)
!11177 = !DILocation(line: 1029, column: 21, scope: !11171)
!11178 = !DILocation(line: 1029, column: 65, scope: !11171)
!11179 = !DILocation(line: 1029, column: 68, scope: !11171)
!11180 = !DILocation(line: 1031, column: 38, scope: !11172)
!11181 = !DILocation(line: 1031, column: 37, scope: !11172)
!11182 = !DILocation(line: 1031, column: 45, scope: !11172)
!11183 = !DILocation(line: 1031, column: 50, scope: !11172)
!11184 = !DILocation(line: 1031, column: 35, scope: !11172)
!11185 = !DILocation(line: 1031, column: 29, scope: !11172)
!11186 = !DILocation(line: 1031, column: 17, scope: !11172)
!11187 = !DILocation(line: 1031, column: 33, scope: !11172)
!11188 = !DILocation(line: 1034, column: 17, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11126, file: !904, line: 1034, column: 17)
!11190 = !DILocation(line: 1034, column: 31, scope: !11189)
!11191 = !DILocation(line: 1034, column: 29, scope: !11189)
!11192 = !DILocation(line: 1034, column: 40, scope: !11189)
!11193 = !DILocation(line: 1034, column: 17, scope: !11126)
!11194 = !DILocation(line: 1035, column: 24, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11189, file: !904, line: 1034, column: 46)
!11196 = !DILocation(line: 1035, column: 27, scope: !11195)
!11197 = !DILocation(line: 1037, column: 24, scope: !11195)
!11198 = !DILocation(line: 1037, column: 39, scope: !11195)
!11199 = !DILocation(line: 1037, column: 37, scope: !11195)
!11200 = !DILocation(line: 1035, column: 17, scope: !11195)
!11201 = !DILocation(line: 1038, column: 33, scope: !11195)
!11202 = !DILocation(line: 1038, column: 31, scope: !11195)
!11203 = !DILocation(line: 1038, column: 26, scope: !11195)
!11204 = !DILocation(line: 1039, column: 13, scope: !11195)
!11205 = !DILocation(line: 1043, column: 22, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11126, file: !904, line: 1043, column: 13)
!11207 = !DILocation(line: 1043, column: 34, scope: !11206)
!11208 = !DILocation(line: 1043, column: 20, scope: !11206)
!11209 = !DILocation(line: 1043, column: 18, scope: !11206)
!11210 = !DILocation(line: 1043, column: 39, scope: !11211)
!11211 = !DILexicalBlockFile(scope: !11212, file: !904, discriminator: 1)
!11212 = distinct !DILexicalBlock(scope: !11206, file: !904, line: 1043, column: 13)
!11213 = !DILocation(line: 1043, column: 44, scope: !11211)
!11214 = !DILocation(line: 1043, column: 58, scope: !11211)
!11215 = !DILocation(line: 1043, column: 56, scope: !11211)
!11216 = !DILocation(line: 1043, column: 41, scope: !11211)
!11217 = !DILocation(line: 1043, column: 13, scope: !11211)
!11218 = !DILocation(line: 1044, column: 43, scope: !11212)
!11219 = !DILocation(line: 1044, column: 17, scope: !11212)
!11220 = !DILocation(line: 1044, column: 36, scope: !11212)
!11221 = !DILocation(line: 1044, column: 20, scope: !11212)
!11222 = !DILocation(line: 1044, column: 45, scope: !11212)
!11223 = !DILocation(line: 1043, column: 69, scope: !11224)
!11224 = !DILexicalBlockFile(scope: !11212, file: !904, discriminator: 2)
!11225 = !DILocation(line: 1043, column: 13, scope: !11224)
!11226 = distinct !{!11226, !11227}
!11227 = !DILocation(line: 1043, column: 13, scope: !11126)
!11228 = !DILocation(line: 1045, column: 20, scope: !11126)
!11229 = !DILocation(line: 1046, column: 9, scope: !11126)
!11230 = !DILocation(line: 1047, column: 20, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11123, file: !904, line: 1046, column: 16)
!11232 = !DILocation(line: 1047, column: 23, scope: !11231)
!11233 = !DILocation(line: 1047, column: 56, scope: !11231)
!11234 = !DILocation(line: 1047, column: 13, scope: !11231)
!11235 = !DILocation(line: 1048, column: 13, scope: !11231)
!11236 = !DILocation(line: 986, column: 5, scope: !11237)
!11237 = !DILexicalBlockFile(scope: !10738, file: !904, discriminator: 4)
!11238 = distinct !{!11238, !10848}
!11239 = !DILocation(line: 1052, column: 9, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !10738, file: !904, line: 1052, column: 9)
!11241 = !DILocation(line: 1052, column: 50, scope: !11240)
!11242 = !DILocation(line: 1052, column: 24, scope: !11240)
!11243 = !DILocation(line: 1052, column: 43, scope: !11240)
!11244 = !DILocation(line: 1052, column: 27, scope: !11240)
!11245 = !DILocation(line: 1052, column: 22, scope: !11240)
!11246 = !DILocation(line: 1052, column: 9, scope: !10738)
!11247 = !DILocation(line: 1053, column: 16, scope: !11240)
!11248 = !DILocation(line: 1053, column: 19, scope: !11240)
!11249 = !DILocation(line: 1053, column: 9, scope: !11240)
!11250 = !DILocation(line: 1057, column: 9, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !10738, file: !904, line: 1057, column: 9)
!11252 = !DILocation(line: 1057, column: 9, scope: !10738)
!11253 = !DILocation(line: 1058, column: 18, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11251, file: !904, line: 1058, column: 9)
!11255 = !DILocation(line: 1058, column: 30, scope: !11254)
!11256 = !DILocation(line: 1058, column: 16, scope: !11254)
!11257 = !DILocation(line: 1058, column: 14, scope: !11254)
!11258 = !DILocation(line: 1058, column: 35, scope: !11259)
!11259 = !DILexicalBlockFile(scope: !11260, file: !904, discriminator: 1)
!11260 = distinct !DILexicalBlock(scope: !11254, file: !904, line: 1058, column: 9)
!11261 = !DILocation(line: 1058, column: 37, scope: !11259)
!11262 = !DILocation(line: 1058, column: 9, scope: !11259)
!11263 = !DILocation(line: 1059, column: 45, scope: !11260)
!11264 = !DILocation(line: 1059, column: 39, scope: !11260)
!11265 = !DILocation(line: 1059, column: 13, scope: !11260)
!11266 = !DILocation(line: 1059, column: 32, scope: !11260)
!11267 = !DILocation(line: 1059, column: 16, scope: !11260)
!11268 = !DILocation(line: 1059, column: 42, scope: !11260)
!11269 = !DILocation(line: 1058, column: 44, scope: !11270)
!11270 = !DILexicalBlockFile(scope: !11260, file: !904, discriminator: 2)
!11271 = !DILocation(line: 1058, column: 9, scope: !11270)
!11272 = distinct !{!11272, !11273}
!11273 = !DILocation(line: 1058, column: 9, scope: !11251)
!11274 = !DILocation(line: 1059, column: 45, scope: !11275)
!11275 = !DILexicalBlockFile(scope: !11254, file: !904, discriminator: 1)
!11276 = !DILocation(line: 1062, column: 9, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !10738, file: !904, line: 1062, column: 9)
!11278 = !DILocation(line: 1062, column: 15, scope: !11277)
!11279 = !DILocation(line: 1062, column: 9, scope: !10738)
!11280 = !DILocation(line: 1063, column: 49, scope: !11277)
!11281 = !DILocation(line: 1063, column: 62, scope: !11277)
!11282 = !DILocation(line: 1063, column: 60, scope: !11277)
!11283 = !DILocation(line: 1063, column: 34, scope: !11277)
!11284 = !DILocation(line: 1063, column: 9, scope: !11277)
!11285 = !DILocation(line: 1063, column: 23, scope: !11277)
!11286 = !DILocation(line: 1063, column: 29, scope: !11277)
!11287 = !DILocation(line: 1063, column: 12, scope: !11277)
!11288 = !DILocation(line: 1063, column: 47, scope: !11277)
!11289 = !DILocation(line: 1064, column: 14, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11277, file: !904, line: 1064, column: 14)
!11291 = !DILocation(line: 1064, column: 26, scope: !11290)
!11292 = !DILocation(line: 1064, column: 14, scope: !11277)
!11293 = !DILocation(line: 1065, column: 45, scope: !11290)
!11294 = !DILocation(line: 1065, column: 58, scope: !11290)
!11295 = !DILocation(line: 1065, column: 56, scope: !11290)
!11296 = !DILocation(line: 1065, column: 26, scope: !11290)
!11297 = !DILocation(line: 1065, column: 38, scope: !11290)
!11298 = !DILocation(line: 1065, column: 9, scope: !11290)
!11299 = !DILocation(line: 1065, column: 12, scope: !11290)
!11300 = !DILocation(line: 1065, column: 43, scope: !11290)
!11301 = !DILocation(line: 1067, column: 12, scope: !10738)
!11302 = !DILocation(line: 1067, column: 5, scope: !10738)
!11303 = !DILocation(line: 1068, column: 1, scope: !10738)
!11304 = !DILocalVariable(name: "s", arg: 1, scope: !1704, file: !904, line: 1180, type: !1707)
!11305 = !DILocation(line: 1180, column: 53, scope: !1704)
!11306 = !DILocalVariable(name: "first_fragment", arg: 2, scope: !1704, file: !904, line: 1181, type: !890)
!11307 = !DILocation(line: 1181, column: 39, scope: !1704)
!11308 = !DILocalVariable(name: "fragment_width", arg: 3, scope: !1704, file: !904, line: 1182, type: !890)
!11309 = !DILocation(line: 1182, column: 39, scope: !1704)
!11310 = !DILocalVariable(name: "fragment_height", arg: 4, scope: !1704, file: !904, line: 1183, type: !890)
!11311 = !DILocation(line: 1183, column: 39, scope: !1704)
!11312 = !DILocalVariable(name: "x", scope: !1704, file: !904, line: 1190, type: !890)
!11313 = !DILocation(line: 1190, column: 9, scope: !1704)
!11314 = !DILocalVariable(name: "y", scope: !1704, file: !904, line: 1190, type: !890)
!11315 = !DILocation(line: 1190, column: 12, scope: !1704)
!11316 = !DILocalVariable(name: "i", scope: !1704, file: !904, line: 1191, type: !890)
!11317 = !DILocation(line: 1191, column: 9, scope: !1704)
!11318 = !DILocation(line: 1191, column: 13, scope: !1704)
!11319 = !DILocalVariable(name: "predicted_dc", scope: !1704, file: !904, line: 1193, type: !890)
!11320 = !DILocation(line: 1193, column: 9, scope: !1704)
!11321 = !DILocalVariable(name: "vl", scope: !1704, file: !904, line: 1196, type: !890)
!11322 = !DILocation(line: 1196, column: 9, scope: !1704)
!11323 = !DILocalVariable(name: "vul", scope: !1704, file: !904, line: 1196, type: !890)
!11324 = !DILocation(line: 1196, column: 13, scope: !1704)
!11325 = !DILocalVariable(name: "vu", scope: !1704, file: !904, line: 1196, type: !890)
!11326 = !DILocation(line: 1196, column: 18, scope: !1704)
!11327 = !DILocalVariable(name: "vur", scope: !1704, file: !904, line: 1196, type: !890)
!11328 = !DILocation(line: 1196, column: 22, scope: !1704)
!11329 = !DILocalVariable(name: "l", scope: !1704, file: !904, line: 1199, type: !890)
!11330 = !DILocation(line: 1199, column: 9, scope: !1704)
!11331 = !DILocalVariable(name: "ul", scope: !1704, file: !904, line: 1199, type: !890)
!11332 = !DILocation(line: 1199, column: 12, scope: !1704)
!11333 = !DILocalVariable(name: "u", scope: !1704, file: !904, line: 1199, type: !890)
!11334 = !DILocation(line: 1199, column: 16, scope: !1704)
!11335 = !DILocalVariable(name: "ur", scope: !1704, file: !904, line: 1199, type: !890)
!11336 = !DILocation(line: 1199, column: 19, scope: !1704)
!11337 = !DILocalVariable(name: "current_frame_type", scope: !1704, file: !904, line: 1244, type: !890)
!11338 = !DILocation(line: 1244, column: 9, scope: !1704)
!11339 = !DILocalVariable(name: "last_dc", scope: !1704, file: !904, line: 1247, type: !11340)
!11340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 48, align: 16, elements: !1793)
!11341 = !DILocation(line: 1247, column: 11, scope: !1704)
!11342 = !DILocalVariable(name: "transform", scope: !1704, file: !904, line: 1249, type: !890)
!11343 = !DILocation(line: 1249, column: 9, scope: !1704)
!11344 = !DILocation(line: 1254, column: 8, scope: !1704)
!11345 = !DILocation(line: 1253, column: 9, scope: !1704)
!11346 = !DILocation(line: 1252, column: 8, scope: !1704)
!11347 = !DILocation(line: 1251, column: 9, scope: !1704)
!11348 = !DILocation(line: 1257, column: 5, scope: !1704)
!11349 = !DILocation(line: 1257, column: 16, scope: !1704)
!11350 = !DILocation(line: 1256, column: 5, scope: !1704)
!11351 = !DILocation(line: 1256, column: 16, scope: !1704)
!11352 = !DILocation(line: 1255, column: 5, scope: !1704)
!11353 = !DILocation(line: 1255, column: 16, scope: !1704)
!11354 = !DILocation(line: 1260, column: 12, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !1704, file: !904, line: 1260, column: 5)
!11356 = !DILocation(line: 1260, column: 10, scope: !11355)
!11357 = !DILocation(line: 1260, column: 17, scope: !11358)
!11358 = !DILexicalBlockFile(scope: !11359, file: !904, discriminator: 1)
!11359 = distinct !DILexicalBlock(scope: !11355, file: !904, line: 1260, column: 5)
!11360 = !DILocation(line: 1260, column: 21, scope: !11358)
!11361 = !DILocation(line: 1260, column: 19, scope: !11358)
!11362 = !DILocation(line: 1260, column: 5, scope: !11358)
!11363 = !DILocation(line: 1262, column: 16, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !904, line: 1262, column: 9)
!11365 = distinct !DILexicalBlock(scope: !11359, file: !904, line: 1260, column: 43)
!11366 = !DILocation(line: 1262, column: 14, scope: !11364)
!11367 = !DILocation(line: 1262, column: 21, scope: !11368)
!11368 = !DILexicalBlockFile(scope: !11369, file: !904, discriminator: 1)
!11369 = distinct !DILexicalBlock(scope: !11364, file: !904, line: 1262, column: 9)
!11370 = !DILocation(line: 1262, column: 25, scope: !11368)
!11371 = !DILocation(line: 1262, column: 23, scope: !11368)
!11372 = !DILocation(line: 1262, column: 9, scope: !11368)
!11373 = !DILocation(line: 1265, column: 34, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11375, file: !904, line: 1265, column: 17)
!11375 = distinct !DILexicalBlock(scope: !11369, file: !904, line: 1262, column: 51)
!11376 = !DILocation(line: 1265, column: 17, scope: !11374)
!11377 = !DILocation(line: 1265, column: 20, scope: !11374)
!11378 = !DILocation(line: 1265, column: 37, scope: !11374)
!11379 = !DILocation(line: 1265, column: 51, scope: !11374)
!11380 = !DILocation(line: 1265, column: 17, scope: !11375)
!11381 = !DILocation(line: 1267, column: 55, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11374, file: !904, line: 1265, column: 57)
!11383 = !DILocation(line: 1267, column: 38, scope: !11382)
!11384 = !DILocation(line: 1267, column: 41, scope: !11382)
!11385 = !DILocation(line: 1267, column: 58, scope: !11382)
!11386 = !DILocation(line: 1267, column: 21, scope: !11382)
!11387 = !DILocation(line: 1266, column: 36, scope: !11382)
!11388 = !DILocation(line: 1269, column: 27, scope: !11382)
!11389 = !DILocation(line: 1270, column: 21, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11382, file: !904, line: 1270, column: 21)
!11391 = !DILocation(line: 1270, column: 21, scope: !11382)
!11392 = !DILocation(line: 1271, column: 25, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11390, file: !904, line: 1270, column: 24)
!11394 = !DILocation(line: 1271, column: 27, scope: !11393)
!11395 = !DILocation(line: 1271, column: 23, scope: !11393)
!11396 = !DILocation(line: 1272, column: 43, scope: !11393)
!11397 = !DILocation(line: 1272, column: 26, scope: !11393)
!11398 = !DILocation(line: 1272, column: 29, scope: !11393)
!11399 = !DILocation(line: 1272, column: 46, scope: !11393)
!11400 = !DILocation(line: 1272, column: 24, scope: !11393)
!11401 = !DILocation(line: 1273, column: 60, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11393, file: !904, line: 1273, column: 25)
!11403 = !DILocation(line: 1273, column: 43, scope: !11402)
!11404 = !DILocation(line: 1273, column: 46, scope: !11402)
!11405 = !DILocation(line: 1273, column: 63, scope: !11402)
!11406 = !DILocation(line: 1273, column: 26, scope: !11402)
!11407 = !DILocation(line: 1273, column: 81, scope: !11402)
!11408 = !DILocation(line: 1273, column: 78, scope: !11402)
!11409 = !DILocation(line: 1273, column: 25, scope: !11393)
!11410 = !DILocation(line: 1274, column: 35, scope: !11402)
!11411 = !DILocation(line: 1274, column: 25, scope: !11402)
!11412 = !DILocation(line: 1275, column: 17, scope: !11393)
!11413 = !DILocation(line: 1276, column: 21, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11382, file: !904, line: 1276, column: 21)
!11415 = !DILocation(line: 1276, column: 21, scope: !11382)
!11416 = !DILocation(line: 1277, column: 25, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11414, file: !904, line: 1276, column: 24)
!11418 = !DILocation(line: 1277, column: 29, scope: !11417)
!11419 = !DILocation(line: 1277, column: 27, scope: !11417)
!11420 = !DILocation(line: 1277, column: 23, scope: !11417)
!11421 = !DILocation(line: 1278, column: 43, scope: !11417)
!11422 = !DILocation(line: 1278, column: 26, scope: !11417)
!11423 = !DILocation(line: 1278, column: 29, scope: !11417)
!11424 = !DILocation(line: 1278, column: 46, scope: !11417)
!11425 = !DILocation(line: 1278, column: 24, scope: !11417)
!11426 = !DILocation(line: 1279, column: 60, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11417, file: !904, line: 1279, column: 25)
!11428 = !DILocation(line: 1279, column: 43, scope: !11427)
!11429 = !DILocation(line: 1279, column: 46, scope: !11427)
!11430 = !DILocation(line: 1279, column: 63, scope: !11427)
!11431 = !DILocation(line: 1279, column: 26, scope: !11427)
!11432 = !DILocation(line: 1279, column: 81, scope: !11427)
!11433 = !DILocation(line: 1279, column: 78, scope: !11427)
!11434 = !DILocation(line: 1279, column: 25, scope: !11417)
!11435 = !DILocation(line: 1280, column: 35, scope: !11427)
!11436 = !DILocation(line: 1280, column: 25, scope: !11427)
!11437 = !DILocation(line: 1281, column: 25, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11417, file: !904, line: 1281, column: 25)
!11439 = !DILocation(line: 1281, column: 25, scope: !11417)
!11440 = !DILocation(line: 1282, column: 30, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11438, file: !904, line: 1281, column: 28)
!11442 = !DILocation(line: 1282, column: 34, scope: !11441)
!11443 = !DILocation(line: 1282, column: 32, scope: !11441)
!11444 = !DILocation(line: 1282, column: 49, scope: !11441)
!11445 = !DILocation(line: 1282, column: 28, scope: !11441)
!11446 = !DILocation(line: 1283, column: 48, scope: !11441)
!11447 = !DILocation(line: 1283, column: 31, scope: !11441)
!11448 = !DILocation(line: 1283, column: 34, scope: !11441)
!11449 = !DILocation(line: 1283, column: 52, scope: !11441)
!11450 = !DILocation(line: 1283, column: 29, scope: !11441)
!11451 = !DILocation(line: 1284, column: 64, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11441, file: !904, line: 1284, column: 29)
!11453 = !DILocation(line: 1284, column: 47, scope: !11452)
!11454 = !DILocation(line: 1284, column: 50, scope: !11452)
!11455 = !DILocation(line: 1284, column: 68, scope: !11452)
!11456 = !DILocation(line: 1284, column: 30, scope: !11452)
!11457 = !DILocation(line: 1284, column: 86, scope: !11452)
!11458 = !DILocation(line: 1284, column: 83, scope: !11452)
!11459 = !DILocation(line: 1284, column: 29, scope: !11441)
!11460 = !DILocation(line: 1285, column: 39, scope: !11452)
!11461 = !DILocation(line: 1285, column: 29, scope: !11452)
!11462 = !DILocation(line: 1286, column: 21, scope: !11441)
!11463 = !DILocation(line: 1287, column: 25, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11417, file: !904, line: 1287, column: 25)
!11465 = !DILocation(line: 1287, column: 27, scope: !11464)
!11466 = !DILocation(line: 1287, column: 33, scope: !11464)
!11467 = !DILocation(line: 1287, column: 31, scope: !11464)
!11468 = !DILocation(line: 1287, column: 25, scope: !11417)
!11469 = !DILocation(line: 1288, column: 30, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11464, file: !904, line: 1287, column: 49)
!11471 = !DILocation(line: 1288, column: 34, scope: !11470)
!11472 = !DILocation(line: 1288, column: 32, scope: !11470)
!11473 = !DILocation(line: 1288, column: 49, scope: !11470)
!11474 = !DILocation(line: 1288, column: 28, scope: !11470)
!11475 = !DILocation(line: 1289, column: 48, scope: !11470)
!11476 = !DILocation(line: 1289, column: 31, scope: !11470)
!11477 = !DILocation(line: 1289, column: 34, scope: !11470)
!11478 = !DILocation(line: 1289, column: 52, scope: !11470)
!11479 = !DILocation(line: 1289, column: 29, scope: !11470)
!11480 = !DILocation(line: 1290, column: 64, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11470, file: !904, line: 1290, column: 29)
!11482 = !DILocation(line: 1290, column: 47, scope: !11481)
!11483 = !DILocation(line: 1290, column: 50, scope: !11481)
!11484 = !DILocation(line: 1290, column: 68, scope: !11481)
!11485 = !DILocation(line: 1290, column: 30, scope: !11481)
!11486 = !DILocation(line: 1290, column: 86, scope: !11481)
!11487 = !DILocation(line: 1290, column: 83, scope: !11481)
!11488 = !DILocation(line: 1290, column: 29, scope: !11470)
!11489 = !DILocation(line: 1291, column: 39, scope: !11481)
!11490 = !DILocation(line: 1291, column: 29, scope: !11481)
!11491 = !DILocation(line: 1292, column: 21, scope: !11470)
!11492 = !DILocation(line: 1293, column: 17, scope: !11417)
!11493 = !DILocation(line: 1295, column: 21, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11382, file: !904, line: 1295, column: 21)
!11495 = !DILocation(line: 1295, column: 31, scope: !11494)
!11496 = !DILocation(line: 1295, column: 21, scope: !11382)
!11497 = !DILocation(line: 1298, column: 44, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11494, file: !904, line: 1295, column: 37)
!11499 = !DILocation(line: 1298, column: 36, scope: !11498)
!11500 = !DILocation(line: 1298, column: 34, scope: !11498)
!11501 = !DILocation(line: 1299, column: 17, scope: !11498)
!11502 = !DILocation(line: 1302, column: 46, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11494, file: !904, line: 1299, column: 24)
!11504 = !DILocation(line: 1302, column: 26, scope: !11503)
!11505 = !DILocation(line: 1302, column: 62, scope: !11503)
!11506 = !DILocation(line: 1302, column: 60, scope: !11503)
!11507 = !DILocation(line: 1303, column: 46, scope: !11503)
!11508 = !DILocation(line: 1303, column: 26, scope: !11503)
!11509 = !DILocation(line: 1303, column: 62, scope: !11503)
!11510 = !DILocation(line: 1303, column: 60, scope: !11503)
!11511 = !DILocation(line: 1302, column: 67, scope: !11503)
!11512 = !DILocation(line: 1304, column: 46, scope: !11503)
!11513 = !DILocation(line: 1304, column: 26, scope: !11503)
!11514 = !DILocation(line: 1304, column: 62, scope: !11503)
!11515 = !DILocation(line: 1304, column: 60, scope: !11503)
!11516 = !DILocation(line: 1303, column: 66, scope: !11503)
!11517 = !DILocation(line: 1305, column: 46, scope: !11503)
!11518 = !DILocation(line: 1305, column: 26, scope: !11503)
!11519 = !DILocation(line: 1305, column: 62, scope: !11503)
!11520 = !DILocation(line: 1305, column: 60, scope: !11503)
!11521 = !DILocation(line: 1304, column: 67, scope: !11503)
!11522 = !DILocation(line: 1301, column: 34, scope: !11503)
!11523 = !DILocation(line: 1307, column: 34, scope: !11503)
!11524 = !DILocation(line: 1311, column: 26, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11503, file: !904, line: 1311, column: 25)
!11526 = !DILocation(line: 1311, column: 36, scope: !11525)
!11527 = !DILocation(line: 1311, column: 43, scope: !11525)
!11528 = !DILocation(line: 1311, column: 47, scope: !11529)
!11529 = !DILexicalBlockFile(scope: !11525, file: !904, discriminator: 1)
!11530 = !DILocation(line: 1311, column: 57, scope: !11529)
!11531 = !DILocation(line: 1311, column: 25, scope: !11529)
!11532 = !DILocation(line: 1312, column: 31, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11534, file: !904, line: 1312, column: 29)
!11534 = distinct !DILexicalBlock(scope: !11525, file: !904, line: 1311, column: 65)
!11535 = !DILocation(line: 1312, column: 46, scope: !11533)
!11536 = !DILocation(line: 1312, column: 44, scope: !11533)
!11537 = !DILocation(line: 1312, column: 50, scope: !11533)
!11538 = !DILocation(line: 1312, column: 30, scope: !11533)
!11539 = !DILocation(line: 1312, column: 58, scope: !11540)
!11540 = !DILexicalBlockFile(scope: !11533, file: !904, discriminator: 1)
!11541 = !DILocation(line: 1312, column: 73, scope: !11540)
!11542 = !DILocation(line: 1312, column: 71, scope: !11540)
!11543 = !DILocation(line: 1312, column: 30, scope: !11540)
!11544 = !DILocation(line: 1312, column: 82, scope: !11545)
!11545 = !DILexicalBlockFile(scope: !11533, file: !904, discriminator: 2)
!11546 = !DILocation(line: 1312, column: 97, scope: !11545)
!11547 = !DILocation(line: 1312, column: 95, scope: !11545)
!11548 = !DILocation(line: 1312, column: 80, scope: !11545)
!11549 = !DILocation(line: 1312, column: 30, scope: !11545)
!11550 = !DILocation(line: 1312, column: 30, scope: !11551)
!11551 = !DILexicalBlockFile(scope: !11533, file: !904, discriminator: 3)
!11552 = !DILocation(line: 1312, column: 103, scope: !11551)
!11553 = !DILocation(line: 1312, column: 29, scope: !11551)
!11554 = !DILocation(line: 1313, column: 44, scope: !11533)
!11555 = !DILocation(line: 1313, column: 42, scope: !11533)
!11556 = !DILocation(line: 1313, column: 29, scope: !11533)
!11557 = !DILocation(line: 1314, column: 36, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11533, file: !904, line: 1314, column: 34)
!11559 = !DILocation(line: 1314, column: 51, scope: !11558)
!11560 = !DILocation(line: 1314, column: 49, scope: !11558)
!11561 = !DILocation(line: 1314, column: 55, scope: !11558)
!11562 = !DILocation(line: 1314, column: 35, scope: !11558)
!11563 = !DILocation(line: 1314, column: 63, scope: !11564)
!11564 = !DILexicalBlockFile(scope: !11558, file: !904, discriminator: 1)
!11565 = !DILocation(line: 1314, column: 78, scope: !11564)
!11566 = !DILocation(line: 1314, column: 76, scope: !11564)
!11567 = !DILocation(line: 1314, column: 35, scope: !11564)
!11568 = !DILocation(line: 1314, column: 87, scope: !11569)
!11569 = !DILexicalBlockFile(scope: !11558, file: !904, discriminator: 2)
!11570 = !DILocation(line: 1314, column: 102, scope: !11569)
!11571 = !DILocation(line: 1314, column: 100, scope: !11569)
!11572 = !DILocation(line: 1314, column: 85, scope: !11569)
!11573 = !DILocation(line: 1314, column: 35, scope: !11569)
!11574 = !DILocation(line: 1314, column: 35, scope: !11575)
!11575 = !DILexicalBlockFile(scope: !11558, file: !904, discriminator: 3)
!11576 = !DILocation(line: 1314, column: 108, scope: !11575)
!11577 = !DILocation(line: 1314, column: 34, scope: !11575)
!11578 = !DILocation(line: 1315, column: 44, scope: !11558)
!11579 = !DILocation(line: 1315, column: 42, scope: !11558)
!11580 = !DILocation(line: 1315, column: 29, scope: !11558)
!11581 = !DILocation(line: 1316, column: 36, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11558, file: !904, line: 1316, column: 34)
!11583 = !DILocation(line: 1316, column: 51, scope: !11582)
!11584 = !DILocation(line: 1316, column: 49, scope: !11582)
!11585 = !DILocation(line: 1316, column: 56, scope: !11582)
!11586 = !DILocation(line: 1316, column: 35, scope: !11582)
!11587 = !DILocation(line: 1316, column: 64, scope: !11588)
!11588 = !DILexicalBlockFile(scope: !11582, file: !904, discriminator: 1)
!11589 = !DILocation(line: 1316, column: 79, scope: !11588)
!11590 = !DILocation(line: 1316, column: 77, scope: !11588)
!11591 = !DILocation(line: 1316, column: 35, scope: !11588)
!11592 = !DILocation(line: 1316, column: 89, scope: !11593)
!11593 = !DILexicalBlockFile(scope: !11582, file: !904, discriminator: 2)
!11594 = !DILocation(line: 1316, column: 104, scope: !11593)
!11595 = !DILocation(line: 1316, column: 102, scope: !11593)
!11596 = !DILocation(line: 1316, column: 87, scope: !11593)
!11597 = !DILocation(line: 1316, column: 35, scope: !11593)
!11598 = !DILocation(line: 1316, column: 35, scope: !11599)
!11599 = !DILexicalBlockFile(scope: !11582, file: !904, discriminator: 3)
!11600 = !DILocation(line: 1316, column: 111, scope: !11599)
!11601 = !DILocation(line: 1316, column: 34, scope: !11599)
!11602 = !DILocation(line: 1317, column: 44, scope: !11582)
!11603 = !DILocation(line: 1317, column: 42, scope: !11582)
!11604 = !DILocation(line: 1317, column: 29, scope: !11582)
!11605 = !DILocation(line: 1318, column: 21, scope: !11534)
!11606 = !DILocation(line: 1322, column: 43, scope: !11382)
!11607 = !DILocation(line: 1322, column: 34, scope: !11382)
!11608 = !DILocation(line: 1322, column: 17, scope: !11382)
!11609 = !DILocation(line: 1322, column: 20, scope: !11382)
!11610 = !DILocation(line: 1322, column: 37, scope: !11382)
!11611 = !DILocation(line: 1322, column: 40, scope: !11382)
!11612 = !DILocation(line: 1324, column: 64, scope: !11382)
!11613 = !DILocation(line: 1324, column: 47, scope: !11382)
!11614 = !DILocation(line: 1324, column: 50, scope: !11382)
!11615 = !DILocation(line: 1324, column: 67, scope: !11382)
!11616 = !DILocation(line: 1324, column: 25, scope: !11382)
!11617 = !DILocation(line: 1324, column: 17, scope: !11382)
!11618 = !DILocation(line: 1324, column: 45, scope: !11382)
!11619 = !DILocation(line: 1325, column: 13, scope: !11382)
!11620 = !DILocation(line: 1326, column: 9, scope: !11375)
!11621 = !DILocation(line: 1262, column: 42, scope: !11622)
!11622 = !DILexicalBlockFile(scope: !11369, file: !904, discriminator: 2)
!11623 = !DILocation(line: 1262, column: 47, scope: !11622)
!11624 = !DILocation(line: 1262, column: 9, scope: !11622)
!11625 = distinct !{!11625, !11626}
!11626 = !DILocation(line: 1262, column: 9, scope: !11365)
!11627 = !DILocation(line: 1327, column: 5, scope: !11365)
!11628 = !DILocation(line: 1260, column: 39, scope: !11629)
!11629 = !DILexicalBlockFile(scope: !11359, file: !904, discriminator: 2)
!11630 = !DILocation(line: 1260, column: 5, scope: !11629)
!11631 = distinct !{!11631, !11632}
!11632 = !DILocation(line: 1260, column: 5, scope: !1704)
!11633 = !DILocation(line: 1328, column: 1, scope: !1704)
!11634 = distinct !DISubprogram(name: "await_reference_row", scope: !904, file: !904, line: 1484, type: !11635, isLocal: true, isDefinition: true, scopeLine: 1486, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{null, !1707, !1816, !890, !890}
!11637 = !DILocalVariable(name: "s", arg: 1, scope: !11634, file: !904, line: 1484, type: !1707)
!11638 = !DILocation(line: 1484, column: 51, scope: !11634)
!11639 = !DILocalVariable(name: "fragment", arg: 2, scope: !11634, file: !904, line: 1484, type: !1816)
!11640 = !DILocation(line: 1484, column: 67, scope: !11634)
!11641 = !DILocalVariable(name: "motion_y", arg: 3, scope: !11634, file: !904, line: 1485, type: !890)
!11642 = !DILocation(line: 1485, column: 37, scope: !11634)
!11643 = !DILocalVariable(name: "y", arg: 4, scope: !11634, file: !904, line: 1485, type: !890)
!11644 = !DILocation(line: 1485, column: 51, scope: !11634)
!11645 = !DILocalVariable(name: "ref_frame", scope: !11634, file: !904, line: 1487, type: !4018)
!11646 = !DILocation(line: 1487, column: 18, scope: !11634)
!11647 = !DILocalVariable(name: "ref_row", scope: !11634, file: !904, line: 1488, type: !890)
!11648 = !DILocation(line: 1488, column: 9, scope: !11634)
!11649 = !DILocalVariable(name: "border", scope: !11634, file: !904, line: 1489, type: !890)
!11650 = !DILocation(line: 1489, column: 9, scope: !11634)
!11651 = !DILocation(line: 1489, column: 18, scope: !11634)
!11652 = !DILocation(line: 1489, column: 27, scope: !11634)
!11653 = !DILocation(line: 1491, column: 9, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11634, file: !904, line: 1491, column: 9)
!11655 = !DILocation(line: 1491, column: 19, scope: !11654)
!11656 = !DILocation(line: 1491, column: 33, scope: !11654)
!11657 = !DILocation(line: 1491, column: 38, scope: !11654)
!11658 = !DILocation(line: 1492, column: 9, scope: !11654)
!11659 = !DILocation(line: 1492, column: 19, scope: !11654)
!11660 = !DILocation(line: 1492, column: 33, scope: !11654)
!11661 = !DILocation(line: 1491, column: 9, scope: !11662)
!11662 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 1)
!11663 = !DILocation(line: 1493, column: 22, scope: !11654)
!11664 = !DILocation(line: 1493, column: 25, scope: !11654)
!11665 = !DILocation(line: 1493, column: 19, scope: !11654)
!11666 = !DILocation(line: 1493, column: 9, scope: !11654)
!11667 = !DILocation(line: 1495, column: 22, scope: !11654)
!11668 = !DILocation(line: 1495, column: 25, scope: !11654)
!11669 = !DILocation(line: 1495, column: 19, scope: !11654)
!11670 = !DILocation(line: 1497, column: 15, scope: !11634)
!11671 = !DILocation(line: 1497, column: 20, scope: !11634)
!11672 = !DILocation(line: 1497, column: 29, scope: !11634)
!11673 = !DILocation(line: 1497, column: 17, scope: !11634)
!11674 = !DILocation(line: 1497, column: 13, scope: !11634)
!11675 = !DILocation(line: 1498, column: 19, scope: !11634)
!11676 = !DILocation(line: 1498, column: 28, scope: !11634)
!11677 = !DILocation(line: 1498, column: 18, scope: !11634)
!11678 = !DILocation(line: 1498, column: 36, scope: !11662)
!11679 = !DILocation(line: 1498, column: 18, scope: !11662)
!11680 = !DILocation(line: 1498, column: 50, scope: !11681)
!11681 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 2)
!11682 = !DILocation(line: 1498, column: 48, scope: !11681)
!11683 = !DILocation(line: 1498, column: 18, scope: !11681)
!11684 = !DILocation(line: 1498, column: 18, scope: !11685)
!11685 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 3)
!11686 = !DILocation(line: 1498, column: 65, scope: !11685)
!11687 = !DILocation(line: 1498, column: 73, scope: !11685)
!11688 = !DILocation(line: 1498, column: 79, scope: !11685)
!11689 = !DILocation(line: 1498, column: 77, scope: !11685)
!11690 = !DILocation(line: 1498, column: 62, scope: !11685)
!11691 = !DILocation(line: 1498, column: 16, scope: !11685)
!11692 = !DILocation(line: 1498, column: 92, scope: !11693)
!11693 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 4)
!11694 = !DILocation(line: 1498, column: 101, scope: !11693)
!11695 = !DILocation(line: 1498, column: 91, scope: !11693)
!11696 = !DILocation(line: 1498, column: 109, scope: !11697)
!11697 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 5)
!11698 = !DILocation(line: 1498, column: 91, scope: !11697)
!11699 = !DILocation(line: 1498, column: 123, scope: !11700)
!11700 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 6)
!11701 = !DILocation(line: 1498, column: 121, scope: !11700)
!11702 = !DILocation(line: 1498, column: 91, scope: !11700)
!11703 = !DILocation(line: 1498, column: 91, scope: !11704)
!11704 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 7)
!11705 = !DILocation(line: 1498, column: 16, scope: !11704)
!11706 = !DILocation(line: 1498, column: 138, scope: !11707)
!11707 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 8)
!11708 = !DILocation(line: 1498, column: 146, scope: !11707)
!11709 = !DILocation(line: 1498, column: 152, scope: !11707)
!11710 = !DILocation(line: 1498, column: 150, scope: !11707)
!11711 = !DILocation(line: 1498, column: 16, scope: !11707)
!11712 = !DILocation(line: 1498, column: 16, scope: !11713)
!11713 = !DILexicalBlockFile(scope: !11634, file: !904, discriminator: 9)
!11714 = !DILocation(line: 1498, column: 13, scope: !11713)
!11715 = !DILocation(line: 1500, column: 30, scope: !11634)
!11716 = !DILocation(line: 1500, column: 41, scope: !11634)
!11717 = !DILocation(line: 1500, column: 5, scope: !11634)
!11718 = !DILocation(line: 1501, column: 1, scope: !11634)
!11719 = distinct !DISubprogram(name: "vp3_dequant", scope: !904, file: !904, line: 1397, type: !11720, isLocal: true, isDefinition: true, scopeLine: 1399, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1899)
!11720 = !DISubroutineType(types: !11721)
!11721 = !{!890, !1707, !1816, !890, !890, !1778}
!11722 = !DILocalVariable(name: "s", arg: 1, scope: !11719, file: !904, line: 1397, type: !1707)
!11723 = !DILocation(line: 1397, column: 49, scope: !11719)
!11724 = !DILocalVariable(name: "frag", arg: 2, scope: !11719, file: !904, line: 1397, type: !1816)
!11725 = !DILocation(line: 1397, column: 65, scope: !11719)
!11726 = !DILocalVariable(name: "plane", arg: 3, scope: !11719, file: !904, line: 1398, type: !890)
!11727 = !DILocation(line: 1398, column: 35, scope: !11719)
!11728 = !DILocalVariable(name: "inter", arg: 4, scope: !11719, file: !904, line: 1398, type: !890)
!11729 = !DILocation(line: 1398, column: 46, scope: !11719)
!11730 = !DILocalVariable(name: "block", arg: 5, scope: !11719, file: !904, line: 1398, type: !1778)
!11731 = !DILocation(line: 1398, column: 61, scope: !11719)
!11732 = !DILocalVariable(name: "dequantizer", scope: !11719, file: !904, line: 1400, type: !1778)
!11733 = !DILocation(line: 1400, column: 14, scope: !11719)
!11734 = !DILocation(line: 1400, column: 54, scope: !11719)
!11735 = !DILocation(line: 1400, column: 28, scope: !11719)
!11736 = !DILocation(line: 1400, column: 47, scope: !11719)
!11737 = !DILocation(line: 1400, column: 36, scope: !11719)
!11738 = !DILocation(line: 1400, column: 42, scope: !11719)
!11739 = !DILocation(line: 1400, column: 31, scope: !11719)
!11740 = !DILocalVariable(name: "perm", scope: !11719, file: !904, line: 1401, type: !1025)
!11741 = !DILocation(line: 1401, column: 14, scope: !11719)
!11742 = !DILocation(line: 1401, column: 21, scope: !11719)
!11743 = !DILocation(line: 1401, column: 24, scope: !11719)
!11744 = !DILocalVariable(name: "i", scope: !11719, file: !904, line: 1402, type: !890)
!11745 = !DILocation(line: 1402, column: 9, scope: !11719)
!11746 = !DILocation(line: 1404, column: 5, scope: !11719)
!11747 = distinct !{!11747, !11746}
!11748 = !DILocalVariable(name: "token", scope: !11749, file: !904, line: 1405, type: !890)
!11749 = distinct !DILexicalBlock(scope: !11719, file: !904, line: 1404, column: 8)
!11750 = !DILocation(line: 1405, column: 13, scope: !11749)
!11751 = !DILocation(line: 1405, column: 43, scope: !11749)
!11752 = !DILocation(line: 1405, column: 22, scope: !11749)
!11753 = !DILocation(line: 1405, column: 36, scope: !11749)
!11754 = !DILocation(line: 1405, column: 25, scope: !11749)
!11755 = !DILocation(line: 1405, column: 21, scope: !11749)
!11756 = !DILocation(line: 1406, column: 17, scope: !11749)
!11757 = !DILocation(line: 1406, column: 23, scope: !11749)
!11758 = !DILocation(line: 1406, column: 9, scope: !11749)
!11759 = !DILocation(line: 1408, column: 17, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !904, line: 1408, column: 17)
!11761 = distinct !DILexicalBlock(scope: !11749, file: !904, line: 1406, column: 28)
!11762 = !DILocation(line: 1408, column: 25, scope: !11760)
!11763 = !DILocation(line: 1408, column: 17, scope: !11761)
!11764 = !DILocation(line: 1409, column: 38, scope: !11760)
!11765 = !DILocation(line: 1409, column: 17, scope: !11760)
!11766 = !DILocation(line: 1409, column: 31, scope: !11760)
!11767 = !DILocation(line: 1409, column: 20, scope: !11760)
!11768 = !DILocation(line: 1409, column: 40, scope: !11760)
!11769 = !DILocation(line: 1411, column: 44, scope: !11760)
!11770 = !DILocation(line: 1411, column: 50, scope: !11760)
!11771 = !DILocation(line: 1411, column: 39, scope: !11760)
!11772 = !DILocation(line: 1411, column: 18, scope: !11760)
!11773 = !DILocation(line: 1411, column: 32, scope: !11760)
!11774 = !DILocation(line: 1411, column: 21, scope: !11760)
!11775 = !DILocation(line: 1411, column: 42, scope: !11760)
!11776 = !DILocation(line: 1412, column: 13, scope: !11761)
!11777 = !DILocation(line: 1414, column: 34, scope: !11761)
!11778 = !DILocation(line: 1414, column: 13, scope: !11761)
!11779 = !DILocation(line: 1414, column: 27, scope: !11761)
!11780 = !DILocation(line: 1414, column: 16, scope: !11761)
!11781 = !DILocation(line: 1414, column: 36, scope: !11761)
!11782 = !DILocation(line: 1415, column: 19, scope: !11761)
!11783 = !DILocation(line: 1415, column: 25, scope: !11761)
!11784 = !DILocation(line: 1415, column: 31, scope: !11761)
!11785 = !DILocation(line: 1415, column: 15, scope: !11761)
!11786 = !DILocation(line: 1416, column: 17, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11761, file: !904, line: 1416, column: 17)
!11788 = !DILocation(line: 1416, column: 19, scope: !11787)
!11789 = !DILocation(line: 1416, column: 17, scope: !11761)
!11790 = !DILocation(line: 1417, column: 24, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11787, file: !904, line: 1416, column: 25)
!11792 = !DILocation(line: 1417, column: 27, scope: !11791)
!11793 = !DILocation(line: 1417, column: 17, scope: !11791)
!11794 = !DILocation(line: 1418, column: 24, scope: !11791)
!11795 = !DILocation(line: 1418, column: 17, scope: !11791)
!11796 = !DILocation(line: 1420, column: 31, scope: !11761)
!11797 = !DILocation(line: 1420, column: 37, scope: !11761)
!11798 = !DILocation(line: 1420, column: 62, scope: !11761)
!11799 = !DILocation(line: 1420, column: 57, scope: !11761)
!11800 = !DILocation(line: 1420, column: 45, scope: !11761)
!11801 = !DILocation(line: 1420, column: 43, scope: !11761)
!11802 = !DILocation(line: 1420, column: 30, scope: !11761)
!11803 = !DILocation(line: 1420, column: 24, scope: !11761)
!11804 = !DILocation(line: 1420, column: 19, scope: !11761)
!11805 = !DILocation(line: 1420, column: 13, scope: !11761)
!11806 = !DILocation(line: 1420, column: 28, scope: !11761)
!11807 = !DILocation(line: 1421, column: 14, scope: !11761)
!11808 = !DILocation(line: 1422, column: 13, scope: !11761)
!11809 = !DILocation(line: 1424, column: 31, scope: !11761)
!11810 = !DILocation(line: 1424, column: 37, scope: !11761)
!11811 = !DILocation(line: 1424, column: 62, scope: !11761)
!11812 = !DILocation(line: 1424, column: 57, scope: !11761)
!11813 = !DILocation(line: 1424, column: 45, scope: !11761)
!11814 = !DILocation(line: 1424, column: 43, scope: !11761)
!11815 = !DILocation(line: 1424, column: 30, scope: !11761)
!11816 = !DILocation(line: 1424, column: 24, scope: !11761)
!11817 = !DILocation(line: 1424, column: 19, scope: !11761)
!11818 = !DILocation(line: 1424, column: 13, scope: !11761)
!11819 = !DILocation(line: 1424, column: 28, scope: !11761)
!11820 = !DILocation(line: 1425, column: 35, scope: !11761)
!11821 = !DILocation(line: 1425, column: 13, scope: !11761)
!11822 = !DILocation(line: 1425, column: 27, scope: !11761)
!11823 = !DILocation(line: 1425, column: 16, scope: !11761)
!11824 = !DILocation(line: 1425, column: 38, scope: !11761)
!11825 = !DILocation(line: 1426, column: 13, scope: !11761)
!11826 = !DILocation(line: 1428, column: 20, scope: !11761)
!11827 = !DILocation(line: 1428, column: 13, scope: !11761)
!11828 = !DILocation(line: 1430, column: 5, scope: !11749)
!11829 = !DILocation(line: 1430, column: 14, scope: !11830)
!11830 = !DILexicalBlockFile(scope: !11719, file: !904, discriminator: 1)
!11831 = !DILocation(line: 1430, column: 16, scope: !11830)
!11832 = !DILocation(line: 1430, column: 5, scope: !11830)
!11833 = !DILocation(line: 1432, column: 6, scope: !11719)
!11834 = !DILocation(line: 1432, column: 5, scope: !11719)
!11835 = !DILocation(line: 1435, column: 16, scope: !11719)
!11836 = !DILocation(line: 1435, column: 22, scope: !11719)
!11837 = !DILocation(line: 1435, column: 45, scope: !11719)
!11838 = !DILocation(line: 1435, column: 27, scope: !11719)
!11839 = !DILocation(line: 1435, column: 38, scope: !11719)
!11840 = !DILocation(line: 1435, column: 30, scope: !11719)
!11841 = !DILocation(line: 1435, column: 25, scope: !11719)
!11842 = !DILocation(line: 1435, column: 5, scope: !11719)
!11843 = !DILocation(line: 1435, column: 14, scope: !11719)
!11844 = !DILocation(line: 1436, column: 12, scope: !11719)
!11845 = !DILocation(line: 1436, column: 5, scope: !11719)
!11846 = !DILocation(line: 1437, column: 1, scope: !11719)
