; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ivi.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ivi.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.IVIHuffDesc = type { i32, [16 x i8] }
%struct.RVMapDesc = type { i8, i8, [256 x i8], [256 x i8] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.IVIHuffTab = type { i32, %struct.VLC*, %struct.IVIHuffDesc, %struct.VLC }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%union.unaligned_32 = type { i32 }
%struct.IVIPlaneDesc = type { i16, i16, i8, %struct.IVIBandDesc* }
%struct.IVIBandDesc = type { i32, i32, i32, i32, i32, i8*, i32, i16*, i16*, i16*, [4 x i16*], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %struct.IVIHuffTab, i32, [122 x i8], i32, %struct.RVMapDesc*, i32, %struct.IVITile*, void (i32*, i16*, i64, i8*)*, i32, void (i32*, i16*, i64, i32)*, i32, i32, i32, i32, i16*, i16*, i8*, i8* }
%struct.IVITile = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.IVIMbInfo*, %struct.IVIMbInfo* }
%struct.IVIMbInfo = type { i16, i16, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.IVIPicConfig = type { i16, i16, i16, i16, i16, i16, i8, i8 }
%struct.IVI45DecContext = type { %struct.GetBitContext, [9 x %struct.RVMapDesc], i32, i32, i32, i32, i32, i8*, i32, i32, i32, i8, i16, %struct.IVIPicConfig, [3 x %struct.IVIPlaneDesc], i32, i32, i32, i32, i32, %struct.IVIHuffTab, %struct.IVIHuffTab, i8, i8, i8, i8, i8, i16, i8, i32, i32, i8, i8, i8, i8, i8, i32 (%struct.IVI45DecContext*, %struct.AVCodecContext*)*, i32 (%struct.IVI45DecContext*, %struct.IVIBandDesc*, %struct.AVCodecContext*)*, i32 (%struct.IVI45DecContext*, %struct.IVIBandDesc*, %struct.IVITile*, %struct.AVCodecContext*)*, void (%struct.IVI45DecContext*)*, i32 (%struct.IVI45DecContext*)*, i32, [4 x i32], i32, %struct.AVFrame*, i32 }

@ff_ivi_init_static_vlc.table_data = internal global [131072 x [2 x i16]] zeroinitializer, align 16
@ff_ivi_init_static_vlc.initialized_vlcs = internal global i32 0, align 4
@ivi_mb_vlc_tabs = internal global [8 x %struct.VLC] zeroinitializer, align 16
@ivi_mb_huff_desc = internal constant [8 x %struct.IVIHuffDesc] [%struct.IVIHuffDesc { i32 8, [16 x i8] c"\00\04\05\04\04\04\06\06\00\00\00\00\00\00\00\00" }, %struct.IVIHuffDesc { i32 12, [16 x i8] c"\00\02\02\03\03\03\03\05\03\02\02\02\00\00\00\00" }, %struct.IVIHuffDesc { i32 12, [16 x i8] c"\00\02\03\04\03\03\03\03\04\03\02\02\00\00\00\00" }, %struct.IVIHuffDesc { i32 12, [16 x i8] c"\00\03\04\04\03\03\03\03\03\02\02\02\00\00\00\00" }, %struct.IVIHuffDesc { i32 13, [16 x i8] c"\00\04\04\03\03\03\03\02\03\03\02\01\01\00\00\00" }, %struct.IVIHuffDesc { i32 9, [16 x i8] c"\00\04\04\04\04\03\03\03\02\00\00\00\00\00\00\00" }, %struct.IVIHuffDesc { i32 10, [16 x i8] c"\00\04\04\04\04\03\03\02\02\02\00\00\00\00\00\00" }, %struct.IVIHuffDesc { i32 12, [16 x i8] c"\00\04\04\04\03\03\02\03\02\02\02\02\00\00\00\00" }], align 16
@ivi_blk_vlc_tabs = internal global [8 x %struct.VLC] zeroinitializer, align 16
@ivi_blk_huff_desc = internal constant [8 x %struct.IVIHuffDesc] [%struct.IVIHuffDesc { i32 10, [16 x i8] c"\01\02\03\04\04\07\05\05\04\01\00\00\00\00\00\00" }, %struct.IVIHuffDesc { i32 11, [16 x i8] c"\02\03\04\04\04\07\05\04\03\03\02\00\00\00\00\00" }, %struct.IVIHuffDesc { i32 12, [16 x i8] c"\02\04\05\05\05\05\06\04\04\03\01\01\00\00\00\00" }, %struct.IVIHuffDesc { i32 13, [16 x i8] c"\03\03\04\04\05\06\06\04\04\03\02\01\01\00\00\00" }, %struct.IVIHuffDesc { i32 11, [16 x i8] c"\03\04\04\05\05\05\06\05\04\02\02\00\00\00\00\00" }, %struct.IVIHuffDesc { i32 13, [16 x i8] c"\03\04\05\05\05\05\06\04\03\03\02\01\01\00\00\00" }, %struct.IVIHuffDesc { i32 13, [16 x i8] c"\03\04\05\05\05\06\05\04\03\03\02\01\01\00\00\00" }, %struct.IVIHuffDesc { i32 9, [16 x i8] c"\03\04\04\05\05\05\06\05\05\00\00\00\00\00\00\00" }], align 16
@.str = private unnamed_addr constant [29 x i8] c"Empty custom Huffman table!\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Error while initializing custom vlc table!\0A\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"Error while decoding picture header: %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Password-protected clip\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"Color planes not initialized yet\0A\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Error while decoding band: %d, plane: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"This video uses scalability mode\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"This video uses local decoding\0A\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"This video contains B-frames\0A\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"Transparency mode is enabled\0A\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"This video uses Haar transform\0A\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"This video uses fullpel motion vectors\0A\00", align 1
@ff_ivi_vertical_scan_8x8 = constant [64 x i8] c"\00\08\10\18 (08\01\09\11\19!)19\02\0A\12\1A\22*2:\03\0B\13\1B#+3;\04\0C\14\1C$,4<\05\0D\15\1D%-5=\06\0E\16\1E&.6>\07\0F\17\1F'/7?", align 16
@ff_ivi_horizontal_scan_8x8 = constant [64 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?", align 16
@ff_ivi_direct_scan_4x4 = constant [16 x i8] c"\00\01\04\08\05\02\03\06\09\0C\0D\0A\07\0B\0E\0F", align 16
@ff_ivi_rvmap_tabs = constant [9 x %struct.RVMapDesc] [%struct.RVMapDesc { i8 5, i8 2, [256 x i8] cx i8] c"\01\FF\00\02\FE\00\03\FD\01\FF\04\FC\05\FB\01\FF\06\FA\02\FE\07\F9\01\FF\08\F8\09\F7\03\FD\01\FF\0A\F6\02\FE\0B\F5\01\FF\0C\04\F4\FC\01\FF\0D\F3\01\FF\0E\F2\02\05\0F\FE\FB\F1\FD\03\10\F0\11\01\FF\EF\06\12\FA\EE\02\FE\13\ED\01\FF\14\EC\04\FC\07\F9\15\EB\01\FF\02\03\FD\16\FE\EA\08\17\F8\01\02\E9\FF\02\FE\FE\18\01\E8\FF\19\05\FB\01\E7\FF\09\F7\1A\01\E6\03\01\FF\1B\FD\FF\E5\01\03\FF\FD\1C\FC\04\0A\F6\E4\01\FF\01\FF\1D\06\E3\FA\1E\FC\03\03\FD\E2\01\04\FF\1F\FD\01\0B\F5\FF\E1 \FF\FF\02\FE\01\01\E0\01\04\FF\FC!\FF\01\01\FF\05\05\FB\DF\FF\F4\0C\FB\F9\01\01\07\22\04\FC\FF\04\DE\FC#$\FE\DD\FE\DC\02\0D\02\FF\01\F3\01\FF%\01\FB\06\05\FF&\FA\F8\05\08\FF\01\01\DB\FF\05'\FB\FB\06\FA\DA\D9\F2(\0E\02\01\01\FE\D8\FF\FE\02\FF\FF\FF\01\01\01\FF\01\FF\01\FF\01\FF" }, %struct.RVMapDesc { i8 0, i8 38, [256 x i8] c"\00\01\01\02\02\03\03\04\04\05\05\06\08\06\08\07\07\09\09\0A\0A\0B\0B\01\0C\01\0C\0D\0D\10\0E\10\0E\0F\0F\11\11\12\00\12\13\14\15\13\16\15\14\16\19\18\02\19\18\17\17\02\1A\1C\1A\1C\1D\1B\1D\1B!!\01 \01\03 \1E$\03$\1E\1F\1F#\22%)\22#%\04)\041\08\081(&\05&('\05'*+*\079\06+,\062\07,9020--./3./:\013:\014;5\09477;58686\09@@<?<?=>=>\02\0A\02\0A\0B\01\0B\0D\0C\01\0C\0D\10\10\08\08\0E\03\03\0F\0E\0F\04\04\01\11\11\05\01\07\07\05\06\01\02\02\06\16\01\19\15\16\08\18\01\15\19\18\08\12\12\17\09\14\17!\1D!\14\01\13\01\1D$\09$\13)\1C9 \03\1C\03\01\1B11\01 \1A\1A\02\04\04\079)\02\07\0A\05%\10\0A\1B\08\08\0D\10%\0D\01\05", [256 x i8] c"\00\01\FF\01\FF\01\FF\01\FF\01\FF\01\01\FF\FF\01\FF\01\FF\01\FF\01\FF\02\01\FE\FF\01\FF\01\01\FF\FF\01\FF\01\FF\01\00\FF\01\01\01\FF\01\FF\FF\FF\01\01\02\FF\FF\01\FF\FE\01\01\FF\FF\01\01\FF\FF\01\FF\03\01\FD\02\FF\01\01\FE\FF\FF\FF\01\01\01\01\01\FF\FF\FF\02\FF\FE\01\02\FE\FF\01\01\02\FF\FF\01\FE\FF\01\01\FF\02\01\02\FF\01\FE\FF\FE\FF\FF\01\01\FF\01\FF\01\01\01\FF\FF\01\04\FF\FF\FC\01\01\01\02\FF\FF\01\FF\FF\01\FF\FF\01\FE\01\FF\01\01\FF\FF\01\01\FF\FF\03\02\FD\FE\02\05\FE\02\02\FB\FE\FE\FE\02\FD\03\02\03\FD\02\FE\FE\03\FD\06\02\FE\03\FA\03\FD\FD\03\07\FC\04\FD\02\F9\02\02\FE\FC\02\08\FE\FE\FE\04\02\FE\02\03\02\FE\FE\02\02\FE\F8\FE\09\FE\02\FD\FE\02\FE\02\02\02\04\FE\FC\0A\02\02\FE\F7\FE\02\FE\05\04\FC\04\FE\02\FB\FC\FD\04\02\FD\03\FE\FB\05\03\03\FE\FD\F6\FC" }, %struct.RVMapDesc { i8 2, i8 11, [256 x i8] c"\01\01\00\02\02\01\01\03\03\04\04\00\01\01\05\05\02\02\06\06\07\07\01\08\01\08\03\03\09\09\01\02\02\01\04\0A\04\0A\0B\0B\01\05\0C\0C\01\05\0D\0D\03\03\06\06\02\02\0E\0E\10\10\0F\07\0F\08\08\07\01\01\11\11\04\04\01\01\12\12\02\02\05\05\19\03\09\03\19\09\13\18\13\18\01\15\14\01\15\16\14\16\17\17\08\06!\06\08!\07\07\1A\1A\01 \01 \1C\04\1C\0A\1D\1B\1B\0A)\04\1D\02\02)$\1F1\1F\22\1E\22$\1E#\011\0B\05#\0B\01\03\03\05%%\08(\08(\0C\0C**\01&\109\01\06\10'&\06\07\07\0D\0D'+\02+9\022\09,\092\04\0F0,\04\01\0F0\0E\0E\01--\08\03\05\083/\03../\053\01\11\11:\01:\0244\025\07;\06\06857\077\016;86\0A\01\0A\04<\01<\08\04\08@@=\01?\03?>=\05\0B\05\03\0B>", [256 x i8] c"\01\FF\00\01\FF\02\FE\01\FF\01\FF\00\03\FD\01\FF\02\FE\01\FF\01\FF\04\01\FC\FF\02\FE\01\FF\05\03\FD\FB\02\01\FE\FF\01\FF\06\02\01\FF\FA\FE\01\FF\03\FD\02\FE\04\FC\01\FF\01\FF\01\02\FF\02\FE\FE\07\F9\01\FF\03\FD\08\F8\01\FF\05\FB\03\FD\01\04\02\FC\FF\FE\01\01\FF\FF\09\01\01\F7\FF\01\FF\FF\01\FF\03\FD\01\03\FD\FF\03\FD\01\FF\0A\01\F6\FF\01\04\FF\02\01\FF\01\FE\01\FC\FF\06\FA\FF\01\01\01\FF\01\01\FF\FF\FF\01\0B\FF\FE\04\FF\02\F5\05\FB\FC\FF\01\04\01\FC\FF\FE\02\01\FF\0C\01\FE\01\F4\04\02\01\FF\FC\04\FC\02\FE\FF\01\07\FF\FF\F9\FF\FD\01\03\01\05\02\01\FF\FB\0D\FE\FF\02\FE\F3\01\FF\05\06\05\FB\01\01\FA\01\FF\FF\FB\FF\0E\02\FE\01\F2\FF\08\01\FF\F8\01\05\01\05\FB\01\FF\01\FB\FF\0F\01\FF\FF\FF\03\F1\FD\06\01\10\FF\06\FA\FA\01\FF\01\F0\01\07\FF\01\FF\FA\FD\06\F9\03\FF" }, %struct.RVMapDesc { i8 0, i8 35, [256 x i8] c"\00\01\01\02\02\03\03\04\04\01\01\05\05\06\06\07\07\08\08\09\09\02\02\0A\0A\01\01\0B\0B\0C\0C\03\03\0D\0D\00\0E\0E\10\0F\10\0F\04\04\11\01\11\01\05\05\12\12\02\02\06\06\08\13\07\08\07\13\14\14\15\15\16\18\16\18\17\17\01\01\19\19\03\03\1A\1A\09\09\1B\1B\1C\1C!\1D\04!\1D\01\04\01  \02\02\1F\0A\1E\0A\1E\1F\22\22\05\05$$#)#\0B)\0B%\01\08\08%\06\01\06(\07\07(\0C&\0C''&1\0D1\0D\03*\03*\10\10++\0E\0E\01\01,\0F,\0F\02\02902092\04--\04.//.\013\01\11\113\08\09\09\05:\08:\054478587;;56\01\066\07\07\06\01\02\03\02\03@<<\0A\0A@=>=?\01?>\01\12\18\12\04\19\04\08\15\15\01\18\16\19\16\08\0B\13\0B\17\01\14\17\13\14\05\0C\05\01\10\02\0C\0D\02\0D\01\10", [256 x i8] c"\00\01\FF\01\FF\01\FF\01\FF\02\FE\01\FF\01\FF\01\FF\01\FF\01\FF\02\FE\01\FF\03\FD\01\FF\01\FF\02\FE\01\FF\00\01\FF\01\01\FF\FF\02\FE\01\04\FF\FC\02\FE\01\FF\FD\03\02\FE\02\01\02\FE\FE\FF\01\FF\01\FF\01\01\FF\FF\01\FF\05\FB\01\FF\03\FD\01\FF\02\FE\01\FF\01\FF\01\01\03\FF\FF\06\FD\FA\FF\01\04\FC\01\02\01\FE\FF\FF\01\FF\03\FD\01\FF\01\01\FF\02\FF\FE\01\07\FD\03\FF\03\F9\FD\01\FD\03\FF\02\01\FE\01\FF\FF\01\02\FF\FE\FC\FF\04\01\02\FE\01\FF\FE\02\08\F8\FF\02\01\FE\FB\05\01\FF\FF\01\FF\01\04\FF\01\FC\FF\FF\01\01\09\01\F7\02\FE\FF\FC\03\FD\FC\FF\04\01\04\01\FF\01\FF\01\01\FF\01\FF\FF\FF\0A\04\01\04\FC\FC\F6\06\05\FA\FB\01\FF\01\03\FD\FF\01\FF\FF\FF\0B\01\01\F5\FE\FE\02\05\FE\FB\FB\02\FE\0C\02\FE\02\02\05\FD\FE\03\FE\F4\FE\02\02\02\FB\03\05\0D\FD\07\FD\FD\F9\03\F3\03" }, %struct.RVMapDesc { i8 0, i8 34, [256 x i8] cx i8] c}, %struct.RVMapDesc { i8 2, i8 33, [256 x i8] cx i8] c"\01\FF\00\01\02\FF\FE\01\FF\03\FD\01\FF\02\FE\04\FC\01\FF\01\05\FF\FB\01\FF\02\FE\03\01\FD\FF\06\FA\00\01\FF\07\F9\01\02\FF\FE\01\FF\04\08\FC\F8\01\FF\03\FD\09\F7\01\02\FE\FF\01\0A\F6\FF\05\FB\02\FE\01\0B\F5\FF\01\03\02\FF\FD\FE\0C\F4\04\FC\02\FE\FA\06\0D\F3\01\FF\0E\F2\01\FF\03\FD\07\F9\0F\F1\02\01\FE\FF\01\05\FB\FF\F0\02\01\10\FE\04\FC\FF\01\03\FD\FF\11\EF\01\01\F8\08\FF\FF\02\12\EE\FE\03\01\FD\13\ED\FF\03\FD\06\01\FA\14\02\09\F7\FF\EC\FE\04\FC\01\FB\15\05\EB\FF\01\EA\FF\02\16\FE\0A\01\F6\17\01\04\E9\01\02\FF\FE\FC\F9\01\07\E8\FF\18\FF\FF\01\03\FF\E7\19\04\FD\FC\0B\F5\1A\E6\06\01\01\FA\FB\FD\03\05\FF\E5\1B\01\04\FC\FF\F8\FF\1C\02\08\F4\E4\FE\FE\02\0C\FF\1D\01\E3\1E\E2\05\FB\01\E1\FF\03\1F\FF\01\01\FD\F3\01\F9\FF\E0\0D\07 !\DF\FF\F7\DE\09\22\FA\05\06\FB" }, %struct.RVMapDesc { i8 2, i8 13, [256 x i8] c"\01\01\00\01\01\02\02\01\01\03\03\01\01\00\02\02\04\01\04\01\01\01\05\05\01\01\06\06\02\02\01\01\03\03\07\07\01\01\08\08\01\01\02\02\01\09\01\09\04\04\0A\01\01\0A\01\01\0B\0B\03\03\01\02\01\02\01\01\0C\0C\05\05\01\01\0D\01\01\0D\02\02\01\01\06\06\01\01\04\0E\04\0E\03\01\03\01\01\01\0F\07\0F\02\02\07\01\01\01\08\01\08\10\10\01\01\01\01\02\01\01\02\01\01\03\05\05\03\04\01\01\04\01\01\11\11\09\01\01\09\02\02\01\01\0A\0A\01\06\01\01\06\12\01\01\12\01\01\01\02\02\03\01\03\01\01\01\04\01\13\01\13\07\01\01\14\01\04\14\01\07\0B\02\01\0B\15\02\08\05\01\08\01\05\15\01\01\01\16\01\01\16\01\01\03\03\01\17\02\0C\18\01\01\02\01\01\0C\17\01\01\18\01\01\01\04\01\01\01\02\01\06\06\04\02\01\01\01\01\01\01\01\0E\0D\03\01\19\09\19\0E\01\09\03\0D\01\01\01\01\01\0A\01\01\02\0A\02", [256 x i8] c"\EC\FF\00\02\FE\01\FF\03\FD\01\FF\04\FC\00\02\FE\01\05\FF\FB\06\FA\01\FF\07\F9\01\FF\03\FD\08\F8\02\FE\01\FF\09\F7\01\FF\0A\F6\04\FC\0B\01\F5\FF\02\FE\01\0C\F4\FF\0D\F3\01\FF\03\FD\0E\05\F2\FB\F1\0F\FF\01\02\FE\10\F0\01\11\EF\FF\06\FA\12\EE\02\FE\ED\13\FD\01\03\FF\04\14\FC\01\EB\15\01\02\FF\F9\07\FE\16\EA\17\02\E9\FE\01\FF\E8\18\E7\19\F8\E6\1A\08\E5\1B\05\03\FD\FB\FC\1C\E4\04\1D\E3\01\FF\FE\E2\1E\02\09\F7\E1\1F\02\FE\E0\03 \DF\FD\01!\DE\FF\22\DD#\F6\0A\FA$\06\DC%\DB\FB&\01\DA\FF\03'\D9\FF(\05\01\D8\FD\02\F5\D7\FE\01\0B\FD\FC)\03*\04\FF\D5\D6+\01\D4-\FF,\D3\F9\07\D2\01\F4\02\01\D1.\0C/0\FE\FF\D01\FF\CE\CF2\FA\CD34\F35\FC\04\06\0D\CB\CC\CA76\C9\C8\FE\02\F88\01\FD\FF\02:\03\08\FE9\C6\C4\C5\C7\FD<;\F2\03\0E" }, %struct.RVMapDesc { i8 2, i8 38, [256 x i8] cx i8] c"\01\FF\00\01\FF\02\FE\01\FF\01\FF\01\FF\03\FD\01\FF\FE\02\01\FF\01\FF\04\FC\FE\02\01\FF\01\FF\05\FB\FD\03\02\FE\01\00\FF\01\FF\01\FF\06\FA\02\FE\01\FF\01\01\FF\FF\FD\03\07\02\F9\FE\FC\04\02\FE\02\FE\01\FF\08\F8\03\FD\01\FF\FB\05\09\01\F7\01\FF\FF\01\FF\FC\04\01\FF\03\FD\01\F6\0A\01\02\FF\FF\FE\06\FA\02\0B\F5\FE\03\FD\01\FC\04\FF\03\FD\01\03\0C\FD\FB\F4\FF\05\02\FE\01\FF\F9\01\0D\07\FF\F3\02\FE\04\FC\01\02\FE\FF\01\0E\F2\01\01\01\FF\FB\FF\FF\05\FF\FA\02\F1\0F\06\01\FF\F8\08\FE\FC\04\01\01\FF\FF\10\02\F0\FE\02\FE\04\03\FC\FD\FF\FC\04\01\EF\11\FF\F7\01\01\09\01\FB\FF\FF\05\F9\07\06\FA\03\FD\12\EE\13\ED\01\F6\FF\0A\FB\05\14\EC\FD\01\03\01\08\FF\F8\02\07\FF\EB\FE\05\15\05\FF\F9\FB\01\FA\FB\F5\06\16\0B\01\01\EA\FD\FF\03\FF\03\FD\E9\04\FC\01\17\FF\01\FF\01\FE\02\FF" }, %struct.RVMapDesc { i8 4, i8 11, [256 x i8] cx i8] c"\01\FF\02\FE\00\01\FF\03\FD\01\FF\00\04\FC\02\FE\01\FF\05\FB\01\FF\06\FA\03\FD\02\FE\01\FF\07\F9\01\FF\01\08\FF\04\FC\F8\02\FE\09\03\F7\FD\01\FF\05\FB\0A\02\F6\FE\01\FF\0B\F5\01\FF\FC\02\04\03\FD\FE\06\FA\0C\01\F4\FF\02\01\FE\FF\0D\F3\02\FE\07\F9\01\FF\01\01\FF\03\FD\0E\05\FF\F2\FB\04\FC\0F\F1\01\FF\08\F8\FD\03\10\01\F0\FF\01\01\FF\FF\01\01\FF\01\02\01\FE\01\FF\FF\FF\06\FF\03\FA\11\EF\FD\01\01\01\04\FF\FF\FC\03\FF\05\FD\FF\F7\09\FB\01\12\EE\02\01\FE\01\FF\FF\01\13\FF\01\ED\FF\04\01\FF\01\07\FC\FE\02\F9\0A\FF\F6\01\14\FF\EC\01\FF\02\04\FE\05\01\FB\06\FC\15\04\02\FA\EB\FF\FE\01\FC\FF\FD\16\FF\01\03\EA\FF\0B\F5\01\01\01\08\F8\02\02\FF\FE\FE\FF\01\FF\FB\05\02\17\E9\FE\01\FF\18\E8\FF\FF\07\06\F9\05\FA\0C\FD\03\01\FB\01\01\F4\19\FF\FB\05\E7\FF\01\09\01\FF\F7\1A\E6" }], align 16
@ff_reverse = external constant [256 x i8], align 16
@.str.12 = private unnamed_addr constant [19 x i8] c"ref_tile mismatch\0A\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"Band buffer points to no data!\0A\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"Error while decoding band header: %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"Empty band encountered!\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"MB sizes mismatch: %d vs. %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"Tile data size is zero!\0A\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"Corrupted tile data encountered!\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"Tile data_size mismatch!\0A\00", align 1
@.str.20 = private unnamed_addr constant [77 x i8] c"Allocated tile size %d mismatches parameters %d in ivi_process_empty_tile()\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"MV out of bounds\0A\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"offs >= 0 && ref_offs >= 0 && band->ref_buf\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"libavcodec/ivi.c\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"buf_size - min_size >= offs\00", align 1
@.str.26 = private unnamed_addr constant [43 x i8] c"buf_size - min_size - ref_size >= ref_offs\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"Scan pattern is not set.\0A\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"Invalid sym encountered: %u.\0A\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"Too large transform\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define void @ff_ivi_init_static_vlc() #0 !dbg !911 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !983, metadata !984), !dbg !985
  %0 = load i32, i32* @ff_ivi_init_static_vlc.initialized_vlcs, align 4, !dbg !986
  %tobool = icmp ne i32 %0, 0, !dbg !986
  br i1 %tobool, label %if.then, label %if.end, !dbg !988

if.then:                                          ; preds = %entry
  br label %return, !dbg !989

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !990
  br label %for.cond, !dbg !992

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !993
  %cmp = icmp slt i32 %1, 8, !dbg !996
  br i1 %cmp, label %for.body, label %for.end, !dbg !997

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !998
  %mul = mul nsw i32 %2, 2, !dbg !1000
  %mul1 = mul nsw i32 %mul, 8192, !dbg !1001
  %idx.ext = sext i32 %mul1 to i64, !dbg !1002
  %add.ptr = getelementptr inbounds [2 x i16], [2 x i16]* getelementptr inbounds ([131072 x [2 x i16]], [131072 x [2 x i16]]* @ff_ivi_init_static_vlc.table_data, i32 0, i32 0), i64 %idx.ext, !dbg !1002
  %3 = load i32, i32* %i, align 4, !dbg !1003
  %idxprom = sext i32 %3 to i64, !dbg !1004
  %arrayidx = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_mb_vlc_tabs, i64 0, i64 %idxprom, !dbg !1004
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !1005
  store [2 x i16]* %add.ptr, [2 x i16]** %table, align 8, !dbg !1006
  %4 = load i32, i32* %i, align 4, !dbg !1007
  %idxprom2 = sext i32 %4 to i64, !dbg !1008
  %arrayidx3 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_mb_vlc_tabs, i64 0, i64 %idxprom2, !dbg !1008
  %table_allocated = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx3, i32 0, i32 3, !dbg !1009
  store i32 8192, i32* %table_allocated, align 4, !dbg !1010
  %5 = load i32, i32* %i, align 4, !dbg !1011
  %idxprom4 = sext i32 %5 to i64, !dbg !1012
  %arrayidx5 = getelementptr inbounds [8 x %struct.IVIHuffDesc], [8 x %struct.IVIHuffDesc]* @ivi_mb_huff_desc, i64 0, i64 %idxprom4, !dbg !1012
  %6 = load i32, i32* %i, align 4, !dbg !1013
  %idxprom6 = sext i32 %6 to i64, !dbg !1014
  %arrayidx7 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_mb_vlc_tabs, i64 0, i64 %idxprom6, !dbg !1014
  %call = call i32 @ivi_create_huff_from_desc(%struct.IVIHuffDesc* %arrayidx5, %struct.VLC* %arrayidx7, i32 1), !dbg !1015
  %7 = load i32, i32* %i, align 4, !dbg !1016
  %mul8 = mul nsw i32 %7, 2, !dbg !1017
  %add = add nsw i32 %mul8, 1, !dbg !1018
  %mul9 = mul nsw i32 %add, 8192, !dbg !1019
  %idx.ext10 = sext i32 %mul9 to i64, !dbg !1020
  %add.ptr11 = getelementptr inbounds [2 x i16], [2 x i16]* getelementptr inbounds ([131072 x [2 x i16]], [131072 x [2 x i16]]* @ff_ivi_init_static_vlc.table_data, i32 0, i32 0), i64 %idx.ext10, !dbg !1020
  %8 = load i32, i32* %i, align 4, !dbg !1021
  %idxprom12 = sext i32 %8 to i64, !dbg !1022
  %arrayidx13 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_blk_vlc_tabs, i64 0, i64 %idxprom12, !dbg !1022
  %table14 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx13, i32 0, i32 1, !dbg !1023
  store [2 x i16]* %add.ptr11, [2 x i16]** %table14, align 8, !dbg !1024
  %9 = load i32, i32* %i, align 4, !dbg !1025
  %idxprom15 = sext i32 %9 to i64, !dbg !1026
  %arrayidx16 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_blk_vlc_tabs, i64 0, i64 %idxprom15, !dbg !1026
  %table_allocated17 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx16, i32 0, i32 3, !dbg !1027
  store i32 8192, i32* %table_allocated17, align 4, !dbg !1028
  %10 = load i32, i32* %i, align 4, !dbg !1029
  %idxprom18 = sext i32 %10 to i64, !dbg !1030
  %arrayidx19 = getelementptr inbounds [8 x %struct.IVIHuffDesc], [8 x %struct.IVIHuffDesc]* @ivi_blk_huff_desc, i64 0, i64 %idxprom18, !dbg !1030
  %11 = load i32, i32* %i, align 4, !dbg !1031
  %idxprom20 = sext i32 %11 to i64, !dbg !1032
  %arrayidx21 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_blk_vlc_tabs, i64 0, i64 %idxprom20, !dbg !1032
  %call22 = call i32 @ivi_create_huff_from_desc(%struct.IVIHuffDesc* %arrayidx19, %struct.VLC* %arrayidx21, i32 1), !dbg !1033
  br label %for.inc, !dbg !1034

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !1035
  %inc = add nsw i32 %12, 1, !dbg !1035
  store i32 %inc, i32* %i, align 4, !dbg !1035
  br label %for.cond, !dbg !1037, !llvm.loop !1038

for.end:                                          ; preds = %for.cond
  store i32 1, i32* @ff_ivi_init_static_vlc.initialized_vlcs, align 4, !dbg !1040
  br label %return, !dbg !1041

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !1042
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal i32 @ivi_create_huff_from_desc(%struct.IVIHuffDesc* %cb, %struct.VLC* %vlc, i32 %flag) #2 !dbg !1044 {
entry:
  %retval = alloca i32, align 4
  %cb.addr = alloca %struct.IVIHuffDesc*, align 8
  %vlc.addr = alloca %struct.VLC*, align 8
  %flag.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %codes_per_row = alloca i32, align 4
  %prefix = alloca i32, align 4
  %not_last_row = alloca i32, align 4
  %codewords = alloca [256 x i16], align 16
  %bits = alloca [256 x i8], align 16
  store %struct.IVIHuffDesc* %cb, %struct.IVIHuffDesc** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIHuffDesc** %cb.addr, metadata !1049, metadata !984), !dbg !1050
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !1051, metadata !984), !dbg !1052
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !1053, metadata !984), !dbg !1054
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !1055, metadata !984), !dbg !1056
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1057, metadata !984), !dbg !1058
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1059, metadata !984), !dbg !1060
  call void @llvm.dbg.declare(metadata i32* %codes_per_row, metadata !1061, metadata !984), !dbg !1062
  call void @llvm.dbg.declare(metadata i32* %prefix, metadata !1063, metadata !984), !dbg !1064
  call void @llvm.dbg.declare(metadata i32* %not_last_row, metadata !1065, metadata !984), !dbg !1066
  call void @llvm.dbg.declare(metadata [256 x i16]* %codewords, metadata !1067, metadata !984), !dbg !1071
  call void @llvm.dbg.declare(metadata [256 x i8]* %bits, metadata !1072, metadata !984), !dbg !1073
  store i32 0, i32* %pos, align 4, !dbg !1074
  store i32 0, i32* %i, align 4, !dbg !1075
  br label %for.cond, !dbg !1077

for.cond:                                         ; preds = %for.inc46, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1078
  %1 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %cb.addr, align 8, !dbg !1081
  %num_rows = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %1, i32 0, i32 0, !dbg !1082
  %2 = load i32, i32* %num_rows, align 4, !dbg !1082
  %cmp = icmp slt i32 %0, %2, !dbg !1083
  br i1 %cmp, label %for.body, label %for.end48, !dbg !1084

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !1085
  %idxprom = sext i32 %3 to i64, !dbg !1087
  %4 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %cb.addr, align 8, !dbg !1087
  %xbits = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %4, i32 0, i32 1, !dbg !1088
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %xbits, i64 0, i64 %idxprom, !dbg !1087
  %5 = load i8, i8* %arrayidx, align 1, !dbg !1087
  %conv = zext i8 %5 to i32, !dbg !1087
  %shl = shl i32 1, %conv, !dbg !1089
  store i32 %shl, i32* %codes_per_row, align 4, !dbg !1090
  %6 = load i32, i32* %i, align 4, !dbg !1091
  %7 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %cb.addr, align 8, !dbg !1092
  %num_rows1 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %7, i32 0, i32 0, !dbg !1093
  %8 = load i32, i32* %num_rows1, align 4, !dbg !1093
  %sub = sub nsw i32 %8, 1, !dbg !1094
  %cmp2 = icmp ne i32 %6, %sub, !dbg !1095
  %conv3 = zext i1 %cmp2 to i32, !dbg !1095
  store i32 %conv3, i32* %not_last_row, align 4, !dbg !1096
  %9 = load i32, i32* %i, align 4, !dbg !1097
  %shl4 = shl i32 1, %9, !dbg !1098
  %sub5 = sub nsw i32 %shl4, 1, !dbg !1099
  %10 = load i32, i32* %i, align 4, !dbg !1100
  %idxprom6 = sext i32 %10 to i64, !dbg !1101
  %11 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %cb.addr, align 8, !dbg !1101
  %xbits7 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %11, i32 0, i32 1, !dbg !1102
  %arrayidx8 = getelementptr inbounds [16 x i8], [16 x i8]* %xbits7, i64 0, i64 %idxprom6, !dbg !1101
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !1101
  %conv9 = zext i8 %12 to i32, !dbg !1101
  %13 = load i32, i32* %not_last_row, align 4, !dbg !1103
  %add = add nsw i32 %conv9, %13, !dbg !1104
  %shl10 = shl i32 %sub5, %add, !dbg !1105
  store i32 %shl10, i32* %prefix, align 4, !dbg !1106
  store i32 0, i32* %j, align 4, !dbg !1107
  br label %for.cond11, !dbg !1109

for.cond11:                                       ; preds = %for.inc, %for.body
  %14 = load i32, i32* %j, align 4, !dbg !1110
  %15 = load i32, i32* %codes_per_row, align 4, !dbg !1113
  %cmp12 = icmp slt i32 %14, %15, !dbg !1114
  br i1 %cmp12, label %for.body14, label %for.end, !dbg !1115

for.body14:                                       ; preds = %for.cond11
  %16 = load i32, i32* %pos, align 4, !dbg !1116
  %cmp15 = icmp sge i32 %16, 256, !dbg !1119
  br i1 %cmp15, label %if.then, label %if.end, !dbg !1120

if.then:                                          ; preds = %for.body14
  br label %for.end, !dbg !1121

if.end:                                           ; preds = %for.body14
  %17 = load i32, i32* %i, align 4, !dbg !1122
  %18 = load i32, i32* %i, align 4, !dbg !1123
  %idxprom17 = sext i32 %18 to i64, !dbg !1124
  %19 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %cb.addr, align 8, !dbg !1124
  %xbits18 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %19, i32 0, i32 1, !dbg !1125
  %arrayidx19 = getelementptr inbounds [16 x i8], [16 x i8]* %xbits18, i64 0, i64 %idxprom17, !dbg !1124
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !1124
  %conv20 = zext i8 %20 to i32, !dbg !1124
  %add21 = add nsw i32 %17, %conv20, !dbg !1126
  %21 = load i32, i32* %not_last_row, align 4, !dbg !1127
  %add22 = add nsw i32 %add21, %21, !dbg !1128
  %conv23 = trunc i32 %add22 to i8, !dbg !1122
  %22 = load i32, i32* %pos, align 4, !dbg !1129
  %idxprom24 = sext i32 %22 to i64, !dbg !1130
  %arrayidx25 = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i64 0, i64 %idxprom24, !dbg !1130
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !1131
  %23 = load i32, i32* %pos, align 4, !dbg !1132
  %idxprom26 = sext i32 %23 to i64, !dbg !1134
  %arrayidx27 = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i64 0, i64 %idxprom26, !dbg !1134
  %24 = load i8, i8* %arrayidx27, align 1, !dbg !1134
  %conv28 = zext i8 %24 to i32, !dbg !1134
  %cmp29 = icmp sgt i32 %conv28, 13, !dbg !1135
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !1136

if.then31:                                        ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !1137
  br label %return, !dbg !1137

if.end32:                                         ; preds = %if.end
  %25 = load i32, i32* %prefix, align 4, !dbg !1138
  %26 = load i32, i32* %j, align 4, !dbg !1139
  %or = or i32 %25, %26, !dbg !1140
  %conv33 = trunc i32 %or to i16, !dbg !1141
  %27 = load i32, i32* %pos, align 4, !dbg !1142
  %idxprom34 = sext i32 %27 to i64, !dbg !1143
  %arrayidx35 = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i64 0, i64 %idxprom34, !dbg !1143
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !1143
  %conv36 = zext i8 %28 to i32, !dbg !1143
  %call = call zeroext i16 @inv_bits(i16 zeroext %conv33, i32 %conv36), !dbg !1144
  %29 = load i32, i32* %pos, align 4, !dbg !1145
  %idxprom37 = sext i32 %29 to i64, !dbg !1146
  %arrayidx38 = getelementptr inbounds [256 x i16], [256 x i16]* %codewords, i64 0, i64 %idxprom37, !dbg !1146
  store i16 %call, i16* %arrayidx38, align 2, !dbg !1147
  %30 = load i32, i32* %pos, align 4, !dbg !1148
  %idxprom39 = sext i32 %30 to i64, !dbg !1150
  %arrayidx40 = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i64 0, i64 %idxprom39, !dbg !1150
  %31 = load i8, i8* %arrayidx40, align 1, !dbg !1150
  %tobool = icmp ne i8 %31, 0, !dbg !1150
  br i1 %tobool, label %if.end44, label %if.then41, !dbg !1151

if.then41:                                        ; preds = %if.end32
  %32 = load i32, i32* %pos, align 4, !dbg !1152
  %idxprom42 = sext i32 %32 to i64, !dbg !1153
  %arrayidx43 = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i64 0, i64 %idxprom42, !dbg !1153
  store i8 1, i8* %arrayidx43, align 1, !dbg !1154
  br label %if.end44, !dbg !1153

if.end44:                                         ; preds = %if.then41, %if.end32
  %33 = load i32, i32* %pos, align 4, !dbg !1155
  %inc = add nsw i32 %33, 1, !dbg !1155
  store i32 %inc, i32* %pos, align 4, !dbg !1155
  br label %for.inc, !dbg !1156

for.inc:                                          ; preds = %if.end44
  %34 = load i32, i32* %j, align 4, !dbg !1157
  %inc45 = add nsw i32 %34, 1, !dbg !1157
  store i32 %inc45, i32* %j, align 4, !dbg !1157
  br label %for.cond11, !dbg !1159, !llvm.loop !1160

for.end:                                          ; preds = %if.then, %for.cond11
  br label %for.inc46, !dbg !1162

for.inc46:                                        ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !1163
  %inc47 = add nsw i32 %35, 1, !dbg !1163
  store i32 %inc47, i32* %i, align 4, !dbg !1163
  br label %for.cond, !dbg !1165, !llvm.loop !1166

for.end48:                                        ; preds = %for.cond
  %36 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !1168
  %37 = load i32, i32* %pos, align 4, !dbg !1169
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i32 0, i32 0, !dbg !1170
  %arraydecay49 = getelementptr inbounds [256 x i16], [256 x i16]* %codewords, i32 0, i32 0, !dbg !1171
  %38 = bitcast i16* %arraydecay49 to i8*, !dbg !1171
  %39 = load i32, i32* %flag.addr, align 4, !dbg !1172
  %tobool50 = icmp ne i32 %39, 0, !dbg !1172
  %cond = select i1 %tobool50, i32 4, i32 0, !dbg !1172
  %or51 = or i32 %cond, 2, !dbg !1173
  %call52 = call i32 @ff_init_vlc_sparse(%struct.VLC* %36, i32 13, i32 %37, i8* %arraydecay, i32 1, i32 1, i8* %38, i32 2, i32 2, i8* null, i32 0, i32 0, i32 %or51), !dbg !1174
  store i32 %call52, i32* %retval, align 4, !dbg !1175
  br label %return, !dbg !1175

return:                                           ; preds = %for.end48, %if.then31
  %40 = load i32, i32* %retval, align 4, !dbg !1176
  ret i32 %40, !dbg !1176
}

; Function Attrs: nounwind uwtable
define i32 @ff_ivi_dec_huff_desc(%struct.GetBitContext* %gb, i32 %desc_coded, i32 %which_tab, %struct.IVIHuffTab* %huff_tab, %struct.AVCodecContext* %avctx) #2 !dbg !1177 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %desc_coded.addr = alloca i32, align 4
  %which_tab.addr = alloca i32, align 4
  %huff_tab.addr = alloca %struct.IVIHuffTab*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %new_huff = alloca %struct.IVIHuffDesc, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !1916, metadata !984), !dbg !1917
  store i32 %desc_coded, i32* %desc_coded.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc_coded.addr, metadata !1918, metadata !984), !dbg !1919
  store i32 %which_tab, i32* %which_tab.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which_tab.addr, metadata !1920, metadata !984), !dbg !1921
  store %struct.IVIHuffTab* %huff_tab, %struct.IVIHuffTab** %huff_tab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIHuffTab** %huff_tab.addr, metadata !1922, metadata !984), !dbg !1923
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1924, metadata !984), !dbg !1925
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1926, metadata !984), !dbg !1927
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1928, metadata !984), !dbg !1929
  call void @llvm.dbg.declare(metadata %struct.IVIHuffDesc* %new_huff, metadata !1930, metadata !984), !dbg !1931
  %0 = load i32, i32* %desc_coded.addr, align 4, !dbg !1932
  %tobool = icmp ne i32 %0, 0, !dbg !1932
  br i1 %tobool, label %if.end, label %if.then, !dbg !1934

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %which_tab.addr, align 4, !dbg !1935
  %tobool1 = icmp ne i32 %1, 0, !dbg !1937
  %cond = select i1 %tobool1, %struct.VLC* getelementptr inbounds ([8 x %struct.VLC], [8 x %struct.VLC]* @ivi_blk_vlc_tabs, i64 0, i64 7), %struct.VLC* getelementptr inbounds ([8 x %struct.VLC], [8 x %struct.VLC]* @ivi_mb_vlc_tabs, i64 0, i64 7), !dbg !1937
  %2 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !1938
  %tab = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %2, i32 0, i32 1, !dbg !1939
  store %struct.VLC* %cond, %struct.VLC** %tab, align 8, !dbg !1940
  store i32 0, i32* %retval, align 4, !dbg !1941
  br label %return, !dbg !1941

if.end:                                           ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !1942
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 3), !dbg !1943
  %4 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !1944
  %tab_sel = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %4, i32 0, i32 0, !dbg !1945
  store i32 %call, i32* %tab_sel, align 8, !dbg !1946
  %5 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !1947
  %tab_sel2 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %5, i32 0, i32 0, !dbg !1949
  %6 = load i32, i32* %tab_sel2, align 8, !dbg !1949
  %cmp = icmp eq i32 %6, 7, !dbg !1950
  br i1 %cmp, label %if.then3, label %if.else, !dbg !1951

if.then3:                                         ; preds = %if.end
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !1952
  %call4 = call i32 @get_bits(%struct.GetBitContext* %7, i32 4), !dbg !1954
  %num_rows = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %new_huff, i32 0, i32 0, !dbg !1955
  store i32 %call4, i32* %num_rows, align 4, !dbg !1956
  %num_rows5 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %new_huff, i32 0, i32 0, !dbg !1957
  %8 = load i32, i32* %num_rows5, align 4, !dbg !1957
  %tobool6 = icmp ne i32 %8, 0, !dbg !1959
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !1960

if.then7:                                         ; preds = %if.then3
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1961
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !1961
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0)), !dbg !1963
  store i32 -1094995529, i32* %retval, align 4, !dbg !1964
  br label %return, !dbg !1964

if.end8:                                          ; preds = %if.then3
  store i32 0, i32* %i, align 4, !dbg !1965
  br label %for.cond, !dbg !1967

for.cond:                                         ; preds = %for.inc, %if.end8
  %11 = load i32, i32* %i, align 4, !dbg !1968
  %num_rows9 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %new_huff, i32 0, i32 0, !dbg !1971
  %12 = load i32, i32* %num_rows9, align 4, !dbg !1971
  %cmp10 = icmp slt i32 %11, %12, !dbg !1972
  br i1 %cmp10, label %for.body, label %for.end, !dbg !1973

for.body:                                         ; preds = %for.cond
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !1974
  %call11 = call i32 @get_bits(%struct.GetBitContext* %13, i32 4), !dbg !1975
  %conv = trunc i32 %call11 to i8, !dbg !1975
  %14 = load i32, i32* %i, align 4, !dbg !1976
  %idxprom = sext i32 %14 to i64, !dbg !1977
  %xbits = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %new_huff, i32 0, i32 1, !dbg !1978
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %xbits, i64 0, i64 %idxprom, !dbg !1977
  store i8 %conv, i8* %arrayidx, align 1, !dbg !1979
  br label %for.inc, !dbg !1977

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !1980
  %inc = add nsw i32 %15, 1, !dbg !1980
  store i32 %inc, i32* %i, align 4, !dbg !1980
  br label %for.cond, !dbg !1982, !llvm.loop !1983

for.end:                                          ; preds = %for.cond
  %16 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !1985
  %cust_desc = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %16, i32 0, i32 2, !dbg !1987
  %call12 = call i32 @ivi_huff_desc_cmp(%struct.IVIHuffDesc* %new_huff, %struct.IVIHuffDesc* %cust_desc), !dbg !1988
  %tobool13 = icmp ne i32 %call12, 0, !dbg !1988
  br i1 %tobool13, label %if.then15, label %lor.lhs.false, !dbg !1989

lor.lhs.false:                                    ; preds = %for.end
  %17 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !1990
  %cust_tab = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %17, i32 0, i32 3, !dbg !1992
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %cust_tab, i32 0, i32 1, !dbg !1993
  %18 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !1993
  %tobool14 = icmp ne [2 x i16]* %18, null, !dbg !1990
  br i1 %tobool14, label %if.end31, label %if.then15, !dbg !1994

if.then15:                                        ; preds = %lor.lhs.false, %for.end
  %19 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !1995
  %cust_desc16 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %19, i32 0, i32 2, !dbg !1997
  call void @ivi_huff_desc_copy(%struct.IVIHuffDesc* %cust_desc16, %struct.IVIHuffDesc* %new_huff), !dbg !1998
  %20 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !1999
  %cust_tab17 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %20, i32 0, i32 3, !dbg !2001
  %table18 = getelementptr inbounds %struct.VLC, %struct.VLC* %cust_tab17, i32 0, i32 1, !dbg !2002
  %21 = load [2 x i16]*, [2 x i16]** %table18, align 8, !dbg !2002
  %tobool19 = icmp ne [2 x i16]* %21, null, !dbg !1999
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !2003

if.then20:                                        ; preds = %if.then15
  %22 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2004
  %cust_tab21 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %22, i32 0, i32 3, !dbg !2005
  call void @ff_free_vlc(%struct.VLC* %cust_tab21), !dbg !2006
  br label %if.end22, !dbg !2006

if.end22:                                         ; preds = %if.then20, %if.then15
  %23 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2007
  %cust_desc23 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %23, i32 0, i32 2, !dbg !2008
  %24 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2009
  %cust_tab24 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %24, i32 0, i32 3, !dbg !2010
  %call25 = call i32 @ivi_create_huff_from_desc(%struct.IVIHuffDesc* %cust_desc23, %struct.VLC* %cust_tab24, i32 0), !dbg !2011
  store i32 %call25, i32* %result, align 4, !dbg !2012
  %25 = load i32, i32* %result, align 4, !dbg !2013
  %tobool26 = icmp ne i32 %25, 0, !dbg !2013
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !2015

if.then27:                                        ; preds = %if.end22
  %26 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2016
  %cust_desc28 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %26, i32 0, i32 2, !dbg !2018
  %num_rows29 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %cust_desc28, i32 0, i32 0, !dbg !2019
  store i32 0, i32* %num_rows29, align 8, !dbg !2020
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2021
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !2021
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i32 0, i32 0)), !dbg !2022
  %29 = load i32, i32* %result, align 4, !dbg !2023
  store i32 %29, i32* %retval, align 4, !dbg !2024
  br label %return, !dbg !2024

if.end30:                                         ; preds = %if.end22
  br label %if.end31, !dbg !2025

if.end31:                                         ; preds = %if.end30, %lor.lhs.false
  %30 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2026
  %cust_tab32 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %30, i32 0, i32 3, !dbg !2027
  %31 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2028
  %tab33 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %31, i32 0, i32 1, !dbg !2029
  store %struct.VLC* %cust_tab32, %struct.VLC** %tab33, align 8, !dbg !2030
  br label %if.end43, !dbg !2031

if.else:                                          ; preds = %if.end
  %32 = load i32, i32* %which_tab.addr, align 4, !dbg !2032
  %tobool34 = icmp ne i32 %32, 0, !dbg !2034
  br i1 %tobool34, label %cond.true, label %cond.false, !dbg !2034

cond.true:                                        ; preds = %if.else
  %33 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2035
  %tab_sel35 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %33, i32 0, i32 0, !dbg !2037
  %34 = load i32, i32* %tab_sel35, align 8, !dbg !2037
  %idxprom36 = sext i32 %34 to i64, !dbg !2038
  %arrayidx37 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_blk_vlc_tabs, i64 0, i64 %idxprom36, !dbg !2038
  br label %cond.end, !dbg !2039

cond.false:                                       ; preds = %if.else
  %35 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2040
  %tab_sel38 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %35, i32 0, i32 0, !dbg !2041
  %36 = load i32, i32* %tab_sel38, align 8, !dbg !2041
  %idxprom39 = sext i32 %36 to i64, !dbg !2042
  %arrayidx40 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @ivi_mb_vlc_tabs, i64 0, i64 %idxprom39, !dbg !2042
  br label %cond.end, !dbg !2043

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond41 = phi %struct.VLC* [ %arrayidx37, %cond.true ], [ %arrayidx40, %cond.false ], !dbg !2045
  %37 = load %struct.IVIHuffTab*, %struct.IVIHuffTab** %huff_tab.addr, align 8, !dbg !2047
  %tab42 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %37, i32 0, i32 1, !dbg !2048
  store %struct.VLC* %cond41, %struct.VLC** %tab42, align 8, !dbg !2049
  br label %if.end43

if.end43:                                         ; preds = %cond.end, %if.end31
  store i32 0, i32* %retval, align 4, !dbg !2050
  br label %return, !dbg !2050

return:                                           ; preds = %if.end43, %if.then27, %if.then7, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !2051
  ret i32 %38, !dbg !2051
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #3 !dbg !2052 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2055, metadata !984), !dbg !2056
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2057, metadata !984), !dbg !2058
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2059, metadata !984), !dbg !2060
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !2061, metadata !984), !dbg !2062
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2063
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2064
  %1 = load i32, i32* %index, align 8, !dbg !2064
  store i32 %1, i32* %re_index, align 4, !dbg !2062
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !2065, metadata !984), !dbg !2066
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !2067, metadata !984), !dbg !2068
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2069
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !2070
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2070
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !2068
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2071
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !2072
  %5 = load i8*, i8** %buffer, align 8, !dbg !2072
  %6 = load i32, i32* %re_index, align 4, !dbg !2073
  %shr = lshr i32 %6, 3, !dbg !2074
  %idx.ext = zext i32 %shr to i64, !dbg !2075
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !2075
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2076
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !2076
  %8 = load i32, i32* %l, align 1, !dbg !2076
  %9 = load i32, i32* %re_index, align 4, !dbg !2077
  %and = and i32 %9, 7, !dbg !2078
  %shr4 = lshr i32 %8, %and, !dbg !2079
  store i32 %shr4, i32* %re_cache, align 4, !dbg !2080
  %10 = load i32, i32* %re_cache, align 4, !dbg !2081
  %11 = load i32, i32* %n.addr, align 4, !dbg !2082
  %call = call i32 @zero_extend(i32 %10, i32 %11) #1, !dbg !2083
  store i32 %call, i32* %tmp, align 4, !dbg !2084
  %12 = load i32, i32* %re_size_plus8, align 4, !dbg !2085
  %13 = load i32, i32* %re_index, align 4, !dbg !2086
  %14 = load i32, i32* %n.addr, align 4, !dbg !2087
  %add = add i32 %13, %14, !dbg !2088
  %cmp = icmp ugt i32 %12, %add, !dbg !2089
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2090

cond.true:                                        ; preds = %entry
  %15 = load i32, i32* %re_index, align 4, !dbg !2091
  %16 = load i32, i32* %n.addr, align 4, !dbg !2093
  %add5 = add i32 %15, %16, !dbg !2094
  br label %cond.end, !dbg !2095

cond.false:                                       ; preds = %entry
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !2096
  br label %cond.end, !dbg !2098

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add5, %cond.true ], [ %17, %cond.false ], !dbg !2099
  store i32 %cond, i32* %re_index, align 4, !dbg !2101
  %18 = load i32, i32* %re_index, align 4, !dbg !2102
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2103
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %19, i32 0, i32 2, !dbg !2104
  store i32 %18, i32* %index6, align 8, !dbg !2105
  %20 = load i32, i32* %tmp, align 4, !dbg !2106
  ret i32 %20, !dbg !2107
}

declare void @av_log(i8*, i32, i8*, ...) #4

; Function Attrs: nounwind uwtable
define internal i32 @ivi_huff_desc_cmp(%struct.IVIHuffDesc* %desc1, %struct.IVIHuffDesc* %desc2) #2 !dbg !2108 {
entry:
  %desc1.addr = alloca %struct.IVIHuffDesc*, align 8
  %desc2.addr = alloca %struct.IVIHuffDesc*, align 8
  store %struct.IVIHuffDesc* %desc1, %struct.IVIHuffDesc** %desc1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIHuffDesc** %desc1.addr, metadata !2111, metadata !984), !dbg !2112
  store %struct.IVIHuffDesc* %desc2, %struct.IVIHuffDesc** %desc2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIHuffDesc** %desc2.addr, metadata !2113, metadata !984), !dbg !2114
  %0 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %desc1.addr, align 8, !dbg !2115
  %num_rows = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %0, i32 0, i32 0, !dbg !2116
  %1 = load i32, i32* %num_rows, align 4, !dbg !2116
  %2 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %desc2.addr, align 8, !dbg !2117
  %num_rows1 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %2, i32 0, i32 0, !dbg !2118
  %3 = load i32, i32* %num_rows1, align 4, !dbg !2118
  %cmp = icmp ne i32 %1, %3, !dbg !2119
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2120

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %desc1.addr, align 8, !dbg !2121
  %xbits = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %4, i32 0, i32 1, !dbg !2122
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %xbits, i32 0, i32 0, !dbg !2121
  %5 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %desc2.addr, align 8, !dbg !2123
  %xbits2 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %5, i32 0, i32 1, !dbg !2124
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %xbits2, i32 0, i32 0, !dbg !2123
  %6 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %desc1.addr, align 8, !dbg !2125
  %num_rows4 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %6, i32 0, i32 0, !dbg !2126
  %7 = load i32, i32* %num_rows4, align 4, !dbg !2126
  %conv = sext i32 %7 to i64, !dbg !2125
  %call = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay3, i64 %conv) #9, !dbg !2127
  %tobool = icmp ne i32 %call, 0, !dbg !2128
  br label %lor.end, !dbg !2128

lor.end:                                          ; preds = %lor.rhs, %entry
  %8 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %8 to i32, !dbg !2130
  ret i32 %lor.ext, !dbg !2132
}

; Function Attrs: nounwind uwtable
define internal void @ivi_huff_desc_copy(%struct.IVIHuffDesc* %dst, %struct.IVIHuffDesc* %src) #2 !dbg !2133 {
entry:
  %dst.addr = alloca %struct.IVIHuffDesc*, align 8
  %src.addr = alloca %struct.IVIHuffDesc*, align 8
  store %struct.IVIHuffDesc* %dst, %struct.IVIHuffDesc** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIHuffDesc** %dst.addr, metadata !2137, metadata !984), !dbg !2138
  store %struct.IVIHuffDesc* %src, %struct.IVIHuffDesc** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIHuffDesc** %src.addr, metadata !2139, metadata !984), !dbg !2140
  %0 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %src.addr, align 8, !dbg !2141
  %num_rows = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %0, i32 0, i32 0, !dbg !2142
  %1 = load i32, i32* %num_rows, align 4, !dbg !2142
  %2 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %dst.addr, align 8, !dbg !2143
  %num_rows1 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %2, i32 0, i32 0, !dbg !2144
  store i32 %1, i32* %num_rows1, align 4, !dbg !2145
  %3 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %dst.addr, align 8, !dbg !2146
  %xbits = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %3, i32 0, i32 1, !dbg !2147
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %xbits, i32 0, i32 0, !dbg !2148
  %4 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %src.addr, align 8, !dbg !2149
  %xbits2 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %4, i32 0, i32 1, !dbg !2150
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %xbits2, i32 0, i32 0, !dbg !2148
  %5 = load %struct.IVIHuffDesc*, %struct.IVIHuffDesc** %src.addr, align 8, !dbg !2151
  %num_rows4 = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %5, i32 0, i32 0, !dbg !2152
  %6 = load i32, i32* %num_rows4, align 4, !dbg !2152
  %conv = sext i32 %6 to i64, !dbg !2151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay3, i64 %conv, i32 4, i1 false), !dbg !2148
  ret void, !dbg !2153
}

declare void @ff_free_vlc(%struct.VLC*) #4

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_ivi_init_planes(%struct.AVCodecContext* %avctx, %struct.IVIPlaneDesc* %planes, %struct.IVIPicConfig* %cfg, i32 %is_indeo4) #0 !dbg !2154 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %planes.addr = alloca %struct.IVIPlaneDesc*, align 8
  %cfg.addr = alloca %struct.IVIPicConfig*, align 8
  %is_indeo4.addr = alloca i32, align 4
  %p = alloca i32, align 4
  %b = alloca i32, align 4
  %b_width = alloca i32, align 4
  %b_height = alloca i32, align 4
  %align_fac = alloca i32, align 4
  %width_aligned = alloca i32, align 4
  %height_aligned = alloca i32, align 4
  %buf_size = alloca i32, align 4
  %band = alloca %struct.IVIBandDesc*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2270, metadata !984), !dbg !2271
  store %struct.IVIPlaneDesc* %planes, %struct.IVIPlaneDesc** %planes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIPlaneDesc** %planes.addr, metadata !2272, metadata !984), !dbg !2273
  store %struct.IVIPicConfig* %cfg, %struct.IVIPicConfig** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIPicConfig** %cfg.addr, metadata !2274, metadata !984), !dbg !2275
  store i32 %is_indeo4, i32* %is_indeo4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_indeo4.addr, metadata !2276, metadata !984), !dbg !2277
  call void @llvm.dbg.declare(metadata i32* %p, metadata !2278, metadata !984), !dbg !2279
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2280, metadata !984), !dbg !2281
  call void @llvm.dbg.declare(metadata i32* %b_width, metadata !2282, metadata !984), !dbg !2283
  call void @llvm.dbg.declare(metadata i32* %b_height, metadata !2284, metadata !984), !dbg !2285
  call void @llvm.dbg.declare(metadata i32* %align_fac, metadata !2286, metadata !984), !dbg !2287
  call void @llvm.dbg.declare(metadata i32* %width_aligned, metadata !2288, metadata !984), !dbg !2289
  call void @llvm.dbg.declare(metadata i32* %height_aligned, metadata !2290, metadata !984), !dbg !2291
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2292, metadata !984), !dbg !2293
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band, metadata !2294, metadata !984), !dbg !2295
  %0 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2296
  call void @ivi_free_buffers(%struct.IVIPlaneDesc* %0), !dbg !2297
  %1 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2298
  %pic_width = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %1, i32 0, i32 0, !dbg !2300
  %2 = load i16, i16* %pic_width, align 2, !dbg !2300
  %conv = zext i16 %2 to i32, !dbg !2298
  %3 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2301
  %pic_height = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %3, i32 0, i32 1, !dbg !2302
  %4 = load i16, i16* %pic_height, align 2, !dbg !2302
  %conv1 = zext i16 %4 to i32, !dbg !2301
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2303
  %max_pixels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 185, !dbg !2304
  %6 = load i64, i64* %max_pixels, align 8, !dbg !2304
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2305
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !2305
  %call = call i32 @av_image_check_size2(i32 %conv, i32 %conv1, i64 %6, i32 6, i32 0, i8* %8), !dbg !2306
  %cmp = icmp slt i32 %call, 0, !dbg !2307
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2308

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2309
  %luma_bands = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %9, i32 0, i32 6, !dbg !2310
  %10 = load i8, i8* %luma_bands, align 2, !dbg !2310
  %conv3 = zext i8 %10 to i32, !dbg !2309
  %cmp4 = icmp slt i32 %conv3, 1, !dbg !2311
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !2312

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %11 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2313
  %chroma_bands = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %11, i32 0, i32 7, !dbg !2315
  %12 = load i8, i8* %chroma_bands, align 1, !dbg !2315
  %conv7 = zext i8 %12 to i32, !dbg !2313
  %cmp8 = icmp slt i32 %conv7, 1, !dbg !2316
  br i1 %cmp8, label %if.then, label %if.end, !dbg !2317

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !2319
  br label %return, !dbg !2319

if.end:                                           ; preds = %lor.lhs.false6
  %13 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2320
  %pic_width10 = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %13, i32 0, i32 0, !dbg !2321
  %14 = load i16, i16* %pic_width10, align 2, !dbg !2321
  %15 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2322
  %arrayidx = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %15, i64 0, !dbg !2322
  %width = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx, i32 0, i32 0, !dbg !2323
  store i16 %14, i16* %width, align 8, !dbg !2324
  %16 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2325
  %pic_height11 = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %16, i32 0, i32 1, !dbg !2326
  %17 = load i16, i16* %pic_height11, align 2, !dbg !2326
  %18 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2327
  %arrayidx12 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %18, i64 0, !dbg !2327
  %height = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx12, i32 0, i32 1, !dbg !2328
  store i16 %17, i16* %height, align 2, !dbg !2329
  %19 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2330
  %luma_bands13 = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %19, i32 0, i32 6, !dbg !2331
  %20 = load i8, i8* %luma_bands13, align 2, !dbg !2331
  %21 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2332
  %arrayidx14 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %21, i64 0, !dbg !2332
  %num_bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx14, i32 0, i32 2, !dbg !2333
  store i8 %20, i8* %num_bands, align 4, !dbg !2334
  %22 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2335
  %pic_width15 = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %22, i32 0, i32 0, !dbg !2336
  %23 = load i16, i16* %pic_width15, align 2, !dbg !2336
  %conv16 = zext i16 %23 to i32, !dbg !2335
  %add = add nsw i32 %conv16, 3, !dbg !2337
  %shr = ashr i32 %add, 2, !dbg !2338
  %conv17 = trunc i32 %shr to i16, !dbg !2339
  %24 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2340
  %arrayidx18 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %24, i64 2, !dbg !2340
  %width19 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx18, i32 0, i32 0, !dbg !2341
  store i16 %conv17, i16* %width19, align 8, !dbg !2342
  %25 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2343
  %arrayidx20 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %25, i64 1, !dbg !2343
  %width21 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx20, i32 0, i32 0, !dbg !2344
  store i16 %conv17, i16* %width21, align 8, !dbg !2345
  %26 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2346
  %pic_height22 = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %26, i32 0, i32 1, !dbg !2347
  %27 = load i16, i16* %pic_height22, align 2, !dbg !2347
  %conv23 = zext i16 %27 to i32, !dbg !2346
  %add24 = add nsw i32 %conv23, 3, !dbg !2348
  %shr25 = ashr i32 %add24, 2, !dbg !2349
  %conv26 = trunc i32 %shr25 to i16, !dbg !2350
  %28 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2351
  %arrayidx27 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %28, i64 2, !dbg !2351
  %height28 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx27, i32 0, i32 1, !dbg !2352
  store i16 %conv26, i16* %height28, align 2, !dbg !2353
  %29 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2354
  %arrayidx29 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %29, i64 1, !dbg !2354
  %height30 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx29, i32 0, i32 1, !dbg !2355
  store i16 %conv26, i16* %height30, align 2, !dbg !2356
  %30 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2357
  %chroma_bands31 = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %30, i32 0, i32 7, !dbg !2358
  %31 = load i8, i8* %chroma_bands31, align 1, !dbg !2358
  %32 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2359
  %arrayidx32 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %32, i64 2, !dbg !2359
  %num_bands33 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx32, i32 0, i32 2, !dbg !2360
  store i8 %31, i8* %num_bands33, align 4, !dbg !2361
  %33 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2362
  %arrayidx34 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %33, i64 1, !dbg !2362
  %num_bands35 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx34, i32 0, i32 2, !dbg !2363
  store i8 %31, i8* %num_bands35, align 4, !dbg !2364
  store i32 0, i32* %p, align 4, !dbg !2365
  br label %for.cond, !dbg !2367

for.cond:                                         ; preds = %for.inc160, %if.end
  %34 = load i32, i32* %p, align 4, !dbg !2368
  %cmp36 = icmp slt i32 %34, 3, !dbg !2371
  br i1 %cmp36, label %for.body, label %for.end162, !dbg !2372

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %p, align 4, !dbg !2373
  %idxprom = sext i32 %35 to i64, !dbg !2375
  %36 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2375
  %arrayidx38 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %36, i64 %idxprom, !dbg !2375
  %num_bands39 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx38, i32 0, i32 2, !dbg !2376
  %37 = load i8, i8* %num_bands39, align 4, !dbg !2376
  %conv40 = zext i8 %37 to i64, !dbg !2375
  %call41 = call i8* @av_mallocz_array(i64 %conv40, i64 456), !dbg !2377
  %38 = bitcast i8* %call41 to %struct.IVIBandDesc*, !dbg !2377
  %39 = load i32, i32* %p, align 4, !dbg !2378
  %idxprom42 = sext i32 %39 to i64, !dbg !2379
  %40 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2379
  %arrayidx43 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %40, i64 %idxprom42, !dbg !2379
  %bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx43, i32 0, i32 3, !dbg !2380
  store %struct.IVIBandDesc* %38, %struct.IVIBandDesc** %bands, align 8, !dbg !2381
  %41 = load i32, i32* %p, align 4, !dbg !2382
  %idxprom44 = sext i32 %41 to i64, !dbg !2384
  %42 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2384
  %arrayidx45 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %42, i64 %idxprom44, !dbg !2384
  %bands46 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx45, i32 0, i32 3, !dbg !2385
  %43 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands46, align 8, !dbg !2385
  %tobool = icmp ne %struct.IVIBandDesc* %43, null, !dbg !2384
  br i1 %tobool, label %if.end48, label %if.then47, !dbg !2386

if.then47:                                        ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !2387
  br label %return, !dbg !2387

if.end48:                                         ; preds = %for.body
  %44 = load i32, i32* %p, align 4, !dbg !2388
  %idxprom49 = sext i32 %44 to i64, !dbg !2389
  %45 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2389
  %arrayidx50 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %45, i64 %idxprom49, !dbg !2389
  %num_bands51 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx50, i32 0, i32 2, !dbg !2390
  %46 = load i8, i8* %num_bands51, align 4, !dbg !2390
  %conv52 = zext i8 %46 to i32, !dbg !2389
  %cmp53 = icmp eq i32 %conv52, 1, !dbg !2391
  br i1 %cmp53, label %cond.true, label %cond.false, !dbg !2389

cond.true:                                        ; preds = %if.end48
  %47 = load i32, i32* %p, align 4, !dbg !2392
  %idxprom55 = sext i32 %47 to i64, !dbg !2394
  %48 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2394
  %arrayidx56 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %48, i64 %idxprom55, !dbg !2394
  %width57 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx56, i32 0, i32 0, !dbg !2395
  %49 = load i16, i16* %width57, align 8, !dbg !2395
  %conv58 = zext i16 %49 to i32, !dbg !2394
  br label %cond.end, !dbg !2396

cond.false:                                       ; preds = %if.end48
  %50 = load i32, i32* %p, align 4, !dbg !2397
  %idxprom59 = sext i32 %50 to i64, !dbg !2398
  %51 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2398
  %arrayidx60 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %51, i64 %idxprom59, !dbg !2398
  %width61 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx60, i32 0, i32 0, !dbg !2399
  %52 = load i16, i16* %width61, align 8, !dbg !2399
  %conv62 = zext i16 %52 to i32, !dbg !2398
  %add63 = add nsw i32 %conv62, 1, !dbg !2400
  %shr64 = ashr i32 %add63, 1, !dbg !2401
  br label %cond.end, !dbg !2402

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv58, %cond.true ], [ %shr64, %cond.false ], !dbg !2404
  store i32 %cond, i32* %b_width, align 4, !dbg !2406
  %53 = load i32, i32* %p, align 4, !dbg !2407
  %idxprom65 = sext i32 %53 to i64, !dbg !2408
  %54 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2408
  %arrayidx66 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %54, i64 %idxprom65, !dbg !2408
  %num_bands67 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx66, i32 0, i32 2, !dbg !2409
  %55 = load i8, i8* %num_bands67, align 4, !dbg !2409
  %conv68 = zext i8 %55 to i32, !dbg !2408
  %cmp69 = icmp eq i32 %conv68, 1, !dbg !2410
  br i1 %cmp69, label %cond.true71, label %cond.false76, !dbg !2408

cond.true71:                                      ; preds = %cond.end
  %56 = load i32, i32* %p, align 4, !dbg !2411
  %idxprom72 = sext i32 %56 to i64, !dbg !2412
  %57 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2412
  %arrayidx73 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %57, i64 %idxprom72, !dbg !2412
  %height74 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx73, i32 0, i32 1, !dbg !2413
  %58 = load i16, i16* %height74, align 2, !dbg !2413
  %conv75 = zext i16 %58 to i32, !dbg !2412
  br label %cond.end83, !dbg !2414

cond.false76:                                     ; preds = %cond.end
  %59 = load i32, i32* %p, align 4, !dbg !2415
  %idxprom77 = sext i32 %59 to i64, !dbg !2416
  %60 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2416
  %arrayidx78 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %60, i64 %idxprom77, !dbg !2416
  %height79 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx78, i32 0, i32 1, !dbg !2417
  %61 = load i16, i16* %height79, align 2, !dbg !2417
  %conv80 = zext i16 %61 to i32, !dbg !2416
  %add81 = add nsw i32 %conv80, 1, !dbg !2418
  %shr82 = ashr i32 %add81, 1, !dbg !2419
  br label %cond.end83, !dbg !2420

cond.end83:                                       ; preds = %cond.false76, %cond.true71
  %cond84 = phi i32 [ %conv75, %cond.true71 ], [ %shr82, %cond.false76 ], !dbg !2421
  store i32 %cond84, i32* %b_height, align 4, !dbg !2422
  %62 = load i32, i32* %p, align 4, !dbg !2423
  %tobool85 = icmp ne i32 %62, 0, !dbg !2423
  %cond86 = select i1 %tobool85, i32 8, i32 16, !dbg !2423
  store i32 %cond86, i32* %align_fac, align 4, !dbg !2424
  %63 = load i32, i32* %b_width, align 4, !dbg !2425
  %64 = load i32, i32* %align_fac, align 4, !dbg !2426
  %add87 = add i32 %63, %64, !dbg !2427
  %sub = sub i32 %add87, 1, !dbg !2428
  %65 = load i32, i32* %align_fac, align 4, !dbg !2429
  %sub88 = sub i32 %65, 1, !dbg !2430
  %neg = xor i32 %sub88, -1, !dbg !2431
  %and = and i32 %sub, %neg, !dbg !2432
  store i32 %and, i32* %width_aligned, align 4, !dbg !2433
  %66 = load i32, i32* %b_height, align 4, !dbg !2434
  %67 = load i32, i32* %align_fac, align 4, !dbg !2435
  %add89 = add i32 %66, %67, !dbg !2436
  %sub90 = sub i32 %add89, 1, !dbg !2437
  %68 = load i32, i32* %align_fac, align 4, !dbg !2438
  %sub91 = sub i32 %68, 1, !dbg !2439
  %neg92 = xor i32 %sub91, -1, !dbg !2440
  %and93 = and i32 %sub90, %neg92, !dbg !2441
  store i32 %and93, i32* %height_aligned, align 4, !dbg !2442
  %69 = load i32, i32* %width_aligned, align 4, !dbg !2443
  %70 = load i32, i32* %height_aligned, align 4, !dbg !2444
  %mul = mul i32 %69, %70, !dbg !2445
  %conv94 = zext i32 %mul to i64, !dbg !2443
  %mul95 = mul i64 %conv94, 2, !dbg !2446
  %conv96 = trunc i64 %mul95 to i32, !dbg !2443
  store i32 %conv96, i32* %buf_size, align 4, !dbg !2447
  store i32 0, i32* %b, align 4, !dbg !2448
  br label %for.cond97, !dbg !2450

for.cond97:                                       ; preds = %for.inc, %cond.end83
  %71 = load i32, i32* %b, align 4, !dbg !2451
  %72 = load i32, i32* %p, align 4, !dbg !2454
  %idxprom98 = sext i32 %72 to i64, !dbg !2455
  %73 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2455
  %arrayidx99 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %73, i64 %idxprom98, !dbg !2455
  %num_bands100 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx99, i32 0, i32 2, !dbg !2456
  %74 = load i8, i8* %num_bands100, align 4, !dbg !2456
  %conv101 = zext i8 %74 to i32, !dbg !2455
  %cmp102 = icmp slt i32 %71, %conv101, !dbg !2457
  br i1 %cmp102, label %for.body104, label %for.end, !dbg !2458

for.body104:                                      ; preds = %for.cond97
  %75 = load i32, i32* %b, align 4, !dbg !2459
  %idxprom105 = sext i32 %75 to i64, !dbg !2461
  %76 = load i32, i32* %p, align 4, !dbg !2462
  %idxprom106 = sext i32 %76 to i64, !dbg !2461
  %77 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2461
  %arrayidx107 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %77, i64 %idxprom106, !dbg !2461
  %bands108 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx107, i32 0, i32 3, !dbg !2463
  %78 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands108, align 8, !dbg !2463
  %arrayidx109 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %78, i64 %idxprom105, !dbg !2461
  store %struct.IVIBandDesc* %arrayidx109, %struct.IVIBandDesc** %band, align 8, !dbg !2464
  %79 = load i32, i32* %p, align 4, !dbg !2465
  %80 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2466
  %plane = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %80, i32 0, i32 0, !dbg !2467
  store i32 %79, i32* %plane, align 8, !dbg !2468
  %81 = load i32, i32* %b, align 4, !dbg !2469
  %82 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2470
  %band_num = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %82, i32 0, i32 1, !dbg !2471
  store i32 %81, i32* %band_num, align 4, !dbg !2472
  %83 = load i32, i32* %b_width, align 4, !dbg !2473
  %84 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2474
  %width110 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %84, i32 0, i32 2, !dbg !2475
  store i32 %83, i32* %width110, align 8, !dbg !2476
  %85 = load i32, i32* %b_height, align 4, !dbg !2477
  %86 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2478
  %height111 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %86, i32 0, i32 3, !dbg !2479
  store i32 %85, i32* %height111, align 4, !dbg !2480
  %87 = load i32, i32* %width_aligned, align 4, !dbg !2481
  %conv112 = zext i32 %87 to i64, !dbg !2481
  %88 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2482
  %pitch = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %88, i32 0, i32 11, !dbg !2483
  store i64 %conv112, i64* %pitch, align 8, !dbg !2484
  %89 = load i32, i32* %height_aligned, align 4, !dbg !2485
  %90 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2486
  %aheight = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %90, i32 0, i32 4, !dbg !2487
  store i32 %89, i32* %aheight, align 8, !dbg !2488
  %91 = load i32, i32* %buf_size, align 4, !dbg !2489
  %conv113 = zext i32 %91 to i64, !dbg !2489
  %call114 = call noalias i8* @av_mallocz(i64 %conv113), !dbg !2490
  %92 = bitcast i8* %call114 to i16*, !dbg !2490
  %93 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2491
  %bufs = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %93, i32 0, i32 10, !dbg !2492
  %arrayidx115 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs, i64 0, i64 0, !dbg !2491
  store i16* %92, i16** %arrayidx115, align 8, !dbg !2493
  %94 = load i32, i32* %buf_size, align 4, !dbg !2494
  %conv116 = zext i32 %94 to i64, !dbg !2494
  %call117 = call noalias i8* @av_mallocz(i64 %conv116), !dbg !2495
  %95 = bitcast i8* %call117 to i16*, !dbg !2495
  %96 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2496
  %bufs118 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %96, i32 0, i32 10, !dbg !2497
  %arrayidx119 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs118, i64 0, i64 1, !dbg !2496
  store i16* %95, i16** %arrayidx119, align 8, !dbg !2498
  %97 = load i32, i32* %buf_size, align 4, !dbg !2499
  %div = udiv i32 %97, 2, !dbg !2500
  %98 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2501
  %bufsize = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %98, i32 0, i32 36, !dbg !2502
  store i32 %div, i32* %bufsize, align 4, !dbg !2503
  %99 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2504
  %bufs120 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %99, i32 0, i32 10, !dbg !2506
  %arrayidx121 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs120, i64 0, i64 0, !dbg !2504
  %100 = load i16*, i16** %arrayidx121, align 8, !dbg !2504
  %tobool122 = icmp ne i16* %100, null, !dbg !2504
  br i1 %tobool122, label %lor.lhs.false123, label %if.then127, !dbg !2507

lor.lhs.false123:                                 ; preds = %for.body104
  %101 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2508
  %bufs124 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %101, i32 0, i32 10, !dbg !2510
  %arrayidx125 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs124, i64 0, i64 1, !dbg !2508
  %102 = load i16*, i16** %arrayidx125, align 8, !dbg !2508
  %tobool126 = icmp ne i16* %102, null, !dbg !2508
  br i1 %tobool126, label %if.end128, label %if.then127, !dbg !2511

if.then127:                                       ; preds = %lor.lhs.false123, %for.body104
  store i32 -12, i32* %retval, align 4, !dbg !2512
  br label %return, !dbg !2512

if.end128:                                        ; preds = %lor.lhs.false123
  %103 = load %struct.IVIPicConfig*, %struct.IVIPicConfig** %cfg.addr, align 8, !dbg !2513
  %luma_bands129 = getelementptr inbounds %struct.IVIPicConfig, %struct.IVIPicConfig* %103, i32 0, i32 6, !dbg !2515
  %104 = load i8, i8* %luma_bands129, align 2, !dbg !2515
  %conv130 = zext i8 %104 to i32, !dbg !2513
  %cmp131 = icmp sgt i32 %conv130, 1, !dbg !2516
  br i1 %cmp131, label %if.then133, label %if.end143, !dbg !2517

if.then133:                                       ; preds = %if.end128
  %105 = load i32, i32* %buf_size, align 4, !dbg !2518
  %conv134 = zext i32 %105 to i64, !dbg !2518
  %call135 = call noalias i8* @av_mallocz(i64 %conv134), !dbg !2520
  %106 = bitcast i8* %call135 to i16*, !dbg !2520
  %107 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2521
  %bufs136 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %107, i32 0, i32 10, !dbg !2522
  %arrayidx137 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs136, i64 0, i64 2, !dbg !2521
  store i16* %106, i16** %arrayidx137, align 8, !dbg !2523
  %108 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2524
  %bufs138 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %108, i32 0, i32 10, !dbg !2526
  %arrayidx139 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs138, i64 0, i64 2, !dbg !2524
  %109 = load i16*, i16** %arrayidx139, align 8, !dbg !2524
  %tobool140 = icmp ne i16* %109, null, !dbg !2524
  br i1 %tobool140, label %if.end142, label %if.then141, !dbg !2527

if.then141:                                       ; preds = %if.then133
  store i32 -12, i32* %retval, align 4, !dbg !2528
  br label %return, !dbg !2528

if.end142:                                        ; preds = %if.then133
  br label %if.end143, !dbg !2529

if.end143:                                        ; preds = %if.end142, %if.end128
  %110 = load i32, i32* %is_indeo4.addr, align 4, !dbg !2530
  %tobool144 = icmp ne i32 %110, 0, !dbg !2530
  br i1 %tobool144, label %if.then145, label %if.end155, !dbg !2532

if.then145:                                       ; preds = %if.end143
  %111 = load i32, i32* %buf_size, align 4, !dbg !2533
  %conv146 = zext i32 %111 to i64, !dbg !2533
  %call147 = call noalias i8* @av_mallocz(i64 %conv146), !dbg !2535
  %112 = bitcast i8* %call147 to i16*, !dbg !2535
  %113 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2536
  %bufs148 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %113, i32 0, i32 10, !dbg !2537
  %arrayidx149 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs148, i64 0, i64 3, !dbg !2536
  store i16* %112, i16** %arrayidx149, align 8, !dbg !2538
  %114 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2539
  %bufs150 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %114, i32 0, i32 10, !dbg !2541
  %arrayidx151 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs150, i64 0, i64 3, !dbg !2539
  %115 = load i16*, i16** %arrayidx151, align 8, !dbg !2539
  %tobool152 = icmp ne i16* %115, null, !dbg !2539
  br i1 %tobool152, label %if.end154, label %if.then153, !dbg !2542

if.then153:                                       ; preds = %if.then145
  store i32 -12, i32* %retval, align 4, !dbg !2543
  br label %return, !dbg !2543

if.end154:                                        ; preds = %if.then145
  br label %if.end155, !dbg !2544

if.end155:                                        ; preds = %if.end154, %if.end143
  %116 = load i32, i32* %p, align 4, !dbg !2545
  %idxprom156 = sext i32 %116 to i64, !dbg !2546
  %117 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2546
  %arrayidx157 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %117, i64 %idxprom156, !dbg !2546
  %bands158 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx157, i32 0, i32 3, !dbg !2547
  %118 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands158, align 8, !dbg !2547
  %arrayidx159 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %118, i64 0, !dbg !2546
  %blk_vlc = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx159, i32 0, i32 23, !dbg !2548
  %cust_desc = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc, i32 0, i32 2, !dbg !2549
  %num_rows = getelementptr inbounds %struct.IVIHuffDesc, %struct.IVIHuffDesc* %cust_desc, i32 0, i32 0, !dbg !2550
  store i32 0, i32* %num_rows, align 8, !dbg !2551
  br label %for.inc, !dbg !2552

for.inc:                                          ; preds = %if.end155
  %119 = load i32, i32* %b, align 4, !dbg !2553
  %inc = add nsw i32 %119, 1, !dbg !2553
  store i32 %inc, i32* %b, align 4, !dbg !2553
  br label %for.cond97, !dbg !2555, !llvm.loop !2556

for.end:                                          ; preds = %for.cond97
  br label %for.inc160, !dbg !2558

for.inc160:                                       ; preds = %for.end
  %120 = load i32, i32* %p, align 4, !dbg !2559
  %inc161 = add nsw i32 %120, 1, !dbg !2559
  store i32 %inc161, i32* %p, align 4, !dbg !2559
  br label %for.cond, !dbg !2561, !llvm.loop !2562

for.end162:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2564
  br label %return, !dbg !2564

return:                                           ; preds = %for.end162, %if.then153, %if.then141, %if.then127, %if.then47, %if.then
  %121 = load i32, i32* %retval, align 4, !dbg !2565
  ret i32 %121, !dbg !2565
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @ivi_free_buffers(%struct.IVIPlaneDesc* %planes) #0 !dbg !2566 {
entry:
  %planes.addr = alloca %struct.IVIPlaneDesc*, align 8
  %p = alloca i32, align 4
  %b = alloca i32, align 4
  %t = alloca i32, align 4
  store %struct.IVIPlaneDesc* %planes, %struct.IVIPlaneDesc** %planes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIPlaneDesc** %planes.addr, metadata !2569, metadata !984), !dbg !2570
  call void @llvm.dbg.declare(metadata i32* %p, metadata !2571, metadata !984), !dbg !2572
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2573, metadata !984), !dbg !2574
  call void @llvm.dbg.declare(metadata i32* %t, metadata !2575, metadata !984), !dbg !2576
  store i32 0, i32* %p, align 4, !dbg !2577
  br label %for.cond, !dbg !2579

for.cond:                                         ; preds = %for.inc80, %entry
  %0 = load i32, i32* %p, align 4, !dbg !2580
  %cmp = icmp slt i32 %0, 3, !dbg !2583
  br i1 %cmp, label %for.body, label %for.end82, !dbg !2584

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %p, align 4, !dbg !2585
  %idxprom = sext i32 %1 to i64, !dbg !2588
  %2 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2588
  %arrayidx = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %2, i64 %idxprom, !dbg !2588
  %bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx, i32 0, i32 3, !dbg !2589
  %3 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands, align 8, !dbg !2589
  %tobool = icmp ne %struct.IVIBandDesc* %3, null, !dbg !2588
  br i1 %tobool, label %if.then, label %if.end73, !dbg !2590

if.then:                                          ; preds = %for.body
  store i32 0, i32* %b, align 4, !dbg !2591
  br label %for.cond1, !dbg !2593

for.cond1:                                        ; preds = %for.inc70, %if.then
  %4 = load i32, i32* %b, align 4, !dbg !2594
  %5 = load i32, i32* %p, align 4, !dbg !2597
  %idxprom2 = sext i32 %5 to i64, !dbg !2598
  %6 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2598
  %arrayidx3 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %6, i64 %idxprom2, !dbg !2598
  %num_bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx3, i32 0, i32 2, !dbg !2599
  %7 = load i8, i8* %num_bands, align 4, !dbg !2599
  %conv = zext i8 %7 to i32, !dbg !2598
  %cmp4 = icmp slt i32 %4, %conv, !dbg !2600
  br i1 %cmp4, label %for.body6, label %for.end72, !dbg !2601

for.body6:                                        ; preds = %for.cond1
  %8 = load i32, i32* %b, align 4, !dbg !2602
  %idxprom7 = sext i32 %8 to i64, !dbg !2604
  %9 = load i32, i32* %p, align 4, !dbg !2605
  %idxprom8 = sext i32 %9 to i64, !dbg !2604
  %10 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2604
  %arrayidx9 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %10, i64 %idxprom8, !dbg !2604
  %bands10 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx9, i32 0, i32 3, !dbg !2606
  %11 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands10, align 8, !dbg !2606
  %arrayidx11 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %11, i64 %idxprom7, !dbg !2604
  %bufs = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx11, i32 0, i32 10, !dbg !2607
  %arrayidx12 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs, i64 0, i64 0, !dbg !2604
  %12 = bitcast i16** %arrayidx12 to i8*, !dbg !2608
  call void @av_freep(i8* %12), !dbg !2609
  %13 = load i32, i32* %b, align 4, !dbg !2610
  %idxprom13 = sext i32 %13 to i64, !dbg !2611
  %14 = load i32, i32* %p, align 4, !dbg !2612
  %idxprom14 = sext i32 %14 to i64, !dbg !2611
  %15 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2611
  %arrayidx15 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %15, i64 %idxprom14, !dbg !2611
  %bands16 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx15, i32 0, i32 3, !dbg !2613
  %16 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands16, align 8, !dbg !2613
  %arrayidx17 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %16, i64 %idxprom13, !dbg !2611
  %bufs18 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx17, i32 0, i32 10, !dbg !2614
  %arrayidx19 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs18, i64 0, i64 1, !dbg !2611
  %17 = bitcast i16** %arrayidx19 to i8*, !dbg !2615
  call void @av_freep(i8* %17), !dbg !2616
  %18 = load i32, i32* %b, align 4, !dbg !2617
  %idxprom20 = sext i32 %18 to i64, !dbg !2618
  %19 = load i32, i32* %p, align 4, !dbg !2619
  %idxprom21 = sext i32 %19 to i64, !dbg !2618
  %20 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2618
  %arrayidx22 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %20, i64 %idxprom21, !dbg !2618
  %bands23 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx22, i32 0, i32 3, !dbg !2620
  %21 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands23, align 8, !dbg !2620
  %arrayidx24 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %21, i64 %idxprom20, !dbg !2618
  %bufs25 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx24, i32 0, i32 10, !dbg !2621
  %arrayidx26 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs25, i64 0, i64 2, !dbg !2618
  %22 = bitcast i16** %arrayidx26 to i8*, !dbg !2622
  call void @av_freep(i8* %22), !dbg !2623
  %23 = load i32, i32* %b, align 4, !dbg !2624
  %idxprom27 = sext i32 %23 to i64, !dbg !2625
  %24 = load i32, i32* %p, align 4, !dbg !2626
  %idxprom28 = sext i32 %24 to i64, !dbg !2625
  %25 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2625
  %arrayidx29 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %25, i64 %idxprom28, !dbg !2625
  %bands30 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx29, i32 0, i32 3, !dbg !2627
  %26 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands30, align 8, !dbg !2627
  %arrayidx31 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %26, i64 %idxprom27, !dbg !2625
  %bufs32 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx31, i32 0, i32 10, !dbg !2628
  %arrayidx33 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs32, i64 0, i64 3, !dbg !2625
  %27 = bitcast i16** %arrayidx33 to i8*, !dbg !2629
  call void @av_freep(i8* %27), !dbg !2630
  %28 = load i32, i32* %b, align 4, !dbg !2631
  %idxprom34 = sext i32 %28 to i64, !dbg !2633
  %29 = load i32, i32* %p, align 4, !dbg !2634
  %idxprom35 = sext i32 %29 to i64, !dbg !2633
  %30 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2633
  %arrayidx36 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %30, i64 %idxprom35, !dbg !2633
  %bands37 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx36, i32 0, i32 3, !dbg !2635
  %31 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands37, align 8, !dbg !2635
  %arrayidx38 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %31, i64 %idxprom34, !dbg !2633
  %blk_vlc = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx38, i32 0, i32 23, !dbg !2636
  %cust_tab = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc, i32 0, i32 3, !dbg !2637
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %cust_tab, i32 0, i32 1, !dbg !2638
  %32 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !2638
  %tobool39 = icmp ne [2 x i16]* %32, null, !dbg !2633
  br i1 %tobool39, label %if.then40, label %if.end, !dbg !2639

if.then40:                                        ; preds = %for.body6
  %33 = load i32, i32* %b, align 4, !dbg !2640
  %idxprom41 = sext i32 %33 to i64, !dbg !2641
  %34 = load i32, i32* %p, align 4, !dbg !2642
  %idxprom42 = sext i32 %34 to i64, !dbg !2641
  %35 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2641
  %arrayidx43 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %35, i64 %idxprom42, !dbg !2641
  %bands44 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx43, i32 0, i32 3, !dbg !2643
  %36 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands44, align 8, !dbg !2643
  %arrayidx45 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %36, i64 %idxprom41, !dbg !2641
  %blk_vlc46 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx45, i32 0, i32 23, !dbg !2644
  %cust_tab47 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc46, i32 0, i32 3, !dbg !2645
  call void @ff_free_vlc(%struct.VLC* %cust_tab47), !dbg !2646
  br label %if.end, !dbg !2646

if.end:                                           ; preds = %if.then40, %for.body6
  store i32 0, i32* %t, align 4, !dbg !2647
  br label %for.cond48, !dbg !2649

for.cond48:                                       ; preds = %for.inc, %if.end
  %37 = load i32, i32* %t, align 4, !dbg !2650
  %38 = load i32, i32* %b, align 4, !dbg !2653
  %idxprom49 = sext i32 %38 to i64, !dbg !2654
  %39 = load i32, i32* %p, align 4, !dbg !2655
  %idxprom50 = sext i32 %39 to i64, !dbg !2654
  %40 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2654
  %arrayidx51 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %40, i64 %idxprom50, !dbg !2654
  %bands52 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx51, i32 0, i32 3, !dbg !2656
  %41 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands52, align 8, !dbg !2656
  %arrayidx53 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %41, i64 %idxprom49, !dbg !2654
  %num_tiles = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx53, i32 0, i32 28, !dbg !2657
  %42 = load i32, i32* %num_tiles, align 8, !dbg !2657
  %cmp54 = icmp slt i32 %37, %42, !dbg !2658
  br i1 %cmp54, label %for.body56, label %for.end, !dbg !2659

for.body56:                                       ; preds = %for.cond48
  %43 = load i32, i32* %t, align 4, !dbg !2660
  %idxprom57 = sext i32 %43 to i64, !dbg !2661
  %44 = load i32, i32* %b, align 4, !dbg !2662
  %idxprom58 = sext i32 %44 to i64, !dbg !2661
  %45 = load i32, i32* %p, align 4, !dbg !2663
  %idxprom59 = sext i32 %45 to i64, !dbg !2661
  %46 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2661
  %arrayidx60 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %46, i64 %idxprom59, !dbg !2661
  %bands61 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx60, i32 0, i32 3, !dbg !2664
  %47 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands61, align 8, !dbg !2664
  %arrayidx62 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %47, i64 %idxprom58, !dbg !2661
  %tiles = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx62, i32 0, i32 29, !dbg !2665
  %48 = load %struct.IVITile*, %struct.IVITile** %tiles, align 8, !dbg !2665
  %arrayidx63 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %48, i64 %idxprom57, !dbg !2661
  %mbs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %arrayidx63, i32 0, i32 8, !dbg !2666
  %49 = bitcast %struct.IVIMbInfo** %mbs to i8*, !dbg !2667
  call void @av_freep(i8* %49), !dbg !2668
  br label %for.inc, !dbg !2668

for.inc:                                          ; preds = %for.body56
  %50 = load i32, i32* %t, align 4, !dbg !2669
  %inc = add nsw i32 %50, 1, !dbg !2669
  store i32 %inc, i32* %t, align 4, !dbg !2669
  br label %for.cond48, !dbg !2671, !llvm.loop !2672

for.end:                                          ; preds = %for.cond48
  %51 = load i32, i32* %b, align 4, !dbg !2674
  %idxprom64 = sext i32 %51 to i64, !dbg !2675
  %52 = load i32, i32* %p, align 4, !dbg !2676
  %idxprom65 = sext i32 %52 to i64, !dbg !2675
  %53 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2675
  %arrayidx66 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %53, i64 %idxprom65, !dbg !2675
  %bands67 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx66, i32 0, i32 3, !dbg !2677
  %54 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands67, align 8, !dbg !2677
  %arrayidx68 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %54, i64 %idxprom64, !dbg !2675
  %tiles69 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx68, i32 0, i32 29, !dbg !2678
  %55 = bitcast %struct.IVITile** %tiles69 to i8*, !dbg !2679
  call void @av_freep(i8* %55), !dbg !2680
  br label %for.inc70, !dbg !2681

for.inc70:                                        ; preds = %for.end
  %56 = load i32, i32* %b, align 4, !dbg !2682
  %inc71 = add nsw i32 %56, 1, !dbg !2682
  store i32 %inc71, i32* %b, align 4, !dbg !2682
  br label %for.cond1, !dbg !2684, !llvm.loop !2685

for.end72:                                        ; preds = %for.cond1
  br label %if.end73, !dbg !2687

if.end73:                                         ; preds = %for.end72, %for.body
  %57 = load i32, i32* %p, align 4, !dbg !2689
  %idxprom74 = sext i32 %57 to i64, !dbg !2690
  %58 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2690
  %arrayidx75 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %58, i64 %idxprom74, !dbg !2690
  %bands76 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx75, i32 0, i32 3, !dbg !2691
  %59 = bitcast %struct.IVIBandDesc** %bands76 to i8*, !dbg !2692
  call void @av_freep(i8* %59), !dbg !2693
  %60 = load i32, i32* %p, align 4, !dbg !2694
  %idxprom77 = sext i32 %60 to i64, !dbg !2695
  %61 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2695
  %arrayidx78 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %61, i64 %idxprom77, !dbg !2695
  %num_bands79 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx78, i32 0, i32 2, !dbg !2696
  store i8 0, i8* %num_bands79, align 4, !dbg !2697
  br label %for.inc80, !dbg !2698

for.inc80:                                        ; preds = %if.end73
  %62 = load i32, i32* %p, align 4, !dbg !2699
  %inc81 = add nsw i32 %62, 1, !dbg !2699
  store i32 %inc81, i32* %p, align 4, !dbg !2699
  br label %for.cond, !dbg !2701, !llvm.loop !2702

for.end82:                                        ; preds = %for.cond
  ret void, !dbg !2704
}

declare i32 @av_image_check_size2(i32, i32, i64, i32, i32, i8*) #4

declare i8* @av_mallocz_array(i64, i64) #4

declare noalias i8* @av_mallocz(i64) #4

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_ivi_init_tiles(%struct.IVIPlaneDesc* %planes, i32 %tile_width, i32 %tile_height) #0 !dbg !2705 {
entry:
  %retval = alloca i32, align 4
  %planes.addr = alloca %struct.IVIPlaneDesc*, align 8
  %tile_width.addr = alloca i32, align 4
  %tile_height.addr = alloca i32, align 4
  %p = alloca i32, align 4
  %b = alloca i32, align 4
  %x_tiles = alloca i32, align 4
  %y_tiles = alloca i32, align 4
  %t_width = alloca i32, align 4
  %t_height = alloca i32, align 4
  %ret = alloca i32, align 4
  %band = alloca %struct.IVIBandDesc*, align 8
  %t = alloca i32, align 4
  store %struct.IVIPlaneDesc* %planes, %struct.IVIPlaneDesc** %planes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIPlaneDesc** %planes.addr, metadata !2708, metadata !984), !dbg !2709
  store i32 %tile_width, i32* %tile_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tile_width.addr, metadata !2710, metadata !984), !dbg !2711
  store i32 %tile_height, i32* %tile_height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tile_height.addr, metadata !2712, metadata !984), !dbg !2713
  call void @llvm.dbg.declare(metadata i32* %p, metadata !2714, metadata !984), !dbg !2715
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2716, metadata !984), !dbg !2717
  call void @llvm.dbg.declare(metadata i32* %x_tiles, metadata !2718, metadata !984), !dbg !2719
  call void @llvm.dbg.declare(metadata i32* %y_tiles, metadata !2720, metadata !984), !dbg !2721
  call void @llvm.dbg.declare(metadata i32* %t_width, metadata !2722, metadata !984), !dbg !2723
  call void @llvm.dbg.declare(metadata i32* %t_height, metadata !2724, metadata !984), !dbg !2725
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2726, metadata !984), !dbg !2727
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band, metadata !2728, metadata !984), !dbg !2729
  store i32 0, i32* %p, align 4, !dbg !2730
  br label %for.cond, !dbg !2732

for.cond:                                         ; preds = %for.inc65, %entry
  %0 = load i32, i32* %p, align 4, !dbg !2733
  %cmp = icmp slt i32 %0, 3, !dbg !2736
  br i1 %cmp, label %for.body, label %for.end67, !dbg !2737

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %p, align 4, !dbg !2738
  %tobool = icmp ne i32 %1, 0, !dbg !2738
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2740

cond.true:                                        ; preds = %for.body
  %2 = load i32, i32* %tile_width.addr, align 4, !dbg !2741
  br label %cond.end, !dbg !2743

cond.false:                                       ; preds = %for.body
  %3 = load i32, i32* %tile_width.addr, align 4, !dbg !2744
  %add = add nsw i32 %3, 3, !dbg !2746
  %shr = ashr i32 %add, 2, !dbg !2747
  br label %cond.end, !dbg !2748

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %shr, %cond.false ], !dbg !2749
  store i32 %cond, i32* %t_width, align 4, !dbg !2751
  %4 = load i32, i32* %p, align 4, !dbg !2752
  %tobool1 = icmp ne i32 %4, 0, !dbg !2752
  br i1 %tobool1, label %cond.false3, label %cond.true2, !dbg !2753

cond.true2:                                       ; preds = %cond.end
  %5 = load i32, i32* %tile_height.addr, align 4, !dbg !2754
  br label %cond.end6, !dbg !2755

cond.false3:                                      ; preds = %cond.end
  %6 = load i32, i32* %tile_height.addr, align 4, !dbg !2756
  %add4 = add nsw i32 %6, 3, !dbg !2757
  %shr5 = ashr i32 %add4, 2, !dbg !2758
  br label %cond.end6, !dbg !2759

cond.end6:                                        ; preds = %cond.false3, %cond.true2
  %cond7 = phi i32 [ %5, %cond.true2 ], [ %shr5, %cond.false3 ], !dbg !2760
  store i32 %cond7, i32* %t_height, align 4, !dbg !2761
  %7 = load i32, i32* %p, align 4, !dbg !2762
  %tobool8 = icmp ne i32 %7, 0, !dbg !2762
  br i1 %tobool8, label %if.end, label %land.lhs.true, !dbg !2764

land.lhs.true:                                    ; preds = %cond.end6
  %8 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2765
  %arrayidx = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %8, i64 0, !dbg !2765
  %num_bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx, i32 0, i32 2, !dbg !2767
  %9 = load i8, i8* %num_bands, align 4, !dbg !2767
  %conv = zext i8 %9 to i32, !dbg !2765
  %cmp9 = icmp eq i32 %conv, 4, !dbg !2768
  br i1 %cmp9, label %if.then, label %if.end, !dbg !2769

if.then:                                          ; preds = %land.lhs.true
  %10 = load i32, i32* %t_width, align 4, !dbg !2770
  %shr11 = ashr i32 %10, 1, !dbg !2770
  store i32 %shr11, i32* %t_width, align 4, !dbg !2770
  %11 = load i32, i32* %t_height, align 4, !dbg !2772
  %shr12 = ashr i32 %11, 1, !dbg !2772
  store i32 %shr12, i32* %t_height, align 4, !dbg !2772
  br label %if.end, !dbg !2773

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end6
  %12 = load i32, i32* %t_width, align 4, !dbg !2774
  %cmp13 = icmp sle i32 %12, 0, !dbg !2776
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !2777

lor.lhs.false:                                    ; preds = %if.end
  %13 = load i32, i32* %t_height, align 4, !dbg !2778
  %cmp15 = icmp sle i32 %13, 0, !dbg !2780
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !2781

if.then17:                                        ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !2782
  br label %return, !dbg !2782

if.end18:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %b, align 4, !dbg !2783
  br label %for.cond19, !dbg !2785

for.cond19:                                       ; preds = %for.inc62, %if.end18
  %14 = load i32, i32* %b, align 4, !dbg !2786
  %15 = load i32, i32* %p, align 4, !dbg !2789
  %idxprom = sext i32 %15 to i64, !dbg !2790
  %16 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2790
  %arrayidx20 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %16, i64 %idxprom, !dbg !2790
  %num_bands21 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx20, i32 0, i32 2, !dbg !2791
  %17 = load i8, i8* %num_bands21, align 4, !dbg !2791
  %conv22 = zext i8 %17 to i32, !dbg !2790
  %cmp23 = icmp slt i32 %14, %conv22, !dbg !2792
  br i1 %cmp23, label %for.body25, label %for.end64, !dbg !2793

for.body25:                                       ; preds = %for.cond19
  %18 = load i32, i32* %b, align 4, !dbg !2794
  %idxprom26 = sext i32 %18 to i64, !dbg !2796
  %19 = load i32, i32* %p, align 4, !dbg !2797
  %idxprom27 = sext i32 %19 to i64, !dbg !2796
  %20 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2796
  %arrayidx28 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %20, i64 %idxprom27, !dbg !2796
  %bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx28, i32 0, i32 3, !dbg !2798
  %21 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands, align 8, !dbg !2798
  %arrayidx29 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %21, i64 %idxprom26, !dbg !2796
  store %struct.IVIBandDesc* %arrayidx29, %struct.IVIBandDesc** %band, align 8, !dbg !2799
  %22 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2800
  %tiles = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %22, i32 0, i32 29, !dbg !2802
  %23 = load %struct.IVITile*, %struct.IVITile** %tiles, align 8, !dbg !2802
  %tobool30 = icmp ne %struct.IVITile* %23, null, !dbg !2800
  br i1 %tobool30, label %if.then31, label %if.end39, !dbg !2803

if.then31:                                        ; preds = %for.body25
  call void @llvm.dbg.declare(metadata i32* %t, metadata !2804, metadata !984), !dbg !2806
  store i32 0, i32* %t, align 4, !dbg !2807
  br label %for.cond32, !dbg !2809

for.cond32:                                       ; preds = %for.inc, %if.then31
  %24 = load i32, i32* %t, align 4, !dbg !2810
  %25 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2813
  %num_tiles = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %25, i32 0, i32 28, !dbg !2814
  %26 = load i32, i32* %num_tiles, align 8, !dbg !2814
  %cmp33 = icmp slt i32 %24, %26, !dbg !2815
  br i1 %cmp33, label %for.body35, label %for.end, !dbg !2816

for.body35:                                       ; preds = %for.cond32
  %27 = load i32, i32* %t, align 4, !dbg !2817
  %idxprom36 = sext i32 %27 to i64, !dbg !2819
  %28 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2819
  %tiles37 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %28, i32 0, i32 29, !dbg !2820
  %29 = load %struct.IVITile*, %struct.IVITile** %tiles37, align 8, !dbg !2820
  %arrayidx38 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %29, i64 %idxprom36, !dbg !2819
  %mbs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %arrayidx38, i32 0, i32 8, !dbg !2821
  %30 = bitcast %struct.IVIMbInfo** %mbs to i8*, !dbg !2822
  call void @av_freep(i8* %30), !dbg !2823
  br label %for.inc, !dbg !2824

for.inc:                                          ; preds = %for.body35
  %31 = load i32, i32* %t, align 4, !dbg !2825
  %inc = add nsw i32 %31, 1, !dbg !2825
  store i32 %inc, i32* %t, align 4, !dbg !2825
  br label %for.cond32, !dbg !2827, !llvm.loop !2828

for.end:                                          ; preds = %for.cond32
  br label %if.end39, !dbg !2830

if.end39:                                         ; preds = %for.end, %for.body25
  %32 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2831
  %width = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %32, i32 0, i32 2, !dbg !2832
  %33 = load i32, i32* %width, align 8, !dbg !2832
  %34 = load i32, i32* %t_width, align 4, !dbg !2833
  %add40 = add nsw i32 %33, %34, !dbg !2834
  %sub = sub nsw i32 %add40, 1, !dbg !2835
  %35 = load i32, i32* %t_width, align 4, !dbg !2836
  %div = sdiv i32 %sub, %35, !dbg !2837
  store i32 %div, i32* %x_tiles, align 4, !dbg !2838
  %36 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2839
  %height = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %36, i32 0, i32 3, !dbg !2840
  %37 = load i32, i32* %height, align 4, !dbg !2840
  %38 = load i32, i32* %t_height, align 4, !dbg !2841
  %add41 = add nsw i32 %37, %38, !dbg !2842
  %sub42 = sub nsw i32 %add41, 1, !dbg !2843
  %39 = load i32, i32* %t_height, align 4, !dbg !2844
  %div43 = sdiv i32 %sub42, %39, !dbg !2845
  store i32 %div43, i32* %y_tiles, align 4, !dbg !2846
  %40 = load i32, i32* %x_tiles, align 4, !dbg !2847
  %41 = load i32, i32* %y_tiles, align 4, !dbg !2848
  %mul = mul nsw i32 %40, %41, !dbg !2849
  %42 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2850
  %num_tiles44 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %42, i32 0, i32 28, !dbg !2851
  store i32 %mul, i32* %num_tiles44, align 8, !dbg !2852
  %43 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2853
  %tiles45 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %43, i32 0, i32 29, !dbg !2854
  %44 = bitcast %struct.IVITile** %tiles45 to i8*, !dbg !2855
  call void @av_freep(i8* %44), !dbg !2856
  %45 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2857
  %num_tiles46 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %45, i32 0, i32 28, !dbg !2858
  %46 = load i32, i32* %num_tiles46, align 8, !dbg !2858
  %conv47 = sext i32 %46 to i64, !dbg !2857
  %call = call i8* @av_mallocz_array(i64 %conv47, i64 48), !dbg !2859
  %47 = bitcast i8* %call to %struct.IVITile*, !dbg !2859
  %48 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2860
  %tiles48 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %48, i32 0, i32 29, !dbg !2861
  store %struct.IVITile* %47, %struct.IVITile** %tiles48, align 8, !dbg !2862
  %49 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2863
  %tiles49 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %49, i32 0, i32 29, !dbg !2865
  %50 = load %struct.IVITile*, %struct.IVITile** %tiles49, align 8, !dbg !2865
  %tobool50 = icmp ne %struct.IVITile* %50, null, !dbg !2863
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !2866

if.then51:                                        ; preds = %if.end39
  store i32 -12, i32* %retval, align 4, !dbg !2867
  br label %return, !dbg !2867

if.end52:                                         ; preds = %if.end39
  %51 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band, align 8, !dbg !2868
  %52 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %planes.addr, align 8, !dbg !2869
  %arrayidx53 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %52, i64 0, !dbg !2869
  %bands54 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx53, i32 0, i32 3, !dbg !2870
  %53 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands54, align 8, !dbg !2870
  %arrayidx55 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %53, i64 0, !dbg !2869
  %tiles56 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx55, i32 0, i32 29, !dbg !2871
  %54 = load %struct.IVITile*, %struct.IVITile** %tiles56, align 8, !dbg !2871
  %55 = load i32, i32* %p, align 4, !dbg !2872
  %56 = load i32, i32* %b, align 4, !dbg !2873
  %57 = load i32, i32* %t_height, align 4, !dbg !2874
  %58 = load i32, i32* %t_width, align 4, !dbg !2875
  %call57 = call i32 @ivi_init_tiles(%struct.IVIBandDesc* %51, %struct.IVITile* %54, i32 %55, i32 %56, i32 %57, i32 %58), !dbg !2876
  store i32 %call57, i32* %ret, align 4, !dbg !2877
  %59 = load i32, i32* %ret, align 4, !dbg !2878
  %cmp58 = icmp slt i32 %59, 0, !dbg !2880
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !2881

if.then60:                                        ; preds = %if.end52
  %60 = load i32, i32* %ret, align 4, !dbg !2882
  store i32 %60, i32* %retval, align 4, !dbg !2883
  br label %return, !dbg !2883

if.end61:                                         ; preds = %if.end52
  br label %for.inc62, !dbg !2884

for.inc62:                                        ; preds = %if.end61
  %61 = load i32, i32* %b, align 4, !dbg !2885
  %inc63 = add nsw i32 %61, 1, !dbg !2885
  store i32 %inc63, i32* %b, align 4, !dbg !2885
  br label %for.cond19, !dbg !2887, !llvm.loop !2888

for.end64:                                        ; preds = %for.cond19
  br label %for.inc65, !dbg !2890

for.inc65:                                        ; preds = %for.end64
  %62 = load i32, i32* %p, align 4, !dbg !2891
  %inc66 = add nsw i32 %62, 1, !dbg !2891
  store i32 %inc66, i32* %p, align 4, !dbg !2891
  br label %for.cond, !dbg !2893, !llvm.loop !2894

for.end67:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2896
  br label %return, !dbg !2896

return:                                           ; preds = %for.end67, %if.then60, %if.then51, %if.then17
  %63 = load i32, i32* %retval, align 4, !dbg !2897
  ret i32 %63, !dbg !2897
}

declare void @av_freep(i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @ivi_init_tiles(%struct.IVIBandDesc* %band, %struct.IVITile* %ref_tile, i32 %p, i32 %b, i32 %t_height, i32 %t_width) #2 !dbg !2898 {
entry:
  %retval = alloca i32, align 4
  %band.addr = alloca %struct.IVIBandDesc*, align 8
  %ref_tile.addr = alloca %struct.IVITile*, align 8
  %p.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %t_height.addr = alloca i32, align 4
  %t_width.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %tile = alloca %struct.IVITile*, align 8
  store %struct.IVIBandDesc* %band, %struct.IVIBandDesc** %band.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band.addr, metadata !2901, metadata !984), !dbg !2902
  store %struct.IVITile* %ref_tile, %struct.IVITile** %ref_tile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVITile** %ref_tile.addr, metadata !2903, metadata !984), !dbg !2904
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !2905, metadata !984), !dbg !2906
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !2907, metadata !984), !dbg !2908
  store i32 %t_height, i32* %t_height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t_height.addr, metadata !2909, metadata !984), !dbg !2910
  store i32 %t_width, i32* %t_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t_width.addr, metadata !2911, metadata !984), !dbg !2912
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2913, metadata !984), !dbg !2914
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2915, metadata !984), !dbg !2916
  call void @llvm.dbg.declare(metadata %struct.IVITile** %tile, metadata !2917, metadata !984), !dbg !2918
  %0 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2919
  %tiles = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %0, i32 0, i32 29, !dbg !2920
  %1 = load %struct.IVITile*, %struct.IVITile** %tiles, align 8, !dbg !2920
  store %struct.IVITile* %1, %struct.IVITile** %tile, align 8, !dbg !2918
  store i32 0, i32* %y, align 4, !dbg !2921
  br label %for.cond, !dbg !2923

for.cond:                                         ; preds = %for.inc47, %entry
  %2 = load i32, i32* %y, align 4, !dbg !2924
  %3 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2927
  %height = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %3, i32 0, i32 3, !dbg !2928
  %4 = load i32, i32* %height, align 4, !dbg !2928
  %cmp = icmp slt i32 %2, %4, !dbg !2929
  br i1 %cmp, label %for.body, label %for.end49, !dbg !2930

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !2931
  br label %for.cond1, !dbg !2934

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %x, align 4, !dbg !2935
  %6 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2938
  %width = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %6, i32 0, i32 2, !dbg !2939
  %7 = load i32, i32* %width, align 8, !dbg !2939
  %cmp2 = icmp slt i32 %5, %7, !dbg !2940
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !2941

for.body3:                                        ; preds = %for.cond1
  %8 = load i32, i32* %x, align 4, !dbg !2942
  %9 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !2944
  %xpos = getelementptr inbounds %struct.IVITile, %struct.IVITile* %9, i32 0, i32 0, !dbg !2945
  store i32 %8, i32* %xpos, align 8, !dbg !2946
  %10 = load i32, i32* %y, align 4, !dbg !2947
  %11 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !2948
  %ypos = getelementptr inbounds %struct.IVITile, %struct.IVITile* %11, i32 0, i32 1, !dbg !2949
  store i32 %10, i32* %ypos, align 4, !dbg !2950
  %12 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2951
  %mb_size = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %12, i32 0, i32 13, !dbg !2952
  %13 = load i32, i32* %mb_size, align 4, !dbg !2952
  %14 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !2953
  %mb_size4 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %14, i32 0, i32 4, !dbg !2954
  store i32 %13, i32* %mb_size4, align 8, !dbg !2955
  %15 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2956
  %width5 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %15, i32 0, i32 2, !dbg !2957
  %16 = load i32, i32* %width5, align 8, !dbg !2957
  %17 = load i32, i32* %x, align 4, !dbg !2958
  %sub = sub nsw i32 %16, %17, !dbg !2959
  %18 = load i32, i32* %t_width.addr, align 4, !dbg !2960
  %cmp6 = icmp sgt i32 %sub, %18, !dbg !2961
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !2962

cond.true:                                        ; preds = %for.body3
  %19 = load i32, i32* %t_width.addr, align 4, !dbg !2963
  br label %cond.end, !dbg !2965

cond.false:                                       ; preds = %for.body3
  %20 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2966
  %width7 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %20, i32 0, i32 2, !dbg !2968
  %21 = load i32, i32* %width7, align 8, !dbg !2968
  %22 = load i32, i32* %x, align 4, !dbg !2969
  %sub8 = sub nsw i32 %21, %22, !dbg !2970
  br label %cond.end, !dbg !2971

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ %sub8, %cond.false ], !dbg !2972
  %23 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !2974
  %width9 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %23, i32 0, i32 2, !dbg !2975
  store i32 %cond, i32* %width9, align 8, !dbg !2976
  %24 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2977
  %height10 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %24, i32 0, i32 3, !dbg !2978
  %25 = load i32, i32* %height10, align 4, !dbg !2978
  %26 = load i32, i32* %y, align 4, !dbg !2979
  %sub11 = sub nsw i32 %25, %26, !dbg !2980
  %27 = load i32, i32* %t_height.addr, align 4, !dbg !2981
  %cmp12 = icmp sgt i32 %sub11, %27, !dbg !2982
  br i1 %cmp12, label %cond.true13, label %cond.false14, !dbg !2983

cond.true13:                                      ; preds = %cond.end
  %28 = load i32, i32* %t_height.addr, align 4, !dbg !2984
  br label %cond.end17, !dbg !2985

cond.false14:                                     ; preds = %cond.end
  %29 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !2986
  %height15 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %29, i32 0, i32 3, !dbg !2987
  %30 = load i32, i32* %height15, align 4, !dbg !2987
  %31 = load i32, i32* %y, align 4, !dbg !2988
  %sub16 = sub nsw i32 %30, %31, !dbg !2989
  br label %cond.end17, !dbg !2990

cond.end17:                                       ; preds = %cond.false14, %cond.true13
  %cond18 = phi i32 [ %28, %cond.true13 ], [ %sub16, %cond.false14 ], !dbg !2991
  %32 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !2992
  %height19 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %32, i32 0, i32 3, !dbg !2993
  store i32 %cond18, i32* %height19, align 4, !dbg !2994
  %33 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !2995
  %data_size = getelementptr inbounds %struct.IVITile, %struct.IVITile* %33, i32 0, i32 6, !dbg !2996
  store i32 0, i32* %data_size, align 8, !dbg !2997
  %34 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !2998
  %is_empty = getelementptr inbounds %struct.IVITile, %struct.IVITile* %34, i32 0, i32 5, !dbg !2999
  store i32 0, i32* %is_empty, align 4, !dbg !3000
  %35 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3001
  %width20 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %35, i32 0, i32 2, !dbg !3002
  %36 = load i32, i32* %width20, align 8, !dbg !3002
  %37 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3003
  %mb_size21 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %37, i32 0, i32 13, !dbg !3004
  %38 = load i32, i32* %mb_size21, align 4, !dbg !3004
  %add = add nsw i32 %36, %38, !dbg !3005
  %sub22 = sub nsw i32 %add, 1, !dbg !3006
  %39 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3007
  %mb_size23 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %39, i32 0, i32 13, !dbg !3008
  %40 = load i32, i32* %mb_size23, align 4, !dbg !3008
  %div = sdiv i32 %sub22, %40, !dbg !3009
  %41 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3010
  %height24 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %41, i32 0, i32 3, !dbg !3011
  %42 = load i32, i32* %height24, align 4, !dbg !3011
  %43 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3012
  %mb_size25 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %43, i32 0, i32 13, !dbg !3013
  %44 = load i32, i32* %mb_size25, align 4, !dbg !3013
  %add26 = add nsw i32 %42, %44, !dbg !3014
  %sub27 = sub nsw i32 %add26, 1, !dbg !3015
  %45 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3016
  %mb_size28 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %45, i32 0, i32 13, !dbg !3017
  %46 = load i32, i32* %mb_size28, align 4, !dbg !3017
  %div29 = sdiv i32 %sub27, %46, !dbg !3018
  %mul = mul nsw i32 %div, %div29, !dbg !3019
  %47 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3020
  %num_MBs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %47, i32 0, i32 7, !dbg !3021
  store i32 %mul, i32* %num_MBs, align 4, !dbg !3022
  %48 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3023
  %mbs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %48, i32 0, i32 8, !dbg !3024
  %49 = bitcast %struct.IVIMbInfo** %mbs to i8*, !dbg !3025
  call void @av_freep(i8* %49), !dbg !3026
  %50 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3027
  %num_MBs30 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %50, i32 0, i32 7, !dbg !3028
  %51 = load i32, i32* %num_MBs30, align 4, !dbg !3028
  %conv = sext i32 %51 to i64, !dbg !3027
  %call = call i8* @av_mallocz_array(i64 %conv, i64 16), !dbg !3029
  %52 = bitcast i8* %call to %struct.IVIMbInfo*, !dbg !3029
  %53 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3030
  %mbs31 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %53, i32 0, i32 8, !dbg !3031
  store %struct.IVIMbInfo* %52, %struct.IVIMbInfo** %mbs31, align 8, !dbg !3032
  %54 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3033
  %mbs32 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %54, i32 0, i32 8, !dbg !3035
  %55 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mbs32, align 8, !dbg !3035
  %tobool = icmp ne %struct.IVIMbInfo* %55, null, !dbg !3033
  br i1 %tobool, label %if.end, label %if.then, !dbg !3036

if.then:                                          ; preds = %cond.end17
  store i32 -12, i32* %retval, align 4, !dbg !3037
  br label %return, !dbg !3037

if.end:                                           ; preds = %cond.end17
  %56 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3038
  %ref_mbs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %56, i32 0, i32 9, !dbg !3039
  store %struct.IVIMbInfo* null, %struct.IVIMbInfo** %ref_mbs, align 8, !dbg !3040
  %57 = load i32, i32* %p.addr, align 4, !dbg !3041
  %tobool33 = icmp ne i32 %57, 0, !dbg !3041
  br i1 %tobool33, label %if.then35, label %lor.lhs.false, !dbg !3043

lor.lhs.false:                                    ; preds = %if.end
  %58 = load i32, i32* %b.addr, align 4, !dbg !3044
  %tobool34 = icmp ne i32 %58, 0, !dbg !3044
  br i1 %tobool34, label %if.then35, label %if.end44, !dbg !3046

if.then35:                                        ; preds = %lor.lhs.false, %if.end
  %59 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3047
  %num_MBs36 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %59, i32 0, i32 7, !dbg !3050
  %60 = load i32, i32* %num_MBs36, align 4, !dbg !3050
  %61 = load %struct.IVITile*, %struct.IVITile** %ref_tile.addr, align 8, !dbg !3051
  %num_MBs37 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %61, i32 0, i32 7, !dbg !3052
  %62 = load i32, i32* %num_MBs37, align 4, !dbg !3052
  %cmp38 = icmp ne i32 %60, %62, !dbg !3053
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !3054

if.then40:                                        ; preds = %if.then35
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i32 0, i32 0)), !dbg !3055
  store i32 -1094995529, i32* %retval, align 4, !dbg !3057
  br label %return, !dbg !3057

if.end41:                                         ; preds = %if.then35
  %63 = load %struct.IVITile*, %struct.IVITile** %ref_tile.addr, align 8, !dbg !3058
  %mbs42 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %63, i32 0, i32 8, !dbg !3059
  %64 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mbs42, align 8, !dbg !3059
  %65 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3060
  %ref_mbs43 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %65, i32 0, i32 9, !dbg !3061
  store %struct.IVIMbInfo* %64, %struct.IVIMbInfo** %ref_mbs43, align 8, !dbg !3062
  %66 = load %struct.IVITile*, %struct.IVITile** %ref_tile.addr, align 8, !dbg !3063
  %incdec.ptr = getelementptr inbounds %struct.IVITile, %struct.IVITile* %66, i32 1, !dbg !3063
  store %struct.IVITile* %incdec.ptr, %struct.IVITile** %ref_tile.addr, align 8, !dbg !3063
  br label %if.end44, !dbg !3064

if.end44:                                         ; preds = %if.end41, %lor.lhs.false
  %67 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3065
  %incdec.ptr45 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %67, i32 1, !dbg !3065
  store %struct.IVITile* %incdec.ptr45, %struct.IVITile** %tile, align 8, !dbg !3065
  br label %for.inc, !dbg !3066

for.inc:                                          ; preds = %if.end44
  %68 = load i32, i32* %t_width.addr, align 4, !dbg !3067
  %69 = load i32, i32* %x, align 4, !dbg !3069
  %add46 = add nsw i32 %69, %68, !dbg !3069
  store i32 %add46, i32* %x, align 4, !dbg !3069
  br label %for.cond1, !dbg !3070, !llvm.loop !3071

for.end:                                          ; preds = %for.cond1
  br label %for.inc47, !dbg !3073

for.inc47:                                        ; preds = %for.end
  %70 = load i32, i32* %t_height.addr, align 4, !dbg !3074
  %71 = load i32, i32* %y, align 4, !dbg !3076
  %add48 = add nsw i32 %71, %70, !dbg !3076
  store i32 %add48, i32* %y, align 4, !dbg !3076
  br label %for.cond, !dbg !3077, !llvm.loop !3078

for.end49:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3080
  br label %return, !dbg !3080

return:                                           ; preds = %for.end49, %if.then40, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !3081
  ret i32 %72, !dbg !3081
}

; Function Attrs: nounwind uwtable
define i32 @ff_ivi_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #2 !dbg !3082 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %ctx = alloca %struct.IVI45DecContext*, align 8
  %buf = alloca i8*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf_size = alloca i32, align 4
  %result = alloca i32, align 4
  %p = alloca i32, align 4
  %b = alloca i32, align 4
  %left = alloca i32, align 4
  %pkt = alloca %struct.AVPacket, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3083, metadata !984), !dbg !3084
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3085, metadata !984), !dbg !3086
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !3087, metadata !984), !dbg !3088
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3089, metadata !984), !dbg !3090
  call void @llvm.dbg.declare(metadata %struct.IVI45DecContext** %ctx, metadata !3091, metadata !984), !dbg !3162
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3163
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3164
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3164
  %2 = bitcast i8* %1 to %struct.IVI45DecContext*, !dbg !3163
  store %struct.IVI45DecContext* %2, %struct.IVI45DecContext** %ctx, align 8, !dbg !3162
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3165, metadata !984), !dbg !3166
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3167
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 3, !dbg !3168
  %4 = load i8*, i8** %data1, align 8, !dbg !3168
  store i8* %4, i8** %buf, align 8, !dbg !3166
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !3169, metadata !984), !dbg !3170
  %5 = load i8*, i8** %data.addr, align 8, !dbg !3171
  %6 = bitcast i8* %5 to %struct.AVFrame*, !dbg !3171
  store %struct.AVFrame* %6, %struct.AVFrame** %frame, align 8, !dbg !3170
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !3172, metadata !984), !dbg !3173
  %7 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3174
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 4, !dbg !3175
  %8 = load i32, i32* %size, align 8, !dbg !3175
  store i32 %8, i32* %buf_size, align 4, !dbg !3173
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3176, metadata !984), !dbg !3177
  call void @llvm.dbg.declare(metadata i32* %p, metadata !3178, metadata !984), !dbg !3179
  call void @llvm.dbg.declare(metadata i32* %b, metadata !3180, metadata !984), !dbg !3181
  %9 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3182
  %gb = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %9, i32 0, i32 0, !dbg !3183
  %10 = load i8*, i8** %buf, align 8, !dbg !3184
  %11 = load i32, i32* %buf_size, align 4, !dbg !3185
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %10, i32 %11), !dbg !3186
  store i32 %call, i32* %result, align 4, !dbg !3187
  %12 = load i32, i32* %result, align 4, !dbg !3188
  %cmp = icmp slt i32 %12, 0, !dbg !3190
  br i1 %cmp, label %if.then, label %if.end, !dbg !3191

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %result, align 4, !dbg !3192
  store i32 %13, i32* %retval, align 4, !dbg !3193
  br label %return, !dbg !3193

if.end:                                           ; preds = %entry
  %14 = load i8*, i8** %buf, align 8, !dbg !3194
  %15 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3195
  %frame_data = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %15, i32 0, i32 7, !dbg !3196
  store i8* %14, i8** %frame_data, align 8, !dbg !3197
  %16 = load i32, i32* %buf_size, align 4, !dbg !3198
  %17 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3199
  %frame_size = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %17, i32 0, i32 9, !dbg !3200
  store i32 %16, i32* %frame_size, align 4, !dbg !3201
  %18 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3202
  %decode_pic_hdr = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %18, i32 0, i32 36, !dbg !3203
  %19 = load i32 (%struct.IVI45DecContext*, %struct.AVCodecContext*)*, i32 (%struct.IVI45DecContext*, %struct.AVCodecContext*)** %decode_pic_hdr, align 8, !dbg !3203
  %20 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3204
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3205
  %call2 = call i32 %19(%struct.IVI45DecContext* %20, %struct.AVCodecContext* %21), !dbg !3202
  store i32 %call2, i32* %result, align 4, !dbg !3206
  %22 = load i32, i32* %result, align 4, !dbg !3207
  %tobool = icmp ne i32 %22, 0, !dbg !3207
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !3209

if.then3:                                         ; preds = %if.end
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3210
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !3210
  %25 = load i32, i32* %result, align 4, !dbg !3212
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i32 0, i32 0), i32 %25), !dbg !3213
  %26 = load i32, i32* %result, align 4, !dbg !3214
  store i32 %26, i32* %retval, align 4, !dbg !3215
  br label %return, !dbg !3215

if.end4:                                          ; preds = %if.end
  %27 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3216
  %gop_invalid = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %27, i32 0, i32 41, !dbg !3218
  %28 = load i32, i32* %gop_invalid, align 8, !dbg !3218
  %tobool5 = icmp ne i32 %28, 0, !dbg !3216
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !3219

if.then6:                                         ; preds = %if.end4
  store i32 -1094995529, i32* %retval, align 4, !dbg !3220
  br label %return, !dbg !3220

if.end7:                                          ; preds = %if.end4
  %29 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3221
  %is_indeo4 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %29, i32 0, i32 43, !dbg !3223
  %30 = load i32, i32* %is_indeo4, align 4, !dbg !3223
  %tobool8 = icmp ne i32 %30, 0, !dbg !3221
  br i1 %tobool8, label %land.lhs.true, label %if.end15, !dbg !3224

land.lhs.true:                                    ; preds = %if.end7
  %31 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3225
  %frame_type = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %31, i32 0, i32 3, !dbg !3227
  %32 = load i32, i32* %frame_type, align 8, !dbg !3227
  %cmp9 = icmp eq i32 %32, 6, !dbg !3228
  br i1 %cmp9, label %if.then10, label %if.end15, !dbg !3229

if.then10:                                        ; preds = %land.lhs.true
  %33 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3230
  %got_p_frame = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %33, i32 0, i32 45, !dbg !3233
  %34 = load i32, i32* %got_p_frame, align 8, !dbg !3233
  %tobool11 = icmp ne i32 %34, 0, !dbg !3230
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !3234

if.then12:                                        ; preds = %if.then10
  %35 = load i8*, i8** %data.addr, align 8, !dbg !3235
  %36 = bitcast i8* %35 to %struct.AVFrame*, !dbg !3235
  %37 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3237
  %p_frame = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %37, i32 0, i32 44, !dbg !3238
  %38 = load %struct.AVFrame*, %struct.AVFrame** %p_frame, align 8, !dbg !3238
  call void @av_frame_move_ref(%struct.AVFrame* %36, %struct.AVFrame* %38), !dbg !3239
  %39 = load i32*, i32** %got_frame.addr, align 8, !dbg !3240
  store i32 1, i32* %39, align 4, !dbg !3241
  %40 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3242
  %got_p_frame13 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %40, i32 0, i32 45, !dbg !3243
  store i32 0, i32* %got_p_frame13, align 8, !dbg !3244
  br label %if.end14, !dbg !3245

if.else:                                          ; preds = %if.then10
  %41 = load i32*, i32** %got_frame.addr, align 8, !dbg !3246
  store i32 0, i32* %41, align 4, !dbg !3248
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then12
  %42 = load i32, i32* %buf_size, align 4, !dbg !3249
  store i32 %42, i32* %retval, align 4, !dbg !3250
  br label %return, !dbg !3250

if.end15:                                         ; preds = %land.lhs.true, %if.end7
  %43 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3251
  %gop_flags = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %43, i32 0, i32 28, !dbg !3253
  %44 = load i8, i8* %gop_flags, align 8, !dbg !3253
  %conv = zext i8 %44 to i32, !dbg !3251
  %and = and i32 %conv, 32, !dbg !3254
  %tobool16 = icmp ne i32 %and, 0, !dbg !3254
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !3255

if.then17:                                        ; preds = %if.end15
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3256
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !3256
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %46, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0)), !dbg !3258
  store i32 -1163346256, i32* %retval, align 4, !dbg !3259
  br label %return, !dbg !3259

if.end18:                                         ; preds = %if.end15
  %47 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3260
  %planes = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %47, i32 0, i32 14, !dbg !3262
  %arrayidx = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes, i64 0, i64 0, !dbg !3260
  %bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx, i32 0, i32 3, !dbg !3263
  %48 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands, align 8, !dbg !3263
  %tobool19 = icmp ne %struct.IVIBandDesc* %48, null, !dbg !3260
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !3264

if.then20:                                        ; preds = %if.end18
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3265
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !3265
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i32 0, i32 0)), !dbg !3267
  store i32 -1094995529, i32* %retval, align 4, !dbg !3268
  br label %return, !dbg !3268

if.end21:                                         ; preds = %if.end18
  %51 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3269
  %switch_buffers = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %51, i32 0, i32 39, !dbg !3270
  %52 = load void (%struct.IVI45DecContext*)*, void (%struct.IVI45DecContext*)** %switch_buffers, align 8, !dbg !3270
  %53 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3271
  call void %52(%struct.IVI45DecContext* %53), !dbg !3269
  %54 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3272
  %is_nonnull_frame = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %54, i32 0, i32 40, !dbg !3274
  %55 = load i32 (%struct.IVI45DecContext*)*, i32 (%struct.IVI45DecContext*)** %is_nonnull_frame, align 8, !dbg !3274
  %56 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3275
  %call22 = call i32 %55(%struct.IVI45DecContext* %56), !dbg !3272
  %tobool23 = icmp ne i32 %call22, 0, !dbg !3272
  br i1 %tobool23, label %if.then24, label %if.else54, !dbg !3276

if.then24:                                        ; preds = %if.end21
  %57 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3277
  %dst_buf = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %57, i32 0, i32 16, !dbg !3279
  %58 = load i32, i32* %dst_buf, align 4, !dbg !3279
  %idxprom = sext i32 %58 to i64, !dbg !3280
  %59 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3280
  %buf_invalid = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %59, i32 0, i32 42, !dbg !3281
  %arrayidx25 = getelementptr inbounds [4 x i32], [4 x i32]* %buf_invalid, i64 0, i64 %idxprom, !dbg !3280
  store i32 1, i32* %arrayidx25, align 4, !dbg !3282
  store i32 0, i32* %p, align 4, !dbg !3283
  br label %for.cond, !dbg !3285

for.cond:                                         ; preds = %for.inc47, %if.then24
  %60 = load i32, i32* %p, align 4, !dbg !3286
  %cmp26 = icmp slt i32 %60, 3, !dbg !3289
  br i1 %cmp26, label %for.body, label %for.end49, !dbg !3290

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %b, align 4, !dbg !3291
  br label %for.cond28, !dbg !3294

for.cond28:                                       ; preds = %for.inc, %for.body
  %61 = load i32, i32* %b, align 4, !dbg !3295
  %62 = load i32, i32* %p, align 4, !dbg !3298
  %idxprom29 = sext i32 %62 to i64, !dbg !3299
  %63 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3299
  %planes30 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %63, i32 0, i32 14, !dbg !3300
  %arrayidx31 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes30, i64 0, i64 %idxprom29, !dbg !3299
  %num_bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx31, i32 0, i32 2, !dbg !3301
  %64 = load i8, i8* %num_bands, align 4, !dbg !3301
  %conv32 = zext i8 %64 to i32, !dbg !3299
  %cmp33 = icmp slt i32 %61, %conv32, !dbg !3302
  br i1 %cmp33, label %for.body35, label %for.end, !dbg !3303

for.body35:                                       ; preds = %for.cond28
  %65 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3304
  %66 = load i32, i32* %b, align 4, !dbg !3306
  %idxprom36 = sext i32 %66 to i64, !dbg !3307
  %67 = load i32, i32* %p, align 4, !dbg !3308
  %idxprom37 = sext i32 %67 to i64, !dbg !3307
  %68 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3307
  %planes38 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %68, i32 0, i32 14, !dbg !3309
  %arrayidx39 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes38, i64 0, i64 %idxprom37, !dbg !3307
  %bands40 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx39, i32 0, i32 3, !dbg !3310
  %69 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands40, align 8, !dbg !3310
  %arrayidx41 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %69, i64 %idxprom36, !dbg !3307
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3311
  %call42 = call i32 @decode_band(%struct.IVI45DecContext* %65, %struct.IVIBandDesc* %arrayidx41, %struct.AVCodecContext* %70), !dbg !3312
  store i32 %call42, i32* %result, align 4, !dbg !3313
  %71 = load i32, i32* %result, align 4, !dbg !3314
  %cmp43 = icmp slt i32 %71, 0, !dbg !3316
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !3317

if.then45:                                        ; preds = %for.body35
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3318
  %73 = bitcast %struct.AVCodecContext* %72 to i8*, !dbg !3318
  %74 = load i32, i32* %b, align 4, !dbg !3320
  %75 = load i32, i32* %p, align 4, !dbg !3321
  call void (i8*, i32, i8*, ...) @av_log(i8* %73, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i32 0, i32 0), i32 %74, i32 %75), !dbg !3322
  %76 = load i32, i32* %result, align 4, !dbg !3323
  store i32 %76, i32* %retval, align 4, !dbg !3324
  br label %return, !dbg !3324

if.end46:                                         ; preds = %for.body35
  br label %for.inc, !dbg !3325

for.inc:                                          ; preds = %if.end46
  %77 = load i32, i32* %b, align 4, !dbg !3326
  %inc = add nsw i32 %77, 1, !dbg !3326
  store i32 %inc, i32* %b, align 4, !dbg !3326
  br label %for.cond28, !dbg !3328, !llvm.loop !3329

for.end:                                          ; preds = %for.cond28
  br label %for.inc47, !dbg !3331

for.inc47:                                        ; preds = %for.end
  %78 = load i32, i32* %p, align 4, !dbg !3332
  %inc48 = add nsw i32 %78, 1, !dbg !3332
  store i32 %inc48, i32* %p, align 4, !dbg !3332
  br label %for.cond, !dbg !3334, !llvm.loop !3335

for.end49:                                        ; preds = %for.cond
  %79 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3337
  %dst_buf50 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %79, i32 0, i32 16, !dbg !3338
  %80 = load i32, i32* %dst_buf50, align 4, !dbg !3338
  %idxprom51 = sext i32 %80 to i64, !dbg !3339
  %81 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3339
  %buf_invalid52 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %81, i32 0, i32 42, !dbg !3340
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* %buf_invalid52, i64 0, i64 %idxprom51, !dbg !3339
  store i32 0, i32* %arrayidx53, align 4, !dbg !3341
  br label %if.end74, !dbg !3342

if.else54:                                        ; preds = %if.end21
  %82 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3343
  %is_scalable = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %82, i32 0, i32 6, !dbg !3346
  %83 = load i32, i32* %is_scalable, align 4, !dbg !3346
  %tobool55 = icmp ne i32 %83, 0, !dbg !3343
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !3347

if.then56:                                        ; preds = %if.else54
  store i32 -1094995529, i32* %retval, align 4, !dbg !3348
  br label %return, !dbg !3348

if.end57:                                         ; preds = %if.else54
  store i32 0, i32* %p, align 4, !dbg !3349
  br label %for.cond58, !dbg !3351

for.cond58:                                       ; preds = %for.inc71, %if.end57
  %84 = load i32, i32* %p, align 4, !dbg !3352
  %cmp59 = icmp slt i32 %84, 3, !dbg !3355
  br i1 %cmp59, label %for.body61, label %for.end73, !dbg !3356

for.body61:                                       ; preds = %for.cond58
  %85 = load i32, i32* %p, align 4, !dbg !3357
  %idxprom62 = sext i32 %85 to i64, !dbg !3360
  %86 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3360
  %planes63 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %86, i32 0, i32 14, !dbg !3361
  %arrayidx64 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes63, i64 0, i64 %idxprom62, !dbg !3360
  %bands65 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx64, i32 0, i32 3, !dbg !3362
  %87 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands65, align 8, !dbg !3362
  %arrayidx66 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %87, i64 0, !dbg !3360
  %buf67 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx66, i32 0, i32 7, !dbg !3363
  %88 = load i16*, i16** %buf67, align 8, !dbg !3363
  %tobool68 = icmp ne i16* %88, null, !dbg !3360
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !3364

if.then69:                                        ; preds = %for.body61
  store i32 -1094995529, i32* %retval, align 4, !dbg !3365
  br label %return, !dbg !3365

if.end70:                                         ; preds = %for.body61
  br label %for.inc71, !dbg !3366

for.inc71:                                        ; preds = %if.end70
  %89 = load i32, i32* %p, align 4, !dbg !3367
  %inc72 = add nsw i32 %89, 1, !dbg !3367
  store i32 %inc72, i32* %p, align 4, !dbg !3367
  br label %for.cond58, !dbg !3369, !llvm.loop !3370

for.end73:                                        ; preds = %for.cond58
  br label %if.end74

if.end74:                                         ; preds = %for.end73, %for.end49
  %90 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3372
  %dst_buf75 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %90, i32 0, i32 16, !dbg !3374
  %91 = load i32, i32* %dst_buf75, align 4, !dbg !3374
  %idxprom76 = sext i32 %91 to i64, !dbg !3375
  %92 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3375
  %buf_invalid77 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %92, i32 0, i32 42, !dbg !3376
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %buf_invalid77, i64 0, i64 %idxprom76, !dbg !3375
  %93 = load i32, i32* %arrayidx78, align 4, !dbg !3375
  %tobool79 = icmp ne i32 %93, 0, !dbg !3375
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !3377

if.then80:                                        ; preds = %if.end74
  store i32 -1, i32* %retval, align 4, !dbg !3378
  br label %return, !dbg !3378

if.end81:                                         ; preds = %if.end74
  %94 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3379
  %is_nonnull_frame82 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %94, i32 0, i32 40, !dbg !3381
  %95 = load i32 (%struct.IVI45DecContext*)*, i32 (%struct.IVI45DecContext*)** %is_nonnull_frame82, align 8, !dbg !3381
  %96 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3382
  %call83 = call i32 %95(%struct.IVI45DecContext* %96), !dbg !3379
  %tobool84 = icmp ne i32 %call83, 0, !dbg !3379
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !3383

if.then85:                                        ; preds = %if.end81
  %97 = load i32, i32* %buf_size, align 4, !dbg !3384
  store i32 %97, i32* %retval, align 4, !dbg !3385
  br label %return, !dbg !3385

if.end86:                                         ; preds = %if.end81
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3386
  %99 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3387
  %planes87 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %99, i32 0, i32 14, !dbg !3388
  %arrayidx88 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes87, i64 0, i64 0, !dbg !3387
  %width = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx88, i32 0, i32 0, !dbg !3389
  %100 = load i16, i16* %width, align 8, !dbg !3389
  %conv89 = zext i16 %100 to i32, !dbg !3387
  %101 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3390
  %planes90 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %101, i32 0, i32 14, !dbg !3391
  %arrayidx91 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes90, i64 0, i64 0, !dbg !3390
  %height = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx91, i32 0, i32 1, !dbg !3392
  %102 = load i16, i16* %height, align 2, !dbg !3392
  %conv92 = zext i16 %102 to i32, !dbg !3390
  %call93 = call i32 @ff_set_dimensions(%struct.AVCodecContext* %98, i32 %conv89, i32 %conv92), !dbg !3393
  store i32 %call93, i32* %result, align 4, !dbg !3394
  %103 = load i32, i32* %result, align 4, !dbg !3395
  %cmp94 = icmp slt i32 %103, 0, !dbg !3397
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !3398

if.then96:                                        ; preds = %if.end86
  %104 = load i32, i32* %result, align 4, !dbg !3399
  store i32 %104, i32* %retval, align 4, !dbg !3400
  br label %return, !dbg !3400

if.end97:                                         ; preds = %if.end86
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3401
  %106 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3403
  %call98 = call i32 @ff_get_buffer(%struct.AVCodecContext* %105, %struct.AVFrame* %106, i32 0), !dbg !3404
  store i32 %call98, i32* %result, align 4, !dbg !3405
  %cmp99 = icmp slt i32 %call98, 0, !dbg !3406
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !3407

if.then101:                                       ; preds = %if.end97
  %107 = load i32, i32* %result, align 4, !dbg !3408
  store i32 %107, i32* %retval, align 4, !dbg !3409
  br label %return, !dbg !3409

if.end102:                                        ; preds = %if.end97
  %108 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3410
  %is_scalable103 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %108, i32 0, i32 6, !dbg !3412
  %109 = load i32, i32* %is_scalable103, align 4, !dbg !3412
  %tobool104 = icmp ne i32 %109, 0, !dbg !3410
  br i1 %tobool104, label %if.then105, label %if.else124, !dbg !3413

if.then105:                                       ; preds = %if.end102
  %110 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3414
  %is_indeo4106 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %110, i32 0, i32 43, !dbg !3417
  %111 = load i32, i32* %is_indeo4106, align 4, !dbg !3417
  %tobool107 = icmp ne i32 %111, 0, !dbg !3414
  br i1 %tobool107, label %if.then108, label %if.else115, !dbg !3418

if.then108:                                       ; preds = %if.then105
  %112 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3419
  %planes109 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %112, i32 0, i32 14, !dbg !3420
  %arrayidx110 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes109, i64 0, i64 0, !dbg !3419
  %113 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3421
  %data111 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 0, !dbg !3422
  %arrayidx112 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data111, i64 0, i64 0, !dbg !3421
  %114 = load i8*, i8** %arrayidx112, align 8, !dbg !3421
  %115 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3423
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %115, i32 0, i32 1, !dbg !3424
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !3423
  %116 = load i32, i32* %arrayidx113, align 8, !dbg !3423
  %conv114 = sext i32 %116 to i64, !dbg !3423
  call void @ff_ivi_recompose_haar(%struct.IVIPlaneDesc* %arrayidx110, i8* %114, i64 %conv114), !dbg !3425
  br label %if.end123, !dbg !3425

if.else115:                                       ; preds = %if.then105
  %117 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3426
  %planes116 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %117, i32 0, i32 14, !dbg !3427
  %arrayidx117 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes116, i64 0, i64 0, !dbg !3426
  %118 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3428
  %data118 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %118, i32 0, i32 0, !dbg !3429
  %arrayidx119 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data118, i64 0, i64 0, !dbg !3428
  %119 = load i8*, i8** %arrayidx119, align 8, !dbg !3428
  %120 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3430
  %linesize120 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %120, i32 0, i32 1, !dbg !3431
  %arrayidx121 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize120, i64 0, i64 0, !dbg !3430
  %121 = load i32, i32* %arrayidx121, align 8, !dbg !3430
  %conv122 = sext i32 %121 to i64, !dbg !3430
  call void @ff_ivi_recompose53(%struct.IVIPlaneDesc* %arrayidx117, i8* %119, i64 %conv122), !dbg !3432
  br label %if.end123

if.end123:                                        ; preds = %if.else115, %if.then108
  br label %if.end132, !dbg !3433

if.else124:                                       ; preds = %if.end102
  %122 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3434
  %planes125 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %122, i32 0, i32 14, !dbg !3436
  %arrayidx126 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes125, i64 0, i64 0, !dbg !3434
  %123 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3437
  %data127 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %123, i32 0, i32 0, !dbg !3438
  %arrayidx128 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data127, i64 0, i64 0, !dbg !3437
  %124 = load i8*, i8** %arrayidx128, align 8, !dbg !3437
  %125 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3439
  %linesize129 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %125, i32 0, i32 1, !dbg !3440
  %arrayidx130 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize129, i64 0, i64 0, !dbg !3439
  %126 = load i32, i32* %arrayidx130, align 8, !dbg !3439
  %conv131 = sext i32 %126 to i64, !dbg !3439
  call void @ivi_output_plane(%struct.IVIPlaneDesc* %arrayidx126, i8* %124, i64 %conv131), !dbg !3441
  br label %if.end132

if.end132:                                        ; preds = %if.else124, %if.end123
  %127 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3442
  %planes133 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %127, i32 0, i32 14, !dbg !3443
  %arrayidx134 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes133, i64 0, i64 2, !dbg !3442
  %128 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3444
  %data135 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %128, i32 0, i32 0, !dbg !3445
  %arrayidx136 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data135, i64 0, i64 1, !dbg !3444
  %129 = load i8*, i8** %arrayidx136, align 8, !dbg !3444
  %130 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3446
  %linesize137 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %130, i32 0, i32 1, !dbg !3447
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize137, i64 0, i64 1, !dbg !3446
  %131 = load i32, i32* %arrayidx138, align 4, !dbg !3446
  %conv139 = sext i32 %131 to i64, !dbg !3446
  call void @ivi_output_plane(%struct.IVIPlaneDesc* %arrayidx134, i8* %129, i64 %conv139), !dbg !3448
  %132 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3449
  %planes140 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %132, i32 0, i32 14, !dbg !3450
  %arrayidx141 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes140, i64 0, i64 1, !dbg !3449
  %133 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3451
  %data142 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %133, i32 0, i32 0, !dbg !3452
  %arrayidx143 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data142, i64 0, i64 2, !dbg !3451
  %134 = load i8*, i8** %arrayidx143, align 8, !dbg !3451
  %135 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3453
  %linesize144 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %135, i32 0, i32 1, !dbg !3454
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize144, i64 0, i64 2, !dbg !3453
  %136 = load i32, i32* %arrayidx145, align 8, !dbg !3453
  %conv146 = sext i32 %136 to i64, !dbg !3453
  call void @ivi_output_plane(%struct.IVIPlaneDesc* %arrayidx141, i8* %134, i64 %conv146), !dbg !3455
  %137 = load i32*, i32** %got_frame.addr, align 8, !dbg !3456
  store i32 1, i32* %137, align 4, !dbg !3457
  %138 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3458
  %is_indeo4147 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %138, i32 0, i32 43, !dbg !3460
  %139 = load i32, i32* %is_indeo4147, align 4, !dbg !3460
  %tobool148 = icmp ne i32 %139, 0, !dbg !3458
  br i1 %tobool148, label %land.lhs.true149, label %if.end189, !dbg !3461

land.lhs.true149:                                 ; preds = %if.end132
  %140 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3462
  %frame_type150 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %140, i32 0, i32 3, !dbg !3464
  %141 = load i32, i32* %frame_type150, align 8, !dbg !3464
  %cmp151 = icmp eq i32 %141, 0, !dbg !3465
  br i1 %cmp151, label %if.then153, label %if.end189, !dbg !3466

if.then153:                                       ; preds = %land.lhs.true149
  call void @llvm.dbg.declare(metadata i32* %left, metadata !3467, metadata !984), !dbg !3469
  br label %while.cond, !dbg !3470

while.cond:                                       ; preds = %if.end162, %if.then153
  %142 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3471
  %gb154 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %142, i32 0, i32 0, !dbg !3473
  %call155 = call i32 @get_bits(%struct.GetBitContext* %gb154, i32 8), !dbg !3474
  %tobool156 = icmp ne i32 %call155, 0, !dbg !3475
  br i1 %tobool156, label %while.body, label %while.end, !dbg !3475

while.body:                                       ; preds = %while.cond
  %143 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3476
  %gb157 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %143, i32 0, i32 0, !dbg !3479
  %call158 = call i32 @get_bits_left(%struct.GetBitContext* %gb157), !dbg !3480
  %cmp159 = icmp slt i32 %call158, 8, !dbg !3481
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !3482

if.then161:                                       ; preds = %while.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !3483
  br label %return, !dbg !3483

if.end162:                                        ; preds = %while.body
  br label %while.cond, !dbg !3484, !llvm.loop !3486

while.end:                                        ; preds = %while.cond
  %144 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3487
  %gb163 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %144, i32 0, i32 0, !dbg !3488
  %call164 = call i32 @get_bits_count(%struct.GetBitContext* %gb163), !dbg !3489
  %and165 = and i32 %call164, 24, !dbg !3490
  store i32 %and165, i32* %left, align 4, !dbg !3491
  %145 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3492
  %gb166 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %145, i32 0, i32 0, !dbg !3493
  %146 = load i32, i32* %left, align 4, !dbg !3494
  %sub = sub nsw i32 64, %146, !dbg !3495
  call void @skip_bits_long(%struct.GetBitContext* %gb166, i32 %sub), !dbg !3496
  %147 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3497
  %gb167 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %147, i32 0, i32 0, !dbg !3499
  %call168 = call i32 @get_bits_left(%struct.GetBitContext* %gb167), !dbg !3500
  %cmp169 = icmp sgt i32 %call168, 18, !dbg !3501
  br i1 %cmp169, label %land.lhs.true171, label %if.end188, !dbg !3502

land.lhs.true171:                                 ; preds = %while.end
  %148 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3503
  %gb172 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %148, i32 0, i32 0, !dbg !3504
  %call173 = call i32 @show_bits_long(%struct.GetBitContext* %gb172, i32 21), !dbg !3505
  %cmp174 = icmp eq i32 %call173, 786424, !dbg !3506
  br i1 %cmp174, label %if.then176, label %if.end188, !dbg !3507

if.then176:                                       ; preds = %land.lhs.true171
  call void @llvm.dbg.declare(metadata %struct.AVPacket* %pkt, metadata !3508, metadata !984), !dbg !3510
  %149 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3511
  %data177 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %149, i32 0, i32 3, !dbg !3512
  %150 = load i8*, i8** %data177, align 8, !dbg !3512
  %151 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3513
  %gb178 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %151, i32 0, i32 0, !dbg !3514
  %call179 = call i32 @get_bits_count(%struct.GetBitContext* %gb178), !dbg !3515
  %shr = ashr i32 %call179, 3, !dbg !3516
  %idx.ext = sext i32 %shr to i64, !dbg !3517
  %add.ptr = getelementptr inbounds i8, i8* %150, i64 %idx.ext, !dbg !3517
  %data180 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 3, !dbg !3518
  store i8* %add.ptr, i8** %data180, align 8, !dbg !3519
  %152 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3520
  %gb181 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %152, i32 0, i32 0, !dbg !3521
  %call182 = call i32 @get_bits_left(%struct.GetBitContext* %gb181), !dbg !3522
  %shr183 = ashr i32 %call182, 3, !dbg !3523
  %size184 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 4, !dbg !3524
  store i32 %shr183, i32* %size184, align 8, !dbg !3525
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3526
  %154 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3527
  %p_frame185 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %154, i32 0, i32 44, !dbg !3528
  %155 = load %struct.AVFrame*, %struct.AVFrame** %p_frame185, align 8, !dbg !3528
  %156 = bitcast %struct.AVFrame* %155 to i8*, !dbg !3527
  %157 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3529
  %got_p_frame186 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %157, i32 0, i32 45, !dbg !3530
  %call187 = call i32 @ff_ivi_decode_frame(%struct.AVCodecContext* %153, i8* %156, i32* %got_p_frame186, %struct.AVPacket* %pkt), !dbg !3531
  br label %if.end188, !dbg !3532

if.end188:                                        ; preds = %if.then176, %land.lhs.true171, %while.end
  br label %if.end189, !dbg !3533

if.end189:                                        ; preds = %if.end188, %land.lhs.true149, %if.end132
  %158 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3534
  %show_indeo4_info = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %158, i32 0, i32 30, !dbg !3536
  %159 = load i32, i32* %show_indeo4_info, align 8, !dbg !3536
  %tobool190 = icmp ne i32 %159, 0, !dbg !3534
  br i1 %tobool190, label %if.then191, label %if.end212, !dbg !3537

if.then191:                                       ; preds = %if.end189
  %160 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3538
  %is_scalable192 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %160, i32 0, i32 6, !dbg !3541
  %161 = load i32, i32* %is_scalable192, align 4, !dbg !3541
  %tobool193 = icmp ne i32 %161, 0, !dbg !3538
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !3542

if.then194:                                       ; preds = %if.then191
  %162 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3543
  %163 = bitcast %struct.AVCodecContext* %162 to i8*, !dbg !3543
  call void (i8*, i32, i8*, ...) @av_log(i8* %163, i32 48, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i32 0, i32 0)), !dbg !3544
  br label %if.end195, !dbg !3544

if.end195:                                        ; preds = %if.then194, %if.then191
  %164 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3545
  %uses_tiling = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %164, i32 0, i32 33, !dbg !3547
  %165 = load i8, i8* %uses_tiling, align 2, !dbg !3547
  %tobool196 = icmp ne i8 %165, 0, !dbg !3545
  br i1 %tobool196, label %if.then197, label %if.end198, !dbg !3548

if.then197:                                       ; preds = %if.end195
  %166 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3549
  %167 = bitcast %struct.AVCodecContext* %166 to i8*, !dbg !3549
  call void (i8*, i32, i8*, ...) @av_log(i8* %167, i32 48, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)), !dbg !3550
  br label %if.end198, !dbg !3550

if.end198:                                        ; preds = %if.then197, %if.end195
  %168 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3551
  %has_b_frames = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %168, i32 0, i32 31, !dbg !3553
  %169 = load i8, i8* %has_b_frames, align 4, !dbg !3553
  %tobool199 = icmp ne i8 %169, 0, !dbg !3551
  br i1 %tobool199, label %if.then200, label %if.end201, !dbg !3554

if.then200:                                       ; preds = %if.end198
  %170 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3555
  %171 = bitcast %struct.AVCodecContext* %170 to i8*, !dbg !3555
  call void (i8*, i32, i8*, ...) @av_log(i8* %171, i32 48, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i32 0, i32 0)), !dbg !3556
  br label %if.end201, !dbg !3556

if.end201:                                        ; preds = %if.then200, %if.end198
  %172 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3557
  %has_transp = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %172, i32 0, i32 32, !dbg !3559
  %173 = load i8, i8* %has_transp, align 1, !dbg !3559
  %tobool202 = icmp ne i8 %173, 0, !dbg !3557
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !3560

if.then203:                                       ; preds = %if.end201
  %174 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3561
  %175 = bitcast %struct.AVCodecContext* %174 to i8*, !dbg !3561
  call void (i8*, i32, i8*, ...) @av_log(i8* %175, i32 48, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i32 0, i32 0)), !dbg !3562
  br label %if.end204, !dbg !3562

if.end204:                                        ; preds = %if.then203, %if.end201
  %176 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3563
  %uses_haar = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %176, i32 0, i32 34, !dbg !3565
  %177 = load i8, i8* %uses_haar, align 1, !dbg !3565
  %tobool205 = icmp ne i8 %177, 0, !dbg !3563
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !3566

if.then206:                                       ; preds = %if.end204
  %178 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3567
  %179 = bitcast %struct.AVCodecContext* %178 to i8*, !dbg !3567
  call void (i8*, i32, i8*, ...) @av_log(i8* %179, i32 48, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0)), !dbg !3568
  br label %if.end207, !dbg !3568

if.end207:                                        ; preds = %if.then206, %if.end204
  %180 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3569
  %uses_fullpel = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %180, i32 0, i32 35, !dbg !3571
  %181 = load i8, i8* %uses_fullpel, align 8, !dbg !3571
  %tobool208 = icmp ne i8 %181, 0, !dbg !3569
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !3572

if.then209:                                       ; preds = %if.end207
  %182 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3573
  %183 = bitcast %struct.AVCodecContext* %182 to i8*, !dbg !3573
  call void (i8*, i32, i8*, ...) @av_log(i8* %183, i32 48, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i32 0, i32 0)), !dbg !3574
  br label %if.end210, !dbg !3574

if.end210:                                        ; preds = %if.then209, %if.end207
  %184 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !3575
  %show_indeo4_info211 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %184, i32 0, i32 30, !dbg !3576
  store i32 0, i32* %show_indeo4_info211, align 8, !dbg !3577
  br label %if.end212, !dbg !3578

if.end212:                                        ; preds = %if.end210, %if.end189
  %185 = load i32, i32* %buf_size, align 4, !dbg !3579
  store i32 %185, i32* %retval, align 4, !dbg !3580
  br label %return, !dbg !3580

return:                                           ; preds = %if.end212, %if.then161, %if.then101, %if.then96, %if.then85, %if.then80, %if.then69, %if.then56, %if.then45, %if.then20, %if.then17, %if.end14, %if.then6, %if.then3, %if.then
  %186 = load i32, i32* %retval, align 4, !dbg !3581
  ret i32 %186, !dbg !3581
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #3 !dbg !3582 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3585, metadata !984), !dbg !3586
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3587, metadata !984), !dbg !3588
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !3589, metadata !984), !dbg !3590
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !3591
  %cmp = icmp sgt i32 %0, 268435455, !dbg !3593
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3594

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !3595
  %cmp1 = icmp slt i32 %1, 0, !dbg !3597
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3598

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !3599
  br label %if.end, !dbg !3600

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3601
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3602
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !3603
  %mul = mul nsw i32 %4, 8, !dbg !3604
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !3605
  ret i32 %call, !dbg !3606
}

declare void @av_frame_move_ref(%struct.AVFrame*, %struct.AVFrame*) #4

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #4

; Function Attrs: nounwind uwtable
define internal i32 @decode_band(%struct.IVI45DecContext* %ctx, %struct.IVIBandDesc* %band, %struct.AVCodecContext* %avctx) #2 !dbg !3607 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.IVI45DecContext*, align 8
  %band.addr = alloca %struct.IVIBandDesc*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  %idx1 = alloca i32, align 4
  %idx2 = alloca i32, align 4
  %pos = alloca i32, align 4
  %tile = alloca %struct.IVITile*, align 8
  %SWAP_tmp = alloca i8, align 1
  %SWAP_tmp52 = alloca i16, align 2
  %SWAP_tmp190 = alloca i8, align 1
  %SWAP_tmp209 = alloca i16, align 2
  store %struct.IVI45DecContext* %ctx, %struct.IVI45DecContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVI45DecContext** %ctx.addr, metadata !3610, metadata !984), !dbg !3611
  store %struct.IVIBandDesc* %band, %struct.IVIBandDesc** %band.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band.addr, metadata !3612, metadata !984), !dbg !3613
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3614, metadata !984), !dbg !3615
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3616, metadata !984), !dbg !3617
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3618, metadata !984), !dbg !3619
  call void @llvm.dbg.declare(metadata i32* %t, metadata !3620, metadata !984), !dbg !3621
  call void @llvm.dbg.declare(metadata i32* %idx1, metadata !3622, metadata !984), !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %idx2, metadata !3624, metadata !984), !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !3626, metadata !984), !dbg !3627
  call void @llvm.dbg.declare(metadata %struct.IVITile** %tile, metadata !3628, metadata !984), !dbg !3629
  %0 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3630
  %dst_buf = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %0, i32 0, i32 16, !dbg !3631
  %1 = load i32, i32* %dst_buf, align 4, !dbg !3631
  %idxprom = sext i32 %1 to i64, !dbg !3632
  %2 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3632
  %bufs = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %2, i32 0, i32 10, !dbg !3633
  %arrayidx = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs, i64 0, i64 %idxprom, !dbg !3632
  %3 = load i16*, i16** %arrayidx, align 8, !dbg !3632
  %4 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3634
  %buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %4, i32 0, i32 7, !dbg !3635
  store i16* %3, i16** %buf, align 8, !dbg !3636
  %5 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3637
  %buf1 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %5, i32 0, i32 7, !dbg !3639
  %6 = load i16*, i16** %buf1, align 8, !dbg !3639
  %tobool = icmp ne i16* %6, null, !dbg !3637
  br i1 %tobool, label %if.end, label %if.then, !dbg !3640

if.then:                                          ; preds = %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3641
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !3641
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i32 0, i32 0)), !dbg !3643
  store i32 -1094995529, i32* %retval, align 4, !dbg !3644
  br label %return, !dbg !3644

if.end:                                           ; preds = %entry
  %9 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3645
  %is_indeo4 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %9, i32 0, i32 43, !dbg !3647
  %10 = load i32, i32* %is_indeo4, align 4, !dbg !3647
  %tobool2 = icmp ne i32 %10, 0, !dbg !3645
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !3648

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3649
  %frame_type = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %11, i32 0, i32 3, !dbg !3651
  %12 = load i32, i32* %frame_type, align 8, !dbg !3651
  %cmp = icmp eq i32 %12, 3, !dbg !3652
  br i1 %cmp, label %if.then3, label %if.else, !dbg !3653

if.then3:                                         ; preds = %land.lhs.true
  %13 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3654
  %b_ref_buf = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %13, i32 0, i32 19, !dbg !3656
  %14 = load i32, i32* %b_ref_buf, align 8, !dbg !3656
  %idxprom4 = sext i32 %14 to i64, !dbg !3657
  %15 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3657
  %bufs5 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %15, i32 0, i32 10, !dbg !3658
  %arrayidx6 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs5, i64 0, i64 %idxprom4, !dbg !3657
  %16 = load i16*, i16** %arrayidx6, align 8, !dbg !3657
  %17 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3659
  %ref_buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %17, i32 0, i32 8, !dbg !3660
  store i16* %16, i16** %ref_buf, align 8, !dbg !3661
  %18 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3662
  %ref_buf7 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %18, i32 0, i32 17, !dbg !3663
  %19 = load i32, i32* %ref_buf7, align 8, !dbg !3663
  %idxprom8 = sext i32 %19 to i64, !dbg !3664
  %20 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3664
  %bufs9 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %20, i32 0, i32 10, !dbg !3665
  %arrayidx10 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs9, i64 0, i64 %idxprom8, !dbg !3664
  %21 = load i16*, i16** %arrayidx10, align 8, !dbg !3664
  %22 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3666
  %b_ref_buf11 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %22, i32 0, i32 9, !dbg !3667
  store i16* %21, i16** %b_ref_buf11, align 8, !dbg !3668
  br label %if.end18, !dbg !3669

if.else:                                          ; preds = %land.lhs.true, %if.end
  %23 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3670
  %ref_buf12 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %23, i32 0, i32 17, !dbg !3672
  %24 = load i32, i32* %ref_buf12, align 8, !dbg !3672
  %idxprom13 = sext i32 %24 to i64, !dbg !3673
  %25 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3673
  %bufs14 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %25, i32 0, i32 10, !dbg !3674
  %arrayidx15 = getelementptr inbounds [4 x i16*], [4 x i16*]* %bufs14, i64 0, i64 %idxprom13, !dbg !3673
  %26 = load i16*, i16** %arrayidx15, align 8, !dbg !3673
  %27 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3675
  %ref_buf16 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %27, i32 0, i32 8, !dbg !3676
  store i16* %26, i16** %ref_buf16, align 8, !dbg !3677
  %28 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3678
  %b_ref_buf17 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %28, i32 0, i32 9, !dbg !3679
  store i16* null, i16** %b_ref_buf17, align 8, !dbg !3680
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then3
  %29 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3681
  %frame_data = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %29, i32 0, i32 7, !dbg !3682
  %30 = load i8*, i8** %frame_data, align 8, !dbg !3682
  %31 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3683
  %gb = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %31, i32 0, i32 0, !dbg !3684
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !3685
  %shr = ashr i32 %call, 3, !dbg !3686
  %idx.ext = sext i32 %shr to i64, !dbg !3687
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !3687
  %32 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3688
  %data_ptr = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %32, i32 0, i32 5, !dbg !3689
  store i8* %add.ptr, i8** %data_ptr, align 8, !dbg !3690
  %33 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3691
  %decode_band_hdr = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %33, i32 0, i32 37, !dbg !3692
  %34 = load i32 (%struct.IVI45DecContext*, %struct.IVIBandDesc*, %struct.AVCodecContext*)*, i32 (%struct.IVI45DecContext*, %struct.IVIBandDesc*, %struct.AVCodecContext*)** %decode_band_hdr, align 8, !dbg !3692
  %35 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3693
  %36 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3694
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3695
  %call19 = call i32 %34(%struct.IVI45DecContext* %35, %struct.IVIBandDesc* %36, %struct.AVCodecContext* %37), !dbg !3691
  store i32 %call19, i32* %result, align 4, !dbg !3696
  %38 = load i32, i32* %result, align 4, !dbg !3697
  %tobool20 = icmp ne i32 %38, 0, !dbg !3697
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3699

if.then21:                                        ; preds = %if.end18
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3700
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !3700
  %41 = load i32, i32* %result, align 4, !dbg !3702
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i32 0, i32 0), i32 %41), !dbg !3703
  %42 = load i32, i32* %result, align 4, !dbg !3704
  store i32 %42, i32* %retval, align 4, !dbg !3705
  br label %return, !dbg !3705

if.end22:                                         ; preds = %if.end18
  %43 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3706
  %is_empty = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %43, i32 0, i32 12, !dbg !3708
  %44 = load i32, i32* %is_empty, align 8, !dbg !3708
  %tobool23 = icmp ne i32 %44, 0, !dbg !3706
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !3709

if.then24:                                        ; preds = %if.end22
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3710
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !3710
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i32 0, i32 0)), !dbg !3712
  store i32 -1094995529, i32* %retval, align 4, !dbg !3713
  br label %return, !dbg !3713

if.end25:                                         ; preds = %if.end22
  %47 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3714
  %rvmap_sel = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %47, i32 0, i32 26, !dbg !3715
  %48 = load i32, i32* %rvmap_sel, align 8, !dbg !3715
  %idxprom26 = sext i32 %48 to i64, !dbg !3716
  %49 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3716
  %rvmap_tabs = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %49, i32 0, i32 1, !dbg !3717
  %arrayidx27 = getelementptr inbounds [9 x %struct.RVMapDesc], [9 x %struct.RVMapDesc]* %rvmap_tabs, i64 0, i64 %idxprom26, !dbg !3716
  %50 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3718
  %rv_map = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %50, i32 0, i32 27, !dbg !3719
  store %struct.RVMapDesc* %arrayidx27, %struct.RVMapDesc** %rv_map, align 8, !dbg !3720
  store i32 0, i32* %i, align 4, !dbg !3721
  br label %for.cond, !dbg !3723

for.cond:                                         ; preds = %for.inc, %if.end25
  %51 = load i32, i32* %i, align 4, !dbg !3724
  %52 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3727
  %num_corr = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %52, i32 0, i32 24, !dbg !3728
  %53 = load i32, i32* %num_corr, align 8, !dbg !3728
  %cmp28 = icmp slt i32 %51, %53, !dbg !3729
  br i1 %cmp28, label %for.body, label %for.end, !dbg !3730

for.body:                                         ; preds = %for.cond
  %54 = load i32, i32* %i, align 4, !dbg !3731
  %mul = mul nsw i32 %54, 2, !dbg !3733
  %idxprom29 = sext i32 %mul to i64, !dbg !3734
  %55 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3734
  %corr = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %55, i32 0, i32 25, !dbg !3735
  %arrayidx30 = getelementptr inbounds [122 x i8], [122 x i8]* %corr, i64 0, i64 %idxprom29, !dbg !3734
  %56 = load i8, i8* %arrayidx30, align 1, !dbg !3734
  %conv = zext i8 %56 to i32, !dbg !3734
  store i32 %conv, i32* %idx1, align 4, !dbg !3736
  %57 = load i32, i32* %i, align 4, !dbg !3737
  %mul31 = mul nsw i32 %57, 2, !dbg !3738
  %add = add nsw i32 %mul31, 1, !dbg !3739
  %idxprom32 = sext i32 %add to i64, !dbg !3740
  %58 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3740
  %corr33 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %58, i32 0, i32 25, !dbg !3741
  %arrayidx34 = getelementptr inbounds [122 x i8], [122 x i8]* %corr33, i64 0, i64 %idxprom32, !dbg !3740
  %59 = load i8, i8* %arrayidx34, align 1, !dbg !3740
  %conv35 = zext i8 %59 to i32, !dbg !3740
  store i32 %conv35, i32* %idx2, align 4, !dbg !3742
  br label %do.body, !dbg !3743, !llvm.loop !3744

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8* %SWAP_tmp, metadata !3745, metadata !984), !dbg !3747
  %60 = load i32, i32* %idx2, align 4, !dbg !3748
  %idxprom36 = sext i32 %60 to i64, !dbg !3750
  %61 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3750
  %rv_map37 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %61, i32 0, i32 27, !dbg !3751
  %62 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map37, align 8, !dbg !3751
  %runtab = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %62, i32 0, i32 2, !dbg !3752
  %arrayidx38 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab, i64 0, i64 %idxprom36, !dbg !3750
  %63 = load i8, i8* %arrayidx38, align 1, !dbg !3750
  store i8 %63, i8* %SWAP_tmp, align 1, !dbg !3753
  %64 = load i32, i32* %idx1, align 4, !dbg !3754
  %idxprom39 = sext i32 %64 to i64, !dbg !3755
  %65 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3755
  %rv_map40 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %65, i32 0, i32 27, !dbg !3756
  %66 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map40, align 8, !dbg !3756
  %runtab41 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %66, i32 0, i32 2, !dbg !3757
  %arrayidx42 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab41, i64 0, i64 %idxprom39, !dbg !3755
  %67 = load i8, i8* %arrayidx42, align 1, !dbg !3755
  %68 = load i32, i32* %idx2, align 4, !dbg !3758
  %idxprom43 = sext i32 %68 to i64, !dbg !3759
  %69 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3759
  %rv_map44 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %69, i32 0, i32 27, !dbg !3760
  %70 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map44, align 8, !dbg !3760
  %runtab45 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %70, i32 0, i32 2, !dbg !3761
  %arrayidx46 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab45, i64 0, i64 %idxprom43, !dbg !3759
  store i8 %67, i8* %arrayidx46, align 1, !dbg !3762
  %71 = load i8, i8* %SWAP_tmp, align 1, !dbg !3763
  %72 = load i32, i32* %idx1, align 4, !dbg !3764
  %idxprom47 = sext i32 %72 to i64, !dbg !3765
  %73 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3765
  %rv_map48 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %73, i32 0, i32 27, !dbg !3766
  %74 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map48, align 8, !dbg !3766
  %runtab49 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %74, i32 0, i32 2, !dbg !3767
  %arrayidx50 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab49, i64 0, i64 %idxprom47, !dbg !3765
  store i8 %71, i8* %arrayidx50, align 1, !dbg !3768
  br label %do.end, !dbg !3769

do.end:                                           ; preds = %do.body
  br label %do.body51, !dbg !3770, !llvm.loop !3771

do.body51:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp52, metadata !3772, metadata !984), !dbg !3774
  %75 = load i32, i32* %idx2, align 4, !dbg !3775
  %idxprom53 = sext i32 %75 to i64, !dbg !3777
  %76 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3777
  %rv_map54 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %76, i32 0, i32 27, !dbg !3778
  %77 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map54, align 8, !dbg !3778
  %valtab = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %77, i32 0, i32 3, !dbg !3779
  %arrayidx55 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab, i64 0, i64 %idxprom53, !dbg !3777
  %78 = load i8, i8* %arrayidx55, align 1, !dbg !3777
  %conv56 = sext i8 %78 to i16, !dbg !3777
  store i16 %conv56, i16* %SWAP_tmp52, align 2, !dbg !3780
  %79 = load i32, i32* %idx1, align 4, !dbg !3781
  %idxprom57 = sext i32 %79 to i64, !dbg !3782
  %80 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3782
  %rv_map58 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %80, i32 0, i32 27, !dbg !3783
  %81 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map58, align 8, !dbg !3783
  %valtab59 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %81, i32 0, i32 3, !dbg !3784
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab59, i64 0, i64 %idxprom57, !dbg !3782
  %82 = load i8, i8* %arrayidx60, align 1, !dbg !3782
  %83 = load i32, i32* %idx2, align 4, !dbg !3785
  %idxprom61 = sext i32 %83 to i64, !dbg !3786
  %84 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3786
  %rv_map62 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %84, i32 0, i32 27, !dbg !3787
  %85 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map62, align 8, !dbg !3787
  %valtab63 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %85, i32 0, i32 3, !dbg !3788
  %arrayidx64 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab63, i64 0, i64 %idxprom61, !dbg !3786
  store i8 %82, i8* %arrayidx64, align 1, !dbg !3789
  %86 = load i16, i16* %SWAP_tmp52, align 2, !dbg !3790
  %conv65 = trunc i16 %86 to i8, !dbg !3790
  %87 = load i32, i32* %idx1, align 4, !dbg !3791
  %idxprom66 = sext i32 %87 to i64, !dbg !3792
  %88 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3792
  %rv_map67 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %88, i32 0, i32 27, !dbg !3793
  %89 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map67, align 8, !dbg !3793
  %valtab68 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %89, i32 0, i32 3, !dbg !3794
  %arrayidx69 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab68, i64 0, i64 %idxprom66, !dbg !3792
  store i8 %conv65, i8* %arrayidx69, align 1, !dbg !3795
  br label %do.end70, !dbg !3796

do.end70:                                         ; preds = %do.body51
  %90 = load i32, i32* %idx1, align 4, !dbg !3797
  %91 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3799
  %rv_map71 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %91, i32 0, i32 27, !dbg !3800
  %92 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map71, align 8, !dbg !3800
  %eob_sym = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %92, i32 0, i32 0, !dbg !3801
  %93 = load i8, i8* %eob_sym, align 1, !dbg !3801
  %conv72 = zext i8 %93 to i32, !dbg !3799
  %cmp73 = icmp eq i32 %90, %conv72, !dbg !3802
  br i1 %cmp73, label %if.then80, label %lor.lhs.false, !dbg !3803

lor.lhs.false:                                    ; preds = %do.end70
  %94 = load i32, i32* %idx2, align 4, !dbg !3804
  %95 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3806
  %rv_map75 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %95, i32 0, i32 27, !dbg !3807
  %96 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map75, align 8, !dbg !3807
  %eob_sym76 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %96, i32 0, i32 0, !dbg !3808
  %97 = load i8, i8* %eob_sym76, align 1, !dbg !3808
  %conv77 = zext i8 %97 to i32, !dbg !3806
  %cmp78 = icmp eq i32 %94, %conv77, !dbg !3809
  br i1 %cmp78, label %if.then80, label %if.end86, !dbg !3810

if.then80:                                        ; preds = %lor.lhs.false, %do.end70
  %98 = load i32, i32* %idx1, align 4, !dbg !3811
  %99 = load i32, i32* %idx2, align 4, !dbg !3812
  %xor = xor i32 %98, %99, !dbg !3813
  %100 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3814
  %rv_map81 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %100, i32 0, i32 27, !dbg !3815
  %101 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map81, align 8, !dbg !3815
  %eob_sym82 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %101, i32 0, i32 0, !dbg !3816
  %102 = load i8, i8* %eob_sym82, align 1, !dbg !3817
  %conv83 = zext i8 %102 to i32, !dbg !3817
  %xor84 = xor i32 %conv83, %xor, !dbg !3817
  %conv85 = trunc i32 %xor84 to i8, !dbg !3817
  store i8 %conv85, i8* %eob_sym82, align 1, !dbg !3817
  br label %if.end86, !dbg !3814

if.end86:                                         ; preds = %if.then80, %lor.lhs.false
  %103 = load i32, i32* %idx1, align 4, !dbg !3818
  %104 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3820
  %rv_map87 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %104, i32 0, i32 27, !dbg !3821
  %105 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map87, align 8, !dbg !3821
  %esc_sym = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %105, i32 0, i32 1, !dbg !3822
  %106 = load i8, i8* %esc_sym, align 1, !dbg !3822
  %conv88 = zext i8 %106 to i32, !dbg !3820
  %cmp89 = icmp eq i32 %103, %conv88, !dbg !3823
  br i1 %cmp89, label %if.then97, label %lor.lhs.false91, !dbg !3824

lor.lhs.false91:                                  ; preds = %if.end86
  %107 = load i32, i32* %idx2, align 4, !dbg !3825
  %108 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3827
  %rv_map92 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %108, i32 0, i32 27, !dbg !3828
  %109 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map92, align 8, !dbg !3828
  %esc_sym93 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %109, i32 0, i32 1, !dbg !3829
  %110 = load i8, i8* %esc_sym93, align 1, !dbg !3829
  %conv94 = zext i8 %110 to i32, !dbg !3827
  %cmp95 = icmp eq i32 %107, %conv94, !dbg !3830
  br i1 %cmp95, label %if.then97, label %if.end104, !dbg !3831

if.then97:                                        ; preds = %lor.lhs.false91, %if.end86
  %111 = load i32, i32* %idx1, align 4, !dbg !3832
  %112 = load i32, i32* %idx2, align 4, !dbg !3833
  %xor98 = xor i32 %111, %112, !dbg !3834
  %113 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3835
  %rv_map99 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %113, i32 0, i32 27, !dbg !3836
  %114 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map99, align 8, !dbg !3836
  %esc_sym100 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %114, i32 0, i32 1, !dbg !3837
  %115 = load i8, i8* %esc_sym100, align 1, !dbg !3838
  %conv101 = zext i8 %115 to i32, !dbg !3838
  %xor102 = xor i32 %conv101, %xor98, !dbg !3838
  %conv103 = trunc i32 %xor102 to i8, !dbg !3838
  store i8 %conv103, i8* %esc_sym100, align 1, !dbg !3838
  br label %if.end104, !dbg !3835

if.end104:                                        ; preds = %if.then97, %lor.lhs.false91
  br label %for.inc, !dbg !3839

for.inc:                                          ; preds = %if.end104
  %116 = load i32, i32* %i, align 4, !dbg !3840
  %inc = add nsw i32 %116, 1, !dbg !3840
  store i32 %inc, i32* %i, align 4, !dbg !3840
  br label %for.cond, !dbg !3842, !llvm.loop !3843

for.end:                                          ; preds = %for.cond
  %117 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3845
  %gb105 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %117, i32 0, i32 0, !dbg !3846
  %call106 = call i32 @get_bits_count(%struct.GetBitContext* %gb105), !dbg !3847
  store i32 %call106, i32* %pos, align 4, !dbg !3848
  store i32 0, i32* %t, align 4, !dbg !3849
  br label %for.cond107, !dbg !3851

for.cond107:                                      ; preds = %for.inc169, %for.end
  %118 = load i32, i32* %t, align 4, !dbg !3852
  %119 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3855
  %num_tiles = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %119, i32 0, i32 28, !dbg !3856
  %120 = load i32, i32* %num_tiles, align 8, !dbg !3856
  %cmp108 = icmp slt i32 %118, %120, !dbg !3857
  br i1 %cmp108, label %for.body110, label %for.end171, !dbg !3858

for.body110:                                      ; preds = %for.cond107
  %121 = load i32, i32* %t, align 4, !dbg !3859
  %idxprom111 = sext i32 %121 to i64, !dbg !3861
  %122 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3861
  %tiles = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %122, i32 0, i32 29, !dbg !3862
  %123 = load %struct.IVITile*, %struct.IVITile** %tiles, align 8, !dbg !3862
  %arrayidx112 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %123, i64 %idxprom111, !dbg !3861
  store %struct.IVITile* %arrayidx112, %struct.IVITile** %tile, align 8, !dbg !3863
  %124 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3864
  %mb_size = getelementptr inbounds %struct.IVITile, %struct.IVITile* %124, i32 0, i32 4, !dbg !3866
  %125 = load i32, i32* %mb_size, align 8, !dbg !3866
  %126 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3867
  %mb_size113 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %126, i32 0, i32 13, !dbg !3868
  %127 = load i32, i32* %mb_size113, align 4, !dbg !3868
  %cmp114 = icmp ne i32 %125, %127, !dbg !3869
  br i1 %cmp114, label %if.then116, label %if.end119, !dbg !3870

if.then116:                                       ; preds = %for.body110
  %128 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3871
  %129 = bitcast %struct.AVCodecContext* %128 to i8*, !dbg !3871
  %130 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3873
  %mb_size117 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %130, i32 0, i32 13, !dbg !3874
  %131 = load i32, i32* %mb_size117, align 4, !dbg !3874
  %132 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3875
  %mb_size118 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %132, i32 0, i32 4, !dbg !3876
  %133 = load i32, i32* %mb_size118, align 8, !dbg !3876
  call void (i8*, i32, i8*, ...) @av_log(i8* %129, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i32 0, i32 0), i32 %131, i32 %133), !dbg !3877
  store i32 -1094995529, i32* %retval, align 4, !dbg !3878
  br label %return, !dbg !3878

if.end119:                                        ; preds = %for.body110
  %134 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3879
  %gb120 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %134, i32 0, i32 0, !dbg !3880
  %call121 = call i32 @get_bits1(%struct.GetBitContext* %gb120), !dbg !3881
  %135 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3882
  %is_empty122 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %135, i32 0, i32 5, !dbg !3883
  store i32 %call121, i32* %is_empty122, align 4, !dbg !3884
  %136 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3885
  %is_empty123 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %136, i32 0, i32 5, !dbg !3887
  %137 = load i32, i32* %is_empty123, align 4, !dbg !3887
  %tobool124 = icmp ne i32 %137, 0, !dbg !3885
  br i1 %tobool124, label %if.then125, label %if.else139, !dbg !3888

if.then125:                                       ; preds = %if.end119
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3889
  %139 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3891
  %140 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3892
  %141 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3893
  %planes = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %141, i32 0, i32 14, !dbg !3894
  %arrayidx126 = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes, i64 0, i64 0, !dbg !3893
  %bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %arrayidx126, i32 0, i32 3, !dbg !3895
  %142 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands, align 8, !dbg !3895
  %arrayidx127 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %142, i64 0, !dbg !3893
  %mb_size128 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx127, i32 0, i32 13, !dbg !3896
  %143 = load i32, i32* %mb_size128, align 4, !dbg !3896
  %shr129 = ashr i32 %143, 3, !dbg !3897
  %144 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3898
  %mb_size130 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %144, i32 0, i32 13, !dbg !3899
  %145 = load i32, i32* %mb_size130, align 4, !dbg !3899
  %shr131 = ashr i32 %145, 3, !dbg !3900
  %sub = sub nsw i32 %shr129, %shr131, !dbg !3901
  %call132 = call i32 @ivi_process_empty_tile(%struct.AVCodecContext* %138, %struct.IVIBandDesc* %139, %struct.IVITile* %140, i32 %sub), !dbg !3902
  store i32 %call132, i32* %result, align 4, !dbg !3903
  %146 = load i32, i32* %result, align 4, !dbg !3904
  %cmp133 = icmp slt i32 %146, 0, !dbg !3906
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !3907

if.then135:                                       ; preds = %if.then125
  br label %for.end171, !dbg !3908

if.end136:                                        ; preds = %if.then125
  br label %do.body137, !dbg !3909, !llvm.loop !3910

do.body137:                                       ; preds = %if.end136
  br label %do.end138, !dbg !3911

do.end138:                                        ; preds = %do.body137
  br label %if.end168, !dbg !3914

if.else139:                                       ; preds = %if.end119
  %147 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3915
  %gb140 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %147, i32 0, i32 0, !dbg !3917
  %call141 = call i32 @ivi_dec_tile_data_size(%struct.GetBitContext* %gb140), !dbg !3918
  %148 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3919
  %data_size = getelementptr inbounds %struct.IVITile, %struct.IVITile* %148, i32 0, i32 6, !dbg !3920
  store i32 %call141, i32* %data_size, align 8, !dbg !3921
  %149 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3922
  %data_size142 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %149, i32 0, i32 6, !dbg !3924
  %150 = load i32, i32* %data_size142, align 8, !dbg !3924
  %tobool143 = icmp ne i32 %150, 0, !dbg !3922
  br i1 %tobool143, label %if.end145, label %if.then144, !dbg !3925

if.then144:                                       ; preds = %if.else139
  %151 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3926
  %152 = bitcast %struct.AVCodecContext* %151 to i8*, !dbg !3926
  call void (i8*, i32, i8*, ...) @av_log(i8* %152, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i32 0, i32 0)), !dbg !3928
  store i32 -1094995529, i32* %result, align 4, !dbg !3929
  br label %for.end171, !dbg !3930

if.end145:                                        ; preds = %if.else139
  %153 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3931
  %decode_mb_info = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %153, i32 0, i32 38, !dbg !3932
  %154 = load i32 (%struct.IVI45DecContext*, %struct.IVIBandDesc*, %struct.IVITile*, %struct.AVCodecContext*)*, i32 (%struct.IVI45DecContext*, %struct.IVIBandDesc*, %struct.IVITile*, %struct.AVCodecContext*)** %decode_mb_info, align 8, !dbg !3932
  %155 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3933
  %156 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3934
  %157 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3935
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3936
  %call146 = call i32 %154(%struct.IVI45DecContext* %155, %struct.IVIBandDesc* %156, %struct.IVITile* %157, %struct.AVCodecContext* %158), !dbg !3931
  store i32 %call146, i32* %result, align 4, !dbg !3937
  %159 = load i32, i32* %result, align 4, !dbg !3938
  %cmp147 = icmp slt i32 %159, 0, !dbg !3940
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !3941

if.then149:                                       ; preds = %if.end145
  br label %for.end171, !dbg !3942

if.end150:                                        ; preds = %if.end145
  %160 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3943
  %gb151 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %160, i32 0, i32 0, !dbg !3944
  %161 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3945
  %162 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3946
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3947
  %call152 = call i32 @ivi_decode_blocks(%struct.GetBitContext* %gb151, %struct.IVIBandDesc* %161, %struct.IVITile* %162, %struct.AVCodecContext* %163), !dbg !3948
  store i32 %call152, i32* %result, align 4, !dbg !3949
  %164 = load i32, i32* %result, align 4, !dbg !3950
  %cmp153 = icmp slt i32 %164, 0, !dbg !3952
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !3953

if.then155:                                       ; preds = %if.end150
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3954
  %166 = bitcast %struct.AVCodecContext* %165 to i8*, !dbg !3954
  call void (i8*, i32, i8*, ...) @av_log(i8* %166, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i32 0, i32 0)), !dbg !3956
  br label %for.end171, !dbg !3957

if.end156:                                        ; preds = %if.end150
  %167 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !3958
  %gb157 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %167, i32 0, i32 0, !dbg !3960
  %call158 = call i32 @get_bits_count(%struct.GetBitContext* %gb157), !dbg !3961
  %168 = load i32, i32* %pos, align 4, !dbg !3962
  %sub159 = sub nsw i32 %call158, %168, !dbg !3963
  %shr160 = ashr i32 %sub159, 3, !dbg !3964
  %169 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3965
  %data_size161 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %169, i32 0, i32 6, !dbg !3966
  %170 = load i32, i32* %data_size161, align 8, !dbg !3966
  %cmp162 = icmp ne i32 %shr160, %170, !dbg !3967
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !3968

if.then164:                                       ; preds = %if.end156
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3969
  %172 = bitcast %struct.AVCodecContext* %171 to i8*, !dbg !3969
  call void (i8*, i32, i8*, ...) @av_log(i8* %172, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i32 0, i32 0)), !dbg !3971
  store i32 -1094995529, i32* %result, align 4, !dbg !3972
  br label %for.end171, !dbg !3973

if.end165:                                        ; preds = %if.end156
  %173 = load %struct.IVITile*, %struct.IVITile** %tile, align 8, !dbg !3974
  %data_size166 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %173, i32 0, i32 6, !dbg !3975
  %174 = load i32, i32* %data_size166, align 8, !dbg !3975
  %shl = shl i32 %174, 3, !dbg !3976
  %175 = load i32, i32* %pos, align 4, !dbg !3977
  %add167 = add nsw i32 %175, %shl, !dbg !3977
  store i32 %add167, i32* %pos, align 4, !dbg !3977
  br label %if.end168

if.end168:                                        ; preds = %if.end165, %do.end138
  br label %for.inc169, !dbg !3978

for.inc169:                                       ; preds = %if.end168
  %176 = load i32, i32* %t, align 4, !dbg !3979
  %inc170 = add nsw i32 %176, 1, !dbg !3979
  store i32 %inc170, i32* %t, align 4, !dbg !3979
  br label %for.cond107, !dbg !3981, !llvm.loop !3982

for.end171:                                       ; preds = %if.then164, %if.then155, %if.then149, %if.then144, %if.then135, %for.cond107
  %177 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3984
  %num_corr172 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %177, i32 0, i32 24, !dbg !3986
  %178 = load i32, i32* %num_corr172, align 8, !dbg !3986
  %sub173 = sub nsw i32 %178, 1, !dbg !3987
  store i32 %sub173, i32* %i, align 4, !dbg !3988
  br label %for.cond174, !dbg !3989

for.cond174:                                      ; preds = %for.inc267, %for.end171
  %179 = load i32, i32* %i, align 4, !dbg !3990
  %cmp175 = icmp sge i32 %179, 0, !dbg !3993
  br i1 %cmp175, label %for.body177, label %for.end268, !dbg !3994

for.body177:                                      ; preds = %for.cond174
  %180 = load i32, i32* %i, align 4, !dbg !3995
  %mul178 = mul nsw i32 %180, 2, !dbg !3997
  %idxprom179 = sext i32 %mul178 to i64, !dbg !3998
  %181 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !3998
  %corr180 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %181, i32 0, i32 25, !dbg !3999
  %arrayidx181 = getelementptr inbounds [122 x i8], [122 x i8]* %corr180, i64 0, i64 %idxprom179, !dbg !3998
  %182 = load i8, i8* %arrayidx181, align 1, !dbg !3998
  %conv182 = zext i8 %182 to i32, !dbg !3998
  store i32 %conv182, i32* %idx1, align 4, !dbg !4000
  %183 = load i32, i32* %i, align 4, !dbg !4001
  %mul183 = mul nsw i32 %183, 2, !dbg !4002
  %add184 = add nsw i32 %mul183, 1, !dbg !4003
  %idxprom185 = sext i32 %add184 to i64, !dbg !4004
  %184 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4004
  %corr186 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %184, i32 0, i32 25, !dbg !4005
  %arrayidx187 = getelementptr inbounds [122 x i8], [122 x i8]* %corr186, i64 0, i64 %idxprom185, !dbg !4004
  %185 = load i8, i8* %arrayidx187, align 1, !dbg !4004
  %conv188 = zext i8 %185 to i32, !dbg !4004
  store i32 %conv188, i32* %idx2, align 4, !dbg !4006
  br label %do.body189, !dbg !4007, !llvm.loop !4008

do.body189:                                       ; preds = %for.body177
  call void @llvm.dbg.declare(metadata i8* %SWAP_tmp190, metadata !4009, metadata !984), !dbg !4011
  %186 = load i32, i32* %idx2, align 4, !dbg !4012
  %idxprom191 = sext i32 %186 to i64, !dbg !4014
  %187 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4014
  %rv_map192 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %187, i32 0, i32 27, !dbg !4015
  %188 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map192, align 8, !dbg !4015
  %runtab193 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %188, i32 0, i32 2, !dbg !4016
  %arrayidx194 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab193, i64 0, i64 %idxprom191, !dbg !4014
  %189 = load i8, i8* %arrayidx194, align 1, !dbg !4014
  store i8 %189, i8* %SWAP_tmp190, align 1, !dbg !4017
  %190 = load i32, i32* %idx1, align 4, !dbg !4018
  %idxprom195 = sext i32 %190 to i64, !dbg !4019
  %191 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4019
  %rv_map196 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %191, i32 0, i32 27, !dbg !4020
  %192 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map196, align 8, !dbg !4020
  %runtab197 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %192, i32 0, i32 2, !dbg !4021
  %arrayidx198 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab197, i64 0, i64 %idxprom195, !dbg !4019
  %193 = load i8, i8* %arrayidx198, align 1, !dbg !4019
  %194 = load i32, i32* %idx2, align 4, !dbg !4022
  %idxprom199 = sext i32 %194 to i64, !dbg !4023
  %195 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4023
  %rv_map200 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %195, i32 0, i32 27, !dbg !4024
  %196 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map200, align 8, !dbg !4024
  %runtab201 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %196, i32 0, i32 2, !dbg !4025
  %arrayidx202 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab201, i64 0, i64 %idxprom199, !dbg !4023
  store i8 %193, i8* %arrayidx202, align 1, !dbg !4026
  %197 = load i8, i8* %SWAP_tmp190, align 1, !dbg !4027
  %198 = load i32, i32* %idx1, align 4, !dbg !4028
  %idxprom203 = sext i32 %198 to i64, !dbg !4029
  %199 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4029
  %rv_map204 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %199, i32 0, i32 27, !dbg !4030
  %200 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map204, align 8, !dbg !4030
  %runtab205 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %200, i32 0, i32 2, !dbg !4031
  %arrayidx206 = getelementptr inbounds [256 x i8], [256 x i8]* %runtab205, i64 0, i64 %idxprom203, !dbg !4029
  store i8 %197, i8* %arrayidx206, align 1, !dbg !4032
  br label %do.end207, !dbg !4033

do.end207:                                        ; preds = %do.body189
  br label %do.body208, !dbg !4034, !llvm.loop !4035

do.body208:                                       ; preds = %do.end207
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp209, metadata !4036, metadata !984), !dbg !4038
  %201 = load i32, i32* %idx2, align 4, !dbg !4039
  %idxprom210 = sext i32 %201 to i64, !dbg !4041
  %202 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4041
  %rv_map211 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %202, i32 0, i32 27, !dbg !4042
  %203 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map211, align 8, !dbg !4042
  %valtab212 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %203, i32 0, i32 3, !dbg !4043
  %arrayidx213 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab212, i64 0, i64 %idxprom210, !dbg !4041
  %204 = load i8, i8* %arrayidx213, align 1, !dbg !4041
  %conv214 = sext i8 %204 to i16, !dbg !4041
  store i16 %conv214, i16* %SWAP_tmp209, align 2, !dbg !4044
  %205 = load i32, i32* %idx1, align 4, !dbg !4045
  %idxprom215 = sext i32 %205 to i64, !dbg !4046
  %206 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4046
  %rv_map216 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %206, i32 0, i32 27, !dbg !4047
  %207 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map216, align 8, !dbg !4047
  %valtab217 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %207, i32 0, i32 3, !dbg !4048
  %arrayidx218 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab217, i64 0, i64 %idxprom215, !dbg !4046
  %208 = load i8, i8* %arrayidx218, align 1, !dbg !4046
  %209 = load i32, i32* %idx2, align 4, !dbg !4049
  %idxprom219 = sext i32 %209 to i64, !dbg !4050
  %210 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4050
  %rv_map220 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %210, i32 0, i32 27, !dbg !4051
  %211 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map220, align 8, !dbg !4051
  %valtab221 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %211, i32 0, i32 3, !dbg !4052
  %arrayidx222 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab221, i64 0, i64 %idxprom219, !dbg !4050
  store i8 %208, i8* %arrayidx222, align 1, !dbg !4053
  %212 = load i16, i16* %SWAP_tmp209, align 2, !dbg !4054
  %conv223 = trunc i16 %212 to i8, !dbg !4054
  %213 = load i32, i32* %idx1, align 4, !dbg !4055
  %idxprom224 = sext i32 %213 to i64, !dbg !4056
  %214 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4056
  %rv_map225 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %214, i32 0, i32 27, !dbg !4057
  %215 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map225, align 8, !dbg !4057
  %valtab226 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %215, i32 0, i32 3, !dbg !4058
  %arrayidx227 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab226, i64 0, i64 %idxprom224, !dbg !4056
  store i8 %conv223, i8* %arrayidx227, align 1, !dbg !4059
  br label %do.end228, !dbg !4060

do.end228:                                        ; preds = %do.body208
  %216 = load i32, i32* %idx1, align 4, !dbg !4061
  %217 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4063
  %rv_map229 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %217, i32 0, i32 27, !dbg !4064
  %218 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map229, align 8, !dbg !4064
  %eob_sym230 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %218, i32 0, i32 0, !dbg !4065
  %219 = load i8, i8* %eob_sym230, align 1, !dbg !4065
  %conv231 = zext i8 %219 to i32, !dbg !4063
  %cmp232 = icmp eq i32 %216, %conv231, !dbg !4066
  br i1 %cmp232, label %if.then240, label %lor.lhs.false234, !dbg !4067

lor.lhs.false234:                                 ; preds = %do.end228
  %220 = load i32, i32* %idx2, align 4, !dbg !4068
  %221 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4070
  %rv_map235 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %221, i32 0, i32 27, !dbg !4071
  %222 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map235, align 8, !dbg !4071
  %eob_sym236 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %222, i32 0, i32 0, !dbg !4072
  %223 = load i8, i8* %eob_sym236, align 1, !dbg !4072
  %conv237 = zext i8 %223 to i32, !dbg !4070
  %cmp238 = icmp eq i32 %220, %conv237, !dbg !4073
  br i1 %cmp238, label %if.then240, label %if.end247, !dbg !4074

if.then240:                                       ; preds = %lor.lhs.false234, %do.end228
  %224 = load i32, i32* %idx1, align 4, !dbg !4075
  %225 = load i32, i32* %idx2, align 4, !dbg !4076
  %xor241 = xor i32 %224, %225, !dbg !4077
  %226 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4078
  %rv_map242 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %226, i32 0, i32 27, !dbg !4079
  %227 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map242, align 8, !dbg !4079
  %eob_sym243 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %227, i32 0, i32 0, !dbg !4080
  %228 = load i8, i8* %eob_sym243, align 1, !dbg !4081
  %conv244 = zext i8 %228 to i32, !dbg !4081
  %xor245 = xor i32 %conv244, %xor241, !dbg !4081
  %conv246 = trunc i32 %xor245 to i8, !dbg !4081
  store i8 %conv246, i8* %eob_sym243, align 1, !dbg !4081
  br label %if.end247, !dbg !4078

if.end247:                                        ; preds = %if.then240, %lor.lhs.false234
  %229 = load i32, i32* %idx1, align 4, !dbg !4082
  %230 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4084
  %rv_map248 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %230, i32 0, i32 27, !dbg !4085
  %231 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map248, align 8, !dbg !4085
  %esc_sym249 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %231, i32 0, i32 1, !dbg !4086
  %232 = load i8, i8* %esc_sym249, align 1, !dbg !4086
  %conv250 = zext i8 %232 to i32, !dbg !4084
  %cmp251 = icmp eq i32 %229, %conv250, !dbg !4087
  br i1 %cmp251, label %if.then259, label %lor.lhs.false253, !dbg !4088

lor.lhs.false253:                                 ; preds = %if.end247
  %233 = load i32, i32* %idx2, align 4, !dbg !4089
  %234 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4091
  %rv_map254 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %234, i32 0, i32 27, !dbg !4092
  %235 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map254, align 8, !dbg !4092
  %esc_sym255 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %235, i32 0, i32 1, !dbg !4093
  %236 = load i8, i8* %esc_sym255, align 1, !dbg !4093
  %conv256 = zext i8 %236 to i32, !dbg !4091
  %cmp257 = icmp eq i32 %233, %conv256, !dbg !4094
  br i1 %cmp257, label %if.then259, label %if.end266, !dbg !4095

if.then259:                                       ; preds = %lor.lhs.false253, %if.end247
  %237 = load i32, i32* %idx1, align 4, !dbg !4096
  %238 = load i32, i32* %idx2, align 4, !dbg !4097
  %xor260 = xor i32 %237, %238, !dbg !4098
  %239 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4099
  %rv_map261 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %239, i32 0, i32 27, !dbg !4100
  %240 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map261, align 8, !dbg !4100
  %esc_sym262 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %240, i32 0, i32 1, !dbg !4101
  %241 = load i8, i8* %esc_sym262, align 1, !dbg !4102
  %conv263 = zext i8 %241 to i32, !dbg !4102
  %xor264 = xor i32 %conv263, %xor260, !dbg !4102
  %conv265 = trunc i32 %xor264 to i8, !dbg !4102
  store i8 %conv265, i8* %esc_sym262, align 1, !dbg !4102
  br label %if.end266, !dbg !4099

if.end266:                                        ; preds = %if.then259, %lor.lhs.false253
  br label %for.inc267, !dbg !4103

for.inc267:                                       ; preds = %if.end266
  %242 = load i32, i32* %i, align 4, !dbg !4104
  %dec = add nsw i32 %242, -1, !dbg !4104
  store i32 %dec, i32* %i, align 4, !dbg !4104
  br label %for.cond174, !dbg !4106, !llvm.loop !4107

for.end268:                                       ; preds = %for.cond174
  %243 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx.addr, align 8, !dbg !4109
  %gb269 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %243, i32 0, i32 0, !dbg !4110
  %call270 = call i8* @align_get_bits(%struct.GetBitContext* %gb269), !dbg !4111
  %244 = load i32, i32* %result, align 4, !dbg !4112
  store i32 %244, i32* %retval, align 4, !dbg !4113
  br label %return, !dbg !4113

return:                                           ; preds = %for.end268, %if.then116, %if.then24, %if.then21, %if.then
  %245 = load i32, i32* %retval, align 4, !dbg !4114
  ret i32 %245, !dbg !4114
}

declare i32 @ff_set_dimensions(%struct.AVCodecContext*, i32, i32) #4

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #4

declare void @ff_ivi_recompose_haar(%struct.IVIPlaneDesc*, i8*, i64) #4

declare void @ff_ivi_recompose53(%struct.IVIPlaneDesc*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal void @ivi_output_plane(%struct.IVIPlaneDesc* %plane, i8* %dst, i64 %dst_pitch) #2 !dbg !4115 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4118, metadata !984), !dbg !4123
  %plane.addr = alloca %struct.IVIPlaneDesc*, align 8
  %dst.addr = alloca i8*, align 8
  %dst_pitch.addr = alloca i64, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %src = alloca i16*, align 8
  %pitch = alloca i64, align 8
  %m = alloca i32, align 4
  %w = alloca i32, align 4
  %t = alloca i32, align 4
  store %struct.IVIPlaneDesc* %plane, %struct.IVIPlaneDesc** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIPlaneDesc** %plane.addr, metadata !4131, metadata !984), !dbg !4132
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4133, metadata !984), !dbg !4134
  store i64 %dst_pitch, i64* %dst_pitch.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_pitch.addr, metadata !4135, metadata !984), !dbg !4136
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4137, metadata !984), !dbg !4138
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4139, metadata !984), !dbg !4140
  call void @llvm.dbg.declare(metadata i16** %src, metadata !4141, metadata !984), !dbg !4144
  %0 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %plane.addr, align 8, !dbg !4145
  %bands = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %0, i32 0, i32 3, !dbg !4146
  %1 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands, align 8, !dbg !4146
  %arrayidx = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %1, i64 0, !dbg !4145
  %buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx, i32 0, i32 7, !dbg !4147
  %2 = load i16*, i16** %buf, align 8, !dbg !4147
  store i16* %2, i16** %src, align 8, !dbg !4144
  call void @llvm.dbg.declare(metadata i64* %pitch, metadata !4148, metadata !984), !dbg !4149
  %3 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %plane.addr, align 8, !dbg !4150
  %bands1 = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %3, i32 0, i32 3, !dbg !4151
  %4 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %bands1, align 8, !dbg !4151
  %arrayidx2 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %4, i64 0, !dbg !4150
  %pitch3 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %arrayidx2, i32 0, i32 11, !dbg !4152
  %5 = load i64, i64* %pitch3, align 8, !dbg !4152
  store i64 %5, i64* %pitch, align 8, !dbg !4149
  %6 = load i16*, i16** %src, align 8, !dbg !4153
  %tobool = icmp ne i16* %6, null, !dbg !4153
  br i1 %tobool, label %if.end, label %if.then, !dbg !4155

if.then:                                          ; preds = %entry
  br label %for.end34, !dbg !4156

if.end:                                           ; preds = %entry
  store i32 0, i32* %y, align 4, !dbg !4157
  br label %for.cond, !dbg !4158

for.cond:                                         ; preds = %for.inc32, %if.end
  %7 = load i32, i32* %y, align 4, !dbg !4159
  %8 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %plane.addr, align 8, !dbg !4161
  %height = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %8, i32 0, i32 1, !dbg !4162
  %9 = load i16, i16* %height, align 2, !dbg !4162
  %conv = zext i16 %9 to i32, !dbg !4161
  %cmp = icmp slt i32 %7, %conv, !dbg !4163
  br i1 %cmp, label %for.body, label %for.end34, !dbg !4164

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4165, metadata !984), !dbg !4166
  store i32 0, i32* %m, align 4, !dbg !4166
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4167, metadata !984), !dbg !4168
  %10 = load %struct.IVIPlaneDesc*, %struct.IVIPlaneDesc** %plane.addr, align 8, !dbg !4169
  %width = getelementptr inbounds %struct.IVIPlaneDesc, %struct.IVIPlaneDesc* %10, i32 0, i32 0, !dbg !4170
  %11 = load i16, i16* %width, align 8, !dbg !4170
  %conv5 = zext i16 %11 to i32, !dbg !4169
  store i32 %conv5, i32* %w, align 4, !dbg !4168
  store i32 0, i32* %x, align 4, !dbg !4171
  br label %for.cond6, !dbg !4173

for.cond6:                                        ; preds = %for.inc, %for.body
  %12 = load i32, i32* %x, align 4, !dbg !4174
  %13 = load i32, i32* %w, align 4, !dbg !4177
  %cmp7 = icmp slt i32 %12, %13, !dbg !4178
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !4179

for.body9:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4180, metadata !984), !dbg !4182
  %14 = load i32, i32* %x, align 4, !dbg !4183
  %idxprom = sext i32 %14 to i64, !dbg !4184
  %15 = load i16*, i16** %src, align 8, !dbg !4184
  %arrayidx10 = getelementptr inbounds i16, i16* %15, i64 %idxprom, !dbg !4184
  %16 = load i16, i16* %arrayidx10, align 2, !dbg !4184
  %conv11 = sext i16 %16 to i32, !dbg !4184
  %add = add nsw i32 %conv11, 128, !dbg !4185
  store i32 %add, i32* %t, align 4, !dbg !4182
  %17 = load i32, i32* %t, align 4, !dbg !4186
  %conv12 = trunc i32 %17 to i8, !dbg !4186
  %18 = load i32, i32* %x, align 4, !dbg !4187
  %idxprom13 = sext i32 %18 to i64, !dbg !4188
  %19 = load i8*, i8** %dst.addr, align 8, !dbg !4188
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %idxprom13, !dbg !4188
  store i8 %conv12, i8* %arrayidx14, align 1, !dbg !4189
  %20 = load i32, i32* %t, align 4, !dbg !4190
  %21 = load i32, i32* %m, align 4, !dbg !4191
  %or = or i32 %21, %20, !dbg !4191
  store i32 %or, i32* %m, align 4, !dbg !4191
  br label %for.inc, !dbg !4192

for.inc:                                          ; preds = %for.body9
  %22 = load i32, i32* %x, align 4, !dbg !4193
  %inc = add nsw i32 %22, 1, !dbg !4193
  store i32 %inc, i32* %x, align 4, !dbg !4193
  br label %for.cond6, !dbg !4195, !llvm.loop !4196

for.end:                                          ; preds = %for.cond6
  %23 = load i32, i32* %m, align 4, !dbg !4198
  %and = and i32 %23, -256, !dbg !4199
  %tobool15 = icmp ne i32 %and, 0, !dbg !4199
  br i1 %tobool15, label %if.then16, label %if.end30, !dbg !4200

if.then16:                                        ; preds = %for.end
  store i32 0, i32* %x, align 4, !dbg !4201
  br label %for.cond17, !dbg !4202

for.cond17:                                       ; preds = %for.inc27, %if.then16
  %24 = load i32, i32* %x, align 4, !dbg !4203
  %25 = load i32, i32* %w, align 4, !dbg !4205
  %cmp18 = icmp slt i32 %24, %25, !dbg !4206
  br i1 %cmp18, label %for.body20, label %for.end29, !dbg !4207

for.body20:                                       ; preds = %for.cond17
  %26 = load i32, i32* %x, align 4, !dbg !4208
  %idxprom21 = sext i32 %26 to i64, !dbg !4209
  %27 = load i16*, i16** %src, align 8, !dbg !4209
  %arrayidx22 = getelementptr inbounds i16, i16* %27, i64 %idxprom21, !dbg !4209
  %28 = load i16, i16* %arrayidx22, align 2, !dbg !4209
  %conv23 = sext i16 %28 to i32, !dbg !4209
  %add24 = add nsw i32 %conv23, 128, !dbg !4210
  store i32 %add24, i32* %a.addr.i, align 4, !dbg !4211
  %29 = load i32, i32* %a.addr.i, align 4, !dbg !4212
  %and.i = and i32 %29, -256, !dbg !4214
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !4214
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !4215

if.then.i:                                        ; preds = %for.body20
  %30 = load i32, i32* %a.addr.i, align 4, !dbg !4216
  %neg.i = xor i32 %30, -1, !dbg !4218
  %shr.i = ashr i32 %neg.i, 31, !dbg !4219
  %conv.i = trunc i32 %shr.i to i8, !dbg !4220
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !4221
  br label %av_clip_uint8_c.exit, !dbg !4221

if.else.i:                                        ; preds = %for.body20
  %31 = load i32, i32* %a.addr.i, align 4, !dbg !4222
  %conv1.i = trunc i32 %31 to i8, !dbg !4222
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !4223
  br label %av_clip_uint8_c.exit, !dbg !4223

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %32 = load i8, i8* %retval.i, align 1, !dbg !4224
  %33 = load i32, i32* %x, align 4, !dbg !4225
  %idxprom25 = sext i32 %33 to i64, !dbg !4226
  %34 = load i8*, i8** %dst.addr, align 8, !dbg !4226
  %arrayidx26 = getelementptr inbounds i8, i8* %34, i64 %idxprom25, !dbg !4226
  store i8 %32, i8* %arrayidx26, align 1, !dbg !4227
  br label %for.inc27, !dbg !4226

for.inc27:                                        ; preds = %av_clip_uint8_c.exit
  %35 = load i32, i32* %x, align 4, !dbg !4228
  %inc28 = add nsw i32 %35, 1, !dbg !4228
  store i32 %inc28, i32* %x, align 4, !dbg !4228
  br label %for.cond17, !dbg !4230, !llvm.loop !4231

for.end29:                                        ; preds = %for.cond17
  br label %if.end30, !dbg !4233

if.end30:                                         ; preds = %for.end29, %for.end
  %36 = load i64, i64* %pitch, align 8, !dbg !4235
  %37 = load i16*, i16** %src, align 8, !dbg !4236
  %add.ptr = getelementptr inbounds i16, i16* %37, i64 %36, !dbg !4236
  store i16* %add.ptr, i16** %src, align 8, !dbg !4236
  %38 = load i64, i64* %dst_pitch.addr, align 8, !dbg !4237
  %39 = load i8*, i8** %dst.addr, align 8, !dbg !4238
  %add.ptr31 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !4238
  store i8* %add.ptr31, i8** %dst.addr, align 8, !dbg !4238
  br label %for.inc32, !dbg !4239

for.inc32:                                        ; preds = %if.end30
  %40 = load i32, i32* %y, align 4, !dbg !4240
  %inc33 = add nsw i32 %40, 1, !dbg !4240
  store i32 %inc33, i32* %y, align 4, !dbg !4240
  br label %for.cond, !dbg !4242, !llvm.loop !4243

for.end34:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !4245
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #3 !dbg !4246 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4249, metadata !984), !dbg !4250
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4251
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !4252
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !4252
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4253
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !4254
  %sub = sub nsw i32 %1, %call, !dbg !4255
  ret i32 %sub, !dbg !4256
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #3 !dbg !4257 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4262, metadata !984), !dbg !4263
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4264
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4265
  %1 = load i32, i32* %index, align 8, !dbg !4265
  ret i32 %1, !dbg !4266
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #3 !dbg !4267 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4270, metadata !984), !dbg !4274
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4276, metadata !984), !dbg !4277
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4278, metadata !984), !dbg !4279
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4280, metadata !984), !dbg !4281
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4282, metadata !984), !dbg !4283
  %0 = load i32, i32* %n.addr, align 4, !dbg !4284
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4285
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !4286
  %2 = load i32, i32* %index, align 8, !dbg !4286
  %sub = sub nsw i32 0, %2, !dbg !4287
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4288
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !4289
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4289
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4290
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !4291
  %6 = load i32, i32* %index1, align 8, !dbg !4291
  %sub2 = sub nsw i32 %4, %6, !dbg !4292
  store i32 %0, i32* %a.addr.i, align 4, !dbg !4293
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !4293
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !4293
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !4294
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !4296
  %cmp.i = icmp slt i32 %7, %8, !dbg !4297
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4298

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !4299
  store i32 %9, i32* %retval.i, align 4, !dbg !4301
  br label %av_clip_c.exit, !dbg !4301

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !4302
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !4304
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !4305
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4306

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !4307
  store i32 %12, i32* %retval.i, align 4, !dbg !4309
  br label %av_clip_c.exit, !dbg !4309

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !4310
  store i32 %13, i32* %retval.i, align 4, !dbg !4311
  br label %av_clip_c.exit, !dbg !4311

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !4312
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4313
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4314
  %16 = load i32, i32* %index3, align 8, !dbg !4315
  %add = add nsw i32 %16, %14, !dbg !4315
  store i32 %add, i32* %index3, align 8, !dbg !4315
  ret void, !dbg !4316
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits_long(%struct.GetBitContext* %s, i32 %n) #3 !dbg !4317 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4318, metadata !984), !dbg !4319
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4320, metadata !984), !dbg !4321
  %0 = load i32, i32* %n.addr, align 4, !dbg !4322
  %cmp = icmp sle i32 %0, 25, !dbg !4324
  br i1 %cmp, label %if.then, label %if.else, !dbg !4325

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4326
  %2 = load i32, i32* %n.addr, align 4, !dbg !4328
  %call = call i32 @show_bits(%struct.GetBitContext* %1, i32 %2), !dbg !4329
  store i32 %call, i32* %retval, align 4, !dbg !4330
  br label %return, !dbg !4330

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !4331, metadata !984), !dbg !4333
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4334
  %4 = bitcast %struct.GetBitContext* %gb to i8*, !dbg !4335
  %5 = bitcast %struct.GetBitContext* %3 to i8*, !dbg !4335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 32, i32 8, i1 false), !dbg !4335
  %6 = load i32, i32* %n.addr, align 4, !dbg !4336
  %call1 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 %6), !dbg !4337
  store i32 %call1, i32* %retval, align 4, !dbg !4338
  br label %return, !dbg !4338

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4339
  ret i32 %7, !dbg !4339
}

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_ivi_decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !4340 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ctx = alloca %struct.IVI45DecContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4341, metadata !984), !dbg !4342
  call void @llvm.dbg.declare(metadata %struct.IVI45DecContext** %ctx, metadata !4343, metadata !984), !dbg !4344
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4345
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !4346
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4346
  %2 = bitcast i8* %1 to %struct.IVI45DecContext*, !dbg !4345
  store %struct.IVI45DecContext* %2, %struct.IVI45DecContext** %ctx, align 8, !dbg !4344
  %3 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !4347
  %planes = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %3, i32 0, i32 14, !dbg !4348
  %arrayidx = getelementptr inbounds [3 x %struct.IVIPlaneDesc], [3 x %struct.IVIPlaneDesc]* %planes, i64 0, i64 0, !dbg !4347
  call void @ivi_free_buffers(%struct.IVIPlaneDesc* %arrayidx), !dbg !4349
  %4 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !4350
  %mb_vlc = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %4, i32 0, i32 20, !dbg !4352
  %cust_tab = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %mb_vlc, i32 0, i32 3, !dbg !4353
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %cust_tab, i32 0, i32 1, !dbg !4354
  %5 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !4354
  %tobool = icmp ne [2 x i16]* %5, null, !dbg !4350
  br i1 %tobool, label %if.then, label %if.end, !dbg !4355

if.then:                                          ; preds = %entry
  %6 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !4356
  %mb_vlc1 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %6, i32 0, i32 20, !dbg !4357
  %cust_tab2 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %mb_vlc1, i32 0, i32 3, !dbg !4358
  call void @ff_free_vlc(%struct.VLC* %cust_tab2), !dbg !4359
  br label %if.end, !dbg !4359

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !4360
  %blk_vlc = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %7, i32 0, i32 21, !dbg !4362
  %cust_tab3 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc, i32 0, i32 3, !dbg !4363
  %table4 = getelementptr inbounds %struct.VLC, %struct.VLC* %cust_tab3, i32 0, i32 1, !dbg !4364
  %8 = load [2 x i16]*, [2 x i16]** %table4, align 8, !dbg !4364
  %tobool5 = icmp ne [2 x i16]* %8, null, !dbg !4360
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !4365

if.then6:                                         ; preds = %if.end
  %9 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !4366
  %blk_vlc7 = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %9, i32 0, i32 21, !dbg !4367
  %cust_tab8 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc7, i32 0, i32 3, !dbg !4368
  call void @ff_free_vlc(%struct.VLC* %cust_tab8), !dbg !4369
  br label %if.end9, !dbg !4369

if.end9:                                          ; preds = %if.then6, %if.end
  %10 = load %struct.IVI45DecContext*, %struct.IVI45DecContext** %ctx, align 8, !dbg !4370
  %p_frame = getelementptr inbounds %struct.IVI45DecContext, %struct.IVI45DecContext* %10, i32 0, i32 44, !dbg !4371
  call void @av_frame_free(%struct.AVFrame** %p_frame), !dbg !4372
  ret i32 0, !dbg !4373
}

declare void @av_frame_free(%struct.AVFrame**) #4

; Function Attrs: nounwind uwtable
define internal zeroext i16 @inv_bits(i16 zeroext %val, i32 %nbits) #2 !dbg !4374 {
entry:
  %val.addr = alloca i16, align 2
  %nbits.addr = alloca i32, align 4
  %res = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !4377, metadata !984), !dbg !4378
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !4379, metadata !984), !dbg !4380
  call void @llvm.dbg.declare(metadata i16* %res, metadata !4381, metadata !984), !dbg !4382
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !4383
  %cmp = icmp sle i32 %0, 8, !dbg !4385
  br i1 %cmp, label %if.then, label %if.else, !dbg !4386

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %val.addr, align 2, !dbg !4387
  %idxprom = zext i16 %1 to i64, !dbg !4389
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_reverse, i64 0, i64 %idxprom, !dbg !4389
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4389
  %conv = zext i8 %2 to i32, !dbg !4389
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !4390
  %sub = sub nsw i32 8, %3, !dbg !4391
  %shr = ashr i32 %conv, %sub, !dbg !4392
  %conv1 = trunc i32 %shr to i16, !dbg !4389
  store i16 %conv1, i16* %res, align 2, !dbg !4393
  br label %if.end, !dbg !4394

if.else:                                          ; preds = %entry
  %4 = load i16, i16* %val.addr, align 2, !dbg !4395
  %conv2 = zext i16 %4 to i32, !dbg !4395
  %and = and i32 %conv2, 255, !dbg !4396
  %idxprom3 = sext i32 %and to i64, !dbg !4397
  %arrayidx4 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_reverse, i64 0, i64 %idxprom3, !dbg !4397
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !4397
  %conv5 = zext i8 %5 to i32, !dbg !4397
  %shl = shl i32 %conv5, 8, !dbg !4398
  %6 = load i16, i16* %val.addr, align 2, !dbg !4399
  %conv6 = zext i16 %6 to i32, !dbg !4399
  %shr7 = ashr i32 %conv6, 8, !dbg !4400
  %idxprom8 = sext i32 %shr7 to i64, !dbg !4401
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_reverse, i64 0, i64 %idxprom8, !dbg !4401
  %7 = load i8, i8* %arrayidx9, align 1, !dbg !4401
  %conv10 = zext i8 %7 to i32, !dbg !4402
  %add = add nsw i32 %shl, %conv10, !dbg !4403
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !4404
  %sub11 = sub nsw i32 16, %8, !dbg !4405
  %shr12 = ashr i32 %add, %sub11, !dbg !4406
  %conv13 = trunc i32 %shr12 to i16, !dbg !4407
  store i16 %conv13, i16* %res, align 2, !dbg !4408
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i16, i16* %res, align 2, !dbg !4409
  ret i16 %9, !dbg !4410
}

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #4

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @zero_extend(i32 %val, i32 %bits) #5 !dbg !4411 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !4415, metadata !984), !dbg !4416
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !4417, metadata !984), !dbg !4418
  %0 = load i32, i32* %val.addr, align 4, !dbg !4419
  %1 = load i32, i32* %bits.addr, align 4, !dbg !4420
  %conv = zext i32 %1 to i64, !dbg !4420
  %sub = sub i64 32, %conv, !dbg !4421
  %sh_prom = trunc i64 %sub to i32, !dbg !4422
  %shl = shl i32 %0, %sh_prom, !dbg !4422
  %2 = load i32, i32* %bits.addr, align 4, !dbg !4423
  %conv1 = zext i32 %2 to i64, !dbg !4423
  %sub2 = sub i64 32, %conv1, !dbg !4424
  %sh_prom3 = trunc i64 %sub2 to i32, !dbg !4425
  %shr = lshr i32 %shl, %sh_prom3, !dbg !4425
  ret i32 %shr, !dbg !4426
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #3 !dbg !4427 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4428, metadata !984), !dbg !4429
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4430, metadata !984), !dbg !4431
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !4432, metadata !984), !dbg !4433
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !4434, metadata !984), !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4436, metadata !984), !dbg !4437
  store i32 0, i32* %ret, align 4, !dbg !4437
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !4438
  %cmp = icmp sge i32 %0, 2147483135, !dbg !4440
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4441

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !4442
  %cmp1 = icmp slt i32 %1, 0, !dbg !4444
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4445

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !4446
  %tobool = icmp ne i8* %2, null, !dbg !4446
  br i1 %tobool, label %if.end, label %if.then, !dbg !4448

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !4449
  store i8* null, i8** %buffer.addr, align 8, !dbg !4451
  store i32 -1094995529, i32* %ret, align 4, !dbg !4452
  br label %if.end, !dbg !4453

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !4454
  %add = add nsw i32 %3, 7, !dbg !4455
  %shr = ashr i32 %add, 3, !dbg !4456
  store i32 %shr, i32* %buffer_size, align 4, !dbg !4457
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !4458
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4459
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !4460
  store i8* %4, i8** %buffer3, align 8, !dbg !4461
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !4462
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4463
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !4464
  store i32 %6, i32* %size_in_bits, align 4, !dbg !4465
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !4466
  %add4 = add nsw i32 %8, 8, !dbg !4467
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4468
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !4469
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !4470
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !4471
  %11 = load i32, i32* %buffer_size, align 4, !dbg !4472
  %idx.ext = sext i32 %11 to i64, !dbg !4473
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !4473
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4474
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !4475
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !4476
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4477
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !4478
  store i32 0, i32* %index, align 8, !dbg !4479
  %14 = load i32, i32* %ret, align 4, !dbg !4480
  ret i32 %14, !dbg !4481
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #3 !dbg !4482 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4485, metadata !984), !dbg !4486
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4487, metadata !984), !dbg !4488
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4489
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4490
  %1 = load i32, i32* %index1, align 8, !dbg !4490
  store i32 %1, i32* %index, align 4, !dbg !4488
  call void @llvm.dbg.declare(metadata i8* %result, metadata !4491, metadata !984), !dbg !4492
  %2 = load i32, i32* %index, align 4, !dbg !4493
  %shr = lshr i32 %2, 3, !dbg !4494
  %idxprom = zext i32 %shr to i64, !dbg !4495
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4495
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !4496
  %4 = load i8*, i8** %buffer, align 8, !dbg !4496
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !4495
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4495
  store i8 %5, i8* %result, align 1, !dbg !4492
  %6 = load i32, i32* %index, align 4, !dbg !4497
  %and = and i32 %6, 7, !dbg !4498
  %7 = load i8, i8* %result, align 1, !dbg !4499
  %conv = zext i8 %7 to i32, !dbg !4499
  %shr2 = ashr i32 %conv, %and, !dbg !4499
  %conv3 = trunc i32 %shr2 to i8, !dbg !4499
  store i8 %conv3, i8* %result, align 1, !dbg !4499
  %8 = load i8, i8* %result, align 1, !dbg !4500
  %conv4 = zext i8 %8 to i32, !dbg !4500
  %and5 = and i32 %conv4, 1, !dbg !4500
  %conv6 = trunc i32 %and5 to i8, !dbg !4500
  store i8 %conv6, i8* %result, align 1, !dbg !4500
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4501
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !4503
  %10 = load i32, i32* %index7, align 8, !dbg !4503
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4504
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !4505
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4505
  %cmp = icmp slt i32 %10, %12, !dbg !4506
  br i1 %cmp, label %if.then, label %if.end, !dbg !4507

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !4508
  %inc = add i32 %13, 1, !dbg !4508
  store i32 %inc, i32* %index, align 4, !dbg !4508
  br label %if.end, !dbg !4509

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !4510
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4511
  %index9 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4512
  store i32 %14, i32* %index9, align 8, !dbg !4513
  %16 = load i8, i8* %result, align 1, !dbg !4514
  %conv10 = zext i8 %16 to i32, !dbg !4514
  ret i32 %conv10, !dbg !4515
}

; Function Attrs: nounwind uwtable
define internal i32 @ivi_process_empty_tile(%struct.AVCodecContext* %avctx, %struct.IVIBandDesc* %band, %struct.IVITile* %tile, i32 %mv_scale) #2 !dbg !4516 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %band.addr = alloca %struct.IVIBandDesc*, align 8
  %tile.addr = alloca %struct.IVITile*, align 8
  %mv_scale.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %need_mc = alloca i32, align 4
  %mbn = alloca i32, align 4
  %blk = alloca i32, align 4
  %num_blocks = alloca i32, align 4
  %mv_x = alloca i32, align 4
  %mv_y = alloca i32, align 4
  %mc_type = alloca i32, align 4
  %offs = alloca i32, align 4
  %mb_offset = alloca i32, align 4
  %row_offset = alloca i32, align 4
  %ret = alloca i32, align 4
  %mb = alloca %struct.IVIMbInfo*, align 8
  %ref_mb = alloca %struct.IVIMbInfo*, align 8
  %src = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %mc_no_delta_func = alloca void (i16*, i16*, i64, i32)*, align 8
  %dmv_x = alloca i32, align 4
  %dmv_y = alloca i32, align 4
  %cx = alloca i32, align 4
  %cy = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4519, metadata !984), !dbg !4520
  store %struct.IVIBandDesc* %band, %struct.IVIBandDesc** %band.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band.addr, metadata !4521, metadata !984), !dbg !4522
  store %struct.IVITile* %tile, %struct.IVITile** %tile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVITile** %tile.addr, metadata !4523, metadata !984), !dbg !4524
  store i32 %mv_scale, i32* %mv_scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_scale.addr, metadata !4525, metadata !984), !dbg !4526
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4527, metadata !984), !dbg !4528
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4529, metadata !984), !dbg !4530
  call void @llvm.dbg.declare(metadata i32* %need_mc, metadata !4531, metadata !984), !dbg !4532
  call void @llvm.dbg.declare(metadata i32* %mbn, metadata !4533, metadata !984), !dbg !4534
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !4535, metadata !984), !dbg !4536
  call void @llvm.dbg.declare(metadata i32* %num_blocks, metadata !4537, metadata !984), !dbg !4538
  call void @llvm.dbg.declare(metadata i32* %mv_x, metadata !4539, metadata !984), !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %mv_y, metadata !4541, metadata !984), !dbg !4542
  call void @llvm.dbg.declare(metadata i32* %mc_type, metadata !4543, metadata !984), !dbg !4544
  call void @llvm.dbg.declare(metadata i32* %offs, metadata !4545, metadata !984), !dbg !4546
  call void @llvm.dbg.declare(metadata i32* %mb_offset, metadata !4547, metadata !984), !dbg !4548
  call void @llvm.dbg.declare(metadata i32* %row_offset, metadata !4549, metadata !984), !dbg !4550
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4551, metadata !984), !dbg !4552
  call void @llvm.dbg.declare(metadata %struct.IVIMbInfo** %mb, metadata !4553, metadata !984), !dbg !4554
  call void @llvm.dbg.declare(metadata %struct.IVIMbInfo** %ref_mb, metadata !4555, metadata !984), !dbg !4556
  call void @llvm.dbg.declare(metadata i16** %src, metadata !4557, metadata !984), !dbg !4558
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !4559, metadata !984), !dbg !4560
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i64, i32)** %mc_no_delta_func, metadata !4561, metadata !984), !dbg !4566
  %0 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4567
  %num_MBs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %0, i32 0, i32 7, !dbg !4569
  %1 = load i32, i32* %num_MBs, align 4, !dbg !4569
  %2 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4570
  %width = getelementptr inbounds %struct.IVITile, %struct.IVITile* %2, i32 0, i32 2, !dbg !4571
  %3 = load i32, i32* %width, align 8, !dbg !4571
  %4 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4572
  %mb_size = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %4, i32 0, i32 13, !dbg !4573
  %5 = load i32, i32* %mb_size, align 4, !dbg !4573
  %add = add nsw i32 %3, %5, !dbg !4574
  %sub = sub nsw i32 %add, 1, !dbg !4575
  %6 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4576
  %mb_size1 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %6, i32 0, i32 13, !dbg !4577
  %7 = load i32, i32* %mb_size1, align 4, !dbg !4577
  %div = sdiv i32 %sub, %7, !dbg !4578
  %8 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4579
  %height = getelementptr inbounds %struct.IVITile, %struct.IVITile* %8, i32 0, i32 3, !dbg !4580
  %9 = load i32, i32* %height, align 4, !dbg !4580
  %10 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4581
  %mb_size2 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %10, i32 0, i32 13, !dbg !4582
  %11 = load i32, i32* %mb_size2, align 4, !dbg !4582
  %add3 = add nsw i32 %9, %11, !dbg !4583
  %sub4 = sub nsw i32 %add3, 1, !dbg !4584
  %12 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4585
  %mb_size5 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %12, i32 0, i32 13, !dbg !4586
  %13 = load i32, i32* %mb_size5, align 4, !dbg !4586
  %div6 = sdiv i32 %sub4, %13, !dbg !4587
  %mul = mul nsw i32 %div, %div6, !dbg !4588
  %cmp = icmp ne i32 %1, %mul, !dbg !4589
  br i1 %cmp, label %if.then, label %if.end, !dbg !4590

if.then:                                          ; preds = %entry
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4591
  %15 = bitcast %struct.AVCodecContext* %14 to i8*, !dbg !4591
  %16 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4593
  %num_MBs7 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %16, i32 0, i32 7, !dbg !4594
  %17 = load i32, i32* %num_MBs7, align 4, !dbg !4594
  %18 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4595
  %width8 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %18, i32 0, i32 2, !dbg !4596
  %19 = load i32, i32* %width8, align 8, !dbg !4596
  %20 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4597
  %mb_size9 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %20, i32 0, i32 13, !dbg !4598
  %21 = load i32, i32* %mb_size9, align 4, !dbg !4598
  %add10 = add nsw i32 %19, %21, !dbg !4599
  %sub11 = sub nsw i32 %add10, 1, !dbg !4600
  %22 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4601
  %mb_size12 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %22, i32 0, i32 13, !dbg !4602
  %23 = load i32, i32* %mb_size12, align 4, !dbg !4602
  %div13 = sdiv i32 %sub11, %23, !dbg !4603
  %24 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4604
  %height14 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %24, i32 0, i32 3, !dbg !4605
  %25 = load i32, i32* %height14, align 4, !dbg !4605
  %26 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4606
  %mb_size15 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %26, i32 0, i32 13, !dbg !4607
  %27 = load i32, i32* %mb_size15, align 4, !dbg !4607
  %add16 = add nsw i32 %25, %27, !dbg !4608
  %sub17 = sub nsw i32 %add16, 1, !dbg !4609
  %28 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4610
  %mb_size18 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %28, i32 0, i32 13, !dbg !4611
  %29 = load i32, i32* %mb_size18, align 4, !dbg !4611
  %div19 = sdiv i32 %sub17, %29, !dbg !4612
  %mul20 = mul nsw i32 %div13, %div19, !dbg !4613
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 16, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.20, i32 0, i32 0), i32 %17, i32 %mul20), !dbg !4614
  store i32 -1094995529, i32* %retval, align 4, !dbg !4615
  br label %return, !dbg !4615

if.end:                                           ; preds = %entry
  %30 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4616
  %ypos = getelementptr inbounds %struct.IVITile, %struct.IVITile* %30, i32 0, i32 1, !dbg !4617
  %31 = load i32, i32* %ypos, align 4, !dbg !4617
  %conv = sext i32 %31 to i64, !dbg !4616
  %32 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4618
  %pitch = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %32, i32 0, i32 11, !dbg !4619
  %33 = load i64, i64* %pitch, align 8, !dbg !4619
  %mul21 = mul nsw i64 %conv, %33, !dbg !4620
  %34 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4621
  %xpos = getelementptr inbounds %struct.IVITile, %struct.IVITile* %34, i32 0, i32 0, !dbg !4622
  %35 = load i32, i32* %xpos, align 8, !dbg !4622
  %conv22 = sext i32 %35 to i64, !dbg !4621
  %add23 = add nsw i64 %mul21, %conv22, !dbg !4623
  %conv24 = trunc i64 %add23 to i32, !dbg !4616
  store i32 %conv24, i32* %offs, align 4, !dbg !4624
  %36 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4625
  %mbs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %36, i32 0, i32 8, !dbg !4626
  %37 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mbs, align 8, !dbg !4626
  store %struct.IVIMbInfo* %37, %struct.IVIMbInfo** %mb, align 8, !dbg !4627
  %38 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4628
  %ref_mbs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %38, i32 0, i32 9, !dbg !4629
  %39 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mbs, align 8, !dbg !4629
  store %struct.IVIMbInfo* %39, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4630
  %40 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4631
  %mb_size25 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %40, i32 0, i32 13, !dbg !4632
  %41 = load i32, i32* %mb_size25, align 4, !dbg !4632
  %conv26 = sext i32 %41 to i64, !dbg !4631
  %42 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4633
  %pitch27 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %42, i32 0, i32 11, !dbg !4634
  %43 = load i64, i64* %pitch27, align 8, !dbg !4634
  %mul28 = mul nsw i64 %conv26, %43, !dbg !4635
  %conv29 = trunc i64 %mul28 to i32, !dbg !4631
  store i32 %conv29, i32* %row_offset, align 4, !dbg !4636
  store i32 0, i32* %need_mc, align 4, !dbg !4637
  %44 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4638
  %ypos30 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %44, i32 0, i32 1, !dbg !4640
  %45 = load i32, i32* %ypos30, align 4, !dbg !4640
  store i32 %45, i32* %y, align 4, !dbg !4641
  br label %for.cond, !dbg !4642

for.cond:                                         ; preds = %for.inc144, %if.end
  %46 = load i32, i32* %y, align 4, !dbg !4643
  %47 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4646
  %ypos31 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %47, i32 0, i32 1, !dbg !4647
  %48 = load i32, i32* %ypos31, align 4, !dbg !4647
  %49 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4648
  %height32 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %49, i32 0, i32 3, !dbg !4649
  %50 = load i32, i32* %height32, align 4, !dbg !4649
  %add33 = add nsw i32 %48, %50, !dbg !4650
  %cmp34 = icmp slt i32 %46, %add33, !dbg !4651
  br i1 %cmp34, label %for.body, label %for.end147, !dbg !4652

for.body:                                         ; preds = %for.cond
  %51 = load i32, i32* %offs, align 4, !dbg !4653
  store i32 %51, i32* %mb_offset, align 4, !dbg !4655
  %52 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4656
  %xpos36 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %52, i32 0, i32 0, !dbg !4658
  %53 = load i32, i32* %xpos36, align 8, !dbg !4658
  store i32 %53, i32* %x, align 4, !dbg !4659
  br label %for.cond37, !dbg !4660

for.cond37:                                       ; preds = %for.inc, %for.body
  %54 = load i32, i32* %x, align 4, !dbg !4661
  %55 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4664
  %xpos38 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %55, i32 0, i32 0, !dbg !4665
  %56 = load i32, i32* %xpos38, align 8, !dbg !4665
  %57 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4666
  %width39 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %57, i32 0, i32 2, !dbg !4667
  %58 = load i32, i32* %width39, align 8, !dbg !4667
  %add40 = add nsw i32 %56, %58, !dbg !4668
  %cmp41 = icmp slt i32 %54, %add40, !dbg !4669
  br i1 %cmp41, label %for.body43, label %for.end, !dbg !4670

for.body43:                                       ; preds = %for.cond37
  %59 = load i32, i32* %x, align 4, !dbg !4671
  %conv44 = trunc i32 %59 to i16, !dbg !4671
  %60 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4673
  %xpos45 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %60, i32 0, i32 0, !dbg !4674
  store i16 %conv44, i16* %xpos45, align 4, !dbg !4675
  %61 = load i32, i32* %y, align 4, !dbg !4676
  %conv46 = trunc i32 %61 to i16, !dbg !4676
  %62 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4677
  %ypos47 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %62, i32 0, i32 1, !dbg !4678
  store i16 %conv46, i16* %ypos47, align 2, !dbg !4679
  %63 = load i32, i32* %mb_offset, align 4, !dbg !4680
  %64 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4681
  %buf_offs = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %64, i32 0, i32 2, !dbg !4682
  store i32 %63, i32* %buf_offs, align 4, !dbg !4683
  %65 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4684
  %type = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %65, i32 0, i32 3, !dbg !4685
  store i8 1, i8* %type, align 4, !dbg !4686
  %66 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4687
  %cbp = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %66, i32 0, i32 4, !dbg !4688
  store i8 0, i8* %cbp, align 1, !dbg !4689
  %67 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4690
  %qdelta_present = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %67, i32 0, i32 18, !dbg !4692
  %68 = load i32, i32* %qdelta_present, align 8, !dbg !4692
  %tobool = icmp ne i32 %68, 0, !dbg !4690
  br i1 %tobool, label %if.end55, label %land.lhs.true, !dbg !4693

land.lhs.true:                                    ; preds = %for.body43
  %69 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4694
  %plane = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %69, i32 0, i32 0, !dbg !4696
  %70 = load i32, i32* %plane, align 8, !dbg !4696
  %tobool48 = icmp ne i32 %70, 0, !dbg !4694
  br i1 %tobool48, label %if.end55, label %land.lhs.true49, !dbg !4697

land.lhs.true49:                                  ; preds = %land.lhs.true
  %71 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4698
  %band_num = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %71, i32 0, i32 1, !dbg !4700
  %72 = load i32, i32* %band_num, align 4, !dbg !4700
  %tobool50 = icmp ne i32 %72, 0, !dbg !4698
  br i1 %tobool50, label %if.end55, label %if.then51, !dbg !4701

if.then51:                                        ; preds = %land.lhs.true49
  %73 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4702
  %glob_quant = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %73, i32 0, i32 20, !dbg !4704
  %74 = load i32, i32* %glob_quant, align 8, !dbg !4704
  %conv52 = trunc i32 %74 to i8, !dbg !4702
  %75 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4705
  %q_delta = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %75, i32 0, i32 5, !dbg !4706
  store i8 %conv52, i8* %q_delta, align 2, !dbg !4707
  %76 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4708
  %mv_x53 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %76, i32 0, i32 6, !dbg !4709
  store i8 0, i8* %mv_x53, align 1, !dbg !4710
  %77 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4711
  %mv_y54 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %77, i32 0, i32 7, !dbg !4712
  store i8 0, i8* %mv_y54, align 4, !dbg !4713
  br label %if.end55, !dbg !4714

if.end55:                                         ; preds = %if.then51, %land.lhs.true49, %land.lhs.true, %for.body43
  %78 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4715
  %inherit_qdelta = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %78, i32 0, i32 17, !dbg !4717
  %79 = load i32, i32* %inherit_qdelta, align 4, !dbg !4717
  %tobool56 = icmp ne i32 %79, 0, !dbg !4715
  br i1 %tobool56, label %land.lhs.true57, label %if.end62, !dbg !4718

land.lhs.true57:                                  ; preds = %if.end55
  %80 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4719
  %tobool58 = icmp ne %struct.IVIMbInfo* %80, null, !dbg !4719
  br i1 %tobool58, label %if.then59, label %if.end62, !dbg !4721

if.then59:                                        ; preds = %land.lhs.true57
  %81 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4722
  %q_delta60 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %81, i32 0, i32 5, !dbg !4723
  %82 = load i8, i8* %q_delta60, align 2, !dbg !4723
  %83 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4724
  %q_delta61 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %83, i32 0, i32 5, !dbg !4725
  store i8 %82, i8* %q_delta61, align 2, !dbg !4726
  br label %if.end62, !dbg !4724

if.end62:                                         ; preds = %if.then59, %land.lhs.true57, %if.end55
  %84 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4727
  %inherit_mv = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %84, i32 0, i32 16, !dbg !4729
  %85 = load i32, i32* %inherit_mv, align 8, !dbg !4729
  %tobool63 = icmp ne i32 %85, 0, !dbg !4727
  br i1 %tobool63, label %land.lhs.true64, label %if.end134, !dbg !4730

land.lhs.true64:                                  ; preds = %if.end62
  %86 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4731
  %tobool65 = icmp ne %struct.IVIMbInfo* %86, null, !dbg !4731
  br i1 %tobool65, label %if.then66, label %if.end134, !dbg !4733

if.then66:                                        ; preds = %land.lhs.true64
  %87 = load i32, i32* %mv_scale.addr, align 4, !dbg !4734
  %tobool67 = icmp ne i32 %87, 0, !dbg !4734
  br i1 %tobool67, label %if.then68, label %if.else, !dbg !4737

if.then68:                                        ; preds = %if.then66
  %88 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4738
  %mv_x69 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %88, i32 0, i32 6, !dbg !4740
  %89 = load i8, i8* %mv_x69, align 1, !dbg !4740
  %conv70 = sext i8 %89 to i32, !dbg !4738
  %90 = load i32, i32* %mv_scale.addr, align 4, !dbg !4741
  %call = call i32 @ivi_scale_mv(i32 %conv70, i32 %90), !dbg !4742
  %conv71 = trunc i32 %call to i8, !dbg !4742
  %91 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4743
  %mv_x72 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %91, i32 0, i32 6, !dbg !4744
  store i8 %conv71, i8* %mv_x72, align 1, !dbg !4745
  %92 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4746
  %mv_y73 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %92, i32 0, i32 7, !dbg !4747
  %93 = load i8, i8* %mv_y73, align 4, !dbg !4747
  %conv74 = sext i8 %93 to i32, !dbg !4746
  %94 = load i32, i32* %mv_scale.addr, align 4, !dbg !4748
  %call75 = call i32 @ivi_scale_mv(i32 %conv74, i32 %94), !dbg !4749
  %conv76 = trunc i32 %call75 to i8, !dbg !4749
  %95 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4750
  %mv_y77 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %95, i32 0, i32 7, !dbg !4751
  store i8 %conv76, i8* %mv_y77, align 4, !dbg !4752
  br label %if.end82, !dbg !4753

if.else:                                          ; preds = %if.then66
  %96 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4754
  %mv_x78 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %96, i32 0, i32 6, !dbg !4756
  %97 = load i8, i8* %mv_x78, align 1, !dbg !4756
  %98 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4757
  %mv_x79 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %98, i32 0, i32 6, !dbg !4758
  store i8 %97, i8* %mv_x79, align 1, !dbg !4759
  %99 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4760
  %mv_y80 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %99, i32 0, i32 7, !dbg !4761
  %100 = load i8, i8* %mv_y80, align 4, !dbg !4761
  %101 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4762
  %mv_y81 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %101, i32 0, i32 7, !dbg !4763
  store i8 %100, i8* %mv_y81, align 4, !dbg !4764
  br label %if.end82

if.end82:                                         ; preds = %if.else, %if.then68
  %102 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4765
  %mv_x83 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %102, i32 0, i32 6, !dbg !4766
  %103 = load i8, i8* %mv_x83, align 1, !dbg !4766
  %conv84 = sext i8 %103 to i32, !dbg !4765
  %tobool85 = icmp ne i32 %conv84, 0, !dbg !4765
  br i1 %tobool85, label %lor.end, label %lor.rhs, !dbg !4767

lor.rhs:                                          ; preds = %if.end82
  %104 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4768
  %mv_y86 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %104, i32 0, i32 7, !dbg !4770
  %105 = load i8, i8* %mv_y86, align 4, !dbg !4770
  %conv87 = sext i8 %105 to i32, !dbg !4768
  %tobool88 = icmp ne i32 %conv87, 0, !dbg !4771
  br label %lor.end, !dbg !4771

lor.end:                                          ; preds = %lor.rhs, %if.end82
  %106 = phi i1 [ true, %if.end82 ], [ %tobool88, %lor.rhs ]
  %lor.ext = zext i1 %106 to i32, !dbg !4772
  %107 = load i32, i32* %need_mc, align 4, !dbg !4774
  %or = or i32 %107, %lor.ext, !dbg !4774
  store i32 %or, i32* %need_mc, align 4, !dbg !4774
  call void @llvm.dbg.declare(metadata i32* %dmv_x, metadata !4775, metadata !984), !dbg !4777
  call void @llvm.dbg.declare(metadata i32* %dmv_y, metadata !4778, metadata !984), !dbg !4779
  call void @llvm.dbg.declare(metadata i32* %cx, metadata !4780, metadata !984), !dbg !4781
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !4782, metadata !984), !dbg !4783
  %108 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4784
  %mv_x89 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %108, i32 0, i32 6, !dbg !4785
  %109 = load i8, i8* %mv_x89, align 1, !dbg !4785
  %conv90 = sext i8 %109 to i32, !dbg !4784
  %110 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4786
  %is_halfpel = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %110, i32 0, i32 15, !dbg !4787
  %111 = load i32, i32* %is_halfpel, align 4, !dbg !4787
  %shr = ashr i32 %conv90, %111, !dbg !4788
  store i32 %shr, i32* %dmv_x, align 4, !dbg !4789
  %112 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4790
  %mv_y91 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %112, i32 0, i32 7, !dbg !4791
  %113 = load i8, i8* %mv_y91, align 4, !dbg !4791
  %conv92 = sext i8 %113 to i32, !dbg !4790
  %114 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4792
  %is_halfpel93 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %114, i32 0, i32 15, !dbg !4793
  %115 = load i32, i32* %is_halfpel93, align 4, !dbg !4793
  %shr94 = ashr i32 %conv92, %115, !dbg !4794
  store i32 %shr94, i32* %dmv_y, align 4, !dbg !4795
  %116 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4796
  %mv_x95 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %116, i32 0, i32 6, !dbg !4797
  %117 = load i8, i8* %mv_x95, align 1, !dbg !4797
  %conv96 = sext i8 %117 to i32, !dbg !4796
  %118 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4798
  %is_halfpel97 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %118, i32 0, i32 15, !dbg !4799
  %119 = load i32, i32* %is_halfpel97, align 4, !dbg !4799
  %and = and i32 %conv96, %119, !dbg !4800
  store i32 %and, i32* %cx, align 4, !dbg !4801
  %120 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4802
  %mv_y98 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %120, i32 0, i32 7, !dbg !4803
  %121 = load i8, i8* %mv_y98, align 4, !dbg !4803
  %conv99 = sext i8 %121 to i32, !dbg !4802
  %122 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4804
  %is_halfpel100 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %122, i32 0, i32 15, !dbg !4805
  %123 = load i32, i32* %is_halfpel100, align 4, !dbg !4805
  %and101 = and i32 %conv99, %123, !dbg !4806
  store i32 %and101, i32* %cy, align 4, !dbg !4807
  %124 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4808
  %xpos102 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %124, i32 0, i32 0, !dbg !4810
  %125 = load i16, i16* %xpos102, align 4, !dbg !4810
  %conv103 = sext i16 %125 to i32, !dbg !4808
  %126 = load i32, i32* %dmv_x, align 4, !dbg !4811
  %add104 = add nsw i32 %conv103, %126, !dbg !4812
  %cmp105 = icmp slt i32 %add104, 0, !dbg !4813
  br i1 %cmp105, label %if.then132, label %lor.lhs.false, !dbg !4814

lor.lhs.false:                                    ; preds = %lor.end
  %127 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4815
  %xpos107 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %127, i32 0, i32 0, !dbg !4817
  %128 = load i16, i16* %xpos107, align 4, !dbg !4817
  %conv108 = sext i16 %128 to i32, !dbg !4815
  %129 = load i32, i32* %dmv_x, align 4, !dbg !4818
  %add109 = add nsw i32 %conv108, %129, !dbg !4819
  %130 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4820
  %mb_size110 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %130, i32 0, i32 13, !dbg !4821
  %131 = load i32, i32* %mb_size110, align 4, !dbg !4821
  %add111 = add nsw i32 %add109, %131, !dbg !4822
  %132 = load i32, i32* %cx, align 4, !dbg !4823
  %add112 = add nsw i32 %add111, %132, !dbg !4824
  %conv113 = sext i32 %add112 to i64, !dbg !4815
  %133 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4825
  %pitch114 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %133, i32 0, i32 11, !dbg !4826
  %134 = load i64, i64* %pitch114, align 8, !dbg !4826
  %cmp115 = icmp sgt i64 %conv113, %134, !dbg !4827
  br i1 %cmp115, label %if.then132, label %lor.lhs.false117, !dbg !4828

lor.lhs.false117:                                 ; preds = %lor.lhs.false
  %135 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4829
  %ypos118 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %135, i32 0, i32 1, !dbg !4830
  %136 = load i16, i16* %ypos118, align 2, !dbg !4830
  %conv119 = sext i16 %136 to i32, !dbg !4829
  %137 = load i32, i32* %dmv_y, align 4, !dbg !4831
  %add120 = add nsw i32 %conv119, %137, !dbg !4832
  %cmp121 = icmp slt i32 %add120, 0, !dbg !4833
  br i1 %cmp121, label %if.then132, label %lor.lhs.false123, !dbg !4834

lor.lhs.false123:                                 ; preds = %lor.lhs.false117
  %138 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4835
  %ypos124 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %138, i32 0, i32 1, !dbg !4836
  %139 = load i16, i16* %ypos124, align 2, !dbg !4836
  %conv125 = sext i16 %139 to i32, !dbg !4835
  %140 = load i32, i32* %dmv_y, align 4, !dbg !4837
  %add126 = add nsw i32 %conv125, %140, !dbg !4838
  %141 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4839
  %mb_size127 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %141, i32 0, i32 13, !dbg !4840
  %142 = load i32, i32* %mb_size127, align 4, !dbg !4840
  %add128 = add nsw i32 %add126, %142, !dbg !4841
  %143 = load i32, i32* %cy, align 4, !dbg !4842
  %add129 = add nsw i32 %add128, %143, !dbg !4843
  %144 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4844
  %aheight = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %144, i32 0, i32 4, !dbg !4845
  %145 = load i32, i32* %aheight, align 8, !dbg !4845
  %cmp130 = icmp sgt i32 %add129, %145, !dbg !4846
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !4847

if.then132:                                       ; preds = %lor.lhs.false123, %lor.lhs.false117, %lor.lhs.false, %lor.end
  %146 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4849
  %147 = bitcast %struct.AVCodecContext* %146 to i8*, !dbg !4849
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i32 0, i32 0)), !dbg !4851
  store i32 -1094995529, i32* %retval, align 4, !dbg !4852
  br label %return, !dbg !4852

if.end133:                                        ; preds = %lor.lhs.false123
  br label %if.end134, !dbg !4853

if.end134:                                        ; preds = %if.end133, %land.lhs.true64, %if.end62
  %148 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4854
  %incdec.ptr = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %148, i32 1, !dbg !4854
  store %struct.IVIMbInfo* %incdec.ptr, %struct.IVIMbInfo** %mb, align 8, !dbg !4854
  %149 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4855
  %tobool135 = icmp ne %struct.IVIMbInfo* %149, null, !dbg !4855
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !4857

if.then136:                                       ; preds = %if.end134
  %150 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4858
  %incdec.ptr137 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %150, i32 1, !dbg !4858
  store %struct.IVIMbInfo* %incdec.ptr137, %struct.IVIMbInfo** %ref_mb, align 8, !dbg !4858
  br label %if.end138, !dbg !4859

if.end138:                                        ; preds = %if.then136, %if.end134
  %151 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4860
  %mb_size139 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %151, i32 0, i32 13, !dbg !4861
  %152 = load i32, i32* %mb_size139, align 4, !dbg !4861
  %153 = load i32, i32* %mb_offset, align 4, !dbg !4862
  %add140 = add nsw i32 %153, %152, !dbg !4862
  store i32 %add140, i32* %mb_offset, align 4, !dbg !4862
  br label %for.inc, !dbg !4863

for.inc:                                          ; preds = %if.end138
  %154 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4864
  %mb_size141 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %154, i32 0, i32 13, !dbg !4866
  %155 = load i32, i32* %mb_size141, align 4, !dbg !4866
  %156 = load i32, i32* %x, align 4, !dbg !4867
  %add142 = add nsw i32 %156, %155, !dbg !4867
  store i32 %add142, i32* %x, align 4, !dbg !4867
  br label %for.cond37, !dbg !4868, !llvm.loop !4869

for.end:                                          ; preds = %for.cond37
  %157 = load i32, i32* %row_offset, align 4, !dbg !4871
  %158 = load i32, i32* %offs, align 4, !dbg !4872
  %add143 = add nsw i32 %158, %157, !dbg !4872
  store i32 %add143, i32* %offs, align 4, !dbg !4872
  br label %for.inc144, !dbg !4873

for.inc144:                                       ; preds = %for.end
  %159 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4874
  %mb_size145 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %159, i32 0, i32 13, !dbg !4876
  %160 = load i32, i32* %mb_size145, align 4, !dbg !4876
  %161 = load i32, i32* %y, align 4, !dbg !4877
  %add146 = add nsw i32 %161, %160, !dbg !4877
  store i32 %add146, i32* %y, align 4, !dbg !4877
  br label %for.cond, !dbg !4878, !llvm.loop !4879

for.end147:                                       ; preds = %for.cond
  %162 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4881
  %inherit_mv148 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %162, i32 0, i32 16, !dbg !4883
  %163 = load i32, i32* %inherit_mv148, align 8, !dbg !4883
  %tobool149 = icmp ne i32 %163, 0, !dbg !4881
  br i1 %tobool149, label %land.lhs.true150, label %if.else211, !dbg !4884

land.lhs.true150:                                 ; preds = %for.end147
  %164 = load i32, i32* %need_mc, align 4, !dbg !4885
  %tobool151 = icmp ne i32 %164, 0, !dbg !4885
  br i1 %tobool151, label %if.then152, label %if.else211, !dbg !4887

if.then152:                                       ; preds = %land.lhs.true150
  %165 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4888
  %mb_size153 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %165, i32 0, i32 13, !dbg !4890
  %166 = load i32, i32* %mb_size153, align 4, !dbg !4890
  %167 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4891
  %blk_size = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %167, i32 0, i32 14, !dbg !4892
  %168 = load i32, i32* %blk_size, align 8, !dbg !4892
  %cmp154 = icmp ne i32 %166, %168, !dbg !4893
  %cond = select i1 %cmp154, i32 4, i32 1, !dbg !4894
  store i32 %cond, i32* %num_blocks, align 4, !dbg !4895
  %169 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4896
  %blk_size156 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %169, i32 0, i32 14, !dbg !4897
  %170 = load i32, i32* %blk_size156, align 8, !dbg !4897
  %cmp157 = icmp eq i32 %170, 8, !dbg !4898
  %cond159 = select i1 %cmp157, void (i16*, i16*, i64, i32)* @ff_ivi_mc_8x8_no_delta, void (i16*, i16*, i64, i32)* @ff_ivi_mc_4x4_no_delta, !dbg !4899
  store void (i16*, i16*, i64, i32)* %cond159, void (i16*, i16*, i64, i32)** %mc_no_delta_func, align 8, !dbg !4900
  store i32 0, i32* %mbn, align 4, !dbg !4901
  %171 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4903
  %mbs160 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %171, i32 0, i32 8, !dbg !4904
  %172 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mbs160, align 8, !dbg !4904
  store %struct.IVIMbInfo* %172, %struct.IVIMbInfo** %mb, align 8, !dbg !4905
  br label %for.cond161, !dbg !4906

for.cond161:                                      ; preds = %for.inc207, %if.then152
  %173 = load i32, i32* %mbn, align 4, !dbg !4907
  %174 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4910
  %num_MBs162 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %174, i32 0, i32 7, !dbg !4911
  %175 = load i32, i32* %num_MBs162, align 4, !dbg !4911
  %cmp163 = icmp slt i32 %173, %175, !dbg !4912
  br i1 %cmp163, label %for.body165, label %for.end210, !dbg !4913

for.body165:                                      ; preds = %for.cond161
  %176 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4914
  %mv_x166 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %176, i32 0, i32 6, !dbg !4916
  %177 = load i8, i8* %mv_x166, align 1, !dbg !4916
  %conv167 = sext i8 %177 to i32, !dbg !4914
  store i32 %conv167, i32* %mv_x, align 4, !dbg !4917
  %178 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4918
  %mv_y168 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %178, i32 0, i32 7, !dbg !4919
  %179 = load i8, i8* %mv_y168, align 4, !dbg !4919
  %conv169 = sext i8 %179 to i32, !dbg !4918
  store i32 %conv169, i32* %mv_y, align 4, !dbg !4920
  %180 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4921
  %is_halfpel170 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %180, i32 0, i32 15, !dbg !4923
  %181 = load i32, i32* %is_halfpel170, align 4, !dbg !4923
  %tobool171 = icmp ne i32 %181, 0, !dbg !4921
  br i1 %tobool171, label %if.else173, label %if.then172, !dbg !4924

if.then172:                                       ; preds = %for.body165
  store i32 0, i32* %mc_type, align 4, !dbg !4925
  br label %if.end179, !dbg !4927

if.else173:                                       ; preds = %for.body165
  %182 = load i32, i32* %mv_y, align 4, !dbg !4928
  %and174 = and i32 %182, 1, !dbg !4930
  %shl = shl i32 %and174, 1, !dbg !4931
  %183 = load i32, i32* %mv_x, align 4, !dbg !4932
  %and175 = and i32 %183, 1, !dbg !4933
  %or176 = or i32 %shl, %and175, !dbg !4934
  store i32 %or176, i32* %mc_type, align 4, !dbg !4935
  %184 = load i32, i32* %mv_x, align 4, !dbg !4936
  %shr177 = ashr i32 %184, 1, !dbg !4936
  store i32 %shr177, i32* %mv_x, align 4, !dbg !4936
  %185 = load i32, i32* %mv_y, align 4, !dbg !4937
  %shr178 = ashr i32 %185, 1, !dbg !4937
  store i32 %shr178, i32* %mv_y, align 4, !dbg !4937
  br label %if.end179

if.end179:                                        ; preds = %if.else173, %if.then172
  store i32 0, i32* %blk, align 4, !dbg !4938
  br label %for.cond180, !dbg !4940

for.cond180:                                      ; preds = %for.inc205, %if.end179
  %186 = load i32, i32* %blk, align 4, !dbg !4941
  %187 = load i32, i32* %num_blocks, align 4, !dbg !4944
  %cmp181 = icmp slt i32 %186, %187, !dbg !4945
  br i1 %cmp181, label %for.body183, label %for.end206, !dbg !4946

for.body183:                                      ; preds = %for.cond180
  %188 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4947
  %buf_offs184 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %188, i32 0, i32 2, !dbg !4949
  %189 = load i32, i32* %buf_offs184, align 4, !dbg !4949
  %conv185 = zext i32 %189 to i64, !dbg !4947
  %190 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4950
  %blk_size186 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %190, i32 0, i32 14, !dbg !4951
  %191 = load i32, i32* %blk_size186, align 8, !dbg !4951
  %conv187 = sext i32 %191 to i64, !dbg !4950
  %192 = load i32, i32* %blk, align 4, !dbg !4952
  %and188 = and i32 %192, 1, !dbg !4953
  %conv189 = sext i32 %and188 to i64, !dbg !4954
  %193 = load i32, i32* %blk, align 4, !dbg !4955
  %and190 = and i32 %193, 2, !dbg !4956
  %tobool191 = icmp ne i32 %and190, 0, !dbg !4957
  %lnot = xor i1 %tobool191, true, !dbg !4957
  %lnot192 = xor i1 %lnot, true, !dbg !4958
  %lnot.ext = zext i1 %lnot192 to i32, !dbg !4958
  %conv193 = sext i32 %lnot.ext to i64, !dbg !4958
  %194 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4959
  %pitch194 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %194, i32 0, i32 11, !dbg !4960
  %195 = load i64, i64* %pitch194, align 8, !dbg !4960
  %mul195 = mul nsw i64 %conv193, %195, !dbg !4961
  %add196 = add nsw i64 %conv189, %mul195, !dbg !4962
  %mul197 = mul nsw i64 %conv187, %add196, !dbg !4963
  %add198 = add nsw i64 %conv185, %mul197, !dbg !4964
  %conv199 = trunc i64 %add198 to i32, !dbg !4947
  store i32 %conv199, i32* %offs, align 4, !dbg !4965
  %196 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4966
  %197 = load void (i16*, i16*, i64, i32)*, void (i16*, i16*, i64, i32)** %mc_no_delta_func, align 8, !dbg !4967
  %198 = load i32, i32* %offs, align 4, !dbg !4968
  %199 = load i32, i32* %mv_x, align 4, !dbg !4969
  %200 = load i32, i32* %mv_y, align 4, !dbg !4970
  %201 = load i32, i32* %mc_type, align 4, !dbg !4971
  %call200 = call i32 @ivi_mc(%struct.IVIBandDesc* %196, void (i16*, i16*, i64, i32)* %197, void (i16*, i16*, i16*, i64, i32, i32)* null, i32 %198, i32 %199, i32 %200, i32 0, i32 0, i32 %201, i32 -1), !dbg !4972
  store i32 %call200, i32* %ret, align 4, !dbg !4973
  %202 = load i32, i32* %ret, align 4, !dbg !4974
  %cmp201 = icmp slt i32 %202, 0, !dbg !4976
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !4977

if.then203:                                       ; preds = %for.body183
  %203 = load i32, i32* %ret, align 4, !dbg !4978
  store i32 %203, i32* %retval, align 4, !dbg !4979
  br label %return, !dbg !4979

if.end204:                                        ; preds = %for.body183
  br label %for.inc205, !dbg !4980

for.inc205:                                       ; preds = %if.end204
  %204 = load i32, i32* %blk, align 4, !dbg !4981
  %inc = add nsw i32 %204, 1, !dbg !4981
  store i32 %inc, i32* %blk, align 4, !dbg !4981
  br label %for.cond180, !dbg !4983, !llvm.loop !4984

for.end206:                                       ; preds = %for.cond180
  br label %for.inc207, !dbg !4986

for.inc207:                                       ; preds = %for.end206
  %205 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !4987
  %incdec.ptr208 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %205, i32 1, !dbg !4987
  store %struct.IVIMbInfo* %incdec.ptr208, %struct.IVIMbInfo** %mb, align 8, !dbg !4987
  %206 = load i32, i32* %mbn, align 4, !dbg !4989
  %inc209 = add nsw i32 %206, 1, !dbg !4989
  store i32 %inc209, i32* %mbn, align 4, !dbg !4989
  br label %for.cond161, !dbg !4990, !llvm.loop !4991

for.end210:                                       ; preds = %for.cond161
  br label %if.end241, !dbg !4993

if.else211:                                       ; preds = %land.lhs.true150, %for.end147
  %207 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4994
  %ref_buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %207, i32 0, i32 8, !dbg !4996
  %208 = load i16*, i16** %ref_buf, align 8, !dbg !4996
  %209 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !4997
  %ypos212 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %209, i32 0, i32 1, !dbg !4998
  %210 = load i32, i32* %ypos212, align 4, !dbg !4998
  %conv213 = sext i32 %210 to i64, !dbg !4997
  %211 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !4999
  %pitch214 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %211, i32 0, i32 11, !dbg !5000
  %212 = load i64, i64* %pitch214, align 8, !dbg !5000
  %mul215 = mul nsw i64 %conv213, %212, !dbg !5001
  %add.ptr = getelementptr inbounds i16, i16* %208, i64 %mul215, !dbg !5002
  %213 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !5003
  %xpos216 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %213, i32 0, i32 0, !dbg !5004
  %214 = load i32, i32* %xpos216, align 8, !dbg !5004
  %idx.ext = sext i32 %214 to i64, !dbg !5005
  %add.ptr217 = getelementptr inbounds i16, i16* %add.ptr, i64 %idx.ext, !dbg !5005
  store i16* %add.ptr217, i16** %src, align 8, !dbg !5006
  %215 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5007
  %buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %215, i32 0, i32 7, !dbg !5008
  %216 = load i16*, i16** %buf, align 8, !dbg !5008
  %217 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !5009
  %ypos218 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %217, i32 0, i32 1, !dbg !5010
  %218 = load i32, i32* %ypos218, align 4, !dbg !5010
  %conv219 = sext i32 %218 to i64, !dbg !5009
  %219 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5011
  %pitch220 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %219, i32 0, i32 11, !dbg !5012
  %220 = load i64, i64* %pitch220, align 8, !dbg !5012
  %mul221 = mul nsw i64 %conv219, %220, !dbg !5013
  %add.ptr222 = getelementptr inbounds i16, i16* %216, i64 %mul221, !dbg !5014
  %221 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !5015
  %xpos223 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %221, i32 0, i32 0, !dbg !5016
  %222 = load i32, i32* %xpos223, align 8, !dbg !5016
  %idx.ext224 = sext i32 %222 to i64, !dbg !5017
  %add.ptr225 = getelementptr inbounds i16, i16* %add.ptr222, i64 %idx.ext224, !dbg !5017
  store i16* %add.ptr225, i16** %dst, align 8, !dbg !5018
  store i32 0, i32* %y, align 4, !dbg !5019
  br label %for.cond226, !dbg !5021

for.cond226:                                      ; preds = %for.inc238, %if.else211
  %223 = load i32, i32* %y, align 4, !dbg !5022
  %224 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !5025
  %height227 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %224, i32 0, i32 3, !dbg !5026
  %225 = load i32, i32* %height227, align 4, !dbg !5026
  %cmp228 = icmp slt i32 %223, %225, !dbg !5027
  br i1 %cmp228, label %for.body230, label %for.end240, !dbg !5028

for.body230:                                      ; preds = %for.cond226
  %226 = load i16*, i16** %dst, align 8, !dbg !5029
  %227 = bitcast i16* %226 to i8*, !dbg !5031
  %228 = load i16*, i16** %src, align 8, !dbg !5032
  %229 = bitcast i16* %228 to i8*, !dbg !5031
  %230 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !5033
  %width231 = getelementptr inbounds %struct.IVITile, %struct.IVITile* %230, i32 0, i32 2, !dbg !5034
  %231 = load i32, i32* %width231, align 8, !dbg !5034
  %conv232 = sext i32 %231 to i64, !dbg !5033
  %mul233 = mul i64 %conv232, 2, !dbg !5035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %227, i8* %229, i64 %mul233, i32 2, i1 false), !dbg !5031
  %232 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5036
  %pitch234 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %232, i32 0, i32 11, !dbg !5037
  %233 = load i64, i64* %pitch234, align 8, !dbg !5037
  %234 = load i16*, i16** %src, align 8, !dbg !5038
  %add.ptr235 = getelementptr inbounds i16, i16* %234, i64 %233, !dbg !5038
  store i16* %add.ptr235, i16** %src, align 8, !dbg !5038
  %235 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5039
  %pitch236 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %235, i32 0, i32 11, !dbg !5040
  %236 = load i64, i64* %pitch236, align 8, !dbg !5040
  %237 = load i16*, i16** %dst, align 8, !dbg !5041
  %add.ptr237 = getelementptr inbounds i16, i16* %237, i64 %236, !dbg !5041
  store i16* %add.ptr237, i16** %dst, align 8, !dbg !5041
  br label %for.inc238, !dbg !5042

for.inc238:                                       ; preds = %for.body230
  %238 = load i32, i32* %y, align 4, !dbg !5043
  %inc239 = add nsw i32 %238, 1, !dbg !5043
  store i32 %inc239, i32* %y, align 4, !dbg !5043
  br label %for.cond226, !dbg !5045, !llvm.loop !5046

for.end240:                                       ; preds = %for.cond226
  br label %if.end241

if.end241:                                        ; preds = %for.end240, %for.end210
  store i32 0, i32* %retval, align 4, !dbg !5048
  br label %return, !dbg !5048

return:                                           ; preds = %if.end241, %if.then203, %if.then132, %if.then
  %239 = load i32, i32* %retval, align 4, !dbg !5049
  ret i32 %239, !dbg !5049
}

; Function Attrs: nounwind uwtable
define internal i32 @ivi_dec_tile_data_size(%struct.GetBitContext* %gb) #2 !dbg !5050 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %len = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5051, metadata !984), !dbg !5052
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5053, metadata !984), !dbg !5054
  store i32 0, i32* %len, align 4, !dbg !5055
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5056
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !5058
  %tobool = icmp ne i32 %call, 0, !dbg !5058
  br i1 %tobool, label %if.then, label %if.end4, !dbg !5059

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5060
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 8), !dbg !5062
  store i32 %call1, i32* %len, align 4, !dbg !5063
  %2 = load i32, i32* %len, align 4, !dbg !5064
  %cmp = icmp eq i32 %2, 255, !dbg !5066
  br i1 %cmp, label %if.then2, label %if.end, !dbg !5067

if.then2:                                         ; preds = %if.then
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5068
  %call3 = call i32 @get_bits_long(%struct.GetBitContext* %3, i32 24), !dbg !5069
  store i32 %call3, i32* %len, align 4, !dbg !5070
  br label %if.end, !dbg !5071

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !5072

if.end4:                                          ; preds = %if.end, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5073
  %call5 = call i8* @align_get_bits(%struct.GetBitContext* %4), !dbg !5074
  %5 = load i32, i32* %len, align 4, !dbg !5075
  ret i32 %5, !dbg !5076
}

; Function Attrs: nounwind uwtable
define internal i32 @ivi_decode_blocks(%struct.GetBitContext* %gb, %struct.IVIBandDesc* %band, %struct.IVITile* %tile, %struct.AVCodecContext* %avctx) #2 !dbg !5077 {
entry:
  %retval.i217 = alloca i32, align 4
  %a.addr.i218 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i218, metadata !4270, metadata !984), !dbg !5080
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4276, metadata !984), !dbg !5086
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4278, metadata !984), !dbg !5087
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5088, metadata !984), !dbg !5092
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5094, metadata !984), !dbg !5095
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %band.addr = alloca %struct.IVIBandDesc*, align 8
  %tile.addr = alloca %struct.IVITile*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %mbn = alloca i32, align 4
  %blk = alloca i32, align 4
  %num_blocks = alloca i32, align 4
  %blk_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %is_intra = alloca i32, align 4
  %mc_type = alloca i32, align 4
  %mc_type2 = alloca i32, align 4
  %mv_x = alloca i32, align 4
  %mv_y = alloca i32, align 4
  %mv_x2 = alloca i32, align 4
  %mv_y2 = alloca i32, align 4
  %prev_dc = alloca i32, align 4
  %cbp = alloca i32, align 4
  %quant = alloca i32, align 4
  %buf_offs = alloca i32, align 4
  %mb = alloca %struct.IVIMbInfo*, align 8
  %mc_with_delta_func = alloca void (i16*, i16*, i64, i32)*, align 8
  %mc_no_delta_func = alloca void (i16*, i16*, i64, i32)*, align 8
  %mc_avg_with_delta_func = alloca void (i16*, i16*, i16*, i64, i32, i32)*, align 8
  %mc_avg_no_delta_func = alloca void (i16*, i16*, i16*, i64, i32, i32)*, align 8
  %scale_tab = alloca i8*, align 8
  %dmv_x = alloca i32, align 4
  %dmv_y = alloca i32, align 4
  %cx = alloca i32, align 4
  %cy = alloca i32, align 4
  %dmv_x113 = alloca i32, align 4
  %dmv_y114 = alloca i32, align 4
  %cx115 = alloca i32, align 4
  %cy116 = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5096, metadata !984), !dbg !5097
  store %struct.IVIBandDesc* %band, %struct.IVIBandDesc** %band.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band.addr, metadata !5098, metadata !984), !dbg !5099
  store %struct.IVITile* %tile, %struct.IVITile** %tile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVITile** %tile.addr, metadata !5100, metadata !984), !dbg !5101
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5102, metadata !984), !dbg !5103
  call void @llvm.dbg.declare(metadata i32* %mbn, metadata !5104, metadata !984), !dbg !5105
  call void @llvm.dbg.declare(metadata i32* %blk, metadata !5106, metadata !984), !dbg !5107
  call void @llvm.dbg.declare(metadata i32* %num_blocks, metadata !5108, metadata !984), !dbg !5109
  call void @llvm.dbg.declare(metadata i32* %blk_size, metadata !5110, metadata !984), !dbg !5111
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5112, metadata !984), !dbg !5113
  call void @llvm.dbg.declare(metadata i32* %is_intra, metadata !5114, metadata !984), !dbg !5115
  call void @llvm.dbg.declare(metadata i32* %mc_type, metadata !5116, metadata !984), !dbg !5117
  store i32 0, i32* %mc_type, align 4, !dbg !5117
  call void @llvm.dbg.declare(metadata i32* %mc_type2, metadata !5118, metadata !984), !dbg !5119
  store i32 -1, i32* %mc_type2, align 4, !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %mv_x, metadata !5120, metadata !984), !dbg !5121
  store i32 0, i32* %mv_x, align 4, !dbg !5121
  call void @llvm.dbg.declare(metadata i32* %mv_y, metadata !5122, metadata !984), !dbg !5123
  store i32 0, i32* %mv_y, align 4, !dbg !5123
  call void @llvm.dbg.declare(metadata i32* %mv_x2, metadata !5124, metadata !984), !dbg !5125
  store i32 0, i32* %mv_x2, align 4, !dbg !5125
  call void @llvm.dbg.declare(metadata i32* %mv_y2, metadata !5126, metadata !984), !dbg !5127
  store i32 0, i32* %mv_y2, align 4, !dbg !5127
  call void @llvm.dbg.declare(metadata i32* %prev_dc, metadata !5128, metadata !984), !dbg !5129
  call void @llvm.dbg.declare(metadata i32* %cbp, metadata !5130, metadata !984), !dbg !5131
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !5132, metadata !984), !dbg !5133
  call void @llvm.dbg.declare(metadata i32* %buf_offs, metadata !5134, metadata !984), !dbg !5135
  call void @llvm.dbg.declare(metadata %struct.IVIMbInfo** %mb, metadata !5136, metadata !984), !dbg !5137
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i64, i32)** %mc_with_delta_func, metadata !5138, metadata !984), !dbg !5139
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i64, i32)** %mc_no_delta_func, metadata !5140, metadata !984), !dbg !5141
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_with_delta_func, metadata !5142, metadata !984), !dbg !5147
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_no_delta_func, metadata !5148, metadata !984), !dbg !5149
  call void @llvm.dbg.declare(metadata i8** %scale_tab, metadata !5150, metadata !984), !dbg !5151
  store i32 0, i32* %prev_dc, align 4, !dbg !5152
  %0 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5153
  %blk_size1 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %0, i32 0, i32 14, !dbg !5154
  %1 = load i32, i32* %blk_size1, align 8, !dbg !5154
  store i32 %1, i32* %blk_size, align 4, !dbg !5155
  %2 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5156
  %mb_size = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %2, i32 0, i32 13, !dbg !5157
  %3 = load i32, i32* %mb_size, align 4, !dbg !5157
  %4 = load i32, i32* %blk_size, align 4, !dbg !5158
  %cmp = icmp ne i32 %3, %4, !dbg !5159
  %cond = select i1 %cmp, i32 4, i32 1, !dbg !5160
  store i32 %cond, i32* %num_blocks, align 4, !dbg !5161
  %5 = load i32, i32* %blk_size, align 4, !dbg !5162
  %cmp2 = icmp eq i32 %5, 8, !dbg !5164
  br i1 %cmp2, label %if.then, label %if.else, !dbg !5165

if.then:                                          ; preds = %entry
  store void (i16*, i16*, i64, i32)* @ff_ivi_mc_8x8_delta, void (i16*, i16*, i64, i32)** %mc_with_delta_func, align 8, !dbg !5166
  store void (i16*, i16*, i64, i32)* @ff_ivi_mc_8x8_no_delta, void (i16*, i16*, i64, i32)** %mc_no_delta_func, align 8, !dbg !5168
  store void (i16*, i16*, i16*, i64, i32, i32)* @ff_ivi_mc_avg_8x8_delta, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_with_delta_func, align 8, !dbg !5169
  store void (i16*, i16*, i16*, i64, i32, i32)* @ff_ivi_mc_avg_8x8_no_delta, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_no_delta_func, align 8, !dbg !5170
  br label %if.end, !dbg !5171

if.else:                                          ; preds = %entry
  store void (i16*, i16*, i64, i32)* @ff_ivi_mc_4x4_delta, void (i16*, i16*, i64, i32)** %mc_with_delta_func, align 8, !dbg !5172
  store void (i16*, i16*, i64, i32)* @ff_ivi_mc_4x4_no_delta, void (i16*, i16*, i64, i32)** %mc_no_delta_func, align 8, !dbg !5174
  store void (i16*, i16*, i16*, i64, i32, i32)* @ff_ivi_mc_avg_4x4_delta, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_with_delta_func, align 8, !dbg !5175
  store void (i16*, i16*, i16*, i64, i32, i32)* @ff_ivi_mc_avg_4x4_no_delta, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_no_delta_func, align 8, !dbg !5176
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %mbn, align 4, !dbg !5177
  %6 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !5178
  %mbs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %6, i32 0, i32 8, !dbg !5179
  %7 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mbs, align 8, !dbg !5179
  store %struct.IVIMbInfo* %7, %struct.IVIMbInfo** %mb, align 8, !dbg !5180
  br label %for.cond, !dbg !5181

for.cond:                                         ; preds = %for.inc213, %if.end
  %8 = load i32, i32* %mbn, align 4, !dbg !5182
  %9 = load %struct.IVITile*, %struct.IVITile** %tile.addr, align 8, !dbg !5184
  %num_MBs = getelementptr inbounds %struct.IVITile, %struct.IVITile* %9, i32 0, i32 7, !dbg !5185
  %10 = load i32, i32* %num_MBs, align 4, !dbg !5185
  %cmp3 = icmp slt i32 %8, %10, !dbg !5186
  br i1 %cmp3, label %for.body, label %for.end215, !dbg !5187

for.body:                                         ; preds = %for.cond
  %11 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5188
  %type = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %11, i32 0, i32 3, !dbg !5189
  %12 = load i8, i8* %type, align 4, !dbg !5189
  %tobool = icmp ne i8 %12, 0, !dbg !5190
  %lnot = xor i1 %tobool, true, !dbg !5190
  %lnot.ext = zext i1 %lnot to i32, !dbg !5190
  store i32 %lnot.ext, i32* %is_intra, align 4, !dbg !5191
  %13 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5192
  %cbp4 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %13, i32 0, i32 4, !dbg !5193
  %14 = load i8, i8* %cbp4, align 1, !dbg !5193
  %conv = zext i8 %14 to i32, !dbg !5192
  store i32 %conv, i32* %cbp, align 4, !dbg !5194
  %15 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5195
  %buf_offs5 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %15, i32 0, i32 2, !dbg !5196
  %16 = load i32, i32* %buf_offs5, align 4, !dbg !5196
  store i32 %16, i32* %buf_offs, align 4, !dbg !5197
  %17 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5198
  %glob_quant = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %17, i32 0, i32 20, !dbg !5199
  %18 = load i32, i32* %glob_quant, align 8, !dbg !5199
  %19 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5200
  %q_delta = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %19, i32 0, i32 5, !dbg !5201
  %20 = load i8, i8* %q_delta, align 2, !dbg !5201
  %conv6 = sext i8 %20 to i32, !dbg !5200
  %add = add nsw i32 %18, %conv6, !dbg !5202
  store i32 %add, i32* %quant, align 4, !dbg !5203
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5204
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 4, !dbg !5205
  %22 = load i32, i32* %codec_id, align 8, !dbg !5205
  %cmp7 = icmp eq i32 %22, 111, !dbg !5206
  br i1 %cmp7, label %if.then9, label %if.else10, !dbg !5207

if.then9:                                         ; preds = %for.body
  %23 = load i32, i32* %quant, align 4, !dbg !5208
  store i32 %23, i32* %a.addr.i, align 4, !dbg !5209
  store i32 5, i32* %p.addr.i, align 4, !dbg !5209
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !5210
  %25 = load i32, i32* %p.addr.i, align 4, !dbg !5212
  %shl.i = shl i32 1, %25, !dbg !5213
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5214
  %neg.i = xor i32 %sub.i, -1, !dbg !5215
  %and.i = and i32 %24, %neg.i, !dbg !5216
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5216
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5217

if.then.i:                                        ; preds = %if.then9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !5218
  %neg1.i = xor i32 %26, -1, !dbg !5220
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5221
  %27 = load i32, i32* %p.addr.i, align 4, !dbg !5222
  %shl2.i = shl i32 1, %27, !dbg !5223
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5224
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5225
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5226
  br label %av_clip_uintp2_c.exit, !dbg !5226

if.else.i:                                        ; preds = %if.then9
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !5227
  store i32 %28, i32* %retval.i, align 4, !dbg !5228
  br label %av_clip_uintp2_c.exit, !dbg !5228

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !5229
  store i32 %29, i32* %quant, align 4, !dbg !5230
  br label %if.end12, !dbg !5231

if.else10:                                        ; preds = %for.body
  %30 = load i32, i32* %quant, align 4, !dbg !5232
  store i32 %30, i32* %a.addr.i218, align 4, !dbg !5233
  store i32 0, i32* %amin.addr.i, align 4, !dbg !5233
  store i32 23, i32* %amax.addr.i, align 4, !dbg !5233
  %31 = load i32, i32* %a.addr.i218, align 4, !dbg !5234
  %32 = load i32, i32* %amin.addr.i, align 4, !dbg !5235
  %cmp.i = icmp slt i32 %31, %32, !dbg !5236
  br i1 %cmp.i, label %if.then.i219, label %if.else.i220, !dbg !5237

if.then.i219:                                     ; preds = %if.else10
  %33 = load i32, i32* %amin.addr.i, align 4, !dbg !5238
  store i32 %33, i32* %retval.i217, align 4, !dbg !5239
  br label %av_clip_c.exit, !dbg !5239

if.else.i220:                                     ; preds = %if.else10
  %34 = load i32, i32* %a.addr.i218, align 4, !dbg !5240
  %35 = load i32, i32* %amax.addr.i, align 4, !dbg !5241
  %cmp1.i = icmp sgt i32 %34, %35, !dbg !5242
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5243

if.then2.i:                                       ; preds = %if.else.i220
  %36 = load i32, i32* %amax.addr.i, align 4, !dbg !5244
  store i32 %36, i32* %retval.i217, align 4, !dbg !5245
  br label %av_clip_c.exit, !dbg !5245

if.else3.i:                                       ; preds = %if.else.i220
  %37 = load i32, i32* %a.addr.i218, align 4, !dbg !5246
  store i32 %37, i32* %retval.i217, align 4, !dbg !5247
  br label %av_clip_c.exit, !dbg !5247

av_clip_c.exit:                                   ; preds = %if.then.i219, %if.then2.i, %if.else3.i
  %38 = load i32, i32* %retval.i217, align 4, !dbg !5248
  store i32 %38, i32* %quant, align 4, !dbg !5249
  br label %if.end12

if.end12:                                         ; preds = %av_clip_c.exit, %av_clip_uintp2_c.exit
  %39 = load i32, i32* %is_intra, align 4, !dbg !5250
  %tobool13 = icmp ne i32 %39, 0, !dbg !5250
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !5250

cond.true:                                        ; preds = %if.end12
  %40 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5251
  %intra_scale = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %40, i32 0, i32 39, !dbg !5253
  %41 = load i8*, i8** %intra_scale, align 8, !dbg !5253
  br label %cond.end, !dbg !5254

cond.false:                                       ; preds = %if.end12
  %42 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5255
  %inter_scale = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %42, i32 0, i32 40, !dbg !5257
  %43 = load i8*, i8** %inter_scale, align 8, !dbg !5257
  br label %cond.end, !dbg !5258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i8* [ %41, %cond.true ], [ %43, %cond.false ], !dbg !5259
  store i8* %cond14, i8** %scale_tab, align 8, !dbg !5261
  %44 = load i8*, i8** %scale_tab, align 8, !dbg !5262
  %tobool15 = icmp ne i8* %44, null, !dbg !5262
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !5264

if.then16:                                        ; preds = %cond.end
  %45 = load i32, i32* %quant, align 4, !dbg !5265
  %idxprom = zext i32 %45 to i64, !dbg !5266
  %46 = load i8*, i8** %scale_tab, align 8, !dbg !5266
  %arrayidx = getelementptr inbounds i8, i8* %46, i64 %idxprom, !dbg !5266
  %47 = load i8, i8* %arrayidx, align 1, !dbg !5266
  %conv17 = zext i8 %47 to i32, !dbg !5266
  store i32 %conv17, i32* %quant, align 4, !dbg !5267
  br label %if.end18, !dbg !5268

if.end18:                                         ; preds = %if.then16, %cond.end
  %48 = load i32, i32* %is_intra, align 4, !dbg !5269
  %tobool19 = icmp ne i32 %48, 0, !dbg !5269
  br i1 %tobool19, label %if.end168, label %if.then20, !dbg !5271

if.then20:                                        ; preds = %if.end18
  %49 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5272
  %mv_x21 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %49, i32 0, i32 6, !dbg !5274
  %50 = load i8, i8* %mv_x21, align 1, !dbg !5274
  %conv22 = sext i8 %50 to i32, !dbg !5272
  store i32 %conv22, i32* %mv_x, align 4, !dbg !5275
  %51 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5276
  %mv_y23 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %51, i32 0, i32 7, !dbg !5277
  %52 = load i8, i8* %mv_y23, align 4, !dbg !5277
  %conv24 = sext i8 %52 to i32, !dbg !5276
  store i32 %conv24, i32* %mv_y, align 4, !dbg !5278
  %53 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5279
  %b_mv_x = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %53, i32 0, i32 8, !dbg !5280
  %54 = load i8, i8* %b_mv_x, align 1, !dbg !5280
  %conv25 = sext i8 %54 to i32, !dbg !5279
  store i32 %conv25, i32* %mv_x2, align 4, !dbg !5281
  %55 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5282
  %b_mv_y = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %55, i32 0, i32 9, !dbg !5283
  %56 = load i8, i8* %b_mv_y, align 2, !dbg !5283
  %conv26 = sext i8 %56 to i32, !dbg !5282
  store i32 %conv26, i32* %mv_y2, align 4, !dbg !5284
  %57 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5285
  %is_halfpel = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %57, i32 0, i32 15, !dbg !5287
  %58 = load i32, i32* %is_halfpel, align 4, !dbg !5287
  %tobool27 = icmp ne i32 %58, 0, !dbg !5285
  br i1 %tobool27, label %if.then28, label %if.end37, !dbg !5288

if.then28:                                        ; preds = %if.then20
  %59 = load i32, i32* %mv_y, align 4, !dbg !5289
  %and = and i32 %59, 1, !dbg !5291
  %shl = shl i32 %and, 1, !dbg !5292
  %60 = load i32, i32* %mv_x, align 4, !dbg !5293
  %and29 = and i32 %60, 1, !dbg !5294
  %or = or i32 %shl, %and29, !dbg !5295
  store i32 %or, i32* %mc_type, align 4, !dbg !5296
  %61 = load i32, i32* %mv_y2, align 4, !dbg !5297
  %and30 = and i32 %61, 1, !dbg !5298
  %shl31 = shl i32 %and30, 1, !dbg !5299
  %62 = load i32, i32* %mv_x2, align 4, !dbg !5300
  %and32 = and i32 %62, 1, !dbg !5301
  %or33 = or i32 %shl31, %and32, !dbg !5302
  store i32 %or33, i32* %mc_type2, align 4, !dbg !5303
  %63 = load i32, i32* %mv_x, align 4, !dbg !5304
  %shr = ashr i32 %63, 1, !dbg !5304
  store i32 %shr, i32* %mv_x, align 4, !dbg !5304
  %64 = load i32, i32* %mv_y, align 4, !dbg !5305
  %shr34 = ashr i32 %64, 1, !dbg !5305
  store i32 %shr34, i32* %mv_y, align 4, !dbg !5305
  %65 = load i32, i32* %mv_x2, align 4, !dbg !5306
  %shr35 = ashr i32 %65, 1, !dbg !5306
  store i32 %shr35, i32* %mv_x2, align 4, !dbg !5306
  %66 = load i32, i32* %mv_y2, align 4, !dbg !5307
  %shr36 = ashr i32 %66, 1, !dbg !5307
  store i32 %shr36, i32* %mv_y2, align 4, !dbg !5307
  br label %if.end37, !dbg !5308

if.end37:                                         ; preds = %if.then28, %if.then20
  %67 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5309
  %type38 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %67, i32 0, i32 3, !dbg !5311
  %68 = load i8, i8* %type38, align 4, !dbg !5311
  %conv39 = zext i8 %68 to i32, !dbg !5309
  %cmp40 = icmp eq i32 %conv39, 2, !dbg !5312
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !5313

if.then42:                                        ; preds = %if.end37
  store i32 -1, i32* %mc_type, align 4, !dbg !5314
  br label %if.end43, !dbg !5315

if.end43:                                         ; preds = %if.then42, %if.end37
  %69 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5316
  %type44 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %69, i32 0, i32 3, !dbg !5318
  %70 = load i8, i8* %type44, align 4, !dbg !5318
  %conv45 = zext i8 %70 to i32, !dbg !5316
  %cmp46 = icmp ne i32 %conv45, 2, !dbg !5319
  br i1 %cmp46, label %land.lhs.true, label %if.end53, !dbg !5320

land.lhs.true:                                    ; preds = %if.end43
  %71 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5321
  %type48 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %71, i32 0, i32 3, !dbg !5323
  %72 = load i8, i8* %type48, align 4, !dbg !5323
  %conv49 = zext i8 %72 to i32, !dbg !5321
  %cmp50 = icmp ne i32 %conv49, 3, !dbg !5324
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !5325

if.then52:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %mc_type2, align 4, !dbg !5326
  br label %if.end53, !dbg !5327

if.end53:                                         ; preds = %if.then52, %land.lhs.true, %if.end43
  %73 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5328
  %type54 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %73, i32 0, i32 3, !dbg !5330
  %74 = load i8, i8* %type54, align 4, !dbg !5330
  %tobool55 = icmp ne i8 %74, 0, !dbg !5328
  br i1 %tobool55, label %if.then56, label %if.end102, !dbg !5331

if.then56:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata i32* %dmv_x, metadata !5332, metadata !984), !dbg !5334
  call void @llvm.dbg.declare(metadata i32* %dmv_y, metadata !5335, metadata !984), !dbg !5336
  call void @llvm.dbg.declare(metadata i32* %cx, metadata !5337, metadata !984), !dbg !5338
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !5339, metadata !984), !dbg !5340
  %75 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5341
  %mv_x57 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %75, i32 0, i32 6, !dbg !5342
  %76 = load i8, i8* %mv_x57, align 1, !dbg !5342
  %conv58 = sext i8 %76 to i32, !dbg !5341
  %77 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5343
  %is_halfpel59 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %77, i32 0, i32 15, !dbg !5344
  %78 = load i32, i32* %is_halfpel59, align 4, !dbg !5344
  %shr60 = ashr i32 %conv58, %78, !dbg !5345
  store i32 %shr60, i32* %dmv_x, align 4, !dbg !5346
  %79 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5347
  %mv_y61 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %79, i32 0, i32 7, !dbg !5348
  %80 = load i8, i8* %mv_y61, align 4, !dbg !5348
  %conv62 = sext i8 %80 to i32, !dbg !5347
  %81 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5349
  %is_halfpel63 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %81, i32 0, i32 15, !dbg !5350
  %82 = load i32, i32* %is_halfpel63, align 4, !dbg !5350
  %shr64 = ashr i32 %conv62, %82, !dbg !5351
  store i32 %shr64, i32* %dmv_y, align 4, !dbg !5352
  %83 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5353
  %mv_x65 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %83, i32 0, i32 6, !dbg !5354
  %84 = load i8, i8* %mv_x65, align 1, !dbg !5354
  %conv66 = sext i8 %84 to i32, !dbg !5353
  %85 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5355
  %is_halfpel67 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %85, i32 0, i32 15, !dbg !5356
  %86 = load i32, i32* %is_halfpel67, align 4, !dbg !5356
  %and68 = and i32 %conv66, %86, !dbg !5357
  store i32 %and68, i32* %cx, align 4, !dbg !5358
  %87 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5359
  %mv_y69 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %87, i32 0, i32 7, !dbg !5360
  %88 = load i8, i8* %mv_y69, align 4, !dbg !5360
  %conv70 = sext i8 %88 to i32, !dbg !5359
  %89 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5361
  %is_halfpel71 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %89, i32 0, i32 15, !dbg !5362
  %90 = load i32, i32* %is_halfpel71, align 4, !dbg !5362
  %and72 = and i32 %conv70, %90, !dbg !5363
  store i32 %and72, i32* %cy, align 4, !dbg !5364
  %91 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5365
  %xpos = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %91, i32 0, i32 0, !dbg !5367
  %92 = load i16, i16* %xpos, align 4, !dbg !5367
  %conv73 = sext i16 %92 to i32, !dbg !5365
  %93 = load i32, i32* %dmv_x, align 4, !dbg !5368
  %add74 = add nsw i32 %conv73, %93, !dbg !5369
  %cmp75 = icmp slt i32 %add74, 0, !dbg !5370
  br i1 %cmp75, label %if.then100, label %lor.lhs.false, !dbg !5371

lor.lhs.false:                                    ; preds = %if.then56
  %94 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5372
  %xpos77 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %94, i32 0, i32 0, !dbg !5373
  %95 = load i16, i16* %xpos77, align 4, !dbg !5373
  %conv78 = sext i16 %95 to i32, !dbg !5372
  %96 = load i32, i32* %dmv_x, align 4, !dbg !5374
  %add79 = add nsw i32 %conv78, %96, !dbg !5375
  %97 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5376
  %mb_size80 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %97, i32 0, i32 13, !dbg !5377
  %98 = load i32, i32* %mb_size80, align 4, !dbg !5377
  %add81 = add nsw i32 %add79, %98, !dbg !5378
  %99 = load i32, i32* %cx, align 4, !dbg !5379
  %add82 = add nsw i32 %add81, %99, !dbg !5380
  %conv83 = sext i32 %add82 to i64, !dbg !5372
  %100 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5381
  %pitch = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %100, i32 0, i32 11, !dbg !5382
  %101 = load i64, i64* %pitch, align 8, !dbg !5382
  %cmp84 = icmp sgt i64 %conv83, %101, !dbg !5383
  br i1 %cmp84, label %if.then100, label %lor.lhs.false86, !dbg !5384

lor.lhs.false86:                                  ; preds = %lor.lhs.false
  %102 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5385
  %ypos = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %102, i32 0, i32 1, !dbg !5386
  %103 = load i16, i16* %ypos, align 2, !dbg !5386
  %conv87 = sext i16 %103 to i32, !dbg !5385
  %104 = load i32, i32* %dmv_y, align 4, !dbg !5387
  %add88 = add nsw i32 %conv87, %104, !dbg !5388
  %cmp89 = icmp slt i32 %add88, 0, !dbg !5389
  br i1 %cmp89, label %if.then100, label %lor.lhs.false91, !dbg !5390

lor.lhs.false91:                                  ; preds = %lor.lhs.false86
  %105 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5391
  %ypos92 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %105, i32 0, i32 1, !dbg !5392
  %106 = load i16, i16* %ypos92, align 2, !dbg !5392
  %conv93 = sext i16 %106 to i32, !dbg !5391
  %107 = load i32, i32* %dmv_y, align 4, !dbg !5393
  %add94 = add nsw i32 %conv93, %107, !dbg !5394
  %108 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5395
  %mb_size95 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %108, i32 0, i32 13, !dbg !5396
  %109 = load i32, i32* %mb_size95, align 4, !dbg !5396
  %add96 = add nsw i32 %add94, %109, !dbg !5397
  %110 = load i32, i32* %cy, align 4, !dbg !5398
  %add97 = add nsw i32 %add96, %110, !dbg !5399
  %111 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5400
  %aheight = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %111, i32 0, i32 4, !dbg !5401
  %112 = load i32, i32* %aheight, align 8, !dbg !5401
  %cmp98 = icmp sgt i32 %add97, %112, !dbg !5402
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !5403

if.then100:                                       ; preds = %lor.lhs.false91, %lor.lhs.false86, %lor.lhs.false, %if.then56
  store i32 -1094995529, i32* %retval, align 4, !dbg !5405
  br label %return, !dbg !5405

if.end101:                                        ; preds = %lor.lhs.false91
  br label %if.end102, !dbg !5407

if.end102:                                        ; preds = %if.end101, %if.end53
  %113 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5408
  %type103 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %113, i32 0, i32 3, !dbg !5410
  %114 = load i8, i8* %type103, align 4, !dbg !5410
  %conv104 = zext i8 %114 to i32, !dbg !5408
  %cmp105 = icmp eq i32 %conv104, 2, !dbg !5411
  br i1 %cmp105, label %if.then112, label %lor.lhs.false107, !dbg !5412

lor.lhs.false107:                                 ; preds = %if.end102
  %115 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5413
  %type108 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %115, i32 0, i32 3, !dbg !5415
  %116 = load i8, i8* %type108, align 4, !dbg !5415
  %conv109 = zext i8 %116 to i32, !dbg !5413
  %cmp110 = icmp eq i32 %conv109, 3, !dbg !5416
  br i1 %cmp110, label %if.then112, label %if.end167, !dbg !5417

if.then112:                                       ; preds = %lor.lhs.false107, %if.end102
  call void @llvm.dbg.declare(metadata i32* %dmv_x113, metadata !5418, metadata !984), !dbg !5420
  call void @llvm.dbg.declare(metadata i32* %dmv_y114, metadata !5421, metadata !984), !dbg !5422
  call void @llvm.dbg.declare(metadata i32* %cx115, metadata !5423, metadata !984), !dbg !5424
  call void @llvm.dbg.declare(metadata i32* %cy116, metadata !5425, metadata !984), !dbg !5426
  %117 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5427
  %b_mv_x117 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %117, i32 0, i32 8, !dbg !5428
  %118 = load i8, i8* %b_mv_x117, align 1, !dbg !5428
  %conv118 = sext i8 %118 to i32, !dbg !5427
  %119 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5429
  %is_halfpel119 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %119, i32 0, i32 15, !dbg !5430
  %120 = load i32, i32* %is_halfpel119, align 4, !dbg !5430
  %shr120 = ashr i32 %conv118, %120, !dbg !5431
  store i32 %shr120, i32* %dmv_x113, align 4, !dbg !5432
  %121 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5433
  %b_mv_y121 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %121, i32 0, i32 9, !dbg !5434
  %122 = load i8, i8* %b_mv_y121, align 2, !dbg !5434
  %conv122 = sext i8 %122 to i32, !dbg !5433
  %123 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5435
  %is_halfpel123 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %123, i32 0, i32 15, !dbg !5436
  %124 = load i32, i32* %is_halfpel123, align 4, !dbg !5436
  %shr124 = ashr i32 %conv122, %124, !dbg !5437
  store i32 %shr124, i32* %dmv_y114, align 4, !dbg !5438
  %125 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5439
  %b_mv_x125 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %125, i32 0, i32 8, !dbg !5440
  %126 = load i8, i8* %b_mv_x125, align 1, !dbg !5440
  %conv126 = sext i8 %126 to i32, !dbg !5439
  %127 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5441
  %is_halfpel127 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %127, i32 0, i32 15, !dbg !5442
  %128 = load i32, i32* %is_halfpel127, align 4, !dbg !5442
  %and128 = and i32 %conv126, %128, !dbg !5443
  store i32 %and128, i32* %cx115, align 4, !dbg !5444
  %129 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5445
  %b_mv_y129 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %129, i32 0, i32 9, !dbg !5446
  %130 = load i8, i8* %b_mv_y129, align 2, !dbg !5446
  %conv130 = sext i8 %130 to i32, !dbg !5445
  %131 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5447
  %is_halfpel131 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %131, i32 0, i32 15, !dbg !5448
  %132 = load i32, i32* %is_halfpel131, align 4, !dbg !5448
  %and132 = and i32 %conv130, %132, !dbg !5449
  store i32 %and132, i32* %cy116, align 4, !dbg !5450
  %133 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5451
  %xpos133 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %133, i32 0, i32 0, !dbg !5453
  %134 = load i16, i16* %xpos133, align 4, !dbg !5453
  %conv134 = sext i16 %134 to i32, !dbg !5451
  %135 = load i32, i32* %dmv_x113, align 4, !dbg !5454
  %add135 = add nsw i32 %conv134, %135, !dbg !5455
  %cmp136 = icmp slt i32 %add135, 0, !dbg !5456
  br i1 %cmp136, label %if.then165, label %lor.lhs.false138, !dbg !5457

lor.lhs.false138:                                 ; preds = %if.then112
  %136 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5458
  %xpos139 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %136, i32 0, i32 0, !dbg !5459
  %137 = load i16, i16* %xpos139, align 4, !dbg !5459
  %conv140 = sext i16 %137 to i32, !dbg !5458
  %138 = load i32, i32* %dmv_x113, align 4, !dbg !5460
  %add141 = add nsw i32 %conv140, %138, !dbg !5461
  %139 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5462
  %mb_size142 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %139, i32 0, i32 13, !dbg !5463
  %140 = load i32, i32* %mb_size142, align 4, !dbg !5463
  %add143 = add nsw i32 %add141, %140, !dbg !5464
  %141 = load i32, i32* %cx115, align 4, !dbg !5465
  %add144 = add nsw i32 %add143, %141, !dbg !5466
  %conv145 = sext i32 %add144 to i64, !dbg !5458
  %142 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5467
  %pitch146 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %142, i32 0, i32 11, !dbg !5468
  %143 = load i64, i64* %pitch146, align 8, !dbg !5468
  %cmp147 = icmp sgt i64 %conv145, %143, !dbg !5469
  br i1 %cmp147, label %if.then165, label %lor.lhs.false149, !dbg !5470

lor.lhs.false149:                                 ; preds = %lor.lhs.false138
  %144 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5471
  %ypos150 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %144, i32 0, i32 1, !dbg !5472
  %145 = load i16, i16* %ypos150, align 2, !dbg !5472
  %conv151 = sext i16 %145 to i32, !dbg !5471
  %146 = load i32, i32* %dmv_y114, align 4, !dbg !5473
  %add152 = add nsw i32 %conv151, %146, !dbg !5474
  %cmp153 = icmp slt i32 %add152, 0, !dbg !5475
  br i1 %cmp153, label %if.then165, label %lor.lhs.false155, !dbg !5476

lor.lhs.false155:                                 ; preds = %lor.lhs.false149
  %147 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5477
  %ypos156 = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %147, i32 0, i32 1, !dbg !5478
  %148 = load i16, i16* %ypos156, align 2, !dbg !5478
  %conv157 = sext i16 %148 to i32, !dbg !5477
  %149 = load i32, i32* %dmv_y114, align 4, !dbg !5479
  %add158 = add nsw i32 %conv157, %149, !dbg !5480
  %150 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5481
  %mb_size159 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %150, i32 0, i32 13, !dbg !5482
  %151 = load i32, i32* %mb_size159, align 4, !dbg !5482
  %add160 = add nsw i32 %add158, %151, !dbg !5483
  %152 = load i32, i32* %cy116, align 4, !dbg !5484
  %add161 = add nsw i32 %add160, %152, !dbg !5485
  %153 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5486
  %aheight162 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %153, i32 0, i32 4, !dbg !5487
  %154 = load i32, i32* %aheight162, align 8, !dbg !5487
  %cmp163 = icmp sgt i32 %add161, %154, !dbg !5488
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !5489

if.then165:                                       ; preds = %lor.lhs.false155, %lor.lhs.false149, %lor.lhs.false138, %if.then112
  store i32 -1094995529, i32* %retval, align 4, !dbg !5491
  br label %return, !dbg !5491

if.end166:                                        ; preds = %lor.lhs.false155
  br label %if.end167, !dbg !5493

if.end167:                                        ; preds = %if.end166, %lor.lhs.false107
  br label %if.end168, !dbg !5494

if.end168:                                        ; preds = %if.end167, %if.end18
  store i32 0, i32* %blk, align 4, !dbg !5495
  br label %for.cond169, !dbg !5497

for.cond169:                                      ; preds = %for.inc, %if.end168
  %155 = load i32, i32* %blk, align 4, !dbg !5498
  %156 = load i32, i32* %num_blocks, align 4, !dbg !5501
  %cmp170 = icmp slt i32 %155, %156, !dbg !5502
  br i1 %cmp170, label %for.body172, label %for.end, !dbg !5503

for.body172:                                      ; preds = %for.cond169
  %157 = load i32, i32* %blk, align 4, !dbg !5504
  %and173 = and i32 %157, 1, !dbg !5507
  %tobool174 = icmp ne i32 %and173, 0, !dbg !5507
  br i1 %tobool174, label %if.then175, label %if.else177, !dbg !5508

if.then175:                                       ; preds = %for.body172
  %158 = load i32, i32* %blk_size, align 4, !dbg !5509
  %159 = load i32, i32* %buf_offs, align 4, !dbg !5511
  %add176 = add i32 %159, %158, !dbg !5511
  store i32 %add176, i32* %buf_offs, align 4, !dbg !5511
  br label %if.end187, !dbg !5512

if.else177:                                       ; preds = %for.body172
  %160 = load i32, i32* %blk, align 4, !dbg !5513
  %cmp178 = icmp eq i32 %160, 2, !dbg !5516
  br i1 %cmp178, label %if.then180, label %if.end186, !dbg !5513

if.then180:                                       ; preds = %if.else177
  %161 = load i32, i32* %blk_size, align 4, !dbg !5517
  %162 = load i32, i32* %buf_offs, align 4, !dbg !5519
  %sub = sub i32 %162, %161, !dbg !5519
  store i32 %sub, i32* %buf_offs, align 4, !dbg !5519
  %163 = load i32, i32* %blk_size, align 4, !dbg !5520
  %conv181 = sext i32 %163 to i64, !dbg !5520
  %164 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5521
  %pitch182 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %164, i32 0, i32 11, !dbg !5522
  %165 = load i64, i64* %pitch182, align 8, !dbg !5522
  %mul = mul nsw i64 %conv181, %165, !dbg !5523
  %166 = load i32, i32* %buf_offs, align 4, !dbg !5524
  %conv183 = zext i32 %166 to i64, !dbg !5524
  %add184 = add nsw i64 %conv183, %mul, !dbg !5524
  %conv185 = trunc i64 %add184 to i32, !dbg !5524
  store i32 %conv185, i32* %buf_offs, align 4, !dbg !5524
  br label %if.end186, !dbg !5525

if.end186:                                        ; preds = %if.then180, %if.else177
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then175
  %167 = load i32, i32* %cbp, align 4, !dbg !5526
  %and188 = and i32 %167, 1, !dbg !5528
  %tobool189 = icmp ne i32 %and188, 0, !dbg !5528
  br i1 %tobool189, label %if.then190, label %if.else196, !dbg !5529

if.then190:                                       ; preds = %if.end187
  %168 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5530
  %169 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5532
  %170 = load void (i16*, i16*, i64, i32)*, void (i16*, i16*, i64, i32)** %mc_with_delta_func, align 8, !dbg !5533
  %171 = load void (i16*, i16*, i16*, i64, i32, i32)*, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_with_delta_func, align 8, !dbg !5534
  %172 = load i32, i32* %mv_x, align 4, !dbg !5535
  %173 = load i32, i32* %mv_y, align 4, !dbg !5536
  %174 = load i32, i32* %mv_x2, align 4, !dbg !5537
  %175 = load i32, i32* %mv_y2, align 4, !dbg !5538
  %176 = load i32, i32* %is_intra, align 4, !dbg !5539
  %177 = load i32, i32* %mc_type, align 4, !dbg !5540
  %178 = load i32, i32* %mc_type2, align 4, !dbg !5541
  %179 = load i32, i32* %quant, align 4, !dbg !5542
  %180 = load i32, i32* %buf_offs, align 4, !dbg !5543
  %181 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5544
  %call191 = call i32 @ivi_decode_coded_blocks(%struct.GetBitContext* %168, %struct.IVIBandDesc* %169, void (i16*, i16*, i64, i32)* %170, void (i16*, i16*, i16*, i64, i32, i32)* %171, i32 %172, i32 %173, i32 %174, i32 %175, i32* %prev_dc, i32 %176, i32 %177, i32 %178, i32 %179, i32 %180, %struct.AVCodecContext* %181), !dbg !5545
  store i32 %call191, i32* %ret, align 4, !dbg !5546
  %182 = load i32, i32* %ret, align 4, !dbg !5547
  %cmp192 = icmp slt i32 %182, 0, !dbg !5549
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !5550

if.then194:                                       ; preds = %if.then190
  %183 = load i32, i32* %ret, align 4, !dbg !5551
  store i32 %183, i32* %retval, align 4, !dbg !5552
  br label %return, !dbg !5552

if.end195:                                        ; preds = %if.then190
  br label %if.end211, !dbg !5553

if.else196:                                       ; preds = %if.end187
  %184 = load i32, i32* %is_intra, align 4, !dbg !5554
  %tobool197 = icmp ne i32 %184, 0, !dbg !5554
  br i1 %tobool197, label %if.then198, label %if.else204, !dbg !5557

if.then198:                                       ; preds = %if.else196
  %185 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5558
  %186 = load i32, i32* %buf_offs, align 4, !dbg !5560
  %187 = load i32, i32* %blk_size, align 4, !dbg !5561
  %call199 = call i32 @ivi_dc_transform(%struct.IVIBandDesc* %185, i32* %prev_dc, i32 %186, i32 %187), !dbg !5562
  store i32 %call199, i32* %ret, align 4, !dbg !5563
  %188 = load i32, i32* %ret, align 4, !dbg !5564
  %cmp200 = icmp slt i32 %188, 0, !dbg !5566
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !5567

if.then202:                                       ; preds = %if.then198
  %189 = load i32, i32* %ret, align 4, !dbg !5568
  store i32 %189, i32* %retval, align 4, !dbg !5569
  br label %return, !dbg !5569

if.end203:                                        ; preds = %if.then198
  br label %if.end210, !dbg !5570

if.else204:                                       ; preds = %if.else196
  %190 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5571
  %191 = load void (i16*, i16*, i64, i32)*, void (i16*, i16*, i64, i32)** %mc_no_delta_func, align 8, !dbg !5573
  %192 = load void (i16*, i16*, i16*, i64, i32, i32)*, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg_no_delta_func, align 8, !dbg !5574
  %193 = load i32, i32* %buf_offs, align 4, !dbg !5575
  %194 = load i32, i32* %mv_x, align 4, !dbg !5576
  %195 = load i32, i32* %mv_y, align 4, !dbg !5577
  %196 = load i32, i32* %mv_x2, align 4, !dbg !5578
  %197 = load i32, i32* %mv_y2, align 4, !dbg !5579
  %198 = load i32, i32* %mc_type, align 4, !dbg !5580
  %199 = load i32, i32* %mc_type2, align 4, !dbg !5581
  %call205 = call i32 @ivi_mc(%struct.IVIBandDesc* %190, void (i16*, i16*, i64, i32)* %191, void (i16*, i16*, i16*, i64, i32, i32)* %192, i32 %193, i32 %194, i32 %195, i32 %196, i32 %197, i32 %198, i32 %199), !dbg !5582
  store i32 %call205, i32* %ret, align 4, !dbg !5583
  %200 = load i32, i32* %ret, align 4, !dbg !5584
  %cmp206 = icmp slt i32 %200, 0, !dbg !5586
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !5587

if.then208:                                       ; preds = %if.else204
  %201 = load i32, i32* %ret, align 4, !dbg !5588
  store i32 %201, i32* %retval, align 4, !dbg !5589
  br label %return, !dbg !5589

if.end209:                                        ; preds = %if.else204
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.end203
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.end195
  %202 = load i32, i32* %cbp, align 4, !dbg !5590
  %shr212 = lshr i32 %202, 1, !dbg !5590
  store i32 %shr212, i32* %cbp, align 4, !dbg !5590
  br label %for.inc, !dbg !5591

for.inc:                                          ; preds = %if.end211
  %203 = load i32, i32* %blk, align 4, !dbg !5592
  %inc = add nsw i32 %203, 1, !dbg !5592
  store i32 %inc, i32* %blk, align 4, !dbg !5592
  br label %for.cond169, !dbg !5594, !llvm.loop !5595

for.end:                                          ; preds = %for.cond169
  br label %for.inc213, !dbg !5597

for.inc213:                                       ; preds = %for.end
  %204 = load %struct.IVIMbInfo*, %struct.IVIMbInfo** %mb, align 8, !dbg !5598
  %incdec.ptr = getelementptr inbounds %struct.IVIMbInfo, %struct.IVIMbInfo* %204, i32 1, !dbg !5598
  store %struct.IVIMbInfo* %incdec.ptr, %struct.IVIMbInfo** %mb, align 8, !dbg !5598
  %205 = load i32, i32* %mbn, align 4, !dbg !5600
  %inc214 = add nsw i32 %205, 1, !dbg !5600
  store i32 %inc214, i32* %mbn, align 4, !dbg !5600
  br label %for.cond, !dbg !5601, !llvm.loop !5602

for.end215:                                       ; preds = %for.cond
  %206 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5604
  %call216 = call i8* @align_get_bits(%struct.GetBitContext* %206), !dbg !5605
  store i32 0, i32* %retval, align 4, !dbg !5606
  br label %return, !dbg !5606

return:                                           ; preds = %for.end215, %if.then208, %if.then202, %if.then194, %if.then165, %if.then100
  %207 = load i32, i32* %retval, align 4, !dbg !5607
  ret i32 %207, !dbg !5607
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #3 !dbg !5608 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5611, metadata !984), !dbg !5612
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5613, metadata !984), !dbg !5614
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5615
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !5616
  %sub = sub nsw i32 0, %call, !dbg !5617
  %and = and i32 %sub, 7, !dbg !5618
  store i32 %and, i32* %n, align 4, !dbg !5614
  %1 = load i32, i32* %n, align 4, !dbg !5619
  %tobool = icmp ne i32 %1, 0, !dbg !5619
  br i1 %tobool, label %if.then, label %if.end, !dbg !5621

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5622
  %3 = load i32, i32* %n, align 4, !dbg !5623
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !5624
  br label %if.end, !dbg !5624

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5625
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !5626
  %5 = load i8*, i8** %buffer, align 8, !dbg !5626
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5627
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !5628
  %7 = load i32, i32* %index, align 8, !dbg !5628
  %shr = ashr i32 %7, 3, !dbg !5629
  %idx.ext = sext i32 %shr to i64, !dbg !5630
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !5630
  ret i8* %add.ptr, !dbg !5631
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivi_scale_mv(i32 %mv, i32 %mv_scale) #3 !dbg !5632 {
entry:
  %mv.addr = alloca i32, align 4
  %mv_scale.addr = alloca i32, align 4
  store i32 %mv, i32* %mv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv.addr, metadata !5635, metadata !984), !dbg !5636
  store i32 %mv_scale, i32* %mv_scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_scale.addr, metadata !5637, metadata !984), !dbg !5638
  %0 = load i32, i32* %mv.addr, align 4, !dbg !5639
  %1 = load i32, i32* %mv.addr, align 4, !dbg !5640
  %cmp = icmp sgt i32 %1, 0, !dbg !5641
  %conv = zext i1 %cmp to i32, !dbg !5641
  %add = add nsw i32 %0, %conv, !dbg !5642
  %2 = load i32, i32* %mv_scale.addr, align 4, !dbg !5643
  %sub = sub nsw i32 %2, 1, !dbg !5644
  %add1 = add nsw i32 %add, %sub, !dbg !5645
  %3 = load i32, i32* %mv_scale.addr, align 4, !dbg !5646
  %shr = ashr i32 %add1, %3, !dbg !5647
  ret i32 %shr, !dbg !5648
}

declare void @ff_ivi_mc_8x8_no_delta(i16*, i16*, i64, i32) #4

declare void @ff_ivi_mc_4x4_no_delta(i16*, i16*, i64, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @ivi_mc(%struct.IVIBandDesc* %band, void (i16*, i16*, i64, i32)* %mc, void (i16*, i16*, i16*, i64, i32, i32)* %mc_avg, i32 %offs, i32 %mv_x, i32 %mv_y, i32 %mv_x2, i32 %mv_y2, i32 %mc_type, i32 %mc_type2) #2 !dbg !5649 {
entry:
  %retval = alloca i32, align 4
  %band.addr = alloca %struct.IVIBandDesc*, align 8
  %mc.addr = alloca void (i16*, i16*, i64, i32)*, align 8
  %mc_avg.addr = alloca void (i16*, i16*, i16*, i64, i32, i32)*, align 8
  %offs.addr = alloca i32, align 4
  %mv_x.addr = alloca i32, align 4
  %mv_y.addr = alloca i32, align 4
  %mv_x2.addr = alloca i32, align 4
  %mv_y2.addr = alloca i32, align 4
  %mc_type.addr = alloca i32, align 4
  %mc_type2.addr = alloca i32, align 4
  %ref_offs = alloca i32, align 4
  %buf_size = alloca i32, align 4
  %min_size = alloca i32, align 4
  %ref_size = alloca i32, align 4
  %ref_offs2 = alloca i32, align 4
  %ref_size2 = alloca i32, align 4
  store %struct.IVIBandDesc* %band, %struct.IVIBandDesc** %band.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band.addr, metadata !5652, metadata !984), !dbg !5653
  store void (i16*, i16*, i64, i32)* %mc, void (i16*, i16*, i64, i32)** %mc.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i64, i32)** %mc.addr, metadata !5654, metadata !984), !dbg !5655
  store void (i16*, i16*, i16*, i64, i32, i32)* %mc_avg, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg.addr, metadata !5656, metadata !984), !dbg !5657
  store i32 %offs, i32* %offs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offs.addr, metadata !5658, metadata !984), !dbg !5659
  store i32 %mv_x, i32* %mv_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_x.addr, metadata !5660, metadata !984), !dbg !5661
  store i32 %mv_y, i32* %mv_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_y.addr, metadata !5662, metadata !984), !dbg !5663
  store i32 %mv_x2, i32* %mv_x2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_x2.addr, metadata !5664, metadata !984), !dbg !5665
  store i32 %mv_y2, i32* %mv_y2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_y2.addr, metadata !5666, metadata !984), !dbg !5667
  store i32 %mc_type, i32* %mc_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mc_type.addr, metadata !5668, metadata !984), !dbg !5669
  store i32 %mc_type2, i32* %mc_type2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mc_type2.addr, metadata !5670, metadata !984), !dbg !5671
  call void @llvm.dbg.declare(metadata i32* %ref_offs, metadata !5672, metadata !984), !dbg !5673
  %0 = load i32, i32* %offs.addr, align 4, !dbg !5674
  %conv = sext i32 %0 to i64, !dbg !5674
  %1 = load i32, i32* %mv_y.addr, align 4, !dbg !5675
  %conv1 = sext i32 %1 to i64, !dbg !5675
  %2 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5676
  %pitch = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %2, i32 0, i32 11, !dbg !5677
  %3 = load i64, i64* %pitch, align 8, !dbg !5677
  %mul = mul nsw i64 %conv1, %3, !dbg !5678
  %add = add nsw i64 %conv, %mul, !dbg !5679
  %4 = load i32, i32* %mv_x.addr, align 4, !dbg !5680
  %conv2 = sext i32 %4 to i64, !dbg !5680
  %add3 = add nsw i64 %add, %conv2, !dbg !5681
  %conv4 = trunc i64 %add3 to i32, !dbg !5674
  store i32 %conv4, i32* %ref_offs, align 4, !dbg !5673
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !5682, metadata !984), !dbg !5683
  %5 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5684
  %pitch5 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %5, i32 0, i32 11, !dbg !5685
  %6 = load i64, i64* %pitch5, align 8, !dbg !5685
  %7 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5686
  %aheight = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %7, i32 0, i32 4, !dbg !5687
  %8 = load i32, i32* %aheight, align 8, !dbg !5687
  %conv6 = sext i32 %8 to i64, !dbg !5686
  %mul7 = mul nsw i64 %6, %conv6, !dbg !5688
  %conv8 = trunc i64 %mul7 to i32, !dbg !5684
  store i32 %conv8, i32* %buf_size, align 4, !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %min_size, metadata !5689, metadata !984), !dbg !5690
  %9 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5691
  %pitch9 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %9, i32 0, i32 11, !dbg !5692
  %10 = load i64, i64* %pitch9, align 8, !dbg !5692
  %11 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5693
  %blk_size = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %11, i32 0, i32 14, !dbg !5694
  %12 = load i32, i32* %blk_size, align 8, !dbg !5694
  %sub = sub nsw i32 %12, 1, !dbg !5695
  %conv10 = sext i32 %sub to i64, !dbg !5696
  %mul11 = mul nsw i64 %10, %conv10, !dbg !5697
  %13 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5698
  %blk_size12 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %13, i32 0, i32 14, !dbg !5699
  %14 = load i32, i32* %blk_size12, align 8, !dbg !5699
  %conv13 = sext i32 %14 to i64, !dbg !5698
  %add14 = add nsw i64 %mul11, %conv13, !dbg !5700
  %conv15 = trunc i64 %add14 to i32, !dbg !5691
  store i32 %conv15, i32* %min_size, align 4, !dbg !5690
  call void @llvm.dbg.declare(metadata i32* %ref_size, metadata !5701, metadata !984), !dbg !5702
  %15 = load i32, i32* %mc_type.addr, align 4, !dbg !5703
  %cmp = icmp sgt i32 %15, 1, !dbg !5704
  %conv16 = zext i1 %cmp to i32, !dbg !5704
  %conv17 = sext i32 %conv16 to i64, !dbg !5705
  %16 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5706
  %pitch18 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %16, i32 0, i32 11, !dbg !5707
  %17 = load i64, i64* %pitch18, align 8, !dbg !5707
  %mul19 = mul nsw i64 %conv17, %17, !dbg !5708
  %18 = load i32, i32* %mc_type.addr, align 4, !dbg !5709
  %and = and i32 %18, 1, !dbg !5710
  %conv20 = sext i32 %and to i64, !dbg !5711
  %add21 = add nsw i64 %mul19, %conv20, !dbg !5712
  %conv22 = trunc i64 %add21 to i32, !dbg !5705
  store i32 %conv22, i32* %ref_size, align 4, !dbg !5702
  %19 = load i32, i32* %mc_type.addr, align 4, !dbg !5713
  %cmp23 = icmp ne i32 %19, -1, !dbg !5715
  br i1 %cmp23, label %if.then, label %if.end46, !dbg !5716

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5717, !llvm.loop !5719

do.body:                                          ; preds = %if.then
  %20 = load i32, i32* %offs.addr, align 4, !dbg !5720
  %cmp25 = icmp sge i32 %20, 0, !dbg !5724
  br i1 %cmp25, label %land.lhs.true, label %if.then30, !dbg !5725

land.lhs.true:                                    ; preds = %do.body
  %21 = load i32, i32* %ref_offs, align 4, !dbg !5726
  %cmp27 = icmp sge i32 %21, 0, !dbg !5728
  br i1 %cmp27, label %land.lhs.true29, label %if.then30, !dbg !5729

land.lhs.true29:                                  ; preds = %land.lhs.true
  %22 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5730
  %ref_buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %22, i32 0, i32 8, !dbg !5732
  %23 = load i16*, i16** %ref_buf, align 8, !dbg !5732
  %tobool = icmp ne i16* %23, null, !dbg !5730
  br i1 %tobool, label %if.end, label %if.then30, !dbg !5733

if.then30:                                        ; preds = %land.lhs.true29, %land.lhs.true, %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i32 92), !dbg !5734
  call void @abort() #10, !dbg !5737
  unreachable, !dbg !5739

if.end:                                           ; preds = %land.lhs.true29
  br label %do.end, !dbg !5740

do.end:                                           ; preds = %if.end
  br label %do.body31, !dbg !5742, !llvm.loop !5743

do.body31:                                        ; preds = %do.end
  %24 = load i32, i32* %buf_size, align 4, !dbg !5744
  %25 = load i32, i32* %min_size, align 4, !dbg !5748
  %sub32 = sub nsw i32 %24, %25, !dbg !5749
  %26 = load i32, i32* %offs.addr, align 4, !dbg !5750
  %cmp33 = icmp sge i32 %sub32, %26, !dbg !5751
  br i1 %cmp33, label %if.end36, label %if.then35, !dbg !5752

if.then35:                                        ; preds = %do.body31
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i32 93), !dbg !5753
  call void @abort() #10, !dbg !5756
  unreachable, !dbg !5758

if.end36:                                         ; preds = %do.body31
  br label %do.end37, !dbg !5759

do.end37:                                         ; preds = %if.end36
  br label %do.body38, !dbg !5761, !llvm.loop !5762

do.body38:                                        ; preds = %do.end37
  %27 = load i32, i32* %buf_size, align 4, !dbg !5763
  %28 = load i32, i32* %min_size, align 4, !dbg !5767
  %sub39 = sub nsw i32 %27, %28, !dbg !5768
  %29 = load i32, i32* %ref_size, align 4, !dbg !5769
  %sub40 = sub nsw i32 %sub39, %29, !dbg !5770
  %30 = load i32, i32* %ref_offs, align 4, !dbg !5771
  %cmp41 = icmp sge i32 %sub40, %30, !dbg !5772
  br i1 %cmp41, label %if.end44, label %if.then43, !dbg !5773

if.then43:                                        ; preds = %do.body38
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i32 94), !dbg !5774
  call void @abort() #10, !dbg !5777
  unreachable, !dbg !5779

if.end44:                                         ; preds = %do.body38
  br label %do.end45, !dbg !5780

do.end45:                                         ; preds = %if.end44
  br label %if.end46, !dbg !5782

if.end46:                                         ; preds = %do.end45, %entry
  %31 = load i32, i32* %mc_type2.addr, align 4, !dbg !5783
  %cmp47 = icmp eq i32 %31, -1, !dbg !5785
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !5786

if.then49:                                        ; preds = %if.end46
  %32 = load void (i16*, i16*, i64, i32)*, void (i16*, i16*, i64, i32)** %mc.addr, align 8, !dbg !5787
  %33 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5789
  %buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %33, i32 0, i32 7, !dbg !5790
  %34 = load i16*, i16** %buf, align 8, !dbg !5790
  %35 = load i32, i32* %offs.addr, align 4, !dbg !5791
  %idx.ext = sext i32 %35 to i64, !dbg !5792
  %add.ptr = getelementptr inbounds i16, i16* %34, i64 %idx.ext, !dbg !5792
  %36 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5793
  %ref_buf50 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %36, i32 0, i32 8, !dbg !5794
  %37 = load i16*, i16** %ref_buf50, align 8, !dbg !5794
  %38 = load i32, i32* %ref_offs, align 4, !dbg !5795
  %idx.ext51 = sext i32 %38 to i64, !dbg !5796
  %add.ptr52 = getelementptr inbounds i16, i16* %37, i64 %idx.ext51, !dbg !5796
  %39 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5797
  %pitch53 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %39, i32 0, i32 11, !dbg !5798
  %40 = load i64, i64* %pitch53, align 8, !dbg !5798
  %41 = load i32, i32* %mc_type.addr, align 4, !dbg !5799
  call void %32(i16* %add.ptr, i16* %add.ptr52, i64 %40, i32 %41), !dbg !5787
  br label %if.end107, !dbg !5800

if.else:                                          ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %ref_offs2, metadata !5801, metadata !984), !dbg !5803
  %42 = load i32, i32* %offs.addr, align 4, !dbg !5804
  %conv54 = sext i32 %42 to i64, !dbg !5804
  %43 = load i32, i32* %mv_y2.addr, align 4, !dbg !5805
  %conv55 = sext i32 %43 to i64, !dbg !5805
  %44 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5806
  %pitch56 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %44, i32 0, i32 11, !dbg !5807
  %45 = load i64, i64* %pitch56, align 8, !dbg !5807
  %mul57 = mul nsw i64 %conv55, %45, !dbg !5808
  %add58 = add nsw i64 %conv54, %mul57, !dbg !5809
  %46 = load i32, i32* %mv_x2.addr, align 4, !dbg !5810
  %conv59 = sext i32 %46 to i64, !dbg !5810
  %add60 = add nsw i64 %add58, %conv59, !dbg !5811
  %conv61 = trunc i64 %add60 to i32, !dbg !5804
  store i32 %conv61, i32* %ref_offs2, align 4, !dbg !5803
  call void @llvm.dbg.declare(metadata i32* %ref_size2, metadata !5812, metadata !984), !dbg !5813
  %47 = load i32, i32* %mc_type2.addr, align 4, !dbg !5814
  %cmp62 = icmp sgt i32 %47, 1, !dbg !5815
  %conv63 = zext i1 %cmp62 to i32, !dbg !5815
  %conv64 = sext i32 %conv63 to i64, !dbg !5816
  %48 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5817
  %pitch65 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %48, i32 0, i32 11, !dbg !5818
  %49 = load i64, i64* %pitch65, align 8, !dbg !5818
  %mul66 = mul nsw i64 %conv64, %49, !dbg !5819
  %50 = load i32, i32* %mc_type2.addr, align 4, !dbg !5820
  %and67 = and i32 %50, 1, !dbg !5821
  %conv68 = sext i32 %and67 to i64, !dbg !5822
  %add69 = add nsw i64 %mul66, %conv68, !dbg !5823
  %conv70 = trunc i64 %add69 to i32, !dbg !5816
  store i32 %conv70, i32* %ref_size2, align 4, !dbg !5813
  %51 = load i32, i32* %offs.addr, align 4, !dbg !5824
  %cmp71 = icmp slt i32 %51, 0, !dbg !5826
  br i1 %cmp71, label %if.then77, label %lor.lhs.false, !dbg !5827

lor.lhs.false:                                    ; preds = %if.else
  %52 = load i32, i32* %ref_offs2, align 4, !dbg !5828
  %cmp73 = icmp slt i32 %52, 0, !dbg !5830
  br i1 %cmp73, label %if.then77, label %lor.lhs.false75, !dbg !5831

lor.lhs.false75:                                  ; preds = %lor.lhs.false
  %53 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5832
  %b_ref_buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %53, i32 0, i32 9, !dbg !5834
  %54 = load i16*, i16** %b_ref_buf, align 8, !dbg !5834
  %tobool76 = icmp ne i16* %54, null, !dbg !5832
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !5835

if.then77:                                        ; preds = %lor.lhs.false75, %lor.lhs.false, %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !5836
  br label %return, !dbg !5836

if.end78:                                         ; preds = %lor.lhs.false75
  %55 = load i32, i32* %buf_size, align 4, !dbg !5837
  %56 = load i32, i32* %min_size, align 4, !dbg !5839
  %sub79 = sub nsw i32 %55, %56, !dbg !5840
  %57 = load i32, i32* %ref_size2, align 4, !dbg !5841
  %sub80 = sub nsw i32 %sub79, %57, !dbg !5842
  %58 = load i32, i32* %ref_offs2, align 4, !dbg !5843
  %cmp81 = icmp slt i32 %sub80, %58, !dbg !5844
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !5845

if.then83:                                        ; preds = %if.end78
  store i32 -1094995529, i32* %retval, align 4, !dbg !5846
  br label %return, !dbg !5846

if.end84:                                         ; preds = %if.end78
  %59 = load i32, i32* %mc_type.addr, align 4, !dbg !5847
  %cmp85 = icmp eq i32 %59, -1, !dbg !5849
  br i1 %cmp85, label %if.then87, label %if.else95, !dbg !5850

if.then87:                                        ; preds = %if.end84
  %60 = load void (i16*, i16*, i64, i32)*, void (i16*, i16*, i64, i32)** %mc.addr, align 8, !dbg !5851
  %61 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5852
  %buf88 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %61, i32 0, i32 7, !dbg !5853
  %62 = load i16*, i16** %buf88, align 8, !dbg !5853
  %63 = load i32, i32* %offs.addr, align 4, !dbg !5854
  %idx.ext89 = sext i32 %63 to i64, !dbg !5855
  %add.ptr90 = getelementptr inbounds i16, i16* %62, i64 %idx.ext89, !dbg !5855
  %64 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5856
  %b_ref_buf91 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %64, i32 0, i32 9, !dbg !5857
  %65 = load i16*, i16** %b_ref_buf91, align 8, !dbg !5857
  %66 = load i32, i32* %ref_offs2, align 4, !dbg !5858
  %idx.ext92 = sext i32 %66 to i64, !dbg !5859
  %add.ptr93 = getelementptr inbounds i16, i16* %65, i64 %idx.ext92, !dbg !5859
  %67 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5860
  %pitch94 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %67, i32 0, i32 11, !dbg !5861
  %68 = load i64, i64* %pitch94, align 8, !dbg !5861
  %69 = load i32, i32* %mc_type2.addr, align 4, !dbg !5862
  call void %60(i16* %add.ptr90, i16* %add.ptr93, i64 %68, i32 %69), !dbg !5851
  br label %if.end106, !dbg !5851

if.else95:                                        ; preds = %if.end84
  %70 = load void (i16*, i16*, i16*, i64, i32, i32)*, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg.addr, align 8, !dbg !5863
  %71 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5864
  %buf96 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %71, i32 0, i32 7, !dbg !5865
  %72 = load i16*, i16** %buf96, align 8, !dbg !5865
  %73 = load i32, i32* %offs.addr, align 4, !dbg !5866
  %idx.ext97 = sext i32 %73 to i64, !dbg !5867
  %add.ptr98 = getelementptr inbounds i16, i16* %72, i64 %idx.ext97, !dbg !5867
  %74 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5868
  %ref_buf99 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %74, i32 0, i32 8, !dbg !5869
  %75 = load i16*, i16** %ref_buf99, align 8, !dbg !5869
  %76 = load i32, i32* %ref_offs, align 4, !dbg !5870
  %idx.ext100 = sext i32 %76 to i64, !dbg !5871
  %add.ptr101 = getelementptr inbounds i16, i16* %75, i64 %idx.ext100, !dbg !5871
  %77 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5872
  %b_ref_buf102 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %77, i32 0, i32 9, !dbg !5873
  %78 = load i16*, i16** %b_ref_buf102, align 8, !dbg !5873
  %79 = load i32, i32* %ref_offs2, align 4, !dbg !5874
  %idx.ext103 = sext i32 %79 to i64, !dbg !5875
  %add.ptr104 = getelementptr inbounds i16, i16* %78, i64 %idx.ext103, !dbg !5875
  %80 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !5876
  %pitch105 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %80, i32 0, i32 11, !dbg !5877
  %81 = load i64, i64* %pitch105, align 8, !dbg !5877
  %82 = load i32, i32* %mc_type.addr, align 4, !dbg !5878
  %83 = load i32, i32* %mc_type2.addr, align 4, !dbg !5879
  call void %70(i16* %add.ptr98, i16* %add.ptr101, i16* %add.ptr104, i64 %81, i32 %82, i32 %83), !dbg !5863
  br label %if.end106

if.end106:                                        ; preds = %if.else95, %if.then87
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then49
  store i32 0, i32* %retval, align 4, !dbg !5880
  br label %return, !dbg !5880

return:                                           ; preds = %if.end107, %if.then83, %if.then77
  %84 = load i32, i32* %retval, align 4, !dbg !5881
  ret i32 %84, !dbg !5881
}

; Function Attrs: noreturn nounwind
declare void @abort() #8

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #3 !dbg !5882 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5883, metadata !984), !dbg !5884
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5885, metadata !984), !dbg !5886
  %0 = load i32, i32* %n.addr, align 4, !dbg !5887
  %tobool = icmp ne i32 %0, 0, !dbg !5887
  br i1 %tobool, label %if.else, label %if.then, !dbg !5889

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !5892
  %cmp = icmp sle i32 %1, 25, !dbg !5894
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !5895

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5896
  %3 = load i32, i32* %n.addr, align 4, !dbg !5898
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !5899
  store i32 %call, i32* %retval, align 4, !dbg !5900
  br label %return, !dbg !5900

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5901, metadata !984), !dbg !5903
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5904
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !5905
  store i32 %call3, i32* %ret, align 4, !dbg !5903
  %5 = load i32, i32* %ret, align 4, !dbg !5906
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5907
  %7 = load i32, i32* %n.addr, align 4, !dbg !5908
  %sub = sub nsw i32 %7, 16, !dbg !5909
  %call4 = call i32 @get_bits(%struct.GetBitContext* %6, i32 %sub), !dbg !5910
  %shl = shl i32 %call4, 16, !dbg !5911
  %or = or i32 %5, %shl, !dbg !5912
  store i32 %or, i32* %retval, align 4, !dbg !5913
  br label %return, !dbg !5913

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !5914
  ret i32 %8, !dbg !5914
}

declare void @ff_ivi_mc_8x8_delta(i16*, i16*, i64, i32) #4

declare void @ff_ivi_mc_avg_8x8_delta(i16*, i16*, i16*, i64, i32, i32) #4

declare void @ff_ivi_mc_avg_8x8_no_delta(i16*, i16*, i16*, i64, i32, i32) #4

declare void @ff_ivi_mc_4x4_delta(i16*, i16*, i64, i32) #4

declare void @ff_ivi_mc_avg_4x4_delta(i16*, i16*, i16*, i64, i32, i32) #4

declare void @ff_ivi_mc_avg_4x4_no_delta(i16*, i16*, i16*, i64, i32, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @ivi_decode_coded_blocks(%struct.GetBitContext* %gb, %struct.IVIBandDesc* %band, void (i16*, i16*, i64, i32)* %mc, void (i16*, i16*, i16*, i64, i32, i32)* %mc_avg, i32 %mv_x, i32 %mv_y, i32 %mv_x2, i32 %mv_y2, i32* %prev_dc, i32 %is_intra, i32 %mc_type, i32 %mc_type2, i32 %quant, i32 %offs, %struct.AVCodecContext* %avctx) #2 !dbg !5915 {
entry:
  %s.addr.i336 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i336, metadata !5918, metadata !984), !dbg !5922
  %table.addr.i337 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i337, metadata !5927, metadata !984), !dbg !5928
  %bits.addr.i338 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i338, metadata !5929, metadata !984), !dbg !5930
  %max_depth.addr.i339 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i339, metadata !5931, metadata !984), !dbg !5932
  %code.i340 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i340, metadata !5933, metadata !984), !dbg !5934
  %re_index.i341 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i341, metadata !5935, metadata !984), !dbg !5936
  %re_cache.i342 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i342, metadata !5937, metadata !984), !dbg !5938
  %re_size_plus8.i343 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i343, metadata !5939, metadata !984), !dbg !5940
  %n.i344 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i344, metadata !5941, metadata !984), !dbg !5943
  %nb_bits.i345 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i345, metadata !5944, metadata !984), !dbg !5945
  %index2.i346 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i346, metadata !5946, metadata !984), !dbg !5947
  %s.addr.i238 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i238, metadata !5918, metadata !984), !dbg !5948
  %table.addr.i239 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i239, metadata !5927, metadata !984), !dbg !5950
  %bits.addr.i240 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i240, metadata !5929, metadata !984), !dbg !5951
  %max_depth.addr.i241 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i241, metadata !5931, metadata !984), !dbg !5952
  %code.i242 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i242, metadata !5933, metadata !984), !dbg !5953
  %re_index.i243 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i243, metadata !5935, metadata !984), !dbg !5954
  %re_cache.i244 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i244, metadata !5937, metadata !984), !dbg !5955
  %re_size_plus8.i245 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i245, metadata !5939, metadata !984), !dbg !5956
  %n.i246 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i246, metadata !5941, metadata !984), !dbg !5957
  %nb_bits.i247 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i247, metadata !5944, metadata !984), !dbg !5958
  %index2.i248 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i248, metadata !5946, metadata !984), !dbg !5959
  %s.addr.i140 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i140, metadata !5918, metadata !984), !dbg !5960
  %table.addr.i141 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i141, metadata !5927, metadata !984), !dbg !5962
  %bits.addr.i142 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i142, metadata !5929, metadata !984), !dbg !5963
  %max_depth.addr.i143 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i143, metadata !5931, metadata !984), !dbg !5964
  %code.i144 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i144, metadata !5933, metadata !984), !dbg !5965
  %re_index.i145 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i145, metadata !5935, metadata !984), !dbg !5966
  %re_cache.i146 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i146, metadata !5937, metadata !984), !dbg !5967
  %re_size_plus8.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i147, metadata !5939, metadata !984), !dbg !5968
  %n.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i148, metadata !5941, metadata !984), !dbg !5969
  %nb_bits.i149 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i149, metadata !5944, metadata !984), !dbg !5970
  %index2.i150 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i150, metadata !5946, metadata !984), !dbg !5971
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5918, metadata !984), !dbg !5972
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5927, metadata !984), !dbg !5974
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5929, metadata !984), !dbg !5975
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5931, metadata !984), !dbg !5976
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5933, metadata !984), !dbg !5977
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5935, metadata !984), !dbg !5978
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5937, metadata !984), !dbg !5979
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5939, metadata !984), !dbg !5980
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5941, metadata !984), !dbg !5981
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5944, metadata !984), !dbg !5982
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !5946, metadata !984), !dbg !5983
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %band.addr = alloca %struct.IVIBandDesc*, align 8
  %mc.addr = alloca void (i16*, i16*, i64, i32)*, align 8
  %mc_avg.addr = alloca void (i16*, i16*, i16*, i64, i32, i32)*, align 8
  %mv_x.addr = alloca i32, align 4
  %mv_y.addr = alloca i32, align 4
  %mv_x2.addr = alloca i32, align 4
  %mv_y2.addr = alloca i32, align 4
  %prev_dc.addr = alloca i32*, align 8
  %is_intra.addr = alloca i32, align 4
  %mc_type.addr = alloca i32, align 4
  %mc_type2.addr = alloca i32, align 4
  %quant.addr = alloca i32, align 4
  %offs.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %base_tab = alloca i16*, align 8
  %rvmap = alloca %struct.RVMapDesc*, align 8
  %col_flags = alloca [8 x i8], align 1
  %trvec = alloca [64 x i32], align 16
  %sym = alloca i32, align 4
  %lo = alloca i32, align 4
  %hi = alloca i32, align 4
  %q = alloca i32, align 4
  %pos = alloca i32, align 4
  %run = alloca i32, align 4
  %val = alloca i32, align 4
  %blk_size = alloca i32, align 4
  %num_coeffs = alloca i32, align 4
  %col_mask = alloca i32, align 4
  %scan_pos = alloca i32, align 4
  %min_size = alloca i32, align 4
  %buf_size = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5984, metadata !984), !dbg !5985
  store %struct.IVIBandDesc* %band, %struct.IVIBandDesc** %band.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band.addr, metadata !5986, metadata !984), !dbg !5987
  store void (i16*, i16*, i64, i32)* %mc, void (i16*, i16*, i64, i32)** %mc.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i64, i32)** %mc.addr, metadata !5988, metadata !984), !dbg !5989
  store void (i16*, i16*, i16*, i64, i32, i32)* %mc_avg, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg.addr, align 8
  call void @llvm.dbg.declare(metadata void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg.addr, metadata !5990, metadata !984), !dbg !5991
  store i32 %mv_x, i32* %mv_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_x.addr, metadata !5992, metadata !984), !dbg !5993
  store i32 %mv_y, i32* %mv_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_y.addr, metadata !5994, metadata !984), !dbg !5995
  store i32 %mv_x2, i32* %mv_x2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_x2.addr, metadata !5996, metadata !984), !dbg !5997
  store i32 %mv_y2, i32* %mv_y2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mv_y2.addr, metadata !5998, metadata !984), !dbg !5999
  store i32* %prev_dc, i32** %prev_dc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %prev_dc.addr, metadata !6000, metadata !984), !dbg !6001
  store i32 %is_intra, i32* %is_intra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_intra.addr, metadata !6002, metadata !984), !dbg !6003
  store i32 %mc_type, i32* %mc_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mc_type.addr, metadata !6004, metadata !984), !dbg !6005
  store i32 %mc_type2, i32* %mc_type2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mc_type2.addr, metadata !6006, metadata !984), !dbg !6007
  store i32 %quant, i32* %quant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quant.addr, metadata !6008, metadata !984), !dbg !6009
  store i32 %offs, i32* %offs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offs.addr, metadata !6010, metadata !984), !dbg !6011
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6012, metadata !984), !dbg !6013
  call void @llvm.dbg.declare(metadata i16** %base_tab, metadata !6014, metadata !984), !dbg !6015
  %0 = load i32, i32* %is_intra.addr, align 4, !dbg !6016
  %tobool = icmp ne i32 %0, 0, !dbg !6016
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6016

cond.true:                                        ; preds = %entry
  %1 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6017
  %intra_base = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %1, i32 0, i32 37, !dbg !6019
  %2 = load i16*, i16** %intra_base, align 8, !dbg !6019
  br label %cond.end, !dbg !6020

cond.false:                                       ; preds = %entry
  %3 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6021
  %inter_base = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %3, i32 0, i32 38, !dbg !6023
  %4 = load i16*, i16** %inter_base, align 8, !dbg !6023
  br label %cond.end, !dbg !6024

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !6025
  store i16* %cond, i16** %base_tab, align 8, !dbg !6027
  call void @llvm.dbg.declare(metadata %struct.RVMapDesc** %rvmap, metadata !6028, metadata !984), !dbg !6029
  %5 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6030
  %rv_map = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %5, i32 0, i32 27, !dbg !6031
  %6 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rv_map, align 8, !dbg !6031
  store %struct.RVMapDesc* %6, %struct.RVMapDesc** %rvmap, align 8, !dbg !6029
  call void @llvm.dbg.declare(metadata [8 x i8]* %col_flags, metadata !6032, metadata !984), !dbg !6034
  call void @llvm.dbg.declare(metadata [64 x i32]* %trvec, metadata !6035, metadata !984), !dbg !6037
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !6038, metadata !984), !dbg !6039
  store i32 0, i32* %sym, align 4, !dbg !6039
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !6040, metadata !984), !dbg !6041
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !6042, metadata !984), !dbg !6043
  call void @llvm.dbg.declare(metadata i32* %q, metadata !6044, metadata !984), !dbg !6045
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6046, metadata !984), !dbg !6047
  call void @llvm.dbg.declare(metadata i32* %run, metadata !6048, metadata !984), !dbg !6049
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6050, metadata !984), !dbg !6051
  call void @llvm.dbg.declare(metadata i32* %blk_size, metadata !6052, metadata !984), !dbg !6053
  %7 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6054
  %blk_size1 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %7, i32 0, i32 14, !dbg !6055
  %8 = load i32, i32* %blk_size1, align 8, !dbg !6055
  store i32 %8, i32* %blk_size, align 4, !dbg !6053
  call void @llvm.dbg.declare(metadata i32* %num_coeffs, metadata !6056, metadata !984), !dbg !6057
  %9 = load i32, i32* %blk_size, align 4, !dbg !6058
  %10 = load i32, i32* %blk_size, align 4, !dbg !6059
  %mul = mul nsw i32 %9, %10, !dbg !6060
  store i32 %mul, i32* %num_coeffs, align 4, !dbg !6057
  call void @llvm.dbg.declare(metadata i32* %col_mask, metadata !6061, metadata !984), !dbg !6062
  %11 = load i32, i32* %blk_size, align 4, !dbg !6063
  %sub = sub nsw i32 %11, 1, !dbg !6064
  store i32 %sub, i32* %col_mask, align 4, !dbg !6062
  call void @llvm.dbg.declare(metadata i32* %scan_pos, metadata !6065, metadata !984), !dbg !6066
  store i32 -1, i32* %scan_pos, align 4, !dbg !6066
  call void @llvm.dbg.declare(metadata i32* %min_size, metadata !6067, metadata !984), !dbg !6068
  %12 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6069
  %pitch = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %12, i32 0, i32 11, !dbg !6070
  %13 = load i64, i64* %pitch, align 8, !dbg !6070
  %14 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6071
  %transform_size = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %14, i32 0, i32 31, !dbg !6072
  %15 = load i32, i32* %transform_size, align 8, !dbg !6072
  %sub2 = sub nsw i32 %15, 1, !dbg !6073
  %conv = sext i32 %sub2 to i64, !dbg !6074
  %mul3 = mul nsw i64 %13, %conv, !dbg !6075
  %16 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6076
  %transform_size4 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %16, i32 0, i32 31, !dbg !6077
  %17 = load i32, i32* %transform_size4, align 8, !dbg !6077
  %conv5 = sext i32 %17 to i64, !dbg !6076
  %add = add nsw i64 %mul3, %conv5, !dbg !6078
  %conv6 = trunc i64 %add to i32, !dbg !6069
  store i32 %conv6, i32* %min_size, align 4, !dbg !6068
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !6079, metadata !984), !dbg !6080
  %18 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6081
  %pitch7 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %18, i32 0, i32 11, !dbg !6082
  %19 = load i64, i64* %pitch7, align 8, !dbg !6082
  %20 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6083
  %aheight = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %20, i32 0, i32 4, !dbg !6084
  %21 = load i32, i32* %aheight, align 8, !dbg !6084
  %conv8 = sext i32 %21 to i64, !dbg !6083
  %mul9 = mul nsw i64 %19, %conv8, !dbg !6085
  %22 = load i32, i32* %offs.addr, align 4, !dbg !6086
  %conv10 = sext i32 %22 to i64, !dbg !6086
  %sub11 = sub nsw i64 %mul9, %conv10, !dbg !6087
  %conv12 = trunc i64 %sub11 to i32, !dbg !6081
  store i32 %conv12, i32* %buf_size, align 4, !dbg !6080
  %23 = load i32, i32* %min_size, align 4, !dbg !6088
  %24 = load i32, i32* %buf_size, align 4, !dbg !6090
  %cmp = icmp sgt i32 %23, %24, !dbg !6091
  br i1 %cmp, label %if.then, label %if.end, !dbg !6092

if.then:                                          ; preds = %cond.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !6093
  br label %return, !dbg !6093

if.end:                                           ; preds = %cond.end
  %25 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6094
  %scan = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %25, i32 0, i32 21, !dbg !6096
  %26 = load i8*, i8** %scan, align 8, !dbg !6096
  %tobool14 = icmp ne i8* %26, null, !dbg !6094
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6097

if.then15:                                        ; preds = %if.end
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6098
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !6098
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0)), !dbg !6100
  store i32 -1094995529, i32* %retval, align 4, !dbg !6101
  br label %return, !dbg !6101

if.end16:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %trvec, i32 0, i32 0, !dbg !6102
  %29 = bitcast i32* %arraydecay to i8*, !dbg !6102
  %30 = load i32, i32* %num_coeffs, align 4, !dbg !6103
  %conv17 = sext i32 %30 to i64, !dbg !6103
  %mul18 = mul i64 %conv17, 4, !dbg !6104
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 %mul18, i32 16, i1 false), !dbg !6102
  %arraydecay19 = getelementptr inbounds [8 x i8], [8 x i8]* %col_flags, i32 0, i32 0, !dbg !6105
  call void @llvm.memset.p0i8.i64(i8* %arraydecay19, i8 0, i64 8, i32 1, i1 false), !dbg !6105
  br label %while.cond, !dbg !6106

while.cond:                                       ; preds = %if.end88, %if.end16
  %31 = load i32, i32* %scan_pos, align 4, !dbg !6107
  %32 = load i32, i32* %num_coeffs, align 4, !dbg !6108
  %cmp20 = icmp sle i32 %31, %32, !dbg !6109
  br i1 %cmp20, label %while.body, label %while.end, !dbg !6110

while.body:                                       ; preds = %while.cond
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6111
  %34 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6112
  %blk_vlc = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %34, i32 0, i32 23, !dbg !6113
  %tab = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc, i32 0, i32 1, !dbg !6114
  %35 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !6114
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %35, i32 0, i32 1, !dbg !6115
  %36 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !6115
  store %struct.GetBitContext* %33, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6116
  store [2 x i16]* %36, [2 x i16]** %table.addr.i, align 8, !dbg !6116
  store i32 13, i32* %bits.addr.i, align 4, !dbg !6116
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !6116
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6117
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %37, i32 0, i32 2, !dbg !6118
  %38 = load i32, i32* %index.i, align 8, !dbg !6118
  store i32 %38, i32* %re_index.i, align 4, !dbg !5978
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6119
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %39, i32 0, i32 4, !dbg !6120
  %40 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !6120
  store i32 %40, i32* %re_size_plus8.i, align 4, !dbg !5980
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6121
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %41, i32 0, i32 0, !dbg !6122
  %42 = load i8*, i8** %buffer.i, align 8, !dbg !6122
  %43 = load i32, i32* %re_index.i, align 4, !dbg !6123
  %shr.i = lshr i32 %43, 3, !dbg !6124
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !6125
  %add.ptr.i = getelementptr inbounds i8, i8* %42, i64 %idx.ext.i, !dbg !6125
  %44 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !6126
  %l.i = bitcast %union.unaligned_32* %44 to i32*, !dbg !6126
  %45 = load i32, i32* %l.i, align 1, !dbg !6126
  %46 = load i32, i32* %re_index.i, align 4, !dbg !6127
  %and.i = and i32 %46, 7, !dbg !6128
  %shr1.i = lshr i32 %45, %and.i, !dbg !6129
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !6130
  %47 = load i32, i32* %re_cache.i, align 4, !dbg !6131
  %48 = load i32, i32* %bits.addr.i, align 4, !dbg !6133
  %call.i = call i32 @zero_extend(i32 %47, i32 %48) #1, !dbg !6134
  store i32 %call.i, i32* %index2.i, align 4, !dbg !6135
  %49 = load i32, i32* %index2.i, align 4, !dbg !6136
  %idxprom.i = zext i32 %49 to i64, !dbg !6137
  %50 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6137
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %50, i64 %idxprom.i, !dbg !6137
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !6137
  %51 = load i16, i16* %arrayidx3.i, align 2, !dbg !6137
  %conv.i = sext i16 %51 to i32, !dbg !6137
  store i32 %conv.i, i32* %code.i, align 4, !dbg !6138
  %52 = load i32, i32* %index2.i, align 4, !dbg !6139
  %idxprom4.i = zext i32 %52 to i64, !dbg !6140
  %53 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6140
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %53, i64 %idxprom4.i, !dbg !6140
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !6140
  %54 = load i16, i16* %arrayidx6.i, align 2, !dbg !6140
  %conv7.i = sext i16 %54 to i32, !dbg !6140
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !6141
  %55 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6142
  %cmp.i = icmp sgt i32 %55, 1, !dbg !6143
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !6144

land.lhs.true.i:                                  ; preds = %while.body
  %56 = load i32, i32* %n.i, align 4, !dbg !6145
  %cmp9.i = icmp slt i32 %56, 0, !dbg !6148
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !6149

if.then.i:                                        ; preds = %land.lhs.true.i
  %57 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6150
  %58 = load i32, i32* %re_index.i, align 4, !dbg !6153
  %59 = load i32, i32* %bits.addr.i, align 4, !dbg !6154
  %add.i = add i32 %58, %59, !dbg !6155
  %cmp11.i = icmp ugt i32 %57, %add.i, !dbg !6156
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !6157

cond.true.i:                                      ; preds = %if.then.i
  %60 = load i32, i32* %re_index.i, align 4, !dbg !6158
  %61 = load i32, i32* %bits.addr.i, align 4, !dbg !6160
  %add13.i = add i32 %60, %61, !dbg !6161
  br label %cond.end.i, !dbg !6162

cond.false.i:                                     ; preds = %if.then.i
  %62 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6163
  br label %cond.end.i, !dbg !6165

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %62, %cond.false.i ], !dbg !6166
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !6168
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6169
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %63, i32 0, i32 0, !dbg !6170
  %64 = load i8*, i8** %buffer14.i, align 8, !dbg !6170
  %65 = load i32, i32* %re_index.i, align 4, !dbg !6171
  %shr15.i = lshr i32 %65, 3, !dbg !6172
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !6173
  %add.ptr17.i = getelementptr inbounds i8, i8* %64, i64 %idx.ext16.i, !dbg !6173
  %66 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !6174
  %l18.i = bitcast %union.unaligned_32* %66 to i32*, !dbg !6174
  %67 = load i32, i32* %l18.i, align 1, !dbg !6174
  %68 = load i32, i32* %re_index.i, align 4, !dbg !6175
  %and19.i = and i32 %68, 7, !dbg !6176
  %shr20.i = lshr i32 %67, %and19.i, !dbg !6177
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !6178
  %69 = load i32, i32* %n.i, align 4, !dbg !6179
  %sub.i = sub nsw i32 0, %69, !dbg !6180
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !6181
  %70 = load i32, i32* %re_cache.i, align 4, !dbg !6182
  %71 = load i32, i32* %nb_bits.i, align 4, !dbg !6183
  %call21.i = call i32 @zero_extend(i32 %70, i32 %71) #1, !dbg !6184
  %72 = load i32, i32* %code.i, align 4, !dbg !6185
  %add22.i = add i32 %call21.i, %72, !dbg !6186
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !6187
  %73 = load i32, i32* %index2.i, align 4, !dbg !6188
  %idxprom23.i = zext i32 %73 to i64, !dbg !6189
  %74 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6189
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %74, i64 %idxprom23.i, !dbg !6189
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !6189
  %75 = load i16, i16* %arrayidx25.i, align 2, !dbg !6189
  %conv26.i = sext i16 %75 to i32, !dbg !6189
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !6190
  %76 = load i32, i32* %index2.i, align 4, !dbg !6191
  %idxprom27.i = zext i32 %76 to i64, !dbg !6192
  %77 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6192
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %77, i64 %idxprom27.i, !dbg !6192
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !6192
  %78 = load i16, i16* %arrayidx29.i, align 2, !dbg !6192
  %conv30.i = sext i16 %78 to i32, !dbg !6192
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !6193
  %79 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6194
  %cmp31.i = icmp sgt i32 %79, 2, !dbg !6195
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !6196

land.lhs.true33.i:                                ; preds = %cond.end.i
  %80 = load i32, i32* %n.i, align 4, !dbg !6197
  %cmp34.i = icmp slt i32 %80, 0, !dbg !6200
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !6201

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %81 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6202
  %82 = load i32, i32* %re_index.i, align 4, !dbg !6205
  %83 = load i32, i32* %nb_bits.i, align 4, !dbg !6206
  %add37.i = add i32 %82, %83, !dbg !6207
  %cmp38.i = icmp ugt i32 %81, %add37.i, !dbg !6208
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !6209

cond.true40.i:                                    ; preds = %if.then36.i
  %84 = load i32, i32* %re_index.i, align 4, !dbg !6210
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !6212
  %add41.i = add i32 %84, %85, !dbg !6213
  br label %cond.end43.i, !dbg !6214

cond.false42.i:                                   ; preds = %if.then36.i
  %86 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6215
  br label %cond.end43.i, !dbg !6217

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %86, %cond.false42.i ], !dbg !6218
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !6220
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6221
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %87, i32 0, i32 0, !dbg !6222
  %88 = load i8*, i8** %buffer45.i, align 8, !dbg !6222
  %89 = load i32, i32* %re_index.i, align 4, !dbg !6223
  %shr46.i = lshr i32 %89, 3, !dbg !6224
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !6225
  %add.ptr48.i = getelementptr inbounds i8, i8* %88, i64 %idx.ext47.i, !dbg !6225
  %90 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !6226
  %l49.i = bitcast %union.unaligned_32* %90 to i32*, !dbg !6226
  %91 = load i32, i32* %l49.i, align 1, !dbg !6226
  %92 = load i32, i32* %re_index.i, align 4, !dbg !6227
  %and50.i = and i32 %92, 7, !dbg !6228
  %shr51.i = lshr i32 %91, %and50.i, !dbg !6229
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !6230
  %93 = load i32, i32* %n.i, align 4, !dbg !6231
  %sub52.i = sub nsw i32 0, %93, !dbg !6232
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !6233
  %94 = load i32, i32* %re_cache.i, align 4, !dbg !6234
  %95 = load i32, i32* %nb_bits.i, align 4, !dbg !6235
  %call53.i = call i32 @zero_extend(i32 %94, i32 %95) #1, !dbg !6236
  %96 = load i32, i32* %code.i, align 4, !dbg !6237
  %add54.i = add i32 %call53.i, %96, !dbg !6238
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !6239
  %97 = load i32, i32* %index2.i, align 4, !dbg !6240
  %idxprom55.i = zext i32 %97 to i64, !dbg !6241
  %98 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6241
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %98, i64 %idxprom55.i, !dbg !6241
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !6241
  %99 = load i16, i16* %arrayidx57.i, align 2, !dbg !6241
  %conv58.i = sext i16 %99 to i32, !dbg !6241
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !6242
  %100 = load i32, i32* %index2.i, align 4, !dbg !6243
  %idxprom59.i = zext i32 %100 to i64, !dbg !6244
  %101 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6244
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %101, i64 %idxprom59.i, !dbg !6244
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !6244
  %102 = load i16, i16* %arrayidx61.i, align 2, !dbg !6244
  %conv62.i = sext i16 %102 to i32, !dbg !6244
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !6245
  br label %if.end.i, !dbg !6246

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !6247

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %while.body
  %103 = load i32, i32* %n.i, align 4, !dbg !6249
  %104 = load i32, i32* %re_cache.i, align 4, !dbg !6252
  %shr65.i = lshr i32 %104, %103, !dbg !6252
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !6252
  %105 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6253
  %106 = load i32, i32* %re_index.i, align 4, !dbg !6254
  %107 = load i32, i32* %n.i, align 4, !dbg !6255
  %add66.i = add i32 %106, %107, !dbg !6256
  %cmp67.i = icmp ugt i32 %105, %add66.i, !dbg !6257
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !6258

cond.true69.i:                                    ; preds = %if.end63.i
  %108 = load i32, i32* %re_index.i, align 4, !dbg !6259
  %109 = load i32, i32* %n.i, align 4, !dbg !6261
  %add70.i = add i32 %108, %109, !dbg !6262
  br label %get_vlc2.exit, !dbg !6263

cond.false71.i:                                   ; preds = %if.end63.i
  %110 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6264
  br label %get_vlc2.exit, !dbg !6266

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %110, %cond.false71.i ], !dbg !6267
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !6269
  %111 = load i32, i32* %re_index.i, align 4, !dbg !6270
  %112 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6271
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %112, i32 0, i32 2, !dbg !6272
  store i32 %111, i32* %index75.i, align 8, !dbg !6273
  %113 = load i32, i32* %code.i, align 4, !dbg !6274
  store i32 %113, i32* %sym, align 4, !dbg !6275
  %114 = load i32, i32* %sym, align 4, !dbg !6276
  %115 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rvmap, align 8, !dbg !6278
  %eob_sym = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %115, i32 0, i32 0, !dbg !6279
  %116 = load i8, i8* %eob_sym, align 1, !dbg !6279
  %conv22 = zext i8 %116 to i32, !dbg !6278
  %cmp23 = icmp eq i32 %114, %conv22, !dbg !6280
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !6281

if.then25:                                        ; preds = %get_vlc2.exit
  br label %while.end, !dbg !6282

if.end26:                                         ; preds = %get_vlc2.exit
  %117 = load i32, i32* %sym, align 4, !dbg !6283
  %118 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rvmap, align 8, !dbg !6284
  %esc_sym = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %118, i32 0, i32 1, !dbg !6285
  %119 = load i8, i8* %esc_sym, align 1, !dbg !6285
  %conv27 = zext i8 %119 to i32, !dbg !6284
  %cmp28 = icmp eq i32 %117, %conv27, !dbg !6286
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !6287

if.then30:                                        ; preds = %if.end26
  %120 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6288
  %121 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6289
  %blk_vlc31 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %121, i32 0, i32 23, !dbg !6290
  %tab32 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc31, i32 0, i32 1, !dbg !6291
  %122 = load %struct.VLC*, %struct.VLC** %tab32, align 8, !dbg !6291
  %table33 = getelementptr inbounds %struct.VLC, %struct.VLC* %122, i32 0, i32 1, !dbg !6292
  %123 = load [2 x i16]*, [2 x i16]** %table33, align 8, !dbg !6292
  store %struct.GetBitContext* %120, %struct.GetBitContext** %s.addr.i140, align 8, !dbg !6293
  store [2 x i16]* %123, [2 x i16]** %table.addr.i141, align 8, !dbg !6293
  store i32 13, i32* %bits.addr.i142, align 4, !dbg !6293
  store i32 1, i32* %max_depth.addr.i143, align 4, !dbg !6293
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i140, align 8, !dbg !6294
  %index.i151 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %124, i32 0, i32 2, !dbg !6295
  %125 = load i32, i32* %index.i151, align 8, !dbg !6295
  store i32 %125, i32* %re_index.i145, align 4, !dbg !5966
  %126 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i140, align 8, !dbg !6296
  %size_in_bits_plus8.i152 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %126, i32 0, i32 4, !dbg !6297
  %127 = load i32, i32* %size_in_bits_plus8.i152, align 8, !dbg !6297
  store i32 %127, i32* %re_size_plus8.i147, align 4, !dbg !5968
  %128 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i140, align 8, !dbg !6298
  %buffer.i153 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %128, i32 0, i32 0, !dbg !6299
  %129 = load i8*, i8** %buffer.i153, align 8, !dbg !6299
  %130 = load i32, i32* %re_index.i145, align 4, !dbg !6300
  %shr.i154 = lshr i32 %130, 3, !dbg !6301
  %idx.ext.i155 = zext i32 %shr.i154 to i64, !dbg !6302
  %add.ptr.i156 = getelementptr inbounds i8, i8* %129, i64 %idx.ext.i155, !dbg !6302
  %131 = bitcast i8* %add.ptr.i156 to %union.unaligned_32*, !dbg !6303
  %l.i157 = bitcast %union.unaligned_32* %131 to i32*, !dbg !6303
  %132 = load i32, i32* %l.i157, align 1, !dbg !6303
  %133 = load i32, i32* %re_index.i145, align 4, !dbg !6304
  %and.i158 = and i32 %133, 7, !dbg !6305
  %shr1.i159 = lshr i32 %132, %and.i158, !dbg !6306
  store i32 %shr1.i159, i32* %re_cache.i146, align 4, !dbg !6307
  %134 = load i32, i32* %re_cache.i146, align 4, !dbg !6308
  %135 = load i32, i32* %bits.addr.i142, align 4, !dbg !6309
  %call.i160 = call i32 @zero_extend(i32 %134, i32 %135) #1, !dbg !6310
  store i32 %call.i160, i32* %index2.i150, align 4, !dbg !6311
  %136 = load i32, i32* %index2.i150, align 4, !dbg !6312
  %idxprom.i161 = zext i32 %136 to i64, !dbg !6313
  %137 = load [2 x i16]*, [2 x i16]** %table.addr.i141, align 8, !dbg !6313
  %arrayidx.i162 = getelementptr inbounds [2 x i16], [2 x i16]* %137, i64 %idxprom.i161, !dbg !6313
  %arrayidx3.i163 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i162, i64 0, i64 0, !dbg !6313
  %138 = load i16, i16* %arrayidx3.i163, align 2, !dbg !6313
  %conv.i164 = sext i16 %138 to i32, !dbg !6313
  store i32 %conv.i164, i32* %code.i144, align 4, !dbg !6314
  %139 = load i32, i32* %index2.i150, align 4, !dbg !6315
  %idxprom4.i165 = zext i32 %139 to i64, !dbg !6316
  %140 = load [2 x i16]*, [2 x i16]** %table.addr.i141, align 8, !dbg !6316
  %arrayidx5.i166 = getelementptr inbounds [2 x i16], [2 x i16]* %140, i64 %idxprom4.i165, !dbg !6316
  %arrayidx6.i167 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i166, i64 0, i64 1, !dbg !6316
  %141 = load i16, i16* %arrayidx6.i167, align 2, !dbg !6316
  %conv7.i168 = sext i16 %141 to i32, !dbg !6316
  store i32 %conv7.i168, i32* %n.i148, align 4, !dbg !6317
  %142 = load i32, i32* %max_depth.addr.i143, align 4, !dbg !6318
  %cmp.i169 = icmp sgt i32 %142, 1, !dbg !6319
  br i1 %cmp.i169, label %land.lhs.true.i171, label %if.end63.i228, !dbg !6320

land.lhs.true.i171:                               ; preds = %if.then30
  %143 = load i32, i32* %n.i148, align 4, !dbg !6321
  %cmp9.i170 = icmp slt i32 %143, 0, !dbg !6322
  br i1 %cmp9.i170, label %if.then.i174, label %if.end63.i228, !dbg !6323

if.then.i174:                                     ; preds = %land.lhs.true.i171
  %144 = load i32, i32* %re_size_plus8.i147, align 4, !dbg !6324
  %145 = load i32, i32* %re_index.i145, align 4, !dbg !6325
  %146 = load i32, i32* %bits.addr.i142, align 4, !dbg !6326
  %add.i172 = add i32 %145, %146, !dbg !6327
  %cmp11.i173 = icmp ugt i32 %144, %add.i172, !dbg !6328
  br i1 %cmp11.i173, label %cond.true.i176, label %cond.false.i177, !dbg !6329

cond.true.i176:                                   ; preds = %if.then.i174
  %147 = load i32, i32* %re_index.i145, align 4, !dbg !6330
  %148 = load i32, i32* %bits.addr.i142, align 4, !dbg !6331
  %add13.i175 = add i32 %147, %148, !dbg !6332
  br label %cond.end.i198, !dbg !6333

cond.false.i177:                                  ; preds = %if.then.i174
  %149 = load i32, i32* %re_size_plus8.i147, align 4, !dbg !6334
  br label %cond.end.i198, !dbg !6335

cond.end.i198:                                    ; preds = %cond.false.i177, %cond.true.i176
  %cond.i178 = phi i32 [ %add13.i175, %cond.true.i176 ], [ %149, %cond.false.i177 ], !dbg !6336
  store i32 %cond.i178, i32* %re_index.i145, align 4, !dbg !6337
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i140, align 8, !dbg !6338
  %buffer14.i179 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %150, i32 0, i32 0, !dbg !6339
  %151 = load i8*, i8** %buffer14.i179, align 8, !dbg !6339
  %152 = load i32, i32* %re_index.i145, align 4, !dbg !6340
  %shr15.i180 = lshr i32 %152, 3, !dbg !6341
  %idx.ext16.i181 = zext i32 %shr15.i180 to i64, !dbg !6342
  %add.ptr17.i182 = getelementptr inbounds i8, i8* %151, i64 %idx.ext16.i181, !dbg !6342
  %153 = bitcast i8* %add.ptr17.i182 to %union.unaligned_32*, !dbg !6343
  %l18.i183 = bitcast %union.unaligned_32* %153 to i32*, !dbg !6343
  %154 = load i32, i32* %l18.i183, align 1, !dbg !6343
  %155 = load i32, i32* %re_index.i145, align 4, !dbg !6344
  %and19.i184 = and i32 %155, 7, !dbg !6345
  %shr20.i185 = lshr i32 %154, %and19.i184, !dbg !6346
  store i32 %shr20.i185, i32* %re_cache.i146, align 4, !dbg !6347
  %156 = load i32, i32* %n.i148, align 4, !dbg !6348
  %sub.i186 = sub nsw i32 0, %156, !dbg !6349
  store i32 %sub.i186, i32* %nb_bits.i149, align 4, !dbg !6350
  %157 = load i32, i32* %re_cache.i146, align 4, !dbg !6351
  %158 = load i32, i32* %nb_bits.i149, align 4, !dbg !6352
  %call21.i187 = call i32 @zero_extend(i32 %157, i32 %158) #1, !dbg !6353
  %159 = load i32, i32* %code.i144, align 4, !dbg !6354
  %add22.i188 = add i32 %call21.i187, %159, !dbg !6355
  store i32 %add22.i188, i32* %index2.i150, align 4, !dbg !6356
  %160 = load i32, i32* %index2.i150, align 4, !dbg !6357
  %idxprom23.i189 = zext i32 %160 to i64, !dbg !6358
  %161 = load [2 x i16]*, [2 x i16]** %table.addr.i141, align 8, !dbg !6358
  %arrayidx24.i190 = getelementptr inbounds [2 x i16], [2 x i16]* %161, i64 %idxprom23.i189, !dbg !6358
  %arrayidx25.i191 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i190, i64 0, i64 0, !dbg !6358
  %162 = load i16, i16* %arrayidx25.i191, align 2, !dbg !6358
  %conv26.i192 = sext i16 %162 to i32, !dbg !6358
  store i32 %conv26.i192, i32* %code.i144, align 4, !dbg !6359
  %163 = load i32, i32* %index2.i150, align 4, !dbg !6360
  %idxprom27.i193 = zext i32 %163 to i64, !dbg !6361
  %164 = load [2 x i16]*, [2 x i16]** %table.addr.i141, align 8, !dbg !6361
  %arrayidx28.i194 = getelementptr inbounds [2 x i16], [2 x i16]* %164, i64 %idxprom27.i193, !dbg !6361
  %arrayidx29.i195 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i194, i64 0, i64 1, !dbg !6361
  %165 = load i16, i16* %arrayidx29.i195, align 2, !dbg !6361
  %conv30.i196 = sext i16 %165 to i32, !dbg !6361
  store i32 %conv30.i196, i32* %n.i148, align 4, !dbg !6362
  %166 = load i32, i32* %max_depth.addr.i143, align 4, !dbg !6363
  %cmp31.i197 = icmp sgt i32 %166, 2, !dbg !6364
  br i1 %cmp31.i197, label %land.lhs.true33.i200, label %if.end.i227, !dbg !6365

land.lhs.true33.i200:                             ; preds = %cond.end.i198
  %167 = load i32, i32* %n.i148, align 4, !dbg !6366
  %cmp34.i199 = icmp slt i32 %167, 0, !dbg !6367
  br i1 %cmp34.i199, label %if.then36.i203, label %if.end.i227, !dbg !6368

if.then36.i203:                                   ; preds = %land.lhs.true33.i200
  %168 = load i32, i32* %re_size_plus8.i147, align 4, !dbg !6369
  %169 = load i32, i32* %re_index.i145, align 4, !dbg !6370
  %170 = load i32, i32* %nb_bits.i149, align 4, !dbg !6371
  %add37.i201 = add i32 %169, %170, !dbg !6372
  %cmp38.i202 = icmp ugt i32 %168, %add37.i201, !dbg !6373
  br i1 %cmp38.i202, label %cond.true40.i205, label %cond.false42.i206, !dbg !6374

cond.true40.i205:                                 ; preds = %if.then36.i203
  %171 = load i32, i32* %re_index.i145, align 4, !dbg !6375
  %172 = load i32, i32* %nb_bits.i149, align 4, !dbg !6376
  %add41.i204 = add i32 %171, %172, !dbg !6377
  br label %cond.end43.i226, !dbg !6378

cond.false42.i206:                                ; preds = %if.then36.i203
  %173 = load i32, i32* %re_size_plus8.i147, align 4, !dbg !6379
  br label %cond.end43.i226, !dbg !6380

cond.end43.i226:                                  ; preds = %cond.false42.i206, %cond.true40.i205
  %cond44.i207 = phi i32 [ %add41.i204, %cond.true40.i205 ], [ %173, %cond.false42.i206 ], !dbg !6381
  store i32 %cond44.i207, i32* %re_index.i145, align 4, !dbg !6382
  %174 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i140, align 8, !dbg !6383
  %buffer45.i208 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %174, i32 0, i32 0, !dbg !6384
  %175 = load i8*, i8** %buffer45.i208, align 8, !dbg !6384
  %176 = load i32, i32* %re_index.i145, align 4, !dbg !6385
  %shr46.i209 = lshr i32 %176, 3, !dbg !6386
  %idx.ext47.i210 = zext i32 %shr46.i209 to i64, !dbg !6387
  %add.ptr48.i211 = getelementptr inbounds i8, i8* %175, i64 %idx.ext47.i210, !dbg !6387
  %177 = bitcast i8* %add.ptr48.i211 to %union.unaligned_32*, !dbg !6388
  %l49.i212 = bitcast %union.unaligned_32* %177 to i32*, !dbg !6388
  %178 = load i32, i32* %l49.i212, align 1, !dbg !6388
  %179 = load i32, i32* %re_index.i145, align 4, !dbg !6389
  %and50.i213 = and i32 %179, 7, !dbg !6390
  %shr51.i214 = lshr i32 %178, %and50.i213, !dbg !6391
  store i32 %shr51.i214, i32* %re_cache.i146, align 4, !dbg !6392
  %180 = load i32, i32* %n.i148, align 4, !dbg !6393
  %sub52.i215 = sub nsw i32 0, %180, !dbg !6394
  store i32 %sub52.i215, i32* %nb_bits.i149, align 4, !dbg !6395
  %181 = load i32, i32* %re_cache.i146, align 4, !dbg !6396
  %182 = load i32, i32* %nb_bits.i149, align 4, !dbg !6397
  %call53.i216 = call i32 @zero_extend(i32 %181, i32 %182) #1, !dbg !6398
  %183 = load i32, i32* %code.i144, align 4, !dbg !6399
  %add54.i217 = add i32 %call53.i216, %183, !dbg !6400
  store i32 %add54.i217, i32* %index2.i150, align 4, !dbg !6401
  %184 = load i32, i32* %index2.i150, align 4, !dbg !6402
  %idxprom55.i218 = zext i32 %184 to i64, !dbg !6403
  %185 = load [2 x i16]*, [2 x i16]** %table.addr.i141, align 8, !dbg !6403
  %arrayidx56.i219 = getelementptr inbounds [2 x i16], [2 x i16]* %185, i64 %idxprom55.i218, !dbg !6403
  %arrayidx57.i220 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i219, i64 0, i64 0, !dbg !6403
  %186 = load i16, i16* %arrayidx57.i220, align 2, !dbg !6403
  %conv58.i221 = sext i16 %186 to i32, !dbg !6403
  store i32 %conv58.i221, i32* %code.i144, align 4, !dbg !6404
  %187 = load i32, i32* %index2.i150, align 4, !dbg !6405
  %idxprom59.i222 = zext i32 %187 to i64, !dbg !6406
  %188 = load [2 x i16]*, [2 x i16]** %table.addr.i141, align 8, !dbg !6406
  %arrayidx60.i223 = getelementptr inbounds [2 x i16], [2 x i16]* %188, i64 %idxprom59.i222, !dbg !6406
  %arrayidx61.i224 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i223, i64 0, i64 1, !dbg !6406
  %189 = load i16, i16* %arrayidx61.i224, align 2, !dbg !6406
  %conv62.i225 = sext i16 %189 to i32, !dbg !6406
  store i32 %conv62.i225, i32* %n.i148, align 4, !dbg !6407
  br label %if.end.i227, !dbg !6408

if.end.i227:                                      ; preds = %cond.end43.i226, %land.lhs.true33.i200, %cond.end.i198
  br label %if.end63.i228, !dbg !6409

if.end63.i228:                                    ; preds = %if.end.i227, %land.lhs.true.i171, %if.then30
  %190 = load i32, i32* %n.i148, align 4, !dbg !6410
  %191 = load i32, i32* %re_cache.i146, align 4, !dbg !6411
  %shr65.i229 = lshr i32 %191, %190, !dbg !6411
  store i32 %shr65.i229, i32* %re_cache.i146, align 4, !dbg !6411
  %192 = load i32, i32* %re_size_plus8.i147, align 4, !dbg !6412
  %193 = load i32, i32* %re_index.i145, align 4, !dbg !6413
  %194 = load i32, i32* %n.i148, align 4, !dbg !6414
  %add66.i230 = add i32 %193, %194, !dbg !6415
  %cmp67.i231 = icmp ugt i32 %192, %add66.i230, !dbg !6416
  br i1 %cmp67.i231, label %cond.true69.i233, label %cond.false71.i234, !dbg !6417

cond.true69.i233:                                 ; preds = %if.end63.i228
  %195 = load i32, i32* %re_index.i145, align 4, !dbg !6418
  %196 = load i32, i32* %n.i148, align 4, !dbg !6419
  %add70.i232 = add i32 %195, %196, !dbg !6420
  br label %get_vlc2.exit237, !dbg !6421

cond.false71.i234:                                ; preds = %if.end63.i228
  %197 = load i32, i32* %re_size_plus8.i147, align 4, !dbg !6422
  br label %get_vlc2.exit237, !dbg !6423

get_vlc2.exit237:                                 ; preds = %cond.true69.i233, %cond.false71.i234
  %cond73.i235 = phi i32 [ %add70.i232, %cond.true69.i233 ], [ %197, %cond.false71.i234 ], !dbg !6424
  store i32 %cond73.i235, i32* %re_index.i145, align 4, !dbg !6425
  %198 = load i32, i32* %re_index.i145, align 4, !dbg !6426
  %199 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i140, align 8, !dbg !6427
  %index75.i236 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %199, i32 0, i32 2, !dbg !6428
  store i32 %198, i32* %index75.i236, align 8, !dbg !6429
  %200 = load i32, i32* %code.i144, align 4, !dbg !6430
  %add35 = add nsw i32 %200, 1, !dbg !6431
  store i32 %add35, i32* %run, align 4, !dbg !6432
  %201 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6433
  %202 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6434
  %blk_vlc36 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %202, i32 0, i32 23, !dbg !6435
  %tab37 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc36, i32 0, i32 1, !dbg !6436
  %203 = load %struct.VLC*, %struct.VLC** %tab37, align 8, !dbg !6436
  %table38 = getelementptr inbounds %struct.VLC, %struct.VLC* %203, i32 0, i32 1, !dbg !6437
  %204 = load [2 x i16]*, [2 x i16]** %table38, align 8, !dbg !6437
  store %struct.GetBitContext* %201, %struct.GetBitContext** %s.addr.i238, align 8, !dbg !6438
  store [2 x i16]* %204, [2 x i16]** %table.addr.i239, align 8, !dbg !6438
  store i32 13, i32* %bits.addr.i240, align 4, !dbg !6438
  store i32 1, i32* %max_depth.addr.i241, align 4, !dbg !6438
  %205 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i238, align 8, !dbg !6439
  %index.i249 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %205, i32 0, i32 2, !dbg !6440
  %206 = load i32, i32* %index.i249, align 8, !dbg !6440
  store i32 %206, i32* %re_index.i243, align 4, !dbg !5954
  %207 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i238, align 8, !dbg !6441
  %size_in_bits_plus8.i250 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %207, i32 0, i32 4, !dbg !6442
  %208 = load i32, i32* %size_in_bits_plus8.i250, align 8, !dbg !6442
  store i32 %208, i32* %re_size_plus8.i245, align 4, !dbg !5956
  %209 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i238, align 8, !dbg !6443
  %buffer.i251 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %209, i32 0, i32 0, !dbg !6444
  %210 = load i8*, i8** %buffer.i251, align 8, !dbg !6444
  %211 = load i32, i32* %re_index.i243, align 4, !dbg !6445
  %shr.i252 = lshr i32 %211, 3, !dbg !6446
  %idx.ext.i253 = zext i32 %shr.i252 to i64, !dbg !6447
  %add.ptr.i254 = getelementptr inbounds i8, i8* %210, i64 %idx.ext.i253, !dbg !6447
  %212 = bitcast i8* %add.ptr.i254 to %union.unaligned_32*, !dbg !6448
  %l.i255 = bitcast %union.unaligned_32* %212 to i32*, !dbg !6448
  %213 = load i32, i32* %l.i255, align 1, !dbg !6448
  %214 = load i32, i32* %re_index.i243, align 4, !dbg !6449
  %and.i256 = and i32 %214, 7, !dbg !6450
  %shr1.i257 = lshr i32 %213, %and.i256, !dbg !6451
  store i32 %shr1.i257, i32* %re_cache.i244, align 4, !dbg !6452
  %215 = load i32, i32* %re_cache.i244, align 4, !dbg !6453
  %216 = load i32, i32* %bits.addr.i240, align 4, !dbg !6454
  %call.i258 = call i32 @zero_extend(i32 %215, i32 %216) #1, !dbg !6455
  store i32 %call.i258, i32* %index2.i248, align 4, !dbg !6456
  %217 = load i32, i32* %index2.i248, align 4, !dbg !6457
  %idxprom.i259 = zext i32 %217 to i64, !dbg !6458
  %218 = load [2 x i16]*, [2 x i16]** %table.addr.i239, align 8, !dbg !6458
  %arrayidx.i260 = getelementptr inbounds [2 x i16], [2 x i16]* %218, i64 %idxprom.i259, !dbg !6458
  %arrayidx3.i261 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i260, i64 0, i64 0, !dbg !6458
  %219 = load i16, i16* %arrayidx3.i261, align 2, !dbg !6458
  %conv.i262 = sext i16 %219 to i32, !dbg !6458
  store i32 %conv.i262, i32* %code.i242, align 4, !dbg !6459
  %220 = load i32, i32* %index2.i248, align 4, !dbg !6460
  %idxprom4.i263 = zext i32 %220 to i64, !dbg !6461
  %221 = load [2 x i16]*, [2 x i16]** %table.addr.i239, align 8, !dbg !6461
  %arrayidx5.i264 = getelementptr inbounds [2 x i16], [2 x i16]* %221, i64 %idxprom4.i263, !dbg !6461
  %arrayidx6.i265 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i264, i64 0, i64 1, !dbg !6461
  %222 = load i16, i16* %arrayidx6.i265, align 2, !dbg !6461
  %conv7.i266 = sext i16 %222 to i32, !dbg !6461
  store i32 %conv7.i266, i32* %n.i246, align 4, !dbg !6462
  %223 = load i32, i32* %max_depth.addr.i241, align 4, !dbg !6463
  %cmp.i267 = icmp sgt i32 %223, 1, !dbg !6464
  br i1 %cmp.i267, label %land.lhs.true.i269, label %if.end63.i326, !dbg !6465

land.lhs.true.i269:                               ; preds = %get_vlc2.exit237
  %224 = load i32, i32* %n.i246, align 4, !dbg !6466
  %cmp9.i268 = icmp slt i32 %224, 0, !dbg !6467
  br i1 %cmp9.i268, label %if.then.i272, label %if.end63.i326, !dbg !6468

if.then.i272:                                     ; preds = %land.lhs.true.i269
  %225 = load i32, i32* %re_size_plus8.i245, align 4, !dbg !6469
  %226 = load i32, i32* %re_index.i243, align 4, !dbg !6470
  %227 = load i32, i32* %bits.addr.i240, align 4, !dbg !6471
  %add.i270 = add i32 %226, %227, !dbg !6472
  %cmp11.i271 = icmp ugt i32 %225, %add.i270, !dbg !6473
  br i1 %cmp11.i271, label %cond.true.i274, label %cond.false.i275, !dbg !6474

cond.true.i274:                                   ; preds = %if.then.i272
  %228 = load i32, i32* %re_index.i243, align 4, !dbg !6475
  %229 = load i32, i32* %bits.addr.i240, align 4, !dbg !6476
  %add13.i273 = add i32 %228, %229, !dbg !6477
  br label %cond.end.i296, !dbg !6478

cond.false.i275:                                  ; preds = %if.then.i272
  %230 = load i32, i32* %re_size_plus8.i245, align 4, !dbg !6479
  br label %cond.end.i296, !dbg !6480

cond.end.i296:                                    ; preds = %cond.false.i275, %cond.true.i274
  %cond.i276 = phi i32 [ %add13.i273, %cond.true.i274 ], [ %230, %cond.false.i275 ], !dbg !6481
  store i32 %cond.i276, i32* %re_index.i243, align 4, !dbg !6482
  %231 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i238, align 8, !dbg !6483
  %buffer14.i277 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %231, i32 0, i32 0, !dbg !6484
  %232 = load i8*, i8** %buffer14.i277, align 8, !dbg !6484
  %233 = load i32, i32* %re_index.i243, align 4, !dbg !6485
  %shr15.i278 = lshr i32 %233, 3, !dbg !6486
  %idx.ext16.i279 = zext i32 %shr15.i278 to i64, !dbg !6487
  %add.ptr17.i280 = getelementptr inbounds i8, i8* %232, i64 %idx.ext16.i279, !dbg !6487
  %234 = bitcast i8* %add.ptr17.i280 to %union.unaligned_32*, !dbg !6488
  %l18.i281 = bitcast %union.unaligned_32* %234 to i32*, !dbg !6488
  %235 = load i32, i32* %l18.i281, align 1, !dbg !6488
  %236 = load i32, i32* %re_index.i243, align 4, !dbg !6489
  %and19.i282 = and i32 %236, 7, !dbg !6490
  %shr20.i283 = lshr i32 %235, %and19.i282, !dbg !6491
  store i32 %shr20.i283, i32* %re_cache.i244, align 4, !dbg !6492
  %237 = load i32, i32* %n.i246, align 4, !dbg !6493
  %sub.i284 = sub nsw i32 0, %237, !dbg !6494
  store i32 %sub.i284, i32* %nb_bits.i247, align 4, !dbg !6495
  %238 = load i32, i32* %re_cache.i244, align 4, !dbg !6496
  %239 = load i32, i32* %nb_bits.i247, align 4, !dbg !6497
  %call21.i285 = call i32 @zero_extend(i32 %238, i32 %239) #1, !dbg !6498
  %240 = load i32, i32* %code.i242, align 4, !dbg !6499
  %add22.i286 = add i32 %call21.i285, %240, !dbg !6500
  store i32 %add22.i286, i32* %index2.i248, align 4, !dbg !6501
  %241 = load i32, i32* %index2.i248, align 4, !dbg !6502
  %idxprom23.i287 = zext i32 %241 to i64, !dbg !6503
  %242 = load [2 x i16]*, [2 x i16]** %table.addr.i239, align 8, !dbg !6503
  %arrayidx24.i288 = getelementptr inbounds [2 x i16], [2 x i16]* %242, i64 %idxprom23.i287, !dbg !6503
  %arrayidx25.i289 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i288, i64 0, i64 0, !dbg !6503
  %243 = load i16, i16* %arrayidx25.i289, align 2, !dbg !6503
  %conv26.i290 = sext i16 %243 to i32, !dbg !6503
  store i32 %conv26.i290, i32* %code.i242, align 4, !dbg !6504
  %244 = load i32, i32* %index2.i248, align 4, !dbg !6505
  %idxprom27.i291 = zext i32 %244 to i64, !dbg !6506
  %245 = load [2 x i16]*, [2 x i16]** %table.addr.i239, align 8, !dbg !6506
  %arrayidx28.i292 = getelementptr inbounds [2 x i16], [2 x i16]* %245, i64 %idxprom27.i291, !dbg !6506
  %arrayidx29.i293 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i292, i64 0, i64 1, !dbg !6506
  %246 = load i16, i16* %arrayidx29.i293, align 2, !dbg !6506
  %conv30.i294 = sext i16 %246 to i32, !dbg !6506
  store i32 %conv30.i294, i32* %n.i246, align 4, !dbg !6507
  %247 = load i32, i32* %max_depth.addr.i241, align 4, !dbg !6508
  %cmp31.i295 = icmp sgt i32 %247, 2, !dbg !6509
  br i1 %cmp31.i295, label %land.lhs.true33.i298, label %if.end.i325, !dbg !6510

land.lhs.true33.i298:                             ; preds = %cond.end.i296
  %248 = load i32, i32* %n.i246, align 4, !dbg !6511
  %cmp34.i297 = icmp slt i32 %248, 0, !dbg !6512
  br i1 %cmp34.i297, label %if.then36.i301, label %if.end.i325, !dbg !6513

if.then36.i301:                                   ; preds = %land.lhs.true33.i298
  %249 = load i32, i32* %re_size_plus8.i245, align 4, !dbg !6514
  %250 = load i32, i32* %re_index.i243, align 4, !dbg !6515
  %251 = load i32, i32* %nb_bits.i247, align 4, !dbg !6516
  %add37.i299 = add i32 %250, %251, !dbg !6517
  %cmp38.i300 = icmp ugt i32 %249, %add37.i299, !dbg !6518
  br i1 %cmp38.i300, label %cond.true40.i303, label %cond.false42.i304, !dbg !6519

cond.true40.i303:                                 ; preds = %if.then36.i301
  %252 = load i32, i32* %re_index.i243, align 4, !dbg !6520
  %253 = load i32, i32* %nb_bits.i247, align 4, !dbg !6521
  %add41.i302 = add i32 %252, %253, !dbg !6522
  br label %cond.end43.i324, !dbg !6523

cond.false42.i304:                                ; preds = %if.then36.i301
  %254 = load i32, i32* %re_size_plus8.i245, align 4, !dbg !6524
  br label %cond.end43.i324, !dbg !6525

cond.end43.i324:                                  ; preds = %cond.false42.i304, %cond.true40.i303
  %cond44.i305 = phi i32 [ %add41.i302, %cond.true40.i303 ], [ %254, %cond.false42.i304 ], !dbg !6526
  store i32 %cond44.i305, i32* %re_index.i243, align 4, !dbg !6527
  %255 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i238, align 8, !dbg !6528
  %buffer45.i306 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %255, i32 0, i32 0, !dbg !6529
  %256 = load i8*, i8** %buffer45.i306, align 8, !dbg !6529
  %257 = load i32, i32* %re_index.i243, align 4, !dbg !6530
  %shr46.i307 = lshr i32 %257, 3, !dbg !6531
  %idx.ext47.i308 = zext i32 %shr46.i307 to i64, !dbg !6532
  %add.ptr48.i309 = getelementptr inbounds i8, i8* %256, i64 %idx.ext47.i308, !dbg !6532
  %258 = bitcast i8* %add.ptr48.i309 to %union.unaligned_32*, !dbg !6533
  %l49.i310 = bitcast %union.unaligned_32* %258 to i32*, !dbg !6533
  %259 = load i32, i32* %l49.i310, align 1, !dbg !6533
  %260 = load i32, i32* %re_index.i243, align 4, !dbg !6534
  %and50.i311 = and i32 %260, 7, !dbg !6535
  %shr51.i312 = lshr i32 %259, %and50.i311, !dbg !6536
  store i32 %shr51.i312, i32* %re_cache.i244, align 4, !dbg !6537
  %261 = load i32, i32* %n.i246, align 4, !dbg !6538
  %sub52.i313 = sub nsw i32 0, %261, !dbg !6539
  store i32 %sub52.i313, i32* %nb_bits.i247, align 4, !dbg !6540
  %262 = load i32, i32* %re_cache.i244, align 4, !dbg !6541
  %263 = load i32, i32* %nb_bits.i247, align 4, !dbg !6542
  %call53.i314 = call i32 @zero_extend(i32 %262, i32 %263) #1, !dbg !6543
  %264 = load i32, i32* %code.i242, align 4, !dbg !6544
  %add54.i315 = add i32 %call53.i314, %264, !dbg !6545
  store i32 %add54.i315, i32* %index2.i248, align 4, !dbg !6546
  %265 = load i32, i32* %index2.i248, align 4, !dbg !6547
  %idxprom55.i316 = zext i32 %265 to i64, !dbg !6548
  %266 = load [2 x i16]*, [2 x i16]** %table.addr.i239, align 8, !dbg !6548
  %arrayidx56.i317 = getelementptr inbounds [2 x i16], [2 x i16]* %266, i64 %idxprom55.i316, !dbg !6548
  %arrayidx57.i318 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i317, i64 0, i64 0, !dbg !6548
  %267 = load i16, i16* %arrayidx57.i318, align 2, !dbg !6548
  %conv58.i319 = sext i16 %267 to i32, !dbg !6548
  store i32 %conv58.i319, i32* %code.i242, align 4, !dbg !6549
  %268 = load i32, i32* %index2.i248, align 4, !dbg !6550
  %idxprom59.i320 = zext i32 %268 to i64, !dbg !6551
  %269 = load [2 x i16]*, [2 x i16]** %table.addr.i239, align 8, !dbg !6551
  %arrayidx60.i321 = getelementptr inbounds [2 x i16], [2 x i16]* %269, i64 %idxprom59.i320, !dbg !6551
  %arrayidx61.i322 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i321, i64 0, i64 1, !dbg !6551
  %270 = load i16, i16* %arrayidx61.i322, align 2, !dbg !6551
  %conv62.i323 = sext i16 %270 to i32, !dbg !6551
  store i32 %conv62.i323, i32* %n.i246, align 4, !dbg !6552
  br label %if.end.i325, !dbg !6553

if.end.i325:                                      ; preds = %cond.end43.i324, %land.lhs.true33.i298, %cond.end.i296
  br label %if.end63.i326, !dbg !6554

if.end63.i326:                                    ; preds = %if.end.i325, %land.lhs.true.i269, %get_vlc2.exit237
  %271 = load i32, i32* %n.i246, align 4, !dbg !6555
  %272 = load i32, i32* %re_cache.i244, align 4, !dbg !6556
  %shr65.i327 = lshr i32 %272, %271, !dbg !6556
  store i32 %shr65.i327, i32* %re_cache.i244, align 4, !dbg !6556
  %273 = load i32, i32* %re_size_plus8.i245, align 4, !dbg !6557
  %274 = load i32, i32* %re_index.i243, align 4, !dbg !6558
  %275 = load i32, i32* %n.i246, align 4, !dbg !6559
  %add66.i328 = add i32 %274, %275, !dbg !6560
  %cmp67.i329 = icmp ugt i32 %273, %add66.i328, !dbg !6561
  br i1 %cmp67.i329, label %cond.true69.i331, label %cond.false71.i332, !dbg !6562

cond.true69.i331:                                 ; preds = %if.end63.i326
  %276 = load i32, i32* %re_index.i243, align 4, !dbg !6563
  %277 = load i32, i32* %n.i246, align 4, !dbg !6564
  %add70.i330 = add i32 %276, %277, !dbg !6565
  br label %get_vlc2.exit335, !dbg !6566

cond.false71.i332:                                ; preds = %if.end63.i326
  %278 = load i32, i32* %re_size_plus8.i245, align 4, !dbg !6567
  br label %get_vlc2.exit335, !dbg !6568

get_vlc2.exit335:                                 ; preds = %cond.true69.i331, %cond.false71.i332
  %cond73.i333 = phi i32 [ %add70.i330, %cond.true69.i331 ], [ %278, %cond.false71.i332 ], !dbg !6569
  store i32 %cond73.i333, i32* %re_index.i243, align 4, !dbg !6570
  %279 = load i32, i32* %re_index.i243, align 4, !dbg !6571
  %280 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i238, align 8, !dbg !6572
  %index75.i334 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %280, i32 0, i32 2, !dbg !6573
  store i32 %279, i32* %index75.i334, align 8, !dbg !6574
  %281 = load i32, i32* %code.i242, align 4, !dbg !6575
  store i32 %281, i32* %lo, align 4, !dbg !6576
  %282 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6577
  %283 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6578
  %blk_vlc40 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %283, i32 0, i32 23, !dbg !6579
  %tab41 = getelementptr inbounds %struct.IVIHuffTab, %struct.IVIHuffTab* %blk_vlc40, i32 0, i32 1, !dbg !6580
  %284 = load %struct.VLC*, %struct.VLC** %tab41, align 8, !dbg !6580
  %table42 = getelementptr inbounds %struct.VLC, %struct.VLC* %284, i32 0, i32 1, !dbg !6581
  %285 = load [2 x i16]*, [2 x i16]** %table42, align 8, !dbg !6581
  store %struct.GetBitContext* %282, %struct.GetBitContext** %s.addr.i336, align 8, !dbg !6582
  store [2 x i16]* %285, [2 x i16]** %table.addr.i337, align 8, !dbg !6582
  store i32 13, i32* %bits.addr.i338, align 4, !dbg !6582
  store i32 1, i32* %max_depth.addr.i339, align 4, !dbg !6582
  %286 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i336, align 8, !dbg !6583
  %index.i347 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %286, i32 0, i32 2, !dbg !6584
  %287 = load i32, i32* %index.i347, align 8, !dbg !6584
  store i32 %287, i32* %re_index.i341, align 4, !dbg !5936
  %288 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i336, align 8, !dbg !6585
  %size_in_bits_plus8.i348 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %288, i32 0, i32 4, !dbg !6586
  %289 = load i32, i32* %size_in_bits_plus8.i348, align 8, !dbg !6586
  store i32 %289, i32* %re_size_plus8.i343, align 4, !dbg !5940
  %290 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i336, align 8, !dbg !6587
  %buffer.i349 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %290, i32 0, i32 0, !dbg !6588
  %291 = load i8*, i8** %buffer.i349, align 8, !dbg !6588
  %292 = load i32, i32* %re_index.i341, align 4, !dbg !6589
  %shr.i350 = lshr i32 %292, 3, !dbg !6590
  %idx.ext.i351 = zext i32 %shr.i350 to i64, !dbg !6591
  %add.ptr.i352 = getelementptr inbounds i8, i8* %291, i64 %idx.ext.i351, !dbg !6591
  %293 = bitcast i8* %add.ptr.i352 to %union.unaligned_32*, !dbg !6592
  %l.i353 = bitcast %union.unaligned_32* %293 to i32*, !dbg !6592
  %294 = load i32, i32* %l.i353, align 1, !dbg !6592
  %295 = load i32, i32* %re_index.i341, align 4, !dbg !6593
  %and.i354 = and i32 %295, 7, !dbg !6594
  %shr1.i355 = lshr i32 %294, %and.i354, !dbg !6595
  store i32 %shr1.i355, i32* %re_cache.i342, align 4, !dbg !6596
  %296 = load i32, i32* %re_cache.i342, align 4, !dbg !6597
  %297 = load i32, i32* %bits.addr.i338, align 4, !dbg !6598
  %call.i356 = call i32 @zero_extend(i32 %296, i32 %297) #1, !dbg !6599
  store i32 %call.i356, i32* %index2.i346, align 4, !dbg !6600
  %298 = load i32, i32* %index2.i346, align 4, !dbg !6601
  %idxprom.i357 = zext i32 %298 to i64, !dbg !6602
  %299 = load [2 x i16]*, [2 x i16]** %table.addr.i337, align 8, !dbg !6602
  %arrayidx.i358 = getelementptr inbounds [2 x i16], [2 x i16]* %299, i64 %idxprom.i357, !dbg !6602
  %arrayidx3.i359 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i358, i64 0, i64 0, !dbg !6602
  %300 = load i16, i16* %arrayidx3.i359, align 2, !dbg !6602
  %conv.i360 = sext i16 %300 to i32, !dbg !6602
  store i32 %conv.i360, i32* %code.i340, align 4, !dbg !6603
  %301 = load i32, i32* %index2.i346, align 4, !dbg !6604
  %idxprom4.i361 = zext i32 %301 to i64, !dbg !6605
  %302 = load [2 x i16]*, [2 x i16]** %table.addr.i337, align 8, !dbg !6605
  %arrayidx5.i362 = getelementptr inbounds [2 x i16], [2 x i16]* %302, i64 %idxprom4.i361, !dbg !6605
  %arrayidx6.i363 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i362, i64 0, i64 1, !dbg !6605
  %303 = load i16, i16* %arrayidx6.i363, align 2, !dbg !6605
  %conv7.i364 = sext i16 %303 to i32, !dbg !6605
  store i32 %conv7.i364, i32* %n.i344, align 4, !dbg !6606
  %304 = load i32, i32* %max_depth.addr.i339, align 4, !dbg !6607
  %cmp.i365 = icmp sgt i32 %304, 1, !dbg !6608
  br i1 %cmp.i365, label %land.lhs.true.i367, label %if.end63.i424, !dbg !6609

land.lhs.true.i367:                               ; preds = %get_vlc2.exit335
  %305 = load i32, i32* %n.i344, align 4, !dbg !6610
  %cmp9.i366 = icmp slt i32 %305, 0, !dbg !6611
  br i1 %cmp9.i366, label %if.then.i370, label %if.end63.i424, !dbg !6612

if.then.i370:                                     ; preds = %land.lhs.true.i367
  %306 = load i32, i32* %re_size_plus8.i343, align 4, !dbg !6613
  %307 = load i32, i32* %re_index.i341, align 4, !dbg !6614
  %308 = load i32, i32* %bits.addr.i338, align 4, !dbg !6615
  %add.i368 = add i32 %307, %308, !dbg !6616
  %cmp11.i369 = icmp ugt i32 %306, %add.i368, !dbg !6617
  br i1 %cmp11.i369, label %cond.true.i372, label %cond.false.i373, !dbg !6618

cond.true.i372:                                   ; preds = %if.then.i370
  %309 = load i32, i32* %re_index.i341, align 4, !dbg !6619
  %310 = load i32, i32* %bits.addr.i338, align 4, !dbg !6620
  %add13.i371 = add i32 %309, %310, !dbg !6621
  br label %cond.end.i394, !dbg !6622

cond.false.i373:                                  ; preds = %if.then.i370
  %311 = load i32, i32* %re_size_plus8.i343, align 4, !dbg !6623
  br label %cond.end.i394, !dbg !6624

cond.end.i394:                                    ; preds = %cond.false.i373, %cond.true.i372
  %cond.i374 = phi i32 [ %add13.i371, %cond.true.i372 ], [ %311, %cond.false.i373 ], !dbg !6625
  store i32 %cond.i374, i32* %re_index.i341, align 4, !dbg !6626
  %312 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i336, align 8, !dbg !6627
  %buffer14.i375 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %312, i32 0, i32 0, !dbg !6628
  %313 = load i8*, i8** %buffer14.i375, align 8, !dbg !6628
  %314 = load i32, i32* %re_index.i341, align 4, !dbg !6629
  %shr15.i376 = lshr i32 %314, 3, !dbg !6630
  %idx.ext16.i377 = zext i32 %shr15.i376 to i64, !dbg !6631
  %add.ptr17.i378 = getelementptr inbounds i8, i8* %313, i64 %idx.ext16.i377, !dbg !6631
  %315 = bitcast i8* %add.ptr17.i378 to %union.unaligned_32*, !dbg !6632
  %l18.i379 = bitcast %union.unaligned_32* %315 to i32*, !dbg !6632
  %316 = load i32, i32* %l18.i379, align 1, !dbg !6632
  %317 = load i32, i32* %re_index.i341, align 4, !dbg !6633
  %and19.i380 = and i32 %317, 7, !dbg !6634
  %shr20.i381 = lshr i32 %316, %and19.i380, !dbg !6635
  store i32 %shr20.i381, i32* %re_cache.i342, align 4, !dbg !6636
  %318 = load i32, i32* %n.i344, align 4, !dbg !6637
  %sub.i382 = sub nsw i32 0, %318, !dbg !6638
  store i32 %sub.i382, i32* %nb_bits.i345, align 4, !dbg !6639
  %319 = load i32, i32* %re_cache.i342, align 4, !dbg !6640
  %320 = load i32, i32* %nb_bits.i345, align 4, !dbg !6641
  %call21.i383 = call i32 @zero_extend(i32 %319, i32 %320) #1, !dbg !6642
  %321 = load i32, i32* %code.i340, align 4, !dbg !6643
  %add22.i384 = add i32 %call21.i383, %321, !dbg !6644
  store i32 %add22.i384, i32* %index2.i346, align 4, !dbg !6645
  %322 = load i32, i32* %index2.i346, align 4, !dbg !6646
  %idxprom23.i385 = zext i32 %322 to i64, !dbg !6647
  %323 = load [2 x i16]*, [2 x i16]** %table.addr.i337, align 8, !dbg !6647
  %arrayidx24.i386 = getelementptr inbounds [2 x i16], [2 x i16]* %323, i64 %idxprom23.i385, !dbg !6647
  %arrayidx25.i387 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i386, i64 0, i64 0, !dbg !6647
  %324 = load i16, i16* %arrayidx25.i387, align 2, !dbg !6647
  %conv26.i388 = sext i16 %324 to i32, !dbg !6647
  store i32 %conv26.i388, i32* %code.i340, align 4, !dbg !6648
  %325 = load i32, i32* %index2.i346, align 4, !dbg !6649
  %idxprom27.i389 = zext i32 %325 to i64, !dbg !6650
  %326 = load [2 x i16]*, [2 x i16]** %table.addr.i337, align 8, !dbg !6650
  %arrayidx28.i390 = getelementptr inbounds [2 x i16], [2 x i16]* %326, i64 %idxprom27.i389, !dbg !6650
  %arrayidx29.i391 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i390, i64 0, i64 1, !dbg !6650
  %327 = load i16, i16* %arrayidx29.i391, align 2, !dbg !6650
  %conv30.i392 = sext i16 %327 to i32, !dbg !6650
  store i32 %conv30.i392, i32* %n.i344, align 4, !dbg !6651
  %328 = load i32, i32* %max_depth.addr.i339, align 4, !dbg !6652
  %cmp31.i393 = icmp sgt i32 %328, 2, !dbg !6653
  br i1 %cmp31.i393, label %land.lhs.true33.i396, label %if.end.i423, !dbg !6654

land.lhs.true33.i396:                             ; preds = %cond.end.i394
  %329 = load i32, i32* %n.i344, align 4, !dbg !6655
  %cmp34.i395 = icmp slt i32 %329, 0, !dbg !6656
  br i1 %cmp34.i395, label %if.then36.i399, label %if.end.i423, !dbg !6657

if.then36.i399:                                   ; preds = %land.lhs.true33.i396
  %330 = load i32, i32* %re_size_plus8.i343, align 4, !dbg !6658
  %331 = load i32, i32* %re_index.i341, align 4, !dbg !6659
  %332 = load i32, i32* %nb_bits.i345, align 4, !dbg !6660
  %add37.i397 = add i32 %331, %332, !dbg !6661
  %cmp38.i398 = icmp ugt i32 %330, %add37.i397, !dbg !6662
  br i1 %cmp38.i398, label %cond.true40.i401, label %cond.false42.i402, !dbg !6663

cond.true40.i401:                                 ; preds = %if.then36.i399
  %333 = load i32, i32* %re_index.i341, align 4, !dbg !6664
  %334 = load i32, i32* %nb_bits.i345, align 4, !dbg !6665
  %add41.i400 = add i32 %333, %334, !dbg !6666
  br label %cond.end43.i422, !dbg !6667

cond.false42.i402:                                ; preds = %if.then36.i399
  %335 = load i32, i32* %re_size_plus8.i343, align 4, !dbg !6668
  br label %cond.end43.i422, !dbg !6669

cond.end43.i422:                                  ; preds = %cond.false42.i402, %cond.true40.i401
  %cond44.i403 = phi i32 [ %add41.i400, %cond.true40.i401 ], [ %335, %cond.false42.i402 ], !dbg !6670
  store i32 %cond44.i403, i32* %re_index.i341, align 4, !dbg !6671
  %336 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i336, align 8, !dbg !6672
  %buffer45.i404 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %336, i32 0, i32 0, !dbg !6673
  %337 = load i8*, i8** %buffer45.i404, align 8, !dbg !6673
  %338 = load i32, i32* %re_index.i341, align 4, !dbg !6674
  %shr46.i405 = lshr i32 %338, 3, !dbg !6675
  %idx.ext47.i406 = zext i32 %shr46.i405 to i64, !dbg !6676
  %add.ptr48.i407 = getelementptr inbounds i8, i8* %337, i64 %idx.ext47.i406, !dbg !6676
  %339 = bitcast i8* %add.ptr48.i407 to %union.unaligned_32*, !dbg !6677
  %l49.i408 = bitcast %union.unaligned_32* %339 to i32*, !dbg !6677
  %340 = load i32, i32* %l49.i408, align 1, !dbg !6677
  %341 = load i32, i32* %re_index.i341, align 4, !dbg !6678
  %and50.i409 = and i32 %341, 7, !dbg !6679
  %shr51.i410 = lshr i32 %340, %and50.i409, !dbg !6680
  store i32 %shr51.i410, i32* %re_cache.i342, align 4, !dbg !6681
  %342 = load i32, i32* %n.i344, align 4, !dbg !6682
  %sub52.i411 = sub nsw i32 0, %342, !dbg !6683
  store i32 %sub52.i411, i32* %nb_bits.i345, align 4, !dbg !6684
  %343 = load i32, i32* %re_cache.i342, align 4, !dbg !6685
  %344 = load i32, i32* %nb_bits.i345, align 4, !dbg !6686
  %call53.i412 = call i32 @zero_extend(i32 %343, i32 %344) #1, !dbg !6687
  %345 = load i32, i32* %code.i340, align 4, !dbg !6688
  %add54.i413 = add i32 %call53.i412, %345, !dbg !6689
  store i32 %add54.i413, i32* %index2.i346, align 4, !dbg !6690
  %346 = load i32, i32* %index2.i346, align 4, !dbg !6691
  %idxprom55.i414 = zext i32 %346 to i64, !dbg !6692
  %347 = load [2 x i16]*, [2 x i16]** %table.addr.i337, align 8, !dbg !6692
  %arrayidx56.i415 = getelementptr inbounds [2 x i16], [2 x i16]* %347, i64 %idxprom55.i414, !dbg !6692
  %arrayidx57.i416 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i415, i64 0, i64 0, !dbg !6692
  %348 = load i16, i16* %arrayidx57.i416, align 2, !dbg !6692
  %conv58.i417 = sext i16 %348 to i32, !dbg !6692
  store i32 %conv58.i417, i32* %code.i340, align 4, !dbg !6693
  %349 = load i32, i32* %index2.i346, align 4, !dbg !6694
  %idxprom59.i418 = zext i32 %349 to i64, !dbg !6695
  %350 = load [2 x i16]*, [2 x i16]** %table.addr.i337, align 8, !dbg !6695
  %arrayidx60.i419 = getelementptr inbounds [2 x i16], [2 x i16]* %350, i64 %idxprom59.i418, !dbg !6695
  %arrayidx61.i420 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i419, i64 0, i64 1, !dbg !6695
  %351 = load i16, i16* %arrayidx61.i420, align 2, !dbg !6695
  %conv62.i421 = sext i16 %351 to i32, !dbg !6695
  store i32 %conv62.i421, i32* %n.i344, align 4, !dbg !6696
  br label %if.end.i423, !dbg !6697

if.end.i423:                                      ; preds = %cond.end43.i422, %land.lhs.true33.i396, %cond.end.i394
  br label %if.end63.i424, !dbg !6698

if.end63.i424:                                    ; preds = %if.end.i423, %land.lhs.true.i367, %get_vlc2.exit335
  %352 = load i32, i32* %n.i344, align 4, !dbg !6699
  %353 = load i32, i32* %re_cache.i342, align 4, !dbg !6700
  %shr65.i425 = lshr i32 %353, %352, !dbg !6700
  store i32 %shr65.i425, i32* %re_cache.i342, align 4, !dbg !6700
  %354 = load i32, i32* %re_size_plus8.i343, align 4, !dbg !6701
  %355 = load i32, i32* %re_index.i341, align 4, !dbg !6702
  %356 = load i32, i32* %n.i344, align 4, !dbg !6703
  %add66.i426 = add i32 %355, %356, !dbg !6704
  %cmp67.i427 = icmp ugt i32 %354, %add66.i426, !dbg !6705
  br i1 %cmp67.i427, label %cond.true69.i429, label %cond.false71.i430, !dbg !6706

cond.true69.i429:                                 ; preds = %if.end63.i424
  %357 = load i32, i32* %re_index.i341, align 4, !dbg !6707
  %358 = load i32, i32* %n.i344, align 4, !dbg !6708
  %add70.i428 = add i32 %357, %358, !dbg !6709
  br label %get_vlc2.exit433, !dbg !6710

cond.false71.i430:                                ; preds = %if.end63.i424
  %359 = load i32, i32* %re_size_plus8.i343, align 4, !dbg !6711
  br label %get_vlc2.exit433, !dbg !6712

get_vlc2.exit433:                                 ; preds = %cond.true69.i429, %cond.false71.i430
  %cond73.i431 = phi i32 [ %add70.i428, %cond.true69.i429 ], [ %359, %cond.false71.i430 ], !dbg !6713
  store i32 %cond73.i431, i32* %re_index.i341, align 4, !dbg !6714
  %360 = load i32, i32* %re_index.i341, align 4, !dbg !6715
  %361 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i336, align 8, !dbg !6716
  %index75.i432 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %361, i32 0, i32 2, !dbg !6717
  store i32 %360, i32* %index75.i432, align 8, !dbg !6718
  %362 = load i32, i32* %code.i340, align 4, !dbg !6719
  store i32 %362, i32* %hi, align 4, !dbg !6720
  %363 = load i32, i32* %hi, align 4, !dbg !6721
  %shl = shl i32 %363, 6, !dbg !6722
  %364 = load i32, i32* %lo, align 4, !dbg !6723
  %or = or i32 %shl, %364, !dbg !6724
  %shr = lshr i32 %or, 1, !dbg !6725
  %365 = load i32, i32* %hi, align 4, !dbg !6726
  %shl44 = shl i32 %365, 6, !dbg !6727
  %366 = load i32, i32* %lo, align 4, !dbg !6728
  %or45 = or i32 %shl44, %366, !dbg !6729
  %and = and i32 %or45, 1, !dbg !6730
  %sub46 = sub i32 0, %and, !dbg !6731
  %xor = xor i32 %shr, %sub46, !dbg !6732
  %sub47 = sub i32 0, %xor, !dbg !6733
  store i32 %sub47, i32* %val, align 4, !dbg !6734
  br label %if.end56, !dbg !6735

if.else:                                          ; preds = %if.end26
  %367 = load i32, i32* %sym, align 4, !dbg !6736
  %cmp48 = icmp uge i32 %367, 256, !dbg !6739
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !6740

if.then50:                                        ; preds = %if.else
  %368 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6741
  %369 = bitcast %struct.AVCodecContext* %368 to i8*, !dbg !6741
  %370 = load i32, i32* %sym, align 4, !dbg !6743
  call void (i8*, i32, i8*, ...) @av_log(i8* %369, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i32 0, i32 0), i32 %370), !dbg !6744
  store i32 -1094995529, i32* %retval, align 4, !dbg !6745
  br label %return, !dbg !6745

if.end51:                                         ; preds = %if.else
  %371 = load i32, i32* %sym, align 4, !dbg !6746
  %idxprom = zext i32 %371 to i64, !dbg !6747
  %372 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rvmap, align 8, !dbg !6747
  %runtab = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %372, i32 0, i32 2, !dbg !6748
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %runtab, i64 0, i64 %idxprom, !dbg !6747
  %373 = load i8, i8* %arrayidx, align 1, !dbg !6747
  %conv52 = zext i8 %373 to i32, !dbg !6747
  store i32 %conv52, i32* %run, align 4, !dbg !6749
  %374 = load i32, i32* %sym, align 4, !dbg !6750
  %idxprom53 = zext i32 %374 to i64, !dbg !6751
  %375 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rvmap, align 8, !dbg !6751
  %valtab = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %375, i32 0, i32 3, !dbg !6752
  %arrayidx54 = getelementptr inbounds [256 x i8], [256 x i8]* %valtab, i64 0, i64 %idxprom53, !dbg !6751
  %376 = load i8, i8* %arrayidx54, align 1, !dbg !6751
  %conv55 = sext i8 %376 to i32, !dbg !6751
  store i32 %conv55, i32* %val, align 4, !dbg !6753
  br label %if.end56

if.end56:                                         ; preds = %if.end51, %get_vlc2.exit433
  %377 = load i32, i32* %run, align 4, !dbg !6754
  %378 = load i32, i32* %scan_pos, align 4, !dbg !6755
  %add57 = add nsw i32 %378, %377, !dbg !6755
  store i32 %add57, i32* %scan_pos, align 4, !dbg !6755
  %379 = load i32, i32* %scan_pos, align 4, !dbg !6756
  %380 = load i32, i32* %num_coeffs, align 4, !dbg !6758
  %cmp58 = icmp sge i32 %379, %380, !dbg !6759
  br i1 %cmp58, label %if.then62, label %lor.lhs.false, !dbg !6760

lor.lhs.false:                                    ; preds = %if.end56
  %381 = load i32, i32* %scan_pos, align 4, !dbg !6761
  %cmp60 = icmp slt i32 %381, 0, !dbg !6763
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !6764

if.then62:                                        ; preds = %lor.lhs.false, %if.end56
  br label %while.end, !dbg !6765

if.end63:                                         ; preds = %lor.lhs.false
  %382 = load i32, i32* %scan_pos, align 4, !dbg !6766
  %idxprom64 = sext i32 %382 to i64, !dbg !6767
  %383 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6767
  %scan65 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %383, i32 0, i32 21, !dbg !6768
  %384 = load i8*, i8** %scan65, align 8, !dbg !6768
  %arrayidx66 = getelementptr inbounds i8, i8* %384, i64 %idxprom64, !dbg !6767
  %385 = load i8, i8* %arrayidx66, align 1, !dbg !6767
  %conv67 = zext i8 %385 to i32, !dbg !6767
  store i32 %conv67, i32* %pos, align 4, !dbg !6769
  %386 = load i32, i32* %val, align 4, !dbg !6770
  %tobool68 = icmp ne i32 %386, 0, !dbg !6770
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !6772

if.then69:                                        ; preds = %if.end63
  br label %do.body, !dbg !6773, !llvm.loop !6774

do.body:                                          ; preds = %if.then69
  br label %do.end, !dbg !6775

do.end:                                           ; preds = %do.body
  br label %if.end70, !dbg !6778

if.end70:                                         ; preds = %do.end, %if.end63
  %387 = load i32, i32* %pos, align 4, !dbg !6780
  %idxprom71 = sext i32 %387 to i64, !dbg !6781
  %388 = load i16*, i16** %base_tab, align 8, !dbg !6781
  %arrayidx72 = getelementptr inbounds i16, i16* %388, i64 %idxprom71, !dbg !6781
  %389 = load i16, i16* %arrayidx72, align 2, !dbg !6781
  %conv73 = zext i16 %389 to i32, !dbg !6781
  %390 = load i32, i32* %quant.addr, align 4, !dbg !6782
  %mul74 = mul i32 %conv73, %390, !dbg !6783
  %shr75 = lshr i32 %mul74, 9, !dbg !6784
  store i32 %shr75, i32* %q, align 4, !dbg !6785
  %391 = load i32, i32* %q, align 4, !dbg !6786
  %cmp76 = icmp ugt i32 %391, 1, !dbg !6788
  br i1 %cmp76, label %if.then78, label %if.end88, !dbg !6789

if.then78:                                        ; preds = %if.end70
  %392 = load i32, i32* %val, align 4, !dbg !6790
  %393 = load i32, i32* %q, align 4, !dbg !6791
  %mul79 = mul i32 %392, %393, !dbg !6792
  %394 = load i32, i32* %val, align 4, !dbg !6793
  %cmp80 = icmp sgt i32 %394, 0, !dbg !6794
  %cond82 = select i1 %cmp80, i32 1, i32 -1, !dbg !6795
  %395 = load i32, i32* %q, align 4, !dbg !6796
  %xor83 = xor i32 %395, 1, !dbg !6797
  %sub84 = sub i32 %xor83, 1, !dbg !6798
  %shr85 = lshr i32 %sub84, 1, !dbg !6799
  %mul86 = mul i32 %cond82, %shr85, !dbg !6800
  %add87 = add i32 %mul79, %mul86, !dbg !6801
  store i32 %add87, i32* %val, align 4, !dbg !6802
  br label %if.end88, !dbg !6803

if.end88:                                         ; preds = %if.then78, %if.end70
  %396 = load i32, i32* %val, align 4, !dbg !6804
  %397 = load i32, i32* %pos, align 4, !dbg !6805
  %idxprom89 = sext i32 %397 to i64, !dbg !6806
  %arrayidx90 = getelementptr inbounds [64 x i32], [64 x i32]* %trvec, i64 0, i64 %idxprom89, !dbg !6806
  store i32 %396, i32* %arrayidx90, align 4, !dbg !6807
  %398 = load i32, i32* %val, align 4, !dbg !6808
  %tobool91 = icmp ne i32 %398, 0, !dbg !6809
  %lnot = xor i1 %tobool91, true, !dbg !6809
  %lnot92 = xor i1 %lnot, true, !dbg !6810
  %lnot.ext = zext i1 %lnot92 to i32, !dbg !6810
  %399 = load i32, i32* %pos, align 4, !dbg !6811
  %400 = load i32, i32* %col_mask, align 4, !dbg !6812
  %and93 = and i32 %399, %400, !dbg !6813
  %idxprom94 = sext i32 %and93 to i64, !dbg !6814
  %arrayidx95 = getelementptr inbounds [8 x i8], [8 x i8]* %col_flags, i64 0, i64 %idxprom94, !dbg !6814
  %401 = load i8, i8* %arrayidx95, align 1, !dbg !6815
  %conv96 = zext i8 %401 to i32, !dbg !6815
  %or97 = or i32 %conv96, %lnot.ext, !dbg !6815
  %conv98 = trunc i32 %or97 to i8, !dbg !6815
  store i8 %conv98, i8* %arrayidx95, align 1, !dbg !6815
  br label %while.cond, !dbg !6816, !llvm.loop !6817

while.end:                                        ; preds = %if.then62, %if.then25, %while.cond
  %402 = load i32, i32* %scan_pos, align 4, !dbg !6818
  %cmp99 = icmp slt i32 %402, 0, !dbg !6820
  br i1 %cmp99, label %if.then108, label %lor.lhs.false101, !dbg !6821

lor.lhs.false101:                                 ; preds = %while.end
  %403 = load i32, i32* %scan_pos, align 4, !dbg !6822
  %404 = load i32, i32* %num_coeffs, align 4, !dbg !6824
  %cmp102 = icmp sge i32 %403, %404, !dbg !6825
  br i1 %cmp102, label %land.lhs.true, label %if.end109, !dbg !6826

land.lhs.true:                                    ; preds = %lor.lhs.false101
  %405 = load i32, i32* %sym, align 4, !dbg !6827
  %406 = load %struct.RVMapDesc*, %struct.RVMapDesc** %rvmap, align 8, !dbg !6829
  %eob_sym104 = getelementptr inbounds %struct.RVMapDesc, %struct.RVMapDesc* %406, i32 0, i32 0, !dbg !6830
  %407 = load i8, i8* %eob_sym104, align 1, !dbg !6830
  %conv105 = zext i8 %407 to i32, !dbg !6829
  %cmp106 = icmp ne i32 %405, %conv105, !dbg !6831
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !6832

if.then108:                                       ; preds = %land.lhs.true, %while.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !6833
  br label %return, !dbg !6833

if.end109:                                        ; preds = %land.lhs.true, %lor.lhs.false101
  %408 = load i32, i32* %is_intra.addr, align 4, !dbg !6834
  %tobool110 = icmp ne i32 %408, 0, !dbg !6834
  br i1 %tobool110, label %land.lhs.true111, label %if.end126, !dbg !6836

land.lhs.true111:                                 ; preds = %if.end109
  %409 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6837
  %is_2d_trans = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %409, i32 0, i32 33, !dbg !6839
  %410 = load i32, i32* %is_2d_trans, align 8, !dbg !6839
  %tobool112 = icmp ne i32 %410, 0, !dbg !6837
  br i1 %tobool112, label %if.then113, label %if.end126, !dbg !6840

if.then113:                                       ; preds = %land.lhs.true111
  %arrayidx114 = getelementptr inbounds [64 x i32], [64 x i32]* %trvec, i64 0, i64 0, !dbg !6841
  %411 = load i32, i32* %arrayidx114, align 16, !dbg !6841
  %412 = load i32*, i32** %prev_dc.addr, align 8, !dbg !6843
  %413 = load i32, i32* %412, align 4, !dbg !6844
  %add115 = add nsw i32 %413, %411, !dbg !6844
  store i32 %add115, i32* %412, align 4, !dbg !6844
  %414 = load i32*, i32** %prev_dc.addr, align 8, !dbg !6845
  %415 = load i32, i32* %414, align 4, !dbg !6846
  %arrayidx116 = getelementptr inbounds [64 x i32], [64 x i32]* %trvec, i64 0, i64 0, !dbg !6847
  store i32 %415, i32* %arrayidx116, align 16, !dbg !6848
  %416 = load i32*, i32** %prev_dc.addr, align 8, !dbg !6849
  %417 = load i32, i32* %416, align 4, !dbg !6850
  %tobool117 = icmp ne i32 %417, 0, !dbg !6851
  %lnot118 = xor i1 %tobool117, true, !dbg !6851
  %lnot120 = xor i1 %lnot118, true, !dbg !6852
  %lnot.ext121 = zext i1 %lnot120 to i32, !dbg !6852
  %arrayidx122 = getelementptr inbounds [8 x i8], [8 x i8]* %col_flags, i64 0, i64 0, !dbg !6853
  %418 = load i8, i8* %arrayidx122, align 1, !dbg !6854
  %conv123 = zext i8 %418 to i32, !dbg !6854
  %or124 = or i32 %conv123, %lnot.ext121, !dbg !6854
  %conv125 = trunc i32 %or124 to i8, !dbg !6854
  store i8 %conv125, i8* %arrayidx122, align 1, !dbg !6854
  br label %if.end126, !dbg !6855

if.end126:                                        ; preds = %if.then113, %land.lhs.true111, %if.end109
  %419 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6856
  %transform_size127 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %419, i32 0, i32 31, !dbg !6858
  %420 = load i32, i32* %transform_size127, align 8, !dbg !6858
  %421 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6859
  %blk_size128 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %421, i32 0, i32 14, !dbg !6860
  %422 = load i32, i32* %blk_size128, align 8, !dbg !6860
  %cmp129 = icmp sgt i32 %420, %422, !dbg !6861
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !6862

if.then131:                                       ; preds = %if.end126
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0)), !dbg !6863
  store i32 -1094995529, i32* %retval, align 4, !dbg !6865
  br label %return, !dbg !6865

if.end132:                                        ; preds = %if.end126
  %423 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6866
  %inv_transform = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %423, i32 0, i32 30, !dbg !6867
  %424 = load void (i32*, i16*, i64, i8*)*, void (i32*, i16*, i64, i8*)** %inv_transform, align 8, !dbg !6867
  %arraydecay133 = getelementptr inbounds [64 x i32], [64 x i32]* %trvec, i32 0, i32 0, !dbg !6868
  %425 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6869
  %buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %425, i32 0, i32 7, !dbg !6870
  %426 = load i16*, i16** %buf, align 8, !dbg !6870
  %427 = load i32, i32* %offs.addr, align 4, !dbg !6871
  %idx.ext = sext i32 %427 to i64, !dbg !6872
  %add.ptr = getelementptr inbounds i16, i16* %426, i64 %idx.ext, !dbg !6872
  %428 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6873
  %pitch134 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %428, i32 0, i32 11, !dbg !6874
  %429 = load i64, i64* %pitch134, align 8, !dbg !6874
  %arraydecay135 = getelementptr inbounds [8 x i8], [8 x i8]* %col_flags, i32 0, i32 0, !dbg !6875
  call void %424(i32* %arraydecay133, i16* %add.ptr, i64 %429, i8* %arraydecay135), !dbg !6866
  %430 = load i32, i32* %is_intra.addr, align 4, !dbg !6876
  %tobool136 = icmp ne i32 %430, 0, !dbg !6876
  br i1 %tobool136, label %if.end139, label %if.then137, !dbg !6878

if.then137:                                       ; preds = %if.end132
  %431 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6879
  %432 = load void (i16*, i16*, i64, i32)*, void (i16*, i16*, i64, i32)** %mc.addr, align 8, !dbg !6880
  %433 = load void (i16*, i16*, i16*, i64, i32, i32)*, void (i16*, i16*, i16*, i64, i32, i32)** %mc_avg.addr, align 8, !dbg !6881
  %434 = load i32, i32* %offs.addr, align 4, !dbg !6882
  %435 = load i32, i32* %mv_x.addr, align 4, !dbg !6883
  %436 = load i32, i32* %mv_y.addr, align 4, !dbg !6884
  %437 = load i32, i32* %mv_x2.addr, align 4, !dbg !6885
  %438 = load i32, i32* %mv_y2.addr, align 4, !dbg !6886
  %439 = load i32, i32* %mc_type.addr, align 4, !dbg !6887
  %440 = load i32, i32* %mc_type2.addr, align 4, !dbg !6888
  %call138 = call i32 @ivi_mc(%struct.IVIBandDesc* %431, void (i16*, i16*, i64, i32)* %432, void (i16*, i16*, i16*, i64, i32, i32)* %433, i32 %434, i32 %435, i32 %436, i32 %437, i32 %438, i32 %439, i32 %440), !dbg !6889
  store i32 %call138, i32* %retval, align 4, !dbg !6890
  br label %return, !dbg !6890

if.end139:                                        ; preds = %if.end132
  store i32 0, i32* %retval, align 4, !dbg !6891
  br label %return, !dbg !6891

return:                                           ; preds = %if.end139, %if.then137, %if.then131, %if.then108, %if.then50, %if.then15, %if.then
  %441 = load i32, i32* %retval, align 4, !dbg !6892
  ret i32 %441, !dbg !6892
}

; Function Attrs: nounwind uwtable
define internal i32 @ivi_dc_transform(%struct.IVIBandDesc* %band, i32* %prev_dc, i32 %buf_offs, i32 %blk_size) #2 !dbg !6893 {
entry:
  %retval = alloca i32, align 4
  %band.addr = alloca %struct.IVIBandDesc*, align 8
  %prev_dc.addr = alloca i32*, align 8
  %buf_offs.addr = alloca i32, align 4
  %blk_size.addr = alloca i32, align 4
  %buf_size = alloca i32, align 4
  %min_size = alloca i32, align 4
  store %struct.IVIBandDesc* %band, %struct.IVIBandDesc** %band.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IVIBandDesc** %band.addr, metadata !6896, metadata !984), !dbg !6897
  store i32* %prev_dc, i32** %prev_dc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %prev_dc.addr, metadata !6898, metadata !984), !dbg !6899
  store i32 %buf_offs, i32* %buf_offs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_offs.addr, metadata !6900, metadata !984), !dbg !6901
  store i32 %blk_size, i32* %blk_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blk_size.addr, metadata !6902, metadata !984), !dbg !6903
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !6904, metadata !984), !dbg !6905
  %0 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6906
  %pitch = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %0, i32 0, i32 11, !dbg !6907
  %1 = load i64, i64* %pitch, align 8, !dbg !6907
  %2 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6908
  %aheight = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %2, i32 0, i32 4, !dbg !6909
  %3 = load i32, i32* %aheight, align 8, !dbg !6909
  %conv = sext i32 %3 to i64, !dbg !6908
  %mul = mul nsw i64 %1, %conv, !dbg !6910
  %4 = load i32, i32* %buf_offs.addr, align 4, !dbg !6911
  %conv1 = sext i32 %4 to i64, !dbg !6911
  %sub = sub nsw i64 %mul, %conv1, !dbg !6912
  %conv2 = trunc i64 %sub to i32, !dbg !6906
  store i32 %conv2, i32* %buf_size, align 4, !dbg !6905
  call void @llvm.dbg.declare(metadata i32* %min_size, metadata !6913, metadata !984), !dbg !6914
  %5 = load i32, i32* %blk_size.addr, align 4, !dbg !6915
  %sub3 = sub nsw i32 %5, 1, !dbg !6916
  %conv4 = sext i32 %sub3 to i64, !dbg !6917
  %6 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6918
  %pitch5 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %6, i32 0, i32 11, !dbg !6919
  %7 = load i64, i64* %pitch5, align 8, !dbg !6919
  %mul6 = mul nsw i64 %conv4, %7, !dbg !6920
  %8 = load i32, i32* %blk_size.addr, align 4, !dbg !6921
  %conv7 = sext i32 %8 to i64, !dbg !6921
  %add = add nsw i64 %mul6, %conv7, !dbg !6922
  %conv8 = trunc i64 %add to i32, !dbg !6917
  store i32 %conv8, i32* %min_size, align 4, !dbg !6914
  %9 = load i32, i32* %min_size, align 4, !dbg !6923
  %10 = load i32, i32* %buf_size, align 4, !dbg !6925
  %cmp = icmp sgt i32 %9, %10, !dbg !6926
  br i1 %cmp, label %if.then, label %if.end, !dbg !6927

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

if.end:                                           ; preds = %entry
  %11 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6929
  %dc_transform = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %11, i32 0, i32 32, !dbg !6930
  %12 = load void (i32*, i16*, i64, i32)*, void (i32*, i16*, i64, i32)** %dc_transform, align 8, !dbg !6930
  %13 = load i32*, i32** %prev_dc.addr, align 8, !dbg !6931
  %14 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6932
  %buf = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %14, i32 0, i32 7, !dbg !6933
  %15 = load i16*, i16** %buf, align 8, !dbg !6933
  %16 = load i32, i32* %buf_offs.addr, align 4, !dbg !6934
  %idx.ext = sext i32 %16 to i64, !dbg !6935
  %add.ptr = getelementptr inbounds i16, i16* %15, i64 %idx.ext, !dbg !6935
  %17 = load %struct.IVIBandDesc*, %struct.IVIBandDesc** %band.addr, align 8, !dbg !6936
  %pitch10 = getelementptr inbounds %struct.IVIBandDesc, %struct.IVIBandDesc* %17, i32 0, i32 11, !dbg !6937
  %18 = load i64, i64* %pitch10, align 8, !dbg !6937
  %19 = load i32, i32* %blk_size.addr, align 4, !dbg !6938
  call void %12(i32* %13, i16* %add.ptr, i64 %18, i32 %19), !dbg !6929
  store i32 0, i32* %retval, align 4, !dbg !6939
  br label %return, !dbg !6939

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !6940
  ret i32 %20, !dbg !6940
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #3 !dbg !6941 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6942, metadata !984), !dbg !6943
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6944, metadata !984), !dbg !6945
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6946, metadata !984), !dbg !6947
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6948
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6949
  %1 = load i32, i32* %index, align 8, !dbg !6949
  store i32 %1, i32* %re_index, align 4, !dbg !6947
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6950, metadata !984), !dbg !6951
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6952, metadata !984), !dbg !6953
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6954
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6955
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6955
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6953
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !6956
  %5 = load i32, i32* %re_index, align 4, !dbg !6957
  %6 = load i32, i32* %n.addr, align 4, !dbg !6958
  %add = add i32 %5, %6, !dbg !6959
  %cmp = icmp ugt i32 %4, %add, !dbg !6960
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6961

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !6962
  %8 = load i32, i32* %n.addr, align 4, !dbg !6964
  %add1 = add i32 %7, %8, !dbg !6965
  br label %cond.end, !dbg !6966

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !6967
  br label %cond.end, !dbg !6969

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !6970
  store i32 %cond, i32* %re_index, align 4, !dbg !6972
  %10 = load i32, i32* %re_index, align 4, !dbg !6973
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6974
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !6975
  store i32 %10, i32* %index2, align 8, !dbg !6976
  ret void, !dbg !6977
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #3 !dbg !6978 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6979, metadata !984), !dbg !6980
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6981, metadata !984), !dbg !6982
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6983, metadata !984), !dbg !6984
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6985, metadata !984), !dbg !6986
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6987
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6988
  %1 = load i32, i32* %index, align 8, !dbg !6988
  store i32 %1, i32* %re_index, align 4, !dbg !6986
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6989, metadata !984), !dbg !6990
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6991
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !6992
  %3 = load i8*, i8** %buffer, align 8, !dbg !6992
  %4 = load i32, i32* %re_index, align 4, !dbg !6993
  %shr = lshr i32 %4, 3, !dbg !6994
  %idx.ext = zext i32 %shr to i64, !dbg !6995
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !6995
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6996
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !6996
  %6 = load i32, i32* %l, align 1, !dbg !6996
  %7 = load i32, i32* %re_index, align 4, !dbg !6997
  %and = and i32 %7, 7, !dbg !6998
  %shr3 = lshr i32 %6, %and, !dbg !6999
  store i32 %shr3, i32* %re_cache, align 4, !dbg !7000
  %8 = load i32, i32* %re_cache, align 4, !dbg !7001
  %9 = load i32, i32* %n.addr, align 4, !dbg !7002
  %call = call i32 @zero_extend(i32 %8, i32 %9) #1, !dbg !7003
  store i32 %call, i32* %tmp, align 4, !dbg !7004
  %10 = load i32, i32* %tmp, align 4, !dbg !7005
  ret i32 %10, !dbg !7006
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!980, !981}
!llvm.ident = !{!982}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !897, globals: !909)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ivi.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !888, line: 39, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/ivi.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892, !893, !894, !895, !896}
!890 = !DIEnumerator(name: "IVI4_FRAMETYPE_INTRA", value: 0)
!891 = !DIEnumerator(name: "IVI4_FRAMETYPE_INTRA1", value: 1)
!892 = !DIEnumerator(name: "IVI4_FRAMETYPE_INTER", value: 2)
!893 = !DIEnumerator(name: "IVI4_FRAMETYPE_BIDIR", value: 3)
!894 = !DIEnumerator(name: "IVI4_FRAMETYPE_INTER_NOREF", value: 4)
!895 = !DIEnumerator(name: "IVI4_FRAMETYPE_NULL_FIRST", value: 5)
!896 = !DIEnumerator(name: "IVI4_FRAMETYPE_NULL_LAST", value: 6)
!897 = !{!898, !899, !900, !908}
!898 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!899 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !903, line: 221, size: 32, align: 8, elements: !904)
!903 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!904 = !{!905}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !902, file: !903, line: 221, baseType: !906, size: 32, align: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !907, line: 51, baseType: !899)
!907 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!909 = !{!910, !922, !923, !930, !931, !935, !953, !968, !969, !979}
!910 = distinct !DIGlobalVariable(name: "table_data", scope: !911, file: !912, line: 182, type: !916, isLocal: true, isDefinition: true, variable: [131072 x [2 x i16]]* @ff_ivi_init_static_vlc.table_data)
!911 = distinct !DISubprogram(name: "ff_ivi_init_static_vlc", scope: !912, file: !912, line: 179, type: !913, isLocal: false, isDefinition: true, scopeLine: 180, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!912 = !DIFile(filename: "libavcodec/ivi.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!913 = !DISubroutineType(types: !914)
!914 = !{null}
!915 = !{}
!916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 4194304, align: 16, elements: !919)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !907, line: 37, baseType: !918)
!918 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!919 = !{!920, !921}
!920 = !DISubrange(count: 131072)
!921 = !DISubrange(count: 2)
!922 = distinct !DIGlobalVariable(name: "initialized_vlcs", scope: !911, file: !912, line: 183, type: !898, isLocal: true, isDefinition: true, variable: i32* @ff_ivi_init_static_vlc.initialized_vlcs)
!923 = distinct !DIGlobalVariable(name: "ff_ivi_vertical_scan_8x8", scope: !0, file: !912, line: 1237, type: !924, isLocal: false, isDefinition: true, variable: [64 x i8]* @ff_ivi_vertical_scan_8x8)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 512, align: 8, elements: !928)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !907, line: 48, baseType: !927)
!927 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!928 = !{!929}
!929 = !DISubrange(count: 64)
!930 = distinct !DIGlobalVariable(name: "ff_ivi_horizontal_scan_8x8", scope: !0, file: !912, line: 1248, type: !924, isLocal: false, isDefinition: true, variable: [64 x i8]* @ff_ivi_horizontal_scan_8x8)
!931 = distinct !DIGlobalVariable(name: "ff_ivi_direct_scan_4x4", scope: !0, file: !912, line: 1259, type: !932, isLocal: false, isDefinition: true, variable: [16 x i8]* @ff_ivi_direct_scan_4x4)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 128, align: 8, elements: !933)
!933 = !{!934}
!934 = !DISubrange(count: 16)
!935 = distinct !DIGlobalVariable(name: "ff_ivi_rvmap_tabs", scope: !0, file: !912, line: 1267, type: !936, isLocal: false, isDefinition: true, variable: [9 x %struct.RVMapDesc]* @ff_ivi_rvmap_tabs)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 37008, align: 8, elements: !951)
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "RVMapDesc", file: !888, line: 102, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RVMapDesc", file: !888, line: 97, size: 4112, align: 8, elements: !940)
!940 = !{!941, !942, !943, !947}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "eob_sym", scope: !939, file: !888, line: 98, baseType: !926, size: 8, align: 8)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "esc_sym", scope: !939, file: !888, line: 99, baseType: !926, size: 8, align: 8, offset: 8)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "runtab", scope: !939, file: !888, line: 100, baseType: !944, size: 2048, align: 8, offset: 16)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 2048, align: 8, elements: !945)
!945 = !{!946}
!946 = !DISubrange(count: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "valtab", scope: !939, file: !888, line: 101, baseType: !948, size: 2048, align: 8, offset: 2064)
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 2048, align: 8, elements: !945)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !907, line: 36, baseType: !950)
!950 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!951 = !{!952}
!952 = !DISubrange(count: 9)
!953 = distinct !DIGlobalVariable(name: "ivi_mb_vlc_tabs", scope: !0, file: !912, line: 73, type: !954, isLocal: true, isDefinition: true, variable: [8 x %struct.VLC]* @ivi_mb_vlc_tabs)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 1536, align: 64, elements: !966)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !956, line: 30, baseType: !957)
!956 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !956, line: 26, size: 192, align: 64, elements: !958)
!958 = !{!959, !960, !964, !965}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !957, file: !956, line: 27, baseType: !898, size: 32, align: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !957, file: !956, line: 28, baseType: !961, size: 64, align: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64, align: 64)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 32, align: 16, elements: !963)
!963 = !{!921}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !957, file: !956, line: 29, baseType: !898, size: 32, align: 32, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !957, file: !956, line: 29, baseType: !898, size: 32, align: 32, offset: 160)
!966 = !{!967}
!967 = !DISubrange(count: 8)
!968 = distinct !DIGlobalVariable(name: "ivi_blk_vlc_tabs", scope: !0, file: !912, line: 74, type: !954, isLocal: true, isDefinition: true, variable: [8 x %struct.VLC]* @ivi_blk_vlc_tabs)
!969 = distinct !DIGlobalVariable(name: "ivi_mb_huff_desc", scope: !0, file: !912, line: 50, type: !970, isLocal: true, isDefinition: true, variable: [8 x %struct.IVIHuffDesc]* @ivi_mb_huff_desc)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 1280, align: 32, elements: !966)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVIHuffDesc", file: !888, line: 58, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVIHuffDesc", file: !888, line: 55, size: 160, align: 32, elements: !974)
!974 = !{!975, !977}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "num_rows", scope: !973, file: !888, line: 56, baseType: !976, size: 32, align: 32)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !907, line: 38, baseType: !898)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "xbits", scope: !973, file: !888, line: 57, baseType: !978, size: 128, align: 8, offset: 32)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 128, align: 8, elements: !933)
!979 = distinct !DIGlobalVariable(name: "ivi_blk_huff_desc", scope: !0, file: !912, line: 62, type: !970, isLocal: true, isDefinition: true, variable: [8 x %struct.IVIHuffDesc]* @ivi_blk_huff_desc)
!980 = !{i32 2, !"Dwarf Version", i32 4}
!981 = !{i32 2, !"Debug Info Version", i32 3}
!982 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!983 = !DILocalVariable(name: "i", scope: !911, file: !912, line: 181, type: !898)
!984 = !DIExpression()
!985 = !DILocation(line: 181, column: 9, scope: !911)
!986 = !DILocation(line: 185, column: 9, scope: !987)
!987 = distinct !DILexicalBlock(scope: !911, file: !912, line: 185, column: 9)
!988 = !DILocation(line: 185, column: 9, scope: !911)
!989 = !DILocation(line: 186, column: 9, scope: !987)
!990 = !DILocation(line: 187, column: 12, scope: !991)
!991 = distinct !DILexicalBlock(scope: !911, file: !912, line: 187, column: 5)
!992 = !DILocation(line: 187, column: 10, scope: !991)
!993 = !DILocation(line: 187, column: 17, scope: !994)
!994 = !DILexicalBlockFile(scope: !995, file: !912, discriminator: 1)
!995 = distinct !DILexicalBlock(scope: !991, file: !912, line: 187, column: 5)
!996 = !DILocation(line: 187, column: 19, scope: !994)
!997 = !DILocation(line: 187, column: 5, scope: !994)
!998 = !DILocation(line: 188, column: 49, scope: !999)
!999 = distinct !DILexicalBlock(scope: !995, file: !912, line: 187, column: 29)
!1000 = !DILocation(line: 188, column: 51, scope: !999)
!1001 = !DILocation(line: 188, column: 55, scope: !999)
!1002 = !DILocation(line: 188, column: 47, scope: !999)
!1003 = !DILocation(line: 188, column: 25, scope: !999)
!1004 = !DILocation(line: 188, column: 9, scope: !999)
!1005 = !DILocation(line: 188, column: 28, scope: !999)
!1006 = !DILocation(line: 188, column: 34, scope: !999)
!1007 = !DILocation(line: 189, column: 25, scope: !999)
!1008 = !DILocation(line: 189, column: 9, scope: !999)
!1009 = !DILocation(line: 189, column: 28, scope: !999)
!1010 = !DILocation(line: 189, column: 44, scope: !999)
!1011 = !DILocation(line: 190, column: 53, scope: !999)
!1012 = !DILocation(line: 190, column: 36, scope: !999)
!1013 = !DILocation(line: 191, column: 52, scope: !999)
!1014 = !DILocation(line: 191, column: 36, scope: !999)
!1015 = !DILocation(line: 190, column: 9, scope: !999)
!1016 = !DILocation(line: 192, column: 51, scope: !999)
!1017 = !DILocation(line: 192, column: 53, scope: !999)
!1018 = !DILocation(line: 192, column: 57, scope: !999)
!1019 = !DILocation(line: 192, column: 62, scope: !999)
!1020 = !DILocation(line: 192, column: 48, scope: !999)
!1021 = !DILocation(line: 192, column: 26, scope: !999)
!1022 = !DILocation(line: 192, column: 9, scope: !999)
!1023 = !DILocation(line: 192, column: 29, scope: !999)
!1024 = !DILocation(line: 192, column: 35, scope: !999)
!1025 = !DILocation(line: 193, column: 26, scope: !999)
!1026 = !DILocation(line: 193, column: 9, scope: !999)
!1027 = !DILocation(line: 193, column: 29, scope: !999)
!1028 = !DILocation(line: 193, column: 45, scope: !999)
!1029 = !DILocation(line: 194, column: 54, scope: !999)
!1030 = !DILocation(line: 194, column: 36, scope: !999)
!1031 = !DILocation(line: 195, column: 53, scope: !999)
!1032 = !DILocation(line: 195, column: 36, scope: !999)
!1033 = !DILocation(line: 194, column: 9, scope: !999)
!1034 = !DILocation(line: 196, column: 5, scope: !999)
!1035 = !DILocation(line: 187, column: 25, scope: !1036)
!1036 = !DILexicalBlockFile(scope: !995, file: !912, discriminator: 2)
!1037 = !DILocation(line: 187, column: 5, scope: !1036)
!1038 = distinct !{!1038, !1039}
!1039 = !DILocation(line: 187, column: 5, scope: !911)
!1040 = !DILocation(line: 197, column: 22, scope: !911)
!1041 = !DILocation(line: 198, column: 1, scope: !911)
!1042 = !DILocation(line: 198, column: 1, scope: !1043)
!1043 = !DILexicalBlockFile(scope: !911, file: !912, discriminator: 1)
!1044 = distinct !DISubprogram(name: "ivi_create_huff_from_desc", scope: !912, file: !912, line: 145, type: !1045, isLocal: true, isDefinition: true, scopeLine: 146, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!898, !1047, !1048, !898}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64, align: 64)
!1049 = !DILocalVariable(name: "cb", arg: 1, scope: !1044, file: !912, line: 145, type: !1047)
!1050 = !DILocation(line: 145, column: 57, scope: !1044)
!1051 = !DILocalVariable(name: "vlc", arg: 2, scope: !1044, file: !912, line: 145, type: !1048)
!1052 = !DILocation(line: 145, column: 66, scope: !1044)
!1053 = !DILocalVariable(name: "flag", arg: 3, scope: !1044, file: !912, line: 145, type: !898)
!1054 = !DILocation(line: 145, column: 75, scope: !1044)
!1055 = !DILocalVariable(name: "pos", scope: !1044, file: !912, line: 147, type: !898)
!1056 = !DILocation(line: 147, column: 9, scope: !1044)
!1057 = !DILocalVariable(name: "i", scope: !1044, file: !912, line: 147, type: !898)
!1058 = !DILocation(line: 147, column: 14, scope: !1044)
!1059 = !DILocalVariable(name: "j", scope: !1044, file: !912, line: 147, type: !898)
!1060 = !DILocation(line: 147, column: 17, scope: !1044)
!1061 = !DILocalVariable(name: "codes_per_row", scope: !1044, file: !912, line: 147, type: !898)
!1062 = !DILocation(line: 147, column: 20, scope: !1044)
!1063 = !DILocalVariable(name: "prefix", scope: !1044, file: !912, line: 147, type: !898)
!1064 = !DILocation(line: 147, column: 35, scope: !1044)
!1065 = !DILocalVariable(name: "not_last_row", scope: !1044, file: !912, line: 147, type: !898)
!1066 = !DILocation(line: 147, column: 43, scope: !1044)
!1067 = !DILocalVariable(name: "codewords", scope: !1044, file: !912, line: 148, type: !1068)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1069, size: 4096, align: 16, elements: !945)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !907, line: 49, baseType: !1070)
!1070 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1071 = !DILocation(line: 148, column: 14, scope: !1044)
!1072 = !DILocalVariable(name: "bits", scope: !1044, file: !912, line: 149, type: !944)
!1073 = !DILocation(line: 149, column: 13, scope: !1044)
!1074 = !DILocation(line: 151, column: 9, scope: !1044)
!1075 = !DILocation(line: 153, column: 12, scope: !1076)
!1076 = distinct !DILexicalBlock(scope: !1044, file: !912, line: 153, column: 5)
!1077 = !DILocation(line: 153, column: 10, scope: !1076)
!1078 = !DILocation(line: 153, column: 17, scope: !1079)
!1079 = !DILexicalBlockFile(scope: !1080, file: !912, discriminator: 1)
!1080 = distinct !DILexicalBlock(scope: !1076, file: !912, line: 153, column: 5)
!1081 = !DILocation(line: 153, column: 21, scope: !1079)
!1082 = !DILocation(line: 153, column: 25, scope: !1079)
!1083 = !DILocation(line: 153, column: 19, scope: !1079)
!1084 = !DILocation(line: 153, column: 5, scope: !1079)
!1085 = !DILocation(line: 154, column: 40, scope: !1086)
!1086 = distinct !DILexicalBlock(scope: !1080, file: !912, line: 153, column: 40)
!1087 = !DILocation(line: 154, column: 30, scope: !1086)
!1088 = !DILocation(line: 154, column: 34, scope: !1086)
!1089 = !DILocation(line: 154, column: 27, scope: !1086)
!1090 = !DILocation(line: 154, column: 23, scope: !1086)
!1091 = !DILocation(line: 155, column: 25, scope: !1086)
!1092 = !DILocation(line: 155, column: 30, scope: !1086)
!1093 = !DILocation(line: 155, column: 34, scope: !1086)
!1094 = !DILocation(line: 155, column: 43, scope: !1086)
!1095 = !DILocation(line: 155, column: 27, scope: !1086)
!1096 = !DILocation(line: 155, column: 22, scope: !1086)
!1097 = !DILocation(line: 156, column: 25, scope: !1086)
!1098 = !DILocation(line: 156, column: 22, scope: !1086)
!1099 = !DILocation(line: 156, column: 28, scope: !1086)
!1100 = !DILocation(line: 156, column: 47, scope: !1086)
!1101 = !DILocation(line: 156, column: 37, scope: !1086)
!1102 = !DILocation(line: 156, column: 41, scope: !1086)
!1103 = !DILocation(line: 156, column: 52, scope: !1086)
!1104 = !DILocation(line: 156, column: 50, scope: !1086)
!1105 = !DILocation(line: 156, column: 33, scope: !1086)
!1106 = !DILocation(line: 156, column: 16, scope: !1086)
!1107 = !DILocation(line: 158, column: 16, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !1086, file: !912, line: 158, column: 9)
!1109 = !DILocation(line: 158, column: 14, scope: !1108)
!1110 = !DILocation(line: 158, column: 21, scope: !1111)
!1111 = !DILexicalBlockFile(scope: !1112, file: !912, discriminator: 1)
!1112 = distinct !DILexicalBlock(scope: !1108, file: !912, line: 158, column: 9)
!1113 = !DILocation(line: 158, column: 25, scope: !1111)
!1114 = !DILocation(line: 158, column: 23, scope: !1111)
!1115 = !DILocation(line: 158, column: 9, scope: !1111)
!1116 = !DILocation(line: 159, column: 17, scope: !1117)
!1117 = distinct !DILexicalBlock(scope: !1118, file: !912, line: 159, column: 17)
!1118 = distinct !DILexicalBlock(scope: !1112, file: !912, line: 158, column: 45)
!1119 = !DILocation(line: 159, column: 21, scope: !1117)
!1120 = !DILocation(line: 159, column: 17, scope: !1118)
!1121 = !DILocation(line: 160, column: 17, scope: !1117)
!1122 = !DILocation(line: 162, column: 25, scope: !1118)
!1123 = !DILocation(line: 162, column: 39, scope: !1118)
!1124 = !DILocation(line: 162, column: 29, scope: !1118)
!1125 = !DILocation(line: 162, column: 33, scope: !1118)
!1126 = !DILocation(line: 162, column: 27, scope: !1118)
!1127 = !DILocation(line: 162, column: 44, scope: !1118)
!1128 = !DILocation(line: 162, column: 42, scope: !1118)
!1129 = !DILocation(line: 162, column: 18, scope: !1118)
!1130 = !DILocation(line: 162, column: 13, scope: !1118)
!1131 = !DILocation(line: 162, column: 23, scope: !1118)
!1132 = !DILocation(line: 163, column: 22, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1118, file: !912, line: 163, column: 17)
!1134 = !DILocation(line: 163, column: 17, scope: !1133)
!1135 = !DILocation(line: 163, column: 27, scope: !1133)
!1136 = !DILocation(line: 163, column: 17, scope: !1118)
!1137 = !DILocation(line: 164, column: 17, scope: !1133)
!1138 = !DILocation(line: 166, column: 40, scope: !1118)
!1139 = !DILocation(line: 166, column: 49, scope: !1118)
!1140 = !DILocation(line: 166, column: 47, scope: !1118)
!1141 = !DILocation(line: 166, column: 39, scope: !1118)
!1142 = !DILocation(line: 166, column: 58, scope: !1118)
!1143 = !DILocation(line: 166, column: 53, scope: !1118)
!1144 = !DILocation(line: 166, column: 30, scope: !1118)
!1145 = !DILocation(line: 166, column: 23, scope: !1118)
!1146 = !DILocation(line: 166, column: 13, scope: !1118)
!1147 = !DILocation(line: 166, column: 28, scope: !1118)
!1148 = !DILocation(line: 167, column: 23, scope: !1149)
!1149 = distinct !DILexicalBlock(scope: !1118, file: !912, line: 167, column: 17)
!1150 = !DILocation(line: 167, column: 18, scope: !1149)
!1151 = !DILocation(line: 167, column: 17, scope: !1118)
!1152 = !DILocation(line: 168, column: 22, scope: !1149)
!1153 = !DILocation(line: 168, column: 17, scope: !1149)
!1154 = !DILocation(line: 168, column: 27, scope: !1149)
!1155 = !DILocation(line: 170, column: 16, scope: !1118)
!1156 = !DILocation(line: 171, column: 9, scope: !1118)
!1157 = !DILocation(line: 158, column: 41, scope: !1158)
!1158 = !DILexicalBlockFile(scope: !1112, file: !912, discriminator: 2)
!1159 = !DILocation(line: 158, column: 9, scope: !1158)
!1160 = distinct !{!1160, !1161}
!1161 = !DILocation(line: 158, column: 9, scope: !1086)
!1162 = !DILocation(line: 172, column: 5, scope: !1086)
!1163 = !DILocation(line: 153, column: 36, scope: !1164)
!1164 = !DILexicalBlockFile(scope: !1080, file: !912, discriminator: 2)
!1165 = !DILocation(line: 153, column: 5, scope: !1164)
!1166 = distinct !{!1166, !1167}
!1167 = !DILocation(line: 153, column: 5, scope: !1044)
!1168 = !DILocation(line: 175, column: 31, scope: !1044)
!1169 = !DILocation(line: 175, column: 40, scope: !1044)
!1170 = !DILocation(line: 175, column: 45, scope: !1044)
!1171 = !DILocation(line: 175, column: 57, scope: !1044)
!1172 = !DILocation(line: 175, column: 20, scope: !1044)
!1173 = !DILocation(line: 175, column: 34, scope: !1044)
!1174 = !DILocation(line: 175, column: 12, scope: !1044)
!1175 = !DILocation(line: 175, column: 5, scope: !1044)
!1176 = !DILocation(line: 177, column: 1, scope: !1044)
!1177 = distinct !DISubprogram(name: "ff_ivi_dec_huff_desc", scope: !912, file: !912, line: 226, type: !1178, isLocal: false, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!898, !1180, !898, !898, !1191, !1199}
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1182, line: 70, baseType: !1183)
!1182 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1182, line: 61, size: 256, align: 64, elements: !1184)
!1184 = !{!1185, !1187, !1188, !1189, !1190}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1183, file: !1182, line: 62, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1183, file: !1182, line: 62, baseType: !1186, size: 64, align: 64, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1183, file: !1182, line: 67, baseType: !898, size: 32, align: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1183, file: !1182, line: 68, baseType: !898, size: 32, align: 32, offset: 160)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1183, file: !1182, line: 69, baseType: !898, size: 32, align: 32, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVIHuffTab", file: !888, line: 71, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVIHuffTab", file: !888, line: 63, size: 512, align: 64, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "tab_sel", scope: !1193, file: !888, line: 64, baseType: !976, size: 32, align: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "tab", scope: !1193, file: !888, line: 66, baseType: !1048, size: 64, align: 64, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "cust_desc", scope: !1193, file: !888, line: 69, baseType: !972, size: 160, align: 32, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "cust_tab", scope: !1193, file: !888, line: 70, baseType: !955, size: 192, align: 64, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1202)
!1202 = !{!1203, !1247, !1248, !1249, !1514, !1515, !1516, !1517, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1670, !1674, !1675, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1854, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1201, file: !35, line: 1561, baseType: !1204, size: 64, align: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1208)
!1208 = !{!1209, !1213, !1217, !1221, !1222, !1223, !1224, !1228, !1234, !1236, !1240}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1207, file: !4, line: 72, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1212)
!1212 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1207, file: !4, line: 78, baseType: !1214, size: 64, align: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64, align: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!1210, !908}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1207, file: !4, line: 85, baseType: !1218, size: 64, align: 64, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1220)
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1207, file: !4, line: 93, baseType: !898, size: 32, align: 32, offset: 192)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1207, file: !4, line: 99, baseType: !898, size: 32, align: 32, offset: 224)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1207, file: !4, line: 108, baseType: !898, size: 32, align: 32, offset: 256)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1207, file: !4, line: 113, baseType: !1225, size: 64, align: 64, offset: 320)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64, align: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!908, !908, !908}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1207, file: !4, line: 123, baseType: !1229, size: 64, align: 64, offset: 384)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64, align: 64)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!1232, !1232}
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64, align: 64)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1207, file: !4, line: 130, baseType: !1235, size: 32, align: 32, offset: 448)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1207, file: !4, line: 136, baseType: !1237, size: 64, align: 64, offset: 512)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64, align: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!1235, !908}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1207, file: !4, line: 142, baseType: !1241, size: 64, align: 64, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64, align: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!898, !1244, !908, !1210, !898}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64, align: 64)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64, align: 64)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1201, file: !35, line: 1562, baseType: !898, size: 32, align: 32, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1201, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1201, file: !35, line: 1565, baseType: !1250, size: 64, align: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1268, !1271, !1274, !1277, !1282, !1283, !1284, !1292, !1293, !1294, !1296, !1300, !1306, !1315, !1319, !1320, !1366, !1485, !1489, !1490, !1494, !1498, !1503, !1507, !1508, !1509}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1252, file: !35, line: 3475, baseType: !1210, size: 64, align: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1252, file: !35, line: 3480, baseType: !1210, size: 64, align: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1252, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1252, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1252, file: !35, line: 3487, baseType: !898, size: 32, align: 32, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1252, file: !35, line: 3488, baseType: !1260, size: 64, align: 64, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64, align: 64)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1263, line: 61, baseType: !1264)
!1263 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1263, line: 58, size: 64, align: 32, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1264, file: !1263, line: 59, baseType: !898, size: 32, align: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1264, file: !1263, line: 60, baseType: !898, size: 32, align: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1252, file: !35, line: 3489, baseType: !1269, size: 64, align: 64, offset: 320)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1252, file: !35, line: 3490, baseType: !1272, size: 64, align: 64, offset: 384)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64, align: 64)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1252, file: !35, line: 3491, baseType: !1275, size: 64, align: 64, offset: 448)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1252, file: !35, line: 3492, baseType: !1278, size: 64, align: 64, offset: 512)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !907, line: 55, baseType: !1281)
!1281 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1252, file: !35, line: 3493, baseType: !926, size: 8, align: 8, offset: 576)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1252, file: !35, line: 3494, baseType: !1204, size: 64, align: 64, offset: 640)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1252, file: !35, line: 3495, baseType: !1285, size: 64, align: 64, offset: 704)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64, align: 64)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1289)
!1289 = !{!1290, !1291}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1288, file: !35, line: 3402, baseType: !898, size: 32, align: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1288, file: !35, line: 3403, baseType: !1210, size: 64, align: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1252, file: !35, line: 3507, baseType: !1210, size: 64, align: 64, offset: 768)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1252, file: !35, line: 3516, baseType: !898, size: 32, align: 32, offset: 832)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1252, file: !35, line: 3517, baseType: !1295, size: 64, align: 64, offset: 896)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64, align: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1252, file: !35, line: 3527, baseType: !1297, size: 64, align: 64, offset: 960)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!898, !1199}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1252, file: !35, line: 3535, baseType: !1301, size: 64, align: 64, offset: 1024)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64, align: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!898, !1199, !1304}
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64, align: 64)
!1305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1252, file: !35, line: 3541, baseType: !1307, size: 64, align: 64, offset: 1088)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64, align: 64)
!1308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1309)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1311, line: 223, size: 128, align: 64, elements: !1312)
!1311 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1312 = !{!1313, !1314}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1310, file: !1311, line: 224, baseType: !1186, size: 64, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1310, file: !1311, line: 225, baseType: !1186, size: 64, align: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1252, file: !35, line: 3549, baseType: !1316, size: 64, align: 64, offset: 1152)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{null, !1295}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1252, file: !35, line: 3551, baseType: !1297, size: 64, align: 64, offset: 1216)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1252, file: !35, line: 3552, baseType: !1321, size: 64, align: 64, offset: 1280)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64, align: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!898, !1199, !1324, !898, !1325}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64, align: 64)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333, !1363}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1327, file: !35, line: 3921, baseType: !1069, size: 16, align: 16)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1327, file: !35, line: 3922, baseType: !906, size: 32, align: 32, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1327, file: !35, line: 3923, baseType: !906, size: 32, align: 32, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1327, file: !35, line: 3924, baseType: !899, size: 32, align: 32, offset: 96)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1327, file: !35, line: 3925, baseType: !1334, size: 64, align: 64, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64, align: 64)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1338)
!1338 = !{!1339, !1340, !1341, !1342, !1343, !1344, !1352, !1356, !1358, !1359, !1361, !1362}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1337, file: !35, line: 3886, baseType: !898, size: 32, align: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1337, file: !35, line: 3887, baseType: !898, size: 32, align: 32, offset: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1337, file: !35, line: 3888, baseType: !898, size: 32, align: 32, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1337, file: !35, line: 3889, baseType: !898, size: 32, align: 32, offset: 96)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1337, file: !35, line: 3890, baseType: !898, size: 32, align: 32, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1337, file: !35, line: 3897, baseType: !1345, size: 768, align: 64, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1347)
!1347 = !{!1348, !1350}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1346, file: !35, line: 3855, baseType: !1349, size: 512, align: 64)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1324, size: 512, align: 64, elements: !966)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1346, file: !35, line: 3857, baseType: !1351, size: 256, align: 32, offset: 512)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 256, align: 32, elements: !966)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1337, file: !35, line: 3903, baseType: !1353, size: 256, align: 64, offset: 960)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1324, size: 256, align: 64, elements: !1354)
!1354 = !{!1355}
!1355 = !DISubrange(count: 4)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1337, file: !35, line: 3904, baseType: !1357, size: 128, align: 32, offset: 1216)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 128, align: 32, elements: !1354)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1337, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1337, file: !35, line: 3908, baseType: !1360, size: 64, align: 64, offset: 1408)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1337, file: !35, line: 3915, baseType: !1360, size: 64, align: 64, offset: 1472)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1337, file: !35, line: 3917, baseType: !898, size: 32, align: 32, offset: 1536)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1327, file: !35, line: 3926, baseType: !1364, size: 64, align: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !907, line: 40, baseType: !1365)
!1365 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1252, file: !35, line: 3564, baseType: !1367, size: 64, align: 64, offset: 1344)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!898, !1199, !1370, !1404, !1484}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64, align: 64)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1373)
!1373 = !{!1374, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1400, !1401, !1402, !1403}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1372, file: !35, line: 1451, baseType: !1375, size: 64, align: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1377, line: 94, baseType: !1378)
!1377 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1377, line: 81, size: 192, align: 64, elements: !1379)
!1379 = !{!1380, !1384, !1385}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1378, file: !1377, line: 82, baseType: !1381, size: 64, align: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1377, line: 73, baseType: !1383)
!1383 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1377, line: 73, flags: DIFlagFwdDecl)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1378, file: !1377, line: 89, baseType: !1324, size: 64, align: 64, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1378, file: !1377, line: 93, baseType: !898, size: 32, align: 32, offset: 128)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1372, file: !35, line: 1461, baseType: !1364, size: 64, align: 64, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1372, file: !35, line: 1467, baseType: !1364, size: 64, align: 64, offset: 128)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1372, file: !35, line: 1468, baseType: !1324, size: 64, align: 64, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1372, file: !35, line: 1469, baseType: !898, size: 32, align: 32, offset: 256)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1372, file: !35, line: 1470, baseType: !898, size: 32, align: 32, offset: 288)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1372, file: !35, line: 1474, baseType: !898, size: 32, align: 32, offset: 320)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1372, file: !35, line: 1479, baseType: !1393, size: 64, align: 64, offset: 384)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1395)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1396)
!1396 = !{!1397, !1398, !1399}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1395, file: !35, line: 1412, baseType: !1324, size: 64, align: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1395, file: !35, line: 1413, baseType: !898, size: 32, align: 32, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1395, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1372, file: !35, line: 1480, baseType: !898, size: 32, align: 32, offset: 448)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1372, file: !35, line: 1486, baseType: !1364, size: 64, align: 64, offset: 512)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1372, file: !35, line: 1488, baseType: !1364, size: 64, align: 64, offset: 576)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1372, file: !35, line: 1497, baseType: !1364, size: 64, align: 64, offset: 640)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64, align: 64)
!1405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1438, !1440, !1441, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1472, !1473, !1474, !1475, !1476, !1477, !1480, !1481, !1482, !1483}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1407, file: !758, line: 282, baseType: !1349, size: 512, align: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1407, file: !758, line: 299, baseType: !1351, size: 256, align: 32, offset: 512)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1407, file: !758, line: 315, baseType: !1412, size: 64, align: 64, offset: 768)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1407, file: !758, line: 326, baseType: !898, size: 32, align: 32, offset: 832)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1407, file: !758, line: 326, baseType: !898, size: 32, align: 32, offset: 864)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1407, file: !758, line: 334, baseType: !898, size: 32, align: 32, offset: 896)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1407, file: !758, line: 341, baseType: !898, size: 32, align: 32, offset: 928)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1407, file: !758, line: 346, baseType: !898, size: 32, align: 32, offset: 960)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1407, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1407, file: !758, line: 356, baseType: !1262, size: 64, align: 32, offset: 1024)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1407, file: !758, line: 361, baseType: !1364, size: 64, align: 64, offset: 1088)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1407, file: !758, line: 369, baseType: !1364, size: 64, align: 64, offset: 1152)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1407, file: !758, line: 377, baseType: !1364, size: 64, align: 64, offset: 1216)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1407, file: !758, line: 382, baseType: !898, size: 32, align: 32, offset: 1280)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1407, file: !758, line: 386, baseType: !898, size: 32, align: 32, offset: 1312)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1407, file: !758, line: 391, baseType: !898, size: 32, align: 32, offset: 1344)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1407, file: !758, line: 396, baseType: !908, size: 64, align: 64, offset: 1408)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1407, file: !758, line: 403, baseType: !1428, size: 512, align: 64, offset: 1472)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1280, size: 512, align: 64, elements: !966)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1407, file: !758, line: 410, baseType: !898, size: 32, align: 32, offset: 1984)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1407, file: !758, line: 415, baseType: !898, size: 32, align: 32, offset: 2016)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1407, file: !758, line: 420, baseType: !898, size: 32, align: 32, offset: 2048)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1407, file: !758, line: 425, baseType: !898, size: 32, align: 32, offset: 2080)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1407, file: !758, line: 435, baseType: !1364, size: 64, align: 64, offset: 2112)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1407, file: !758, line: 440, baseType: !898, size: 32, align: 32, offset: 2176)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1407, file: !758, line: 445, baseType: !1280, size: 64, align: 64, offset: 2240)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1407, file: !758, line: 459, baseType: !1437, size: 512, align: 64, offset: 2304)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 512, align: 64, elements: !966)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1407, file: !758, line: 473, baseType: !1439, size: 64, align: 64, offset: 2816)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1407, file: !758, line: 477, baseType: !898, size: 32, align: 32, offset: 2880)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1407, file: !758, line: 479, baseType: !1442, size: 64, align: 64, offset: 2944)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64, align: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1446)
!1446 = !{!1447, !1448, !1449, !1450, !1455}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1445, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1445, file: !758, line: 203, baseType: !1324, size: 64, align: 64, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1445, file: !758, line: 204, baseType: !898, size: 32, align: 32, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1445, file: !758, line: 205, baseType: !1451, size: 64, align: 64, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1453, line: 86, baseType: !1454)
!1453 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1454 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1453, line: 86, flags: DIFlagFwdDecl)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1445, file: !758, line: 206, baseType: !1375, size: 64, align: 64, offset: 256)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1407, file: !758, line: 480, baseType: !898, size: 32, align: 32, offset: 3008)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1407, file: !758, line: 505, baseType: !898, size: 32, align: 32, offset: 3040)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1407, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1407, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1407, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1407, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1407, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1407, file: !758, line: 532, baseType: !1364, size: 64, align: 64, offset: 3264)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1407, file: !758, line: 539, baseType: !1364, size: 64, align: 64, offset: 3328)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1407, file: !758, line: 547, baseType: !1364, size: 64, align: 64, offset: 3392)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1407, file: !758, line: 554, baseType: !1451, size: 64, align: 64, offset: 3456)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1407, file: !758, line: 563, baseType: !898, size: 32, align: 32, offset: 3520)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1407, file: !758, line: 572, baseType: !898, size: 32, align: 32, offset: 3552)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1407, file: !758, line: 581, baseType: !898, size: 32, align: 32, offset: 3584)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1407, file: !758, line: 588, baseType: !1471, size: 64, align: 64, offset: 3648)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64, align: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1407, file: !758, line: 593, baseType: !898, size: 32, align: 32, offset: 3712)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1407, file: !758, line: 596, baseType: !898, size: 32, align: 32, offset: 3744)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1407, file: !758, line: 599, baseType: !1375, size: 64, align: 64, offset: 3776)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1407, file: !758, line: 605, baseType: !1375, size: 64, align: 64, offset: 3840)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1407, file: !758, line: 616, baseType: !1375, size: 64, align: 64, offset: 3904)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1407, file: !758, line: 626, baseType: !1478, size: 64, align: 64, offset: 3968)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1479, line: 216, baseType: !1281)
!1479 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1407, file: !758, line: 627, baseType: !1478, size: 64, align: 64, offset: 4032)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1407, file: !758, line: 628, baseType: !1478, size: 64, align: 64, offset: 4096)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1407, file: !758, line: 629, baseType: !1478, size: 64, align: 64, offset: 4160)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1407, file: !758, line: 645, baseType: !1375, size: 64, align: 64, offset: 4224)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64, align: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1252, file: !35, line: 3566, baseType: !1486, size: 64, align: 64, offset: 1408)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64, align: 64)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!898, !1199, !908, !1484, !1370}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1252, file: !35, line: 3567, baseType: !1297, size: 64, align: 64, offset: 1472)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1252, file: !35, line: 3576, baseType: !1491, size: 64, align: 64, offset: 1536)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!898, !1199, !1404}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1252, file: !35, line: 3577, baseType: !1495, size: 64, align: 64, offset: 1600)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64, align: 64)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!898, !1199, !1370}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1252, file: !35, line: 3584, baseType: !1499, size: 64, align: 64, offset: 1664)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64, align: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!898, !1199, !1502}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1252, file: !35, line: 3589, baseType: !1504, size: 64, align: 64, offset: 1728)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64, align: 64)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{null, !1199}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1252, file: !35, line: 3594, baseType: !898, size: 32, align: 32, offset: 1792)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1252, file: !35, line: 3600, baseType: !1210, size: 64, align: 64, offset: 1856)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1252, file: !35, line: 3609, baseType: !1510, size: 64, align: 64, offset: 1920)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64, align: 64)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64, align: 64)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1201, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1201, file: !35, line: 1581, baseType: !899, size: 32, align: 32, offset: 224)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1201, file: !35, line: 1583, baseType: !908, size: 64, align: 64, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1201, file: !35, line: 1591, baseType: !1518, size: 64, align: 64, offset: 320)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1311, line: 129, size: 1664, align: 64, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1543, !1544, !1550, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1519, file: !1311, line: 136, baseType: !898, size: 32, align: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1519, file: !1311, line: 151, baseType: !898, size: 32, align: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1519, file: !1311, line: 157, baseType: !898, size: 32, align: 32, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1519, file: !1311, line: 159, baseType: !1502, size: 64, align: 64, offset: 128)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1519, file: !1311, line: 161, baseType: !1526, size: 64, align: 64, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64, align: 64)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1311, line: 117, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1311, line: 100, size: 832, align: 64, elements: !1529)
!1529 = !{!1530, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1528, file: !1311, line: 105, baseType: !1531, size: 256, align: 64)
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 256, align: 64, elements: !1354)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1377, line: 238, baseType: !1534)
!1534 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1377, line: 238, flags: DIFlagFwdDecl)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1528, file: !1311, line: 110, baseType: !898, size: 32, align: 32, offset: 256)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1528, file: !1311, line: 111, baseType: !898, size: 32, align: 32, offset: 288)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1528, file: !1311, line: 111, baseType: !898, size: 32, align: 32, offset: 320)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1528, file: !1311, line: 112, baseType: !1351, size: 256, align: 32, offset: 352)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1528, file: !1311, line: 113, baseType: !1357, size: 128, align: 32, offset: 608)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1528, file: !1311, line: 114, baseType: !898, size: 32, align: 32, offset: 736)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1528, file: !1311, line: 115, baseType: !898, size: 32, align: 32, offset: 768)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1528, file: !1311, line: 116, baseType: !898, size: 32, align: 32, offset: 800)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1519, file: !1311, line: 163, baseType: !908, size: 64, align: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1519, file: !1311, line: 165, baseType: !1545, size: 128, align: 64, offset: 320)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1311, line: 122, baseType: !1546)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1311, line: 119, size: 128, align: 64, elements: !1547)
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1546, file: !1311, line: 120, baseType: !1370, size: 64, align: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1546, file: !1311, line: 121, baseType: !1502, size: 64, align: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1519, file: !1311, line: 166, baseType: !1551, size: 128, align: 64, offset: 448)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1311, line: 127, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1311, line: 124, size: 128, align: 64, elements: !1553)
!1553 = !{!1554, !1627}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1552, file: !1311, line: 125, baseType: !1555, size: 64, align: 64)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64, align: 64)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64, align: 64)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1558)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1559)
!1559 = !{!1560, !1561, !1585, !1589, !1590, !1624, !1625, !1626}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1558, file: !35, line: 5751, baseType: !1204, size: 64, align: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1558, file: !35, line: 5756, baseType: !1562, size: 64, align: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1565)
!1565 = !{!1566, !1567, !1570, !1571, !1572, !1576, !1580, !1584}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1564, file: !35, line: 5797, baseType: !1210, size: 64, align: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1564, file: !35, line: 5804, baseType: !1568, size: 64, align: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64, align: 64)
!1569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1564, file: !35, line: 5815, baseType: !1204, size: 64, align: 64, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1564, file: !35, line: 5825, baseType: !898, size: 32, align: 32, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1564, file: !35, line: 5826, baseType: !1573, size: 64, align: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64, align: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!898, !1556}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1564, file: !35, line: 5827, baseType: !1577, size: 64, align: 64, offset: 320)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64, align: 64)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!898, !1556, !1370}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1564, file: !35, line: 5828, baseType: !1581, size: 64, align: 64, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64, align: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !1556}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1564, file: !35, line: 5829, baseType: !1581, size: 64, align: 64, offset: 448)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1558, file: !35, line: 5762, baseType: !1586, size: 64, align: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64, align: 64)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1588)
!1588 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1558, file: !35, line: 5768, baseType: !908, size: 64, align: 64, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1558, file: !35, line: 5775, baseType: !1591, size: 64, align: 64, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1593, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1593, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1593, file: !35, line: 3948, baseType: !906, size: 32, align: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1593, file: !35, line: 3958, baseType: !1324, size: 64, align: 64, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1593, file: !35, line: 3962, baseType: !898, size: 32, align: 32, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1593, file: !35, line: 3968, baseType: !898, size: 32, align: 32, offset: 224)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1593, file: !35, line: 3973, baseType: !1364, size: 64, align: 64, offset: 256)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1593, file: !35, line: 3986, baseType: !898, size: 32, align: 32, offset: 320)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1593, file: !35, line: 3999, baseType: !898, size: 32, align: 32, offset: 352)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1593, file: !35, line: 4004, baseType: !898, size: 32, align: 32, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1593, file: !35, line: 4005, baseType: !898, size: 32, align: 32, offset: 416)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1593, file: !35, line: 4010, baseType: !898, size: 32, align: 32, offset: 448)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1593, file: !35, line: 4011, baseType: !898, size: 32, align: 32, offset: 480)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1593, file: !35, line: 4020, baseType: !1262, size: 64, align: 32, offset: 512)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1593, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1593, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1593, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1593, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1593, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1593, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1593, file: !35, line: 4039, baseType: !898, size: 32, align: 32, offset: 768)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1593, file: !35, line: 4046, baseType: !1280, size: 64, align: 64, offset: 832)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1593, file: !35, line: 4050, baseType: !898, size: 32, align: 32, offset: 896)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1593, file: !35, line: 4054, baseType: !898, size: 32, align: 32, offset: 928)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1593, file: !35, line: 4061, baseType: !898, size: 32, align: 32, offset: 960)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1593, file: !35, line: 4065, baseType: !898, size: 32, align: 32, offset: 992)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1593, file: !35, line: 4073, baseType: !898, size: 32, align: 32, offset: 1024)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1593, file: !35, line: 4080, baseType: !898, size: 32, align: 32, offset: 1056)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1593, file: !35, line: 4084, baseType: !898, size: 32, align: 32, offset: 1088)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1558, file: !35, line: 5781, baseType: !1591, size: 64, align: 64, offset: 320)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1558, file: !35, line: 5787, baseType: !1262, size: 64, align: 32, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1558, file: !35, line: 5793, baseType: !1262, size: 64, align: 32, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1552, file: !1311, line: 126, baseType: !898, size: 32, align: 32, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1519, file: !1311, line: 172, baseType: !1370, size: 64, align: 64, offset: 576)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1519, file: !1311, line: 177, baseType: !1324, size: 64, align: 64, offset: 640)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1519, file: !1311, line: 178, baseType: !899, size: 32, align: 32, offset: 704)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1519, file: !1311, line: 180, baseType: !908, size: 64, align: 64, offset: 768)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1519, file: !1311, line: 185, baseType: !898, size: 32, align: 32, offset: 832)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1519, file: !1311, line: 190, baseType: !908, size: 64, align: 64, offset: 896)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1519, file: !1311, line: 195, baseType: !898, size: 32, align: 32, offset: 960)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1519, file: !1311, line: 200, baseType: !1370, size: 64, align: 64, offset: 1024)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1519, file: !1311, line: 201, baseType: !898, size: 32, align: 32, offset: 1088)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1519, file: !1311, line: 202, baseType: !1502, size: 64, align: 64, offset: 1152)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1519, file: !1311, line: 203, baseType: !898, size: 32, align: 32, offset: 1216)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1519, file: !1311, line: 205, baseType: !898, size: 32, align: 32, offset: 1248)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1519, file: !1311, line: 206, baseType: !898, size: 32, align: 32, offset: 1280)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1519, file: !1311, line: 209, baseType: !1478, size: 64, align: 64, offset: 1344)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1519, file: !1311, line: 212, baseType: !1478, size: 64, align: 64, offset: 1408)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1519, file: !1311, line: 213, baseType: !1502, size: 64, align: 64, offset: 1472)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1519, file: !1311, line: 215, baseType: !898, size: 32, align: 32, offset: 1536)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1519, file: !1311, line: 217, baseType: !898, size: 32, align: 32, offset: 1568)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1519, file: !1311, line: 220, baseType: !898, size: 32, align: 32, offset: 1600)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1201, file: !35, line: 1598, baseType: !908, size: 64, align: 64, offset: 384)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1201, file: !35, line: 1606, baseType: !1364, size: 64, align: 64, offset: 448)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1201, file: !35, line: 1614, baseType: !898, size: 32, align: 32, offset: 512)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1201, file: !35, line: 1622, baseType: !898, size: 32, align: 32, offset: 544)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1201, file: !35, line: 1628, baseType: !898, size: 32, align: 32, offset: 576)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1201, file: !35, line: 1636, baseType: !898, size: 32, align: 32, offset: 608)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1201, file: !35, line: 1643, baseType: !898, size: 32, align: 32, offset: 640)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1201, file: !35, line: 1657, baseType: !1324, size: 64, align: 64, offset: 704)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1201, file: !35, line: 1658, baseType: !898, size: 32, align: 32, offset: 768)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1201, file: !35, line: 1679, baseType: !1262, size: 64, align: 32, offset: 800)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1201, file: !35, line: 1688, baseType: !898, size: 32, align: 32, offset: 864)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1201, file: !35, line: 1712, baseType: !898, size: 32, align: 32, offset: 896)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1201, file: !35, line: 1729, baseType: !898, size: 32, align: 32, offset: 928)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1201, file: !35, line: 1729, baseType: !898, size: 32, align: 32, offset: 960)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1201, file: !35, line: 1744, baseType: !898, size: 32, align: 32, offset: 992)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1201, file: !35, line: 1744, baseType: !898, size: 32, align: 32, offset: 1024)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1201, file: !35, line: 1751, baseType: !898, size: 32, align: 32, offset: 1056)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1201, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1201, file: !35, line: 1791, baseType: !1666, size: 64, align: 64, offset: 1152)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{null, !1669, !1404, !1484, !898, !898, !898}
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64, align: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1201, file: !35, line: 1808, baseType: !1671, size: 64, align: 64, offset: 1216)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64, align: 64)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!494, !1669, !1269}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1201, file: !35, line: 1816, baseType: !898, size: 32, align: 32, offset: 1280)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1201, file: !35, line: 1825, baseType: !1676, size: 32, align: 32, offset: 1312)
!1676 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1201, file: !35, line: 1830, baseType: !898, size: 32, align: 32, offset: 1344)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1201, file: !35, line: 1838, baseType: !1676, size: 32, align: 32, offset: 1376)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1201, file: !35, line: 1846, baseType: !898, size: 32, align: 32, offset: 1408)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1201, file: !35, line: 1851, baseType: !898, size: 32, align: 32, offset: 1440)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1201, file: !35, line: 1861, baseType: !1676, size: 32, align: 32, offset: 1472)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1201, file: !35, line: 1868, baseType: !1676, size: 32, align: 32, offset: 1504)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1201, file: !35, line: 1875, baseType: !1676, size: 32, align: 32, offset: 1536)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1201, file: !35, line: 1882, baseType: !1676, size: 32, align: 32, offset: 1568)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1201, file: !35, line: 1889, baseType: !1676, size: 32, align: 32, offset: 1600)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1201, file: !35, line: 1896, baseType: !1676, size: 32, align: 32, offset: 1632)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1201, file: !35, line: 1903, baseType: !1676, size: 32, align: 32, offset: 1664)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1201, file: !35, line: 1910, baseType: !898, size: 32, align: 32, offset: 1696)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1201, file: !35, line: 1915, baseType: !898, size: 32, align: 32, offset: 1728)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1201, file: !35, line: 1926, baseType: !1484, size: 64, align: 64, offset: 1792)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1201, file: !35, line: 1935, baseType: !1262, size: 64, align: 32, offset: 1856)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1201, file: !35, line: 1942, baseType: !898, size: 32, align: 32, offset: 1920)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1201, file: !35, line: 1948, baseType: !898, size: 32, align: 32, offset: 1952)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1201, file: !35, line: 1954, baseType: !898, size: 32, align: 32, offset: 1984)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1201, file: !35, line: 1960, baseType: !898, size: 32, align: 32, offset: 2016)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1201, file: !35, line: 1984, baseType: !898, size: 32, align: 32, offset: 2048)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1201, file: !35, line: 1991, baseType: !898, size: 32, align: 32, offset: 2080)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1201, file: !35, line: 1996, baseType: !898, size: 32, align: 32, offset: 2112)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1201, file: !35, line: 2004, baseType: !898, size: 32, align: 32, offset: 2144)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1201, file: !35, line: 2011, baseType: !898, size: 32, align: 32, offset: 2176)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1201, file: !35, line: 2018, baseType: !898, size: 32, align: 32, offset: 2208)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1201, file: !35, line: 2027, baseType: !898, size: 32, align: 32, offset: 2240)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1201, file: !35, line: 2034, baseType: !898, size: 32, align: 32, offset: 2272)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1201, file: !35, line: 2044, baseType: !898, size: 32, align: 32, offset: 2304)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1201, file: !35, line: 2054, baseType: !1706, size: 64, align: 64, offset: 2368)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1201, file: !35, line: 2061, baseType: !1706, size: 64, align: 64, offset: 2432)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1201, file: !35, line: 2066, baseType: !898, size: 32, align: 32, offset: 2496)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1201, file: !35, line: 2070, baseType: !898, size: 32, align: 32, offset: 2528)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1201, file: !35, line: 2078, baseType: !898, size: 32, align: 32, offset: 2560)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1201, file: !35, line: 2085, baseType: !898, size: 32, align: 32, offset: 2592)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1201, file: !35, line: 2092, baseType: !898, size: 32, align: 32, offset: 2624)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1201, file: !35, line: 2099, baseType: !898, size: 32, align: 32, offset: 2656)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1201, file: !35, line: 2106, baseType: !898, size: 32, align: 32, offset: 2688)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1201, file: !35, line: 2113, baseType: !898, size: 32, align: 32, offset: 2720)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1201, file: !35, line: 2120, baseType: !898, size: 32, align: 32, offset: 2752)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1201, file: !35, line: 2125, baseType: !898, size: 32, align: 32, offset: 2784)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1201, file: !35, line: 2133, baseType: !898, size: 32, align: 32, offset: 2816)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1201, file: !35, line: 2140, baseType: !898, size: 32, align: 32, offset: 2848)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1201, file: !35, line: 2145, baseType: !898, size: 32, align: 32, offset: 2880)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1201, file: !35, line: 2153, baseType: !898, size: 32, align: 32, offset: 2912)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1201, file: !35, line: 2158, baseType: !898, size: 32, align: 32, offset: 2944)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1201, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1201, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1201, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1201, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1201, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1201, file: !35, line: 2203, baseType: !898, size: 32, align: 32, offset: 3136)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1201, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1201, file: !35, line: 2212, baseType: !898, size: 32, align: 32, offset: 3200)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1201, file: !35, line: 2213, baseType: !898, size: 32, align: 32, offset: 3232)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1201, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1201, file: !35, line: 2232, baseType: !898, size: 32, align: 32, offset: 3296)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1201, file: !35, line: 2243, baseType: !898, size: 32, align: 32, offset: 3328)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1201, file: !35, line: 2249, baseType: !898, size: 32, align: 32, offset: 3360)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1201, file: !35, line: 2256, baseType: !898, size: 32, align: 32, offset: 3392)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1201, file: !35, line: 2263, baseType: !1280, size: 64, align: 64, offset: 3456)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1201, file: !35, line: 2270, baseType: !1280, size: 64, align: 64, offset: 3520)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1201, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1201, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1201, file: !35, line: 2367, baseType: !1742, size: 64, align: 64, offset: 3648)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64, align: 64)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!898, !1669, !1502, !898}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1201, file: !35, line: 2383, baseType: !898, size: 32, align: 32, offset: 3712)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1201, file: !35, line: 2386, baseType: !1676, size: 32, align: 32, offset: 3744)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1201, file: !35, line: 2387, baseType: !1676, size: 32, align: 32, offset: 3776)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1201, file: !35, line: 2394, baseType: !898, size: 32, align: 32, offset: 3808)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1201, file: !35, line: 2401, baseType: !898, size: 32, align: 32, offset: 3840)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1201, file: !35, line: 2408, baseType: !898, size: 32, align: 32, offset: 3872)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1201, file: !35, line: 2415, baseType: !898, size: 32, align: 32, offset: 3904)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1201, file: !35, line: 2422, baseType: !898, size: 32, align: 32, offset: 3936)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1201, file: !35, line: 2423, baseType: !1754, size: 64, align: 64, offset: 3968)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64, align: 64)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1756, file: !35, line: 827, baseType: !898, size: 32, align: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1756, file: !35, line: 828, baseType: !898, size: 32, align: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1756, file: !35, line: 829, baseType: !898, size: 32, align: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1756, file: !35, line: 830, baseType: !1676, size: 32, align: 32, offset: 96)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1201, file: !35, line: 2430, baseType: !1364, size: 64, align: 64, offset: 4032)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1201, file: !35, line: 2437, baseType: !1364, size: 64, align: 64, offset: 4096)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1201, file: !35, line: 2444, baseType: !1676, size: 32, align: 32, offset: 4160)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1201, file: !35, line: 2451, baseType: !1676, size: 32, align: 32, offset: 4192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1201, file: !35, line: 2458, baseType: !898, size: 32, align: 32, offset: 4224)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1201, file: !35, line: 2469, baseType: !898, size: 32, align: 32, offset: 4256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1201, file: !35, line: 2475, baseType: !898, size: 32, align: 32, offset: 4288)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1201, file: !35, line: 2481, baseType: !898, size: 32, align: 32, offset: 4320)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1201, file: !35, line: 2485, baseType: !898, size: 32, align: 32, offset: 4352)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1201, file: !35, line: 2489, baseType: !898, size: 32, align: 32, offset: 4384)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1201, file: !35, line: 2493, baseType: !898, size: 32, align: 32, offset: 4416)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1201, file: !35, line: 2501, baseType: !898, size: 32, align: 32, offset: 4448)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1201, file: !35, line: 2506, baseType: !898, size: 32, align: 32, offset: 4480)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1201, file: !35, line: 2510, baseType: !898, size: 32, align: 32, offset: 4512)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1201, file: !35, line: 2514, baseType: !1364, size: 64, align: 64, offset: 4544)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1201, file: !35, line: 2528, baseType: !1778, size: 64, align: 64, offset: 4608)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64, align: 64)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{null, !1669, !908, !898, !898}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1201, file: !35, line: 2534, baseType: !898, size: 32, align: 32, offset: 4672)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1201, file: !35, line: 2545, baseType: !898, size: 32, align: 32, offset: 4704)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1201, file: !35, line: 2547, baseType: !898, size: 32, align: 32, offset: 4736)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1201, file: !35, line: 2549, baseType: !898, size: 32, align: 32, offset: 4768)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1201, file: !35, line: 2551, baseType: !898, size: 32, align: 32, offset: 4800)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1201, file: !35, line: 2553, baseType: !898, size: 32, align: 32, offset: 4832)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1201, file: !35, line: 2555, baseType: !898, size: 32, align: 32, offset: 4864)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1201, file: !35, line: 2557, baseType: !898, size: 32, align: 32, offset: 4896)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1201, file: !35, line: 2559, baseType: !898, size: 32, align: 32, offset: 4928)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1201, file: !35, line: 2563, baseType: !898, size: 32, align: 32, offset: 4960)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1201, file: !35, line: 2571, baseType: !1360, size: 64, align: 64, offset: 4992)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1201, file: !35, line: 2579, baseType: !1360, size: 64, align: 64, offset: 5056)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1201, file: !35, line: 2586, baseType: !898, size: 32, align: 32, offset: 5120)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1201, file: !35, line: 2615, baseType: !898, size: 32, align: 32, offset: 5152)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1201, file: !35, line: 2627, baseType: !898, size: 32, align: 32, offset: 5184)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1201, file: !35, line: 2637, baseType: !898, size: 32, align: 32, offset: 5216)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1201, file: !35, line: 2681, baseType: !898, size: 32, align: 32, offset: 5248)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1201, file: !35, line: 2709, baseType: !1364, size: 64, align: 64, offset: 5312)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1201, file: !35, line: 2716, baseType: !1800, size: 64, align: 64, offset: 5376)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1803)
!1803 = !{!1804, !1805, !1806, !1807, !1808, !1809, !1810, !1814, !1818, !1819, !1820, !1821, !1827, !1828, !1829, !1830, !1831}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1802, file: !35, line: 3642, baseType: !1210, size: 64, align: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1802, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1802, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1802, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1802, file: !35, line: 3669, baseType: !898, size: 32, align: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1802, file: !35, line: 3682, baseType: !1499, size: 64, align: 64, offset: 192)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1802, file: !35, line: 3698, baseType: !1811, size: 64, align: 64, offset: 256)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64, align: 64)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!898, !1199, !1186, !906}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1802, file: !35, line: 3712, baseType: !1815, size: 64, align: 64, offset: 320)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64, align: 64)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!898, !1199, !898, !1186, !906}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1802, file: !35, line: 3726, baseType: !1811, size: 64, align: 64, offset: 384)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1802, file: !35, line: 3737, baseType: !1297, size: 64, align: 64, offset: 448)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1802, file: !35, line: 3746, baseType: !898, size: 32, align: 32, offset: 512)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1802, file: !35, line: 3757, baseType: !1822, size: 64, align: 64, offset: 576)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64, align: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{null, !1825}
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64, align: 64)
!1826 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1802, file: !35, line: 3766, baseType: !1297, size: 64, align: 64, offset: 640)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1802, file: !35, line: 3774, baseType: !1297, size: 64, align: 64, offset: 704)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1802, file: !35, line: 3780, baseType: !898, size: 32, align: 32, offset: 768)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1802, file: !35, line: 3785, baseType: !898, size: 32, align: 32, offset: 800)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1802, file: !35, line: 3795, baseType: !1832, size: 64, align: 64, offset: 832)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64, align: 64)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!898, !1199, !1375}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1201, file: !35, line: 2728, baseType: !908, size: 64, align: 64, offset: 5440)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1201, file: !35, line: 2735, baseType: !1428, size: 512, align: 64, offset: 5504)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1201, file: !35, line: 2742, baseType: !898, size: 32, align: 32, offset: 6016)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1201, file: !35, line: 2755, baseType: !898, size: 32, align: 32, offset: 6048)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1201, file: !35, line: 2776, baseType: !898, size: 32, align: 32, offset: 6080)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1201, file: !35, line: 2783, baseType: !898, size: 32, align: 32, offset: 6112)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1201, file: !35, line: 2791, baseType: !898, size: 32, align: 32, offset: 6144)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1201, file: !35, line: 2802, baseType: !1502, size: 64, align: 64, offset: 6208)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1201, file: !35, line: 2811, baseType: !898, size: 32, align: 32, offset: 6272)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1201, file: !35, line: 2821, baseType: !898, size: 32, align: 32, offset: 6304)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1201, file: !35, line: 2830, baseType: !898, size: 32, align: 32, offset: 6336)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1201, file: !35, line: 2840, baseType: !898, size: 32, align: 32, offset: 6368)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1201, file: !35, line: 2851, baseType: !1848, size: 64, align: 64, offset: 6400)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64, align: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!898, !1669, !1851, !908, !1484, !898, !898}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!898, !1669, !908}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1201, file: !35, line: 2871, baseType: !1855, size: 64, align: 64, offset: 6464)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64, align: 64)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!898, !1669, !1858, !908, !1484, !898}
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64, align: 64)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!898, !1669, !908, !898, !898}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1201, file: !35, line: 2878, baseType: !898, size: 32, align: 32, offset: 6528)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1201, file: !35, line: 2885, baseType: !898, size: 32, align: 32, offset: 6560)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1201, file: !35, line: 3005, baseType: !898, size: 32, align: 32, offset: 6592)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1201, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1201, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1201, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1201, file: !35, line: 3037, baseType: !1324, size: 64, align: 64, offset: 6720)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1201, file: !35, line: 3038, baseType: !898, size: 32, align: 32, offset: 6784)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1201, file: !35, line: 3050, baseType: !1280, size: 64, align: 64, offset: 6848)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1201, file: !35, line: 3065, baseType: !898, size: 32, align: 32, offset: 6912)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1201, file: !35, line: 3083, baseType: !898, size: 32, align: 32, offset: 6944)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1201, file: !35, line: 3092, baseType: !1262, size: 64, align: 32, offset: 6976)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1201, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1201, file: !35, line: 3106, baseType: !1262, size: 64, align: 32, offset: 7072)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1201, file: !35, line: 3113, baseType: !1876, size: 64, align: 64, offset: 7168)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64, align: 64)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1880)
!1880 = !{!1881, !1882, !1883, !1884, !1885, !1886, !1889}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1879, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1879, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1879, file: !35, line: 720, baseType: !1210, size: 64, align: 64, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1879, file: !35, line: 724, baseType: !1210, size: 64, align: 64, offset: 128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1879, file: !35, line: 728, baseType: !898, size: 32, align: 32, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1879, file: !35, line: 734, baseType: !1887, size: 64, align: 64, offset: 256)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64, align: 64)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1879, file: !35, line: 739, baseType: !1890, size: 64, align: 64, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64, align: 64)
!1891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1288)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1201, file: !35, line: 3129, baseType: !1364, size: 64, align: 64, offset: 7232)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1201, file: !35, line: 3130, baseType: !1364, size: 64, align: 64, offset: 7296)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1201, file: !35, line: 3131, baseType: !1364, size: 64, align: 64, offset: 7360)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1201, file: !35, line: 3132, baseType: !1364, size: 64, align: 64, offset: 7424)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1201, file: !35, line: 3139, baseType: !1360, size: 64, align: 64, offset: 7488)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1201, file: !35, line: 3147, baseType: !898, size: 32, align: 32, offset: 7552)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1201, file: !35, line: 3165, baseType: !898, size: 32, align: 32, offset: 7584)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1201, file: !35, line: 3172, baseType: !898, size: 32, align: 32, offset: 7616)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1201, file: !35, line: 3180, baseType: !898, size: 32, align: 32, offset: 7648)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1201, file: !35, line: 3191, baseType: !1706, size: 64, align: 64, offset: 7680)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1201, file: !35, line: 3199, baseType: !1324, size: 64, align: 64, offset: 7744)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1201, file: !35, line: 3207, baseType: !1360, size: 64, align: 64, offset: 7808)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1201, file: !35, line: 3214, baseType: !899, size: 32, align: 32, offset: 7872)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1201, file: !35, line: 3224, baseType: !1393, size: 64, align: 64, offset: 7936)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1201, file: !35, line: 3225, baseType: !898, size: 32, align: 32, offset: 8000)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1201, file: !35, line: 3249, baseType: !1375, size: 64, align: 64, offset: 8064)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1201, file: !35, line: 3256, baseType: !898, size: 32, align: 32, offset: 8128)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1201, file: !35, line: 3271, baseType: !898, size: 32, align: 32, offset: 8160)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1201, file: !35, line: 3279, baseType: !1364, size: 64, align: 64, offset: 8192)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1201, file: !35, line: 3301, baseType: !1375, size: 64, align: 64, offset: 8256)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1201, file: !35, line: 3310, baseType: !898, size: 32, align: 32, offset: 8320)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1201, file: !35, line: 3337, baseType: !898, size: 32, align: 32, offset: 8352)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1201, file: !35, line: 3351, baseType: !898, size: 32, align: 32, offset: 8384)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1201, file: !35, line: 3359, baseType: !898, size: 32, align: 32, offset: 8416)
!1916 = !DILocalVariable(name: "gb", arg: 1, scope: !1177, file: !912, line: 226, type: !1180)
!1917 = !DILocation(line: 226, column: 41, scope: !1177)
!1918 = !DILocalVariable(name: "desc_coded", arg: 2, scope: !1177, file: !912, line: 226, type: !898)
!1919 = !DILocation(line: 226, column: 49, scope: !1177)
!1920 = !DILocalVariable(name: "which_tab", arg: 3, scope: !1177, file: !912, line: 226, type: !898)
!1921 = !DILocation(line: 226, column: 65, scope: !1177)
!1922 = !DILocalVariable(name: "huff_tab", arg: 4, scope: !1177, file: !912, line: 227, type: !1191)
!1923 = !DILocation(line: 227, column: 38, scope: !1177)
!1924 = !DILocalVariable(name: "avctx", arg: 5, scope: !1177, file: !912, line: 227, type: !1199)
!1925 = !DILocation(line: 227, column: 64, scope: !1177)
!1926 = !DILocalVariable(name: "i", scope: !1177, file: !912, line: 229, type: !898)
!1927 = !DILocation(line: 229, column: 9, scope: !1177)
!1928 = !DILocalVariable(name: "result", scope: !1177, file: !912, line: 229, type: !898)
!1929 = !DILocation(line: 229, column: 12, scope: !1177)
!1930 = !DILocalVariable(name: "new_huff", scope: !1177, file: !912, line: 230, type: !972)
!1931 = !DILocation(line: 230, column: 17, scope: !1177)
!1932 = !DILocation(line: 232, column: 10, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1177, file: !912, line: 232, column: 9)
!1934 = !DILocation(line: 232, column: 9, scope: !1177)
!1935 = !DILocation(line: 234, column: 26, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1933, file: !912, line: 232, column: 22)
!1937 = !DILocation(line: 234, column: 25, scope: !1936)
!1938 = !DILocation(line: 234, column: 9, scope: !1936)
!1939 = !DILocation(line: 234, column: 19, scope: !1936)
!1940 = !DILocation(line: 234, column: 23, scope: !1936)
!1941 = !DILocation(line: 236, column: 9, scope: !1936)
!1942 = !DILocation(line: 239, column: 34, scope: !1177)
!1943 = !DILocation(line: 239, column: 25, scope: !1177)
!1944 = !DILocation(line: 239, column: 5, scope: !1177)
!1945 = !DILocation(line: 239, column: 15, scope: !1177)
!1946 = !DILocation(line: 239, column: 23, scope: !1177)
!1947 = !DILocation(line: 240, column: 9, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1177, file: !912, line: 240, column: 9)
!1949 = !DILocation(line: 240, column: 19, scope: !1948)
!1950 = !DILocation(line: 240, column: 27, scope: !1948)
!1951 = !DILocation(line: 240, column: 9, scope: !1177)
!1952 = !DILocation(line: 242, column: 38, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1948, file: !912, line: 240, column: 33)
!1954 = !DILocation(line: 242, column: 29, scope: !1953)
!1955 = !DILocation(line: 242, column: 18, scope: !1953)
!1956 = !DILocation(line: 242, column: 27, scope: !1953)
!1957 = !DILocation(line: 243, column: 23, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1953, file: !912, line: 243, column: 13)
!1959 = !DILocation(line: 243, column: 14, scope: !1958)
!1960 = !DILocation(line: 243, column: 13, scope: !1953)
!1961 = !DILocation(line: 244, column: 20, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1958, file: !912, line: 243, column: 33)
!1963 = !DILocation(line: 244, column: 13, scope: !1962)
!1964 = !DILocation(line: 245, column: 13, scope: !1962)
!1965 = !DILocation(line: 248, column: 16, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1953, file: !912, line: 248, column: 9)
!1967 = !DILocation(line: 248, column: 14, scope: !1966)
!1968 = !DILocation(line: 248, column: 21, scope: !1969)
!1969 = !DILexicalBlockFile(scope: !1970, file: !912, discriminator: 1)
!1970 = distinct !DILexicalBlock(scope: !1966, file: !912, line: 248, column: 9)
!1971 = !DILocation(line: 248, column: 34, scope: !1969)
!1972 = !DILocation(line: 248, column: 23, scope: !1969)
!1973 = !DILocation(line: 248, column: 9, scope: !1969)
!1974 = !DILocation(line: 249, column: 42, scope: !1970)
!1975 = !DILocation(line: 249, column: 33, scope: !1970)
!1976 = !DILocation(line: 249, column: 28, scope: !1970)
!1977 = !DILocation(line: 249, column: 13, scope: !1970)
!1978 = !DILocation(line: 249, column: 22, scope: !1970)
!1979 = !DILocation(line: 249, column: 31, scope: !1970)
!1980 = !DILocation(line: 248, column: 45, scope: !1981)
!1981 = !DILexicalBlockFile(scope: !1970, file: !912, discriminator: 2)
!1982 = !DILocation(line: 248, column: 9, scope: !1981)
!1983 = distinct !{!1983, !1984}
!1984 = !DILocation(line: 248, column: 9, scope: !1953)
!1985 = !DILocation(line: 252, column: 43, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1953, file: !912, line: 252, column: 13)
!1987 = !DILocation(line: 252, column: 53, scope: !1986)
!1988 = !DILocation(line: 252, column: 13, scope: !1986)
!1989 = !DILocation(line: 252, column: 64, scope: !1986)
!1990 = !DILocation(line: 252, column: 68, scope: !1991)
!1991 = !DILexicalBlockFile(scope: !1986, file: !912, discriminator: 1)
!1992 = !DILocation(line: 252, column: 78, scope: !1991)
!1993 = !DILocation(line: 252, column: 87, scope: !1991)
!1994 = !DILocation(line: 252, column: 13, scope: !1991)
!1995 = !DILocation(line: 253, column: 33, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1986, file: !912, line: 252, column: 94)
!1997 = !DILocation(line: 253, column: 43, scope: !1996)
!1998 = !DILocation(line: 253, column: 13, scope: !1996)
!1999 = !DILocation(line: 255, column: 17, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1996, file: !912, line: 255, column: 17)
!2001 = !DILocation(line: 255, column: 27, scope: !2000)
!2002 = !DILocation(line: 255, column: 36, scope: !2000)
!2003 = !DILocation(line: 255, column: 17, scope: !1996)
!2004 = !DILocation(line: 256, column: 30, scope: !2000)
!2005 = !DILocation(line: 256, column: 40, scope: !2000)
!2006 = !DILocation(line: 256, column: 17, scope: !2000)
!2007 = !DILocation(line: 257, column: 49, scope: !1996)
!2008 = !DILocation(line: 257, column: 59, scope: !1996)
!2009 = !DILocation(line: 258, column: 22, scope: !1996)
!2010 = !DILocation(line: 258, column: 32, scope: !1996)
!2011 = !DILocation(line: 257, column: 22, scope: !1996)
!2012 = !DILocation(line: 257, column: 20, scope: !1996)
!2013 = !DILocation(line: 259, column: 17, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !1996, file: !912, line: 259, column: 17)
!2015 = !DILocation(line: 259, column: 17, scope: !1996)
!2016 = !DILocation(line: 261, column: 17, scope: !2017)
!2017 = distinct !DILexicalBlock(scope: !2014, file: !912, line: 259, column: 25)
!2018 = !DILocation(line: 261, column: 27, scope: !2017)
!2019 = !DILocation(line: 261, column: 37, scope: !2017)
!2020 = !DILocation(line: 261, column: 46, scope: !2017)
!2021 = !DILocation(line: 262, column: 24, scope: !2017)
!2022 = !DILocation(line: 262, column: 17, scope: !2017)
!2023 = !DILocation(line: 264, column: 24, scope: !2017)
!2024 = !DILocation(line: 264, column: 17, scope: !2017)
!2025 = !DILocation(line: 266, column: 9, scope: !1996)
!2026 = !DILocation(line: 267, column: 26, scope: !1953)
!2027 = !DILocation(line: 267, column: 36, scope: !1953)
!2028 = !DILocation(line: 267, column: 9, scope: !1953)
!2029 = !DILocation(line: 267, column: 19, scope: !1953)
!2030 = !DILocation(line: 267, column: 23, scope: !1953)
!2031 = !DILocation(line: 268, column: 5, scope: !1953)
!2032 = !DILocation(line: 270, column: 26, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !1948, file: !912, line: 268, column: 12)
!2034 = !DILocation(line: 270, column: 25, scope: !2033)
!2035 = !DILocation(line: 270, column: 57, scope: !2036)
!2036 = !DILexicalBlockFile(scope: !2033, file: !912, discriminator: 1)
!2037 = !DILocation(line: 270, column: 67, scope: !2036)
!2038 = !DILocation(line: 270, column: 40, scope: !2036)
!2039 = !DILocation(line: 270, column: 25, scope: !2036)
!2040 = !DILocation(line: 271, column: 33, scope: !2033)
!2041 = !DILocation(line: 271, column: 43, scope: !2033)
!2042 = !DILocation(line: 271, column: 16, scope: !2033)
!2043 = !DILocation(line: 270, column: 25, scope: !2044)
!2044 = !DILexicalBlockFile(scope: !2033, file: !912, discriminator: 2)
!2045 = !DILocation(line: 270, column: 25, scope: !2046)
!2046 = !DILexicalBlockFile(scope: !2033, file: !912, discriminator: 3)
!2047 = !DILocation(line: 270, column: 9, scope: !2046)
!2048 = !DILocation(line: 270, column: 19, scope: !2046)
!2049 = !DILocation(line: 270, column: 23, scope: !2046)
!2050 = !DILocation(line: 274, column: 5, scope: !1177)
!2051 = !DILocation(line: 275, column: 1, scope: !1177)
!2052 = distinct !DISubprogram(name: "get_bits", scope: !1182, file: !1182, line: 381, type: !2053, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!899, !1180, !898}
!2055 = !DILocalVariable(name: "s", arg: 1, scope: !2052, file: !1182, line: 381, type: !1180)
!2056 = !DILocation(line: 381, column: 52, scope: !2052)
!2057 = !DILocalVariable(name: "n", arg: 2, scope: !2052, file: !1182, line: 381, type: !898)
!2058 = !DILocation(line: 381, column: 59, scope: !2052)
!2059 = !DILocalVariable(name: "tmp", scope: !2052, file: !1182, line: 383, type: !898)
!2060 = !DILocation(line: 383, column: 18, scope: !2052)
!2061 = !DILocalVariable(name: "re_index", scope: !2052, file: !1182, line: 399, type: !899)
!2062 = !DILocation(line: 399, column: 18, scope: !2052)
!2063 = !DILocation(line: 399, column: 30, scope: !2052)
!2064 = !DILocation(line: 399, column: 34, scope: !2052)
!2065 = !DILocalVariable(name: "re_cache", scope: !2052, file: !1182, line: 399, type: !899)
!2066 = !DILocation(line: 399, column: 78, scope: !2052)
!2067 = !DILocalVariable(name: "re_size_plus8", scope: !2052, file: !1182, line: 399, type: !899)
!2068 = !DILocation(line: 399, column: 101, scope: !2052)
!2069 = !DILocation(line: 399, column: 118, scope: !2052)
!2070 = !DILocation(line: 399, column: 122, scope: !2052)
!2071 = !DILocation(line: 401, column: 49, scope: !2052)
!2072 = !DILocation(line: 401, column: 53, scope: !2052)
!2073 = !DILocation(line: 401, column: 63, scope: !2052)
!2074 = !DILocation(line: 401, column: 72, scope: !2052)
!2075 = !DILocation(line: 401, column: 60, scope: !2052)
!2076 = !DILocation(line: 401, column: 81, scope: !2052)
!2077 = !DILocation(line: 401, column: 88, scope: !2052)
!2078 = !DILocation(line: 401, column: 97, scope: !2052)
!2079 = !DILocation(line: 401, column: 84, scope: !2052)
!2080 = !DILocation(line: 401, column: 14, scope: !2052)
!2081 = !DILocation(line: 402, column: 23, scope: !2052)
!2082 = !DILocation(line: 402, column: 33, scope: !2052)
!2083 = !DILocation(line: 402, column: 11, scope: !2052)
!2084 = !DILocation(line: 402, column: 9, scope: !2052)
!2085 = !DILocation(line: 403, column: 18, scope: !2052)
!2086 = !DILocation(line: 403, column: 36, scope: !2052)
!2087 = !DILocation(line: 403, column: 48, scope: !2052)
!2088 = !DILocation(line: 403, column: 45, scope: !2052)
!2089 = !DILocation(line: 403, column: 33, scope: !2052)
!2090 = !DILocation(line: 403, column: 17, scope: !2052)
!2091 = !DILocation(line: 403, column: 55, scope: !2092)
!2092 = !DILexicalBlockFile(scope: !2052, file: !1182, discriminator: 1)
!2093 = !DILocation(line: 403, column: 67, scope: !2092)
!2094 = !DILocation(line: 403, column: 64, scope: !2092)
!2095 = !DILocation(line: 403, column: 17, scope: !2092)
!2096 = !DILocation(line: 403, column: 74, scope: !2097)
!2097 = !DILexicalBlockFile(scope: !2052, file: !1182, discriminator: 2)
!2098 = !DILocation(line: 403, column: 17, scope: !2097)
!2099 = !DILocation(line: 403, column: 17, scope: !2100)
!2100 = !DILexicalBlockFile(scope: !2052, file: !1182, discriminator: 3)
!2101 = !DILocation(line: 403, column: 14, scope: !2100)
!2102 = !DILocation(line: 404, column: 18, scope: !2052)
!2103 = !DILocation(line: 404, column: 6, scope: !2052)
!2104 = !DILocation(line: 404, column: 10, scope: !2052)
!2105 = !DILocation(line: 404, column: 16, scope: !2052)
!2106 = !DILocation(line: 406, column: 12, scope: !2052)
!2107 = !DILocation(line: 406, column: 5, scope: !2052)
!2108 = distinct !DISubprogram(name: "ivi_huff_desc_cmp", scope: !912, file: !912, line: 219, type: !2109, isLocal: true, isDefinition: true, scopeLine: 221, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!898, !1047, !1047}
!2111 = !DILocalVariable(name: "desc1", arg: 1, scope: !2108, file: !912, line: 219, type: !1047)
!2112 = !DILocation(line: 219, column: 49, scope: !2108)
!2113 = !DILocalVariable(name: "desc2", arg: 2, scope: !2108, file: !912, line: 220, type: !1047)
!2114 = !DILocation(line: 220, column: 49, scope: !2108)
!2115 = !DILocation(line: 222, column: 12, scope: !2108)
!2116 = !DILocation(line: 222, column: 19, scope: !2108)
!2117 = !DILocation(line: 222, column: 31, scope: !2108)
!2118 = !DILocation(line: 222, column: 38, scope: !2108)
!2119 = !DILocation(line: 222, column: 28, scope: !2108)
!2120 = !DILocation(line: 222, column: 47, scope: !2108)
!2121 = !DILocation(line: 223, column: 19, scope: !2108)
!2122 = !DILocation(line: 223, column: 26, scope: !2108)
!2123 = !DILocation(line: 223, column: 33, scope: !2108)
!2124 = !DILocation(line: 223, column: 40, scope: !2108)
!2125 = !DILocation(line: 223, column: 47, scope: !2108)
!2126 = !DILocation(line: 223, column: 54, scope: !2108)
!2127 = !DILocation(line: 223, column: 12, scope: !2108)
!2128 = !DILocation(line: 222, column: 47, scope: !2129)
!2129 = !DILexicalBlockFile(scope: !2108, file: !912, discriminator: 1)
!2130 = !DILocation(line: 222, column: 47, scope: !2131)
!2131 = !DILexicalBlockFile(scope: !2108, file: !912, discriminator: 2)
!2132 = !DILocation(line: 222, column: 5, scope: !2131)
!2133 = distinct !DISubprogram(name: "ivi_huff_desc_copy", scope: !912, file: !912, line: 206, type: !2134, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{null, !2136, !1047}
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!2137 = !DILocalVariable(name: "dst", arg: 1, scope: !2133, file: !912, line: 206, type: !2136)
!2138 = !DILocation(line: 206, column: 45, scope: !2133)
!2139 = !DILocalVariable(name: "src", arg: 2, scope: !2133, file: !912, line: 206, type: !1047)
!2140 = !DILocation(line: 206, column: 69, scope: !2133)
!2141 = !DILocation(line: 208, column: 21, scope: !2133)
!2142 = !DILocation(line: 208, column: 26, scope: !2133)
!2143 = !DILocation(line: 208, column: 5, scope: !2133)
!2144 = !DILocation(line: 208, column: 10, scope: !2133)
!2145 = !DILocation(line: 208, column: 19, scope: !2133)
!2146 = !DILocation(line: 209, column: 12, scope: !2133)
!2147 = !DILocation(line: 209, column: 17, scope: !2133)
!2148 = !DILocation(line: 209, column: 5, scope: !2133)
!2149 = !DILocation(line: 209, column: 24, scope: !2133)
!2150 = !DILocation(line: 209, column: 29, scope: !2133)
!2151 = !DILocation(line: 209, column: 36, scope: !2133)
!2152 = !DILocation(line: 209, column: 41, scope: !2133)
!2153 = !DILocation(line: 210, column: 1, scope: !2133)
!2154 = distinct !DISubprogram(name: "ff_ivi_init_planes", scope: !912, file: !912, line: 305, type: !2155, isLocal: false, isDefinition: true, scopeLine: 307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{!898, !1199, !2157, !2257, !898}
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64, align: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVIPlaneDesc", file: !888, line: 199, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVIPlaneDesc", file: !888, line: 194, size: 128, align: 64, elements: !2160)
!2160 = !{!2161, !2162, !2163, !2164}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2159, file: !888, line: 195, baseType: !1069, size: 16, align: 16)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2159, file: !888, line: 196, baseType: !1069, size: 16, align: 16, offset: 16)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "num_bands", scope: !2159, file: !888, line: 197, baseType: !926, size: 8, align: 8, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "bands", scope: !2159, file: !888, line: 198, baseType: !2165, size: 64, align: 64, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64, align: 64)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVIBandDesc", file: !888, line: 188, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVIBandDesc", file: !888, line: 144, size: 3648, align: 64, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2178, !2179, !2180, !2182, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2201, !2202, !2204, !2205, !2234, !2241, !2242, !2247, !2248, !2249, !2250, !2251, !2254, !2255, !2256}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !2167, file: !888, line: 145, baseType: !898, size: 32, align: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "band_num", scope: !2167, file: !888, line: 146, baseType: !898, size: 32, align: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2167, file: !888, line: 147, baseType: !898, size: 32, align: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2167, file: !888, line: 148, baseType: !898, size: 32, align: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "aheight", scope: !2167, file: !888, line: 149, baseType: !898, size: 32, align: 32, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2167, file: !888, line: 150, baseType: !1186, size: 64, align: 64, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2167, file: !888, line: 151, baseType: !898, size: 32, align: 32, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2167, file: !888, line: 152, baseType: !2177, size: 64, align: 64, offset: 320)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ref_buf", scope: !2167, file: !888, line: 153, baseType: !2177, size: 64, align: 64, offset: 384)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_buf", scope: !2167, file: !888, line: 154, baseType: !2177, size: 64, align: 64, offset: 448)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !2167, file: !888, line: 155, baseType: !2181, size: 256, align: 64, offset: 512)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2177, size: 256, align: 64, elements: !1354)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2167, file: !888, line: 156, baseType: !2183, size: 64, align: 64, offset: 768)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1479, line: 149, baseType: !1365)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "is_empty", scope: !2167, file: !888, line: 157, baseType: !898, size: 32, align: 32, offset: 832)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "mb_size", scope: !2167, file: !888, line: 158, baseType: !898, size: 32, align: 32, offset: 864)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "blk_size", scope: !2167, file: !888, line: 159, baseType: !898, size: 32, align: 32, offset: 896)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "is_halfpel", scope: !2167, file: !888, line: 160, baseType: !898, size: 32, align: 32, offset: 928)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "inherit_mv", scope: !2167, file: !888, line: 161, baseType: !898, size: 32, align: 32, offset: 960)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "inherit_qdelta", scope: !2167, file: !888, line: 162, baseType: !898, size: 32, align: 32, offset: 992)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "qdelta_present", scope: !2167, file: !888, line: 163, baseType: !898, size: 32, align: 32, offset: 1024)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "quant_mat", scope: !2167, file: !888, line: 164, baseType: !898, size: 32, align: 32, offset: 1056)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "glob_quant", scope: !2167, file: !888, line: 165, baseType: !898, size: 32, align: 32, offset: 1088)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "scan", scope: !2167, file: !888, line: 166, baseType: !1186, size: 64, align: 64, offset: 1152)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "scan_size", scope: !2167, file: !888, line: 167, baseType: !898, size: 32, align: 32, offset: 1216)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "blk_vlc", scope: !2167, file: !888, line: 169, baseType: !1192, size: 512, align: 64, offset: 1280)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "num_corr", scope: !2167, file: !888, line: 171, baseType: !898, size: 32, align: 32, offset: 1792)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "corr", scope: !2167, file: !888, line: 172, baseType: !2198, size: 976, align: 8, offset: 1824)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 976, align: 8, elements: !2199)
!2199 = !{!2200}
!2200 = !DISubrange(count: 122)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "rvmap_sel", scope: !2167, file: !888, line: 173, baseType: !898, size: 32, align: 32, offset: 2816)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "rv_map", scope: !2167, file: !888, line: 174, baseType: !2203, size: 64, align: 64, offset: 2880)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64, align: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "num_tiles", scope: !2167, file: !888, line: 175, baseType: !898, size: 32, align: 32, offset: 2944)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !2167, file: !888, line: 176, baseType: !2206, size: 64, align: 64, offset: 3008)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64, align: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVITile", file: !888, line: 138, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVITile", file: !888, line: 127, size: 384, align: 64, elements: !2209)
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2233}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "xpos", scope: !2208, file: !888, line: 128, baseType: !898, size: 32, align: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ypos", scope: !2208, file: !888, line: 129, baseType: !898, size: 32, align: 32, offset: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2208, file: !888, line: 130, baseType: !898, size: 32, align: 32, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2208, file: !888, line: 131, baseType: !898, size: 32, align: 32, offset: 96)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "mb_size", scope: !2208, file: !888, line: 132, baseType: !898, size: 32, align: 32, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "is_empty", scope: !2208, file: !888, line: 133, baseType: !898, size: 32, align: 32, offset: 160)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2208, file: !888, line: 134, baseType: !898, size: 32, align: 32, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "num_MBs", scope: !2208, file: !888, line: 135, baseType: !898, size: 32, align: 32, offset: 224)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "mbs", scope: !2208, file: !888, line: 136, baseType: !2219, size: 64, align: 64, offset: 256)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64, align: 64)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVIMbInfo", file: !888, line: 121, baseType: !2221)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVIMbInfo", file: !888, line: 110, size: 128, align: 32, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "xpos", scope: !2221, file: !888, line: 111, baseType: !917, size: 16, align: 16)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "ypos", scope: !2221, file: !888, line: 112, baseType: !917, size: 16, align: 16, offset: 16)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "buf_offs", scope: !2221, file: !888, line: 113, baseType: !906, size: 32, align: 32, offset: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2221, file: !888, line: 114, baseType: !926, size: 8, align: 8, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "cbp", scope: !2221, file: !888, line: 115, baseType: !926, size: 8, align: 8, offset: 72)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "q_delta", scope: !2221, file: !888, line: 116, baseType: !949, size: 8, align: 8, offset: 80)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "mv_x", scope: !2221, file: !888, line: 117, baseType: !949, size: 8, align: 8, offset: 88)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "mv_y", scope: !2221, file: !888, line: 118, baseType: !949, size: 8, align: 8, offset: 96)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "b_mv_x", scope: !2221, file: !888, line: 119, baseType: !949, size: 8, align: 8, offset: 104)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "b_mv_y", scope: !2221, file: !888, line: 120, baseType: !949, size: 8, align: 8, offset: 112)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ref_mbs", scope: !2208, file: !888, line: 137, baseType: !2219, size: 64, align: 64, offset: 320)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "inv_transform", scope: !2167, file: !888, line: 177, baseType: !2235, size: 64, align: 64, offset: 3072)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64, align: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "InvTransformPtr", file: !888, line: 90, baseType: !2237)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{null, !2239, !2177, !2183, !1186}
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64, align: 64)
!2240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "transform_size", scope: !2167, file: !888, line: 178, baseType: !898, size: 32, align: 32, offset: 3136)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "dc_transform", scope: !2167, file: !888, line: 179, baseType: !2243, size: 64, align: 64, offset: 3200)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64, align: 64)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "DCTransformPtr", file: !888, line: 91, baseType: !2245)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{null, !2239, !2177, !2183, !898}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "is_2d_trans", scope: !2167, file: !888, line: 180, baseType: !898, size: 32, align: 32, offset: 3264)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !2167, file: !888, line: 181, baseType: !976, size: 32, align: 32, offset: 3296)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_present", scope: !2167, file: !888, line: 182, baseType: !898, size: 32, align: 32, offset: 3328)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !2167, file: !888, line: 183, baseType: !898, size: 32, align: 32, offset: 3360)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "intra_base", scope: !2167, file: !888, line: 184, baseType: !2252, size: 64, align: 64, offset: 3392)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64, align: 64)
!2253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "inter_base", scope: !2167, file: !888, line: 185, baseType: !2252, size: 64, align: 64, offset: 3456)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "intra_scale", scope: !2167, file: !888, line: 186, baseType: !1186, size: 64, align: 64, offset: 3520)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "inter_scale", scope: !2167, file: !888, line: 187, baseType: !1186, size: 64, align: 64, offset: 3584)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64, align: 64)
!2258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVIPicConfig", file: !888, line: 211, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVIPicConfig", file: !888, line: 202, size: 112, align: 16, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pic_width", scope: !2260, file: !888, line: 203, baseType: !1069, size: 16, align: 16)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "pic_height", scope: !2260, file: !888, line: 204, baseType: !1069, size: 16, align: 16, offset: 16)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_width", scope: !2260, file: !888, line: 205, baseType: !1069, size: 16, align: 16, offset: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_height", scope: !2260, file: !888, line: 206, baseType: !1069, size: 16, align: 16, offset: 48)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "tile_width", scope: !2260, file: !888, line: 207, baseType: !1069, size: 16, align: 16, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "tile_height", scope: !2260, file: !888, line: 208, baseType: !1069, size: 16, align: 16, offset: 80)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "luma_bands", scope: !2260, file: !888, line: 209, baseType: !926, size: 8, align: 8, offset: 96)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_bands", scope: !2260, file: !888, line: 210, baseType: !926, size: 8, align: 8, offset: 104)
!2270 = !DILocalVariable(name: "avctx", arg: 1, scope: !2154, file: !912, line: 305, type: !1199)
!2271 = !DILocation(line: 305, column: 62, scope: !2154)
!2272 = !DILocalVariable(name: "planes", arg: 2, scope: !2154, file: !912, line: 305, type: !2157)
!2273 = !DILocation(line: 305, column: 83, scope: !2154)
!2274 = !DILocalVariable(name: "cfg", arg: 3, scope: !2154, file: !912, line: 305, type: !2257)
!2275 = !DILocation(line: 305, column: 111, scope: !2154)
!2276 = !DILocalVariable(name: "is_indeo4", arg: 4, scope: !2154, file: !912, line: 306, type: !898)
!2277 = !DILocation(line: 306, column: 36, scope: !2154)
!2278 = !DILocalVariable(name: "p", scope: !2154, file: !912, line: 308, type: !898)
!2279 = !DILocation(line: 308, column: 9, scope: !2154)
!2280 = !DILocalVariable(name: "b", scope: !2154, file: !912, line: 308, type: !898)
!2281 = !DILocation(line: 308, column: 12, scope: !2154)
!2282 = !DILocalVariable(name: "b_width", scope: !2154, file: !912, line: 309, type: !906)
!2283 = !DILocation(line: 309, column: 14, scope: !2154)
!2284 = !DILocalVariable(name: "b_height", scope: !2154, file: !912, line: 309, type: !906)
!2285 = !DILocation(line: 309, column: 23, scope: !2154)
!2286 = !DILocalVariable(name: "align_fac", scope: !2154, file: !912, line: 309, type: !906)
!2287 = !DILocation(line: 309, column: 33, scope: !2154)
!2288 = !DILocalVariable(name: "width_aligned", scope: !2154, file: !912, line: 309, type: !906)
!2289 = !DILocation(line: 309, column: 44, scope: !2154)
!2290 = !DILocalVariable(name: "height_aligned", scope: !2154, file: !912, line: 310, type: !906)
!2291 = !DILocation(line: 310, column: 14, scope: !2154)
!2292 = !DILocalVariable(name: "buf_size", scope: !2154, file: !912, line: 310, type: !906)
!2293 = !DILocation(line: 310, column: 30, scope: !2154)
!2294 = !DILocalVariable(name: "band", scope: !2154, file: !912, line: 311, type: !2165)
!2295 = !DILocation(line: 311, column: 18, scope: !2154)
!2296 = !DILocation(line: 313, column: 22, scope: !2154)
!2297 = !DILocation(line: 313, column: 5, scope: !2154)
!2298 = !DILocation(line: 315, column: 30, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2154, file: !912, line: 315, column: 9)
!2300 = !DILocation(line: 315, column: 35, scope: !2299)
!2301 = !DILocation(line: 315, column: 46, scope: !2299)
!2302 = !DILocation(line: 315, column: 51, scope: !2299)
!2303 = !DILocation(line: 315, column: 63, scope: !2299)
!2304 = !DILocation(line: 315, column: 70, scope: !2299)
!2305 = !DILocation(line: 315, column: 105, scope: !2299)
!2306 = !DILocation(line: 315, column: 9, scope: !2299)
!2307 = !DILocation(line: 315, column: 112, scope: !2299)
!2308 = !DILocation(line: 315, column: 116, scope: !2299)
!2309 = !DILocation(line: 316, column: 9, scope: !2299)
!2310 = !DILocation(line: 316, column: 14, scope: !2299)
!2311 = !DILocation(line: 316, column: 25, scope: !2299)
!2312 = !DILocation(line: 316, column: 29, scope: !2299)
!2313 = !DILocation(line: 316, column: 32, scope: !2314)
!2314 = !DILexicalBlockFile(scope: !2299, file: !912, discriminator: 1)
!2315 = !DILocation(line: 316, column: 37, scope: !2314)
!2316 = !DILocation(line: 316, column: 50, scope: !2314)
!2317 = !DILocation(line: 315, column: 9, scope: !2318)
!2318 = !DILexicalBlockFile(scope: !2154, file: !912, discriminator: 1)
!2319 = !DILocation(line: 317, column: 9, scope: !2299)
!2320 = !DILocation(line: 320, column: 23, scope: !2154)
!2321 = !DILocation(line: 320, column: 28, scope: !2154)
!2322 = !DILocation(line: 320, column: 5, scope: !2154)
!2323 = !DILocation(line: 320, column: 15, scope: !2154)
!2324 = !DILocation(line: 320, column: 21, scope: !2154)
!2325 = !DILocation(line: 321, column: 24, scope: !2154)
!2326 = !DILocation(line: 321, column: 29, scope: !2154)
!2327 = !DILocation(line: 321, column: 5, scope: !2154)
!2328 = !DILocation(line: 321, column: 15, scope: !2154)
!2329 = !DILocation(line: 321, column: 22, scope: !2154)
!2330 = !DILocation(line: 322, column: 27, scope: !2154)
!2331 = !DILocation(line: 322, column: 32, scope: !2154)
!2332 = !DILocation(line: 322, column: 5, scope: !2154)
!2333 = !DILocation(line: 322, column: 15, scope: !2154)
!2334 = !DILocation(line: 322, column: 25, scope: !2154)
!2335 = !DILocation(line: 325, column: 42, scope: !2154)
!2336 = !DILocation(line: 325, column: 47, scope: !2154)
!2337 = !DILocation(line: 325, column: 57, scope: !2154)
!2338 = !DILocation(line: 325, column: 62, scope: !2154)
!2339 = !DILocation(line: 325, column: 41, scope: !2154)
!2340 = !DILocation(line: 325, column: 23, scope: !2154)
!2341 = !DILocation(line: 325, column: 33, scope: !2154)
!2342 = !DILocation(line: 325, column: 39, scope: !2154)
!2343 = !DILocation(line: 325, column: 5, scope: !2154)
!2344 = !DILocation(line: 325, column: 15, scope: !2154)
!2345 = !DILocation(line: 325, column: 21, scope: !2154)
!2346 = !DILocation(line: 326, column: 44, scope: !2154)
!2347 = !DILocation(line: 326, column: 49, scope: !2154)
!2348 = !DILocation(line: 326, column: 60, scope: !2154)
!2349 = !DILocation(line: 326, column: 65, scope: !2154)
!2350 = !DILocation(line: 326, column: 43, scope: !2154)
!2351 = !DILocation(line: 326, column: 24, scope: !2154)
!2352 = !DILocation(line: 326, column: 34, scope: !2154)
!2353 = !DILocation(line: 326, column: 41, scope: !2154)
!2354 = !DILocation(line: 326, column: 5, scope: !2154)
!2355 = !DILocation(line: 326, column: 15, scope: !2154)
!2356 = !DILocation(line: 326, column: 22, scope: !2154)
!2357 = !DILocation(line: 327, column: 49, scope: !2154)
!2358 = !DILocation(line: 327, column: 54, scope: !2154)
!2359 = !DILocation(line: 327, column: 27, scope: !2154)
!2360 = !DILocation(line: 327, column: 37, scope: !2154)
!2361 = !DILocation(line: 327, column: 47, scope: !2154)
!2362 = !DILocation(line: 327, column: 5, scope: !2154)
!2363 = !DILocation(line: 327, column: 15, scope: !2154)
!2364 = !DILocation(line: 327, column: 25, scope: !2154)
!2365 = !DILocation(line: 329, column: 12, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2154, file: !912, line: 329, column: 5)
!2367 = !DILocation(line: 329, column: 10, scope: !2366)
!2368 = !DILocation(line: 329, column: 17, scope: !2369)
!2369 = !DILexicalBlockFile(scope: !2370, file: !912, discriminator: 1)
!2370 = distinct !DILexicalBlock(scope: !2366, file: !912, line: 329, column: 5)
!2371 = !DILocation(line: 329, column: 19, scope: !2369)
!2372 = !DILocation(line: 329, column: 5, scope: !2369)
!2373 = !DILocation(line: 330, column: 51, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2370, file: !912, line: 329, column: 29)
!2375 = !DILocation(line: 330, column: 44, scope: !2374)
!2376 = !DILocation(line: 330, column: 54, scope: !2374)
!2377 = !DILocation(line: 330, column: 27, scope: !2374)
!2378 = !DILocation(line: 330, column: 16, scope: !2374)
!2379 = !DILocation(line: 330, column: 9, scope: !2374)
!2380 = !DILocation(line: 330, column: 19, scope: !2374)
!2381 = !DILocation(line: 330, column: 25, scope: !2374)
!2382 = !DILocation(line: 331, column: 21, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2374, file: !912, line: 331, column: 13)
!2384 = !DILocation(line: 331, column: 14, scope: !2383)
!2385 = !DILocation(line: 331, column: 24, scope: !2383)
!2386 = !DILocation(line: 331, column: 13, scope: !2374)
!2387 = !DILocation(line: 332, column: 13, scope: !2383)
!2388 = !DILocation(line: 337, column: 26, scope: !2374)
!2389 = !DILocation(line: 337, column: 19, scope: !2374)
!2390 = !DILocation(line: 337, column: 29, scope: !2374)
!2391 = !DILocation(line: 337, column: 39, scope: !2374)
!2392 = !DILocation(line: 337, column: 53, scope: !2393)
!2393 = !DILexicalBlockFile(scope: !2374, file: !912, discriminator: 1)
!2394 = !DILocation(line: 337, column: 46, scope: !2393)
!2395 = !DILocation(line: 337, column: 56, scope: !2393)
!2396 = !DILocation(line: 337, column: 19, scope: !2393)
!2397 = !DILocation(line: 338, column: 55, scope: !2374)
!2398 = !DILocation(line: 338, column: 48, scope: !2374)
!2399 = !DILocation(line: 338, column: 58, scope: !2374)
!2400 = !DILocation(line: 338, column: 64, scope: !2374)
!2401 = !DILocation(line: 338, column: 69, scope: !2374)
!2402 = !DILocation(line: 337, column: 19, scope: !2403)
!2403 = !DILexicalBlockFile(scope: !2374, file: !912, discriminator: 2)
!2404 = !DILocation(line: 337, column: 19, scope: !2405)
!2405 = !DILexicalBlockFile(scope: !2374, file: !912, discriminator: 3)
!2406 = !DILocation(line: 337, column: 17, scope: !2405)
!2407 = !DILocation(line: 339, column: 27, scope: !2374)
!2408 = !DILocation(line: 339, column: 20, scope: !2374)
!2409 = !DILocation(line: 339, column: 30, scope: !2374)
!2410 = !DILocation(line: 339, column: 40, scope: !2374)
!2411 = !DILocation(line: 339, column: 54, scope: !2393)
!2412 = !DILocation(line: 339, column: 47, scope: !2393)
!2413 = !DILocation(line: 339, column: 57, scope: !2393)
!2414 = !DILocation(line: 339, column: 20, scope: !2393)
!2415 = !DILocation(line: 340, column: 55, scope: !2374)
!2416 = !DILocation(line: 340, column: 48, scope: !2374)
!2417 = !DILocation(line: 340, column: 58, scope: !2374)
!2418 = !DILocation(line: 340, column: 65, scope: !2374)
!2419 = !DILocation(line: 340, column: 70, scope: !2374)
!2420 = !DILocation(line: 339, column: 20, scope: !2403)
!2421 = !DILocation(line: 339, column: 20, scope: !2405)
!2422 = !DILocation(line: 339, column: 18, scope: !2405)
!2423 = !DILocation(line: 344, column: 21, scope: !2374)
!2424 = !DILocation(line: 344, column: 19, scope: !2374)
!2425 = !DILocation(line: 345, column: 28, scope: !2374)
!2426 = !DILocation(line: 345, column: 38, scope: !2374)
!2427 = !DILocation(line: 345, column: 36, scope: !2374)
!2428 = !DILocation(line: 345, column: 48, scope: !2374)
!2429 = !DILocation(line: 345, column: 55, scope: !2374)
!2430 = !DILocation(line: 345, column: 65, scope: !2374)
!2431 = !DILocation(line: 345, column: 52, scope: !2374)
!2432 = !DILocation(line: 345, column: 51, scope: !2374)
!2433 = !DILocation(line: 345, column: 23, scope: !2374)
!2434 = !DILocation(line: 346, column: 29, scope: !2374)
!2435 = !DILocation(line: 346, column: 40, scope: !2374)
!2436 = !DILocation(line: 346, column: 38, scope: !2374)
!2437 = !DILocation(line: 346, column: 50, scope: !2374)
!2438 = !DILocation(line: 346, column: 57, scope: !2374)
!2439 = !DILocation(line: 346, column: 67, scope: !2374)
!2440 = !DILocation(line: 346, column: 54, scope: !2374)
!2441 = !DILocation(line: 346, column: 53, scope: !2374)
!2442 = !DILocation(line: 346, column: 24, scope: !2374)
!2443 = !DILocation(line: 347, column: 20, scope: !2374)
!2444 = !DILocation(line: 347, column: 36, scope: !2374)
!2445 = !DILocation(line: 347, column: 34, scope: !2374)
!2446 = !DILocation(line: 347, column: 51, scope: !2374)
!2447 = !DILocation(line: 347, column: 18, scope: !2374)
!2448 = !DILocation(line: 349, column: 16, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2374, file: !912, line: 349, column: 9)
!2450 = !DILocation(line: 349, column: 14, scope: !2449)
!2451 = !DILocation(line: 349, column: 21, scope: !2452)
!2452 = !DILexicalBlockFile(scope: !2453, file: !912, discriminator: 1)
!2453 = distinct !DILexicalBlock(scope: !2449, file: !912, line: 349, column: 9)
!2454 = !DILocation(line: 349, column: 32, scope: !2452)
!2455 = !DILocation(line: 349, column: 25, scope: !2452)
!2456 = !DILocation(line: 349, column: 35, scope: !2452)
!2457 = !DILocation(line: 349, column: 23, scope: !2452)
!2458 = !DILocation(line: 349, column: 9, scope: !2452)
!2459 = !DILocation(line: 350, column: 37, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2453, file: !912, line: 349, column: 51)
!2461 = !DILocation(line: 350, column: 21, scope: !2460)
!2462 = !DILocation(line: 350, column: 28, scope: !2460)
!2463 = !DILocation(line: 350, column: 31, scope: !2460)
!2464 = !DILocation(line: 350, column: 18, scope: !2460)
!2465 = !DILocation(line: 351, column: 27, scope: !2460)
!2466 = !DILocation(line: 351, column: 13, scope: !2460)
!2467 = !DILocation(line: 351, column: 19, scope: !2460)
!2468 = !DILocation(line: 351, column: 25, scope: !2460)
!2469 = !DILocation(line: 352, column: 30, scope: !2460)
!2470 = !DILocation(line: 352, column: 13, scope: !2460)
!2471 = !DILocation(line: 352, column: 19, scope: !2460)
!2472 = !DILocation(line: 352, column: 28, scope: !2460)
!2473 = !DILocation(line: 353, column: 27, scope: !2460)
!2474 = !DILocation(line: 353, column: 13, scope: !2460)
!2475 = !DILocation(line: 353, column: 19, scope: !2460)
!2476 = !DILocation(line: 353, column: 25, scope: !2460)
!2477 = !DILocation(line: 354, column: 28, scope: !2460)
!2478 = !DILocation(line: 354, column: 13, scope: !2460)
!2479 = !DILocation(line: 354, column: 19, scope: !2460)
!2480 = !DILocation(line: 354, column: 26, scope: !2460)
!2481 = !DILocation(line: 355, column: 27, scope: !2460)
!2482 = !DILocation(line: 355, column: 13, scope: !2460)
!2483 = !DILocation(line: 355, column: 19, scope: !2460)
!2484 = !DILocation(line: 355, column: 25, scope: !2460)
!2485 = !DILocation(line: 356, column: 29, scope: !2460)
!2486 = !DILocation(line: 356, column: 13, scope: !2460)
!2487 = !DILocation(line: 356, column: 19, scope: !2460)
!2488 = !DILocation(line: 356, column: 27, scope: !2460)
!2489 = !DILocation(line: 357, column: 40, scope: !2460)
!2490 = !DILocation(line: 357, column: 29, scope: !2460)
!2491 = !DILocation(line: 357, column: 13, scope: !2460)
!2492 = !DILocation(line: 357, column: 19, scope: !2460)
!2493 = !DILocation(line: 357, column: 27, scope: !2460)
!2494 = !DILocation(line: 358, column: 40, scope: !2460)
!2495 = !DILocation(line: 358, column: 29, scope: !2460)
!2496 = !DILocation(line: 358, column: 13, scope: !2460)
!2497 = !DILocation(line: 358, column: 19, scope: !2460)
!2498 = !DILocation(line: 358, column: 27, scope: !2460)
!2499 = !DILocation(line: 359, column: 29, scope: !2460)
!2500 = !DILocation(line: 359, column: 37, scope: !2460)
!2501 = !DILocation(line: 359, column: 13, scope: !2460)
!2502 = !DILocation(line: 359, column: 19, scope: !2460)
!2503 = !DILocation(line: 359, column: 27, scope: !2460)
!2504 = !DILocation(line: 360, column: 18, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2460, file: !912, line: 360, column: 17)
!2506 = !DILocation(line: 360, column: 24, scope: !2505)
!2507 = !DILocation(line: 360, column: 32, scope: !2505)
!2508 = !DILocation(line: 360, column: 36, scope: !2509)
!2509 = !DILexicalBlockFile(scope: !2505, file: !912, discriminator: 1)
!2510 = !DILocation(line: 360, column: 42, scope: !2509)
!2511 = !DILocation(line: 360, column: 17, scope: !2509)
!2512 = !DILocation(line: 361, column: 17, scope: !2505)
!2513 = !DILocation(line: 364, column: 17, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2460, file: !912, line: 364, column: 17)
!2515 = !DILocation(line: 364, column: 22, scope: !2514)
!2516 = !DILocation(line: 364, column: 33, scope: !2514)
!2517 = !DILocation(line: 364, column: 17, scope: !2460)
!2518 = !DILocation(line: 365, column: 44, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !2514, file: !912, line: 364, column: 38)
!2520 = !DILocation(line: 365, column: 33, scope: !2519)
!2521 = !DILocation(line: 365, column: 17, scope: !2519)
!2522 = !DILocation(line: 365, column: 23, scope: !2519)
!2523 = !DILocation(line: 365, column: 31, scope: !2519)
!2524 = !DILocation(line: 366, column: 22, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2519, file: !912, line: 366, column: 21)
!2526 = !DILocation(line: 366, column: 28, scope: !2525)
!2527 = !DILocation(line: 366, column: 21, scope: !2519)
!2528 = !DILocation(line: 367, column: 21, scope: !2525)
!2529 = !DILocation(line: 368, column: 13, scope: !2519)
!2530 = !DILocation(line: 369, column: 17, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2460, file: !912, line: 369, column: 17)
!2532 = !DILocation(line: 369, column: 17, scope: !2460)
!2533 = !DILocation(line: 370, column: 44, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2531, file: !912, line: 369, column: 28)
!2535 = !DILocation(line: 370, column: 33, scope: !2534)
!2536 = !DILocation(line: 370, column: 17, scope: !2534)
!2537 = !DILocation(line: 370, column: 23, scope: !2534)
!2538 = !DILocation(line: 370, column: 31, scope: !2534)
!2539 = !DILocation(line: 371, column: 22, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2534, file: !912, line: 371, column: 21)
!2541 = !DILocation(line: 371, column: 28, scope: !2540)
!2542 = !DILocation(line: 371, column: 21, scope: !2534)
!2543 = !DILocation(line: 372, column: 21, scope: !2540)
!2544 = !DILocation(line: 373, column: 13, scope: !2534)
!2545 = !DILocation(line: 375, column: 20, scope: !2460)
!2546 = !DILocation(line: 375, column: 13, scope: !2460)
!2547 = !DILocation(line: 375, column: 23, scope: !2460)
!2548 = !DILocation(line: 375, column: 32, scope: !2460)
!2549 = !DILocation(line: 375, column: 40, scope: !2460)
!2550 = !DILocation(line: 375, column: 50, scope: !2460)
!2551 = !DILocation(line: 375, column: 59, scope: !2460)
!2552 = !DILocation(line: 376, column: 9, scope: !2460)
!2553 = !DILocation(line: 349, column: 47, scope: !2554)
!2554 = !DILexicalBlockFile(scope: !2453, file: !912, discriminator: 2)
!2555 = !DILocation(line: 349, column: 9, scope: !2554)
!2556 = distinct !{!2556, !2557}
!2557 = !DILocation(line: 349, column: 9, scope: !2374)
!2558 = !DILocation(line: 377, column: 5, scope: !2374)
!2559 = !DILocation(line: 329, column: 25, scope: !2560)
!2560 = !DILexicalBlockFile(scope: !2370, file: !912, discriminator: 2)
!2561 = !DILocation(line: 329, column: 5, scope: !2560)
!2562 = distinct !{!2562, !2563}
!2563 = !DILocation(line: 329, column: 5, scope: !2154)
!2564 = !DILocation(line: 379, column: 5, scope: !2154)
!2565 = !DILocation(line: 380, column: 1, scope: !2154)
!2566 = distinct !DISubprogram(name: "ivi_free_buffers", scope: !912, file: !912, line: 282, type: !2567, isLocal: true, isDefinition: true, scopeLine: 283, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{null, !2157}
!2569 = !DILocalVariable(name: "planes", arg: 1, scope: !2566, file: !912, line: 282, type: !2157)
!2570 = !DILocation(line: 282, column: 66, scope: !2566)
!2571 = !DILocalVariable(name: "p", scope: !2566, file: !912, line: 284, type: !898)
!2572 = !DILocation(line: 284, column: 9, scope: !2566)
!2573 = !DILocalVariable(name: "b", scope: !2566, file: !912, line: 284, type: !898)
!2574 = !DILocation(line: 284, column: 12, scope: !2566)
!2575 = !DILocalVariable(name: "t", scope: !2566, file: !912, line: 284, type: !898)
!2576 = !DILocation(line: 284, column: 15, scope: !2566)
!2577 = !DILocation(line: 286, column: 12, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2566, file: !912, line: 286, column: 5)
!2579 = !DILocation(line: 286, column: 10, scope: !2578)
!2580 = !DILocation(line: 286, column: 17, scope: !2581)
!2581 = !DILexicalBlockFile(scope: !2582, file: !912, discriminator: 1)
!2582 = distinct !DILexicalBlock(scope: !2578, file: !912, line: 286, column: 5)
!2583 = !DILocation(line: 286, column: 19, scope: !2581)
!2584 = !DILocation(line: 286, column: 5, scope: !2581)
!2585 = !DILocation(line: 287, column: 20, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2587, file: !912, line: 287, column: 13)
!2587 = distinct !DILexicalBlock(scope: !2582, file: !912, line: 286, column: 29)
!2588 = !DILocation(line: 287, column: 13, scope: !2586)
!2589 = !DILocation(line: 287, column: 23, scope: !2586)
!2590 = !DILocation(line: 287, column: 13, scope: !2587)
!2591 = !DILocation(line: 288, column: 16, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2586, file: !912, line: 288, column: 9)
!2593 = !DILocation(line: 288, column: 14, scope: !2592)
!2594 = !DILocation(line: 288, column: 21, scope: !2595)
!2595 = !DILexicalBlockFile(scope: !2596, file: !912, discriminator: 1)
!2596 = distinct !DILexicalBlock(scope: !2592, file: !912, line: 288, column: 9)
!2597 = !DILocation(line: 288, column: 32, scope: !2595)
!2598 = !DILocation(line: 288, column: 25, scope: !2595)
!2599 = !DILocation(line: 288, column: 35, scope: !2595)
!2600 = !DILocation(line: 288, column: 23, scope: !2595)
!2601 = !DILocation(line: 288, column: 9, scope: !2595)
!2602 = !DILocation(line: 289, column: 39, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2596, file: !912, line: 288, column: 51)
!2604 = !DILocation(line: 289, column: 23, scope: !2603)
!2605 = !DILocation(line: 289, column: 30, scope: !2603)
!2606 = !DILocation(line: 289, column: 33, scope: !2603)
!2607 = !DILocation(line: 289, column: 42, scope: !2603)
!2608 = !DILocation(line: 289, column: 22, scope: !2603)
!2609 = !DILocation(line: 289, column: 13, scope: !2603)
!2610 = !DILocation(line: 290, column: 39, scope: !2603)
!2611 = !DILocation(line: 290, column: 23, scope: !2603)
!2612 = !DILocation(line: 290, column: 30, scope: !2603)
!2613 = !DILocation(line: 290, column: 33, scope: !2603)
!2614 = !DILocation(line: 290, column: 42, scope: !2603)
!2615 = !DILocation(line: 290, column: 22, scope: !2603)
!2616 = !DILocation(line: 290, column: 13, scope: !2603)
!2617 = !DILocation(line: 291, column: 39, scope: !2603)
!2618 = !DILocation(line: 291, column: 23, scope: !2603)
!2619 = !DILocation(line: 291, column: 30, scope: !2603)
!2620 = !DILocation(line: 291, column: 33, scope: !2603)
!2621 = !DILocation(line: 291, column: 42, scope: !2603)
!2622 = !DILocation(line: 291, column: 22, scope: !2603)
!2623 = !DILocation(line: 291, column: 13, scope: !2603)
!2624 = !DILocation(line: 292, column: 39, scope: !2603)
!2625 = !DILocation(line: 292, column: 23, scope: !2603)
!2626 = !DILocation(line: 292, column: 30, scope: !2603)
!2627 = !DILocation(line: 292, column: 33, scope: !2603)
!2628 = !DILocation(line: 292, column: 42, scope: !2603)
!2629 = !DILocation(line: 292, column: 22, scope: !2603)
!2630 = !DILocation(line: 292, column: 13, scope: !2603)
!2631 = !DILocation(line: 294, column: 33, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2603, file: !912, line: 294, column: 17)
!2633 = !DILocation(line: 294, column: 17, scope: !2632)
!2634 = !DILocation(line: 294, column: 24, scope: !2632)
!2635 = !DILocation(line: 294, column: 27, scope: !2632)
!2636 = !DILocation(line: 294, column: 36, scope: !2632)
!2637 = !DILocation(line: 294, column: 44, scope: !2632)
!2638 = !DILocation(line: 294, column: 53, scope: !2632)
!2639 = !DILocation(line: 294, column: 17, scope: !2603)
!2640 = !DILocation(line: 295, column: 46, scope: !2632)
!2641 = !DILocation(line: 295, column: 30, scope: !2632)
!2642 = !DILocation(line: 295, column: 37, scope: !2632)
!2643 = !DILocation(line: 295, column: 40, scope: !2632)
!2644 = !DILocation(line: 295, column: 49, scope: !2632)
!2645 = !DILocation(line: 295, column: 57, scope: !2632)
!2646 = !DILocation(line: 295, column: 17, scope: !2632)
!2647 = !DILocation(line: 296, column: 20, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2603, file: !912, line: 296, column: 13)
!2649 = !DILocation(line: 296, column: 18, scope: !2648)
!2650 = !DILocation(line: 296, column: 25, scope: !2651)
!2651 = !DILexicalBlockFile(scope: !2652, file: !912, discriminator: 1)
!2652 = distinct !DILexicalBlock(scope: !2648, file: !912, line: 296, column: 13)
!2653 = !DILocation(line: 296, column: 45, scope: !2651)
!2654 = !DILocation(line: 296, column: 29, scope: !2651)
!2655 = !DILocation(line: 296, column: 36, scope: !2651)
!2656 = !DILocation(line: 296, column: 39, scope: !2651)
!2657 = !DILocation(line: 296, column: 48, scope: !2651)
!2658 = !DILocation(line: 296, column: 27, scope: !2651)
!2659 = !DILocation(line: 296, column: 13, scope: !2651)
!2660 = !DILocation(line: 297, column: 52, scope: !2652)
!2661 = !DILocation(line: 297, column: 27, scope: !2652)
!2662 = !DILocation(line: 297, column: 43, scope: !2652)
!2663 = !DILocation(line: 297, column: 34, scope: !2652)
!2664 = !DILocation(line: 297, column: 37, scope: !2652)
!2665 = !DILocation(line: 297, column: 46, scope: !2652)
!2666 = !DILocation(line: 297, column: 55, scope: !2652)
!2667 = !DILocation(line: 297, column: 26, scope: !2652)
!2668 = !DILocation(line: 297, column: 17, scope: !2652)
!2669 = !DILocation(line: 296, column: 60, scope: !2670)
!2670 = !DILexicalBlockFile(scope: !2652, file: !912, discriminator: 2)
!2671 = !DILocation(line: 296, column: 13, scope: !2670)
!2672 = distinct !{!2672, !2673}
!2673 = !DILocation(line: 296, column: 13, scope: !2603)
!2674 = !DILocation(line: 298, column: 39, scope: !2603)
!2675 = !DILocation(line: 298, column: 23, scope: !2603)
!2676 = !DILocation(line: 298, column: 30, scope: !2603)
!2677 = !DILocation(line: 298, column: 33, scope: !2603)
!2678 = !DILocation(line: 298, column: 42, scope: !2603)
!2679 = !DILocation(line: 298, column: 22, scope: !2603)
!2680 = !DILocation(line: 298, column: 13, scope: !2603)
!2681 = !DILocation(line: 299, column: 9, scope: !2603)
!2682 = !DILocation(line: 288, column: 47, scope: !2683)
!2683 = !DILexicalBlockFile(scope: !2596, file: !912, discriminator: 2)
!2684 = !DILocation(line: 288, column: 9, scope: !2683)
!2685 = distinct !{!2685, !2686}
!2686 = !DILocation(line: 288, column: 9, scope: !2586)
!2687 = !DILocation(line: 299, column: 9, scope: !2688)
!2688 = !DILexicalBlockFile(scope: !2592, file: !912, discriminator: 1)
!2689 = !DILocation(line: 300, column: 26, scope: !2587)
!2690 = !DILocation(line: 300, column: 19, scope: !2587)
!2691 = !DILocation(line: 300, column: 29, scope: !2587)
!2692 = !DILocation(line: 300, column: 18, scope: !2587)
!2693 = !DILocation(line: 300, column: 9, scope: !2587)
!2694 = !DILocation(line: 301, column: 16, scope: !2587)
!2695 = !DILocation(line: 301, column: 9, scope: !2587)
!2696 = !DILocation(line: 301, column: 19, scope: !2587)
!2697 = !DILocation(line: 301, column: 29, scope: !2587)
!2698 = !DILocation(line: 302, column: 5, scope: !2587)
!2699 = !DILocation(line: 286, column: 25, scope: !2700)
!2700 = !DILexicalBlockFile(scope: !2582, file: !912, discriminator: 2)
!2701 = !DILocation(line: 286, column: 5, scope: !2700)
!2702 = distinct !{!2702, !2703}
!2703 = !DILocation(line: 286, column: 5, scope: !2566)
!2704 = !DILocation(line: 303, column: 1, scope: !2566)
!2705 = distinct !DISubprogram(name: "ff_ivi_init_tiles", scope: !912, file: !912, line: 421, type: !2706, isLocal: false, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!898, !2157, !898, !898}
!2708 = !DILocalVariable(name: "planes", arg: 1, scope: !2705, file: !912, line: 421, type: !2157)
!2709 = !DILocation(line: 421, column: 59, scope: !2705)
!2710 = !DILocalVariable(name: "tile_width", arg: 2, scope: !2705, file: !912, line: 422, type: !898)
!2711 = !DILocation(line: 422, column: 35, scope: !2705)
!2712 = !DILocalVariable(name: "tile_height", arg: 3, scope: !2705, file: !912, line: 422, type: !898)
!2713 = !DILocation(line: 422, column: 51, scope: !2705)
!2714 = !DILocalVariable(name: "p", scope: !2705, file: !912, line: 424, type: !898)
!2715 = !DILocation(line: 424, column: 9, scope: !2705)
!2716 = !DILocalVariable(name: "b", scope: !2705, file: !912, line: 424, type: !898)
!2717 = !DILocation(line: 424, column: 12, scope: !2705)
!2718 = !DILocalVariable(name: "x_tiles", scope: !2705, file: !912, line: 424, type: !898)
!2719 = !DILocation(line: 424, column: 15, scope: !2705)
!2720 = !DILocalVariable(name: "y_tiles", scope: !2705, file: !912, line: 424, type: !898)
!2721 = !DILocation(line: 424, column: 24, scope: !2705)
!2722 = !DILocalVariable(name: "t_width", scope: !2705, file: !912, line: 424, type: !898)
!2723 = !DILocation(line: 424, column: 33, scope: !2705)
!2724 = !DILocalVariable(name: "t_height", scope: !2705, file: !912, line: 424, type: !898)
!2725 = !DILocation(line: 424, column: 42, scope: !2705)
!2726 = !DILocalVariable(name: "ret", scope: !2705, file: !912, line: 424, type: !898)
!2727 = !DILocation(line: 424, column: 52, scope: !2705)
!2728 = !DILocalVariable(name: "band", scope: !2705, file: !912, line: 425, type: !2165)
!2729 = !DILocation(line: 425, column: 18, scope: !2705)
!2730 = !DILocation(line: 427, column: 12, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2705, file: !912, line: 427, column: 5)
!2732 = !DILocation(line: 427, column: 10, scope: !2731)
!2733 = !DILocation(line: 427, column: 17, scope: !2734)
!2734 = !DILexicalBlockFile(scope: !2735, file: !912, discriminator: 1)
!2735 = distinct !DILexicalBlock(scope: !2731, file: !912, line: 427, column: 5)
!2736 = !DILocation(line: 427, column: 19, scope: !2734)
!2737 = !DILocation(line: 427, column: 5, scope: !2734)
!2738 = !DILocation(line: 428, column: 20, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2735, file: !912, line: 427, column: 29)
!2740 = !DILocation(line: 428, column: 19, scope: !2739)
!2741 = !DILocation(line: 428, column: 24, scope: !2742)
!2742 = !DILexicalBlockFile(scope: !2739, file: !912, discriminator: 1)
!2743 = !DILocation(line: 428, column: 19, scope: !2742)
!2744 = !DILocation(line: 428, column: 38, scope: !2745)
!2745 = !DILexicalBlockFile(scope: !2739, file: !912, discriminator: 2)
!2746 = !DILocation(line: 428, column: 49, scope: !2745)
!2747 = !DILocation(line: 428, column: 54, scope: !2745)
!2748 = !DILocation(line: 428, column: 19, scope: !2745)
!2749 = !DILocation(line: 428, column: 19, scope: !2750)
!2750 = !DILexicalBlockFile(scope: !2739, file: !912, discriminator: 3)
!2751 = !DILocation(line: 428, column: 17, scope: !2750)
!2752 = !DILocation(line: 429, column: 21, scope: !2739)
!2753 = !DILocation(line: 429, column: 20, scope: !2739)
!2754 = !DILocation(line: 429, column: 25, scope: !2742)
!2755 = !DILocation(line: 429, column: 20, scope: !2742)
!2756 = !DILocation(line: 429, column: 40, scope: !2745)
!2757 = !DILocation(line: 429, column: 52, scope: !2745)
!2758 = !DILocation(line: 429, column: 57, scope: !2745)
!2759 = !DILocation(line: 429, column: 20, scope: !2745)
!2760 = !DILocation(line: 429, column: 20, scope: !2750)
!2761 = !DILocation(line: 429, column: 18, scope: !2750)
!2762 = !DILocation(line: 431, column: 14, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2739, file: !912, line: 431, column: 13)
!2764 = !DILocation(line: 431, column: 16, scope: !2763)
!2765 = !DILocation(line: 431, column: 19, scope: !2766)
!2766 = !DILexicalBlockFile(scope: !2763, file: !912, discriminator: 1)
!2767 = !DILocation(line: 431, column: 29, scope: !2766)
!2768 = !DILocation(line: 431, column: 39, scope: !2766)
!2769 = !DILocation(line: 431, column: 13, scope: !2766)
!2770 = !DILocation(line: 432, column: 21, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2763, file: !912, line: 431, column: 45)
!2772 = !DILocation(line: 433, column: 22, scope: !2771)
!2773 = !DILocation(line: 434, column: 9, scope: !2771)
!2774 = !DILocation(line: 435, column: 12, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2739, file: !912, line: 435, column: 12)
!2776 = !DILocation(line: 435, column: 19, scope: !2775)
!2777 = !DILocation(line: 435, column: 23, scope: !2775)
!2778 = !DILocation(line: 435, column: 26, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2775, file: !912, discriminator: 1)
!2780 = !DILocation(line: 435, column: 34, scope: !2779)
!2781 = !DILocation(line: 435, column: 12, scope: !2779)
!2782 = !DILocation(line: 436, column: 13, scope: !2775)
!2783 = !DILocation(line: 438, column: 16, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2739, file: !912, line: 438, column: 9)
!2785 = !DILocation(line: 438, column: 14, scope: !2784)
!2786 = !DILocation(line: 438, column: 21, scope: !2787)
!2787 = !DILexicalBlockFile(scope: !2788, file: !912, discriminator: 1)
!2788 = distinct !DILexicalBlock(scope: !2784, file: !912, line: 438, column: 9)
!2789 = !DILocation(line: 438, column: 32, scope: !2787)
!2790 = !DILocation(line: 438, column: 25, scope: !2787)
!2791 = !DILocation(line: 438, column: 35, scope: !2787)
!2792 = !DILocation(line: 438, column: 23, scope: !2787)
!2793 = !DILocation(line: 438, column: 9, scope: !2787)
!2794 = !DILocation(line: 439, column: 37, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2788, file: !912, line: 438, column: 51)
!2796 = !DILocation(line: 439, column: 21, scope: !2795)
!2797 = !DILocation(line: 439, column: 28, scope: !2795)
!2798 = !DILocation(line: 439, column: 31, scope: !2795)
!2799 = !DILocation(line: 439, column: 18, scope: !2795)
!2800 = !DILocation(line: 441, column: 17, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2795, file: !912, line: 441, column: 17)
!2802 = !DILocation(line: 441, column: 23, scope: !2801)
!2803 = !DILocation(line: 441, column: 17, scope: !2795)
!2804 = !DILocalVariable(name: "t", scope: !2805, file: !912, line: 442, type: !898)
!2805 = distinct !DILexicalBlock(scope: !2801, file: !912, line: 441, column: 30)
!2806 = !DILocation(line: 442, column: 21, scope: !2805)
!2807 = !DILocation(line: 443, column: 24, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2805, file: !912, line: 443, column: 17)
!2809 = !DILocation(line: 443, column: 22, scope: !2808)
!2810 = !DILocation(line: 443, column: 29, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !2812, file: !912, discriminator: 1)
!2812 = distinct !DILexicalBlock(scope: !2808, file: !912, line: 443, column: 17)
!2813 = !DILocation(line: 443, column: 33, scope: !2811)
!2814 = !DILocation(line: 443, column: 39, scope: !2811)
!2815 = !DILocation(line: 443, column: 31, scope: !2811)
!2816 = !DILocation(line: 443, column: 17, scope: !2811)
!2817 = !DILocation(line: 444, column: 43, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2812, file: !912, line: 443, column: 55)
!2819 = !DILocation(line: 444, column: 31, scope: !2818)
!2820 = !DILocation(line: 444, column: 37, scope: !2818)
!2821 = !DILocation(line: 444, column: 46, scope: !2818)
!2822 = !DILocation(line: 444, column: 30, scope: !2818)
!2823 = !DILocation(line: 444, column: 21, scope: !2818)
!2824 = !DILocation(line: 445, column: 17, scope: !2818)
!2825 = !DILocation(line: 443, column: 51, scope: !2826)
!2826 = !DILexicalBlockFile(scope: !2812, file: !912, discriminator: 2)
!2827 = !DILocation(line: 443, column: 17, scope: !2826)
!2828 = distinct !{!2828, !2829}
!2829 = !DILocation(line: 443, column: 17, scope: !2805)
!2830 = !DILocation(line: 446, column: 13, scope: !2805)
!2831 = !DILocation(line: 448, column: 26, scope: !2795)
!2832 = !DILocation(line: 448, column: 32, scope: !2795)
!2833 = !DILocation(line: 448, column: 42, scope: !2795)
!2834 = !DILocation(line: 448, column: 39, scope: !2795)
!2835 = !DILocation(line: 448, column: 51, scope: !2795)
!2836 = !DILocation(line: 448, column: 59, scope: !2795)
!2837 = !DILocation(line: 448, column: 56, scope: !2795)
!2838 = !DILocation(line: 448, column: 21, scope: !2795)
!2839 = !DILocation(line: 449, column: 26, scope: !2795)
!2840 = !DILocation(line: 449, column: 32, scope: !2795)
!2841 = !DILocation(line: 449, column: 43, scope: !2795)
!2842 = !DILocation(line: 449, column: 40, scope: !2795)
!2843 = !DILocation(line: 449, column: 53, scope: !2795)
!2844 = !DILocation(line: 449, column: 61, scope: !2795)
!2845 = !DILocation(line: 449, column: 58, scope: !2795)
!2846 = !DILocation(line: 449, column: 21, scope: !2795)
!2847 = !DILocation(line: 450, column: 31, scope: !2795)
!2848 = !DILocation(line: 450, column: 41, scope: !2795)
!2849 = !DILocation(line: 450, column: 39, scope: !2795)
!2850 = !DILocation(line: 450, column: 13, scope: !2795)
!2851 = !DILocation(line: 450, column: 19, scope: !2795)
!2852 = !DILocation(line: 450, column: 29, scope: !2795)
!2853 = !DILocation(line: 452, column: 23, scope: !2795)
!2854 = !DILocation(line: 452, column: 29, scope: !2795)
!2855 = !DILocation(line: 452, column: 22, scope: !2795)
!2856 = !DILocation(line: 452, column: 13, scope: !2795)
!2857 = !DILocation(line: 453, column: 44, scope: !2795)
!2858 = !DILocation(line: 453, column: 50, scope: !2795)
!2859 = !DILocation(line: 453, column: 27, scope: !2795)
!2860 = !DILocation(line: 453, column: 13, scope: !2795)
!2861 = !DILocation(line: 453, column: 19, scope: !2795)
!2862 = !DILocation(line: 453, column: 25, scope: !2795)
!2863 = !DILocation(line: 454, column: 18, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2795, file: !912, line: 454, column: 17)
!2865 = !DILocation(line: 454, column: 24, scope: !2864)
!2866 = !DILocation(line: 454, column: 17, scope: !2795)
!2867 = !DILocation(line: 455, column: 17, scope: !2864)
!2868 = !DILocation(line: 459, column: 34, scope: !2795)
!2869 = !DILocation(line: 459, column: 40, scope: !2795)
!2870 = !DILocation(line: 459, column: 50, scope: !2795)
!2871 = !DILocation(line: 459, column: 59, scope: !2795)
!2872 = !DILocation(line: 460, column: 34, scope: !2795)
!2873 = !DILocation(line: 460, column: 37, scope: !2795)
!2874 = !DILocation(line: 460, column: 40, scope: !2795)
!2875 = !DILocation(line: 460, column: 50, scope: !2795)
!2876 = !DILocation(line: 459, column: 19, scope: !2795)
!2877 = !DILocation(line: 459, column: 17, scope: !2795)
!2878 = !DILocation(line: 461, column: 17, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2795, file: !912, line: 461, column: 17)
!2880 = !DILocation(line: 461, column: 21, scope: !2879)
!2881 = !DILocation(line: 461, column: 17, scope: !2795)
!2882 = !DILocation(line: 462, column: 24, scope: !2879)
!2883 = !DILocation(line: 462, column: 17, scope: !2879)
!2884 = !DILocation(line: 463, column: 9, scope: !2795)
!2885 = !DILocation(line: 438, column: 47, scope: !2886)
!2886 = !DILexicalBlockFile(scope: !2788, file: !912, discriminator: 2)
!2887 = !DILocation(line: 438, column: 9, scope: !2886)
!2888 = distinct !{!2888, !2889}
!2889 = !DILocation(line: 438, column: 9, scope: !2739)
!2890 = !DILocation(line: 464, column: 5, scope: !2739)
!2891 = !DILocation(line: 427, column: 25, scope: !2892)
!2892 = !DILexicalBlockFile(scope: !2735, file: !912, discriminator: 2)
!2893 = !DILocation(line: 427, column: 5, scope: !2892)
!2894 = distinct !{!2894, !2895}
!2895 = !DILocation(line: 427, column: 5, scope: !2705)
!2896 = !DILocation(line: 466, column: 5, scope: !2705)
!2897 = !DILocation(line: 467, column: 1, scope: !2705)
!2898 = distinct !DISubprogram(name: "ivi_init_tiles", scope: !912, file: !912, line: 382, type: !2899, isLocal: true, isDefinition: true, scopeLine: 384, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!898, !2165, !2206, !898, !898, !898, !898}
!2901 = !DILocalVariable(name: "band", arg: 1, scope: !2898, file: !912, line: 382, type: !2165)
!2902 = !DILocation(line: 382, column: 40, scope: !2898)
!2903 = !DILocalVariable(name: "ref_tile", arg: 2, scope: !2898, file: !912, line: 382, type: !2206)
!2904 = !DILocation(line: 382, column: 55, scope: !2898)
!2905 = !DILocalVariable(name: "p", arg: 3, scope: !2898, file: !912, line: 383, type: !898)
!2906 = !DILocation(line: 383, column: 31, scope: !2898)
!2907 = !DILocalVariable(name: "b", arg: 4, scope: !2898, file: !912, line: 383, type: !898)
!2908 = !DILocation(line: 383, column: 38, scope: !2898)
!2909 = !DILocalVariable(name: "t_height", arg: 5, scope: !2898, file: !912, line: 383, type: !898)
!2910 = !DILocation(line: 383, column: 45, scope: !2898)
!2911 = !DILocalVariable(name: "t_width", arg: 6, scope: !2898, file: !912, line: 383, type: !898)
!2912 = !DILocation(line: 383, column: 59, scope: !2898)
!2913 = !DILocalVariable(name: "x", scope: !2898, file: !912, line: 385, type: !898)
!2914 = !DILocation(line: 385, column: 9, scope: !2898)
!2915 = !DILocalVariable(name: "y", scope: !2898, file: !912, line: 385, type: !898)
!2916 = !DILocation(line: 385, column: 12, scope: !2898)
!2917 = !DILocalVariable(name: "tile", scope: !2898, file: !912, line: 386, type: !2206)
!2918 = !DILocation(line: 386, column: 14, scope: !2898)
!2919 = !DILocation(line: 386, column: 21, scope: !2898)
!2920 = !DILocation(line: 386, column: 27, scope: !2898)
!2921 = !DILocation(line: 388, column: 12, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2898, file: !912, line: 388, column: 5)
!2923 = !DILocation(line: 388, column: 10, scope: !2922)
!2924 = !DILocation(line: 388, column: 17, scope: !2925)
!2925 = !DILexicalBlockFile(scope: !2926, file: !912, discriminator: 1)
!2926 = distinct !DILexicalBlock(scope: !2922, file: !912, line: 388, column: 5)
!2927 = !DILocation(line: 388, column: 21, scope: !2925)
!2928 = !DILocation(line: 388, column: 27, scope: !2925)
!2929 = !DILocation(line: 388, column: 19, scope: !2925)
!2930 = !DILocation(line: 388, column: 5, scope: !2925)
!2931 = !DILocation(line: 389, column: 16, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2933, file: !912, line: 389, column: 9)
!2933 = distinct !DILexicalBlock(scope: !2926, file: !912, line: 388, column: 50)
!2934 = !DILocation(line: 389, column: 14, scope: !2932)
!2935 = !DILocation(line: 389, column: 21, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !2937, file: !912, discriminator: 1)
!2937 = distinct !DILexicalBlock(scope: !2932, file: !912, line: 389, column: 9)
!2938 = !DILocation(line: 389, column: 25, scope: !2936)
!2939 = !DILocation(line: 389, column: 31, scope: !2936)
!2940 = !DILocation(line: 389, column: 23, scope: !2936)
!2941 = !DILocation(line: 389, column: 9, scope: !2936)
!2942 = !DILocation(line: 390, column: 26, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2937, file: !912, line: 389, column: 52)
!2944 = !DILocation(line: 390, column: 13, scope: !2943)
!2945 = !DILocation(line: 390, column: 19, scope: !2943)
!2946 = !DILocation(line: 390, column: 24, scope: !2943)
!2947 = !DILocation(line: 391, column: 26, scope: !2943)
!2948 = !DILocation(line: 391, column: 13, scope: !2943)
!2949 = !DILocation(line: 391, column: 19, scope: !2943)
!2950 = !DILocation(line: 391, column: 24, scope: !2943)
!2951 = !DILocation(line: 392, column: 29, scope: !2943)
!2952 = !DILocation(line: 392, column: 35, scope: !2943)
!2953 = !DILocation(line: 392, column: 13, scope: !2943)
!2954 = !DILocation(line: 392, column: 19, scope: !2943)
!2955 = !DILocation(line: 392, column: 27, scope: !2943)
!2956 = !DILocation(line: 393, column: 29, scope: !2943)
!2957 = !DILocation(line: 393, column: 35, scope: !2943)
!2958 = !DILocation(line: 393, column: 43, scope: !2943)
!2959 = !DILocation(line: 393, column: 41, scope: !2943)
!2960 = !DILocation(line: 393, column: 49, scope: !2943)
!2961 = !DILocation(line: 393, column: 46, scope: !2943)
!2962 = !DILocation(line: 393, column: 28, scope: !2943)
!2963 = !DILocation(line: 393, column: 61, scope: !2964)
!2964 = !DILexicalBlockFile(scope: !2943, file: !912, discriminator: 1)
!2965 = !DILocation(line: 393, column: 28, scope: !2964)
!2966 = !DILocation(line: 393, column: 73, scope: !2967)
!2967 = !DILexicalBlockFile(scope: !2943, file: !912, discriminator: 2)
!2968 = !DILocation(line: 393, column: 79, scope: !2967)
!2969 = !DILocation(line: 393, column: 87, scope: !2967)
!2970 = !DILocation(line: 393, column: 85, scope: !2967)
!2971 = !DILocation(line: 393, column: 28, scope: !2967)
!2972 = !DILocation(line: 393, column: 28, scope: !2973)
!2973 = !DILexicalBlockFile(scope: !2943, file: !912, discriminator: 3)
!2974 = !DILocation(line: 393, column: 13, scope: !2973)
!2975 = !DILocation(line: 393, column: 19, scope: !2973)
!2976 = !DILocation(line: 393, column: 25, scope: !2973)
!2977 = !DILocation(line: 394, column: 30, scope: !2943)
!2978 = !DILocation(line: 394, column: 36, scope: !2943)
!2979 = !DILocation(line: 394, column: 45, scope: !2943)
!2980 = !DILocation(line: 394, column: 43, scope: !2943)
!2981 = !DILocation(line: 394, column: 51, scope: !2943)
!2982 = !DILocation(line: 394, column: 48, scope: !2943)
!2983 = !DILocation(line: 394, column: 29, scope: !2943)
!2984 = !DILocation(line: 394, column: 64, scope: !2964)
!2985 = !DILocation(line: 394, column: 29, scope: !2964)
!2986 = !DILocation(line: 394, column: 77, scope: !2967)
!2987 = !DILocation(line: 394, column: 83, scope: !2967)
!2988 = !DILocation(line: 394, column: 92, scope: !2967)
!2989 = !DILocation(line: 394, column: 90, scope: !2967)
!2990 = !DILocation(line: 394, column: 29, scope: !2967)
!2991 = !DILocation(line: 394, column: 29, scope: !2973)
!2992 = !DILocation(line: 394, column: 13, scope: !2973)
!2993 = !DILocation(line: 394, column: 19, scope: !2973)
!2994 = !DILocation(line: 394, column: 26, scope: !2973)
!2995 = !DILocation(line: 395, column: 30, scope: !2943)
!2996 = !DILocation(line: 395, column: 36, scope: !2943)
!2997 = !DILocation(line: 395, column: 46, scope: !2943)
!2998 = !DILocation(line: 395, column: 13, scope: !2943)
!2999 = !DILocation(line: 395, column: 19, scope: !2943)
!3000 = !DILocation(line: 395, column: 28, scope: !2943)
!3001 = !DILocation(line: 397, column: 33, scope: !2943)
!3002 = !DILocation(line: 397, column: 39, scope: !2943)
!3003 = !DILocation(line: 397, column: 49, scope: !2943)
!3004 = !DILocation(line: 397, column: 55, scope: !2943)
!3005 = !DILocation(line: 397, column: 46, scope: !2943)
!3006 = !DILocation(line: 397, column: 64, scope: !2943)
!3007 = !DILocation(line: 397, column: 72, scope: !2943)
!3008 = !DILocation(line: 397, column: 78, scope: !2943)
!3009 = !DILocation(line: 397, column: 69, scope: !2943)
!3010 = !DILocation(line: 397, column: 93, scope: !2943)
!3011 = !DILocation(line: 397, column: 99, scope: !2943)
!3012 = !DILocation(line: 397, column: 110, scope: !2943)
!3013 = !DILocation(line: 397, column: 116, scope: !2943)
!3014 = !DILocation(line: 397, column: 107, scope: !2943)
!3015 = !DILocation(line: 397, column: 125, scope: !2943)
!3016 = !DILocation(line: 397, column: 133, scope: !2943)
!3017 = !DILocation(line: 397, column: 139, scope: !2943)
!3018 = !DILocation(line: 397, column: 130, scope: !2943)
!3019 = !DILocation(line: 397, column: 88, scope: !2943)
!3020 = !DILocation(line: 397, column: 13, scope: !2943)
!3021 = !DILocation(line: 397, column: 19, scope: !2943)
!3022 = !DILocation(line: 397, column: 27, scope: !2943)
!3023 = !DILocation(line: 400, column: 23, scope: !2943)
!3024 = !DILocation(line: 400, column: 29, scope: !2943)
!3025 = !DILocation(line: 400, column: 22, scope: !2943)
!3026 = !DILocation(line: 400, column: 13, scope: !2943)
!3027 = !DILocation(line: 401, column: 42, scope: !2943)
!3028 = !DILocation(line: 401, column: 48, scope: !2943)
!3029 = !DILocation(line: 401, column: 25, scope: !2943)
!3030 = !DILocation(line: 401, column: 13, scope: !2943)
!3031 = !DILocation(line: 401, column: 19, scope: !2943)
!3032 = !DILocation(line: 401, column: 23, scope: !2943)
!3033 = !DILocation(line: 402, column: 18, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !2943, file: !912, line: 402, column: 17)
!3035 = !DILocation(line: 402, column: 24, scope: !3034)
!3036 = !DILocation(line: 402, column: 17, scope: !2943)
!3037 = !DILocation(line: 403, column: 17, scope: !3034)
!3038 = !DILocation(line: 405, column: 13, scope: !2943)
!3039 = !DILocation(line: 405, column: 19, scope: !2943)
!3040 = !DILocation(line: 405, column: 27, scope: !2943)
!3041 = !DILocation(line: 406, column: 17, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !2943, file: !912, line: 406, column: 17)
!3043 = !DILocation(line: 406, column: 19, scope: !3042)
!3044 = !DILocation(line: 406, column: 22, scope: !3045)
!3045 = !DILexicalBlockFile(scope: !3042, file: !912, discriminator: 1)
!3046 = !DILocation(line: 406, column: 17, scope: !3045)
!3047 = !DILocation(line: 407, column: 21, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !912, line: 407, column: 21)
!3049 = distinct !DILexicalBlock(scope: !3042, file: !912, line: 406, column: 25)
!3050 = !DILocation(line: 407, column: 27, scope: !3048)
!3051 = !DILocation(line: 407, column: 38, scope: !3048)
!3052 = !DILocation(line: 407, column: 48, scope: !3048)
!3053 = !DILocation(line: 407, column: 35, scope: !3048)
!3054 = !DILocation(line: 407, column: 21, scope: !3049)
!3055 = !DILocation(line: 408, column: 21, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3048, file: !912, line: 407, column: 57)
!3057 = !DILocation(line: 409, column: 21, scope: !3056)
!3058 = !DILocation(line: 411, column: 33, scope: !3049)
!3059 = !DILocation(line: 411, column: 43, scope: !3049)
!3060 = !DILocation(line: 411, column: 17, scope: !3049)
!3061 = !DILocation(line: 411, column: 23, scope: !3049)
!3062 = !DILocation(line: 411, column: 31, scope: !3049)
!3063 = !DILocation(line: 412, column: 25, scope: !3049)
!3064 = !DILocation(line: 413, column: 13, scope: !3049)
!3065 = !DILocation(line: 414, column: 17, scope: !2943)
!3066 = !DILocation(line: 415, column: 9, scope: !2943)
!3067 = !DILocation(line: 389, column: 43, scope: !3068)
!3068 = !DILexicalBlockFile(scope: !2937, file: !912, discriminator: 2)
!3069 = !DILocation(line: 389, column: 40, scope: !3068)
!3070 = !DILocation(line: 389, column: 9, scope: !3068)
!3071 = distinct !{!3071, !3072}
!3072 = !DILocation(line: 389, column: 9, scope: !2933)
!3073 = !DILocation(line: 416, column: 5, scope: !2933)
!3074 = !DILocation(line: 388, column: 40, scope: !3075)
!3075 = !DILexicalBlockFile(scope: !2926, file: !912, discriminator: 2)
!3076 = !DILocation(line: 388, column: 37, scope: !3075)
!3077 = !DILocation(line: 388, column: 5, scope: !3075)
!3078 = distinct !{!3078, !3079}
!3079 = !DILocation(line: 388, column: 5, scope: !2898)
!3080 = !DILocation(line: 418, column: 5, scope: !2898)
!3081 = !DILocation(line: 419, column: 1, scope: !2898)
!3082 = distinct !DISubprogram(name: "ff_ivi_decode_frame", scope: !912, file: !912, line: 1070, type: !1487, isLocal: false, isDefinition: true, scopeLine: 1072, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!3083 = !DILocalVariable(name: "avctx", arg: 1, scope: !3082, file: !912, line: 1070, type: !1199)
!3084 = !DILocation(line: 1070, column: 41, scope: !3082)
!3085 = !DILocalVariable(name: "data", arg: 2, scope: !3082, file: !912, line: 1070, type: !908)
!3086 = !DILocation(line: 1070, column: 54, scope: !3082)
!3087 = !DILocalVariable(name: "got_frame", arg: 3, scope: !3082, file: !912, line: 1070, type: !1484)
!3088 = !DILocation(line: 1070, column: 65, scope: !3082)
!3089 = !DILocalVariable(name: "avpkt", arg: 4, scope: !3082, file: !912, line: 1071, type: !1370)
!3090 = !DILocation(line: 1071, column: 35, scope: !3082)
!3091 = !DILocalVariable(name: "ctx", scope: !3082, file: !912, line: 1073, type: !3092)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64, align: 64)
!3093 = !DIDerivedType(tag: DW_TAG_typedef, name: "IVI45DecContext", file: !888, line: 271, baseType: !3094)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IVI45DecContext", file: !888, line: 213, size: 40256, align: 64, elements: !3095)
!3095 = !{!3096, !3097, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3141, !3145, !3149, !3153, !3157, !3158, !3159, !3160, !3161}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !3094, file: !888, line: 214, baseType: !1181, size: 256, align: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "rvmap_tabs", scope: !3094, file: !888, line: 215, baseType: !3098, size: 37008, align: 8, offset: 256)
!3098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 37008, align: 8, elements: !951)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "frame_num", scope: !3094, file: !888, line: 217, baseType: !906, size: 32, align: 32, offset: 37280)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "frame_type", scope: !3094, file: !888, line: 218, baseType: !898, size: 32, align: 32, offset: 37312)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "prev_frame_type", scope: !3094, file: !888, line: 219, baseType: !898, size: 32, align: 32, offset: 37344)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3094, file: !888, line: 220, baseType: !906, size: 32, align: 32, offset: 37376)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "is_scalable", scope: !3094, file: !888, line: 221, baseType: !898, size: 32, align: 32, offset: 37408)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "frame_data", scope: !3094, file: !888, line: 222, baseType: !1186, size: 64, align: 64, offset: 37440)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "inter_scal", scope: !3094, file: !888, line: 223, baseType: !898, size: 32, align: 32, offset: 37504)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !3094, file: !888, line: 224, baseType: !906, size: 32, align: 32, offset: 37536)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "pic_hdr_size", scope: !3094, file: !888, line: 225, baseType: !906, size: 32, align: 32, offset: 37568)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "frame_flags", scope: !3094, file: !888, line: 226, baseType: !926, size: 8, align: 8, offset: 37600)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !3094, file: !888, line: 227, baseType: !1069, size: 16, align: 16, offset: 37616)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "pic_conf", scope: !3094, file: !888, line: 229, baseType: !2259, size: 112, align: 16, offset: 37632)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !3094, file: !888, line: 230, baseType: !3112, size: 384, align: 64, offset: 37760)
!3112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2158, size: 384, align: 64, elements: !3113)
!3113 = !{!3114}
!3114 = !DISubrange(count: 3)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "buf_switch", scope: !3094, file: !888, line: 232, baseType: !898, size: 32, align: 32, offset: 38144)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "dst_buf", scope: !3094, file: !888, line: 233, baseType: !898, size: 32, align: 32, offset: 38176)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "ref_buf", scope: !3094, file: !888, line: 234, baseType: !898, size: 32, align: 32, offset: 38208)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "ref2_buf", scope: !3094, file: !888, line: 235, baseType: !898, size: 32, align: 32, offset: 38240)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_buf", scope: !3094, file: !888, line: 236, baseType: !898, size: 32, align: 32, offset: 38272)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mb_vlc", scope: !3094, file: !888, line: 238, baseType: !1192, size: 512, align: 64, offset: 38336)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "blk_vlc", scope: !3094, file: !888, line: 239, baseType: !1192, size: 512, align: 64, offset: 38848)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "rvmap_sel", scope: !3094, file: !888, line: 241, baseType: !926, size: 8, align: 8, offset: 39360)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "in_imf", scope: !3094, file: !888, line: 242, baseType: !926, size: 8, align: 8, offset: 39368)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "in_q", scope: !3094, file: !888, line: 243, baseType: !926, size: 8, align: 8, offset: 39376)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "pic_glob_quant", scope: !3094, file: !888, line: 244, baseType: !926, size: 8, align: 8, offset: 39384)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "unknown1", scope: !3094, file: !888, line: 245, baseType: !926, size: 8, align: 8, offset: 39392)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "gop_hdr_size", scope: !3094, file: !888, line: 247, baseType: !1069, size: 16, align: 16, offset: 39408)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "gop_flags", scope: !3094, file: !888, line: 248, baseType: !926, size: 8, align: 8, offset: 39424)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "lock_word", scope: !3094, file: !888, line: 249, baseType: !906, size: 32, align: 32, offset: 39456)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "show_indeo4_info", scope: !3094, file: !888, line: 251, baseType: !898, size: 32, align: 32, offset: 39488)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !3094, file: !888, line: 252, baseType: !926, size: 8, align: 8, offset: 39520)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "has_transp", scope: !3094, file: !888, line: 253, baseType: !926, size: 8, align: 8, offset: 39528)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "uses_tiling", scope: !3094, file: !888, line: 254, baseType: !926, size: 8, align: 8, offset: 39536)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "uses_haar", scope: !3094, file: !888, line: 255, baseType: !926, size: 8, align: 8, offset: 39544)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "uses_fullpel", scope: !3094, file: !888, line: 256, baseType: !926, size: 8, align: 8, offset: 39552)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "decode_pic_hdr", scope: !3094, file: !888, line: 258, baseType: !3137, size: 64, align: 64, offset: 39616)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64, align: 64)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!898, !3140, !1199}
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64, align: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "decode_band_hdr", scope: !3094, file: !888, line: 259, baseType: !3142, size: 64, align: 64, offset: 39680)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 64, align: 64)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{!898, !3140, !2165, !1199}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb_info", scope: !3094, file: !888, line: 260, baseType: !3146, size: 64, align: 64, offset: 39744)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64, align: 64)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!898, !3140, !2165, !2206, !1199}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "switch_buffers", scope: !3094, file: !888, line: 261, baseType: !3150, size: 64, align: 64, offset: 39808)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64, align: 64)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{null, !3140}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "is_nonnull_frame", scope: !3094, file: !888, line: 262, baseType: !3154, size: 64, align: 64, offset: 39872)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64, align: 64)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!898, !3140}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "gop_invalid", scope: !3094, file: !888, line: 264, baseType: !898, size: 32, align: 32, offset: 39936)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "buf_invalid", scope: !3094, file: !888, line: 265, baseType: !1357, size: 128, align: 32, offset: 39968)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "is_indeo4", scope: !3094, file: !888, line: 267, baseType: !898, size: 32, align: 32, offset: 40096)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "p_frame", scope: !3094, file: !888, line: 269, baseType: !1502, size: 64, align: 64, offset: 40128)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "got_p_frame", scope: !3094, file: !888, line: 270, baseType: !898, size: 32, align: 32, offset: 40192)
!3162 = !DILocation(line: 1073, column: 22, scope: !3082)
!3163 = !DILocation(line: 1073, column: 28, scope: !3082)
!3164 = !DILocation(line: 1073, column: 35, scope: !3082)
!3165 = !DILocalVariable(name: "buf", scope: !3082, file: !912, line: 1074, type: !1186)
!3166 = !DILocation(line: 1074, column: 20, scope: !3082)
!3167 = !DILocation(line: 1074, column: 26, scope: !3082)
!3168 = !DILocation(line: 1074, column: 33, scope: !3082)
!3169 = !DILocalVariable(name: "frame", scope: !3082, file: !912, line: 1075, type: !1502)
!3170 = !DILocation(line: 1075, column: 14, scope: !3082)
!3171 = !DILocation(line: 1075, column: 22, scope: !3082)
!3172 = !DILocalVariable(name: "buf_size", scope: !3082, file: !912, line: 1076, type: !898)
!3173 = !DILocation(line: 1076, column: 9, scope: !3082)
!3174 = !DILocation(line: 1076, column: 20, scope: !3082)
!3175 = !DILocation(line: 1076, column: 27, scope: !3082)
!3176 = !DILocalVariable(name: "result", scope: !3082, file: !912, line: 1077, type: !898)
!3177 = !DILocation(line: 1077, column: 9, scope: !3082)
!3178 = !DILocalVariable(name: "p", scope: !3082, file: !912, line: 1077, type: !898)
!3179 = !DILocation(line: 1077, column: 17, scope: !3082)
!3180 = !DILocalVariable(name: "b", scope: !3082, file: !912, line: 1077, type: !898)
!3181 = !DILocation(line: 1077, column: 20, scope: !3082)
!3182 = !DILocation(line: 1079, column: 30, scope: !3082)
!3183 = !DILocation(line: 1079, column: 35, scope: !3082)
!3184 = !DILocation(line: 1079, column: 39, scope: !3082)
!3185 = !DILocation(line: 1079, column: 44, scope: !3082)
!3186 = !DILocation(line: 1079, column: 14, scope: !3082)
!3187 = !DILocation(line: 1079, column: 12, scope: !3082)
!3188 = !DILocation(line: 1080, column: 9, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1080, column: 9)
!3190 = !DILocation(line: 1080, column: 16, scope: !3189)
!3191 = !DILocation(line: 1080, column: 9, scope: !3082)
!3192 = !DILocation(line: 1081, column: 16, scope: !3189)
!3193 = !DILocation(line: 1081, column: 9, scope: !3189)
!3194 = !DILocation(line: 1082, column: 23, scope: !3082)
!3195 = !DILocation(line: 1082, column: 5, scope: !3082)
!3196 = !DILocation(line: 1082, column: 10, scope: !3082)
!3197 = !DILocation(line: 1082, column: 21, scope: !3082)
!3198 = !DILocation(line: 1083, column: 23, scope: !3082)
!3199 = !DILocation(line: 1083, column: 5, scope: !3082)
!3200 = !DILocation(line: 1083, column: 10, scope: !3082)
!3201 = !DILocation(line: 1083, column: 21, scope: !3082)
!3202 = !DILocation(line: 1085, column: 14, scope: !3082)
!3203 = !DILocation(line: 1085, column: 19, scope: !3082)
!3204 = !DILocation(line: 1085, column: 34, scope: !3082)
!3205 = !DILocation(line: 1085, column: 39, scope: !3082)
!3206 = !DILocation(line: 1085, column: 12, scope: !3082)
!3207 = !DILocation(line: 1086, column: 9, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1086, column: 9)
!3209 = !DILocation(line: 1086, column: 9, scope: !3082)
!3210 = !DILocation(line: 1087, column: 16, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3208, file: !912, line: 1086, column: 17)
!3212 = !DILocation(line: 1088, column: 61, scope: !3211)
!3213 = !DILocation(line: 1087, column: 9, scope: !3211)
!3214 = !DILocation(line: 1089, column: 16, scope: !3211)
!3215 = !DILocation(line: 1089, column: 9, scope: !3211)
!3216 = !DILocation(line: 1091, column: 9, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1091, column: 9)
!3218 = !DILocation(line: 1091, column: 14, scope: !3217)
!3219 = !DILocation(line: 1091, column: 9, scope: !3082)
!3220 = !DILocation(line: 1092, column: 9, scope: !3217)
!3221 = !DILocation(line: 1094, column: 9, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1094, column: 9)
!3223 = !DILocation(line: 1094, column: 14, scope: !3222)
!3224 = !DILocation(line: 1094, column: 24, scope: !3222)
!3225 = !DILocation(line: 1094, column: 27, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !3222, file: !912, discriminator: 1)
!3227 = !DILocation(line: 1094, column: 32, scope: !3226)
!3228 = !DILocation(line: 1094, column: 43, scope: !3226)
!3229 = !DILocation(line: 1094, column: 9, scope: !3226)
!3230 = !DILocation(line: 1095, column: 13, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3232, file: !912, line: 1095, column: 13)
!3232 = distinct !DILexicalBlock(scope: !3222, file: !912, line: 1094, column: 72)
!3233 = !DILocation(line: 1095, column: 18, scope: !3231)
!3234 = !DILocation(line: 1095, column: 13, scope: !3232)
!3235 = !DILocation(line: 1096, column: 31, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3231, file: !912, line: 1095, column: 31)
!3237 = !DILocation(line: 1096, column: 37, scope: !3236)
!3238 = !DILocation(line: 1096, column: 42, scope: !3236)
!3239 = !DILocation(line: 1096, column: 13, scope: !3236)
!3240 = !DILocation(line: 1097, column: 14, scope: !3236)
!3241 = !DILocation(line: 1097, column: 24, scope: !3236)
!3242 = !DILocation(line: 1098, column: 13, scope: !3236)
!3243 = !DILocation(line: 1098, column: 18, scope: !3236)
!3244 = !DILocation(line: 1098, column: 30, scope: !3236)
!3245 = !DILocation(line: 1099, column: 9, scope: !3236)
!3246 = !DILocation(line: 1100, column: 14, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3231, file: !912, line: 1099, column: 16)
!3248 = !DILocation(line: 1100, column: 24, scope: !3247)
!3249 = !DILocation(line: 1102, column: 16, scope: !3232)
!3250 = !DILocation(line: 1102, column: 9, scope: !3232)
!3251 = !DILocation(line: 1105, column: 9, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1105, column: 9)
!3253 = !DILocation(line: 1105, column: 14, scope: !3252)
!3254 = !DILocation(line: 1105, column: 24, scope: !3252)
!3255 = !DILocation(line: 1105, column: 9, scope: !3082)
!3256 = !DILocation(line: 1106, column: 39, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3252, file: !912, line: 1105, column: 32)
!3258 = !DILocation(line: 1106, column: 9, scope: !3257)
!3259 = !DILocation(line: 1107, column: 9, scope: !3257)
!3260 = !DILocation(line: 1110, column: 10, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1110, column: 9)
!3262 = !DILocation(line: 1110, column: 15, scope: !3261)
!3263 = !DILocation(line: 1110, column: 25, scope: !3261)
!3264 = !DILocation(line: 1110, column: 9, scope: !3082)
!3265 = !DILocation(line: 1111, column: 16, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3261, file: !912, line: 1110, column: 32)
!3267 = !DILocation(line: 1111, column: 9, scope: !3266)
!3268 = !DILocation(line: 1112, column: 9, scope: !3266)
!3269 = !DILocation(line: 1115, column: 5, scope: !3082)
!3270 = !DILocation(line: 1115, column: 10, scope: !3082)
!3271 = !DILocation(line: 1115, column: 25, scope: !3082)
!3272 = !DILocation(line: 1119, column: 9, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1119, column: 9)
!3274 = !DILocation(line: 1119, column: 14, scope: !3273)
!3275 = !DILocation(line: 1119, column: 31, scope: !3273)
!3276 = !DILocation(line: 1119, column: 9, scope: !3082)
!3277 = !DILocation(line: 1120, column: 26, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3273, file: !912, line: 1119, column: 37)
!3279 = !DILocation(line: 1120, column: 31, scope: !3278)
!3280 = !DILocation(line: 1120, column: 9, scope: !3278)
!3281 = !DILocation(line: 1120, column: 14, scope: !3278)
!3282 = !DILocation(line: 1120, column: 40, scope: !3278)
!3283 = !DILocation(line: 1121, column: 16, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3278, file: !912, line: 1121, column: 9)
!3285 = !DILocation(line: 1121, column: 14, scope: !3284)
!3286 = !DILocation(line: 1121, column: 21, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !3288, file: !912, discriminator: 1)
!3288 = distinct !DILexicalBlock(scope: !3284, file: !912, line: 1121, column: 9)
!3289 = !DILocation(line: 1121, column: 23, scope: !3287)
!3290 = !DILocation(line: 1121, column: 9, scope: !3287)
!3291 = !DILocation(line: 1122, column: 20, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3293, file: !912, line: 1122, column: 13)
!3293 = distinct !DILexicalBlock(scope: !3288, file: !912, line: 1121, column: 33)
!3294 = !DILocation(line: 1122, column: 18, scope: !3292)
!3295 = !DILocation(line: 1122, column: 25, scope: !3296)
!3296 = !DILexicalBlockFile(scope: !3297, file: !912, discriminator: 1)
!3297 = distinct !DILexicalBlock(scope: !3292, file: !912, line: 1122, column: 13)
!3298 = !DILocation(line: 1122, column: 41, scope: !3296)
!3299 = !DILocation(line: 1122, column: 29, scope: !3296)
!3300 = !DILocation(line: 1122, column: 34, scope: !3296)
!3301 = !DILocation(line: 1122, column: 44, scope: !3296)
!3302 = !DILocation(line: 1122, column: 27, scope: !3296)
!3303 = !DILocation(line: 1122, column: 13, scope: !3296)
!3304 = !DILocation(line: 1123, column: 38, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3297, file: !912, line: 1122, column: 60)
!3306 = !DILocation(line: 1123, column: 65, scope: !3305)
!3307 = !DILocation(line: 1123, column: 44, scope: !3305)
!3308 = !DILocation(line: 1123, column: 56, scope: !3305)
!3309 = !DILocation(line: 1123, column: 49, scope: !3305)
!3310 = !DILocation(line: 1123, column: 59, scope: !3305)
!3311 = !DILocation(line: 1123, column: 69, scope: !3305)
!3312 = !DILocation(line: 1123, column: 26, scope: !3305)
!3313 = !DILocation(line: 1123, column: 24, scope: !3305)
!3314 = !DILocation(line: 1124, column: 21, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3305, file: !912, line: 1124, column: 21)
!3316 = !DILocation(line: 1124, column: 28, scope: !3315)
!3317 = !DILocation(line: 1124, column: 21, scope: !3305)
!3318 = !DILocation(line: 1125, column: 28, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3315, file: !912, line: 1124, column: 33)
!3320 = !DILocation(line: 1126, column: 74, scope: !3319)
!3321 = !DILocation(line: 1126, column: 77, scope: !3319)
!3322 = !DILocation(line: 1125, column: 21, scope: !3319)
!3323 = !DILocation(line: 1127, column: 28, scope: !3319)
!3324 = !DILocation(line: 1127, column: 21, scope: !3319)
!3325 = !DILocation(line: 1129, column: 13, scope: !3305)
!3326 = !DILocation(line: 1122, column: 56, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3297, file: !912, discriminator: 2)
!3328 = !DILocation(line: 1122, column: 13, scope: !3327)
!3329 = distinct !{!3329, !3330}
!3330 = !DILocation(line: 1122, column: 13, scope: !3293)
!3331 = !DILocation(line: 1130, column: 9, scope: !3293)
!3332 = !DILocation(line: 1121, column: 29, scope: !3333)
!3333 = !DILexicalBlockFile(scope: !3288, file: !912, discriminator: 2)
!3334 = !DILocation(line: 1121, column: 9, scope: !3333)
!3335 = distinct !{!3335, !3336}
!3336 = !DILocation(line: 1121, column: 9, scope: !3278)
!3337 = !DILocation(line: 1131, column: 26, scope: !3278)
!3338 = !DILocation(line: 1131, column: 31, scope: !3278)
!3339 = !DILocation(line: 1131, column: 9, scope: !3278)
!3340 = !DILocation(line: 1131, column: 14, scope: !3278)
!3341 = !DILocation(line: 1131, column: 40, scope: !3278)
!3342 = !DILocation(line: 1132, column: 5, scope: !3278)
!3343 = !DILocation(line: 1133, column: 13, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !912, line: 1133, column: 13)
!3345 = distinct !DILexicalBlock(scope: !3273, file: !912, line: 1132, column: 12)
!3346 = !DILocation(line: 1133, column: 18, scope: !3344)
!3347 = !DILocation(line: 1133, column: 13, scope: !3345)
!3348 = !DILocation(line: 1134, column: 13, scope: !3344)
!3349 = !DILocation(line: 1136, column: 16, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3345, file: !912, line: 1136, column: 9)
!3351 = !DILocation(line: 1136, column: 14, scope: !3350)
!3352 = !DILocation(line: 1136, column: 21, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !3354, file: !912, discriminator: 1)
!3354 = distinct !DILexicalBlock(scope: !3350, file: !912, line: 1136, column: 9)
!3355 = !DILocation(line: 1136, column: 23, scope: !3353)
!3356 = !DILocation(line: 1136, column: 9, scope: !3353)
!3357 = !DILocation(line: 1137, column: 30, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !912, line: 1137, column: 17)
!3359 = distinct !DILexicalBlock(scope: !3354, file: !912, line: 1136, column: 33)
!3360 = !DILocation(line: 1137, column: 18, scope: !3358)
!3361 = !DILocation(line: 1137, column: 23, scope: !3358)
!3362 = !DILocation(line: 1137, column: 33, scope: !3358)
!3363 = !DILocation(line: 1137, column: 42, scope: !3358)
!3364 = !DILocation(line: 1137, column: 17, scope: !3359)
!3365 = !DILocation(line: 1138, column: 17, scope: !3358)
!3366 = !DILocation(line: 1139, column: 9, scope: !3359)
!3367 = !DILocation(line: 1136, column: 29, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3354, file: !912, discriminator: 2)
!3369 = !DILocation(line: 1136, column: 9, scope: !3368)
!3370 = distinct !{!3370, !3371}
!3371 = !DILocation(line: 1136, column: 9, scope: !3345)
!3372 = !DILocation(line: 1141, column: 26, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1141, column: 9)
!3374 = !DILocation(line: 1141, column: 31, scope: !3373)
!3375 = !DILocation(line: 1141, column: 9, scope: !3373)
!3376 = !DILocation(line: 1141, column: 14, scope: !3373)
!3377 = !DILocation(line: 1141, column: 9, scope: !3082)
!3378 = !DILocation(line: 1142, column: 9, scope: !3373)
!3379 = !DILocation(line: 1146, column: 10, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1146, column: 9)
!3381 = !DILocation(line: 1146, column: 15, scope: !3380)
!3382 = !DILocation(line: 1146, column: 32, scope: !3380)
!3383 = !DILocation(line: 1146, column: 9, scope: !3082)
!3384 = !DILocation(line: 1147, column: 16, scope: !3380)
!3385 = !DILocation(line: 1147, column: 9, scope: !3380)
!3386 = !DILocation(line: 1149, column: 32, scope: !3082)
!3387 = !DILocation(line: 1149, column: 39, scope: !3082)
!3388 = !DILocation(line: 1149, column: 44, scope: !3082)
!3389 = !DILocation(line: 1149, column: 54, scope: !3082)
!3390 = !DILocation(line: 1149, column: 61, scope: !3082)
!3391 = !DILocation(line: 1149, column: 66, scope: !3082)
!3392 = !DILocation(line: 1149, column: 76, scope: !3082)
!3393 = !DILocation(line: 1149, column: 14, scope: !3082)
!3394 = !DILocation(line: 1149, column: 12, scope: !3082)
!3395 = !DILocation(line: 1150, column: 9, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1150, column: 9)
!3397 = !DILocation(line: 1150, column: 16, scope: !3396)
!3398 = !DILocation(line: 1150, column: 9, scope: !3082)
!3399 = !DILocation(line: 1151, column: 16, scope: !3396)
!3400 = !DILocation(line: 1151, column: 9, scope: !3396)
!3401 = !DILocation(line: 1153, column: 33, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1153, column: 9)
!3403 = !DILocation(line: 1153, column: 40, scope: !3402)
!3404 = !DILocation(line: 1153, column: 19, scope: !3402)
!3405 = !DILocation(line: 1153, column: 17, scope: !3402)
!3406 = !DILocation(line: 1153, column: 51, scope: !3402)
!3407 = !DILocation(line: 1153, column: 9, scope: !3082)
!3408 = !DILocation(line: 1154, column: 16, scope: !3402)
!3409 = !DILocation(line: 1154, column: 9, scope: !3402)
!3410 = !DILocation(line: 1156, column: 9, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1156, column: 9)
!3412 = !DILocation(line: 1156, column: 14, scope: !3411)
!3413 = !DILocation(line: 1156, column: 9, scope: !3082)
!3414 = !DILocation(line: 1157, column: 13, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !912, line: 1157, column: 13)
!3416 = distinct !DILexicalBlock(scope: !3411, file: !912, line: 1156, column: 27)
!3417 = !DILocation(line: 1157, column: 18, scope: !3415)
!3418 = !DILocation(line: 1157, column: 13, scope: !3416)
!3419 = !DILocation(line: 1158, column: 36, scope: !3415)
!3420 = !DILocation(line: 1158, column: 41, scope: !3415)
!3421 = !DILocation(line: 1158, column: 52, scope: !3415)
!3422 = !DILocation(line: 1158, column: 59, scope: !3415)
!3423 = !DILocation(line: 1158, column: 68, scope: !3415)
!3424 = !DILocation(line: 1158, column: 75, scope: !3415)
!3425 = !DILocation(line: 1158, column: 13, scope: !3415)
!3426 = !DILocation(line: 1160, column: 34, scope: !3415)
!3427 = !DILocation(line: 1160, column: 39, scope: !3415)
!3428 = !DILocation(line: 1160, column: 50, scope: !3415)
!3429 = !DILocation(line: 1160, column: 57, scope: !3415)
!3430 = !DILocation(line: 1160, column: 66, scope: !3415)
!3431 = !DILocation(line: 1160, column: 73, scope: !3415)
!3432 = !DILocation(line: 1160, column: 13, scope: !3415)
!3433 = !DILocation(line: 1161, column: 5, scope: !3416)
!3434 = !DILocation(line: 1162, column: 27, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3411, file: !912, line: 1161, column: 12)
!3436 = !DILocation(line: 1162, column: 32, scope: !3435)
!3437 = !DILocation(line: 1162, column: 43, scope: !3435)
!3438 = !DILocation(line: 1162, column: 50, scope: !3435)
!3439 = !DILocation(line: 1162, column: 59, scope: !3435)
!3440 = !DILocation(line: 1162, column: 66, scope: !3435)
!3441 = !DILocation(line: 1162, column: 9, scope: !3435)
!3442 = !DILocation(line: 1165, column: 23, scope: !3082)
!3443 = !DILocation(line: 1165, column: 28, scope: !3082)
!3444 = !DILocation(line: 1165, column: 39, scope: !3082)
!3445 = !DILocation(line: 1165, column: 46, scope: !3082)
!3446 = !DILocation(line: 1165, column: 55, scope: !3082)
!3447 = !DILocation(line: 1165, column: 62, scope: !3082)
!3448 = !DILocation(line: 1165, column: 5, scope: !3082)
!3449 = !DILocation(line: 1166, column: 23, scope: !3082)
!3450 = !DILocation(line: 1166, column: 28, scope: !3082)
!3451 = !DILocation(line: 1166, column: 39, scope: !3082)
!3452 = !DILocation(line: 1166, column: 46, scope: !3082)
!3453 = !DILocation(line: 1166, column: 55, scope: !3082)
!3454 = !DILocation(line: 1166, column: 62, scope: !3082)
!3455 = !DILocation(line: 1166, column: 5, scope: !3082)
!3456 = !DILocation(line: 1168, column: 6, scope: !3082)
!3457 = !DILocation(line: 1168, column: 16, scope: !3082)
!3458 = !DILocation(line: 1175, column: 9, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1175, column: 9)
!3460 = !DILocation(line: 1175, column: 14, scope: !3459)
!3461 = !DILocation(line: 1175, column: 24, scope: !3459)
!3462 = !DILocation(line: 1175, column: 27, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3459, file: !912, discriminator: 1)
!3464 = !DILocation(line: 1175, column: 32, scope: !3463)
!3465 = !DILocation(line: 1175, column: 43, scope: !3463)
!3466 = !DILocation(line: 1175, column: 9, scope: !3463)
!3467 = !DILocalVariable(name: "left", scope: !3468, file: !912, line: 1176, type: !898)
!3468 = distinct !DILexicalBlock(scope: !3459, file: !912, line: 1175, column: 68)
!3469 = !DILocation(line: 1176, column: 13, scope: !3468)
!3470 = !DILocation(line: 1179, column: 9, scope: !3468)
!3471 = !DILocation(line: 1179, column: 26, scope: !3472)
!3472 = !DILexicalBlockFile(scope: !3468, file: !912, discriminator: 1)
!3473 = !DILocation(line: 1179, column: 31, scope: !3472)
!3474 = !DILocation(line: 1179, column: 16, scope: !3472)
!3475 = !DILocation(line: 1179, column: 9, scope: !3472)
!3476 = !DILocation(line: 1180, column: 32, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !912, line: 1180, column: 17)
!3478 = distinct !DILexicalBlock(scope: !3468, file: !912, line: 1179, column: 39)
!3479 = !DILocation(line: 1180, column: 37, scope: !3477)
!3480 = !DILocation(line: 1180, column: 17, scope: !3477)
!3481 = !DILocation(line: 1180, column: 41, scope: !3477)
!3482 = !DILocation(line: 1180, column: 17, scope: !3478)
!3483 = !DILocation(line: 1181, column: 17, scope: !3477)
!3484 = !DILocation(line: 1179, column: 9, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !3468, file: !912, discriminator: 2)
!3486 = distinct !{!3486, !3470}
!3487 = !DILocation(line: 1183, column: 32, scope: !3468)
!3488 = !DILocation(line: 1183, column: 37, scope: !3468)
!3489 = !DILocation(line: 1183, column: 16, scope: !3468)
!3490 = !DILocation(line: 1183, column: 41, scope: !3468)
!3491 = !DILocation(line: 1183, column: 14, scope: !3468)
!3492 = !DILocation(line: 1184, column: 25, scope: !3468)
!3493 = !DILocation(line: 1184, column: 30, scope: !3468)
!3494 = !DILocation(line: 1184, column: 39, scope: !3468)
!3495 = !DILocation(line: 1184, column: 37, scope: !3468)
!3496 = !DILocation(line: 1184, column: 9, scope: !3468)
!3497 = !DILocation(line: 1185, column: 28, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3468, file: !912, line: 1185, column: 13)
!3499 = !DILocation(line: 1185, column: 33, scope: !3498)
!3500 = !DILocation(line: 1185, column: 13, scope: !3498)
!3501 = !DILocation(line: 1185, column: 37, scope: !3498)
!3502 = !DILocation(line: 1185, column: 42, scope: !3498)
!3503 = !DILocation(line: 1186, column: 29, scope: !3498)
!3504 = !DILocation(line: 1186, column: 34, scope: !3498)
!3505 = !DILocation(line: 1186, column: 13, scope: !3498)
!3506 = !DILocation(line: 1186, column: 42, scope: !3498)
!3507 = !DILocation(line: 1185, column: 13, scope: !3472)
!3508 = !DILocalVariable(name: "pkt", scope: !3509, file: !912, line: 1187, type: !1371)
!3509 = distinct !DILexicalBlock(scope: !3498, file: !912, line: 1186, column: 54)
!3510 = !DILocation(line: 1187, column: 22, scope: !3509)
!3511 = !DILocation(line: 1188, column: 24, scope: !3509)
!3512 = !DILocation(line: 1188, column: 31, scope: !3509)
!3513 = !DILocation(line: 1188, column: 55, scope: !3509)
!3514 = !DILocation(line: 1188, column: 60, scope: !3509)
!3515 = !DILocation(line: 1188, column: 39, scope: !3509)
!3516 = !DILocation(line: 1188, column: 64, scope: !3509)
!3517 = !DILocation(line: 1188, column: 36, scope: !3509)
!3518 = !DILocation(line: 1188, column: 17, scope: !3509)
!3519 = !DILocation(line: 1188, column: 22, scope: !3509)
!3520 = !DILocation(line: 1189, column: 39, scope: !3509)
!3521 = !DILocation(line: 1189, column: 44, scope: !3509)
!3522 = !DILocation(line: 1189, column: 24, scope: !3509)
!3523 = !DILocation(line: 1189, column: 48, scope: !3509)
!3524 = !DILocation(line: 1189, column: 17, scope: !3509)
!3525 = !DILocation(line: 1189, column: 22, scope: !3509)
!3526 = !DILocation(line: 1190, column: 33, scope: !3509)
!3527 = !DILocation(line: 1190, column: 40, scope: !3509)
!3528 = !DILocation(line: 1190, column: 45, scope: !3509)
!3529 = !DILocation(line: 1190, column: 55, scope: !3509)
!3530 = !DILocation(line: 1190, column: 60, scope: !3509)
!3531 = !DILocation(line: 1190, column: 13, scope: !3509)
!3532 = !DILocation(line: 1191, column: 9, scope: !3509)
!3533 = !DILocation(line: 1192, column: 5, scope: !3468)
!3534 = !DILocation(line: 1194, column: 9, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3082, file: !912, line: 1194, column: 9)
!3536 = !DILocation(line: 1194, column: 14, scope: !3535)
!3537 = !DILocation(line: 1194, column: 9, scope: !3082)
!3538 = !DILocation(line: 1195, column: 13, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !912, line: 1195, column: 13)
!3540 = distinct !DILexicalBlock(scope: !3535, file: !912, line: 1194, column: 32)
!3541 = !DILocation(line: 1195, column: 18, scope: !3539)
!3542 = !DILocation(line: 1195, column: 13, scope: !3540)
!3543 = !DILocation(line: 1196, column: 20, scope: !3539)
!3544 = !DILocation(line: 1196, column: 13, scope: !3539)
!3545 = !DILocation(line: 1197, column: 13, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3540, file: !912, line: 1197, column: 13)
!3547 = !DILocation(line: 1197, column: 18, scope: !3546)
!3548 = !DILocation(line: 1197, column: 13, scope: !3540)
!3549 = !DILocation(line: 1198, column: 20, scope: !3546)
!3550 = !DILocation(line: 1198, column: 13, scope: !3546)
!3551 = !DILocation(line: 1199, column: 13, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3540, file: !912, line: 1199, column: 13)
!3553 = !DILocation(line: 1199, column: 18, scope: !3552)
!3554 = !DILocation(line: 1199, column: 13, scope: !3540)
!3555 = !DILocation(line: 1200, column: 20, scope: !3552)
!3556 = !DILocation(line: 1200, column: 13, scope: !3552)
!3557 = !DILocation(line: 1201, column: 13, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3540, file: !912, line: 1201, column: 13)
!3559 = !DILocation(line: 1201, column: 18, scope: !3558)
!3560 = !DILocation(line: 1201, column: 13, scope: !3540)
!3561 = !DILocation(line: 1202, column: 20, scope: !3558)
!3562 = !DILocation(line: 1202, column: 13, scope: !3558)
!3563 = !DILocation(line: 1203, column: 13, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3540, file: !912, line: 1203, column: 13)
!3565 = !DILocation(line: 1203, column: 18, scope: !3564)
!3566 = !DILocation(line: 1203, column: 13, scope: !3540)
!3567 = !DILocation(line: 1204, column: 20, scope: !3564)
!3568 = !DILocation(line: 1204, column: 13, scope: !3564)
!3569 = !DILocation(line: 1205, column: 13, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3540, file: !912, line: 1205, column: 13)
!3571 = !DILocation(line: 1205, column: 18, scope: !3570)
!3572 = !DILocation(line: 1205, column: 13, scope: !3540)
!3573 = !DILocation(line: 1206, column: 20, scope: !3570)
!3574 = !DILocation(line: 1206, column: 13, scope: !3570)
!3575 = !DILocation(line: 1207, column: 9, scope: !3540)
!3576 = !DILocation(line: 1207, column: 14, scope: !3540)
!3577 = !DILocation(line: 1207, column: 31, scope: !3540)
!3578 = !DILocation(line: 1208, column: 5, scope: !3540)
!3579 = !DILocation(line: 1210, column: 12, scope: !3082)
!3580 = !DILocation(line: 1210, column: 5, scope: !3082)
!3581 = !DILocation(line: 1211, column: 1, scope: !3082)
!3582 = distinct !DISubprogram(name: "init_get_bits8", scope: !1182, file: !1182, line: 650, type: !3583, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!898, !1180, !1186, !898}
!3585 = !DILocalVariable(name: "s", arg: 1, scope: !3582, file: !1182, line: 650, type: !1180)
!3586 = !DILocation(line: 650, column: 49, scope: !3582)
!3587 = !DILocalVariable(name: "buffer", arg: 2, scope: !3582, file: !1182, line: 650, type: !1186)
!3588 = !DILocation(line: 650, column: 67, scope: !3582)
!3589 = !DILocalVariable(name: "byte_size", arg: 3, scope: !3582, file: !1182, line: 651, type: !898)
!3590 = !DILocation(line: 651, column: 38, scope: !3582)
!3591 = !DILocation(line: 653, column: 9, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3582, file: !1182, line: 653, column: 9)
!3593 = !DILocation(line: 653, column: 19, scope: !3592)
!3594 = !DILocation(line: 653, column: 36, scope: !3592)
!3595 = !DILocation(line: 653, column: 39, scope: !3596)
!3596 = !DILexicalBlockFile(scope: !3592, file: !1182, discriminator: 1)
!3597 = !DILocation(line: 653, column: 49, scope: !3596)
!3598 = !DILocation(line: 653, column: 9, scope: !3596)
!3599 = !DILocation(line: 654, column: 19, scope: !3592)
!3600 = !DILocation(line: 654, column: 9, scope: !3592)
!3601 = !DILocation(line: 655, column: 26, scope: !3582)
!3602 = !DILocation(line: 655, column: 29, scope: !3582)
!3603 = !DILocation(line: 655, column: 37, scope: !3582)
!3604 = !DILocation(line: 655, column: 47, scope: !3582)
!3605 = !DILocation(line: 655, column: 12, scope: !3582)
!3606 = !DILocation(line: 655, column: 5, scope: !3582)
!3607 = distinct !DISubprogram(name: "decode_band", scope: !912, file: !912, line: 947, type: !3608, isLocal: true, isDefinition: true, scopeLine: 949, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!898, !3092, !2165, !1199}
!3610 = !DILocalVariable(name: "ctx", arg: 1, scope: !3607, file: !912, line: 947, type: !3092)
!3611 = !DILocation(line: 947, column: 41, scope: !3607)
!3612 = !DILocalVariable(name: "band", arg: 2, scope: !3607, file: !912, line: 948, type: !2165)
!3613 = !DILocation(line: 948, column: 37, scope: !3607)
!3614 = !DILocalVariable(name: "avctx", arg: 3, scope: !3607, file: !912, line: 948, type: !1199)
!3615 = !DILocation(line: 948, column: 59, scope: !3607)
!3616 = !DILocalVariable(name: "result", scope: !3607, file: !912, line: 950, type: !898)
!3617 = !DILocation(line: 950, column: 9, scope: !3607)
!3618 = !DILocalVariable(name: "i", scope: !3607, file: !912, line: 950, type: !898)
!3619 = !DILocation(line: 950, column: 17, scope: !3607)
!3620 = !DILocalVariable(name: "t", scope: !3607, file: !912, line: 950, type: !898)
!3621 = !DILocation(line: 950, column: 20, scope: !3607)
!3622 = !DILocalVariable(name: "idx1", scope: !3607, file: !912, line: 950, type: !898)
!3623 = !DILocation(line: 950, column: 23, scope: !3607)
!3624 = !DILocalVariable(name: "idx2", scope: !3607, file: !912, line: 950, type: !898)
!3625 = !DILocation(line: 950, column: 29, scope: !3607)
!3626 = !DILocalVariable(name: "pos", scope: !3607, file: !912, line: 950, type: !898)
!3627 = !DILocation(line: 950, column: 35, scope: !3607)
!3628 = !DILocalVariable(name: "tile", scope: !3607, file: !912, line: 951, type: !2206)
!3629 = !DILocation(line: 951, column: 14, scope: !3607)
!3630 = !DILocation(line: 953, column: 28, scope: !3607)
!3631 = !DILocation(line: 953, column: 33, scope: !3607)
!3632 = !DILocation(line: 953, column: 17, scope: !3607)
!3633 = !DILocation(line: 953, column: 23, scope: !3607)
!3634 = !DILocation(line: 953, column: 5, scope: !3607)
!3635 = !DILocation(line: 953, column: 11, scope: !3607)
!3636 = !DILocation(line: 953, column: 15, scope: !3607)
!3637 = !DILocation(line: 954, column: 10, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3607, file: !912, line: 954, column: 9)
!3639 = !DILocation(line: 954, column: 16, scope: !3638)
!3640 = !DILocation(line: 954, column: 9, scope: !3607)
!3641 = !DILocation(line: 955, column: 16, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3638, file: !912, line: 954, column: 21)
!3643 = !DILocation(line: 955, column: 9, scope: !3642)
!3644 = !DILocation(line: 956, column: 9, scope: !3642)
!3645 = !DILocation(line: 958, column: 9, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3607, file: !912, line: 958, column: 9)
!3647 = !DILocation(line: 958, column: 14, scope: !3646)
!3648 = !DILocation(line: 958, column: 24, scope: !3646)
!3649 = !DILocation(line: 958, column: 27, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !3646, file: !912, discriminator: 1)
!3651 = !DILocation(line: 958, column: 32, scope: !3650)
!3652 = !DILocation(line: 958, column: 43, scope: !3650)
!3653 = !DILocation(line: 958, column: 9, scope: !3650)
!3654 = !DILocation(line: 959, column: 36, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3646, file: !912, line: 958, column: 68)
!3656 = !DILocation(line: 959, column: 41, scope: !3655)
!3657 = !DILocation(line: 959, column: 25, scope: !3655)
!3658 = !DILocation(line: 959, column: 31, scope: !3655)
!3659 = !DILocation(line: 959, column: 9, scope: !3655)
!3660 = !DILocation(line: 959, column: 15, scope: !3655)
!3661 = !DILocation(line: 959, column: 23, scope: !3655)
!3662 = !DILocation(line: 960, column: 38, scope: !3655)
!3663 = !DILocation(line: 960, column: 43, scope: !3655)
!3664 = !DILocation(line: 960, column: 27, scope: !3655)
!3665 = !DILocation(line: 960, column: 33, scope: !3655)
!3666 = !DILocation(line: 960, column: 9, scope: !3655)
!3667 = !DILocation(line: 960, column: 15, scope: !3655)
!3668 = !DILocation(line: 960, column: 25, scope: !3655)
!3669 = !DILocation(line: 961, column: 5, scope: !3655)
!3670 = !DILocation(line: 962, column: 36, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3646, file: !912, line: 961, column: 12)
!3672 = !DILocation(line: 962, column: 41, scope: !3671)
!3673 = !DILocation(line: 962, column: 25, scope: !3671)
!3674 = !DILocation(line: 962, column: 31, scope: !3671)
!3675 = !DILocation(line: 962, column: 9, scope: !3671)
!3676 = !DILocation(line: 962, column: 15, scope: !3671)
!3677 = !DILocation(line: 962, column: 23, scope: !3671)
!3678 = !DILocation(line: 963, column: 9, scope: !3671)
!3679 = !DILocation(line: 963, column: 15, scope: !3671)
!3680 = !DILocation(line: 963, column: 25, scope: !3671)
!3681 = !DILocation(line: 965, column: 22, scope: !3607)
!3682 = !DILocation(line: 965, column: 27, scope: !3607)
!3683 = !DILocation(line: 965, column: 57, scope: !3607)
!3684 = !DILocation(line: 965, column: 62, scope: !3607)
!3685 = !DILocation(line: 965, column: 41, scope: !3607)
!3686 = !DILocation(line: 965, column: 66, scope: !3607)
!3687 = !DILocation(line: 965, column: 38, scope: !3607)
!3688 = !DILocation(line: 965, column: 5, scope: !3607)
!3689 = !DILocation(line: 965, column: 11, scope: !3607)
!3690 = !DILocation(line: 965, column: 20, scope: !3607)
!3691 = !DILocation(line: 967, column: 14, scope: !3607)
!3692 = !DILocation(line: 967, column: 19, scope: !3607)
!3693 = !DILocation(line: 967, column: 35, scope: !3607)
!3694 = !DILocation(line: 967, column: 40, scope: !3607)
!3695 = !DILocation(line: 967, column: 46, scope: !3607)
!3696 = !DILocation(line: 967, column: 12, scope: !3607)
!3697 = !DILocation(line: 968, column: 9, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3607, file: !912, line: 968, column: 9)
!3699 = !DILocation(line: 968, column: 9, scope: !3607)
!3700 = !DILocation(line: 969, column: 16, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !912, line: 968, column: 17)
!3702 = !DILocation(line: 970, column: 16, scope: !3701)
!3703 = !DILocation(line: 969, column: 9, scope: !3701)
!3704 = !DILocation(line: 971, column: 16, scope: !3701)
!3705 = !DILocation(line: 971, column: 9, scope: !3701)
!3706 = !DILocation(line: 974, column: 9, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3607, file: !912, line: 974, column: 9)
!3708 = !DILocation(line: 974, column: 15, scope: !3707)
!3709 = !DILocation(line: 974, column: 9, scope: !3607)
!3710 = !DILocation(line: 975, column: 16, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3707, file: !912, line: 974, column: 25)
!3712 = !DILocation(line: 975, column: 9, scope: !3711)
!3713 = !DILocation(line: 976, column: 9, scope: !3711)
!3714 = !DILocation(line: 979, column: 37, scope: !3607)
!3715 = !DILocation(line: 979, column: 43, scope: !3607)
!3716 = !DILocation(line: 979, column: 21, scope: !3607)
!3717 = !DILocation(line: 979, column: 26, scope: !3607)
!3718 = !DILocation(line: 979, column: 5, scope: !3607)
!3719 = !DILocation(line: 979, column: 11, scope: !3607)
!3720 = !DILocation(line: 979, column: 18, scope: !3607)
!3721 = !DILocation(line: 982, column: 12, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3607, file: !912, line: 982, column: 5)
!3723 = !DILocation(line: 982, column: 10, scope: !3722)
!3724 = !DILocation(line: 982, column: 17, scope: !3725)
!3725 = !DILexicalBlockFile(scope: !3726, file: !912, discriminator: 1)
!3726 = distinct !DILexicalBlock(scope: !3722, file: !912, line: 982, column: 5)
!3727 = !DILocation(line: 982, column: 21, scope: !3725)
!3728 = !DILocation(line: 982, column: 27, scope: !3725)
!3729 = !DILocation(line: 982, column: 19, scope: !3725)
!3730 = !DILocation(line: 982, column: 5, scope: !3725)
!3731 = !DILocation(line: 983, column: 27, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3726, file: !912, line: 982, column: 42)
!3733 = !DILocation(line: 983, column: 29, scope: !3732)
!3734 = !DILocation(line: 983, column: 16, scope: !3732)
!3735 = !DILocation(line: 983, column: 22, scope: !3732)
!3736 = !DILocation(line: 983, column: 14, scope: !3732)
!3737 = !DILocation(line: 984, column: 27, scope: !3732)
!3738 = !DILocation(line: 984, column: 29, scope: !3732)
!3739 = !DILocation(line: 984, column: 33, scope: !3732)
!3740 = !DILocation(line: 984, column: 16, scope: !3732)
!3741 = !DILocation(line: 984, column: 22, scope: !3732)
!3742 = !DILocation(line: 984, column: 14, scope: !3732)
!3743 = !DILocation(line: 985, column: 9, scope: !3732)
!3744 = distinct !{!3744, !3743}
!3745 = !DILocalVariable(name: "SWAP_tmp", scope: !3746, file: !912, line: 985, type: !926)
!3746 = distinct !DILexicalBlock(scope: !3732, file: !912, line: 985, column: 11)
!3747 = !DILocation(line: 985, column: 20, scope: !3746)
!3748 = !DILocation(line: 985, column: 51, scope: !3749)
!3749 = !DILexicalBlockFile(scope: !3746, file: !912, discriminator: 1)
!3750 = !DILocation(line: 985, column: 30, scope: !3749)
!3751 = !DILocation(line: 985, column: 36, scope: !3749)
!3752 = !DILocation(line: 985, column: 44, scope: !3749)
!3753 = !DILocation(line: 985, column: 20, scope: !3749)
!3754 = !DILocation(line: 985, column: 107, scope: !3749)
!3755 = !DILocation(line: 985, column: 86, scope: !3749)
!3756 = !DILocation(line: 985, column: 92, scope: !3749)
!3757 = !DILocation(line: 985, column: 100, scope: !3749)
!3758 = !DILocation(line: 985, column: 79, scope: !3749)
!3759 = !DILocation(line: 985, column: 58, scope: !3749)
!3760 = !DILocation(line: 985, column: 64, scope: !3749)
!3761 = !DILocation(line: 985, column: 72, scope: !3749)
!3762 = !DILocation(line: 985, column: 84, scope: !3749)
!3763 = !DILocation(line: 985, column: 142, scope: !3749)
!3764 = !DILocation(line: 985, column: 135, scope: !3749)
!3765 = !DILocation(line: 985, column: 114, scope: !3749)
!3766 = !DILocation(line: 985, column: 120, scope: !3749)
!3767 = !DILocation(line: 985, column: 128, scope: !3749)
!3768 = !DILocation(line: 985, column: 140, scope: !3749)
!3769 = !DILocation(line: 985, column: 151, scope: !3749)
!3770 = !DILocation(line: 986, column: 9, scope: !3732)
!3771 = distinct !{!3771, !3770}
!3772 = !DILocalVariable(name: "SWAP_tmp", scope: !3773, file: !912, line: 986, type: !917)
!3773 = distinct !DILexicalBlock(scope: !3732, file: !912, line: 986, column: 11)
!3774 = !DILocation(line: 986, column: 20, scope: !3773)
!3775 = !DILocation(line: 986, column: 51, scope: !3776)
!3776 = !DILexicalBlockFile(scope: !3773, file: !912, discriminator: 1)
!3777 = !DILocation(line: 986, column: 30, scope: !3776)
!3778 = !DILocation(line: 986, column: 36, scope: !3776)
!3779 = !DILocation(line: 986, column: 44, scope: !3776)
!3780 = !DILocation(line: 986, column: 20, scope: !3776)
!3781 = !DILocation(line: 986, column: 107, scope: !3776)
!3782 = !DILocation(line: 986, column: 86, scope: !3776)
!3783 = !DILocation(line: 986, column: 92, scope: !3776)
!3784 = !DILocation(line: 986, column: 100, scope: !3776)
!3785 = !DILocation(line: 986, column: 79, scope: !3776)
!3786 = !DILocation(line: 986, column: 58, scope: !3776)
!3787 = !DILocation(line: 986, column: 64, scope: !3776)
!3788 = !DILocation(line: 986, column: 72, scope: !3776)
!3789 = !DILocation(line: 986, column: 84, scope: !3776)
!3790 = !DILocation(line: 986, column: 142, scope: !3776)
!3791 = !DILocation(line: 986, column: 135, scope: !3776)
!3792 = !DILocation(line: 986, column: 114, scope: !3776)
!3793 = !DILocation(line: 986, column: 120, scope: !3776)
!3794 = !DILocation(line: 986, column: 128, scope: !3776)
!3795 = !DILocation(line: 986, column: 140, scope: !3776)
!3796 = !DILocation(line: 986, column: 151, scope: !3776)
!3797 = !DILocation(line: 987, column: 13, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3732, file: !912, line: 987, column: 13)
!3799 = !DILocation(line: 987, column: 21, scope: !3798)
!3800 = !DILocation(line: 987, column: 27, scope: !3798)
!3801 = !DILocation(line: 987, column: 35, scope: !3798)
!3802 = !DILocation(line: 987, column: 18, scope: !3798)
!3803 = !DILocation(line: 987, column: 43, scope: !3798)
!3804 = !DILocation(line: 987, column: 46, scope: !3805)
!3805 = !DILexicalBlockFile(scope: !3798, file: !912, discriminator: 1)
!3806 = !DILocation(line: 987, column: 54, scope: !3805)
!3807 = !DILocation(line: 987, column: 60, scope: !3805)
!3808 = !DILocation(line: 987, column: 68, scope: !3805)
!3809 = !DILocation(line: 987, column: 51, scope: !3805)
!3810 = !DILocation(line: 987, column: 13, scope: !3805)
!3811 = !DILocation(line: 988, column: 38, scope: !3798)
!3812 = !DILocation(line: 988, column: 45, scope: !3798)
!3813 = !DILocation(line: 988, column: 43, scope: !3798)
!3814 = !DILocation(line: 988, column: 13, scope: !3798)
!3815 = !DILocation(line: 988, column: 19, scope: !3798)
!3816 = !DILocation(line: 988, column: 27, scope: !3798)
!3817 = !DILocation(line: 988, column: 35, scope: !3798)
!3818 = !DILocation(line: 989, column: 13, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3732, file: !912, line: 989, column: 13)
!3820 = !DILocation(line: 989, column: 21, scope: !3819)
!3821 = !DILocation(line: 989, column: 27, scope: !3819)
!3822 = !DILocation(line: 989, column: 35, scope: !3819)
!3823 = !DILocation(line: 989, column: 18, scope: !3819)
!3824 = !DILocation(line: 989, column: 43, scope: !3819)
!3825 = !DILocation(line: 989, column: 46, scope: !3826)
!3826 = !DILexicalBlockFile(scope: !3819, file: !912, discriminator: 1)
!3827 = !DILocation(line: 989, column: 54, scope: !3826)
!3828 = !DILocation(line: 989, column: 60, scope: !3826)
!3829 = !DILocation(line: 989, column: 68, scope: !3826)
!3830 = !DILocation(line: 989, column: 51, scope: !3826)
!3831 = !DILocation(line: 989, column: 13, scope: !3826)
!3832 = !DILocation(line: 990, column: 38, scope: !3819)
!3833 = !DILocation(line: 990, column: 45, scope: !3819)
!3834 = !DILocation(line: 990, column: 43, scope: !3819)
!3835 = !DILocation(line: 990, column: 13, scope: !3819)
!3836 = !DILocation(line: 990, column: 19, scope: !3819)
!3837 = !DILocation(line: 990, column: 27, scope: !3819)
!3838 = !DILocation(line: 990, column: 35, scope: !3819)
!3839 = !DILocation(line: 991, column: 5, scope: !3732)
!3840 = !DILocation(line: 982, column: 38, scope: !3841)
!3841 = !DILexicalBlockFile(scope: !3726, file: !912, discriminator: 2)
!3842 = !DILocation(line: 982, column: 5, scope: !3841)
!3843 = distinct !{!3843, !3844}
!3844 = !DILocation(line: 982, column: 5, scope: !3607)
!3845 = !DILocation(line: 993, column: 27, scope: !3607)
!3846 = !DILocation(line: 993, column: 32, scope: !3607)
!3847 = !DILocation(line: 993, column: 11, scope: !3607)
!3848 = !DILocation(line: 993, column: 9, scope: !3607)
!3849 = !DILocation(line: 995, column: 12, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3607, file: !912, line: 995, column: 5)
!3851 = !DILocation(line: 995, column: 10, scope: !3850)
!3852 = !DILocation(line: 995, column: 17, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !3854, file: !912, discriminator: 1)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !912, line: 995, column: 5)
!3855 = !DILocation(line: 995, column: 21, scope: !3853)
!3856 = !DILocation(line: 995, column: 27, scope: !3853)
!3857 = !DILocation(line: 995, column: 19, scope: !3853)
!3858 = !DILocation(line: 995, column: 5, scope: !3853)
!3859 = !DILocation(line: 996, column: 29, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3854, file: !912, line: 995, column: 43)
!3861 = !DILocation(line: 996, column: 17, scope: !3860)
!3862 = !DILocation(line: 996, column: 23, scope: !3860)
!3863 = !DILocation(line: 996, column: 14, scope: !3860)
!3864 = !DILocation(line: 998, column: 13, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3860, file: !912, line: 998, column: 13)
!3866 = !DILocation(line: 998, column: 19, scope: !3865)
!3867 = !DILocation(line: 998, column: 30, scope: !3865)
!3868 = !DILocation(line: 998, column: 36, scope: !3865)
!3869 = !DILocation(line: 998, column: 27, scope: !3865)
!3870 = !DILocation(line: 998, column: 13, scope: !3860)
!3871 = !DILocation(line: 999, column: 20, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3865, file: !912, line: 998, column: 45)
!3873 = !DILocation(line: 1000, column: 20, scope: !3872)
!3874 = !DILocation(line: 1000, column: 26, scope: !3872)
!3875 = !DILocation(line: 1000, column: 35, scope: !3872)
!3876 = !DILocation(line: 1000, column: 41, scope: !3872)
!3877 = !DILocation(line: 999, column: 13, scope: !3872)
!3878 = !DILocation(line: 1001, column: 13, scope: !3872)
!3879 = !DILocation(line: 1003, column: 37, scope: !3860)
!3880 = !DILocation(line: 1003, column: 42, scope: !3860)
!3881 = !DILocation(line: 1003, column: 26, scope: !3860)
!3882 = !DILocation(line: 1003, column: 9, scope: !3860)
!3883 = !DILocation(line: 1003, column: 15, scope: !3860)
!3884 = !DILocation(line: 1003, column: 24, scope: !3860)
!3885 = !DILocation(line: 1004, column: 13, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3860, file: !912, line: 1004, column: 13)
!3887 = !DILocation(line: 1004, column: 19, scope: !3886)
!3888 = !DILocation(line: 1004, column: 13, scope: !3860)
!3889 = !DILocation(line: 1005, column: 45, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !912, line: 1004, column: 29)
!3891 = !DILocation(line: 1005, column: 52, scope: !3890)
!3892 = !DILocation(line: 1005, column: 58, scope: !3890)
!3893 = !DILocation(line: 1006, column: 40, scope: !3890)
!3894 = !DILocation(line: 1006, column: 45, scope: !3890)
!3895 = !DILocation(line: 1006, column: 55, scope: !3890)
!3896 = !DILocation(line: 1006, column: 64, scope: !3890)
!3897 = !DILocation(line: 1006, column: 72, scope: !3890)
!3898 = !DILocation(line: 1006, column: 81, scope: !3890)
!3899 = !DILocation(line: 1006, column: 87, scope: !3890)
!3900 = !DILocation(line: 1006, column: 95, scope: !3890)
!3901 = !DILocation(line: 1006, column: 78, scope: !3890)
!3902 = !DILocation(line: 1005, column: 22, scope: !3890)
!3903 = !DILocation(line: 1005, column: 20, scope: !3890)
!3904 = !DILocation(line: 1007, column: 17, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3890, file: !912, line: 1007, column: 17)
!3906 = !DILocation(line: 1007, column: 24, scope: !3905)
!3907 = !DILocation(line: 1007, column: 17, scope: !3890)
!3908 = !DILocation(line: 1008, column: 17, scope: !3905)
!3909 = !DILocation(line: 1009, column: 13, scope: !3890)
!3910 = distinct !{!3910, !3909}
!3911 = !DILocation(line: 1009, column: 73, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3913, file: !912, discriminator: 1)
!3913 = distinct !DILexicalBlock(scope: !3890, file: !912, line: 1009, column: 16)
!3914 = !DILocation(line: 1010, column: 9, scope: !3890)
!3915 = !DILocation(line: 1011, column: 55, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3886, file: !912, line: 1010, column: 16)
!3917 = !DILocation(line: 1011, column: 60, scope: !3916)
!3918 = !DILocation(line: 1011, column: 31, scope: !3916)
!3919 = !DILocation(line: 1011, column: 13, scope: !3916)
!3920 = !DILocation(line: 1011, column: 19, scope: !3916)
!3921 = !DILocation(line: 1011, column: 29, scope: !3916)
!3922 = !DILocation(line: 1012, column: 18, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3916, file: !912, line: 1012, column: 17)
!3924 = !DILocation(line: 1012, column: 24, scope: !3923)
!3925 = !DILocation(line: 1012, column: 17, scope: !3916)
!3926 = !DILocation(line: 1013, column: 24, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !912, line: 1012, column: 35)
!3928 = !DILocation(line: 1013, column: 17, scope: !3927)
!3929 = !DILocation(line: 1014, column: 24, scope: !3927)
!3930 = !DILocation(line: 1015, column: 17, scope: !3927)
!3931 = !DILocation(line: 1018, column: 22, scope: !3916)
!3932 = !DILocation(line: 1018, column: 27, scope: !3916)
!3933 = !DILocation(line: 1018, column: 42, scope: !3916)
!3934 = !DILocation(line: 1018, column: 47, scope: !3916)
!3935 = !DILocation(line: 1018, column: 53, scope: !3916)
!3936 = !DILocation(line: 1018, column: 59, scope: !3916)
!3937 = !DILocation(line: 1018, column: 20, scope: !3916)
!3938 = !DILocation(line: 1019, column: 17, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3916, file: !912, line: 1019, column: 17)
!3940 = !DILocation(line: 1019, column: 24, scope: !3939)
!3941 = !DILocation(line: 1019, column: 17, scope: !3916)
!3942 = !DILocation(line: 1020, column: 17, scope: !3939)
!3943 = !DILocation(line: 1022, column: 41, scope: !3916)
!3944 = !DILocation(line: 1022, column: 46, scope: !3916)
!3945 = !DILocation(line: 1022, column: 50, scope: !3916)
!3946 = !DILocation(line: 1022, column: 56, scope: !3916)
!3947 = !DILocation(line: 1022, column: 62, scope: !3916)
!3948 = !DILocation(line: 1022, column: 22, scope: !3916)
!3949 = !DILocation(line: 1022, column: 20, scope: !3916)
!3950 = !DILocation(line: 1023, column: 17, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3916, file: !912, line: 1023, column: 17)
!3952 = !DILocation(line: 1023, column: 24, scope: !3951)
!3953 = !DILocation(line: 1023, column: 17, scope: !3916)
!3954 = !DILocation(line: 1024, column: 24, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3951, file: !912, line: 1023, column: 29)
!3956 = !DILocation(line: 1024, column: 17, scope: !3955)
!3957 = !DILocation(line: 1026, column: 17, scope: !3955)
!3958 = !DILocation(line: 1029, column: 35, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3916, file: !912, line: 1029, column: 17)
!3960 = !DILocation(line: 1029, column: 40, scope: !3959)
!3961 = !DILocation(line: 1029, column: 19, scope: !3959)
!3962 = !DILocation(line: 1029, column: 46, scope: !3959)
!3963 = !DILocation(line: 1029, column: 44, scope: !3959)
!3964 = !DILocation(line: 1029, column: 51, scope: !3959)
!3965 = !DILocation(line: 1029, column: 60, scope: !3959)
!3966 = !DILocation(line: 1029, column: 66, scope: !3959)
!3967 = !DILocation(line: 1029, column: 57, scope: !3959)
!3968 = !DILocation(line: 1029, column: 17, scope: !3916)
!3969 = !DILocation(line: 1030, column: 24, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3959, file: !912, line: 1029, column: 77)
!3971 = !DILocation(line: 1030, column: 17, scope: !3970)
!3972 = !DILocation(line: 1032, column: 24, scope: !3970)
!3973 = !DILocation(line: 1033, column: 17, scope: !3970)
!3974 = !DILocation(line: 1036, column: 20, scope: !3916)
!3975 = !DILocation(line: 1036, column: 26, scope: !3916)
!3976 = !DILocation(line: 1036, column: 36, scope: !3916)
!3977 = !DILocation(line: 1036, column: 17, scope: !3916)
!3978 = !DILocation(line: 1038, column: 5, scope: !3860)
!3979 = !DILocation(line: 995, column: 39, scope: !3980)
!3980 = !DILexicalBlockFile(scope: !3854, file: !912, discriminator: 2)
!3981 = !DILocation(line: 995, column: 5, scope: !3980)
!3982 = distinct !{!3982, !3983}
!3983 = !DILocation(line: 995, column: 5, scope: !3607)
!3984 = !DILocation(line: 1042, column: 14, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3607, file: !912, line: 1042, column: 5)
!3986 = !DILocation(line: 1042, column: 20, scope: !3985)
!3987 = !DILocation(line: 1042, column: 28, scope: !3985)
!3988 = !DILocation(line: 1042, column: 12, scope: !3985)
!3989 = !DILocation(line: 1042, column: 10, scope: !3985)
!3990 = !DILocation(line: 1042, column: 32, scope: !3991)
!3991 = !DILexicalBlockFile(scope: !3992, file: !912, discriminator: 1)
!3992 = distinct !DILexicalBlock(scope: !3985, file: !912, line: 1042, column: 5)
!3993 = !DILocation(line: 1042, column: 34, scope: !3991)
!3994 = !DILocation(line: 1042, column: 5, scope: !3991)
!3995 = !DILocation(line: 1043, column: 27, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !912, line: 1042, column: 45)
!3997 = !DILocation(line: 1043, column: 28, scope: !3996)
!3998 = !DILocation(line: 1043, column: 16, scope: !3996)
!3999 = !DILocation(line: 1043, column: 22, scope: !3996)
!4000 = !DILocation(line: 1043, column: 14, scope: !3996)
!4001 = !DILocation(line: 1044, column: 27, scope: !3996)
!4002 = !DILocation(line: 1044, column: 28, scope: !3996)
!4003 = !DILocation(line: 1044, column: 30, scope: !3996)
!4004 = !DILocation(line: 1044, column: 16, scope: !3996)
!4005 = !DILocation(line: 1044, column: 22, scope: !3996)
!4006 = !DILocation(line: 1044, column: 14, scope: !3996)
!4007 = !DILocation(line: 1045, column: 9, scope: !3996)
!4008 = distinct !{!4008, !4007}
!4009 = !DILocalVariable(name: "SWAP_tmp", scope: !4010, file: !912, line: 1045, type: !926)
!4010 = distinct !DILexicalBlock(scope: !3996, file: !912, line: 1045, column: 11)
!4011 = !DILocation(line: 1045, column: 20, scope: !4010)
!4012 = !DILocation(line: 1045, column: 51, scope: !4013)
!4013 = !DILexicalBlockFile(scope: !4010, file: !912, discriminator: 1)
!4014 = !DILocation(line: 1045, column: 30, scope: !4013)
!4015 = !DILocation(line: 1045, column: 36, scope: !4013)
!4016 = !DILocation(line: 1045, column: 44, scope: !4013)
!4017 = !DILocation(line: 1045, column: 20, scope: !4013)
!4018 = !DILocation(line: 1045, column: 107, scope: !4013)
!4019 = !DILocation(line: 1045, column: 86, scope: !4013)
!4020 = !DILocation(line: 1045, column: 92, scope: !4013)
!4021 = !DILocation(line: 1045, column: 100, scope: !4013)
!4022 = !DILocation(line: 1045, column: 79, scope: !4013)
!4023 = !DILocation(line: 1045, column: 58, scope: !4013)
!4024 = !DILocation(line: 1045, column: 64, scope: !4013)
!4025 = !DILocation(line: 1045, column: 72, scope: !4013)
!4026 = !DILocation(line: 1045, column: 84, scope: !4013)
!4027 = !DILocation(line: 1045, column: 142, scope: !4013)
!4028 = !DILocation(line: 1045, column: 135, scope: !4013)
!4029 = !DILocation(line: 1045, column: 114, scope: !4013)
!4030 = !DILocation(line: 1045, column: 120, scope: !4013)
!4031 = !DILocation(line: 1045, column: 128, scope: !4013)
!4032 = !DILocation(line: 1045, column: 140, scope: !4013)
!4033 = !DILocation(line: 1045, column: 151, scope: !4013)
!4034 = !DILocation(line: 1046, column: 9, scope: !3996)
!4035 = distinct !{!4035, !4034}
!4036 = !DILocalVariable(name: "SWAP_tmp", scope: !4037, file: !912, line: 1046, type: !917)
!4037 = distinct !DILexicalBlock(scope: !3996, file: !912, line: 1046, column: 11)
!4038 = !DILocation(line: 1046, column: 20, scope: !4037)
!4039 = !DILocation(line: 1046, column: 51, scope: !4040)
!4040 = !DILexicalBlockFile(scope: !4037, file: !912, discriminator: 1)
!4041 = !DILocation(line: 1046, column: 30, scope: !4040)
!4042 = !DILocation(line: 1046, column: 36, scope: !4040)
!4043 = !DILocation(line: 1046, column: 44, scope: !4040)
!4044 = !DILocation(line: 1046, column: 20, scope: !4040)
!4045 = !DILocation(line: 1046, column: 107, scope: !4040)
!4046 = !DILocation(line: 1046, column: 86, scope: !4040)
!4047 = !DILocation(line: 1046, column: 92, scope: !4040)
!4048 = !DILocation(line: 1046, column: 100, scope: !4040)
!4049 = !DILocation(line: 1046, column: 79, scope: !4040)
!4050 = !DILocation(line: 1046, column: 58, scope: !4040)
!4051 = !DILocation(line: 1046, column: 64, scope: !4040)
!4052 = !DILocation(line: 1046, column: 72, scope: !4040)
!4053 = !DILocation(line: 1046, column: 84, scope: !4040)
!4054 = !DILocation(line: 1046, column: 142, scope: !4040)
!4055 = !DILocation(line: 1046, column: 135, scope: !4040)
!4056 = !DILocation(line: 1046, column: 114, scope: !4040)
!4057 = !DILocation(line: 1046, column: 120, scope: !4040)
!4058 = !DILocation(line: 1046, column: 128, scope: !4040)
!4059 = !DILocation(line: 1046, column: 140, scope: !4040)
!4060 = !DILocation(line: 1046, column: 151, scope: !4040)
!4061 = !DILocation(line: 1047, column: 13, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3996, file: !912, line: 1047, column: 13)
!4063 = !DILocation(line: 1047, column: 21, scope: !4062)
!4064 = !DILocation(line: 1047, column: 27, scope: !4062)
!4065 = !DILocation(line: 1047, column: 35, scope: !4062)
!4066 = !DILocation(line: 1047, column: 18, scope: !4062)
!4067 = !DILocation(line: 1047, column: 43, scope: !4062)
!4068 = !DILocation(line: 1047, column: 46, scope: !4069)
!4069 = !DILexicalBlockFile(scope: !4062, file: !912, discriminator: 1)
!4070 = !DILocation(line: 1047, column: 54, scope: !4069)
!4071 = !DILocation(line: 1047, column: 60, scope: !4069)
!4072 = !DILocation(line: 1047, column: 68, scope: !4069)
!4073 = !DILocation(line: 1047, column: 51, scope: !4069)
!4074 = !DILocation(line: 1047, column: 13, scope: !4069)
!4075 = !DILocation(line: 1048, column: 38, scope: !4062)
!4076 = !DILocation(line: 1048, column: 45, scope: !4062)
!4077 = !DILocation(line: 1048, column: 43, scope: !4062)
!4078 = !DILocation(line: 1048, column: 13, scope: !4062)
!4079 = !DILocation(line: 1048, column: 19, scope: !4062)
!4080 = !DILocation(line: 1048, column: 27, scope: !4062)
!4081 = !DILocation(line: 1048, column: 35, scope: !4062)
!4082 = !DILocation(line: 1049, column: 13, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !3996, file: !912, line: 1049, column: 13)
!4084 = !DILocation(line: 1049, column: 21, scope: !4083)
!4085 = !DILocation(line: 1049, column: 27, scope: !4083)
!4086 = !DILocation(line: 1049, column: 35, scope: !4083)
!4087 = !DILocation(line: 1049, column: 18, scope: !4083)
!4088 = !DILocation(line: 1049, column: 43, scope: !4083)
!4089 = !DILocation(line: 1049, column: 46, scope: !4090)
!4090 = !DILexicalBlockFile(scope: !4083, file: !912, discriminator: 1)
!4091 = !DILocation(line: 1049, column: 54, scope: !4090)
!4092 = !DILocation(line: 1049, column: 60, scope: !4090)
!4093 = !DILocation(line: 1049, column: 68, scope: !4090)
!4094 = !DILocation(line: 1049, column: 51, scope: !4090)
!4095 = !DILocation(line: 1049, column: 13, scope: !4090)
!4096 = !DILocation(line: 1050, column: 38, scope: !4083)
!4097 = !DILocation(line: 1050, column: 45, scope: !4083)
!4098 = !DILocation(line: 1050, column: 43, scope: !4083)
!4099 = !DILocation(line: 1050, column: 13, scope: !4083)
!4100 = !DILocation(line: 1050, column: 19, scope: !4083)
!4101 = !DILocation(line: 1050, column: 27, scope: !4083)
!4102 = !DILocation(line: 1050, column: 35, scope: !4083)
!4103 = !DILocation(line: 1051, column: 5, scope: !3996)
!4104 = !DILocation(line: 1042, column: 41, scope: !4105)
!4105 = !DILexicalBlockFile(scope: !3992, file: !912, discriminator: 2)
!4106 = !DILocation(line: 1042, column: 5, scope: !4105)
!4107 = distinct !{!4107, !4108}
!4108 = !DILocation(line: 1042, column: 5, scope: !3607)
!4109 = !DILocation(line: 1065, column: 21, scope: !3607)
!4110 = !DILocation(line: 1065, column: 26, scope: !3607)
!4111 = !DILocation(line: 1065, column: 5, scope: !3607)
!4112 = !DILocation(line: 1067, column: 12, scope: !3607)
!4113 = !DILocation(line: 1067, column: 5, scope: !3607)
!4114 = !DILocation(line: 1068, column: 1, scope: !3607)
!4115 = distinct !DISubprogram(name: "ivi_output_plane", scope: !912, file: !912, line: 914, type: !4116, isLocal: true, isDefinition: true, scopeLine: 915, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{null, !2157, !1324, !2183}
!4118 = !DILocalVariable(name: "a", arg: 1, scope: !4119, file: !4120, line: 159, type: !898)
!4119 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !4120, file: !4120, line: 159, type: !4121, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4120 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!926, !898}
!4123 = !DILocation(line: 159, column: 97, scope: !4119, inlinedAt: !4124)
!4124 = distinct !DILocation(line: 933, column: 26, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !912, line: 932, column: 13)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !912, line: 932, column: 13)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !912, line: 931, column: 13)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !912, line: 923, column: 41)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !912, line: 923, column: 5)
!4130 = distinct !DILexicalBlock(scope: !4115, file: !912, line: 923, column: 5)
!4131 = !DILocalVariable(name: "plane", arg: 1, scope: !4115, file: !912, line: 914, type: !2157)
!4132 = !DILocation(line: 914, column: 44, scope: !4115)
!4133 = !DILocalVariable(name: "dst", arg: 2, scope: !4115, file: !912, line: 914, type: !1324)
!4134 = !DILocation(line: 914, column: 60, scope: !4115)
!4135 = !DILocalVariable(name: "dst_pitch", arg: 3, scope: !4115, file: !912, line: 914, type: !2183)
!4136 = !DILocation(line: 914, column: 75, scope: !4115)
!4137 = !DILocalVariable(name: "x", scope: !4115, file: !912, line: 916, type: !898)
!4138 = !DILocation(line: 916, column: 9, scope: !4115)
!4139 = !DILocalVariable(name: "y", scope: !4115, file: !912, line: 916, type: !898)
!4140 = !DILocation(line: 916, column: 12, scope: !4115)
!4141 = !DILocalVariable(name: "src", scope: !4115, file: !912, line: 917, type: !4142)
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64, align: 64)
!4143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!4144 = !DILocation(line: 917, column: 20, scope: !4115)
!4145 = !DILocation(line: 917, column: 26, scope: !4115)
!4146 = !DILocation(line: 917, column: 33, scope: !4115)
!4147 = !DILocation(line: 917, column: 42, scope: !4115)
!4148 = !DILocalVariable(name: "pitch", scope: !4115, file: !912, line: 918, type: !2183)
!4149 = !DILocation(line: 918, column: 15, scope: !4115)
!4150 = !DILocation(line: 918, column: 23, scope: !4115)
!4151 = !DILocation(line: 918, column: 30, scope: !4115)
!4152 = !DILocation(line: 918, column: 39, scope: !4115)
!4153 = !DILocation(line: 920, column: 10, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4115, file: !912, line: 920, column: 9)
!4155 = !DILocation(line: 920, column: 9, scope: !4115)
!4156 = !DILocation(line: 921, column: 9, scope: !4154)
!4157 = !DILocation(line: 923, column: 12, scope: !4130)
!4158 = !DILocation(line: 923, column: 10, scope: !4130)
!4159 = !DILocation(line: 923, column: 17, scope: !4160)
!4160 = !DILexicalBlockFile(scope: !4129, file: !912, discriminator: 1)
!4161 = !DILocation(line: 923, column: 21, scope: !4160)
!4162 = !DILocation(line: 923, column: 28, scope: !4160)
!4163 = !DILocation(line: 923, column: 19, scope: !4160)
!4164 = !DILocation(line: 923, column: 5, scope: !4160)
!4165 = !DILocalVariable(name: "m", scope: !4128, file: !912, line: 924, type: !898)
!4166 = !DILocation(line: 924, column: 13, scope: !4128)
!4167 = !DILocalVariable(name: "w", scope: !4128, file: !912, line: 925, type: !898)
!4168 = !DILocation(line: 925, column: 13, scope: !4128)
!4169 = !DILocation(line: 925, column: 17, scope: !4128)
!4170 = !DILocation(line: 925, column: 24, scope: !4128)
!4171 = !DILocation(line: 926, column: 16, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4128, file: !912, line: 926, column: 9)
!4173 = !DILocation(line: 926, column: 14, scope: !4172)
!4174 = !DILocation(line: 926, column: 21, scope: !4175)
!4175 = !DILexicalBlockFile(scope: !4176, file: !912, discriminator: 1)
!4176 = distinct !DILexicalBlock(scope: !4172, file: !912, line: 926, column: 9)
!4177 = !DILocation(line: 926, column: 25, scope: !4175)
!4178 = !DILocation(line: 926, column: 23, scope: !4175)
!4179 = !DILocation(line: 926, column: 9, scope: !4175)
!4180 = !DILocalVariable(name: "t", scope: !4181, file: !912, line: 927, type: !898)
!4181 = distinct !DILexicalBlock(scope: !4176, file: !912, line: 926, column: 33)
!4182 = !DILocation(line: 927, column: 17, scope: !4181)
!4183 = !DILocation(line: 927, column: 25, scope: !4181)
!4184 = !DILocation(line: 927, column: 21, scope: !4181)
!4185 = !DILocation(line: 927, column: 28, scope: !4181)
!4186 = !DILocation(line: 928, column: 22, scope: !4181)
!4187 = !DILocation(line: 928, column: 17, scope: !4181)
!4188 = !DILocation(line: 928, column: 13, scope: !4181)
!4189 = !DILocation(line: 928, column: 20, scope: !4181)
!4190 = !DILocation(line: 929, column: 18, scope: !4181)
!4191 = !DILocation(line: 929, column: 15, scope: !4181)
!4192 = !DILocation(line: 930, column: 9, scope: !4181)
!4193 = !DILocation(line: 926, column: 29, scope: !4194)
!4194 = !DILexicalBlockFile(scope: !4176, file: !912, discriminator: 2)
!4195 = !DILocation(line: 926, column: 9, scope: !4194)
!4196 = distinct !{!4196, !4197}
!4197 = !DILocation(line: 926, column: 9, scope: !4128)
!4198 = !DILocation(line: 931, column: 13, scope: !4127)
!4199 = !DILocation(line: 931, column: 15, scope: !4127)
!4200 = !DILocation(line: 931, column: 13, scope: !4128)
!4201 = !DILocation(line: 932, column: 20, scope: !4126)
!4202 = !DILocation(line: 932, column: 18, scope: !4126)
!4203 = !DILocation(line: 932, column: 25, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !4125, file: !912, discriminator: 1)
!4205 = !DILocation(line: 932, column: 29, scope: !4204)
!4206 = !DILocation(line: 932, column: 27, scope: !4204)
!4207 = !DILocation(line: 932, column: 13, scope: !4204)
!4208 = !DILocation(line: 933, column: 46, scope: !4125)
!4209 = !DILocation(line: 933, column: 42, scope: !4125)
!4210 = !DILocation(line: 933, column: 49, scope: !4125)
!4211 = !DILocation(line: 933, column: 26, scope: !4125)
!4212 = !DILocation(line: 161, column: 9, scope: !4213, inlinedAt: !4124)
!4213 = distinct !DILexicalBlock(scope: !4119, file: !4120, line: 161, column: 9)
!4214 = !DILocation(line: 161, column: 10, scope: !4213, inlinedAt: !4124)
!4215 = !DILocation(line: 161, column: 9, scope: !4119, inlinedAt: !4124)
!4216 = !DILocation(line: 161, column: 29, scope: !4217, inlinedAt: !4124)
!4217 = !DILexicalBlockFile(scope: !4213, file: !4120, discriminator: 1)
!4218 = !DILocation(line: 161, column: 28, scope: !4217, inlinedAt: !4124)
!4219 = !DILocation(line: 161, column: 31, scope: !4217, inlinedAt: !4124)
!4220 = !DILocation(line: 161, column: 27, scope: !4217, inlinedAt: !4124)
!4221 = !DILocation(line: 161, column: 20, scope: !4217, inlinedAt: !4124)
!4222 = !DILocation(line: 162, column: 17, scope: !4213, inlinedAt: !4124)
!4223 = !DILocation(line: 162, column: 10, scope: !4213, inlinedAt: !4124)
!4224 = !DILocation(line: 163, column: 1, scope: !4119, inlinedAt: !4124)
!4225 = !DILocation(line: 933, column: 21, scope: !4125)
!4226 = !DILocation(line: 933, column: 17, scope: !4125)
!4227 = !DILocation(line: 933, column: 24, scope: !4125)
!4228 = !DILocation(line: 932, column: 33, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4125, file: !912, discriminator: 2)
!4230 = !DILocation(line: 932, column: 13, scope: !4229)
!4231 = distinct !{!4231, !4232}
!4232 = !DILocation(line: 932, column: 13, scope: !4127)
!4233 = !DILocation(line: 933, column: 54, scope: !4234)
!4234 = !DILexicalBlockFile(scope: !4126, file: !912, discriminator: 1)
!4235 = !DILocation(line: 934, column: 16, scope: !4128)
!4236 = !DILocation(line: 934, column: 13, scope: !4128)
!4237 = !DILocation(line: 935, column: 16, scope: !4128)
!4238 = !DILocation(line: 935, column: 13, scope: !4128)
!4239 = !DILocation(line: 936, column: 5, scope: !4128)
!4240 = !DILocation(line: 923, column: 37, scope: !4241)
!4241 = !DILexicalBlockFile(scope: !4129, file: !912, discriminator: 2)
!4242 = !DILocation(line: 923, column: 5, scope: !4241)
!4243 = distinct !{!4243, !4244}
!4244 = !DILocation(line: 923, column: 5, scope: !4115)
!4245 = !DILocation(line: 937, column: 1, scope: !4115)
!4246 = distinct !DISubprogram(name: "get_bits_left", scope: !1182, file: !1182, line: 814, type: !4247, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{!898, !1180}
!4249 = !DILocalVariable(name: "gb", arg: 1, scope: !4246, file: !1182, line: 814, type: !1180)
!4250 = !DILocation(line: 814, column: 48, scope: !4246)
!4251 = !DILocation(line: 816, column: 12, scope: !4246)
!4252 = !DILocation(line: 816, column: 16, scope: !4246)
!4253 = !DILocation(line: 816, column: 46, scope: !4246)
!4254 = !DILocation(line: 816, column: 31, scope: !4246)
!4255 = !DILocation(line: 816, column: 29, scope: !4246)
!4256 = !DILocation(line: 816, column: 5, scope: !4246)
!4257 = distinct !DISubprogram(name: "get_bits_count", scope: !1182, file: !1182, line: 219, type: !4258, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{!898, !4260}
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64, align: 64)
!4261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!4262 = !DILocalVariable(name: "s", arg: 1, scope: !4257, file: !1182, line: 219, type: !4260)
!4263 = !DILocation(line: 219, column: 55, scope: !4257)
!4264 = !DILocation(line: 224, column: 12, scope: !4257)
!4265 = !DILocation(line: 224, column: 15, scope: !4257)
!4266 = !DILocation(line: 224, column: 5, scope: !4257)
!4267 = distinct !DISubprogram(name: "skip_bits_long", scope: !1182, file: !1182, line: 293, type: !4268, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{null, !1180, !898}
!4270 = !DILocalVariable(name: "a", arg: 1, scope: !4271, file: !4120, line: 127, type: !898)
!4271 = distinct !DISubprogram(name: "av_clip_c", scope: !4120, file: !4120, line: 127, type: !4272, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!898, !898, !898, !898}
!4274 = !DILocation(line: 127, column: 87, scope: !4271, inlinedAt: !4275)
!4275 = distinct !DILocation(line: 301, column: 17, scope: !4267)
!4276 = !DILocalVariable(name: "amin", arg: 2, scope: !4271, file: !4120, line: 127, type: !898)
!4277 = !DILocation(line: 127, column: 94, scope: !4271, inlinedAt: !4275)
!4278 = !DILocalVariable(name: "amax", arg: 3, scope: !4271, file: !4120, line: 127, type: !898)
!4279 = !DILocation(line: 127, column: 104, scope: !4271, inlinedAt: !4275)
!4280 = !DILocalVariable(name: "s", arg: 1, scope: !4267, file: !1182, line: 293, type: !1180)
!4281 = !DILocation(line: 293, column: 50, scope: !4267)
!4282 = !DILocalVariable(name: "n", arg: 2, scope: !4267, file: !1182, line: 293, type: !898)
!4283 = !DILocation(line: 293, column: 57, scope: !4267)
!4284 = !DILocation(line: 301, column: 27, scope: !4267)
!4285 = !DILocation(line: 301, column: 31, scope: !4267)
!4286 = !DILocation(line: 301, column: 34, scope: !4267)
!4287 = !DILocation(line: 301, column: 30, scope: !4267)
!4288 = !DILocation(line: 301, column: 41, scope: !4267)
!4289 = !DILocation(line: 301, column: 44, scope: !4267)
!4290 = !DILocation(line: 301, column: 65, scope: !4267)
!4291 = !DILocation(line: 301, column: 68, scope: !4267)
!4292 = !DILocation(line: 301, column: 63, scope: !4267)
!4293 = !DILocation(line: 301, column: 17, scope: !4267)
!4294 = !DILocation(line: 132, column: 9, scope: !4295, inlinedAt: !4275)
!4295 = distinct !DILexicalBlock(scope: !4271, file: !4120, line: 132, column: 9)
!4296 = !DILocation(line: 132, column: 13, scope: !4295, inlinedAt: !4275)
!4297 = !DILocation(line: 132, column: 11, scope: !4295, inlinedAt: !4275)
!4298 = !DILocation(line: 132, column: 9, scope: !4271, inlinedAt: !4275)
!4299 = !DILocation(line: 132, column: 26, scope: !4300, inlinedAt: !4275)
!4300 = !DILexicalBlockFile(scope: !4295, file: !4120, discriminator: 1)
!4301 = !DILocation(line: 132, column: 19, scope: !4300, inlinedAt: !4275)
!4302 = !DILocation(line: 133, column: 14, scope: !4303, inlinedAt: !4275)
!4303 = distinct !DILexicalBlock(scope: !4295, file: !4120, line: 133, column: 14)
!4304 = !DILocation(line: 133, column: 18, scope: !4303, inlinedAt: !4275)
!4305 = !DILocation(line: 133, column: 16, scope: !4303, inlinedAt: !4275)
!4306 = !DILocation(line: 133, column: 14, scope: !4295, inlinedAt: !4275)
!4307 = !DILocation(line: 133, column: 31, scope: !4308, inlinedAt: !4275)
!4308 = !DILexicalBlockFile(scope: !4303, file: !4120, discriminator: 1)
!4309 = !DILocation(line: 133, column: 24, scope: !4308, inlinedAt: !4275)
!4310 = !DILocation(line: 134, column: 17, scope: !4303, inlinedAt: !4275)
!4311 = !DILocation(line: 134, column: 10, scope: !4303, inlinedAt: !4275)
!4312 = !DILocation(line: 135, column: 1, scope: !4271, inlinedAt: !4275)
!4313 = !DILocation(line: 301, column: 5, scope: !4267)
!4314 = !DILocation(line: 301, column: 8, scope: !4267)
!4315 = !DILocation(line: 301, column: 14, scope: !4267)
!4316 = !DILocation(line: 304, column: 1, scope: !4267)
!4317 = distinct !DISubprogram(name: "show_bits_long", scope: !1182, file: !1182, line: 587, type: !2053, isLocal: true, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4318 = !DILocalVariable(name: "s", arg: 1, scope: !4317, file: !1182, line: 587, type: !1180)
!4319 = !DILocation(line: 587, column: 58, scope: !4317)
!4320 = !DILocalVariable(name: "n", arg: 2, scope: !4317, file: !1182, line: 587, type: !898)
!4321 = !DILocation(line: 587, column: 65, scope: !4317)
!4322 = !DILocation(line: 589, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4317, file: !1182, line: 589, column: 9)
!4324 = !DILocation(line: 589, column: 11, scope: !4323)
!4325 = !DILocation(line: 589, column: 9, scope: !4317)
!4326 = !DILocation(line: 590, column: 26, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4323, file: !1182, line: 589, column: 18)
!4328 = !DILocation(line: 590, column: 29, scope: !4327)
!4329 = !DILocation(line: 590, column: 16, scope: !4327)
!4330 = !DILocation(line: 590, column: 9, scope: !4327)
!4331 = !DILocalVariable(name: "gb", scope: !4332, file: !1182, line: 592, type: !1181)
!4332 = distinct !DILexicalBlock(scope: !4323, file: !1182, line: 591, column: 12)
!4333 = !DILocation(line: 592, column: 23, scope: !4332)
!4334 = !DILocation(line: 592, column: 29, scope: !4332)
!4335 = !DILocation(line: 592, column: 28, scope: !4332)
!4336 = !DILocation(line: 593, column: 35, scope: !4332)
!4337 = !DILocation(line: 593, column: 16, scope: !4332)
!4338 = !DILocation(line: 593, column: 9, scope: !4332)
!4339 = !DILocation(line: 595, column: 1, scope: !4317)
!4340 = distinct !DISubprogram(name: "ff_ivi_decode_close", scope: !912, file: !912, line: 1216, type: !1298, isLocal: false, isDefinition: true, scopeLine: 1217, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4341 = !DILocalVariable(name: "avctx", arg: 1, scope: !4340, file: !912, line: 1216, type: !1199)
!4342 = !DILocation(line: 1216, column: 63, scope: !4340)
!4343 = !DILocalVariable(name: "ctx", scope: !4340, file: !912, line: 1218, type: !3092)
!4344 = !DILocation(line: 1218, column: 22, scope: !4340)
!4345 = !DILocation(line: 1218, column: 28, scope: !4340)
!4346 = !DILocation(line: 1218, column: 35, scope: !4340)
!4347 = !DILocation(line: 1220, column: 23, scope: !4340)
!4348 = !DILocation(line: 1220, column: 28, scope: !4340)
!4349 = !DILocation(line: 1220, column: 5, scope: !4340)
!4350 = !DILocation(line: 1222, column: 9, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4340, file: !912, line: 1222, column: 9)
!4352 = !DILocation(line: 1222, column: 14, scope: !4351)
!4353 = !DILocation(line: 1222, column: 21, scope: !4351)
!4354 = !DILocation(line: 1222, column: 30, scope: !4351)
!4355 = !DILocation(line: 1222, column: 9, scope: !4340)
!4356 = !DILocation(line: 1223, column: 22, scope: !4351)
!4357 = !DILocation(line: 1223, column: 27, scope: !4351)
!4358 = !DILocation(line: 1223, column: 34, scope: !4351)
!4359 = !DILocation(line: 1223, column: 9, scope: !4351)
!4360 = !DILocation(line: 1225, column: 9, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4340, file: !912, line: 1225, column: 9)
!4362 = !DILocation(line: 1225, column: 14, scope: !4361)
!4363 = !DILocation(line: 1225, column: 22, scope: !4361)
!4364 = !DILocation(line: 1225, column: 31, scope: !4361)
!4365 = !DILocation(line: 1225, column: 9, scope: !4340)
!4366 = !DILocation(line: 1226, column: 22, scope: !4361)
!4367 = !DILocation(line: 1226, column: 27, scope: !4361)
!4368 = !DILocation(line: 1226, column: 35, scope: !4361)
!4369 = !DILocation(line: 1226, column: 9, scope: !4361)
!4370 = !DILocation(line: 1228, column: 20, scope: !4340)
!4371 = !DILocation(line: 1228, column: 25, scope: !4340)
!4372 = !DILocation(line: 1228, column: 5, scope: !4340)
!4373 = !DILocation(line: 1230, column: 5, scope: !4340)
!4374 = distinct !DISubprogram(name: "inv_bits", scope: !912, file: !912, line: 123, type: !4375, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!1069, !1069, !898}
!4377 = !DILocalVariable(name: "val", arg: 1, scope: !4374, file: !912, line: 123, type: !1069)
!4378 = !DILocation(line: 123, column: 35, scope: !4374)
!4379 = !DILocalVariable(name: "nbits", arg: 2, scope: !4374, file: !912, line: 123, type: !898)
!4380 = !DILocation(line: 123, column: 44, scope: !4374)
!4381 = !DILocalVariable(name: "res", scope: !4374, file: !912, line: 125, type: !1069)
!4382 = !DILocation(line: 125, column: 14, scope: !4374)
!4383 = !DILocation(line: 127, column: 9, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4374, file: !912, line: 127, column: 9)
!4385 = !DILocation(line: 127, column: 15, scope: !4384)
!4386 = !DILocation(line: 127, column: 9, scope: !4374)
!4387 = !DILocation(line: 128, column: 26, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4384, file: !912, line: 127, column: 21)
!4389 = !DILocation(line: 128, column: 15, scope: !4388)
!4390 = !DILocation(line: 128, column: 39, scope: !4388)
!4391 = !DILocation(line: 128, column: 37, scope: !4388)
!4392 = !DILocation(line: 128, column: 31, scope: !4388)
!4393 = !DILocation(line: 128, column: 13, scope: !4388)
!4394 = !DILocation(line: 129, column: 5, scope: !4388)
!4395 = !DILocation(line: 130, column: 28, scope: !4384)
!4396 = !DILocation(line: 130, column: 32, scope: !4384)
!4397 = !DILocation(line: 130, column: 17, scope: !4384)
!4398 = !DILocation(line: 130, column: 40, scope: !4384)
!4399 = !DILocation(line: 131, column: 28, scope: !4384)
!4400 = !DILocation(line: 131, column: 32, scope: !4384)
!4401 = !DILocation(line: 131, column: 17, scope: !4384)
!4402 = !DILocation(line: 131, column: 16, scope: !4384)
!4403 = !DILocation(line: 130, column: 46, scope: !4384)
!4404 = !DILocation(line: 131, column: 49, scope: !4384)
!4405 = !DILocation(line: 131, column: 47, scope: !4384)
!4406 = !DILocation(line: 131, column: 40, scope: !4384)
!4407 = !DILocation(line: 130, column: 15, scope: !4384)
!4408 = !DILocation(line: 130, column: 13, scope: !4384)
!4409 = !DILocation(line: 133, column: 12, scope: !4374)
!4410 = !DILocation(line: 133, column: 5, scope: !4374)
!4411 = distinct !DISubprogram(name: "zero_extend", scope: !4412, file: !4412, line: 139, type: !4413, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4412 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!899, !899, !899}
!4415 = !DILocalVariable(name: "val", arg: 1, scope: !4411, file: !4412, line: 139, type: !899)
!4416 = !DILocation(line: 139, column: 68, scope: !4411)
!4417 = !DILocalVariable(name: "bits", arg: 2, scope: !4411, file: !4412, line: 139, type: !899)
!4418 = !DILocation(line: 139, column: 82, scope: !4411)
!4419 = !DILocation(line: 141, column: 13, scope: !4411)
!4420 = !DILocation(line: 141, column: 41, scope: !4411)
!4421 = !DILocation(line: 141, column: 39, scope: !4411)
!4422 = !DILocation(line: 141, column: 17, scope: !4411)
!4423 = !DILocation(line: 141, column: 72, scope: !4411)
!4424 = !DILocation(line: 141, column: 70, scope: !4411)
!4425 = !DILocation(line: 141, column: 48, scope: !4411)
!4426 = !DILocation(line: 141, column: 5, scope: !4411)
!4427 = distinct !DISubprogram(name: "init_get_bits", scope: !1182, file: !1182, line: 615, type: !3583, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4428 = !DILocalVariable(name: "s", arg: 1, scope: !4427, file: !1182, line: 615, type: !1180)
!4429 = !DILocation(line: 615, column: 48, scope: !4427)
!4430 = !DILocalVariable(name: "buffer", arg: 2, scope: !4427, file: !1182, line: 615, type: !1186)
!4431 = !DILocation(line: 615, column: 66, scope: !4427)
!4432 = !DILocalVariable(name: "bit_size", arg: 3, scope: !4427, file: !1182, line: 616, type: !898)
!4433 = !DILocation(line: 616, column: 37, scope: !4427)
!4434 = !DILocalVariable(name: "buffer_size", scope: !4427, file: !1182, line: 618, type: !898)
!4435 = !DILocation(line: 618, column: 9, scope: !4427)
!4436 = !DILocalVariable(name: "ret", scope: !4427, file: !1182, line: 619, type: !898)
!4437 = !DILocation(line: 619, column: 9, scope: !4427)
!4438 = !DILocation(line: 621, column: 9, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4427, file: !1182, line: 621, column: 9)
!4440 = !DILocation(line: 621, column: 18, scope: !4439)
!4441 = !DILocation(line: 621, column: 64, scope: !4439)
!4442 = !DILocation(line: 621, column: 67, scope: !4443)
!4443 = !DILexicalBlockFile(scope: !4439, file: !1182, discriminator: 1)
!4444 = !DILocation(line: 621, column: 76, scope: !4443)
!4445 = !DILocation(line: 621, column: 80, scope: !4443)
!4446 = !DILocation(line: 621, column: 84, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4439, file: !1182, discriminator: 2)
!4448 = !DILocation(line: 621, column: 9, scope: !4447)
!4449 = !DILocation(line: 622, column: 18, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4439, file: !1182, line: 621, column: 92)
!4451 = !DILocation(line: 623, column: 16, scope: !4450)
!4452 = !DILocation(line: 624, column: 13, scope: !4450)
!4453 = !DILocation(line: 625, column: 5, scope: !4450)
!4454 = !DILocation(line: 627, column: 20, scope: !4427)
!4455 = !DILocation(line: 627, column: 29, scope: !4427)
!4456 = !DILocation(line: 627, column: 34, scope: !4427)
!4457 = !DILocation(line: 627, column: 17, scope: !4427)
!4458 = !DILocation(line: 629, column: 17, scope: !4427)
!4459 = !DILocation(line: 629, column: 5, scope: !4427)
!4460 = !DILocation(line: 629, column: 8, scope: !4427)
!4461 = !DILocation(line: 629, column: 15, scope: !4427)
!4462 = !DILocation(line: 630, column: 23, scope: !4427)
!4463 = !DILocation(line: 630, column: 5, scope: !4427)
!4464 = !DILocation(line: 630, column: 8, scope: !4427)
!4465 = !DILocation(line: 630, column: 21, scope: !4427)
!4466 = !DILocation(line: 631, column: 29, scope: !4427)
!4467 = !DILocation(line: 631, column: 38, scope: !4427)
!4468 = !DILocation(line: 631, column: 5, scope: !4427)
!4469 = !DILocation(line: 631, column: 8, scope: !4427)
!4470 = !DILocation(line: 631, column: 27, scope: !4427)
!4471 = !DILocation(line: 632, column: 21, scope: !4427)
!4472 = !DILocation(line: 632, column: 30, scope: !4427)
!4473 = !DILocation(line: 632, column: 28, scope: !4427)
!4474 = !DILocation(line: 632, column: 5, scope: !4427)
!4475 = !DILocation(line: 632, column: 8, scope: !4427)
!4476 = !DILocation(line: 632, column: 19, scope: !4427)
!4477 = !DILocation(line: 633, column: 5, scope: !4427)
!4478 = !DILocation(line: 633, column: 8, scope: !4427)
!4479 = !DILocation(line: 633, column: 14, scope: !4427)
!4480 = !DILocation(line: 639, column: 12, scope: !4427)
!4481 = !DILocation(line: 639, column: 5, scope: !4427)
!4482 = distinct !DISubprogram(name: "get_bits1", scope: !1182, file: !1182, line: 487, type: !4483, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!899, !1180}
!4485 = !DILocalVariable(name: "s", arg: 1, scope: !4482, file: !1182, line: 487, type: !1180)
!4486 = !DILocation(line: 487, column: 53, scope: !4482)
!4487 = !DILocalVariable(name: "index", scope: !4482, file: !1182, line: 499, type: !899)
!4488 = !DILocation(line: 499, column: 18, scope: !4482)
!4489 = !DILocation(line: 499, column: 26, scope: !4482)
!4490 = !DILocation(line: 499, column: 29, scope: !4482)
!4491 = !DILocalVariable(name: "result", scope: !4482, file: !1182, line: 500, type: !926)
!4492 = !DILocation(line: 500, column: 13, scope: !4482)
!4493 = !DILocation(line: 500, column: 32, scope: !4482)
!4494 = !DILocation(line: 500, column: 38, scope: !4482)
!4495 = !DILocation(line: 500, column: 22, scope: !4482)
!4496 = !DILocation(line: 500, column: 25, scope: !4482)
!4497 = !DILocation(line: 502, column: 16, scope: !4482)
!4498 = !DILocation(line: 502, column: 22, scope: !4482)
!4499 = !DILocation(line: 502, column: 12, scope: !4482)
!4500 = !DILocation(line: 503, column: 12, scope: !4482)
!4501 = !DILocation(line: 509, column: 9, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4482, file: !1182, line: 509, column: 9)
!4503 = !DILocation(line: 509, column: 12, scope: !4502)
!4504 = !DILocation(line: 509, column: 20, scope: !4502)
!4505 = !DILocation(line: 509, column: 23, scope: !4502)
!4506 = !DILocation(line: 509, column: 18, scope: !4502)
!4507 = !DILocation(line: 509, column: 9, scope: !4482)
!4508 = !DILocation(line: 511, column: 14, scope: !4502)
!4509 = !DILocation(line: 511, column: 9, scope: !4502)
!4510 = !DILocation(line: 512, column: 16, scope: !4482)
!4511 = !DILocation(line: 512, column: 5, scope: !4482)
!4512 = !DILocation(line: 512, column: 8, scope: !4482)
!4513 = !DILocation(line: 512, column: 14, scope: !4482)
!4514 = !DILocation(line: 514, column: 12, scope: !4482)
!4515 = !DILocation(line: 514, column: 5, scope: !4482)
!4516 = distinct !DISubprogram(name: "ivi_process_empty_tile", scope: !912, file: !912, line: 769, type: !4517, isLocal: true, isDefinition: true, scopeLine: 771, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!898, !1199, !2165, !2206, !976}
!4519 = !DILocalVariable(name: "avctx", arg: 1, scope: !4516, file: !912, line: 769, type: !1199)
!4520 = !DILocation(line: 769, column: 51, scope: !4516)
!4521 = !DILocalVariable(name: "band", arg: 2, scope: !4516, file: !912, line: 769, type: !2165)
!4522 = !DILocation(line: 769, column: 71, scope: !4516)
!4523 = !DILocalVariable(name: "tile", arg: 3, scope: !4516, file: !912, line: 770, type: !2206)
!4524 = !DILocation(line: 770, column: 44, scope: !4516)
!4525 = !DILocalVariable(name: "mv_scale", arg: 4, scope: !4516, file: !912, line: 770, type: !976)
!4526 = !DILocation(line: 770, column: 58, scope: !4516)
!4527 = !DILocalVariable(name: "x", scope: !4516, file: !912, line: 772, type: !898)
!4528 = !DILocation(line: 772, column: 9, scope: !4516)
!4529 = !DILocalVariable(name: "y", scope: !4516, file: !912, line: 772, type: !898)
!4530 = !DILocation(line: 772, column: 12, scope: !4516)
!4531 = !DILocalVariable(name: "need_mc", scope: !4516, file: !912, line: 772, type: !898)
!4532 = !DILocation(line: 772, column: 15, scope: !4516)
!4533 = !DILocalVariable(name: "mbn", scope: !4516, file: !912, line: 772, type: !898)
!4534 = !DILocation(line: 772, column: 24, scope: !4516)
!4535 = !DILocalVariable(name: "blk", scope: !4516, file: !912, line: 772, type: !898)
!4536 = !DILocation(line: 772, column: 29, scope: !4516)
!4537 = !DILocalVariable(name: "num_blocks", scope: !4516, file: !912, line: 772, type: !898)
!4538 = !DILocation(line: 772, column: 34, scope: !4516)
!4539 = !DILocalVariable(name: "mv_x", scope: !4516, file: !912, line: 772, type: !898)
!4540 = !DILocation(line: 772, column: 46, scope: !4516)
!4541 = !DILocalVariable(name: "mv_y", scope: !4516, file: !912, line: 772, type: !898)
!4542 = !DILocation(line: 772, column: 52, scope: !4516)
!4543 = !DILocalVariable(name: "mc_type", scope: !4516, file: !912, line: 772, type: !898)
!4544 = !DILocation(line: 772, column: 58, scope: !4516)
!4545 = !DILocalVariable(name: "offs", scope: !4516, file: !912, line: 773, type: !898)
!4546 = !DILocation(line: 773, column: 9, scope: !4516)
!4547 = !DILocalVariable(name: "mb_offset", scope: !4516, file: !912, line: 773, type: !898)
!4548 = !DILocation(line: 773, column: 15, scope: !4516)
!4549 = !DILocalVariable(name: "row_offset", scope: !4516, file: !912, line: 773, type: !898)
!4550 = !DILocation(line: 773, column: 26, scope: !4516)
!4551 = !DILocalVariable(name: "ret", scope: !4516, file: !912, line: 773, type: !898)
!4552 = !DILocation(line: 773, column: 38, scope: !4516)
!4553 = !DILocalVariable(name: "mb", scope: !4516, file: !912, line: 774, type: !2219)
!4554 = !DILocation(line: 774, column: 16, scope: !4516)
!4555 = !DILocalVariable(name: "ref_mb", scope: !4516, file: !912, line: 774, type: !2219)
!4556 = !DILocation(line: 774, column: 21, scope: !4516)
!4557 = !DILocalVariable(name: "src", scope: !4516, file: !912, line: 775, type: !4142)
!4558 = !DILocation(line: 775, column: 20, scope: !4516)
!4559 = !DILocalVariable(name: "dst", scope: !4516, file: !912, line: 776, type: !2177)
!4560 = !DILocation(line: 776, column: 14, scope: !4516)
!4561 = !DILocalVariable(name: "mc_no_delta_func", scope: !4516, file: !912, line: 777, type: !4562)
!4562 = !DIDerivedType(tag: DW_TAG_typedef, name: "ivi_mc_func", file: !912, line: 76, baseType: !4563)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64, align: 64)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{null, !2177, !4142, !2183, !898}
!4566 = !DILocation(line: 777, column: 17, scope: !4516)
!4567 = !DILocation(line: 779, column: 9, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4516, file: !912, line: 779, column: 9)
!4569 = !DILocation(line: 779, column: 15, scope: !4568)
!4570 = !DILocation(line: 779, column: 30, scope: !4568)
!4571 = !DILocation(line: 779, column: 36, scope: !4568)
!4572 = !DILocation(line: 779, column: 46, scope: !4568)
!4573 = !DILocation(line: 779, column: 52, scope: !4568)
!4574 = !DILocation(line: 779, column: 43, scope: !4568)
!4575 = !DILocation(line: 779, column: 61, scope: !4568)
!4576 = !DILocation(line: 779, column: 69, scope: !4568)
!4577 = !DILocation(line: 779, column: 75, scope: !4568)
!4578 = !DILocation(line: 779, column: 66, scope: !4568)
!4579 = !DILocation(line: 779, column: 90, scope: !4568)
!4580 = !DILocation(line: 779, column: 96, scope: !4568)
!4581 = !DILocation(line: 779, column: 107, scope: !4568)
!4582 = !DILocation(line: 779, column: 113, scope: !4568)
!4583 = !DILocation(line: 779, column: 104, scope: !4568)
!4584 = !DILocation(line: 779, column: 122, scope: !4568)
!4585 = !DILocation(line: 779, column: 130, scope: !4568)
!4586 = !DILocation(line: 779, column: 136, scope: !4568)
!4587 = !DILocation(line: 779, column: 127, scope: !4568)
!4588 = !DILocation(line: 779, column: 85, scope: !4568)
!4589 = !DILocation(line: 779, column: 23, scope: !4568)
!4590 = !DILocation(line: 779, column: 9, scope: !4516)
!4591 = !DILocation(line: 780, column: 16, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4568, file: !912, line: 779, column: 148)
!4593 = !DILocation(line: 782, column: 16, scope: !4592)
!4594 = !DILocation(line: 782, column: 22, scope: !4592)
!4595 = !DILocation(line: 782, column: 35, scope: !4592)
!4596 = !DILocation(line: 782, column: 41, scope: !4592)
!4597 = !DILocation(line: 782, column: 51, scope: !4592)
!4598 = !DILocation(line: 782, column: 57, scope: !4592)
!4599 = !DILocation(line: 782, column: 48, scope: !4592)
!4600 = !DILocation(line: 782, column: 66, scope: !4592)
!4601 = !DILocation(line: 782, column: 74, scope: !4592)
!4602 = !DILocation(line: 782, column: 80, scope: !4592)
!4603 = !DILocation(line: 782, column: 71, scope: !4592)
!4604 = !DILocation(line: 782, column: 95, scope: !4592)
!4605 = !DILocation(line: 782, column: 101, scope: !4592)
!4606 = !DILocation(line: 782, column: 112, scope: !4592)
!4607 = !DILocation(line: 782, column: 118, scope: !4592)
!4608 = !DILocation(line: 782, column: 109, scope: !4592)
!4609 = !DILocation(line: 782, column: 127, scope: !4592)
!4610 = !DILocation(line: 782, column: 135, scope: !4592)
!4611 = !DILocation(line: 782, column: 141, scope: !4592)
!4612 = !DILocation(line: 782, column: 132, scope: !4592)
!4613 = !DILocation(line: 782, column: 90, scope: !4592)
!4614 = !DILocation(line: 780, column: 9, scope: !4592)
!4615 = !DILocation(line: 783, column: 9, scope: !4592)
!4616 = !DILocation(line: 786, column: 12, scope: !4516)
!4617 = !DILocation(line: 786, column: 18, scope: !4516)
!4618 = !DILocation(line: 786, column: 25, scope: !4516)
!4619 = !DILocation(line: 786, column: 31, scope: !4516)
!4620 = !DILocation(line: 786, column: 23, scope: !4516)
!4621 = !DILocation(line: 786, column: 39, scope: !4516)
!4622 = !DILocation(line: 786, column: 45, scope: !4516)
!4623 = !DILocation(line: 786, column: 37, scope: !4516)
!4624 = !DILocation(line: 786, column: 10, scope: !4516)
!4625 = !DILocation(line: 787, column: 10, scope: !4516)
!4626 = !DILocation(line: 787, column: 16, scope: !4516)
!4627 = !DILocation(line: 787, column: 8, scope: !4516)
!4628 = !DILocation(line: 788, column: 14, scope: !4516)
!4629 = !DILocation(line: 788, column: 20, scope: !4516)
!4630 = !DILocation(line: 788, column: 12, scope: !4516)
!4631 = !DILocation(line: 789, column: 18, scope: !4516)
!4632 = !DILocation(line: 789, column: 24, scope: !4516)
!4633 = !DILocation(line: 789, column: 34, scope: !4516)
!4634 = !DILocation(line: 789, column: 40, scope: !4516)
!4635 = !DILocation(line: 789, column: 32, scope: !4516)
!4636 = !DILocation(line: 789, column: 16, scope: !4516)
!4637 = !DILocation(line: 790, column: 13, scope: !4516)
!4638 = !DILocation(line: 792, column: 14, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4516, file: !912, line: 792, column: 5)
!4640 = !DILocation(line: 792, column: 20, scope: !4639)
!4641 = !DILocation(line: 792, column: 12, scope: !4639)
!4642 = !DILocation(line: 792, column: 10, scope: !4639)
!4643 = !DILocation(line: 792, column: 26, scope: !4644)
!4644 = !DILexicalBlockFile(scope: !4645, file: !912, discriminator: 1)
!4645 = distinct !DILexicalBlock(scope: !4639, file: !912, line: 792, column: 5)
!4646 = !DILocation(line: 792, column: 31, scope: !4644)
!4647 = !DILocation(line: 792, column: 37, scope: !4644)
!4648 = !DILocation(line: 792, column: 44, scope: !4644)
!4649 = !DILocation(line: 792, column: 50, scope: !4644)
!4650 = !DILocation(line: 792, column: 42, scope: !4644)
!4651 = !DILocation(line: 792, column: 28, scope: !4644)
!4652 = !DILocation(line: 792, column: 5, scope: !4644)
!4653 = !DILocation(line: 793, column: 21, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4645, file: !912, line: 792, column: 79)
!4655 = !DILocation(line: 793, column: 19, scope: !4654)
!4656 = !DILocation(line: 795, column: 18, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4654, file: !912, line: 795, column: 9)
!4658 = !DILocation(line: 795, column: 24, scope: !4657)
!4659 = !DILocation(line: 795, column: 16, scope: !4657)
!4660 = !DILocation(line: 795, column: 14, scope: !4657)
!4661 = !DILocation(line: 795, column: 30, scope: !4662)
!4662 = !DILexicalBlockFile(scope: !4663, file: !912, discriminator: 1)
!4663 = distinct !DILexicalBlock(scope: !4657, file: !912, line: 795, column: 9)
!4664 = !DILocation(line: 795, column: 35, scope: !4662)
!4665 = !DILocation(line: 795, column: 41, scope: !4662)
!4666 = !DILocation(line: 795, column: 48, scope: !4662)
!4667 = !DILocation(line: 795, column: 54, scope: !4662)
!4668 = !DILocation(line: 795, column: 46, scope: !4662)
!4669 = !DILocation(line: 795, column: 32, scope: !4662)
!4670 = !DILocation(line: 795, column: 9, scope: !4662)
!4671 = !DILocation(line: 796, column: 24, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4663, file: !912, line: 795, column: 82)
!4673 = !DILocation(line: 796, column: 13, scope: !4672)
!4674 = !DILocation(line: 796, column: 17, scope: !4672)
!4675 = !DILocation(line: 796, column: 22, scope: !4672)
!4676 = !DILocation(line: 797, column: 24, scope: !4672)
!4677 = !DILocation(line: 797, column: 13, scope: !4672)
!4678 = !DILocation(line: 797, column: 17, scope: !4672)
!4679 = !DILocation(line: 797, column: 22, scope: !4672)
!4680 = !DILocation(line: 798, column: 28, scope: !4672)
!4681 = !DILocation(line: 798, column: 13, scope: !4672)
!4682 = !DILocation(line: 798, column: 17, scope: !4672)
!4683 = !DILocation(line: 798, column: 26, scope: !4672)
!4684 = !DILocation(line: 800, column: 13, scope: !4672)
!4685 = !DILocation(line: 800, column: 17, scope: !4672)
!4686 = !DILocation(line: 800, column: 22, scope: !4672)
!4687 = !DILocation(line: 801, column: 13, scope: !4672)
!4688 = !DILocation(line: 801, column: 17, scope: !4672)
!4689 = !DILocation(line: 801, column: 21, scope: !4672)
!4690 = !DILocation(line: 803, column: 18, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4672, file: !912, line: 803, column: 17)
!4692 = !DILocation(line: 803, column: 24, scope: !4691)
!4693 = !DILocation(line: 803, column: 39, scope: !4691)
!4694 = !DILocation(line: 803, column: 43, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !4691, file: !912, discriminator: 1)
!4696 = !DILocation(line: 803, column: 49, scope: !4695)
!4697 = !DILocation(line: 803, column: 55, scope: !4695)
!4698 = !DILocation(line: 803, column: 59, scope: !4699)
!4699 = !DILexicalBlockFile(scope: !4691, file: !912, discriminator: 2)
!4700 = !DILocation(line: 803, column: 65, scope: !4699)
!4701 = !DILocation(line: 803, column: 17, scope: !4699)
!4702 = !DILocation(line: 804, column: 31, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4691, file: !912, line: 803, column: 75)
!4704 = !DILocation(line: 804, column: 37, scope: !4703)
!4705 = !DILocation(line: 804, column: 17, scope: !4703)
!4706 = !DILocation(line: 804, column: 21, scope: !4703)
!4707 = !DILocation(line: 804, column: 29, scope: !4703)
!4708 = !DILocation(line: 805, column: 17, scope: !4703)
!4709 = !DILocation(line: 805, column: 21, scope: !4703)
!4710 = !DILocation(line: 805, column: 26, scope: !4703)
!4711 = !DILocation(line: 806, column: 17, scope: !4703)
!4712 = !DILocation(line: 806, column: 21, scope: !4703)
!4713 = !DILocation(line: 806, column: 26, scope: !4703)
!4714 = !DILocation(line: 807, column: 13, scope: !4703)
!4715 = !DILocation(line: 809, column: 17, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4672, file: !912, line: 809, column: 17)
!4717 = !DILocation(line: 809, column: 23, scope: !4716)
!4718 = !DILocation(line: 809, column: 38, scope: !4716)
!4719 = !DILocation(line: 809, column: 41, scope: !4720)
!4720 = !DILexicalBlockFile(scope: !4716, file: !912, discriminator: 1)
!4721 = !DILocation(line: 809, column: 17, scope: !4720)
!4722 = !DILocation(line: 810, column: 31, scope: !4716)
!4723 = !DILocation(line: 810, column: 39, scope: !4716)
!4724 = !DILocation(line: 810, column: 17, scope: !4716)
!4725 = !DILocation(line: 810, column: 21, scope: !4716)
!4726 = !DILocation(line: 810, column: 29, scope: !4716)
!4727 = !DILocation(line: 812, column: 17, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4672, file: !912, line: 812, column: 17)
!4729 = !DILocation(line: 812, column: 23, scope: !4728)
!4730 = !DILocation(line: 812, column: 34, scope: !4728)
!4731 = !DILocation(line: 812, column: 37, scope: !4732)
!4732 = !DILexicalBlockFile(scope: !4728, file: !912, discriminator: 1)
!4733 = !DILocation(line: 812, column: 17, scope: !4732)
!4734 = !DILocation(line: 814, column: 21, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !912, line: 814, column: 21)
!4736 = distinct !DILexicalBlock(scope: !4728, file: !912, line: 812, column: 45)
!4737 = !DILocation(line: 814, column: 21, scope: !4736)
!4738 = !DILocation(line: 815, column: 45, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !912, line: 814, column: 31)
!4740 = !DILocation(line: 815, column: 53, scope: !4739)
!4741 = !DILocation(line: 815, column: 59, scope: !4739)
!4742 = !DILocation(line: 815, column: 32, scope: !4739)
!4743 = !DILocation(line: 815, column: 21, scope: !4739)
!4744 = !DILocation(line: 815, column: 25, scope: !4739)
!4745 = !DILocation(line: 815, column: 30, scope: !4739)
!4746 = !DILocation(line: 816, column: 45, scope: !4739)
!4747 = !DILocation(line: 816, column: 53, scope: !4739)
!4748 = !DILocation(line: 816, column: 59, scope: !4739)
!4749 = !DILocation(line: 816, column: 32, scope: !4739)
!4750 = !DILocation(line: 816, column: 21, scope: !4739)
!4751 = !DILocation(line: 816, column: 25, scope: !4739)
!4752 = !DILocation(line: 816, column: 30, scope: !4739)
!4753 = !DILocation(line: 817, column: 17, scope: !4739)
!4754 = !DILocation(line: 818, column: 32, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4735, file: !912, line: 817, column: 24)
!4756 = !DILocation(line: 818, column: 40, scope: !4755)
!4757 = !DILocation(line: 818, column: 21, scope: !4755)
!4758 = !DILocation(line: 818, column: 25, scope: !4755)
!4759 = !DILocation(line: 818, column: 30, scope: !4755)
!4760 = !DILocation(line: 819, column: 32, scope: !4755)
!4761 = !DILocation(line: 819, column: 40, scope: !4755)
!4762 = !DILocation(line: 819, column: 21, scope: !4755)
!4763 = !DILocation(line: 819, column: 25, scope: !4755)
!4764 = !DILocation(line: 819, column: 30, scope: !4755)
!4765 = !DILocation(line: 821, column: 28, scope: !4736)
!4766 = !DILocation(line: 821, column: 32, scope: !4736)
!4767 = !DILocation(line: 821, column: 37, scope: !4736)
!4768 = !DILocation(line: 821, column: 40, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4736, file: !912, discriminator: 1)
!4770 = !DILocation(line: 821, column: 44, scope: !4769)
!4771 = !DILocation(line: 821, column: 37, scope: !4769)
!4772 = !DILocation(line: 821, column: 37, scope: !4773)
!4773 = !DILexicalBlockFile(scope: !4736, file: !912, discriminator: 2)
!4774 = !DILocation(line: 821, column: 25, scope: !4773)
!4775 = !DILocalVariable(name: "dmv_x", scope: !4776, file: !912, line: 823, type: !898)
!4776 = distinct !DILexicalBlock(scope: !4736, file: !912, line: 822, column: 17)
!4777 = !DILocation(line: 823, column: 25, scope: !4776)
!4778 = !DILocalVariable(name: "dmv_y", scope: !4776, file: !912, line: 823, type: !898)
!4779 = !DILocation(line: 823, column: 32, scope: !4776)
!4780 = !DILocalVariable(name: "cx", scope: !4776, file: !912, line: 823, type: !898)
!4781 = !DILocation(line: 823, column: 39, scope: !4776)
!4782 = !DILocalVariable(name: "cy", scope: !4776, file: !912, line: 823, type: !898)
!4783 = !DILocation(line: 823, column: 43, scope: !4776)
!4784 = !DILocation(line: 825, column: 29, scope: !4776)
!4785 = !DILocation(line: 825, column: 33, scope: !4776)
!4786 = !DILocation(line: 825, column: 41, scope: !4776)
!4787 = !DILocation(line: 825, column: 47, scope: !4776)
!4788 = !DILocation(line: 825, column: 38, scope: !4776)
!4789 = !DILocation(line: 825, column: 27, scope: !4776)
!4790 = !DILocation(line: 826, column: 29, scope: !4776)
!4791 = !DILocation(line: 826, column: 33, scope: !4776)
!4792 = !DILocation(line: 826, column: 41, scope: !4776)
!4793 = !DILocation(line: 826, column: 47, scope: !4776)
!4794 = !DILocation(line: 826, column: 38, scope: !4776)
!4795 = !DILocation(line: 826, column: 27, scope: !4776)
!4796 = !DILocation(line: 827, column: 26, scope: !4776)
!4797 = !DILocation(line: 827, column: 30, scope: !4776)
!4798 = !DILocation(line: 827, column: 37, scope: !4776)
!4799 = !DILocation(line: 827, column: 43, scope: !4776)
!4800 = !DILocation(line: 827, column: 35, scope: !4776)
!4801 = !DILocation(line: 827, column: 24, scope: !4776)
!4802 = !DILocation(line: 828, column: 26, scope: !4776)
!4803 = !DILocation(line: 828, column: 30, scope: !4776)
!4804 = !DILocation(line: 828, column: 37, scope: !4776)
!4805 = !DILocation(line: 828, column: 43, scope: !4776)
!4806 = !DILocation(line: 828, column: 35, scope: !4776)
!4807 = !DILocation(line: 828, column: 24, scope: !4776)
!4808 = !DILocation(line: 830, column: 26, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4776, file: !912, line: 830, column: 26)
!4810 = !DILocation(line: 830, column: 30, scope: !4809)
!4811 = !DILocation(line: 830, column: 37, scope: !4809)
!4812 = !DILocation(line: 830, column: 35, scope: !4809)
!4813 = !DILocation(line: 830, column: 43, scope: !4809)
!4814 = !DILocation(line: 831, column: 25, scope: !4809)
!4815 = !DILocation(line: 831, column: 28, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4809, file: !912, discriminator: 1)
!4817 = !DILocation(line: 831, column: 32, scope: !4816)
!4818 = !DILocation(line: 831, column: 39, scope: !4816)
!4819 = !DILocation(line: 831, column: 37, scope: !4816)
!4820 = !DILocation(line: 831, column: 47, scope: !4816)
!4821 = !DILocation(line: 831, column: 53, scope: !4816)
!4822 = !DILocation(line: 831, column: 45, scope: !4816)
!4823 = !DILocation(line: 831, column: 63, scope: !4816)
!4824 = !DILocation(line: 831, column: 61, scope: !4816)
!4825 = !DILocation(line: 831, column: 68, scope: !4816)
!4826 = !DILocation(line: 831, column: 74, scope: !4816)
!4827 = !DILocation(line: 831, column: 66, scope: !4816)
!4828 = !DILocation(line: 832, column: 25, scope: !4809)
!4829 = !DILocation(line: 832, column: 28, scope: !4816)
!4830 = !DILocation(line: 832, column: 32, scope: !4816)
!4831 = !DILocation(line: 832, column: 39, scope: !4816)
!4832 = !DILocation(line: 832, column: 37, scope: !4816)
!4833 = !DILocation(line: 832, column: 45, scope: !4816)
!4834 = !DILocation(line: 833, column: 25, scope: !4809)
!4835 = !DILocation(line: 833, column: 28, scope: !4816)
!4836 = !DILocation(line: 833, column: 32, scope: !4816)
!4837 = !DILocation(line: 833, column: 39, scope: !4816)
!4838 = !DILocation(line: 833, column: 37, scope: !4816)
!4839 = !DILocation(line: 833, column: 47, scope: !4816)
!4840 = !DILocation(line: 833, column: 53, scope: !4816)
!4841 = !DILocation(line: 833, column: 45, scope: !4816)
!4842 = !DILocation(line: 833, column: 63, scope: !4816)
!4843 = !DILocation(line: 833, column: 61, scope: !4816)
!4844 = !DILocation(line: 833, column: 68, scope: !4816)
!4845 = !DILocation(line: 833, column: 74, scope: !4816)
!4846 = !DILocation(line: 833, column: 66, scope: !4816)
!4847 = !DILocation(line: 830, column: 26, scope: !4848)
!4848 = !DILexicalBlockFile(scope: !4776, file: !912, discriminator: 1)
!4849 = !DILocation(line: 834, column: 32, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4809, file: !912, line: 833, column: 83)
!4851 = !DILocation(line: 834, column: 25, scope: !4850)
!4852 = !DILocation(line: 835, column: 25, scope: !4850)
!4853 = !DILocation(line: 838, column: 13, scope: !4736)
!4854 = !DILocation(line: 840, column: 15, scope: !4672)
!4855 = !DILocation(line: 841, column: 17, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4672, file: !912, line: 841, column: 17)
!4857 = !DILocation(line: 841, column: 17, scope: !4672)
!4858 = !DILocation(line: 842, column: 23, scope: !4856)
!4859 = !DILocation(line: 842, column: 17, scope: !4856)
!4860 = !DILocation(line: 843, column: 26, scope: !4672)
!4861 = !DILocation(line: 843, column: 32, scope: !4672)
!4862 = !DILocation(line: 843, column: 23, scope: !4672)
!4863 = !DILocation(line: 844, column: 9, scope: !4672)
!4864 = !DILocation(line: 795, column: 67, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4663, file: !912, discriminator: 2)
!4866 = !DILocation(line: 795, column: 73, scope: !4865)
!4867 = !DILocation(line: 795, column: 64, scope: !4865)
!4868 = !DILocation(line: 795, column: 9, scope: !4865)
!4869 = distinct !{!4869, !4870}
!4870 = !DILocation(line: 795, column: 9, scope: !4654)
!4871 = !DILocation(line: 845, column: 17, scope: !4654)
!4872 = !DILocation(line: 845, column: 14, scope: !4654)
!4873 = !DILocation(line: 846, column: 5, scope: !4654)
!4874 = !DILocation(line: 792, column: 64, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !4645, file: !912, discriminator: 2)
!4876 = !DILocation(line: 792, column: 70, scope: !4875)
!4877 = !DILocation(line: 792, column: 61, scope: !4875)
!4878 = !DILocation(line: 792, column: 5, scope: !4875)
!4879 = distinct !{!4879, !4880}
!4880 = !DILocation(line: 792, column: 5, scope: !4516)
!4881 = !DILocation(line: 848, column: 9, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4516, file: !912, line: 848, column: 9)
!4883 = !DILocation(line: 848, column: 15, scope: !4882)
!4884 = !DILocation(line: 848, column: 26, scope: !4882)
!4885 = !DILocation(line: 848, column: 29, scope: !4886)
!4886 = !DILexicalBlockFile(scope: !4882, file: !912, discriminator: 1)
!4887 = !DILocation(line: 848, column: 9, scope: !4886)
!4888 = !DILocation(line: 849, column: 23, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4882, file: !912, line: 848, column: 38)
!4890 = !DILocation(line: 849, column: 29, scope: !4889)
!4891 = !DILocation(line: 849, column: 40, scope: !4889)
!4892 = !DILocation(line: 849, column: 46, scope: !4889)
!4893 = !DILocation(line: 849, column: 37, scope: !4889)
!4894 = !DILocation(line: 849, column: 22, scope: !4889)
!4895 = !DILocation(line: 849, column: 20, scope: !4889)
!4896 = !DILocation(line: 850, column: 29, scope: !4889)
!4897 = !DILocation(line: 850, column: 35, scope: !4889)
!4898 = !DILocation(line: 850, column: 44, scope: !4889)
!4899 = !DILocation(line: 850, column: 28, scope: !4889)
!4900 = !DILocation(line: 850, column: 26, scope: !4889)
!4901 = !DILocation(line: 853, column: 18, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4889, file: !912, line: 853, column: 9)
!4903 = !DILocation(line: 853, column: 28, scope: !4902)
!4904 = !DILocation(line: 853, column: 34, scope: !4902)
!4905 = !DILocation(line: 853, column: 26, scope: !4902)
!4906 = !DILocation(line: 853, column: 14, scope: !4902)
!4907 = !DILocation(line: 853, column: 39, scope: !4908)
!4908 = !DILexicalBlockFile(scope: !4909, file: !912, discriminator: 1)
!4909 = distinct !DILexicalBlock(scope: !4902, file: !912, line: 853, column: 9)
!4910 = !DILocation(line: 853, column: 45, scope: !4908)
!4911 = !DILocation(line: 853, column: 51, scope: !4908)
!4912 = !DILocation(line: 853, column: 43, scope: !4908)
!4913 = !DILocation(line: 853, column: 9, scope: !4908)
!4914 = !DILocation(line: 854, column: 20, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4909, file: !912, line: 853, column: 73)
!4916 = !DILocation(line: 854, column: 24, scope: !4915)
!4917 = !DILocation(line: 854, column: 18, scope: !4915)
!4918 = !DILocation(line: 855, column: 20, scope: !4915)
!4919 = !DILocation(line: 855, column: 24, scope: !4915)
!4920 = !DILocation(line: 855, column: 18, scope: !4915)
!4921 = !DILocation(line: 856, column: 18, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4915, file: !912, line: 856, column: 17)
!4923 = !DILocation(line: 856, column: 24, scope: !4922)
!4924 = !DILocation(line: 856, column: 17, scope: !4915)
!4925 = !DILocation(line: 857, column: 25, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !912, line: 856, column: 36)
!4927 = !DILocation(line: 858, column: 13, scope: !4926)
!4928 = !DILocation(line: 859, column: 29, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4922, file: !912, line: 858, column: 20)
!4930 = !DILocation(line: 859, column: 34, scope: !4929)
!4931 = !DILocation(line: 859, column: 39, scope: !4929)
!4932 = !DILocation(line: 859, column: 48, scope: !4929)
!4933 = !DILocation(line: 859, column: 53, scope: !4929)
!4934 = !DILocation(line: 859, column: 45, scope: !4929)
!4935 = !DILocation(line: 859, column: 25, scope: !4929)
!4936 = !DILocation(line: 860, column: 22, scope: !4929)
!4937 = !DILocation(line: 861, column: 22, scope: !4929)
!4938 = !DILocation(line: 864, column: 22, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4915, file: !912, line: 864, column: 13)
!4940 = !DILocation(line: 864, column: 18, scope: !4939)
!4941 = !DILocation(line: 864, column: 27, scope: !4942)
!4942 = !DILexicalBlockFile(scope: !4943, file: !912, discriminator: 1)
!4943 = distinct !DILexicalBlock(scope: !4939, file: !912, line: 864, column: 13)
!4944 = !DILocation(line: 864, column: 33, scope: !4942)
!4945 = !DILocation(line: 864, column: 31, scope: !4942)
!4946 = !DILocation(line: 864, column: 13, scope: !4942)
!4947 = !DILocation(line: 866, column: 24, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4943, file: !912, line: 864, column: 52)
!4949 = !DILocation(line: 866, column: 28, scope: !4948)
!4950 = !DILocation(line: 866, column: 39, scope: !4948)
!4951 = !DILocation(line: 866, column: 45, scope: !4948)
!4952 = !DILocation(line: 866, column: 58, scope: !4948)
!4953 = !DILocation(line: 866, column: 62, scope: !4948)
!4954 = !DILocation(line: 866, column: 57, scope: !4948)
!4955 = !DILocation(line: 866, column: 72, scope: !4948)
!4956 = !DILocation(line: 866, column: 76, scope: !4948)
!4957 = !DILocation(line: 866, column: 70, scope: !4948)
!4958 = !DILocation(line: 866, column: 69, scope: !4948)
!4959 = !DILocation(line: 866, column: 83, scope: !4948)
!4960 = !DILocation(line: 866, column: 89, scope: !4948)
!4961 = !DILocation(line: 866, column: 81, scope: !4948)
!4962 = !DILocation(line: 866, column: 67, scope: !4948)
!4963 = !DILocation(line: 866, column: 54, scope: !4948)
!4964 = !DILocation(line: 866, column: 37, scope: !4948)
!4965 = !DILocation(line: 866, column: 22, scope: !4948)
!4966 = !DILocation(line: 867, column: 30, scope: !4948)
!4967 = !DILocation(line: 867, column: 36, scope: !4948)
!4968 = !DILocation(line: 867, column: 57, scope: !4948)
!4969 = !DILocation(line: 868, column: 30, scope: !4948)
!4970 = !DILocation(line: 868, column: 36, scope: !4948)
!4971 = !DILocation(line: 868, column: 48, scope: !4948)
!4972 = !DILocation(line: 867, column: 23, scope: !4948)
!4973 = !DILocation(line: 867, column: 21, scope: !4948)
!4974 = !DILocation(line: 869, column: 21, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4948, file: !912, line: 869, column: 21)
!4976 = !DILocation(line: 869, column: 25, scope: !4975)
!4977 = !DILocation(line: 869, column: 21, scope: !4948)
!4978 = !DILocation(line: 870, column: 28, scope: !4975)
!4979 = !DILocation(line: 870, column: 21, scope: !4975)
!4980 = !DILocation(line: 871, column: 13, scope: !4948)
!4981 = !DILocation(line: 864, column: 48, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !4943, file: !912, discriminator: 2)
!4983 = !DILocation(line: 864, column: 13, scope: !4982)
!4984 = distinct !{!4984, !4985}
!4985 = !DILocation(line: 864, column: 13, scope: !4915)
!4986 = !DILocation(line: 872, column: 9, scope: !4915)
!4987 = !DILocation(line: 853, column: 62, scope: !4988)
!4988 = !DILexicalBlockFile(scope: !4909, file: !912, discriminator: 2)
!4989 = !DILocation(line: 853, column: 69, scope: !4988)
!4990 = !DILocation(line: 853, column: 9, scope: !4988)
!4991 = distinct !{!4991, !4992}
!4992 = !DILocation(line: 853, column: 9, scope: !4889)
!4993 = !DILocation(line: 873, column: 5, scope: !4889)
!4994 = !DILocation(line: 875, column: 15, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4882, file: !912, line: 873, column: 12)
!4996 = !DILocation(line: 875, column: 21, scope: !4995)
!4997 = !DILocation(line: 875, column: 31, scope: !4995)
!4998 = !DILocation(line: 875, column: 37, scope: !4995)
!4999 = !DILocation(line: 875, column: 44, scope: !4995)
!5000 = !DILocation(line: 875, column: 50, scope: !4995)
!5001 = !DILocation(line: 875, column: 42, scope: !4995)
!5002 = !DILocation(line: 875, column: 29, scope: !4995)
!5003 = !DILocation(line: 875, column: 58, scope: !4995)
!5004 = !DILocation(line: 875, column: 64, scope: !4995)
!5005 = !DILocation(line: 875, column: 56, scope: !4995)
!5006 = !DILocation(line: 875, column: 13, scope: !4995)
!5007 = !DILocation(line: 876, column: 15, scope: !4995)
!5008 = !DILocation(line: 876, column: 21, scope: !4995)
!5009 = !DILocation(line: 876, column: 27, scope: !4995)
!5010 = !DILocation(line: 876, column: 33, scope: !4995)
!5011 = !DILocation(line: 876, column: 40, scope: !4995)
!5012 = !DILocation(line: 876, column: 46, scope: !4995)
!5013 = !DILocation(line: 876, column: 38, scope: !4995)
!5014 = !DILocation(line: 876, column: 25, scope: !4995)
!5015 = !DILocation(line: 876, column: 54, scope: !4995)
!5016 = !DILocation(line: 876, column: 60, scope: !4995)
!5017 = !DILocation(line: 876, column: 52, scope: !4995)
!5018 = !DILocation(line: 876, column: 13, scope: !4995)
!5019 = !DILocation(line: 877, column: 16, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4995, file: !912, line: 877, column: 9)
!5021 = !DILocation(line: 877, column: 14, scope: !5020)
!5022 = !DILocation(line: 877, column: 21, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !5024, file: !912, discriminator: 1)
!5024 = distinct !DILexicalBlock(scope: !5020, file: !912, line: 877, column: 9)
!5025 = !DILocation(line: 877, column: 25, scope: !5023)
!5026 = !DILocation(line: 877, column: 31, scope: !5023)
!5027 = !DILocation(line: 877, column: 23, scope: !5023)
!5028 = !DILocation(line: 877, column: 9, scope: !5023)
!5029 = !DILocation(line: 878, column: 20, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5024, file: !912, line: 877, column: 44)
!5031 = !DILocation(line: 878, column: 13, scope: !5030)
!5032 = !DILocation(line: 878, column: 25, scope: !5030)
!5033 = !DILocation(line: 878, column: 30, scope: !5030)
!5034 = !DILocation(line: 878, column: 36, scope: !5030)
!5035 = !DILocation(line: 878, column: 41, scope: !5030)
!5036 = !DILocation(line: 879, column: 20, scope: !5030)
!5037 = !DILocation(line: 879, column: 26, scope: !5030)
!5038 = !DILocation(line: 879, column: 17, scope: !5030)
!5039 = !DILocation(line: 880, column: 20, scope: !5030)
!5040 = !DILocation(line: 880, column: 26, scope: !5030)
!5041 = !DILocation(line: 880, column: 17, scope: !5030)
!5042 = !DILocation(line: 881, column: 9, scope: !5030)
!5043 = !DILocation(line: 877, column: 40, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !5024, file: !912, discriminator: 2)
!5045 = !DILocation(line: 877, column: 9, scope: !5044)
!5046 = distinct !{!5046, !5047}
!5047 = !DILocation(line: 877, column: 9, scope: !4995)
!5048 = !DILocation(line: 884, column: 5, scope: !4516)
!5049 = !DILocation(line: 885, column: 1, scope: !4516)
!5050 = distinct !DISubprogram(name: "ivi_dec_tile_data_size", scope: !912, file: !912, line: 479, type: !4247, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5051 = !DILocalVariable(name: "gb", arg: 1, scope: !5050, file: !912, line: 479, type: !1180)
!5052 = !DILocation(line: 479, column: 50, scope: !5050)
!5053 = !DILocalVariable(name: "len", scope: !5050, file: !912, line: 481, type: !898)
!5054 = !DILocation(line: 481, column: 9, scope: !5050)
!5055 = !DILocation(line: 483, column: 9, scope: !5050)
!5056 = !DILocation(line: 484, column: 19, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5050, file: !912, line: 484, column: 9)
!5058 = !DILocation(line: 484, column: 9, scope: !5057)
!5059 = !DILocation(line: 484, column: 9, scope: !5050)
!5060 = !DILocation(line: 485, column: 24, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !912, line: 484, column: 24)
!5062 = !DILocation(line: 485, column: 15, scope: !5061)
!5063 = !DILocation(line: 485, column: 13, scope: !5061)
!5064 = !DILocation(line: 486, column: 13, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5061, file: !912, line: 486, column: 13)
!5066 = !DILocation(line: 486, column: 17, scope: !5065)
!5067 = !DILocation(line: 486, column: 13, scope: !5061)
!5068 = !DILocation(line: 487, column: 33, scope: !5065)
!5069 = !DILocation(line: 487, column: 19, scope: !5065)
!5070 = !DILocation(line: 487, column: 17, scope: !5065)
!5071 = !DILocation(line: 487, column: 13, scope: !5065)
!5072 = !DILocation(line: 488, column: 5, scope: !5061)
!5073 = !DILocation(line: 491, column: 20, scope: !5050)
!5074 = !DILocation(line: 491, column: 5, scope: !5050)
!5075 = !DILocation(line: 493, column: 12, scope: !5050)
!5076 = !DILocation(line: 493, column: 5, scope: !5050)
!5077 = distinct !DISubprogram(name: "ivi_decode_blocks", scope: !912, file: !912, line: 622, type: !5078, isLocal: true, isDefinition: true, scopeLine: 624, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!898, !1180, !2165, !2206, !1199}
!5080 = !DILocation(line: 127, column: 87, scope: !4271, inlinedAt: !5081)
!5081 = distinct !DILocation(line: 661, column: 21, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5083, file: !912, line: 658, column: 13)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !912, line: 652, column: 69)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !912, line: 652, column: 5)
!5085 = distinct !DILexicalBlock(scope: !5077, file: !912, line: 652, column: 5)
!5086 = !DILocation(line: 127, column: 94, scope: !4271, inlinedAt: !5081)
!5087 = !DILocation(line: 127, column: 104, scope: !4271, inlinedAt: !5081)
!5088 = !DILocalVariable(name: "a", arg: 1, scope: !5089, file: !4120, line: 229, type: !898)
!5089 = distinct !DISubprogram(name: "av_clip_uintp2_c", scope: !4120, file: !4120, line: 229, type: !5090, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5090 = !DISubroutineType(types: !5091)
!5091 = !{!899, !898, !898}
!5092 = !DILocation(line: 229, column: 99, scope: !5089, inlinedAt: !5093)
!5093 = distinct !DILocation(line: 659, column: 21, scope: !5082)
!5094 = !DILocalVariable(name: "p", arg: 2, scope: !5089, file: !4120, line: 229, type: !898)
!5095 = !DILocation(line: 229, column: 106, scope: !5089, inlinedAt: !5093)
!5096 = !DILocalVariable(name: "gb", arg: 1, scope: !5077, file: !912, line: 622, type: !1180)
!5097 = !DILocation(line: 622, column: 45, scope: !5077)
!5098 = !DILocalVariable(name: "band", arg: 2, scope: !5077, file: !912, line: 622, type: !2165)
!5099 = !DILocation(line: 622, column: 62, scope: !5077)
!5100 = !DILocalVariable(name: "tile", arg: 3, scope: !5077, file: !912, line: 623, type: !2206)
!5101 = !DILocation(line: 623, column: 39, scope: !5077)
!5102 = !DILocalVariable(name: "avctx", arg: 4, scope: !5077, file: !912, line: 623, type: !1199)
!5103 = !DILocation(line: 623, column: 61, scope: !5077)
!5104 = !DILocalVariable(name: "mbn", scope: !5077, file: !912, line: 625, type: !898)
!5105 = !DILocation(line: 625, column: 9, scope: !5077)
!5106 = !DILocalVariable(name: "blk", scope: !5077, file: !912, line: 625, type: !898)
!5107 = !DILocation(line: 625, column: 14, scope: !5077)
!5108 = !DILocalVariable(name: "num_blocks", scope: !5077, file: !912, line: 625, type: !898)
!5109 = !DILocation(line: 625, column: 19, scope: !5077)
!5110 = !DILocalVariable(name: "blk_size", scope: !5077, file: !912, line: 625, type: !898)
!5111 = !DILocation(line: 625, column: 31, scope: !5077)
!5112 = !DILocalVariable(name: "ret", scope: !5077, file: !912, line: 625, type: !898)
!5113 = !DILocation(line: 625, column: 41, scope: !5077)
!5114 = !DILocalVariable(name: "is_intra", scope: !5077, file: !912, line: 625, type: !898)
!5115 = !DILocation(line: 625, column: 46, scope: !5077)
!5116 = !DILocalVariable(name: "mc_type", scope: !5077, file: !912, line: 626, type: !898)
!5117 = !DILocation(line: 626, column: 9, scope: !5077)
!5118 = !DILocalVariable(name: "mc_type2", scope: !5077, file: !912, line: 626, type: !898)
!5119 = !DILocation(line: 626, column: 22, scope: !5077)
!5120 = !DILocalVariable(name: "mv_x", scope: !5077, file: !912, line: 627, type: !898)
!5121 = !DILocation(line: 627, column: 9, scope: !5077)
!5122 = !DILocalVariable(name: "mv_y", scope: !5077, file: !912, line: 627, type: !898)
!5123 = !DILocation(line: 627, column: 19, scope: !5077)
!5124 = !DILocalVariable(name: "mv_x2", scope: !5077, file: !912, line: 627, type: !898)
!5125 = !DILocation(line: 627, column: 29, scope: !5077)
!5126 = !DILocalVariable(name: "mv_y2", scope: !5077, file: !912, line: 627, type: !898)
!5127 = !DILocation(line: 627, column: 40, scope: !5077)
!5128 = !DILocalVariable(name: "prev_dc", scope: !5077, file: !912, line: 628, type: !976)
!5129 = !DILocation(line: 628, column: 13, scope: !5077)
!5130 = !DILocalVariable(name: "cbp", scope: !5077, file: !912, line: 629, type: !906)
!5131 = !DILocation(line: 629, column: 14, scope: !5077)
!5132 = !DILocalVariable(name: "quant", scope: !5077, file: !912, line: 629, type: !906)
!5133 = !DILocation(line: 629, column: 19, scope: !5077)
!5134 = !DILocalVariable(name: "buf_offs", scope: !5077, file: !912, line: 629, type: !906)
!5135 = !DILocation(line: 629, column: 26, scope: !5077)
!5136 = !DILocalVariable(name: "mb", scope: !5077, file: !912, line: 630, type: !2219)
!5137 = !DILocation(line: 630, column: 16, scope: !5077)
!5138 = !DILocalVariable(name: "mc_with_delta_func", scope: !5077, file: !912, line: 631, type: !4562)
!5139 = !DILocation(line: 631, column: 17, scope: !5077)
!5140 = !DILocalVariable(name: "mc_no_delta_func", scope: !5077, file: !912, line: 631, type: !4562)
!5141 = !DILocation(line: 631, column: 37, scope: !5077)
!5142 = !DILocalVariable(name: "mc_avg_with_delta_func", scope: !5077, file: !912, line: 632, type: !5143)
!5143 = !DIDerivedType(tag: DW_TAG_typedef, name: "ivi_mc_avg_func", file: !912, line: 78, baseType: !5144)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64, align: 64)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{null, !2177, !4142, !4142, !2183, !898, !898}
!5147 = !DILocation(line: 632, column: 21, scope: !5077)
!5148 = !DILocalVariable(name: "mc_avg_no_delta_func", scope: !5077, file: !912, line: 632, type: !5143)
!5149 = !DILocation(line: 632, column: 45, scope: !5077)
!5150 = !DILocalVariable(name: "scale_tab", scope: !5077, file: !912, line: 633, type: !1186)
!5151 = !DILocation(line: 633, column: 20, scope: !5077)
!5152 = !DILocation(line: 636, column: 13, scope: !5077)
!5153 = !DILocation(line: 637, column: 16, scope: !5077)
!5154 = !DILocation(line: 637, column: 22, scope: !5077)
!5155 = !DILocation(line: 637, column: 14, scope: !5077)
!5156 = !DILocation(line: 639, column: 19, scope: !5077)
!5157 = !DILocation(line: 639, column: 25, scope: !5077)
!5158 = !DILocation(line: 639, column: 36, scope: !5077)
!5159 = !DILocation(line: 639, column: 33, scope: !5077)
!5160 = !DILocation(line: 639, column: 18, scope: !5077)
!5161 = !DILocation(line: 639, column: 16, scope: !5077)
!5162 = !DILocation(line: 640, column: 9, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5077, file: !912, line: 640, column: 9)
!5164 = !DILocation(line: 640, column: 18, scope: !5163)
!5165 = !DILocation(line: 640, column: 9, scope: !5077)
!5166 = !DILocation(line: 641, column: 28, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !912, line: 640, column: 24)
!5168 = !DILocation(line: 642, column: 26, scope: !5167)
!5169 = !DILocation(line: 643, column: 32, scope: !5167)
!5170 = !DILocation(line: 644, column: 30, scope: !5167)
!5171 = !DILocation(line: 645, column: 5, scope: !5167)
!5172 = !DILocation(line: 646, column: 28, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5163, file: !912, line: 645, column: 12)
!5174 = !DILocation(line: 647, column: 26, scope: !5173)
!5175 = !DILocation(line: 648, column: 32, scope: !5173)
!5176 = !DILocation(line: 649, column: 30, scope: !5173)
!5177 = !DILocation(line: 652, column: 14, scope: !5085)
!5178 = !DILocation(line: 652, column: 24, scope: !5085)
!5179 = !DILocation(line: 652, column: 30, scope: !5085)
!5180 = !DILocation(line: 652, column: 22, scope: !5085)
!5181 = !DILocation(line: 652, column: 10, scope: !5085)
!5182 = !DILocation(line: 652, column: 35, scope: !5183)
!5183 = !DILexicalBlockFile(scope: !5084, file: !912, discriminator: 1)
!5184 = !DILocation(line: 652, column: 41, scope: !5183)
!5185 = !DILocation(line: 652, column: 47, scope: !5183)
!5186 = !DILocation(line: 652, column: 39, scope: !5183)
!5187 = !DILocation(line: 652, column: 5, scope: !5183)
!5188 = !DILocation(line: 653, column: 21, scope: !5083)
!5189 = !DILocation(line: 653, column: 25, scope: !5083)
!5190 = !DILocation(line: 653, column: 20, scope: !5083)
!5191 = !DILocation(line: 653, column: 18, scope: !5083)
!5192 = !DILocation(line: 654, column: 15, scope: !5083)
!5193 = !DILocation(line: 654, column: 19, scope: !5083)
!5194 = !DILocation(line: 654, column: 13, scope: !5083)
!5195 = !DILocation(line: 655, column: 20, scope: !5083)
!5196 = !DILocation(line: 655, column: 24, scope: !5083)
!5197 = !DILocation(line: 655, column: 18, scope: !5083)
!5198 = !DILocation(line: 657, column: 17, scope: !5083)
!5199 = !DILocation(line: 657, column: 23, scope: !5083)
!5200 = !DILocation(line: 657, column: 36, scope: !5083)
!5201 = !DILocation(line: 657, column: 40, scope: !5083)
!5202 = !DILocation(line: 657, column: 34, scope: !5083)
!5203 = !DILocation(line: 657, column: 15, scope: !5083)
!5204 = !DILocation(line: 658, column: 13, scope: !5082)
!5205 = !DILocation(line: 658, column: 20, scope: !5082)
!5206 = !DILocation(line: 658, column: 29, scope: !5082)
!5207 = !DILocation(line: 658, column: 13, scope: !5083)
!5208 = !DILocation(line: 659, column: 38, scope: !5082)
!5209 = !DILocation(line: 659, column: 21, scope: !5082)
!5210 = !DILocation(line: 231, column: 9, scope: !5211, inlinedAt: !5093)
!5211 = distinct !DILexicalBlock(scope: !5089, file: !4120, line: 231, column: 9)
!5212 = !DILocation(line: 231, column: 19, scope: !5211, inlinedAt: !5093)
!5213 = !DILocation(line: 231, column: 17, scope: !5211, inlinedAt: !5093)
!5214 = !DILocation(line: 231, column: 22, scope: !5211, inlinedAt: !5093)
!5215 = !DILocation(line: 231, column: 13, scope: !5211, inlinedAt: !5093)
!5216 = !DILocation(line: 231, column: 11, scope: !5211, inlinedAt: !5093)
!5217 = !DILocation(line: 231, column: 9, scope: !5089, inlinedAt: !5093)
!5218 = !DILocation(line: 231, column: 37, scope: !5219, inlinedAt: !5093)
!5219 = !DILexicalBlockFile(scope: !5211, file: !4120, discriminator: 1)
!5220 = !DILocation(line: 231, column: 36, scope: !5219, inlinedAt: !5093)
!5221 = !DILocation(line: 231, column: 40, scope: !5219, inlinedAt: !5093)
!5222 = !DILocation(line: 231, column: 53, scope: !5219, inlinedAt: !5093)
!5223 = !DILocation(line: 231, column: 51, scope: !5219, inlinedAt: !5093)
!5224 = !DILocation(line: 231, column: 56, scope: !5219, inlinedAt: !5093)
!5225 = !DILocation(line: 231, column: 46, scope: !5219, inlinedAt: !5093)
!5226 = !DILocation(line: 231, column: 28, scope: !5219, inlinedAt: !5093)
!5227 = !DILocation(line: 232, column: 17, scope: !5211, inlinedAt: !5093)
!5228 = !DILocation(line: 232, column: 10, scope: !5211, inlinedAt: !5093)
!5229 = !DILocation(line: 233, column: 1, scope: !5089, inlinedAt: !5093)
!5230 = !DILocation(line: 659, column: 19, scope: !5082)
!5231 = !DILocation(line: 659, column: 13, scope: !5082)
!5232 = !DILocation(line: 661, column: 31, scope: !5082)
!5233 = !DILocation(line: 661, column: 21, scope: !5082)
!5234 = !DILocation(line: 132, column: 9, scope: !4295, inlinedAt: !5081)
!5235 = !DILocation(line: 132, column: 13, scope: !4295, inlinedAt: !5081)
!5236 = !DILocation(line: 132, column: 11, scope: !4295, inlinedAt: !5081)
!5237 = !DILocation(line: 132, column: 9, scope: !4271, inlinedAt: !5081)
!5238 = !DILocation(line: 132, column: 26, scope: !4300, inlinedAt: !5081)
!5239 = !DILocation(line: 132, column: 19, scope: !4300, inlinedAt: !5081)
!5240 = !DILocation(line: 133, column: 14, scope: !4303, inlinedAt: !5081)
!5241 = !DILocation(line: 133, column: 18, scope: !4303, inlinedAt: !5081)
!5242 = !DILocation(line: 133, column: 16, scope: !4303, inlinedAt: !5081)
!5243 = !DILocation(line: 133, column: 14, scope: !4295, inlinedAt: !5081)
!5244 = !DILocation(line: 133, column: 31, scope: !4308, inlinedAt: !5081)
!5245 = !DILocation(line: 133, column: 24, scope: !4308, inlinedAt: !5081)
!5246 = !DILocation(line: 134, column: 17, scope: !4303, inlinedAt: !5081)
!5247 = !DILocation(line: 134, column: 10, scope: !4303, inlinedAt: !5081)
!5248 = !DILocation(line: 135, column: 1, scope: !4271, inlinedAt: !5081)
!5249 = !DILocation(line: 661, column: 19, scope: !5082)
!5250 = !DILocation(line: 663, column: 21, scope: !5083)
!5251 = !DILocation(line: 663, column: 32, scope: !5252)
!5252 = !DILexicalBlockFile(scope: !5083, file: !912, discriminator: 1)
!5253 = !DILocation(line: 663, column: 38, scope: !5252)
!5254 = !DILocation(line: 663, column: 21, scope: !5252)
!5255 = !DILocation(line: 663, column: 52, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !5083, file: !912, discriminator: 2)
!5257 = !DILocation(line: 663, column: 58, scope: !5256)
!5258 = !DILocation(line: 663, column: 21, scope: !5256)
!5259 = !DILocation(line: 663, column: 21, scope: !5260)
!5260 = !DILexicalBlockFile(scope: !5083, file: !912, discriminator: 3)
!5261 = !DILocation(line: 663, column: 19, scope: !5260)
!5262 = !DILocation(line: 664, column: 13, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5083, file: !912, line: 664, column: 13)
!5264 = !DILocation(line: 664, column: 13, scope: !5083)
!5265 = !DILocation(line: 665, column: 31, scope: !5263)
!5266 = !DILocation(line: 665, column: 21, scope: !5263)
!5267 = !DILocation(line: 665, column: 19, scope: !5263)
!5268 = !DILocation(line: 665, column: 13, scope: !5263)
!5269 = !DILocation(line: 667, column: 14, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5083, file: !912, line: 667, column: 13)
!5271 = !DILocation(line: 667, column: 13, scope: !5083)
!5272 = !DILocation(line: 668, column: 20, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !912, line: 667, column: 24)
!5274 = !DILocation(line: 668, column: 24, scope: !5273)
!5275 = !DILocation(line: 668, column: 18, scope: !5273)
!5276 = !DILocation(line: 669, column: 20, scope: !5273)
!5277 = !DILocation(line: 669, column: 24, scope: !5273)
!5278 = !DILocation(line: 669, column: 18, scope: !5273)
!5279 = !DILocation(line: 670, column: 21, scope: !5273)
!5280 = !DILocation(line: 670, column: 25, scope: !5273)
!5281 = !DILocation(line: 670, column: 19, scope: !5273)
!5282 = !DILocation(line: 671, column: 21, scope: !5273)
!5283 = !DILocation(line: 671, column: 25, scope: !5273)
!5284 = !DILocation(line: 671, column: 19, scope: !5273)
!5285 = !DILocation(line: 672, column: 17, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5273, file: !912, line: 672, column: 17)
!5287 = !DILocation(line: 672, column: 23, scope: !5286)
!5288 = !DILocation(line: 672, column: 17, scope: !5273)
!5289 = !DILocation(line: 673, column: 29, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5286, file: !912, line: 672, column: 35)
!5291 = !DILocation(line: 673, column: 34, scope: !5290)
!5292 = !DILocation(line: 673, column: 39, scope: !5290)
!5293 = !DILocation(line: 673, column: 48, scope: !5290)
!5294 = !DILocation(line: 673, column: 53, scope: !5290)
!5295 = !DILocation(line: 673, column: 45, scope: !5290)
!5296 = !DILocation(line: 673, column: 25, scope: !5290)
!5297 = !DILocation(line: 674, column: 30, scope: !5290)
!5298 = !DILocation(line: 674, column: 36, scope: !5290)
!5299 = !DILocation(line: 674, column: 41, scope: !5290)
!5300 = !DILocation(line: 674, column: 50, scope: !5290)
!5301 = !DILocation(line: 674, column: 56, scope: !5290)
!5302 = !DILocation(line: 674, column: 47, scope: !5290)
!5303 = !DILocation(line: 674, column: 26, scope: !5290)
!5304 = !DILocation(line: 675, column: 22, scope: !5290)
!5305 = !DILocation(line: 676, column: 22, scope: !5290)
!5306 = !DILocation(line: 677, column: 23, scope: !5290)
!5307 = !DILocation(line: 678, column: 23, scope: !5290)
!5308 = !DILocation(line: 679, column: 13, scope: !5290)
!5309 = !DILocation(line: 680, column: 17, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5273, file: !912, line: 680, column: 17)
!5311 = !DILocation(line: 680, column: 21, scope: !5310)
!5312 = !DILocation(line: 680, column: 26, scope: !5310)
!5313 = !DILocation(line: 680, column: 17, scope: !5273)
!5314 = !DILocation(line: 681, column: 25, scope: !5310)
!5315 = !DILocation(line: 681, column: 17, scope: !5310)
!5316 = !DILocation(line: 682, column: 17, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5273, file: !912, line: 682, column: 17)
!5318 = !DILocation(line: 682, column: 21, scope: !5317)
!5319 = !DILocation(line: 682, column: 26, scope: !5317)
!5320 = !DILocation(line: 682, column: 31, scope: !5317)
!5321 = !DILocation(line: 682, column: 34, scope: !5322)
!5322 = !DILexicalBlockFile(scope: !5317, file: !912, discriminator: 1)
!5323 = !DILocation(line: 682, column: 38, scope: !5322)
!5324 = !DILocation(line: 682, column: 43, scope: !5322)
!5325 = !DILocation(line: 682, column: 17, scope: !5322)
!5326 = !DILocation(line: 683, column: 26, scope: !5317)
!5327 = !DILocation(line: 683, column: 17, scope: !5317)
!5328 = !DILocation(line: 684, column: 17, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5273, file: !912, line: 684, column: 17)
!5330 = !DILocation(line: 684, column: 21, scope: !5329)
!5331 = !DILocation(line: 684, column: 17, scope: !5273)
!5332 = !DILocalVariable(name: "dmv_x", scope: !5333, file: !912, line: 685, type: !898)
!5333 = distinct !DILexicalBlock(scope: !5329, file: !912, line: 684, column: 27)
!5334 = !DILocation(line: 685, column: 21, scope: !5333)
!5335 = !DILocalVariable(name: "dmv_y", scope: !5333, file: !912, line: 685, type: !898)
!5336 = !DILocation(line: 685, column: 28, scope: !5333)
!5337 = !DILocalVariable(name: "cx", scope: !5333, file: !912, line: 685, type: !898)
!5338 = !DILocation(line: 685, column: 35, scope: !5333)
!5339 = !DILocalVariable(name: "cy", scope: !5333, file: !912, line: 685, type: !898)
!5340 = !DILocation(line: 685, column: 39, scope: !5333)
!5341 = !DILocation(line: 687, column: 25, scope: !5333)
!5342 = !DILocation(line: 687, column: 29, scope: !5333)
!5343 = !DILocation(line: 687, column: 37, scope: !5333)
!5344 = !DILocation(line: 687, column: 43, scope: !5333)
!5345 = !DILocation(line: 687, column: 34, scope: !5333)
!5346 = !DILocation(line: 687, column: 23, scope: !5333)
!5347 = !DILocation(line: 688, column: 25, scope: !5333)
!5348 = !DILocation(line: 688, column: 29, scope: !5333)
!5349 = !DILocation(line: 688, column: 37, scope: !5333)
!5350 = !DILocation(line: 688, column: 43, scope: !5333)
!5351 = !DILocation(line: 688, column: 34, scope: !5333)
!5352 = !DILocation(line: 688, column: 23, scope: !5333)
!5353 = !DILocation(line: 689, column: 22, scope: !5333)
!5354 = !DILocation(line: 689, column: 26, scope: !5333)
!5355 = !DILocation(line: 689, column: 33, scope: !5333)
!5356 = !DILocation(line: 689, column: 39, scope: !5333)
!5357 = !DILocation(line: 689, column: 31, scope: !5333)
!5358 = !DILocation(line: 689, column: 20, scope: !5333)
!5359 = !DILocation(line: 690, column: 22, scope: !5333)
!5360 = !DILocation(line: 690, column: 26, scope: !5333)
!5361 = !DILocation(line: 690, column: 33, scope: !5333)
!5362 = !DILocation(line: 690, column: 39, scope: !5333)
!5363 = !DILocation(line: 690, column: 31, scope: !5333)
!5364 = !DILocation(line: 690, column: 20, scope: !5333)
!5365 = !DILocation(line: 692, column: 21, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5333, file: !912, line: 692, column: 21)
!5367 = !DILocation(line: 692, column: 25, scope: !5366)
!5368 = !DILocation(line: 692, column: 32, scope: !5366)
!5369 = !DILocation(line: 692, column: 30, scope: !5366)
!5370 = !DILocation(line: 692, column: 38, scope: !5366)
!5371 = !DILocation(line: 692, column: 42, scope: !5366)
!5372 = !DILocation(line: 693, column: 21, scope: !5366)
!5373 = !DILocation(line: 693, column: 25, scope: !5366)
!5374 = !DILocation(line: 693, column: 32, scope: !5366)
!5375 = !DILocation(line: 693, column: 30, scope: !5366)
!5376 = !DILocation(line: 693, column: 40, scope: !5366)
!5377 = !DILocation(line: 693, column: 46, scope: !5366)
!5378 = !DILocation(line: 693, column: 38, scope: !5366)
!5379 = !DILocation(line: 693, column: 56, scope: !5366)
!5380 = !DILocation(line: 693, column: 54, scope: !5366)
!5381 = !DILocation(line: 693, column: 61, scope: !5366)
!5382 = !DILocation(line: 693, column: 67, scope: !5366)
!5383 = !DILocation(line: 693, column: 59, scope: !5366)
!5384 = !DILocation(line: 693, column: 73, scope: !5366)
!5385 = !DILocation(line: 694, column: 21, scope: !5366)
!5386 = !DILocation(line: 694, column: 25, scope: !5366)
!5387 = !DILocation(line: 694, column: 32, scope: !5366)
!5388 = !DILocation(line: 694, column: 30, scope: !5366)
!5389 = !DILocation(line: 694, column: 38, scope: !5366)
!5390 = !DILocation(line: 694, column: 42, scope: !5366)
!5391 = !DILocation(line: 695, column: 21, scope: !5366)
!5392 = !DILocation(line: 695, column: 25, scope: !5366)
!5393 = !DILocation(line: 695, column: 32, scope: !5366)
!5394 = !DILocation(line: 695, column: 30, scope: !5366)
!5395 = !DILocation(line: 695, column: 40, scope: !5366)
!5396 = !DILocation(line: 695, column: 46, scope: !5366)
!5397 = !DILocation(line: 695, column: 38, scope: !5366)
!5398 = !DILocation(line: 695, column: 56, scope: !5366)
!5399 = !DILocation(line: 695, column: 54, scope: !5366)
!5400 = !DILocation(line: 695, column: 61, scope: !5366)
!5401 = !DILocation(line: 695, column: 67, scope: !5366)
!5402 = !DILocation(line: 695, column: 59, scope: !5366)
!5403 = !DILocation(line: 692, column: 21, scope: !5404)
!5404 = !DILexicalBlockFile(scope: !5333, file: !912, discriminator: 1)
!5405 = !DILocation(line: 696, column: 21, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5366, file: !912, line: 695, column: 76)
!5407 = !DILocation(line: 698, column: 13, scope: !5333)
!5408 = !DILocation(line: 699, column: 17, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5273, file: !912, line: 699, column: 17)
!5410 = !DILocation(line: 699, column: 21, scope: !5409)
!5411 = !DILocation(line: 699, column: 26, scope: !5409)
!5412 = !DILocation(line: 699, column: 31, scope: !5409)
!5413 = !DILocation(line: 699, column: 34, scope: !5414)
!5414 = !DILexicalBlockFile(scope: !5409, file: !912, discriminator: 1)
!5415 = !DILocation(line: 699, column: 38, scope: !5414)
!5416 = !DILocation(line: 699, column: 43, scope: !5414)
!5417 = !DILocation(line: 699, column: 17, scope: !5414)
!5418 = !DILocalVariable(name: "dmv_x", scope: !5419, file: !912, line: 700, type: !898)
!5419 = distinct !DILexicalBlock(scope: !5409, file: !912, line: 699, column: 49)
!5420 = !DILocation(line: 700, column: 21, scope: !5419)
!5421 = !DILocalVariable(name: "dmv_y", scope: !5419, file: !912, line: 700, type: !898)
!5422 = !DILocation(line: 700, column: 28, scope: !5419)
!5423 = !DILocalVariable(name: "cx", scope: !5419, file: !912, line: 700, type: !898)
!5424 = !DILocation(line: 700, column: 35, scope: !5419)
!5425 = !DILocalVariable(name: "cy", scope: !5419, file: !912, line: 700, type: !898)
!5426 = !DILocation(line: 700, column: 39, scope: !5419)
!5427 = !DILocation(line: 702, column: 25, scope: !5419)
!5428 = !DILocation(line: 702, column: 29, scope: !5419)
!5429 = !DILocation(line: 702, column: 39, scope: !5419)
!5430 = !DILocation(line: 702, column: 45, scope: !5419)
!5431 = !DILocation(line: 702, column: 36, scope: !5419)
!5432 = !DILocation(line: 702, column: 23, scope: !5419)
!5433 = !DILocation(line: 703, column: 25, scope: !5419)
!5434 = !DILocation(line: 703, column: 29, scope: !5419)
!5435 = !DILocation(line: 703, column: 39, scope: !5419)
!5436 = !DILocation(line: 703, column: 45, scope: !5419)
!5437 = !DILocation(line: 703, column: 36, scope: !5419)
!5438 = !DILocation(line: 703, column: 23, scope: !5419)
!5439 = !DILocation(line: 704, column: 22, scope: !5419)
!5440 = !DILocation(line: 704, column: 26, scope: !5419)
!5441 = !DILocation(line: 704, column: 35, scope: !5419)
!5442 = !DILocation(line: 704, column: 41, scope: !5419)
!5443 = !DILocation(line: 704, column: 33, scope: !5419)
!5444 = !DILocation(line: 704, column: 20, scope: !5419)
!5445 = !DILocation(line: 705, column: 22, scope: !5419)
!5446 = !DILocation(line: 705, column: 26, scope: !5419)
!5447 = !DILocation(line: 705, column: 35, scope: !5419)
!5448 = !DILocation(line: 705, column: 41, scope: !5419)
!5449 = !DILocation(line: 705, column: 33, scope: !5419)
!5450 = !DILocation(line: 705, column: 20, scope: !5419)
!5451 = !DILocation(line: 707, column: 21, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5419, file: !912, line: 707, column: 21)
!5453 = !DILocation(line: 707, column: 25, scope: !5452)
!5454 = !DILocation(line: 707, column: 32, scope: !5452)
!5455 = !DILocation(line: 707, column: 30, scope: !5452)
!5456 = !DILocation(line: 707, column: 38, scope: !5452)
!5457 = !DILocation(line: 707, column: 42, scope: !5452)
!5458 = !DILocation(line: 708, column: 21, scope: !5452)
!5459 = !DILocation(line: 708, column: 25, scope: !5452)
!5460 = !DILocation(line: 708, column: 32, scope: !5452)
!5461 = !DILocation(line: 708, column: 30, scope: !5452)
!5462 = !DILocation(line: 708, column: 40, scope: !5452)
!5463 = !DILocation(line: 708, column: 46, scope: !5452)
!5464 = !DILocation(line: 708, column: 38, scope: !5452)
!5465 = !DILocation(line: 708, column: 56, scope: !5452)
!5466 = !DILocation(line: 708, column: 54, scope: !5452)
!5467 = !DILocation(line: 708, column: 61, scope: !5452)
!5468 = !DILocation(line: 708, column: 67, scope: !5452)
!5469 = !DILocation(line: 708, column: 59, scope: !5452)
!5470 = !DILocation(line: 708, column: 73, scope: !5452)
!5471 = !DILocation(line: 709, column: 21, scope: !5452)
!5472 = !DILocation(line: 709, column: 25, scope: !5452)
!5473 = !DILocation(line: 709, column: 32, scope: !5452)
!5474 = !DILocation(line: 709, column: 30, scope: !5452)
!5475 = !DILocation(line: 709, column: 38, scope: !5452)
!5476 = !DILocation(line: 709, column: 42, scope: !5452)
!5477 = !DILocation(line: 710, column: 21, scope: !5452)
!5478 = !DILocation(line: 710, column: 25, scope: !5452)
!5479 = !DILocation(line: 710, column: 32, scope: !5452)
!5480 = !DILocation(line: 710, column: 30, scope: !5452)
!5481 = !DILocation(line: 710, column: 40, scope: !5452)
!5482 = !DILocation(line: 710, column: 46, scope: !5452)
!5483 = !DILocation(line: 710, column: 38, scope: !5452)
!5484 = !DILocation(line: 710, column: 56, scope: !5452)
!5485 = !DILocation(line: 710, column: 54, scope: !5452)
!5486 = !DILocation(line: 710, column: 61, scope: !5452)
!5487 = !DILocation(line: 710, column: 67, scope: !5452)
!5488 = !DILocation(line: 710, column: 59, scope: !5452)
!5489 = !DILocation(line: 707, column: 21, scope: !5490)
!5490 = !DILexicalBlockFile(scope: !5419, file: !912, discriminator: 1)
!5491 = !DILocation(line: 711, column: 21, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5452, file: !912, line: 710, column: 76)
!5493 = !DILocation(line: 713, column: 13, scope: !5419)
!5494 = !DILocation(line: 714, column: 9, scope: !5273)
!5495 = !DILocation(line: 716, column: 18, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5083, file: !912, line: 716, column: 9)
!5497 = !DILocation(line: 716, column: 14, scope: !5496)
!5498 = !DILocation(line: 716, column: 23, scope: !5499)
!5499 = !DILexicalBlockFile(scope: !5500, file: !912, discriminator: 1)
!5500 = distinct !DILexicalBlock(scope: !5496, file: !912, line: 716, column: 9)
!5501 = !DILocation(line: 716, column: 29, scope: !5499)
!5502 = !DILocation(line: 716, column: 27, scope: !5499)
!5503 = !DILocation(line: 716, column: 9, scope: !5499)
!5504 = !DILocation(line: 718, column: 17, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !912, line: 718, column: 17)
!5506 = distinct !DILexicalBlock(scope: !5500, file: !912, line: 716, column: 48)
!5507 = !DILocation(line: 718, column: 21, scope: !5505)
!5508 = !DILocation(line: 718, column: 17, scope: !5506)
!5509 = !DILocation(line: 719, column: 29, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5505, file: !912, line: 718, column: 26)
!5511 = !DILocation(line: 719, column: 26, scope: !5510)
!5512 = !DILocation(line: 720, column: 13, scope: !5510)
!5513 = !DILocation(line: 720, column: 24, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !5515, file: !912, discriminator: 1)
!5515 = distinct !DILexicalBlock(scope: !5505, file: !912, line: 720, column: 24)
!5516 = !DILocation(line: 720, column: 28, scope: !5514)
!5517 = !DILocation(line: 721, column: 29, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5515, file: !912, line: 720, column: 34)
!5519 = !DILocation(line: 721, column: 26, scope: !5518)
!5520 = !DILocation(line: 722, column: 29, scope: !5518)
!5521 = !DILocation(line: 722, column: 40, scope: !5518)
!5522 = !DILocation(line: 722, column: 46, scope: !5518)
!5523 = !DILocation(line: 722, column: 38, scope: !5518)
!5524 = !DILocation(line: 722, column: 26, scope: !5518)
!5525 = !DILocation(line: 723, column: 13, scope: !5518)
!5526 = !DILocation(line: 725, column: 17, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5506, file: !912, line: 725, column: 17)
!5528 = !DILocation(line: 725, column: 21, scope: !5527)
!5529 = !DILocation(line: 725, column: 17, scope: !5506)
!5530 = !DILocation(line: 726, column: 47, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !912, line: 725, column: 26)
!5532 = !DILocation(line: 726, column: 51, scope: !5531)
!5533 = !DILocation(line: 726, column: 57, scope: !5531)
!5534 = !DILocation(line: 727, column: 47, scope: !5531)
!5535 = !DILocation(line: 728, column: 47, scope: !5531)
!5536 = !DILocation(line: 728, column: 53, scope: !5531)
!5537 = !DILocation(line: 728, column: 59, scope: !5531)
!5538 = !DILocation(line: 728, column: 66, scope: !5531)
!5539 = !DILocation(line: 729, column: 57, scope: !5531)
!5540 = !DILocation(line: 730, column: 47, scope: !5531)
!5541 = !DILocation(line: 730, column: 56, scope: !5531)
!5542 = !DILocation(line: 730, column: 66, scope: !5531)
!5543 = !DILocation(line: 731, column: 47, scope: !5531)
!5544 = !DILocation(line: 731, column: 57, scope: !5531)
!5545 = !DILocation(line: 726, column: 23, scope: !5531)
!5546 = !DILocation(line: 726, column: 21, scope: !5531)
!5547 = !DILocation(line: 732, column: 21, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5531, file: !912, line: 732, column: 21)
!5549 = !DILocation(line: 732, column: 25, scope: !5548)
!5550 = !DILocation(line: 732, column: 21, scope: !5531)
!5551 = !DILocation(line: 733, column: 28, scope: !5548)
!5552 = !DILocation(line: 733, column: 21, scope: !5548)
!5553 = !DILocation(line: 734, column: 13, scope: !5531)
!5554 = !DILocation(line: 738, column: 21, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !912, line: 738, column: 21)
!5556 = distinct !DILexicalBlock(scope: !5527, file: !912, line: 734, column: 20)
!5557 = !DILocation(line: 738, column: 21, scope: !5556)
!5558 = !DILocation(line: 739, column: 44, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5555, file: !912, line: 738, column: 31)
!5560 = !DILocation(line: 739, column: 60, scope: !5559)
!5561 = !DILocation(line: 739, column: 70, scope: !5559)
!5562 = !DILocation(line: 739, column: 27, scope: !5559)
!5563 = !DILocation(line: 739, column: 25, scope: !5559)
!5564 = !DILocation(line: 740, column: 25, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5559, file: !912, line: 740, column: 25)
!5566 = !DILocation(line: 740, column: 29, scope: !5565)
!5567 = !DILocation(line: 740, column: 25, scope: !5559)
!5568 = !DILocation(line: 741, column: 32, scope: !5565)
!5569 = !DILocation(line: 741, column: 25, scope: !5565)
!5570 = !DILocation(line: 742, column: 17, scope: !5559)
!5571 = !DILocation(line: 743, column: 34, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5555, file: !912, line: 742, column: 24)
!5573 = !DILocation(line: 743, column: 40, scope: !5572)
!5574 = !DILocation(line: 743, column: 58, scope: !5572)
!5575 = !DILocation(line: 744, column: 34, scope: !5572)
!5576 = !DILocation(line: 744, column: 44, scope: !5572)
!5577 = !DILocation(line: 744, column: 50, scope: !5572)
!5578 = !DILocation(line: 744, column: 56, scope: !5572)
!5579 = !DILocation(line: 744, column: 63, scope: !5572)
!5580 = !DILocation(line: 745, column: 34, scope: !5572)
!5581 = !DILocation(line: 745, column: 43, scope: !5572)
!5582 = !DILocation(line: 743, column: 27, scope: !5572)
!5583 = !DILocation(line: 743, column: 25, scope: !5572)
!5584 = !DILocation(line: 746, column: 25, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5572, file: !912, line: 746, column: 25)
!5586 = !DILocation(line: 746, column: 29, scope: !5585)
!5587 = !DILocation(line: 746, column: 25, scope: !5572)
!5588 = !DILocation(line: 747, column: 32, scope: !5585)
!5589 = !DILocation(line: 747, column: 25, scope: !5585)
!5590 = !DILocation(line: 751, column: 17, scope: !5506)
!5591 = !DILocation(line: 752, column: 9, scope: !5506)
!5592 = !DILocation(line: 716, column: 44, scope: !5593)
!5593 = !DILexicalBlockFile(scope: !5500, file: !912, discriminator: 2)
!5594 = !DILocation(line: 716, column: 9, scope: !5593)
!5595 = distinct !{!5595, !5596}
!5596 = !DILocation(line: 716, column: 9, scope: !5083)
!5597 = !DILocation(line: 753, column: 5, scope: !5083)
!5598 = !DILocation(line: 652, column: 58, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !5084, file: !912, discriminator: 2)
!5600 = !DILocation(line: 652, column: 65, scope: !5599)
!5601 = !DILocation(line: 652, column: 5, scope: !5599)
!5602 = distinct !{!5602, !5603}
!5603 = !DILocation(line: 652, column: 5, scope: !5077)
!5604 = !DILocation(line: 755, column: 20, scope: !5077)
!5605 = !DILocation(line: 755, column: 5, scope: !5077)
!5606 = !DILocation(line: 757, column: 5, scope: !5077)
!5607 = !DILocation(line: 758, column: 1, scope: !5077)
!5608 = distinct !DISubprogram(name: "align_get_bits", scope: !1182, file: !1182, line: 658, type: !5609, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!1186, !1180}
!5611 = !DILocalVariable(name: "s", arg: 1, scope: !5608, file: !1182, line: 658, type: !1180)
!5612 = !DILocation(line: 658, column: 60, scope: !5608)
!5613 = !DILocalVariable(name: "n", scope: !5608, file: !1182, line: 660, type: !898)
!5614 = !DILocation(line: 660, column: 9, scope: !5608)
!5615 = !DILocation(line: 660, column: 29, scope: !5608)
!5616 = !DILocation(line: 660, column: 14, scope: !5608)
!5617 = !DILocation(line: 660, column: 13, scope: !5608)
!5618 = !DILocation(line: 660, column: 32, scope: !5608)
!5619 = !DILocation(line: 661, column: 9, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5608, file: !1182, line: 661, column: 9)
!5621 = !DILocation(line: 661, column: 9, scope: !5608)
!5622 = !DILocation(line: 662, column: 19, scope: !5620)
!5623 = !DILocation(line: 662, column: 22, scope: !5620)
!5624 = !DILocation(line: 662, column: 9, scope: !5620)
!5625 = !DILocation(line: 663, column: 12, scope: !5608)
!5626 = !DILocation(line: 663, column: 15, scope: !5608)
!5627 = !DILocation(line: 663, column: 25, scope: !5608)
!5628 = !DILocation(line: 663, column: 28, scope: !5608)
!5629 = !DILocation(line: 663, column: 34, scope: !5608)
!5630 = !DILocation(line: 663, column: 22, scope: !5608)
!5631 = !DILocation(line: 663, column: 5, scope: !5608)
!5632 = distinct !DISubprogram(name: "ivi_scale_mv", scope: !888, file: !888, line: 293, type: !5633, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!898, !898, !898}
!5635 = !DILocalVariable(name: "mv", arg: 1, scope: !5632, file: !888, line: 293, type: !898)
!5636 = !DILocation(line: 293, column: 36, scope: !5632)
!5637 = !DILocalVariable(name: "mv_scale", arg: 2, scope: !5632, file: !888, line: 293, type: !898)
!5638 = !DILocation(line: 293, column: 44, scope: !5632)
!5639 = !DILocation(line: 295, column: 13, scope: !5632)
!5640 = !DILocation(line: 295, column: 19, scope: !5632)
!5641 = !DILocation(line: 295, column: 22, scope: !5632)
!5642 = !DILocation(line: 295, column: 16, scope: !5632)
!5643 = !DILocation(line: 295, column: 30, scope: !5632)
!5644 = !DILocation(line: 295, column: 39, scope: !5632)
!5645 = !DILocation(line: 295, column: 27, scope: !5632)
!5646 = !DILocation(line: 295, column: 48, scope: !5632)
!5647 = !DILocation(line: 295, column: 45, scope: !5632)
!5648 = !DILocation(line: 295, column: 5, scope: !5632)
!5649 = distinct !DISubprogram(name: "ivi_mc", scope: !912, file: !912, line: 82, type: !5650, isLocal: true, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{!898, !2165, !4562, !5143, !898, !898, !898, !898, !898, !898, !898}
!5652 = !DILocalVariable(name: "band", arg: 1, scope: !5649, file: !912, line: 82, type: !2165)
!5653 = !DILocation(line: 82, column: 32, scope: !5649)
!5654 = !DILocalVariable(name: "mc", arg: 2, scope: !5649, file: !912, line: 82, type: !4562)
!5655 = !DILocation(line: 82, column: 50, scope: !5649)
!5656 = !DILocalVariable(name: "mc_avg", arg: 3, scope: !5649, file: !912, line: 82, type: !5143)
!5657 = !DILocation(line: 82, column: 70, scope: !5649)
!5658 = !DILocalVariable(name: "offs", arg: 4, scope: !5649, file: !912, line: 83, type: !898)
!5659 = !DILocation(line: 83, column: 23, scope: !5649)
!5660 = !DILocalVariable(name: "mv_x", arg: 5, scope: !5649, file: !912, line: 83, type: !898)
!5661 = !DILocation(line: 83, column: 33, scope: !5649)
!5662 = !DILocalVariable(name: "mv_y", arg: 6, scope: !5649, file: !912, line: 83, type: !898)
!5663 = !DILocation(line: 83, column: 43, scope: !5649)
!5664 = !DILocalVariable(name: "mv_x2", arg: 7, scope: !5649, file: !912, line: 83, type: !898)
!5665 = !DILocation(line: 83, column: 53, scope: !5649)
!5666 = !DILocalVariable(name: "mv_y2", arg: 8, scope: !5649, file: !912, line: 83, type: !898)
!5667 = !DILocation(line: 83, column: 64, scope: !5649)
!5668 = !DILocalVariable(name: "mc_type", arg: 9, scope: !5649, file: !912, line: 84, type: !898)
!5669 = !DILocation(line: 84, column: 23, scope: !5649)
!5670 = !DILocalVariable(name: "mc_type2", arg: 10, scope: !5649, file: !912, line: 84, type: !898)
!5671 = !DILocation(line: 84, column: 36, scope: !5649)
!5672 = !DILocalVariable(name: "ref_offs", scope: !5649, file: !912, line: 86, type: !898)
!5673 = !DILocation(line: 86, column: 9, scope: !5649)
!5674 = !DILocation(line: 86, column: 20, scope: !5649)
!5675 = !DILocation(line: 86, column: 27, scope: !5649)
!5676 = !DILocation(line: 86, column: 34, scope: !5649)
!5677 = !DILocation(line: 86, column: 40, scope: !5649)
!5678 = !DILocation(line: 86, column: 32, scope: !5649)
!5679 = !DILocation(line: 86, column: 25, scope: !5649)
!5680 = !DILocation(line: 86, column: 48, scope: !5649)
!5681 = !DILocation(line: 86, column: 46, scope: !5649)
!5682 = !DILocalVariable(name: "buf_size", scope: !5649, file: !912, line: 87, type: !898)
!5683 = !DILocation(line: 87, column: 9, scope: !5649)
!5684 = !DILocation(line: 87, column: 20, scope: !5649)
!5685 = !DILocation(line: 87, column: 26, scope: !5649)
!5686 = !DILocation(line: 87, column: 34, scope: !5649)
!5687 = !DILocation(line: 87, column: 40, scope: !5649)
!5688 = !DILocation(line: 87, column: 32, scope: !5649)
!5689 = !DILocalVariable(name: "min_size", scope: !5649, file: !912, line: 88, type: !898)
!5690 = !DILocation(line: 88, column: 9, scope: !5649)
!5691 = !DILocation(line: 88, column: 20, scope: !5649)
!5692 = !DILocation(line: 88, column: 26, scope: !5649)
!5693 = !DILocation(line: 88, column: 35, scope: !5649)
!5694 = !DILocation(line: 88, column: 41, scope: !5649)
!5695 = !DILocation(line: 88, column: 50, scope: !5649)
!5696 = !DILocation(line: 88, column: 34, scope: !5649)
!5697 = !DILocation(line: 88, column: 32, scope: !5649)
!5698 = !DILocation(line: 88, column: 57, scope: !5649)
!5699 = !DILocation(line: 88, column: 63, scope: !5649)
!5700 = !DILocation(line: 88, column: 55, scope: !5649)
!5701 = !DILocalVariable(name: "ref_size", scope: !5649, file: !912, line: 89, type: !898)
!5702 = !DILocation(line: 89, column: 9, scope: !5649)
!5703 = !DILocation(line: 89, column: 21, scope: !5649)
!5704 = !DILocation(line: 89, column: 29, scope: !5649)
!5705 = !DILocation(line: 89, column: 20, scope: !5649)
!5706 = !DILocation(line: 89, column: 36, scope: !5649)
!5707 = !DILocation(line: 89, column: 42, scope: !5649)
!5708 = !DILocation(line: 89, column: 34, scope: !5649)
!5709 = !DILocation(line: 89, column: 51, scope: !5649)
!5710 = !DILocation(line: 89, column: 59, scope: !5649)
!5711 = !DILocation(line: 89, column: 50, scope: !5649)
!5712 = !DILocation(line: 89, column: 48, scope: !5649)
!5713 = !DILocation(line: 91, column: 9, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5649, file: !912, line: 91, column: 9)
!5715 = !DILocation(line: 91, column: 17, scope: !5714)
!5716 = !DILocation(line: 91, column: 9, scope: !5649)
!5717 = !DILocation(line: 92, column: 9, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !912, line: 91, column: 24)
!5719 = distinct !{!5719, !5717}
!5720 = !DILocation(line: 92, column: 20, scope: !5721)
!5721 = !DILexicalBlockFile(scope: !5722, file: !912, discriminator: 1)
!5722 = distinct !DILexicalBlock(scope: !5723, file: !912, line: 92, column: 18)
!5723 = distinct !DILexicalBlock(scope: !5718, file: !912, line: 92, column: 12)
!5724 = !DILocation(line: 92, column: 25, scope: !5721)
!5725 = !DILocation(line: 92, column: 30, scope: !5721)
!5726 = !DILocation(line: 92, column: 33, scope: !5727)
!5727 = !DILexicalBlockFile(scope: !5722, file: !912, discriminator: 2)
!5728 = !DILocation(line: 92, column: 42, scope: !5727)
!5729 = !DILocation(line: 92, column: 47, scope: !5727)
!5730 = !DILocation(line: 92, column: 50, scope: !5731)
!5731 = !DILexicalBlockFile(scope: !5722, file: !912, discriminator: 3)
!5732 = !DILocation(line: 92, column: 56, scope: !5731)
!5733 = !DILocation(line: 92, column: 18, scope: !5731)
!5734 = !DILocation(line: 92, column: 68, scope: !5735)
!5735 = !DILexicalBlockFile(scope: !5736, file: !912, discriminator: 4)
!5736 = distinct !DILexicalBlock(scope: !5722, file: !912, line: 92, column: 66)
!5737 = !DILocation(line: 92, column: 119, scope: !5738)
!5738 = !DILexicalBlockFile(scope: !5735, file: !912, discriminator: 6)
!5739 = !DILocation(line: 92, column: 119, scope: !5735)
!5740 = !DILocation(line: 92, column: 130, scope: !5741)
!5741 = !DILexicalBlockFile(scope: !5723, file: !912, discriminator: 5)
!5742 = !DILocation(line: 93, column: 9, scope: !5718)
!5743 = distinct !{!5743, !5742}
!5744 = !DILocation(line: 93, column: 20, scope: !5745)
!5745 = !DILexicalBlockFile(scope: !5746, file: !912, discriminator: 1)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !912, line: 93, column: 18)
!5747 = distinct !DILexicalBlock(scope: !5718, file: !912, line: 93, column: 12)
!5748 = !DILocation(line: 93, column: 31, scope: !5745)
!5749 = !DILocation(line: 93, column: 29, scope: !5745)
!5750 = !DILocation(line: 93, column: 43, scope: !5745)
!5751 = !DILocation(line: 93, column: 40, scope: !5745)
!5752 = !DILocation(line: 93, column: 18, scope: !5745)
!5753 = !DILocation(line: 93, column: 52, scope: !5754)
!5754 = !DILexicalBlockFile(scope: !5755, file: !912, discriminator: 2)
!5755 = distinct !DILexicalBlock(scope: !5746, file: !912, line: 93, column: 50)
!5756 = !DILocation(line: 93, column: 103, scope: !5757)
!5757 = !DILexicalBlockFile(scope: !5754, file: !912, discriminator: 4)
!5758 = !DILocation(line: 93, column: 103, scope: !5754)
!5759 = !DILocation(line: 93, column: 114, scope: !5760)
!5760 = !DILexicalBlockFile(scope: !5747, file: !912, discriminator: 3)
!5761 = !DILocation(line: 94, column: 9, scope: !5718)
!5762 = distinct !{!5762, !5761}
!5763 = !DILocation(line: 94, column: 20, scope: !5764)
!5764 = !DILexicalBlockFile(scope: !5765, file: !912, discriminator: 1)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !912, line: 94, column: 18)
!5766 = distinct !DILexicalBlock(scope: !5718, file: !912, line: 94, column: 12)
!5767 = !DILocation(line: 94, column: 31, scope: !5764)
!5768 = !DILocation(line: 94, column: 29, scope: !5764)
!5769 = !DILocation(line: 94, column: 42, scope: !5764)
!5770 = !DILocation(line: 94, column: 40, scope: !5764)
!5771 = !DILocation(line: 94, column: 54, scope: !5764)
!5772 = !DILocation(line: 94, column: 51, scope: !5764)
!5773 = !DILocation(line: 94, column: 18, scope: !5764)
!5774 = !DILocation(line: 94, column: 67, scope: !5775)
!5775 = !DILexicalBlockFile(scope: !5776, file: !912, discriminator: 2)
!5776 = distinct !DILexicalBlock(scope: !5765, file: !912, line: 94, column: 65)
!5777 = !DILocation(line: 94, column: 118, scope: !5778)
!5778 = !DILexicalBlockFile(scope: !5775, file: !912, discriminator: 4)
!5779 = !DILocation(line: 94, column: 118, scope: !5775)
!5780 = !DILocation(line: 94, column: 129, scope: !5781)
!5781 = !DILexicalBlockFile(scope: !5766, file: !912, discriminator: 3)
!5782 = !DILocation(line: 95, column: 5, scope: !5718)
!5783 = !DILocation(line: 97, column: 9, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5649, file: !912, line: 97, column: 9)
!5785 = !DILocation(line: 97, column: 18, scope: !5784)
!5786 = !DILocation(line: 97, column: 9, scope: !5649)
!5787 = !DILocation(line: 98, column: 9, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5784, file: !912, line: 97, column: 25)
!5789 = !DILocation(line: 98, column: 12, scope: !5788)
!5790 = !DILocation(line: 98, column: 18, scope: !5788)
!5791 = !DILocation(line: 98, column: 24, scope: !5788)
!5792 = !DILocation(line: 98, column: 22, scope: !5788)
!5793 = !DILocation(line: 98, column: 30, scope: !5788)
!5794 = !DILocation(line: 98, column: 36, scope: !5788)
!5795 = !DILocation(line: 98, column: 46, scope: !5788)
!5796 = !DILocation(line: 98, column: 44, scope: !5788)
!5797 = !DILocation(line: 98, column: 56, scope: !5788)
!5798 = !DILocation(line: 98, column: 62, scope: !5788)
!5799 = !DILocation(line: 98, column: 69, scope: !5788)
!5800 = !DILocation(line: 99, column: 5, scope: !5788)
!5801 = !DILocalVariable(name: "ref_offs2", scope: !5802, file: !912, line: 100, type: !898)
!5802 = distinct !DILexicalBlock(scope: !5784, file: !912, line: 99, column: 12)
!5803 = !DILocation(line: 100, column: 13, scope: !5802)
!5804 = !DILocation(line: 100, column: 25, scope: !5802)
!5805 = !DILocation(line: 100, column: 32, scope: !5802)
!5806 = !DILocation(line: 100, column: 40, scope: !5802)
!5807 = !DILocation(line: 100, column: 46, scope: !5802)
!5808 = !DILocation(line: 100, column: 38, scope: !5802)
!5809 = !DILocation(line: 100, column: 30, scope: !5802)
!5810 = !DILocation(line: 100, column: 54, scope: !5802)
!5811 = !DILocation(line: 100, column: 52, scope: !5802)
!5812 = !DILocalVariable(name: "ref_size2", scope: !5802, file: !912, line: 101, type: !898)
!5813 = !DILocation(line: 101, column: 13, scope: !5802)
!5814 = !DILocation(line: 101, column: 26, scope: !5802)
!5815 = !DILocation(line: 101, column: 35, scope: !5802)
!5816 = !DILocation(line: 101, column: 25, scope: !5802)
!5817 = !DILocation(line: 101, column: 42, scope: !5802)
!5818 = !DILocation(line: 101, column: 48, scope: !5802)
!5819 = !DILocation(line: 101, column: 40, scope: !5802)
!5820 = !DILocation(line: 101, column: 57, scope: !5802)
!5821 = !DILocation(line: 101, column: 66, scope: !5802)
!5822 = !DILocation(line: 101, column: 56, scope: !5802)
!5823 = !DILocation(line: 101, column: 54, scope: !5802)
!5824 = !DILocation(line: 102, column: 13, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5802, file: !912, line: 102, column: 13)
!5826 = !DILocation(line: 102, column: 18, scope: !5825)
!5827 = !DILocation(line: 102, column: 22, scope: !5825)
!5828 = !DILocation(line: 102, column: 25, scope: !5829)
!5829 = !DILexicalBlockFile(scope: !5825, file: !912, discriminator: 1)
!5830 = !DILocation(line: 102, column: 35, scope: !5829)
!5831 = !DILocation(line: 102, column: 39, scope: !5829)
!5832 = !DILocation(line: 102, column: 43, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5825, file: !912, discriminator: 2)
!5834 = !DILocation(line: 102, column: 49, scope: !5833)
!5835 = !DILocation(line: 102, column: 13, scope: !5833)
!5836 = !DILocation(line: 103, column: 13, scope: !5825)
!5837 = !DILocation(line: 104, column: 13, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5802, file: !912, line: 104, column: 13)
!5839 = !DILocation(line: 104, column: 24, scope: !5838)
!5840 = !DILocation(line: 104, column: 22, scope: !5838)
!5841 = !DILocation(line: 104, column: 35, scope: !5838)
!5842 = !DILocation(line: 104, column: 33, scope: !5838)
!5843 = !DILocation(line: 104, column: 47, scope: !5838)
!5844 = !DILocation(line: 104, column: 45, scope: !5838)
!5845 = !DILocation(line: 104, column: 13, scope: !5802)
!5846 = !DILocation(line: 105, column: 13, scope: !5838)
!5847 = !DILocation(line: 107, column: 13, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5802, file: !912, line: 107, column: 13)
!5849 = !DILocation(line: 107, column: 21, scope: !5848)
!5850 = !DILocation(line: 107, column: 13, scope: !5802)
!5851 = !DILocation(line: 108, column: 13, scope: !5848)
!5852 = !DILocation(line: 108, column: 16, scope: !5848)
!5853 = !DILocation(line: 108, column: 22, scope: !5848)
!5854 = !DILocation(line: 108, column: 28, scope: !5848)
!5855 = !DILocation(line: 108, column: 26, scope: !5848)
!5856 = !DILocation(line: 108, column: 34, scope: !5848)
!5857 = !DILocation(line: 108, column: 40, scope: !5848)
!5858 = !DILocation(line: 108, column: 52, scope: !5848)
!5859 = !DILocation(line: 108, column: 50, scope: !5848)
!5860 = !DILocation(line: 109, column: 16, scope: !5848)
!5861 = !DILocation(line: 109, column: 22, scope: !5848)
!5862 = !DILocation(line: 109, column: 29, scope: !5848)
!5863 = !DILocation(line: 111, column: 13, scope: !5848)
!5864 = !DILocation(line: 111, column: 20, scope: !5848)
!5865 = !DILocation(line: 111, column: 26, scope: !5848)
!5866 = !DILocation(line: 111, column: 32, scope: !5848)
!5867 = !DILocation(line: 111, column: 30, scope: !5848)
!5868 = !DILocation(line: 111, column: 38, scope: !5848)
!5869 = !DILocation(line: 111, column: 44, scope: !5848)
!5870 = !DILocation(line: 111, column: 54, scope: !5848)
!5871 = !DILocation(line: 111, column: 52, scope: !5848)
!5872 = !DILocation(line: 112, column: 20, scope: !5848)
!5873 = !DILocation(line: 112, column: 26, scope: !5848)
!5874 = !DILocation(line: 112, column: 38, scope: !5848)
!5875 = !DILocation(line: 112, column: 36, scope: !5848)
!5876 = !DILocation(line: 112, column: 49, scope: !5848)
!5877 = !DILocation(line: 112, column: 55, scope: !5848)
!5878 = !DILocation(line: 113, column: 20, scope: !5848)
!5879 = !DILocation(line: 113, column: 29, scope: !5848)
!5880 = !DILocation(line: 116, column: 5, scope: !5649)
!5881 = !DILocation(line: 117, column: 1, scope: !5649)
!5882 = distinct !DISubprogram(name: "get_bits_long", scope: !1182, file: !1182, line: 531, type: !2053, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5883 = !DILocalVariable(name: "s", arg: 1, scope: !5882, file: !1182, line: 531, type: !1180)
!5884 = !DILocation(line: 531, column: 57, scope: !5882)
!5885 = !DILocalVariable(name: "n", arg: 2, scope: !5882, file: !1182, line: 531, type: !898)
!5886 = !DILocation(line: 531, column: 64, scope: !5882)
!5887 = !DILocation(line: 534, column: 10, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5882, file: !1182, line: 534, column: 9)
!5889 = !DILocation(line: 534, column: 9, scope: !5882)
!5890 = !DILocation(line: 535, column: 9, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5888, file: !1182, line: 534, column: 13)
!5892 = !DILocation(line: 540, column: 16, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5888, file: !1182, line: 540, column: 16)
!5894 = !DILocation(line: 540, column: 18, scope: !5893)
!5895 = !DILocation(line: 540, column: 16, scope: !5888)
!5896 = !DILocation(line: 541, column: 25, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !1182, line: 540, column: 25)
!5898 = !DILocation(line: 541, column: 28, scope: !5897)
!5899 = !DILocation(line: 541, column: 16, scope: !5897)
!5900 = !DILocation(line: 541, column: 9, scope: !5897)
!5901 = !DILocalVariable(name: "ret", scope: !5902, file: !1182, line: 544, type: !899)
!5902 = distinct !DILexicalBlock(scope: !5893, file: !1182, line: 542, column: 12)
!5903 = !DILocation(line: 544, column: 18, scope: !5902)
!5904 = !DILocation(line: 544, column: 33, scope: !5902)
!5905 = !DILocation(line: 544, column: 24, scope: !5902)
!5906 = !DILocation(line: 545, column: 16, scope: !5902)
!5907 = !DILocation(line: 545, column: 32, scope: !5902)
!5908 = !DILocation(line: 545, column: 35, scope: !5902)
!5909 = !DILocation(line: 545, column: 37, scope: !5902)
!5910 = !DILocation(line: 545, column: 23, scope: !5902)
!5911 = !DILocation(line: 545, column: 43, scope: !5902)
!5912 = !DILocation(line: 545, column: 20, scope: !5902)
!5913 = !DILocation(line: 545, column: 9, scope: !5902)
!5914 = !DILocation(line: 552, column: 1, scope: !5882)
!5915 = distinct !DISubprogram(name: "ivi_decode_coded_blocks", scope: !912, file: !912, line: 511, type: !5916, isLocal: true, isDefinition: true, scopeLine: 519, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{!898, !1180, !2165, !4562, !5143, !898, !898, !898, !898, !1484, !898, !898, !898, !906, !898, !1199}
!5918 = !DILocalVariable(name: "s", arg: 1, scope: !5919, file: !1182, line: 762, type: !1180)
!5919 = distinct !DISubprogram(name: "get_vlc2", scope: !1182, file: !1182, line: 762, type: !5920, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{!898, !1180, !961, !898, !898}
!5922 = !DILocation(line: 762, column: 74, scope: !5919, inlinedAt: !5923)
!5923 = distinct !DILocation(line: 556, column: 18, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !912, line: 553, column: 36)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !912, line: 553, column: 13)
!5926 = distinct !DILexicalBlock(scope: !5915, file: !912, line: 546, column: 36)
!5927 = !DILocalVariable(name: "table", arg: 2, scope: !5919, file: !1182, line: 762, type: !961)
!5928 = !DILocation(line: 762, column: 87, scope: !5919, inlinedAt: !5923)
!5929 = !DILocalVariable(name: "bits", arg: 3, scope: !5919, file: !1182, line: 763, type: !898)
!5930 = !DILocation(line: 763, column: 42, scope: !5919, inlinedAt: !5923)
!5931 = !DILocalVariable(name: "max_depth", arg: 4, scope: !5919, file: !1182, line: 763, type: !898)
!5932 = !DILocation(line: 763, column: 52, scope: !5919, inlinedAt: !5923)
!5933 = !DILocalVariable(name: "code", scope: !5919, file: !1182, line: 783, type: !898)
!5934 = !DILocation(line: 783, column: 9, scope: !5919, inlinedAt: !5923)
!5935 = !DILocalVariable(name: "re_index", scope: !5919, file: !1182, line: 785, type: !899)
!5936 = !DILocation(line: 785, column: 18, scope: !5919, inlinedAt: !5923)
!5937 = !DILocalVariable(name: "re_cache", scope: !5919, file: !1182, line: 785, type: !899)
!5938 = !DILocation(line: 785, column: 78, scope: !5919, inlinedAt: !5923)
!5939 = !DILocalVariable(name: "re_size_plus8", scope: !5919, file: !1182, line: 785, type: !899)
!5940 = !DILocation(line: 785, column: 101, scope: !5919, inlinedAt: !5923)
!5941 = !DILocalVariable(name: "n", scope: !5942, file: !1182, line: 788, type: !898)
!5942 = distinct !DILexicalBlock(scope: !5919, file: !1182, line: 788, column: 8)
!5943 = !DILocation(line: 788, column: 14, scope: !5942, inlinedAt: !5923)
!5944 = !DILocalVariable(name: "nb_bits", scope: !5942, file: !1182, line: 788, type: !898)
!5945 = !DILocation(line: 788, column: 17, scope: !5942, inlinedAt: !5923)
!5946 = !DILocalVariable(name: "index", scope: !5942, file: !1182, line: 788, type: !899)
!5947 = !DILocation(line: 788, column: 39, scope: !5942, inlinedAt: !5923)
!5948 = !DILocation(line: 762, column: 74, scope: !5919, inlinedAt: !5949)
!5949 = distinct !DILocation(line: 555, column: 18, scope: !5924)
!5950 = !DILocation(line: 762, column: 87, scope: !5919, inlinedAt: !5949)
!5951 = !DILocation(line: 763, column: 42, scope: !5919, inlinedAt: !5949)
!5952 = !DILocation(line: 763, column: 52, scope: !5919, inlinedAt: !5949)
!5953 = !DILocation(line: 783, column: 9, scope: !5919, inlinedAt: !5949)
!5954 = !DILocation(line: 785, column: 18, scope: !5919, inlinedAt: !5949)
!5955 = !DILocation(line: 785, column: 78, scope: !5919, inlinedAt: !5949)
!5956 = !DILocation(line: 785, column: 101, scope: !5919, inlinedAt: !5949)
!5957 = !DILocation(line: 788, column: 14, scope: !5942, inlinedAt: !5949)
!5958 = !DILocation(line: 788, column: 17, scope: !5942, inlinedAt: !5949)
!5959 = !DILocation(line: 788, column: 39, scope: !5942, inlinedAt: !5949)
!5960 = !DILocation(line: 762, column: 74, scope: !5919, inlinedAt: !5961)
!5961 = distinct !DILocation(line: 554, column: 19, scope: !5924)
!5962 = !DILocation(line: 762, column: 87, scope: !5919, inlinedAt: !5961)
!5963 = !DILocation(line: 763, column: 42, scope: !5919, inlinedAt: !5961)
!5964 = !DILocation(line: 763, column: 52, scope: !5919, inlinedAt: !5961)
!5965 = !DILocation(line: 783, column: 9, scope: !5919, inlinedAt: !5961)
!5966 = !DILocation(line: 785, column: 18, scope: !5919, inlinedAt: !5961)
!5967 = !DILocation(line: 785, column: 78, scope: !5919, inlinedAt: !5961)
!5968 = !DILocation(line: 785, column: 101, scope: !5919, inlinedAt: !5961)
!5969 = !DILocation(line: 788, column: 14, scope: !5942, inlinedAt: !5961)
!5970 = !DILocation(line: 788, column: 17, scope: !5942, inlinedAt: !5961)
!5971 = !DILocation(line: 788, column: 39, scope: !5942, inlinedAt: !5961)
!5972 = !DILocation(line: 762, column: 74, scope: !5919, inlinedAt: !5973)
!5973 = distinct !DILocation(line: 547, column: 15, scope: !5926)
!5974 = !DILocation(line: 762, column: 87, scope: !5919, inlinedAt: !5973)
!5975 = !DILocation(line: 763, column: 42, scope: !5919, inlinedAt: !5973)
!5976 = !DILocation(line: 763, column: 52, scope: !5919, inlinedAt: !5973)
!5977 = !DILocation(line: 783, column: 9, scope: !5919, inlinedAt: !5973)
!5978 = !DILocation(line: 785, column: 18, scope: !5919, inlinedAt: !5973)
!5979 = !DILocation(line: 785, column: 78, scope: !5919, inlinedAt: !5973)
!5980 = !DILocation(line: 785, column: 101, scope: !5919, inlinedAt: !5973)
!5981 = !DILocation(line: 788, column: 14, scope: !5942, inlinedAt: !5973)
!5982 = !DILocation(line: 788, column: 17, scope: !5942, inlinedAt: !5973)
!5983 = !DILocation(line: 788, column: 39, scope: !5942, inlinedAt: !5973)
!5984 = !DILocalVariable(name: "gb", arg: 1, scope: !5915, file: !912, line: 511, type: !1180)
!5985 = !DILocation(line: 511, column: 51, scope: !5915)
!5986 = !DILocalVariable(name: "band", arg: 2, scope: !5915, file: !912, line: 511, type: !2165)
!5987 = !DILocation(line: 511, column: 68, scope: !5915)
!5988 = !DILocalVariable(name: "mc", arg: 3, scope: !5915, file: !912, line: 512, type: !4562)
!5989 = !DILocation(line: 512, column: 48, scope: !5915)
!5990 = !DILocalVariable(name: "mc_avg", arg: 4, scope: !5915, file: !912, line: 512, type: !5143)
!5991 = !DILocation(line: 512, column: 68, scope: !5915)
!5992 = !DILocalVariable(name: "mv_x", arg: 5, scope: !5915, file: !912, line: 513, type: !898)
!5993 = !DILocation(line: 513, column: 40, scope: !5915)
!5994 = !DILocalVariable(name: "mv_y", arg: 6, scope: !5915, file: !912, line: 513, type: !898)
!5995 = !DILocation(line: 513, column: 50, scope: !5915)
!5996 = !DILocalVariable(name: "mv_x2", arg: 7, scope: !5915, file: !912, line: 514, type: !898)
!5997 = !DILocation(line: 514, column: 40, scope: !5915)
!5998 = !DILocalVariable(name: "mv_y2", arg: 8, scope: !5915, file: !912, line: 514, type: !898)
!5999 = !DILocation(line: 514, column: 51, scope: !5915)
!6000 = !DILocalVariable(name: "prev_dc", arg: 9, scope: !5915, file: !912, line: 515, type: !1484)
!6001 = !DILocation(line: 515, column: 41, scope: !5915)
!6002 = !DILocalVariable(name: "is_intra", arg: 10, scope: !5915, file: !912, line: 515, type: !898)
!6003 = !DILocation(line: 515, column: 54, scope: !5915)
!6004 = !DILocalVariable(name: "mc_type", arg: 11, scope: !5915, file: !912, line: 516, type: !898)
!6005 = !DILocation(line: 516, column: 40, scope: !5915)
!6006 = !DILocalVariable(name: "mc_type2", arg: 12, scope: !5915, file: !912, line: 516, type: !898)
!6007 = !DILocation(line: 516, column: 53, scope: !5915)
!6008 = !DILocalVariable(name: "quant", arg: 13, scope: !5915, file: !912, line: 517, type: !906)
!6009 = !DILocation(line: 517, column: 45, scope: !5915)
!6010 = !DILocalVariable(name: "offs", arg: 14, scope: !5915, file: !912, line: 517, type: !898)
!6011 = !DILocation(line: 517, column: 56, scope: !5915)
!6012 = !DILocalVariable(name: "avctx", arg: 15, scope: !5915, file: !912, line: 518, type: !1199)
!6013 = !DILocation(line: 518, column: 52, scope: !5915)
!6014 = !DILocalVariable(name: "base_tab", scope: !5915, file: !912, line: 520, type: !2252)
!6015 = !DILocation(line: 520, column: 21, scope: !5915)
!6016 = !DILocation(line: 520, column: 32, scope: !5915)
!6017 = !DILocation(line: 520, column: 43, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !5915, file: !912, discriminator: 1)
!6019 = !DILocation(line: 520, column: 49, scope: !6018)
!6020 = !DILocation(line: 520, column: 32, scope: !6018)
!6021 = !DILocation(line: 520, column: 62, scope: !6022)
!6022 = !DILexicalBlockFile(scope: !5915, file: !912, discriminator: 2)
!6023 = !DILocation(line: 520, column: 68, scope: !6022)
!6024 = !DILocation(line: 520, column: 32, scope: !6022)
!6025 = !DILocation(line: 520, column: 32, scope: !6026)
!6026 = !DILexicalBlockFile(scope: !5915, file: !912, discriminator: 3)
!6027 = !DILocation(line: 520, column: 21, scope: !6026)
!6028 = !DILocalVariable(name: "rvmap", scope: !5915, file: !912, line: 521, type: !2203)
!6029 = !DILocation(line: 521, column: 16, scope: !5915)
!6030 = !DILocation(line: 521, column: 24, scope: !5915)
!6031 = !DILocation(line: 521, column: 30, scope: !5915)
!6032 = !DILocalVariable(name: "col_flags", scope: !5915, file: !912, line: 522, type: !6033)
!6033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 64, align: 8, elements: !966)
!6034 = !DILocation(line: 522, column: 13, scope: !5915)
!6035 = !DILocalVariable(name: "trvec", scope: !5915, file: !912, line: 523, type: !6036)
!6036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 2048, align: 32, elements: !928)
!6037 = !DILocation(line: 523, column: 13, scope: !5915)
!6038 = !DILocalVariable(name: "sym", scope: !5915, file: !912, line: 524, type: !906)
!6039 = !DILocation(line: 524, column: 14, scope: !5915)
!6040 = !DILocalVariable(name: "lo", scope: !5915, file: !912, line: 524, type: !906)
!6041 = !DILocation(line: 524, column: 23, scope: !5915)
!6042 = !DILocalVariable(name: "hi", scope: !5915, file: !912, line: 524, type: !906)
!6043 = !DILocation(line: 524, column: 27, scope: !5915)
!6044 = !DILocalVariable(name: "q", scope: !5915, file: !912, line: 524, type: !906)
!6045 = !DILocation(line: 524, column: 31, scope: !5915)
!6046 = !DILocalVariable(name: "pos", scope: !5915, file: !912, line: 525, type: !898)
!6047 = !DILocation(line: 525, column: 9, scope: !5915)
!6048 = !DILocalVariable(name: "run", scope: !5915, file: !912, line: 525, type: !898)
!6049 = !DILocation(line: 525, column: 14, scope: !5915)
!6050 = !DILocalVariable(name: "val", scope: !5915, file: !912, line: 525, type: !898)
!6051 = !DILocation(line: 525, column: 19, scope: !5915)
!6052 = !DILocalVariable(name: "blk_size", scope: !5915, file: !912, line: 526, type: !898)
!6053 = !DILocation(line: 526, column: 9, scope: !5915)
!6054 = !DILocation(line: 526, column: 20, scope: !5915)
!6055 = !DILocation(line: 526, column: 26, scope: !5915)
!6056 = !DILocalVariable(name: "num_coeffs", scope: !5915, file: !912, line: 527, type: !898)
!6057 = !DILocation(line: 527, column: 9, scope: !5915)
!6058 = !DILocation(line: 527, column: 22, scope: !5915)
!6059 = !DILocation(line: 527, column: 33, scope: !5915)
!6060 = !DILocation(line: 527, column: 31, scope: !5915)
!6061 = !DILocalVariable(name: "col_mask", scope: !5915, file: !912, line: 528, type: !898)
!6062 = !DILocation(line: 528, column: 9, scope: !5915)
!6063 = !DILocation(line: 528, column: 20, scope: !5915)
!6064 = !DILocation(line: 528, column: 29, scope: !5915)
!6065 = !DILocalVariable(name: "scan_pos", scope: !5915, file: !912, line: 529, type: !898)
!6066 = !DILocation(line: 529, column: 9, scope: !5915)
!6067 = !DILocalVariable(name: "min_size", scope: !5915, file: !912, line: 530, type: !898)
!6068 = !DILocation(line: 530, column: 9, scope: !5915)
!6069 = !DILocation(line: 530, column: 20, scope: !5915)
!6070 = !DILocation(line: 530, column: 26, scope: !5915)
!6071 = !DILocation(line: 530, column: 35, scope: !5915)
!6072 = !DILocation(line: 530, column: 41, scope: !5915)
!6073 = !DILocation(line: 530, column: 56, scope: !5915)
!6074 = !DILocation(line: 530, column: 34, scope: !5915)
!6075 = !DILocation(line: 530, column: 32, scope: !5915)
!6076 = !DILocation(line: 531, column: 22, scope: !5915)
!6077 = !DILocation(line: 531, column: 28, scope: !5915)
!6078 = !DILocation(line: 530, column: 61, scope: !5915)
!6079 = !DILocalVariable(name: "buf_size", scope: !5915, file: !912, line: 532, type: !898)
!6080 = !DILocation(line: 532, column: 9, scope: !5915)
!6081 = !DILocation(line: 532, column: 20, scope: !5915)
!6082 = !DILocation(line: 532, column: 26, scope: !5915)
!6083 = !DILocation(line: 532, column: 34, scope: !5915)
!6084 = !DILocation(line: 532, column: 40, scope: !5915)
!6085 = !DILocation(line: 532, column: 32, scope: !5915)
!6086 = !DILocation(line: 532, column: 50, scope: !5915)
!6087 = !DILocation(line: 532, column: 48, scope: !5915)
!6088 = !DILocation(line: 534, column: 9, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !5915, file: !912, line: 534, column: 9)
!6090 = !DILocation(line: 534, column: 20, scope: !6089)
!6091 = !DILocation(line: 534, column: 18, scope: !6089)
!6092 = !DILocation(line: 534, column: 9, scope: !5915)
!6093 = !DILocation(line: 535, column: 9, scope: !6089)
!6094 = !DILocation(line: 537, column: 10, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !5915, file: !912, line: 537, column: 9)
!6096 = !DILocation(line: 537, column: 16, scope: !6095)
!6097 = !DILocation(line: 537, column: 9, scope: !5915)
!6098 = !DILocation(line: 538, column: 16, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6095, file: !912, line: 537, column: 22)
!6100 = !DILocation(line: 538, column: 9, scope: !6099)
!6101 = !DILocation(line: 539, column: 9, scope: !6099)
!6102 = !DILocation(line: 543, column: 5, scope: !5915)
!6103 = !DILocation(line: 543, column: 22, scope: !5915)
!6104 = !DILocation(line: 543, column: 33, scope: !5915)
!6105 = !DILocation(line: 545, column: 5, scope: !5915)
!6106 = !DILocation(line: 546, column: 5, scope: !5915)
!6107 = !DILocation(line: 546, column: 12, scope: !6018)
!6108 = !DILocation(line: 546, column: 24, scope: !6018)
!6109 = !DILocation(line: 546, column: 21, scope: !6018)
!6110 = !DILocation(line: 546, column: 5, scope: !6018)
!6111 = !DILocation(line: 547, column: 24, scope: !5926)
!6112 = !DILocation(line: 547, column: 28, scope: !5926)
!6113 = !DILocation(line: 547, column: 34, scope: !5926)
!6114 = !DILocation(line: 547, column: 42, scope: !5926)
!6115 = !DILocation(line: 547, column: 47, scope: !5926)
!6116 = !DILocation(line: 547, column: 15, scope: !5926)
!6117 = !DILocation(line: 785, column: 30, scope: !5919, inlinedAt: !5973)
!6118 = !DILocation(line: 785, column: 34, scope: !5919, inlinedAt: !5973)
!6119 = !DILocation(line: 785, column: 118, scope: !5919, inlinedAt: !5973)
!6120 = !DILocation(line: 785, column: 122, scope: !5919, inlinedAt: !5973)
!6121 = !DILocation(line: 786, column: 49, scope: !5919, inlinedAt: !5973)
!6122 = !DILocation(line: 786, column: 53, scope: !5919, inlinedAt: !5973)
!6123 = !DILocation(line: 786, column: 63, scope: !5919, inlinedAt: !5973)
!6124 = !DILocation(line: 786, column: 72, scope: !5919, inlinedAt: !5973)
!6125 = !DILocation(line: 786, column: 60, scope: !5919, inlinedAt: !5973)
!6126 = !DILocation(line: 786, column: 81, scope: !5919, inlinedAt: !5973)
!6127 = !DILocation(line: 786, column: 88, scope: !5919, inlinedAt: !5973)
!6128 = !DILocation(line: 786, column: 97, scope: !5919, inlinedAt: !5973)
!6129 = !DILocation(line: 786, column: 84, scope: !5919, inlinedAt: !5973)
!6130 = !DILocation(line: 786, column: 14, scope: !5919, inlinedAt: !5973)
!6131 = !DILocation(line: 788, column: 66, scope: !6132, inlinedAt: !5973)
!6132 = !DILexicalBlockFile(scope: !5942, file: !1182, discriminator: 1)
!6133 = !DILocation(line: 788, column: 76, scope: !6132, inlinedAt: !5973)
!6134 = !DILocation(line: 788, column: 54, scope: !6132, inlinedAt: !5973)
!6135 = !DILocation(line: 788, column: 52, scope: !6132, inlinedAt: !5973)
!6136 = !DILocation(line: 788, column: 96, scope: !6132, inlinedAt: !5973)
!6137 = !DILocation(line: 788, column: 90, scope: !6132, inlinedAt: !5973)
!6138 = !DILocation(line: 788, column: 88, scope: !6132, inlinedAt: !5973)
!6139 = !DILocation(line: 788, column: 117, scope: !6132, inlinedAt: !5973)
!6140 = !DILocation(line: 788, column: 111, scope: !6132, inlinedAt: !5973)
!6141 = !DILocation(line: 788, column: 109, scope: !6132, inlinedAt: !5973)
!6142 = !DILocation(line: 788, column: 132, scope: !6132, inlinedAt: !5973)
!6143 = !DILocation(line: 788, column: 142, scope: !6132, inlinedAt: !5973)
!6144 = !DILocation(line: 788, column: 146, scope: !6132, inlinedAt: !5973)
!6145 = !DILocation(line: 788, column: 149, scope: !6146, inlinedAt: !5973)
!6146 = !DILexicalBlockFile(scope: !6147, file: !1182, discriminator: 2)
!6147 = distinct !DILexicalBlock(scope: !5942, file: !1182, line: 788, column: 132)
!6148 = !DILocation(line: 788, column: 151, scope: !6146, inlinedAt: !5973)
!6149 = !DILocation(line: 788, column: 132, scope: !6146, inlinedAt: !5973)
!6150 = !DILocation(line: 788, column: 171, scope: !6151, inlinedAt: !5973)
!6151 = !DILexicalBlockFile(scope: !6152, file: !1182, discriminator: 3)
!6152 = distinct !DILexicalBlock(scope: !6147, file: !1182, line: 788, column: 156)
!6153 = !DILocation(line: 788, column: 189, scope: !6151, inlinedAt: !5973)
!6154 = !DILocation(line: 788, column: 201, scope: !6151, inlinedAt: !5973)
!6155 = !DILocation(line: 788, column: 198, scope: !6151, inlinedAt: !5973)
!6156 = !DILocation(line: 788, column: 186, scope: !6151, inlinedAt: !5973)
!6157 = !DILocation(line: 788, column: 170, scope: !6151, inlinedAt: !5973)
!6158 = !DILocation(line: 788, column: 211, scope: !6159, inlinedAt: !5973)
!6159 = !DILexicalBlockFile(scope: !6152, file: !1182, discriminator: 4)
!6160 = !DILocation(line: 788, column: 223, scope: !6159, inlinedAt: !5973)
!6161 = !DILocation(line: 788, column: 220, scope: !6159, inlinedAt: !5973)
!6162 = !DILocation(line: 788, column: 170, scope: !6159, inlinedAt: !5973)
!6163 = !DILocation(line: 788, column: 233, scope: !6164, inlinedAt: !5973)
!6164 = !DILexicalBlockFile(scope: !6152, file: !1182, discriminator: 5)
!6165 = !DILocation(line: 788, column: 170, scope: !6164, inlinedAt: !5973)
!6166 = !DILocation(line: 788, column: 170, scope: !6167, inlinedAt: !5973)
!6167 = !DILexicalBlockFile(scope: !6152, file: !1182, discriminator: 6)
!6168 = !DILocation(line: 788, column: 167, scope: !6167, inlinedAt: !5973)
!6169 = !DILocation(line: 788, column: 294, scope: !6167, inlinedAt: !5973)
!6170 = !DILocation(line: 788, column: 298, scope: !6167, inlinedAt: !5973)
!6171 = !DILocation(line: 788, column: 308, scope: !6167, inlinedAt: !5973)
!6172 = !DILocation(line: 788, column: 317, scope: !6167, inlinedAt: !5973)
!6173 = !DILocation(line: 788, column: 305, scope: !6167, inlinedAt: !5973)
!6174 = !DILocation(line: 788, column: 326, scope: !6167, inlinedAt: !5973)
!6175 = !DILocation(line: 788, column: 333, scope: !6167, inlinedAt: !5973)
!6176 = !DILocation(line: 788, column: 342, scope: !6167, inlinedAt: !5973)
!6177 = !DILocation(line: 788, column: 329, scope: !6167, inlinedAt: !5973)
!6178 = !DILocation(line: 788, column: 259, scope: !6167, inlinedAt: !5973)
!6179 = !DILocation(line: 788, column: 359, scope: !6167, inlinedAt: !5973)
!6180 = !DILocation(line: 788, column: 358, scope: !6167, inlinedAt: !5973)
!6181 = !DILocation(line: 788, column: 356, scope: !6167, inlinedAt: !5973)
!6182 = !DILocation(line: 788, column: 382, scope: !6167, inlinedAt: !5973)
!6183 = !DILocation(line: 788, column: 392, scope: !6167, inlinedAt: !5973)
!6184 = !DILocation(line: 788, column: 370, scope: !6167, inlinedAt: !5973)
!6185 = !DILocation(line: 788, column: 403, scope: !6167, inlinedAt: !5973)
!6186 = !DILocation(line: 788, column: 401, scope: !6167, inlinedAt: !5973)
!6187 = !DILocation(line: 788, column: 368, scope: !6167, inlinedAt: !5973)
!6188 = !DILocation(line: 788, column: 422, scope: !6167, inlinedAt: !5973)
!6189 = !DILocation(line: 788, column: 416, scope: !6167, inlinedAt: !5973)
!6190 = !DILocation(line: 788, column: 414, scope: !6167, inlinedAt: !5973)
!6191 = !DILocation(line: 788, column: 443, scope: !6167, inlinedAt: !5973)
!6192 = !DILocation(line: 788, column: 437, scope: !6167, inlinedAt: !5973)
!6193 = !DILocation(line: 788, column: 435, scope: !6167, inlinedAt: !5973)
!6194 = !DILocation(line: 788, column: 458, scope: !6167, inlinedAt: !5973)
!6195 = !DILocation(line: 788, column: 468, scope: !6167, inlinedAt: !5973)
!6196 = !DILocation(line: 788, column: 472, scope: !6167, inlinedAt: !5973)
!6197 = !DILocation(line: 788, column: 475, scope: !6198, inlinedAt: !5973)
!6198 = !DILexicalBlockFile(scope: !6199, file: !1182, discriminator: 7)
!6199 = distinct !DILexicalBlock(scope: !6152, file: !1182, line: 788, column: 458)
!6200 = !DILocation(line: 788, column: 477, scope: !6198, inlinedAt: !5973)
!6201 = !DILocation(line: 788, column: 458, scope: !6198, inlinedAt: !5973)
!6202 = !DILocation(line: 788, column: 497, scope: !6203, inlinedAt: !5973)
!6203 = !DILexicalBlockFile(scope: !6204, file: !1182, discriminator: 8)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !1182, line: 788, column: 482)
!6205 = !DILocation(line: 788, column: 515, scope: !6203, inlinedAt: !5973)
!6206 = !DILocation(line: 788, column: 527, scope: !6203, inlinedAt: !5973)
!6207 = !DILocation(line: 788, column: 524, scope: !6203, inlinedAt: !5973)
!6208 = !DILocation(line: 788, column: 512, scope: !6203, inlinedAt: !5973)
!6209 = !DILocation(line: 788, column: 496, scope: !6203, inlinedAt: !5973)
!6210 = !DILocation(line: 788, column: 540, scope: !6211, inlinedAt: !5973)
!6211 = !DILexicalBlockFile(scope: !6204, file: !1182, discriminator: 9)
!6212 = !DILocation(line: 788, column: 552, scope: !6211, inlinedAt: !5973)
!6213 = !DILocation(line: 788, column: 549, scope: !6211, inlinedAt: !5973)
!6214 = !DILocation(line: 788, column: 496, scope: !6211, inlinedAt: !5973)
!6215 = !DILocation(line: 788, column: 565, scope: !6216, inlinedAt: !5973)
!6216 = !DILexicalBlockFile(scope: !6204, file: !1182, discriminator: 10)
!6217 = !DILocation(line: 788, column: 496, scope: !6216, inlinedAt: !5973)
!6218 = !DILocation(line: 788, column: 496, scope: !6219, inlinedAt: !5973)
!6219 = !DILexicalBlockFile(scope: !6204, file: !1182, discriminator: 11)
!6220 = !DILocation(line: 788, column: 493, scope: !6219, inlinedAt: !5973)
!6221 = !DILocation(line: 788, column: 626, scope: !6219, inlinedAt: !5973)
!6222 = !DILocation(line: 788, column: 630, scope: !6219, inlinedAt: !5973)
!6223 = !DILocation(line: 788, column: 640, scope: !6219, inlinedAt: !5973)
!6224 = !DILocation(line: 788, column: 649, scope: !6219, inlinedAt: !5973)
!6225 = !DILocation(line: 788, column: 637, scope: !6219, inlinedAt: !5973)
!6226 = !DILocation(line: 788, column: 658, scope: !6219, inlinedAt: !5973)
!6227 = !DILocation(line: 788, column: 665, scope: !6219, inlinedAt: !5973)
!6228 = !DILocation(line: 788, column: 674, scope: !6219, inlinedAt: !5973)
!6229 = !DILocation(line: 788, column: 661, scope: !6219, inlinedAt: !5973)
!6230 = !DILocation(line: 788, column: 591, scope: !6219, inlinedAt: !5973)
!6231 = !DILocation(line: 788, column: 691, scope: !6219, inlinedAt: !5973)
!6232 = !DILocation(line: 788, column: 690, scope: !6219, inlinedAt: !5973)
!6233 = !DILocation(line: 788, column: 688, scope: !6219, inlinedAt: !5973)
!6234 = !DILocation(line: 788, column: 714, scope: !6219, inlinedAt: !5973)
!6235 = !DILocation(line: 788, column: 724, scope: !6219, inlinedAt: !5973)
!6236 = !DILocation(line: 788, column: 702, scope: !6219, inlinedAt: !5973)
!6237 = !DILocation(line: 788, column: 735, scope: !6219, inlinedAt: !5973)
!6238 = !DILocation(line: 788, column: 733, scope: !6219, inlinedAt: !5973)
!6239 = !DILocation(line: 788, column: 700, scope: !6219, inlinedAt: !5973)
!6240 = !DILocation(line: 788, column: 754, scope: !6219, inlinedAt: !5973)
!6241 = !DILocation(line: 788, column: 748, scope: !6219, inlinedAt: !5973)
!6242 = !DILocation(line: 788, column: 746, scope: !6219, inlinedAt: !5973)
!6243 = !DILocation(line: 788, column: 775, scope: !6219, inlinedAt: !5973)
!6244 = !DILocation(line: 788, column: 769, scope: !6219, inlinedAt: !5973)
!6245 = !DILocation(line: 788, column: 767, scope: !6219, inlinedAt: !5973)
!6246 = !DILocation(line: 788, column: 786, scope: !6219, inlinedAt: !5973)
!6247 = !DILocation(line: 788, column: 788, scope: !6248, inlinedAt: !5973)
!6248 = !DILexicalBlockFile(scope: !6152, file: !1182, discriminator: 12)
!6249 = !DILocation(line: 788, column: 809, scope: !6250, inlinedAt: !5973)
!6250 = !DILexicalBlockFile(scope: !6251, file: !1182, discriminator: 14)
!6251 = distinct !DILexicalBlock(scope: !5942, file: !1182, line: 788, column: 793)
!6252 = !DILocation(line: 788, column: 804, scope: !6250, inlinedAt: !5973)
!6253 = !DILocation(line: 788, column: 826, scope: !6250, inlinedAt: !5973)
!6254 = !DILocation(line: 788, column: 844, scope: !6250, inlinedAt: !5973)
!6255 = !DILocation(line: 788, column: 856, scope: !6250, inlinedAt: !5973)
!6256 = !DILocation(line: 788, column: 853, scope: !6250, inlinedAt: !5973)
!6257 = !DILocation(line: 788, column: 841, scope: !6250, inlinedAt: !5973)
!6258 = !DILocation(line: 788, column: 825, scope: !6250, inlinedAt: !5973)
!6259 = !DILocation(line: 788, column: 863, scope: !6260, inlinedAt: !5973)
!6260 = !DILexicalBlockFile(scope: !6251, file: !1182, discriminator: 15)
!6261 = !DILocation(line: 788, column: 875, scope: !6260, inlinedAt: !5973)
!6262 = !DILocation(line: 788, column: 872, scope: !6260, inlinedAt: !5973)
!6263 = !DILocation(line: 788, column: 825, scope: !6260, inlinedAt: !5973)
!6264 = !DILocation(line: 788, column: 882, scope: !6265, inlinedAt: !5973)
!6265 = !DILexicalBlockFile(scope: !6251, file: !1182, discriminator: 16)
!6266 = !DILocation(line: 788, column: 825, scope: !6265, inlinedAt: !5973)
!6267 = !DILocation(line: 788, column: 825, scope: !6268, inlinedAt: !5973)
!6268 = !DILexicalBlockFile(scope: !6251, file: !1182, discriminator: 17)
!6269 = !DILocation(line: 788, column: 822, scope: !6268, inlinedAt: !5973)
!6270 = !DILocation(line: 790, column: 18, scope: !5919, inlinedAt: !5973)
!6271 = !DILocation(line: 790, column: 6, scope: !5919, inlinedAt: !5973)
!6272 = !DILocation(line: 790, column: 10, scope: !5919, inlinedAt: !5973)
!6273 = !DILocation(line: 790, column: 16, scope: !5919, inlinedAt: !5973)
!6274 = !DILocation(line: 792, column: 12, scope: !5919, inlinedAt: !5973)
!6275 = !DILocation(line: 547, column: 13, scope: !5926)
!6276 = !DILocation(line: 549, column: 13, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !5926, file: !912, line: 549, column: 13)
!6278 = !DILocation(line: 549, column: 20, scope: !6277)
!6279 = !DILocation(line: 549, column: 27, scope: !6277)
!6280 = !DILocation(line: 549, column: 17, scope: !6277)
!6281 = !DILocation(line: 549, column: 13, scope: !5926)
!6282 = !DILocation(line: 550, column: 13, scope: !6277)
!6283 = !DILocation(line: 553, column: 13, scope: !5925)
!6284 = !DILocation(line: 553, column: 20, scope: !5925)
!6285 = !DILocation(line: 553, column: 27, scope: !5925)
!6286 = !DILocation(line: 553, column: 17, scope: !5925)
!6287 = !DILocation(line: 553, column: 13, scope: !5926)
!6288 = !DILocation(line: 554, column: 28, scope: !5924)
!6289 = !DILocation(line: 554, column: 32, scope: !5924)
!6290 = !DILocation(line: 554, column: 38, scope: !5924)
!6291 = !DILocation(line: 554, column: 46, scope: !5924)
!6292 = !DILocation(line: 554, column: 51, scope: !5924)
!6293 = !DILocation(line: 554, column: 19, scope: !5924)
!6294 = !DILocation(line: 785, column: 30, scope: !5919, inlinedAt: !5961)
!6295 = !DILocation(line: 785, column: 34, scope: !5919, inlinedAt: !5961)
!6296 = !DILocation(line: 785, column: 118, scope: !5919, inlinedAt: !5961)
!6297 = !DILocation(line: 785, column: 122, scope: !5919, inlinedAt: !5961)
!6298 = !DILocation(line: 786, column: 49, scope: !5919, inlinedAt: !5961)
!6299 = !DILocation(line: 786, column: 53, scope: !5919, inlinedAt: !5961)
!6300 = !DILocation(line: 786, column: 63, scope: !5919, inlinedAt: !5961)
!6301 = !DILocation(line: 786, column: 72, scope: !5919, inlinedAt: !5961)
!6302 = !DILocation(line: 786, column: 60, scope: !5919, inlinedAt: !5961)
!6303 = !DILocation(line: 786, column: 81, scope: !5919, inlinedAt: !5961)
!6304 = !DILocation(line: 786, column: 88, scope: !5919, inlinedAt: !5961)
!6305 = !DILocation(line: 786, column: 97, scope: !5919, inlinedAt: !5961)
!6306 = !DILocation(line: 786, column: 84, scope: !5919, inlinedAt: !5961)
!6307 = !DILocation(line: 786, column: 14, scope: !5919, inlinedAt: !5961)
!6308 = !DILocation(line: 788, column: 66, scope: !6132, inlinedAt: !5961)
!6309 = !DILocation(line: 788, column: 76, scope: !6132, inlinedAt: !5961)
!6310 = !DILocation(line: 788, column: 54, scope: !6132, inlinedAt: !5961)
!6311 = !DILocation(line: 788, column: 52, scope: !6132, inlinedAt: !5961)
!6312 = !DILocation(line: 788, column: 96, scope: !6132, inlinedAt: !5961)
!6313 = !DILocation(line: 788, column: 90, scope: !6132, inlinedAt: !5961)
!6314 = !DILocation(line: 788, column: 88, scope: !6132, inlinedAt: !5961)
!6315 = !DILocation(line: 788, column: 117, scope: !6132, inlinedAt: !5961)
!6316 = !DILocation(line: 788, column: 111, scope: !6132, inlinedAt: !5961)
!6317 = !DILocation(line: 788, column: 109, scope: !6132, inlinedAt: !5961)
!6318 = !DILocation(line: 788, column: 132, scope: !6132, inlinedAt: !5961)
!6319 = !DILocation(line: 788, column: 142, scope: !6132, inlinedAt: !5961)
!6320 = !DILocation(line: 788, column: 146, scope: !6132, inlinedAt: !5961)
!6321 = !DILocation(line: 788, column: 149, scope: !6146, inlinedAt: !5961)
!6322 = !DILocation(line: 788, column: 151, scope: !6146, inlinedAt: !5961)
!6323 = !DILocation(line: 788, column: 132, scope: !6146, inlinedAt: !5961)
!6324 = !DILocation(line: 788, column: 171, scope: !6151, inlinedAt: !5961)
!6325 = !DILocation(line: 788, column: 189, scope: !6151, inlinedAt: !5961)
!6326 = !DILocation(line: 788, column: 201, scope: !6151, inlinedAt: !5961)
!6327 = !DILocation(line: 788, column: 198, scope: !6151, inlinedAt: !5961)
!6328 = !DILocation(line: 788, column: 186, scope: !6151, inlinedAt: !5961)
!6329 = !DILocation(line: 788, column: 170, scope: !6151, inlinedAt: !5961)
!6330 = !DILocation(line: 788, column: 211, scope: !6159, inlinedAt: !5961)
!6331 = !DILocation(line: 788, column: 223, scope: !6159, inlinedAt: !5961)
!6332 = !DILocation(line: 788, column: 220, scope: !6159, inlinedAt: !5961)
!6333 = !DILocation(line: 788, column: 170, scope: !6159, inlinedAt: !5961)
!6334 = !DILocation(line: 788, column: 233, scope: !6164, inlinedAt: !5961)
!6335 = !DILocation(line: 788, column: 170, scope: !6164, inlinedAt: !5961)
!6336 = !DILocation(line: 788, column: 170, scope: !6167, inlinedAt: !5961)
!6337 = !DILocation(line: 788, column: 167, scope: !6167, inlinedAt: !5961)
!6338 = !DILocation(line: 788, column: 294, scope: !6167, inlinedAt: !5961)
!6339 = !DILocation(line: 788, column: 298, scope: !6167, inlinedAt: !5961)
!6340 = !DILocation(line: 788, column: 308, scope: !6167, inlinedAt: !5961)
!6341 = !DILocation(line: 788, column: 317, scope: !6167, inlinedAt: !5961)
!6342 = !DILocation(line: 788, column: 305, scope: !6167, inlinedAt: !5961)
!6343 = !DILocation(line: 788, column: 326, scope: !6167, inlinedAt: !5961)
!6344 = !DILocation(line: 788, column: 333, scope: !6167, inlinedAt: !5961)
!6345 = !DILocation(line: 788, column: 342, scope: !6167, inlinedAt: !5961)
!6346 = !DILocation(line: 788, column: 329, scope: !6167, inlinedAt: !5961)
!6347 = !DILocation(line: 788, column: 259, scope: !6167, inlinedAt: !5961)
!6348 = !DILocation(line: 788, column: 359, scope: !6167, inlinedAt: !5961)
!6349 = !DILocation(line: 788, column: 358, scope: !6167, inlinedAt: !5961)
!6350 = !DILocation(line: 788, column: 356, scope: !6167, inlinedAt: !5961)
!6351 = !DILocation(line: 788, column: 382, scope: !6167, inlinedAt: !5961)
!6352 = !DILocation(line: 788, column: 392, scope: !6167, inlinedAt: !5961)
!6353 = !DILocation(line: 788, column: 370, scope: !6167, inlinedAt: !5961)
!6354 = !DILocation(line: 788, column: 403, scope: !6167, inlinedAt: !5961)
!6355 = !DILocation(line: 788, column: 401, scope: !6167, inlinedAt: !5961)
!6356 = !DILocation(line: 788, column: 368, scope: !6167, inlinedAt: !5961)
!6357 = !DILocation(line: 788, column: 422, scope: !6167, inlinedAt: !5961)
!6358 = !DILocation(line: 788, column: 416, scope: !6167, inlinedAt: !5961)
!6359 = !DILocation(line: 788, column: 414, scope: !6167, inlinedAt: !5961)
!6360 = !DILocation(line: 788, column: 443, scope: !6167, inlinedAt: !5961)
!6361 = !DILocation(line: 788, column: 437, scope: !6167, inlinedAt: !5961)
!6362 = !DILocation(line: 788, column: 435, scope: !6167, inlinedAt: !5961)
!6363 = !DILocation(line: 788, column: 458, scope: !6167, inlinedAt: !5961)
!6364 = !DILocation(line: 788, column: 468, scope: !6167, inlinedAt: !5961)
!6365 = !DILocation(line: 788, column: 472, scope: !6167, inlinedAt: !5961)
!6366 = !DILocation(line: 788, column: 475, scope: !6198, inlinedAt: !5961)
!6367 = !DILocation(line: 788, column: 477, scope: !6198, inlinedAt: !5961)
!6368 = !DILocation(line: 788, column: 458, scope: !6198, inlinedAt: !5961)
!6369 = !DILocation(line: 788, column: 497, scope: !6203, inlinedAt: !5961)
!6370 = !DILocation(line: 788, column: 515, scope: !6203, inlinedAt: !5961)
!6371 = !DILocation(line: 788, column: 527, scope: !6203, inlinedAt: !5961)
!6372 = !DILocation(line: 788, column: 524, scope: !6203, inlinedAt: !5961)
!6373 = !DILocation(line: 788, column: 512, scope: !6203, inlinedAt: !5961)
!6374 = !DILocation(line: 788, column: 496, scope: !6203, inlinedAt: !5961)
!6375 = !DILocation(line: 788, column: 540, scope: !6211, inlinedAt: !5961)
!6376 = !DILocation(line: 788, column: 552, scope: !6211, inlinedAt: !5961)
!6377 = !DILocation(line: 788, column: 549, scope: !6211, inlinedAt: !5961)
!6378 = !DILocation(line: 788, column: 496, scope: !6211, inlinedAt: !5961)
!6379 = !DILocation(line: 788, column: 565, scope: !6216, inlinedAt: !5961)
!6380 = !DILocation(line: 788, column: 496, scope: !6216, inlinedAt: !5961)
!6381 = !DILocation(line: 788, column: 496, scope: !6219, inlinedAt: !5961)
!6382 = !DILocation(line: 788, column: 493, scope: !6219, inlinedAt: !5961)
!6383 = !DILocation(line: 788, column: 626, scope: !6219, inlinedAt: !5961)
!6384 = !DILocation(line: 788, column: 630, scope: !6219, inlinedAt: !5961)
!6385 = !DILocation(line: 788, column: 640, scope: !6219, inlinedAt: !5961)
!6386 = !DILocation(line: 788, column: 649, scope: !6219, inlinedAt: !5961)
!6387 = !DILocation(line: 788, column: 637, scope: !6219, inlinedAt: !5961)
!6388 = !DILocation(line: 788, column: 658, scope: !6219, inlinedAt: !5961)
!6389 = !DILocation(line: 788, column: 665, scope: !6219, inlinedAt: !5961)
!6390 = !DILocation(line: 788, column: 674, scope: !6219, inlinedAt: !5961)
!6391 = !DILocation(line: 788, column: 661, scope: !6219, inlinedAt: !5961)
!6392 = !DILocation(line: 788, column: 591, scope: !6219, inlinedAt: !5961)
!6393 = !DILocation(line: 788, column: 691, scope: !6219, inlinedAt: !5961)
!6394 = !DILocation(line: 788, column: 690, scope: !6219, inlinedAt: !5961)
!6395 = !DILocation(line: 788, column: 688, scope: !6219, inlinedAt: !5961)
!6396 = !DILocation(line: 788, column: 714, scope: !6219, inlinedAt: !5961)
!6397 = !DILocation(line: 788, column: 724, scope: !6219, inlinedAt: !5961)
!6398 = !DILocation(line: 788, column: 702, scope: !6219, inlinedAt: !5961)
!6399 = !DILocation(line: 788, column: 735, scope: !6219, inlinedAt: !5961)
!6400 = !DILocation(line: 788, column: 733, scope: !6219, inlinedAt: !5961)
!6401 = !DILocation(line: 788, column: 700, scope: !6219, inlinedAt: !5961)
!6402 = !DILocation(line: 788, column: 754, scope: !6219, inlinedAt: !5961)
!6403 = !DILocation(line: 788, column: 748, scope: !6219, inlinedAt: !5961)
!6404 = !DILocation(line: 788, column: 746, scope: !6219, inlinedAt: !5961)
!6405 = !DILocation(line: 788, column: 775, scope: !6219, inlinedAt: !5961)
!6406 = !DILocation(line: 788, column: 769, scope: !6219, inlinedAt: !5961)
!6407 = !DILocation(line: 788, column: 767, scope: !6219, inlinedAt: !5961)
!6408 = !DILocation(line: 788, column: 786, scope: !6219, inlinedAt: !5961)
!6409 = !DILocation(line: 788, column: 788, scope: !6248, inlinedAt: !5961)
!6410 = !DILocation(line: 788, column: 809, scope: !6250, inlinedAt: !5961)
!6411 = !DILocation(line: 788, column: 804, scope: !6250, inlinedAt: !5961)
!6412 = !DILocation(line: 788, column: 826, scope: !6250, inlinedAt: !5961)
!6413 = !DILocation(line: 788, column: 844, scope: !6250, inlinedAt: !5961)
!6414 = !DILocation(line: 788, column: 856, scope: !6250, inlinedAt: !5961)
!6415 = !DILocation(line: 788, column: 853, scope: !6250, inlinedAt: !5961)
!6416 = !DILocation(line: 788, column: 841, scope: !6250, inlinedAt: !5961)
!6417 = !DILocation(line: 788, column: 825, scope: !6250, inlinedAt: !5961)
!6418 = !DILocation(line: 788, column: 863, scope: !6260, inlinedAt: !5961)
!6419 = !DILocation(line: 788, column: 875, scope: !6260, inlinedAt: !5961)
!6420 = !DILocation(line: 788, column: 872, scope: !6260, inlinedAt: !5961)
!6421 = !DILocation(line: 788, column: 825, scope: !6260, inlinedAt: !5961)
!6422 = !DILocation(line: 788, column: 882, scope: !6265, inlinedAt: !5961)
!6423 = !DILocation(line: 788, column: 825, scope: !6265, inlinedAt: !5961)
!6424 = !DILocation(line: 788, column: 825, scope: !6268, inlinedAt: !5961)
!6425 = !DILocation(line: 788, column: 822, scope: !6268, inlinedAt: !5961)
!6426 = !DILocation(line: 790, column: 18, scope: !5919, inlinedAt: !5961)
!6427 = !DILocation(line: 790, column: 6, scope: !5919, inlinedAt: !5961)
!6428 = !DILocation(line: 790, column: 10, scope: !5919, inlinedAt: !5961)
!6429 = !DILocation(line: 790, column: 16, scope: !5919, inlinedAt: !5961)
!6430 = !DILocation(line: 792, column: 12, scope: !5919, inlinedAt: !5961)
!6431 = !DILocation(line: 554, column: 65, scope: !5924)
!6432 = !DILocation(line: 554, column: 17, scope: !5924)
!6433 = !DILocation(line: 555, column: 27, scope: !5924)
!6434 = !DILocation(line: 555, column: 31, scope: !5924)
!6435 = !DILocation(line: 555, column: 37, scope: !5924)
!6436 = !DILocation(line: 555, column: 45, scope: !5924)
!6437 = !DILocation(line: 555, column: 50, scope: !5924)
!6438 = !DILocation(line: 555, column: 18, scope: !5924)
!6439 = !DILocation(line: 785, column: 30, scope: !5919, inlinedAt: !5949)
!6440 = !DILocation(line: 785, column: 34, scope: !5919, inlinedAt: !5949)
!6441 = !DILocation(line: 785, column: 118, scope: !5919, inlinedAt: !5949)
!6442 = !DILocation(line: 785, column: 122, scope: !5919, inlinedAt: !5949)
!6443 = !DILocation(line: 786, column: 49, scope: !5919, inlinedAt: !5949)
!6444 = !DILocation(line: 786, column: 53, scope: !5919, inlinedAt: !5949)
!6445 = !DILocation(line: 786, column: 63, scope: !5919, inlinedAt: !5949)
!6446 = !DILocation(line: 786, column: 72, scope: !5919, inlinedAt: !5949)
!6447 = !DILocation(line: 786, column: 60, scope: !5919, inlinedAt: !5949)
!6448 = !DILocation(line: 786, column: 81, scope: !5919, inlinedAt: !5949)
!6449 = !DILocation(line: 786, column: 88, scope: !5919, inlinedAt: !5949)
!6450 = !DILocation(line: 786, column: 97, scope: !5919, inlinedAt: !5949)
!6451 = !DILocation(line: 786, column: 84, scope: !5919, inlinedAt: !5949)
!6452 = !DILocation(line: 786, column: 14, scope: !5919, inlinedAt: !5949)
!6453 = !DILocation(line: 788, column: 66, scope: !6132, inlinedAt: !5949)
!6454 = !DILocation(line: 788, column: 76, scope: !6132, inlinedAt: !5949)
!6455 = !DILocation(line: 788, column: 54, scope: !6132, inlinedAt: !5949)
!6456 = !DILocation(line: 788, column: 52, scope: !6132, inlinedAt: !5949)
!6457 = !DILocation(line: 788, column: 96, scope: !6132, inlinedAt: !5949)
!6458 = !DILocation(line: 788, column: 90, scope: !6132, inlinedAt: !5949)
!6459 = !DILocation(line: 788, column: 88, scope: !6132, inlinedAt: !5949)
!6460 = !DILocation(line: 788, column: 117, scope: !6132, inlinedAt: !5949)
!6461 = !DILocation(line: 788, column: 111, scope: !6132, inlinedAt: !5949)
!6462 = !DILocation(line: 788, column: 109, scope: !6132, inlinedAt: !5949)
!6463 = !DILocation(line: 788, column: 132, scope: !6132, inlinedAt: !5949)
!6464 = !DILocation(line: 788, column: 142, scope: !6132, inlinedAt: !5949)
!6465 = !DILocation(line: 788, column: 146, scope: !6132, inlinedAt: !5949)
!6466 = !DILocation(line: 788, column: 149, scope: !6146, inlinedAt: !5949)
!6467 = !DILocation(line: 788, column: 151, scope: !6146, inlinedAt: !5949)
!6468 = !DILocation(line: 788, column: 132, scope: !6146, inlinedAt: !5949)
!6469 = !DILocation(line: 788, column: 171, scope: !6151, inlinedAt: !5949)
!6470 = !DILocation(line: 788, column: 189, scope: !6151, inlinedAt: !5949)
!6471 = !DILocation(line: 788, column: 201, scope: !6151, inlinedAt: !5949)
!6472 = !DILocation(line: 788, column: 198, scope: !6151, inlinedAt: !5949)
!6473 = !DILocation(line: 788, column: 186, scope: !6151, inlinedAt: !5949)
!6474 = !DILocation(line: 788, column: 170, scope: !6151, inlinedAt: !5949)
!6475 = !DILocation(line: 788, column: 211, scope: !6159, inlinedAt: !5949)
!6476 = !DILocation(line: 788, column: 223, scope: !6159, inlinedAt: !5949)
!6477 = !DILocation(line: 788, column: 220, scope: !6159, inlinedAt: !5949)
!6478 = !DILocation(line: 788, column: 170, scope: !6159, inlinedAt: !5949)
!6479 = !DILocation(line: 788, column: 233, scope: !6164, inlinedAt: !5949)
!6480 = !DILocation(line: 788, column: 170, scope: !6164, inlinedAt: !5949)
!6481 = !DILocation(line: 788, column: 170, scope: !6167, inlinedAt: !5949)
!6482 = !DILocation(line: 788, column: 167, scope: !6167, inlinedAt: !5949)
!6483 = !DILocation(line: 788, column: 294, scope: !6167, inlinedAt: !5949)
!6484 = !DILocation(line: 788, column: 298, scope: !6167, inlinedAt: !5949)
!6485 = !DILocation(line: 788, column: 308, scope: !6167, inlinedAt: !5949)
!6486 = !DILocation(line: 788, column: 317, scope: !6167, inlinedAt: !5949)
!6487 = !DILocation(line: 788, column: 305, scope: !6167, inlinedAt: !5949)
!6488 = !DILocation(line: 788, column: 326, scope: !6167, inlinedAt: !5949)
!6489 = !DILocation(line: 788, column: 333, scope: !6167, inlinedAt: !5949)
!6490 = !DILocation(line: 788, column: 342, scope: !6167, inlinedAt: !5949)
!6491 = !DILocation(line: 788, column: 329, scope: !6167, inlinedAt: !5949)
!6492 = !DILocation(line: 788, column: 259, scope: !6167, inlinedAt: !5949)
!6493 = !DILocation(line: 788, column: 359, scope: !6167, inlinedAt: !5949)
!6494 = !DILocation(line: 788, column: 358, scope: !6167, inlinedAt: !5949)
!6495 = !DILocation(line: 788, column: 356, scope: !6167, inlinedAt: !5949)
!6496 = !DILocation(line: 788, column: 382, scope: !6167, inlinedAt: !5949)
!6497 = !DILocation(line: 788, column: 392, scope: !6167, inlinedAt: !5949)
!6498 = !DILocation(line: 788, column: 370, scope: !6167, inlinedAt: !5949)
!6499 = !DILocation(line: 788, column: 403, scope: !6167, inlinedAt: !5949)
!6500 = !DILocation(line: 788, column: 401, scope: !6167, inlinedAt: !5949)
!6501 = !DILocation(line: 788, column: 368, scope: !6167, inlinedAt: !5949)
!6502 = !DILocation(line: 788, column: 422, scope: !6167, inlinedAt: !5949)
!6503 = !DILocation(line: 788, column: 416, scope: !6167, inlinedAt: !5949)
!6504 = !DILocation(line: 788, column: 414, scope: !6167, inlinedAt: !5949)
!6505 = !DILocation(line: 788, column: 443, scope: !6167, inlinedAt: !5949)
!6506 = !DILocation(line: 788, column: 437, scope: !6167, inlinedAt: !5949)
!6507 = !DILocation(line: 788, column: 435, scope: !6167, inlinedAt: !5949)
!6508 = !DILocation(line: 788, column: 458, scope: !6167, inlinedAt: !5949)
!6509 = !DILocation(line: 788, column: 468, scope: !6167, inlinedAt: !5949)
!6510 = !DILocation(line: 788, column: 472, scope: !6167, inlinedAt: !5949)
!6511 = !DILocation(line: 788, column: 475, scope: !6198, inlinedAt: !5949)
!6512 = !DILocation(line: 788, column: 477, scope: !6198, inlinedAt: !5949)
!6513 = !DILocation(line: 788, column: 458, scope: !6198, inlinedAt: !5949)
!6514 = !DILocation(line: 788, column: 497, scope: !6203, inlinedAt: !5949)
!6515 = !DILocation(line: 788, column: 515, scope: !6203, inlinedAt: !5949)
!6516 = !DILocation(line: 788, column: 527, scope: !6203, inlinedAt: !5949)
!6517 = !DILocation(line: 788, column: 524, scope: !6203, inlinedAt: !5949)
!6518 = !DILocation(line: 788, column: 512, scope: !6203, inlinedAt: !5949)
!6519 = !DILocation(line: 788, column: 496, scope: !6203, inlinedAt: !5949)
!6520 = !DILocation(line: 788, column: 540, scope: !6211, inlinedAt: !5949)
!6521 = !DILocation(line: 788, column: 552, scope: !6211, inlinedAt: !5949)
!6522 = !DILocation(line: 788, column: 549, scope: !6211, inlinedAt: !5949)
!6523 = !DILocation(line: 788, column: 496, scope: !6211, inlinedAt: !5949)
!6524 = !DILocation(line: 788, column: 565, scope: !6216, inlinedAt: !5949)
!6525 = !DILocation(line: 788, column: 496, scope: !6216, inlinedAt: !5949)
!6526 = !DILocation(line: 788, column: 496, scope: !6219, inlinedAt: !5949)
!6527 = !DILocation(line: 788, column: 493, scope: !6219, inlinedAt: !5949)
!6528 = !DILocation(line: 788, column: 626, scope: !6219, inlinedAt: !5949)
!6529 = !DILocation(line: 788, column: 630, scope: !6219, inlinedAt: !5949)
!6530 = !DILocation(line: 788, column: 640, scope: !6219, inlinedAt: !5949)
!6531 = !DILocation(line: 788, column: 649, scope: !6219, inlinedAt: !5949)
!6532 = !DILocation(line: 788, column: 637, scope: !6219, inlinedAt: !5949)
!6533 = !DILocation(line: 788, column: 658, scope: !6219, inlinedAt: !5949)
!6534 = !DILocation(line: 788, column: 665, scope: !6219, inlinedAt: !5949)
!6535 = !DILocation(line: 788, column: 674, scope: !6219, inlinedAt: !5949)
!6536 = !DILocation(line: 788, column: 661, scope: !6219, inlinedAt: !5949)
!6537 = !DILocation(line: 788, column: 591, scope: !6219, inlinedAt: !5949)
!6538 = !DILocation(line: 788, column: 691, scope: !6219, inlinedAt: !5949)
!6539 = !DILocation(line: 788, column: 690, scope: !6219, inlinedAt: !5949)
!6540 = !DILocation(line: 788, column: 688, scope: !6219, inlinedAt: !5949)
!6541 = !DILocation(line: 788, column: 714, scope: !6219, inlinedAt: !5949)
!6542 = !DILocation(line: 788, column: 724, scope: !6219, inlinedAt: !5949)
!6543 = !DILocation(line: 788, column: 702, scope: !6219, inlinedAt: !5949)
!6544 = !DILocation(line: 788, column: 735, scope: !6219, inlinedAt: !5949)
!6545 = !DILocation(line: 788, column: 733, scope: !6219, inlinedAt: !5949)
!6546 = !DILocation(line: 788, column: 700, scope: !6219, inlinedAt: !5949)
!6547 = !DILocation(line: 788, column: 754, scope: !6219, inlinedAt: !5949)
!6548 = !DILocation(line: 788, column: 748, scope: !6219, inlinedAt: !5949)
!6549 = !DILocation(line: 788, column: 746, scope: !6219, inlinedAt: !5949)
!6550 = !DILocation(line: 788, column: 775, scope: !6219, inlinedAt: !5949)
!6551 = !DILocation(line: 788, column: 769, scope: !6219, inlinedAt: !5949)
!6552 = !DILocation(line: 788, column: 767, scope: !6219, inlinedAt: !5949)
!6553 = !DILocation(line: 788, column: 786, scope: !6219, inlinedAt: !5949)
!6554 = !DILocation(line: 788, column: 788, scope: !6248, inlinedAt: !5949)
!6555 = !DILocation(line: 788, column: 809, scope: !6250, inlinedAt: !5949)
!6556 = !DILocation(line: 788, column: 804, scope: !6250, inlinedAt: !5949)
!6557 = !DILocation(line: 788, column: 826, scope: !6250, inlinedAt: !5949)
!6558 = !DILocation(line: 788, column: 844, scope: !6250, inlinedAt: !5949)
!6559 = !DILocation(line: 788, column: 856, scope: !6250, inlinedAt: !5949)
!6560 = !DILocation(line: 788, column: 853, scope: !6250, inlinedAt: !5949)
!6561 = !DILocation(line: 788, column: 841, scope: !6250, inlinedAt: !5949)
!6562 = !DILocation(line: 788, column: 825, scope: !6250, inlinedAt: !5949)
!6563 = !DILocation(line: 788, column: 863, scope: !6260, inlinedAt: !5949)
!6564 = !DILocation(line: 788, column: 875, scope: !6260, inlinedAt: !5949)
!6565 = !DILocation(line: 788, column: 872, scope: !6260, inlinedAt: !5949)
!6566 = !DILocation(line: 788, column: 825, scope: !6260, inlinedAt: !5949)
!6567 = !DILocation(line: 788, column: 882, scope: !6265, inlinedAt: !5949)
!6568 = !DILocation(line: 788, column: 825, scope: !6265, inlinedAt: !5949)
!6569 = !DILocation(line: 788, column: 825, scope: !6268, inlinedAt: !5949)
!6570 = !DILocation(line: 788, column: 822, scope: !6268, inlinedAt: !5949)
!6571 = !DILocation(line: 790, column: 18, scope: !5919, inlinedAt: !5949)
!6572 = !DILocation(line: 790, column: 6, scope: !5919, inlinedAt: !5949)
!6573 = !DILocation(line: 790, column: 10, scope: !5919, inlinedAt: !5949)
!6574 = !DILocation(line: 790, column: 16, scope: !5919, inlinedAt: !5949)
!6575 = !DILocation(line: 792, column: 12, scope: !5919, inlinedAt: !5949)
!6576 = !DILocation(line: 555, column: 16, scope: !5924)
!6577 = !DILocation(line: 556, column: 27, scope: !5924)
!6578 = !DILocation(line: 556, column: 31, scope: !5924)
!6579 = !DILocation(line: 556, column: 37, scope: !5924)
!6580 = !DILocation(line: 556, column: 45, scope: !5924)
!6581 = !DILocation(line: 556, column: 50, scope: !5924)
!6582 = !DILocation(line: 556, column: 18, scope: !5924)
!6583 = !DILocation(line: 785, column: 30, scope: !5919, inlinedAt: !5923)
!6584 = !DILocation(line: 785, column: 34, scope: !5919, inlinedAt: !5923)
!6585 = !DILocation(line: 785, column: 118, scope: !5919, inlinedAt: !5923)
!6586 = !DILocation(line: 785, column: 122, scope: !5919, inlinedAt: !5923)
!6587 = !DILocation(line: 786, column: 49, scope: !5919, inlinedAt: !5923)
!6588 = !DILocation(line: 786, column: 53, scope: !5919, inlinedAt: !5923)
!6589 = !DILocation(line: 786, column: 63, scope: !5919, inlinedAt: !5923)
!6590 = !DILocation(line: 786, column: 72, scope: !5919, inlinedAt: !5923)
!6591 = !DILocation(line: 786, column: 60, scope: !5919, inlinedAt: !5923)
!6592 = !DILocation(line: 786, column: 81, scope: !5919, inlinedAt: !5923)
!6593 = !DILocation(line: 786, column: 88, scope: !5919, inlinedAt: !5923)
!6594 = !DILocation(line: 786, column: 97, scope: !5919, inlinedAt: !5923)
!6595 = !DILocation(line: 786, column: 84, scope: !5919, inlinedAt: !5923)
!6596 = !DILocation(line: 786, column: 14, scope: !5919, inlinedAt: !5923)
!6597 = !DILocation(line: 788, column: 66, scope: !6132, inlinedAt: !5923)
!6598 = !DILocation(line: 788, column: 76, scope: !6132, inlinedAt: !5923)
!6599 = !DILocation(line: 788, column: 54, scope: !6132, inlinedAt: !5923)
!6600 = !DILocation(line: 788, column: 52, scope: !6132, inlinedAt: !5923)
!6601 = !DILocation(line: 788, column: 96, scope: !6132, inlinedAt: !5923)
!6602 = !DILocation(line: 788, column: 90, scope: !6132, inlinedAt: !5923)
!6603 = !DILocation(line: 788, column: 88, scope: !6132, inlinedAt: !5923)
!6604 = !DILocation(line: 788, column: 117, scope: !6132, inlinedAt: !5923)
!6605 = !DILocation(line: 788, column: 111, scope: !6132, inlinedAt: !5923)
!6606 = !DILocation(line: 788, column: 109, scope: !6132, inlinedAt: !5923)
!6607 = !DILocation(line: 788, column: 132, scope: !6132, inlinedAt: !5923)
!6608 = !DILocation(line: 788, column: 142, scope: !6132, inlinedAt: !5923)
!6609 = !DILocation(line: 788, column: 146, scope: !6132, inlinedAt: !5923)
!6610 = !DILocation(line: 788, column: 149, scope: !6146, inlinedAt: !5923)
!6611 = !DILocation(line: 788, column: 151, scope: !6146, inlinedAt: !5923)
!6612 = !DILocation(line: 788, column: 132, scope: !6146, inlinedAt: !5923)
!6613 = !DILocation(line: 788, column: 171, scope: !6151, inlinedAt: !5923)
!6614 = !DILocation(line: 788, column: 189, scope: !6151, inlinedAt: !5923)
!6615 = !DILocation(line: 788, column: 201, scope: !6151, inlinedAt: !5923)
!6616 = !DILocation(line: 788, column: 198, scope: !6151, inlinedAt: !5923)
!6617 = !DILocation(line: 788, column: 186, scope: !6151, inlinedAt: !5923)
!6618 = !DILocation(line: 788, column: 170, scope: !6151, inlinedAt: !5923)
!6619 = !DILocation(line: 788, column: 211, scope: !6159, inlinedAt: !5923)
!6620 = !DILocation(line: 788, column: 223, scope: !6159, inlinedAt: !5923)
!6621 = !DILocation(line: 788, column: 220, scope: !6159, inlinedAt: !5923)
!6622 = !DILocation(line: 788, column: 170, scope: !6159, inlinedAt: !5923)
!6623 = !DILocation(line: 788, column: 233, scope: !6164, inlinedAt: !5923)
!6624 = !DILocation(line: 788, column: 170, scope: !6164, inlinedAt: !5923)
!6625 = !DILocation(line: 788, column: 170, scope: !6167, inlinedAt: !5923)
!6626 = !DILocation(line: 788, column: 167, scope: !6167, inlinedAt: !5923)
!6627 = !DILocation(line: 788, column: 294, scope: !6167, inlinedAt: !5923)
!6628 = !DILocation(line: 788, column: 298, scope: !6167, inlinedAt: !5923)
!6629 = !DILocation(line: 788, column: 308, scope: !6167, inlinedAt: !5923)
!6630 = !DILocation(line: 788, column: 317, scope: !6167, inlinedAt: !5923)
!6631 = !DILocation(line: 788, column: 305, scope: !6167, inlinedAt: !5923)
!6632 = !DILocation(line: 788, column: 326, scope: !6167, inlinedAt: !5923)
!6633 = !DILocation(line: 788, column: 333, scope: !6167, inlinedAt: !5923)
!6634 = !DILocation(line: 788, column: 342, scope: !6167, inlinedAt: !5923)
!6635 = !DILocation(line: 788, column: 329, scope: !6167, inlinedAt: !5923)
!6636 = !DILocation(line: 788, column: 259, scope: !6167, inlinedAt: !5923)
!6637 = !DILocation(line: 788, column: 359, scope: !6167, inlinedAt: !5923)
!6638 = !DILocation(line: 788, column: 358, scope: !6167, inlinedAt: !5923)
!6639 = !DILocation(line: 788, column: 356, scope: !6167, inlinedAt: !5923)
!6640 = !DILocation(line: 788, column: 382, scope: !6167, inlinedAt: !5923)
!6641 = !DILocation(line: 788, column: 392, scope: !6167, inlinedAt: !5923)
!6642 = !DILocation(line: 788, column: 370, scope: !6167, inlinedAt: !5923)
!6643 = !DILocation(line: 788, column: 403, scope: !6167, inlinedAt: !5923)
!6644 = !DILocation(line: 788, column: 401, scope: !6167, inlinedAt: !5923)
!6645 = !DILocation(line: 788, column: 368, scope: !6167, inlinedAt: !5923)
!6646 = !DILocation(line: 788, column: 422, scope: !6167, inlinedAt: !5923)
!6647 = !DILocation(line: 788, column: 416, scope: !6167, inlinedAt: !5923)
!6648 = !DILocation(line: 788, column: 414, scope: !6167, inlinedAt: !5923)
!6649 = !DILocation(line: 788, column: 443, scope: !6167, inlinedAt: !5923)
!6650 = !DILocation(line: 788, column: 437, scope: !6167, inlinedAt: !5923)
!6651 = !DILocation(line: 788, column: 435, scope: !6167, inlinedAt: !5923)
!6652 = !DILocation(line: 788, column: 458, scope: !6167, inlinedAt: !5923)
!6653 = !DILocation(line: 788, column: 468, scope: !6167, inlinedAt: !5923)
!6654 = !DILocation(line: 788, column: 472, scope: !6167, inlinedAt: !5923)
!6655 = !DILocation(line: 788, column: 475, scope: !6198, inlinedAt: !5923)
!6656 = !DILocation(line: 788, column: 477, scope: !6198, inlinedAt: !5923)
!6657 = !DILocation(line: 788, column: 458, scope: !6198, inlinedAt: !5923)
!6658 = !DILocation(line: 788, column: 497, scope: !6203, inlinedAt: !5923)
!6659 = !DILocation(line: 788, column: 515, scope: !6203, inlinedAt: !5923)
!6660 = !DILocation(line: 788, column: 527, scope: !6203, inlinedAt: !5923)
!6661 = !DILocation(line: 788, column: 524, scope: !6203, inlinedAt: !5923)
!6662 = !DILocation(line: 788, column: 512, scope: !6203, inlinedAt: !5923)
!6663 = !DILocation(line: 788, column: 496, scope: !6203, inlinedAt: !5923)
!6664 = !DILocation(line: 788, column: 540, scope: !6211, inlinedAt: !5923)
!6665 = !DILocation(line: 788, column: 552, scope: !6211, inlinedAt: !5923)
!6666 = !DILocation(line: 788, column: 549, scope: !6211, inlinedAt: !5923)
!6667 = !DILocation(line: 788, column: 496, scope: !6211, inlinedAt: !5923)
!6668 = !DILocation(line: 788, column: 565, scope: !6216, inlinedAt: !5923)
!6669 = !DILocation(line: 788, column: 496, scope: !6216, inlinedAt: !5923)
!6670 = !DILocation(line: 788, column: 496, scope: !6219, inlinedAt: !5923)
!6671 = !DILocation(line: 788, column: 493, scope: !6219, inlinedAt: !5923)
!6672 = !DILocation(line: 788, column: 626, scope: !6219, inlinedAt: !5923)
!6673 = !DILocation(line: 788, column: 630, scope: !6219, inlinedAt: !5923)
!6674 = !DILocation(line: 788, column: 640, scope: !6219, inlinedAt: !5923)
!6675 = !DILocation(line: 788, column: 649, scope: !6219, inlinedAt: !5923)
!6676 = !DILocation(line: 788, column: 637, scope: !6219, inlinedAt: !5923)
!6677 = !DILocation(line: 788, column: 658, scope: !6219, inlinedAt: !5923)
!6678 = !DILocation(line: 788, column: 665, scope: !6219, inlinedAt: !5923)
!6679 = !DILocation(line: 788, column: 674, scope: !6219, inlinedAt: !5923)
!6680 = !DILocation(line: 788, column: 661, scope: !6219, inlinedAt: !5923)
!6681 = !DILocation(line: 788, column: 591, scope: !6219, inlinedAt: !5923)
!6682 = !DILocation(line: 788, column: 691, scope: !6219, inlinedAt: !5923)
!6683 = !DILocation(line: 788, column: 690, scope: !6219, inlinedAt: !5923)
!6684 = !DILocation(line: 788, column: 688, scope: !6219, inlinedAt: !5923)
!6685 = !DILocation(line: 788, column: 714, scope: !6219, inlinedAt: !5923)
!6686 = !DILocation(line: 788, column: 724, scope: !6219, inlinedAt: !5923)
!6687 = !DILocation(line: 788, column: 702, scope: !6219, inlinedAt: !5923)
!6688 = !DILocation(line: 788, column: 735, scope: !6219, inlinedAt: !5923)
!6689 = !DILocation(line: 788, column: 733, scope: !6219, inlinedAt: !5923)
!6690 = !DILocation(line: 788, column: 700, scope: !6219, inlinedAt: !5923)
!6691 = !DILocation(line: 788, column: 754, scope: !6219, inlinedAt: !5923)
!6692 = !DILocation(line: 788, column: 748, scope: !6219, inlinedAt: !5923)
!6693 = !DILocation(line: 788, column: 746, scope: !6219, inlinedAt: !5923)
!6694 = !DILocation(line: 788, column: 775, scope: !6219, inlinedAt: !5923)
!6695 = !DILocation(line: 788, column: 769, scope: !6219, inlinedAt: !5923)
!6696 = !DILocation(line: 788, column: 767, scope: !6219, inlinedAt: !5923)
!6697 = !DILocation(line: 788, column: 786, scope: !6219, inlinedAt: !5923)
!6698 = !DILocation(line: 788, column: 788, scope: !6248, inlinedAt: !5923)
!6699 = !DILocation(line: 788, column: 809, scope: !6250, inlinedAt: !5923)
!6700 = !DILocation(line: 788, column: 804, scope: !6250, inlinedAt: !5923)
!6701 = !DILocation(line: 788, column: 826, scope: !6250, inlinedAt: !5923)
!6702 = !DILocation(line: 788, column: 844, scope: !6250, inlinedAt: !5923)
!6703 = !DILocation(line: 788, column: 856, scope: !6250, inlinedAt: !5923)
!6704 = !DILocation(line: 788, column: 853, scope: !6250, inlinedAt: !5923)
!6705 = !DILocation(line: 788, column: 841, scope: !6250, inlinedAt: !5923)
!6706 = !DILocation(line: 788, column: 825, scope: !6250, inlinedAt: !5923)
!6707 = !DILocation(line: 788, column: 863, scope: !6260, inlinedAt: !5923)
!6708 = !DILocation(line: 788, column: 875, scope: !6260, inlinedAt: !5923)
!6709 = !DILocation(line: 788, column: 872, scope: !6260, inlinedAt: !5923)
!6710 = !DILocation(line: 788, column: 825, scope: !6260, inlinedAt: !5923)
!6711 = !DILocation(line: 788, column: 882, scope: !6265, inlinedAt: !5923)
!6712 = !DILocation(line: 788, column: 825, scope: !6265, inlinedAt: !5923)
!6713 = !DILocation(line: 788, column: 825, scope: !6268, inlinedAt: !5923)
!6714 = !DILocation(line: 788, column: 822, scope: !6268, inlinedAt: !5923)
!6715 = !DILocation(line: 790, column: 18, scope: !5919, inlinedAt: !5923)
!6716 = !DILocation(line: 790, column: 6, scope: !5919, inlinedAt: !5923)
!6717 = !DILocation(line: 790, column: 10, scope: !5919, inlinedAt: !5923)
!6718 = !DILocation(line: 790, column: 16, scope: !5919, inlinedAt: !5923)
!6719 = !DILocation(line: 792, column: 12, scope: !5919, inlinedAt: !5923)
!6720 = !DILocation(line: 556, column: 16, scope: !5924)
!6721 = !DILocation(line: 558, column: 25, scope: !5924)
!6722 = !DILocation(line: 558, column: 28, scope: !5924)
!6723 = !DILocation(line: 558, column: 36, scope: !5924)
!6724 = !DILocation(line: 558, column: 34, scope: !5924)
!6725 = !DILocation(line: 558, column: 40, scope: !5924)
!6726 = !DILocation(line: 558, column: 52, scope: !5924)
!6727 = !DILocation(line: 558, column: 55, scope: !5924)
!6728 = !DILocation(line: 558, column: 63, scope: !5924)
!6729 = !DILocation(line: 558, column: 61, scope: !5924)
!6730 = !DILocation(line: 558, column: 67, scope: !5924)
!6731 = !DILocation(line: 558, column: 48, scope: !5924)
!6732 = !DILocation(line: 558, column: 46, scope: !5924)
!6733 = !DILocation(line: 558, column: 20, scope: !5924)
!6734 = !DILocation(line: 558, column: 17, scope: !5924)
!6735 = !DILocation(line: 559, column: 9, scope: !5924)
!6736 = !DILocation(line: 560, column: 17, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !912, line: 560, column: 17)
!6738 = distinct !DILexicalBlock(scope: !5925, file: !912, line: 559, column: 16)
!6739 = !DILocation(line: 560, column: 21, scope: !6737)
!6740 = !DILocation(line: 560, column: 17, scope: !6738)
!6741 = !DILocation(line: 561, column: 24, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6737, file: !912, line: 560, column: 30)
!6743 = !DILocation(line: 561, column: 85, scope: !6742)
!6744 = !DILocation(line: 561, column: 17, scope: !6742)
!6745 = !DILocation(line: 562, column: 17, scope: !6742)
!6746 = !DILocation(line: 564, column: 33, scope: !6738)
!6747 = !DILocation(line: 564, column: 19, scope: !6738)
!6748 = !DILocation(line: 564, column: 26, scope: !6738)
!6749 = !DILocation(line: 564, column: 17, scope: !6738)
!6750 = !DILocation(line: 565, column: 33, scope: !6738)
!6751 = !DILocation(line: 565, column: 19, scope: !6738)
!6752 = !DILocation(line: 565, column: 26, scope: !6738)
!6753 = !DILocation(line: 565, column: 17, scope: !6738)
!6754 = !DILocation(line: 569, column: 21, scope: !5926)
!6755 = !DILocation(line: 569, column: 18, scope: !5926)
!6756 = !DILocation(line: 570, column: 13, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !5926, file: !912, line: 570, column: 13)
!6758 = !DILocation(line: 570, column: 25, scope: !6757)
!6759 = !DILocation(line: 570, column: 22, scope: !6757)
!6760 = !DILocation(line: 570, column: 36, scope: !6757)
!6761 = !DILocation(line: 570, column: 39, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6757, file: !912, discriminator: 1)
!6763 = !DILocation(line: 570, column: 48, scope: !6762)
!6764 = !DILocation(line: 570, column: 13, scope: !6762)
!6765 = !DILocation(line: 571, column: 13, scope: !6757)
!6766 = !DILocation(line: 572, column: 26, scope: !5926)
!6767 = !DILocation(line: 572, column: 15, scope: !5926)
!6768 = !DILocation(line: 572, column: 21, scope: !5926)
!6769 = !DILocation(line: 572, column: 13, scope: !5926)
!6770 = !DILocation(line: 574, column: 14, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !5926, file: !912, line: 574, column: 13)
!6772 = !DILocation(line: 574, column: 13, scope: !5926)
!6773 = !DILocation(line: 575, column: 13, scope: !6771)
!6774 = distinct !{!6774, !6773}
!6775 = !DILocation(line: 575, column: 70, scope: !6776)
!6776 = !DILexicalBlockFile(scope: !6777, file: !912, discriminator: 1)
!6777 = distinct !DILexicalBlock(scope: !6771, file: !912, line: 575, column: 16)
!6778 = !DILocation(line: 575, column: 70, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !6777, file: !912, discriminator: 2)
!6780 = !DILocation(line: 577, column: 23, scope: !5926)
!6781 = !DILocation(line: 577, column: 14, scope: !5926)
!6782 = !DILocation(line: 577, column: 30, scope: !5926)
!6783 = !DILocation(line: 577, column: 28, scope: !5926)
!6784 = !DILocation(line: 577, column: 37, scope: !5926)
!6785 = !DILocation(line: 577, column: 11, scope: !5926)
!6786 = !DILocation(line: 578, column: 13, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !5926, file: !912, line: 578, column: 13)
!6788 = !DILocation(line: 578, column: 15, scope: !6787)
!6789 = !DILocation(line: 578, column: 13, scope: !5926)
!6790 = !DILocation(line: 579, column: 19, scope: !6787)
!6791 = !DILocation(line: 579, column: 25, scope: !6787)
!6792 = !DILocation(line: 579, column: 23, scope: !6787)
!6793 = !DILocation(line: 579, column: 31, scope: !6787)
!6794 = !DILocation(line: 579, column: 36, scope: !6787)
!6795 = !DILocation(line: 579, column: 30, scope: !6787)
!6796 = !DILocation(line: 579, column: 55, scope: !6787)
!6797 = !DILocation(line: 579, column: 57, scope: !6787)
!6798 = !DILocation(line: 579, column: 62, scope: !6787)
!6799 = !DILocation(line: 579, column: 67, scope: !6787)
!6800 = !DILocation(line: 579, column: 50, scope: !6787)
!6801 = !DILocation(line: 579, column: 27, scope: !6787)
!6802 = !DILocation(line: 579, column: 17, scope: !6787)
!6803 = !DILocation(line: 579, column: 13, scope: !6787)
!6804 = !DILocation(line: 580, column: 22, scope: !5926)
!6805 = !DILocation(line: 580, column: 15, scope: !5926)
!6806 = !DILocation(line: 580, column: 9, scope: !5926)
!6807 = !DILocation(line: 580, column: 20, scope: !5926)
!6808 = !DILocation(line: 582, column: 40, scope: !5926)
!6809 = !DILocation(line: 582, column: 39, scope: !5926)
!6810 = !DILocation(line: 582, column: 38, scope: !5926)
!6811 = !DILocation(line: 582, column: 19, scope: !5926)
!6812 = !DILocation(line: 582, column: 25, scope: !5926)
!6813 = !DILocation(line: 582, column: 23, scope: !5926)
!6814 = !DILocation(line: 582, column: 9, scope: !5926)
!6815 = !DILocation(line: 582, column: 35, scope: !5926)
!6816 = !DILocation(line: 546, column: 5, scope: !6022)
!6817 = distinct !{!6817, !6106}
!6818 = !DILocation(line: 585, column: 9, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !5915, file: !912, line: 585, column: 9)
!6820 = !DILocation(line: 585, column: 18, scope: !6819)
!6821 = !DILocation(line: 585, column: 22, scope: !6819)
!6822 = !DILocation(line: 585, column: 25, scope: !6823)
!6823 = !DILexicalBlockFile(scope: !6819, file: !912, discriminator: 1)
!6824 = !DILocation(line: 585, column: 37, scope: !6823)
!6825 = !DILocation(line: 585, column: 34, scope: !6823)
!6826 = !DILocation(line: 585, column: 48, scope: !6823)
!6827 = !DILocation(line: 585, column: 51, scope: !6828)
!6828 = !DILexicalBlockFile(scope: !6819, file: !912, discriminator: 2)
!6829 = !DILocation(line: 585, column: 58, scope: !6828)
!6830 = !DILocation(line: 585, column: 65, scope: !6828)
!6831 = !DILocation(line: 585, column: 55, scope: !6828)
!6832 = !DILocation(line: 585, column: 9, scope: !6828)
!6833 = !DILocation(line: 586, column: 9, scope: !6819)
!6834 = !DILocation(line: 589, column: 9, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !5915, file: !912, line: 589, column: 9)
!6836 = !DILocation(line: 589, column: 18, scope: !6835)
!6837 = !DILocation(line: 589, column: 21, scope: !6838)
!6838 = !DILexicalBlockFile(scope: !6835, file: !912, discriminator: 1)
!6839 = !DILocation(line: 589, column: 27, scope: !6838)
!6840 = !DILocation(line: 589, column: 9, scope: !6838)
!6841 = !DILocation(line: 590, column: 21, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6835, file: !912, line: 589, column: 40)
!6843 = !DILocation(line: 590, column: 10, scope: !6842)
!6844 = !DILocation(line: 590, column: 18, scope: !6842)
!6845 = !DILocation(line: 591, column: 21, scope: !6842)
!6846 = !DILocation(line: 591, column: 20, scope: !6842)
!6847 = !DILocation(line: 591, column: 9, scope: !6842)
!6848 = !DILocation(line: 591, column: 18, scope: !6842)
!6849 = !DILocation(line: 592, column: 28, scope: !6842)
!6850 = !DILocation(line: 592, column: 27, scope: !6842)
!6851 = !DILocation(line: 592, column: 26, scope: !6842)
!6852 = !DILocation(line: 592, column: 25, scope: !6842)
!6853 = !DILocation(line: 592, column: 9, scope: !6842)
!6854 = !DILocation(line: 592, column: 22, scope: !6842)
!6855 = !DILocation(line: 593, column: 5, scope: !6842)
!6856 = !DILocation(line: 595, column: 8, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !5915, file: !912, line: 595, column: 8)
!6858 = !DILocation(line: 595, column: 14, scope: !6857)
!6859 = !DILocation(line: 595, column: 31, scope: !6857)
!6860 = !DILocation(line: 595, column: 37, scope: !6857)
!6861 = !DILocation(line: 595, column: 29, scope: !6857)
!6862 = !DILocation(line: 595, column: 8, scope: !5915)
!6863 = !DILocation(line: 596, column: 9, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6857, file: !912, line: 595, column: 46)
!6865 = !DILocation(line: 597, column: 9, scope: !6864)
!6866 = !DILocation(line: 601, column: 5, scope: !5915)
!6867 = !DILocation(line: 601, column: 11, scope: !5915)
!6868 = !DILocation(line: 601, column: 25, scope: !5915)
!6869 = !DILocation(line: 601, column: 32, scope: !5915)
!6870 = !DILocation(line: 601, column: 38, scope: !5915)
!6871 = !DILocation(line: 601, column: 44, scope: !5915)
!6872 = !DILocation(line: 601, column: 42, scope: !5915)
!6873 = !DILocation(line: 602, column: 25, scope: !5915)
!6874 = !DILocation(line: 602, column: 31, scope: !5915)
!6875 = !DILocation(line: 602, column: 38, scope: !5915)
!6876 = !DILocation(line: 605, column: 10, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !5915, file: !912, line: 605, column: 9)
!6878 = !DILocation(line: 605, column: 9, scope: !5915)
!6879 = !DILocation(line: 606, column: 23, scope: !6877)
!6880 = !DILocation(line: 606, column: 29, scope: !6877)
!6881 = !DILocation(line: 606, column: 33, scope: !6877)
!6882 = !DILocation(line: 606, column: 41, scope: !6877)
!6883 = !DILocation(line: 606, column: 47, scope: !6877)
!6884 = !DILocation(line: 606, column: 53, scope: !6877)
!6885 = !DILocation(line: 606, column: 59, scope: !6877)
!6886 = !DILocation(line: 606, column: 66, scope: !6877)
!6887 = !DILocation(line: 607, column: 23, scope: !6877)
!6888 = !DILocation(line: 607, column: 32, scope: !6877)
!6889 = !DILocation(line: 606, column: 16, scope: !6877)
!6890 = !DILocation(line: 606, column: 9, scope: !6877)
!6891 = !DILocation(line: 609, column: 5, scope: !5915)
!6892 = !DILocation(line: 610, column: 1, scope: !5915)
!6893 = distinct !DISubprogram(name: "ivi_dc_transform", scope: !912, file: !912, line: 496, type: !6894, isLocal: true, isDefinition: true, scopeLine: 498, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{!898, !2165, !1484, !898, !898}
!6896 = !DILocalVariable(name: "band", arg: 1, scope: !6893, file: !912, line: 496, type: !2165)
!6897 = !DILocation(line: 496, column: 42, scope: !6893)
!6898 = !DILocalVariable(name: "prev_dc", arg: 2, scope: !6893, file: !912, line: 496, type: !1484)
!6899 = !DILocation(line: 496, column: 53, scope: !6893)
!6900 = !DILocalVariable(name: "buf_offs", arg: 3, scope: !6893, file: !912, line: 496, type: !898)
!6901 = !DILocation(line: 496, column: 66, scope: !6893)
!6902 = !DILocalVariable(name: "blk_size", arg: 4, scope: !6893, file: !912, line: 497, type: !898)
!6903 = !DILocation(line: 497, column: 33, scope: !6893)
!6904 = !DILocalVariable(name: "buf_size", scope: !6893, file: !912, line: 499, type: !898)
!6905 = !DILocation(line: 499, column: 9, scope: !6893)
!6906 = !DILocation(line: 499, column: 20, scope: !6893)
!6907 = !DILocation(line: 499, column: 26, scope: !6893)
!6908 = !DILocation(line: 499, column: 34, scope: !6893)
!6909 = !DILocation(line: 499, column: 40, scope: !6893)
!6910 = !DILocation(line: 499, column: 32, scope: !6893)
!6911 = !DILocation(line: 499, column: 50, scope: !6893)
!6912 = !DILocation(line: 499, column: 48, scope: !6893)
!6913 = !DILocalVariable(name: "min_size", scope: !6893, file: !912, line: 500, type: !898)
!6914 = !DILocation(line: 500, column: 9, scope: !6893)
!6915 = !DILocation(line: 500, column: 21, scope: !6893)
!6916 = !DILocation(line: 500, column: 30, scope: !6893)
!6917 = !DILocation(line: 500, column: 20, scope: !6893)
!6918 = !DILocation(line: 500, column: 37, scope: !6893)
!6919 = !DILocation(line: 500, column: 43, scope: !6893)
!6920 = !DILocation(line: 500, column: 35, scope: !6893)
!6921 = !DILocation(line: 500, column: 51, scope: !6893)
!6922 = !DILocation(line: 500, column: 49, scope: !6893)
!6923 = !DILocation(line: 502, column: 9, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6893, file: !912, line: 502, column: 9)
!6925 = !DILocation(line: 502, column: 20, scope: !6924)
!6926 = !DILocation(line: 502, column: 18, scope: !6924)
!6927 = !DILocation(line: 502, column: 9, scope: !6893)
!6928 = !DILocation(line: 503, column: 9, scope: !6924)
!6929 = !DILocation(line: 505, column: 5, scope: !6893)
!6930 = !DILocation(line: 505, column: 11, scope: !6893)
!6931 = !DILocation(line: 505, column: 24, scope: !6893)
!6932 = !DILocation(line: 505, column: 33, scope: !6893)
!6933 = !DILocation(line: 505, column: 39, scope: !6893)
!6934 = !DILocation(line: 505, column: 45, scope: !6893)
!6935 = !DILocation(line: 505, column: 43, scope: !6893)
!6936 = !DILocation(line: 506, column: 24, scope: !6893)
!6937 = !DILocation(line: 506, column: 30, scope: !6893)
!6938 = !DILocation(line: 506, column: 37, scope: !6893)
!6939 = !DILocation(line: 508, column: 5, scope: !6893)
!6940 = !DILocation(line: 509, column: 1, scope: !6893)
!6941 = distinct !DISubprogram(name: "skip_bits", scope: !1182, file: !1182, line: 460, type: !4268, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!6942 = !DILocalVariable(name: "s", arg: 1, scope: !6941, file: !1182, line: 460, type: !1180)
!6943 = !DILocation(line: 460, column: 45, scope: !6941)
!6944 = !DILocalVariable(name: "n", arg: 2, scope: !6941, file: !1182, line: 460, type: !898)
!6945 = !DILocation(line: 460, column: 52, scope: !6941)
!6946 = !DILocalVariable(name: "re_index", scope: !6941, file: !1182, line: 481, type: !899)
!6947 = !DILocation(line: 481, column: 18, scope: !6941)
!6948 = !DILocation(line: 481, column: 30, scope: !6941)
!6949 = !DILocation(line: 481, column: 34, scope: !6941)
!6950 = !DILocalVariable(name: "re_cache", scope: !6941, file: !1182, line: 481, type: !899)
!6951 = !DILocation(line: 481, column: 78, scope: !6941)
!6952 = !DILocalVariable(name: "re_size_plus8", scope: !6941, file: !1182, line: 481, type: !899)
!6953 = !DILocation(line: 481, column: 101, scope: !6941)
!6954 = !DILocation(line: 481, column: 118, scope: !6941)
!6955 = !DILocation(line: 481, column: 122, scope: !6941)
!6956 = !DILocation(line: 482, column: 18, scope: !6941)
!6957 = !DILocation(line: 482, column: 36, scope: !6941)
!6958 = !DILocation(line: 482, column: 48, scope: !6941)
!6959 = !DILocation(line: 482, column: 45, scope: !6941)
!6960 = !DILocation(line: 482, column: 33, scope: !6941)
!6961 = !DILocation(line: 482, column: 17, scope: !6941)
!6962 = !DILocation(line: 482, column: 55, scope: !6963)
!6963 = !DILexicalBlockFile(scope: !6941, file: !1182, discriminator: 1)
!6964 = !DILocation(line: 482, column: 67, scope: !6963)
!6965 = !DILocation(line: 482, column: 64, scope: !6963)
!6966 = !DILocation(line: 482, column: 17, scope: !6963)
!6967 = !DILocation(line: 482, column: 74, scope: !6968)
!6968 = !DILexicalBlockFile(scope: !6941, file: !1182, discriminator: 2)
!6969 = !DILocation(line: 482, column: 17, scope: !6968)
!6970 = !DILocation(line: 482, column: 17, scope: !6971)
!6971 = !DILexicalBlockFile(scope: !6941, file: !1182, discriminator: 3)
!6972 = !DILocation(line: 482, column: 14, scope: !6971)
!6973 = !DILocation(line: 483, column: 18, scope: !6941)
!6974 = !DILocation(line: 483, column: 6, scope: !6941)
!6975 = !DILocation(line: 483, column: 10, scope: !6941)
!6976 = !DILocation(line: 483, column: 16, scope: !6941)
!6977 = !DILocation(line: 485, column: 1, scope: !6941)
!6978 = distinct !DISubprogram(name: "show_bits", scope: !1182, file: !1182, line: 443, type: !2053, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !915)
!6979 = !DILocalVariable(name: "s", arg: 1, scope: !6978, file: !1182, line: 443, type: !1180)
!6980 = !DILocation(line: 443, column: 53, scope: !6978)
!6981 = !DILocalVariable(name: "n", arg: 2, scope: !6978, file: !1182, line: 443, type: !898)
!6982 = !DILocation(line: 443, column: 60, scope: !6978)
!6983 = !DILocalVariable(name: "tmp", scope: !6978, file: !1182, line: 445, type: !898)
!6984 = !DILocation(line: 445, column: 18, scope: !6978)
!6985 = !DILocalVariable(name: "re_index", scope: !6978, file: !1182, line: 452, type: !899)
!6986 = !DILocation(line: 452, column: 18, scope: !6978)
!6987 = !DILocation(line: 452, column: 30, scope: !6978)
!6988 = !DILocation(line: 452, column: 34, scope: !6978)
!6989 = !DILocalVariable(name: "re_cache", scope: !6978, file: !1182, line: 452, type: !899)
!6990 = !DILocation(line: 452, column: 78, scope: !6978)
!6991 = !DILocation(line: 454, column: 49, scope: !6978)
!6992 = !DILocation(line: 454, column: 53, scope: !6978)
!6993 = !DILocation(line: 454, column: 63, scope: !6978)
!6994 = !DILocation(line: 454, column: 72, scope: !6978)
!6995 = !DILocation(line: 454, column: 60, scope: !6978)
!6996 = !DILocation(line: 454, column: 81, scope: !6978)
!6997 = !DILocation(line: 454, column: 88, scope: !6978)
!6998 = !DILocation(line: 454, column: 97, scope: !6978)
!6999 = !DILocation(line: 454, column: 84, scope: !6978)
!7000 = !DILocation(line: 454, column: 14, scope: !6978)
!7001 = !DILocation(line: 455, column: 23, scope: !6978)
!7002 = !DILocation(line: 455, column: 33, scope: !6978)
!7003 = !DILocation(line: 455, column: 11, scope: !6978)
!7004 = !DILocation(line: 455, column: 9, scope: !6978)
!7005 = !DILocation(line: 457, column: 12, scope: !6978)
!7006 = !DILocation(line: 457, column: 5, scope: !6978)
