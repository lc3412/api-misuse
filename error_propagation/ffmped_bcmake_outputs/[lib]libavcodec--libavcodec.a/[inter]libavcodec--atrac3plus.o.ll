; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac3plus.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac3plus.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.Atrac3pSpecCodeTab = type { i8, i8, i8, i8, i32, i8*, i8* }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.Atrac3pChanUnitCtx = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8], [16 x i8], [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pWaveSynthParams], %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams*, [24 x i8], [2 x %struct.Atrac3pIPQFChannelCtx], [2 x [2048 x float]] }
%struct.Atrac3pChanParams = type { i32, i32, i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], [2048 x i16], [5 x i8], [2 x [16 x i8]], i8*, i8*, [2 x [16 x %struct.AtracGainInfo]], %struct.AtracGainInfo*, %struct.AtracGainInfo*, i32, [2 x [16 x %struct.Atrac3pWavesData]], %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData* }
%struct.AtracGainInfo = type { i32, [7 x i32], [7 x i32] }
%struct.Atrac3pWavesData = type { %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope, i32, i32 }
%struct.Atrac3pWaveEnvelope = type { i32, i32, i32, i32 }
%struct.Atrac3pWaveSynthParams = type { i32, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, [48 x %struct.Atrac3pWaveParam] }
%struct.Atrac3pWaveParam = type { i32, i32, i32, i32 }
%struct.Atrac3pIPQFChannelCtx = type { [24 x [8 x float]], [24 x [8 x float]], i32, [28 x i8] }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%union.unaligned_32 = type { i32 }
%union.anon = type { i32 }

@ff_atrac3p_init_vlcs.wl_nb_bits = internal constant [4 x i32] [i32 2, i32 3, i32 5, i32 5], align 16
@ff_atrac3p_init_vlcs.wl_nb_codes = internal constant [4 x i32] [i32 3, i32 5, i32 8, i32 8], align 16
@ff_atrac3p_init_vlcs.wl_bits = internal constant [4 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @atrac3p_wl_huff_bits1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @atrac3p_wl_huff_bits2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_wl_huff_bits3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_wl_huff_bits4, i32 0, i32 0)], align 16
@atrac3p_wl_huff_bits1 = internal constant [3 x i8] c"\01\02\02", align 1
@atrac3p_wl_huff_bits2 = internal constant [5 x i8] c"\01\03\03\03\03", align 1
@atrac3p_wl_huff_bits3 = internal constant [8 x i8] c"\01\03\04\05\05\04\04\03", align 1
@atrac3p_wl_huff_bits4 = internal constant [8 x i8] c"\01\03\04\04\05\05\04\03", align 1
@ff_atrac3p_init_vlcs.wl_codes = internal constant [4 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @atrac3p_wl_huff_code1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @atrac3p_wl_huff_code2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_wl_huff_code3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_wl_huff_code4, i32 0, i32 0)], align 16
@atrac3p_wl_huff_code1 = internal constant [3 x i8] c"\00\02\03", align 1
@atrac3p_wl_huff_code2 = internal constant [5 x i8] c"\00\04\05\06\07", align 1
@atrac3p_wl_huff_code3 = internal constant [8 x i8] c"\00\04\0C\1E\1F\0D\0E\05", align 1
@atrac3p_wl_huff_code4 = internal constant [8 x i8] c"\00\04\0C\0D\1E\1F\0E\05", align 1
@ff_atrac3p_init_vlcs.wl_xlats = internal constant [4 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @atrac3p_wl_huff_xlat1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @atrac3p_wl_huff_xlat2, i32 0, i32 0), i8* null, i8* null], align 16
@atrac3p_wl_huff_xlat1 = internal constant [3 x i8] c"\00\01\07", align 1
@atrac3p_wl_huff_xlat2 = internal constant [5 x i8] c"\00\01\02\06\07", align 1
@ff_atrac3p_init_vlcs.ct_nb_bits = internal constant [4 x i32] [i32 3, i32 4, i32 4, i32 4], align 16
@ff_atrac3p_init_vlcs.ct_nb_codes = internal constant [4 x i32] [i32 4, i32 8, i32 8, i32 8], align 16
@ff_atrac3p_init_vlcs.ct_bits = internal constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @atrac3p_ct_huff_bits1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_ct_huff_bits2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_ct_huff_bits2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_ct_huff_bits3, i32 0, i32 0)], align 16
@atrac3p_ct_huff_bits1 = internal constant [4 x i8] c"\01\02\03\03", align 1
@atrac3p_ct_huff_bits2 = internal constant [8 x i8] c"\02\03\03\03\03\03\04\04", align 1
@atrac3p_ct_huff_bits3 = internal constant [8 x i8] c"\01\03\04\04\04\04\04\04", align 1
@ff_atrac3p_init_vlcs.ct_codes = internal constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @atrac3p_ct_huff_code1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_ct_huff_code2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_ct_huff_code2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_ct_huff_code3, i32 0, i32 0)], align 16
@atrac3p_ct_huff_code1 = internal constant [4 x i8] c"\00\02\06\07", align 1
@atrac3p_ct_huff_code2 = internal constant [8 x i8] c"\00\02\03\04\05\06\0E\0F", align 1
@atrac3p_ct_huff_code3 = internal constant [8 x i8] c"\00\04\0A\0B\0C\0D\0E\0F", align 1
@ff_atrac3p_init_vlcs.ct_xlats = internal constant [4 x i8*] [i8* null, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_ct_huff_xlat1, i32 0, i32 0), i8* null], align 16
@atrac3p_ct_huff_xlat1 = internal constant [8 x i8] c"\00\01\02\03\06\07\04\05", align 1
@ff_atrac3p_init_vlcs.sf_nb_bits = internal constant [8 x i32] [i32 9, i32 9, i32 9, i32 9, i32 6, i32 6, i32 7, i32 7], align 16
@ff_atrac3p_init_vlcs.sf_nb_codes = internal constant [8 x i32] [i32 64, i32 64, i32 64, i32 64, i32 16, i32 16, i32 16, i32 16], align 16
@ff_atrac3p_init_vlcs.sf_bits = internal constant [8 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @atrac3p_sf_huff_bits1, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @atrac3p_sf_huff_bits1, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @atrac3p_sf_huff_bits2, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @atrac3p_sf_huff_bits3, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_sf_huff_bits4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_sf_huff_bits4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_sf_huff_bits5, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_sf_huff_bits6, i32 0, i32 0)], align 16
@atrac3p_sf_huff_bits1 = internal constant [64 x i8] c"\02\03\03\03\03\04\04\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09", align 16
@atrac3p_sf_huff_bits2 = internal constant [64 x i8] c"\01\03\05\05\07\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\08\07\05\05\03", align 16
@atrac3p_sf_huff_bits3 = internal constant [64 x i8] c"\02\03\03\05\05\07\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\09\07\07\05\05\03\03", align 16
@atrac3p_sf_huff_bits4 = internal constant [16 x i8] c"\02\03\03\03\03\04\04\06\06\06\06\06\00\06\06\06", align 16
@atrac3p_sf_huff_bits5 = internal constant [16 x i8] c"\01\03\04\05\07\07\07\07\00\07\07\07\07\05\04\03", align 16
@atrac3p_sf_huff_bits6 = internal constant [16 x i8] c"\02\03\03\04\05\06\07\07\00\07\07\06\05\04\03\03", align 16
@ff_atrac3p_init_vlcs.sf_codes = internal constant [8 x i16*] [i16* getelementptr inbounds ([64 x i16], [64 x i16]* @atrac3p_sf_huff_code1, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @atrac3p_sf_huff_code1, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @atrac3p_sf_huff_code2, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @atrac3p_sf_huff_code3, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @atrac3p_sf_huff_code4, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @atrac3p_sf_huff_code4, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @atrac3p_sf_huff_code5, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @atrac3p_sf_huff_code6, i32 0, i32 0)], align 16
@atrac3p_sf_huff_code1 = internal constant [64 x i16] [i16 0, i16 2, i16 3, i16 4, i16 5, i16 12, i16 13, i16 224, i16 225, i16 226, i16 227, i16 228, i16 229, i16 230, i16 462, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 473, i16 474, i16 475, i16 476, i16 477, i16 478, i16 479, i16 480, i16 481, i16 482, i16 483, i16 484, i16 485, i16 486, i16 487, i16 488, i16 489, i16 490, i16 491, i16 492, i16 493, i16 494, i16 495, i16 496, i16 497, i16 498, i16 499, i16 500, i16 501, i16 502, i16 503, i16 504, i16 505, i16 506, i16 507, i16 508, i16 509, i16 510, i16 511], align 16
@atrac3p_sf_huff_code2 = internal constant [64 x i16] [i16 0, i16 4, i16 24, i16 25, i16 112, i16 458, i16 459, i16 460, i16 461, i16 462, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 473, i16 474, i16 475, i16 476, i16 477, i16 478, i16 479, i16 480, i16 481, i16 482, i16 483, i16 484, i16 485, i16 486, i16 487, i16 488, i16 489, i16 490, i16 491, i16 492, i16 493, i16 494, i16 495, i16 496, i16 497, i16 498, i16 499, i16 500, i16 501, i16 502, i16 503, i16 504, i16 505, i16 506, i16 507, i16 508, i16 509, i16 510, i16 511, i16 228, i16 113, i16 26, i16 27, i16 5], align 16
@atrac3p_sf_huff_code3 = internal constant [64 x i16] [i16 0, i16 2, i16 3, i16 24, i16 25, i16 112, i16 460, i16 461, i16 462, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 473, i16 474, i16 475, i16 476, i16 477, i16 478, i16 479, i16 480, i16 481, i16 482, i16 483, i16 484, i16 485, i16 486, i16 487, i16 488, i16 489, i16 490, i16 491, i16 492, i16 493, i16 494, i16 495, i16 496, i16 497, i16 498, i16 499, i16 500, i16 501, i16 502, i16 503, i16 504, i16 505, i16 506, i16 507, i16 508, i16 509, i16 510, i16 511, i16 113, i16 114, i16 26, i16 27, i16 4, i16 5], align 16
@atrac3p_sf_huff_code4 = internal constant [16 x i16] [i16 0, i16 2, i16 3, i16 4, i16 5, i16 12, i16 13, i16 56, i16 57, i16 58, i16 59, i16 60, i16 0, i16 61, i16 62, i16 63], align 16
@atrac3p_sf_huff_code5 = internal constant [16 x i16] [i16 0, i16 4, i16 12, i16 28, i16 120, i16 121, i16 122, i16 123, i16 0, i16 124, i16 125, i16 126, i16 127, i16 29, i16 13, i16 5], align 16
@atrac3p_sf_huff_code6 = internal constant [16 x i16] [i16 0, i16 2, i16 3, i16 12, i16 28, i16 60, i16 124, i16 125, i16 0, i16 126, i16 127, i16 61, i16 29, i16 13, i16 4, i16 5], align 16
@ff_atrac3p_init_vlcs.sf_xlats = internal constant [8 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @atrac3p_sf_huff_xlat1, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @atrac3p_sf_huff_xlat2, i32 0, i32 0), i8* null, i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_sf_huff_xlat4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_sf_huff_xlat5, i32 0, i32 0), i8* null, i8* null], align 16
@atrac3p_sf_huff_xlat1 = internal constant [64 x i8] c"\00\01=>?\02<\03\04\05\069:;\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./012345678", align 16
@atrac3p_sf_huff_xlat2 = internal constant [64 x i8] c"\00\01\02>?\03=\04\05\069:;<\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./012345678", align 16
@atrac3p_sf_huff_xlat4 = internal constant [16 x i8] c"\00\01\0D\0E\0F\02\0C\03\04\05\06\07\08\09\0A\0B", align 16
@atrac3p_sf_huff_xlat5 = internal constant [16 x i8] c"\00\01\02\0E\0F\03\0D\04\05\06\07\09\08\0A\0B\0C", align 16
@ff_atrac3p_init_vlcs.gain_cbs = internal constant [11 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @atrac3p_huff_gain_npoints1_cb, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @atrac3p_huff_gain_npoints1_cb, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @atrac3p_huff_gain_lev1_cb, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @atrac3p_huff_gain_lev2_cb, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @atrac3p_huff_gain_lev3_cb, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @atrac3p_huff_gain_lev4_cb, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @atrac3p_huff_gain_loc3_cb, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @atrac3p_huff_gain_loc1_cb, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @atrac3p_huff_gain_loc4_cb, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_huff_gain_loc2_cb, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @atrac3p_huff_gain_loc5_cb, i32 0, i32 0)], align 16
@atrac3p_huff_gain_npoints1_cb = internal constant [9 x i8] c"\01\07\01\01\01\01\01\01\02", align 1
@atrac3p_huff_gain_lev1_cb = internal constant [9 x i8] c"\01\07\01\00\02\02\01\02\08", align 1
@atrac3p_huff_gain_lev2_cb = internal constant [11 x i8] c"\01\09\01\01\01\01\01\00\02\00\08", align 1
@atrac3p_huff_gain_lev3_cb = internal constant [11 x i8] c"\01\09\01\00\03\01\01\00\02\00\08", align 1
@atrac3p_huff_gain_lev4_cb = internal constant [11 x i8] c"\01\09\01\01\01\01\01\00\01\02\08", align 1
@atrac3p_huff_gain_loc3_cb = internal constant [7 x i8] c"\02\06\01\00\02\0B\12", align 1
@atrac3p_huff_gain_loc1_cb = internal constant [9 x i8] c"\02\08\01\02\04\04\04\00\10", align 1
@atrac3p_huff_gain_loc4_cb = internal constant [5 x i8] c"\04\06\03\17\06", align 1
@atrac3p_huff_gain_loc2_cb = internal constant [8 x i8] c"\03\08\05\03\02\03\02\10", align 1
@atrac3p_huff_gain_loc5_cb = internal constant [9 x i8] c"\01\07\01\00\00\03\02\06\14", align 1
@ff_atrac3p_init_vlcs.gain_xlats = internal constant [11 x i8*] [i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_huff_gain_npoints2_xlat, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_huff_gain_lev1_xlat, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @atrac3p_huff_gain_lev2_xlat, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_huff_gain_lev3_xlat, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @atrac3p_huff_gain_lev4_xlat, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @atrac3p_huff_gain_loc3_xlat, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @atrac3p_huff_gain_loc1_xlat, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @atrac3p_huff_gain_loc4_xlat, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @atrac3p_huff_gain_loc2_xlat, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @atrac3p_huff_gain_loc5_xlat, i32 0, i32 0)], align 16
@atrac3p_huff_gain_npoints2_xlat = internal constant [8 x i8] c"\00\01\07\02\06\03\04\05", align 1
@atrac3p_huff_gain_lev1_xlat = internal constant [16 x i8] c"\07\05\08\06\09\04\0A\0B\00\01\02\03\0C\0D\0E\0F", align 16
@atrac3p_huff_gain_lev2_xlat = internal constant [15 x i8] c"\0F\0E\01\0D\02\03\0C\04\05\06\07\08\09\0A\0B", align 1
@atrac3p_huff_gain_lev3_xlat = internal constant [16 x i8] c"\00\01\0E\0F\02\0D\03\0C\04\05\06\07\08\09\0A\0B", align 16
@atrac3p_huff_gain_lev4_xlat = internal constant [16 x i8] c"\00\01\0F\0E\02\0D\03\0C\04\05\06\07\08\09\0A\0B", align 16
@atrac3p_huff_gain_loc3_xlat = internal constant [32 x i8] c"\00\01\1F\02\03\04\05\06\07\1A\1B\1C\1D\1E\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19", align 16
@atrac3p_huff_gain_loc1_xlat = internal constant [31 x i8] c"\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F", align 16
@atrac3p_huff_gain_loc4_xlat = internal constant [32 x i8] c"\00\1C\1D\01\02\03\04\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1E\1F\05\06\07\08\09\0A", align 16
@atrac3p_huff_gain_loc2_xlat = internal constant [31 x i8] c"\02\03\04\05\06\01\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F", align 16
@atrac3p_huff_gain_loc5_xlat = internal constant [32 x i8] c"\00\01\02\1F\03\04\05\06\07\08\1D\1E\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C", align 16
@ff_atrac3p_init_vlcs.tone_cbs = internal constant [7 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_huff_tonebands_cb, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @atrac3p_huff_numwavs1_cb, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_huff_numwavs2_cb, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @atrac3p_huff_wav_ampsf1_cb, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @atrac3p_huff_wav_ampsf2_cb, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @atrac3p_huff_wav_ampsf3_cb, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @atrac3p_huff_freq_cb, i32 0, i32 0)], align 16
@atrac3p_huff_tonebands_cb = internal constant [8 x i8] c"\01\06\01\00\01\02\04\08", align 1
@atrac3p_huff_numwavs1_cb = internal constant [9 x i8] c"\01\07\01\01\01\01\01\01\02", align 1
@atrac3p_huff_numwavs2_cb = internal constant [8 x i8] c"\01\06\01\01\01\01\00\04", align 1
@atrac3p_huff_wav_ampsf1_cb = internal constant [7 x i8] c"\04\08\0A\08\06\00\08", align 1
@atrac3p_huff_wav_ampsf2_cb = internal constant [7 x i8] c"\04\08\0B\05\06\06\04", align 1
@atrac3p_huff_wav_ampsf3_cb = internal constant [9 x i8] c"\02\08\01\03\03\01\04\04\10", align 1
@atrac3p_huff_freq_cb = internal constant [13 x i8] c"\01\0B\01\00\00\02\02\00\09\09\1Dhd", align 1
@ff_atrac3p_init_vlcs.tone_xlats = internal constant [7 x i8*] [i8* null, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @atrac3p_huff_numwavs2_xlat, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @atrac3p_huff_wav_ampsf1_xlat, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @atrac3p_huff_wav_ampsf2_xlat, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @atrac3p_huff_wav_ampsf3_xlat, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @atrac3p_huff_freq_xlat, i32 0, i32 0)], align 16
@atrac3p_huff_numwavs2_xlat = internal constant [8 x i8] c"\00\01\07\02\03\04\05\06", align 1
@atrac3p_huff_wav_ampsf1_xlat = internal constant [32 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\05\06\07\12\13\14\15\16\04\17\18\19\1A\1B\00\01\02\03\1C\1D\1E\1F", align 16
@atrac3p_huff_wav_ampsf2_xlat = internal constant [32 x i8] c"\12\13\14\15\16\17\18\19\1A\1B\1C\0E\0F\10\11\1D\09\0A\0B\0C\0D\1E\04\05\06\07\08\1F\00\01\02\03", align 16
@atrac3p_huff_wav_ampsf3_xlat = internal constant [32 x i8] c"\00\01\02\1F\03\1D\1E\04\05\06\1B\1C\07\18\19\1A\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17", align 16
@atrac3p_huff_freq_xlat = internal constant [256 x i8] c"\00\01\FF\02\FE\03\04\05\06\07\08\FB\FC\FD\09\0A\0B\0C\F6\F7\F8\F9\FA\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&\F3\F4\F5'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\5C]\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1", align 16
@tables_data = internal global [154276 x [2 x i16]] zeroinitializer, align 16
@wl_vlc_tabs = internal global [4 x %struct.VLC] zeroinitializer, align 16
@ct_vlc_tabs = internal global [4 x %struct.VLC] zeroinitializer, align 16
@sf_vlc_tabs = internal global [8 x %struct.VLC] zeroinitializer, align 16
@atrac3p_spectra_tabs = internal constant [112 x %struct.Atrac3pSpecCodeTab] [%struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_a01_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a01_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_a02_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a02_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_a03_cb, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @huff_a03_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @huff_a04_cb, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @huff_a04_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a05_cb, i32 0, i32 0), i8* getelementptr inbounds ([225 x i8], [225 x i8]* @huff_a05_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a06_cb, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @huff_a06_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_a07_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_a07_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_a11_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a11_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a12_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a12_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a13_cb, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @huff_a13_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a14_cb, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @huff_a14_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_a15_cb, i32 0, i32 0), i8* getelementptr inbounds ([225 x i8], [225 x i8]* @huff_a15_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_a16_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_a16_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_a17_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_a17_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_a21_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a21_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_a22_cb, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @huff_a22_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_a23_cb, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @huff_a23_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @huff_a24_cb, i32 0, i32 0), i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @huff_a25_cb, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a25_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_a26_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_a26_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a27_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_a27_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a31_cb, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_a31_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_a32_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a32_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a33_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_a33_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a34_cb, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @huff_a34_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_a35_cb, i32 0, i32 0), i8* getelementptr inbounds ([225 x i8], [225 x i8]* @huff_a35_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a36_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_a36_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a37_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_a37_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_a41_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a41_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_a42_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a42_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @huff_a43_cb, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a43_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_a44_cb, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @huff_a44_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @huff_a45_cb, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a45_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a46_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_a46_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a47_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_a47_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a51_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a51_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a52_cb, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @huff_a52_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @huff_a43_cb, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a53_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a54_cb, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @huff_a54_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a55_cb, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a55_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 5, i8 1, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a56_cb, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @huff_a56_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_a57_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_a57_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 2, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a61_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a61_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a62_cb, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @huff_a62_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_a63_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_a63_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a64_cb, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @huff_a64_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_a65_cb, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @huff_a65_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 5, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_a66_cb, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @huff_a66_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_a67_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_a67_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 1, i8 0, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @huff_a71_cb, i32 0, i32 0), i8* null }, %struct.Atrac3pSpecCodeTab { i8 2, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a72_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_a72_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_a73_cb, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @huff_a73_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_a74_cb, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @huff_a74_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_a75_cb, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @huff_a75_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 2, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_a76_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_a76_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 1, i8 6, i8 1, i32 6, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 4, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b01_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_b01_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b02_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_b02_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_b03_cb, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @huff_b03_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_b04_cb, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @huff_b04_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_b05_cb, i32 0, i32 0), i8* getelementptr inbounds ([225 x i8], [225 x i8]* @huff_b05_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 4, i8 0, i32 5, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @huff_b07_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_b07_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 14, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_b12_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_b12_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 9, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b14_cb, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @huff_b14_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 11, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_b16_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_b16_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 6, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 4, i8 4, i8 2, i8 1, i32 28, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 4, i8 4, i8 2, i8 0, i32 22, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 2, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 31, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 2, i8 2, i8 4, i8 1, i32 60, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 2, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_b26_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_b26_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 1, i8 6, i8 1, i32 6, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 35, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_b32_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_b32_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_b33_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_b33_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 2, i8 2, i8 4, i8 1, i32 59, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b35_cb, i32 0, i32 0), i8* getelementptr inbounds ([225 x i8], [225 x i8]* @huff_b35_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 75, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_b37_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_b37_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b41_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_b41_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_b42_cb, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @huff_b42_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_b43_cb, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @huff_b43_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 2, i8 4, i8 1, i32 66, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 32, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 12, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_b47_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_b47_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 2, i8 4, i8 2, i8 1, i32 42, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_b52_cb, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @huff_b52_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 1, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_b53_cb, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_b53_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 17, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 39, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 5, i8 1, i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_b56_cb, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @huff_b56_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 2, i8 1, i8 6, i8 1, i32 62, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 28, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b62_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_b62_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 1, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_b63_cb, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_b63_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 3, i8 0, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @huff_b64_cb, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @huff_b64_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b65_cb, i32 0, i32 0), i8* getelementptr inbounds ([225 x i8], [225 x i8]* @huff_b65_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 0, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b66_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_b66_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @huff_b67_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_b67_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 4, i8 2, i8 1, i32 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @huff_b71_cb, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @huff_b71_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 4, i8 4, i8 2, i8 0, i32 78, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 4, i8 4, i8 2, i8 0, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_b73_cb, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @huff_b73_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @huff_b74_cb, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @huff_b74_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 2, i8 4, i8 1, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @huff_b75_cb, i32 0, i32 0), i8* getelementptr inbounds ([225 x i8], [225 x i8]* @huff_b75_xlat, i32 0, i32 0) }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 5, i8 1, i32 47, i8* null, i8* null }, %struct.Atrac3pSpecCodeTab { i8 1, i8 1, i8 6, i8 1, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @huff_b77_cb, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @huff_b77_xlat, i32 0, i32 0) }], align 16
@spec_vlc_tabs = internal global [112 x %struct.VLC] zeroinitializer, align 16
@gain_vlc_tabs = internal global [11 x %struct.VLC] zeroinitializer, align 16
@tone_vlc_tabs = internal global [7 x %struct.VLC] zeroinitializer, align 16
@.str = private unnamed_addr constant [43 x i8] c"Invalid number of quantization units: %d!\0A\00", align 1
@atrac3p_qu_to_subband = internal constant [32 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\03\03\04\04\05\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 16
@huff_a01_cb = internal constant [14 x i8] c"\01\0C\01\00\00\01\07\00\13\05\0D\15\06\08", align 1
@huff_a01_xlat = internal constant [81 x i8] c"\00\03@\C0\100\04\0C\01P\D0p\F0\C4\144L\1C<A\C11\05\0D\C3\13\07\0FD\CC\11C3Tt\DC\FCq\15M\CD\1D\D3\C77?\D4\F4\5C|Q\D1\F1E\C55\DD=Ss\F3G\17wO\CF\1FU\F5}\D7_\FF\D5u]\FDW\F7\DF\7F", align 16
@huff_a02_cb = internal constant [13 x i8] c"\02\0C\01\00\04\0B\00\01\1D\06\14\07\02", align 1
@huff_a02_xlat = internal constant [81 x i8] c"\00@\10\04\01PD\14TA\11Q\05E\15U\90\80 `\84\94$d\08H\18X\81\91!\85\95e\09I\19Y\02B\12R\06F\16V\88a%)iZ\A0\A4\98(h\A1\A5\89\99\A9\82\92\22b\96&f\0AJ\1A\A8\86\A6\8A\9A*j\A2\AA", align 16
@huff_a03_cb = internal constant [9 x i8] c"\03\09\01\08\00\0D\12\07\02", align 1
@huff_a03_xlat = internal constant [49 x i8] c"\00\088\01\099\07\0F?\100\111\02\0A:\05\06\0E>\177\18(\19)*2\03\0B3;\0D\15=\16\1E6\1F/\12\1A\13+\1D5.\1B-", align 16
@huff_a04_cb = internal constant [4 x i8] c"\02\03\02\04", align 1
@huff_a04_xlat = internal constant [6 x i8] c"\01\02\00\03\04\05", align 1
@huff_a05_cb = internal constant [12 x i8] c"\03\0C\01\03\05\08\0C\17HD\1F\02", align 1
@huff_a05_xlat = internal constant [225 x i8] c"\00\10\F0\01\11\F1\0F\1F\FF \E0\E1\02\F2\0E\1E/0\D0!\12\22\E2\03\0D.\EE\FE\EF@\C01\C1\D12\D2\13#\E3\F3\04\F4\0C\1C\1D-\ED\FD>\DE?\DFP`p\90\A0\B0AQaq\91\A1\B1Bb\92\A2\C23\C3\D3\14$4\D4\E4\05\15\F5\06\16&\E6\F6\07\17\E7\F7\09\19)\F9\0A\1A*\EA\FA\0B\1B\FB,<\DC\EC\FC=M\CD\DDNn~\AE\CEO_o\7F\9F\AF\BF\CFRr\B2CScs\93\A3\B3Ddt\94\A4\B4\C4%5\A5\C5\D5\E56F\B6\C6\D6'7G\B7\C7\D79IY\C9\D9\E9:JZ\CA\DA+;Kk{\DB\EBL\5Cl|\9C\AC\CC]m}\9D\AD\BD^\9E\BETEUeu\95\B5Vfv\96\A6Wg\97\A7iy\A9\B9jz\9A\AA\BA[\9B\AB\BB\CB\BCw\99", align 16
@huff_a06_cb = internal constant [7 x i8] c"\02\06\01\03\02\06\04", align 1
@huff_a06_xlat = internal constant [16 x i8] c"\01\00\02\03\04\05\06\07\08\09\0D\0E\0A\0B\0C\0F", align 16
@huff_a07_cb = internal constant [11 x i8] c"\02\0A\01\02\02\02\06\0E\15\0D\02", align 1
@huff_a07_xlat = internal constant [63 x i8] c"\00\01?\02>\03=\04\05\06:;<\07\08\09\0A\1A\1B\1C$%&6789\0B\0C\0D\0E\0F\10\19\1D\1E\1F!\22#'/012345\11\12\13\14\15\16\17)*+,-.\18(", align 16
@huff_a11_cb = internal constant [13 x i8] c"\01\0B\01\00\00\00\08\01\12\09\16\0A\0C", align 1
@huff_a11_xlat = internal constant [81 x i8] c"\00@\C0\100\04\0C\01\03\D0Pp\F0\C44L\CC\1CA\C11\05\0DC\C3\13\07\0FD\14t\DC<\11\1D37T\D4\F4\5C|\FC\D1q\F1\155M\CD\DD=\D3sG\C7\17w?QE\C5US\F3O\CF\1F\FF\D5u\F5]}\FDW\D7\F7_\DF\7F", align 16
@huff_a12_cb = internal constant [8 x i8] c"\05\0A\10\0B \13\01\02", align 1
@huff_a12_xlat = internal constant [81 x i8] c"\00@\10P\04D\14T\01A\11Q\05E\15U\90\94X\91\95\19Y\06F\16V\80`\84$d\A4\08H\18h\81!a\A1\85%e\A5\09I\99i\A9\02B\12R\96&f\1AZ \A0\88\98(\A8\89)\82\92\22b\86\A6\0AJ\9Aj\AA\A2\8A*", align 16
@huff_a13_cb = internal constant [12 x i8] c"\01\0A\01\00\00\04\02\02\09\0F\0C\04", align 1
@huff_a13_xlat = internal constant [49 x i8] c"\00\088\01\079\0F\09?\1001\02:\06\0E>\17\18(\11)\0A2\03\0B;\05\0D=\16\1F7\19\12\1A*\133\155\1E.6/\1B+\1D-", align 16
@huff_a14_cb = internal constant [12 x i8] c"\02\0B\01\00\04\03\05\10\1C\22\1A\04", align 1
@huff_a14_xlat = internal constant [121 x i8] c"\00\10\F0\01\0F\F1\1F\FF \E0\11\02\0E0P\B0\D0!\E1\12\F2\03\05\0B\0D\1E\FE/\EF@\C01Q\B1\C1\D1\22R\E2\13\F3\04\15\F5\1B\EB\FB\0C\1D\FD.^\EE?_\BF\DFA2B\B2\D2#S\B3\E3\14$\E4\F4%5\D5\E5+;\DB\1C,\BC\EC\FC-\BD\ED>N\BE\DEO\CF\C23C\C3\D34DT\B4\D4EU\C5K\CB<L\5C\CC\DC=M]\CD\DD\CE\C4\B5[\BB", align 16
@huff_a15_cb = internal constant [9 x i8] c"\05\0B\09\0C\10,b*\04", align 1
@huff_a15_xlat = internal constant [225 x i8] c"\00\10\F0\01\11\F1\0F\1F\FF \E0!\E1\02\12\F2\0E\1E\FE/\EF0\D01\D1\22\E2\03\13\F3\0D\1D\FD.\EE?\DF@`p\90\A0\C0A\C12B\C2\D2#3\D3\E3\04\14$\E4\F4\06\16\F6\07\09\0A\1A\FA\0C\1C,\EC\FC-=\DD\ED>N\CE\DEO\CFP\B0Qaq\91\A1\B1Rbr\92\A2\B2CScs\93\A3\C34Dd\A4\C4\D4\05\15%5\D5\E5\F5&6F\C6\D6\E6\17'7\C7\D7\E7\F7\19)9\C9\D9\E9\F9*:JZ\CA\DA\EA\0B\1B+;\CB\DB\EB\FB<Ll|\9C\AC\BC\CC\DCM]m}\9D\AD\BD\CD^n~\9E\AE\BE_o\7F\9F\AF\BF\B3Tt\94\B4EUeu\95\A5\B5\C5Vfv\96\A6\B6GWg\A7\B7IYi\A9\B9jz\9A\AA\BAK[k{\9B\AB\BB\5Cw\97y\99", align 16
@huff_a16_cb = internal constant [13 x i8] c"\02\0C\01\01\02\02\05\07\156U>\10", align 1
@huff_a16_xlat = internal constant [256 x i8] c"\00\01\10\11!\12 1\02\22\130A2\03#\14$@Qa\D1\E1BR\D23C\D3\044\05\15%\16\1D-\1E.P`\D0\E0\F0q\81\F1br\E2\F2Sc\E3\F3DT\D4\E4\F45EU\D5\E5\F5\06&6\D6\07\17'7\D7\18(\1C\0D=M]m\8D\0E>N^\0F\1F/?_p\80\90\C0\91\A1\B1\C1\82\92\A2\C2s\83\93\A3\C3dt\84\94\A4\C4eu\85FVf\C6\E6\F6GW\E7\F7\088HXh\D8\E8\F8\09\19)9Y\D9\E9\F9\1A*:\DA\EA\FA\1B+\DB\EB\FB\0C,<\DC\EC}\9D\AD\BD\CDn~\8E\9E\AE\BE\CEOo\7F\8F\AF\A0\B2\B3\B4\95\A5\B5\C5v\86\96\A6\B6gw\87\97\C7x\88\98\C8Iiy\89\99\C9\0AJZjz\CA\0B;K[k\CBL\5Cl|\8C\9C\AC\BC\CC\FC\DD\ED\FD\DE\EE\FE\9F\BF\CF\DF\EF\FF\B0\A7\B7\A8\B8\A9\B9\8A\9A\AA\BA{\8B\9B\AB\BB", align 16
@huff_a17_cb = internal constant [9 x i8] c"\03\09\03\02\05\07\11\17\06", align 1
@huff_a17_xlat = internal constant [63 x i8] c"\00\01?\02>\03\04;<=\05\06\07\0889:\09\0A\0B\0C\0D\0E\1A\1B$%&234567\0F\10\11\12\13\14\15\19\1C\1D\1E\1F!\22#'+,-./01\16\17\18()*", align 16
@huff_a21_cb = internal constant [14 x i8] c"\01\0C\01\00\00\02\06\00\07\15\0F\11\08\04", align 1
@huff_a21_xlat = internal constant [81 x i8] c"\00@\C0\100\04\0C\01\03\D0p4\1C\0D\13\07P\F0D\C4\14tL\CC\DC<A\C1\111\05\1DC\C337\0FT\F4\FC\D1q\15M\CD\DD\D3sG\C7w?\D4\5C|Q\F1E\C5U5=S\F3\17O\CF\1F\FFu\F5]}\D7\F7_\DF\D5\FDW\7F", align 16
@huff_a22_cb = internal constant [10 x i8] c"\02\09\01\04\00\04\03\08\03\02", align 1
@huff_a22_xlat = internal constant [25 x i8] c"\00\088\01\07\099\0F?\10\02\060\111\0A:\0E\1772\16>\126", align 16
@huff_a23_cb = internal constant [9 x i8] c"\03\09\05\00\04\06\0A\10\08", align 1
@huff_a23_xlat = internal constant [49 x i8] c"\00\088\01\07\099\0F?\100\02:\06\0E\18(\111\0A\03\05>\177\19)\12*2\0B3;\0D\15=\16\1E6\1F/\1A\13\1B+\1D-5.", align 16
@huff_a24_cb = internal constant [5 x i8] c"\02\04\03\01\02", align 1
@huff_a25_cb = internal constant [5 x i8] c"\02\04\01\05\02", align 1
@huff_a25_xlat = internal constant [8 x i8] c"\01\00\02\03\04\05\06\07", align 1
@huff_a26_cb = internal constant [10 x i8] c"\04\0B\03\04\0C\0F\22SK\1E", align 1
@huff_a26_xlat = internal constant [256 x i8] c"\00\01\11\10!\12\22 01A\022\03\13#3\14$@QaBRCS\044D\15%5\16&P`q\81\D1br\82\D2cs\D3Td\05EUe\066FV\17'7G\18(8\19\1D-=\1Ep\80\90\D0\E0\91\A1\B1\C1\E1\F1\92\A2\C2\E2\F2\83\93\A3\C3\E3\F3t\84\94\A4\C4\D4\E4\F4u\85\95\D5\E5fv\86\D6\E6\07Wgw\D7\08HXh\D8\09)9IYi\1A*:J\1B+\1C,<L\0DM]m}\8D\0E.>N^n\1F/?O_\A0\B0\C0\F0\B2\B3\B4\A5\B5\C5\F5\96\A6\B6\C6\F6\87\97\A7\B7\C7\E7\F7x\88\98\A8\C8\E8\F8y\89\99\C9\D9\E9\F9\0AZjz\8A\DA\EA\FA\0B;K[k{\8B\DB\0C\5Cl|\8C\9C\DC\9D\AD\BD\CD~\8E\9E\AE\BE\0Fo\7F\8F\9F\AF\B8\A9\B9\9A\AA\BA\CA\9B\AB\BB\CB\EB\FB\AC\BC\CC\EC\FC\DD\ED\FD\CE\DE\EE\FE\BF\CF\DF\EF\FF", align 16
@huff_a27_cb = internal constant [7 x i8] c"\04\08\03\0E\0A\14\10", align 1
@huff_a27_xlat = internal constant [63 x i8] c"\00\02\03\01\05\06\07\09678:;<=>?\04\08\0A\0B\0C\0E1459\0D\0F\10\11\12\13\16\17\19\1A\1E'+,-./023\14\15\18\1B\1C\1D\1F!\22#$%&()*", align 16
@huff_a31_cb = internal constant [8 x i8] c"\01\06\01\00\03\01\00\04", align 1
@huff_a31_xlat = internal constant [9 x i8] c"\00\04\0C\01\03\05\0D\07\0F", align 1
@huff_a32_cb = internal constant [13 x i8] c"\01\0B\01\00\00\02\02\06\0C\12\13\0F\06", align 1
@huff_a32_xlat = internal constant [81 x i8] c"\00@\01\10\04\80P \14\05\02\90`DT$\08\18A\11\15\09\06\A0\84\94d\A4HX(Q!EU%\19\12\16\0A\1Ah\A8\81\91a\A1\85\95e\A5IY)iBRFV*\88\98\89\99\A9\82\92\22b\86&fJZj\A2\96\A6\8A\9A\AA", align 16
@huff_a33_cb = internal constant [12 x i8] c"\03\0C\01\01\0D\01\0E\1C!Q 4", align 1
@huff_a33_xlat = internal constant [256 x i8] c"\00\10@P\04D\14T\01A\11Q\05E\15U\90 \94d\18!\95\19i\02R\06F\16\80`\84\D4$\08HXh\81\91a\85%e\A5\09IY)B\12V\96\A6\0A\17\1B\D0\C4t\F4\88\C8(\A1q\C5\D5u\99\B9M\1D-m\22bfJ\1A\9Aj\8E^C#\07GWk\C0\A0\E0p\B0\A4\E44\B4\98\D8\A88x\0CL\1C\5C\9Cl|\C1\D1\E11\E55\B5\F5\89\A9y\F9\0D\CD\9D\DD\AD=}\82\C2\92\D2\E2r\F2\86\D6\E6v\B6\8AZ\DA\EA\FAN\1E\9E\EE\03\13S\97\B7\0BK\8B[\9B\EB{\0FO\1F_\9F/?\BF\E8\B8\F8\8C,<\FC\B1\C9\D9\E99]\ED\BD\A22&6*\AA\BA\0E.n\83\C3\93c\B3\A770\F0\CC\DC\AC\EC\BC\F1\8D\FD\B2\C6\F6\CA:z\CE\DE\AE>~\BE\FE\D3\A3\E33s\F3\87\C7\D7'g\E7w\F7\CB\DB+\AB;\BB\FB\8F\CF\DFo\AF\EF\7F\FF", align 16
@huff_a34_cb = internal constant [7 x i8] c"\01\05\01\01\01\01\02", align 1
@huff_a34_xlat = internal constant [6 x i8] c"\01\00\02\03\04\05", align 1
@huff_a35_cb = internal constant [11 x i8] c"\02\0A\01\00\02\03\06\13\09Kn", align 1
@huff_a35_xlat = internal constant [225 x i8] c"\00\F0\0F\10\01\FF \E0\11\F1\0E\1F0@\D0!\E1\02\12\22\E2\F2\03\13\1E.>\EE\FE/\EF\D2C\F3\04\0D-=?\DFP`p\90\B01A\91\A1\C1\D1B\A2\C2#3\E3$4\B4\D4\F4\05\15E\E5\166V\A6\C6\D6\F6W\C7\F7\09)IYi\F9\0A*:J\DA\EA\FA\0B+\AB\EB\FB\0C\1C,<L\5C\CC\DC\FC\1DMm\BD\CD\ED\FDNn\CE\DE\7F\A0\C0Qaq\B12Rbr\92\B2Scs\93\A3\B3\C3\D3\14DTdt\94\A4\C4\E4%5Ueu\95\A5\B5\C5\D5\F5\06&Ffv\96\B6\E6\07\17'7Ggw\97\A7\B7\D7\E7\199y\99\A9\B9\C9\D9\E9\1AZjz\9A\AA\BA\CA\1B;K[k{\9B\BB\CB\DBl|\9C\AC\BC\EC]}\9D\AD\DD^~\9E\AE\BEO_o\9F\AF\BF\CF", align 16
@huff_a36_cb = internal constant [12 x i8] c"\03\0C\01\03\05\05\0D\1BE`#\02", align 1
@huff_a36_xlat = internal constant [256 x i8] c"\00\10\01\11 !\02\12\221A2\13#0@QB\033C\04\14$4\15%Paq\D1Rbr\D2Sc\D3DTd\055EU\16&6F\17'\1D-=`p\D0\81\91\A1\C1\E1\F1\82\92\C2\E2\F2s\83\E3\F3t\84\C4\D4\E4\F4eu\85\D5\E5\06Vf\D6\E6\077GWg\D7\E7\18(8HX\D8\19)*\1C,\0DM]m}\8D\9D\1E.>N^n~\1F/?\80\90\A0\C0\E0\F0\B1\A2\B2\93\A3\B3\C3\94\A4\B4\95\A5\B5\C5\F5v\86\96\A6\C6\F6w\87\97\A7\C7\F7\08hx\88\98\C8\E8\F8\099IYiy\89\D9\E9\F9\0A\1A:JZj\DA\EA\FA\1B+;K[\DB\EB\FB\0C<L\5Cl|\8C\9C\DC\EC\AD\BD\CD\DD\ED\0E\8E\9E\AE\BE\0FO_o\7F\8F\9F\AF\B0\B6\B7\A8\B8\99\A9\B9\C9z\8A\9A\AA\BA\CA\0Bk{\8B\9B\CB\AC\BC\CC\FC\FD\CE\DE\EE\FE\BF\CF\DF\EF\FF\AB\BB", align 16
@huff_a37_cb = internal constant [7 x i8] c"\04\08\07\06\08\16\14", align 1
@huff_a37_xlat = internal constant [63 x i8] c"\00\01\02\03=>?\04\05\06:;<\07\08\09\0A6789\0B\0C\0D\0E\0F\10\19\1A\1B\1C\1D\1E#$%&012345\11\12\13\14\15\16\17\18\1F!\22'()*+,-./", align 16
@huff_a41_cb = internal constant [14 x i8] c"\01\0C\01\00\00\06\02\00\00\00\13\09\18\14", align 1
@huff_a41_xlat = internal constant [81 x i8] c"\00@\C0\100\04\0C\01\03P\D0p\F0\C44L\CC\1CA\C11\05\0DC\C3\13\07\0FD\14t\DC<\11\1D37T\D4\F4\5C|\FC\D1q\F1\C5\155M\CD\DD=\D3sG\C7\17w\1F?QEU\D5u\F5]}\FDS\F3W\D7\F7O\CF_\DF\7F\FF", align 16
@huff_a42_cb = internal constant [10 x i8] c"\03\0A\01\02\0D\01\1F\0D\10\04", align 1
@huff_a42_xlat = internal constant [81 x i8] c"\00@\01\10P\04D\14TA\11Q\05E\15UY\80\90 `\84\94$d\08H\18X\81\91!a\85\95%e\09I\19\02B\12R\06F\16V\A0\A4h\A1\A5\99)i\96fJ\1AZ\88\98(\89\A9\82\92\22b\86&\A6\0A\9A*j\A8\A2\8A\AA", align 16
@huff_a43_cb = internal constant [5 x i8] c"\02\04\02\03\02", align 1
@huff_a43_xlat = internal constant [7 x i8] c"\00\07\01\02\06\03\05", align 1
@huff_a44_cb = internal constant [9 x i8] c"\04\0A\05\04\0C\11/\18\0C", align 1
@huff_a44_xlat = internal constant [121 x i8] c"\00\10\F0\01\0F\11\F1\1F\FF \E0!\E1\02\12\F2\0E\1E\FE/\EF0P\D0\D1\22\E2\03\13\F3\0D\1D-\FD.\EE?\DF@\B0\C01AQ\B1\C12\B2\C2\D2#\B3\D3\E3\04\14\E4\F4\05\15\D5\E5\F5\0B\1B+;\EB\FB\0C\1C,\FC=]\ED>N^\BE\DEO_\BF\CFBR3S\C3$\B4\D4%5\C5K\CB\DB<L\5C\DC\ECM\BD\CD\DD\CEC4DT\C4EU\B5[\BB\BC\CC", align 16
@huff_a45_cb = internal constant [5 x i8] c"\02\04\02\02\04", align 1
@huff_a45_xlat = internal constant [8 x i8] c"\01\02\00\03\04\05\06\07", align 1
@huff_a46_cb = internal constant [7 x i8] c"\05\09\01\10\1F$\AC", align 1
@huff_a46_xlat = internal constant [256 x i8] c"\02\000!1Aa\12\22BbCS$E&'\10@\B0\01\11\812Rr\92\03\133c\144Tdt\05\15%5Ue\06FVWg\88 Q\91\D1\F2#\83\93\04D\84\94u\85\C56f\96\B6\077\97\08(8Hh\09iy\0A*\1B\9B,MP`p\80\90\A0\C0\D0\E0\F0q\A1\B1\C1\E1\F1\82\A2\B2\C2\D2\E2s\A3\B3\C3\D3\E3\F3\A4\B4\C4\D4\E4\F4\95\A5\B5\D5\E5\F5\16v\86\A6\C6\D6\E6\F6\17Gw\87\A7\B7\C7\D7\E7\F7\18Xx\98\A8\B8\C8\D8\E8\F8\19)9IY\89\99\A9\B9\C9\D9\E9\F9\1A:JZjz\8A\9A\AA\BA\CA\DA\EA\FA\0B+;K[k{\8B\AB\BB\CB\DB\EB\FB\0C\1C<L\5Cl|\8C\9C\AC\BC\CC\DC\EC\FC\0D\1D-=]m}\8D\9D\AD\BD\CD\DD\ED\FD\0E\1E.>N^n~\8E\9E\AE\BE\CE\DE\EE\FE\0F\1F/?O_o\7F\8F\9F\AF\BF\CF\DF\EF\FF", align 16
@huff_a47_cb = internal constant [8 x i8] c"\04\09\05\0C\09\0C\0F\0A", align 1
@huff_a47_xlat = internal constant [63 x i8] c"\00\01\02>?\03\04\05\06\08689:;<=\07\09\0A\0B\0C\0D\0E57\0F\10\11\12\13\14\15$%'*4\16\19\1C#&()+-./0123\17\18\1A\1B\1D\1E\1F!\22,", align 16
@huff_a51_cb = internal constant [12 x i8] c"\02\0B\01\00\06\02\06\12\04\1A\06\0C", align 1
@huff_a51_xlat = internal constant [81 x i8] c"\00@\C00\04\01\03\10\0C\D0p4\1C\0D\07P\F0D\C4\14L\CC<A\C1\111\05C\C3\133\0Ft\DC\1D7T\D4\F4\5C|\FC\D1q\F1\C5\155M\CD\DD=S\D3sG\C7\17wO\1F?QEU\F3\CF\FF\D5u\F5]}\FDW\D7\F7_\DF\7F", align 16
@huff_a52_cb = internal constant [12 x i8] c"\01\0A\01\00\02\02\00\04\03\08\03\02", align 1
@huff_a52_xlat = internal constant [25 x i8] c"\00\088\01\07\099\0F?\10\02\060\111\0A:\0E\1772\16>\126", align 16
@huff_a53_xlat = internal constant [7 x i8] c"\00\01\02\06\07\03\05", align 1
@huff_a54_cb = internal constant [8 x i8] c"\04\09\04\07\0C\13\15:", align 1
@huff_a54_xlat = internal constant [121 x i8] c"\00\01\0F\1F\10\E0\F0\11\F1/\FF !\E1\02\12\F2\03\F3\0E.\FE?0@\D0\C1\D1\22\C23\E3\0C\CC\0D\1D-\FD\1E>^\EF\C0R\B2\D2C\C3\D3$E\F5K[\FB\1C=\BD\DD\EE\BF\CF\DFP\B01AQ\B12B\E2\13#S\B3\04\144DT\B4\C4\D4\E4\F4\05\15%5U\B5\C5\D5\E5\0B\1B+;\BB\CB\DB\EB,<L\5C\BC\DC\EC\FCM]\CD\EDN\BE\CE\DEO_", align 16
@huff_a55_cb = internal constant [8 x i8] c"\01\06\01\01\01\00\03\02", align 1
@huff_a55_xlat = internal constant [8 x i8] c"\00\01\02\03\06\07\04\05", align 1
@huff_a56_cb = internal constant [7 x i8] c"\03\07\01\08\06\08\08", align 1
@huff_a56_xlat = internal constant [31 x i8] c"\04\00\01\02\03\1C\1D\1E\1F\05\06\07\18\19\1B\08\09\0E\13\15\16\17\1A\0A\0B\0C\0D\0F\11\12\14", align 16
@huff_a57_cb = internal constant [9 x i8] c"\03\09\01\05\07\08\10\16\04", align 1
@huff_a57_xlat = internal constant [63 x i8] c"\00\01\02=>?\03\04\05\06:;<\07\08\09\0A6789\0B\0C\0D\0E\0F\1A\1B\1C$%&12345\10\11\12\13\14\15\17\18\19\1D\1E\1F!\22#'+,-./0\16()*", align 16
@huff_a61_cb = internal constant [12 x i8] c"\02\0B\01\00\08\00\01\10\0A\1D\0C\04", align 1
@huff_a61_xlat = internal constant [81 x i8] c"\00@\C0\100\04\0C\01\03pP\D0\F0D\C4\144L\1C<1\05\0D\13\07\0Ft\CC\DC\FCA\C1\11C\C33T\D4\F4\5C|Q\D1q\F1E\C5\155M\CD\1D=S\D3s\F3G\C7\177O\CF\1F?U\D5u\F5]\DD\FDW\D7w\F7\FF}_\DF\7F", align 16
@huff_a62_cb = internal constant [8 x i8] c"\03\08\05\02\02\09\05\02", align 1
@huff_a62_xlat = internal constant [25 x i8] c"\00\088\01\079\0F\09?\1001\02:\06\0E\177\11\0A2\16>\126", align 16
@huff_a63_cb = internal constant [11 x i8] c"\03\0B\01\01\0A\04\10\1D.KJ", align 1
@huff_a63_xlat = internal constant [256 x i8] c"\00@\10P\04D\14\01A\05EUT\11Q\15\80\90`$d\A4Ha\95%\A5\02BR\16V \84\94\18X\81\91\85e\09I\19Y\99)iy]\12b\06F\86f\1AZjG\17\C0\A0\E0\C4\D4t\08x\0CL\1C\5C\D1!\E1q\C5\E5u\B5\89\BD\92\22\96\A66\0AJ\8A\9A*z\DEnC\13S#\07wK\1B\9Bk/\D00p\E44\F4\C8\98(h\A8\E88\B8\F8\9C,l|\A1\B1\D55\C9\D9\A9\E99\B9\F9\CD\1D-\AD}\C2\D2\A2\B2\F2\C6&v\B6\DA\AA\EA:\FA\0EN.~\BE\FE\03\83c\A3\B3\87W\97\D7'\0B\8B[+\AB\CF\1F\9F\7F\BF\B0\F0\B4\88\D8\8C\CC\DC\AC\EC<\BC\FC\C11\F1\F5\0DM\8D\9D\DDm\ED=\FD\82\E22r\D6\E6\F6\CA\BA\8E\CE\1E^\9E\AE\EE>\C3\93\D3\E33s\F3\C7g\A7\E77\B7\F7\CB\DB\EB;{\BB\FB\0FO\8F_\DFo\AF\EF?\FF", align 16
@huff_a64_cb = internal constant [8 x i8] c"\04\09\01\07\0C$?\02", align 1
@huff_a64_xlat = internal constant [121 x i8] c"\00\10 \E0\F0\02\0E\EF0\01\11!1\F1\12\F2\1E\EE\DF\FF@\C0\D0\D1\E1\222B\D2\E2\03\13#\B3\C3\E3\F3\E4\05\F5+\0C\FC\1D-\BD\DD\FD.N\DE\FE\0F\1F/?P\B0AQ\B1\C1R\B2\C23CS\D3\04\14$4DT\B4\C4\D4\F4\15%5EU\B5\C5\D5\E5\0B\1B;K[\BB\CB\DB\EB\FB\1C,<L\5C\BC\CC\DC\EC\0D=M]\CD\ED>^\BE\CEO\CF_\BF", align 16
@huff_a65_cb = internal constant [8 x i8] c"\02\07\03\00\01\03\04\04", align 1
@huff_a65_xlat = internal constant [15 x i8] c"\00\01\0F\0E\02\03\0D\04\06\0A\0C\05\07\09\0B", align 1
@huff_a66_cb = internal constant [11 x i8] c"\02\0A\01\02\02\06\08\06\03\01\02", align 1
@huff_a66_xlat = internal constant [31 x i8] c"\00\01\1F\02\1E\03\04\0F\11\1C\1D\05\06\07\08\18\19\1A\1B\09\0A\0B\15\16\17\0C\13\14\0D\0E\12", align 16
@huff_a67_cb = internal constant [10 x i8] c"\02\09\01\01\03\04\06\0D\19\0A", align 1
@huff_a67_xlat = internal constant [63 x i8] c"\00\01\02>?\03\04<=\05\06\079:;\08\09\0A\0B\0C\0D\1A&45678\0E\0F\10\11\12\13\19\1B\1C\1D\1E\1F!\22#$%'-./0123\14\15\16\17\18()*+,", align 16
@huff_a71_cb = internal constant [5 x i8] c"\01\03\01\01\02", align 1
@huff_a72_cb = internal constant [12 x i8] c"\02\0B\01\00\04\08\03\08\18\11\0C\04", align 1
@huff_a72_xlat = internal constant [81 x i8] c"\00@\10\04\01PD\14TA\11\05\15QEU\80\90 d\08\19\02\06`\84\94$H\18X\81\91!a\85\95%e\09IYB\12RF\16V\A0\A4\98(h\A1\A5\99)i\96&f\0AJ\1AZ\88\A8\89\A9\82\92\22b\86\A6*j\A2\8A\9A\AA", align 16
@huff_a73_cb = internal constant [11 x i8] c"\02\0A\01\01\05\02\08\07\0D\08\04", align 1
@huff_a73_xlat = internal constant [49 x i8] c"\00\088\019\07\0F\09?\1001\02:\06\0E\17\11\0A2\0D\16>7\18(\19)\12*\03;\05\15\1E\1F/\1A\0B+35=.6\13\1B\1D-", align 16
@huff_a74_cb = internal constant [14 x i8] c"\01\0C\01\00\00\04\00\04\05\09\1E-\15\02", align 1
@huff_a74_xlat = internal constant [121 x i8] c"\00\10\F0\01\0F\11\F1\1F\FF \E0\02\F2\0E!\E1\12\E2\1E.\FE/\EF0P\B0\C0\D01\B1\D1\22\D2\03\13\E3\F3\F4\05\E5\F5\0B\1B\0C\0D\1D-\FD>\EE?_\DF@AQ\C12BR\B2\C2#3\B3\C3\D3\04\14$\D4\E4\15%\C5\D5+;\EB\FB\1C,<\5C\EC\FC=]\DD\EDN^\BE\CE\DEO\BF\CFCS4T\B4\C45EU\B5K[\CB\DBL\BC\CC\DCM\BD\CDD\BB", align 16
@huff_a75_cb = internal constant [7 x i8] c"\02\06\01\03\03\04\04", align 1
@huff_a75_xlat = internal constant [15 x i8] c"\00\01\0E\0F\02\03\0D\04\06\0A\0C\05\07\09\0B", align 1
@huff_a76_cb = internal constant [12 x i8] c"\03\0C\01\03\04\08\0A$<N0\08", align 1
@huff_a76_xlat = internal constant [256 x i8] c"\00\10\01\11 !\02\1201A\22\03\13#\14@Qa2B3\04$\15\16P`\D0q\81\D1\E1\F1Rbr\D2CSc\D34DT\05%5E\06&6\17'\18\0D\1D-=\1E.\1Fp\80\E0\F0\91\A1\C1\82\92\C2\E2\F2s\83\93\E3\F3dt\84\D4\E4\F4Ue\D5\E5\F5FVf\D6\077GW\08(8H\19)9\1A*\1B\1C,<M]m\0E>N^\0F/?O\90\A0\B0\C0\B1\A2\B2\A3\B3\C3\94\A4\B4\C4u\85\95\A5\C5v\86\96\E6\F6gw\87\D7\E7\F7Xhx\88\D8\E8\F8\09IYi\D9\E9\F9\0A:JZ\DA\EA\0B+;K\DB\0CL\5Cl\DC}\8D\9D\AD\BD\CDn~\8E\9E\AE\BE_o\7F\8F\9F\AF\B5\A6\B6\C6\97\A7\C7\98\A8\B8\C8y\89\99\A9\B9\C9jz\8A\9A\AA\CA\FA[k{\8B\CB\EB\FB|\8C\9C\AC\BC\EC\FC\DD\ED\FD\CE\DE\EE\FE\BF\CF\DF\B7\BA\9B\AB\BB\CC\EF\FF", align 16
@huff_b01_cb = internal constant [14 x i8] c"\01\0C\01\00\00\02\06\00\0B\0D\0C\18\04\08", align 1
@huff_b01_xlat = internal constant [81 x i8] c"\00\01\03@\C0\100\04\0CP\D0p\F04\1C\05\0D\13\07\0FD\C4\14L\CC<A\C1\111C\C33Tt\DC\FCq\15M\1D\D3\C77?\D4\F4\5C|Q\D1\F1E\C5U5\CD\DD=Ss\F3G\17wO\CF\1F\FF\F5}\D7_\D5u]\FDW\F7\DF\7F", align 16
@huff_b02_cb = internal constant [14 x i8] c"\01\0C\01\00\00\04\00\08\04\09\13\0D\0D\0A", align 1
@huff_b02_xlat = internal constant [81 x i8] c"\00@\10\04\01PD\14TA\11\05\15\80QEU\90 `$\08\18\09\02\06\84\94dHX\81\91!a\95%e\19YB\12F\16V\A0\A4(h\85\A5I)iR\0A\1AZ\88\98\A1\89\99\A9\22b\96&fJj\A8\82\92\A2\86\A6\8A\9A*\AA", align 16
@huff_b03_cb = internal constant [11 x i8] c"\01\09\01\00\00\04\00\05\0C\0D\0E", align 1
@huff_b03_xlat = internal constant [49 x i8] c"\00\088\01\070\099\0F?\10\18(1\02:\03\05\06\0E\177\11\19)\0A2\0B;\0D\15=>\1F/\12\1A*\13\1B+3\1D-5\16\1E.6", align 16
@huff_b04_cb = internal constant [12 x i8] c"\02\0B\01\00\04\04\05\09\1E-\15\02", align 1
@huff_b04_xlat = internal constant [121 x i8] c"\00\10\F0\01\0F\11\F1\1F\FF \E0\02\F2\0E!\E1\12\E2\1E.\FE/\EF0P\B0\C0\D01\B1\D1\22\D2\03\13\E3\F3\F4\05\E5\F5\0B\1B\0C\0D\1D-\FD>\EE?_\DF@AQ\C12BR\B2\C2#3\B3\C3\D3\04\14$\D4\E4\15%\C5\D5+;\EB\FB\1C,<\5C\EC\FC=]\DD\EDN^\BE\CE\DEO\BF\CFCS4T\B4\C45EU\B5K[\CB\DBL\BC\CC\DCM\BD\CDD\BB", align 16
@huff_b05_cb = internal constant [11 x i8] c"\03\0B\01\04\04\04\0C\1EIK\16", align 1
@huff_b05_xlat = internal constant [225 x i8] c"\00\10\F0\01\0F\11\F1\1F\FF \E0\02\0E0\D0!\E1\12\F2\03\0D\1E\FE/\EF@`p\90\A0\C01\D1\222\D2\E2\13#\E3\F3\04\06\07\09\0A\0C\1D-\FD.>\EE?\DFP\B0AQaq\91\A1\B1\C1Bbr\92\A2\C23\93\A3\D3\14$\E4\F4\05\15\F5\16&\D6\E6\F6\17'\D7\E7\F7\19)9\E9\F9\1A*\EA\FA\0B\1B\FB\1C,\EC\FC=}\9D\DD\EDNn~\9E\AE\CE\DEO_o\7F\9F\AF\BF\CFR\B2CScs\B3\C34Ddt\94\A4\B4\C4\D4%5eu\95\A5\D5\E56FVf\A6\B6\C67GW\B7\C7IYi\B9\C9\D9:JZj\AA\BA\CA\DA+;k{\9B\AB\DB\EB<Ll|\9C\AC\CC\DCM]m\AD\BD\CD^\BETEU\B5\C5v\96gw\97\A7y\99\A9z\9AK[\BB\CB\5C\BC", align 16
@huff_b07_cb = internal constant [9 x i8] c"\03\09\03\02\04\08\17\0D\0A", align 1
@huff_b07_xlat = internal constant [63 x i8] c"\00\01?\02>\03\04<=\05\06\07\0889:;\09\0A\0B\0C\19\1A\1B\1C\1D\1E\1F!\22#$%&'34567\0D\0E\0F\10\11\12\13-./012\14\15\16\17\18()*+,", align 16
@huff_b12_cb = internal constant [10 x i8] c"\03\0A\01\03\0C\00\1E\09\12\08", align 1
@huff_b12_xlat = internal constant [81 x i8] c"\00@\04\01\10PD\14TA\11Q\05E\15U\80\90 `\84\94$d\08H\18\81\91a\85\95%e\09I\19Y\02B\12R\06F\16V\A4Xh!\A5)i\1AZ\A0\88\98(\A1\89\99\A9\92\22b\86\96&f\0AJj\A8\82\A2\A6\8A\9A*\AA", align 16
@huff_b14_cb = internal constant [14 x i8] c"\01\0C\01\00\00\04\00\03\05\10\1C\22\1A\04", align 1
@huff_b14_xlat = internal constant [121 x i8] c"\00\10\F0\01\0F\F1\1F\FF \E0\11\02\0E0P\B0\D0!\E1\12\F2\03\05\0B\0D\1E\FE/\EF@\C01Q\B1\C1\D1\22R\E2\13\F3\04\15\F5\1B\EB\FB\0C\1D\FD.^\EE?_\BF\DFA2B\B2\D2#S\B3\E3\14$\E4\F4%5\D5\E5+;\DB\1C,\BC\EC\FC-\BD\ED>N\BE\DEO\CF\C23C\C3\D34DT\B4\D4EU\C5K\CB<L\5C\CC\DC=M]\CD\DD\CE\C4\B5[\BB", align 16
@huff_b16_cb = internal constant [11 x i8] c"\04\0C\04\04\09\0D%LH'\02", align 1
@huff_b16_xlat = internal constant [256 x i8] c"\00\10\01\11 !\02\1201A\222\03\13#\14@QaBR3C\04$4\15%\16P`pq\81\D1\E1br\82\D2Scs\D3DT\055EU\06&6\07\17'7\18(\19\1D-=\1E.\1F\80\90\D0\E0\F0\91\A1\B1\C1\F1\92\A2\B2\C2\E2\F2\83\93\A3\C3\E3\F3dt\84\94\D4\E4\F4eu\85\D5\E5FVfv\D6\E6GWg\D7\088HX\09)9I\0A\1A*:\1B+\0C\1C,<\0DM]m}\0E>N^n\0F/?O\A0\B0\C0\B3\A4\B4\C4\95\A5\B5\C5\F5\86\96\A6\B6\C6\F6w\87\97\A7\C7\E7\F7hx\88\98\D8\E8\F8Yiy\89\D9\E9\F9JZjz\DA\EA\0B;K[\DB\EBL\5Cl|\8C\DC\8D\9D\AD\BD\CD~\8E\9E\AE\BE_o\7F\8F\9F\B7\A8\B8\C8\99\A9\B9\C9\8A\9A\AA\BA\CA\FAk{\8B\9B\AB\BB\CB\FB\9C\AC\BC\CC\EC\FC\DD\ED\FD\CE\DE\EE\FE\AF\BF\CF\DF\EF\FF", align 16
@huff_b26_cb = internal constant [12 x i8] c"\03\0C\02\02\04\05\0B\1ACN3\0A", align 1
@huff_b26_xlat = internal constant [256 x i8] c"\00\01\10\11 !\02\1201\22\03\13@AQ2B#3\04\14$\15Paq\D1\E1Rb\D2CS\D34D\05%5\06\16&\17\18\1D-=\1E.`p\80\D0\E0\F0\81\91\A1\C1\F1r\82\92\C2\E2\F2cs\E3\F3Tdt\D4\E4\F4EUe\D5\E5\F56FV\D6\E6\07'7G\D7\08(8\19)\1A\1B\1C,\0DM]m}\0E>N^n\0F\1F/?O\90\A0\C0\B1\A2\B2\83\93\A3\B3\C3\84\94\A4\C4u\85\95\C5fv\86\96\C6\F6Wgw\E7\F7HXhx\D8\E8\F8\099IY\D9\E9\F9\0A*:J\DA\EA\0B+;\DB\EB\0C<L\5Cl\DC\8D\9D\AD\BD\CD~\8E\9E\AE\BE\CE_o\7F\8F\9F\AF\B0\B4\A5\B5\A6\B6\87\97\A7\B7\C7\88\98\A8\C8iy\89\99\A9\C9Zjz\9A\CA\FAK[k{\CB\FB|\8C\9C\AC\BC\CC\EC\FC\DD\ED\FD\DE\EE\FE\BF\CF\DF\EF\B8\B9\8A\AA\BA\8B\9B\AB\BB\FF", align 16
@huff_b32_cb = internal constant [12 x i8] c"\02\0B\01\00\04\06\07\0A\16\0B\10\04", align 1
@huff_b32_xlat = internal constant [81 x i8] c"\00@\10\04\01PD\14A\11\05\80TQE\15U\02\90 `\84$\08\18\09\12\06\A0\94dHX\81\91!a\85\95%eI\19YBRF\16V\0A\A4(h\A1\A5)i&J\1AZ\88\98\A8\89\99\A9\82\92\22b\86\96f\9A*j\A2\A6\8A\AA", align 16
@huff_b33_cb = internal constant [13 x i8] c"\02\0C\01\00\00\04\0B\08\1C\5Ca\0D\02", align 1
@huff_b33_xlat = internal constant [256 x i8] c"\00@\10\04\01PD\14TA\11Q\05E\15U \95eIYRF\16\80\90`\84\94$d\A4\08H\18X\81\91!a\85%\09\19i\02B\12\06VZW\D0th\5C\C1\D5\A5\E5u\B5\F5\99\D9\A9\E9y\B9\F9\1D]\9D\DDm\AD\ED}\BD\FD\82\92\D2b\96\D6&f\A6\E6v\B6\F6\0AJ\1A\9A\DA*j\AA\EAz\BA\FA^\9E\DEn\AE\EE~\BE\FE\03\13S\17\97\D7g\A7\E7w\B7\F7[\9B\DBk\AB\EB{\BB\FB_\9F\DFo\AF\EF\7F\BF\FF\C0\A0\E00\C4\D4\E44\B4\F4\88\C8\98\D8(\A8\E88x\B8\F8\0CL\1C\9C\DCl\AC\EC|\BC\FC\D1\A1\E11q\B1\F1\C55\89\C9)9\0DM\8D\CD-=\22\A2\E2r\B2\F2\86\C66\8A\CA:\0EN\8E\CE\1E.>C\83\93\D3#c\A3\E3s\B3\F3\07G\87\C7'7K\8B\CB\1B+;O\8F\CF\1Fp\B0\F0\8C\CC,<\C22\C3\0F/?3\0B", align 16
@huff_b35_cb = internal constant [14 x i8] c"\01\0C\01\00\00\00\04\06\06\0E*?;\1E", align 1
@huff_b35_xlat = internal constant [225 x i8] c"\00\10\F0\01\0F\11\F1\02\0E\1F\FF \E0!\F2\FE\EF0\D0\E1\12\22\E2\03\0D\1D\1E.\EE/\DF@`p\90\A0\B0\C01q\91\C1\D12\D2\13\E3\F3\04\05\06\07\17\F7\09\19\0A\1A\FA\0C\1C-\ED\FD>~\DE?o\7F\9F\AF\CFPAQa\A1\B1br\92\A2\C2#3cs\93\A3\D3\14$4\D4\E4\F4\15\F5\16&\D6\E6\F6'7G\E7)9\C9\D9\E9\F9*\EA\0B\1B\FB,|\EC\FC=Mm}\DDN^n\9E\AE\CEO_BR\B2C\B3\C3Ddt\94\A4%5eu\95\A5\E56Ffv\96\A6\B6\C6W\A7\B7\C7\D7Y\A9\B9:Jj\CA\DA+;k\9B\AB\DB\EB<l\9C\AC\CC\DC]\9D\AD\BD\CD\BE\BFST\B4\C4EU\B5\C5\D5Vgw\97Iiy\99Zz\9A\AA\BAK[{\BB\CBL\5C\BC", align 16
@huff_b37_cb = internal constant [13 x i8] c"\01\0B\01\00\02\00\02\02\06\11\0E\0D\06", align 1
@huff_b37_xlat = internal constant [63 x i8] c"\00\01?\02>\03=\04\05\06:;<\07\08\09\0A\19\1A\1B\1C\1D\22#%&'789\0B\0D\0E\0F\1E\1F!$123456\0C\10\11\12\13\15)+,-./0\14\16\17\18(*", align 16
@huff_b41_cb = internal constant [14 x i8] c"\01\0C\01\00\00\01\07\00\14\04\0A\18\02\0C", align 1
@huff_b41_xlat = internal constant [81 x i8] c"\00\01@\C0\100\04\0C\03P\D0p\F0\C4\144L\1C<\C1\111\05\0D\C3\133\07\0FD\CCACTt\DC\FCq\15M\1D7?\D4\F4\5C|Q\D1\F1E\C55\CD\DD=S\D3s\F3G\C7\17wO\CF\1FU\FF\D5u\F5]}\FDW\D7\F7_\DF\7F", align 16
@huff_b42_cb = internal constant [11 x i8] c"\01\09\01\00\01\03\02\03\07\04\04", align 1
@huff_b42_xlat = internal constant [25 x i8] c"\00\07\088\019\0F\10\09?01\02:\06\0E\17\11\0A>7\122\166", align 16
@huff_b43_cb = internal constant [10 x i8] c"\02\09\01\01\03\04\09\0F\0C\04", align 1
@huff_b43_xlat = internal constant [49 x i8] c"\00\07\088\01\099\0F?\1001\02:\06\0E\177\18(\11\19)\0A\03\0B;\05\0D=>\1F/\12\1A*2\133\155\16\1E.6\1B+\1D-", align 16
@huff_b47_cb = internal constant [10 x i8] c"\02\09\01\01\03\04\06\0E\16\0C", align 1
@huff_b47_xlat = internal constant [63 x i8] c"\00\01\02>?\03\04<=\05\06\079:;\08\09\0A\0B\0C\1A\1B%&45678\0D\0E\0F\10\11\12\19\1C\1D\1E\1F!\22#$'./0123\13\14\15\16\17\18()*+,-", align 16
@huff_b52_cb = internal constant [11 x i8] c"\01\09\01\00\01\03\02\03\07\04\04", align 1
@huff_b52_xlat = internal constant [25 x i8] c"\00\01\088\079\0F0\09?\101\02:\06\0E\17\11\0A>7\122\166", align 16
@huff_b53_cb = internal constant [7 x i8] c"\01\05\01\01\01\00\04", align 1
@huff_b53_xlat = internal constant [7 x i8] c"\00\07\01\02\03\05\06", align 1
@huff_b56_cb = internal constant [11 x i8] c"\01\09\01\00\02\00\02\04\0B\09\02", align 1
@huff_b56_xlat = internal constant [31 x i8] c"\00\01\1F\02\1E\03\04\0D\1D\05\06\07\0E\0F\11\12\13\1A\1B\1C\08\09\0C\14\15\16\17\18\19\0A\0B", align 16
@huff_b62_cb = internal constant [14 x i8] c"\01\0C\01\00\00\02\03\05\0C\0E\12\0F\09\02", align 1
@huff_b62_xlat = internal constant [81 x i8] c"\00@\01\10\04\02\80P\90\05\06 `D\14T$\08\18A\11\15\09\A0\84\94d\A4(QEU\19\12\16\0A\1AHXh\81\91!a\85\95%eIY)iBFV\88\98\A8\A1\A5\99\A9R\22&fJZ*j\89\82\92b\86\96\A6\8A\AA\A2\9A", align 16
@huff_b63_cb = internal constant [7 x i8] c"\01\05\01\01\01\00\04", align 1
@huff_b63_xlat = internal constant [7 x i8] c"\00\01\07\02\03\05\06", align 1
@huff_b64_cb = internal constant [7 x i8] c"\01\05\01\01\01\01\02", align 1
@huff_b64_xlat = internal constant [6 x i8] c"\01\00\02\05\03\04", align 1
@huff_b65_cb = internal constant [14 x i8] c"\01\0C\01\00\00\02\02\02\06\0C\22\5C6\14", align 1
@huff_b65_xlat = internal constant [225 x i8] c"\00\F0\01\10\0F\11\F1 \E0\02\0E\1F\FF\D0!\E1\12\F2\07\0A\0D\1E\FE/\EF0p\90\A0\C0q\91\C1\D12\92\E2\03\13c\04\06\E6\E7\F7\09\199\FA\0C\1C\DD\ED\FD.~\9E?\9F@P`\B01Aa\A1\B1\22Br\A2\B2\C2\D2#3s\A3\C3\D3\E3\F3\14$4Dt\D4\E4\05%Ee\95\A5\16&Fv\A6\B6\C6\D6\F6\17'7Gg\A7\D7)i\B9\D9\E9\F9\1A*:\9A\CA\DA\EA\0B\1B;k\EB\FB,l\EC\FC\1D-Mm\9D\AD>Nn\AE\CE\EEO_o\DFQRbC\93\B3T\94\A4\F4\15u\B5\E5\F56Vf\96WwIY\A9\C9JZjz\AA\BA+K{\9B\AB\DB<L|\9C\AC\BC\CC=]}\BD\CD^\BE\DE\BF\CFSd\B4\C45U\C5\D5\97\B7\C7y\99[\BB\CB\5C\DC\7F\AF", align 16
@huff_b66_cb = internal constant [14 x i8] c"\01\0C\01\00\00\03\00\03\03\0A(U=2", align 1
@huff_b66_xlat = internal constant [256 x i8] c"\00\10\01\11!\02\12 \22\1301A\D1\E12R\03#-@P`\80\D0\E0Qa\F1Bb\D2\E2\F23C\C3\D3\E3\04\14\D4\F4%5\16\17\F7\D8\1C<\0D\1D=]\0E\1E.~/\C0\F0q\81\91\C1r\82\92\B2\C2Scs\93\A3\F3$Dd\84\A4\B4\05\15\95\D5\06&6F\96\D6\E6\F6\07'7\D7\E7\08\18(8\E8\F8\09\19)\E9\F9\0A\1A\CA\DA\EA\0B\1B\DB\EB\FB,L\5C|\8CMm\8D\9D\FD>^n\8E\9E\EE\0F\1F?O_o\7F\CFp\A1\A2\83\B34t\C4\E4Ue\85\A5\C5\E5\F5Vfv\86\A6\C6Wgw\97\A7H\88\98IYy\99:J\8A\BA\FA+{\0C\AC\BC\CC\EC}\AD\BD\DDN\BE\CE\FE\8F\9F\AF\BF\DF\EF\FF\90\A0\B0\B1T\94Eu\B5\B6G\87\B7\C7Xhx\A8\B8\C89i\89\A9\B9\C9\D9*Zjz\9A\AA;K[k\8B\9B\AB\BB\CBl\9C\DC\FC\CD\ED\AE\DE", align 16
@huff_b67_cb = internal constant [10 x i8] c"\02\09\01\02\01\04\07\0A\1A\0C", align 1
@huff_b67_xlat = internal constant [63 x i8] c"\00\01?>\02\03<=\04\05\06\079:;\08\09\0A\0B\0C45678\0D\0E\0F\10\11\12\19\1A\1B\1C\1D\1E\1F!\22#$%&'./0123\13\14\15\16\17\18()*+,-", align 16
@huff_b71_cb = internal constant [14 x i8] c"\01\0C\01\00\00\01\07\00\13\05\0D\17\00\0C", align 1
@huff_b71_xlat = internal constant [81 x i8] c"\00\03@\C0\100\04\0C\01P\D0p\F0\C4\144L\1C<\C1\111\05\0D\133\07\0FD\CCAC\C3Tt\DC\FC\F1\C5\15\1DS\C77O?\D4\F4\5C|Q\D1qEU5M\CD\DD=\D3s\F3G\17w\CF\1F\FF\D5u\F5]}\FDW\D7\F7_\DF\7F", align 16
@huff_b73_cb = internal constant [13 x i8] c"\01\0B\01\00\00\00\01\04\09\04gn\18", align 1
@huff_b73_xlat = internal constant [256 x i8] c"\00@\10\04\01\05P\14TA\11QE\15UD\95j\03\80\C0\90\D0\94\D4$dX\91\A1\85\D5%e\A5\E5u\B5\F5\19Y\99\D9i\A9\E9y\B9\F9M]\9D\DDm\AD\ED}\BD\FD\02BR\06F\16V\96\D6&f\A6\E6v\B6\F6\1AZ\9A\DA\AA\EAz\BA\FA^\9E\DEn\AE\EE~\BE\FE\07GW\97\D7g\A7\E7w\B7\F7[\9B\DBk\AB\EB{\BB\FB_\9F\DFo\AF\EF\7F\BF\FF `p\B0\F0\84\C4\A4\E4t\B4\F4\08\88\18\98\D8h\A8\E8x\B8\F8\1C\5C\9C\DCl\AC\EC<|\BC\FC\81\D1!a\E1q\B1\F1\C55\09I\89\C9)9\0D\8D\CD\1D-=\92\D2\22b\A2\E2r\B2\F2\86\C66\0AJ\8A\CA*:\0EN\8E\CE\1E.>\13S\93\D3c\A3\E3s\B3\F3\87\C7\17'7\0BK\8B\CB\1B+;\0FO\8F\CF\1F/?\A0\E004H\C8(8\0CL\8C\CC,\C11\82\C2\122C\83\C3#3", align 16
@huff_b74_cb = internal constant [8 x i8] c"\01\06\01\00\02\02\02\04", align 1
@huff_b74_xlat = internal constant [11 x i8] c"\00\01\0F\02\0E\05\0D\03\04\0B\0C", align 1
@huff_b75_cb = internal constant [13 x i8] c"\02\0C\01\04\00\00\00\08\0B\185@<", align 1
@huff_b75_xlat = internal constant [225 x i8] c"\00\10\F0\01\0F \E0\11\F1\02\0E\1F\FF\D0!\E1\12\F2\03\0D\1E\FE/\EF0@`p\90\A0\C01\D1\22\E2\13\F3\04\06\07\09\0C\1D\FD.\EE?\DFP\B0Aaq\91\A1\C12br\92\A2\D2#\D3\E3\14\F4\05\16&\E6\F6\17'\E7\F7\19)\F9\0A\1A*\FA\0B\1C,\FC-=\ED>N~\9E\DEOo\7F\9F\AF\CFQ\B1BR\B2\C23cs\93\A3\B3\C3$4t\A4\D4\E4\15%e\95\E5\F56\D67G\C7\D79Y\B9\C9\D9\E9:j\DA\EA\1B+\9B\AB\EB\FBl|\9C\AC\ECMm}\9D\AD\BD\DD^n\AE\CE_CSDTd\94\B4\C45EUu\A5\B5\C5\D5FVfv\96\A6\B6\C6Wgw\97\A7\B7Iiy\99\A9JZz\9A\AA\BA\CA;K[k{\BB\CB\DB<L\5C\BC\CC\DC]\CD\BE\BF", align 16
@huff_b77_cb = internal constant [12 x i8] c"\02\0B\01\00\04\06\0A\0C\07\0F\04\04", align 1
@huff_b77_xlat = internal constant [63 x i8] c"\00\01\02>?\03\04\05;<=\06\07\08\09\0A6789:\0B\0C\0D\0E\0F\10/12345\11\12\13\14-.0\15\16\17\18\19\1A\1B%&'()*+,\1C\1D\1E#\1F!\22$", align 16
@.str.1 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"index < 256\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"libavcodec/atrac3plus.c\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"WL mode 1: invalid position!\0A\00", align 1
@atrac3p_wl_shapes = internal constant [8 x [16 x [9 x i8]]] [[16 x [9 x i8]] [[9 x i8] c"\00\00\00\00\00\00\00\FE\FF", [9 x i8] c"\00\00\00\00\00\00\00\FB\FF", [9 x i8] c"\00\00\00\F9\00\00\00\00\00", [9 x i8] c"\00\00\00\00\00\F9\00\00\00", [9 x i8] c"\00\00\00\00\00\00\FB\00\00", [9 x i8] c"\00\00\00\00\FB\00\00\00\00", [9 x i8] c"\F9\F9\00\00\00\00\00\00\00", [9 x i8] c"\00\F9\00\00\00\00\00\00\00", [9 x i8] c"\FE\FE\FB\00\00\00\00\00\00", [9 x i8] c"\00\00\00\FE\FB\00\00\00\00", [9 x i8] c"\00\00\00\00\00\FE\FB\00\00", [9 x i8] c"\00\00\00\FB\00\00\00\00\00", [9 x i8] c"\00\FE\F9\FE\00\00\00\00\00", [9 x i8] c"\00\00\00\00\FE\FB\00\00\00", [9 x i8] c"\00\00\00\FB\FB\00\00\00\00", [9 x i8] c"\00\00\00\FB\FE\00\00\00\00"], [16 x [9 x i8]] [[9 x i8] c"\FF\FB\FD\FE\FF\FF\00\00\00", [9 x i8] c"\FE\FB\FD\FD\FE\FF\FF\00\00", [9 x i8] c"\00\FF\FF\FF\00\00\00\00\00", [9 x i8] c"\FF\FD\00\00\00\00\00\00\00", [9 x i8] c"\FF\FE\00\00\00\00\00\00\00", [9 x i8] c"\FF\FD\FF\00\00\00\00\01\01", [9 x i8] c"\FF\FB\FD\FD\FE\FF\00\00\00", [9 x i8] c"\FF\FF\FC\FE\FE\FF\FF\00\00", [9 x i8] c"\FF\FF\FD\FE\FD\FF\FF\FF\00", [9 x i8] c"\FF\FC\FE\FD\FF\00\00\00\00", [9 x i8] c"\00\FF\FE\FE\FF\FF\00\00\00", [9 x i8] c"\00\FE\FF\00\00\00\00\00\00", [9 x i8] c"\FF\FF\00\00\00\00\00\00\00", [9 x i8] c"\FF\FF\FD\FE\FE\FF\FF\FF\00", [9 x i8] zeroinitializer, [9 x i8] c"\00\FF\FD\FE\FE\FF\FF\FF\00"], [16 x [9 x i8]] [[9 x i8] c"\FF\FE\00\01\01\01\01\01\01", [9 x i8] c"\00\FF\01\01\01\01\01\01\01", [9 x i8] c"\00\FE\01\01\01\01\01\01\01", [9 x i8] c"\00\FE\00\01\01\01\01\01\01", [9 x i8] c"\FF\FF\00\01\01\01\01\01\01", [9 x i8] c"\00\00\FF\00\01\01\01\01\01", [9 x i8] c"\FF\FF\01\01\01\01\01\01\01", [9 x i8] c"\00\00\FF\01\01\01\01\01\01", [9 x i8] c"\00\FF\00\01\01\01\01\01\01", [9 x i8] c"\FF\FF\FF\01\01\01\01\01\01", [9 x i8] c"\00\00\00\00\01\01\01\01\01", [9 x i8] c"\00\00\00\01\01\01\01\01\01", [9 x i8] c"\00\FF\FF\01\01\01\01\01\01", [9 x i8] c"\00\01\00\01\01\01\01\01\01", [9 x i8] c"\00\FD\FE\01\01\01\01\02\02", [9 x i8] c"\FD\FB\FD\02\02\02\02\02\02"], [16 x [9 x i8]] [[9 x i8] c"\FF\FE\00\02\02\02\02\02\02", [9 x i8] c"\FF\FE\00\01\02\02\02\02\02", [9 x i8] c"\00\FE\00\02\02\02\02\02\02", [9 x i8] c"\FF\00\01\02\02\02\02\02\02", [9 x i8] c"\00\00\01\02\02\02\02\02\02", [9 x i8] c"\00\FE\00\01\02\02\02\02\02", [9 x i8] c"\00\FF\01\02\02\02\02\02\02", [9 x i8] c"\FF\FF\00\02\02\02\02\02\02", [9 x i8] c"\FF\FF\00\01\02\02\02\02\02", [9 x i8] c"\FF\FE\FF\02\02\02\02\02\02", [9 x i8] c"\00\FF\00\02\02\02\02\02\02", [9 x i8] c"\01\01\00\01\02\02\02\02\02", [9 x i8] c"\00\01\02\02\02\02\02\02\02", [9 x i8] c"\01\00\00\01\02\02\02\02\02", [9 x i8] c"\00\00\00\01\02\02\02\02\02", [9 x i8] c"\FF\FF\FF\01\02\02\02\02\02"], [16 x [9 x i8]] [[9 x i8] c"\00\01\02\03\03\03\03\03\03", [9 x i8] c"\01\01\02\03\03\03\03\03\03", [9 x i8] c"\FF\00\01\02\03\03\03\03\03", [9 x i8] c"\00\00\02\03\03\03\03\03\03", [9 x i8] c"\FF\00\01\03\03\03\03\03\03", [9 x i8] c"\00\00\01\03\03\03\03\03\03", [9 x i8] c"\01\02\03\03\03\03\03\03\03", [9 x i8] c"\01\02\02\03\03\03\03\03\03", [9 x i8] c"\00\01\01\03\03\03\03\03\03", [9 x i8] c"\00\00\01\02\03\03\03\03\03", [9 x i8] c"\FF\01\02\03\03\03\03\03\03", [9 x i8] c"\FF\00\02\03\03\03\03\03\03", [9 x i8] c"\02\02\03\03\03\03\03\03\03", [9 x i8] c"\01\01\03\03\03\03\03\03\03", [9 x i8] c"\00\02\03\03\03\03\03\03\03", [9 x i8] c"\00\01\01\02\03\03\03\03\03"], [16 x [9 x i8]] [[9 x i8] c"\00\01\02\03\04\04\04\04\04", [9 x i8] c"\01\02\03\04\04\04\04\04\04", [9 x i8] c"\00\00\02\03\04\04\04\04\04", [9 x i8] c"\01\01\02\04\04\04\04\04\04", [9 x i8] c"\00\01\02\04\04\04\04\04\04", [9 x i8] c"\FF\00\01\03\04\04\04\04\04", [9 x i8] c"\00\00\01\03\04\04\04\04\04", [9 x i8] c"\01\01\02\03\04\04\04\04\04", [9 x i8] c"\00\01\01\03\04\04\04\04\04", [9 x i8] c"\02\02\03\04\04\04\04\04\04", [9 x i8] c"\01\01\03\04\04\04\04\04\04", [9 x i8] c"\01\02\02\04\04\04\04\04\04", [9 x i8] c"\FF\00\02\03\04\04\04\04\04", [9 x i8] c"\00\01\03\04\04\04\04\04\04", [9 x i8] c"\01\02\02\03\04\04\04\04\04", [9 x i8] c"\00\02\03\04\04\04\04\04\04"], [16 x [9 x i8]] [[9 x i8] c"\01\02\03\04\05\05\05\05\05", [9 x i8] c"\00\01\02\03\04\05\05\05\05", [9 x i8] c"\00\01\02\03\05\05\05\05\05", [9 x i8] c"\01\01\03\04\05\05\05\05\05", [9 x i8] c"\01\01\02\04\05\05\05\05\05", [9 x i8] c"\01\02\02\04\05\05\05\05\05", [9 x i8] c"\01\01\02\03\05\05\05\05\05", [9 x i8] c"\02\02\03\04\05\05\05\05\05", [9 x i8] c"\00\01\02\04\05\05\05\05\05", [9 x i8] c"\02\02\03\05\05\05\05\05\05", [9 x i8] c"\01\02\03\05\05\05\05\05\05", [9 x i8] c"\00\01\03\04\05\05\05\05\05", [9 x i8] c"\01\02\02\03\05\05\05\05\05", [9 x i8] c"\02\03\04\05\05\05\05\05\05", [9 x i8] c"\00\02\03\04\05\05\05\05\05", [9 x i8] c"\01\01\01\03\04\05\05\05\05"], [16 x [9 x i8]] [[9 x i8] c"\01\02\03\04\05\05\05\06\06", [9 x i8] c"\01\02\03\04\05\06\06\06\06", [9 x i8] c"\02\03\04\05\06\06\06\06\06", [9 x i8] c"\01\02\03\04\06\06\06\06\06", [9 x i8] c"\02\02\03\04\05\05\05\06\06", [9 x i8] c"\01\02\03\04\05\05\06\06\06", [9 x i8] c"\02\02\03\04\06\06\06\06\06", [9 x i8] c"\02\02\03\04\05\06\06\06\06", [9 x i8] c"\02\02\04\05\06\06\06\06\06", [9 x i8] c"\02\02\03\05\06\06\06\06\06", [9 x i8] c"\01\02\03\05\06\06\06\06\06", [9 x i8] c"\02\03\03\05\06\06\06\06\06", [9 x i8] c"\01\02\04\05\06\06\06\06\06", [9 x i8] c"\02\02\03\04\05\05\06\06\06", [9 x i8] c"\02\03\03\04\06\06\06\06\06", [9 x i8] c"\01\03\04\05\06\06\06\06\06"]], align 16
@.str.5 = private unnamed_addr constant [38 x i8] c"Invalid number of transmitted units!\0A\00", align 1
@atrac3p_qu_num_to_seg = internal constant [32 x i8] c"\00\00\00\01\01\01\02\02\02\03\03\03\04\04\04\05\05\05\06\06\06\07\07\07\08\08\08\09\09\09\09\09", align 16
@atrac3p_wl_weights = internal constant [6 x [32 x i8]] [[32 x i8] c"\05\05\04\04\03\03\02\02\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"\05\05\05\04\04\04\03\03\03\02\02\02\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"\06\05\05\05\04\04\04\04\03\03\03\03\02\02\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\00", [32 x i8] c"\05\05\04\04\03\03\02\02\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"\05\05\05\04\04\04\03\03\03\02\02\02\01\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"\06\05\05\05\05\05\05\05\03\03\03\03\02\02\01\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 16
@.str.6 = private unnamed_addr constant [40 x i8] c"WL index out of range: pos=%d, val=%d!\0A\00", align 1
@atrac3p_sf_shapes = internal constant [64 x [9 x i8]] [[9 x i8] c"\FD\FE\FF\00\03\05\06\08(", [9 x i8] c"\FD\FE\00\01\07\09\0B\0D\14", [9 x i8] c"\FF\00\00\01\06\08\0A\0D)", [9 x i8] c"\00\00\00\02\05\05\06\08\0E", [9 x i8] c"\00\00\00\02\06\07\08\0B/", [9 x i8] c"\00\00\01\02\05\07\08\0A ", [9 x i8] c"\00\00\01\03\08\0A\0C\0E/", [9 x i8] c"\00\00\02\04\09\0A\0C\0E(", [9 x i8] c"\00\00\03\05\09\0A\0C\0E\16", [9 x i8] c"\00\01\03\05\0A\0E\12\16\1F", [9 x i8] c"\00\02\05\06\0A\0A\0A\0C.", [9 x i8] c"\00\02\05\07\0C\0E\0F\12,", [9 x i8] c"\01\01\04\05\07\07\08\09\0F", [9 x i8] c"\01\02\02\02\04\05\07\09\1A", [9 x i8] c"\01\02\02\03\06\07\07\08/", [9 x i8] c"\01\02\02\03\06\08\0A\0D\16", [9 x i8] c"\01\03\04\07\0D\11\15\18)", [9 x i8] c"\01\04\00\04\0A\0C\0D\0E\11", [9 x i8] c"\02\03\03\03\06\08\0A\0D0", [9 x i8] c"\02\03\03\04\09\0C\0E\11/", [9 x i8] c"\02\03\03\05\0A\0C\0E\11\19", [9 x i8] c"\02\03\05\07\08\09\09\09\0D", [9 x i8] c"\02\03\05\09\10\15\19\1C!", [9 x i8] c"\02\04\05\08\0C\0E\11\13\1A", [9 x i8] c"\02\04\06\08\0C\0D\0D\0F\14", [9 x i8] c"\02\04\07\0C\14\1A\1E #", [9 x i8] c"\03\03\05\06\0C\0E\10\13\22", [9 x i8] c"\03\04\04\05\07\09\0A\0B0", [9 x i8] c"\03\04\05\06\08\09\0A\0B\10", [9 x i8] c"\03\05\05\05\07\09\0A\0D#", [9 x i8] c"\03\05\05\07\0A\0C\0D\0F1", [9 x i8] c"\03\05\07\07\08\07\09\0C\15", [9 x i8] c"\03\05\07\08\0C\0E\0F\0F\18", [9 x i8] c"\03\05\07\0A\10\15\18\1B,", [9 x i8] c"\03\05\08\0E\15\1A\1C\1D*", [9 x i8] c"\03\06\0A\0D\12\13\14\16\1B", [9 x i8] c"\03\06\0B\10\18\1B\1C\1D\1F", [9 x i8] c"\04\05\04\03\04\06\08\0B\12", [9 x i8] c"\04\06\05\06\09\0A\0C\0E\14", [9 x i8] c"\04\06\07\06\06\06\07\08.", [9 x i8] c"\04\06\07\09\0D\10\12\140", [9 x i8] c"\04\06\07\09\0E\11\14\17\1F", [9 x i8] c"\04\06\09\0B\0E\0F\0F\11\15", [9 x i8] c"\04\08\0D\14\1B #$&", [9 x i8] c"\05\06\06\04\05\06\07\06\06", [9 x i8] c"\05\07\07\08\09\09\0A\0C1", [9 x i8] c"\05\08\09\09\0A\0B\0C\0D*", [9 x i8] c"\05\08\0A\0C\0F\10\11\13*", [9 x i8] c"\05\08\0C\11\1A\1F !,", [9 x i8] c"\05\09\0D\10\14\16\17\17#", [9 x i8] c"\06\08\08\07\06\05\06\08\0F", [9 x i8] c"\06\08\08\08\09\0A\0C\10\18", [9 x i8] c"\06\08\08\09\0A\0A\0B\0B\0D", [9 x i8] c"\06\08\0A\0D\13\15\18\1A ", [9 x i8] c"\06\09\0A\0B\0D\0D\0E\101", [9 x i8] c"\07\09\09\0A\0D\0E\10\13\1B", [9 x i8] c"\07\0A\0C\0D\10\10\11\11\1B", [9 x i8] c"\07\0A\0C\0E\11\13\14\160", [9 x i8] c"\08\09\0A\09\0A\0B\0B\0B\13", [9 x i8] c"\08\0B\0C\0C\0D\0D\0D\0D\11", [9 x i8] c"\08\0B\0D\0E\10\11\13\14\1B", [9 x i8] c"\08\0C\11\16\1A\1C\1D\1E!", [9 x i8] c"\0A\0E\10\13\15\16\16\18\1C", [9 x i8] c"\0A\0F\11\12\15\16\17\19+"], align 16
@.str.7 = private unnamed_addr constant [32 x i8] c"SF mode 1: invalid parameters!\0A\00", align 1
@atrac3p_sf_weights = internal constant [2 x [32 x i8]] [[32 x i8] c"\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\09\09\0A\0A\0B\0B\0C\0C\0D\0D\0E\0E\0F\0F", [32 x i8] c"\00\00\00\01\01\01\02\02\02\03\03\03\04\04\04\05\05\05\06\06\06\07\07\07\08\08\08\09\09\09\0A\0A"], align 16
@.str.8 = private unnamed_addr constant [40 x i8] c"SF index out of range: pos=%d, val=%d!\0A\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"Invalid number of code table indexes: %d!\0A\00", align 1
@ff_atrac3p_qu_to_spec_pos = external constant [33 x i16], align 16
@atrac3p_ct_restricted_to_full = internal constant [2 x [7 x [4 x i8]]] [[7 x [4 x i8]] [[4 x i8] c"\00\05\04\01", [4 x i8] c"\00\01\02\03", [4 x i8] c"\03\00\04\02", [4 x i8] c"\04\00\01\02", [4 x i8] c"\01\00\04\03", [4 x i8] c"\03\00\02\01", [4 x i8] c"\00\03\01\02"], [7 x [4 x i8]] [[4 x i8] c"\04\00\01\02", [4 x i8] c"\00\03\02\01", [4 x i8] c"\00\01\02\03", [4 x i8] c"\00\01\02\04", [4 x i8] c"\00\01\02\03", [4 x i8] c"\01\04\02\00", [4 x i8] c"\00\01\02\03"]], align 16
@atrac3p_subband_to_num_powgrps = internal constant [16 x i32] [i32 1, i32 2, i32 2, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 5], align 16
@.str.10 = private unnamed_addr constant [53 x i8] c"Invalid gain location: ch=%d, sb=%d, pos=%d, val=%d\0A\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"GHA amplitude mode 0\00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"Too many tones: %d (max. 48), frame: %d!\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define void @ff_atrac3p_init_vlcs() #0 !dbg !903 {
entry:
  %i = alloca i32, align 4
  %wl_vlc_offs = alloca i32, align 4
  %ct_vlc_offs = alloca i32, align 4
  %sf_vlc_offs = alloca i32, align 4
  %tab_offset = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1323, metadata !1324), !dbg !1325
  call void @llvm.dbg.declare(metadata i32* %wl_vlc_offs, metadata !1326, metadata !1324), !dbg !1327
  call void @llvm.dbg.declare(metadata i32* %ct_vlc_offs, metadata !1328, metadata !1324), !dbg !1329
  call void @llvm.dbg.declare(metadata i32* %sf_vlc_offs, metadata !1330, metadata !1324), !dbg !1331
  call void @llvm.dbg.declare(metadata i32* %tab_offset, metadata !1332, metadata !1324), !dbg !1333
  store i32 0, i32* %i, align 4, !dbg !1334
  store i32 0, i32* %wl_vlc_offs, align 4, !dbg !1336
  store i32 2508, i32* %ct_vlc_offs, align 4, !dbg !1337
  br label %for.cond, !dbg !1338

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1339
  %cmp = icmp slt i32 %0, 4, !dbg !1342
  br i1 %cmp, label %for.body, label %for.end, !dbg !1343

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %wl_vlc_offs, align 4, !dbg !1344
  %idxprom = sext i32 %1 to i64, !dbg !1346
  %arrayidx = getelementptr inbounds [154276 x [2 x i16]], [154276 x [2 x i16]]* @tables_data, i64 0, i64 %idxprom, !dbg !1346
  %2 = load i32, i32* %i, align 4, !dbg !1347
  %idxprom1 = sext i32 %2 to i64, !dbg !1348
  %arrayidx2 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom1, !dbg !1348
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx2, i32 0, i32 1, !dbg !1349
  store [2 x i16]* %arrayidx, [2 x i16]** %table, align 8, !dbg !1350
  %3 = load i32, i32* %i, align 4, !dbg !1351
  %idxprom3 = sext i32 %3 to i64, !dbg !1352
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* @ff_atrac3p_init_vlcs.wl_nb_bits, i64 0, i64 %idxprom3, !dbg !1352
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !1352
  %shl = shl i32 1, %4, !dbg !1353
  %5 = load i32, i32* %i, align 4, !dbg !1354
  %idxprom5 = sext i32 %5 to i64, !dbg !1355
  %arrayidx6 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom5, !dbg !1355
  %table_allocated = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx6, i32 0, i32 3, !dbg !1356
  store i32 %shl, i32* %table_allocated, align 4, !dbg !1357
  %6 = load i32, i32* %ct_vlc_offs, align 4, !dbg !1358
  %idxprom7 = sext i32 %6 to i64, !dbg !1359
  %arrayidx8 = getelementptr inbounds [154276 x [2 x i16]], [154276 x [2 x i16]]* @tables_data, i64 0, i64 %idxprom7, !dbg !1359
  %7 = load i32, i32* %i, align 4, !dbg !1360
  %idxprom9 = sext i32 %7 to i64, !dbg !1361
  %arrayidx10 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 %idxprom9, !dbg !1361
  %table11 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx10, i32 0, i32 1, !dbg !1362
  store [2 x i16]* %arrayidx8, [2 x i16]** %table11, align 8, !dbg !1363
  %8 = load i32, i32* %i, align 4, !dbg !1364
  %idxprom12 = sext i32 %8 to i64, !dbg !1365
  %arrayidx13 = getelementptr inbounds [4 x i32], [4 x i32]* @ff_atrac3p_init_vlcs.ct_nb_bits, i64 0, i64 %idxprom12, !dbg !1365
  %9 = load i32, i32* %arrayidx13, align 4, !dbg !1365
  %shl14 = shl i32 1, %9, !dbg !1366
  %10 = load i32, i32* %i, align 4, !dbg !1367
  %idxprom15 = sext i32 %10 to i64, !dbg !1368
  %arrayidx16 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 %idxprom15, !dbg !1368
  %table_allocated17 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx16, i32 0, i32 3, !dbg !1369
  store i32 %shl14, i32* %table_allocated17, align 4, !dbg !1370
  %11 = load i32, i32* %i, align 4, !dbg !1371
  %idxprom18 = sext i32 %11 to i64, !dbg !1372
  %arrayidx19 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom18, !dbg !1372
  %12 = load i32, i32* %i, align 4, !dbg !1373
  %idxprom20 = sext i32 %12 to i64, !dbg !1374
  %arrayidx21 = getelementptr inbounds [4 x i32], [4 x i32]* @ff_atrac3p_init_vlcs.wl_nb_bits, i64 0, i64 %idxprom20, !dbg !1374
  %13 = load i32, i32* %arrayidx21, align 4, !dbg !1374
  %14 = load i32, i32* %i, align 4, !dbg !1375
  %idxprom22 = sext i32 %14 to i64, !dbg !1376
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* @ff_atrac3p_init_vlcs.wl_nb_codes, i64 0, i64 %idxprom22, !dbg !1376
  %15 = load i32, i32* %arrayidx23, align 4, !dbg !1376
  %16 = load i32, i32* %i, align 4, !dbg !1377
  %idxprom24 = sext i32 %16 to i64, !dbg !1378
  %arrayidx25 = getelementptr inbounds [4 x i8*], [4 x i8*]* @ff_atrac3p_init_vlcs.wl_bits, i64 0, i64 %idxprom24, !dbg !1378
  %17 = load i8*, i8** %arrayidx25, align 8, !dbg !1378
  %18 = load i32, i32* %i, align 4, !dbg !1379
  %idxprom26 = sext i32 %18 to i64, !dbg !1380
  %arrayidx27 = getelementptr inbounds [4 x i8*], [4 x i8*]* @ff_atrac3p_init_vlcs.wl_codes, i64 0, i64 %idxprom26, !dbg !1380
  %19 = load i8*, i8** %arrayidx27, align 8, !dbg !1380
  %20 = load i32, i32* %i, align 4, !dbg !1381
  %idxprom28 = sext i32 %20 to i64, !dbg !1382
  %arrayidx29 = getelementptr inbounds [4 x i8*], [4 x i8*]* @ff_atrac3p_init_vlcs.wl_xlats, i64 0, i64 %idxprom28, !dbg !1382
  %21 = load i8*, i8** %arrayidx29, align 8, !dbg !1382
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx19, i32 %13, i32 %15, i8* %17, i32 1, i32 1, i8* %19, i32 1, i32 1, i8* %21, i32 1, i32 1, i32 4), !dbg !1383
  %22 = load i32, i32* %i, align 4, !dbg !1384
  %idxprom30 = sext i32 %22 to i64, !dbg !1385
  %arrayidx31 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 %idxprom30, !dbg !1385
  %23 = load i32, i32* %i, align 4, !dbg !1386
  %idxprom32 = sext i32 %23 to i64, !dbg !1387
  %arrayidx33 = getelementptr inbounds [4 x i32], [4 x i32]* @ff_atrac3p_init_vlcs.ct_nb_bits, i64 0, i64 %idxprom32, !dbg !1387
  %24 = load i32, i32* %arrayidx33, align 4, !dbg !1387
  %25 = load i32, i32* %i, align 4, !dbg !1388
  %idxprom34 = sext i32 %25 to i64, !dbg !1389
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* @ff_atrac3p_init_vlcs.ct_nb_codes, i64 0, i64 %idxprom34, !dbg !1389
  %26 = load i32, i32* %arrayidx35, align 4, !dbg !1389
  %27 = load i32, i32* %i, align 4, !dbg !1390
  %idxprom36 = sext i32 %27 to i64, !dbg !1391
  %arrayidx37 = getelementptr inbounds [4 x i8*], [4 x i8*]* @ff_atrac3p_init_vlcs.ct_bits, i64 0, i64 %idxprom36, !dbg !1391
  %28 = load i8*, i8** %arrayidx37, align 8, !dbg !1391
  %29 = load i32, i32* %i, align 4, !dbg !1392
  %idxprom38 = sext i32 %29 to i64, !dbg !1393
  %arrayidx39 = getelementptr inbounds [4 x i8*], [4 x i8*]* @ff_atrac3p_init_vlcs.ct_codes, i64 0, i64 %idxprom38, !dbg !1393
  %30 = load i8*, i8** %arrayidx39, align 8, !dbg !1393
  %31 = load i32, i32* %i, align 4, !dbg !1394
  %idxprom40 = sext i32 %31 to i64, !dbg !1395
  %arrayidx41 = getelementptr inbounds [4 x i8*], [4 x i8*]* @ff_atrac3p_init_vlcs.ct_xlats, i64 0, i64 %idxprom40, !dbg !1395
  %32 = load i8*, i8** %arrayidx41, align 8, !dbg !1395
  %call42 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx31, i32 %24, i32 %26, i8* %28, i32 1, i32 1, i8* %30, i32 1, i32 1, i8* %32, i32 1, i32 1, i32 4), !dbg !1396
  %33 = load i32, i32* %i, align 4, !dbg !1397
  %idxprom43 = sext i32 %33 to i64, !dbg !1398
  %arrayidx44 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom43, !dbg !1398
  %table_allocated45 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx44, i32 0, i32 3, !dbg !1399
  %34 = load i32, i32* %table_allocated45, align 4, !dbg !1399
  %35 = load i32, i32* %wl_vlc_offs, align 4, !dbg !1400
  %add = add nsw i32 %35, %34, !dbg !1400
  store i32 %add, i32* %wl_vlc_offs, align 4, !dbg !1400
  %36 = load i32, i32* %i, align 4, !dbg !1401
  %idxprom46 = sext i32 %36 to i64, !dbg !1402
  %arrayidx47 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 %idxprom46, !dbg !1402
  %table_allocated48 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx47, i32 0, i32 3, !dbg !1403
  %37 = load i32, i32* %table_allocated48, align 4, !dbg !1403
  %38 = load i32, i32* %ct_vlc_offs, align 4, !dbg !1404
  %add49 = add nsw i32 %38, %37, !dbg !1404
  store i32 %add49, i32* %ct_vlc_offs, align 4, !dbg !1404
  br label %for.inc, !dbg !1405

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !1406
  %inc = add nsw i32 %39, 1, !dbg !1406
  store i32 %inc, i32* %i, align 4, !dbg !1406
  br label %for.cond, !dbg !1408, !llvm.loop !1409

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1411
  store i32 76, i32* %sf_vlc_offs, align 4, !dbg !1413
  br label %for.cond50, !dbg !1414

for.cond50:                                       ; preds = %for.inc81, %for.end
  %40 = load i32, i32* %i, align 4, !dbg !1415
  %cmp51 = icmp slt i32 %40, 8, !dbg !1418
  br i1 %cmp51, label %for.body52, label %for.end83, !dbg !1419

for.body52:                                       ; preds = %for.cond50
  %41 = load i32, i32* %sf_vlc_offs, align 4, !dbg !1420
  %idxprom53 = sext i32 %41 to i64, !dbg !1422
  %arrayidx54 = getelementptr inbounds [154276 x [2 x i16]], [154276 x [2 x i16]]* @tables_data, i64 0, i64 %idxprom53, !dbg !1422
  %42 = load i32, i32* %i, align 4, !dbg !1423
  %idxprom55 = sext i32 %42 to i64, !dbg !1424
  %arrayidx56 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom55, !dbg !1424
  %table57 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx56, i32 0, i32 1, !dbg !1425
  store [2 x i16]* %arrayidx54, [2 x i16]** %table57, align 8, !dbg !1426
  %43 = load i32, i32* %i, align 4, !dbg !1427
  %idxprom58 = sext i32 %43 to i64, !dbg !1428
  %arrayidx59 = getelementptr inbounds [8 x i32], [8 x i32]* @ff_atrac3p_init_vlcs.sf_nb_bits, i64 0, i64 %idxprom58, !dbg !1428
  %44 = load i32, i32* %arrayidx59, align 4, !dbg !1428
  %shl60 = shl i32 1, %44, !dbg !1429
  %45 = load i32, i32* %i, align 4, !dbg !1430
  %idxprom61 = sext i32 %45 to i64, !dbg !1431
  %arrayidx62 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom61, !dbg !1431
  %table_allocated63 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx62, i32 0, i32 3, !dbg !1432
  store i32 %shl60, i32* %table_allocated63, align 4, !dbg !1433
  %46 = load i32, i32* %i, align 4, !dbg !1434
  %idxprom64 = sext i32 %46 to i64, !dbg !1435
  %arrayidx65 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom64, !dbg !1435
  %47 = load i32, i32* %i, align 4, !dbg !1436
  %idxprom66 = sext i32 %47 to i64, !dbg !1437
  %arrayidx67 = getelementptr inbounds [8 x i32], [8 x i32]* @ff_atrac3p_init_vlcs.sf_nb_bits, i64 0, i64 %idxprom66, !dbg !1437
  %48 = load i32, i32* %arrayidx67, align 4, !dbg !1437
  %49 = load i32, i32* %i, align 4, !dbg !1438
  %idxprom68 = sext i32 %49 to i64, !dbg !1439
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* @ff_atrac3p_init_vlcs.sf_nb_codes, i64 0, i64 %idxprom68, !dbg !1439
  %50 = load i32, i32* %arrayidx69, align 4, !dbg !1439
  %51 = load i32, i32* %i, align 4, !dbg !1440
  %idxprom70 = sext i32 %51 to i64, !dbg !1441
  %arrayidx71 = getelementptr inbounds [8 x i8*], [8 x i8*]* @ff_atrac3p_init_vlcs.sf_bits, i64 0, i64 %idxprom70, !dbg !1441
  %52 = load i8*, i8** %arrayidx71, align 8, !dbg !1441
  %53 = load i32, i32* %i, align 4, !dbg !1442
  %idxprom72 = sext i32 %53 to i64, !dbg !1443
  %arrayidx73 = getelementptr inbounds [8 x i16*], [8 x i16*]* @ff_atrac3p_init_vlcs.sf_codes, i64 0, i64 %idxprom72, !dbg !1443
  %54 = load i16*, i16** %arrayidx73, align 8, !dbg !1443
  %55 = bitcast i16* %54 to i8*, !dbg !1443
  %56 = load i32, i32* %i, align 4, !dbg !1444
  %idxprom74 = sext i32 %56 to i64, !dbg !1445
  %arrayidx75 = getelementptr inbounds [8 x i8*], [8 x i8*]* @ff_atrac3p_init_vlcs.sf_xlats, i64 0, i64 %idxprom74, !dbg !1445
  %57 = load i8*, i8** %arrayidx75, align 8, !dbg !1445
  %call76 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx65, i32 %48, i32 %50, i8* %52, i32 1, i32 1, i8* %55, i32 2, i32 2, i8* %57, i32 1, i32 1, i32 4), !dbg !1446
  %58 = load i32, i32* %i, align 4, !dbg !1447
  %idxprom77 = sext i32 %58 to i64, !dbg !1448
  %arrayidx78 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom77, !dbg !1448
  %table_allocated79 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx78, i32 0, i32 3, !dbg !1449
  %59 = load i32, i32* %table_allocated79, align 4, !dbg !1449
  %60 = load i32, i32* %sf_vlc_offs, align 4, !dbg !1450
  %add80 = add nsw i32 %60, %59, !dbg !1450
  store i32 %add80, i32* %sf_vlc_offs, align 4, !dbg !1450
  br label %for.inc81, !dbg !1451

for.inc81:                                        ; preds = %for.body52
  %61 = load i32, i32* %i, align 4, !dbg !1452
  %inc82 = add nsw i32 %61, 1, !dbg !1452
  store i32 %inc82, i32* %i, align 4, !dbg !1452
  br label %for.cond50, !dbg !1454, !llvm.loop !1455

for.end83:                                        ; preds = %for.cond50
  store i32 2564, i32* %tab_offset, align 4, !dbg !1457
  store i32 0, i32* %i, align 4, !dbg !1458
  br label %for.cond84, !dbg !1460

for.cond84:                                       ; preds = %for.inc99, %for.end83
  %62 = load i32, i32* %i, align 4, !dbg !1461
  %cmp85 = icmp slt i32 %62, 112, !dbg !1464
  br i1 %cmp85, label %for.body86, label %for.end101, !dbg !1465

for.body86:                                       ; preds = %for.cond84
  %63 = load i32, i32* %i, align 4, !dbg !1466
  %idxprom87 = sext i32 %63 to i64, !dbg !1469
  %arrayidx88 = getelementptr inbounds [112 x %struct.Atrac3pSpecCodeTab], [112 x %struct.Atrac3pSpecCodeTab]* @atrac3p_spectra_tabs, i64 0, i64 %idxprom87, !dbg !1469
  %cb = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %arrayidx88, i32 0, i32 5, !dbg !1470
  %64 = load i8*, i8** %cb, align 8, !dbg !1470
  %tobool = icmp ne i8* %64, null, !dbg !1469
  br i1 %tobool, label %if.then, label %if.else, !dbg !1471

if.then:                                          ; preds = %for.body86
  %65 = load i32, i32* %i, align 4, !dbg !1472
  %idxprom89 = sext i32 %65 to i64, !dbg !1473
  %arrayidx90 = getelementptr inbounds [112 x %struct.Atrac3pSpecCodeTab], [112 x %struct.Atrac3pSpecCodeTab]* @atrac3p_spectra_tabs, i64 0, i64 %idxprom89, !dbg !1473
  %cb91 = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %arrayidx90, i32 0, i32 5, !dbg !1474
  %66 = load i8*, i8** %cb91, align 8, !dbg !1474
  %67 = load i32, i32* %i, align 4, !dbg !1475
  %idxprom92 = sext i32 %67 to i64, !dbg !1476
  %arrayidx93 = getelementptr inbounds [112 x %struct.Atrac3pSpecCodeTab], [112 x %struct.Atrac3pSpecCodeTab]* @atrac3p_spectra_tabs, i64 0, i64 %idxprom92, !dbg !1476
  %xlat = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %arrayidx93, i32 0, i32 6, !dbg !1477
  %68 = load i8*, i8** %xlat, align 8, !dbg !1477
  %69 = load i32, i32* %i, align 4, !dbg !1478
  %idxprom94 = sext i32 %69 to i64, !dbg !1479
  %arrayidx95 = getelementptr inbounds [112 x %struct.VLC], [112 x %struct.VLC]* @spec_vlc_tabs, i64 0, i64 %idxprom94, !dbg !1479
  call void @build_canonical_huff(i8* %66, i8* %68, i32* %tab_offset, %struct.VLC* %arrayidx95), !dbg !1480
  br label %if.end, !dbg !1480

if.else:                                          ; preds = %for.body86
  %70 = load i32, i32* %i, align 4, !dbg !1481
  %idxprom96 = sext i32 %70 to i64, !dbg !1482
  %arrayidx97 = getelementptr inbounds [112 x %struct.VLC], [112 x %struct.VLC]* @spec_vlc_tabs, i64 0, i64 %idxprom96, !dbg !1482
  %table98 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx97, i32 0, i32 1, !dbg !1483
  store [2 x i16]* null, [2 x i16]** %table98, align 8, !dbg !1484
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc99, !dbg !1485

for.inc99:                                        ; preds = %if.end
  %71 = load i32, i32* %i, align 4, !dbg !1486
  %inc100 = add nsw i32 %71, 1, !dbg !1486
  store i32 %inc100, i32* %i, align 4, !dbg !1486
  br label %for.cond84, !dbg !1488, !llvm.loop !1489

for.end101:                                       ; preds = %for.cond84
  store i32 0, i32* %i, align 4, !dbg !1491
  br label %for.cond102, !dbg !1493

for.cond102:                                      ; preds = %for.inc111, %for.end101
  %72 = load i32, i32* %i, align 4, !dbg !1494
  %cmp103 = icmp slt i32 %72, 11, !dbg !1497
  br i1 %cmp103, label %for.body104, label %for.end113, !dbg !1498

for.body104:                                      ; preds = %for.cond102
  %73 = load i32, i32* %i, align 4, !dbg !1499
  %idxprom105 = sext i32 %73 to i64, !dbg !1500
  %arrayidx106 = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_atrac3p_init_vlcs.gain_cbs, i64 0, i64 %idxprom105, !dbg !1500
  %74 = load i8*, i8** %arrayidx106, align 8, !dbg !1500
  %75 = load i32, i32* %i, align 4, !dbg !1501
  %idxprom107 = sext i32 %75 to i64, !dbg !1502
  %arrayidx108 = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_atrac3p_init_vlcs.gain_xlats, i64 0, i64 %idxprom107, !dbg !1502
  %76 = load i8*, i8** %arrayidx108, align 8, !dbg !1502
  %77 = load i32, i32* %i, align 4, !dbg !1503
  %idxprom109 = sext i32 %77 to i64, !dbg !1504
  %arrayidx110 = getelementptr inbounds [11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 %idxprom109, !dbg !1504
  call void @build_canonical_huff(i8* %74, i8* %76, i32* %tab_offset, %struct.VLC* %arrayidx110), !dbg !1505
  br label %for.inc111, !dbg !1505

for.inc111:                                       ; preds = %for.body104
  %78 = load i32, i32* %i, align 4, !dbg !1506
  %inc112 = add nsw i32 %78, 1, !dbg !1506
  store i32 %inc112, i32* %i, align 4, !dbg !1506
  br label %for.cond102, !dbg !1508, !llvm.loop !1509

for.end113:                                       ; preds = %for.cond102
  store i32 0, i32* %i, align 4, !dbg !1511
  br label %for.cond114, !dbg !1513

for.cond114:                                      ; preds = %for.inc123, %for.end113
  %79 = load i32, i32* %i, align 4, !dbg !1514
  %cmp115 = icmp slt i32 %79, 7, !dbg !1517
  br i1 %cmp115, label %for.body116, label %for.end125, !dbg !1518

for.body116:                                      ; preds = %for.cond114
  %80 = load i32, i32* %i, align 4, !dbg !1519
  %idxprom117 = sext i32 %80 to i64, !dbg !1520
  %arrayidx118 = getelementptr inbounds [7 x i8*], [7 x i8*]* @ff_atrac3p_init_vlcs.tone_cbs, i64 0, i64 %idxprom117, !dbg !1520
  %81 = load i8*, i8** %arrayidx118, align 8, !dbg !1520
  %82 = load i32, i32* %i, align 4, !dbg !1521
  %idxprom119 = sext i32 %82 to i64, !dbg !1522
  %arrayidx120 = getelementptr inbounds [7 x i8*], [7 x i8*]* @ff_atrac3p_init_vlcs.tone_xlats, i64 0, i64 %idxprom119, !dbg !1522
  %83 = load i8*, i8** %arrayidx120, align 8, !dbg !1522
  %84 = load i32, i32* %i, align 4, !dbg !1523
  %idxprom121 = sext i32 %84 to i64, !dbg !1524
  %arrayidx122 = getelementptr inbounds [7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 %idxprom121, !dbg !1524
  call void @build_canonical_huff(i8* %81, i8* %83, i32* %tab_offset, %struct.VLC* %arrayidx122), !dbg !1525
  br label %for.inc123, !dbg !1525

for.inc123:                                       ; preds = %for.body116
  %85 = load i32, i32* %i, align 4, !dbg !1526
  %inc124 = add nsw i32 %85, 1, !dbg !1526
  store i32 %inc124, i32* %i, align 4, !dbg !1526
  br label %for.cond114, !dbg !1528, !llvm.loop !1529

for.end125:                                       ; preds = %for.cond114
  ret void, !dbg !1531
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #2

; Function Attrs: cold nounwind optsize uwtable
define internal void @build_canonical_huff(i8* %cb, i8* %xlat, i32* %tab_offset, %struct.VLC* %out_vlc) #0 !dbg !1532 {
entry:
  %cb.addr = alloca i8*, align 8
  %xlat.addr = alloca i8*, align 8
  %tab_offset.addr = alloca i32*, align 8
  %out_vlc.addr = alloca %struct.VLC*, align 8
  %i = alloca i32, align 4
  %b = alloca i32, align 4
  %codes = alloca [256 x i16], align 16
  %bits = alloca [256 x i8], align 16
  %code = alloca i32, align 4
  %index = alloca i32, align 4
  %min_len = alloca i32, align 4
  %max_len = alloca i32, align 4
  store i8* %cb, i8** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cb.addr, metadata !1537, metadata !1324), !dbg !1538
  store i8* %xlat, i8** %xlat.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %xlat.addr, metadata !1539, metadata !1324), !dbg !1540
  store i32* %tab_offset, i32** %tab_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %tab_offset.addr, metadata !1541, metadata !1324), !dbg !1542
  store %struct.VLC* %out_vlc, %struct.VLC** %out_vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %out_vlc.addr, metadata !1543, metadata !1324), !dbg !1544
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1545, metadata !1324), !dbg !1546
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1547, metadata !1324), !dbg !1548
  call void @llvm.dbg.declare(metadata [256 x i16]* %codes, metadata !1549, metadata !1324), !dbg !1551
  call void @llvm.dbg.declare(metadata [256 x i8]* %bits, metadata !1552, metadata !1324), !dbg !1554
  call void @llvm.dbg.declare(metadata i32* %code, metadata !1555, metadata !1324), !dbg !1556
  store i32 0, i32* %code, align 4, !dbg !1556
  call void @llvm.dbg.declare(metadata i32* %index, metadata !1557, metadata !1324), !dbg !1558
  store i32 0, i32* %index, align 4, !dbg !1558
  call void @llvm.dbg.declare(metadata i32* %min_len, metadata !1559, metadata !1324), !dbg !1560
  %0 = load i8*, i8** %cb.addr, align 8, !dbg !1561
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i32 1, !dbg !1561
  store i8* %incdec.ptr, i8** %cb.addr, align 8, !dbg !1561
  %1 = load i8, i8* %0, align 1, !dbg !1562
  %conv = zext i8 %1 to i32, !dbg !1562
  store i32 %conv, i32* %min_len, align 4, !dbg !1560
  call void @llvm.dbg.declare(metadata i32* %max_len, metadata !1563, metadata !1324), !dbg !1564
  %2 = load i8*, i8** %cb.addr, align 8, !dbg !1565
  %incdec.ptr1 = getelementptr inbounds i8, i8* %2, i32 1, !dbg !1565
  store i8* %incdec.ptr1, i8** %cb.addr, align 8, !dbg !1565
  %3 = load i8, i8* %2, align 1, !dbg !1566
  %conv2 = zext i8 %3 to i32, !dbg !1566
  store i32 %conv2, i32* %max_len, align 4, !dbg !1564
  %4 = load i32, i32* %min_len, align 4, !dbg !1567
  store i32 %4, i32* %b, align 4, !dbg !1569
  br label %for.cond, !dbg !1570

for.cond:                                         ; preds = %for.inc17, %entry
  %5 = load i32, i32* %b, align 4, !dbg !1571
  %6 = load i32, i32* %max_len, align 4, !dbg !1574
  %cmp = icmp sle i32 %5, %6, !dbg !1575
  br i1 %cmp, label %for.body, label %for.end19, !dbg !1576

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %cb.addr, align 8, !dbg !1577
  %incdec.ptr4 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !1577
  store i8* %incdec.ptr4, i8** %cb.addr, align 8, !dbg !1577
  %8 = load i8, i8* %7, align 1, !dbg !1580
  %conv5 = zext i8 %8 to i32, !dbg !1580
  store i32 %conv5, i32* %i, align 4, !dbg !1581
  br label %for.cond6, !dbg !1582

for.cond6:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !1583
  %cmp7 = icmp sgt i32 %9, 0, !dbg !1586
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !1587

for.body9:                                        ; preds = %for.cond6
  br label %do.body, !dbg !1588, !llvm.loop !1590

do.body:                                          ; preds = %for.body9
  %10 = load i32, i32* %index, align 4, !dbg !1591
  %cmp10 = icmp slt i32 %10, 256, !dbg !1595
  br i1 %cmp10, label %if.end, label %if.then, !dbg !1596

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 63), !dbg !1597
  call void @abort() #8, !dbg !1600
  unreachable, !dbg !1602

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !1603

do.end:                                           ; preds = %if.end
  %11 = load i32, i32* %b, align 4, !dbg !1605
  %conv12 = trunc i32 %11 to i8, !dbg !1605
  %12 = load i32, i32* %index, align 4, !dbg !1606
  %idxprom = sext i32 %12 to i64, !dbg !1607
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i64 0, i64 %idxprom, !dbg !1607
  store i8 %conv12, i8* %arrayidx, align 1, !dbg !1608
  %13 = load i32, i32* %code, align 4, !dbg !1609
  %inc = add i32 %13, 1, !dbg !1609
  store i32 %inc, i32* %code, align 4, !dbg !1609
  %conv13 = trunc i32 %13 to i16, !dbg !1610
  %14 = load i32, i32* %index, align 4, !dbg !1611
  %idxprom14 = sext i32 %14 to i64, !dbg !1612
  %arrayidx15 = getelementptr inbounds [256 x i16], [256 x i16]* %codes, i64 0, i64 %idxprom14, !dbg !1612
  store i16 %conv13, i16* %arrayidx15, align 2, !dbg !1613
  %15 = load i32, i32* %index, align 4, !dbg !1614
  %inc16 = add nsw i32 %15, 1, !dbg !1614
  store i32 %inc16, i32* %index, align 4, !dbg !1614
  br label %for.inc, !dbg !1615

for.inc:                                          ; preds = %do.end
  %16 = load i32, i32* %i, align 4, !dbg !1616
  %dec = add nsw i32 %16, -1, !dbg !1616
  store i32 %dec, i32* %i, align 4, !dbg !1616
  br label %for.cond6, !dbg !1618, !llvm.loop !1619

for.end:                                          ; preds = %for.cond6
  %17 = load i32, i32* %code, align 4, !dbg !1621
  %shl = shl i32 %17, 1, !dbg !1621
  store i32 %shl, i32* %code, align 4, !dbg !1621
  br label %for.inc17, !dbg !1622

for.inc17:                                        ; preds = %for.end
  %18 = load i32, i32* %b, align 4, !dbg !1623
  %inc18 = add nsw i32 %18, 1, !dbg !1623
  store i32 %inc18, i32* %b, align 4, !dbg !1623
  br label %for.cond, !dbg !1625, !llvm.loop !1626

for.end19:                                        ; preds = %for.cond
  %19 = load i32*, i32** %tab_offset.addr, align 8, !dbg !1628
  %20 = load i32, i32* %19, align 4, !dbg !1629
  %idxprom20 = sext i32 %20 to i64, !dbg !1630
  %arrayidx21 = getelementptr inbounds [154276 x [2 x i16]], [154276 x [2 x i16]]* @tables_data, i64 0, i64 %idxprom20, !dbg !1630
  %21 = load %struct.VLC*, %struct.VLC** %out_vlc.addr, align 8, !dbg !1631
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %21, i32 0, i32 1, !dbg !1632
  store [2 x i16]* %arrayidx21, [2 x i16]** %table, align 8, !dbg !1633
  %22 = load i32, i32* %max_len, align 4, !dbg !1634
  %shl22 = shl i32 1, %22, !dbg !1635
  %23 = load %struct.VLC*, %struct.VLC** %out_vlc.addr, align 8, !dbg !1636
  %table_allocated = getelementptr inbounds %struct.VLC, %struct.VLC* %23, i32 0, i32 3, !dbg !1637
  store i32 %shl22, i32* %table_allocated, align 4, !dbg !1638
  %24 = load %struct.VLC*, %struct.VLC** %out_vlc.addr, align 8, !dbg !1639
  %25 = load i32, i32* %max_len, align 4, !dbg !1640
  %26 = load i32, i32* %index, align 4, !dbg !1641
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %bits, i32 0, i32 0, !dbg !1642
  %arraydecay23 = getelementptr inbounds [256 x i16], [256 x i16]* %codes, i32 0, i32 0, !dbg !1643
  %27 = bitcast i16* %arraydecay23 to i8*, !dbg !1643
  %28 = load i8*, i8** %xlat.addr, align 8, !dbg !1644
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %24, i32 %25, i32 %26, i8* %arraydecay, i32 1, i32 1, i8* %27, i32 2, i32 2, i8* %28, i32 1, i32 1, i32 4), !dbg !1645
  %29 = load i32, i32* %max_len, align 4, !dbg !1646
  %shl24 = shl i32 1, %29, !dbg !1647
  %30 = load i32*, i32** %tab_offset.addr, align 8, !dbg !1648
  %31 = load i32, i32* %30, align 4, !dbg !1649
  %add = add nsw i32 %31, %shl24, !dbg !1649
  store i32 %add, i32* %30, align 4, !dbg !1649
  ret void, !dbg !1650
}

; Function Attrs: nounwind uwtable
define i32 @ff_atrac3p_decode_channel_unit(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels, %struct.AVCodecContext* %avctx) #3 !dbg !1651 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2362, metadata !1324), !dbg !2363
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !2364, metadata !1324), !dbg !2365
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !2366, metadata !1324), !dbg !2367
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2368, metadata !1324), !dbg !2369
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2370, metadata !1324), !dbg !2371
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2372
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 5), !dbg !2373
  %add = add i32 %call, 1, !dbg !2374
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2375
  %num_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 1, !dbg !2376
  store i32 %add, i32* %num_quant_units, align 4, !dbg !2377
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2378
  %num_quant_units1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 1, !dbg !2380
  %3 = load i32, i32* %num_quant_units1, align 4, !dbg !2380
  %cmp = icmp sgt i32 %3, 28, !dbg !2381
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2382

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2383
  %num_quant_units2 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 1, !dbg !2385
  %5 = load i32, i32* %num_quant_units2, align 4, !dbg !2385
  %cmp3 = icmp slt i32 %5, 32, !dbg !2386
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2387

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2388
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !2388
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2390
  %num_quant_units4 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 1, !dbg !2391
  %9 = load i32, i32* %num_quant_units4, align 4, !dbg !2391
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i32 0, i32 0), i32 %9), !dbg !2392
  store i32 -1094995529, i32* %retval, align 4, !dbg !2393
  br label %return, !dbg !2393

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2394
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !2395
  %11 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2396
  %mute_flag = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %11, i32 0, i32 5, !dbg !2397
  store i32 %call5, i32* %mute_flag, align 4, !dbg !2398
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2399
  %13 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2401
  %14 = load i32, i32* %num_channels.addr, align 4, !dbg !2402
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2403
  %call6 = call i32 @decode_quant_wordlen(%struct.GetBitContext* %12, %struct.Atrac3pChanUnitCtx* %13, i32 %14, %struct.AVCodecContext* %15), !dbg !2404
  store i32 %call6, i32* %ret, align 4, !dbg !2405
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2406
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2407

if.then8:                                         ; preds = %if.end
  %16 = load i32, i32* %ret, align 4, !dbg !2408
  store i32 %16, i32* %retval, align 4, !dbg !2409
  br label %return, !dbg !2409

if.end9:                                          ; preds = %if.end
  %17 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2410
  %num_quant_units10 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %17, i32 0, i32 1, !dbg !2411
  %18 = load i32, i32* %num_quant_units10, align 4, !dbg !2411
  %sub = sub nsw i32 %18, 1, !dbg !2412
  %idxprom = sext i32 %sub to i64, !dbg !2413
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @atrac3p_qu_to_subband, i64 0, i64 %idxprom, !dbg !2413
  %19 = load i8, i8* %arrayidx, align 1, !dbg !2413
  %conv = zext i8 %19 to i32, !dbg !2413
  %add11 = add nsw i32 %conv, 1, !dbg !2414
  %20 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2415
  %num_subbands = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %20, i32 0, i32 2, !dbg !2416
  store i32 %add11, i32* %num_subbands, align 8, !dbg !2417
  %21 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2418
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %21, i32 0, i32 3, !dbg !2419
  %22 = load i32, i32* %used_quant_units, align 4, !dbg !2419
  %tobool = icmp ne i32 %22, 0, !dbg !2418
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2418

cond.true:                                        ; preds = %if.end9
  %23 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2420
  %used_quant_units12 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %23, i32 0, i32 3, !dbg !2421
  %24 = load i32, i32* %used_quant_units12, align 4, !dbg !2421
  %sub13 = sub nsw i32 %24, 1, !dbg !2422
  %idxprom14 = sext i32 %sub13 to i64, !dbg !2423
  %arrayidx15 = getelementptr inbounds [32 x i8], [32 x i8]* @atrac3p_qu_to_subband, i64 0, i64 %idxprom14, !dbg !2423
  %25 = load i8, i8* %arrayidx15, align 1, !dbg !2423
  %conv16 = zext i8 %25 to i32, !dbg !2423
  %add17 = add nsw i32 %conv16, 1, !dbg !2424
  br label %cond.end, !dbg !2425

cond.false:                                       ; preds = %if.end9
  br label %cond.end, !dbg !2427

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add17, %cond.true ], [ 0, %cond.false ], !dbg !2429
  %26 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2431
  %num_coded_subbands = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %26, i32 0, i32 4, !dbg !2432
  store i32 %cond, i32* %num_coded_subbands, align 16, !dbg !2433
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2434
  %28 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2436
  %29 = load i32, i32* %num_channels.addr, align 4, !dbg !2437
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2438
  %call18 = call i32 @decode_scale_factors(%struct.GetBitContext* %27, %struct.Atrac3pChanUnitCtx* %28, i32 %29, %struct.AVCodecContext* %30), !dbg !2439
  store i32 %call18, i32* %ret, align 4, !dbg !2440
  %cmp19 = icmp slt i32 %call18, 0, !dbg !2441
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2442

if.then21:                                        ; preds = %cond.end
  %31 = load i32, i32* %ret, align 4, !dbg !2443
  store i32 %31, i32* %retval, align 4, !dbg !2444
  br label %return, !dbg !2444

if.end22:                                         ; preds = %cond.end
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2445
  %33 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2447
  %34 = load i32, i32* %num_channels.addr, align 4, !dbg !2448
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2449
  %call23 = call i32 @decode_code_table_indexes(%struct.GetBitContext* %32, %struct.Atrac3pChanUnitCtx* %33, i32 %34, %struct.AVCodecContext* %35), !dbg !2450
  store i32 %call23, i32* %ret, align 4, !dbg !2451
  %cmp24 = icmp slt i32 %call23, 0, !dbg !2452
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !2453

if.then26:                                        ; preds = %if.end22
  %36 = load i32, i32* %ret, align 4, !dbg !2454
  store i32 %36, i32* %retval, align 4, !dbg !2455
  br label %return, !dbg !2455

if.end27:                                         ; preds = %if.end22
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2456
  %38 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2457
  %39 = load i32, i32* %num_channels.addr, align 4, !dbg !2458
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2459
  call void @decode_spectrum(%struct.GetBitContext* %37, %struct.Atrac3pChanUnitCtx* %38, i32 %39, %struct.AVCodecContext* %40), !dbg !2460
  %41 = load i32, i32* %num_channels.addr, align 4, !dbg !2461
  %cmp28 = icmp eq i32 %41, 2, !dbg !2463
  br i1 %cmp28, label %if.then30, label %if.end36, !dbg !2464

if.then30:                                        ; preds = %if.end27
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2465
  %43 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2467
  %swap_channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %43, i32 0, i32 10, !dbg !2468
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %swap_channels, i32 0, i32 0, !dbg !2467
  %44 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2469
  %num_coded_subbands31 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %44, i32 0, i32 4, !dbg !2470
  %45 = load i32, i32* %num_coded_subbands31, align 16, !dbg !2470
  %call32 = call i32 @get_subband_flags(%struct.GetBitContext* %42, i8* %arraydecay, i32 %45), !dbg !2471
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2472
  %47 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2473
  %negate_coeffs = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %47, i32 0, i32 11, !dbg !2474
  %arraydecay33 = getelementptr inbounds [16 x i8], [16 x i8]* %negate_coeffs, i32 0, i32 0, !dbg !2473
  %48 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2475
  %num_coded_subbands34 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %48, i32 0, i32 4, !dbg !2476
  %49 = load i32, i32* %num_coded_subbands34, align 16, !dbg !2476
  %call35 = call i32 @get_subband_flags(%struct.GetBitContext* %46, i8* %arraydecay33, i32 %49), !dbg !2477
  br label %if.end36, !dbg !2478

if.end36:                                         ; preds = %if.then30, %if.end27
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2479
  %51 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2480
  %52 = load i32, i32* %num_channels.addr, align 4, !dbg !2481
  call void @decode_window_shape(%struct.GetBitContext* %50, %struct.Atrac3pChanUnitCtx* %51, i32 %52), !dbg !2482
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2483
  %54 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2485
  %55 = load i32, i32* %num_channels.addr, align 4, !dbg !2486
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2487
  %call37 = call i32 @decode_gainc_data(%struct.GetBitContext* %53, %struct.Atrac3pChanUnitCtx* %54, i32 %55, %struct.AVCodecContext* %56), !dbg !2488
  store i32 %call37, i32* %ret, align 4, !dbg !2489
  %cmp38 = icmp slt i32 %call37, 0, !dbg !2490
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !2491

if.then40:                                        ; preds = %if.end36
  %57 = load i32, i32* %ret, align 4, !dbg !2492
  store i32 %57, i32* %retval, align 4, !dbg !2493
  br label %return, !dbg !2493

if.end41:                                         ; preds = %if.end36
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2494
  %59 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2496
  %60 = load i32, i32* %num_channels.addr, align 4, !dbg !2497
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2498
  %call42 = call i32 @decode_tones_info(%struct.GetBitContext* %58, %struct.Atrac3pChanUnitCtx* %59, i32 %60, %struct.AVCodecContext* %61), !dbg !2499
  store i32 %call42, i32* %ret, align 4, !dbg !2500
  %cmp43 = icmp slt i32 %call42, 0, !dbg !2501
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !2502

if.then45:                                        ; preds = %if.end41
  %62 = load i32, i32* %ret, align 4, !dbg !2503
  store i32 %62, i32* %retval, align 4, !dbg !2504
  br label %return, !dbg !2504

if.end46:                                         ; preds = %if.end41
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2505
  %call47 = call i32 @get_bits1(%struct.GetBitContext* %63), !dbg !2506
  %64 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2507
  %noise_present = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %64, i32 0, i32 7, !dbg !2508
  store i32 %call47, i32* %noise_present, align 4, !dbg !2509
  %65 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2510
  %noise_present48 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %65, i32 0, i32 7, !dbg !2512
  %66 = load i32, i32* %noise_present48, align 4, !dbg !2512
  %tobool49 = icmp ne i32 %66, 0, !dbg !2510
  br i1 %tobool49, label %if.then50, label %if.end53, !dbg !2513

if.then50:                                        ; preds = %if.end46
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2514
  %call51 = call i32 @get_bits(%struct.GetBitContext* %67, i32 4), !dbg !2516
  %68 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2517
  %noise_level_index = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %68, i32 0, i32 8, !dbg !2518
  store i32 %call51, i32* %noise_level_index, align 32, !dbg !2519
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2520
  %call52 = call i32 @get_bits(%struct.GetBitContext* %69, i32 4), !dbg !2521
  %70 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2522
  %noise_table_index = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %70, i32 0, i32 9, !dbg !2523
  store i32 %call52, i32* %noise_table_index, align 4, !dbg !2524
  br label %if.end53, !dbg !2525

if.end53:                                         ; preds = %if.then50, %if.end46
  store i32 0, i32* %retval, align 4, !dbg !2526
  br label %return, !dbg !2526

return:                                           ; preds = %if.end53, %if.then45, %if.then40, %if.then26, %if.then21, %if.then8, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !2527
  ret i32 %71, !dbg !2527
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !2528 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2531, metadata !1324), !dbg !2536
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2538, metadata !1324), !dbg !2539
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2540, metadata !1324), !dbg !2541
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2542, metadata !1324), !dbg !2543
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !2544, metadata !1324), !dbg !2545
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2546
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2547
  %1 = load i32, i32* %index, align 8, !dbg !2547
  store i32 %1, i32* %re_index, align 4, !dbg !2545
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !2548, metadata !1324), !dbg !2549
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !2550, metadata !1324), !dbg !2551
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2552
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !2553
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2553
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !2551
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2554
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !2555
  %5 = load i8*, i8** %buffer, align 8, !dbg !2555
  %6 = load i32, i32* %re_index, align 4, !dbg !2556
  %shr = lshr i32 %6, 3, !dbg !2557
  %idx.ext = zext i32 %shr to i64, !dbg !2558
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !2558
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2559
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !2559
  %8 = load i32, i32* %l, align 1, !dbg !2559
  store i32 %8, i32* %x.addr.i, align 4, !dbg !2560
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !2561
  %shl.i = shl i32 %9, 8, !dbg !2562
  %and.i = and i32 %shl.i, 65280, !dbg !2563
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !2564
  %shr.i = lshr i32 %10, 8, !dbg !2565
  %and1.i = and i32 %shr.i, 255, !dbg !2566
  %or.i = or i32 %and.i, %and1.i, !dbg !2567
  %shl2.i = shl i32 %or.i, 16, !dbg !2568
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !2569
  %shr3.i = lshr i32 %11, 16, !dbg !2570
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2571
  %and5.i = and i32 %shl4.i, 65280, !dbg !2572
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !2573
  %shr6.i = lshr i32 %12, 16, !dbg !2574
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2575
  %and8.i = and i32 %shr7.i, 255, !dbg !2576
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2577
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2578
  %13 = load i32, i32* %re_index, align 4, !dbg !2579
  %and = and i32 %13, 7, !dbg !2580
  %shl = shl i32 %or10.i, %and, !dbg !2581
  store i32 %shl, i32* %re_cache, align 4, !dbg !2582
  %14 = load i32, i32* %re_cache, align 4, !dbg !2583
  %15 = load i32, i32* %n.addr, align 4, !dbg !2584
  %conv = trunc i32 %15 to i8, !dbg !2584
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !2585
  store i32 %call4, i32* %tmp, align 4, !dbg !2586
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !2587
  %17 = load i32, i32* %re_index, align 4, !dbg !2588
  %18 = load i32, i32* %n.addr, align 4, !dbg !2589
  %add = add i32 %17, %18, !dbg !2590
  %cmp = icmp ugt i32 %16, %add, !dbg !2591
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2592

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !2593
  %20 = load i32, i32* %n.addr, align 4, !dbg !2595
  %add6 = add i32 %19, %20, !dbg !2596
  br label %cond.end, !dbg !2597

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !2598
  br label %cond.end, !dbg !2600

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !2601
  store i32 %cond, i32* %re_index, align 4, !dbg !2603
  %22 = load i32, i32* %re_index, align 4, !dbg !2604
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2605
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !2606
  store i32 %22, i32* %index7, align 8, !dbg !2607
  %24 = load i32, i32* %tmp, align 4, !dbg !2608
  ret i32 %24, !dbg !2609
}

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !2610 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2613, metadata !1324), !dbg !2614
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2615, metadata !1324), !dbg !2616
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2617
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2618
  %1 = load i32, i32* %index1, align 8, !dbg !2618
  store i32 %1, i32* %index, align 4, !dbg !2616
  call void @llvm.dbg.declare(metadata i8* %result, metadata !2619, metadata !1324), !dbg !2620
  %2 = load i32, i32* %index, align 4, !dbg !2621
  %shr = lshr i32 %2, 3, !dbg !2622
  %idxprom = zext i32 %shr to i64, !dbg !2623
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2623
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !2624
  %4 = load i8*, i8** %buffer, align 8, !dbg !2624
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !2623
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2623
  store i8 %5, i8* %result, align 1, !dbg !2620
  %6 = load i32, i32* %index, align 4, !dbg !2625
  %and = and i32 %6, 7, !dbg !2626
  %7 = load i8, i8* %result, align 1, !dbg !2627
  %conv = zext i8 %7 to i32, !dbg !2627
  %shl = shl i32 %conv, %and, !dbg !2627
  %conv2 = trunc i32 %shl to i8, !dbg !2627
  store i8 %conv2, i8* %result, align 1, !dbg !2627
  %8 = load i8, i8* %result, align 1, !dbg !2628
  %conv3 = zext i8 %8 to i32, !dbg !2628
  %shr4 = ashr i32 %conv3, 7, !dbg !2628
  %conv5 = trunc i32 %shr4 to i8, !dbg !2628
  store i8 %conv5, i8* %result, align 1, !dbg !2628
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2629
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !2631
  %10 = load i32, i32* %index6, align 8, !dbg !2631
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2632
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !2633
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2633
  %cmp = icmp slt i32 %10, %12, !dbg !2634
  br i1 %cmp, label %if.then, label %if.end, !dbg !2635

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !2636
  %inc = add i32 %13, 1, !dbg !2636
  store i32 %inc, i32* %index, align 4, !dbg !2636
  br label %if.end, !dbg !2637

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !2638
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2639
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !2640
  store i32 %14, i32* %index8, align 8, !dbg !2641
  %16 = load i8, i8* %result, align 1, !dbg !2642
  %conv9 = zext i8 %16 to i32, !dbg !2642
  ret i32 %conv9, !dbg !2643
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_quant_wordlen(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels, %struct.AVCodecContext* %avctx) #3 !dbg !2644 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ch_num = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2645, metadata !1324), !dbg !2646
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !2647, metadata !1324), !dbg !2648
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !2649, metadata !1324), !dbg !2650
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2651, metadata !1324), !dbg !2652
  call void @llvm.dbg.declare(metadata i32* %ch_num, metadata !2653, metadata !1324), !dbg !2654
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2655, metadata !1324), !dbg !2656
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2657, metadata !1324), !dbg !2658
  store i32 0, i32* %ch_num, align 4, !dbg !2659
  br label %for.cond, !dbg !2661

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch_num, align 4, !dbg !2662
  %1 = load i32, i32* %num_channels.addr, align 4, !dbg !2665
  %cmp = icmp slt i32 %0, %1, !dbg !2666
  br i1 %cmp, label %for.body, label %for.end, !dbg !2667

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ch_num, align 4, !dbg !2668
  %idxprom = sext i32 %2 to i64, !dbg !2670
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2670
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !2671
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !2670
  %qu_wordlen = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 5, !dbg !2672
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen, i32 0, i32 0, !dbg !2673
  %4 = bitcast i32* %arraydecay to i8*, !dbg !2673
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 128, i32 4, i1 false), !dbg !2673
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2674
  %6 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2676
  %7 = load i32, i32* %ch_num, align 4, !dbg !2677
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2678
  %call = call i32 @decode_channel_wordlen(%struct.GetBitContext* %5, %struct.Atrac3pChanUnitCtx* %6, i32 %7, %struct.AVCodecContext* %8), !dbg !2679
  store i32 %call, i32* %ret, align 4, !dbg !2680
  %cmp1 = icmp slt i32 %call, 0, !dbg !2681
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2682

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %ret, align 4, !dbg !2683
  store i32 %9, i32* %retval, align 4, !dbg !2684
  br label %return, !dbg !2684

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2685

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %ch_num, align 4, !dbg !2686
  %inc = add nsw i32 %10, 1, !dbg !2686
  store i32 %inc, i32* %ch_num, align 4, !dbg !2686
  br label %for.cond, !dbg !2688, !llvm.loop !2689

for.end:                                          ; preds = %for.cond
  %11 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2691
  %num_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %11, i32 0, i32 1, !dbg !2693
  %12 = load i32, i32* %num_quant_units, align 4, !dbg !2693
  %sub = sub nsw i32 %12, 1, !dbg !2694
  store i32 %sub, i32* %i, align 4, !dbg !2695
  br label %for.cond2, !dbg !2696

for.cond2:                                        ; preds = %for.inc19, %for.end
  %13 = load i32, i32* %i, align 4, !dbg !2697
  %cmp3 = icmp sge i32 %13, 0, !dbg !2700
  br i1 %cmp3, label %for.body4, label %for.end20, !dbg !2701

for.body4:                                        ; preds = %for.cond2
  %14 = load i32, i32* %i, align 4, !dbg !2702
  %idxprom5 = sext i32 %14 to i64, !dbg !2704
  %15 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2704
  %channels6 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %15, i32 0, i32 12, !dbg !2705
  %arrayidx7 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels6, i64 0, i64 0, !dbg !2704
  %qu_wordlen8 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx7, i32 0, i32 5, !dbg !2706
  %arrayidx9 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen8, i64 0, i64 %idxprom5, !dbg !2704
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !2704
  %tobool = icmp ne i32 %16, 0, !dbg !2704
  br i1 %tobool, label %if.then17, label %lor.lhs.false, !dbg !2707

lor.lhs.false:                                    ; preds = %for.body4
  %17 = load i32, i32* %num_channels.addr, align 4, !dbg !2708
  %cmp10 = icmp eq i32 %17, 2, !dbg !2709
  br i1 %cmp10, label %land.lhs.true, label %if.end18, !dbg !2710

land.lhs.true:                                    ; preds = %lor.lhs.false
  %18 = load i32, i32* %i, align 4, !dbg !2711
  %idxprom11 = sext i32 %18 to i64, !dbg !2713
  %19 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2713
  %channels12 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %19, i32 0, i32 12, !dbg !2714
  %arrayidx13 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels12, i64 0, i64 1, !dbg !2713
  %qu_wordlen14 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx13, i32 0, i32 5, !dbg !2715
  %arrayidx15 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen14, i64 0, i64 %idxprom11, !dbg !2713
  %20 = load i32, i32* %arrayidx15, align 4, !dbg !2713
  %tobool16 = icmp ne i32 %20, 0, !dbg !2713
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2716

if.then17:                                        ; preds = %land.lhs.true, %for.body4
  br label %for.end20, !dbg !2717

if.end18:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %for.inc19, !dbg !2718

for.inc19:                                        ; preds = %if.end18
  %21 = load i32, i32* %i, align 4, !dbg !2720
  %dec = add nsw i32 %21, -1, !dbg !2720
  store i32 %dec, i32* %i, align 4, !dbg !2720
  br label %for.cond2, !dbg !2722, !llvm.loop !2723

for.end20:                                        ; preds = %if.then17, %for.cond2
  %22 = load i32, i32* %i, align 4, !dbg !2725
  %add = add nsw i32 %22, 1, !dbg !2726
  %23 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2727
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %23, i32 0, i32 3, !dbg !2728
  store i32 %add, i32* %used_quant_units, align 4, !dbg !2729
  store i32 0, i32* %retval, align 4, !dbg !2730
  br label %return, !dbg !2730

return:                                           ; preds = %for.end20, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !2731
  ret i32 %24, !dbg !2731
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_scale_factors(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels, %struct.AVCodecContext* %avctx) #3 !dbg !2732 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ch_num = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2733, metadata !1324), !dbg !2734
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !2735, metadata !1324), !dbg !2736
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !2737, metadata !1324), !dbg !2738
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2739, metadata !1324), !dbg !2740
  call void @llvm.dbg.declare(metadata i32* %ch_num, metadata !2741, metadata !1324), !dbg !2742
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2743, metadata !1324), !dbg !2744
  %0 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2745
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %0, i32 0, i32 3, !dbg !2747
  %1 = load i32, i32* %used_quant_units, align 4, !dbg !2747
  %tobool = icmp ne i32 %1, 0, !dbg !2745
  br i1 %tobool, label %if.end, label %if.then, !dbg !2748

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2749
  br label %return, !dbg !2749

if.end:                                           ; preds = %entry
  store i32 0, i32* %ch_num, align 4, !dbg !2750
  br label %for.cond, !dbg !2752

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %ch_num, align 4, !dbg !2753
  %3 = load i32, i32* %num_channels.addr, align 4, !dbg !2756
  %cmp = icmp slt i32 %2, %3, !dbg !2757
  br i1 %cmp, label %for.body, label %for.end, !dbg !2758

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %ch_num, align 4, !dbg !2759
  %idxprom = sext i32 %4 to i64, !dbg !2761
  %5 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2761
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %5, i32 0, i32 12, !dbg !2762
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !2761
  %qu_sf_idx = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 6, !dbg !2763
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx, i32 0, i32 0, !dbg !2764
  %6 = bitcast i32* %arraydecay to i8*, !dbg !2764
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 128, i32 4, i1 false), !dbg !2764
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2765
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2767
  %9 = load i32, i32* %ch_num, align 4, !dbg !2768
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2769
  %call = call i32 @decode_channel_sf_idx(%struct.GetBitContext* %7, %struct.Atrac3pChanUnitCtx* %8, i32 %9, %struct.AVCodecContext* %10), !dbg !2770
  store i32 %call, i32* %ret, align 4, !dbg !2771
  %cmp1 = icmp slt i32 %call, 0, !dbg !2772
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2773

if.then2:                                         ; preds = %for.body
  %11 = load i32, i32* %ret, align 4, !dbg !2774
  store i32 %11, i32* %retval, align 4, !dbg !2775
  br label %return, !dbg !2775

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !2776

for.inc:                                          ; preds = %if.end3
  %12 = load i32, i32* %ch_num, align 4, !dbg !2777
  %inc = add nsw i32 %12, 1, !dbg !2777
  store i32 %inc, i32* %ch_num, align 4, !dbg !2777
  br label %for.cond, !dbg !2779, !llvm.loop !2780

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2782
  br label %return, !dbg !2782

return:                                           ; preds = %for.end, %if.then2, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !2783
  ret i32 %13, !dbg !2783
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_code_table_indexes(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels, %struct.AVCodecContext* %avctx) #3 !dbg !2784 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ch_num = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2785, metadata !1324), !dbg !2786
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !2787, metadata !1324), !dbg !2788
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !2789, metadata !1324), !dbg !2790
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2791, metadata !1324), !dbg !2792
  call void @llvm.dbg.declare(metadata i32* %ch_num, metadata !2793, metadata !1324), !dbg !2794
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2795, metadata !1324), !dbg !2796
  %0 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2797
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %0, i32 0, i32 3, !dbg !2799
  %1 = load i32, i32* %used_quant_units, align 4, !dbg !2799
  %tobool = icmp ne i32 %1, 0, !dbg !2797
  br i1 %tobool, label %if.end, label %if.then, !dbg !2800

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2801
  br label %return, !dbg !2801

if.end:                                           ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2802
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !2803
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2804
  %use_full_table = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 6, !dbg !2805
  store i32 %call, i32* %use_full_table, align 8, !dbg !2806
  store i32 0, i32* %ch_num, align 4, !dbg !2807
  br label %for.cond, !dbg !2809

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %ch_num, align 4, !dbg !2810
  %5 = load i32, i32* %num_channels.addr, align 4, !dbg !2813
  %cmp = icmp slt i32 %4, %5, !dbg !2814
  br i1 %cmp, label %for.body, label %for.end, !dbg !2815

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %ch_num, align 4, !dbg !2816
  %idxprom = sext i32 %6 to i64, !dbg !2818
  %7 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2818
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %7, i32 0, i32 12, !dbg !2819
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !2818
  %qu_tab_idx = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 7, !dbg !2820
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx, i32 0, i32 0, !dbg !2821
  %8 = bitcast i32* %arraydecay to i8*, !dbg !2821
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 128, i32 4, i1 false), !dbg !2821
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2822
  %10 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2824
  %11 = load i32, i32* %ch_num, align 4, !dbg !2825
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2826
  %call1 = call i32 @decode_channel_code_tab(%struct.GetBitContext* %9, %struct.Atrac3pChanUnitCtx* %10, i32 %11, %struct.AVCodecContext* %12), !dbg !2827
  store i32 %call1, i32* %ret, align 4, !dbg !2828
  %cmp2 = icmp slt i32 %call1, 0, !dbg !2829
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2830

if.then3:                                         ; preds = %for.body
  %13 = load i32, i32* %ret, align 4, !dbg !2831
  store i32 %13, i32* %retval, align 4, !dbg !2832
  br label %return, !dbg !2832

if.end4:                                          ; preds = %for.body
  br label %for.inc, !dbg !2833

for.inc:                                          ; preds = %if.end4
  %14 = load i32, i32* %ch_num, align 4, !dbg !2834
  %inc = add nsw i32 %14, 1, !dbg !2834
  store i32 %inc, i32* %ch_num, align 4, !dbg !2834
  br label %for.cond, !dbg !2836, !llvm.loop !2837

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2839
  br label %return, !dbg !2839

return:                                           ; preds = %for.end, %if.then3, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !2840
  ret i32 %15, !dbg !2840
}

; Function Attrs: nounwind uwtable
define internal void @decode_spectrum(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels, %struct.AVCodecContext* %avctx) #3 !dbg !2841 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %ch_num = alloca i32, align 4
  %qu = alloca i32, align 4
  %wordlen = alloca i32, align 4
  %codetab = alloca i32, align 4
  %tab_index = alloca i32, align 4
  %num_specs = alloca i32, align 4
  %tab = alloca %struct.Atrac3pSpecCodeTab*, align 8
  %chan = alloca %struct.Atrac3pChanParams*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2844, metadata !1324), !dbg !2845
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !2846, metadata !1324), !dbg !2847
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !2848, metadata !1324), !dbg !2849
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2850, metadata !1324), !dbg !2851
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2852, metadata !1324), !dbg !2853
  call void @llvm.dbg.declare(metadata i32* %ch_num, metadata !2854, metadata !1324), !dbg !2855
  call void @llvm.dbg.declare(metadata i32* %qu, metadata !2856, metadata !1324), !dbg !2857
  call void @llvm.dbg.declare(metadata i32* %wordlen, metadata !2858, metadata !1324), !dbg !2859
  call void @llvm.dbg.declare(metadata i32* %codetab, metadata !2860, metadata !1324), !dbg !2861
  call void @llvm.dbg.declare(metadata i32* %tab_index, metadata !2862, metadata !1324), !dbg !2863
  call void @llvm.dbg.declare(metadata i32* %num_specs, metadata !2864, metadata !1324), !dbg !2865
  call void @llvm.dbg.declare(metadata %struct.Atrac3pSpecCodeTab** %tab, metadata !2866, metadata !1324), !dbg !2868
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan, metadata !2869, metadata !1324), !dbg !2871
  store i32 0, i32* %ch_num, align 4, !dbg !2872
  br label %for.cond, !dbg !2874

for.cond:                                         ; preds = %for.inc96, %entry
  %0 = load i32, i32* %ch_num, align 4, !dbg !2875
  %1 = load i32, i32* %num_channels.addr, align 4, !dbg !2878
  %cmp = icmp slt i32 %0, %1, !dbg !2879
  br i1 %cmp, label %for.body, label %for.end98, !dbg !2880

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ch_num, align 4, !dbg !2881
  %idxprom = sext i32 %2 to i64, !dbg !2883
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2883
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !2884
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !2883
  store %struct.Atrac3pChanParams* %arrayidx, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2885
  %4 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2886
  %spectrum = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %4, i32 0, i32 8, !dbg !2887
  %arraydecay = getelementptr inbounds [2048 x i16], [2048 x i16]* %spectrum, i32 0, i32 0, !dbg !2888
  %5 = bitcast i16* %arraydecay to i8*, !dbg !2888
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 4096, i32 4, i1 false), !dbg !2888
  %6 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2889
  %power_levs = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %6, i32 0, i32 9, !dbg !2890
  %arraydecay1 = getelementptr inbounds [5 x i8], [5 x i8]* %power_levs, i32 0, i32 0, !dbg !2891
  call void @llvm.memset.p0i8.i64(i8* %arraydecay1, i8 15, i64 5, i32 4, i1 false), !dbg !2891
  store i32 0, i32* %qu, align 4, !dbg !2892
  br label %for.cond2, !dbg !2894

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %qu, align 4, !dbg !2895
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2898
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 3, !dbg !2899
  %9 = load i32, i32* %used_quant_units, align 4, !dbg !2899
  %cmp3 = icmp slt i32 %7, %9, !dbg !2900
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !2901

for.body4:                                        ; preds = %for.cond2
  %10 = load i32, i32* %qu, align 4, !dbg !2902
  %add = add nsw i32 %10, 1, !dbg !2904
  %idxprom5 = sext i32 %add to i64, !dbg !2905
  %arrayidx6 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom5, !dbg !2905
  %11 = load i16, i16* %arrayidx6, align 2, !dbg !2905
  %conv = zext i16 %11 to i32, !dbg !2905
  %12 = load i32, i32* %qu, align 4, !dbg !2906
  %idxprom7 = sext i32 %12 to i64, !dbg !2907
  %arrayidx8 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom7, !dbg !2907
  %13 = load i16, i16* %arrayidx8, align 2, !dbg !2907
  %conv9 = zext i16 %13 to i32, !dbg !2907
  %sub = sub nsw i32 %conv, %conv9, !dbg !2908
  store i32 %sub, i32* %num_specs, align 4, !dbg !2909
  %14 = load i32, i32* %qu, align 4, !dbg !2910
  %idxprom10 = sext i32 %14 to i64, !dbg !2911
  %15 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2911
  %qu_wordlen = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %15, i32 0, i32 5, !dbg !2912
  %arrayidx11 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen, i64 0, i64 %idxprom10, !dbg !2911
  %16 = load i32, i32* %arrayidx11, align 4, !dbg !2911
  store i32 %16, i32* %wordlen, align 4, !dbg !2913
  %17 = load i32, i32* %qu, align 4, !dbg !2914
  %idxprom12 = sext i32 %17 to i64, !dbg !2915
  %18 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2915
  %qu_tab_idx = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %18, i32 0, i32 7, !dbg !2916
  %arrayidx13 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx, i64 0, i64 %idxprom12, !dbg !2915
  %19 = load i32, i32* %arrayidx13, align 4, !dbg !2915
  store i32 %19, i32* %codetab, align 4, !dbg !2917
  %20 = load i32, i32* %wordlen, align 4, !dbg !2918
  %tobool = icmp ne i32 %20, 0, !dbg !2918
  br i1 %tobool, label %if.then, label %if.else, !dbg !2920

if.then:                                          ; preds = %for.body4
  %21 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2921
  %use_full_table = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %21, i32 0, i32 6, !dbg !2924
  %22 = load i32, i32* %use_full_table, align 8, !dbg !2924
  %tobool14 = icmp ne i32 %22, 0, !dbg !2921
  br i1 %tobool14, label %if.end, label %if.then15, !dbg !2925

if.then15:                                        ; preds = %if.then
  %23 = load i32, i32* %codetab, align 4, !dbg !2926
  %idxprom16 = sext i32 %23 to i64, !dbg !2927
  %24 = load i32, i32* %wordlen, align 4, !dbg !2928
  %sub17 = sub nsw i32 %24, 1, !dbg !2929
  %idxprom18 = sext i32 %sub17 to i64, !dbg !2927
  %25 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2930
  %table_type = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %25, i32 0, i32 4, !dbg !2931
  %26 = load i32, i32* %table_type, align 8, !dbg !2931
  %idxprom19 = sext i32 %26 to i64, !dbg !2927
  %arrayidx20 = getelementptr inbounds [2 x [7 x [4 x i8]]], [2 x [7 x [4 x i8]]]* @atrac3p_ct_restricted_to_full, i64 0, i64 %idxprom19, !dbg !2927
  %arrayidx21 = getelementptr inbounds [7 x [4 x i8]], [7 x [4 x i8]]* %arrayidx20, i64 0, i64 %idxprom18, !dbg !2927
  %arrayidx22 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx21, i64 0, i64 %idxprom16, !dbg !2927
  %27 = load i8, i8* %arrayidx22, align 1, !dbg !2927
  %conv23 = zext i8 %27 to i32, !dbg !2927
  store i32 %conv23, i32* %codetab, align 4, !dbg !2932
  br label %if.end, !dbg !2933

if.end:                                           ; preds = %if.then15, %if.then
  %28 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2934
  %table_type24 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %28, i32 0, i32 4, !dbg !2935
  %29 = load i32, i32* %table_type24, align 8, !dbg !2935
  %mul = mul nsw i32 %29, 8, !dbg !2936
  %30 = load i32, i32* %codetab, align 4, !dbg !2937
  %add25 = add nsw i32 %mul, %30, !dbg !2938
  %mul26 = mul nsw i32 %add25, 7, !dbg !2939
  %31 = load i32, i32* %wordlen, align 4, !dbg !2940
  %add27 = add nsw i32 %mul26, %31, !dbg !2941
  %sub28 = sub nsw i32 %add27, 1, !dbg !2942
  store i32 %sub28, i32* %tab_index, align 4, !dbg !2943
  %32 = load i32, i32* %tab_index, align 4, !dbg !2944
  %idxprom29 = sext i32 %32 to i64, !dbg !2945
  %arrayidx30 = getelementptr inbounds [112 x %struct.Atrac3pSpecCodeTab], [112 x %struct.Atrac3pSpecCodeTab]* @atrac3p_spectra_tabs, i64 0, i64 %idxprom29, !dbg !2945
  store %struct.Atrac3pSpecCodeTab* %arrayidx30, %struct.Atrac3pSpecCodeTab** %tab, align 8, !dbg !2946
  %33 = load %struct.Atrac3pSpecCodeTab*, %struct.Atrac3pSpecCodeTab** %tab, align 8, !dbg !2947
  %redirect = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %33, i32 0, i32 4, !dbg !2949
  %34 = load i32, i32* %redirect, align 4, !dbg !2949
  %cmp31 = icmp sge i32 %34, 0, !dbg !2950
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !2951

if.then33:                                        ; preds = %if.end
  %35 = load %struct.Atrac3pSpecCodeTab*, %struct.Atrac3pSpecCodeTab** %tab, align 8, !dbg !2952
  %redirect34 = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %35, i32 0, i32 4, !dbg !2953
  %36 = load i32, i32* %redirect34, align 4, !dbg !2953
  store i32 %36, i32* %tab_index, align 4, !dbg !2954
  br label %if.end35, !dbg !2955

if.end35:                                         ; preds = %if.then33, %if.end
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2956
  %38 = load %struct.Atrac3pSpecCodeTab*, %struct.Atrac3pSpecCodeTab** %tab, align 8, !dbg !2957
  %39 = load i32, i32* %tab_index, align 4, !dbg !2958
  %idxprom36 = sext i32 %39 to i64, !dbg !2959
  %arrayidx37 = getelementptr inbounds [112 x %struct.VLC], [112 x %struct.VLC]* @spec_vlc_tabs, i64 0, i64 %idxprom36, !dbg !2959
  %40 = load i32, i32* %qu, align 4, !dbg !2960
  %idxprom38 = sext i32 %40 to i64, !dbg !2961
  %arrayidx39 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom38, !dbg !2961
  %41 = load i16, i16* %arrayidx39, align 2, !dbg !2961
  %idxprom40 = zext i16 %41 to i64, !dbg !2962
  %42 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2962
  %spectrum41 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %42, i32 0, i32 8, !dbg !2963
  %arrayidx42 = getelementptr inbounds [2048 x i16], [2048 x i16]* %spectrum41, i64 0, i64 %idxprom40, !dbg !2962
  %43 = load i32, i32* %num_specs, align 4, !dbg !2964
  call void @decode_qu_spectra(%struct.GetBitContext* %37, %struct.Atrac3pSpecCodeTab* %38, %struct.VLC* %arrayidx37, i16* %arrayidx42, i32 %43), !dbg !2965
  br label %if.end76, !dbg !2966

if.else:                                          ; preds = %for.body4
  %44 = load i32, i32* %ch_num, align 4, !dbg !2967
  %tobool43 = icmp ne i32 %44, 0, !dbg !2967
  br i1 %tobool43, label %land.lhs.true, label %if.end75, !dbg !2970

land.lhs.true:                                    ; preds = %if.else
  %45 = load i32, i32* %qu, align 4, !dbg !2971
  %idxprom44 = sext i32 %45 to i64, !dbg !2973
  %46 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2973
  %channels45 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %46, i32 0, i32 12, !dbg !2974
  %arrayidx46 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels45, i64 0, i64 0, !dbg !2973
  %qu_wordlen47 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx46, i32 0, i32 5, !dbg !2975
  %arrayidx48 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen47, i64 0, i64 %idxprom44, !dbg !2973
  %47 = load i32, i32* %arrayidx48, align 4, !dbg !2973
  %tobool49 = icmp ne i32 %47, 0, !dbg !2973
  br i1 %tobool49, label %land.lhs.true50, label %if.end75, !dbg !2976

land.lhs.true50:                                  ; preds = %land.lhs.true
  %48 = load i32, i32* %codetab, align 4, !dbg !2977
  %tobool51 = icmp ne i32 %48, 0, !dbg !2977
  br i1 %tobool51, label %if.end75, label %if.then52, !dbg !2979

if.then52:                                        ; preds = %land.lhs.true50
  %49 = load i32, i32* %qu, align 4, !dbg !2980
  %idxprom53 = sext i32 %49 to i64, !dbg !2982
  %arrayidx54 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom53, !dbg !2982
  %50 = load i16, i16* %arrayidx54, align 2, !dbg !2982
  %idxprom55 = zext i16 %50 to i64, !dbg !2983
  %51 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2983
  %spectrum56 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %51, i32 0, i32 8, !dbg !2984
  %arrayidx57 = getelementptr inbounds [2048 x i16], [2048 x i16]* %spectrum56, i64 0, i64 %idxprom55, !dbg !2983
  %52 = bitcast i16* %arrayidx57 to i8*, !dbg !2985
  %53 = load i32, i32* %qu, align 4, !dbg !2986
  %idxprom58 = sext i32 %53 to i64, !dbg !2987
  %arrayidx59 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom58, !dbg !2987
  %54 = load i16, i16* %arrayidx59, align 2, !dbg !2987
  %idxprom60 = zext i16 %54 to i64, !dbg !2988
  %55 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2988
  %channels61 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %55, i32 0, i32 12, !dbg !2989
  %arrayidx62 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels61, i64 0, i64 0, !dbg !2988
  %spectrum63 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx62, i32 0, i32 8, !dbg !2990
  %arrayidx64 = getelementptr inbounds [2048 x i16], [2048 x i16]* %spectrum63, i64 0, i64 %idxprom60, !dbg !2988
  %56 = bitcast i16* %arrayidx64 to i8*, !dbg !2985
  %57 = load i32, i32* %num_specs, align 4, !dbg !2991
  %conv65 = sext i32 %57 to i64, !dbg !2991
  %mul66 = mul i64 %conv65, 2, !dbg !2992
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %56, i64 %mul66, i32 2, i1 false), !dbg !2985
  %58 = load i32, i32* %qu, align 4, !dbg !2993
  %idxprom67 = sext i32 %58 to i64, !dbg !2994
  %59 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2994
  %channels68 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %59, i32 0, i32 12, !dbg !2995
  %arrayidx69 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels68, i64 0, i64 0, !dbg !2994
  %qu_wordlen70 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx69, i32 0, i32 5, !dbg !2996
  %arrayidx71 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen70, i64 0, i64 %idxprom67, !dbg !2994
  %60 = load i32, i32* %arrayidx71, align 4, !dbg !2994
  %61 = load i32, i32* %qu, align 4, !dbg !2997
  %idxprom72 = sext i32 %61 to i64, !dbg !2998
  %62 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !2998
  %qu_wordlen73 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %62, i32 0, i32 5, !dbg !2999
  %arrayidx74 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen73, i64 0, i64 %idxprom72, !dbg !2998
  store i32 %60, i32* %arrayidx74, align 4, !dbg !3000
  br label %if.end75, !dbg !3001

if.end75:                                         ; preds = %if.then52, %land.lhs.true50, %land.lhs.true, %if.else
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end35
  br label %for.inc, !dbg !3002

for.inc:                                          ; preds = %if.end76
  %63 = load i32, i32* %qu, align 4, !dbg !3003
  %inc = add nsw i32 %63, 1, !dbg !3003
  store i32 %inc, i32* %qu, align 4, !dbg !3003
  br label %for.cond2, !dbg !3005, !llvm.loop !3006

for.end:                                          ; preds = %for.cond2
  %64 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3008
  %used_quant_units77 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %64, i32 0, i32 3, !dbg !3010
  %65 = load i32, i32* %used_quant_units77, align 4, !dbg !3010
  %cmp78 = icmp sgt i32 %65, 2, !dbg !3011
  br i1 %cmp78, label %if.then80, label %if.end95, !dbg !3012

if.then80:                                        ; preds = %for.end
  %66 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3013
  %num_coded_subbands = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %66, i32 0, i32 4, !dbg !3015
  %67 = load i32, i32* %num_coded_subbands, align 16, !dbg !3015
  %sub81 = sub nsw i32 %67, 1, !dbg !3016
  %idxprom82 = sext i32 %sub81 to i64, !dbg !3017
  %arrayidx83 = getelementptr inbounds [16 x i32], [16 x i32]* @atrac3p_subband_to_num_powgrps, i64 0, i64 %idxprom82, !dbg !3017
  %68 = load i32, i32* %arrayidx83, align 4, !dbg !3017
  store i32 %68, i32* %num_specs, align 4, !dbg !3018
  store i32 0, i32* %i, align 4, !dbg !3019
  br label %for.cond84, !dbg !3021

for.cond84:                                       ; preds = %for.inc92, %if.then80
  %69 = load i32, i32* %i, align 4, !dbg !3022
  %70 = load i32, i32* %num_specs, align 4, !dbg !3025
  %cmp85 = icmp slt i32 %69, %70, !dbg !3026
  br i1 %cmp85, label %for.body87, label %for.end94, !dbg !3027

for.body87:                                       ; preds = %for.cond84
  %71 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3028
  %call = call i32 @get_bits(%struct.GetBitContext* %71, i32 4), !dbg !3029
  %conv88 = trunc i32 %call to i8, !dbg !3029
  %72 = load i32, i32* %i, align 4, !dbg !3030
  %idxprom89 = sext i32 %72 to i64, !dbg !3031
  %73 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !3031
  %power_levs90 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %73, i32 0, i32 9, !dbg !3032
  %arrayidx91 = getelementptr inbounds [5 x i8], [5 x i8]* %power_levs90, i64 0, i64 %idxprom89, !dbg !3031
  store i8 %conv88, i8* %arrayidx91, align 1, !dbg !3033
  br label %for.inc92, !dbg !3031

for.inc92:                                        ; preds = %for.body87
  %74 = load i32, i32* %i, align 4, !dbg !3034
  %inc93 = add nsw i32 %74, 1, !dbg !3034
  store i32 %inc93, i32* %i, align 4, !dbg !3034
  br label %for.cond84, !dbg !3036, !llvm.loop !3037

for.end94:                                        ; preds = %for.cond84
  br label %if.end95, !dbg !3039

if.end95:                                         ; preds = %for.end94, %for.end
  br label %for.inc96, !dbg !3040

for.inc96:                                        ; preds = %if.end95
  %75 = load i32, i32* %ch_num, align 4, !dbg !3041
  %inc97 = add nsw i32 %75, 1, !dbg !3041
  store i32 %inc97, i32* %ch_num, align 4, !dbg !3041
  br label %for.cond, !dbg !3043, !llvm.loop !3044

for.end98:                                        ; preds = %for.cond
  ret void, !dbg !3046
}

; Function Attrs: nounwind uwtable
define internal i32 @get_subband_flags(%struct.GetBitContext* %gb, i8* %out, i32 %num_flags) #3 !dbg !3047 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %out.addr = alloca i8*, align 8
  %num_flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3050, metadata !1324), !dbg !3051
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !3052, metadata !1324), !dbg !3053
  store i32 %num_flags, i32* %num_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_flags.addr, metadata !3054, metadata !1324), !dbg !3055
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3056, metadata !1324), !dbg !3057
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3058, metadata !1324), !dbg !3059
  %0 = load i8*, i8** %out.addr, align 8, !dbg !3060
  %1 = load i32, i32* %num_flags.addr, align 4, !dbg !3061
  %conv = sext i32 %1 to i64, !dbg !3061
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 %conv, i32 1, i1 false), !dbg !3062
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3063
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !3064
  store i32 %call, i32* %result, align 4, !dbg !3065
  %3 = load i32, i32* %result, align 4, !dbg !3066
  %tobool = icmp ne i32 %3, 0, !dbg !3066
  br i1 %tobool, label %if.then, label %if.end8, !dbg !3068

if.then:                                          ; preds = %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3069
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %4), !dbg !3072
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3072
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !3073

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !3074
  br label %for.cond, !dbg !3076

for.cond:                                         ; preds = %for.inc, %if.then3
  %5 = load i32, i32* %i, align 4, !dbg !3077
  %6 = load i32, i32* %num_flags.addr, align 4, !dbg !3080
  %cmp = icmp slt i32 %5, %6, !dbg !3081
  br i1 %cmp, label %for.body, label %for.end, !dbg !3082

for.body:                                         ; preds = %for.cond
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3083
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %7), !dbg !3084
  %conv6 = trunc i32 %call5 to i8, !dbg !3084
  %8 = load i32, i32* %i, align 4, !dbg !3085
  %idxprom = sext i32 %8 to i64, !dbg !3086
  %9 = load i8*, i8** %out.addr, align 8, !dbg !3086
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !3086
  store i8 %conv6, i8* %arrayidx, align 1, !dbg !3087
  br label %for.inc, !dbg !3086

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !3088
  %inc = add nsw i32 %10, 1, !dbg !3088
  store i32 %inc, i32* %i, align 4, !dbg !3088
  br label %for.cond, !dbg !3090, !llvm.loop !3091

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3093

if.else:                                          ; preds = %if.then
  %11 = load i8*, i8** %out.addr, align 8, !dbg !3095
  %12 = load i32, i32* %num_flags.addr, align 4, !dbg !3096
  %conv7 = sext i32 %12 to i64, !dbg !3096
  call void @llvm.memset.p0i8.i64(i8* %11, i8 1, i64 %conv7, i32 1, i1 false), !dbg !3097
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  br label %if.end8, !dbg !3098

if.end8:                                          ; preds = %if.end, %entry
  %13 = load i32, i32* %result, align 4, !dbg !3099
  ret i32 %13, !dbg !3100
}

; Function Attrs: nounwind uwtable
define internal void @decode_window_shape(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels) #3 !dbg !3101 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %ch_num = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3104, metadata !1324), !dbg !3105
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !3106, metadata !1324), !dbg !3107
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !3108, metadata !1324), !dbg !3109
  call void @llvm.dbg.declare(metadata i32* %ch_num, metadata !3110, metadata !1324), !dbg !3111
  store i32 0, i32* %ch_num, align 4, !dbg !3112
  br label %for.cond, !dbg !3114

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch_num, align 4, !dbg !3115
  %1 = load i32, i32* %num_channels.addr, align 4, !dbg !3118
  %cmp = icmp slt i32 %0, %1, !dbg !3119
  br i1 %cmp, label %for.body, label %for.end, !dbg !3120

for.body:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3121
  %3 = load i32, i32* %ch_num, align 4, !dbg !3122
  %idxprom = sext i32 %3 to i64, !dbg !3123
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3123
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 12, !dbg !3124
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !3123
  %wnd_shape = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 11, !dbg !3125
  %5 = load i8*, i8** %wnd_shape, align 8, !dbg !3125
  %6 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3126
  %num_subbands = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %6, i32 0, i32 2, !dbg !3127
  %7 = load i32, i32* %num_subbands, align 8, !dbg !3127
  %call = call i32 @get_subband_flags(%struct.GetBitContext* %2, i8* %5, i32 %7), !dbg !3128
  br label %for.inc, !dbg !3128

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %ch_num, align 4, !dbg !3129
  %inc = add nsw i32 %8, 1, !dbg !3129
  store i32 %inc, i32* %ch_num, align 4, !dbg !3129
  br label %for.cond, !dbg !3131, !llvm.loop !3132

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3134
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_gainc_data(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels, %struct.AVCodecContext* %avctx) #3 !dbg !3135 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ch_num = alloca i32, align 4
  %coded_subbands = alloca i32, align 4
  %sb = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3136, metadata !1324), !dbg !3137
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !3138, metadata !1324), !dbg !3139
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !3140, metadata !1324), !dbg !3141
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3142, metadata !1324), !dbg !3143
  call void @llvm.dbg.declare(metadata i32* %ch_num, metadata !3144, metadata !1324), !dbg !3145
  call void @llvm.dbg.declare(metadata i32* %coded_subbands, metadata !3146, metadata !1324), !dbg !3147
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !3148, metadata !1324), !dbg !3149
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3150, metadata !1324), !dbg !3151
  store i32 0, i32* %ch_num, align 4, !dbg !3152
  br label %for.cond, !dbg !3154

for.cond:                                         ; preds = %for.inc51, %entry
  %0 = load i32, i32* %ch_num, align 4, !dbg !3155
  %1 = load i32, i32* %num_channels.addr, align 4, !dbg !3158
  %cmp = icmp slt i32 %0, %1, !dbg !3159
  br i1 %cmp, label %for.body, label %for.end53, !dbg !3160

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ch_num, align 4, !dbg !3161
  %idxprom = sext i32 %2 to i64, !dbg !3163
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3163
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !3164
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !3163
  %gain_data = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 14, !dbg !3165
  %4 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data, align 8, !dbg !3165
  %5 = bitcast %struct.AtracGainInfo* %4 to i8*, !dbg !3166
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 960, i32 4, i1 false), !dbg !3166
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3167
  %call = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !3169
  %tobool = icmp ne i32 %call, 0, !dbg !3169
  br i1 %tobool, label %if.then, label %if.else45, !dbg !3170

if.then:                                          ; preds = %for.body
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3171
  %call1 = call i32 @get_bits(%struct.GetBitContext* %7, i32 4), !dbg !3173
  %add = add i32 %call1, 1, !dbg !3174
  store i32 %add, i32* %coded_subbands, align 4, !dbg !3175
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3176
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %8), !dbg !3178
  %tobool3 = icmp ne i32 %call2, 0, !dbg !3178
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3179

if.then4:                                         ; preds = %if.then
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3180
  %call5 = call i32 @get_bits(%struct.GetBitContext* %9, i32 4), !dbg !3181
  %add6 = add i32 %call5, 1, !dbg !3182
  %10 = load i32, i32* %ch_num, align 4, !dbg !3183
  %idxprom7 = sext i32 %10 to i64, !dbg !3184
  %11 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3184
  %channels8 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %11, i32 0, i32 12, !dbg !3185
  %arrayidx9 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels8, i64 0, i64 %idxprom7, !dbg !3184
  %num_gain_subbands = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx9, i32 0, i32 16, !dbg !3186
  store i32 %add6, i32* %num_gain_subbands, align 8, !dbg !3187
  br label %if.end, !dbg !3184

if.else:                                          ; preds = %if.then
  %12 = load i32, i32* %coded_subbands, align 4, !dbg !3188
  %13 = load i32, i32* %ch_num, align 4, !dbg !3189
  %idxprom10 = sext i32 %13 to i64, !dbg !3190
  %14 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3190
  %channels11 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %14, i32 0, i32 12, !dbg !3191
  %arrayidx12 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels11, i64 0, i64 %idxprom10, !dbg !3190
  %num_gain_subbands13 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx12, i32 0, i32 16, !dbg !3192
  store i32 %12, i32* %num_gain_subbands13, align 8, !dbg !3193
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3194
  %16 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3196
  %17 = load i32, i32* %ch_num, align 4, !dbg !3197
  %18 = load i32, i32* %coded_subbands, align 4, !dbg !3198
  %call14 = call i32 @decode_gainc_npoints(%struct.GetBitContext* %15, %struct.Atrac3pChanUnitCtx* %16, i32 %17, i32 %18), !dbg !3199
  store i32 %call14, i32* %ret, align 4, !dbg !3200
  %cmp15 = icmp slt i32 %call14, 0, !dbg !3201
  br i1 %cmp15, label %if.then21, label %lor.lhs.false, !dbg !3202

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3203
  %20 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3204
  %21 = load i32, i32* %ch_num, align 4, !dbg !3205
  %22 = load i32, i32* %coded_subbands, align 4, !dbg !3206
  %call16 = call i32 @decode_gainc_levels(%struct.GetBitContext* %19, %struct.Atrac3pChanUnitCtx* %20, i32 %21, i32 %22), !dbg !3207
  store i32 %call16, i32* %ret, align 4, !dbg !3208
  %cmp17 = icmp slt i32 %call16, 0, !dbg !3209
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !3210

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3211
  %24 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3212
  %25 = load i32, i32* %ch_num, align 4, !dbg !3213
  %26 = load i32, i32* %coded_subbands, align 4, !dbg !3214
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3215
  %call19 = call i32 @decode_gainc_loc_codes(%struct.GetBitContext* %23, %struct.Atrac3pChanUnitCtx* %24, i32 %25, i32 %26, %struct.AVCodecContext* %27), !dbg !3216
  store i32 %call19, i32* %ret, align 4, !dbg !3217
  %cmp20 = icmp slt i32 %call19, 0, !dbg !3218
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !3219

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false, %if.end
  %28 = load i32, i32* %ret, align 4, !dbg !3221
  store i32 %28, i32* %retval, align 4, !dbg !3222
  br label %return, !dbg !3222

if.end22:                                         ; preds = %lor.lhs.false18
  %29 = load i32, i32* %coded_subbands, align 4, !dbg !3223
  %cmp23 = icmp sgt i32 %29, 0, !dbg !3225
  br i1 %cmp23, label %if.then24, label %if.end44, !dbg !3226

if.then24:                                        ; preds = %if.end22
  %30 = load i32, i32* %coded_subbands, align 4, !dbg !3227
  store i32 %30, i32* %sb, align 4, !dbg !3230
  br label %for.cond25, !dbg !3231

for.cond25:                                       ; preds = %for.inc, %if.then24
  %31 = load i32, i32* %sb, align 4, !dbg !3232
  %32 = load i32, i32* %ch_num, align 4, !dbg !3235
  %idxprom26 = sext i32 %32 to i64, !dbg !3236
  %33 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3236
  %channels27 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %33, i32 0, i32 12, !dbg !3237
  %arrayidx28 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels27, i64 0, i64 %idxprom26, !dbg !3236
  %num_gain_subbands29 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx28, i32 0, i32 16, !dbg !3238
  %34 = load i32, i32* %num_gain_subbands29, align 8, !dbg !3238
  %cmp30 = icmp slt i32 %31, %34, !dbg !3239
  br i1 %cmp30, label %for.body31, label %for.end, !dbg !3240

for.body31:                                       ; preds = %for.cond25
  %35 = load i32, i32* %sb, align 4, !dbg !3241
  %idxprom32 = sext i32 %35 to i64, !dbg !3242
  %36 = load i32, i32* %ch_num, align 4, !dbg !3243
  %idxprom33 = sext i32 %36 to i64, !dbg !3242
  %37 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3242
  %channels34 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %37, i32 0, i32 12, !dbg !3244
  %arrayidx35 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels34, i64 0, i64 %idxprom33, !dbg !3242
  %gain_data36 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx35, i32 0, i32 14, !dbg !3245
  %38 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data36, align 8, !dbg !3245
  %arrayidx37 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %38, i64 %idxprom32, !dbg !3242
  %39 = load i32, i32* %sb, align 4, !dbg !3246
  %sub = sub nsw i32 %39, 1, !dbg !3247
  %idxprom38 = sext i32 %sub to i64, !dbg !3248
  %40 = load i32, i32* %ch_num, align 4, !dbg !3249
  %idxprom39 = sext i32 %40 to i64, !dbg !3248
  %41 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3248
  %channels40 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %41, i32 0, i32 12, !dbg !3250
  %arrayidx41 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels40, i64 0, i64 %idxprom39, !dbg !3248
  %gain_data42 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx41, i32 0, i32 14, !dbg !3251
  %42 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data42, align 8, !dbg !3251
  %arrayidx43 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %42, i64 %idxprom38, !dbg !3248
  %43 = bitcast %struct.AtracGainInfo* %arrayidx37 to i8*, !dbg !3248
  %44 = bitcast %struct.AtracGainInfo* %arrayidx43 to i8*, !dbg !3248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 60, i32 4, i1 false), !dbg !3248
  br label %for.inc, !dbg !3242

for.inc:                                          ; preds = %for.body31
  %45 = load i32, i32* %sb, align 4, !dbg !3252
  %inc = add nsw i32 %45, 1, !dbg !3252
  store i32 %inc, i32* %sb, align 4, !dbg !3252
  br label %for.cond25, !dbg !3254, !llvm.loop !3255

for.end:                                          ; preds = %for.cond25
  br label %if.end44, !dbg !3257

if.end44:                                         ; preds = %for.end, %if.end22
  br label %if.end50, !dbg !3258

if.else45:                                        ; preds = %for.body
  %46 = load i32, i32* %ch_num, align 4, !dbg !3259
  %idxprom46 = sext i32 %46 to i64, !dbg !3261
  %47 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3261
  %channels47 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %47, i32 0, i32 12, !dbg !3262
  %arrayidx48 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels47, i64 0, i64 %idxprom46, !dbg !3261
  %num_gain_subbands49 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx48, i32 0, i32 16, !dbg !3263
  store i32 0, i32* %num_gain_subbands49, align 8, !dbg !3264
  br label %if.end50

if.end50:                                         ; preds = %if.else45, %if.end44
  br label %for.inc51, !dbg !3265

for.inc51:                                        ; preds = %if.end50
  %48 = load i32, i32* %ch_num, align 4, !dbg !3266
  %inc52 = add nsw i32 %48, 1, !dbg !3266
  store i32 %inc52, i32* %ch_num, align 4, !dbg !3266
  br label %for.cond, !dbg !3268, !llvm.loop !3269

for.end53:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3271
  br label %return, !dbg !3271

return:                                           ; preds = %for.end53, %if.then21
  %49 = load i32, i32* %retval, align 4, !dbg !3272
  ret i32 %49, !dbg !3272
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_tones_info(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %num_channels, %struct.AVCodecContext* %avctx) #3 !dbg !3273 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !3274
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !3286
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !3289
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !3292
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !3294
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !3296
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !3298
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !3300
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !3302
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !3304
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !3306
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !3308
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !3310
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !3312
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %num_channels.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ch_num = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %band_has_tones = alloca [16 x i32], align 16
  %SWAP_tmp = alloca %struct.Atrac3pWavesData, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3313, metadata !1324), !dbg !3314
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !3315, metadata !1324), !dbg !3316
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !3317, metadata !1324), !dbg !3318
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3319, metadata !1324), !dbg !3320
  call void @llvm.dbg.declare(metadata i32* %ch_num, metadata !3321, metadata !1324), !dbg !3322
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3323, metadata !1324), !dbg !3324
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3325, metadata !1324), !dbg !3326
  call void @llvm.dbg.declare(metadata [16 x i32]* %band_has_tones, metadata !3327, metadata !1324), !dbg !3329
  store i32 0, i32* %ch_num, align 4, !dbg !3330
  br label %for.cond, !dbg !3332

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch_num, align 4, !dbg !3333
  %1 = load i32, i32* %num_channels.addr, align 4, !dbg !3336
  %cmp = icmp slt i32 %0, %1, !dbg !3337
  br i1 %cmp, label %for.body, label %for.end, !dbg !3338

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %ch_num, align 4, !dbg !3339
  %idxprom = sext i32 %2 to i64, !dbg !3340
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3340
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !3341
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !3340
  %tones_info = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 18, !dbg !3342
  %4 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info, align 8, !dbg !3342
  %5 = bitcast %struct.Atrac3pWavesData* %4 to i8*, !dbg !3343
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 640, i32 4, i1 false), !dbg !3343
  br label %for.inc, !dbg !3343

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %ch_num, align 4, !dbg !3344
  %inc = add nsw i32 %6, 1, !dbg !3344
  store i32 %inc, i32* %ch_num, align 4, !dbg !3344
  br label %for.cond, !dbg !3346, !llvm.loop !3347

for.end:                                          ; preds = %for.cond
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3349
  %call = call i32 @get_bits1(%struct.GetBitContext* %7), !dbg !3350
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3351
  %waves_info = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 14, !dbg !3352
  %9 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info, align 8, !dbg !3352
  %tones_present = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %9, i32 0, i32 0, !dbg !3353
  store i32 %call, i32* %tones_present, align 4, !dbg !3354
  %10 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3355
  %waves_info1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %10, i32 0, i32 14, !dbg !3357
  %11 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info1, align 8, !dbg !3357
  %tones_present2 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %11, i32 0, i32 0, !dbg !3358
  %12 = load i32, i32* %tones_present2, align 4, !dbg !3358
  %tobool = icmp ne i32 %12, 0, !dbg !3355
  br i1 %tobool, label %if.end, label %if.then, !dbg !3359

if.then:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !3360
  br label %return, !dbg !3360

if.end:                                           ; preds = %for.end
  %13 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3361
  %waves_info3 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %13, i32 0, i32 14, !dbg !3362
  %14 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info3, align 8, !dbg !3362
  %waves = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %14, i32 0, i32 7, !dbg !3363
  %arraydecay = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves, i32 0, i32 0, !dbg !3364
  %15 = bitcast %struct.Atrac3pWaveParam* %arraydecay to i8*, !dbg !3364
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 768, i32 4, i1 false), !dbg !3364
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3365
  %call4 = call i32 @get_bits1(%struct.GetBitContext* %16), !dbg !3366
  %17 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3367
  %waves_info5 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %17, i32 0, i32 14, !dbg !3368
  %18 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info5, align 8, !dbg !3368
  %amplitude_mode = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %18, i32 0, i32 1, !dbg !3369
  store i32 %call4, i32* %amplitude_mode, align 4, !dbg !3370
  %19 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3371
  %waves_info6 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %19, i32 0, i32 14, !dbg !3373
  %20 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info6, align 8, !dbg !3373
  %amplitude_mode7 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %20, i32 0, i32 1, !dbg !3374
  %21 = load i32, i32* %amplitude_mode7, align 4, !dbg !3374
  %tobool8 = icmp ne i32 %21, 0, !dbg !3371
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !3375

if.then9:                                         ; preds = %if.end
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3376
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !3376
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0)), !dbg !3378
  store i32 -1163346256, i32* %retval, align 4, !dbg !3379
  br label %return, !dbg !3379

if.end10:                                         ; preds = %if.end
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3380
  %25 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 0, i32 1), align 8, !dbg !3381
  %26 = load i32, i32* getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 0, i32 0), align 16, !dbg !3382
  store %struct.GetBitContext* %24, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3383
  store [2 x i16]* %25, [2 x i16]** %table.addr.i, align 8, !dbg !3383
  store i32 %26, i32* %bits.addr.i, align 4, !dbg !3383
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !3383
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3384
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %27, i32 0, i32 2, !dbg !3385
  %28 = load i32, i32* %index.i, align 8, !dbg !3385
  store i32 %28, i32* %re_index.i, align 4, !dbg !3302
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3386
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %29, i32 0, i32 4, !dbg !3387
  %30 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !3387
  store i32 %30, i32* %re_size_plus8.i, align 4, !dbg !3306
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3388
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %31, i32 0, i32 0, !dbg !3389
  %32 = load i8*, i8** %buffer.i, align 8, !dbg !3389
  %33 = load i32, i32* %re_index.i, align 4, !dbg !3390
  %shr.i = lshr i32 %33, 3, !dbg !3391
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !3392
  %add.ptr.i = getelementptr inbounds i8, i8* %32, i64 %idx.ext.i, !dbg !3392
  %34 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !3393
  %l.i = bitcast %union.unaligned_32* %34 to i32*, !dbg !3393
  %35 = load i32, i32* %l.i, align 1, !dbg !3393
  store i32 %35, i32* %x.addr.i.i, align 4, !dbg !3394
  %36 = load i32, i32* %x.addr.i.i, align 4, !dbg !3395
  %shl.i.i = shl i32 %36, 8, !dbg !3396
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !3397
  %37 = load i32, i32* %x.addr.i.i, align 4, !dbg !3398
  %shr.i.i = lshr i32 %37, 8, !dbg !3399
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !3400
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !3401
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !3402
  %38 = load i32, i32* %x.addr.i.i, align 4, !dbg !3403
  %shr3.i.i = lshr i32 %38, 16, !dbg !3404
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !3405
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !3406
  %39 = load i32, i32* %x.addr.i.i, align 4, !dbg !3407
  %shr6.i.i = lshr i32 %39, 16, !dbg !3408
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !3409
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !3410
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !3411
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !3412
  %40 = load i32, i32* %re_index.i, align 4, !dbg !3413
  %and.i = and i32 %40, 7, !dbg !3414
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !3415
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !3416
  %41 = load i32, i32* %re_cache.i, align 4, !dbg !3417
  %42 = load i32, i32* %bits.addr.i, align 4, !dbg !3419
  %conv.i = trunc i32 %42 to i8, !dbg !3419
  %call2.i = call i32 @NEG_USR32(i32 %41, i8 signext %conv.i) #9, !dbg !3420
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !3421
  %43 = load i32, i32* %index1.i, align 4, !dbg !3422
  %idxprom.i = zext i32 %43 to i64, !dbg !3423
  %44 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3423
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %44, i64 %idxprom.i, !dbg !3423
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !3423
  %45 = load i16, i16* %arrayidx3.i, align 2, !dbg !3423
  %conv4.i = sext i16 %45 to i32, !dbg !3423
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !3424
  %46 = load i32, i32* %index1.i, align 4, !dbg !3425
  %idxprom5.i = zext i32 %46 to i64, !dbg !3426
  %47 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3426
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %47, i64 %idxprom5.i, !dbg !3426
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !3426
  %48 = load i16, i16* %arrayidx7.i, align 2, !dbg !3426
  %conv8.i = sext i16 %48 to i32, !dbg !3426
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !3427
  %49 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3428
  %cmp.i = icmp sgt i32 %49, 1, !dbg !3429
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !3430

land.lhs.true.i:                                  ; preds = %if.end10
  %50 = load i32, i32* %n.i, align 4, !dbg !3431
  %cmp10.i = icmp slt i32 %50, 0, !dbg !3433
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !3434

if.then.i:                                        ; preds = %land.lhs.true.i
  %51 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3435
  %52 = load i32, i32* %re_index.i, align 4, !dbg !3437
  %53 = load i32, i32* %bits.addr.i, align 4, !dbg !3438
  %add.i = add i32 %52, %53, !dbg !3439
  %cmp12.i = icmp ugt i32 %51, %add.i, !dbg !3440
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !3441

cond.true.i:                                      ; preds = %if.then.i
  %54 = load i32, i32* %re_index.i, align 4, !dbg !3442
  %55 = load i32, i32* %bits.addr.i, align 4, !dbg !3444
  %add14.i = add i32 %54, %55, !dbg !3445
  br label %cond.end.i, !dbg !3446

cond.false.i:                                     ; preds = %if.then.i
  %56 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3447
  br label %cond.end.i, !dbg !3449

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %56, %cond.false.i ], !dbg !3450
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !3451
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3452
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %57, i32 0, i32 0, !dbg !3453
  %58 = load i8*, i8** %buffer15.i, align 8, !dbg !3453
  %59 = load i32, i32* %re_index.i, align 4, !dbg !3454
  %shr16.i = lshr i32 %59, 3, !dbg !3455
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !3456
  %add.ptr18.i = getelementptr inbounds i8, i8* %58, i64 %idx.ext17.i, !dbg !3456
  %60 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !3457
  %l19.i = bitcast %union.unaligned_32* %60 to i32*, !dbg !3457
  %61 = load i32, i32* %l19.i, align 1, !dbg !3457
  store i32 %61, i32* %x.addr.i81.i, align 4, !dbg !3458
  %62 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3459
  %shl.i82.i = shl i32 %62, 8, !dbg !3460
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !3461
  %63 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3462
  %shr.i84.i = lshr i32 %63, 8, !dbg !3463
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !3464
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !3465
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !3466
  %64 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3467
  %shr3.i88.i = lshr i32 %64, 16, !dbg !3468
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !3469
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !3470
  %65 = load i32, i32* %x.addr.i81.i, align 4, !dbg !3471
  %shr6.i91.i = lshr i32 %65, 16, !dbg !3472
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !3473
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !3474
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !3475
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !3476
  %66 = load i32, i32* %re_index.i, align 4, !dbg !3477
  %and21.i = and i32 %66, 7, !dbg !3478
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !3479
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !3480
  %67 = load i32, i32* %n.i, align 4, !dbg !3481
  %sub.i = sub nsw i32 0, %67, !dbg !3482
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !3483
  %68 = load i32, i32* %re_cache.i, align 4, !dbg !3484
  %69 = load i32, i32* %nb_bits.i, align 4, !dbg !3485
  %conv23.i = trunc i32 %69 to i8, !dbg !3485
  %call24.i = call i32 @NEG_USR32(i32 %68, i8 signext %conv23.i) #9, !dbg !3486
  %70 = load i32, i32* %code.i, align 4, !dbg !3488
  %add25.i = add i32 %call24.i, %70, !dbg !3489
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !3490
  %71 = load i32, i32* %index1.i, align 4, !dbg !3491
  %idxprom26.i = zext i32 %71 to i64, !dbg !3492
  %72 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3492
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %72, i64 %idxprom26.i, !dbg !3492
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !3492
  %73 = load i16, i16* %arrayidx28.i, align 2, !dbg !3492
  %conv29.i = sext i16 %73 to i32, !dbg !3492
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !3493
  %74 = load i32, i32* %index1.i, align 4, !dbg !3494
  %idxprom30.i = zext i32 %74 to i64, !dbg !3495
  %75 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3495
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %75, i64 %idxprom30.i, !dbg !3495
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !3495
  %76 = load i16, i16* %arrayidx32.i, align 2, !dbg !3495
  %conv33.i = sext i16 %76 to i32, !dbg !3495
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !3496
  %77 = load i32, i32* %max_depth.addr.i, align 4, !dbg !3497
  %cmp34.i = icmp sgt i32 %77, 2, !dbg !3498
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !3499

land.lhs.true36.i:                                ; preds = %cond.end.i
  %78 = load i32, i32* %n.i, align 4, !dbg !3500
  %cmp37.i = icmp slt i32 %78, 0, !dbg !3502
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !3503

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %79 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3504
  %80 = load i32, i32* %re_index.i, align 4, !dbg !3506
  %81 = load i32, i32* %nb_bits.i, align 4, !dbg !3507
  %add40.i = add i32 %80, %81, !dbg !3508
  %cmp41.i = icmp ugt i32 %79, %add40.i, !dbg !3509
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !3510

cond.true43.i:                                    ; preds = %if.then39.i
  %82 = load i32, i32* %re_index.i, align 4, !dbg !3511
  %83 = load i32, i32* %nb_bits.i, align 4, !dbg !3513
  %add44.i = add i32 %82, %83, !dbg !3514
  br label %cond.end46.i, !dbg !3515

cond.false45.i:                                   ; preds = %if.then39.i
  %84 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3516
  br label %cond.end46.i, !dbg !3518

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %84, %cond.false45.i ], !dbg !3519
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !3520
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3521
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %85, i32 0, i32 0, !dbg !3522
  %86 = load i8*, i8** %buffer48.i, align 8, !dbg !3522
  %87 = load i32, i32* %re_index.i, align 4, !dbg !3523
  %shr49.i = lshr i32 %87, 3, !dbg !3524
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !3525
  %add.ptr51.i = getelementptr inbounds i8, i8* %86, i64 %idx.ext50.i, !dbg !3525
  %88 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !3526
  %l52.i = bitcast %union.unaligned_32* %88 to i32*, !dbg !3526
  %89 = load i32, i32* %l52.i, align 1, !dbg !3526
  store i32 %89, i32* %x.addr.i96.i, align 4, !dbg !3527
  %90 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3528
  %shl.i97.i = shl i32 %90, 8, !dbg !3529
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !3530
  %91 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3531
  %shr.i99.i = lshr i32 %91, 8, !dbg !3532
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !3533
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !3534
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !3535
  %92 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3536
  %shr3.i103.i = lshr i32 %92, 16, !dbg !3537
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !3538
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !3539
  %93 = load i32, i32* %x.addr.i96.i, align 4, !dbg !3540
  %shr6.i106.i = lshr i32 %93, 16, !dbg !3541
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !3542
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !3543
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !3544
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !3545
  %94 = load i32, i32* %re_index.i, align 4, !dbg !3546
  %and54.i = and i32 %94, 7, !dbg !3547
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !3548
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !3549
  %95 = load i32, i32* %n.i, align 4, !dbg !3550
  %sub56.i = sub nsw i32 0, %95, !dbg !3551
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !3552
  %96 = load i32, i32* %re_cache.i, align 4, !dbg !3553
  %97 = load i32, i32* %nb_bits.i, align 4, !dbg !3554
  %conv57.i = trunc i32 %97 to i8, !dbg !3554
  %call58.i = call i32 @NEG_USR32(i32 %96, i8 signext %conv57.i) #9, !dbg !3555
  %98 = load i32, i32* %code.i, align 4, !dbg !3557
  %add59.i = add i32 %call58.i, %98, !dbg !3558
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !3559
  %99 = load i32, i32* %index1.i, align 4, !dbg !3560
  %idxprom60.i = zext i32 %99 to i64, !dbg !3561
  %100 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3561
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %100, i64 %idxprom60.i, !dbg !3561
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !3561
  %101 = load i16, i16* %arrayidx62.i, align 2, !dbg !3561
  %conv63.i = sext i16 %101 to i32, !dbg !3561
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !3562
  %102 = load i32, i32* %index1.i, align 4, !dbg !3563
  %idxprom64.i = zext i32 %102 to i64, !dbg !3564
  %103 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !3564
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %103, i64 %idxprom64.i, !dbg !3564
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !3564
  %104 = load i16, i16* %arrayidx66.i, align 2, !dbg !3564
  %conv67.i = sext i16 %104 to i32, !dbg !3564
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !3565
  br label %if.end.i, !dbg !3566

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !3567

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end10
  %105 = load i32, i32* %n.i, align 4, !dbg !3569
  %106 = load i32, i32* %re_cache.i, align 4, !dbg !3572
  %shl70.i = shl i32 %106, %105, !dbg !3572
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !3572
  %107 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3573
  %108 = load i32, i32* %re_index.i, align 4, !dbg !3574
  %109 = load i32, i32* %n.i, align 4, !dbg !3575
  %add71.i = add i32 %108, %109, !dbg !3576
  %cmp72.i = icmp ugt i32 %107, %add71.i, !dbg !3577
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !3578

cond.true74.i:                                    ; preds = %if.end68.i
  %110 = load i32, i32* %re_index.i, align 4, !dbg !3579
  %111 = load i32, i32* %n.i, align 4, !dbg !3581
  %add75.i = add i32 %110, %111, !dbg !3582
  br label %get_vlc2.exit, !dbg !3583

cond.false76.i:                                   ; preds = %if.end68.i
  %112 = load i32, i32* %re_size_plus8.i, align 4, !dbg !3584
  br label %get_vlc2.exit, !dbg !3586

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %112, %cond.false76.i ], !dbg !3587
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !3589
  %113 = load i32, i32* %re_index.i, align 4, !dbg !3590
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !3591
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %114, i32 0, i32 2, !dbg !3592
  store i32 %113, i32* %index80.i, align 8, !dbg !3593
  %115 = load i32, i32* %code.i, align 4, !dbg !3594
  %add = add nsw i32 %115, 1, !dbg !3595
  %116 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3596
  %waves_info12 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %116, i32 0, i32 14, !dbg !3597
  %117 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info12, align 8, !dbg !3597
  %num_tone_bands = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %117, i32 0, i32 2, !dbg !3598
  store i32 %add, i32* %num_tone_bands, align 4, !dbg !3599
  %118 = load i32, i32* %num_channels.addr, align 4, !dbg !3600
  %cmp13 = icmp eq i32 %118, 2, !dbg !3602
  br i1 %cmp13, label %if.then14, label %if.end30, !dbg !3603

if.then14:                                        ; preds = %get_vlc2.exit
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3604
  %120 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3606
  %waves_info15 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %120, i32 0, i32 14, !dbg !3607
  %121 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info15, align 8, !dbg !3607
  %tone_sharing = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %121, i32 0, i32 3, !dbg !3608
  %arraydecay16 = getelementptr inbounds [16 x i8], [16 x i8]* %tone_sharing, i32 0, i32 0, !dbg !3606
  %122 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3609
  %waves_info17 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %122, i32 0, i32 14, !dbg !3610
  %123 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info17, align 8, !dbg !3610
  %num_tone_bands18 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %123, i32 0, i32 2, !dbg !3611
  %124 = load i32, i32* %num_tone_bands18, align 4, !dbg !3611
  %call19 = call i32 @get_subband_flags(%struct.GetBitContext* %119, i8* %arraydecay16, i32 %124), !dbg !3612
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3613
  %126 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3614
  %waves_info20 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %126, i32 0, i32 14, !dbg !3615
  %127 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info20, align 8, !dbg !3615
  %tone_master = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %127, i32 0, i32 4, !dbg !3616
  %arraydecay21 = getelementptr inbounds [16 x i8], [16 x i8]* %tone_master, i32 0, i32 0, !dbg !3614
  %128 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3617
  %waves_info22 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %128, i32 0, i32 14, !dbg !3618
  %129 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info22, align 8, !dbg !3618
  %num_tone_bands23 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %129, i32 0, i32 2, !dbg !3619
  %130 = load i32, i32* %num_tone_bands23, align 4, !dbg !3619
  %call24 = call i32 @get_subband_flags(%struct.GetBitContext* %125, i8* %arraydecay21, i32 %130), !dbg !3620
  %131 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3621
  %132 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3622
  %waves_info25 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %132, i32 0, i32 14, !dbg !3623
  %133 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info25, align 8, !dbg !3623
  %invert_phase = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %133, i32 0, i32 5, !dbg !3624
  %arraydecay26 = getelementptr inbounds [16 x i8], [16 x i8]* %invert_phase, i32 0, i32 0, !dbg !3622
  %134 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3625
  %waves_info27 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %134, i32 0, i32 14, !dbg !3626
  %135 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info27, align 8, !dbg !3626
  %num_tone_bands28 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %135, i32 0, i32 2, !dbg !3627
  %136 = load i32, i32* %num_tone_bands28, align 4, !dbg !3627
  %call29 = call i32 @get_subband_flags(%struct.GetBitContext* %131, i8* %arraydecay26, i32 %136), !dbg !3628
  br label %if.end30, !dbg !3629

if.end30:                                         ; preds = %if.then14, %get_vlc2.exit
  %137 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3630
  %waves_info31 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %137, i32 0, i32 14, !dbg !3631
  %138 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info31, align 8, !dbg !3631
  %tones_index = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %138, i32 0, i32 6, !dbg !3632
  store i32 0, i32* %tones_index, align 4, !dbg !3633
  store i32 0, i32* %ch_num, align 4, !dbg !3634
  br label %for.cond32, !dbg !3636

for.cond32:                                       ; preds = %for.inc60, %if.end30
  %139 = load i32, i32* %ch_num, align 4, !dbg !3637
  %140 = load i32, i32* %num_channels.addr, align 4, !dbg !3640
  %cmp33 = icmp slt i32 %139, %140, !dbg !3641
  br i1 %cmp33, label %for.body34, label %for.end62, !dbg !3642

for.body34:                                       ; preds = %for.cond32
  store i32 0, i32* %i, align 4, !dbg !3643
  br label %for.cond35, !dbg !3646

for.cond35:                                       ; preds = %for.inc48, %for.body34
  %141 = load i32, i32* %i, align 4, !dbg !3647
  %142 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3650
  %waves_info36 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %142, i32 0, i32 14, !dbg !3651
  %143 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info36, align 8, !dbg !3651
  %num_tone_bands37 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %143, i32 0, i32 2, !dbg !3652
  %144 = load i32, i32* %num_tone_bands37, align 4, !dbg !3652
  %cmp38 = icmp slt i32 %141, %144, !dbg !3653
  br i1 %cmp38, label %for.body39, label %for.end50, !dbg !3654

for.body39:                                       ; preds = %for.cond35
  %145 = load i32, i32* %ch_num, align 4, !dbg !3655
  %tobool40 = icmp ne i32 %145, 0, !dbg !3655
  br i1 %tobool40, label %cond.false, label %cond.true, !dbg !3656

cond.true:                                        ; preds = %for.body39
  br label %cond.end, !dbg !3657

cond.false:                                       ; preds = %for.body39
  %146 = load i32, i32* %i, align 4, !dbg !3658
  %idxprom41 = sext i32 %146 to i64, !dbg !3660
  %147 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3660
  %waves_info42 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %147, i32 0, i32 14, !dbg !3661
  %148 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info42, align 8, !dbg !3661
  %tone_sharing43 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %148, i32 0, i32 3, !dbg !3662
  %arrayidx44 = getelementptr inbounds [16 x i8], [16 x i8]* %tone_sharing43, i64 0, i64 %idxprom41, !dbg !3660
  %149 = load i8, i8* %arrayidx44, align 1, !dbg !3660
  %tobool45 = icmp ne i8 %149, 0, !dbg !3663
  %lnot = xor i1 %tobool45, true, !dbg !3663
  %lnot.ext = zext i1 %lnot to i32, !dbg !3663
  br label %cond.end, !dbg !3664

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !3665
  %150 = load i32, i32* %i, align 4, !dbg !3667
  %idxprom46 = sext i32 %150 to i64, !dbg !3668
  %arrayidx47 = getelementptr inbounds [16 x i32], [16 x i32]* %band_has_tones, i64 0, i64 %idxprom46, !dbg !3668
  store i32 %cond, i32* %arrayidx47, align 4, !dbg !3669
  br label %for.inc48, !dbg !3668

for.inc48:                                        ; preds = %cond.end
  %151 = load i32, i32* %i, align 4, !dbg !3670
  %inc49 = add nsw i32 %151, 1, !dbg !3670
  store i32 %inc49, i32* %i, align 4, !dbg !3670
  br label %for.cond35, !dbg !3671, !llvm.loop !3672

for.end50:                                        ; preds = %for.cond35
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3674
  %153 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3675
  %154 = load i32, i32* %ch_num, align 4, !dbg !3676
  %arraydecay51 = getelementptr inbounds [16 x i32], [16 x i32]* %band_has_tones, i32 0, i32 0, !dbg !3677
  call void @decode_tones_envelope(%struct.GetBitContext* %152, %struct.Atrac3pChanUnitCtx* %153, i32 %154, i32* %arraydecay51), !dbg !3678
  %155 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3679
  %156 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3681
  %157 = load i32, i32* %ch_num, align 4, !dbg !3682
  %arraydecay52 = getelementptr inbounds [16 x i32], [16 x i32]* %band_has_tones, i32 0, i32 0, !dbg !3683
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3684
  %call53 = call i32 @decode_band_numwavs(%struct.GetBitContext* %155, %struct.Atrac3pChanUnitCtx* %156, i32 %157, i32* %arraydecay52, %struct.AVCodecContext* %158), !dbg !3685
  store i32 %call53, i32* %ret, align 4, !dbg !3686
  %cmp54 = icmp slt i32 %call53, 0, !dbg !3687
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !3688

if.then55:                                        ; preds = %for.end50
  %159 = load i32, i32* %ret, align 4, !dbg !3689
  store i32 %159, i32* %retval, align 4, !dbg !3690
  br label %return, !dbg !3690

if.end56:                                         ; preds = %for.end50
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3691
  %161 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3692
  %162 = load i32, i32* %ch_num, align 4, !dbg !3693
  %arraydecay57 = getelementptr inbounds [16 x i32], [16 x i32]* %band_has_tones, i32 0, i32 0, !dbg !3694
  call void @decode_tones_frequency(%struct.GetBitContext* %160, %struct.Atrac3pChanUnitCtx* %161, i32 %162, i32* %arraydecay57), !dbg !3695
  %163 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3696
  %164 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3697
  %165 = load i32, i32* %ch_num, align 4, !dbg !3698
  %arraydecay58 = getelementptr inbounds [16 x i32], [16 x i32]* %band_has_tones, i32 0, i32 0, !dbg !3699
  call void @decode_tones_amplitude(%struct.GetBitContext* %163, %struct.Atrac3pChanUnitCtx* %164, i32 %165, i32* %arraydecay58), !dbg !3700
  %166 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3701
  %167 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3702
  %168 = load i32, i32* %ch_num, align 4, !dbg !3703
  %arraydecay59 = getelementptr inbounds [16 x i32], [16 x i32]* %band_has_tones, i32 0, i32 0, !dbg !3704
  call void @decode_tones_phase(%struct.GetBitContext* %166, %struct.Atrac3pChanUnitCtx* %167, i32 %168, i32* %arraydecay59), !dbg !3705
  br label %for.inc60, !dbg !3706

for.inc60:                                        ; preds = %if.end56
  %169 = load i32, i32* %ch_num, align 4, !dbg !3707
  %inc61 = add nsw i32 %169, 1, !dbg !3707
  store i32 %inc61, i32* %ch_num, align 4, !dbg !3707
  br label %for.cond32, !dbg !3709, !llvm.loop !3710

for.end62:                                        ; preds = %for.cond32
  %170 = load i32, i32* %num_channels.addr, align 4, !dbg !3712
  %cmp63 = icmp eq i32 %170, 2, !dbg !3714
  br i1 %cmp63, label %if.then64, label %if.end117, !dbg !3715

if.then64:                                        ; preds = %for.end62
  store i32 0, i32* %i, align 4, !dbg !3716
  br label %for.cond65, !dbg !3719

for.cond65:                                       ; preds = %for.inc114, %if.then64
  %171 = load i32, i32* %i, align 4, !dbg !3720
  %172 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3723
  %waves_info66 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %172, i32 0, i32 14, !dbg !3724
  %173 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info66, align 8, !dbg !3724
  %num_tone_bands67 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %173, i32 0, i32 2, !dbg !3725
  %174 = load i32, i32* %num_tone_bands67, align 4, !dbg !3725
  %cmp68 = icmp slt i32 %171, %174, !dbg !3726
  br i1 %cmp68, label %for.body69, label %for.end116, !dbg !3727

for.body69:                                       ; preds = %for.cond65
  %175 = load i32, i32* %i, align 4, !dbg !3728
  %idxprom70 = sext i32 %175 to i64, !dbg !3731
  %176 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3731
  %waves_info71 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %176, i32 0, i32 14, !dbg !3732
  %177 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info71, align 8, !dbg !3732
  %tone_sharing72 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %177, i32 0, i32 3, !dbg !3733
  %arrayidx73 = getelementptr inbounds [16 x i8], [16 x i8]* %tone_sharing72, i64 0, i64 %idxprom70, !dbg !3731
  %178 = load i8, i8* %arrayidx73, align 1, !dbg !3731
  %tobool74 = icmp ne i8 %178, 0, !dbg !3731
  br i1 %tobool74, label %if.then75, label %if.end86, !dbg !3734

if.then75:                                        ; preds = %for.body69
  %179 = load i32, i32* %i, align 4, !dbg !3735
  %idxprom76 = sext i32 %179 to i64, !dbg !3736
  %180 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3736
  %channels77 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %180, i32 0, i32 12, !dbg !3737
  %arrayidx78 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels77, i64 0, i64 1, !dbg !3736
  %tones_info79 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx78, i32 0, i32 18, !dbg !3738
  %181 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info79, align 8, !dbg !3738
  %arrayidx80 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %181, i64 %idxprom76, !dbg !3736
  %182 = load i32, i32* %i, align 4, !dbg !3739
  %idxprom81 = sext i32 %182 to i64, !dbg !3740
  %183 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3740
  %channels82 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %183, i32 0, i32 12, !dbg !3741
  %arrayidx83 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels82, i64 0, i64 0, !dbg !3740
  %tones_info84 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx83, i32 0, i32 18, !dbg !3742
  %184 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info84, align 8, !dbg !3742
  %arrayidx85 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %184, i64 %idxprom81, !dbg !3740
  %185 = bitcast %struct.Atrac3pWavesData* %arrayidx80 to i8*, !dbg !3740
  %186 = bitcast %struct.Atrac3pWavesData* %arrayidx85 to i8*, !dbg !3740
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %185, i8* %186, i64 40, i32 4, i1 false), !dbg !3740
  br label %if.end86, !dbg !3736

if.end86:                                         ; preds = %if.then75, %for.body69
  %187 = load i32, i32* %i, align 4, !dbg !3743
  %idxprom87 = sext i32 %187 to i64, !dbg !3745
  %188 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3745
  %waves_info88 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %188, i32 0, i32 14, !dbg !3746
  %189 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info88, align 8, !dbg !3746
  %tone_master89 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %189, i32 0, i32 4, !dbg !3747
  %arrayidx90 = getelementptr inbounds [16 x i8], [16 x i8]* %tone_master89, i64 0, i64 %idxprom87, !dbg !3745
  %190 = load i8, i8* %arrayidx90, align 1, !dbg !3745
  %tobool91 = icmp ne i8 %190, 0, !dbg !3745
  br i1 %tobool91, label %if.then92, label %if.end113, !dbg !3748

if.then92:                                        ; preds = %if.end86
  br label %do.body, !dbg !3749, !llvm.loop !3750

do.body:                                          ; preds = %if.then92
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData* %SWAP_tmp, metadata !3751, metadata !1324), !dbg !3753
  %191 = load i32, i32* %i, align 4, !dbg !3754
  %idxprom93 = sext i32 %191 to i64, !dbg !3756
  %192 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3756
  %channels94 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %192, i32 0, i32 12, !dbg !3757
  %arrayidx95 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels94, i64 0, i64 1, !dbg !3756
  %tones_info96 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx95, i32 0, i32 18, !dbg !3758
  %193 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info96, align 8, !dbg !3758
  %arrayidx97 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %193, i64 %idxprom93, !dbg !3756
  %194 = bitcast %struct.Atrac3pWavesData* %SWAP_tmp to i8*, !dbg !3756
  %195 = bitcast %struct.Atrac3pWavesData* %arrayidx97 to i8*, !dbg !3756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %194, i8* %195, i64 40, i32 4, i1 false), !dbg !3756
  %196 = load i32, i32* %i, align 4, !dbg !3759
  %idxprom98 = sext i32 %196 to i64, !dbg !3760
  %197 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3760
  %channels99 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %197, i32 0, i32 12, !dbg !3761
  %arrayidx100 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels99, i64 0, i64 1, !dbg !3760
  %tones_info101 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx100, i32 0, i32 18, !dbg !3762
  %198 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info101, align 8, !dbg !3762
  %arrayidx102 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %198, i64 %idxprom98, !dbg !3760
  %199 = load i32, i32* %i, align 4, !dbg !3763
  %idxprom103 = sext i32 %199 to i64, !dbg !3764
  %200 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3764
  %channels104 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %200, i32 0, i32 12, !dbg !3765
  %arrayidx105 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels104, i64 0, i64 0, !dbg !3764
  %tones_info106 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx105, i32 0, i32 18, !dbg !3766
  %201 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info106, align 8, !dbg !3766
  %arrayidx107 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %201, i64 %idxprom103, !dbg !3764
  %202 = bitcast %struct.Atrac3pWavesData* %arrayidx102 to i8*, !dbg !3764
  %203 = bitcast %struct.Atrac3pWavesData* %arrayidx107 to i8*, !dbg !3764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %202, i8* %203, i64 40, i32 4, i1 false), !dbg !3767
  %204 = load i32, i32* %i, align 4, !dbg !3769
  %idxprom108 = sext i32 %204 to i64, !dbg !3770
  %205 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !3770
  %channels109 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %205, i32 0, i32 12, !dbg !3771
  %arrayidx110 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels109, i64 0, i64 0, !dbg !3770
  %tones_info111 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx110, i32 0, i32 18, !dbg !3772
  %206 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info111, align 8, !dbg !3772
  %arrayidx112 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %206, i64 %idxprom108, !dbg !3770
  %207 = bitcast %struct.Atrac3pWavesData* %arrayidx112 to i8*, !dbg !3773
  %208 = bitcast %struct.Atrac3pWavesData* %SWAP_tmp to i8*, !dbg !3773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %208, i64 40, i32 4, i1 false), !dbg !3774
  br label %do.end, !dbg !3776

do.end:                                           ; preds = %do.body
  br label %if.end113, !dbg !3777

if.end113:                                        ; preds = %do.end, %if.end86
  br label %for.inc114, !dbg !3779

for.inc114:                                       ; preds = %if.end113
  %209 = load i32, i32* %i, align 4, !dbg !3780
  %inc115 = add nsw i32 %209, 1, !dbg !3780
  store i32 %inc115, i32* %i, align 4, !dbg !3780
  br label %for.cond65, !dbg !3782, !llvm.loop !3783

for.end116:                                       ; preds = %for.cond65
  br label %if.end117, !dbg !3785

if.end117:                                        ; preds = %for.end116, %for.end62
  store i32 0, i32* %retval, align 4, !dbg !3786
  br label %return, !dbg !3786

return:                                           ; preds = %if.end117, %if.then55, %if.then9, %if.then
  %210 = load i32, i32* %retval, align 4, !dbg !3787
  ret i32 %210, !dbg !3787
}

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !3788 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !3792, metadata !1324), !dbg !3793
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !3794, metadata !1324), !dbg !3795
  %0 = load i32, i32* %a.addr, align 4, !dbg !3796
  %1 = load i8, i8* %s.addr, align 1, !dbg !3797
  %conv = sext i8 %1 to i32, !dbg !3797
  %sub = sub nsw i32 0, %conv, !dbg !3798
  %conv1 = trunc i32 %sub to i8, !dbg !3799
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !3796, !srcloc !3800
  store i32 %2, i32* %a.addr, align 4, !dbg !3796
  %3 = load i32, i32* %a.addr, align 4, !dbg !3801
  ret i32 %3, !dbg !3802
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal i32 @decode_channel_wordlen(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, %struct.AVCodecContext* %avctx) #3 !dbg !3803 {
entry:
  %x.addr.i96.i1173 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i1173, metadata !2531, metadata !1324), !dbg !3804
  %x.addr.i81.i1174 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i1174, metadata !2531, metadata !1324), !dbg !3813
  %x.addr.i.i1175 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i1175, metadata !2531, metadata !1324), !dbg !3815
  %s.addr.i1176 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i1176, metadata !3291, metadata !1324), !dbg !3817
  %table.addr.i1177 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i1177, metadata !3293, metadata !1324), !dbg !3818
  %bits.addr.i1178 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i1178, metadata !3295, metadata !1324), !dbg !3819
  %max_depth.addr.i1179 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i1179, metadata !3297, metadata !1324), !dbg !3820
  %code.i1180 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i1180, metadata !3299, metadata !1324), !dbg !3821
  %re_index.i1181 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i1181, metadata !3301, metadata !1324), !dbg !3822
  %re_cache.i1182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i1182, metadata !3303, metadata !1324), !dbg !3823
  %re_size_plus8.i1183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i1183, metadata !3305, metadata !1324), !dbg !3824
  %n.i1184 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i1184, metadata !3307, metadata !1324), !dbg !3825
  %nb_bits.i1185 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i1185, metadata !3309, metadata !1324), !dbg !3826
  %index1.i1186 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i1186, metadata !3311, metadata !1324), !dbg !3827
  %x.addr.i96.i1027 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i1027, metadata !2531, metadata !1324), !dbg !3828
  %x.addr.i81.i1028 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i1028, metadata !2531, metadata !1324), !dbg !3837
  %x.addr.i.i1029 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i1029, metadata !2531, metadata !1324), !dbg !3839
  %s.addr.i1030 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i1030, metadata !3291, metadata !1324), !dbg !3841
  %table.addr.i1031 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i1031, metadata !3293, metadata !1324), !dbg !3842
  %bits.addr.i1032 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i1032, metadata !3295, metadata !1324), !dbg !3843
  %max_depth.addr.i1033 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i1033, metadata !3297, metadata !1324), !dbg !3844
  %code.i1034 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i1034, metadata !3299, metadata !1324), !dbg !3845
  %re_index.i1035 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i1035, metadata !3301, metadata !1324), !dbg !3846
  %re_cache.i1036 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i1036, metadata !3303, metadata !1324), !dbg !3847
  %re_size_plus8.i1037 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i1037, metadata !3305, metadata !1324), !dbg !3848
  %n.i1038 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i1038, metadata !3307, metadata !1324), !dbg !3849
  %nb_bits.i1039 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i1039, metadata !3309, metadata !1324), !dbg !3850
  %index1.i1040 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i1040, metadata !3311, metadata !1324), !dbg !3851
  %x.addr.i96.i881 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i881, metadata !2531, metadata !1324), !dbg !3852
  %x.addr.i81.i882 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i882, metadata !2531, metadata !1324), !dbg !3859
  %x.addr.i.i883 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i883, metadata !2531, metadata !1324), !dbg !3861
  %s.addr.i884 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i884, metadata !3291, metadata !1324), !dbg !3863
  %table.addr.i885 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i885, metadata !3293, metadata !1324), !dbg !3864
  %bits.addr.i886 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i886, metadata !3295, metadata !1324), !dbg !3865
  %max_depth.addr.i887 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i887, metadata !3297, metadata !1324), !dbg !3866
  %code.i888 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i888, metadata !3299, metadata !1324), !dbg !3867
  %re_index.i889 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i889, metadata !3301, metadata !1324), !dbg !3868
  %re_cache.i890 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i890, metadata !3303, metadata !1324), !dbg !3869
  %re_size_plus8.i891 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i891, metadata !3305, metadata !1324), !dbg !3870
  %n.i892 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i892, metadata !3307, metadata !1324), !dbg !3871
  %nb_bits.i893 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i893, metadata !3309, metadata !1324), !dbg !3872
  %index1.i894 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i894, metadata !3311, metadata !1324), !dbg !3873
  %x.addr.i96.i735 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i735, metadata !2531, metadata !1324), !dbg !3874
  %x.addr.i81.i736 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i736, metadata !2531, metadata !1324), !dbg !3877
  %x.addr.i.i737 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i737, metadata !2531, metadata !1324), !dbg !3879
  %s.addr.i738 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i738, metadata !3291, metadata !1324), !dbg !3881
  %table.addr.i739 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i739, metadata !3293, metadata !1324), !dbg !3882
  %bits.addr.i740 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i740, metadata !3295, metadata !1324), !dbg !3883
  %max_depth.addr.i741 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i741, metadata !3297, metadata !1324), !dbg !3884
  %code.i742 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i742, metadata !3299, metadata !1324), !dbg !3885
  %re_index.i743 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i743, metadata !3301, metadata !1324), !dbg !3886
  %re_cache.i744 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i744, metadata !3303, metadata !1324), !dbg !3887
  %re_size_plus8.i745 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i745, metadata !3305, metadata !1324), !dbg !3888
  %n.i746 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i746, metadata !3307, metadata !1324), !dbg !3889
  %nb_bits.i747 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i747, metadata !3309, metadata !1324), !dbg !3890
  %index1.i748 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i748, metadata !3311, metadata !1324), !dbg !3891
  %x.addr.i96.i589 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i589, metadata !2531, metadata !1324), !dbg !3892
  %x.addr.i81.i590 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i590, metadata !2531, metadata !1324), !dbg !3899
  %x.addr.i.i591 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i591, metadata !2531, metadata !1324), !dbg !3901
  %s.addr.i592 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i592, metadata !3291, metadata !1324), !dbg !3903
  %table.addr.i593 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i593, metadata !3293, metadata !1324), !dbg !3904
  %bits.addr.i594 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i594, metadata !3295, metadata !1324), !dbg !3905
  %max_depth.addr.i595 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i595, metadata !3297, metadata !1324), !dbg !3906
  %code.i596 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i596, metadata !3299, metadata !1324), !dbg !3907
  %re_index.i597 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i597, metadata !3301, metadata !1324), !dbg !3908
  %re_cache.i598 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i598, metadata !3303, metadata !1324), !dbg !3909
  %re_size_plus8.i599 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i599, metadata !3305, metadata !1324), !dbg !3910
  %n.i600 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i600, metadata !3307, metadata !1324), !dbg !3911
  %nb_bits.i601 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i601, metadata !3309, metadata !1324), !dbg !3912
  %index1.i602 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i602, metadata !3311, metadata !1324), !dbg !3913
  %x.addr.i96.i443 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i443, metadata !2531, metadata !1324), !dbg !3914
  %x.addr.i81.i444 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i444, metadata !2531, metadata !1324), !dbg !3921
  %x.addr.i.i445 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i445, metadata !2531, metadata !1324), !dbg !3923
  %s.addr.i446 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i446, metadata !3291, metadata !1324), !dbg !3925
  %table.addr.i447 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i447, metadata !3293, metadata !1324), !dbg !3926
  %bits.addr.i448 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i448, metadata !3295, metadata !1324), !dbg !3927
  %max_depth.addr.i449 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i449, metadata !3297, metadata !1324), !dbg !3928
  %code.i450 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i450, metadata !3299, metadata !1324), !dbg !3929
  %re_index.i451 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i451, metadata !3301, metadata !1324), !dbg !3930
  %re_cache.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i452, metadata !3303, metadata !1324), !dbg !3931
  %re_size_plus8.i453 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i453, metadata !3305, metadata !1324), !dbg !3932
  %n.i454 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i454, metadata !3307, metadata !1324), !dbg !3933
  %nb_bits.i455 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i455, metadata !3309, metadata !1324), !dbg !3934
  %index1.i456 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i456, metadata !3311, metadata !1324), !dbg !3935
  %x.addr.i96.i297 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i297, metadata !2531, metadata !1324), !dbg !3936
  %x.addr.i81.i298 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i298, metadata !2531, metadata !1324), !dbg !3939
  %x.addr.i.i299 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i299, metadata !2531, metadata !1324), !dbg !3941
  %s.addr.i300 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i300, metadata !3291, metadata !1324), !dbg !3943
  %table.addr.i301 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i301, metadata !3293, metadata !1324), !dbg !3944
  %bits.addr.i302 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i302, metadata !3295, metadata !1324), !dbg !3945
  %max_depth.addr.i303 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i303, metadata !3297, metadata !1324), !dbg !3946
  %code.i304 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i304, metadata !3299, metadata !1324), !dbg !3947
  %re_index.i305 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i305, metadata !3301, metadata !1324), !dbg !3948
  %re_cache.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i306, metadata !3303, metadata !1324), !dbg !3949
  %re_size_plus8.i307 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i307, metadata !3305, metadata !1324), !dbg !3950
  %n.i308 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i308, metadata !3307, metadata !1324), !dbg !3951
  %nb_bits.i309 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i309, metadata !3309, metadata !1324), !dbg !3952
  %index1.i310 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i310, metadata !3311, metadata !1324), !dbg !3953
  %s.addr.i292 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i292, metadata !3954, metadata !1324), !dbg !3958
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !3966, metadata !1324), !dbg !3967
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !3968
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !3977
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !3979
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !3981
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !3982
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !3983
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !3984
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !3985
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !3986
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !3987
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !3988
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !3989
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !3990
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !3991
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %weight_idx = alloca i32, align 4
  %delta = alloca i32, align 4
  %diff = alloca i32, align 4
  %pos = alloca i32, align 4
  %delta_bits = alloca i32, align 4
  %min_val = alloca i32, align 4
  %flag = alloca i32, align 4
  %ret = alloca i32, align 4
  %start_val = alloca i32, align 4
  %vlc_tab = alloca %struct.VLC*, align 8
  %chan = alloca %struct.Atrac3pChanParams*, align 8
  %ref_chan = alloca %struct.Atrac3pChanParams*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3992, metadata !1324), !dbg !3993
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !3994, metadata !1324), !dbg !3995
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !3996, metadata !1324), !dbg !3997
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3998, metadata !1324), !dbg !3999
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4000, metadata !1324), !dbg !4001
  call void @llvm.dbg.declare(metadata i32* %weight_idx, metadata !4002, metadata !1324), !dbg !4003
  store i32 0, i32* %weight_idx, align 4, !dbg !4003
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !4004, metadata !1324), !dbg !4005
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !4006, metadata !1324), !dbg !4007
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !4008, metadata !1324), !dbg !4009
  call void @llvm.dbg.declare(metadata i32* %delta_bits, metadata !4010, metadata !1324), !dbg !4011
  call void @llvm.dbg.declare(metadata i32* %min_val, metadata !4012, metadata !1324), !dbg !4013
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !4014, metadata !1324), !dbg !4015
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4016, metadata !1324), !dbg !4017
  call void @llvm.dbg.declare(metadata i32* %start_val, metadata !4018, metadata !1324), !dbg !4019
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc_tab, metadata !4020, metadata !1324), !dbg !4021
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan, metadata !4022, metadata !1324), !dbg !4023
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !4024
  %idxprom = sext i32 %0 to i64, !dbg !4025
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !4025
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !4026
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !4025
  store %struct.Atrac3pChanParams* %arrayidx, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4023
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %ref_chan, metadata !4027, metadata !1324), !dbg !4028
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !4029
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 12, !dbg !4030
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !4029
  store %struct.Atrac3pChanParams* %arrayidx2, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !4028
  %3 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4031
  %fill_mode = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %3, i32 0, i32 2, !dbg !4032
  store i32 0, i32* %fill_mode, align 8, !dbg !4033
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4034
  %call = call i32 @get_bits(%struct.GetBitContext* %4, i32 2), !dbg !4035
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb70
    i32 3, label %sw.bb211
  ], !dbg !4036

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4037
  br label %for.cond, !dbg !4039

for.cond:                                         ; preds = %for.inc, %sw.bb
  %5 = load i32, i32* %i, align 4, !dbg !4040
  %6 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !4043
  %num_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %6, i32 0, i32 1, !dbg !4044
  %7 = load i32, i32* %num_quant_units, align 4, !dbg !4044
  %cmp = icmp slt i32 %5, %7, !dbg !4045
  br i1 %cmp, label %for.body, label %for.end, !dbg !4046

for.body:                                         ; preds = %for.cond
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4047
  %call3 = call i32 @get_bits(%struct.GetBitContext* %8, i32 3), !dbg !4048
  %9 = load i32, i32* %i, align 4, !dbg !4049
  %idxprom4 = sext i32 %9 to i64, !dbg !4050
  %10 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4050
  %qu_wordlen = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %10, i32 0, i32 5, !dbg !4051
  %arrayidx5 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen, i64 0, i64 %idxprom4, !dbg !4050
  store i32 %call3, i32* %arrayidx5, align 4, !dbg !4052
  br label %for.inc, !dbg !4050

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !4053
  %inc = add nsw i32 %11, 1, !dbg !4053
  store i32 %inc, i32* %i, align 4, !dbg !4053
  br label %for.cond, !dbg !4055, !llvm.loop !4056

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4058

sw.bb6:                                           ; preds = %entry
  %12 = load i32, i32* %ch_num.addr, align 4, !dbg !4059
  %tobool = icmp ne i32 %12, 0, !dbg !4059
  br i1 %tobool, label %if.then, label %if.else, !dbg !4060

if.then:                                          ; preds = %sw.bb6
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4061
  %14 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4063
  %15 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !4064
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4065
  %call7 = call i32 @num_coded_units(%struct.GetBitContext* %13, %struct.Atrac3pChanParams* %14, %struct.Atrac3pChanUnitCtx* %15, %struct.AVCodecContext* %16), !dbg !4066
  store i32 %call7, i32* %ret, align 4, !dbg !4067
  %cmp8 = icmp slt i32 %call7, 0, !dbg !4068
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !4069

if.then9:                                         ; preds = %if.then
  %17 = load i32, i32* %ret, align 4, !dbg !4070
  store i32 %17, i32* %retval, align 4, !dbg !4071
  br label %return, !dbg !4071

if.end:                                           ; preds = %if.then
  %18 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4072
  %num_coded_vals = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %18, i32 0, i32 1, !dbg !4073
  %19 = load i32, i32* %num_coded_vals, align 4, !dbg !4073
  %tobool10 = icmp ne i32 %19, 0, !dbg !4072
  br i1 %tobool10, label %if.then11, label %if.end29, !dbg !4074

if.then11:                                        ; preds = %if.end
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4075
  %call12 = call i32 @get_bits(%struct.GetBitContext* %20, i32 2), !dbg !4076
  %idxprom13 = zext i32 %call12 to i64, !dbg !4077
  %arrayidx14 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom13, !dbg !4077
  store %struct.VLC* %arrayidx14, %struct.VLC** %vlc_tab, align 8, !dbg !4078
  store i32 0, i32* %i, align 4, !dbg !4079
  br label %for.cond15, !dbg !4080

for.cond15:                                       ; preds = %for.inc26, %if.then11
  %21 = load i32, i32* %i, align 4, !dbg !4081
  %22 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4083
  %num_coded_vals16 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %22, i32 0, i32 1, !dbg !4084
  %23 = load i32, i32* %num_coded_vals16, align 4, !dbg !4084
  %cmp17 = icmp slt i32 %21, %23, !dbg !4085
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !4086

for.body18:                                       ; preds = %for.cond15
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4087
  %25 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4088
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %25, i32 0, i32 1, !dbg !4089
  %26 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !4089
  %27 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4090
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %27, i32 0, i32 0, !dbg !4091
  %28 = load i32, i32* %bits, align 8, !dbg !4091
  store %struct.GetBitContext* %24, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4092
  store [2 x i16]* %26, [2 x i16]** %table.addr.i, align 8, !dbg !4092
  store i32 %28, i32* %bits.addr.i, align 4, !dbg !4092
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !4092
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4093
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %29, i32 0, i32 2, !dbg !4094
  %30 = load i32, i32* %index.i, align 8, !dbg !4094
  store i32 %30, i32* %re_index.i, align 4, !dbg !3986
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4095
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %31, i32 0, i32 4, !dbg !4096
  %32 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !4096
  store i32 %32, i32* %re_size_plus8.i, align 4, !dbg !3988
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4097
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %33, i32 0, i32 0, !dbg !4098
  %34 = load i8*, i8** %buffer.i, align 8, !dbg !4098
  %35 = load i32, i32* %re_index.i, align 4, !dbg !4099
  %shr.i = lshr i32 %35, 3, !dbg !4100
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !4101
  %add.ptr.i = getelementptr inbounds i8, i8* %34, i64 %idx.ext.i, !dbg !4101
  %36 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !4102
  %l.i = bitcast %union.unaligned_32* %36 to i32*, !dbg !4102
  %37 = load i32, i32* %l.i, align 1, !dbg !4102
  store i32 %37, i32* %x.addr.i.i, align 4, !dbg !4103
  %38 = load i32, i32* %x.addr.i.i, align 4, !dbg !4104
  %shl.i.i = shl i32 %38, 8, !dbg !4105
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !4106
  %39 = load i32, i32* %x.addr.i.i, align 4, !dbg !4107
  %shr.i.i = lshr i32 %39, 8, !dbg !4108
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !4109
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !4110
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !4111
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !4112
  %shr3.i.i = lshr i32 %40, 16, !dbg !4113
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !4114
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !4115
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !4116
  %shr6.i.i = lshr i32 %41, 16, !dbg !4117
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !4118
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !4119
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !4120
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !4121
  %42 = load i32, i32* %re_index.i, align 4, !dbg !4122
  %and.i = and i32 %42, 7, !dbg !4123
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !4124
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !4125
  %43 = load i32, i32* %re_cache.i, align 4, !dbg !4126
  %44 = load i32, i32* %bits.addr.i, align 4, !dbg !4127
  %conv.i = trunc i32 %44 to i8, !dbg !4127
  %call2.i = call i32 @NEG_USR32(i32 %43, i8 signext %conv.i) #9, !dbg !4128
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !4129
  %45 = load i32, i32* %index1.i, align 4, !dbg !4130
  %idxprom.i = zext i32 %45 to i64, !dbg !4131
  %46 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4131
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %46, i64 %idxprom.i, !dbg !4131
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !4131
  %47 = load i16, i16* %arrayidx3.i, align 2, !dbg !4131
  %conv4.i = sext i16 %47 to i32, !dbg !4131
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !4132
  %48 = load i32, i32* %index1.i, align 4, !dbg !4133
  %idxprom5.i = zext i32 %48 to i64, !dbg !4134
  %49 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4134
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %49, i64 %idxprom5.i, !dbg !4134
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !4134
  %50 = load i16, i16* %arrayidx7.i, align 2, !dbg !4134
  %conv8.i = sext i16 %50 to i32, !dbg !4134
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !4135
  %51 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4136
  %cmp.i = icmp sgt i32 %51, 1, !dbg !4137
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !4138

land.lhs.true.i:                                  ; preds = %for.body18
  %52 = load i32, i32* %n.i, align 4, !dbg !4139
  %cmp10.i = icmp slt i32 %52, 0, !dbg !4140
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !4141

if.then.i:                                        ; preds = %land.lhs.true.i
  %53 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4142
  %54 = load i32, i32* %re_index.i, align 4, !dbg !4143
  %55 = load i32, i32* %bits.addr.i, align 4, !dbg !4144
  %add.i = add i32 %54, %55, !dbg !4145
  %cmp12.i = icmp ugt i32 %53, %add.i, !dbg !4146
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !4147

cond.true.i:                                      ; preds = %if.then.i
  %56 = load i32, i32* %re_index.i, align 4, !dbg !4148
  %57 = load i32, i32* %bits.addr.i, align 4, !dbg !4149
  %add14.i = add i32 %56, %57, !dbg !4150
  br label %cond.end.i, !dbg !4151

cond.false.i:                                     ; preds = %if.then.i
  %58 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4152
  br label %cond.end.i, !dbg !4153

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %58, %cond.false.i ], !dbg !4154
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !4155
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4156
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %59, i32 0, i32 0, !dbg !4157
  %60 = load i8*, i8** %buffer15.i, align 8, !dbg !4157
  %61 = load i32, i32* %re_index.i, align 4, !dbg !4158
  %shr16.i = lshr i32 %61, 3, !dbg !4159
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !4160
  %add.ptr18.i = getelementptr inbounds i8, i8* %60, i64 %idx.ext17.i, !dbg !4160
  %62 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !4161
  %l19.i = bitcast %union.unaligned_32* %62 to i32*, !dbg !4161
  %63 = load i32, i32* %l19.i, align 1, !dbg !4161
  store i32 %63, i32* %x.addr.i81.i, align 4, !dbg !4162
  %64 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4163
  %shl.i82.i = shl i32 %64, 8, !dbg !4164
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !4165
  %65 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4166
  %shr.i84.i = lshr i32 %65, 8, !dbg !4167
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !4168
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !4169
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !4170
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4171
  %shr3.i88.i = lshr i32 %66, 16, !dbg !4172
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !4173
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !4174
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !4175
  %shr6.i91.i = lshr i32 %67, 16, !dbg !4176
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !4177
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !4178
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !4179
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !4180
  %68 = load i32, i32* %re_index.i, align 4, !dbg !4181
  %and21.i = and i32 %68, 7, !dbg !4182
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !4183
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !4184
  %69 = load i32, i32* %n.i, align 4, !dbg !4185
  %sub.i = sub nsw i32 0, %69, !dbg !4186
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !4187
  %70 = load i32, i32* %re_cache.i, align 4, !dbg !4188
  %71 = load i32, i32* %nb_bits.i, align 4, !dbg !4189
  %conv23.i = trunc i32 %71 to i8, !dbg !4189
  %call24.i = call i32 @NEG_USR32(i32 %70, i8 signext %conv23.i) #9, !dbg !4190
  %72 = load i32, i32* %code.i, align 4, !dbg !4191
  %add25.i = add i32 %call24.i, %72, !dbg !4192
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !4193
  %73 = load i32, i32* %index1.i, align 4, !dbg !4194
  %idxprom26.i = zext i32 %73 to i64, !dbg !4195
  %74 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4195
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %74, i64 %idxprom26.i, !dbg !4195
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !4195
  %75 = load i16, i16* %arrayidx28.i, align 2, !dbg !4195
  %conv29.i = sext i16 %75 to i32, !dbg !4195
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !4196
  %76 = load i32, i32* %index1.i, align 4, !dbg !4197
  %idxprom30.i = zext i32 %76 to i64, !dbg !4198
  %77 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4198
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %77, i64 %idxprom30.i, !dbg !4198
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !4198
  %78 = load i16, i16* %arrayidx32.i, align 2, !dbg !4198
  %conv33.i = sext i16 %78 to i32, !dbg !4198
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !4199
  %79 = load i32, i32* %max_depth.addr.i, align 4, !dbg !4200
  %cmp34.i = icmp sgt i32 %79, 2, !dbg !4201
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !4202

land.lhs.true36.i:                                ; preds = %cond.end.i
  %80 = load i32, i32* %n.i, align 4, !dbg !4203
  %cmp37.i = icmp slt i32 %80, 0, !dbg !4204
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !4205

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %81 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4206
  %82 = load i32, i32* %re_index.i, align 4, !dbg !4207
  %83 = load i32, i32* %nb_bits.i, align 4, !dbg !4208
  %add40.i = add i32 %82, %83, !dbg !4209
  %cmp41.i = icmp ugt i32 %81, %add40.i, !dbg !4210
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !4211

cond.true43.i:                                    ; preds = %if.then39.i
  %84 = load i32, i32* %re_index.i, align 4, !dbg !4212
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !4213
  %add44.i = add i32 %84, %85, !dbg !4214
  br label %cond.end46.i, !dbg !4215

cond.false45.i:                                   ; preds = %if.then39.i
  %86 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4216
  br label %cond.end46.i, !dbg !4217

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %86, %cond.false45.i ], !dbg !4218
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !4219
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4220
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %87, i32 0, i32 0, !dbg !4221
  %88 = load i8*, i8** %buffer48.i, align 8, !dbg !4221
  %89 = load i32, i32* %re_index.i, align 4, !dbg !4222
  %shr49.i = lshr i32 %89, 3, !dbg !4223
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !4224
  %add.ptr51.i = getelementptr inbounds i8, i8* %88, i64 %idx.ext50.i, !dbg !4224
  %90 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !4225
  %l52.i = bitcast %union.unaligned_32* %90 to i32*, !dbg !4225
  %91 = load i32, i32* %l52.i, align 1, !dbg !4225
  store i32 %91, i32* %x.addr.i96.i, align 4, !dbg !4226
  %92 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4227
  %shl.i97.i = shl i32 %92, 8, !dbg !4228
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !4229
  %93 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4230
  %shr.i99.i = lshr i32 %93, 8, !dbg !4231
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !4232
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !4233
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !4234
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4235
  %shr3.i103.i = lshr i32 %94, 16, !dbg !4236
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !4237
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !4238
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !4239
  %shr6.i106.i = lshr i32 %95, 16, !dbg !4240
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !4241
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !4242
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !4243
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !4244
  %96 = load i32, i32* %re_index.i, align 4, !dbg !4245
  %and54.i = and i32 %96, 7, !dbg !4246
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !4247
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !4248
  %97 = load i32, i32* %n.i, align 4, !dbg !4249
  %sub56.i = sub nsw i32 0, %97, !dbg !4250
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !4251
  %98 = load i32, i32* %re_cache.i, align 4, !dbg !4252
  %99 = load i32, i32* %nb_bits.i, align 4, !dbg !4253
  %conv57.i = trunc i32 %99 to i8, !dbg !4253
  %call58.i = call i32 @NEG_USR32(i32 %98, i8 signext %conv57.i) #9, !dbg !4254
  %100 = load i32, i32* %code.i, align 4, !dbg !4255
  %add59.i = add i32 %call58.i, %100, !dbg !4256
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !4257
  %101 = load i32, i32* %index1.i, align 4, !dbg !4258
  %idxprom60.i = zext i32 %101 to i64, !dbg !4259
  %102 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4259
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %102, i64 %idxprom60.i, !dbg !4259
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !4259
  %103 = load i16, i16* %arrayidx62.i, align 2, !dbg !4259
  %conv63.i = sext i16 %103 to i32, !dbg !4259
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !4260
  %104 = load i32, i32* %index1.i, align 4, !dbg !4261
  %idxprom64.i = zext i32 %104 to i64, !dbg !4262
  %105 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !4262
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %105, i64 %idxprom64.i, !dbg !4262
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !4262
  %106 = load i16, i16* %arrayidx66.i, align 2, !dbg !4262
  %conv67.i = sext i16 %106 to i32, !dbg !4262
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !4263
  br label %if.end.i, !dbg !4264

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !4265

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body18
  %107 = load i32, i32* %n.i, align 4, !dbg !4266
  %108 = load i32, i32* %re_cache.i, align 4, !dbg !4267
  %shl70.i = shl i32 %108, %107, !dbg !4267
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !4267
  %109 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4268
  %110 = load i32, i32* %re_index.i, align 4, !dbg !4269
  %111 = load i32, i32* %n.i, align 4, !dbg !4270
  %add71.i = add i32 %110, %111, !dbg !4271
  %cmp72.i = icmp ugt i32 %109, %add71.i, !dbg !4272
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !4273

cond.true74.i:                                    ; preds = %if.end68.i
  %112 = load i32, i32* %re_index.i, align 4, !dbg !4274
  %113 = load i32, i32* %n.i, align 4, !dbg !4275
  %add75.i = add i32 %112, %113, !dbg !4276
  br label %get_vlc2.exit, !dbg !4277

cond.false76.i:                                   ; preds = %if.end68.i
  %114 = load i32, i32* %re_size_plus8.i, align 4, !dbg !4278
  br label %get_vlc2.exit, !dbg !4279

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %114, %cond.false76.i ], !dbg !4280
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !4281
  %115 = load i32, i32* %re_index.i, align 4, !dbg !4282
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4283
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %116, i32 0, i32 2, !dbg !4284
  store i32 %115, i32* %index80.i, align 8, !dbg !4285
  %117 = load i32, i32* %code.i, align 4, !dbg !4286
  store i32 %117, i32* %delta, align 4, !dbg !4287
  %118 = load i32, i32* %i, align 4, !dbg !4288
  %idxprom20 = sext i32 %118 to i64, !dbg !4289
  %119 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !4289
  %qu_wordlen21 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %119, i32 0, i32 5, !dbg !4290
  %arrayidx22 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen21, i64 0, i64 %idxprom20, !dbg !4289
  %120 = load i32, i32* %arrayidx22, align 4, !dbg !4289
  %121 = load i32, i32* %delta, align 4, !dbg !4291
  %add = add nsw i32 %120, %121, !dbg !4292
  %and = and i32 %add, 7, !dbg !4293
  %122 = load i32, i32* %i, align 4, !dbg !4294
  %idxprom23 = sext i32 %122 to i64, !dbg !4295
  %123 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4295
  %qu_wordlen24 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %123, i32 0, i32 5, !dbg !4296
  %arrayidx25 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen24, i64 0, i64 %idxprom23, !dbg !4295
  store i32 %and, i32* %arrayidx25, align 4, !dbg !4297
  br label %for.inc26, !dbg !4298

for.inc26:                                        ; preds = %get_vlc2.exit
  %124 = load i32, i32* %i, align 4, !dbg !4299
  %inc27 = add nsw i32 %124, 1, !dbg !4299
  store i32 %inc27, i32* %i, align 4, !dbg !4299
  br label %for.cond15, !dbg !4301, !llvm.loop !4302

for.end28:                                        ; preds = %for.cond15
  br label %if.end29, !dbg !4304

if.end29:                                         ; preds = %for.end28, %if.end
  br label %if.end69, !dbg !4305

if.else:                                          ; preds = %sw.bb6
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4306
  %call30 = call i32 @get_bits(%struct.GetBitContext* %125, i32 2), !dbg !4307
  store i32 %call30, i32* %weight_idx, align 4, !dbg !4308
  %126 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4309
  %127 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4311
  %128 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !4312
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4313
  %call31 = call i32 @num_coded_units(%struct.GetBitContext* %126, %struct.Atrac3pChanParams* %127, %struct.Atrac3pChanUnitCtx* %128, %struct.AVCodecContext* %129), !dbg !4314
  store i32 %call31, i32* %ret, align 4, !dbg !4315
  %cmp32 = icmp slt i32 %call31, 0, !dbg !4316
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !4317

if.then33:                                        ; preds = %if.else
  %130 = load i32, i32* %ret, align 4, !dbg !4318
  store i32 %130, i32* %retval, align 4, !dbg !4319
  br label %return, !dbg !4319

if.end34:                                         ; preds = %if.else
  %131 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4320
  %num_coded_vals35 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %131, i32 0, i32 1, !dbg !4321
  %132 = load i32, i32* %num_coded_vals35, align 4, !dbg !4321
  %tobool36 = icmp ne i32 %132, 0, !dbg !4320
  br i1 %tobool36, label %if.then37, label %if.end68, !dbg !4322

if.then37:                                        ; preds = %if.end34
  %133 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4323
  %call38 = call i32 @get_bits(%struct.GetBitContext* %133, i32 5), !dbg !4324
  store i32 %call38, i32* %pos, align 4, !dbg !4325
  %134 = load i32, i32* %pos, align 4, !dbg !4326
  %135 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4328
  %num_coded_vals39 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %135, i32 0, i32 1, !dbg !4329
  %136 = load i32, i32* %num_coded_vals39, align 4, !dbg !4329
  %cmp40 = icmp sgt i32 %134, %136, !dbg !4330
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !4331

if.then41:                                        ; preds = %if.then37
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4332
  %138 = bitcast %struct.AVCodecContext* %137 to i8*, !dbg !4332
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0)), !dbg !4334
  store i32 -1094995529, i32* %retval, align 4, !dbg !4335
  br label %return, !dbg !4335

if.end42:                                         ; preds = %if.then37
  %139 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4336
  %call43 = call i32 @get_bits(%struct.GetBitContext* %139, i32 2), !dbg !4337
  store i32 %call43, i32* %delta_bits, align 4, !dbg !4338
  %140 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4339
  %call44 = call i32 @get_bits(%struct.GetBitContext* %140, i32 3), !dbg !4340
  store i32 %call44, i32* %min_val, align 4, !dbg !4341
  store i32 0, i32* %i, align 4, !dbg !4342
  br label %for.cond45, !dbg !4344

for.cond45:                                       ; preds = %for.inc52, %if.end42
  %141 = load i32, i32* %i, align 4, !dbg !4345
  %142 = load i32, i32* %pos, align 4, !dbg !4348
  %cmp46 = icmp slt i32 %141, %142, !dbg !4349
  br i1 %cmp46, label %for.body47, label %for.end54, !dbg !4350

for.body47:                                       ; preds = %for.cond45
  %143 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4351
  %call48 = call i32 @get_bits(%struct.GetBitContext* %143, i32 3), !dbg !4352
  %144 = load i32, i32* %i, align 4, !dbg !4353
  %idxprom49 = sext i32 %144 to i64, !dbg !4354
  %145 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4354
  %qu_wordlen50 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %145, i32 0, i32 5, !dbg !4355
  %arrayidx51 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen50, i64 0, i64 %idxprom49, !dbg !4354
  store i32 %call48, i32* %arrayidx51, align 4, !dbg !4356
  br label %for.inc52, !dbg !4354

for.inc52:                                        ; preds = %for.body47
  %146 = load i32, i32* %i, align 4, !dbg !4357
  %inc53 = add nsw i32 %146, 1, !dbg !4357
  store i32 %inc53, i32* %i, align 4, !dbg !4357
  br label %for.cond45, !dbg !4359, !llvm.loop !4360

for.end54:                                        ; preds = %for.cond45
  %147 = load i32, i32* %pos, align 4, !dbg !4362
  store i32 %147, i32* %i, align 4, !dbg !4363
  br label %for.cond55, !dbg !4364

for.cond55:                                       ; preds = %for.inc65, %for.end54
  %148 = load i32, i32* %i, align 4, !dbg !4365
  %149 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4367
  %num_coded_vals56 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %149, i32 0, i32 1, !dbg !4368
  %150 = load i32, i32* %num_coded_vals56, align 4, !dbg !4368
  %cmp57 = icmp slt i32 %148, %150, !dbg !4369
  br i1 %cmp57, label %for.body58, label %for.end67, !dbg !4370

for.body58:                                       ; preds = %for.cond55
  %151 = load i32, i32* %min_val, align 4, !dbg !4371
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4372
  %153 = load i32, i32* %delta_bits, align 4, !dbg !4373
  store %struct.GetBitContext* %152, %struct.GetBitContext** %s.addr.i292, align 8, !dbg !4374
  store i32 %153, i32* %n.addr.i, align 4, !dbg !4374
  %154 = load i32, i32* %n.addr.i, align 4, !dbg !4375
  %tobool.i = icmp ne i32 %154, 0, !dbg !4375
  br i1 %tobool.i, label %cond.true.i293, label %cond.false.i294, !dbg !4375

cond.true.i293:                                   ; preds = %for.body58
  %155 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i292, align 8, !dbg !4376
  %156 = load i32, i32* %n.addr.i, align 4, !dbg !4378
  %call.i = call i32 @get_bits(%struct.GetBitContext* %155, i32 %156) #9, !dbg !4379
  br label %get_bitsz.exit, !dbg !4380

cond.false.i294:                                  ; preds = %for.body58
  br label %get_bitsz.exit, !dbg !4381

get_bitsz.exit:                                   ; preds = %cond.true.i293, %cond.false.i294
  %cond.i295 = phi i32 [ %call.i, %cond.true.i293 ], [ 0, %cond.false.i294 ], !dbg !4383
  %add60 = add nsw i32 %151, %cond.i295, !dbg !4385
  %and61 = and i32 %add60, 7, !dbg !4386
  %157 = load i32, i32* %i, align 4, !dbg !4387
  %idxprom62 = sext i32 %157 to i64, !dbg !4388
  %158 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4388
  %qu_wordlen63 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %158, i32 0, i32 5, !dbg !4389
  %arrayidx64 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen63, i64 0, i64 %idxprom62, !dbg !4388
  store i32 %and61, i32* %arrayidx64, align 4, !dbg !4390
  br label %for.inc65, !dbg !4388

for.inc65:                                        ; preds = %get_bitsz.exit
  %159 = load i32, i32* %i, align 4, !dbg !4391
  %inc66 = add nsw i32 %159, 1, !dbg !4391
  store i32 %inc66, i32* %i, align 4, !dbg !4391
  br label %for.cond55, !dbg !4393, !llvm.loop !4394

for.end67:                                        ; preds = %for.cond55
  br label %if.end68, !dbg !4396

if.end68:                                         ; preds = %for.end67, %if.end34
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end29
  br label %sw.epilog, !dbg !4397

sw.bb70:                                          ; preds = %entry
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4398
  %161 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4400
  %162 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !4401
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4402
  %call71 = call i32 @num_coded_units(%struct.GetBitContext* %160, %struct.Atrac3pChanParams* %161, %struct.Atrac3pChanUnitCtx* %162, %struct.AVCodecContext* %163), !dbg !4403
  store i32 %call71, i32* %ret, align 4, !dbg !4404
  %cmp72 = icmp slt i32 %call71, 0, !dbg !4405
  br i1 %cmp72, label %if.then73, label %if.end74, !dbg !4406

if.then73:                                        ; preds = %sw.bb70
  %164 = load i32, i32* %ret, align 4, !dbg !4407
  store i32 %164, i32* %retval, align 4, !dbg !4408
  br label %return, !dbg !4408

if.end74:                                         ; preds = %sw.bb70
  %165 = load i32, i32* %ch_num.addr, align 4, !dbg !4409
  %tobool75 = icmp ne i32 %165, 0, !dbg !4409
  br i1 %tobool75, label %land.lhs.true, label %if.else118, !dbg !4410

land.lhs.true:                                    ; preds = %if.end74
  %166 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4411
  %num_coded_vals76 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %166, i32 0, i32 1, !dbg !4413
  %167 = load i32, i32* %num_coded_vals76, align 4, !dbg !4413
  %tobool77 = icmp ne i32 %167, 0, !dbg !4411
  br i1 %tobool77, label %if.then78, label %if.else118, !dbg !4414

if.then78:                                        ; preds = %land.lhs.true
  %168 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4415
  %call79 = call i32 @get_bits(%struct.GetBitContext* %168, i32 2), !dbg !4416
  %idxprom80 = zext i32 %call79 to i64, !dbg !4417
  %arrayidx81 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom80, !dbg !4417
  store %struct.VLC* %arrayidx81, %struct.VLC** %vlc_tab, align 8, !dbg !4418
  %169 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4419
  %170 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4420
  %table82 = getelementptr inbounds %struct.VLC, %struct.VLC* %170, i32 0, i32 1, !dbg !4421
  %171 = load [2 x i16]*, [2 x i16]** %table82, align 8, !dbg !4421
  %172 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4422
  %bits83 = getelementptr inbounds %struct.VLC, %struct.VLC* %172, i32 0, i32 0, !dbg !4423
  %173 = load i32, i32* %bits83, align 8, !dbg !4423
  store %struct.GetBitContext* %169, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !4424
  store [2 x i16]* %171, [2 x i16]** %table.addr.i301, align 8, !dbg !4424
  store i32 %173, i32* %bits.addr.i302, align 4, !dbg !4424
  store i32 1, i32* %max_depth.addr.i303, align 4, !dbg !4424
  %174 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !4425
  %index.i311 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %174, i32 0, i32 2, !dbg !4426
  %175 = load i32, i32* %index.i311, align 8, !dbg !4426
  store i32 %175, i32* %re_index.i305, align 4, !dbg !3948
  %176 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !4427
  %size_in_bits_plus8.i312 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %176, i32 0, i32 4, !dbg !4428
  %177 = load i32, i32* %size_in_bits_plus8.i312, align 8, !dbg !4428
  store i32 %177, i32* %re_size_plus8.i307, align 4, !dbg !3950
  %178 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !4429
  %buffer.i313 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %178, i32 0, i32 0, !dbg !4430
  %179 = load i8*, i8** %buffer.i313, align 8, !dbg !4430
  %180 = load i32, i32* %re_index.i305, align 4, !dbg !4431
  %shr.i314 = lshr i32 %180, 3, !dbg !4432
  %idx.ext.i315 = zext i32 %shr.i314 to i64, !dbg !4433
  %add.ptr.i316 = getelementptr inbounds i8, i8* %179, i64 %idx.ext.i315, !dbg !4433
  %181 = bitcast i8* %add.ptr.i316 to %union.unaligned_32*, !dbg !4434
  %l.i317 = bitcast %union.unaligned_32* %181 to i32*, !dbg !4434
  %182 = load i32, i32* %l.i317, align 1, !dbg !4434
  store i32 %182, i32* %x.addr.i.i299, align 4, !dbg !4435
  %183 = load i32, i32* %x.addr.i.i299, align 4, !dbg !4436
  %shl.i.i318 = shl i32 %183, 8, !dbg !4437
  %and.i.i319 = and i32 %shl.i.i318, 65280, !dbg !4438
  %184 = load i32, i32* %x.addr.i.i299, align 4, !dbg !4439
  %shr.i.i320 = lshr i32 %184, 8, !dbg !4440
  %and1.i.i321 = and i32 %shr.i.i320, 255, !dbg !4441
  %or.i.i322 = or i32 %and.i.i319, %and1.i.i321, !dbg !4442
  %shl2.i.i323 = shl i32 %or.i.i322, 16, !dbg !4443
  %185 = load i32, i32* %x.addr.i.i299, align 4, !dbg !4444
  %shr3.i.i324 = lshr i32 %185, 16, !dbg !4445
  %shl4.i.i325 = shl i32 %shr3.i.i324, 8, !dbg !4446
  %and5.i.i326 = and i32 %shl4.i.i325, 65280, !dbg !4447
  %186 = load i32, i32* %x.addr.i.i299, align 4, !dbg !4448
  %shr6.i.i327 = lshr i32 %186, 16, !dbg !4449
  %shr7.i.i328 = lshr i32 %shr6.i.i327, 8, !dbg !4450
  %and8.i.i329 = and i32 %shr7.i.i328, 255, !dbg !4451
  %or9.i.i330 = or i32 %and5.i.i326, %and8.i.i329, !dbg !4452
  %or10.i.i331 = or i32 %shl2.i.i323, %or9.i.i330, !dbg !4453
  %187 = load i32, i32* %re_index.i305, align 4, !dbg !4454
  %and.i332 = and i32 %187, 7, !dbg !4455
  %shl.i333 = shl i32 %or10.i.i331, %and.i332, !dbg !4456
  store i32 %shl.i333, i32* %re_cache.i306, align 4, !dbg !4457
  %188 = load i32, i32* %re_cache.i306, align 4, !dbg !4458
  %189 = load i32, i32* %bits.addr.i302, align 4, !dbg !4459
  %conv.i334 = trunc i32 %189 to i8, !dbg !4459
  %call2.i335 = call i32 @NEG_USR32(i32 %188, i8 signext %conv.i334) #9, !dbg !4460
  store i32 %call2.i335, i32* %index1.i310, align 4, !dbg !4461
  %190 = load i32, i32* %index1.i310, align 4, !dbg !4462
  %idxprom.i336 = zext i32 %190 to i64, !dbg !4463
  %191 = load [2 x i16]*, [2 x i16]** %table.addr.i301, align 8, !dbg !4463
  %arrayidx.i337 = getelementptr inbounds [2 x i16], [2 x i16]* %191, i64 %idxprom.i336, !dbg !4463
  %arrayidx3.i338 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i337, i64 0, i64 0, !dbg !4463
  %192 = load i16, i16* %arrayidx3.i338, align 2, !dbg !4463
  %conv4.i339 = sext i16 %192 to i32, !dbg !4463
  store i32 %conv4.i339, i32* %code.i304, align 4, !dbg !4464
  %193 = load i32, i32* %index1.i310, align 4, !dbg !4465
  %idxprom5.i340 = zext i32 %193 to i64, !dbg !4466
  %194 = load [2 x i16]*, [2 x i16]** %table.addr.i301, align 8, !dbg !4466
  %arrayidx6.i341 = getelementptr inbounds [2 x i16], [2 x i16]* %194, i64 %idxprom5.i340, !dbg !4466
  %arrayidx7.i342 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i341, i64 0, i64 1, !dbg !4466
  %195 = load i16, i16* %arrayidx7.i342, align 2, !dbg !4466
  %conv8.i343 = sext i16 %195 to i32, !dbg !4466
  store i32 %conv8.i343, i32* %n.i308, align 4, !dbg !4467
  %196 = load i32, i32* %max_depth.addr.i303, align 4, !dbg !4468
  %cmp.i344 = icmp sgt i32 %196, 1, !dbg !4469
  br i1 %cmp.i344, label %land.lhs.true.i346, label %if.end68.i433, !dbg !4470

land.lhs.true.i346:                               ; preds = %if.then78
  %197 = load i32, i32* %n.i308, align 4, !dbg !4471
  %cmp10.i345 = icmp slt i32 %197, 0, !dbg !4472
  br i1 %cmp10.i345, label %if.then.i349, label %if.end68.i433, !dbg !4473

if.then.i349:                                     ; preds = %land.lhs.true.i346
  %198 = load i32, i32* %re_size_plus8.i307, align 4, !dbg !4474
  %199 = load i32, i32* %re_index.i305, align 4, !dbg !4475
  %200 = load i32, i32* %bits.addr.i302, align 4, !dbg !4476
  %add.i347 = add i32 %199, %200, !dbg !4477
  %cmp12.i348 = icmp ugt i32 %198, %add.i347, !dbg !4478
  br i1 %cmp12.i348, label %cond.true.i351, label %cond.false.i352, !dbg !4479

cond.true.i351:                                   ; preds = %if.then.i349
  %201 = load i32, i32* %re_index.i305, align 4, !dbg !4480
  %202 = load i32, i32* %bits.addr.i302, align 4, !dbg !4481
  %add14.i350 = add i32 %201, %202, !dbg !4482
  br label %cond.end.i388, !dbg !4483

cond.false.i352:                                  ; preds = %if.then.i349
  %203 = load i32, i32* %re_size_plus8.i307, align 4, !dbg !4484
  br label %cond.end.i388, !dbg !4485

cond.end.i388:                                    ; preds = %cond.false.i352, %cond.true.i351
  %cond.i353 = phi i32 [ %add14.i350, %cond.true.i351 ], [ %203, %cond.false.i352 ], !dbg !4486
  store i32 %cond.i353, i32* %re_index.i305, align 4, !dbg !4487
  %204 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !4488
  %buffer15.i354 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %204, i32 0, i32 0, !dbg !4489
  %205 = load i8*, i8** %buffer15.i354, align 8, !dbg !4489
  %206 = load i32, i32* %re_index.i305, align 4, !dbg !4490
  %shr16.i355 = lshr i32 %206, 3, !dbg !4491
  %idx.ext17.i356 = zext i32 %shr16.i355 to i64, !dbg !4492
  %add.ptr18.i357 = getelementptr inbounds i8, i8* %205, i64 %idx.ext17.i356, !dbg !4492
  %207 = bitcast i8* %add.ptr18.i357 to %union.unaligned_32*, !dbg !4493
  %l19.i358 = bitcast %union.unaligned_32* %207 to i32*, !dbg !4493
  %208 = load i32, i32* %l19.i358, align 1, !dbg !4493
  store i32 %208, i32* %x.addr.i81.i298, align 4, !dbg !4494
  %209 = load i32, i32* %x.addr.i81.i298, align 4, !dbg !4495
  %shl.i82.i359 = shl i32 %209, 8, !dbg !4496
  %and.i83.i360 = and i32 %shl.i82.i359, 65280, !dbg !4497
  %210 = load i32, i32* %x.addr.i81.i298, align 4, !dbg !4498
  %shr.i84.i361 = lshr i32 %210, 8, !dbg !4499
  %and1.i85.i362 = and i32 %shr.i84.i361, 255, !dbg !4500
  %or.i86.i363 = or i32 %and.i83.i360, %and1.i85.i362, !dbg !4501
  %shl2.i87.i364 = shl i32 %or.i86.i363, 16, !dbg !4502
  %211 = load i32, i32* %x.addr.i81.i298, align 4, !dbg !4503
  %shr3.i88.i365 = lshr i32 %211, 16, !dbg !4504
  %shl4.i89.i366 = shl i32 %shr3.i88.i365, 8, !dbg !4505
  %and5.i90.i367 = and i32 %shl4.i89.i366, 65280, !dbg !4506
  %212 = load i32, i32* %x.addr.i81.i298, align 4, !dbg !4507
  %shr6.i91.i368 = lshr i32 %212, 16, !dbg !4508
  %shr7.i92.i369 = lshr i32 %shr6.i91.i368, 8, !dbg !4509
  %and8.i93.i370 = and i32 %shr7.i92.i369, 255, !dbg !4510
  %or9.i94.i371 = or i32 %and5.i90.i367, %and8.i93.i370, !dbg !4511
  %or10.i95.i372 = or i32 %shl2.i87.i364, %or9.i94.i371, !dbg !4512
  %213 = load i32, i32* %re_index.i305, align 4, !dbg !4513
  %and21.i373 = and i32 %213, 7, !dbg !4514
  %shl22.i374 = shl i32 %or10.i95.i372, %and21.i373, !dbg !4515
  store i32 %shl22.i374, i32* %re_cache.i306, align 4, !dbg !4516
  %214 = load i32, i32* %n.i308, align 4, !dbg !4517
  %sub.i375 = sub nsw i32 0, %214, !dbg !4518
  store i32 %sub.i375, i32* %nb_bits.i309, align 4, !dbg !4519
  %215 = load i32, i32* %re_cache.i306, align 4, !dbg !4520
  %216 = load i32, i32* %nb_bits.i309, align 4, !dbg !4521
  %conv23.i376 = trunc i32 %216 to i8, !dbg !4521
  %call24.i377 = call i32 @NEG_USR32(i32 %215, i8 signext %conv23.i376) #9, !dbg !4522
  %217 = load i32, i32* %code.i304, align 4, !dbg !4523
  %add25.i378 = add i32 %call24.i377, %217, !dbg !4524
  store i32 %add25.i378, i32* %index1.i310, align 4, !dbg !4525
  %218 = load i32, i32* %index1.i310, align 4, !dbg !4526
  %idxprom26.i379 = zext i32 %218 to i64, !dbg !4527
  %219 = load [2 x i16]*, [2 x i16]** %table.addr.i301, align 8, !dbg !4527
  %arrayidx27.i380 = getelementptr inbounds [2 x i16], [2 x i16]* %219, i64 %idxprom26.i379, !dbg !4527
  %arrayidx28.i381 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i380, i64 0, i64 0, !dbg !4527
  %220 = load i16, i16* %arrayidx28.i381, align 2, !dbg !4527
  %conv29.i382 = sext i16 %220 to i32, !dbg !4527
  store i32 %conv29.i382, i32* %code.i304, align 4, !dbg !4528
  %221 = load i32, i32* %index1.i310, align 4, !dbg !4529
  %idxprom30.i383 = zext i32 %221 to i64, !dbg !4530
  %222 = load [2 x i16]*, [2 x i16]** %table.addr.i301, align 8, !dbg !4530
  %arrayidx31.i384 = getelementptr inbounds [2 x i16], [2 x i16]* %222, i64 %idxprom30.i383, !dbg !4530
  %arrayidx32.i385 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i384, i64 0, i64 1, !dbg !4530
  %223 = load i16, i16* %arrayidx32.i385, align 2, !dbg !4530
  %conv33.i386 = sext i16 %223 to i32, !dbg !4530
  store i32 %conv33.i386, i32* %n.i308, align 4, !dbg !4531
  %224 = load i32, i32* %max_depth.addr.i303, align 4, !dbg !4532
  %cmp34.i387 = icmp sgt i32 %224, 2, !dbg !4533
  br i1 %cmp34.i387, label %land.lhs.true36.i390, label %if.end.i432, !dbg !4534

land.lhs.true36.i390:                             ; preds = %cond.end.i388
  %225 = load i32, i32* %n.i308, align 4, !dbg !4535
  %cmp37.i389 = icmp slt i32 %225, 0, !dbg !4536
  br i1 %cmp37.i389, label %if.then39.i393, label %if.end.i432, !dbg !4537

if.then39.i393:                                   ; preds = %land.lhs.true36.i390
  %226 = load i32, i32* %re_size_plus8.i307, align 4, !dbg !4538
  %227 = load i32, i32* %re_index.i305, align 4, !dbg !4539
  %228 = load i32, i32* %nb_bits.i309, align 4, !dbg !4540
  %add40.i391 = add i32 %227, %228, !dbg !4541
  %cmp41.i392 = icmp ugt i32 %226, %add40.i391, !dbg !4542
  br i1 %cmp41.i392, label %cond.true43.i395, label %cond.false45.i396, !dbg !4543

cond.true43.i395:                                 ; preds = %if.then39.i393
  %229 = load i32, i32* %re_index.i305, align 4, !dbg !4544
  %230 = load i32, i32* %nb_bits.i309, align 4, !dbg !4545
  %add44.i394 = add i32 %229, %230, !dbg !4546
  br label %cond.end46.i431, !dbg !4547

cond.false45.i396:                                ; preds = %if.then39.i393
  %231 = load i32, i32* %re_size_plus8.i307, align 4, !dbg !4548
  br label %cond.end46.i431, !dbg !4549

cond.end46.i431:                                  ; preds = %cond.false45.i396, %cond.true43.i395
  %cond47.i397 = phi i32 [ %add44.i394, %cond.true43.i395 ], [ %231, %cond.false45.i396 ], !dbg !4550
  store i32 %cond47.i397, i32* %re_index.i305, align 4, !dbg !4551
  %232 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !4552
  %buffer48.i398 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %232, i32 0, i32 0, !dbg !4553
  %233 = load i8*, i8** %buffer48.i398, align 8, !dbg !4553
  %234 = load i32, i32* %re_index.i305, align 4, !dbg !4554
  %shr49.i399 = lshr i32 %234, 3, !dbg !4555
  %idx.ext50.i400 = zext i32 %shr49.i399 to i64, !dbg !4556
  %add.ptr51.i401 = getelementptr inbounds i8, i8* %233, i64 %idx.ext50.i400, !dbg !4556
  %235 = bitcast i8* %add.ptr51.i401 to %union.unaligned_32*, !dbg !4557
  %l52.i402 = bitcast %union.unaligned_32* %235 to i32*, !dbg !4557
  %236 = load i32, i32* %l52.i402, align 1, !dbg !4557
  store i32 %236, i32* %x.addr.i96.i297, align 4, !dbg !4558
  %237 = load i32, i32* %x.addr.i96.i297, align 4, !dbg !4559
  %shl.i97.i403 = shl i32 %237, 8, !dbg !4560
  %and.i98.i404 = and i32 %shl.i97.i403, 65280, !dbg !4561
  %238 = load i32, i32* %x.addr.i96.i297, align 4, !dbg !4562
  %shr.i99.i405 = lshr i32 %238, 8, !dbg !4563
  %and1.i100.i406 = and i32 %shr.i99.i405, 255, !dbg !4564
  %or.i101.i407 = or i32 %and.i98.i404, %and1.i100.i406, !dbg !4565
  %shl2.i102.i408 = shl i32 %or.i101.i407, 16, !dbg !4566
  %239 = load i32, i32* %x.addr.i96.i297, align 4, !dbg !4567
  %shr3.i103.i409 = lshr i32 %239, 16, !dbg !4568
  %shl4.i104.i410 = shl i32 %shr3.i103.i409, 8, !dbg !4569
  %and5.i105.i411 = and i32 %shl4.i104.i410, 65280, !dbg !4570
  %240 = load i32, i32* %x.addr.i96.i297, align 4, !dbg !4571
  %shr6.i106.i412 = lshr i32 %240, 16, !dbg !4572
  %shr7.i107.i413 = lshr i32 %shr6.i106.i412, 8, !dbg !4573
  %and8.i108.i414 = and i32 %shr7.i107.i413, 255, !dbg !4574
  %or9.i109.i415 = or i32 %and5.i105.i411, %and8.i108.i414, !dbg !4575
  %or10.i110.i416 = or i32 %shl2.i102.i408, %or9.i109.i415, !dbg !4576
  %241 = load i32, i32* %re_index.i305, align 4, !dbg !4577
  %and54.i417 = and i32 %241, 7, !dbg !4578
  %shl55.i418 = shl i32 %or10.i110.i416, %and54.i417, !dbg !4579
  store i32 %shl55.i418, i32* %re_cache.i306, align 4, !dbg !4580
  %242 = load i32, i32* %n.i308, align 4, !dbg !4581
  %sub56.i419 = sub nsw i32 0, %242, !dbg !4582
  store i32 %sub56.i419, i32* %nb_bits.i309, align 4, !dbg !4583
  %243 = load i32, i32* %re_cache.i306, align 4, !dbg !4584
  %244 = load i32, i32* %nb_bits.i309, align 4, !dbg !4585
  %conv57.i420 = trunc i32 %244 to i8, !dbg !4585
  %call58.i421 = call i32 @NEG_USR32(i32 %243, i8 signext %conv57.i420) #9, !dbg !4586
  %245 = load i32, i32* %code.i304, align 4, !dbg !4587
  %add59.i422 = add i32 %call58.i421, %245, !dbg !4588
  store i32 %add59.i422, i32* %index1.i310, align 4, !dbg !4589
  %246 = load i32, i32* %index1.i310, align 4, !dbg !4590
  %idxprom60.i423 = zext i32 %246 to i64, !dbg !4591
  %247 = load [2 x i16]*, [2 x i16]** %table.addr.i301, align 8, !dbg !4591
  %arrayidx61.i424 = getelementptr inbounds [2 x i16], [2 x i16]* %247, i64 %idxprom60.i423, !dbg !4591
  %arrayidx62.i425 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i424, i64 0, i64 0, !dbg !4591
  %248 = load i16, i16* %arrayidx62.i425, align 2, !dbg !4591
  %conv63.i426 = sext i16 %248 to i32, !dbg !4591
  store i32 %conv63.i426, i32* %code.i304, align 4, !dbg !4592
  %249 = load i32, i32* %index1.i310, align 4, !dbg !4593
  %idxprom64.i427 = zext i32 %249 to i64, !dbg !4594
  %250 = load [2 x i16]*, [2 x i16]** %table.addr.i301, align 8, !dbg !4594
  %arrayidx65.i428 = getelementptr inbounds [2 x i16], [2 x i16]* %250, i64 %idxprom64.i427, !dbg !4594
  %arrayidx66.i429 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i428, i64 0, i64 1, !dbg !4594
  %251 = load i16, i16* %arrayidx66.i429, align 2, !dbg !4594
  %conv67.i430 = sext i16 %251 to i32, !dbg !4594
  store i32 %conv67.i430, i32* %n.i308, align 4, !dbg !4595
  br label %if.end.i432, !dbg !4596

if.end.i432:                                      ; preds = %cond.end46.i431, %land.lhs.true36.i390, %cond.end.i388
  br label %if.end68.i433, !dbg !4597

if.end68.i433:                                    ; preds = %if.end.i432, %land.lhs.true.i346, %if.then78
  %252 = load i32, i32* %n.i308, align 4, !dbg !4598
  %253 = load i32, i32* %re_cache.i306, align 4, !dbg !4599
  %shl70.i434 = shl i32 %253, %252, !dbg !4599
  store i32 %shl70.i434, i32* %re_cache.i306, align 4, !dbg !4599
  %254 = load i32, i32* %re_size_plus8.i307, align 4, !dbg !4600
  %255 = load i32, i32* %re_index.i305, align 4, !dbg !4601
  %256 = load i32, i32* %n.i308, align 4, !dbg !4602
  %add71.i435 = add i32 %255, %256, !dbg !4603
  %cmp72.i436 = icmp ugt i32 %254, %add71.i435, !dbg !4604
  br i1 %cmp72.i436, label %cond.true74.i438, label %cond.false76.i439, !dbg !4605

cond.true74.i438:                                 ; preds = %if.end68.i433
  %257 = load i32, i32* %re_index.i305, align 4, !dbg !4606
  %258 = load i32, i32* %n.i308, align 4, !dbg !4607
  %add75.i437 = add i32 %257, %258, !dbg !4608
  br label %get_vlc2.exit442, !dbg !4609

cond.false76.i439:                                ; preds = %if.end68.i433
  %259 = load i32, i32* %re_size_plus8.i307, align 4, !dbg !4610
  br label %get_vlc2.exit442, !dbg !4611

get_vlc2.exit442:                                 ; preds = %cond.true74.i438, %cond.false76.i439
  %cond78.i440 = phi i32 [ %add75.i437, %cond.true74.i438 ], [ %259, %cond.false76.i439 ], !dbg !4612
  store i32 %cond78.i440, i32* %re_index.i305, align 4, !dbg !4613
  %260 = load i32, i32* %re_index.i305, align 4, !dbg !4614
  %261 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !4615
  %index80.i441 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %261, i32 0, i32 2, !dbg !4616
  store i32 %260, i32* %index80.i441, align 8, !dbg !4617
  %262 = load i32, i32* %code.i304, align 4, !dbg !4618
  store i32 %262, i32* %delta, align 4, !dbg !4619
  %263 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !4620
  %qu_wordlen85 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %263, i32 0, i32 5, !dbg !4621
  %arrayidx86 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen85, i64 0, i64 0, !dbg !4620
  %264 = load i32, i32* %arrayidx86, align 4, !dbg !4620
  %265 = load i32, i32* %delta, align 4, !dbg !4622
  %add87 = add nsw i32 %264, %265, !dbg !4623
  %and88 = and i32 %add87, 7, !dbg !4624
  %266 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4625
  %qu_wordlen89 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %266, i32 0, i32 5, !dbg !4626
  %arrayidx90 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen89, i64 0, i64 0, !dbg !4625
  store i32 %and88, i32* %arrayidx90, align 4, !dbg !4627
  store i32 1, i32* %i, align 4, !dbg !4628
  br label %for.cond91, !dbg !4629

for.cond91:                                       ; preds = %for.inc115, %get_vlc2.exit442
  %267 = load i32, i32* %i, align 4, !dbg !4630
  %268 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4632
  %num_coded_vals92 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %268, i32 0, i32 1, !dbg !4633
  %269 = load i32, i32* %num_coded_vals92, align 4, !dbg !4633
  %cmp93 = icmp slt i32 %267, %269, !dbg !4634
  br i1 %cmp93, label %for.body94, label %for.end117, !dbg !4635

for.body94:                                       ; preds = %for.cond91
  %270 = load i32, i32* %i, align 4, !dbg !4636
  %idxprom95 = sext i32 %270 to i64, !dbg !4637
  %271 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !4637
  %qu_wordlen96 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %271, i32 0, i32 5, !dbg !4638
  %arrayidx97 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen96, i64 0, i64 %idxprom95, !dbg !4637
  %272 = load i32, i32* %arrayidx97, align 4, !dbg !4637
  %273 = load i32, i32* %i, align 4, !dbg !4639
  %sub = sub nsw i32 %273, 1, !dbg !4640
  %idxprom98 = sext i32 %sub to i64, !dbg !4641
  %274 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !4641
  %qu_wordlen99 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %274, i32 0, i32 5, !dbg !4642
  %arrayidx100 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen99, i64 0, i64 %idxprom98, !dbg !4641
  %275 = load i32, i32* %arrayidx100, align 4, !dbg !4641
  %sub101 = sub nsw i32 %272, %275, !dbg !4643
  store i32 %sub101, i32* %diff, align 4, !dbg !4644
  %276 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4645
  %277 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4646
  %table102 = getelementptr inbounds %struct.VLC, %struct.VLC* %277, i32 0, i32 1, !dbg !4647
  %278 = load [2 x i16]*, [2 x i16]** %table102, align 8, !dbg !4647
  %279 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4648
  %bits103 = getelementptr inbounds %struct.VLC, %struct.VLC* %279, i32 0, i32 0, !dbg !4649
  %280 = load i32, i32* %bits103, align 8, !dbg !4649
  store %struct.GetBitContext* %276, %struct.GetBitContext** %s.addr.i446, align 8, !dbg !4650
  store [2 x i16]* %278, [2 x i16]** %table.addr.i447, align 8, !dbg !4650
  store i32 %280, i32* %bits.addr.i448, align 4, !dbg !4650
  store i32 1, i32* %max_depth.addr.i449, align 4, !dbg !4650
  %281 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i446, align 8, !dbg !4651
  %index.i457 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %281, i32 0, i32 2, !dbg !4652
  %282 = load i32, i32* %index.i457, align 8, !dbg !4652
  store i32 %282, i32* %re_index.i451, align 4, !dbg !3930
  %283 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i446, align 8, !dbg !4653
  %size_in_bits_plus8.i458 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %283, i32 0, i32 4, !dbg !4654
  %284 = load i32, i32* %size_in_bits_plus8.i458, align 8, !dbg !4654
  store i32 %284, i32* %re_size_plus8.i453, align 4, !dbg !3932
  %285 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i446, align 8, !dbg !4655
  %buffer.i459 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %285, i32 0, i32 0, !dbg !4656
  %286 = load i8*, i8** %buffer.i459, align 8, !dbg !4656
  %287 = load i32, i32* %re_index.i451, align 4, !dbg !4657
  %shr.i460 = lshr i32 %287, 3, !dbg !4658
  %idx.ext.i461 = zext i32 %shr.i460 to i64, !dbg !4659
  %add.ptr.i462 = getelementptr inbounds i8, i8* %286, i64 %idx.ext.i461, !dbg !4659
  %288 = bitcast i8* %add.ptr.i462 to %union.unaligned_32*, !dbg !4660
  %l.i463 = bitcast %union.unaligned_32* %288 to i32*, !dbg !4660
  %289 = load i32, i32* %l.i463, align 1, !dbg !4660
  store i32 %289, i32* %x.addr.i.i445, align 4, !dbg !4661
  %290 = load i32, i32* %x.addr.i.i445, align 4, !dbg !4662
  %shl.i.i464 = shl i32 %290, 8, !dbg !4663
  %and.i.i465 = and i32 %shl.i.i464, 65280, !dbg !4664
  %291 = load i32, i32* %x.addr.i.i445, align 4, !dbg !4665
  %shr.i.i466 = lshr i32 %291, 8, !dbg !4666
  %and1.i.i467 = and i32 %shr.i.i466, 255, !dbg !4667
  %or.i.i468 = or i32 %and.i.i465, %and1.i.i467, !dbg !4668
  %shl2.i.i469 = shl i32 %or.i.i468, 16, !dbg !4669
  %292 = load i32, i32* %x.addr.i.i445, align 4, !dbg !4670
  %shr3.i.i470 = lshr i32 %292, 16, !dbg !4671
  %shl4.i.i471 = shl i32 %shr3.i.i470, 8, !dbg !4672
  %and5.i.i472 = and i32 %shl4.i.i471, 65280, !dbg !4673
  %293 = load i32, i32* %x.addr.i.i445, align 4, !dbg !4674
  %shr6.i.i473 = lshr i32 %293, 16, !dbg !4675
  %shr7.i.i474 = lshr i32 %shr6.i.i473, 8, !dbg !4676
  %and8.i.i475 = and i32 %shr7.i.i474, 255, !dbg !4677
  %or9.i.i476 = or i32 %and5.i.i472, %and8.i.i475, !dbg !4678
  %or10.i.i477 = or i32 %shl2.i.i469, %or9.i.i476, !dbg !4679
  %294 = load i32, i32* %re_index.i451, align 4, !dbg !4680
  %and.i478 = and i32 %294, 7, !dbg !4681
  %shl.i479 = shl i32 %or10.i.i477, %and.i478, !dbg !4682
  store i32 %shl.i479, i32* %re_cache.i452, align 4, !dbg !4683
  %295 = load i32, i32* %re_cache.i452, align 4, !dbg !4684
  %296 = load i32, i32* %bits.addr.i448, align 4, !dbg !4685
  %conv.i480 = trunc i32 %296 to i8, !dbg !4685
  %call2.i481 = call i32 @NEG_USR32(i32 %295, i8 signext %conv.i480) #9, !dbg !4686
  store i32 %call2.i481, i32* %index1.i456, align 4, !dbg !4687
  %297 = load i32, i32* %index1.i456, align 4, !dbg !4688
  %idxprom.i482 = zext i32 %297 to i64, !dbg !4689
  %298 = load [2 x i16]*, [2 x i16]** %table.addr.i447, align 8, !dbg !4689
  %arrayidx.i483 = getelementptr inbounds [2 x i16], [2 x i16]* %298, i64 %idxprom.i482, !dbg !4689
  %arrayidx3.i484 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i483, i64 0, i64 0, !dbg !4689
  %299 = load i16, i16* %arrayidx3.i484, align 2, !dbg !4689
  %conv4.i485 = sext i16 %299 to i32, !dbg !4689
  store i32 %conv4.i485, i32* %code.i450, align 4, !dbg !4690
  %300 = load i32, i32* %index1.i456, align 4, !dbg !4691
  %idxprom5.i486 = zext i32 %300 to i64, !dbg !4692
  %301 = load [2 x i16]*, [2 x i16]** %table.addr.i447, align 8, !dbg !4692
  %arrayidx6.i487 = getelementptr inbounds [2 x i16], [2 x i16]* %301, i64 %idxprom5.i486, !dbg !4692
  %arrayidx7.i488 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i487, i64 0, i64 1, !dbg !4692
  %302 = load i16, i16* %arrayidx7.i488, align 2, !dbg !4692
  %conv8.i489 = sext i16 %302 to i32, !dbg !4692
  store i32 %conv8.i489, i32* %n.i454, align 4, !dbg !4693
  %303 = load i32, i32* %max_depth.addr.i449, align 4, !dbg !4694
  %cmp.i490 = icmp sgt i32 %303, 1, !dbg !4695
  br i1 %cmp.i490, label %land.lhs.true.i492, label %if.end68.i579, !dbg !4696

land.lhs.true.i492:                               ; preds = %for.body94
  %304 = load i32, i32* %n.i454, align 4, !dbg !4697
  %cmp10.i491 = icmp slt i32 %304, 0, !dbg !4698
  br i1 %cmp10.i491, label %if.then.i495, label %if.end68.i579, !dbg !4699

if.then.i495:                                     ; preds = %land.lhs.true.i492
  %305 = load i32, i32* %re_size_plus8.i453, align 4, !dbg !4700
  %306 = load i32, i32* %re_index.i451, align 4, !dbg !4701
  %307 = load i32, i32* %bits.addr.i448, align 4, !dbg !4702
  %add.i493 = add i32 %306, %307, !dbg !4703
  %cmp12.i494 = icmp ugt i32 %305, %add.i493, !dbg !4704
  br i1 %cmp12.i494, label %cond.true.i497, label %cond.false.i498, !dbg !4705

cond.true.i497:                                   ; preds = %if.then.i495
  %308 = load i32, i32* %re_index.i451, align 4, !dbg !4706
  %309 = load i32, i32* %bits.addr.i448, align 4, !dbg !4707
  %add14.i496 = add i32 %308, %309, !dbg !4708
  br label %cond.end.i534, !dbg !4709

cond.false.i498:                                  ; preds = %if.then.i495
  %310 = load i32, i32* %re_size_plus8.i453, align 4, !dbg !4710
  br label %cond.end.i534, !dbg !4711

cond.end.i534:                                    ; preds = %cond.false.i498, %cond.true.i497
  %cond.i499 = phi i32 [ %add14.i496, %cond.true.i497 ], [ %310, %cond.false.i498 ], !dbg !4712
  store i32 %cond.i499, i32* %re_index.i451, align 4, !dbg !4713
  %311 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i446, align 8, !dbg !4714
  %buffer15.i500 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %311, i32 0, i32 0, !dbg !4715
  %312 = load i8*, i8** %buffer15.i500, align 8, !dbg !4715
  %313 = load i32, i32* %re_index.i451, align 4, !dbg !4716
  %shr16.i501 = lshr i32 %313, 3, !dbg !4717
  %idx.ext17.i502 = zext i32 %shr16.i501 to i64, !dbg !4718
  %add.ptr18.i503 = getelementptr inbounds i8, i8* %312, i64 %idx.ext17.i502, !dbg !4718
  %314 = bitcast i8* %add.ptr18.i503 to %union.unaligned_32*, !dbg !4719
  %l19.i504 = bitcast %union.unaligned_32* %314 to i32*, !dbg !4719
  %315 = load i32, i32* %l19.i504, align 1, !dbg !4719
  store i32 %315, i32* %x.addr.i81.i444, align 4, !dbg !4720
  %316 = load i32, i32* %x.addr.i81.i444, align 4, !dbg !4721
  %shl.i82.i505 = shl i32 %316, 8, !dbg !4722
  %and.i83.i506 = and i32 %shl.i82.i505, 65280, !dbg !4723
  %317 = load i32, i32* %x.addr.i81.i444, align 4, !dbg !4724
  %shr.i84.i507 = lshr i32 %317, 8, !dbg !4725
  %and1.i85.i508 = and i32 %shr.i84.i507, 255, !dbg !4726
  %or.i86.i509 = or i32 %and.i83.i506, %and1.i85.i508, !dbg !4727
  %shl2.i87.i510 = shl i32 %or.i86.i509, 16, !dbg !4728
  %318 = load i32, i32* %x.addr.i81.i444, align 4, !dbg !4729
  %shr3.i88.i511 = lshr i32 %318, 16, !dbg !4730
  %shl4.i89.i512 = shl i32 %shr3.i88.i511, 8, !dbg !4731
  %and5.i90.i513 = and i32 %shl4.i89.i512, 65280, !dbg !4732
  %319 = load i32, i32* %x.addr.i81.i444, align 4, !dbg !4733
  %shr6.i91.i514 = lshr i32 %319, 16, !dbg !4734
  %shr7.i92.i515 = lshr i32 %shr6.i91.i514, 8, !dbg !4735
  %and8.i93.i516 = and i32 %shr7.i92.i515, 255, !dbg !4736
  %or9.i94.i517 = or i32 %and5.i90.i513, %and8.i93.i516, !dbg !4737
  %or10.i95.i518 = or i32 %shl2.i87.i510, %or9.i94.i517, !dbg !4738
  %320 = load i32, i32* %re_index.i451, align 4, !dbg !4739
  %and21.i519 = and i32 %320, 7, !dbg !4740
  %shl22.i520 = shl i32 %or10.i95.i518, %and21.i519, !dbg !4741
  store i32 %shl22.i520, i32* %re_cache.i452, align 4, !dbg !4742
  %321 = load i32, i32* %n.i454, align 4, !dbg !4743
  %sub.i521 = sub nsw i32 0, %321, !dbg !4744
  store i32 %sub.i521, i32* %nb_bits.i455, align 4, !dbg !4745
  %322 = load i32, i32* %re_cache.i452, align 4, !dbg !4746
  %323 = load i32, i32* %nb_bits.i455, align 4, !dbg !4747
  %conv23.i522 = trunc i32 %323 to i8, !dbg !4747
  %call24.i523 = call i32 @NEG_USR32(i32 %322, i8 signext %conv23.i522) #9, !dbg !4748
  %324 = load i32, i32* %code.i450, align 4, !dbg !4749
  %add25.i524 = add i32 %call24.i523, %324, !dbg !4750
  store i32 %add25.i524, i32* %index1.i456, align 4, !dbg !4751
  %325 = load i32, i32* %index1.i456, align 4, !dbg !4752
  %idxprom26.i525 = zext i32 %325 to i64, !dbg !4753
  %326 = load [2 x i16]*, [2 x i16]** %table.addr.i447, align 8, !dbg !4753
  %arrayidx27.i526 = getelementptr inbounds [2 x i16], [2 x i16]* %326, i64 %idxprom26.i525, !dbg !4753
  %arrayidx28.i527 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i526, i64 0, i64 0, !dbg !4753
  %327 = load i16, i16* %arrayidx28.i527, align 2, !dbg !4753
  %conv29.i528 = sext i16 %327 to i32, !dbg !4753
  store i32 %conv29.i528, i32* %code.i450, align 4, !dbg !4754
  %328 = load i32, i32* %index1.i456, align 4, !dbg !4755
  %idxprom30.i529 = zext i32 %328 to i64, !dbg !4756
  %329 = load [2 x i16]*, [2 x i16]** %table.addr.i447, align 8, !dbg !4756
  %arrayidx31.i530 = getelementptr inbounds [2 x i16], [2 x i16]* %329, i64 %idxprom30.i529, !dbg !4756
  %arrayidx32.i531 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i530, i64 0, i64 1, !dbg !4756
  %330 = load i16, i16* %arrayidx32.i531, align 2, !dbg !4756
  %conv33.i532 = sext i16 %330 to i32, !dbg !4756
  store i32 %conv33.i532, i32* %n.i454, align 4, !dbg !4757
  %331 = load i32, i32* %max_depth.addr.i449, align 4, !dbg !4758
  %cmp34.i533 = icmp sgt i32 %331, 2, !dbg !4759
  br i1 %cmp34.i533, label %land.lhs.true36.i536, label %if.end.i578, !dbg !4760

land.lhs.true36.i536:                             ; preds = %cond.end.i534
  %332 = load i32, i32* %n.i454, align 4, !dbg !4761
  %cmp37.i535 = icmp slt i32 %332, 0, !dbg !4762
  br i1 %cmp37.i535, label %if.then39.i539, label %if.end.i578, !dbg !4763

if.then39.i539:                                   ; preds = %land.lhs.true36.i536
  %333 = load i32, i32* %re_size_plus8.i453, align 4, !dbg !4764
  %334 = load i32, i32* %re_index.i451, align 4, !dbg !4765
  %335 = load i32, i32* %nb_bits.i455, align 4, !dbg !4766
  %add40.i537 = add i32 %334, %335, !dbg !4767
  %cmp41.i538 = icmp ugt i32 %333, %add40.i537, !dbg !4768
  br i1 %cmp41.i538, label %cond.true43.i541, label %cond.false45.i542, !dbg !4769

cond.true43.i541:                                 ; preds = %if.then39.i539
  %336 = load i32, i32* %re_index.i451, align 4, !dbg !4770
  %337 = load i32, i32* %nb_bits.i455, align 4, !dbg !4771
  %add44.i540 = add i32 %336, %337, !dbg !4772
  br label %cond.end46.i577, !dbg !4773

cond.false45.i542:                                ; preds = %if.then39.i539
  %338 = load i32, i32* %re_size_plus8.i453, align 4, !dbg !4774
  br label %cond.end46.i577, !dbg !4775

cond.end46.i577:                                  ; preds = %cond.false45.i542, %cond.true43.i541
  %cond47.i543 = phi i32 [ %add44.i540, %cond.true43.i541 ], [ %338, %cond.false45.i542 ], !dbg !4776
  store i32 %cond47.i543, i32* %re_index.i451, align 4, !dbg !4777
  %339 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i446, align 8, !dbg !4778
  %buffer48.i544 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %339, i32 0, i32 0, !dbg !4779
  %340 = load i8*, i8** %buffer48.i544, align 8, !dbg !4779
  %341 = load i32, i32* %re_index.i451, align 4, !dbg !4780
  %shr49.i545 = lshr i32 %341, 3, !dbg !4781
  %idx.ext50.i546 = zext i32 %shr49.i545 to i64, !dbg !4782
  %add.ptr51.i547 = getelementptr inbounds i8, i8* %340, i64 %idx.ext50.i546, !dbg !4782
  %342 = bitcast i8* %add.ptr51.i547 to %union.unaligned_32*, !dbg !4783
  %l52.i548 = bitcast %union.unaligned_32* %342 to i32*, !dbg !4783
  %343 = load i32, i32* %l52.i548, align 1, !dbg !4783
  store i32 %343, i32* %x.addr.i96.i443, align 4, !dbg !4784
  %344 = load i32, i32* %x.addr.i96.i443, align 4, !dbg !4785
  %shl.i97.i549 = shl i32 %344, 8, !dbg !4786
  %and.i98.i550 = and i32 %shl.i97.i549, 65280, !dbg !4787
  %345 = load i32, i32* %x.addr.i96.i443, align 4, !dbg !4788
  %shr.i99.i551 = lshr i32 %345, 8, !dbg !4789
  %and1.i100.i552 = and i32 %shr.i99.i551, 255, !dbg !4790
  %or.i101.i553 = or i32 %and.i98.i550, %and1.i100.i552, !dbg !4791
  %shl2.i102.i554 = shl i32 %or.i101.i553, 16, !dbg !4792
  %346 = load i32, i32* %x.addr.i96.i443, align 4, !dbg !4793
  %shr3.i103.i555 = lshr i32 %346, 16, !dbg !4794
  %shl4.i104.i556 = shl i32 %shr3.i103.i555, 8, !dbg !4795
  %and5.i105.i557 = and i32 %shl4.i104.i556, 65280, !dbg !4796
  %347 = load i32, i32* %x.addr.i96.i443, align 4, !dbg !4797
  %shr6.i106.i558 = lshr i32 %347, 16, !dbg !4798
  %shr7.i107.i559 = lshr i32 %shr6.i106.i558, 8, !dbg !4799
  %and8.i108.i560 = and i32 %shr7.i107.i559, 255, !dbg !4800
  %or9.i109.i561 = or i32 %and5.i105.i557, %and8.i108.i560, !dbg !4801
  %or10.i110.i562 = or i32 %shl2.i102.i554, %or9.i109.i561, !dbg !4802
  %348 = load i32, i32* %re_index.i451, align 4, !dbg !4803
  %and54.i563 = and i32 %348, 7, !dbg !4804
  %shl55.i564 = shl i32 %or10.i110.i562, %and54.i563, !dbg !4805
  store i32 %shl55.i564, i32* %re_cache.i452, align 4, !dbg !4806
  %349 = load i32, i32* %n.i454, align 4, !dbg !4807
  %sub56.i565 = sub nsw i32 0, %349, !dbg !4808
  store i32 %sub56.i565, i32* %nb_bits.i455, align 4, !dbg !4809
  %350 = load i32, i32* %re_cache.i452, align 4, !dbg !4810
  %351 = load i32, i32* %nb_bits.i455, align 4, !dbg !4811
  %conv57.i566 = trunc i32 %351 to i8, !dbg !4811
  %call58.i567 = call i32 @NEG_USR32(i32 %350, i8 signext %conv57.i566) #9, !dbg !4812
  %352 = load i32, i32* %code.i450, align 4, !dbg !4813
  %add59.i568 = add i32 %call58.i567, %352, !dbg !4814
  store i32 %add59.i568, i32* %index1.i456, align 4, !dbg !4815
  %353 = load i32, i32* %index1.i456, align 4, !dbg !4816
  %idxprom60.i569 = zext i32 %353 to i64, !dbg !4817
  %354 = load [2 x i16]*, [2 x i16]** %table.addr.i447, align 8, !dbg !4817
  %arrayidx61.i570 = getelementptr inbounds [2 x i16], [2 x i16]* %354, i64 %idxprom60.i569, !dbg !4817
  %arrayidx62.i571 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i570, i64 0, i64 0, !dbg !4817
  %355 = load i16, i16* %arrayidx62.i571, align 2, !dbg !4817
  %conv63.i572 = sext i16 %355 to i32, !dbg !4817
  store i32 %conv63.i572, i32* %code.i450, align 4, !dbg !4818
  %356 = load i32, i32* %index1.i456, align 4, !dbg !4819
  %idxprom64.i573 = zext i32 %356 to i64, !dbg !4820
  %357 = load [2 x i16]*, [2 x i16]** %table.addr.i447, align 8, !dbg !4820
  %arrayidx65.i574 = getelementptr inbounds [2 x i16], [2 x i16]* %357, i64 %idxprom64.i573, !dbg !4820
  %arrayidx66.i575 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i574, i64 0, i64 1, !dbg !4820
  %358 = load i16, i16* %arrayidx66.i575, align 2, !dbg !4820
  %conv67.i576 = sext i16 %358 to i32, !dbg !4820
  store i32 %conv67.i576, i32* %n.i454, align 4, !dbg !4821
  br label %if.end.i578, !dbg !4822

if.end.i578:                                      ; preds = %cond.end46.i577, %land.lhs.true36.i536, %cond.end.i534
  br label %if.end68.i579, !dbg !4823

if.end68.i579:                                    ; preds = %if.end.i578, %land.lhs.true.i492, %for.body94
  %359 = load i32, i32* %n.i454, align 4, !dbg !4824
  %360 = load i32, i32* %re_cache.i452, align 4, !dbg !4825
  %shl70.i580 = shl i32 %360, %359, !dbg !4825
  store i32 %shl70.i580, i32* %re_cache.i452, align 4, !dbg !4825
  %361 = load i32, i32* %re_size_plus8.i453, align 4, !dbg !4826
  %362 = load i32, i32* %re_index.i451, align 4, !dbg !4827
  %363 = load i32, i32* %n.i454, align 4, !dbg !4828
  %add71.i581 = add i32 %362, %363, !dbg !4829
  %cmp72.i582 = icmp ugt i32 %361, %add71.i581, !dbg !4830
  br i1 %cmp72.i582, label %cond.true74.i584, label %cond.false76.i585, !dbg !4831

cond.true74.i584:                                 ; preds = %if.end68.i579
  %364 = load i32, i32* %re_index.i451, align 4, !dbg !4832
  %365 = load i32, i32* %n.i454, align 4, !dbg !4833
  %add75.i583 = add i32 %364, %365, !dbg !4834
  br label %get_vlc2.exit588, !dbg !4835

cond.false76.i585:                                ; preds = %if.end68.i579
  %366 = load i32, i32* %re_size_plus8.i453, align 4, !dbg !4836
  br label %get_vlc2.exit588, !dbg !4837

get_vlc2.exit588:                                 ; preds = %cond.true74.i584, %cond.false76.i585
  %cond78.i586 = phi i32 [ %add75.i583, %cond.true74.i584 ], [ %366, %cond.false76.i585 ], !dbg !4838
  store i32 %cond78.i586, i32* %re_index.i451, align 4, !dbg !4839
  %367 = load i32, i32* %re_index.i451, align 4, !dbg !4840
  %368 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i446, align 8, !dbg !4841
  %index80.i587 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %368, i32 0, i32 2, !dbg !4842
  store i32 %367, i32* %index80.i587, align 8, !dbg !4843
  %369 = load i32, i32* %code.i450, align 4, !dbg !4844
  store i32 %369, i32* %delta, align 4, !dbg !4845
  %370 = load i32, i32* %i, align 4, !dbg !4846
  %sub105 = sub nsw i32 %370, 1, !dbg !4847
  %idxprom106 = sext i32 %sub105 to i64, !dbg !4848
  %371 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4848
  %qu_wordlen107 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %371, i32 0, i32 5, !dbg !4849
  %arrayidx108 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen107, i64 0, i64 %idxprom106, !dbg !4848
  %372 = load i32, i32* %arrayidx108, align 4, !dbg !4848
  %373 = load i32, i32* %diff, align 4, !dbg !4850
  %add109 = add nsw i32 %372, %373, !dbg !4851
  %374 = load i32, i32* %delta, align 4, !dbg !4852
  %add110 = add nsw i32 %add109, %374, !dbg !4853
  %and111 = and i32 %add110, 7, !dbg !4854
  %375 = load i32, i32* %i, align 4, !dbg !4855
  %idxprom112 = sext i32 %375 to i64, !dbg !4856
  %376 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4856
  %qu_wordlen113 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %376, i32 0, i32 5, !dbg !4857
  %arrayidx114 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen113, i64 0, i64 %idxprom112, !dbg !4856
  store i32 %and111, i32* %arrayidx114, align 4, !dbg !4858
  br label %for.inc115, !dbg !4859

for.inc115:                                       ; preds = %get_vlc2.exit588
  %377 = load i32, i32* %i, align 4, !dbg !4860
  %inc116 = add nsw i32 %377, 1, !dbg !4860
  store i32 %inc116, i32* %i, align 4, !dbg !4860
  br label %for.cond91, !dbg !4862, !llvm.loop !4863

for.end117:                                       ; preds = %for.cond91
  br label %if.end210, !dbg !4865

if.else118:                                       ; preds = %land.lhs.true, %if.end74
  %378 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4866
  %num_coded_vals119 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %378, i32 0, i32 1, !dbg !4868
  %379 = load i32, i32* %num_coded_vals119, align 4, !dbg !4868
  %tobool120 = icmp ne i32 %379, 0, !dbg !4866
  br i1 %tobool120, label %if.then121, label %if.end209, !dbg !4866

if.then121:                                       ; preds = %if.else118
  %380 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4869
  %call122 = call i32 @get_bits(%struct.GetBitContext* %380, i32 1), !dbg !4870
  store i32 %call122, i32* %flag, align 4, !dbg !4871
  %381 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4872
  %call123 = call i32 @get_bits(%struct.GetBitContext* %381, i32 1), !dbg !4873
  %idxprom124 = zext i32 %call123 to i64, !dbg !4874
  %arrayidx125 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom124, !dbg !4874
  store %struct.VLC* %arrayidx125, %struct.VLC** %vlc_tab, align 8, !dbg !4875
  %382 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4876
  %call126 = call i32 @get_bits(%struct.GetBitContext* %382, i32 3), !dbg !4877
  store i32 %call126, i32* %start_val, align 4, !dbg !4878
  %383 = load i32, i32* %start_val, align 4, !dbg !4879
  %384 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4880
  %call127 = call i32 @get_bits(%struct.GetBitContext* %384, i32 4), !dbg !4881
  %idxprom128 = zext i32 %call127 to i64, !dbg !4882
  %385 = load i32, i32* %start_val, align 4, !dbg !4883
  %idxprom129 = sext i32 %385 to i64, !dbg !4882
  %arrayidx130 = getelementptr inbounds [8 x [16 x [9 x i8]]], [8 x [16 x [9 x i8]]]* @atrac3p_wl_shapes, i64 0, i64 %idxprom129, !dbg !4882
  %arrayidx131 = getelementptr inbounds [16 x [9 x i8]], [16 x [9 x i8]]* %arrayidx130, i64 0, i64 %idxprom128, !dbg !4882
  %arrayidx132 = getelementptr inbounds [9 x i8], [9 x i8]* %arrayidx131, i64 0, i64 0, !dbg !4882
  %386 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4884
  %qu_wordlen133 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %386, i32 0, i32 5, !dbg !4885
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen133, i32 0, i32 0, !dbg !4884
  %387 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4886
  %num_coded_vals134 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %387, i32 0, i32 1, !dbg !4887
  %388 = load i32, i32* %num_coded_vals134, align 4, !dbg !4887
  call void @unpack_vq_shape(i32 %383, i8* %arrayidx132, i32* %arraydecay, i32 %388), !dbg !4888
  %389 = load i32, i32* %flag, align 4, !dbg !4889
  %tobool135 = icmp ne i32 %389, 0, !dbg !4889
  br i1 %tobool135, label %if.else155, label %if.then136, !dbg !4890

if.then136:                                       ; preds = %if.then121
  store i32 0, i32* %i, align 4, !dbg !4891
  br label %for.cond137, !dbg !4892

for.cond137:                                      ; preds = %for.inc152, %if.then136
  %390 = load i32, i32* %i, align 4, !dbg !4893
  %391 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !4895
  %num_coded_vals138 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %391, i32 0, i32 1, !dbg !4896
  %392 = load i32, i32* %num_coded_vals138, align 4, !dbg !4896
  %cmp139 = icmp slt i32 %390, %392, !dbg !4897
  br i1 %cmp139, label %for.body140, label %for.end154, !dbg !4898

for.body140:                                      ; preds = %for.cond137
  %393 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4899
  %394 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4900
  %table141 = getelementptr inbounds %struct.VLC, %struct.VLC* %394, i32 0, i32 1, !dbg !4901
  %395 = load [2 x i16]*, [2 x i16]** %table141, align 8, !dbg !4901
  %396 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !4902
  %bits142 = getelementptr inbounds %struct.VLC, %struct.VLC* %396, i32 0, i32 0, !dbg !4903
  %397 = load i32, i32* %bits142, align 8, !dbg !4903
  store %struct.GetBitContext* %393, %struct.GetBitContext** %s.addr.i592, align 8, !dbg !4904
  store [2 x i16]* %395, [2 x i16]** %table.addr.i593, align 8, !dbg !4904
  store i32 %397, i32* %bits.addr.i594, align 4, !dbg !4904
  store i32 1, i32* %max_depth.addr.i595, align 4, !dbg !4904
  %398 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i592, align 8, !dbg !4905
  %index.i603 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %398, i32 0, i32 2, !dbg !4906
  %399 = load i32, i32* %index.i603, align 8, !dbg !4906
  store i32 %399, i32* %re_index.i597, align 4, !dbg !3908
  %400 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i592, align 8, !dbg !4907
  %size_in_bits_plus8.i604 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %400, i32 0, i32 4, !dbg !4908
  %401 = load i32, i32* %size_in_bits_plus8.i604, align 8, !dbg !4908
  store i32 %401, i32* %re_size_plus8.i599, align 4, !dbg !3910
  %402 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i592, align 8, !dbg !4909
  %buffer.i605 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %402, i32 0, i32 0, !dbg !4910
  %403 = load i8*, i8** %buffer.i605, align 8, !dbg !4910
  %404 = load i32, i32* %re_index.i597, align 4, !dbg !4911
  %shr.i606 = lshr i32 %404, 3, !dbg !4912
  %idx.ext.i607 = zext i32 %shr.i606 to i64, !dbg !4913
  %add.ptr.i608 = getelementptr inbounds i8, i8* %403, i64 %idx.ext.i607, !dbg !4913
  %405 = bitcast i8* %add.ptr.i608 to %union.unaligned_32*, !dbg !4914
  %l.i609 = bitcast %union.unaligned_32* %405 to i32*, !dbg !4914
  %406 = load i32, i32* %l.i609, align 1, !dbg !4914
  store i32 %406, i32* %x.addr.i.i591, align 4, !dbg !4915
  %407 = load i32, i32* %x.addr.i.i591, align 4, !dbg !4916
  %shl.i.i610 = shl i32 %407, 8, !dbg !4917
  %and.i.i611 = and i32 %shl.i.i610, 65280, !dbg !4918
  %408 = load i32, i32* %x.addr.i.i591, align 4, !dbg !4919
  %shr.i.i612 = lshr i32 %408, 8, !dbg !4920
  %and1.i.i613 = and i32 %shr.i.i612, 255, !dbg !4921
  %or.i.i614 = or i32 %and.i.i611, %and1.i.i613, !dbg !4922
  %shl2.i.i615 = shl i32 %or.i.i614, 16, !dbg !4923
  %409 = load i32, i32* %x.addr.i.i591, align 4, !dbg !4924
  %shr3.i.i616 = lshr i32 %409, 16, !dbg !4925
  %shl4.i.i617 = shl i32 %shr3.i.i616, 8, !dbg !4926
  %and5.i.i618 = and i32 %shl4.i.i617, 65280, !dbg !4927
  %410 = load i32, i32* %x.addr.i.i591, align 4, !dbg !4928
  %shr6.i.i619 = lshr i32 %410, 16, !dbg !4929
  %shr7.i.i620 = lshr i32 %shr6.i.i619, 8, !dbg !4930
  %and8.i.i621 = and i32 %shr7.i.i620, 255, !dbg !4931
  %or9.i.i622 = or i32 %and5.i.i618, %and8.i.i621, !dbg !4932
  %or10.i.i623 = or i32 %shl2.i.i615, %or9.i.i622, !dbg !4933
  %411 = load i32, i32* %re_index.i597, align 4, !dbg !4934
  %and.i624 = and i32 %411, 7, !dbg !4935
  %shl.i625 = shl i32 %or10.i.i623, %and.i624, !dbg !4936
  store i32 %shl.i625, i32* %re_cache.i598, align 4, !dbg !4937
  %412 = load i32, i32* %re_cache.i598, align 4, !dbg !4938
  %413 = load i32, i32* %bits.addr.i594, align 4, !dbg !4939
  %conv.i626 = trunc i32 %413 to i8, !dbg !4939
  %call2.i627 = call i32 @NEG_USR32(i32 %412, i8 signext %conv.i626) #9, !dbg !4940
  store i32 %call2.i627, i32* %index1.i602, align 4, !dbg !4941
  %414 = load i32, i32* %index1.i602, align 4, !dbg !4942
  %idxprom.i628 = zext i32 %414 to i64, !dbg !4943
  %415 = load [2 x i16]*, [2 x i16]** %table.addr.i593, align 8, !dbg !4943
  %arrayidx.i629 = getelementptr inbounds [2 x i16], [2 x i16]* %415, i64 %idxprom.i628, !dbg !4943
  %arrayidx3.i630 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i629, i64 0, i64 0, !dbg !4943
  %416 = load i16, i16* %arrayidx3.i630, align 2, !dbg !4943
  %conv4.i631 = sext i16 %416 to i32, !dbg !4943
  store i32 %conv4.i631, i32* %code.i596, align 4, !dbg !4944
  %417 = load i32, i32* %index1.i602, align 4, !dbg !4945
  %idxprom5.i632 = zext i32 %417 to i64, !dbg !4946
  %418 = load [2 x i16]*, [2 x i16]** %table.addr.i593, align 8, !dbg !4946
  %arrayidx6.i633 = getelementptr inbounds [2 x i16], [2 x i16]* %418, i64 %idxprom5.i632, !dbg !4946
  %arrayidx7.i634 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i633, i64 0, i64 1, !dbg !4946
  %419 = load i16, i16* %arrayidx7.i634, align 2, !dbg !4946
  %conv8.i635 = sext i16 %419 to i32, !dbg !4946
  store i32 %conv8.i635, i32* %n.i600, align 4, !dbg !4947
  %420 = load i32, i32* %max_depth.addr.i595, align 4, !dbg !4948
  %cmp.i636 = icmp sgt i32 %420, 1, !dbg !4949
  br i1 %cmp.i636, label %land.lhs.true.i638, label %if.end68.i725, !dbg !4950

land.lhs.true.i638:                               ; preds = %for.body140
  %421 = load i32, i32* %n.i600, align 4, !dbg !4951
  %cmp10.i637 = icmp slt i32 %421, 0, !dbg !4952
  br i1 %cmp10.i637, label %if.then.i641, label %if.end68.i725, !dbg !4953

if.then.i641:                                     ; preds = %land.lhs.true.i638
  %422 = load i32, i32* %re_size_plus8.i599, align 4, !dbg !4954
  %423 = load i32, i32* %re_index.i597, align 4, !dbg !4955
  %424 = load i32, i32* %bits.addr.i594, align 4, !dbg !4956
  %add.i639 = add i32 %423, %424, !dbg !4957
  %cmp12.i640 = icmp ugt i32 %422, %add.i639, !dbg !4958
  br i1 %cmp12.i640, label %cond.true.i643, label %cond.false.i644, !dbg !4959

cond.true.i643:                                   ; preds = %if.then.i641
  %425 = load i32, i32* %re_index.i597, align 4, !dbg !4960
  %426 = load i32, i32* %bits.addr.i594, align 4, !dbg !4961
  %add14.i642 = add i32 %425, %426, !dbg !4962
  br label %cond.end.i680, !dbg !4963

cond.false.i644:                                  ; preds = %if.then.i641
  %427 = load i32, i32* %re_size_plus8.i599, align 4, !dbg !4964
  br label %cond.end.i680, !dbg !4965

cond.end.i680:                                    ; preds = %cond.false.i644, %cond.true.i643
  %cond.i645 = phi i32 [ %add14.i642, %cond.true.i643 ], [ %427, %cond.false.i644 ], !dbg !4966
  store i32 %cond.i645, i32* %re_index.i597, align 4, !dbg !4967
  %428 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i592, align 8, !dbg !4968
  %buffer15.i646 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %428, i32 0, i32 0, !dbg !4969
  %429 = load i8*, i8** %buffer15.i646, align 8, !dbg !4969
  %430 = load i32, i32* %re_index.i597, align 4, !dbg !4970
  %shr16.i647 = lshr i32 %430, 3, !dbg !4971
  %idx.ext17.i648 = zext i32 %shr16.i647 to i64, !dbg !4972
  %add.ptr18.i649 = getelementptr inbounds i8, i8* %429, i64 %idx.ext17.i648, !dbg !4972
  %431 = bitcast i8* %add.ptr18.i649 to %union.unaligned_32*, !dbg !4973
  %l19.i650 = bitcast %union.unaligned_32* %431 to i32*, !dbg !4973
  %432 = load i32, i32* %l19.i650, align 1, !dbg !4973
  store i32 %432, i32* %x.addr.i81.i590, align 4, !dbg !4974
  %433 = load i32, i32* %x.addr.i81.i590, align 4, !dbg !4975
  %shl.i82.i651 = shl i32 %433, 8, !dbg !4976
  %and.i83.i652 = and i32 %shl.i82.i651, 65280, !dbg !4977
  %434 = load i32, i32* %x.addr.i81.i590, align 4, !dbg !4978
  %shr.i84.i653 = lshr i32 %434, 8, !dbg !4979
  %and1.i85.i654 = and i32 %shr.i84.i653, 255, !dbg !4980
  %or.i86.i655 = or i32 %and.i83.i652, %and1.i85.i654, !dbg !4981
  %shl2.i87.i656 = shl i32 %or.i86.i655, 16, !dbg !4982
  %435 = load i32, i32* %x.addr.i81.i590, align 4, !dbg !4983
  %shr3.i88.i657 = lshr i32 %435, 16, !dbg !4984
  %shl4.i89.i658 = shl i32 %shr3.i88.i657, 8, !dbg !4985
  %and5.i90.i659 = and i32 %shl4.i89.i658, 65280, !dbg !4986
  %436 = load i32, i32* %x.addr.i81.i590, align 4, !dbg !4987
  %shr6.i91.i660 = lshr i32 %436, 16, !dbg !4988
  %shr7.i92.i661 = lshr i32 %shr6.i91.i660, 8, !dbg !4989
  %and8.i93.i662 = and i32 %shr7.i92.i661, 255, !dbg !4990
  %or9.i94.i663 = or i32 %and5.i90.i659, %and8.i93.i662, !dbg !4991
  %or10.i95.i664 = or i32 %shl2.i87.i656, %or9.i94.i663, !dbg !4992
  %437 = load i32, i32* %re_index.i597, align 4, !dbg !4993
  %and21.i665 = and i32 %437, 7, !dbg !4994
  %shl22.i666 = shl i32 %or10.i95.i664, %and21.i665, !dbg !4995
  store i32 %shl22.i666, i32* %re_cache.i598, align 4, !dbg !4996
  %438 = load i32, i32* %n.i600, align 4, !dbg !4997
  %sub.i667 = sub nsw i32 0, %438, !dbg !4998
  store i32 %sub.i667, i32* %nb_bits.i601, align 4, !dbg !4999
  %439 = load i32, i32* %re_cache.i598, align 4, !dbg !5000
  %440 = load i32, i32* %nb_bits.i601, align 4, !dbg !5001
  %conv23.i668 = trunc i32 %440 to i8, !dbg !5001
  %call24.i669 = call i32 @NEG_USR32(i32 %439, i8 signext %conv23.i668) #9, !dbg !5002
  %441 = load i32, i32* %code.i596, align 4, !dbg !5003
  %add25.i670 = add i32 %call24.i669, %441, !dbg !5004
  store i32 %add25.i670, i32* %index1.i602, align 4, !dbg !5005
  %442 = load i32, i32* %index1.i602, align 4, !dbg !5006
  %idxprom26.i671 = zext i32 %442 to i64, !dbg !5007
  %443 = load [2 x i16]*, [2 x i16]** %table.addr.i593, align 8, !dbg !5007
  %arrayidx27.i672 = getelementptr inbounds [2 x i16], [2 x i16]* %443, i64 %idxprom26.i671, !dbg !5007
  %arrayidx28.i673 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i672, i64 0, i64 0, !dbg !5007
  %444 = load i16, i16* %arrayidx28.i673, align 2, !dbg !5007
  %conv29.i674 = sext i16 %444 to i32, !dbg !5007
  store i32 %conv29.i674, i32* %code.i596, align 4, !dbg !5008
  %445 = load i32, i32* %index1.i602, align 4, !dbg !5009
  %idxprom30.i675 = zext i32 %445 to i64, !dbg !5010
  %446 = load [2 x i16]*, [2 x i16]** %table.addr.i593, align 8, !dbg !5010
  %arrayidx31.i676 = getelementptr inbounds [2 x i16], [2 x i16]* %446, i64 %idxprom30.i675, !dbg !5010
  %arrayidx32.i677 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i676, i64 0, i64 1, !dbg !5010
  %447 = load i16, i16* %arrayidx32.i677, align 2, !dbg !5010
  %conv33.i678 = sext i16 %447 to i32, !dbg !5010
  store i32 %conv33.i678, i32* %n.i600, align 4, !dbg !5011
  %448 = load i32, i32* %max_depth.addr.i595, align 4, !dbg !5012
  %cmp34.i679 = icmp sgt i32 %448, 2, !dbg !5013
  br i1 %cmp34.i679, label %land.lhs.true36.i682, label %if.end.i724, !dbg !5014

land.lhs.true36.i682:                             ; preds = %cond.end.i680
  %449 = load i32, i32* %n.i600, align 4, !dbg !5015
  %cmp37.i681 = icmp slt i32 %449, 0, !dbg !5016
  br i1 %cmp37.i681, label %if.then39.i685, label %if.end.i724, !dbg !5017

if.then39.i685:                                   ; preds = %land.lhs.true36.i682
  %450 = load i32, i32* %re_size_plus8.i599, align 4, !dbg !5018
  %451 = load i32, i32* %re_index.i597, align 4, !dbg !5019
  %452 = load i32, i32* %nb_bits.i601, align 4, !dbg !5020
  %add40.i683 = add i32 %451, %452, !dbg !5021
  %cmp41.i684 = icmp ugt i32 %450, %add40.i683, !dbg !5022
  br i1 %cmp41.i684, label %cond.true43.i687, label %cond.false45.i688, !dbg !5023

cond.true43.i687:                                 ; preds = %if.then39.i685
  %453 = load i32, i32* %re_index.i597, align 4, !dbg !5024
  %454 = load i32, i32* %nb_bits.i601, align 4, !dbg !5025
  %add44.i686 = add i32 %453, %454, !dbg !5026
  br label %cond.end46.i723, !dbg !5027

cond.false45.i688:                                ; preds = %if.then39.i685
  %455 = load i32, i32* %re_size_plus8.i599, align 4, !dbg !5028
  br label %cond.end46.i723, !dbg !5029

cond.end46.i723:                                  ; preds = %cond.false45.i688, %cond.true43.i687
  %cond47.i689 = phi i32 [ %add44.i686, %cond.true43.i687 ], [ %455, %cond.false45.i688 ], !dbg !5030
  store i32 %cond47.i689, i32* %re_index.i597, align 4, !dbg !5031
  %456 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i592, align 8, !dbg !5032
  %buffer48.i690 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %456, i32 0, i32 0, !dbg !5033
  %457 = load i8*, i8** %buffer48.i690, align 8, !dbg !5033
  %458 = load i32, i32* %re_index.i597, align 4, !dbg !5034
  %shr49.i691 = lshr i32 %458, 3, !dbg !5035
  %idx.ext50.i692 = zext i32 %shr49.i691 to i64, !dbg !5036
  %add.ptr51.i693 = getelementptr inbounds i8, i8* %457, i64 %idx.ext50.i692, !dbg !5036
  %459 = bitcast i8* %add.ptr51.i693 to %union.unaligned_32*, !dbg !5037
  %l52.i694 = bitcast %union.unaligned_32* %459 to i32*, !dbg !5037
  %460 = load i32, i32* %l52.i694, align 1, !dbg !5037
  store i32 %460, i32* %x.addr.i96.i589, align 4, !dbg !5038
  %461 = load i32, i32* %x.addr.i96.i589, align 4, !dbg !5039
  %shl.i97.i695 = shl i32 %461, 8, !dbg !5040
  %and.i98.i696 = and i32 %shl.i97.i695, 65280, !dbg !5041
  %462 = load i32, i32* %x.addr.i96.i589, align 4, !dbg !5042
  %shr.i99.i697 = lshr i32 %462, 8, !dbg !5043
  %and1.i100.i698 = and i32 %shr.i99.i697, 255, !dbg !5044
  %or.i101.i699 = or i32 %and.i98.i696, %and1.i100.i698, !dbg !5045
  %shl2.i102.i700 = shl i32 %or.i101.i699, 16, !dbg !5046
  %463 = load i32, i32* %x.addr.i96.i589, align 4, !dbg !5047
  %shr3.i103.i701 = lshr i32 %463, 16, !dbg !5048
  %shl4.i104.i702 = shl i32 %shr3.i103.i701, 8, !dbg !5049
  %and5.i105.i703 = and i32 %shl4.i104.i702, 65280, !dbg !5050
  %464 = load i32, i32* %x.addr.i96.i589, align 4, !dbg !5051
  %shr6.i106.i704 = lshr i32 %464, 16, !dbg !5052
  %shr7.i107.i705 = lshr i32 %shr6.i106.i704, 8, !dbg !5053
  %and8.i108.i706 = and i32 %shr7.i107.i705, 255, !dbg !5054
  %or9.i109.i707 = or i32 %and5.i105.i703, %and8.i108.i706, !dbg !5055
  %or10.i110.i708 = or i32 %shl2.i102.i700, %or9.i109.i707, !dbg !5056
  %465 = load i32, i32* %re_index.i597, align 4, !dbg !5057
  %and54.i709 = and i32 %465, 7, !dbg !5058
  %shl55.i710 = shl i32 %or10.i110.i708, %and54.i709, !dbg !5059
  store i32 %shl55.i710, i32* %re_cache.i598, align 4, !dbg !5060
  %466 = load i32, i32* %n.i600, align 4, !dbg !5061
  %sub56.i711 = sub nsw i32 0, %466, !dbg !5062
  store i32 %sub56.i711, i32* %nb_bits.i601, align 4, !dbg !5063
  %467 = load i32, i32* %re_cache.i598, align 4, !dbg !5064
  %468 = load i32, i32* %nb_bits.i601, align 4, !dbg !5065
  %conv57.i712 = trunc i32 %468 to i8, !dbg !5065
  %call58.i713 = call i32 @NEG_USR32(i32 %467, i8 signext %conv57.i712) #9, !dbg !5066
  %469 = load i32, i32* %code.i596, align 4, !dbg !5067
  %add59.i714 = add i32 %call58.i713, %469, !dbg !5068
  store i32 %add59.i714, i32* %index1.i602, align 4, !dbg !5069
  %470 = load i32, i32* %index1.i602, align 4, !dbg !5070
  %idxprom60.i715 = zext i32 %470 to i64, !dbg !5071
  %471 = load [2 x i16]*, [2 x i16]** %table.addr.i593, align 8, !dbg !5071
  %arrayidx61.i716 = getelementptr inbounds [2 x i16], [2 x i16]* %471, i64 %idxprom60.i715, !dbg !5071
  %arrayidx62.i717 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i716, i64 0, i64 0, !dbg !5071
  %472 = load i16, i16* %arrayidx62.i717, align 2, !dbg !5071
  %conv63.i718 = sext i16 %472 to i32, !dbg !5071
  store i32 %conv63.i718, i32* %code.i596, align 4, !dbg !5072
  %473 = load i32, i32* %index1.i602, align 4, !dbg !5073
  %idxprom64.i719 = zext i32 %473 to i64, !dbg !5074
  %474 = load [2 x i16]*, [2 x i16]** %table.addr.i593, align 8, !dbg !5074
  %arrayidx65.i720 = getelementptr inbounds [2 x i16], [2 x i16]* %474, i64 %idxprom64.i719, !dbg !5074
  %arrayidx66.i721 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i720, i64 0, i64 1, !dbg !5074
  %475 = load i16, i16* %arrayidx66.i721, align 2, !dbg !5074
  %conv67.i722 = sext i16 %475 to i32, !dbg !5074
  store i32 %conv67.i722, i32* %n.i600, align 4, !dbg !5075
  br label %if.end.i724, !dbg !5076

if.end.i724:                                      ; preds = %cond.end46.i723, %land.lhs.true36.i682, %cond.end.i680
  br label %if.end68.i725, !dbg !5077

if.end68.i725:                                    ; preds = %if.end.i724, %land.lhs.true.i638, %for.body140
  %476 = load i32, i32* %n.i600, align 4, !dbg !5078
  %477 = load i32, i32* %re_cache.i598, align 4, !dbg !5079
  %shl70.i726 = shl i32 %477, %476, !dbg !5079
  store i32 %shl70.i726, i32* %re_cache.i598, align 4, !dbg !5079
  %478 = load i32, i32* %re_size_plus8.i599, align 4, !dbg !5080
  %479 = load i32, i32* %re_index.i597, align 4, !dbg !5081
  %480 = load i32, i32* %n.i600, align 4, !dbg !5082
  %add71.i727 = add i32 %479, %480, !dbg !5083
  %cmp72.i728 = icmp ugt i32 %478, %add71.i727, !dbg !5084
  br i1 %cmp72.i728, label %cond.true74.i730, label %cond.false76.i731, !dbg !5085

cond.true74.i730:                                 ; preds = %if.end68.i725
  %481 = load i32, i32* %re_index.i597, align 4, !dbg !5086
  %482 = load i32, i32* %n.i600, align 4, !dbg !5087
  %add75.i729 = add i32 %481, %482, !dbg !5088
  br label %get_vlc2.exit734, !dbg !5089

cond.false76.i731:                                ; preds = %if.end68.i725
  %483 = load i32, i32* %re_size_plus8.i599, align 4, !dbg !5090
  br label %get_vlc2.exit734, !dbg !5091

get_vlc2.exit734:                                 ; preds = %cond.true74.i730, %cond.false76.i731
  %cond78.i732 = phi i32 [ %add75.i729, %cond.true74.i730 ], [ %483, %cond.false76.i731 ], !dbg !5092
  store i32 %cond78.i732, i32* %re_index.i597, align 4, !dbg !5093
  %484 = load i32, i32* %re_index.i597, align 4, !dbg !5094
  %485 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i592, align 8, !dbg !5095
  %index80.i733 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %485, i32 0, i32 2, !dbg !5096
  store i32 %484, i32* %index80.i733, align 8, !dbg !5097
  %486 = load i32, i32* %code.i596, align 4, !dbg !5098
  store i32 %486, i32* %delta, align 4, !dbg !5099
  %487 = load i32, i32* %i, align 4, !dbg !5100
  %idxprom144 = sext i32 %487 to i64, !dbg !5101
  %488 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5101
  %qu_wordlen145 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %488, i32 0, i32 5, !dbg !5102
  %arrayidx146 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen145, i64 0, i64 %idxprom144, !dbg !5101
  %489 = load i32, i32* %arrayidx146, align 4, !dbg !5101
  %490 = load i32, i32* %delta, align 4, !dbg !5103
  %add147 = add nsw i32 %489, %490, !dbg !5104
  %and148 = and i32 %add147, 7, !dbg !5105
  %491 = load i32, i32* %i, align 4, !dbg !5106
  %idxprom149 = sext i32 %491 to i64, !dbg !5107
  %492 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5107
  %qu_wordlen150 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %492, i32 0, i32 5, !dbg !5108
  %arrayidx151 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen150, i64 0, i64 %idxprom149, !dbg !5107
  store i32 %and148, i32* %arrayidx151, align 4, !dbg !5109
  br label %for.inc152, !dbg !5110

for.inc152:                                       ; preds = %get_vlc2.exit734
  %493 = load i32, i32* %i, align 4, !dbg !5111
  %inc153 = add nsw i32 %493, 1, !dbg !5111
  store i32 %inc153, i32* %i, align 4, !dbg !5111
  br label %for.cond137, !dbg !5113, !llvm.loop !5114

for.end154:                                       ; preds = %for.cond137
  br label %if.end208, !dbg !5116

if.else155:                                       ; preds = %if.then121
  store i32 0, i32* %i, align 4, !dbg !5117
  br label %for.cond156, !dbg !5118

for.cond156:                                      ; preds = %for.inc189, %if.else155
  %494 = load i32, i32* %i, align 4, !dbg !5119
  %495 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5121
  %num_coded_vals157 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %495, i32 0, i32 1, !dbg !5122
  %496 = load i32, i32* %num_coded_vals157, align 4, !dbg !5122
  %and158 = and i32 %496, -2, !dbg !5123
  %cmp159 = icmp slt i32 %494, %and158, !dbg !5124
  br i1 %cmp159, label %for.body160, label %for.end191, !dbg !5125

for.body160:                                      ; preds = %for.cond156
  %497 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5126
  %call161 = call i32 @get_bits1(%struct.GetBitContext* %497), !dbg !5127
  %tobool162 = icmp ne i32 %call161, 0, !dbg !5127
  br i1 %tobool162, label %if.end188, label %if.then163, !dbg !5128

if.then163:                                       ; preds = %for.body160
  %498 = load i32, i32* %i, align 4, !dbg !5129
  %idxprom164 = sext i32 %498 to i64, !dbg !5130
  %499 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5130
  %qu_wordlen165 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %499, i32 0, i32 5, !dbg !5131
  %arrayidx166 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen165, i64 0, i64 %idxprom164, !dbg !5130
  %500 = load i32, i32* %arrayidx166, align 4, !dbg !5130
  %501 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5132
  %502 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5133
  %table167 = getelementptr inbounds %struct.VLC, %struct.VLC* %502, i32 0, i32 1, !dbg !5134
  %503 = load [2 x i16]*, [2 x i16]** %table167, align 8, !dbg !5134
  %504 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5135
  %bits168 = getelementptr inbounds %struct.VLC, %struct.VLC* %504, i32 0, i32 0, !dbg !5136
  %505 = load i32, i32* %bits168, align 8, !dbg !5136
  store %struct.GetBitContext* %501, %struct.GetBitContext** %s.addr.i738, align 8, !dbg !5137
  store [2 x i16]* %503, [2 x i16]** %table.addr.i739, align 8, !dbg !5137
  store i32 %505, i32* %bits.addr.i740, align 4, !dbg !5137
  store i32 1, i32* %max_depth.addr.i741, align 4, !dbg !5137
  %506 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i738, align 8, !dbg !5138
  %index.i749 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %506, i32 0, i32 2, !dbg !5139
  %507 = load i32, i32* %index.i749, align 8, !dbg !5139
  store i32 %507, i32* %re_index.i743, align 4, !dbg !3886
  %508 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i738, align 8, !dbg !5140
  %size_in_bits_plus8.i750 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %508, i32 0, i32 4, !dbg !5141
  %509 = load i32, i32* %size_in_bits_plus8.i750, align 8, !dbg !5141
  store i32 %509, i32* %re_size_plus8.i745, align 4, !dbg !3888
  %510 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i738, align 8, !dbg !5142
  %buffer.i751 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %510, i32 0, i32 0, !dbg !5143
  %511 = load i8*, i8** %buffer.i751, align 8, !dbg !5143
  %512 = load i32, i32* %re_index.i743, align 4, !dbg !5144
  %shr.i752 = lshr i32 %512, 3, !dbg !5145
  %idx.ext.i753 = zext i32 %shr.i752 to i64, !dbg !5146
  %add.ptr.i754 = getelementptr inbounds i8, i8* %511, i64 %idx.ext.i753, !dbg !5146
  %513 = bitcast i8* %add.ptr.i754 to %union.unaligned_32*, !dbg !5147
  %l.i755 = bitcast %union.unaligned_32* %513 to i32*, !dbg !5147
  %514 = load i32, i32* %l.i755, align 1, !dbg !5147
  store i32 %514, i32* %x.addr.i.i737, align 4, !dbg !5148
  %515 = load i32, i32* %x.addr.i.i737, align 4, !dbg !5149
  %shl.i.i756 = shl i32 %515, 8, !dbg !5150
  %and.i.i757 = and i32 %shl.i.i756, 65280, !dbg !5151
  %516 = load i32, i32* %x.addr.i.i737, align 4, !dbg !5152
  %shr.i.i758 = lshr i32 %516, 8, !dbg !5153
  %and1.i.i759 = and i32 %shr.i.i758, 255, !dbg !5154
  %or.i.i760 = or i32 %and.i.i757, %and1.i.i759, !dbg !5155
  %shl2.i.i761 = shl i32 %or.i.i760, 16, !dbg !5156
  %517 = load i32, i32* %x.addr.i.i737, align 4, !dbg !5157
  %shr3.i.i762 = lshr i32 %517, 16, !dbg !5158
  %shl4.i.i763 = shl i32 %shr3.i.i762, 8, !dbg !5159
  %and5.i.i764 = and i32 %shl4.i.i763, 65280, !dbg !5160
  %518 = load i32, i32* %x.addr.i.i737, align 4, !dbg !5161
  %shr6.i.i765 = lshr i32 %518, 16, !dbg !5162
  %shr7.i.i766 = lshr i32 %shr6.i.i765, 8, !dbg !5163
  %and8.i.i767 = and i32 %shr7.i.i766, 255, !dbg !5164
  %or9.i.i768 = or i32 %and5.i.i764, %and8.i.i767, !dbg !5165
  %or10.i.i769 = or i32 %shl2.i.i761, %or9.i.i768, !dbg !5166
  %519 = load i32, i32* %re_index.i743, align 4, !dbg !5167
  %and.i770 = and i32 %519, 7, !dbg !5168
  %shl.i771 = shl i32 %or10.i.i769, %and.i770, !dbg !5169
  store i32 %shl.i771, i32* %re_cache.i744, align 4, !dbg !5170
  %520 = load i32, i32* %re_cache.i744, align 4, !dbg !5171
  %521 = load i32, i32* %bits.addr.i740, align 4, !dbg !5172
  %conv.i772 = trunc i32 %521 to i8, !dbg !5172
  %call2.i773 = call i32 @NEG_USR32(i32 %520, i8 signext %conv.i772) #9, !dbg !5173
  store i32 %call2.i773, i32* %index1.i748, align 4, !dbg !5174
  %522 = load i32, i32* %index1.i748, align 4, !dbg !5175
  %idxprom.i774 = zext i32 %522 to i64, !dbg !5176
  %523 = load [2 x i16]*, [2 x i16]** %table.addr.i739, align 8, !dbg !5176
  %arrayidx.i775 = getelementptr inbounds [2 x i16], [2 x i16]* %523, i64 %idxprom.i774, !dbg !5176
  %arrayidx3.i776 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i775, i64 0, i64 0, !dbg !5176
  %524 = load i16, i16* %arrayidx3.i776, align 2, !dbg !5176
  %conv4.i777 = sext i16 %524 to i32, !dbg !5176
  store i32 %conv4.i777, i32* %code.i742, align 4, !dbg !5177
  %525 = load i32, i32* %index1.i748, align 4, !dbg !5178
  %idxprom5.i778 = zext i32 %525 to i64, !dbg !5179
  %526 = load [2 x i16]*, [2 x i16]** %table.addr.i739, align 8, !dbg !5179
  %arrayidx6.i779 = getelementptr inbounds [2 x i16], [2 x i16]* %526, i64 %idxprom5.i778, !dbg !5179
  %arrayidx7.i780 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i779, i64 0, i64 1, !dbg !5179
  %527 = load i16, i16* %arrayidx7.i780, align 2, !dbg !5179
  %conv8.i781 = sext i16 %527 to i32, !dbg !5179
  store i32 %conv8.i781, i32* %n.i746, align 4, !dbg !5180
  %528 = load i32, i32* %max_depth.addr.i741, align 4, !dbg !5181
  %cmp.i782 = icmp sgt i32 %528, 1, !dbg !5182
  br i1 %cmp.i782, label %land.lhs.true.i784, label %if.end68.i871, !dbg !5183

land.lhs.true.i784:                               ; preds = %if.then163
  %529 = load i32, i32* %n.i746, align 4, !dbg !5184
  %cmp10.i783 = icmp slt i32 %529, 0, !dbg !5185
  br i1 %cmp10.i783, label %if.then.i787, label %if.end68.i871, !dbg !5186

if.then.i787:                                     ; preds = %land.lhs.true.i784
  %530 = load i32, i32* %re_size_plus8.i745, align 4, !dbg !5187
  %531 = load i32, i32* %re_index.i743, align 4, !dbg !5188
  %532 = load i32, i32* %bits.addr.i740, align 4, !dbg !5189
  %add.i785 = add i32 %531, %532, !dbg !5190
  %cmp12.i786 = icmp ugt i32 %530, %add.i785, !dbg !5191
  br i1 %cmp12.i786, label %cond.true.i789, label %cond.false.i790, !dbg !5192

cond.true.i789:                                   ; preds = %if.then.i787
  %533 = load i32, i32* %re_index.i743, align 4, !dbg !5193
  %534 = load i32, i32* %bits.addr.i740, align 4, !dbg !5194
  %add14.i788 = add i32 %533, %534, !dbg !5195
  br label %cond.end.i826, !dbg !5196

cond.false.i790:                                  ; preds = %if.then.i787
  %535 = load i32, i32* %re_size_plus8.i745, align 4, !dbg !5197
  br label %cond.end.i826, !dbg !5198

cond.end.i826:                                    ; preds = %cond.false.i790, %cond.true.i789
  %cond.i791 = phi i32 [ %add14.i788, %cond.true.i789 ], [ %535, %cond.false.i790 ], !dbg !5199
  store i32 %cond.i791, i32* %re_index.i743, align 4, !dbg !5200
  %536 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i738, align 8, !dbg !5201
  %buffer15.i792 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %536, i32 0, i32 0, !dbg !5202
  %537 = load i8*, i8** %buffer15.i792, align 8, !dbg !5202
  %538 = load i32, i32* %re_index.i743, align 4, !dbg !5203
  %shr16.i793 = lshr i32 %538, 3, !dbg !5204
  %idx.ext17.i794 = zext i32 %shr16.i793 to i64, !dbg !5205
  %add.ptr18.i795 = getelementptr inbounds i8, i8* %537, i64 %idx.ext17.i794, !dbg !5205
  %539 = bitcast i8* %add.ptr18.i795 to %union.unaligned_32*, !dbg !5206
  %l19.i796 = bitcast %union.unaligned_32* %539 to i32*, !dbg !5206
  %540 = load i32, i32* %l19.i796, align 1, !dbg !5206
  store i32 %540, i32* %x.addr.i81.i736, align 4, !dbg !5207
  %541 = load i32, i32* %x.addr.i81.i736, align 4, !dbg !5208
  %shl.i82.i797 = shl i32 %541, 8, !dbg !5209
  %and.i83.i798 = and i32 %shl.i82.i797, 65280, !dbg !5210
  %542 = load i32, i32* %x.addr.i81.i736, align 4, !dbg !5211
  %shr.i84.i799 = lshr i32 %542, 8, !dbg !5212
  %and1.i85.i800 = and i32 %shr.i84.i799, 255, !dbg !5213
  %or.i86.i801 = or i32 %and.i83.i798, %and1.i85.i800, !dbg !5214
  %shl2.i87.i802 = shl i32 %or.i86.i801, 16, !dbg !5215
  %543 = load i32, i32* %x.addr.i81.i736, align 4, !dbg !5216
  %shr3.i88.i803 = lshr i32 %543, 16, !dbg !5217
  %shl4.i89.i804 = shl i32 %shr3.i88.i803, 8, !dbg !5218
  %and5.i90.i805 = and i32 %shl4.i89.i804, 65280, !dbg !5219
  %544 = load i32, i32* %x.addr.i81.i736, align 4, !dbg !5220
  %shr6.i91.i806 = lshr i32 %544, 16, !dbg !5221
  %shr7.i92.i807 = lshr i32 %shr6.i91.i806, 8, !dbg !5222
  %and8.i93.i808 = and i32 %shr7.i92.i807, 255, !dbg !5223
  %or9.i94.i809 = or i32 %and5.i90.i805, %and8.i93.i808, !dbg !5224
  %or10.i95.i810 = or i32 %shl2.i87.i802, %or9.i94.i809, !dbg !5225
  %545 = load i32, i32* %re_index.i743, align 4, !dbg !5226
  %and21.i811 = and i32 %545, 7, !dbg !5227
  %shl22.i812 = shl i32 %or10.i95.i810, %and21.i811, !dbg !5228
  store i32 %shl22.i812, i32* %re_cache.i744, align 4, !dbg !5229
  %546 = load i32, i32* %n.i746, align 4, !dbg !5230
  %sub.i813 = sub nsw i32 0, %546, !dbg !5231
  store i32 %sub.i813, i32* %nb_bits.i747, align 4, !dbg !5232
  %547 = load i32, i32* %re_cache.i744, align 4, !dbg !5233
  %548 = load i32, i32* %nb_bits.i747, align 4, !dbg !5234
  %conv23.i814 = trunc i32 %548 to i8, !dbg !5234
  %call24.i815 = call i32 @NEG_USR32(i32 %547, i8 signext %conv23.i814) #9, !dbg !5235
  %549 = load i32, i32* %code.i742, align 4, !dbg !5236
  %add25.i816 = add i32 %call24.i815, %549, !dbg !5237
  store i32 %add25.i816, i32* %index1.i748, align 4, !dbg !5238
  %550 = load i32, i32* %index1.i748, align 4, !dbg !5239
  %idxprom26.i817 = zext i32 %550 to i64, !dbg !5240
  %551 = load [2 x i16]*, [2 x i16]** %table.addr.i739, align 8, !dbg !5240
  %arrayidx27.i818 = getelementptr inbounds [2 x i16], [2 x i16]* %551, i64 %idxprom26.i817, !dbg !5240
  %arrayidx28.i819 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i818, i64 0, i64 0, !dbg !5240
  %552 = load i16, i16* %arrayidx28.i819, align 2, !dbg !5240
  %conv29.i820 = sext i16 %552 to i32, !dbg !5240
  store i32 %conv29.i820, i32* %code.i742, align 4, !dbg !5241
  %553 = load i32, i32* %index1.i748, align 4, !dbg !5242
  %idxprom30.i821 = zext i32 %553 to i64, !dbg !5243
  %554 = load [2 x i16]*, [2 x i16]** %table.addr.i739, align 8, !dbg !5243
  %arrayidx31.i822 = getelementptr inbounds [2 x i16], [2 x i16]* %554, i64 %idxprom30.i821, !dbg !5243
  %arrayidx32.i823 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i822, i64 0, i64 1, !dbg !5243
  %555 = load i16, i16* %arrayidx32.i823, align 2, !dbg !5243
  %conv33.i824 = sext i16 %555 to i32, !dbg !5243
  store i32 %conv33.i824, i32* %n.i746, align 4, !dbg !5244
  %556 = load i32, i32* %max_depth.addr.i741, align 4, !dbg !5245
  %cmp34.i825 = icmp sgt i32 %556, 2, !dbg !5246
  br i1 %cmp34.i825, label %land.lhs.true36.i828, label %if.end.i870, !dbg !5247

land.lhs.true36.i828:                             ; preds = %cond.end.i826
  %557 = load i32, i32* %n.i746, align 4, !dbg !5248
  %cmp37.i827 = icmp slt i32 %557, 0, !dbg !5249
  br i1 %cmp37.i827, label %if.then39.i831, label %if.end.i870, !dbg !5250

if.then39.i831:                                   ; preds = %land.lhs.true36.i828
  %558 = load i32, i32* %re_size_plus8.i745, align 4, !dbg !5251
  %559 = load i32, i32* %re_index.i743, align 4, !dbg !5252
  %560 = load i32, i32* %nb_bits.i747, align 4, !dbg !5253
  %add40.i829 = add i32 %559, %560, !dbg !5254
  %cmp41.i830 = icmp ugt i32 %558, %add40.i829, !dbg !5255
  br i1 %cmp41.i830, label %cond.true43.i833, label %cond.false45.i834, !dbg !5256

cond.true43.i833:                                 ; preds = %if.then39.i831
  %561 = load i32, i32* %re_index.i743, align 4, !dbg !5257
  %562 = load i32, i32* %nb_bits.i747, align 4, !dbg !5258
  %add44.i832 = add i32 %561, %562, !dbg !5259
  br label %cond.end46.i869, !dbg !5260

cond.false45.i834:                                ; preds = %if.then39.i831
  %563 = load i32, i32* %re_size_plus8.i745, align 4, !dbg !5261
  br label %cond.end46.i869, !dbg !5262

cond.end46.i869:                                  ; preds = %cond.false45.i834, %cond.true43.i833
  %cond47.i835 = phi i32 [ %add44.i832, %cond.true43.i833 ], [ %563, %cond.false45.i834 ], !dbg !5263
  store i32 %cond47.i835, i32* %re_index.i743, align 4, !dbg !5264
  %564 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i738, align 8, !dbg !5265
  %buffer48.i836 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %564, i32 0, i32 0, !dbg !5266
  %565 = load i8*, i8** %buffer48.i836, align 8, !dbg !5266
  %566 = load i32, i32* %re_index.i743, align 4, !dbg !5267
  %shr49.i837 = lshr i32 %566, 3, !dbg !5268
  %idx.ext50.i838 = zext i32 %shr49.i837 to i64, !dbg !5269
  %add.ptr51.i839 = getelementptr inbounds i8, i8* %565, i64 %idx.ext50.i838, !dbg !5269
  %567 = bitcast i8* %add.ptr51.i839 to %union.unaligned_32*, !dbg !5270
  %l52.i840 = bitcast %union.unaligned_32* %567 to i32*, !dbg !5270
  %568 = load i32, i32* %l52.i840, align 1, !dbg !5270
  store i32 %568, i32* %x.addr.i96.i735, align 4, !dbg !5271
  %569 = load i32, i32* %x.addr.i96.i735, align 4, !dbg !5272
  %shl.i97.i841 = shl i32 %569, 8, !dbg !5273
  %and.i98.i842 = and i32 %shl.i97.i841, 65280, !dbg !5274
  %570 = load i32, i32* %x.addr.i96.i735, align 4, !dbg !5275
  %shr.i99.i843 = lshr i32 %570, 8, !dbg !5276
  %and1.i100.i844 = and i32 %shr.i99.i843, 255, !dbg !5277
  %or.i101.i845 = or i32 %and.i98.i842, %and1.i100.i844, !dbg !5278
  %shl2.i102.i846 = shl i32 %or.i101.i845, 16, !dbg !5279
  %571 = load i32, i32* %x.addr.i96.i735, align 4, !dbg !5280
  %shr3.i103.i847 = lshr i32 %571, 16, !dbg !5281
  %shl4.i104.i848 = shl i32 %shr3.i103.i847, 8, !dbg !5282
  %and5.i105.i849 = and i32 %shl4.i104.i848, 65280, !dbg !5283
  %572 = load i32, i32* %x.addr.i96.i735, align 4, !dbg !5284
  %shr6.i106.i850 = lshr i32 %572, 16, !dbg !5285
  %shr7.i107.i851 = lshr i32 %shr6.i106.i850, 8, !dbg !5286
  %and8.i108.i852 = and i32 %shr7.i107.i851, 255, !dbg !5287
  %or9.i109.i853 = or i32 %and5.i105.i849, %and8.i108.i852, !dbg !5288
  %or10.i110.i854 = or i32 %shl2.i102.i846, %or9.i109.i853, !dbg !5289
  %573 = load i32, i32* %re_index.i743, align 4, !dbg !5290
  %and54.i855 = and i32 %573, 7, !dbg !5291
  %shl55.i856 = shl i32 %or10.i110.i854, %and54.i855, !dbg !5292
  store i32 %shl55.i856, i32* %re_cache.i744, align 4, !dbg !5293
  %574 = load i32, i32* %n.i746, align 4, !dbg !5294
  %sub56.i857 = sub nsw i32 0, %574, !dbg !5295
  store i32 %sub56.i857, i32* %nb_bits.i747, align 4, !dbg !5296
  %575 = load i32, i32* %re_cache.i744, align 4, !dbg !5297
  %576 = load i32, i32* %nb_bits.i747, align 4, !dbg !5298
  %conv57.i858 = trunc i32 %576 to i8, !dbg !5298
  %call58.i859 = call i32 @NEG_USR32(i32 %575, i8 signext %conv57.i858) #9, !dbg !5299
  %577 = load i32, i32* %code.i742, align 4, !dbg !5300
  %add59.i860 = add i32 %call58.i859, %577, !dbg !5301
  store i32 %add59.i860, i32* %index1.i748, align 4, !dbg !5302
  %578 = load i32, i32* %index1.i748, align 4, !dbg !5303
  %idxprom60.i861 = zext i32 %578 to i64, !dbg !5304
  %579 = load [2 x i16]*, [2 x i16]** %table.addr.i739, align 8, !dbg !5304
  %arrayidx61.i862 = getelementptr inbounds [2 x i16], [2 x i16]* %579, i64 %idxprom60.i861, !dbg !5304
  %arrayidx62.i863 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i862, i64 0, i64 0, !dbg !5304
  %580 = load i16, i16* %arrayidx62.i863, align 2, !dbg !5304
  %conv63.i864 = sext i16 %580 to i32, !dbg !5304
  store i32 %conv63.i864, i32* %code.i742, align 4, !dbg !5305
  %581 = load i32, i32* %index1.i748, align 4, !dbg !5306
  %idxprom64.i865 = zext i32 %581 to i64, !dbg !5307
  %582 = load [2 x i16]*, [2 x i16]** %table.addr.i739, align 8, !dbg !5307
  %arrayidx65.i866 = getelementptr inbounds [2 x i16], [2 x i16]* %582, i64 %idxprom64.i865, !dbg !5307
  %arrayidx66.i867 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i866, i64 0, i64 1, !dbg !5307
  %583 = load i16, i16* %arrayidx66.i867, align 2, !dbg !5307
  %conv67.i868 = sext i16 %583 to i32, !dbg !5307
  store i32 %conv67.i868, i32* %n.i746, align 4, !dbg !5308
  br label %if.end.i870, !dbg !5309

if.end.i870:                                      ; preds = %cond.end46.i869, %land.lhs.true36.i828, %cond.end.i826
  br label %if.end68.i871, !dbg !5310

if.end68.i871:                                    ; preds = %if.end.i870, %land.lhs.true.i784, %if.then163
  %584 = load i32, i32* %n.i746, align 4, !dbg !5311
  %585 = load i32, i32* %re_cache.i744, align 4, !dbg !5312
  %shl70.i872 = shl i32 %585, %584, !dbg !5312
  store i32 %shl70.i872, i32* %re_cache.i744, align 4, !dbg !5312
  %586 = load i32, i32* %re_size_plus8.i745, align 4, !dbg !5313
  %587 = load i32, i32* %re_index.i743, align 4, !dbg !5314
  %588 = load i32, i32* %n.i746, align 4, !dbg !5315
  %add71.i873 = add i32 %587, %588, !dbg !5316
  %cmp72.i874 = icmp ugt i32 %586, %add71.i873, !dbg !5317
  br i1 %cmp72.i874, label %cond.true74.i876, label %cond.false76.i877, !dbg !5318

cond.true74.i876:                                 ; preds = %if.end68.i871
  %589 = load i32, i32* %re_index.i743, align 4, !dbg !5319
  %590 = load i32, i32* %n.i746, align 4, !dbg !5320
  %add75.i875 = add i32 %589, %590, !dbg !5321
  br label %get_vlc2.exit880, !dbg !5322

cond.false76.i877:                                ; preds = %if.end68.i871
  %591 = load i32, i32* %re_size_plus8.i745, align 4, !dbg !5323
  br label %get_vlc2.exit880, !dbg !5324

get_vlc2.exit880:                                 ; preds = %cond.true74.i876, %cond.false76.i877
  %cond78.i878 = phi i32 [ %add75.i875, %cond.true74.i876 ], [ %591, %cond.false76.i877 ], !dbg !5325
  store i32 %cond78.i878, i32* %re_index.i743, align 4, !dbg !5326
  %592 = load i32, i32* %re_index.i743, align 4, !dbg !5327
  %593 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i738, align 8, !dbg !5328
  %index80.i879 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %593, i32 0, i32 2, !dbg !5329
  store i32 %592, i32* %index80.i879, align 8, !dbg !5330
  %594 = load i32, i32* %code.i742, align 4, !dbg !5331
  %add170 = add nsw i32 %500, %594, !dbg !5332
  %and171 = and i32 %add170, 7, !dbg !5333
  %595 = load i32, i32* %i, align 4, !dbg !5334
  %idxprom172 = sext i32 %595 to i64, !dbg !5335
  %596 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5335
  %qu_wordlen173 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %596, i32 0, i32 5, !dbg !5336
  %arrayidx174 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen173, i64 0, i64 %idxprom172, !dbg !5335
  store i32 %and171, i32* %arrayidx174, align 4, !dbg !5337
  %597 = load i32, i32* %i, align 4, !dbg !5338
  %add175 = add nsw i32 %597, 1, !dbg !5339
  %idxprom176 = sext i32 %add175 to i64, !dbg !5340
  %598 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5340
  %qu_wordlen177 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %598, i32 0, i32 5, !dbg !5341
  %arrayidx178 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen177, i64 0, i64 %idxprom176, !dbg !5340
  %599 = load i32, i32* %arrayidx178, align 4, !dbg !5340
  %600 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5342
  %601 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5343
  %table179 = getelementptr inbounds %struct.VLC, %struct.VLC* %601, i32 0, i32 1, !dbg !5344
  %602 = load [2 x i16]*, [2 x i16]** %table179, align 8, !dbg !5344
  %603 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5345
  %bits180 = getelementptr inbounds %struct.VLC, %struct.VLC* %603, i32 0, i32 0, !dbg !5346
  %604 = load i32, i32* %bits180, align 8, !dbg !5346
  store %struct.GetBitContext* %600, %struct.GetBitContext** %s.addr.i884, align 8, !dbg !5347
  store [2 x i16]* %602, [2 x i16]** %table.addr.i885, align 8, !dbg !5347
  store i32 %604, i32* %bits.addr.i886, align 4, !dbg !5347
  store i32 1, i32* %max_depth.addr.i887, align 4, !dbg !5347
  %605 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i884, align 8, !dbg !5348
  %index.i895 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %605, i32 0, i32 2, !dbg !5349
  %606 = load i32, i32* %index.i895, align 8, !dbg !5349
  store i32 %606, i32* %re_index.i889, align 4, !dbg !3868
  %607 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i884, align 8, !dbg !5350
  %size_in_bits_plus8.i896 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %607, i32 0, i32 4, !dbg !5351
  %608 = load i32, i32* %size_in_bits_plus8.i896, align 8, !dbg !5351
  store i32 %608, i32* %re_size_plus8.i891, align 4, !dbg !3870
  %609 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i884, align 8, !dbg !5352
  %buffer.i897 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %609, i32 0, i32 0, !dbg !5353
  %610 = load i8*, i8** %buffer.i897, align 8, !dbg !5353
  %611 = load i32, i32* %re_index.i889, align 4, !dbg !5354
  %shr.i898 = lshr i32 %611, 3, !dbg !5355
  %idx.ext.i899 = zext i32 %shr.i898 to i64, !dbg !5356
  %add.ptr.i900 = getelementptr inbounds i8, i8* %610, i64 %idx.ext.i899, !dbg !5356
  %612 = bitcast i8* %add.ptr.i900 to %union.unaligned_32*, !dbg !5357
  %l.i901 = bitcast %union.unaligned_32* %612 to i32*, !dbg !5357
  %613 = load i32, i32* %l.i901, align 1, !dbg !5357
  store i32 %613, i32* %x.addr.i.i883, align 4, !dbg !5358
  %614 = load i32, i32* %x.addr.i.i883, align 4, !dbg !5359
  %shl.i.i902 = shl i32 %614, 8, !dbg !5360
  %and.i.i903 = and i32 %shl.i.i902, 65280, !dbg !5361
  %615 = load i32, i32* %x.addr.i.i883, align 4, !dbg !5362
  %shr.i.i904 = lshr i32 %615, 8, !dbg !5363
  %and1.i.i905 = and i32 %shr.i.i904, 255, !dbg !5364
  %or.i.i906 = or i32 %and.i.i903, %and1.i.i905, !dbg !5365
  %shl2.i.i907 = shl i32 %or.i.i906, 16, !dbg !5366
  %616 = load i32, i32* %x.addr.i.i883, align 4, !dbg !5367
  %shr3.i.i908 = lshr i32 %616, 16, !dbg !5368
  %shl4.i.i909 = shl i32 %shr3.i.i908, 8, !dbg !5369
  %and5.i.i910 = and i32 %shl4.i.i909, 65280, !dbg !5370
  %617 = load i32, i32* %x.addr.i.i883, align 4, !dbg !5371
  %shr6.i.i911 = lshr i32 %617, 16, !dbg !5372
  %shr7.i.i912 = lshr i32 %shr6.i.i911, 8, !dbg !5373
  %and8.i.i913 = and i32 %shr7.i.i912, 255, !dbg !5374
  %or9.i.i914 = or i32 %and5.i.i910, %and8.i.i913, !dbg !5375
  %or10.i.i915 = or i32 %shl2.i.i907, %or9.i.i914, !dbg !5376
  %618 = load i32, i32* %re_index.i889, align 4, !dbg !5377
  %and.i916 = and i32 %618, 7, !dbg !5378
  %shl.i917 = shl i32 %or10.i.i915, %and.i916, !dbg !5379
  store i32 %shl.i917, i32* %re_cache.i890, align 4, !dbg !5380
  %619 = load i32, i32* %re_cache.i890, align 4, !dbg !5381
  %620 = load i32, i32* %bits.addr.i886, align 4, !dbg !5382
  %conv.i918 = trunc i32 %620 to i8, !dbg !5382
  %call2.i919 = call i32 @NEG_USR32(i32 %619, i8 signext %conv.i918) #9, !dbg !5383
  store i32 %call2.i919, i32* %index1.i894, align 4, !dbg !5384
  %621 = load i32, i32* %index1.i894, align 4, !dbg !5385
  %idxprom.i920 = zext i32 %621 to i64, !dbg !5386
  %622 = load [2 x i16]*, [2 x i16]** %table.addr.i885, align 8, !dbg !5386
  %arrayidx.i921 = getelementptr inbounds [2 x i16], [2 x i16]* %622, i64 %idxprom.i920, !dbg !5386
  %arrayidx3.i922 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i921, i64 0, i64 0, !dbg !5386
  %623 = load i16, i16* %arrayidx3.i922, align 2, !dbg !5386
  %conv4.i923 = sext i16 %623 to i32, !dbg !5386
  store i32 %conv4.i923, i32* %code.i888, align 4, !dbg !5387
  %624 = load i32, i32* %index1.i894, align 4, !dbg !5388
  %idxprom5.i924 = zext i32 %624 to i64, !dbg !5389
  %625 = load [2 x i16]*, [2 x i16]** %table.addr.i885, align 8, !dbg !5389
  %arrayidx6.i925 = getelementptr inbounds [2 x i16], [2 x i16]* %625, i64 %idxprom5.i924, !dbg !5389
  %arrayidx7.i926 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i925, i64 0, i64 1, !dbg !5389
  %626 = load i16, i16* %arrayidx7.i926, align 2, !dbg !5389
  %conv8.i927 = sext i16 %626 to i32, !dbg !5389
  store i32 %conv8.i927, i32* %n.i892, align 4, !dbg !5390
  %627 = load i32, i32* %max_depth.addr.i887, align 4, !dbg !5391
  %cmp.i928 = icmp sgt i32 %627, 1, !dbg !5392
  br i1 %cmp.i928, label %land.lhs.true.i930, label %if.end68.i1017, !dbg !5393

land.lhs.true.i930:                               ; preds = %get_vlc2.exit880
  %628 = load i32, i32* %n.i892, align 4, !dbg !5394
  %cmp10.i929 = icmp slt i32 %628, 0, !dbg !5395
  br i1 %cmp10.i929, label %if.then.i933, label %if.end68.i1017, !dbg !5396

if.then.i933:                                     ; preds = %land.lhs.true.i930
  %629 = load i32, i32* %re_size_plus8.i891, align 4, !dbg !5397
  %630 = load i32, i32* %re_index.i889, align 4, !dbg !5398
  %631 = load i32, i32* %bits.addr.i886, align 4, !dbg !5399
  %add.i931 = add i32 %630, %631, !dbg !5400
  %cmp12.i932 = icmp ugt i32 %629, %add.i931, !dbg !5401
  br i1 %cmp12.i932, label %cond.true.i935, label %cond.false.i936, !dbg !5402

cond.true.i935:                                   ; preds = %if.then.i933
  %632 = load i32, i32* %re_index.i889, align 4, !dbg !5403
  %633 = load i32, i32* %bits.addr.i886, align 4, !dbg !5404
  %add14.i934 = add i32 %632, %633, !dbg !5405
  br label %cond.end.i972, !dbg !5406

cond.false.i936:                                  ; preds = %if.then.i933
  %634 = load i32, i32* %re_size_plus8.i891, align 4, !dbg !5407
  br label %cond.end.i972, !dbg !5408

cond.end.i972:                                    ; preds = %cond.false.i936, %cond.true.i935
  %cond.i937 = phi i32 [ %add14.i934, %cond.true.i935 ], [ %634, %cond.false.i936 ], !dbg !5409
  store i32 %cond.i937, i32* %re_index.i889, align 4, !dbg !5410
  %635 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i884, align 8, !dbg !5411
  %buffer15.i938 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %635, i32 0, i32 0, !dbg !5412
  %636 = load i8*, i8** %buffer15.i938, align 8, !dbg !5412
  %637 = load i32, i32* %re_index.i889, align 4, !dbg !5413
  %shr16.i939 = lshr i32 %637, 3, !dbg !5414
  %idx.ext17.i940 = zext i32 %shr16.i939 to i64, !dbg !5415
  %add.ptr18.i941 = getelementptr inbounds i8, i8* %636, i64 %idx.ext17.i940, !dbg !5415
  %638 = bitcast i8* %add.ptr18.i941 to %union.unaligned_32*, !dbg !5416
  %l19.i942 = bitcast %union.unaligned_32* %638 to i32*, !dbg !5416
  %639 = load i32, i32* %l19.i942, align 1, !dbg !5416
  store i32 %639, i32* %x.addr.i81.i882, align 4, !dbg !5417
  %640 = load i32, i32* %x.addr.i81.i882, align 4, !dbg !5418
  %shl.i82.i943 = shl i32 %640, 8, !dbg !5419
  %and.i83.i944 = and i32 %shl.i82.i943, 65280, !dbg !5420
  %641 = load i32, i32* %x.addr.i81.i882, align 4, !dbg !5421
  %shr.i84.i945 = lshr i32 %641, 8, !dbg !5422
  %and1.i85.i946 = and i32 %shr.i84.i945, 255, !dbg !5423
  %or.i86.i947 = or i32 %and.i83.i944, %and1.i85.i946, !dbg !5424
  %shl2.i87.i948 = shl i32 %or.i86.i947, 16, !dbg !5425
  %642 = load i32, i32* %x.addr.i81.i882, align 4, !dbg !5426
  %shr3.i88.i949 = lshr i32 %642, 16, !dbg !5427
  %shl4.i89.i950 = shl i32 %shr3.i88.i949, 8, !dbg !5428
  %and5.i90.i951 = and i32 %shl4.i89.i950, 65280, !dbg !5429
  %643 = load i32, i32* %x.addr.i81.i882, align 4, !dbg !5430
  %shr6.i91.i952 = lshr i32 %643, 16, !dbg !5431
  %shr7.i92.i953 = lshr i32 %shr6.i91.i952, 8, !dbg !5432
  %and8.i93.i954 = and i32 %shr7.i92.i953, 255, !dbg !5433
  %or9.i94.i955 = or i32 %and5.i90.i951, %and8.i93.i954, !dbg !5434
  %or10.i95.i956 = or i32 %shl2.i87.i948, %or9.i94.i955, !dbg !5435
  %644 = load i32, i32* %re_index.i889, align 4, !dbg !5436
  %and21.i957 = and i32 %644, 7, !dbg !5437
  %shl22.i958 = shl i32 %or10.i95.i956, %and21.i957, !dbg !5438
  store i32 %shl22.i958, i32* %re_cache.i890, align 4, !dbg !5439
  %645 = load i32, i32* %n.i892, align 4, !dbg !5440
  %sub.i959 = sub nsw i32 0, %645, !dbg !5441
  store i32 %sub.i959, i32* %nb_bits.i893, align 4, !dbg !5442
  %646 = load i32, i32* %re_cache.i890, align 4, !dbg !5443
  %647 = load i32, i32* %nb_bits.i893, align 4, !dbg !5444
  %conv23.i960 = trunc i32 %647 to i8, !dbg !5444
  %call24.i961 = call i32 @NEG_USR32(i32 %646, i8 signext %conv23.i960) #9, !dbg !5445
  %648 = load i32, i32* %code.i888, align 4, !dbg !5446
  %add25.i962 = add i32 %call24.i961, %648, !dbg !5447
  store i32 %add25.i962, i32* %index1.i894, align 4, !dbg !5448
  %649 = load i32, i32* %index1.i894, align 4, !dbg !5449
  %idxprom26.i963 = zext i32 %649 to i64, !dbg !5450
  %650 = load [2 x i16]*, [2 x i16]** %table.addr.i885, align 8, !dbg !5450
  %arrayidx27.i964 = getelementptr inbounds [2 x i16], [2 x i16]* %650, i64 %idxprom26.i963, !dbg !5450
  %arrayidx28.i965 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i964, i64 0, i64 0, !dbg !5450
  %651 = load i16, i16* %arrayidx28.i965, align 2, !dbg !5450
  %conv29.i966 = sext i16 %651 to i32, !dbg !5450
  store i32 %conv29.i966, i32* %code.i888, align 4, !dbg !5451
  %652 = load i32, i32* %index1.i894, align 4, !dbg !5452
  %idxprom30.i967 = zext i32 %652 to i64, !dbg !5453
  %653 = load [2 x i16]*, [2 x i16]** %table.addr.i885, align 8, !dbg !5453
  %arrayidx31.i968 = getelementptr inbounds [2 x i16], [2 x i16]* %653, i64 %idxprom30.i967, !dbg !5453
  %arrayidx32.i969 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i968, i64 0, i64 1, !dbg !5453
  %654 = load i16, i16* %arrayidx32.i969, align 2, !dbg !5453
  %conv33.i970 = sext i16 %654 to i32, !dbg !5453
  store i32 %conv33.i970, i32* %n.i892, align 4, !dbg !5454
  %655 = load i32, i32* %max_depth.addr.i887, align 4, !dbg !5455
  %cmp34.i971 = icmp sgt i32 %655, 2, !dbg !5456
  br i1 %cmp34.i971, label %land.lhs.true36.i974, label %if.end.i1016, !dbg !5457

land.lhs.true36.i974:                             ; preds = %cond.end.i972
  %656 = load i32, i32* %n.i892, align 4, !dbg !5458
  %cmp37.i973 = icmp slt i32 %656, 0, !dbg !5459
  br i1 %cmp37.i973, label %if.then39.i977, label %if.end.i1016, !dbg !5460

if.then39.i977:                                   ; preds = %land.lhs.true36.i974
  %657 = load i32, i32* %re_size_plus8.i891, align 4, !dbg !5461
  %658 = load i32, i32* %re_index.i889, align 4, !dbg !5462
  %659 = load i32, i32* %nb_bits.i893, align 4, !dbg !5463
  %add40.i975 = add i32 %658, %659, !dbg !5464
  %cmp41.i976 = icmp ugt i32 %657, %add40.i975, !dbg !5465
  br i1 %cmp41.i976, label %cond.true43.i979, label %cond.false45.i980, !dbg !5466

cond.true43.i979:                                 ; preds = %if.then39.i977
  %660 = load i32, i32* %re_index.i889, align 4, !dbg !5467
  %661 = load i32, i32* %nb_bits.i893, align 4, !dbg !5468
  %add44.i978 = add i32 %660, %661, !dbg !5469
  br label %cond.end46.i1015, !dbg !5470

cond.false45.i980:                                ; preds = %if.then39.i977
  %662 = load i32, i32* %re_size_plus8.i891, align 4, !dbg !5471
  br label %cond.end46.i1015, !dbg !5472

cond.end46.i1015:                                 ; preds = %cond.false45.i980, %cond.true43.i979
  %cond47.i981 = phi i32 [ %add44.i978, %cond.true43.i979 ], [ %662, %cond.false45.i980 ], !dbg !5473
  store i32 %cond47.i981, i32* %re_index.i889, align 4, !dbg !5474
  %663 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i884, align 8, !dbg !5475
  %buffer48.i982 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %663, i32 0, i32 0, !dbg !5476
  %664 = load i8*, i8** %buffer48.i982, align 8, !dbg !5476
  %665 = load i32, i32* %re_index.i889, align 4, !dbg !5477
  %shr49.i983 = lshr i32 %665, 3, !dbg !5478
  %idx.ext50.i984 = zext i32 %shr49.i983 to i64, !dbg !5479
  %add.ptr51.i985 = getelementptr inbounds i8, i8* %664, i64 %idx.ext50.i984, !dbg !5479
  %666 = bitcast i8* %add.ptr51.i985 to %union.unaligned_32*, !dbg !5480
  %l52.i986 = bitcast %union.unaligned_32* %666 to i32*, !dbg !5480
  %667 = load i32, i32* %l52.i986, align 1, !dbg !5480
  store i32 %667, i32* %x.addr.i96.i881, align 4, !dbg !5481
  %668 = load i32, i32* %x.addr.i96.i881, align 4, !dbg !5482
  %shl.i97.i987 = shl i32 %668, 8, !dbg !5483
  %and.i98.i988 = and i32 %shl.i97.i987, 65280, !dbg !5484
  %669 = load i32, i32* %x.addr.i96.i881, align 4, !dbg !5485
  %shr.i99.i989 = lshr i32 %669, 8, !dbg !5486
  %and1.i100.i990 = and i32 %shr.i99.i989, 255, !dbg !5487
  %or.i101.i991 = or i32 %and.i98.i988, %and1.i100.i990, !dbg !5488
  %shl2.i102.i992 = shl i32 %or.i101.i991, 16, !dbg !5489
  %670 = load i32, i32* %x.addr.i96.i881, align 4, !dbg !5490
  %shr3.i103.i993 = lshr i32 %670, 16, !dbg !5491
  %shl4.i104.i994 = shl i32 %shr3.i103.i993, 8, !dbg !5492
  %and5.i105.i995 = and i32 %shl4.i104.i994, 65280, !dbg !5493
  %671 = load i32, i32* %x.addr.i96.i881, align 4, !dbg !5494
  %shr6.i106.i996 = lshr i32 %671, 16, !dbg !5495
  %shr7.i107.i997 = lshr i32 %shr6.i106.i996, 8, !dbg !5496
  %and8.i108.i998 = and i32 %shr7.i107.i997, 255, !dbg !5497
  %or9.i109.i999 = or i32 %and5.i105.i995, %and8.i108.i998, !dbg !5498
  %or10.i110.i1000 = or i32 %shl2.i102.i992, %or9.i109.i999, !dbg !5499
  %672 = load i32, i32* %re_index.i889, align 4, !dbg !5500
  %and54.i1001 = and i32 %672, 7, !dbg !5501
  %shl55.i1002 = shl i32 %or10.i110.i1000, %and54.i1001, !dbg !5502
  store i32 %shl55.i1002, i32* %re_cache.i890, align 4, !dbg !5503
  %673 = load i32, i32* %n.i892, align 4, !dbg !5504
  %sub56.i1003 = sub nsw i32 0, %673, !dbg !5505
  store i32 %sub56.i1003, i32* %nb_bits.i893, align 4, !dbg !5506
  %674 = load i32, i32* %re_cache.i890, align 4, !dbg !5507
  %675 = load i32, i32* %nb_bits.i893, align 4, !dbg !5508
  %conv57.i1004 = trunc i32 %675 to i8, !dbg !5508
  %call58.i1005 = call i32 @NEG_USR32(i32 %674, i8 signext %conv57.i1004) #9, !dbg !5509
  %676 = load i32, i32* %code.i888, align 4, !dbg !5510
  %add59.i1006 = add i32 %call58.i1005, %676, !dbg !5511
  store i32 %add59.i1006, i32* %index1.i894, align 4, !dbg !5512
  %677 = load i32, i32* %index1.i894, align 4, !dbg !5513
  %idxprom60.i1007 = zext i32 %677 to i64, !dbg !5514
  %678 = load [2 x i16]*, [2 x i16]** %table.addr.i885, align 8, !dbg !5514
  %arrayidx61.i1008 = getelementptr inbounds [2 x i16], [2 x i16]* %678, i64 %idxprom60.i1007, !dbg !5514
  %arrayidx62.i1009 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i1008, i64 0, i64 0, !dbg !5514
  %679 = load i16, i16* %arrayidx62.i1009, align 2, !dbg !5514
  %conv63.i1010 = sext i16 %679 to i32, !dbg !5514
  store i32 %conv63.i1010, i32* %code.i888, align 4, !dbg !5515
  %680 = load i32, i32* %index1.i894, align 4, !dbg !5516
  %idxprom64.i1011 = zext i32 %680 to i64, !dbg !5517
  %681 = load [2 x i16]*, [2 x i16]** %table.addr.i885, align 8, !dbg !5517
  %arrayidx65.i1012 = getelementptr inbounds [2 x i16], [2 x i16]* %681, i64 %idxprom64.i1011, !dbg !5517
  %arrayidx66.i1013 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i1012, i64 0, i64 1, !dbg !5517
  %682 = load i16, i16* %arrayidx66.i1013, align 2, !dbg !5517
  %conv67.i1014 = sext i16 %682 to i32, !dbg !5517
  store i32 %conv67.i1014, i32* %n.i892, align 4, !dbg !5518
  br label %if.end.i1016, !dbg !5519

if.end.i1016:                                     ; preds = %cond.end46.i1015, %land.lhs.true36.i974, %cond.end.i972
  br label %if.end68.i1017, !dbg !5520

if.end68.i1017:                                   ; preds = %if.end.i1016, %land.lhs.true.i930, %get_vlc2.exit880
  %683 = load i32, i32* %n.i892, align 4, !dbg !5521
  %684 = load i32, i32* %re_cache.i890, align 4, !dbg !5522
  %shl70.i1018 = shl i32 %684, %683, !dbg !5522
  store i32 %shl70.i1018, i32* %re_cache.i890, align 4, !dbg !5522
  %685 = load i32, i32* %re_size_plus8.i891, align 4, !dbg !5523
  %686 = load i32, i32* %re_index.i889, align 4, !dbg !5524
  %687 = load i32, i32* %n.i892, align 4, !dbg !5525
  %add71.i1019 = add i32 %686, %687, !dbg !5526
  %cmp72.i1020 = icmp ugt i32 %685, %add71.i1019, !dbg !5527
  br i1 %cmp72.i1020, label %cond.true74.i1022, label %cond.false76.i1023, !dbg !5528

cond.true74.i1022:                                ; preds = %if.end68.i1017
  %688 = load i32, i32* %re_index.i889, align 4, !dbg !5529
  %689 = load i32, i32* %n.i892, align 4, !dbg !5530
  %add75.i1021 = add i32 %688, %689, !dbg !5531
  br label %get_vlc2.exit1026, !dbg !5532

cond.false76.i1023:                               ; preds = %if.end68.i1017
  %690 = load i32, i32* %re_size_plus8.i891, align 4, !dbg !5533
  br label %get_vlc2.exit1026, !dbg !5534

get_vlc2.exit1026:                                ; preds = %cond.true74.i1022, %cond.false76.i1023
  %cond78.i1024 = phi i32 [ %add75.i1021, %cond.true74.i1022 ], [ %690, %cond.false76.i1023 ], !dbg !5535
  store i32 %cond78.i1024, i32* %re_index.i889, align 4, !dbg !5536
  %691 = load i32, i32* %re_index.i889, align 4, !dbg !5537
  %692 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i884, align 8, !dbg !5538
  %index80.i1025 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %692, i32 0, i32 2, !dbg !5539
  store i32 %691, i32* %index80.i1025, align 8, !dbg !5540
  %693 = load i32, i32* %code.i888, align 4, !dbg !5541
  %add182 = add nsw i32 %599, %693, !dbg !5542
  %and183 = and i32 %add182, 7, !dbg !5543
  %694 = load i32, i32* %i, align 4, !dbg !5544
  %add184 = add nsw i32 %694, 1, !dbg !5545
  %idxprom185 = sext i32 %add184 to i64, !dbg !5546
  %695 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5546
  %qu_wordlen186 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %695, i32 0, i32 5, !dbg !5547
  %arrayidx187 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen186, i64 0, i64 %idxprom185, !dbg !5546
  store i32 %and183, i32* %arrayidx187, align 4, !dbg !5548
  br label %if.end188, !dbg !5549

if.end188:                                        ; preds = %get_vlc2.exit1026, %for.body160
  br label %for.inc189, !dbg !5550

for.inc189:                                       ; preds = %if.end188
  %696 = load i32, i32* %i, align 4, !dbg !5552
  %add190 = add nsw i32 %696, 2, !dbg !5552
  store i32 %add190, i32* %i, align 4, !dbg !5552
  br label %for.cond156, !dbg !5554, !llvm.loop !5555

for.end191:                                       ; preds = %for.cond156
  %697 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5557
  %num_coded_vals192 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %697, i32 0, i32 1, !dbg !5558
  %698 = load i32, i32* %num_coded_vals192, align 4, !dbg !5558
  %and193 = and i32 %698, 1, !dbg !5559
  %tobool194 = icmp ne i32 %and193, 0, !dbg !5559
  br i1 %tobool194, label %if.then195, label %if.end207, !dbg !5560

if.then195:                                       ; preds = %for.end191
  %699 = load i32, i32* %i, align 4, !dbg !5561
  %idxprom196 = sext i32 %699 to i64, !dbg !5562
  %700 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5562
  %qu_wordlen197 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %700, i32 0, i32 5, !dbg !5563
  %arrayidx198 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen197, i64 0, i64 %idxprom196, !dbg !5562
  %701 = load i32, i32* %arrayidx198, align 4, !dbg !5562
  %702 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5564
  %703 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5565
  %table199 = getelementptr inbounds %struct.VLC, %struct.VLC* %703, i32 0, i32 1, !dbg !5566
  %704 = load [2 x i16]*, [2 x i16]** %table199, align 8, !dbg !5566
  %705 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5567
  %bits200 = getelementptr inbounds %struct.VLC, %struct.VLC* %705, i32 0, i32 0, !dbg !5568
  %706 = load i32, i32* %bits200, align 8, !dbg !5568
  store %struct.GetBitContext* %702, %struct.GetBitContext** %s.addr.i1030, align 8, !dbg !5569
  store [2 x i16]* %704, [2 x i16]** %table.addr.i1031, align 8, !dbg !5569
  store i32 %706, i32* %bits.addr.i1032, align 4, !dbg !5569
  store i32 1, i32* %max_depth.addr.i1033, align 4, !dbg !5569
  %707 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1030, align 8, !dbg !5570
  %index.i1041 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %707, i32 0, i32 2, !dbg !5571
  %708 = load i32, i32* %index.i1041, align 8, !dbg !5571
  store i32 %708, i32* %re_index.i1035, align 4, !dbg !3846
  %709 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1030, align 8, !dbg !5572
  %size_in_bits_plus8.i1042 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %709, i32 0, i32 4, !dbg !5573
  %710 = load i32, i32* %size_in_bits_plus8.i1042, align 8, !dbg !5573
  store i32 %710, i32* %re_size_plus8.i1037, align 4, !dbg !3848
  %711 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1030, align 8, !dbg !5574
  %buffer.i1043 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %711, i32 0, i32 0, !dbg !5575
  %712 = load i8*, i8** %buffer.i1043, align 8, !dbg !5575
  %713 = load i32, i32* %re_index.i1035, align 4, !dbg !5576
  %shr.i1044 = lshr i32 %713, 3, !dbg !5577
  %idx.ext.i1045 = zext i32 %shr.i1044 to i64, !dbg !5578
  %add.ptr.i1046 = getelementptr inbounds i8, i8* %712, i64 %idx.ext.i1045, !dbg !5578
  %714 = bitcast i8* %add.ptr.i1046 to %union.unaligned_32*, !dbg !5579
  %l.i1047 = bitcast %union.unaligned_32* %714 to i32*, !dbg !5579
  %715 = load i32, i32* %l.i1047, align 1, !dbg !5579
  store i32 %715, i32* %x.addr.i.i1029, align 4, !dbg !5580
  %716 = load i32, i32* %x.addr.i.i1029, align 4, !dbg !5581
  %shl.i.i1048 = shl i32 %716, 8, !dbg !5582
  %and.i.i1049 = and i32 %shl.i.i1048, 65280, !dbg !5583
  %717 = load i32, i32* %x.addr.i.i1029, align 4, !dbg !5584
  %shr.i.i1050 = lshr i32 %717, 8, !dbg !5585
  %and1.i.i1051 = and i32 %shr.i.i1050, 255, !dbg !5586
  %or.i.i1052 = or i32 %and.i.i1049, %and1.i.i1051, !dbg !5587
  %shl2.i.i1053 = shl i32 %or.i.i1052, 16, !dbg !5588
  %718 = load i32, i32* %x.addr.i.i1029, align 4, !dbg !5589
  %shr3.i.i1054 = lshr i32 %718, 16, !dbg !5590
  %shl4.i.i1055 = shl i32 %shr3.i.i1054, 8, !dbg !5591
  %and5.i.i1056 = and i32 %shl4.i.i1055, 65280, !dbg !5592
  %719 = load i32, i32* %x.addr.i.i1029, align 4, !dbg !5593
  %shr6.i.i1057 = lshr i32 %719, 16, !dbg !5594
  %shr7.i.i1058 = lshr i32 %shr6.i.i1057, 8, !dbg !5595
  %and8.i.i1059 = and i32 %shr7.i.i1058, 255, !dbg !5596
  %or9.i.i1060 = or i32 %and5.i.i1056, %and8.i.i1059, !dbg !5597
  %or10.i.i1061 = or i32 %shl2.i.i1053, %or9.i.i1060, !dbg !5598
  %720 = load i32, i32* %re_index.i1035, align 4, !dbg !5599
  %and.i1062 = and i32 %720, 7, !dbg !5600
  %shl.i1063 = shl i32 %or10.i.i1061, %and.i1062, !dbg !5601
  store i32 %shl.i1063, i32* %re_cache.i1036, align 4, !dbg !5602
  %721 = load i32, i32* %re_cache.i1036, align 4, !dbg !5603
  %722 = load i32, i32* %bits.addr.i1032, align 4, !dbg !5604
  %conv.i1064 = trunc i32 %722 to i8, !dbg !5604
  %call2.i1065 = call i32 @NEG_USR32(i32 %721, i8 signext %conv.i1064) #9, !dbg !5605
  store i32 %call2.i1065, i32* %index1.i1040, align 4, !dbg !5606
  %723 = load i32, i32* %index1.i1040, align 4, !dbg !5607
  %idxprom.i1066 = zext i32 %723 to i64, !dbg !5608
  %724 = load [2 x i16]*, [2 x i16]** %table.addr.i1031, align 8, !dbg !5608
  %arrayidx.i1067 = getelementptr inbounds [2 x i16], [2 x i16]* %724, i64 %idxprom.i1066, !dbg !5608
  %arrayidx3.i1068 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i1067, i64 0, i64 0, !dbg !5608
  %725 = load i16, i16* %arrayidx3.i1068, align 2, !dbg !5608
  %conv4.i1069 = sext i16 %725 to i32, !dbg !5608
  store i32 %conv4.i1069, i32* %code.i1034, align 4, !dbg !5609
  %726 = load i32, i32* %index1.i1040, align 4, !dbg !5610
  %idxprom5.i1070 = zext i32 %726 to i64, !dbg !5611
  %727 = load [2 x i16]*, [2 x i16]** %table.addr.i1031, align 8, !dbg !5611
  %arrayidx6.i1071 = getelementptr inbounds [2 x i16], [2 x i16]* %727, i64 %idxprom5.i1070, !dbg !5611
  %arrayidx7.i1072 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i1071, i64 0, i64 1, !dbg !5611
  %728 = load i16, i16* %arrayidx7.i1072, align 2, !dbg !5611
  %conv8.i1073 = sext i16 %728 to i32, !dbg !5611
  store i32 %conv8.i1073, i32* %n.i1038, align 4, !dbg !5612
  %729 = load i32, i32* %max_depth.addr.i1033, align 4, !dbg !5613
  %cmp.i1074 = icmp sgt i32 %729, 1, !dbg !5614
  br i1 %cmp.i1074, label %land.lhs.true.i1076, label %if.end68.i1163, !dbg !5615

land.lhs.true.i1076:                              ; preds = %if.then195
  %730 = load i32, i32* %n.i1038, align 4, !dbg !5616
  %cmp10.i1075 = icmp slt i32 %730, 0, !dbg !5617
  br i1 %cmp10.i1075, label %if.then.i1079, label %if.end68.i1163, !dbg !5618

if.then.i1079:                                    ; preds = %land.lhs.true.i1076
  %731 = load i32, i32* %re_size_plus8.i1037, align 4, !dbg !5619
  %732 = load i32, i32* %re_index.i1035, align 4, !dbg !5620
  %733 = load i32, i32* %bits.addr.i1032, align 4, !dbg !5621
  %add.i1077 = add i32 %732, %733, !dbg !5622
  %cmp12.i1078 = icmp ugt i32 %731, %add.i1077, !dbg !5623
  br i1 %cmp12.i1078, label %cond.true.i1081, label %cond.false.i1082, !dbg !5624

cond.true.i1081:                                  ; preds = %if.then.i1079
  %734 = load i32, i32* %re_index.i1035, align 4, !dbg !5625
  %735 = load i32, i32* %bits.addr.i1032, align 4, !dbg !5626
  %add14.i1080 = add i32 %734, %735, !dbg !5627
  br label %cond.end.i1118, !dbg !5628

cond.false.i1082:                                 ; preds = %if.then.i1079
  %736 = load i32, i32* %re_size_plus8.i1037, align 4, !dbg !5629
  br label %cond.end.i1118, !dbg !5630

cond.end.i1118:                                   ; preds = %cond.false.i1082, %cond.true.i1081
  %cond.i1083 = phi i32 [ %add14.i1080, %cond.true.i1081 ], [ %736, %cond.false.i1082 ], !dbg !5631
  store i32 %cond.i1083, i32* %re_index.i1035, align 4, !dbg !5632
  %737 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1030, align 8, !dbg !5633
  %buffer15.i1084 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %737, i32 0, i32 0, !dbg !5634
  %738 = load i8*, i8** %buffer15.i1084, align 8, !dbg !5634
  %739 = load i32, i32* %re_index.i1035, align 4, !dbg !5635
  %shr16.i1085 = lshr i32 %739, 3, !dbg !5636
  %idx.ext17.i1086 = zext i32 %shr16.i1085 to i64, !dbg !5637
  %add.ptr18.i1087 = getelementptr inbounds i8, i8* %738, i64 %idx.ext17.i1086, !dbg !5637
  %740 = bitcast i8* %add.ptr18.i1087 to %union.unaligned_32*, !dbg !5638
  %l19.i1088 = bitcast %union.unaligned_32* %740 to i32*, !dbg !5638
  %741 = load i32, i32* %l19.i1088, align 1, !dbg !5638
  store i32 %741, i32* %x.addr.i81.i1028, align 4, !dbg !5639
  %742 = load i32, i32* %x.addr.i81.i1028, align 4, !dbg !5640
  %shl.i82.i1089 = shl i32 %742, 8, !dbg !5641
  %and.i83.i1090 = and i32 %shl.i82.i1089, 65280, !dbg !5642
  %743 = load i32, i32* %x.addr.i81.i1028, align 4, !dbg !5643
  %shr.i84.i1091 = lshr i32 %743, 8, !dbg !5644
  %and1.i85.i1092 = and i32 %shr.i84.i1091, 255, !dbg !5645
  %or.i86.i1093 = or i32 %and.i83.i1090, %and1.i85.i1092, !dbg !5646
  %shl2.i87.i1094 = shl i32 %or.i86.i1093, 16, !dbg !5647
  %744 = load i32, i32* %x.addr.i81.i1028, align 4, !dbg !5648
  %shr3.i88.i1095 = lshr i32 %744, 16, !dbg !5649
  %shl4.i89.i1096 = shl i32 %shr3.i88.i1095, 8, !dbg !5650
  %and5.i90.i1097 = and i32 %shl4.i89.i1096, 65280, !dbg !5651
  %745 = load i32, i32* %x.addr.i81.i1028, align 4, !dbg !5652
  %shr6.i91.i1098 = lshr i32 %745, 16, !dbg !5653
  %shr7.i92.i1099 = lshr i32 %shr6.i91.i1098, 8, !dbg !5654
  %and8.i93.i1100 = and i32 %shr7.i92.i1099, 255, !dbg !5655
  %or9.i94.i1101 = or i32 %and5.i90.i1097, %and8.i93.i1100, !dbg !5656
  %or10.i95.i1102 = or i32 %shl2.i87.i1094, %or9.i94.i1101, !dbg !5657
  %746 = load i32, i32* %re_index.i1035, align 4, !dbg !5658
  %and21.i1103 = and i32 %746, 7, !dbg !5659
  %shl22.i1104 = shl i32 %or10.i95.i1102, %and21.i1103, !dbg !5660
  store i32 %shl22.i1104, i32* %re_cache.i1036, align 4, !dbg !5661
  %747 = load i32, i32* %n.i1038, align 4, !dbg !5662
  %sub.i1105 = sub nsw i32 0, %747, !dbg !5663
  store i32 %sub.i1105, i32* %nb_bits.i1039, align 4, !dbg !5664
  %748 = load i32, i32* %re_cache.i1036, align 4, !dbg !5665
  %749 = load i32, i32* %nb_bits.i1039, align 4, !dbg !5666
  %conv23.i1106 = trunc i32 %749 to i8, !dbg !5666
  %call24.i1107 = call i32 @NEG_USR32(i32 %748, i8 signext %conv23.i1106) #9, !dbg !5667
  %750 = load i32, i32* %code.i1034, align 4, !dbg !5668
  %add25.i1108 = add i32 %call24.i1107, %750, !dbg !5669
  store i32 %add25.i1108, i32* %index1.i1040, align 4, !dbg !5670
  %751 = load i32, i32* %index1.i1040, align 4, !dbg !5671
  %idxprom26.i1109 = zext i32 %751 to i64, !dbg !5672
  %752 = load [2 x i16]*, [2 x i16]** %table.addr.i1031, align 8, !dbg !5672
  %arrayidx27.i1110 = getelementptr inbounds [2 x i16], [2 x i16]* %752, i64 %idxprom26.i1109, !dbg !5672
  %arrayidx28.i1111 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i1110, i64 0, i64 0, !dbg !5672
  %753 = load i16, i16* %arrayidx28.i1111, align 2, !dbg !5672
  %conv29.i1112 = sext i16 %753 to i32, !dbg !5672
  store i32 %conv29.i1112, i32* %code.i1034, align 4, !dbg !5673
  %754 = load i32, i32* %index1.i1040, align 4, !dbg !5674
  %idxprom30.i1113 = zext i32 %754 to i64, !dbg !5675
  %755 = load [2 x i16]*, [2 x i16]** %table.addr.i1031, align 8, !dbg !5675
  %arrayidx31.i1114 = getelementptr inbounds [2 x i16], [2 x i16]* %755, i64 %idxprom30.i1113, !dbg !5675
  %arrayidx32.i1115 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i1114, i64 0, i64 1, !dbg !5675
  %756 = load i16, i16* %arrayidx32.i1115, align 2, !dbg !5675
  %conv33.i1116 = sext i16 %756 to i32, !dbg !5675
  store i32 %conv33.i1116, i32* %n.i1038, align 4, !dbg !5676
  %757 = load i32, i32* %max_depth.addr.i1033, align 4, !dbg !5677
  %cmp34.i1117 = icmp sgt i32 %757, 2, !dbg !5678
  br i1 %cmp34.i1117, label %land.lhs.true36.i1120, label %if.end.i1162, !dbg !5679

land.lhs.true36.i1120:                            ; preds = %cond.end.i1118
  %758 = load i32, i32* %n.i1038, align 4, !dbg !5680
  %cmp37.i1119 = icmp slt i32 %758, 0, !dbg !5681
  br i1 %cmp37.i1119, label %if.then39.i1123, label %if.end.i1162, !dbg !5682

if.then39.i1123:                                  ; preds = %land.lhs.true36.i1120
  %759 = load i32, i32* %re_size_plus8.i1037, align 4, !dbg !5683
  %760 = load i32, i32* %re_index.i1035, align 4, !dbg !5684
  %761 = load i32, i32* %nb_bits.i1039, align 4, !dbg !5685
  %add40.i1121 = add i32 %760, %761, !dbg !5686
  %cmp41.i1122 = icmp ugt i32 %759, %add40.i1121, !dbg !5687
  br i1 %cmp41.i1122, label %cond.true43.i1125, label %cond.false45.i1126, !dbg !5688

cond.true43.i1125:                                ; preds = %if.then39.i1123
  %762 = load i32, i32* %re_index.i1035, align 4, !dbg !5689
  %763 = load i32, i32* %nb_bits.i1039, align 4, !dbg !5690
  %add44.i1124 = add i32 %762, %763, !dbg !5691
  br label %cond.end46.i1161, !dbg !5692

cond.false45.i1126:                               ; preds = %if.then39.i1123
  %764 = load i32, i32* %re_size_plus8.i1037, align 4, !dbg !5693
  br label %cond.end46.i1161, !dbg !5694

cond.end46.i1161:                                 ; preds = %cond.false45.i1126, %cond.true43.i1125
  %cond47.i1127 = phi i32 [ %add44.i1124, %cond.true43.i1125 ], [ %764, %cond.false45.i1126 ], !dbg !5695
  store i32 %cond47.i1127, i32* %re_index.i1035, align 4, !dbg !5696
  %765 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1030, align 8, !dbg !5697
  %buffer48.i1128 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %765, i32 0, i32 0, !dbg !5698
  %766 = load i8*, i8** %buffer48.i1128, align 8, !dbg !5698
  %767 = load i32, i32* %re_index.i1035, align 4, !dbg !5699
  %shr49.i1129 = lshr i32 %767, 3, !dbg !5700
  %idx.ext50.i1130 = zext i32 %shr49.i1129 to i64, !dbg !5701
  %add.ptr51.i1131 = getelementptr inbounds i8, i8* %766, i64 %idx.ext50.i1130, !dbg !5701
  %768 = bitcast i8* %add.ptr51.i1131 to %union.unaligned_32*, !dbg !5702
  %l52.i1132 = bitcast %union.unaligned_32* %768 to i32*, !dbg !5702
  %769 = load i32, i32* %l52.i1132, align 1, !dbg !5702
  store i32 %769, i32* %x.addr.i96.i1027, align 4, !dbg !5703
  %770 = load i32, i32* %x.addr.i96.i1027, align 4, !dbg !5704
  %shl.i97.i1133 = shl i32 %770, 8, !dbg !5705
  %and.i98.i1134 = and i32 %shl.i97.i1133, 65280, !dbg !5706
  %771 = load i32, i32* %x.addr.i96.i1027, align 4, !dbg !5707
  %shr.i99.i1135 = lshr i32 %771, 8, !dbg !5708
  %and1.i100.i1136 = and i32 %shr.i99.i1135, 255, !dbg !5709
  %or.i101.i1137 = or i32 %and.i98.i1134, %and1.i100.i1136, !dbg !5710
  %shl2.i102.i1138 = shl i32 %or.i101.i1137, 16, !dbg !5711
  %772 = load i32, i32* %x.addr.i96.i1027, align 4, !dbg !5712
  %shr3.i103.i1139 = lshr i32 %772, 16, !dbg !5713
  %shl4.i104.i1140 = shl i32 %shr3.i103.i1139, 8, !dbg !5714
  %and5.i105.i1141 = and i32 %shl4.i104.i1140, 65280, !dbg !5715
  %773 = load i32, i32* %x.addr.i96.i1027, align 4, !dbg !5716
  %shr6.i106.i1142 = lshr i32 %773, 16, !dbg !5717
  %shr7.i107.i1143 = lshr i32 %shr6.i106.i1142, 8, !dbg !5718
  %and8.i108.i1144 = and i32 %shr7.i107.i1143, 255, !dbg !5719
  %or9.i109.i1145 = or i32 %and5.i105.i1141, %and8.i108.i1144, !dbg !5720
  %or10.i110.i1146 = or i32 %shl2.i102.i1138, %or9.i109.i1145, !dbg !5721
  %774 = load i32, i32* %re_index.i1035, align 4, !dbg !5722
  %and54.i1147 = and i32 %774, 7, !dbg !5723
  %shl55.i1148 = shl i32 %or10.i110.i1146, %and54.i1147, !dbg !5724
  store i32 %shl55.i1148, i32* %re_cache.i1036, align 4, !dbg !5725
  %775 = load i32, i32* %n.i1038, align 4, !dbg !5726
  %sub56.i1149 = sub nsw i32 0, %775, !dbg !5727
  store i32 %sub56.i1149, i32* %nb_bits.i1039, align 4, !dbg !5728
  %776 = load i32, i32* %re_cache.i1036, align 4, !dbg !5729
  %777 = load i32, i32* %nb_bits.i1039, align 4, !dbg !5730
  %conv57.i1150 = trunc i32 %777 to i8, !dbg !5730
  %call58.i1151 = call i32 @NEG_USR32(i32 %776, i8 signext %conv57.i1150) #9, !dbg !5731
  %778 = load i32, i32* %code.i1034, align 4, !dbg !5732
  %add59.i1152 = add i32 %call58.i1151, %778, !dbg !5733
  store i32 %add59.i1152, i32* %index1.i1040, align 4, !dbg !5734
  %779 = load i32, i32* %index1.i1040, align 4, !dbg !5735
  %idxprom60.i1153 = zext i32 %779 to i64, !dbg !5736
  %780 = load [2 x i16]*, [2 x i16]** %table.addr.i1031, align 8, !dbg !5736
  %arrayidx61.i1154 = getelementptr inbounds [2 x i16], [2 x i16]* %780, i64 %idxprom60.i1153, !dbg !5736
  %arrayidx62.i1155 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i1154, i64 0, i64 0, !dbg !5736
  %781 = load i16, i16* %arrayidx62.i1155, align 2, !dbg !5736
  %conv63.i1156 = sext i16 %781 to i32, !dbg !5736
  store i32 %conv63.i1156, i32* %code.i1034, align 4, !dbg !5737
  %782 = load i32, i32* %index1.i1040, align 4, !dbg !5738
  %idxprom64.i1157 = zext i32 %782 to i64, !dbg !5739
  %783 = load [2 x i16]*, [2 x i16]** %table.addr.i1031, align 8, !dbg !5739
  %arrayidx65.i1158 = getelementptr inbounds [2 x i16], [2 x i16]* %783, i64 %idxprom64.i1157, !dbg !5739
  %arrayidx66.i1159 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i1158, i64 0, i64 1, !dbg !5739
  %784 = load i16, i16* %arrayidx66.i1159, align 2, !dbg !5739
  %conv67.i1160 = sext i16 %784 to i32, !dbg !5739
  store i32 %conv67.i1160, i32* %n.i1038, align 4, !dbg !5740
  br label %if.end.i1162, !dbg !5741

if.end.i1162:                                     ; preds = %cond.end46.i1161, %land.lhs.true36.i1120, %cond.end.i1118
  br label %if.end68.i1163, !dbg !5742

if.end68.i1163:                                   ; preds = %if.end.i1162, %land.lhs.true.i1076, %if.then195
  %785 = load i32, i32* %n.i1038, align 4, !dbg !5743
  %786 = load i32, i32* %re_cache.i1036, align 4, !dbg !5744
  %shl70.i1164 = shl i32 %786, %785, !dbg !5744
  store i32 %shl70.i1164, i32* %re_cache.i1036, align 4, !dbg !5744
  %787 = load i32, i32* %re_size_plus8.i1037, align 4, !dbg !5745
  %788 = load i32, i32* %re_index.i1035, align 4, !dbg !5746
  %789 = load i32, i32* %n.i1038, align 4, !dbg !5747
  %add71.i1165 = add i32 %788, %789, !dbg !5748
  %cmp72.i1166 = icmp ugt i32 %787, %add71.i1165, !dbg !5749
  br i1 %cmp72.i1166, label %cond.true74.i1168, label %cond.false76.i1169, !dbg !5750

cond.true74.i1168:                                ; preds = %if.end68.i1163
  %790 = load i32, i32* %re_index.i1035, align 4, !dbg !5751
  %791 = load i32, i32* %n.i1038, align 4, !dbg !5752
  %add75.i1167 = add i32 %790, %791, !dbg !5753
  br label %get_vlc2.exit1172, !dbg !5754

cond.false76.i1169:                               ; preds = %if.end68.i1163
  %792 = load i32, i32* %re_size_plus8.i1037, align 4, !dbg !5755
  br label %get_vlc2.exit1172, !dbg !5756

get_vlc2.exit1172:                                ; preds = %cond.true74.i1168, %cond.false76.i1169
  %cond78.i1170 = phi i32 [ %add75.i1167, %cond.true74.i1168 ], [ %792, %cond.false76.i1169 ], !dbg !5757
  store i32 %cond78.i1170, i32* %re_index.i1035, align 4, !dbg !5758
  %793 = load i32, i32* %re_index.i1035, align 4, !dbg !5759
  %794 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1030, align 8, !dbg !5760
  %index80.i1171 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %794, i32 0, i32 2, !dbg !5761
  store i32 %793, i32* %index80.i1171, align 8, !dbg !5762
  %795 = load i32, i32* %code.i1034, align 4, !dbg !5763
  %add202 = add nsw i32 %701, %795, !dbg !5764
  %and203 = and i32 %add202, 7, !dbg !5765
  %796 = load i32, i32* %i, align 4, !dbg !5766
  %idxprom204 = sext i32 %796 to i64, !dbg !5767
  %797 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5767
  %qu_wordlen205 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %797, i32 0, i32 5, !dbg !5768
  %arrayidx206 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen205, i64 0, i64 %idxprom204, !dbg !5767
  store i32 %and203, i32* %arrayidx206, align 4, !dbg !5769
  br label %if.end207, !dbg !5767

if.end207:                                        ; preds = %get_vlc2.exit1172, %for.end191
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %for.end154
  br label %if.end209, !dbg !5770

if.end209:                                        ; preds = %if.end208, %if.else118
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %for.end117
  br label %sw.epilog, !dbg !5771

sw.bb211:                                         ; preds = %entry
  %798 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5772
  %call212 = call i32 @get_bits(%struct.GetBitContext* %798, i32 2), !dbg !5773
  store i32 %call212, i32* %weight_idx, align 4, !dbg !5774
  %799 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5775
  %800 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5777
  %801 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !5778
  %802 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5779
  %call213 = call i32 @num_coded_units(%struct.GetBitContext* %799, %struct.Atrac3pChanParams* %800, %struct.Atrac3pChanUnitCtx* %801, %struct.AVCodecContext* %802), !dbg !5780
  store i32 %call213, i32* %ret, align 4, !dbg !5781
  %cmp214 = icmp slt i32 %call213, 0, !dbg !5782
  br i1 %cmp214, label %if.then215, label %if.end216, !dbg !5783

if.then215:                                       ; preds = %sw.bb211
  %803 = load i32, i32* %ret, align 4, !dbg !5784
  store i32 %803, i32* %retval, align 4, !dbg !5785
  br label %return, !dbg !5785

if.end216:                                        ; preds = %sw.bb211
  %804 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5786
  %num_coded_vals217 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %804, i32 0, i32 1, !dbg !5787
  %805 = load i32, i32* %num_coded_vals217, align 4, !dbg !5787
  %tobool218 = icmp ne i32 %805, 0, !dbg !5786
  br i1 %tobool218, label %if.then219, label %if.end245, !dbg !5788

if.then219:                                       ; preds = %if.end216
  %806 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5789
  %call220 = call i32 @get_bits(%struct.GetBitContext* %806, i32 2), !dbg !5790
  %idxprom221 = zext i32 %call220 to i64, !dbg !5791
  %arrayidx222 = getelementptr inbounds [4 x %struct.VLC], [4 x %struct.VLC]* @wl_vlc_tabs, i64 0, i64 %idxprom221, !dbg !5791
  store %struct.VLC* %arrayidx222, %struct.VLC** %vlc_tab, align 8, !dbg !5792
  %807 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5793
  %call223 = call i32 @get_bits(%struct.GetBitContext* %807, i32 3), !dbg !5794
  %808 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5795
  %qu_wordlen224 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %808, i32 0, i32 5, !dbg !5796
  %arrayidx225 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen224, i64 0, i64 0, !dbg !5795
  store i32 %call223, i32* %arrayidx225, align 4, !dbg !5797
  store i32 1, i32* %i, align 4, !dbg !5798
  br label %for.cond226, !dbg !5799

for.cond226:                                      ; preds = %for.inc242, %if.then219
  %809 = load i32, i32* %i, align 4, !dbg !5800
  %810 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !5802
  %num_coded_vals227 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %810, i32 0, i32 1, !dbg !5803
  %811 = load i32, i32* %num_coded_vals227, align 4, !dbg !5803
  %cmp228 = icmp slt i32 %809, %811, !dbg !5804
  br i1 %cmp228, label %for.body229, label %for.end244, !dbg !5805

for.body229:                                      ; preds = %for.cond226
  %812 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5806
  %813 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5807
  %table230 = getelementptr inbounds %struct.VLC, %struct.VLC* %813, i32 0, i32 1, !dbg !5808
  %814 = load [2 x i16]*, [2 x i16]** %table230, align 8, !dbg !5808
  %815 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !5809
  %bits231 = getelementptr inbounds %struct.VLC, %struct.VLC* %815, i32 0, i32 0, !dbg !5810
  %816 = load i32, i32* %bits231, align 8, !dbg !5810
  store %struct.GetBitContext* %812, %struct.GetBitContext** %s.addr.i1176, align 8, !dbg !5811
  store [2 x i16]* %814, [2 x i16]** %table.addr.i1177, align 8, !dbg !5811
  store i32 %816, i32* %bits.addr.i1178, align 4, !dbg !5811
  store i32 1, i32* %max_depth.addr.i1179, align 4, !dbg !5811
  %817 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1176, align 8, !dbg !5812
  %index.i1187 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %817, i32 0, i32 2, !dbg !5813
  %818 = load i32, i32* %index.i1187, align 8, !dbg !5813
  store i32 %818, i32* %re_index.i1181, align 4, !dbg !3822
  %819 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1176, align 8, !dbg !5814
  %size_in_bits_plus8.i1188 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %819, i32 0, i32 4, !dbg !5815
  %820 = load i32, i32* %size_in_bits_plus8.i1188, align 8, !dbg !5815
  store i32 %820, i32* %re_size_plus8.i1183, align 4, !dbg !3824
  %821 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1176, align 8, !dbg !5816
  %buffer.i1189 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %821, i32 0, i32 0, !dbg !5817
  %822 = load i8*, i8** %buffer.i1189, align 8, !dbg !5817
  %823 = load i32, i32* %re_index.i1181, align 4, !dbg !5818
  %shr.i1190 = lshr i32 %823, 3, !dbg !5819
  %idx.ext.i1191 = zext i32 %shr.i1190 to i64, !dbg !5820
  %add.ptr.i1192 = getelementptr inbounds i8, i8* %822, i64 %idx.ext.i1191, !dbg !5820
  %824 = bitcast i8* %add.ptr.i1192 to %union.unaligned_32*, !dbg !5821
  %l.i1193 = bitcast %union.unaligned_32* %824 to i32*, !dbg !5821
  %825 = load i32, i32* %l.i1193, align 1, !dbg !5821
  store i32 %825, i32* %x.addr.i.i1175, align 4, !dbg !5822
  %826 = load i32, i32* %x.addr.i.i1175, align 4, !dbg !5823
  %shl.i.i1194 = shl i32 %826, 8, !dbg !5824
  %and.i.i1195 = and i32 %shl.i.i1194, 65280, !dbg !5825
  %827 = load i32, i32* %x.addr.i.i1175, align 4, !dbg !5826
  %shr.i.i1196 = lshr i32 %827, 8, !dbg !5827
  %and1.i.i1197 = and i32 %shr.i.i1196, 255, !dbg !5828
  %or.i.i1198 = or i32 %and.i.i1195, %and1.i.i1197, !dbg !5829
  %shl2.i.i1199 = shl i32 %or.i.i1198, 16, !dbg !5830
  %828 = load i32, i32* %x.addr.i.i1175, align 4, !dbg !5831
  %shr3.i.i1200 = lshr i32 %828, 16, !dbg !5832
  %shl4.i.i1201 = shl i32 %shr3.i.i1200, 8, !dbg !5833
  %and5.i.i1202 = and i32 %shl4.i.i1201, 65280, !dbg !5834
  %829 = load i32, i32* %x.addr.i.i1175, align 4, !dbg !5835
  %shr6.i.i1203 = lshr i32 %829, 16, !dbg !5836
  %shr7.i.i1204 = lshr i32 %shr6.i.i1203, 8, !dbg !5837
  %and8.i.i1205 = and i32 %shr7.i.i1204, 255, !dbg !5838
  %or9.i.i1206 = or i32 %and5.i.i1202, %and8.i.i1205, !dbg !5839
  %or10.i.i1207 = or i32 %shl2.i.i1199, %or9.i.i1206, !dbg !5840
  %830 = load i32, i32* %re_index.i1181, align 4, !dbg !5841
  %and.i1208 = and i32 %830, 7, !dbg !5842
  %shl.i1209 = shl i32 %or10.i.i1207, %and.i1208, !dbg !5843
  store i32 %shl.i1209, i32* %re_cache.i1182, align 4, !dbg !5844
  %831 = load i32, i32* %re_cache.i1182, align 4, !dbg !5845
  %832 = load i32, i32* %bits.addr.i1178, align 4, !dbg !5846
  %conv.i1210 = trunc i32 %832 to i8, !dbg !5846
  %call2.i1211 = call i32 @NEG_USR32(i32 %831, i8 signext %conv.i1210) #9, !dbg !5847
  store i32 %call2.i1211, i32* %index1.i1186, align 4, !dbg !5848
  %833 = load i32, i32* %index1.i1186, align 4, !dbg !5849
  %idxprom.i1212 = zext i32 %833 to i64, !dbg !5850
  %834 = load [2 x i16]*, [2 x i16]** %table.addr.i1177, align 8, !dbg !5850
  %arrayidx.i1213 = getelementptr inbounds [2 x i16], [2 x i16]* %834, i64 %idxprom.i1212, !dbg !5850
  %arrayidx3.i1214 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i1213, i64 0, i64 0, !dbg !5850
  %835 = load i16, i16* %arrayidx3.i1214, align 2, !dbg !5850
  %conv4.i1215 = sext i16 %835 to i32, !dbg !5850
  store i32 %conv4.i1215, i32* %code.i1180, align 4, !dbg !5851
  %836 = load i32, i32* %index1.i1186, align 4, !dbg !5852
  %idxprom5.i1216 = zext i32 %836 to i64, !dbg !5853
  %837 = load [2 x i16]*, [2 x i16]** %table.addr.i1177, align 8, !dbg !5853
  %arrayidx6.i1217 = getelementptr inbounds [2 x i16], [2 x i16]* %837, i64 %idxprom5.i1216, !dbg !5853
  %arrayidx7.i1218 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i1217, i64 0, i64 1, !dbg !5853
  %838 = load i16, i16* %arrayidx7.i1218, align 2, !dbg !5853
  %conv8.i1219 = sext i16 %838 to i32, !dbg !5853
  store i32 %conv8.i1219, i32* %n.i1184, align 4, !dbg !5854
  %839 = load i32, i32* %max_depth.addr.i1179, align 4, !dbg !5855
  %cmp.i1220 = icmp sgt i32 %839, 1, !dbg !5856
  br i1 %cmp.i1220, label %land.lhs.true.i1222, label %if.end68.i1309, !dbg !5857

land.lhs.true.i1222:                              ; preds = %for.body229
  %840 = load i32, i32* %n.i1184, align 4, !dbg !5858
  %cmp10.i1221 = icmp slt i32 %840, 0, !dbg !5859
  br i1 %cmp10.i1221, label %if.then.i1225, label %if.end68.i1309, !dbg !5860

if.then.i1225:                                    ; preds = %land.lhs.true.i1222
  %841 = load i32, i32* %re_size_plus8.i1183, align 4, !dbg !5861
  %842 = load i32, i32* %re_index.i1181, align 4, !dbg !5862
  %843 = load i32, i32* %bits.addr.i1178, align 4, !dbg !5863
  %add.i1223 = add i32 %842, %843, !dbg !5864
  %cmp12.i1224 = icmp ugt i32 %841, %add.i1223, !dbg !5865
  br i1 %cmp12.i1224, label %cond.true.i1227, label %cond.false.i1228, !dbg !5866

cond.true.i1227:                                  ; preds = %if.then.i1225
  %844 = load i32, i32* %re_index.i1181, align 4, !dbg !5867
  %845 = load i32, i32* %bits.addr.i1178, align 4, !dbg !5868
  %add14.i1226 = add i32 %844, %845, !dbg !5869
  br label %cond.end.i1264, !dbg !5870

cond.false.i1228:                                 ; preds = %if.then.i1225
  %846 = load i32, i32* %re_size_plus8.i1183, align 4, !dbg !5871
  br label %cond.end.i1264, !dbg !5872

cond.end.i1264:                                   ; preds = %cond.false.i1228, %cond.true.i1227
  %cond.i1229 = phi i32 [ %add14.i1226, %cond.true.i1227 ], [ %846, %cond.false.i1228 ], !dbg !5873
  store i32 %cond.i1229, i32* %re_index.i1181, align 4, !dbg !5874
  %847 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1176, align 8, !dbg !5875
  %buffer15.i1230 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %847, i32 0, i32 0, !dbg !5876
  %848 = load i8*, i8** %buffer15.i1230, align 8, !dbg !5876
  %849 = load i32, i32* %re_index.i1181, align 4, !dbg !5877
  %shr16.i1231 = lshr i32 %849, 3, !dbg !5878
  %idx.ext17.i1232 = zext i32 %shr16.i1231 to i64, !dbg !5879
  %add.ptr18.i1233 = getelementptr inbounds i8, i8* %848, i64 %idx.ext17.i1232, !dbg !5879
  %850 = bitcast i8* %add.ptr18.i1233 to %union.unaligned_32*, !dbg !5880
  %l19.i1234 = bitcast %union.unaligned_32* %850 to i32*, !dbg !5880
  %851 = load i32, i32* %l19.i1234, align 1, !dbg !5880
  store i32 %851, i32* %x.addr.i81.i1174, align 4, !dbg !5881
  %852 = load i32, i32* %x.addr.i81.i1174, align 4, !dbg !5882
  %shl.i82.i1235 = shl i32 %852, 8, !dbg !5883
  %and.i83.i1236 = and i32 %shl.i82.i1235, 65280, !dbg !5884
  %853 = load i32, i32* %x.addr.i81.i1174, align 4, !dbg !5885
  %shr.i84.i1237 = lshr i32 %853, 8, !dbg !5886
  %and1.i85.i1238 = and i32 %shr.i84.i1237, 255, !dbg !5887
  %or.i86.i1239 = or i32 %and.i83.i1236, %and1.i85.i1238, !dbg !5888
  %shl2.i87.i1240 = shl i32 %or.i86.i1239, 16, !dbg !5889
  %854 = load i32, i32* %x.addr.i81.i1174, align 4, !dbg !5890
  %shr3.i88.i1241 = lshr i32 %854, 16, !dbg !5891
  %shl4.i89.i1242 = shl i32 %shr3.i88.i1241, 8, !dbg !5892
  %and5.i90.i1243 = and i32 %shl4.i89.i1242, 65280, !dbg !5893
  %855 = load i32, i32* %x.addr.i81.i1174, align 4, !dbg !5894
  %shr6.i91.i1244 = lshr i32 %855, 16, !dbg !5895
  %shr7.i92.i1245 = lshr i32 %shr6.i91.i1244, 8, !dbg !5896
  %and8.i93.i1246 = and i32 %shr7.i92.i1245, 255, !dbg !5897
  %or9.i94.i1247 = or i32 %and5.i90.i1243, %and8.i93.i1246, !dbg !5898
  %or10.i95.i1248 = or i32 %shl2.i87.i1240, %or9.i94.i1247, !dbg !5899
  %856 = load i32, i32* %re_index.i1181, align 4, !dbg !5900
  %and21.i1249 = and i32 %856, 7, !dbg !5901
  %shl22.i1250 = shl i32 %or10.i95.i1248, %and21.i1249, !dbg !5902
  store i32 %shl22.i1250, i32* %re_cache.i1182, align 4, !dbg !5903
  %857 = load i32, i32* %n.i1184, align 4, !dbg !5904
  %sub.i1251 = sub nsw i32 0, %857, !dbg !5905
  store i32 %sub.i1251, i32* %nb_bits.i1185, align 4, !dbg !5906
  %858 = load i32, i32* %re_cache.i1182, align 4, !dbg !5907
  %859 = load i32, i32* %nb_bits.i1185, align 4, !dbg !5908
  %conv23.i1252 = trunc i32 %859 to i8, !dbg !5908
  %call24.i1253 = call i32 @NEG_USR32(i32 %858, i8 signext %conv23.i1252) #9, !dbg !5909
  %860 = load i32, i32* %code.i1180, align 4, !dbg !5910
  %add25.i1254 = add i32 %call24.i1253, %860, !dbg !5911
  store i32 %add25.i1254, i32* %index1.i1186, align 4, !dbg !5912
  %861 = load i32, i32* %index1.i1186, align 4, !dbg !5913
  %idxprom26.i1255 = zext i32 %861 to i64, !dbg !5914
  %862 = load [2 x i16]*, [2 x i16]** %table.addr.i1177, align 8, !dbg !5914
  %arrayidx27.i1256 = getelementptr inbounds [2 x i16], [2 x i16]* %862, i64 %idxprom26.i1255, !dbg !5914
  %arrayidx28.i1257 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i1256, i64 0, i64 0, !dbg !5914
  %863 = load i16, i16* %arrayidx28.i1257, align 2, !dbg !5914
  %conv29.i1258 = sext i16 %863 to i32, !dbg !5914
  store i32 %conv29.i1258, i32* %code.i1180, align 4, !dbg !5915
  %864 = load i32, i32* %index1.i1186, align 4, !dbg !5916
  %idxprom30.i1259 = zext i32 %864 to i64, !dbg !5917
  %865 = load [2 x i16]*, [2 x i16]** %table.addr.i1177, align 8, !dbg !5917
  %arrayidx31.i1260 = getelementptr inbounds [2 x i16], [2 x i16]* %865, i64 %idxprom30.i1259, !dbg !5917
  %arrayidx32.i1261 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i1260, i64 0, i64 1, !dbg !5917
  %866 = load i16, i16* %arrayidx32.i1261, align 2, !dbg !5917
  %conv33.i1262 = sext i16 %866 to i32, !dbg !5917
  store i32 %conv33.i1262, i32* %n.i1184, align 4, !dbg !5918
  %867 = load i32, i32* %max_depth.addr.i1179, align 4, !dbg !5919
  %cmp34.i1263 = icmp sgt i32 %867, 2, !dbg !5920
  br i1 %cmp34.i1263, label %land.lhs.true36.i1266, label %if.end.i1308, !dbg !5921

land.lhs.true36.i1266:                            ; preds = %cond.end.i1264
  %868 = load i32, i32* %n.i1184, align 4, !dbg !5922
  %cmp37.i1265 = icmp slt i32 %868, 0, !dbg !5923
  br i1 %cmp37.i1265, label %if.then39.i1269, label %if.end.i1308, !dbg !5924

if.then39.i1269:                                  ; preds = %land.lhs.true36.i1266
  %869 = load i32, i32* %re_size_plus8.i1183, align 4, !dbg !5925
  %870 = load i32, i32* %re_index.i1181, align 4, !dbg !5926
  %871 = load i32, i32* %nb_bits.i1185, align 4, !dbg !5927
  %add40.i1267 = add i32 %870, %871, !dbg !5928
  %cmp41.i1268 = icmp ugt i32 %869, %add40.i1267, !dbg !5929
  br i1 %cmp41.i1268, label %cond.true43.i1271, label %cond.false45.i1272, !dbg !5930

cond.true43.i1271:                                ; preds = %if.then39.i1269
  %872 = load i32, i32* %re_index.i1181, align 4, !dbg !5931
  %873 = load i32, i32* %nb_bits.i1185, align 4, !dbg !5932
  %add44.i1270 = add i32 %872, %873, !dbg !5933
  br label %cond.end46.i1307, !dbg !5934

cond.false45.i1272:                               ; preds = %if.then39.i1269
  %874 = load i32, i32* %re_size_plus8.i1183, align 4, !dbg !5935
  br label %cond.end46.i1307, !dbg !5936

cond.end46.i1307:                                 ; preds = %cond.false45.i1272, %cond.true43.i1271
  %cond47.i1273 = phi i32 [ %add44.i1270, %cond.true43.i1271 ], [ %874, %cond.false45.i1272 ], !dbg !5937
  store i32 %cond47.i1273, i32* %re_index.i1181, align 4, !dbg !5938
  %875 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1176, align 8, !dbg !5939
  %buffer48.i1274 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %875, i32 0, i32 0, !dbg !5940
  %876 = load i8*, i8** %buffer48.i1274, align 8, !dbg !5940
  %877 = load i32, i32* %re_index.i1181, align 4, !dbg !5941
  %shr49.i1275 = lshr i32 %877, 3, !dbg !5942
  %idx.ext50.i1276 = zext i32 %shr49.i1275 to i64, !dbg !5943
  %add.ptr51.i1277 = getelementptr inbounds i8, i8* %876, i64 %idx.ext50.i1276, !dbg !5943
  %878 = bitcast i8* %add.ptr51.i1277 to %union.unaligned_32*, !dbg !5944
  %l52.i1278 = bitcast %union.unaligned_32* %878 to i32*, !dbg !5944
  %879 = load i32, i32* %l52.i1278, align 1, !dbg !5944
  store i32 %879, i32* %x.addr.i96.i1173, align 4, !dbg !5945
  %880 = load i32, i32* %x.addr.i96.i1173, align 4, !dbg !5946
  %shl.i97.i1279 = shl i32 %880, 8, !dbg !5947
  %and.i98.i1280 = and i32 %shl.i97.i1279, 65280, !dbg !5948
  %881 = load i32, i32* %x.addr.i96.i1173, align 4, !dbg !5949
  %shr.i99.i1281 = lshr i32 %881, 8, !dbg !5950
  %and1.i100.i1282 = and i32 %shr.i99.i1281, 255, !dbg !5951
  %or.i101.i1283 = or i32 %and.i98.i1280, %and1.i100.i1282, !dbg !5952
  %shl2.i102.i1284 = shl i32 %or.i101.i1283, 16, !dbg !5953
  %882 = load i32, i32* %x.addr.i96.i1173, align 4, !dbg !5954
  %shr3.i103.i1285 = lshr i32 %882, 16, !dbg !5955
  %shl4.i104.i1286 = shl i32 %shr3.i103.i1285, 8, !dbg !5956
  %and5.i105.i1287 = and i32 %shl4.i104.i1286, 65280, !dbg !5957
  %883 = load i32, i32* %x.addr.i96.i1173, align 4, !dbg !5958
  %shr6.i106.i1288 = lshr i32 %883, 16, !dbg !5959
  %shr7.i107.i1289 = lshr i32 %shr6.i106.i1288, 8, !dbg !5960
  %and8.i108.i1290 = and i32 %shr7.i107.i1289, 255, !dbg !5961
  %or9.i109.i1291 = or i32 %and5.i105.i1287, %and8.i108.i1290, !dbg !5962
  %or10.i110.i1292 = or i32 %shl2.i102.i1284, %or9.i109.i1291, !dbg !5963
  %884 = load i32, i32* %re_index.i1181, align 4, !dbg !5964
  %and54.i1293 = and i32 %884, 7, !dbg !5965
  %shl55.i1294 = shl i32 %or10.i110.i1292, %and54.i1293, !dbg !5966
  store i32 %shl55.i1294, i32* %re_cache.i1182, align 4, !dbg !5967
  %885 = load i32, i32* %n.i1184, align 4, !dbg !5968
  %sub56.i1295 = sub nsw i32 0, %885, !dbg !5969
  store i32 %sub56.i1295, i32* %nb_bits.i1185, align 4, !dbg !5970
  %886 = load i32, i32* %re_cache.i1182, align 4, !dbg !5971
  %887 = load i32, i32* %nb_bits.i1185, align 4, !dbg !5972
  %conv57.i1296 = trunc i32 %887 to i8, !dbg !5972
  %call58.i1297 = call i32 @NEG_USR32(i32 %886, i8 signext %conv57.i1296) #9, !dbg !5973
  %888 = load i32, i32* %code.i1180, align 4, !dbg !5974
  %add59.i1298 = add i32 %call58.i1297, %888, !dbg !5975
  store i32 %add59.i1298, i32* %index1.i1186, align 4, !dbg !5976
  %889 = load i32, i32* %index1.i1186, align 4, !dbg !5977
  %idxprom60.i1299 = zext i32 %889 to i64, !dbg !5978
  %890 = load [2 x i16]*, [2 x i16]** %table.addr.i1177, align 8, !dbg !5978
  %arrayidx61.i1300 = getelementptr inbounds [2 x i16], [2 x i16]* %890, i64 %idxprom60.i1299, !dbg !5978
  %arrayidx62.i1301 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i1300, i64 0, i64 0, !dbg !5978
  %891 = load i16, i16* %arrayidx62.i1301, align 2, !dbg !5978
  %conv63.i1302 = sext i16 %891 to i32, !dbg !5978
  store i32 %conv63.i1302, i32* %code.i1180, align 4, !dbg !5979
  %892 = load i32, i32* %index1.i1186, align 4, !dbg !5980
  %idxprom64.i1303 = zext i32 %892 to i64, !dbg !5981
  %893 = load [2 x i16]*, [2 x i16]** %table.addr.i1177, align 8, !dbg !5981
  %arrayidx65.i1304 = getelementptr inbounds [2 x i16], [2 x i16]* %893, i64 %idxprom64.i1303, !dbg !5981
  %arrayidx66.i1305 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i1304, i64 0, i64 1, !dbg !5981
  %894 = load i16, i16* %arrayidx66.i1305, align 2, !dbg !5981
  %conv67.i1306 = sext i16 %894 to i32, !dbg !5981
  store i32 %conv67.i1306, i32* %n.i1184, align 4, !dbg !5982
  br label %if.end.i1308, !dbg !5983

if.end.i1308:                                     ; preds = %cond.end46.i1307, %land.lhs.true36.i1266, %cond.end.i1264
  br label %if.end68.i1309, !dbg !5984

if.end68.i1309:                                   ; preds = %if.end.i1308, %land.lhs.true.i1222, %for.body229
  %895 = load i32, i32* %n.i1184, align 4, !dbg !5985
  %896 = load i32, i32* %re_cache.i1182, align 4, !dbg !5986
  %shl70.i1310 = shl i32 %896, %895, !dbg !5986
  store i32 %shl70.i1310, i32* %re_cache.i1182, align 4, !dbg !5986
  %897 = load i32, i32* %re_size_plus8.i1183, align 4, !dbg !5987
  %898 = load i32, i32* %re_index.i1181, align 4, !dbg !5988
  %899 = load i32, i32* %n.i1184, align 4, !dbg !5989
  %add71.i1311 = add i32 %898, %899, !dbg !5990
  %cmp72.i1312 = icmp ugt i32 %897, %add71.i1311, !dbg !5991
  br i1 %cmp72.i1312, label %cond.true74.i1314, label %cond.false76.i1315, !dbg !5992

cond.true74.i1314:                                ; preds = %if.end68.i1309
  %900 = load i32, i32* %re_index.i1181, align 4, !dbg !5993
  %901 = load i32, i32* %n.i1184, align 4, !dbg !5994
  %add75.i1313 = add i32 %900, %901, !dbg !5995
  br label %get_vlc2.exit1318, !dbg !5996

cond.false76.i1315:                               ; preds = %if.end68.i1309
  %902 = load i32, i32* %re_size_plus8.i1183, align 4, !dbg !5997
  br label %get_vlc2.exit1318, !dbg !5998

get_vlc2.exit1318:                                ; preds = %cond.true74.i1314, %cond.false76.i1315
  %cond78.i1316 = phi i32 [ %add75.i1313, %cond.true74.i1314 ], [ %902, %cond.false76.i1315 ], !dbg !5999
  store i32 %cond78.i1316, i32* %re_index.i1181, align 4, !dbg !6000
  %903 = load i32, i32* %re_index.i1181, align 4, !dbg !6001
  %904 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i1176, align 8, !dbg !6002
  %index80.i1317 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %904, i32 0, i32 2, !dbg !6003
  store i32 %903, i32* %index80.i1317, align 8, !dbg !6004
  %905 = load i32, i32* %code.i1180, align 4, !dbg !6005
  store i32 %905, i32* %delta, align 4, !dbg !6006
  %906 = load i32, i32* %i, align 4, !dbg !6007
  %sub233 = sub nsw i32 %906, 1, !dbg !6008
  %idxprom234 = sext i32 %sub233 to i64, !dbg !6009
  %907 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6009
  %qu_wordlen235 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %907, i32 0, i32 5, !dbg !6010
  %arrayidx236 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen235, i64 0, i64 %idxprom234, !dbg !6009
  %908 = load i32, i32* %arrayidx236, align 4, !dbg !6009
  %909 = load i32, i32* %delta, align 4, !dbg !6011
  %add237 = add nsw i32 %908, %909, !dbg !6012
  %and238 = and i32 %add237, 7, !dbg !6013
  %910 = load i32, i32* %i, align 4, !dbg !6014
  %idxprom239 = sext i32 %910 to i64, !dbg !6015
  %911 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6015
  %qu_wordlen240 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %911, i32 0, i32 5, !dbg !6016
  %arrayidx241 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen240, i64 0, i64 %idxprom239, !dbg !6015
  store i32 %and238, i32* %arrayidx241, align 4, !dbg !6017
  br label %for.inc242, !dbg !6018

for.inc242:                                       ; preds = %get_vlc2.exit1318
  %912 = load i32, i32* %i, align 4, !dbg !6019
  %inc243 = add nsw i32 %912, 1, !dbg !6019
  store i32 %inc243, i32* %i, align 4, !dbg !6019
  br label %for.cond226, !dbg !6021, !llvm.loop !6022

for.end244:                                       ; preds = %for.cond226
  br label %if.end245, !dbg !6024

if.end245:                                        ; preds = %for.end244, %if.end216
  br label %sw.epilog, !dbg !6025

sw.epilog:                                        ; preds = %entry, %if.end245, %if.end210, %if.end69, %for.end
  %913 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6026
  %fill_mode246 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %913, i32 0, i32 2, !dbg !6028
  %914 = load i32, i32* %fill_mode246, align 8, !dbg !6028
  %cmp247 = icmp eq i32 %914, 2, !dbg !6029
  br i1 %cmp247, label %if.then248, label %if.else262, !dbg !6030

if.then248:                                       ; preds = %sw.epilog
  %915 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6031
  %num_coded_vals249 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %915, i32 0, i32 1, !dbg !6034
  %916 = load i32, i32* %num_coded_vals249, align 4, !dbg !6034
  store i32 %916, i32* %i, align 4, !dbg !6035
  br label %for.cond250, !dbg !6036

for.cond250:                                      ; preds = %for.inc259, %if.then248
  %917 = load i32, i32* %i, align 4, !dbg !6037
  %918 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6040
  %num_quant_units251 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %918, i32 0, i32 1, !dbg !6041
  %919 = load i32, i32* %num_quant_units251, align 4, !dbg !6041
  %cmp252 = icmp slt i32 %917, %919, !dbg !6042
  br i1 %cmp252, label %for.body253, label %for.end261, !dbg !6043

for.body253:                                      ; preds = %for.cond250
  %920 = load i32, i32* %ch_num.addr, align 4, !dbg !6044
  %tobool254 = icmp ne i32 %920, 0, !dbg !6044
  br i1 %tobool254, label %cond.true, label %cond.false, !dbg !6044

cond.true:                                        ; preds = %for.body253
  %921 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6045
  %call255 = call i32 @get_bits1(%struct.GetBitContext* %921), !dbg !6046
  br label %cond.end, !dbg !6047

cond.false:                                       ; preds = %for.body253
  br label %cond.end, !dbg !6048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call255, %cond.true ], [ 1, %cond.false ], !dbg !6050
  %922 = load i32, i32* %i, align 4, !dbg !6052
  %idxprom256 = sext i32 %922 to i64, !dbg !6053
  %923 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6053
  %qu_wordlen257 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %923, i32 0, i32 5, !dbg !6054
  %arrayidx258 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen257, i64 0, i64 %idxprom256, !dbg !6053
  store i32 %cond, i32* %arrayidx258, align 4, !dbg !6055
  br label %for.inc259, !dbg !6053

for.inc259:                                       ; preds = %cond.end
  %924 = load i32, i32* %i, align 4, !dbg !6056
  %inc260 = add nsw i32 %924, 1, !dbg !6056
  store i32 %inc260, i32* %i, align 4, !dbg !6056
  br label %for.cond250, !dbg !6057, !llvm.loop !6058

for.end261:                                       ; preds = %for.cond250
  br label %if.end287, !dbg !6060

if.else262:                                       ; preds = %sw.epilog
  %925 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6061
  %fill_mode263 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %925, i32 0, i32 2, !dbg !6064
  %926 = load i32, i32* %fill_mode263, align 8, !dbg !6064
  %cmp264 = icmp eq i32 %926, 3, !dbg !6065
  br i1 %cmp264, label %if.then265, label %if.end286, !dbg !6061

if.then265:                                       ; preds = %if.else262
  %927 = load i32, i32* %ch_num.addr, align 4, !dbg !6066
  %tobool266 = icmp ne i32 %927, 0, !dbg !6066
  br i1 %tobool266, label %cond.true267, label %cond.false270, !dbg !6066

cond.true267:                                     ; preds = %if.then265
  %928 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6068
  %num_coded_vals268 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %928, i32 0, i32 1, !dbg !6070
  %929 = load i32, i32* %num_coded_vals268, align 4, !dbg !6070
  %930 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6071
  %split_point = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %930, i32 0, i32 3, !dbg !6072
  %931 = load i32, i32* %split_point, align 4, !dbg !6072
  %add269 = add nsw i32 %929, %931, !dbg !6073
  br label %cond.end274, !dbg !6074

cond.false270:                                    ; preds = %if.then265
  %932 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6075
  %num_quant_units271 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %932, i32 0, i32 1, !dbg !6076
  %933 = load i32, i32* %num_quant_units271, align 4, !dbg !6076
  %934 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6077
  %split_point272 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %934, i32 0, i32 3, !dbg !6078
  %935 = load i32, i32* %split_point272, align 4, !dbg !6078
  %sub273 = sub nsw i32 %933, %935, !dbg !6079
  br label %cond.end274, !dbg !6080

cond.end274:                                      ; preds = %cond.false270, %cond.true267
  %cond275 = phi i32 [ %add269, %cond.true267 ], [ %sub273, %cond.false270 ], !dbg !6082
  store i32 %cond275, i32* %pos, align 4, !dbg !6084
  %936 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6085
  %num_coded_vals276 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %936, i32 0, i32 1, !dbg !6087
  %937 = load i32, i32* %num_coded_vals276, align 4, !dbg !6087
  store i32 %937, i32* %i, align 4, !dbg !6088
  br label %for.cond277, !dbg !6089

for.cond277:                                      ; preds = %for.inc283, %cond.end274
  %938 = load i32, i32* %i, align 4, !dbg !6090
  %939 = load i32, i32* %pos, align 4, !dbg !6093
  %cmp278 = icmp slt i32 %938, %939, !dbg !6094
  br i1 %cmp278, label %for.body279, label %for.end285, !dbg !6095

for.body279:                                      ; preds = %for.cond277
  %940 = load i32, i32* %i, align 4, !dbg !6096
  %idxprom280 = sext i32 %940 to i64, !dbg !6097
  %941 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6097
  %qu_wordlen281 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %941, i32 0, i32 5, !dbg !6098
  %arrayidx282 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen281, i64 0, i64 %idxprom280, !dbg !6097
  store i32 1, i32* %arrayidx282, align 4, !dbg !6099
  br label %for.inc283, !dbg !6097

for.inc283:                                       ; preds = %for.body279
  %942 = load i32, i32* %i, align 4, !dbg !6100
  %inc284 = add nsw i32 %942, 1, !dbg !6100
  store i32 %inc284, i32* %i, align 4, !dbg !6100
  br label %for.cond277, !dbg !6102, !llvm.loop !6103

for.end285:                                       ; preds = %for.cond277
  br label %if.end286, !dbg !6105

if.end286:                                        ; preds = %for.end285, %if.else262
  br label %if.end287

if.end287:                                        ; preds = %if.end286, %for.end261
  %943 = load i32, i32* %weight_idx, align 4, !dbg !6106
  %tobool288 = icmp ne i32 %943, 0, !dbg !6106
  br i1 %tobool288, label %if.then289, label %if.end291, !dbg !6108

if.then289:                                       ; preds = %if.end287
  %944 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6109
  %945 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6110
  %946 = load i32, i32* %weight_idx, align 4, !dbg !6111
  %947 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6112
  %call290 = call i32 @add_wordlen_weights(%struct.Atrac3pChanUnitCtx* %944, %struct.Atrac3pChanParams* %945, i32 %946, %struct.AVCodecContext* %947), !dbg !6113
  store i32 %call290, i32* %retval, align 4, !dbg !6114
  br label %return, !dbg !6114

if.end291:                                        ; preds = %if.end287
  store i32 0, i32* %retval, align 4, !dbg !6115
  br label %return, !dbg !6115

return:                                           ; preds = %if.end291, %if.then289, %if.then215, %if.then73, %if.then41, %if.then33, %if.then9
  %948 = load i32, i32* %retval, align 4, !dbg !6116
  ret i32 %948, !dbg !6116
}

; Function Attrs: nounwind uwtable
define internal i32 @num_coded_units(%struct.GetBitContext* %gb, %struct.Atrac3pChanParams* %chan, %struct.Atrac3pChanUnitCtx* %ctx, %struct.AVCodecContext* %avctx) #3 !dbg !6117 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %chan.addr = alloca %struct.Atrac3pChanParams*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6120, metadata !1324), !dbg !6121
  store %struct.Atrac3pChanParams* %chan, %struct.Atrac3pChanParams** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan.addr, metadata !6122, metadata !1324), !dbg !6123
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !6124, metadata !1324), !dbg !6125
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6126, metadata !1324), !dbg !6127
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6128
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 2), !dbg !6129
  %1 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6130
  %fill_mode = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %1, i32 0, i32 2, !dbg !6131
  store i32 %call, i32* %fill_mode, align 8, !dbg !6132
  %2 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6133
  %fill_mode1 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %2, i32 0, i32 2, !dbg !6135
  %3 = load i32, i32* %fill_mode1, align 8, !dbg !6135
  %tobool = icmp ne i32 %3, 0, !dbg !6133
  br i1 %tobool, label %if.else, label %if.then, !dbg !6136

if.then:                                          ; preds = %entry
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6137
  %num_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 1, !dbg !6139
  %5 = load i32, i32* %num_quant_units, align 4, !dbg !6139
  %6 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6140
  %num_coded_vals = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %6, i32 0, i32 1, !dbg !6141
  store i32 %5, i32* %num_coded_vals, align 4, !dbg !6142
  br label %if.end13, !dbg !6143

if.else:                                          ; preds = %entry
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6144
  %call2 = call i32 @get_bits(%struct.GetBitContext* %7, i32 5), !dbg !6146
  %8 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6147
  %num_coded_vals3 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %8, i32 0, i32 1, !dbg !6148
  store i32 %call2, i32* %num_coded_vals3, align 4, !dbg !6149
  %9 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6150
  %num_coded_vals4 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %9, i32 0, i32 1, !dbg !6152
  %10 = load i32, i32* %num_coded_vals4, align 4, !dbg !6152
  %11 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6153
  %num_quant_units5 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %11, i32 0, i32 1, !dbg !6154
  %12 = load i32, i32* %num_quant_units5, align 4, !dbg !6154
  %cmp = icmp sgt i32 %10, %12, !dbg !6155
  br i1 %cmp, label %if.then6, label %if.end, !dbg !6156

if.then6:                                         ; preds = %if.else
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6157
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !6157
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i32 0, i32 0)), !dbg !6159
  store i32 -1094995529, i32* %retval, align 4, !dbg !6160
  br label %return, !dbg !6160

if.end:                                           ; preds = %if.else
  %15 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6161
  %fill_mode7 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %15, i32 0, i32 2, !dbg !6163
  %16 = load i32, i32* %fill_mode7, align 8, !dbg !6163
  %cmp8 = icmp eq i32 %16, 3, !dbg !6164
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !6165

if.then9:                                         ; preds = %if.end
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6166
  %call10 = call i32 @get_bits(%struct.GetBitContext* %17, i32 2), !dbg !6167
  %18 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6168
  %ch_num = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %18, i32 0, i32 0, !dbg !6169
  %19 = load i32, i32* %ch_num, align 8, !dbg !6169
  %shl = shl i32 %19, 1, !dbg !6170
  %add = add i32 %call10, %shl, !dbg !6171
  %add11 = add i32 %add, 1, !dbg !6172
  %20 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6173
  %split_point = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %20, i32 0, i32 3, !dbg !6174
  store i32 %add11, i32* %split_point, align 4, !dbg !6175
  br label %if.end12, !dbg !6173

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  store i32 0, i32* %retval, align 4, !dbg !6176
  br label %return, !dbg !6176

return:                                           ; preds = %if.end13, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !6177
  ret i32 %21, !dbg !6177
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @unpack_vq_shape(i32 %start_val, i8* %shape_vec, i32* %dst, i32 %num_values) #4 !dbg !6178 {
entry:
  %start_val.addr = alloca i32, align 4
  %shape_vec.addr = alloca i8*, align 8
  %dst.addr = alloca i32*, align 8
  %num_values.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %start_val, i32* %start_val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_val.addr, metadata !6182, metadata !1324), !dbg !6183
  store i8* %shape_vec, i8** %shape_vec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %shape_vec.addr, metadata !6184, metadata !1324), !dbg !6185
  store i32* %dst, i32** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr, metadata !6186, metadata !1324), !dbg !6187
  store i32 %num_values, i32* %num_values.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_values.addr, metadata !6188, metadata !1324), !dbg !6189
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6190, metadata !1324), !dbg !6191
  %0 = load i32, i32* %num_values.addr, align 4, !dbg !6192
  %tobool = icmp ne i32 %0, 0, !dbg !6192
  br i1 %tobool, label %if.then, label %if.end, !dbg !6194

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %start_val.addr, align 4, !dbg !6195
  %2 = load i32*, i32** %dst.addr, align 8, !dbg !6197
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 2, !dbg !6197
  store i32 %1, i32* %arrayidx, align 4, !dbg !6198
  %3 = load i32*, i32** %dst.addr, align 8, !dbg !6199
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !6199
  store i32 %1, i32* %arrayidx1, align 4, !dbg !6200
  %4 = load i32*, i32** %dst.addr, align 8, !dbg !6201
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 0, !dbg !6201
  store i32 %1, i32* %arrayidx2, align 4, !dbg !6202
  store i32 3, i32* %i, align 4, !dbg !6203
  br label %for.cond, !dbg !6205

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !6206
  %6 = load i32, i32* %num_values.addr, align 4, !dbg !6209
  %cmp = icmp slt i32 %5, %6, !dbg !6210
  br i1 %cmp, label %for.body, label %for.end, !dbg !6211

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %start_val.addr, align 4, !dbg !6212
  %8 = load i32, i32* %i, align 4, !dbg !6213
  %idxprom = sext i32 %8 to i64, !dbg !6214
  %arrayidx3 = getelementptr inbounds [32 x i8], [32 x i8]* @atrac3p_qu_num_to_seg, i64 0, i64 %idxprom, !dbg !6214
  %9 = load i8, i8* %arrayidx3, align 1, !dbg !6214
  %conv = zext i8 %9 to i32, !dbg !6214
  %sub = sub nsw i32 %conv, 1, !dbg !6215
  %idxprom4 = sext i32 %sub to i64, !dbg !6216
  %10 = load i8*, i8** %shape_vec.addr, align 8, !dbg !6216
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 %idxprom4, !dbg !6216
  %11 = load i8, i8* %arrayidx5, align 1, !dbg !6216
  %conv6 = sext i8 %11 to i32, !dbg !6216
  %sub7 = sub nsw i32 %7, %conv6, !dbg !6217
  %12 = load i32, i32* %i, align 4, !dbg !6218
  %idxprom8 = sext i32 %12 to i64, !dbg !6219
  %13 = load i32*, i32** %dst.addr, align 8, !dbg !6219
  %arrayidx9 = getelementptr inbounds i32, i32* %13, i64 %idxprom8, !dbg !6219
  store i32 %sub7, i32* %arrayidx9, align 4, !dbg !6220
  br label %for.inc, !dbg !6219

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6221
  %inc = add nsw i32 %14, 1, !dbg !6221
  store i32 %inc, i32* %i, align 4, !dbg !6221
  br label %for.cond, !dbg !6223, !llvm.loop !6224

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6226

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !6227
}

; Function Attrs: nounwind uwtable
define internal i32 @add_wordlen_weights(%struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanParams* %chan, i32 %wtab_idx, %struct.AVCodecContext* %avctx) #3 !dbg !6228 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %chan.addr = alloca %struct.Atrac3pChanParams*, align 8
  %wtab_idx.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %weights_tab = alloca i8*, align 8
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !6231, metadata !1324), !dbg !6232
  store %struct.Atrac3pChanParams* %chan, %struct.Atrac3pChanParams** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan.addr, metadata !6233, metadata !1324), !dbg !6234
  store i32 %wtab_idx, i32* %wtab_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wtab_idx.addr, metadata !6235, metadata !1324), !dbg !6236
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6237, metadata !1324), !dbg !6238
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6239, metadata !1324), !dbg !6240
  call void @llvm.dbg.declare(metadata i8** %weights_tab, metadata !6241, metadata !1324), !dbg !6242
  %0 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6243
  %ch_num = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %0, i32 0, i32 0, !dbg !6244
  %1 = load i32, i32* %ch_num, align 8, !dbg !6244
  %mul = mul nsw i32 %1, 3, !dbg !6245
  %2 = load i32, i32* %wtab_idx.addr, align 4, !dbg !6246
  %add = add nsw i32 %mul, %2, !dbg !6247
  %sub = sub nsw i32 %add, 1, !dbg !6248
  %idxprom = sext i32 %sub to i64, !dbg !6249
  %arrayidx = getelementptr inbounds [6 x [32 x i8]], [6 x [32 x i8]]* @atrac3p_wl_weights, i64 0, i64 %idxprom, !dbg !6249
  %arrayidx1 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx, i64 0, i64 0, !dbg !6249
  store i8* %arrayidx1, i8** %weights_tab, align 8, !dbg !6242
  store i32 0, i32* %i, align 4, !dbg !6250
  br label %for.cond, !dbg !6252

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !6253
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6256
  %num_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 1, !dbg !6257
  %5 = load i32, i32* %num_quant_units, align 4, !dbg !6257
  %cmp = icmp slt i32 %3, %5, !dbg !6258
  br i1 %cmp, label %for.body, label %for.end, !dbg !6259

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !6260
  %idxprom2 = sext i32 %6 to i64, !dbg !6262
  %7 = load i8*, i8** %weights_tab, align 8, !dbg !6262
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 %idxprom2, !dbg !6262
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !6262
  %conv = sext i8 %8 to i32, !dbg !6262
  %9 = load i32, i32* %i, align 4, !dbg !6263
  %idxprom4 = sext i32 %9 to i64, !dbg !6264
  %10 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6264
  %qu_wordlen = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %10, i32 0, i32 5, !dbg !6265
  %arrayidx5 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen, i64 0, i64 %idxprom4, !dbg !6264
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !6266
  %add6 = add nsw i32 %11, %conv, !dbg !6266
  store i32 %add6, i32* %arrayidx5, align 4, !dbg !6266
  %12 = load i32, i32* %i, align 4, !dbg !6267
  %idxprom7 = sext i32 %12 to i64, !dbg !6269
  %13 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6269
  %qu_wordlen8 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %13, i32 0, i32 5, !dbg !6270
  %arrayidx9 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen8, i64 0, i64 %idxprom7, !dbg !6269
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !6269
  %cmp10 = icmp slt i32 %14, 0, !dbg !6271
  br i1 %cmp10, label %if.then, label %lor.lhs.false, !dbg !6272

lor.lhs.false:                                    ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !6273
  %idxprom12 = sext i32 %15 to i64, !dbg !6275
  %16 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6275
  %qu_wordlen13 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %16, i32 0, i32 5, !dbg !6276
  %arrayidx14 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen13, i64 0, i64 %idxprom12, !dbg !6275
  %17 = load i32, i32* %arrayidx14, align 4, !dbg !6275
  %cmp15 = icmp sgt i32 %17, 7, !dbg !6277
  br i1 %cmp15, label %if.then, label %if.end, !dbg !6278

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6279
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !6279
  %20 = load i32, i32* %i, align 4, !dbg !6281
  %21 = load i32, i32* %i, align 4, !dbg !6282
  %idxprom17 = sext i32 %21 to i64, !dbg !6283
  %22 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !6283
  %qu_wordlen18 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %22, i32 0, i32 5, !dbg !6284
  %arrayidx19 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen18, i64 0, i64 %idxprom17, !dbg !6283
  %23 = load i32, i32* %arrayidx19, align 4, !dbg !6283
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i32 0, i32 0), i32 %20, i32 %23), !dbg !6285
  store i32 -1094995529, i32* %retval, align 4, !dbg !6286
  br label %return, !dbg !6286

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !6287

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !6288
  %inc = add nsw i32 %24, 1, !dbg !6288
  store i32 %inc, i32* %i, align 4, !dbg !6288
  br label %for.cond, !dbg !6290, !llvm.loop !6291

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6293
  br label %return, !dbg !6293

return:                                           ; preds = %for.end, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !6294
  ret i32 %25, !dbg !6294
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_channel_sf_idx(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, %struct.AVCodecContext* %avctx) #3 !dbg !6295 {
entry:
  %x.addr.i96.i871 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i871, metadata !2531, metadata !1324), !dbg !6296
  %x.addr.i81.i872 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i872, metadata !2531, metadata !1324), !dbg !6307
  %x.addr.i.i873 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i873, metadata !2531, metadata !1324), !dbg !6309
  %s.addr.i874 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i874, metadata !3291, metadata !1324), !dbg !6311
  %table.addr.i875 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i875, metadata !3293, metadata !1324), !dbg !6312
  %bits.addr.i876 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i876, metadata !3295, metadata !1324), !dbg !6313
  %max_depth.addr.i877 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i877, metadata !3297, metadata !1324), !dbg !6314
  %code.i878 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i878, metadata !3299, metadata !1324), !dbg !6315
  %re_index.i879 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i879, metadata !3301, metadata !1324), !dbg !6316
  %re_cache.i880 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i880, metadata !3303, metadata !1324), !dbg !6317
  %re_size_plus8.i881 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i881, metadata !3305, metadata !1324), !dbg !6318
  %n.i882 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i882, metadata !3307, metadata !1324), !dbg !6319
  %nb_bits.i883 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i883, metadata !3309, metadata !1324), !dbg !6320
  %index1.i884 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i884, metadata !3311, metadata !1324), !dbg !6321
  %x.addr.i96.i725 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i725, metadata !2531, metadata !1324), !dbg !6322
  %x.addr.i81.i726 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i726, metadata !2531, metadata !1324), !dbg !6329
  %x.addr.i.i727 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i727, metadata !2531, metadata !1324), !dbg !6331
  %s.addr.i728 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i728, metadata !3291, metadata !1324), !dbg !6333
  %table.addr.i729 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i729, metadata !3293, metadata !1324), !dbg !6334
  %bits.addr.i730 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i730, metadata !3295, metadata !1324), !dbg !6335
  %max_depth.addr.i731 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i731, metadata !3297, metadata !1324), !dbg !6336
  %code.i732 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i732, metadata !3299, metadata !1324), !dbg !6337
  %re_index.i733 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i733, metadata !3301, metadata !1324), !dbg !6338
  %re_cache.i734 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i734, metadata !3303, metadata !1324), !dbg !6339
  %re_size_plus8.i735 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i735, metadata !3305, metadata !1324), !dbg !6340
  %n.i736 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i736, metadata !3307, metadata !1324), !dbg !6341
  %nb_bits.i737 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i737, metadata !3309, metadata !1324), !dbg !6342
  %index1.i738 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i738, metadata !3311, metadata !1324), !dbg !6343
  %x.addr.i96.i579 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i579, metadata !2531, metadata !1324), !dbg !6344
  %x.addr.i81.i580 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i580, metadata !2531, metadata !1324), !dbg !6352
  %x.addr.i.i581 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i581, metadata !2531, metadata !1324), !dbg !6354
  %s.addr.i582 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i582, metadata !3291, metadata !1324), !dbg !6356
  %table.addr.i583 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i583, metadata !3293, metadata !1324), !dbg !6357
  %bits.addr.i584 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i584, metadata !3295, metadata !1324), !dbg !6358
  %max_depth.addr.i585 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i585, metadata !3297, metadata !1324), !dbg !6359
  %code.i586 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i586, metadata !3299, metadata !1324), !dbg !6360
  %re_index.i587 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i587, metadata !3301, metadata !1324), !dbg !6361
  %re_cache.i588 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i588, metadata !3303, metadata !1324), !dbg !6362
  %re_size_plus8.i589 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i589, metadata !3305, metadata !1324), !dbg !6363
  %n.i590 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i590, metadata !3307, metadata !1324), !dbg !6364
  %nb_bits.i591 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i591, metadata !3309, metadata !1324), !dbg !6365
  %index1.i592 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i592, metadata !3311, metadata !1324), !dbg !6366
  %x.addr.i96.i433 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i433, metadata !2531, metadata !1324), !dbg !6367
  %x.addr.i81.i434 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i434, metadata !2531, metadata !1324), !dbg !6374
  %x.addr.i.i435 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i435, metadata !2531, metadata !1324), !dbg !6376
  %s.addr.i436 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i436, metadata !3291, metadata !1324), !dbg !6378
  %table.addr.i437 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i437, metadata !3293, metadata !1324), !dbg !6379
  %bits.addr.i438 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i438, metadata !3295, metadata !1324), !dbg !6380
  %max_depth.addr.i439 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i439, metadata !3297, metadata !1324), !dbg !6381
  %code.i440 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i440, metadata !3299, metadata !1324), !dbg !6382
  %re_index.i441 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i441, metadata !3301, metadata !1324), !dbg !6383
  %re_cache.i442 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i442, metadata !3303, metadata !1324), !dbg !6384
  %re_size_plus8.i443 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i443, metadata !3305, metadata !1324), !dbg !6385
  %n.i444 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i444, metadata !3307, metadata !1324), !dbg !6386
  %nb_bits.i445 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i445, metadata !3309, metadata !1324), !dbg !6387
  %index1.i446 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i446, metadata !3311, metadata !1324), !dbg !6388
  %x.addr.i96.i287 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i287, metadata !2531, metadata !1324), !dbg !6389
  %x.addr.i81.i288 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i288, metadata !2531, metadata !1324), !dbg !6392
  %x.addr.i.i289 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i289, metadata !2531, metadata !1324), !dbg !6394
  %s.addr.i290 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i290, metadata !3291, metadata !1324), !dbg !6396
  %table.addr.i291 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i291, metadata !3293, metadata !1324), !dbg !6397
  %bits.addr.i292 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i292, metadata !3295, metadata !1324), !dbg !6398
  %max_depth.addr.i293 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i293, metadata !3297, metadata !1324), !dbg !6399
  %code.i294 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i294, metadata !3299, metadata !1324), !dbg !6400
  %re_index.i295 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i295, metadata !3301, metadata !1324), !dbg !6401
  %re_cache.i296 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i296, metadata !3303, metadata !1324), !dbg !6402
  %re_size_plus8.i297 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i297, metadata !3305, metadata !1324), !dbg !6403
  %n.i298 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i298, metadata !3307, metadata !1324), !dbg !6404
  %nb_bits.i299 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i299, metadata !3309, metadata !1324), !dbg !6405
  %index1.i300 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i300, metadata !3311, metadata !1324), !dbg !6406
  %s.addr.i278 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i278, metadata !3954, metadata !1324), !dbg !6407
  %n.addr.i279 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i279, metadata !3966, metadata !1324), !dbg !6415
  %s.addr.i273 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i273, metadata !3954, metadata !1324), !dbg !6416
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !3966, metadata !1324), !dbg !6421
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !6422
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !6429
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !6431
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !6433
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !6434
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !6435
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !6436
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !6437
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !6438
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !6439
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !6440
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !6441
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !6442
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !6443
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %weight_idx = alloca i32, align 4
  %delta = alloca i32, align 4
  %diff = alloca i32, align 4
  %num_long_vals = alloca i32, align 4
  %delta_bits = alloca i32, align 4
  %min_val = alloca i32, align 4
  %vlc_sel = alloca i32, align 4
  %start_val = alloca i32, align 4
  %vlc_tab = alloca %struct.VLC*, align 8
  %chan = alloca %struct.Atrac3pChanParams*, align 8
  %ref_chan = alloca %struct.Atrac3pChanParams*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6444, metadata !1324), !dbg !6445
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !6446, metadata !1324), !dbg !6447
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !6448, metadata !1324), !dbg !6449
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6450, metadata !1324), !dbg !6451
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6452, metadata !1324), !dbg !6453
  call void @llvm.dbg.declare(metadata i32* %weight_idx, metadata !6454, metadata !1324), !dbg !6455
  store i32 0, i32* %weight_idx, align 4, !dbg !6455
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !6456, metadata !1324), !dbg !6457
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !6458, metadata !1324), !dbg !6459
  call void @llvm.dbg.declare(metadata i32* %num_long_vals, metadata !6460, metadata !1324), !dbg !6461
  call void @llvm.dbg.declare(metadata i32* %delta_bits, metadata !6462, metadata !1324), !dbg !6463
  call void @llvm.dbg.declare(metadata i32* %min_val, metadata !6464, metadata !1324), !dbg !6465
  call void @llvm.dbg.declare(metadata i32* %vlc_sel, metadata !6466, metadata !1324), !dbg !6467
  call void @llvm.dbg.declare(metadata i32* %start_val, metadata !6468, metadata !1324), !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc_tab, metadata !6470, metadata !1324), !dbg !6471
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan, metadata !6472, metadata !1324), !dbg !6473
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !6474
  %idxprom = sext i32 %0 to i64, !dbg !6475
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6475
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !6476
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !6475
  store %struct.Atrac3pChanParams* %arrayidx, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6473
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %ref_chan, metadata !6477, metadata !1324), !dbg !6478
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6479
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 12, !dbg !6480
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !6479
  store %struct.Atrac3pChanParams* %arrayidx2, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !6478
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6481
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 2), !dbg !6482
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb103
    i32 3, label %sw.bb179
  ], !dbg !6483

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6484
  br label %for.cond, !dbg !6486

for.cond:                                         ; preds = %for.inc, %sw.bb
  %4 = load i32, i32* %i, align 4, !dbg !6487
  %5 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6490
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %5, i32 0, i32 3, !dbg !6491
  %6 = load i32, i32* %used_quant_units, align 4, !dbg !6491
  %cmp = icmp slt i32 %4, %6, !dbg !6492
  br i1 %cmp, label %for.body, label %for.end, !dbg !6493

for.body:                                         ; preds = %for.cond
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6494
  %call3 = call i32 @get_bits(%struct.GetBitContext* %7, i32 6), !dbg !6495
  %8 = load i32, i32* %i, align 4, !dbg !6496
  %idxprom4 = sext i32 %8 to i64, !dbg !6497
  %9 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6497
  %qu_sf_idx = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %9, i32 0, i32 6, !dbg !6498
  %arrayidx5 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx, i64 0, i64 %idxprom4, !dbg !6497
  store i32 %call3, i32* %arrayidx5, align 4, !dbg !6499
  br label %for.inc, !dbg !6497

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6500
  %inc = add nsw i32 %10, 1, !dbg !6500
  store i32 %inc, i32* %i, align 4, !dbg !6500
  br label %for.cond, !dbg !6502, !llvm.loop !6503

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !6505

sw.bb6:                                           ; preds = %entry
  %11 = load i32, i32* %ch_num.addr, align 4, !dbg !6506
  %tobool = icmp ne i32 %11, 0, !dbg !6506
  br i1 %tobool, label %if.then, label %if.else, !dbg !6507

if.then:                                          ; preds = %sw.bb6
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6508
  %call7 = call i32 @get_bits(%struct.GetBitContext* %12, i32 2), !dbg !6509
  %idxprom8 = zext i32 %call7 to i64, !dbg !6510
  %arrayidx9 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom8, !dbg !6510
  store %struct.VLC* %arrayidx9, %struct.VLC** %vlc_tab, align 8, !dbg !6511
  store i32 0, i32* %i, align 4, !dbg !6512
  br label %for.cond10, !dbg !6513

for.cond10:                                       ; preds = %for.inc21, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !6514
  %14 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6516
  %used_quant_units11 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %14, i32 0, i32 3, !dbg !6517
  %15 = load i32, i32* %used_quant_units11, align 4, !dbg !6517
  %cmp12 = icmp slt i32 %13, %15, !dbg !6518
  br i1 %cmp12, label %for.body13, label %for.end23, !dbg !6519

for.body13:                                       ; preds = %for.cond10
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6520
  %17 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !6521
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %17, i32 0, i32 1, !dbg !6522
  %18 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !6522
  %19 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !6523
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %19, i32 0, i32 0, !dbg !6524
  %20 = load i32, i32* %bits, align 8, !dbg !6524
  store %struct.GetBitContext* %16, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6525
  store [2 x i16]* %18, [2 x i16]** %table.addr.i, align 8, !dbg !6525
  store i32 %20, i32* %bits.addr.i, align 4, !dbg !6525
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !6525
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6526
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %21, i32 0, i32 2, !dbg !6527
  %22 = load i32, i32* %index.i, align 8, !dbg !6527
  store i32 %22, i32* %re_index.i, align 4, !dbg !6438
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6528
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 4, !dbg !6529
  %24 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !6529
  store i32 %24, i32* %re_size_plus8.i, align 4, !dbg !6440
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6530
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %25, i32 0, i32 0, !dbg !6531
  %26 = load i8*, i8** %buffer.i, align 8, !dbg !6531
  %27 = load i32, i32* %re_index.i, align 4, !dbg !6532
  %shr.i = lshr i32 %27, 3, !dbg !6533
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !6534
  %add.ptr.i = getelementptr inbounds i8, i8* %26, i64 %idx.ext.i, !dbg !6534
  %28 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !6535
  %l.i = bitcast %union.unaligned_32* %28 to i32*, !dbg !6535
  %29 = load i32, i32* %l.i, align 1, !dbg !6535
  store i32 %29, i32* %x.addr.i.i, align 4, !dbg !6536
  %30 = load i32, i32* %x.addr.i.i, align 4, !dbg !6537
  %shl.i.i = shl i32 %30, 8, !dbg !6538
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !6539
  %31 = load i32, i32* %x.addr.i.i, align 4, !dbg !6540
  %shr.i.i = lshr i32 %31, 8, !dbg !6541
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !6542
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !6543
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !6544
  %32 = load i32, i32* %x.addr.i.i, align 4, !dbg !6545
  %shr3.i.i = lshr i32 %32, 16, !dbg !6546
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !6547
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !6548
  %33 = load i32, i32* %x.addr.i.i, align 4, !dbg !6549
  %shr6.i.i = lshr i32 %33, 16, !dbg !6550
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !6551
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !6552
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !6553
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !6554
  %34 = load i32, i32* %re_index.i, align 4, !dbg !6555
  %and.i = and i32 %34, 7, !dbg !6556
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !6557
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !6558
  %35 = load i32, i32* %re_cache.i, align 4, !dbg !6559
  %36 = load i32, i32* %bits.addr.i, align 4, !dbg !6560
  %conv.i = trunc i32 %36 to i8, !dbg !6560
  %call2.i = call i32 @NEG_USR32(i32 %35, i8 signext %conv.i) #9, !dbg !6561
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !6562
  %37 = load i32, i32* %index1.i, align 4, !dbg !6563
  %idxprom.i = zext i32 %37 to i64, !dbg !6564
  %38 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6564
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %38, i64 %idxprom.i, !dbg !6564
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !6564
  %39 = load i16, i16* %arrayidx3.i, align 2, !dbg !6564
  %conv4.i = sext i16 %39 to i32, !dbg !6564
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !6565
  %40 = load i32, i32* %index1.i, align 4, !dbg !6566
  %idxprom5.i = zext i32 %40 to i64, !dbg !6567
  %41 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6567
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %41, i64 %idxprom5.i, !dbg !6567
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !6567
  %42 = load i16, i16* %arrayidx7.i, align 2, !dbg !6567
  %conv8.i = sext i16 %42 to i32, !dbg !6567
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !6568
  %43 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6569
  %cmp.i = icmp sgt i32 %43, 1, !dbg !6570
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !6571

land.lhs.true.i:                                  ; preds = %for.body13
  %44 = load i32, i32* %n.i, align 4, !dbg !6572
  %cmp10.i = icmp slt i32 %44, 0, !dbg !6573
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !6574

if.then.i:                                        ; preds = %land.lhs.true.i
  %45 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6575
  %46 = load i32, i32* %re_index.i, align 4, !dbg !6576
  %47 = load i32, i32* %bits.addr.i, align 4, !dbg !6577
  %add.i = add i32 %46, %47, !dbg !6578
  %cmp12.i = icmp ugt i32 %45, %add.i, !dbg !6579
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !6580

cond.true.i:                                      ; preds = %if.then.i
  %48 = load i32, i32* %re_index.i, align 4, !dbg !6581
  %49 = load i32, i32* %bits.addr.i, align 4, !dbg !6582
  %add14.i = add i32 %48, %49, !dbg !6583
  br label %cond.end.i, !dbg !6584

cond.false.i:                                     ; preds = %if.then.i
  %50 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6585
  br label %cond.end.i, !dbg !6586

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %50, %cond.false.i ], !dbg !6587
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !6588
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6589
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %51, i32 0, i32 0, !dbg !6590
  %52 = load i8*, i8** %buffer15.i, align 8, !dbg !6590
  %53 = load i32, i32* %re_index.i, align 4, !dbg !6591
  %shr16.i = lshr i32 %53, 3, !dbg !6592
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !6593
  %add.ptr18.i = getelementptr inbounds i8, i8* %52, i64 %idx.ext17.i, !dbg !6593
  %54 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !6594
  %l19.i = bitcast %union.unaligned_32* %54 to i32*, !dbg !6594
  %55 = load i32, i32* %l19.i, align 1, !dbg !6594
  store i32 %55, i32* %x.addr.i81.i, align 4, !dbg !6595
  %56 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6596
  %shl.i82.i = shl i32 %56, 8, !dbg !6597
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !6598
  %57 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6599
  %shr.i84.i = lshr i32 %57, 8, !dbg !6600
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !6601
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !6602
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !6603
  %58 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6604
  %shr3.i88.i = lshr i32 %58, 16, !dbg !6605
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !6606
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !6607
  %59 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6608
  %shr6.i91.i = lshr i32 %59, 16, !dbg !6609
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !6610
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !6611
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !6612
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !6613
  %60 = load i32, i32* %re_index.i, align 4, !dbg !6614
  %and21.i = and i32 %60, 7, !dbg !6615
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !6616
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !6617
  %61 = load i32, i32* %n.i, align 4, !dbg !6618
  %sub.i = sub nsw i32 0, %61, !dbg !6619
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !6620
  %62 = load i32, i32* %re_cache.i, align 4, !dbg !6621
  %63 = load i32, i32* %nb_bits.i, align 4, !dbg !6622
  %conv23.i = trunc i32 %63 to i8, !dbg !6622
  %call24.i = call i32 @NEG_USR32(i32 %62, i8 signext %conv23.i) #9, !dbg !6623
  %64 = load i32, i32* %code.i, align 4, !dbg !6624
  %add25.i = add i32 %call24.i, %64, !dbg !6625
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !6626
  %65 = load i32, i32* %index1.i, align 4, !dbg !6627
  %idxprom26.i = zext i32 %65 to i64, !dbg !6628
  %66 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6628
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %66, i64 %idxprom26.i, !dbg !6628
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !6628
  %67 = load i16, i16* %arrayidx28.i, align 2, !dbg !6628
  %conv29.i = sext i16 %67 to i32, !dbg !6628
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !6629
  %68 = load i32, i32* %index1.i, align 4, !dbg !6630
  %idxprom30.i = zext i32 %68 to i64, !dbg !6631
  %69 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6631
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %69, i64 %idxprom30.i, !dbg !6631
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !6631
  %70 = load i16, i16* %arrayidx32.i, align 2, !dbg !6631
  %conv33.i = sext i16 %70 to i32, !dbg !6631
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !6632
  %71 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6633
  %cmp34.i = icmp sgt i32 %71, 2, !dbg !6634
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !6635

land.lhs.true36.i:                                ; preds = %cond.end.i
  %72 = load i32, i32* %n.i, align 4, !dbg !6636
  %cmp37.i = icmp slt i32 %72, 0, !dbg !6637
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !6638

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %73 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6639
  %74 = load i32, i32* %re_index.i, align 4, !dbg !6640
  %75 = load i32, i32* %nb_bits.i, align 4, !dbg !6641
  %add40.i = add i32 %74, %75, !dbg !6642
  %cmp41.i = icmp ugt i32 %73, %add40.i, !dbg !6643
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !6644

cond.true43.i:                                    ; preds = %if.then39.i
  %76 = load i32, i32* %re_index.i, align 4, !dbg !6645
  %77 = load i32, i32* %nb_bits.i, align 4, !dbg !6646
  %add44.i = add i32 %76, %77, !dbg !6647
  br label %cond.end46.i, !dbg !6648

cond.false45.i:                                   ; preds = %if.then39.i
  %78 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6649
  br label %cond.end46.i, !dbg !6650

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %78, %cond.false45.i ], !dbg !6651
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !6652
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6653
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %79, i32 0, i32 0, !dbg !6654
  %80 = load i8*, i8** %buffer48.i, align 8, !dbg !6654
  %81 = load i32, i32* %re_index.i, align 4, !dbg !6655
  %shr49.i = lshr i32 %81, 3, !dbg !6656
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !6657
  %add.ptr51.i = getelementptr inbounds i8, i8* %80, i64 %idx.ext50.i, !dbg !6657
  %82 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !6658
  %l52.i = bitcast %union.unaligned_32* %82 to i32*, !dbg !6658
  %83 = load i32, i32* %l52.i, align 1, !dbg !6658
  store i32 %83, i32* %x.addr.i96.i, align 4, !dbg !6659
  %84 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6660
  %shl.i97.i = shl i32 %84, 8, !dbg !6661
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !6662
  %85 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6663
  %shr.i99.i = lshr i32 %85, 8, !dbg !6664
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !6665
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !6666
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !6667
  %86 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6668
  %shr3.i103.i = lshr i32 %86, 16, !dbg !6669
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !6670
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !6671
  %87 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6672
  %shr6.i106.i = lshr i32 %87, 16, !dbg !6673
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !6674
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !6675
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !6676
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !6677
  %88 = load i32, i32* %re_index.i, align 4, !dbg !6678
  %and54.i = and i32 %88, 7, !dbg !6679
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !6680
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !6681
  %89 = load i32, i32* %n.i, align 4, !dbg !6682
  %sub56.i = sub nsw i32 0, %89, !dbg !6683
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !6684
  %90 = load i32, i32* %re_cache.i, align 4, !dbg !6685
  %91 = load i32, i32* %nb_bits.i, align 4, !dbg !6686
  %conv57.i = trunc i32 %91 to i8, !dbg !6686
  %call58.i = call i32 @NEG_USR32(i32 %90, i8 signext %conv57.i) #9, !dbg !6687
  %92 = load i32, i32* %code.i, align 4, !dbg !6688
  %add59.i = add i32 %call58.i, %92, !dbg !6689
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !6690
  %93 = load i32, i32* %index1.i, align 4, !dbg !6691
  %idxprom60.i = zext i32 %93 to i64, !dbg !6692
  %94 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6692
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %94, i64 %idxprom60.i, !dbg !6692
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !6692
  %95 = load i16, i16* %arrayidx62.i, align 2, !dbg !6692
  %conv63.i = sext i16 %95 to i32, !dbg !6692
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !6693
  %96 = load i32, i32* %index1.i, align 4, !dbg !6694
  %idxprom64.i = zext i32 %96 to i64, !dbg !6695
  %97 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6695
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %97, i64 %idxprom64.i, !dbg !6695
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !6695
  %98 = load i16, i16* %arrayidx66.i, align 2, !dbg !6695
  %conv67.i = sext i16 %98 to i32, !dbg !6695
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !6696
  br label %if.end.i, !dbg !6697

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !6698

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body13
  %99 = load i32, i32* %n.i, align 4, !dbg !6699
  %100 = load i32, i32* %re_cache.i, align 4, !dbg !6700
  %shl70.i = shl i32 %100, %99, !dbg !6700
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !6700
  %101 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6701
  %102 = load i32, i32* %re_index.i, align 4, !dbg !6702
  %103 = load i32, i32* %n.i, align 4, !dbg !6703
  %add71.i = add i32 %102, %103, !dbg !6704
  %cmp72.i = icmp ugt i32 %101, %add71.i, !dbg !6705
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !6706

cond.true74.i:                                    ; preds = %if.end68.i
  %104 = load i32, i32* %re_index.i, align 4, !dbg !6707
  %105 = load i32, i32* %n.i, align 4, !dbg !6708
  %add75.i = add i32 %104, %105, !dbg !6709
  br label %get_vlc2.exit, !dbg !6710

cond.false76.i:                                   ; preds = %if.end68.i
  %106 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6711
  br label %get_vlc2.exit, !dbg !6712

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %106, %cond.false76.i ], !dbg !6713
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !6714
  %107 = load i32, i32* %re_index.i, align 4, !dbg !6715
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6716
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %108, i32 0, i32 2, !dbg !6717
  store i32 %107, i32* %index80.i, align 8, !dbg !6718
  %109 = load i32, i32* %code.i, align 4, !dbg !6719
  store i32 %109, i32* %delta, align 4, !dbg !6720
  %110 = load i32, i32* %i, align 4, !dbg !6721
  %idxprom15 = sext i32 %110 to i64, !dbg !6722
  %111 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !6722
  %qu_sf_idx16 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %111, i32 0, i32 6, !dbg !6723
  %arrayidx17 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx16, i64 0, i64 %idxprom15, !dbg !6722
  %112 = load i32, i32* %arrayidx17, align 4, !dbg !6722
  %113 = load i32, i32* %delta, align 4, !dbg !6724
  %add = add nsw i32 %112, %113, !dbg !6725
  %and = and i32 %add, 63, !dbg !6726
  %114 = load i32, i32* %i, align 4, !dbg !6727
  %idxprom18 = sext i32 %114 to i64, !dbg !6728
  %115 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6728
  %qu_sf_idx19 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %115, i32 0, i32 6, !dbg !6729
  %arrayidx20 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx19, i64 0, i64 %idxprom18, !dbg !6728
  store i32 %and, i32* %arrayidx20, align 4, !dbg !6730
  br label %for.inc21, !dbg !6731

for.inc21:                                        ; preds = %get_vlc2.exit
  %116 = load i32, i32* %i, align 4, !dbg !6732
  %inc22 = add nsw i32 %116, 1, !dbg !6732
  store i32 %inc22, i32* %i, align 4, !dbg !6732
  br label %for.cond10, !dbg !6734, !llvm.loop !6735

for.end23:                                        ; preds = %for.cond10
  br label %if.end102, !dbg !6737

if.else:                                          ; preds = %sw.bb6
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6738
  %call24 = call i32 @get_bits(%struct.GetBitContext* %117, i32 2), !dbg !6739
  store i32 %call24, i32* %weight_idx, align 4, !dbg !6740
  %118 = load i32, i32* %weight_idx, align 4, !dbg !6741
  %cmp25 = icmp eq i32 %118, 3, !dbg !6742
  br i1 %cmp25, label %if.then26, label %if.else70, !dbg !6743

if.then26:                                        ; preds = %if.else
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6744
  %call27 = call i32 @get_bits(%struct.GetBitContext* %119, i32 6), !dbg !6745
  store i32 %call27, i32* %start_val, align 4, !dbg !6746
  %120 = load i32, i32* %start_val, align 4, !dbg !6747
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6748
  %call28 = call i32 @get_bits(%struct.GetBitContext* %121, i32 6), !dbg !6749
  %idxprom29 = zext i32 %call28 to i64, !dbg !6751
  %arrayidx30 = getelementptr inbounds [64 x [9 x i8]], [64 x [9 x i8]]* @atrac3p_sf_shapes, i64 0, i64 %idxprom29, !dbg !6751
  %arrayidx31 = getelementptr inbounds [9 x i8], [9 x i8]* %arrayidx30, i64 0, i64 0, !dbg !6751
  %122 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6752
  %qu_sf_idx32 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %122, i32 0, i32 6, !dbg !6753
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx32, i32 0, i32 0, !dbg !6754
  %123 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6755
  %used_quant_units33 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %123, i32 0, i32 3, !dbg !6756
  %124 = load i32, i32* %used_quant_units33, align 4, !dbg !6756
  call void @unpack_vq_shape(i32 %120, i8* %arrayidx31, i32* %arraydecay, i32 %124), !dbg !6757
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6759
  %call34 = call i32 @get_bits(%struct.GetBitContext* %125, i32 5), !dbg !6760
  store i32 %call34, i32* %num_long_vals, align 4, !dbg !6761
  %126 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6762
  %call35 = call i32 @get_bits(%struct.GetBitContext* %126, i32 2), !dbg !6763
  store i32 %call35, i32* %delta_bits, align 4, !dbg !6764
  %127 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6765
  %call36 = call i32 @get_bits(%struct.GetBitContext* %127, i32 4), !dbg !6766
  %sub = sub i32 %call36, 7, !dbg !6767
  store i32 %sub, i32* %min_val, align 4, !dbg !6768
  store i32 0, i32* %i, align 4, !dbg !6769
  br label %for.cond37, !dbg !6771

for.cond37:                                       ; preds = %for.inc50, %if.then26
  %128 = load i32, i32* %i, align 4, !dbg !6772
  %129 = load i32, i32* %num_long_vals, align 4, !dbg !6775
  %cmp38 = icmp slt i32 %128, %129, !dbg !6776
  br i1 %cmp38, label %for.body39, label %for.end52, !dbg !6777

for.body39:                                       ; preds = %for.cond37
  %130 = load i32, i32* %i, align 4, !dbg !6778
  %idxprom40 = sext i32 %130 to i64, !dbg !6779
  %131 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6779
  %qu_sf_idx41 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %131, i32 0, i32 6, !dbg !6780
  %arrayidx42 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx41, i64 0, i64 %idxprom40, !dbg !6779
  %132 = load i32, i32* %arrayidx42, align 4, !dbg !6779
  %133 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6781
  %call43 = call i32 @get_bits(%struct.GetBitContext* %133, i32 4), !dbg !6782
  %add44 = add i32 %132, %call43, !dbg !6783
  %sub45 = sub i32 %add44, 7, !dbg !6784
  %and46 = and i32 %sub45, 63, !dbg !6785
  %134 = load i32, i32* %i, align 4, !dbg !6786
  %idxprom47 = sext i32 %134 to i64, !dbg !6787
  %135 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6787
  %qu_sf_idx48 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %135, i32 0, i32 6, !dbg !6788
  %arrayidx49 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx48, i64 0, i64 %idxprom47, !dbg !6787
  store i32 %and46, i32* %arrayidx49, align 4, !dbg !6789
  br label %for.inc50, !dbg !6787

for.inc50:                                        ; preds = %for.body39
  %136 = load i32, i32* %i, align 4, !dbg !6790
  %inc51 = add nsw i32 %136, 1, !dbg !6790
  store i32 %inc51, i32* %i, align 4, !dbg !6790
  br label %for.cond37, !dbg !6792, !llvm.loop !6793

for.end52:                                        ; preds = %for.cond37
  %137 = load i32, i32* %num_long_vals, align 4, !dbg !6795
  store i32 %137, i32* %i, align 4, !dbg !6796
  br label %for.cond53, !dbg !6797

for.cond53:                                       ; preds = %for.inc67, %for.end52
  %138 = load i32, i32* %i, align 4, !dbg !6798
  %139 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6800
  %used_quant_units54 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %139, i32 0, i32 3, !dbg !6801
  %140 = load i32, i32* %used_quant_units54, align 4, !dbg !6801
  %cmp55 = icmp slt i32 %138, %140, !dbg !6802
  br i1 %cmp55, label %for.body56, label %for.end69, !dbg !6803

for.body56:                                       ; preds = %for.cond53
  %141 = load i32, i32* %i, align 4, !dbg !6804
  %idxprom57 = sext i32 %141 to i64, !dbg !6805
  %142 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6805
  %qu_sf_idx58 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %142, i32 0, i32 6, !dbg !6806
  %arrayidx59 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx58, i64 0, i64 %idxprom57, !dbg !6805
  %143 = load i32, i32* %arrayidx59, align 4, !dbg !6805
  %144 = load i32, i32* %min_val, align 4, !dbg !6807
  %add60 = add nsw i32 %143, %144, !dbg !6808
  %145 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6809
  %146 = load i32, i32* %delta_bits, align 4, !dbg !6810
  store %struct.GetBitContext* %145, %struct.GetBitContext** %s.addr.i273, align 8, !dbg !6811
  store i32 %146, i32* %n.addr.i, align 4, !dbg !6811
  %147 = load i32, i32* %n.addr.i, align 4, !dbg !6812
  %tobool.i = icmp ne i32 %147, 0, !dbg !6812
  br i1 %tobool.i, label %cond.true.i274, label %cond.false.i275, !dbg !6812

cond.true.i274:                                   ; preds = %for.body56
  %148 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i273, align 8, !dbg !6813
  %149 = load i32, i32* %n.addr.i, align 4, !dbg !6814
  %call.i = call i32 @get_bits(%struct.GetBitContext* %148, i32 %149) #9, !dbg !6815
  br label %get_bitsz.exit, !dbg !6816

cond.false.i275:                                  ; preds = %for.body56
  br label %get_bitsz.exit, !dbg !6817

get_bitsz.exit:                                   ; preds = %cond.true.i274, %cond.false.i275
  %cond.i276 = phi i32 [ %call.i, %cond.true.i274 ], [ 0, %cond.false.i275 ], !dbg !6818
  %add62 = add nsw i32 %add60, %cond.i276, !dbg !6819
  %and63 = and i32 %add62, 63, !dbg !6820
  %150 = load i32, i32* %i, align 4, !dbg !6821
  %idxprom64 = sext i32 %150 to i64, !dbg !6822
  %151 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6822
  %qu_sf_idx65 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %151, i32 0, i32 6, !dbg !6823
  %arrayidx66 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx65, i64 0, i64 %idxprom64, !dbg !6822
  store i32 %and63, i32* %arrayidx66, align 4, !dbg !6824
  br label %for.inc67, !dbg !6822

for.inc67:                                        ; preds = %get_bitsz.exit
  %152 = load i32, i32* %i, align 4, !dbg !6825
  %inc68 = add nsw i32 %152, 1, !dbg !6825
  store i32 %inc68, i32* %i, align 4, !dbg !6825
  br label %for.cond53, !dbg !6827, !llvm.loop !6828

for.end69:                                        ; preds = %for.cond53
  br label %if.end101, !dbg !6830

if.else70:                                        ; preds = %if.else
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6831
  %call71 = call i32 @get_bits(%struct.GetBitContext* %153, i32 5), !dbg !6832
  store i32 %call71, i32* %num_long_vals, align 4, !dbg !6833
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6834
  %call72 = call i32 @get_bits(%struct.GetBitContext* %154, i32 3), !dbg !6835
  store i32 %call72, i32* %delta_bits, align 4, !dbg !6836
  %155 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6837
  %call73 = call i32 @get_bits(%struct.GetBitContext* %155, i32 6), !dbg !6838
  store i32 %call73, i32* %min_val, align 4, !dbg !6839
  %156 = load i32, i32* %num_long_vals, align 4, !dbg !6840
  %157 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6842
  %used_quant_units74 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %157, i32 0, i32 3, !dbg !6843
  %158 = load i32, i32* %used_quant_units74, align 4, !dbg !6843
  %cmp75 = icmp sgt i32 %156, %158, !dbg !6844
  br i1 %cmp75, label %if.then77, label %lor.lhs.false, !dbg !6845

lor.lhs.false:                                    ; preds = %if.else70
  %159 = load i32, i32* %delta_bits, align 4, !dbg !6846
  %cmp76 = icmp eq i32 %159, 7, !dbg !6848
  br i1 %cmp76, label %if.then77, label %if.end, !dbg !6849

if.then77:                                        ; preds = %lor.lhs.false, %if.else70
  %160 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6850
  %161 = bitcast %struct.AVCodecContext* %160 to i8*, !dbg !6850
  call void (i8*, i32, i8*, ...) @av_log(i8* %161, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0)), !dbg !6852
  store i32 -1094995529, i32* %retval, align 4, !dbg !6853
  br label %return, !dbg !6853

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !6854
  br label %for.cond78, !dbg !6856

for.cond78:                                       ; preds = %for.inc85, %if.end
  %162 = load i32, i32* %i, align 4, !dbg !6857
  %163 = load i32, i32* %num_long_vals, align 4, !dbg !6860
  %cmp79 = icmp slt i32 %162, %163, !dbg !6861
  br i1 %cmp79, label %for.body80, label %for.end87, !dbg !6862

for.body80:                                       ; preds = %for.cond78
  %164 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6863
  %call81 = call i32 @get_bits(%struct.GetBitContext* %164, i32 6), !dbg !6864
  %165 = load i32, i32* %i, align 4, !dbg !6865
  %idxprom82 = sext i32 %165 to i64, !dbg !6866
  %166 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6866
  %qu_sf_idx83 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %166, i32 0, i32 6, !dbg !6867
  %arrayidx84 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx83, i64 0, i64 %idxprom82, !dbg !6866
  store i32 %call81, i32* %arrayidx84, align 4, !dbg !6868
  br label %for.inc85, !dbg !6866

for.inc85:                                        ; preds = %for.body80
  %167 = load i32, i32* %i, align 4, !dbg !6869
  %inc86 = add nsw i32 %167, 1, !dbg !6869
  store i32 %inc86, i32* %i, align 4, !dbg !6869
  br label %for.cond78, !dbg !6871, !llvm.loop !6872

for.end87:                                        ; preds = %for.cond78
  %168 = load i32, i32* %num_long_vals, align 4, !dbg !6874
  store i32 %168, i32* %i, align 4, !dbg !6875
  br label %for.cond88, !dbg !6876

for.cond88:                                       ; preds = %for.inc98, %for.end87
  %169 = load i32, i32* %i, align 4, !dbg !6877
  %170 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !6879
  %used_quant_units89 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %170, i32 0, i32 3, !dbg !6880
  %171 = load i32, i32* %used_quant_units89, align 4, !dbg !6880
  %cmp90 = icmp slt i32 %169, %171, !dbg !6881
  br i1 %cmp90, label %for.body91, label %for.end100, !dbg !6882

for.body91:                                       ; preds = %for.cond88
  %172 = load i32, i32* %min_val, align 4, !dbg !6883
  %173 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6884
  %174 = load i32, i32* %delta_bits, align 4, !dbg !6885
  store %struct.GetBitContext* %173, %struct.GetBitContext** %s.addr.i278, align 8, !dbg !6886
  store i32 %174, i32* %n.addr.i279, align 4, !dbg !6886
  %175 = load i32, i32* %n.addr.i279, align 4, !dbg !6887
  %tobool.i280 = icmp ne i32 %175, 0, !dbg !6887
  br i1 %tobool.i280, label %cond.true.i282, label %cond.false.i283, !dbg !6887

cond.true.i282:                                   ; preds = %for.body91
  %176 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i278, align 8, !dbg !6888
  %177 = load i32, i32* %n.addr.i279, align 4, !dbg !6889
  %call.i281 = call i32 @get_bits(%struct.GetBitContext* %176, i32 %177) #9, !dbg !6890
  br label %get_bitsz.exit286, !dbg !6891

cond.false.i283:                                  ; preds = %for.body91
  br label %get_bitsz.exit286, !dbg !6892

get_bitsz.exit286:                                ; preds = %cond.true.i282, %cond.false.i283
  %cond.i284 = phi i32 [ %call.i281, %cond.true.i282 ], [ 0, %cond.false.i283 ], !dbg !6893
  %add93 = add nsw i32 %172, %cond.i284, !dbg !6894
  %and94 = and i32 %add93, 63, !dbg !6895
  %178 = load i32, i32* %i, align 4, !dbg !6896
  %idxprom95 = sext i32 %178 to i64, !dbg !6897
  %179 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !6897
  %qu_sf_idx96 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %179, i32 0, i32 6, !dbg !6898
  %arrayidx97 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx96, i64 0, i64 %idxprom95, !dbg !6897
  store i32 %and94, i32* %arrayidx97, align 4, !dbg !6899
  br label %for.inc98, !dbg !6897

for.inc98:                                        ; preds = %get_bitsz.exit286
  %180 = load i32, i32* %i, align 4, !dbg !6900
  %inc99 = add nsw i32 %180, 1, !dbg !6900
  store i32 %inc99, i32* %i, align 4, !dbg !6900
  br label %for.cond88, !dbg !6902, !llvm.loop !6903

for.end100:                                       ; preds = %for.cond88
  br label %if.end101

if.end101:                                        ; preds = %for.end100, %for.end69
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %for.end23
  br label %sw.epilog, !dbg !6905

sw.bb103:                                         ; preds = %entry
  %181 = load i32, i32* %ch_num.addr, align 4, !dbg !6906
  %tobool104 = icmp ne i32 %181, 0, !dbg !6906
  br i1 %tobool104, label %if.then105, label %if.else146, !dbg !6907

if.then105:                                       ; preds = %sw.bb103
  %182 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6908
  %call106 = call i32 @get_bits(%struct.GetBitContext* %182, i32 2), !dbg !6909
  %idxprom107 = zext i32 %call106 to i64, !dbg !6910
  %arrayidx108 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom107, !dbg !6910
  store %struct.VLC* %arrayidx108, %struct.VLC** %vlc_tab, align 8, !dbg !6911
  %183 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6912
  %184 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !6913
  %table109 = getelementptr inbounds %struct.VLC, %struct.VLC* %184, i32 0, i32 1, !dbg !6914
  %185 = load [2 x i16]*, [2 x i16]** %table109, align 8, !dbg !6914
  %186 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !6915
  %bits110 = getelementptr inbounds %struct.VLC, %struct.VLC* %186, i32 0, i32 0, !dbg !6916
  %187 = load i32, i32* %bits110, align 8, !dbg !6916
  store %struct.GetBitContext* %183, %struct.GetBitContext** %s.addr.i290, align 8, !dbg !6917
  store [2 x i16]* %185, [2 x i16]** %table.addr.i291, align 8, !dbg !6917
  store i32 %187, i32* %bits.addr.i292, align 4, !dbg !6917
  store i32 1, i32* %max_depth.addr.i293, align 4, !dbg !6917
  %188 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i290, align 8, !dbg !6918
  %index.i301 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %188, i32 0, i32 2, !dbg !6919
  %189 = load i32, i32* %index.i301, align 8, !dbg !6919
  store i32 %189, i32* %re_index.i295, align 4, !dbg !6401
  %190 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i290, align 8, !dbg !6920
  %size_in_bits_plus8.i302 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %190, i32 0, i32 4, !dbg !6921
  %191 = load i32, i32* %size_in_bits_plus8.i302, align 8, !dbg !6921
  store i32 %191, i32* %re_size_plus8.i297, align 4, !dbg !6403
  %192 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i290, align 8, !dbg !6922
  %buffer.i303 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %192, i32 0, i32 0, !dbg !6923
  %193 = load i8*, i8** %buffer.i303, align 8, !dbg !6923
  %194 = load i32, i32* %re_index.i295, align 4, !dbg !6924
  %shr.i304 = lshr i32 %194, 3, !dbg !6925
  %idx.ext.i305 = zext i32 %shr.i304 to i64, !dbg !6926
  %add.ptr.i306 = getelementptr inbounds i8, i8* %193, i64 %idx.ext.i305, !dbg !6926
  %195 = bitcast i8* %add.ptr.i306 to %union.unaligned_32*, !dbg !6927
  %l.i307 = bitcast %union.unaligned_32* %195 to i32*, !dbg !6927
  %196 = load i32, i32* %l.i307, align 1, !dbg !6927
  store i32 %196, i32* %x.addr.i.i289, align 4, !dbg !6928
  %197 = load i32, i32* %x.addr.i.i289, align 4, !dbg !6929
  %shl.i.i308 = shl i32 %197, 8, !dbg !6930
  %and.i.i309 = and i32 %shl.i.i308, 65280, !dbg !6931
  %198 = load i32, i32* %x.addr.i.i289, align 4, !dbg !6932
  %shr.i.i310 = lshr i32 %198, 8, !dbg !6933
  %and1.i.i311 = and i32 %shr.i.i310, 255, !dbg !6934
  %or.i.i312 = or i32 %and.i.i309, %and1.i.i311, !dbg !6935
  %shl2.i.i313 = shl i32 %or.i.i312, 16, !dbg !6936
  %199 = load i32, i32* %x.addr.i.i289, align 4, !dbg !6937
  %shr3.i.i314 = lshr i32 %199, 16, !dbg !6938
  %shl4.i.i315 = shl i32 %shr3.i.i314, 8, !dbg !6939
  %and5.i.i316 = and i32 %shl4.i.i315, 65280, !dbg !6940
  %200 = load i32, i32* %x.addr.i.i289, align 4, !dbg !6941
  %shr6.i.i317 = lshr i32 %200, 16, !dbg !6942
  %shr7.i.i318 = lshr i32 %shr6.i.i317, 8, !dbg !6943
  %and8.i.i319 = and i32 %shr7.i.i318, 255, !dbg !6944
  %or9.i.i320 = or i32 %and5.i.i316, %and8.i.i319, !dbg !6945
  %or10.i.i321 = or i32 %shl2.i.i313, %or9.i.i320, !dbg !6946
  %201 = load i32, i32* %re_index.i295, align 4, !dbg !6947
  %and.i322 = and i32 %201, 7, !dbg !6948
  %shl.i323 = shl i32 %or10.i.i321, %and.i322, !dbg !6949
  store i32 %shl.i323, i32* %re_cache.i296, align 4, !dbg !6950
  %202 = load i32, i32* %re_cache.i296, align 4, !dbg !6951
  %203 = load i32, i32* %bits.addr.i292, align 4, !dbg !6952
  %conv.i324 = trunc i32 %203 to i8, !dbg !6952
  %call2.i325 = call i32 @NEG_USR32(i32 %202, i8 signext %conv.i324) #9, !dbg !6953
  store i32 %call2.i325, i32* %index1.i300, align 4, !dbg !6954
  %204 = load i32, i32* %index1.i300, align 4, !dbg !6955
  %idxprom.i326 = zext i32 %204 to i64, !dbg !6956
  %205 = load [2 x i16]*, [2 x i16]** %table.addr.i291, align 8, !dbg !6956
  %arrayidx.i327 = getelementptr inbounds [2 x i16], [2 x i16]* %205, i64 %idxprom.i326, !dbg !6956
  %arrayidx3.i328 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i327, i64 0, i64 0, !dbg !6956
  %206 = load i16, i16* %arrayidx3.i328, align 2, !dbg !6956
  %conv4.i329 = sext i16 %206 to i32, !dbg !6956
  store i32 %conv4.i329, i32* %code.i294, align 4, !dbg !6957
  %207 = load i32, i32* %index1.i300, align 4, !dbg !6958
  %idxprom5.i330 = zext i32 %207 to i64, !dbg !6959
  %208 = load [2 x i16]*, [2 x i16]** %table.addr.i291, align 8, !dbg !6959
  %arrayidx6.i331 = getelementptr inbounds [2 x i16], [2 x i16]* %208, i64 %idxprom5.i330, !dbg !6959
  %arrayidx7.i332 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i331, i64 0, i64 1, !dbg !6959
  %209 = load i16, i16* %arrayidx7.i332, align 2, !dbg !6959
  %conv8.i333 = sext i16 %209 to i32, !dbg !6959
  store i32 %conv8.i333, i32* %n.i298, align 4, !dbg !6960
  %210 = load i32, i32* %max_depth.addr.i293, align 4, !dbg !6961
  %cmp.i334 = icmp sgt i32 %210, 1, !dbg !6962
  br i1 %cmp.i334, label %land.lhs.true.i336, label %if.end68.i423, !dbg !6963

land.lhs.true.i336:                               ; preds = %if.then105
  %211 = load i32, i32* %n.i298, align 4, !dbg !6964
  %cmp10.i335 = icmp slt i32 %211, 0, !dbg !6965
  br i1 %cmp10.i335, label %if.then.i339, label %if.end68.i423, !dbg !6966

if.then.i339:                                     ; preds = %land.lhs.true.i336
  %212 = load i32, i32* %re_size_plus8.i297, align 4, !dbg !6967
  %213 = load i32, i32* %re_index.i295, align 4, !dbg !6968
  %214 = load i32, i32* %bits.addr.i292, align 4, !dbg !6969
  %add.i337 = add i32 %213, %214, !dbg !6970
  %cmp12.i338 = icmp ugt i32 %212, %add.i337, !dbg !6971
  br i1 %cmp12.i338, label %cond.true.i341, label %cond.false.i342, !dbg !6972

cond.true.i341:                                   ; preds = %if.then.i339
  %215 = load i32, i32* %re_index.i295, align 4, !dbg !6973
  %216 = load i32, i32* %bits.addr.i292, align 4, !dbg !6974
  %add14.i340 = add i32 %215, %216, !dbg !6975
  br label %cond.end.i378, !dbg !6976

cond.false.i342:                                  ; preds = %if.then.i339
  %217 = load i32, i32* %re_size_plus8.i297, align 4, !dbg !6977
  br label %cond.end.i378, !dbg !6978

cond.end.i378:                                    ; preds = %cond.false.i342, %cond.true.i341
  %cond.i343 = phi i32 [ %add14.i340, %cond.true.i341 ], [ %217, %cond.false.i342 ], !dbg !6979
  store i32 %cond.i343, i32* %re_index.i295, align 4, !dbg !6980
  %218 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i290, align 8, !dbg !6981
  %buffer15.i344 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %218, i32 0, i32 0, !dbg !6982
  %219 = load i8*, i8** %buffer15.i344, align 8, !dbg !6982
  %220 = load i32, i32* %re_index.i295, align 4, !dbg !6983
  %shr16.i345 = lshr i32 %220, 3, !dbg !6984
  %idx.ext17.i346 = zext i32 %shr16.i345 to i64, !dbg !6985
  %add.ptr18.i347 = getelementptr inbounds i8, i8* %219, i64 %idx.ext17.i346, !dbg !6985
  %221 = bitcast i8* %add.ptr18.i347 to %union.unaligned_32*, !dbg !6986
  %l19.i348 = bitcast %union.unaligned_32* %221 to i32*, !dbg !6986
  %222 = load i32, i32* %l19.i348, align 1, !dbg !6986
  store i32 %222, i32* %x.addr.i81.i288, align 4, !dbg !6987
  %223 = load i32, i32* %x.addr.i81.i288, align 4, !dbg !6988
  %shl.i82.i349 = shl i32 %223, 8, !dbg !6989
  %and.i83.i350 = and i32 %shl.i82.i349, 65280, !dbg !6990
  %224 = load i32, i32* %x.addr.i81.i288, align 4, !dbg !6991
  %shr.i84.i351 = lshr i32 %224, 8, !dbg !6992
  %and1.i85.i352 = and i32 %shr.i84.i351, 255, !dbg !6993
  %or.i86.i353 = or i32 %and.i83.i350, %and1.i85.i352, !dbg !6994
  %shl2.i87.i354 = shl i32 %or.i86.i353, 16, !dbg !6995
  %225 = load i32, i32* %x.addr.i81.i288, align 4, !dbg !6996
  %shr3.i88.i355 = lshr i32 %225, 16, !dbg !6997
  %shl4.i89.i356 = shl i32 %shr3.i88.i355, 8, !dbg !6998
  %and5.i90.i357 = and i32 %shl4.i89.i356, 65280, !dbg !6999
  %226 = load i32, i32* %x.addr.i81.i288, align 4, !dbg !7000
  %shr6.i91.i358 = lshr i32 %226, 16, !dbg !7001
  %shr7.i92.i359 = lshr i32 %shr6.i91.i358, 8, !dbg !7002
  %and8.i93.i360 = and i32 %shr7.i92.i359, 255, !dbg !7003
  %or9.i94.i361 = or i32 %and5.i90.i357, %and8.i93.i360, !dbg !7004
  %or10.i95.i362 = or i32 %shl2.i87.i354, %or9.i94.i361, !dbg !7005
  %227 = load i32, i32* %re_index.i295, align 4, !dbg !7006
  %and21.i363 = and i32 %227, 7, !dbg !7007
  %shl22.i364 = shl i32 %or10.i95.i362, %and21.i363, !dbg !7008
  store i32 %shl22.i364, i32* %re_cache.i296, align 4, !dbg !7009
  %228 = load i32, i32* %n.i298, align 4, !dbg !7010
  %sub.i365 = sub nsw i32 0, %228, !dbg !7011
  store i32 %sub.i365, i32* %nb_bits.i299, align 4, !dbg !7012
  %229 = load i32, i32* %re_cache.i296, align 4, !dbg !7013
  %230 = load i32, i32* %nb_bits.i299, align 4, !dbg !7014
  %conv23.i366 = trunc i32 %230 to i8, !dbg !7014
  %call24.i367 = call i32 @NEG_USR32(i32 %229, i8 signext %conv23.i366) #9, !dbg !7015
  %231 = load i32, i32* %code.i294, align 4, !dbg !7016
  %add25.i368 = add i32 %call24.i367, %231, !dbg !7017
  store i32 %add25.i368, i32* %index1.i300, align 4, !dbg !7018
  %232 = load i32, i32* %index1.i300, align 4, !dbg !7019
  %idxprom26.i369 = zext i32 %232 to i64, !dbg !7020
  %233 = load [2 x i16]*, [2 x i16]** %table.addr.i291, align 8, !dbg !7020
  %arrayidx27.i370 = getelementptr inbounds [2 x i16], [2 x i16]* %233, i64 %idxprom26.i369, !dbg !7020
  %arrayidx28.i371 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i370, i64 0, i64 0, !dbg !7020
  %234 = load i16, i16* %arrayidx28.i371, align 2, !dbg !7020
  %conv29.i372 = sext i16 %234 to i32, !dbg !7020
  store i32 %conv29.i372, i32* %code.i294, align 4, !dbg !7021
  %235 = load i32, i32* %index1.i300, align 4, !dbg !7022
  %idxprom30.i373 = zext i32 %235 to i64, !dbg !7023
  %236 = load [2 x i16]*, [2 x i16]** %table.addr.i291, align 8, !dbg !7023
  %arrayidx31.i374 = getelementptr inbounds [2 x i16], [2 x i16]* %236, i64 %idxprom30.i373, !dbg !7023
  %arrayidx32.i375 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i374, i64 0, i64 1, !dbg !7023
  %237 = load i16, i16* %arrayidx32.i375, align 2, !dbg !7023
  %conv33.i376 = sext i16 %237 to i32, !dbg !7023
  store i32 %conv33.i376, i32* %n.i298, align 4, !dbg !7024
  %238 = load i32, i32* %max_depth.addr.i293, align 4, !dbg !7025
  %cmp34.i377 = icmp sgt i32 %238, 2, !dbg !7026
  br i1 %cmp34.i377, label %land.lhs.true36.i380, label %if.end.i422, !dbg !7027

land.lhs.true36.i380:                             ; preds = %cond.end.i378
  %239 = load i32, i32* %n.i298, align 4, !dbg !7028
  %cmp37.i379 = icmp slt i32 %239, 0, !dbg !7029
  br i1 %cmp37.i379, label %if.then39.i383, label %if.end.i422, !dbg !7030

if.then39.i383:                                   ; preds = %land.lhs.true36.i380
  %240 = load i32, i32* %re_size_plus8.i297, align 4, !dbg !7031
  %241 = load i32, i32* %re_index.i295, align 4, !dbg !7032
  %242 = load i32, i32* %nb_bits.i299, align 4, !dbg !7033
  %add40.i381 = add i32 %241, %242, !dbg !7034
  %cmp41.i382 = icmp ugt i32 %240, %add40.i381, !dbg !7035
  br i1 %cmp41.i382, label %cond.true43.i385, label %cond.false45.i386, !dbg !7036

cond.true43.i385:                                 ; preds = %if.then39.i383
  %243 = load i32, i32* %re_index.i295, align 4, !dbg !7037
  %244 = load i32, i32* %nb_bits.i299, align 4, !dbg !7038
  %add44.i384 = add i32 %243, %244, !dbg !7039
  br label %cond.end46.i421, !dbg !7040

cond.false45.i386:                                ; preds = %if.then39.i383
  %245 = load i32, i32* %re_size_plus8.i297, align 4, !dbg !7041
  br label %cond.end46.i421, !dbg !7042

cond.end46.i421:                                  ; preds = %cond.false45.i386, %cond.true43.i385
  %cond47.i387 = phi i32 [ %add44.i384, %cond.true43.i385 ], [ %245, %cond.false45.i386 ], !dbg !7043
  store i32 %cond47.i387, i32* %re_index.i295, align 4, !dbg !7044
  %246 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i290, align 8, !dbg !7045
  %buffer48.i388 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %246, i32 0, i32 0, !dbg !7046
  %247 = load i8*, i8** %buffer48.i388, align 8, !dbg !7046
  %248 = load i32, i32* %re_index.i295, align 4, !dbg !7047
  %shr49.i389 = lshr i32 %248, 3, !dbg !7048
  %idx.ext50.i390 = zext i32 %shr49.i389 to i64, !dbg !7049
  %add.ptr51.i391 = getelementptr inbounds i8, i8* %247, i64 %idx.ext50.i390, !dbg !7049
  %249 = bitcast i8* %add.ptr51.i391 to %union.unaligned_32*, !dbg !7050
  %l52.i392 = bitcast %union.unaligned_32* %249 to i32*, !dbg !7050
  %250 = load i32, i32* %l52.i392, align 1, !dbg !7050
  store i32 %250, i32* %x.addr.i96.i287, align 4, !dbg !7051
  %251 = load i32, i32* %x.addr.i96.i287, align 4, !dbg !7052
  %shl.i97.i393 = shl i32 %251, 8, !dbg !7053
  %and.i98.i394 = and i32 %shl.i97.i393, 65280, !dbg !7054
  %252 = load i32, i32* %x.addr.i96.i287, align 4, !dbg !7055
  %shr.i99.i395 = lshr i32 %252, 8, !dbg !7056
  %and1.i100.i396 = and i32 %shr.i99.i395, 255, !dbg !7057
  %or.i101.i397 = or i32 %and.i98.i394, %and1.i100.i396, !dbg !7058
  %shl2.i102.i398 = shl i32 %or.i101.i397, 16, !dbg !7059
  %253 = load i32, i32* %x.addr.i96.i287, align 4, !dbg !7060
  %shr3.i103.i399 = lshr i32 %253, 16, !dbg !7061
  %shl4.i104.i400 = shl i32 %shr3.i103.i399, 8, !dbg !7062
  %and5.i105.i401 = and i32 %shl4.i104.i400, 65280, !dbg !7063
  %254 = load i32, i32* %x.addr.i96.i287, align 4, !dbg !7064
  %shr6.i106.i402 = lshr i32 %254, 16, !dbg !7065
  %shr7.i107.i403 = lshr i32 %shr6.i106.i402, 8, !dbg !7066
  %and8.i108.i404 = and i32 %shr7.i107.i403, 255, !dbg !7067
  %or9.i109.i405 = or i32 %and5.i105.i401, %and8.i108.i404, !dbg !7068
  %or10.i110.i406 = or i32 %shl2.i102.i398, %or9.i109.i405, !dbg !7069
  %255 = load i32, i32* %re_index.i295, align 4, !dbg !7070
  %and54.i407 = and i32 %255, 7, !dbg !7071
  %shl55.i408 = shl i32 %or10.i110.i406, %and54.i407, !dbg !7072
  store i32 %shl55.i408, i32* %re_cache.i296, align 4, !dbg !7073
  %256 = load i32, i32* %n.i298, align 4, !dbg !7074
  %sub56.i409 = sub nsw i32 0, %256, !dbg !7075
  store i32 %sub56.i409, i32* %nb_bits.i299, align 4, !dbg !7076
  %257 = load i32, i32* %re_cache.i296, align 4, !dbg !7077
  %258 = load i32, i32* %nb_bits.i299, align 4, !dbg !7078
  %conv57.i410 = trunc i32 %258 to i8, !dbg !7078
  %call58.i411 = call i32 @NEG_USR32(i32 %257, i8 signext %conv57.i410) #9, !dbg !7079
  %259 = load i32, i32* %code.i294, align 4, !dbg !7080
  %add59.i412 = add i32 %call58.i411, %259, !dbg !7081
  store i32 %add59.i412, i32* %index1.i300, align 4, !dbg !7082
  %260 = load i32, i32* %index1.i300, align 4, !dbg !7083
  %idxprom60.i413 = zext i32 %260 to i64, !dbg !7084
  %261 = load [2 x i16]*, [2 x i16]** %table.addr.i291, align 8, !dbg !7084
  %arrayidx61.i414 = getelementptr inbounds [2 x i16], [2 x i16]* %261, i64 %idxprom60.i413, !dbg !7084
  %arrayidx62.i415 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i414, i64 0, i64 0, !dbg !7084
  %262 = load i16, i16* %arrayidx62.i415, align 2, !dbg !7084
  %conv63.i416 = sext i16 %262 to i32, !dbg !7084
  store i32 %conv63.i416, i32* %code.i294, align 4, !dbg !7085
  %263 = load i32, i32* %index1.i300, align 4, !dbg !7086
  %idxprom64.i417 = zext i32 %263 to i64, !dbg !7087
  %264 = load [2 x i16]*, [2 x i16]** %table.addr.i291, align 8, !dbg !7087
  %arrayidx65.i418 = getelementptr inbounds [2 x i16], [2 x i16]* %264, i64 %idxprom64.i417, !dbg !7087
  %arrayidx66.i419 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i418, i64 0, i64 1, !dbg !7087
  %265 = load i16, i16* %arrayidx66.i419, align 2, !dbg !7087
  %conv67.i420 = sext i16 %265 to i32, !dbg !7087
  store i32 %conv67.i420, i32* %n.i298, align 4, !dbg !7088
  br label %if.end.i422, !dbg !7089

if.end.i422:                                      ; preds = %cond.end46.i421, %land.lhs.true36.i380, %cond.end.i378
  br label %if.end68.i423, !dbg !7090

if.end68.i423:                                    ; preds = %if.end.i422, %land.lhs.true.i336, %if.then105
  %266 = load i32, i32* %n.i298, align 4, !dbg !7091
  %267 = load i32, i32* %re_cache.i296, align 4, !dbg !7092
  %shl70.i424 = shl i32 %267, %266, !dbg !7092
  store i32 %shl70.i424, i32* %re_cache.i296, align 4, !dbg !7092
  %268 = load i32, i32* %re_size_plus8.i297, align 4, !dbg !7093
  %269 = load i32, i32* %re_index.i295, align 4, !dbg !7094
  %270 = load i32, i32* %n.i298, align 4, !dbg !7095
  %add71.i425 = add i32 %269, %270, !dbg !7096
  %cmp72.i426 = icmp ugt i32 %268, %add71.i425, !dbg !7097
  br i1 %cmp72.i426, label %cond.true74.i428, label %cond.false76.i429, !dbg !7098

cond.true74.i428:                                 ; preds = %if.end68.i423
  %271 = load i32, i32* %re_index.i295, align 4, !dbg !7099
  %272 = load i32, i32* %n.i298, align 4, !dbg !7100
  %add75.i427 = add i32 %271, %272, !dbg !7101
  br label %get_vlc2.exit432, !dbg !7102

cond.false76.i429:                                ; preds = %if.end68.i423
  %273 = load i32, i32* %re_size_plus8.i297, align 4, !dbg !7103
  br label %get_vlc2.exit432, !dbg !7104

get_vlc2.exit432:                                 ; preds = %cond.true74.i428, %cond.false76.i429
  %cond78.i430 = phi i32 [ %add75.i427, %cond.true74.i428 ], [ %273, %cond.false76.i429 ], !dbg !7105
  store i32 %cond78.i430, i32* %re_index.i295, align 4, !dbg !7106
  %274 = load i32, i32* %re_index.i295, align 4, !dbg !7107
  %275 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i290, align 8, !dbg !7108
  %index80.i431 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %275, i32 0, i32 2, !dbg !7109
  store i32 %274, i32* %index80.i431, align 8, !dbg !7110
  %276 = load i32, i32* %code.i294, align 4, !dbg !7111
  store i32 %276, i32* %delta, align 4, !dbg !7112
  %277 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !7113
  %qu_sf_idx112 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %277, i32 0, i32 6, !dbg !7114
  %arrayidx113 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx112, i64 0, i64 0, !dbg !7113
  %278 = load i32, i32* %arrayidx113, align 4, !dbg !7113
  %279 = load i32, i32* %delta, align 4, !dbg !7115
  %add114 = add nsw i32 %278, %279, !dbg !7116
  %and115 = and i32 %add114, 63, !dbg !7117
  %280 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7118
  %qu_sf_idx116 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %280, i32 0, i32 6, !dbg !7119
  %arrayidx117 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx116, i64 0, i64 0, !dbg !7118
  store i32 %and115, i32* %arrayidx117, align 4, !dbg !7120
  store i32 1, i32* %i, align 4, !dbg !7121
  br label %for.cond118, !dbg !7122

for.cond118:                                      ; preds = %for.inc143, %get_vlc2.exit432
  %281 = load i32, i32* %i, align 4, !dbg !7123
  %282 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !7125
  %used_quant_units119 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %282, i32 0, i32 3, !dbg !7126
  %283 = load i32, i32* %used_quant_units119, align 4, !dbg !7126
  %cmp120 = icmp slt i32 %281, %283, !dbg !7127
  br i1 %cmp120, label %for.body121, label %for.end145, !dbg !7128

for.body121:                                      ; preds = %for.cond118
  %284 = load i32, i32* %i, align 4, !dbg !7129
  %idxprom122 = sext i32 %284 to i64, !dbg !7130
  %285 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !7130
  %qu_sf_idx123 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %285, i32 0, i32 6, !dbg !7131
  %arrayidx124 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx123, i64 0, i64 %idxprom122, !dbg !7130
  %286 = load i32, i32* %arrayidx124, align 4, !dbg !7130
  %287 = load i32, i32* %i, align 4, !dbg !7132
  %sub125 = sub nsw i32 %287, 1, !dbg !7133
  %idxprom126 = sext i32 %sub125 to i64, !dbg !7134
  %288 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !7134
  %qu_sf_idx127 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %288, i32 0, i32 6, !dbg !7135
  %arrayidx128 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx127, i64 0, i64 %idxprom126, !dbg !7134
  %289 = load i32, i32* %arrayidx128, align 4, !dbg !7134
  %sub129 = sub nsw i32 %286, %289, !dbg !7136
  store i32 %sub129, i32* %diff, align 4, !dbg !7137
  %290 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7138
  %291 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7139
  %table130 = getelementptr inbounds %struct.VLC, %struct.VLC* %291, i32 0, i32 1, !dbg !7140
  %292 = load [2 x i16]*, [2 x i16]** %table130, align 8, !dbg !7140
  %293 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7141
  %bits131 = getelementptr inbounds %struct.VLC, %struct.VLC* %293, i32 0, i32 0, !dbg !7142
  %294 = load i32, i32* %bits131, align 8, !dbg !7142
  store %struct.GetBitContext* %290, %struct.GetBitContext** %s.addr.i436, align 8, !dbg !7143
  store [2 x i16]* %292, [2 x i16]** %table.addr.i437, align 8, !dbg !7143
  store i32 %294, i32* %bits.addr.i438, align 4, !dbg !7143
  store i32 1, i32* %max_depth.addr.i439, align 4, !dbg !7143
  %295 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i436, align 8, !dbg !7144
  %index.i447 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %295, i32 0, i32 2, !dbg !7145
  %296 = load i32, i32* %index.i447, align 8, !dbg !7145
  store i32 %296, i32* %re_index.i441, align 4, !dbg !6383
  %297 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i436, align 8, !dbg !7146
  %size_in_bits_plus8.i448 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %297, i32 0, i32 4, !dbg !7147
  %298 = load i32, i32* %size_in_bits_plus8.i448, align 8, !dbg !7147
  store i32 %298, i32* %re_size_plus8.i443, align 4, !dbg !6385
  %299 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i436, align 8, !dbg !7148
  %buffer.i449 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %299, i32 0, i32 0, !dbg !7149
  %300 = load i8*, i8** %buffer.i449, align 8, !dbg !7149
  %301 = load i32, i32* %re_index.i441, align 4, !dbg !7150
  %shr.i450 = lshr i32 %301, 3, !dbg !7151
  %idx.ext.i451 = zext i32 %shr.i450 to i64, !dbg !7152
  %add.ptr.i452 = getelementptr inbounds i8, i8* %300, i64 %idx.ext.i451, !dbg !7152
  %302 = bitcast i8* %add.ptr.i452 to %union.unaligned_32*, !dbg !7153
  %l.i453 = bitcast %union.unaligned_32* %302 to i32*, !dbg !7153
  %303 = load i32, i32* %l.i453, align 1, !dbg !7153
  store i32 %303, i32* %x.addr.i.i435, align 4, !dbg !7154
  %304 = load i32, i32* %x.addr.i.i435, align 4, !dbg !7155
  %shl.i.i454 = shl i32 %304, 8, !dbg !7156
  %and.i.i455 = and i32 %shl.i.i454, 65280, !dbg !7157
  %305 = load i32, i32* %x.addr.i.i435, align 4, !dbg !7158
  %shr.i.i456 = lshr i32 %305, 8, !dbg !7159
  %and1.i.i457 = and i32 %shr.i.i456, 255, !dbg !7160
  %or.i.i458 = or i32 %and.i.i455, %and1.i.i457, !dbg !7161
  %shl2.i.i459 = shl i32 %or.i.i458, 16, !dbg !7162
  %306 = load i32, i32* %x.addr.i.i435, align 4, !dbg !7163
  %shr3.i.i460 = lshr i32 %306, 16, !dbg !7164
  %shl4.i.i461 = shl i32 %shr3.i.i460, 8, !dbg !7165
  %and5.i.i462 = and i32 %shl4.i.i461, 65280, !dbg !7166
  %307 = load i32, i32* %x.addr.i.i435, align 4, !dbg !7167
  %shr6.i.i463 = lshr i32 %307, 16, !dbg !7168
  %shr7.i.i464 = lshr i32 %shr6.i.i463, 8, !dbg !7169
  %and8.i.i465 = and i32 %shr7.i.i464, 255, !dbg !7170
  %or9.i.i466 = or i32 %and5.i.i462, %and8.i.i465, !dbg !7171
  %or10.i.i467 = or i32 %shl2.i.i459, %or9.i.i466, !dbg !7172
  %308 = load i32, i32* %re_index.i441, align 4, !dbg !7173
  %and.i468 = and i32 %308, 7, !dbg !7174
  %shl.i469 = shl i32 %or10.i.i467, %and.i468, !dbg !7175
  store i32 %shl.i469, i32* %re_cache.i442, align 4, !dbg !7176
  %309 = load i32, i32* %re_cache.i442, align 4, !dbg !7177
  %310 = load i32, i32* %bits.addr.i438, align 4, !dbg !7178
  %conv.i470 = trunc i32 %310 to i8, !dbg !7178
  %call2.i471 = call i32 @NEG_USR32(i32 %309, i8 signext %conv.i470) #9, !dbg !7179
  store i32 %call2.i471, i32* %index1.i446, align 4, !dbg !7180
  %311 = load i32, i32* %index1.i446, align 4, !dbg !7181
  %idxprom.i472 = zext i32 %311 to i64, !dbg !7182
  %312 = load [2 x i16]*, [2 x i16]** %table.addr.i437, align 8, !dbg !7182
  %arrayidx.i473 = getelementptr inbounds [2 x i16], [2 x i16]* %312, i64 %idxprom.i472, !dbg !7182
  %arrayidx3.i474 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i473, i64 0, i64 0, !dbg !7182
  %313 = load i16, i16* %arrayidx3.i474, align 2, !dbg !7182
  %conv4.i475 = sext i16 %313 to i32, !dbg !7182
  store i32 %conv4.i475, i32* %code.i440, align 4, !dbg !7183
  %314 = load i32, i32* %index1.i446, align 4, !dbg !7184
  %idxprom5.i476 = zext i32 %314 to i64, !dbg !7185
  %315 = load [2 x i16]*, [2 x i16]** %table.addr.i437, align 8, !dbg !7185
  %arrayidx6.i477 = getelementptr inbounds [2 x i16], [2 x i16]* %315, i64 %idxprom5.i476, !dbg !7185
  %arrayidx7.i478 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i477, i64 0, i64 1, !dbg !7185
  %316 = load i16, i16* %arrayidx7.i478, align 2, !dbg !7185
  %conv8.i479 = sext i16 %316 to i32, !dbg !7185
  store i32 %conv8.i479, i32* %n.i444, align 4, !dbg !7186
  %317 = load i32, i32* %max_depth.addr.i439, align 4, !dbg !7187
  %cmp.i480 = icmp sgt i32 %317, 1, !dbg !7188
  br i1 %cmp.i480, label %land.lhs.true.i482, label %if.end68.i569, !dbg !7189

land.lhs.true.i482:                               ; preds = %for.body121
  %318 = load i32, i32* %n.i444, align 4, !dbg !7190
  %cmp10.i481 = icmp slt i32 %318, 0, !dbg !7191
  br i1 %cmp10.i481, label %if.then.i485, label %if.end68.i569, !dbg !7192

if.then.i485:                                     ; preds = %land.lhs.true.i482
  %319 = load i32, i32* %re_size_plus8.i443, align 4, !dbg !7193
  %320 = load i32, i32* %re_index.i441, align 4, !dbg !7194
  %321 = load i32, i32* %bits.addr.i438, align 4, !dbg !7195
  %add.i483 = add i32 %320, %321, !dbg !7196
  %cmp12.i484 = icmp ugt i32 %319, %add.i483, !dbg !7197
  br i1 %cmp12.i484, label %cond.true.i487, label %cond.false.i488, !dbg !7198

cond.true.i487:                                   ; preds = %if.then.i485
  %322 = load i32, i32* %re_index.i441, align 4, !dbg !7199
  %323 = load i32, i32* %bits.addr.i438, align 4, !dbg !7200
  %add14.i486 = add i32 %322, %323, !dbg !7201
  br label %cond.end.i524, !dbg !7202

cond.false.i488:                                  ; preds = %if.then.i485
  %324 = load i32, i32* %re_size_plus8.i443, align 4, !dbg !7203
  br label %cond.end.i524, !dbg !7204

cond.end.i524:                                    ; preds = %cond.false.i488, %cond.true.i487
  %cond.i489 = phi i32 [ %add14.i486, %cond.true.i487 ], [ %324, %cond.false.i488 ], !dbg !7205
  store i32 %cond.i489, i32* %re_index.i441, align 4, !dbg !7206
  %325 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i436, align 8, !dbg !7207
  %buffer15.i490 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %325, i32 0, i32 0, !dbg !7208
  %326 = load i8*, i8** %buffer15.i490, align 8, !dbg !7208
  %327 = load i32, i32* %re_index.i441, align 4, !dbg !7209
  %shr16.i491 = lshr i32 %327, 3, !dbg !7210
  %idx.ext17.i492 = zext i32 %shr16.i491 to i64, !dbg !7211
  %add.ptr18.i493 = getelementptr inbounds i8, i8* %326, i64 %idx.ext17.i492, !dbg !7211
  %328 = bitcast i8* %add.ptr18.i493 to %union.unaligned_32*, !dbg !7212
  %l19.i494 = bitcast %union.unaligned_32* %328 to i32*, !dbg !7212
  %329 = load i32, i32* %l19.i494, align 1, !dbg !7212
  store i32 %329, i32* %x.addr.i81.i434, align 4, !dbg !7213
  %330 = load i32, i32* %x.addr.i81.i434, align 4, !dbg !7214
  %shl.i82.i495 = shl i32 %330, 8, !dbg !7215
  %and.i83.i496 = and i32 %shl.i82.i495, 65280, !dbg !7216
  %331 = load i32, i32* %x.addr.i81.i434, align 4, !dbg !7217
  %shr.i84.i497 = lshr i32 %331, 8, !dbg !7218
  %and1.i85.i498 = and i32 %shr.i84.i497, 255, !dbg !7219
  %or.i86.i499 = or i32 %and.i83.i496, %and1.i85.i498, !dbg !7220
  %shl2.i87.i500 = shl i32 %or.i86.i499, 16, !dbg !7221
  %332 = load i32, i32* %x.addr.i81.i434, align 4, !dbg !7222
  %shr3.i88.i501 = lshr i32 %332, 16, !dbg !7223
  %shl4.i89.i502 = shl i32 %shr3.i88.i501, 8, !dbg !7224
  %and5.i90.i503 = and i32 %shl4.i89.i502, 65280, !dbg !7225
  %333 = load i32, i32* %x.addr.i81.i434, align 4, !dbg !7226
  %shr6.i91.i504 = lshr i32 %333, 16, !dbg !7227
  %shr7.i92.i505 = lshr i32 %shr6.i91.i504, 8, !dbg !7228
  %and8.i93.i506 = and i32 %shr7.i92.i505, 255, !dbg !7229
  %or9.i94.i507 = or i32 %and5.i90.i503, %and8.i93.i506, !dbg !7230
  %or10.i95.i508 = or i32 %shl2.i87.i500, %or9.i94.i507, !dbg !7231
  %334 = load i32, i32* %re_index.i441, align 4, !dbg !7232
  %and21.i509 = and i32 %334, 7, !dbg !7233
  %shl22.i510 = shl i32 %or10.i95.i508, %and21.i509, !dbg !7234
  store i32 %shl22.i510, i32* %re_cache.i442, align 4, !dbg !7235
  %335 = load i32, i32* %n.i444, align 4, !dbg !7236
  %sub.i511 = sub nsw i32 0, %335, !dbg !7237
  store i32 %sub.i511, i32* %nb_bits.i445, align 4, !dbg !7238
  %336 = load i32, i32* %re_cache.i442, align 4, !dbg !7239
  %337 = load i32, i32* %nb_bits.i445, align 4, !dbg !7240
  %conv23.i512 = trunc i32 %337 to i8, !dbg !7240
  %call24.i513 = call i32 @NEG_USR32(i32 %336, i8 signext %conv23.i512) #9, !dbg !7241
  %338 = load i32, i32* %code.i440, align 4, !dbg !7242
  %add25.i514 = add i32 %call24.i513, %338, !dbg !7243
  store i32 %add25.i514, i32* %index1.i446, align 4, !dbg !7244
  %339 = load i32, i32* %index1.i446, align 4, !dbg !7245
  %idxprom26.i515 = zext i32 %339 to i64, !dbg !7246
  %340 = load [2 x i16]*, [2 x i16]** %table.addr.i437, align 8, !dbg !7246
  %arrayidx27.i516 = getelementptr inbounds [2 x i16], [2 x i16]* %340, i64 %idxprom26.i515, !dbg !7246
  %arrayidx28.i517 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i516, i64 0, i64 0, !dbg !7246
  %341 = load i16, i16* %arrayidx28.i517, align 2, !dbg !7246
  %conv29.i518 = sext i16 %341 to i32, !dbg !7246
  store i32 %conv29.i518, i32* %code.i440, align 4, !dbg !7247
  %342 = load i32, i32* %index1.i446, align 4, !dbg !7248
  %idxprom30.i519 = zext i32 %342 to i64, !dbg !7249
  %343 = load [2 x i16]*, [2 x i16]** %table.addr.i437, align 8, !dbg !7249
  %arrayidx31.i520 = getelementptr inbounds [2 x i16], [2 x i16]* %343, i64 %idxprom30.i519, !dbg !7249
  %arrayidx32.i521 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i520, i64 0, i64 1, !dbg !7249
  %344 = load i16, i16* %arrayidx32.i521, align 2, !dbg !7249
  %conv33.i522 = sext i16 %344 to i32, !dbg !7249
  store i32 %conv33.i522, i32* %n.i444, align 4, !dbg !7250
  %345 = load i32, i32* %max_depth.addr.i439, align 4, !dbg !7251
  %cmp34.i523 = icmp sgt i32 %345, 2, !dbg !7252
  br i1 %cmp34.i523, label %land.lhs.true36.i526, label %if.end.i568, !dbg !7253

land.lhs.true36.i526:                             ; preds = %cond.end.i524
  %346 = load i32, i32* %n.i444, align 4, !dbg !7254
  %cmp37.i525 = icmp slt i32 %346, 0, !dbg !7255
  br i1 %cmp37.i525, label %if.then39.i529, label %if.end.i568, !dbg !7256

if.then39.i529:                                   ; preds = %land.lhs.true36.i526
  %347 = load i32, i32* %re_size_plus8.i443, align 4, !dbg !7257
  %348 = load i32, i32* %re_index.i441, align 4, !dbg !7258
  %349 = load i32, i32* %nb_bits.i445, align 4, !dbg !7259
  %add40.i527 = add i32 %348, %349, !dbg !7260
  %cmp41.i528 = icmp ugt i32 %347, %add40.i527, !dbg !7261
  br i1 %cmp41.i528, label %cond.true43.i531, label %cond.false45.i532, !dbg !7262

cond.true43.i531:                                 ; preds = %if.then39.i529
  %350 = load i32, i32* %re_index.i441, align 4, !dbg !7263
  %351 = load i32, i32* %nb_bits.i445, align 4, !dbg !7264
  %add44.i530 = add i32 %350, %351, !dbg !7265
  br label %cond.end46.i567, !dbg !7266

cond.false45.i532:                                ; preds = %if.then39.i529
  %352 = load i32, i32* %re_size_plus8.i443, align 4, !dbg !7267
  br label %cond.end46.i567, !dbg !7268

cond.end46.i567:                                  ; preds = %cond.false45.i532, %cond.true43.i531
  %cond47.i533 = phi i32 [ %add44.i530, %cond.true43.i531 ], [ %352, %cond.false45.i532 ], !dbg !7269
  store i32 %cond47.i533, i32* %re_index.i441, align 4, !dbg !7270
  %353 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i436, align 8, !dbg !7271
  %buffer48.i534 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %353, i32 0, i32 0, !dbg !7272
  %354 = load i8*, i8** %buffer48.i534, align 8, !dbg !7272
  %355 = load i32, i32* %re_index.i441, align 4, !dbg !7273
  %shr49.i535 = lshr i32 %355, 3, !dbg !7274
  %idx.ext50.i536 = zext i32 %shr49.i535 to i64, !dbg !7275
  %add.ptr51.i537 = getelementptr inbounds i8, i8* %354, i64 %idx.ext50.i536, !dbg !7275
  %356 = bitcast i8* %add.ptr51.i537 to %union.unaligned_32*, !dbg !7276
  %l52.i538 = bitcast %union.unaligned_32* %356 to i32*, !dbg !7276
  %357 = load i32, i32* %l52.i538, align 1, !dbg !7276
  store i32 %357, i32* %x.addr.i96.i433, align 4, !dbg !7277
  %358 = load i32, i32* %x.addr.i96.i433, align 4, !dbg !7278
  %shl.i97.i539 = shl i32 %358, 8, !dbg !7279
  %and.i98.i540 = and i32 %shl.i97.i539, 65280, !dbg !7280
  %359 = load i32, i32* %x.addr.i96.i433, align 4, !dbg !7281
  %shr.i99.i541 = lshr i32 %359, 8, !dbg !7282
  %and1.i100.i542 = and i32 %shr.i99.i541, 255, !dbg !7283
  %or.i101.i543 = or i32 %and.i98.i540, %and1.i100.i542, !dbg !7284
  %shl2.i102.i544 = shl i32 %or.i101.i543, 16, !dbg !7285
  %360 = load i32, i32* %x.addr.i96.i433, align 4, !dbg !7286
  %shr3.i103.i545 = lshr i32 %360, 16, !dbg !7287
  %shl4.i104.i546 = shl i32 %shr3.i103.i545, 8, !dbg !7288
  %and5.i105.i547 = and i32 %shl4.i104.i546, 65280, !dbg !7289
  %361 = load i32, i32* %x.addr.i96.i433, align 4, !dbg !7290
  %shr6.i106.i548 = lshr i32 %361, 16, !dbg !7291
  %shr7.i107.i549 = lshr i32 %shr6.i106.i548, 8, !dbg !7292
  %and8.i108.i550 = and i32 %shr7.i107.i549, 255, !dbg !7293
  %or9.i109.i551 = or i32 %and5.i105.i547, %and8.i108.i550, !dbg !7294
  %or10.i110.i552 = or i32 %shl2.i102.i544, %or9.i109.i551, !dbg !7295
  %362 = load i32, i32* %re_index.i441, align 4, !dbg !7296
  %and54.i553 = and i32 %362, 7, !dbg !7297
  %shl55.i554 = shl i32 %or10.i110.i552, %and54.i553, !dbg !7298
  store i32 %shl55.i554, i32* %re_cache.i442, align 4, !dbg !7299
  %363 = load i32, i32* %n.i444, align 4, !dbg !7300
  %sub56.i555 = sub nsw i32 0, %363, !dbg !7301
  store i32 %sub56.i555, i32* %nb_bits.i445, align 4, !dbg !7302
  %364 = load i32, i32* %re_cache.i442, align 4, !dbg !7303
  %365 = load i32, i32* %nb_bits.i445, align 4, !dbg !7304
  %conv57.i556 = trunc i32 %365 to i8, !dbg !7304
  %call58.i557 = call i32 @NEG_USR32(i32 %364, i8 signext %conv57.i556) #9, !dbg !7305
  %366 = load i32, i32* %code.i440, align 4, !dbg !7306
  %add59.i558 = add i32 %call58.i557, %366, !dbg !7307
  store i32 %add59.i558, i32* %index1.i446, align 4, !dbg !7308
  %367 = load i32, i32* %index1.i446, align 4, !dbg !7309
  %idxprom60.i559 = zext i32 %367 to i64, !dbg !7310
  %368 = load [2 x i16]*, [2 x i16]** %table.addr.i437, align 8, !dbg !7310
  %arrayidx61.i560 = getelementptr inbounds [2 x i16], [2 x i16]* %368, i64 %idxprom60.i559, !dbg !7310
  %arrayidx62.i561 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i560, i64 0, i64 0, !dbg !7310
  %369 = load i16, i16* %arrayidx62.i561, align 2, !dbg !7310
  %conv63.i562 = sext i16 %369 to i32, !dbg !7310
  store i32 %conv63.i562, i32* %code.i440, align 4, !dbg !7311
  %370 = load i32, i32* %index1.i446, align 4, !dbg !7312
  %idxprom64.i563 = zext i32 %370 to i64, !dbg !7313
  %371 = load [2 x i16]*, [2 x i16]** %table.addr.i437, align 8, !dbg !7313
  %arrayidx65.i564 = getelementptr inbounds [2 x i16], [2 x i16]* %371, i64 %idxprom64.i563, !dbg !7313
  %arrayidx66.i565 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i564, i64 0, i64 1, !dbg !7313
  %372 = load i16, i16* %arrayidx66.i565, align 2, !dbg !7313
  %conv67.i566 = sext i16 %372 to i32, !dbg !7313
  store i32 %conv67.i566, i32* %n.i444, align 4, !dbg !7314
  br label %if.end.i568, !dbg !7315

if.end.i568:                                      ; preds = %cond.end46.i567, %land.lhs.true36.i526, %cond.end.i524
  br label %if.end68.i569, !dbg !7316

if.end68.i569:                                    ; preds = %if.end.i568, %land.lhs.true.i482, %for.body121
  %373 = load i32, i32* %n.i444, align 4, !dbg !7317
  %374 = load i32, i32* %re_cache.i442, align 4, !dbg !7318
  %shl70.i570 = shl i32 %374, %373, !dbg !7318
  store i32 %shl70.i570, i32* %re_cache.i442, align 4, !dbg !7318
  %375 = load i32, i32* %re_size_plus8.i443, align 4, !dbg !7319
  %376 = load i32, i32* %re_index.i441, align 4, !dbg !7320
  %377 = load i32, i32* %n.i444, align 4, !dbg !7321
  %add71.i571 = add i32 %376, %377, !dbg !7322
  %cmp72.i572 = icmp ugt i32 %375, %add71.i571, !dbg !7323
  br i1 %cmp72.i572, label %cond.true74.i574, label %cond.false76.i575, !dbg !7324

cond.true74.i574:                                 ; preds = %if.end68.i569
  %378 = load i32, i32* %re_index.i441, align 4, !dbg !7325
  %379 = load i32, i32* %n.i444, align 4, !dbg !7326
  %add75.i573 = add i32 %378, %379, !dbg !7327
  br label %get_vlc2.exit578, !dbg !7328

cond.false76.i575:                                ; preds = %if.end68.i569
  %380 = load i32, i32* %re_size_plus8.i443, align 4, !dbg !7329
  br label %get_vlc2.exit578, !dbg !7330

get_vlc2.exit578:                                 ; preds = %cond.true74.i574, %cond.false76.i575
  %cond78.i576 = phi i32 [ %add75.i573, %cond.true74.i574 ], [ %380, %cond.false76.i575 ], !dbg !7331
  store i32 %cond78.i576, i32* %re_index.i441, align 4, !dbg !7332
  %381 = load i32, i32* %re_index.i441, align 4, !dbg !7333
  %382 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i436, align 8, !dbg !7334
  %index80.i577 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %382, i32 0, i32 2, !dbg !7335
  store i32 %381, i32* %index80.i577, align 8, !dbg !7336
  %383 = load i32, i32* %code.i440, align 4, !dbg !7337
  store i32 %383, i32* %delta, align 4, !dbg !7338
  %384 = load i32, i32* %i, align 4, !dbg !7339
  %sub133 = sub nsw i32 %384, 1, !dbg !7340
  %idxprom134 = sext i32 %sub133 to i64, !dbg !7341
  %385 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7341
  %qu_sf_idx135 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %385, i32 0, i32 6, !dbg !7342
  %arrayidx136 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx135, i64 0, i64 %idxprom134, !dbg !7341
  %386 = load i32, i32* %arrayidx136, align 4, !dbg !7341
  %387 = load i32, i32* %diff, align 4, !dbg !7343
  %add137 = add nsw i32 %386, %387, !dbg !7344
  %388 = load i32, i32* %delta, align 4, !dbg !7345
  %add138 = add nsw i32 %add137, %388, !dbg !7346
  %and139 = and i32 %add138, 63, !dbg !7347
  %389 = load i32, i32* %i, align 4, !dbg !7348
  %idxprom140 = sext i32 %389 to i64, !dbg !7349
  %390 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7349
  %qu_sf_idx141 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %390, i32 0, i32 6, !dbg !7350
  %arrayidx142 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx141, i64 0, i64 %idxprom140, !dbg !7349
  store i32 %and139, i32* %arrayidx142, align 4, !dbg !7351
  br label %for.inc143, !dbg !7352

for.inc143:                                       ; preds = %get_vlc2.exit578
  %391 = load i32, i32* %i, align 4, !dbg !7353
  %inc144 = add nsw i32 %391, 1, !dbg !7353
  store i32 %inc144, i32* %i, align 4, !dbg !7353
  br label %for.cond118, !dbg !7355, !llvm.loop !7356

for.end145:                                       ; preds = %for.cond118
  br label %if.end178, !dbg !7358

if.else146:                                       ; preds = %sw.bb103
  %392 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7359
  %call147 = call i32 @get_bits(%struct.GetBitContext* %392, i32 2), !dbg !7360
  %add148 = add i32 %call147, 4, !dbg !7361
  %idxprom149 = zext i32 %add148 to i64, !dbg !7362
  %arrayidx150 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom149, !dbg !7362
  store %struct.VLC* %arrayidx150, %struct.VLC** %vlc_tab, align 8, !dbg !7363
  %393 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7364
  %call151 = call i32 @get_bits(%struct.GetBitContext* %393, i32 6), !dbg !7365
  store i32 %call151, i32* %start_val, align 4, !dbg !7366
  %394 = load i32, i32* %start_val, align 4, !dbg !7367
  %395 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7368
  %call152 = call i32 @get_bits(%struct.GetBitContext* %395, i32 6), !dbg !7369
  %idxprom153 = zext i32 %call152 to i64, !dbg !7371
  %arrayidx154 = getelementptr inbounds [64 x [9 x i8]], [64 x [9 x i8]]* @atrac3p_sf_shapes, i64 0, i64 %idxprom153, !dbg !7371
  %arrayidx155 = getelementptr inbounds [9 x i8], [9 x i8]* %arrayidx154, i64 0, i64 0, !dbg !7371
  %396 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7372
  %qu_sf_idx156 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %396, i32 0, i32 6, !dbg !7373
  %arraydecay157 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx156, i32 0, i32 0, !dbg !7374
  %397 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !7375
  %used_quant_units158 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %397, i32 0, i32 3, !dbg !7376
  %398 = load i32, i32* %used_quant_units158, align 4, !dbg !7376
  call void @unpack_vq_shape(i32 %394, i8* %arrayidx155, i32* %arraydecay157, i32 %398), !dbg !7377
  store i32 0, i32* %i, align 4, !dbg !7379
  br label %for.cond159, !dbg !7380

for.cond159:                                      ; preds = %for.inc175, %if.else146
  %399 = load i32, i32* %i, align 4, !dbg !7381
  %400 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !7383
  %used_quant_units160 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %400, i32 0, i32 3, !dbg !7384
  %401 = load i32, i32* %used_quant_units160, align 4, !dbg !7384
  %cmp161 = icmp slt i32 %399, %401, !dbg !7385
  br i1 %cmp161, label %for.body162, label %for.end177, !dbg !7386

for.body162:                                      ; preds = %for.cond159
  %402 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7387
  %403 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7388
  %table163 = getelementptr inbounds %struct.VLC, %struct.VLC* %403, i32 0, i32 1, !dbg !7389
  %404 = load [2 x i16]*, [2 x i16]** %table163, align 8, !dbg !7389
  %405 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7390
  %bits164 = getelementptr inbounds %struct.VLC, %struct.VLC* %405, i32 0, i32 0, !dbg !7391
  %406 = load i32, i32* %bits164, align 8, !dbg !7391
  store %struct.GetBitContext* %402, %struct.GetBitContext** %s.addr.i582, align 8, !dbg !7392
  store [2 x i16]* %404, [2 x i16]** %table.addr.i583, align 8, !dbg !7392
  store i32 %406, i32* %bits.addr.i584, align 4, !dbg !7392
  store i32 1, i32* %max_depth.addr.i585, align 4, !dbg !7392
  %407 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i582, align 8, !dbg !7393
  %index.i593 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %407, i32 0, i32 2, !dbg !7394
  %408 = load i32, i32* %index.i593, align 8, !dbg !7394
  store i32 %408, i32* %re_index.i587, align 4, !dbg !6361
  %409 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i582, align 8, !dbg !7395
  %size_in_bits_plus8.i594 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %409, i32 0, i32 4, !dbg !7396
  %410 = load i32, i32* %size_in_bits_plus8.i594, align 8, !dbg !7396
  store i32 %410, i32* %re_size_plus8.i589, align 4, !dbg !6363
  %411 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i582, align 8, !dbg !7397
  %buffer.i595 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %411, i32 0, i32 0, !dbg !7398
  %412 = load i8*, i8** %buffer.i595, align 8, !dbg !7398
  %413 = load i32, i32* %re_index.i587, align 4, !dbg !7399
  %shr.i596 = lshr i32 %413, 3, !dbg !7400
  %idx.ext.i597 = zext i32 %shr.i596 to i64, !dbg !7401
  %add.ptr.i598 = getelementptr inbounds i8, i8* %412, i64 %idx.ext.i597, !dbg !7401
  %414 = bitcast i8* %add.ptr.i598 to %union.unaligned_32*, !dbg !7402
  %l.i599 = bitcast %union.unaligned_32* %414 to i32*, !dbg !7402
  %415 = load i32, i32* %l.i599, align 1, !dbg !7402
  store i32 %415, i32* %x.addr.i.i581, align 4, !dbg !7403
  %416 = load i32, i32* %x.addr.i.i581, align 4, !dbg !7404
  %shl.i.i600 = shl i32 %416, 8, !dbg !7405
  %and.i.i601 = and i32 %shl.i.i600, 65280, !dbg !7406
  %417 = load i32, i32* %x.addr.i.i581, align 4, !dbg !7407
  %shr.i.i602 = lshr i32 %417, 8, !dbg !7408
  %and1.i.i603 = and i32 %shr.i.i602, 255, !dbg !7409
  %or.i.i604 = or i32 %and.i.i601, %and1.i.i603, !dbg !7410
  %shl2.i.i605 = shl i32 %or.i.i604, 16, !dbg !7411
  %418 = load i32, i32* %x.addr.i.i581, align 4, !dbg !7412
  %shr3.i.i606 = lshr i32 %418, 16, !dbg !7413
  %shl4.i.i607 = shl i32 %shr3.i.i606, 8, !dbg !7414
  %and5.i.i608 = and i32 %shl4.i.i607, 65280, !dbg !7415
  %419 = load i32, i32* %x.addr.i.i581, align 4, !dbg !7416
  %shr6.i.i609 = lshr i32 %419, 16, !dbg !7417
  %shr7.i.i610 = lshr i32 %shr6.i.i609, 8, !dbg !7418
  %and8.i.i611 = and i32 %shr7.i.i610, 255, !dbg !7419
  %or9.i.i612 = or i32 %and5.i.i608, %and8.i.i611, !dbg !7420
  %or10.i.i613 = or i32 %shl2.i.i605, %or9.i.i612, !dbg !7421
  %420 = load i32, i32* %re_index.i587, align 4, !dbg !7422
  %and.i614 = and i32 %420, 7, !dbg !7423
  %shl.i615 = shl i32 %or10.i.i613, %and.i614, !dbg !7424
  store i32 %shl.i615, i32* %re_cache.i588, align 4, !dbg !7425
  %421 = load i32, i32* %re_cache.i588, align 4, !dbg !7426
  %422 = load i32, i32* %bits.addr.i584, align 4, !dbg !7427
  %conv.i616 = trunc i32 %422 to i8, !dbg !7427
  %call2.i617 = call i32 @NEG_USR32(i32 %421, i8 signext %conv.i616) #9, !dbg !7428
  store i32 %call2.i617, i32* %index1.i592, align 4, !dbg !7429
  %423 = load i32, i32* %index1.i592, align 4, !dbg !7430
  %idxprom.i618 = zext i32 %423 to i64, !dbg !7431
  %424 = load [2 x i16]*, [2 x i16]** %table.addr.i583, align 8, !dbg !7431
  %arrayidx.i619 = getelementptr inbounds [2 x i16], [2 x i16]* %424, i64 %idxprom.i618, !dbg !7431
  %arrayidx3.i620 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i619, i64 0, i64 0, !dbg !7431
  %425 = load i16, i16* %arrayidx3.i620, align 2, !dbg !7431
  %conv4.i621 = sext i16 %425 to i32, !dbg !7431
  store i32 %conv4.i621, i32* %code.i586, align 4, !dbg !7432
  %426 = load i32, i32* %index1.i592, align 4, !dbg !7433
  %idxprom5.i622 = zext i32 %426 to i64, !dbg !7434
  %427 = load [2 x i16]*, [2 x i16]** %table.addr.i583, align 8, !dbg !7434
  %arrayidx6.i623 = getelementptr inbounds [2 x i16], [2 x i16]* %427, i64 %idxprom5.i622, !dbg !7434
  %arrayidx7.i624 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i623, i64 0, i64 1, !dbg !7434
  %428 = load i16, i16* %arrayidx7.i624, align 2, !dbg !7434
  %conv8.i625 = sext i16 %428 to i32, !dbg !7434
  store i32 %conv8.i625, i32* %n.i590, align 4, !dbg !7435
  %429 = load i32, i32* %max_depth.addr.i585, align 4, !dbg !7436
  %cmp.i626 = icmp sgt i32 %429, 1, !dbg !7437
  br i1 %cmp.i626, label %land.lhs.true.i628, label %if.end68.i715, !dbg !7438

land.lhs.true.i628:                               ; preds = %for.body162
  %430 = load i32, i32* %n.i590, align 4, !dbg !7439
  %cmp10.i627 = icmp slt i32 %430, 0, !dbg !7440
  br i1 %cmp10.i627, label %if.then.i631, label %if.end68.i715, !dbg !7441

if.then.i631:                                     ; preds = %land.lhs.true.i628
  %431 = load i32, i32* %re_size_plus8.i589, align 4, !dbg !7442
  %432 = load i32, i32* %re_index.i587, align 4, !dbg !7443
  %433 = load i32, i32* %bits.addr.i584, align 4, !dbg !7444
  %add.i629 = add i32 %432, %433, !dbg !7445
  %cmp12.i630 = icmp ugt i32 %431, %add.i629, !dbg !7446
  br i1 %cmp12.i630, label %cond.true.i633, label %cond.false.i634, !dbg !7447

cond.true.i633:                                   ; preds = %if.then.i631
  %434 = load i32, i32* %re_index.i587, align 4, !dbg !7448
  %435 = load i32, i32* %bits.addr.i584, align 4, !dbg !7449
  %add14.i632 = add i32 %434, %435, !dbg !7450
  br label %cond.end.i670, !dbg !7451

cond.false.i634:                                  ; preds = %if.then.i631
  %436 = load i32, i32* %re_size_plus8.i589, align 4, !dbg !7452
  br label %cond.end.i670, !dbg !7453

cond.end.i670:                                    ; preds = %cond.false.i634, %cond.true.i633
  %cond.i635 = phi i32 [ %add14.i632, %cond.true.i633 ], [ %436, %cond.false.i634 ], !dbg !7454
  store i32 %cond.i635, i32* %re_index.i587, align 4, !dbg !7455
  %437 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i582, align 8, !dbg !7456
  %buffer15.i636 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %437, i32 0, i32 0, !dbg !7457
  %438 = load i8*, i8** %buffer15.i636, align 8, !dbg !7457
  %439 = load i32, i32* %re_index.i587, align 4, !dbg !7458
  %shr16.i637 = lshr i32 %439, 3, !dbg !7459
  %idx.ext17.i638 = zext i32 %shr16.i637 to i64, !dbg !7460
  %add.ptr18.i639 = getelementptr inbounds i8, i8* %438, i64 %idx.ext17.i638, !dbg !7460
  %440 = bitcast i8* %add.ptr18.i639 to %union.unaligned_32*, !dbg !7461
  %l19.i640 = bitcast %union.unaligned_32* %440 to i32*, !dbg !7461
  %441 = load i32, i32* %l19.i640, align 1, !dbg !7461
  store i32 %441, i32* %x.addr.i81.i580, align 4, !dbg !7462
  %442 = load i32, i32* %x.addr.i81.i580, align 4, !dbg !7463
  %shl.i82.i641 = shl i32 %442, 8, !dbg !7464
  %and.i83.i642 = and i32 %shl.i82.i641, 65280, !dbg !7465
  %443 = load i32, i32* %x.addr.i81.i580, align 4, !dbg !7466
  %shr.i84.i643 = lshr i32 %443, 8, !dbg !7467
  %and1.i85.i644 = and i32 %shr.i84.i643, 255, !dbg !7468
  %or.i86.i645 = or i32 %and.i83.i642, %and1.i85.i644, !dbg !7469
  %shl2.i87.i646 = shl i32 %or.i86.i645, 16, !dbg !7470
  %444 = load i32, i32* %x.addr.i81.i580, align 4, !dbg !7471
  %shr3.i88.i647 = lshr i32 %444, 16, !dbg !7472
  %shl4.i89.i648 = shl i32 %shr3.i88.i647, 8, !dbg !7473
  %and5.i90.i649 = and i32 %shl4.i89.i648, 65280, !dbg !7474
  %445 = load i32, i32* %x.addr.i81.i580, align 4, !dbg !7475
  %shr6.i91.i650 = lshr i32 %445, 16, !dbg !7476
  %shr7.i92.i651 = lshr i32 %shr6.i91.i650, 8, !dbg !7477
  %and8.i93.i652 = and i32 %shr7.i92.i651, 255, !dbg !7478
  %or9.i94.i653 = or i32 %and5.i90.i649, %and8.i93.i652, !dbg !7479
  %or10.i95.i654 = or i32 %shl2.i87.i646, %or9.i94.i653, !dbg !7480
  %446 = load i32, i32* %re_index.i587, align 4, !dbg !7481
  %and21.i655 = and i32 %446, 7, !dbg !7482
  %shl22.i656 = shl i32 %or10.i95.i654, %and21.i655, !dbg !7483
  store i32 %shl22.i656, i32* %re_cache.i588, align 4, !dbg !7484
  %447 = load i32, i32* %n.i590, align 4, !dbg !7485
  %sub.i657 = sub nsw i32 0, %447, !dbg !7486
  store i32 %sub.i657, i32* %nb_bits.i591, align 4, !dbg !7487
  %448 = load i32, i32* %re_cache.i588, align 4, !dbg !7488
  %449 = load i32, i32* %nb_bits.i591, align 4, !dbg !7489
  %conv23.i658 = trunc i32 %449 to i8, !dbg !7489
  %call24.i659 = call i32 @NEG_USR32(i32 %448, i8 signext %conv23.i658) #9, !dbg !7490
  %450 = load i32, i32* %code.i586, align 4, !dbg !7491
  %add25.i660 = add i32 %call24.i659, %450, !dbg !7492
  store i32 %add25.i660, i32* %index1.i592, align 4, !dbg !7493
  %451 = load i32, i32* %index1.i592, align 4, !dbg !7494
  %idxprom26.i661 = zext i32 %451 to i64, !dbg !7495
  %452 = load [2 x i16]*, [2 x i16]** %table.addr.i583, align 8, !dbg !7495
  %arrayidx27.i662 = getelementptr inbounds [2 x i16], [2 x i16]* %452, i64 %idxprom26.i661, !dbg !7495
  %arrayidx28.i663 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i662, i64 0, i64 0, !dbg !7495
  %453 = load i16, i16* %arrayidx28.i663, align 2, !dbg !7495
  %conv29.i664 = sext i16 %453 to i32, !dbg !7495
  store i32 %conv29.i664, i32* %code.i586, align 4, !dbg !7496
  %454 = load i32, i32* %index1.i592, align 4, !dbg !7497
  %idxprom30.i665 = zext i32 %454 to i64, !dbg !7498
  %455 = load [2 x i16]*, [2 x i16]** %table.addr.i583, align 8, !dbg !7498
  %arrayidx31.i666 = getelementptr inbounds [2 x i16], [2 x i16]* %455, i64 %idxprom30.i665, !dbg !7498
  %arrayidx32.i667 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i666, i64 0, i64 1, !dbg !7498
  %456 = load i16, i16* %arrayidx32.i667, align 2, !dbg !7498
  %conv33.i668 = sext i16 %456 to i32, !dbg !7498
  store i32 %conv33.i668, i32* %n.i590, align 4, !dbg !7499
  %457 = load i32, i32* %max_depth.addr.i585, align 4, !dbg !7500
  %cmp34.i669 = icmp sgt i32 %457, 2, !dbg !7501
  br i1 %cmp34.i669, label %land.lhs.true36.i672, label %if.end.i714, !dbg !7502

land.lhs.true36.i672:                             ; preds = %cond.end.i670
  %458 = load i32, i32* %n.i590, align 4, !dbg !7503
  %cmp37.i671 = icmp slt i32 %458, 0, !dbg !7504
  br i1 %cmp37.i671, label %if.then39.i675, label %if.end.i714, !dbg !7505

if.then39.i675:                                   ; preds = %land.lhs.true36.i672
  %459 = load i32, i32* %re_size_plus8.i589, align 4, !dbg !7506
  %460 = load i32, i32* %re_index.i587, align 4, !dbg !7507
  %461 = load i32, i32* %nb_bits.i591, align 4, !dbg !7508
  %add40.i673 = add i32 %460, %461, !dbg !7509
  %cmp41.i674 = icmp ugt i32 %459, %add40.i673, !dbg !7510
  br i1 %cmp41.i674, label %cond.true43.i677, label %cond.false45.i678, !dbg !7511

cond.true43.i677:                                 ; preds = %if.then39.i675
  %462 = load i32, i32* %re_index.i587, align 4, !dbg !7512
  %463 = load i32, i32* %nb_bits.i591, align 4, !dbg !7513
  %add44.i676 = add i32 %462, %463, !dbg !7514
  br label %cond.end46.i713, !dbg !7515

cond.false45.i678:                                ; preds = %if.then39.i675
  %464 = load i32, i32* %re_size_plus8.i589, align 4, !dbg !7516
  br label %cond.end46.i713, !dbg !7517

cond.end46.i713:                                  ; preds = %cond.false45.i678, %cond.true43.i677
  %cond47.i679 = phi i32 [ %add44.i676, %cond.true43.i677 ], [ %464, %cond.false45.i678 ], !dbg !7518
  store i32 %cond47.i679, i32* %re_index.i587, align 4, !dbg !7519
  %465 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i582, align 8, !dbg !7520
  %buffer48.i680 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %465, i32 0, i32 0, !dbg !7521
  %466 = load i8*, i8** %buffer48.i680, align 8, !dbg !7521
  %467 = load i32, i32* %re_index.i587, align 4, !dbg !7522
  %shr49.i681 = lshr i32 %467, 3, !dbg !7523
  %idx.ext50.i682 = zext i32 %shr49.i681 to i64, !dbg !7524
  %add.ptr51.i683 = getelementptr inbounds i8, i8* %466, i64 %idx.ext50.i682, !dbg !7524
  %468 = bitcast i8* %add.ptr51.i683 to %union.unaligned_32*, !dbg !7525
  %l52.i684 = bitcast %union.unaligned_32* %468 to i32*, !dbg !7525
  %469 = load i32, i32* %l52.i684, align 1, !dbg !7525
  store i32 %469, i32* %x.addr.i96.i579, align 4, !dbg !7526
  %470 = load i32, i32* %x.addr.i96.i579, align 4, !dbg !7527
  %shl.i97.i685 = shl i32 %470, 8, !dbg !7528
  %and.i98.i686 = and i32 %shl.i97.i685, 65280, !dbg !7529
  %471 = load i32, i32* %x.addr.i96.i579, align 4, !dbg !7530
  %shr.i99.i687 = lshr i32 %471, 8, !dbg !7531
  %and1.i100.i688 = and i32 %shr.i99.i687, 255, !dbg !7532
  %or.i101.i689 = or i32 %and.i98.i686, %and1.i100.i688, !dbg !7533
  %shl2.i102.i690 = shl i32 %or.i101.i689, 16, !dbg !7534
  %472 = load i32, i32* %x.addr.i96.i579, align 4, !dbg !7535
  %shr3.i103.i691 = lshr i32 %472, 16, !dbg !7536
  %shl4.i104.i692 = shl i32 %shr3.i103.i691, 8, !dbg !7537
  %and5.i105.i693 = and i32 %shl4.i104.i692, 65280, !dbg !7538
  %473 = load i32, i32* %x.addr.i96.i579, align 4, !dbg !7539
  %shr6.i106.i694 = lshr i32 %473, 16, !dbg !7540
  %shr7.i107.i695 = lshr i32 %shr6.i106.i694, 8, !dbg !7541
  %and8.i108.i696 = and i32 %shr7.i107.i695, 255, !dbg !7542
  %or9.i109.i697 = or i32 %and5.i105.i693, %and8.i108.i696, !dbg !7543
  %or10.i110.i698 = or i32 %shl2.i102.i690, %or9.i109.i697, !dbg !7544
  %474 = load i32, i32* %re_index.i587, align 4, !dbg !7545
  %and54.i699 = and i32 %474, 7, !dbg !7546
  %shl55.i700 = shl i32 %or10.i110.i698, %and54.i699, !dbg !7547
  store i32 %shl55.i700, i32* %re_cache.i588, align 4, !dbg !7548
  %475 = load i32, i32* %n.i590, align 4, !dbg !7549
  %sub56.i701 = sub nsw i32 0, %475, !dbg !7550
  store i32 %sub56.i701, i32* %nb_bits.i591, align 4, !dbg !7551
  %476 = load i32, i32* %re_cache.i588, align 4, !dbg !7552
  %477 = load i32, i32* %nb_bits.i591, align 4, !dbg !7553
  %conv57.i702 = trunc i32 %477 to i8, !dbg !7553
  %call58.i703 = call i32 @NEG_USR32(i32 %476, i8 signext %conv57.i702) #9, !dbg !7554
  %478 = load i32, i32* %code.i586, align 4, !dbg !7555
  %add59.i704 = add i32 %call58.i703, %478, !dbg !7556
  store i32 %add59.i704, i32* %index1.i592, align 4, !dbg !7557
  %479 = load i32, i32* %index1.i592, align 4, !dbg !7558
  %idxprom60.i705 = zext i32 %479 to i64, !dbg !7559
  %480 = load [2 x i16]*, [2 x i16]** %table.addr.i583, align 8, !dbg !7559
  %arrayidx61.i706 = getelementptr inbounds [2 x i16], [2 x i16]* %480, i64 %idxprom60.i705, !dbg !7559
  %arrayidx62.i707 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i706, i64 0, i64 0, !dbg !7559
  %481 = load i16, i16* %arrayidx62.i707, align 2, !dbg !7559
  %conv63.i708 = sext i16 %481 to i32, !dbg !7559
  store i32 %conv63.i708, i32* %code.i586, align 4, !dbg !7560
  %482 = load i32, i32* %index1.i592, align 4, !dbg !7561
  %idxprom64.i709 = zext i32 %482 to i64, !dbg !7562
  %483 = load [2 x i16]*, [2 x i16]** %table.addr.i583, align 8, !dbg !7562
  %arrayidx65.i710 = getelementptr inbounds [2 x i16], [2 x i16]* %483, i64 %idxprom64.i709, !dbg !7562
  %arrayidx66.i711 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i710, i64 0, i64 1, !dbg !7562
  %484 = load i16, i16* %arrayidx66.i711, align 2, !dbg !7562
  %conv67.i712 = sext i16 %484 to i32, !dbg !7562
  store i32 %conv67.i712, i32* %n.i590, align 4, !dbg !7563
  br label %if.end.i714, !dbg !7564

if.end.i714:                                      ; preds = %cond.end46.i713, %land.lhs.true36.i672, %cond.end.i670
  br label %if.end68.i715, !dbg !7565

if.end68.i715:                                    ; preds = %if.end.i714, %land.lhs.true.i628, %for.body162
  %485 = load i32, i32* %n.i590, align 4, !dbg !7566
  %486 = load i32, i32* %re_cache.i588, align 4, !dbg !7567
  %shl70.i716 = shl i32 %486, %485, !dbg !7567
  store i32 %shl70.i716, i32* %re_cache.i588, align 4, !dbg !7567
  %487 = load i32, i32* %re_size_plus8.i589, align 4, !dbg !7568
  %488 = load i32, i32* %re_index.i587, align 4, !dbg !7569
  %489 = load i32, i32* %n.i590, align 4, !dbg !7570
  %add71.i717 = add i32 %488, %489, !dbg !7571
  %cmp72.i718 = icmp ugt i32 %487, %add71.i717, !dbg !7572
  br i1 %cmp72.i718, label %cond.true74.i720, label %cond.false76.i721, !dbg !7573

cond.true74.i720:                                 ; preds = %if.end68.i715
  %490 = load i32, i32* %re_index.i587, align 4, !dbg !7574
  %491 = load i32, i32* %n.i590, align 4, !dbg !7575
  %add75.i719 = add i32 %490, %491, !dbg !7576
  br label %get_vlc2.exit724, !dbg !7577

cond.false76.i721:                                ; preds = %if.end68.i715
  %492 = load i32, i32* %re_size_plus8.i589, align 4, !dbg !7578
  br label %get_vlc2.exit724, !dbg !7579

get_vlc2.exit724:                                 ; preds = %cond.true74.i720, %cond.false76.i721
  %cond78.i722 = phi i32 [ %add75.i719, %cond.true74.i720 ], [ %492, %cond.false76.i721 ], !dbg !7580
  store i32 %cond78.i722, i32* %re_index.i587, align 4, !dbg !7581
  %493 = load i32, i32* %re_index.i587, align 4, !dbg !7582
  %494 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i582, align 8, !dbg !7583
  %index80.i723 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %494, i32 0, i32 2, !dbg !7584
  store i32 %493, i32* %index80.i723, align 8, !dbg !7585
  %495 = load i32, i32* %code.i586, align 4, !dbg !7586
  store i32 %495, i32* %delta, align 4, !dbg !7587
  %496 = load i32, i32* %i, align 4, !dbg !7588
  %idxprom166 = sext i32 %496 to i64, !dbg !7589
  %497 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7589
  %qu_sf_idx167 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %497, i32 0, i32 6, !dbg !7590
  %arrayidx168 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx167, i64 0, i64 %idxprom166, !dbg !7589
  %498 = load i32, i32* %arrayidx168, align 4, !dbg !7589
  %499 = load i32, i32* %delta, align 4, !dbg !7591
  %call169 = call i32 @sign_extend(i32 %499, i32 4) #1, !dbg !7592
  %add170 = add nsw i32 %498, %call169, !dbg !7593
  %and171 = and i32 %add170, 63, !dbg !7594
  %500 = load i32, i32* %i, align 4, !dbg !7595
  %idxprom172 = sext i32 %500 to i64, !dbg !7596
  %501 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7596
  %qu_sf_idx173 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %501, i32 0, i32 6, !dbg !7597
  %arrayidx174 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx173, i64 0, i64 %idxprom172, !dbg !7596
  store i32 %and171, i32* %arrayidx174, align 4, !dbg !7598
  br label %for.inc175, !dbg !7599

for.inc175:                                       ; preds = %get_vlc2.exit724
  %502 = load i32, i32* %i, align 4, !dbg !7600
  %inc176 = add nsw i32 %502, 1, !dbg !7600
  store i32 %inc176, i32* %i, align 4, !dbg !7600
  br label %for.cond159, !dbg !7602, !llvm.loop !7603

for.end177:                                       ; preds = %for.cond159
  br label %if.end178

if.end178:                                        ; preds = %for.end177, %for.end145
  br label %sw.epilog, !dbg !7605

sw.bb179:                                         ; preds = %entry
  %503 = load i32, i32* %ch_num.addr, align 4, !dbg !7606
  %tobool180 = icmp ne i32 %503, 0, !dbg !7606
  br i1 %tobool180, label %if.then181, label %if.else195, !dbg !7607

if.then181:                                       ; preds = %sw.bb179
  store i32 0, i32* %i, align 4, !dbg !7608
  br label %for.cond182, !dbg !7611

for.cond182:                                      ; preds = %for.inc192, %if.then181
  %504 = load i32, i32* %i, align 4, !dbg !7612
  %505 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !7615
  %used_quant_units183 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %505, i32 0, i32 3, !dbg !7616
  %506 = load i32, i32* %used_quant_units183, align 4, !dbg !7616
  %cmp184 = icmp slt i32 %504, %506, !dbg !7617
  br i1 %cmp184, label %for.body185, label %for.end194, !dbg !7618

for.body185:                                      ; preds = %for.cond182
  %507 = load i32, i32* %i, align 4, !dbg !7619
  %idxprom186 = sext i32 %507 to i64, !dbg !7620
  %508 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !7620
  %qu_sf_idx187 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %508, i32 0, i32 6, !dbg !7621
  %arrayidx188 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx187, i64 0, i64 %idxprom186, !dbg !7620
  %509 = load i32, i32* %arrayidx188, align 4, !dbg !7620
  %510 = load i32, i32* %i, align 4, !dbg !7622
  %idxprom189 = sext i32 %510 to i64, !dbg !7623
  %511 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7623
  %qu_sf_idx190 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %511, i32 0, i32 6, !dbg !7624
  %arrayidx191 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx190, i64 0, i64 %idxprom189, !dbg !7623
  store i32 %509, i32* %arrayidx191, align 4, !dbg !7625
  br label %for.inc192, !dbg !7623

for.inc192:                                       ; preds = %for.body185
  %512 = load i32, i32* %i, align 4, !dbg !7626
  %inc193 = add nsw i32 %512, 1, !dbg !7626
  store i32 %inc193, i32* %i, align 4, !dbg !7626
  br label %for.cond182, !dbg !7628, !llvm.loop !7629

for.end194:                                       ; preds = %for.cond182
  br label %if.end267, !dbg !7631

if.else195:                                       ; preds = %sw.bb179
  %513 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7632
  %call196 = call i32 @get_bits(%struct.GetBitContext* %513, i32 2), !dbg !7633
  store i32 %call196, i32* %weight_idx, align 4, !dbg !7634
  %514 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7635
  %call197 = call i32 @get_bits(%struct.GetBitContext* %514, i32 2), !dbg !7636
  store i32 %call197, i32* %vlc_sel, align 4, !dbg !7637
  %515 = load i32, i32* %vlc_sel, align 4, !dbg !7638
  %idxprom198 = sext i32 %515 to i64, !dbg !7639
  %arrayidx199 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom198, !dbg !7639
  store %struct.VLC* %arrayidx199, %struct.VLC** %vlc_tab, align 8, !dbg !7640
  %516 = load i32, i32* %weight_idx, align 4, !dbg !7641
  %cmp200 = icmp eq i32 %516, 3, !dbg !7642
  br i1 %cmp200, label %if.then201, label %if.else243, !dbg !7643

if.then201:                                       ; preds = %if.else195
  %517 = load i32, i32* %vlc_sel, align 4, !dbg !7644
  %add202 = add nsw i32 %517, 4, !dbg !7645
  %idxprom203 = sext i32 %add202 to i64, !dbg !7646
  %arrayidx204 = getelementptr inbounds [8 x %struct.VLC], [8 x %struct.VLC]* @sf_vlc_tabs, i64 0, i64 %idxprom203, !dbg !7646
  store %struct.VLC* %arrayidx204, %struct.VLC** %vlc_tab, align 8, !dbg !7647
  %518 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7648
  %call205 = call i32 @get_bits(%struct.GetBitContext* %518, i32 6), !dbg !7649
  store i32 %call205, i32* %start_val, align 4, !dbg !7650
  %519 = load i32, i32* %start_val, align 4, !dbg !7651
  %520 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7652
  %call206 = call i32 @get_bits(%struct.GetBitContext* %520, i32 6), !dbg !7653
  %idxprom207 = zext i32 %call206 to i64, !dbg !7655
  %arrayidx208 = getelementptr inbounds [64 x [9 x i8]], [64 x [9 x i8]]* @atrac3p_sf_shapes, i64 0, i64 %idxprom207, !dbg !7655
  %arrayidx209 = getelementptr inbounds [9 x i8], [9 x i8]* %arrayidx208, i64 0, i64 0, !dbg !7655
  %521 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7656
  %qu_sf_idx210 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %521, i32 0, i32 6, !dbg !7657
  %arraydecay211 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx210, i32 0, i32 0, !dbg !7658
  %522 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !7659
  %used_quant_units212 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %522, i32 0, i32 3, !dbg !7660
  %523 = load i32, i32* %used_quant_units212, align 4, !dbg !7660
  call void @unpack_vq_shape(i32 %519, i8* %arrayidx209, i32* %arraydecay211, i32 %523), !dbg !7661
  %524 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7663
  %call213 = call i32 @get_bits(%struct.GetBitContext* %524, i32 4), !dbg !7664
  %add214 = add i32 %call213, 56, !dbg !7665
  %and215 = and i32 %add214, 63, !dbg !7666
  store i32 %and215, i32* %diff, align 4, !dbg !7667
  %525 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7668
  %qu_sf_idx216 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %525, i32 0, i32 6, !dbg !7669
  %arrayidx217 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx216, i64 0, i64 0, !dbg !7668
  %526 = load i32, i32* %arrayidx217, align 4, !dbg !7668
  %527 = load i32, i32* %diff, align 4, !dbg !7670
  %add218 = add nsw i32 %526, %527, !dbg !7671
  %and219 = and i32 %add218, 63, !dbg !7672
  %528 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7673
  %qu_sf_idx220 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %528, i32 0, i32 6, !dbg !7674
  %arrayidx221 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx220, i64 0, i64 0, !dbg !7673
  store i32 %and219, i32* %arrayidx221, align 4, !dbg !7675
  store i32 1, i32* %i, align 4, !dbg !7676
  br label %for.cond222, !dbg !7677

for.cond222:                                      ; preds = %for.inc240, %if.then201
  %529 = load i32, i32* %i, align 4, !dbg !7678
  %530 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !7680
  %used_quant_units223 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %530, i32 0, i32 3, !dbg !7681
  %531 = load i32, i32* %used_quant_units223, align 4, !dbg !7681
  %cmp224 = icmp slt i32 %529, %531, !dbg !7682
  br i1 %cmp224, label %for.body225, label %for.end242, !dbg !7683

for.body225:                                      ; preds = %for.cond222
  %532 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7684
  %533 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7685
  %table226 = getelementptr inbounds %struct.VLC, %struct.VLC* %533, i32 0, i32 1, !dbg !7686
  %534 = load [2 x i16]*, [2 x i16]** %table226, align 8, !dbg !7686
  %535 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7687
  %bits227 = getelementptr inbounds %struct.VLC, %struct.VLC* %535, i32 0, i32 0, !dbg !7688
  %536 = load i32, i32* %bits227, align 8, !dbg !7688
  store %struct.GetBitContext* %532, %struct.GetBitContext** %s.addr.i728, align 8, !dbg !7689
  store [2 x i16]* %534, [2 x i16]** %table.addr.i729, align 8, !dbg !7689
  store i32 %536, i32* %bits.addr.i730, align 4, !dbg !7689
  store i32 1, i32* %max_depth.addr.i731, align 4, !dbg !7689
  %537 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i728, align 8, !dbg !7690
  %index.i739 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %537, i32 0, i32 2, !dbg !7691
  %538 = load i32, i32* %index.i739, align 8, !dbg !7691
  store i32 %538, i32* %re_index.i733, align 4, !dbg !6338
  %539 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i728, align 8, !dbg !7692
  %size_in_bits_plus8.i740 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %539, i32 0, i32 4, !dbg !7693
  %540 = load i32, i32* %size_in_bits_plus8.i740, align 8, !dbg !7693
  store i32 %540, i32* %re_size_plus8.i735, align 4, !dbg !6340
  %541 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i728, align 8, !dbg !7694
  %buffer.i741 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %541, i32 0, i32 0, !dbg !7695
  %542 = load i8*, i8** %buffer.i741, align 8, !dbg !7695
  %543 = load i32, i32* %re_index.i733, align 4, !dbg !7696
  %shr.i742 = lshr i32 %543, 3, !dbg !7697
  %idx.ext.i743 = zext i32 %shr.i742 to i64, !dbg !7698
  %add.ptr.i744 = getelementptr inbounds i8, i8* %542, i64 %idx.ext.i743, !dbg !7698
  %544 = bitcast i8* %add.ptr.i744 to %union.unaligned_32*, !dbg !7699
  %l.i745 = bitcast %union.unaligned_32* %544 to i32*, !dbg !7699
  %545 = load i32, i32* %l.i745, align 1, !dbg !7699
  store i32 %545, i32* %x.addr.i.i727, align 4, !dbg !7700
  %546 = load i32, i32* %x.addr.i.i727, align 4, !dbg !7701
  %shl.i.i746 = shl i32 %546, 8, !dbg !7702
  %and.i.i747 = and i32 %shl.i.i746, 65280, !dbg !7703
  %547 = load i32, i32* %x.addr.i.i727, align 4, !dbg !7704
  %shr.i.i748 = lshr i32 %547, 8, !dbg !7705
  %and1.i.i749 = and i32 %shr.i.i748, 255, !dbg !7706
  %or.i.i750 = or i32 %and.i.i747, %and1.i.i749, !dbg !7707
  %shl2.i.i751 = shl i32 %or.i.i750, 16, !dbg !7708
  %548 = load i32, i32* %x.addr.i.i727, align 4, !dbg !7709
  %shr3.i.i752 = lshr i32 %548, 16, !dbg !7710
  %shl4.i.i753 = shl i32 %shr3.i.i752, 8, !dbg !7711
  %and5.i.i754 = and i32 %shl4.i.i753, 65280, !dbg !7712
  %549 = load i32, i32* %x.addr.i.i727, align 4, !dbg !7713
  %shr6.i.i755 = lshr i32 %549, 16, !dbg !7714
  %shr7.i.i756 = lshr i32 %shr6.i.i755, 8, !dbg !7715
  %and8.i.i757 = and i32 %shr7.i.i756, 255, !dbg !7716
  %or9.i.i758 = or i32 %and5.i.i754, %and8.i.i757, !dbg !7717
  %or10.i.i759 = or i32 %shl2.i.i751, %or9.i.i758, !dbg !7718
  %550 = load i32, i32* %re_index.i733, align 4, !dbg !7719
  %and.i760 = and i32 %550, 7, !dbg !7720
  %shl.i761 = shl i32 %or10.i.i759, %and.i760, !dbg !7721
  store i32 %shl.i761, i32* %re_cache.i734, align 4, !dbg !7722
  %551 = load i32, i32* %re_cache.i734, align 4, !dbg !7723
  %552 = load i32, i32* %bits.addr.i730, align 4, !dbg !7724
  %conv.i762 = trunc i32 %552 to i8, !dbg !7724
  %call2.i763 = call i32 @NEG_USR32(i32 %551, i8 signext %conv.i762) #9, !dbg !7725
  store i32 %call2.i763, i32* %index1.i738, align 4, !dbg !7726
  %553 = load i32, i32* %index1.i738, align 4, !dbg !7727
  %idxprom.i764 = zext i32 %553 to i64, !dbg !7728
  %554 = load [2 x i16]*, [2 x i16]** %table.addr.i729, align 8, !dbg !7728
  %arrayidx.i765 = getelementptr inbounds [2 x i16], [2 x i16]* %554, i64 %idxprom.i764, !dbg !7728
  %arrayidx3.i766 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i765, i64 0, i64 0, !dbg !7728
  %555 = load i16, i16* %arrayidx3.i766, align 2, !dbg !7728
  %conv4.i767 = sext i16 %555 to i32, !dbg !7728
  store i32 %conv4.i767, i32* %code.i732, align 4, !dbg !7729
  %556 = load i32, i32* %index1.i738, align 4, !dbg !7730
  %idxprom5.i768 = zext i32 %556 to i64, !dbg !7731
  %557 = load [2 x i16]*, [2 x i16]** %table.addr.i729, align 8, !dbg !7731
  %arrayidx6.i769 = getelementptr inbounds [2 x i16], [2 x i16]* %557, i64 %idxprom5.i768, !dbg !7731
  %arrayidx7.i770 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i769, i64 0, i64 1, !dbg !7731
  %558 = load i16, i16* %arrayidx7.i770, align 2, !dbg !7731
  %conv8.i771 = sext i16 %558 to i32, !dbg !7731
  store i32 %conv8.i771, i32* %n.i736, align 4, !dbg !7732
  %559 = load i32, i32* %max_depth.addr.i731, align 4, !dbg !7733
  %cmp.i772 = icmp sgt i32 %559, 1, !dbg !7734
  br i1 %cmp.i772, label %land.lhs.true.i774, label %if.end68.i861, !dbg !7735

land.lhs.true.i774:                               ; preds = %for.body225
  %560 = load i32, i32* %n.i736, align 4, !dbg !7736
  %cmp10.i773 = icmp slt i32 %560, 0, !dbg !7737
  br i1 %cmp10.i773, label %if.then.i777, label %if.end68.i861, !dbg !7738

if.then.i777:                                     ; preds = %land.lhs.true.i774
  %561 = load i32, i32* %re_size_plus8.i735, align 4, !dbg !7739
  %562 = load i32, i32* %re_index.i733, align 4, !dbg !7740
  %563 = load i32, i32* %bits.addr.i730, align 4, !dbg !7741
  %add.i775 = add i32 %562, %563, !dbg !7742
  %cmp12.i776 = icmp ugt i32 %561, %add.i775, !dbg !7743
  br i1 %cmp12.i776, label %cond.true.i779, label %cond.false.i780, !dbg !7744

cond.true.i779:                                   ; preds = %if.then.i777
  %564 = load i32, i32* %re_index.i733, align 4, !dbg !7745
  %565 = load i32, i32* %bits.addr.i730, align 4, !dbg !7746
  %add14.i778 = add i32 %564, %565, !dbg !7747
  br label %cond.end.i816, !dbg !7748

cond.false.i780:                                  ; preds = %if.then.i777
  %566 = load i32, i32* %re_size_plus8.i735, align 4, !dbg !7749
  br label %cond.end.i816, !dbg !7750

cond.end.i816:                                    ; preds = %cond.false.i780, %cond.true.i779
  %cond.i781 = phi i32 [ %add14.i778, %cond.true.i779 ], [ %566, %cond.false.i780 ], !dbg !7751
  store i32 %cond.i781, i32* %re_index.i733, align 4, !dbg !7752
  %567 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i728, align 8, !dbg !7753
  %buffer15.i782 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %567, i32 0, i32 0, !dbg !7754
  %568 = load i8*, i8** %buffer15.i782, align 8, !dbg !7754
  %569 = load i32, i32* %re_index.i733, align 4, !dbg !7755
  %shr16.i783 = lshr i32 %569, 3, !dbg !7756
  %idx.ext17.i784 = zext i32 %shr16.i783 to i64, !dbg !7757
  %add.ptr18.i785 = getelementptr inbounds i8, i8* %568, i64 %idx.ext17.i784, !dbg !7757
  %570 = bitcast i8* %add.ptr18.i785 to %union.unaligned_32*, !dbg !7758
  %l19.i786 = bitcast %union.unaligned_32* %570 to i32*, !dbg !7758
  %571 = load i32, i32* %l19.i786, align 1, !dbg !7758
  store i32 %571, i32* %x.addr.i81.i726, align 4, !dbg !7759
  %572 = load i32, i32* %x.addr.i81.i726, align 4, !dbg !7760
  %shl.i82.i787 = shl i32 %572, 8, !dbg !7761
  %and.i83.i788 = and i32 %shl.i82.i787, 65280, !dbg !7762
  %573 = load i32, i32* %x.addr.i81.i726, align 4, !dbg !7763
  %shr.i84.i789 = lshr i32 %573, 8, !dbg !7764
  %and1.i85.i790 = and i32 %shr.i84.i789, 255, !dbg !7765
  %or.i86.i791 = or i32 %and.i83.i788, %and1.i85.i790, !dbg !7766
  %shl2.i87.i792 = shl i32 %or.i86.i791, 16, !dbg !7767
  %574 = load i32, i32* %x.addr.i81.i726, align 4, !dbg !7768
  %shr3.i88.i793 = lshr i32 %574, 16, !dbg !7769
  %shl4.i89.i794 = shl i32 %shr3.i88.i793, 8, !dbg !7770
  %and5.i90.i795 = and i32 %shl4.i89.i794, 65280, !dbg !7771
  %575 = load i32, i32* %x.addr.i81.i726, align 4, !dbg !7772
  %shr6.i91.i796 = lshr i32 %575, 16, !dbg !7773
  %shr7.i92.i797 = lshr i32 %shr6.i91.i796, 8, !dbg !7774
  %and8.i93.i798 = and i32 %shr7.i92.i797, 255, !dbg !7775
  %or9.i94.i799 = or i32 %and5.i90.i795, %and8.i93.i798, !dbg !7776
  %or10.i95.i800 = or i32 %shl2.i87.i792, %or9.i94.i799, !dbg !7777
  %576 = load i32, i32* %re_index.i733, align 4, !dbg !7778
  %and21.i801 = and i32 %576, 7, !dbg !7779
  %shl22.i802 = shl i32 %or10.i95.i800, %and21.i801, !dbg !7780
  store i32 %shl22.i802, i32* %re_cache.i734, align 4, !dbg !7781
  %577 = load i32, i32* %n.i736, align 4, !dbg !7782
  %sub.i803 = sub nsw i32 0, %577, !dbg !7783
  store i32 %sub.i803, i32* %nb_bits.i737, align 4, !dbg !7784
  %578 = load i32, i32* %re_cache.i734, align 4, !dbg !7785
  %579 = load i32, i32* %nb_bits.i737, align 4, !dbg !7786
  %conv23.i804 = trunc i32 %579 to i8, !dbg !7786
  %call24.i805 = call i32 @NEG_USR32(i32 %578, i8 signext %conv23.i804) #9, !dbg !7787
  %580 = load i32, i32* %code.i732, align 4, !dbg !7788
  %add25.i806 = add i32 %call24.i805, %580, !dbg !7789
  store i32 %add25.i806, i32* %index1.i738, align 4, !dbg !7790
  %581 = load i32, i32* %index1.i738, align 4, !dbg !7791
  %idxprom26.i807 = zext i32 %581 to i64, !dbg !7792
  %582 = load [2 x i16]*, [2 x i16]** %table.addr.i729, align 8, !dbg !7792
  %arrayidx27.i808 = getelementptr inbounds [2 x i16], [2 x i16]* %582, i64 %idxprom26.i807, !dbg !7792
  %arrayidx28.i809 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i808, i64 0, i64 0, !dbg !7792
  %583 = load i16, i16* %arrayidx28.i809, align 2, !dbg !7792
  %conv29.i810 = sext i16 %583 to i32, !dbg !7792
  store i32 %conv29.i810, i32* %code.i732, align 4, !dbg !7793
  %584 = load i32, i32* %index1.i738, align 4, !dbg !7794
  %idxprom30.i811 = zext i32 %584 to i64, !dbg !7795
  %585 = load [2 x i16]*, [2 x i16]** %table.addr.i729, align 8, !dbg !7795
  %arrayidx31.i812 = getelementptr inbounds [2 x i16], [2 x i16]* %585, i64 %idxprom30.i811, !dbg !7795
  %arrayidx32.i813 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i812, i64 0, i64 1, !dbg !7795
  %586 = load i16, i16* %arrayidx32.i813, align 2, !dbg !7795
  %conv33.i814 = sext i16 %586 to i32, !dbg !7795
  store i32 %conv33.i814, i32* %n.i736, align 4, !dbg !7796
  %587 = load i32, i32* %max_depth.addr.i731, align 4, !dbg !7797
  %cmp34.i815 = icmp sgt i32 %587, 2, !dbg !7798
  br i1 %cmp34.i815, label %land.lhs.true36.i818, label %if.end.i860, !dbg !7799

land.lhs.true36.i818:                             ; preds = %cond.end.i816
  %588 = load i32, i32* %n.i736, align 4, !dbg !7800
  %cmp37.i817 = icmp slt i32 %588, 0, !dbg !7801
  br i1 %cmp37.i817, label %if.then39.i821, label %if.end.i860, !dbg !7802

if.then39.i821:                                   ; preds = %land.lhs.true36.i818
  %589 = load i32, i32* %re_size_plus8.i735, align 4, !dbg !7803
  %590 = load i32, i32* %re_index.i733, align 4, !dbg !7804
  %591 = load i32, i32* %nb_bits.i737, align 4, !dbg !7805
  %add40.i819 = add i32 %590, %591, !dbg !7806
  %cmp41.i820 = icmp ugt i32 %589, %add40.i819, !dbg !7807
  br i1 %cmp41.i820, label %cond.true43.i823, label %cond.false45.i824, !dbg !7808

cond.true43.i823:                                 ; preds = %if.then39.i821
  %592 = load i32, i32* %re_index.i733, align 4, !dbg !7809
  %593 = load i32, i32* %nb_bits.i737, align 4, !dbg !7810
  %add44.i822 = add i32 %592, %593, !dbg !7811
  br label %cond.end46.i859, !dbg !7812

cond.false45.i824:                                ; preds = %if.then39.i821
  %594 = load i32, i32* %re_size_plus8.i735, align 4, !dbg !7813
  br label %cond.end46.i859, !dbg !7814

cond.end46.i859:                                  ; preds = %cond.false45.i824, %cond.true43.i823
  %cond47.i825 = phi i32 [ %add44.i822, %cond.true43.i823 ], [ %594, %cond.false45.i824 ], !dbg !7815
  store i32 %cond47.i825, i32* %re_index.i733, align 4, !dbg !7816
  %595 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i728, align 8, !dbg !7817
  %buffer48.i826 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %595, i32 0, i32 0, !dbg !7818
  %596 = load i8*, i8** %buffer48.i826, align 8, !dbg !7818
  %597 = load i32, i32* %re_index.i733, align 4, !dbg !7819
  %shr49.i827 = lshr i32 %597, 3, !dbg !7820
  %idx.ext50.i828 = zext i32 %shr49.i827 to i64, !dbg !7821
  %add.ptr51.i829 = getelementptr inbounds i8, i8* %596, i64 %idx.ext50.i828, !dbg !7821
  %598 = bitcast i8* %add.ptr51.i829 to %union.unaligned_32*, !dbg !7822
  %l52.i830 = bitcast %union.unaligned_32* %598 to i32*, !dbg !7822
  %599 = load i32, i32* %l52.i830, align 1, !dbg !7822
  store i32 %599, i32* %x.addr.i96.i725, align 4, !dbg !7823
  %600 = load i32, i32* %x.addr.i96.i725, align 4, !dbg !7824
  %shl.i97.i831 = shl i32 %600, 8, !dbg !7825
  %and.i98.i832 = and i32 %shl.i97.i831, 65280, !dbg !7826
  %601 = load i32, i32* %x.addr.i96.i725, align 4, !dbg !7827
  %shr.i99.i833 = lshr i32 %601, 8, !dbg !7828
  %and1.i100.i834 = and i32 %shr.i99.i833, 255, !dbg !7829
  %or.i101.i835 = or i32 %and.i98.i832, %and1.i100.i834, !dbg !7830
  %shl2.i102.i836 = shl i32 %or.i101.i835, 16, !dbg !7831
  %602 = load i32, i32* %x.addr.i96.i725, align 4, !dbg !7832
  %shr3.i103.i837 = lshr i32 %602, 16, !dbg !7833
  %shl4.i104.i838 = shl i32 %shr3.i103.i837, 8, !dbg !7834
  %and5.i105.i839 = and i32 %shl4.i104.i838, 65280, !dbg !7835
  %603 = load i32, i32* %x.addr.i96.i725, align 4, !dbg !7836
  %shr6.i106.i840 = lshr i32 %603, 16, !dbg !7837
  %shr7.i107.i841 = lshr i32 %shr6.i106.i840, 8, !dbg !7838
  %and8.i108.i842 = and i32 %shr7.i107.i841, 255, !dbg !7839
  %or9.i109.i843 = or i32 %and5.i105.i839, %and8.i108.i842, !dbg !7840
  %or10.i110.i844 = or i32 %shl2.i102.i836, %or9.i109.i843, !dbg !7841
  %604 = load i32, i32* %re_index.i733, align 4, !dbg !7842
  %and54.i845 = and i32 %604, 7, !dbg !7843
  %shl55.i846 = shl i32 %or10.i110.i844, %and54.i845, !dbg !7844
  store i32 %shl55.i846, i32* %re_cache.i734, align 4, !dbg !7845
  %605 = load i32, i32* %n.i736, align 4, !dbg !7846
  %sub56.i847 = sub nsw i32 0, %605, !dbg !7847
  store i32 %sub56.i847, i32* %nb_bits.i737, align 4, !dbg !7848
  %606 = load i32, i32* %re_cache.i734, align 4, !dbg !7849
  %607 = load i32, i32* %nb_bits.i737, align 4, !dbg !7850
  %conv57.i848 = trunc i32 %607 to i8, !dbg !7850
  %call58.i849 = call i32 @NEG_USR32(i32 %606, i8 signext %conv57.i848) #9, !dbg !7851
  %608 = load i32, i32* %code.i732, align 4, !dbg !7852
  %add59.i850 = add i32 %call58.i849, %608, !dbg !7853
  store i32 %add59.i850, i32* %index1.i738, align 4, !dbg !7854
  %609 = load i32, i32* %index1.i738, align 4, !dbg !7855
  %idxprom60.i851 = zext i32 %609 to i64, !dbg !7856
  %610 = load [2 x i16]*, [2 x i16]** %table.addr.i729, align 8, !dbg !7856
  %arrayidx61.i852 = getelementptr inbounds [2 x i16], [2 x i16]* %610, i64 %idxprom60.i851, !dbg !7856
  %arrayidx62.i853 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i852, i64 0, i64 0, !dbg !7856
  %611 = load i16, i16* %arrayidx62.i853, align 2, !dbg !7856
  %conv63.i854 = sext i16 %611 to i32, !dbg !7856
  store i32 %conv63.i854, i32* %code.i732, align 4, !dbg !7857
  %612 = load i32, i32* %index1.i738, align 4, !dbg !7858
  %idxprom64.i855 = zext i32 %612 to i64, !dbg !7859
  %613 = load [2 x i16]*, [2 x i16]** %table.addr.i729, align 8, !dbg !7859
  %arrayidx65.i856 = getelementptr inbounds [2 x i16], [2 x i16]* %613, i64 %idxprom64.i855, !dbg !7859
  %arrayidx66.i857 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i856, i64 0, i64 1, !dbg !7859
  %614 = load i16, i16* %arrayidx66.i857, align 2, !dbg !7859
  %conv67.i858 = sext i16 %614 to i32, !dbg !7859
  store i32 %conv67.i858, i32* %n.i736, align 4, !dbg !7860
  br label %if.end.i860, !dbg !7861

if.end.i860:                                      ; preds = %cond.end46.i859, %land.lhs.true36.i818, %cond.end.i816
  br label %if.end68.i861, !dbg !7862

if.end68.i861:                                    ; preds = %if.end.i860, %land.lhs.true.i774, %for.body225
  %615 = load i32, i32* %n.i736, align 4, !dbg !7863
  %616 = load i32, i32* %re_cache.i734, align 4, !dbg !7864
  %shl70.i862 = shl i32 %616, %615, !dbg !7864
  store i32 %shl70.i862, i32* %re_cache.i734, align 4, !dbg !7864
  %617 = load i32, i32* %re_size_plus8.i735, align 4, !dbg !7865
  %618 = load i32, i32* %re_index.i733, align 4, !dbg !7866
  %619 = load i32, i32* %n.i736, align 4, !dbg !7867
  %add71.i863 = add i32 %618, %619, !dbg !7868
  %cmp72.i864 = icmp ugt i32 %617, %add71.i863, !dbg !7869
  br i1 %cmp72.i864, label %cond.true74.i866, label %cond.false76.i867, !dbg !7870

cond.true74.i866:                                 ; preds = %if.end68.i861
  %620 = load i32, i32* %re_index.i733, align 4, !dbg !7871
  %621 = load i32, i32* %n.i736, align 4, !dbg !7872
  %add75.i865 = add i32 %620, %621, !dbg !7873
  br label %get_vlc2.exit870, !dbg !7874

cond.false76.i867:                                ; preds = %if.end68.i861
  %622 = load i32, i32* %re_size_plus8.i735, align 4, !dbg !7875
  br label %get_vlc2.exit870, !dbg !7876

get_vlc2.exit870:                                 ; preds = %cond.true74.i866, %cond.false76.i867
  %cond78.i868 = phi i32 [ %add75.i865, %cond.true74.i866 ], [ %622, %cond.false76.i867 ], !dbg !7877
  store i32 %cond78.i868, i32* %re_index.i733, align 4, !dbg !7878
  %623 = load i32, i32* %re_index.i733, align 4, !dbg !7879
  %624 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i728, align 8, !dbg !7880
  %index80.i869 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %624, i32 0, i32 2, !dbg !7881
  store i32 %623, i32* %index80.i869, align 8, !dbg !7882
  %625 = load i32, i32* %code.i732, align 4, !dbg !7883
  store i32 %625, i32* %delta, align 4, !dbg !7884
  %626 = load i32, i32* %diff, align 4, !dbg !7885
  %627 = load i32, i32* %delta, align 4, !dbg !7886
  %call229 = call i32 @sign_extend(i32 %627, i32 4) #1, !dbg !7887
  %add230 = add nsw i32 %626, %call229, !dbg !7888
  %and231 = and i32 %add230, 63, !dbg !7889
  store i32 %and231, i32* %diff, align 4, !dbg !7890
  %628 = load i32, i32* %diff, align 4, !dbg !7891
  %629 = load i32, i32* %i, align 4, !dbg !7892
  %idxprom232 = sext i32 %629 to i64, !dbg !7893
  %630 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7893
  %qu_sf_idx233 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %630, i32 0, i32 6, !dbg !7894
  %arrayidx234 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx233, i64 0, i64 %idxprom232, !dbg !7893
  %631 = load i32, i32* %arrayidx234, align 4, !dbg !7893
  %add235 = add nsw i32 %628, %631, !dbg !7895
  %and236 = and i32 %add235, 63, !dbg !7896
  %632 = load i32, i32* %i, align 4, !dbg !7897
  %idxprom237 = sext i32 %632 to i64, !dbg !7898
  %633 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7898
  %qu_sf_idx238 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %633, i32 0, i32 6, !dbg !7899
  %arrayidx239 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx238, i64 0, i64 %idxprom237, !dbg !7898
  store i32 %and236, i32* %arrayidx239, align 4, !dbg !7900
  br label %for.inc240, !dbg !7901

for.inc240:                                       ; preds = %get_vlc2.exit870
  %634 = load i32, i32* %i, align 4, !dbg !7902
  %inc241 = add nsw i32 %634, 1, !dbg !7902
  store i32 %inc241, i32* %i, align 4, !dbg !7902
  br label %for.cond222, !dbg !7904, !llvm.loop !7905

for.end242:                                       ; preds = %for.cond222
  br label %if.end266, !dbg !7907

if.else243:                                       ; preds = %if.else195
  %635 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7908
  %call244 = call i32 @get_bits(%struct.GetBitContext* %635, i32 6), !dbg !7909
  %636 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !7910
  %qu_sf_idx245 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %636, i32 0, i32 6, !dbg !7911
  %arrayidx246 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx245, i64 0, i64 0, !dbg !7910
  store i32 %call244, i32* %arrayidx246, align 4, !dbg !7912
  store i32 1, i32* %i, align 4, !dbg !7913
  br label %for.cond247, !dbg !7914

for.cond247:                                      ; preds = %for.inc263, %if.else243
  %637 = load i32, i32* %i, align 4, !dbg !7915
  %638 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !7917
  %used_quant_units248 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %638, i32 0, i32 3, !dbg !7918
  %639 = load i32, i32* %used_quant_units248, align 4, !dbg !7918
  %cmp249 = icmp slt i32 %637, %639, !dbg !7919
  br i1 %cmp249, label %for.body250, label %for.end265, !dbg !7920

for.body250:                                      ; preds = %for.cond247
  %640 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7921
  %641 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7922
  %table251 = getelementptr inbounds %struct.VLC, %struct.VLC* %641, i32 0, i32 1, !dbg !7923
  %642 = load [2 x i16]*, [2 x i16]** %table251, align 8, !dbg !7923
  %643 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !7924
  %bits252 = getelementptr inbounds %struct.VLC, %struct.VLC* %643, i32 0, i32 0, !dbg !7925
  %644 = load i32, i32* %bits252, align 8, !dbg !7925
  store %struct.GetBitContext* %640, %struct.GetBitContext** %s.addr.i874, align 8, !dbg !7926
  store [2 x i16]* %642, [2 x i16]** %table.addr.i875, align 8, !dbg !7926
  store i32 %644, i32* %bits.addr.i876, align 4, !dbg !7926
  store i32 1, i32* %max_depth.addr.i877, align 4, !dbg !7926
  %645 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i874, align 8, !dbg !7927
  %index.i885 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %645, i32 0, i32 2, !dbg !7928
  %646 = load i32, i32* %index.i885, align 8, !dbg !7928
  store i32 %646, i32* %re_index.i879, align 4, !dbg !6316
  %647 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i874, align 8, !dbg !7929
  %size_in_bits_plus8.i886 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %647, i32 0, i32 4, !dbg !7930
  %648 = load i32, i32* %size_in_bits_plus8.i886, align 8, !dbg !7930
  store i32 %648, i32* %re_size_plus8.i881, align 4, !dbg !6318
  %649 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i874, align 8, !dbg !7931
  %buffer.i887 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %649, i32 0, i32 0, !dbg !7932
  %650 = load i8*, i8** %buffer.i887, align 8, !dbg !7932
  %651 = load i32, i32* %re_index.i879, align 4, !dbg !7933
  %shr.i888 = lshr i32 %651, 3, !dbg !7934
  %idx.ext.i889 = zext i32 %shr.i888 to i64, !dbg !7935
  %add.ptr.i890 = getelementptr inbounds i8, i8* %650, i64 %idx.ext.i889, !dbg !7935
  %652 = bitcast i8* %add.ptr.i890 to %union.unaligned_32*, !dbg !7936
  %l.i891 = bitcast %union.unaligned_32* %652 to i32*, !dbg !7936
  %653 = load i32, i32* %l.i891, align 1, !dbg !7936
  store i32 %653, i32* %x.addr.i.i873, align 4, !dbg !7937
  %654 = load i32, i32* %x.addr.i.i873, align 4, !dbg !7938
  %shl.i.i892 = shl i32 %654, 8, !dbg !7939
  %and.i.i893 = and i32 %shl.i.i892, 65280, !dbg !7940
  %655 = load i32, i32* %x.addr.i.i873, align 4, !dbg !7941
  %shr.i.i894 = lshr i32 %655, 8, !dbg !7942
  %and1.i.i895 = and i32 %shr.i.i894, 255, !dbg !7943
  %or.i.i896 = or i32 %and.i.i893, %and1.i.i895, !dbg !7944
  %shl2.i.i897 = shl i32 %or.i.i896, 16, !dbg !7945
  %656 = load i32, i32* %x.addr.i.i873, align 4, !dbg !7946
  %shr3.i.i898 = lshr i32 %656, 16, !dbg !7947
  %shl4.i.i899 = shl i32 %shr3.i.i898, 8, !dbg !7948
  %and5.i.i900 = and i32 %shl4.i.i899, 65280, !dbg !7949
  %657 = load i32, i32* %x.addr.i.i873, align 4, !dbg !7950
  %shr6.i.i901 = lshr i32 %657, 16, !dbg !7951
  %shr7.i.i902 = lshr i32 %shr6.i.i901, 8, !dbg !7952
  %and8.i.i903 = and i32 %shr7.i.i902, 255, !dbg !7953
  %or9.i.i904 = or i32 %and5.i.i900, %and8.i.i903, !dbg !7954
  %or10.i.i905 = or i32 %shl2.i.i897, %or9.i.i904, !dbg !7955
  %658 = load i32, i32* %re_index.i879, align 4, !dbg !7956
  %and.i906 = and i32 %658, 7, !dbg !7957
  %shl.i907 = shl i32 %or10.i.i905, %and.i906, !dbg !7958
  store i32 %shl.i907, i32* %re_cache.i880, align 4, !dbg !7959
  %659 = load i32, i32* %re_cache.i880, align 4, !dbg !7960
  %660 = load i32, i32* %bits.addr.i876, align 4, !dbg !7961
  %conv.i908 = trunc i32 %660 to i8, !dbg !7961
  %call2.i909 = call i32 @NEG_USR32(i32 %659, i8 signext %conv.i908) #9, !dbg !7962
  store i32 %call2.i909, i32* %index1.i884, align 4, !dbg !7963
  %661 = load i32, i32* %index1.i884, align 4, !dbg !7964
  %idxprom.i910 = zext i32 %661 to i64, !dbg !7965
  %662 = load [2 x i16]*, [2 x i16]** %table.addr.i875, align 8, !dbg !7965
  %arrayidx.i911 = getelementptr inbounds [2 x i16], [2 x i16]* %662, i64 %idxprom.i910, !dbg !7965
  %arrayidx3.i912 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i911, i64 0, i64 0, !dbg !7965
  %663 = load i16, i16* %arrayidx3.i912, align 2, !dbg !7965
  %conv4.i913 = sext i16 %663 to i32, !dbg !7965
  store i32 %conv4.i913, i32* %code.i878, align 4, !dbg !7966
  %664 = load i32, i32* %index1.i884, align 4, !dbg !7967
  %idxprom5.i914 = zext i32 %664 to i64, !dbg !7968
  %665 = load [2 x i16]*, [2 x i16]** %table.addr.i875, align 8, !dbg !7968
  %arrayidx6.i915 = getelementptr inbounds [2 x i16], [2 x i16]* %665, i64 %idxprom5.i914, !dbg !7968
  %arrayidx7.i916 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i915, i64 0, i64 1, !dbg !7968
  %666 = load i16, i16* %arrayidx7.i916, align 2, !dbg !7968
  %conv8.i917 = sext i16 %666 to i32, !dbg !7968
  store i32 %conv8.i917, i32* %n.i882, align 4, !dbg !7969
  %667 = load i32, i32* %max_depth.addr.i877, align 4, !dbg !7970
  %cmp.i918 = icmp sgt i32 %667, 1, !dbg !7971
  br i1 %cmp.i918, label %land.lhs.true.i920, label %if.end68.i1007, !dbg !7972

land.lhs.true.i920:                               ; preds = %for.body250
  %668 = load i32, i32* %n.i882, align 4, !dbg !7973
  %cmp10.i919 = icmp slt i32 %668, 0, !dbg !7974
  br i1 %cmp10.i919, label %if.then.i923, label %if.end68.i1007, !dbg !7975

if.then.i923:                                     ; preds = %land.lhs.true.i920
  %669 = load i32, i32* %re_size_plus8.i881, align 4, !dbg !7976
  %670 = load i32, i32* %re_index.i879, align 4, !dbg !7977
  %671 = load i32, i32* %bits.addr.i876, align 4, !dbg !7978
  %add.i921 = add i32 %670, %671, !dbg !7979
  %cmp12.i922 = icmp ugt i32 %669, %add.i921, !dbg !7980
  br i1 %cmp12.i922, label %cond.true.i925, label %cond.false.i926, !dbg !7981

cond.true.i925:                                   ; preds = %if.then.i923
  %672 = load i32, i32* %re_index.i879, align 4, !dbg !7982
  %673 = load i32, i32* %bits.addr.i876, align 4, !dbg !7983
  %add14.i924 = add i32 %672, %673, !dbg !7984
  br label %cond.end.i962, !dbg !7985

cond.false.i926:                                  ; preds = %if.then.i923
  %674 = load i32, i32* %re_size_plus8.i881, align 4, !dbg !7986
  br label %cond.end.i962, !dbg !7987

cond.end.i962:                                    ; preds = %cond.false.i926, %cond.true.i925
  %cond.i927 = phi i32 [ %add14.i924, %cond.true.i925 ], [ %674, %cond.false.i926 ], !dbg !7988
  store i32 %cond.i927, i32* %re_index.i879, align 4, !dbg !7989
  %675 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i874, align 8, !dbg !7990
  %buffer15.i928 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %675, i32 0, i32 0, !dbg !7991
  %676 = load i8*, i8** %buffer15.i928, align 8, !dbg !7991
  %677 = load i32, i32* %re_index.i879, align 4, !dbg !7992
  %shr16.i929 = lshr i32 %677, 3, !dbg !7993
  %idx.ext17.i930 = zext i32 %shr16.i929 to i64, !dbg !7994
  %add.ptr18.i931 = getelementptr inbounds i8, i8* %676, i64 %idx.ext17.i930, !dbg !7994
  %678 = bitcast i8* %add.ptr18.i931 to %union.unaligned_32*, !dbg !7995
  %l19.i932 = bitcast %union.unaligned_32* %678 to i32*, !dbg !7995
  %679 = load i32, i32* %l19.i932, align 1, !dbg !7995
  store i32 %679, i32* %x.addr.i81.i872, align 4, !dbg !7996
  %680 = load i32, i32* %x.addr.i81.i872, align 4, !dbg !7997
  %shl.i82.i933 = shl i32 %680, 8, !dbg !7998
  %and.i83.i934 = and i32 %shl.i82.i933, 65280, !dbg !7999
  %681 = load i32, i32* %x.addr.i81.i872, align 4, !dbg !8000
  %shr.i84.i935 = lshr i32 %681, 8, !dbg !8001
  %and1.i85.i936 = and i32 %shr.i84.i935, 255, !dbg !8002
  %or.i86.i937 = or i32 %and.i83.i934, %and1.i85.i936, !dbg !8003
  %shl2.i87.i938 = shl i32 %or.i86.i937, 16, !dbg !8004
  %682 = load i32, i32* %x.addr.i81.i872, align 4, !dbg !8005
  %shr3.i88.i939 = lshr i32 %682, 16, !dbg !8006
  %shl4.i89.i940 = shl i32 %shr3.i88.i939, 8, !dbg !8007
  %and5.i90.i941 = and i32 %shl4.i89.i940, 65280, !dbg !8008
  %683 = load i32, i32* %x.addr.i81.i872, align 4, !dbg !8009
  %shr6.i91.i942 = lshr i32 %683, 16, !dbg !8010
  %shr7.i92.i943 = lshr i32 %shr6.i91.i942, 8, !dbg !8011
  %and8.i93.i944 = and i32 %shr7.i92.i943, 255, !dbg !8012
  %or9.i94.i945 = or i32 %and5.i90.i941, %and8.i93.i944, !dbg !8013
  %or10.i95.i946 = or i32 %shl2.i87.i938, %or9.i94.i945, !dbg !8014
  %684 = load i32, i32* %re_index.i879, align 4, !dbg !8015
  %and21.i947 = and i32 %684, 7, !dbg !8016
  %shl22.i948 = shl i32 %or10.i95.i946, %and21.i947, !dbg !8017
  store i32 %shl22.i948, i32* %re_cache.i880, align 4, !dbg !8018
  %685 = load i32, i32* %n.i882, align 4, !dbg !8019
  %sub.i949 = sub nsw i32 0, %685, !dbg !8020
  store i32 %sub.i949, i32* %nb_bits.i883, align 4, !dbg !8021
  %686 = load i32, i32* %re_cache.i880, align 4, !dbg !8022
  %687 = load i32, i32* %nb_bits.i883, align 4, !dbg !8023
  %conv23.i950 = trunc i32 %687 to i8, !dbg !8023
  %call24.i951 = call i32 @NEG_USR32(i32 %686, i8 signext %conv23.i950) #9, !dbg !8024
  %688 = load i32, i32* %code.i878, align 4, !dbg !8025
  %add25.i952 = add i32 %call24.i951, %688, !dbg !8026
  store i32 %add25.i952, i32* %index1.i884, align 4, !dbg !8027
  %689 = load i32, i32* %index1.i884, align 4, !dbg !8028
  %idxprom26.i953 = zext i32 %689 to i64, !dbg !8029
  %690 = load [2 x i16]*, [2 x i16]** %table.addr.i875, align 8, !dbg !8029
  %arrayidx27.i954 = getelementptr inbounds [2 x i16], [2 x i16]* %690, i64 %idxprom26.i953, !dbg !8029
  %arrayidx28.i955 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i954, i64 0, i64 0, !dbg !8029
  %691 = load i16, i16* %arrayidx28.i955, align 2, !dbg !8029
  %conv29.i956 = sext i16 %691 to i32, !dbg !8029
  store i32 %conv29.i956, i32* %code.i878, align 4, !dbg !8030
  %692 = load i32, i32* %index1.i884, align 4, !dbg !8031
  %idxprom30.i957 = zext i32 %692 to i64, !dbg !8032
  %693 = load [2 x i16]*, [2 x i16]** %table.addr.i875, align 8, !dbg !8032
  %arrayidx31.i958 = getelementptr inbounds [2 x i16], [2 x i16]* %693, i64 %idxprom30.i957, !dbg !8032
  %arrayidx32.i959 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i958, i64 0, i64 1, !dbg !8032
  %694 = load i16, i16* %arrayidx32.i959, align 2, !dbg !8032
  %conv33.i960 = sext i16 %694 to i32, !dbg !8032
  store i32 %conv33.i960, i32* %n.i882, align 4, !dbg !8033
  %695 = load i32, i32* %max_depth.addr.i877, align 4, !dbg !8034
  %cmp34.i961 = icmp sgt i32 %695, 2, !dbg !8035
  br i1 %cmp34.i961, label %land.lhs.true36.i964, label %if.end.i1006, !dbg !8036

land.lhs.true36.i964:                             ; preds = %cond.end.i962
  %696 = load i32, i32* %n.i882, align 4, !dbg !8037
  %cmp37.i963 = icmp slt i32 %696, 0, !dbg !8038
  br i1 %cmp37.i963, label %if.then39.i967, label %if.end.i1006, !dbg !8039

if.then39.i967:                                   ; preds = %land.lhs.true36.i964
  %697 = load i32, i32* %re_size_plus8.i881, align 4, !dbg !8040
  %698 = load i32, i32* %re_index.i879, align 4, !dbg !8041
  %699 = load i32, i32* %nb_bits.i883, align 4, !dbg !8042
  %add40.i965 = add i32 %698, %699, !dbg !8043
  %cmp41.i966 = icmp ugt i32 %697, %add40.i965, !dbg !8044
  br i1 %cmp41.i966, label %cond.true43.i969, label %cond.false45.i970, !dbg !8045

cond.true43.i969:                                 ; preds = %if.then39.i967
  %700 = load i32, i32* %re_index.i879, align 4, !dbg !8046
  %701 = load i32, i32* %nb_bits.i883, align 4, !dbg !8047
  %add44.i968 = add i32 %700, %701, !dbg !8048
  br label %cond.end46.i1005, !dbg !8049

cond.false45.i970:                                ; preds = %if.then39.i967
  %702 = load i32, i32* %re_size_plus8.i881, align 4, !dbg !8050
  br label %cond.end46.i1005, !dbg !8051

cond.end46.i1005:                                 ; preds = %cond.false45.i970, %cond.true43.i969
  %cond47.i971 = phi i32 [ %add44.i968, %cond.true43.i969 ], [ %702, %cond.false45.i970 ], !dbg !8052
  store i32 %cond47.i971, i32* %re_index.i879, align 4, !dbg !8053
  %703 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i874, align 8, !dbg !8054
  %buffer48.i972 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %703, i32 0, i32 0, !dbg !8055
  %704 = load i8*, i8** %buffer48.i972, align 8, !dbg !8055
  %705 = load i32, i32* %re_index.i879, align 4, !dbg !8056
  %shr49.i973 = lshr i32 %705, 3, !dbg !8057
  %idx.ext50.i974 = zext i32 %shr49.i973 to i64, !dbg !8058
  %add.ptr51.i975 = getelementptr inbounds i8, i8* %704, i64 %idx.ext50.i974, !dbg !8058
  %706 = bitcast i8* %add.ptr51.i975 to %union.unaligned_32*, !dbg !8059
  %l52.i976 = bitcast %union.unaligned_32* %706 to i32*, !dbg !8059
  %707 = load i32, i32* %l52.i976, align 1, !dbg !8059
  store i32 %707, i32* %x.addr.i96.i871, align 4, !dbg !8060
  %708 = load i32, i32* %x.addr.i96.i871, align 4, !dbg !8061
  %shl.i97.i977 = shl i32 %708, 8, !dbg !8062
  %and.i98.i978 = and i32 %shl.i97.i977, 65280, !dbg !8063
  %709 = load i32, i32* %x.addr.i96.i871, align 4, !dbg !8064
  %shr.i99.i979 = lshr i32 %709, 8, !dbg !8065
  %and1.i100.i980 = and i32 %shr.i99.i979, 255, !dbg !8066
  %or.i101.i981 = or i32 %and.i98.i978, %and1.i100.i980, !dbg !8067
  %shl2.i102.i982 = shl i32 %or.i101.i981, 16, !dbg !8068
  %710 = load i32, i32* %x.addr.i96.i871, align 4, !dbg !8069
  %shr3.i103.i983 = lshr i32 %710, 16, !dbg !8070
  %shl4.i104.i984 = shl i32 %shr3.i103.i983, 8, !dbg !8071
  %and5.i105.i985 = and i32 %shl4.i104.i984, 65280, !dbg !8072
  %711 = load i32, i32* %x.addr.i96.i871, align 4, !dbg !8073
  %shr6.i106.i986 = lshr i32 %711, 16, !dbg !8074
  %shr7.i107.i987 = lshr i32 %shr6.i106.i986, 8, !dbg !8075
  %and8.i108.i988 = and i32 %shr7.i107.i987, 255, !dbg !8076
  %or9.i109.i989 = or i32 %and5.i105.i985, %and8.i108.i988, !dbg !8077
  %or10.i110.i990 = or i32 %shl2.i102.i982, %or9.i109.i989, !dbg !8078
  %712 = load i32, i32* %re_index.i879, align 4, !dbg !8079
  %and54.i991 = and i32 %712, 7, !dbg !8080
  %shl55.i992 = shl i32 %or10.i110.i990, %and54.i991, !dbg !8081
  store i32 %shl55.i992, i32* %re_cache.i880, align 4, !dbg !8082
  %713 = load i32, i32* %n.i882, align 4, !dbg !8083
  %sub56.i993 = sub nsw i32 0, %713, !dbg !8084
  store i32 %sub56.i993, i32* %nb_bits.i883, align 4, !dbg !8085
  %714 = load i32, i32* %re_cache.i880, align 4, !dbg !8086
  %715 = load i32, i32* %nb_bits.i883, align 4, !dbg !8087
  %conv57.i994 = trunc i32 %715 to i8, !dbg !8087
  %call58.i995 = call i32 @NEG_USR32(i32 %714, i8 signext %conv57.i994) #9, !dbg !8088
  %716 = load i32, i32* %code.i878, align 4, !dbg !8089
  %add59.i996 = add i32 %call58.i995, %716, !dbg !8090
  store i32 %add59.i996, i32* %index1.i884, align 4, !dbg !8091
  %717 = load i32, i32* %index1.i884, align 4, !dbg !8092
  %idxprom60.i997 = zext i32 %717 to i64, !dbg !8093
  %718 = load [2 x i16]*, [2 x i16]** %table.addr.i875, align 8, !dbg !8093
  %arrayidx61.i998 = getelementptr inbounds [2 x i16], [2 x i16]* %718, i64 %idxprom60.i997, !dbg !8093
  %arrayidx62.i999 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i998, i64 0, i64 0, !dbg !8093
  %719 = load i16, i16* %arrayidx62.i999, align 2, !dbg !8093
  %conv63.i1000 = sext i16 %719 to i32, !dbg !8093
  store i32 %conv63.i1000, i32* %code.i878, align 4, !dbg !8094
  %720 = load i32, i32* %index1.i884, align 4, !dbg !8095
  %idxprom64.i1001 = zext i32 %720 to i64, !dbg !8096
  %721 = load [2 x i16]*, [2 x i16]** %table.addr.i875, align 8, !dbg !8096
  %arrayidx65.i1002 = getelementptr inbounds [2 x i16], [2 x i16]* %721, i64 %idxprom64.i1001, !dbg !8096
  %arrayidx66.i1003 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i1002, i64 0, i64 1, !dbg !8096
  %722 = load i16, i16* %arrayidx66.i1003, align 2, !dbg !8096
  %conv67.i1004 = sext i16 %722 to i32, !dbg !8096
  store i32 %conv67.i1004, i32* %n.i882, align 4, !dbg !8097
  br label %if.end.i1006, !dbg !8098

if.end.i1006:                                     ; preds = %cond.end46.i1005, %land.lhs.true36.i964, %cond.end.i962
  br label %if.end68.i1007, !dbg !8099

if.end68.i1007:                                   ; preds = %if.end.i1006, %land.lhs.true.i920, %for.body250
  %723 = load i32, i32* %n.i882, align 4, !dbg !8100
  %724 = load i32, i32* %re_cache.i880, align 4, !dbg !8101
  %shl70.i1008 = shl i32 %724, %723, !dbg !8101
  store i32 %shl70.i1008, i32* %re_cache.i880, align 4, !dbg !8101
  %725 = load i32, i32* %re_size_plus8.i881, align 4, !dbg !8102
  %726 = load i32, i32* %re_index.i879, align 4, !dbg !8103
  %727 = load i32, i32* %n.i882, align 4, !dbg !8104
  %add71.i1009 = add i32 %726, %727, !dbg !8105
  %cmp72.i1010 = icmp ugt i32 %725, %add71.i1009, !dbg !8106
  br i1 %cmp72.i1010, label %cond.true74.i1012, label %cond.false76.i1013, !dbg !8107

cond.true74.i1012:                                ; preds = %if.end68.i1007
  %728 = load i32, i32* %re_index.i879, align 4, !dbg !8108
  %729 = load i32, i32* %n.i882, align 4, !dbg !8109
  %add75.i1011 = add i32 %728, %729, !dbg !8110
  br label %get_vlc2.exit1016, !dbg !8111

cond.false76.i1013:                               ; preds = %if.end68.i1007
  %730 = load i32, i32* %re_size_plus8.i881, align 4, !dbg !8112
  br label %get_vlc2.exit1016, !dbg !8113

get_vlc2.exit1016:                                ; preds = %cond.true74.i1012, %cond.false76.i1013
  %cond78.i1014 = phi i32 [ %add75.i1011, %cond.true74.i1012 ], [ %730, %cond.false76.i1013 ], !dbg !8114
  store i32 %cond78.i1014, i32* %re_index.i879, align 4, !dbg !8115
  %731 = load i32, i32* %re_index.i879, align 4, !dbg !8116
  %732 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i874, align 8, !dbg !8117
  %index80.i1015 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %732, i32 0, i32 2, !dbg !8118
  store i32 %731, i32* %index80.i1015, align 8, !dbg !8119
  %733 = load i32, i32* %code.i878, align 4, !dbg !8120
  store i32 %733, i32* %delta, align 4, !dbg !8121
  %734 = load i32, i32* %i, align 4, !dbg !8122
  %sub254 = sub nsw i32 %734, 1, !dbg !8123
  %idxprom255 = sext i32 %sub254 to i64, !dbg !8124
  %735 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8124
  %qu_sf_idx256 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %735, i32 0, i32 6, !dbg !8125
  %arrayidx257 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx256, i64 0, i64 %idxprom255, !dbg !8124
  %736 = load i32, i32* %arrayidx257, align 4, !dbg !8124
  %737 = load i32, i32* %delta, align 4, !dbg !8126
  %add258 = add nsw i32 %736, %737, !dbg !8127
  %and259 = and i32 %add258, 63, !dbg !8128
  %738 = load i32, i32* %i, align 4, !dbg !8129
  %idxprom260 = sext i32 %738 to i64, !dbg !8130
  %739 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8130
  %qu_sf_idx261 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %739, i32 0, i32 6, !dbg !8131
  %arrayidx262 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx261, i64 0, i64 %idxprom260, !dbg !8130
  store i32 %and259, i32* %arrayidx262, align 4, !dbg !8132
  br label %for.inc263, !dbg !8133

for.inc263:                                       ; preds = %get_vlc2.exit1016
  %740 = load i32, i32* %i, align 4, !dbg !8134
  %inc264 = add nsw i32 %740, 1, !dbg !8134
  store i32 %inc264, i32* %i, align 4, !dbg !8134
  br label %for.cond247, !dbg !8136, !llvm.loop !8137

for.end265:                                       ; preds = %for.cond247
  br label %if.end266

if.end266:                                        ; preds = %for.end265, %for.end242
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %for.end194
  br label %sw.epilog, !dbg !8139

sw.epilog:                                        ; preds = %entry, %if.end267, %if.end178, %if.end102, %for.end
  %741 = load i32, i32* %weight_idx, align 4, !dbg !8140
  %tobool268 = icmp ne i32 %741, 0, !dbg !8140
  br i1 %tobool268, label %land.lhs.true, label %if.end272, !dbg !8142

land.lhs.true:                                    ; preds = %sw.epilog
  %742 = load i32, i32* %weight_idx, align 4, !dbg !8143
  %cmp269 = icmp slt i32 %742, 3, !dbg !8145
  br i1 %cmp269, label %if.then270, label %if.end272, !dbg !8146

if.then270:                                       ; preds = %land.lhs.true
  %743 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8147
  %744 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8148
  %745 = load i32, i32* %weight_idx, align 4, !dbg !8149
  %746 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8150
  %call271 = call i32 @subtract_sf_weights(%struct.Atrac3pChanUnitCtx* %743, %struct.Atrac3pChanParams* %744, i32 %745, %struct.AVCodecContext* %746), !dbg !8151
  store i32 %call271, i32* %retval, align 4, !dbg !8152
  br label %return, !dbg !8152

if.end272:                                        ; preds = %land.lhs.true, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !8153
  br label %return, !dbg !8153

return:                                           ; preds = %if.end272, %if.then270, %if.then77
  %747 = load i32, i32* %retval, align 4, !dbg !8154
  ret i32 %747, !dbg !8154
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #7 !dbg !8155 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8159, metadata !1324), !dbg !8160
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !8161, metadata !1324), !dbg !8162
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !8163, metadata !1324), !dbg !8164
  %0 = load i32, i32* %bits.addr, align 4, !dbg !8165
  %conv = zext i32 %0 to i64, !dbg !8165
  %sub = sub i64 32, %conv, !dbg !8166
  %conv1 = trunc i64 %sub to i32, !dbg !8167
  store i32 %conv1, i32* %shift, align 4, !dbg !8164
  call void @llvm.dbg.declare(metadata %union.anon* %v, metadata !8168, metadata !1324), !dbg !8173
  %u = bitcast %union.anon* %v to i32*, !dbg !8174
  %1 = load i32, i32* %val.addr, align 4, !dbg !8175
  %2 = load i32, i32* %shift, align 4, !dbg !8176
  %shl = shl i32 %1, %2, !dbg !8177
  store i32 %shl, i32* %u, align 4, !dbg !8174
  %s = bitcast %union.anon* %v to i32*, !dbg !8178
  %3 = load i32, i32* %s, align 4, !dbg !8178
  %4 = load i32, i32* %shift, align 4, !dbg !8179
  %shr = ashr i32 %3, %4, !dbg !8180
  ret i32 %shr, !dbg !8181
}

; Function Attrs: nounwind uwtable
define internal i32 @subtract_sf_weights(%struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanParams* %chan, i32 %wtab_idx, %struct.AVCodecContext* %avctx) #3 !dbg !8182 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %chan.addr = alloca %struct.Atrac3pChanParams*, align 8
  %wtab_idx.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %weights_tab = alloca i8*, align 8
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !8183, metadata !1324), !dbg !8184
  store %struct.Atrac3pChanParams* %chan, %struct.Atrac3pChanParams** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan.addr, metadata !8185, metadata !1324), !dbg !8186
  store i32 %wtab_idx, i32* %wtab_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wtab_idx.addr, metadata !8187, metadata !1324), !dbg !8188
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !8189, metadata !1324), !dbg !8190
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8191, metadata !1324), !dbg !8192
  call void @llvm.dbg.declare(metadata i8** %weights_tab, metadata !8193, metadata !1324), !dbg !8194
  %0 = load i32, i32* %wtab_idx.addr, align 4, !dbg !8195
  %sub = sub nsw i32 %0, 1, !dbg !8196
  %idxprom = sext i32 %sub to i64, !dbg !8197
  %arrayidx = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* @atrac3p_sf_weights, i64 0, i64 %idxprom, !dbg !8197
  %arrayidx1 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx, i64 0, i64 0, !dbg !8197
  store i8* %arrayidx1, i8** %weights_tab, align 8, !dbg !8194
  store i32 0, i32* %i, align 4, !dbg !8198
  br label %for.cond, !dbg !8200

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8201
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8204
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 3, !dbg !8205
  %3 = load i32, i32* %used_quant_units, align 4, !dbg !8205
  %cmp = icmp slt i32 %1, %3, !dbg !8206
  br i1 %cmp, label %for.body, label %for.end, !dbg !8207

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !8208
  %idxprom2 = sext i32 %4 to i64, !dbg !8210
  %5 = load i8*, i8** %weights_tab, align 8, !dbg !8210
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 %idxprom2, !dbg !8210
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !8210
  %conv = sext i8 %6 to i32, !dbg !8210
  %7 = load i32, i32* %i, align 4, !dbg !8211
  %idxprom4 = sext i32 %7 to i64, !dbg !8212
  %8 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !8212
  %qu_sf_idx = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %8, i32 0, i32 6, !dbg !8213
  %arrayidx5 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx, i64 0, i64 %idxprom4, !dbg !8212
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !8214
  %sub6 = sub nsw i32 %9, %conv, !dbg !8214
  store i32 %sub6, i32* %arrayidx5, align 4, !dbg !8214
  %10 = load i32, i32* %i, align 4, !dbg !8215
  %idxprom7 = sext i32 %10 to i64, !dbg !8217
  %11 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !8217
  %qu_sf_idx8 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %11, i32 0, i32 6, !dbg !8218
  %arrayidx9 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx8, i64 0, i64 %idxprom7, !dbg !8217
  %12 = load i32, i32* %arrayidx9, align 4, !dbg !8217
  %cmp10 = icmp slt i32 %12, 0, !dbg !8219
  br i1 %cmp10, label %if.then, label %lor.lhs.false, !dbg !8220

lor.lhs.false:                                    ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !8221
  %idxprom12 = sext i32 %13 to i64, !dbg !8223
  %14 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !8223
  %qu_sf_idx13 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %14, i32 0, i32 6, !dbg !8224
  %arrayidx14 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx13, i64 0, i64 %idxprom12, !dbg !8223
  %15 = load i32, i32* %arrayidx14, align 4, !dbg !8223
  %cmp15 = icmp sgt i32 %15, 63, !dbg !8225
  br i1 %cmp15, label %if.then, label %if.end, !dbg !8226

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8227
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !8227
  %18 = load i32, i32* %i, align 4, !dbg !8229
  %19 = load i32, i32* %i, align 4, !dbg !8230
  %idxprom17 = sext i32 %19 to i64, !dbg !8231
  %20 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan.addr, align 8, !dbg !8231
  %qu_sf_idx18 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %20, i32 0, i32 6, !dbg !8232
  %arrayidx19 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx18, i64 0, i64 %idxprom17, !dbg !8231
  %21 = load i32, i32* %arrayidx19, align 4, !dbg !8231
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i32 0, i32 0), i32 %18, i32 %21), !dbg !8233
  store i32 -1094995529, i32* %retval, align 4, !dbg !8234
  br label %return, !dbg !8234

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !8235

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !8236
  %inc = add nsw i32 %22, 1, !dbg !8236
  store i32 %inc, i32* %i, align 4, !dbg !8236
  br label %for.cond, !dbg !8238, !llvm.loop !8239

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8241
  br label %return, !dbg !8241

return:                                           ; preds = %for.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !8242
  ret i32 %23, !dbg !8242
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_channel_code_tab(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, %struct.AVCodecContext* %avctx) #3 !dbg !8243 {
entry:
  %x.addr.i96.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i452, metadata !2531, metadata !1324), !dbg !8244
  %x.addr.i81.i453 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i453, metadata !2531, metadata !1324), !dbg !8256
  %x.addr.i.i454 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i454, metadata !2531, metadata !1324), !dbg !8258
  %s.addr.i455 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i455, metadata !3291, metadata !1324), !dbg !8260
  %table.addr.i456 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i456, metadata !3293, metadata !1324), !dbg !8261
  %bits.addr.i457 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i457, metadata !3295, metadata !1324), !dbg !8262
  %max_depth.addr.i458 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i458, metadata !3297, metadata !1324), !dbg !8263
  %code.i459 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i459, metadata !3299, metadata !1324), !dbg !8264
  %re_index.i460 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i460, metadata !3301, metadata !1324), !dbg !8265
  %re_cache.i461 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i461, metadata !3303, metadata !1324), !dbg !8266
  %re_size_plus8.i462 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i462, metadata !3305, metadata !1324), !dbg !8267
  %n.i463 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i463, metadata !3307, metadata !1324), !dbg !8268
  %nb_bits.i464 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i464, metadata !3309, metadata !1324), !dbg !8269
  %index1.i465 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i465, metadata !3311, metadata !1324), !dbg !8270
  %x.addr.i96.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i306, metadata !2531, metadata !1324), !dbg !8271
  %x.addr.i81.i307 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i307, metadata !2531, metadata !1324), !dbg !8280
  %x.addr.i.i308 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i308, metadata !2531, metadata !1324), !dbg !8282
  %s.addr.i309 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i309, metadata !3291, metadata !1324), !dbg !8284
  %table.addr.i310 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i310, metadata !3293, metadata !1324), !dbg !8285
  %bits.addr.i311 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i311, metadata !3295, metadata !1324), !dbg !8286
  %max_depth.addr.i312 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i312, metadata !3297, metadata !1324), !dbg !8287
  %code.i313 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i313, metadata !3299, metadata !1324), !dbg !8288
  %re_index.i314 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i314, metadata !3301, metadata !1324), !dbg !8289
  %re_cache.i315 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i315, metadata !3303, metadata !1324), !dbg !8290
  %re_size_plus8.i316 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i316, metadata !3305, metadata !1324), !dbg !8291
  %n.i317 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i317, metadata !3307, metadata !1324), !dbg !8292
  %nb_bits.i318 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i318, metadata !3309, metadata !1324), !dbg !8293
  %index1.i319 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i319, metadata !3311, metadata !1324), !dbg !8294
  %x.addr.i96.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i160, metadata !2531, metadata !1324), !dbg !8295
  %x.addr.i81.i161 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i161, metadata !2531, metadata !1324), !dbg !8299
  %x.addr.i.i162 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i162, metadata !2531, metadata !1324), !dbg !8301
  %s.addr.i163 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i163, metadata !3291, metadata !1324), !dbg !8303
  %table.addr.i164 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i164, metadata !3293, metadata !1324), !dbg !8304
  %bits.addr.i165 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i165, metadata !3295, metadata !1324), !dbg !8305
  %max_depth.addr.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i166, metadata !3297, metadata !1324), !dbg !8306
  %code.i167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i167, metadata !3299, metadata !1324), !dbg !8307
  %re_index.i168 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i168, metadata !3301, metadata !1324), !dbg !8308
  %re_cache.i169 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i169, metadata !3303, metadata !1324), !dbg !8309
  %re_size_plus8.i170 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i170, metadata !3305, metadata !1324), !dbg !8310
  %n.i171 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i171, metadata !3307, metadata !1324), !dbg !8311
  %nb_bits.i172 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i172, metadata !3309, metadata !1324), !dbg !8312
  %index1.i173 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i173, metadata !3311, metadata !1324), !dbg !8313
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !8314
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !8323
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !8325
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !8327
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !8328
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !8329
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !8330
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !8331
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !8332
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !8333
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !8334
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !8335
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !8336
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !8337
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %num_vals = alloca i32, align 4
  %num_bits = alloca i32, align 4
  %pred = alloca i32, align 4
  %mask = alloca i32, align 4
  %vlc_tab = alloca %struct.VLC*, align 8
  %delta_vlc = alloca %struct.VLC*, align 8
  %chan = alloca %struct.Atrac3pChanParams*, align 8
  %ref_chan = alloca %struct.Atrac3pChanParams*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8338, metadata !1324), !dbg !8339
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !8340, metadata !1324), !dbg !8341
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !8342, metadata !1324), !dbg !8343
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !8344, metadata !1324), !dbg !8345
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8346, metadata !1324), !dbg !8347
  call void @llvm.dbg.declare(metadata i32* %num_vals, metadata !8348, metadata !1324), !dbg !8349
  call void @llvm.dbg.declare(metadata i32* %num_bits, metadata !8350, metadata !1324), !dbg !8351
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !8352, metadata !1324), !dbg !8353
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8354, metadata !1324), !dbg !8355
  %0 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8356
  %use_full_table = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %0, i32 0, i32 6, !dbg !8357
  %1 = load i32, i32* %use_full_table, align 8, !dbg !8357
  %tobool = icmp ne i32 %1, 0, !dbg !8356
  %cond = select i1 %tobool, i32 7, i32 3, !dbg !8356
  store i32 %cond, i32* %mask, align 4, !dbg !8355
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc_tab, metadata !8358, metadata !1324), !dbg !8359
  call void @llvm.dbg.declare(metadata %struct.VLC** %delta_vlc, metadata !8360, metadata !1324), !dbg !8361
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan, metadata !8362, metadata !1324), !dbg !8363
  %2 = load i32, i32* %ch_num.addr, align 4, !dbg !8364
  %idxprom = sext i32 %2 to i64, !dbg !8365
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8365
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !8366
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !8365
  store %struct.Atrac3pChanParams* %arrayidx, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8363
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %ref_chan, metadata !8367, metadata !1324), !dbg !8368
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8369
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 12, !dbg !8370
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !8369
  store %struct.Atrac3pChanParams* %arrayidx2, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !8368
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8371
  %call = call i32 @get_bits1(%struct.GetBitContext* %5), !dbg !8372
  %6 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8373
  %table_type = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %6, i32 0, i32 4, !dbg !8374
  store i32 %call, i32* %table_type, align 8, !dbg !8375
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8376
  %call3 = call i32 @get_bits(%struct.GetBitContext* %7, i32 2), !dbg !8377
  switch i32 %call3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb26
    i32 2, label %sw.bb63
    i32 3, label %sw.bb113
  ], !dbg !8378

sw.bb:                                            ; preds = %entry
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8379
  %use_full_table4 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 6, !dbg !8380
  %9 = load i32, i32* %use_full_table4, align 8, !dbg !8380
  %add = add nsw i32 %9, 2, !dbg !8381
  store i32 %add, i32* %num_bits, align 4, !dbg !8382
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8383
  %11 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8384
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8385
  %call5 = call i32 @get_num_ct_values(%struct.GetBitContext* %10, %struct.Atrac3pChanUnitCtx* %11, %struct.AVCodecContext* %12), !dbg !8386
  store i32 %call5, i32* %num_vals, align 4, !dbg !8387
  %13 = load i32, i32* %num_vals, align 4, !dbg !8388
  %cmp = icmp slt i32 %13, 0, !dbg !8390
  br i1 %cmp, label %if.then, label %if.end, !dbg !8391

if.then:                                          ; preds = %sw.bb
  %14 = load i32, i32* %num_vals, align 4, !dbg !8392
  store i32 %14, i32* %retval, align 4, !dbg !8394
  br label %return, !dbg !8394

if.end:                                           ; preds = %sw.bb
  store i32 0, i32* %i, align 4, !dbg !8395
  br label %for.cond, !dbg !8398

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !8399
  %16 = load i32, i32* %num_vals, align 4, !dbg !8402
  %cmp6 = icmp slt i32 %15, %16, !dbg !8403
  br i1 %cmp6, label %for.body, label %for.end, !dbg !8404

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %i, align 4, !dbg !8405
  %idxprom7 = sext i32 %17 to i64, !dbg !8409
  %18 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8409
  %qu_wordlen = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %18, i32 0, i32 5, !dbg !8410
  %arrayidx8 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen, i64 0, i64 %idxprom7, !dbg !8409
  %19 = load i32, i32* %arrayidx8, align 4, !dbg !8409
  %tobool9 = icmp ne i32 %19, 0, !dbg !8409
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !8409

if.then10:                                        ; preds = %for.body
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8411
  %21 = load i32, i32* %num_bits, align 4, !dbg !8414
  %call11 = call i32 @get_bits(%struct.GetBitContext* %20, i32 %21), !dbg !8415
  %22 = load i32, i32* %i, align 4, !dbg !8416
  %idxprom12 = sext i32 %22 to i64, !dbg !8417
  %23 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8417
  %qu_tab_idx = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %23, i32 0, i32 7, !dbg !8418
  %arrayidx13 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx, i64 0, i64 %idxprom12, !dbg !8417
  store i32 %call11, i32* %arrayidx13, align 4, !dbg !8419
  br label %if.end25, !dbg !8420

if.else:                                          ; preds = %for.body
  %24 = load i32, i32* %ch_num.addr, align 4, !dbg !8421
  %tobool14 = icmp ne i32 %24, 0, !dbg !8421
  br i1 %tobool14, label %land.lhs.true, label %if.end24, !dbg !8424

land.lhs.true:                                    ; preds = %if.else
  %25 = load i32, i32* %i, align 4, !dbg !8425
  %idxprom15 = sext i32 %25 to i64, !dbg !8427
  %26 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !8427
  %qu_wordlen16 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %26, i32 0, i32 5, !dbg !8428
  %arrayidx17 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen16, i64 0, i64 %idxprom15, !dbg !8427
  %27 = load i32, i32* %arrayidx17, align 4, !dbg !8427
  %tobool18 = icmp ne i32 %27, 0, !dbg !8427
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !8429

if.then19:                                        ; preds = %land.lhs.true
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8430
  %call20 = call i32 @get_bits1(%struct.GetBitContext* %28), !dbg !8432
  %29 = load i32, i32* %i, align 4, !dbg !8433
  %idxprom21 = sext i32 %29 to i64, !dbg !8434
  %30 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8434
  %qu_tab_idx22 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %30, i32 0, i32 7, !dbg !8435
  %arrayidx23 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx22, i64 0, i64 %idxprom21, !dbg !8434
  store i32 %call20, i32* %arrayidx23, align 4, !dbg !8436
  br label %if.end24, !dbg !8434

if.end24:                                         ; preds = %if.then19, %land.lhs.true, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then10
  br label %for.inc, !dbg !8437

for.inc:                                          ; preds = %if.end25
  %31 = load i32, i32* %i, align 4, !dbg !8439
  %inc = add nsw i32 %31, 1, !dbg !8439
  store i32 %inc, i32* %i, align 4, !dbg !8439
  br label %for.cond, !dbg !8441, !llvm.loop !8442

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !8444

sw.bb26:                                          ; preds = %entry
  %32 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8445
  %use_full_table27 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %32, i32 0, i32 6, !dbg !8446
  %33 = load i32, i32* %use_full_table27, align 8, !dbg !8446
  %tobool28 = icmp ne i32 %33, 0, !dbg !8445
  %cond29 = select i1 %tobool28, %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 1), %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i32 0, i32 0), !dbg !8445
  store %struct.VLC* %cond29, %struct.VLC** %vlc_tab, align 8, !dbg !8447
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8448
  %35 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8449
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8450
  %call30 = call i32 @get_num_ct_values(%struct.GetBitContext* %34, %struct.Atrac3pChanUnitCtx* %35, %struct.AVCodecContext* %36), !dbg !8451
  store i32 %call30, i32* %num_vals, align 4, !dbg !8452
  %37 = load i32, i32* %num_vals, align 4, !dbg !8453
  %cmp31 = icmp slt i32 %37, 0, !dbg !8455
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !8456

if.then32:                                        ; preds = %sw.bb26
  %38 = load i32, i32* %num_vals, align 4, !dbg !8457
  store i32 %38, i32* %retval, align 4, !dbg !8459
  br label %return, !dbg !8459

if.end33:                                         ; preds = %sw.bb26
  store i32 0, i32* %i, align 4, !dbg !8460
  br label %for.cond34, !dbg !8462

for.cond34:                                       ; preds = %for.inc60, %if.end33
  %39 = load i32, i32* %i, align 4, !dbg !8463
  %40 = load i32, i32* %num_vals, align 4, !dbg !8465
  %cmp35 = icmp slt i32 %39, %40, !dbg !8466
  br i1 %cmp35, label %for.body36, label %for.end62, !dbg !8467

for.body36:                                       ; preds = %for.cond34
  %41 = load i32, i32* %i, align 4, !dbg !8468
  %idxprom37 = sext i32 %41 to i64, !dbg !8470
  %42 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8470
  %qu_wordlen38 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %42, i32 0, i32 5, !dbg !8471
  %arrayidx39 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen38, i64 0, i64 %idxprom37, !dbg !8470
  %43 = load i32, i32* %arrayidx39, align 4, !dbg !8470
  %tobool40 = icmp ne i32 %43, 0, !dbg !8470
  br i1 %tobool40, label %if.then41, label %if.else46, !dbg !8470

if.then41:                                        ; preds = %for.body36
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8472
  %45 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !8473
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %45, i32 0, i32 1, !dbg !8474
  %46 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !8474
  %47 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !8475
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %47, i32 0, i32 0, !dbg !8476
  %48 = load i32, i32* %bits, align 8, !dbg !8476
  store %struct.GetBitContext* %44, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8477
  store [2 x i16]* %46, [2 x i16]** %table.addr.i, align 8, !dbg !8477
  store i32 %48, i32* %bits.addr.i, align 4, !dbg !8477
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !8477
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8478
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %49, i32 0, i32 2, !dbg !8479
  %50 = load i32, i32* %index.i, align 8, !dbg !8479
  store i32 %50, i32* %re_index.i, align 4, !dbg !8332
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8480
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %51, i32 0, i32 4, !dbg !8481
  %52 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !8481
  store i32 %52, i32* %re_size_plus8.i, align 4, !dbg !8334
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8482
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %53, i32 0, i32 0, !dbg !8483
  %54 = load i8*, i8** %buffer.i, align 8, !dbg !8483
  %55 = load i32, i32* %re_index.i, align 4, !dbg !8484
  %shr.i = lshr i32 %55, 3, !dbg !8485
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !8486
  %add.ptr.i = getelementptr inbounds i8, i8* %54, i64 %idx.ext.i, !dbg !8486
  %56 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !8487
  %l.i = bitcast %union.unaligned_32* %56 to i32*, !dbg !8487
  %57 = load i32, i32* %l.i, align 1, !dbg !8487
  store i32 %57, i32* %x.addr.i.i, align 4, !dbg !8488
  %58 = load i32, i32* %x.addr.i.i, align 4, !dbg !8489
  %shl.i.i = shl i32 %58, 8, !dbg !8490
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !8491
  %59 = load i32, i32* %x.addr.i.i, align 4, !dbg !8492
  %shr.i.i = lshr i32 %59, 8, !dbg !8493
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !8494
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !8495
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !8496
  %60 = load i32, i32* %x.addr.i.i, align 4, !dbg !8497
  %shr3.i.i = lshr i32 %60, 16, !dbg !8498
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !8499
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !8500
  %61 = load i32, i32* %x.addr.i.i, align 4, !dbg !8501
  %shr6.i.i = lshr i32 %61, 16, !dbg !8502
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !8503
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !8504
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !8505
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !8506
  %62 = load i32, i32* %re_index.i, align 4, !dbg !8507
  %and.i = and i32 %62, 7, !dbg !8508
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !8509
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !8510
  %63 = load i32, i32* %re_cache.i, align 4, !dbg !8511
  %64 = load i32, i32* %bits.addr.i, align 4, !dbg !8512
  %conv.i = trunc i32 %64 to i8, !dbg !8512
  %call2.i = call i32 @NEG_USR32(i32 %63, i8 signext %conv.i) #9, !dbg !8513
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !8514
  %65 = load i32, i32* %index1.i, align 4, !dbg !8515
  %idxprom.i = zext i32 %65 to i64, !dbg !8516
  %66 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8516
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %66, i64 %idxprom.i, !dbg !8516
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !8516
  %67 = load i16, i16* %arrayidx3.i, align 2, !dbg !8516
  %conv4.i = sext i16 %67 to i32, !dbg !8516
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !8517
  %68 = load i32, i32* %index1.i, align 4, !dbg !8518
  %idxprom5.i = zext i32 %68 to i64, !dbg !8519
  %69 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8519
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %69, i64 %idxprom5.i, !dbg !8519
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !8519
  %70 = load i16, i16* %arrayidx7.i, align 2, !dbg !8519
  %conv8.i = sext i16 %70 to i32, !dbg !8519
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !8520
  %71 = load i32, i32* %max_depth.addr.i, align 4, !dbg !8521
  %cmp.i = icmp sgt i32 %71, 1, !dbg !8522
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !8523

land.lhs.true.i:                                  ; preds = %if.then41
  %72 = load i32, i32* %n.i, align 4, !dbg !8524
  %cmp10.i = icmp slt i32 %72, 0, !dbg !8525
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !8526

if.then.i:                                        ; preds = %land.lhs.true.i
  %73 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8527
  %74 = load i32, i32* %re_index.i, align 4, !dbg !8528
  %75 = load i32, i32* %bits.addr.i, align 4, !dbg !8529
  %add.i = add i32 %74, %75, !dbg !8530
  %cmp12.i = icmp ugt i32 %73, %add.i, !dbg !8531
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !8532

cond.true.i:                                      ; preds = %if.then.i
  %76 = load i32, i32* %re_index.i, align 4, !dbg !8533
  %77 = load i32, i32* %bits.addr.i, align 4, !dbg !8534
  %add14.i = add i32 %76, %77, !dbg !8535
  br label %cond.end.i, !dbg !8536

cond.false.i:                                     ; preds = %if.then.i
  %78 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8537
  br label %cond.end.i, !dbg !8538

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %78, %cond.false.i ], !dbg !8539
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !8540
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8541
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %79, i32 0, i32 0, !dbg !8542
  %80 = load i8*, i8** %buffer15.i, align 8, !dbg !8542
  %81 = load i32, i32* %re_index.i, align 4, !dbg !8543
  %shr16.i = lshr i32 %81, 3, !dbg !8544
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !8545
  %add.ptr18.i = getelementptr inbounds i8, i8* %80, i64 %idx.ext17.i, !dbg !8545
  %82 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !8546
  %l19.i = bitcast %union.unaligned_32* %82 to i32*, !dbg !8546
  %83 = load i32, i32* %l19.i, align 1, !dbg !8546
  store i32 %83, i32* %x.addr.i81.i, align 4, !dbg !8547
  %84 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8548
  %shl.i82.i = shl i32 %84, 8, !dbg !8549
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !8550
  %85 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8551
  %shr.i84.i = lshr i32 %85, 8, !dbg !8552
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !8553
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !8554
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !8555
  %86 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8556
  %shr3.i88.i = lshr i32 %86, 16, !dbg !8557
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !8558
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !8559
  %87 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8560
  %shr6.i91.i = lshr i32 %87, 16, !dbg !8561
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !8562
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !8563
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !8564
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !8565
  %88 = load i32, i32* %re_index.i, align 4, !dbg !8566
  %and21.i = and i32 %88, 7, !dbg !8567
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !8568
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !8569
  %89 = load i32, i32* %n.i, align 4, !dbg !8570
  %sub.i = sub nsw i32 0, %89, !dbg !8571
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !8572
  %90 = load i32, i32* %re_cache.i, align 4, !dbg !8573
  %91 = load i32, i32* %nb_bits.i, align 4, !dbg !8574
  %conv23.i = trunc i32 %91 to i8, !dbg !8574
  %call24.i = call i32 @NEG_USR32(i32 %90, i8 signext %conv23.i) #9, !dbg !8575
  %92 = load i32, i32* %code.i, align 4, !dbg !8576
  %add25.i = add i32 %call24.i, %92, !dbg !8577
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !8578
  %93 = load i32, i32* %index1.i, align 4, !dbg !8579
  %idxprom26.i = zext i32 %93 to i64, !dbg !8580
  %94 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8580
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %94, i64 %idxprom26.i, !dbg !8580
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !8580
  %95 = load i16, i16* %arrayidx28.i, align 2, !dbg !8580
  %conv29.i = sext i16 %95 to i32, !dbg !8580
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !8581
  %96 = load i32, i32* %index1.i, align 4, !dbg !8582
  %idxprom30.i = zext i32 %96 to i64, !dbg !8583
  %97 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8583
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %97, i64 %idxprom30.i, !dbg !8583
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !8583
  %98 = load i16, i16* %arrayidx32.i, align 2, !dbg !8583
  %conv33.i = sext i16 %98 to i32, !dbg !8583
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !8584
  %99 = load i32, i32* %max_depth.addr.i, align 4, !dbg !8585
  %cmp34.i = icmp sgt i32 %99, 2, !dbg !8586
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !8587

land.lhs.true36.i:                                ; preds = %cond.end.i
  %100 = load i32, i32* %n.i, align 4, !dbg !8588
  %cmp37.i = icmp slt i32 %100, 0, !dbg !8589
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !8590

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %101 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8591
  %102 = load i32, i32* %re_index.i, align 4, !dbg !8592
  %103 = load i32, i32* %nb_bits.i, align 4, !dbg !8593
  %add40.i = add i32 %102, %103, !dbg !8594
  %cmp41.i = icmp ugt i32 %101, %add40.i, !dbg !8595
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !8596

cond.true43.i:                                    ; preds = %if.then39.i
  %104 = load i32, i32* %re_index.i, align 4, !dbg !8597
  %105 = load i32, i32* %nb_bits.i, align 4, !dbg !8598
  %add44.i = add i32 %104, %105, !dbg !8599
  br label %cond.end46.i, !dbg !8600

cond.false45.i:                                   ; preds = %if.then39.i
  %106 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8601
  br label %cond.end46.i, !dbg !8602

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %106, %cond.false45.i ], !dbg !8603
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !8604
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8605
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %107, i32 0, i32 0, !dbg !8606
  %108 = load i8*, i8** %buffer48.i, align 8, !dbg !8606
  %109 = load i32, i32* %re_index.i, align 4, !dbg !8607
  %shr49.i = lshr i32 %109, 3, !dbg !8608
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !8609
  %add.ptr51.i = getelementptr inbounds i8, i8* %108, i64 %idx.ext50.i, !dbg !8609
  %110 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !8610
  %l52.i = bitcast %union.unaligned_32* %110 to i32*, !dbg !8610
  %111 = load i32, i32* %l52.i, align 1, !dbg !8610
  store i32 %111, i32* %x.addr.i96.i, align 4, !dbg !8611
  %112 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8612
  %shl.i97.i = shl i32 %112, 8, !dbg !8613
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !8614
  %113 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8615
  %shr.i99.i = lshr i32 %113, 8, !dbg !8616
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !8617
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !8618
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !8619
  %114 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8620
  %shr3.i103.i = lshr i32 %114, 16, !dbg !8621
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !8622
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !8623
  %115 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8624
  %shr6.i106.i = lshr i32 %115, 16, !dbg !8625
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !8626
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !8627
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !8628
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !8629
  %116 = load i32, i32* %re_index.i, align 4, !dbg !8630
  %and54.i = and i32 %116, 7, !dbg !8631
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !8632
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !8633
  %117 = load i32, i32* %n.i, align 4, !dbg !8634
  %sub56.i = sub nsw i32 0, %117, !dbg !8635
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !8636
  %118 = load i32, i32* %re_cache.i, align 4, !dbg !8637
  %119 = load i32, i32* %nb_bits.i, align 4, !dbg !8638
  %conv57.i = trunc i32 %119 to i8, !dbg !8638
  %call58.i = call i32 @NEG_USR32(i32 %118, i8 signext %conv57.i) #9, !dbg !8639
  %120 = load i32, i32* %code.i, align 4, !dbg !8640
  %add59.i = add i32 %call58.i, %120, !dbg !8641
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !8642
  %121 = load i32, i32* %index1.i, align 4, !dbg !8643
  %idxprom60.i = zext i32 %121 to i64, !dbg !8644
  %122 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8644
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %122, i64 %idxprom60.i, !dbg !8644
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !8644
  %123 = load i16, i16* %arrayidx62.i, align 2, !dbg !8644
  %conv63.i = sext i16 %123 to i32, !dbg !8644
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !8645
  %124 = load i32, i32* %index1.i, align 4, !dbg !8646
  %idxprom64.i = zext i32 %124 to i64, !dbg !8647
  %125 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8647
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %125, i64 %idxprom64.i, !dbg !8647
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !8647
  %126 = load i16, i16* %arrayidx66.i, align 2, !dbg !8647
  %conv67.i = sext i16 %126 to i32, !dbg !8647
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !8648
  br label %if.end.i, !dbg !8649

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !8650

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.then41
  %127 = load i32, i32* %n.i, align 4, !dbg !8651
  %128 = load i32, i32* %re_cache.i, align 4, !dbg !8652
  %shl70.i = shl i32 %128, %127, !dbg !8652
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !8652
  %129 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8653
  %130 = load i32, i32* %re_index.i, align 4, !dbg !8654
  %131 = load i32, i32* %n.i, align 4, !dbg !8655
  %add71.i = add i32 %130, %131, !dbg !8656
  %cmp72.i = icmp ugt i32 %129, %add71.i, !dbg !8657
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !8658

cond.true74.i:                                    ; preds = %if.end68.i
  %132 = load i32, i32* %re_index.i, align 4, !dbg !8659
  %133 = load i32, i32* %n.i, align 4, !dbg !8660
  %add75.i = add i32 %132, %133, !dbg !8661
  br label %get_vlc2.exit, !dbg !8662

cond.false76.i:                                   ; preds = %if.end68.i
  %134 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8663
  br label %get_vlc2.exit, !dbg !8664

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %134, %cond.false76.i ], !dbg !8665
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !8666
  %135 = load i32, i32* %re_index.i, align 4, !dbg !8667
  %136 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8668
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %136, i32 0, i32 2, !dbg !8669
  store i32 %135, i32* %index80.i, align 8, !dbg !8670
  %137 = load i32, i32* %code.i, align 4, !dbg !8671
  %138 = load i32, i32* %i, align 4, !dbg !8672
  %idxprom43 = sext i32 %138 to i64, !dbg !8673
  %139 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8673
  %qu_tab_idx44 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %139, i32 0, i32 7, !dbg !8674
  %arrayidx45 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx44, i64 0, i64 %idxprom43, !dbg !8673
  store i32 %137, i32* %arrayidx45, align 4, !dbg !8675
  br label %if.end59, !dbg !8676

if.else46:                                        ; preds = %for.body36
  %140 = load i32, i32* %ch_num.addr, align 4, !dbg !8677
  %tobool47 = icmp ne i32 %140, 0, !dbg !8677
  br i1 %tobool47, label %land.lhs.true48, label %if.end58, !dbg !8680

land.lhs.true48:                                  ; preds = %if.else46
  %141 = load i32, i32* %i, align 4, !dbg !8681
  %idxprom49 = sext i32 %141 to i64, !dbg !8683
  %142 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !8683
  %qu_wordlen50 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %142, i32 0, i32 5, !dbg !8684
  %arrayidx51 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen50, i64 0, i64 %idxprom49, !dbg !8683
  %143 = load i32, i32* %arrayidx51, align 4, !dbg !8683
  %tobool52 = icmp ne i32 %143, 0, !dbg !8683
  br i1 %tobool52, label %if.then53, label %if.end58, !dbg !8685

if.then53:                                        ; preds = %land.lhs.true48
  %144 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8686
  %call54 = call i32 @get_bits1(%struct.GetBitContext* %144), !dbg !8688
  %145 = load i32, i32* %i, align 4, !dbg !8689
  %idxprom55 = sext i32 %145 to i64, !dbg !8690
  %146 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8690
  %qu_tab_idx56 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %146, i32 0, i32 7, !dbg !8691
  %arrayidx57 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx56, i64 0, i64 %idxprom55, !dbg !8690
  store i32 %call54, i32* %arrayidx57, align 4, !dbg !8692
  br label %if.end58, !dbg !8690

if.end58:                                         ; preds = %if.then53, %land.lhs.true48, %if.else46
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %get_vlc2.exit
  br label %for.inc60, !dbg !8693

for.inc60:                                        ; preds = %if.end59
  %147 = load i32, i32* %i, align 4, !dbg !8695
  %inc61 = add nsw i32 %147, 1, !dbg !8695
  store i32 %inc61, i32* %i, align 4, !dbg !8695
  br label %for.cond34, !dbg !8697, !llvm.loop !8698

for.end62:                                        ; preds = %for.cond34
  br label %sw.epilog, !dbg !8700

sw.bb63:                                          ; preds = %entry
  %148 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8701
  %use_full_table64 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %148, i32 0, i32 6, !dbg !8703
  %149 = load i32, i32* %use_full_table64, align 8, !dbg !8703
  %tobool65 = icmp ne i32 %149, 0, !dbg !8701
  br i1 %tobool65, label %if.then66, label %if.else67, !dbg !8704

if.then66:                                        ; preds = %sw.bb63
  store %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 1), %struct.VLC** %vlc_tab, align 8, !dbg !8705
  store %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 2), %struct.VLC** %delta_vlc, align 8, !dbg !8707
  br label %if.end68, !dbg !8708

if.else67:                                        ; preds = %sw.bb63
  store %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i32 0, i32 0), %struct.VLC** %vlc_tab, align 8, !dbg !8709
  store %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i32 0, i32 0), %struct.VLC** %delta_vlc, align 8, !dbg !8711
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then66
  store i32 0, i32* %pred, align 4, !dbg !8712
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8713
  %151 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !8714
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8715
  %call69 = call i32 @get_num_ct_values(%struct.GetBitContext* %150, %struct.Atrac3pChanUnitCtx* %151, %struct.AVCodecContext* %152), !dbg !8716
  store i32 %call69, i32* %num_vals, align 4, !dbg !8717
  %153 = load i32, i32* %num_vals, align 4, !dbg !8718
  %cmp70 = icmp slt i32 %153, 0, !dbg !8720
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !8721

if.then71:                                        ; preds = %if.end68
  %154 = load i32, i32* %num_vals, align 4, !dbg !8722
  store i32 %154, i32* %retval, align 4, !dbg !8724
  br label %return, !dbg !8724

if.end72:                                         ; preds = %if.end68
  store i32 0, i32* %i, align 4, !dbg !8725
  br label %for.cond73, !dbg !8727

for.cond73:                                       ; preds = %for.inc110, %if.end72
  %155 = load i32, i32* %i, align 4, !dbg !8728
  %156 = load i32, i32* %num_vals, align 4, !dbg !8730
  %cmp74 = icmp slt i32 %155, %156, !dbg !8731
  br i1 %cmp74, label %for.body75, label %for.end112, !dbg !8732

for.body75:                                       ; preds = %for.cond73
  %157 = load i32, i32* %i, align 4, !dbg !8733
  %idxprom76 = sext i32 %157 to i64, !dbg !8735
  %158 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !8735
  %qu_wordlen77 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %158, i32 0, i32 5, !dbg !8736
  %arrayidx78 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen77, i64 0, i64 %idxprom76, !dbg !8735
  %159 = load i32, i32* %arrayidx78, align 4, !dbg !8735
  %tobool79 = icmp ne i32 %159, 0, !dbg !8735
  br i1 %tobool79, label %if.then80, label %if.else96, !dbg !8735

if.then80:                                        ; preds = %for.body75
  %160 = load i32, i32* %i, align 4, !dbg !8737
  %tobool81 = icmp ne i32 %160, 0, !dbg !8737
  br i1 %tobool81, label %cond.false, label %cond.true, !dbg !8739

cond.true:                                        ; preds = %if.then80
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8740
  %162 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !8741
  %table82 = getelementptr inbounds %struct.VLC, %struct.VLC* %162, i32 0, i32 1, !dbg !8742
  %163 = load [2 x i16]*, [2 x i16]** %table82, align 8, !dbg !8742
  %164 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !8743
  %bits83 = getelementptr inbounds %struct.VLC, %struct.VLC* %164, i32 0, i32 0, !dbg !8744
  %165 = load i32, i32* %bits83, align 8, !dbg !8744
  store %struct.GetBitContext* %161, %struct.GetBitContext** %s.addr.i163, align 8, !dbg !8745
  store [2 x i16]* %163, [2 x i16]** %table.addr.i164, align 8, !dbg !8745
  store i32 %165, i32* %bits.addr.i165, align 4, !dbg !8745
  store i32 1, i32* %max_depth.addr.i166, align 4, !dbg !8745
  %166 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i163, align 8, !dbg !8746
  %index.i174 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %166, i32 0, i32 2, !dbg !8747
  %167 = load i32, i32* %index.i174, align 8, !dbg !8747
  store i32 %167, i32* %re_index.i168, align 4, !dbg !8308
  %168 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i163, align 8, !dbg !8748
  %size_in_bits_plus8.i175 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %168, i32 0, i32 4, !dbg !8749
  %169 = load i32, i32* %size_in_bits_plus8.i175, align 8, !dbg !8749
  store i32 %169, i32* %re_size_plus8.i170, align 4, !dbg !8310
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i163, align 8, !dbg !8750
  %buffer.i176 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %170, i32 0, i32 0, !dbg !8751
  %171 = load i8*, i8** %buffer.i176, align 8, !dbg !8751
  %172 = load i32, i32* %re_index.i168, align 4, !dbg !8752
  %shr.i177 = lshr i32 %172, 3, !dbg !8753
  %idx.ext.i178 = zext i32 %shr.i177 to i64, !dbg !8754
  %add.ptr.i179 = getelementptr inbounds i8, i8* %171, i64 %idx.ext.i178, !dbg !8754
  %173 = bitcast i8* %add.ptr.i179 to %union.unaligned_32*, !dbg !8755
  %l.i180 = bitcast %union.unaligned_32* %173 to i32*, !dbg !8755
  %174 = load i32, i32* %l.i180, align 1, !dbg !8755
  store i32 %174, i32* %x.addr.i.i162, align 4, !dbg !8756
  %175 = load i32, i32* %x.addr.i.i162, align 4, !dbg !8757
  %shl.i.i181 = shl i32 %175, 8, !dbg !8758
  %and.i.i182 = and i32 %shl.i.i181, 65280, !dbg !8759
  %176 = load i32, i32* %x.addr.i.i162, align 4, !dbg !8760
  %shr.i.i183 = lshr i32 %176, 8, !dbg !8761
  %and1.i.i184 = and i32 %shr.i.i183, 255, !dbg !8762
  %or.i.i185 = or i32 %and.i.i182, %and1.i.i184, !dbg !8763
  %shl2.i.i186 = shl i32 %or.i.i185, 16, !dbg !8764
  %177 = load i32, i32* %x.addr.i.i162, align 4, !dbg !8765
  %shr3.i.i187 = lshr i32 %177, 16, !dbg !8766
  %shl4.i.i188 = shl i32 %shr3.i.i187, 8, !dbg !8767
  %and5.i.i189 = and i32 %shl4.i.i188, 65280, !dbg !8768
  %178 = load i32, i32* %x.addr.i.i162, align 4, !dbg !8769
  %shr6.i.i190 = lshr i32 %178, 16, !dbg !8770
  %shr7.i.i191 = lshr i32 %shr6.i.i190, 8, !dbg !8771
  %and8.i.i192 = and i32 %shr7.i.i191, 255, !dbg !8772
  %or9.i.i193 = or i32 %and5.i.i189, %and8.i.i192, !dbg !8773
  %or10.i.i194 = or i32 %shl2.i.i186, %or9.i.i193, !dbg !8774
  %179 = load i32, i32* %re_index.i168, align 4, !dbg !8775
  %and.i195 = and i32 %179, 7, !dbg !8776
  %shl.i196 = shl i32 %or10.i.i194, %and.i195, !dbg !8777
  store i32 %shl.i196, i32* %re_cache.i169, align 4, !dbg !8778
  %180 = load i32, i32* %re_cache.i169, align 4, !dbg !8779
  %181 = load i32, i32* %bits.addr.i165, align 4, !dbg !8780
  %conv.i197 = trunc i32 %181 to i8, !dbg !8780
  %call2.i198 = call i32 @NEG_USR32(i32 %180, i8 signext %conv.i197) #9, !dbg !8781
  store i32 %call2.i198, i32* %index1.i173, align 4, !dbg !8782
  %182 = load i32, i32* %index1.i173, align 4, !dbg !8783
  %idxprom.i199 = zext i32 %182 to i64, !dbg !8784
  %183 = load [2 x i16]*, [2 x i16]** %table.addr.i164, align 8, !dbg !8784
  %arrayidx.i200 = getelementptr inbounds [2 x i16], [2 x i16]* %183, i64 %idxprom.i199, !dbg !8784
  %arrayidx3.i201 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i200, i64 0, i64 0, !dbg !8784
  %184 = load i16, i16* %arrayidx3.i201, align 2, !dbg !8784
  %conv4.i202 = sext i16 %184 to i32, !dbg !8784
  store i32 %conv4.i202, i32* %code.i167, align 4, !dbg !8785
  %185 = load i32, i32* %index1.i173, align 4, !dbg !8786
  %idxprom5.i203 = zext i32 %185 to i64, !dbg !8787
  %186 = load [2 x i16]*, [2 x i16]** %table.addr.i164, align 8, !dbg !8787
  %arrayidx6.i204 = getelementptr inbounds [2 x i16], [2 x i16]* %186, i64 %idxprom5.i203, !dbg !8787
  %arrayidx7.i205 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i204, i64 0, i64 1, !dbg !8787
  %187 = load i16, i16* %arrayidx7.i205, align 2, !dbg !8787
  %conv8.i206 = sext i16 %187 to i32, !dbg !8787
  store i32 %conv8.i206, i32* %n.i171, align 4, !dbg !8788
  %188 = load i32, i32* %max_depth.addr.i166, align 4, !dbg !8789
  %cmp.i207 = icmp sgt i32 %188, 1, !dbg !8790
  br i1 %cmp.i207, label %land.lhs.true.i209, label %if.end68.i296, !dbg !8791

land.lhs.true.i209:                               ; preds = %cond.true
  %189 = load i32, i32* %n.i171, align 4, !dbg !8792
  %cmp10.i208 = icmp slt i32 %189, 0, !dbg !8793
  br i1 %cmp10.i208, label %if.then.i212, label %if.end68.i296, !dbg !8794

if.then.i212:                                     ; preds = %land.lhs.true.i209
  %190 = load i32, i32* %re_size_plus8.i170, align 4, !dbg !8795
  %191 = load i32, i32* %re_index.i168, align 4, !dbg !8796
  %192 = load i32, i32* %bits.addr.i165, align 4, !dbg !8797
  %add.i210 = add i32 %191, %192, !dbg !8798
  %cmp12.i211 = icmp ugt i32 %190, %add.i210, !dbg !8799
  br i1 %cmp12.i211, label %cond.true.i214, label %cond.false.i215, !dbg !8800

cond.true.i214:                                   ; preds = %if.then.i212
  %193 = load i32, i32* %re_index.i168, align 4, !dbg !8801
  %194 = load i32, i32* %bits.addr.i165, align 4, !dbg !8802
  %add14.i213 = add i32 %193, %194, !dbg !8803
  br label %cond.end.i251, !dbg !8804

cond.false.i215:                                  ; preds = %if.then.i212
  %195 = load i32, i32* %re_size_plus8.i170, align 4, !dbg !8805
  br label %cond.end.i251, !dbg !8806

cond.end.i251:                                    ; preds = %cond.false.i215, %cond.true.i214
  %cond.i216 = phi i32 [ %add14.i213, %cond.true.i214 ], [ %195, %cond.false.i215 ], !dbg !8807
  store i32 %cond.i216, i32* %re_index.i168, align 4, !dbg !8808
  %196 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i163, align 8, !dbg !8809
  %buffer15.i217 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %196, i32 0, i32 0, !dbg !8810
  %197 = load i8*, i8** %buffer15.i217, align 8, !dbg !8810
  %198 = load i32, i32* %re_index.i168, align 4, !dbg !8811
  %shr16.i218 = lshr i32 %198, 3, !dbg !8812
  %idx.ext17.i219 = zext i32 %shr16.i218 to i64, !dbg !8813
  %add.ptr18.i220 = getelementptr inbounds i8, i8* %197, i64 %idx.ext17.i219, !dbg !8813
  %199 = bitcast i8* %add.ptr18.i220 to %union.unaligned_32*, !dbg !8814
  %l19.i221 = bitcast %union.unaligned_32* %199 to i32*, !dbg !8814
  %200 = load i32, i32* %l19.i221, align 1, !dbg !8814
  store i32 %200, i32* %x.addr.i81.i161, align 4, !dbg !8815
  %201 = load i32, i32* %x.addr.i81.i161, align 4, !dbg !8816
  %shl.i82.i222 = shl i32 %201, 8, !dbg !8817
  %and.i83.i223 = and i32 %shl.i82.i222, 65280, !dbg !8818
  %202 = load i32, i32* %x.addr.i81.i161, align 4, !dbg !8819
  %shr.i84.i224 = lshr i32 %202, 8, !dbg !8820
  %and1.i85.i225 = and i32 %shr.i84.i224, 255, !dbg !8821
  %or.i86.i226 = or i32 %and.i83.i223, %and1.i85.i225, !dbg !8822
  %shl2.i87.i227 = shl i32 %or.i86.i226, 16, !dbg !8823
  %203 = load i32, i32* %x.addr.i81.i161, align 4, !dbg !8824
  %shr3.i88.i228 = lshr i32 %203, 16, !dbg !8825
  %shl4.i89.i229 = shl i32 %shr3.i88.i228, 8, !dbg !8826
  %and5.i90.i230 = and i32 %shl4.i89.i229, 65280, !dbg !8827
  %204 = load i32, i32* %x.addr.i81.i161, align 4, !dbg !8828
  %shr6.i91.i231 = lshr i32 %204, 16, !dbg !8829
  %shr7.i92.i232 = lshr i32 %shr6.i91.i231, 8, !dbg !8830
  %and8.i93.i233 = and i32 %shr7.i92.i232, 255, !dbg !8831
  %or9.i94.i234 = or i32 %and5.i90.i230, %and8.i93.i233, !dbg !8832
  %or10.i95.i235 = or i32 %shl2.i87.i227, %or9.i94.i234, !dbg !8833
  %205 = load i32, i32* %re_index.i168, align 4, !dbg !8834
  %and21.i236 = and i32 %205, 7, !dbg !8835
  %shl22.i237 = shl i32 %or10.i95.i235, %and21.i236, !dbg !8836
  store i32 %shl22.i237, i32* %re_cache.i169, align 4, !dbg !8837
  %206 = load i32, i32* %n.i171, align 4, !dbg !8838
  %sub.i238 = sub nsw i32 0, %206, !dbg !8839
  store i32 %sub.i238, i32* %nb_bits.i172, align 4, !dbg !8840
  %207 = load i32, i32* %re_cache.i169, align 4, !dbg !8841
  %208 = load i32, i32* %nb_bits.i172, align 4, !dbg !8842
  %conv23.i239 = trunc i32 %208 to i8, !dbg !8842
  %call24.i240 = call i32 @NEG_USR32(i32 %207, i8 signext %conv23.i239) #9, !dbg !8843
  %209 = load i32, i32* %code.i167, align 4, !dbg !8844
  %add25.i241 = add i32 %call24.i240, %209, !dbg !8845
  store i32 %add25.i241, i32* %index1.i173, align 4, !dbg !8846
  %210 = load i32, i32* %index1.i173, align 4, !dbg !8847
  %idxprom26.i242 = zext i32 %210 to i64, !dbg !8848
  %211 = load [2 x i16]*, [2 x i16]** %table.addr.i164, align 8, !dbg !8848
  %arrayidx27.i243 = getelementptr inbounds [2 x i16], [2 x i16]* %211, i64 %idxprom26.i242, !dbg !8848
  %arrayidx28.i244 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i243, i64 0, i64 0, !dbg !8848
  %212 = load i16, i16* %arrayidx28.i244, align 2, !dbg !8848
  %conv29.i245 = sext i16 %212 to i32, !dbg !8848
  store i32 %conv29.i245, i32* %code.i167, align 4, !dbg !8849
  %213 = load i32, i32* %index1.i173, align 4, !dbg !8850
  %idxprom30.i246 = zext i32 %213 to i64, !dbg !8851
  %214 = load [2 x i16]*, [2 x i16]** %table.addr.i164, align 8, !dbg !8851
  %arrayidx31.i247 = getelementptr inbounds [2 x i16], [2 x i16]* %214, i64 %idxprom30.i246, !dbg !8851
  %arrayidx32.i248 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i247, i64 0, i64 1, !dbg !8851
  %215 = load i16, i16* %arrayidx32.i248, align 2, !dbg !8851
  %conv33.i249 = sext i16 %215 to i32, !dbg !8851
  store i32 %conv33.i249, i32* %n.i171, align 4, !dbg !8852
  %216 = load i32, i32* %max_depth.addr.i166, align 4, !dbg !8853
  %cmp34.i250 = icmp sgt i32 %216, 2, !dbg !8854
  br i1 %cmp34.i250, label %land.lhs.true36.i253, label %if.end.i295, !dbg !8855

land.lhs.true36.i253:                             ; preds = %cond.end.i251
  %217 = load i32, i32* %n.i171, align 4, !dbg !8856
  %cmp37.i252 = icmp slt i32 %217, 0, !dbg !8857
  br i1 %cmp37.i252, label %if.then39.i256, label %if.end.i295, !dbg !8858

if.then39.i256:                                   ; preds = %land.lhs.true36.i253
  %218 = load i32, i32* %re_size_plus8.i170, align 4, !dbg !8859
  %219 = load i32, i32* %re_index.i168, align 4, !dbg !8860
  %220 = load i32, i32* %nb_bits.i172, align 4, !dbg !8861
  %add40.i254 = add i32 %219, %220, !dbg !8862
  %cmp41.i255 = icmp ugt i32 %218, %add40.i254, !dbg !8863
  br i1 %cmp41.i255, label %cond.true43.i258, label %cond.false45.i259, !dbg !8864

cond.true43.i258:                                 ; preds = %if.then39.i256
  %221 = load i32, i32* %re_index.i168, align 4, !dbg !8865
  %222 = load i32, i32* %nb_bits.i172, align 4, !dbg !8866
  %add44.i257 = add i32 %221, %222, !dbg !8867
  br label %cond.end46.i294, !dbg !8868

cond.false45.i259:                                ; preds = %if.then39.i256
  %223 = load i32, i32* %re_size_plus8.i170, align 4, !dbg !8869
  br label %cond.end46.i294, !dbg !8870

cond.end46.i294:                                  ; preds = %cond.false45.i259, %cond.true43.i258
  %cond47.i260 = phi i32 [ %add44.i257, %cond.true43.i258 ], [ %223, %cond.false45.i259 ], !dbg !8871
  store i32 %cond47.i260, i32* %re_index.i168, align 4, !dbg !8872
  %224 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i163, align 8, !dbg !8873
  %buffer48.i261 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %224, i32 0, i32 0, !dbg !8874
  %225 = load i8*, i8** %buffer48.i261, align 8, !dbg !8874
  %226 = load i32, i32* %re_index.i168, align 4, !dbg !8875
  %shr49.i262 = lshr i32 %226, 3, !dbg !8876
  %idx.ext50.i263 = zext i32 %shr49.i262 to i64, !dbg !8877
  %add.ptr51.i264 = getelementptr inbounds i8, i8* %225, i64 %idx.ext50.i263, !dbg !8877
  %227 = bitcast i8* %add.ptr51.i264 to %union.unaligned_32*, !dbg !8878
  %l52.i265 = bitcast %union.unaligned_32* %227 to i32*, !dbg !8878
  %228 = load i32, i32* %l52.i265, align 1, !dbg !8878
  store i32 %228, i32* %x.addr.i96.i160, align 4, !dbg !8879
  %229 = load i32, i32* %x.addr.i96.i160, align 4, !dbg !8880
  %shl.i97.i266 = shl i32 %229, 8, !dbg !8881
  %and.i98.i267 = and i32 %shl.i97.i266, 65280, !dbg !8882
  %230 = load i32, i32* %x.addr.i96.i160, align 4, !dbg !8883
  %shr.i99.i268 = lshr i32 %230, 8, !dbg !8884
  %and1.i100.i269 = and i32 %shr.i99.i268, 255, !dbg !8885
  %or.i101.i270 = or i32 %and.i98.i267, %and1.i100.i269, !dbg !8886
  %shl2.i102.i271 = shl i32 %or.i101.i270, 16, !dbg !8887
  %231 = load i32, i32* %x.addr.i96.i160, align 4, !dbg !8888
  %shr3.i103.i272 = lshr i32 %231, 16, !dbg !8889
  %shl4.i104.i273 = shl i32 %shr3.i103.i272, 8, !dbg !8890
  %and5.i105.i274 = and i32 %shl4.i104.i273, 65280, !dbg !8891
  %232 = load i32, i32* %x.addr.i96.i160, align 4, !dbg !8892
  %shr6.i106.i275 = lshr i32 %232, 16, !dbg !8893
  %shr7.i107.i276 = lshr i32 %shr6.i106.i275, 8, !dbg !8894
  %and8.i108.i277 = and i32 %shr7.i107.i276, 255, !dbg !8895
  %or9.i109.i278 = or i32 %and5.i105.i274, %and8.i108.i277, !dbg !8896
  %or10.i110.i279 = or i32 %shl2.i102.i271, %or9.i109.i278, !dbg !8897
  %233 = load i32, i32* %re_index.i168, align 4, !dbg !8898
  %and54.i280 = and i32 %233, 7, !dbg !8899
  %shl55.i281 = shl i32 %or10.i110.i279, %and54.i280, !dbg !8900
  store i32 %shl55.i281, i32* %re_cache.i169, align 4, !dbg !8901
  %234 = load i32, i32* %n.i171, align 4, !dbg !8902
  %sub56.i282 = sub nsw i32 0, %234, !dbg !8903
  store i32 %sub56.i282, i32* %nb_bits.i172, align 4, !dbg !8904
  %235 = load i32, i32* %re_cache.i169, align 4, !dbg !8905
  %236 = load i32, i32* %nb_bits.i172, align 4, !dbg !8906
  %conv57.i283 = trunc i32 %236 to i8, !dbg !8906
  %call58.i284 = call i32 @NEG_USR32(i32 %235, i8 signext %conv57.i283) #9, !dbg !8907
  %237 = load i32, i32* %code.i167, align 4, !dbg !8908
  %add59.i285 = add i32 %call58.i284, %237, !dbg !8909
  store i32 %add59.i285, i32* %index1.i173, align 4, !dbg !8910
  %238 = load i32, i32* %index1.i173, align 4, !dbg !8911
  %idxprom60.i286 = zext i32 %238 to i64, !dbg !8912
  %239 = load [2 x i16]*, [2 x i16]** %table.addr.i164, align 8, !dbg !8912
  %arrayidx61.i287 = getelementptr inbounds [2 x i16], [2 x i16]* %239, i64 %idxprom60.i286, !dbg !8912
  %arrayidx62.i288 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i287, i64 0, i64 0, !dbg !8912
  %240 = load i16, i16* %arrayidx62.i288, align 2, !dbg !8912
  %conv63.i289 = sext i16 %240 to i32, !dbg !8912
  store i32 %conv63.i289, i32* %code.i167, align 4, !dbg !8913
  %241 = load i32, i32* %index1.i173, align 4, !dbg !8914
  %idxprom64.i290 = zext i32 %241 to i64, !dbg !8915
  %242 = load [2 x i16]*, [2 x i16]** %table.addr.i164, align 8, !dbg !8915
  %arrayidx65.i291 = getelementptr inbounds [2 x i16], [2 x i16]* %242, i64 %idxprom64.i290, !dbg !8915
  %arrayidx66.i292 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i291, i64 0, i64 1, !dbg !8915
  %243 = load i16, i16* %arrayidx66.i292, align 2, !dbg !8915
  %conv67.i293 = sext i16 %243 to i32, !dbg !8915
  store i32 %conv67.i293, i32* %n.i171, align 4, !dbg !8916
  br label %if.end.i295, !dbg !8917

if.end.i295:                                      ; preds = %cond.end46.i294, %land.lhs.true36.i253, %cond.end.i251
  br label %if.end68.i296, !dbg !8918

if.end68.i296:                                    ; preds = %if.end.i295, %land.lhs.true.i209, %cond.true
  %244 = load i32, i32* %n.i171, align 4, !dbg !8919
  %245 = load i32, i32* %re_cache.i169, align 4, !dbg !8920
  %shl70.i297 = shl i32 %245, %244, !dbg !8920
  store i32 %shl70.i297, i32* %re_cache.i169, align 4, !dbg !8920
  %246 = load i32, i32* %re_size_plus8.i170, align 4, !dbg !8921
  %247 = load i32, i32* %re_index.i168, align 4, !dbg !8922
  %248 = load i32, i32* %n.i171, align 4, !dbg !8923
  %add71.i298 = add i32 %247, %248, !dbg !8924
  %cmp72.i299 = icmp ugt i32 %246, %add71.i298, !dbg !8925
  br i1 %cmp72.i299, label %cond.true74.i301, label %cond.false76.i302, !dbg !8926

cond.true74.i301:                                 ; preds = %if.end68.i296
  %249 = load i32, i32* %re_index.i168, align 4, !dbg !8927
  %250 = load i32, i32* %n.i171, align 4, !dbg !8928
  %add75.i300 = add i32 %249, %250, !dbg !8929
  br label %get_vlc2.exit305, !dbg !8930

cond.false76.i302:                                ; preds = %if.end68.i296
  %251 = load i32, i32* %re_size_plus8.i170, align 4, !dbg !8931
  br label %get_vlc2.exit305, !dbg !8932

get_vlc2.exit305:                                 ; preds = %cond.true74.i301, %cond.false76.i302
  %cond78.i303 = phi i32 [ %add75.i300, %cond.true74.i301 ], [ %251, %cond.false76.i302 ], !dbg !8933
  store i32 %cond78.i303, i32* %re_index.i168, align 4, !dbg !8934
  %252 = load i32, i32* %re_index.i168, align 4, !dbg !8935
  %253 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i163, align 8, !dbg !8936
  %index80.i304 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %253, i32 0, i32 2, !dbg !8937
  store i32 %252, i32* %index80.i304, align 8, !dbg !8938
  %254 = load i32, i32* %code.i167, align 4, !dbg !8939
  br label %cond.end, !dbg !8940

cond.false:                                       ; preds = %if.then80
  %255 = load i32, i32* %pred, align 4, !dbg !8941
  %256 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8942
  %257 = load %struct.VLC*, %struct.VLC** %delta_vlc, align 8, !dbg !8943
  %table85 = getelementptr inbounds %struct.VLC, %struct.VLC* %257, i32 0, i32 1, !dbg !8944
  %258 = load [2 x i16]*, [2 x i16]** %table85, align 8, !dbg !8944
  %259 = load %struct.VLC*, %struct.VLC** %delta_vlc, align 8, !dbg !8945
  %bits86 = getelementptr inbounds %struct.VLC, %struct.VLC* %259, i32 0, i32 0, !dbg !8946
  %260 = load i32, i32* %bits86, align 8, !dbg !8946
  store %struct.GetBitContext* %256, %struct.GetBitContext** %s.addr.i309, align 8, !dbg !8947
  store [2 x i16]* %258, [2 x i16]** %table.addr.i310, align 8, !dbg !8947
  store i32 %260, i32* %bits.addr.i311, align 4, !dbg !8947
  store i32 1, i32* %max_depth.addr.i312, align 4, !dbg !8947
  %261 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i309, align 8, !dbg !8948
  %index.i320 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %261, i32 0, i32 2, !dbg !8949
  %262 = load i32, i32* %index.i320, align 8, !dbg !8949
  store i32 %262, i32* %re_index.i314, align 4, !dbg !8289
  %263 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i309, align 8, !dbg !8950
  %size_in_bits_plus8.i321 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %263, i32 0, i32 4, !dbg !8951
  %264 = load i32, i32* %size_in_bits_plus8.i321, align 8, !dbg !8951
  store i32 %264, i32* %re_size_plus8.i316, align 4, !dbg !8291
  %265 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i309, align 8, !dbg !8952
  %buffer.i322 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %265, i32 0, i32 0, !dbg !8953
  %266 = load i8*, i8** %buffer.i322, align 8, !dbg !8953
  %267 = load i32, i32* %re_index.i314, align 4, !dbg !8954
  %shr.i323 = lshr i32 %267, 3, !dbg !8955
  %idx.ext.i324 = zext i32 %shr.i323 to i64, !dbg !8956
  %add.ptr.i325 = getelementptr inbounds i8, i8* %266, i64 %idx.ext.i324, !dbg !8956
  %268 = bitcast i8* %add.ptr.i325 to %union.unaligned_32*, !dbg !8957
  %l.i326 = bitcast %union.unaligned_32* %268 to i32*, !dbg !8957
  %269 = load i32, i32* %l.i326, align 1, !dbg !8957
  store i32 %269, i32* %x.addr.i.i308, align 4, !dbg !8958
  %270 = load i32, i32* %x.addr.i.i308, align 4, !dbg !8959
  %shl.i.i327 = shl i32 %270, 8, !dbg !8960
  %and.i.i328 = and i32 %shl.i.i327, 65280, !dbg !8961
  %271 = load i32, i32* %x.addr.i.i308, align 4, !dbg !8962
  %shr.i.i329 = lshr i32 %271, 8, !dbg !8963
  %and1.i.i330 = and i32 %shr.i.i329, 255, !dbg !8964
  %or.i.i331 = or i32 %and.i.i328, %and1.i.i330, !dbg !8965
  %shl2.i.i332 = shl i32 %or.i.i331, 16, !dbg !8966
  %272 = load i32, i32* %x.addr.i.i308, align 4, !dbg !8967
  %shr3.i.i333 = lshr i32 %272, 16, !dbg !8968
  %shl4.i.i334 = shl i32 %shr3.i.i333, 8, !dbg !8969
  %and5.i.i335 = and i32 %shl4.i.i334, 65280, !dbg !8970
  %273 = load i32, i32* %x.addr.i.i308, align 4, !dbg !8971
  %shr6.i.i336 = lshr i32 %273, 16, !dbg !8972
  %shr7.i.i337 = lshr i32 %shr6.i.i336, 8, !dbg !8973
  %and8.i.i338 = and i32 %shr7.i.i337, 255, !dbg !8974
  %or9.i.i339 = or i32 %and5.i.i335, %and8.i.i338, !dbg !8975
  %or10.i.i340 = or i32 %shl2.i.i332, %or9.i.i339, !dbg !8976
  %274 = load i32, i32* %re_index.i314, align 4, !dbg !8977
  %and.i341 = and i32 %274, 7, !dbg !8978
  %shl.i342 = shl i32 %or10.i.i340, %and.i341, !dbg !8979
  store i32 %shl.i342, i32* %re_cache.i315, align 4, !dbg !8980
  %275 = load i32, i32* %re_cache.i315, align 4, !dbg !8981
  %276 = load i32, i32* %bits.addr.i311, align 4, !dbg !8982
  %conv.i343 = trunc i32 %276 to i8, !dbg !8982
  %call2.i344 = call i32 @NEG_USR32(i32 %275, i8 signext %conv.i343) #9, !dbg !8983
  store i32 %call2.i344, i32* %index1.i319, align 4, !dbg !8984
  %277 = load i32, i32* %index1.i319, align 4, !dbg !8985
  %idxprom.i345 = zext i32 %277 to i64, !dbg !8986
  %278 = load [2 x i16]*, [2 x i16]** %table.addr.i310, align 8, !dbg !8986
  %arrayidx.i346 = getelementptr inbounds [2 x i16], [2 x i16]* %278, i64 %idxprom.i345, !dbg !8986
  %arrayidx3.i347 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i346, i64 0, i64 0, !dbg !8986
  %279 = load i16, i16* %arrayidx3.i347, align 2, !dbg !8986
  %conv4.i348 = sext i16 %279 to i32, !dbg !8986
  store i32 %conv4.i348, i32* %code.i313, align 4, !dbg !8987
  %280 = load i32, i32* %index1.i319, align 4, !dbg !8988
  %idxprom5.i349 = zext i32 %280 to i64, !dbg !8989
  %281 = load [2 x i16]*, [2 x i16]** %table.addr.i310, align 8, !dbg !8989
  %arrayidx6.i350 = getelementptr inbounds [2 x i16], [2 x i16]* %281, i64 %idxprom5.i349, !dbg !8989
  %arrayidx7.i351 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i350, i64 0, i64 1, !dbg !8989
  %282 = load i16, i16* %arrayidx7.i351, align 2, !dbg !8989
  %conv8.i352 = sext i16 %282 to i32, !dbg !8989
  store i32 %conv8.i352, i32* %n.i317, align 4, !dbg !8990
  %283 = load i32, i32* %max_depth.addr.i312, align 4, !dbg !8991
  %cmp.i353 = icmp sgt i32 %283, 1, !dbg !8992
  br i1 %cmp.i353, label %land.lhs.true.i355, label %if.end68.i442, !dbg !8993

land.lhs.true.i355:                               ; preds = %cond.false
  %284 = load i32, i32* %n.i317, align 4, !dbg !8994
  %cmp10.i354 = icmp slt i32 %284, 0, !dbg !8995
  br i1 %cmp10.i354, label %if.then.i358, label %if.end68.i442, !dbg !8996

if.then.i358:                                     ; preds = %land.lhs.true.i355
  %285 = load i32, i32* %re_size_plus8.i316, align 4, !dbg !8997
  %286 = load i32, i32* %re_index.i314, align 4, !dbg !8998
  %287 = load i32, i32* %bits.addr.i311, align 4, !dbg !8999
  %add.i356 = add i32 %286, %287, !dbg !9000
  %cmp12.i357 = icmp ugt i32 %285, %add.i356, !dbg !9001
  br i1 %cmp12.i357, label %cond.true.i360, label %cond.false.i361, !dbg !9002

cond.true.i360:                                   ; preds = %if.then.i358
  %288 = load i32, i32* %re_index.i314, align 4, !dbg !9003
  %289 = load i32, i32* %bits.addr.i311, align 4, !dbg !9004
  %add14.i359 = add i32 %288, %289, !dbg !9005
  br label %cond.end.i397, !dbg !9006

cond.false.i361:                                  ; preds = %if.then.i358
  %290 = load i32, i32* %re_size_plus8.i316, align 4, !dbg !9007
  br label %cond.end.i397, !dbg !9008

cond.end.i397:                                    ; preds = %cond.false.i361, %cond.true.i360
  %cond.i362 = phi i32 [ %add14.i359, %cond.true.i360 ], [ %290, %cond.false.i361 ], !dbg !9009
  store i32 %cond.i362, i32* %re_index.i314, align 4, !dbg !9010
  %291 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i309, align 8, !dbg !9011
  %buffer15.i363 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %291, i32 0, i32 0, !dbg !9012
  %292 = load i8*, i8** %buffer15.i363, align 8, !dbg !9012
  %293 = load i32, i32* %re_index.i314, align 4, !dbg !9013
  %shr16.i364 = lshr i32 %293, 3, !dbg !9014
  %idx.ext17.i365 = zext i32 %shr16.i364 to i64, !dbg !9015
  %add.ptr18.i366 = getelementptr inbounds i8, i8* %292, i64 %idx.ext17.i365, !dbg !9015
  %294 = bitcast i8* %add.ptr18.i366 to %union.unaligned_32*, !dbg !9016
  %l19.i367 = bitcast %union.unaligned_32* %294 to i32*, !dbg !9016
  %295 = load i32, i32* %l19.i367, align 1, !dbg !9016
  store i32 %295, i32* %x.addr.i81.i307, align 4, !dbg !9017
  %296 = load i32, i32* %x.addr.i81.i307, align 4, !dbg !9018
  %shl.i82.i368 = shl i32 %296, 8, !dbg !9019
  %and.i83.i369 = and i32 %shl.i82.i368, 65280, !dbg !9020
  %297 = load i32, i32* %x.addr.i81.i307, align 4, !dbg !9021
  %shr.i84.i370 = lshr i32 %297, 8, !dbg !9022
  %and1.i85.i371 = and i32 %shr.i84.i370, 255, !dbg !9023
  %or.i86.i372 = or i32 %and.i83.i369, %and1.i85.i371, !dbg !9024
  %shl2.i87.i373 = shl i32 %or.i86.i372, 16, !dbg !9025
  %298 = load i32, i32* %x.addr.i81.i307, align 4, !dbg !9026
  %shr3.i88.i374 = lshr i32 %298, 16, !dbg !9027
  %shl4.i89.i375 = shl i32 %shr3.i88.i374, 8, !dbg !9028
  %and5.i90.i376 = and i32 %shl4.i89.i375, 65280, !dbg !9029
  %299 = load i32, i32* %x.addr.i81.i307, align 4, !dbg !9030
  %shr6.i91.i377 = lshr i32 %299, 16, !dbg !9031
  %shr7.i92.i378 = lshr i32 %shr6.i91.i377, 8, !dbg !9032
  %and8.i93.i379 = and i32 %shr7.i92.i378, 255, !dbg !9033
  %or9.i94.i380 = or i32 %and5.i90.i376, %and8.i93.i379, !dbg !9034
  %or10.i95.i381 = or i32 %shl2.i87.i373, %or9.i94.i380, !dbg !9035
  %300 = load i32, i32* %re_index.i314, align 4, !dbg !9036
  %and21.i382 = and i32 %300, 7, !dbg !9037
  %shl22.i383 = shl i32 %or10.i95.i381, %and21.i382, !dbg !9038
  store i32 %shl22.i383, i32* %re_cache.i315, align 4, !dbg !9039
  %301 = load i32, i32* %n.i317, align 4, !dbg !9040
  %sub.i384 = sub nsw i32 0, %301, !dbg !9041
  store i32 %sub.i384, i32* %nb_bits.i318, align 4, !dbg !9042
  %302 = load i32, i32* %re_cache.i315, align 4, !dbg !9043
  %303 = load i32, i32* %nb_bits.i318, align 4, !dbg !9044
  %conv23.i385 = trunc i32 %303 to i8, !dbg !9044
  %call24.i386 = call i32 @NEG_USR32(i32 %302, i8 signext %conv23.i385) #9, !dbg !9045
  %304 = load i32, i32* %code.i313, align 4, !dbg !9046
  %add25.i387 = add i32 %call24.i386, %304, !dbg !9047
  store i32 %add25.i387, i32* %index1.i319, align 4, !dbg !9048
  %305 = load i32, i32* %index1.i319, align 4, !dbg !9049
  %idxprom26.i388 = zext i32 %305 to i64, !dbg !9050
  %306 = load [2 x i16]*, [2 x i16]** %table.addr.i310, align 8, !dbg !9050
  %arrayidx27.i389 = getelementptr inbounds [2 x i16], [2 x i16]* %306, i64 %idxprom26.i388, !dbg !9050
  %arrayidx28.i390 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i389, i64 0, i64 0, !dbg !9050
  %307 = load i16, i16* %arrayidx28.i390, align 2, !dbg !9050
  %conv29.i391 = sext i16 %307 to i32, !dbg !9050
  store i32 %conv29.i391, i32* %code.i313, align 4, !dbg !9051
  %308 = load i32, i32* %index1.i319, align 4, !dbg !9052
  %idxprom30.i392 = zext i32 %308 to i64, !dbg !9053
  %309 = load [2 x i16]*, [2 x i16]** %table.addr.i310, align 8, !dbg !9053
  %arrayidx31.i393 = getelementptr inbounds [2 x i16], [2 x i16]* %309, i64 %idxprom30.i392, !dbg !9053
  %arrayidx32.i394 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i393, i64 0, i64 1, !dbg !9053
  %310 = load i16, i16* %arrayidx32.i394, align 2, !dbg !9053
  %conv33.i395 = sext i16 %310 to i32, !dbg !9053
  store i32 %conv33.i395, i32* %n.i317, align 4, !dbg !9054
  %311 = load i32, i32* %max_depth.addr.i312, align 4, !dbg !9055
  %cmp34.i396 = icmp sgt i32 %311, 2, !dbg !9056
  br i1 %cmp34.i396, label %land.lhs.true36.i399, label %if.end.i441, !dbg !9057

land.lhs.true36.i399:                             ; preds = %cond.end.i397
  %312 = load i32, i32* %n.i317, align 4, !dbg !9058
  %cmp37.i398 = icmp slt i32 %312, 0, !dbg !9059
  br i1 %cmp37.i398, label %if.then39.i402, label %if.end.i441, !dbg !9060

if.then39.i402:                                   ; preds = %land.lhs.true36.i399
  %313 = load i32, i32* %re_size_plus8.i316, align 4, !dbg !9061
  %314 = load i32, i32* %re_index.i314, align 4, !dbg !9062
  %315 = load i32, i32* %nb_bits.i318, align 4, !dbg !9063
  %add40.i400 = add i32 %314, %315, !dbg !9064
  %cmp41.i401 = icmp ugt i32 %313, %add40.i400, !dbg !9065
  br i1 %cmp41.i401, label %cond.true43.i404, label %cond.false45.i405, !dbg !9066

cond.true43.i404:                                 ; preds = %if.then39.i402
  %316 = load i32, i32* %re_index.i314, align 4, !dbg !9067
  %317 = load i32, i32* %nb_bits.i318, align 4, !dbg !9068
  %add44.i403 = add i32 %316, %317, !dbg !9069
  br label %cond.end46.i440, !dbg !9070

cond.false45.i405:                                ; preds = %if.then39.i402
  %318 = load i32, i32* %re_size_plus8.i316, align 4, !dbg !9071
  br label %cond.end46.i440, !dbg !9072

cond.end46.i440:                                  ; preds = %cond.false45.i405, %cond.true43.i404
  %cond47.i406 = phi i32 [ %add44.i403, %cond.true43.i404 ], [ %318, %cond.false45.i405 ], !dbg !9073
  store i32 %cond47.i406, i32* %re_index.i314, align 4, !dbg !9074
  %319 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i309, align 8, !dbg !9075
  %buffer48.i407 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %319, i32 0, i32 0, !dbg !9076
  %320 = load i8*, i8** %buffer48.i407, align 8, !dbg !9076
  %321 = load i32, i32* %re_index.i314, align 4, !dbg !9077
  %shr49.i408 = lshr i32 %321, 3, !dbg !9078
  %idx.ext50.i409 = zext i32 %shr49.i408 to i64, !dbg !9079
  %add.ptr51.i410 = getelementptr inbounds i8, i8* %320, i64 %idx.ext50.i409, !dbg !9079
  %322 = bitcast i8* %add.ptr51.i410 to %union.unaligned_32*, !dbg !9080
  %l52.i411 = bitcast %union.unaligned_32* %322 to i32*, !dbg !9080
  %323 = load i32, i32* %l52.i411, align 1, !dbg !9080
  store i32 %323, i32* %x.addr.i96.i306, align 4, !dbg !9081
  %324 = load i32, i32* %x.addr.i96.i306, align 4, !dbg !9082
  %shl.i97.i412 = shl i32 %324, 8, !dbg !9083
  %and.i98.i413 = and i32 %shl.i97.i412, 65280, !dbg !9084
  %325 = load i32, i32* %x.addr.i96.i306, align 4, !dbg !9085
  %shr.i99.i414 = lshr i32 %325, 8, !dbg !9086
  %and1.i100.i415 = and i32 %shr.i99.i414, 255, !dbg !9087
  %or.i101.i416 = or i32 %and.i98.i413, %and1.i100.i415, !dbg !9088
  %shl2.i102.i417 = shl i32 %or.i101.i416, 16, !dbg !9089
  %326 = load i32, i32* %x.addr.i96.i306, align 4, !dbg !9090
  %shr3.i103.i418 = lshr i32 %326, 16, !dbg !9091
  %shl4.i104.i419 = shl i32 %shr3.i103.i418, 8, !dbg !9092
  %and5.i105.i420 = and i32 %shl4.i104.i419, 65280, !dbg !9093
  %327 = load i32, i32* %x.addr.i96.i306, align 4, !dbg !9094
  %shr6.i106.i421 = lshr i32 %327, 16, !dbg !9095
  %shr7.i107.i422 = lshr i32 %shr6.i106.i421, 8, !dbg !9096
  %and8.i108.i423 = and i32 %shr7.i107.i422, 255, !dbg !9097
  %or9.i109.i424 = or i32 %and5.i105.i420, %and8.i108.i423, !dbg !9098
  %or10.i110.i425 = or i32 %shl2.i102.i417, %or9.i109.i424, !dbg !9099
  %328 = load i32, i32* %re_index.i314, align 4, !dbg !9100
  %and54.i426 = and i32 %328, 7, !dbg !9101
  %shl55.i427 = shl i32 %or10.i110.i425, %and54.i426, !dbg !9102
  store i32 %shl55.i427, i32* %re_cache.i315, align 4, !dbg !9103
  %329 = load i32, i32* %n.i317, align 4, !dbg !9104
  %sub56.i428 = sub nsw i32 0, %329, !dbg !9105
  store i32 %sub56.i428, i32* %nb_bits.i318, align 4, !dbg !9106
  %330 = load i32, i32* %re_cache.i315, align 4, !dbg !9107
  %331 = load i32, i32* %nb_bits.i318, align 4, !dbg !9108
  %conv57.i429 = trunc i32 %331 to i8, !dbg !9108
  %call58.i430 = call i32 @NEG_USR32(i32 %330, i8 signext %conv57.i429) #9, !dbg !9109
  %332 = load i32, i32* %code.i313, align 4, !dbg !9110
  %add59.i431 = add i32 %call58.i430, %332, !dbg !9111
  store i32 %add59.i431, i32* %index1.i319, align 4, !dbg !9112
  %333 = load i32, i32* %index1.i319, align 4, !dbg !9113
  %idxprom60.i432 = zext i32 %333 to i64, !dbg !9114
  %334 = load [2 x i16]*, [2 x i16]** %table.addr.i310, align 8, !dbg !9114
  %arrayidx61.i433 = getelementptr inbounds [2 x i16], [2 x i16]* %334, i64 %idxprom60.i432, !dbg !9114
  %arrayidx62.i434 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i433, i64 0, i64 0, !dbg !9114
  %335 = load i16, i16* %arrayidx62.i434, align 2, !dbg !9114
  %conv63.i435 = sext i16 %335 to i32, !dbg !9114
  store i32 %conv63.i435, i32* %code.i313, align 4, !dbg !9115
  %336 = load i32, i32* %index1.i319, align 4, !dbg !9116
  %idxprom64.i436 = zext i32 %336 to i64, !dbg !9117
  %337 = load [2 x i16]*, [2 x i16]** %table.addr.i310, align 8, !dbg !9117
  %arrayidx65.i437 = getelementptr inbounds [2 x i16], [2 x i16]* %337, i64 %idxprom64.i436, !dbg !9117
  %arrayidx66.i438 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i437, i64 0, i64 1, !dbg !9117
  %338 = load i16, i16* %arrayidx66.i438, align 2, !dbg !9117
  %conv67.i439 = sext i16 %338 to i32, !dbg !9117
  store i32 %conv67.i439, i32* %n.i317, align 4, !dbg !9118
  br label %if.end.i441, !dbg !9119

if.end.i441:                                      ; preds = %cond.end46.i440, %land.lhs.true36.i399, %cond.end.i397
  br label %if.end68.i442, !dbg !9120

if.end68.i442:                                    ; preds = %if.end.i441, %land.lhs.true.i355, %cond.false
  %339 = load i32, i32* %n.i317, align 4, !dbg !9121
  %340 = load i32, i32* %re_cache.i315, align 4, !dbg !9122
  %shl70.i443 = shl i32 %340, %339, !dbg !9122
  store i32 %shl70.i443, i32* %re_cache.i315, align 4, !dbg !9122
  %341 = load i32, i32* %re_size_plus8.i316, align 4, !dbg !9123
  %342 = load i32, i32* %re_index.i314, align 4, !dbg !9124
  %343 = load i32, i32* %n.i317, align 4, !dbg !9125
  %add71.i444 = add i32 %342, %343, !dbg !9126
  %cmp72.i445 = icmp ugt i32 %341, %add71.i444, !dbg !9127
  br i1 %cmp72.i445, label %cond.true74.i447, label %cond.false76.i448, !dbg !9128

cond.true74.i447:                                 ; preds = %if.end68.i442
  %344 = load i32, i32* %re_index.i314, align 4, !dbg !9129
  %345 = load i32, i32* %n.i317, align 4, !dbg !9130
  %add75.i446 = add i32 %344, %345, !dbg !9131
  br label %get_vlc2.exit451, !dbg !9132

cond.false76.i448:                                ; preds = %if.end68.i442
  %346 = load i32, i32* %re_size_plus8.i316, align 4, !dbg !9133
  br label %get_vlc2.exit451, !dbg !9134

get_vlc2.exit451:                                 ; preds = %cond.true74.i447, %cond.false76.i448
  %cond78.i449 = phi i32 [ %add75.i446, %cond.true74.i447 ], [ %346, %cond.false76.i448 ], !dbg !9135
  store i32 %cond78.i449, i32* %re_index.i314, align 4, !dbg !9136
  %347 = load i32, i32* %re_index.i314, align 4, !dbg !9137
  %348 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i309, align 8, !dbg !9138
  %index80.i450 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %348, i32 0, i32 2, !dbg !9139
  store i32 %347, i32* %index80.i450, align 8, !dbg !9140
  %349 = load i32, i32* %code.i313, align 4, !dbg !9141
  %add88 = add nsw i32 %255, %349, !dbg !9142
  %350 = load i32, i32* %mask, align 4, !dbg !9143
  %and = and i32 %add88, %350, !dbg !9144
  br label %cond.end, !dbg !9145

cond.end:                                         ; preds = %get_vlc2.exit451, %get_vlc2.exit305
  %cond89 = phi i32 [ %254, %get_vlc2.exit305 ], [ %and, %get_vlc2.exit451 ], !dbg !9146
  %351 = load i32, i32* %i, align 4, !dbg !9148
  %idxprom90 = sext i32 %351 to i64, !dbg !9149
  %352 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9149
  %qu_tab_idx91 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %352, i32 0, i32 7, !dbg !9150
  %arrayidx92 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx91, i64 0, i64 %idxprom90, !dbg !9149
  store i32 %cond89, i32* %arrayidx92, align 4, !dbg !9151
  %353 = load i32, i32* %i, align 4, !dbg !9152
  %idxprom93 = sext i32 %353 to i64, !dbg !9153
  %354 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9153
  %qu_tab_idx94 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %354, i32 0, i32 7, !dbg !9154
  %arrayidx95 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx94, i64 0, i64 %idxprom93, !dbg !9153
  %355 = load i32, i32* %arrayidx95, align 4, !dbg !9153
  store i32 %355, i32* %pred, align 4, !dbg !9155
  br label %if.end109, !dbg !9156

if.else96:                                        ; preds = %for.body75
  %356 = load i32, i32* %ch_num.addr, align 4, !dbg !9157
  %tobool97 = icmp ne i32 %356, 0, !dbg !9157
  br i1 %tobool97, label %land.lhs.true98, label %if.end108, !dbg !9160

land.lhs.true98:                                  ; preds = %if.else96
  %357 = load i32, i32* %i, align 4, !dbg !9161
  %idxprom99 = sext i32 %357 to i64, !dbg !9163
  %358 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !9163
  %qu_wordlen100 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %358, i32 0, i32 5, !dbg !9164
  %arrayidx101 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen100, i64 0, i64 %idxprom99, !dbg !9163
  %359 = load i32, i32* %arrayidx101, align 4, !dbg !9163
  %tobool102 = icmp ne i32 %359, 0, !dbg !9163
  br i1 %tobool102, label %if.then103, label %if.end108, !dbg !9165

if.then103:                                       ; preds = %land.lhs.true98
  %360 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9166
  %call104 = call i32 @get_bits1(%struct.GetBitContext* %360), !dbg !9168
  %361 = load i32, i32* %i, align 4, !dbg !9169
  %idxprom105 = sext i32 %361 to i64, !dbg !9170
  %362 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9170
  %qu_tab_idx106 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %362, i32 0, i32 7, !dbg !9171
  %arrayidx107 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx106, i64 0, i64 %idxprom105, !dbg !9170
  store i32 %call104, i32* %arrayidx107, align 4, !dbg !9172
  br label %if.end108, !dbg !9170

if.end108:                                        ; preds = %if.then103, %land.lhs.true98, %if.else96
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %cond.end
  br label %for.inc110, !dbg !9173

for.inc110:                                       ; preds = %if.end109
  %363 = load i32, i32* %i, align 4, !dbg !9175
  %inc111 = add nsw i32 %363, 1, !dbg !9175
  store i32 %inc111, i32* %i, align 4, !dbg !9175
  br label %for.cond73, !dbg !9177, !llvm.loop !9178

for.end112:                                       ; preds = %for.cond73
  br label %sw.epilog, !dbg !9180

sw.bb113:                                         ; preds = %entry
  %364 = load i32, i32* %ch_num.addr, align 4, !dbg !9181
  %tobool114 = icmp ne i32 %364, 0, !dbg !9181
  br i1 %tobool114, label %if.then115, label %if.end159, !dbg !9182

if.then115:                                       ; preds = %sw.bb113
  %365 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !9183
  %use_full_table116 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %365, i32 0, i32 6, !dbg !9184
  %366 = load i32, i32* %use_full_table116, align 8, !dbg !9184
  %tobool117 = icmp ne i32 %366, 0, !dbg !9183
  %cond118 = select i1 %tobool117, %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i64 0, i64 3), %struct.VLC* getelementptr inbounds ([4 x %struct.VLC], [4 x %struct.VLC]* @ct_vlc_tabs, i32 0, i32 0), !dbg !9183
  store %struct.VLC* %cond118, %struct.VLC** %vlc_tab, align 8, !dbg !9185
  %367 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9186
  %368 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !9187
  %369 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9188
  %call119 = call i32 @get_num_ct_values(%struct.GetBitContext* %367, %struct.Atrac3pChanUnitCtx* %368, %struct.AVCodecContext* %369), !dbg !9189
  store i32 %call119, i32* %num_vals, align 4, !dbg !9190
  %370 = load i32, i32* %num_vals, align 4, !dbg !9191
  %cmp120 = icmp slt i32 %370, 0, !dbg !9193
  br i1 %cmp120, label %if.then121, label %if.end122, !dbg !9194

if.then121:                                       ; preds = %if.then115
  %371 = load i32, i32* %num_vals, align 4, !dbg !9195
  store i32 %371, i32* %retval, align 4, !dbg !9197
  br label %return, !dbg !9197

if.end122:                                        ; preds = %if.then115
  store i32 0, i32* %i, align 4, !dbg !9198
  br label %for.cond123, !dbg !9200

for.cond123:                                      ; preds = %for.inc156, %if.end122
  %372 = load i32, i32* %i, align 4, !dbg !9201
  %373 = load i32, i32* %num_vals, align 4, !dbg !9203
  %cmp124 = icmp slt i32 %372, %373, !dbg !9204
  br i1 %cmp124, label %for.body125, label %for.end158, !dbg !9205

for.body125:                                      ; preds = %for.cond123
  %374 = load i32, i32* %i, align 4, !dbg !9206
  %idxprom126 = sext i32 %374 to i64, !dbg !9208
  %375 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9208
  %qu_wordlen127 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %375, i32 0, i32 5, !dbg !9209
  %arrayidx128 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen127, i64 0, i64 %idxprom126, !dbg !9208
  %376 = load i32, i32* %arrayidx128, align 4, !dbg !9208
  %tobool129 = icmp ne i32 %376, 0, !dbg !9208
  br i1 %tobool129, label %if.then130, label %if.else142, !dbg !9208

if.then130:                                       ; preds = %for.body125
  %377 = load i32, i32* %i, align 4, !dbg !9210
  %idxprom131 = sext i32 %377 to i64, !dbg !9211
  %378 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !9211
  %qu_tab_idx132 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %378, i32 0, i32 7, !dbg !9212
  %arrayidx133 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx132, i64 0, i64 %idxprom131, !dbg !9211
  %379 = load i32, i32* %arrayidx133, align 4, !dbg !9211
  %380 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9213
  %381 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !9214
  %table134 = getelementptr inbounds %struct.VLC, %struct.VLC* %381, i32 0, i32 1, !dbg !9215
  %382 = load [2 x i16]*, [2 x i16]** %table134, align 8, !dbg !9215
  %383 = load %struct.VLC*, %struct.VLC** %vlc_tab, align 8, !dbg !9216
  %bits135 = getelementptr inbounds %struct.VLC, %struct.VLC* %383, i32 0, i32 0, !dbg !9217
  %384 = load i32, i32* %bits135, align 8, !dbg !9217
  store %struct.GetBitContext* %380, %struct.GetBitContext** %s.addr.i455, align 8, !dbg !9218
  store [2 x i16]* %382, [2 x i16]** %table.addr.i456, align 8, !dbg !9218
  store i32 %384, i32* %bits.addr.i457, align 4, !dbg !9218
  store i32 1, i32* %max_depth.addr.i458, align 4, !dbg !9218
  %385 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i455, align 8, !dbg !9219
  %index.i466 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %385, i32 0, i32 2, !dbg !9220
  %386 = load i32, i32* %index.i466, align 8, !dbg !9220
  store i32 %386, i32* %re_index.i460, align 4, !dbg !8265
  %387 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i455, align 8, !dbg !9221
  %size_in_bits_plus8.i467 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %387, i32 0, i32 4, !dbg !9222
  %388 = load i32, i32* %size_in_bits_plus8.i467, align 8, !dbg !9222
  store i32 %388, i32* %re_size_plus8.i462, align 4, !dbg !8267
  %389 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i455, align 8, !dbg !9223
  %buffer.i468 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %389, i32 0, i32 0, !dbg !9224
  %390 = load i8*, i8** %buffer.i468, align 8, !dbg !9224
  %391 = load i32, i32* %re_index.i460, align 4, !dbg !9225
  %shr.i469 = lshr i32 %391, 3, !dbg !9226
  %idx.ext.i470 = zext i32 %shr.i469 to i64, !dbg !9227
  %add.ptr.i471 = getelementptr inbounds i8, i8* %390, i64 %idx.ext.i470, !dbg !9227
  %392 = bitcast i8* %add.ptr.i471 to %union.unaligned_32*, !dbg !9228
  %l.i472 = bitcast %union.unaligned_32* %392 to i32*, !dbg !9228
  %393 = load i32, i32* %l.i472, align 1, !dbg !9228
  store i32 %393, i32* %x.addr.i.i454, align 4, !dbg !9229
  %394 = load i32, i32* %x.addr.i.i454, align 4, !dbg !9230
  %shl.i.i473 = shl i32 %394, 8, !dbg !9231
  %and.i.i474 = and i32 %shl.i.i473, 65280, !dbg !9232
  %395 = load i32, i32* %x.addr.i.i454, align 4, !dbg !9233
  %shr.i.i475 = lshr i32 %395, 8, !dbg !9234
  %and1.i.i476 = and i32 %shr.i.i475, 255, !dbg !9235
  %or.i.i477 = or i32 %and.i.i474, %and1.i.i476, !dbg !9236
  %shl2.i.i478 = shl i32 %or.i.i477, 16, !dbg !9237
  %396 = load i32, i32* %x.addr.i.i454, align 4, !dbg !9238
  %shr3.i.i479 = lshr i32 %396, 16, !dbg !9239
  %shl4.i.i480 = shl i32 %shr3.i.i479, 8, !dbg !9240
  %and5.i.i481 = and i32 %shl4.i.i480, 65280, !dbg !9241
  %397 = load i32, i32* %x.addr.i.i454, align 4, !dbg !9242
  %shr6.i.i482 = lshr i32 %397, 16, !dbg !9243
  %shr7.i.i483 = lshr i32 %shr6.i.i482, 8, !dbg !9244
  %and8.i.i484 = and i32 %shr7.i.i483, 255, !dbg !9245
  %or9.i.i485 = or i32 %and5.i.i481, %and8.i.i484, !dbg !9246
  %or10.i.i486 = or i32 %shl2.i.i478, %or9.i.i485, !dbg !9247
  %398 = load i32, i32* %re_index.i460, align 4, !dbg !9248
  %and.i487 = and i32 %398, 7, !dbg !9249
  %shl.i488 = shl i32 %or10.i.i486, %and.i487, !dbg !9250
  store i32 %shl.i488, i32* %re_cache.i461, align 4, !dbg !9251
  %399 = load i32, i32* %re_cache.i461, align 4, !dbg !9252
  %400 = load i32, i32* %bits.addr.i457, align 4, !dbg !9253
  %conv.i489 = trunc i32 %400 to i8, !dbg !9253
  %call2.i490 = call i32 @NEG_USR32(i32 %399, i8 signext %conv.i489) #9, !dbg !9254
  store i32 %call2.i490, i32* %index1.i465, align 4, !dbg !9255
  %401 = load i32, i32* %index1.i465, align 4, !dbg !9256
  %idxprom.i491 = zext i32 %401 to i64, !dbg !9257
  %402 = load [2 x i16]*, [2 x i16]** %table.addr.i456, align 8, !dbg !9257
  %arrayidx.i492 = getelementptr inbounds [2 x i16], [2 x i16]* %402, i64 %idxprom.i491, !dbg !9257
  %arrayidx3.i493 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i492, i64 0, i64 0, !dbg !9257
  %403 = load i16, i16* %arrayidx3.i493, align 2, !dbg !9257
  %conv4.i494 = sext i16 %403 to i32, !dbg !9257
  store i32 %conv4.i494, i32* %code.i459, align 4, !dbg !9258
  %404 = load i32, i32* %index1.i465, align 4, !dbg !9259
  %idxprom5.i495 = zext i32 %404 to i64, !dbg !9260
  %405 = load [2 x i16]*, [2 x i16]** %table.addr.i456, align 8, !dbg !9260
  %arrayidx6.i496 = getelementptr inbounds [2 x i16], [2 x i16]* %405, i64 %idxprom5.i495, !dbg !9260
  %arrayidx7.i497 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i496, i64 0, i64 1, !dbg !9260
  %406 = load i16, i16* %arrayidx7.i497, align 2, !dbg !9260
  %conv8.i498 = sext i16 %406 to i32, !dbg !9260
  store i32 %conv8.i498, i32* %n.i463, align 4, !dbg !9261
  %407 = load i32, i32* %max_depth.addr.i458, align 4, !dbg !9262
  %cmp.i499 = icmp sgt i32 %407, 1, !dbg !9263
  br i1 %cmp.i499, label %land.lhs.true.i501, label %if.end68.i588, !dbg !9264

land.lhs.true.i501:                               ; preds = %if.then130
  %408 = load i32, i32* %n.i463, align 4, !dbg !9265
  %cmp10.i500 = icmp slt i32 %408, 0, !dbg !9266
  br i1 %cmp10.i500, label %if.then.i504, label %if.end68.i588, !dbg !9267

if.then.i504:                                     ; preds = %land.lhs.true.i501
  %409 = load i32, i32* %re_size_plus8.i462, align 4, !dbg !9268
  %410 = load i32, i32* %re_index.i460, align 4, !dbg !9269
  %411 = load i32, i32* %bits.addr.i457, align 4, !dbg !9270
  %add.i502 = add i32 %410, %411, !dbg !9271
  %cmp12.i503 = icmp ugt i32 %409, %add.i502, !dbg !9272
  br i1 %cmp12.i503, label %cond.true.i506, label %cond.false.i507, !dbg !9273

cond.true.i506:                                   ; preds = %if.then.i504
  %412 = load i32, i32* %re_index.i460, align 4, !dbg !9274
  %413 = load i32, i32* %bits.addr.i457, align 4, !dbg !9275
  %add14.i505 = add i32 %412, %413, !dbg !9276
  br label %cond.end.i543, !dbg !9277

cond.false.i507:                                  ; preds = %if.then.i504
  %414 = load i32, i32* %re_size_plus8.i462, align 4, !dbg !9278
  br label %cond.end.i543, !dbg !9279

cond.end.i543:                                    ; preds = %cond.false.i507, %cond.true.i506
  %cond.i508 = phi i32 [ %add14.i505, %cond.true.i506 ], [ %414, %cond.false.i507 ], !dbg !9280
  store i32 %cond.i508, i32* %re_index.i460, align 4, !dbg !9281
  %415 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i455, align 8, !dbg !9282
  %buffer15.i509 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %415, i32 0, i32 0, !dbg !9283
  %416 = load i8*, i8** %buffer15.i509, align 8, !dbg !9283
  %417 = load i32, i32* %re_index.i460, align 4, !dbg !9284
  %shr16.i510 = lshr i32 %417, 3, !dbg !9285
  %idx.ext17.i511 = zext i32 %shr16.i510 to i64, !dbg !9286
  %add.ptr18.i512 = getelementptr inbounds i8, i8* %416, i64 %idx.ext17.i511, !dbg !9286
  %418 = bitcast i8* %add.ptr18.i512 to %union.unaligned_32*, !dbg !9287
  %l19.i513 = bitcast %union.unaligned_32* %418 to i32*, !dbg !9287
  %419 = load i32, i32* %l19.i513, align 1, !dbg !9287
  store i32 %419, i32* %x.addr.i81.i453, align 4, !dbg !9288
  %420 = load i32, i32* %x.addr.i81.i453, align 4, !dbg !9289
  %shl.i82.i514 = shl i32 %420, 8, !dbg !9290
  %and.i83.i515 = and i32 %shl.i82.i514, 65280, !dbg !9291
  %421 = load i32, i32* %x.addr.i81.i453, align 4, !dbg !9292
  %shr.i84.i516 = lshr i32 %421, 8, !dbg !9293
  %and1.i85.i517 = and i32 %shr.i84.i516, 255, !dbg !9294
  %or.i86.i518 = or i32 %and.i83.i515, %and1.i85.i517, !dbg !9295
  %shl2.i87.i519 = shl i32 %or.i86.i518, 16, !dbg !9296
  %422 = load i32, i32* %x.addr.i81.i453, align 4, !dbg !9297
  %shr3.i88.i520 = lshr i32 %422, 16, !dbg !9298
  %shl4.i89.i521 = shl i32 %shr3.i88.i520, 8, !dbg !9299
  %and5.i90.i522 = and i32 %shl4.i89.i521, 65280, !dbg !9300
  %423 = load i32, i32* %x.addr.i81.i453, align 4, !dbg !9301
  %shr6.i91.i523 = lshr i32 %423, 16, !dbg !9302
  %shr7.i92.i524 = lshr i32 %shr6.i91.i523, 8, !dbg !9303
  %and8.i93.i525 = and i32 %shr7.i92.i524, 255, !dbg !9304
  %or9.i94.i526 = or i32 %and5.i90.i522, %and8.i93.i525, !dbg !9305
  %or10.i95.i527 = or i32 %shl2.i87.i519, %or9.i94.i526, !dbg !9306
  %424 = load i32, i32* %re_index.i460, align 4, !dbg !9307
  %and21.i528 = and i32 %424, 7, !dbg !9308
  %shl22.i529 = shl i32 %or10.i95.i527, %and21.i528, !dbg !9309
  store i32 %shl22.i529, i32* %re_cache.i461, align 4, !dbg !9310
  %425 = load i32, i32* %n.i463, align 4, !dbg !9311
  %sub.i530 = sub nsw i32 0, %425, !dbg !9312
  store i32 %sub.i530, i32* %nb_bits.i464, align 4, !dbg !9313
  %426 = load i32, i32* %re_cache.i461, align 4, !dbg !9314
  %427 = load i32, i32* %nb_bits.i464, align 4, !dbg !9315
  %conv23.i531 = trunc i32 %427 to i8, !dbg !9315
  %call24.i532 = call i32 @NEG_USR32(i32 %426, i8 signext %conv23.i531) #9, !dbg !9316
  %428 = load i32, i32* %code.i459, align 4, !dbg !9317
  %add25.i533 = add i32 %call24.i532, %428, !dbg !9318
  store i32 %add25.i533, i32* %index1.i465, align 4, !dbg !9319
  %429 = load i32, i32* %index1.i465, align 4, !dbg !9320
  %idxprom26.i534 = zext i32 %429 to i64, !dbg !9321
  %430 = load [2 x i16]*, [2 x i16]** %table.addr.i456, align 8, !dbg !9321
  %arrayidx27.i535 = getelementptr inbounds [2 x i16], [2 x i16]* %430, i64 %idxprom26.i534, !dbg !9321
  %arrayidx28.i536 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i535, i64 0, i64 0, !dbg !9321
  %431 = load i16, i16* %arrayidx28.i536, align 2, !dbg !9321
  %conv29.i537 = sext i16 %431 to i32, !dbg !9321
  store i32 %conv29.i537, i32* %code.i459, align 4, !dbg !9322
  %432 = load i32, i32* %index1.i465, align 4, !dbg !9323
  %idxprom30.i538 = zext i32 %432 to i64, !dbg !9324
  %433 = load [2 x i16]*, [2 x i16]** %table.addr.i456, align 8, !dbg !9324
  %arrayidx31.i539 = getelementptr inbounds [2 x i16], [2 x i16]* %433, i64 %idxprom30.i538, !dbg !9324
  %arrayidx32.i540 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i539, i64 0, i64 1, !dbg !9324
  %434 = load i16, i16* %arrayidx32.i540, align 2, !dbg !9324
  %conv33.i541 = sext i16 %434 to i32, !dbg !9324
  store i32 %conv33.i541, i32* %n.i463, align 4, !dbg !9325
  %435 = load i32, i32* %max_depth.addr.i458, align 4, !dbg !9326
  %cmp34.i542 = icmp sgt i32 %435, 2, !dbg !9327
  br i1 %cmp34.i542, label %land.lhs.true36.i545, label %if.end.i587, !dbg !9328

land.lhs.true36.i545:                             ; preds = %cond.end.i543
  %436 = load i32, i32* %n.i463, align 4, !dbg !9329
  %cmp37.i544 = icmp slt i32 %436, 0, !dbg !9330
  br i1 %cmp37.i544, label %if.then39.i548, label %if.end.i587, !dbg !9331

if.then39.i548:                                   ; preds = %land.lhs.true36.i545
  %437 = load i32, i32* %re_size_plus8.i462, align 4, !dbg !9332
  %438 = load i32, i32* %re_index.i460, align 4, !dbg !9333
  %439 = load i32, i32* %nb_bits.i464, align 4, !dbg !9334
  %add40.i546 = add i32 %438, %439, !dbg !9335
  %cmp41.i547 = icmp ugt i32 %437, %add40.i546, !dbg !9336
  br i1 %cmp41.i547, label %cond.true43.i550, label %cond.false45.i551, !dbg !9337

cond.true43.i550:                                 ; preds = %if.then39.i548
  %440 = load i32, i32* %re_index.i460, align 4, !dbg !9338
  %441 = load i32, i32* %nb_bits.i464, align 4, !dbg !9339
  %add44.i549 = add i32 %440, %441, !dbg !9340
  br label %cond.end46.i586, !dbg !9341

cond.false45.i551:                                ; preds = %if.then39.i548
  %442 = load i32, i32* %re_size_plus8.i462, align 4, !dbg !9342
  br label %cond.end46.i586, !dbg !9343

cond.end46.i586:                                  ; preds = %cond.false45.i551, %cond.true43.i550
  %cond47.i552 = phi i32 [ %add44.i549, %cond.true43.i550 ], [ %442, %cond.false45.i551 ], !dbg !9344
  store i32 %cond47.i552, i32* %re_index.i460, align 4, !dbg !9345
  %443 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i455, align 8, !dbg !9346
  %buffer48.i553 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %443, i32 0, i32 0, !dbg !9347
  %444 = load i8*, i8** %buffer48.i553, align 8, !dbg !9347
  %445 = load i32, i32* %re_index.i460, align 4, !dbg !9348
  %shr49.i554 = lshr i32 %445, 3, !dbg !9349
  %idx.ext50.i555 = zext i32 %shr49.i554 to i64, !dbg !9350
  %add.ptr51.i556 = getelementptr inbounds i8, i8* %444, i64 %idx.ext50.i555, !dbg !9350
  %446 = bitcast i8* %add.ptr51.i556 to %union.unaligned_32*, !dbg !9351
  %l52.i557 = bitcast %union.unaligned_32* %446 to i32*, !dbg !9351
  %447 = load i32, i32* %l52.i557, align 1, !dbg !9351
  store i32 %447, i32* %x.addr.i96.i452, align 4, !dbg !9352
  %448 = load i32, i32* %x.addr.i96.i452, align 4, !dbg !9353
  %shl.i97.i558 = shl i32 %448, 8, !dbg !9354
  %and.i98.i559 = and i32 %shl.i97.i558, 65280, !dbg !9355
  %449 = load i32, i32* %x.addr.i96.i452, align 4, !dbg !9356
  %shr.i99.i560 = lshr i32 %449, 8, !dbg !9357
  %and1.i100.i561 = and i32 %shr.i99.i560, 255, !dbg !9358
  %or.i101.i562 = or i32 %and.i98.i559, %and1.i100.i561, !dbg !9359
  %shl2.i102.i563 = shl i32 %or.i101.i562, 16, !dbg !9360
  %450 = load i32, i32* %x.addr.i96.i452, align 4, !dbg !9361
  %shr3.i103.i564 = lshr i32 %450, 16, !dbg !9362
  %shl4.i104.i565 = shl i32 %shr3.i103.i564, 8, !dbg !9363
  %and5.i105.i566 = and i32 %shl4.i104.i565, 65280, !dbg !9364
  %451 = load i32, i32* %x.addr.i96.i452, align 4, !dbg !9365
  %shr6.i106.i567 = lshr i32 %451, 16, !dbg !9366
  %shr7.i107.i568 = lshr i32 %shr6.i106.i567, 8, !dbg !9367
  %and8.i108.i569 = and i32 %shr7.i107.i568, 255, !dbg !9368
  %or9.i109.i570 = or i32 %and5.i105.i566, %and8.i108.i569, !dbg !9369
  %or10.i110.i571 = or i32 %shl2.i102.i563, %or9.i109.i570, !dbg !9370
  %452 = load i32, i32* %re_index.i460, align 4, !dbg !9371
  %and54.i572 = and i32 %452, 7, !dbg !9372
  %shl55.i573 = shl i32 %or10.i110.i571, %and54.i572, !dbg !9373
  store i32 %shl55.i573, i32* %re_cache.i461, align 4, !dbg !9374
  %453 = load i32, i32* %n.i463, align 4, !dbg !9375
  %sub56.i574 = sub nsw i32 0, %453, !dbg !9376
  store i32 %sub56.i574, i32* %nb_bits.i464, align 4, !dbg !9377
  %454 = load i32, i32* %re_cache.i461, align 4, !dbg !9378
  %455 = load i32, i32* %nb_bits.i464, align 4, !dbg !9379
  %conv57.i575 = trunc i32 %455 to i8, !dbg !9379
  %call58.i576 = call i32 @NEG_USR32(i32 %454, i8 signext %conv57.i575) #9, !dbg !9380
  %456 = load i32, i32* %code.i459, align 4, !dbg !9381
  %add59.i577 = add i32 %call58.i576, %456, !dbg !9382
  store i32 %add59.i577, i32* %index1.i465, align 4, !dbg !9383
  %457 = load i32, i32* %index1.i465, align 4, !dbg !9384
  %idxprom60.i578 = zext i32 %457 to i64, !dbg !9385
  %458 = load [2 x i16]*, [2 x i16]** %table.addr.i456, align 8, !dbg !9385
  %arrayidx61.i579 = getelementptr inbounds [2 x i16], [2 x i16]* %458, i64 %idxprom60.i578, !dbg !9385
  %arrayidx62.i580 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i579, i64 0, i64 0, !dbg !9385
  %459 = load i16, i16* %arrayidx62.i580, align 2, !dbg !9385
  %conv63.i581 = sext i16 %459 to i32, !dbg !9385
  store i32 %conv63.i581, i32* %code.i459, align 4, !dbg !9386
  %460 = load i32, i32* %index1.i465, align 4, !dbg !9387
  %idxprom64.i582 = zext i32 %460 to i64, !dbg !9388
  %461 = load [2 x i16]*, [2 x i16]** %table.addr.i456, align 8, !dbg !9388
  %arrayidx65.i583 = getelementptr inbounds [2 x i16], [2 x i16]* %461, i64 %idxprom64.i582, !dbg !9388
  %arrayidx66.i584 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i583, i64 0, i64 1, !dbg !9388
  %462 = load i16, i16* %arrayidx66.i584, align 2, !dbg !9388
  %conv67.i585 = sext i16 %462 to i32, !dbg !9388
  store i32 %conv67.i585, i32* %n.i463, align 4, !dbg !9389
  br label %if.end.i587, !dbg !9390

if.end.i587:                                      ; preds = %cond.end46.i586, %land.lhs.true36.i545, %cond.end.i543
  br label %if.end68.i588, !dbg !9391

if.end68.i588:                                    ; preds = %if.end.i587, %land.lhs.true.i501, %if.then130
  %463 = load i32, i32* %n.i463, align 4, !dbg !9392
  %464 = load i32, i32* %re_cache.i461, align 4, !dbg !9393
  %shl70.i589 = shl i32 %464, %463, !dbg !9393
  store i32 %shl70.i589, i32* %re_cache.i461, align 4, !dbg !9393
  %465 = load i32, i32* %re_size_plus8.i462, align 4, !dbg !9394
  %466 = load i32, i32* %re_index.i460, align 4, !dbg !9395
  %467 = load i32, i32* %n.i463, align 4, !dbg !9396
  %add71.i590 = add i32 %466, %467, !dbg !9397
  %cmp72.i591 = icmp ugt i32 %465, %add71.i590, !dbg !9398
  br i1 %cmp72.i591, label %cond.true74.i593, label %cond.false76.i594, !dbg !9399

cond.true74.i593:                                 ; preds = %if.end68.i588
  %468 = load i32, i32* %re_index.i460, align 4, !dbg !9400
  %469 = load i32, i32* %n.i463, align 4, !dbg !9401
  %add75.i592 = add i32 %468, %469, !dbg !9402
  br label %get_vlc2.exit597, !dbg !9403

cond.false76.i594:                                ; preds = %if.end68.i588
  %470 = load i32, i32* %re_size_plus8.i462, align 4, !dbg !9404
  br label %get_vlc2.exit597, !dbg !9405

get_vlc2.exit597:                                 ; preds = %cond.true74.i593, %cond.false76.i594
  %cond78.i595 = phi i32 [ %add75.i592, %cond.true74.i593 ], [ %470, %cond.false76.i594 ], !dbg !9406
  store i32 %cond78.i595, i32* %re_index.i460, align 4, !dbg !9407
  %471 = load i32, i32* %re_index.i460, align 4, !dbg !9408
  %472 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i455, align 8, !dbg !9409
  %index80.i596 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %472, i32 0, i32 2, !dbg !9410
  store i32 %471, i32* %index80.i596, align 8, !dbg !9411
  %473 = load i32, i32* %code.i459, align 4, !dbg !9412
  %add137 = add nsw i32 %379, %473, !dbg !9413
  %474 = load i32, i32* %mask, align 4, !dbg !9414
  %and138 = and i32 %add137, %474, !dbg !9415
  %475 = load i32, i32* %i, align 4, !dbg !9416
  %idxprom139 = sext i32 %475 to i64, !dbg !9417
  %476 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9417
  %qu_tab_idx140 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %476, i32 0, i32 7, !dbg !9418
  %arrayidx141 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx140, i64 0, i64 %idxprom139, !dbg !9417
  store i32 %and138, i32* %arrayidx141, align 4, !dbg !9419
  br label %if.end155, !dbg !9420

if.else142:                                       ; preds = %for.body125
  %477 = load i32, i32* %ch_num.addr, align 4, !dbg !9421
  %tobool143 = icmp ne i32 %477, 0, !dbg !9421
  br i1 %tobool143, label %land.lhs.true144, label %if.end154, !dbg !9424

land.lhs.true144:                                 ; preds = %if.else142
  %478 = load i32, i32* %i, align 4, !dbg !9425
  %idxprom145 = sext i32 %478 to i64, !dbg !9427
  %479 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !9427
  %qu_wordlen146 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %479, i32 0, i32 5, !dbg !9428
  %arrayidx147 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen146, i64 0, i64 %idxprom145, !dbg !9427
  %480 = load i32, i32* %arrayidx147, align 4, !dbg !9427
  %tobool148 = icmp ne i32 %480, 0, !dbg !9427
  br i1 %tobool148, label %if.then149, label %if.end154, !dbg !9429

if.then149:                                       ; preds = %land.lhs.true144
  %481 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9430
  %call150 = call i32 @get_bits1(%struct.GetBitContext* %481), !dbg !9432
  %482 = load i32, i32* %i, align 4, !dbg !9433
  %idxprom151 = sext i32 %482 to i64, !dbg !9434
  %483 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9434
  %qu_tab_idx152 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %483, i32 0, i32 7, !dbg !9435
  %arrayidx153 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_tab_idx152, i64 0, i64 %idxprom151, !dbg !9434
  store i32 %call150, i32* %arrayidx153, align 4, !dbg !9436
  br label %if.end154, !dbg !9434

if.end154:                                        ; preds = %if.then149, %land.lhs.true144, %if.else142
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %get_vlc2.exit597
  br label %for.inc156, !dbg !9437

for.inc156:                                       ; preds = %if.end155
  %484 = load i32, i32* %i, align 4, !dbg !9439
  %inc157 = add nsw i32 %484, 1, !dbg !9439
  store i32 %inc157, i32* %i, align 4, !dbg !9439
  br label %for.cond123, !dbg !9441, !llvm.loop !9442

for.end158:                                       ; preds = %for.cond123
  br label %if.end159, !dbg !9444

if.end159:                                        ; preds = %for.end158, %sw.bb113
  br label %sw.epilog, !dbg !9445

sw.epilog:                                        ; preds = %entry, %if.end159, %for.end112, %for.end62, %for.end
  store i32 0, i32* %retval, align 4, !dbg !9446
  br label %return, !dbg !9446

return:                                           ; preds = %sw.epilog, %if.then121, %if.then71, %if.then32, %if.then
  %485 = load i32, i32* %retval, align 4, !dbg !9447
  ret i32 %485, !dbg !9447
}

; Function Attrs: nounwind uwtable
define internal i32 @get_num_ct_values(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, %struct.AVCodecContext* %avctx) #3 !dbg !9448 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %num_coded_vals = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9451, metadata !1324), !dbg !9452
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !9453, metadata !1324), !dbg !9454
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !9455, metadata !1324), !dbg !9456
  call void @llvm.dbg.declare(metadata i32* %num_coded_vals, metadata !9457, metadata !1324), !dbg !9458
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9459
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !9461
  %tobool = icmp ne i32 %call, 0, !dbg !9461
  br i1 %tobool, label %if.then, label %if.else, !dbg !9462

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9463
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 5), !dbg !9465
  store i32 %call1, i32* %num_coded_vals, align 4, !dbg !9466
  %2 = load i32, i32* %num_coded_vals, align 4, !dbg !9467
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !9469
  %used_quant_units = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 3, !dbg !9470
  %4 = load i32, i32* %used_quant_units, align 4, !dbg !9470
  %cmp = icmp sgt i32 %2, %4, !dbg !9471
  br i1 %cmp, label %if.then2, label %if.end, !dbg !9472

if.then2:                                         ; preds = %if.then
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !9473
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !9473
  %7 = load i32, i32* %num_coded_vals, align 4, !dbg !9475
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i32 0, i32 0), i32 %7), !dbg !9476
  store i32 -1094995529, i32* %retval, align 4, !dbg !9477
  br label %return, !dbg !9477

if.end:                                           ; preds = %if.then
  %8 = load i32, i32* %num_coded_vals, align 4, !dbg !9478
  store i32 %8, i32* %retval, align 4, !dbg !9479
  br label %return, !dbg !9479

if.else:                                          ; preds = %entry
  %9 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !9480
  %used_quant_units3 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %9, i32 0, i32 3, !dbg !9481
  %10 = load i32, i32* %used_quant_units3, align 4, !dbg !9481
  store i32 %10, i32* %retval, align 4, !dbg !9482
  br label %return, !dbg !9482

return:                                           ; preds = %if.else, %if.end, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !9483
  ret i32 %11, !dbg !9483
}

; Function Attrs: nounwind uwtable
define internal void @decode_qu_spectra(%struct.GetBitContext* %gb, %struct.Atrac3pSpecCodeTab* %tab, %struct.VLC* %vlc_tab, i16* %out, i32 %num_specs) #3 !dbg !9484 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !9488, metadata !1324), !dbg !9493
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !9506, metadata !1324), !dbg !9507
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !9508
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !9511
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !9513
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !9515
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !9516
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !9517
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !9518
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !9519
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !9520
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !9521
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !9522
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !9523
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !9524
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !9525
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %tab.addr = alloca %struct.Atrac3pSpecCodeTab*, align 8
  %vlc_tab.addr = alloca %struct.VLC*, align 8
  %out.addr = alloca i16*, align 8
  %num_specs.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pos = alloca i32, align 4
  %cf = alloca i32, align 4
  %group_size = alloca i32, align 4
  %num_coeffs = alloca i32, align 4
  %bits = alloca i32, align 4
  %is_signed = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9526, metadata !1324), !dbg !9527
  store %struct.Atrac3pSpecCodeTab* %tab, %struct.Atrac3pSpecCodeTab** %tab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pSpecCodeTab** %tab.addr, metadata !9528, metadata !1324), !dbg !9529
  store %struct.VLC* %vlc_tab, %struct.VLC** %vlc_tab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc_tab.addr, metadata !9530, metadata !1324), !dbg !9531
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !9532, metadata !1324), !dbg !9533
  store i32 %num_specs, i32* %num_specs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_specs.addr, metadata !9534, metadata !1324), !dbg !9535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9536, metadata !1324), !dbg !9537
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9538, metadata !1324), !dbg !9539
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9540, metadata !1324), !dbg !9541
  call void @llvm.dbg.declare(metadata i32* %cf, metadata !9542, metadata !1324), !dbg !9543
  call void @llvm.dbg.declare(metadata i32* %group_size, metadata !9544, metadata !1324), !dbg !9545
  %0 = load %struct.Atrac3pSpecCodeTab*, %struct.Atrac3pSpecCodeTab** %tab.addr, align 8, !dbg !9546
  %group_size1 = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %0, i32 0, i32 0, !dbg !9547
  %1 = load i8, i8* %group_size1, align 8, !dbg !9547
  %conv = zext i8 %1 to i32, !dbg !9546
  store i32 %conv, i32* %group_size, align 4, !dbg !9545
  call void @llvm.dbg.declare(metadata i32* %num_coeffs, metadata !9548, metadata !1324), !dbg !9549
  %2 = load %struct.Atrac3pSpecCodeTab*, %struct.Atrac3pSpecCodeTab** %tab.addr, align 8, !dbg !9550
  %num_coeffs2 = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %2, i32 0, i32 1, !dbg !9551
  %3 = load i8, i8* %num_coeffs2, align 1, !dbg !9551
  %conv3 = zext i8 %3 to i32, !dbg !9550
  store i32 %conv3, i32* %num_coeffs, align 4, !dbg !9549
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !9552, metadata !1324), !dbg !9553
  %4 = load %struct.Atrac3pSpecCodeTab*, %struct.Atrac3pSpecCodeTab** %tab.addr, align 8, !dbg !9554
  %bits4 = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %4, i32 0, i32 2, !dbg !9555
  %5 = load i8, i8* %bits4, align 2, !dbg !9555
  %conv5 = zext i8 %5 to i32, !dbg !9554
  store i32 %conv5, i32* %bits, align 4, !dbg !9553
  call void @llvm.dbg.declare(metadata i32* %is_signed, metadata !9556, metadata !1324), !dbg !9557
  %6 = load %struct.Atrac3pSpecCodeTab*, %struct.Atrac3pSpecCodeTab** %tab.addr, align 8, !dbg !9558
  %is_signed6 = getelementptr inbounds %struct.Atrac3pSpecCodeTab, %struct.Atrac3pSpecCodeTab* %6, i32 0, i32 3, !dbg !9559
  %7 = load i8, i8* %is_signed6, align 1, !dbg !9559
  %conv7 = zext i8 %7 to i32, !dbg !9558
  store i32 %conv7, i32* %is_signed, align 4, !dbg !9557
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9560, metadata !1324), !dbg !9561
  store i32 0, i32* %pos, align 4, !dbg !9562
  br label %for.cond, !dbg !9563

for.cond:                                         ; preds = %if.end36, %entry
  %8 = load i32, i32* %pos, align 4, !dbg !9564
  %9 = load i32, i32* %num_specs.addr, align 4, !dbg !9566
  %cmp = icmp slt i32 %8, %9, !dbg !9567
  br i1 %cmp, label %for.body, label %for.end37, !dbg !9568

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %group_size, align 4, !dbg !9569
  %cmp9 = icmp eq i32 %10, 1, !dbg !9570
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !9571

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9572
  %call = call i32 @get_bits1(%struct.GetBitContext* %11), !dbg !9574
  %tobool = icmp ne i32 %call, 0, !dbg !9574
  br i1 %tobool, label %if.then, label %if.else35, !dbg !9575

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 0, i32* %j, align 4, !dbg !9576
  br label %for.cond11, !dbg !9577

for.cond11:                                       ; preds = %for.inc32, %if.then
  %12 = load i32, i32* %j, align 4, !dbg !9578
  %13 = load i32, i32* %group_size, align 4, !dbg !9580
  %cmp12 = icmp slt i32 %12, %13, !dbg !9581
  br i1 %cmp12, label %for.body14, label %for.end34, !dbg !9582

for.body14:                                       ; preds = %for.cond11
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9583
  %15 = load %struct.VLC*, %struct.VLC** %vlc_tab.addr, align 8, !dbg !9584
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %15, i32 0, i32 1, !dbg !9585
  %16 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !9585
  %17 = load %struct.VLC*, %struct.VLC** %vlc_tab.addr, align 8, !dbg !9586
  %bits15 = getelementptr inbounds %struct.VLC, %struct.VLC* %17, i32 0, i32 0, !dbg !9587
  %18 = load i32, i32* %bits15, align 8, !dbg !9587
  store %struct.GetBitContext* %14, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9588
  store [2 x i16]* %16, [2 x i16]** %table.addr.i, align 8, !dbg !9588
  store i32 %18, i32* %bits.addr.i, align 4, !dbg !9588
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !9588
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9589
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %19, i32 0, i32 2, !dbg !9590
  %20 = load i32, i32* %index.i, align 8, !dbg !9590
  store i32 %20, i32* %re_index.i, align 4, !dbg !9520
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9591
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %21, i32 0, i32 4, !dbg !9592
  %22 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !9592
  store i32 %22, i32* %re_size_plus8.i, align 4, !dbg !9522
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9593
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 0, !dbg !9594
  %24 = load i8*, i8** %buffer.i, align 8, !dbg !9594
  %25 = load i32, i32* %re_index.i, align 4, !dbg !9595
  %shr.i = lshr i32 %25, 3, !dbg !9596
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !9597
  %add.ptr.i = getelementptr inbounds i8, i8* %24, i64 %idx.ext.i, !dbg !9597
  %26 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !9598
  %l.i = bitcast %union.unaligned_32* %26 to i32*, !dbg !9598
  %27 = load i32, i32* %l.i, align 1, !dbg !9598
  store i32 %27, i32* %x.addr.i.i, align 4, !dbg !9599
  %28 = load i32, i32* %x.addr.i.i, align 4, !dbg !9600
  %shl.i.i = shl i32 %28, 8, !dbg !9601
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !9602
  %29 = load i32, i32* %x.addr.i.i, align 4, !dbg !9603
  %shr.i.i = lshr i32 %29, 8, !dbg !9604
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !9605
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !9606
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !9607
  %30 = load i32, i32* %x.addr.i.i, align 4, !dbg !9608
  %shr3.i.i = lshr i32 %30, 16, !dbg !9609
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !9610
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !9611
  %31 = load i32, i32* %x.addr.i.i, align 4, !dbg !9612
  %shr6.i.i = lshr i32 %31, 16, !dbg !9613
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !9614
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !9615
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !9616
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !9617
  %32 = load i32, i32* %re_index.i, align 4, !dbg !9618
  %and.i = and i32 %32, 7, !dbg !9619
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !9620
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !9621
  %33 = load i32, i32* %re_cache.i, align 4, !dbg !9622
  %34 = load i32, i32* %bits.addr.i, align 4, !dbg !9623
  %conv.i = trunc i32 %34 to i8, !dbg !9623
  %call2.i = call i32 @NEG_USR32(i32 %33, i8 signext %conv.i) #9, !dbg !9624
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !9625
  %35 = load i32, i32* %index1.i, align 4, !dbg !9626
  %idxprom.i = zext i32 %35 to i64, !dbg !9627
  %36 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9627
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %36, i64 %idxprom.i, !dbg !9627
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !9627
  %37 = load i16, i16* %arrayidx3.i, align 2, !dbg !9627
  %conv4.i = sext i16 %37 to i32, !dbg !9627
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !9628
  %38 = load i32, i32* %index1.i, align 4, !dbg !9629
  %idxprom5.i = zext i32 %38 to i64, !dbg !9630
  %39 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9630
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %39, i64 %idxprom5.i, !dbg !9630
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !9630
  %40 = load i16, i16* %arrayidx7.i, align 2, !dbg !9630
  %conv8.i = sext i16 %40 to i32, !dbg !9630
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !9631
  %41 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9632
  %cmp.i = icmp sgt i32 %41, 1, !dbg !9633
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !9634

land.lhs.true.i:                                  ; preds = %for.body14
  %42 = load i32, i32* %n.i, align 4, !dbg !9635
  %cmp10.i = icmp slt i32 %42, 0, !dbg !9636
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !9637

if.then.i:                                        ; preds = %land.lhs.true.i
  %43 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9638
  %44 = load i32, i32* %re_index.i, align 4, !dbg !9639
  %45 = load i32, i32* %bits.addr.i, align 4, !dbg !9640
  %add.i = add i32 %44, %45, !dbg !9641
  %cmp12.i = icmp ugt i32 %43, %add.i, !dbg !9642
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !9643

cond.true.i:                                      ; preds = %if.then.i
  %46 = load i32, i32* %re_index.i, align 4, !dbg !9644
  %47 = load i32, i32* %bits.addr.i, align 4, !dbg !9645
  %add14.i = add i32 %46, %47, !dbg !9646
  br label %cond.end.i, !dbg !9647

cond.false.i:                                     ; preds = %if.then.i
  %48 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9648
  br label %cond.end.i, !dbg !9649

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %48, %cond.false.i ], !dbg !9650
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !9651
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9652
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %49, i32 0, i32 0, !dbg !9653
  %50 = load i8*, i8** %buffer15.i, align 8, !dbg !9653
  %51 = load i32, i32* %re_index.i, align 4, !dbg !9654
  %shr16.i = lshr i32 %51, 3, !dbg !9655
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !9656
  %add.ptr18.i = getelementptr inbounds i8, i8* %50, i64 %idx.ext17.i, !dbg !9656
  %52 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !9657
  %l19.i = bitcast %union.unaligned_32* %52 to i32*, !dbg !9657
  %53 = load i32, i32* %l19.i, align 1, !dbg !9657
  store i32 %53, i32* %x.addr.i81.i, align 4, !dbg !9658
  %54 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9659
  %shl.i82.i = shl i32 %54, 8, !dbg !9660
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !9661
  %55 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9662
  %shr.i84.i = lshr i32 %55, 8, !dbg !9663
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !9664
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !9665
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !9666
  %56 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9667
  %shr3.i88.i = lshr i32 %56, 16, !dbg !9668
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !9669
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !9670
  %57 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9671
  %shr6.i91.i = lshr i32 %57, 16, !dbg !9672
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !9673
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !9674
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !9675
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !9676
  %58 = load i32, i32* %re_index.i, align 4, !dbg !9677
  %and21.i = and i32 %58, 7, !dbg !9678
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !9679
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !9680
  %59 = load i32, i32* %n.i, align 4, !dbg !9681
  %sub.i = sub nsw i32 0, %59, !dbg !9682
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !9683
  %60 = load i32, i32* %re_cache.i, align 4, !dbg !9684
  %61 = load i32, i32* %nb_bits.i, align 4, !dbg !9685
  %conv23.i = trunc i32 %61 to i8, !dbg !9685
  %call24.i = call i32 @NEG_USR32(i32 %60, i8 signext %conv23.i) #9, !dbg !9686
  %62 = load i32, i32* %code.i, align 4, !dbg !9687
  %add25.i = add i32 %call24.i, %62, !dbg !9688
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !9689
  %63 = load i32, i32* %index1.i, align 4, !dbg !9690
  %idxprom26.i = zext i32 %63 to i64, !dbg !9691
  %64 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9691
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %64, i64 %idxprom26.i, !dbg !9691
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !9691
  %65 = load i16, i16* %arrayidx28.i, align 2, !dbg !9691
  %conv29.i = sext i16 %65 to i32, !dbg !9691
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !9692
  %66 = load i32, i32* %index1.i, align 4, !dbg !9693
  %idxprom30.i = zext i32 %66 to i64, !dbg !9694
  %67 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9694
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %67, i64 %idxprom30.i, !dbg !9694
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !9694
  %68 = load i16, i16* %arrayidx32.i, align 2, !dbg !9694
  %conv33.i = sext i16 %68 to i32, !dbg !9694
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !9695
  %69 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9696
  %cmp34.i = icmp sgt i32 %69, 2, !dbg !9697
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !9698

land.lhs.true36.i:                                ; preds = %cond.end.i
  %70 = load i32, i32* %n.i, align 4, !dbg !9699
  %cmp37.i = icmp slt i32 %70, 0, !dbg !9700
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !9701

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %71 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9702
  %72 = load i32, i32* %re_index.i, align 4, !dbg !9703
  %73 = load i32, i32* %nb_bits.i, align 4, !dbg !9704
  %add40.i = add i32 %72, %73, !dbg !9705
  %cmp41.i = icmp ugt i32 %71, %add40.i, !dbg !9706
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !9707

cond.true43.i:                                    ; preds = %if.then39.i
  %74 = load i32, i32* %re_index.i, align 4, !dbg !9708
  %75 = load i32, i32* %nb_bits.i, align 4, !dbg !9709
  %add44.i = add i32 %74, %75, !dbg !9710
  br label %cond.end46.i, !dbg !9711

cond.false45.i:                                   ; preds = %if.then39.i
  %76 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9712
  br label %cond.end46.i, !dbg !9713

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %76, %cond.false45.i ], !dbg !9714
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !9715
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9716
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %77, i32 0, i32 0, !dbg !9717
  %78 = load i8*, i8** %buffer48.i, align 8, !dbg !9717
  %79 = load i32, i32* %re_index.i, align 4, !dbg !9718
  %shr49.i = lshr i32 %79, 3, !dbg !9719
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !9720
  %add.ptr51.i = getelementptr inbounds i8, i8* %78, i64 %idx.ext50.i, !dbg !9720
  %80 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !9721
  %l52.i = bitcast %union.unaligned_32* %80 to i32*, !dbg !9721
  %81 = load i32, i32* %l52.i, align 1, !dbg !9721
  store i32 %81, i32* %x.addr.i96.i, align 4, !dbg !9722
  %82 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9723
  %shl.i97.i = shl i32 %82, 8, !dbg !9724
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !9725
  %83 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9726
  %shr.i99.i = lshr i32 %83, 8, !dbg !9727
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !9728
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !9729
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !9730
  %84 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9731
  %shr3.i103.i = lshr i32 %84, 16, !dbg !9732
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !9733
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !9734
  %85 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9735
  %shr6.i106.i = lshr i32 %85, 16, !dbg !9736
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !9737
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !9738
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !9739
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !9740
  %86 = load i32, i32* %re_index.i, align 4, !dbg !9741
  %and54.i = and i32 %86, 7, !dbg !9742
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !9743
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !9744
  %87 = load i32, i32* %n.i, align 4, !dbg !9745
  %sub56.i = sub nsw i32 0, %87, !dbg !9746
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !9747
  %88 = load i32, i32* %re_cache.i, align 4, !dbg !9748
  %89 = load i32, i32* %nb_bits.i, align 4, !dbg !9749
  %conv57.i = trunc i32 %89 to i8, !dbg !9749
  %call58.i = call i32 @NEG_USR32(i32 %88, i8 signext %conv57.i) #9, !dbg !9750
  %90 = load i32, i32* %code.i, align 4, !dbg !9751
  %add59.i = add i32 %call58.i, %90, !dbg !9752
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !9753
  %91 = load i32, i32* %index1.i, align 4, !dbg !9754
  %idxprom60.i = zext i32 %91 to i64, !dbg !9755
  %92 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9755
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %92, i64 %idxprom60.i, !dbg !9755
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !9755
  %93 = load i16, i16* %arrayidx62.i, align 2, !dbg !9755
  %conv63.i = sext i16 %93 to i32, !dbg !9755
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !9756
  %94 = load i32, i32* %index1.i, align 4, !dbg !9757
  %idxprom64.i = zext i32 %94 to i64, !dbg !9758
  %95 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9758
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %95, i64 %idxprom64.i, !dbg !9758
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !9758
  %96 = load i16, i16* %arrayidx66.i, align 2, !dbg !9758
  %conv67.i = sext i16 %96 to i32, !dbg !9758
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !9759
  br label %if.end.i, !dbg !9760

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !9761

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body14
  %97 = load i32, i32* %n.i, align 4, !dbg !9762
  %98 = load i32, i32* %re_cache.i, align 4, !dbg !9763
  %shl70.i = shl i32 %98, %97, !dbg !9763
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !9763
  %99 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9764
  %100 = load i32, i32* %re_index.i, align 4, !dbg !9765
  %101 = load i32, i32* %n.i, align 4, !dbg !9766
  %add71.i = add i32 %100, %101, !dbg !9767
  %cmp72.i = icmp ugt i32 %99, %add71.i, !dbg !9768
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !9769

cond.true74.i:                                    ; preds = %if.end68.i
  %102 = load i32, i32* %re_index.i, align 4, !dbg !9770
  %103 = load i32, i32* %n.i, align 4, !dbg !9771
  %add75.i = add i32 %102, %103, !dbg !9772
  br label %get_vlc2.exit, !dbg !9773

cond.false76.i:                                   ; preds = %if.end68.i
  %104 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9774
  br label %get_vlc2.exit, !dbg !9775

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %104, %cond.false76.i ], !dbg !9776
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !9777
  %105 = load i32, i32* %re_index.i, align 4, !dbg !9778
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9779
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %106, i32 0, i32 2, !dbg !9780
  store i32 %105, i32* %index80.i, align 8, !dbg !9781
  %107 = load i32, i32* %code.i, align 4, !dbg !9782
  store i32 %107, i32* %val, align 4, !dbg !9783
  store i32 0, i32* %i, align 4, !dbg !9784
  br label %for.cond17, !dbg !9785

for.cond17:                                       ; preds = %for.inc, %get_vlc2.exit
  %108 = load i32, i32* %i, align 4, !dbg !9786
  %109 = load i32, i32* %num_coeffs, align 4, !dbg !9788
  %cmp18 = icmp slt i32 %108, %109, !dbg !9789
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !9790

for.body20:                                       ; preds = %for.cond17
  %110 = load i32, i32* %val, align 4, !dbg !9791
  %111 = load i32, i32* %bits, align 4, !dbg !9792
  store i32 %110, i32* %a.addr.i, align 4, !dbg !9793
  store i32 %111, i32* %p.addr.i, align 4, !dbg !9793
  %112 = load i32, i32* %a.addr.i, align 4, !dbg !9794
  %113 = load i32, i32* %p.addr.i, align 4, !dbg !9795
  %shl.i38 = shl i32 1, %113, !dbg !9796
  %sub.i39 = sub nsw i32 %shl.i38, 1, !dbg !9797
  %and.i40 = and i32 %112, %sub.i39, !dbg !9798
  store i32 %and.i40, i32* %cf, align 4, !dbg !9799
  %114 = load i32, i32* %is_signed, align 4, !dbg !9800
  %tobool22 = icmp ne i32 %114, 0, !dbg !9800
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !9802

if.then23:                                        ; preds = %for.body20
  %115 = load i32, i32* %cf, align 4, !dbg !9803
  %116 = load i32, i32* %bits, align 4, !dbg !9804
  %call24 = call i32 @sign_extend(i32 %115, i32 %116) #1, !dbg !9805
  store i32 %call24, i32* %cf, align 4, !dbg !9806
  br label %if.end29, !dbg !9807

if.else:                                          ; preds = %for.body20
  %117 = load i32, i32* %cf, align 4, !dbg !9808
  %tobool25 = icmp ne i32 %117, 0, !dbg !9808
  br i1 %tobool25, label %land.lhs.true, label %if.end, !dbg !9810

land.lhs.true:                                    ; preds = %if.else
  %118 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9811
  %call26 = call i32 @get_bits1(%struct.GetBitContext* %118), !dbg !9813
  %tobool27 = icmp ne i32 %call26, 0, !dbg !9813
  br i1 %tobool27, label %if.then28, label %if.end, !dbg !9814

if.then28:                                        ; preds = %land.lhs.true
  %119 = load i32, i32* %cf, align 4, !dbg !9815
  %sub = sub nsw i32 0, %119, !dbg !9816
  store i32 %sub, i32* %cf, align 4, !dbg !9817
  br label %if.end, !dbg !9818

if.end:                                           ; preds = %if.then28, %land.lhs.true, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then23
  %120 = load i32, i32* %cf, align 4, !dbg !9819
  %conv30 = trunc i32 %120 to i16, !dbg !9819
  %121 = load i32, i32* %pos, align 4, !dbg !9820
  %inc = add nsw i32 %121, 1, !dbg !9820
  store i32 %inc, i32* %pos, align 4, !dbg !9820
  %idxprom = sext i32 %121 to i64, !dbg !9821
  %122 = load i16*, i16** %out.addr, align 8, !dbg !9821
  %arrayidx = getelementptr inbounds i16, i16* %122, i64 %idxprom, !dbg !9821
  store i16 %conv30, i16* %arrayidx, align 2, !dbg !9822
  %123 = load i32, i32* %bits, align 4, !dbg !9823
  %124 = load i32, i32* %val, align 4, !dbg !9824
  %shr = lshr i32 %124, %123, !dbg !9824
  store i32 %shr, i32* %val, align 4, !dbg !9824
  br label %for.inc, !dbg !9825

for.inc:                                          ; preds = %if.end29
  %125 = load i32, i32* %i, align 4, !dbg !9826
  %inc31 = add nsw i32 %125, 1, !dbg !9826
  store i32 %inc31, i32* %i, align 4, !dbg !9826
  br label %for.cond17, !dbg !9828, !llvm.loop !9829

for.end:                                          ; preds = %for.cond17
  br label %for.inc32, !dbg !9831

for.inc32:                                        ; preds = %for.end
  %126 = load i32, i32* %j, align 4, !dbg !9832
  %inc33 = add nsw i32 %126, 1, !dbg !9832
  store i32 %inc33, i32* %j, align 4, !dbg !9832
  br label %for.cond11, !dbg !9834, !llvm.loop !9835

for.end34:                                        ; preds = %for.cond11
  br label %if.end36, !dbg !9837

if.else35:                                        ; preds = %lor.lhs.false
  %127 = load i32, i32* %group_size, align 4, !dbg !9838
  %128 = load i32, i32* %num_coeffs, align 4, !dbg !9839
  %mul = mul nsw i32 %127, %128, !dbg !9840
  %129 = load i32, i32* %pos, align 4, !dbg !9841
  %add = add nsw i32 %129, %mul, !dbg !9841
  store i32 %add, i32* %pos, align 4, !dbg !9841
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %for.end34
  br label %for.cond, !dbg !9842, !llvm.loop !9844

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !9846
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal i32 @decode_gainc_npoints(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32 %coded_subbands) #3 !dbg !9847 {
entry:
  %s.addr.i533 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i533, metadata !3954, metadata !1324), !dbg !9850
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !3966, metadata !1324), !dbg !9858
  %x.addr.i96.i387 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i387, metadata !2531, metadata !1324), !dbg !9859
  %x.addr.i81.i388 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i388, metadata !2531, metadata !1324), !dbg !9867
  %x.addr.i.i389 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i389, metadata !2531, metadata !1324), !dbg !9869
  %s.addr.i390 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i390, metadata !3291, metadata !1324), !dbg !9871
  %table.addr.i391 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i391, metadata !3293, metadata !1324), !dbg !9872
  %bits.addr.i392 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i392, metadata !3295, metadata !1324), !dbg !9873
  %max_depth.addr.i393 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i393, metadata !3297, metadata !1324), !dbg !9874
  %code.i394 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i394, metadata !3299, metadata !1324), !dbg !9875
  %re_index.i395 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i395, metadata !3301, metadata !1324), !dbg !9876
  %re_cache.i396 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i396, metadata !3303, metadata !1324), !dbg !9877
  %re_size_plus8.i397 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i397, metadata !3305, metadata !1324), !dbg !9878
  %n.i398 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i398, metadata !3307, metadata !1324), !dbg !9879
  %nb_bits.i399 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i399, metadata !3309, metadata !1324), !dbg !9880
  %index1.i400 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i400, metadata !3311, metadata !1324), !dbg !9881
  %x.addr.i96.i241 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i241, metadata !2531, metadata !1324), !dbg !9882
  %x.addr.i81.i242 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i242, metadata !2531, metadata !1324), !dbg !9885
  %x.addr.i.i243 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i243, metadata !2531, metadata !1324), !dbg !9887
  %s.addr.i244 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i244, metadata !3291, metadata !1324), !dbg !9889
  %table.addr.i245 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i245, metadata !3293, metadata !1324), !dbg !9890
  %bits.addr.i246 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i246, metadata !3295, metadata !1324), !dbg !9891
  %max_depth.addr.i247 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i247, metadata !3297, metadata !1324), !dbg !9892
  %code.i248 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i248, metadata !3299, metadata !1324), !dbg !9893
  %re_index.i249 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i249, metadata !3301, metadata !1324), !dbg !9894
  %re_cache.i250 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i250, metadata !3303, metadata !1324), !dbg !9895
  %re_size_plus8.i251 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i251, metadata !3305, metadata !1324), !dbg !9896
  %n.i252 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i252, metadata !3307, metadata !1324), !dbg !9897
  %nb_bits.i253 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i253, metadata !3309, metadata !1324), !dbg !9898
  %index1.i254 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i254, metadata !3311, metadata !1324), !dbg !9899
  %x.addr.i96.i95 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i95, metadata !2531, metadata !1324), !dbg !9900
  %x.addr.i81.i96 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i96, metadata !2531, metadata !1324), !dbg !9907
  %x.addr.i.i97 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i97, metadata !2531, metadata !1324), !dbg !9909
  %s.addr.i98 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i98, metadata !3291, metadata !1324), !dbg !9911
  %table.addr.i99 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i99, metadata !3293, metadata !1324), !dbg !9912
  %bits.addr.i100 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i100, metadata !3295, metadata !1324), !dbg !9913
  %max_depth.addr.i101 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i101, metadata !3297, metadata !1324), !dbg !9914
  %code.i102 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i102, metadata !3299, metadata !1324), !dbg !9915
  %re_index.i103 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i103, metadata !3301, metadata !1324), !dbg !9916
  %re_cache.i104 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i104, metadata !3303, metadata !1324), !dbg !9917
  %re_size_plus8.i105 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i105, metadata !3305, metadata !1324), !dbg !9918
  %n.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i106, metadata !3307, metadata !1324), !dbg !9919
  %nb_bits.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i107, metadata !3309, metadata !1324), !dbg !9920
  %index1.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i108, metadata !3311, metadata !1324), !dbg !9921
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !9922
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !9927
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !9929
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !9931
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !9932
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !9933
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !9934
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !9935
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !9936
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !9937
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !9938
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !9939
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !9940
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !9941
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %coded_subbands.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %delta = alloca i32, align 4
  %delta_bits = alloca i32, align 4
  %min_val = alloca i32, align 4
  %chan = alloca %struct.Atrac3pChanParams*, align 8
  %ref_chan = alloca %struct.Atrac3pChanParams*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9942, metadata !1324), !dbg !9943
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !9944, metadata !1324), !dbg !9945
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !9946, metadata !1324), !dbg !9947
  store i32 %coded_subbands, i32* %coded_subbands.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coded_subbands.addr, metadata !9948, metadata !1324), !dbg !9949
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9950, metadata !1324), !dbg !9951
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !9952, metadata !1324), !dbg !9953
  call void @llvm.dbg.declare(metadata i32* %delta_bits, metadata !9954, metadata !1324), !dbg !9955
  call void @llvm.dbg.declare(metadata i32* %min_val, metadata !9956, metadata !1324), !dbg !9957
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan, metadata !9958, metadata !1324), !dbg !9959
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !9960
  %idxprom = sext i32 %0 to i64, !dbg !9961
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !9961
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !9962
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !9961
  store %struct.Atrac3pChanParams* %arrayidx, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9959
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %ref_chan, metadata !9963, metadata !1324), !dbg !9964
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !9965
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 12, !dbg !9966
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !9965
  store %struct.Atrac3pChanParams* %arrayidx2, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !9964
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9967
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 2), !dbg !9968
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb18
    i32 3, label %sw.bb55
  ], !dbg !9969

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9970
  br label %for.cond, !dbg !9972

for.cond:                                         ; preds = %for.inc, %sw.bb
  %4 = load i32, i32* %i, align 4, !dbg !9973
  %5 = load i32, i32* %coded_subbands.addr, align 4, !dbg !9976
  %cmp = icmp slt i32 %4, %5, !dbg !9977
  br i1 %cmp, label %for.body, label %for.end, !dbg !9978

for.body:                                         ; preds = %for.cond
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9979
  %call3 = call i32 @get_bits(%struct.GetBitContext* %6, i32 3), !dbg !9980
  %7 = load i32, i32* %i, align 4, !dbg !9981
  %idxprom4 = sext i32 %7 to i64, !dbg !9982
  %8 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !9982
  %gain_data = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %8, i32 0, i32 14, !dbg !9983
  %9 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data, align 8, !dbg !9983
  %arrayidx5 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %9, i64 %idxprom4, !dbg !9982
  %num_points = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx5, i32 0, i32 0, !dbg !9984
  store i32 %call3, i32* %num_points, align 4, !dbg !9985
  br label %for.inc, !dbg !9982

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !9986
  %inc = add nsw i32 %10, 1, !dbg !9986
  store i32 %inc, i32* %i, align 4, !dbg !9986
  br label %for.cond, !dbg !9988, !llvm.loop !9989

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !9991

sw.bb6:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9992
  br label %for.cond7, !dbg !9993

for.cond7:                                        ; preds = %for.inc15, %sw.bb6
  %11 = load i32, i32* %i, align 4, !dbg !9994
  %12 = load i32, i32* %coded_subbands.addr, align 4, !dbg !9996
  %cmp8 = icmp slt i32 %11, %12, !dbg !9997
  br i1 %cmp8, label %for.body9, label %for.end17, !dbg !9998

for.body9:                                        ; preds = %for.cond7
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9999
  %14 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 0, i32 1), align 8, !dbg !10000
  %15 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 0, i32 0), align 16, !dbg !10001
  store %struct.GetBitContext* %13, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10002
  store [2 x i16]* %14, [2 x i16]** %table.addr.i, align 8, !dbg !10002
  store i32 %15, i32* %bits.addr.i, align 4, !dbg !10002
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !10002
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10003
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %16, i32 0, i32 2, !dbg !10004
  %17 = load i32, i32* %index.i, align 8, !dbg !10004
  store i32 %17, i32* %re_index.i, align 4, !dbg !9936
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10005
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %18, i32 0, i32 4, !dbg !10006
  %19 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !10006
  store i32 %19, i32* %re_size_plus8.i, align 4, !dbg !9938
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10007
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %20, i32 0, i32 0, !dbg !10008
  %21 = load i8*, i8** %buffer.i, align 8, !dbg !10008
  %22 = load i32, i32* %re_index.i, align 4, !dbg !10009
  %shr.i = lshr i32 %22, 3, !dbg !10010
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !10011
  %add.ptr.i = getelementptr inbounds i8, i8* %21, i64 %idx.ext.i, !dbg !10011
  %23 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !10012
  %l.i = bitcast %union.unaligned_32* %23 to i32*, !dbg !10012
  %24 = load i32, i32* %l.i, align 1, !dbg !10012
  store i32 %24, i32* %x.addr.i.i, align 4, !dbg !10013
  %25 = load i32, i32* %x.addr.i.i, align 4, !dbg !10014
  %shl.i.i = shl i32 %25, 8, !dbg !10015
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !10016
  %26 = load i32, i32* %x.addr.i.i, align 4, !dbg !10017
  %shr.i.i = lshr i32 %26, 8, !dbg !10018
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !10019
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !10020
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !10021
  %27 = load i32, i32* %x.addr.i.i, align 4, !dbg !10022
  %shr3.i.i = lshr i32 %27, 16, !dbg !10023
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !10024
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !10025
  %28 = load i32, i32* %x.addr.i.i, align 4, !dbg !10026
  %shr6.i.i = lshr i32 %28, 16, !dbg !10027
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !10028
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !10029
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !10030
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !10031
  %29 = load i32, i32* %re_index.i, align 4, !dbg !10032
  %and.i = and i32 %29, 7, !dbg !10033
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !10034
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !10035
  %30 = load i32, i32* %re_cache.i, align 4, !dbg !10036
  %31 = load i32, i32* %bits.addr.i, align 4, !dbg !10037
  %conv.i = trunc i32 %31 to i8, !dbg !10037
  %call2.i = call i32 @NEG_USR32(i32 %30, i8 signext %conv.i) #9, !dbg !10038
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !10039
  %32 = load i32, i32* %index1.i, align 4, !dbg !10040
  %idxprom.i = zext i32 %32 to i64, !dbg !10041
  %33 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10041
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %33, i64 %idxprom.i, !dbg !10041
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !10041
  %34 = load i16, i16* %arrayidx3.i, align 2, !dbg !10041
  %conv4.i = sext i16 %34 to i32, !dbg !10041
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !10042
  %35 = load i32, i32* %index1.i, align 4, !dbg !10043
  %idxprom5.i = zext i32 %35 to i64, !dbg !10044
  %36 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10044
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %36, i64 %idxprom5.i, !dbg !10044
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !10044
  %37 = load i16, i16* %arrayidx7.i, align 2, !dbg !10044
  %conv8.i = sext i16 %37 to i32, !dbg !10044
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !10045
  %38 = load i32, i32* %max_depth.addr.i, align 4, !dbg !10046
  %cmp.i = icmp sgt i32 %38, 1, !dbg !10047
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !10048

land.lhs.true.i:                                  ; preds = %for.body9
  %39 = load i32, i32* %n.i, align 4, !dbg !10049
  %cmp10.i = icmp slt i32 %39, 0, !dbg !10050
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !10051

if.then.i:                                        ; preds = %land.lhs.true.i
  %40 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10052
  %41 = load i32, i32* %re_index.i, align 4, !dbg !10053
  %42 = load i32, i32* %bits.addr.i, align 4, !dbg !10054
  %add.i = add i32 %41, %42, !dbg !10055
  %cmp12.i = icmp ugt i32 %40, %add.i, !dbg !10056
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !10057

cond.true.i:                                      ; preds = %if.then.i
  %43 = load i32, i32* %re_index.i, align 4, !dbg !10058
  %44 = load i32, i32* %bits.addr.i, align 4, !dbg !10059
  %add14.i = add i32 %43, %44, !dbg !10060
  br label %cond.end.i, !dbg !10061

cond.false.i:                                     ; preds = %if.then.i
  %45 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10062
  br label %cond.end.i, !dbg !10063

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %45, %cond.false.i ], !dbg !10064
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !10065
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10066
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %46, i32 0, i32 0, !dbg !10067
  %47 = load i8*, i8** %buffer15.i, align 8, !dbg !10067
  %48 = load i32, i32* %re_index.i, align 4, !dbg !10068
  %shr16.i = lshr i32 %48, 3, !dbg !10069
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !10070
  %add.ptr18.i = getelementptr inbounds i8, i8* %47, i64 %idx.ext17.i, !dbg !10070
  %49 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !10071
  %l19.i = bitcast %union.unaligned_32* %49 to i32*, !dbg !10071
  %50 = load i32, i32* %l19.i, align 1, !dbg !10071
  store i32 %50, i32* %x.addr.i81.i, align 4, !dbg !10072
  %51 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10073
  %shl.i82.i = shl i32 %51, 8, !dbg !10074
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !10075
  %52 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10076
  %shr.i84.i = lshr i32 %52, 8, !dbg !10077
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !10078
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !10079
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !10080
  %53 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10081
  %shr3.i88.i = lshr i32 %53, 16, !dbg !10082
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !10083
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !10084
  %54 = load i32, i32* %x.addr.i81.i, align 4, !dbg !10085
  %shr6.i91.i = lshr i32 %54, 16, !dbg !10086
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !10087
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !10088
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !10089
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !10090
  %55 = load i32, i32* %re_index.i, align 4, !dbg !10091
  %and21.i = and i32 %55, 7, !dbg !10092
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !10093
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !10094
  %56 = load i32, i32* %n.i, align 4, !dbg !10095
  %sub.i = sub nsw i32 0, %56, !dbg !10096
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !10097
  %57 = load i32, i32* %re_cache.i, align 4, !dbg !10098
  %58 = load i32, i32* %nb_bits.i, align 4, !dbg !10099
  %conv23.i = trunc i32 %58 to i8, !dbg !10099
  %call24.i = call i32 @NEG_USR32(i32 %57, i8 signext %conv23.i) #9, !dbg !10100
  %59 = load i32, i32* %code.i, align 4, !dbg !10101
  %add25.i = add i32 %call24.i, %59, !dbg !10102
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !10103
  %60 = load i32, i32* %index1.i, align 4, !dbg !10104
  %idxprom26.i = zext i32 %60 to i64, !dbg !10105
  %61 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10105
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %61, i64 %idxprom26.i, !dbg !10105
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !10105
  %62 = load i16, i16* %arrayidx28.i, align 2, !dbg !10105
  %conv29.i = sext i16 %62 to i32, !dbg !10105
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !10106
  %63 = load i32, i32* %index1.i, align 4, !dbg !10107
  %idxprom30.i = zext i32 %63 to i64, !dbg !10108
  %64 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10108
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %64, i64 %idxprom30.i, !dbg !10108
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !10108
  %65 = load i16, i16* %arrayidx32.i, align 2, !dbg !10108
  %conv33.i = sext i16 %65 to i32, !dbg !10108
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !10109
  %66 = load i32, i32* %max_depth.addr.i, align 4, !dbg !10110
  %cmp34.i = icmp sgt i32 %66, 2, !dbg !10111
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !10112

land.lhs.true36.i:                                ; preds = %cond.end.i
  %67 = load i32, i32* %n.i, align 4, !dbg !10113
  %cmp37.i = icmp slt i32 %67, 0, !dbg !10114
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !10115

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %68 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10116
  %69 = load i32, i32* %re_index.i, align 4, !dbg !10117
  %70 = load i32, i32* %nb_bits.i, align 4, !dbg !10118
  %add40.i = add i32 %69, %70, !dbg !10119
  %cmp41.i = icmp ugt i32 %68, %add40.i, !dbg !10120
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !10121

cond.true43.i:                                    ; preds = %if.then39.i
  %71 = load i32, i32* %re_index.i, align 4, !dbg !10122
  %72 = load i32, i32* %nb_bits.i, align 4, !dbg !10123
  %add44.i = add i32 %71, %72, !dbg !10124
  br label %cond.end46.i, !dbg !10125

cond.false45.i:                                   ; preds = %if.then39.i
  %73 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10126
  br label %cond.end46.i, !dbg !10127

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %73, %cond.false45.i ], !dbg !10128
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !10129
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10130
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %74, i32 0, i32 0, !dbg !10131
  %75 = load i8*, i8** %buffer48.i, align 8, !dbg !10131
  %76 = load i32, i32* %re_index.i, align 4, !dbg !10132
  %shr49.i = lshr i32 %76, 3, !dbg !10133
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !10134
  %add.ptr51.i = getelementptr inbounds i8, i8* %75, i64 %idx.ext50.i, !dbg !10134
  %77 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !10135
  %l52.i = bitcast %union.unaligned_32* %77 to i32*, !dbg !10135
  %78 = load i32, i32* %l52.i, align 1, !dbg !10135
  store i32 %78, i32* %x.addr.i96.i, align 4, !dbg !10136
  %79 = load i32, i32* %x.addr.i96.i, align 4, !dbg !10137
  %shl.i97.i = shl i32 %79, 8, !dbg !10138
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !10139
  %80 = load i32, i32* %x.addr.i96.i, align 4, !dbg !10140
  %shr.i99.i = lshr i32 %80, 8, !dbg !10141
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !10142
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !10143
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !10144
  %81 = load i32, i32* %x.addr.i96.i, align 4, !dbg !10145
  %shr3.i103.i = lshr i32 %81, 16, !dbg !10146
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !10147
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !10148
  %82 = load i32, i32* %x.addr.i96.i, align 4, !dbg !10149
  %shr6.i106.i = lshr i32 %82, 16, !dbg !10150
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !10151
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !10152
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !10153
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !10154
  %83 = load i32, i32* %re_index.i, align 4, !dbg !10155
  %and54.i = and i32 %83, 7, !dbg !10156
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !10157
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !10158
  %84 = load i32, i32* %n.i, align 4, !dbg !10159
  %sub56.i = sub nsw i32 0, %84, !dbg !10160
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !10161
  %85 = load i32, i32* %re_cache.i, align 4, !dbg !10162
  %86 = load i32, i32* %nb_bits.i, align 4, !dbg !10163
  %conv57.i = trunc i32 %86 to i8, !dbg !10163
  %call58.i = call i32 @NEG_USR32(i32 %85, i8 signext %conv57.i) #9, !dbg !10164
  %87 = load i32, i32* %code.i, align 4, !dbg !10165
  %add59.i = add i32 %call58.i, %87, !dbg !10166
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !10167
  %88 = load i32, i32* %index1.i, align 4, !dbg !10168
  %idxprom60.i = zext i32 %88 to i64, !dbg !10169
  %89 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10169
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %89, i64 %idxprom60.i, !dbg !10169
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !10169
  %90 = load i16, i16* %arrayidx62.i, align 2, !dbg !10169
  %conv63.i = sext i16 %90 to i32, !dbg !10169
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !10170
  %91 = load i32, i32* %index1.i, align 4, !dbg !10171
  %idxprom64.i = zext i32 %91 to i64, !dbg !10172
  %92 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !10172
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %92, i64 %idxprom64.i, !dbg !10172
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !10172
  %93 = load i16, i16* %arrayidx66.i, align 2, !dbg !10172
  %conv67.i = sext i16 %93 to i32, !dbg !10172
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !10173
  br label %if.end.i, !dbg !10174

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !10175

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body9
  %94 = load i32, i32* %n.i, align 4, !dbg !10176
  %95 = load i32, i32* %re_cache.i, align 4, !dbg !10177
  %shl70.i = shl i32 %95, %94, !dbg !10177
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !10177
  %96 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10178
  %97 = load i32, i32* %re_index.i, align 4, !dbg !10179
  %98 = load i32, i32* %n.i, align 4, !dbg !10180
  %add71.i = add i32 %97, %98, !dbg !10181
  %cmp72.i = icmp ugt i32 %96, %add71.i, !dbg !10182
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !10183

cond.true74.i:                                    ; preds = %if.end68.i
  %99 = load i32, i32* %re_index.i, align 4, !dbg !10184
  %100 = load i32, i32* %n.i, align 4, !dbg !10185
  %add75.i = add i32 %99, %100, !dbg !10186
  br label %get_vlc2.exit, !dbg !10187

cond.false76.i:                                   ; preds = %if.end68.i
  %101 = load i32, i32* %re_size_plus8.i, align 4, !dbg !10188
  br label %get_vlc2.exit, !dbg !10189

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %101, %cond.false76.i ], !dbg !10190
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !10191
  %102 = load i32, i32* %re_index.i, align 4, !dbg !10192
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !10193
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %103, i32 0, i32 2, !dbg !10194
  store i32 %102, i32* %index80.i, align 8, !dbg !10195
  %104 = load i32, i32* %code.i, align 4, !dbg !10196
  %105 = load i32, i32* %i, align 4, !dbg !10197
  %idxprom11 = sext i32 %105 to i64, !dbg !10198
  %106 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10198
  %gain_data12 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %106, i32 0, i32 14, !dbg !10199
  %107 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data12, align 8, !dbg !10199
  %arrayidx13 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %107, i64 %idxprom11, !dbg !10198
  %num_points14 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx13, i32 0, i32 0, !dbg !10200
  store i32 %104, i32* %num_points14, align 4, !dbg !10201
  br label %for.inc15, !dbg !10198

for.inc15:                                        ; preds = %get_vlc2.exit
  %108 = load i32, i32* %i, align 4, !dbg !10202
  %inc16 = add nsw i32 %108, 1, !dbg !10202
  store i32 %inc16, i32* %i, align 4, !dbg !10202
  br label %for.cond7, !dbg !10204, !llvm.loop !10205

for.end17:                                        ; preds = %for.cond7
  br label %sw.epilog, !dbg !10207

sw.bb18:                                          ; preds = %entry
  %109 = load i32, i32* %ch_num.addr, align 4, !dbg !10208
  %tobool = icmp ne i32 %109, 0, !dbg !10208
  br i1 %tobool, label %if.then, label %if.else, !dbg !10209

if.then:                                          ; preds = %sw.bb18
  store i32 0, i32* %i, align 4, !dbg !10210
  br label %for.cond19, !dbg !10211

for.cond19:                                       ; preds = %for.inc31, %if.then
  %110 = load i32, i32* %i, align 4, !dbg !10212
  %111 = load i32, i32* %coded_subbands.addr, align 4, !dbg !10214
  %cmp20 = icmp slt i32 %110, %111, !dbg !10215
  br i1 %cmp20, label %for.body21, label %for.end33, !dbg !10216

for.body21:                                       ; preds = %for.cond19
  %112 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10217
  %113 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 1, i32 1), align 8, !dbg !10218
  %114 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 1, i32 0), align 8, !dbg !10219
  store %struct.GetBitContext* %112, %struct.GetBitContext** %s.addr.i98, align 8, !dbg !10220
  store [2 x i16]* %113, [2 x i16]** %table.addr.i99, align 8, !dbg !10220
  store i32 %114, i32* %bits.addr.i100, align 4, !dbg !10220
  store i32 1, i32* %max_depth.addr.i101, align 4, !dbg !10220
  %115 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i98, align 8, !dbg !10221
  %index.i109 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %115, i32 0, i32 2, !dbg !10222
  %116 = load i32, i32* %index.i109, align 8, !dbg !10222
  store i32 %116, i32* %re_index.i103, align 4, !dbg !9916
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i98, align 8, !dbg !10223
  %size_in_bits_plus8.i110 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %117, i32 0, i32 4, !dbg !10224
  %118 = load i32, i32* %size_in_bits_plus8.i110, align 8, !dbg !10224
  store i32 %118, i32* %re_size_plus8.i105, align 4, !dbg !9918
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i98, align 8, !dbg !10225
  %buffer.i111 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %119, i32 0, i32 0, !dbg !10226
  %120 = load i8*, i8** %buffer.i111, align 8, !dbg !10226
  %121 = load i32, i32* %re_index.i103, align 4, !dbg !10227
  %shr.i112 = lshr i32 %121, 3, !dbg !10228
  %idx.ext.i113 = zext i32 %shr.i112 to i64, !dbg !10229
  %add.ptr.i114 = getelementptr inbounds i8, i8* %120, i64 %idx.ext.i113, !dbg !10229
  %122 = bitcast i8* %add.ptr.i114 to %union.unaligned_32*, !dbg !10230
  %l.i115 = bitcast %union.unaligned_32* %122 to i32*, !dbg !10230
  %123 = load i32, i32* %l.i115, align 1, !dbg !10230
  store i32 %123, i32* %x.addr.i.i97, align 4, !dbg !10231
  %124 = load i32, i32* %x.addr.i.i97, align 4, !dbg !10232
  %shl.i.i116 = shl i32 %124, 8, !dbg !10233
  %and.i.i117 = and i32 %shl.i.i116, 65280, !dbg !10234
  %125 = load i32, i32* %x.addr.i.i97, align 4, !dbg !10235
  %shr.i.i118 = lshr i32 %125, 8, !dbg !10236
  %and1.i.i119 = and i32 %shr.i.i118, 255, !dbg !10237
  %or.i.i120 = or i32 %and.i.i117, %and1.i.i119, !dbg !10238
  %shl2.i.i121 = shl i32 %or.i.i120, 16, !dbg !10239
  %126 = load i32, i32* %x.addr.i.i97, align 4, !dbg !10240
  %shr3.i.i122 = lshr i32 %126, 16, !dbg !10241
  %shl4.i.i123 = shl i32 %shr3.i.i122, 8, !dbg !10242
  %and5.i.i124 = and i32 %shl4.i.i123, 65280, !dbg !10243
  %127 = load i32, i32* %x.addr.i.i97, align 4, !dbg !10244
  %shr6.i.i125 = lshr i32 %127, 16, !dbg !10245
  %shr7.i.i126 = lshr i32 %shr6.i.i125, 8, !dbg !10246
  %and8.i.i127 = and i32 %shr7.i.i126, 255, !dbg !10247
  %or9.i.i128 = or i32 %and5.i.i124, %and8.i.i127, !dbg !10248
  %or10.i.i129 = or i32 %shl2.i.i121, %or9.i.i128, !dbg !10249
  %128 = load i32, i32* %re_index.i103, align 4, !dbg !10250
  %and.i130 = and i32 %128, 7, !dbg !10251
  %shl.i131 = shl i32 %or10.i.i129, %and.i130, !dbg !10252
  store i32 %shl.i131, i32* %re_cache.i104, align 4, !dbg !10253
  %129 = load i32, i32* %re_cache.i104, align 4, !dbg !10254
  %130 = load i32, i32* %bits.addr.i100, align 4, !dbg !10255
  %conv.i132 = trunc i32 %130 to i8, !dbg !10255
  %call2.i133 = call i32 @NEG_USR32(i32 %129, i8 signext %conv.i132) #9, !dbg !10256
  store i32 %call2.i133, i32* %index1.i108, align 4, !dbg !10257
  %131 = load i32, i32* %index1.i108, align 4, !dbg !10258
  %idxprom.i134 = zext i32 %131 to i64, !dbg !10259
  %132 = load [2 x i16]*, [2 x i16]** %table.addr.i99, align 8, !dbg !10259
  %arrayidx.i135 = getelementptr inbounds [2 x i16], [2 x i16]* %132, i64 %idxprom.i134, !dbg !10259
  %arrayidx3.i136 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i135, i64 0, i64 0, !dbg !10259
  %133 = load i16, i16* %arrayidx3.i136, align 2, !dbg !10259
  %conv4.i137 = sext i16 %133 to i32, !dbg !10259
  store i32 %conv4.i137, i32* %code.i102, align 4, !dbg !10260
  %134 = load i32, i32* %index1.i108, align 4, !dbg !10261
  %idxprom5.i138 = zext i32 %134 to i64, !dbg !10262
  %135 = load [2 x i16]*, [2 x i16]** %table.addr.i99, align 8, !dbg !10262
  %arrayidx6.i139 = getelementptr inbounds [2 x i16], [2 x i16]* %135, i64 %idxprom5.i138, !dbg !10262
  %arrayidx7.i140 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i139, i64 0, i64 1, !dbg !10262
  %136 = load i16, i16* %arrayidx7.i140, align 2, !dbg !10262
  %conv8.i141 = sext i16 %136 to i32, !dbg !10262
  store i32 %conv8.i141, i32* %n.i106, align 4, !dbg !10263
  %137 = load i32, i32* %max_depth.addr.i101, align 4, !dbg !10264
  %cmp.i142 = icmp sgt i32 %137, 1, !dbg !10265
  br i1 %cmp.i142, label %land.lhs.true.i144, label %if.end68.i231, !dbg !10266

land.lhs.true.i144:                               ; preds = %for.body21
  %138 = load i32, i32* %n.i106, align 4, !dbg !10267
  %cmp10.i143 = icmp slt i32 %138, 0, !dbg !10268
  br i1 %cmp10.i143, label %if.then.i147, label %if.end68.i231, !dbg !10269

if.then.i147:                                     ; preds = %land.lhs.true.i144
  %139 = load i32, i32* %re_size_plus8.i105, align 4, !dbg !10270
  %140 = load i32, i32* %re_index.i103, align 4, !dbg !10271
  %141 = load i32, i32* %bits.addr.i100, align 4, !dbg !10272
  %add.i145 = add i32 %140, %141, !dbg !10273
  %cmp12.i146 = icmp ugt i32 %139, %add.i145, !dbg !10274
  br i1 %cmp12.i146, label %cond.true.i149, label %cond.false.i150, !dbg !10275

cond.true.i149:                                   ; preds = %if.then.i147
  %142 = load i32, i32* %re_index.i103, align 4, !dbg !10276
  %143 = load i32, i32* %bits.addr.i100, align 4, !dbg !10277
  %add14.i148 = add i32 %142, %143, !dbg !10278
  br label %cond.end.i186, !dbg !10279

cond.false.i150:                                  ; preds = %if.then.i147
  %144 = load i32, i32* %re_size_plus8.i105, align 4, !dbg !10280
  br label %cond.end.i186, !dbg !10281

cond.end.i186:                                    ; preds = %cond.false.i150, %cond.true.i149
  %cond.i151 = phi i32 [ %add14.i148, %cond.true.i149 ], [ %144, %cond.false.i150 ], !dbg !10282
  store i32 %cond.i151, i32* %re_index.i103, align 4, !dbg !10283
  %145 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i98, align 8, !dbg !10284
  %buffer15.i152 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %145, i32 0, i32 0, !dbg !10285
  %146 = load i8*, i8** %buffer15.i152, align 8, !dbg !10285
  %147 = load i32, i32* %re_index.i103, align 4, !dbg !10286
  %shr16.i153 = lshr i32 %147, 3, !dbg !10287
  %idx.ext17.i154 = zext i32 %shr16.i153 to i64, !dbg !10288
  %add.ptr18.i155 = getelementptr inbounds i8, i8* %146, i64 %idx.ext17.i154, !dbg !10288
  %148 = bitcast i8* %add.ptr18.i155 to %union.unaligned_32*, !dbg !10289
  %l19.i156 = bitcast %union.unaligned_32* %148 to i32*, !dbg !10289
  %149 = load i32, i32* %l19.i156, align 1, !dbg !10289
  store i32 %149, i32* %x.addr.i81.i96, align 4, !dbg !10290
  %150 = load i32, i32* %x.addr.i81.i96, align 4, !dbg !10291
  %shl.i82.i157 = shl i32 %150, 8, !dbg !10292
  %and.i83.i158 = and i32 %shl.i82.i157, 65280, !dbg !10293
  %151 = load i32, i32* %x.addr.i81.i96, align 4, !dbg !10294
  %shr.i84.i159 = lshr i32 %151, 8, !dbg !10295
  %and1.i85.i160 = and i32 %shr.i84.i159, 255, !dbg !10296
  %or.i86.i161 = or i32 %and.i83.i158, %and1.i85.i160, !dbg !10297
  %shl2.i87.i162 = shl i32 %or.i86.i161, 16, !dbg !10298
  %152 = load i32, i32* %x.addr.i81.i96, align 4, !dbg !10299
  %shr3.i88.i163 = lshr i32 %152, 16, !dbg !10300
  %shl4.i89.i164 = shl i32 %shr3.i88.i163, 8, !dbg !10301
  %and5.i90.i165 = and i32 %shl4.i89.i164, 65280, !dbg !10302
  %153 = load i32, i32* %x.addr.i81.i96, align 4, !dbg !10303
  %shr6.i91.i166 = lshr i32 %153, 16, !dbg !10304
  %shr7.i92.i167 = lshr i32 %shr6.i91.i166, 8, !dbg !10305
  %and8.i93.i168 = and i32 %shr7.i92.i167, 255, !dbg !10306
  %or9.i94.i169 = or i32 %and5.i90.i165, %and8.i93.i168, !dbg !10307
  %or10.i95.i170 = or i32 %shl2.i87.i162, %or9.i94.i169, !dbg !10308
  %154 = load i32, i32* %re_index.i103, align 4, !dbg !10309
  %and21.i171 = and i32 %154, 7, !dbg !10310
  %shl22.i172 = shl i32 %or10.i95.i170, %and21.i171, !dbg !10311
  store i32 %shl22.i172, i32* %re_cache.i104, align 4, !dbg !10312
  %155 = load i32, i32* %n.i106, align 4, !dbg !10313
  %sub.i173 = sub nsw i32 0, %155, !dbg !10314
  store i32 %sub.i173, i32* %nb_bits.i107, align 4, !dbg !10315
  %156 = load i32, i32* %re_cache.i104, align 4, !dbg !10316
  %157 = load i32, i32* %nb_bits.i107, align 4, !dbg !10317
  %conv23.i174 = trunc i32 %157 to i8, !dbg !10317
  %call24.i175 = call i32 @NEG_USR32(i32 %156, i8 signext %conv23.i174) #9, !dbg !10318
  %158 = load i32, i32* %code.i102, align 4, !dbg !10319
  %add25.i176 = add i32 %call24.i175, %158, !dbg !10320
  store i32 %add25.i176, i32* %index1.i108, align 4, !dbg !10321
  %159 = load i32, i32* %index1.i108, align 4, !dbg !10322
  %idxprom26.i177 = zext i32 %159 to i64, !dbg !10323
  %160 = load [2 x i16]*, [2 x i16]** %table.addr.i99, align 8, !dbg !10323
  %arrayidx27.i178 = getelementptr inbounds [2 x i16], [2 x i16]* %160, i64 %idxprom26.i177, !dbg !10323
  %arrayidx28.i179 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i178, i64 0, i64 0, !dbg !10323
  %161 = load i16, i16* %arrayidx28.i179, align 2, !dbg !10323
  %conv29.i180 = sext i16 %161 to i32, !dbg !10323
  store i32 %conv29.i180, i32* %code.i102, align 4, !dbg !10324
  %162 = load i32, i32* %index1.i108, align 4, !dbg !10325
  %idxprom30.i181 = zext i32 %162 to i64, !dbg !10326
  %163 = load [2 x i16]*, [2 x i16]** %table.addr.i99, align 8, !dbg !10326
  %arrayidx31.i182 = getelementptr inbounds [2 x i16], [2 x i16]* %163, i64 %idxprom30.i181, !dbg !10326
  %arrayidx32.i183 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i182, i64 0, i64 1, !dbg !10326
  %164 = load i16, i16* %arrayidx32.i183, align 2, !dbg !10326
  %conv33.i184 = sext i16 %164 to i32, !dbg !10326
  store i32 %conv33.i184, i32* %n.i106, align 4, !dbg !10327
  %165 = load i32, i32* %max_depth.addr.i101, align 4, !dbg !10328
  %cmp34.i185 = icmp sgt i32 %165, 2, !dbg !10329
  br i1 %cmp34.i185, label %land.lhs.true36.i188, label %if.end.i230, !dbg !10330

land.lhs.true36.i188:                             ; preds = %cond.end.i186
  %166 = load i32, i32* %n.i106, align 4, !dbg !10331
  %cmp37.i187 = icmp slt i32 %166, 0, !dbg !10332
  br i1 %cmp37.i187, label %if.then39.i191, label %if.end.i230, !dbg !10333

if.then39.i191:                                   ; preds = %land.lhs.true36.i188
  %167 = load i32, i32* %re_size_plus8.i105, align 4, !dbg !10334
  %168 = load i32, i32* %re_index.i103, align 4, !dbg !10335
  %169 = load i32, i32* %nb_bits.i107, align 4, !dbg !10336
  %add40.i189 = add i32 %168, %169, !dbg !10337
  %cmp41.i190 = icmp ugt i32 %167, %add40.i189, !dbg !10338
  br i1 %cmp41.i190, label %cond.true43.i193, label %cond.false45.i194, !dbg !10339

cond.true43.i193:                                 ; preds = %if.then39.i191
  %170 = load i32, i32* %re_index.i103, align 4, !dbg !10340
  %171 = load i32, i32* %nb_bits.i107, align 4, !dbg !10341
  %add44.i192 = add i32 %170, %171, !dbg !10342
  br label %cond.end46.i229, !dbg !10343

cond.false45.i194:                                ; preds = %if.then39.i191
  %172 = load i32, i32* %re_size_plus8.i105, align 4, !dbg !10344
  br label %cond.end46.i229, !dbg !10345

cond.end46.i229:                                  ; preds = %cond.false45.i194, %cond.true43.i193
  %cond47.i195 = phi i32 [ %add44.i192, %cond.true43.i193 ], [ %172, %cond.false45.i194 ], !dbg !10346
  store i32 %cond47.i195, i32* %re_index.i103, align 4, !dbg !10347
  %173 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i98, align 8, !dbg !10348
  %buffer48.i196 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %173, i32 0, i32 0, !dbg !10349
  %174 = load i8*, i8** %buffer48.i196, align 8, !dbg !10349
  %175 = load i32, i32* %re_index.i103, align 4, !dbg !10350
  %shr49.i197 = lshr i32 %175, 3, !dbg !10351
  %idx.ext50.i198 = zext i32 %shr49.i197 to i64, !dbg !10352
  %add.ptr51.i199 = getelementptr inbounds i8, i8* %174, i64 %idx.ext50.i198, !dbg !10352
  %176 = bitcast i8* %add.ptr51.i199 to %union.unaligned_32*, !dbg !10353
  %l52.i200 = bitcast %union.unaligned_32* %176 to i32*, !dbg !10353
  %177 = load i32, i32* %l52.i200, align 1, !dbg !10353
  store i32 %177, i32* %x.addr.i96.i95, align 4, !dbg !10354
  %178 = load i32, i32* %x.addr.i96.i95, align 4, !dbg !10355
  %shl.i97.i201 = shl i32 %178, 8, !dbg !10356
  %and.i98.i202 = and i32 %shl.i97.i201, 65280, !dbg !10357
  %179 = load i32, i32* %x.addr.i96.i95, align 4, !dbg !10358
  %shr.i99.i203 = lshr i32 %179, 8, !dbg !10359
  %and1.i100.i204 = and i32 %shr.i99.i203, 255, !dbg !10360
  %or.i101.i205 = or i32 %and.i98.i202, %and1.i100.i204, !dbg !10361
  %shl2.i102.i206 = shl i32 %or.i101.i205, 16, !dbg !10362
  %180 = load i32, i32* %x.addr.i96.i95, align 4, !dbg !10363
  %shr3.i103.i207 = lshr i32 %180, 16, !dbg !10364
  %shl4.i104.i208 = shl i32 %shr3.i103.i207, 8, !dbg !10365
  %and5.i105.i209 = and i32 %shl4.i104.i208, 65280, !dbg !10366
  %181 = load i32, i32* %x.addr.i96.i95, align 4, !dbg !10367
  %shr6.i106.i210 = lshr i32 %181, 16, !dbg !10368
  %shr7.i107.i211 = lshr i32 %shr6.i106.i210, 8, !dbg !10369
  %and8.i108.i212 = and i32 %shr7.i107.i211, 255, !dbg !10370
  %or9.i109.i213 = or i32 %and5.i105.i209, %and8.i108.i212, !dbg !10371
  %or10.i110.i214 = or i32 %shl2.i102.i206, %or9.i109.i213, !dbg !10372
  %182 = load i32, i32* %re_index.i103, align 4, !dbg !10373
  %and54.i215 = and i32 %182, 7, !dbg !10374
  %shl55.i216 = shl i32 %or10.i110.i214, %and54.i215, !dbg !10375
  store i32 %shl55.i216, i32* %re_cache.i104, align 4, !dbg !10376
  %183 = load i32, i32* %n.i106, align 4, !dbg !10377
  %sub56.i217 = sub nsw i32 0, %183, !dbg !10378
  store i32 %sub56.i217, i32* %nb_bits.i107, align 4, !dbg !10379
  %184 = load i32, i32* %re_cache.i104, align 4, !dbg !10380
  %185 = load i32, i32* %nb_bits.i107, align 4, !dbg !10381
  %conv57.i218 = trunc i32 %185 to i8, !dbg !10381
  %call58.i219 = call i32 @NEG_USR32(i32 %184, i8 signext %conv57.i218) #9, !dbg !10382
  %186 = load i32, i32* %code.i102, align 4, !dbg !10383
  %add59.i220 = add i32 %call58.i219, %186, !dbg !10384
  store i32 %add59.i220, i32* %index1.i108, align 4, !dbg !10385
  %187 = load i32, i32* %index1.i108, align 4, !dbg !10386
  %idxprom60.i221 = zext i32 %187 to i64, !dbg !10387
  %188 = load [2 x i16]*, [2 x i16]** %table.addr.i99, align 8, !dbg !10387
  %arrayidx61.i222 = getelementptr inbounds [2 x i16], [2 x i16]* %188, i64 %idxprom60.i221, !dbg !10387
  %arrayidx62.i223 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i222, i64 0, i64 0, !dbg !10387
  %189 = load i16, i16* %arrayidx62.i223, align 2, !dbg !10387
  %conv63.i224 = sext i16 %189 to i32, !dbg !10387
  store i32 %conv63.i224, i32* %code.i102, align 4, !dbg !10388
  %190 = load i32, i32* %index1.i108, align 4, !dbg !10389
  %idxprom64.i225 = zext i32 %190 to i64, !dbg !10390
  %191 = load [2 x i16]*, [2 x i16]** %table.addr.i99, align 8, !dbg !10390
  %arrayidx65.i226 = getelementptr inbounds [2 x i16], [2 x i16]* %191, i64 %idxprom64.i225, !dbg !10390
  %arrayidx66.i227 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i226, i64 0, i64 1, !dbg !10390
  %192 = load i16, i16* %arrayidx66.i227, align 2, !dbg !10390
  %conv67.i228 = sext i16 %192 to i32, !dbg !10390
  store i32 %conv67.i228, i32* %n.i106, align 4, !dbg !10391
  br label %if.end.i230, !dbg !10392

if.end.i230:                                      ; preds = %cond.end46.i229, %land.lhs.true36.i188, %cond.end.i186
  br label %if.end68.i231, !dbg !10393

if.end68.i231:                                    ; preds = %if.end.i230, %land.lhs.true.i144, %for.body21
  %193 = load i32, i32* %n.i106, align 4, !dbg !10394
  %194 = load i32, i32* %re_cache.i104, align 4, !dbg !10395
  %shl70.i232 = shl i32 %194, %193, !dbg !10395
  store i32 %shl70.i232, i32* %re_cache.i104, align 4, !dbg !10395
  %195 = load i32, i32* %re_size_plus8.i105, align 4, !dbg !10396
  %196 = load i32, i32* %re_index.i103, align 4, !dbg !10397
  %197 = load i32, i32* %n.i106, align 4, !dbg !10398
  %add71.i233 = add i32 %196, %197, !dbg !10399
  %cmp72.i234 = icmp ugt i32 %195, %add71.i233, !dbg !10400
  br i1 %cmp72.i234, label %cond.true74.i236, label %cond.false76.i237, !dbg !10401

cond.true74.i236:                                 ; preds = %if.end68.i231
  %198 = load i32, i32* %re_index.i103, align 4, !dbg !10402
  %199 = load i32, i32* %n.i106, align 4, !dbg !10403
  %add75.i235 = add i32 %198, %199, !dbg !10404
  br label %get_vlc2.exit240, !dbg !10405

cond.false76.i237:                                ; preds = %if.end68.i231
  %200 = load i32, i32* %re_size_plus8.i105, align 4, !dbg !10406
  br label %get_vlc2.exit240, !dbg !10407

get_vlc2.exit240:                                 ; preds = %cond.true74.i236, %cond.false76.i237
  %cond78.i238 = phi i32 [ %add75.i235, %cond.true74.i236 ], [ %200, %cond.false76.i237 ], !dbg !10408
  store i32 %cond78.i238, i32* %re_index.i103, align 4, !dbg !10409
  %201 = load i32, i32* %re_index.i103, align 4, !dbg !10410
  %202 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i98, align 8, !dbg !10411
  %index80.i239 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %202, i32 0, i32 2, !dbg !10412
  store i32 %201, i32* %index80.i239, align 8, !dbg !10413
  %203 = load i32, i32* %code.i102, align 4, !dbg !10414
  store i32 %203, i32* %delta, align 4, !dbg !10415
  %204 = load i32, i32* %i, align 4, !dbg !10416
  %idxprom23 = sext i32 %204 to i64, !dbg !10417
  %205 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !10417
  %gain_data24 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %205, i32 0, i32 14, !dbg !10418
  %206 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data24, align 8, !dbg !10418
  %arrayidx25 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %206, i64 %idxprom23, !dbg !10417
  %num_points26 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx25, i32 0, i32 0, !dbg !10419
  %207 = load i32, i32* %num_points26, align 4, !dbg !10419
  %208 = load i32, i32* %delta, align 4, !dbg !10420
  %add = add nsw i32 %207, %208, !dbg !10421
  %and = and i32 %add, 7, !dbg !10422
  %209 = load i32, i32* %i, align 4, !dbg !10423
  %idxprom27 = sext i32 %209 to i64, !dbg !10424
  %210 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10424
  %gain_data28 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %210, i32 0, i32 14, !dbg !10425
  %211 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data28, align 8, !dbg !10425
  %arrayidx29 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %211, i64 %idxprom27, !dbg !10424
  %num_points30 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx29, i32 0, i32 0, !dbg !10426
  store i32 %and, i32* %num_points30, align 4, !dbg !10427
  br label %for.inc31, !dbg !10428

for.inc31:                                        ; preds = %get_vlc2.exit240
  %212 = load i32, i32* %i, align 4, !dbg !10429
  %inc32 = add nsw i32 %212, 1, !dbg !10429
  store i32 %inc32, i32* %i, align 4, !dbg !10429
  br label %for.cond19, !dbg !10431, !llvm.loop !10432

for.end33:                                        ; preds = %for.cond19
  br label %if.end, !dbg !10434

if.else:                                          ; preds = %sw.bb18
  %213 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10435
  %214 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 0, i32 1), align 8, !dbg !10436
  %215 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 0, i32 0), align 16, !dbg !10437
  store %struct.GetBitContext* %213, %struct.GetBitContext** %s.addr.i244, align 8, !dbg !10438
  store [2 x i16]* %214, [2 x i16]** %table.addr.i245, align 8, !dbg !10438
  store i32 %215, i32* %bits.addr.i246, align 4, !dbg !10438
  store i32 1, i32* %max_depth.addr.i247, align 4, !dbg !10438
  %216 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i244, align 8, !dbg !10439
  %index.i255 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %216, i32 0, i32 2, !dbg !10440
  %217 = load i32, i32* %index.i255, align 8, !dbg !10440
  store i32 %217, i32* %re_index.i249, align 4, !dbg !9894
  %218 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i244, align 8, !dbg !10441
  %size_in_bits_plus8.i256 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %218, i32 0, i32 4, !dbg !10442
  %219 = load i32, i32* %size_in_bits_plus8.i256, align 8, !dbg !10442
  store i32 %219, i32* %re_size_plus8.i251, align 4, !dbg !9896
  %220 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i244, align 8, !dbg !10443
  %buffer.i257 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %220, i32 0, i32 0, !dbg !10444
  %221 = load i8*, i8** %buffer.i257, align 8, !dbg !10444
  %222 = load i32, i32* %re_index.i249, align 4, !dbg !10445
  %shr.i258 = lshr i32 %222, 3, !dbg !10446
  %idx.ext.i259 = zext i32 %shr.i258 to i64, !dbg !10447
  %add.ptr.i260 = getelementptr inbounds i8, i8* %221, i64 %idx.ext.i259, !dbg !10447
  %223 = bitcast i8* %add.ptr.i260 to %union.unaligned_32*, !dbg !10448
  %l.i261 = bitcast %union.unaligned_32* %223 to i32*, !dbg !10448
  %224 = load i32, i32* %l.i261, align 1, !dbg !10448
  store i32 %224, i32* %x.addr.i.i243, align 4, !dbg !10449
  %225 = load i32, i32* %x.addr.i.i243, align 4, !dbg !10450
  %shl.i.i262 = shl i32 %225, 8, !dbg !10451
  %and.i.i263 = and i32 %shl.i.i262, 65280, !dbg !10452
  %226 = load i32, i32* %x.addr.i.i243, align 4, !dbg !10453
  %shr.i.i264 = lshr i32 %226, 8, !dbg !10454
  %and1.i.i265 = and i32 %shr.i.i264, 255, !dbg !10455
  %or.i.i266 = or i32 %and.i.i263, %and1.i.i265, !dbg !10456
  %shl2.i.i267 = shl i32 %or.i.i266, 16, !dbg !10457
  %227 = load i32, i32* %x.addr.i.i243, align 4, !dbg !10458
  %shr3.i.i268 = lshr i32 %227, 16, !dbg !10459
  %shl4.i.i269 = shl i32 %shr3.i.i268, 8, !dbg !10460
  %and5.i.i270 = and i32 %shl4.i.i269, 65280, !dbg !10461
  %228 = load i32, i32* %x.addr.i.i243, align 4, !dbg !10462
  %shr6.i.i271 = lshr i32 %228, 16, !dbg !10463
  %shr7.i.i272 = lshr i32 %shr6.i.i271, 8, !dbg !10464
  %and8.i.i273 = and i32 %shr7.i.i272, 255, !dbg !10465
  %or9.i.i274 = or i32 %and5.i.i270, %and8.i.i273, !dbg !10466
  %or10.i.i275 = or i32 %shl2.i.i267, %or9.i.i274, !dbg !10467
  %229 = load i32, i32* %re_index.i249, align 4, !dbg !10468
  %and.i276 = and i32 %229, 7, !dbg !10469
  %shl.i277 = shl i32 %or10.i.i275, %and.i276, !dbg !10470
  store i32 %shl.i277, i32* %re_cache.i250, align 4, !dbg !10471
  %230 = load i32, i32* %re_cache.i250, align 4, !dbg !10472
  %231 = load i32, i32* %bits.addr.i246, align 4, !dbg !10473
  %conv.i278 = trunc i32 %231 to i8, !dbg !10473
  %call2.i279 = call i32 @NEG_USR32(i32 %230, i8 signext %conv.i278) #9, !dbg !10474
  store i32 %call2.i279, i32* %index1.i254, align 4, !dbg !10475
  %232 = load i32, i32* %index1.i254, align 4, !dbg !10476
  %idxprom.i280 = zext i32 %232 to i64, !dbg !10477
  %233 = load [2 x i16]*, [2 x i16]** %table.addr.i245, align 8, !dbg !10477
  %arrayidx.i281 = getelementptr inbounds [2 x i16], [2 x i16]* %233, i64 %idxprom.i280, !dbg !10477
  %arrayidx3.i282 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i281, i64 0, i64 0, !dbg !10477
  %234 = load i16, i16* %arrayidx3.i282, align 2, !dbg !10477
  %conv4.i283 = sext i16 %234 to i32, !dbg !10477
  store i32 %conv4.i283, i32* %code.i248, align 4, !dbg !10478
  %235 = load i32, i32* %index1.i254, align 4, !dbg !10479
  %idxprom5.i284 = zext i32 %235 to i64, !dbg !10480
  %236 = load [2 x i16]*, [2 x i16]** %table.addr.i245, align 8, !dbg !10480
  %arrayidx6.i285 = getelementptr inbounds [2 x i16], [2 x i16]* %236, i64 %idxprom5.i284, !dbg !10480
  %arrayidx7.i286 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i285, i64 0, i64 1, !dbg !10480
  %237 = load i16, i16* %arrayidx7.i286, align 2, !dbg !10480
  %conv8.i287 = sext i16 %237 to i32, !dbg !10480
  store i32 %conv8.i287, i32* %n.i252, align 4, !dbg !10481
  %238 = load i32, i32* %max_depth.addr.i247, align 4, !dbg !10482
  %cmp.i288 = icmp sgt i32 %238, 1, !dbg !10483
  br i1 %cmp.i288, label %land.lhs.true.i290, label %if.end68.i377, !dbg !10484

land.lhs.true.i290:                               ; preds = %if.else
  %239 = load i32, i32* %n.i252, align 4, !dbg !10485
  %cmp10.i289 = icmp slt i32 %239, 0, !dbg !10486
  br i1 %cmp10.i289, label %if.then.i293, label %if.end68.i377, !dbg !10487

if.then.i293:                                     ; preds = %land.lhs.true.i290
  %240 = load i32, i32* %re_size_plus8.i251, align 4, !dbg !10488
  %241 = load i32, i32* %re_index.i249, align 4, !dbg !10489
  %242 = load i32, i32* %bits.addr.i246, align 4, !dbg !10490
  %add.i291 = add i32 %241, %242, !dbg !10491
  %cmp12.i292 = icmp ugt i32 %240, %add.i291, !dbg !10492
  br i1 %cmp12.i292, label %cond.true.i295, label %cond.false.i296, !dbg !10493

cond.true.i295:                                   ; preds = %if.then.i293
  %243 = load i32, i32* %re_index.i249, align 4, !dbg !10494
  %244 = load i32, i32* %bits.addr.i246, align 4, !dbg !10495
  %add14.i294 = add i32 %243, %244, !dbg !10496
  br label %cond.end.i332, !dbg !10497

cond.false.i296:                                  ; preds = %if.then.i293
  %245 = load i32, i32* %re_size_plus8.i251, align 4, !dbg !10498
  br label %cond.end.i332, !dbg !10499

cond.end.i332:                                    ; preds = %cond.false.i296, %cond.true.i295
  %cond.i297 = phi i32 [ %add14.i294, %cond.true.i295 ], [ %245, %cond.false.i296 ], !dbg !10500
  store i32 %cond.i297, i32* %re_index.i249, align 4, !dbg !10501
  %246 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i244, align 8, !dbg !10502
  %buffer15.i298 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %246, i32 0, i32 0, !dbg !10503
  %247 = load i8*, i8** %buffer15.i298, align 8, !dbg !10503
  %248 = load i32, i32* %re_index.i249, align 4, !dbg !10504
  %shr16.i299 = lshr i32 %248, 3, !dbg !10505
  %idx.ext17.i300 = zext i32 %shr16.i299 to i64, !dbg !10506
  %add.ptr18.i301 = getelementptr inbounds i8, i8* %247, i64 %idx.ext17.i300, !dbg !10506
  %249 = bitcast i8* %add.ptr18.i301 to %union.unaligned_32*, !dbg !10507
  %l19.i302 = bitcast %union.unaligned_32* %249 to i32*, !dbg !10507
  %250 = load i32, i32* %l19.i302, align 1, !dbg !10507
  store i32 %250, i32* %x.addr.i81.i242, align 4, !dbg !10508
  %251 = load i32, i32* %x.addr.i81.i242, align 4, !dbg !10509
  %shl.i82.i303 = shl i32 %251, 8, !dbg !10510
  %and.i83.i304 = and i32 %shl.i82.i303, 65280, !dbg !10511
  %252 = load i32, i32* %x.addr.i81.i242, align 4, !dbg !10512
  %shr.i84.i305 = lshr i32 %252, 8, !dbg !10513
  %and1.i85.i306 = and i32 %shr.i84.i305, 255, !dbg !10514
  %or.i86.i307 = or i32 %and.i83.i304, %and1.i85.i306, !dbg !10515
  %shl2.i87.i308 = shl i32 %or.i86.i307, 16, !dbg !10516
  %253 = load i32, i32* %x.addr.i81.i242, align 4, !dbg !10517
  %shr3.i88.i309 = lshr i32 %253, 16, !dbg !10518
  %shl4.i89.i310 = shl i32 %shr3.i88.i309, 8, !dbg !10519
  %and5.i90.i311 = and i32 %shl4.i89.i310, 65280, !dbg !10520
  %254 = load i32, i32* %x.addr.i81.i242, align 4, !dbg !10521
  %shr6.i91.i312 = lshr i32 %254, 16, !dbg !10522
  %shr7.i92.i313 = lshr i32 %shr6.i91.i312, 8, !dbg !10523
  %and8.i93.i314 = and i32 %shr7.i92.i313, 255, !dbg !10524
  %or9.i94.i315 = or i32 %and5.i90.i311, %and8.i93.i314, !dbg !10525
  %or10.i95.i316 = or i32 %shl2.i87.i308, %or9.i94.i315, !dbg !10526
  %255 = load i32, i32* %re_index.i249, align 4, !dbg !10527
  %and21.i317 = and i32 %255, 7, !dbg !10528
  %shl22.i318 = shl i32 %or10.i95.i316, %and21.i317, !dbg !10529
  store i32 %shl22.i318, i32* %re_cache.i250, align 4, !dbg !10530
  %256 = load i32, i32* %n.i252, align 4, !dbg !10531
  %sub.i319 = sub nsw i32 0, %256, !dbg !10532
  store i32 %sub.i319, i32* %nb_bits.i253, align 4, !dbg !10533
  %257 = load i32, i32* %re_cache.i250, align 4, !dbg !10534
  %258 = load i32, i32* %nb_bits.i253, align 4, !dbg !10535
  %conv23.i320 = trunc i32 %258 to i8, !dbg !10535
  %call24.i321 = call i32 @NEG_USR32(i32 %257, i8 signext %conv23.i320) #9, !dbg !10536
  %259 = load i32, i32* %code.i248, align 4, !dbg !10537
  %add25.i322 = add i32 %call24.i321, %259, !dbg !10538
  store i32 %add25.i322, i32* %index1.i254, align 4, !dbg !10539
  %260 = load i32, i32* %index1.i254, align 4, !dbg !10540
  %idxprom26.i323 = zext i32 %260 to i64, !dbg !10541
  %261 = load [2 x i16]*, [2 x i16]** %table.addr.i245, align 8, !dbg !10541
  %arrayidx27.i324 = getelementptr inbounds [2 x i16], [2 x i16]* %261, i64 %idxprom26.i323, !dbg !10541
  %arrayidx28.i325 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i324, i64 0, i64 0, !dbg !10541
  %262 = load i16, i16* %arrayidx28.i325, align 2, !dbg !10541
  %conv29.i326 = sext i16 %262 to i32, !dbg !10541
  store i32 %conv29.i326, i32* %code.i248, align 4, !dbg !10542
  %263 = load i32, i32* %index1.i254, align 4, !dbg !10543
  %idxprom30.i327 = zext i32 %263 to i64, !dbg !10544
  %264 = load [2 x i16]*, [2 x i16]** %table.addr.i245, align 8, !dbg !10544
  %arrayidx31.i328 = getelementptr inbounds [2 x i16], [2 x i16]* %264, i64 %idxprom30.i327, !dbg !10544
  %arrayidx32.i329 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i328, i64 0, i64 1, !dbg !10544
  %265 = load i16, i16* %arrayidx32.i329, align 2, !dbg !10544
  %conv33.i330 = sext i16 %265 to i32, !dbg !10544
  store i32 %conv33.i330, i32* %n.i252, align 4, !dbg !10545
  %266 = load i32, i32* %max_depth.addr.i247, align 4, !dbg !10546
  %cmp34.i331 = icmp sgt i32 %266, 2, !dbg !10547
  br i1 %cmp34.i331, label %land.lhs.true36.i334, label %if.end.i376, !dbg !10548

land.lhs.true36.i334:                             ; preds = %cond.end.i332
  %267 = load i32, i32* %n.i252, align 4, !dbg !10549
  %cmp37.i333 = icmp slt i32 %267, 0, !dbg !10550
  br i1 %cmp37.i333, label %if.then39.i337, label %if.end.i376, !dbg !10551

if.then39.i337:                                   ; preds = %land.lhs.true36.i334
  %268 = load i32, i32* %re_size_plus8.i251, align 4, !dbg !10552
  %269 = load i32, i32* %re_index.i249, align 4, !dbg !10553
  %270 = load i32, i32* %nb_bits.i253, align 4, !dbg !10554
  %add40.i335 = add i32 %269, %270, !dbg !10555
  %cmp41.i336 = icmp ugt i32 %268, %add40.i335, !dbg !10556
  br i1 %cmp41.i336, label %cond.true43.i339, label %cond.false45.i340, !dbg !10557

cond.true43.i339:                                 ; preds = %if.then39.i337
  %271 = load i32, i32* %re_index.i249, align 4, !dbg !10558
  %272 = load i32, i32* %nb_bits.i253, align 4, !dbg !10559
  %add44.i338 = add i32 %271, %272, !dbg !10560
  br label %cond.end46.i375, !dbg !10561

cond.false45.i340:                                ; preds = %if.then39.i337
  %273 = load i32, i32* %re_size_plus8.i251, align 4, !dbg !10562
  br label %cond.end46.i375, !dbg !10563

cond.end46.i375:                                  ; preds = %cond.false45.i340, %cond.true43.i339
  %cond47.i341 = phi i32 [ %add44.i338, %cond.true43.i339 ], [ %273, %cond.false45.i340 ], !dbg !10564
  store i32 %cond47.i341, i32* %re_index.i249, align 4, !dbg !10565
  %274 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i244, align 8, !dbg !10566
  %buffer48.i342 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %274, i32 0, i32 0, !dbg !10567
  %275 = load i8*, i8** %buffer48.i342, align 8, !dbg !10567
  %276 = load i32, i32* %re_index.i249, align 4, !dbg !10568
  %shr49.i343 = lshr i32 %276, 3, !dbg !10569
  %idx.ext50.i344 = zext i32 %shr49.i343 to i64, !dbg !10570
  %add.ptr51.i345 = getelementptr inbounds i8, i8* %275, i64 %idx.ext50.i344, !dbg !10570
  %277 = bitcast i8* %add.ptr51.i345 to %union.unaligned_32*, !dbg !10571
  %l52.i346 = bitcast %union.unaligned_32* %277 to i32*, !dbg !10571
  %278 = load i32, i32* %l52.i346, align 1, !dbg !10571
  store i32 %278, i32* %x.addr.i96.i241, align 4, !dbg !10572
  %279 = load i32, i32* %x.addr.i96.i241, align 4, !dbg !10573
  %shl.i97.i347 = shl i32 %279, 8, !dbg !10574
  %and.i98.i348 = and i32 %shl.i97.i347, 65280, !dbg !10575
  %280 = load i32, i32* %x.addr.i96.i241, align 4, !dbg !10576
  %shr.i99.i349 = lshr i32 %280, 8, !dbg !10577
  %and1.i100.i350 = and i32 %shr.i99.i349, 255, !dbg !10578
  %or.i101.i351 = or i32 %and.i98.i348, %and1.i100.i350, !dbg !10579
  %shl2.i102.i352 = shl i32 %or.i101.i351, 16, !dbg !10580
  %281 = load i32, i32* %x.addr.i96.i241, align 4, !dbg !10581
  %shr3.i103.i353 = lshr i32 %281, 16, !dbg !10582
  %shl4.i104.i354 = shl i32 %shr3.i103.i353, 8, !dbg !10583
  %and5.i105.i355 = and i32 %shl4.i104.i354, 65280, !dbg !10584
  %282 = load i32, i32* %x.addr.i96.i241, align 4, !dbg !10585
  %shr6.i106.i356 = lshr i32 %282, 16, !dbg !10586
  %shr7.i107.i357 = lshr i32 %shr6.i106.i356, 8, !dbg !10587
  %and8.i108.i358 = and i32 %shr7.i107.i357, 255, !dbg !10588
  %or9.i109.i359 = or i32 %and5.i105.i355, %and8.i108.i358, !dbg !10589
  %or10.i110.i360 = or i32 %shl2.i102.i352, %or9.i109.i359, !dbg !10590
  %283 = load i32, i32* %re_index.i249, align 4, !dbg !10591
  %and54.i361 = and i32 %283, 7, !dbg !10592
  %shl55.i362 = shl i32 %or10.i110.i360, %and54.i361, !dbg !10593
  store i32 %shl55.i362, i32* %re_cache.i250, align 4, !dbg !10594
  %284 = load i32, i32* %n.i252, align 4, !dbg !10595
  %sub56.i363 = sub nsw i32 0, %284, !dbg !10596
  store i32 %sub56.i363, i32* %nb_bits.i253, align 4, !dbg !10597
  %285 = load i32, i32* %re_cache.i250, align 4, !dbg !10598
  %286 = load i32, i32* %nb_bits.i253, align 4, !dbg !10599
  %conv57.i364 = trunc i32 %286 to i8, !dbg !10599
  %call58.i365 = call i32 @NEG_USR32(i32 %285, i8 signext %conv57.i364) #9, !dbg !10600
  %287 = load i32, i32* %code.i248, align 4, !dbg !10601
  %add59.i366 = add i32 %call58.i365, %287, !dbg !10602
  store i32 %add59.i366, i32* %index1.i254, align 4, !dbg !10603
  %288 = load i32, i32* %index1.i254, align 4, !dbg !10604
  %idxprom60.i367 = zext i32 %288 to i64, !dbg !10605
  %289 = load [2 x i16]*, [2 x i16]** %table.addr.i245, align 8, !dbg !10605
  %arrayidx61.i368 = getelementptr inbounds [2 x i16], [2 x i16]* %289, i64 %idxprom60.i367, !dbg !10605
  %arrayidx62.i369 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i368, i64 0, i64 0, !dbg !10605
  %290 = load i16, i16* %arrayidx62.i369, align 2, !dbg !10605
  %conv63.i370 = sext i16 %290 to i32, !dbg !10605
  store i32 %conv63.i370, i32* %code.i248, align 4, !dbg !10606
  %291 = load i32, i32* %index1.i254, align 4, !dbg !10607
  %idxprom64.i371 = zext i32 %291 to i64, !dbg !10608
  %292 = load [2 x i16]*, [2 x i16]** %table.addr.i245, align 8, !dbg !10608
  %arrayidx65.i372 = getelementptr inbounds [2 x i16], [2 x i16]* %292, i64 %idxprom64.i371, !dbg !10608
  %arrayidx66.i373 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i372, i64 0, i64 1, !dbg !10608
  %293 = load i16, i16* %arrayidx66.i373, align 2, !dbg !10608
  %conv67.i374 = sext i16 %293 to i32, !dbg !10608
  store i32 %conv67.i374, i32* %n.i252, align 4, !dbg !10609
  br label %if.end.i376, !dbg !10610

if.end.i376:                                      ; preds = %cond.end46.i375, %land.lhs.true36.i334, %cond.end.i332
  br label %if.end68.i377, !dbg !10611

if.end68.i377:                                    ; preds = %if.end.i376, %land.lhs.true.i290, %if.else
  %294 = load i32, i32* %n.i252, align 4, !dbg !10612
  %295 = load i32, i32* %re_cache.i250, align 4, !dbg !10613
  %shl70.i378 = shl i32 %295, %294, !dbg !10613
  store i32 %shl70.i378, i32* %re_cache.i250, align 4, !dbg !10613
  %296 = load i32, i32* %re_size_plus8.i251, align 4, !dbg !10614
  %297 = load i32, i32* %re_index.i249, align 4, !dbg !10615
  %298 = load i32, i32* %n.i252, align 4, !dbg !10616
  %add71.i379 = add i32 %297, %298, !dbg !10617
  %cmp72.i380 = icmp ugt i32 %296, %add71.i379, !dbg !10618
  br i1 %cmp72.i380, label %cond.true74.i382, label %cond.false76.i383, !dbg !10619

cond.true74.i382:                                 ; preds = %if.end68.i377
  %299 = load i32, i32* %re_index.i249, align 4, !dbg !10620
  %300 = load i32, i32* %n.i252, align 4, !dbg !10621
  %add75.i381 = add i32 %299, %300, !dbg !10622
  br label %get_vlc2.exit386, !dbg !10623

cond.false76.i383:                                ; preds = %if.end68.i377
  %301 = load i32, i32* %re_size_plus8.i251, align 4, !dbg !10624
  br label %get_vlc2.exit386, !dbg !10625

get_vlc2.exit386:                                 ; preds = %cond.true74.i382, %cond.false76.i383
  %cond78.i384 = phi i32 [ %add75.i381, %cond.true74.i382 ], [ %301, %cond.false76.i383 ], !dbg !10626
  store i32 %cond78.i384, i32* %re_index.i249, align 4, !dbg !10627
  %302 = load i32, i32* %re_index.i249, align 4, !dbg !10628
  %303 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i244, align 8, !dbg !10629
  %index80.i385 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %303, i32 0, i32 2, !dbg !10630
  store i32 %302, i32* %index80.i385, align 8, !dbg !10631
  %304 = load i32, i32* %code.i248, align 4, !dbg !10632
  %305 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10633
  %gain_data35 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %305, i32 0, i32 14, !dbg !10634
  %306 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data35, align 8, !dbg !10634
  %arrayidx36 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %306, i64 0, !dbg !10633
  %num_points37 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx36, i32 0, i32 0, !dbg !10635
  store i32 %304, i32* %num_points37, align 4, !dbg !10636
  store i32 1, i32* %i, align 4, !dbg !10637
  br label %for.cond38, !dbg !10638

for.cond38:                                       ; preds = %for.inc52, %get_vlc2.exit386
  %307 = load i32, i32* %i, align 4, !dbg !10639
  %308 = load i32, i32* %coded_subbands.addr, align 4, !dbg !10641
  %cmp39 = icmp slt i32 %307, %308, !dbg !10642
  br i1 %cmp39, label %for.body40, label %for.end54, !dbg !10643

for.body40:                                       ; preds = %for.cond38
  %309 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10644
  %310 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 1, i32 1), align 8, !dbg !10645
  %311 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 1, i32 0), align 8, !dbg !10646
  store %struct.GetBitContext* %309, %struct.GetBitContext** %s.addr.i390, align 8, !dbg !10647
  store [2 x i16]* %310, [2 x i16]** %table.addr.i391, align 8, !dbg !10647
  store i32 %311, i32* %bits.addr.i392, align 4, !dbg !10647
  store i32 1, i32* %max_depth.addr.i393, align 4, !dbg !10647
  %312 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i390, align 8, !dbg !10648
  %index.i401 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %312, i32 0, i32 2, !dbg !10649
  %313 = load i32, i32* %index.i401, align 8, !dbg !10649
  store i32 %313, i32* %re_index.i395, align 4, !dbg !9876
  %314 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i390, align 8, !dbg !10650
  %size_in_bits_plus8.i402 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %314, i32 0, i32 4, !dbg !10651
  %315 = load i32, i32* %size_in_bits_plus8.i402, align 8, !dbg !10651
  store i32 %315, i32* %re_size_plus8.i397, align 4, !dbg !9878
  %316 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i390, align 8, !dbg !10652
  %buffer.i403 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %316, i32 0, i32 0, !dbg !10653
  %317 = load i8*, i8** %buffer.i403, align 8, !dbg !10653
  %318 = load i32, i32* %re_index.i395, align 4, !dbg !10654
  %shr.i404 = lshr i32 %318, 3, !dbg !10655
  %idx.ext.i405 = zext i32 %shr.i404 to i64, !dbg !10656
  %add.ptr.i406 = getelementptr inbounds i8, i8* %317, i64 %idx.ext.i405, !dbg !10656
  %319 = bitcast i8* %add.ptr.i406 to %union.unaligned_32*, !dbg !10657
  %l.i407 = bitcast %union.unaligned_32* %319 to i32*, !dbg !10657
  %320 = load i32, i32* %l.i407, align 1, !dbg !10657
  store i32 %320, i32* %x.addr.i.i389, align 4, !dbg !10658
  %321 = load i32, i32* %x.addr.i.i389, align 4, !dbg !10659
  %shl.i.i408 = shl i32 %321, 8, !dbg !10660
  %and.i.i409 = and i32 %shl.i.i408, 65280, !dbg !10661
  %322 = load i32, i32* %x.addr.i.i389, align 4, !dbg !10662
  %shr.i.i410 = lshr i32 %322, 8, !dbg !10663
  %and1.i.i411 = and i32 %shr.i.i410, 255, !dbg !10664
  %or.i.i412 = or i32 %and.i.i409, %and1.i.i411, !dbg !10665
  %shl2.i.i413 = shl i32 %or.i.i412, 16, !dbg !10666
  %323 = load i32, i32* %x.addr.i.i389, align 4, !dbg !10667
  %shr3.i.i414 = lshr i32 %323, 16, !dbg !10668
  %shl4.i.i415 = shl i32 %shr3.i.i414, 8, !dbg !10669
  %and5.i.i416 = and i32 %shl4.i.i415, 65280, !dbg !10670
  %324 = load i32, i32* %x.addr.i.i389, align 4, !dbg !10671
  %shr6.i.i417 = lshr i32 %324, 16, !dbg !10672
  %shr7.i.i418 = lshr i32 %shr6.i.i417, 8, !dbg !10673
  %and8.i.i419 = and i32 %shr7.i.i418, 255, !dbg !10674
  %or9.i.i420 = or i32 %and5.i.i416, %and8.i.i419, !dbg !10675
  %or10.i.i421 = or i32 %shl2.i.i413, %or9.i.i420, !dbg !10676
  %325 = load i32, i32* %re_index.i395, align 4, !dbg !10677
  %and.i422 = and i32 %325, 7, !dbg !10678
  %shl.i423 = shl i32 %or10.i.i421, %and.i422, !dbg !10679
  store i32 %shl.i423, i32* %re_cache.i396, align 4, !dbg !10680
  %326 = load i32, i32* %re_cache.i396, align 4, !dbg !10681
  %327 = load i32, i32* %bits.addr.i392, align 4, !dbg !10682
  %conv.i424 = trunc i32 %327 to i8, !dbg !10682
  %call2.i425 = call i32 @NEG_USR32(i32 %326, i8 signext %conv.i424) #9, !dbg !10683
  store i32 %call2.i425, i32* %index1.i400, align 4, !dbg !10684
  %328 = load i32, i32* %index1.i400, align 4, !dbg !10685
  %idxprom.i426 = zext i32 %328 to i64, !dbg !10686
  %329 = load [2 x i16]*, [2 x i16]** %table.addr.i391, align 8, !dbg !10686
  %arrayidx.i427 = getelementptr inbounds [2 x i16], [2 x i16]* %329, i64 %idxprom.i426, !dbg !10686
  %arrayidx3.i428 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i427, i64 0, i64 0, !dbg !10686
  %330 = load i16, i16* %arrayidx3.i428, align 2, !dbg !10686
  %conv4.i429 = sext i16 %330 to i32, !dbg !10686
  store i32 %conv4.i429, i32* %code.i394, align 4, !dbg !10687
  %331 = load i32, i32* %index1.i400, align 4, !dbg !10688
  %idxprom5.i430 = zext i32 %331 to i64, !dbg !10689
  %332 = load [2 x i16]*, [2 x i16]** %table.addr.i391, align 8, !dbg !10689
  %arrayidx6.i431 = getelementptr inbounds [2 x i16], [2 x i16]* %332, i64 %idxprom5.i430, !dbg !10689
  %arrayidx7.i432 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i431, i64 0, i64 1, !dbg !10689
  %333 = load i16, i16* %arrayidx7.i432, align 2, !dbg !10689
  %conv8.i433 = sext i16 %333 to i32, !dbg !10689
  store i32 %conv8.i433, i32* %n.i398, align 4, !dbg !10690
  %334 = load i32, i32* %max_depth.addr.i393, align 4, !dbg !10691
  %cmp.i434 = icmp sgt i32 %334, 1, !dbg !10692
  br i1 %cmp.i434, label %land.lhs.true.i436, label %if.end68.i523, !dbg !10693

land.lhs.true.i436:                               ; preds = %for.body40
  %335 = load i32, i32* %n.i398, align 4, !dbg !10694
  %cmp10.i435 = icmp slt i32 %335, 0, !dbg !10695
  br i1 %cmp10.i435, label %if.then.i439, label %if.end68.i523, !dbg !10696

if.then.i439:                                     ; preds = %land.lhs.true.i436
  %336 = load i32, i32* %re_size_plus8.i397, align 4, !dbg !10697
  %337 = load i32, i32* %re_index.i395, align 4, !dbg !10698
  %338 = load i32, i32* %bits.addr.i392, align 4, !dbg !10699
  %add.i437 = add i32 %337, %338, !dbg !10700
  %cmp12.i438 = icmp ugt i32 %336, %add.i437, !dbg !10701
  br i1 %cmp12.i438, label %cond.true.i441, label %cond.false.i442, !dbg !10702

cond.true.i441:                                   ; preds = %if.then.i439
  %339 = load i32, i32* %re_index.i395, align 4, !dbg !10703
  %340 = load i32, i32* %bits.addr.i392, align 4, !dbg !10704
  %add14.i440 = add i32 %339, %340, !dbg !10705
  br label %cond.end.i478, !dbg !10706

cond.false.i442:                                  ; preds = %if.then.i439
  %341 = load i32, i32* %re_size_plus8.i397, align 4, !dbg !10707
  br label %cond.end.i478, !dbg !10708

cond.end.i478:                                    ; preds = %cond.false.i442, %cond.true.i441
  %cond.i443 = phi i32 [ %add14.i440, %cond.true.i441 ], [ %341, %cond.false.i442 ], !dbg !10709
  store i32 %cond.i443, i32* %re_index.i395, align 4, !dbg !10710
  %342 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i390, align 8, !dbg !10711
  %buffer15.i444 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %342, i32 0, i32 0, !dbg !10712
  %343 = load i8*, i8** %buffer15.i444, align 8, !dbg !10712
  %344 = load i32, i32* %re_index.i395, align 4, !dbg !10713
  %shr16.i445 = lshr i32 %344, 3, !dbg !10714
  %idx.ext17.i446 = zext i32 %shr16.i445 to i64, !dbg !10715
  %add.ptr18.i447 = getelementptr inbounds i8, i8* %343, i64 %idx.ext17.i446, !dbg !10715
  %345 = bitcast i8* %add.ptr18.i447 to %union.unaligned_32*, !dbg !10716
  %l19.i448 = bitcast %union.unaligned_32* %345 to i32*, !dbg !10716
  %346 = load i32, i32* %l19.i448, align 1, !dbg !10716
  store i32 %346, i32* %x.addr.i81.i388, align 4, !dbg !10717
  %347 = load i32, i32* %x.addr.i81.i388, align 4, !dbg !10718
  %shl.i82.i449 = shl i32 %347, 8, !dbg !10719
  %and.i83.i450 = and i32 %shl.i82.i449, 65280, !dbg !10720
  %348 = load i32, i32* %x.addr.i81.i388, align 4, !dbg !10721
  %shr.i84.i451 = lshr i32 %348, 8, !dbg !10722
  %and1.i85.i452 = and i32 %shr.i84.i451, 255, !dbg !10723
  %or.i86.i453 = or i32 %and.i83.i450, %and1.i85.i452, !dbg !10724
  %shl2.i87.i454 = shl i32 %or.i86.i453, 16, !dbg !10725
  %349 = load i32, i32* %x.addr.i81.i388, align 4, !dbg !10726
  %shr3.i88.i455 = lshr i32 %349, 16, !dbg !10727
  %shl4.i89.i456 = shl i32 %shr3.i88.i455, 8, !dbg !10728
  %and5.i90.i457 = and i32 %shl4.i89.i456, 65280, !dbg !10729
  %350 = load i32, i32* %x.addr.i81.i388, align 4, !dbg !10730
  %shr6.i91.i458 = lshr i32 %350, 16, !dbg !10731
  %shr7.i92.i459 = lshr i32 %shr6.i91.i458, 8, !dbg !10732
  %and8.i93.i460 = and i32 %shr7.i92.i459, 255, !dbg !10733
  %or9.i94.i461 = or i32 %and5.i90.i457, %and8.i93.i460, !dbg !10734
  %or10.i95.i462 = or i32 %shl2.i87.i454, %or9.i94.i461, !dbg !10735
  %351 = load i32, i32* %re_index.i395, align 4, !dbg !10736
  %and21.i463 = and i32 %351, 7, !dbg !10737
  %shl22.i464 = shl i32 %or10.i95.i462, %and21.i463, !dbg !10738
  store i32 %shl22.i464, i32* %re_cache.i396, align 4, !dbg !10739
  %352 = load i32, i32* %n.i398, align 4, !dbg !10740
  %sub.i465 = sub nsw i32 0, %352, !dbg !10741
  store i32 %sub.i465, i32* %nb_bits.i399, align 4, !dbg !10742
  %353 = load i32, i32* %re_cache.i396, align 4, !dbg !10743
  %354 = load i32, i32* %nb_bits.i399, align 4, !dbg !10744
  %conv23.i466 = trunc i32 %354 to i8, !dbg !10744
  %call24.i467 = call i32 @NEG_USR32(i32 %353, i8 signext %conv23.i466) #9, !dbg !10745
  %355 = load i32, i32* %code.i394, align 4, !dbg !10746
  %add25.i468 = add i32 %call24.i467, %355, !dbg !10747
  store i32 %add25.i468, i32* %index1.i400, align 4, !dbg !10748
  %356 = load i32, i32* %index1.i400, align 4, !dbg !10749
  %idxprom26.i469 = zext i32 %356 to i64, !dbg !10750
  %357 = load [2 x i16]*, [2 x i16]** %table.addr.i391, align 8, !dbg !10750
  %arrayidx27.i470 = getelementptr inbounds [2 x i16], [2 x i16]* %357, i64 %idxprom26.i469, !dbg !10750
  %arrayidx28.i471 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i470, i64 0, i64 0, !dbg !10750
  %358 = load i16, i16* %arrayidx28.i471, align 2, !dbg !10750
  %conv29.i472 = sext i16 %358 to i32, !dbg !10750
  store i32 %conv29.i472, i32* %code.i394, align 4, !dbg !10751
  %359 = load i32, i32* %index1.i400, align 4, !dbg !10752
  %idxprom30.i473 = zext i32 %359 to i64, !dbg !10753
  %360 = load [2 x i16]*, [2 x i16]** %table.addr.i391, align 8, !dbg !10753
  %arrayidx31.i474 = getelementptr inbounds [2 x i16], [2 x i16]* %360, i64 %idxprom30.i473, !dbg !10753
  %arrayidx32.i475 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i474, i64 0, i64 1, !dbg !10753
  %361 = load i16, i16* %arrayidx32.i475, align 2, !dbg !10753
  %conv33.i476 = sext i16 %361 to i32, !dbg !10753
  store i32 %conv33.i476, i32* %n.i398, align 4, !dbg !10754
  %362 = load i32, i32* %max_depth.addr.i393, align 4, !dbg !10755
  %cmp34.i477 = icmp sgt i32 %362, 2, !dbg !10756
  br i1 %cmp34.i477, label %land.lhs.true36.i480, label %if.end.i522, !dbg !10757

land.lhs.true36.i480:                             ; preds = %cond.end.i478
  %363 = load i32, i32* %n.i398, align 4, !dbg !10758
  %cmp37.i479 = icmp slt i32 %363, 0, !dbg !10759
  br i1 %cmp37.i479, label %if.then39.i483, label %if.end.i522, !dbg !10760

if.then39.i483:                                   ; preds = %land.lhs.true36.i480
  %364 = load i32, i32* %re_size_plus8.i397, align 4, !dbg !10761
  %365 = load i32, i32* %re_index.i395, align 4, !dbg !10762
  %366 = load i32, i32* %nb_bits.i399, align 4, !dbg !10763
  %add40.i481 = add i32 %365, %366, !dbg !10764
  %cmp41.i482 = icmp ugt i32 %364, %add40.i481, !dbg !10765
  br i1 %cmp41.i482, label %cond.true43.i485, label %cond.false45.i486, !dbg !10766

cond.true43.i485:                                 ; preds = %if.then39.i483
  %367 = load i32, i32* %re_index.i395, align 4, !dbg !10767
  %368 = load i32, i32* %nb_bits.i399, align 4, !dbg !10768
  %add44.i484 = add i32 %367, %368, !dbg !10769
  br label %cond.end46.i521, !dbg !10770

cond.false45.i486:                                ; preds = %if.then39.i483
  %369 = load i32, i32* %re_size_plus8.i397, align 4, !dbg !10771
  br label %cond.end46.i521, !dbg !10772

cond.end46.i521:                                  ; preds = %cond.false45.i486, %cond.true43.i485
  %cond47.i487 = phi i32 [ %add44.i484, %cond.true43.i485 ], [ %369, %cond.false45.i486 ], !dbg !10773
  store i32 %cond47.i487, i32* %re_index.i395, align 4, !dbg !10774
  %370 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i390, align 8, !dbg !10775
  %buffer48.i488 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %370, i32 0, i32 0, !dbg !10776
  %371 = load i8*, i8** %buffer48.i488, align 8, !dbg !10776
  %372 = load i32, i32* %re_index.i395, align 4, !dbg !10777
  %shr49.i489 = lshr i32 %372, 3, !dbg !10778
  %idx.ext50.i490 = zext i32 %shr49.i489 to i64, !dbg !10779
  %add.ptr51.i491 = getelementptr inbounds i8, i8* %371, i64 %idx.ext50.i490, !dbg !10779
  %373 = bitcast i8* %add.ptr51.i491 to %union.unaligned_32*, !dbg !10780
  %l52.i492 = bitcast %union.unaligned_32* %373 to i32*, !dbg !10780
  %374 = load i32, i32* %l52.i492, align 1, !dbg !10780
  store i32 %374, i32* %x.addr.i96.i387, align 4, !dbg !10781
  %375 = load i32, i32* %x.addr.i96.i387, align 4, !dbg !10782
  %shl.i97.i493 = shl i32 %375, 8, !dbg !10783
  %and.i98.i494 = and i32 %shl.i97.i493, 65280, !dbg !10784
  %376 = load i32, i32* %x.addr.i96.i387, align 4, !dbg !10785
  %shr.i99.i495 = lshr i32 %376, 8, !dbg !10786
  %and1.i100.i496 = and i32 %shr.i99.i495, 255, !dbg !10787
  %or.i101.i497 = or i32 %and.i98.i494, %and1.i100.i496, !dbg !10788
  %shl2.i102.i498 = shl i32 %or.i101.i497, 16, !dbg !10789
  %377 = load i32, i32* %x.addr.i96.i387, align 4, !dbg !10790
  %shr3.i103.i499 = lshr i32 %377, 16, !dbg !10791
  %shl4.i104.i500 = shl i32 %shr3.i103.i499, 8, !dbg !10792
  %and5.i105.i501 = and i32 %shl4.i104.i500, 65280, !dbg !10793
  %378 = load i32, i32* %x.addr.i96.i387, align 4, !dbg !10794
  %shr6.i106.i502 = lshr i32 %378, 16, !dbg !10795
  %shr7.i107.i503 = lshr i32 %shr6.i106.i502, 8, !dbg !10796
  %and8.i108.i504 = and i32 %shr7.i107.i503, 255, !dbg !10797
  %or9.i109.i505 = or i32 %and5.i105.i501, %and8.i108.i504, !dbg !10798
  %or10.i110.i506 = or i32 %shl2.i102.i498, %or9.i109.i505, !dbg !10799
  %379 = load i32, i32* %re_index.i395, align 4, !dbg !10800
  %and54.i507 = and i32 %379, 7, !dbg !10801
  %shl55.i508 = shl i32 %or10.i110.i506, %and54.i507, !dbg !10802
  store i32 %shl55.i508, i32* %re_cache.i396, align 4, !dbg !10803
  %380 = load i32, i32* %n.i398, align 4, !dbg !10804
  %sub56.i509 = sub nsw i32 0, %380, !dbg !10805
  store i32 %sub56.i509, i32* %nb_bits.i399, align 4, !dbg !10806
  %381 = load i32, i32* %re_cache.i396, align 4, !dbg !10807
  %382 = load i32, i32* %nb_bits.i399, align 4, !dbg !10808
  %conv57.i510 = trunc i32 %382 to i8, !dbg !10808
  %call58.i511 = call i32 @NEG_USR32(i32 %381, i8 signext %conv57.i510) #9, !dbg !10809
  %383 = load i32, i32* %code.i394, align 4, !dbg !10810
  %add59.i512 = add i32 %call58.i511, %383, !dbg !10811
  store i32 %add59.i512, i32* %index1.i400, align 4, !dbg !10812
  %384 = load i32, i32* %index1.i400, align 4, !dbg !10813
  %idxprom60.i513 = zext i32 %384 to i64, !dbg !10814
  %385 = load [2 x i16]*, [2 x i16]** %table.addr.i391, align 8, !dbg !10814
  %arrayidx61.i514 = getelementptr inbounds [2 x i16], [2 x i16]* %385, i64 %idxprom60.i513, !dbg !10814
  %arrayidx62.i515 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i514, i64 0, i64 0, !dbg !10814
  %386 = load i16, i16* %arrayidx62.i515, align 2, !dbg !10814
  %conv63.i516 = sext i16 %386 to i32, !dbg !10814
  store i32 %conv63.i516, i32* %code.i394, align 4, !dbg !10815
  %387 = load i32, i32* %index1.i400, align 4, !dbg !10816
  %idxprom64.i517 = zext i32 %387 to i64, !dbg !10817
  %388 = load [2 x i16]*, [2 x i16]** %table.addr.i391, align 8, !dbg !10817
  %arrayidx65.i518 = getelementptr inbounds [2 x i16], [2 x i16]* %388, i64 %idxprom64.i517, !dbg !10817
  %arrayidx66.i519 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i518, i64 0, i64 1, !dbg !10817
  %389 = load i16, i16* %arrayidx66.i519, align 2, !dbg !10817
  %conv67.i520 = sext i16 %389 to i32, !dbg !10817
  store i32 %conv67.i520, i32* %n.i398, align 4, !dbg !10818
  br label %if.end.i522, !dbg !10819

if.end.i522:                                      ; preds = %cond.end46.i521, %land.lhs.true36.i480, %cond.end.i478
  br label %if.end68.i523, !dbg !10820

if.end68.i523:                                    ; preds = %if.end.i522, %land.lhs.true.i436, %for.body40
  %390 = load i32, i32* %n.i398, align 4, !dbg !10821
  %391 = load i32, i32* %re_cache.i396, align 4, !dbg !10822
  %shl70.i524 = shl i32 %391, %390, !dbg !10822
  store i32 %shl70.i524, i32* %re_cache.i396, align 4, !dbg !10822
  %392 = load i32, i32* %re_size_plus8.i397, align 4, !dbg !10823
  %393 = load i32, i32* %re_index.i395, align 4, !dbg !10824
  %394 = load i32, i32* %n.i398, align 4, !dbg !10825
  %add71.i525 = add i32 %393, %394, !dbg !10826
  %cmp72.i526 = icmp ugt i32 %392, %add71.i525, !dbg !10827
  br i1 %cmp72.i526, label %cond.true74.i528, label %cond.false76.i529, !dbg !10828

cond.true74.i528:                                 ; preds = %if.end68.i523
  %395 = load i32, i32* %re_index.i395, align 4, !dbg !10829
  %396 = load i32, i32* %n.i398, align 4, !dbg !10830
  %add75.i527 = add i32 %395, %396, !dbg !10831
  br label %get_vlc2.exit532, !dbg !10832

cond.false76.i529:                                ; preds = %if.end68.i523
  %397 = load i32, i32* %re_size_plus8.i397, align 4, !dbg !10833
  br label %get_vlc2.exit532, !dbg !10834

get_vlc2.exit532:                                 ; preds = %cond.true74.i528, %cond.false76.i529
  %cond78.i530 = phi i32 [ %add75.i527, %cond.true74.i528 ], [ %397, %cond.false76.i529 ], !dbg !10835
  store i32 %cond78.i530, i32* %re_index.i395, align 4, !dbg !10836
  %398 = load i32, i32* %re_index.i395, align 4, !dbg !10837
  %399 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i390, align 8, !dbg !10838
  %index80.i531 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %399, i32 0, i32 2, !dbg !10839
  store i32 %398, i32* %index80.i531, align 8, !dbg !10840
  %400 = load i32, i32* %code.i394, align 4, !dbg !10841
  store i32 %400, i32* %delta, align 4, !dbg !10842
  %401 = load i32, i32* %i, align 4, !dbg !10843
  %sub = sub nsw i32 %401, 1, !dbg !10844
  %idxprom42 = sext i32 %sub to i64, !dbg !10845
  %402 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10845
  %gain_data43 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %402, i32 0, i32 14, !dbg !10846
  %403 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data43, align 8, !dbg !10846
  %arrayidx44 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %403, i64 %idxprom42, !dbg !10845
  %num_points45 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx44, i32 0, i32 0, !dbg !10847
  %404 = load i32, i32* %num_points45, align 4, !dbg !10847
  %405 = load i32, i32* %delta, align 4, !dbg !10848
  %add46 = add nsw i32 %404, %405, !dbg !10849
  %and47 = and i32 %add46, 7, !dbg !10850
  %406 = load i32, i32* %i, align 4, !dbg !10851
  %idxprom48 = sext i32 %406 to i64, !dbg !10852
  %407 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10852
  %gain_data49 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %407, i32 0, i32 14, !dbg !10853
  %408 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data49, align 8, !dbg !10853
  %arrayidx50 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %408, i64 %idxprom48, !dbg !10852
  %num_points51 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx50, i32 0, i32 0, !dbg !10854
  store i32 %and47, i32* %num_points51, align 4, !dbg !10855
  br label %for.inc52, !dbg !10856

for.inc52:                                        ; preds = %get_vlc2.exit532
  %409 = load i32, i32* %i, align 4, !dbg !10857
  %inc53 = add nsw i32 %409, 1, !dbg !10857
  store i32 %inc53, i32* %i, align 4, !dbg !10857
  br label %for.cond38, !dbg !10859, !llvm.loop !10860

for.end54:                                        ; preds = %for.cond38
  br label %if.end

if.end:                                           ; preds = %for.end54, %for.end33
  br label %sw.epilog, !dbg !10862

sw.bb55:                                          ; preds = %entry
  %410 = load i32, i32* %ch_num.addr, align 4, !dbg !10863
  %tobool56 = icmp ne i32 %410, 0, !dbg !10863
  br i1 %tobool56, label %if.then57, label %if.else72, !dbg !10864

if.then57:                                        ; preds = %sw.bb55
  store i32 0, i32* %i, align 4, !dbg !10865
  br label %for.cond58, !dbg !10868

for.cond58:                                       ; preds = %for.inc69, %if.then57
  %411 = load i32, i32* %i, align 4, !dbg !10869
  %412 = load i32, i32* %coded_subbands.addr, align 4, !dbg !10872
  %cmp59 = icmp slt i32 %411, %412, !dbg !10873
  br i1 %cmp59, label %for.body60, label %for.end71, !dbg !10874

for.body60:                                       ; preds = %for.cond58
  %413 = load i32, i32* %i, align 4, !dbg !10875
  %idxprom61 = sext i32 %413 to i64, !dbg !10876
  %414 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !10876
  %gain_data62 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %414, i32 0, i32 14, !dbg !10877
  %415 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data62, align 8, !dbg !10877
  %arrayidx63 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %415, i64 %idxprom61, !dbg !10876
  %num_points64 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx63, i32 0, i32 0, !dbg !10878
  %416 = load i32, i32* %num_points64, align 4, !dbg !10878
  %417 = load i32, i32* %i, align 4, !dbg !10879
  %idxprom65 = sext i32 %417 to i64, !dbg !10880
  %418 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10880
  %gain_data66 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %418, i32 0, i32 14, !dbg !10881
  %419 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data66, align 8, !dbg !10881
  %arrayidx67 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %419, i64 %idxprom65, !dbg !10880
  %num_points68 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx67, i32 0, i32 0, !dbg !10882
  store i32 %416, i32* %num_points68, align 4, !dbg !10883
  br label %for.inc69, !dbg !10880

for.inc69:                                        ; preds = %for.body60
  %420 = load i32, i32* %i, align 4, !dbg !10884
  %inc70 = add nsw i32 %420, 1, !dbg !10884
  store i32 %inc70, i32* %i, align 4, !dbg !10884
  br label %for.cond58, !dbg !10886, !llvm.loop !10887

for.end71:                                        ; preds = %for.cond58
  br label %if.end94, !dbg !10889

if.else72:                                        ; preds = %sw.bb55
  %421 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10890
  %call73 = call i32 @get_bits(%struct.GetBitContext* %421, i32 2), !dbg !10891
  store i32 %call73, i32* %delta_bits, align 4, !dbg !10892
  %422 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10893
  %call74 = call i32 @get_bits(%struct.GetBitContext* %422, i32 3), !dbg !10894
  store i32 %call74, i32* %min_val, align 4, !dbg !10895
  store i32 0, i32* %i, align 4, !dbg !10896
  br label %for.cond75, !dbg !10897

for.cond75:                                       ; preds = %for.inc91, %if.else72
  %423 = load i32, i32* %i, align 4, !dbg !10898
  %424 = load i32, i32* %coded_subbands.addr, align 4, !dbg !10900
  %cmp76 = icmp slt i32 %423, %424, !dbg !10901
  br i1 %cmp76, label %for.body77, label %for.end93, !dbg !10902

for.body77:                                       ; preds = %for.cond75
  %425 = load i32, i32* %min_val, align 4, !dbg !10903
  %426 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !10904
  %427 = load i32, i32* %delta_bits, align 4, !dbg !10905
  store %struct.GetBitContext* %426, %struct.GetBitContext** %s.addr.i533, align 8, !dbg !10906
  store i32 %427, i32* %n.addr.i, align 4, !dbg !10906
  %428 = load i32, i32* %n.addr.i, align 4, !dbg !10907
  %tobool.i = icmp ne i32 %428, 0, !dbg !10907
  br i1 %tobool.i, label %cond.true.i534, label %cond.false.i535, !dbg !10907

cond.true.i534:                                   ; preds = %for.body77
  %429 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i533, align 8, !dbg !10908
  %430 = load i32, i32* %n.addr.i, align 4, !dbg !10909
  %call.i = call i32 @get_bits(%struct.GetBitContext* %429, i32 %430) #9, !dbg !10910
  br label %get_bitsz.exit, !dbg !10911

cond.false.i535:                                  ; preds = %for.body77
  br label %get_bitsz.exit, !dbg !10912

get_bitsz.exit:                                   ; preds = %cond.true.i534, %cond.false.i535
  %cond.i536 = phi i32 [ %call.i, %cond.true.i534 ], [ 0, %cond.false.i535 ], !dbg !10913
  %add79 = add nsw i32 %425, %cond.i536, !dbg !10914
  %431 = load i32, i32* %i, align 4, !dbg !10915
  %idxprom80 = sext i32 %431 to i64, !dbg !10916
  %432 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10916
  %gain_data81 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %432, i32 0, i32 14, !dbg !10917
  %433 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data81, align 8, !dbg !10917
  %arrayidx82 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %433, i64 %idxprom80, !dbg !10916
  %num_points83 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx82, i32 0, i32 0, !dbg !10918
  store i32 %add79, i32* %num_points83, align 4, !dbg !10919
  %434 = load i32, i32* %i, align 4, !dbg !10920
  %idxprom84 = sext i32 %434 to i64, !dbg !10922
  %435 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !10922
  %gain_data85 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %435, i32 0, i32 14, !dbg !10923
  %436 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data85, align 8, !dbg !10923
  %arrayidx86 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %436, i64 %idxprom84, !dbg !10922
  %num_points87 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx86, i32 0, i32 0, !dbg !10924
  %437 = load i32, i32* %num_points87, align 4, !dbg !10924
  %cmp88 = icmp sgt i32 %437, 7, !dbg !10925
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !10926

if.then89:                                        ; preds = %get_bitsz.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !10927
  br label %return, !dbg !10927

if.end90:                                         ; preds = %get_bitsz.exit
  br label %for.inc91, !dbg !10928

for.inc91:                                        ; preds = %if.end90
  %438 = load i32, i32* %i, align 4, !dbg !10929
  %inc92 = add nsw i32 %438, 1, !dbg !10929
  store i32 %inc92, i32* %i, align 4, !dbg !10929
  br label %for.cond75, !dbg !10931, !llvm.loop !10932

for.end93:                                        ; preds = %for.cond75
  br label %if.end94

if.end94:                                         ; preds = %for.end93, %for.end71
  br label %sw.epilog, !dbg !10934

sw.epilog:                                        ; preds = %if.end94, %entry, %if.end, %for.end17, %for.end
  store i32 0, i32* %retval, align 4, !dbg !10935
  br label %return, !dbg !10935

return:                                           ; preds = %sw.epilog, %if.then89
  %439 = load i32, i32* %retval, align 4, !dbg !10936
  ret i32 %439, !dbg !10936
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_gainc_levels(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32 %coded_subbands) #3 !dbg !10937 {
entry:
  %s.addr.i340 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i340, metadata !3954, metadata !1324), !dbg !10938
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !3966, metadata !1324), !dbg !10948
  %x.addr.i96.i194 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i194, metadata !2531, metadata !1324), !dbg !10949
  %x.addr.i81.i195 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i195, metadata !2531, metadata !1324), !dbg !10959
  %x.addr.i.i196 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i196, metadata !2531, metadata !1324), !dbg !10961
  %s.addr.i197 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i197, metadata !3291, metadata !1324), !dbg !10963
  %table.addr.i198 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i198, metadata !3293, metadata !1324), !dbg !10964
  %bits.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i199, metadata !3295, metadata !1324), !dbg !10965
  %max_depth.addr.i200 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i200, metadata !3297, metadata !1324), !dbg !10966
  %code.i201 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i201, metadata !3299, metadata !1324), !dbg !10967
  %re_index.i202 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i202, metadata !3301, metadata !1324), !dbg !10968
  %re_cache.i203 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i203, metadata !3303, metadata !1324), !dbg !10969
  %re_size_plus8.i204 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i204, metadata !3305, metadata !1324), !dbg !10970
  %n.i205 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i205, metadata !3307, metadata !1324), !dbg !10971
  %nb_bits.i206 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i206, metadata !3309, metadata !1324), !dbg !10972
  %index1.i207 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i207, metadata !3311, metadata !1324), !dbg !10973
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !10974
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !10984
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !10986
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !10988
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !10989
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !10990
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !10991
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !10992
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !10993
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !10994
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !10995
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !10996
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !10997
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !10998
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %coded_subbands.addr = alloca i32, align 4
  %sb = alloca i32, align 4
  %i = alloca i32, align 4
  %delta = alloca i32, align 4
  %delta_bits = alloca i32, align 4
  %min_val = alloca i32, align 4
  %pred = alloca i32, align 4
  %chan = alloca %struct.Atrac3pChanParams*, align 8
  %ref_chan = alloca %struct.Atrac3pChanParams*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !10999, metadata !1324), !dbg !11000
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !11001, metadata !1324), !dbg !11002
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !11003, metadata !1324), !dbg !11004
  store i32 %coded_subbands, i32* %coded_subbands.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coded_subbands.addr, metadata !11005, metadata !1324), !dbg !11006
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !11007, metadata !1324), !dbg !11008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11009, metadata !1324), !dbg !11010
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !11011, metadata !1324), !dbg !11012
  call void @llvm.dbg.declare(metadata i32* %delta_bits, metadata !11013, metadata !1324), !dbg !11014
  call void @llvm.dbg.declare(metadata i32* %min_val, metadata !11015, metadata !1324), !dbg !11016
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !11017, metadata !1324), !dbg !11018
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan, metadata !11019, metadata !1324), !dbg !11020
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !11021
  %idxprom = sext i32 %0 to i64, !dbg !11022
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11022
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !11023
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !11022
  store %struct.Atrac3pChanParams* %arrayidx, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11020
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %ref_chan, metadata !11024, metadata !1324), !dbg !11025
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11026
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 12, !dbg !11027
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !11026
  store %struct.Atrac3pChanParams* %arrayidx2, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !11025
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11028
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 2), !dbg !11029
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 2, label %sw.bb61
    i32 3, label %sw.bb142
  ], !dbg !11030

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %sb, align 4, !dbg !11031
  br label %for.cond, !dbg !11033

for.cond:                                         ; preds = %for.inc14, %sw.bb
  %4 = load i32, i32* %sb, align 4, !dbg !11034
  %5 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11037
  %cmp = icmp slt i32 %4, %5, !dbg !11038
  br i1 %cmp, label %for.body, label %for.end16, !dbg !11039

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11040
  br label %for.cond3, !dbg !11042

for.cond3:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %i, align 4, !dbg !11043
  %7 = load i32, i32* %sb, align 4, !dbg !11046
  %idxprom4 = sext i32 %7 to i64, !dbg !11047
  %8 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11047
  %gain_data = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %8, i32 0, i32 14, !dbg !11048
  %9 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data, align 8, !dbg !11048
  %arrayidx5 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %9, i64 %idxprom4, !dbg !11047
  %num_points = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx5, i32 0, i32 0, !dbg !11049
  %10 = load i32, i32* %num_points, align 4, !dbg !11049
  %cmp6 = icmp slt i32 %6, %10, !dbg !11050
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !11051

for.body7:                                        ; preds = %for.cond3
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11052
  %call8 = call i32 @get_bits(%struct.GetBitContext* %11, i32 4), !dbg !11053
  %12 = load i32, i32* %i, align 4, !dbg !11054
  %idxprom9 = sext i32 %12 to i64, !dbg !11055
  %13 = load i32, i32* %sb, align 4, !dbg !11056
  %idxprom10 = sext i32 %13 to i64, !dbg !11055
  %14 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11055
  %gain_data11 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %14, i32 0, i32 14, !dbg !11057
  %15 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data11, align 8, !dbg !11057
  %arrayidx12 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %15, i64 %idxprom10, !dbg !11055
  %lev_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx12, i32 0, i32 1, !dbg !11058
  %arrayidx13 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code, i64 0, i64 %idxprom9, !dbg !11055
  store i32 %call8, i32* %arrayidx13, align 4, !dbg !11059
  br label %for.inc, !dbg !11055

for.inc:                                          ; preds = %for.body7
  %16 = load i32, i32* %i, align 4, !dbg !11060
  %inc = add nsw i32 %16, 1, !dbg !11060
  store i32 %inc, i32* %i, align 4, !dbg !11060
  br label %for.cond3, !dbg !11062, !llvm.loop !11063

for.end:                                          ; preds = %for.cond3
  br label %for.inc14, !dbg !11065

for.inc14:                                        ; preds = %for.end
  %17 = load i32, i32* %sb, align 4, !dbg !11067
  %inc15 = add nsw i32 %17, 1, !dbg !11067
  store i32 %inc15, i32* %sb, align 4, !dbg !11067
  br label %for.cond, !dbg !11069, !llvm.loop !11070

for.end16:                                        ; preds = %for.cond
  br label %sw.epilog, !dbg !11072

sw.bb17:                                          ; preds = %entry
  %18 = load i32, i32* %ch_num.addr, align 4, !dbg !11073
  %tobool = icmp ne i32 %18, 0, !dbg !11073
  br i1 %tobool, label %if.then, label %if.else, !dbg !11074

if.then:                                          ; preds = %sw.bb17
  store i32 0, i32* %sb, align 4, !dbg !11075
  br label %for.cond18, !dbg !11076

for.cond18:                                       ; preds = %for.inc49, %if.then
  %19 = load i32, i32* %sb, align 4, !dbg !11077
  %20 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11079
  %cmp19 = icmp slt i32 %19, %20, !dbg !11080
  br i1 %cmp19, label %for.body20, label %for.end51, !dbg !11081

for.body20:                                       ; preds = %for.cond18
  store i32 0, i32* %i, align 4, !dbg !11082
  br label %for.cond21, !dbg !11083

for.cond21:                                       ; preds = %for.inc46, %for.body20
  %21 = load i32, i32* %i, align 4, !dbg !11084
  %22 = load i32, i32* %sb, align 4, !dbg !11086
  %idxprom22 = sext i32 %22 to i64, !dbg !11087
  %23 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11087
  %gain_data23 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %23, i32 0, i32 14, !dbg !11088
  %24 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data23, align 8, !dbg !11088
  %arrayidx24 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %24, i64 %idxprom22, !dbg !11087
  %num_points25 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx24, i32 0, i32 0, !dbg !11089
  %25 = load i32, i32* %num_points25, align 4, !dbg !11089
  %cmp26 = icmp slt i32 %21, %25, !dbg !11090
  br i1 %cmp26, label %for.body27, label %for.end48, !dbg !11091

for.body27:                                       ; preds = %for.cond21
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11092
  %27 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 5, i32 1), align 8, !dbg !11093
  %28 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 5, i32 0), align 8, !dbg !11094
  store %struct.GetBitContext* %26, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11095
  store [2 x i16]* %27, [2 x i16]** %table.addr.i, align 8, !dbg !11095
  store i32 %28, i32* %bits.addr.i, align 4, !dbg !11095
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !11095
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11096
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %29, i32 0, i32 2, !dbg !11097
  %30 = load i32, i32* %index.i, align 8, !dbg !11097
  store i32 %30, i32* %re_index.i, align 4, !dbg !10993
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11098
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %31, i32 0, i32 4, !dbg !11099
  %32 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !11099
  store i32 %32, i32* %re_size_plus8.i, align 4, !dbg !10995
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11100
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %33, i32 0, i32 0, !dbg !11101
  %34 = load i8*, i8** %buffer.i, align 8, !dbg !11101
  %35 = load i32, i32* %re_index.i, align 4, !dbg !11102
  %shr.i = lshr i32 %35, 3, !dbg !11103
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !11104
  %add.ptr.i = getelementptr inbounds i8, i8* %34, i64 %idx.ext.i, !dbg !11104
  %36 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !11105
  %l.i = bitcast %union.unaligned_32* %36 to i32*, !dbg !11105
  %37 = load i32, i32* %l.i, align 1, !dbg !11105
  store i32 %37, i32* %x.addr.i.i, align 4, !dbg !11106
  %38 = load i32, i32* %x.addr.i.i, align 4, !dbg !11107
  %shl.i.i = shl i32 %38, 8, !dbg !11108
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !11109
  %39 = load i32, i32* %x.addr.i.i, align 4, !dbg !11110
  %shr.i.i = lshr i32 %39, 8, !dbg !11111
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !11112
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !11113
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !11114
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !11115
  %shr3.i.i = lshr i32 %40, 16, !dbg !11116
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !11117
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !11118
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !11119
  %shr6.i.i = lshr i32 %41, 16, !dbg !11120
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !11121
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !11122
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !11123
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !11124
  %42 = load i32, i32* %re_index.i, align 4, !dbg !11125
  %and.i = and i32 %42, 7, !dbg !11126
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !11127
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !11128
  %43 = load i32, i32* %re_cache.i, align 4, !dbg !11129
  %44 = load i32, i32* %bits.addr.i, align 4, !dbg !11130
  %conv.i = trunc i32 %44 to i8, !dbg !11130
  %call2.i = call i32 @NEG_USR32(i32 %43, i8 signext %conv.i) #9, !dbg !11131
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !11132
  %45 = load i32, i32* %index1.i, align 4, !dbg !11133
  %idxprom.i = zext i32 %45 to i64, !dbg !11134
  %46 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11134
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %46, i64 %idxprom.i, !dbg !11134
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !11134
  %47 = load i16, i16* %arrayidx3.i, align 2, !dbg !11134
  %conv4.i = sext i16 %47 to i32, !dbg !11134
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !11135
  %48 = load i32, i32* %index1.i, align 4, !dbg !11136
  %idxprom5.i = zext i32 %48 to i64, !dbg !11137
  %49 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11137
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %49, i64 %idxprom5.i, !dbg !11137
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !11137
  %50 = load i16, i16* %arrayidx7.i, align 2, !dbg !11137
  %conv8.i = sext i16 %50 to i32, !dbg !11137
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !11138
  %51 = load i32, i32* %max_depth.addr.i, align 4, !dbg !11139
  %cmp.i = icmp sgt i32 %51, 1, !dbg !11140
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !11141

land.lhs.true.i:                                  ; preds = %for.body27
  %52 = load i32, i32* %n.i, align 4, !dbg !11142
  %cmp10.i = icmp slt i32 %52, 0, !dbg !11143
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !11144

if.then.i:                                        ; preds = %land.lhs.true.i
  %53 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11145
  %54 = load i32, i32* %re_index.i, align 4, !dbg !11146
  %55 = load i32, i32* %bits.addr.i, align 4, !dbg !11147
  %add.i = add i32 %54, %55, !dbg !11148
  %cmp12.i = icmp ugt i32 %53, %add.i, !dbg !11149
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !11150

cond.true.i:                                      ; preds = %if.then.i
  %56 = load i32, i32* %re_index.i, align 4, !dbg !11151
  %57 = load i32, i32* %bits.addr.i, align 4, !dbg !11152
  %add14.i = add i32 %56, %57, !dbg !11153
  br label %cond.end.i, !dbg !11154

cond.false.i:                                     ; preds = %if.then.i
  %58 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11155
  br label %cond.end.i, !dbg !11156

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %58, %cond.false.i ], !dbg !11157
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !11158
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11159
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %59, i32 0, i32 0, !dbg !11160
  %60 = load i8*, i8** %buffer15.i, align 8, !dbg !11160
  %61 = load i32, i32* %re_index.i, align 4, !dbg !11161
  %shr16.i = lshr i32 %61, 3, !dbg !11162
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !11163
  %add.ptr18.i = getelementptr inbounds i8, i8* %60, i64 %idx.ext17.i, !dbg !11163
  %62 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !11164
  %l19.i = bitcast %union.unaligned_32* %62 to i32*, !dbg !11164
  %63 = load i32, i32* %l19.i, align 1, !dbg !11164
  store i32 %63, i32* %x.addr.i81.i, align 4, !dbg !11165
  %64 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11166
  %shl.i82.i = shl i32 %64, 8, !dbg !11167
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !11168
  %65 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11169
  %shr.i84.i = lshr i32 %65, 8, !dbg !11170
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !11171
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !11172
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !11173
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11174
  %shr3.i88.i = lshr i32 %66, 16, !dbg !11175
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !11176
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !11177
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !11178
  %shr6.i91.i = lshr i32 %67, 16, !dbg !11179
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !11180
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !11181
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !11182
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !11183
  %68 = load i32, i32* %re_index.i, align 4, !dbg !11184
  %and21.i = and i32 %68, 7, !dbg !11185
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !11186
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !11187
  %69 = load i32, i32* %n.i, align 4, !dbg !11188
  %sub.i = sub nsw i32 0, %69, !dbg !11189
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !11190
  %70 = load i32, i32* %re_cache.i, align 4, !dbg !11191
  %71 = load i32, i32* %nb_bits.i, align 4, !dbg !11192
  %conv23.i = trunc i32 %71 to i8, !dbg !11192
  %call24.i = call i32 @NEG_USR32(i32 %70, i8 signext %conv23.i) #9, !dbg !11193
  %72 = load i32, i32* %code.i, align 4, !dbg !11194
  %add25.i = add i32 %call24.i, %72, !dbg !11195
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !11196
  %73 = load i32, i32* %index1.i, align 4, !dbg !11197
  %idxprom26.i = zext i32 %73 to i64, !dbg !11198
  %74 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11198
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %74, i64 %idxprom26.i, !dbg !11198
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !11198
  %75 = load i16, i16* %arrayidx28.i, align 2, !dbg !11198
  %conv29.i = sext i16 %75 to i32, !dbg !11198
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !11199
  %76 = load i32, i32* %index1.i, align 4, !dbg !11200
  %idxprom30.i = zext i32 %76 to i64, !dbg !11201
  %77 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11201
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %77, i64 %idxprom30.i, !dbg !11201
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !11201
  %78 = load i16, i16* %arrayidx32.i, align 2, !dbg !11201
  %conv33.i = sext i16 %78 to i32, !dbg !11201
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !11202
  %79 = load i32, i32* %max_depth.addr.i, align 4, !dbg !11203
  %cmp34.i = icmp sgt i32 %79, 2, !dbg !11204
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !11205

land.lhs.true36.i:                                ; preds = %cond.end.i
  %80 = load i32, i32* %n.i, align 4, !dbg !11206
  %cmp37.i = icmp slt i32 %80, 0, !dbg !11207
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !11208

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %81 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11209
  %82 = load i32, i32* %re_index.i, align 4, !dbg !11210
  %83 = load i32, i32* %nb_bits.i, align 4, !dbg !11211
  %add40.i = add i32 %82, %83, !dbg !11212
  %cmp41.i = icmp ugt i32 %81, %add40.i, !dbg !11213
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !11214

cond.true43.i:                                    ; preds = %if.then39.i
  %84 = load i32, i32* %re_index.i, align 4, !dbg !11215
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !11216
  %add44.i = add i32 %84, %85, !dbg !11217
  br label %cond.end46.i, !dbg !11218

cond.false45.i:                                   ; preds = %if.then39.i
  %86 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11219
  br label %cond.end46.i, !dbg !11220

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %86, %cond.false45.i ], !dbg !11221
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !11222
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11223
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %87, i32 0, i32 0, !dbg !11224
  %88 = load i8*, i8** %buffer48.i, align 8, !dbg !11224
  %89 = load i32, i32* %re_index.i, align 4, !dbg !11225
  %shr49.i = lshr i32 %89, 3, !dbg !11226
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !11227
  %add.ptr51.i = getelementptr inbounds i8, i8* %88, i64 %idx.ext50.i, !dbg !11227
  %90 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !11228
  %l52.i = bitcast %union.unaligned_32* %90 to i32*, !dbg !11228
  %91 = load i32, i32* %l52.i, align 1, !dbg !11228
  store i32 %91, i32* %x.addr.i96.i, align 4, !dbg !11229
  %92 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11230
  %shl.i97.i = shl i32 %92, 8, !dbg !11231
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !11232
  %93 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11233
  %shr.i99.i = lshr i32 %93, 8, !dbg !11234
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !11235
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !11236
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !11237
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11238
  %shr3.i103.i = lshr i32 %94, 16, !dbg !11239
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !11240
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !11241
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !11242
  %shr6.i106.i = lshr i32 %95, 16, !dbg !11243
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !11244
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !11245
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !11246
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !11247
  %96 = load i32, i32* %re_index.i, align 4, !dbg !11248
  %and54.i = and i32 %96, 7, !dbg !11249
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !11250
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !11251
  %97 = load i32, i32* %n.i, align 4, !dbg !11252
  %sub56.i = sub nsw i32 0, %97, !dbg !11253
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !11254
  %98 = load i32, i32* %re_cache.i, align 4, !dbg !11255
  %99 = load i32, i32* %nb_bits.i, align 4, !dbg !11256
  %conv57.i = trunc i32 %99 to i8, !dbg !11256
  %call58.i = call i32 @NEG_USR32(i32 %98, i8 signext %conv57.i) #9, !dbg !11257
  %100 = load i32, i32* %code.i, align 4, !dbg !11258
  %add59.i = add i32 %call58.i, %100, !dbg !11259
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !11260
  %101 = load i32, i32* %index1.i, align 4, !dbg !11261
  %idxprom60.i = zext i32 %101 to i64, !dbg !11262
  %102 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11262
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %102, i64 %idxprom60.i, !dbg !11262
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !11262
  %103 = load i16, i16* %arrayidx62.i, align 2, !dbg !11262
  %conv63.i = sext i16 %103 to i32, !dbg !11262
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !11263
  %104 = load i32, i32* %index1.i, align 4, !dbg !11264
  %idxprom64.i = zext i32 %104 to i64, !dbg !11265
  %105 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !11265
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %105, i64 %idxprom64.i, !dbg !11265
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !11265
  %106 = load i16, i16* %arrayidx66.i, align 2, !dbg !11265
  %conv67.i = sext i16 %106 to i32, !dbg !11265
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !11266
  br label %if.end.i, !dbg !11267

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !11268

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body27
  %107 = load i32, i32* %n.i, align 4, !dbg !11269
  %108 = load i32, i32* %re_cache.i, align 4, !dbg !11270
  %shl70.i = shl i32 %108, %107, !dbg !11270
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !11270
  %109 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11271
  %110 = load i32, i32* %re_index.i, align 4, !dbg !11272
  %111 = load i32, i32* %n.i, align 4, !dbg !11273
  %add71.i = add i32 %110, %111, !dbg !11274
  %cmp72.i = icmp ugt i32 %109, %add71.i, !dbg !11275
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !11276

cond.true74.i:                                    ; preds = %if.end68.i
  %112 = load i32, i32* %re_index.i, align 4, !dbg !11277
  %113 = load i32, i32* %n.i, align 4, !dbg !11278
  %add75.i = add i32 %112, %113, !dbg !11279
  br label %get_vlc2.exit, !dbg !11280

cond.false76.i:                                   ; preds = %if.end68.i
  %114 = load i32, i32* %re_size_plus8.i, align 4, !dbg !11281
  br label %get_vlc2.exit, !dbg !11282

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %114, %cond.false76.i ], !dbg !11283
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !11284
  %115 = load i32, i32* %re_index.i, align 4, !dbg !11285
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11286
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %116, i32 0, i32 2, !dbg !11287
  store i32 %115, i32* %index80.i, align 8, !dbg !11288
  %117 = load i32, i32* %code.i, align 4, !dbg !11289
  store i32 %117, i32* %delta, align 4, !dbg !11290
  %118 = load i32, i32* %i, align 4, !dbg !11291
  %119 = load i32, i32* %sb, align 4, !dbg !11292
  %idxprom29 = sext i32 %119 to i64, !dbg !11293
  %120 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !11293
  %gain_data30 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %120, i32 0, i32 14, !dbg !11294
  %121 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data30, align 8, !dbg !11294
  %arrayidx31 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %121, i64 %idxprom29, !dbg !11293
  %num_points32 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx31, i32 0, i32 0, !dbg !11295
  %122 = load i32, i32* %num_points32, align 4, !dbg !11295
  %cmp33 = icmp sge i32 %118, %122, !dbg !11296
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !11297

cond.true:                                        ; preds = %get_vlc2.exit
  br label %cond.end, !dbg !11298

cond.false:                                       ; preds = %get_vlc2.exit
  %123 = load i32, i32* %i, align 4, !dbg !11300
  %idxprom34 = sext i32 %123 to i64, !dbg !11301
  %124 = load i32, i32* %sb, align 4, !dbg !11302
  %idxprom35 = sext i32 %124 to i64, !dbg !11301
  %125 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !11301
  %gain_data36 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %125, i32 0, i32 14, !dbg !11303
  %126 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data36, align 8, !dbg !11303
  %arrayidx37 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %126, i64 %idxprom35, !dbg !11301
  %lev_code38 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx37, i32 0, i32 1, !dbg !11304
  %arrayidx39 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code38, i64 0, i64 %idxprom34, !dbg !11301
  %127 = load i32, i32* %arrayidx39, align 4, !dbg !11301
  br label %cond.end, !dbg !11305

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 7, %cond.true ], [ %127, %cond.false ], !dbg !11307
  store i32 %cond, i32* %pred, align 4, !dbg !11309
  %128 = load i32, i32* %pred, align 4, !dbg !11310
  %129 = load i32, i32* %delta, align 4, !dbg !11311
  %add = add nsw i32 %128, %129, !dbg !11312
  %and = and i32 %add, 15, !dbg !11313
  %130 = load i32, i32* %i, align 4, !dbg !11314
  %idxprom40 = sext i32 %130 to i64, !dbg !11315
  %131 = load i32, i32* %sb, align 4, !dbg !11316
  %idxprom41 = sext i32 %131 to i64, !dbg !11315
  %132 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11315
  %gain_data42 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %132, i32 0, i32 14, !dbg !11317
  %133 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data42, align 8, !dbg !11317
  %arrayidx43 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %133, i64 %idxprom41, !dbg !11315
  %lev_code44 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx43, i32 0, i32 1, !dbg !11318
  %arrayidx45 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code44, i64 0, i64 %idxprom40, !dbg !11315
  store i32 %and, i32* %arrayidx45, align 4, !dbg !11319
  br label %for.inc46, !dbg !11320

for.inc46:                                        ; preds = %cond.end
  %134 = load i32, i32* %i, align 4, !dbg !11321
  %inc47 = add nsw i32 %134, 1, !dbg !11321
  store i32 %inc47, i32* %i, align 4, !dbg !11321
  br label %for.cond21, !dbg !11323, !llvm.loop !11324

for.end48:                                        ; preds = %for.cond21
  br label %for.inc49, !dbg !11326

for.inc49:                                        ; preds = %for.end48
  %135 = load i32, i32* %sb, align 4, !dbg !11328
  %inc50 = add nsw i32 %135, 1, !dbg !11328
  store i32 %inc50, i32* %sb, align 4, !dbg !11328
  br label %for.cond18, !dbg !11330, !llvm.loop !11331

for.end51:                                        ; preds = %for.cond18
  br label %if.end, !dbg !11333

if.else:                                          ; preds = %sw.bb17
  store i32 0, i32* %sb, align 4, !dbg !11334
  br label %for.cond52, !dbg !11337

for.cond52:                                       ; preds = %for.inc58, %if.else
  %136 = load i32, i32* %sb, align 4, !dbg !11338
  %137 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11341
  %cmp53 = icmp slt i32 %136, %137, !dbg !11342
  br i1 %cmp53, label %for.body54, label %for.end60, !dbg !11343

for.body54:                                       ; preds = %for.cond52
  %138 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11344
  %139 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11345
  %140 = load i32, i32* %sb, align 4, !dbg !11346
  %idxprom55 = sext i32 %140 to i64, !dbg !11347
  %141 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11347
  %gain_data56 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %141, i32 0, i32 14, !dbg !11348
  %142 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data56, align 8, !dbg !11348
  %arrayidx57 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %142, i64 %idxprom55, !dbg !11347
  call void @gainc_level_mode1m(%struct.GetBitContext* %138, %struct.Atrac3pChanUnitCtx* %139, %struct.AtracGainInfo* %arrayidx57), !dbg !11349
  br label %for.inc58, !dbg !11349

for.inc58:                                        ; preds = %for.body54
  %143 = load i32, i32* %sb, align 4, !dbg !11350
  %inc59 = add nsw i32 %143, 1, !dbg !11350
  store i32 %inc59, i32* %sb, align 4, !dbg !11350
  br label %for.cond52, !dbg !11352, !llvm.loop !11353

for.end60:                                        ; preds = %for.cond52
  br label %if.end

if.end:                                           ; preds = %for.end60, %for.end51
  br label %sw.epilog, !dbg !11355

sw.bb61:                                          ; preds = %entry
  %144 = load i32, i32* %ch_num.addr, align 4, !dbg !11356
  %tobool62 = icmp ne i32 %144, 0, !dbg !11356
  br i1 %tobool62, label %if.then63, label %if.else91, !dbg !11357

if.then63:                                        ; preds = %sw.bb61
  store i32 0, i32* %sb, align 4, !dbg !11358
  br label %for.cond64, !dbg !11361

for.cond64:                                       ; preds = %for.inc88, %if.then63
  %145 = load i32, i32* %sb, align 4, !dbg !11362
  %146 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11365
  %cmp65 = icmp slt i32 %145, %146, !dbg !11366
  br i1 %cmp65, label %for.body66, label %for.end90, !dbg !11367

for.body66:                                       ; preds = %for.cond64
  %147 = load i32, i32* %sb, align 4, !dbg !11368
  %idxprom67 = sext i32 %147 to i64, !dbg !11370
  %148 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11370
  %gain_data68 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %148, i32 0, i32 14, !dbg !11371
  %149 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data68, align 8, !dbg !11371
  %arrayidx69 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %149, i64 %idxprom67, !dbg !11370
  %num_points70 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx69, i32 0, i32 0, !dbg !11372
  %150 = load i32, i32* %num_points70, align 4, !dbg !11372
  %cmp71 = icmp sgt i32 %150, 0, !dbg !11373
  br i1 %cmp71, label %if.then72, label %if.end87, !dbg !11374

if.then72:                                        ; preds = %for.body66
  %151 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11375
  %call73 = call i32 @get_bits1(%struct.GetBitContext* %151), !dbg !11378
  %tobool74 = icmp ne i32 %call73, 0, !dbg !11378
  br i1 %tobool74, label %if.then75, label %if.else79, !dbg !11379

if.then75:                                        ; preds = %if.then72
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11380
  %153 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11381
  %154 = load i32, i32* %sb, align 4, !dbg !11382
  %idxprom76 = sext i32 %154 to i64, !dbg !11383
  %155 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11383
  %gain_data77 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %155, i32 0, i32 14, !dbg !11384
  %156 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data77, align 8, !dbg !11384
  %arrayidx78 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %156, i64 %idxprom76, !dbg !11383
  call void @gainc_level_mode1m(%struct.GetBitContext* %152, %struct.Atrac3pChanUnitCtx* %153, %struct.AtracGainInfo* %arrayidx78), !dbg !11385
  br label %if.end86, !dbg !11385

if.else79:                                        ; preds = %if.then72
  %157 = load i32, i32* %sb, align 4, !dbg !11386
  %idxprom80 = sext i32 %157 to i64, !dbg !11387
  %158 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11387
  %gain_data81 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %158, i32 0, i32 14, !dbg !11388
  %159 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data81, align 8, !dbg !11388
  %arrayidx82 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %159, i64 %idxprom80, !dbg !11387
  %160 = load i32, i32* %sb, align 4, !dbg !11389
  %idxprom83 = sext i32 %160 to i64, !dbg !11390
  %161 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !11390
  %gain_data84 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %161, i32 0, i32 14, !dbg !11391
  %162 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data84, align 8, !dbg !11391
  %arrayidx85 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %162, i64 %idxprom83, !dbg !11390
  call void @gainc_level_mode3s(%struct.AtracGainInfo* %arrayidx82, %struct.AtracGainInfo* %arrayidx85), !dbg !11392
  br label %if.end86

if.end86:                                         ; preds = %if.else79, %if.then75
  br label %if.end87, !dbg !11393

if.end87:                                         ; preds = %if.end86, %for.body66
  br label %for.inc88, !dbg !11394

for.inc88:                                        ; preds = %if.end87
  %163 = load i32, i32* %sb, align 4, !dbg !11396
  %inc89 = add nsw i32 %163, 1, !dbg !11396
  store i32 %inc89, i32* %sb, align 4, !dbg !11396
  br label %for.cond64, !dbg !11398, !llvm.loop !11399

for.end90:                                        ; preds = %for.cond64
  br label %if.end141, !dbg !11401

if.else91:                                        ; preds = %sw.bb61
  %164 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11402
  %gain_data92 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %164, i32 0, i32 14, !dbg !11404
  %165 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data92, align 8, !dbg !11404
  %arrayidx93 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %165, i64 0, !dbg !11402
  %num_points94 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx93, i32 0, i32 0, !dbg !11405
  %166 = load i32, i32* %num_points94, align 4, !dbg !11405
  %cmp95 = icmp sgt i32 %166, 0, !dbg !11406
  br i1 %cmp95, label %if.then96, label %if.end99, !dbg !11407

if.then96:                                        ; preds = %if.else91
  %167 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11408
  %168 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11409
  %169 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11410
  %gain_data97 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %169, i32 0, i32 14, !dbg !11411
  %170 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data97, align 8, !dbg !11411
  %arrayidx98 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %170, i64 0, !dbg !11410
  call void @gainc_level_mode1m(%struct.GetBitContext* %167, %struct.Atrac3pChanUnitCtx* %168, %struct.AtracGainInfo* %arrayidx98), !dbg !11412
  br label %if.end99, !dbg !11412

if.end99:                                         ; preds = %if.then96, %if.else91
  store i32 1, i32* %sb, align 4, !dbg !11413
  br label %for.cond100, !dbg !11414

for.cond100:                                      ; preds = %for.inc138, %if.end99
  %171 = load i32, i32* %sb, align 4, !dbg !11415
  %172 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11417
  %cmp101 = icmp slt i32 %171, %172, !dbg !11418
  br i1 %cmp101, label %for.body102, label %for.end140, !dbg !11419

for.body102:                                      ; preds = %for.cond100
  store i32 0, i32* %i, align 4, !dbg !11420
  br label %for.cond103, !dbg !11421

for.cond103:                                      ; preds = %for.inc135, %for.body102
  %173 = load i32, i32* %i, align 4, !dbg !11422
  %174 = load i32, i32* %sb, align 4, !dbg !11424
  %idxprom104 = sext i32 %174 to i64, !dbg !11425
  %175 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11425
  %gain_data105 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %175, i32 0, i32 14, !dbg !11426
  %176 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data105, align 8, !dbg !11426
  %arrayidx106 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %176, i64 %idxprom104, !dbg !11425
  %num_points107 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx106, i32 0, i32 0, !dbg !11427
  %177 = load i32, i32* %num_points107, align 4, !dbg !11427
  %cmp108 = icmp slt i32 %173, %177, !dbg !11428
  br i1 %cmp108, label %for.body109, label %for.end137, !dbg !11429

for.body109:                                      ; preds = %for.cond103
  %178 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11430
  %179 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 4, i32 1), align 8, !dbg !11431
  %180 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 4, i32 0), align 16, !dbg !11432
  store %struct.GetBitContext* %178, %struct.GetBitContext** %s.addr.i197, align 8, !dbg !11433
  store [2 x i16]* %179, [2 x i16]** %table.addr.i198, align 8, !dbg !11433
  store i32 %180, i32* %bits.addr.i199, align 4, !dbg !11433
  store i32 1, i32* %max_depth.addr.i200, align 4, !dbg !11433
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i197, align 8, !dbg !11434
  %index.i208 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %181, i32 0, i32 2, !dbg !11435
  %182 = load i32, i32* %index.i208, align 8, !dbg !11435
  store i32 %182, i32* %re_index.i202, align 4, !dbg !10968
  %183 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i197, align 8, !dbg !11436
  %size_in_bits_plus8.i209 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %183, i32 0, i32 4, !dbg !11437
  %184 = load i32, i32* %size_in_bits_plus8.i209, align 8, !dbg !11437
  store i32 %184, i32* %re_size_plus8.i204, align 4, !dbg !10970
  %185 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i197, align 8, !dbg !11438
  %buffer.i210 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %185, i32 0, i32 0, !dbg !11439
  %186 = load i8*, i8** %buffer.i210, align 8, !dbg !11439
  %187 = load i32, i32* %re_index.i202, align 4, !dbg !11440
  %shr.i211 = lshr i32 %187, 3, !dbg !11441
  %idx.ext.i212 = zext i32 %shr.i211 to i64, !dbg !11442
  %add.ptr.i213 = getelementptr inbounds i8, i8* %186, i64 %idx.ext.i212, !dbg !11442
  %188 = bitcast i8* %add.ptr.i213 to %union.unaligned_32*, !dbg !11443
  %l.i214 = bitcast %union.unaligned_32* %188 to i32*, !dbg !11443
  %189 = load i32, i32* %l.i214, align 1, !dbg !11443
  store i32 %189, i32* %x.addr.i.i196, align 4, !dbg !11444
  %190 = load i32, i32* %x.addr.i.i196, align 4, !dbg !11445
  %shl.i.i215 = shl i32 %190, 8, !dbg !11446
  %and.i.i216 = and i32 %shl.i.i215, 65280, !dbg !11447
  %191 = load i32, i32* %x.addr.i.i196, align 4, !dbg !11448
  %shr.i.i217 = lshr i32 %191, 8, !dbg !11449
  %and1.i.i218 = and i32 %shr.i.i217, 255, !dbg !11450
  %or.i.i219 = or i32 %and.i.i216, %and1.i.i218, !dbg !11451
  %shl2.i.i220 = shl i32 %or.i.i219, 16, !dbg !11452
  %192 = load i32, i32* %x.addr.i.i196, align 4, !dbg !11453
  %shr3.i.i221 = lshr i32 %192, 16, !dbg !11454
  %shl4.i.i222 = shl i32 %shr3.i.i221, 8, !dbg !11455
  %and5.i.i223 = and i32 %shl4.i.i222, 65280, !dbg !11456
  %193 = load i32, i32* %x.addr.i.i196, align 4, !dbg !11457
  %shr6.i.i224 = lshr i32 %193, 16, !dbg !11458
  %shr7.i.i225 = lshr i32 %shr6.i.i224, 8, !dbg !11459
  %and8.i.i226 = and i32 %shr7.i.i225, 255, !dbg !11460
  %or9.i.i227 = or i32 %and5.i.i223, %and8.i.i226, !dbg !11461
  %or10.i.i228 = or i32 %shl2.i.i220, %or9.i.i227, !dbg !11462
  %194 = load i32, i32* %re_index.i202, align 4, !dbg !11463
  %and.i229 = and i32 %194, 7, !dbg !11464
  %shl.i230 = shl i32 %or10.i.i228, %and.i229, !dbg !11465
  store i32 %shl.i230, i32* %re_cache.i203, align 4, !dbg !11466
  %195 = load i32, i32* %re_cache.i203, align 4, !dbg !11467
  %196 = load i32, i32* %bits.addr.i199, align 4, !dbg !11468
  %conv.i231 = trunc i32 %196 to i8, !dbg !11468
  %call2.i232 = call i32 @NEG_USR32(i32 %195, i8 signext %conv.i231) #9, !dbg !11469
  store i32 %call2.i232, i32* %index1.i207, align 4, !dbg !11470
  %197 = load i32, i32* %index1.i207, align 4, !dbg !11471
  %idxprom.i233 = zext i32 %197 to i64, !dbg !11472
  %198 = load [2 x i16]*, [2 x i16]** %table.addr.i198, align 8, !dbg !11472
  %arrayidx.i234 = getelementptr inbounds [2 x i16], [2 x i16]* %198, i64 %idxprom.i233, !dbg !11472
  %arrayidx3.i235 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i234, i64 0, i64 0, !dbg !11472
  %199 = load i16, i16* %arrayidx3.i235, align 2, !dbg !11472
  %conv4.i236 = sext i16 %199 to i32, !dbg !11472
  store i32 %conv4.i236, i32* %code.i201, align 4, !dbg !11473
  %200 = load i32, i32* %index1.i207, align 4, !dbg !11474
  %idxprom5.i237 = zext i32 %200 to i64, !dbg !11475
  %201 = load [2 x i16]*, [2 x i16]** %table.addr.i198, align 8, !dbg !11475
  %arrayidx6.i238 = getelementptr inbounds [2 x i16], [2 x i16]* %201, i64 %idxprom5.i237, !dbg !11475
  %arrayidx7.i239 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i238, i64 0, i64 1, !dbg !11475
  %202 = load i16, i16* %arrayidx7.i239, align 2, !dbg !11475
  %conv8.i240 = sext i16 %202 to i32, !dbg !11475
  store i32 %conv8.i240, i32* %n.i205, align 4, !dbg !11476
  %203 = load i32, i32* %max_depth.addr.i200, align 4, !dbg !11477
  %cmp.i241 = icmp sgt i32 %203, 1, !dbg !11478
  br i1 %cmp.i241, label %land.lhs.true.i243, label %if.end68.i330, !dbg !11479

land.lhs.true.i243:                               ; preds = %for.body109
  %204 = load i32, i32* %n.i205, align 4, !dbg !11480
  %cmp10.i242 = icmp slt i32 %204, 0, !dbg !11481
  br i1 %cmp10.i242, label %if.then.i246, label %if.end68.i330, !dbg !11482

if.then.i246:                                     ; preds = %land.lhs.true.i243
  %205 = load i32, i32* %re_size_plus8.i204, align 4, !dbg !11483
  %206 = load i32, i32* %re_index.i202, align 4, !dbg !11484
  %207 = load i32, i32* %bits.addr.i199, align 4, !dbg !11485
  %add.i244 = add i32 %206, %207, !dbg !11486
  %cmp12.i245 = icmp ugt i32 %205, %add.i244, !dbg !11487
  br i1 %cmp12.i245, label %cond.true.i248, label %cond.false.i249, !dbg !11488

cond.true.i248:                                   ; preds = %if.then.i246
  %208 = load i32, i32* %re_index.i202, align 4, !dbg !11489
  %209 = load i32, i32* %bits.addr.i199, align 4, !dbg !11490
  %add14.i247 = add i32 %208, %209, !dbg !11491
  br label %cond.end.i285, !dbg !11492

cond.false.i249:                                  ; preds = %if.then.i246
  %210 = load i32, i32* %re_size_plus8.i204, align 4, !dbg !11493
  br label %cond.end.i285, !dbg !11494

cond.end.i285:                                    ; preds = %cond.false.i249, %cond.true.i248
  %cond.i250 = phi i32 [ %add14.i247, %cond.true.i248 ], [ %210, %cond.false.i249 ], !dbg !11495
  store i32 %cond.i250, i32* %re_index.i202, align 4, !dbg !11496
  %211 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i197, align 8, !dbg !11497
  %buffer15.i251 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %211, i32 0, i32 0, !dbg !11498
  %212 = load i8*, i8** %buffer15.i251, align 8, !dbg !11498
  %213 = load i32, i32* %re_index.i202, align 4, !dbg !11499
  %shr16.i252 = lshr i32 %213, 3, !dbg !11500
  %idx.ext17.i253 = zext i32 %shr16.i252 to i64, !dbg !11501
  %add.ptr18.i254 = getelementptr inbounds i8, i8* %212, i64 %idx.ext17.i253, !dbg !11501
  %214 = bitcast i8* %add.ptr18.i254 to %union.unaligned_32*, !dbg !11502
  %l19.i255 = bitcast %union.unaligned_32* %214 to i32*, !dbg !11502
  %215 = load i32, i32* %l19.i255, align 1, !dbg !11502
  store i32 %215, i32* %x.addr.i81.i195, align 4, !dbg !11503
  %216 = load i32, i32* %x.addr.i81.i195, align 4, !dbg !11504
  %shl.i82.i256 = shl i32 %216, 8, !dbg !11505
  %and.i83.i257 = and i32 %shl.i82.i256, 65280, !dbg !11506
  %217 = load i32, i32* %x.addr.i81.i195, align 4, !dbg !11507
  %shr.i84.i258 = lshr i32 %217, 8, !dbg !11508
  %and1.i85.i259 = and i32 %shr.i84.i258, 255, !dbg !11509
  %or.i86.i260 = or i32 %and.i83.i257, %and1.i85.i259, !dbg !11510
  %shl2.i87.i261 = shl i32 %or.i86.i260, 16, !dbg !11511
  %218 = load i32, i32* %x.addr.i81.i195, align 4, !dbg !11512
  %shr3.i88.i262 = lshr i32 %218, 16, !dbg !11513
  %shl4.i89.i263 = shl i32 %shr3.i88.i262, 8, !dbg !11514
  %and5.i90.i264 = and i32 %shl4.i89.i263, 65280, !dbg !11515
  %219 = load i32, i32* %x.addr.i81.i195, align 4, !dbg !11516
  %shr6.i91.i265 = lshr i32 %219, 16, !dbg !11517
  %shr7.i92.i266 = lshr i32 %shr6.i91.i265, 8, !dbg !11518
  %and8.i93.i267 = and i32 %shr7.i92.i266, 255, !dbg !11519
  %or9.i94.i268 = or i32 %and5.i90.i264, %and8.i93.i267, !dbg !11520
  %or10.i95.i269 = or i32 %shl2.i87.i261, %or9.i94.i268, !dbg !11521
  %220 = load i32, i32* %re_index.i202, align 4, !dbg !11522
  %and21.i270 = and i32 %220, 7, !dbg !11523
  %shl22.i271 = shl i32 %or10.i95.i269, %and21.i270, !dbg !11524
  store i32 %shl22.i271, i32* %re_cache.i203, align 4, !dbg !11525
  %221 = load i32, i32* %n.i205, align 4, !dbg !11526
  %sub.i272 = sub nsw i32 0, %221, !dbg !11527
  store i32 %sub.i272, i32* %nb_bits.i206, align 4, !dbg !11528
  %222 = load i32, i32* %re_cache.i203, align 4, !dbg !11529
  %223 = load i32, i32* %nb_bits.i206, align 4, !dbg !11530
  %conv23.i273 = trunc i32 %223 to i8, !dbg !11530
  %call24.i274 = call i32 @NEG_USR32(i32 %222, i8 signext %conv23.i273) #9, !dbg !11531
  %224 = load i32, i32* %code.i201, align 4, !dbg !11532
  %add25.i275 = add i32 %call24.i274, %224, !dbg !11533
  store i32 %add25.i275, i32* %index1.i207, align 4, !dbg !11534
  %225 = load i32, i32* %index1.i207, align 4, !dbg !11535
  %idxprom26.i276 = zext i32 %225 to i64, !dbg !11536
  %226 = load [2 x i16]*, [2 x i16]** %table.addr.i198, align 8, !dbg !11536
  %arrayidx27.i277 = getelementptr inbounds [2 x i16], [2 x i16]* %226, i64 %idxprom26.i276, !dbg !11536
  %arrayidx28.i278 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i277, i64 0, i64 0, !dbg !11536
  %227 = load i16, i16* %arrayidx28.i278, align 2, !dbg !11536
  %conv29.i279 = sext i16 %227 to i32, !dbg !11536
  store i32 %conv29.i279, i32* %code.i201, align 4, !dbg !11537
  %228 = load i32, i32* %index1.i207, align 4, !dbg !11538
  %idxprom30.i280 = zext i32 %228 to i64, !dbg !11539
  %229 = load [2 x i16]*, [2 x i16]** %table.addr.i198, align 8, !dbg !11539
  %arrayidx31.i281 = getelementptr inbounds [2 x i16], [2 x i16]* %229, i64 %idxprom30.i280, !dbg !11539
  %arrayidx32.i282 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i281, i64 0, i64 1, !dbg !11539
  %230 = load i16, i16* %arrayidx32.i282, align 2, !dbg !11539
  %conv33.i283 = sext i16 %230 to i32, !dbg !11539
  store i32 %conv33.i283, i32* %n.i205, align 4, !dbg !11540
  %231 = load i32, i32* %max_depth.addr.i200, align 4, !dbg !11541
  %cmp34.i284 = icmp sgt i32 %231, 2, !dbg !11542
  br i1 %cmp34.i284, label %land.lhs.true36.i287, label %if.end.i329, !dbg !11543

land.lhs.true36.i287:                             ; preds = %cond.end.i285
  %232 = load i32, i32* %n.i205, align 4, !dbg !11544
  %cmp37.i286 = icmp slt i32 %232, 0, !dbg !11545
  br i1 %cmp37.i286, label %if.then39.i290, label %if.end.i329, !dbg !11546

if.then39.i290:                                   ; preds = %land.lhs.true36.i287
  %233 = load i32, i32* %re_size_plus8.i204, align 4, !dbg !11547
  %234 = load i32, i32* %re_index.i202, align 4, !dbg !11548
  %235 = load i32, i32* %nb_bits.i206, align 4, !dbg !11549
  %add40.i288 = add i32 %234, %235, !dbg !11550
  %cmp41.i289 = icmp ugt i32 %233, %add40.i288, !dbg !11551
  br i1 %cmp41.i289, label %cond.true43.i292, label %cond.false45.i293, !dbg !11552

cond.true43.i292:                                 ; preds = %if.then39.i290
  %236 = load i32, i32* %re_index.i202, align 4, !dbg !11553
  %237 = load i32, i32* %nb_bits.i206, align 4, !dbg !11554
  %add44.i291 = add i32 %236, %237, !dbg !11555
  br label %cond.end46.i328, !dbg !11556

cond.false45.i293:                                ; preds = %if.then39.i290
  %238 = load i32, i32* %re_size_plus8.i204, align 4, !dbg !11557
  br label %cond.end46.i328, !dbg !11558

cond.end46.i328:                                  ; preds = %cond.false45.i293, %cond.true43.i292
  %cond47.i294 = phi i32 [ %add44.i291, %cond.true43.i292 ], [ %238, %cond.false45.i293 ], !dbg !11559
  store i32 %cond47.i294, i32* %re_index.i202, align 4, !dbg !11560
  %239 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i197, align 8, !dbg !11561
  %buffer48.i295 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %239, i32 0, i32 0, !dbg !11562
  %240 = load i8*, i8** %buffer48.i295, align 8, !dbg !11562
  %241 = load i32, i32* %re_index.i202, align 4, !dbg !11563
  %shr49.i296 = lshr i32 %241, 3, !dbg !11564
  %idx.ext50.i297 = zext i32 %shr49.i296 to i64, !dbg !11565
  %add.ptr51.i298 = getelementptr inbounds i8, i8* %240, i64 %idx.ext50.i297, !dbg !11565
  %242 = bitcast i8* %add.ptr51.i298 to %union.unaligned_32*, !dbg !11566
  %l52.i299 = bitcast %union.unaligned_32* %242 to i32*, !dbg !11566
  %243 = load i32, i32* %l52.i299, align 1, !dbg !11566
  store i32 %243, i32* %x.addr.i96.i194, align 4, !dbg !11567
  %244 = load i32, i32* %x.addr.i96.i194, align 4, !dbg !11568
  %shl.i97.i300 = shl i32 %244, 8, !dbg !11569
  %and.i98.i301 = and i32 %shl.i97.i300, 65280, !dbg !11570
  %245 = load i32, i32* %x.addr.i96.i194, align 4, !dbg !11571
  %shr.i99.i302 = lshr i32 %245, 8, !dbg !11572
  %and1.i100.i303 = and i32 %shr.i99.i302, 255, !dbg !11573
  %or.i101.i304 = or i32 %and.i98.i301, %and1.i100.i303, !dbg !11574
  %shl2.i102.i305 = shl i32 %or.i101.i304, 16, !dbg !11575
  %246 = load i32, i32* %x.addr.i96.i194, align 4, !dbg !11576
  %shr3.i103.i306 = lshr i32 %246, 16, !dbg !11577
  %shl4.i104.i307 = shl i32 %shr3.i103.i306, 8, !dbg !11578
  %and5.i105.i308 = and i32 %shl4.i104.i307, 65280, !dbg !11579
  %247 = load i32, i32* %x.addr.i96.i194, align 4, !dbg !11580
  %shr6.i106.i309 = lshr i32 %247, 16, !dbg !11581
  %shr7.i107.i310 = lshr i32 %shr6.i106.i309, 8, !dbg !11582
  %and8.i108.i311 = and i32 %shr7.i107.i310, 255, !dbg !11583
  %or9.i109.i312 = or i32 %and5.i105.i308, %and8.i108.i311, !dbg !11584
  %or10.i110.i313 = or i32 %shl2.i102.i305, %or9.i109.i312, !dbg !11585
  %248 = load i32, i32* %re_index.i202, align 4, !dbg !11586
  %and54.i314 = and i32 %248, 7, !dbg !11587
  %shl55.i315 = shl i32 %or10.i110.i313, %and54.i314, !dbg !11588
  store i32 %shl55.i315, i32* %re_cache.i203, align 4, !dbg !11589
  %249 = load i32, i32* %n.i205, align 4, !dbg !11590
  %sub56.i316 = sub nsw i32 0, %249, !dbg !11591
  store i32 %sub56.i316, i32* %nb_bits.i206, align 4, !dbg !11592
  %250 = load i32, i32* %re_cache.i203, align 4, !dbg !11593
  %251 = load i32, i32* %nb_bits.i206, align 4, !dbg !11594
  %conv57.i317 = trunc i32 %251 to i8, !dbg !11594
  %call58.i318 = call i32 @NEG_USR32(i32 %250, i8 signext %conv57.i317) #9, !dbg !11595
  %252 = load i32, i32* %code.i201, align 4, !dbg !11596
  %add59.i319 = add i32 %call58.i318, %252, !dbg !11597
  store i32 %add59.i319, i32* %index1.i207, align 4, !dbg !11598
  %253 = load i32, i32* %index1.i207, align 4, !dbg !11599
  %idxprom60.i320 = zext i32 %253 to i64, !dbg !11600
  %254 = load [2 x i16]*, [2 x i16]** %table.addr.i198, align 8, !dbg !11600
  %arrayidx61.i321 = getelementptr inbounds [2 x i16], [2 x i16]* %254, i64 %idxprom60.i320, !dbg !11600
  %arrayidx62.i322 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i321, i64 0, i64 0, !dbg !11600
  %255 = load i16, i16* %arrayidx62.i322, align 2, !dbg !11600
  %conv63.i323 = sext i16 %255 to i32, !dbg !11600
  store i32 %conv63.i323, i32* %code.i201, align 4, !dbg !11601
  %256 = load i32, i32* %index1.i207, align 4, !dbg !11602
  %idxprom64.i324 = zext i32 %256 to i64, !dbg !11603
  %257 = load [2 x i16]*, [2 x i16]** %table.addr.i198, align 8, !dbg !11603
  %arrayidx65.i325 = getelementptr inbounds [2 x i16], [2 x i16]* %257, i64 %idxprom64.i324, !dbg !11603
  %arrayidx66.i326 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i325, i64 0, i64 1, !dbg !11603
  %258 = load i16, i16* %arrayidx66.i326, align 2, !dbg !11603
  %conv67.i327 = sext i16 %258 to i32, !dbg !11603
  store i32 %conv67.i327, i32* %n.i205, align 4, !dbg !11604
  br label %if.end.i329, !dbg !11605

if.end.i329:                                      ; preds = %cond.end46.i328, %land.lhs.true36.i287, %cond.end.i285
  br label %if.end68.i330, !dbg !11606

if.end68.i330:                                    ; preds = %if.end.i329, %land.lhs.true.i243, %for.body109
  %259 = load i32, i32* %n.i205, align 4, !dbg !11607
  %260 = load i32, i32* %re_cache.i203, align 4, !dbg !11608
  %shl70.i331 = shl i32 %260, %259, !dbg !11608
  store i32 %shl70.i331, i32* %re_cache.i203, align 4, !dbg !11608
  %261 = load i32, i32* %re_size_plus8.i204, align 4, !dbg !11609
  %262 = load i32, i32* %re_index.i202, align 4, !dbg !11610
  %263 = load i32, i32* %n.i205, align 4, !dbg !11611
  %add71.i332 = add i32 %262, %263, !dbg !11612
  %cmp72.i333 = icmp ugt i32 %261, %add71.i332, !dbg !11613
  br i1 %cmp72.i333, label %cond.true74.i335, label %cond.false76.i336, !dbg !11614

cond.true74.i335:                                 ; preds = %if.end68.i330
  %264 = load i32, i32* %re_index.i202, align 4, !dbg !11615
  %265 = load i32, i32* %n.i205, align 4, !dbg !11616
  %add75.i334 = add i32 %264, %265, !dbg !11617
  br label %get_vlc2.exit339, !dbg !11618

cond.false76.i336:                                ; preds = %if.end68.i330
  %266 = load i32, i32* %re_size_plus8.i204, align 4, !dbg !11619
  br label %get_vlc2.exit339, !dbg !11620

get_vlc2.exit339:                                 ; preds = %cond.true74.i335, %cond.false76.i336
  %cond78.i337 = phi i32 [ %add75.i334, %cond.true74.i335 ], [ %266, %cond.false76.i336 ], !dbg !11621
  store i32 %cond78.i337, i32* %re_index.i202, align 4, !dbg !11622
  %267 = load i32, i32* %re_index.i202, align 4, !dbg !11623
  %268 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i197, align 8, !dbg !11624
  %index80.i338 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %268, i32 0, i32 2, !dbg !11625
  store i32 %267, i32* %index80.i338, align 8, !dbg !11626
  %269 = load i32, i32* %code.i201, align 4, !dbg !11627
  store i32 %269, i32* %delta, align 4, !dbg !11628
  %270 = load i32, i32* %i, align 4, !dbg !11629
  %271 = load i32, i32* %sb, align 4, !dbg !11630
  %sub = sub nsw i32 %271, 1, !dbg !11631
  %idxprom111 = sext i32 %sub to i64, !dbg !11632
  %272 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11632
  %gain_data112 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %272, i32 0, i32 14, !dbg !11633
  %273 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data112, align 8, !dbg !11633
  %arrayidx113 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %273, i64 %idxprom111, !dbg !11632
  %num_points114 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx113, i32 0, i32 0, !dbg !11634
  %274 = load i32, i32* %num_points114, align 4, !dbg !11634
  %cmp115 = icmp sge i32 %270, %274, !dbg !11635
  br i1 %cmp115, label %cond.true116, label %cond.false117, !dbg !11636

cond.true116:                                     ; preds = %get_vlc2.exit339
  br label %cond.end125, !dbg !11637

cond.false117:                                    ; preds = %get_vlc2.exit339
  %275 = load i32, i32* %i, align 4, !dbg !11639
  %idxprom118 = sext i32 %275 to i64, !dbg !11640
  %276 = load i32, i32* %sb, align 4, !dbg !11641
  %sub119 = sub nsw i32 %276, 1, !dbg !11642
  %idxprom120 = sext i32 %sub119 to i64, !dbg !11640
  %277 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11640
  %gain_data121 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %277, i32 0, i32 14, !dbg !11643
  %278 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data121, align 8, !dbg !11643
  %arrayidx122 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %278, i64 %idxprom120, !dbg !11640
  %lev_code123 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx122, i32 0, i32 1, !dbg !11644
  %arrayidx124 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code123, i64 0, i64 %idxprom118, !dbg !11640
  %279 = load i32, i32* %arrayidx124, align 4, !dbg !11640
  br label %cond.end125, !dbg !11645

cond.end125:                                      ; preds = %cond.false117, %cond.true116
  %cond126 = phi i32 [ 7, %cond.true116 ], [ %279, %cond.false117 ], !dbg !11647
  store i32 %cond126, i32* %pred, align 4, !dbg !11649
  %280 = load i32, i32* %pred, align 4, !dbg !11650
  %281 = load i32, i32* %delta, align 4, !dbg !11651
  %add127 = add nsw i32 %280, %281, !dbg !11652
  %and128 = and i32 %add127, 15, !dbg !11653
  %282 = load i32, i32* %i, align 4, !dbg !11654
  %idxprom129 = sext i32 %282 to i64, !dbg !11655
  %283 = load i32, i32* %sb, align 4, !dbg !11656
  %idxprom130 = sext i32 %283 to i64, !dbg !11655
  %284 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11655
  %gain_data131 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %284, i32 0, i32 14, !dbg !11657
  %285 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data131, align 8, !dbg !11657
  %arrayidx132 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %285, i64 %idxprom130, !dbg !11655
  %lev_code133 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx132, i32 0, i32 1, !dbg !11658
  %arrayidx134 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code133, i64 0, i64 %idxprom129, !dbg !11655
  store i32 %and128, i32* %arrayidx134, align 4, !dbg !11659
  br label %for.inc135, !dbg !11660

for.inc135:                                       ; preds = %cond.end125
  %286 = load i32, i32* %i, align 4, !dbg !11661
  %inc136 = add nsw i32 %286, 1, !dbg !11661
  store i32 %inc136, i32* %i, align 4, !dbg !11661
  br label %for.cond103, !dbg !11663, !llvm.loop !11664

for.end137:                                       ; preds = %for.cond103
  br label %for.inc138, !dbg !11666

for.inc138:                                       ; preds = %for.end137
  %287 = load i32, i32* %sb, align 4, !dbg !11668
  %inc139 = add nsw i32 %287, 1, !dbg !11668
  store i32 %inc139, i32* %sb, align 4, !dbg !11668
  br label %for.cond100, !dbg !11670, !llvm.loop !11671

for.end140:                                       ; preds = %for.cond100
  br label %if.end141

if.end141:                                        ; preds = %for.end140, %for.end90
  br label %sw.epilog, !dbg !11673

sw.bb142:                                         ; preds = %entry
  %288 = load i32, i32* %ch_num.addr, align 4, !dbg !11674
  %tobool143 = icmp ne i32 %288, 0, !dbg !11674
  br i1 %tobool143, label %if.then144, label %if.else157, !dbg !11675

if.then144:                                       ; preds = %sw.bb142
  store i32 0, i32* %sb, align 4, !dbg !11676
  br label %for.cond145, !dbg !11679

for.cond145:                                      ; preds = %for.inc154, %if.then144
  %289 = load i32, i32* %sb, align 4, !dbg !11680
  %290 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11683
  %cmp146 = icmp slt i32 %289, %290, !dbg !11684
  br i1 %cmp146, label %for.body147, label %for.end156, !dbg !11685

for.body147:                                      ; preds = %for.cond145
  %291 = load i32, i32* %sb, align 4, !dbg !11686
  %idxprom148 = sext i32 %291 to i64, !dbg !11687
  %292 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11687
  %gain_data149 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %292, i32 0, i32 14, !dbg !11688
  %293 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data149, align 8, !dbg !11688
  %arrayidx150 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %293, i64 %idxprom148, !dbg !11687
  %294 = load i32, i32* %sb, align 4, !dbg !11689
  %idxprom151 = sext i32 %294 to i64, !dbg !11690
  %295 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !11690
  %gain_data152 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %295, i32 0, i32 14, !dbg !11691
  %296 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data152, align 8, !dbg !11691
  %arrayidx153 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %296, i64 %idxprom151, !dbg !11690
  call void @gainc_level_mode3s(%struct.AtracGainInfo* %arrayidx150, %struct.AtracGainInfo* %arrayidx153), !dbg !11692
  br label %for.inc154, !dbg !11692

for.inc154:                                       ; preds = %for.body147
  %297 = load i32, i32* %sb, align 4, !dbg !11693
  %inc155 = add nsw i32 %297, 1, !dbg !11693
  store i32 %inc155, i32* %sb, align 4, !dbg !11693
  br label %for.cond145, !dbg !11695, !llvm.loop !11696

for.end156:                                       ; preds = %for.cond145
  br label %if.end193, !dbg !11698

if.else157:                                       ; preds = %sw.bb142
  %298 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11699
  %call158 = call i32 @get_bits(%struct.GetBitContext* %298, i32 2), !dbg !11700
  store i32 %call158, i32* %delta_bits, align 4, !dbg !11701
  %299 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11702
  %call159 = call i32 @get_bits(%struct.GetBitContext* %299, i32 4), !dbg !11703
  store i32 %call159, i32* %min_val, align 4, !dbg !11704
  store i32 0, i32* %sb, align 4, !dbg !11705
  br label %for.cond160, !dbg !11706

for.cond160:                                      ; preds = %for.inc190, %if.else157
  %300 = load i32, i32* %sb, align 4, !dbg !11707
  %301 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11709
  %cmp161 = icmp slt i32 %300, %301, !dbg !11710
  br i1 %cmp161, label %for.body162, label %for.end192, !dbg !11711

for.body162:                                      ; preds = %for.cond160
  store i32 0, i32* %i, align 4, !dbg !11712
  br label %for.cond163, !dbg !11713

for.cond163:                                      ; preds = %for.inc187, %for.body162
  %302 = load i32, i32* %i, align 4, !dbg !11714
  %303 = load i32, i32* %sb, align 4, !dbg !11716
  %idxprom164 = sext i32 %303 to i64, !dbg !11717
  %304 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11717
  %gain_data165 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %304, i32 0, i32 14, !dbg !11718
  %305 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data165, align 8, !dbg !11718
  %arrayidx166 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %305, i64 %idxprom164, !dbg !11717
  %num_points167 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx166, i32 0, i32 0, !dbg !11719
  %306 = load i32, i32* %num_points167, align 4, !dbg !11719
  %cmp168 = icmp slt i32 %302, %306, !dbg !11720
  br i1 %cmp168, label %for.body169, label %for.end189, !dbg !11721

for.body169:                                      ; preds = %for.cond163
  %307 = load i32, i32* %min_val, align 4, !dbg !11722
  %308 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11723
  %309 = load i32, i32* %delta_bits, align 4, !dbg !11724
  store %struct.GetBitContext* %308, %struct.GetBitContext** %s.addr.i340, align 8, !dbg !11725
  store i32 %309, i32* %n.addr.i, align 4, !dbg !11725
  %310 = load i32, i32* %n.addr.i, align 4, !dbg !11726
  %tobool.i = icmp ne i32 %310, 0, !dbg !11726
  br i1 %tobool.i, label %cond.true.i341, label %cond.false.i342, !dbg !11726

cond.true.i341:                                   ; preds = %for.body169
  %311 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i340, align 8, !dbg !11727
  %312 = load i32, i32* %n.addr.i, align 4, !dbg !11728
  %call.i = call i32 @get_bits(%struct.GetBitContext* %311, i32 %312) #9, !dbg !11729
  br label %get_bitsz.exit, !dbg !11730

cond.false.i342:                                  ; preds = %for.body169
  br label %get_bitsz.exit, !dbg !11731

get_bitsz.exit:                                   ; preds = %cond.true.i341, %cond.false.i342
  %cond.i343 = phi i32 [ %call.i, %cond.true.i341 ], [ 0, %cond.false.i342 ], !dbg !11732
  %add171 = add nsw i32 %307, %cond.i343, !dbg !11733
  %313 = load i32, i32* %i, align 4, !dbg !11734
  %idxprom172 = sext i32 %313 to i64, !dbg !11735
  %314 = load i32, i32* %sb, align 4, !dbg !11736
  %idxprom173 = sext i32 %314 to i64, !dbg !11735
  %315 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11735
  %gain_data174 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %315, i32 0, i32 14, !dbg !11737
  %316 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data174, align 8, !dbg !11737
  %arrayidx175 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %316, i64 %idxprom173, !dbg !11735
  %lev_code176 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx175, i32 0, i32 1, !dbg !11738
  %arrayidx177 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code176, i64 0, i64 %idxprom172, !dbg !11735
  store i32 %add171, i32* %arrayidx177, align 4, !dbg !11739
  %317 = load i32, i32* %i, align 4, !dbg !11740
  %idxprom178 = sext i32 %317 to i64, !dbg !11742
  %318 = load i32, i32* %sb, align 4, !dbg !11743
  %idxprom179 = sext i32 %318 to i64, !dbg !11742
  %319 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11742
  %gain_data180 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %319, i32 0, i32 14, !dbg !11744
  %320 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data180, align 8, !dbg !11744
  %arrayidx181 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %320, i64 %idxprom179, !dbg !11742
  %lev_code182 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx181, i32 0, i32 1, !dbg !11745
  %arrayidx183 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code182, i64 0, i64 %idxprom178, !dbg !11742
  %321 = load i32, i32* %arrayidx183, align 4, !dbg !11742
  %cmp184 = icmp sgt i32 %321, 15, !dbg !11746
  br i1 %cmp184, label %if.then185, label %if.end186, !dbg !11747

if.then185:                                       ; preds = %get_bitsz.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !11748
  br label %return, !dbg !11748

if.end186:                                        ; preds = %get_bitsz.exit
  br label %for.inc187, !dbg !11749

for.inc187:                                       ; preds = %if.end186
  %322 = load i32, i32* %i, align 4, !dbg !11750
  %inc188 = add nsw i32 %322, 1, !dbg !11750
  store i32 %inc188, i32* %i, align 4, !dbg !11750
  br label %for.cond163, !dbg !11752, !llvm.loop !11753

for.end189:                                       ; preds = %for.cond163
  br label %for.inc190, !dbg !11755

for.inc190:                                       ; preds = %for.end189
  %323 = load i32, i32* %sb, align 4, !dbg !11757
  %inc191 = add nsw i32 %323, 1, !dbg !11757
  store i32 %inc191, i32* %sb, align 4, !dbg !11757
  br label %for.cond160, !dbg !11759, !llvm.loop !11760

for.end192:                                       ; preds = %for.cond160
  br label %if.end193

if.end193:                                        ; preds = %for.end192, %for.end156
  br label %sw.epilog, !dbg !11762

sw.epilog:                                        ; preds = %entry, %if.end193, %if.end141, %if.end, %for.end16
  store i32 0, i32* %retval, align 4, !dbg !11763
  br label %return, !dbg !11763

return:                                           ; preds = %sw.epilog, %if.then185
  %324 = load i32, i32* %retval, align 4, !dbg !11764
  ret i32 %324, !dbg !11764
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_gainc_loc_codes(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32 %coded_subbands, %struct.AVCodecContext* %avctx) #3 !dbg !11765 {
entry:
  %x.addr.i96.i826 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i826, metadata !2531, metadata !1324), !dbg !11768
  %x.addr.i81.i827 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i827, metadata !2531, metadata !1324), !dbg !11780
  %x.addr.i.i828 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i828, metadata !2531, metadata !1324), !dbg !11782
  %s.addr.i829 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i829, metadata !3291, metadata !1324), !dbg !11784
  %table.addr.i830 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i830, metadata !3293, metadata !1324), !dbg !11785
  %bits.addr.i831 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i831, metadata !3295, metadata !1324), !dbg !11786
  %max_depth.addr.i832 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i832, metadata !3297, metadata !1324), !dbg !11787
  %code.i833 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i833, metadata !3299, metadata !1324), !dbg !11788
  %re_index.i834 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i834, metadata !3301, metadata !1324), !dbg !11789
  %re_cache.i835 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i835, metadata !3303, metadata !1324), !dbg !11790
  %re_size_plus8.i836 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i836, metadata !3305, metadata !1324), !dbg !11791
  %n.i837 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i837, metadata !3307, metadata !1324), !dbg !11792
  %nb_bits.i838 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i838, metadata !3309, metadata !1324), !dbg !11793
  %index1.i839 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i839, metadata !3311, metadata !1324), !dbg !11794
  %x.addr.i96.i680 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i680, metadata !2531, metadata !1324), !dbg !11795
  %x.addr.i81.i681 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i681, metadata !2531, metadata !1324), !dbg !11798
  %x.addr.i.i682 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i682, metadata !2531, metadata !1324), !dbg !11800
  %s.addr.i683 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i683, metadata !3291, metadata !1324), !dbg !11802
  %table.addr.i684 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i684, metadata !3293, metadata !1324), !dbg !11803
  %bits.addr.i685 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i685, metadata !3295, metadata !1324), !dbg !11804
  %max_depth.addr.i686 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i686, metadata !3297, metadata !1324), !dbg !11805
  %code.i687 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i687, metadata !3299, metadata !1324), !dbg !11806
  %re_index.i688 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i688, metadata !3301, metadata !1324), !dbg !11807
  %re_cache.i689 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i689, metadata !3303, metadata !1324), !dbg !11808
  %re_size_plus8.i690 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i690, metadata !3305, metadata !1324), !dbg !11809
  %n.i691 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i691, metadata !3307, metadata !1324), !dbg !11810
  %nb_bits.i692 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i692, metadata !3309, metadata !1324), !dbg !11811
  %index1.i693 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i693, metadata !3311, metadata !1324), !dbg !11812
  %x.addr.i96.i534 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i534, metadata !2531, metadata !1324), !dbg !11813
  %x.addr.i81.i535 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i535, metadata !2531, metadata !1324), !dbg !11826
  %x.addr.i.i536 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i536, metadata !2531, metadata !1324), !dbg !11828
  %s.addr.i537 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i537, metadata !3291, metadata !1324), !dbg !11830
  %table.addr.i538 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i538, metadata !3293, metadata !1324), !dbg !11831
  %bits.addr.i539 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i539, metadata !3295, metadata !1324), !dbg !11832
  %max_depth.addr.i540 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i540, metadata !3297, metadata !1324), !dbg !11833
  %code.i541 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i541, metadata !3299, metadata !1324), !dbg !11834
  %re_index.i542 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i542, metadata !3301, metadata !1324), !dbg !11835
  %re_cache.i543 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i543, metadata !3303, metadata !1324), !dbg !11836
  %re_size_plus8.i544 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i544, metadata !3305, metadata !1324), !dbg !11837
  %n.i545 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i545, metadata !3307, metadata !1324), !dbg !11838
  %nb_bits.i546 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i546, metadata !3309, metadata !1324), !dbg !11839
  %index1.i547 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i547, metadata !3311, metadata !1324), !dbg !11840
  %x.addr.i96.i388 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i388, metadata !2531, metadata !1324), !dbg !11841
  %x.addr.i81.i389 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i389, metadata !2531, metadata !1324), !dbg !11847
  %x.addr.i.i390 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i390, metadata !2531, metadata !1324), !dbg !11849
  %s.addr.i391 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i391, metadata !3291, metadata !1324), !dbg !11851
  %table.addr.i392 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i392, metadata !3293, metadata !1324), !dbg !11852
  %bits.addr.i393 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i393, metadata !3295, metadata !1324), !dbg !11853
  %max_depth.addr.i394 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i394, metadata !3297, metadata !1324), !dbg !11854
  %code.i395 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i395, metadata !3299, metadata !1324), !dbg !11855
  %re_index.i396 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i396, metadata !3301, metadata !1324), !dbg !11856
  %re_cache.i397 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i397, metadata !3303, metadata !1324), !dbg !11857
  %re_size_plus8.i398 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i398, metadata !3305, metadata !1324), !dbg !11858
  %n.i399 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i399, metadata !3307, metadata !1324), !dbg !11859
  %nb_bits.i400 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i400, metadata !3309, metadata !1324), !dbg !11860
  %index1.i401 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i401, metadata !3311, metadata !1324), !dbg !11861
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !11862
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !11865
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !11867
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !11869
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !11870
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !11871
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !11872
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !11873
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !11874
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !11875
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !11876
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !11877
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !11878
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !11879
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %coded_subbands.addr = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %sb = alloca i32, align 4
  %i = alloca i32, align 4
  %delta = alloca i32, align 4
  %delta_bits = alloca i32, align 4
  %min_val = alloca i32, align 4
  %pred = alloca i32, align 4
  %more_than_ref = alloca i32, align 4
  %dst = alloca %struct.AtracGainInfo*, align 8
  %ref = alloca %struct.AtracGainInfo*, align 8
  %tab = alloca %struct.VLC*, align 8
  %chan = alloca %struct.Atrac3pChanParams*, align 8
  %ref_chan = alloca %struct.Atrac3pChanParams*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !11880, metadata !1324), !dbg !11881
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !11882, metadata !1324), !dbg !11883
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !11884, metadata !1324), !dbg !11885
  store i32 %coded_subbands, i32* %coded_subbands.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coded_subbands.addr, metadata !11886, metadata !1324), !dbg !11887
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !11888, metadata !1324), !dbg !11889
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !11890, metadata !1324), !dbg !11891
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11892, metadata !1324), !dbg !11893
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !11894, metadata !1324), !dbg !11895
  call void @llvm.dbg.declare(metadata i32* %delta_bits, metadata !11896, metadata !1324), !dbg !11897
  call void @llvm.dbg.declare(metadata i32* %min_val, metadata !11898, metadata !1324), !dbg !11899
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !11900, metadata !1324), !dbg !11901
  call void @llvm.dbg.declare(metadata i32* %more_than_ref, metadata !11902, metadata !1324), !dbg !11903
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %dst, metadata !11904, metadata !1324), !dbg !11905
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %ref, metadata !11906, metadata !1324), !dbg !11907
  call void @llvm.dbg.declare(metadata %struct.VLC** %tab, metadata !11908, metadata !1324), !dbg !11909
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %chan, metadata !11910, metadata !1324), !dbg !11911
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !11912
  %idxprom = sext i32 %0 to i64, !dbg !11913
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11913
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !11914
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !11913
  store %struct.Atrac3pChanParams* %arrayidx, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11911
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanParams** %ref_chan, metadata !11915, metadata !1324), !dbg !11916
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11917
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 12, !dbg !11918
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !11917
  store %struct.Atrac3pChanParams* %arrayidx2, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !11916
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11919
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 2), !dbg !11920
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb116
    i32 3, label %sw.bb263
  ], !dbg !11921

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %sb, align 4, !dbg !11922
  br label %for.cond, !dbg !11924

for.cond:                                         ; preds = %for.inc11, %sw.bb
  %4 = load i32, i32* %sb, align 4, !dbg !11925
  %5 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11928
  %cmp = icmp slt i32 %4, %5, !dbg !11929
  br i1 %cmp, label %for.body, label %for.end13, !dbg !11930

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11931
  br label %for.cond3, !dbg !11933

for.cond3:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %i, align 4, !dbg !11934
  %7 = load i32, i32* %sb, align 4, !dbg !11937
  %idxprom4 = sext i32 %7 to i64, !dbg !11938
  %8 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11938
  %gain_data = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %8, i32 0, i32 14, !dbg !11939
  %9 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data, align 8, !dbg !11939
  %arrayidx5 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %9, i64 %idxprom4, !dbg !11938
  %num_points = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx5, i32 0, i32 0, !dbg !11940
  %10 = load i32, i32* %num_points, align 4, !dbg !11940
  %cmp6 = icmp slt i32 %6, %10, !dbg !11941
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !11942

for.body7:                                        ; preds = %for.cond3
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11943
  %12 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !11944
  %13 = load i32, i32* %sb, align 4, !dbg !11945
  %idxprom8 = sext i32 %13 to i64, !dbg !11946
  %14 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11946
  %gain_data9 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %14, i32 0, i32 14, !dbg !11947
  %15 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data9, align 8, !dbg !11947
  %arrayidx10 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %15, i64 %idxprom8, !dbg !11946
  %16 = load i32, i32* %i, align 4, !dbg !11948
  call void @gainc_loc_mode0(%struct.GetBitContext* %11, %struct.Atrac3pChanUnitCtx* %12, %struct.AtracGainInfo* %arrayidx10, i32 %16), !dbg !11949
  br label %for.inc, !dbg !11949

for.inc:                                          ; preds = %for.body7
  %17 = load i32, i32* %i, align 4, !dbg !11950
  %inc = add nsw i32 %17, 1, !dbg !11950
  store i32 %inc, i32* %i, align 4, !dbg !11950
  br label %for.cond3, !dbg !11952, !llvm.loop !11953

for.end:                                          ; preds = %for.cond3
  br label %for.inc11, !dbg !11955

for.inc11:                                        ; preds = %for.end
  %18 = load i32, i32* %sb, align 4, !dbg !11957
  %inc12 = add nsw i32 %18, 1, !dbg !11957
  store i32 %inc12, i32* %sb, align 4, !dbg !11957
  br label %for.cond, !dbg !11959, !llvm.loop !11960

for.end13:                                        ; preds = %for.cond
  br label %sw.epilog, !dbg !11962

sw.bb14:                                          ; preds = %entry
  %19 = load i32, i32* %ch_num.addr, align 4, !dbg !11963
  %tobool = icmp ne i32 %19, 0, !dbg !11963
  br i1 %tobool, label %if.then, label %if.else104, !dbg !11964

if.then:                                          ; preds = %sw.bb14
  store i32 0, i32* %sb, align 4, !dbg !11965
  br label %for.cond15, !dbg !11966

for.cond15:                                       ; preds = %for.inc101, %if.then
  %20 = load i32, i32* %sb, align 4, !dbg !11967
  %21 = load i32, i32* %coded_subbands.addr, align 4, !dbg !11969
  %cmp16 = icmp slt i32 %20, %21, !dbg !11970
  br i1 %cmp16, label %for.body17, label %for.end103, !dbg !11971

for.body17:                                       ; preds = %for.cond15
  %22 = load i32, i32* %sb, align 4, !dbg !11972
  %idxprom18 = sext i32 %22 to i64, !dbg !11974
  %23 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11974
  %gain_data19 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %23, i32 0, i32 14, !dbg !11975
  %24 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data19, align 8, !dbg !11975
  %arrayidx20 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %24, i64 %idxprom18, !dbg !11974
  %num_points21 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx20, i32 0, i32 0, !dbg !11976
  %25 = load i32, i32* %num_points21, align 4, !dbg !11976
  %cmp22 = icmp sle i32 %25, 0, !dbg !11977
  br i1 %cmp22, label %if.then23, label %if.end, !dbg !11978

if.then23:                                        ; preds = %for.body17
  br label %for.inc101, !dbg !11979

if.end:                                           ; preds = %for.body17
  %26 = load i32, i32* %sb, align 4, !dbg !11980
  %idxprom24 = sext i32 %26 to i64, !dbg !11981
  %27 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !11981
  %gain_data25 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %27, i32 0, i32 14, !dbg !11982
  %28 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data25, align 8, !dbg !11982
  %arrayidx26 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %28, i64 %idxprom24, !dbg !11981
  store %struct.AtracGainInfo* %arrayidx26, %struct.AtracGainInfo** %dst, align 8, !dbg !11983
  %29 = load i32, i32* %sb, align 4, !dbg !11984
  %idxprom27 = sext i32 %29 to i64, !dbg !11985
  %30 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !11985
  %gain_data28 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %30, i32 0, i32 14, !dbg !11986
  %31 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data28, align 8, !dbg !11986
  %arrayidx29 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %31, i64 %idxprom27, !dbg !11985
  store %struct.AtracGainInfo* %arrayidx29, %struct.AtracGainInfo** %ref, align 8, !dbg !11987
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !11988
  %33 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 10, i32 1), align 8, !dbg !11989
  %34 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 10, i32 0), align 16, !dbg !11990
  store %struct.GetBitContext* %32, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11991
  store [2 x i16]* %33, [2 x i16]** %table.addr.i, align 8, !dbg !11991
  store i32 %34, i32* %bits.addr.i, align 4, !dbg !11991
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !11991
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11992
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %35, i32 0, i32 2, !dbg !11993
  %36 = load i32, i32* %index.i, align 8, !dbg !11993
  store i32 %36, i32* %re_index.i, align 4, !dbg !11874
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11994
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %37, i32 0, i32 4, !dbg !11995
  %38 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !11995
  store i32 %38, i32* %re_size_plus8.i, align 4, !dbg !11876
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !11996
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %39, i32 0, i32 0, !dbg !11997
  %40 = load i8*, i8** %buffer.i, align 8, !dbg !11997
  %41 = load i32, i32* %re_index.i, align 4, !dbg !11998
  %shr.i = lshr i32 %41, 3, !dbg !11999
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !12000
  %add.ptr.i = getelementptr inbounds i8, i8* %40, i64 %idx.ext.i, !dbg !12000
  %42 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !12001
  %l.i = bitcast %union.unaligned_32* %42 to i32*, !dbg !12001
  %43 = load i32, i32* %l.i, align 1, !dbg !12001
  store i32 %43, i32* %x.addr.i.i, align 4, !dbg !12002
  %44 = load i32, i32* %x.addr.i.i, align 4, !dbg !12003
  %shl.i.i = shl i32 %44, 8, !dbg !12004
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !12005
  %45 = load i32, i32* %x.addr.i.i, align 4, !dbg !12006
  %shr.i.i = lshr i32 %45, 8, !dbg !12007
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !12008
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !12009
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !12010
  %46 = load i32, i32* %x.addr.i.i, align 4, !dbg !12011
  %shr3.i.i = lshr i32 %46, 16, !dbg !12012
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !12013
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !12014
  %47 = load i32, i32* %x.addr.i.i, align 4, !dbg !12015
  %shr6.i.i = lshr i32 %47, 16, !dbg !12016
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !12017
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !12018
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !12019
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !12020
  %48 = load i32, i32* %re_index.i, align 4, !dbg !12021
  %and.i = and i32 %48, 7, !dbg !12022
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !12023
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !12024
  %49 = load i32, i32* %re_cache.i, align 4, !dbg !12025
  %50 = load i32, i32* %bits.addr.i, align 4, !dbg !12026
  %conv.i = trunc i32 %50 to i8, !dbg !12026
  %call2.i = call i32 @NEG_USR32(i32 %49, i8 signext %conv.i) #9, !dbg !12027
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !12028
  %51 = load i32, i32* %index1.i, align 4, !dbg !12029
  %idxprom.i = zext i32 %51 to i64, !dbg !12030
  %52 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12030
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %52, i64 %idxprom.i, !dbg !12030
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !12030
  %53 = load i16, i16* %arrayidx3.i, align 2, !dbg !12030
  %conv4.i = sext i16 %53 to i32, !dbg !12030
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !12031
  %54 = load i32, i32* %index1.i, align 4, !dbg !12032
  %idxprom5.i = zext i32 %54 to i64, !dbg !12033
  %55 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12033
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %55, i64 %idxprom5.i, !dbg !12033
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !12033
  %56 = load i16, i16* %arrayidx7.i, align 2, !dbg !12033
  %conv8.i = sext i16 %56 to i32, !dbg !12033
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !12034
  %57 = load i32, i32* %max_depth.addr.i, align 4, !dbg !12035
  %cmp.i = icmp sgt i32 %57, 1, !dbg !12036
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !12037

land.lhs.true.i:                                  ; preds = %if.end
  %58 = load i32, i32* %n.i, align 4, !dbg !12038
  %cmp10.i = icmp slt i32 %58, 0, !dbg !12039
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !12040

if.then.i:                                        ; preds = %land.lhs.true.i
  %59 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12041
  %60 = load i32, i32* %re_index.i, align 4, !dbg !12042
  %61 = load i32, i32* %bits.addr.i, align 4, !dbg !12043
  %add.i = add i32 %60, %61, !dbg !12044
  %cmp12.i = icmp ugt i32 %59, %add.i, !dbg !12045
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !12046

cond.true.i:                                      ; preds = %if.then.i
  %62 = load i32, i32* %re_index.i, align 4, !dbg !12047
  %63 = load i32, i32* %bits.addr.i, align 4, !dbg !12048
  %add14.i = add i32 %62, %63, !dbg !12049
  br label %cond.end.i, !dbg !12050

cond.false.i:                                     ; preds = %if.then.i
  %64 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12051
  br label %cond.end.i, !dbg !12052

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %64, %cond.false.i ], !dbg !12053
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !12054
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12055
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %65, i32 0, i32 0, !dbg !12056
  %66 = load i8*, i8** %buffer15.i, align 8, !dbg !12056
  %67 = load i32, i32* %re_index.i, align 4, !dbg !12057
  %shr16.i = lshr i32 %67, 3, !dbg !12058
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !12059
  %add.ptr18.i = getelementptr inbounds i8, i8* %66, i64 %idx.ext17.i, !dbg !12059
  %68 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !12060
  %l19.i = bitcast %union.unaligned_32* %68 to i32*, !dbg !12060
  %69 = load i32, i32* %l19.i, align 1, !dbg !12060
  store i32 %69, i32* %x.addr.i81.i, align 4, !dbg !12061
  %70 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12062
  %shl.i82.i = shl i32 %70, 8, !dbg !12063
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !12064
  %71 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12065
  %shr.i84.i = lshr i32 %71, 8, !dbg !12066
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !12067
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !12068
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !12069
  %72 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12070
  %shr3.i88.i = lshr i32 %72, 16, !dbg !12071
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !12072
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !12073
  %73 = load i32, i32* %x.addr.i81.i, align 4, !dbg !12074
  %shr6.i91.i = lshr i32 %73, 16, !dbg !12075
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !12076
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !12077
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !12078
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !12079
  %74 = load i32, i32* %re_index.i, align 4, !dbg !12080
  %and21.i = and i32 %74, 7, !dbg !12081
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !12082
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !12083
  %75 = load i32, i32* %n.i, align 4, !dbg !12084
  %sub.i = sub nsw i32 0, %75, !dbg !12085
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !12086
  %76 = load i32, i32* %re_cache.i, align 4, !dbg !12087
  %77 = load i32, i32* %nb_bits.i, align 4, !dbg !12088
  %conv23.i = trunc i32 %77 to i8, !dbg !12088
  %call24.i = call i32 @NEG_USR32(i32 %76, i8 signext %conv23.i) #9, !dbg !12089
  %78 = load i32, i32* %code.i, align 4, !dbg !12090
  %add25.i = add i32 %call24.i, %78, !dbg !12091
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !12092
  %79 = load i32, i32* %index1.i, align 4, !dbg !12093
  %idxprom26.i = zext i32 %79 to i64, !dbg !12094
  %80 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12094
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %80, i64 %idxprom26.i, !dbg !12094
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !12094
  %81 = load i16, i16* %arrayidx28.i, align 2, !dbg !12094
  %conv29.i = sext i16 %81 to i32, !dbg !12094
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !12095
  %82 = load i32, i32* %index1.i, align 4, !dbg !12096
  %idxprom30.i = zext i32 %82 to i64, !dbg !12097
  %83 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12097
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %83, i64 %idxprom30.i, !dbg !12097
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !12097
  %84 = load i16, i16* %arrayidx32.i, align 2, !dbg !12097
  %conv33.i = sext i16 %84 to i32, !dbg !12097
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !12098
  %85 = load i32, i32* %max_depth.addr.i, align 4, !dbg !12099
  %cmp34.i = icmp sgt i32 %85, 2, !dbg !12100
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !12101

land.lhs.true36.i:                                ; preds = %cond.end.i
  %86 = load i32, i32* %n.i, align 4, !dbg !12102
  %cmp37.i = icmp slt i32 %86, 0, !dbg !12103
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !12104

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %87 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12105
  %88 = load i32, i32* %re_index.i, align 4, !dbg !12106
  %89 = load i32, i32* %nb_bits.i, align 4, !dbg !12107
  %add40.i = add i32 %88, %89, !dbg !12108
  %cmp41.i = icmp ugt i32 %87, %add40.i, !dbg !12109
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !12110

cond.true43.i:                                    ; preds = %if.then39.i
  %90 = load i32, i32* %re_index.i, align 4, !dbg !12111
  %91 = load i32, i32* %nb_bits.i, align 4, !dbg !12112
  %add44.i = add i32 %90, %91, !dbg !12113
  br label %cond.end46.i, !dbg !12114

cond.false45.i:                                   ; preds = %if.then39.i
  %92 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12115
  br label %cond.end46.i, !dbg !12116

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %92, %cond.false45.i ], !dbg !12117
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !12118
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12119
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %93, i32 0, i32 0, !dbg !12120
  %94 = load i8*, i8** %buffer48.i, align 8, !dbg !12120
  %95 = load i32, i32* %re_index.i, align 4, !dbg !12121
  %shr49.i = lshr i32 %95, 3, !dbg !12122
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !12123
  %add.ptr51.i = getelementptr inbounds i8, i8* %94, i64 %idx.ext50.i, !dbg !12123
  %96 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !12124
  %l52.i = bitcast %union.unaligned_32* %96 to i32*, !dbg !12124
  %97 = load i32, i32* %l52.i, align 1, !dbg !12124
  store i32 %97, i32* %x.addr.i96.i, align 4, !dbg !12125
  %98 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12126
  %shl.i97.i = shl i32 %98, 8, !dbg !12127
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !12128
  %99 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12129
  %shr.i99.i = lshr i32 %99, 8, !dbg !12130
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !12131
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !12132
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !12133
  %100 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12134
  %shr3.i103.i = lshr i32 %100, 16, !dbg !12135
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !12136
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !12137
  %101 = load i32, i32* %x.addr.i96.i, align 4, !dbg !12138
  %shr6.i106.i = lshr i32 %101, 16, !dbg !12139
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !12140
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !12141
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !12142
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !12143
  %102 = load i32, i32* %re_index.i, align 4, !dbg !12144
  %and54.i = and i32 %102, 7, !dbg !12145
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !12146
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !12147
  %103 = load i32, i32* %n.i, align 4, !dbg !12148
  %sub56.i = sub nsw i32 0, %103, !dbg !12149
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !12150
  %104 = load i32, i32* %re_cache.i, align 4, !dbg !12151
  %105 = load i32, i32* %nb_bits.i, align 4, !dbg !12152
  %conv57.i = trunc i32 %105 to i8, !dbg !12152
  %call58.i = call i32 @NEG_USR32(i32 %104, i8 signext %conv57.i) #9, !dbg !12153
  %106 = load i32, i32* %code.i, align 4, !dbg !12154
  %add59.i = add i32 %call58.i, %106, !dbg !12155
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !12156
  %107 = load i32, i32* %index1.i, align 4, !dbg !12157
  %idxprom60.i = zext i32 %107 to i64, !dbg !12158
  %108 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12158
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %108, i64 %idxprom60.i, !dbg !12158
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !12158
  %109 = load i16, i16* %arrayidx62.i, align 2, !dbg !12158
  %conv63.i = sext i16 %109 to i32, !dbg !12158
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !12159
  %110 = load i32, i32* %index1.i, align 4, !dbg !12160
  %idxprom64.i = zext i32 %110 to i64, !dbg !12161
  %111 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !12161
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %111, i64 %idxprom64.i, !dbg !12161
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !12161
  %112 = load i16, i16* %arrayidx66.i, align 2, !dbg !12161
  %conv67.i = sext i16 %112 to i32, !dbg !12161
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !12162
  br label %if.end.i, !dbg !12163

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !12164

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end
  %113 = load i32, i32* %n.i, align 4, !dbg !12165
  %114 = load i32, i32* %re_cache.i, align 4, !dbg !12166
  %shl70.i = shl i32 %114, %113, !dbg !12166
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !12166
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12167
  %116 = load i32, i32* %re_index.i, align 4, !dbg !12168
  %117 = load i32, i32* %n.i, align 4, !dbg !12169
  %add71.i = add i32 %116, %117, !dbg !12170
  %cmp72.i = icmp ugt i32 %115, %add71.i, !dbg !12171
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !12172

cond.true74.i:                                    ; preds = %if.end68.i
  %118 = load i32, i32* %re_index.i, align 4, !dbg !12173
  %119 = load i32, i32* %n.i, align 4, !dbg !12174
  %add75.i = add i32 %118, %119, !dbg !12175
  br label %get_vlc2.exit, !dbg !12176

cond.false76.i:                                   ; preds = %if.end68.i
  %120 = load i32, i32* %re_size_plus8.i, align 4, !dbg !12177
  br label %get_vlc2.exit, !dbg !12178

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %120, %cond.false76.i ], !dbg !12179
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !12180
  %121 = load i32, i32* %re_index.i, align 4, !dbg !12181
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !12182
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %122, i32 0, i32 2, !dbg !12183
  store i32 %121, i32* %index80.i, align 8, !dbg !12184
  %123 = load i32, i32* %code.i, align 4, !dbg !12185
  store i32 %123, i32* %delta, align 4, !dbg !12186
  %124 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref, align 8, !dbg !12187
  %num_points31 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %124, i32 0, i32 0, !dbg !12188
  %125 = load i32, i32* %num_points31, align 4, !dbg !12188
  %cmp32 = icmp sgt i32 %125, 0, !dbg !12189
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !12187

cond.true:                                        ; preds = %get_vlc2.exit
  %126 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref, align 8, !dbg !12190
  %loc_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %126, i32 0, i32 2, !dbg !12192
  %arrayidx33 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code, i64 0, i64 0, !dbg !12190
  %127 = load i32, i32* %arrayidx33, align 4, !dbg !12190
  br label %cond.end, !dbg !12193

cond.false:                                       ; preds = %get_vlc2.exit
  br label %cond.end, !dbg !12194

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %127, %cond.true ], [ 0, %cond.false ], !dbg !12196
  store i32 %cond, i32* %pred, align 4, !dbg !12198
  %128 = load i32, i32* %pred, align 4, !dbg !12199
  %129 = load i32, i32* %delta, align 4, !dbg !12200
  %add = add nsw i32 %128, %129, !dbg !12201
  %and = and i32 %add, 31, !dbg !12202
  %130 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12203
  %loc_code34 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %130, i32 0, i32 2, !dbg !12204
  %arrayidx35 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code34, i64 0, i64 0, !dbg !12203
  store i32 %and, i32* %arrayidx35, align 4, !dbg !12205
  store i32 1, i32* %i, align 4, !dbg !12206
  br label %for.cond36, !dbg !12207

for.cond36:                                       ; preds = %for.inc98, %cond.end
  %131 = load i32, i32* %i, align 4, !dbg !12208
  %132 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12210
  %num_points37 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %132, i32 0, i32 0, !dbg !12211
  %133 = load i32, i32* %num_points37, align 4, !dbg !12211
  %cmp38 = icmp slt i32 %131, %133, !dbg !12212
  br i1 %cmp38, label %for.body39, label %for.end100, !dbg !12213

for.body39:                                       ; preds = %for.cond36
  %134 = load i32, i32* %i, align 4, !dbg !12214
  %135 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref, align 8, !dbg !12215
  %num_points40 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %135, i32 0, i32 0, !dbg !12216
  %136 = load i32, i32* %num_points40, align 4, !dbg !12216
  %cmp41 = icmp sge i32 %134, %136, !dbg !12217
  %conv = zext i1 %cmp41 to i32, !dbg !12217
  store i32 %conv, i32* %more_than_ref, align 4, !dbg !12218
  %137 = load i32, i32* %i, align 4, !dbg !12219
  %idxprom42 = sext i32 %137 to i64, !dbg !12220
  %138 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12220
  %lev_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %138, i32 0, i32 1, !dbg !12221
  %arrayidx43 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code, i64 0, i64 %idxprom42, !dbg !12220
  %139 = load i32, i32* %arrayidx43, align 4, !dbg !12220
  %140 = load i32, i32* %i, align 4, !dbg !12222
  %sub = sub nsw i32 %140, 1, !dbg !12223
  %idxprom44 = sext i32 %sub to i64, !dbg !12224
  %141 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12224
  %lev_code45 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %141, i32 0, i32 1, !dbg !12225
  %arrayidx46 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code45, i64 0, i64 %idxprom44, !dbg !12224
  %142 = load i32, i32* %arrayidx46, align 4, !dbg !12224
  %cmp47 = icmp sgt i32 %139, %142, !dbg !12226
  br i1 %cmp47, label %if.then49, label %if.else73, !dbg !12227

if.then49:                                        ; preds = %for.body39
  %143 = load i32, i32* %more_than_ref, align 4, !dbg !12228
  %tobool50 = icmp ne i32 %143, 0, !dbg !12228
  br i1 %tobool50, label %if.then51, label %if.else, !dbg !12229

if.then51:                                        ; preds = %if.then49
  %144 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12230
  %145 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 9, i32 1), align 8, !dbg !12231
  %146 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 9, i32 0), align 8, !dbg !12232
  store %struct.GetBitContext* %144, %struct.GetBitContext** %s.addr.i391, align 8, !dbg !12233
  store [2 x i16]* %145, [2 x i16]** %table.addr.i392, align 8, !dbg !12233
  store i32 %146, i32* %bits.addr.i393, align 4, !dbg !12233
  store i32 1, i32* %max_depth.addr.i394, align 4, !dbg !12233
  %147 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i391, align 8, !dbg !12234
  %index.i402 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %147, i32 0, i32 2, !dbg !12235
  %148 = load i32, i32* %index.i402, align 8, !dbg !12235
  store i32 %148, i32* %re_index.i396, align 4, !dbg !11856
  %149 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i391, align 8, !dbg !12236
  %size_in_bits_plus8.i403 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %149, i32 0, i32 4, !dbg !12237
  %150 = load i32, i32* %size_in_bits_plus8.i403, align 8, !dbg !12237
  store i32 %150, i32* %re_size_plus8.i398, align 4, !dbg !11858
  %151 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i391, align 8, !dbg !12238
  %buffer.i404 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %151, i32 0, i32 0, !dbg !12239
  %152 = load i8*, i8** %buffer.i404, align 8, !dbg !12239
  %153 = load i32, i32* %re_index.i396, align 4, !dbg !12240
  %shr.i405 = lshr i32 %153, 3, !dbg !12241
  %idx.ext.i406 = zext i32 %shr.i405 to i64, !dbg !12242
  %add.ptr.i407 = getelementptr inbounds i8, i8* %152, i64 %idx.ext.i406, !dbg !12242
  %154 = bitcast i8* %add.ptr.i407 to %union.unaligned_32*, !dbg !12243
  %l.i408 = bitcast %union.unaligned_32* %154 to i32*, !dbg !12243
  %155 = load i32, i32* %l.i408, align 1, !dbg !12243
  store i32 %155, i32* %x.addr.i.i390, align 4, !dbg !12244
  %156 = load i32, i32* %x.addr.i.i390, align 4, !dbg !12245
  %shl.i.i409 = shl i32 %156, 8, !dbg !12246
  %and.i.i410 = and i32 %shl.i.i409, 65280, !dbg !12247
  %157 = load i32, i32* %x.addr.i.i390, align 4, !dbg !12248
  %shr.i.i411 = lshr i32 %157, 8, !dbg !12249
  %and1.i.i412 = and i32 %shr.i.i411, 255, !dbg !12250
  %or.i.i413 = or i32 %and.i.i410, %and1.i.i412, !dbg !12251
  %shl2.i.i414 = shl i32 %or.i.i413, 16, !dbg !12252
  %158 = load i32, i32* %x.addr.i.i390, align 4, !dbg !12253
  %shr3.i.i415 = lshr i32 %158, 16, !dbg !12254
  %shl4.i.i416 = shl i32 %shr3.i.i415, 8, !dbg !12255
  %and5.i.i417 = and i32 %shl4.i.i416, 65280, !dbg !12256
  %159 = load i32, i32* %x.addr.i.i390, align 4, !dbg !12257
  %shr6.i.i418 = lshr i32 %159, 16, !dbg !12258
  %shr7.i.i419 = lshr i32 %shr6.i.i418, 8, !dbg !12259
  %and8.i.i420 = and i32 %shr7.i.i419, 255, !dbg !12260
  %or9.i.i421 = or i32 %and5.i.i417, %and8.i.i420, !dbg !12261
  %or10.i.i422 = or i32 %shl2.i.i414, %or9.i.i421, !dbg !12262
  %160 = load i32, i32* %re_index.i396, align 4, !dbg !12263
  %and.i423 = and i32 %160, 7, !dbg !12264
  %shl.i424 = shl i32 %or10.i.i422, %and.i423, !dbg !12265
  store i32 %shl.i424, i32* %re_cache.i397, align 4, !dbg !12266
  %161 = load i32, i32* %re_cache.i397, align 4, !dbg !12267
  %162 = load i32, i32* %bits.addr.i393, align 4, !dbg !12268
  %conv.i425 = trunc i32 %162 to i8, !dbg !12268
  %call2.i426 = call i32 @NEG_USR32(i32 %161, i8 signext %conv.i425) #9, !dbg !12269
  store i32 %call2.i426, i32* %index1.i401, align 4, !dbg !12270
  %163 = load i32, i32* %index1.i401, align 4, !dbg !12271
  %idxprom.i427 = zext i32 %163 to i64, !dbg !12272
  %164 = load [2 x i16]*, [2 x i16]** %table.addr.i392, align 8, !dbg !12272
  %arrayidx.i428 = getelementptr inbounds [2 x i16], [2 x i16]* %164, i64 %idxprom.i427, !dbg !12272
  %arrayidx3.i429 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i428, i64 0, i64 0, !dbg !12272
  %165 = load i16, i16* %arrayidx3.i429, align 2, !dbg !12272
  %conv4.i430 = sext i16 %165 to i32, !dbg !12272
  store i32 %conv4.i430, i32* %code.i395, align 4, !dbg !12273
  %166 = load i32, i32* %index1.i401, align 4, !dbg !12274
  %idxprom5.i431 = zext i32 %166 to i64, !dbg !12275
  %167 = load [2 x i16]*, [2 x i16]** %table.addr.i392, align 8, !dbg !12275
  %arrayidx6.i432 = getelementptr inbounds [2 x i16], [2 x i16]* %167, i64 %idxprom5.i431, !dbg !12275
  %arrayidx7.i433 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i432, i64 0, i64 1, !dbg !12275
  %168 = load i16, i16* %arrayidx7.i433, align 2, !dbg !12275
  %conv8.i434 = sext i16 %168 to i32, !dbg !12275
  store i32 %conv8.i434, i32* %n.i399, align 4, !dbg !12276
  %169 = load i32, i32* %max_depth.addr.i394, align 4, !dbg !12277
  %cmp.i435 = icmp sgt i32 %169, 1, !dbg !12278
  br i1 %cmp.i435, label %land.lhs.true.i437, label %if.end68.i524, !dbg !12279

land.lhs.true.i437:                               ; preds = %if.then51
  %170 = load i32, i32* %n.i399, align 4, !dbg !12280
  %cmp10.i436 = icmp slt i32 %170, 0, !dbg !12281
  br i1 %cmp10.i436, label %if.then.i440, label %if.end68.i524, !dbg !12282

if.then.i440:                                     ; preds = %land.lhs.true.i437
  %171 = load i32, i32* %re_size_plus8.i398, align 4, !dbg !12283
  %172 = load i32, i32* %re_index.i396, align 4, !dbg !12284
  %173 = load i32, i32* %bits.addr.i393, align 4, !dbg !12285
  %add.i438 = add i32 %172, %173, !dbg !12286
  %cmp12.i439 = icmp ugt i32 %171, %add.i438, !dbg !12287
  br i1 %cmp12.i439, label %cond.true.i442, label %cond.false.i443, !dbg !12288

cond.true.i442:                                   ; preds = %if.then.i440
  %174 = load i32, i32* %re_index.i396, align 4, !dbg !12289
  %175 = load i32, i32* %bits.addr.i393, align 4, !dbg !12290
  %add14.i441 = add i32 %174, %175, !dbg !12291
  br label %cond.end.i479, !dbg !12292

cond.false.i443:                                  ; preds = %if.then.i440
  %176 = load i32, i32* %re_size_plus8.i398, align 4, !dbg !12293
  br label %cond.end.i479, !dbg !12294

cond.end.i479:                                    ; preds = %cond.false.i443, %cond.true.i442
  %cond.i444 = phi i32 [ %add14.i441, %cond.true.i442 ], [ %176, %cond.false.i443 ], !dbg !12295
  store i32 %cond.i444, i32* %re_index.i396, align 4, !dbg !12296
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i391, align 8, !dbg !12297
  %buffer15.i445 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %177, i32 0, i32 0, !dbg !12298
  %178 = load i8*, i8** %buffer15.i445, align 8, !dbg !12298
  %179 = load i32, i32* %re_index.i396, align 4, !dbg !12299
  %shr16.i446 = lshr i32 %179, 3, !dbg !12300
  %idx.ext17.i447 = zext i32 %shr16.i446 to i64, !dbg !12301
  %add.ptr18.i448 = getelementptr inbounds i8, i8* %178, i64 %idx.ext17.i447, !dbg !12301
  %180 = bitcast i8* %add.ptr18.i448 to %union.unaligned_32*, !dbg !12302
  %l19.i449 = bitcast %union.unaligned_32* %180 to i32*, !dbg !12302
  %181 = load i32, i32* %l19.i449, align 1, !dbg !12302
  store i32 %181, i32* %x.addr.i81.i389, align 4, !dbg !12303
  %182 = load i32, i32* %x.addr.i81.i389, align 4, !dbg !12304
  %shl.i82.i450 = shl i32 %182, 8, !dbg !12305
  %and.i83.i451 = and i32 %shl.i82.i450, 65280, !dbg !12306
  %183 = load i32, i32* %x.addr.i81.i389, align 4, !dbg !12307
  %shr.i84.i452 = lshr i32 %183, 8, !dbg !12308
  %and1.i85.i453 = and i32 %shr.i84.i452, 255, !dbg !12309
  %or.i86.i454 = or i32 %and.i83.i451, %and1.i85.i453, !dbg !12310
  %shl2.i87.i455 = shl i32 %or.i86.i454, 16, !dbg !12311
  %184 = load i32, i32* %x.addr.i81.i389, align 4, !dbg !12312
  %shr3.i88.i456 = lshr i32 %184, 16, !dbg !12313
  %shl4.i89.i457 = shl i32 %shr3.i88.i456, 8, !dbg !12314
  %and5.i90.i458 = and i32 %shl4.i89.i457, 65280, !dbg !12315
  %185 = load i32, i32* %x.addr.i81.i389, align 4, !dbg !12316
  %shr6.i91.i459 = lshr i32 %185, 16, !dbg !12317
  %shr7.i92.i460 = lshr i32 %shr6.i91.i459, 8, !dbg !12318
  %and8.i93.i461 = and i32 %shr7.i92.i460, 255, !dbg !12319
  %or9.i94.i462 = or i32 %and5.i90.i458, %and8.i93.i461, !dbg !12320
  %or10.i95.i463 = or i32 %shl2.i87.i455, %or9.i94.i462, !dbg !12321
  %186 = load i32, i32* %re_index.i396, align 4, !dbg !12322
  %and21.i464 = and i32 %186, 7, !dbg !12323
  %shl22.i465 = shl i32 %or10.i95.i463, %and21.i464, !dbg !12324
  store i32 %shl22.i465, i32* %re_cache.i397, align 4, !dbg !12325
  %187 = load i32, i32* %n.i399, align 4, !dbg !12326
  %sub.i466 = sub nsw i32 0, %187, !dbg !12327
  store i32 %sub.i466, i32* %nb_bits.i400, align 4, !dbg !12328
  %188 = load i32, i32* %re_cache.i397, align 4, !dbg !12329
  %189 = load i32, i32* %nb_bits.i400, align 4, !dbg !12330
  %conv23.i467 = trunc i32 %189 to i8, !dbg !12330
  %call24.i468 = call i32 @NEG_USR32(i32 %188, i8 signext %conv23.i467) #9, !dbg !12331
  %190 = load i32, i32* %code.i395, align 4, !dbg !12332
  %add25.i469 = add i32 %call24.i468, %190, !dbg !12333
  store i32 %add25.i469, i32* %index1.i401, align 4, !dbg !12334
  %191 = load i32, i32* %index1.i401, align 4, !dbg !12335
  %idxprom26.i470 = zext i32 %191 to i64, !dbg !12336
  %192 = load [2 x i16]*, [2 x i16]** %table.addr.i392, align 8, !dbg !12336
  %arrayidx27.i471 = getelementptr inbounds [2 x i16], [2 x i16]* %192, i64 %idxprom26.i470, !dbg !12336
  %arrayidx28.i472 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i471, i64 0, i64 0, !dbg !12336
  %193 = load i16, i16* %arrayidx28.i472, align 2, !dbg !12336
  %conv29.i473 = sext i16 %193 to i32, !dbg !12336
  store i32 %conv29.i473, i32* %code.i395, align 4, !dbg !12337
  %194 = load i32, i32* %index1.i401, align 4, !dbg !12338
  %idxprom30.i474 = zext i32 %194 to i64, !dbg !12339
  %195 = load [2 x i16]*, [2 x i16]** %table.addr.i392, align 8, !dbg !12339
  %arrayidx31.i475 = getelementptr inbounds [2 x i16], [2 x i16]* %195, i64 %idxprom30.i474, !dbg !12339
  %arrayidx32.i476 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i475, i64 0, i64 1, !dbg !12339
  %196 = load i16, i16* %arrayidx32.i476, align 2, !dbg !12339
  %conv33.i477 = sext i16 %196 to i32, !dbg !12339
  store i32 %conv33.i477, i32* %n.i399, align 4, !dbg !12340
  %197 = load i32, i32* %max_depth.addr.i394, align 4, !dbg !12341
  %cmp34.i478 = icmp sgt i32 %197, 2, !dbg !12342
  br i1 %cmp34.i478, label %land.lhs.true36.i481, label %if.end.i523, !dbg !12343

land.lhs.true36.i481:                             ; preds = %cond.end.i479
  %198 = load i32, i32* %n.i399, align 4, !dbg !12344
  %cmp37.i480 = icmp slt i32 %198, 0, !dbg !12345
  br i1 %cmp37.i480, label %if.then39.i484, label %if.end.i523, !dbg !12346

if.then39.i484:                                   ; preds = %land.lhs.true36.i481
  %199 = load i32, i32* %re_size_plus8.i398, align 4, !dbg !12347
  %200 = load i32, i32* %re_index.i396, align 4, !dbg !12348
  %201 = load i32, i32* %nb_bits.i400, align 4, !dbg !12349
  %add40.i482 = add i32 %200, %201, !dbg !12350
  %cmp41.i483 = icmp ugt i32 %199, %add40.i482, !dbg !12351
  br i1 %cmp41.i483, label %cond.true43.i486, label %cond.false45.i487, !dbg !12352

cond.true43.i486:                                 ; preds = %if.then39.i484
  %202 = load i32, i32* %re_index.i396, align 4, !dbg !12353
  %203 = load i32, i32* %nb_bits.i400, align 4, !dbg !12354
  %add44.i485 = add i32 %202, %203, !dbg !12355
  br label %cond.end46.i522, !dbg !12356

cond.false45.i487:                                ; preds = %if.then39.i484
  %204 = load i32, i32* %re_size_plus8.i398, align 4, !dbg !12357
  br label %cond.end46.i522, !dbg !12358

cond.end46.i522:                                  ; preds = %cond.false45.i487, %cond.true43.i486
  %cond47.i488 = phi i32 [ %add44.i485, %cond.true43.i486 ], [ %204, %cond.false45.i487 ], !dbg !12359
  store i32 %cond47.i488, i32* %re_index.i396, align 4, !dbg !12360
  %205 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i391, align 8, !dbg !12361
  %buffer48.i489 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %205, i32 0, i32 0, !dbg !12362
  %206 = load i8*, i8** %buffer48.i489, align 8, !dbg !12362
  %207 = load i32, i32* %re_index.i396, align 4, !dbg !12363
  %shr49.i490 = lshr i32 %207, 3, !dbg !12364
  %idx.ext50.i491 = zext i32 %shr49.i490 to i64, !dbg !12365
  %add.ptr51.i492 = getelementptr inbounds i8, i8* %206, i64 %idx.ext50.i491, !dbg !12365
  %208 = bitcast i8* %add.ptr51.i492 to %union.unaligned_32*, !dbg !12366
  %l52.i493 = bitcast %union.unaligned_32* %208 to i32*, !dbg !12366
  %209 = load i32, i32* %l52.i493, align 1, !dbg !12366
  store i32 %209, i32* %x.addr.i96.i388, align 4, !dbg !12367
  %210 = load i32, i32* %x.addr.i96.i388, align 4, !dbg !12368
  %shl.i97.i494 = shl i32 %210, 8, !dbg !12369
  %and.i98.i495 = and i32 %shl.i97.i494, 65280, !dbg !12370
  %211 = load i32, i32* %x.addr.i96.i388, align 4, !dbg !12371
  %shr.i99.i496 = lshr i32 %211, 8, !dbg !12372
  %and1.i100.i497 = and i32 %shr.i99.i496, 255, !dbg !12373
  %or.i101.i498 = or i32 %and.i98.i495, %and1.i100.i497, !dbg !12374
  %shl2.i102.i499 = shl i32 %or.i101.i498, 16, !dbg !12375
  %212 = load i32, i32* %x.addr.i96.i388, align 4, !dbg !12376
  %shr3.i103.i500 = lshr i32 %212, 16, !dbg !12377
  %shl4.i104.i501 = shl i32 %shr3.i103.i500, 8, !dbg !12378
  %and5.i105.i502 = and i32 %shl4.i104.i501, 65280, !dbg !12379
  %213 = load i32, i32* %x.addr.i96.i388, align 4, !dbg !12380
  %shr6.i106.i503 = lshr i32 %213, 16, !dbg !12381
  %shr7.i107.i504 = lshr i32 %shr6.i106.i503, 8, !dbg !12382
  %and8.i108.i505 = and i32 %shr7.i107.i504, 255, !dbg !12383
  %or9.i109.i506 = or i32 %and5.i105.i502, %and8.i108.i505, !dbg !12384
  %or10.i110.i507 = or i32 %shl2.i102.i499, %or9.i109.i506, !dbg !12385
  %214 = load i32, i32* %re_index.i396, align 4, !dbg !12386
  %and54.i508 = and i32 %214, 7, !dbg !12387
  %shl55.i509 = shl i32 %or10.i110.i507, %and54.i508, !dbg !12388
  store i32 %shl55.i509, i32* %re_cache.i397, align 4, !dbg !12389
  %215 = load i32, i32* %n.i399, align 4, !dbg !12390
  %sub56.i510 = sub nsw i32 0, %215, !dbg !12391
  store i32 %sub56.i510, i32* %nb_bits.i400, align 4, !dbg !12392
  %216 = load i32, i32* %re_cache.i397, align 4, !dbg !12393
  %217 = load i32, i32* %nb_bits.i400, align 4, !dbg !12394
  %conv57.i511 = trunc i32 %217 to i8, !dbg !12394
  %call58.i512 = call i32 @NEG_USR32(i32 %216, i8 signext %conv57.i511) #9, !dbg !12395
  %218 = load i32, i32* %code.i395, align 4, !dbg !12396
  %add59.i513 = add i32 %call58.i512, %218, !dbg !12397
  store i32 %add59.i513, i32* %index1.i401, align 4, !dbg !12398
  %219 = load i32, i32* %index1.i401, align 4, !dbg !12399
  %idxprom60.i514 = zext i32 %219 to i64, !dbg !12400
  %220 = load [2 x i16]*, [2 x i16]** %table.addr.i392, align 8, !dbg !12400
  %arrayidx61.i515 = getelementptr inbounds [2 x i16], [2 x i16]* %220, i64 %idxprom60.i514, !dbg !12400
  %arrayidx62.i516 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i515, i64 0, i64 0, !dbg !12400
  %221 = load i16, i16* %arrayidx62.i516, align 2, !dbg !12400
  %conv63.i517 = sext i16 %221 to i32, !dbg !12400
  store i32 %conv63.i517, i32* %code.i395, align 4, !dbg !12401
  %222 = load i32, i32* %index1.i401, align 4, !dbg !12402
  %idxprom64.i518 = zext i32 %222 to i64, !dbg !12403
  %223 = load [2 x i16]*, [2 x i16]** %table.addr.i392, align 8, !dbg !12403
  %arrayidx65.i519 = getelementptr inbounds [2 x i16], [2 x i16]* %223, i64 %idxprom64.i518, !dbg !12403
  %arrayidx66.i520 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i519, i64 0, i64 1, !dbg !12403
  %224 = load i16, i16* %arrayidx66.i520, align 2, !dbg !12403
  %conv67.i521 = sext i16 %224 to i32, !dbg !12403
  store i32 %conv67.i521, i32* %n.i399, align 4, !dbg !12404
  br label %if.end.i523, !dbg !12405

if.end.i523:                                      ; preds = %cond.end46.i522, %land.lhs.true36.i481, %cond.end.i479
  br label %if.end68.i524, !dbg !12406

if.end68.i524:                                    ; preds = %if.end.i523, %land.lhs.true.i437, %if.then51
  %225 = load i32, i32* %n.i399, align 4, !dbg !12407
  %226 = load i32, i32* %re_cache.i397, align 4, !dbg !12408
  %shl70.i525 = shl i32 %226, %225, !dbg !12408
  store i32 %shl70.i525, i32* %re_cache.i397, align 4, !dbg !12408
  %227 = load i32, i32* %re_size_plus8.i398, align 4, !dbg !12409
  %228 = load i32, i32* %re_index.i396, align 4, !dbg !12410
  %229 = load i32, i32* %n.i399, align 4, !dbg !12411
  %add71.i526 = add i32 %228, %229, !dbg !12412
  %cmp72.i527 = icmp ugt i32 %227, %add71.i526, !dbg !12413
  br i1 %cmp72.i527, label %cond.true74.i529, label %cond.false76.i530, !dbg !12414

cond.true74.i529:                                 ; preds = %if.end68.i524
  %230 = load i32, i32* %re_index.i396, align 4, !dbg !12415
  %231 = load i32, i32* %n.i399, align 4, !dbg !12416
  %add75.i528 = add i32 %230, %231, !dbg !12417
  br label %get_vlc2.exit533, !dbg !12418

cond.false76.i530:                                ; preds = %if.end68.i524
  %232 = load i32, i32* %re_size_plus8.i398, align 4, !dbg !12419
  br label %get_vlc2.exit533, !dbg !12420

get_vlc2.exit533:                                 ; preds = %cond.true74.i529, %cond.false76.i530
  %cond78.i531 = phi i32 [ %add75.i528, %cond.true74.i529 ], [ %232, %cond.false76.i530 ], !dbg !12421
  store i32 %cond78.i531, i32* %re_index.i396, align 4, !dbg !12422
  %233 = load i32, i32* %re_index.i396, align 4, !dbg !12423
  %234 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i391, align 8, !dbg !12424
  %index80.i532 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %234, i32 0, i32 2, !dbg !12425
  store i32 %233, i32* %index80.i532, align 8, !dbg !12426
  %235 = load i32, i32* %code.i395, align 4, !dbg !12427
  store i32 %235, i32* %delta, align 4, !dbg !12428
  %236 = load i32, i32* %i, align 4, !dbg !12429
  %sub53 = sub nsw i32 %236, 1, !dbg !12430
  %idxprom54 = sext i32 %sub53 to i64, !dbg !12431
  %237 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12431
  %loc_code55 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %237, i32 0, i32 2, !dbg !12432
  %arrayidx56 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code55, i64 0, i64 %idxprom54, !dbg !12431
  %238 = load i32, i32* %arrayidx56, align 4, !dbg !12431
  %239 = load i32, i32* %delta, align 4, !dbg !12433
  %add57 = add nsw i32 %238, %239, !dbg !12434
  %240 = load i32, i32* %i, align 4, !dbg !12435
  %idxprom58 = sext i32 %240 to i64, !dbg !12436
  %241 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12436
  %loc_code59 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %241, i32 0, i32 2, !dbg !12437
  %arrayidx60 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code59, i64 0, i64 %idxprom58, !dbg !12436
  store i32 %add57, i32* %arrayidx60, align 4, !dbg !12438
  br label %if.end72, !dbg !12439

if.else:                                          ; preds = %if.then49
  %242 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12440
  %call61 = call i32 @get_bits1(%struct.GetBitContext* %242), !dbg !12443
  %tobool62 = icmp ne i32 %call61, 0, !dbg !12443
  br i1 %tobool62, label %if.then63, label %if.else64, !dbg !12444

if.then63:                                        ; preds = %if.else
  %243 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12445
  %244 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !12446
  %245 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12447
  %246 = load i32, i32* %i, align 4, !dbg !12448
  call void @gainc_loc_mode0(%struct.GetBitContext* %243, %struct.Atrac3pChanUnitCtx* %244, %struct.AtracGainInfo* %245, i32 %246), !dbg !12449
  br label %if.end71, !dbg !12449

if.else64:                                        ; preds = %if.else
  %247 = load i32, i32* %i, align 4, !dbg !12450
  %idxprom65 = sext i32 %247 to i64, !dbg !12451
  %248 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref, align 8, !dbg !12451
  %loc_code66 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %248, i32 0, i32 2, !dbg !12452
  %arrayidx67 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code66, i64 0, i64 %idxprom65, !dbg !12451
  %249 = load i32, i32* %arrayidx67, align 4, !dbg !12451
  %250 = load i32, i32* %i, align 4, !dbg !12453
  %idxprom68 = sext i32 %250 to i64, !dbg !12454
  %251 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12454
  %loc_code69 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %251, i32 0, i32 2, !dbg !12455
  %arrayidx70 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code69, i64 0, i64 %idxprom68, !dbg !12454
  store i32 %249, i32* %arrayidx70, align 4, !dbg !12456
  br label %if.end71

if.end71:                                         ; preds = %if.else64, %if.then63
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %get_vlc2.exit533
  br label %if.end97, !dbg !12457

if.else73:                                        ; preds = %for.body39
  %252 = load i32, i32* %more_than_ref, align 4, !dbg !12458
  %tobool74 = icmp ne i32 %252, 0, !dbg !12458
  %cond75 = select i1 %tobool74, %struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 7), %struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 10), !dbg !12458
  store %struct.VLC* %cond75, %struct.VLC** %tab, align 8, !dbg !12459
  %253 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12460
  %254 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !12461
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %254, i32 0, i32 1, !dbg !12462
  %255 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !12462
  %256 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !12463
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %256, i32 0, i32 0, !dbg !12464
  %257 = load i32, i32* %bits, align 8, !dbg !12464
  store %struct.GetBitContext* %253, %struct.GetBitContext** %s.addr.i537, align 8, !dbg !12465
  store [2 x i16]* %255, [2 x i16]** %table.addr.i538, align 8, !dbg !12465
  store i32 %257, i32* %bits.addr.i539, align 4, !dbg !12465
  store i32 1, i32* %max_depth.addr.i540, align 4, !dbg !12465
  %258 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i537, align 8, !dbg !12466
  %index.i548 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %258, i32 0, i32 2, !dbg !12467
  %259 = load i32, i32* %index.i548, align 8, !dbg !12467
  store i32 %259, i32* %re_index.i542, align 4, !dbg !11835
  %260 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i537, align 8, !dbg !12468
  %size_in_bits_plus8.i549 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %260, i32 0, i32 4, !dbg !12469
  %261 = load i32, i32* %size_in_bits_plus8.i549, align 8, !dbg !12469
  store i32 %261, i32* %re_size_plus8.i544, align 4, !dbg !11837
  %262 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i537, align 8, !dbg !12470
  %buffer.i550 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %262, i32 0, i32 0, !dbg !12471
  %263 = load i8*, i8** %buffer.i550, align 8, !dbg !12471
  %264 = load i32, i32* %re_index.i542, align 4, !dbg !12472
  %shr.i551 = lshr i32 %264, 3, !dbg !12473
  %idx.ext.i552 = zext i32 %shr.i551 to i64, !dbg !12474
  %add.ptr.i553 = getelementptr inbounds i8, i8* %263, i64 %idx.ext.i552, !dbg !12474
  %265 = bitcast i8* %add.ptr.i553 to %union.unaligned_32*, !dbg !12475
  %l.i554 = bitcast %union.unaligned_32* %265 to i32*, !dbg !12475
  %266 = load i32, i32* %l.i554, align 1, !dbg !12475
  store i32 %266, i32* %x.addr.i.i536, align 4, !dbg !12476
  %267 = load i32, i32* %x.addr.i.i536, align 4, !dbg !12477
  %shl.i.i555 = shl i32 %267, 8, !dbg !12478
  %and.i.i556 = and i32 %shl.i.i555, 65280, !dbg !12479
  %268 = load i32, i32* %x.addr.i.i536, align 4, !dbg !12480
  %shr.i.i557 = lshr i32 %268, 8, !dbg !12481
  %and1.i.i558 = and i32 %shr.i.i557, 255, !dbg !12482
  %or.i.i559 = or i32 %and.i.i556, %and1.i.i558, !dbg !12483
  %shl2.i.i560 = shl i32 %or.i.i559, 16, !dbg !12484
  %269 = load i32, i32* %x.addr.i.i536, align 4, !dbg !12485
  %shr3.i.i561 = lshr i32 %269, 16, !dbg !12486
  %shl4.i.i562 = shl i32 %shr3.i.i561, 8, !dbg !12487
  %and5.i.i563 = and i32 %shl4.i.i562, 65280, !dbg !12488
  %270 = load i32, i32* %x.addr.i.i536, align 4, !dbg !12489
  %shr6.i.i564 = lshr i32 %270, 16, !dbg !12490
  %shr7.i.i565 = lshr i32 %shr6.i.i564, 8, !dbg !12491
  %and8.i.i566 = and i32 %shr7.i.i565, 255, !dbg !12492
  %or9.i.i567 = or i32 %and5.i.i563, %and8.i.i566, !dbg !12493
  %or10.i.i568 = or i32 %shl2.i.i560, %or9.i.i567, !dbg !12494
  %271 = load i32, i32* %re_index.i542, align 4, !dbg !12495
  %and.i569 = and i32 %271, 7, !dbg !12496
  %shl.i570 = shl i32 %or10.i.i568, %and.i569, !dbg !12497
  store i32 %shl.i570, i32* %re_cache.i543, align 4, !dbg !12498
  %272 = load i32, i32* %re_cache.i543, align 4, !dbg !12499
  %273 = load i32, i32* %bits.addr.i539, align 4, !dbg !12500
  %conv.i571 = trunc i32 %273 to i8, !dbg !12500
  %call2.i572 = call i32 @NEG_USR32(i32 %272, i8 signext %conv.i571) #9, !dbg !12501
  store i32 %call2.i572, i32* %index1.i547, align 4, !dbg !12502
  %274 = load i32, i32* %index1.i547, align 4, !dbg !12503
  %idxprom.i573 = zext i32 %274 to i64, !dbg !12504
  %275 = load [2 x i16]*, [2 x i16]** %table.addr.i538, align 8, !dbg !12504
  %arrayidx.i574 = getelementptr inbounds [2 x i16], [2 x i16]* %275, i64 %idxprom.i573, !dbg !12504
  %arrayidx3.i575 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i574, i64 0, i64 0, !dbg !12504
  %276 = load i16, i16* %arrayidx3.i575, align 2, !dbg !12504
  %conv4.i576 = sext i16 %276 to i32, !dbg !12504
  store i32 %conv4.i576, i32* %code.i541, align 4, !dbg !12505
  %277 = load i32, i32* %index1.i547, align 4, !dbg !12506
  %idxprom5.i577 = zext i32 %277 to i64, !dbg !12507
  %278 = load [2 x i16]*, [2 x i16]** %table.addr.i538, align 8, !dbg !12507
  %arrayidx6.i578 = getelementptr inbounds [2 x i16], [2 x i16]* %278, i64 %idxprom5.i577, !dbg !12507
  %arrayidx7.i579 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i578, i64 0, i64 1, !dbg !12507
  %279 = load i16, i16* %arrayidx7.i579, align 2, !dbg !12507
  %conv8.i580 = sext i16 %279 to i32, !dbg !12507
  store i32 %conv8.i580, i32* %n.i545, align 4, !dbg !12508
  %280 = load i32, i32* %max_depth.addr.i540, align 4, !dbg !12509
  %cmp.i581 = icmp sgt i32 %280, 1, !dbg !12510
  br i1 %cmp.i581, label %land.lhs.true.i583, label %if.end68.i670, !dbg !12511

land.lhs.true.i583:                               ; preds = %if.else73
  %281 = load i32, i32* %n.i545, align 4, !dbg !12512
  %cmp10.i582 = icmp slt i32 %281, 0, !dbg !12513
  br i1 %cmp10.i582, label %if.then.i586, label %if.end68.i670, !dbg !12514

if.then.i586:                                     ; preds = %land.lhs.true.i583
  %282 = load i32, i32* %re_size_plus8.i544, align 4, !dbg !12515
  %283 = load i32, i32* %re_index.i542, align 4, !dbg !12516
  %284 = load i32, i32* %bits.addr.i539, align 4, !dbg !12517
  %add.i584 = add i32 %283, %284, !dbg !12518
  %cmp12.i585 = icmp ugt i32 %282, %add.i584, !dbg !12519
  br i1 %cmp12.i585, label %cond.true.i588, label %cond.false.i589, !dbg !12520

cond.true.i588:                                   ; preds = %if.then.i586
  %285 = load i32, i32* %re_index.i542, align 4, !dbg !12521
  %286 = load i32, i32* %bits.addr.i539, align 4, !dbg !12522
  %add14.i587 = add i32 %285, %286, !dbg !12523
  br label %cond.end.i625, !dbg !12524

cond.false.i589:                                  ; preds = %if.then.i586
  %287 = load i32, i32* %re_size_plus8.i544, align 4, !dbg !12525
  br label %cond.end.i625, !dbg !12526

cond.end.i625:                                    ; preds = %cond.false.i589, %cond.true.i588
  %cond.i590 = phi i32 [ %add14.i587, %cond.true.i588 ], [ %287, %cond.false.i589 ], !dbg !12527
  store i32 %cond.i590, i32* %re_index.i542, align 4, !dbg !12528
  %288 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i537, align 8, !dbg !12529
  %buffer15.i591 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %288, i32 0, i32 0, !dbg !12530
  %289 = load i8*, i8** %buffer15.i591, align 8, !dbg !12530
  %290 = load i32, i32* %re_index.i542, align 4, !dbg !12531
  %shr16.i592 = lshr i32 %290, 3, !dbg !12532
  %idx.ext17.i593 = zext i32 %shr16.i592 to i64, !dbg !12533
  %add.ptr18.i594 = getelementptr inbounds i8, i8* %289, i64 %idx.ext17.i593, !dbg !12533
  %291 = bitcast i8* %add.ptr18.i594 to %union.unaligned_32*, !dbg !12534
  %l19.i595 = bitcast %union.unaligned_32* %291 to i32*, !dbg !12534
  %292 = load i32, i32* %l19.i595, align 1, !dbg !12534
  store i32 %292, i32* %x.addr.i81.i535, align 4, !dbg !12535
  %293 = load i32, i32* %x.addr.i81.i535, align 4, !dbg !12536
  %shl.i82.i596 = shl i32 %293, 8, !dbg !12537
  %and.i83.i597 = and i32 %shl.i82.i596, 65280, !dbg !12538
  %294 = load i32, i32* %x.addr.i81.i535, align 4, !dbg !12539
  %shr.i84.i598 = lshr i32 %294, 8, !dbg !12540
  %and1.i85.i599 = and i32 %shr.i84.i598, 255, !dbg !12541
  %or.i86.i600 = or i32 %and.i83.i597, %and1.i85.i599, !dbg !12542
  %shl2.i87.i601 = shl i32 %or.i86.i600, 16, !dbg !12543
  %295 = load i32, i32* %x.addr.i81.i535, align 4, !dbg !12544
  %shr3.i88.i602 = lshr i32 %295, 16, !dbg !12545
  %shl4.i89.i603 = shl i32 %shr3.i88.i602, 8, !dbg !12546
  %and5.i90.i604 = and i32 %shl4.i89.i603, 65280, !dbg !12547
  %296 = load i32, i32* %x.addr.i81.i535, align 4, !dbg !12548
  %shr6.i91.i605 = lshr i32 %296, 16, !dbg !12549
  %shr7.i92.i606 = lshr i32 %shr6.i91.i605, 8, !dbg !12550
  %and8.i93.i607 = and i32 %shr7.i92.i606, 255, !dbg !12551
  %or9.i94.i608 = or i32 %and5.i90.i604, %and8.i93.i607, !dbg !12552
  %or10.i95.i609 = or i32 %shl2.i87.i601, %or9.i94.i608, !dbg !12553
  %297 = load i32, i32* %re_index.i542, align 4, !dbg !12554
  %and21.i610 = and i32 %297, 7, !dbg !12555
  %shl22.i611 = shl i32 %or10.i95.i609, %and21.i610, !dbg !12556
  store i32 %shl22.i611, i32* %re_cache.i543, align 4, !dbg !12557
  %298 = load i32, i32* %n.i545, align 4, !dbg !12558
  %sub.i612 = sub nsw i32 0, %298, !dbg !12559
  store i32 %sub.i612, i32* %nb_bits.i546, align 4, !dbg !12560
  %299 = load i32, i32* %re_cache.i543, align 4, !dbg !12561
  %300 = load i32, i32* %nb_bits.i546, align 4, !dbg !12562
  %conv23.i613 = trunc i32 %300 to i8, !dbg !12562
  %call24.i614 = call i32 @NEG_USR32(i32 %299, i8 signext %conv23.i613) #9, !dbg !12563
  %301 = load i32, i32* %code.i541, align 4, !dbg !12564
  %add25.i615 = add i32 %call24.i614, %301, !dbg !12565
  store i32 %add25.i615, i32* %index1.i547, align 4, !dbg !12566
  %302 = load i32, i32* %index1.i547, align 4, !dbg !12567
  %idxprom26.i616 = zext i32 %302 to i64, !dbg !12568
  %303 = load [2 x i16]*, [2 x i16]** %table.addr.i538, align 8, !dbg !12568
  %arrayidx27.i617 = getelementptr inbounds [2 x i16], [2 x i16]* %303, i64 %idxprom26.i616, !dbg !12568
  %arrayidx28.i618 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i617, i64 0, i64 0, !dbg !12568
  %304 = load i16, i16* %arrayidx28.i618, align 2, !dbg !12568
  %conv29.i619 = sext i16 %304 to i32, !dbg !12568
  store i32 %conv29.i619, i32* %code.i541, align 4, !dbg !12569
  %305 = load i32, i32* %index1.i547, align 4, !dbg !12570
  %idxprom30.i620 = zext i32 %305 to i64, !dbg !12571
  %306 = load [2 x i16]*, [2 x i16]** %table.addr.i538, align 8, !dbg !12571
  %arrayidx31.i621 = getelementptr inbounds [2 x i16], [2 x i16]* %306, i64 %idxprom30.i620, !dbg !12571
  %arrayidx32.i622 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i621, i64 0, i64 1, !dbg !12571
  %307 = load i16, i16* %arrayidx32.i622, align 2, !dbg !12571
  %conv33.i623 = sext i16 %307 to i32, !dbg !12571
  store i32 %conv33.i623, i32* %n.i545, align 4, !dbg !12572
  %308 = load i32, i32* %max_depth.addr.i540, align 4, !dbg !12573
  %cmp34.i624 = icmp sgt i32 %308, 2, !dbg !12574
  br i1 %cmp34.i624, label %land.lhs.true36.i627, label %if.end.i669, !dbg !12575

land.lhs.true36.i627:                             ; preds = %cond.end.i625
  %309 = load i32, i32* %n.i545, align 4, !dbg !12576
  %cmp37.i626 = icmp slt i32 %309, 0, !dbg !12577
  br i1 %cmp37.i626, label %if.then39.i630, label %if.end.i669, !dbg !12578

if.then39.i630:                                   ; preds = %land.lhs.true36.i627
  %310 = load i32, i32* %re_size_plus8.i544, align 4, !dbg !12579
  %311 = load i32, i32* %re_index.i542, align 4, !dbg !12580
  %312 = load i32, i32* %nb_bits.i546, align 4, !dbg !12581
  %add40.i628 = add i32 %311, %312, !dbg !12582
  %cmp41.i629 = icmp ugt i32 %310, %add40.i628, !dbg !12583
  br i1 %cmp41.i629, label %cond.true43.i632, label %cond.false45.i633, !dbg !12584

cond.true43.i632:                                 ; preds = %if.then39.i630
  %313 = load i32, i32* %re_index.i542, align 4, !dbg !12585
  %314 = load i32, i32* %nb_bits.i546, align 4, !dbg !12586
  %add44.i631 = add i32 %313, %314, !dbg !12587
  br label %cond.end46.i668, !dbg !12588

cond.false45.i633:                                ; preds = %if.then39.i630
  %315 = load i32, i32* %re_size_plus8.i544, align 4, !dbg !12589
  br label %cond.end46.i668, !dbg !12590

cond.end46.i668:                                  ; preds = %cond.false45.i633, %cond.true43.i632
  %cond47.i634 = phi i32 [ %add44.i631, %cond.true43.i632 ], [ %315, %cond.false45.i633 ], !dbg !12591
  store i32 %cond47.i634, i32* %re_index.i542, align 4, !dbg !12592
  %316 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i537, align 8, !dbg !12593
  %buffer48.i635 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %316, i32 0, i32 0, !dbg !12594
  %317 = load i8*, i8** %buffer48.i635, align 8, !dbg !12594
  %318 = load i32, i32* %re_index.i542, align 4, !dbg !12595
  %shr49.i636 = lshr i32 %318, 3, !dbg !12596
  %idx.ext50.i637 = zext i32 %shr49.i636 to i64, !dbg !12597
  %add.ptr51.i638 = getelementptr inbounds i8, i8* %317, i64 %idx.ext50.i637, !dbg !12597
  %319 = bitcast i8* %add.ptr51.i638 to %union.unaligned_32*, !dbg !12598
  %l52.i639 = bitcast %union.unaligned_32* %319 to i32*, !dbg !12598
  %320 = load i32, i32* %l52.i639, align 1, !dbg !12598
  store i32 %320, i32* %x.addr.i96.i534, align 4, !dbg !12599
  %321 = load i32, i32* %x.addr.i96.i534, align 4, !dbg !12600
  %shl.i97.i640 = shl i32 %321, 8, !dbg !12601
  %and.i98.i641 = and i32 %shl.i97.i640, 65280, !dbg !12602
  %322 = load i32, i32* %x.addr.i96.i534, align 4, !dbg !12603
  %shr.i99.i642 = lshr i32 %322, 8, !dbg !12604
  %and1.i100.i643 = and i32 %shr.i99.i642, 255, !dbg !12605
  %or.i101.i644 = or i32 %and.i98.i641, %and1.i100.i643, !dbg !12606
  %shl2.i102.i645 = shl i32 %or.i101.i644, 16, !dbg !12607
  %323 = load i32, i32* %x.addr.i96.i534, align 4, !dbg !12608
  %shr3.i103.i646 = lshr i32 %323, 16, !dbg !12609
  %shl4.i104.i647 = shl i32 %shr3.i103.i646, 8, !dbg !12610
  %and5.i105.i648 = and i32 %shl4.i104.i647, 65280, !dbg !12611
  %324 = load i32, i32* %x.addr.i96.i534, align 4, !dbg !12612
  %shr6.i106.i649 = lshr i32 %324, 16, !dbg !12613
  %shr7.i107.i650 = lshr i32 %shr6.i106.i649, 8, !dbg !12614
  %and8.i108.i651 = and i32 %shr7.i107.i650, 255, !dbg !12615
  %or9.i109.i652 = or i32 %and5.i105.i648, %and8.i108.i651, !dbg !12616
  %or10.i110.i653 = or i32 %shl2.i102.i645, %or9.i109.i652, !dbg !12617
  %325 = load i32, i32* %re_index.i542, align 4, !dbg !12618
  %and54.i654 = and i32 %325, 7, !dbg !12619
  %shl55.i655 = shl i32 %or10.i110.i653, %and54.i654, !dbg !12620
  store i32 %shl55.i655, i32* %re_cache.i543, align 4, !dbg !12621
  %326 = load i32, i32* %n.i545, align 4, !dbg !12622
  %sub56.i656 = sub nsw i32 0, %326, !dbg !12623
  store i32 %sub56.i656, i32* %nb_bits.i546, align 4, !dbg !12624
  %327 = load i32, i32* %re_cache.i543, align 4, !dbg !12625
  %328 = load i32, i32* %nb_bits.i546, align 4, !dbg !12626
  %conv57.i657 = trunc i32 %328 to i8, !dbg !12626
  %call58.i658 = call i32 @NEG_USR32(i32 %327, i8 signext %conv57.i657) #9, !dbg !12627
  %329 = load i32, i32* %code.i541, align 4, !dbg !12628
  %add59.i659 = add i32 %call58.i658, %329, !dbg !12629
  store i32 %add59.i659, i32* %index1.i547, align 4, !dbg !12630
  %330 = load i32, i32* %index1.i547, align 4, !dbg !12631
  %idxprom60.i660 = zext i32 %330 to i64, !dbg !12632
  %331 = load [2 x i16]*, [2 x i16]** %table.addr.i538, align 8, !dbg !12632
  %arrayidx61.i661 = getelementptr inbounds [2 x i16], [2 x i16]* %331, i64 %idxprom60.i660, !dbg !12632
  %arrayidx62.i662 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i661, i64 0, i64 0, !dbg !12632
  %332 = load i16, i16* %arrayidx62.i662, align 2, !dbg !12632
  %conv63.i663 = sext i16 %332 to i32, !dbg !12632
  store i32 %conv63.i663, i32* %code.i541, align 4, !dbg !12633
  %333 = load i32, i32* %index1.i547, align 4, !dbg !12634
  %idxprom64.i664 = zext i32 %333 to i64, !dbg !12635
  %334 = load [2 x i16]*, [2 x i16]** %table.addr.i538, align 8, !dbg !12635
  %arrayidx65.i665 = getelementptr inbounds [2 x i16], [2 x i16]* %334, i64 %idxprom64.i664, !dbg !12635
  %arrayidx66.i666 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i665, i64 0, i64 1, !dbg !12635
  %335 = load i16, i16* %arrayidx66.i666, align 2, !dbg !12635
  %conv67.i667 = sext i16 %335 to i32, !dbg !12635
  store i32 %conv67.i667, i32* %n.i545, align 4, !dbg !12636
  br label %if.end.i669, !dbg !12637

if.end.i669:                                      ; preds = %cond.end46.i668, %land.lhs.true36.i627, %cond.end.i625
  br label %if.end68.i670, !dbg !12638

if.end68.i670:                                    ; preds = %if.end.i669, %land.lhs.true.i583, %if.else73
  %336 = load i32, i32* %n.i545, align 4, !dbg !12639
  %337 = load i32, i32* %re_cache.i543, align 4, !dbg !12640
  %shl70.i671 = shl i32 %337, %336, !dbg !12640
  store i32 %shl70.i671, i32* %re_cache.i543, align 4, !dbg !12640
  %338 = load i32, i32* %re_size_plus8.i544, align 4, !dbg !12641
  %339 = load i32, i32* %re_index.i542, align 4, !dbg !12642
  %340 = load i32, i32* %n.i545, align 4, !dbg !12643
  %add71.i672 = add i32 %339, %340, !dbg !12644
  %cmp72.i673 = icmp ugt i32 %338, %add71.i672, !dbg !12645
  br i1 %cmp72.i673, label %cond.true74.i675, label %cond.false76.i676, !dbg !12646

cond.true74.i675:                                 ; preds = %if.end68.i670
  %341 = load i32, i32* %re_index.i542, align 4, !dbg !12647
  %342 = load i32, i32* %n.i545, align 4, !dbg !12648
  %add75.i674 = add i32 %341, %342, !dbg !12649
  br label %get_vlc2.exit679, !dbg !12650

cond.false76.i676:                                ; preds = %if.end68.i670
  %343 = load i32, i32* %re_size_plus8.i544, align 4, !dbg !12651
  br label %get_vlc2.exit679, !dbg !12652

get_vlc2.exit679:                                 ; preds = %cond.true74.i675, %cond.false76.i676
  %cond78.i677 = phi i32 [ %add75.i674, %cond.true74.i675 ], [ %343, %cond.false76.i676 ], !dbg !12653
  store i32 %cond78.i677, i32* %re_index.i542, align 4, !dbg !12654
  %344 = load i32, i32* %re_index.i542, align 4, !dbg !12655
  %345 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i537, align 8, !dbg !12656
  %index80.i678 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %345, i32 0, i32 2, !dbg !12657
  store i32 %344, i32* %index80.i678, align 8, !dbg !12658
  %346 = load i32, i32* %code.i541, align 4, !dbg !12659
  store i32 %346, i32* %delta, align 4, !dbg !12660
  %347 = load i32, i32* %more_than_ref, align 4, !dbg !12661
  %tobool77 = icmp ne i32 %347, 0, !dbg !12661
  br i1 %tobool77, label %if.then78, label %if.else87, !dbg !12663

if.then78:                                        ; preds = %get_vlc2.exit679
  %348 = load i32, i32* %i, align 4, !dbg !12664
  %sub79 = sub nsw i32 %348, 1, !dbg !12665
  %idxprom80 = sext i32 %sub79 to i64, !dbg !12666
  %349 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12666
  %loc_code81 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %349, i32 0, i32 2, !dbg !12667
  %arrayidx82 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code81, i64 0, i64 %idxprom80, !dbg !12666
  %350 = load i32, i32* %arrayidx82, align 4, !dbg !12666
  %351 = load i32, i32* %delta, align 4, !dbg !12668
  %add83 = add nsw i32 %350, %351, !dbg !12669
  %352 = load i32, i32* %i, align 4, !dbg !12670
  %idxprom84 = sext i32 %352 to i64, !dbg !12671
  %353 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12671
  %loc_code85 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %353, i32 0, i32 2, !dbg !12672
  %arrayidx86 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code85, i64 0, i64 %idxprom84, !dbg !12671
  store i32 %add83, i32* %arrayidx86, align 4, !dbg !12673
  br label %if.end96, !dbg !12671

if.else87:                                        ; preds = %get_vlc2.exit679
  %354 = load i32, i32* %i, align 4, !dbg !12674
  %idxprom88 = sext i32 %354 to i64, !dbg !12675
  %355 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref, align 8, !dbg !12675
  %loc_code89 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %355, i32 0, i32 2, !dbg !12676
  %arrayidx90 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code89, i64 0, i64 %idxprom88, !dbg !12675
  %356 = load i32, i32* %arrayidx90, align 4, !dbg !12675
  %357 = load i32, i32* %delta, align 4, !dbg !12677
  %add91 = add nsw i32 %356, %357, !dbg !12678
  %and92 = and i32 %add91, 31, !dbg !12679
  %358 = load i32, i32* %i, align 4, !dbg !12680
  %idxprom93 = sext i32 %358 to i64, !dbg !12681
  %359 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12681
  %loc_code94 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %359, i32 0, i32 2, !dbg !12682
  %arrayidx95 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code94, i64 0, i64 %idxprom93, !dbg !12681
  store i32 %and92, i32* %arrayidx95, align 4, !dbg !12683
  br label %if.end96

if.end96:                                         ; preds = %if.else87, %if.then78
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end72
  br label %for.inc98, !dbg !12684

for.inc98:                                        ; preds = %if.end97
  %360 = load i32, i32* %i, align 4, !dbg !12685
  %inc99 = add nsw i32 %360, 1, !dbg !12685
  store i32 %inc99, i32* %i, align 4, !dbg !12685
  br label %for.cond36, !dbg !12687, !llvm.loop !12688

for.end100:                                       ; preds = %for.cond36
  br label %for.inc101, !dbg !12690

for.inc101:                                       ; preds = %for.end100, %if.then23
  %361 = load i32, i32* %sb, align 4, !dbg !12691
  %inc102 = add nsw i32 %361, 1, !dbg !12691
  store i32 %inc102, i32* %sb, align 4, !dbg !12691
  br label %for.cond15, !dbg !12693, !llvm.loop !12694

for.end103:                                       ; preds = %for.cond15
  br label %if.end115, !dbg !12696

if.else104:                                       ; preds = %sw.bb14
  store i32 0, i32* %sb, align 4, !dbg !12697
  br label %for.cond105, !dbg !12699

for.cond105:                                      ; preds = %for.inc112, %if.else104
  %362 = load i32, i32* %sb, align 4, !dbg !12700
  %363 = load i32, i32* %coded_subbands.addr, align 4, !dbg !12703
  %cmp106 = icmp slt i32 %362, %363, !dbg !12704
  br i1 %cmp106, label %for.body108, label %for.end114, !dbg !12705

for.body108:                                      ; preds = %for.cond105
  %364 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12706
  %365 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !12707
  %366 = load i32, i32* %sb, align 4, !dbg !12708
  %idxprom109 = sext i32 %366 to i64, !dbg !12709
  %367 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12709
  %gain_data110 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %367, i32 0, i32 14, !dbg !12710
  %368 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data110, align 8, !dbg !12710
  %arrayidx111 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %368, i64 %idxprom109, !dbg !12709
  call void @gainc_loc_mode1(%struct.GetBitContext* %364, %struct.Atrac3pChanUnitCtx* %365, %struct.AtracGainInfo* %arrayidx111), !dbg !12711
  br label %for.inc112, !dbg !12711

for.inc112:                                       ; preds = %for.body108
  %369 = load i32, i32* %sb, align 4, !dbg !12712
  %inc113 = add nsw i32 %369, 1, !dbg !12712
  store i32 %inc113, i32* %sb, align 4, !dbg !12712
  br label %for.cond105, !dbg !12714, !llvm.loop !12715

for.end114:                                       ; preds = %for.cond105
  br label %if.end115

if.end115:                                        ; preds = %for.end114, %for.end103
  br label %sw.epilog, !dbg !12717

sw.bb116:                                         ; preds = %entry
  %370 = load i32, i32* %ch_num.addr, align 4, !dbg !12718
  %tobool117 = icmp ne i32 %370, 0, !dbg !12718
  br i1 %tobool117, label %if.then118, label %if.else166, !dbg !12719

if.then118:                                       ; preds = %sw.bb116
  store i32 0, i32* %sb, align 4, !dbg !12720
  br label %for.cond119, !dbg !12723

for.cond119:                                      ; preds = %for.inc163, %if.then118
  %371 = load i32, i32* %sb, align 4, !dbg !12724
  %372 = load i32, i32* %coded_subbands.addr, align 4, !dbg !12727
  %cmp120 = icmp slt i32 %371, %372, !dbg !12728
  br i1 %cmp120, label %for.body122, label %for.end165, !dbg !12729

for.body122:                                      ; preds = %for.cond119
  %373 = load i32, i32* %sb, align 4, !dbg !12730
  %idxprom123 = sext i32 %373 to i64, !dbg !12733
  %374 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12733
  %gain_data124 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %374, i32 0, i32 14, !dbg !12734
  %375 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data124, align 8, !dbg !12734
  %arrayidx125 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %375, i64 %idxprom123, !dbg !12733
  %num_points126 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx125, i32 0, i32 0, !dbg !12735
  %376 = load i32, i32* %num_points126, align 4, !dbg !12735
  %cmp127 = icmp sle i32 %376, 0, !dbg !12736
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !12737

if.then129:                                       ; preds = %for.body122
  br label %for.inc163, !dbg !12738

if.end130:                                        ; preds = %for.body122
  %377 = load i32, i32* %sb, align 4, !dbg !12739
  %idxprom131 = sext i32 %377 to i64, !dbg !12740
  %378 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12740
  %gain_data132 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %378, i32 0, i32 14, !dbg !12741
  %379 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data132, align 8, !dbg !12741
  %arrayidx133 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %379, i64 %idxprom131, !dbg !12740
  store %struct.AtracGainInfo* %arrayidx133, %struct.AtracGainInfo** %dst, align 8, !dbg !12742
  %380 = load i32, i32* %sb, align 4, !dbg !12743
  %idxprom134 = sext i32 %380 to i64, !dbg !12744
  %381 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !12744
  %gain_data135 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %381, i32 0, i32 14, !dbg !12745
  %382 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data135, align 8, !dbg !12745
  %arrayidx136 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %382, i64 %idxprom134, !dbg !12744
  store %struct.AtracGainInfo* %arrayidx136, %struct.AtracGainInfo** %ref, align 8, !dbg !12746
  %383 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12747
  %num_points137 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %383, i32 0, i32 0, !dbg !12749
  %384 = load i32, i32* %num_points137, align 4, !dbg !12749
  %385 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref, align 8, !dbg !12750
  %num_points138 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %385, i32 0, i32 0, !dbg !12751
  %386 = load i32, i32* %num_points138, align 4, !dbg !12751
  %cmp139 = icmp sgt i32 %384, %386, !dbg !12752
  br i1 %cmp139, label %if.then143, label %lor.lhs.false, !dbg !12753

lor.lhs.false:                                    ; preds = %if.end130
  %387 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12754
  %call141 = call i32 @get_bits1(%struct.GetBitContext* %387), !dbg !12756
  %tobool142 = icmp ne i32 %call141, 0, !dbg !12756
  br i1 %tobool142, label %if.then143, label %if.else144, !dbg !12757

if.then143:                                       ; preds = %lor.lhs.false, %if.end130
  %388 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12758
  %389 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !12759
  %390 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12760
  call void @gainc_loc_mode1(%struct.GetBitContext* %388, %struct.Atrac3pChanUnitCtx* %389, %struct.AtracGainInfo* %390), !dbg !12761
  br label %if.end162, !dbg !12761

if.else144:                                       ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !12762
  br label %for.cond145, !dbg !12764

for.cond145:                                      ; preds = %for.inc159, %if.else144
  %391 = load i32, i32* %i, align 4, !dbg !12765
  %392 = load i32, i32* %sb, align 4, !dbg !12768
  %idxprom146 = sext i32 %392 to i64, !dbg !12769
  %393 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12769
  %gain_data147 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %393, i32 0, i32 14, !dbg !12770
  %394 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data147, align 8, !dbg !12770
  %arrayidx148 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %394, i64 %idxprom146, !dbg !12769
  %num_points149 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx148, i32 0, i32 0, !dbg !12771
  %395 = load i32, i32* %num_points149, align 4, !dbg !12771
  %cmp150 = icmp slt i32 %391, %395, !dbg !12772
  br i1 %cmp150, label %for.body152, label %for.end161, !dbg !12773

for.body152:                                      ; preds = %for.cond145
  %396 = load i32, i32* %i, align 4, !dbg !12774
  %idxprom153 = sext i32 %396 to i64, !dbg !12775
  %397 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref, align 8, !dbg !12775
  %loc_code154 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %397, i32 0, i32 2, !dbg !12776
  %arrayidx155 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code154, i64 0, i64 %idxprom153, !dbg !12775
  %398 = load i32, i32* %arrayidx155, align 4, !dbg !12775
  %399 = load i32, i32* %i, align 4, !dbg !12777
  %idxprom156 = sext i32 %399 to i64, !dbg !12778
  %400 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !12778
  %loc_code157 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %400, i32 0, i32 2, !dbg !12779
  %arrayidx158 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code157, i64 0, i64 %idxprom156, !dbg !12778
  store i32 %398, i32* %arrayidx158, align 4, !dbg !12780
  br label %for.inc159, !dbg !12778

for.inc159:                                       ; preds = %for.body152
  %401 = load i32, i32* %i, align 4, !dbg !12781
  %inc160 = add nsw i32 %401, 1, !dbg !12781
  store i32 %inc160, i32* %i, align 4, !dbg !12781
  br label %for.cond145, !dbg !12783, !llvm.loop !12784

for.end161:                                       ; preds = %for.cond145
  br label %if.end162

if.end162:                                        ; preds = %for.end161, %if.then143
  br label %for.inc163, !dbg !12786

for.inc163:                                       ; preds = %if.end162, %if.then129
  %402 = load i32, i32* %sb, align 4, !dbg !12787
  %inc164 = add nsw i32 %402, 1, !dbg !12787
  store i32 %inc164, i32* %sb, align 4, !dbg !12787
  br label %for.cond119, !dbg !12789, !llvm.loop !12790

for.end165:                                       ; preds = %for.cond119
  br label %if.end262, !dbg !12792

if.else166:                                       ; preds = %sw.bb116
  store i32 0, i32* %i, align 4, !dbg !12793
  br label %for.cond167, !dbg !12795

for.cond167:                                      ; preds = %for.inc176, %if.else166
  %403 = load i32, i32* %i, align 4, !dbg !12796
  %404 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12799
  %gain_data168 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %404, i32 0, i32 14, !dbg !12800
  %405 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data168, align 8, !dbg !12800
  %arrayidx169 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %405, i64 0, !dbg !12799
  %num_points170 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx169, i32 0, i32 0, !dbg !12801
  %406 = load i32, i32* %num_points170, align 4, !dbg !12801
  %cmp171 = icmp slt i32 %403, %406, !dbg !12802
  br i1 %cmp171, label %for.body173, label %for.end178, !dbg !12803

for.body173:                                      ; preds = %for.cond167
  %407 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12804
  %408 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !12805
  %409 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12806
  %gain_data174 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %409, i32 0, i32 14, !dbg !12807
  %410 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data174, align 8, !dbg !12807
  %arrayidx175 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %410, i64 0, !dbg !12806
  %411 = load i32, i32* %i, align 4, !dbg !12808
  call void @gainc_loc_mode0(%struct.GetBitContext* %407, %struct.Atrac3pChanUnitCtx* %408, %struct.AtracGainInfo* %arrayidx175, i32 %411), !dbg !12809
  br label %for.inc176, !dbg !12809

for.inc176:                                       ; preds = %for.body173
  %412 = load i32, i32* %i, align 4, !dbg !12810
  %inc177 = add nsw i32 %412, 1, !dbg !12810
  store i32 %inc177, i32* %i, align 4, !dbg !12810
  br label %for.cond167, !dbg !12812, !llvm.loop !12813

for.end178:                                       ; preds = %for.cond167
  store i32 1, i32* %sb, align 4, !dbg !12815
  br label %for.cond179, !dbg !12816

for.cond179:                                      ; preds = %for.inc259, %for.end178
  %413 = load i32, i32* %sb, align 4, !dbg !12817
  %414 = load i32, i32* %coded_subbands.addr, align 4, !dbg !12819
  %cmp180 = icmp slt i32 %413, %414, !dbg !12820
  br i1 %cmp180, label %for.body182, label %for.end261, !dbg !12821

for.body182:                                      ; preds = %for.cond179
  %415 = load i32, i32* %sb, align 4, !dbg !12822
  %idxprom183 = sext i32 %415 to i64, !dbg !12824
  %416 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12824
  %gain_data184 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %416, i32 0, i32 14, !dbg !12825
  %417 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data184, align 8, !dbg !12825
  %arrayidx185 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %417, i64 %idxprom183, !dbg !12824
  %num_points186 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx185, i32 0, i32 0, !dbg !12826
  %418 = load i32, i32* %num_points186, align 4, !dbg !12826
  %cmp187 = icmp sle i32 %418, 0, !dbg !12827
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !12828

if.then189:                                       ; preds = %for.body182
  br label %for.inc259, !dbg !12829

if.end190:                                        ; preds = %for.body182
  %419 = load i32, i32* %sb, align 4, !dbg !12830
  %idxprom191 = sext i32 %419 to i64, !dbg !12831
  %420 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !12831
  %gain_data192 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %420, i32 0, i32 14, !dbg !12832
  %421 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data192, align 8, !dbg !12832
  %arrayidx193 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %421, i64 %idxprom191, !dbg !12831
  store %struct.AtracGainInfo* %arrayidx193, %struct.AtracGainInfo** %dst, align 8, !dbg !12833
  %422 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !12834
  %423 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 6, i32 1), align 8, !dbg !12835
  %424 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 6, i32 0), align 16, !dbg !12836
  store %struct.GetBitContext* %422, %struct.GetBitContext** %s.addr.i683, align 8, !dbg !12837
  store [2 x i16]* %423, [2 x i16]** %table.addr.i684, align 8, !dbg !12837
  store i32 %424, i32* %bits.addr.i685, align 4, !dbg !12837
  store i32 1, i32* %max_depth.addr.i686, align 4, !dbg !12837
  %425 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i683, align 8, !dbg !12838
  %index.i694 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %425, i32 0, i32 2, !dbg !12839
  %426 = load i32, i32* %index.i694, align 8, !dbg !12839
  store i32 %426, i32* %re_index.i688, align 4, !dbg !11807
  %427 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i683, align 8, !dbg !12840
  %size_in_bits_plus8.i695 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %427, i32 0, i32 4, !dbg !12841
  %428 = load i32, i32* %size_in_bits_plus8.i695, align 8, !dbg !12841
  store i32 %428, i32* %re_size_plus8.i690, align 4, !dbg !11809
  %429 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i683, align 8, !dbg !12842
  %buffer.i696 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %429, i32 0, i32 0, !dbg !12843
  %430 = load i8*, i8** %buffer.i696, align 8, !dbg !12843
  %431 = load i32, i32* %re_index.i688, align 4, !dbg !12844
  %shr.i697 = lshr i32 %431, 3, !dbg !12845
  %idx.ext.i698 = zext i32 %shr.i697 to i64, !dbg !12846
  %add.ptr.i699 = getelementptr inbounds i8, i8* %430, i64 %idx.ext.i698, !dbg !12846
  %432 = bitcast i8* %add.ptr.i699 to %union.unaligned_32*, !dbg !12847
  %l.i700 = bitcast %union.unaligned_32* %432 to i32*, !dbg !12847
  %433 = load i32, i32* %l.i700, align 1, !dbg !12847
  store i32 %433, i32* %x.addr.i.i682, align 4, !dbg !12848
  %434 = load i32, i32* %x.addr.i.i682, align 4, !dbg !12849
  %shl.i.i701 = shl i32 %434, 8, !dbg !12850
  %and.i.i702 = and i32 %shl.i.i701, 65280, !dbg !12851
  %435 = load i32, i32* %x.addr.i.i682, align 4, !dbg !12852
  %shr.i.i703 = lshr i32 %435, 8, !dbg !12853
  %and1.i.i704 = and i32 %shr.i.i703, 255, !dbg !12854
  %or.i.i705 = or i32 %and.i.i702, %and1.i.i704, !dbg !12855
  %shl2.i.i706 = shl i32 %or.i.i705, 16, !dbg !12856
  %436 = load i32, i32* %x.addr.i.i682, align 4, !dbg !12857
  %shr3.i.i707 = lshr i32 %436, 16, !dbg !12858
  %shl4.i.i708 = shl i32 %shr3.i.i707, 8, !dbg !12859
  %and5.i.i709 = and i32 %shl4.i.i708, 65280, !dbg !12860
  %437 = load i32, i32* %x.addr.i.i682, align 4, !dbg !12861
  %shr6.i.i710 = lshr i32 %437, 16, !dbg !12862
  %shr7.i.i711 = lshr i32 %shr6.i.i710, 8, !dbg !12863
  %and8.i.i712 = and i32 %shr7.i.i711, 255, !dbg !12864
  %or9.i.i713 = or i32 %and5.i.i709, %and8.i.i712, !dbg !12865
  %or10.i.i714 = or i32 %shl2.i.i706, %or9.i.i713, !dbg !12866
  %438 = load i32, i32* %re_index.i688, align 4, !dbg !12867
  %and.i715 = and i32 %438, 7, !dbg !12868
  %shl.i716 = shl i32 %or10.i.i714, %and.i715, !dbg !12869
  store i32 %shl.i716, i32* %re_cache.i689, align 4, !dbg !12870
  %439 = load i32, i32* %re_cache.i689, align 4, !dbg !12871
  %440 = load i32, i32* %bits.addr.i685, align 4, !dbg !12872
  %conv.i717 = trunc i32 %440 to i8, !dbg !12872
  %call2.i718 = call i32 @NEG_USR32(i32 %439, i8 signext %conv.i717) #9, !dbg !12873
  store i32 %call2.i718, i32* %index1.i693, align 4, !dbg !12874
  %441 = load i32, i32* %index1.i693, align 4, !dbg !12875
  %idxprom.i719 = zext i32 %441 to i64, !dbg !12876
  %442 = load [2 x i16]*, [2 x i16]** %table.addr.i684, align 8, !dbg !12876
  %arrayidx.i720 = getelementptr inbounds [2 x i16], [2 x i16]* %442, i64 %idxprom.i719, !dbg !12876
  %arrayidx3.i721 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i720, i64 0, i64 0, !dbg !12876
  %443 = load i16, i16* %arrayidx3.i721, align 2, !dbg !12876
  %conv4.i722 = sext i16 %443 to i32, !dbg !12876
  store i32 %conv4.i722, i32* %code.i687, align 4, !dbg !12877
  %444 = load i32, i32* %index1.i693, align 4, !dbg !12878
  %idxprom5.i723 = zext i32 %444 to i64, !dbg !12879
  %445 = load [2 x i16]*, [2 x i16]** %table.addr.i684, align 8, !dbg !12879
  %arrayidx6.i724 = getelementptr inbounds [2 x i16], [2 x i16]* %445, i64 %idxprom5.i723, !dbg !12879
  %arrayidx7.i725 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i724, i64 0, i64 1, !dbg !12879
  %446 = load i16, i16* %arrayidx7.i725, align 2, !dbg !12879
  %conv8.i726 = sext i16 %446 to i32, !dbg !12879
  store i32 %conv8.i726, i32* %n.i691, align 4, !dbg !12880
  %447 = load i32, i32* %max_depth.addr.i686, align 4, !dbg !12881
  %cmp.i727 = icmp sgt i32 %447, 1, !dbg !12882
  br i1 %cmp.i727, label %land.lhs.true.i729, label %if.end68.i816, !dbg !12883

land.lhs.true.i729:                               ; preds = %if.end190
  %448 = load i32, i32* %n.i691, align 4, !dbg !12884
  %cmp10.i728 = icmp slt i32 %448, 0, !dbg !12885
  br i1 %cmp10.i728, label %if.then.i732, label %if.end68.i816, !dbg !12886

if.then.i732:                                     ; preds = %land.lhs.true.i729
  %449 = load i32, i32* %re_size_plus8.i690, align 4, !dbg !12887
  %450 = load i32, i32* %re_index.i688, align 4, !dbg !12888
  %451 = load i32, i32* %bits.addr.i685, align 4, !dbg !12889
  %add.i730 = add i32 %450, %451, !dbg !12890
  %cmp12.i731 = icmp ugt i32 %449, %add.i730, !dbg !12891
  br i1 %cmp12.i731, label %cond.true.i734, label %cond.false.i735, !dbg !12892

cond.true.i734:                                   ; preds = %if.then.i732
  %452 = load i32, i32* %re_index.i688, align 4, !dbg !12893
  %453 = load i32, i32* %bits.addr.i685, align 4, !dbg !12894
  %add14.i733 = add i32 %452, %453, !dbg !12895
  br label %cond.end.i771, !dbg !12896

cond.false.i735:                                  ; preds = %if.then.i732
  %454 = load i32, i32* %re_size_plus8.i690, align 4, !dbg !12897
  br label %cond.end.i771, !dbg !12898

cond.end.i771:                                    ; preds = %cond.false.i735, %cond.true.i734
  %cond.i736 = phi i32 [ %add14.i733, %cond.true.i734 ], [ %454, %cond.false.i735 ], !dbg !12899
  store i32 %cond.i736, i32* %re_index.i688, align 4, !dbg !12900
  %455 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i683, align 8, !dbg !12901
  %buffer15.i737 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %455, i32 0, i32 0, !dbg !12902
  %456 = load i8*, i8** %buffer15.i737, align 8, !dbg !12902
  %457 = load i32, i32* %re_index.i688, align 4, !dbg !12903
  %shr16.i738 = lshr i32 %457, 3, !dbg !12904
  %idx.ext17.i739 = zext i32 %shr16.i738 to i64, !dbg !12905
  %add.ptr18.i740 = getelementptr inbounds i8, i8* %456, i64 %idx.ext17.i739, !dbg !12905
  %458 = bitcast i8* %add.ptr18.i740 to %union.unaligned_32*, !dbg !12906
  %l19.i741 = bitcast %union.unaligned_32* %458 to i32*, !dbg !12906
  %459 = load i32, i32* %l19.i741, align 1, !dbg !12906
  store i32 %459, i32* %x.addr.i81.i681, align 4, !dbg !12907
  %460 = load i32, i32* %x.addr.i81.i681, align 4, !dbg !12908
  %shl.i82.i742 = shl i32 %460, 8, !dbg !12909
  %and.i83.i743 = and i32 %shl.i82.i742, 65280, !dbg !12910
  %461 = load i32, i32* %x.addr.i81.i681, align 4, !dbg !12911
  %shr.i84.i744 = lshr i32 %461, 8, !dbg !12912
  %and1.i85.i745 = and i32 %shr.i84.i744, 255, !dbg !12913
  %or.i86.i746 = or i32 %and.i83.i743, %and1.i85.i745, !dbg !12914
  %shl2.i87.i747 = shl i32 %or.i86.i746, 16, !dbg !12915
  %462 = load i32, i32* %x.addr.i81.i681, align 4, !dbg !12916
  %shr3.i88.i748 = lshr i32 %462, 16, !dbg !12917
  %shl4.i89.i749 = shl i32 %shr3.i88.i748, 8, !dbg !12918
  %and5.i90.i750 = and i32 %shl4.i89.i749, 65280, !dbg !12919
  %463 = load i32, i32* %x.addr.i81.i681, align 4, !dbg !12920
  %shr6.i91.i751 = lshr i32 %463, 16, !dbg !12921
  %shr7.i92.i752 = lshr i32 %shr6.i91.i751, 8, !dbg !12922
  %and8.i93.i753 = and i32 %shr7.i92.i752, 255, !dbg !12923
  %or9.i94.i754 = or i32 %and5.i90.i750, %and8.i93.i753, !dbg !12924
  %or10.i95.i755 = or i32 %shl2.i87.i747, %or9.i94.i754, !dbg !12925
  %464 = load i32, i32* %re_index.i688, align 4, !dbg !12926
  %and21.i756 = and i32 %464, 7, !dbg !12927
  %shl22.i757 = shl i32 %or10.i95.i755, %and21.i756, !dbg !12928
  store i32 %shl22.i757, i32* %re_cache.i689, align 4, !dbg !12929
  %465 = load i32, i32* %n.i691, align 4, !dbg !12930
  %sub.i758 = sub nsw i32 0, %465, !dbg !12931
  store i32 %sub.i758, i32* %nb_bits.i692, align 4, !dbg !12932
  %466 = load i32, i32* %re_cache.i689, align 4, !dbg !12933
  %467 = load i32, i32* %nb_bits.i692, align 4, !dbg !12934
  %conv23.i759 = trunc i32 %467 to i8, !dbg !12934
  %call24.i760 = call i32 @NEG_USR32(i32 %466, i8 signext %conv23.i759) #9, !dbg !12935
  %468 = load i32, i32* %code.i687, align 4, !dbg !12936
  %add25.i761 = add i32 %call24.i760, %468, !dbg !12937
  store i32 %add25.i761, i32* %index1.i693, align 4, !dbg !12938
  %469 = load i32, i32* %index1.i693, align 4, !dbg !12939
  %idxprom26.i762 = zext i32 %469 to i64, !dbg !12940
  %470 = load [2 x i16]*, [2 x i16]** %table.addr.i684, align 8, !dbg !12940
  %arrayidx27.i763 = getelementptr inbounds [2 x i16], [2 x i16]* %470, i64 %idxprom26.i762, !dbg !12940
  %arrayidx28.i764 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i763, i64 0, i64 0, !dbg !12940
  %471 = load i16, i16* %arrayidx28.i764, align 2, !dbg !12940
  %conv29.i765 = sext i16 %471 to i32, !dbg !12940
  store i32 %conv29.i765, i32* %code.i687, align 4, !dbg !12941
  %472 = load i32, i32* %index1.i693, align 4, !dbg !12942
  %idxprom30.i766 = zext i32 %472 to i64, !dbg !12943
  %473 = load [2 x i16]*, [2 x i16]** %table.addr.i684, align 8, !dbg !12943
  %arrayidx31.i767 = getelementptr inbounds [2 x i16], [2 x i16]* %473, i64 %idxprom30.i766, !dbg !12943
  %arrayidx32.i768 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i767, i64 0, i64 1, !dbg !12943
  %474 = load i16, i16* %arrayidx32.i768, align 2, !dbg !12943
  %conv33.i769 = sext i16 %474 to i32, !dbg !12943
  store i32 %conv33.i769, i32* %n.i691, align 4, !dbg !12944
  %475 = load i32, i32* %max_depth.addr.i686, align 4, !dbg !12945
  %cmp34.i770 = icmp sgt i32 %475, 2, !dbg !12946
  br i1 %cmp34.i770, label %land.lhs.true36.i773, label %if.end.i815, !dbg !12947

land.lhs.true36.i773:                             ; preds = %cond.end.i771
  %476 = load i32, i32* %n.i691, align 4, !dbg !12948
  %cmp37.i772 = icmp slt i32 %476, 0, !dbg !12949
  br i1 %cmp37.i772, label %if.then39.i776, label %if.end.i815, !dbg !12950

if.then39.i776:                                   ; preds = %land.lhs.true36.i773
  %477 = load i32, i32* %re_size_plus8.i690, align 4, !dbg !12951
  %478 = load i32, i32* %re_index.i688, align 4, !dbg !12952
  %479 = load i32, i32* %nb_bits.i692, align 4, !dbg !12953
  %add40.i774 = add i32 %478, %479, !dbg !12954
  %cmp41.i775 = icmp ugt i32 %477, %add40.i774, !dbg !12955
  br i1 %cmp41.i775, label %cond.true43.i778, label %cond.false45.i779, !dbg !12956

cond.true43.i778:                                 ; preds = %if.then39.i776
  %480 = load i32, i32* %re_index.i688, align 4, !dbg !12957
  %481 = load i32, i32* %nb_bits.i692, align 4, !dbg !12958
  %add44.i777 = add i32 %480, %481, !dbg !12959
  br label %cond.end46.i814, !dbg !12960

cond.false45.i779:                                ; preds = %if.then39.i776
  %482 = load i32, i32* %re_size_plus8.i690, align 4, !dbg !12961
  br label %cond.end46.i814, !dbg !12962

cond.end46.i814:                                  ; preds = %cond.false45.i779, %cond.true43.i778
  %cond47.i780 = phi i32 [ %add44.i777, %cond.true43.i778 ], [ %482, %cond.false45.i779 ], !dbg !12963
  store i32 %cond47.i780, i32* %re_index.i688, align 4, !dbg !12964
  %483 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i683, align 8, !dbg !12965
  %buffer48.i781 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %483, i32 0, i32 0, !dbg !12966
  %484 = load i8*, i8** %buffer48.i781, align 8, !dbg !12966
  %485 = load i32, i32* %re_index.i688, align 4, !dbg !12967
  %shr49.i782 = lshr i32 %485, 3, !dbg !12968
  %idx.ext50.i783 = zext i32 %shr49.i782 to i64, !dbg !12969
  %add.ptr51.i784 = getelementptr inbounds i8, i8* %484, i64 %idx.ext50.i783, !dbg !12969
  %486 = bitcast i8* %add.ptr51.i784 to %union.unaligned_32*, !dbg !12970
  %l52.i785 = bitcast %union.unaligned_32* %486 to i32*, !dbg !12970
  %487 = load i32, i32* %l52.i785, align 1, !dbg !12970
  store i32 %487, i32* %x.addr.i96.i680, align 4, !dbg !12971
  %488 = load i32, i32* %x.addr.i96.i680, align 4, !dbg !12972
  %shl.i97.i786 = shl i32 %488, 8, !dbg !12973
  %and.i98.i787 = and i32 %shl.i97.i786, 65280, !dbg !12974
  %489 = load i32, i32* %x.addr.i96.i680, align 4, !dbg !12975
  %shr.i99.i788 = lshr i32 %489, 8, !dbg !12976
  %and1.i100.i789 = and i32 %shr.i99.i788, 255, !dbg !12977
  %or.i101.i790 = or i32 %and.i98.i787, %and1.i100.i789, !dbg !12978
  %shl2.i102.i791 = shl i32 %or.i101.i790, 16, !dbg !12979
  %490 = load i32, i32* %x.addr.i96.i680, align 4, !dbg !12980
  %shr3.i103.i792 = lshr i32 %490, 16, !dbg !12981
  %shl4.i104.i793 = shl i32 %shr3.i103.i792, 8, !dbg !12982
  %and5.i105.i794 = and i32 %shl4.i104.i793, 65280, !dbg !12983
  %491 = load i32, i32* %x.addr.i96.i680, align 4, !dbg !12984
  %shr6.i106.i795 = lshr i32 %491, 16, !dbg !12985
  %shr7.i107.i796 = lshr i32 %shr6.i106.i795, 8, !dbg !12986
  %and8.i108.i797 = and i32 %shr7.i107.i796, 255, !dbg !12987
  %or9.i109.i798 = or i32 %and5.i105.i794, %and8.i108.i797, !dbg !12988
  %or10.i110.i799 = or i32 %shl2.i102.i791, %or9.i109.i798, !dbg !12989
  %492 = load i32, i32* %re_index.i688, align 4, !dbg !12990
  %and54.i800 = and i32 %492, 7, !dbg !12991
  %shl55.i801 = shl i32 %or10.i110.i799, %and54.i800, !dbg !12992
  store i32 %shl55.i801, i32* %re_cache.i689, align 4, !dbg !12993
  %493 = load i32, i32* %n.i691, align 4, !dbg !12994
  %sub56.i802 = sub nsw i32 0, %493, !dbg !12995
  store i32 %sub56.i802, i32* %nb_bits.i692, align 4, !dbg !12996
  %494 = load i32, i32* %re_cache.i689, align 4, !dbg !12997
  %495 = load i32, i32* %nb_bits.i692, align 4, !dbg !12998
  %conv57.i803 = trunc i32 %495 to i8, !dbg !12998
  %call58.i804 = call i32 @NEG_USR32(i32 %494, i8 signext %conv57.i803) #9, !dbg !12999
  %496 = load i32, i32* %code.i687, align 4, !dbg !13000
  %add59.i805 = add i32 %call58.i804, %496, !dbg !13001
  store i32 %add59.i805, i32* %index1.i693, align 4, !dbg !13002
  %497 = load i32, i32* %index1.i693, align 4, !dbg !13003
  %idxprom60.i806 = zext i32 %497 to i64, !dbg !13004
  %498 = load [2 x i16]*, [2 x i16]** %table.addr.i684, align 8, !dbg !13004
  %arrayidx61.i807 = getelementptr inbounds [2 x i16], [2 x i16]* %498, i64 %idxprom60.i806, !dbg !13004
  %arrayidx62.i808 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i807, i64 0, i64 0, !dbg !13004
  %499 = load i16, i16* %arrayidx62.i808, align 2, !dbg !13004
  %conv63.i809 = sext i16 %499 to i32, !dbg !13004
  store i32 %conv63.i809, i32* %code.i687, align 4, !dbg !13005
  %500 = load i32, i32* %index1.i693, align 4, !dbg !13006
  %idxprom64.i810 = zext i32 %500 to i64, !dbg !13007
  %501 = load [2 x i16]*, [2 x i16]** %table.addr.i684, align 8, !dbg !13007
  %arrayidx65.i811 = getelementptr inbounds [2 x i16], [2 x i16]* %501, i64 %idxprom64.i810, !dbg !13007
  %arrayidx66.i812 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i811, i64 0, i64 1, !dbg !13007
  %502 = load i16, i16* %arrayidx66.i812, align 2, !dbg !13007
  %conv67.i813 = sext i16 %502 to i32, !dbg !13007
  store i32 %conv67.i813, i32* %n.i691, align 4, !dbg !13008
  br label %if.end.i815, !dbg !13009

if.end.i815:                                      ; preds = %cond.end46.i814, %land.lhs.true36.i773, %cond.end.i771
  br label %if.end68.i816, !dbg !13010

if.end68.i816:                                    ; preds = %if.end.i815, %land.lhs.true.i729, %if.end190
  %503 = load i32, i32* %n.i691, align 4, !dbg !13011
  %504 = load i32, i32* %re_cache.i689, align 4, !dbg !13012
  %shl70.i817 = shl i32 %504, %503, !dbg !13012
  store i32 %shl70.i817, i32* %re_cache.i689, align 4, !dbg !13012
  %505 = load i32, i32* %re_size_plus8.i690, align 4, !dbg !13013
  %506 = load i32, i32* %re_index.i688, align 4, !dbg !13014
  %507 = load i32, i32* %n.i691, align 4, !dbg !13015
  %add71.i818 = add i32 %506, %507, !dbg !13016
  %cmp72.i819 = icmp ugt i32 %505, %add71.i818, !dbg !13017
  br i1 %cmp72.i819, label %cond.true74.i821, label %cond.false76.i822, !dbg !13018

cond.true74.i821:                                 ; preds = %if.end68.i816
  %508 = load i32, i32* %re_index.i688, align 4, !dbg !13019
  %509 = load i32, i32* %n.i691, align 4, !dbg !13020
  %add75.i820 = add i32 %508, %509, !dbg !13021
  br label %get_vlc2.exit825, !dbg !13022

cond.false76.i822:                                ; preds = %if.end68.i816
  %510 = load i32, i32* %re_size_plus8.i690, align 4, !dbg !13023
  br label %get_vlc2.exit825, !dbg !13024

get_vlc2.exit825:                                 ; preds = %cond.true74.i821, %cond.false76.i822
  %cond78.i823 = phi i32 [ %add75.i820, %cond.true74.i821 ], [ %510, %cond.false76.i822 ], !dbg !13025
  store i32 %cond78.i823, i32* %re_index.i688, align 4, !dbg !13026
  %511 = load i32, i32* %re_index.i688, align 4, !dbg !13027
  %512 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i683, align 8, !dbg !13028
  %index80.i824 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %512, i32 0, i32 2, !dbg !13029
  store i32 %511, i32* %index80.i824, align 8, !dbg !13030
  %513 = load i32, i32* %code.i687, align 4, !dbg !13031
  store i32 %513, i32* %delta, align 4, !dbg !13032
  %514 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13033
  %arrayidx195 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %514, i64 -1, !dbg !13033
  %num_points196 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx195, i32 0, i32 0, !dbg !13034
  %515 = load i32, i32* %num_points196, align 4, !dbg !13034
  %cmp197 = icmp sgt i32 %515, 0, !dbg !13035
  br i1 %cmp197, label %cond.true199, label %cond.false203, !dbg !13033

cond.true199:                                     ; preds = %get_vlc2.exit825
  %516 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13036
  %arrayidx200 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %516, i64 -1, !dbg !13036
  %loc_code201 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx200, i32 0, i32 2, !dbg !13037
  %arrayidx202 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code201, i64 0, i64 0, !dbg !13036
  %517 = load i32, i32* %arrayidx202, align 4, !dbg !13036
  br label %cond.end204, !dbg !13038

cond.false203:                                    ; preds = %get_vlc2.exit825
  br label %cond.end204, !dbg !13040

cond.end204:                                      ; preds = %cond.false203, %cond.true199
  %cond205 = phi i32 [ %517, %cond.true199 ], [ 0, %cond.false203 ], !dbg !13042
  store i32 %cond205, i32* %pred, align 4, !dbg !13044
  %518 = load i32, i32* %pred, align 4, !dbg !13045
  %519 = load i32, i32* %delta, align 4, !dbg !13046
  %add206 = add nsw i32 %518, %519, !dbg !13047
  %and207 = and i32 %add206, 31, !dbg !13048
  %520 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13049
  %loc_code208 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %520, i32 0, i32 2, !dbg !13050
  %arrayidx209 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code208, i64 0, i64 0, !dbg !13049
  store i32 %and207, i32* %arrayidx209, align 4, !dbg !13051
  store i32 1, i32* %i, align 4, !dbg !13052
  br label %for.cond210, !dbg !13053

for.cond210:                                      ; preds = %for.inc256, %cond.end204
  %521 = load i32, i32* %i, align 4, !dbg !13054
  %522 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13056
  %num_points211 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %522, i32 0, i32 0, !dbg !13057
  %523 = load i32, i32* %num_points211, align 4, !dbg !13057
  %cmp212 = icmp slt i32 %521, %523, !dbg !13058
  br i1 %cmp212, label %for.body214, label %for.end258, !dbg !13059

for.body214:                                      ; preds = %for.cond210
  %524 = load i32, i32* %i, align 4, !dbg !13060
  %525 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13061
  %arrayidx215 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %525, i64 -1, !dbg !13061
  %num_points216 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx215, i32 0, i32 0, !dbg !13062
  %526 = load i32, i32* %num_points216, align 4, !dbg !13062
  %cmp217 = icmp sge i32 %524, %526, !dbg !13063
  %conv218 = zext i1 %cmp217 to i32, !dbg !13063
  store i32 %conv218, i32* %more_than_ref, align 4, !dbg !13064
  %527 = load i32, i32* %i, align 4, !dbg !13065
  %idxprom219 = sext i32 %527 to i64, !dbg !13066
  %528 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13066
  %lev_code220 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %528, i32 0, i32 1, !dbg !13067
  %arrayidx221 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code220, i64 0, i64 %idxprom219, !dbg !13066
  %529 = load i32, i32* %arrayidx221, align 4, !dbg !13066
  %530 = load i32, i32* %i, align 4, !dbg !13068
  %sub222 = sub nsw i32 %530, 1, !dbg !13069
  %idxprom223 = sext i32 %sub222 to i64, !dbg !13070
  %531 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13070
  %lev_code224 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %531, i32 0, i32 1, !dbg !13071
  %arrayidx225 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code224, i64 0, i64 %idxprom223, !dbg !13070
  %532 = load i32, i32* %arrayidx225, align 4, !dbg !13070
  %cmp226 = icmp sgt i32 %529, %532, !dbg !13072
  %conv227 = zext i1 %cmp226 to i32, !dbg !13072
  %mul = mul nsw i32 %conv227, 2, !dbg !13073
  %533 = load i32, i32* %more_than_ref, align 4, !dbg !13074
  %add228 = add nsw i32 %mul, %533, !dbg !13075
  %add229 = add nsw i32 %add228, 6, !dbg !13076
  %idxprom230 = sext i32 %add229 to i64, !dbg !13077
  %arrayidx231 = getelementptr inbounds [11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 %idxprom230, !dbg !13077
  store %struct.VLC* %arrayidx231, %struct.VLC** %tab, align 8, !dbg !13078
  %534 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13079
  %535 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !13080
  %table232 = getelementptr inbounds %struct.VLC, %struct.VLC* %535, i32 0, i32 1, !dbg !13081
  %536 = load [2 x i16]*, [2 x i16]** %table232, align 8, !dbg !13081
  %537 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !13082
  %bits233 = getelementptr inbounds %struct.VLC, %struct.VLC* %537, i32 0, i32 0, !dbg !13083
  %538 = load i32, i32* %bits233, align 8, !dbg !13083
  store %struct.GetBitContext* %534, %struct.GetBitContext** %s.addr.i829, align 8, !dbg !13084
  store [2 x i16]* %536, [2 x i16]** %table.addr.i830, align 8, !dbg !13084
  store i32 %538, i32* %bits.addr.i831, align 4, !dbg !13084
  store i32 1, i32* %max_depth.addr.i832, align 4, !dbg !13084
  %539 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i829, align 8, !dbg !13085
  %index.i840 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %539, i32 0, i32 2, !dbg !13086
  %540 = load i32, i32* %index.i840, align 8, !dbg !13086
  store i32 %540, i32* %re_index.i834, align 4, !dbg !11789
  %541 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i829, align 8, !dbg !13087
  %size_in_bits_plus8.i841 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %541, i32 0, i32 4, !dbg !13088
  %542 = load i32, i32* %size_in_bits_plus8.i841, align 8, !dbg !13088
  store i32 %542, i32* %re_size_plus8.i836, align 4, !dbg !11791
  %543 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i829, align 8, !dbg !13089
  %buffer.i842 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %543, i32 0, i32 0, !dbg !13090
  %544 = load i8*, i8** %buffer.i842, align 8, !dbg !13090
  %545 = load i32, i32* %re_index.i834, align 4, !dbg !13091
  %shr.i843 = lshr i32 %545, 3, !dbg !13092
  %idx.ext.i844 = zext i32 %shr.i843 to i64, !dbg !13093
  %add.ptr.i845 = getelementptr inbounds i8, i8* %544, i64 %idx.ext.i844, !dbg !13093
  %546 = bitcast i8* %add.ptr.i845 to %union.unaligned_32*, !dbg !13094
  %l.i846 = bitcast %union.unaligned_32* %546 to i32*, !dbg !13094
  %547 = load i32, i32* %l.i846, align 1, !dbg !13094
  store i32 %547, i32* %x.addr.i.i828, align 4, !dbg !13095
  %548 = load i32, i32* %x.addr.i.i828, align 4, !dbg !13096
  %shl.i.i847 = shl i32 %548, 8, !dbg !13097
  %and.i.i848 = and i32 %shl.i.i847, 65280, !dbg !13098
  %549 = load i32, i32* %x.addr.i.i828, align 4, !dbg !13099
  %shr.i.i849 = lshr i32 %549, 8, !dbg !13100
  %and1.i.i850 = and i32 %shr.i.i849, 255, !dbg !13101
  %or.i.i851 = or i32 %and.i.i848, %and1.i.i850, !dbg !13102
  %shl2.i.i852 = shl i32 %or.i.i851, 16, !dbg !13103
  %550 = load i32, i32* %x.addr.i.i828, align 4, !dbg !13104
  %shr3.i.i853 = lshr i32 %550, 16, !dbg !13105
  %shl4.i.i854 = shl i32 %shr3.i.i853, 8, !dbg !13106
  %and5.i.i855 = and i32 %shl4.i.i854, 65280, !dbg !13107
  %551 = load i32, i32* %x.addr.i.i828, align 4, !dbg !13108
  %shr6.i.i856 = lshr i32 %551, 16, !dbg !13109
  %shr7.i.i857 = lshr i32 %shr6.i.i856, 8, !dbg !13110
  %and8.i.i858 = and i32 %shr7.i.i857, 255, !dbg !13111
  %or9.i.i859 = or i32 %and5.i.i855, %and8.i.i858, !dbg !13112
  %or10.i.i860 = or i32 %shl2.i.i852, %or9.i.i859, !dbg !13113
  %552 = load i32, i32* %re_index.i834, align 4, !dbg !13114
  %and.i861 = and i32 %552, 7, !dbg !13115
  %shl.i862 = shl i32 %or10.i.i860, %and.i861, !dbg !13116
  store i32 %shl.i862, i32* %re_cache.i835, align 4, !dbg !13117
  %553 = load i32, i32* %re_cache.i835, align 4, !dbg !13118
  %554 = load i32, i32* %bits.addr.i831, align 4, !dbg !13119
  %conv.i863 = trunc i32 %554 to i8, !dbg !13119
  %call2.i864 = call i32 @NEG_USR32(i32 %553, i8 signext %conv.i863) #9, !dbg !13120
  store i32 %call2.i864, i32* %index1.i839, align 4, !dbg !13121
  %555 = load i32, i32* %index1.i839, align 4, !dbg !13122
  %idxprom.i865 = zext i32 %555 to i64, !dbg !13123
  %556 = load [2 x i16]*, [2 x i16]** %table.addr.i830, align 8, !dbg !13123
  %arrayidx.i866 = getelementptr inbounds [2 x i16], [2 x i16]* %556, i64 %idxprom.i865, !dbg !13123
  %arrayidx3.i867 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i866, i64 0, i64 0, !dbg !13123
  %557 = load i16, i16* %arrayidx3.i867, align 2, !dbg !13123
  %conv4.i868 = sext i16 %557 to i32, !dbg !13123
  store i32 %conv4.i868, i32* %code.i833, align 4, !dbg !13124
  %558 = load i32, i32* %index1.i839, align 4, !dbg !13125
  %idxprom5.i869 = zext i32 %558 to i64, !dbg !13126
  %559 = load [2 x i16]*, [2 x i16]** %table.addr.i830, align 8, !dbg !13126
  %arrayidx6.i870 = getelementptr inbounds [2 x i16], [2 x i16]* %559, i64 %idxprom5.i869, !dbg !13126
  %arrayidx7.i871 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i870, i64 0, i64 1, !dbg !13126
  %560 = load i16, i16* %arrayidx7.i871, align 2, !dbg !13126
  %conv8.i872 = sext i16 %560 to i32, !dbg !13126
  store i32 %conv8.i872, i32* %n.i837, align 4, !dbg !13127
  %561 = load i32, i32* %max_depth.addr.i832, align 4, !dbg !13128
  %cmp.i873 = icmp sgt i32 %561, 1, !dbg !13129
  br i1 %cmp.i873, label %land.lhs.true.i875, label %if.end68.i962, !dbg !13130

land.lhs.true.i875:                               ; preds = %for.body214
  %562 = load i32, i32* %n.i837, align 4, !dbg !13131
  %cmp10.i874 = icmp slt i32 %562, 0, !dbg !13132
  br i1 %cmp10.i874, label %if.then.i878, label %if.end68.i962, !dbg !13133

if.then.i878:                                     ; preds = %land.lhs.true.i875
  %563 = load i32, i32* %re_size_plus8.i836, align 4, !dbg !13134
  %564 = load i32, i32* %re_index.i834, align 4, !dbg !13135
  %565 = load i32, i32* %bits.addr.i831, align 4, !dbg !13136
  %add.i876 = add i32 %564, %565, !dbg !13137
  %cmp12.i877 = icmp ugt i32 %563, %add.i876, !dbg !13138
  br i1 %cmp12.i877, label %cond.true.i880, label %cond.false.i881, !dbg !13139

cond.true.i880:                                   ; preds = %if.then.i878
  %566 = load i32, i32* %re_index.i834, align 4, !dbg !13140
  %567 = load i32, i32* %bits.addr.i831, align 4, !dbg !13141
  %add14.i879 = add i32 %566, %567, !dbg !13142
  br label %cond.end.i917, !dbg !13143

cond.false.i881:                                  ; preds = %if.then.i878
  %568 = load i32, i32* %re_size_plus8.i836, align 4, !dbg !13144
  br label %cond.end.i917, !dbg !13145

cond.end.i917:                                    ; preds = %cond.false.i881, %cond.true.i880
  %cond.i882 = phi i32 [ %add14.i879, %cond.true.i880 ], [ %568, %cond.false.i881 ], !dbg !13146
  store i32 %cond.i882, i32* %re_index.i834, align 4, !dbg !13147
  %569 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i829, align 8, !dbg !13148
  %buffer15.i883 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %569, i32 0, i32 0, !dbg !13149
  %570 = load i8*, i8** %buffer15.i883, align 8, !dbg !13149
  %571 = load i32, i32* %re_index.i834, align 4, !dbg !13150
  %shr16.i884 = lshr i32 %571, 3, !dbg !13151
  %idx.ext17.i885 = zext i32 %shr16.i884 to i64, !dbg !13152
  %add.ptr18.i886 = getelementptr inbounds i8, i8* %570, i64 %idx.ext17.i885, !dbg !13152
  %572 = bitcast i8* %add.ptr18.i886 to %union.unaligned_32*, !dbg !13153
  %l19.i887 = bitcast %union.unaligned_32* %572 to i32*, !dbg !13153
  %573 = load i32, i32* %l19.i887, align 1, !dbg !13153
  store i32 %573, i32* %x.addr.i81.i827, align 4, !dbg !13154
  %574 = load i32, i32* %x.addr.i81.i827, align 4, !dbg !13155
  %shl.i82.i888 = shl i32 %574, 8, !dbg !13156
  %and.i83.i889 = and i32 %shl.i82.i888, 65280, !dbg !13157
  %575 = load i32, i32* %x.addr.i81.i827, align 4, !dbg !13158
  %shr.i84.i890 = lshr i32 %575, 8, !dbg !13159
  %and1.i85.i891 = and i32 %shr.i84.i890, 255, !dbg !13160
  %or.i86.i892 = or i32 %and.i83.i889, %and1.i85.i891, !dbg !13161
  %shl2.i87.i893 = shl i32 %or.i86.i892, 16, !dbg !13162
  %576 = load i32, i32* %x.addr.i81.i827, align 4, !dbg !13163
  %shr3.i88.i894 = lshr i32 %576, 16, !dbg !13164
  %shl4.i89.i895 = shl i32 %shr3.i88.i894, 8, !dbg !13165
  %and5.i90.i896 = and i32 %shl4.i89.i895, 65280, !dbg !13166
  %577 = load i32, i32* %x.addr.i81.i827, align 4, !dbg !13167
  %shr6.i91.i897 = lshr i32 %577, 16, !dbg !13168
  %shr7.i92.i898 = lshr i32 %shr6.i91.i897, 8, !dbg !13169
  %and8.i93.i899 = and i32 %shr7.i92.i898, 255, !dbg !13170
  %or9.i94.i900 = or i32 %and5.i90.i896, %and8.i93.i899, !dbg !13171
  %or10.i95.i901 = or i32 %shl2.i87.i893, %or9.i94.i900, !dbg !13172
  %578 = load i32, i32* %re_index.i834, align 4, !dbg !13173
  %and21.i902 = and i32 %578, 7, !dbg !13174
  %shl22.i903 = shl i32 %or10.i95.i901, %and21.i902, !dbg !13175
  store i32 %shl22.i903, i32* %re_cache.i835, align 4, !dbg !13176
  %579 = load i32, i32* %n.i837, align 4, !dbg !13177
  %sub.i904 = sub nsw i32 0, %579, !dbg !13178
  store i32 %sub.i904, i32* %nb_bits.i838, align 4, !dbg !13179
  %580 = load i32, i32* %re_cache.i835, align 4, !dbg !13180
  %581 = load i32, i32* %nb_bits.i838, align 4, !dbg !13181
  %conv23.i905 = trunc i32 %581 to i8, !dbg !13181
  %call24.i906 = call i32 @NEG_USR32(i32 %580, i8 signext %conv23.i905) #9, !dbg !13182
  %582 = load i32, i32* %code.i833, align 4, !dbg !13183
  %add25.i907 = add i32 %call24.i906, %582, !dbg !13184
  store i32 %add25.i907, i32* %index1.i839, align 4, !dbg !13185
  %583 = load i32, i32* %index1.i839, align 4, !dbg !13186
  %idxprom26.i908 = zext i32 %583 to i64, !dbg !13187
  %584 = load [2 x i16]*, [2 x i16]** %table.addr.i830, align 8, !dbg !13187
  %arrayidx27.i909 = getelementptr inbounds [2 x i16], [2 x i16]* %584, i64 %idxprom26.i908, !dbg !13187
  %arrayidx28.i910 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i909, i64 0, i64 0, !dbg !13187
  %585 = load i16, i16* %arrayidx28.i910, align 2, !dbg !13187
  %conv29.i911 = sext i16 %585 to i32, !dbg !13187
  store i32 %conv29.i911, i32* %code.i833, align 4, !dbg !13188
  %586 = load i32, i32* %index1.i839, align 4, !dbg !13189
  %idxprom30.i912 = zext i32 %586 to i64, !dbg !13190
  %587 = load [2 x i16]*, [2 x i16]** %table.addr.i830, align 8, !dbg !13190
  %arrayidx31.i913 = getelementptr inbounds [2 x i16], [2 x i16]* %587, i64 %idxprom30.i912, !dbg !13190
  %arrayidx32.i914 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i913, i64 0, i64 1, !dbg !13190
  %588 = load i16, i16* %arrayidx32.i914, align 2, !dbg !13190
  %conv33.i915 = sext i16 %588 to i32, !dbg !13190
  store i32 %conv33.i915, i32* %n.i837, align 4, !dbg !13191
  %589 = load i32, i32* %max_depth.addr.i832, align 4, !dbg !13192
  %cmp34.i916 = icmp sgt i32 %589, 2, !dbg !13193
  br i1 %cmp34.i916, label %land.lhs.true36.i919, label %if.end.i961, !dbg !13194

land.lhs.true36.i919:                             ; preds = %cond.end.i917
  %590 = load i32, i32* %n.i837, align 4, !dbg !13195
  %cmp37.i918 = icmp slt i32 %590, 0, !dbg !13196
  br i1 %cmp37.i918, label %if.then39.i922, label %if.end.i961, !dbg !13197

if.then39.i922:                                   ; preds = %land.lhs.true36.i919
  %591 = load i32, i32* %re_size_plus8.i836, align 4, !dbg !13198
  %592 = load i32, i32* %re_index.i834, align 4, !dbg !13199
  %593 = load i32, i32* %nb_bits.i838, align 4, !dbg !13200
  %add40.i920 = add i32 %592, %593, !dbg !13201
  %cmp41.i921 = icmp ugt i32 %591, %add40.i920, !dbg !13202
  br i1 %cmp41.i921, label %cond.true43.i924, label %cond.false45.i925, !dbg !13203

cond.true43.i924:                                 ; preds = %if.then39.i922
  %594 = load i32, i32* %re_index.i834, align 4, !dbg !13204
  %595 = load i32, i32* %nb_bits.i838, align 4, !dbg !13205
  %add44.i923 = add i32 %594, %595, !dbg !13206
  br label %cond.end46.i960, !dbg !13207

cond.false45.i925:                                ; preds = %if.then39.i922
  %596 = load i32, i32* %re_size_plus8.i836, align 4, !dbg !13208
  br label %cond.end46.i960, !dbg !13209

cond.end46.i960:                                  ; preds = %cond.false45.i925, %cond.true43.i924
  %cond47.i926 = phi i32 [ %add44.i923, %cond.true43.i924 ], [ %596, %cond.false45.i925 ], !dbg !13210
  store i32 %cond47.i926, i32* %re_index.i834, align 4, !dbg !13211
  %597 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i829, align 8, !dbg !13212
  %buffer48.i927 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %597, i32 0, i32 0, !dbg !13213
  %598 = load i8*, i8** %buffer48.i927, align 8, !dbg !13213
  %599 = load i32, i32* %re_index.i834, align 4, !dbg !13214
  %shr49.i928 = lshr i32 %599, 3, !dbg !13215
  %idx.ext50.i929 = zext i32 %shr49.i928 to i64, !dbg !13216
  %add.ptr51.i930 = getelementptr inbounds i8, i8* %598, i64 %idx.ext50.i929, !dbg !13216
  %600 = bitcast i8* %add.ptr51.i930 to %union.unaligned_32*, !dbg !13217
  %l52.i931 = bitcast %union.unaligned_32* %600 to i32*, !dbg !13217
  %601 = load i32, i32* %l52.i931, align 1, !dbg !13217
  store i32 %601, i32* %x.addr.i96.i826, align 4, !dbg !13218
  %602 = load i32, i32* %x.addr.i96.i826, align 4, !dbg !13219
  %shl.i97.i932 = shl i32 %602, 8, !dbg !13220
  %and.i98.i933 = and i32 %shl.i97.i932, 65280, !dbg !13221
  %603 = load i32, i32* %x.addr.i96.i826, align 4, !dbg !13222
  %shr.i99.i934 = lshr i32 %603, 8, !dbg !13223
  %and1.i100.i935 = and i32 %shr.i99.i934, 255, !dbg !13224
  %or.i101.i936 = or i32 %and.i98.i933, %and1.i100.i935, !dbg !13225
  %shl2.i102.i937 = shl i32 %or.i101.i936, 16, !dbg !13226
  %604 = load i32, i32* %x.addr.i96.i826, align 4, !dbg !13227
  %shr3.i103.i938 = lshr i32 %604, 16, !dbg !13228
  %shl4.i104.i939 = shl i32 %shr3.i103.i938, 8, !dbg !13229
  %and5.i105.i940 = and i32 %shl4.i104.i939, 65280, !dbg !13230
  %605 = load i32, i32* %x.addr.i96.i826, align 4, !dbg !13231
  %shr6.i106.i941 = lshr i32 %605, 16, !dbg !13232
  %shr7.i107.i942 = lshr i32 %shr6.i106.i941, 8, !dbg !13233
  %and8.i108.i943 = and i32 %shr7.i107.i942, 255, !dbg !13234
  %or9.i109.i944 = or i32 %and5.i105.i940, %and8.i108.i943, !dbg !13235
  %or10.i110.i945 = or i32 %shl2.i102.i937, %or9.i109.i944, !dbg !13236
  %606 = load i32, i32* %re_index.i834, align 4, !dbg !13237
  %and54.i946 = and i32 %606, 7, !dbg !13238
  %shl55.i947 = shl i32 %or10.i110.i945, %and54.i946, !dbg !13239
  store i32 %shl55.i947, i32* %re_cache.i835, align 4, !dbg !13240
  %607 = load i32, i32* %n.i837, align 4, !dbg !13241
  %sub56.i948 = sub nsw i32 0, %607, !dbg !13242
  store i32 %sub56.i948, i32* %nb_bits.i838, align 4, !dbg !13243
  %608 = load i32, i32* %re_cache.i835, align 4, !dbg !13244
  %609 = load i32, i32* %nb_bits.i838, align 4, !dbg !13245
  %conv57.i949 = trunc i32 %609 to i8, !dbg !13245
  %call58.i950 = call i32 @NEG_USR32(i32 %608, i8 signext %conv57.i949) #9, !dbg !13246
  %610 = load i32, i32* %code.i833, align 4, !dbg !13247
  %add59.i951 = add i32 %call58.i950, %610, !dbg !13248
  store i32 %add59.i951, i32* %index1.i839, align 4, !dbg !13249
  %611 = load i32, i32* %index1.i839, align 4, !dbg !13250
  %idxprom60.i952 = zext i32 %611 to i64, !dbg !13251
  %612 = load [2 x i16]*, [2 x i16]** %table.addr.i830, align 8, !dbg !13251
  %arrayidx61.i953 = getelementptr inbounds [2 x i16], [2 x i16]* %612, i64 %idxprom60.i952, !dbg !13251
  %arrayidx62.i954 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i953, i64 0, i64 0, !dbg !13251
  %613 = load i16, i16* %arrayidx62.i954, align 2, !dbg !13251
  %conv63.i955 = sext i16 %613 to i32, !dbg !13251
  store i32 %conv63.i955, i32* %code.i833, align 4, !dbg !13252
  %614 = load i32, i32* %index1.i839, align 4, !dbg !13253
  %idxprom64.i956 = zext i32 %614 to i64, !dbg !13254
  %615 = load [2 x i16]*, [2 x i16]** %table.addr.i830, align 8, !dbg !13254
  %arrayidx65.i957 = getelementptr inbounds [2 x i16], [2 x i16]* %615, i64 %idxprom64.i956, !dbg !13254
  %arrayidx66.i958 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i957, i64 0, i64 1, !dbg !13254
  %616 = load i16, i16* %arrayidx66.i958, align 2, !dbg !13254
  %conv67.i959 = sext i16 %616 to i32, !dbg !13254
  store i32 %conv67.i959, i32* %n.i837, align 4, !dbg !13255
  br label %if.end.i961, !dbg !13256

if.end.i961:                                      ; preds = %cond.end46.i960, %land.lhs.true36.i919, %cond.end.i917
  br label %if.end68.i962, !dbg !13257

if.end68.i962:                                    ; preds = %if.end.i961, %land.lhs.true.i875, %for.body214
  %617 = load i32, i32* %n.i837, align 4, !dbg !13258
  %618 = load i32, i32* %re_cache.i835, align 4, !dbg !13259
  %shl70.i963 = shl i32 %618, %617, !dbg !13259
  store i32 %shl70.i963, i32* %re_cache.i835, align 4, !dbg !13259
  %619 = load i32, i32* %re_size_plus8.i836, align 4, !dbg !13260
  %620 = load i32, i32* %re_index.i834, align 4, !dbg !13261
  %621 = load i32, i32* %n.i837, align 4, !dbg !13262
  %add71.i964 = add i32 %620, %621, !dbg !13263
  %cmp72.i965 = icmp ugt i32 %619, %add71.i964, !dbg !13264
  br i1 %cmp72.i965, label %cond.true74.i967, label %cond.false76.i968, !dbg !13265

cond.true74.i967:                                 ; preds = %if.end68.i962
  %622 = load i32, i32* %re_index.i834, align 4, !dbg !13266
  %623 = load i32, i32* %n.i837, align 4, !dbg !13267
  %add75.i966 = add i32 %622, %623, !dbg !13268
  br label %get_vlc2.exit971, !dbg !13269

cond.false76.i968:                                ; preds = %if.end68.i962
  %624 = load i32, i32* %re_size_plus8.i836, align 4, !dbg !13270
  br label %get_vlc2.exit971, !dbg !13271

get_vlc2.exit971:                                 ; preds = %cond.true74.i967, %cond.false76.i968
  %cond78.i969 = phi i32 [ %add75.i966, %cond.true74.i967 ], [ %624, %cond.false76.i968 ], !dbg !13272
  store i32 %cond78.i969, i32* %re_index.i834, align 4, !dbg !13273
  %625 = load i32, i32* %re_index.i834, align 4, !dbg !13274
  %626 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i829, align 8, !dbg !13275
  %index80.i970 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %626, i32 0, i32 2, !dbg !13276
  store i32 %625, i32* %index80.i970, align 8, !dbg !13277
  %627 = load i32, i32* %code.i833, align 4, !dbg !13278
  store i32 %627, i32* %delta, align 4, !dbg !13279
  %628 = load i32, i32* %more_than_ref, align 4, !dbg !13280
  %tobool235 = icmp ne i32 %628, 0, !dbg !13280
  br i1 %tobool235, label %if.then236, label %if.else245, !dbg !13282

if.then236:                                       ; preds = %get_vlc2.exit971
  %629 = load i32, i32* %i, align 4, !dbg !13283
  %sub237 = sub nsw i32 %629, 1, !dbg !13284
  %idxprom238 = sext i32 %sub237 to i64, !dbg !13285
  %630 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13285
  %loc_code239 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %630, i32 0, i32 2, !dbg !13286
  %arrayidx240 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code239, i64 0, i64 %idxprom238, !dbg !13285
  %631 = load i32, i32* %arrayidx240, align 4, !dbg !13285
  %632 = load i32, i32* %delta, align 4, !dbg !13287
  %add241 = add nsw i32 %631, %632, !dbg !13288
  %633 = load i32, i32* %i, align 4, !dbg !13289
  %idxprom242 = sext i32 %633 to i64, !dbg !13290
  %634 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13290
  %loc_code243 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %634, i32 0, i32 2, !dbg !13291
  %arrayidx244 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code243, i64 0, i64 %idxprom242, !dbg !13290
  store i32 %add241, i32* %arrayidx244, align 4, !dbg !13292
  br label %if.end255, !dbg !13290

if.else245:                                       ; preds = %get_vlc2.exit971
  %635 = load i32, i32* %i, align 4, !dbg !13293
  %idxprom246 = sext i32 %635 to i64, !dbg !13294
  %636 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13294
  %arrayidx247 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %636, i64 -1, !dbg !13294
  %loc_code248 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx247, i32 0, i32 2, !dbg !13295
  %arrayidx249 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code248, i64 0, i64 %idxprom246, !dbg !13294
  %637 = load i32, i32* %arrayidx249, align 4, !dbg !13294
  %638 = load i32, i32* %delta, align 4, !dbg !13296
  %add250 = add nsw i32 %637, %638, !dbg !13297
  %and251 = and i32 %add250, 31, !dbg !13298
  %639 = load i32, i32* %i, align 4, !dbg !13299
  %idxprom252 = sext i32 %639 to i64, !dbg !13300
  %640 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13300
  %loc_code253 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %640, i32 0, i32 2, !dbg !13301
  %arrayidx254 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code253, i64 0, i64 %idxprom252, !dbg !13300
  store i32 %and251, i32* %arrayidx254, align 4, !dbg !13302
  br label %if.end255

if.end255:                                        ; preds = %if.else245, %if.then236
  br label %for.inc256, !dbg !13303

for.inc256:                                       ; preds = %if.end255
  %641 = load i32, i32* %i, align 4, !dbg !13304
  %inc257 = add nsw i32 %641, 1, !dbg !13304
  store i32 %inc257, i32* %i, align 4, !dbg !13304
  br label %for.cond210, !dbg !13306, !llvm.loop !13307

for.end258:                                       ; preds = %for.cond210
  br label %for.inc259, !dbg !13309

for.inc259:                                       ; preds = %for.end258, %if.then189
  %642 = load i32, i32* %sb, align 4, !dbg !13310
  %inc260 = add nsw i32 %642, 1, !dbg !13310
  store i32 %inc260, i32* %sb, align 4, !dbg !13310
  br label %for.cond179, !dbg !13312, !llvm.loop !13313

for.end261:                                       ; preds = %for.cond179
  br label %if.end262

if.end262:                                        ; preds = %for.end261, %for.end165
  br label %sw.epilog, !dbg !13315

sw.bb263:                                         ; preds = %entry
  %643 = load i32, i32* %ch_num.addr, align 4, !dbg !13316
  %tobool264 = icmp ne i32 %643, 0, !dbg !13316
  br i1 %tobool264, label %if.then265, label %if.else308, !dbg !13318

if.then265:                                       ; preds = %sw.bb263
  store i32 0, i32* %sb, align 4, !dbg !13319
  br label %for.cond266, !dbg !13322

for.cond266:                                      ; preds = %for.inc305, %if.then265
  %644 = load i32, i32* %sb, align 4, !dbg !13323
  %645 = load i32, i32* %coded_subbands.addr, align 4, !dbg !13326
  %cmp267 = icmp slt i32 %644, %645, !dbg !13327
  br i1 %cmp267, label %for.body269, label %for.end307, !dbg !13328

for.body269:                                      ; preds = %for.cond266
  store i32 0, i32* %i, align 4, !dbg !13329
  br label %for.cond270, !dbg !13331

for.cond270:                                      ; preds = %for.inc302, %for.body269
  %646 = load i32, i32* %i, align 4, !dbg !13332
  %647 = load i32, i32* %sb, align 4, !dbg !13335
  %idxprom271 = sext i32 %647 to i64, !dbg !13336
  %648 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !13336
  %gain_data272 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %648, i32 0, i32 14, !dbg !13337
  %649 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data272, align 8, !dbg !13337
  %arrayidx273 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %649, i64 %idxprom271, !dbg !13336
  %num_points274 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx273, i32 0, i32 0, !dbg !13338
  %650 = load i32, i32* %num_points274, align 4, !dbg !13338
  %cmp275 = icmp slt i32 %646, %650, !dbg !13339
  br i1 %cmp275, label %for.body277, label %for.end304, !dbg !13340

for.body277:                                      ; preds = %for.cond270
  %651 = load i32, i32* %i, align 4, !dbg !13341
  %652 = load i32, i32* %sb, align 4, !dbg !13344
  %idxprom278 = sext i32 %652 to i64, !dbg !13345
  %653 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !13345
  %gain_data279 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %653, i32 0, i32 14, !dbg !13346
  %654 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data279, align 8, !dbg !13346
  %arrayidx280 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %654, i64 %idxprom278, !dbg !13345
  %num_points281 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx280, i32 0, i32 0, !dbg !13347
  %655 = load i32, i32* %num_points281, align 4, !dbg !13347
  %cmp282 = icmp sge i32 %651, %655, !dbg !13348
  br i1 %cmp282, label %if.then284, label %if.else288, !dbg !13349

if.then284:                                       ; preds = %for.body277
  %656 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13350
  %657 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !13351
  %658 = load i32, i32* %sb, align 4, !dbg !13352
  %idxprom285 = sext i32 %658 to i64, !dbg !13353
  %659 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !13353
  %gain_data286 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %659, i32 0, i32 14, !dbg !13354
  %660 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data286, align 8, !dbg !13354
  %arrayidx287 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %660, i64 %idxprom285, !dbg !13353
  %661 = load i32, i32* %i, align 4, !dbg !13355
  call void @gainc_loc_mode0(%struct.GetBitContext* %656, %struct.Atrac3pChanUnitCtx* %657, %struct.AtracGainInfo* %arrayidx287, i32 %661), !dbg !13356
  br label %if.end301, !dbg !13356

if.else288:                                       ; preds = %for.body277
  %662 = load i32, i32* %i, align 4, !dbg !13357
  %idxprom289 = sext i32 %662 to i64, !dbg !13358
  %663 = load i32, i32* %sb, align 4, !dbg !13359
  %idxprom290 = sext i32 %663 to i64, !dbg !13358
  %664 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %ref_chan, align 8, !dbg !13358
  %gain_data291 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %664, i32 0, i32 14, !dbg !13360
  %665 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data291, align 8, !dbg !13360
  %arrayidx292 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %665, i64 %idxprom290, !dbg !13358
  %loc_code293 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx292, i32 0, i32 2, !dbg !13361
  %arrayidx294 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code293, i64 0, i64 %idxprom289, !dbg !13358
  %666 = load i32, i32* %arrayidx294, align 4, !dbg !13358
  %667 = load i32, i32* %i, align 4, !dbg !13362
  %idxprom295 = sext i32 %667 to i64, !dbg !13363
  %668 = load i32, i32* %sb, align 4, !dbg !13364
  %idxprom296 = sext i32 %668 to i64, !dbg !13363
  %669 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !13363
  %gain_data297 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %669, i32 0, i32 14, !dbg !13365
  %670 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data297, align 8, !dbg !13365
  %arrayidx298 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %670, i64 %idxprom296, !dbg !13363
  %loc_code299 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx298, i32 0, i32 2, !dbg !13366
  %arrayidx300 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code299, i64 0, i64 %idxprom295, !dbg !13363
  store i32 %666, i32* %arrayidx300, align 4, !dbg !13367
  br label %if.end301

if.end301:                                        ; preds = %if.else288, %if.then284
  br label %for.inc302, !dbg !13368

for.inc302:                                       ; preds = %if.end301
  %671 = load i32, i32* %i, align 4, !dbg !13369
  %inc303 = add nsw i32 %671, 1, !dbg !13369
  store i32 %inc303, i32* %i, align 4, !dbg !13369
  br label %for.cond270, !dbg !13371, !llvm.loop !13372

for.end304:                                       ; preds = %for.cond270
  br label %for.inc305, !dbg !13374

for.inc305:                                       ; preds = %for.end304
  %672 = load i32, i32* %sb, align 4, !dbg !13376
  %inc306 = add nsw i32 %672, 1, !dbg !13376
  store i32 %inc306, i32* %sb, align 4, !dbg !13376
  br label %for.cond266, !dbg !13378, !llvm.loop !13379

for.end307:                                       ; preds = %for.cond266
  br label %if.end339, !dbg !13381

if.else308:                                       ; preds = %sw.bb263
  %673 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13382
  %call309 = call i32 @get_bits(%struct.GetBitContext* %673, i32 2), !dbg !13384
  %add310 = add i32 %call309, 1, !dbg !13385
  store i32 %add310, i32* %delta_bits, align 4, !dbg !13386
  %674 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13387
  %call311 = call i32 @get_bits(%struct.GetBitContext* %674, i32 5), !dbg !13388
  store i32 %call311, i32* %min_val, align 4, !dbg !13389
  store i32 0, i32* %sb, align 4, !dbg !13390
  br label %for.cond312, !dbg !13392

for.cond312:                                      ; preds = %for.inc336, %if.else308
  %675 = load i32, i32* %sb, align 4, !dbg !13393
  %676 = load i32, i32* %coded_subbands.addr, align 4, !dbg !13396
  %cmp313 = icmp slt i32 %675, %676, !dbg !13397
  br i1 %cmp313, label %for.body315, label %for.end338, !dbg !13398

for.body315:                                      ; preds = %for.cond312
  store i32 0, i32* %i, align 4, !dbg !13399
  br label %for.cond316, !dbg !13401

for.cond316:                                      ; preds = %for.inc333, %for.body315
  %677 = load i32, i32* %i, align 4, !dbg !13402
  %678 = load i32, i32* %sb, align 4, !dbg !13405
  %idxprom317 = sext i32 %678 to i64, !dbg !13406
  %679 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !13406
  %gain_data318 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %679, i32 0, i32 14, !dbg !13407
  %680 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data318, align 8, !dbg !13407
  %arrayidx319 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %680, i64 %idxprom317, !dbg !13406
  %num_points320 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx319, i32 0, i32 0, !dbg !13408
  %681 = load i32, i32* %num_points320, align 4, !dbg !13408
  %cmp321 = icmp slt i32 %677, %681, !dbg !13409
  br i1 %cmp321, label %for.body323, label %for.end335, !dbg !13410

for.body323:                                      ; preds = %for.cond316
  %682 = load i32, i32* %min_val, align 4, !dbg !13411
  %683 = load i32, i32* %i, align 4, !dbg !13412
  %add324 = add nsw i32 %682, %683, !dbg !13413
  %684 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13414
  %685 = load i32, i32* %delta_bits, align 4, !dbg !13415
  %call325 = call i32 @get_bits(%struct.GetBitContext* %684, i32 %685), !dbg !13416
  %add326 = add i32 %add324, %call325, !dbg !13417
  %686 = load i32, i32* %i, align 4, !dbg !13418
  %idxprom327 = sext i32 %686 to i64, !dbg !13419
  %687 = load i32, i32* %sb, align 4, !dbg !13420
  %idxprom328 = sext i32 %687 to i64, !dbg !13419
  %688 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !13419
  %gain_data329 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %688, i32 0, i32 14, !dbg !13421
  %689 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data329, align 8, !dbg !13421
  %arrayidx330 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %689, i64 %idxprom328, !dbg !13419
  %loc_code331 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx330, i32 0, i32 2, !dbg !13422
  %arrayidx332 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code331, i64 0, i64 %idxprom327, !dbg !13419
  store i32 %add326, i32* %arrayidx332, align 4, !dbg !13423
  br label %for.inc333, !dbg !13419

for.inc333:                                       ; preds = %for.body323
  %690 = load i32, i32* %i, align 4, !dbg !13424
  %inc334 = add nsw i32 %690, 1, !dbg !13424
  store i32 %inc334, i32* %i, align 4, !dbg !13424
  br label %for.cond316, !dbg !13426, !llvm.loop !13427

for.end335:                                       ; preds = %for.cond316
  br label %for.inc336, !dbg !13429

for.inc336:                                       ; preds = %for.end335
  %691 = load i32, i32* %sb, align 4, !dbg !13431
  %inc337 = add nsw i32 %691, 1, !dbg !13431
  store i32 %inc337, i32* %sb, align 4, !dbg !13431
  br label %for.cond312, !dbg !13433, !llvm.loop !13434

for.end338:                                       ; preds = %for.cond312
  br label %if.end339

if.end339:                                        ; preds = %for.end338, %for.end307
  br label %sw.epilog, !dbg !13436

sw.epilog:                                        ; preds = %entry, %if.end339, %if.end262, %if.end115, %for.end13
  store i32 0, i32* %sb, align 4, !dbg !13437
  br label %for.cond340, !dbg !13439

for.cond340:                                      ; preds = %for.inc385, %sw.epilog
  %692 = load i32, i32* %sb, align 4, !dbg !13440
  %693 = load i32, i32* %coded_subbands.addr, align 4, !dbg !13443
  %cmp341 = icmp slt i32 %692, %693, !dbg !13444
  br i1 %cmp341, label %for.body343, label %for.end387, !dbg !13445

for.body343:                                      ; preds = %for.cond340
  %694 = load i32, i32* %sb, align 4, !dbg !13446
  %idxprom344 = sext i32 %694 to i64, !dbg !13448
  %695 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !13448
  %gain_data345 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %695, i32 0, i32 14, !dbg !13449
  %696 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data345, align 8, !dbg !13449
  %arrayidx346 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %696, i64 %idxprom344, !dbg !13448
  store %struct.AtracGainInfo* %arrayidx346, %struct.AtracGainInfo** %dst, align 8, !dbg !13450
  store i32 0, i32* %i, align 4, !dbg !13451
  br label %for.cond347, !dbg !13453

for.cond347:                                      ; preds = %for.inc382, %for.body343
  %697 = load i32, i32* %i, align 4, !dbg !13454
  %698 = load i32, i32* %sb, align 4, !dbg !13457
  %idxprom348 = sext i32 %698 to i64, !dbg !13458
  %699 = load %struct.Atrac3pChanParams*, %struct.Atrac3pChanParams** %chan, align 8, !dbg !13458
  %gain_data349 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %699, i32 0, i32 14, !dbg !13459
  %700 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data349, align 8, !dbg !13459
  %arrayidx350 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %700, i64 %idxprom348, !dbg !13458
  %num_points351 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %arrayidx350, i32 0, i32 0, !dbg !13460
  %701 = load i32, i32* %num_points351, align 4, !dbg !13460
  %cmp352 = icmp slt i32 %697, %701, !dbg !13461
  br i1 %cmp352, label %for.body354, label %for.end384, !dbg !13462

for.body354:                                      ; preds = %for.cond347
  %702 = load i32, i32* %i, align 4, !dbg !13463
  %idxprom355 = sext i32 %702 to i64, !dbg !13466
  %703 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13466
  %loc_code356 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %703, i32 0, i32 2, !dbg !13467
  %arrayidx357 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code356, i64 0, i64 %idxprom355, !dbg !13466
  %704 = load i32, i32* %arrayidx357, align 4, !dbg !13466
  %cmp358 = icmp slt i32 %704, 0, !dbg !13468
  br i1 %cmp358, label %if.then377, label %lor.lhs.false360, !dbg !13469

lor.lhs.false360:                                 ; preds = %for.body354
  %705 = load i32, i32* %i, align 4, !dbg !13470
  %idxprom361 = sext i32 %705 to i64, !dbg !13472
  %706 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13472
  %loc_code362 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %706, i32 0, i32 2, !dbg !13473
  %arrayidx363 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code362, i64 0, i64 %idxprom361, !dbg !13472
  %707 = load i32, i32* %arrayidx363, align 4, !dbg !13472
  %cmp364 = icmp sgt i32 %707, 31, !dbg !13474
  br i1 %cmp364, label %if.then377, label %lor.lhs.false366, !dbg !13475

lor.lhs.false366:                                 ; preds = %lor.lhs.false360
  %708 = load i32, i32* %i, align 4, !dbg !13476
  %tobool367 = icmp ne i32 %708, 0, !dbg !13476
  br i1 %tobool367, label %land.lhs.true, label %if.end381, !dbg !13477

land.lhs.true:                                    ; preds = %lor.lhs.false366
  %709 = load i32, i32* %i, align 4, !dbg !13478
  %idxprom368 = sext i32 %709 to i64, !dbg !13479
  %710 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13479
  %loc_code369 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %710, i32 0, i32 2, !dbg !13480
  %arrayidx370 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code369, i64 0, i64 %idxprom368, !dbg !13479
  %711 = load i32, i32* %arrayidx370, align 4, !dbg !13479
  %712 = load i32, i32* %i, align 4, !dbg !13481
  %sub371 = sub nsw i32 %712, 1, !dbg !13482
  %idxprom372 = sext i32 %sub371 to i64, !dbg !13483
  %713 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13483
  %loc_code373 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %713, i32 0, i32 2, !dbg !13484
  %arrayidx374 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code373, i64 0, i64 %idxprom372, !dbg !13483
  %714 = load i32, i32* %arrayidx374, align 4, !dbg !13483
  %cmp375 = icmp sle i32 %711, %714, !dbg !13485
  br i1 %cmp375, label %if.then377, label %if.end381, !dbg !13486

if.then377:                                       ; preds = %land.lhs.true, %lor.lhs.false360, %for.body354
  %715 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !13488
  %716 = bitcast %struct.AVCodecContext* %715 to i8*, !dbg !13488
  %717 = load i32, i32* %ch_num.addr, align 4, !dbg !13490
  %718 = load i32, i32* %sb, align 4, !dbg !13491
  %719 = load i32, i32* %i, align 4, !dbg !13492
  %720 = load i32, i32* %i, align 4, !dbg !13493
  %idxprom378 = sext i32 %720 to i64, !dbg !13494
  %721 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst, align 8, !dbg !13494
  %loc_code379 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %721, i32 0, i32 2, !dbg !13495
  %arrayidx380 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code379, i64 0, i64 %idxprom378, !dbg !13494
  %722 = load i32, i32* %arrayidx380, align 4, !dbg !13494
  call void (i8*, i32, i8*, ...) @av_log(i8* %716, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i32 0, i32 0), i32 %717, i32 %718, i32 %719, i32 %722), !dbg !13496
  store i32 -1094995529, i32* %retval, align 4, !dbg !13497
  br label %return, !dbg !13497

if.end381:                                        ; preds = %land.lhs.true, %lor.lhs.false366
  br label %for.inc382, !dbg !13498

for.inc382:                                       ; preds = %if.end381
  %723 = load i32, i32* %i, align 4, !dbg !13499
  %inc383 = add nsw i32 %723, 1, !dbg !13499
  store i32 %inc383, i32* %i, align 4, !dbg !13499
  br label %for.cond347, !dbg !13501, !llvm.loop !13502

for.end384:                                       ; preds = %for.cond347
  br label %for.inc385, !dbg !13504

for.inc385:                                       ; preds = %for.end384
  %724 = load i32, i32* %sb, align 4, !dbg !13505
  %inc386 = add nsw i32 %724, 1, !dbg !13505
  store i32 %inc386, i32* %sb, align 4, !dbg !13505
  br label %for.cond340, !dbg !13507, !llvm.loop !13508

for.end387:                                       ; preds = %for.cond340
  store i32 0, i32* %retval, align 4, !dbg !13510
  br label %return, !dbg !13510

return:                                           ; preds = %for.end387, %if.then377
  %725 = load i32, i32* %retval, align 4, !dbg !13511
  ret i32 %725, !dbg !13511
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @gainc_level_mode1m(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, %struct.AtracGainInfo* %dst) #4 !dbg !13512 {
entry:
  %x.addr.i96.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i9, metadata !2531, metadata !1324), !dbg !13515
  %x.addr.i81.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i10, metadata !2531, metadata !1324), !dbg !13521
  %x.addr.i.i11 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i11, metadata !2531, metadata !1324), !dbg !13523
  %s.addr.i12 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i12, metadata !3291, metadata !1324), !dbg !13525
  %table.addr.i13 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i13, metadata !3293, metadata !1324), !dbg !13526
  %bits.addr.i14 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i14, metadata !3295, metadata !1324), !dbg !13527
  %max_depth.addr.i15 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i15, metadata !3297, metadata !1324), !dbg !13528
  %code.i16 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i16, metadata !3299, metadata !1324), !dbg !13529
  %re_index.i17 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i17, metadata !3301, metadata !1324), !dbg !13530
  %re_cache.i18 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i18, metadata !3303, metadata !1324), !dbg !13531
  %re_size_plus8.i19 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i19, metadata !3305, metadata !1324), !dbg !13532
  %n.i20 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i20, metadata !3307, metadata !1324), !dbg !13533
  %nb_bits.i21 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i21, metadata !3309, metadata !1324), !dbg !13534
  %index1.i22 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i22, metadata !3311, metadata !1324), !dbg !13535
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !13536
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !13540
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !13542
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !13544
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !13545
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !13546
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !13547
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !13548
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !13549
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !13550
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !13551
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !13552
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !13553
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !13554
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %dst.addr = alloca %struct.AtracGainInfo*, align 8
  %i = alloca i32, align 4
  %delta = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !13555, metadata !1324), !dbg !13556
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !13557, metadata !1324), !dbg !13558
  store %struct.AtracGainInfo* %dst, %struct.AtracGainInfo** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %dst.addr, metadata !13559, metadata !1324), !dbg !13560
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13561, metadata !1324), !dbg !13562
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !13563, metadata !1324), !dbg !13564
  %0 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !13565
  %num_points = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %0, i32 0, i32 0, !dbg !13566
  %1 = load i32, i32* %num_points, align 4, !dbg !13566
  %cmp = icmp sgt i32 %1, 0, !dbg !13567
  br i1 %cmp, label %if.then, label %if.end, !dbg !13568

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13569
  %3 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 2, i32 1), align 8, !dbg !13570
  %4 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 2, i32 0), align 16, !dbg !13571
  store %struct.GetBitContext* %2, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13572
  store [2 x i16]* %3, [2 x i16]** %table.addr.i, align 8, !dbg !13572
  store i32 %4, i32* %bits.addr.i, align 4, !dbg !13572
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !13572
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13573
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !13574
  %6 = load i32, i32* %index.i, align 8, !dbg !13574
  store i32 %6, i32* %re_index.i, align 4, !dbg !13549
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13575
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 4, !dbg !13576
  %8 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !13576
  store i32 %8, i32* %re_size_plus8.i, align 4, !dbg !13551
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13577
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 0, !dbg !13578
  %10 = load i8*, i8** %buffer.i, align 8, !dbg !13578
  %11 = load i32, i32* %re_index.i, align 4, !dbg !13579
  %shr.i = lshr i32 %11, 3, !dbg !13580
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !13581
  %add.ptr.i = getelementptr inbounds i8, i8* %10, i64 %idx.ext.i, !dbg !13581
  %12 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !13582
  %l.i = bitcast %union.unaligned_32* %12 to i32*, !dbg !13582
  %13 = load i32, i32* %l.i, align 1, !dbg !13582
  store i32 %13, i32* %x.addr.i.i, align 4, !dbg !13583
  %14 = load i32, i32* %x.addr.i.i, align 4, !dbg !13584
  %shl.i.i = shl i32 %14, 8, !dbg !13585
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !13586
  %15 = load i32, i32* %x.addr.i.i, align 4, !dbg !13587
  %shr.i.i = lshr i32 %15, 8, !dbg !13588
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !13589
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !13590
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !13591
  %16 = load i32, i32* %x.addr.i.i, align 4, !dbg !13592
  %shr3.i.i = lshr i32 %16, 16, !dbg !13593
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !13594
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !13595
  %17 = load i32, i32* %x.addr.i.i, align 4, !dbg !13596
  %shr6.i.i = lshr i32 %17, 16, !dbg !13597
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !13598
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !13599
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !13600
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !13601
  %18 = load i32, i32* %re_index.i, align 4, !dbg !13602
  %and.i = and i32 %18, 7, !dbg !13603
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !13604
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !13605
  %19 = load i32, i32* %re_cache.i, align 4, !dbg !13606
  %20 = load i32, i32* %bits.addr.i, align 4, !dbg !13607
  %conv.i = trunc i32 %20 to i8, !dbg !13607
  %call2.i = call i32 @NEG_USR32(i32 %19, i8 signext %conv.i) #9, !dbg !13608
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !13609
  %21 = load i32, i32* %index1.i, align 4, !dbg !13610
  %idxprom.i = zext i32 %21 to i64, !dbg !13611
  %22 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13611
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %22, i64 %idxprom.i, !dbg !13611
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !13611
  %23 = load i16, i16* %arrayidx3.i, align 2, !dbg !13611
  %conv4.i = sext i16 %23 to i32, !dbg !13611
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !13612
  %24 = load i32, i32* %index1.i, align 4, !dbg !13613
  %idxprom5.i = zext i32 %24 to i64, !dbg !13614
  %25 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13614
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %25, i64 %idxprom5.i, !dbg !13614
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !13614
  %26 = load i16, i16* %arrayidx7.i, align 2, !dbg !13614
  %conv8.i = sext i16 %26 to i32, !dbg !13614
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !13615
  %27 = load i32, i32* %max_depth.addr.i, align 4, !dbg !13616
  %cmp.i = icmp sgt i32 %27, 1, !dbg !13617
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !13618

land.lhs.true.i:                                  ; preds = %if.then
  %28 = load i32, i32* %n.i, align 4, !dbg !13619
  %cmp10.i = icmp slt i32 %28, 0, !dbg !13620
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !13621

if.then.i:                                        ; preds = %land.lhs.true.i
  %29 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13622
  %30 = load i32, i32* %re_index.i, align 4, !dbg !13623
  %31 = load i32, i32* %bits.addr.i, align 4, !dbg !13624
  %add.i = add i32 %30, %31, !dbg !13625
  %cmp12.i = icmp ugt i32 %29, %add.i, !dbg !13626
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !13627

cond.true.i:                                      ; preds = %if.then.i
  %32 = load i32, i32* %re_index.i, align 4, !dbg !13628
  %33 = load i32, i32* %bits.addr.i, align 4, !dbg !13629
  %add14.i = add i32 %32, %33, !dbg !13630
  br label %cond.end.i, !dbg !13631

cond.false.i:                                     ; preds = %if.then.i
  %34 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13632
  br label %cond.end.i, !dbg !13633

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %34, %cond.false.i ], !dbg !13634
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !13635
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13636
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %35, i32 0, i32 0, !dbg !13637
  %36 = load i8*, i8** %buffer15.i, align 8, !dbg !13637
  %37 = load i32, i32* %re_index.i, align 4, !dbg !13638
  %shr16.i = lshr i32 %37, 3, !dbg !13639
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !13640
  %add.ptr18.i = getelementptr inbounds i8, i8* %36, i64 %idx.ext17.i, !dbg !13640
  %38 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !13641
  %l19.i = bitcast %union.unaligned_32* %38 to i32*, !dbg !13641
  %39 = load i32, i32* %l19.i, align 1, !dbg !13641
  store i32 %39, i32* %x.addr.i81.i, align 4, !dbg !13642
  %40 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13643
  %shl.i82.i = shl i32 %40, 8, !dbg !13644
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !13645
  %41 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13646
  %shr.i84.i = lshr i32 %41, 8, !dbg !13647
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !13648
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !13649
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !13650
  %42 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13651
  %shr3.i88.i = lshr i32 %42, 16, !dbg !13652
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !13653
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !13654
  %43 = load i32, i32* %x.addr.i81.i, align 4, !dbg !13655
  %shr6.i91.i = lshr i32 %43, 16, !dbg !13656
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !13657
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !13658
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !13659
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !13660
  %44 = load i32, i32* %re_index.i, align 4, !dbg !13661
  %and21.i = and i32 %44, 7, !dbg !13662
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !13663
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !13664
  %45 = load i32, i32* %n.i, align 4, !dbg !13665
  %sub.i = sub nsw i32 0, %45, !dbg !13666
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !13667
  %46 = load i32, i32* %re_cache.i, align 4, !dbg !13668
  %47 = load i32, i32* %nb_bits.i, align 4, !dbg !13669
  %conv23.i = trunc i32 %47 to i8, !dbg !13669
  %call24.i = call i32 @NEG_USR32(i32 %46, i8 signext %conv23.i) #9, !dbg !13670
  %48 = load i32, i32* %code.i, align 4, !dbg !13671
  %add25.i = add i32 %call24.i, %48, !dbg !13672
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !13673
  %49 = load i32, i32* %index1.i, align 4, !dbg !13674
  %idxprom26.i = zext i32 %49 to i64, !dbg !13675
  %50 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13675
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %50, i64 %idxprom26.i, !dbg !13675
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !13675
  %51 = load i16, i16* %arrayidx28.i, align 2, !dbg !13675
  %conv29.i = sext i16 %51 to i32, !dbg !13675
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !13676
  %52 = load i32, i32* %index1.i, align 4, !dbg !13677
  %idxprom30.i = zext i32 %52 to i64, !dbg !13678
  %53 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13678
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %53, i64 %idxprom30.i, !dbg !13678
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !13678
  %54 = load i16, i16* %arrayidx32.i, align 2, !dbg !13678
  %conv33.i = sext i16 %54 to i32, !dbg !13678
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !13679
  %55 = load i32, i32* %max_depth.addr.i, align 4, !dbg !13680
  %cmp34.i = icmp sgt i32 %55, 2, !dbg !13681
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !13682

land.lhs.true36.i:                                ; preds = %cond.end.i
  %56 = load i32, i32* %n.i, align 4, !dbg !13683
  %cmp37.i = icmp slt i32 %56, 0, !dbg !13684
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !13685

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %57 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13686
  %58 = load i32, i32* %re_index.i, align 4, !dbg !13687
  %59 = load i32, i32* %nb_bits.i, align 4, !dbg !13688
  %add40.i = add i32 %58, %59, !dbg !13689
  %cmp41.i = icmp ugt i32 %57, %add40.i, !dbg !13690
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !13691

cond.true43.i:                                    ; preds = %if.then39.i
  %60 = load i32, i32* %re_index.i, align 4, !dbg !13692
  %61 = load i32, i32* %nb_bits.i, align 4, !dbg !13693
  %add44.i = add i32 %60, %61, !dbg !13694
  br label %cond.end46.i, !dbg !13695

cond.false45.i:                                   ; preds = %if.then39.i
  %62 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13696
  br label %cond.end46.i, !dbg !13697

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %62, %cond.false45.i ], !dbg !13698
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !13699
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13700
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %63, i32 0, i32 0, !dbg !13701
  %64 = load i8*, i8** %buffer48.i, align 8, !dbg !13701
  %65 = load i32, i32* %re_index.i, align 4, !dbg !13702
  %shr49.i = lshr i32 %65, 3, !dbg !13703
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !13704
  %add.ptr51.i = getelementptr inbounds i8, i8* %64, i64 %idx.ext50.i, !dbg !13704
  %66 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !13705
  %l52.i = bitcast %union.unaligned_32* %66 to i32*, !dbg !13705
  %67 = load i32, i32* %l52.i, align 1, !dbg !13705
  store i32 %67, i32* %x.addr.i96.i, align 4, !dbg !13706
  %68 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13707
  %shl.i97.i = shl i32 %68, 8, !dbg !13708
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !13709
  %69 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13710
  %shr.i99.i = lshr i32 %69, 8, !dbg !13711
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !13712
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !13713
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !13714
  %70 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13715
  %shr3.i103.i = lshr i32 %70, 16, !dbg !13716
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !13717
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !13718
  %71 = load i32, i32* %x.addr.i96.i, align 4, !dbg !13719
  %shr6.i106.i = lshr i32 %71, 16, !dbg !13720
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !13721
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !13722
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !13723
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !13724
  %72 = load i32, i32* %re_index.i, align 4, !dbg !13725
  %and54.i = and i32 %72, 7, !dbg !13726
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !13727
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !13728
  %73 = load i32, i32* %n.i, align 4, !dbg !13729
  %sub56.i = sub nsw i32 0, %73, !dbg !13730
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !13731
  %74 = load i32, i32* %re_cache.i, align 4, !dbg !13732
  %75 = load i32, i32* %nb_bits.i, align 4, !dbg !13733
  %conv57.i = trunc i32 %75 to i8, !dbg !13733
  %call58.i = call i32 @NEG_USR32(i32 %74, i8 signext %conv57.i) #9, !dbg !13734
  %76 = load i32, i32* %code.i, align 4, !dbg !13735
  %add59.i = add i32 %call58.i, %76, !dbg !13736
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !13737
  %77 = load i32, i32* %index1.i, align 4, !dbg !13738
  %idxprom60.i = zext i32 %77 to i64, !dbg !13739
  %78 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13739
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %78, i64 %idxprom60.i, !dbg !13739
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !13739
  %79 = load i16, i16* %arrayidx62.i, align 2, !dbg !13739
  %conv63.i = sext i16 %79 to i32, !dbg !13739
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !13740
  %80 = load i32, i32* %index1.i, align 4, !dbg !13741
  %idxprom64.i = zext i32 %80 to i64, !dbg !13742
  %81 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !13742
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %81, i64 %idxprom64.i, !dbg !13742
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !13742
  %82 = load i16, i16* %arrayidx66.i, align 2, !dbg !13742
  %conv67.i = sext i16 %82 to i32, !dbg !13742
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !13743
  br label %if.end.i, !dbg !13744

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !13745

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.then
  %83 = load i32, i32* %n.i, align 4, !dbg !13746
  %84 = load i32, i32* %re_cache.i, align 4, !dbg !13747
  %shl70.i = shl i32 %84, %83, !dbg !13747
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !13747
  %85 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13748
  %86 = load i32, i32* %re_index.i, align 4, !dbg !13749
  %87 = load i32, i32* %n.i, align 4, !dbg !13750
  %add71.i = add i32 %86, %87, !dbg !13751
  %cmp72.i = icmp ugt i32 %85, %add71.i, !dbg !13752
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !13753

cond.true74.i:                                    ; preds = %if.end68.i
  %88 = load i32, i32* %re_index.i, align 4, !dbg !13754
  %89 = load i32, i32* %n.i, align 4, !dbg !13755
  %add75.i = add i32 %88, %89, !dbg !13756
  br label %get_vlc2.exit, !dbg !13757

cond.false76.i:                                   ; preds = %if.end68.i
  %90 = load i32, i32* %re_size_plus8.i, align 4, !dbg !13758
  br label %get_vlc2.exit, !dbg !13759

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %90, %cond.false76.i ], !dbg !13760
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !13761
  %91 = load i32, i32* %re_index.i, align 4, !dbg !13762
  %92 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !13763
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %92, i32 0, i32 2, !dbg !13764
  store i32 %91, i32* %index80.i, align 8, !dbg !13765
  %93 = load i32, i32* %code.i, align 4, !dbg !13766
  %94 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !13767
  %lev_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %94, i32 0, i32 1, !dbg !13768
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code, i64 0, i64 0, !dbg !13767
  store i32 %93, i32* %arrayidx, align 4, !dbg !13769
  br label %if.end, !dbg !13767

if.end:                                           ; preds = %get_vlc2.exit, %entry
  store i32 1, i32* %i, align 4, !dbg !13770
  br label %for.cond, !dbg !13771

for.cond:                                         ; preds = %for.inc, %if.end
  %95 = load i32, i32* %i, align 4, !dbg !13772
  %96 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !13774
  %num_points1 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %96, i32 0, i32 0, !dbg !13775
  %97 = load i32, i32* %num_points1, align 4, !dbg !13775
  %cmp2 = icmp slt i32 %95, %97, !dbg !13776
  br i1 %cmp2, label %for.body, label %for.end, !dbg !13777

for.body:                                         ; preds = %for.cond
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !13778
  %99 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 3, i32 1), align 8, !dbg !13779
  %100 = load i32, i32* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 3, i32 0), align 8, !dbg !13780
  store %struct.GetBitContext* %98, %struct.GetBitContext** %s.addr.i12, align 8, !dbg !13781
  store [2 x i16]* %99, [2 x i16]** %table.addr.i13, align 8, !dbg !13781
  store i32 %100, i32* %bits.addr.i14, align 4, !dbg !13781
  store i32 1, i32* %max_depth.addr.i15, align 4, !dbg !13781
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i12, align 8, !dbg !13782
  %index.i23 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %101, i32 0, i32 2, !dbg !13783
  %102 = load i32, i32* %index.i23, align 8, !dbg !13783
  store i32 %102, i32* %re_index.i17, align 4, !dbg !13530
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i12, align 8, !dbg !13784
  %size_in_bits_plus8.i24 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %103, i32 0, i32 4, !dbg !13785
  %104 = load i32, i32* %size_in_bits_plus8.i24, align 8, !dbg !13785
  store i32 %104, i32* %re_size_plus8.i19, align 4, !dbg !13532
  %105 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i12, align 8, !dbg !13786
  %buffer.i25 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %105, i32 0, i32 0, !dbg !13787
  %106 = load i8*, i8** %buffer.i25, align 8, !dbg !13787
  %107 = load i32, i32* %re_index.i17, align 4, !dbg !13788
  %shr.i26 = lshr i32 %107, 3, !dbg !13789
  %idx.ext.i27 = zext i32 %shr.i26 to i64, !dbg !13790
  %add.ptr.i28 = getelementptr inbounds i8, i8* %106, i64 %idx.ext.i27, !dbg !13790
  %108 = bitcast i8* %add.ptr.i28 to %union.unaligned_32*, !dbg !13791
  %l.i29 = bitcast %union.unaligned_32* %108 to i32*, !dbg !13791
  %109 = load i32, i32* %l.i29, align 1, !dbg !13791
  store i32 %109, i32* %x.addr.i.i11, align 4, !dbg !13792
  %110 = load i32, i32* %x.addr.i.i11, align 4, !dbg !13793
  %shl.i.i30 = shl i32 %110, 8, !dbg !13794
  %and.i.i31 = and i32 %shl.i.i30, 65280, !dbg !13795
  %111 = load i32, i32* %x.addr.i.i11, align 4, !dbg !13796
  %shr.i.i32 = lshr i32 %111, 8, !dbg !13797
  %and1.i.i33 = and i32 %shr.i.i32, 255, !dbg !13798
  %or.i.i34 = or i32 %and.i.i31, %and1.i.i33, !dbg !13799
  %shl2.i.i35 = shl i32 %or.i.i34, 16, !dbg !13800
  %112 = load i32, i32* %x.addr.i.i11, align 4, !dbg !13801
  %shr3.i.i36 = lshr i32 %112, 16, !dbg !13802
  %shl4.i.i37 = shl i32 %shr3.i.i36, 8, !dbg !13803
  %and5.i.i38 = and i32 %shl4.i.i37, 65280, !dbg !13804
  %113 = load i32, i32* %x.addr.i.i11, align 4, !dbg !13805
  %shr6.i.i39 = lshr i32 %113, 16, !dbg !13806
  %shr7.i.i40 = lshr i32 %shr6.i.i39, 8, !dbg !13807
  %and8.i.i41 = and i32 %shr7.i.i40, 255, !dbg !13808
  %or9.i.i42 = or i32 %and5.i.i38, %and8.i.i41, !dbg !13809
  %or10.i.i43 = or i32 %shl2.i.i35, %or9.i.i42, !dbg !13810
  %114 = load i32, i32* %re_index.i17, align 4, !dbg !13811
  %and.i44 = and i32 %114, 7, !dbg !13812
  %shl.i45 = shl i32 %or10.i.i43, %and.i44, !dbg !13813
  store i32 %shl.i45, i32* %re_cache.i18, align 4, !dbg !13814
  %115 = load i32, i32* %re_cache.i18, align 4, !dbg !13815
  %116 = load i32, i32* %bits.addr.i14, align 4, !dbg !13816
  %conv.i46 = trunc i32 %116 to i8, !dbg !13816
  %call2.i47 = call i32 @NEG_USR32(i32 %115, i8 signext %conv.i46) #9, !dbg !13817
  store i32 %call2.i47, i32* %index1.i22, align 4, !dbg !13818
  %117 = load i32, i32* %index1.i22, align 4, !dbg !13819
  %idxprom.i48 = zext i32 %117 to i64, !dbg !13820
  %118 = load [2 x i16]*, [2 x i16]** %table.addr.i13, align 8, !dbg !13820
  %arrayidx.i49 = getelementptr inbounds [2 x i16], [2 x i16]* %118, i64 %idxprom.i48, !dbg !13820
  %arrayidx3.i50 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i49, i64 0, i64 0, !dbg !13820
  %119 = load i16, i16* %arrayidx3.i50, align 2, !dbg !13820
  %conv4.i51 = sext i16 %119 to i32, !dbg !13820
  store i32 %conv4.i51, i32* %code.i16, align 4, !dbg !13821
  %120 = load i32, i32* %index1.i22, align 4, !dbg !13822
  %idxprom5.i52 = zext i32 %120 to i64, !dbg !13823
  %121 = load [2 x i16]*, [2 x i16]** %table.addr.i13, align 8, !dbg !13823
  %arrayidx6.i53 = getelementptr inbounds [2 x i16], [2 x i16]* %121, i64 %idxprom5.i52, !dbg !13823
  %arrayidx7.i54 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i53, i64 0, i64 1, !dbg !13823
  %122 = load i16, i16* %arrayidx7.i54, align 2, !dbg !13823
  %conv8.i55 = sext i16 %122 to i32, !dbg !13823
  store i32 %conv8.i55, i32* %n.i20, align 4, !dbg !13824
  %123 = load i32, i32* %max_depth.addr.i15, align 4, !dbg !13825
  %cmp.i56 = icmp sgt i32 %123, 1, !dbg !13826
  br i1 %cmp.i56, label %land.lhs.true.i58, label %if.end68.i145, !dbg !13827

land.lhs.true.i58:                                ; preds = %for.body
  %124 = load i32, i32* %n.i20, align 4, !dbg !13828
  %cmp10.i57 = icmp slt i32 %124, 0, !dbg !13829
  br i1 %cmp10.i57, label %if.then.i61, label %if.end68.i145, !dbg !13830

if.then.i61:                                      ; preds = %land.lhs.true.i58
  %125 = load i32, i32* %re_size_plus8.i19, align 4, !dbg !13831
  %126 = load i32, i32* %re_index.i17, align 4, !dbg !13832
  %127 = load i32, i32* %bits.addr.i14, align 4, !dbg !13833
  %add.i59 = add i32 %126, %127, !dbg !13834
  %cmp12.i60 = icmp ugt i32 %125, %add.i59, !dbg !13835
  br i1 %cmp12.i60, label %cond.true.i63, label %cond.false.i64, !dbg !13836

cond.true.i63:                                    ; preds = %if.then.i61
  %128 = load i32, i32* %re_index.i17, align 4, !dbg !13837
  %129 = load i32, i32* %bits.addr.i14, align 4, !dbg !13838
  %add14.i62 = add i32 %128, %129, !dbg !13839
  br label %cond.end.i100, !dbg !13840

cond.false.i64:                                   ; preds = %if.then.i61
  %130 = load i32, i32* %re_size_plus8.i19, align 4, !dbg !13841
  br label %cond.end.i100, !dbg !13842

cond.end.i100:                                    ; preds = %cond.false.i64, %cond.true.i63
  %cond.i65 = phi i32 [ %add14.i62, %cond.true.i63 ], [ %130, %cond.false.i64 ], !dbg !13843
  store i32 %cond.i65, i32* %re_index.i17, align 4, !dbg !13844
  %131 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i12, align 8, !dbg !13845
  %buffer15.i66 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %131, i32 0, i32 0, !dbg !13846
  %132 = load i8*, i8** %buffer15.i66, align 8, !dbg !13846
  %133 = load i32, i32* %re_index.i17, align 4, !dbg !13847
  %shr16.i67 = lshr i32 %133, 3, !dbg !13848
  %idx.ext17.i68 = zext i32 %shr16.i67 to i64, !dbg !13849
  %add.ptr18.i69 = getelementptr inbounds i8, i8* %132, i64 %idx.ext17.i68, !dbg !13849
  %134 = bitcast i8* %add.ptr18.i69 to %union.unaligned_32*, !dbg !13850
  %l19.i70 = bitcast %union.unaligned_32* %134 to i32*, !dbg !13850
  %135 = load i32, i32* %l19.i70, align 1, !dbg !13850
  store i32 %135, i32* %x.addr.i81.i10, align 4, !dbg !13851
  %136 = load i32, i32* %x.addr.i81.i10, align 4, !dbg !13852
  %shl.i82.i71 = shl i32 %136, 8, !dbg !13853
  %and.i83.i72 = and i32 %shl.i82.i71, 65280, !dbg !13854
  %137 = load i32, i32* %x.addr.i81.i10, align 4, !dbg !13855
  %shr.i84.i73 = lshr i32 %137, 8, !dbg !13856
  %and1.i85.i74 = and i32 %shr.i84.i73, 255, !dbg !13857
  %or.i86.i75 = or i32 %and.i83.i72, %and1.i85.i74, !dbg !13858
  %shl2.i87.i76 = shl i32 %or.i86.i75, 16, !dbg !13859
  %138 = load i32, i32* %x.addr.i81.i10, align 4, !dbg !13860
  %shr3.i88.i77 = lshr i32 %138, 16, !dbg !13861
  %shl4.i89.i78 = shl i32 %shr3.i88.i77, 8, !dbg !13862
  %and5.i90.i79 = and i32 %shl4.i89.i78, 65280, !dbg !13863
  %139 = load i32, i32* %x.addr.i81.i10, align 4, !dbg !13864
  %shr6.i91.i80 = lshr i32 %139, 16, !dbg !13865
  %shr7.i92.i81 = lshr i32 %shr6.i91.i80, 8, !dbg !13866
  %and8.i93.i82 = and i32 %shr7.i92.i81, 255, !dbg !13867
  %or9.i94.i83 = or i32 %and5.i90.i79, %and8.i93.i82, !dbg !13868
  %or10.i95.i84 = or i32 %shl2.i87.i76, %or9.i94.i83, !dbg !13869
  %140 = load i32, i32* %re_index.i17, align 4, !dbg !13870
  %and21.i85 = and i32 %140, 7, !dbg !13871
  %shl22.i86 = shl i32 %or10.i95.i84, %and21.i85, !dbg !13872
  store i32 %shl22.i86, i32* %re_cache.i18, align 4, !dbg !13873
  %141 = load i32, i32* %n.i20, align 4, !dbg !13874
  %sub.i87 = sub nsw i32 0, %141, !dbg !13875
  store i32 %sub.i87, i32* %nb_bits.i21, align 4, !dbg !13876
  %142 = load i32, i32* %re_cache.i18, align 4, !dbg !13877
  %143 = load i32, i32* %nb_bits.i21, align 4, !dbg !13878
  %conv23.i88 = trunc i32 %143 to i8, !dbg !13878
  %call24.i89 = call i32 @NEG_USR32(i32 %142, i8 signext %conv23.i88) #9, !dbg !13879
  %144 = load i32, i32* %code.i16, align 4, !dbg !13880
  %add25.i90 = add i32 %call24.i89, %144, !dbg !13881
  store i32 %add25.i90, i32* %index1.i22, align 4, !dbg !13882
  %145 = load i32, i32* %index1.i22, align 4, !dbg !13883
  %idxprom26.i91 = zext i32 %145 to i64, !dbg !13884
  %146 = load [2 x i16]*, [2 x i16]** %table.addr.i13, align 8, !dbg !13884
  %arrayidx27.i92 = getelementptr inbounds [2 x i16], [2 x i16]* %146, i64 %idxprom26.i91, !dbg !13884
  %arrayidx28.i93 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i92, i64 0, i64 0, !dbg !13884
  %147 = load i16, i16* %arrayidx28.i93, align 2, !dbg !13884
  %conv29.i94 = sext i16 %147 to i32, !dbg !13884
  store i32 %conv29.i94, i32* %code.i16, align 4, !dbg !13885
  %148 = load i32, i32* %index1.i22, align 4, !dbg !13886
  %idxprom30.i95 = zext i32 %148 to i64, !dbg !13887
  %149 = load [2 x i16]*, [2 x i16]** %table.addr.i13, align 8, !dbg !13887
  %arrayidx31.i96 = getelementptr inbounds [2 x i16], [2 x i16]* %149, i64 %idxprom30.i95, !dbg !13887
  %arrayidx32.i97 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i96, i64 0, i64 1, !dbg !13887
  %150 = load i16, i16* %arrayidx32.i97, align 2, !dbg !13887
  %conv33.i98 = sext i16 %150 to i32, !dbg !13887
  store i32 %conv33.i98, i32* %n.i20, align 4, !dbg !13888
  %151 = load i32, i32* %max_depth.addr.i15, align 4, !dbg !13889
  %cmp34.i99 = icmp sgt i32 %151, 2, !dbg !13890
  br i1 %cmp34.i99, label %land.lhs.true36.i102, label %if.end.i144, !dbg !13891

land.lhs.true36.i102:                             ; preds = %cond.end.i100
  %152 = load i32, i32* %n.i20, align 4, !dbg !13892
  %cmp37.i101 = icmp slt i32 %152, 0, !dbg !13893
  br i1 %cmp37.i101, label %if.then39.i105, label %if.end.i144, !dbg !13894

if.then39.i105:                                   ; preds = %land.lhs.true36.i102
  %153 = load i32, i32* %re_size_plus8.i19, align 4, !dbg !13895
  %154 = load i32, i32* %re_index.i17, align 4, !dbg !13896
  %155 = load i32, i32* %nb_bits.i21, align 4, !dbg !13897
  %add40.i103 = add i32 %154, %155, !dbg !13898
  %cmp41.i104 = icmp ugt i32 %153, %add40.i103, !dbg !13899
  br i1 %cmp41.i104, label %cond.true43.i107, label %cond.false45.i108, !dbg !13900

cond.true43.i107:                                 ; preds = %if.then39.i105
  %156 = load i32, i32* %re_index.i17, align 4, !dbg !13901
  %157 = load i32, i32* %nb_bits.i21, align 4, !dbg !13902
  %add44.i106 = add i32 %156, %157, !dbg !13903
  br label %cond.end46.i143, !dbg !13904

cond.false45.i108:                                ; preds = %if.then39.i105
  %158 = load i32, i32* %re_size_plus8.i19, align 4, !dbg !13905
  br label %cond.end46.i143, !dbg !13906

cond.end46.i143:                                  ; preds = %cond.false45.i108, %cond.true43.i107
  %cond47.i109 = phi i32 [ %add44.i106, %cond.true43.i107 ], [ %158, %cond.false45.i108 ], !dbg !13907
  store i32 %cond47.i109, i32* %re_index.i17, align 4, !dbg !13908
  %159 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i12, align 8, !dbg !13909
  %buffer48.i110 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %159, i32 0, i32 0, !dbg !13910
  %160 = load i8*, i8** %buffer48.i110, align 8, !dbg !13910
  %161 = load i32, i32* %re_index.i17, align 4, !dbg !13911
  %shr49.i111 = lshr i32 %161, 3, !dbg !13912
  %idx.ext50.i112 = zext i32 %shr49.i111 to i64, !dbg !13913
  %add.ptr51.i113 = getelementptr inbounds i8, i8* %160, i64 %idx.ext50.i112, !dbg !13913
  %162 = bitcast i8* %add.ptr51.i113 to %union.unaligned_32*, !dbg !13914
  %l52.i114 = bitcast %union.unaligned_32* %162 to i32*, !dbg !13914
  %163 = load i32, i32* %l52.i114, align 1, !dbg !13914
  store i32 %163, i32* %x.addr.i96.i9, align 4, !dbg !13915
  %164 = load i32, i32* %x.addr.i96.i9, align 4, !dbg !13916
  %shl.i97.i115 = shl i32 %164, 8, !dbg !13917
  %and.i98.i116 = and i32 %shl.i97.i115, 65280, !dbg !13918
  %165 = load i32, i32* %x.addr.i96.i9, align 4, !dbg !13919
  %shr.i99.i117 = lshr i32 %165, 8, !dbg !13920
  %and1.i100.i118 = and i32 %shr.i99.i117, 255, !dbg !13921
  %or.i101.i119 = or i32 %and.i98.i116, %and1.i100.i118, !dbg !13922
  %shl2.i102.i120 = shl i32 %or.i101.i119, 16, !dbg !13923
  %166 = load i32, i32* %x.addr.i96.i9, align 4, !dbg !13924
  %shr3.i103.i121 = lshr i32 %166, 16, !dbg !13925
  %shl4.i104.i122 = shl i32 %shr3.i103.i121, 8, !dbg !13926
  %and5.i105.i123 = and i32 %shl4.i104.i122, 65280, !dbg !13927
  %167 = load i32, i32* %x.addr.i96.i9, align 4, !dbg !13928
  %shr6.i106.i124 = lshr i32 %167, 16, !dbg !13929
  %shr7.i107.i125 = lshr i32 %shr6.i106.i124, 8, !dbg !13930
  %and8.i108.i126 = and i32 %shr7.i107.i125, 255, !dbg !13931
  %or9.i109.i127 = or i32 %and5.i105.i123, %and8.i108.i126, !dbg !13932
  %or10.i110.i128 = or i32 %shl2.i102.i120, %or9.i109.i127, !dbg !13933
  %168 = load i32, i32* %re_index.i17, align 4, !dbg !13934
  %and54.i129 = and i32 %168, 7, !dbg !13935
  %shl55.i130 = shl i32 %or10.i110.i128, %and54.i129, !dbg !13936
  store i32 %shl55.i130, i32* %re_cache.i18, align 4, !dbg !13937
  %169 = load i32, i32* %n.i20, align 4, !dbg !13938
  %sub56.i131 = sub nsw i32 0, %169, !dbg !13939
  store i32 %sub56.i131, i32* %nb_bits.i21, align 4, !dbg !13940
  %170 = load i32, i32* %re_cache.i18, align 4, !dbg !13941
  %171 = load i32, i32* %nb_bits.i21, align 4, !dbg !13942
  %conv57.i132 = trunc i32 %171 to i8, !dbg !13942
  %call58.i133 = call i32 @NEG_USR32(i32 %170, i8 signext %conv57.i132) #9, !dbg !13943
  %172 = load i32, i32* %code.i16, align 4, !dbg !13944
  %add59.i134 = add i32 %call58.i133, %172, !dbg !13945
  store i32 %add59.i134, i32* %index1.i22, align 4, !dbg !13946
  %173 = load i32, i32* %index1.i22, align 4, !dbg !13947
  %idxprom60.i135 = zext i32 %173 to i64, !dbg !13948
  %174 = load [2 x i16]*, [2 x i16]** %table.addr.i13, align 8, !dbg !13948
  %arrayidx61.i136 = getelementptr inbounds [2 x i16], [2 x i16]* %174, i64 %idxprom60.i135, !dbg !13948
  %arrayidx62.i137 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i136, i64 0, i64 0, !dbg !13948
  %175 = load i16, i16* %arrayidx62.i137, align 2, !dbg !13948
  %conv63.i138 = sext i16 %175 to i32, !dbg !13948
  store i32 %conv63.i138, i32* %code.i16, align 4, !dbg !13949
  %176 = load i32, i32* %index1.i22, align 4, !dbg !13950
  %idxprom64.i139 = zext i32 %176 to i64, !dbg !13951
  %177 = load [2 x i16]*, [2 x i16]** %table.addr.i13, align 8, !dbg !13951
  %arrayidx65.i140 = getelementptr inbounds [2 x i16], [2 x i16]* %177, i64 %idxprom64.i139, !dbg !13951
  %arrayidx66.i141 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i140, i64 0, i64 1, !dbg !13951
  %178 = load i16, i16* %arrayidx66.i141, align 2, !dbg !13951
  %conv67.i142 = sext i16 %178 to i32, !dbg !13951
  store i32 %conv67.i142, i32* %n.i20, align 4, !dbg !13952
  br label %if.end.i144, !dbg !13953

if.end.i144:                                      ; preds = %cond.end46.i143, %land.lhs.true36.i102, %cond.end.i100
  br label %if.end68.i145, !dbg !13954

if.end68.i145:                                    ; preds = %if.end.i144, %land.lhs.true.i58, %for.body
  %179 = load i32, i32* %n.i20, align 4, !dbg !13955
  %180 = load i32, i32* %re_cache.i18, align 4, !dbg !13956
  %shl70.i146 = shl i32 %180, %179, !dbg !13956
  store i32 %shl70.i146, i32* %re_cache.i18, align 4, !dbg !13956
  %181 = load i32, i32* %re_size_plus8.i19, align 4, !dbg !13957
  %182 = load i32, i32* %re_index.i17, align 4, !dbg !13958
  %183 = load i32, i32* %n.i20, align 4, !dbg !13959
  %add71.i147 = add i32 %182, %183, !dbg !13960
  %cmp72.i148 = icmp ugt i32 %181, %add71.i147, !dbg !13961
  br i1 %cmp72.i148, label %cond.true74.i150, label %cond.false76.i151, !dbg !13962

cond.true74.i150:                                 ; preds = %if.end68.i145
  %184 = load i32, i32* %re_index.i17, align 4, !dbg !13963
  %185 = load i32, i32* %n.i20, align 4, !dbg !13964
  %add75.i149 = add i32 %184, %185, !dbg !13965
  br label %get_vlc2.exit154, !dbg !13966

cond.false76.i151:                                ; preds = %if.end68.i145
  %186 = load i32, i32* %re_size_plus8.i19, align 4, !dbg !13967
  br label %get_vlc2.exit154, !dbg !13968

get_vlc2.exit154:                                 ; preds = %cond.true74.i150, %cond.false76.i151
  %cond78.i152 = phi i32 [ %add75.i149, %cond.true74.i150 ], [ %186, %cond.false76.i151 ], !dbg !13969
  store i32 %cond78.i152, i32* %re_index.i17, align 4, !dbg !13970
  %187 = load i32, i32* %re_index.i17, align 4, !dbg !13971
  %188 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i12, align 8, !dbg !13972
  %index80.i153 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %188, i32 0, i32 2, !dbg !13973
  store i32 %187, i32* %index80.i153, align 8, !dbg !13974
  %189 = load i32, i32* %code.i16, align 4, !dbg !13975
  store i32 %189, i32* %delta, align 4, !dbg !13976
  %190 = load i32, i32* %i, align 4, !dbg !13977
  %sub = sub nsw i32 %190, 1, !dbg !13978
  %idxprom = sext i32 %sub to i64, !dbg !13979
  %191 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !13979
  %lev_code4 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %191, i32 0, i32 1, !dbg !13980
  %arrayidx5 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code4, i64 0, i64 %idxprom, !dbg !13979
  %192 = load i32, i32* %arrayidx5, align 4, !dbg !13979
  %193 = load i32, i32* %delta, align 4, !dbg !13981
  %add = add nsw i32 %192, %193, !dbg !13982
  %and = and i32 %add, 15, !dbg !13983
  %194 = load i32, i32* %i, align 4, !dbg !13984
  %idxprom6 = sext i32 %194 to i64, !dbg !13985
  %195 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !13985
  %lev_code7 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %195, i32 0, i32 1, !dbg !13986
  %arrayidx8 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code7, i64 0, i64 %idxprom6, !dbg !13985
  store i32 %and, i32* %arrayidx8, align 4, !dbg !13987
  br label %for.inc, !dbg !13988

for.inc:                                          ; preds = %get_vlc2.exit154
  %196 = load i32, i32* %i, align 4, !dbg !13989
  %inc = add nsw i32 %196, 1, !dbg !13989
  store i32 %inc, i32* %i, align 4, !dbg !13989
  br label %for.cond, !dbg !13991, !llvm.loop !13992

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13994
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @gainc_level_mode3s(%struct.AtracGainInfo* %dst, %struct.AtracGainInfo* %ref) #4 !dbg !13995 {
entry:
  %dst.addr = alloca %struct.AtracGainInfo*, align 8
  %ref.addr = alloca %struct.AtracGainInfo*, align 8
  %i = alloca i32, align 4
  store %struct.AtracGainInfo* %dst, %struct.AtracGainInfo** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %dst.addr, metadata !13998, metadata !1324), !dbg !13999
  store %struct.AtracGainInfo* %ref, %struct.AtracGainInfo** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %ref.addr, metadata !14000, metadata !1324), !dbg !14001
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14002, metadata !1324), !dbg !14003
  store i32 0, i32* %i, align 4, !dbg !14004
  br label %for.cond, !dbg !14006

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14007
  %1 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14010
  %num_points = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %1, i32 0, i32 0, !dbg !14011
  %2 = load i32, i32* %num_points, align 4, !dbg !14011
  %cmp = icmp slt i32 %0, %2, !dbg !14012
  br i1 %cmp, label %for.body, label %for.end, !dbg !14013

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !14014
  %4 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref.addr, align 8, !dbg !14015
  %num_points1 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %4, i32 0, i32 0, !dbg !14016
  %5 = load i32, i32* %num_points1, align 4, !dbg !14016
  %cmp2 = icmp sge i32 %3, %5, !dbg !14017
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !14018

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !14019

cond.false:                                       ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14020
  %idxprom = sext i32 %6 to i64, !dbg !14022
  %7 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %ref.addr, align 8, !dbg !14022
  %lev_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %7, i32 0, i32 1, !dbg !14023
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code, i64 0, i64 %idxprom, !dbg !14022
  %8 = load i32, i32* %arrayidx, align 4, !dbg !14022
  br label %cond.end, !dbg !14024

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 7, %cond.true ], [ %8, %cond.false ], !dbg !14025
  %9 = load i32, i32* %i, align 4, !dbg !14027
  %idxprom3 = sext i32 %9 to i64, !dbg !14028
  %10 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14028
  %lev_code4 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %10, i32 0, i32 1, !dbg !14029
  %arrayidx5 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code4, i64 0, i64 %idxprom3, !dbg !14028
  store i32 %cond, i32* %arrayidx5, align 4, !dbg !14030
  br label %for.inc, !dbg !14028

for.inc:                                          ; preds = %cond.end
  %11 = load i32, i32* %i, align 4, !dbg !14031
  %inc = add nsw i32 %11, 1, !dbg !14031
  store i32 %inc, i32* %i, align 4, !dbg !14031
  br label %for.cond, !dbg !14032, !llvm.loop !14033

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14035
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @gainc_loc_mode0(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, %struct.AtracGainInfo* %dst, i32 %pos) #4 !dbg !14036 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %dst.addr = alloca %struct.AtracGainInfo*, align 8
  %pos.addr = alloca i32, align 4
  %delta_bits = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !14039, metadata !1324), !dbg !14040
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !14041, metadata !1324), !dbg !14042
  store %struct.AtracGainInfo* %dst, %struct.AtracGainInfo** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %dst.addr, metadata !14043, metadata !1324), !dbg !14044
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !14045, metadata !1324), !dbg !14046
  call void @llvm.dbg.declare(metadata i32* %delta_bits, metadata !14047, metadata !1324), !dbg !14048
  %0 = load i32, i32* %pos.addr, align 4, !dbg !14049
  %tobool = icmp ne i32 %0, 0, !dbg !14049
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14051

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %pos.addr, align 4, !dbg !14052
  %sub = sub nsw i32 %1, 1, !dbg !14054
  %idxprom = sext i32 %sub to i64, !dbg !14055
  %2 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14055
  %loc_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %2, i32 0, i32 2, !dbg !14056
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code, i64 0, i64 %idxprom, !dbg !14055
  %3 = load i32, i32* %arrayidx, align 4, !dbg !14055
  %cmp = icmp slt i32 %3, 15, !dbg !14057
  br i1 %cmp, label %if.then, label %if.else, !dbg !14058

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14059
  %call = call i32 @get_bits(%struct.GetBitContext* %4, i32 5), !dbg !14060
  %5 = load i32, i32* %pos.addr, align 4, !dbg !14061
  %idxprom1 = sext i32 %5 to i64, !dbg !14062
  %6 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14062
  %loc_code2 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %6, i32 0, i32 2, !dbg !14063
  %arrayidx3 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code2, i64 0, i64 %idxprom1, !dbg !14062
  store i32 %call, i32* %arrayidx3, align 4, !dbg !14064
  br label %if.end30, !dbg !14062

if.else:                                          ; preds = %lor.lhs.false
  %7 = load i32, i32* %pos.addr, align 4, !dbg !14065
  %sub4 = sub nsw i32 %7, 1, !dbg !14067
  %idxprom5 = sext i32 %sub4 to i64, !dbg !14068
  %8 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14068
  %loc_code6 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %8, i32 0, i32 2, !dbg !14069
  %arrayidx7 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code6, i64 0, i64 %idxprom5, !dbg !14068
  %9 = load i32, i32* %arrayidx7, align 4, !dbg !14068
  %cmp8 = icmp sge i32 %9, 30, !dbg !14070
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !14071

if.then9:                                         ; preds = %if.else
  %10 = load i32, i32* %pos.addr, align 4, !dbg !14072
  %idxprom10 = sext i32 %10 to i64, !dbg !14073
  %11 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14073
  %loc_code11 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %11, i32 0, i32 2, !dbg !14074
  %arrayidx12 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code11, i64 0, i64 %idxprom10, !dbg !14073
  store i32 31, i32* %arrayidx12, align 4, !dbg !14075
  br label %if.end, !dbg !14073

if.else13:                                        ; preds = %if.else
  %12 = load i32, i32* %pos.addr, align 4, !dbg !14076
  %sub14 = sub nsw i32 %12, 1, !dbg !14078
  %idxprom15 = sext i32 %sub14 to i64, !dbg !14079
  %13 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14079
  %loc_code16 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %13, i32 0, i32 2, !dbg !14080
  %arrayidx17 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code16, i64 0, i64 %idxprom15, !dbg !14079
  %14 = load i32, i32* %arrayidx17, align 4, !dbg !14079
  %sub18 = sub nsw i32 30, %14, !dbg !14081
  %or = or i32 %sub18, 1, !dbg !14082
  %15 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !14083
  %sub19 = sub nsw i32 31, %15, !dbg !14084
  %add = add nsw i32 %sub19, 1, !dbg !14085
  store i32 %add, i32* %delta_bits, align 4, !dbg !14086
  %16 = load i32, i32* %pos.addr, align 4, !dbg !14087
  %sub20 = sub nsw i32 %16, 1, !dbg !14088
  %idxprom21 = sext i32 %sub20 to i64, !dbg !14089
  %17 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14089
  %loc_code22 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %17, i32 0, i32 2, !dbg !14090
  %arrayidx23 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code22, i64 0, i64 %idxprom21, !dbg !14089
  %18 = load i32, i32* %arrayidx23, align 4, !dbg !14089
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14091
  %20 = load i32, i32* %delta_bits, align 4, !dbg !14092
  %call24 = call i32 @get_bits(%struct.GetBitContext* %19, i32 %20), !dbg !14093
  %add25 = add i32 %18, %call24, !dbg !14094
  %add26 = add i32 %add25, 1, !dbg !14095
  %21 = load i32, i32* %pos.addr, align 4, !dbg !14096
  %idxprom27 = sext i32 %21 to i64, !dbg !14097
  %22 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14097
  %loc_code28 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %22, i32 0, i32 2, !dbg !14098
  %arrayidx29 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code28, i64 0, i64 %idxprom27, !dbg !14097
  store i32 %add26, i32* %arrayidx29, align 4, !dbg !14099
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  ret void, !dbg !14100
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @gainc_loc_mode1(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, %struct.AtracGainInfo* %dst) #4 !dbg !14101 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !14102
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !14110
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !14112
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !14114
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !14115
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !14116
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !14117
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !14118
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !14119
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !14120
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !14121
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !14122
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !14123
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !14124
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %dst.addr = alloca %struct.AtracGainInfo*, align 8
  %i = alloca i32, align 4
  %tab = alloca %struct.VLC*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !14125, metadata !1324), !dbg !14126
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !14127, metadata !1324), !dbg !14128
  store %struct.AtracGainInfo* %dst, %struct.AtracGainInfo** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %dst.addr, metadata !14129, metadata !1324), !dbg !14130
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14131, metadata !1324), !dbg !14132
  call void @llvm.dbg.declare(metadata %struct.VLC** %tab, metadata !14133, metadata !1324), !dbg !14134
  %0 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14135
  %num_points = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %0, i32 0, i32 0, !dbg !14136
  %1 = load i32, i32* %num_points, align 4, !dbg !14136
  %cmp = icmp sgt i32 %1, 0, !dbg !14137
  br i1 %cmp, label %if.then, label %if.end, !dbg !14138

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14139
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 5), !dbg !14140
  %3 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14141
  %loc_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %3, i32 0, i32 2, !dbg !14142
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code, i64 0, i64 0, !dbg !14141
  store i32 %call, i32* %arrayidx, align 4, !dbg !14143
  store i32 1, i32* %i, align 4, !dbg !14144
  br label %for.cond, !dbg !14145

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !14146
  %5 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14148
  %num_points1 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %5, i32 0, i32 0, !dbg !14149
  %6 = load i32, i32* %num_points1, align 4, !dbg !14149
  %cmp2 = icmp slt i32 %4, %6, !dbg !14150
  br i1 %cmp2, label %for.body, label %for.end, !dbg !14151

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !14152
  %idxprom = sext i32 %7 to i64, !dbg !14153
  %8 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14153
  %lev_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %8, i32 0, i32 1, !dbg !14154
  %arrayidx3 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code, i64 0, i64 %idxprom, !dbg !14153
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !14153
  %10 = load i32, i32* %i, align 4, !dbg !14155
  %sub = sub nsw i32 %10, 1, !dbg !14156
  %idxprom4 = sext i32 %sub to i64, !dbg !14157
  %11 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14157
  %lev_code5 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %11, i32 0, i32 1, !dbg !14158
  %arrayidx6 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code5, i64 0, i64 %idxprom4, !dbg !14157
  %12 = load i32, i32* %arrayidx6, align 4, !dbg !14157
  %cmp7 = icmp sle i32 %9, %12, !dbg !14159
  %cond = select i1 %cmp7, %struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 7), %struct.VLC* getelementptr inbounds ([11 x %struct.VLC], [11 x %struct.VLC]* @gain_vlc_tabs, i64 0, i64 9), !dbg !14160
  store %struct.VLC* %cond, %struct.VLC** %tab, align 8, !dbg !14161
  %13 = load i32, i32* %i, align 4, !dbg !14162
  %sub8 = sub nsw i32 %13, 1, !dbg !14163
  %idxprom9 = sext i32 %sub8 to i64, !dbg !14164
  %14 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14164
  %loc_code10 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %14, i32 0, i32 2, !dbg !14165
  %arrayidx11 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code10, i64 0, i64 %idxprom9, !dbg !14164
  %15 = load i32, i32* %arrayidx11, align 4, !dbg !14164
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14166
  %17 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !14167
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %17, i32 0, i32 1, !dbg !14168
  %18 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !14168
  %19 = load %struct.VLC*, %struct.VLC** %tab, align 8, !dbg !14169
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %19, i32 0, i32 0, !dbg !14170
  %20 = load i32, i32* %bits, align 8, !dbg !14170
  store %struct.GetBitContext* %16, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14171
  store [2 x i16]* %18, [2 x i16]** %table.addr.i, align 8, !dbg !14171
  store i32 %20, i32* %bits.addr.i, align 4, !dbg !14171
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !14171
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14172
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %21, i32 0, i32 2, !dbg !14173
  %22 = load i32, i32* %index.i, align 8, !dbg !14173
  store i32 %22, i32* %re_index.i, align 4, !dbg !14119
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14174
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 4, !dbg !14175
  %24 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !14175
  store i32 %24, i32* %re_size_plus8.i, align 4, !dbg !14121
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14176
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %25, i32 0, i32 0, !dbg !14177
  %26 = load i8*, i8** %buffer.i, align 8, !dbg !14177
  %27 = load i32, i32* %re_index.i, align 4, !dbg !14178
  %shr.i = lshr i32 %27, 3, !dbg !14179
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !14180
  %add.ptr.i = getelementptr inbounds i8, i8* %26, i64 %idx.ext.i, !dbg !14180
  %28 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !14181
  %l.i = bitcast %union.unaligned_32* %28 to i32*, !dbg !14181
  %29 = load i32, i32* %l.i, align 1, !dbg !14181
  store i32 %29, i32* %x.addr.i.i, align 4, !dbg !14182
  %30 = load i32, i32* %x.addr.i.i, align 4, !dbg !14183
  %shl.i.i = shl i32 %30, 8, !dbg !14184
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !14185
  %31 = load i32, i32* %x.addr.i.i, align 4, !dbg !14186
  %shr.i.i = lshr i32 %31, 8, !dbg !14187
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !14188
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !14189
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !14190
  %32 = load i32, i32* %x.addr.i.i, align 4, !dbg !14191
  %shr3.i.i = lshr i32 %32, 16, !dbg !14192
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !14193
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !14194
  %33 = load i32, i32* %x.addr.i.i, align 4, !dbg !14195
  %shr6.i.i = lshr i32 %33, 16, !dbg !14196
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !14197
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !14198
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !14199
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !14200
  %34 = load i32, i32* %re_index.i, align 4, !dbg !14201
  %and.i = and i32 %34, 7, !dbg !14202
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !14203
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !14204
  %35 = load i32, i32* %re_cache.i, align 4, !dbg !14205
  %36 = load i32, i32* %bits.addr.i, align 4, !dbg !14206
  %conv.i = trunc i32 %36 to i8, !dbg !14206
  %call2.i = call i32 @NEG_USR32(i32 %35, i8 signext %conv.i) #9, !dbg !14207
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !14208
  %37 = load i32, i32* %index1.i, align 4, !dbg !14209
  %idxprom.i = zext i32 %37 to i64, !dbg !14210
  %38 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14210
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %38, i64 %idxprom.i, !dbg !14210
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !14210
  %39 = load i16, i16* %arrayidx3.i, align 2, !dbg !14210
  %conv4.i = sext i16 %39 to i32, !dbg !14210
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !14211
  %40 = load i32, i32* %index1.i, align 4, !dbg !14212
  %idxprom5.i = zext i32 %40 to i64, !dbg !14213
  %41 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14213
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %41, i64 %idxprom5.i, !dbg !14213
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !14213
  %42 = load i16, i16* %arrayidx7.i, align 2, !dbg !14213
  %conv8.i = sext i16 %42 to i32, !dbg !14213
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !14214
  %43 = load i32, i32* %max_depth.addr.i, align 4, !dbg !14215
  %cmp.i = icmp sgt i32 %43, 1, !dbg !14216
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !14217

land.lhs.true.i:                                  ; preds = %for.body
  %44 = load i32, i32* %n.i, align 4, !dbg !14218
  %cmp10.i = icmp slt i32 %44, 0, !dbg !14219
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !14220

if.then.i:                                        ; preds = %land.lhs.true.i
  %45 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14221
  %46 = load i32, i32* %re_index.i, align 4, !dbg !14222
  %47 = load i32, i32* %bits.addr.i, align 4, !dbg !14223
  %add.i = add i32 %46, %47, !dbg !14224
  %cmp12.i = icmp ugt i32 %45, %add.i, !dbg !14225
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !14226

cond.true.i:                                      ; preds = %if.then.i
  %48 = load i32, i32* %re_index.i, align 4, !dbg !14227
  %49 = load i32, i32* %bits.addr.i, align 4, !dbg !14228
  %add14.i = add i32 %48, %49, !dbg !14229
  br label %cond.end.i, !dbg !14230

cond.false.i:                                     ; preds = %if.then.i
  %50 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14231
  br label %cond.end.i, !dbg !14232

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %50, %cond.false.i ], !dbg !14233
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !14234
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14235
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %51, i32 0, i32 0, !dbg !14236
  %52 = load i8*, i8** %buffer15.i, align 8, !dbg !14236
  %53 = load i32, i32* %re_index.i, align 4, !dbg !14237
  %shr16.i = lshr i32 %53, 3, !dbg !14238
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !14239
  %add.ptr18.i = getelementptr inbounds i8, i8* %52, i64 %idx.ext17.i, !dbg !14239
  %54 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !14240
  %l19.i = bitcast %union.unaligned_32* %54 to i32*, !dbg !14240
  %55 = load i32, i32* %l19.i, align 1, !dbg !14240
  store i32 %55, i32* %x.addr.i81.i, align 4, !dbg !14241
  %56 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14242
  %shl.i82.i = shl i32 %56, 8, !dbg !14243
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !14244
  %57 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14245
  %shr.i84.i = lshr i32 %57, 8, !dbg !14246
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !14247
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !14248
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !14249
  %58 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14250
  %shr3.i88.i = lshr i32 %58, 16, !dbg !14251
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !14252
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !14253
  %59 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14254
  %shr6.i91.i = lshr i32 %59, 16, !dbg !14255
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !14256
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !14257
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !14258
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !14259
  %60 = load i32, i32* %re_index.i, align 4, !dbg !14260
  %and21.i = and i32 %60, 7, !dbg !14261
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !14262
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !14263
  %61 = load i32, i32* %n.i, align 4, !dbg !14264
  %sub.i = sub nsw i32 0, %61, !dbg !14265
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !14266
  %62 = load i32, i32* %re_cache.i, align 4, !dbg !14267
  %63 = load i32, i32* %nb_bits.i, align 4, !dbg !14268
  %conv23.i = trunc i32 %63 to i8, !dbg !14268
  %call24.i = call i32 @NEG_USR32(i32 %62, i8 signext %conv23.i) #9, !dbg !14269
  %64 = load i32, i32* %code.i, align 4, !dbg !14270
  %add25.i = add i32 %call24.i, %64, !dbg !14271
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !14272
  %65 = load i32, i32* %index1.i, align 4, !dbg !14273
  %idxprom26.i = zext i32 %65 to i64, !dbg !14274
  %66 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14274
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %66, i64 %idxprom26.i, !dbg !14274
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !14274
  %67 = load i16, i16* %arrayidx28.i, align 2, !dbg !14274
  %conv29.i = sext i16 %67 to i32, !dbg !14274
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !14275
  %68 = load i32, i32* %index1.i, align 4, !dbg !14276
  %idxprom30.i = zext i32 %68 to i64, !dbg !14277
  %69 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14277
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %69, i64 %idxprom30.i, !dbg !14277
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !14277
  %70 = load i16, i16* %arrayidx32.i, align 2, !dbg !14277
  %conv33.i = sext i16 %70 to i32, !dbg !14277
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !14278
  %71 = load i32, i32* %max_depth.addr.i, align 4, !dbg !14279
  %cmp34.i = icmp sgt i32 %71, 2, !dbg !14280
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !14281

land.lhs.true36.i:                                ; preds = %cond.end.i
  %72 = load i32, i32* %n.i, align 4, !dbg !14282
  %cmp37.i = icmp slt i32 %72, 0, !dbg !14283
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !14284

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %73 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14285
  %74 = load i32, i32* %re_index.i, align 4, !dbg !14286
  %75 = load i32, i32* %nb_bits.i, align 4, !dbg !14287
  %add40.i = add i32 %74, %75, !dbg !14288
  %cmp41.i = icmp ugt i32 %73, %add40.i, !dbg !14289
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !14290

cond.true43.i:                                    ; preds = %if.then39.i
  %76 = load i32, i32* %re_index.i, align 4, !dbg !14291
  %77 = load i32, i32* %nb_bits.i, align 4, !dbg !14292
  %add44.i = add i32 %76, %77, !dbg !14293
  br label %cond.end46.i, !dbg !14294

cond.false45.i:                                   ; preds = %if.then39.i
  %78 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14295
  br label %cond.end46.i, !dbg !14296

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %78, %cond.false45.i ], !dbg !14297
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !14298
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14299
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %79, i32 0, i32 0, !dbg !14300
  %80 = load i8*, i8** %buffer48.i, align 8, !dbg !14300
  %81 = load i32, i32* %re_index.i, align 4, !dbg !14301
  %shr49.i = lshr i32 %81, 3, !dbg !14302
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !14303
  %add.ptr51.i = getelementptr inbounds i8, i8* %80, i64 %idx.ext50.i, !dbg !14303
  %82 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !14304
  %l52.i = bitcast %union.unaligned_32* %82 to i32*, !dbg !14304
  %83 = load i32, i32* %l52.i, align 1, !dbg !14304
  store i32 %83, i32* %x.addr.i96.i, align 4, !dbg !14305
  %84 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14306
  %shl.i97.i = shl i32 %84, 8, !dbg !14307
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !14308
  %85 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14309
  %shr.i99.i = lshr i32 %85, 8, !dbg !14310
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !14311
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !14312
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !14313
  %86 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14314
  %shr3.i103.i = lshr i32 %86, 16, !dbg !14315
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !14316
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !14317
  %87 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14318
  %shr6.i106.i = lshr i32 %87, 16, !dbg !14319
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !14320
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !14321
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !14322
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !14323
  %88 = load i32, i32* %re_index.i, align 4, !dbg !14324
  %and54.i = and i32 %88, 7, !dbg !14325
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !14326
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !14327
  %89 = load i32, i32* %n.i, align 4, !dbg !14328
  %sub56.i = sub nsw i32 0, %89, !dbg !14329
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !14330
  %90 = load i32, i32* %re_cache.i, align 4, !dbg !14331
  %91 = load i32, i32* %nb_bits.i, align 4, !dbg !14332
  %conv57.i = trunc i32 %91 to i8, !dbg !14332
  %call58.i = call i32 @NEG_USR32(i32 %90, i8 signext %conv57.i) #9, !dbg !14333
  %92 = load i32, i32* %code.i, align 4, !dbg !14334
  %add59.i = add i32 %call58.i, %92, !dbg !14335
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !14336
  %93 = load i32, i32* %index1.i, align 4, !dbg !14337
  %idxprom60.i = zext i32 %93 to i64, !dbg !14338
  %94 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14338
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %94, i64 %idxprom60.i, !dbg !14338
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !14338
  %95 = load i16, i16* %arrayidx62.i, align 2, !dbg !14338
  %conv63.i = sext i16 %95 to i32, !dbg !14338
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !14339
  %96 = load i32, i32* %index1.i, align 4, !dbg !14340
  %idxprom64.i = zext i32 %96 to i64, !dbg !14341
  %97 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14341
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %97, i64 %idxprom64.i, !dbg !14341
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !14341
  %98 = load i16, i16* %arrayidx66.i, align 2, !dbg !14341
  %conv67.i = sext i16 %98 to i32, !dbg !14341
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !14342
  br label %if.end.i, !dbg !14343

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !14344

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body
  %99 = load i32, i32* %n.i, align 4, !dbg !14345
  %100 = load i32, i32* %re_cache.i, align 4, !dbg !14346
  %shl70.i = shl i32 %100, %99, !dbg !14346
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !14346
  %101 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14347
  %102 = load i32, i32* %re_index.i, align 4, !dbg !14348
  %103 = load i32, i32* %n.i, align 4, !dbg !14349
  %add71.i = add i32 %102, %103, !dbg !14350
  %cmp72.i = icmp ugt i32 %101, %add71.i, !dbg !14351
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !14352

cond.true74.i:                                    ; preds = %if.end68.i
  %104 = load i32, i32* %re_index.i, align 4, !dbg !14353
  %105 = load i32, i32* %n.i, align 4, !dbg !14354
  %add75.i = add i32 %104, %105, !dbg !14355
  br label %get_vlc2.exit, !dbg !14356

cond.false76.i:                                   ; preds = %if.end68.i
  %106 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14357
  br label %get_vlc2.exit, !dbg !14358

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %106, %cond.false76.i ], !dbg !14359
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !14360
  %107 = load i32, i32* %re_index.i, align 4, !dbg !14361
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14362
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %108, i32 0, i32 2, !dbg !14363
  store i32 %107, i32* %index80.i, align 8, !dbg !14364
  %109 = load i32, i32* %code.i, align 4, !dbg !14365
  %add = add nsw i32 %15, %109, !dbg !14366
  %110 = load i32, i32* %i, align 4, !dbg !14367
  %idxprom13 = sext i32 %110 to i64, !dbg !14368
  %111 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %dst.addr, align 8, !dbg !14368
  %loc_code14 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %111, i32 0, i32 2, !dbg !14369
  %arrayidx15 = getelementptr inbounds [7 x i32], [7 x i32]* %loc_code14, i64 0, i64 %idxprom13, !dbg !14368
  store i32 %add, i32* %arrayidx15, align 4, !dbg !14370
  br label %for.inc, !dbg !14371

for.inc:                                          ; preds = %get_vlc2.exit
  %112 = load i32, i32* %i, align 4, !dbg !14372
  %inc = add nsw i32 %112, 1, !dbg !14372
  store i32 %inc, i32* %i, align 4, !dbg !14372
  br label %for.cond, !dbg !14374, !llvm.loop !14375

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !14377

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !14378
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @decode_tones_envelope(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32* %band_has_tones) #3 !dbg !14379 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %band_has_tones.addr = alloca i32*, align 8
  %sb = alloca i32, align 4
  %dst = alloca %struct.Atrac3pWavesData*, align 8
  %ref = alloca %struct.Atrac3pWavesData*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !14382, metadata !1324), !dbg !14383
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !14384, metadata !1324), !dbg !14385
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !14386, metadata !1324), !dbg !14387
  store i32* %band_has_tones, i32** %band_has_tones.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_has_tones.addr, metadata !14388, metadata !1324), !dbg !14389
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !14390, metadata !1324), !dbg !14391
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %dst, metadata !14392, metadata !1324), !dbg !14393
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !14394
  %idxprom = sext i32 %0 to i64, !dbg !14395
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14395
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !14396
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !14395
  %tones_info = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 18, !dbg !14397
  %2 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info, align 8, !dbg !14397
  store %struct.Atrac3pWavesData* %2, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14393
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %ref, metadata !14398, metadata !1324), !dbg !14399
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14400
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !14401
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !14400
  %tones_info3 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx2, i32 0, i32 18, !dbg !14402
  %4 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info3, align 8, !dbg !14402
  store %struct.Atrac3pWavesData* %4, %struct.Atrac3pWavesData** %ref, align 8, !dbg !14399
  %5 = load i32, i32* %ch_num.addr, align 4, !dbg !14403
  %tobool = icmp ne i32 %5, 0, !dbg !14403
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14405

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14406
  %call = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !14408
  %tobool4 = icmp ne i32 %call, 0, !dbg !14408
  br i1 %tobool4, label %if.else, label %if.then, !dbg !14409

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %sb, align 4, !dbg !14410
  br label %for.cond, !dbg !14413

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %sb, align 4, !dbg !14414
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14417
  %waves_info = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 14, !dbg !14418
  %9 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info, align 8, !dbg !14418
  %num_tone_bands = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %9, i32 0, i32 2, !dbg !14419
  %10 = load i32, i32* %num_tone_bands, align 4, !dbg !14419
  %cmp = icmp slt i32 %7, %10, !dbg !14420
  br i1 %cmp, label %for.body, label %for.end, !dbg !14421

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %sb, align 4, !dbg !14422
  %idxprom5 = sext i32 %11 to i64, !dbg !14425
  %12 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !14425
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 %idxprom5, !dbg !14425
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !14425
  %tobool7 = icmp ne i32 %13, 0, !dbg !14425
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !14426

if.then8:                                         ; preds = %for.body
  br label %for.inc, !dbg !14427

if.end:                                           ; preds = %for.body
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14428
  %call9 = call i32 @get_bits1(%struct.GetBitContext* %14), !dbg !14429
  %15 = load i32, i32* %sb, align 4, !dbg !14430
  %idxprom10 = sext i32 %15 to i64, !dbg !14431
  %16 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14431
  %arrayidx11 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %16, i64 %idxprom10, !dbg !14431
  %pend_env = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx11, i32 0, i32 0, !dbg !14432
  %has_start_point = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env, i32 0, i32 0, !dbg !14433
  store i32 %call9, i32* %has_start_point, align 4, !dbg !14434
  %17 = load i32, i32* %sb, align 4, !dbg !14435
  %idxprom12 = sext i32 %17 to i64, !dbg !14436
  %18 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14436
  %arrayidx13 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %18, i64 %idxprom12, !dbg !14436
  %pend_env14 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx13, i32 0, i32 0, !dbg !14437
  %has_start_point15 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env14, i32 0, i32 0, !dbg !14438
  %19 = load i32, i32* %has_start_point15, align 4, !dbg !14438
  %tobool16 = icmp ne i32 %19, 0, !dbg !14436
  br i1 %tobool16, label %cond.true, label %cond.false, !dbg !14436

cond.true:                                        ; preds = %if.end
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14439
  %call17 = call i32 @get_bits(%struct.GetBitContext* %20, i32 5), !dbg !14440
  br label %cond.end, !dbg !14441

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !14443

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call17, %cond.true ], [ -1, %cond.false ], !dbg !14445
  %21 = load i32, i32* %sb, align 4, !dbg !14447
  %idxprom18 = sext i32 %21 to i64, !dbg !14448
  %22 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14448
  %arrayidx19 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %22, i64 %idxprom18, !dbg !14448
  %pend_env20 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx19, i32 0, i32 0, !dbg !14449
  %start_pos = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env20, i32 0, i32 2, !dbg !14450
  store i32 %cond, i32* %start_pos, align 4, !dbg !14451
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14452
  %call21 = call i32 @get_bits1(%struct.GetBitContext* %23), !dbg !14453
  %24 = load i32, i32* %sb, align 4, !dbg !14454
  %idxprom22 = sext i32 %24 to i64, !dbg !14455
  %25 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14455
  %arrayidx23 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %25, i64 %idxprom22, !dbg !14455
  %pend_env24 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx23, i32 0, i32 0, !dbg !14456
  %has_stop_point = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env24, i32 0, i32 1, !dbg !14457
  store i32 %call21, i32* %has_stop_point, align 4, !dbg !14458
  %26 = load i32, i32* %sb, align 4, !dbg !14459
  %idxprom25 = sext i32 %26 to i64, !dbg !14460
  %27 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14460
  %arrayidx26 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %27, i64 %idxprom25, !dbg !14460
  %pend_env27 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx26, i32 0, i32 0, !dbg !14461
  %has_stop_point28 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env27, i32 0, i32 1, !dbg !14462
  %28 = load i32, i32* %has_stop_point28, align 4, !dbg !14462
  %tobool29 = icmp ne i32 %28, 0, !dbg !14460
  br i1 %tobool29, label %cond.true30, label %cond.false32, !dbg !14460

cond.true30:                                      ; preds = %cond.end
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14463
  %call31 = call i32 @get_bits(%struct.GetBitContext* %29, i32 5), !dbg !14464
  br label %cond.end33, !dbg !14465

cond.false32:                                     ; preds = %cond.end
  br label %cond.end33, !dbg !14466

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi i32 [ %call31, %cond.true30 ], [ 32, %cond.false32 ], !dbg !14467
  %30 = load i32, i32* %sb, align 4, !dbg !14468
  %idxprom35 = sext i32 %30 to i64, !dbg !14469
  %31 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14469
  %arrayidx36 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %31, i64 %idxprom35, !dbg !14469
  %pend_env37 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx36, i32 0, i32 0, !dbg !14470
  %stop_pos = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env37, i32 0, i32 3, !dbg !14471
  store i32 %cond34, i32* %stop_pos, align 4, !dbg !14472
  br label %for.inc, !dbg !14473

for.inc:                                          ; preds = %cond.end33, %if.then8
  %32 = load i32, i32* %sb, align 4, !dbg !14474
  %inc = add nsw i32 %32, 1, !dbg !14474
  store i32 %inc, i32* %sb, align 4, !dbg !14474
  br label %for.cond, !dbg !14476, !llvm.loop !14477

for.end:                                          ; preds = %for.cond
  br label %if.end83, !dbg !14479

if.else:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %sb, align 4, !dbg !14480
  br label %for.cond38, !dbg !14483

for.cond38:                                       ; preds = %for.inc80, %if.else
  %33 = load i32, i32* %sb, align 4, !dbg !14484
  %34 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14487
  %waves_info39 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %34, i32 0, i32 14, !dbg !14488
  %35 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info39, align 8, !dbg !14488
  %num_tone_bands40 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %35, i32 0, i32 2, !dbg !14489
  %36 = load i32, i32* %num_tone_bands40, align 4, !dbg !14489
  %cmp41 = icmp slt i32 %33, %36, !dbg !14490
  br i1 %cmp41, label %for.body42, label %for.end82, !dbg !14491

for.body42:                                       ; preds = %for.cond38
  %37 = load i32, i32* %sb, align 4, !dbg !14492
  %idxprom43 = sext i32 %37 to i64, !dbg !14495
  %38 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !14495
  %arrayidx44 = getelementptr inbounds i32, i32* %38, i64 %idxprom43, !dbg !14495
  %39 = load i32, i32* %arrayidx44, align 4, !dbg !14495
  %tobool45 = icmp ne i32 %39, 0, !dbg !14495
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !14496

if.then46:                                        ; preds = %for.body42
  br label %for.inc80, !dbg !14497

if.end47:                                         ; preds = %for.body42
  %40 = load i32, i32* %sb, align 4, !dbg !14498
  %idxprom48 = sext i32 %40 to i64, !dbg !14499
  %41 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !14499
  %arrayidx49 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %41, i64 %idxprom48, !dbg !14499
  %pend_env50 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx49, i32 0, i32 0, !dbg !14500
  %has_start_point51 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env50, i32 0, i32 0, !dbg !14501
  %42 = load i32, i32* %has_start_point51, align 4, !dbg !14501
  %43 = load i32, i32* %sb, align 4, !dbg !14502
  %idxprom52 = sext i32 %43 to i64, !dbg !14503
  %44 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14503
  %arrayidx53 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %44, i64 %idxprom52, !dbg !14503
  %pend_env54 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx53, i32 0, i32 0, !dbg !14504
  %has_start_point55 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env54, i32 0, i32 0, !dbg !14505
  store i32 %42, i32* %has_start_point55, align 4, !dbg !14506
  %45 = load i32, i32* %sb, align 4, !dbg !14507
  %idxprom56 = sext i32 %45 to i64, !dbg !14508
  %46 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !14508
  %arrayidx57 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %46, i64 %idxprom56, !dbg !14508
  %pend_env58 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx57, i32 0, i32 0, !dbg !14509
  %has_stop_point59 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env58, i32 0, i32 1, !dbg !14510
  %47 = load i32, i32* %has_stop_point59, align 4, !dbg !14510
  %48 = load i32, i32* %sb, align 4, !dbg !14511
  %idxprom60 = sext i32 %48 to i64, !dbg !14512
  %49 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14512
  %arrayidx61 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %49, i64 %idxprom60, !dbg !14512
  %pend_env62 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx61, i32 0, i32 0, !dbg !14513
  %has_stop_point63 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env62, i32 0, i32 1, !dbg !14514
  store i32 %47, i32* %has_stop_point63, align 4, !dbg !14515
  %50 = load i32, i32* %sb, align 4, !dbg !14516
  %idxprom64 = sext i32 %50 to i64, !dbg !14517
  %51 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !14517
  %arrayidx65 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %51, i64 %idxprom64, !dbg !14517
  %pend_env66 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx65, i32 0, i32 0, !dbg !14518
  %start_pos67 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env66, i32 0, i32 2, !dbg !14519
  %52 = load i32, i32* %start_pos67, align 4, !dbg !14519
  %53 = load i32, i32* %sb, align 4, !dbg !14520
  %idxprom68 = sext i32 %53 to i64, !dbg !14521
  %54 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14521
  %arrayidx69 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %54, i64 %idxprom68, !dbg !14521
  %pend_env70 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx69, i32 0, i32 0, !dbg !14522
  %start_pos71 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env70, i32 0, i32 2, !dbg !14523
  store i32 %52, i32* %start_pos71, align 4, !dbg !14524
  %55 = load i32, i32* %sb, align 4, !dbg !14525
  %idxprom72 = sext i32 %55 to i64, !dbg !14526
  %56 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !14526
  %arrayidx73 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %56, i64 %idxprom72, !dbg !14526
  %pend_env74 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx73, i32 0, i32 0, !dbg !14527
  %stop_pos75 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env74, i32 0, i32 3, !dbg !14528
  %57 = load i32, i32* %stop_pos75, align 4, !dbg !14528
  %58 = load i32, i32* %sb, align 4, !dbg !14529
  %idxprom76 = sext i32 %58 to i64, !dbg !14530
  %59 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14530
  %arrayidx77 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %59, i64 %idxprom76, !dbg !14530
  %pend_env78 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx77, i32 0, i32 0, !dbg !14531
  %stop_pos79 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env78, i32 0, i32 3, !dbg !14532
  store i32 %57, i32* %stop_pos79, align 4, !dbg !14533
  br label %for.inc80, !dbg !14534

for.inc80:                                        ; preds = %if.end47, %if.then46
  %60 = load i32, i32* %sb, align 4, !dbg !14535
  %inc81 = add nsw i32 %60, 1, !dbg !14535
  store i32 %inc81, i32* %sb, align 4, !dbg !14535
  br label %for.cond38, !dbg !14537, !llvm.loop !14538

for.end82:                                        ; preds = %for.cond38
  br label %if.end83

if.end83:                                         ; preds = %for.end82, %for.end
  ret void, !dbg !14540
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_band_numwavs(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32* %band_has_tones, %struct.AVCodecContext* %avctx) #3 !dbg !14541 {
entry:
  %x.addr.i96.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i107, metadata !2531, metadata !1324), !dbg !14544
  %x.addr.i81.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i108, metadata !2531, metadata !1324), !dbg !14552
  %x.addr.i.i109 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i109, metadata !2531, metadata !1324), !dbg !14554
  %s.addr.i110 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i110, metadata !3291, metadata !1324), !dbg !14556
  %table.addr.i111 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i111, metadata !3293, metadata !1324), !dbg !14557
  %bits.addr.i112 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i112, metadata !3295, metadata !1324), !dbg !14558
  %max_depth.addr.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i113, metadata !3297, metadata !1324), !dbg !14559
  %code.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i114, metadata !3299, metadata !1324), !dbg !14560
  %re_index.i115 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i115, metadata !3301, metadata !1324), !dbg !14561
  %re_cache.i116 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i116, metadata !3303, metadata !1324), !dbg !14562
  %re_size_plus8.i117 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i117, metadata !3305, metadata !1324), !dbg !14563
  %n.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i118, metadata !3307, metadata !1324), !dbg !14564
  %nb_bits.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i119, metadata !3309, metadata !1324), !dbg !14565
  %index1.i120 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i120, metadata !3311, metadata !1324), !dbg !14566
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !14567
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !14573
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !14575
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !14577
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !14578
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !14579
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !14580
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !14581
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !14582
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !14583
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !14584
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !14585
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !14586
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !14587
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %band_has_tones.addr = alloca i32*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %mode = alloca i32, align 4
  %sb = alloca i32, align 4
  %delta = alloca i32, align 4
  %dst = alloca %struct.Atrac3pWavesData*, align 8
  %ref = alloca %struct.Atrac3pWavesData*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !14588, metadata !1324), !dbg !14589
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !14590, metadata !1324), !dbg !14591
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !14592, metadata !1324), !dbg !14593
  store i32* %band_has_tones, i32** %band_has_tones.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_has_tones.addr, metadata !14594, metadata !1324), !dbg !14595
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !14596, metadata !1324), !dbg !14597
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !14598, metadata !1324), !dbg !14599
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !14600, metadata !1324), !dbg !14601
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !14602, metadata !1324), !dbg !14603
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %dst, metadata !14604, metadata !1324), !dbg !14605
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !14606
  %idxprom = sext i32 %0 to i64, !dbg !14607
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14607
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !14608
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !14607
  %tones_info = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 18, !dbg !14609
  %2 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info, align 8, !dbg !14609
  store %struct.Atrac3pWavesData* %2, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14605
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %ref, metadata !14610, metadata !1324), !dbg !14611
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14612
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !14613
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !14612
  %tones_info3 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx2, i32 0, i32 18, !dbg !14614
  %4 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info3, align 8, !dbg !14614
  store %struct.Atrac3pWavesData* %4, %struct.Atrac3pWavesData** %ref, align 8, !dbg !14611
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14615
  %6 = load i32, i32* %ch_num.addr, align 4, !dbg !14616
  %add = add nsw i32 %6, 1, !dbg !14617
  %call = call i32 @get_bits(%struct.GetBitContext* %5, i32 %add), !dbg !14618
  store i32 %call, i32* %mode, align 4, !dbg !14619
  %7 = load i32, i32* %mode, align 4, !dbg !14620
  switch i32 %7, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb27
    i32 3, label %sw.bb50
  ], !dbg !14621

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %sb, align 4, !dbg !14622
  br label %for.cond, !dbg !14624

for.cond:                                         ; preds = %for.inc, %sw.bb
  %8 = load i32, i32* %sb, align 4, !dbg !14625
  %9 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14628
  %waves_info = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %9, i32 0, i32 14, !dbg !14629
  %10 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info, align 8, !dbg !14629
  %num_tone_bands = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %10, i32 0, i32 2, !dbg !14630
  %11 = load i32, i32* %num_tone_bands, align 4, !dbg !14630
  %cmp = icmp slt i32 %8, %11, !dbg !14631
  br i1 %cmp, label %for.body, label %for.end, !dbg !14632

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %sb, align 4, !dbg !14633
  %idxprom4 = sext i32 %12 to i64, !dbg !14635
  %13 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !14635
  %arrayidx5 = getelementptr inbounds i32, i32* %13, i64 %idxprom4, !dbg !14635
  %14 = load i32, i32* %arrayidx5, align 4, !dbg !14635
  %tobool = icmp ne i32 %14, 0, !dbg !14635
  br i1 %tobool, label %if.then, label %if.end, !dbg !14636

if.then:                                          ; preds = %for.body
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14637
  %call6 = call i32 @get_bits(%struct.GetBitContext* %15, i32 4), !dbg !14638
  %16 = load i32, i32* %sb, align 4, !dbg !14639
  %idxprom7 = sext i32 %16 to i64, !dbg !14640
  %17 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14640
  %arrayidx8 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %17, i64 %idxprom7, !dbg !14640
  %num_wavs = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx8, i32 0, i32 2, !dbg !14641
  store i32 %call6, i32* %num_wavs, align 4, !dbg !14642
  br label %if.end, !dbg !14640

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !14643

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %sb, align 4, !dbg !14645
  %inc = add nsw i32 %18, 1, !dbg !14645
  store i32 %inc, i32* %sb, align 4, !dbg !14645
  br label %for.cond, !dbg !14647, !llvm.loop !14648

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !14650

sw.bb9:                                           ; preds = %entry
  store i32 0, i32* %sb, align 4, !dbg !14651
  br label %for.cond10, !dbg !14652

for.cond10:                                       ; preds = %for.inc24, %sw.bb9
  %19 = load i32, i32* %sb, align 4, !dbg !14653
  %20 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14655
  %waves_info11 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %20, i32 0, i32 14, !dbg !14656
  %21 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info11, align 8, !dbg !14656
  %num_tone_bands12 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %21, i32 0, i32 2, !dbg !14657
  %22 = load i32, i32* %num_tone_bands12, align 4, !dbg !14657
  %cmp13 = icmp slt i32 %19, %22, !dbg !14658
  br i1 %cmp13, label %for.body14, label %for.end26, !dbg !14659

for.body14:                                       ; preds = %for.cond10
  %23 = load i32, i32* %sb, align 4, !dbg !14660
  %idxprom15 = sext i32 %23 to i64, !dbg !14661
  %24 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !14661
  %arrayidx16 = getelementptr inbounds i32, i32* %24, i64 %idxprom15, !dbg !14661
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !14661
  %tobool17 = icmp ne i32 %25, 0, !dbg !14661
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !14662

if.then18:                                        ; preds = %for.body14
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14663
  %27 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 1, i32 1), align 8, !dbg !14664
  %28 = load i32, i32* getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 1, i32 0), align 8, !dbg !14665
  store %struct.GetBitContext* %26, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14666
  store [2 x i16]* %27, [2 x i16]** %table.addr.i, align 8, !dbg !14666
  store i32 %28, i32* %bits.addr.i, align 4, !dbg !14666
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !14666
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14667
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %29, i32 0, i32 2, !dbg !14668
  %30 = load i32, i32* %index.i, align 8, !dbg !14668
  store i32 %30, i32* %re_index.i, align 4, !dbg !14582
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14669
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %31, i32 0, i32 4, !dbg !14670
  %32 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !14670
  store i32 %32, i32* %re_size_plus8.i, align 4, !dbg !14584
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14671
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %33, i32 0, i32 0, !dbg !14672
  %34 = load i8*, i8** %buffer.i, align 8, !dbg !14672
  %35 = load i32, i32* %re_index.i, align 4, !dbg !14673
  %shr.i = lshr i32 %35, 3, !dbg !14674
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !14675
  %add.ptr.i = getelementptr inbounds i8, i8* %34, i64 %idx.ext.i, !dbg !14675
  %36 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !14676
  %l.i = bitcast %union.unaligned_32* %36 to i32*, !dbg !14676
  %37 = load i32, i32* %l.i, align 1, !dbg !14676
  store i32 %37, i32* %x.addr.i.i, align 4, !dbg !14677
  %38 = load i32, i32* %x.addr.i.i, align 4, !dbg !14678
  %shl.i.i = shl i32 %38, 8, !dbg !14679
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !14680
  %39 = load i32, i32* %x.addr.i.i, align 4, !dbg !14681
  %shr.i.i = lshr i32 %39, 8, !dbg !14682
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !14683
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !14684
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !14685
  %40 = load i32, i32* %x.addr.i.i, align 4, !dbg !14686
  %shr3.i.i = lshr i32 %40, 16, !dbg !14687
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !14688
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !14689
  %41 = load i32, i32* %x.addr.i.i, align 4, !dbg !14690
  %shr6.i.i = lshr i32 %41, 16, !dbg !14691
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !14692
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !14693
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !14694
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !14695
  %42 = load i32, i32* %re_index.i, align 4, !dbg !14696
  %and.i = and i32 %42, 7, !dbg !14697
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !14698
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !14699
  %43 = load i32, i32* %re_cache.i, align 4, !dbg !14700
  %44 = load i32, i32* %bits.addr.i, align 4, !dbg !14701
  %conv.i = trunc i32 %44 to i8, !dbg !14701
  %call2.i = call i32 @NEG_USR32(i32 %43, i8 signext %conv.i) #9, !dbg !14702
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !14703
  %45 = load i32, i32* %index1.i, align 4, !dbg !14704
  %idxprom.i = zext i32 %45 to i64, !dbg !14705
  %46 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14705
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %46, i64 %idxprom.i, !dbg !14705
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !14705
  %47 = load i16, i16* %arrayidx3.i, align 2, !dbg !14705
  %conv4.i = sext i16 %47 to i32, !dbg !14705
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !14706
  %48 = load i32, i32* %index1.i, align 4, !dbg !14707
  %idxprom5.i = zext i32 %48 to i64, !dbg !14708
  %49 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14708
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %49, i64 %idxprom5.i, !dbg !14708
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !14708
  %50 = load i16, i16* %arrayidx7.i, align 2, !dbg !14708
  %conv8.i = sext i16 %50 to i32, !dbg !14708
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !14709
  %51 = load i32, i32* %max_depth.addr.i, align 4, !dbg !14710
  %cmp.i = icmp sgt i32 %51, 1, !dbg !14711
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !14712

land.lhs.true.i:                                  ; preds = %if.then18
  %52 = load i32, i32* %n.i, align 4, !dbg !14713
  %cmp10.i = icmp slt i32 %52, 0, !dbg !14714
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !14715

if.then.i:                                        ; preds = %land.lhs.true.i
  %53 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14716
  %54 = load i32, i32* %re_index.i, align 4, !dbg !14717
  %55 = load i32, i32* %bits.addr.i, align 4, !dbg !14718
  %add.i = add i32 %54, %55, !dbg !14719
  %cmp12.i = icmp ugt i32 %53, %add.i, !dbg !14720
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !14721

cond.true.i:                                      ; preds = %if.then.i
  %56 = load i32, i32* %re_index.i, align 4, !dbg !14722
  %57 = load i32, i32* %bits.addr.i, align 4, !dbg !14723
  %add14.i = add i32 %56, %57, !dbg !14724
  br label %cond.end.i, !dbg !14725

cond.false.i:                                     ; preds = %if.then.i
  %58 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14726
  br label %cond.end.i, !dbg !14727

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %58, %cond.false.i ], !dbg !14728
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !14729
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14730
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %59, i32 0, i32 0, !dbg !14731
  %60 = load i8*, i8** %buffer15.i, align 8, !dbg !14731
  %61 = load i32, i32* %re_index.i, align 4, !dbg !14732
  %shr16.i = lshr i32 %61, 3, !dbg !14733
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !14734
  %add.ptr18.i = getelementptr inbounds i8, i8* %60, i64 %idx.ext17.i, !dbg !14734
  %62 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !14735
  %l19.i = bitcast %union.unaligned_32* %62 to i32*, !dbg !14735
  %63 = load i32, i32* %l19.i, align 1, !dbg !14735
  store i32 %63, i32* %x.addr.i81.i, align 4, !dbg !14736
  %64 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14737
  %shl.i82.i = shl i32 %64, 8, !dbg !14738
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !14739
  %65 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14740
  %shr.i84.i = lshr i32 %65, 8, !dbg !14741
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !14742
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !14743
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !14744
  %66 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14745
  %shr3.i88.i = lshr i32 %66, 16, !dbg !14746
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !14747
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !14748
  %67 = load i32, i32* %x.addr.i81.i, align 4, !dbg !14749
  %shr6.i91.i = lshr i32 %67, 16, !dbg !14750
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !14751
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !14752
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !14753
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !14754
  %68 = load i32, i32* %re_index.i, align 4, !dbg !14755
  %and21.i = and i32 %68, 7, !dbg !14756
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !14757
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !14758
  %69 = load i32, i32* %n.i, align 4, !dbg !14759
  %sub.i = sub nsw i32 0, %69, !dbg !14760
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !14761
  %70 = load i32, i32* %re_cache.i, align 4, !dbg !14762
  %71 = load i32, i32* %nb_bits.i, align 4, !dbg !14763
  %conv23.i = trunc i32 %71 to i8, !dbg !14763
  %call24.i = call i32 @NEG_USR32(i32 %70, i8 signext %conv23.i) #9, !dbg !14764
  %72 = load i32, i32* %code.i, align 4, !dbg !14765
  %add25.i = add i32 %call24.i, %72, !dbg !14766
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !14767
  %73 = load i32, i32* %index1.i, align 4, !dbg !14768
  %idxprom26.i = zext i32 %73 to i64, !dbg !14769
  %74 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14769
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %74, i64 %idxprom26.i, !dbg !14769
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !14769
  %75 = load i16, i16* %arrayidx28.i, align 2, !dbg !14769
  %conv29.i = sext i16 %75 to i32, !dbg !14769
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !14770
  %76 = load i32, i32* %index1.i, align 4, !dbg !14771
  %idxprom30.i = zext i32 %76 to i64, !dbg !14772
  %77 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14772
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %77, i64 %idxprom30.i, !dbg !14772
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !14772
  %78 = load i16, i16* %arrayidx32.i, align 2, !dbg !14772
  %conv33.i = sext i16 %78 to i32, !dbg !14772
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !14773
  %79 = load i32, i32* %max_depth.addr.i, align 4, !dbg !14774
  %cmp34.i = icmp sgt i32 %79, 2, !dbg !14775
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !14776

land.lhs.true36.i:                                ; preds = %cond.end.i
  %80 = load i32, i32* %n.i, align 4, !dbg !14777
  %cmp37.i = icmp slt i32 %80, 0, !dbg !14778
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !14779

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %81 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14780
  %82 = load i32, i32* %re_index.i, align 4, !dbg !14781
  %83 = load i32, i32* %nb_bits.i, align 4, !dbg !14782
  %add40.i = add i32 %82, %83, !dbg !14783
  %cmp41.i = icmp ugt i32 %81, %add40.i, !dbg !14784
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !14785

cond.true43.i:                                    ; preds = %if.then39.i
  %84 = load i32, i32* %re_index.i, align 4, !dbg !14786
  %85 = load i32, i32* %nb_bits.i, align 4, !dbg !14787
  %add44.i = add i32 %84, %85, !dbg !14788
  br label %cond.end46.i, !dbg !14789

cond.false45.i:                                   ; preds = %if.then39.i
  %86 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14790
  br label %cond.end46.i, !dbg !14791

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %86, %cond.false45.i ], !dbg !14792
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !14793
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14794
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %87, i32 0, i32 0, !dbg !14795
  %88 = load i8*, i8** %buffer48.i, align 8, !dbg !14795
  %89 = load i32, i32* %re_index.i, align 4, !dbg !14796
  %shr49.i = lshr i32 %89, 3, !dbg !14797
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !14798
  %add.ptr51.i = getelementptr inbounds i8, i8* %88, i64 %idx.ext50.i, !dbg !14798
  %90 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !14799
  %l52.i = bitcast %union.unaligned_32* %90 to i32*, !dbg !14799
  %91 = load i32, i32* %l52.i, align 1, !dbg !14799
  store i32 %91, i32* %x.addr.i96.i, align 4, !dbg !14800
  %92 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14801
  %shl.i97.i = shl i32 %92, 8, !dbg !14802
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !14803
  %93 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14804
  %shr.i99.i = lshr i32 %93, 8, !dbg !14805
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !14806
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !14807
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !14808
  %94 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14809
  %shr3.i103.i = lshr i32 %94, 16, !dbg !14810
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !14811
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !14812
  %95 = load i32, i32* %x.addr.i96.i, align 4, !dbg !14813
  %shr6.i106.i = lshr i32 %95, 16, !dbg !14814
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !14815
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !14816
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !14817
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !14818
  %96 = load i32, i32* %re_index.i, align 4, !dbg !14819
  %and54.i = and i32 %96, 7, !dbg !14820
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !14821
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !14822
  %97 = load i32, i32* %n.i, align 4, !dbg !14823
  %sub56.i = sub nsw i32 0, %97, !dbg !14824
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !14825
  %98 = load i32, i32* %re_cache.i, align 4, !dbg !14826
  %99 = load i32, i32* %nb_bits.i, align 4, !dbg !14827
  %conv57.i = trunc i32 %99 to i8, !dbg !14827
  %call58.i = call i32 @NEG_USR32(i32 %98, i8 signext %conv57.i) #9, !dbg !14828
  %100 = load i32, i32* %code.i, align 4, !dbg !14829
  %add59.i = add i32 %call58.i, %100, !dbg !14830
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !14831
  %101 = load i32, i32* %index1.i, align 4, !dbg !14832
  %idxprom60.i = zext i32 %101 to i64, !dbg !14833
  %102 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14833
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %102, i64 %idxprom60.i, !dbg !14833
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !14833
  %103 = load i16, i16* %arrayidx62.i, align 2, !dbg !14833
  %conv63.i = sext i16 %103 to i32, !dbg !14833
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !14834
  %104 = load i32, i32* %index1.i, align 4, !dbg !14835
  %idxprom64.i = zext i32 %104 to i64, !dbg !14836
  %105 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !14836
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %105, i64 %idxprom64.i, !dbg !14836
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !14836
  %106 = load i16, i16* %arrayidx66.i, align 2, !dbg !14836
  %conv67.i = sext i16 %106 to i32, !dbg !14836
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !14837
  br label %if.end.i, !dbg !14838

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !14839

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.then18
  %107 = load i32, i32* %n.i, align 4, !dbg !14840
  %108 = load i32, i32* %re_cache.i, align 4, !dbg !14841
  %shl70.i = shl i32 %108, %107, !dbg !14841
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !14841
  %109 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14842
  %110 = load i32, i32* %re_index.i, align 4, !dbg !14843
  %111 = load i32, i32* %n.i, align 4, !dbg !14844
  %add71.i = add i32 %110, %111, !dbg !14845
  %cmp72.i = icmp ugt i32 %109, %add71.i, !dbg !14846
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !14847

cond.true74.i:                                    ; preds = %if.end68.i
  %112 = load i32, i32* %re_index.i, align 4, !dbg !14848
  %113 = load i32, i32* %n.i, align 4, !dbg !14849
  %add75.i = add i32 %112, %113, !dbg !14850
  br label %get_vlc2.exit, !dbg !14851

cond.false76.i:                                   ; preds = %if.end68.i
  %114 = load i32, i32* %re_size_plus8.i, align 4, !dbg !14852
  br label %get_vlc2.exit, !dbg !14853

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %114, %cond.false76.i ], !dbg !14854
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !14855
  %115 = load i32, i32* %re_index.i, align 4, !dbg !14856
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !14857
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %116, i32 0, i32 2, !dbg !14858
  store i32 %115, i32* %index80.i, align 8, !dbg !14859
  %117 = load i32, i32* %code.i, align 4, !dbg !14860
  %118 = load i32, i32* %sb, align 4, !dbg !14861
  %idxprom20 = sext i32 %118 to i64, !dbg !14862
  %119 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !14862
  %arrayidx21 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %119, i64 %idxprom20, !dbg !14862
  %num_wavs22 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx21, i32 0, i32 2, !dbg !14863
  store i32 %117, i32* %num_wavs22, align 4, !dbg !14864
  br label %if.end23, !dbg !14862

if.end23:                                         ; preds = %get_vlc2.exit, %for.body14
  br label %for.inc24, !dbg !14865

for.inc24:                                        ; preds = %if.end23
  %120 = load i32, i32* %sb, align 4, !dbg !14867
  %inc25 = add nsw i32 %120, 1, !dbg !14867
  store i32 %inc25, i32* %sb, align 4, !dbg !14867
  br label %for.cond10, !dbg !14869, !llvm.loop !14870

for.end26:                                        ; preds = %for.cond10
  br label %sw.epilog, !dbg !14872

sw.bb27:                                          ; preds = %entry
  store i32 0, i32* %sb, align 4, !dbg !14873
  br label %for.cond28, !dbg !14874

for.cond28:                                       ; preds = %for.inc47, %sw.bb27
  %121 = load i32, i32* %sb, align 4, !dbg !14875
  %122 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !14877
  %waves_info29 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %122, i32 0, i32 14, !dbg !14878
  %123 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info29, align 8, !dbg !14878
  %num_tone_bands30 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %123, i32 0, i32 2, !dbg !14879
  %124 = load i32, i32* %num_tone_bands30, align 4, !dbg !14879
  %cmp31 = icmp slt i32 %121, %124, !dbg !14880
  br i1 %cmp31, label %for.body32, label %for.end49, !dbg !14881

for.body32:                                       ; preds = %for.cond28
  %125 = load i32, i32* %sb, align 4, !dbg !14882
  %idxprom33 = sext i32 %125 to i64, !dbg !14883
  %126 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !14883
  %arrayidx34 = getelementptr inbounds i32, i32* %126, i64 %idxprom33, !dbg !14883
  %127 = load i32, i32* %arrayidx34, align 4, !dbg !14883
  %tobool35 = icmp ne i32 %127, 0, !dbg !14883
  br i1 %tobool35, label %if.then36, label %if.end46, !dbg !14884

if.then36:                                        ; preds = %for.body32
  %128 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !14885
  %129 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 2, i32 1), align 8, !dbg !14886
  %130 = load i32, i32* getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 2, i32 0), align 16, !dbg !14887
  store %struct.GetBitContext* %128, %struct.GetBitContext** %s.addr.i110, align 8, !dbg !14888
  store [2 x i16]* %129, [2 x i16]** %table.addr.i111, align 8, !dbg !14888
  store i32 %130, i32* %bits.addr.i112, align 4, !dbg !14888
  store i32 1, i32* %max_depth.addr.i113, align 4, !dbg !14888
  %131 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i110, align 8, !dbg !14889
  %index.i121 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %131, i32 0, i32 2, !dbg !14890
  %132 = load i32, i32* %index.i121, align 8, !dbg !14890
  store i32 %132, i32* %re_index.i115, align 4, !dbg !14561
  %133 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i110, align 8, !dbg !14891
  %size_in_bits_plus8.i122 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %133, i32 0, i32 4, !dbg !14892
  %134 = load i32, i32* %size_in_bits_plus8.i122, align 8, !dbg !14892
  store i32 %134, i32* %re_size_plus8.i117, align 4, !dbg !14563
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i110, align 8, !dbg !14893
  %buffer.i123 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %135, i32 0, i32 0, !dbg !14894
  %136 = load i8*, i8** %buffer.i123, align 8, !dbg !14894
  %137 = load i32, i32* %re_index.i115, align 4, !dbg !14895
  %shr.i124 = lshr i32 %137, 3, !dbg !14896
  %idx.ext.i125 = zext i32 %shr.i124 to i64, !dbg !14897
  %add.ptr.i126 = getelementptr inbounds i8, i8* %136, i64 %idx.ext.i125, !dbg !14897
  %138 = bitcast i8* %add.ptr.i126 to %union.unaligned_32*, !dbg !14898
  %l.i127 = bitcast %union.unaligned_32* %138 to i32*, !dbg !14898
  %139 = load i32, i32* %l.i127, align 1, !dbg !14898
  store i32 %139, i32* %x.addr.i.i109, align 4, !dbg !14899
  %140 = load i32, i32* %x.addr.i.i109, align 4, !dbg !14900
  %shl.i.i128 = shl i32 %140, 8, !dbg !14901
  %and.i.i129 = and i32 %shl.i.i128, 65280, !dbg !14902
  %141 = load i32, i32* %x.addr.i.i109, align 4, !dbg !14903
  %shr.i.i130 = lshr i32 %141, 8, !dbg !14904
  %and1.i.i131 = and i32 %shr.i.i130, 255, !dbg !14905
  %or.i.i132 = or i32 %and.i.i129, %and1.i.i131, !dbg !14906
  %shl2.i.i133 = shl i32 %or.i.i132, 16, !dbg !14907
  %142 = load i32, i32* %x.addr.i.i109, align 4, !dbg !14908
  %shr3.i.i134 = lshr i32 %142, 16, !dbg !14909
  %shl4.i.i135 = shl i32 %shr3.i.i134, 8, !dbg !14910
  %and5.i.i136 = and i32 %shl4.i.i135, 65280, !dbg !14911
  %143 = load i32, i32* %x.addr.i.i109, align 4, !dbg !14912
  %shr6.i.i137 = lshr i32 %143, 16, !dbg !14913
  %shr7.i.i138 = lshr i32 %shr6.i.i137, 8, !dbg !14914
  %and8.i.i139 = and i32 %shr7.i.i138, 255, !dbg !14915
  %or9.i.i140 = or i32 %and5.i.i136, %and8.i.i139, !dbg !14916
  %or10.i.i141 = or i32 %shl2.i.i133, %or9.i.i140, !dbg !14917
  %144 = load i32, i32* %re_index.i115, align 4, !dbg !14918
  %and.i142 = and i32 %144, 7, !dbg !14919
  %shl.i143 = shl i32 %or10.i.i141, %and.i142, !dbg !14920
  store i32 %shl.i143, i32* %re_cache.i116, align 4, !dbg !14921
  %145 = load i32, i32* %re_cache.i116, align 4, !dbg !14922
  %146 = load i32, i32* %bits.addr.i112, align 4, !dbg !14923
  %conv.i144 = trunc i32 %146 to i8, !dbg !14923
  %call2.i145 = call i32 @NEG_USR32(i32 %145, i8 signext %conv.i144) #9, !dbg !14924
  store i32 %call2.i145, i32* %index1.i120, align 4, !dbg !14925
  %147 = load i32, i32* %index1.i120, align 4, !dbg !14926
  %idxprom.i146 = zext i32 %147 to i64, !dbg !14927
  %148 = load [2 x i16]*, [2 x i16]** %table.addr.i111, align 8, !dbg !14927
  %arrayidx.i147 = getelementptr inbounds [2 x i16], [2 x i16]* %148, i64 %idxprom.i146, !dbg !14927
  %arrayidx3.i148 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i147, i64 0, i64 0, !dbg !14927
  %149 = load i16, i16* %arrayidx3.i148, align 2, !dbg !14927
  %conv4.i149 = sext i16 %149 to i32, !dbg !14927
  store i32 %conv4.i149, i32* %code.i114, align 4, !dbg !14928
  %150 = load i32, i32* %index1.i120, align 4, !dbg !14929
  %idxprom5.i150 = zext i32 %150 to i64, !dbg !14930
  %151 = load [2 x i16]*, [2 x i16]** %table.addr.i111, align 8, !dbg !14930
  %arrayidx6.i151 = getelementptr inbounds [2 x i16], [2 x i16]* %151, i64 %idxprom5.i150, !dbg !14930
  %arrayidx7.i152 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i151, i64 0, i64 1, !dbg !14930
  %152 = load i16, i16* %arrayidx7.i152, align 2, !dbg !14930
  %conv8.i153 = sext i16 %152 to i32, !dbg !14930
  store i32 %conv8.i153, i32* %n.i118, align 4, !dbg !14931
  %153 = load i32, i32* %max_depth.addr.i113, align 4, !dbg !14932
  %cmp.i154 = icmp sgt i32 %153, 1, !dbg !14933
  br i1 %cmp.i154, label %land.lhs.true.i156, label %if.end68.i243, !dbg !14934

land.lhs.true.i156:                               ; preds = %if.then36
  %154 = load i32, i32* %n.i118, align 4, !dbg !14935
  %cmp10.i155 = icmp slt i32 %154, 0, !dbg !14936
  br i1 %cmp10.i155, label %if.then.i159, label %if.end68.i243, !dbg !14937

if.then.i159:                                     ; preds = %land.lhs.true.i156
  %155 = load i32, i32* %re_size_plus8.i117, align 4, !dbg !14938
  %156 = load i32, i32* %re_index.i115, align 4, !dbg !14939
  %157 = load i32, i32* %bits.addr.i112, align 4, !dbg !14940
  %add.i157 = add i32 %156, %157, !dbg !14941
  %cmp12.i158 = icmp ugt i32 %155, %add.i157, !dbg !14942
  br i1 %cmp12.i158, label %cond.true.i161, label %cond.false.i162, !dbg !14943

cond.true.i161:                                   ; preds = %if.then.i159
  %158 = load i32, i32* %re_index.i115, align 4, !dbg !14944
  %159 = load i32, i32* %bits.addr.i112, align 4, !dbg !14945
  %add14.i160 = add i32 %158, %159, !dbg !14946
  br label %cond.end.i198, !dbg !14947

cond.false.i162:                                  ; preds = %if.then.i159
  %160 = load i32, i32* %re_size_plus8.i117, align 4, !dbg !14948
  br label %cond.end.i198, !dbg !14949

cond.end.i198:                                    ; preds = %cond.false.i162, %cond.true.i161
  %cond.i163 = phi i32 [ %add14.i160, %cond.true.i161 ], [ %160, %cond.false.i162 ], !dbg !14950
  store i32 %cond.i163, i32* %re_index.i115, align 4, !dbg !14951
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i110, align 8, !dbg !14952
  %buffer15.i164 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %161, i32 0, i32 0, !dbg !14953
  %162 = load i8*, i8** %buffer15.i164, align 8, !dbg !14953
  %163 = load i32, i32* %re_index.i115, align 4, !dbg !14954
  %shr16.i165 = lshr i32 %163, 3, !dbg !14955
  %idx.ext17.i166 = zext i32 %shr16.i165 to i64, !dbg !14956
  %add.ptr18.i167 = getelementptr inbounds i8, i8* %162, i64 %idx.ext17.i166, !dbg !14956
  %164 = bitcast i8* %add.ptr18.i167 to %union.unaligned_32*, !dbg !14957
  %l19.i168 = bitcast %union.unaligned_32* %164 to i32*, !dbg !14957
  %165 = load i32, i32* %l19.i168, align 1, !dbg !14957
  store i32 %165, i32* %x.addr.i81.i108, align 4, !dbg !14958
  %166 = load i32, i32* %x.addr.i81.i108, align 4, !dbg !14959
  %shl.i82.i169 = shl i32 %166, 8, !dbg !14960
  %and.i83.i170 = and i32 %shl.i82.i169, 65280, !dbg !14961
  %167 = load i32, i32* %x.addr.i81.i108, align 4, !dbg !14962
  %shr.i84.i171 = lshr i32 %167, 8, !dbg !14963
  %and1.i85.i172 = and i32 %shr.i84.i171, 255, !dbg !14964
  %or.i86.i173 = or i32 %and.i83.i170, %and1.i85.i172, !dbg !14965
  %shl2.i87.i174 = shl i32 %or.i86.i173, 16, !dbg !14966
  %168 = load i32, i32* %x.addr.i81.i108, align 4, !dbg !14967
  %shr3.i88.i175 = lshr i32 %168, 16, !dbg !14968
  %shl4.i89.i176 = shl i32 %shr3.i88.i175, 8, !dbg !14969
  %and5.i90.i177 = and i32 %shl4.i89.i176, 65280, !dbg !14970
  %169 = load i32, i32* %x.addr.i81.i108, align 4, !dbg !14971
  %shr6.i91.i178 = lshr i32 %169, 16, !dbg !14972
  %shr7.i92.i179 = lshr i32 %shr6.i91.i178, 8, !dbg !14973
  %and8.i93.i180 = and i32 %shr7.i92.i179, 255, !dbg !14974
  %or9.i94.i181 = or i32 %and5.i90.i177, %and8.i93.i180, !dbg !14975
  %or10.i95.i182 = or i32 %shl2.i87.i174, %or9.i94.i181, !dbg !14976
  %170 = load i32, i32* %re_index.i115, align 4, !dbg !14977
  %and21.i183 = and i32 %170, 7, !dbg !14978
  %shl22.i184 = shl i32 %or10.i95.i182, %and21.i183, !dbg !14979
  store i32 %shl22.i184, i32* %re_cache.i116, align 4, !dbg !14980
  %171 = load i32, i32* %n.i118, align 4, !dbg !14981
  %sub.i185 = sub nsw i32 0, %171, !dbg !14982
  store i32 %sub.i185, i32* %nb_bits.i119, align 4, !dbg !14983
  %172 = load i32, i32* %re_cache.i116, align 4, !dbg !14984
  %173 = load i32, i32* %nb_bits.i119, align 4, !dbg !14985
  %conv23.i186 = trunc i32 %173 to i8, !dbg !14985
  %call24.i187 = call i32 @NEG_USR32(i32 %172, i8 signext %conv23.i186) #9, !dbg !14986
  %174 = load i32, i32* %code.i114, align 4, !dbg !14987
  %add25.i188 = add i32 %call24.i187, %174, !dbg !14988
  store i32 %add25.i188, i32* %index1.i120, align 4, !dbg !14989
  %175 = load i32, i32* %index1.i120, align 4, !dbg !14990
  %idxprom26.i189 = zext i32 %175 to i64, !dbg !14991
  %176 = load [2 x i16]*, [2 x i16]** %table.addr.i111, align 8, !dbg !14991
  %arrayidx27.i190 = getelementptr inbounds [2 x i16], [2 x i16]* %176, i64 %idxprom26.i189, !dbg !14991
  %arrayidx28.i191 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i190, i64 0, i64 0, !dbg !14991
  %177 = load i16, i16* %arrayidx28.i191, align 2, !dbg !14991
  %conv29.i192 = sext i16 %177 to i32, !dbg !14991
  store i32 %conv29.i192, i32* %code.i114, align 4, !dbg !14992
  %178 = load i32, i32* %index1.i120, align 4, !dbg !14993
  %idxprom30.i193 = zext i32 %178 to i64, !dbg !14994
  %179 = load [2 x i16]*, [2 x i16]** %table.addr.i111, align 8, !dbg !14994
  %arrayidx31.i194 = getelementptr inbounds [2 x i16], [2 x i16]* %179, i64 %idxprom30.i193, !dbg !14994
  %arrayidx32.i195 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i194, i64 0, i64 1, !dbg !14994
  %180 = load i16, i16* %arrayidx32.i195, align 2, !dbg !14994
  %conv33.i196 = sext i16 %180 to i32, !dbg !14994
  store i32 %conv33.i196, i32* %n.i118, align 4, !dbg !14995
  %181 = load i32, i32* %max_depth.addr.i113, align 4, !dbg !14996
  %cmp34.i197 = icmp sgt i32 %181, 2, !dbg !14997
  br i1 %cmp34.i197, label %land.lhs.true36.i200, label %if.end.i242, !dbg !14998

land.lhs.true36.i200:                             ; preds = %cond.end.i198
  %182 = load i32, i32* %n.i118, align 4, !dbg !14999
  %cmp37.i199 = icmp slt i32 %182, 0, !dbg !15000
  br i1 %cmp37.i199, label %if.then39.i203, label %if.end.i242, !dbg !15001

if.then39.i203:                                   ; preds = %land.lhs.true36.i200
  %183 = load i32, i32* %re_size_plus8.i117, align 4, !dbg !15002
  %184 = load i32, i32* %re_index.i115, align 4, !dbg !15003
  %185 = load i32, i32* %nb_bits.i119, align 4, !dbg !15004
  %add40.i201 = add i32 %184, %185, !dbg !15005
  %cmp41.i202 = icmp ugt i32 %183, %add40.i201, !dbg !15006
  br i1 %cmp41.i202, label %cond.true43.i205, label %cond.false45.i206, !dbg !15007

cond.true43.i205:                                 ; preds = %if.then39.i203
  %186 = load i32, i32* %re_index.i115, align 4, !dbg !15008
  %187 = load i32, i32* %nb_bits.i119, align 4, !dbg !15009
  %add44.i204 = add i32 %186, %187, !dbg !15010
  br label %cond.end46.i241, !dbg !15011

cond.false45.i206:                                ; preds = %if.then39.i203
  %188 = load i32, i32* %re_size_plus8.i117, align 4, !dbg !15012
  br label %cond.end46.i241, !dbg !15013

cond.end46.i241:                                  ; preds = %cond.false45.i206, %cond.true43.i205
  %cond47.i207 = phi i32 [ %add44.i204, %cond.true43.i205 ], [ %188, %cond.false45.i206 ], !dbg !15014
  store i32 %cond47.i207, i32* %re_index.i115, align 4, !dbg !15015
  %189 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i110, align 8, !dbg !15016
  %buffer48.i208 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %189, i32 0, i32 0, !dbg !15017
  %190 = load i8*, i8** %buffer48.i208, align 8, !dbg !15017
  %191 = load i32, i32* %re_index.i115, align 4, !dbg !15018
  %shr49.i209 = lshr i32 %191, 3, !dbg !15019
  %idx.ext50.i210 = zext i32 %shr49.i209 to i64, !dbg !15020
  %add.ptr51.i211 = getelementptr inbounds i8, i8* %190, i64 %idx.ext50.i210, !dbg !15020
  %192 = bitcast i8* %add.ptr51.i211 to %union.unaligned_32*, !dbg !15021
  %l52.i212 = bitcast %union.unaligned_32* %192 to i32*, !dbg !15021
  %193 = load i32, i32* %l52.i212, align 1, !dbg !15021
  store i32 %193, i32* %x.addr.i96.i107, align 4, !dbg !15022
  %194 = load i32, i32* %x.addr.i96.i107, align 4, !dbg !15023
  %shl.i97.i213 = shl i32 %194, 8, !dbg !15024
  %and.i98.i214 = and i32 %shl.i97.i213, 65280, !dbg !15025
  %195 = load i32, i32* %x.addr.i96.i107, align 4, !dbg !15026
  %shr.i99.i215 = lshr i32 %195, 8, !dbg !15027
  %and1.i100.i216 = and i32 %shr.i99.i215, 255, !dbg !15028
  %or.i101.i217 = or i32 %and.i98.i214, %and1.i100.i216, !dbg !15029
  %shl2.i102.i218 = shl i32 %or.i101.i217, 16, !dbg !15030
  %196 = load i32, i32* %x.addr.i96.i107, align 4, !dbg !15031
  %shr3.i103.i219 = lshr i32 %196, 16, !dbg !15032
  %shl4.i104.i220 = shl i32 %shr3.i103.i219, 8, !dbg !15033
  %and5.i105.i221 = and i32 %shl4.i104.i220, 65280, !dbg !15034
  %197 = load i32, i32* %x.addr.i96.i107, align 4, !dbg !15035
  %shr6.i106.i222 = lshr i32 %197, 16, !dbg !15036
  %shr7.i107.i223 = lshr i32 %shr6.i106.i222, 8, !dbg !15037
  %and8.i108.i224 = and i32 %shr7.i107.i223, 255, !dbg !15038
  %or9.i109.i225 = or i32 %and5.i105.i221, %and8.i108.i224, !dbg !15039
  %or10.i110.i226 = or i32 %shl2.i102.i218, %or9.i109.i225, !dbg !15040
  %198 = load i32, i32* %re_index.i115, align 4, !dbg !15041
  %and54.i227 = and i32 %198, 7, !dbg !15042
  %shl55.i228 = shl i32 %or10.i110.i226, %and54.i227, !dbg !15043
  store i32 %shl55.i228, i32* %re_cache.i116, align 4, !dbg !15044
  %199 = load i32, i32* %n.i118, align 4, !dbg !15045
  %sub56.i229 = sub nsw i32 0, %199, !dbg !15046
  store i32 %sub56.i229, i32* %nb_bits.i119, align 4, !dbg !15047
  %200 = load i32, i32* %re_cache.i116, align 4, !dbg !15048
  %201 = load i32, i32* %nb_bits.i119, align 4, !dbg !15049
  %conv57.i230 = trunc i32 %201 to i8, !dbg !15049
  %call58.i231 = call i32 @NEG_USR32(i32 %200, i8 signext %conv57.i230) #9, !dbg !15050
  %202 = load i32, i32* %code.i114, align 4, !dbg !15051
  %add59.i232 = add i32 %call58.i231, %202, !dbg !15052
  store i32 %add59.i232, i32* %index1.i120, align 4, !dbg !15053
  %203 = load i32, i32* %index1.i120, align 4, !dbg !15054
  %idxprom60.i233 = zext i32 %203 to i64, !dbg !15055
  %204 = load [2 x i16]*, [2 x i16]** %table.addr.i111, align 8, !dbg !15055
  %arrayidx61.i234 = getelementptr inbounds [2 x i16], [2 x i16]* %204, i64 %idxprom60.i233, !dbg !15055
  %arrayidx62.i235 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i234, i64 0, i64 0, !dbg !15055
  %205 = load i16, i16* %arrayidx62.i235, align 2, !dbg !15055
  %conv63.i236 = sext i16 %205 to i32, !dbg !15055
  store i32 %conv63.i236, i32* %code.i114, align 4, !dbg !15056
  %206 = load i32, i32* %index1.i120, align 4, !dbg !15057
  %idxprom64.i237 = zext i32 %206 to i64, !dbg !15058
  %207 = load [2 x i16]*, [2 x i16]** %table.addr.i111, align 8, !dbg !15058
  %arrayidx65.i238 = getelementptr inbounds [2 x i16], [2 x i16]* %207, i64 %idxprom64.i237, !dbg !15058
  %arrayidx66.i239 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i238, i64 0, i64 1, !dbg !15058
  %208 = load i16, i16* %arrayidx66.i239, align 2, !dbg !15058
  %conv67.i240 = sext i16 %208 to i32, !dbg !15058
  store i32 %conv67.i240, i32* %n.i118, align 4, !dbg !15059
  br label %if.end.i242, !dbg !15060

if.end.i242:                                      ; preds = %cond.end46.i241, %land.lhs.true36.i200, %cond.end.i198
  br label %if.end68.i243, !dbg !15061

if.end68.i243:                                    ; preds = %if.end.i242, %land.lhs.true.i156, %if.then36
  %209 = load i32, i32* %n.i118, align 4, !dbg !15062
  %210 = load i32, i32* %re_cache.i116, align 4, !dbg !15063
  %shl70.i244 = shl i32 %210, %209, !dbg !15063
  store i32 %shl70.i244, i32* %re_cache.i116, align 4, !dbg !15063
  %211 = load i32, i32* %re_size_plus8.i117, align 4, !dbg !15064
  %212 = load i32, i32* %re_index.i115, align 4, !dbg !15065
  %213 = load i32, i32* %n.i118, align 4, !dbg !15066
  %add71.i245 = add i32 %212, %213, !dbg !15067
  %cmp72.i246 = icmp ugt i32 %211, %add71.i245, !dbg !15068
  br i1 %cmp72.i246, label %cond.true74.i248, label %cond.false76.i249, !dbg !15069

cond.true74.i248:                                 ; preds = %if.end68.i243
  %214 = load i32, i32* %re_index.i115, align 4, !dbg !15070
  %215 = load i32, i32* %n.i118, align 4, !dbg !15071
  %add75.i247 = add i32 %214, %215, !dbg !15072
  br label %get_vlc2.exit252, !dbg !15073

cond.false76.i249:                                ; preds = %if.end68.i243
  %216 = load i32, i32* %re_size_plus8.i117, align 4, !dbg !15074
  br label %get_vlc2.exit252, !dbg !15075

get_vlc2.exit252:                                 ; preds = %cond.true74.i248, %cond.false76.i249
  %cond78.i250 = phi i32 [ %add75.i247, %cond.true74.i248 ], [ %216, %cond.false76.i249 ], !dbg !15076
  store i32 %cond78.i250, i32* %re_index.i115, align 4, !dbg !15077
  %217 = load i32, i32* %re_index.i115, align 4, !dbg !15078
  %218 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i110, align 8, !dbg !15079
  %index80.i251 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %218, i32 0, i32 2, !dbg !15080
  store i32 %217, i32* %index80.i251, align 8, !dbg !15081
  %219 = load i32, i32* %code.i114, align 4, !dbg !15082
  store i32 %219, i32* %delta, align 4, !dbg !15083
  %220 = load i32, i32* %delta, align 4, !dbg !15084
  %call38 = call i32 @sign_extend(i32 %220, i32 3) #1, !dbg !15085
  store i32 %call38, i32* %delta, align 4, !dbg !15086
  %221 = load i32, i32* %sb, align 4, !dbg !15087
  %idxprom39 = sext i32 %221 to i64, !dbg !15088
  %222 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15088
  %arrayidx40 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %222, i64 %idxprom39, !dbg !15088
  %num_wavs41 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx40, i32 0, i32 2, !dbg !15089
  %223 = load i32, i32* %num_wavs41, align 4, !dbg !15089
  %224 = load i32, i32* %delta, align 4, !dbg !15090
  %add42 = add nsw i32 %223, %224, !dbg !15091
  %and = and i32 %add42, 15, !dbg !15092
  %225 = load i32, i32* %sb, align 4, !dbg !15093
  %idxprom43 = sext i32 %225 to i64, !dbg !15094
  %226 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15094
  %arrayidx44 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %226, i64 %idxprom43, !dbg !15094
  %num_wavs45 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx44, i32 0, i32 2, !dbg !15095
  store i32 %and, i32* %num_wavs45, align 4, !dbg !15096
  br label %if.end46, !dbg !15097

if.end46:                                         ; preds = %get_vlc2.exit252, %for.body32
  br label %for.inc47, !dbg !15098

for.inc47:                                        ; preds = %if.end46
  %227 = load i32, i32* %sb, align 4, !dbg !15100
  %inc48 = add nsw i32 %227, 1, !dbg !15100
  store i32 %inc48, i32* %sb, align 4, !dbg !15100
  br label %for.cond28, !dbg !15102, !llvm.loop !15103

for.end49:                                        ; preds = %for.cond28
  br label %sw.epilog, !dbg !15105

sw.bb50:                                          ; preds = %entry
  store i32 0, i32* %sb, align 4, !dbg !15106
  br label %for.cond51, !dbg !15108

for.cond51:                                       ; preds = %for.inc67, %sw.bb50
  %228 = load i32, i32* %sb, align 4, !dbg !15109
  %229 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15112
  %waves_info52 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %229, i32 0, i32 14, !dbg !15113
  %230 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info52, align 8, !dbg !15113
  %num_tone_bands53 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %230, i32 0, i32 2, !dbg !15114
  %231 = load i32, i32* %num_tone_bands53, align 4, !dbg !15114
  %cmp54 = icmp slt i32 %228, %231, !dbg !15115
  br i1 %cmp54, label %for.body55, label %for.end69, !dbg !15116

for.body55:                                       ; preds = %for.cond51
  %232 = load i32, i32* %sb, align 4, !dbg !15117
  %idxprom56 = sext i32 %232 to i64, !dbg !15119
  %233 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !15119
  %arrayidx57 = getelementptr inbounds i32, i32* %233, i64 %idxprom56, !dbg !15119
  %234 = load i32, i32* %arrayidx57, align 4, !dbg !15119
  %tobool58 = icmp ne i32 %234, 0, !dbg !15119
  br i1 %tobool58, label %if.then59, label %if.end66, !dbg !15120

if.then59:                                        ; preds = %for.body55
  %235 = load i32, i32* %sb, align 4, !dbg !15121
  %idxprom60 = sext i32 %235 to i64, !dbg !15122
  %236 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15122
  %arrayidx61 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %236, i64 %idxprom60, !dbg !15122
  %num_wavs62 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx61, i32 0, i32 2, !dbg !15123
  %237 = load i32, i32* %num_wavs62, align 4, !dbg !15123
  %238 = load i32, i32* %sb, align 4, !dbg !15124
  %idxprom63 = sext i32 %238 to i64, !dbg !15125
  %239 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15125
  %arrayidx64 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %239, i64 %idxprom63, !dbg !15125
  %num_wavs65 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx64, i32 0, i32 2, !dbg !15126
  store i32 %237, i32* %num_wavs65, align 4, !dbg !15127
  br label %if.end66, !dbg !15125

if.end66:                                         ; preds = %if.then59, %for.body55
  br label %for.inc67, !dbg !15128

for.inc67:                                        ; preds = %if.end66
  %240 = load i32, i32* %sb, align 4, !dbg !15130
  %inc68 = add nsw i32 %240, 1, !dbg !15130
  store i32 %inc68, i32* %sb, align 4, !dbg !15130
  br label %for.cond51, !dbg !15132, !llvm.loop !15133

for.end69:                                        ; preds = %for.cond51
  br label %sw.epilog, !dbg !15135

sw.epilog:                                        ; preds = %entry, %for.end69, %for.end49, %for.end26, %for.end
  store i32 0, i32* %sb, align 4, !dbg !15136
  br label %for.cond70, !dbg !15138

for.cond70:                                       ; preds = %for.inc104, %sw.epilog
  %241 = load i32, i32* %sb, align 4, !dbg !15139
  %242 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15142
  %waves_info71 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %242, i32 0, i32 14, !dbg !15143
  %243 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info71, align 8, !dbg !15143
  %num_tone_bands72 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %243, i32 0, i32 2, !dbg !15144
  %244 = load i32, i32* %num_tone_bands72, align 4, !dbg !15144
  %cmp73 = icmp slt i32 %241, %244, !dbg !15145
  br i1 %cmp73, label %for.body74, label %for.end106, !dbg !15146

for.body74:                                       ; preds = %for.cond70
  %245 = load i32, i32* %sb, align 4, !dbg !15147
  %idxprom75 = sext i32 %245 to i64, !dbg !15149
  %246 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !15149
  %arrayidx76 = getelementptr inbounds i32, i32* %246, i64 %idxprom75, !dbg !15149
  %247 = load i32, i32* %arrayidx76, align 4, !dbg !15149
  %tobool77 = icmp ne i32 %247, 0, !dbg !15149
  br i1 %tobool77, label %if.then78, label %if.end103, !dbg !15150

if.then78:                                        ; preds = %for.body74
  %248 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15151
  %waves_info79 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %248, i32 0, i32 14, !dbg !15154
  %249 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info79, align 8, !dbg !15154
  %tones_index = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %249, i32 0, i32 6, !dbg !15155
  %250 = load i32, i32* %tones_index, align 4, !dbg !15155
  %251 = load i32, i32* %sb, align 4, !dbg !15156
  %idxprom80 = sext i32 %251 to i64, !dbg !15157
  %252 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15157
  %arrayidx81 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %252, i64 %idxprom80, !dbg !15157
  %num_wavs82 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx81, i32 0, i32 2, !dbg !15158
  %253 = load i32, i32* %num_wavs82, align 4, !dbg !15158
  %add83 = add nsw i32 %250, %253, !dbg !15159
  %cmp84 = icmp sgt i32 %add83, 48, !dbg !15160
  br i1 %cmp84, label %if.then85, label %if.end92, !dbg !15161

if.then85:                                        ; preds = %if.then78
  %254 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !15162
  %255 = bitcast %struct.AVCodecContext* %254 to i8*, !dbg !15162
  %256 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15164
  %waves_info86 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %256, i32 0, i32 14, !dbg !15165
  %257 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info86, align 8, !dbg !15165
  %tones_index87 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %257, i32 0, i32 6, !dbg !15166
  %258 = load i32, i32* %tones_index87, align 4, !dbg !15166
  %259 = load i32, i32* %sb, align 4, !dbg !15167
  %idxprom88 = sext i32 %259 to i64, !dbg !15168
  %260 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15168
  %arrayidx89 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %260, i64 %idxprom88, !dbg !15168
  %num_wavs90 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx89, i32 0, i32 2, !dbg !15169
  %261 = load i32, i32* %num_wavs90, align 4, !dbg !15169
  %add91 = add nsw i32 %258, %261, !dbg !15170
  %262 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !15171
  %frame_number = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %262, i32 0, i32 86, !dbg !15172
  %263 = load i32, i32* %frame_number, align 8, !dbg !15172
  call void (i8*, i32, i8*, ...) @av_log(i8* %255, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i32 0, i32 0), i32 %add91, i32 %263), !dbg !15173
  store i32 -1094995529, i32* %retval, align 4, !dbg !15174
  br label %return, !dbg !15174

if.end92:                                         ; preds = %if.then78
  %264 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15175
  %waves_info93 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %264, i32 0, i32 14, !dbg !15176
  %265 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info93, align 8, !dbg !15176
  %tones_index94 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %265, i32 0, i32 6, !dbg !15177
  %266 = load i32, i32* %tones_index94, align 4, !dbg !15177
  %267 = load i32, i32* %sb, align 4, !dbg !15178
  %idxprom95 = sext i32 %267 to i64, !dbg !15179
  %268 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15179
  %arrayidx96 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %268, i64 %idxprom95, !dbg !15179
  %start_index = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx96, i32 0, i32 3, !dbg !15180
  store i32 %266, i32* %start_index, align 4, !dbg !15181
  %269 = load i32, i32* %sb, align 4, !dbg !15182
  %idxprom97 = sext i32 %269 to i64, !dbg !15183
  %270 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15183
  %arrayidx98 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %270, i64 %idxprom97, !dbg !15183
  %num_wavs99 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx98, i32 0, i32 2, !dbg !15184
  %271 = load i32, i32* %num_wavs99, align 4, !dbg !15184
  %272 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15185
  %waves_info100 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %272, i32 0, i32 14, !dbg !15186
  %273 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info100, align 8, !dbg !15186
  %tones_index101 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %273, i32 0, i32 6, !dbg !15187
  %274 = load i32, i32* %tones_index101, align 4, !dbg !15188
  %add102 = add nsw i32 %274, %271, !dbg !15188
  store i32 %add102, i32* %tones_index101, align 4, !dbg !15188
  br label %if.end103, !dbg !15189

if.end103:                                        ; preds = %if.end92, %for.body74
  br label %for.inc104, !dbg !15190

for.inc104:                                       ; preds = %if.end103
  %275 = load i32, i32* %sb, align 4, !dbg !15192
  %inc105 = add nsw i32 %275, 1, !dbg !15192
  store i32 %inc105, i32* %sb, align 4, !dbg !15192
  br label %for.cond70, !dbg !15194, !llvm.loop !15195

for.end106:                                       ; preds = %for.cond70
  store i32 0, i32* %retval, align 4, !dbg !15197
  br label %return, !dbg !15197

return:                                           ; preds = %for.end106, %if.then85
  %276 = load i32, i32* %retval, align 4, !dbg !15198
  ret i32 %276, !dbg !15198
}

; Function Attrs: nounwind uwtable
define internal void @decode_tones_frequency(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32* %band_has_tones) #3 !dbg !15199 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !15200
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !15211
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !15213
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !15215
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !15216
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !15217
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !15218
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !15219
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !15220
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !15221
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !15222
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !15223
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !15224
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !15225
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %band_has_tones.addr = alloca i32*, align 8
  %sb = alloca i32, align 4
  %i = alloca i32, align 4
  %direction = alloca i32, align 4
  %nbits = alloca i32, align 4
  %pred = alloca i32, align 4
  %delta = alloca i32, align 4
  %iwav = alloca %struct.Atrac3pWaveParam*, align 8
  %owav = alloca %struct.Atrac3pWaveParam*, align 8
  %dst = alloca %struct.Atrac3pWavesData*, align 8
  %ref = alloca %struct.Atrac3pWavesData*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !15226, metadata !1324), !dbg !15227
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !15228, metadata !1324), !dbg !15229
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !15230, metadata !1324), !dbg !15231
  store i32* %band_has_tones, i32** %band_has_tones.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_has_tones.addr, metadata !15232, metadata !1324), !dbg !15233
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !15234, metadata !1324), !dbg !15235
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15236, metadata !1324), !dbg !15237
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !15238, metadata !1324), !dbg !15239
  call void @llvm.dbg.declare(metadata i32* %nbits, metadata !15240, metadata !1324), !dbg !15241
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !15242, metadata !1324), !dbg !15243
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !15244, metadata !1324), !dbg !15245
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveParam** %iwav, metadata !15246, metadata !1324), !dbg !15248
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveParam** %owav, metadata !15249, metadata !1324), !dbg !15250
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %dst, metadata !15251, metadata !1324), !dbg !15252
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !15253
  %idxprom = sext i32 %0 to i64, !dbg !15254
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15254
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !15255
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !15254
  %tones_info = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 18, !dbg !15256
  %2 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info, align 8, !dbg !15256
  store %struct.Atrac3pWavesData* %2, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15252
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %ref, metadata !15257, metadata !1324), !dbg !15258
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15259
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 12, !dbg !15260
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !15259
  %tones_info3 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx2, i32 0, i32 18, !dbg !15261
  %4 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info3, align 8, !dbg !15261
  store %struct.Atrac3pWavesData* %4, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15258
  %5 = load i32, i32* %ch_num.addr, align 4, !dbg !15262
  %tobool = icmp ne i32 %5, 0, !dbg !15262
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15263

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15264
  %call = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !15266
  %tobool4 = icmp ne i32 %call, 0, !dbg !15266
  br i1 %tobool4, label %if.else93, label %if.then, !dbg !15267

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %sb, align 4, !dbg !15268
  br label %for.cond, !dbg !15271

for.cond:                                         ; preds = %for.inc90, %if.then
  %7 = load i32, i32* %sb, align 4, !dbg !15272
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15275
  %waves_info = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 14, !dbg !15276
  %9 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info, align 8, !dbg !15276
  %num_tone_bands = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %9, i32 0, i32 2, !dbg !15277
  %10 = load i32, i32* %num_tone_bands, align 4, !dbg !15277
  %cmp = icmp slt i32 %7, %10, !dbg !15278
  br i1 %cmp, label %for.body, label %for.end92, !dbg !15279

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %sb, align 4, !dbg !15280
  %idxprom5 = sext i32 %11 to i64, !dbg !15283
  %12 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !15283
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 %idxprom5, !dbg !15283
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !15283
  %tobool7 = icmp ne i32 %13, 0, !dbg !15283
  br i1 %tobool7, label %lor.lhs.false8, label %if.then12, !dbg !15284

lor.lhs.false8:                                   ; preds = %for.body
  %14 = load i32, i32* %sb, align 4, !dbg !15285
  %idxprom9 = sext i32 %14 to i64, !dbg !15287
  %15 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15287
  %arrayidx10 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %15, i64 %idxprom9, !dbg !15287
  %num_wavs = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx10, i32 0, i32 2, !dbg !15288
  %16 = load i32, i32* %num_wavs, align 4, !dbg !15288
  %tobool11 = icmp ne i32 %16, 0, !dbg !15287
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !15289

if.then12:                                        ; preds = %lor.lhs.false8, %for.body
  br label %for.inc90, !dbg !15290

if.end:                                           ; preds = %lor.lhs.false8
  %17 = load i32, i32* %sb, align 4, !dbg !15291
  %idxprom13 = sext i32 %17 to i64, !dbg !15292
  %18 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15292
  %arrayidx14 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %18, i64 %idxprom13, !dbg !15292
  %start_index = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx14, i32 0, i32 3, !dbg !15293
  %19 = load i32, i32* %start_index, align 4, !dbg !15293
  %idxprom15 = sext i32 %19 to i64, !dbg !15294
  %20 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15294
  %waves_info16 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %20, i32 0, i32 14, !dbg !15295
  %21 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info16, align 8, !dbg !15295
  %waves = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %21, i32 0, i32 7, !dbg !15296
  %arrayidx17 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves, i64 0, i64 %idxprom15, !dbg !15294
  store %struct.Atrac3pWaveParam* %arrayidx17, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15297
  %22 = load i32, i32* %sb, align 4, !dbg !15298
  %idxprom18 = sext i32 %22 to i64, !dbg !15299
  %23 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15299
  %arrayidx19 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %23, i64 %idxprom18, !dbg !15299
  %num_wavs20 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx19, i32 0, i32 2, !dbg !15300
  %24 = load i32, i32* %num_wavs20, align 4, !dbg !15300
  %cmp21 = icmp sgt i32 %24, 1, !dbg !15301
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !15302

cond.true:                                        ; preds = %if.end
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15303
  %call22 = call i32 @get_bits1(%struct.GetBitContext* %25), !dbg !15305
  br label %cond.end, !dbg !15306

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !15307

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call22, %cond.true ], [ 0, %cond.false ], !dbg !15309
  store i32 %cond, i32* %direction, align 4, !dbg !15311
  %26 = load i32, i32* %direction, align 4, !dbg !15312
  %tobool23 = icmp ne i32 %26, 0, !dbg !15312
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15314

if.then24:                                        ; preds = %cond.end
  %27 = load i32, i32* %sb, align 4, !dbg !15315
  %idxprom25 = sext i32 %27 to i64, !dbg !15318
  %28 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15318
  %arrayidx26 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %28, i64 %idxprom25, !dbg !15318
  %num_wavs27 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx26, i32 0, i32 2, !dbg !15319
  %29 = load i32, i32* %num_wavs27, align 4, !dbg !15319
  %tobool28 = icmp ne i32 %29, 0, !dbg !15318
  br i1 %tobool28, label %if.then29, label %if.end36, !dbg !15320

if.then29:                                        ; preds = %if.then24
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15321
  %call30 = call i32 @get_bits(%struct.GetBitContext* %30, i32 10), !dbg !15322
  %31 = load i32, i32* %sb, align 4, !dbg !15323
  %idxprom31 = sext i32 %31 to i64, !dbg !15324
  %32 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15324
  %arrayidx32 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %32, i64 %idxprom31, !dbg !15324
  %num_wavs33 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx32, i32 0, i32 2, !dbg !15325
  %33 = load i32, i32* %num_wavs33, align 4, !dbg !15325
  %sub = sub nsw i32 %33, 1, !dbg !15326
  %idxprom34 = sext i32 %sub to i64, !dbg !15327
  %34 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15327
  %arrayidx35 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %34, i64 %idxprom34, !dbg !15327
  %freq_index = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx35, i32 0, i32 0, !dbg !15328
  store i32 %call30, i32* %freq_index, align 4, !dbg !15329
  br label %if.end36, !dbg !15327

if.end36:                                         ; preds = %if.then29, %if.then24
  %35 = load i32, i32* %sb, align 4, !dbg !15330
  %idxprom37 = sext i32 %35 to i64, !dbg !15332
  %36 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15332
  %arrayidx38 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %36, i64 %idxprom37, !dbg !15332
  %num_wavs39 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx38, i32 0, i32 2, !dbg !15333
  %37 = load i32, i32* %num_wavs39, align 4, !dbg !15333
  %sub40 = sub nsw i32 %37, 2, !dbg !15334
  store i32 %sub40, i32* %i, align 4, !dbg !15335
  br label %for.cond41, !dbg !15336

for.cond41:                                       ; preds = %for.inc, %if.end36
  %38 = load i32, i32* %i, align 4, !dbg !15337
  %cmp42 = icmp sge i32 %38, 0, !dbg !15340
  br i1 %cmp42, label %for.body43, label %for.end, !dbg !15341

for.body43:                                       ; preds = %for.cond41
  %39 = load i32, i32* %i, align 4, !dbg !15342
  %add = add nsw i32 %39, 1, !dbg !15344
  %idxprom44 = sext i32 %add to i64, !dbg !15345
  %40 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15345
  %arrayidx45 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %40, i64 %idxprom44, !dbg !15345
  %freq_index46 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx45, i32 0, i32 0, !dbg !15346
  %41 = load i32, i32* %freq_index46, align 4, !dbg !15346
  %or = or i32 %41, 1, !dbg !15347
  %42 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !15348
  %sub47 = sub nsw i32 31, %42, !dbg !15349
  %add48 = add nsw i32 %sub47, 1, !dbg !15350
  store i32 %add48, i32* %nbits, align 4, !dbg !15351
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15352
  %44 = load i32, i32* %nbits, align 4, !dbg !15353
  %call49 = call i32 @get_bits(%struct.GetBitContext* %43, i32 %44), !dbg !15354
  %45 = load i32, i32* %i, align 4, !dbg !15355
  %idxprom50 = sext i32 %45 to i64, !dbg !15356
  %46 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15356
  %arrayidx51 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %46, i64 %idxprom50, !dbg !15356
  %freq_index52 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx51, i32 0, i32 0, !dbg !15357
  store i32 %call49, i32* %freq_index52, align 4, !dbg !15358
  br label %for.inc, !dbg !15359

for.inc:                                          ; preds = %for.body43
  %47 = load i32, i32* %i, align 4, !dbg !15360
  %dec = add nsw i32 %47, -1, !dbg !15360
  store i32 %dec, i32* %i, align 4, !dbg !15360
  br label %for.cond41, !dbg !15362, !llvm.loop !15363

for.end:                                          ; preds = %for.cond41
  br label %if.end89, !dbg !15365

if.else:                                          ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !15366
  br label %for.cond53, !dbg !15369

for.cond53:                                       ; preds = %for.inc87, %if.else
  %48 = load i32, i32* %i, align 4, !dbg !15370
  %49 = load i32, i32* %sb, align 4, !dbg !15373
  %idxprom54 = sext i32 %49 to i64, !dbg !15374
  %50 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15374
  %arrayidx55 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %50, i64 %idxprom54, !dbg !15374
  %num_wavs56 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx55, i32 0, i32 2, !dbg !15375
  %51 = load i32, i32* %num_wavs56, align 4, !dbg !15375
  %cmp57 = icmp slt i32 %48, %51, !dbg !15376
  br i1 %cmp57, label %for.body58, label %for.end88, !dbg !15377

for.body58:                                       ; preds = %for.cond53
  %52 = load i32, i32* %i, align 4, !dbg !15378
  %tobool59 = icmp ne i32 %52, 0, !dbg !15378
  br i1 %tobool59, label %lor.lhs.false60, label %if.then66, !dbg !15381

lor.lhs.false60:                                  ; preds = %for.body58
  %53 = load i32, i32* %i, align 4, !dbg !15382
  %sub61 = sub nsw i32 %53, 1, !dbg !15384
  %idxprom62 = sext i32 %sub61 to i64, !dbg !15385
  %54 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15385
  %arrayidx63 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %54, i64 %idxprom62, !dbg !15385
  %freq_index64 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx63, i32 0, i32 0, !dbg !15386
  %55 = load i32, i32* %freq_index64, align 4, !dbg !15386
  %cmp65 = icmp slt i32 %55, 512, !dbg !15387
  br i1 %cmp65, label %if.then66, label %if.else71, !dbg !15388

if.then66:                                        ; preds = %lor.lhs.false60, %for.body58
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15389
  %call67 = call i32 @get_bits(%struct.GetBitContext* %56, i32 10), !dbg !15390
  %57 = load i32, i32* %i, align 4, !dbg !15391
  %idxprom68 = sext i32 %57 to i64, !dbg !15392
  %58 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15392
  %arrayidx69 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %58, i64 %idxprom68, !dbg !15392
  %freq_index70 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx69, i32 0, i32 0, !dbg !15393
  store i32 %call67, i32* %freq_index70, align 4, !dbg !15394
  br label %if.end86, !dbg !15392

if.else71:                                        ; preds = %lor.lhs.false60
  %59 = load i32, i32* %i, align 4, !dbg !15395
  %sub72 = sub nsw i32 %59, 1, !dbg !15397
  %idxprom73 = sext i32 %sub72 to i64, !dbg !15398
  %60 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15398
  %arrayidx74 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %60, i64 %idxprom73, !dbg !15398
  %freq_index75 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx74, i32 0, i32 0, !dbg !15399
  %61 = load i32, i32* %freq_index75, align 4, !dbg !15399
  %sub76 = sub nsw i32 1023, %61, !dbg !15400
  %or77 = or i32 %sub76, 1, !dbg !15401
  %62 = call i32 @llvm.ctlz.i32(i32 %or77, i1 true), !dbg !15402
  %sub78 = sub nsw i32 31, %62, !dbg !15403
  %add79 = add nsw i32 %sub78, 1, !dbg !15404
  store i32 %add79, i32* %nbits, align 4, !dbg !15405
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15406
  %64 = load i32, i32* %nbits, align 4, !dbg !15407
  %call80 = call i32 @get_bits(%struct.GetBitContext* %63, i32 %64), !dbg !15408
  %add81 = add i32 %call80, 1024, !dbg !15409
  %65 = load i32, i32* %nbits, align 4, !dbg !15410
  %shl = shl i32 1, %65, !dbg !15411
  %sub82 = sub i32 %add81, %shl, !dbg !15412
  %66 = load i32, i32* %i, align 4, !dbg !15413
  %idxprom83 = sext i32 %66 to i64, !dbg !15414
  %67 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15414
  %arrayidx84 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %67, i64 %idxprom83, !dbg !15414
  %freq_index85 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx84, i32 0, i32 0, !dbg !15415
  store i32 %sub82, i32* %freq_index85, align 4, !dbg !15416
  br label %if.end86

if.end86:                                         ; preds = %if.else71, %if.then66
  br label %for.inc87, !dbg !15417

for.inc87:                                        ; preds = %if.end86
  %68 = load i32, i32* %i, align 4, !dbg !15418
  %inc = add nsw i32 %68, 1, !dbg !15418
  store i32 %inc, i32* %i, align 4, !dbg !15418
  br label %for.cond53, !dbg !15420, !llvm.loop !15421

for.end88:                                        ; preds = %for.cond53
  br label %if.end89

if.end89:                                         ; preds = %for.end88, %for.end
  br label %for.inc90, !dbg !15423

for.inc90:                                        ; preds = %if.end89, %if.then12
  %69 = load i32, i32* %sb, align 4, !dbg !15424
  %inc91 = add nsw i32 %69, 1, !dbg !15424
  store i32 %inc91, i32* %sb, align 4, !dbg !15424
  br label %for.cond, !dbg !15426, !llvm.loop !15427

for.end92:                                        ; preds = %for.cond
  br label %if.end167, !dbg !15429

if.else93:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %sb, align 4, !dbg !15430
  br label %for.cond94, !dbg !15431

for.cond94:                                       ; preds = %for.inc164, %if.else93
  %70 = load i32, i32* %sb, align 4, !dbg !15432
  %71 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15434
  %waves_info95 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %71, i32 0, i32 14, !dbg !15435
  %72 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info95, align 8, !dbg !15435
  %num_tone_bands96 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %72, i32 0, i32 2, !dbg !15436
  %73 = load i32, i32* %num_tone_bands96, align 4, !dbg !15436
  %cmp97 = icmp slt i32 %70, %73, !dbg !15437
  br i1 %cmp97, label %for.body98, label %for.end166, !dbg !15438

for.body98:                                       ; preds = %for.cond94
  %74 = load i32, i32* %sb, align 4, !dbg !15439
  %idxprom99 = sext i32 %74 to i64, !dbg !15441
  %75 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !15441
  %arrayidx100 = getelementptr inbounds i32, i32* %75, i64 %idxprom99, !dbg !15441
  %76 = load i32, i32* %arrayidx100, align 4, !dbg !15441
  %tobool101 = icmp ne i32 %76, 0, !dbg !15441
  br i1 %tobool101, label %lor.lhs.false102, label %if.then107, !dbg !15442

lor.lhs.false102:                                 ; preds = %for.body98
  %77 = load i32, i32* %sb, align 4, !dbg !15443
  %idxprom103 = sext i32 %77 to i64, !dbg !15445
  %78 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15445
  %arrayidx104 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %78, i64 %idxprom103, !dbg !15445
  %num_wavs105 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx104, i32 0, i32 2, !dbg !15446
  %79 = load i32, i32* %num_wavs105, align 4, !dbg !15446
  %tobool106 = icmp ne i32 %79, 0, !dbg !15445
  br i1 %tobool106, label %if.end108, label %if.then107, !dbg !15447

if.then107:                                       ; preds = %lor.lhs.false102, %for.body98
  br label %for.inc164, !dbg !15448

if.end108:                                        ; preds = %lor.lhs.false102
  %80 = load i32, i32* %sb, align 4, !dbg !15449
  %idxprom109 = sext i32 %80 to i64, !dbg !15450
  %81 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15450
  %arrayidx110 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %81, i64 %idxprom109, !dbg !15450
  %start_index111 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx110, i32 0, i32 3, !dbg !15451
  %82 = load i32, i32* %start_index111, align 4, !dbg !15451
  %idxprom112 = sext i32 %82 to i64, !dbg !15452
  %83 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15452
  %waves_info113 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %83, i32 0, i32 14, !dbg !15453
  %84 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info113, align 8, !dbg !15453
  %waves114 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %84, i32 0, i32 7, !dbg !15454
  %arrayidx115 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves114, i64 0, i64 %idxprom112, !dbg !15452
  store %struct.Atrac3pWaveParam* %arrayidx115, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15455
  %85 = load i32, i32* %sb, align 4, !dbg !15456
  %idxprom116 = sext i32 %85 to i64, !dbg !15457
  %86 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15457
  %arrayidx117 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %86, i64 %idxprom116, !dbg !15457
  %start_index118 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx117, i32 0, i32 3, !dbg !15458
  %87 = load i32, i32* %start_index118, align 4, !dbg !15458
  %idxprom119 = sext i32 %87 to i64, !dbg !15459
  %88 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15459
  %waves_info120 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %88, i32 0, i32 14, !dbg !15460
  %89 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info120, align 8, !dbg !15460
  %waves121 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %89, i32 0, i32 7, !dbg !15461
  %arrayidx122 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves121, i64 0, i64 %idxprom119, !dbg !15459
  store %struct.Atrac3pWaveParam* %arrayidx122, %struct.Atrac3pWaveParam** %owav, align 8, !dbg !15462
  store i32 0, i32* %i, align 4, !dbg !15463
  br label %for.cond123, !dbg !15464

for.cond123:                                      ; preds = %for.inc161, %if.end108
  %90 = load i32, i32* %i, align 4, !dbg !15465
  %91 = load i32, i32* %sb, align 4, !dbg !15467
  %idxprom124 = sext i32 %91 to i64, !dbg !15468
  %92 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15468
  %arrayidx125 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %92, i64 %idxprom124, !dbg !15468
  %num_wavs126 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx125, i32 0, i32 2, !dbg !15469
  %93 = load i32, i32* %num_wavs126, align 4, !dbg !15469
  %cmp127 = icmp slt i32 %90, %93, !dbg !15470
  br i1 %cmp127, label %for.body128, label %for.end163, !dbg !15471

for.body128:                                      ; preds = %for.cond123
  %94 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !15472
  %95 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 6, i32 1), align 8, !dbg !15473
  %96 = load i32, i32* getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 6, i32 0), align 16, !dbg !15474
  store %struct.GetBitContext* %94, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15475
  store [2 x i16]* %95, [2 x i16]** %table.addr.i, align 8, !dbg !15475
  store i32 %96, i32* %bits.addr.i, align 4, !dbg !15475
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !15475
  %97 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15476
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %97, i32 0, i32 2, !dbg !15477
  %98 = load i32, i32* %index.i, align 8, !dbg !15477
  store i32 %98, i32* %re_index.i, align 4, !dbg !15220
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15478
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %99, i32 0, i32 4, !dbg !15479
  %100 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !15479
  store i32 %100, i32* %re_size_plus8.i, align 4, !dbg !15222
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15480
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %101, i32 0, i32 0, !dbg !15481
  %102 = load i8*, i8** %buffer.i, align 8, !dbg !15481
  %103 = load i32, i32* %re_index.i, align 4, !dbg !15482
  %shr.i = lshr i32 %103, 3, !dbg !15483
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !15484
  %add.ptr.i = getelementptr inbounds i8, i8* %102, i64 %idx.ext.i, !dbg !15484
  %104 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !15485
  %l.i = bitcast %union.unaligned_32* %104 to i32*, !dbg !15485
  %105 = load i32, i32* %l.i, align 1, !dbg !15485
  store i32 %105, i32* %x.addr.i.i, align 4, !dbg !15486
  %106 = load i32, i32* %x.addr.i.i, align 4, !dbg !15487
  %shl.i.i = shl i32 %106, 8, !dbg !15488
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !15489
  %107 = load i32, i32* %x.addr.i.i, align 4, !dbg !15490
  %shr.i.i = lshr i32 %107, 8, !dbg !15491
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !15492
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !15493
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !15494
  %108 = load i32, i32* %x.addr.i.i, align 4, !dbg !15495
  %shr3.i.i = lshr i32 %108, 16, !dbg !15496
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !15497
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !15498
  %109 = load i32, i32* %x.addr.i.i, align 4, !dbg !15499
  %shr6.i.i = lshr i32 %109, 16, !dbg !15500
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !15501
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !15502
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !15503
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !15504
  %110 = load i32, i32* %re_index.i, align 4, !dbg !15505
  %and.i = and i32 %110, 7, !dbg !15506
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !15507
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !15508
  %111 = load i32, i32* %re_cache.i, align 4, !dbg !15509
  %112 = load i32, i32* %bits.addr.i, align 4, !dbg !15510
  %conv.i = trunc i32 %112 to i8, !dbg !15510
  %call2.i = call i32 @NEG_USR32(i32 %111, i8 signext %conv.i) #9, !dbg !15511
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !15512
  %113 = load i32, i32* %index1.i, align 4, !dbg !15513
  %idxprom.i = zext i32 %113 to i64, !dbg !15514
  %114 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15514
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %114, i64 %idxprom.i, !dbg !15514
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !15514
  %115 = load i16, i16* %arrayidx3.i, align 2, !dbg !15514
  %conv4.i = sext i16 %115 to i32, !dbg !15514
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !15515
  %116 = load i32, i32* %index1.i, align 4, !dbg !15516
  %idxprom5.i = zext i32 %116 to i64, !dbg !15517
  %117 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15517
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %117, i64 %idxprom5.i, !dbg !15517
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !15517
  %118 = load i16, i16* %arrayidx7.i, align 2, !dbg !15517
  %conv8.i = sext i16 %118 to i32, !dbg !15517
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !15518
  %119 = load i32, i32* %max_depth.addr.i, align 4, !dbg !15519
  %cmp.i = icmp sgt i32 %119, 1, !dbg !15520
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !15521

land.lhs.true.i:                                  ; preds = %for.body128
  %120 = load i32, i32* %n.i, align 4, !dbg !15522
  %cmp10.i = icmp slt i32 %120, 0, !dbg !15523
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !15524

if.then.i:                                        ; preds = %land.lhs.true.i
  %121 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15525
  %122 = load i32, i32* %re_index.i, align 4, !dbg !15526
  %123 = load i32, i32* %bits.addr.i, align 4, !dbg !15527
  %add.i = add i32 %122, %123, !dbg !15528
  %cmp12.i = icmp ugt i32 %121, %add.i, !dbg !15529
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !15530

cond.true.i:                                      ; preds = %if.then.i
  %124 = load i32, i32* %re_index.i, align 4, !dbg !15531
  %125 = load i32, i32* %bits.addr.i, align 4, !dbg !15532
  %add14.i = add i32 %124, %125, !dbg !15533
  br label %cond.end.i, !dbg !15534

cond.false.i:                                     ; preds = %if.then.i
  %126 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15535
  br label %cond.end.i, !dbg !15536

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %126, %cond.false.i ], !dbg !15537
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !15538
  %127 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15539
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %127, i32 0, i32 0, !dbg !15540
  %128 = load i8*, i8** %buffer15.i, align 8, !dbg !15540
  %129 = load i32, i32* %re_index.i, align 4, !dbg !15541
  %shr16.i = lshr i32 %129, 3, !dbg !15542
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !15543
  %add.ptr18.i = getelementptr inbounds i8, i8* %128, i64 %idx.ext17.i, !dbg !15543
  %130 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !15544
  %l19.i = bitcast %union.unaligned_32* %130 to i32*, !dbg !15544
  %131 = load i32, i32* %l19.i, align 1, !dbg !15544
  store i32 %131, i32* %x.addr.i81.i, align 4, !dbg !15545
  %132 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15546
  %shl.i82.i = shl i32 %132, 8, !dbg !15547
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !15548
  %133 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15549
  %shr.i84.i = lshr i32 %133, 8, !dbg !15550
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !15551
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !15552
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !15553
  %134 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15554
  %shr3.i88.i = lshr i32 %134, 16, !dbg !15555
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !15556
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !15557
  %135 = load i32, i32* %x.addr.i81.i, align 4, !dbg !15558
  %shr6.i91.i = lshr i32 %135, 16, !dbg !15559
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !15560
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !15561
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !15562
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !15563
  %136 = load i32, i32* %re_index.i, align 4, !dbg !15564
  %and21.i = and i32 %136, 7, !dbg !15565
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !15566
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !15567
  %137 = load i32, i32* %n.i, align 4, !dbg !15568
  %sub.i = sub nsw i32 0, %137, !dbg !15569
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !15570
  %138 = load i32, i32* %re_cache.i, align 4, !dbg !15571
  %139 = load i32, i32* %nb_bits.i, align 4, !dbg !15572
  %conv23.i = trunc i32 %139 to i8, !dbg !15572
  %call24.i = call i32 @NEG_USR32(i32 %138, i8 signext %conv23.i) #9, !dbg !15573
  %140 = load i32, i32* %code.i, align 4, !dbg !15574
  %add25.i = add i32 %call24.i, %140, !dbg !15575
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !15576
  %141 = load i32, i32* %index1.i, align 4, !dbg !15577
  %idxprom26.i = zext i32 %141 to i64, !dbg !15578
  %142 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15578
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %142, i64 %idxprom26.i, !dbg !15578
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !15578
  %143 = load i16, i16* %arrayidx28.i, align 2, !dbg !15578
  %conv29.i = sext i16 %143 to i32, !dbg !15578
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !15579
  %144 = load i32, i32* %index1.i, align 4, !dbg !15580
  %idxprom30.i = zext i32 %144 to i64, !dbg !15581
  %145 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15581
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %145, i64 %idxprom30.i, !dbg !15581
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !15581
  %146 = load i16, i16* %arrayidx32.i, align 2, !dbg !15581
  %conv33.i = sext i16 %146 to i32, !dbg !15581
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !15582
  %147 = load i32, i32* %max_depth.addr.i, align 4, !dbg !15583
  %cmp34.i = icmp sgt i32 %147, 2, !dbg !15584
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !15585

land.lhs.true36.i:                                ; preds = %cond.end.i
  %148 = load i32, i32* %n.i, align 4, !dbg !15586
  %cmp37.i = icmp slt i32 %148, 0, !dbg !15587
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !15588

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %149 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15589
  %150 = load i32, i32* %re_index.i, align 4, !dbg !15590
  %151 = load i32, i32* %nb_bits.i, align 4, !dbg !15591
  %add40.i = add i32 %150, %151, !dbg !15592
  %cmp41.i = icmp ugt i32 %149, %add40.i, !dbg !15593
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !15594

cond.true43.i:                                    ; preds = %if.then39.i
  %152 = load i32, i32* %re_index.i, align 4, !dbg !15595
  %153 = load i32, i32* %nb_bits.i, align 4, !dbg !15596
  %add44.i = add i32 %152, %153, !dbg !15597
  br label %cond.end46.i, !dbg !15598

cond.false45.i:                                   ; preds = %if.then39.i
  %154 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15599
  br label %cond.end46.i, !dbg !15600

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %154, %cond.false45.i ], !dbg !15601
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !15602
  %155 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15603
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %155, i32 0, i32 0, !dbg !15604
  %156 = load i8*, i8** %buffer48.i, align 8, !dbg !15604
  %157 = load i32, i32* %re_index.i, align 4, !dbg !15605
  %shr49.i = lshr i32 %157, 3, !dbg !15606
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !15607
  %add.ptr51.i = getelementptr inbounds i8, i8* %156, i64 %idx.ext50.i, !dbg !15607
  %158 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !15608
  %l52.i = bitcast %union.unaligned_32* %158 to i32*, !dbg !15608
  %159 = load i32, i32* %l52.i, align 1, !dbg !15608
  store i32 %159, i32* %x.addr.i96.i, align 4, !dbg !15609
  %160 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15610
  %shl.i97.i = shl i32 %160, 8, !dbg !15611
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !15612
  %161 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15613
  %shr.i99.i = lshr i32 %161, 8, !dbg !15614
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !15615
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !15616
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !15617
  %162 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15618
  %shr3.i103.i = lshr i32 %162, 16, !dbg !15619
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !15620
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !15621
  %163 = load i32, i32* %x.addr.i96.i, align 4, !dbg !15622
  %shr6.i106.i = lshr i32 %163, 16, !dbg !15623
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !15624
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !15625
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !15626
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !15627
  %164 = load i32, i32* %re_index.i, align 4, !dbg !15628
  %and54.i = and i32 %164, 7, !dbg !15629
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !15630
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !15631
  %165 = load i32, i32* %n.i, align 4, !dbg !15632
  %sub56.i = sub nsw i32 0, %165, !dbg !15633
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !15634
  %166 = load i32, i32* %re_cache.i, align 4, !dbg !15635
  %167 = load i32, i32* %nb_bits.i, align 4, !dbg !15636
  %conv57.i = trunc i32 %167 to i8, !dbg !15636
  %call58.i = call i32 @NEG_USR32(i32 %166, i8 signext %conv57.i) #9, !dbg !15637
  %168 = load i32, i32* %code.i, align 4, !dbg !15638
  %add59.i = add i32 %call58.i, %168, !dbg !15639
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !15640
  %169 = load i32, i32* %index1.i, align 4, !dbg !15641
  %idxprom60.i = zext i32 %169 to i64, !dbg !15642
  %170 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15642
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %170, i64 %idxprom60.i, !dbg !15642
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !15642
  %171 = load i16, i16* %arrayidx62.i, align 2, !dbg !15642
  %conv63.i = sext i16 %171 to i32, !dbg !15642
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !15643
  %172 = load i32, i32* %index1.i, align 4, !dbg !15644
  %idxprom64.i = zext i32 %172 to i64, !dbg !15645
  %173 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !15645
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %173, i64 %idxprom64.i, !dbg !15645
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !15645
  %174 = load i16, i16* %arrayidx66.i, align 2, !dbg !15645
  %conv67.i = sext i16 %174 to i32, !dbg !15645
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !15646
  br label %if.end.i, !dbg !15647

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !15648

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body128
  %175 = load i32, i32* %n.i, align 4, !dbg !15649
  %176 = load i32, i32* %re_cache.i, align 4, !dbg !15650
  %shl70.i = shl i32 %176, %175, !dbg !15650
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !15650
  %177 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15651
  %178 = load i32, i32* %re_index.i, align 4, !dbg !15652
  %179 = load i32, i32* %n.i, align 4, !dbg !15653
  %add71.i = add i32 %178, %179, !dbg !15654
  %cmp72.i = icmp ugt i32 %177, %add71.i, !dbg !15655
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !15656

cond.true74.i:                                    ; preds = %if.end68.i
  %180 = load i32, i32* %re_index.i, align 4, !dbg !15657
  %181 = load i32, i32* %n.i, align 4, !dbg !15658
  %add75.i = add i32 %180, %181, !dbg !15659
  br label %get_vlc2.exit, !dbg !15660

cond.false76.i:                                   ; preds = %if.end68.i
  %182 = load i32, i32* %re_size_plus8.i, align 4, !dbg !15661
  br label %get_vlc2.exit, !dbg !15662

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %182, %cond.false76.i ], !dbg !15663
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !15664
  %183 = load i32, i32* %re_index.i, align 4, !dbg !15665
  %184 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !15666
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %184, i32 0, i32 2, !dbg !15667
  store i32 %183, i32* %index80.i, align 8, !dbg !15668
  %185 = load i32, i32* %code.i, align 4, !dbg !15669
  store i32 %185, i32* %delta, align 4, !dbg !15670
  %186 = load i32, i32* %delta, align 4, !dbg !15671
  %call130 = call i32 @sign_extend(i32 %186, i32 8) #1, !dbg !15672
  store i32 %call130, i32* %delta, align 4, !dbg !15673
  %187 = load i32, i32* %i, align 4, !dbg !15674
  %188 = load i32, i32* %sb, align 4, !dbg !15675
  %idxprom131 = sext i32 %188 to i64, !dbg !15676
  %189 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15676
  %arrayidx132 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %189, i64 %idxprom131, !dbg !15676
  %num_wavs133 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx132, i32 0, i32 2, !dbg !15677
  %190 = load i32, i32* %num_wavs133, align 4, !dbg !15677
  %cmp134 = icmp slt i32 %187, %190, !dbg !15678
  br i1 %cmp134, label %cond.true135, label %cond.false139, !dbg !15679

cond.true135:                                     ; preds = %get_vlc2.exit
  %191 = load i32, i32* %i, align 4, !dbg !15680
  %idxprom136 = sext i32 %191 to i64, !dbg !15682
  %192 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15682
  %arrayidx137 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %192, i64 %idxprom136, !dbg !15682
  %freq_index138 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx137, i32 0, i32 0, !dbg !15683
  %193 = load i32, i32* %freq_index138, align 4, !dbg !15683
  br label %cond.end155, !dbg !15684

cond.false139:                                    ; preds = %get_vlc2.exit
  %194 = load i32, i32* %sb, align 4, !dbg !15685
  %idxprom140 = sext i32 %194 to i64, !dbg !15686
  %195 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15686
  %arrayidx141 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %195, i64 %idxprom140, !dbg !15686
  %num_wavs142 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx141, i32 0, i32 2, !dbg !15687
  %196 = load i32, i32* %num_wavs142, align 4, !dbg !15687
  %tobool143 = icmp ne i32 %196, 0, !dbg !15686
  br i1 %tobool143, label %cond.true144, label %cond.false152, !dbg !15686

cond.true144:                                     ; preds = %cond.false139
  %197 = load i32, i32* %sb, align 4, !dbg !15688
  %idxprom145 = sext i32 %197 to i64, !dbg !15689
  %198 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15689
  %arrayidx146 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %198, i64 %idxprom145, !dbg !15689
  %num_wavs147 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx146, i32 0, i32 2, !dbg !15690
  %199 = load i32, i32* %num_wavs147, align 4, !dbg !15690
  %sub148 = sub nsw i32 %199, 1, !dbg !15691
  %idxprom149 = sext i32 %sub148 to i64, !dbg !15692
  %200 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %iwav, align 8, !dbg !15692
  %arrayidx150 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %200, i64 %idxprom149, !dbg !15692
  %freq_index151 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx150, i32 0, i32 0, !dbg !15693
  %201 = load i32, i32* %freq_index151, align 4, !dbg !15693
  br label %cond.end153, !dbg !15694

cond.false152:                                    ; preds = %cond.false139
  br label %cond.end153, !dbg !15695

cond.end153:                                      ; preds = %cond.false152, %cond.true144
  %cond154 = phi i32 [ %201, %cond.true144 ], [ 0, %cond.false152 ], !dbg !15697
  br label %cond.end155, !dbg !15699

cond.end155:                                      ; preds = %cond.end153, %cond.true135
  %cond156 = phi i32 [ %193, %cond.true135 ], [ %cond154, %cond.end153 ], !dbg !15700
  store i32 %cond156, i32* %pred, align 4, !dbg !15701
  %202 = load i32, i32* %pred, align 4, !dbg !15702
  %203 = load i32, i32* %delta, align 4, !dbg !15703
  %add157 = add nsw i32 %202, %203, !dbg !15704
  %and = and i32 %add157, 1023, !dbg !15705
  %204 = load i32, i32* %i, align 4, !dbg !15706
  %idxprom158 = sext i32 %204 to i64, !dbg !15707
  %205 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %owav, align 8, !dbg !15707
  %arrayidx159 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %205, i64 %idxprom158, !dbg !15707
  %freq_index160 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx159, i32 0, i32 0, !dbg !15708
  store i32 %and, i32* %freq_index160, align 4, !dbg !15709
  br label %for.inc161, !dbg !15710

for.inc161:                                       ; preds = %cond.end155
  %206 = load i32, i32* %i, align 4, !dbg !15711
  %inc162 = add nsw i32 %206, 1, !dbg !15711
  store i32 %inc162, i32* %i, align 4, !dbg !15711
  br label %for.cond123, !dbg !15713, !llvm.loop !15714

for.end163:                                       ; preds = %for.cond123
  br label %for.inc164, !dbg !15716

for.inc164:                                       ; preds = %for.end163, %if.then107
  %207 = load i32, i32* %sb, align 4, !dbg !15717
  %inc165 = add nsw i32 %207, 1, !dbg !15717
  store i32 %inc165, i32* %sb, align 4, !dbg !15717
  br label %for.cond94, !dbg !15719, !llvm.loop !15720

for.end166:                                       ; preds = %for.cond94
  br label %if.end167

if.end167:                                        ; preds = %for.end166, %for.end92
  ret void, !dbg !15722
}

; Function Attrs: nounwind uwtable
define internal void @decode_tones_amplitude(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32* %band_has_tones) #3 !dbg !15723 {
entry:
  %x.addr.i96.i469 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i469, metadata !2531, metadata !1324), !dbg !15724
  %x.addr.i81.i470 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i470, metadata !2531, metadata !1324), !dbg !15734
  %x.addr.i.i471 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i471, metadata !2531, metadata !1324), !dbg !15736
  %s.addr.i472 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i472, metadata !3291, metadata !1324), !dbg !15738
  %table.addr.i473 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i473, metadata !3293, metadata !1324), !dbg !15739
  %bits.addr.i474 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i474, metadata !3295, metadata !1324), !dbg !15740
  %max_depth.addr.i475 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i475, metadata !3297, metadata !1324), !dbg !15741
  %code.i476 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i476, metadata !3299, metadata !1324), !dbg !15742
  %re_index.i477 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i477, metadata !3301, metadata !1324), !dbg !15743
  %re_cache.i478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i478, metadata !3303, metadata !1324), !dbg !15744
  %re_size_plus8.i479 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i479, metadata !3305, metadata !1324), !dbg !15745
  %n.i480 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i480, metadata !3307, metadata !1324), !dbg !15746
  %nb_bits.i481 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i481, metadata !3309, metadata !1324), !dbg !15747
  %index1.i482 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i482, metadata !3311, metadata !1324), !dbg !15748
  %x.addr.i96.i323 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i323, metadata !2531, metadata !1324), !dbg !15749
  %x.addr.i81.i324 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i324, metadata !2531, metadata !1324), !dbg !15756
  %x.addr.i.i325 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i325, metadata !2531, metadata !1324), !dbg !15758
  %s.addr.i326 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i326, metadata !3291, metadata !1324), !dbg !15760
  %table.addr.i327 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i327, metadata !3293, metadata !1324), !dbg !15761
  %bits.addr.i328 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i328, metadata !3295, metadata !1324), !dbg !15762
  %max_depth.addr.i329 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i329, metadata !3297, metadata !1324), !dbg !15763
  %code.i330 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i330, metadata !3299, metadata !1324), !dbg !15764
  %re_index.i331 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i331, metadata !3301, metadata !1324), !dbg !15765
  %re_cache.i332 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i332, metadata !3303, metadata !1324), !dbg !15766
  %re_size_plus8.i333 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i333, metadata !3305, metadata !1324), !dbg !15767
  %n.i334 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i334, metadata !3307, metadata !1324), !dbg !15768
  %nb_bits.i335 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i335, metadata !3309, metadata !1324), !dbg !15769
  %index1.i336 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i336, metadata !3311, metadata !1324), !dbg !15770
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2531, metadata !1324), !dbg !15771
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2531, metadata !1324), !dbg !15776
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2531, metadata !1324), !dbg !15778
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !3291, metadata !1324), !dbg !15780
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !3293, metadata !1324), !dbg !15781
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !3295, metadata !1324), !dbg !15782
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !3297, metadata !1324), !dbg !15783
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !3299, metadata !1324), !dbg !15784
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !3301, metadata !1324), !dbg !15785
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !3303, metadata !1324), !dbg !15786
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !3305, metadata !1324), !dbg !15787
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !3307, metadata !1324), !dbg !15788
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !3309, metadata !1324), !dbg !15789
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !3311, metadata !1324), !dbg !15790
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %band_has_tones.addr = alloca i32*, align 8
  %mode = alloca i32, align 4
  %sb = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %diff = alloca i32, align 4
  %maxdiff = alloca i32, align 4
  %fi = alloca i32, align 4
  %delta = alloca i32, align 4
  %pred = alloca i32, align 4
  %wsrc = alloca %struct.Atrac3pWaveParam*, align 8
  %wref = alloca %struct.Atrac3pWaveParam*, align 8
  %refwaves = alloca [48 x i32], align 16
  %dst = alloca %struct.Atrac3pWavesData*, align 8
  %ref = alloca %struct.Atrac3pWavesData*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !15791, metadata !1324), !dbg !15792
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !15793, metadata !1324), !dbg !15794
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !15795, metadata !1324), !dbg !15796
  store i32* %band_has_tones, i32** %band_has_tones.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_has_tones.addr, metadata !15797, metadata !1324), !dbg !15798
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !15799, metadata !1324), !dbg !15800
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !15801, metadata !1324), !dbg !15802
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15803, metadata !1324), !dbg !15804
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15805, metadata !1324), !dbg !15806
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !15807, metadata !1324), !dbg !15808
  call void @llvm.dbg.declare(metadata i32* %maxdiff, metadata !15809, metadata !1324), !dbg !15810
  call void @llvm.dbg.declare(metadata i32* %fi, metadata !15811, metadata !1324), !dbg !15812
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !15813, metadata !1324), !dbg !15814
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !15815, metadata !1324), !dbg !15816
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveParam** %wsrc, metadata !15817, metadata !1324), !dbg !15818
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveParam** %wref, metadata !15819, metadata !1324), !dbg !15820
  call void @llvm.dbg.declare(metadata [48 x i32]* %refwaves, metadata !15821, metadata !1324), !dbg !15823
  %0 = bitcast [48 x i32]* %refwaves to i8*, !dbg !15823
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 192, i32 16, i1 false), !dbg !15823
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %dst, metadata !15824, metadata !1324), !dbg !15825
  %1 = load i32, i32* %ch_num.addr, align 4, !dbg !15826
  %idxprom = sext i32 %1 to i64, !dbg !15827
  %2 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15827
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %2, i32 0, i32 12, !dbg !15828
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !15827
  %tones_info = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 18, !dbg !15829
  %3 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info, align 8, !dbg !15829
  store %struct.Atrac3pWavesData* %3, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15825
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %ref, metadata !15830, metadata !1324), !dbg !15831
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15832
  %channels1 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 12, !dbg !15833
  %arrayidx2 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels1, i64 0, i64 0, !dbg !15832
  %tones_info3 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx2, i32 0, i32 18, !dbg !15834
  %5 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info3, align 8, !dbg !15834
  store %struct.Atrac3pWavesData* %5, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15831
  %6 = load i32, i32* %ch_num.addr, align 4, !dbg !15835
  %tobool = icmp ne i32 %6, 0, !dbg !15835
  br i1 %tobool, label %if.then, label %if.end100, !dbg !15837

if.then:                                          ; preds = %entry
  store i32 0, i32* %sb, align 4, !dbg !15838
  br label %for.cond, !dbg !15841

for.cond:                                         ; preds = %for.inc97, %if.then
  %7 = load i32, i32* %sb, align 4, !dbg !15842
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15845
  %waves_info = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 14, !dbg !15846
  %9 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info, align 8, !dbg !15846
  %num_tone_bands = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %9, i32 0, i32 2, !dbg !15847
  %10 = load i32, i32* %num_tone_bands, align 4, !dbg !15847
  %cmp = icmp slt i32 %7, %10, !dbg !15848
  br i1 %cmp, label %for.body, label %for.end99, !dbg !15849

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %sb, align 4, !dbg !15850
  %idxprom4 = sext i32 %11 to i64, !dbg !15853
  %12 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !15853
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !15853
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !15853
  %tobool6 = icmp ne i32 %13, 0, !dbg !15853
  br i1 %tobool6, label %lor.lhs.false, label %if.then10, !dbg !15854

lor.lhs.false:                                    ; preds = %for.body
  %14 = load i32, i32* %sb, align 4, !dbg !15855
  %idxprom7 = sext i32 %14 to i64, !dbg !15857
  %15 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15857
  %arrayidx8 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %15, i64 %idxprom7, !dbg !15857
  %num_wavs = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx8, i32 0, i32 2, !dbg !15858
  %16 = load i32, i32* %num_wavs, align 4, !dbg !15858
  %tobool9 = icmp ne i32 %16, 0, !dbg !15857
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !15859

if.then10:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc97, !dbg !15860

if.end:                                           ; preds = %lor.lhs.false
  %17 = load i32, i32* %sb, align 4, !dbg !15861
  %idxprom11 = sext i32 %17 to i64, !dbg !15862
  %18 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15862
  %arrayidx12 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %18, i64 %idxprom11, !dbg !15862
  %start_index = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx12, i32 0, i32 3, !dbg !15863
  %19 = load i32, i32* %start_index, align 4, !dbg !15863
  %idxprom13 = sext i32 %19 to i64, !dbg !15864
  %20 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15864
  %waves_info14 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %20, i32 0, i32 14, !dbg !15865
  %21 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info14, align 8, !dbg !15865
  %waves = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %21, i32 0, i32 7, !dbg !15866
  %arrayidx15 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves, i64 0, i64 %idxprom13, !dbg !15864
  store %struct.Atrac3pWaveParam* %arrayidx15, %struct.Atrac3pWaveParam** %wsrc, align 8, !dbg !15867
  %22 = load i32, i32* %sb, align 4, !dbg !15868
  %idxprom16 = sext i32 %22 to i64, !dbg !15869
  %23 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15869
  %arrayidx17 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %23, i64 %idxprom16, !dbg !15869
  %start_index18 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx17, i32 0, i32 3, !dbg !15870
  %24 = load i32, i32* %start_index18, align 4, !dbg !15870
  %idxprom19 = sext i32 %24 to i64, !dbg !15871
  %25 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !15871
  %waves_info20 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %25, i32 0, i32 14, !dbg !15872
  %26 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info20, align 8, !dbg !15872
  %waves21 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %26, i32 0, i32 7, !dbg !15873
  %arrayidx22 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves21, i64 0, i64 %idxprom19, !dbg !15871
  store %struct.Atrac3pWaveParam* %arrayidx22, %struct.Atrac3pWaveParam** %wref, align 8, !dbg !15874
  store i32 0, i32* %j, align 4, !dbg !15875
  br label %for.cond23, !dbg !15877

for.cond23:                                       ; preds = %for.inc94, %if.end
  %27 = load i32, i32* %j, align 4, !dbg !15878
  %28 = load i32, i32* %sb, align 4, !dbg !15881
  %idxprom24 = sext i32 %28 to i64, !dbg !15882
  %29 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15882
  %arrayidx25 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %29, i64 %idxprom24, !dbg !15882
  %num_wavs26 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx25, i32 0, i32 2, !dbg !15883
  %30 = load i32, i32* %num_wavs26, align 4, !dbg !15883
  %cmp27 = icmp slt i32 %27, %30, !dbg !15884
  br i1 %cmp27, label %for.body28, label %for.end96, !dbg !15885

for.body28:                                       ; preds = %for.cond23
  store i32 0, i32* %i, align 4, !dbg !15886
  store i32 0, i32* %fi, align 4, !dbg !15889
  store i32 1024, i32* %maxdiff, align 4, !dbg !15890
  br label %for.cond29, !dbg !15891

for.cond29:                                       ; preds = %for.inc, %for.body28
  %31 = load i32, i32* %i, align 4, !dbg !15892
  %32 = load i32, i32* %sb, align 4, !dbg !15895
  %idxprom30 = sext i32 %32 to i64, !dbg !15896
  %33 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15896
  %arrayidx31 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %33, i64 %idxprom30, !dbg !15896
  %num_wavs32 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx31, i32 0, i32 2, !dbg !15897
  %34 = load i32, i32* %num_wavs32, align 4, !dbg !15897
  %cmp33 = icmp slt i32 %31, %34, !dbg !15898
  br i1 %cmp33, label %for.body34, label %for.end, !dbg !15899

for.body34:                                       ; preds = %for.cond29
  %35 = load i32, i32* %j, align 4, !dbg !15900
  %idxprom35 = sext i32 %35 to i64, !dbg !15902
  %36 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wsrc, align 8, !dbg !15902
  %arrayidx36 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %36, i64 %idxprom35, !dbg !15902
  %freq_index = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx36, i32 0, i32 0, !dbg !15903
  %37 = load i32, i32* %freq_index, align 4, !dbg !15903
  %38 = load i32, i32* %i, align 4, !dbg !15904
  %idxprom37 = sext i32 %38 to i64, !dbg !15905
  %39 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wref, align 8, !dbg !15905
  %arrayidx38 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %39, i64 %idxprom37, !dbg !15905
  %freq_index39 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx38, i32 0, i32 0, !dbg !15906
  %40 = load i32, i32* %freq_index39, align 4, !dbg !15906
  %sub = sub nsw i32 %37, %40, !dbg !15907
  %cmp40 = icmp sge i32 %sub, 0, !dbg !15908
  br i1 %cmp40, label %cond.true, label %cond.false, !dbg !15909

cond.true:                                        ; preds = %for.body34
  %41 = load i32, i32* %j, align 4, !dbg !15910
  %idxprom41 = sext i32 %41 to i64, !dbg !15912
  %42 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wsrc, align 8, !dbg !15912
  %arrayidx42 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %42, i64 %idxprom41, !dbg !15912
  %freq_index43 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx42, i32 0, i32 0, !dbg !15913
  %43 = load i32, i32* %freq_index43, align 4, !dbg !15913
  %44 = load i32, i32* %i, align 4, !dbg !15914
  %idxprom44 = sext i32 %44 to i64, !dbg !15915
  %45 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wref, align 8, !dbg !15915
  %arrayidx45 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %45, i64 %idxprom44, !dbg !15915
  %freq_index46 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx45, i32 0, i32 0, !dbg !15916
  %46 = load i32, i32* %freq_index46, align 4, !dbg !15916
  %sub47 = sub nsw i32 %43, %46, !dbg !15917
  br label %cond.end, !dbg !15918

cond.false:                                       ; preds = %for.body34
  %47 = load i32, i32* %j, align 4, !dbg !15919
  %idxprom48 = sext i32 %47 to i64, !dbg !15921
  %48 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wsrc, align 8, !dbg !15921
  %arrayidx49 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %48, i64 %idxprom48, !dbg !15921
  %freq_index50 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx49, i32 0, i32 0, !dbg !15922
  %49 = load i32, i32* %freq_index50, align 4, !dbg !15922
  %50 = load i32, i32* %i, align 4, !dbg !15923
  %idxprom51 = sext i32 %50 to i64, !dbg !15924
  %51 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wref, align 8, !dbg !15924
  %arrayidx52 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %51, i64 %idxprom51, !dbg !15924
  %freq_index53 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx52, i32 0, i32 0, !dbg !15925
  %52 = load i32, i32* %freq_index53, align 4, !dbg !15925
  %sub54 = sub nsw i32 %49, %52, !dbg !15926
  %sub55 = sub nsw i32 0, %sub54, !dbg !15927
  br label %cond.end, !dbg !15928

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub47, %cond.true ], [ %sub55, %cond.false ], !dbg !15929
  store i32 %cond, i32* %diff, align 4, !dbg !15931
  %53 = load i32, i32* %diff, align 4, !dbg !15932
  %54 = load i32, i32* %maxdiff, align 4, !dbg !15934
  %cmp56 = icmp slt i32 %53, %54, !dbg !15935
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !15936

if.then57:                                        ; preds = %cond.end
  %55 = load i32, i32* %diff, align 4, !dbg !15937
  store i32 %55, i32* %maxdiff, align 4, !dbg !15939
  %56 = load i32, i32* %i, align 4, !dbg !15940
  store i32 %56, i32* %fi, align 4, !dbg !15941
  br label %if.end58, !dbg !15942

if.end58:                                         ; preds = %if.then57, %cond.end
  br label %for.inc, !dbg !15943

for.inc:                                          ; preds = %if.end58
  %57 = load i32, i32* %i, align 4, !dbg !15944
  %inc = add nsw i32 %57, 1, !dbg !15944
  store i32 %inc, i32* %i, align 4, !dbg !15944
  br label %for.cond29, !dbg !15946, !llvm.loop !15947

for.end:                                          ; preds = %for.cond29
  %58 = load i32, i32* %maxdiff, align 4, !dbg !15949
  %cmp59 = icmp slt i32 %58, 8, !dbg !15951
  br i1 %cmp59, label %if.then60, label %if.else, !dbg !15952

if.then60:                                        ; preds = %for.end
  %59 = load i32, i32* %fi, align 4, !dbg !15953
  %60 = load i32, i32* %sb, align 4, !dbg !15954
  %idxprom61 = sext i32 %60 to i64, !dbg !15955
  %61 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15955
  %arrayidx62 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %61, i64 %idxprom61, !dbg !15955
  %start_index63 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx62, i32 0, i32 3, !dbg !15956
  %62 = load i32, i32* %start_index63, align 4, !dbg !15956
  %add = add nsw i32 %59, %62, !dbg !15957
  %63 = load i32, i32* %sb, align 4, !dbg !15958
  %idxprom64 = sext i32 %63 to i64, !dbg !15959
  %64 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15959
  %arrayidx65 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %64, i64 %idxprom64, !dbg !15959
  %start_index66 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx65, i32 0, i32 3, !dbg !15960
  %65 = load i32, i32* %start_index66, align 4, !dbg !15960
  %66 = load i32, i32* %j, align 4, !dbg !15961
  %add67 = add nsw i32 %65, %66, !dbg !15962
  %idxprom68 = sext i32 %add67 to i64, !dbg !15963
  %arrayidx69 = getelementptr inbounds [48 x i32], [48 x i32]* %refwaves, i64 0, i64 %idxprom68, !dbg !15963
  store i32 %add, i32* %arrayidx69, align 4, !dbg !15964
  br label %if.end93, !dbg !15963

if.else:                                          ; preds = %for.end
  %67 = load i32, i32* %j, align 4, !dbg !15965
  %68 = load i32, i32* %sb, align 4, !dbg !15967
  %idxprom70 = sext i32 %68 to i64, !dbg !15968
  %69 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15968
  %arrayidx71 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %69, i64 %idxprom70, !dbg !15968
  %num_wavs72 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx71, i32 0, i32 2, !dbg !15969
  %70 = load i32, i32* %num_wavs72, align 4, !dbg !15969
  %cmp73 = icmp slt i32 %67, %70, !dbg !15970
  br i1 %cmp73, label %if.then74, label %if.else85, !dbg !15971

if.then74:                                        ; preds = %if.else
  %71 = load i32, i32* %j, align 4, !dbg !15972
  %72 = load i32, i32* %sb, align 4, !dbg !15973
  %idxprom75 = sext i32 %72 to i64, !dbg !15974
  %73 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %ref, align 8, !dbg !15974
  %arrayidx76 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %73, i64 %idxprom75, !dbg !15974
  %start_index77 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx76, i32 0, i32 3, !dbg !15975
  %74 = load i32, i32* %start_index77, align 4, !dbg !15975
  %add78 = add nsw i32 %71, %74, !dbg !15976
  %75 = load i32, i32* %sb, align 4, !dbg !15977
  %idxprom79 = sext i32 %75 to i64, !dbg !15978
  %76 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15978
  %arrayidx80 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %76, i64 %idxprom79, !dbg !15978
  %start_index81 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx80, i32 0, i32 3, !dbg !15979
  %77 = load i32, i32* %start_index81, align 4, !dbg !15979
  %78 = load i32, i32* %j, align 4, !dbg !15980
  %add82 = add nsw i32 %77, %78, !dbg !15981
  %idxprom83 = sext i32 %add82 to i64, !dbg !15982
  %arrayidx84 = getelementptr inbounds [48 x i32], [48 x i32]* %refwaves, i64 0, i64 %idxprom83, !dbg !15982
  store i32 %add78, i32* %arrayidx84, align 4, !dbg !15983
  br label %if.end92, !dbg !15982

if.else85:                                        ; preds = %if.else
  %79 = load i32, i32* %sb, align 4, !dbg !15984
  %idxprom86 = sext i32 %79 to i64, !dbg !15985
  %80 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !15985
  %arrayidx87 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %80, i64 %idxprom86, !dbg !15985
  %start_index88 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx87, i32 0, i32 3, !dbg !15986
  %81 = load i32, i32* %start_index88, align 4, !dbg !15986
  %82 = load i32, i32* %j, align 4, !dbg !15987
  %add89 = add nsw i32 %81, %82, !dbg !15988
  %idxprom90 = sext i32 %add89 to i64, !dbg !15989
  %arrayidx91 = getelementptr inbounds [48 x i32], [48 x i32]* %refwaves, i64 0, i64 %idxprom90, !dbg !15989
  store i32 -1, i32* %arrayidx91, align 4, !dbg !15990
  br label %if.end92

if.end92:                                         ; preds = %if.else85, %if.then74
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then60
  br label %for.inc94, !dbg !15991

for.inc94:                                        ; preds = %if.end93
  %83 = load i32, i32* %j, align 4, !dbg !15992
  %inc95 = add nsw i32 %83, 1, !dbg !15992
  store i32 %inc95, i32* %j, align 4, !dbg !15992
  br label %for.cond23, !dbg !15994, !llvm.loop !15995

for.end96:                                        ; preds = %for.cond23
  br label %for.inc97, !dbg !15997

for.inc97:                                        ; preds = %for.end96, %if.then10
  %84 = load i32, i32* %sb, align 4, !dbg !15998
  %inc98 = add nsw i32 %84, 1, !dbg !15998
  store i32 %inc98, i32* %sb, align 4, !dbg !15998
  br label %for.cond, !dbg !16000, !llvm.loop !16001

for.end99:                                        ; preds = %for.cond
  br label %if.end100, !dbg !16003

if.end100:                                        ; preds = %for.end99, %entry
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16004
  %86 = load i32, i32* %ch_num.addr, align 4, !dbg !16005
  %add101 = add nsw i32 %86, 1, !dbg !16006
  %call = call i32 @get_bits(%struct.GetBitContext* %85, i32 %add101), !dbg !16007
  store i32 %call, i32* %mode, align 4, !dbg !16008
  %87 = load i32, i32* %mode, align 4, !dbg !16009
  switch i32 %87, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb152
    i32 2, label %sw.bb207
    i32 3, label %sw.bb269
  ], !dbg !16010

sw.bb:                                            ; preds = %if.end100
  store i32 0, i32* %sb, align 4, !dbg !16011
  br label %for.cond102, !dbg !16013

for.cond102:                                      ; preds = %for.inc149, %sw.bb
  %88 = load i32, i32* %sb, align 4, !dbg !16014
  %89 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16017
  %waves_info103 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %89, i32 0, i32 14, !dbg !16018
  %90 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info103, align 8, !dbg !16018
  %num_tone_bands104 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %90, i32 0, i32 2, !dbg !16019
  %91 = load i32, i32* %num_tone_bands104, align 4, !dbg !16019
  %cmp105 = icmp slt i32 %88, %91, !dbg !16020
  br i1 %cmp105, label %for.body106, label %for.end151, !dbg !16021

for.body106:                                      ; preds = %for.cond102
  %92 = load i32, i32* %sb, align 4, !dbg !16022
  %idxprom107 = sext i32 %92 to i64, !dbg !16025
  %93 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !16025
  %arrayidx108 = getelementptr inbounds i32, i32* %93, i64 %idxprom107, !dbg !16025
  %94 = load i32, i32* %arrayidx108, align 4, !dbg !16025
  %tobool109 = icmp ne i32 %94, 0, !dbg !16025
  br i1 %tobool109, label %lor.lhs.false110, label %if.then115, !dbg !16026

lor.lhs.false110:                                 ; preds = %for.body106
  %95 = load i32, i32* %sb, align 4, !dbg !16027
  %idxprom111 = sext i32 %95 to i64, !dbg !16029
  %96 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16029
  %arrayidx112 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %96, i64 %idxprom111, !dbg !16029
  %num_wavs113 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx112, i32 0, i32 2, !dbg !16030
  %97 = load i32, i32* %num_wavs113, align 4, !dbg !16030
  %tobool114 = icmp ne i32 %97, 0, !dbg !16029
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !16031

if.then115:                                       ; preds = %lor.lhs.false110, %for.body106
  br label %for.inc149, !dbg !16032

if.end116:                                        ; preds = %lor.lhs.false110
  %98 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16033
  %waves_info117 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %98, i32 0, i32 14, !dbg !16035
  %99 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info117, align 8, !dbg !16035
  %amplitude_mode = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %99, i32 0, i32 1, !dbg !16036
  %100 = load i32, i32* %amplitude_mode, align 4, !dbg !16036
  %tobool118 = icmp ne i32 %100, 0, !dbg !16033
  br i1 %tobool118, label %if.then119, label %if.else138, !dbg !16037

if.then119:                                       ; preds = %if.end116
  store i32 0, i32* %i, align 4, !dbg !16038
  br label %for.cond120, !dbg !16040

for.cond120:                                      ; preds = %for.inc135, %if.then119
  %101 = load i32, i32* %i, align 4, !dbg !16041
  %102 = load i32, i32* %sb, align 4, !dbg !16044
  %idxprom121 = sext i32 %102 to i64, !dbg !16045
  %103 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16045
  %arrayidx122 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %103, i64 %idxprom121, !dbg !16045
  %num_wavs123 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx122, i32 0, i32 2, !dbg !16046
  %104 = load i32, i32* %num_wavs123, align 4, !dbg !16046
  %cmp124 = icmp slt i32 %101, %104, !dbg !16047
  br i1 %cmp124, label %for.body125, label %for.end137, !dbg !16048

for.body125:                                      ; preds = %for.cond120
  %105 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16049
  %call126 = call i32 @get_bits(%struct.GetBitContext* %105, i32 6), !dbg !16050
  %106 = load i32, i32* %sb, align 4, !dbg !16051
  %idxprom127 = sext i32 %106 to i64, !dbg !16052
  %107 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16052
  %arrayidx128 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %107, i64 %idxprom127, !dbg !16052
  %start_index129 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx128, i32 0, i32 3, !dbg !16053
  %108 = load i32, i32* %start_index129, align 4, !dbg !16053
  %109 = load i32, i32* %i, align 4, !dbg !16054
  %add130 = add nsw i32 %108, %109, !dbg !16055
  %idxprom131 = sext i32 %add130 to i64, !dbg !16056
  %110 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16056
  %waves_info132 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %110, i32 0, i32 14, !dbg !16057
  %111 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info132, align 8, !dbg !16057
  %waves133 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %111, i32 0, i32 7, !dbg !16058
  %arrayidx134 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves133, i64 0, i64 %idxprom131, !dbg !16056
  %amp_sf = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx134, i32 0, i32 1, !dbg !16059
  store i32 %call126, i32* %amp_sf, align 4, !dbg !16060
  br label %for.inc135, !dbg !16056

for.inc135:                                       ; preds = %for.body125
  %112 = load i32, i32* %i, align 4, !dbg !16061
  %inc136 = add nsw i32 %112, 1, !dbg !16061
  store i32 %inc136, i32* %i, align 4, !dbg !16061
  br label %for.cond120, !dbg !16063, !llvm.loop !16064

for.end137:                                       ; preds = %for.cond120
  br label %if.end148, !dbg !16066

if.else138:                                       ; preds = %if.end116
  %113 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16068
  %call139 = call i32 @get_bits(%struct.GetBitContext* %113, i32 6), !dbg !16069
  %114 = load i32, i32* %sb, align 4, !dbg !16070
  %idxprom140 = sext i32 %114 to i64, !dbg !16071
  %115 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16071
  %arrayidx141 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %115, i64 %idxprom140, !dbg !16071
  %start_index142 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx141, i32 0, i32 3, !dbg !16072
  %116 = load i32, i32* %start_index142, align 4, !dbg !16072
  %idxprom143 = sext i32 %116 to i64, !dbg !16073
  %117 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16073
  %waves_info144 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %117, i32 0, i32 14, !dbg !16074
  %118 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info144, align 8, !dbg !16074
  %waves145 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %118, i32 0, i32 7, !dbg !16075
  %arrayidx146 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves145, i64 0, i64 %idxprom143, !dbg !16073
  %amp_sf147 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx146, i32 0, i32 1, !dbg !16076
  store i32 %call139, i32* %amp_sf147, align 4, !dbg !16077
  br label %if.end148

if.end148:                                        ; preds = %if.else138, %for.end137
  br label %for.inc149, !dbg !16078

for.inc149:                                       ; preds = %if.end148, %if.then115
  %119 = load i32, i32* %sb, align 4, !dbg !16079
  %inc150 = add nsw i32 %119, 1, !dbg !16079
  store i32 %inc150, i32* %sb, align 4, !dbg !16079
  br label %for.cond102, !dbg !16081, !llvm.loop !16082

for.end151:                                       ; preds = %for.cond102
  br label %sw.epilog, !dbg !16084

sw.bb152:                                         ; preds = %if.end100
  store i32 0, i32* %sb, align 4, !dbg !16085
  br label %for.cond153, !dbg !16086

for.cond153:                                      ; preds = %for.inc204, %sw.bb152
  %120 = load i32, i32* %sb, align 4, !dbg !16087
  %121 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16089
  %waves_info154 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %121, i32 0, i32 14, !dbg !16090
  %122 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info154, align 8, !dbg !16090
  %num_tone_bands155 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %122, i32 0, i32 2, !dbg !16091
  %123 = load i32, i32* %num_tone_bands155, align 4, !dbg !16091
  %cmp156 = icmp slt i32 %120, %123, !dbg !16092
  br i1 %cmp156, label %for.body157, label %for.end206, !dbg !16093

for.body157:                                      ; preds = %for.cond153
  %124 = load i32, i32* %sb, align 4, !dbg !16094
  %idxprom158 = sext i32 %124 to i64, !dbg !16096
  %125 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !16096
  %arrayidx159 = getelementptr inbounds i32, i32* %125, i64 %idxprom158, !dbg !16096
  %126 = load i32, i32* %arrayidx159, align 4, !dbg !16096
  %tobool160 = icmp ne i32 %126, 0, !dbg !16096
  br i1 %tobool160, label %lor.lhs.false161, label %if.then166, !dbg !16097

lor.lhs.false161:                                 ; preds = %for.body157
  %127 = load i32, i32* %sb, align 4, !dbg !16098
  %idxprom162 = sext i32 %127 to i64, !dbg !16100
  %128 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16100
  %arrayidx163 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %128, i64 %idxprom162, !dbg !16100
  %num_wavs164 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx163, i32 0, i32 2, !dbg !16101
  %129 = load i32, i32* %num_wavs164, align 4, !dbg !16101
  %tobool165 = icmp ne i32 %129, 0, !dbg !16100
  br i1 %tobool165, label %if.end167, label %if.then166, !dbg !16102

if.then166:                                       ; preds = %lor.lhs.false161, %for.body157
  br label %for.inc204, !dbg !16103

if.end167:                                        ; preds = %lor.lhs.false161
  %130 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16104
  %waves_info168 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %130, i32 0, i32 14, !dbg !16105
  %131 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info168, align 8, !dbg !16105
  %amplitude_mode169 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %131, i32 0, i32 1, !dbg !16106
  %132 = load i32, i32* %amplitude_mode169, align 4, !dbg !16106
  %tobool170 = icmp ne i32 %132, 0, !dbg !16104
  br i1 %tobool170, label %if.then171, label %if.else192, !dbg !16107

if.then171:                                       ; preds = %if.end167
  store i32 0, i32* %i, align 4, !dbg !16108
  br label %for.cond172, !dbg !16109

for.cond172:                                      ; preds = %for.inc189, %if.then171
  %133 = load i32, i32* %i, align 4, !dbg !16110
  %134 = load i32, i32* %sb, align 4, !dbg !16112
  %idxprom173 = sext i32 %134 to i64, !dbg !16113
  %135 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16113
  %arrayidx174 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %135, i64 %idxprom173, !dbg !16113
  %num_wavs175 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx174, i32 0, i32 2, !dbg !16114
  %136 = load i32, i32* %num_wavs175, align 4, !dbg !16114
  %cmp176 = icmp slt i32 %133, %136, !dbg !16115
  br i1 %cmp176, label %for.body177, label %for.end191, !dbg !16116

for.body177:                                      ; preds = %for.cond172
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16117
  %138 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 3, i32 1), align 8, !dbg !16118
  %139 = load i32, i32* getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 3, i32 0), align 8, !dbg !16119
  store %struct.GetBitContext* %137, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16120
  store [2 x i16]* %138, [2 x i16]** %table.addr.i, align 8, !dbg !16120
  store i32 %139, i32* %bits.addr.i, align 4, !dbg !16120
  store i32 1, i32* %max_depth.addr.i, align 4, !dbg !16120
  %140 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16121
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %140, i32 0, i32 2, !dbg !16122
  %141 = load i32, i32* %index.i, align 8, !dbg !16122
  store i32 %141, i32* %re_index.i, align 4, !dbg !15785
  %142 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16123
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %142, i32 0, i32 4, !dbg !16124
  %143 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !16124
  store i32 %143, i32* %re_size_plus8.i, align 4, !dbg !15787
  %144 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16125
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %144, i32 0, i32 0, !dbg !16126
  %145 = load i8*, i8** %buffer.i, align 8, !dbg !16126
  %146 = load i32, i32* %re_index.i, align 4, !dbg !16127
  %shr.i = lshr i32 %146, 3, !dbg !16128
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !16129
  %add.ptr.i = getelementptr inbounds i8, i8* %145, i64 %idx.ext.i, !dbg !16129
  %147 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !16130
  %l.i = bitcast %union.unaligned_32* %147 to i32*, !dbg !16130
  %148 = load i32, i32* %l.i, align 1, !dbg !16130
  store i32 %148, i32* %x.addr.i.i, align 4, !dbg !16131
  %149 = load i32, i32* %x.addr.i.i, align 4, !dbg !16132
  %shl.i.i = shl i32 %149, 8, !dbg !16133
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !16134
  %150 = load i32, i32* %x.addr.i.i, align 4, !dbg !16135
  %shr.i.i = lshr i32 %150, 8, !dbg !16136
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !16137
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !16138
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !16139
  %151 = load i32, i32* %x.addr.i.i, align 4, !dbg !16140
  %shr3.i.i = lshr i32 %151, 16, !dbg !16141
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !16142
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !16143
  %152 = load i32, i32* %x.addr.i.i, align 4, !dbg !16144
  %shr6.i.i = lshr i32 %152, 16, !dbg !16145
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !16146
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !16147
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !16148
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !16149
  %153 = load i32, i32* %re_index.i, align 4, !dbg !16150
  %and.i = and i32 %153, 7, !dbg !16151
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !16152
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !16153
  %154 = load i32, i32* %re_cache.i, align 4, !dbg !16154
  %155 = load i32, i32* %bits.addr.i, align 4, !dbg !16155
  %conv.i = trunc i32 %155 to i8, !dbg !16155
  %call2.i = call i32 @NEG_USR32(i32 %154, i8 signext %conv.i) #9, !dbg !16156
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !16157
  %156 = load i32, i32* %index1.i, align 4, !dbg !16158
  %idxprom.i = zext i32 %156 to i64, !dbg !16159
  %157 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16159
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %157, i64 %idxprom.i, !dbg !16159
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !16159
  %158 = load i16, i16* %arrayidx3.i, align 2, !dbg !16159
  %conv4.i = sext i16 %158 to i32, !dbg !16159
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !16160
  %159 = load i32, i32* %index1.i, align 4, !dbg !16161
  %idxprom5.i = zext i32 %159 to i64, !dbg !16162
  %160 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16162
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %160, i64 %idxprom5.i, !dbg !16162
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !16162
  %161 = load i16, i16* %arrayidx7.i, align 2, !dbg !16162
  %conv8.i = sext i16 %161 to i32, !dbg !16162
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !16163
  %162 = load i32, i32* %max_depth.addr.i, align 4, !dbg !16164
  %cmp.i = icmp sgt i32 %162, 1, !dbg !16165
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !16166

land.lhs.true.i:                                  ; preds = %for.body177
  %163 = load i32, i32* %n.i, align 4, !dbg !16167
  %cmp10.i = icmp slt i32 %163, 0, !dbg !16168
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !16169

if.then.i:                                        ; preds = %land.lhs.true.i
  %164 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16170
  %165 = load i32, i32* %re_index.i, align 4, !dbg !16171
  %166 = load i32, i32* %bits.addr.i, align 4, !dbg !16172
  %add.i = add i32 %165, %166, !dbg !16173
  %cmp12.i = icmp ugt i32 %164, %add.i, !dbg !16174
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !16175

cond.true.i:                                      ; preds = %if.then.i
  %167 = load i32, i32* %re_index.i, align 4, !dbg !16176
  %168 = load i32, i32* %bits.addr.i, align 4, !dbg !16177
  %add14.i = add i32 %167, %168, !dbg !16178
  br label %cond.end.i, !dbg !16179

cond.false.i:                                     ; preds = %if.then.i
  %169 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16180
  br label %cond.end.i, !dbg !16181

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %169, %cond.false.i ], !dbg !16182
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !16183
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16184
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %170, i32 0, i32 0, !dbg !16185
  %171 = load i8*, i8** %buffer15.i, align 8, !dbg !16185
  %172 = load i32, i32* %re_index.i, align 4, !dbg !16186
  %shr16.i = lshr i32 %172, 3, !dbg !16187
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !16188
  %add.ptr18.i = getelementptr inbounds i8, i8* %171, i64 %idx.ext17.i, !dbg !16188
  %173 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !16189
  %l19.i = bitcast %union.unaligned_32* %173 to i32*, !dbg !16189
  %174 = load i32, i32* %l19.i, align 1, !dbg !16189
  store i32 %174, i32* %x.addr.i81.i, align 4, !dbg !16190
  %175 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16191
  %shl.i82.i = shl i32 %175, 8, !dbg !16192
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !16193
  %176 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16194
  %shr.i84.i = lshr i32 %176, 8, !dbg !16195
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !16196
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !16197
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !16198
  %177 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16199
  %shr3.i88.i = lshr i32 %177, 16, !dbg !16200
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !16201
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !16202
  %178 = load i32, i32* %x.addr.i81.i, align 4, !dbg !16203
  %shr6.i91.i = lshr i32 %178, 16, !dbg !16204
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !16205
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !16206
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !16207
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !16208
  %179 = load i32, i32* %re_index.i, align 4, !dbg !16209
  %and21.i = and i32 %179, 7, !dbg !16210
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !16211
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !16212
  %180 = load i32, i32* %n.i, align 4, !dbg !16213
  %sub.i = sub nsw i32 0, %180, !dbg !16214
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !16215
  %181 = load i32, i32* %re_cache.i, align 4, !dbg !16216
  %182 = load i32, i32* %nb_bits.i, align 4, !dbg !16217
  %conv23.i = trunc i32 %182 to i8, !dbg !16217
  %call24.i = call i32 @NEG_USR32(i32 %181, i8 signext %conv23.i) #9, !dbg !16218
  %183 = load i32, i32* %code.i, align 4, !dbg !16219
  %add25.i = add i32 %call24.i, %183, !dbg !16220
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !16221
  %184 = load i32, i32* %index1.i, align 4, !dbg !16222
  %idxprom26.i = zext i32 %184 to i64, !dbg !16223
  %185 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16223
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %185, i64 %idxprom26.i, !dbg !16223
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !16223
  %186 = load i16, i16* %arrayidx28.i, align 2, !dbg !16223
  %conv29.i = sext i16 %186 to i32, !dbg !16223
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !16224
  %187 = load i32, i32* %index1.i, align 4, !dbg !16225
  %idxprom30.i = zext i32 %187 to i64, !dbg !16226
  %188 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16226
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %188, i64 %idxprom30.i, !dbg !16226
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !16226
  %189 = load i16, i16* %arrayidx32.i, align 2, !dbg !16226
  %conv33.i = sext i16 %189 to i32, !dbg !16226
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !16227
  %190 = load i32, i32* %max_depth.addr.i, align 4, !dbg !16228
  %cmp34.i = icmp sgt i32 %190, 2, !dbg !16229
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !16230

land.lhs.true36.i:                                ; preds = %cond.end.i
  %191 = load i32, i32* %n.i, align 4, !dbg !16231
  %cmp37.i = icmp slt i32 %191, 0, !dbg !16232
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !16233

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %192 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16234
  %193 = load i32, i32* %re_index.i, align 4, !dbg !16235
  %194 = load i32, i32* %nb_bits.i, align 4, !dbg !16236
  %add40.i = add i32 %193, %194, !dbg !16237
  %cmp41.i = icmp ugt i32 %192, %add40.i, !dbg !16238
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !16239

cond.true43.i:                                    ; preds = %if.then39.i
  %195 = load i32, i32* %re_index.i, align 4, !dbg !16240
  %196 = load i32, i32* %nb_bits.i, align 4, !dbg !16241
  %add44.i = add i32 %195, %196, !dbg !16242
  br label %cond.end46.i, !dbg !16243

cond.false45.i:                                   ; preds = %if.then39.i
  %197 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16244
  br label %cond.end46.i, !dbg !16245

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %197, %cond.false45.i ], !dbg !16246
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !16247
  %198 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16248
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %198, i32 0, i32 0, !dbg !16249
  %199 = load i8*, i8** %buffer48.i, align 8, !dbg !16249
  %200 = load i32, i32* %re_index.i, align 4, !dbg !16250
  %shr49.i = lshr i32 %200, 3, !dbg !16251
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !16252
  %add.ptr51.i = getelementptr inbounds i8, i8* %199, i64 %idx.ext50.i, !dbg !16252
  %201 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !16253
  %l52.i = bitcast %union.unaligned_32* %201 to i32*, !dbg !16253
  %202 = load i32, i32* %l52.i, align 1, !dbg !16253
  store i32 %202, i32* %x.addr.i96.i, align 4, !dbg !16254
  %203 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16255
  %shl.i97.i = shl i32 %203, 8, !dbg !16256
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !16257
  %204 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16258
  %shr.i99.i = lshr i32 %204, 8, !dbg !16259
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !16260
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !16261
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !16262
  %205 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16263
  %shr3.i103.i = lshr i32 %205, 16, !dbg !16264
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !16265
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !16266
  %206 = load i32, i32* %x.addr.i96.i, align 4, !dbg !16267
  %shr6.i106.i = lshr i32 %206, 16, !dbg !16268
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !16269
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !16270
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !16271
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !16272
  %207 = load i32, i32* %re_index.i, align 4, !dbg !16273
  %and54.i = and i32 %207, 7, !dbg !16274
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !16275
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !16276
  %208 = load i32, i32* %n.i, align 4, !dbg !16277
  %sub56.i = sub nsw i32 0, %208, !dbg !16278
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !16279
  %209 = load i32, i32* %re_cache.i, align 4, !dbg !16280
  %210 = load i32, i32* %nb_bits.i, align 4, !dbg !16281
  %conv57.i = trunc i32 %210 to i8, !dbg !16281
  %call58.i = call i32 @NEG_USR32(i32 %209, i8 signext %conv57.i) #9, !dbg !16282
  %211 = load i32, i32* %code.i, align 4, !dbg !16283
  %add59.i = add i32 %call58.i, %211, !dbg !16284
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !16285
  %212 = load i32, i32* %index1.i, align 4, !dbg !16286
  %idxprom60.i = zext i32 %212 to i64, !dbg !16287
  %213 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16287
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %213, i64 %idxprom60.i, !dbg !16287
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !16287
  %214 = load i16, i16* %arrayidx62.i, align 2, !dbg !16287
  %conv63.i = sext i16 %214 to i32, !dbg !16287
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !16288
  %215 = load i32, i32* %index1.i, align 4, !dbg !16289
  %idxprom64.i = zext i32 %215 to i64, !dbg !16290
  %216 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !16290
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %216, i64 %idxprom64.i, !dbg !16290
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !16290
  %217 = load i16, i16* %arrayidx66.i, align 2, !dbg !16290
  %conv67.i = sext i16 %217 to i32, !dbg !16290
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !16291
  br label %if.end.i, !dbg !16292

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !16293

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body177
  %218 = load i32, i32* %n.i, align 4, !dbg !16294
  %219 = load i32, i32* %re_cache.i, align 4, !dbg !16295
  %shl70.i = shl i32 %219, %218, !dbg !16295
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !16295
  %220 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16296
  %221 = load i32, i32* %re_index.i, align 4, !dbg !16297
  %222 = load i32, i32* %n.i, align 4, !dbg !16298
  %add71.i = add i32 %221, %222, !dbg !16299
  %cmp72.i = icmp ugt i32 %220, %add71.i, !dbg !16300
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !16301

cond.true74.i:                                    ; preds = %if.end68.i
  %223 = load i32, i32* %re_index.i, align 4, !dbg !16302
  %224 = load i32, i32* %n.i, align 4, !dbg !16303
  %add75.i = add i32 %223, %224, !dbg !16304
  br label %get_vlc2.exit, !dbg !16305

cond.false76.i:                                   ; preds = %if.end68.i
  %225 = load i32, i32* %re_size_plus8.i, align 4, !dbg !16306
  br label %get_vlc2.exit, !dbg !16307

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %225, %cond.false76.i ], !dbg !16308
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !16309
  %226 = load i32, i32* %re_index.i, align 4, !dbg !16310
  %227 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !16311
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %227, i32 0, i32 2, !dbg !16312
  store i32 %226, i32* %index80.i, align 8, !dbg !16313
  %228 = load i32, i32* %code.i, align 4, !dbg !16314
  %add179 = add nsw i32 %228, 20, !dbg !16315
  %229 = load i32, i32* %sb, align 4, !dbg !16316
  %idxprom180 = sext i32 %229 to i64, !dbg !16317
  %230 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16317
  %arrayidx181 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %230, i64 %idxprom180, !dbg !16317
  %start_index182 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx181, i32 0, i32 3, !dbg !16318
  %231 = load i32, i32* %start_index182, align 4, !dbg !16318
  %232 = load i32, i32* %i, align 4, !dbg !16319
  %add183 = add nsw i32 %231, %232, !dbg !16320
  %idxprom184 = sext i32 %add183 to i64, !dbg !16321
  %233 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16321
  %waves_info185 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %233, i32 0, i32 14, !dbg !16322
  %234 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info185, align 8, !dbg !16322
  %waves186 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %234, i32 0, i32 7, !dbg !16323
  %arrayidx187 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves186, i64 0, i64 %idxprom184, !dbg !16321
  %amp_sf188 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx187, i32 0, i32 1, !dbg !16324
  store i32 %add179, i32* %amp_sf188, align 4, !dbg !16325
  br label %for.inc189, !dbg !16321

for.inc189:                                       ; preds = %get_vlc2.exit
  %235 = load i32, i32* %i, align 4, !dbg !16326
  %inc190 = add nsw i32 %235, 1, !dbg !16326
  store i32 %inc190, i32* %i, align 4, !dbg !16326
  br label %for.cond172, !dbg !16328, !llvm.loop !16329

for.end191:                                       ; preds = %for.cond172
  br label %if.end203, !dbg !16331

if.else192:                                       ; preds = %if.end167
  %236 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16333
  %237 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 4, i32 1), align 8, !dbg !16334
  %238 = load i32, i32* getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 4, i32 0), align 16, !dbg !16335
  store %struct.GetBitContext* %236, %struct.GetBitContext** %s.addr.i326, align 8, !dbg !16336
  store [2 x i16]* %237, [2 x i16]** %table.addr.i327, align 8, !dbg !16336
  store i32 %238, i32* %bits.addr.i328, align 4, !dbg !16336
  store i32 1, i32* %max_depth.addr.i329, align 4, !dbg !16336
  %239 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i326, align 8, !dbg !16337
  %index.i337 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %239, i32 0, i32 2, !dbg !16338
  %240 = load i32, i32* %index.i337, align 8, !dbg !16338
  store i32 %240, i32* %re_index.i331, align 4, !dbg !15765
  %241 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i326, align 8, !dbg !16339
  %size_in_bits_plus8.i338 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %241, i32 0, i32 4, !dbg !16340
  %242 = load i32, i32* %size_in_bits_plus8.i338, align 8, !dbg !16340
  store i32 %242, i32* %re_size_plus8.i333, align 4, !dbg !15767
  %243 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i326, align 8, !dbg !16341
  %buffer.i339 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %243, i32 0, i32 0, !dbg !16342
  %244 = load i8*, i8** %buffer.i339, align 8, !dbg !16342
  %245 = load i32, i32* %re_index.i331, align 4, !dbg !16343
  %shr.i340 = lshr i32 %245, 3, !dbg !16344
  %idx.ext.i341 = zext i32 %shr.i340 to i64, !dbg !16345
  %add.ptr.i342 = getelementptr inbounds i8, i8* %244, i64 %idx.ext.i341, !dbg !16345
  %246 = bitcast i8* %add.ptr.i342 to %union.unaligned_32*, !dbg !16346
  %l.i343 = bitcast %union.unaligned_32* %246 to i32*, !dbg !16346
  %247 = load i32, i32* %l.i343, align 1, !dbg !16346
  store i32 %247, i32* %x.addr.i.i325, align 4, !dbg !16347
  %248 = load i32, i32* %x.addr.i.i325, align 4, !dbg !16348
  %shl.i.i344 = shl i32 %248, 8, !dbg !16349
  %and.i.i345 = and i32 %shl.i.i344, 65280, !dbg !16350
  %249 = load i32, i32* %x.addr.i.i325, align 4, !dbg !16351
  %shr.i.i346 = lshr i32 %249, 8, !dbg !16352
  %and1.i.i347 = and i32 %shr.i.i346, 255, !dbg !16353
  %or.i.i348 = or i32 %and.i.i345, %and1.i.i347, !dbg !16354
  %shl2.i.i349 = shl i32 %or.i.i348, 16, !dbg !16355
  %250 = load i32, i32* %x.addr.i.i325, align 4, !dbg !16356
  %shr3.i.i350 = lshr i32 %250, 16, !dbg !16357
  %shl4.i.i351 = shl i32 %shr3.i.i350, 8, !dbg !16358
  %and5.i.i352 = and i32 %shl4.i.i351, 65280, !dbg !16359
  %251 = load i32, i32* %x.addr.i.i325, align 4, !dbg !16360
  %shr6.i.i353 = lshr i32 %251, 16, !dbg !16361
  %shr7.i.i354 = lshr i32 %shr6.i.i353, 8, !dbg !16362
  %and8.i.i355 = and i32 %shr7.i.i354, 255, !dbg !16363
  %or9.i.i356 = or i32 %and5.i.i352, %and8.i.i355, !dbg !16364
  %or10.i.i357 = or i32 %shl2.i.i349, %or9.i.i356, !dbg !16365
  %252 = load i32, i32* %re_index.i331, align 4, !dbg !16366
  %and.i358 = and i32 %252, 7, !dbg !16367
  %shl.i359 = shl i32 %or10.i.i357, %and.i358, !dbg !16368
  store i32 %shl.i359, i32* %re_cache.i332, align 4, !dbg !16369
  %253 = load i32, i32* %re_cache.i332, align 4, !dbg !16370
  %254 = load i32, i32* %bits.addr.i328, align 4, !dbg !16371
  %conv.i360 = trunc i32 %254 to i8, !dbg !16371
  %call2.i361 = call i32 @NEG_USR32(i32 %253, i8 signext %conv.i360) #9, !dbg !16372
  store i32 %call2.i361, i32* %index1.i336, align 4, !dbg !16373
  %255 = load i32, i32* %index1.i336, align 4, !dbg !16374
  %idxprom.i362 = zext i32 %255 to i64, !dbg !16375
  %256 = load [2 x i16]*, [2 x i16]** %table.addr.i327, align 8, !dbg !16375
  %arrayidx.i363 = getelementptr inbounds [2 x i16], [2 x i16]* %256, i64 %idxprom.i362, !dbg !16375
  %arrayidx3.i364 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i363, i64 0, i64 0, !dbg !16375
  %257 = load i16, i16* %arrayidx3.i364, align 2, !dbg !16375
  %conv4.i365 = sext i16 %257 to i32, !dbg !16375
  store i32 %conv4.i365, i32* %code.i330, align 4, !dbg !16376
  %258 = load i32, i32* %index1.i336, align 4, !dbg !16377
  %idxprom5.i366 = zext i32 %258 to i64, !dbg !16378
  %259 = load [2 x i16]*, [2 x i16]** %table.addr.i327, align 8, !dbg !16378
  %arrayidx6.i367 = getelementptr inbounds [2 x i16], [2 x i16]* %259, i64 %idxprom5.i366, !dbg !16378
  %arrayidx7.i368 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i367, i64 0, i64 1, !dbg !16378
  %260 = load i16, i16* %arrayidx7.i368, align 2, !dbg !16378
  %conv8.i369 = sext i16 %260 to i32, !dbg !16378
  store i32 %conv8.i369, i32* %n.i334, align 4, !dbg !16379
  %261 = load i32, i32* %max_depth.addr.i329, align 4, !dbg !16380
  %cmp.i370 = icmp sgt i32 %261, 1, !dbg !16381
  br i1 %cmp.i370, label %land.lhs.true.i372, label %if.end68.i459, !dbg !16382

land.lhs.true.i372:                               ; preds = %if.else192
  %262 = load i32, i32* %n.i334, align 4, !dbg !16383
  %cmp10.i371 = icmp slt i32 %262, 0, !dbg !16384
  br i1 %cmp10.i371, label %if.then.i375, label %if.end68.i459, !dbg !16385

if.then.i375:                                     ; preds = %land.lhs.true.i372
  %263 = load i32, i32* %re_size_plus8.i333, align 4, !dbg !16386
  %264 = load i32, i32* %re_index.i331, align 4, !dbg !16387
  %265 = load i32, i32* %bits.addr.i328, align 4, !dbg !16388
  %add.i373 = add i32 %264, %265, !dbg !16389
  %cmp12.i374 = icmp ugt i32 %263, %add.i373, !dbg !16390
  br i1 %cmp12.i374, label %cond.true.i377, label %cond.false.i378, !dbg !16391

cond.true.i377:                                   ; preds = %if.then.i375
  %266 = load i32, i32* %re_index.i331, align 4, !dbg !16392
  %267 = load i32, i32* %bits.addr.i328, align 4, !dbg !16393
  %add14.i376 = add i32 %266, %267, !dbg !16394
  br label %cond.end.i414, !dbg !16395

cond.false.i378:                                  ; preds = %if.then.i375
  %268 = load i32, i32* %re_size_plus8.i333, align 4, !dbg !16396
  br label %cond.end.i414, !dbg !16397

cond.end.i414:                                    ; preds = %cond.false.i378, %cond.true.i377
  %cond.i379 = phi i32 [ %add14.i376, %cond.true.i377 ], [ %268, %cond.false.i378 ], !dbg !16398
  store i32 %cond.i379, i32* %re_index.i331, align 4, !dbg !16399
  %269 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i326, align 8, !dbg !16400
  %buffer15.i380 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %269, i32 0, i32 0, !dbg !16401
  %270 = load i8*, i8** %buffer15.i380, align 8, !dbg !16401
  %271 = load i32, i32* %re_index.i331, align 4, !dbg !16402
  %shr16.i381 = lshr i32 %271, 3, !dbg !16403
  %idx.ext17.i382 = zext i32 %shr16.i381 to i64, !dbg !16404
  %add.ptr18.i383 = getelementptr inbounds i8, i8* %270, i64 %idx.ext17.i382, !dbg !16404
  %272 = bitcast i8* %add.ptr18.i383 to %union.unaligned_32*, !dbg !16405
  %l19.i384 = bitcast %union.unaligned_32* %272 to i32*, !dbg !16405
  %273 = load i32, i32* %l19.i384, align 1, !dbg !16405
  store i32 %273, i32* %x.addr.i81.i324, align 4, !dbg !16406
  %274 = load i32, i32* %x.addr.i81.i324, align 4, !dbg !16407
  %shl.i82.i385 = shl i32 %274, 8, !dbg !16408
  %and.i83.i386 = and i32 %shl.i82.i385, 65280, !dbg !16409
  %275 = load i32, i32* %x.addr.i81.i324, align 4, !dbg !16410
  %shr.i84.i387 = lshr i32 %275, 8, !dbg !16411
  %and1.i85.i388 = and i32 %shr.i84.i387, 255, !dbg !16412
  %or.i86.i389 = or i32 %and.i83.i386, %and1.i85.i388, !dbg !16413
  %shl2.i87.i390 = shl i32 %or.i86.i389, 16, !dbg !16414
  %276 = load i32, i32* %x.addr.i81.i324, align 4, !dbg !16415
  %shr3.i88.i391 = lshr i32 %276, 16, !dbg !16416
  %shl4.i89.i392 = shl i32 %shr3.i88.i391, 8, !dbg !16417
  %and5.i90.i393 = and i32 %shl4.i89.i392, 65280, !dbg !16418
  %277 = load i32, i32* %x.addr.i81.i324, align 4, !dbg !16419
  %shr6.i91.i394 = lshr i32 %277, 16, !dbg !16420
  %shr7.i92.i395 = lshr i32 %shr6.i91.i394, 8, !dbg !16421
  %and8.i93.i396 = and i32 %shr7.i92.i395, 255, !dbg !16422
  %or9.i94.i397 = or i32 %and5.i90.i393, %and8.i93.i396, !dbg !16423
  %or10.i95.i398 = or i32 %shl2.i87.i390, %or9.i94.i397, !dbg !16424
  %278 = load i32, i32* %re_index.i331, align 4, !dbg !16425
  %and21.i399 = and i32 %278, 7, !dbg !16426
  %shl22.i400 = shl i32 %or10.i95.i398, %and21.i399, !dbg !16427
  store i32 %shl22.i400, i32* %re_cache.i332, align 4, !dbg !16428
  %279 = load i32, i32* %n.i334, align 4, !dbg !16429
  %sub.i401 = sub nsw i32 0, %279, !dbg !16430
  store i32 %sub.i401, i32* %nb_bits.i335, align 4, !dbg !16431
  %280 = load i32, i32* %re_cache.i332, align 4, !dbg !16432
  %281 = load i32, i32* %nb_bits.i335, align 4, !dbg !16433
  %conv23.i402 = trunc i32 %281 to i8, !dbg !16433
  %call24.i403 = call i32 @NEG_USR32(i32 %280, i8 signext %conv23.i402) #9, !dbg !16434
  %282 = load i32, i32* %code.i330, align 4, !dbg !16435
  %add25.i404 = add i32 %call24.i403, %282, !dbg !16436
  store i32 %add25.i404, i32* %index1.i336, align 4, !dbg !16437
  %283 = load i32, i32* %index1.i336, align 4, !dbg !16438
  %idxprom26.i405 = zext i32 %283 to i64, !dbg !16439
  %284 = load [2 x i16]*, [2 x i16]** %table.addr.i327, align 8, !dbg !16439
  %arrayidx27.i406 = getelementptr inbounds [2 x i16], [2 x i16]* %284, i64 %idxprom26.i405, !dbg !16439
  %arrayidx28.i407 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i406, i64 0, i64 0, !dbg !16439
  %285 = load i16, i16* %arrayidx28.i407, align 2, !dbg !16439
  %conv29.i408 = sext i16 %285 to i32, !dbg !16439
  store i32 %conv29.i408, i32* %code.i330, align 4, !dbg !16440
  %286 = load i32, i32* %index1.i336, align 4, !dbg !16441
  %idxprom30.i409 = zext i32 %286 to i64, !dbg !16442
  %287 = load [2 x i16]*, [2 x i16]** %table.addr.i327, align 8, !dbg !16442
  %arrayidx31.i410 = getelementptr inbounds [2 x i16], [2 x i16]* %287, i64 %idxprom30.i409, !dbg !16442
  %arrayidx32.i411 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i410, i64 0, i64 1, !dbg !16442
  %288 = load i16, i16* %arrayidx32.i411, align 2, !dbg !16442
  %conv33.i412 = sext i16 %288 to i32, !dbg !16442
  store i32 %conv33.i412, i32* %n.i334, align 4, !dbg !16443
  %289 = load i32, i32* %max_depth.addr.i329, align 4, !dbg !16444
  %cmp34.i413 = icmp sgt i32 %289, 2, !dbg !16445
  br i1 %cmp34.i413, label %land.lhs.true36.i416, label %if.end.i458, !dbg !16446

land.lhs.true36.i416:                             ; preds = %cond.end.i414
  %290 = load i32, i32* %n.i334, align 4, !dbg !16447
  %cmp37.i415 = icmp slt i32 %290, 0, !dbg !16448
  br i1 %cmp37.i415, label %if.then39.i419, label %if.end.i458, !dbg !16449

if.then39.i419:                                   ; preds = %land.lhs.true36.i416
  %291 = load i32, i32* %re_size_plus8.i333, align 4, !dbg !16450
  %292 = load i32, i32* %re_index.i331, align 4, !dbg !16451
  %293 = load i32, i32* %nb_bits.i335, align 4, !dbg !16452
  %add40.i417 = add i32 %292, %293, !dbg !16453
  %cmp41.i418 = icmp ugt i32 %291, %add40.i417, !dbg !16454
  br i1 %cmp41.i418, label %cond.true43.i421, label %cond.false45.i422, !dbg !16455

cond.true43.i421:                                 ; preds = %if.then39.i419
  %294 = load i32, i32* %re_index.i331, align 4, !dbg !16456
  %295 = load i32, i32* %nb_bits.i335, align 4, !dbg !16457
  %add44.i420 = add i32 %294, %295, !dbg !16458
  br label %cond.end46.i457, !dbg !16459

cond.false45.i422:                                ; preds = %if.then39.i419
  %296 = load i32, i32* %re_size_plus8.i333, align 4, !dbg !16460
  br label %cond.end46.i457, !dbg !16461

cond.end46.i457:                                  ; preds = %cond.false45.i422, %cond.true43.i421
  %cond47.i423 = phi i32 [ %add44.i420, %cond.true43.i421 ], [ %296, %cond.false45.i422 ], !dbg !16462
  store i32 %cond47.i423, i32* %re_index.i331, align 4, !dbg !16463
  %297 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i326, align 8, !dbg !16464
  %buffer48.i424 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %297, i32 0, i32 0, !dbg !16465
  %298 = load i8*, i8** %buffer48.i424, align 8, !dbg !16465
  %299 = load i32, i32* %re_index.i331, align 4, !dbg !16466
  %shr49.i425 = lshr i32 %299, 3, !dbg !16467
  %idx.ext50.i426 = zext i32 %shr49.i425 to i64, !dbg !16468
  %add.ptr51.i427 = getelementptr inbounds i8, i8* %298, i64 %idx.ext50.i426, !dbg !16468
  %300 = bitcast i8* %add.ptr51.i427 to %union.unaligned_32*, !dbg !16469
  %l52.i428 = bitcast %union.unaligned_32* %300 to i32*, !dbg !16469
  %301 = load i32, i32* %l52.i428, align 1, !dbg !16469
  store i32 %301, i32* %x.addr.i96.i323, align 4, !dbg !16470
  %302 = load i32, i32* %x.addr.i96.i323, align 4, !dbg !16471
  %shl.i97.i429 = shl i32 %302, 8, !dbg !16472
  %and.i98.i430 = and i32 %shl.i97.i429, 65280, !dbg !16473
  %303 = load i32, i32* %x.addr.i96.i323, align 4, !dbg !16474
  %shr.i99.i431 = lshr i32 %303, 8, !dbg !16475
  %and1.i100.i432 = and i32 %shr.i99.i431, 255, !dbg !16476
  %or.i101.i433 = or i32 %and.i98.i430, %and1.i100.i432, !dbg !16477
  %shl2.i102.i434 = shl i32 %or.i101.i433, 16, !dbg !16478
  %304 = load i32, i32* %x.addr.i96.i323, align 4, !dbg !16479
  %shr3.i103.i435 = lshr i32 %304, 16, !dbg !16480
  %shl4.i104.i436 = shl i32 %shr3.i103.i435, 8, !dbg !16481
  %and5.i105.i437 = and i32 %shl4.i104.i436, 65280, !dbg !16482
  %305 = load i32, i32* %x.addr.i96.i323, align 4, !dbg !16483
  %shr6.i106.i438 = lshr i32 %305, 16, !dbg !16484
  %shr7.i107.i439 = lshr i32 %shr6.i106.i438, 8, !dbg !16485
  %and8.i108.i440 = and i32 %shr7.i107.i439, 255, !dbg !16486
  %or9.i109.i441 = or i32 %and5.i105.i437, %and8.i108.i440, !dbg !16487
  %or10.i110.i442 = or i32 %shl2.i102.i434, %or9.i109.i441, !dbg !16488
  %306 = load i32, i32* %re_index.i331, align 4, !dbg !16489
  %and54.i443 = and i32 %306, 7, !dbg !16490
  %shl55.i444 = shl i32 %or10.i110.i442, %and54.i443, !dbg !16491
  store i32 %shl55.i444, i32* %re_cache.i332, align 4, !dbg !16492
  %307 = load i32, i32* %n.i334, align 4, !dbg !16493
  %sub56.i445 = sub nsw i32 0, %307, !dbg !16494
  store i32 %sub56.i445, i32* %nb_bits.i335, align 4, !dbg !16495
  %308 = load i32, i32* %re_cache.i332, align 4, !dbg !16496
  %309 = load i32, i32* %nb_bits.i335, align 4, !dbg !16497
  %conv57.i446 = trunc i32 %309 to i8, !dbg !16497
  %call58.i447 = call i32 @NEG_USR32(i32 %308, i8 signext %conv57.i446) #9, !dbg !16498
  %310 = load i32, i32* %code.i330, align 4, !dbg !16499
  %add59.i448 = add i32 %call58.i447, %310, !dbg !16500
  store i32 %add59.i448, i32* %index1.i336, align 4, !dbg !16501
  %311 = load i32, i32* %index1.i336, align 4, !dbg !16502
  %idxprom60.i449 = zext i32 %311 to i64, !dbg !16503
  %312 = load [2 x i16]*, [2 x i16]** %table.addr.i327, align 8, !dbg !16503
  %arrayidx61.i450 = getelementptr inbounds [2 x i16], [2 x i16]* %312, i64 %idxprom60.i449, !dbg !16503
  %arrayidx62.i451 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i450, i64 0, i64 0, !dbg !16503
  %313 = load i16, i16* %arrayidx62.i451, align 2, !dbg !16503
  %conv63.i452 = sext i16 %313 to i32, !dbg !16503
  store i32 %conv63.i452, i32* %code.i330, align 4, !dbg !16504
  %314 = load i32, i32* %index1.i336, align 4, !dbg !16505
  %idxprom64.i453 = zext i32 %314 to i64, !dbg !16506
  %315 = load [2 x i16]*, [2 x i16]** %table.addr.i327, align 8, !dbg !16506
  %arrayidx65.i454 = getelementptr inbounds [2 x i16], [2 x i16]* %315, i64 %idxprom64.i453, !dbg !16506
  %arrayidx66.i455 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i454, i64 0, i64 1, !dbg !16506
  %316 = load i16, i16* %arrayidx66.i455, align 2, !dbg !16506
  %conv67.i456 = sext i16 %316 to i32, !dbg !16506
  store i32 %conv67.i456, i32* %n.i334, align 4, !dbg !16507
  br label %if.end.i458, !dbg !16508

if.end.i458:                                      ; preds = %cond.end46.i457, %land.lhs.true36.i416, %cond.end.i414
  br label %if.end68.i459, !dbg !16509

if.end68.i459:                                    ; preds = %if.end.i458, %land.lhs.true.i372, %if.else192
  %317 = load i32, i32* %n.i334, align 4, !dbg !16510
  %318 = load i32, i32* %re_cache.i332, align 4, !dbg !16511
  %shl70.i460 = shl i32 %318, %317, !dbg !16511
  store i32 %shl70.i460, i32* %re_cache.i332, align 4, !dbg !16511
  %319 = load i32, i32* %re_size_plus8.i333, align 4, !dbg !16512
  %320 = load i32, i32* %re_index.i331, align 4, !dbg !16513
  %321 = load i32, i32* %n.i334, align 4, !dbg !16514
  %add71.i461 = add i32 %320, %321, !dbg !16515
  %cmp72.i462 = icmp ugt i32 %319, %add71.i461, !dbg !16516
  br i1 %cmp72.i462, label %cond.true74.i464, label %cond.false76.i465, !dbg !16517

cond.true74.i464:                                 ; preds = %if.end68.i459
  %322 = load i32, i32* %re_index.i331, align 4, !dbg !16518
  %323 = load i32, i32* %n.i334, align 4, !dbg !16519
  %add75.i463 = add i32 %322, %323, !dbg !16520
  br label %get_vlc2.exit468, !dbg !16521

cond.false76.i465:                                ; preds = %if.end68.i459
  %324 = load i32, i32* %re_size_plus8.i333, align 4, !dbg !16522
  br label %get_vlc2.exit468, !dbg !16523

get_vlc2.exit468:                                 ; preds = %cond.true74.i464, %cond.false76.i465
  %cond78.i466 = phi i32 [ %add75.i463, %cond.true74.i464 ], [ %324, %cond.false76.i465 ], !dbg !16524
  store i32 %cond78.i466, i32* %re_index.i331, align 4, !dbg !16525
  %325 = load i32, i32* %re_index.i331, align 4, !dbg !16526
  %326 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i326, align 8, !dbg !16527
  %index80.i467 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %326, i32 0, i32 2, !dbg !16528
  store i32 %325, i32* %index80.i467, align 8, !dbg !16529
  %327 = load i32, i32* %code.i330, align 4, !dbg !16530
  %add194 = add nsw i32 %327, 24, !dbg !16531
  %328 = load i32, i32* %sb, align 4, !dbg !16532
  %idxprom195 = sext i32 %328 to i64, !dbg !16533
  %329 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16533
  %arrayidx196 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %329, i64 %idxprom195, !dbg !16533
  %start_index197 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx196, i32 0, i32 3, !dbg !16534
  %330 = load i32, i32* %start_index197, align 4, !dbg !16534
  %idxprom198 = sext i32 %330 to i64, !dbg !16535
  %331 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16535
  %waves_info199 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %331, i32 0, i32 14, !dbg !16536
  %332 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info199, align 8, !dbg !16536
  %waves200 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %332, i32 0, i32 7, !dbg !16537
  %arrayidx201 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves200, i64 0, i64 %idxprom198, !dbg !16535
  %amp_sf202 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx201, i32 0, i32 1, !dbg !16538
  store i32 %add194, i32* %amp_sf202, align 4, !dbg !16539
  br label %if.end203

if.end203:                                        ; preds = %get_vlc2.exit468, %for.end191
  br label %for.inc204, !dbg !16540

for.inc204:                                       ; preds = %if.end203, %if.then166
  %333 = load i32, i32* %sb, align 4, !dbg !16541
  %inc205 = add nsw i32 %333, 1, !dbg !16541
  store i32 %inc205, i32* %sb, align 4, !dbg !16541
  br label %for.cond153, !dbg !16543, !llvm.loop !16544

for.end206:                                       ; preds = %for.cond153
  br label %sw.epilog, !dbg !16546

sw.bb207:                                         ; preds = %if.end100
  store i32 0, i32* %sb, align 4, !dbg !16547
  br label %for.cond208, !dbg !16548

for.cond208:                                      ; preds = %for.inc266, %sw.bb207
  %334 = load i32, i32* %sb, align 4, !dbg !16549
  %335 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16551
  %waves_info209 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %335, i32 0, i32 14, !dbg !16552
  %336 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info209, align 8, !dbg !16552
  %num_tone_bands210 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %336, i32 0, i32 2, !dbg !16553
  %337 = load i32, i32* %num_tone_bands210, align 4, !dbg !16553
  %cmp211 = icmp slt i32 %334, %337, !dbg !16554
  br i1 %cmp211, label %for.body212, label %for.end268, !dbg !16555

for.body212:                                      ; preds = %for.cond208
  %338 = load i32, i32* %sb, align 4, !dbg !16556
  %idxprom213 = sext i32 %338 to i64, !dbg !16558
  %339 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !16558
  %arrayidx214 = getelementptr inbounds i32, i32* %339, i64 %idxprom213, !dbg !16558
  %340 = load i32, i32* %arrayidx214, align 4, !dbg !16558
  %tobool215 = icmp ne i32 %340, 0, !dbg !16558
  br i1 %tobool215, label %lor.lhs.false216, label %if.then221, !dbg !16559

lor.lhs.false216:                                 ; preds = %for.body212
  %341 = load i32, i32* %sb, align 4, !dbg !16560
  %idxprom217 = sext i32 %341 to i64, !dbg !16562
  %342 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16562
  %arrayidx218 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %342, i64 %idxprom217, !dbg !16562
  %num_wavs219 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx218, i32 0, i32 2, !dbg !16563
  %343 = load i32, i32* %num_wavs219, align 4, !dbg !16563
  %tobool220 = icmp ne i32 %343, 0, !dbg !16562
  br i1 %tobool220, label %if.end222, label %if.then221, !dbg !16564

if.then221:                                       ; preds = %lor.lhs.false216, %for.body212
  br label %for.inc266, !dbg !16565

if.end222:                                        ; preds = %lor.lhs.false216
  store i32 0, i32* %i, align 4, !dbg !16566
  br label %for.cond223, !dbg !16567

for.cond223:                                      ; preds = %for.inc263, %if.end222
  %344 = load i32, i32* %i, align 4, !dbg !16568
  %345 = load i32, i32* %sb, align 4, !dbg !16570
  %idxprom224 = sext i32 %345 to i64, !dbg !16571
  %346 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16571
  %arrayidx225 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %346, i64 %idxprom224, !dbg !16571
  %num_wavs226 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx225, i32 0, i32 2, !dbg !16572
  %347 = load i32, i32* %num_wavs226, align 4, !dbg !16572
  %cmp227 = icmp slt i32 %344, %347, !dbg !16573
  br i1 %cmp227, label %for.body228, label %for.end265, !dbg !16574

for.body228:                                      ; preds = %for.cond223
  %348 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16575
  %349 = load [2 x i16]*, [2 x i16]** getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 5, i32 1), align 8, !dbg !16576
  %350 = load i32, i32* getelementptr inbounds ([7 x %struct.VLC], [7 x %struct.VLC]* @tone_vlc_tabs, i64 0, i64 5, i32 0), align 8, !dbg !16577
  store %struct.GetBitContext* %348, %struct.GetBitContext** %s.addr.i472, align 8, !dbg !16578
  store [2 x i16]* %349, [2 x i16]** %table.addr.i473, align 8, !dbg !16578
  store i32 %350, i32* %bits.addr.i474, align 4, !dbg !16578
  store i32 1, i32* %max_depth.addr.i475, align 4, !dbg !16578
  %351 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i472, align 8, !dbg !16579
  %index.i483 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %351, i32 0, i32 2, !dbg !16580
  %352 = load i32, i32* %index.i483, align 8, !dbg !16580
  store i32 %352, i32* %re_index.i477, align 4, !dbg !15743
  %353 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i472, align 8, !dbg !16581
  %size_in_bits_plus8.i484 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %353, i32 0, i32 4, !dbg !16582
  %354 = load i32, i32* %size_in_bits_plus8.i484, align 8, !dbg !16582
  store i32 %354, i32* %re_size_plus8.i479, align 4, !dbg !15745
  %355 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i472, align 8, !dbg !16583
  %buffer.i485 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %355, i32 0, i32 0, !dbg !16584
  %356 = load i8*, i8** %buffer.i485, align 8, !dbg !16584
  %357 = load i32, i32* %re_index.i477, align 4, !dbg !16585
  %shr.i486 = lshr i32 %357, 3, !dbg !16586
  %idx.ext.i487 = zext i32 %shr.i486 to i64, !dbg !16587
  %add.ptr.i488 = getelementptr inbounds i8, i8* %356, i64 %idx.ext.i487, !dbg !16587
  %358 = bitcast i8* %add.ptr.i488 to %union.unaligned_32*, !dbg !16588
  %l.i489 = bitcast %union.unaligned_32* %358 to i32*, !dbg !16588
  %359 = load i32, i32* %l.i489, align 1, !dbg !16588
  store i32 %359, i32* %x.addr.i.i471, align 4, !dbg !16589
  %360 = load i32, i32* %x.addr.i.i471, align 4, !dbg !16590
  %shl.i.i490 = shl i32 %360, 8, !dbg !16591
  %and.i.i491 = and i32 %shl.i.i490, 65280, !dbg !16592
  %361 = load i32, i32* %x.addr.i.i471, align 4, !dbg !16593
  %shr.i.i492 = lshr i32 %361, 8, !dbg !16594
  %and1.i.i493 = and i32 %shr.i.i492, 255, !dbg !16595
  %or.i.i494 = or i32 %and.i.i491, %and1.i.i493, !dbg !16596
  %shl2.i.i495 = shl i32 %or.i.i494, 16, !dbg !16597
  %362 = load i32, i32* %x.addr.i.i471, align 4, !dbg !16598
  %shr3.i.i496 = lshr i32 %362, 16, !dbg !16599
  %shl4.i.i497 = shl i32 %shr3.i.i496, 8, !dbg !16600
  %and5.i.i498 = and i32 %shl4.i.i497, 65280, !dbg !16601
  %363 = load i32, i32* %x.addr.i.i471, align 4, !dbg !16602
  %shr6.i.i499 = lshr i32 %363, 16, !dbg !16603
  %shr7.i.i500 = lshr i32 %shr6.i.i499, 8, !dbg !16604
  %and8.i.i501 = and i32 %shr7.i.i500, 255, !dbg !16605
  %or9.i.i502 = or i32 %and5.i.i498, %and8.i.i501, !dbg !16606
  %or10.i.i503 = or i32 %shl2.i.i495, %or9.i.i502, !dbg !16607
  %364 = load i32, i32* %re_index.i477, align 4, !dbg !16608
  %and.i504 = and i32 %364, 7, !dbg !16609
  %shl.i505 = shl i32 %or10.i.i503, %and.i504, !dbg !16610
  store i32 %shl.i505, i32* %re_cache.i478, align 4, !dbg !16611
  %365 = load i32, i32* %re_cache.i478, align 4, !dbg !16612
  %366 = load i32, i32* %bits.addr.i474, align 4, !dbg !16613
  %conv.i506 = trunc i32 %366 to i8, !dbg !16613
  %call2.i507 = call i32 @NEG_USR32(i32 %365, i8 signext %conv.i506) #9, !dbg !16614
  store i32 %call2.i507, i32* %index1.i482, align 4, !dbg !16615
  %367 = load i32, i32* %index1.i482, align 4, !dbg !16616
  %idxprom.i508 = zext i32 %367 to i64, !dbg !16617
  %368 = load [2 x i16]*, [2 x i16]** %table.addr.i473, align 8, !dbg !16617
  %arrayidx.i509 = getelementptr inbounds [2 x i16], [2 x i16]* %368, i64 %idxprom.i508, !dbg !16617
  %arrayidx3.i510 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i509, i64 0, i64 0, !dbg !16617
  %369 = load i16, i16* %arrayidx3.i510, align 2, !dbg !16617
  %conv4.i511 = sext i16 %369 to i32, !dbg !16617
  store i32 %conv4.i511, i32* %code.i476, align 4, !dbg !16618
  %370 = load i32, i32* %index1.i482, align 4, !dbg !16619
  %idxprom5.i512 = zext i32 %370 to i64, !dbg !16620
  %371 = load [2 x i16]*, [2 x i16]** %table.addr.i473, align 8, !dbg !16620
  %arrayidx6.i513 = getelementptr inbounds [2 x i16], [2 x i16]* %371, i64 %idxprom5.i512, !dbg !16620
  %arrayidx7.i514 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i513, i64 0, i64 1, !dbg !16620
  %372 = load i16, i16* %arrayidx7.i514, align 2, !dbg !16620
  %conv8.i515 = sext i16 %372 to i32, !dbg !16620
  store i32 %conv8.i515, i32* %n.i480, align 4, !dbg !16621
  %373 = load i32, i32* %max_depth.addr.i475, align 4, !dbg !16622
  %cmp.i516 = icmp sgt i32 %373, 1, !dbg !16623
  br i1 %cmp.i516, label %land.lhs.true.i518, label %if.end68.i605, !dbg !16624

land.lhs.true.i518:                               ; preds = %for.body228
  %374 = load i32, i32* %n.i480, align 4, !dbg !16625
  %cmp10.i517 = icmp slt i32 %374, 0, !dbg !16626
  br i1 %cmp10.i517, label %if.then.i521, label %if.end68.i605, !dbg !16627

if.then.i521:                                     ; preds = %land.lhs.true.i518
  %375 = load i32, i32* %re_size_plus8.i479, align 4, !dbg !16628
  %376 = load i32, i32* %re_index.i477, align 4, !dbg !16629
  %377 = load i32, i32* %bits.addr.i474, align 4, !dbg !16630
  %add.i519 = add i32 %376, %377, !dbg !16631
  %cmp12.i520 = icmp ugt i32 %375, %add.i519, !dbg !16632
  br i1 %cmp12.i520, label %cond.true.i523, label %cond.false.i524, !dbg !16633

cond.true.i523:                                   ; preds = %if.then.i521
  %378 = load i32, i32* %re_index.i477, align 4, !dbg !16634
  %379 = load i32, i32* %bits.addr.i474, align 4, !dbg !16635
  %add14.i522 = add i32 %378, %379, !dbg !16636
  br label %cond.end.i560, !dbg !16637

cond.false.i524:                                  ; preds = %if.then.i521
  %380 = load i32, i32* %re_size_plus8.i479, align 4, !dbg !16638
  br label %cond.end.i560, !dbg !16639

cond.end.i560:                                    ; preds = %cond.false.i524, %cond.true.i523
  %cond.i525 = phi i32 [ %add14.i522, %cond.true.i523 ], [ %380, %cond.false.i524 ], !dbg !16640
  store i32 %cond.i525, i32* %re_index.i477, align 4, !dbg !16641
  %381 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i472, align 8, !dbg !16642
  %buffer15.i526 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %381, i32 0, i32 0, !dbg !16643
  %382 = load i8*, i8** %buffer15.i526, align 8, !dbg !16643
  %383 = load i32, i32* %re_index.i477, align 4, !dbg !16644
  %shr16.i527 = lshr i32 %383, 3, !dbg !16645
  %idx.ext17.i528 = zext i32 %shr16.i527 to i64, !dbg !16646
  %add.ptr18.i529 = getelementptr inbounds i8, i8* %382, i64 %idx.ext17.i528, !dbg !16646
  %384 = bitcast i8* %add.ptr18.i529 to %union.unaligned_32*, !dbg !16647
  %l19.i530 = bitcast %union.unaligned_32* %384 to i32*, !dbg !16647
  %385 = load i32, i32* %l19.i530, align 1, !dbg !16647
  store i32 %385, i32* %x.addr.i81.i470, align 4, !dbg !16648
  %386 = load i32, i32* %x.addr.i81.i470, align 4, !dbg !16649
  %shl.i82.i531 = shl i32 %386, 8, !dbg !16650
  %and.i83.i532 = and i32 %shl.i82.i531, 65280, !dbg !16651
  %387 = load i32, i32* %x.addr.i81.i470, align 4, !dbg !16652
  %shr.i84.i533 = lshr i32 %387, 8, !dbg !16653
  %and1.i85.i534 = and i32 %shr.i84.i533, 255, !dbg !16654
  %or.i86.i535 = or i32 %and.i83.i532, %and1.i85.i534, !dbg !16655
  %shl2.i87.i536 = shl i32 %or.i86.i535, 16, !dbg !16656
  %388 = load i32, i32* %x.addr.i81.i470, align 4, !dbg !16657
  %shr3.i88.i537 = lshr i32 %388, 16, !dbg !16658
  %shl4.i89.i538 = shl i32 %shr3.i88.i537, 8, !dbg !16659
  %and5.i90.i539 = and i32 %shl4.i89.i538, 65280, !dbg !16660
  %389 = load i32, i32* %x.addr.i81.i470, align 4, !dbg !16661
  %shr6.i91.i540 = lshr i32 %389, 16, !dbg !16662
  %shr7.i92.i541 = lshr i32 %shr6.i91.i540, 8, !dbg !16663
  %and8.i93.i542 = and i32 %shr7.i92.i541, 255, !dbg !16664
  %or9.i94.i543 = or i32 %and5.i90.i539, %and8.i93.i542, !dbg !16665
  %or10.i95.i544 = or i32 %shl2.i87.i536, %or9.i94.i543, !dbg !16666
  %390 = load i32, i32* %re_index.i477, align 4, !dbg !16667
  %and21.i545 = and i32 %390, 7, !dbg !16668
  %shl22.i546 = shl i32 %or10.i95.i544, %and21.i545, !dbg !16669
  store i32 %shl22.i546, i32* %re_cache.i478, align 4, !dbg !16670
  %391 = load i32, i32* %n.i480, align 4, !dbg !16671
  %sub.i547 = sub nsw i32 0, %391, !dbg !16672
  store i32 %sub.i547, i32* %nb_bits.i481, align 4, !dbg !16673
  %392 = load i32, i32* %re_cache.i478, align 4, !dbg !16674
  %393 = load i32, i32* %nb_bits.i481, align 4, !dbg !16675
  %conv23.i548 = trunc i32 %393 to i8, !dbg !16675
  %call24.i549 = call i32 @NEG_USR32(i32 %392, i8 signext %conv23.i548) #9, !dbg !16676
  %394 = load i32, i32* %code.i476, align 4, !dbg !16677
  %add25.i550 = add i32 %call24.i549, %394, !dbg !16678
  store i32 %add25.i550, i32* %index1.i482, align 4, !dbg !16679
  %395 = load i32, i32* %index1.i482, align 4, !dbg !16680
  %idxprom26.i551 = zext i32 %395 to i64, !dbg !16681
  %396 = load [2 x i16]*, [2 x i16]** %table.addr.i473, align 8, !dbg !16681
  %arrayidx27.i552 = getelementptr inbounds [2 x i16], [2 x i16]* %396, i64 %idxprom26.i551, !dbg !16681
  %arrayidx28.i553 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i552, i64 0, i64 0, !dbg !16681
  %397 = load i16, i16* %arrayidx28.i553, align 2, !dbg !16681
  %conv29.i554 = sext i16 %397 to i32, !dbg !16681
  store i32 %conv29.i554, i32* %code.i476, align 4, !dbg !16682
  %398 = load i32, i32* %index1.i482, align 4, !dbg !16683
  %idxprom30.i555 = zext i32 %398 to i64, !dbg !16684
  %399 = load [2 x i16]*, [2 x i16]** %table.addr.i473, align 8, !dbg !16684
  %arrayidx31.i556 = getelementptr inbounds [2 x i16], [2 x i16]* %399, i64 %idxprom30.i555, !dbg !16684
  %arrayidx32.i557 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i556, i64 0, i64 1, !dbg !16684
  %400 = load i16, i16* %arrayidx32.i557, align 2, !dbg !16684
  %conv33.i558 = sext i16 %400 to i32, !dbg !16684
  store i32 %conv33.i558, i32* %n.i480, align 4, !dbg !16685
  %401 = load i32, i32* %max_depth.addr.i475, align 4, !dbg !16686
  %cmp34.i559 = icmp sgt i32 %401, 2, !dbg !16687
  br i1 %cmp34.i559, label %land.lhs.true36.i562, label %if.end.i604, !dbg !16688

land.lhs.true36.i562:                             ; preds = %cond.end.i560
  %402 = load i32, i32* %n.i480, align 4, !dbg !16689
  %cmp37.i561 = icmp slt i32 %402, 0, !dbg !16690
  br i1 %cmp37.i561, label %if.then39.i565, label %if.end.i604, !dbg !16691

if.then39.i565:                                   ; preds = %land.lhs.true36.i562
  %403 = load i32, i32* %re_size_plus8.i479, align 4, !dbg !16692
  %404 = load i32, i32* %re_index.i477, align 4, !dbg !16693
  %405 = load i32, i32* %nb_bits.i481, align 4, !dbg !16694
  %add40.i563 = add i32 %404, %405, !dbg !16695
  %cmp41.i564 = icmp ugt i32 %403, %add40.i563, !dbg !16696
  br i1 %cmp41.i564, label %cond.true43.i567, label %cond.false45.i568, !dbg !16697

cond.true43.i567:                                 ; preds = %if.then39.i565
  %406 = load i32, i32* %re_index.i477, align 4, !dbg !16698
  %407 = load i32, i32* %nb_bits.i481, align 4, !dbg !16699
  %add44.i566 = add i32 %406, %407, !dbg !16700
  br label %cond.end46.i603, !dbg !16701

cond.false45.i568:                                ; preds = %if.then39.i565
  %408 = load i32, i32* %re_size_plus8.i479, align 4, !dbg !16702
  br label %cond.end46.i603, !dbg !16703

cond.end46.i603:                                  ; preds = %cond.false45.i568, %cond.true43.i567
  %cond47.i569 = phi i32 [ %add44.i566, %cond.true43.i567 ], [ %408, %cond.false45.i568 ], !dbg !16704
  store i32 %cond47.i569, i32* %re_index.i477, align 4, !dbg !16705
  %409 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i472, align 8, !dbg !16706
  %buffer48.i570 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %409, i32 0, i32 0, !dbg !16707
  %410 = load i8*, i8** %buffer48.i570, align 8, !dbg !16707
  %411 = load i32, i32* %re_index.i477, align 4, !dbg !16708
  %shr49.i571 = lshr i32 %411, 3, !dbg !16709
  %idx.ext50.i572 = zext i32 %shr49.i571 to i64, !dbg !16710
  %add.ptr51.i573 = getelementptr inbounds i8, i8* %410, i64 %idx.ext50.i572, !dbg !16710
  %412 = bitcast i8* %add.ptr51.i573 to %union.unaligned_32*, !dbg !16711
  %l52.i574 = bitcast %union.unaligned_32* %412 to i32*, !dbg !16711
  %413 = load i32, i32* %l52.i574, align 1, !dbg !16711
  store i32 %413, i32* %x.addr.i96.i469, align 4, !dbg !16712
  %414 = load i32, i32* %x.addr.i96.i469, align 4, !dbg !16713
  %shl.i97.i575 = shl i32 %414, 8, !dbg !16714
  %and.i98.i576 = and i32 %shl.i97.i575, 65280, !dbg !16715
  %415 = load i32, i32* %x.addr.i96.i469, align 4, !dbg !16716
  %shr.i99.i577 = lshr i32 %415, 8, !dbg !16717
  %and1.i100.i578 = and i32 %shr.i99.i577, 255, !dbg !16718
  %or.i101.i579 = or i32 %and.i98.i576, %and1.i100.i578, !dbg !16719
  %shl2.i102.i580 = shl i32 %or.i101.i579, 16, !dbg !16720
  %416 = load i32, i32* %x.addr.i96.i469, align 4, !dbg !16721
  %shr3.i103.i581 = lshr i32 %416, 16, !dbg !16722
  %shl4.i104.i582 = shl i32 %shr3.i103.i581, 8, !dbg !16723
  %and5.i105.i583 = and i32 %shl4.i104.i582, 65280, !dbg !16724
  %417 = load i32, i32* %x.addr.i96.i469, align 4, !dbg !16725
  %shr6.i106.i584 = lshr i32 %417, 16, !dbg !16726
  %shr7.i107.i585 = lshr i32 %shr6.i106.i584, 8, !dbg !16727
  %and8.i108.i586 = and i32 %shr7.i107.i585, 255, !dbg !16728
  %or9.i109.i587 = or i32 %and5.i105.i583, %and8.i108.i586, !dbg !16729
  %or10.i110.i588 = or i32 %shl2.i102.i580, %or9.i109.i587, !dbg !16730
  %418 = load i32, i32* %re_index.i477, align 4, !dbg !16731
  %and54.i589 = and i32 %418, 7, !dbg !16732
  %shl55.i590 = shl i32 %or10.i110.i588, %and54.i589, !dbg !16733
  store i32 %shl55.i590, i32* %re_cache.i478, align 4, !dbg !16734
  %419 = load i32, i32* %n.i480, align 4, !dbg !16735
  %sub56.i591 = sub nsw i32 0, %419, !dbg !16736
  store i32 %sub56.i591, i32* %nb_bits.i481, align 4, !dbg !16737
  %420 = load i32, i32* %re_cache.i478, align 4, !dbg !16738
  %421 = load i32, i32* %nb_bits.i481, align 4, !dbg !16739
  %conv57.i592 = trunc i32 %421 to i8, !dbg !16739
  %call58.i593 = call i32 @NEG_USR32(i32 %420, i8 signext %conv57.i592) #9, !dbg !16740
  %422 = load i32, i32* %code.i476, align 4, !dbg !16741
  %add59.i594 = add i32 %call58.i593, %422, !dbg !16742
  store i32 %add59.i594, i32* %index1.i482, align 4, !dbg !16743
  %423 = load i32, i32* %index1.i482, align 4, !dbg !16744
  %idxprom60.i595 = zext i32 %423 to i64, !dbg !16745
  %424 = load [2 x i16]*, [2 x i16]** %table.addr.i473, align 8, !dbg !16745
  %arrayidx61.i596 = getelementptr inbounds [2 x i16], [2 x i16]* %424, i64 %idxprom60.i595, !dbg !16745
  %arrayidx62.i597 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i596, i64 0, i64 0, !dbg !16745
  %425 = load i16, i16* %arrayidx62.i597, align 2, !dbg !16745
  %conv63.i598 = sext i16 %425 to i32, !dbg !16745
  store i32 %conv63.i598, i32* %code.i476, align 4, !dbg !16746
  %426 = load i32, i32* %index1.i482, align 4, !dbg !16747
  %idxprom64.i599 = zext i32 %426 to i64, !dbg !16748
  %427 = load [2 x i16]*, [2 x i16]** %table.addr.i473, align 8, !dbg !16748
  %arrayidx65.i600 = getelementptr inbounds [2 x i16], [2 x i16]* %427, i64 %idxprom64.i599, !dbg !16748
  %arrayidx66.i601 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i600, i64 0, i64 1, !dbg !16748
  %428 = load i16, i16* %arrayidx66.i601, align 2, !dbg !16748
  %conv67.i602 = sext i16 %428 to i32, !dbg !16748
  store i32 %conv67.i602, i32* %n.i480, align 4, !dbg !16749
  br label %if.end.i604, !dbg !16750

if.end.i604:                                      ; preds = %cond.end46.i603, %land.lhs.true36.i562, %cond.end.i560
  br label %if.end68.i605, !dbg !16751

if.end68.i605:                                    ; preds = %if.end.i604, %land.lhs.true.i518, %for.body228
  %429 = load i32, i32* %n.i480, align 4, !dbg !16752
  %430 = load i32, i32* %re_cache.i478, align 4, !dbg !16753
  %shl70.i606 = shl i32 %430, %429, !dbg !16753
  store i32 %shl70.i606, i32* %re_cache.i478, align 4, !dbg !16753
  %431 = load i32, i32* %re_size_plus8.i479, align 4, !dbg !16754
  %432 = load i32, i32* %re_index.i477, align 4, !dbg !16755
  %433 = load i32, i32* %n.i480, align 4, !dbg !16756
  %add71.i607 = add i32 %432, %433, !dbg !16757
  %cmp72.i608 = icmp ugt i32 %431, %add71.i607, !dbg !16758
  br i1 %cmp72.i608, label %cond.true74.i610, label %cond.false76.i611, !dbg !16759

cond.true74.i610:                                 ; preds = %if.end68.i605
  %434 = load i32, i32* %re_index.i477, align 4, !dbg !16760
  %435 = load i32, i32* %n.i480, align 4, !dbg !16761
  %add75.i609 = add i32 %434, %435, !dbg !16762
  br label %get_vlc2.exit614, !dbg !16763

cond.false76.i611:                                ; preds = %if.end68.i605
  %436 = load i32, i32* %re_size_plus8.i479, align 4, !dbg !16764
  br label %get_vlc2.exit614, !dbg !16765

get_vlc2.exit614:                                 ; preds = %cond.true74.i610, %cond.false76.i611
  %cond78.i612 = phi i32 [ %add75.i609, %cond.true74.i610 ], [ %436, %cond.false76.i611 ], !dbg !16766
  store i32 %cond78.i612, i32* %re_index.i477, align 4, !dbg !16767
  %437 = load i32, i32* %re_index.i477, align 4, !dbg !16768
  %438 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i472, align 8, !dbg !16769
  %index80.i613 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %438, i32 0, i32 2, !dbg !16770
  store i32 %437, i32* %index80.i613, align 8, !dbg !16771
  %439 = load i32, i32* %code.i476, align 4, !dbg !16772
  store i32 %439, i32* %delta, align 4, !dbg !16773
  %440 = load i32, i32* %delta, align 4, !dbg !16774
  %call230 = call i32 @sign_extend(i32 %440, i32 5) #1, !dbg !16775
  store i32 %call230, i32* %delta, align 4, !dbg !16776
  %441 = load i32, i32* %sb, align 4, !dbg !16777
  %idxprom231 = sext i32 %441 to i64, !dbg !16778
  %442 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16778
  %arrayidx232 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %442, i64 %idxprom231, !dbg !16778
  %start_index233 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx232, i32 0, i32 3, !dbg !16779
  %443 = load i32, i32* %start_index233, align 4, !dbg !16779
  %444 = load i32, i32* %i, align 4, !dbg !16780
  %add234 = add nsw i32 %443, %444, !dbg !16781
  %idxprom235 = sext i32 %add234 to i64, !dbg !16782
  %arrayidx236 = getelementptr inbounds [48 x i32], [48 x i32]* %refwaves, i64 0, i64 %idxprom235, !dbg !16782
  %445 = load i32, i32* %arrayidx236, align 4, !dbg !16782
  %cmp237 = icmp sge i32 %445, 0, !dbg !16783
  br i1 %cmp237, label %cond.true238, label %cond.false250, !dbg !16782

cond.true238:                                     ; preds = %get_vlc2.exit614
  %446 = load i32, i32* %sb, align 4, !dbg !16784
  %idxprom239 = sext i32 %446 to i64, !dbg !16785
  %447 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16785
  %arrayidx240 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %447, i64 %idxprom239, !dbg !16785
  %start_index241 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx240, i32 0, i32 3, !dbg !16786
  %448 = load i32, i32* %start_index241, align 4, !dbg !16786
  %449 = load i32, i32* %i, align 4, !dbg !16787
  %add242 = add nsw i32 %448, %449, !dbg !16788
  %idxprom243 = sext i32 %add242 to i64, !dbg !16789
  %arrayidx244 = getelementptr inbounds [48 x i32], [48 x i32]* %refwaves, i64 0, i64 %idxprom243, !dbg !16789
  %450 = load i32, i32* %arrayidx244, align 4, !dbg !16789
  %idxprom245 = sext i32 %450 to i64, !dbg !16790
  %451 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16790
  %waves_info246 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %451, i32 0, i32 14, !dbg !16791
  %452 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info246, align 8, !dbg !16791
  %waves247 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %452, i32 0, i32 7, !dbg !16792
  %arrayidx248 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves247, i64 0, i64 %idxprom245, !dbg !16790
  %amp_sf249 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx248, i32 0, i32 1, !dbg !16793
  %453 = load i32, i32* %amp_sf249, align 4, !dbg !16793
  br label %cond.end251, !dbg !16794

cond.false250:                                    ; preds = %get_vlc2.exit614
  br label %cond.end251, !dbg !16796

cond.end251:                                      ; preds = %cond.false250, %cond.true238
  %cond252 = phi i32 [ %453, %cond.true238 ], [ 34, %cond.false250 ], !dbg !16798
  store i32 %cond252, i32* %pred, align 4, !dbg !16800
  %454 = load i32, i32* %pred, align 4, !dbg !16801
  %455 = load i32, i32* %delta, align 4, !dbg !16802
  %add253 = add nsw i32 %454, %455, !dbg !16803
  %and = and i32 %add253, 63, !dbg !16804
  %456 = load i32, i32* %sb, align 4, !dbg !16805
  %idxprom254 = sext i32 %456 to i64, !dbg !16806
  %457 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16806
  %arrayidx255 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %457, i64 %idxprom254, !dbg !16806
  %start_index256 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx255, i32 0, i32 3, !dbg !16807
  %458 = load i32, i32* %start_index256, align 4, !dbg !16807
  %459 = load i32, i32* %i, align 4, !dbg !16808
  %add257 = add nsw i32 %458, %459, !dbg !16809
  %idxprom258 = sext i32 %add257 to i64, !dbg !16810
  %460 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16810
  %waves_info259 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %460, i32 0, i32 14, !dbg !16811
  %461 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info259, align 8, !dbg !16811
  %waves260 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %461, i32 0, i32 7, !dbg !16812
  %arrayidx261 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves260, i64 0, i64 %idxprom258, !dbg !16810
  %amp_sf262 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx261, i32 0, i32 1, !dbg !16813
  store i32 %and, i32* %amp_sf262, align 4, !dbg !16814
  br label %for.inc263, !dbg !16815

for.inc263:                                       ; preds = %cond.end251
  %462 = load i32, i32* %i, align 4, !dbg !16816
  %inc264 = add nsw i32 %462, 1, !dbg !16816
  store i32 %inc264, i32* %i, align 4, !dbg !16816
  br label %for.cond223, !dbg !16818, !llvm.loop !16819

for.end265:                                       ; preds = %for.cond223
  br label %for.inc266, !dbg !16821

for.inc266:                                       ; preds = %for.end265, %if.then221
  %463 = load i32, i32* %sb, align 4, !dbg !16822
  %inc267 = add nsw i32 %463, 1, !dbg !16822
  store i32 %inc267, i32* %sb, align 4, !dbg !16822
  br label %for.cond208, !dbg !16824, !llvm.loop !16825

for.end268:                                       ; preds = %for.cond208
  br label %sw.epilog, !dbg !16827

sw.bb269:                                         ; preds = %if.end100
  store i32 0, i32* %sb, align 4, !dbg !16828
  br label %for.cond270, !dbg !16830

for.cond270:                                      ; preds = %for.inc320, %sw.bb269
  %464 = load i32, i32* %sb, align 4, !dbg !16831
  %465 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16834
  %waves_info271 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %465, i32 0, i32 14, !dbg !16835
  %466 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info271, align 8, !dbg !16835
  %num_tone_bands272 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %466, i32 0, i32 2, !dbg !16836
  %467 = load i32, i32* %num_tone_bands272, align 4, !dbg !16836
  %cmp273 = icmp slt i32 %464, %467, !dbg !16837
  br i1 %cmp273, label %for.body274, label %for.end322, !dbg !16838

for.body274:                                      ; preds = %for.cond270
  %468 = load i32, i32* %sb, align 4, !dbg !16839
  %idxprom275 = sext i32 %468 to i64, !dbg !16842
  %469 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !16842
  %arrayidx276 = getelementptr inbounds i32, i32* %469, i64 %idxprom275, !dbg !16842
  %470 = load i32, i32* %arrayidx276, align 4, !dbg !16842
  %tobool277 = icmp ne i32 %470, 0, !dbg !16842
  br i1 %tobool277, label %if.end279, label %if.then278, !dbg !16843

if.then278:                                       ; preds = %for.body274
  br label %for.inc320, !dbg !16844

if.end279:                                        ; preds = %for.body274
  store i32 0, i32* %i, align 4, !dbg !16845
  br label %for.cond280, !dbg !16847

for.cond280:                                      ; preds = %for.inc317, %if.end279
  %471 = load i32, i32* %i, align 4, !dbg !16848
  %472 = load i32, i32* %sb, align 4, !dbg !16851
  %idxprom281 = sext i32 %472 to i64, !dbg !16852
  %473 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16852
  %arrayidx282 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %473, i64 %idxprom281, !dbg !16852
  %num_wavs283 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx282, i32 0, i32 2, !dbg !16853
  %474 = load i32, i32* %num_wavs283, align 4, !dbg !16853
  %cmp284 = icmp slt i32 %471, %474, !dbg !16854
  br i1 %cmp284, label %for.body285, label %for.end319, !dbg !16855

for.body285:                                      ; preds = %for.cond280
  %475 = load i32, i32* %sb, align 4, !dbg !16856
  %idxprom286 = sext i32 %475 to i64, !dbg !16857
  %476 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16857
  %arrayidx287 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %476, i64 %idxprom286, !dbg !16857
  %start_index288 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx287, i32 0, i32 3, !dbg !16858
  %477 = load i32, i32* %start_index288, align 4, !dbg !16858
  %478 = load i32, i32* %i, align 4, !dbg !16859
  %add289 = add nsw i32 %477, %478, !dbg !16860
  %idxprom290 = sext i32 %add289 to i64, !dbg !16861
  %arrayidx291 = getelementptr inbounds [48 x i32], [48 x i32]* %refwaves, i64 0, i64 %idxprom290, !dbg !16861
  %479 = load i32, i32* %arrayidx291, align 4, !dbg !16861
  %cmp292 = icmp sge i32 %479, 0, !dbg !16862
  br i1 %cmp292, label %cond.true293, label %cond.false305, !dbg !16861

cond.true293:                                     ; preds = %for.body285
  %480 = load i32, i32* %sb, align 4, !dbg !16863
  %idxprom294 = sext i32 %480 to i64, !dbg !16864
  %481 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16864
  %arrayidx295 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %481, i64 %idxprom294, !dbg !16864
  %start_index296 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx295, i32 0, i32 3, !dbg !16865
  %482 = load i32, i32* %start_index296, align 4, !dbg !16865
  %483 = load i32, i32* %i, align 4, !dbg !16866
  %add297 = add nsw i32 %482, %483, !dbg !16867
  %idxprom298 = sext i32 %add297 to i64, !dbg !16868
  %arrayidx299 = getelementptr inbounds [48 x i32], [48 x i32]* %refwaves, i64 0, i64 %idxprom298, !dbg !16868
  %484 = load i32, i32* %arrayidx299, align 4, !dbg !16868
  %idxprom300 = sext i32 %484 to i64, !dbg !16869
  %485 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16869
  %waves_info301 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %485, i32 0, i32 14, !dbg !16870
  %486 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info301, align 8, !dbg !16870
  %waves302 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %486, i32 0, i32 7, !dbg !16871
  %arrayidx303 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves302, i64 0, i64 %idxprom300, !dbg !16869
  %amp_sf304 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx303, i32 0, i32 1, !dbg !16872
  %487 = load i32, i32* %amp_sf304, align 4, !dbg !16872
  br label %cond.end306, !dbg !16873

cond.false305:                                    ; preds = %for.body285
  br label %cond.end306, !dbg !16874

cond.end306:                                      ; preds = %cond.false305, %cond.true293
  %cond307 = phi i32 [ %487, %cond.true293 ], [ 32, %cond.false305 ], !dbg !16876
  %488 = load i32, i32* %sb, align 4, !dbg !16878
  %idxprom308 = sext i32 %488 to i64, !dbg !16879
  %489 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16879
  %arrayidx309 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %489, i64 %idxprom308, !dbg !16879
  %start_index310 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx309, i32 0, i32 3, !dbg !16880
  %490 = load i32, i32* %start_index310, align 4, !dbg !16880
  %491 = load i32, i32* %i, align 4, !dbg !16881
  %add311 = add nsw i32 %490, %491, !dbg !16882
  %idxprom312 = sext i32 %add311 to i64, !dbg !16883
  %492 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16883
  %waves_info313 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %492, i32 0, i32 14, !dbg !16884
  %493 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info313, align 8, !dbg !16884
  %waves314 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %493, i32 0, i32 7, !dbg !16885
  %arrayidx315 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves314, i64 0, i64 %idxprom312, !dbg !16883
  %amp_sf316 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx315, i32 0, i32 1, !dbg !16886
  store i32 %cond307, i32* %amp_sf316, align 4, !dbg !16887
  br label %for.inc317, !dbg !16883

for.inc317:                                       ; preds = %cond.end306
  %494 = load i32, i32* %i, align 4, !dbg !16888
  %inc318 = add nsw i32 %494, 1, !dbg !16888
  store i32 %inc318, i32* %i, align 4, !dbg !16888
  br label %for.cond280, !dbg !16889, !llvm.loop !16890

for.end319:                                       ; preds = %for.cond280
  br label %for.inc320, !dbg !16892

for.inc320:                                       ; preds = %for.end319, %if.then278
  %495 = load i32, i32* %sb, align 4, !dbg !16893
  %inc321 = add nsw i32 %495, 1, !dbg !16893
  store i32 %inc321, i32* %sb, align 4, !dbg !16893
  br label %for.cond270, !dbg !16895, !llvm.loop !16896

for.end322:                                       ; preds = %for.cond270
  br label %sw.epilog, !dbg !16898

sw.epilog:                                        ; preds = %if.end100, %for.end322, %for.end268, %for.end206, %for.end151
  ret void, !dbg !16899
}

; Function Attrs: nounwind uwtable
define internal void @decode_tones_phase(%struct.GetBitContext* %gb, %struct.Atrac3pChanUnitCtx* %ctx, i32 %ch_num, i32* %band_has_tones) #3 !dbg !16900 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %ch_num.addr = alloca i32, align 4
  %band_has_tones.addr = alloca i32*, align 8
  %sb = alloca i32, align 4
  %i = alloca i32, align 4
  %wparam = alloca %struct.Atrac3pWaveParam*, align 8
  %dst = alloca %struct.Atrac3pWavesData*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !16901, metadata !1324), !dbg !16902
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !16903, metadata !1324), !dbg !16904
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !16905, metadata !1324), !dbg !16906
  store i32* %band_has_tones, i32** %band_has_tones.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %band_has_tones.addr, metadata !16907, metadata !1324), !dbg !16908
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !16909, metadata !1324), !dbg !16910
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16911, metadata !1324), !dbg !16912
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveParam** %wparam, metadata !16913, metadata !1324), !dbg !16914
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %dst, metadata !16915, metadata !1324), !dbg !16916
  %0 = load i32, i32* %ch_num.addr, align 4, !dbg !16917
  %idxprom = sext i32 %0 to i64, !dbg !16918
  %1 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16918
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %1, i32 0, i32 12, !dbg !16919
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom, !dbg !16918
  %tones_info = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 18, !dbg !16920
  %2 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info, align 8, !dbg !16920
  store %struct.Atrac3pWavesData* %2, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16916
  store i32 0, i32* %sb, align 4, !dbg !16921
  br label %for.cond, !dbg !16923

for.cond:                                         ; preds = %for.inc15, %entry
  %3 = load i32, i32* %sb, align 4, !dbg !16924
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16927
  %waves_info = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 14, !dbg !16928
  %5 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info, align 8, !dbg !16928
  %num_tone_bands = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %5, i32 0, i32 2, !dbg !16929
  %6 = load i32, i32* %num_tone_bands, align 4, !dbg !16929
  %cmp = icmp slt i32 %3, %6, !dbg !16930
  br i1 %cmp, label %for.body, label %for.end17, !dbg !16931

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %sb, align 4, !dbg !16932
  %idxprom1 = sext i32 %7 to i64, !dbg !16935
  %8 = load i32*, i32** %band_has_tones.addr, align 8, !dbg !16935
  %arrayidx2 = getelementptr inbounds i32, i32* %8, i64 %idxprom1, !dbg !16935
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !16935
  %tobool = icmp ne i32 %9, 0, !dbg !16935
  br i1 %tobool, label %if.end, label %if.then, !dbg !16936

if.then:                                          ; preds = %for.body
  br label %for.inc15, !dbg !16937

if.end:                                           ; preds = %for.body
  %10 = load i32, i32* %sb, align 4, !dbg !16938
  %idxprom3 = sext i32 %10 to i64, !dbg !16939
  %11 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16939
  %arrayidx4 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %11, i64 %idxprom3, !dbg !16939
  %start_index = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx4, i32 0, i32 3, !dbg !16940
  %12 = load i32, i32* %start_index, align 4, !dbg !16940
  %idxprom5 = sext i32 %12 to i64, !dbg !16941
  %13 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !16941
  %waves_info6 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %13, i32 0, i32 14, !dbg !16942
  %14 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info6, align 8, !dbg !16942
  %waves = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %14, i32 0, i32 7, !dbg !16943
  %arrayidx7 = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves, i64 0, i64 %idxprom5, !dbg !16941
  store %struct.Atrac3pWaveParam* %arrayidx7, %struct.Atrac3pWaveParam** %wparam, align 8, !dbg !16944
  store i32 0, i32* %i, align 4, !dbg !16945
  br label %for.cond8, !dbg !16947

for.cond8:                                        ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !16948
  %16 = load i32, i32* %sb, align 4, !dbg !16951
  %idxprom9 = sext i32 %16 to i64, !dbg !16952
  %17 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %dst, align 8, !dbg !16952
  %arrayidx10 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %17, i64 %idxprom9, !dbg !16952
  %num_wavs = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %arrayidx10, i32 0, i32 2, !dbg !16953
  %18 = load i32, i32* %num_wavs, align 4, !dbg !16953
  %cmp11 = icmp slt i32 %15, %18, !dbg !16954
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !16955

for.body12:                                       ; preds = %for.cond8
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !16956
  %call = call i32 @get_bits(%struct.GetBitContext* %19, i32 5), !dbg !16957
  %20 = load i32, i32* %i, align 4, !dbg !16958
  %idxprom13 = sext i32 %20 to i64, !dbg !16959
  %21 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wparam, align 8, !dbg !16959
  %arrayidx14 = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %21, i64 %idxprom13, !dbg !16959
  %phase_index = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %arrayidx14, i32 0, i32 3, !dbg !16960
  store i32 %call, i32* %phase_index, align 4, !dbg !16961
  br label %for.inc, !dbg !16959

for.inc:                                          ; preds = %for.body12
  %22 = load i32, i32* %i, align 4, !dbg !16962
  %inc = add nsw i32 %22, 1, !dbg !16962
  store i32 %inc, i32* %i, align 4, !dbg !16962
  br label %for.cond8, !dbg !16964, !llvm.loop !16965

for.end:                                          ; preds = %for.cond8
  br label %for.inc15, !dbg !16967

for.inc15:                                        ; preds = %for.end, %if.then
  %23 = load i32, i32* %sb, align 4, !dbg !16968
  %inc16 = add nsw i32 %23, 1, !dbg !16968
  store i32 %inc16, i32* %sb, align 4, !dbg !16968
  br label %for.cond, !dbg !16970, !llvm.loop !16971

for.end17:                                        ; preds = %for.cond
  ret void, !dbg !16973
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1320, !1321}
!llvm.ident = !{!1322}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !887, globals: !901)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac3plus.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !{!888, !889, !890, !891, !899}
!888 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!889 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64, align: 64)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !894, line: 221, size: 32, align: 8, elements: !895)
!894 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!895 = !{!896}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !893, file: !894, line: 221, baseType: !897, size: 32, align: 32)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !898, line: 51, baseType: !889)
!898 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !898, line: 48, baseType: !900)
!900 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!901 = !{!902, !912, !913, !918, !919, !920, !921, !922, !923, !924, !925, !929, !930, !932, !939, !940, !944, !945, !949, !950, !958, !971, !973, !974, !978, !980, !982, !987, !991, !993, !994, !995, !996, !997, !998, !999, !1000, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1012, !1013, !1014, !1018, !1019, !1020, !1022, !1023, !1024, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1036, !1037, !1039, !1040, !1041, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1053, !1054, !1055, !1059, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1076, !1077, !1078, !1079, !1080, !1084, !1097, !1101, !1105, !1106, !1107, !1108, !1112, !1113, !1117, !1121, !1125, !1126, !1127, !1128, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1155, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1305, !1308, !1309, !1312, !1315, !1318}
!902 = distinct !DIGlobalVariable(name: "wl_nb_bits", scope: !903, file: !904, line: 84, type: !908, isLocal: true, isDefinition: true, variable: [4 x i32]* @ff_atrac3p_init_vlcs.wl_nb_bits)
!903 = distinct !DISubprogram(name: "ff_atrac3p_init_vlcs", scope: !904, file: !904, line: 80, type: !905, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!904 = !DIFile(filename: "libavcodec/atrac3plus.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!905 = !DISubroutineType(types: !906)
!906 = !{null}
!907 = !{}
!908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 128, align: 32, elements: !910)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!910 = !{!911}
!911 = !DISubrange(count: 4)
!912 = distinct !DIGlobalVariable(name: "wl_nb_codes", scope: !903, file: !904, line: 85, type: !908, isLocal: true, isDefinition: true, variable: [4 x i32]* @ff_atrac3p_init_vlcs.wl_nb_codes)
!913 = distinct !DIGlobalVariable(name: "wl_bits", scope: !903, file: !904, line: 86, type: !914, isLocal: true, isDefinition: true, variable: [4 x i8*]* @ff_atrac3p_init_vlcs.wl_bits)
!914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 256, align: 64, elements: !910)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!918 = distinct !DIGlobalVariable(name: "wl_codes", scope: !903, file: !904, line: 90, type: !914, isLocal: true, isDefinition: true, variable: [4 x i8*]* @ff_atrac3p_init_vlcs.wl_codes)
!919 = distinct !DIGlobalVariable(name: "wl_xlats", scope: !903, file: !904, line: 94, type: !914, isLocal: true, isDefinition: true, variable: [4 x i8*]* @ff_atrac3p_init_vlcs.wl_xlats)
!920 = distinct !DIGlobalVariable(name: "ct_nb_bits", scope: !903, file: !904, line: 98, type: !908, isLocal: true, isDefinition: true, variable: [4 x i32]* @ff_atrac3p_init_vlcs.ct_nb_bits)
!921 = distinct !DIGlobalVariable(name: "ct_nb_codes", scope: !903, file: !904, line: 99, type: !908, isLocal: true, isDefinition: true, variable: [4 x i32]* @ff_atrac3p_init_vlcs.ct_nb_codes)
!922 = distinct !DIGlobalVariable(name: "ct_bits", scope: !903, file: !904, line: 100, type: !914, isLocal: true, isDefinition: true, variable: [4 x i8*]* @ff_atrac3p_init_vlcs.ct_bits)
!923 = distinct !DIGlobalVariable(name: "ct_codes", scope: !903, file: !904, line: 104, type: !914, isLocal: true, isDefinition: true, variable: [4 x i8*]* @ff_atrac3p_init_vlcs.ct_codes)
!924 = distinct !DIGlobalVariable(name: "ct_xlats", scope: !903, file: !904, line: 108, type: !914, isLocal: true, isDefinition: true, variable: [4 x i8*]* @ff_atrac3p_init_vlcs.ct_xlats)
!925 = distinct !DIGlobalVariable(name: "sf_nb_bits", scope: !903, file: !904, line: 112, type: !926, isLocal: true, isDefinition: true, variable: [8 x i32]* @ff_atrac3p_init_vlcs.sf_nb_bits)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 256, align: 32, elements: !927)
!927 = !{!928}
!928 = !DISubrange(count: 8)
!929 = distinct !DIGlobalVariable(name: "sf_nb_codes", scope: !903, file: !904, line: 113, type: !926, isLocal: true, isDefinition: true, variable: [8 x i32]* @ff_atrac3p_init_vlcs.sf_nb_codes)
!930 = distinct !DIGlobalVariable(name: "sf_bits", scope: !903, file: !904, line: 114, type: !931, isLocal: true, isDefinition: true, variable: [8 x i8*]* @ff_atrac3p_init_vlcs.sf_bits)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 512, align: 64, elements: !927)
!932 = distinct !DIGlobalVariable(name: "sf_codes", scope: !903, file: !904, line: 119, type: !933, isLocal: true, isDefinition: true, variable: [8 x i16*]* @ff_atrac3p_init_vlcs.sf_codes)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 512, align: 64, elements: !927)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64, align: 64)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !898, line: 49, baseType: !938)
!938 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!939 = distinct !DIGlobalVariable(name: "sf_xlats", scope: !903, file: !904, line: 124, type: !931, isLocal: true, isDefinition: true, variable: [8 x i8*]* @ff_atrac3p_init_vlcs.sf_xlats)
!940 = distinct !DIGlobalVariable(name: "gain_cbs", scope: !903, file: !904, line: 129, type: !941, isLocal: true, isDefinition: true, variable: [11 x i8*]* @ff_atrac3p_init_vlcs.gain_cbs)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 704, align: 64, elements: !942)
!942 = !{!943}
!943 = !DISubrange(count: 11)
!944 = distinct !DIGlobalVariable(name: "gain_xlats", scope: !903, file: !904, line: 137, type: !941, isLocal: true, isDefinition: true, variable: [11 x i8*]* @ff_atrac3p_init_vlcs.gain_xlats)
!945 = distinct !DIGlobalVariable(name: "tone_cbs", scope: !903, file: !904, line: 145, type: !946, isLocal: true, isDefinition: true, variable: [7 x i8*]* @ff_atrac3p_init_vlcs.tone_cbs)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 448, align: 64, elements: !947)
!947 = !{!948}
!948 = !DISubrange(count: 7)
!949 = distinct !DIGlobalVariable(name: "tone_xlats", scope: !903, file: !904, line: 151, type: !946, isLocal: true, isDefinition: true, variable: [7 x i8*]* @ff_atrac3p_init_vlcs.tone_xlats)
!950 = distinct !DIGlobalVariable(name: "tables_data", scope: !0, file: !904, line: 34, type: !951, isLocal: true, isDefinition: true, variable: [154276 x [2 x i16]]* @tables_data)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 4936832, align: 16, elements: !955)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !953, line: 195, baseType: !954)
!953 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!954 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!955 = !{!956, !957}
!956 = !DISubrange(count: 154276)
!957 = !DISubrange(count: 2)
!958 = distinct !DIGlobalVariable(name: "wl_vlc_tabs", scope: !0, file: !904, line: 35, type: !959, isLocal: true, isDefinition: true, variable: [4 x %struct.VLC]* @wl_vlc_tabs)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 768, align: 64, elements: !910)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !961, line: 30, baseType: !962)
!961 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !961, line: 26, size: 192, align: 64, elements: !963)
!963 = !{!964, !965, !969, !970}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !962, file: !961, line: 27, baseType: !888, size: 32, align: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !962, file: !961, line: 28, baseType: !966, size: 64, align: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 32, align: 16, elements: !968)
!968 = !{!957}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !962, file: !961, line: 29, baseType: !888, size: 32, align: 32, offset: 128)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !962, file: !961, line: 29, baseType: !888, size: 32, align: 32, offset: 160)
!971 = distinct !DIGlobalVariable(name: "sf_vlc_tabs", scope: !0, file: !904, line: 36, type: !972, isLocal: true, isDefinition: true, variable: [8 x %struct.VLC]* @sf_vlc_tabs)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 1536, align: 64, elements: !927)
!973 = distinct !DIGlobalVariable(name: "ct_vlc_tabs", scope: !0, file: !904, line: 37, type: !959, isLocal: true, isDefinition: true, variable: [4 x %struct.VLC]* @ct_vlc_tabs)
!974 = distinct !DIGlobalVariable(name: "spec_vlc_tabs", scope: !0, file: !904, line: 38, type: !975, isLocal: true, isDefinition: true, variable: [112 x %struct.VLC]* @spec_vlc_tabs)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 21504, align: 64, elements: !976)
!976 = !{!977}
!977 = !DISubrange(count: 112)
!978 = distinct !DIGlobalVariable(name: "gain_vlc_tabs", scope: !0, file: !904, line: 39, type: !979, isLocal: true, isDefinition: true, variable: [11 x %struct.VLC]* @gain_vlc_tabs)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 2112, align: 64, elements: !942)
!980 = distinct !DIGlobalVariable(name: "tone_vlc_tabs", scope: !0, file: !904, line: 40, type: !981, isLocal: true, isDefinition: true, variable: [7 x %struct.VLC]* @tone_vlc_tabs)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 1344, align: 64, elements: !947)
!982 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_bits1", scope: !0, file: !983, line: 32, type: !984, isLocal: true, isDefinition: true, variable: [3 x i8]* @atrac3p_wl_huff_bits1)
!983 = !DIFile(filename: "libavcodec/atrac3plus_data.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 24, align: 8, elements: !985)
!985 = !{!986}
!986 = !DISubrange(count: 3)
!987 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_bits2", scope: !0, file: !983, line: 38, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @atrac3p_wl_huff_bits2)
!988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 40, align: 8, elements: !989)
!989 = !{!990}
!990 = !DISubrange(count: 5)
!991 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_bits3", scope: !0, file: !983, line: 46, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_wl_huff_bits3)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 64, align: 8, elements: !927)
!993 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_bits4", scope: !0, file: !983, line: 52, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_wl_huff_bits4)
!994 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_code1", scope: !0, file: !983, line: 30, type: !984, isLocal: true, isDefinition: true, variable: [3 x i8]* @atrac3p_wl_huff_code1)
!995 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_code2", scope: !0, file: !983, line: 36, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @atrac3p_wl_huff_code2)
!996 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_code3", scope: !0, file: !983, line: 42, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_wl_huff_code3)
!997 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_code4", scope: !0, file: !983, line: 48, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_wl_huff_code4)
!998 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_xlat1", scope: !0, file: !983, line: 34, type: !984, isLocal: true, isDefinition: true, variable: [3 x i8]* @atrac3p_wl_huff_xlat1)
!999 = distinct !DIGlobalVariable(name: "atrac3p_wl_huff_xlat2", scope: !0, file: !983, line: 40, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @atrac3p_wl_huff_xlat2)
!1000 = distinct !DIGlobalVariable(name: "atrac3p_ct_huff_bits1", scope: !0, file: !983, line: 159, type: !1001, isLocal: true, isDefinition: true, variable: [4 x i8]* @atrac3p_ct_huff_bits1)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 32, align: 8, elements: !910)
!1002 = distinct !DIGlobalVariable(name: "atrac3p_ct_huff_bits2", scope: !0, file: !983, line: 163, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_ct_huff_bits2)
!1003 = distinct !DIGlobalVariable(name: "atrac3p_ct_huff_bits3", scope: !0, file: !983, line: 171, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_ct_huff_bits3)
!1004 = distinct !DIGlobalVariable(name: "atrac3p_ct_huff_code1", scope: !0, file: !983, line: 157, type: !1001, isLocal: true, isDefinition: true, variable: [4 x i8]* @atrac3p_ct_huff_code1)
!1005 = distinct !DIGlobalVariable(name: "atrac3p_ct_huff_code2", scope: !0, file: !983, line: 161, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_ct_huff_code2)
!1006 = distinct !DIGlobalVariable(name: "atrac3p_ct_huff_code3", scope: !0, file: !983, line: 167, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_ct_huff_code3)
!1007 = distinct !DIGlobalVariable(name: "atrac3p_ct_huff_xlat1", scope: !0, file: !983, line: 165, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_ct_huff_xlat1)
!1008 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_bits1", scope: !0, file: !983, line: 66, type: !1009, isLocal: true, isDefinition: true, variable: [64 x i8]* @atrac3p_sf_huff_bits1)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 512, align: 8, elements: !1010)
!1010 = !{!1011}
!1011 = !DISubrange(count: 64)
!1012 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_bits2", scope: !0, file: !983, line: 98, type: !1009, isLocal: true, isDefinition: true, variable: [64 x i8]* @atrac3p_sf_huff_bits2)
!1013 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_bits3", scope: !0, file: !983, line: 116, type: !1009, isLocal: true, isDefinition: true, variable: [64 x i8]* @atrac3p_sf_huff_bits3)
!1014 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_bits4", scope: !0, file: !983, line: 127, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_sf_huff_bits4)
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 128, align: 8, elements: !1016)
!1016 = !{!1017}
!1017 = !DISubrange(count: 16)
!1018 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_bits5", scope: !0, file: !983, line: 144, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_sf_huff_bits5)
!1019 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_bits6", scope: !0, file: !983, line: 152, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_sf_huff_bits6)
!1020 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_code1", scope: !0, file: !983, line: 55, type: !1021, isLocal: true, isDefinition: true, variable: [64 x i16]* @atrac3p_sf_huff_code1)
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 1024, align: 16, elements: !1010)
!1022 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_code2", scope: !0, file: !983, line: 87, type: !1021, isLocal: true, isDefinition: true, variable: [64 x i16]* @atrac3p_sf_huff_code2)
!1023 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_code3", scope: !0, file: !983, line: 105, type: !1021, isLocal: true, isDefinition: true, variable: [64 x i16]* @atrac3p_sf_huff_code3)
!1024 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_code4", scope: !0, file: !983, line: 123, type: !1025, isLocal: true, isDefinition: true, variable: [16 x i16]* @atrac3p_sf_huff_code4)
!1025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 256, align: 16, elements: !1016)
!1026 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_code5", scope: !0, file: !983, line: 139, type: !1025, isLocal: true, isDefinition: true, variable: [16 x i16]* @atrac3p_sf_huff_code5)
!1027 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_code6", scope: !0, file: !983, line: 148, type: !1025, isLocal: true, isDefinition: true, variable: [16 x i16]* @atrac3p_sf_huff_code6)
!1028 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_xlat1", scope: !0, file: !983, line: 73, type: !1009, isLocal: true, isDefinition: true, variable: [64 x i8]* @atrac3p_sf_huff_xlat1)
!1029 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_xlat2", scope: !0, file: !983, line: 80, type: !1009, isLocal: true, isDefinition: true, variable: [64 x i8]* @atrac3p_sf_huff_xlat2)
!1030 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_xlat4", scope: !0, file: !983, line: 131, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_sf_huff_xlat4)
!1031 = distinct !DIGlobalVariable(name: "atrac3p_sf_huff_xlat5", scope: !0, file: !983, line: 135, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_sf_huff_xlat5)
!1032 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_npoints1_cb", scope: !0, file: !983, line: 1801, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @atrac3p_huff_gain_npoints1_cb)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 72, align: 8, elements: !1034)
!1034 = !{!1035}
!1035 = !DISubrange(count: 9)
!1036 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev1_cb", scope: !0, file: !983, line: 1809, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @atrac3p_huff_gain_lev1_cb)
!1037 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev2_cb", scope: !0, file: !983, line: 1814, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @atrac3p_huff_gain_lev2_cb)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 88, align: 8, elements: !942)
!1039 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev3_cb", scope: !0, file: !983, line: 1822, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @atrac3p_huff_gain_lev3_cb)
!1040 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev4_cb", scope: !0, file: !983, line: 1830, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @atrac3p_huff_gain_lev4_cb)
!1041 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc3_cb", scope: !0, file: !983, line: 1850, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @atrac3p_huff_gain_loc3_cb)
!1042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 56, align: 8, elements: !947)
!1043 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc1_cb", scope: !0, file: !983, line: 1838, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @atrac3p_huff_gain_loc1_cb)
!1044 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc4_cb", scope: !0, file: !983, line: 1856, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @atrac3p_huff_gain_loc4_cb)
!1045 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc2_cb", scope: !0, file: !983, line: 1844, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_huff_gain_loc2_cb)
!1046 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc5_cb", scope: !0, file: !983, line: 1862, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @atrac3p_huff_gain_loc5_cb)
!1047 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_npoints2_xlat", scope: !0, file: !983, line: 1805, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_huff_gain_npoints2_xlat)
!1048 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev1_xlat", scope: !0, file: !983, line: 1810, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_huff_gain_lev1_xlat)
!1049 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev2_xlat", scope: !0, file: !983, line: 1818, type: !1050, isLocal: true, isDefinition: true, variable: [15 x i8]* @atrac3p_huff_gain_lev2_xlat)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 120, align: 8, elements: !1051)
!1051 = !{!1052}
!1052 = !DISubrange(count: 15)
!1053 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev3_xlat", scope: !0, file: !983, line: 1826, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_huff_gain_lev3_xlat)
!1054 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_lev4_xlat", scope: !0, file: !983, line: 1834, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @atrac3p_huff_gain_lev4_xlat)
!1055 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc3_xlat", scope: !0, file: !983, line: 1851, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_huff_gain_loc3_xlat)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 256, align: 8, elements: !1057)
!1057 = !{!1058}
!1058 = !DISubrange(count: 32)
!1059 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc1_xlat", scope: !0, file: !983, line: 1839, type: !1060, isLocal: true, isDefinition: true, variable: [31 x i8]* @atrac3p_huff_gain_loc1_xlat)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 248, align: 8, elements: !1061)
!1061 = !{!1062}
!1062 = !DISubrange(count: 31)
!1063 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc4_xlat", scope: !0, file: !983, line: 1857, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_huff_gain_loc4_xlat)
!1064 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc2_xlat", scope: !0, file: !983, line: 1845, type: !1060, isLocal: true, isDefinition: true, variable: [31 x i8]* @atrac3p_huff_gain_loc2_xlat)
!1065 = distinct !DIGlobalVariable(name: "atrac3p_huff_gain_loc5_xlat", scope: !0, file: !983, line: 1863, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_huff_gain_loc5_xlat)
!1066 = distinct !DIGlobalVariable(name: "atrac3p_huff_tonebands_cb", scope: !0, file: !983, line: 1869, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_huff_tonebands_cb)
!1067 = distinct !DIGlobalVariable(name: "atrac3p_huff_numwavs1_cb", scope: !0, file: !983, line: 1870, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @atrac3p_huff_numwavs1_cb)
!1068 = distinct !DIGlobalVariable(name: "atrac3p_huff_numwavs2_cb", scope: !0, file: !983, line: 1871, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_huff_numwavs2_cb)
!1069 = distinct !DIGlobalVariable(name: "atrac3p_huff_wav_ampsf1_cb", scope: !0, file: !983, line: 1873, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @atrac3p_huff_wav_ampsf1_cb)
!1070 = distinct !DIGlobalVariable(name: "atrac3p_huff_wav_ampsf2_cb", scope: !0, file: !983, line: 1879, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @atrac3p_huff_wav_ampsf2_cb)
!1071 = distinct !DIGlobalVariable(name: "atrac3p_huff_wav_ampsf3_cb", scope: !0, file: !983, line: 1885, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @atrac3p_huff_wav_ampsf3_cb)
!1072 = distinct !DIGlobalVariable(name: "atrac3p_huff_freq_cb", scope: !0, file: !983, line: 1891, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @atrac3p_huff_freq_cb)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 104, align: 8, elements: !1074)
!1074 = !{!1075}
!1075 = !DISubrange(count: 13)
!1076 = distinct !DIGlobalVariable(name: "atrac3p_huff_numwavs2_xlat", scope: !0, file: !983, line: 1872, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @atrac3p_huff_numwavs2_xlat)
!1077 = distinct !DIGlobalVariable(name: "atrac3p_huff_wav_ampsf1_xlat", scope: !0, file: !983, line: 1874, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_huff_wav_ampsf1_xlat)
!1078 = distinct !DIGlobalVariable(name: "atrac3p_huff_wav_ampsf2_xlat", scope: !0, file: !983, line: 1880, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_huff_wav_ampsf2_xlat)
!1079 = distinct !DIGlobalVariable(name: "atrac3p_huff_wav_ampsf3_xlat", scope: !0, file: !983, line: 1886, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_huff_wav_ampsf3_xlat)
!1080 = distinct !DIGlobalVariable(name: "atrac3p_huff_freq_xlat", scope: !0, file: !983, line: 1895, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @atrac3p_huff_freq_xlat)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 2048, align: 8, elements: !1082)
!1082 = !{!1083}
!1083 = !DISubrange(count: 256)
!1084 = distinct !DIGlobalVariable(name: "atrac3p_spectra_tabs", scope: !0, file: !983, line: 1652, type: !1085, isLocal: true, isDefinition: true, variable: [112 x %struct.Atrac3pSpecCodeTab]* @atrac3p_spectra_tabs)
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1086, size: 21504, align: 64, elements: !976)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pSpecCodeTab", file: !983, line: 1650, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pSpecCodeTab", file: !983, line: 1641, size: 192, align: 64, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1094, !1095, !1096}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "group_size", scope: !1088, file: !983, line: 1642, baseType: !899, size: 8, align: 8)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "num_coeffs", scope: !1088, file: !983, line: 1643, baseType: !899, size: 8, align: 8, offset: 8)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1088, file: !983, line: 1644, baseType: !899, size: 8, align: 8, offset: 16)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "is_signed", scope: !1088, file: !983, line: 1645, baseType: !899, size: 8, align: 8, offset: 24)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !1088, file: !983, line: 1647, baseType: !888, size: 32, align: 32, offset: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1088, file: !983, line: 1648, baseType: !916, size: 64, align: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "xlat", scope: !1088, file: !983, line: 1649, baseType: !916, size: 64, align: 64, offset: 128)
!1097 = distinct !DIGlobalVariable(name: "huff_a01_cb", scope: !0, file: !983, line: 440, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_a01_cb)
!1098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 112, align: 8, elements: !1099)
!1099 = !{!1100}
!1100 = !DISubrange(count: 14)
!1101 = distinct !DIGlobalVariable(name: "huff_a01_xlat", scope: !0, file: !983, line: 444, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a01_xlat)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 648, align: 8, elements: !1103)
!1103 = !{!1104}
!1104 = !DISubrange(count: 81)
!1105 = distinct !DIGlobalVariable(name: "huff_a02_cb", scope: !0, file: !983, line: 454, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_a02_cb)
!1106 = distinct !DIGlobalVariable(name: "huff_a02_xlat", scope: !0, file: !983, line: 458, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a02_xlat)
!1107 = distinct !DIGlobalVariable(name: "huff_a03_cb", scope: !0, file: !983, line: 468, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_a03_cb)
!1108 = distinct !DIGlobalVariable(name: "huff_a03_xlat", scope: !0, file: !983, line: 470, type: !1109, isLocal: true, isDefinition: true, variable: [49 x i8]* @huff_a03_xlat)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 392, align: 8, elements: !1110)
!1110 = !{!1111}
!1111 = !DISubrange(count: 49)
!1112 = distinct !DIGlobalVariable(name: "huff_a04_cb", scope: !0, file: !983, line: 478, type: !1001, isLocal: true, isDefinition: true, variable: [4 x i8]* @huff_a04_cb)
!1113 = distinct !DIGlobalVariable(name: "huff_a04_xlat", scope: !0, file: !983, line: 479, type: !1114, isLocal: true, isDefinition: true, variable: [6 x i8]* @huff_a04_xlat)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 48, align: 8, elements: !1115)
!1115 = !{!1116}
!1116 = !DISubrange(count: 6)
!1117 = distinct !DIGlobalVariable(name: "huff_a05_cb", scope: !0, file: !983, line: 481, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a05_cb)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 96, align: 8, elements: !1119)
!1119 = !{!1120}
!1120 = !DISubrange(count: 12)
!1121 = distinct !DIGlobalVariable(name: "huff_a05_xlat", scope: !0, file: !983, line: 485, type: !1122, isLocal: true, isDefinition: true, variable: [225 x i8]* @huff_a05_xlat)
!1122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 1800, align: 8, elements: !1123)
!1123 = !{!1124}
!1124 = !DISubrange(count: 225)
!1125 = distinct !DIGlobalVariable(name: "huff_a06_cb", scope: !0, file: !983, line: 507, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a06_cb)
!1126 = distinct !DIGlobalVariable(name: "huff_a06_xlat", scope: !0, file: !983, line: 511, type: !1015, isLocal: true, isDefinition: true, variable: [16 x i8]* @huff_a06_xlat)
!1127 = distinct !DIGlobalVariable(name: "huff_a07_cb", scope: !0, file: !983, line: 515, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_a07_cb)
!1128 = distinct !DIGlobalVariable(name: "huff_a07_xlat", scope: !0, file: !983, line: 519, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_a07_xlat)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 504, align: 8, elements: !1130)
!1130 = !{!1131}
!1131 = !DISubrange(count: 63)
!1132 = distinct !DIGlobalVariable(name: "huff_a11_cb", scope: !0, file: !983, line: 526, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_a11_cb)
!1133 = distinct !DIGlobalVariable(name: "huff_a11_xlat", scope: !0, file: !983, line: 530, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a11_xlat)
!1134 = distinct !DIGlobalVariable(name: "huff_a12_cb", scope: !0, file: !983, line: 540, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a12_cb)
!1135 = distinct !DIGlobalVariable(name: "huff_a12_xlat", scope: !0, file: !983, line: 542, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a12_xlat)
!1136 = distinct !DIGlobalVariable(name: "huff_a13_cb", scope: !0, file: !983, line: 552, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a13_cb)
!1137 = distinct !DIGlobalVariable(name: "huff_a13_xlat", scope: !0, file: !983, line: 556, type: !1109, isLocal: true, isDefinition: true, variable: [49 x i8]* @huff_a13_xlat)
!1138 = distinct !DIGlobalVariable(name: "huff_a14_cb", scope: !0, file: !983, line: 564, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a14_cb)
!1139 = distinct !DIGlobalVariable(name: "huff_a14_xlat", scope: !0, file: !983, line: 568, type: !1140, isLocal: true, isDefinition: true, variable: [121 x i8]* @huff_a14_xlat)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 968, align: 8, elements: !1141)
!1141 = !{!1142}
!1142 = !DISubrange(count: 121)
!1143 = distinct !DIGlobalVariable(name: "huff_a15_cb", scope: !0, file: !983, line: 582, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_a15_cb)
!1144 = distinct !DIGlobalVariable(name: "huff_a15_xlat", scope: !0, file: !983, line: 584, type: !1122, isLocal: true, isDefinition: true, variable: [225 x i8]* @huff_a15_xlat)
!1145 = distinct !DIGlobalVariable(name: "huff_a16_cb", scope: !0, file: !983, line: 606, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_a16_cb)
!1146 = distinct !DIGlobalVariable(name: "huff_a16_xlat", scope: !0, file: !983, line: 610, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_a16_xlat)
!1147 = distinct !DIGlobalVariable(name: "huff_a17_cb", scope: !0, file: !983, line: 635, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_a17_cb)
!1148 = distinct !DIGlobalVariable(name: "huff_a17_xlat", scope: !0, file: !983, line: 637, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_a17_xlat)
!1149 = distinct !DIGlobalVariable(name: "huff_a21_cb", scope: !0, file: !983, line: 644, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_a21_cb)
!1150 = distinct !DIGlobalVariable(name: "huff_a21_xlat", scope: !0, file: !983, line: 648, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a21_xlat)
!1151 = distinct !DIGlobalVariable(name: "huff_a22_cb", scope: !0, file: !983, line: 658, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_a22_cb)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 80, align: 8, elements: !1153)
!1153 = !{!1154}
!1154 = !DISubrange(count: 10)
!1155 = distinct !DIGlobalVariable(name: "huff_a22_xlat", scope: !0, file: !983, line: 660, type: !1156, isLocal: true, isDefinition: true, variable: [25 x i8]* @huff_a22_xlat)
!1156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 200, align: 8, elements: !1157)
!1157 = !{!1158}
!1158 = !DISubrange(count: 25)
!1159 = distinct !DIGlobalVariable(name: "huff_a23_cb", scope: !0, file: !983, line: 666, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_a23_cb)
!1160 = distinct !DIGlobalVariable(name: "huff_a23_xlat", scope: !0, file: !983, line: 668, type: !1109, isLocal: true, isDefinition: true, variable: [49 x i8]* @huff_a23_xlat)
!1161 = distinct !DIGlobalVariable(name: "huff_a24_cb", scope: !0, file: !983, line: 676, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @huff_a24_cb)
!1162 = distinct !DIGlobalVariable(name: "huff_a25_cb", scope: !0, file: !983, line: 678, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @huff_a25_cb)
!1163 = distinct !DIGlobalVariable(name: "huff_a25_xlat", scope: !0, file: !983, line: 680, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a25_xlat)
!1164 = distinct !DIGlobalVariable(name: "huff_a26_cb", scope: !0, file: !983, line: 682, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_a26_cb)
!1165 = distinct !DIGlobalVariable(name: "huff_a26_xlat", scope: !0, file: !983, line: 684, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_a26_xlat)
!1166 = distinct !DIGlobalVariable(name: "huff_a27_cb", scope: !0, file: !983, line: 709, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a27_cb)
!1167 = distinct !DIGlobalVariable(name: "huff_a27_xlat", scope: !0, file: !983, line: 711, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_a27_xlat)
!1168 = distinct !DIGlobalVariable(name: "huff_a31_cb", scope: !0, file: !983, line: 718, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a31_cb)
!1169 = distinct !DIGlobalVariable(name: "huff_a31_xlat", scope: !0, file: !983, line: 720, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_a31_xlat)
!1170 = distinct !DIGlobalVariable(name: "huff_a32_cb", scope: !0, file: !983, line: 724, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_a32_cb)
!1171 = distinct !DIGlobalVariable(name: "huff_a32_xlat", scope: !0, file: !983, line: 728, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a32_xlat)
!1172 = distinct !DIGlobalVariable(name: "huff_a33_cb", scope: !0, file: !983, line: 738, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a33_cb)
!1173 = distinct !DIGlobalVariable(name: "huff_a33_xlat", scope: !0, file: !983, line: 742, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_a33_xlat)
!1174 = distinct !DIGlobalVariable(name: "huff_a34_cb", scope: !0, file: !983, line: 767, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a34_cb)
!1175 = distinct !DIGlobalVariable(name: "huff_a34_xlat", scope: !0, file: !983, line: 769, type: !1114, isLocal: true, isDefinition: true, variable: [6 x i8]* @huff_a34_xlat)
!1176 = distinct !DIGlobalVariable(name: "huff_a35_cb", scope: !0, file: !983, line: 771, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_a35_cb)
!1177 = distinct !DIGlobalVariable(name: "huff_a35_xlat", scope: !0, file: !983, line: 773, type: !1122, isLocal: true, isDefinition: true, variable: [225 x i8]* @huff_a35_xlat)
!1178 = distinct !DIGlobalVariable(name: "huff_a36_cb", scope: !0, file: !983, line: 795, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a36_cb)
!1179 = distinct !DIGlobalVariable(name: "huff_a36_xlat", scope: !0, file: !983, line: 799, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_a36_xlat)
!1180 = distinct !DIGlobalVariable(name: "huff_a37_cb", scope: !0, file: !983, line: 824, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a37_cb)
!1181 = distinct !DIGlobalVariable(name: "huff_a37_xlat", scope: !0, file: !983, line: 826, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_a37_xlat)
!1182 = distinct !DIGlobalVariable(name: "huff_a41_cb", scope: !0, file: !983, line: 833, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_a41_cb)
!1183 = distinct !DIGlobalVariable(name: "huff_a41_xlat", scope: !0, file: !983, line: 837, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a41_xlat)
!1184 = distinct !DIGlobalVariable(name: "huff_a42_cb", scope: !0, file: !983, line: 847, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_a42_cb)
!1185 = distinct !DIGlobalVariable(name: "huff_a42_xlat", scope: !0, file: !983, line: 849, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a42_xlat)
!1186 = distinct !DIGlobalVariable(name: "huff_a43_cb", scope: !0, file: !983, line: 859, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @huff_a43_cb)
!1187 = distinct !DIGlobalVariable(name: "huff_a43_xlat", scope: !0, file: !983, line: 861, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a43_xlat)
!1188 = distinct !DIGlobalVariable(name: "huff_a44_cb", scope: !0, file: !983, line: 863, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_a44_cb)
!1189 = distinct !DIGlobalVariable(name: "huff_a44_xlat", scope: !0, file: !983, line: 865, type: !1140, isLocal: true, isDefinition: true, variable: [121 x i8]* @huff_a44_xlat)
!1190 = distinct !DIGlobalVariable(name: "huff_a45_cb", scope: !0, file: !983, line: 879, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @huff_a45_cb)
!1191 = distinct !DIGlobalVariable(name: "huff_a45_xlat", scope: !0, file: !983, line: 881, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a45_xlat)
!1192 = distinct !DIGlobalVariable(name: "huff_a46_cb", scope: !0, file: !983, line: 883, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a46_cb)
!1193 = distinct !DIGlobalVariable(name: "huff_a46_xlat", scope: !0, file: !983, line: 885, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_a46_xlat)
!1194 = distinct !DIGlobalVariable(name: "huff_a47_cb", scope: !0, file: !983, line: 910, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a47_cb)
!1195 = distinct !DIGlobalVariable(name: "huff_a47_xlat", scope: !0, file: !983, line: 912, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_a47_xlat)
!1196 = distinct !DIGlobalVariable(name: "huff_a51_cb", scope: !0, file: !983, line: 919, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a51_cb)
!1197 = distinct !DIGlobalVariable(name: "huff_a51_xlat", scope: !0, file: !983, line: 923, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a51_xlat)
!1198 = distinct !DIGlobalVariable(name: "huff_a52_cb", scope: !0, file: !983, line: 933, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a52_cb)
!1199 = distinct !DIGlobalVariable(name: "huff_a52_xlat", scope: !0, file: !983, line: 935, type: !1156, isLocal: true, isDefinition: true, variable: [25 x i8]* @huff_a52_xlat)
!1200 = distinct !DIGlobalVariable(name: "huff_a53_xlat", scope: !0, file: !983, line: 941, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a53_xlat)
!1201 = distinct !DIGlobalVariable(name: "huff_a54_cb", scope: !0, file: !983, line: 943, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a54_cb)
!1202 = distinct !DIGlobalVariable(name: "huff_a54_xlat", scope: !0, file: !983, line: 945, type: !1140, isLocal: true, isDefinition: true, variable: [121 x i8]* @huff_a54_xlat)
!1203 = distinct !DIGlobalVariable(name: "huff_a55_cb", scope: !0, file: !983, line: 959, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a55_cb)
!1204 = distinct !DIGlobalVariable(name: "huff_a55_xlat", scope: !0, file: !983, line: 961, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a55_xlat)
!1205 = distinct !DIGlobalVariable(name: "huff_a56_cb", scope: !0, file: !983, line: 963, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a56_cb)
!1206 = distinct !DIGlobalVariable(name: "huff_a56_xlat", scope: !0, file: !983, line: 965, type: !1060, isLocal: true, isDefinition: true, variable: [31 x i8]* @huff_a56_xlat)
!1207 = distinct !DIGlobalVariable(name: "huff_a57_cb", scope: !0, file: !983, line: 970, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_a57_cb)
!1208 = distinct !DIGlobalVariable(name: "huff_a57_xlat", scope: !0, file: !983, line: 972, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_a57_xlat)
!1209 = distinct !DIGlobalVariable(name: "huff_a61_cb", scope: !0, file: !983, line: 981, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a61_cb)
!1210 = distinct !DIGlobalVariable(name: "huff_a61_xlat", scope: !0, file: !983, line: 985, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a61_xlat)
!1211 = distinct !DIGlobalVariable(name: "huff_a62_cb", scope: !0, file: !983, line: 995, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a62_cb)
!1212 = distinct !DIGlobalVariable(name: "huff_a62_xlat", scope: !0, file: !983, line: 997, type: !1156, isLocal: true, isDefinition: true, variable: [25 x i8]* @huff_a62_xlat)
!1213 = distinct !DIGlobalVariable(name: "huff_a63_cb", scope: !0, file: !983, line: 1003, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_a63_cb)
!1214 = distinct !DIGlobalVariable(name: "huff_a63_xlat", scope: !0, file: !983, line: 1007, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_a63_xlat)
!1215 = distinct !DIGlobalVariable(name: "huff_a64_cb", scope: !0, file: !983, line: 1032, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a64_cb)
!1216 = distinct !DIGlobalVariable(name: "huff_a64_xlat", scope: !0, file: !983, line: 1034, type: !1140, isLocal: true, isDefinition: true, variable: [121 x i8]* @huff_a64_xlat)
!1217 = distinct !DIGlobalVariable(name: "huff_a65_cb", scope: !0, file: !983, line: 1048, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_a65_cb)
!1218 = distinct !DIGlobalVariable(name: "huff_a65_xlat", scope: !0, file: !983, line: 1050, type: !1050, isLocal: true, isDefinition: true, variable: [15 x i8]* @huff_a65_xlat)
!1219 = distinct !DIGlobalVariable(name: "huff_a66_cb", scope: !0, file: !983, line: 1054, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_a66_cb)
!1220 = distinct !DIGlobalVariable(name: "huff_a66_xlat", scope: !0, file: !983, line: 1056, type: !1060, isLocal: true, isDefinition: true, variable: [31 x i8]* @huff_a66_xlat)
!1221 = distinct !DIGlobalVariable(name: "huff_a67_cb", scope: !0, file: !983, line: 1061, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_a67_cb)
!1222 = distinct !DIGlobalVariable(name: "huff_a67_xlat", scope: !0, file: !983, line: 1063, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_a67_xlat)
!1223 = distinct !DIGlobalVariable(name: "huff_a71_cb", scope: !0, file: !983, line: 1070, type: !988, isLocal: true, isDefinition: true, variable: [5 x i8]* @huff_a71_cb)
!1224 = distinct !DIGlobalVariable(name: "huff_a72_cb", scope: !0, file: !983, line: 1072, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a72_cb)
!1225 = distinct !DIGlobalVariable(name: "huff_a72_xlat", scope: !0, file: !983, line: 1076, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_a72_xlat)
!1226 = distinct !DIGlobalVariable(name: "huff_a73_cb", scope: !0, file: !983, line: 1086, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_a73_cb)
!1227 = distinct !DIGlobalVariable(name: "huff_a73_xlat", scope: !0, file: !983, line: 1088, type: !1109, isLocal: true, isDefinition: true, variable: [49 x i8]* @huff_a73_xlat)
!1228 = distinct !DIGlobalVariable(name: "huff_a74_cb", scope: !0, file: !983, line: 1096, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_a74_cb)
!1229 = distinct !DIGlobalVariable(name: "huff_a74_xlat", scope: !0, file: !983, line: 1100, type: !1140, isLocal: true, isDefinition: true, variable: [121 x i8]* @huff_a74_xlat)
!1230 = distinct !DIGlobalVariable(name: "huff_a75_cb", scope: !0, file: !983, line: 1114, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_a75_cb)
!1231 = distinct !DIGlobalVariable(name: "huff_a75_xlat", scope: !0, file: !983, line: 1116, type: !1050, isLocal: true, isDefinition: true, variable: [15 x i8]* @huff_a75_xlat)
!1232 = distinct !DIGlobalVariable(name: "huff_a76_cb", scope: !0, file: !983, line: 1120, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_a76_cb)
!1233 = distinct !DIGlobalVariable(name: "huff_a76_xlat", scope: !0, file: !983, line: 1124, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_a76_xlat)
!1234 = distinct !DIGlobalVariable(name: "huff_b01_cb", scope: !0, file: !983, line: 1149, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b01_cb)
!1235 = distinct !DIGlobalVariable(name: "huff_b01_xlat", scope: !0, file: !983, line: 1153, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_b01_xlat)
!1236 = distinct !DIGlobalVariable(name: "huff_b02_cb", scope: !0, file: !983, line: 1163, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b02_cb)
!1237 = distinct !DIGlobalVariable(name: "huff_b02_xlat", scope: !0, file: !983, line: 1167, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_b02_xlat)
!1238 = distinct !DIGlobalVariable(name: "huff_b03_cb", scope: !0, file: !983, line: 1177, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_b03_cb)
!1239 = distinct !DIGlobalVariable(name: "huff_b03_xlat", scope: !0, file: !983, line: 1179, type: !1109, isLocal: true, isDefinition: true, variable: [49 x i8]* @huff_b03_xlat)
!1240 = distinct !DIGlobalVariable(name: "huff_b04_cb", scope: !0, file: !983, line: 1187, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_b04_cb)
!1241 = distinct !DIGlobalVariable(name: "huff_b04_xlat", scope: !0, file: !983, line: 1191, type: !1140, isLocal: true, isDefinition: true, variable: [121 x i8]* @huff_b04_xlat)
!1242 = distinct !DIGlobalVariable(name: "huff_b05_cb", scope: !0, file: !983, line: 1205, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_b05_cb)
!1243 = distinct !DIGlobalVariable(name: "huff_b05_xlat", scope: !0, file: !983, line: 1209, type: !1122, isLocal: true, isDefinition: true, variable: [225 x i8]* @huff_b05_xlat)
!1244 = distinct !DIGlobalVariable(name: "huff_b07_cb", scope: !0, file: !983, line: 1231, type: !1033, isLocal: true, isDefinition: true, variable: [9 x i8]* @huff_b07_cb)
!1245 = distinct !DIGlobalVariable(name: "huff_b07_xlat", scope: !0, file: !983, line: 1233, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_b07_xlat)
!1246 = distinct !DIGlobalVariable(name: "huff_b12_cb", scope: !0, file: !983, line: 1240, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_b12_cb)
!1247 = distinct !DIGlobalVariable(name: "huff_b12_xlat", scope: !0, file: !983, line: 1242, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_b12_xlat)
!1248 = distinct !DIGlobalVariable(name: "huff_b14_cb", scope: !0, file: !983, line: 1252, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b14_cb)
!1249 = distinct !DIGlobalVariable(name: "huff_b14_xlat", scope: !0, file: !983, line: 1256, type: !1140, isLocal: true, isDefinition: true, variable: [121 x i8]* @huff_b14_xlat)
!1250 = distinct !DIGlobalVariable(name: "huff_b16_cb", scope: !0, file: !983, line: 1270, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_b16_cb)
!1251 = distinct !DIGlobalVariable(name: "huff_b16_xlat", scope: !0, file: !983, line: 1274, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_b16_xlat)
!1252 = distinct !DIGlobalVariable(name: "huff_b26_cb", scope: !0, file: !983, line: 1299, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_b26_cb)
!1253 = distinct !DIGlobalVariable(name: "huff_b26_xlat", scope: !0, file: !983, line: 1303, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_b26_xlat)
!1254 = distinct !DIGlobalVariable(name: "huff_b32_cb", scope: !0, file: !983, line: 1328, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_b32_cb)
!1255 = distinct !DIGlobalVariable(name: "huff_b32_xlat", scope: !0, file: !983, line: 1332, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_b32_xlat)
!1256 = distinct !DIGlobalVariable(name: "huff_b33_cb", scope: !0, file: !983, line: 1342, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_b33_cb)
!1257 = distinct !DIGlobalVariable(name: "huff_b33_xlat", scope: !0, file: !983, line: 1346, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_b33_xlat)
!1258 = distinct !DIGlobalVariable(name: "huff_b35_cb", scope: !0, file: !983, line: 1371, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b35_cb)
!1259 = distinct !DIGlobalVariable(name: "huff_b35_xlat", scope: !0, file: !983, line: 1375, type: !1122, isLocal: true, isDefinition: true, variable: [225 x i8]* @huff_b35_xlat)
!1260 = distinct !DIGlobalVariable(name: "huff_b37_cb", scope: !0, file: !983, line: 1397, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_b37_cb)
!1261 = distinct !DIGlobalVariable(name: "huff_b37_xlat", scope: !0, file: !983, line: 1401, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_b37_xlat)
!1262 = distinct !DIGlobalVariable(name: "huff_b41_cb", scope: !0, file: !983, line: 1408, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b41_cb)
!1263 = distinct !DIGlobalVariable(name: "huff_b41_xlat", scope: !0, file: !983, line: 1412, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_b41_xlat)
!1264 = distinct !DIGlobalVariable(name: "huff_b42_cb", scope: !0, file: !983, line: 1422, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_b42_cb)
!1265 = distinct !DIGlobalVariable(name: "huff_b42_xlat", scope: !0, file: !983, line: 1424, type: !1156, isLocal: true, isDefinition: true, variable: [25 x i8]* @huff_b42_xlat)
!1266 = distinct !DIGlobalVariable(name: "huff_b43_cb", scope: !0, file: !983, line: 1430, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_b43_cb)
!1267 = distinct !DIGlobalVariable(name: "huff_b43_xlat", scope: !0, file: !983, line: 1432, type: !1109, isLocal: true, isDefinition: true, variable: [49 x i8]* @huff_b43_xlat)
!1268 = distinct !DIGlobalVariable(name: "huff_b47_cb", scope: !0, file: !983, line: 1440, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_b47_cb)
!1269 = distinct !DIGlobalVariable(name: "huff_b47_xlat", scope: !0, file: !983, line: 1442, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_b47_xlat)
!1270 = distinct !DIGlobalVariable(name: "huff_b52_cb", scope: !0, file: !983, line: 1449, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_b52_cb)
!1271 = distinct !DIGlobalVariable(name: "huff_b52_xlat", scope: !0, file: !983, line: 1451, type: !1156, isLocal: true, isDefinition: true, variable: [25 x i8]* @huff_b52_xlat)
!1272 = distinct !DIGlobalVariable(name: "huff_b53_cb", scope: !0, file: !983, line: 1457, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_b53_cb)
!1273 = distinct !DIGlobalVariable(name: "huff_b53_xlat", scope: !0, file: !983, line: 1459, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_b53_xlat)
!1274 = distinct !DIGlobalVariable(name: "huff_b56_cb", scope: !0, file: !983, line: 1461, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_b56_cb)
!1275 = distinct !DIGlobalVariable(name: "huff_b56_xlat", scope: !0, file: !983, line: 1463, type: !1060, isLocal: true, isDefinition: true, variable: [31 x i8]* @huff_b56_xlat)
!1276 = distinct !DIGlobalVariable(name: "huff_b62_cb", scope: !0, file: !983, line: 1468, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b62_cb)
!1277 = distinct !DIGlobalVariable(name: "huff_b62_xlat", scope: !0, file: !983, line: 1472, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_b62_xlat)
!1278 = distinct !DIGlobalVariable(name: "huff_b63_cb", scope: !0, file: !983, line: 1482, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_b63_cb)
!1279 = distinct !DIGlobalVariable(name: "huff_b63_xlat", scope: !0, file: !983, line: 1484, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_b63_xlat)
!1280 = distinct !DIGlobalVariable(name: "huff_b64_cb", scope: !0, file: !983, line: 1486, type: !1042, isLocal: true, isDefinition: true, variable: [7 x i8]* @huff_b64_cb)
!1281 = distinct !DIGlobalVariable(name: "huff_b64_xlat", scope: !0, file: !983, line: 1488, type: !1114, isLocal: true, isDefinition: true, variable: [6 x i8]* @huff_b64_xlat)
!1282 = distinct !DIGlobalVariable(name: "huff_b65_cb", scope: !0, file: !983, line: 1490, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b65_cb)
!1283 = distinct !DIGlobalVariable(name: "huff_b65_xlat", scope: !0, file: !983, line: 1494, type: !1122, isLocal: true, isDefinition: true, variable: [225 x i8]* @huff_b65_xlat)
!1284 = distinct !DIGlobalVariable(name: "huff_b66_cb", scope: !0, file: !983, line: 1516, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b66_cb)
!1285 = distinct !DIGlobalVariable(name: "huff_b66_xlat", scope: !0, file: !983, line: 1520, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_b66_xlat)
!1286 = distinct !DIGlobalVariable(name: "huff_b67_cb", scope: !0, file: !983, line: 1545, type: !1152, isLocal: true, isDefinition: true, variable: [10 x i8]* @huff_b67_cb)
!1287 = distinct !DIGlobalVariable(name: "huff_b67_xlat", scope: !0, file: !983, line: 1547, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_b67_xlat)
!1288 = distinct !DIGlobalVariable(name: "huff_b71_cb", scope: !0, file: !983, line: 1554, type: !1098, isLocal: true, isDefinition: true, variable: [14 x i8]* @huff_b71_cb)
!1289 = distinct !DIGlobalVariable(name: "huff_b71_xlat", scope: !0, file: !983, line: 1558, type: !1102, isLocal: true, isDefinition: true, variable: [81 x i8]* @huff_b71_xlat)
!1290 = distinct !DIGlobalVariable(name: "huff_b73_cb", scope: !0, file: !983, line: 1568, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_b73_cb)
!1291 = distinct !DIGlobalVariable(name: "huff_b73_xlat", scope: !0, file: !983, line: 1572, type: !1081, isLocal: true, isDefinition: true, variable: [256 x i8]* @huff_b73_xlat)
!1292 = distinct !DIGlobalVariable(name: "huff_b74_cb", scope: !0, file: !983, line: 1597, type: !992, isLocal: true, isDefinition: true, variable: [8 x i8]* @huff_b74_cb)
!1293 = distinct !DIGlobalVariable(name: "huff_b74_xlat", scope: !0, file: !983, line: 1599, type: !1038, isLocal: true, isDefinition: true, variable: [11 x i8]* @huff_b74_xlat)
!1294 = distinct !DIGlobalVariable(name: "huff_b75_cb", scope: !0, file: !983, line: 1603, type: !1073, isLocal: true, isDefinition: true, variable: [13 x i8]* @huff_b75_cb)
!1295 = distinct !DIGlobalVariable(name: "huff_b75_xlat", scope: !0, file: !983, line: 1607, type: !1122, isLocal: true, isDefinition: true, variable: [225 x i8]* @huff_b75_xlat)
!1296 = distinct !DIGlobalVariable(name: "huff_b77_cb", scope: !0, file: !983, line: 1629, type: !1118, isLocal: true, isDefinition: true, variable: [12 x i8]* @huff_b77_cb)
!1297 = distinct !DIGlobalVariable(name: "huff_b77_xlat", scope: !0, file: !983, line: 1633, type: !1129, isLocal: true, isDefinition: true, variable: [63 x i8]* @huff_b77_xlat)
!1298 = distinct !DIGlobalVariable(name: "atrac3p_qu_num_to_seg", scope: !0, file: !983, line: 201, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_qu_num_to_seg)
!1299 = distinct !DIGlobalVariable(name: "atrac3p_wl_shapes", scope: !0, file: !983, line: 221, type: !1300, isLocal: true, isDefinition: true, variable: [8 x [16 x [9 x i8]]]* @atrac3p_wl_shapes)
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1301, size: 9216, align: 8, elements: !1304)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !953, line: 194, baseType: !1303)
!1303 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1304 = !{!928, !1017, !1035}
!1305 = distinct !DIGlobalVariable(name: "atrac3p_wl_weights", scope: !0, file: !983, line: 174, type: !1306, isLocal: true, isDefinition: true, variable: [6 x [32 x i8]]* @atrac3p_wl_weights)
!1306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1301, size: 1536, align: 8, elements: !1307)
!1307 = !{!1116, !1058}
!1308 = distinct !DIGlobalVariable(name: "atrac3p_qu_to_subband", scope: !0, file: !983, line: 207, type: !1056, isLocal: true, isDefinition: true, variable: [32 x i8]* @atrac3p_qu_to_subband)
!1309 = distinct !DIGlobalVariable(name: "atrac3p_sf_shapes", scope: !0, file: !983, line: 355, type: !1310, isLocal: true, isDefinition: true, variable: [64 x [9 x i8]]* @atrac3p_sf_shapes)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1301, size: 4608, align: 8, elements: !1311)
!1311 = !{!1011, !1035}
!1312 = distinct !DIGlobalVariable(name: "atrac3p_sf_weights", scope: !0, file: !983, line: 192, type: !1313, isLocal: true, isDefinition: true, variable: [2 x [32 x i8]]* @atrac3p_sf_weights)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1301, size: 512, align: 8, elements: !1314)
!1314 = !{!957, !1058}
!1315 = distinct !DIGlobalVariable(name: "atrac3p_ct_restricted_to_full", scope: !0, file: !983, line: 422, type: !1316, isLocal: true, isDefinition: true, variable: [2 x [7 x [4 x i8]]]* @atrac3p_ct_restricted_to_full)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 448, align: 8, elements: !1317)
!1317 = !{!957, !948, !911}
!1318 = distinct !DIGlobalVariable(name: "atrac3p_subband_to_num_powgrps", scope: !0, file: !983, line: 213, type: !1319, isLocal: true, isDefinition: true, variable: [16 x i32]* @atrac3p_subband_to_num_powgrps)
!1319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 512, align: 32, elements: !1016)
!1320 = !{i32 2, !"Dwarf Version", i32 4}
!1321 = !{i32 2, !"Debug Info Version", i32 3}
!1322 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1323 = !DILocalVariable(name: "i", scope: !903, file: !904, line: 82, type: !888)
!1324 = !DIExpression()
!1325 = !DILocation(line: 82, column: 9, scope: !903)
!1326 = !DILocalVariable(name: "wl_vlc_offs", scope: !903, file: !904, line: 82, type: !888)
!1327 = !DILocation(line: 82, column: 12, scope: !903)
!1328 = !DILocalVariable(name: "ct_vlc_offs", scope: !903, file: !904, line: 82, type: !888)
!1329 = !DILocation(line: 82, column: 25, scope: !903)
!1330 = !DILocalVariable(name: "sf_vlc_offs", scope: !903, file: !904, line: 82, type: !888)
!1331 = !DILocation(line: 82, column: 38, scope: !903)
!1332 = !DILocalVariable(name: "tab_offset", scope: !903, file: !904, line: 82, type: !888)
!1333 = !DILocation(line: 82, column: 51, scope: !903)
!1334 = !DILocation(line: 157, column: 12, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !903, file: !904, line: 157, column: 5)
!1336 = !DILocation(line: 157, column: 29, scope: !1335)
!1337 = !DILocation(line: 157, column: 46, scope: !1335)
!1338 = !DILocation(line: 157, column: 10, scope: !1335)
!1339 = !DILocation(line: 157, column: 54, scope: !1340)
!1340 = !DILexicalBlockFile(scope: !1341, file: !904, discriminator: 1)
!1341 = distinct !DILexicalBlock(scope: !1335, file: !904, line: 157, column: 5)
!1342 = !DILocation(line: 157, column: 56, scope: !1340)
!1343 = !DILocation(line: 157, column: 5, scope: !1340)
!1344 = !DILocation(line: 158, column: 45, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !1341, file: !904, line: 157, column: 66)
!1346 = !DILocation(line: 158, column: 33, scope: !1345)
!1347 = !DILocation(line: 158, column: 21, scope: !1345)
!1348 = !DILocation(line: 158, column: 9, scope: !1345)
!1349 = !DILocation(line: 158, column: 24, scope: !1345)
!1350 = !DILocation(line: 158, column: 30, scope: !1345)
!1351 = !DILocation(line: 159, column: 58, scope: !1345)
!1352 = !DILocation(line: 159, column: 47, scope: !1345)
!1353 = !DILocation(line: 159, column: 44, scope: !1345)
!1354 = !DILocation(line: 159, column: 21, scope: !1345)
!1355 = !DILocation(line: 159, column: 9, scope: !1345)
!1356 = !DILocation(line: 159, column: 24, scope: !1345)
!1357 = !DILocation(line: 159, column: 40, scope: !1345)
!1358 = !DILocation(line: 160, column: 45, scope: !1345)
!1359 = !DILocation(line: 160, column: 33, scope: !1345)
!1360 = !DILocation(line: 160, column: 21, scope: !1345)
!1361 = !DILocation(line: 160, column: 9, scope: !1345)
!1362 = !DILocation(line: 160, column: 24, scope: !1345)
!1363 = !DILocation(line: 160, column: 30, scope: !1345)
!1364 = !DILocation(line: 161, column: 58, scope: !1345)
!1365 = !DILocation(line: 161, column: 47, scope: !1345)
!1366 = !DILocation(line: 161, column: 44, scope: !1345)
!1367 = !DILocation(line: 161, column: 21, scope: !1345)
!1368 = !DILocation(line: 161, column: 9, scope: !1345)
!1369 = !DILocation(line: 161, column: 24, scope: !1345)
!1370 = !DILocation(line: 161, column: 40, scope: !1345)
!1371 = !DILocation(line: 163, column: 41, scope: !1345)
!1372 = !DILocation(line: 163, column: 29, scope: !1345)
!1373 = !DILocation(line: 163, column: 56, scope: !1345)
!1374 = !DILocation(line: 163, column: 45, scope: !1345)
!1375 = !DILocation(line: 163, column: 72, scope: !1345)
!1376 = !DILocation(line: 163, column: 60, scope: !1345)
!1377 = !DILocation(line: 164, column: 36, scope: !1345)
!1378 = !DILocation(line: 164, column: 28, scope: !1345)
!1379 = !DILocation(line: 165, column: 37, scope: !1345)
!1380 = !DILocation(line: 165, column: 28, scope: !1345)
!1381 = !DILocation(line: 166, column: 37, scope: !1345)
!1382 = !DILocation(line: 166, column: 28, scope: !1345)
!1383 = !DILocation(line: 163, column: 9, scope: !1345)
!1384 = !DILocation(line: 169, column: 41, scope: !1345)
!1385 = !DILocation(line: 169, column: 29, scope: !1345)
!1386 = !DILocation(line: 169, column: 56, scope: !1345)
!1387 = !DILocation(line: 169, column: 45, scope: !1345)
!1388 = !DILocation(line: 169, column: 72, scope: !1345)
!1389 = !DILocation(line: 169, column: 60, scope: !1345)
!1390 = !DILocation(line: 170, column: 36, scope: !1345)
!1391 = !DILocation(line: 170, column: 28, scope: !1345)
!1392 = !DILocation(line: 171, column: 37, scope: !1345)
!1393 = !DILocation(line: 171, column: 28, scope: !1345)
!1394 = !DILocation(line: 172, column: 37, scope: !1345)
!1395 = !DILocation(line: 172, column: 28, scope: !1345)
!1396 = !DILocation(line: 169, column: 9, scope: !1345)
!1397 = !DILocation(line: 175, column: 36, scope: !1345)
!1398 = !DILocation(line: 175, column: 24, scope: !1345)
!1399 = !DILocation(line: 175, column: 39, scope: !1345)
!1400 = !DILocation(line: 175, column: 21, scope: !1345)
!1401 = !DILocation(line: 176, column: 36, scope: !1345)
!1402 = !DILocation(line: 176, column: 24, scope: !1345)
!1403 = !DILocation(line: 176, column: 39, scope: !1345)
!1404 = !DILocation(line: 176, column: 21, scope: !1345)
!1405 = !DILocation(line: 177, column: 5, scope: !1345)
!1406 = !DILocation(line: 157, column: 62, scope: !1407)
!1407 = !DILexicalBlockFile(scope: !1341, file: !904, discriminator: 2)
!1408 = !DILocation(line: 157, column: 5, scope: !1407)
!1409 = distinct !{!1409, !1410}
!1410 = !DILocation(line: 157, column: 5, scope: !903)
!1411 = !DILocation(line: 179, column: 12, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !903, file: !904, line: 179, column: 5)
!1413 = !DILocation(line: 179, column: 29, scope: !1412)
!1414 = !DILocation(line: 179, column: 10, scope: !1412)
!1415 = !DILocation(line: 179, column: 35, scope: !1416)
!1416 = !DILexicalBlockFile(scope: !1417, file: !904, discriminator: 1)
!1417 = distinct !DILexicalBlock(scope: !1412, file: !904, line: 179, column: 5)
!1418 = !DILocation(line: 179, column: 37, scope: !1416)
!1419 = !DILocation(line: 179, column: 5, scope: !1416)
!1420 = !DILocation(line: 180, column: 45, scope: !1421)
!1421 = distinct !DILexicalBlock(scope: !1417, file: !904, line: 179, column: 47)
!1422 = !DILocation(line: 180, column: 33, scope: !1421)
!1423 = !DILocation(line: 180, column: 21, scope: !1421)
!1424 = !DILocation(line: 180, column: 9, scope: !1421)
!1425 = !DILocation(line: 180, column: 24, scope: !1421)
!1426 = !DILocation(line: 180, column: 30, scope: !1421)
!1427 = !DILocation(line: 181, column: 58, scope: !1421)
!1428 = !DILocation(line: 181, column: 47, scope: !1421)
!1429 = !DILocation(line: 181, column: 44, scope: !1421)
!1430 = !DILocation(line: 181, column: 21, scope: !1421)
!1431 = !DILocation(line: 181, column: 9, scope: !1421)
!1432 = !DILocation(line: 181, column: 24, scope: !1421)
!1433 = !DILocation(line: 181, column: 40, scope: !1421)
!1434 = !DILocation(line: 183, column: 41, scope: !1421)
!1435 = !DILocation(line: 183, column: 29, scope: !1421)
!1436 = !DILocation(line: 183, column: 56, scope: !1421)
!1437 = !DILocation(line: 183, column: 45, scope: !1421)
!1438 = !DILocation(line: 183, column: 72, scope: !1421)
!1439 = !DILocation(line: 183, column: 60, scope: !1421)
!1440 = !DILocation(line: 184, column: 36, scope: !1421)
!1441 = !DILocation(line: 184, column: 28, scope: !1421)
!1442 = !DILocation(line: 185, column: 37, scope: !1421)
!1443 = !DILocation(line: 185, column: 28, scope: !1421)
!1444 = !DILocation(line: 186, column: 37, scope: !1421)
!1445 = !DILocation(line: 186, column: 28, scope: !1421)
!1446 = !DILocation(line: 183, column: 9, scope: !1421)
!1447 = !DILocation(line: 188, column: 36, scope: !1421)
!1448 = !DILocation(line: 188, column: 24, scope: !1421)
!1449 = !DILocation(line: 188, column: 39, scope: !1421)
!1450 = !DILocation(line: 188, column: 21, scope: !1421)
!1451 = !DILocation(line: 189, column: 5, scope: !1421)
!1452 = !DILocation(line: 179, column: 43, scope: !1453)
!1453 = !DILexicalBlockFile(scope: !1417, file: !904, discriminator: 2)
!1454 = !DILocation(line: 179, column: 5, scope: !1453)
!1455 = distinct !{!1455, !1456}
!1456 = !DILocation(line: 179, column: 5, scope: !903)
!1457 = !DILocation(line: 191, column: 16, scope: !903)
!1458 = !DILocation(line: 194, column: 12, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !903, file: !904, line: 194, column: 5)
!1460 = !DILocation(line: 194, column: 10, scope: !1459)
!1461 = !DILocation(line: 194, column: 17, scope: !1462)
!1462 = !DILexicalBlockFile(scope: !1463, file: !904, discriminator: 1)
!1463 = distinct !DILexicalBlock(scope: !1459, file: !904, line: 194, column: 5)
!1464 = !DILocation(line: 194, column: 19, scope: !1462)
!1465 = !DILocation(line: 194, column: 5, scope: !1462)
!1466 = !DILocation(line: 195, column: 34, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1468, file: !904, line: 195, column: 13)
!1468 = distinct !DILexicalBlock(scope: !1463, file: !904, line: 194, column: 31)
!1469 = !DILocation(line: 195, column: 13, scope: !1467)
!1470 = !DILocation(line: 195, column: 37, scope: !1467)
!1471 = !DILocation(line: 195, column: 13, scope: !1468)
!1472 = !DILocation(line: 196, column: 55, scope: !1467)
!1473 = !DILocation(line: 196, column: 34, scope: !1467)
!1474 = !DILocation(line: 196, column: 58, scope: !1467)
!1475 = !DILocation(line: 197, column: 55, scope: !1467)
!1476 = !DILocation(line: 197, column: 34, scope: !1467)
!1477 = !DILocation(line: 197, column: 58, scope: !1467)
!1478 = !DILocation(line: 198, column: 62, scope: !1467)
!1479 = !DILocation(line: 198, column: 48, scope: !1467)
!1480 = !DILocation(line: 196, column: 13, scope: !1467)
!1481 = !DILocation(line: 200, column: 27, scope: !1467)
!1482 = !DILocation(line: 200, column: 13, scope: !1467)
!1483 = !DILocation(line: 200, column: 30, scope: !1467)
!1484 = !DILocation(line: 200, column: 36, scope: !1467)
!1485 = !DILocation(line: 201, column: 5, scope: !1468)
!1486 = !DILocation(line: 194, column: 27, scope: !1487)
!1487 = !DILexicalBlockFile(scope: !1463, file: !904, discriminator: 2)
!1488 = !DILocation(line: 194, column: 5, scope: !1487)
!1489 = distinct !{!1489, !1490}
!1490 = !DILocation(line: 194, column: 5, scope: !903)
!1491 = !DILocation(line: 204, column: 12, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !903, file: !904, line: 204, column: 5)
!1493 = !DILocation(line: 204, column: 10, scope: !1492)
!1494 = !DILocation(line: 204, column: 17, scope: !1495)
!1495 = !DILexicalBlockFile(scope: !1496, file: !904, discriminator: 1)
!1496 = distinct !DILexicalBlock(scope: !1492, file: !904, line: 204, column: 5)
!1497 = !DILocation(line: 204, column: 19, scope: !1495)
!1498 = !DILocation(line: 204, column: 5, scope: !1495)
!1499 = !DILocation(line: 205, column: 39, scope: !1496)
!1500 = !DILocation(line: 205, column: 30, scope: !1496)
!1501 = !DILocation(line: 205, column: 54, scope: !1496)
!1502 = !DILocation(line: 205, column: 43, scope: !1496)
!1503 = !DILocation(line: 205, column: 86, scope: !1496)
!1504 = !DILocation(line: 205, column: 72, scope: !1496)
!1505 = !DILocation(line: 205, column: 9, scope: !1496)
!1506 = !DILocation(line: 204, column: 26, scope: !1507)
!1507 = !DILexicalBlockFile(scope: !1496, file: !904, discriminator: 2)
!1508 = !DILocation(line: 204, column: 5, scope: !1507)
!1509 = distinct !{!1509, !1510}
!1510 = !DILocation(line: 204, column: 5, scope: !903)
!1511 = !DILocation(line: 208, column: 12, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !903, file: !904, line: 208, column: 5)
!1513 = !DILocation(line: 208, column: 10, scope: !1512)
!1514 = !DILocation(line: 208, column: 17, scope: !1515)
!1515 = !DILexicalBlockFile(scope: !1516, file: !904, discriminator: 1)
!1516 = distinct !DILexicalBlock(scope: !1512, file: !904, line: 208, column: 5)
!1517 = !DILocation(line: 208, column: 19, scope: !1515)
!1518 = !DILocation(line: 208, column: 5, scope: !1515)
!1519 = !DILocation(line: 209, column: 39, scope: !1516)
!1520 = !DILocation(line: 209, column: 30, scope: !1516)
!1521 = !DILocation(line: 209, column: 54, scope: !1516)
!1522 = !DILocation(line: 209, column: 43, scope: !1516)
!1523 = !DILocation(line: 209, column: 86, scope: !1516)
!1524 = !DILocation(line: 209, column: 72, scope: !1516)
!1525 = !DILocation(line: 209, column: 9, scope: !1516)
!1526 = !DILocation(line: 208, column: 25, scope: !1527)
!1527 = !DILexicalBlockFile(scope: !1516, file: !904, discriminator: 2)
!1528 = !DILocation(line: 208, column: 5, scope: !1527)
!1529 = distinct !{!1529, !1530}
!1530 = !DILocation(line: 208, column: 5, scope: !903)
!1531 = !DILocation(line: 210, column: 1, scope: !903)
!1532 = distinct !DISubprogram(name: "build_canonical_huff", scope: !904, file: !904, line: 50, type: !1533, isLocal: true, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{null, !916, !916, !1535, !1536}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64, align: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!1537 = !DILocalVariable(name: "cb", arg: 1, scope: !1532, file: !904, line: 50, type: !916)
!1538 = !DILocation(line: 50, column: 71, scope: !1532)
!1539 = !DILocalVariable(name: "xlat", arg: 2, scope: !1532, file: !904, line: 50, type: !916)
!1540 = !DILocation(line: 50, column: 90, scope: !1532)
!1541 = !DILocalVariable(name: "tab_offset", arg: 3, scope: !1532, file: !904, line: 51, type: !1535)
!1542 = !DILocation(line: 51, column: 47, scope: !1532)
!1543 = !DILocalVariable(name: "out_vlc", arg: 4, scope: !1532, file: !904, line: 51, type: !1536)
!1544 = !DILocation(line: 51, column: 64, scope: !1532)
!1545 = !DILocalVariable(name: "i", scope: !1532, file: !904, line: 53, type: !888)
!1546 = !DILocation(line: 53, column: 9, scope: !1532)
!1547 = !DILocalVariable(name: "b", scope: !1532, file: !904, line: 53, type: !888)
!1548 = !DILocation(line: 53, column: 12, scope: !1532)
!1549 = !DILocalVariable(name: "codes", scope: !1532, file: !904, line: 54, type: !1550)
!1550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 4096, align: 16, elements: !1082)
!1551 = !DILocation(line: 54, column: 14, scope: !1532)
!1552 = !DILocalVariable(name: "bits", scope: !1532, file: !904, line: 55, type: !1553)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 2048, align: 8, elements: !1082)
!1554 = !DILocation(line: 55, column: 13, scope: !1532)
!1555 = !DILocalVariable(name: "code", scope: !1532, file: !904, line: 56, type: !889)
!1556 = !DILocation(line: 56, column: 14, scope: !1532)
!1557 = !DILocalVariable(name: "index", scope: !1532, file: !904, line: 57, type: !888)
!1558 = !DILocation(line: 57, column: 9, scope: !1532)
!1559 = !DILocalVariable(name: "min_len", scope: !1532, file: !904, line: 58, type: !888)
!1560 = !DILocation(line: 58, column: 9, scope: !1532)
!1561 = !DILocation(line: 58, column: 22, scope: !1532)
!1562 = !DILocation(line: 58, column: 19, scope: !1532)
!1563 = !DILocalVariable(name: "max_len", scope: !1532, file: !904, line: 59, type: !888)
!1564 = !DILocation(line: 59, column: 9, scope: !1532)
!1565 = !DILocation(line: 59, column: 22, scope: !1532)
!1566 = !DILocation(line: 59, column: 19, scope: !1532)
!1567 = !DILocation(line: 61, column: 14, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1532, file: !904, line: 61, column: 5)
!1569 = !DILocation(line: 61, column: 12, scope: !1568)
!1570 = !DILocation(line: 61, column: 10, scope: !1568)
!1571 = !DILocation(line: 61, column: 23, scope: !1572)
!1572 = !DILexicalBlockFile(scope: !1573, file: !904, discriminator: 1)
!1573 = distinct !DILexicalBlock(scope: !1568, file: !904, line: 61, column: 5)
!1574 = !DILocation(line: 61, column: 28, scope: !1572)
!1575 = !DILocation(line: 61, column: 25, scope: !1572)
!1576 = !DILocation(line: 61, column: 5, scope: !1572)
!1577 = !DILocation(line: 62, column: 21, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1579, file: !904, line: 62, column: 9)
!1579 = distinct !DILexicalBlock(scope: !1573, file: !904, line: 61, column: 42)
!1580 = !DILocation(line: 62, column: 18, scope: !1578)
!1581 = !DILocation(line: 62, column: 16, scope: !1578)
!1582 = !DILocation(line: 62, column: 14, scope: !1578)
!1583 = !DILocation(line: 62, column: 25, scope: !1584)
!1584 = !DILexicalBlockFile(scope: !1585, file: !904, discriminator: 1)
!1585 = distinct !DILexicalBlock(scope: !1578, file: !904, line: 62, column: 9)
!1586 = !DILocation(line: 62, column: 27, scope: !1584)
!1587 = !DILocation(line: 62, column: 9, scope: !1584)
!1588 = !DILocation(line: 63, column: 13, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1585, file: !904, line: 62, column: 37)
!1590 = distinct !{!1590, !1588}
!1591 = !DILocation(line: 63, column: 24, scope: !1592)
!1592 = !DILexicalBlockFile(scope: !1593, file: !904, discriminator: 1)
!1593 = distinct !DILexicalBlock(scope: !1594, file: !904, line: 63, column: 22)
!1594 = distinct !DILexicalBlock(scope: !1589, file: !904, line: 63, column: 16)
!1595 = !DILocation(line: 63, column: 30, scope: !1592)
!1596 = !DILocation(line: 63, column: 22, scope: !1592)
!1597 = !DILocation(line: 63, column: 40, scope: !1598)
!1598 = !DILexicalBlockFile(scope: !1599, file: !904, discriminator: 2)
!1599 = distinct !DILexicalBlock(scope: !1593, file: !904, line: 63, column: 38)
!1600 = !DILocation(line: 63, column: 98, scope: !1601)
!1601 = !DILexicalBlockFile(scope: !1598, file: !904, discriminator: 4)
!1602 = !DILocation(line: 63, column: 98, scope: !1598)
!1603 = !DILocation(line: 63, column: 109, scope: !1604)
!1604 = !DILexicalBlockFile(scope: !1594, file: !904, discriminator: 3)
!1605 = !DILocation(line: 64, column: 27, scope: !1589)
!1606 = !DILocation(line: 64, column: 18, scope: !1589)
!1607 = !DILocation(line: 64, column: 13, scope: !1589)
!1608 = !DILocation(line: 64, column: 25, scope: !1589)
!1609 = !DILocation(line: 65, column: 32, scope: !1589)
!1610 = !DILocation(line: 65, column: 28, scope: !1589)
!1611 = !DILocation(line: 65, column: 19, scope: !1589)
!1612 = !DILocation(line: 65, column: 13, scope: !1589)
!1613 = !DILocation(line: 65, column: 26, scope: !1589)
!1614 = !DILocation(line: 66, column: 18, scope: !1589)
!1615 = !DILocation(line: 67, column: 9, scope: !1589)
!1616 = !DILocation(line: 62, column: 33, scope: !1617)
!1617 = !DILexicalBlockFile(scope: !1585, file: !904, discriminator: 2)
!1618 = !DILocation(line: 62, column: 9, scope: !1617)
!1619 = distinct !{!1619, !1620}
!1620 = !DILocation(line: 62, column: 9, scope: !1579)
!1621 = !DILocation(line: 68, column: 14, scope: !1579)
!1622 = !DILocation(line: 69, column: 5, scope: !1579)
!1623 = !DILocation(line: 61, column: 38, scope: !1624)
!1624 = !DILexicalBlockFile(scope: !1573, file: !904, discriminator: 2)
!1625 = !DILocation(line: 61, column: 5, scope: !1624)
!1626 = distinct !{!1626, !1627}
!1627 = !DILocation(line: 61, column: 5, scope: !1532)
!1628 = !DILocation(line: 71, column: 36, scope: !1532)
!1629 = !DILocation(line: 71, column: 35, scope: !1532)
!1630 = !DILocation(line: 71, column: 23, scope: !1532)
!1631 = !DILocation(line: 71, column: 5, scope: !1532)
!1632 = !DILocation(line: 71, column: 14, scope: !1532)
!1633 = !DILocation(line: 71, column: 20, scope: !1532)
!1634 = !DILocation(line: 72, column: 37, scope: !1532)
!1635 = !DILocation(line: 72, column: 34, scope: !1532)
!1636 = !DILocation(line: 72, column: 5, scope: !1532)
!1637 = !DILocation(line: 72, column: 14, scope: !1532)
!1638 = !DILocation(line: 72, column: 30, scope: !1532)
!1639 = !DILocation(line: 74, column: 24, scope: !1532)
!1640 = !DILocation(line: 74, column: 33, scope: !1532)
!1641 = !DILocation(line: 74, column: 42, scope: !1532)
!1642 = !DILocation(line: 74, column: 49, scope: !1532)
!1643 = !DILocation(line: 74, column: 61, scope: !1532)
!1644 = !DILocation(line: 75, column: 24, scope: !1532)
!1645 = !DILocation(line: 74, column: 5, scope: !1532)
!1646 = !DILocation(line: 77, column: 25, scope: !1532)
!1647 = !DILocation(line: 77, column: 22, scope: !1532)
!1648 = !DILocation(line: 77, column: 6, scope: !1532)
!1649 = !DILocation(line: 77, column: 17, scope: !1532)
!1650 = !DILocation(line: 78, column: 1, scope: !1532)
!1651 = distinct !DISubprogram(name: "ff_atrac3p_decode_channel_unit", scope: !904, file: !904, line: 1757, type: !1652, isLocal: false, isDefinition: true, scopeLine: 1759, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!888, !1654, !1664, !888, !1782}
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1656, line: 70, baseType: !1657)
!1656 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1656, line: 61, size: 256, align: 64, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1663}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1657, file: !1656, line: 62, baseType: !916, size: 64, align: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1657, file: !1656, line: 62, baseType: !916, size: 64, align: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1657, file: !1656, line: 67, baseType: !888, size: 32, align: 32, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1657, file: !1656, line: 68, baseType: !888, size: 32, align: 32, offset: 160)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1657, file: !1656, line: 69, baseType: !888, size: 32, align: 32, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64, align: 64)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pChanUnitCtx", file: !1666, line: 154, baseType: !1667)
!1666 = !DIFile(filename: "libavcodec/atrac3plus.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pChanUnitCtx", file: !1666, line: 131, size: 295168, align: 256, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1681, !1682, !1741, !1764, !1766, !1767, !1779}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !1667, file: !1666, line: 133, baseType: !888, size: 32, align: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "num_quant_units", scope: !1667, file: !1666, line: 134, baseType: !888, size: 32, align: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "num_subbands", scope: !1667, file: !1666, line: 135, baseType: !888, size: 32, align: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "used_quant_units", scope: !1667, file: !1666, line: 136, baseType: !888, size: 32, align: 32, offset: 96)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "num_coded_subbands", scope: !1667, file: !1666, line: 137, baseType: !888, size: 32, align: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "mute_flag", scope: !1667, file: !1666, line: 138, baseType: !888, size: 32, align: 32, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "use_full_table", scope: !1667, file: !1666, line: 139, baseType: !888, size: 32, align: 32, offset: 192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "noise_present", scope: !1667, file: !1666, line: 140, baseType: !888, size: 32, align: 32, offset: 224)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "noise_level_index", scope: !1667, file: !1666, line: 141, baseType: !888, size: 32, align: 32, offset: 256)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "noise_table_index", scope: !1667, file: !1666, line: 142, baseType: !888, size: 32, align: 32, offset: 288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "swap_channels", scope: !1667, file: !1666, line: 143, baseType: !1680, size: 128, align: 8, offset: 320)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 128, align: 8, elements: !1016)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "negate_coeffs", scope: !1667, file: !1666, line: 144, baseType: !1680, size: 128, align: 8, offset: 448)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1667, file: !1666, line: 145, baseType: !1683, size: 124800, align: 64, offset: 576)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1684, size: 124800, align: 64, elements: !968)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pChanParams", file: !1666, line: 116, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pChanParams", file: !1666, line: 89, size: 62400, align: 64, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1694, !1695, !1696, !1700, !1702, !1705, !1707, !1708, !1718, !1720, !1721, !1722, !1738, !1740}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ch_num", scope: !1685, file: !1666, line: 90, baseType: !888, size: 32, align: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "num_coded_vals", scope: !1685, file: !1666, line: 91, baseType: !888, size: 32, align: 32, offset: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "fill_mode", scope: !1685, file: !1666, line: 92, baseType: !888, size: 32, align: 32, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "split_point", scope: !1685, file: !1666, line: 93, baseType: !888, size: 32, align: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "table_type", scope: !1685, file: !1666, line: 94, baseType: !888, size: 32, align: 32, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "qu_wordlen", scope: !1685, file: !1666, line: 95, baseType: !1693, size: 1024, align: 32, offset: 160)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 1024, align: 32, elements: !1057)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "qu_sf_idx", scope: !1685, file: !1666, line: 96, baseType: !1693, size: 1024, align: 32, offset: 1184)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "qu_tab_idx", scope: !1685, file: !1666, line: 97, baseType: !1693, size: 1024, align: 32, offset: 2208)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum", scope: !1685, file: !1666, line: 98, baseType: !1697, size: 32768, align: 16, offset: 3232)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 32768, align: 16, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 2048)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "power_levs", scope: !1685, file: !1666, line: 99, baseType: !1701, size: 40, align: 8, offset: 36000)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 40, align: 8, elements: !989)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "wnd_shape_hist", scope: !1685, file: !1666, line: 102, baseType: !1703, size: 256, align: 8, offset: 36040)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 256, align: 8, elements: !1704)
!1704 = !{!957, !1017}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "wnd_shape", scope: !1685, file: !1666, line: 103, baseType: !1706, size: 64, align: 64, offset: 36352)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64, align: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "wnd_shape_prev", scope: !1685, file: !1666, line: 104, baseType: !1706, size: 64, align: 64, offset: 36416)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "gain_data_hist", scope: !1685, file: !1666, line: 107, baseType: !1709, size: 15360, align: 32, offset: 36480)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 15360, align: 32, elements: !1704)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "AtracGainInfo", file: !1711, line: 39, baseType: !1712)
!1711 = !DIFile(filename: "libavcodec/atrac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AtracGainInfo", file: !1711, line: 35, size: 480, align: 32, elements: !1713)
!1713 = !{!1714, !1715, !1717}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "num_points", scope: !1712, file: !1711, line: 36, baseType: !888, size: 32, align: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "lev_code", scope: !1712, file: !1711, line: 37, baseType: !1716, size: 224, align: 32, offset: 32)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 224, align: 32, elements: !947)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "loc_code", scope: !1712, file: !1711, line: 38, baseType: !1716, size: 224, align: 32, offset: 256)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "gain_data", scope: !1685, file: !1666, line: 108, baseType: !1719, size: 64, align: 64, offset: 51840)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "gain_data_prev", scope: !1685, file: !1666, line: 109, baseType: !1719, size: 64, align: 64, offset: 51904)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "num_gain_subbands", scope: !1685, file: !1666, line: 110, baseType: !888, size: 32, align: 32, offset: 51968)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "tones_info_hist", scope: !1685, file: !1666, line: 113, baseType: !1723, size: 10240, align: 32, offset: 52000)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1724, size: 10240, align: 32, elements: !1704)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWavesData", file: !1666, line: 78, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWavesData", file: !1666, line: 73, size: 320, align: 32, elements: !1726)
!1726 = !{!1727, !1735, !1736, !1737}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "pend_env", scope: !1725, file: !1666, line: 74, baseType: !1728, size: 128, align: 32)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWaveEnvelope", file: !1666, line: 70, baseType: !1729)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWaveEnvelope", file: !1666, line: 65, size: 128, align: 32, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "has_start_point", scope: !1729, file: !1666, line: 66, baseType: !888, size: 32, align: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "has_stop_point", scope: !1729, file: !1666, line: 67, baseType: !888, size: 32, align: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "start_pos", scope: !1729, file: !1666, line: 68, baseType: !888, size: 32, align: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "stop_pos", scope: !1729, file: !1666, line: 69, baseType: !888, size: 32, align: 32, offset: 96)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "curr_env", scope: !1725, file: !1666, line: 75, baseType: !1728, size: 128, align: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "num_wavs", scope: !1725, file: !1666, line: 76, baseType: !888, size: 32, align: 32, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "start_index", scope: !1725, file: !1666, line: 77, baseType: !888, size: 32, align: 32, offset: 288)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "tones_info", scope: !1685, file: !1666, line: 114, baseType: !1739, size: 64, align: 64, offset: 62272)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64, align: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "tones_info_prev", scope: !1685, file: !1666, line: 115, baseType: !1739, size: 64, align: 64, offset: 62336)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "wave_synth_hist", scope: !1667, file: !1666, line: 148, baseType: !1742, size: 13312, align: 32, offset: 125376)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1743, size: 13312, align: 32, elements: !968)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWaveSynthParams", file: !1666, line: 128, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWaveSynthParams", file: !1666, line: 119, size: 6656, align: 32, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "tones_present", scope: !1744, file: !1666, line: 120, baseType: !888, size: 32, align: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude_mode", scope: !1744, file: !1666, line: 121, baseType: !888, size: 32, align: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "num_tone_bands", scope: !1744, file: !1666, line: 122, baseType: !888, size: 32, align: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "tone_sharing", scope: !1744, file: !1666, line: 123, baseType: !1680, size: 128, align: 8, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "tone_master", scope: !1744, file: !1666, line: 124, baseType: !1680, size: 128, align: 8, offset: 224)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "invert_phase", scope: !1744, file: !1666, line: 125, baseType: !1680, size: 128, align: 8, offset: 352)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "tones_index", scope: !1744, file: !1666, line: 126, baseType: !888, size: 32, align: 32, offset: 480)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "waves", scope: !1744, file: !1666, line: 127, baseType: !1754, size: 6144, align: 32, offset: 512)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1755, size: 6144, align: 32, elements: !1762)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWaveParam", file: !1666, line: 86, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWaveParam", file: !1666, line: 81, size: 128, align: 32, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "freq_index", scope: !1756, file: !1666, line: 82, baseType: !888, size: 32, align: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "amp_sf", scope: !1756, file: !1666, line: 83, baseType: !888, size: 32, align: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "amp_index", scope: !1756, file: !1666, line: 84, baseType: !888, size: 32, align: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "phase_index", scope: !1756, file: !1666, line: 85, baseType: !888, size: 32, align: 32, offset: 96)
!1762 = !{!1763}
!1763 = !DISubrange(count: 48)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "waves_info", scope: !1667, file: !1666, line: 149, baseType: !1765, size: 64, align: 64, offset: 138688)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64, align: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "waves_info_prev", scope: !1667, file: !1666, line: 150, baseType: !1765, size: 64, align: 64, offset: 138752)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ipqf_ctx", scope: !1667, file: !1666, line: 152, baseType: !1768, size: 25088, align: 256, offset: 139008)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1769, size: 25088, align: 256, elements: !968)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pIPQFChannelCtx", file: !1666, line: 62, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pIPQFChannelCtx", file: !1666, line: 58, size: 12544, align: 256, elements: !1771)
!1771 = !{!1772, !1777, !1778}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "buf1", scope: !1770, file: !1666, line: 59, baseType: !1773, size: 6144, align: 32)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1774, size: 6144, align: 32, elements: !1775)
!1774 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1775 = !{!1776, !928}
!1776 = !DISubrange(count: 24)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "buf2", scope: !1770, file: !1666, line: 60, baseType: !1773, size: 6144, align: 32, offset: 6144)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1770, file: !1666, line: 61, baseType: !888, size: 32, align: 32, offset: 12288)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "prev_buf", scope: !1667, file: !1666, line: 153, baseType: !1780, size: 131072, align: 32, offset: 164096)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1774, size: 131072, align: 32, elements: !1781)
!1781 = !{!957, !1699}
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64, align: 64)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1785)
!1785 = !{!1786, !1830, !1831, !1832, !2088, !2089, !2090, !2091, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2117, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2300, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1784, file: !35, line: 1561, baseType: !1787, size: 64, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64, align: 64)
!1788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1789)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1791)
!1791 = !{!1792, !1796, !1800, !1804, !1805, !1806, !1807, !1811, !1817, !1819, !1823}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1790, file: !4, line: 72, baseType: !1793, size: 64, align: 64)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64, align: 64)
!1794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1795)
!1795 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1790, file: !4, line: 78, baseType: !1797, size: 64, align: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64, align: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!1793, !890}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1790, file: !4, line: 85, baseType: !1801, size: 64, align: 64, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64, align: 64)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1790, file: !4, line: 93, baseType: !888, size: 32, align: 32, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1790, file: !4, line: 99, baseType: !888, size: 32, align: 32, offset: 224)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1790, file: !4, line: 108, baseType: !888, size: 32, align: 32, offset: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1790, file: !4, line: 113, baseType: !1808, size: 64, align: 64, offset: 320)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!890, !890, !890}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1790, file: !4, line: 123, baseType: !1812, size: 64, align: 64, offset: 384)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64, align: 64)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!1815, !1815}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64, align: 64)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1790)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1790, file: !4, line: 130, baseType: !1818, size: 32, align: 32, offset: 448)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1790, file: !4, line: 136, baseType: !1820, size: 64, align: 64, offset: 512)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64, align: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!1818, !890}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1790, file: !4, line: 142, baseType: !1824, size: 64, align: 64, offset: 576)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64, align: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!888, !1827, !890, !1793, !888}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64, align: 64)
!1829 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1784, file: !35, line: 1562, baseType: !888, size: 32, align: 32, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1784, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1784, file: !35, line: 1565, baseType: !1833, size: 64, align: 64, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64, align: 64)
!1834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1840, !1841, !1842, !1851, !1854, !1856, !1859, !1864, !1865, !1866, !1874, !1875, !1876, !1878, !1882, !1888, !1893, !1897, !1898, !1941, !2059, !2063, !2064, !2068, !2072, !2077, !2081, !2082, !2083}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1835, file: !35, line: 3475, baseType: !1793, size: 64, align: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1835, file: !35, line: 3480, baseType: !1793, size: 64, align: 64, offset: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1835, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1835, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1835, file: !35, line: 3487, baseType: !888, size: 32, align: 32, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1835, file: !35, line: 3488, baseType: !1843, size: 64, align: 64, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64, align: 64)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1846, line: 61, baseType: !1847)
!1846 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1846, line: 58, size: 64, align: 32, elements: !1848)
!1848 = !{!1849, !1850}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1847, file: !1846, line: 59, baseType: !888, size: 32, align: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1847, file: !1846, line: 60, baseType: !888, size: 32, align: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1835, file: !35, line: 3489, baseType: !1852, size: 64, align: 64, offset: 320)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64, align: 64)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1835, file: !35, line: 3490, baseType: !1855, size: 64, align: 64, offset: 384)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64, align: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1835, file: !35, line: 3491, baseType: !1857, size: 64, align: 64, offset: 448)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1835, file: !35, line: 3492, baseType: !1860, size: 64, align: 64, offset: 512)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64, align: 64)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1862)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !898, line: 55, baseType: !1863)
!1863 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1835, file: !35, line: 3493, baseType: !899, size: 8, align: 8, offset: 576)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1835, file: !35, line: 3494, baseType: !1787, size: 64, align: 64, offset: 640)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1835, file: !35, line: 3495, baseType: !1867, size: 64, align: 64, offset: 704)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64, align: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1871)
!1871 = !{!1872, !1873}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1870, file: !35, line: 3402, baseType: !888, size: 32, align: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1870, file: !35, line: 3403, baseType: !1793, size: 64, align: 64, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1835, file: !35, line: 3507, baseType: !1793, size: 64, align: 64, offset: 768)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1835, file: !35, line: 3516, baseType: !888, size: 32, align: 32, offset: 832)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1835, file: !35, line: 3517, baseType: !1877, size: 64, align: 64, offset: 896)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64, align: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1835, file: !35, line: 3527, baseType: !1879, size: 64, align: 64, offset: 960)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64, align: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!888, !1782}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1835, file: !35, line: 3535, baseType: !1883, size: 64, align: 64, offset: 1024)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64, align: 64)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!888, !1782, !1886}
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64, align: 64)
!1887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1835, file: !35, line: 3541, baseType: !1889, size: 64, align: 64, offset: 1088)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64, align: 64)
!1890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1892)
!1892 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !35, line: 3461, flags: DIFlagFwdDecl)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1835, file: !35, line: 3549, baseType: !1894, size: 64, align: 64, offset: 1152)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64, align: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{null, !1877}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1835, file: !35, line: 3551, baseType: !1879, size: 64, align: 64, offset: 1216)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1835, file: !35, line: 3552, baseType: !1899, size: 64, align: 64, offset: 1280)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64, align: 64)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!888, !1782, !1706, !888, !1902}
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64, align: 64)
!1903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1938}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1904, file: !35, line: 3921, baseType: !937, size: 16, align: 16)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1904, file: !35, line: 3922, baseType: !897, size: 32, align: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1904, file: !35, line: 3923, baseType: !897, size: 32, align: 32, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1904, file: !35, line: 3924, baseType: !889, size: 32, align: 32, offset: 96)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1904, file: !35, line: 3925, baseType: !1911, size: 64, align: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64, align: 64)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64, align: 64)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1914)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1915)
!1915 = !{!1916, !1917, !1918, !1919, !1920, !1921, !1929, !1931, !1933, !1934, !1936, !1937}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1914, file: !35, line: 3886, baseType: !888, size: 32, align: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1914, file: !35, line: 3887, baseType: !888, size: 32, align: 32, offset: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1914, file: !35, line: 3888, baseType: !888, size: 32, align: 32, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1914, file: !35, line: 3889, baseType: !888, size: 32, align: 32, offset: 96)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1914, file: !35, line: 3890, baseType: !888, size: 32, align: 32, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1914, file: !35, line: 3897, baseType: !1922, size: 768, align: 64, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1924)
!1924 = !{!1925, !1927}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1923, file: !35, line: 3855, baseType: !1926, size: 512, align: 64)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1706, size: 512, align: 64, elements: !927)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1923, file: !35, line: 3857, baseType: !1928, size: 256, align: 32, offset: 512)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 256, align: 32, elements: !927)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1914, file: !35, line: 3903, baseType: !1930, size: 256, align: 64, offset: 960)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1706, size: 256, align: 64, elements: !910)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1914, file: !35, line: 3904, baseType: !1932, size: 128, align: 32, offset: 1216)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 128, align: 32, elements: !910)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1914, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1914, file: !35, line: 3908, baseType: !1935, size: 64, align: 64, offset: 1408)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1914, file: !35, line: 3915, baseType: !1935, size: 64, align: 64, offset: 1472)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1914, file: !35, line: 3917, baseType: !888, size: 32, align: 32, offset: 1536)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1904, file: !35, line: 3926, baseType: !1939, size: 64, align: 64, offset: 192)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !953, line: 197, baseType: !1940)
!1940 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1835, file: !35, line: 3564, baseType: !1942, size: 64, align: 64, offset: 1344)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64, align: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!888, !1782, !1945, !1979, !1535}
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64, align: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1948)
!1948 = !{!1949, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1975, !1976, !1977, !1978}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1947, file: !35, line: 1451, baseType: !1950, size: 64, align: 64)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64, align: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1952, line: 94, baseType: !1953)
!1952 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1952, line: 81, size: 192, align: 64, elements: !1954)
!1954 = !{!1955, !1959, !1960}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1953, file: !1952, line: 82, baseType: !1956, size: 64, align: 64)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64, align: 64)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1952, line: 73, baseType: !1958)
!1958 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1952, line: 73, flags: DIFlagFwdDecl)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1953, file: !1952, line: 89, baseType: !1706, size: 64, align: 64, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1953, file: !1952, line: 93, baseType: !888, size: 32, align: 32, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1947, file: !35, line: 1461, baseType: !1939, size: 64, align: 64, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1947, file: !35, line: 1467, baseType: !1939, size: 64, align: 64, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1947, file: !35, line: 1468, baseType: !1706, size: 64, align: 64, offset: 192)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1947, file: !35, line: 1469, baseType: !888, size: 32, align: 32, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1947, file: !35, line: 1470, baseType: !888, size: 32, align: 32, offset: 288)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1947, file: !35, line: 1474, baseType: !888, size: 32, align: 32, offset: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1947, file: !35, line: 1479, baseType: !1968, size: 64, align: 64, offset: 384)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64, align: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1971)
!1971 = !{!1972, !1973, !1974}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1970, file: !35, line: 1412, baseType: !1706, size: 64, align: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1970, file: !35, line: 1413, baseType: !888, size: 32, align: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1970, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1947, file: !35, line: 1480, baseType: !888, size: 32, align: 32, offset: 448)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1947, file: !35, line: 1486, baseType: !1939, size: 64, align: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1947, file: !35, line: 1488, baseType: !1939, size: 64, align: 64, offset: 576)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1947, file: !35, line: 1497, baseType: !1939, size: 64, align: 64, offset: 640)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64, align: 64)
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1982)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2013, !2015, !2016, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2047, !2048, !2049, !2050, !2051, !2052, !2055, !2056, !2057, !2058}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1982, file: !758, line: 282, baseType: !1926, size: 512, align: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1982, file: !758, line: 299, baseType: !1928, size: 256, align: 32, offset: 512)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1982, file: !758, line: 315, baseType: !1987, size: 64, align: 64, offset: 768)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64, align: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1982, file: !758, line: 326, baseType: !888, size: 32, align: 32, offset: 832)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1982, file: !758, line: 326, baseType: !888, size: 32, align: 32, offset: 864)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1982, file: !758, line: 334, baseType: !888, size: 32, align: 32, offset: 896)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1982, file: !758, line: 341, baseType: !888, size: 32, align: 32, offset: 928)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1982, file: !758, line: 346, baseType: !888, size: 32, align: 32, offset: 960)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1982, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1982, file: !758, line: 356, baseType: !1845, size: 64, align: 32, offset: 1024)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1982, file: !758, line: 361, baseType: !1939, size: 64, align: 64, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1982, file: !758, line: 369, baseType: !1939, size: 64, align: 64, offset: 1152)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1982, file: !758, line: 377, baseType: !1939, size: 64, align: 64, offset: 1216)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1982, file: !758, line: 382, baseType: !888, size: 32, align: 32, offset: 1280)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1982, file: !758, line: 386, baseType: !888, size: 32, align: 32, offset: 1312)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1982, file: !758, line: 391, baseType: !888, size: 32, align: 32, offset: 1344)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1982, file: !758, line: 396, baseType: !890, size: 64, align: 64, offset: 1408)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1982, file: !758, line: 403, baseType: !2003, size: 512, align: 64, offset: 1472)
!2003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 512, align: 64, elements: !927)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1982, file: !758, line: 410, baseType: !888, size: 32, align: 32, offset: 1984)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1982, file: !758, line: 415, baseType: !888, size: 32, align: 32, offset: 2016)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1982, file: !758, line: 420, baseType: !888, size: 32, align: 32, offset: 2048)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1982, file: !758, line: 425, baseType: !888, size: 32, align: 32, offset: 2080)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1982, file: !758, line: 435, baseType: !1939, size: 64, align: 64, offset: 2112)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1982, file: !758, line: 440, baseType: !888, size: 32, align: 32, offset: 2176)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1982, file: !758, line: 445, baseType: !1862, size: 64, align: 64, offset: 2240)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1982, file: !758, line: 459, baseType: !2012, size: 512, align: 64, offset: 2304)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1950, size: 512, align: 64, elements: !927)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1982, file: !758, line: 473, baseType: !2014, size: 64, align: 64, offset: 2816)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64, align: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1982, file: !758, line: 477, baseType: !888, size: 32, align: 32, offset: 2880)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1982, file: !758, line: 479, baseType: !2017, size: 64, align: 64, offset: 2944)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64, align: 64)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64, align: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2030}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2020, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2020, file: !758, line: 203, baseType: !1706, size: 64, align: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2020, file: !758, line: 204, baseType: !888, size: 32, align: 32, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2020, file: !758, line: 205, baseType: !2026, size: 64, align: 64, offset: 192)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64, align: 64)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !2028, line: 86, baseType: !2029)
!2028 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2029 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !2028, line: 86, flags: DIFlagFwdDecl)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2020, file: !758, line: 206, baseType: !1950, size: 64, align: 64, offset: 256)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1982, file: !758, line: 480, baseType: !888, size: 32, align: 32, offset: 3008)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1982, file: !758, line: 505, baseType: !888, size: 32, align: 32, offset: 3040)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1982, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1982, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1982, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1982, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1982, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1982, file: !758, line: 532, baseType: !1939, size: 64, align: 64, offset: 3264)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1982, file: !758, line: 539, baseType: !1939, size: 64, align: 64, offset: 3328)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1982, file: !758, line: 547, baseType: !1939, size: 64, align: 64, offset: 3392)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1982, file: !758, line: 554, baseType: !2026, size: 64, align: 64, offset: 3456)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1982, file: !758, line: 563, baseType: !888, size: 32, align: 32, offset: 3520)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1982, file: !758, line: 572, baseType: !888, size: 32, align: 32, offset: 3552)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1982, file: !758, line: 581, baseType: !888, size: 32, align: 32, offset: 3584)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1982, file: !758, line: 588, baseType: !2046, size: 64, align: 64, offset: 3648)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64, align: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1982, file: !758, line: 593, baseType: !888, size: 32, align: 32, offset: 3712)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1982, file: !758, line: 596, baseType: !888, size: 32, align: 32, offset: 3744)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1982, file: !758, line: 599, baseType: !1950, size: 64, align: 64, offset: 3776)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1982, file: !758, line: 605, baseType: !1950, size: 64, align: 64, offset: 3840)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1982, file: !758, line: 616, baseType: !1950, size: 64, align: 64, offset: 3904)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1982, file: !758, line: 626, baseType: !2053, size: 64, align: 64, offset: 3968)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2054, line: 216, baseType: !1863)
!2054 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1982, file: !758, line: 627, baseType: !2053, size: 64, align: 64, offset: 4032)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1982, file: !758, line: 628, baseType: !2053, size: 64, align: 64, offset: 4096)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1982, file: !758, line: 629, baseType: !2053, size: 64, align: 64, offset: 4160)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1982, file: !758, line: 645, baseType: !1950, size: 64, align: 64, offset: 4224)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1835, file: !35, line: 3566, baseType: !2060, size: 64, align: 64, offset: 1408)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64, align: 64)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!888, !1782, !890, !1535, !1945}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1835, file: !35, line: 3567, baseType: !1879, size: 64, align: 64, offset: 1472)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1835, file: !35, line: 3576, baseType: !2065, size: 64, align: 64, offset: 1536)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64, align: 64)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!888, !1782, !1979}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1835, file: !35, line: 3577, baseType: !2069, size: 64, align: 64, offset: 1600)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64, align: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!888, !1782, !1945}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1835, file: !35, line: 3584, baseType: !2073, size: 64, align: 64, offset: 1664)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64, align: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!888, !1782, !2076}
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64, align: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1835, file: !35, line: 3589, baseType: !2078, size: 64, align: 64, offset: 1728)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64, align: 64)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{null, !1782}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1835, file: !35, line: 3594, baseType: !888, size: 32, align: 32, offset: 1792)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1835, file: !35, line: 3600, baseType: !1793, size: 64, align: 64, offset: 1856)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1835, file: !35, line: 3609, baseType: !2084, size: 64, align: 64, offset: 1920)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64, align: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64, align: 64)
!2086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2087)
!2087 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1784, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1784, file: !35, line: 1581, baseType: !889, size: 32, align: 32, offset: 224)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1784, file: !35, line: 1583, baseType: !890, size: 64, align: 64, offset: 256)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1784, file: !35, line: 1591, baseType: !2092, size: 64, align: 64, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64, align: 64)
!2093 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !35, line: 1532, flags: DIFlagFwdDecl)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1784, file: !35, line: 1598, baseType: !890, size: 64, align: 64, offset: 384)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1784, file: !35, line: 1606, baseType: !1939, size: 64, align: 64, offset: 448)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1784, file: !35, line: 1614, baseType: !888, size: 32, align: 32, offset: 512)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1784, file: !35, line: 1622, baseType: !888, size: 32, align: 32, offset: 544)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1784, file: !35, line: 1628, baseType: !888, size: 32, align: 32, offset: 576)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1784, file: !35, line: 1636, baseType: !888, size: 32, align: 32, offset: 608)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1784, file: !35, line: 1643, baseType: !888, size: 32, align: 32, offset: 640)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1784, file: !35, line: 1657, baseType: !1706, size: 64, align: 64, offset: 704)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1784, file: !35, line: 1658, baseType: !888, size: 32, align: 32, offset: 768)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1784, file: !35, line: 1679, baseType: !1845, size: 64, align: 32, offset: 800)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1784, file: !35, line: 1688, baseType: !888, size: 32, align: 32, offset: 864)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1784, file: !35, line: 1712, baseType: !888, size: 32, align: 32, offset: 896)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1784, file: !35, line: 1729, baseType: !888, size: 32, align: 32, offset: 928)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1784, file: !35, line: 1729, baseType: !888, size: 32, align: 32, offset: 960)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1784, file: !35, line: 1744, baseType: !888, size: 32, align: 32, offset: 992)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1784, file: !35, line: 1744, baseType: !888, size: 32, align: 32, offset: 1024)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1784, file: !35, line: 1751, baseType: !888, size: 32, align: 32, offset: 1056)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1784, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1784, file: !35, line: 1791, baseType: !2113, size: 64, align: 64, offset: 1152)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64, align: 64)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !2116, !1979, !1535, !888, !888, !888}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1784, file: !35, line: 1808, baseType: !2118, size: 64, align: 64, offset: 1216)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64, align: 64)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{!494, !2116, !1852}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1784, file: !35, line: 1816, baseType: !888, size: 32, align: 32, offset: 1280)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1784, file: !35, line: 1825, baseType: !1774, size: 32, align: 32, offset: 1312)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1784, file: !35, line: 1830, baseType: !888, size: 32, align: 32, offset: 1344)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1784, file: !35, line: 1838, baseType: !1774, size: 32, align: 32, offset: 1376)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1784, file: !35, line: 1846, baseType: !888, size: 32, align: 32, offset: 1408)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1784, file: !35, line: 1851, baseType: !888, size: 32, align: 32, offset: 1440)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1784, file: !35, line: 1861, baseType: !1774, size: 32, align: 32, offset: 1472)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1784, file: !35, line: 1868, baseType: !1774, size: 32, align: 32, offset: 1504)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1784, file: !35, line: 1875, baseType: !1774, size: 32, align: 32, offset: 1536)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1784, file: !35, line: 1882, baseType: !1774, size: 32, align: 32, offset: 1568)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1784, file: !35, line: 1889, baseType: !1774, size: 32, align: 32, offset: 1600)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1784, file: !35, line: 1896, baseType: !1774, size: 32, align: 32, offset: 1632)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1784, file: !35, line: 1903, baseType: !1774, size: 32, align: 32, offset: 1664)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1784, file: !35, line: 1910, baseType: !888, size: 32, align: 32, offset: 1696)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1784, file: !35, line: 1915, baseType: !888, size: 32, align: 32, offset: 1728)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1784, file: !35, line: 1926, baseType: !1535, size: 64, align: 64, offset: 1792)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1784, file: !35, line: 1935, baseType: !1845, size: 64, align: 32, offset: 1856)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1784, file: !35, line: 1942, baseType: !888, size: 32, align: 32, offset: 1920)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1784, file: !35, line: 1948, baseType: !888, size: 32, align: 32, offset: 1952)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1784, file: !35, line: 1954, baseType: !888, size: 32, align: 32, offset: 1984)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1784, file: !35, line: 1960, baseType: !888, size: 32, align: 32, offset: 2016)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1784, file: !35, line: 1984, baseType: !888, size: 32, align: 32, offset: 2048)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1784, file: !35, line: 1991, baseType: !888, size: 32, align: 32, offset: 2080)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1784, file: !35, line: 1996, baseType: !888, size: 32, align: 32, offset: 2112)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1784, file: !35, line: 2004, baseType: !888, size: 32, align: 32, offset: 2144)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1784, file: !35, line: 2011, baseType: !888, size: 32, align: 32, offset: 2176)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1784, file: !35, line: 2018, baseType: !888, size: 32, align: 32, offset: 2208)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1784, file: !35, line: 2027, baseType: !888, size: 32, align: 32, offset: 2240)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1784, file: !35, line: 2034, baseType: !888, size: 32, align: 32, offset: 2272)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1784, file: !35, line: 2044, baseType: !888, size: 32, align: 32, offset: 2304)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1784, file: !35, line: 2054, baseType: !2152, size: 64, align: 64, offset: 2368)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1784, file: !35, line: 2061, baseType: !2152, size: 64, align: 64, offset: 2432)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1784, file: !35, line: 2066, baseType: !888, size: 32, align: 32, offset: 2496)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1784, file: !35, line: 2070, baseType: !888, size: 32, align: 32, offset: 2528)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1784, file: !35, line: 2078, baseType: !888, size: 32, align: 32, offset: 2560)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1784, file: !35, line: 2085, baseType: !888, size: 32, align: 32, offset: 2592)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1784, file: !35, line: 2092, baseType: !888, size: 32, align: 32, offset: 2624)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1784, file: !35, line: 2099, baseType: !888, size: 32, align: 32, offset: 2656)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1784, file: !35, line: 2106, baseType: !888, size: 32, align: 32, offset: 2688)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1784, file: !35, line: 2113, baseType: !888, size: 32, align: 32, offset: 2720)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1784, file: !35, line: 2120, baseType: !888, size: 32, align: 32, offset: 2752)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1784, file: !35, line: 2125, baseType: !888, size: 32, align: 32, offset: 2784)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1784, file: !35, line: 2133, baseType: !888, size: 32, align: 32, offset: 2816)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1784, file: !35, line: 2140, baseType: !888, size: 32, align: 32, offset: 2848)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1784, file: !35, line: 2145, baseType: !888, size: 32, align: 32, offset: 2880)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1784, file: !35, line: 2153, baseType: !888, size: 32, align: 32, offset: 2912)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1784, file: !35, line: 2158, baseType: !888, size: 32, align: 32, offset: 2944)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1784, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1784, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1784, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1784, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1784, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1784, file: !35, line: 2203, baseType: !888, size: 32, align: 32, offset: 3136)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1784, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1784, file: !35, line: 2212, baseType: !888, size: 32, align: 32, offset: 3200)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1784, file: !35, line: 2213, baseType: !888, size: 32, align: 32, offset: 3232)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1784, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1784, file: !35, line: 2232, baseType: !888, size: 32, align: 32, offset: 3296)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1784, file: !35, line: 2243, baseType: !888, size: 32, align: 32, offset: 3328)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1784, file: !35, line: 2249, baseType: !888, size: 32, align: 32, offset: 3360)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1784, file: !35, line: 2256, baseType: !888, size: 32, align: 32, offset: 3392)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1784, file: !35, line: 2263, baseType: !1862, size: 64, align: 64, offset: 3456)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1784, file: !35, line: 2270, baseType: !1862, size: 64, align: 64, offset: 3520)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1784, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1784, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1784, file: !35, line: 2367, baseType: !2188, size: 64, align: 64, offset: 3648)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64, align: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{!888, !2116, !2076, !888}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1784, file: !35, line: 2383, baseType: !888, size: 32, align: 32, offset: 3712)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1784, file: !35, line: 2386, baseType: !1774, size: 32, align: 32, offset: 3744)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1784, file: !35, line: 2387, baseType: !1774, size: 32, align: 32, offset: 3776)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1784, file: !35, line: 2394, baseType: !888, size: 32, align: 32, offset: 3808)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1784, file: !35, line: 2401, baseType: !888, size: 32, align: 32, offset: 3840)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1784, file: !35, line: 2408, baseType: !888, size: 32, align: 32, offset: 3872)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1784, file: !35, line: 2415, baseType: !888, size: 32, align: 32, offset: 3904)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1784, file: !35, line: 2422, baseType: !888, size: 32, align: 32, offset: 3936)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1784, file: !35, line: 2423, baseType: !2200, size: 64, align: 64, offset: 3968)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64, align: 64)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !2202)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !2203)
!2203 = !{!2204, !2205, !2206, !2207}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2202, file: !35, line: 827, baseType: !888, size: 32, align: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2202, file: !35, line: 828, baseType: !888, size: 32, align: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2202, file: !35, line: 829, baseType: !888, size: 32, align: 32, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !2202, file: !35, line: 830, baseType: !1774, size: 32, align: 32, offset: 96)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1784, file: !35, line: 2430, baseType: !1939, size: 64, align: 64, offset: 4032)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1784, file: !35, line: 2437, baseType: !1939, size: 64, align: 64, offset: 4096)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1784, file: !35, line: 2444, baseType: !1774, size: 32, align: 32, offset: 4160)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1784, file: !35, line: 2451, baseType: !1774, size: 32, align: 32, offset: 4192)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1784, file: !35, line: 2458, baseType: !888, size: 32, align: 32, offset: 4224)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1784, file: !35, line: 2469, baseType: !888, size: 32, align: 32, offset: 4256)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1784, file: !35, line: 2475, baseType: !888, size: 32, align: 32, offset: 4288)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1784, file: !35, line: 2481, baseType: !888, size: 32, align: 32, offset: 4320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1784, file: !35, line: 2485, baseType: !888, size: 32, align: 32, offset: 4352)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1784, file: !35, line: 2489, baseType: !888, size: 32, align: 32, offset: 4384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1784, file: !35, line: 2493, baseType: !888, size: 32, align: 32, offset: 4416)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1784, file: !35, line: 2501, baseType: !888, size: 32, align: 32, offset: 4448)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1784, file: !35, line: 2506, baseType: !888, size: 32, align: 32, offset: 4480)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1784, file: !35, line: 2510, baseType: !888, size: 32, align: 32, offset: 4512)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1784, file: !35, line: 2514, baseType: !1939, size: 64, align: 64, offset: 4544)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1784, file: !35, line: 2528, baseType: !2224, size: 64, align: 64, offset: 4608)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64, align: 64)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{null, !2116, !890, !888, !888}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1784, file: !35, line: 2534, baseType: !888, size: 32, align: 32, offset: 4672)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1784, file: !35, line: 2545, baseType: !888, size: 32, align: 32, offset: 4704)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1784, file: !35, line: 2547, baseType: !888, size: 32, align: 32, offset: 4736)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1784, file: !35, line: 2549, baseType: !888, size: 32, align: 32, offset: 4768)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1784, file: !35, line: 2551, baseType: !888, size: 32, align: 32, offset: 4800)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1784, file: !35, line: 2553, baseType: !888, size: 32, align: 32, offset: 4832)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1784, file: !35, line: 2555, baseType: !888, size: 32, align: 32, offset: 4864)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1784, file: !35, line: 2557, baseType: !888, size: 32, align: 32, offset: 4896)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1784, file: !35, line: 2559, baseType: !888, size: 32, align: 32, offset: 4928)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1784, file: !35, line: 2563, baseType: !888, size: 32, align: 32, offset: 4960)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1784, file: !35, line: 2571, baseType: !1935, size: 64, align: 64, offset: 4992)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1784, file: !35, line: 2579, baseType: !1935, size: 64, align: 64, offset: 5056)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1784, file: !35, line: 2586, baseType: !888, size: 32, align: 32, offset: 5120)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1784, file: !35, line: 2615, baseType: !888, size: 32, align: 32, offset: 5152)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1784, file: !35, line: 2627, baseType: !888, size: 32, align: 32, offset: 5184)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1784, file: !35, line: 2637, baseType: !888, size: 32, align: 32, offset: 5216)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1784, file: !35, line: 2681, baseType: !888, size: 32, align: 32, offset: 5248)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1784, file: !35, line: 2709, baseType: !1939, size: 64, align: 64, offset: 5312)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1784, file: !35, line: 2716, baseType: !2246, size: 64, align: 64, offset: 5376)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64, align: 64)
!2247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !2249)
!2249 = !{!2250, !2251, !2252, !2253, !2254, !2255, !2256, !2260, !2264, !2265, !2266, !2267, !2273, !2274, !2275, !2276, !2277}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2248, file: !35, line: 3642, baseType: !1793, size: 64, align: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2248, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2248, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !2248, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2248, file: !35, line: 3669, baseType: !888, size: 32, align: 32, offset: 160)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !2248, file: !35, line: 3682, baseType: !2073, size: 64, align: 64, offset: 192)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2248, file: !35, line: 3698, baseType: !2257, size: 64, align: 64, offset: 256)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64, align: 64)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{!888, !1782, !916, !897}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !2248, file: !35, line: 3712, baseType: !2261, size: 64, align: 64, offset: 320)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64, align: 64)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!888, !1782, !888, !916, !897}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !2248, file: !35, line: 3726, baseType: !2257, size: 64, align: 64, offset: 384)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2248, file: !35, line: 3737, baseType: !1879, size: 64, align: 64, offset: 448)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !2248, file: !35, line: 3746, baseType: !888, size: 32, align: 32, offset: 512)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2248, file: !35, line: 3757, baseType: !2268, size: 64, align: 64, offset: 576)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64, align: 64)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{null, !2271}
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64, align: 64)
!2272 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2248, file: !35, line: 3766, baseType: !1879, size: 64, align: 64, offset: 640)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2248, file: !35, line: 3774, baseType: !1879, size: 64, align: 64, offset: 704)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2248, file: !35, line: 3780, baseType: !888, size: 32, align: 32, offset: 768)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !2248, file: !35, line: 3785, baseType: !888, size: 32, align: 32, offset: 800)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !2248, file: !35, line: 3795, baseType: !2278, size: 64, align: 64, offset: 832)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64, align: 64)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!888, !1782, !1950}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1784, file: !35, line: 2728, baseType: !890, size: 64, align: 64, offset: 5440)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1784, file: !35, line: 2735, baseType: !2003, size: 512, align: 64, offset: 5504)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1784, file: !35, line: 2742, baseType: !888, size: 32, align: 32, offset: 6016)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1784, file: !35, line: 2755, baseType: !888, size: 32, align: 32, offset: 6048)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1784, file: !35, line: 2776, baseType: !888, size: 32, align: 32, offset: 6080)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1784, file: !35, line: 2783, baseType: !888, size: 32, align: 32, offset: 6112)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1784, file: !35, line: 2791, baseType: !888, size: 32, align: 32, offset: 6144)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1784, file: !35, line: 2802, baseType: !2076, size: 64, align: 64, offset: 6208)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1784, file: !35, line: 2811, baseType: !888, size: 32, align: 32, offset: 6272)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1784, file: !35, line: 2821, baseType: !888, size: 32, align: 32, offset: 6304)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1784, file: !35, line: 2830, baseType: !888, size: 32, align: 32, offset: 6336)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1784, file: !35, line: 2840, baseType: !888, size: 32, align: 32, offset: 6368)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1784, file: !35, line: 2851, baseType: !2294, size: 64, align: 64, offset: 6400)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64, align: 64)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!888, !2116, !2297, !890, !1535, !888, !888}
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64, align: 64)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{!888, !2116, !890}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1784, file: !35, line: 2871, baseType: !2301, size: 64, align: 64, offset: 6464)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64, align: 64)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!888, !2116, !2304, !890, !1535, !888}
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64, align: 64)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!888, !2116, !890, !888, !888}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1784, file: !35, line: 2878, baseType: !888, size: 32, align: 32, offset: 6528)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1784, file: !35, line: 2885, baseType: !888, size: 32, align: 32, offset: 6560)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1784, file: !35, line: 3005, baseType: !888, size: 32, align: 32, offset: 6592)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1784, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1784, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1784, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1784, file: !35, line: 3037, baseType: !1706, size: 64, align: 64, offset: 6720)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1784, file: !35, line: 3038, baseType: !888, size: 32, align: 32, offset: 6784)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1784, file: !35, line: 3050, baseType: !1862, size: 64, align: 64, offset: 6848)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1784, file: !35, line: 3065, baseType: !888, size: 32, align: 32, offset: 6912)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1784, file: !35, line: 3083, baseType: !888, size: 32, align: 32, offset: 6944)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1784, file: !35, line: 3092, baseType: !1845, size: 64, align: 32, offset: 6976)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1784, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1784, file: !35, line: 3106, baseType: !1845, size: 64, align: 32, offset: 7072)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1784, file: !35, line: 3113, baseType: !2322, size: 64, align: 64, offset: 7168)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64, align: 64)
!2323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2324)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2335}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2325, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2325, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2325, file: !35, line: 720, baseType: !1793, size: 64, align: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2325, file: !35, line: 724, baseType: !1793, size: 64, align: 64, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2325, file: !35, line: 728, baseType: !888, size: 32, align: 32, offset: 192)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2325, file: !35, line: 734, baseType: !2333, size: 64, align: 64, offset: 256)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64, align: 64)
!2334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2325, file: !35, line: 739, baseType: !2336, size: 64, align: 64, offset: 320)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64, align: 64)
!2337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1784, file: !35, line: 3129, baseType: !1939, size: 64, align: 64, offset: 7232)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1784, file: !35, line: 3130, baseType: !1939, size: 64, align: 64, offset: 7296)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1784, file: !35, line: 3131, baseType: !1939, size: 64, align: 64, offset: 7360)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1784, file: !35, line: 3132, baseType: !1939, size: 64, align: 64, offset: 7424)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1784, file: !35, line: 3139, baseType: !1935, size: 64, align: 64, offset: 7488)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1784, file: !35, line: 3147, baseType: !888, size: 32, align: 32, offset: 7552)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1784, file: !35, line: 3165, baseType: !888, size: 32, align: 32, offset: 7584)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1784, file: !35, line: 3172, baseType: !888, size: 32, align: 32, offset: 7616)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1784, file: !35, line: 3180, baseType: !888, size: 32, align: 32, offset: 7648)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1784, file: !35, line: 3191, baseType: !2152, size: 64, align: 64, offset: 7680)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1784, file: !35, line: 3199, baseType: !1706, size: 64, align: 64, offset: 7744)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1784, file: !35, line: 3207, baseType: !1935, size: 64, align: 64, offset: 7808)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1784, file: !35, line: 3214, baseType: !889, size: 32, align: 32, offset: 7872)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1784, file: !35, line: 3224, baseType: !1968, size: 64, align: 64, offset: 7936)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1784, file: !35, line: 3225, baseType: !888, size: 32, align: 32, offset: 8000)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1784, file: !35, line: 3249, baseType: !1950, size: 64, align: 64, offset: 8064)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1784, file: !35, line: 3256, baseType: !888, size: 32, align: 32, offset: 8128)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1784, file: !35, line: 3271, baseType: !888, size: 32, align: 32, offset: 8160)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1784, file: !35, line: 3279, baseType: !1939, size: 64, align: 64, offset: 8192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1784, file: !35, line: 3301, baseType: !1950, size: 64, align: 64, offset: 8256)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1784, file: !35, line: 3310, baseType: !888, size: 32, align: 32, offset: 8320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1784, file: !35, line: 3337, baseType: !888, size: 32, align: 32, offset: 8352)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1784, file: !35, line: 3351, baseType: !888, size: 32, align: 32, offset: 8384)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1784, file: !35, line: 3359, baseType: !888, size: 32, align: 32, offset: 8416)
!2362 = !DILocalVariable(name: "gb", arg: 1, scope: !1651, file: !904, line: 1757, type: !1654)
!2363 = !DILocation(line: 1757, column: 51, scope: !1651)
!2364 = !DILocalVariable(name: "ctx", arg: 2, scope: !1651, file: !904, line: 1757, type: !1664)
!2365 = !DILocation(line: 1757, column: 75, scope: !1651)
!2366 = !DILocalVariable(name: "num_channels", arg: 3, scope: !1651, file: !904, line: 1758, type: !888)
!2367 = !DILocation(line: 1758, column: 40, scope: !1651)
!2368 = !DILocalVariable(name: "avctx", arg: 4, scope: !1651, file: !904, line: 1758, type: !1782)
!2369 = !DILocation(line: 1758, column: 70, scope: !1651)
!2370 = !DILocalVariable(name: "ret", scope: !1651, file: !904, line: 1760, type: !888)
!2371 = !DILocation(line: 1760, column: 9, scope: !1651)
!2372 = !DILocation(line: 1763, column: 37, scope: !1651)
!2373 = !DILocation(line: 1763, column: 28, scope: !1651)
!2374 = !DILocation(line: 1763, column: 44, scope: !1651)
!2375 = !DILocation(line: 1763, column: 5, scope: !1651)
!2376 = !DILocation(line: 1763, column: 10, scope: !1651)
!2377 = !DILocation(line: 1763, column: 26, scope: !1651)
!2378 = !DILocation(line: 1764, column: 9, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1764, column: 9)
!2380 = !DILocation(line: 1764, column: 14, scope: !2379)
!2381 = !DILocation(line: 1764, column: 30, scope: !2379)
!2382 = !DILocation(line: 1764, column: 35, scope: !2379)
!2383 = !DILocation(line: 1764, column: 38, scope: !2384)
!2384 = !DILexicalBlockFile(scope: !2379, file: !904, discriminator: 1)
!2385 = !DILocation(line: 1764, column: 43, scope: !2384)
!2386 = !DILocation(line: 1764, column: 59, scope: !2384)
!2387 = !DILocation(line: 1764, column: 9, scope: !2384)
!2388 = !DILocation(line: 1765, column: 16, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2379, file: !904, line: 1764, column: 65)
!2390 = !DILocation(line: 1767, column: 16, scope: !2389)
!2391 = !DILocation(line: 1767, column: 21, scope: !2389)
!2392 = !DILocation(line: 1765, column: 9, scope: !2389)
!2393 = !DILocation(line: 1768, column: 9, scope: !2389)
!2394 = !DILocation(line: 1771, column: 32, scope: !1651)
!2395 = !DILocation(line: 1771, column: 22, scope: !1651)
!2396 = !DILocation(line: 1771, column: 5, scope: !1651)
!2397 = !DILocation(line: 1771, column: 10, scope: !1651)
!2398 = !DILocation(line: 1771, column: 20, scope: !1651)
!2399 = !DILocation(line: 1774, column: 37, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1774, column: 9)
!2401 = !DILocation(line: 1774, column: 41, scope: !2400)
!2402 = !DILocation(line: 1774, column: 46, scope: !2400)
!2403 = !DILocation(line: 1774, column: 60, scope: !2400)
!2404 = !DILocation(line: 1774, column: 16, scope: !2400)
!2405 = !DILocation(line: 1774, column: 14, scope: !2400)
!2406 = !DILocation(line: 1774, column: 68, scope: !2400)
!2407 = !DILocation(line: 1774, column: 9, scope: !1651)
!2408 = !DILocation(line: 1775, column: 16, scope: !2400)
!2409 = !DILocation(line: 1775, column: 9, scope: !2400)
!2410 = !DILocation(line: 1777, column: 47, scope: !1651)
!2411 = !DILocation(line: 1777, column: 52, scope: !1651)
!2412 = !DILocation(line: 1777, column: 68, scope: !1651)
!2413 = !DILocation(line: 1777, column: 25, scope: !1651)
!2414 = !DILocation(line: 1777, column: 73, scope: !1651)
!2415 = !DILocation(line: 1777, column: 5, scope: !1651)
!2416 = !DILocation(line: 1777, column: 10, scope: !1651)
!2417 = !DILocation(line: 1777, column: 23, scope: !1651)
!2418 = !DILocation(line: 1778, column: 31, scope: !1651)
!2419 = !DILocation(line: 1778, column: 36, scope: !1651)
!2420 = !DILocation(line: 1779, column: 55, scope: !1651)
!2421 = !DILocation(line: 1779, column: 60, scope: !1651)
!2422 = !DILocation(line: 1779, column: 77, scope: !1651)
!2423 = !DILocation(line: 1779, column: 33, scope: !1651)
!2424 = !DILocation(line: 1779, column: 82, scope: !1651)
!2425 = !DILocation(line: 1778, column: 31, scope: !2426)
!2426 = !DILexicalBlockFile(scope: !1651, file: !904, discriminator: 1)
!2427 = !DILocation(line: 1778, column: 31, scope: !2428)
!2428 = !DILexicalBlockFile(scope: !1651, file: !904, discriminator: 2)
!2429 = !DILocation(line: 1778, column: 31, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !1651, file: !904, discriminator: 3)
!2431 = !DILocation(line: 1778, column: 5, scope: !2430)
!2432 = !DILocation(line: 1778, column: 10, scope: !2430)
!2433 = !DILocation(line: 1778, column: 29, scope: !2430)
!2434 = !DILocation(line: 1782, column: 37, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1782, column: 9)
!2436 = !DILocation(line: 1782, column: 41, scope: !2435)
!2437 = !DILocation(line: 1782, column: 46, scope: !2435)
!2438 = !DILocation(line: 1782, column: 60, scope: !2435)
!2439 = !DILocation(line: 1782, column: 16, scope: !2435)
!2440 = !DILocation(line: 1782, column: 14, scope: !2435)
!2441 = !DILocation(line: 1782, column: 68, scope: !2435)
!2442 = !DILocation(line: 1782, column: 9, scope: !1651)
!2443 = !DILocation(line: 1783, column: 16, scope: !2435)
!2444 = !DILocation(line: 1783, column: 9, scope: !2435)
!2445 = !DILocation(line: 1785, column: 42, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1785, column: 9)
!2447 = !DILocation(line: 1785, column: 46, scope: !2446)
!2448 = !DILocation(line: 1785, column: 51, scope: !2446)
!2449 = !DILocation(line: 1785, column: 65, scope: !2446)
!2450 = !DILocation(line: 1785, column: 16, scope: !2446)
!2451 = !DILocation(line: 1785, column: 14, scope: !2446)
!2452 = !DILocation(line: 1785, column: 73, scope: !2446)
!2453 = !DILocation(line: 1785, column: 9, scope: !1651)
!2454 = !DILocation(line: 1786, column: 16, scope: !2446)
!2455 = !DILocation(line: 1786, column: 9, scope: !2446)
!2456 = !DILocation(line: 1788, column: 21, scope: !1651)
!2457 = !DILocation(line: 1788, column: 25, scope: !1651)
!2458 = !DILocation(line: 1788, column: 30, scope: !1651)
!2459 = !DILocation(line: 1788, column: 44, scope: !1651)
!2460 = !DILocation(line: 1788, column: 5, scope: !1651)
!2461 = !DILocation(line: 1790, column: 9, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1790, column: 9)
!2463 = !DILocation(line: 1790, column: 22, scope: !2462)
!2464 = !DILocation(line: 1790, column: 9, scope: !1651)
!2465 = !DILocation(line: 1791, column: 27, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2462, file: !904, line: 1790, column: 28)
!2467 = !DILocation(line: 1791, column: 31, scope: !2466)
!2468 = !DILocation(line: 1791, column: 36, scope: !2466)
!2469 = !DILocation(line: 1791, column: 51, scope: !2466)
!2470 = !DILocation(line: 1791, column: 56, scope: !2466)
!2471 = !DILocation(line: 1791, column: 9, scope: !2466)
!2472 = !DILocation(line: 1792, column: 27, scope: !2466)
!2473 = !DILocation(line: 1792, column: 31, scope: !2466)
!2474 = !DILocation(line: 1792, column: 36, scope: !2466)
!2475 = !DILocation(line: 1792, column: 51, scope: !2466)
!2476 = !DILocation(line: 1792, column: 56, scope: !2466)
!2477 = !DILocation(line: 1792, column: 9, scope: !2466)
!2478 = !DILocation(line: 1793, column: 5, scope: !2466)
!2479 = !DILocation(line: 1795, column: 25, scope: !1651)
!2480 = !DILocation(line: 1795, column: 29, scope: !1651)
!2481 = !DILocation(line: 1795, column: 34, scope: !1651)
!2482 = !DILocation(line: 1795, column: 5, scope: !1651)
!2483 = !DILocation(line: 1797, column: 34, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1797, column: 9)
!2485 = !DILocation(line: 1797, column: 38, scope: !2484)
!2486 = !DILocation(line: 1797, column: 43, scope: !2484)
!2487 = !DILocation(line: 1797, column: 57, scope: !2484)
!2488 = !DILocation(line: 1797, column: 16, scope: !2484)
!2489 = !DILocation(line: 1797, column: 14, scope: !2484)
!2490 = !DILocation(line: 1797, column: 65, scope: !2484)
!2491 = !DILocation(line: 1797, column: 9, scope: !1651)
!2492 = !DILocation(line: 1798, column: 16, scope: !2484)
!2493 = !DILocation(line: 1798, column: 9, scope: !2484)
!2494 = !DILocation(line: 1800, column: 34, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1800, column: 9)
!2496 = !DILocation(line: 1800, column: 38, scope: !2495)
!2497 = !DILocation(line: 1800, column: 43, scope: !2495)
!2498 = !DILocation(line: 1800, column: 57, scope: !2495)
!2499 = !DILocation(line: 1800, column: 16, scope: !2495)
!2500 = !DILocation(line: 1800, column: 14, scope: !2495)
!2501 = !DILocation(line: 1800, column: 65, scope: !2495)
!2502 = !DILocation(line: 1800, column: 9, scope: !1651)
!2503 = !DILocation(line: 1801, column: 16, scope: !2495)
!2504 = !DILocation(line: 1801, column: 9, scope: !2495)
!2505 = !DILocation(line: 1804, column: 36, scope: !1651)
!2506 = !DILocation(line: 1804, column: 26, scope: !1651)
!2507 = !DILocation(line: 1804, column: 5, scope: !1651)
!2508 = !DILocation(line: 1804, column: 10, scope: !1651)
!2509 = !DILocation(line: 1804, column: 24, scope: !1651)
!2510 = !DILocation(line: 1805, column: 9, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !1651, file: !904, line: 1805, column: 9)
!2512 = !DILocation(line: 1805, column: 14, scope: !2511)
!2513 = !DILocation(line: 1805, column: 9, scope: !1651)
!2514 = !DILocation(line: 1806, column: 43, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2511, file: !904, line: 1805, column: 29)
!2516 = !DILocation(line: 1806, column: 34, scope: !2515)
!2517 = !DILocation(line: 1806, column: 9, scope: !2515)
!2518 = !DILocation(line: 1806, column: 14, scope: !2515)
!2519 = !DILocation(line: 1806, column: 32, scope: !2515)
!2520 = !DILocation(line: 1807, column: 43, scope: !2515)
!2521 = !DILocation(line: 1807, column: 34, scope: !2515)
!2522 = !DILocation(line: 1807, column: 9, scope: !2515)
!2523 = !DILocation(line: 1807, column: 14, scope: !2515)
!2524 = !DILocation(line: 1807, column: 32, scope: !2515)
!2525 = !DILocation(line: 1808, column: 5, scope: !2515)
!2526 = !DILocation(line: 1810, column: 5, scope: !1651)
!2527 = !DILocation(line: 1811, column: 1, scope: !1651)
!2528 = distinct !DISubprogram(name: "get_bits", scope: !1656, file: !1656, line: 381, type: !2529, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!889, !1654, !888}
!2531 = !DILocalVariable(name: "x", arg: 1, scope: !2532, file: !2533, line: 66, type: !897)
!2532 = distinct !DISubprogram(name: "av_bswap32", scope: !2533, file: !2533, line: 66, type: !2534, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!2533 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!897, !897}
!2536 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !2537)
!2537 = distinct !DILocation(line: 401, column: 16, scope: !2528)
!2538 = !DILocalVariable(name: "s", arg: 1, scope: !2528, file: !1656, line: 381, type: !1654)
!2539 = !DILocation(line: 381, column: 52, scope: !2528)
!2540 = !DILocalVariable(name: "n", arg: 2, scope: !2528, file: !1656, line: 381, type: !888)
!2541 = !DILocation(line: 381, column: 59, scope: !2528)
!2542 = !DILocalVariable(name: "tmp", scope: !2528, file: !1656, line: 383, type: !888)
!2543 = !DILocation(line: 383, column: 18, scope: !2528)
!2544 = !DILocalVariable(name: "re_index", scope: !2528, file: !1656, line: 399, type: !889)
!2545 = !DILocation(line: 399, column: 18, scope: !2528)
!2546 = !DILocation(line: 399, column: 30, scope: !2528)
!2547 = !DILocation(line: 399, column: 34, scope: !2528)
!2548 = !DILocalVariable(name: "re_cache", scope: !2528, file: !1656, line: 399, type: !889)
!2549 = !DILocation(line: 399, column: 78, scope: !2528)
!2550 = !DILocalVariable(name: "re_size_plus8", scope: !2528, file: !1656, line: 399, type: !889)
!2551 = !DILocation(line: 399, column: 101, scope: !2528)
!2552 = !DILocation(line: 399, column: 118, scope: !2528)
!2553 = !DILocation(line: 399, column: 122, scope: !2528)
!2554 = !DILocation(line: 401, column: 60, scope: !2528)
!2555 = !DILocation(line: 401, column: 64, scope: !2528)
!2556 = !DILocation(line: 401, column: 74, scope: !2528)
!2557 = !DILocation(line: 401, column: 83, scope: !2528)
!2558 = !DILocation(line: 401, column: 71, scope: !2528)
!2559 = !DILocation(line: 401, column: 92, scope: !2528)
!2560 = !DILocation(line: 401, column: 16, scope: !2528)
!2561 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !2537)
!2562 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !2537)
!2563 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !2537)
!2564 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !2537)
!2565 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !2537)
!2566 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !2537)
!2567 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !2537)
!2568 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !2537)
!2569 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !2537)
!2570 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !2537)
!2571 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !2537)
!2572 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !2537)
!2573 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !2537)
!2574 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !2537)
!2575 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !2537)
!2576 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !2537)
!2577 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !2537)
!2578 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !2537)
!2579 = !DILocation(line: 401, column: 100, scope: !2528)
!2580 = !DILocation(line: 401, column: 109, scope: !2528)
!2581 = !DILocation(line: 401, column: 96, scope: !2528)
!2582 = !DILocation(line: 401, column: 14, scope: !2528)
!2583 = !DILocation(line: 402, column: 21, scope: !2528)
!2584 = !DILocation(line: 402, column: 31, scope: !2528)
!2585 = !DILocation(line: 402, column: 11, scope: !2528)
!2586 = !DILocation(line: 402, column: 9, scope: !2528)
!2587 = !DILocation(line: 403, column: 18, scope: !2528)
!2588 = !DILocation(line: 403, column: 36, scope: !2528)
!2589 = !DILocation(line: 403, column: 48, scope: !2528)
!2590 = !DILocation(line: 403, column: 45, scope: !2528)
!2591 = !DILocation(line: 403, column: 33, scope: !2528)
!2592 = !DILocation(line: 403, column: 17, scope: !2528)
!2593 = !DILocation(line: 403, column: 55, scope: !2594)
!2594 = !DILexicalBlockFile(scope: !2528, file: !1656, discriminator: 1)
!2595 = !DILocation(line: 403, column: 67, scope: !2594)
!2596 = !DILocation(line: 403, column: 64, scope: !2594)
!2597 = !DILocation(line: 403, column: 17, scope: !2594)
!2598 = !DILocation(line: 403, column: 74, scope: !2599)
!2599 = !DILexicalBlockFile(scope: !2528, file: !1656, discriminator: 2)
!2600 = !DILocation(line: 403, column: 17, scope: !2599)
!2601 = !DILocation(line: 403, column: 17, scope: !2602)
!2602 = !DILexicalBlockFile(scope: !2528, file: !1656, discriminator: 3)
!2603 = !DILocation(line: 403, column: 14, scope: !2602)
!2604 = !DILocation(line: 404, column: 18, scope: !2528)
!2605 = !DILocation(line: 404, column: 6, scope: !2528)
!2606 = !DILocation(line: 404, column: 10, scope: !2528)
!2607 = !DILocation(line: 404, column: 16, scope: !2528)
!2608 = !DILocation(line: 406, column: 12, scope: !2528)
!2609 = !DILocation(line: 406, column: 5, scope: !2528)
!2610 = distinct !DISubprogram(name: "get_bits1", scope: !1656, file: !1656, line: 487, type: !2611, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!889, !1654}
!2613 = !DILocalVariable(name: "s", arg: 1, scope: !2610, file: !1656, line: 487, type: !1654)
!2614 = !DILocation(line: 487, column: 53, scope: !2610)
!2615 = !DILocalVariable(name: "index", scope: !2610, file: !1656, line: 499, type: !889)
!2616 = !DILocation(line: 499, column: 18, scope: !2610)
!2617 = !DILocation(line: 499, column: 26, scope: !2610)
!2618 = !DILocation(line: 499, column: 29, scope: !2610)
!2619 = !DILocalVariable(name: "result", scope: !2610, file: !1656, line: 500, type: !899)
!2620 = !DILocation(line: 500, column: 13, scope: !2610)
!2621 = !DILocation(line: 500, column: 32, scope: !2610)
!2622 = !DILocation(line: 500, column: 38, scope: !2610)
!2623 = !DILocation(line: 500, column: 22, scope: !2610)
!2624 = !DILocation(line: 500, column: 25, scope: !2610)
!2625 = !DILocation(line: 505, column: 16, scope: !2610)
!2626 = !DILocation(line: 505, column: 22, scope: !2610)
!2627 = !DILocation(line: 505, column: 12, scope: !2610)
!2628 = !DILocation(line: 506, column: 12, scope: !2610)
!2629 = !DILocation(line: 509, column: 9, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2610, file: !1656, line: 509, column: 9)
!2631 = !DILocation(line: 509, column: 12, scope: !2630)
!2632 = !DILocation(line: 509, column: 20, scope: !2630)
!2633 = !DILocation(line: 509, column: 23, scope: !2630)
!2634 = !DILocation(line: 509, column: 18, scope: !2630)
!2635 = !DILocation(line: 509, column: 9, scope: !2610)
!2636 = !DILocation(line: 511, column: 14, scope: !2630)
!2637 = !DILocation(line: 511, column: 9, scope: !2630)
!2638 = !DILocation(line: 512, column: 16, scope: !2610)
!2639 = !DILocation(line: 512, column: 5, scope: !2610)
!2640 = !DILocation(line: 512, column: 8, scope: !2610)
!2641 = !DILocation(line: 512, column: 14, scope: !2610)
!2642 = !DILocation(line: 514, column: 12, scope: !2610)
!2643 = !DILocation(line: 514, column: 5, scope: !2610)
!2644 = distinct !DISubprogram(name: "decode_quant_wordlen", scope: !904, file: !904, line: 613, type: !1652, isLocal: true, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!2645 = !DILocalVariable(name: "gb", arg: 1, scope: !2644, file: !904, line: 613, type: !1654)
!2646 = !DILocation(line: 613, column: 48, scope: !2644)
!2647 = !DILocalVariable(name: "ctx", arg: 2, scope: !2644, file: !904, line: 613, type: !1664)
!2648 = !DILocation(line: 613, column: 72, scope: !2644)
!2649 = !DILocalVariable(name: "num_channels", arg: 3, scope: !2644, file: !904, line: 614, type: !888)
!2650 = !DILocation(line: 614, column: 37, scope: !2644)
!2651 = !DILocalVariable(name: "avctx", arg: 4, scope: !2644, file: !904, line: 614, type: !1782)
!2652 = !DILocation(line: 614, column: 67, scope: !2644)
!2653 = !DILocalVariable(name: "ch_num", scope: !2644, file: !904, line: 616, type: !888)
!2654 = !DILocation(line: 616, column: 9, scope: !2644)
!2655 = !DILocalVariable(name: "i", scope: !2644, file: !904, line: 616, type: !888)
!2656 = !DILocation(line: 616, column: 17, scope: !2644)
!2657 = !DILocalVariable(name: "ret", scope: !2644, file: !904, line: 616, type: !888)
!2658 = !DILocation(line: 616, column: 20, scope: !2644)
!2659 = !DILocation(line: 618, column: 17, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2644, file: !904, line: 618, column: 5)
!2661 = !DILocation(line: 618, column: 10, scope: !2660)
!2662 = !DILocation(line: 618, column: 22, scope: !2663)
!2663 = !DILexicalBlockFile(scope: !2664, file: !904, discriminator: 1)
!2664 = distinct !DILexicalBlock(scope: !2660, file: !904, line: 618, column: 5)
!2665 = !DILocation(line: 618, column: 31, scope: !2663)
!2666 = !DILocation(line: 618, column: 29, scope: !2663)
!2667 = !DILocation(line: 618, column: 5, scope: !2663)
!2668 = !DILocation(line: 619, column: 30, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2664, file: !904, line: 618, column: 55)
!2670 = !DILocation(line: 619, column: 16, scope: !2669)
!2671 = !DILocation(line: 619, column: 21, scope: !2669)
!2672 = !DILocation(line: 619, column: 38, scope: !2669)
!2673 = !DILocation(line: 619, column: 9, scope: !2669)
!2674 = !DILocation(line: 622, column: 43, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2669, file: !904, line: 622, column: 13)
!2676 = !DILocation(line: 622, column: 47, scope: !2675)
!2677 = !DILocation(line: 622, column: 52, scope: !2675)
!2678 = !DILocation(line: 622, column: 60, scope: !2675)
!2679 = !DILocation(line: 622, column: 20, scope: !2675)
!2680 = !DILocation(line: 622, column: 18, scope: !2675)
!2681 = !DILocation(line: 622, column: 68, scope: !2675)
!2682 = !DILocation(line: 622, column: 13, scope: !2669)
!2683 = !DILocation(line: 623, column: 20, scope: !2675)
!2684 = !DILocation(line: 623, column: 13, scope: !2675)
!2685 = !DILocation(line: 624, column: 5, scope: !2669)
!2686 = !DILocation(line: 618, column: 51, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !2664, file: !904, discriminator: 2)
!2688 = !DILocation(line: 618, column: 5, scope: !2687)
!2689 = distinct !{!2689, !2690}
!2690 = !DILocation(line: 618, column: 5, scope: !2644)
!2691 = !DILocation(line: 628, column: 14, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2644, file: !904, line: 628, column: 5)
!2693 = !DILocation(line: 628, column: 19, scope: !2692)
!2694 = !DILocation(line: 628, column: 35, scope: !2692)
!2695 = !DILocation(line: 628, column: 12, scope: !2692)
!2696 = !DILocation(line: 628, column: 10, scope: !2692)
!2697 = !DILocation(line: 628, column: 40, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !2699, file: !904, discriminator: 1)
!2699 = distinct !DILexicalBlock(scope: !2692, file: !904, line: 628, column: 5)
!2700 = !DILocation(line: 628, column: 42, scope: !2698)
!2701 = !DILocation(line: 628, column: 5, scope: !2698)
!2702 = !DILocation(line: 629, column: 41, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2699, file: !904, line: 629, column: 13)
!2704 = !DILocation(line: 629, column: 13, scope: !2703)
!2705 = !DILocation(line: 629, column: 18, scope: !2703)
!2706 = !DILocation(line: 629, column: 30, scope: !2703)
!2707 = !DILocation(line: 629, column: 44, scope: !2703)
!2708 = !DILocation(line: 630, column: 14, scope: !2703)
!2709 = !DILocation(line: 630, column: 27, scope: !2703)
!2710 = !DILocation(line: 630, column: 32, scope: !2703)
!2711 = !DILocation(line: 630, column: 63, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2703, file: !904, discriminator: 1)
!2713 = !DILocation(line: 630, column: 35, scope: !2712)
!2714 = !DILocation(line: 630, column: 40, scope: !2712)
!2715 = !DILocation(line: 630, column: 52, scope: !2712)
!2716 = !DILocation(line: 629, column: 13, scope: !2698)
!2717 = !DILocation(line: 631, column: 13, scope: !2703)
!2718 = !DILocation(line: 630, column: 65, scope: !2719)
!2719 = !DILexicalBlockFile(scope: !2703, file: !904, discriminator: 2)
!2720 = !DILocation(line: 628, column: 49, scope: !2721)
!2721 = !DILexicalBlockFile(scope: !2699, file: !904, discriminator: 2)
!2722 = !DILocation(line: 628, column: 5, scope: !2721)
!2723 = distinct !{!2723, !2724}
!2724 = !DILocation(line: 628, column: 5, scope: !2644)
!2725 = !DILocation(line: 632, column: 29, scope: !2644)
!2726 = !DILocation(line: 632, column: 31, scope: !2644)
!2727 = !DILocation(line: 632, column: 5, scope: !2644)
!2728 = !DILocation(line: 632, column: 10, scope: !2644)
!2729 = !DILocation(line: 632, column: 27, scope: !2644)
!2730 = !DILocation(line: 634, column: 5, scope: !2644)
!2731 = !DILocation(line: 635, column: 1, scope: !2644)
!2732 = distinct !DISubprogram(name: "decode_scale_factors", scope: !904, file: !904, line: 646, type: !1652, isLocal: true, isDefinition: true, scopeLine: 648, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!2733 = !DILocalVariable(name: "gb", arg: 1, scope: !2732, file: !904, line: 646, type: !1654)
!2734 = !DILocation(line: 646, column: 48, scope: !2732)
!2735 = !DILocalVariable(name: "ctx", arg: 2, scope: !2732, file: !904, line: 646, type: !1664)
!2736 = !DILocation(line: 646, column: 72, scope: !2732)
!2737 = !DILocalVariable(name: "num_channels", arg: 3, scope: !2732, file: !904, line: 647, type: !888)
!2738 = !DILocation(line: 647, column: 37, scope: !2732)
!2739 = !DILocalVariable(name: "avctx", arg: 4, scope: !2732, file: !904, line: 647, type: !1782)
!2740 = !DILocation(line: 647, column: 67, scope: !2732)
!2741 = !DILocalVariable(name: "ch_num", scope: !2732, file: !904, line: 649, type: !888)
!2742 = !DILocation(line: 649, column: 9, scope: !2732)
!2743 = !DILocalVariable(name: "ret", scope: !2732, file: !904, line: 649, type: !888)
!2744 = !DILocation(line: 649, column: 17, scope: !2732)
!2745 = !DILocation(line: 651, column: 10, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2732, file: !904, line: 651, column: 9)
!2747 = !DILocation(line: 651, column: 15, scope: !2746)
!2748 = !DILocation(line: 651, column: 9, scope: !2732)
!2749 = !DILocation(line: 652, column: 9, scope: !2746)
!2750 = !DILocation(line: 654, column: 17, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2732, file: !904, line: 654, column: 5)
!2752 = !DILocation(line: 654, column: 10, scope: !2751)
!2753 = !DILocation(line: 654, column: 22, scope: !2754)
!2754 = !DILexicalBlockFile(scope: !2755, file: !904, discriminator: 1)
!2755 = distinct !DILexicalBlock(scope: !2751, file: !904, line: 654, column: 5)
!2756 = !DILocation(line: 654, column: 31, scope: !2754)
!2757 = !DILocation(line: 654, column: 29, scope: !2754)
!2758 = !DILocation(line: 654, column: 5, scope: !2754)
!2759 = !DILocation(line: 655, column: 30, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2755, file: !904, line: 654, column: 55)
!2761 = !DILocation(line: 655, column: 16, scope: !2760)
!2762 = !DILocation(line: 655, column: 21, scope: !2760)
!2763 = !DILocation(line: 655, column: 38, scope: !2760)
!2764 = !DILocation(line: 655, column: 9, scope: !2760)
!2765 = !DILocation(line: 658, column: 42, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2760, file: !904, line: 658, column: 13)
!2767 = !DILocation(line: 658, column: 46, scope: !2766)
!2768 = !DILocation(line: 658, column: 51, scope: !2766)
!2769 = !DILocation(line: 658, column: 59, scope: !2766)
!2770 = !DILocation(line: 658, column: 20, scope: !2766)
!2771 = !DILocation(line: 658, column: 18, scope: !2766)
!2772 = !DILocation(line: 658, column: 67, scope: !2766)
!2773 = !DILocation(line: 658, column: 13, scope: !2760)
!2774 = !DILocation(line: 659, column: 20, scope: !2766)
!2775 = !DILocation(line: 659, column: 13, scope: !2766)
!2776 = !DILocation(line: 660, column: 5, scope: !2760)
!2777 = !DILocation(line: 654, column: 51, scope: !2778)
!2778 = !DILexicalBlockFile(scope: !2755, file: !904, discriminator: 2)
!2779 = !DILocation(line: 654, column: 5, scope: !2778)
!2780 = distinct !{!2780, !2781}
!2781 = !DILocation(line: 654, column: 5, scope: !2732)
!2782 = !DILocation(line: 662, column: 5, scope: !2732)
!2783 = !DILocation(line: 663, column: 1, scope: !2732)
!2784 = distinct !DISubprogram(name: "decode_code_table_indexes", scope: !904, file: !904, line: 779, type: !1652, isLocal: true, isDefinition: true, scopeLine: 781, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!2785 = !DILocalVariable(name: "gb", arg: 1, scope: !2784, file: !904, line: 779, type: !1654)
!2786 = !DILocation(line: 779, column: 53, scope: !2784)
!2787 = !DILocalVariable(name: "ctx", arg: 2, scope: !2784, file: !904, line: 779, type: !1664)
!2788 = !DILocation(line: 779, column: 77, scope: !2784)
!2789 = !DILocalVariable(name: "num_channels", arg: 3, scope: !2784, file: !904, line: 780, type: !888)
!2790 = !DILocation(line: 780, column: 42, scope: !2784)
!2791 = !DILocalVariable(name: "avctx", arg: 4, scope: !2784, file: !904, line: 780, type: !1782)
!2792 = !DILocation(line: 780, column: 72, scope: !2784)
!2793 = !DILocalVariable(name: "ch_num", scope: !2784, file: !904, line: 782, type: !888)
!2794 = !DILocation(line: 782, column: 9, scope: !2784)
!2795 = !DILocalVariable(name: "ret", scope: !2784, file: !904, line: 782, type: !888)
!2796 = !DILocation(line: 782, column: 17, scope: !2784)
!2797 = !DILocation(line: 784, column: 10, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2784, file: !904, line: 784, column: 9)
!2799 = !DILocation(line: 784, column: 15, scope: !2798)
!2800 = !DILocation(line: 784, column: 9, scope: !2784)
!2801 = !DILocation(line: 785, column: 9, scope: !2798)
!2802 = !DILocation(line: 787, column: 37, scope: !2784)
!2803 = !DILocation(line: 787, column: 27, scope: !2784)
!2804 = !DILocation(line: 787, column: 5, scope: !2784)
!2805 = !DILocation(line: 787, column: 10, scope: !2784)
!2806 = !DILocation(line: 787, column: 25, scope: !2784)
!2807 = !DILocation(line: 789, column: 17, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2784, file: !904, line: 789, column: 5)
!2809 = !DILocation(line: 789, column: 10, scope: !2808)
!2810 = !DILocation(line: 789, column: 22, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !2812, file: !904, discriminator: 1)
!2812 = distinct !DILexicalBlock(scope: !2808, file: !904, line: 789, column: 5)
!2813 = !DILocation(line: 789, column: 31, scope: !2811)
!2814 = !DILocation(line: 789, column: 29, scope: !2811)
!2815 = !DILocation(line: 789, column: 5, scope: !2811)
!2816 = !DILocation(line: 790, column: 30, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2812, file: !904, line: 789, column: 55)
!2818 = !DILocation(line: 790, column: 16, scope: !2817)
!2819 = !DILocation(line: 790, column: 21, scope: !2817)
!2820 = !DILocation(line: 790, column: 38, scope: !2817)
!2821 = !DILocation(line: 790, column: 9, scope: !2817)
!2822 = !DILocation(line: 793, column: 44, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2817, file: !904, line: 793, column: 13)
!2824 = !DILocation(line: 793, column: 48, scope: !2823)
!2825 = !DILocation(line: 793, column: 53, scope: !2823)
!2826 = !DILocation(line: 793, column: 61, scope: !2823)
!2827 = !DILocation(line: 793, column: 20, scope: !2823)
!2828 = !DILocation(line: 793, column: 18, scope: !2823)
!2829 = !DILocation(line: 793, column: 69, scope: !2823)
!2830 = !DILocation(line: 793, column: 13, scope: !2817)
!2831 = !DILocation(line: 794, column: 20, scope: !2823)
!2832 = !DILocation(line: 794, column: 13, scope: !2823)
!2833 = !DILocation(line: 795, column: 5, scope: !2817)
!2834 = !DILocation(line: 789, column: 51, scope: !2835)
!2835 = !DILexicalBlockFile(scope: !2812, file: !904, discriminator: 2)
!2836 = !DILocation(line: 789, column: 5, scope: !2835)
!2837 = distinct !{!2837, !2838}
!2838 = !DILocation(line: 789, column: 5, scope: !2784)
!2839 = !DILocation(line: 797, column: 5, scope: !2784)
!2840 = !DILocation(line: 798, column: 1, scope: !2784)
!2841 = distinct !DISubprogram(name: "decode_spectrum", scope: !904, file: !904, line: 851, type: !2842, isLocal: true, isDefinition: true, scopeLine: 853, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{null, !1654, !1664, !888, !1782}
!2844 = !DILocalVariable(name: "gb", arg: 1, scope: !2841, file: !904, line: 851, type: !1654)
!2845 = !DILocation(line: 851, column: 44, scope: !2841)
!2846 = !DILocalVariable(name: "ctx", arg: 2, scope: !2841, file: !904, line: 851, type: !1664)
!2847 = !DILocation(line: 851, column: 68, scope: !2841)
!2848 = !DILocalVariable(name: "num_channels", arg: 3, scope: !2841, file: !904, line: 852, type: !888)
!2849 = !DILocation(line: 852, column: 33, scope: !2841)
!2850 = !DILocalVariable(name: "avctx", arg: 4, scope: !2841, file: !904, line: 852, type: !1782)
!2851 = !DILocation(line: 852, column: 63, scope: !2841)
!2852 = !DILocalVariable(name: "i", scope: !2841, file: !904, line: 854, type: !888)
!2853 = !DILocation(line: 854, column: 9, scope: !2841)
!2854 = !DILocalVariable(name: "ch_num", scope: !2841, file: !904, line: 854, type: !888)
!2855 = !DILocation(line: 854, column: 12, scope: !2841)
!2856 = !DILocalVariable(name: "qu", scope: !2841, file: !904, line: 854, type: !888)
!2857 = !DILocation(line: 854, column: 20, scope: !2841)
!2858 = !DILocalVariable(name: "wordlen", scope: !2841, file: !904, line: 854, type: !888)
!2859 = !DILocation(line: 854, column: 24, scope: !2841)
!2860 = !DILocalVariable(name: "codetab", scope: !2841, file: !904, line: 854, type: !888)
!2861 = !DILocation(line: 854, column: 33, scope: !2841)
!2862 = !DILocalVariable(name: "tab_index", scope: !2841, file: !904, line: 854, type: !888)
!2863 = !DILocation(line: 854, column: 42, scope: !2841)
!2864 = !DILocalVariable(name: "num_specs", scope: !2841, file: !904, line: 854, type: !888)
!2865 = !DILocation(line: 854, column: 53, scope: !2841)
!2866 = !DILocalVariable(name: "tab", scope: !2841, file: !904, line: 855, type: !2867)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!2868 = !DILocation(line: 855, column: 31, scope: !2841)
!2869 = !DILocalVariable(name: "chan", scope: !2841, file: !904, line: 856, type: !2870)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64, align: 64)
!2871 = !DILocation(line: 856, column: 24, scope: !2841)
!2872 = !DILocation(line: 858, column: 17, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2841, file: !904, line: 858, column: 5)
!2874 = !DILocation(line: 858, column: 10, scope: !2873)
!2875 = !DILocation(line: 858, column: 22, scope: !2876)
!2876 = !DILexicalBlockFile(scope: !2877, file: !904, discriminator: 1)
!2877 = distinct !DILexicalBlock(scope: !2873, file: !904, line: 858, column: 5)
!2878 = !DILocation(line: 858, column: 31, scope: !2876)
!2879 = !DILocation(line: 858, column: 29, scope: !2876)
!2880 = !DILocation(line: 858, column: 5, scope: !2876)
!2881 = !DILocation(line: 859, column: 31, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !904, line: 858, column: 55)
!2883 = !DILocation(line: 859, column: 17, scope: !2882)
!2884 = !DILocation(line: 859, column: 22, scope: !2882)
!2885 = !DILocation(line: 859, column: 14, scope: !2882)
!2886 = !DILocation(line: 861, column: 16, scope: !2882)
!2887 = !DILocation(line: 861, column: 22, scope: !2882)
!2888 = !DILocation(line: 861, column: 9, scope: !2882)
!2889 = !DILocation(line: 864, column: 16, scope: !2882)
!2890 = !DILocation(line: 864, column: 22, scope: !2882)
!2891 = !DILocation(line: 864, column: 9, scope: !2882)
!2892 = !DILocation(line: 866, column: 17, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2882, file: !904, line: 866, column: 9)
!2894 = !DILocation(line: 866, column: 14, scope: !2893)
!2895 = !DILocation(line: 866, column: 22, scope: !2896)
!2896 = !DILexicalBlockFile(scope: !2897, file: !904, discriminator: 1)
!2897 = distinct !DILexicalBlock(scope: !2893, file: !904, line: 866, column: 9)
!2898 = !DILocation(line: 866, column: 27, scope: !2896)
!2899 = !DILocation(line: 866, column: 32, scope: !2896)
!2900 = !DILocation(line: 866, column: 25, scope: !2896)
!2901 = !DILocation(line: 866, column: 9, scope: !2896)
!2902 = !DILocation(line: 867, column: 51, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2897, file: !904, line: 866, column: 56)
!2904 = !DILocation(line: 867, column: 54, scope: !2903)
!2905 = !DILocation(line: 867, column: 25, scope: !2903)
!2906 = !DILocation(line: 868, column: 51, scope: !2903)
!2907 = !DILocation(line: 868, column: 25, scope: !2903)
!2908 = !DILocation(line: 867, column: 59, scope: !2903)
!2909 = !DILocation(line: 867, column: 23, scope: !2903)
!2910 = !DILocation(line: 870, column: 40, scope: !2903)
!2911 = !DILocation(line: 870, column: 23, scope: !2903)
!2912 = !DILocation(line: 870, column: 29, scope: !2903)
!2913 = !DILocation(line: 870, column: 21, scope: !2903)
!2914 = !DILocation(line: 871, column: 40, scope: !2903)
!2915 = !DILocation(line: 871, column: 23, scope: !2903)
!2916 = !DILocation(line: 871, column: 29, scope: !2903)
!2917 = !DILocation(line: 871, column: 21, scope: !2903)
!2918 = !DILocation(line: 872, column: 17, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2903, file: !904, line: 872, column: 17)
!2920 = !DILocation(line: 872, column: 17, scope: !2903)
!2921 = !DILocation(line: 873, column: 22, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2923, file: !904, line: 873, column: 21)
!2923 = distinct !DILexicalBlock(scope: !2919, file: !904, line: 872, column: 26)
!2924 = !DILocation(line: 873, column: 27, scope: !2922)
!2925 = !DILocation(line: 873, column: 21, scope: !2923)
!2926 = !DILocation(line: 874, column: 92, scope: !2922)
!2927 = !DILocation(line: 874, column: 31, scope: !2922)
!2928 = !DILocation(line: 874, column: 79, scope: !2922)
!2929 = !DILocation(line: 874, column: 87, scope: !2922)
!2930 = !DILocation(line: 874, column: 61, scope: !2922)
!2931 = !DILocation(line: 874, column: 67, scope: !2922)
!2932 = !DILocation(line: 874, column: 29, scope: !2922)
!2933 = !DILocation(line: 874, column: 21, scope: !2922)
!2934 = !DILocation(line: 876, column: 30, scope: !2923)
!2935 = !DILocation(line: 876, column: 36, scope: !2923)
!2936 = !DILocation(line: 876, column: 47, scope: !2923)
!2937 = !DILocation(line: 876, column: 53, scope: !2923)
!2938 = !DILocation(line: 876, column: 51, scope: !2923)
!2939 = !DILocation(line: 876, column: 62, scope: !2923)
!2940 = !DILocation(line: 876, column: 68, scope: !2923)
!2941 = !DILocation(line: 876, column: 66, scope: !2923)
!2942 = !DILocation(line: 876, column: 76, scope: !2923)
!2943 = !DILocation(line: 876, column: 27, scope: !2923)
!2944 = !DILocation(line: 877, column: 45, scope: !2923)
!2945 = !DILocation(line: 877, column: 24, scope: !2923)
!2946 = !DILocation(line: 877, column: 21, scope: !2923)
!2947 = !DILocation(line: 880, column: 21, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2923, file: !904, line: 880, column: 21)
!2949 = !DILocation(line: 880, column: 26, scope: !2948)
!2950 = !DILocation(line: 880, column: 35, scope: !2948)
!2951 = !DILocation(line: 880, column: 21, scope: !2923)
!2952 = !DILocation(line: 881, column: 33, scope: !2948)
!2953 = !DILocation(line: 881, column: 38, scope: !2948)
!2954 = !DILocation(line: 881, column: 31, scope: !2948)
!2955 = !DILocation(line: 881, column: 21, scope: !2948)
!2956 = !DILocation(line: 883, column: 35, scope: !2923)
!2957 = !DILocation(line: 883, column: 39, scope: !2923)
!2958 = !DILocation(line: 883, column: 59, scope: !2923)
!2959 = !DILocation(line: 883, column: 45, scope: !2923)
!2960 = !DILocation(line: 884, column: 77, scope: !2923)
!2961 = !DILocation(line: 884, column: 51, scope: !2923)
!2962 = !DILocation(line: 884, column: 36, scope: !2923)
!2963 = !DILocation(line: 884, column: 42, scope: !2923)
!2964 = !DILocation(line: 885, column: 35, scope: !2923)
!2965 = !DILocation(line: 883, column: 17, scope: !2923)
!2966 = !DILocation(line: 886, column: 13, scope: !2923)
!2967 = !DILocation(line: 886, column: 24, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2969, file: !904, discriminator: 1)
!2969 = distinct !DILexicalBlock(scope: !2919, file: !904, line: 886, column: 24)
!2970 = !DILocation(line: 886, column: 31, scope: !2968)
!2971 = !DILocation(line: 886, column: 62, scope: !2972)
!2972 = !DILexicalBlockFile(scope: !2969, file: !904, discriminator: 2)
!2973 = !DILocation(line: 886, column: 34, scope: !2972)
!2974 = !DILocation(line: 886, column: 39, scope: !2972)
!2975 = !DILocation(line: 886, column: 51, scope: !2972)
!2976 = !DILocation(line: 886, column: 66, scope: !2972)
!2977 = !DILocation(line: 886, column: 70, scope: !2978)
!2978 = !DILexicalBlockFile(scope: !2969, file: !904, discriminator: 3)
!2979 = !DILocation(line: 886, column: 24, scope: !2978)
!2980 = !DILocation(line: 888, column: 66, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2969, file: !904, line: 886, column: 79)
!2982 = !DILocation(line: 888, column: 40, scope: !2981)
!2983 = !DILocation(line: 888, column: 25, scope: !2981)
!2984 = !DILocation(line: 888, column: 31, scope: !2981)
!2985 = !DILocation(line: 888, column: 17, scope: !2981)
!2986 = !DILocation(line: 889, column: 77, scope: !2981)
!2987 = !DILocation(line: 889, column: 51, scope: !2981)
!2988 = !DILocation(line: 889, column: 25, scope: !2981)
!2989 = !DILocation(line: 889, column: 30, scope: !2981)
!2990 = !DILocation(line: 889, column: 42, scope: !2981)
!2991 = !DILocation(line: 890, column: 24, scope: !2981)
!2992 = !DILocation(line: 890, column: 34, scope: !2981)
!2993 = !DILocation(line: 892, column: 68, scope: !2981)
!2994 = !DILocation(line: 892, column: 40, scope: !2981)
!2995 = !DILocation(line: 892, column: 45, scope: !2981)
!2996 = !DILocation(line: 892, column: 57, scope: !2981)
!2997 = !DILocation(line: 892, column: 34, scope: !2981)
!2998 = !DILocation(line: 892, column: 17, scope: !2981)
!2999 = !DILocation(line: 892, column: 23, scope: !2981)
!3000 = !DILocation(line: 892, column: 38, scope: !2981)
!3001 = !DILocation(line: 893, column: 13, scope: !2981)
!3002 = !DILocation(line: 894, column: 9, scope: !2903)
!3003 = !DILocation(line: 866, column: 52, scope: !3004)
!3004 = !DILexicalBlockFile(scope: !2897, file: !904, discriminator: 2)
!3005 = !DILocation(line: 866, column: 9, scope: !3004)
!3006 = distinct !{!3006, !3007}
!3007 = !DILocation(line: 866, column: 9, scope: !2882)
!3008 = !DILocation(line: 900, column: 13, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !2882, file: !904, line: 900, column: 13)
!3010 = !DILocation(line: 900, column: 18, scope: !3009)
!3011 = !DILocation(line: 900, column: 35, scope: !3009)
!3012 = !DILocation(line: 900, column: 13, scope: !2882)
!3013 = !DILocation(line: 901, column: 56, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3009, file: !904, line: 900, column: 40)
!3015 = !DILocation(line: 901, column: 61, scope: !3014)
!3016 = !DILocation(line: 901, column: 80, scope: !3014)
!3017 = !DILocation(line: 901, column: 25, scope: !3014)
!3018 = !DILocation(line: 901, column: 23, scope: !3014)
!3019 = !DILocation(line: 902, column: 20, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3014, file: !904, line: 902, column: 13)
!3021 = !DILocation(line: 902, column: 18, scope: !3020)
!3022 = !DILocation(line: 902, column: 25, scope: !3023)
!3023 = !DILexicalBlockFile(scope: !3024, file: !904, discriminator: 1)
!3024 = distinct !DILexicalBlock(scope: !3020, file: !904, line: 902, column: 13)
!3025 = !DILocation(line: 902, column: 29, scope: !3023)
!3026 = !DILocation(line: 902, column: 27, scope: !3023)
!3027 = !DILocation(line: 902, column: 13, scope: !3023)
!3028 = !DILocation(line: 903, column: 48, scope: !3024)
!3029 = !DILocation(line: 903, column: 39, scope: !3024)
!3030 = !DILocation(line: 903, column: 34, scope: !3024)
!3031 = !DILocation(line: 903, column: 17, scope: !3024)
!3032 = !DILocation(line: 903, column: 23, scope: !3024)
!3033 = !DILocation(line: 903, column: 37, scope: !3024)
!3034 = !DILocation(line: 902, column: 41, scope: !3035)
!3035 = !DILexicalBlockFile(scope: !3024, file: !904, discriminator: 2)
!3036 = !DILocation(line: 902, column: 13, scope: !3035)
!3037 = distinct !{!3037, !3038}
!3038 = !DILocation(line: 902, column: 13, scope: !3014)
!3039 = !DILocation(line: 904, column: 9, scope: !3014)
!3040 = !DILocation(line: 905, column: 5, scope: !2882)
!3041 = !DILocation(line: 858, column: 51, scope: !3042)
!3042 = !DILexicalBlockFile(scope: !2877, file: !904, discriminator: 2)
!3043 = !DILocation(line: 858, column: 5, scope: !3042)
!3044 = distinct !{!3044, !3045}
!3045 = !DILocation(line: 858, column: 5, scope: !2841)
!3046 = !DILocation(line: 906, column: 1, scope: !2841)
!3047 = distinct !DISubprogram(name: "get_subband_flags", scope: !904, file: !904, line: 921, type: !3048, isLocal: true, isDefinition: true, scopeLine: 922, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!888, !1654, !1706, !888}
!3050 = !DILocalVariable(name: "gb", arg: 1, scope: !3047, file: !904, line: 921, type: !1654)
!3051 = !DILocation(line: 921, column: 45, scope: !3047)
!3052 = !DILocalVariable(name: "out", arg: 2, scope: !3047, file: !904, line: 921, type: !1706)
!3053 = !DILocation(line: 921, column: 58, scope: !3047)
!3054 = !DILocalVariable(name: "num_flags", arg: 3, scope: !3047, file: !904, line: 921, type: !888)
!3055 = !DILocation(line: 921, column: 67, scope: !3047)
!3056 = !DILocalVariable(name: "i", scope: !3047, file: !904, line: 923, type: !888)
!3057 = !DILocation(line: 923, column: 9, scope: !3047)
!3058 = !DILocalVariable(name: "result", scope: !3047, file: !904, line: 923, type: !888)
!3059 = !DILocation(line: 923, column: 12, scope: !3047)
!3060 = !DILocation(line: 925, column: 12, scope: !3047)
!3061 = !DILocation(line: 925, column: 20, scope: !3047)
!3062 = !DILocation(line: 925, column: 5, scope: !3047)
!3063 = !DILocation(line: 927, column: 24, scope: !3047)
!3064 = !DILocation(line: 927, column: 14, scope: !3047)
!3065 = !DILocation(line: 927, column: 12, scope: !3047)
!3066 = !DILocation(line: 928, column: 9, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3047, file: !904, line: 928, column: 9)
!3068 = !DILocation(line: 928, column: 9, scope: !3047)
!3069 = !DILocation(line: 929, column: 23, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !904, line: 929, column: 13)
!3071 = distinct !DILexicalBlock(scope: !3067, file: !904, line: 928, column: 17)
!3072 = !DILocation(line: 929, column: 13, scope: !3070)
!3073 = !DILocation(line: 929, column: 13, scope: !3071)
!3074 = !DILocation(line: 930, column: 20, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3070, file: !904, line: 930, column: 13)
!3076 = !DILocation(line: 930, column: 18, scope: !3075)
!3077 = !DILocation(line: 930, column: 25, scope: !3078)
!3078 = !DILexicalBlockFile(scope: !3079, file: !904, discriminator: 1)
!3079 = distinct !DILexicalBlock(scope: !3075, file: !904, line: 930, column: 13)
!3080 = !DILocation(line: 930, column: 29, scope: !3078)
!3081 = !DILocation(line: 930, column: 27, scope: !3078)
!3082 = !DILocation(line: 930, column: 13, scope: !3078)
!3083 = !DILocation(line: 931, column: 36, scope: !3079)
!3084 = !DILocation(line: 931, column: 26, scope: !3079)
!3085 = !DILocation(line: 931, column: 21, scope: !3079)
!3086 = !DILocation(line: 931, column: 17, scope: !3079)
!3087 = !DILocation(line: 931, column: 24, scope: !3079)
!3088 = !DILocation(line: 930, column: 41, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3079, file: !904, discriminator: 2)
!3090 = !DILocation(line: 930, column: 13, scope: !3089)
!3091 = distinct !{!3091, !3092}
!3092 = !DILocation(line: 930, column: 13, scope: !3070)
!3093 = !DILocation(line: 931, column: 38, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !3075, file: !904, discriminator: 1)
!3095 = !DILocation(line: 933, column: 20, scope: !3070)
!3096 = !DILocation(line: 933, column: 28, scope: !3070)
!3097 = !DILocation(line: 933, column: 13, scope: !3070)
!3098 = !DILocation(line: 934, column: 5, scope: !3071)
!3099 = !DILocation(line: 936, column: 12, scope: !3047)
!3100 = !DILocation(line: 936, column: 5, scope: !3047)
!3101 = distinct !DISubprogram(name: "decode_window_shape", scope: !904, file: !904, line: 946, type: !3102, isLocal: true, isDefinition: true, scopeLine: 948, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{null, !1654, !1664, !888}
!3104 = !DILocalVariable(name: "gb", arg: 1, scope: !3101, file: !904, line: 946, type: !1654)
!3105 = !DILocation(line: 946, column: 48, scope: !3101)
!3106 = !DILocalVariable(name: "ctx", arg: 2, scope: !3101, file: !904, line: 946, type: !1664)
!3107 = !DILocation(line: 946, column: 72, scope: !3101)
!3108 = !DILocalVariable(name: "num_channels", arg: 3, scope: !3101, file: !904, line: 947, type: !888)
!3109 = !DILocation(line: 947, column: 37, scope: !3101)
!3110 = !DILocalVariable(name: "ch_num", scope: !3101, file: !904, line: 949, type: !888)
!3111 = !DILocation(line: 949, column: 9, scope: !3101)
!3112 = !DILocation(line: 951, column: 17, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3101, file: !904, line: 951, column: 5)
!3114 = !DILocation(line: 951, column: 10, scope: !3113)
!3115 = !DILocation(line: 951, column: 22, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !3117, file: !904, discriminator: 1)
!3117 = distinct !DILexicalBlock(scope: !3113, file: !904, line: 951, column: 5)
!3118 = !DILocation(line: 951, column: 31, scope: !3116)
!3119 = !DILocation(line: 951, column: 29, scope: !3116)
!3120 = !DILocation(line: 951, column: 5, scope: !3116)
!3121 = !DILocation(line: 952, column: 27, scope: !3117)
!3122 = !DILocation(line: 952, column: 45, scope: !3117)
!3123 = !DILocation(line: 952, column: 31, scope: !3117)
!3124 = !DILocation(line: 952, column: 36, scope: !3117)
!3125 = !DILocation(line: 952, column: 53, scope: !3117)
!3126 = !DILocation(line: 953, column: 27, scope: !3117)
!3127 = !DILocation(line: 953, column: 32, scope: !3117)
!3128 = !DILocation(line: 952, column: 9, scope: !3117)
!3129 = !DILocation(line: 951, column: 51, scope: !3130)
!3130 = !DILexicalBlockFile(scope: !3117, file: !904, discriminator: 2)
!3131 = !DILocation(line: 951, column: 5, scope: !3130)
!3132 = distinct !{!3132, !3133}
!3133 = !DILocation(line: 951, column: 5, scope: !3101)
!3134 = !DILocation(line: 954, column: 1, scope: !3101)
!3135 = distinct !DISubprogram(name: "decode_gainc_data", scope: !904, file: !904, line: 1362, type: !1652, isLocal: true, isDefinition: true, scopeLine: 1364, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3136 = !DILocalVariable(name: "gb", arg: 1, scope: !3135, file: !904, line: 1362, type: !1654)
!3137 = !DILocation(line: 1362, column: 45, scope: !3135)
!3138 = !DILocalVariable(name: "ctx", arg: 2, scope: !3135, file: !904, line: 1362, type: !1664)
!3139 = !DILocation(line: 1362, column: 69, scope: !3135)
!3140 = !DILocalVariable(name: "num_channels", arg: 3, scope: !3135, file: !904, line: 1363, type: !888)
!3141 = !DILocation(line: 1363, column: 34, scope: !3135)
!3142 = !DILocalVariable(name: "avctx", arg: 4, scope: !3135, file: !904, line: 1363, type: !1782)
!3143 = !DILocation(line: 1363, column: 64, scope: !3135)
!3144 = !DILocalVariable(name: "ch_num", scope: !3135, file: !904, line: 1365, type: !888)
!3145 = !DILocation(line: 1365, column: 9, scope: !3135)
!3146 = !DILocalVariable(name: "coded_subbands", scope: !3135, file: !904, line: 1365, type: !888)
!3147 = !DILocation(line: 1365, column: 17, scope: !3135)
!3148 = !DILocalVariable(name: "sb", scope: !3135, file: !904, line: 1365, type: !888)
!3149 = !DILocation(line: 1365, column: 33, scope: !3135)
!3150 = !DILocalVariable(name: "ret", scope: !3135, file: !904, line: 1365, type: !888)
!3151 = !DILocation(line: 1365, column: 37, scope: !3135)
!3152 = !DILocation(line: 1367, column: 17, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3135, file: !904, line: 1367, column: 5)
!3154 = !DILocation(line: 1367, column: 10, scope: !3153)
!3155 = !DILocation(line: 1367, column: 22, scope: !3156)
!3156 = !DILexicalBlockFile(scope: !3157, file: !904, discriminator: 1)
!3157 = distinct !DILexicalBlock(scope: !3153, file: !904, line: 1367, column: 5)
!3158 = !DILocation(line: 1367, column: 31, scope: !3156)
!3159 = !DILocation(line: 1367, column: 29, scope: !3156)
!3160 = !DILocation(line: 1367, column: 5, scope: !3156)
!3161 = !DILocation(line: 1368, column: 30, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3157, file: !904, line: 1367, column: 55)
!3163 = !DILocation(line: 1368, column: 16, scope: !3162)
!3164 = !DILocation(line: 1368, column: 21, scope: !3162)
!3165 = !DILocation(line: 1368, column: 38, scope: !3162)
!3166 = !DILocation(line: 1368, column: 9, scope: !3162)
!3167 = !DILocation(line: 1371, column: 23, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3162, file: !904, line: 1371, column: 13)
!3169 = !DILocation(line: 1371, column: 13, scope: !3168)
!3170 = !DILocation(line: 1371, column: 13, scope: !3162)
!3171 = !DILocation(line: 1372, column: 39, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3168, file: !904, line: 1371, column: 28)
!3173 = !DILocation(line: 1372, column: 30, scope: !3172)
!3174 = !DILocation(line: 1372, column: 46, scope: !3172)
!3175 = !DILocation(line: 1372, column: 28, scope: !3172)
!3176 = !DILocation(line: 1373, column: 27, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3172, file: !904, line: 1373, column: 17)
!3178 = !DILocation(line: 1373, column: 17, scope: !3177)
!3179 = !DILocation(line: 1373, column: 17, scope: !3172)
!3180 = !DILocation(line: 1374, column: 68, scope: !3177)
!3181 = !DILocation(line: 1374, column: 59, scope: !3177)
!3182 = !DILocation(line: 1374, column: 75, scope: !3177)
!3183 = !DILocation(line: 1374, column: 31, scope: !3177)
!3184 = !DILocation(line: 1374, column: 17, scope: !3177)
!3185 = !DILocation(line: 1374, column: 22, scope: !3177)
!3186 = !DILocation(line: 1374, column: 39, scope: !3177)
!3187 = !DILocation(line: 1374, column: 57, scope: !3177)
!3188 = !DILocation(line: 1376, column: 59, scope: !3177)
!3189 = !DILocation(line: 1376, column: 31, scope: !3177)
!3190 = !DILocation(line: 1376, column: 17, scope: !3177)
!3191 = !DILocation(line: 1376, column: 22, scope: !3177)
!3192 = !DILocation(line: 1376, column: 39, scope: !3177)
!3193 = !DILocation(line: 1376, column: 57, scope: !3177)
!3194 = !DILocation(line: 1378, column: 45, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3172, file: !904, line: 1378, column: 17)
!3196 = !DILocation(line: 1378, column: 49, scope: !3195)
!3197 = !DILocation(line: 1378, column: 54, scope: !3195)
!3198 = !DILocation(line: 1378, column: 62, scope: !3195)
!3199 = !DILocation(line: 1378, column: 24, scope: !3195)
!3200 = !DILocation(line: 1378, column: 22, scope: !3195)
!3201 = !DILocation(line: 1378, column: 79, scope: !3195)
!3202 = !DILocation(line: 1378, column: 83, scope: !3195)
!3203 = !DILocation(line: 1379, column: 44, scope: !3195)
!3204 = !DILocation(line: 1379, column: 48, scope: !3195)
!3205 = !DILocation(line: 1379, column: 53, scope: !3195)
!3206 = !DILocation(line: 1379, column: 61, scope: !3195)
!3207 = !DILocation(line: 1379, column: 24, scope: !3195)
!3208 = !DILocation(line: 1379, column: 22, scope: !3195)
!3209 = !DILocation(line: 1379, column: 78, scope: !3195)
!3210 = !DILocation(line: 1379, column: 82, scope: !3195)
!3211 = !DILocation(line: 1380, column: 47, scope: !3195)
!3212 = !DILocation(line: 1380, column: 51, scope: !3195)
!3213 = !DILocation(line: 1380, column: 56, scope: !3195)
!3214 = !DILocation(line: 1380, column: 64, scope: !3195)
!3215 = !DILocation(line: 1380, column: 80, scope: !3195)
!3216 = !DILocation(line: 1380, column: 24, scope: !3195)
!3217 = !DILocation(line: 1380, column: 22, scope: !3195)
!3218 = !DILocation(line: 1380, column: 88, scope: !3195)
!3219 = !DILocation(line: 1378, column: 17, scope: !3220)
!3220 = !DILexicalBlockFile(scope: !3172, file: !904, discriminator: 1)
!3221 = !DILocation(line: 1381, column: 24, scope: !3195)
!3222 = !DILocation(line: 1381, column: 17, scope: !3195)
!3223 = !DILocation(line: 1383, column: 17, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3172, file: !904, line: 1383, column: 17)
!3225 = !DILocation(line: 1383, column: 32, scope: !3224)
!3226 = !DILocation(line: 1383, column: 17, scope: !3172)
!3227 = !DILocation(line: 1384, column: 27, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3229, file: !904, line: 1384, column: 17)
!3229 = distinct !DILexicalBlock(scope: !3224, file: !904, line: 1383, column: 37)
!3230 = !DILocation(line: 1384, column: 25, scope: !3228)
!3231 = !DILocation(line: 1384, column: 22, scope: !3228)
!3232 = !DILocation(line: 1384, column: 43, scope: !3233)
!3233 = !DILexicalBlockFile(scope: !3234, file: !904, discriminator: 1)
!3234 = distinct !DILexicalBlock(scope: !3228, file: !904, line: 1384, column: 17)
!3235 = !DILocation(line: 1384, column: 62, scope: !3233)
!3236 = !DILocation(line: 1384, column: 48, scope: !3233)
!3237 = !DILocation(line: 1384, column: 53, scope: !3233)
!3238 = !DILocation(line: 1384, column: 70, scope: !3233)
!3239 = !DILocation(line: 1384, column: 46, scope: !3233)
!3240 = !DILocation(line: 1384, column: 17, scope: !3233)
!3241 = !DILocation(line: 1385, column: 53, scope: !3234)
!3242 = !DILocation(line: 1385, column: 21, scope: !3234)
!3243 = !DILocation(line: 1385, column: 35, scope: !3234)
!3244 = !DILocation(line: 1385, column: 26, scope: !3234)
!3245 = !DILocation(line: 1385, column: 43, scope: !3234)
!3246 = !DILocation(line: 1386, column: 57, scope: !3234)
!3247 = !DILocation(line: 1386, column: 60, scope: !3234)
!3248 = !DILocation(line: 1386, column: 25, scope: !3234)
!3249 = !DILocation(line: 1386, column: 39, scope: !3234)
!3250 = !DILocation(line: 1386, column: 30, scope: !3234)
!3251 = !DILocation(line: 1386, column: 47, scope: !3234)
!3252 = !DILocation(line: 1384, column: 91, scope: !3253)
!3253 = !DILexicalBlockFile(scope: !3234, file: !904, discriminator: 2)
!3254 = !DILocation(line: 1384, column: 17, scope: !3253)
!3255 = distinct !{!3255, !3256}
!3256 = !DILocation(line: 1384, column: 17, scope: !3229)
!3257 = !DILocation(line: 1387, column: 13, scope: !3229)
!3258 = !DILocation(line: 1388, column: 9, scope: !3172)
!3259 = !DILocation(line: 1389, column: 27, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3168, file: !904, line: 1388, column: 16)
!3261 = !DILocation(line: 1389, column: 13, scope: !3260)
!3262 = !DILocation(line: 1389, column: 18, scope: !3260)
!3263 = !DILocation(line: 1389, column: 35, scope: !3260)
!3264 = !DILocation(line: 1389, column: 53, scope: !3260)
!3265 = !DILocation(line: 1391, column: 5, scope: !3162)
!3266 = !DILocation(line: 1367, column: 51, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !3157, file: !904, discriminator: 2)
!3268 = !DILocation(line: 1367, column: 5, scope: !3267)
!3269 = distinct !{!3269, !3270}
!3270 = !DILocation(line: 1367, column: 5, scope: !3135)
!3271 = !DILocation(line: 1393, column: 5, scope: !3135)
!3272 = !DILocation(line: 1394, column: 1, scope: !3135)
!3273 = distinct !DISubprogram(name: "decode_tones_info", scope: !904, file: !904, line: 1695, type: !1652, isLocal: true, isDefinition: true, scopeLine: 1697, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3274 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3275)
!3275 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3285)
!3276 = !DILexicalBlockFile(scope: !3277, file: !1656, discriminator: 11)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !1656, line: 788, column: 490)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !1656, line: 788, column: 466)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !1656, line: 788, column: 154)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !1656, line: 788, column: 130)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !1656, line: 788, column: 8)
!3282 = distinct !DISubprogram(name: "get_vlc2", scope: !1656, file: !1656, line: 762, type: !3283, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!888, !1654, !966, !888, !888}
!3285 = distinct !DILocation(line: 1718, column: 9, scope: !3273)
!3286 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3287)
!3287 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3285)
!3288 = !DILexicalBlockFile(scope: !3279, file: !1656, discriminator: 6)
!3289 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3290)
!3290 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3285)
!3291 = !DILocalVariable(name: "s", arg: 1, scope: !3282, file: !1656, line: 762, type: !1654)
!3292 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3285)
!3293 = !DILocalVariable(name: "table", arg: 2, scope: !3282, file: !1656, line: 762, type: !966)
!3294 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3285)
!3295 = !DILocalVariable(name: "bits", arg: 3, scope: !3282, file: !1656, line: 763, type: !888)
!3296 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3285)
!3297 = !DILocalVariable(name: "max_depth", arg: 4, scope: !3282, file: !1656, line: 763, type: !888)
!3298 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3285)
!3299 = !DILocalVariable(name: "code", scope: !3282, file: !1656, line: 783, type: !888)
!3300 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3285)
!3301 = !DILocalVariable(name: "re_index", scope: !3282, file: !1656, line: 785, type: !889)
!3302 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3285)
!3303 = !DILocalVariable(name: "re_cache", scope: !3282, file: !1656, line: 785, type: !889)
!3304 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3285)
!3305 = !DILocalVariable(name: "re_size_plus8", scope: !3282, file: !1656, line: 785, type: !889)
!3306 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3285)
!3307 = !DILocalVariable(name: "n", scope: !3281, file: !1656, line: 788, type: !888)
!3308 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3285)
!3309 = !DILocalVariable(name: "nb_bits", scope: !3281, file: !1656, line: 788, type: !888)
!3310 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3285)
!3311 = !DILocalVariable(name: "index", scope: !3281, file: !1656, line: 788, type: !889)
!3312 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3285)
!3313 = !DILocalVariable(name: "gb", arg: 1, scope: !3273, file: !904, line: 1695, type: !1654)
!3314 = !DILocation(line: 1695, column: 45, scope: !3273)
!3315 = !DILocalVariable(name: "ctx", arg: 2, scope: !3273, file: !904, line: 1695, type: !1664)
!3316 = !DILocation(line: 1695, column: 69, scope: !3273)
!3317 = !DILocalVariable(name: "num_channels", arg: 3, scope: !3273, file: !904, line: 1696, type: !888)
!3318 = !DILocation(line: 1696, column: 34, scope: !3273)
!3319 = !DILocalVariable(name: "avctx", arg: 4, scope: !3273, file: !904, line: 1696, type: !1782)
!3320 = !DILocation(line: 1696, column: 64, scope: !3273)
!3321 = !DILocalVariable(name: "ch_num", scope: !3273, file: !904, line: 1698, type: !888)
!3322 = !DILocation(line: 1698, column: 9, scope: !3273)
!3323 = !DILocalVariable(name: "i", scope: !3273, file: !904, line: 1698, type: !888)
!3324 = !DILocation(line: 1698, column: 17, scope: !3273)
!3325 = !DILocalVariable(name: "ret", scope: !3273, file: !904, line: 1698, type: !888)
!3326 = !DILocation(line: 1698, column: 20, scope: !3273)
!3327 = !DILocalVariable(name: "band_has_tones", scope: !3273, file: !904, line: 1699, type: !3328)
!3328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 512, align: 32, elements: !1016)
!3329 = !DILocation(line: 1699, column: 9, scope: !3273)
!3330 = !DILocation(line: 1701, column: 17, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3273, file: !904, line: 1701, column: 5)
!3332 = !DILocation(line: 1701, column: 10, scope: !3331)
!3333 = !DILocation(line: 1701, column: 22, scope: !3334)
!3334 = !DILexicalBlockFile(scope: !3335, file: !904, discriminator: 1)
!3335 = distinct !DILexicalBlock(scope: !3331, file: !904, line: 1701, column: 5)
!3336 = !DILocation(line: 1701, column: 31, scope: !3334)
!3337 = !DILocation(line: 1701, column: 29, scope: !3334)
!3338 = !DILocation(line: 1701, column: 5, scope: !3334)
!3339 = !DILocation(line: 1702, column: 30, scope: !3335)
!3340 = !DILocation(line: 1702, column: 16, scope: !3335)
!3341 = !DILocation(line: 1702, column: 21, scope: !3335)
!3342 = !DILocation(line: 1702, column: 38, scope: !3335)
!3343 = !DILocation(line: 1702, column: 9, scope: !3335)
!3344 = !DILocation(line: 1701, column: 51, scope: !3345)
!3345 = !DILexicalBlockFile(scope: !3335, file: !904, discriminator: 2)
!3346 = !DILocation(line: 1701, column: 5, scope: !3345)
!3347 = distinct !{!3347, !3348}
!3348 = !DILocation(line: 1701, column: 5, scope: !3273)
!3349 = !DILocation(line: 1705, column: 48, scope: !3273)
!3350 = !DILocation(line: 1705, column: 38, scope: !3273)
!3351 = !DILocation(line: 1705, column: 5, scope: !3273)
!3352 = !DILocation(line: 1705, column: 10, scope: !3273)
!3353 = !DILocation(line: 1705, column: 22, scope: !3273)
!3354 = !DILocation(line: 1705, column: 36, scope: !3273)
!3355 = !DILocation(line: 1706, column: 10, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3273, file: !904, line: 1706, column: 9)
!3357 = !DILocation(line: 1706, column: 15, scope: !3356)
!3358 = !DILocation(line: 1706, column: 27, scope: !3356)
!3359 = !DILocation(line: 1706, column: 9, scope: !3273)
!3360 = !DILocation(line: 1707, column: 9, scope: !3356)
!3361 = !DILocation(line: 1709, column: 12, scope: !3273)
!3362 = !DILocation(line: 1709, column: 17, scope: !3273)
!3363 = !DILocation(line: 1709, column: 29, scope: !3273)
!3364 = !DILocation(line: 1709, column: 5, scope: !3273)
!3365 = !DILocation(line: 1711, column: 49, scope: !3273)
!3366 = !DILocation(line: 1711, column: 39, scope: !3273)
!3367 = !DILocation(line: 1711, column: 5, scope: !3273)
!3368 = !DILocation(line: 1711, column: 10, scope: !3273)
!3369 = !DILocation(line: 1711, column: 22, scope: !3273)
!3370 = !DILocation(line: 1711, column: 37, scope: !3273)
!3371 = !DILocation(line: 1712, column: 10, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3273, file: !904, line: 1712, column: 9)
!3373 = !DILocation(line: 1712, column: 15, scope: !3372)
!3374 = !DILocation(line: 1712, column: 27, scope: !3372)
!3375 = !DILocation(line: 1712, column: 9, scope: !3273)
!3376 = !DILocation(line: 1713, column: 39, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3372, file: !904, line: 1712, column: 43)
!3378 = !DILocation(line: 1713, column: 9, scope: !3377)
!3379 = !DILocation(line: 1714, column: 9, scope: !3377)
!3380 = !DILocation(line: 1718, column: 18, scope: !3273)
!3381 = !DILocation(line: 1718, column: 39, scope: !3273)
!3382 = !DILocation(line: 1719, column: 35, scope: !3273)
!3383 = !DILocation(line: 1718, column: 9, scope: !3273)
!3384 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3285)
!3385 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3285)
!3386 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3285)
!3387 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3285)
!3388 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3285)
!3389 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3285)
!3390 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3285)
!3391 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3285)
!3392 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3285)
!3393 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3285)
!3394 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3285)
!3395 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3290)
!3396 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3290)
!3397 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3290)
!3398 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3290)
!3399 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3290)
!3400 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3290)
!3401 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3290)
!3402 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3290)
!3403 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3290)
!3404 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3290)
!3405 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3290)
!3406 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3290)
!3407 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3290)
!3408 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3290)
!3409 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3290)
!3410 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3290)
!3411 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3290)
!3412 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3290)
!3413 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3285)
!3414 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3285)
!3415 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3285)
!3416 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3285)
!3417 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3285)
!3418 = !DILexicalBlockFile(scope: !3281, file: !1656, discriminator: 1)
!3419 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3285)
!3420 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3285)
!3421 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3285)
!3422 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3285)
!3423 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3285)
!3424 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3285)
!3425 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3285)
!3426 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3285)
!3427 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3285)
!3428 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3285)
!3429 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3285)
!3430 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3285)
!3431 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3285)
!3432 = !DILexicalBlockFile(scope: !3280, file: !1656, discriminator: 2)
!3433 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3285)
!3434 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3285)
!3435 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3285)
!3436 = !DILexicalBlockFile(scope: !3279, file: !1656, discriminator: 3)
!3437 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3285)
!3438 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3285)
!3439 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3285)
!3440 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3285)
!3441 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3285)
!3442 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3285)
!3443 = !DILexicalBlockFile(scope: !3279, file: !1656, discriminator: 4)
!3444 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3285)
!3445 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3285)
!3446 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3285)
!3447 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3285)
!3448 = !DILexicalBlockFile(scope: !3279, file: !1656, discriminator: 5)
!3449 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3285)
!3450 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3285)
!3451 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3285)
!3452 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3285)
!3453 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3285)
!3454 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3285)
!3455 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3285)
!3456 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3285)
!3457 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3285)
!3458 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3285)
!3459 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3287)
!3460 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3287)
!3461 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3287)
!3462 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3287)
!3463 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3287)
!3464 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3287)
!3465 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3287)
!3466 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3287)
!3467 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3287)
!3468 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3287)
!3469 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3287)
!3470 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3287)
!3471 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3287)
!3472 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3287)
!3473 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3287)
!3474 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3287)
!3475 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3287)
!3476 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3287)
!3477 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3285)
!3478 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3285)
!3479 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3285)
!3480 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3285)
!3481 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3285)
!3482 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3285)
!3483 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3285)
!3484 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3285)
!3485 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3285)
!3486 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3285)
!3487 = !DILexicalBlockFile(scope: !3288, file: !1656, discriminator: 19)
!3488 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3285)
!3489 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3285)
!3490 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3285)
!3491 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3285)
!3492 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3285)
!3493 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3285)
!3494 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3285)
!3495 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3285)
!3496 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3285)
!3497 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3285)
!3498 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3285)
!3499 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3285)
!3500 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3285)
!3501 = !DILexicalBlockFile(scope: !3278, file: !1656, discriminator: 7)
!3502 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3285)
!3503 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3285)
!3504 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3285)
!3505 = !DILexicalBlockFile(scope: !3277, file: !1656, discriminator: 8)
!3506 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3285)
!3507 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3285)
!3508 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3285)
!3509 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3285)
!3510 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3285)
!3511 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3285)
!3512 = !DILexicalBlockFile(scope: !3277, file: !1656, discriminator: 9)
!3513 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3285)
!3514 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3285)
!3515 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3285)
!3516 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3285)
!3517 = !DILexicalBlockFile(scope: !3277, file: !1656, discriminator: 10)
!3518 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3285)
!3519 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3285)
!3520 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3285)
!3521 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3285)
!3522 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3285)
!3523 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3285)
!3524 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3285)
!3525 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3285)
!3526 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3285)
!3527 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3285)
!3528 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3275)
!3529 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3275)
!3530 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3275)
!3531 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3275)
!3532 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3275)
!3533 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3275)
!3534 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3275)
!3535 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3275)
!3536 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3275)
!3537 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3275)
!3538 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3275)
!3539 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3275)
!3540 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3275)
!3541 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3275)
!3542 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3275)
!3543 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3275)
!3544 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3275)
!3545 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3275)
!3546 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3285)
!3547 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3285)
!3548 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3285)
!3549 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3285)
!3550 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3285)
!3551 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3285)
!3552 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3285)
!3553 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3285)
!3554 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3285)
!3555 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3285)
!3556 = !DILexicalBlockFile(scope: !3276, file: !1656, discriminator: 20)
!3557 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3285)
!3558 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3285)
!3559 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3285)
!3560 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3285)
!3561 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3285)
!3562 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3285)
!3563 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3285)
!3564 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3285)
!3565 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3285)
!3566 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3285)
!3567 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3285)
!3568 = !DILexicalBlockFile(scope: !3279, file: !1656, discriminator: 12)
!3569 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3285)
!3570 = !DILexicalBlockFile(scope: !3571, file: !1656, discriminator: 14)
!3571 = distinct !DILexicalBlock(scope: !3281, file: !1656, line: 788, column: 811)
!3572 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3285)
!3573 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3285)
!3574 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3285)
!3575 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3285)
!3576 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3285)
!3577 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3285)
!3578 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3285)
!3579 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3285)
!3580 = !DILexicalBlockFile(scope: !3571, file: !1656, discriminator: 15)
!3581 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3285)
!3582 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3285)
!3583 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3285)
!3584 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3285)
!3585 = !DILexicalBlockFile(scope: !3571, file: !1656, discriminator: 16)
!3586 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3285)
!3587 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3285)
!3588 = !DILexicalBlockFile(scope: !3571, file: !1656, discriminator: 17)
!3589 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3285)
!3590 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3285)
!3591 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3285)
!3592 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3285)
!3593 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3285)
!3594 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3285)
!3595 = !DILocation(line: 1719, column: 44, scope: !3273)
!3596 = !DILocation(line: 1717, column: 5, scope: !3273)
!3597 = !DILocation(line: 1717, column: 10, scope: !3273)
!3598 = !DILocation(line: 1717, column: 22, scope: !3273)
!3599 = !DILocation(line: 1717, column: 37, scope: !3273)
!3600 = !DILocation(line: 1721, column: 9, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3273, file: !904, line: 1721, column: 9)
!3602 = !DILocation(line: 1721, column: 22, scope: !3601)
!3603 = !DILocation(line: 1721, column: 9, scope: !3273)
!3604 = !DILocation(line: 1722, column: 27, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3601, file: !904, line: 1721, column: 28)
!3606 = !DILocation(line: 1722, column: 31, scope: !3605)
!3607 = !DILocation(line: 1722, column: 36, scope: !3605)
!3608 = !DILocation(line: 1722, column: 48, scope: !3605)
!3609 = !DILocation(line: 1722, column: 62, scope: !3605)
!3610 = !DILocation(line: 1722, column: 67, scope: !3605)
!3611 = !DILocation(line: 1722, column: 79, scope: !3605)
!3612 = !DILocation(line: 1722, column: 9, scope: !3605)
!3613 = !DILocation(line: 1723, column: 27, scope: !3605)
!3614 = !DILocation(line: 1723, column: 31, scope: !3605)
!3615 = !DILocation(line: 1723, column: 36, scope: !3605)
!3616 = !DILocation(line: 1723, column: 48, scope: !3605)
!3617 = !DILocation(line: 1723, column: 61, scope: !3605)
!3618 = !DILocation(line: 1723, column: 66, scope: !3605)
!3619 = !DILocation(line: 1723, column: 78, scope: !3605)
!3620 = !DILocation(line: 1723, column: 9, scope: !3605)
!3621 = !DILocation(line: 1724, column: 27, scope: !3605)
!3622 = !DILocation(line: 1724, column: 31, scope: !3605)
!3623 = !DILocation(line: 1724, column: 36, scope: !3605)
!3624 = !DILocation(line: 1724, column: 48, scope: !3605)
!3625 = !DILocation(line: 1724, column: 62, scope: !3605)
!3626 = !DILocation(line: 1724, column: 67, scope: !3605)
!3627 = !DILocation(line: 1724, column: 79, scope: !3605)
!3628 = !DILocation(line: 1724, column: 9, scope: !3605)
!3629 = !DILocation(line: 1725, column: 5, scope: !3605)
!3630 = !DILocation(line: 1727, column: 5, scope: !3273)
!3631 = !DILocation(line: 1727, column: 10, scope: !3273)
!3632 = !DILocation(line: 1727, column: 22, scope: !3273)
!3633 = !DILocation(line: 1727, column: 34, scope: !3273)
!3634 = !DILocation(line: 1729, column: 17, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3273, file: !904, line: 1729, column: 5)
!3636 = !DILocation(line: 1729, column: 10, scope: !3635)
!3637 = !DILocation(line: 1729, column: 22, scope: !3638)
!3638 = !DILexicalBlockFile(scope: !3639, file: !904, discriminator: 1)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !904, line: 1729, column: 5)
!3640 = !DILocation(line: 1729, column: 31, scope: !3638)
!3641 = !DILocation(line: 1729, column: 29, scope: !3638)
!3642 = !DILocation(line: 1729, column: 5, scope: !3638)
!3643 = !DILocation(line: 1730, column: 16, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !904, line: 1730, column: 9)
!3645 = distinct !DILexicalBlock(scope: !3639, file: !904, line: 1729, column: 55)
!3646 = !DILocation(line: 1730, column: 14, scope: !3644)
!3647 = !DILocation(line: 1730, column: 21, scope: !3648)
!3648 = !DILexicalBlockFile(scope: !3649, file: !904, discriminator: 1)
!3649 = distinct !DILexicalBlock(scope: !3644, file: !904, line: 1730, column: 9)
!3650 = !DILocation(line: 1730, column: 25, scope: !3648)
!3651 = !DILocation(line: 1730, column: 30, scope: !3648)
!3652 = !DILocation(line: 1730, column: 42, scope: !3648)
!3653 = !DILocation(line: 1730, column: 23, scope: !3648)
!3654 = !DILocation(line: 1730, column: 9, scope: !3648)
!3655 = !DILocation(line: 1731, column: 34, scope: !3649)
!3656 = !DILocation(line: 1731, column: 33, scope: !3649)
!3657 = !DILocation(line: 1731, column: 33, scope: !3648)
!3658 = !DILocation(line: 1731, column: 78, scope: !3659)
!3659 = !DILexicalBlockFile(scope: !3649, file: !904, discriminator: 2)
!3660 = !DILocation(line: 1731, column: 48, scope: !3659)
!3661 = !DILocation(line: 1731, column: 53, scope: !3659)
!3662 = !DILocation(line: 1731, column: 65, scope: !3659)
!3663 = !DILocation(line: 1731, column: 47, scope: !3659)
!3664 = !DILocation(line: 1731, column: 33, scope: !3659)
!3665 = !DILocation(line: 1731, column: 33, scope: !3666)
!3666 = !DILexicalBlockFile(scope: !3649, file: !904, discriminator: 3)
!3667 = !DILocation(line: 1731, column: 28, scope: !3666)
!3668 = !DILocation(line: 1731, column: 13, scope: !3666)
!3669 = !DILocation(line: 1731, column: 31, scope: !3666)
!3670 = !DILocation(line: 1730, column: 59, scope: !3659)
!3671 = !DILocation(line: 1730, column: 9, scope: !3659)
!3672 = distinct !{!3672, !3673}
!3673 = !DILocation(line: 1730, column: 9, scope: !3645)
!3674 = !DILocation(line: 1733, column: 31, scope: !3645)
!3675 = !DILocation(line: 1733, column: 35, scope: !3645)
!3676 = !DILocation(line: 1733, column: 40, scope: !3645)
!3677 = !DILocation(line: 1733, column: 48, scope: !3645)
!3678 = !DILocation(line: 1733, column: 9, scope: !3645)
!3679 = !DILocation(line: 1734, column: 40, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3645, file: !904, line: 1734, column: 13)
!3681 = !DILocation(line: 1734, column: 44, scope: !3680)
!3682 = !DILocation(line: 1734, column: 49, scope: !3680)
!3683 = !DILocation(line: 1734, column: 57, scope: !3680)
!3684 = !DILocation(line: 1735, column: 40, scope: !3680)
!3685 = !DILocation(line: 1734, column: 20, scope: !3680)
!3686 = !DILocation(line: 1734, column: 18, scope: !3680)
!3687 = !DILocation(line: 1735, column: 48, scope: !3680)
!3688 = !DILocation(line: 1734, column: 13, scope: !3645)
!3689 = !DILocation(line: 1736, column: 20, scope: !3680)
!3690 = !DILocation(line: 1736, column: 13, scope: !3680)
!3691 = !DILocation(line: 1738, column: 32, scope: !3645)
!3692 = !DILocation(line: 1738, column: 36, scope: !3645)
!3693 = !DILocation(line: 1738, column: 41, scope: !3645)
!3694 = !DILocation(line: 1738, column: 49, scope: !3645)
!3695 = !DILocation(line: 1738, column: 9, scope: !3645)
!3696 = !DILocation(line: 1739, column: 32, scope: !3645)
!3697 = !DILocation(line: 1739, column: 36, scope: !3645)
!3698 = !DILocation(line: 1739, column: 41, scope: !3645)
!3699 = !DILocation(line: 1739, column: 49, scope: !3645)
!3700 = !DILocation(line: 1739, column: 9, scope: !3645)
!3701 = !DILocation(line: 1740, column: 28, scope: !3645)
!3702 = !DILocation(line: 1740, column: 32, scope: !3645)
!3703 = !DILocation(line: 1740, column: 37, scope: !3645)
!3704 = !DILocation(line: 1740, column: 45, scope: !3645)
!3705 = !DILocation(line: 1740, column: 9, scope: !3645)
!3706 = !DILocation(line: 1741, column: 5, scope: !3645)
!3707 = !DILocation(line: 1729, column: 51, scope: !3708)
!3708 = !DILexicalBlockFile(scope: !3639, file: !904, discriminator: 2)
!3709 = !DILocation(line: 1729, column: 5, scope: !3708)
!3710 = distinct !{!3710, !3711}
!3711 = !DILocation(line: 1729, column: 5, scope: !3273)
!3712 = !DILocation(line: 1743, column: 9, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3273, file: !904, line: 1743, column: 9)
!3714 = !DILocation(line: 1743, column: 22, scope: !3713)
!3715 = !DILocation(line: 1743, column: 9, scope: !3273)
!3716 = !DILocation(line: 1744, column: 16, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !904, line: 1744, column: 9)
!3718 = distinct !DILexicalBlock(scope: !3713, file: !904, line: 1743, column: 28)
!3719 = !DILocation(line: 1744, column: 14, scope: !3717)
!3720 = !DILocation(line: 1744, column: 21, scope: !3721)
!3721 = !DILexicalBlockFile(scope: !3722, file: !904, discriminator: 1)
!3722 = distinct !DILexicalBlock(scope: !3717, file: !904, line: 1744, column: 9)
!3723 = !DILocation(line: 1744, column: 25, scope: !3721)
!3724 = !DILocation(line: 1744, column: 30, scope: !3721)
!3725 = !DILocation(line: 1744, column: 42, scope: !3721)
!3726 = !DILocation(line: 1744, column: 23, scope: !3721)
!3727 = !DILocation(line: 1744, column: 9, scope: !3721)
!3728 = !DILocation(line: 1745, column: 47, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !904, line: 1745, column: 17)
!3730 = distinct !DILexicalBlock(scope: !3722, file: !904, line: 1744, column: 63)
!3731 = !DILocation(line: 1745, column: 17, scope: !3729)
!3732 = !DILocation(line: 1745, column: 22, scope: !3729)
!3733 = !DILocation(line: 1745, column: 34, scope: !3729)
!3734 = !DILocation(line: 1745, column: 17, scope: !3730)
!3735 = !DILocation(line: 1746, column: 45, scope: !3729)
!3736 = !DILocation(line: 1746, column: 17, scope: !3729)
!3737 = !DILocation(line: 1746, column: 22, scope: !3729)
!3738 = !DILocation(line: 1746, column: 34, scope: !3729)
!3739 = !DILocation(line: 1746, column: 78, scope: !3729)
!3740 = !DILocation(line: 1746, column: 50, scope: !3729)
!3741 = !DILocation(line: 1746, column: 55, scope: !3729)
!3742 = !DILocation(line: 1746, column: 67, scope: !3729)
!3743 = !DILocation(line: 1748, column: 46, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3730, file: !904, line: 1748, column: 17)
!3745 = !DILocation(line: 1748, column: 17, scope: !3744)
!3746 = !DILocation(line: 1748, column: 22, scope: !3744)
!3747 = !DILocation(line: 1748, column: 34, scope: !3744)
!3748 = !DILocation(line: 1748, column: 17, scope: !3730)
!3749 = !DILocation(line: 1749, column: 17, scope: !3744)
!3750 = distinct !{!3750, !3749}
!3751 = !DILocalVariable(name: "SWAP_tmp", scope: !3752, file: !904, line: 1749, type: !1724)
!3752 = distinct !DILexicalBlock(scope: !3744, file: !904, line: 1749, column: 19)
!3753 = !DILocation(line: 1749, column: 37, scope: !3752)
!3754 = !DILocation(line: 1749, column: 75, scope: !3755)
!3755 = !DILexicalBlockFile(scope: !3752, file: !904, discriminator: 1)
!3756 = !DILocation(line: 1749, column: 47, scope: !3755)
!3757 = !DILocation(line: 1749, column: 52, scope: !3755)
!3758 = !DILocation(line: 1749, column: 64, scope: !3755)
!3759 = !DILocation(line: 1749, column: 107, scope: !3755)
!3760 = !DILocation(line: 1749, column: 79, scope: !3755)
!3761 = !DILocation(line: 1749, column: 84, scope: !3755)
!3762 = !DILocation(line: 1749, column: 96, scope: !3755)
!3763 = !DILocation(line: 1749, column: 139, scope: !3755)
!3764 = !DILocation(line: 1749, column: 111, scope: !3755)
!3765 = !DILocation(line: 1749, column: 116, scope: !3755)
!3766 = !DILocation(line: 1749, column: 128, scope: !3755)
!3767 = !DILocation(line: 1749, column: 111, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !3755, file: !904, discriminator: 3)
!3769 = !DILocation(line: 1749, column: 171, scope: !3755)
!3770 = !DILocation(line: 1749, column: 143, scope: !3755)
!3771 = !DILocation(line: 1749, column: 148, scope: !3755)
!3772 = !DILocation(line: 1749, column: 160, scope: !3755)
!3773 = !DILocation(line: 1749, column: 175, scope: !3755)
!3774 = !DILocation(line: 1749, column: 175, scope: !3775)
!3775 = !DILexicalBlockFile(scope: !3755, file: !904, discriminator: 4)
!3776 = !DILocation(line: 1749, column: 184, scope: !3755)
!3777 = !DILocation(line: 1749, column: 184, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3752, file: !904, discriminator: 2)
!3779 = !DILocation(line: 1751, column: 9, scope: !3730)
!3780 = !DILocation(line: 1744, column: 59, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3722, file: !904, discriminator: 2)
!3782 = !DILocation(line: 1744, column: 9, scope: !3781)
!3783 = distinct !{!3783, !3784}
!3784 = !DILocation(line: 1744, column: 9, scope: !3718)
!3785 = !DILocation(line: 1752, column: 5, scope: !3718)
!3786 = !DILocation(line: 1754, column: 5, scope: !3273)
!3787 = !DILocation(line: 1755, column: 1, scope: !3273)
!3788 = distinct !DISubprogram(name: "NEG_USR32", scope: !3789, file: !3789, line: 124, type: !3790, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3789 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!897, !897, !1302}
!3792 = !DILocalVariable(name: "a", arg: 1, scope: !3788, file: !3789, line: 124, type: !897)
!3793 = !DILocation(line: 124, column: 43, scope: !3788)
!3794 = !DILocalVariable(name: "s", arg: 2, scope: !3788, file: !3789, line: 124, type: !1302)
!3795 = !DILocation(line: 124, column: 53, scope: !3788)
!3796 = !DILocation(line: 125, column: 5, scope: !3788)
!3797 = !DILocation(line: 127, column: 29, scope: !3788)
!3798 = !DILocation(line: 127, column: 28, scope: !3788)
!3799 = !DILocation(line: 127, column: 18, scope: !3788)
!3800 = !{i32 178824, i32 178838}
!3801 = !DILocation(line: 129, column: 12, scope: !3788)
!3802 = !DILocation(line: 129, column: 5, scope: !3788)
!3803 = distinct !DISubprogram(name: "decode_channel_wordlen", scope: !904, file: !904, line: 335, type: !1652, isLocal: true, isDefinition: true, scopeLine: 337, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3804 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3805)
!3805 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3806)
!3806 = distinct !DILocation(line: 446, column: 25, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !904, line: 445, column: 56)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !904, line: 445, column: 13)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !904, line: 445, column: 13)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !904, line: 439, column: 35)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !904, line: 439, column: 13)
!3812 = distinct !DILexicalBlock(scope: !3803, file: !904, line: 346, column: 30)
!3813 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3814)
!3814 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3806)
!3815 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3816)
!3816 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3806)
!3817 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3806)
!3818 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3806)
!3819 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3806)
!3820 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3806)
!3821 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3806)
!3822 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3806)
!3823 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3806)
!3824 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3806)
!3825 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3806)
!3826 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3806)
!3827 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3806)
!3828 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3829)
!3829 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3830)
!3830 = distinct !DILocation(line: 429, column: 44, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !904, line: 427, column: 21)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !904, line: 416, column: 20)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !904, line: 411, column: 17)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !904, line: 402, column: 42)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !904, line: 402, column: 20)
!3836 = distinct !DILexicalBlock(scope: !3812, file: !904, line: 392, column: 13)
!3837 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3838)
!3838 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3830)
!3839 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3840)
!3840 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3830)
!3841 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3830)
!3842 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3830)
!3843 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3830)
!3844 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3830)
!3845 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3830)
!3846 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3830)
!3847 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3830)
!3848 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3830)
!3849 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3830)
!3850 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3830)
!3851 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3830)
!3852 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3853)
!3853 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3854)
!3854 = distinct !DILocation(line: 423, column: 52, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !904, line: 418, column: 41)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !904, line: 418, column: 25)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !904, line: 417, column: 17)
!3858 = distinct !DILexicalBlock(scope: !3832, file: !904, line: 417, column: 17)
!3859 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3860)
!3860 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3854)
!3861 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3862)
!3862 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3854)
!3863 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3854)
!3864 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3854)
!3865 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3854)
!3866 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3854)
!3867 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3854)
!3868 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3854)
!3869 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3854)
!3870 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3854)
!3871 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3854)
!3872 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3854)
!3873 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3854)
!3874 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3875)
!3875 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3876)
!3876 = distinct !DILocation(line: 420, column: 52, scope: !3855)
!3877 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3878)
!3878 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3876)
!3879 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3880)
!3880 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3876)
!3881 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3876)
!3882 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3876)
!3883 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3876)
!3884 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3876)
!3885 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3876)
!3886 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3876)
!3887 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3876)
!3888 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3876)
!3889 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3876)
!3890 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3876)
!3891 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3876)
!3892 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3893)
!3893 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3894)
!3894 = distinct !DILocation(line: 413, column: 29, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !904, line: 412, column: 60)
!3896 = distinct !DILexicalBlock(scope: !3897, file: !904, line: 412, column: 17)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !904, line: 412, column: 17)
!3898 = distinct !DILexicalBlock(scope: !3833, file: !904, line: 411, column: 24)
!3899 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3900)
!3900 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3894)
!3901 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3902)
!3902 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3894)
!3903 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3894)
!3904 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3894)
!3905 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3894)
!3906 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3894)
!3907 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3894)
!3908 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3894)
!3909 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3894)
!3910 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3894)
!3911 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3894)
!3912 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3894)
!3913 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3894)
!3914 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3915)
!3915 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3916)
!3916 = distinct !DILocation(line: 399, column: 25, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !904, line: 397, column: 56)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !904, line: 397, column: 13)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !904, line: 397, column: 13)
!3920 = distinct !DILexicalBlock(scope: !3836, file: !904, line: 392, column: 45)
!3921 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3922)
!3922 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3916)
!3923 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3924)
!3924 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3916)
!3925 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3916)
!3926 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3916)
!3927 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3916)
!3928 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3916)
!3929 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3916)
!3930 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3916)
!3931 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3916)
!3932 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3916)
!3933 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3916)
!3934 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3916)
!3935 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3916)
!3936 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3937)
!3937 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3938)
!3938 = distinct !DILocation(line: 394, column: 21, scope: !3920)
!3939 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3940)
!3940 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3938)
!3941 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3942)
!3942 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3938)
!3943 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3938)
!3944 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3938)
!3945 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3938)
!3946 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3938)
!3947 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3938)
!3948 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3938)
!3949 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3938)
!3950 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3938)
!3951 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3938)
!3952 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3938)
!3953 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3938)
!3954 = !DILocalVariable(name: "s", arg: 1, scope: !3955, file: !1656, line: 412, type: !1654)
!3955 = distinct !DISubprogram(name: "get_bitsz", scope: !1656, file: !1656, line: 412, type: !3956, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!888, !1654, !888}
!3958 = !DILocation(line: 412, column: 75, scope: !3955, inlinedAt: !3959)
!3959 = distinct !DILocation(line: 384, column: 54, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !904, line: 383, column: 17)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !904, line: 383, column: 17)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !904, line: 369, column: 39)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !904, line: 369, column: 17)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !904, line: 364, column: 16)
!3965 = distinct !DILexicalBlock(scope: !3812, file: !904, line: 352, column: 13)
!3966 = !DILocalVariable(name: "n", arg: 2, scope: !3955, file: !1656, line: 412, type: !888)
!3967 = !DILocation(line: 412, column: 82, scope: !3955, inlinedAt: !3959)
!3968 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3969)
!3969 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3970)
!3970 = distinct !DILocation(line: 360, column: 29, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !904, line: 359, column: 60)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !904, line: 359, column: 17)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !904, line: 359, column: 17)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !904, line: 356, column: 39)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !904, line: 356, column: 17)
!3976 = distinct !DILexicalBlock(scope: !3965, file: !904, line: 352, column: 21)
!3977 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3978)
!3978 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3970)
!3979 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !3980)
!3980 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3970)
!3981 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !3970)
!3982 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !3970)
!3983 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !3970)
!3984 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !3970)
!3985 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !3970)
!3986 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !3970)
!3987 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !3970)
!3988 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !3970)
!3989 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !3970)
!3990 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !3970)
!3991 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !3970)
!3992 = !DILocalVariable(name: "gb", arg: 1, scope: !3803, file: !904, line: 335, type: !1654)
!3993 = !DILocation(line: 335, column: 50, scope: !3803)
!3994 = !DILocalVariable(name: "ctx", arg: 2, scope: !3803, file: !904, line: 335, type: !1664)
!3995 = !DILocation(line: 335, column: 74, scope: !3803)
!3996 = !DILocalVariable(name: "ch_num", arg: 3, scope: !3803, file: !904, line: 336, type: !888)
!3997 = !DILocation(line: 336, column: 39, scope: !3803)
!3998 = !DILocalVariable(name: "avctx", arg: 4, scope: !3803, file: !904, line: 336, type: !1782)
!3999 = !DILocation(line: 336, column: 63, scope: !3803)
!4000 = !DILocalVariable(name: "i", scope: !3803, file: !904, line: 338, type: !888)
!4001 = !DILocation(line: 338, column: 9, scope: !3803)
!4002 = !DILocalVariable(name: "weight_idx", scope: !3803, file: !904, line: 338, type: !888)
!4003 = !DILocation(line: 338, column: 12, scope: !3803)
!4004 = !DILocalVariable(name: "delta", scope: !3803, file: !904, line: 338, type: !888)
!4005 = !DILocation(line: 338, column: 28, scope: !3803)
!4006 = !DILocalVariable(name: "diff", scope: !3803, file: !904, line: 338, type: !888)
!4007 = !DILocation(line: 338, column: 35, scope: !3803)
!4008 = !DILocalVariable(name: "pos", scope: !3803, file: !904, line: 338, type: !888)
!4009 = !DILocation(line: 338, column: 41, scope: !3803)
!4010 = !DILocalVariable(name: "delta_bits", scope: !3803, file: !904, line: 338, type: !888)
!4011 = !DILocation(line: 338, column: 46, scope: !3803)
!4012 = !DILocalVariable(name: "min_val", scope: !3803, file: !904, line: 338, type: !888)
!4013 = !DILocation(line: 338, column: 58, scope: !3803)
!4014 = !DILocalVariable(name: "flag", scope: !3803, file: !904, line: 338, type: !888)
!4015 = !DILocation(line: 338, column: 67, scope: !3803)
!4016 = !DILocalVariable(name: "ret", scope: !3803, file: !904, line: 339, type: !888)
!4017 = !DILocation(line: 339, column: 9, scope: !3803)
!4018 = !DILocalVariable(name: "start_val", scope: !3803, file: !904, line: 339, type: !888)
!4019 = !DILocation(line: 339, column: 14, scope: !3803)
!4020 = !DILocalVariable(name: "vlc_tab", scope: !3803, file: !904, line: 340, type: !1536)
!4021 = !DILocation(line: 340, column: 10, scope: !3803)
!4022 = !DILocalVariable(name: "chan", scope: !3803, file: !904, line: 341, type: !2870)
!4023 = !DILocation(line: 341, column: 24, scope: !3803)
!4024 = !DILocation(line: 341, column: 46, scope: !3803)
!4025 = !DILocation(line: 341, column: 32, scope: !3803)
!4026 = !DILocation(line: 341, column: 37, scope: !3803)
!4027 = !DILocalVariable(name: "ref_chan", scope: !3803, file: !904, line: 342, type: !2870)
!4028 = !DILocation(line: 342, column: 24, scope: !3803)
!4029 = !DILocation(line: 342, column: 36, scope: !3803)
!4030 = !DILocation(line: 342, column: 41, scope: !3803)
!4031 = !DILocation(line: 344, column: 5, scope: !3803)
!4032 = !DILocation(line: 344, column: 11, scope: !3803)
!4033 = !DILocation(line: 344, column: 21, scope: !3803)
!4034 = !DILocation(line: 346, column: 22, scope: !3803)
!4035 = !DILocation(line: 346, column: 13, scope: !3803)
!4036 = !DILocation(line: 346, column: 5, scope: !3803)
!4037 = !DILocation(line: 348, column: 16, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !3812, file: !904, line: 348, column: 9)
!4039 = !DILocation(line: 348, column: 14, scope: !4038)
!4040 = !DILocation(line: 348, column: 21, scope: !4041)
!4041 = !DILexicalBlockFile(scope: !4042, file: !904, discriminator: 1)
!4042 = distinct !DILexicalBlock(scope: !4038, file: !904, line: 348, column: 9)
!4043 = !DILocation(line: 348, column: 25, scope: !4041)
!4044 = !DILocation(line: 348, column: 30, scope: !4041)
!4045 = !DILocation(line: 348, column: 23, scope: !4041)
!4046 = !DILocation(line: 348, column: 9, scope: !4041)
!4047 = !DILocation(line: 349, column: 44, scope: !4042)
!4048 = !DILocation(line: 349, column: 35, scope: !4042)
!4049 = !DILocation(line: 349, column: 30, scope: !4042)
!4050 = !DILocation(line: 349, column: 13, scope: !4042)
!4051 = !DILocation(line: 349, column: 19, scope: !4042)
!4052 = !DILocation(line: 349, column: 33, scope: !4042)
!4053 = !DILocation(line: 348, column: 48, scope: !4054)
!4054 = !DILexicalBlockFile(scope: !4042, file: !904, discriminator: 2)
!4055 = !DILocation(line: 348, column: 9, scope: !4054)
!4056 = distinct !{!4056, !4057}
!4057 = !DILocation(line: 348, column: 9, scope: !3812)
!4058 = !DILocation(line: 350, column: 9, scope: !3812)
!4059 = !DILocation(line: 352, column: 13, scope: !3965)
!4060 = !DILocation(line: 352, column: 13, scope: !3812)
!4061 = !DILocation(line: 353, column: 40, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3976, file: !904, line: 353, column: 17)
!4063 = !DILocation(line: 353, column: 44, scope: !4062)
!4064 = !DILocation(line: 353, column: 50, scope: !4062)
!4065 = !DILocation(line: 353, column: 55, scope: !4062)
!4066 = !DILocation(line: 353, column: 24, scope: !4062)
!4067 = !DILocation(line: 353, column: 22, scope: !4062)
!4068 = !DILocation(line: 353, column: 63, scope: !4062)
!4069 = !DILocation(line: 353, column: 17, scope: !3976)
!4070 = !DILocation(line: 354, column: 24, scope: !4062)
!4071 = !DILocation(line: 354, column: 17, scope: !4062)
!4072 = !DILocation(line: 356, column: 17, scope: !3975)
!4073 = !DILocation(line: 356, column: 23, scope: !3975)
!4074 = !DILocation(line: 356, column: 17, scope: !3976)
!4075 = !DILocation(line: 357, column: 49, scope: !3974)
!4076 = !DILocation(line: 357, column: 40, scope: !3974)
!4077 = !DILocation(line: 357, column: 28, scope: !3974)
!4078 = !DILocation(line: 357, column: 25, scope: !3974)
!4079 = !DILocation(line: 359, column: 24, scope: !3973)
!4080 = !DILocation(line: 359, column: 22, scope: !3973)
!4081 = !DILocation(line: 359, column: 29, scope: !4082)
!4082 = !DILexicalBlockFile(scope: !3972, file: !904, discriminator: 1)
!4083 = !DILocation(line: 359, column: 33, scope: !4082)
!4084 = !DILocation(line: 359, column: 39, scope: !4082)
!4085 = !DILocation(line: 359, column: 31, scope: !4082)
!4086 = !DILocation(line: 359, column: 17, scope: !4082)
!4087 = !DILocation(line: 360, column: 38, scope: !3971)
!4088 = !DILocation(line: 360, column: 42, scope: !3971)
!4089 = !DILocation(line: 360, column: 51, scope: !3971)
!4090 = !DILocation(line: 360, column: 58, scope: !3971)
!4091 = !DILocation(line: 360, column: 67, scope: !3971)
!4092 = !DILocation(line: 360, column: 29, scope: !3971)
!4093 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3970)
!4094 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3970)
!4095 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3970)
!4096 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3970)
!4097 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3970)
!4098 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3970)
!4099 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3970)
!4100 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3970)
!4101 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3970)
!4102 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3970)
!4103 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3970)
!4104 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3980)
!4105 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3980)
!4106 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3980)
!4107 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3980)
!4108 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3980)
!4109 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3980)
!4110 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3980)
!4111 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3980)
!4112 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3980)
!4113 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3980)
!4114 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3980)
!4115 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3980)
!4116 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3980)
!4117 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3980)
!4118 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3980)
!4119 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3980)
!4120 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3980)
!4121 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3980)
!4122 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3970)
!4123 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3970)
!4124 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3970)
!4125 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3970)
!4126 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3970)
!4127 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3970)
!4128 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3970)
!4129 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3970)
!4130 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3970)
!4131 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3970)
!4132 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3970)
!4133 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3970)
!4134 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3970)
!4135 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3970)
!4136 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3970)
!4137 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3970)
!4138 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3970)
!4139 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3970)
!4140 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3970)
!4141 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3970)
!4142 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3970)
!4143 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3970)
!4144 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3970)
!4145 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3970)
!4146 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3970)
!4147 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3970)
!4148 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3970)
!4149 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3970)
!4150 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3970)
!4151 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3970)
!4152 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3970)
!4153 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3970)
!4154 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3970)
!4155 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3970)
!4156 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3970)
!4157 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3970)
!4158 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3970)
!4159 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3970)
!4160 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3970)
!4161 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3970)
!4162 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3970)
!4163 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3978)
!4164 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3978)
!4165 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3978)
!4166 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3978)
!4167 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3978)
!4168 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3978)
!4169 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3978)
!4170 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3978)
!4171 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3978)
!4172 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3978)
!4173 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3978)
!4174 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3978)
!4175 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3978)
!4176 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3978)
!4177 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3978)
!4178 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3978)
!4179 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3978)
!4180 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3978)
!4181 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3970)
!4182 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3970)
!4183 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3970)
!4184 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3970)
!4185 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3970)
!4186 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3970)
!4187 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3970)
!4188 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3970)
!4189 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3970)
!4190 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3970)
!4191 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3970)
!4192 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3970)
!4193 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3970)
!4194 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3970)
!4195 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3970)
!4196 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3970)
!4197 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3970)
!4198 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3970)
!4199 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3970)
!4200 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3970)
!4201 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3970)
!4202 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3970)
!4203 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3970)
!4204 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3970)
!4205 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3970)
!4206 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3970)
!4207 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3970)
!4208 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3970)
!4209 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3970)
!4210 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3970)
!4211 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3970)
!4212 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3970)
!4213 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3970)
!4214 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3970)
!4215 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3970)
!4216 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3970)
!4217 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3970)
!4218 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3970)
!4219 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3970)
!4220 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3970)
!4221 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3970)
!4222 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3970)
!4223 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3970)
!4224 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3970)
!4225 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3970)
!4226 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3970)
!4227 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3969)
!4228 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3969)
!4229 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3969)
!4230 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3969)
!4231 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3969)
!4232 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3969)
!4233 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3969)
!4234 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3969)
!4235 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3969)
!4236 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3969)
!4237 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3969)
!4238 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3969)
!4239 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3969)
!4240 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3969)
!4241 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3969)
!4242 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3969)
!4243 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3969)
!4244 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3969)
!4245 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3970)
!4246 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3970)
!4247 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3970)
!4248 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3970)
!4249 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3970)
!4250 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3970)
!4251 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3970)
!4252 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3970)
!4253 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3970)
!4254 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3970)
!4255 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3970)
!4256 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3970)
!4257 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3970)
!4258 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3970)
!4259 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3970)
!4260 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3970)
!4261 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3970)
!4262 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3970)
!4263 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3970)
!4264 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3970)
!4265 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3970)
!4266 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3970)
!4267 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3970)
!4268 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3970)
!4269 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3970)
!4270 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3970)
!4271 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3970)
!4272 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3970)
!4273 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3970)
!4274 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3970)
!4275 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3970)
!4276 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3970)
!4277 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3970)
!4278 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3970)
!4279 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3970)
!4280 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3970)
!4281 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3970)
!4282 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3970)
!4283 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3970)
!4284 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3970)
!4285 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3970)
!4286 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3970)
!4287 = !DILocation(line: 360, column: 27, scope: !3971)
!4288 = !DILocation(line: 361, column: 65, scope: !3971)
!4289 = !DILocation(line: 361, column: 44, scope: !3971)
!4290 = !DILocation(line: 361, column: 54, scope: !3971)
!4291 = !DILocation(line: 361, column: 70, scope: !3971)
!4292 = !DILocation(line: 361, column: 68, scope: !3971)
!4293 = !DILocation(line: 361, column: 77, scope: !3971)
!4294 = !DILocation(line: 361, column: 38, scope: !3971)
!4295 = !DILocation(line: 361, column: 21, scope: !3971)
!4296 = !DILocation(line: 361, column: 27, scope: !3971)
!4297 = !DILocation(line: 361, column: 41, scope: !3971)
!4298 = !DILocation(line: 362, column: 17, scope: !3971)
!4299 = !DILocation(line: 359, column: 56, scope: !4300)
!4300 = !DILexicalBlockFile(scope: !3972, file: !904, discriminator: 2)
!4301 = !DILocation(line: 359, column: 17, scope: !4300)
!4302 = distinct !{!4302, !4303}
!4303 = !DILocation(line: 359, column: 17, scope: !3974)
!4304 = !DILocation(line: 363, column: 13, scope: !3974)
!4305 = !DILocation(line: 364, column: 9, scope: !3976)
!4306 = !DILocation(line: 365, column: 35, scope: !3964)
!4307 = !DILocation(line: 365, column: 26, scope: !3964)
!4308 = !DILocation(line: 365, column: 24, scope: !3964)
!4309 = !DILocation(line: 366, column: 40, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !3964, file: !904, line: 366, column: 17)
!4311 = !DILocation(line: 366, column: 44, scope: !4310)
!4312 = !DILocation(line: 366, column: 50, scope: !4310)
!4313 = !DILocation(line: 366, column: 55, scope: !4310)
!4314 = !DILocation(line: 366, column: 24, scope: !4310)
!4315 = !DILocation(line: 366, column: 22, scope: !4310)
!4316 = !DILocation(line: 366, column: 63, scope: !4310)
!4317 = !DILocation(line: 366, column: 17, scope: !3964)
!4318 = !DILocation(line: 367, column: 24, scope: !4310)
!4319 = !DILocation(line: 367, column: 17, scope: !4310)
!4320 = !DILocation(line: 369, column: 17, scope: !3963)
!4321 = !DILocation(line: 369, column: 23, scope: !3963)
!4322 = !DILocation(line: 369, column: 17, scope: !3964)
!4323 = !DILocation(line: 370, column: 32, scope: !3962)
!4324 = !DILocation(line: 370, column: 23, scope: !3962)
!4325 = !DILocation(line: 370, column: 21, scope: !3962)
!4326 = !DILocation(line: 371, column: 21, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !3962, file: !904, line: 371, column: 21)
!4328 = !DILocation(line: 371, column: 27, scope: !4327)
!4329 = !DILocation(line: 371, column: 33, scope: !4327)
!4330 = !DILocation(line: 371, column: 25, scope: !4327)
!4331 = !DILocation(line: 371, column: 21, scope: !3962)
!4332 = !DILocation(line: 372, column: 28, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4327, file: !904, line: 371, column: 49)
!4334 = !DILocation(line: 372, column: 21, scope: !4333)
!4335 = !DILocation(line: 374, column: 21, scope: !4333)
!4336 = !DILocation(line: 377, column: 39, scope: !3962)
!4337 = !DILocation(line: 377, column: 30, scope: !3962)
!4338 = !DILocation(line: 377, column: 28, scope: !3962)
!4339 = !DILocation(line: 378, column: 36, scope: !3962)
!4340 = !DILocation(line: 378, column: 27, scope: !3962)
!4341 = !DILocation(line: 378, column: 25, scope: !3962)
!4342 = !DILocation(line: 380, column: 24, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !3962, file: !904, line: 380, column: 17)
!4344 = !DILocation(line: 380, column: 22, scope: !4343)
!4345 = !DILocation(line: 380, column: 29, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !4347, file: !904, discriminator: 1)
!4347 = distinct !DILexicalBlock(scope: !4343, file: !904, line: 380, column: 17)
!4348 = !DILocation(line: 380, column: 33, scope: !4346)
!4349 = !DILocation(line: 380, column: 31, scope: !4346)
!4350 = !DILocation(line: 380, column: 17, scope: !4346)
!4351 = !DILocation(line: 381, column: 52, scope: !4347)
!4352 = !DILocation(line: 381, column: 43, scope: !4347)
!4353 = !DILocation(line: 381, column: 38, scope: !4347)
!4354 = !DILocation(line: 381, column: 21, scope: !4347)
!4355 = !DILocation(line: 381, column: 27, scope: !4347)
!4356 = !DILocation(line: 381, column: 41, scope: !4347)
!4357 = !DILocation(line: 380, column: 39, scope: !4358)
!4358 = !DILexicalBlockFile(scope: !4347, file: !904, discriminator: 2)
!4359 = !DILocation(line: 380, column: 17, scope: !4358)
!4360 = distinct !{!4360, !4361}
!4361 = !DILocation(line: 380, column: 17, scope: !3962)
!4362 = !DILocation(line: 383, column: 26, scope: !3961)
!4363 = !DILocation(line: 383, column: 24, scope: !3961)
!4364 = !DILocation(line: 383, column: 22, scope: !3961)
!4365 = !DILocation(line: 383, column: 31, scope: !4366)
!4366 = !DILexicalBlockFile(scope: !3960, file: !904, discriminator: 1)
!4367 = !DILocation(line: 383, column: 35, scope: !4366)
!4368 = !DILocation(line: 383, column: 41, scope: !4366)
!4369 = !DILocation(line: 383, column: 33, scope: !4366)
!4370 = !DILocation(line: 383, column: 17, scope: !4366)
!4371 = !DILocation(line: 384, column: 44, scope: !3960)
!4372 = !DILocation(line: 384, column: 64, scope: !3960)
!4373 = !DILocation(line: 384, column: 68, scope: !3960)
!4374 = !DILocation(line: 384, column: 54, scope: !3960)
!4375 = !DILocation(line: 414, column: 12, scope: !3955, inlinedAt: !3959)
!4376 = !DILocation(line: 414, column: 25, scope: !4377, inlinedAt: !3959)
!4377 = !DILexicalBlockFile(scope: !3955, file: !1656, discriminator: 1)
!4378 = !DILocation(line: 414, column: 28, scope: !4377, inlinedAt: !3959)
!4379 = !DILocation(line: 414, column: 16, scope: !4377, inlinedAt: !3959)
!4380 = !DILocation(line: 414, column: 12, scope: !4377, inlinedAt: !3959)
!4381 = !DILocation(line: 414, column: 12, scope: !4382, inlinedAt: !3959)
!4382 = !DILexicalBlockFile(scope: !3955, file: !1656, discriminator: 2)
!4383 = !DILocation(line: 414, column: 12, scope: !4384, inlinedAt: !3959)
!4384 = !DILexicalBlockFile(scope: !3955, file: !1656, discriminator: 3)
!4385 = !DILocation(line: 384, column: 52, scope: !3960)
!4386 = !DILocation(line: 384, column: 81, scope: !3960)
!4387 = !DILocation(line: 384, column: 38, scope: !3960)
!4388 = !DILocation(line: 384, column: 21, scope: !3960)
!4389 = !DILocation(line: 384, column: 27, scope: !3960)
!4390 = !DILocation(line: 384, column: 41, scope: !3960)
!4391 = !DILocation(line: 383, column: 58, scope: !4392)
!4392 = !DILexicalBlockFile(scope: !3960, file: !904, discriminator: 2)
!4393 = !DILocation(line: 383, column: 17, scope: !4392)
!4394 = distinct !{!4394, !4395}
!4395 = !DILocation(line: 383, column: 17, scope: !3962)
!4396 = !DILocation(line: 385, column: 13, scope: !3962)
!4397 = !DILocation(line: 387, column: 9, scope: !3812)
!4398 = !DILocation(line: 389, column: 36, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !3812, file: !904, line: 389, column: 13)
!4400 = !DILocation(line: 389, column: 40, scope: !4399)
!4401 = !DILocation(line: 389, column: 46, scope: !4399)
!4402 = !DILocation(line: 389, column: 51, scope: !4399)
!4403 = !DILocation(line: 389, column: 20, scope: !4399)
!4404 = !DILocation(line: 389, column: 18, scope: !4399)
!4405 = !DILocation(line: 389, column: 59, scope: !4399)
!4406 = !DILocation(line: 389, column: 13, scope: !3812)
!4407 = !DILocation(line: 390, column: 20, scope: !4399)
!4408 = !DILocation(line: 390, column: 13, scope: !4399)
!4409 = !DILocation(line: 392, column: 13, scope: !3836)
!4410 = !DILocation(line: 392, column: 20, scope: !3836)
!4411 = !DILocation(line: 392, column: 23, scope: !4412)
!4412 = !DILexicalBlockFile(scope: !3836, file: !904, discriminator: 1)
!4413 = !DILocation(line: 392, column: 29, scope: !4412)
!4414 = !DILocation(line: 392, column: 13, scope: !4412)
!4415 = !DILocation(line: 393, column: 45, scope: !3920)
!4416 = !DILocation(line: 393, column: 36, scope: !3920)
!4417 = !DILocation(line: 393, column: 24, scope: !3920)
!4418 = !DILocation(line: 393, column: 21, scope: !3920)
!4419 = !DILocation(line: 394, column: 30, scope: !3920)
!4420 = !DILocation(line: 394, column: 34, scope: !3920)
!4421 = !DILocation(line: 394, column: 43, scope: !3920)
!4422 = !DILocation(line: 394, column: 50, scope: !3920)
!4423 = !DILocation(line: 394, column: 59, scope: !3920)
!4424 = !DILocation(line: 394, column: 21, scope: !3920)
!4425 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3938)
!4426 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3938)
!4427 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3938)
!4428 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3938)
!4429 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3938)
!4430 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3938)
!4431 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3938)
!4432 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3938)
!4433 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3938)
!4434 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3938)
!4435 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3938)
!4436 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3942)
!4437 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3942)
!4438 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3942)
!4439 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3942)
!4440 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3942)
!4441 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3942)
!4442 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3942)
!4443 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3942)
!4444 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3942)
!4445 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3942)
!4446 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3942)
!4447 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3942)
!4448 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3942)
!4449 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3942)
!4450 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3942)
!4451 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3942)
!4452 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3942)
!4453 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3942)
!4454 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3938)
!4455 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3938)
!4456 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3938)
!4457 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3938)
!4458 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3938)
!4459 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3938)
!4460 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3938)
!4461 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3938)
!4462 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3938)
!4463 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3938)
!4464 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3938)
!4465 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3938)
!4466 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3938)
!4467 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3938)
!4468 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3938)
!4469 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3938)
!4470 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3938)
!4471 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3938)
!4472 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3938)
!4473 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3938)
!4474 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3938)
!4475 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3938)
!4476 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3938)
!4477 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3938)
!4478 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3938)
!4479 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3938)
!4480 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3938)
!4481 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3938)
!4482 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3938)
!4483 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3938)
!4484 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3938)
!4485 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3938)
!4486 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3938)
!4487 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3938)
!4488 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3938)
!4489 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3938)
!4490 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3938)
!4491 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3938)
!4492 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3938)
!4493 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3938)
!4494 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3938)
!4495 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3940)
!4496 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3940)
!4497 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3940)
!4498 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3940)
!4499 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3940)
!4500 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3940)
!4501 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3940)
!4502 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3940)
!4503 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3940)
!4504 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3940)
!4505 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3940)
!4506 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3940)
!4507 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3940)
!4508 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3940)
!4509 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3940)
!4510 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3940)
!4511 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3940)
!4512 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3940)
!4513 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3938)
!4514 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3938)
!4515 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3938)
!4516 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3938)
!4517 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3938)
!4518 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3938)
!4519 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3938)
!4520 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3938)
!4521 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3938)
!4522 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3938)
!4523 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3938)
!4524 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3938)
!4525 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3938)
!4526 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3938)
!4527 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3938)
!4528 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3938)
!4529 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3938)
!4530 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3938)
!4531 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3938)
!4532 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3938)
!4533 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3938)
!4534 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3938)
!4535 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3938)
!4536 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3938)
!4537 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3938)
!4538 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3938)
!4539 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3938)
!4540 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3938)
!4541 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3938)
!4542 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3938)
!4543 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3938)
!4544 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3938)
!4545 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3938)
!4546 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3938)
!4547 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3938)
!4548 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3938)
!4549 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3938)
!4550 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3938)
!4551 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3938)
!4552 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3938)
!4553 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3938)
!4554 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3938)
!4555 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3938)
!4556 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3938)
!4557 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3938)
!4558 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3938)
!4559 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3937)
!4560 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3937)
!4561 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3937)
!4562 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3937)
!4563 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3937)
!4564 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3937)
!4565 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3937)
!4566 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3937)
!4567 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3937)
!4568 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3937)
!4569 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3937)
!4570 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3937)
!4571 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3937)
!4572 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3937)
!4573 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3937)
!4574 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3937)
!4575 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3937)
!4576 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3937)
!4577 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3938)
!4578 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3938)
!4579 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3938)
!4580 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3938)
!4581 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3938)
!4582 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3938)
!4583 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3938)
!4584 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3938)
!4585 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3938)
!4586 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3938)
!4587 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3938)
!4588 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3938)
!4589 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3938)
!4590 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3938)
!4591 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3938)
!4592 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3938)
!4593 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3938)
!4594 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3938)
!4595 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3938)
!4596 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3938)
!4597 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3938)
!4598 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3938)
!4599 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3938)
!4600 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3938)
!4601 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3938)
!4602 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3938)
!4603 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3938)
!4604 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3938)
!4605 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3938)
!4606 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3938)
!4607 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3938)
!4608 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3938)
!4609 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3938)
!4610 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3938)
!4611 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3938)
!4612 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3938)
!4613 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3938)
!4614 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3938)
!4615 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3938)
!4616 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3938)
!4617 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3938)
!4618 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3938)
!4619 = !DILocation(line: 394, column: 19, scope: !3920)
!4620 = !DILocation(line: 395, column: 36, scope: !3920)
!4621 = !DILocation(line: 395, column: 46, scope: !3920)
!4622 = !DILocation(line: 395, column: 62, scope: !3920)
!4623 = !DILocation(line: 395, column: 60, scope: !3920)
!4624 = !DILocation(line: 395, column: 69, scope: !3920)
!4625 = !DILocation(line: 395, column: 13, scope: !3920)
!4626 = !DILocation(line: 395, column: 19, scope: !3920)
!4627 = !DILocation(line: 395, column: 33, scope: !3920)
!4628 = !DILocation(line: 397, column: 20, scope: !3919)
!4629 = !DILocation(line: 397, column: 18, scope: !3919)
!4630 = !DILocation(line: 397, column: 25, scope: !4631)
!4631 = !DILexicalBlockFile(scope: !3918, file: !904, discriminator: 1)
!4632 = !DILocation(line: 397, column: 29, scope: !4631)
!4633 = !DILocation(line: 397, column: 35, scope: !4631)
!4634 = !DILocation(line: 397, column: 27, scope: !4631)
!4635 = !DILocation(line: 397, column: 13, scope: !4631)
!4636 = !DILocation(line: 398, column: 45, scope: !3917)
!4637 = !DILocation(line: 398, column: 24, scope: !3917)
!4638 = !DILocation(line: 398, column: 34, scope: !3917)
!4639 = !DILocation(line: 398, column: 71, scope: !3917)
!4640 = !DILocation(line: 398, column: 73, scope: !3917)
!4641 = !DILocation(line: 398, column: 50, scope: !3917)
!4642 = !DILocation(line: 398, column: 60, scope: !3917)
!4643 = !DILocation(line: 398, column: 48, scope: !3917)
!4644 = !DILocation(line: 398, column: 22, scope: !3917)
!4645 = !DILocation(line: 399, column: 34, scope: !3917)
!4646 = !DILocation(line: 399, column: 38, scope: !3917)
!4647 = !DILocation(line: 399, column: 47, scope: !3917)
!4648 = !DILocation(line: 399, column: 54, scope: !3917)
!4649 = !DILocation(line: 399, column: 63, scope: !3917)
!4650 = !DILocation(line: 399, column: 25, scope: !3917)
!4651 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3916)
!4652 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3916)
!4653 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3916)
!4654 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3916)
!4655 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3916)
!4656 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3916)
!4657 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3916)
!4658 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3916)
!4659 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3916)
!4660 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3916)
!4661 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3916)
!4662 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3924)
!4663 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3924)
!4664 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3924)
!4665 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3924)
!4666 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3924)
!4667 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3924)
!4668 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3924)
!4669 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3924)
!4670 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3924)
!4671 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3924)
!4672 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3924)
!4673 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3924)
!4674 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3924)
!4675 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3924)
!4676 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3924)
!4677 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3924)
!4678 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3924)
!4679 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3924)
!4680 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3916)
!4681 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3916)
!4682 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3916)
!4683 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3916)
!4684 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3916)
!4685 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3916)
!4686 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3916)
!4687 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3916)
!4688 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3916)
!4689 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3916)
!4690 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3916)
!4691 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3916)
!4692 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3916)
!4693 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3916)
!4694 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3916)
!4695 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3916)
!4696 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3916)
!4697 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3916)
!4698 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3916)
!4699 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3916)
!4700 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3916)
!4701 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3916)
!4702 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3916)
!4703 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3916)
!4704 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3916)
!4705 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3916)
!4706 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3916)
!4707 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3916)
!4708 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3916)
!4709 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3916)
!4710 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3916)
!4711 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3916)
!4712 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3916)
!4713 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3916)
!4714 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3916)
!4715 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3916)
!4716 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3916)
!4717 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3916)
!4718 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3916)
!4719 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3916)
!4720 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3916)
!4721 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3922)
!4722 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3922)
!4723 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3922)
!4724 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3922)
!4725 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3922)
!4726 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3922)
!4727 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3922)
!4728 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3922)
!4729 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3922)
!4730 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3922)
!4731 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3922)
!4732 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3922)
!4733 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3922)
!4734 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3922)
!4735 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3922)
!4736 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3922)
!4737 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3922)
!4738 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3922)
!4739 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3916)
!4740 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3916)
!4741 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3916)
!4742 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3916)
!4743 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3916)
!4744 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3916)
!4745 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3916)
!4746 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3916)
!4747 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3916)
!4748 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3916)
!4749 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3916)
!4750 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3916)
!4751 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3916)
!4752 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3916)
!4753 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3916)
!4754 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3916)
!4755 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3916)
!4756 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3916)
!4757 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3916)
!4758 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3916)
!4759 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3916)
!4760 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3916)
!4761 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3916)
!4762 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3916)
!4763 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3916)
!4764 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3916)
!4765 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3916)
!4766 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3916)
!4767 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3916)
!4768 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3916)
!4769 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3916)
!4770 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3916)
!4771 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3916)
!4772 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3916)
!4773 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3916)
!4774 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3916)
!4775 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3916)
!4776 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3916)
!4777 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3916)
!4778 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3916)
!4779 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3916)
!4780 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3916)
!4781 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3916)
!4782 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3916)
!4783 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3916)
!4784 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3916)
!4785 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3915)
!4786 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3915)
!4787 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3915)
!4788 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3915)
!4789 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3915)
!4790 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3915)
!4791 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3915)
!4792 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3915)
!4793 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3915)
!4794 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3915)
!4795 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3915)
!4796 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3915)
!4797 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3915)
!4798 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3915)
!4799 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3915)
!4800 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3915)
!4801 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3915)
!4802 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3915)
!4803 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3916)
!4804 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3916)
!4805 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3916)
!4806 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3916)
!4807 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3916)
!4808 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3916)
!4809 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3916)
!4810 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3916)
!4811 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3916)
!4812 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3916)
!4813 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3916)
!4814 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3916)
!4815 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3916)
!4816 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3916)
!4817 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3916)
!4818 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3916)
!4819 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3916)
!4820 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3916)
!4821 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3916)
!4822 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3916)
!4823 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3916)
!4824 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3916)
!4825 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3916)
!4826 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3916)
!4827 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3916)
!4828 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3916)
!4829 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3916)
!4830 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3916)
!4831 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3916)
!4832 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3916)
!4833 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3916)
!4834 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3916)
!4835 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3916)
!4836 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3916)
!4837 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3916)
!4838 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3916)
!4839 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3916)
!4840 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3916)
!4841 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3916)
!4842 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3916)
!4843 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3916)
!4844 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3916)
!4845 = !DILocation(line: 399, column: 23, scope: !3917)
!4846 = !DILocation(line: 400, column: 57, scope: !3917)
!4847 = !DILocation(line: 400, column: 59, scope: !3917)
!4848 = !DILocation(line: 400, column: 40, scope: !3917)
!4849 = !DILocation(line: 400, column: 46, scope: !3917)
!4850 = !DILocation(line: 400, column: 66, scope: !3917)
!4851 = !DILocation(line: 400, column: 64, scope: !3917)
!4852 = !DILocation(line: 400, column: 73, scope: !3917)
!4853 = !DILocation(line: 400, column: 71, scope: !3917)
!4854 = !DILocation(line: 400, column: 80, scope: !3917)
!4855 = !DILocation(line: 400, column: 34, scope: !3917)
!4856 = !DILocation(line: 400, column: 17, scope: !3917)
!4857 = !DILocation(line: 400, column: 23, scope: !3917)
!4858 = !DILocation(line: 400, column: 37, scope: !3917)
!4859 = !DILocation(line: 401, column: 13, scope: !3917)
!4860 = !DILocation(line: 397, column: 52, scope: !4861)
!4861 = !DILexicalBlockFile(scope: !3918, file: !904, discriminator: 2)
!4862 = !DILocation(line: 397, column: 13, scope: !4861)
!4863 = distinct !{!4863, !4864}
!4864 = !DILocation(line: 397, column: 13, scope: !3920)
!4865 = !DILocation(line: 402, column: 9, scope: !3920)
!4866 = !DILocation(line: 402, column: 20, scope: !4867)
!4867 = !DILexicalBlockFile(scope: !3835, file: !904, discriminator: 1)
!4868 = !DILocation(line: 402, column: 26, scope: !4867)
!4869 = !DILocation(line: 403, column: 29, scope: !3834)
!4870 = !DILocation(line: 403, column: 20, scope: !3834)
!4871 = !DILocation(line: 403, column: 18, scope: !3834)
!4872 = !DILocation(line: 404, column: 45, scope: !3834)
!4873 = !DILocation(line: 404, column: 36, scope: !3834)
!4874 = !DILocation(line: 404, column: 24, scope: !3834)
!4875 = !DILocation(line: 404, column: 21, scope: !3834)
!4876 = !DILocation(line: 406, column: 34, scope: !3834)
!4877 = !DILocation(line: 406, column: 25, scope: !3834)
!4878 = !DILocation(line: 406, column: 23, scope: !3834)
!4879 = !DILocation(line: 407, column: 29, scope: !3834)
!4880 = !DILocation(line: 408, column: 68, scope: !3834)
!4881 = !DILocation(line: 408, column: 59, scope: !3834)
!4882 = !DILocation(line: 408, column: 30, scope: !3834)
!4883 = !DILocation(line: 408, column: 48, scope: !3834)
!4884 = !DILocation(line: 409, column: 29, scope: !3834)
!4885 = !DILocation(line: 409, column: 35, scope: !3834)
!4886 = !DILocation(line: 409, column: 47, scope: !3834)
!4887 = !DILocation(line: 409, column: 53, scope: !3834)
!4888 = !DILocation(line: 407, column: 13, scope: !3834)
!4889 = !DILocation(line: 411, column: 18, scope: !3833)
!4890 = !DILocation(line: 411, column: 17, scope: !3834)
!4891 = !DILocation(line: 412, column: 24, scope: !3897)
!4892 = !DILocation(line: 412, column: 22, scope: !3897)
!4893 = !DILocation(line: 412, column: 29, scope: !4894)
!4894 = !DILexicalBlockFile(scope: !3896, file: !904, discriminator: 1)
!4895 = !DILocation(line: 412, column: 33, scope: !4894)
!4896 = !DILocation(line: 412, column: 39, scope: !4894)
!4897 = !DILocation(line: 412, column: 31, scope: !4894)
!4898 = !DILocation(line: 412, column: 17, scope: !4894)
!4899 = !DILocation(line: 413, column: 38, scope: !3895)
!4900 = !DILocation(line: 413, column: 42, scope: !3895)
!4901 = !DILocation(line: 413, column: 51, scope: !3895)
!4902 = !DILocation(line: 413, column: 58, scope: !3895)
!4903 = !DILocation(line: 413, column: 67, scope: !3895)
!4904 = !DILocation(line: 413, column: 29, scope: !3895)
!4905 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3894)
!4906 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3894)
!4907 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3894)
!4908 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3894)
!4909 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3894)
!4910 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3894)
!4911 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3894)
!4912 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3894)
!4913 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3894)
!4914 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3894)
!4915 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3894)
!4916 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3902)
!4917 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3902)
!4918 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3902)
!4919 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3902)
!4920 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3902)
!4921 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3902)
!4922 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3902)
!4923 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3902)
!4924 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3902)
!4925 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3902)
!4926 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3902)
!4927 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3902)
!4928 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3902)
!4929 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3902)
!4930 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3902)
!4931 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3902)
!4932 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3902)
!4933 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3902)
!4934 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3894)
!4935 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3894)
!4936 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3894)
!4937 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3894)
!4938 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3894)
!4939 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3894)
!4940 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3894)
!4941 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3894)
!4942 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3894)
!4943 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3894)
!4944 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3894)
!4945 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3894)
!4946 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3894)
!4947 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3894)
!4948 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3894)
!4949 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3894)
!4950 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3894)
!4951 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3894)
!4952 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3894)
!4953 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3894)
!4954 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3894)
!4955 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3894)
!4956 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3894)
!4957 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3894)
!4958 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3894)
!4959 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3894)
!4960 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3894)
!4961 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3894)
!4962 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3894)
!4963 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3894)
!4964 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3894)
!4965 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3894)
!4966 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3894)
!4967 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3894)
!4968 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3894)
!4969 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3894)
!4970 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3894)
!4971 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3894)
!4972 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3894)
!4973 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3894)
!4974 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3894)
!4975 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3900)
!4976 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3900)
!4977 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3900)
!4978 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3900)
!4979 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3900)
!4980 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3900)
!4981 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3900)
!4982 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3900)
!4983 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3900)
!4984 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3900)
!4985 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3900)
!4986 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3900)
!4987 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3900)
!4988 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3900)
!4989 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3900)
!4990 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3900)
!4991 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3900)
!4992 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3900)
!4993 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3894)
!4994 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3894)
!4995 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3894)
!4996 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3894)
!4997 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3894)
!4998 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3894)
!4999 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3894)
!5000 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3894)
!5001 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3894)
!5002 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3894)
!5003 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3894)
!5004 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3894)
!5005 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3894)
!5006 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3894)
!5007 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3894)
!5008 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3894)
!5009 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3894)
!5010 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3894)
!5011 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3894)
!5012 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3894)
!5013 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3894)
!5014 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3894)
!5015 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3894)
!5016 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3894)
!5017 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3894)
!5018 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3894)
!5019 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3894)
!5020 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3894)
!5021 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3894)
!5022 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3894)
!5023 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3894)
!5024 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3894)
!5025 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3894)
!5026 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3894)
!5027 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3894)
!5028 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3894)
!5029 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3894)
!5030 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3894)
!5031 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3894)
!5032 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3894)
!5033 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3894)
!5034 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3894)
!5035 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3894)
!5036 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3894)
!5037 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3894)
!5038 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3894)
!5039 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3893)
!5040 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3893)
!5041 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3893)
!5042 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3893)
!5043 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3893)
!5044 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3893)
!5045 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3893)
!5046 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3893)
!5047 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3893)
!5048 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3893)
!5049 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3893)
!5050 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3893)
!5051 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3893)
!5052 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3893)
!5053 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3893)
!5054 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3893)
!5055 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3893)
!5056 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3893)
!5057 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3894)
!5058 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3894)
!5059 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3894)
!5060 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3894)
!5061 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3894)
!5062 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3894)
!5063 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3894)
!5064 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3894)
!5065 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3894)
!5066 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3894)
!5067 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3894)
!5068 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3894)
!5069 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3894)
!5070 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3894)
!5071 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3894)
!5072 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3894)
!5073 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3894)
!5074 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3894)
!5075 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3894)
!5076 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3894)
!5077 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3894)
!5078 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3894)
!5079 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3894)
!5080 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3894)
!5081 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3894)
!5082 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3894)
!5083 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3894)
!5084 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3894)
!5085 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3894)
!5086 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3894)
!5087 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3894)
!5088 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3894)
!5089 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3894)
!5090 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3894)
!5091 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3894)
!5092 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3894)
!5093 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3894)
!5094 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3894)
!5095 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3894)
!5096 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3894)
!5097 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3894)
!5098 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3894)
!5099 = !DILocation(line: 413, column: 27, scope: !3895)
!5100 = !DILocation(line: 414, column: 61, scope: !3895)
!5101 = !DILocation(line: 414, column: 44, scope: !3895)
!5102 = !DILocation(line: 414, column: 50, scope: !3895)
!5103 = !DILocation(line: 414, column: 66, scope: !3895)
!5104 = !DILocation(line: 414, column: 64, scope: !3895)
!5105 = !DILocation(line: 414, column: 73, scope: !3895)
!5106 = !DILocation(line: 414, column: 38, scope: !3895)
!5107 = !DILocation(line: 414, column: 21, scope: !3895)
!5108 = !DILocation(line: 414, column: 27, scope: !3895)
!5109 = !DILocation(line: 414, column: 41, scope: !3895)
!5110 = !DILocation(line: 415, column: 17, scope: !3895)
!5111 = !DILocation(line: 412, column: 56, scope: !5112)
!5112 = !DILexicalBlockFile(scope: !3896, file: !904, discriminator: 2)
!5113 = !DILocation(line: 412, column: 17, scope: !5112)
!5114 = distinct !{!5114, !5115}
!5115 = !DILocation(line: 412, column: 17, scope: !3898)
!5116 = !DILocation(line: 416, column: 13, scope: !3898)
!5117 = !DILocation(line: 417, column: 24, scope: !3858)
!5118 = !DILocation(line: 417, column: 22, scope: !3858)
!5119 = !DILocation(line: 417, column: 29, scope: !5120)
!5120 = !DILexicalBlockFile(scope: !3857, file: !904, discriminator: 1)
!5121 = !DILocation(line: 417, column: 34, scope: !5120)
!5122 = !DILocation(line: 417, column: 40, scope: !5120)
!5123 = !DILocation(line: 417, column: 55, scope: !5120)
!5124 = !DILocation(line: 417, column: 31, scope: !5120)
!5125 = !DILocation(line: 417, column: 17, scope: !5120)
!5126 = !DILocation(line: 418, column: 36, scope: !3856)
!5127 = !DILocation(line: 418, column: 26, scope: !3856)
!5128 = !DILocation(line: 418, column: 25, scope: !3857)
!5129 = !DILocation(line: 419, column: 65, scope: !3855)
!5130 = !DILocation(line: 419, column: 48, scope: !3855)
!5131 = !DILocation(line: 419, column: 54, scope: !3855)
!5132 = !DILocation(line: 420, column: 61, scope: !3855)
!5133 = !DILocation(line: 420, column: 65, scope: !3855)
!5134 = !DILocation(line: 420, column: 74, scope: !3855)
!5135 = !DILocation(line: 421, column: 61, scope: !3855)
!5136 = !DILocation(line: 421, column: 70, scope: !3855)
!5137 = !DILocation(line: 420, column: 52, scope: !3855)
!5138 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3876)
!5139 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3876)
!5140 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3876)
!5141 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3876)
!5142 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3876)
!5143 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3876)
!5144 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3876)
!5145 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3876)
!5146 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3876)
!5147 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3876)
!5148 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3876)
!5149 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3880)
!5150 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3880)
!5151 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3880)
!5152 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3880)
!5153 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3880)
!5154 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3880)
!5155 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3880)
!5156 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3880)
!5157 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3880)
!5158 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3880)
!5159 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3880)
!5160 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3880)
!5161 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3880)
!5162 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3880)
!5163 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3880)
!5164 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3880)
!5165 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3880)
!5166 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3880)
!5167 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3876)
!5168 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3876)
!5169 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3876)
!5170 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3876)
!5171 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3876)
!5172 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3876)
!5173 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3876)
!5174 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3876)
!5175 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3876)
!5176 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3876)
!5177 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3876)
!5178 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3876)
!5179 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3876)
!5180 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3876)
!5181 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3876)
!5182 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3876)
!5183 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3876)
!5184 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3876)
!5185 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3876)
!5186 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3876)
!5187 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3876)
!5188 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3876)
!5189 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3876)
!5190 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3876)
!5191 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3876)
!5192 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3876)
!5193 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3876)
!5194 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3876)
!5195 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3876)
!5196 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3876)
!5197 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3876)
!5198 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3876)
!5199 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3876)
!5200 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3876)
!5201 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3876)
!5202 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3876)
!5203 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3876)
!5204 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3876)
!5205 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3876)
!5206 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3876)
!5207 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3876)
!5208 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3878)
!5209 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3878)
!5210 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3878)
!5211 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3878)
!5212 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3878)
!5213 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3878)
!5214 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3878)
!5215 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3878)
!5216 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3878)
!5217 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3878)
!5218 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3878)
!5219 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3878)
!5220 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3878)
!5221 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3878)
!5222 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3878)
!5223 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3878)
!5224 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3878)
!5225 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3878)
!5226 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3876)
!5227 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3876)
!5228 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3876)
!5229 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3876)
!5230 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3876)
!5231 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3876)
!5232 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3876)
!5233 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3876)
!5234 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3876)
!5235 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3876)
!5236 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3876)
!5237 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3876)
!5238 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3876)
!5239 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3876)
!5240 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3876)
!5241 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3876)
!5242 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3876)
!5243 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3876)
!5244 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3876)
!5245 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3876)
!5246 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3876)
!5247 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3876)
!5248 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3876)
!5249 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3876)
!5250 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3876)
!5251 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3876)
!5252 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3876)
!5253 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3876)
!5254 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3876)
!5255 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3876)
!5256 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3876)
!5257 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3876)
!5258 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3876)
!5259 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3876)
!5260 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3876)
!5261 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3876)
!5262 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3876)
!5263 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3876)
!5264 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3876)
!5265 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3876)
!5266 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3876)
!5267 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3876)
!5268 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3876)
!5269 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3876)
!5270 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3876)
!5271 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3876)
!5272 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3875)
!5273 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3875)
!5274 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3875)
!5275 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3875)
!5276 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3875)
!5277 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3875)
!5278 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3875)
!5279 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3875)
!5280 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3875)
!5281 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3875)
!5282 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3875)
!5283 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3875)
!5284 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3875)
!5285 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3875)
!5286 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3875)
!5287 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3875)
!5288 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3875)
!5289 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3875)
!5290 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3876)
!5291 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3876)
!5292 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3876)
!5293 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3876)
!5294 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3876)
!5295 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3876)
!5296 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3876)
!5297 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3876)
!5298 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3876)
!5299 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3876)
!5300 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3876)
!5301 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3876)
!5302 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3876)
!5303 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3876)
!5304 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3876)
!5305 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3876)
!5306 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3876)
!5307 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3876)
!5308 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3876)
!5309 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3876)
!5310 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3876)
!5311 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3876)
!5312 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3876)
!5313 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3876)
!5314 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3876)
!5315 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3876)
!5316 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3876)
!5317 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3876)
!5318 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3876)
!5319 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3876)
!5320 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3876)
!5321 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3876)
!5322 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3876)
!5323 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3876)
!5324 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3876)
!5325 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3876)
!5326 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3876)
!5327 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3876)
!5328 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3876)
!5329 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3876)
!5330 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3876)
!5331 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3876)
!5332 = !DILocation(line: 419, column: 68, scope: !3855)
!5333 = !DILocation(line: 421, column: 80, scope: !3855)
!5334 = !DILocation(line: 419, column: 42, scope: !3855)
!5335 = !DILocation(line: 419, column: 25, scope: !3855)
!5336 = !DILocation(line: 419, column: 31, scope: !3855)
!5337 = !DILocation(line: 419, column: 45, scope: !3855)
!5338 = !DILocation(line: 422, column: 69, scope: !3855)
!5339 = !DILocation(line: 422, column: 71, scope: !3855)
!5340 = !DILocation(line: 422, column: 52, scope: !3855)
!5341 = !DILocation(line: 422, column: 58, scope: !3855)
!5342 = !DILocation(line: 423, column: 61, scope: !3855)
!5343 = !DILocation(line: 423, column: 65, scope: !3855)
!5344 = !DILocation(line: 423, column: 74, scope: !3855)
!5345 = !DILocation(line: 424, column: 61, scope: !3855)
!5346 = !DILocation(line: 424, column: 70, scope: !3855)
!5347 = !DILocation(line: 423, column: 52, scope: !3855)
!5348 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3854)
!5349 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3854)
!5350 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3854)
!5351 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3854)
!5352 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3854)
!5353 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3854)
!5354 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3854)
!5355 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3854)
!5356 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3854)
!5357 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3854)
!5358 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3854)
!5359 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3862)
!5360 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3862)
!5361 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3862)
!5362 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3862)
!5363 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3862)
!5364 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3862)
!5365 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3862)
!5366 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3862)
!5367 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3862)
!5368 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3862)
!5369 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3862)
!5370 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3862)
!5371 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3862)
!5372 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3862)
!5373 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3862)
!5374 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3862)
!5375 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3862)
!5376 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3862)
!5377 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3854)
!5378 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3854)
!5379 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3854)
!5380 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3854)
!5381 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3854)
!5382 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3854)
!5383 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3854)
!5384 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3854)
!5385 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3854)
!5386 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3854)
!5387 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3854)
!5388 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3854)
!5389 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3854)
!5390 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3854)
!5391 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3854)
!5392 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3854)
!5393 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3854)
!5394 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3854)
!5395 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3854)
!5396 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3854)
!5397 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3854)
!5398 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3854)
!5399 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3854)
!5400 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3854)
!5401 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3854)
!5402 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3854)
!5403 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3854)
!5404 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3854)
!5405 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3854)
!5406 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3854)
!5407 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3854)
!5408 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3854)
!5409 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3854)
!5410 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3854)
!5411 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3854)
!5412 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3854)
!5413 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3854)
!5414 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3854)
!5415 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3854)
!5416 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3854)
!5417 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3854)
!5418 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3860)
!5419 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3860)
!5420 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3860)
!5421 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3860)
!5422 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3860)
!5423 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3860)
!5424 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3860)
!5425 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3860)
!5426 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3860)
!5427 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3860)
!5428 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3860)
!5429 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3860)
!5430 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3860)
!5431 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3860)
!5432 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3860)
!5433 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3860)
!5434 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3860)
!5435 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3860)
!5436 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3854)
!5437 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3854)
!5438 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3854)
!5439 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3854)
!5440 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3854)
!5441 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3854)
!5442 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3854)
!5443 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3854)
!5444 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3854)
!5445 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3854)
!5446 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3854)
!5447 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3854)
!5448 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3854)
!5449 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3854)
!5450 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3854)
!5451 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3854)
!5452 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3854)
!5453 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3854)
!5454 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3854)
!5455 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3854)
!5456 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3854)
!5457 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3854)
!5458 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3854)
!5459 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3854)
!5460 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3854)
!5461 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3854)
!5462 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3854)
!5463 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3854)
!5464 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3854)
!5465 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3854)
!5466 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3854)
!5467 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3854)
!5468 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3854)
!5469 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3854)
!5470 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3854)
!5471 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3854)
!5472 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3854)
!5473 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3854)
!5474 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3854)
!5475 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3854)
!5476 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3854)
!5477 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3854)
!5478 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3854)
!5479 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3854)
!5480 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3854)
!5481 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3854)
!5482 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3853)
!5483 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3853)
!5484 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3853)
!5485 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3853)
!5486 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3853)
!5487 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3853)
!5488 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3853)
!5489 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3853)
!5490 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3853)
!5491 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3853)
!5492 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3853)
!5493 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3853)
!5494 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3853)
!5495 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3853)
!5496 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3853)
!5497 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3853)
!5498 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3853)
!5499 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3853)
!5500 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3854)
!5501 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3854)
!5502 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3854)
!5503 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3854)
!5504 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3854)
!5505 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3854)
!5506 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3854)
!5507 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3854)
!5508 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3854)
!5509 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3854)
!5510 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3854)
!5511 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3854)
!5512 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3854)
!5513 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3854)
!5514 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3854)
!5515 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3854)
!5516 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3854)
!5517 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3854)
!5518 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3854)
!5519 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3854)
!5520 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3854)
!5521 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3854)
!5522 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3854)
!5523 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3854)
!5524 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3854)
!5525 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3854)
!5526 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3854)
!5527 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3854)
!5528 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3854)
!5529 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3854)
!5530 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3854)
!5531 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3854)
!5532 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3854)
!5533 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3854)
!5534 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3854)
!5535 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3854)
!5536 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3854)
!5537 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3854)
!5538 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3854)
!5539 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3854)
!5540 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3854)
!5541 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3854)
!5542 = !DILocation(line: 422, column: 76, scope: !3855)
!5543 = !DILocation(line: 424, column: 80, scope: !3855)
!5544 = !DILocation(line: 422, column: 42, scope: !3855)
!5545 = !DILocation(line: 422, column: 44, scope: !3855)
!5546 = !DILocation(line: 422, column: 25, scope: !3855)
!5547 = !DILocation(line: 422, column: 31, scope: !3855)
!5548 = !DILocation(line: 422, column: 49, scope: !3855)
!5549 = !DILocation(line: 425, column: 21, scope: !3855)
!5550 = !DILocation(line: 418, column: 38, scope: !5551)
!5551 = !DILexicalBlockFile(scope: !3856, file: !904, discriminator: 1)
!5552 = !DILocation(line: 417, column: 65, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !3857, file: !904, discriminator: 2)
!5554 = !DILocation(line: 417, column: 17, scope: !5553)
!5555 = distinct !{!5555, !5556}
!5556 = !DILocation(line: 417, column: 17, scope: !3832)
!5557 = !DILocation(line: 427, column: 21, scope: !3831)
!5558 = !DILocation(line: 427, column: 27, scope: !3831)
!5559 = !DILocation(line: 427, column: 42, scope: !3831)
!5560 = !DILocation(line: 427, column: 21, scope: !3832)
!5561 = !DILocation(line: 428, column: 61, scope: !3831)
!5562 = !DILocation(line: 428, column: 44, scope: !3831)
!5563 = !DILocation(line: 428, column: 50, scope: !3831)
!5564 = !DILocation(line: 429, column: 53, scope: !3831)
!5565 = !DILocation(line: 429, column: 57, scope: !3831)
!5566 = !DILocation(line: 429, column: 66, scope: !3831)
!5567 = !DILocation(line: 430, column: 53, scope: !3831)
!5568 = !DILocation(line: 430, column: 62, scope: !3831)
!5569 = !DILocation(line: 429, column: 44, scope: !3831)
!5570 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3830)
!5571 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3830)
!5572 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3830)
!5573 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3830)
!5574 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3830)
!5575 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3830)
!5576 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3830)
!5577 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3830)
!5578 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3830)
!5579 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3830)
!5580 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3830)
!5581 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3840)
!5582 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3840)
!5583 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3840)
!5584 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3840)
!5585 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3840)
!5586 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3840)
!5587 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3840)
!5588 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3840)
!5589 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3840)
!5590 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3840)
!5591 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3840)
!5592 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3840)
!5593 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3840)
!5594 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3840)
!5595 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3840)
!5596 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3840)
!5597 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3840)
!5598 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3840)
!5599 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3830)
!5600 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3830)
!5601 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3830)
!5602 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3830)
!5603 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3830)
!5604 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3830)
!5605 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3830)
!5606 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3830)
!5607 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3830)
!5608 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3830)
!5609 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3830)
!5610 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3830)
!5611 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3830)
!5612 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3830)
!5613 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3830)
!5614 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3830)
!5615 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3830)
!5616 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3830)
!5617 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3830)
!5618 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3830)
!5619 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3830)
!5620 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3830)
!5621 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3830)
!5622 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3830)
!5623 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3830)
!5624 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3830)
!5625 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3830)
!5626 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3830)
!5627 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3830)
!5628 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3830)
!5629 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3830)
!5630 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3830)
!5631 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3830)
!5632 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3830)
!5633 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3830)
!5634 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3830)
!5635 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3830)
!5636 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3830)
!5637 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3830)
!5638 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3830)
!5639 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3830)
!5640 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3838)
!5641 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3838)
!5642 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3838)
!5643 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3838)
!5644 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3838)
!5645 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3838)
!5646 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3838)
!5647 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3838)
!5648 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3838)
!5649 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3838)
!5650 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3838)
!5651 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3838)
!5652 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3838)
!5653 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3838)
!5654 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3838)
!5655 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3838)
!5656 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3838)
!5657 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3838)
!5658 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3830)
!5659 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3830)
!5660 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3830)
!5661 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3830)
!5662 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3830)
!5663 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3830)
!5664 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3830)
!5665 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3830)
!5666 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3830)
!5667 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3830)
!5668 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3830)
!5669 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3830)
!5670 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3830)
!5671 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3830)
!5672 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3830)
!5673 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3830)
!5674 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3830)
!5675 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3830)
!5676 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3830)
!5677 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3830)
!5678 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3830)
!5679 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3830)
!5680 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3830)
!5681 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3830)
!5682 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3830)
!5683 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3830)
!5684 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3830)
!5685 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3830)
!5686 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3830)
!5687 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3830)
!5688 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3830)
!5689 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3830)
!5690 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3830)
!5691 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3830)
!5692 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3830)
!5693 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3830)
!5694 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3830)
!5695 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3830)
!5696 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3830)
!5697 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3830)
!5698 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3830)
!5699 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3830)
!5700 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3830)
!5701 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3830)
!5702 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3830)
!5703 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3830)
!5704 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3829)
!5705 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3829)
!5706 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3829)
!5707 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3829)
!5708 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3829)
!5709 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3829)
!5710 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3829)
!5711 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3829)
!5712 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3829)
!5713 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3829)
!5714 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3829)
!5715 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3829)
!5716 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3829)
!5717 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3829)
!5718 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3829)
!5719 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3829)
!5720 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3829)
!5721 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3829)
!5722 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3830)
!5723 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3830)
!5724 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3830)
!5725 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3830)
!5726 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3830)
!5727 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3830)
!5728 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3830)
!5729 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3830)
!5730 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3830)
!5731 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3830)
!5732 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3830)
!5733 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3830)
!5734 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3830)
!5735 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3830)
!5736 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3830)
!5737 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3830)
!5738 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3830)
!5739 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3830)
!5740 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3830)
!5741 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3830)
!5742 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3830)
!5743 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3830)
!5744 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3830)
!5745 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3830)
!5746 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3830)
!5747 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3830)
!5748 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3830)
!5749 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3830)
!5750 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3830)
!5751 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3830)
!5752 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3830)
!5753 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3830)
!5754 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3830)
!5755 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3830)
!5756 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3830)
!5757 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3830)
!5758 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3830)
!5759 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3830)
!5760 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3830)
!5761 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3830)
!5762 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3830)
!5763 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3830)
!5764 = !DILocation(line: 428, column: 64, scope: !3831)
!5765 = !DILocation(line: 430, column: 72, scope: !3831)
!5766 = !DILocation(line: 428, column: 38, scope: !3831)
!5767 = !DILocation(line: 428, column: 21, scope: !3831)
!5768 = !DILocation(line: 428, column: 27, scope: !3831)
!5769 = !DILocation(line: 428, column: 41, scope: !3831)
!5770 = !DILocation(line: 432, column: 9, scope: !3834)
!5771 = !DILocation(line: 433, column: 9, scope: !3812)
!5772 = !DILocation(line: 435, column: 31, scope: !3812)
!5773 = !DILocation(line: 435, column: 22, scope: !3812)
!5774 = !DILocation(line: 435, column: 20, scope: !3812)
!5775 = !DILocation(line: 436, column: 36, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !3812, file: !904, line: 436, column: 13)
!5777 = !DILocation(line: 436, column: 40, scope: !5776)
!5778 = !DILocation(line: 436, column: 46, scope: !5776)
!5779 = !DILocation(line: 436, column: 51, scope: !5776)
!5780 = !DILocation(line: 436, column: 20, scope: !5776)
!5781 = !DILocation(line: 436, column: 18, scope: !5776)
!5782 = !DILocation(line: 436, column: 59, scope: !5776)
!5783 = !DILocation(line: 436, column: 13, scope: !3812)
!5784 = !DILocation(line: 437, column: 20, scope: !5776)
!5785 = !DILocation(line: 437, column: 13, scope: !5776)
!5786 = !DILocation(line: 439, column: 13, scope: !3811)
!5787 = !DILocation(line: 439, column: 19, scope: !3811)
!5788 = !DILocation(line: 439, column: 13, scope: !3812)
!5789 = !DILocation(line: 440, column: 45, scope: !3810)
!5790 = !DILocation(line: 440, column: 36, scope: !3810)
!5791 = !DILocation(line: 440, column: 24, scope: !3810)
!5792 = !DILocation(line: 440, column: 21, scope: !3810)
!5793 = !DILocation(line: 443, column: 44, scope: !3810)
!5794 = !DILocation(line: 443, column: 35, scope: !3810)
!5795 = !DILocation(line: 443, column: 13, scope: !3810)
!5796 = !DILocation(line: 443, column: 19, scope: !3810)
!5797 = !DILocation(line: 443, column: 33, scope: !3810)
!5798 = !DILocation(line: 445, column: 20, scope: !3809)
!5799 = !DILocation(line: 445, column: 18, scope: !3809)
!5800 = !DILocation(line: 445, column: 25, scope: !5801)
!5801 = !DILexicalBlockFile(scope: !3808, file: !904, discriminator: 1)
!5802 = !DILocation(line: 445, column: 29, scope: !5801)
!5803 = !DILocation(line: 445, column: 35, scope: !5801)
!5804 = !DILocation(line: 445, column: 27, scope: !5801)
!5805 = !DILocation(line: 445, column: 13, scope: !5801)
!5806 = !DILocation(line: 446, column: 34, scope: !3807)
!5807 = !DILocation(line: 446, column: 38, scope: !3807)
!5808 = !DILocation(line: 446, column: 47, scope: !3807)
!5809 = !DILocation(line: 446, column: 54, scope: !3807)
!5810 = !DILocation(line: 446, column: 63, scope: !3807)
!5811 = !DILocation(line: 446, column: 25, scope: !3807)
!5812 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !3806)
!5813 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !3806)
!5814 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !3806)
!5815 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !3806)
!5816 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !3806)
!5817 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !3806)
!5818 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !3806)
!5819 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !3806)
!5820 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !3806)
!5821 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !3806)
!5822 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !3806)
!5823 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3816)
!5824 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3816)
!5825 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3816)
!5826 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3816)
!5827 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3816)
!5828 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3816)
!5829 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3816)
!5830 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3816)
!5831 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3816)
!5832 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3816)
!5833 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3816)
!5834 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3816)
!5835 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3816)
!5836 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3816)
!5837 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3816)
!5838 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3816)
!5839 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3816)
!5840 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3816)
!5841 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !3806)
!5842 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !3806)
!5843 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !3806)
!5844 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !3806)
!5845 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !3806)
!5846 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !3806)
!5847 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !3806)
!5848 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !3806)
!5849 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !3806)
!5850 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !3806)
!5851 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !3806)
!5852 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !3806)
!5853 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !3806)
!5854 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !3806)
!5855 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !3806)
!5856 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !3806)
!5857 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !3806)
!5858 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !3806)
!5859 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !3806)
!5860 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !3806)
!5861 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !3806)
!5862 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !3806)
!5863 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !3806)
!5864 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !3806)
!5865 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !3806)
!5866 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !3806)
!5867 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !3806)
!5868 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !3806)
!5869 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !3806)
!5870 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !3806)
!5871 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !3806)
!5872 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !3806)
!5873 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !3806)
!5874 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !3806)
!5875 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !3806)
!5876 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !3806)
!5877 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !3806)
!5878 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !3806)
!5879 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !3806)
!5880 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !3806)
!5881 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !3806)
!5882 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3814)
!5883 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3814)
!5884 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3814)
!5885 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3814)
!5886 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3814)
!5887 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3814)
!5888 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3814)
!5889 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3814)
!5890 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3814)
!5891 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3814)
!5892 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3814)
!5893 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3814)
!5894 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3814)
!5895 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3814)
!5896 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3814)
!5897 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3814)
!5898 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3814)
!5899 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3814)
!5900 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !3806)
!5901 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !3806)
!5902 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !3806)
!5903 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !3806)
!5904 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !3806)
!5905 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !3806)
!5906 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !3806)
!5907 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !3806)
!5908 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !3806)
!5909 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !3806)
!5910 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !3806)
!5911 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !3806)
!5912 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !3806)
!5913 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !3806)
!5914 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !3806)
!5915 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !3806)
!5916 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !3806)
!5917 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !3806)
!5918 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !3806)
!5919 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !3806)
!5920 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !3806)
!5921 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !3806)
!5922 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !3806)
!5923 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !3806)
!5924 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !3806)
!5925 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !3806)
!5926 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !3806)
!5927 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !3806)
!5928 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !3806)
!5929 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !3806)
!5930 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !3806)
!5931 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !3806)
!5932 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !3806)
!5933 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !3806)
!5934 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !3806)
!5935 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !3806)
!5936 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !3806)
!5937 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !3806)
!5938 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !3806)
!5939 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !3806)
!5940 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !3806)
!5941 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !3806)
!5942 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !3806)
!5943 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !3806)
!5944 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !3806)
!5945 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !3806)
!5946 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !3805)
!5947 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !3805)
!5948 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !3805)
!5949 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !3805)
!5950 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !3805)
!5951 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !3805)
!5952 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !3805)
!5953 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !3805)
!5954 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !3805)
!5955 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !3805)
!5956 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !3805)
!5957 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !3805)
!5958 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !3805)
!5959 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !3805)
!5960 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !3805)
!5961 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !3805)
!5962 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !3805)
!5963 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !3805)
!5964 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !3806)
!5965 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !3806)
!5966 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !3806)
!5967 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !3806)
!5968 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !3806)
!5969 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !3806)
!5970 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !3806)
!5971 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !3806)
!5972 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !3806)
!5973 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !3806)
!5974 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !3806)
!5975 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !3806)
!5976 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !3806)
!5977 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !3806)
!5978 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !3806)
!5979 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !3806)
!5980 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !3806)
!5981 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !3806)
!5982 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !3806)
!5983 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !3806)
!5984 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !3806)
!5985 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !3806)
!5986 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !3806)
!5987 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !3806)
!5988 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !3806)
!5989 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !3806)
!5990 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !3806)
!5991 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !3806)
!5992 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !3806)
!5993 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !3806)
!5994 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !3806)
!5995 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !3806)
!5996 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !3806)
!5997 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !3806)
!5998 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !3806)
!5999 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !3806)
!6000 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !3806)
!6001 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !3806)
!6002 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !3806)
!6003 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !3806)
!6004 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !3806)
!6005 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !3806)
!6006 = !DILocation(line: 446, column: 23, scope: !3807)
!6007 = !DILocation(line: 447, column: 57, scope: !3807)
!6008 = !DILocation(line: 447, column: 59, scope: !3807)
!6009 = !DILocation(line: 447, column: 40, scope: !3807)
!6010 = !DILocation(line: 447, column: 46, scope: !3807)
!6011 = !DILocation(line: 447, column: 66, scope: !3807)
!6012 = !DILocation(line: 447, column: 64, scope: !3807)
!6013 = !DILocation(line: 447, column: 73, scope: !3807)
!6014 = !DILocation(line: 447, column: 34, scope: !3807)
!6015 = !DILocation(line: 447, column: 17, scope: !3807)
!6016 = !DILocation(line: 447, column: 23, scope: !3807)
!6017 = !DILocation(line: 447, column: 37, scope: !3807)
!6018 = !DILocation(line: 448, column: 13, scope: !3807)
!6019 = !DILocation(line: 445, column: 52, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !3808, file: !904, discriminator: 2)
!6021 = !DILocation(line: 445, column: 13, scope: !6020)
!6022 = distinct !{!6022, !6023}
!6023 = !DILocation(line: 445, column: 13, scope: !3810)
!6024 = !DILocation(line: 449, column: 9, scope: !3810)
!6025 = !DILocation(line: 450, column: 9, scope: !3812)
!6026 = !DILocation(line: 453, column: 9, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !3803, file: !904, line: 453, column: 9)
!6028 = !DILocation(line: 453, column: 15, scope: !6027)
!6029 = !DILocation(line: 453, column: 25, scope: !6027)
!6030 = !DILocation(line: 453, column: 9, scope: !3803)
!6031 = !DILocation(line: 454, column: 18, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !904, line: 454, column: 9)
!6033 = distinct !DILexicalBlock(scope: !6027, file: !904, line: 453, column: 31)
!6034 = !DILocation(line: 454, column: 24, scope: !6032)
!6035 = !DILocation(line: 454, column: 16, scope: !6032)
!6036 = !DILocation(line: 454, column: 14, scope: !6032)
!6037 = !DILocation(line: 454, column: 40, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !6039, file: !904, discriminator: 1)
!6039 = distinct !DILexicalBlock(scope: !6032, file: !904, line: 454, column: 9)
!6040 = !DILocation(line: 454, column: 44, scope: !6038)
!6041 = !DILocation(line: 454, column: 49, scope: !6038)
!6042 = !DILocation(line: 454, column: 42, scope: !6038)
!6043 = !DILocation(line: 454, column: 9, scope: !6038)
!6044 = !DILocation(line: 455, column: 35, scope: !6039)
!6045 = !DILocation(line: 455, column: 54, scope: !6038)
!6046 = !DILocation(line: 455, column: 44, scope: !6038)
!6047 = !DILocation(line: 455, column: 35, scope: !6038)
!6048 = !DILocation(line: 455, column: 35, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !6039, file: !904, discriminator: 2)
!6050 = !DILocation(line: 455, column: 35, scope: !6051)
!6051 = !DILexicalBlockFile(scope: !6039, file: !904, discriminator: 3)
!6052 = !DILocation(line: 455, column: 30, scope: !6051)
!6053 = !DILocation(line: 455, column: 13, scope: !6051)
!6054 = !DILocation(line: 455, column: 19, scope: !6051)
!6055 = !DILocation(line: 455, column: 33, scope: !6051)
!6056 = !DILocation(line: 454, column: 67, scope: !6049)
!6057 = !DILocation(line: 454, column: 9, scope: !6049)
!6058 = distinct !{!6058, !6059}
!6059 = !DILocation(line: 454, column: 9, scope: !6033)
!6060 = !DILocation(line: 456, column: 5, scope: !6033)
!6061 = !DILocation(line: 456, column: 16, scope: !6062)
!6062 = !DILexicalBlockFile(scope: !6063, file: !904, discriminator: 1)
!6063 = distinct !DILexicalBlock(scope: !6027, file: !904, line: 456, column: 16)
!6064 = !DILocation(line: 456, column: 22, scope: !6062)
!6065 = !DILocation(line: 456, column: 32, scope: !6062)
!6066 = !DILocation(line: 457, column: 15, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !904, line: 456, column: 38)
!6068 = !DILocation(line: 457, column: 24, scope: !6069)
!6069 = !DILexicalBlockFile(scope: !6067, file: !904, discriminator: 1)
!6070 = !DILocation(line: 457, column: 30, scope: !6069)
!6071 = !DILocation(line: 457, column: 47, scope: !6069)
!6072 = !DILocation(line: 457, column: 53, scope: !6069)
!6073 = !DILocation(line: 457, column: 45, scope: !6069)
!6074 = !DILocation(line: 457, column: 15, scope: !6069)
!6075 = !DILocation(line: 458, column: 24, scope: !6067)
!6076 = !DILocation(line: 458, column: 29, scope: !6067)
!6077 = !DILocation(line: 458, column: 47, scope: !6067)
!6078 = !DILocation(line: 458, column: 53, scope: !6067)
!6079 = !DILocation(line: 458, column: 45, scope: !6067)
!6080 = !DILocation(line: 457, column: 15, scope: !6081)
!6081 = !DILexicalBlockFile(scope: !6067, file: !904, discriminator: 2)
!6082 = !DILocation(line: 457, column: 15, scope: !6083)
!6083 = !DILexicalBlockFile(scope: !6067, file: !904, discriminator: 3)
!6084 = !DILocation(line: 457, column: 13, scope: !6083)
!6085 = !DILocation(line: 459, column: 18, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6067, file: !904, line: 459, column: 9)
!6087 = !DILocation(line: 459, column: 24, scope: !6086)
!6088 = !DILocation(line: 459, column: 16, scope: !6086)
!6089 = !DILocation(line: 459, column: 14, scope: !6086)
!6090 = !DILocation(line: 459, column: 40, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !6092, file: !904, discriminator: 1)
!6092 = distinct !DILexicalBlock(scope: !6086, file: !904, line: 459, column: 9)
!6093 = !DILocation(line: 459, column: 44, scope: !6091)
!6094 = !DILocation(line: 459, column: 42, scope: !6091)
!6095 = !DILocation(line: 459, column: 9, scope: !6091)
!6096 = !DILocation(line: 460, column: 30, scope: !6092)
!6097 = !DILocation(line: 460, column: 13, scope: !6092)
!6098 = !DILocation(line: 460, column: 19, scope: !6092)
!6099 = !DILocation(line: 460, column: 33, scope: !6092)
!6100 = !DILocation(line: 459, column: 50, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !6092, file: !904, discriminator: 2)
!6102 = !DILocation(line: 459, column: 9, scope: !6101)
!6103 = distinct !{!6103, !6104}
!6104 = !DILocation(line: 459, column: 9, scope: !6067)
!6105 = !DILocation(line: 461, column: 5, scope: !6067)
!6106 = !DILocation(line: 463, column: 9, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !3803, file: !904, line: 463, column: 9)
!6108 = !DILocation(line: 463, column: 9, scope: !3803)
!6109 = !DILocation(line: 464, column: 36, scope: !6107)
!6110 = !DILocation(line: 464, column: 41, scope: !6107)
!6111 = !DILocation(line: 464, column: 47, scope: !6107)
!6112 = !DILocation(line: 464, column: 59, scope: !6107)
!6113 = !DILocation(line: 464, column: 16, scope: !6107)
!6114 = !DILocation(line: 464, column: 9, scope: !6107)
!6115 = !DILocation(line: 466, column: 5, scope: !3803)
!6116 = !DILocation(line: 467, column: 1, scope: !3803)
!6117 = distinct !DISubprogram(name: "num_coded_units", scope: !904, file: !904, line: 221, type: !6118, isLocal: true, isDefinition: true, scopeLine: 223, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!888, !1654, !2870, !1664, !1782}
!6120 = !DILocalVariable(name: "gb", arg: 1, scope: !6117, file: !904, line: 221, type: !1654)
!6121 = !DILocation(line: 221, column: 43, scope: !6117)
!6122 = !DILocalVariable(name: "chan", arg: 2, scope: !6117, file: !904, line: 221, type: !2870)
!6123 = !DILocation(line: 221, column: 66, scope: !6117)
!6124 = !DILocalVariable(name: "ctx", arg: 3, scope: !6117, file: !904, line: 222, type: !1664)
!6125 = !DILocation(line: 222, column: 48, scope: !6117)
!6126 = !DILocalVariable(name: "avctx", arg: 4, scope: !6117, file: !904, line: 222, type: !1782)
!6127 = !DILocation(line: 222, column: 69, scope: !6117)
!6128 = !DILocation(line: 224, column: 32, scope: !6117)
!6129 = !DILocation(line: 224, column: 23, scope: !6117)
!6130 = !DILocation(line: 224, column: 5, scope: !6117)
!6131 = !DILocation(line: 224, column: 11, scope: !6117)
!6132 = !DILocation(line: 224, column: 21, scope: !6117)
!6133 = !DILocation(line: 225, column: 10, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6117, file: !904, line: 225, column: 9)
!6135 = !DILocation(line: 225, column: 16, scope: !6134)
!6136 = !DILocation(line: 225, column: 9, scope: !6117)
!6137 = !DILocation(line: 226, column: 32, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6134, file: !904, line: 225, column: 27)
!6139 = !DILocation(line: 226, column: 37, scope: !6138)
!6140 = !DILocation(line: 226, column: 9, scope: !6138)
!6141 = !DILocation(line: 226, column: 15, scope: !6138)
!6142 = !DILocation(line: 226, column: 30, scope: !6138)
!6143 = !DILocation(line: 227, column: 5, scope: !6138)
!6144 = !DILocation(line: 228, column: 41, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6134, file: !904, line: 227, column: 12)
!6146 = !DILocation(line: 228, column: 32, scope: !6145)
!6147 = !DILocation(line: 228, column: 9, scope: !6145)
!6148 = !DILocation(line: 228, column: 15, scope: !6145)
!6149 = !DILocation(line: 228, column: 30, scope: !6145)
!6150 = !DILocation(line: 229, column: 13, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6145, file: !904, line: 229, column: 13)
!6152 = !DILocation(line: 229, column: 19, scope: !6151)
!6153 = !DILocation(line: 229, column: 36, scope: !6151)
!6154 = !DILocation(line: 229, column: 41, scope: !6151)
!6155 = !DILocation(line: 229, column: 34, scope: !6151)
!6156 = !DILocation(line: 229, column: 13, scope: !6145)
!6157 = !DILocation(line: 230, column: 20, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6151, file: !904, line: 229, column: 58)
!6159 = !DILocation(line: 230, column: 13, scope: !6158)
!6160 = !DILocation(line: 232, column: 13, scope: !6158)
!6161 = !DILocation(line: 235, column: 13, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6145, file: !904, line: 235, column: 13)
!6163 = !DILocation(line: 235, column: 19, scope: !6162)
!6164 = !DILocation(line: 235, column: 29, scope: !6162)
!6165 = !DILocation(line: 235, column: 13, scope: !6145)
!6166 = !DILocation(line: 236, column: 42, scope: !6162)
!6167 = !DILocation(line: 236, column: 33, scope: !6162)
!6168 = !DILocation(line: 236, column: 52, scope: !6162)
!6169 = !DILocation(line: 236, column: 58, scope: !6162)
!6170 = !DILocation(line: 236, column: 65, scope: !6162)
!6171 = !DILocation(line: 236, column: 49, scope: !6162)
!6172 = !DILocation(line: 236, column: 71, scope: !6162)
!6173 = !DILocation(line: 236, column: 13, scope: !6162)
!6174 = !DILocation(line: 236, column: 19, scope: !6162)
!6175 = !DILocation(line: 236, column: 31, scope: !6162)
!6176 = !DILocation(line: 239, column: 5, scope: !6117)
!6177 = !DILocation(line: 240, column: 1, scope: !6117)
!6178 = distinct !DISubprogram(name: "unpack_vq_shape", scope: !904, file: !904, line: 309, type: !6179, isLocal: true, isDefinition: true, scopeLine: 311, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{null, !888, !6181, !1535, !888}
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64, align: 64)
!6182 = !DILocalVariable(name: "start_val", arg: 1, scope: !6178, file: !904, line: 309, type: !888)
!6183 = !DILocation(line: 309, column: 40, scope: !6178)
!6184 = !DILocalVariable(name: "shape_vec", arg: 2, scope: !6178, file: !904, line: 309, type: !6181)
!6185 = !DILocation(line: 309, column: 65, scope: !6178)
!6186 = !DILocalVariable(name: "dst", arg: 3, scope: !6178, file: !904, line: 310, type: !1535)
!6187 = !DILocation(line: 310, column: 41, scope: !6178)
!6188 = !DILocalVariable(name: "num_values", arg: 4, scope: !6178, file: !904, line: 310, type: !888)
!6189 = !DILocation(line: 310, column: 50, scope: !6178)
!6190 = !DILocalVariable(name: "i", scope: !6178, file: !904, line: 312, type: !888)
!6191 = !DILocation(line: 312, column: 9, scope: !6178)
!6192 = !DILocation(line: 314, column: 9, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6178, file: !904, line: 314, column: 9)
!6194 = !DILocation(line: 314, column: 9, scope: !6178)
!6195 = !DILocation(line: 315, column: 36, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6193, file: !904, line: 314, column: 21)
!6197 = !DILocation(line: 315, column: 27, scope: !6196)
!6198 = !DILocation(line: 315, column: 34, scope: !6196)
!6199 = !DILocation(line: 315, column: 18, scope: !6196)
!6200 = !DILocation(line: 315, column: 25, scope: !6196)
!6201 = !DILocation(line: 315, column: 9, scope: !6196)
!6202 = !DILocation(line: 315, column: 16, scope: !6196)
!6203 = !DILocation(line: 316, column: 16, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6196, file: !904, line: 316, column: 9)
!6205 = !DILocation(line: 316, column: 14, scope: !6204)
!6206 = !DILocation(line: 316, column: 21, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !6208, file: !904, discriminator: 1)
!6208 = distinct !DILexicalBlock(scope: !6204, file: !904, line: 316, column: 9)
!6209 = !DILocation(line: 316, column: 25, scope: !6207)
!6210 = !DILocation(line: 316, column: 23, scope: !6207)
!6211 = !DILocation(line: 316, column: 9, scope: !6207)
!6212 = !DILocation(line: 317, column: 22, scope: !6208)
!6213 = !DILocation(line: 317, column: 66, scope: !6208)
!6214 = !DILocation(line: 317, column: 44, scope: !6208)
!6215 = !DILocation(line: 317, column: 69, scope: !6208)
!6216 = !DILocation(line: 317, column: 34, scope: !6208)
!6217 = !DILocation(line: 317, column: 32, scope: !6208)
!6218 = !DILocation(line: 317, column: 17, scope: !6208)
!6219 = !DILocation(line: 317, column: 13, scope: !6208)
!6220 = !DILocation(line: 317, column: 20, scope: !6208)
!6221 = !DILocation(line: 316, column: 38, scope: !6222)
!6222 = !DILexicalBlockFile(scope: !6208, file: !904, discriminator: 2)
!6223 = !DILocation(line: 316, column: 9, scope: !6222)
!6224 = distinct !{!6224, !6225}
!6225 = !DILocation(line: 316, column: 9, scope: !6196)
!6226 = !DILocation(line: 318, column: 5, scope: !6196)
!6227 = !DILocation(line: 319, column: 1, scope: !6178)
!6228 = distinct !DISubprogram(name: "add_wordlen_weights", scope: !904, file: !904, line: 251, type: !6229, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!6229 = !DISubroutineType(types: !6230)
!6230 = !{!888, !1664, !2870, !888, !1782}
!6231 = !DILocalVariable(name: "ctx", arg: 1, scope: !6228, file: !904, line: 251, type: !1664)
!6232 = !DILocation(line: 251, column: 52, scope: !6228)
!6233 = !DILocalVariable(name: "chan", arg: 2, scope: !6228, file: !904, line: 252, type: !2870)
!6234 = !DILocation(line: 252, column: 51, scope: !6228)
!6235 = !DILocalVariable(name: "wtab_idx", arg: 3, scope: !6228, file: !904, line: 252, type: !888)
!6236 = !DILocation(line: 252, column: 61, scope: !6228)
!6237 = !DILocalVariable(name: "avctx", arg: 4, scope: !6228, file: !904, line: 253, type: !1782)
!6238 = !DILocation(line: 253, column: 48, scope: !6228)
!6239 = !DILocalVariable(name: "i", scope: !6228, file: !904, line: 255, type: !888)
!6240 = !DILocation(line: 255, column: 9, scope: !6228)
!6241 = !DILocalVariable(name: "weights_tab", scope: !6228, file: !904, line: 256, type: !6181)
!6242 = !DILocation(line: 256, column: 19, scope: !6228)
!6243 = !DILocation(line: 257, column: 29, scope: !6228)
!6244 = !DILocation(line: 257, column: 35, scope: !6228)
!6245 = !DILocation(line: 257, column: 42, scope: !6228)
!6246 = !DILocation(line: 257, column: 48, scope: !6228)
!6247 = !DILocation(line: 257, column: 46, scope: !6228)
!6248 = !DILocation(line: 257, column: 57, scope: !6228)
!6249 = !DILocation(line: 257, column: 10, scope: !6228)
!6250 = !DILocation(line: 259, column: 12, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6228, file: !904, line: 259, column: 5)
!6252 = !DILocation(line: 259, column: 10, scope: !6251)
!6253 = !DILocation(line: 259, column: 17, scope: !6254)
!6254 = !DILexicalBlockFile(scope: !6255, file: !904, discriminator: 1)
!6255 = distinct !DILexicalBlock(scope: !6251, file: !904, line: 259, column: 5)
!6256 = !DILocation(line: 259, column: 21, scope: !6254)
!6257 = !DILocation(line: 259, column: 26, scope: !6254)
!6258 = !DILocation(line: 259, column: 19, scope: !6254)
!6259 = !DILocation(line: 259, column: 5, scope: !6254)
!6260 = !DILocation(line: 260, column: 44, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6255, file: !904, line: 259, column: 48)
!6262 = !DILocation(line: 260, column: 32, scope: !6261)
!6263 = !DILocation(line: 260, column: 26, scope: !6261)
!6264 = !DILocation(line: 260, column: 9, scope: !6261)
!6265 = !DILocation(line: 260, column: 15, scope: !6261)
!6266 = !DILocation(line: 260, column: 29, scope: !6261)
!6267 = !DILocation(line: 261, column: 30, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6261, file: !904, line: 261, column: 13)
!6269 = !DILocation(line: 261, column: 13, scope: !6268)
!6270 = !DILocation(line: 261, column: 19, scope: !6268)
!6271 = !DILocation(line: 261, column: 33, scope: !6268)
!6272 = !DILocation(line: 261, column: 37, scope: !6268)
!6273 = !DILocation(line: 261, column: 57, scope: !6274)
!6274 = !DILexicalBlockFile(scope: !6268, file: !904, discriminator: 1)
!6275 = !DILocation(line: 261, column: 40, scope: !6274)
!6276 = !DILocation(line: 261, column: 46, scope: !6274)
!6277 = !DILocation(line: 261, column: 60, scope: !6274)
!6278 = !DILocation(line: 261, column: 13, scope: !6274)
!6279 = !DILocation(line: 262, column: 20, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6268, file: !904, line: 261, column: 65)
!6281 = !DILocation(line: 264, column: 20, scope: !6280)
!6282 = !DILocation(line: 264, column: 40, scope: !6280)
!6283 = !DILocation(line: 264, column: 23, scope: !6280)
!6284 = !DILocation(line: 264, column: 29, scope: !6280)
!6285 = !DILocation(line: 262, column: 13, scope: !6280)
!6286 = !DILocation(line: 265, column: 13, scope: !6280)
!6287 = !DILocation(line: 267, column: 5, scope: !6261)
!6288 = !DILocation(line: 259, column: 44, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6255, file: !904, discriminator: 2)
!6290 = !DILocation(line: 259, column: 5, scope: !6289)
!6291 = distinct !{!6291, !6292}
!6292 = !DILocation(line: 259, column: 5, scope: !6228)
!6293 = !DILocation(line: 269, column: 5, scope: !6228)
!6294 = !DILocation(line: 270, column: 1, scope: !6228)
!6295 = distinct !DISubprogram(name: "decode_channel_sf_idx", scope: !904, file: !904, line: 478, type: !1652, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!6296 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6297)
!6297 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6298)
!6298 = distinct !DILocation(line: 590, column: 29, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !904, line: 589, column: 61)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !904, line: 589, column: 17)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !904, line: 589, column: 17)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !904, line: 585, column: 20)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !904, line: 572, column: 17)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !904, line: 567, column: 16)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !904, line: 563, column: 13)
!6306 = distinct !DILexicalBlock(scope: !6295, file: !904, line: 487, column: 30)
!6307 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6308)
!6308 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6298)
!6309 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6310)
!6310 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6298)
!6311 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !6298)
!6312 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !6298)
!6313 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !6298)
!6314 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !6298)
!6315 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !6298)
!6316 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !6298)
!6317 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !6298)
!6318 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !6298)
!6319 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !6298)
!6320 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !6298)
!6321 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !6298)
!6322 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6323)
!6323 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6324)
!6324 = distinct !DILocation(line: 581, column: 29, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !904, line: 580, column: 61)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !904, line: 580, column: 17)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !904, line: 580, column: 17)
!6328 = distinct !DILexicalBlock(scope: !6303, file: !904, line: 572, column: 34)
!6329 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6330)
!6330 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6324)
!6331 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6332)
!6332 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6324)
!6333 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !6324)
!6334 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !6324)
!6335 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !6324)
!6336 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !6324)
!6337 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !6324)
!6338 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !6324)
!6339 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !6324)
!6340 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !6324)
!6341 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !6324)
!6342 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !6324)
!6343 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !6324)
!6344 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6345)
!6345 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6346)
!6346 = distinct !DILocation(line: 556, column: 25, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !904, line: 555, column: 57)
!6348 = distinct !DILexicalBlock(scope: !6349, file: !904, line: 555, column: 13)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !904, line: 555, column: 13)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !904, line: 550, column: 16)
!6351 = distinct !DILexicalBlock(scope: !6306, file: !904, line: 539, column: 13)
!6352 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6353)
!6353 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6346)
!6354 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6355)
!6355 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6346)
!6356 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !6346)
!6357 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !6346)
!6358 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !6346)
!6359 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !6346)
!6360 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !6346)
!6361 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !6346)
!6362 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !6346)
!6363 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !6346)
!6364 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !6346)
!6365 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !6346)
!6366 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !6346)
!6367 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6368)
!6368 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6369)
!6369 = distinct !DILocation(line: 547, column: 25, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6371, file: !904, line: 545, column: 57)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !904, line: 545, column: 13)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !904, line: 545, column: 13)
!6373 = distinct !DILexicalBlock(scope: !6351, file: !904, line: 539, column: 21)
!6374 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6375)
!6375 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6369)
!6376 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6377)
!6377 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6369)
!6378 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !6369)
!6379 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !6369)
!6380 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !6369)
!6381 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !6369)
!6382 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !6369)
!6383 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !6369)
!6384 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !6369)
!6385 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !6369)
!6386 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !6369)
!6387 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !6369)
!6388 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !6369)
!6389 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6390)
!6390 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6391)
!6391 = distinct !DILocation(line: 542, column: 21, scope: !6373)
!6392 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6393)
!6393 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6391)
!6394 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6395)
!6395 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6391)
!6396 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !6391)
!6397 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !6391)
!6398 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !6391)
!6399 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !6391)
!6400 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !6391)
!6401 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !6391)
!6402 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !6391)
!6403 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !6391)
!6404 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !6391)
!6405 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !6391)
!6406 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !6391)
!6407 = !DILocation(line: 412, column: 75, scope: !3955, inlinedAt: !6408)
!6408 = distinct !DILocation(line: 534, column: 43, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !904, line: 532, column: 17)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !904, line: 532, column: 17)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !904, line: 517, column: 20)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !904, line: 502, column: 17)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !904, line: 500, column: 16)
!6414 = distinct !DILexicalBlock(scope: !6306, file: !904, line: 493, column: 13)
!6415 = !DILocation(line: 412, column: 82, scope: !3955, inlinedAt: !6408)
!6416 = !DILocation(line: 412, column: 75, scope: !3955, inlinedAt: !6417)
!6417 = distinct !DILocation(line: 516, column: 43, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !904, line: 514, column: 17)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !904, line: 514, column: 17)
!6420 = distinct !DILexicalBlock(scope: !6412, file: !904, line: 502, column: 34)
!6421 = !DILocation(line: 412, column: 82, scope: !3955, inlinedAt: !6417)
!6422 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6423)
!6423 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6424)
!6424 = distinct !DILocation(line: 497, column: 25, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6426, file: !904, line: 496, column: 57)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !904, line: 496, column: 13)
!6427 = distinct !DILexicalBlock(scope: !6428, file: !904, line: 496, column: 13)
!6428 = distinct !DILexicalBlock(scope: !6414, file: !904, line: 493, column: 21)
!6429 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6430)
!6430 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6424)
!6431 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !6432)
!6432 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6424)
!6433 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !6424)
!6434 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !6424)
!6435 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !6424)
!6436 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !6424)
!6437 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !6424)
!6438 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !6424)
!6439 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !6424)
!6440 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !6424)
!6441 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !6424)
!6442 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !6424)
!6443 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !6424)
!6444 = !DILocalVariable(name: "gb", arg: 1, scope: !6295, file: !904, line: 478, type: !1654)
!6445 = !DILocation(line: 478, column: 49, scope: !6295)
!6446 = !DILocalVariable(name: "ctx", arg: 2, scope: !6295, file: !904, line: 478, type: !1664)
!6447 = !DILocation(line: 478, column: 73, scope: !6295)
!6448 = !DILocalVariable(name: "ch_num", arg: 3, scope: !6295, file: !904, line: 479, type: !888)
!6449 = !DILocation(line: 479, column: 38, scope: !6295)
!6450 = !DILocalVariable(name: "avctx", arg: 4, scope: !6295, file: !904, line: 479, type: !1782)
!6451 = !DILocation(line: 479, column: 62, scope: !6295)
!6452 = !DILocalVariable(name: "i", scope: !6295, file: !904, line: 481, type: !888)
!6453 = !DILocation(line: 481, column: 9, scope: !6295)
!6454 = !DILocalVariable(name: "weight_idx", scope: !6295, file: !904, line: 481, type: !888)
!6455 = !DILocation(line: 481, column: 12, scope: !6295)
!6456 = !DILocalVariable(name: "delta", scope: !6295, file: !904, line: 481, type: !888)
!6457 = !DILocation(line: 481, column: 28, scope: !6295)
!6458 = !DILocalVariable(name: "diff", scope: !6295, file: !904, line: 481, type: !888)
!6459 = !DILocation(line: 481, column: 35, scope: !6295)
!6460 = !DILocalVariable(name: "num_long_vals", scope: !6295, file: !904, line: 481, type: !888)
!6461 = !DILocation(line: 481, column: 41, scope: !6295)
!6462 = !DILocalVariable(name: "delta_bits", scope: !6295, file: !904, line: 482, type: !888)
!6463 = !DILocation(line: 482, column: 9, scope: !6295)
!6464 = !DILocalVariable(name: "min_val", scope: !6295, file: !904, line: 482, type: !888)
!6465 = !DILocation(line: 482, column: 21, scope: !6295)
!6466 = !DILocalVariable(name: "vlc_sel", scope: !6295, file: !904, line: 482, type: !888)
!6467 = !DILocation(line: 482, column: 30, scope: !6295)
!6468 = !DILocalVariable(name: "start_val", scope: !6295, file: !904, line: 482, type: !888)
!6469 = !DILocation(line: 482, column: 39, scope: !6295)
!6470 = !DILocalVariable(name: "vlc_tab", scope: !6295, file: !904, line: 483, type: !1536)
!6471 = !DILocation(line: 483, column: 10, scope: !6295)
!6472 = !DILocalVariable(name: "chan", scope: !6295, file: !904, line: 484, type: !2870)
!6473 = !DILocation(line: 484, column: 24, scope: !6295)
!6474 = !DILocation(line: 484, column: 46, scope: !6295)
!6475 = !DILocation(line: 484, column: 32, scope: !6295)
!6476 = !DILocation(line: 484, column: 37, scope: !6295)
!6477 = !DILocalVariable(name: "ref_chan", scope: !6295, file: !904, line: 485, type: !2870)
!6478 = !DILocation(line: 485, column: 24, scope: !6295)
!6479 = !DILocation(line: 485, column: 36, scope: !6295)
!6480 = !DILocation(line: 485, column: 41, scope: !6295)
!6481 = !DILocation(line: 487, column: 22, scope: !6295)
!6482 = !DILocation(line: 487, column: 13, scope: !6295)
!6483 = !DILocation(line: 487, column: 5, scope: !6295)
!6484 = !DILocation(line: 489, column: 16, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6306, file: !904, line: 489, column: 9)
!6486 = !DILocation(line: 489, column: 14, scope: !6485)
!6487 = !DILocation(line: 489, column: 21, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6489, file: !904, discriminator: 1)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !904, line: 489, column: 9)
!6490 = !DILocation(line: 489, column: 25, scope: !6488)
!6491 = !DILocation(line: 489, column: 30, scope: !6488)
!6492 = !DILocation(line: 489, column: 23, scope: !6488)
!6493 = !DILocation(line: 489, column: 9, scope: !6488)
!6494 = !DILocation(line: 490, column: 43, scope: !6489)
!6495 = !DILocation(line: 490, column: 34, scope: !6489)
!6496 = !DILocation(line: 490, column: 29, scope: !6489)
!6497 = !DILocation(line: 490, column: 13, scope: !6489)
!6498 = !DILocation(line: 490, column: 19, scope: !6489)
!6499 = !DILocation(line: 490, column: 32, scope: !6489)
!6500 = !DILocation(line: 489, column: 49, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !6489, file: !904, discriminator: 2)
!6502 = !DILocation(line: 489, column: 9, scope: !6501)
!6503 = distinct !{!6503, !6504}
!6504 = !DILocation(line: 489, column: 9, scope: !6306)
!6505 = !DILocation(line: 491, column: 9, scope: !6306)
!6506 = !DILocation(line: 493, column: 13, scope: !6414)
!6507 = !DILocation(line: 493, column: 13, scope: !6306)
!6508 = !DILocation(line: 494, column: 45, scope: !6428)
!6509 = !DILocation(line: 494, column: 36, scope: !6428)
!6510 = !DILocation(line: 494, column: 24, scope: !6428)
!6511 = !DILocation(line: 494, column: 21, scope: !6428)
!6512 = !DILocation(line: 496, column: 20, scope: !6427)
!6513 = !DILocation(line: 496, column: 18, scope: !6427)
!6514 = !DILocation(line: 496, column: 25, scope: !6515)
!6515 = !DILexicalBlockFile(scope: !6426, file: !904, discriminator: 1)
!6516 = !DILocation(line: 496, column: 29, scope: !6515)
!6517 = !DILocation(line: 496, column: 34, scope: !6515)
!6518 = !DILocation(line: 496, column: 27, scope: !6515)
!6519 = !DILocation(line: 496, column: 13, scope: !6515)
!6520 = !DILocation(line: 497, column: 34, scope: !6425)
!6521 = !DILocation(line: 497, column: 38, scope: !6425)
!6522 = !DILocation(line: 497, column: 47, scope: !6425)
!6523 = !DILocation(line: 497, column: 54, scope: !6425)
!6524 = !DILocation(line: 497, column: 63, scope: !6425)
!6525 = !DILocation(line: 497, column: 25, scope: !6425)
!6526 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !6424)
!6527 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !6424)
!6528 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !6424)
!6529 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !6424)
!6530 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !6424)
!6531 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !6424)
!6532 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !6424)
!6533 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !6424)
!6534 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !6424)
!6535 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !6424)
!6536 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6424)
!6537 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6432)
!6538 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6432)
!6539 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6432)
!6540 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6432)
!6541 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6432)
!6542 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6432)
!6543 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6432)
!6544 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6432)
!6545 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6432)
!6546 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6432)
!6547 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6432)
!6548 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6432)
!6549 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6432)
!6550 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6432)
!6551 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6432)
!6552 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6432)
!6553 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6432)
!6554 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6432)
!6555 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !6424)
!6556 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !6424)
!6557 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !6424)
!6558 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !6424)
!6559 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !6424)
!6560 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !6424)
!6561 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !6424)
!6562 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !6424)
!6563 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !6424)
!6564 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !6424)
!6565 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !6424)
!6566 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !6424)
!6567 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !6424)
!6568 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !6424)
!6569 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !6424)
!6570 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !6424)
!6571 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !6424)
!6572 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !6424)
!6573 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !6424)
!6574 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !6424)
!6575 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !6424)
!6576 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !6424)
!6577 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !6424)
!6578 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !6424)
!6579 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !6424)
!6580 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !6424)
!6581 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !6424)
!6582 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !6424)
!6583 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !6424)
!6584 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !6424)
!6585 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !6424)
!6586 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !6424)
!6587 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !6424)
!6588 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !6424)
!6589 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !6424)
!6590 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !6424)
!6591 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !6424)
!6592 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !6424)
!6593 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !6424)
!6594 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !6424)
!6595 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6424)
!6596 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6430)
!6597 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6430)
!6598 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6430)
!6599 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6430)
!6600 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6430)
!6601 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6430)
!6602 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6430)
!6603 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6430)
!6604 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6430)
!6605 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6430)
!6606 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6430)
!6607 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6430)
!6608 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6430)
!6609 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6430)
!6610 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6430)
!6611 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6430)
!6612 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6430)
!6613 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6430)
!6614 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !6424)
!6615 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !6424)
!6616 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !6424)
!6617 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !6424)
!6618 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !6424)
!6619 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !6424)
!6620 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !6424)
!6621 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !6424)
!6622 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !6424)
!6623 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !6424)
!6624 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !6424)
!6625 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !6424)
!6626 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !6424)
!6627 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !6424)
!6628 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !6424)
!6629 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !6424)
!6630 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !6424)
!6631 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !6424)
!6632 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !6424)
!6633 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !6424)
!6634 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !6424)
!6635 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !6424)
!6636 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !6424)
!6637 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !6424)
!6638 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !6424)
!6639 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !6424)
!6640 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !6424)
!6641 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !6424)
!6642 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !6424)
!6643 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !6424)
!6644 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !6424)
!6645 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !6424)
!6646 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !6424)
!6647 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !6424)
!6648 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !6424)
!6649 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !6424)
!6650 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !6424)
!6651 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !6424)
!6652 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !6424)
!6653 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !6424)
!6654 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !6424)
!6655 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !6424)
!6656 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !6424)
!6657 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !6424)
!6658 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !6424)
!6659 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6424)
!6660 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6423)
!6661 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6423)
!6662 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6423)
!6663 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6423)
!6664 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6423)
!6665 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6423)
!6666 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6423)
!6667 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6423)
!6668 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6423)
!6669 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6423)
!6670 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6423)
!6671 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6423)
!6672 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6423)
!6673 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6423)
!6674 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6423)
!6675 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6423)
!6676 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6423)
!6677 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6423)
!6678 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !6424)
!6679 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !6424)
!6680 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !6424)
!6681 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !6424)
!6682 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !6424)
!6683 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !6424)
!6684 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !6424)
!6685 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !6424)
!6686 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !6424)
!6687 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !6424)
!6688 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !6424)
!6689 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !6424)
!6690 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !6424)
!6691 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !6424)
!6692 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !6424)
!6693 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !6424)
!6694 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !6424)
!6695 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !6424)
!6696 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !6424)
!6697 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !6424)
!6698 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !6424)
!6699 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !6424)
!6700 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !6424)
!6701 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !6424)
!6702 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !6424)
!6703 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !6424)
!6704 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !6424)
!6705 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !6424)
!6706 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !6424)
!6707 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !6424)
!6708 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !6424)
!6709 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !6424)
!6710 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !6424)
!6711 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !6424)
!6712 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !6424)
!6713 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !6424)
!6714 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !6424)
!6715 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !6424)
!6716 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !6424)
!6717 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !6424)
!6718 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !6424)
!6719 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !6424)
!6720 = !DILocation(line: 497, column: 23, scope: !6425)
!6721 = !DILocation(line: 498, column: 59, scope: !6425)
!6722 = !DILocation(line: 498, column: 39, scope: !6425)
!6723 = !DILocation(line: 498, column: 49, scope: !6425)
!6724 = !DILocation(line: 498, column: 64, scope: !6425)
!6725 = !DILocation(line: 498, column: 62, scope: !6425)
!6726 = !DILocation(line: 498, column: 71, scope: !6425)
!6727 = !DILocation(line: 498, column: 33, scope: !6425)
!6728 = !DILocation(line: 498, column: 17, scope: !6425)
!6729 = !DILocation(line: 498, column: 23, scope: !6425)
!6730 = !DILocation(line: 498, column: 36, scope: !6425)
!6731 = !DILocation(line: 499, column: 13, scope: !6425)
!6732 = !DILocation(line: 496, column: 53, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6426, file: !904, discriminator: 2)
!6734 = !DILocation(line: 496, column: 13, scope: !6733)
!6735 = distinct !{!6735, !6736}
!6736 = !DILocation(line: 496, column: 13, scope: !6428)
!6737 = !DILocation(line: 500, column: 9, scope: !6428)
!6738 = !DILocation(line: 501, column: 35, scope: !6413)
!6739 = !DILocation(line: 501, column: 26, scope: !6413)
!6740 = !DILocation(line: 501, column: 24, scope: !6413)
!6741 = !DILocation(line: 502, column: 17, scope: !6412)
!6742 = !DILocation(line: 502, column: 28, scope: !6412)
!6743 = !DILocation(line: 502, column: 17, scope: !6413)
!6744 = !DILocation(line: 503, column: 39, scope: !6420)
!6745 = !DILocation(line: 503, column: 29, scope: !6420)
!6746 = !DILocation(line: 503, column: 27, scope: !6420)
!6747 = !DILocation(line: 503, column: 64, scope: !6420)
!6748 = !DILocation(line: 503, column: 104, scope: !6420)
!6749 = !DILocation(line: 503, column: 94, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !6420, file: !904, discriminator: 1)
!6751 = !DILocation(line: 503, column: 76, scope: !6420)
!6752 = !DILocation(line: 503, column: 118, scope: !6420)
!6753 = !DILocation(line: 503, column: 124, scope: !6420)
!6754 = !DILocation(line: 503, column: 117, scope: !6420)
!6755 = !DILocation(line: 503, column: 137, scope: !6420)
!6756 = !DILocation(line: 503, column: 142, scope: !6420)
!6757 = !DILocation(line: 503, column: 48, scope: !6758)
!6758 = !DILexicalBlockFile(scope: !6420, file: !904, discriminator: 2)
!6759 = !DILocation(line: 505, column: 42, scope: !6420)
!6760 = !DILocation(line: 505, column: 33, scope: !6420)
!6761 = !DILocation(line: 505, column: 31, scope: !6420)
!6762 = !DILocation(line: 506, column: 39, scope: !6420)
!6763 = !DILocation(line: 506, column: 30, scope: !6420)
!6764 = !DILocation(line: 506, column: 28, scope: !6420)
!6765 = !DILocation(line: 507, column: 36, scope: !6420)
!6766 = !DILocation(line: 507, column: 27, scope: !6420)
!6767 = !DILocation(line: 507, column: 43, scope: !6420)
!6768 = !DILocation(line: 507, column: 25, scope: !6420)
!6769 = !DILocation(line: 509, column: 24, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6420, file: !904, line: 509, column: 17)
!6771 = !DILocation(line: 509, column: 22, scope: !6770)
!6772 = !DILocation(line: 509, column: 29, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !6774, file: !904, discriminator: 1)
!6774 = distinct !DILexicalBlock(scope: !6770, file: !904, line: 509, column: 17)
!6775 = !DILocation(line: 509, column: 33, scope: !6773)
!6776 = !DILocation(line: 509, column: 31, scope: !6773)
!6777 = !DILocation(line: 509, column: 17, scope: !6773)
!6778 = !DILocation(line: 510, column: 59, scope: !6774)
!6779 = !DILocation(line: 510, column: 43, scope: !6774)
!6780 = !DILocation(line: 510, column: 49, scope: !6774)
!6781 = !DILocation(line: 511, column: 52, scope: !6774)
!6782 = !DILocation(line: 511, column: 43, scope: !6774)
!6783 = !DILocation(line: 510, column: 62, scope: !6774)
!6784 = !DILocation(line: 511, column: 59, scope: !6774)
!6785 = !DILocation(line: 511, column: 64, scope: !6774)
!6786 = !DILocation(line: 510, column: 37, scope: !6774)
!6787 = !DILocation(line: 510, column: 21, scope: !6774)
!6788 = !DILocation(line: 510, column: 27, scope: !6774)
!6789 = !DILocation(line: 510, column: 40, scope: !6774)
!6790 = !DILocation(line: 509, column: 49, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !6774, file: !904, discriminator: 2)
!6792 = !DILocation(line: 509, column: 17, scope: !6791)
!6793 = distinct !{!6793, !6794}
!6794 = !DILocation(line: 509, column: 17, scope: !6420)
!6795 = !DILocation(line: 514, column: 26, scope: !6419)
!6796 = !DILocation(line: 514, column: 24, scope: !6419)
!6797 = !DILocation(line: 514, column: 22, scope: !6419)
!6798 = !DILocation(line: 514, column: 41, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6418, file: !904, discriminator: 1)
!6800 = !DILocation(line: 514, column: 45, scope: !6799)
!6801 = !DILocation(line: 514, column: 50, scope: !6799)
!6802 = !DILocation(line: 514, column: 43, scope: !6799)
!6803 = !DILocation(line: 514, column: 17, scope: !6799)
!6804 = !DILocation(line: 515, column: 59, scope: !6418)
!6805 = !DILocation(line: 515, column: 43, scope: !6418)
!6806 = !DILocation(line: 515, column: 49, scope: !6418)
!6807 = !DILocation(line: 515, column: 64, scope: !6418)
!6808 = !DILocation(line: 515, column: 62, scope: !6418)
!6809 = !DILocation(line: 516, column: 53, scope: !6418)
!6810 = !DILocation(line: 516, column: 57, scope: !6418)
!6811 = !DILocation(line: 516, column: 43, scope: !6418)
!6812 = !DILocation(line: 414, column: 12, scope: !3955, inlinedAt: !6417)
!6813 = !DILocation(line: 414, column: 25, scope: !4377, inlinedAt: !6417)
!6814 = !DILocation(line: 414, column: 28, scope: !4377, inlinedAt: !6417)
!6815 = !DILocation(line: 414, column: 16, scope: !4377, inlinedAt: !6417)
!6816 = !DILocation(line: 414, column: 12, scope: !4377, inlinedAt: !6417)
!6817 = !DILocation(line: 414, column: 12, scope: !4382, inlinedAt: !6417)
!6818 = !DILocation(line: 414, column: 12, scope: !4384, inlinedAt: !6417)
!6819 = !DILocation(line: 515, column: 72, scope: !6418)
!6820 = !DILocation(line: 516, column: 70, scope: !6418)
!6821 = !DILocation(line: 515, column: 37, scope: !6418)
!6822 = !DILocation(line: 515, column: 21, scope: !6418)
!6823 = !DILocation(line: 515, column: 27, scope: !6418)
!6824 = !DILocation(line: 515, column: 40, scope: !6418)
!6825 = !DILocation(line: 514, column: 69, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !6418, file: !904, discriminator: 2)
!6827 = !DILocation(line: 514, column: 17, scope: !6826)
!6828 = distinct !{!6828, !6829}
!6829 = !DILocation(line: 514, column: 17, scope: !6420)
!6830 = !DILocation(line: 517, column: 13, scope: !6420)
!6831 = !DILocation(line: 518, column: 42, scope: !6411)
!6832 = !DILocation(line: 518, column: 33, scope: !6411)
!6833 = !DILocation(line: 518, column: 31, scope: !6411)
!6834 = !DILocation(line: 519, column: 39, scope: !6411)
!6835 = !DILocation(line: 519, column: 30, scope: !6411)
!6836 = !DILocation(line: 519, column: 28, scope: !6411)
!6837 = !DILocation(line: 520, column: 36, scope: !6411)
!6838 = !DILocation(line: 520, column: 27, scope: !6411)
!6839 = !DILocation(line: 520, column: 25, scope: !6411)
!6840 = !DILocation(line: 521, column: 21, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6411, file: !904, line: 521, column: 21)
!6842 = !DILocation(line: 521, column: 37, scope: !6841)
!6843 = !DILocation(line: 521, column: 42, scope: !6841)
!6844 = !DILocation(line: 521, column: 35, scope: !6841)
!6845 = !DILocation(line: 521, column: 59, scope: !6841)
!6846 = !DILocation(line: 521, column: 62, scope: !6847)
!6847 = !DILexicalBlockFile(scope: !6841, file: !904, discriminator: 1)
!6848 = !DILocation(line: 521, column: 73, scope: !6847)
!6849 = !DILocation(line: 521, column: 21, scope: !6847)
!6850 = !DILocation(line: 522, column: 28, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6841, file: !904, line: 521, column: 79)
!6852 = !DILocation(line: 522, column: 21, scope: !6851)
!6853 = !DILocation(line: 524, column: 21, scope: !6851)
!6854 = !DILocation(line: 528, column: 24, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6411, file: !904, line: 528, column: 17)
!6856 = !DILocation(line: 528, column: 22, scope: !6855)
!6857 = !DILocation(line: 528, column: 29, scope: !6858)
!6858 = !DILexicalBlockFile(scope: !6859, file: !904, discriminator: 1)
!6859 = distinct !DILexicalBlock(scope: !6855, file: !904, line: 528, column: 17)
!6860 = !DILocation(line: 528, column: 33, scope: !6858)
!6861 = !DILocation(line: 528, column: 31, scope: !6858)
!6862 = !DILocation(line: 528, column: 17, scope: !6858)
!6863 = !DILocation(line: 529, column: 51, scope: !6859)
!6864 = !DILocation(line: 529, column: 42, scope: !6859)
!6865 = !DILocation(line: 529, column: 37, scope: !6859)
!6866 = !DILocation(line: 529, column: 21, scope: !6859)
!6867 = !DILocation(line: 529, column: 27, scope: !6859)
!6868 = !DILocation(line: 529, column: 40, scope: !6859)
!6869 = !DILocation(line: 528, column: 49, scope: !6870)
!6870 = !DILexicalBlockFile(scope: !6859, file: !904, discriminator: 2)
!6871 = !DILocation(line: 528, column: 17, scope: !6870)
!6872 = distinct !{!6872, !6873}
!6873 = !DILocation(line: 528, column: 17, scope: !6411)
!6874 = !DILocation(line: 532, column: 26, scope: !6410)
!6875 = !DILocation(line: 532, column: 24, scope: !6410)
!6876 = !DILocation(line: 532, column: 22, scope: !6410)
!6877 = !DILocation(line: 532, column: 41, scope: !6878)
!6878 = !DILexicalBlockFile(scope: !6409, file: !904, discriminator: 1)
!6879 = !DILocation(line: 532, column: 45, scope: !6878)
!6880 = !DILocation(line: 532, column: 50, scope: !6878)
!6881 = !DILocation(line: 532, column: 43, scope: !6878)
!6882 = !DILocation(line: 532, column: 17, scope: !6878)
!6883 = !DILocation(line: 533, column: 43, scope: !6409)
!6884 = !DILocation(line: 534, column: 53, scope: !6409)
!6885 = !DILocation(line: 534, column: 57, scope: !6409)
!6886 = !DILocation(line: 534, column: 43, scope: !6409)
!6887 = !DILocation(line: 414, column: 12, scope: !3955, inlinedAt: !6408)
!6888 = !DILocation(line: 414, column: 25, scope: !4377, inlinedAt: !6408)
!6889 = !DILocation(line: 414, column: 28, scope: !4377, inlinedAt: !6408)
!6890 = !DILocation(line: 414, column: 16, scope: !4377, inlinedAt: !6408)
!6891 = !DILocation(line: 414, column: 12, scope: !4377, inlinedAt: !6408)
!6892 = !DILocation(line: 414, column: 12, scope: !4382, inlinedAt: !6408)
!6893 = !DILocation(line: 414, column: 12, scope: !4384, inlinedAt: !6408)
!6894 = !DILocation(line: 533, column: 51, scope: !6409)
!6895 = !DILocation(line: 534, column: 70, scope: !6409)
!6896 = !DILocation(line: 533, column: 37, scope: !6409)
!6897 = !DILocation(line: 533, column: 21, scope: !6409)
!6898 = !DILocation(line: 533, column: 27, scope: !6409)
!6899 = !DILocation(line: 533, column: 40, scope: !6409)
!6900 = !DILocation(line: 532, column: 69, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !6409, file: !904, discriminator: 2)
!6902 = !DILocation(line: 532, column: 17, scope: !6901)
!6903 = distinct !{!6903, !6904}
!6904 = !DILocation(line: 532, column: 17, scope: !6411)
!6905 = !DILocation(line: 537, column: 9, scope: !6306)
!6906 = !DILocation(line: 539, column: 13, scope: !6351)
!6907 = !DILocation(line: 539, column: 13, scope: !6306)
!6908 = !DILocation(line: 540, column: 45, scope: !6373)
!6909 = !DILocation(line: 540, column: 36, scope: !6373)
!6910 = !DILocation(line: 540, column: 24, scope: !6373)
!6911 = !DILocation(line: 540, column: 21, scope: !6373)
!6912 = !DILocation(line: 542, column: 30, scope: !6373)
!6913 = !DILocation(line: 542, column: 34, scope: !6373)
!6914 = !DILocation(line: 542, column: 43, scope: !6373)
!6915 = !DILocation(line: 542, column: 50, scope: !6373)
!6916 = !DILocation(line: 542, column: 59, scope: !6373)
!6917 = !DILocation(line: 542, column: 21, scope: !6373)
!6918 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !6391)
!6919 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !6391)
!6920 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !6391)
!6921 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !6391)
!6922 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !6391)
!6923 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !6391)
!6924 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !6391)
!6925 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !6391)
!6926 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !6391)
!6927 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !6391)
!6928 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6391)
!6929 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6395)
!6930 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6395)
!6931 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6395)
!6932 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6395)
!6933 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6395)
!6934 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6395)
!6935 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6395)
!6936 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6395)
!6937 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6395)
!6938 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6395)
!6939 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6395)
!6940 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6395)
!6941 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6395)
!6942 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6395)
!6943 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6395)
!6944 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6395)
!6945 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6395)
!6946 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6395)
!6947 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !6391)
!6948 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !6391)
!6949 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !6391)
!6950 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !6391)
!6951 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !6391)
!6952 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !6391)
!6953 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !6391)
!6954 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !6391)
!6955 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !6391)
!6956 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !6391)
!6957 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !6391)
!6958 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !6391)
!6959 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !6391)
!6960 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !6391)
!6961 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !6391)
!6962 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !6391)
!6963 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !6391)
!6964 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !6391)
!6965 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !6391)
!6966 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !6391)
!6967 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !6391)
!6968 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !6391)
!6969 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !6391)
!6970 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !6391)
!6971 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !6391)
!6972 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !6391)
!6973 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !6391)
!6974 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !6391)
!6975 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !6391)
!6976 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !6391)
!6977 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !6391)
!6978 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !6391)
!6979 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !6391)
!6980 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !6391)
!6981 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !6391)
!6982 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !6391)
!6983 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !6391)
!6984 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !6391)
!6985 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !6391)
!6986 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !6391)
!6987 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6391)
!6988 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6393)
!6989 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6393)
!6990 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6393)
!6991 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6393)
!6992 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6393)
!6993 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6393)
!6994 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6393)
!6995 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6393)
!6996 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6393)
!6997 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6393)
!6998 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6393)
!6999 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6393)
!7000 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6393)
!7001 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6393)
!7002 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6393)
!7003 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6393)
!7004 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6393)
!7005 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6393)
!7006 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !6391)
!7007 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !6391)
!7008 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !6391)
!7009 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !6391)
!7010 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !6391)
!7011 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !6391)
!7012 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !6391)
!7013 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !6391)
!7014 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !6391)
!7015 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !6391)
!7016 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !6391)
!7017 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !6391)
!7018 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !6391)
!7019 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !6391)
!7020 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !6391)
!7021 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !6391)
!7022 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !6391)
!7023 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !6391)
!7024 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !6391)
!7025 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !6391)
!7026 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !6391)
!7027 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !6391)
!7028 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !6391)
!7029 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !6391)
!7030 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !6391)
!7031 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !6391)
!7032 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !6391)
!7033 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !6391)
!7034 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !6391)
!7035 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !6391)
!7036 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !6391)
!7037 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !6391)
!7038 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !6391)
!7039 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !6391)
!7040 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !6391)
!7041 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !6391)
!7042 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !6391)
!7043 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !6391)
!7044 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !6391)
!7045 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !6391)
!7046 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !6391)
!7047 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !6391)
!7048 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !6391)
!7049 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !6391)
!7050 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !6391)
!7051 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6391)
!7052 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6390)
!7053 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6390)
!7054 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6390)
!7055 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6390)
!7056 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6390)
!7057 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6390)
!7058 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6390)
!7059 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6390)
!7060 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6390)
!7061 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6390)
!7062 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6390)
!7063 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6390)
!7064 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6390)
!7065 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6390)
!7066 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6390)
!7067 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6390)
!7068 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6390)
!7069 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6390)
!7070 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !6391)
!7071 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !6391)
!7072 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !6391)
!7073 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !6391)
!7074 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !6391)
!7075 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !6391)
!7076 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !6391)
!7077 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !6391)
!7078 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !6391)
!7079 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !6391)
!7080 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !6391)
!7081 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !6391)
!7082 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !6391)
!7083 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !6391)
!7084 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !6391)
!7085 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !6391)
!7086 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !6391)
!7087 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !6391)
!7088 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !6391)
!7089 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !6391)
!7090 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !6391)
!7091 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !6391)
!7092 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !6391)
!7093 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !6391)
!7094 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !6391)
!7095 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !6391)
!7096 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !6391)
!7097 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !6391)
!7098 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !6391)
!7099 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !6391)
!7100 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !6391)
!7101 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !6391)
!7102 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !6391)
!7103 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !6391)
!7104 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !6391)
!7105 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !6391)
!7106 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !6391)
!7107 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !6391)
!7108 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !6391)
!7109 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !6391)
!7110 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !6391)
!7111 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !6391)
!7112 = !DILocation(line: 542, column: 19, scope: !6373)
!7113 = !DILocation(line: 543, column: 35, scope: !6373)
!7114 = !DILocation(line: 543, column: 45, scope: !6373)
!7115 = !DILocation(line: 543, column: 60, scope: !6373)
!7116 = !DILocation(line: 543, column: 58, scope: !6373)
!7117 = !DILocation(line: 543, column: 67, scope: !6373)
!7118 = !DILocation(line: 543, column: 13, scope: !6373)
!7119 = !DILocation(line: 543, column: 19, scope: !6373)
!7120 = !DILocation(line: 543, column: 32, scope: !6373)
!7121 = !DILocation(line: 545, column: 20, scope: !6372)
!7122 = !DILocation(line: 545, column: 18, scope: !6372)
!7123 = !DILocation(line: 545, column: 25, scope: !7124)
!7124 = !DILexicalBlockFile(scope: !6371, file: !904, discriminator: 1)
!7125 = !DILocation(line: 545, column: 29, scope: !7124)
!7126 = !DILocation(line: 545, column: 34, scope: !7124)
!7127 = !DILocation(line: 545, column: 27, scope: !7124)
!7128 = !DILocation(line: 545, column: 13, scope: !7124)
!7129 = !DILocation(line: 546, column: 44, scope: !6370)
!7130 = !DILocation(line: 546, column: 24, scope: !6370)
!7131 = !DILocation(line: 546, column: 34, scope: !6370)
!7132 = !DILocation(line: 546, column: 69, scope: !6370)
!7133 = !DILocation(line: 546, column: 71, scope: !6370)
!7134 = !DILocation(line: 546, column: 49, scope: !6370)
!7135 = !DILocation(line: 546, column: 59, scope: !6370)
!7136 = !DILocation(line: 546, column: 47, scope: !6370)
!7137 = !DILocation(line: 546, column: 22, scope: !6370)
!7138 = !DILocation(line: 547, column: 34, scope: !6370)
!7139 = !DILocation(line: 547, column: 38, scope: !6370)
!7140 = !DILocation(line: 547, column: 47, scope: !6370)
!7141 = !DILocation(line: 547, column: 54, scope: !6370)
!7142 = !DILocation(line: 547, column: 63, scope: !6370)
!7143 = !DILocation(line: 547, column: 25, scope: !6370)
!7144 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !6369)
!7145 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !6369)
!7146 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !6369)
!7147 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !6369)
!7148 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !6369)
!7149 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !6369)
!7150 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !6369)
!7151 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !6369)
!7152 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !6369)
!7153 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !6369)
!7154 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6369)
!7155 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6377)
!7156 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6377)
!7157 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6377)
!7158 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6377)
!7159 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6377)
!7160 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6377)
!7161 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6377)
!7162 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6377)
!7163 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6377)
!7164 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6377)
!7165 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6377)
!7166 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6377)
!7167 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6377)
!7168 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6377)
!7169 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6377)
!7170 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6377)
!7171 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6377)
!7172 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6377)
!7173 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !6369)
!7174 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !6369)
!7175 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !6369)
!7176 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !6369)
!7177 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !6369)
!7178 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !6369)
!7179 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !6369)
!7180 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !6369)
!7181 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !6369)
!7182 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !6369)
!7183 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !6369)
!7184 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !6369)
!7185 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !6369)
!7186 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !6369)
!7187 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !6369)
!7188 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !6369)
!7189 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !6369)
!7190 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !6369)
!7191 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !6369)
!7192 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !6369)
!7193 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !6369)
!7194 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !6369)
!7195 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !6369)
!7196 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !6369)
!7197 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !6369)
!7198 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !6369)
!7199 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !6369)
!7200 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !6369)
!7201 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !6369)
!7202 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !6369)
!7203 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !6369)
!7204 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !6369)
!7205 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !6369)
!7206 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !6369)
!7207 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !6369)
!7208 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !6369)
!7209 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !6369)
!7210 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !6369)
!7211 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !6369)
!7212 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !6369)
!7213 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6369)
!7214 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6375)
!7215 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6375)
!7216 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6375)
!7217 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6375)
!7218 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6375)
!7219 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6375)
!7220 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6375)
!7221 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6375)
!7222 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6375)
!7223 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6375)
!7224 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6375)
!7225 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6375)
!7226 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6375)
!7227 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6375)
!7228 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6375)
!7229 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6375)
!7230 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6375)
!7231 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6375)
!7232 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !6369)
!7233 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !6369)
!7234 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !6369)
!7235 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !6369)
!7236 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !6369)
!7237 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !6369)
!7238 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !6369)
!7239 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !6369)
!7240 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !6369)
!7241 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !6369)
!7242 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !6369)
!7243 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !6369)
!7244 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !6369)
!7245 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !6369)
!7246 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !6369)
!7247 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !6369)
!7248 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !6369)
!7249 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !6369)
!7250 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !6369)
!7251 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !6369)
!7252 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !6369)
!7253 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !6369)
!7254 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !6369)
!7255 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !6369)
!7256 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !6369)
!7257 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !6369)
!7258 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !6369)
!7259 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !6369)
!7260 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !6369)
!7261 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !6369)
!7262 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !6369)
!7263 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !6369)
!7264 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !6369)
!7265 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !6369)
!7266 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !6369)
!7267 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !6369)
!7268 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !6369)
!7269 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !6369)
!7270 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !6369)
!7271 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !6369)
!7272 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !6369)
!7273 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !6369)
!7274 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !6369)
!7275 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !6369)
!7276 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !6369)
!7277 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6369)
!7278 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6368)
!7279 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6368)
!7280 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6368)
!7281 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6368)
!7282 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6368)
!7283 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6368)
!7284 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6368)
!7285 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6368)
!7286 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6368)
!7287 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6368)
!7288 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6368)
!7289 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6368)
!7290 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6368)
!7291 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6368)
!7292 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6368)
!7293 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6368)
!7294 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6368)
!7295 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6368)
!7296 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !6369)
!7297 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !6369)
!7298 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !6369)
!7299 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !6369)
!7300 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !6369)
!7301 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !6369)
!7302 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !6369)
!7303 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !6369)
!7304 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !6369)
!7305 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !6369)
!7306 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !6369)
!7307 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !6369)
!7308 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !6369)
!7309 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !6369)
!7310 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !6369)
!7311 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !6369)
!7312 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !6369)
!7313 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !6369)
!7314 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !6369)
!7315 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !6369)
!7316 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !6369)
!7317 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !6369)
!7318 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !6369)
!7319 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !6369)
!7320 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !6369)
!7321 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !6369)
!7322 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !6369)
!7323 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !6369)
!7324 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !6369)
!7325 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !6369)
!7326 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !6369)
!7327 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !6369)
!7328 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !6369)
!7329 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !6369)
!7330 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !6369)
!7331 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !6369)
!7332 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !6369)
!7333 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !6369)
!7334 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !6369)
!7335 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !6369)
!7336 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !6369)
!7337 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !6369)
!7338 = !DILocation(line: 547, column: 23, scope: !6370)
!7339 = !DILocation(line: 548, column: 55, scope: !6370)
!7340 = !DILocation(line: 548, column: 57, scope: !6370)
!7341 = !DILocation(line: 548, column: 39, scope: !6370)
!7342 = !DILocation(line: 548, column: 45, scope: !6370)
!7343 = !DILocation(line: 548, column: 64, scope: !6370)
!7344 = !DILocation(line: 548, column: 62, scope: !6370)
!7345 = !DILocation(line: 548, column: 71, scope: !6370)
!7346 = !DILocation(line: 548, column: 69, scope: !6370)
!7347 = !DILocation(line: 548, column: 78, scope: !6370)
!7348 = !DILocation(line: 548, column: 33, scope: !6370)
!7349 = !DILocation(line: 548, column: 17, scope: !6370)
!7350 = !DILocation(line: 548, column: 23, scope: !6370)
!7351 = !DILocation(line: 548, column: 36, scope: !6370)
!7352 = !DILocation(line: 549, column: 13, scope: !6370)
!7353 = !DILocation(line: 545, column: 53, scope: !7354)
!7354 = !DILexicalBlockFile(scope: !6371, file: !904, discriminator: 2)
!7355 = !DILocation(line: 545, column: 13, scope: !7354)
!7356 = distinct !{!7356, !7357}
!7357 = !DILocation(line: 545, column: 13, scope: !6373)
!7358 = !DILocation(line: 550, column: 9, scope: !6373)
!7359 = !DILocation(line: 551, column: 45, scope: !6350)
!7360 = !DILocation(line: 551, column: 36, scope: !6350)
!7361 = !DILocation(line: 551, column: 52, scope: !6350)
!7362 = !DILocation(line: 551, column: 24, scope: !6350)
!7363 = !DILocation(line: 551, column: 21, scope: !6350)
!7364 = !DILocation(line: 553, column: 35, scope: !6350)
!7365 = !DILocation(line: 553, column: 25, scope: !6350)
!7366 = !DILocation(line: 553, column: 23, scope: !6350)
!7367 = !DILocation(line: 553, column: 60, scope: !6350)
!7368 = !DILocation(line: 553, column: 100, scope: !6350)
!7369 = !DILocation(line: 553, column: 90, scope: !7370)
!7370 = !DILexicalBlockFile(scope: !6350, file: !904, discriminator: 1)
!7371 = !DILocation(line: 553, column: 72, scope: !6350)
!7372 = !DILocation(line: 553, column: 114, scope: !6350)
!7373 = !DILocation(line: 553, column: 120, scope: !6350)
!7374 = !DILocation(line: 553, column: 113, scope: !6350)
!7375 = !DILocation(line: 553, column: 133, scope: !6350)
!7376 = !DILocation(line: 553, column: 138, scope: !6350)
!7377 = !DILocation(line: 553, column: 44, scope: !7378)
!7378 = !DILexicalBlockFile(scope: !6350, file: !904, discriminator: 2)
!7379 = !DILocation(line: 555, column: 20, scope: !6349)
!7380 = !DILocation(line: 555, column: 18, scope: !6349)
!7381 = !DILocation(line: 555, column: 25, scope: !7382)
!7382 = !DILexicalBlockFile(scope: !6348, file: !904, discriminator: 1)
!7383 = !DILocation(line: 555, column: 29, scope: !7382)
!7384 = !DILocation(line: 555, column: 34, scope: !7382)
!7385 = !DILocation(line: 555, column: 27, scope: !7382)
!7386 = !DILocation(line: 555, column: 13, scope: !7382)
!7387 = !DILocation(line: 556, column: 34, scope: !6347)
!7388 = !DILocation(line: 556, column: 38, scope: !6347)
!7389 = !DILocation(line: 556, column: 47, scope: !6347)
!7390 = !DILocation(line: 556, column: 54, scope: !6347)
!7391 = !DILocation(line: 556, column: 63, scope: !6347)
!7392 = !DILocation(line: 556, column: 25, scope: !6347)
!7393 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !6346)
!7394 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !6346)
!7395 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !6346)
!7396 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !6346)
!7397 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !6346)
!7398 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !6346)
!7399 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !6346)
!7400 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !6346)
!7401 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !6346)
!7402 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !6346)
!7403 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6346)
!7404 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6355)
!7405 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6355)
!7406 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6355)
!7407 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6355)
!7408 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6355)
!7409 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6355)
!7410 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6355)
!7411 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6355)
!7412 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6355)
!7413 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6355)
!7414 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6355)
!7415 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6355)
!7416 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6355)
!7417 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6355)
!7418 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6355)
!7419 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6355)
!7420 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6355)
!7421 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6355)
!7422 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !6346)
!7423 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !6346)
!7424 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !6346)
!7425 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !6346)
!7426 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !6346)
!7427 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !6346)
!7428 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !6346)
!7429 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !6346)
!7430 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !6346)
!7431 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !6346)
!7432 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !6346)
!7433 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !6346)
!7434 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !6346)
!7435 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !6346)
!7436 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !6346)
!7437 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !6346)
!7438 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !6346)
!7439 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !6346)
!7440 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !6346)
!7441 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !6346)
!7442 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !6346)
!7443 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !6346)
!7444 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !6346)
!7445 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !6346)
!7446 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !6346)
!7447 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !6346)
!7448 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !6346)
!7449 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !6346)
!7450 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !6346)
!7451 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !6346)
!7452 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !6346)
!7453 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !6346)
!7454 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !6346)
!7455 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !6346)
!7456 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !6346)
!7457 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !6346)
!7458 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !6346)
!7459 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !6346)
!7460 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !6346)
!7461 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !6346)
!7462 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6346)
!7463 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6353)
!7464 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6353)
!7465 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6353)
!7466 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6353)
!7467 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6353)
!7468 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6353)
!7469 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6353)
!7470 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6353)
!7471 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6353)
!7472 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6353)
!7473 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6353)
!7474 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6353)
!7475 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6353)
!7476 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6353)
!7477 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6353)
!7478 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6353)
!7479 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6353)
!7480 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6353)
!7481 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !6346)
!7482 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !6346)
!7483 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !6346)
!7484 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !6346)
!7485 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !6346)
!7486 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !6346)
!7487 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !6346)
!7488 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !6346)
!7489 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !6346)
!7490 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !6346)
!7491 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !6346)
!7492 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !6346)
!7493 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !6346)
!7494 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !6346)
!7495 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !6346)
!7496 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !6346)
!7497 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !6346)
!7498 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !6346)
!7499 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !6346)
!7500 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !6346)
!7501 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !6346)
!7502 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !6346)
!7503 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !6346)
!7504 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !6346)
!7505 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !6346)
!7506 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !6346)
!7507 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !6346)
!7508 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !6346)
!7509 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !6346)
!7510 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !6346)
!7511 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !6346)
!7512 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !6346)
!7513 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !6346)
!7514 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !6346)
!7515 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !6346)
!7516 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !6346)
!7517 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !6346)
!7518 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !6346)
!7519 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !6346)
!7520 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !6346)
!7521 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !6346)
!7522 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !6346)
!7523 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !6346)
!7524 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !6346)
!7525 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !6346)
!7526 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6346)
!7527 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6345)
!7528 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6345)
!7529 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6345)
!7530 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6345)
!7531 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6345)
!7532 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6345)
!7533 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6345)
!7534 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6345)
!7535 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6345)
!7536 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6345)
!7537 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6345)
!7538 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6345)
!7539 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6345)
!7540 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6345)
!7541 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6345)
!7542 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6345)
!7543 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6345)
!7544 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6345)
!7545 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !6346)
!7546 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !6346)
!7547 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !6346)
!7548 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !6346)
!7549 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !6346)
!7550 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !6346)
!7551 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !6346)
!7552 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !6346)
!7553 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !6346)
!7554 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !6346)
!7555 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !6346)
!7556 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !6346)
!7557 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !6346)
!7558 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !6346)
!7559 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !6346)
!7560 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !6346)
!7561 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !6346)
!7562 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !6346)
!7563 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !6346)
!7564 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !6346)
!7565 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !6346)
!7566 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !6346)
!7567 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !6346)
!7568 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !6346)
!7569 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !6346)
!7570 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !6346)
!7571 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !6346)
!7572 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !6346)
!7573 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !6346)
!7574 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !6346)
!7575 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !6346)
!7576 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !6346)
!7577 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !6346)
!7578 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !6346)
!7579 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !6346)
!7580 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !6346)
!7581 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !6346)
!7582 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !6346)
!7583 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !6346)
!7584 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !6346)
!7585 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !6346)
!7586 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !6346)
!7587 = !DILocation(line: 556, column: 23, scope: !6347)
!7588 = !DILocation(line: 557, column: 55, scope: !6347)
!7589 = !DILocation(line: 557, column: 39, scope: !6347)
!7590 = !DILocation(line: 557, column: 45, scope: !6347)
!7591 = !DILocation(line: 558, column: 51, scope: !6347)
!7592 = !DILocation(line: 558, column: 39, scope: !6347)
!7593 = !DILocation(line: 557, column: 58, scope: !6347)
!7594 = !DILocation(line: 558, column: 62, scope: !6347)
!7595 = !DILocation(line: 557, column: 33, scope: !6347)
!7596 = !DILocation(line: 557, column: 17, scope: !6347)
!7597 = !DILocation(line: 557, column: 23, scope: !6347)
!7598 = !DILocation(line: 557, column: 36, scope: !6347)
!7599 = !DILocation(line: 559, column: 13, scope: !6347)
!7600 = !DILocation(line: 555, column: 53, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !6348, file: !904, discriminator: 2)
!7602 = !DILocation(line: 555, column: 13, scope: !7601)
!7603 = distinct !{!7603, !7604}
!7604 = !DILocation(line: 555, column: 13, scope: !6350)
!7605 = !DILocation(line: 561, column: 9, scope: !6306)
!7606 = !DILocation(line: 563, column: 13, scope: !6305)
!7607 = !DILocation(line: 563, column: 13, scope: !6306)
!7608 = !DILocation(line: 565, column: 20, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !904, line: 565, column: 13)
!7610 = distinct !DILexicalBlock(scope: !6305, file: !904, line: 563, column: 21)
!7611 = !DILocation(line: 565, column: 18, scope: !7609)
!7612 = !DILocation(line: 565, column: 25, scope: !7613)
!7613 = !DILexicalBlockFile(scope: !7614, file: !904, discriminator: 1)
!7614 = distinct !DILexicalBlock(scope: !7609, file: !904, line: 565, column: 13)
!7615 = !DILocation(line: 565, column: 29, scope: !7613)
!7616 = !DILocation(line: 565, column: 34, scope: !7613)
!7617 = !DILocation(line: 565, column: 27, scope: !7613)
!7618 = !DILocation(line: 565, column: 13, scope: !7613)
!7619 = !DILocation(line: 566, column: 58, scope: !7614)
!7620 = !DILocation(line: 566, column: 38, scope: !7614)
!7621 = !DILocation(line: 566, column: 48, scope: !7614)
!7622 = !DILocation(line: 566, column: 33, scope: !7614)
!7623 = !DILocation(line: 566, column: 17, scope: !7614)
!7624 = !DILocation(line: 566, column: 23, scope: !7614)
!7625 = !DILocation(line: 566, column: 36, scope: !7614)
!7626 = !DILocation(line: 565, column: 53, scope: !7627)
!7627 = !DILexicalBlockFile(scope: !7614, file: !904, discriminator: 2)
!7628 = !DILocation(line: 565, column: 13, scope: !7627)
!7629 = distinct !{!7629, !7630}
!7630 = !DILocation(line: 565, column: 13, scope: !7610)
!7631 = !DILocation(line: 567, column: 9, scope: !7610)
!7632 = !DILocation(line: 568, column: 35, scope: !6304)
!7633 = !DILocation(line: 568, column: 26, scope: !6304)
!7634 = !DILocation(line: 568, column: 24, scope: !6304)
!7635 = !DILocation(line: 569, column: 32, scope: !6304)
!7636 = !DILocation(line: 569, column: 23, scope: !6304)
!7637 = !DILocation(line: 569, column: 21, scope: !6304)
!7638 = !DILocation(line: 570, column: 36, scope: !6304)
!7639 = !DILocation(line: 570, column: 24, scope: !6304)
!7640 = !DILocation(line: 570, column: 21, scope: !6304)
!7641 = !DILocation(line: 572, column: 17, scope: !6303)
!7642 = !DILocation(line: 572, column: 28, scope: !6303)
!7643 = !DILocation(line: 572, column: 17, scope: !6304)
!7644 = !DILocation(line: 573, column: 40, scope: !6328)
!7645 = !DILocation(line: 573, column: 48, scope: !6328)
!7646 = !DILocation(line: 573, column: 28, scope: !6328)
!7647 = !DILocation(line: 573, column: 25, scope: !6328)
!7648 = !DILocation(line: 575, column: 39, scope: !6328)
!7649 = !DILocation(line: 575, column: 29, scope: !6328)
!7650 = !DILocation(line: 575, column: 27, scope: !6328)
!7651 = !DILocation(line: 575, column: 64, scope: !6328)
!7652 = !DILocation(line: 575, column: 104, scope: !6328)
!7653 = !DILocation(line: 575, column: 94, scope: !7654)
!7654 = !DILexicalBlockFile(scope: !6328, file: !904, discriminator: 1)
!7655 = !DILocation(line: 575, column: 76, scope: !6328)
!7656 = !DILocation(line: 575, column: 118, scope: !6328)
!7657 = !DILocation(line: 575, column: 124, scope: !6328)
!7658 = !DILocation(line: 575, column: 117, scope: !6328)
!7659 = !DILocation(line: 575, column: 137, scope: !6328)
!7660 = !DILocation(line: 575, column: 142, scope: !6328)
!7661 = !DILocation(line: 575, column: 48, scope: !7662)
!7662 = !DILexicalBlockFile(scope: !6328, file: !904, discriminator: 2)
!7663 = !DILocation(line: 577, column: 34, scope: !6328)
!7664 = !DILocation(line: 577, column: 25, scope: !6328)
!7665 = !DILocation(line: 577, column: 41, scope: !6328)
!7666 = !DILocation(line: 577, column: 47, scope: !6328)
!7667 = !DILocation(line: 577, column: 22, scope: !6328)
!7668 = !DILocation(line: 578, column: 39, scope: !6328)
!7669 = !DILocation(line: 578, column: 45, scope: !6328)
!7670 = !DILocation(line: 578, column: 60, scope: !6328)
!7671 = !DILocation(line: 578, column: 58, scope: !6328)
!7672 = !DILocation(line: 578, column: 66, scope: !6328)
!7673 = !DILocation(line: 578, column: 17, scope: !6328)
!7674 = !DILocation(line: 578, column: 23, scope: !6328)
!7675 = !DILocation(line: 578, column: 36, scope: !6328)
!7676 = !DILocation(line: 580, column: 24, scope: !6327)
!7677 = !DILocation(line: 580, column: 22, scope: !6327)
!7678 = !DILocation(line: 580, column: 29, scope: !7679)
!7679 = !DILexicalBlockFile(scope: !6326, file: !904, discriminator: 1)
!7680 = !DILocation(line: 580, column: 33, scope: !7679)
!7681 = !DILocation(line: 580, column: 38, scope: !7679)
!7682 = !DILocation(line: 580, column: 31, scope: !7679)
!7683 = !DILocation(line: 580, column: 17, scope: !7679)
!7684 = !DILocation(line: 581, column: 38, scope: !6325)
!7685 = !DILocation(line: 581, column: 42, scope: !6325)
!7686 = !DILocation(line: 581, column: 51, scope: !6325)
!7687 = !DILocation(line: 581, column: 58, scope: !6325)
!7688 = !DILocation(line: 581, column: 67, scope: !6325)
!7689 = !DILocation(line: 581, column: 29, scope: !6325)
!7690 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !6324)
!7691 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !6324)
!7692 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !6324)
!7693 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !6324)
!7694 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !6324)
!7695 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !6324)
!7696 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !6324)
!7697 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !6324)
!7698 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !6324)
!7699 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !6324)
!7700 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6324)
!7701 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6332)
!7702 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6332)
!7703 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6332)
!7704 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6332)
!7705 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6332)
!7706 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6332)
!7707 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6332)
!7708 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6332)
!7709 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6332)
!7710 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6332)
!7711 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6332)
!7712 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6332)
!7713 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6332)
!7714 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6332)
!7715 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6332)
!7716 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6332)
!7717 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6332)
!7718 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6332)
!7719 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !6324)
!7720 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !6324)
!7721 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !6324)
!7722 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !6324)
!7723 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !6324)
!7724 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !6324)
!7725 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !6324)
!7726 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !6324)
!7727 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !6324)
!7728 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !6324)
!7729 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !6324)
!7730 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !6324)
!7731 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !6324)
!7732 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !6324)
!7733 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !6324)
!7734 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !6324)
!7735 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !6324)
!7736 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !6324)
!7737 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !6324)
!7738 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !6324)
!7739 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !6324)
!7740 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !6324)
!7741 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !6324)
!7742 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !6324)
!7743 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !6324)
!7744 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !6324)
!7745 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !6324)
!7746 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !6324)
!7747 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !6324)
!7748 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !6324)
!7749 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !6324)
!7750 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !6324)
!7751 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !6324)
!7752 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !6324)
!7753 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !6324)
!7754 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !6324)
!7755 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !6324)
!7756 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !6324)
!7757 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !6324)
!7758 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !6324)
!7759 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6324)
!7760 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6330)
!7761 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6330)
!7762 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6330)
!7763 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6330)
!7764 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6330)
!7765 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6330)
!7766 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6330)
!7767 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6330)
!7768 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6330)
!7769 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6330)
!7770 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6330)
!7771 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6330)
!7772 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6330)
!7773 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6330)
!7774 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6330)
!7775 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6330)
!7776 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6330)
!7777 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6330)
!7778 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !6324)
!7779 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !6324)
!7780 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !6324)
!7781 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !6324)
!7782 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !6324)
!7783 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !6324)
!7784 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !6324)
!7785 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !6324)
!7786 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !6324)
!7787 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !6324)
!7788 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !6324)
!7789 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !6324)
!7790 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !6324)
!7791 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !6324)
!7792 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !6324)
!7793 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !6324)
!7794 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !6324)
!7795 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !6324)
!7796 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !6324)
!7797 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !6324)
!7798 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !6324)
!7799 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !6324)
!7800 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !6324)
!7801 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !6324)
!7802 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !6324)
!7803 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !6324)
!7804 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !6324)
!7805 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !6324)
!7806 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !6324)
!7807 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !6324)
!7808 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !6324)
!7809 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !6324)
!7810 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !6324)
!7811 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !6324)
!7812 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !6324)
!7813 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !6324)
!7814 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !6324)
!7815 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !6324)
!7816 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !6324)
!7817 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !6324)
!7818 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !6324)
!7819 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !6324)
!7820 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !6324)
!7821 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !6324)
!7822 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !6324)
!7823 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6324)
!7824 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6323)
!7825 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6323)
!7826 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6323)
!7827 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6323)
!7828 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6323)
!7829 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6323)
!7830 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6323)
!7831 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6323)
!7832 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6323)
!7833 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6323)
!7834 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6323)
!7835 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6323)
!7836 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6323)
!7837 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6323)
!7838 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6323)
!7839 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6323)
!7840 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6323)
!7841 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6323)
!7842 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !6324)
!7843 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !6324)
!7844 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !6324)
!7845 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !6324)
!7846 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !6324)
!7847 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !6324)
!7848 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !6324)
!7849 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !6324)
!7850 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !6324)
!7851 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !6324)
!7852 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !6324)
!7853 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !6324)
!7854 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !6324)
!7855 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !6324)
!7856 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !6324)
!7857 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !6324)
!7858 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !6324)
!7859 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !6324)
!7860 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !6324)
!7861 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !6324)
!7862 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !6324)
!7863 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !6324)
!7864 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !6324)
!7865 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !6324)
!7866 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !6324)
!7867 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !6324)
!7868 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !6324)
!7869 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !6324)
!7870 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !6324)
!7871 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !6324)
!7872 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !6324)
!7873 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !6324)
!7874 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !6324)
!7875 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !6324)
!7876 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !6324)
!7877 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !6324)
!7878 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !6324)
!7879 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !6324)
!7880 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !6324)
!7881 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !6324)
!7882 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !6324)
!7883 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !6324)
!7884 = !DILocation(line: 581, column: 27, scope: !6325)
!7885 = !DILocation(line: 582, column: 29, scope: !6325)
!7886 = !DILocation(line: 582, column: 48, scope: !6325)
!7887 = !DILocation(line: 582, column: 36, scope: !6325)
!7888 = !DILocation(line: 582, column: 34, scope: !6325)
!7889 = !DILocation(line: 582, column: 59, scope: !6325)
!7890 = !DILocation(line: 582, column: 26, scope: !6325)
!7891 = !DILocation(line: 583, column: 43, scope: !6325)
!7892 = !DILocation(line: 583, column: 66, scope: !6325)
!7893 = !DILocation(line: 583, column: 50, scope: !6325)
!7894 = !DILocation(line: 583, column: 56, scope: !6325)
!7895 = !DILocation(line: 583, column: 48, scope: !6325)
!7896 = !DILocation(line: 583, column: 70, scope: !6325)
!7897 = !DILocation(line: 583, column: 37, scope: !6325)
!7898 = !DILocation(line: 583, column: 21, scope: !6325)
!7899 = !DILocation(line: 583, column: 27, scope: !6325)
!7900 = !DILocation(line: 583, column: 40, scope: !6325)
!7901 = !DILocation(line: 584, column: 17, scope: !6325)
!7902 = !DILocation(line: 580, column: 57, scope: !7903)
!7903 = !DILexicalBlockFile(scope: !6326, file: !904, discriminator: 2)
!7904 = !DILocation(line: 580, column: 17, scope: !7903)
!7905 = distinct !{!7905, !7906}
!7906 = !DILocation(line: 580, column: 17, scope: !6328)
!7907 = !DILocation(line: 585, column: 13, scope: !6328)
!7908 = !DILocation(line: 587, column: 47, scope: !6302)
!7909 = !DILocation(line: 587, column: 38, scope: !6302)
!7910 = !DILocation(line: 587, column: 17, scope: !6302)
!7911 = !DILocation(line: 587, column: 23, scope: !6302)
!7912 = !DILocation(line: 587, column: 36, scope: !6302)
!7913 = !DILocation(line: 589, column: 24, scope: !6301)
!7914 = !DILocation(line: 589, column: 22, scope: !6301)
!7915 = !DILocation(line: 589, column: 29, scope: !7916)
!7916 = !DILexicalBlockFile(scope: !6300, file: !904, discriminator: 1)
!7917 = !DILocation(line: 589, column: 33, scope: !7916)
!7918 = !DILocation(line: 589, column: 38, scope: !7916)
!7919 = !DILocation(line: 589, column: 31, scope: !7916)
!7920 = !DILocation(line: 589, column: 17, scope: !7916)
!7921 = !DILocation(line: 590, column: 38, scope: !6299)
!7922 = !DILocation(line: 590, column: 42, scope: !6299)
!7923 = !DILocation(line: 590, column: 51, scope: !6299)
!7924 = !DILocation(line: 590, column: 58, scope: !6299)
!7925 = !DILocation(line: 590, column: 67, scope: !6299)
!7926 = !DILocation(line: 590, column: 29, scope: !6299)
!7927 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !6298)
!7928 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !6298)
!7929 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !6298)
!7930 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !6298)
!7931 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !6298)
!7932 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !6298)
!7933 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !6298)
!7934 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !6298)
!7935 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !6298)
!7936 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !6298)
!7937 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !6298)
!7938 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6310)
!7939 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6310)
!7940 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6310)
!7941 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6310)
!7942 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6310)
!7943 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6310)
!7944 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6310)
!7945 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6310)
!7946 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6310)
!7947 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6310)
!7948 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6310)
!7949 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6310)
!7950 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6310)
!7951 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6310)
!7952 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6310)
!7953 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6310)
!7954 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6310)
!7955 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6310)
!7956 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !6298)
!7957 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !6298)
!7958 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !6298)
!7959 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !6298)
!7960 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !6298)
!7961 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !6298)
!7962 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !6298)
!7963 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !6298)
!7964 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !6298)
!7965 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !6298)
!7966 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !6298)
!7967 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !6298)
!7968 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !6298)
!7969 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !6298)
!7970 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !6298)
!7971 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !6298)
!7972 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !6298)
!7973 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !6298)
!7974 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !6298)
!7975 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !6298)
!7976 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !6298)
!7977 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !6298)
!7978 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !6298)
!7979 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !6298)
!7980 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !6298)
!7981 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !6298)
!7982 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !6298)
!7983 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !6298)
!7984 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !6298)
!7985 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !6298)
!7986 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !6298)
!7987 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !6298)
!7988 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !6298)
!7989 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !6298)
!7990 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !6298)
!7991 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !6298)
!7992 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !6298)
!7993 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !6298)
!7994 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !6298)
!7995 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !6298)
!7996 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !6298)
!7997 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6308)
!7998 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6308)
!7999 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6308)
!8000 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6308)
!8001 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6308)
!8002 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6308)
!8003 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6308)
!8004 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6308)
!8005 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6308)
!8006 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6308)
!8007 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6308)
!8008 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6308)
!8009 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6308)
!8010 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6308)
!8011 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6308)
!8012 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6308)
!8013 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6308)
!8014 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6308)
!8015 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !6298)
!8016 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !6298)
!8017 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !6298)
!8018 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !6298)
!8019 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !6298)
!8020 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !6298)
!8021 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !6298)
!8022 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !6298)
!8023 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !6298)
!8024 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !6298)
!8025 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !6298)
!8026 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !6298)
!8027 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !6298)
!8028 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !6298)
!8029 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !6298)
!8030 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !6298)
!8031 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !6298)
!8032 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !6298)
!8033 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !6298)
!8034 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !6298)
!8035 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !6298)
!8036 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !6298)
!8037 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !6298)
!8038 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !6298)
!8039 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !6298)
!8040 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !6298)
!8041 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !6298)
!8042 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !6298)
!8043 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !6298)
!8044 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !6298)
!8045 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !6298)
!8046 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !6298)
!8047 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !6298)
!8048 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !6298)
!8049 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !6298)
!8050 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !6298)
!8051 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !6298)
!8052 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !6298)
!8053 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !6298)
!8054 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !6298)
!8055 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !6298)
!8056 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !6298)
!8057 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !6298)
!8058 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !6298)
!8059 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !6298)
!8060 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !6298)
!8061 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !6297)
!8062 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !6297)
!8063 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !6297)
!8064 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !6297)
!8065 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !6297)
!8066 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !6297)
!8067 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !6297)
!8068 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !6297)
!8069 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !6297)
!8070 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !6297)
!8071 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !6297)
!8072 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !6297)
!8073 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !6297)
!8074 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !6297)
!8075 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !6297)
!8076 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !6297)
!8077 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !6297)
!8078 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !6297)
!8079 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !6298)
!8080 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !6298)
!8081 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !6298)
!8082 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !6298)
!8083 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !6298)
!8084 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !6298)
!8085 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !6298)
!8086 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !6298)
!8087 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !6298)
!8088 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !6298)
!8089 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !6298)
!8090 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !6298)
!8091 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !6298)
!8092 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !6298)
!8093 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !6298)
!8094 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !6298)
!8095 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !6298)
!8096 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !6298)
!8097 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !6298)
!8098 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !6298)
!8099 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !6298)
!8100 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !6298)
!8101 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !6298)
!8102 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !6298)
!8103 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !6298)
!8104 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !6298)
!8105 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !6298)
!8106 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !6298)
!8107 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !6298)
!8108 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !6298)
!8109 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !6298)
!8110 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !6298)
!8111 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !6298)
!8112 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !6298)
!8113 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !6298)
!8114 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !6298)
!8115 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !6298)
!8116 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !6298)
!8117 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !6298)
!8118 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !6298)
!8119 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !6298)
!8120 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !6298)
!8121 = !DILocation(line: 590, column: 27, scope: !6299)
!8122 = !DILocation(line: 591, column: 59, scope: !6299)
!8123 = !DILocation(line: 591, column: 61, scope: !6299)
!8124 = !DILocation(line: 591, column: 43, scope: !6299)
!8125 = !DILocation(line: 591, column: 49, scope: !6299)
!8126 = !DILocation(line: 591, column: 68, scope: !6299)
!8127 = !DILocation(line: 591, column: 66, scope: !6299)
!8128 = !DILocation(line: 591, column: 75, scope: !6299)
!8129 = !DILocation(line: 591, column: 37, scope: !6299)
!8130 = !DILocation(line: 591, column: 21, scope: !6299)
!8131 = !DILocation(line: 591, column: 27, scope: !6299)
!8132 = !DILocation(line: 591, column: 40, scope: !6299)
!8133 = !DILocation(line: 592, column: 17, scope: !6299)
!8134 = !DILocation(line: 589, column: 57, scope: !8135)
!8135 = !DILexicalBlockFile(scope: !6300, file: !904, discriminator: 2)
!8136 = !DILocation(line: 589, column: 17, scope: !8135)
!8137 = distinct !{!8137, !8138}
!8138 = !DILocation(line: 589, column: 17, scope: !6302)
!8139 = !DILocation(line: 595, column: 9, scope: !6306)
!8140 = !DILocation(line: 598, column: 9, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !6295, file: !904, line: 598, column: 9)
!8142 = !DILocation(line: 598, column: 20, scope: !8141)
!8143 = !DILocation(line: 598, column: 23, scope: !8144)
!8144 = !DILexicalBlockFile(scope: !8141, file: !904, discriminator: 1)
!8145 = !DILocation(line: 598, column: 34, scope: !8144)
!8146 = !DILocation(line: 598, column: 9, scope: !8144)
!8147 = !DILocation(line: 599, column: 36, scope: !8141)
!8148 = !DILocation(line: 599, column: 41, scope: !8141)
!8149 = !DILocation(line: 599, column: 47, scope: !8141)
!8150 = !DILocation(line: 599, column: 59, scope: !8141)
!8151 = !DILocation(line: 599, column: 16, scope: !8141)
!8152 = !DILocation(line: 599, column: 9, scope: !8141)
!8153 = !DILocation(line: 601, column: 5, scope: !6295)
!8154 = !DILocation(line: 602, column: 1, scope: !6295)
!8155 = distinct !DISubprogram(name: "sign_extend", scope: !8156, file: !8156, line: 130, type: !8157, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!8156 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8157 = !DISubroutineType(types: !8158)
!8158 = !{!888, !888, !889}
!8159 = !DILocalVariable(name: "val", arg: 1, scope: !8155, file: !8156, line: 130, type: !888)
!8160 = !DILocation(line: 130, column: 58, scope: !8155)
!8161 = !DILocalVariable(name: "bits", arg: 2, scope: !8155, file: !8156, line: 130, type: !889)
!8162 = !DILocation(line: 130, column: 72, scope: !8155)
!8163 = !DILocalVariable(name: "shift", scope: !8155, file: !8156, line: 132, type: !889)
!8164 = !DILocation(line: 132, column: 14, scope: !8155)
!8165 = !DILocation(line: 132, column: 40, scope: !8155)
!8166 = !DILocation(line: 132, column: 38, scope: !8155)
!8167 = !DILocation(line: 132, column: 22, scope: !8155)
!8168 = !DILocalVariable(name: "v", scope: !8155, file: !8156, line: 133, type: !8169)
!8169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8155, file: !8156, line: 133, size: 32, align: 32, elements: !8170)
!8170 = !{!8171, !8172}
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !8169, file: !8156, line: 133, baseType: !889, size: 32, align: 32)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !8169, file: !8156, line: 133, baseType: !888, size: 32, align: 32)
!8173 = !DILocation(line: 133, column: 34, scope: !8155)
!8174 = !DILocation(line: 133, column: 38, scope: !8155)
!8175 = !DILocation(line: 133, column: 51, scope: !8155)
!8176 = !DILocation(line: 133, column: 58, scope: !8155)
!8177 = !DILocation(line: 133, column: 55, scope: !8155)
!8178 = !DILocation(line: 134, column: 14, scope: !8155)
!8179 = !DILocation(line: 134, column: 19, scope: !8155)
!8180 = !DILocation(line: 134, column: 16, scope: !8155)
!8181 = !DILocation(line: 134, column: 5, scope: !8155)
!8182 = distinct !DISubprogram(name: "subtract_sf_weights", scope: !904, file: !904, line: 281, type: !6229, isLocal: true, isDefinition: true, scopeLine: 284, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!8183 = !DILocalVariable(name: "ctx", arg: 1, scope: !8182, file: !904, line: 281, type: !1664)
!8184 = !DILocation(line: 281, column: 52, scope: !8182)
!8185 = !DILocalVariable(name: "chan", arg: 2, scope: !8182, file: !904, line: 282, type: !2870)
!8186 = !DILocation(line: 282, column: 51, scope: !8182)
!8187 = !DILocalVariable(name: "wtab_idx", arg: 3, scope: !8182, file: !904, line: 282, type: !888)
!8188 = !DILocation(line: 282, column: 61, scope: !8182)
!8189 = !DILocalVariable(name: "avctx", arg: 4, scope: !8182, file: !904, line: 283, type: !1782)
!8190 = !DILocation(line: 283, column: 48, scope: !8182)
!8191 = !DILocalVariable(name: "i", scope: !8182, file: !904, line: 285, type: !888)
!8192 = !DILocation(line: 285, column: 9, scope: !8182)
!8193 = !DILocalVariable(name: "weights_tab", scope: !8182, file: !904, line: 286, type: !6181)
!8194 = !DILocation(line: 286, column: 19, scope: !8182)
!8195 = !DILocation(line: 286, column: 53, scope: !8182)
!8196 = !DILocation(line: 286, column: 62, scope: !8182)
!8197 = !DILocation(line: 286, column: 34, scope: !8182)
!8198 = !DILocation(line: 288, column: 12, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8182, file: !904, line: 288, column: 5)
!8200 = !DILocation(line: 288, column: 10, scope: !8199)
!8201 = !DILocation(line: 288, column: 17, scope: !8202)
!8202 = !DILexicalBlockFile(scope: !8203, file: !904, discriminator: 1)
!8203 = distinct !DILexicalBlock(scope: !8199, file: !904, line: 288, column: 5)
!8204 = !DILocation(line: 288, column: 21, scope: !8202)
!8205 = !DILocation(line: 288, column: 26, scope: !8202)
!8206 = !DILocation(line: 288, column: 19, scope: !8202)
!8207 = !DILocation(line: 288, column: 5, scope: !8202)
!8208 = !DILocation(line: 289, column: 43, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8203, file: !904, line: 288, column: 49)
!8210 = !DILocation(line: 289, column: 31, scope: !8209)
!8211 = !DILocation(line: 289, column: 25, scope: !8209)
!8212 = !DILocation(line: 289, column: 9, scope: !8209)
!8213 = !DILocation(line: 289, column: 15, scope: !8209)
!8214 = !DILocation(line: 289, column: 28, scope: !8209)
!8215 = !DILocation(line: 290, column: 29, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8209, file: !904, line: 290, column: 13)
!8217 = !DILocation(line: 290, column: 13, scope: !8216)
!8218 = !DILocation(line: 290, column: 19, scope: !8216)
!8219 = !DILocation(line: 290, column: 32, scope: !8216)
!8220 = !DILocation(line: 290, column: 36, scope: !8216)
!8221 = !DILocation(line: 290, column: 55, scope: !8222)
!8222 = !DILexicalBlockFile(scope: !8216, file: !904, discriminator: 1)
!8223 = !DILocation(line: 290, column: 39, scope: !8222)
!8224 = !DILocation(line: 290, column: 45, scope: !8222)
!8225 = !DILocation(line: 290, column: 58, scope: !8222)
!8226 = !DILocation(line: 290, column: 13, scope: !8222)
!8227 = !DILocation(line: 291, column: 20, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8216, file: !904, line: 290, column: 64)
!8229 = !DILocation(line: 293, column: 20, scope: !8228)
!8230 = !DILocation(line: 293, column: 39, scope: !8228)
!8231 = !DILocation(line: 293, column: 23, scope: !8228)
!8232 = !DILocation(line: 293, column: 29, scope: !8228)
!8233 = !DILocation(line: 291, column: 13, scope: !8228)
!8234 = !DILocation(line: 294, column: 13, scope: !8228)
!8235 = !DILocation(line: 296, column: 5, scope: !8209)
!8236 = !DILocation(line: 288, column: 45, scope: !8237)
!8237 = !DILexicalBlockFile(scope: !8203, file: !904, discriminator: 2)
!8238 = !DILocation(line: 288, column: 5, scope: !8237)
!8239 = distinct !{!8239, !8240}
!8240 = !DILocation(line: 288, column: 5, scope: !8182)
!8241 = !DILocation(line: 298, column: 5, scope: !8182)
!8242 = !DILocation(line: 299, column: 1, scope: !8182)
!8243 = distinct !DISubprogram(name: "decode_channel_code_tab", scope: !904, file: !904, line: 726, type: !1652, isLocal: true, isDefinition: true, scopeLine: 728, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!8244 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8245)
!8245 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8246)
!8246 = distinct !DILocation(line: 762, column: 203, scope: !8247)
!8247 = !DILexicalBlockFile(scope: !8248, file: !904, discriminator: 5)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !904, line: 762, column: 152)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !904, line: 762, column: 131)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !904, line: 762, column: 125)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !904, line: 762, column: 94)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !904, line: 762, column: 94)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !904, line: 759, column: 21)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 759, column: 13)
!8255 = distinct !DILexicalBlock(scope: !8243, file: !904, line: 737, column: 30)
!8256 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8257)
!8257 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8246)
!8258 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8259)
!8259 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8246)
!8260 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !8246)
!8261 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !8246)
!8262 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !8246)
!8263 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !8246)
!8264 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !8246)
!8265 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !8246)
!8266 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !8246)
!8267 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !8246)
!8268 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !8246)
!8269 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !8246)
!8270 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !8246)
!8271 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8272)
!8272 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8273)
!8273 = distinct !DILocation(line: 756, column: 236, scope: !8274)
!8274 = !DILexicalBlockFile(scope: !8275, file: !904, discriminator: 7)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !904, line: 756, column: 148)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !904, line: 756, column: 127)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !904, line: 756, column: 121)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !904, line: 756, column: 90)
!8279 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 756, column: 90)
!8280 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8281)
!8281 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8273)
!8282 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8283)
!8283 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8273)
!8284 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !8273)
!8285 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !8273)
!8286 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !8273)
!8287 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !8273)
!8288 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !8273)
!8289 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !8273)
!8290 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !8273)
!8291 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !8273)
!8292 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !8273)
!8293 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !8273)
!8294 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !8273)
!8295 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8296)
!8296 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8297)
!8297 = distinct !DILocation(line: 756, column: 179, scope: !8298)
!8298 = !DILexicalBlockFile(scope: !8275, file: !904, discriminator: 6)
!8299 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8300)
!8300 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8297)
!8301 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8302)
!8302 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8297)
!8303 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !8297)
!8304 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !8297)
!8305 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !8297)
!8306 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !8297)
!8307 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !8297)
!8308 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !8297)
!8309 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !8297)
!8310 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !8297)
!8311 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !8297)
!8312 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !8297)
!8313 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !8297)
!8314 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8315)
!8315 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8316)
!8316 = distinct !DILocation(line: 745, column: 172, scope: !8317)
!8317 = !DILexicalBlockFile(scope: !8318, file: !904, discriminator: 5)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !904, line: 745, column: 148)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !904, line: 745, column: 127)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !904, line: 745, column: 121)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !904, line: 745, column: 90)
!8322 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 745, column: 90)
!8323 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8324)
!8324 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8316)
!8325 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !8326)
!8326 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8316)
!8327 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !8316)
!8328 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !8316)
!8329 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !8316)
!8330 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !8316)
!8331 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !8316)
!8332 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !8316)
!8333 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !8316)
!8334 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !8316)
!8335 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !8316)
!8336 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !8316)
!8337 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !8316)
!8338 = !DILocalVariable(name: "gb", arg: 1, scope: !8243, file: !904, line: 726, type: !1654)
!8339 = !DILocation(line: 726, column: 51, scope: !8243)
!8340 = !DILocalVariable(name: "ctx", arg: 2, scope: !8243, file: !904, line: 726, type: !1664)
!8341 = !DILocation(line: 726, column: 75, scope: !8243)
!8342 = !DILocalVariable(name: "ch_num", arg: 3, scope: !8243, file: !904, line: 727, type: !888)
!8343 = !DILocation(line: 727, column: 40, scope: !8243)
!8344 = !DILocalVariable(name: "avctx", arg: 4, scope: !8243, file: !904, line: 727, type: !1782)
!8345 = !DILocation(line: 727, column: 64, scope: !8243)
!8346 = !DILocalVariable(name: "i", scope: !8243, file: !904, line: 729, type: !888)
!8347 = !DILocation(line: 729, column: 9, scope: !8243)
!8348 = !DILocalVariable(name: "num_vals", scope: !8243, file: !904, line: 729, type: !888)
!8349 = !DILocation(line: 729, column: 12, scope: !8243)
!8350 = !DILocalVariable(name: "num_bits", scope: !8243, file: !904, line: 729, type: !888)
!8351 = !DILocation(line: 729, column: 22, scope: !8243)
!8352 = !DILocalVariable(name: "pred", scope: !8243, file: !904, line: 729, type: !888)
!8353 = !DILocation(line: 729, column: 32, scope: !8243)
!8354 = !DILocalVariable(name: "mask", scope: !8243, file: !904, line: 730, type: !888)
!8355 = !DILocation(line: 730, column: 9, scope: !8243)
!8356 = !DILocation(line: 730, column: 16, scope: !8243)
!8357 = !DILocation(line: 730, column: 21, scope: !8243)
!8358 = !DILocalVariable(name: "vlc_tab", scope: !8243, file: !904, line: 731, type: !1536)
!8359 = !DILocation(line: 731, column: 10, scope: !8243)
!8360 = !DILocalVariable(name: "delta_vlc", scope: !8243, file: !904, line: 731, type: !1536)
!8361 = !DILocation(line: 731, column: 20, scope: !8243)
!8362 = !DILocalVariable(name: "chan", scope: !8243, file: !904, line: 732, type: !2870)
!8363 = !DILocation(line: 732, column: 24, scope: !8243)
!8364 = !DILocation(line: 732, column: 46, scope: !8243)
!8365 = !DILocation(line: 732, column: 32, scope: !8243)
!8366 = !DILocation(line: 732, column: 37, scope: !8243)
!8367 = !DILocalVariable(name: "ref_chan", scope: !8243, file: !904, line: 733, type: !2870)
!8368 = !DILocation(line: 733, column: 24, scope: !8243)
!8369 = !DILocation(line: 733, column: 36, scope: !8243)
!8370 = !DILocation(line: 733, column: 41, scope: !8243)
!8371 = !DILocation(line: 735, column: 34, scope: !8243)
!8372 = !DILocation(line: 735, column: 24, scope: !8243)
!8373 = !DILocation(line: 735, column: 5, scope: !8243)
!8374 = !DILocation(line: 735, column: 11, scope: !8243)
!8375 = !DILocation(line: 735, column: 22, scope: !8243)
!8376 = !DILocation(line: 737, column: 22, scope: !8243)
!8377 = !DILocation(line: 737, column: 13, scope: !8243)
!8378 = !DILocation(line: 737, column: 5, scope: !8243)
!8379 = !DILocation(line: 739, column: 20, scope: !8255)
!8380 = !DILocation(line: 739, column: 25, scope: !8255)
!8381 = !DILocation(line: 739, column: 40, scope: !8255)
!8382 = !DILocation(line: 739, column: 18, scope: !8255)
!8383 = !DILocation(line: 740, column: 38, scope: !8255)
!8384 = !DILocation(line: 740, column: 42, scope: !8255)
!8385 = !DILocation(line: 740, column: 47, scope: !8255)
!8386 = !DILocation(line: 740, column: 20, scope: !8255)
!8387 = !DILocation(line: 740, column: 18, scope: !8255)
!8388 = !DILocation(line: 740, column: 59, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 740, column: 59)
!8390 = !DILocation(line: 740, column: 68, scope: !8389)
!8391 = !DILocation(line: 740, column: 59, scope: !8255)
!8392 = !DILocation(line: 740, column: 80, scope: !8393)
!8393 = !DILexicalBlockFile(scope: !8389, file: !904, discriminator: 1)
!8394 = !DILocation(line: 740, column: 73, scope: !8393)
!8395 = !DILocation(line: 740, column: 97, scope: !8396)
!8396 = !DILexicalBlockFile(scope: !8397, file: !904, discriminator: 2)
!8397 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 740, column: 90)
!8398 = !DILocation(line: 740, column: 95, scope: !8396)
!8399 = !DILocation(line: 740, column: 102, scope: !8400)
!8400 = !DILexicalBlockFile(scope: !8401, file: !904, discriminator: 3)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !904, line: 740, column: 90)
!8402 = !DILocation(line: 740, column: 106, scope: !8400)
!8403 = !DILocation(line: 740, column: 104, scope: !8400)
!8404 = !DILocation(line: 740, column: 90, scope: !8400)
!8405 = !DILocation(line: 740, column: 144, scope: !8406)
!8406 = !DILexicalBlockFile(scope: !8407, file: !904, discriminator: 4)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !904, line: 740, column: 127)
!8408 = distinct !DILexicalBlock(scope: !8401, file: !904, line: 740, column: 121)
!8409 = !DILocation(line: 740, column: 127, scope: !8406)
!8410 = !DILocation(line: 740, column: 133, scope: !8406)
!8411 = !DILocation(line: 740, column: 181, scope: !8412)
!8412 = !DILexicalBlockFile(scope: !8413, file: !904, discriminator: 5)
!8413 = distinct !DILexicalBlock(scope: !8407, file: !904, line: 740, column: 148)
!8414 = !DILocation(line: 740, column: 185, scope: !8412)
!8415 = !DILocation(line: 740, column: 172, scope: !8412)
!8416 = !DILocation(line: 740, column: 167, scope: !8412)
!8417 = !DILocation(line: 740, column: 150, scope: !8412)
!8418 = !DILocation(line: 740, column: 156, scope: !8412)
!8419 = !DILocation(line: 740, column: 170, scope: !8412)
!8420 = !DILocation(line: 740, column: 196, scope: !8412)
!8421 = !DILocation(line: 740, column: 207, scope: !8422)
!8422 = !DILexicalBlockFile(scope: !8423, file: !904, discriminator: 6)
!8423 = distinct !DILexicalBlock(scope: !8407, file: !904, line: 740, column: 207)
!8424 = !DILocation(line: 740, column: 214, scope: !8422)
!8425 = !DILocation(line: 740, column: 238, scope: !8426)
!8426 = !DILexicalBlockFile(scope: !8423, file: !904, discriminator: 7)
!8427 = !DILocation(line: 740, column: 217, scope: !8426)
!8428 = !DILocation(line: 740, column: 227, scope: !8426)
!8429 = !DILocation(line: 740, column: 207, scope: !8426)
!8430 = !DILocation(line: 740, column: 274, scope: !8431)
!8431 = !DILexicalBlockFile(scope: !8423, file: !904, discriminator: 8)
!8432 = !DILocation(line: 740, column: 264, scope: !8431)
!8433 = !DILocation(line: 740, column: 259, scope: !8431)
!8434 = !DILocation(line: 740, column: 242, scope: !8431)
!8435 = !DILocation(line: 740, column: 248, scope: !8431)
!8436 = !DILocation(line: 740, column: 262, scope: !8431)
!8437 = !DILocation(line: 740, column: 279, scope: !8438)
!8438 = !DILexicalBlockFile(scope: !8408, file: !904, discriminator: 9)
!8439 = !DILocation(line: 740, column: 117, scope: !8440)
!8440 = !DILexicalBlockFile(scope: !8401, file: !904, discriminator: 10)
!8441 = !DILocation(line: 740, column: 90, scope: !8440)
!8442 = distinct !{!8442, !8443}
!8443 = !DILocation(line: 740, column: 90, scope: !8255)
!8444 = !DILocation(line: 741, column: 9, scope: !8255)
!8445 = !DILocation(line: 743, column: 19, scope: !8255)
!8446 = !DILocation(line: 743, column: 24, scope: !8255)
!8447 = !DILocation(line: 743, column: 17, scope: !8255)
!8448 = !DILocation(line: 745, column: 38, scope: !8255)
!8449 = !DILocation(line: 745, column: 42, scope: !8255)
!8450 = !DILocation(line: 745, column: 47, scope: !8255)
!8451 = !DILocation(line: 745, column: 20, scope: !8255)
!8452 = !DILocation(line: 745, column: 18, scope: !8255)
!8453 = !DILocation(line: 745, column: 59, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 745, column: 59)
!8455 = !DILocation(line: 745, column: 68, scope: !8454)
!8456 = !DILocation(line: 745, column: 59, scope: !8255)
!8457 = !DILocation(line: 745, column: 80, scope: !8458)
!8458 = !DILexicalBlockFile(scope: !8454, file: !904, discriminator: 1)
!8459 = !DILocation(line: 745, column: 73, scope: !8458)
!8460 = !DILocation(line: 745, column: 97, scope: !8461)
!8461 = !DILexicalBlockFile(scope: !8322, file: !904, discriminator: 2)
!8462 = !DILocation(line: 745, column: 95, scope: !8461)
!8463 = !DILocation(line: 745, column: 102, scope: !8464)
!8464 = !DILexicalBlockFile(scope: !8321, file: !904, discriminator: 3)
!8465 = !DILocation(line: 745, column: 106, scope: !8464)
!8466 = !DILocation(line: 745, column: 104, scope: !8464)
!8467 = !DILocation(line: 745, column: 90, scope: !8464)
!8468 = !DILocation(line: 745, column: 144, scope: !8469)
!8469 = !DILexicalBlockFile(scope: !8319, file: !904, discriminator: 4)
!8470 = !DILocation(line: 745, column: 127, scope: !8469)
!8471 = !DILocation(line: 745, column: 133, scope: !8469)
!8472 = !DILocation(line: 745, column: 181, scope: !8317)
!8473 = !DILocation(line: 745, column: 185, scope: !8317)
!8474 = !DILocation(line: 745, column: 194, scope: !8317)
!8475 = !DILocation(line: 745, column: 201, scope: !8317)
!8476 = !DILocation(line: 745, column: 210, scope: !8317)
!8477 = !DILocation(line: 745, column: 172, scope: !8317)
!8478 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !8316)
!8479 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !8316)
!8480 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !8316)
!8481 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !8316)
!8482 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !8316)
!8483 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !8316)
!8484 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !8316)
!8485 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !8316)
!8486 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !8316)
!8487 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !8316)
!8488 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8316)
!8489 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8326)
!8490 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8326)
!8491 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8326)
!8492 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8326)
!8493 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8326)
!8494 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8326)
!8495 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8326)
!8496 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8326)
!8497 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8326)
!8498 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8326)
!8499 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8326)
!8500 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8326)
!8501 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8326)
!8502 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8326)
!8503 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8326)
!8504 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8326)
!8505 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8326)
!8506 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8326)
!8507 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !8316)
!8508 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !8316)
!8509 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !8316)
!8510 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !8316)
!8511 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !8316)
!8512 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !8316)
!8513 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !8316)
!8514 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !8316)
!8515 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !8316)
!8516 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !8316)
!8517 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !8316)
!8518 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !8316)
!8519 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !8316)
!8520 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !8316)
!8521 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !8316)
!8522 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !8316)
!8523 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !8316)
!8524 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !8316)
!8525 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !8316)
!8526 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !8316)
!8527 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !8316)
!8528 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !8316)
!8529 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !8316)
!8530 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !8316)
!8531 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !8316)
!8532 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !8316)
!8533 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !8316)
!8534 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !8316)
!8535 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !8316)
!8536 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !8316)
!8537 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !8316)
!8538 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !8316)
!8539 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !8316)
!8540 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !8316)
!8541 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !8316)
!8542 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !8316)
!8543 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !8316)
!8544 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !8316)
!8545 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !8316)
!8546 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !8316)
!8547 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8316)
!8548 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8324)
!8549 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8324)
!8550 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8324)
!8551 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8324)
!8552 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8324)
!8553 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8324)
!8554 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8324)
!8555 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8324)
!8556 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8324)
!8557 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8324)
!8558 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8324)
!8559 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8324)
!8560 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8324)
!8561 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8324)
!8562 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8324)
!8563 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8324)
!8564 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8324)
!8565 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8324)
!8566 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !8316)
!8567 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !8316)
!8568 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !8316)
!8569 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !8316)
!8570 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !8316)
!8571 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !8316)
!8572 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !8316)
!8573 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !8316)
!8574 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !8316)
!8575 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !8316)
!8576 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !8316)
!8577 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !8316)
!8578 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !8316)
!8579 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !8316)
!8580 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !8316)
!8581 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !8316)
!8582 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !8316)
!8583 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !8316)
!8584 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !8316)
!8585 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !8316)
!8586 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !8316)
!8587 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !8316)
!8588 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !8316)
!8589 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !8316)
!8590 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !8316)
!8591 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !8316)
!8592 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !8316)
!8593 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !8316)
!8594 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !8316)
!8595 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !8316)
!8596 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !8316)
!8597 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !8316)
!8598 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !8316)
!8599 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !8316)
!8600 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !8316)
!8601 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !8316)
!8602 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !8316)
!8603 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !8316)
!8604 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !8316)
!8605 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !8316)
!8606 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !8316)
!8607 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !8316)
!8608 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !8316)
!8609 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !8316)
!8610 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !8316)
!8611 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8316)
!8612 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8315)
!8613 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8315)
!8614 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8315)
!8615 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8315)
!8616 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8315)
!8617 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8315)
!8618 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8315)
!8619 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8315)
!8620 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8315)
!8621 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8315)
!8622 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8315)
!8623 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8315)
!8624 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8315)
!8625 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8315)
!8626 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8315)
!8627 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8315)
!8628 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8315)
!8629 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8315)
!8630 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !8316)
!8631 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !8316)
!8632 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !8316)
!8633 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !8316)
!8634 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !8316)
!8635 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !8316)
!8636 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !8316)
!8637 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !8316)
!8638 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !8316)
!8639 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !8316)
!8640 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !8316)
!8641 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !8316)
!8642 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !8316)
!8643 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !8316)
!8644 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !8316)
!8645 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !8316)
!8646 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !8316)
!8647 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !8316)
!8648 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !8316)
!8649 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !8316)
!8650 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !8316)
!8651 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !8316)
!8652 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !8316)
!8653 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !8316)
!8654 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !8316)
!8655 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !8316)
!8656 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !8316)
!8657 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !8316)
!8658 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !8316)
!8659 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !8316)
!8660 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !8316)
!8661 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !8316)
!8662 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !8316)
!8663 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !8316)
!8664 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !8316)
!8665 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !8316)
!8666 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !8316)
!8667 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !8316)
!8668 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !8316)
!8669 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !8316)
!8670 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !8316)
!8671 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !8316)
!8672 = !DILocation(line: 745, column: 167, scope: !8317)
!8673 = !DILocation(line: 745, column: 150, scope: !8317)
!8674 = !DILocation(line: 745, column: 156, scope: !8317)
!8675 = !DILocation(line: 745, column: 170, scope: !8317)
!8676 = !DILocation(line: 745, column: 220, scope: !8317)
!8677 = !DILocation(line: 745, column: 231, scope: !8678)
!8678 = !DILexicalBlockFile(scope: !8679, file: !904, discriminator: 6)
!8679 = distinct !DILexicalBlock(scope: !8319, file: !904, line: 745, column: 231)
!8680 = !DILocation(line: 745, column: 238, scope: !8678)
!8681 = !DILocation(line: 745, column: 262, scope: !8682)
!8682 = !DILexicalBlockFile(scope: !8679, file: !904, discriminator: 7)
!8683 = !DILocation(line: 745, column: 241, scope: !8682)
!8684 = !DILocation(line: 745, column: 251, scope: !8682)
!8685 = !DILocation(line: 745, column: 231, scope: !8682)
!8686 = !DILocation(line: 745, column: 298, scope: !8687)
!8687 = !DILexicalBlockFile(scope: !8679, file: !904, discriminator: 8)
!8688 = !DILocation(line: 745, column: 288, scope: !8687)
!8689 = !DILocation(line: 745, column: 283, scope: !8687)
!8690 = !DILocation(line: 745, column: 266, scope: !8687)
!8691 = !DILocation(line: 745, column: 272, scope: !8687)
!8692 = !DILocation(line: 745, column: 286, scope: !8687)
!8693 = !DILocation(line: 745, column: 303, scope: !8694)
!8694 = !DILexicalBlockFile(scope: !8320, file: !904, discriminator: 9)
!8695 = !DILocation(line: 745, column: 117, scope: !8696)
!8696 = !DILexicalBlockFile(scope: !8321, file: !904, discriminator: 10)
!8697 = !DILocation(line: 745, column: 90, scope: !8696)
!8698 = distinct !{!8698, !8699}
!8699 = !DILocation(line: 745, column: 90, scope: !8255)
!8700 = !DILocation(line: 746, column: 9, scope: !8255)
!8701 = !DILocation(line: 748, column: 13, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 748, column: 13)
!8703 = !DILocation(line: 748, column: 18, scope: !8702)
!8704 = !DILocation(line: 748, column: 13, scope: !8255)
!8705 = !DILocation(line: 749, column: 21, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !904, line: 748, column: 34)
!8707 = !DILocation(line: 750, column: 23, scope: !8706)
!8708 = !DILocation(line: 751, column: 9, scope: !8706)
!8709 = !DILocation(line: 752, column: 21, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8702, file: !904, line: 751, column: 16)
!8711 = !DILocation(line: 753, column: 23, scope: !8710)
!8712 = !DILocation(line: 755, column: 14, scope: !8255)
!8713 = !DILocation(line: 756, column: 38, scope: !8255)
!8714 = !DILocation(line: 756, column: 42, scope: !8255)
!8715 = !DILocation(line: 756, column: 47, scope: !8255)
!8716 = !DILocation(line: 756, column: 20, scope: !8255)
!8717 = !DILocation(line: 756, column: 18, scope: !8255)
!8718 = !DILocation(line: 756, column: 59, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8255, file: !904, line: 756, column: 59)
!8720 = !DILocation(line: 756, column: 68, scope: !8719)
!8721 = !DILocation(line: 756, column: 59, scope: !8255)
!8722 = !DILocation(line: 756, column: 80, scope: !8723)
!8723 = !DILexicalBlockFile(scope: !8719, file: !904, discriminator: 1)
!8724 = !DILocation(line: 756, column: 73, scope: !8723)
!8725 = !DILocation(line: 756, column: 97, scope: !8726)
!8726 = !DILexicalBlockFile(scope: !8279, file: !904, discriminator: 2)
!8727 = !DILocation(line: 756, column: 95, scope: !8726)
!8728 = !DILocation(line: 756, column: 102, scope: !8729)
!8729 = !DILexicalBlockFile(scope: !8278, file: !904, discriminator: 3)
!8730 = !DILocation(line: 756, column: 106, scope: !8729)
!8731 = !DILocation(line: 756, column: 104, scope: !8729)
!8732 = !DILocation(line: 756, column: 90, scope: !8729)
!8733 = !DILocation(line: 756, column: 144, scope: !8734)
!8734 = !DILexicalBlockFile(scope: !8276, file: !904, discriminator: 4)
!8735 = !DILocation(line: 756, column: 127, scope: !8734)
!8736 = !DILocation(line: 756, column: 133, scope: !8734)
!8737 = !DILocation(line: 756, column: 174, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !8275, file: !904, discriminator: 5)
!8739 = !DILocation(line: 756, column: 172, scope: !8738)
!8740 = !DILocation(line: 756, column: 188, scope: !8298)
!8741 = !DILocation(line: 756, column: 192, scope: !8298)
!8742 = !DILocation(line: 756, column: 201, scope: !8298)
!8743 = !DILocation(line: 756, column: 208, scope: !8298)
!8744 = !DILocation(line: 756, column: 217, scope: !8298)
!8745 = !DILocation(line: 756, column: 179, scope: !8298)
!8746 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !8297)
!8747 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !8297)
!8748 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !8297)
!8749 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !8297)
!8750 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !8297)
!8751 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !8297)
!8752 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !8297)
!8753 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !8297)
!8754 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !8297)
!8755 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !8297)
!8756 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8297)
!8757 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8302)
!8758 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8302)
!8759 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8302)
!8760 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8302)
!8761 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8302)
!8762 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8302)
!8763 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8302)
!8764 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8302)
!8765 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8302)
!8766 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8302)
!8767 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8302)
!8768 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8302)
!8769 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8302)
!8770 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8302)
!8771 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8302)
!8772 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8302)
!8773 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8302)
!8774 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8302)
!8775 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !8297)
!8776 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !8297)
!8777 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !8297)
!8778 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !8297)
!8779 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !8297)
!8780 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !8297)
!8781 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !8297)
!8782 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !8297)
!8783 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !8297)
!8784 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !8297)
!8785 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !8297)
!8786 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !8297)
!8787 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !8297)
!8788 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !8297)
!8789 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !8297)
!8790 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !8297)
!8791 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !8297)
!8792 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !8297)
!8793 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !8297)
!8794 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !8297)
!8795 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !8297)
!8796 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !8297)
!8797 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !8297)
!8798 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !8297)
!8799 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !8297)
!8800 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !8297)
!8801 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !8297)
!8802 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !8297)
!8803 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !8297)
!8804 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !8297)
!8805 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !8297)
!8806 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !8297)
!8807 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !8297)
!8808 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !8297)
!8809 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !8297)
!8810 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !8297)
!8811 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !8297)
!8812 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !8297)
!8813 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !8297)
!8814 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !8297)
!8815 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8297)
!8816 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8300)
!8817 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8300)
!8818 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8300)
!8819 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8300)
!8820 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8300)
!8821 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8300)
!8822 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8300)
!8823 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8300)
!8824 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8300)
!8825 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8300)
!8826 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8300)
!8827 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8300)
!8828 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8300)
!8829 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8300)
!8830 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8300)
!8831 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8300)
!8832 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8300)
!8833 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8300)
!8834 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !8297)
!8835 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !8297)
!8836 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !8297)
!8837 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !8297)
!8838 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !8297)
!8839 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !8297)
!8840 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !8297)
!8841 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !8297)
!8842 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !8297)
!8843 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !8297)
!8844 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !8297)
!8845 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !8297)
!8846 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !8297)
!8847 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !8297)
!8848 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !8297)
!8849 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !8297)
!8850 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !8297)
!8851 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !8297)
!8852 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !8297)
!8853 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !8297)
!8854 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !8297)
!8855 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !8297)
!8856 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !8297)
!8857 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !8297)
!8858 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !8297)
!8859 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !8297)
!8860 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !8297)
!8861 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !8297)
!8862 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !8297)
!8863 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !8297)
!8864 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !8297)
!8865 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !8297)
!8866 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !8297)
!8867 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !8297)
!8868 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !8297)
!8869 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !8297)
!8870 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !8297)
!8871 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !8297)
!8872 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !8297)
!8873 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !8297)
!8874 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !8297)
!8875 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !8297)
!8876 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !8297)
!8877 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !8297)
!8878 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !8297)
!8879 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8297)
!8880 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8296)
!8881 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8296)
!8882 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8296)
!8883 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8296)
!8884 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8296)
!8885 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8296)
!8886 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8296)
!8887 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8296)
!8888 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8296)
!8889 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8296)
!8890 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8296)
!8891 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8296)
!8892 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8296)
!8893 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8296)
!8894 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8296)
!8895 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8296)
!8896 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8296)
!8897 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8296)
!8898 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !8297)
!8899 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !8297)
!8900 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !8297)
!8901 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !8297)
!8902 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !8297)
!8903 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !8297)
!8904 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !8297)
!8905 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !8297)
!8906 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !8297)
!8907 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !8297)
!8908 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !8297)
!8909 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !8297)
!8910 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !8297)
!8911 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !8297)
!8912 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !8297)
!8913 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !8297)
!8914 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !8297)
!8915 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !8297)
!8916 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !8297)
!8917 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !8297)
!8918 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !8297)
!8919 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !8297)
!8920 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !8297)
!8921 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !8297)
!8922 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !8297)
!8923 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !8297)
!8924 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !8297)
!8925 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !8297)
!8926 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !8297)
!8927 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !8297)
!8928 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !8297)
!8929 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !8297)
!8930 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !8297)
!8931 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !8297)
!8932 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !8297)
!8933 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !8297)
!8934 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !8297)
!8935 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !8297)
!8936 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !8297)
!8937 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !8297)
!8938 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !8297)
!8939 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !8297)
!8940 = !DILocation(line: 756, column: 172, scope: !8298)
!8941 = !DILocation(line: 756, column: 229, scope: !8274)
!8942 = !DILocation(line: 756, column: 245, scope: !8274)
!8943 = !DILocation(line: 756, column: 249, scope: !8274)
!8944 = !DILocation(line: 756, column: 260, scope: !8274)
!8945 = !DILocation(line: 756, column: 267, scope: !8274)
!8946 = !DILocation(line: 756, column: 278, scope: !8274)
!8947 = !DILocation(line: 756, column: 236, scope: !8274)
!8948 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !8273)
!8949 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !8273)
!8950 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !8273)
!8951 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !8273)
!8952 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !8273)
!8953 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !8273)
!8954 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !8273)
!8955 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !8273)
!8956 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !8273)
!8957 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !8273)
!8958 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8273)
!8959 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8283)
!8960 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8283)
!8961 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8283)
!8962 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8283)
!8963 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8283)
!8964 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8283)
!8965 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8283)
!8966 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8283)
!8967 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8283)
!8968 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8283)
!8969 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8283)
!8970 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8283)
!8971 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8283)
!8972 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8283)
!8973 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8283)
!8974 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8283)
!8975 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8283)
!8976 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8283)
!8977 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !8273)
!8978 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !8273)
!8979 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !8273)
!8980 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !8273)
!8981 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !8273)
!8982 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !8273)
!8983 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !8273)
!8984 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !8273)
!8985 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !8273)
!8986 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !8273)
!8987 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !8273)
!8988 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !8273)
!8989 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !8273)
!8990 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !8273)
!8991 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !8273)
!8992 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !8273)
!8993 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !8273)
!8994 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !8273)
!8995 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !8273)
!8996 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !8273)
!8997 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !8273)
!8998 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !8273)
!8999 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !8273)
!9000 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !8273)
!9001 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !8273)
!9002 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !8273)
!9003 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !8273)
!9004 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !8273)
!9005 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !8273)
!9006 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !8273)
!9007 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !8273)
!9008 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !8273)
!9009 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !8273)
!9010 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !8273)
!9011 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !8273)
!9012 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !8273)
!9013 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !8273)
!9014 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !8273)
!9015 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !8273)
!9016 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !8273)
!9017 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8273)
!9018 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8281)
!9019 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8281)
!9020 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8281)
!9021 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8281)
!9022 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8281)
!9023 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8281)
!9024 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8281)
!9025 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8281)
!9026 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8281)
!9027 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8281)
!9028 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8281)
!9029 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8281)
!9030 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8281)
!9031 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8281)
!9032 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8281)
!9033 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8281)
!9034 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8281)
!9035 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8281)
!9036 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !8273)
!9037 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !8273)
!9038 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !8273)
!9039 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !8273)
!9040 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !8273)
!9041 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !8273)
!9042 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !8273)
!9043 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !8273)
!9044 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !8273)
!9045 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !8273)
!9046 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !8273)
!9047 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !8273)
!9048 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !8273)
!9049 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !8273)
!9050 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !8273)
!9051 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !8273)
!9052 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !8273)
!9053 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !8273)
!9054 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !8273)
!9055 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !8273)
!9056 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !8273)
!9057 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !8273)
!9058 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !8273)
!9059 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !8273)
!9060 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !8273)
!9061 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !8273)
!9062 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !8273)
!9063 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !8273)
!9064 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !8273)
!9065 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !8273)
!9066 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !8273)
!9067 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !8273)
!9068 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !8273)
!9069 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !8273)
!9070 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !8273)
!9071 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !8273)
!9072 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !8273)
!9073 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !8273)
!9074 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !8273)
!9075 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !8273)
!9076 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !8273)
!9077 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !8273)
!9078 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !8273)
!9079 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !8273)
!9080 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !8273)
!9081 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8273)
!9082 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8272)
!9083 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8272)
!9084 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8272)
!9085 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8272)
!9086 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8272)
!9087 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8272)
!9088 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8272)
!9089 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8272)
!9090 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8272)
!9091 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8272)
!9092 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8272)
!9093 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8272)
!9094 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8272)
!9095 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8272)
!9096 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8272)
!9097 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8272)
!9098 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8272)
!9099 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8272)
!9100 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !8273)
!9101 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !8273)
!9102 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !8273)
!9103 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !8273)
!9104 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !8273)
!9105 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !8273)
!9106 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !8273)
!9107 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !8273)
!9108 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !8273)
!9109 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !8273)
!9110 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !8273)
!9111 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !8273)
!9112 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !8273)
!9113 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !8273)
!9114 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !8273)
!9115 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !8273)
!9116 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !8273)
!9117 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !8273)
!9118 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !8273)
!9119 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !8273)
!9120 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !8273)
!9121 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !8273)
!9122 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !8273)
!9123 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !8273)
!9124 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !8273)
!9125 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !8273)
!9126 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !8273)
!9127 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !8273)
!9128 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !8273)
!9129 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !8273)
!9130 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !8273)
!9131 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !8273)
!9132 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !8273)
!9133 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !8273)
!9134 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !8273)
!9135 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !8273)
!9136 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !8273)
!9137 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !8273)
!9138 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !8273)
!9139 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !8273)
!9140 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !8273)
!9141 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !8273)
!9142 = !DILocation(line: 756, column: 234, scope: !8274)
!9143 = !DILocation(line: 756, column: 290, scope: !8274)
!9144 = !DILocation(line: 756, column: 288, scope: !8274)
!9145 = !DILocation(line: 756, column: 172, scope: !8274)
!9146 = !DILocation(line: 756, column: 172, scope: !9147)
!9147 = !DILexicalBlockFile(scope: !8275, file: !904, discriminator: 8)
!9148 = !DILocation(line: 756, column: 167, scope: !9147)
!9149 = !DILocation(line: 756, column: 150, scope: !9147)
!9150 = !DILocation(line: 756, column: 156, scope: !9147)
!9151 = !DILocation(line: 756, column: 170, scope: !9147)
!9152 = !DILocation(line: 756, column: 320, scope: !9147)
!9153 = !DILocation(line: 756, column: 303, scope: !9147)
!9154 = !DILocation(line: 756, column: 309, scope: !9147)
!9155 = !DILocation(line: 756, column: 301, scope: !9147)
!9156 = !DILocation(line: 756, column: 324, scope: !9147)
!9157 = !DILocation(line: 756, column: 335, scope: !9158)
!9158 = !DILexicalBlockFile(scope: !9159, file: !904, discriminator: 9)
!9159 = distinct !DILexicalBlock(scope: !8276, file: !904, line: 756, column: 335)
!9160 = !DILocation(line: 756, column: 342, scope: !9158)
!9161 = !DILocation(line: 756, column: 366, scope: !9162)
!9162 = !DILexicalBlockFile(scope: !9159, file: !904, discriminator: 10)
!9163 = !DILocation(line: 756, column: 345, scope: !9162)
!9164 = !DILocation(line: 756, column: 355, scope: !9162)
!9165 = !DILocation(line: 756, column: 335, scope: !9162)
!9166 = !DILocation(line: 756, column: 402, scope: !9167)
!9167 = !DILexicalBlockFile(scope: !9159, file: !904, discriminator: 11)
!9168 = !DILocation(line: 756, column: 392, scope: !9167)
!9169 = !DILocation(line: 756, column: 387, scope: !9167)
!9170 = !DILocation(line: 756, column: 370, scope: !9167)
!9171 = !DILocation(line: 756, column: 376, scope: !9167)
!9172 = !DILocation(line: 756, column: 390, scope: !9167)
!9173 = !DILocation(line: 756, column: 407, scope: !9174)
!9174 = !DILexicalBlockFile(scope: !8277, file: !904, discriminator: 12)
!9175 = !DILocation(line: 756, column: 117, scope: !9176)
!9176 = !DILexicalBlockFile(scope: !8278, file: !904, discriminator: 13)
!9177 = !DILocation(line: 756, column: 90, scope: !9176)
!9178 = distinct !{!9178, !9179}
!9179 = !DILocation(line: 756, column: 90, scope: !8255)
!9180 = !DILocation(line: 757, column: 9, scope: !8255)
!9181 = !DILocation(line: 759, column: 13, scope: !8254)
!9182 = !DILocation(line: 759, column: 13, scope: !8255)
!9183 = !DILocation(line: 760, column: 23, scope: !8253)
!9184 = !DILocation(line: 760, column: 28, scope: !8253)
!9185 = !DILocation(line: 760, column: 21, scope: !8253)
!9186 = !DILocation(line: 762, column: 42, scope: !8253)
!9187 = !DILocation(line: 762, column: 46, scope: !8253)
!9188 = !DILocation(line: 762, column: 51, scope: !8253)
!9189 = !DILocation(line: 762, column: 24, scope: !8253)
!9190 = !DILocation(line: 762, column: 22, scope: !8253)
!9191 = !DILocation(line: 762, column: 63, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !8253, file: !904, line: 762, column: 63)
!9193 = !DILocation(line: 762, column: 72, scope: !9192)
!9194 = !DILocation(line: 762, column: 63, scope: !8253)
!9195 = !DILocation(line: 762, column: 84, scope: !9196)
!9196 = !DILexicalBlockFile(scope: !9192, file: !904, discriminator: 1)
!9197 = !DILocation(line: 762, column: 77, scope: !9196)
!9198 = !DILocation(line: 762, column: 101, scope: !9199)
!9199 = !DILexicalBlockFile(scope: !8252, file: !904, discriminator: 2)
!9200 = !DILocation(line: 762, column: 99, scope: !9199)
!9201 = !DILocation(line: 762, column: 106, scope: !9202)
!9202 = !DILexicalBlockFile(scope: !8251, file: !904, discriminator: 3)
!9203 = !DILocation(line: 762, column: 110, scope: !9202)
!9204 = !DILocation(line: 762, column: 108, scope: !9202)
!9205 = !DILocation(line: 762, column: 94, scope: !9202)
!9206 = !DILocation(line: 762, column: 148, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !8249, file: !904, discriminator: 4)
!9208 = !DILocation(line: 762, column: 131, scope: !9207)
!9209 = !DILocation(line: 762, column: 137, scope: !9207)
!9210 = !DILocation(line: 762, column: 198, scope: !8247)
!9211 = !DILocation(line: 762, column: 177, scope: !8247)
!9212 = !DILocation(line: 762, column: 187, scope: !8247)
!9213 = !DILocation(line: 762, column: 212, scope: !8247)
!9214 = !DILocation(line: 762, column: 216, scope: !8247)
!9215 = !DILocation(line: 762, column: 225, scope: !8247)
!9216 = !DILocation(line: 762, column: 232, scope: !8247)
!9217 = !DILocation(line: 762, column: 241, scope: !8247)
!9218 = !DILocation(line: 762, column: 203, scope: !8247)
!9219 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !8246)
!9220 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !8246)
!9221 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !8246)
!9222 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !8246)
!9223 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !8246)
!9224 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !8246)
!9225 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !8246)
!9226 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !8246)
!9227 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !8246)
!9228 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !8246)
!9229 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !8246)
!9230 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8259)
!9231 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8259)
!9232 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8259)
!9233 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8259)
!9234 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8259)
!9235 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8259)
!9236 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8259)
!9237 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8259)
!9238 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8259)
!9239 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8259)
!9240 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8259)
!9241 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8259)
!9242 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8259)
!9243 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8259)
!9244 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8259)
!9245 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8259)
!9246 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8259)
!9247 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8259)
!9248 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !8246)
!9249 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !8246)
!9250 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !8246)
!9251 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !8246)
!9252 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !8246)
!9253 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !8246)
!9254 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !8246)
!9255 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !8246)
!9256 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !8246)
!9257 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !8246)
!9258 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !8246)
!9259 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !8246)
!9260 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !8246)
!9261 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !8246)
!9262 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !8246)
!9263 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !8246)
!9264 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !8246)
!9265 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !8246)
!9266 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !8246)
!9267 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !8246)
!9268 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !8246)
!9269 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !8246)
!9270 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !8246)
!9271 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !8246)
!9272 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !8246)
!9273 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !8246)
!9274 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !8246)
!9275 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !8246)
!9276 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !8246)
!9277 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !8246)
!9278 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !8246)
!9279 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !8246)
!9280 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !8246)
!9281 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !8246)
!9282 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !8246)
!9283 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !8246)
!9284 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !8246)
!9285 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !8246)
!9286 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !8246)
!9287 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !8246)
!9288 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !8246)
!9289 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8257)
!9290 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8257)
!9291 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8257)
!9292 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8257)
!9293 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8257)
!9294 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8257)
!9295 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8257)
!9296 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8257)
!9297 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8257)
!9298 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8257)
!9299 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8257)
!9300 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8257)
!9301 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8257)
!9302 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8257)
!9303 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8257)
!9304 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8257)
!9305 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8257)
!9306 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8257)
!9307 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !8246)
!9308 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !8246)
!9309 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !8246)
!9310 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !8246)
!9311 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !8246)
!9312 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !8246)
!9313 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !8246)
!9314 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !8246)
!9315 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !8246)
!9316 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !8246)
!9317 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !8246)
!9318 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !8246)
!9319 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !8246)
!9320 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !8246)
!9321 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !8246)
!9322 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !8246)
!9323 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !8246)
!9324 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !8246)
!9325 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !8246)
!9326 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !8246)
!9327 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !8246)
!9328 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !8246)
!9329 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !8246)
!9330 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !8246)
!9331 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !8246)
!9332 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !8246)
!9333 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !8246)
!9334 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !8246)
!9335 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !8246)
!9336 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !8246)
!9337 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !8246)
!9338 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !8246)
!9339 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !8246)
!9340 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !8246)
!9341 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !8246)
!9342 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !8246)
!9343 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !8246)
!9344 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !8246)
!9345 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !8246)
!9346 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !8246)
!9347 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !8246)
!9348 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !8246)
!9349 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !8246)
!9350 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !8246)
!9351 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !8246)
!9352 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !8246)
!9353 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !8245)
!9354 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !8245)
!9355 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !8245)
!9356 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !8245)
!9357 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !8245)
!9358 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !8245)
!9359 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !8245)
!9360 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !8245)
!9361 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !8245)
!9362 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !8245)
!9363 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !8245)
!9364 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !8245)
!9365 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !8245)
!9366 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !8245)
!9367 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !8245)
!9368 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !8245)
!9369 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !8245)
!9370 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !8245)
!9371 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !8246)
!9372 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !8246)
!9373 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !8246)
!9374 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !8246)
!9375 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !8246)
!9376 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !8246)
!9377 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !8246)
!9378 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !8246)
!9379 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !8246)
!9380 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !8246)
!9381 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !8246)
!9382 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !8246)
!9383 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !8246)
!9384 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !8246)
!9385 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !8246)
!9386 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !8246)
!9387 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !8246)
!9388 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !8246)
!9389 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !8246)
!9390 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !8246)
!9391 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !8246)
!9392 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !8246)
!9393 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !8246)
!9394 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !8246)
!9395 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !8246)
!9396 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !8246)
!9397 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !8246)
!9398 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !8246)
!9399 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !8246)
!9400 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !8246)
!9401 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !8246)
!9402 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !8246)
!9403 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !8246)
!9404 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !8246)
!9405 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !8246)
!9406 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !8246)
!9407 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !8246)
!9408 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !8246)
!9409 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !8246)
!9410 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !8246)
!9411 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !8246)
!9412 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !8246)
!9413 = !DILocation(line: 762, column: 201, scope: !8247)
!9414 = !DILocation(line: 762, column: 253, scope: !8247)
!9415 = !DILocation(line: 762, column: 251, scope: !8247)
!9416 = !DILocation(line: 762, column: 171, scope: !8247)
!9417 = !DILocation(line: 762, column: 154, scope: !8247)
!9418 = !DILocation(line: 762, column: 160, scope: !8247)
!9419 = !DILocation(line: 762, column: 174, scope: !8247)
!9420 = !DILocation(line: 762, column: 259, scope: !8247)
!9421 = !DILocation(line: 762, column: 270, scope: !9422)
!9422 = !DILexicalBlockFile(scope: !9423, file: !904, discriminator: 6)
!9423 = distinct !DILexicalBlock(scope: !8249, file: !904, line: 762, column: 270)
!9424 = !DILocation(line: 762, column: 277, scope: !9422)
!9425 = !DILocation(line: 762, column: 301, scope: !9426)
!9426 = !DILexicalBlockFile(scope: !9423, file: !904, discriminator: 7)
!9427 = !DILocation(line: 762, column: 280, scope: !9426)
!9428 = !DILocation(line: 762, column: 290, scope: !9426)
!9429 = !DILocation(line: 762, column: 270, scope: !9426)
!9430 = !DILocation(line: 762, column: 337, scope: !9431)
!9431 = !DILexicalBlockFile(scope: !9423, file: !904, discriminator: 8)
!9432 = !DILocation(line: 762, column: 327, scope: !9431)
!9433 = !DILocation(line: 762, column: 322, scope: !9431)
!9434 = !DILocation(line: 762, column: 305, scope: !9431)
!9435 = !DILocation(line: 762, column: 311, scope: !9431)
!9436 = !DILocation(line: 762, column: 325, scope: !9431)
!9437 = !DILocation(line: 762, column: 342, scope: !9438)
!9438 = !DILexicalBlockFile(scope: !8250, file: !904, discriminator: 9)
!9439 = !DILocation(line: 762, column: 121, scope: !9440)
!9440 = !DILexicalBlockFile(scope: !8251, file: !904, discriminator: 10)
!9441 = !DILocation(line: 762, column: 94, scope: !9440)
!9442 = distinct !{!9442, !9443}
!9443 = !DILocation(line: 762, column: 94, scope: !8253)
!9444 = !DILocation(line: 763, column: 9, scope: !8253)
!9445 = !DILocation(line: 764, column: 9, scope: !8255)
!9446 = !DILocation(line: 767, column: 5, scope: !8243)
!9447 = !DILocation(line: 768, column: 1, scope: !8243)
!9448 = distinct !DISubprogram(name: "get_num_ct_values", scope: !904, file: !904, line: 673, type: !9449, isLocal: true, isDefinition: true, scopeLine: 675, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{!888, !1654, !1664, !1782}
!9451 = !DILocalVariable(name: "gb", arg: 1, scope: !9448, file: !904, line: 673, type: !1654)
!9452 = !DILocation(line: 673, column: 45, scope: !9448)
!9453 = !DILocalVariable(name: "ctx", arg: 2, scope: !9448, file: !904, line: 673, type: !1664)
!9454 = !DILocation(line: 673, column: 69, scope: !9448)
!9455 = !DILocalVariable(name: "avctx", arg: 3, scope: !9448, file: !904, line: 674, type: !1782)
!9456 = !DILocation(line: 674, column: 46, scope: !9448)
!9457 = !DILocalVariable(name: "num_coded_vals", scope: !9448, file: !904, line: 676, type: !888)
!9458 = !DILocation(line: 676, column: 9, scope: !9448)
!9459 = !DILocation(line: 678, column: 19, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9448, file: !904, line: 678, column: 9)
!9461 = !DILocation(line: 678, column: 9, scope: !9460)
!9462 = !DILocation(line: 678, column: 9, scope: !9448)
!9463 = !DILocation(line: 679, column: 35, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9460, file: !904, line: 678, column: 24)
!9465 = !DILocation(line: 679, column: 26, scope: !9464)
!9466 = !DILocation(line: 679, column: 24, scope: !9464)
!9467 = !DILocation(line: 680, column: 13, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9464, file: !904, line: 680, column: 13)
!9469 = !DILocation(line: 680, column: 30, scope: !9468)
!9470 = !DILocation(line: 680, column: 35, scope: !9468)
!9471 = !DILocation(line: 680, column: 28, scope: !9468)
!9472 = !DILocation(line: 680, column: 13, scope: !9464)
!9473 = !DILocation(line: 681, column: 20, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9468, file: !904, line: 680, column: 53)
!9475 = !DILocation(line: 682, column: 67, scope: !9474)
!9476 = !DILocation(line: 681, column: 13, scope: !9474)
!9477 = !DILocation(line: 683, column: 13, scope: !9474)
!9478 = !DILocation(line: 685, column: 16, scope: !9464)
!9479 = !DILocation(line: 685, column: 9, scope: !9464)
!9480 = !DILocation(line: 687, column: 16, scope: !9460)
!9481 = !DILocation(line: 687, column: 21, scope: !9460)
!9482 = !DILocation(line: 687, column: 9, scope: !9460)
!9483 = !DILocation(line: 688, column: 1, scope: !9448)
!9484 = distinct !DISubprogram(name: "decode_qu_spectra", scope: !904, file: !904, line: 812, type: !9485, isLocal: true, isDefinition: true, scopeLine: 814, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{null, !1654, !2867, !1536, !9487, !909}
!9487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64, align: 64)
!9488 = !DILocalVariable(name: "a", arg: 1, scope: !9489, file: !9490, line: 241, type: !889)
!9489 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !9490, file: !9490, line: 241, type: !9491, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!9490 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!9491 = !DISubroutineType(types: !9492)
!9492 = !{!889, !889, !889}
!9493 = !DILocation(line: 241, column: 103, scope: !9489, inlinedAt: !9494)
!9494 = distinct !DILocation(line: 828, column: 26, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9496, file: !904, line: 827, column: 50)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !904, line: 827, column: 17)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !904, line: 827, column: 17)
!9498 = distinct !DILexicalBlock(scope: !9499, file: !904, line: 824, column: 46)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !904, line: 824, column: 13)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !904, line: 824, column: 13)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !904, line: 823, column: 47)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !904, line: 823, column: 13)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !904, line: 822, column: 37)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !904, line: 822, column: 5)
!9505 = distinct !DILexicalBlock(scope: !9484, file: !904, line: 822, column: 5)
!9506 = !DILocalVariable(name: "p", arg: 2, scope: !9489, file: !9490, line: 241, type: !889)
!9507 = !DILocation(line: 241, column: 115, scope: !9489, inlinedAt: !9494)
!9508 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9509)
!9509 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9510)
!9510 = distinct !DILocation(line: 825, column: 23, scope: !9498)
!9511 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9512)
!9512 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9510)
!9513 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9514)
!9514 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9510)
!9515 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !9510)
!9516 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !9510)
!9517 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !9510)
!9518 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !9510)
!9519 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !9510)
!9520 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !9510)
!9521 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !9510)
!9522 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !9510)
!9523 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !9510)
!9524 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !9510)
!9525 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !9510)
!9526 = !DILocalVariable(name: "gb", arg: 1, scope: !9484, file: !904, line: 812, type: !1654)
!9527 = !DILocation(line: 812, column: 46, scope: !9484)
!9528 = !DILocalVariable(name: "tab", arg: 2, scope: !9484, file: !904, line: 812, type: !2867)
!9529 = !DILocation(line: 812, column: 76, scope: !9484)
!9530 = !DILocalVariable(name: "vlc_tab", arg: 3, scope: !9484, file: !904, line: 813, type: !1536)
!9531 = !DILocation(line: 813, column: 36, scope: !9484)
!9532 = !DILocalVariable(name: "out", arg: 4, scope: !9484, file: !904, line: 813, type: !9487)
!9533 = !DILocation(line: 813, column: 54, scope: !9484)
!9534 = !DILocalVariable(name: "num_specs", arg: 5, scope: !9484, file: !904, line: 813, type: !909)
!9535 = !DILocation(line: 813, column: 69, scope: !9484)
!9536 = !DILocalVariable(name: "i", scope: !9484, file: !904, line: 815, type: !888)
!9537 = !DILocation(line: 815, column: 9, scope: !9484)
!9538 = !DILocalVariable(name: "j", scope: !9484, file: !904, line: 815, type: !888)
!9539 = !DILocation(line: 815, column: 12, scope: !9484)
!9540 = !DILocalVariable(name: "pos", scope: !9484, file: !904, line: 815, type: !888)
!9541 = !DILocation(line: 815, column: 15, scope: !9484)
!9542 = !DILocalVariable(name: "cf", scope: !9484, file: !904, line: 815, type: !888)
!9543 = !DILocation(line: 815, column: 20, scope: !9484)
!9544 = !DILocalVariable(name: "group_size", scope: !9484, file: !904, line: 816, type: !888)
!9545 = !DILocation(line: 816, column: 9, scope: !9484)
!9546 = !DILocation(line: 816, column: 22, scope: !9484)
!9547 = !DILocation(line: 816, column: 27, scope: !9484)
!9548 = !DILocalVariable(name: "num_coeffs", scope: !9484, file: !904, line: 817, type: !888)
!9549 = !DILocation(line: 817, column: 9, scope: !9484)
!9550 = !DILocation(line: 817, column: 22, scope: !9484)
!9551 = !DILocation(line: 817, column: 27, scope: !9484)
!9552 = !DILocalVariable(name: "bits", scope: !9484, file: !904, line: 818, type: !888)
!9553 = !DILocation(line: 818, column: 9, scope: !9484)
!9554 = !DILocation(line: 818, column: 16, scope: !9484)
!9555 = !DILocation(line: 818, column: 21, scope: !9484)
!9556 = !DILocalVariable(name: "is_signed", scope: !9484, file: !904, line: 819, type: !888)
!9557 = !DILocation(line: 819, column: 9, scope: !9484)
!9558 = !DILocation(line: 819, column: 21, scope: !9484)
!9559 = !DILocation(line: 819, column: 26, scope: !9484)
!9560 = !DILocalVariable(name: "val", scope: !9484, file: !904, line: 820, type: !889)
!9561 = !DILocation(line: 820, column: 14, scope: !9484)
!9562 = !DILocation(line: 822, column: 14, scope: !9505)
!9563 = !DILocation(line: 822, column: 10, scope: !9505)
!9564 = !DILocation(line: 822, column: 19, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9504, file: !904, discriminator: 1)
!9566 = !DILocation(line: 822, column: 25, scope: !9565)
!9567 = !DILocation(line: 822, column: 23, scope: !9565)
!9568 = !DILocation(line: 822, column: 5, scope: !9565)
!9569 = !DILocation(line: 823, column: 13, scope: !9502)
!9570 = !DILocation(line: 823, column: 24, scope: !9502)
!9571 = !DILocation(line: 823, column: 29, scope: !9502)
!9572 = !DILocation(line: 823, column: 42, scope: !9573)
!9573 = !DILexicalBlockFile(scope: !9502, file: !904, discriminator: 1)
!9574 = !DILocation(line: 823, column: 32, scope: !9573)
!9575 = !DILocation(line: 823, column: 13, scope: !9573)
!9576 = !DILocation(line: 824, column: 20, scope: !9500)
!9577 = !DILocation(line: 824, column: 18, scope: !9500)
!9578 = !DILocation(line: 824, column: 25, scope: !9579)
!9579 = !DILexicalBlockFile(scope: !9499, file: !904, discriminator: 1)
!9580 = !DILocation(line: 824, column: 29, scope: !9579)
!9581 = !DILocation(line: 824, column: 27, scope: !9579)
!9582 = !DILocation(line: 824, column: 13, scope: !9579)
!9583 = !DILocation(line: 825, column: 32, scope: !9498)
!9584 = !DILocation(line: 825, column: 36, scope: !9498)
!9585 = !DILocation(line: 825, column: 45, scope: !9498)
!9586 = !DILocation(line: 825, column: 52, scope: !9498)
!9587 = !DILocation(line: 825, column: 61, scope: !9498)
!9588 = !DILocation(line: 825, column: 23, scope: !9498)
!9589 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !9510)
!9590 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !9510)
!9591 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !9510)
!9592 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !9510)
!9593 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !9510)
!9594 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !9510)
!9595 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !9510)
!9596 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !9510)
!9597 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !9510)
!9598 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !9510)
!9599 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9510)
!9600 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9514)
!9601 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9514)
!9602 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9514)
!9603 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9514)
!9604 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9514)
!9605 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9514)
!9606 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9514)
!9607 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9514)
!9608 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9514)
!9609 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9514)
!9610 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9514)
!9611 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9514)
!9612 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9514)
!9613 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9514)
!9614 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9514)
!9615 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9514)
!9616 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9514)
!9617 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9514)
!9618 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !9510)
!9619 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !9510)
!9620 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !9510)
!9621 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !9510)
!9622 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !9510)
!9623 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !9510)
!9624 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !9510)
!9625 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !9510)
!9626 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !9510)
!9627 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !9510)
!9628 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !9510)
!9629 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !9510)
!9630 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !9510)
!9631 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !9510)
!9632 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !9510)
!9633 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !9510)
!9634 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !9510)
!9635 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !9510)
!9636 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !9510)
!9637 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !9510)
!9638 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !9510)
!9639 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !9510)
!9640 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !9510)
!9641 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !9510)
!9642 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !9510)
!9643 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !9510)
!9644 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !9510)
!9645 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !9510)
!9646 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !9510)
!9647 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !9510)
!9648 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !9510)
!9649 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !9510)
!9650 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !9510)
!9651 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !9510)
!9652 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !9510)
!9653 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !9510)
!9654 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !9510)
!9655 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !9510)
!9656 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !9510)
!9657 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !9510)
!9658 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9510)
!9659 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9512)
!9660 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9512)
!9661 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9512)
!9662 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9512)
!9663 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9512)
!9664 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9512)
!9665 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9512)
!9666 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9512)
!9667 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9512)
!9668 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9512)
!9669 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9512)
!9670 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9512)
!9671 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9512)
!9672 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9512)
!9673 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9512)
!9674 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9512)
!9675 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9512)
!9676 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9512)
!9677 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !9510)
!9678 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !9510)
!9679 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !9510)
!9680 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !9510)
!9681 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !9510)
!9682 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !9510)
!9683 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !9510)
!9684 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !9510)
!9685 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !9510)
!9686 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !9510)
!9687 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !9510)
!9688 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !9510)
!9689 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !9510)
!9690 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !9510)
!9691 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !9510)
!9692 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !9510)
!9693 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !9510)
!9694 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !9510)
!9695 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !9510)
!9696 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !9510)
!9697 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !9510)
!9698 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !9510)
!9699 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !9510)
!9700 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !9510)
!9701 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !9510)
!9702 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !9510)
!9703 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !9510)
!9704 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !9510)
!9705 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !9510)
!9706 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !9510)
!9707 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !9510)
!9708 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !9510)
!9709 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !9510)
!9710 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !9510)
!9711 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !9510)
!9712 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !9510)
!9713 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !9510)
!9714 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !9510)
!9715 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !9510)
!9716 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !9510)
!9717 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !9510)
!9718 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !9510)
!9719 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !9510)
!9720 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !9510)
!9721 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !9510)
!9722 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9510)
!9723 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9509)
!9724 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9509)
!9725 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9509)
!9726 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9509)
!9727 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9509)
!9728 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9509)
!9729 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9509)
!9730 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9509)
!9731 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9509)
!9732 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9509)
!9733 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9509)
!9734 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9509)
!9735 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9509)
!9736 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9509)
!9737 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9509)
!9738 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9509)
!9739 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9509)
!9740 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9509)
!9741 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !9510)
!9742 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !9510)
!9743 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !9510)
!9744 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !9510)
!9745 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !9510)
!9746 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !9510)
!9747 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !9510)
!9748 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !9510)
!9749 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !9510)
!9750 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !9510)
!9751 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !9510)
!9752 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !9510)
!9753 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !9510)
!9754 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !9510)
!9755 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !9510)
!9756 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !9510)
!9757 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !9510)
!9758 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !9510)
!9759 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !9510)
!9760 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !9510)
!9761 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !9510)
!9762 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !9510)
!9763 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !9510)
!9764 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !9510)
!9765 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !9510)
!9766 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !9510)
!9767 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !9510)
!9768 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !9510)
!9769 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !9510)
!9770 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !9510)
!9771 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !9510)
!9772 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !9510)
!9773 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !9510)
!9774 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !9510)
!9775 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !9510)
!9776 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !9510)
!9777 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !9510)
!9778 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !9510)
!9779 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !9510)
!9780 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !9510)
!9781 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !9510)
!9782 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !9510)
!9783 = !DILocation(line: 825, column: 21, scope: !9498)
!9784 = !DILocation(line: 827, column: 24, scope: !9497)
!9785 = !DILocation(line: 827, column: 22, scope: !9497)
!9786 = !DILocation(line: 827, column: 29, scope: !9787)
!9787 = !DILexicalBlockFile(scope: !9496, file: !904, discriminator: 1)
!9788 = !DILocation(line: 827, column: 33, scope: !9787)
!9789 = !DILocation(line: 827, column: 31, scope: !9787)
!9790 = !DILocation(line: 827, column: 17, scope: !9787)
!9791 = !DILocation(line: 828, column: 42, scope: !9495)
!9792 = !DILocation(line: 828, column: 47, scope: !9495)
!9793 = !DILocation(line: 828, column: 26, scope: !9495)
!9794 = !DILocation(line: 243, column: 12, scope: !9489, inlinedAt: !9494)
!9795 = !DILocation(line: 243, column: 23, scope: !9489, inlinedAt: !9494)
!9796 = !DILocation(line: 243, column: 20, scope: !9489, inlinedAt: !9494)
!9797 = !DILocation(line: 243, column: 26, scope: !9489, inlinedAt: !9494)
!9798 = !DILocation(line: 243, column: 14, scope: !9489, inlinedAt: !9494)
!9799 = !DILocation(line: 828, column: 24, scope: !9495)
!9800 = !DILocation(line: 829, column: 25, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9495, file: !904, line: 829, column: 25)
!9802 = !DILocation(line: 829, column: 25, scope: !9495)
!9803 = !DILocation(line: 830, column: 42, scope: !9801)
!9804 = !DILocation(line: 830, column: 46, scope: !9801)
!9805 = !DILocation(line: 830, column: 30, scope: !9801)
!9806 = !DILocation(line: 830, column: 28, scope: !9801)
!9807 = !DILocation(line: 830, column: 25, scope: !9801)
!9808 = !DILocation(line: 831, column: 30, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9801, file: !904, line: 831, column: 30)
!9810 = !DILocation(line: 831, column: 33, scope: !9809)
!9811 = !DILocation(line: 831, column: 46, scope: !9812)
!9812 = !DILexicalBlockFile(scope: !9809, file: !904, discriminator: 1)
!9813 = !DILocation(line: 831, column: 36, scope: !9812)
!9814 = !DILocation(line: 831, column: 30, scope: !9812)
!9815 = !DILocation(line: 832, column: 31, scope: !9809)
!9816 = !DILocation(line: 832, column: 30, scope: !9809)
!9817 = !DILocation(line: 832, column: 28, scope: !9809)
!9818 = !DILocation(line: 832, column: 25, scope: !9809)
!9819 = !DILocation(line: 834, column: 34, scope: !9495)
!9820 = !DILocation(line: 834, column: 28, scope: !9495)
!9821 = !DILocation(line: 834, column: 21, scope: !9495)
!9822 = !DILocation(line: 834, column: 32, scope: !9495)
!9823 = !DILocation(line: 835, column: 29, scope: !9495)
!9824 = !DILocation(line: 835, column: 25, scope: !9495)
!9825 = !DILocation(line: 836, column: 17, scope: !9495)
!9826 = !DILocation(line: 827, column: 46, scope: !9827)
!9827 = !DILexicalBlockFile(scope: !9496, file: !904, discriminator: 2)
!9828 = !DILocation(line: 827, column: 17, scope: !9827)
!9829 = distinct !{!9829, !9830}
!9830 = !DILocation(line: 827, column: 17, scope: !9498)
!9831 = !DILocation(line: 837, column: 13, scope: !9498)
!9832 = !DILocation(line: 824, column: 42, scope: !9833)
!9833 = !DILexicalBlockFile(scope: !9499, file: !904, discriminator: 2)
!9834 = !DILocation(line: 824, column: 13, scope: !9833)
!9835 = distinct !{!9835, !9836}
!9836 = !DILocation(line: 824, column: 13, scope: !9501)
!9837 = !DILocation(line: 838, column: 9, scope: !9501)
!9838 = !DILocation(line: 839, column: 20, scope: !9502)
!9839 = !DILocation(line: 839, column: 33, scope: !9502)
!9840 = !DILocation(line: 839, column: 31, scope: !9502)
!9841 = !DILocation(line: 839, column: 17, scope: !9502)
!9842 = !DILocation(line: 822, column: 5, scope: !9843)
!9843 = !DILexicalBlockFile(scope: !9504, file: !904, discriminator: 2)
!9844 = distinct !{!9844, !9845}
!9845 = !DILocation(line: 822, column: 5, scope: !9484)
!9846 = !DILocation(line: 841, column: 1, scope: !9484)
!9847 = distinct !DISubprogram(name: "decode_gainc_npoints", scope: !904, file: !904, line: 965, type: !9848, isLocal: true, isDefinition: true, scopeLine: 967, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{!888, !1654, !1664, !888, !888}
!9850 = !DILocation(line: 412, column: 75, scope: !3955, inlinedAt: !9851)
!9851 = distinct !DILocation(line: 1014, column: 59, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9853, file: !904, line: 1013, column: 50)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !904, line: 1013, column: 13)
!9854 = distinct !DILexicalBlock(scope: !9855, file: !904, line: 1013, column: 13)
!9855 = distinct !DILexicalBlock(scope: !9856, file: !904, line: 1009, column: 16)
!9856 = distinct !DILexicalBlock(scope: !9857, file: !904, line: 1005, column: 13)
!9857 = distinct !DILexicalBlock(scope: !9847, file: !904, line: 972, column: 30)
!9858 = !DILocation(line: 412, column: 82, scope: !3955, inlinedAt: !9851)
!9859 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9860)
!9860 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9861)
!9861 = distinct !DILocation(line: 997, column: 25, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9863, file: !904, line: 996, column: 50)
!9863 = distinct !DILexicalBlock(scope: !9864, file: !904, line: 996, column: 13)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !904, line: 996, column: 13)
!9865 = distinct !DILexicalBlock(scope: !9866, file: !904, line: 991, column: 16)
!9866 = distinct !DILexicalBlock(scope: !9857, file: !904, line: 984, column: 13)
!9867 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9868)
!9868 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9861)
!9869 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9870)
!9870 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9861)
!9871 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !9861)
!9872 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !9861)
!9873 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !9861)
!9874 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !9861)
!9875 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !9861)
!9876 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !9861)
!9877 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !9861)
!9878 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !9861)
!9879 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !9861)
!9880 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !9861)
!9881 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !9861)
!9882 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9883)
!9883 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9884)
!9884 = distinct !DILocation(line: 993, column: 17, scope: !9865)
!9885 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9886)
!9886 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9884)
!9887 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9888)
!9888 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9884)
!9889 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !9884)
!9890 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !9884)
!9891 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !9884)
!9892 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !9884)
!9893 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !9884)
!9894 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !9884)
!9895 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !9884)
!9896 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !9884)
!9897 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !9884)
!9898 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !9884)
!9899 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !9884)
!9900 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9901)
!9901 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9902)
!9902 = distinct !DILocation(line: 986, column: 25, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !904, line: 985, column: 50)
!9904 = distinct !DILexicalBlock(scope: !9905, file: !904, line: 985, column: 13)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !904, line: 985, column: 13)
!9906 = distinct !DILexicalBlock(scope: !9866, file: !904, line: 984, column: 21)
!9907 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9908)
!9908 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9902)
!9909 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9910)
!9910 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9902)
!9911 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !9902)
!9912 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !9902)
!9913 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !9902)
!9914 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !9902)
!9915 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !9902)
!9916 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !9902)
!9917 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !9902)
!9918 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !9902)
!9919 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !9902)
!9920 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !9902)
!9921 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !9902)
!9922 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9923)
!9923 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9924)
!9924 = distinct !DILocation(line: 980, column: 17, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9926, file: !904, line: 978, column: 9)
!9926 = distinct !DILexicalBlock(scope: !9857, file: !904, line: 978, column: 9)
!9927 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9928)
!9928 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9924)
!9929 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !9930)
!9930 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9924)
!9931 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !9924)
!9932 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !9924)
!9933 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !9924)
!9934 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !9924)
!9935 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !9924)
!9936 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !9924)
!9937 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !9924)
!9938 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !9924)
!9939 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !9924)
!9940 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !9924)
!9941 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !9924)
!9942 = !DILocalVariable(name: "gb", arg: 1, scope: !9847, file: !904, line: 965, type: !1654)
!9943 = !DILocation(line: 965, column: 48, scope: !9847)
!9944 = !DILocalVariable(name: "ctx", arg: 2, scope: !9847, file: !904, line: 965, type: !1664)
!9945 = !DILocation(line: 965, column: 72, scope: !9847)
!9946 = !DILocalVariable(name: "ch_num", arg: 3, scope: !9847, file: !904, line: 966, type: !888)
!9947 = !DILocation(line: 966, column: 37, scope: !9847)
!9948 = !DILocalVariable(name: "coded_subbands", arg: 4, scope: !9847, file: !904, line: 966, type: !888)
!9949 = !DILocation(line: 966, column: 49, scope: !9847)
!9950 = !DILocalVariable(name: "i", scope: !9847, file: !904, line: 968, type: !888)
!9951 = !DILocation(line: 968, column: 9, scope: !9847)
!9952 = !DILocalVariable(name: "delta", scope: !9847, file: !904, line: 968, type: !888)
!9953 = !DILocation(line: 968, column: 12, scope: !9847)
!9954 = !DILocalVariable(name: "delta_bits", scope: !9847, file: !904, line: 968, type: !888)
!9955 = !DILocation(line: 968, column: 19, scope: !9847)
!9956 = !DILocalVariable(name: "min_val", scope: !9847, file: !904, line: 968, type: !888)
!9957 = !DILocation(line: 968, column: 31, scope: !9847)
!9958 = !DILocalVariable(name: "chan", scope: !9847, file: !904, line: 969, type: !2870)
!9959 = !DILocation(line: 969, column: 24, scope: !9847)
!9960 = !DILocation(line: 969, column: 46, scope: !9847)
!9961 = !DILocation(line: 969, column: 32, scope: !9847)
!9962 = !DILocation(line: 969, column: 37, scope: !9847)
!9963 = !DILocalVariable(name: "ref_chan", scope: !9847, file: !904, line: 970, type: !2870)
!9964 = !DILocation(line: 970, column: 24, scope: !9847)
!9965 = !DILocation(line: 970, column: 36, scope: !9847)
!9966 = !DILocation(line: 970, column: 41, scope: !9847)
!9967 = !DILocation(line: 972, column: 22, scope: !9847)
!9968 = !DILocation(line: 972, column: 13, scope: !9847)
!9969 = !DILocation(line: 972, column: 5, scope: !9847)
!9970 = !DILocation(line: 974, column: 16, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9857, file: !904, line: 974, column: 9)
!9972 = !DILocation(line: 974, column: 14, scope: !9971)
!9973 = !DILocation(line: 974, column: 21, scope: !9974)
!9974 = !DILexicalBlockFile(scope: !9975, file: !904, discriminator: 1)
!9975 = distinct !DILexicalBlock(scope: !9971, file: !904, line: 974, column: 9)
!9976 = !DILocation(line: 974, column: 25, scope: !9974)
!9977 = !DILocation(line: 974, column: 23, scope: !9974)
!9978 = !DILocation(line: 974, column: 9, scope: !9974)
!9979 = !DILocation(line: 975, column: 54, scope: !9975)
!9980 = !DILocation(line: 975, column: 45, scope: !9975)
!9981 = !DILocation(line: 975, column: 29, scope: !9975)
!9982 = !DILocation(line: 975, column: 13, scope: !9975)
!9983 = !DILocation(line: 975, column: 19, scope: !9975)
!9984 = !DILocation(line: 975, column: 32, scope: !9975)
!9985 = !DILocation(line: 975, column: 43, scope: !9975)
!9986 = !DILocation(line: 974, column: 42, scope: !9987)
!9987 = !DILexicalBlockFile(scope: !9975, file: !904, discriminator: 2)
!9988 = !DILocation(line: 974, column: 9, scope: !9987)
!9989 = distinct !{!9989, !9990}
!9990 = !DILocation(line: 974, column: 9, scope: !9857)
!9991 = !DILocation(line: 976, column: 9, scope: !9857)
!9992 = !DILocation(line: 978, column: 16, scope: !9926)
!9993 = !DILocation(line: 978, column: 14, scope: !9926)
!9994 = !DILocation(line: 978, column: 21, scope: !9995)
!9995 = !DILexicalBlockFile(scope: !9925, file: !904, discriminator: 1)
!9996 = !DILocation(line: 978, column: 25, scope: !9995)
!9997 = !DILocation(line: 978, column: 23, scope: !9995)
!9998 = !DILocation(line: 978, column: 9, scope: !9995)
!9999 = !DILocation(line: 980, column: 26, scope: !9925)
!10000 = !DILocation(line: 980, column: 47, scope: !9925)
!10001 = !DILocation(line: 981, column: 43, scope: !9925)
!10002 = !DILocation(line: 980, column: 17, scope: !9925)
!10003 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !9924)
!10004 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !9924)
!10005 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !9924)
!10006 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !9924)
!10007 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !9924)
!10008 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !9924)
!10009 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !9924)
!10010 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !9924)
!10011 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !9924)
!10012 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !9924)
!10013 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9924)
!10014 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9930)
!10015 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9930)
!10016 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9930)
!10017 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9930)
!10018 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9930)
!10019 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9930)
!10020 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9930)
!10021 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9930)
!10022 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9930)
!10023 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9930)
!10024 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9930)
!10025 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9930)
!10026 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9930)
!10027 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9930)
!10028 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9930)
!10029 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9930)
!10030 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9930)
!10031 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9930)
!10032 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !9924)
!10033 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !9924)
!10034 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !9924)
!10035 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !9924)
!10036 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !9924)
!10037 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !9924)
!10038 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !9924)
!10039 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !9924)
!10040 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !9924)
!10041 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !9924)
!10042 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !9924)
!10043 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !9924)
!10044 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !9924)
!10045 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !9924)
!10046 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !9924)
!10047 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !9924)
!10048 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !9924)
!10049 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !9924)
!10050 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !9924)
!10051 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !9924)
!10052 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !9924)
!10053 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !9924)
!10054 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !9924)
!10055 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !9924)
!10056 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !9924)
!10057 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !9924)
!10058 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !9924)
!10059 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !9924)
!10060 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !9924)
!10061 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !9924)
!10062 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !9924)
!10063 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !9924)
!10064 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !9924)
!10065 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !9924)
!10066 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !9924)
!10067 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !9924)
!10068 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !9924)
!10069 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !9924)
!10070 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !9924)
!10071 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !9924)
!10072 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9924)
!10073 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9928)
!10074 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9928)
!10075 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9928)
!10076 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9928)
!10077 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9928)
!10078 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9928)
!10079 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9928)
!10080 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9928)
!10081 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9928)
!10082 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9928)
!10083 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9928)
!10084 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9928)
!10085 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9928)
!10086 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9928)
!10087 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9928)
!10088 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9928)
!10089 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9928)
!10090 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9928)
!10091 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !9924)
!10092 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !9924)
!10093 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !9924)
!10094 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !9924)
!10095 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !9924)
!10096 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !9924)
!10097 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !9924)
!10098 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !9924)
!10099 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !9924)
!10100 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !9924)
!10101 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !9924)
!10102 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !9924)
!10103 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !9924)
!10104 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !9924)
!10105 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !9924)
!10106 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !9924)
!10107 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !9924)
!10108 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !9924)
!10109 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !9924)
!10110 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !9924)
!10111 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !9924)
!10112 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !9924)
!10113 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !9924)
!10114 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !9924)
!10115 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !9924)
!10116 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !9924)
!10117 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !9924)
!10118 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !9924)
!10119 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !9924)
!10120 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !9924)
!10121 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !9924)
!10122 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !9924)
!10123 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !9924)
!10124 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !9924)
!10125 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !9924)
!10126 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !9924)
!10127 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !9924)
!10128 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !9924)
!10129 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !9924)
!10130 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !9924)
!10131 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !9924)
!10132 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !9924)
!10133 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !9924)
!10134 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !9924)
!10135 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !9924)
!10136 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9924)
!10137 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9923)
!10138 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9923)
!10139 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9923)
!10140 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9923)
!10141 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9923)
!10142 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9923)
!10143 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9923)
!10144 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9923)
!10145 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9923)
!10146 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9923)
!10147 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9923)
!10148 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9923)
!10149 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9923)
!10150 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9923)
!10151 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9923)
!10152 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9923)
!10153 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9923)
!10154 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9923)
!10155 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !9924)
!10156 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !9924)
!10157 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !9924)
!10158 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !9924)
!10159 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !9924)
!10160 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !9924)
!10161 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !9924)
!10162 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !9924)
!10163 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !9924)
!10164 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !9924)
!10165 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !9924)
!10166 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !9924)
!10167 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !9924)
!10168 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !9924)
!10169 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !9924)
!10170 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !9924)
!10171 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !9924)
!10172 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !9924)
!10173 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !9924)
!10174 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !9924)
!10175 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !9924)
!10176 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !9924)
!10177 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !9924)
!10178 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !9924)
!10179 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !9924)
!10180 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !9924)
!10181 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !9924)
!10182 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !9924)
!10183 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !9924)
!10184 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !9924)
!10185 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !9924)
!10186 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !9924)
!10187 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !9924)
!10188 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !9924)
!10189 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !9924)
!10190 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !9924)
!10191 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !9924)
!10192 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !9924)
!10193 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !9924)
!10194 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !9924)
!10195 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !9924)
!10196 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !9924)
!10197 = !DILocation(line: 979, column: 29, scope: !9925)
!10198 = !DILocation(line: 979, column: 13, scope: !9925)
!10199 = !DILocation(line: 979, column: 19, scope: !9925)
!10200 = !DILocation(line: 979, column: 32, scope: !9925)
!10201 = !DILocation(line: 979, column: 43, scope: !9925)
!10202 = !DILocation(line: 978, column: 42, scope: !10203)
!10203 = !DILexicalBlockFile(scope: !9925, file: !904, discriminator: 2)
!10204 = !DILocation(line: 978, column: 9, scope: !10203)
!10205 = distinct !{!10205, !10206}
!10206 = !DILocation(line: 978, column: 9, scope: !9857)
!10207 = !DILocation(line: 982, column: 9, scope: !9857)
!10208 = !DILocation(line: 984, column: 13, scope: !9866)
!10209 = !DILocation(line: 984, column: 13, scope: !9857)
!10210 = !DILocation(line: 985, column: 20, scope: !9905)
!10211 = !DILocation(line: 985, column: 18, scope: !9905)
!10212 = !DILocation(line: 985, column: 25, scope: !10213)
!10213 = !DILexicalBlockFile(scope: !9904, file: !904, discriminator: 1)
!10214 = !DILocation(line: 985, column: 29, scope: !10213)
!10215 = !DILocation(line: 985, column: 27, scope: !10213)
!10216 = !DILocation(line: 985, column: 13, scope: !10213)
!10217 = !DILocation(line: 986, column: 34, scope: !9903)
!10218 = !DILocation(line: 986, column: 55, scope: !9903)
!10219 = !DILocation(line: 987, column: 51, scope: !9903)
!10220 = !DILocation(line: 986, column: 25, scope: !9903)
!10221 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !9902)
!10222 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !9902)
!10223 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !9902)
!10224 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !9902)
!10225 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !9902)
!10226 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !9902)
!10227 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !9902)
!10228 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !9902)
!10229 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !9902)
!10230 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !9902)
!10231 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9902)
!10232 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9910)
!10233 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9910)
!10234 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9910)
!10235 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9910)
!10236 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9910)
!10237 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9910)
!10238 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9910)
!10239 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9910)
!10240 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9910)
!10241 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9910)
!10242 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9910)
!10243 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9910)
!10244 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9910)
!10245 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9910)
!10246 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9910)
!10247 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9910)
!10248 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9910)
!10249 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9910)
!10250 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !9902)
!10251 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !9902)
!10252 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !9902)
!10253 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !9902)
!10254 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !9902)
!10255 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !9902)
!10256 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !9902)
!10257 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !9902)
!10258 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !9902)
!10259 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !9902)
!10260 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !9902)
!10261 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !9902)
!10262 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !9902)
!10263 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !9902)
!10264 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !9902)
!10265 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !9902)
!10266 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !9902)
!10267 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !9902)
!10268 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !9902)
!10269 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !9902)
!10270 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !9902)
!10271 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !9902)
!10272 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !9902)
!10273 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !9902)
!10274 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !9902)
!10275 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !9902)
!10276 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !9902)
!10277 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !9902)
!10278 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !9902)
!10279 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !9902)
!10280 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !9902)
!10281 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !9902)
!10282 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !9902)
!10283 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !9902)
!10284 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !9902)
!10285 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !9902)
!10286 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !9902)
!10287 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !9902)
!10288 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !9902)
!10289 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !9902)
!10290 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9902)
!10291 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9908)
!10292 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9908)
!10293 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9908)
!10294 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9908)
!10295 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9908)
!10296 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9908)
!10297 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9908)
!10298 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9908)
!10299 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9908)
!10300 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9908)
!10301 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9908)
!10302 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9908)
!10303 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9908)
!10304 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9908)
!10305 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9908)
!10306 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9908)
!10307 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9908)
!10308 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9908)
!10309 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !9902)
!10310 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !9902)
!10311 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !9902)
!10312 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !9902)
!10313 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !9902)
!10314 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !9902)
!10315 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !9902)
!10316 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !9902)
!10317 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !9902)
!10318 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !9902)
!10319 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !9902)
!10320 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !9902)
!10321 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !9902)
!10322 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !9902)
!10323 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !9902)
!10324 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !9902)
!10325 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !9902)
!10326 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !9902)
!10327 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !9902)
!10328 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !9902)
!10329 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !9902)
!10330 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !9902)
!10331 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !9902)
!10332 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !9902)
!10333 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !9902)
!10334 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !9902)
!10335 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !9902)
!10336 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !9902)
!10337 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !9902)
!10338 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !9902)
!10339 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !9902)
!10340 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !9902)
!10341 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !9902)
!10342 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !9902)
!10343 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !9902)
!10344 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !9902)
!10345 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !9902)
!10346 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !9902)
!10347 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !9902)
!10348 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !9902)
!10349 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !9902)
!10350 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !9902)
!10351 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !9902)
!10352 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !9902)
!10353 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !9902)
!10354 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9902)
!10355 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9901)
!10356 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9901)
!10357 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9901)
!10358 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9901)
!10359 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9901)
!10360 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9901)
!10361 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9901)
!10362 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9901)
!10363 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9901)
!10364 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9901)
!10365 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9901)
!10366 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9901)
!10367 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9901)
!10368 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9901)
!10369 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9901)
!10370 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9901)
!10371 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9901)
!10372 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9901)
!10373 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !9902)
!10374 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !9902)
!10375 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !9902)
!10376 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !9902)
!10377 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !9902)
!10378 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !9902)
!10379 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !9902)
!10380 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !9902)
!10381 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !9902)
!10382 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !9902)
!10383 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !9902)
!10384 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !9902)
!10385 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !9902)
!10386 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !9902)
!10387 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !9902)
!10388 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !9902)
!10389 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !9902)
!10390 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !9902)
!10391 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !9902)
!10392 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !9902)
!10393 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !9902)
!10394 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !9902)
!10395 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !9902)
!10396 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !9902)
!10397 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !9902)
!10398 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !9902)
!10399 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !9902)
!10400 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !9902)
!10401 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !9902)
!10402 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !9902)
!10403 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !9902)
!10404 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !9902)
!10405 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !9902)
!10406 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !9902)
!10407 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !9902)
!10408 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !9902)
!10409 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !9902)
!10410 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !9902)
!10411 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !9902)
!10412 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !9902)
!10413 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !9902)
!10414 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !9902)
!10415 = !DILocation(line: 986, column: 23, scope: !9903)
!10416 = !DILocation(line: 989, column: 42, scope: !9903)
!10417 = !DILocation(line: 989, column: 22, scope: !9903)
!10418 = !DILocation(line: 989, column: 32, scope: !9903)
!10419 = !DILocation(line: 989, column: 45, scope: !9903)
!10420 = !DILocation(line: 989, column: 58, scope: !9903)
!10421 = !DILocation(line: 989, column: 56, scope: !9903)
!10422 = !DILocation(line: 989, column: 65, scope: !9903)
!10423 = !DILocation(line: 988, column: 33, scope: !9903)
!10424 = !DILocation(line: 988, column: 17, scope: !9903)
!10425 = !DILocation(line: 988, column: 23, scope: !9903)
!10426 = !DILocation(line: 988, column: 36, scope: !9903)
!10427 = !DILocation(line: 988, column: 47, scope: !9903)
!10428 = !DILocation(line: 990, column: 13, scope: !9903)
!10429 = !DILocation(line: 985, column: 46, scope: !10430)
!10430 = !DILexicalBlockFile(scope: !9904, file: !904, discriminator: 2)
!10431 = !DILocation(line: 985, column: 13, scope: !10430)
!10432 = distinct !{!10432, !10433}
!10433 = !DILocation(line: 985, column: 13, scope: !9906)
!10434 = !DILocation(line: 991, column: 9, scope: !9906)
!10435 = !DILocation(line: 993, column: 26, scope: !9865)
!10436 = !DILocation(line: 993, column: 47, scope: !9865)
!10437 = !DILocation(line: 994, column: 43, scope: !9865)
!10438 = !DILocation(line: 993, column: 17, scope: !9865)
!10439 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !9884)
!10440 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !9884)
!10441 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !9884)
!10442 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !9884)
!10443 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !9884)
!10444 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !9884)
!10445 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !9884)
!10446 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !9884)
!10447 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !9884)
!10448 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !9884)
!10449 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9884)
!10450 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9888)
!10451 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9888)
!10452 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9888)
!10453 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9888)
!10454 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9888)
!10455 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9888)
!10456 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9888)
!10457 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9888)
!10458 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9888)
!10459 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9888)
!10460 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9888)
!10461 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9888)
!10462 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9888)
!10463 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9888)
!10464 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9888)
!10465 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9888)
!10466 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9888)
!10467 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9888)
!10468 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !9884)
!10469 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !9884)
!10470 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !9884)
!10471 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !9884)
!10472 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !9884)
!10473 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !9884)
!10474 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !9884)
!10475 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !9884)
!10476 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !9884)
!10477 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !9884)
!10478 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !9884)
!10479 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !9884)
!10480 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !9884)
!10481 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !9884)
!10482 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !9884)
!10483 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !9884)
!10484 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !9884)
!10485 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !9884)
!10486 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !9884)
!10487 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !9884)
!10488 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !9884)
!10489 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !9884)
!10490 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !9884)
!10491 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !9884)
!10492 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !9884)
!10493 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !9884)
!10494 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !9884)
!10495 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !9884)
!10496 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !9884)
!10497 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !9884)
!10498 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !9884)
!10499 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !9884)
!10500 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !9884)
!10501 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !9884)
!10502 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !9884)
!10503 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !9884)
!10504 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !9884)
!10505 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !9884)
!10506 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !9884)
!10507 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !9884)
!10508 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9884)
!10509 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9886)
!10510 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9886)
!10511 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9886)
!10512 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9886)
!10513 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9886)
!10514 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9886)
!10515 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9886)
!10516 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9886)
!10517 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9886)
!10518 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9886)
!10519 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9886)
!10520 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9886)
!10521 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9886)
!10522 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9886)
!10523 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9886)
!10524 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9886)
!10525 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9886)
!10526 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9886)
!10527 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !9884)
!10528 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !9884)
!10529 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !9884)
!10530 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !9884)
!10531 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !9884)
!10532 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !9884)
!10533 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !9884)
!10534 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !9884)
!10535 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !9884)
!10536 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !9884)
!10537 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !9884)
!10538 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !9884)
!10539 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !9884)
!10540 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !9884)
!10541 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !9884)
!10542 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !9884)
!10543 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !9884)
!10544 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !9884)
!10545 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !9884)
!10546 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !9884)
!10547 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !9884)
!10548 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !9884)
!10549 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !9884)
!10550 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !9884)
!10551 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !9884)
!10552 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !9884)
!10553 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !9884)
!10554 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !9884)
!10555 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !9884)
!10556 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !9884)
!10557 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !9884)
!10558 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !9884)
!10559 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !9884)
!10560 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !9884)
!10561 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !9884)
!10562 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !9884)
!10563 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !9884)
!10564 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !9884)
!10565 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !9884)
!10566 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !9884)
!10567 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !9884)
!10568 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !9884)
!10569 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !9884)
!10570 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !9884)
!10571 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !9884)
!10572 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9884)
!10573 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9883)
!10574 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9883)
!10575 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9883)
!10576 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9883)
!10577 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9883)
!10578 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9883)
!10579 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9883)
!10580 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9883)
!10581 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9883)
!10582 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9883)
!10583 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9883)
!10584 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9883)
!10585 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9883)
!10586 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9883)
!10587 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9883)
!10588 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9883)
!10589 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9883)
!10590 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9883)
!10591 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !9884)
!10592 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !9884)
!10593 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !9884)
!10594 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !9884)
!10595 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !9884)
!10596 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !9884)
!10597 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !9884)
!10598 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !9884)
!10599 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !9884)
!10600 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !9884)
!10601 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !9884)
!10602 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !9884)
!10603 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !9884)
!10604 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !9884)
!10605 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !9884)
!10606 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !9884)
!10607 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !9884)
!10608 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !9884)
!10609 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !9884)
!10610 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !9884)
!10611 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !9884)
!10612 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !9884)
!10613 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !9884)
!10614 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !9884)
!10615 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !9884)
!10616 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !9884)
!10617 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !9884)
!10618 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !9884)
!10619 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !9884)
!10620 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !9884)
!10621 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !9884)
!10622 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !9884)
!10623 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !9884)
!10624 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !9884)
!10625 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !9884)
!10626 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !9884)
!10627 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !9884)
!10628 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !9884)
!10629 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !9884)
!10630 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !9884)
!10631 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !9884)
!10632 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !9884)
!10633 = !DILocation(line: 992, column: 13, scope: !9865)
!10634 = !DILocation(line: 992, column: 19, scope: !9865)
!10635 = !DILocation(line: 992, column: 32, scope: !9865)
!10636 = !DILocation(line: 992, column: 43, scope: !9865)
!10637 = !DILocation(line: 996, column: 20, scope: !9864)
!10638 = !DILocation(line: 996, column: 18, scope: !9864)
!10639 = !DILocation(line: 996, column: 25, scope: !10640)
!10640 = !DILexicalBlockFile(scope: !9863, file: !904, discriminator: 1)
!10641 = !DILocation(line: 996, column: 29, scope: !10640)
!10642 = !DILocation(line: 996, column: 27, scope: !10640)
!10643 = !DILocation(line: 996, column: 13, scope: !10640)
!10644 = !DILocation(line: 997, column: 34, scope: !9862)
!10645 = !DILocation(line: 997, column: 55, scope: !9862)
!10646 = !DILocation(line: 998, column: 51, scope: !9862)
!10647 = !DILocation(line: 997, column: 25, scope: !9862)
!10648 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !9861)
!10649 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !9861)
!10650 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !9861)
!10651 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !9861)
!10652 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !9861)
!10653 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !9861)
!10654 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !9861)
!10655 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !9861)
!10656 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !9861)
!10657 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !9861)
!10658 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !9861)
!10659 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9870)
!10660 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9870)
!10661 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9870)
!10662 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9870)
!10663 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9870)
!10664 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9870)
!10665 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9870)
!10666 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9870)
!10667 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9870)
!10668 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9870)
!10669 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9870)
!10670 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9870)
!10671 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9870)
!10672 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9870)
!10673 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9870)
!10674 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9870)
!10675 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9870)
!10676 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9870)
!10677 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !9861)
!10678 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !9861)
!10679 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !9861)
!10680 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !9861)
!10681 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !9861)
!10682 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !9861)
!10683 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !9861)
!10684 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !9861)
!10685 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !9861)
!10686 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !9861)
!10687 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !9861)
!10688 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !9861)
!10689 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !9861)
!10690 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !9861)
!10691 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !9861)
!10692 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !9861)
!10693 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !9861)
!10694 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !9861)
!10695 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !9861)
!10696 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !9861)
!10697 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !9861)
!10698 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !9861)
!10699 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !9861)
!10700 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !9861)
!10701 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !9861)
!10702 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !9861)
!10703 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !9861)
!10704 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !9861)
!10705 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !9861)
!10706 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !9861)
!10707 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !9861)
!10708 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !9861)
!10709 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !9861)
!10710 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !9861)
!10711 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !9861)
!10712 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !9861)
!10713 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !9861)
!10714 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !9861)
!10715 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !9861)
!10716 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !9861)
!10717 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !9861)
!10718 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9868)
!10719 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9868)
!10720 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9868)
!10721 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9868)
!10722 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9868)
!10723 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9868)
!10724 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9868)
!10725 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9868)
!10726 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9868)
!10727 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9868)
!10728 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9868)
!10729 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9868)
!10730 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9868)
!10731 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9868)
!10732 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9868)
!10733 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9868)
!10734 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9868)
!10735 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9868)
!10736 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !9861)
!10737 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !9861)
!10738 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !9861)
!10739 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !9861)
!10740 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !9861)
!10741 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !9861)
!10742 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !9861)
!10743 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !9861)
!10744 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !9861)
!10745 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !9861)
!10746 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !9861)
!10747 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !9861)
!10748 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !9861)
!10749 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !9861)
!10750 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !9861)
!10751 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !9861)
!10752 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !9861)
!10753 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !9861)
!10754 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !9861)
!10755 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !9861)
!10756 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !9861)
!10757 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !9861)
!10758 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !9861)
!10759 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !9861)
!10760 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !9861)
!10761 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !9861)
!10762 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !9861)
!10763 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !9861)
!10764 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !9861)
!10765 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !9861)
!10766 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !9861)
!10767 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !9861)
!10768 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !9861)
!10769 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !9861)
!10770 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !9861)
!10771 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !9861)
!10772 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !9861)
!10773 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !9861)
!10774 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !9861)
!10775 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !9861)
!10776 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !9861)
!10777 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !9861)
!10778 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !9861)
!10779 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !9861)
!10780 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !9861)
!10781 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !9861)
!10782 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !9860)
!10783 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !9860)
!10784 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !9860)
!10785 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !9860)
!10786 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !9860)
!10787 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !9860)
!10788 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !9860)
!10789 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !9860)
!10790 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !9860)
!10791 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !9860)
!10792 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !9860)
!10793 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !9860)
!10794 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !9860)
!10795 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !9860)
!10796 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !9860)
!10797 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !9860)
!10798 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !9860)
!10799 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !9860)
!10800 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !9861)
!10801 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !9861)
!10802 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !9861)
!10803 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !9861)
!10804 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !9861)
!10805 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !9861)
!10806 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !9861)
!10807 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !9861)
!10808 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !9861)
!10809 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !9861)
!10810 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !9861)
!10811 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !9861)
!10812 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !9861)
!10813 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !9861)
!10814 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !9861)
!10815 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !9861)
!10816 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !9861)
!10817 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !9861)
!10818 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !9861)
!10819 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !9861)
!10820 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !9861)
!10821 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !9861)
!10822 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !9861)
!10823 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !9861)
!10824 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !9861)
!10825 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !9861)
!10826 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !9861)
!10827 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !9861)
!10828 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !9861)
!10829 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !9861)
!10830 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !9861)
!10831 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !9861)
!10832 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !9861)
!10833 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !9861)
!10834 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !9861)
!10835 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !9861)
!10836 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !9861)
!10837 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !9861)
!10838 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !9861)
!10839 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !9861)
!10840 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !9861)
!10841 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !9861)
!10842 = !DILocation(line: 997, column: 23, scope: !9862)
!10843 = !DILocation(line: 1000, column: 38, scope: !9862)
!10844 = !DILocation(line: 1000, column: 40, scope: !9862)
!10845 = !DILocation(line: 1000, column: 22, scope: !9862)
!10846 = !DILocation(line: 1000, column: 28, scope: !9862)
!10847 = !DILocation(line: 1000, column: 45, scope: !9862)
!10848 = !DILocation(line: 1000, column: 58, scope: !9862)
!10849 = !DILocation(line: 1000, column: 56, scope: !9862)
!10850 = !DILocation(line: 1000, column: 65, scope: !9862)
!10851 = !DILocation(line: 999, column: 33, scope: !9862)
!10852 = !DILocation(line: 999, column: 17, scope: !9862)
!10853 = !DILocation(line: 999, column: 23, scope: !9862)
!10854 = !DILocation(line: 999, column: 36, scope: !9862)
!10855 = !DILocation(line: 999, column: 47, scope: !9862)
!10856 = !DILocation(line: 1001, column: 13, scope: !9862)
!10857 = !DILocation(line: 996, column: 46, scope: !10858)
!10858 = !DILexicalBlockFile(scope: !9863, file: !904, discriminator: 2)
!10859 = !DILocation(line: 996, column: 13, scope: !10858)
!10860 = distinct !{!10860, !10861}
!10861 = !DILocation(line: 996, column: 13, scope: !9865)
!10862 = !DILocation(line: 1003, column: 9, scope: !9857)
!10863 = !DILocation(line: 1005, column: 13, scope: !9856)
!10864 = !DILocation(line: 1005, column: 13, scope: !9857)
!10865 = !DILocation(line: 1006, column: 20, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !904, line: 1006, column: 13)
!10867 = distinct !DILexicalBlock(scope: !9856, file: !904, line: 1005, column: 21)
!10868 = !DILocation(line: 1006, column: 18, scope: !10866)
!10869 = !DILocation(line: 1006, column: 25, scope: !10870)
!10870 = !DILexicalBlockFile(scope: !10871, file: !904, discriminator: 1)
!10871 = distinct !DILexicalBlock(scope: !10866, file: !904, line: 1006, column: 13)
!10872 = !DILocation(line: 1006, column: 29, scope: !10870)
!10873 = !DILocation(line: 1006, column: 27, scope: !10870)
!10874 = !DILocation(line: 1006, column: 13, scope: !10870)
!10875 = !DILocation(line: 1008, column: 41, scope: !10871)
!10876 = !DILocation(line: 1008, column: 21, scope: !10871)
!10877 = !DILocation(line: 1008, column: 31, scope: !10871)
!10878 = !DILocation(line: 1008, column: 44, scope: !10871)
!10879 = !DILocation(line: 1007, column: 33, scope: !10871)
!10880 = !DILocation(line: 1007, column: 17, scope: !10871)
!10881 = !DILocation(line: 1007, column: 23, scope: !10871)
!10882 = !DILocation(line: 1007, column: 36, scope: !10871)
!10883 = !DILocation(line: 1007, column: 47, scope: !10871)
!10884 = !DILocation(line: 1006, column: 46, scope: !10885)
!10885 = !DILexicalBlockFile(scope: !10871, file: !904, discriminator: 2)
!10886 = !DILocation(line: 1006, column: 13, scope: !10885)
!10887 = distinct !{!10887, !10888}
!10888 = !DILocation(line: 1006, column: 13, scope: !10867)
!10889 = !DILocation(line: 1009, column: 9, scope: !10867)
!10890 = !DILocation(line: 1010, column: 35, scope: !9855)
!10891 = !DILocation(line: 1010, column: 26, scope: !9855)
!10892 = !DILocation(line: 1010, column: 24, scope: !9855)
!10893 = !DILocation(line: 1011, column: 32, scope: !9855)
!10894 = !DILocation(line: 1011, column: 23, scope: !9855)
!10895 = !DILocation(line: 1011, column: 21, scope: !9855)
!10896 = !DILocation(line: 1013, column: 20, scope: !9854)
!10897 = !DILocation(line: 1013, column: 18, scope: !9854)
!10898 = !DILocation(line: 1013, column: 25, scope: !10899)
!10899 = !DILexicalBlockFile(scope: !9853, file: !904, discriminator: 1)
!10900 = !DILocation(line: 1013, column: 29, scope: !10899)
!10901 = !DILocation(line: 1013, column: 27, scope: !10899)
!10902 = !DILocation(line: 1013, column: 13, scope: !10899)
!10903 = !DILocation(line: 1014, column: 49, scope: !9852)
!10904 = !DILocation(line: 1014, column: 69, scope: !9852)
!10905 = !DILocation(line: 1014, column: 73, scope: !9852)
!10906 = !DILocation(line: 1014, column: 59, scope: !9852)
!10907 = !DILocation(line: 414, column: 12, scope: !3955, inlinedAt: !9851)
!10908 = !DILocation(line: 414, column: 25, scope: !4377, inlinedAt: !9851)
!10909 = !DILocation(line: 414, column: 28, scope: !4377, inlinedAt: !9851)
!10910 = !DILocation(line: 414, column: 16, scope: !4377, inlinedAt: !9851)
!10911 = !DILocation(line: 414, column: 12, scope: !4377, inlinedAt: !9851)
!10912 = !DILocation(line: 414, column: 12, scope: !4382, inlinedAt: !9851)
!10913 = !DILocation(line: 414, column: 12, scope: !4384, inlinedAt: !9851)
!10914 = !DILocation(line: 1014, column: 57, scope: !9852)
!10915 = !DILocation(line: 1014, column: 33, scope: !9852)
!10916 = !DILocation(line: 1014, column: 17, scope: !9852)
!10917 = !DILocation(line: 1014, column: 23, scope: !9852)
!10918 = !DILocation(line: 1014, column: 36, scope: !9852)
!10919 = !DILocation(line: 1014, column: 47, scope: !9852)
!10920 = !DILocation(line: 1015, column: 37, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !9852, file: !904, line: 1015, column: 21)
!10922 = !DILocation(line: 1015, column: 21, scope: !10921)
!10923 = !DILocation(line: 1015, column: 27, scope: !10921)
!10924 = !DILocation(line: 1015, column: 40, scope: !10921)
!10925 = !DILocation(line: 1015, column: 51, scope: !10921)
!10926 = !DILocation(line: 1015, column: 21, scope: !9852)
!10927 = !DILocation(line: 1016, column: 21, scope: !10921)
!10928 = !DILocation(line: 1017, column: 13, scope: !9852)
!10929 = !DILocation(line: 1013, column: 46, scope: !10930)
!10930 = !DILexicalBlockFile(scope: !9853, file: !904, discriminator: 2)
!10931 = !DILocation(line: 1013, column: 13, scope: !10930)
!10932 = distinct !{!10932, !10933}
!10933 = !DILocation(line: 1013, column: 13, scope: !9855)
!10934 = !DILocation(line: 1019, column: 5, scope: !9857)
!10935 = !DILocation(line: 1021, column: 5, scope: !9847)
!10936 = !DILocation(line: 1022, column: 1, scope: !9847)
!10937 = distinct !DISubprogram(name: "decode_gainc_levels", scope: !904, file: !904, line: 1071, type: !9848, isLocal: true, isDefinition: true, scopeLine: 1073, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!10938 = !DILocation(line: 412, column: 75, scope: !3955, inlinedAt: !10939)
!10939 = distinct !DILocation(line: 1134, column: 65, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !904, line: 1133, column: 70)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !904, line: 1133, column: 17)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !904, line: 1133, column: 17)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !904, line: 1132, column: 13)
!10944 = distinct !DILexicalBlock(scope: !10945, file: !904, line: 1132, column: 13)
!10945 = distinct !DILexicalBlock(scope: !10946, file: !904, line: 1128, column: 16)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !904, line: 1124, column: 13)
!10947 = distinct !DILexicalBlock(scope: !10937, file: !904, line: 1078, column: 30)
!10948 = !DILocation(line: 412, column: 82, scope: !3955, inlinedAt: !10939)
!10949 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !10950)
!10950 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !10951)
!10951 = distinct !DILocation(line: 1115, column: 29, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !904, line: 1114, column: 70)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !904, line: 1114, column: 17)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !904, line: 1114, column: 17)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !904, line: 1113, column: 13)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !904, line: 1113, column: 13)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !904, line: 1109, column: 16)
!10958 = distinct !DILexicalBlock(scope: !10947, file: !904, line: 1100, column: 13)
!10959 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !10960)
!10960 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !10951)
!10961 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !10962)
!10962 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !10951)
!10963 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !10951)
!10964 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !10951)
!10965 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !10951)
!10966 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !10951)
!10967 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !10951)
!10968 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !10951)
!10969 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !10951)
!10970 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !10951)
!10971 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !10951)
!10972 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !10951)
!10973 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !10951)
!10974 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !10975)
!10975 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !10976)
!10976 = distinct !DILocation(line: 1088, column: 29, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !904, line: 1087, column: 70)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !904, line: 1087, column: 17)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !904, line: 1087, column: 17)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !904, line: 1086, column: 13)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !904, line: 1086, column: 13)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !904, line: 1085, column: 21)
!10983 = distinct !DILexicalBlock(scope: !10947, file: !904, line: 1085, column: 13)
!10984 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !10985)
!10985 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !10976)
!10986 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !10987)
!10987 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !10976)
!10988 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !10976)
!10989 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !10976)
!10990 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !10976)
!10991 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !10976)
!10992 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !10976)
!10993 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !10976)
!10994 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !10976)
!10995 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !10976)
!10996 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !10976)
!10997 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !10976)
!10998 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !10976)
!10999 = !DILocalVariable(name: "gb", arg: 1, scope: !10937, file: !904, line: 1071, type: !1654)
!11000 = !DILocation(line: 1071, column: 47, scope: !10937)
!11001 = !DILocalVariable(name: "ctx", arg: 2, scope: !10937, file: !904, line: 1071, type: !1664)
!11002 = !DILocation(line: 1071, column: 71, scope: !10937)
!11003 = !DILocalVariable(name: "ch_num", arg: 3, scope: !10937, file: !904, line: 1072, type: !888)
!11004 = !DILocation(line: 1072, column: 36, scope: !10937)
!11005 = !DILocalVariable(name: "coded_subbands", arg: 4, scope: !10937, file: !904, line: 1072, type: !888)
!11006 = !DILocation(line: 1072, column: 48, scope: !10937)
!11007 = !DILocalVariable(name: "sb", scope: !10937, file: !904, line: 1074, type: !888)
!11008 = !DILocation(line: 1074, column: 9, scope: !10937)
!11009 = !DILocalVariable(name: "i", scope: !10937, file: !904, line: 1074, type: !888)
!11010 = !DILocation(line: 1074, column: 13, scope: !10937)
!11011 = !DILocalVariable(name: "delta", scope: !10937, file: !904, line: 1074, type: !888)
!11012 = !DILocation(line: 1074, column: 16, scope: !10937)
!11013 = !DILocalVariable(name: "delta_bits", scope: !10937, file: !904, line: 1074, type: !888)
!11014 = !DILocation(line: 1074, column: 23, scope: !10937)
!11015 = !DILocalVariable(name: "min_val", scope: !10937, file: !904, line: 1074, type: !888)
!11016 = !DILocation(line: 1074, column: 35, scope: !10937)
!11017 = !DILocalVariable(name: "pred", scope: !10937, file: !904, line: 1074, type: !888)
!11018 = !DILocation(line: 1074, column: 44, scope: !10937)
!11019 = !DILocalVariable(name: "chan", scope: !10937, file: !904, line: 1075, type: !2870)
!11020 = !DILocation(line: 1075, column: 24, scope: !10937)
!11021 = !DILocation(line: 1075, column: 46, scope: !10937)
!11022 = !DILocation(line: 1075, column: 32, scope: !10937)
!11023 = !DILocation(line: 1075, column: 37, scope: !10937)
!11024 = !DILocalVariable(name: "ref_chan", scope: !10937, file: !904, line: 1076, type: !2870)
!11025 = !DILocation(line: 1076, column: 24, scope: !10937)
!11026 = !DILocation(line: 1076, column: 36, scope: !10937)
!11027 = !DILocation(line: 1076, column: 41, scope: !10937)
!11028 = !DILocation(line: 1078, column: 22, scope: !10937)
!11029 = !DILocation(line: 1078, column: 13, scope: !10937)
!11030 = !DILocation(line: 1078, column: 5, scope: !10937)
!11031 = !DILocation(line: 1080, column: 17, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !10947, file: !904, line: 1080, column: 9)
!11033 = !DILocation(line: 1080, column: 14, scope: !11032)
!11034 = !DILocation(line: 1080, column: 22, scope: !11035)
!11035 = !DILexicalBlockFile(scope: !11036, file: !904, discriminator: 1)
!11036 = distinct !DILexicalBlock(scope: !11032, file: !904, line: 1080, column: 9)
!11037 = !DILocation(line: 1080, column: 27, scope: !11035)
!11038 = !DILocation(line: 1080, column: 25, scope: !11035)
!11039 = !DILocation(line: 1080, column: 9, scope: !11035)
!11040 = !DILocation(line: 1081, column: 20, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !904, line: 1081, column: 13)
!11042 = !DILocation(line: 1081, column: 18, scope: !11041)
!11043 = !DILocation(line: 1081, column: 25, scope: !11044)
!11044 = !DILexicalBlockFile(scope: !11045, file: !904, discriminator: 1)
!11045 = distinct !DILexicalBlock(scope: !11041, file: !904, line: 1081, column: 13)
!11046 = !DILocation(line: 1081, column: 45, scope: !11044)
!11047 = !DILocation(line: 1081, column: 29, scope: !11044)
!11048 = !DILocation(line: 1081, column: 35, scope: !11044)
!11049 = !DILocation(line: 1081, column: 49, scope: !11044)
!11050 = !DILocation(line: 1081, column: 27, scope: !11044)
!11051 = !DILocation(line: 1081, column: 13, scope: !11044)
!11052 = !DILocation(line: 1082, column: 60, scope: !11045)
!11053 = !DILocation(line: 1082, column: 51, scope: !11045)
!11054 = !DILocation(line: 1082, column: 46, scope: !11045)
!11055 = !DILocation(line: 1082, column: 17, scope: !11045)
!11056 = !DILocation(line: 1082, column: 33, scope: !11045)
!11057 = !DILocation(line: 1082, column: 23, scope: !11045)
!11058 = !DILocation(line: 1082, column: 37, scope: !11045)
!11059 = !DILocation(line: 1082, column: 49, scope: !11045)
!11060 = !DILocation(line: 1081, column: 62, scope: !11061)
!11061 = !DILexicalBlockFile(scope: !11045, file: !904, discriminator: 2)
!11062 = !DILocation(line: 1081, column: 13, scope: !11061)
!11063 = distinct !{!11063, !11064}
!11064 = !DILocation(line: 1081, column: 13, scope: !11036)
!11065 = !DILocation(line: 1082, column: 65, scope: !11066)
!11066 = !DILexicalBlockFile(scope: !11041, file: !904, discriminator: 1)
!11067 = !DILocation(line: 1080, column: 45, scope: !11068)
!11068 = !DILexicalBlockFile(scope: !11036, file: !904, discriminator: 2)
!11069 = !DILocation(line: 1080, column: 9, scope: !11068)
!11070 = distinct !{!11070, !11071}
!11071 = !DILocation(line: 1080, column: 9, scope: !10947)
!11072 = !DILocation(line: 1083, column: 9, scope: !10947)
!11073 = !DILocation(line: 1085, column: 13, scope: !10983)
!11074 = !DILocation(line: 1085, column: 13, scope: !10947)
!11075 = !DILocation(line: 1086, column: 21, scope: !10981)
!11076 = !DILocation(line: 1086, column: 18, scope: !10981)
!11077 = !DILocation(line: 1086, column: 26, scope: !11078)
!11078 = !DILexicalBlockFile(scope: !10980, file: !904, discriminator: 1)
!11079 = !DILocation(line: 1086, column: 31, scope: !11078)
!11080 = !DILocation(line: 1086, column: 29, scope: !11078)
!11081 = !DILocation(line: 1086, column: 13, scope: !11078)
!11082 = !DILocation(line: 1087, column: 24, scope: !10979)
!11083 = !DILocation(line: 1087, column: 22, scope: !10979)
!11084 = !DILocation(line: 1087, column: 29, scope: !11085)
!11085 = !DILexicalBlockFile(scope: !10978, file: !904, discriminator: 1)
!11086 = !DILocation(line: 1087, column: 49, scope: !11085)
!11087 = !DILocation(line: 1087, column: 33, scope: !11085)
!11088 = !DILocation(line: 1087, column: 39, scope: !11085)
!11089 = !DILocation(line: 1087, column: 53, scope: !11085)
!11090 = !DILocation(line: 1087, column: 31, scope: !11085)
!11091 = !DILocation(line: 1087, column: 17, scope: !11085)
!11092 = !DILocation(line: 1088, column: 38, scope: !10977)
!11093 = !DILocation(line: 1088, column: 59, scope: !10977)
!11094 = !DILocation(line: 1089, column: 55, scope: !10977)
!11095 = !DILocation(line: 1088, column: 29, scope: !10977)
!11096 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !10976)
!11097 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !10976)
!11098 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !10976)
!11099 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !10976)
!11100 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !10976)
!11101 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !10976)
!11102 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !10976)
!11103 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !10976)
!11104 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !10976)
!11105 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !10976)
!11106 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !10976)
!11107 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !10987)
!11108 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !10987)
!11109 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !10987)
!11110 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !10987)
!11111 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !10987)
!11112 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !10987)
!11113 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !10987)
!11114 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !10987)
!11115 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !10987)
!11116 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !10987)
!11117 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !10987)
!11118 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !10987)
!11119 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !10987)
!11120 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !10987)
!11121 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !10987)
!11122 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !10987)
!11123 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !10987)
!11124 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !10987)
!11125 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !10976)
!11126 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !10976)
!11127 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !10976)
!11128 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !10976)
!11129 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !10976)
!11130 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !10976)
!11131 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !10976)
!11132 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !10976)
!11133 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !10976)
!11134 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !10976)
!11135 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !10976)
!11136 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !10976)
!11137 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !10976)
!11138 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !10976)
!11139 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !10976)
!11140 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !10976)
!11141 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !10976)
!11142 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !10976)
!11143 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !10976)
!11144 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !10976)
!11145 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !10976)
!11146 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !10976)
!11147 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !10976)
!11148 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !10976)
!11149 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !10976)
!11150 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !10976)
!11151 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !10976)
!11152 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !10976)
!11153 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !10976)
!11154 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !10976)
!11155 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !10976)
!11156 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !10976)
!11157 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !10976)
!11158 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !10976)
!11159 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !10976)
!11160 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !10976)
!11161 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !10976)
!11162 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !10976)
!11163 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !10976)
!11164 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !10976)
!11165 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !10976)
!11166 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !10985)
!11167 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !10985)
!11168 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !10985)
!11169 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !10985)
!11170 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !10985)
!11171 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !10985)
!11172 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !10985)
!11173 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !10985)
!11174 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !10985)
!11175 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !10985)
!11176 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !10985)
!11177 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !10985)
!11178 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !10985)
!11179 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !10985)
!11180 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !10985)
!11181 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !10985)
!11182 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !10985)
!11183 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !10985)
!11184 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !10976)
!11185 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !10976)
!11186 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !10976)
!11187 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !10976)
!11188 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !10976)
!11189 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !10976)
!11190 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !10976)
!11191 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !10976)
!11192 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !10976)
!11193 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !10976)
!11194 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !10976)
!11195 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !10976)
!11196 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !10976)
!11197 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !10976)
!11198 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !10976)
!11199 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !10976)
!11200 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !10976)
!11201 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !10976)
!11202 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !10976)
!11203 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !10976)
!11204 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !10976)
!11205 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !10976)
!11206 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !10976)
!11207 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !10976)
!11208 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !10976)
!11209 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !10976)
!11210 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !10976)
!11211 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !10976)
!11212 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !10976)
!11213 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !10976)
!11214 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !10976)
!11215 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !10976)
!11216 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !10976)
!11217 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !10976)
!11218 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !10976)
!11219 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !10976)
!11220 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !10976)
!11221 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !10976)
!11222 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !10976)
!11223 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !10976)
!11224 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !10976)
!11225 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !10976)
!11226 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !10976)
!11227 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !10976)
!11228 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !10976)
!11229 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !10976)
!11230 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !10975)
!11231 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !10975)
!11232 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !10975)
!11233 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !10975)
!11234 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !10975)
!11235 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !10975)
!11236 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !10975)
!11237 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !10975)
!11238 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !10975)
!11239 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !10975)
!11240 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !10975)
!11241 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !10975)
!11242 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !10975)
!11243 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !10975)
!11244 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !10975)
!11245 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !10975)
!11246 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !10975)
!11247 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !10975)
!11248 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !10976)
!11249 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !10976)
!11250 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !10976)
!11251 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !10976)
!11252 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !10976)
!11253 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !10976)
!11254 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !10976)
!11255 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !10976)
!11256 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !10976)
!11257 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !10976)
!11258 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !10976)
!11259 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !10976)
!11260 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !10976)
!11261 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !10976)
!11262 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !10976)
!11263 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !10976)
!11264 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !10976)
!11265 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !10976)
!11266 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !10976)
!11267 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !10976)
!11268 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !10976)
!11269 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !10976)
!11270 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !10976)
!11271 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !10976)
!11272 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !10976)
!11273 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !10976)
!11274 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !10976)
!11275 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !10976)
!11276 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !10976)
!11277 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !10976)
!11278 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !10976)
!11279 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !10976)
!11280 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !10976)
!11281 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !10976)
!11282 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !10976)
!11283 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !10976)
!11284 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !10976)
!11285 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !10976)
!11286 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !10976)
!11287 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !10976)
!11288 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !10976)
!11289 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !10976)
!11290 = !DILocation(line: 1088, column: 27, scope: !10977)
!11291 = !DILocation(line: 1090, column: 29, scope: !10977)
!11292 = !DILocation(line: 1090, column: 54, scope: !10977)
!11293 = !DILocation(line: 1090, column: 34, scope: !10977)
!11294 = !DILocation(line: 1090, column: 44, scope: !10977)
!11295 = !DILocation(line: 1090, column: 58, scope: !10977)
!11296 = !DILocation(line: 1090, column: 31, scope: !10977)
!11297 = !DILocation(line: 1090, column: 28, scope: !10977)
!11298 = !DILocation(line: 1090, column: 28, scope: !11299)
!11299 = !DILexicalBlockFile(scope: !10977, file: !904, discriminator: 1)
!11300 = !DILocation(line: 1091, column: 67, scope: !10977)
!11301 = !DILocation(line: 1091, column: 34, scope: !10977)
!11302 = !DILocation(line: 1091, column: 54, scope: !10977)
!11303 = !DILocation(line: 1091, column: 44, scope: !10977)
!11304 = !DILocation(line: 1091, column: 58, scope: !10977)
!11305 = !DILocation(line: 1090, column: 28, scope: !11306)
!11306 = !DILexicalBlockFile(scope: !10977, file: !904, discriminator: 2)
!11307 = !DILocation(line: 1090, column: 28, scope: !11308)
!11308 = !DILexicalBlockFile(scope: !10977, file: !904, discriminator: 3)
!11309 = !DILocation(line: 1090, column: 26, scope: !11308)
!11310 = !DILocation(line: 1092, column: 56, scope: !10977)
!11311 = !DILocation(line: 1092, column: 63, scope: !10977)
!11312 = !DILocation(line: 1092, column: 61, scope: !10977)
!11313 = !DILocation(line: 1092, column: 70, scope: !10977)
!11314 = !DILocation(line: 1092, column: 50, scope: !10977)
!11315 = !DILocation(line: 1092, column: 21, scope: !10977)
!11316 = !DILocation(line: 1092, column: 37, scope: !10977)
!11317 = !DILocation(line: 1092, column: 27, scope: !10977)
!11318 = !DILocation(line: 1092, column: 41, scope: !10977)
!11319 = !DILocation(line: 1092, column: 53, scope: !10977)
!11320 = !DILocation(line: 1093, column: 17, scope: !10977)
!11321 = !DILocation(line: 1087, column: 66, scope: !11322)
!11322 = !DILexicalBlockFile(scope: !10978, file: !904, discriminator: 2)
!11323 = !DILocation(line: 1087, column: 17, scope: !11322)
!11324 = distinct !{!11324, !11325}
!11325 = !DILocation(line: 1087, column: 17, scope: !10980)
!11326 = !DILocation(line: 1093, column: 17, scope: !11327)
!11327 = !DILexicalBlockFile(scope: !10979, file: !904, discriminator: 1)
!11328 = !DILocation(line: 1086, column: 49, scope: !11329)
!11329 = !DILexicalBlockFile(scope: !10980, file: !904, discriminator: 2)
!11330 = !DILocation(line: 1086, column: 13, scope: !11329)
!11331 = distinct !{!11331, !11332}
!11332 = !DILocation(line: 1086, column: 13, scope: !10982)
!11333 = !DILocation(line: 1094, column: 9, scope: !10982)
!11334 = !DILocation(line: 1095, column: 21, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !904, line: 1095, column: 13)
!11336 = distinct !DILexicalBlock(scope: !10983, file: !904, line: 1094, column: 16)
!11337 = !DILocation(line: 1095, column: 18, scope: !11335)
!11338 = !DILocation(line: 1095, column: 26, scope: !11339)
!11339 = !DILexicalBlockFile(scope: !11340, file: !904, discriminator: 1)
!11340 = distinct !DILexicalBlock(scope: !11335, file: !904, line: 1095, column: 13)
!11341 = !DILocation(line: 1095, column: 31, scope: !11339)
!11342 = !DILocation(line: 1095, column: 29, scope: !11339)
!11343 = !DILocation(line: 1095, column: 13, scope: !11339)
!11344 = !DILocation(line: 1096, column: 36, scope: !11340)
!11345 = !DILocation(line: 1096, column: 40, scope: !11340)
!11346 = !DILocation(line: 1096, column: 62, scope: !11340)
!11347 = !DILocation(line: 1096, column: 46, scope: !11340)
!11348 = !DILocation(line: 1096, column: 52, scope: !11340)
!11349 = !DILocation(line: 1096, column: 17, scope: !11340)
!11350 = !DILocation(line: 1095, column: 49, scope: !11351)
!11351 = !DILexicalBlockFile(scope: !11340, file: !904, discriminator: 2)
!11352 = !DILocation(line: 1095, column: 13, scope: !11351)
!11353 = distinct !{!11353, !11354}
!11354 = !DILocation(line: 1095, column: 13, scope: !11336)
!11355 = !DILocation(line: 1098, column: 9, scope: !10947)
!11356 = !DILocation(line: 1100, column: 13, scope: !10958)
!11357 = !DILocation(line: 1100, column: 13, scope: !10947)
!11358 = !DILocation(line: 1101, column: 21, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !904, line: 1101, column: 13)
!11360 = distinct !DILexicalBlock(scope: !10958, file: !904, line: 1100, column: 21)
!11361 = !DILocation(line: 1101, column: 18, scope: !11359)
!11362 = !DILocation(line: 1101, column: 26, scope: !11363)
!11363 = !DILexicalBlockFile(scope: !11364, file: !904, discriminator: 1)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !904, line: 1101, column: 13)
!11365 = !DILocation(line: 1101, column: 31, scope: !11363)
!11366 = !DILocation(line: 1101, column: 29, scope: !11363)
!11367 = !DILocation(line: 1101, column: 13, scope: !11363)
!11368 = !DILocation(line: 1102, column: 37, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11364, file: !904, line: 1102, column: 21)
!11370 = !DILocation(line: 1102, column: 21, scope: !11369)
!11371 = !DILocation(line: 1102, column: 27, scope: !11369)
!11372 = !DILocation(line: 1102, column: 41, scope: !11369)
!11373 = !DILocation(line: 1102, column: 52, scope: !11369)
!11374 = !DILocation(line: 1102, column: 21, scope: !11364)
!11375 = !DILocation(line: 1103, column: 35, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11377, file: !904, line: 1103, column: 25)
!11377 = distinct !DILexicalBlock(scope: !11369, file: !904, line: 1102, column: 57)
!11378 = !DILocation(line: 1103, column: 25, scope: !11376)
!11379 = !DILocation(line: 1103, column: 25, scope: !11377)
!11380 = !DILocation(line: 1104, column: 44, scope: !11376)
!11381 = !DILocation(line: 1104, column: 48, scope: !11376)
!11382 = !DILocation(line: 1104, column: 70, scope: !11376)
!11383 = !DILocation(line: 1104, column: 54, scope: !11376)
!11384 = !DILocation(line: 1104, column: 60, scope: !11376)
!11385 = !DILocation(line: 1104, column: 25, scope: !11376)
!11386 = !DILocation(line: 1106, column: 61, scope: !11376)
!11387 = !DILocation(line: 1106, column: 45, scope: !11376)
!11388 = !DILocation(line: 1106, column: 51, scope: !11376)
!11389 = !DILocation(line: 1107, column: 65, scope: !11376)
!11390 = !DILocation(line: 1107, column: 45, scope: !11376)
!11391 = !DILocation(line: 1107, column: 55, scope: !11376)
!11392 = !DILocation(line: 1106, column: 25, scope: !11376)
!11393 = !DILocation(line: 1108, column: 17, scope: !11377)
!11394 = !DILocation(line: 1102, column: 54, scope: !11395)
!11395 = !DILexicalBlockFile(scope: !11369, file: !904, discriminator: 1)
!11396 = !DILocation(line: 1101, column: 49, scope: !11397)
!11397 = !DILexicalBlockFile(scope: !11364, file: !904, discriminator: 2)
!11398 = !DILocation(line: 1101, column: 13, scope: !11397)
!11399 = distinct !{!11399, !11400}
!11400 = !DILocation(line: 1101, column: 13, scope: !11360)
!11401 = !DILocation(line: 1109, column: 9, scope: !11360)
!11402 = !DILocation(line: 1110, column: 17, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !10957, file: !904, line: 1110, column: 17)
!11404 = !DILocation(line: 1110, column: 23, scope: !11403)
!11405 = !DILocation(line: 1110, column: 36, scope: !11403)
!11406 = !DILocation(line: 1110, column: 47, scope: !11403)
!11407 = !DILocation(line: 1110, column: 17, scope: !10957)
!11408 = !DILocation(line: 1111, column: 36, scope: !11403)
!11409 = !DILocation(line: 1111, column: 40, scope: !11403)
!11410 = !DILocation(line: 1111, column: 46, scope: !11403)
!11411 = !DILocation(line: 1111, column: 52, scope: !11403)
!11412 = !DILocation(line: 1111, column: 17, scope: !11403)
!11413 = !DILocation(line: 1113, column: 21, scope: !10956)
!11414 = !DILocation(line: 1113, column: 18, scope: !10956)
!11415 = !DILocation(line: 1113, column: 26, scope: !11416)
!11416 = !DILexicalBlockFile(scope: !10955, file: !904, discriminator: 1)
!11417 = !DILocation(line: 1113, column: 31, scope: !11416)
!11418 = !DILocation(line: 1113, column: 29, scope: !11416)
!11419 = !DILocation(line: 1113, column: 13, scope: !11416)
!11420 = !DILocation(line: 1114, column: 24, scope: !10954)
!11421 = !DILocation(line: 1114, column: 22, scope: !10954)
!11422 = !DILocation(line: 1114, column: 29, scope: !11423)
!11423 = !DILexicalBlockFile(scope: !10953, file: !904, discriminator: 1)
!11424 = !DILocation(line: 1114, column: 49, scope: !11423)
!11425 = !DILocation(line: 1114, column: 33, scope: !11423)
!11426 = !DILocation(line: 1114, column: 39, scope: !11423)
!11427 = !DILocation(line: 1114, column: 53, scope: !11423)
!11428 = !DILocation(line: 1114, column: 31, scope: !11423)
!11429 = !DILocation(line: 1114, column: 17, scope: !11423)
!11430 = !DILocation(line: 1115, column: 38, scope: !10952)
!11431 = !DILocation(line: 1115, column: 59, scope: !10952)
!11432 = !DILocation(line: 1116, column: 55, scope: !10952)
!11433 = !DILocation(line: 1115, column: 29, scope: !10952)
!11434 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !10951)
!11435 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !10951)
!11436 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !10951)
!11437 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !10951)
!11438 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !10951)
!11439 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !10951)
!11440 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !10951)
!11441 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !10951)
!11442 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !10951)
!11443 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !10951)
!11444 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !10951)
!11445 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !10962)
!11446 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !10962)
!11447 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !10962)
!11448 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !10962)
!11449 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !10962)
!11450 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !10962)
!11451 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !10962)
!11452 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !10962)
!11453 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !10962)
!11454 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !10962)
!11455 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !10962)
!11456 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !10962)
!11457 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !10962)
!11458 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !10962)
!11459 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !10962)
!11460 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !10962)
!11461 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !10962)
!11462 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !10962)
!11463 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !10951)
!11464 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !10951)
!11465 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !10951)
!11466 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !10951)
!11467 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !10951)
!11468 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !10951)
!11469 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !10951)
!11470 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !10951)
!11471 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !10951)
!11472 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !10951)
!11473 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !10951)
!11474 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !10951)
!11475 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !10951)
!11476 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !10951)
!11477 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !10951)
!11478 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !10951)
!11479 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !10951)
!11480 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !10951)
!11481 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !10951)
!11482 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !10951)
!11483 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !10951)
!11484 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !10951)
!11485 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !10951)
!11486 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !10951)
!11487 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !10951)
!11488 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !10951)
!11489 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !10951)
!11490 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !10951)
!11491 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !10951)
!11492 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !10951)
!11493 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !10951)
!11494 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !10951)
!11495 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !10951)
!11496 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !10951)
!11497 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !10951)
!11498 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !10951)
!11499 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !10951)
!11500 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !10951)
!11501 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !10951)
!11502 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !10951)
!11503 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !10951)
!11504 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !10960)
!11505 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !10960)
!11506 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !10960)
!11507 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !10960)
!11508 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !10960)
!11509 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !10960)
!11510 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !10960)
!11511 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !10960)
!11512 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !10960)
!11513 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !10960)
!11514 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !10960)
!11515 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !10960)
!11516 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !10960)
!11517 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !10960)
!11518 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !10960)
!11519 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !10960)
!11520 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !10960)
!11521 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !10960)
!11522 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !10951)
!11523 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !10951)
!11524 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !10951)
!11525 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !10951)
!11526 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !10951)
!11527 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !10951)
!11528 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !10951)
!11529 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !10951)
!11530 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !10951)
!11531 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !10951)
!11532 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !10951)
!11533 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !10951)
!11534 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !10951)
!11535 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !10951)
!11536 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !10951)
!11537 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !10951)
!11538 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !10951)
!11539 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !10951)
!11540 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !10951)
!11541 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !10951)
!11542 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !10951)
!11543 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !10951)
!11544 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !10951)
!11545 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !10951)
!11546 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !10951)
!11547 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !10951)
!11548 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !10951)
!11549 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !10951)
!11550 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !10951)
!11551 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !10951)
!11552 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !10951)
!11553 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !10951)
!11554 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !10951)
!11555 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !10951)
!11556 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !10951)
!11557 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !10951)
!11558 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !10951)
!11559 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !10951)
!11560 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !10951)
!11561 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !10951)
!11562 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !10951)
!11563 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !10951)
!11564 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !10951)
!11565 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !10951)
!11566 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !10951)
!11567 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !10951)
!11568 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !10950)
!11569 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !10950)
!11570 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !10950)
!11571 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !10950)
!11572 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !10950)
!11573 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !10950)
!11574 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !10950)
!11575 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !10950)
!11576 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !10950)
!11577 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !10950)
!11578 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !10950)
!11579 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !10950)
!11580 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !10950)
!11581 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !10950)
!11582 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !10950)
!11583 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !10950)
!11584 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !10950)
!11585 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !10950)
!11586 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !10951)
!11587 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !10951)
!11588 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !10951)
!11589 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !10951)
!11590 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !10951)
!11591 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !10951)
!11592 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !10951)
!11593 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !10951)
!11594 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !10951)
!11595 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !10951)
!11596 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !10951)
!11597 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !10951)
!11598 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !10951)
!11599 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !10951)
!11600 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !10951)
!11601 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !10951)
!11602 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !10951)
!11603 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !10951)
!11604 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !10951)
!11605 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !10951)
!11606 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !10951)
!11607 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !10951)
!11608 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !10951)
!11609 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !10951)
!11610 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !10951)
!11611 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !10951)
!11612 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !10951)
!11613 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !10951)
!11614 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !10951)
!11615 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !10951)
!11616 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !10951)
!11617 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !10951)
!11618 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !10951)
!11619 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !10951)
!11620 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !10951)
!11621 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !10951)
!11622 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !10951)
!11623 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !10951)
!11624 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !10951)
!11625 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !10951)
!11626 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !10951)
!11627 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !10951)
!11628 = !DILocation(line: 1115, column: 27, scope: !10952)
!11629 = !DILocation(line: 1117, column: 29, scope: !10952)
!11630 = !DILocation(line: 1117, column: 50, scope: !10952)
!11631 = !DILocation(line: 1117, column: 53, scope: !10952)
!11632 = !DILocation(line: 1117, column: 34, scope: !10952)
!11633 = !DILocation(line: 1117, column: 40, scope: !10952)
!11634 = !DILocation(line: 1117, column: 58, scope: !10952)
!11635 = !DILocation(line: 1117, column: 31, scope: !10952)
!11636 = !DILocation(line: 1117, column: 28, scope: !10952)
!11637 = !DILocation(line: 1117, column: 28, scope: !11638)
!11638 = !DILexicalBlockFile(scope: !10952, file: !904, discriminator: 1)
!11639 = !DILocation(line: 1118, column: 67, scope: !10952)
!11640 = !DILocation(line: 1118, column: 34, scope: !10952)
!11641 = !DILocation(line: 1118, column: 50, scope: !10952)
!11642 = !DILocation(line: 1118, column: 53, scope: !10952)
!11643 = !DILocation(line: 1118, column: 40, scope: !10952)
!11644 = !DILocation(line: 1118, column: 58, scope: !10952)
!11645 = !DILocation(line: 1117, column: 28, scope: !11646)
!11646 = !DILexicalBlockFile(scope: !10952, file: !904, discriminator: 2)
!11647 = !DILocation(line: 1117, column: 28, scope: !11648)
!11648 = !DILexicalBlockFile(scope: !10952, file: !904, discriminator: 3)
!11649 = !DILocation(line: 1117, column: 26, scope: !11648)
!11650 = !DILocation(line: 1119, column: 56, scope: !10952)
!11651 = !DILocation(line: 1119, column: 63, scope: !10952)
!11652 = !DILocation(line: 1119, column: 61, scope: !10952)
!11653 = !DILocation(line: 1119, column: 70, scope: !10952)
!11654 = !DILocation(line: 1119, column: 50, scope: !10952)
!11655 = !DILocation(line: 1119, column: 21, scope: !10952)
!11656 = !DILocation(line: 1119, column: 37, scope: !10952)
!11657 = !DILocation(line: 1119, column: 27, scope: !10952)
!11658 = !DILocation(line: 1119, column: 41, scope: !10952)
!11659 = !DILocation(line: 1119, column: 53, scope: !10952)
!11660 = !DILocation(line: 1120, column: 17, scope: !10952)
!11661 = !DILocation(line: 1114, column: 66, scope: !11662)
!11662 = !DILexicalBlockFile(scope: !10953, file: !904, discriminator: 2)
!11663 = !DILocation(line: 1114, column: 17, scope: !11662)
!11664 = distinct !{!11664, !11665}
!11665 = !DILocation(line: 1114, column: 17, scope: !10955)
!11666 = !DILocation(line: 1120, column: 17, scope: !11667)
!11667 = !DILexicalBlockFile(scope: !10954, file: !904, discriminator: 1)
!11668 = !DILocation(line: 1113, column: 49, scope: !11669)
!11669 = !DILexicalBlockFile(scope: !10955, file: !904, discriminator: 2)
!11670 = !DILocation(line: 1113, column: 13, scope: !11669)
!11671 = distinct !{!11671, !11672}
!11672 = !DILocation(line: 1113, column: 13, scope: !10957)
!11673 = !DILocation(line: 1122, column: 9, scope: !10947)
!11674 = !DILocation(line: 1124, column: 13, scope: !10946)
!11675 = !DILocation(line: 1124, column: 13, scope: !10947)
!11676 = !DILocation(line: 1125, column: 21, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !904, line: 1125, column: 13)
!11678 = distinct !DILexicalBlock(scope: !10946, file: !904, line: 1124, column: 21)
!11679 = !DILocation(line: 1125, column: 18, scope: !11677)
!11680 = !DILocation(line: 1125, column: 26, scope: !11681)
!11681 = !DILexicalBlockFile(scope: !11682, file: !904, discriminator: 1)
!11682 = distinct !DILexicalBlock(scope: !11677, file: !904, line: 1125, column: 13)
!11683 = !DILocation(line: 1125, column: 31, scope: !11681)
!11684 = !DILocation(line: 1125, column: 29, scope: !11681)
!11685 = !DILocation(line: 1125, column: 13, scope: !11681)
!11686 = !DILocation(line: 1126, column: 53, scope: !11682)
!11687 = !DILocation(line: 1126, column: 37, scope: !11682)
!11688 = !DILocation(line: 1126, column: 43, scope: !11682)
!11689 = !DILocation(line: 1127, column: 57, scope: !11682)
!11690 = !DILocation(line: 1127, column: 37, scope: !11682)
!11691 = !DILocation(line: 1127, column: 47, scope: !11682)
!11692 = !DILocation(line: 1126, column: 17, scope: !11682)
!11693 = !DILocation(line: 1125, column: 49, scope: !11694)
!11694 = !DILexicalBlockFile(scope: !11682, file: !904, discriminator: 2)
!11695 = !DILocation(line: 1125, column: 13, scope: !11694)
!11696 = distinct !{!11696, !11697}
!11697 = !DILocation(line: 1125, column: 13, scope: !11678)
!11698 = !DILocation(line: 1128, column: 9, scope: !11678)
!11699 = !DILocation(line: 1129, column: 35, scope: !10945)
!11700 = !DILocation(line: 1129, column: 26, scope: !10945)
!11701 = !DILocation(line: 1129, column: 24, scope: !10945)
!11702 = !DILocation(line: 1130, column: 32, scope: !10945)
!11703 = !DILocation(line: 1130, column: 23, scope: !10945)
!11704 = !DILocation(line: 1130, column: 21, scope: !10945)
!11705 = !DILocation(line: 1132, column: 21, scope: !10944)
!11706 = !DILocation(line: 1132, column: 18, scope: !10944)
!11707 = !DILocation(line: 1132, column: 26, scope: !11708)
!11708 = !DILexicalBlockFile(scope: !10943, file: !904, discriminator: 1)
!11709 = !DILocation(line: 1132, column: 31, scope: !11708)
!11710 = !DILocation(line: 1132, column: 29, scope: !11708)
!11711 = !DILocation(line: 1132, column: 13, scope: !11708)
!11712 = !DILocation(line: 1133, column: 24, scope: !10942)
!11713 = !DILocation(line: 1133, column: 22, scope: !10942)
!11714 = !DILocation(line: 1133, column: 29, scope: !11715)
!11715 = !DILexicalBlockFile(scope: !10941, file: !904, discriminator: 1)
!11716 = !DILocation(line: 1133, column: 49, scope: !11715)
!11717 = !DILocation(line: 1133, column: 33, scope: !11715)
!11718 = !DILocation(line: 1133, column: 39, scope: !11715)
!11719 = !DILocation(line: 1133, column: 53, scope: !11715)
!11720 = !DILocation(line: 1133, column: 31, scope: !11715)
!11721 = !DILocation(line: 1133, column: 17, scope: !11715)
!11722 = !DILocation(line: 1134, column: 55, scope: !10940)
!11723 = !DILocation(line: 1134, column: 75, scope: !10940)
!11724 = !DILocation(line: 1134, column: 79, scope: !10940)
!11725 = !DILocation(line: 1134, column: 65, scope: !10940)
!11726 = !DILocation(line: 414, column: 12, scope: !3955, inlinedAt: !10939)
!11727 = !DILocation(line: 414, column: 25, scope: !4377, inlinedAt: !10939)
!11728 = !DILocation(line: 414, column: 28, scope: !4377, inlinedAt: !10939)
!11729 = !DILocation(line: 414, column: 16, scope: !4377, inlinedAt: !10939)
!11730 = !DILocation(line: 414, column: 12, scope: !4377, inlinedAt: !10939)
!11731 = !DILocation(line: 414, column: 12, scope: !4382, inlinedAt: !10939)
!11732 = !DILocation(line: 414, column: 12, scope: !4384, inlinedAt: !10939)
!11733 = !DILocation(line: 1134, column: 63, scope: !10940)
!11734 = !DILocation(line: 1134, column: 50, scope: !10940)
!11735 = !DILocation(line: 1134, column: 21, scope: !10940)
!11736 = !DILocation(line: 1134, column: 37, scope: !10940)
!11737 = !DILocation(line: 1134, column: 27, scope: !10940)
!11738 = !DILocation(line: 1134, column: 41, scope: !10940)
!11739 = !DILocation(line: 1134, column: 53, scope: !10940)
!11740 = !DILocation(line: 1135, column: 54, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !10940, file: !904, line: 1135, column: 25)
!11742 = !DILocation(line: 1135, column: 25, scope: !11741)
!11743 = !DILocation(line: 1135, column: 41, scope: !11741)
!11744 = !DILocation(line: 1135, column: 31, scope: !11741)
!11745 = !DILocation(line: 1135, column: 45, scope: !11741)
!11746 = !DILocation(line: 1135, column: 57, scope: !11741)
!11747 = !DILocation(line: 1135, column: 25, scope: !10940)
!11748 = !DILocation(line: 1136, column: 25, scope: !11741)
!11749 = !DILocation(line: 1137, column: 17, scope: !10940)
!11750 = !DILocation(line: 1133, column: 66, scope: !11751)
!11751 = !DILexicalBlockFile(scope: !10941, file: !904, discriminator: 2)
!11752 = !DILocation(line: 1133, column: 17, scope: !11751)
!11753 = distinct !{!11753, !11754}
!11754 = !DILocation(line: 1133, column: 17, scope: !10943)
!11755 = !DILocation(line: 1137, column: 17, scope: !11756)
!11756 = !DILexicalBlockFile(scope: !10942, file: !904, discriminator: 1)
!11757 = !DILocation(line: 1132, column: 49, scope: !11758)
!11758 = !DILexicalBlockFile(scope: !10943, file: !904, discriminator: 2)
!11759 = !DILocation(line: 1132, column: 13, scope: !11758)
!11760 = distinct !{!11760, !11761}
!11761 = !DILocation(line: 1132, column: 13, scope: !10945)
!11762 = !DILocation(line: 1139, column: 9, scope: !10947)
!11763 = !DILocation(line: 1142, column: 5, scope: !10937)
!11764 = !DILocation(line: 1143, column: 1, scope: !10937)
!11765 = distinct !DISubprogram(name: "decode_gainc_loc_codes", scope: !904, file: !904, line: 1208, type: !11766, isLocal: true, isDefinition: true, scopeLine: 1211, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!11766 = !DISubroutineType(types: !11767)
!11767 = !{!888, !1654, !1664, !888, !888, !1782}
!11768 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11769)
!11769 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11770)
!11770 = distinct !DILocation(line: 1305, column: 29, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !904, line: 1299, column: 55)
!11772 = distinct !DILexicalBlock(scope: !11773, file: !904, line: 1299, column: 17)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !904, line: 1299, column: 17)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !904, line: 1286, column: 53)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !904, line: 1286, column: 13)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !904, line: 1286, column: 13)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !904, line: 1281, column: 16)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !904, line: 1269, column: 13)
!11779 = distinct !DILexicalBlock(scope: !11765, file: !904, line: 1218, column: 30)
!11780 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11781)
!11781 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11770)
!11782 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11783)
!11783 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11770)
!11784 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !11770)
!11785 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !11770)
!11786 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !11770)
!11787 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !11770)
!11788 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !11770)
!11789 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !11770)
!11790 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !11770)
!11791 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !11770)
!11792 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !11770)
!11793 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !11770)
!11794 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !11770)
!11795 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11796)
!11796 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11797)
!11797 = distinct !DILocation(line: 1293, column: 25, scope: !11774)
!11798 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11799)
!11799 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11797)
!11800 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11801)
!11801 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11797)
!11802 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !11797)
!11803 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !11797)
!11804 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !11797)
!11805 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !11797)
!11806 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !11797)
!11807 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !11797)
!11808 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !11797)
!11809 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !11797)
!11810 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !11797)
!11811 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !11797)
!11812 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !11797)
!11813 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11814)
!11814 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11815)
!11815 = distinct !DILocation(line: 1256, column: 33, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11817, file: !904, line: 1253, column: 28)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !904, line: 1240, column: 25)
!11818 = distinct !DILexicalBlock(scope: !11819, file: !904, line: 1238, column: 55)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !904, line: 1238, column: 17)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !904, line: 1238, column: 17)
!11821 = distinct !DILexicalBlock(scope: !11822, file: !904, line: 1226, column: 53)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !904, line: 1226, column: 13)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !904, line: 1226, column: 13)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !904, line: 1225, column: 21)
!11825 = distinct !DILexicalBlock(scope: !11779, file: !904, line: 1225, column: 13)
!11826 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11827)
!11827 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11815)
!11828 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11829)
!11829 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11815)
!11830 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !11815)
!11831 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !11815)
!11832 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !11815)
!11833 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !11815)
!11834 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !11815)
!11835 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !11815)
!11836 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !11815)
!11837 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !11815)
!11838 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !11815)
!11839 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !11815)
!11840 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !11815)
!11841 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11842)
!11842 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 1244, column: 33, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !904, line: 1242, column: 44)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !904, line: 1242, column: 29)
!11846 = distinct !DILexicalBlock(scope: !11817, file: !904, line: 1240, column: 66)
!11847 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11848)
!11848 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11843)
!11849 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11850)
!11850 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11843)
!11851 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !11843)
!11852 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !11843)
!11853 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !11843)
!11854 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !11843)
!11855 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !11843)
!11856 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !11843)
!11857 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !11843)
!11858 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !11843)
!11859 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !11843)
!11860 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !11843)
!11861 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !11843)
!11862 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11863)
!11863 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11864)
!11864 = distinct !DILocation(line: 1233, column: 25, scope: !11821)
!11865 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11866)
!11866 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11864)
!11867 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !11868)
!11868 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11864)
!11869 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !11864)
!11870 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !11864)
!11871 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !11864)
!11872 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !11864)
!11873 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !11864)
!11874 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !11864)
!11875 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !11864)
!11876 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !11864)
!11877 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !11864)
!11878 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !11864)
!11879 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !11864)
!11880 = !DILocalVariable(name: "gb", arg: 1, scope: !11765, file: !904, line: 1208, type: !1654)
!11881 = !DILocation(line: 1208, column: 50, scope: !11765)
!11882 = !DILocalVariable(name: "ctx", arg: 2, scope: !11765, file: !904, line: 1208, type: !1664)
!11883 = !DILocation(line: 1208, column: 74, scope: !11765)
!11884 = !DILocalVariable(name: "ch_num", arg: 3, scope: !11765, file: !904, line: 1209, type: !888)
!11885 = !DILocation(line: 1209, column: 39, scope: !11765)
!11886 = !DILocalVariable(name: "coded_subbands", arg: 4, scope: !11765, file: !904, line: 1209, type: !888)
!11887 = !DILocation(line: 1209, column: 51, scope: !11765)
!11888 = !DILocalVariable(name: "avctx", arg: 5, scope: !11765, file: !904, line: 1210, type: !1782)
!11889 = !DILocation(line: 1210, column: 51, scope: !11765)
!11890 = !DILocalVariable(name: "sb", scope: !11765, file: !904, line: 1212, type: !888)
!11891 = !DILocation(line: 1212, column: 9, scope: !11765)
!11892 = !DILocalVariable(name: "i", scope: !11765, file: !904, line: 1212, type: !888)
!11893 = !DILocation(line: 1212, column: 13, scope: !11765)
!11894 = !DILocalVariable(name: "delta", scope: !11765, file: !904, line: 1212, type: !888)
!11895 = !DILocation(line: 1212, column: 16, scope: !11765)
!11896 = !DILocalVariable(name: "delta_bits", scope: !11765, file: !904, line: 1212, type: !888)
!11897 = !DILocation(line: 1212, column: 23, scope: !11765)
!11898 = !DILocalVariable(name: "min_val", scope: !11765, file: !904, line: 1212, type: !888)
!11899 = !DILocation(line: 1212, column: 35, scope: !11765)
!11900 = !DILocalVariable(name: "pred", scope: !11765, file: !904, line: 1212, type: !888)
!11901 = !DILocation(line: 1212, column: 44, scope: !11765)
!11902 = !DILocalVariable(name: "more_than_ref", scope: !11765, file: !904, line: 1212, type: !888)
!11903 = !DILocation(line: 1212, column: 50, scope: !11765)
!11904 = !DILocalVariable(name: "dst", scope: !11765, file: !904, line: 1213, type: !1719)
!11905 = !DILocation(line: 1213, column: 20, scope: !11765)
!11906 = !DILocalVariable(name: "ref", scope: !11765, file: !904, line: 1213, type: !1719)
!11907 = !DILocation(line: 1213, column: 26, scope: !11765)
!11908 = !DILocalVariable(name: "tab", scope: !11765, file: !904, line: 1214, type: !1536)
!11909 = !DILocation(line: 1214, column: 10, scope: !11765)
!11910 = !DILocalVariable(name: "chan", scope: !11765, file: !904, line: 1215, type: !2870)
!11911 = !DILocation(line: 1215, column: 24, scope: !11765)
!11912 = !DILocation(line: 1215, column: 46, scope: !11765)
!11913 = !DILocation(line: 1215, column: 32, scope: !11765)
!11914 = !DILocation(line: 1215, column: 37, scope: !11765)
!11915 = !DILocalVariable(name: "ref_chan", scope: !11765, file: !904, line: 1216, type: !2870)
!11916 = !DILocation(line: 1216, column: 24, scope: !11765)
!11917 = !DILocation(line: 1216, column: 36, scope: !11765)
!11918 = !DILocation(line: 1216, column: 41, scope: !11765)
!11919 = !DILocation(line: 1218, column: 22, scope: !11765)
!11920 = !DILocation(line: 1218, column: 13, scope: !11765)
!11921 = !DILocation(line: 1218, column: 5, scope: !11765)
!11922 = !DILocation(line: 1220, column: 17, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11779, file: !904, line: 1220, column: 9)
!11924 = !DILocation(line: 1220, column: 14, scope: !11923)
!11925 = !DILocation(line: 1220, column: 22, scope: !11926)
!11926 = !DILexicalBlockFile(scope: !11927, file: !904, discriminator: 1)
!11927 = distinct !DILexicalBlock(scope: !11923, file: !904, line: 1220, column: 9)
!11928 = !DILocation(line: 1220, column: 27, scope: !11926)
!11929 = !DILocation(line: 1220, column: 25, scope: !11926)
!11930 = !DILocation(line: 1220, column: 9, scope: !11926)
!11931 = !DILocation(line: 1221, column: 20, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11927, file: !904, line: 1221, column: 13)
!11933 = !DILocation(line: 1221, column: 18, scope: !11932)
!11934 = !DILocation(line: 1221, column: 25, scope: !11935)
!11935 = !DILexicalBlockFile(scope: !11936, file: !904, discriminator: 1)
!11936 = distinct !DILexicalBlock(scope: !11932, file: !904, line: 1221, column: 13)
!11937 = !DILocation(line: 1221, column: 45, scope: !11935)
!11938 = !DILocation(line: 1221, column: 29, scope: !11935)
!11939 = !DILocation(line: 1221, column: 35, scope: !11935)
!11940 = !DILocation(line: 1221, column: 49, scope: !11935)
!11941 = !DILocation(line: 1221, column: 27, scope: !11935)
!11942 = !DILocation(line: 1221, column: 13, scope: !11935)
!11943 = !DILocation(line: 1222, column: 33, scope: !11936)
!11944 = !DILocation(line: 1222, column: 37, scope: !11936)
!11945 = !DILocation(line: 1222, column: 59, scope: !11936)
!11946 = !DILocation(line: 1222, column: 43, scope: !11936)
!11947 = !DILocation(line: 1222, column: 49, scope: !11936)
!11948 = !DILocation(line: 1222, column: 64, scope: !11936)
!11949 = !DILocation(line: 1222, column: 17, scope: !11936)
!11950 = !DILocation(line: 1221, column: 62, scope: !11951)
!11951 = !DILexicalBlockFile(scope: !11936, file: !904, discriminator: 2)
!11952 = !DILocation(line: 1221, column: 13, scope: !11951)
!11953 = distinct !{!11953, !11954}
!11954 = !DILocation(line: 1221, column: 13, scope: !11927)
!11955 = !DILocation(line: 1222, column: 65, scope: !11956)
!11956 = !DILexicalBlockFile(scope: !11932, file: !904, discriminator: 1)
!11957 = !DILocation(line: 1220, column: 45, scope: !11958)
!11958 = !DILexicalBlockFile(scope: !11927, file: !904, discriminator: 2)
!11959 = !DILocation(line: 1220, column: 9, scope: !11958)
!11960 = distinct !{!11960, !11961}
!11961 = !DILocation(line: 1220, column: 9, scope: !11779)
!11962 = !DILocation(line: 1223, column: 9, scope: !11779)
!11963 = !DILocation(line: 1225, column: 13, scope: !11825)
!11964 = !DILocation(line: 1225, column: 13, scope: !11779)
!11965 = !DILocation(line: 1226, column: 21, scope: !11823)
!11966 = !DILocation(line: 1226, column: 18, scope: !11823)
!11967 = !DILocation(line: 1226, column: 26, scope: !11968)
!11968 = !DILexicalBlockFile(scope: !11822, file: !904, discriminator: 1)
!11969 = !DILocation(line: 1226, column: 31, scope: !11968)
!11970 = !DILocation(line: 1226, column: 29, scope: !11968)
!11971 = !DILocation(line: 1226, column: 13, scope: !11968)
!11972 = !DILocation(line: 1227, column: 37, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11821, file: !904, line: 1227, column: 21)
!11974 = !DILocation(line: 1227, column: 21, scope: !11973)
!11975 = !DILocation(line: 1227, column: 27, scope: !11973)
!11976 = !DILocation(line: 1227, column: 41, scope: !11973)
!11977 = !DILocation(line: 1227, column: 52, scope: !11973)
!11978 = !DILocation(line: 1227, column: 21, scope: !11821)
!11979 = !DILocation(line: 1228, column: 21, scope: !11973)
!11980 = !DILocation(line: 1229, column: 40, scope: !11821)
!11981 = !DILocation(line: 1229, column: 24, scope: !11821)
!11982 = !DILocation(line: 1229, column: 30, scope: !11821)
!11983 = !DILocation(line: 1229, column: 21, scope: !11821)
!11984 = !DILocation(line: 1230, column: 44, scope: !11821)
!11985 = !DILocation(line: 1230, column: 24, scope: !11821)
!11986 = !DILocation(line: 1230, column: 34, scope: !11821)
!11987 = !DILocation(line: 1230, column: 21, scope: !11821)
!11988 = !DILocation(line: 1233, column: 34, scope: !11821)
!11989 = !DILocation(line: 1233, column: 56, scope: !11821)
!11990 = !DILocation(line: 1234, column: 52, scope: !11821)
!11991 = !DILocation(line: 1233, column: 25, scope: !11821)
!11992 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !11864)
!11993 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !11864)
!11994 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !11864)
!11995 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !11864)
!11996 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !11864)
!11997 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !11864)
!11998 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !11864)
!11999 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !11864)
!12000 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !11864)
!12001 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !11864)
!12002 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11864)
!12003 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11868)
!12004 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11868)
!12005 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11868)
!12006 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11868)
!12007 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11868)
!12008 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11868)
!12009 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11868)
!12010 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11868)
!12011 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11868)
!12012 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11868)
!12013 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11868)
!12014 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11868)
!12015 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11868)
!12016 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11868)
!12017 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11868)
!12018 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11868)
!12019 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11868)
!12020 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11868)
!12021 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !11864)
!12022 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !11864)
!12023 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !11864)
!12024 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !11864)
!12025 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !11864)
!12026 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !11864)
!12027 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !11864)
!12028 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !11864)
!12029 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !11864)
!12030 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !11864)
!12031 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !11864)
!12032 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !11864)
!12033 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !11864)
!12034 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !11864)
!12035 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !11864)
!12036 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !11864)
!12037 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !11864)
!12038 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !11864)
!12039 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !11864)
!12040 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !11864)
!12041 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !11864)
!12042 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !11864)
!12043 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !11864)
!12044 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !11864)
!12045 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !11864)
!12046 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !11864)
!12047 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !11864)
!12048 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !11864)
!12049 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !11864)
!12050 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !11864)
!12051 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !11864)
!12052 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !11864)
!12053 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !11864)
!12054 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !11864)
!12055 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !11864)
!12056 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !11864)
!12057 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !11864)
!12058 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !11864)
!12059 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !11864)
!12060 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !11864)
!12061 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11864)
!12062 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11866)
!12063 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11866)
!12064 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11866)
!12065 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11866)
!12066 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11866)
!12067 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11866)
!12068 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11866)
!12069 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11866)
!12070 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11866)
!12071 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11866)
!12072 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11866)
!12073 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11866)
!12074 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11866)
!12075 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11866)
!12076 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11866)
!12077 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11866)
!12078 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11866)
!12079 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11866)
!12080 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !11864)
!12081 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !11864)
!12082 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !11864)
!12083 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !11864)
!12084 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !11864)
!12085 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !11864)
!12086 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !11864)
!12087 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !11864)
!12088 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !11864)
!12089 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !11864)
!12090 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !11864)
!12091 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !11864)
!12092 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !11864)
!12093 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !11864)
!12094 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !11864)
!12095 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !11864)
!12096 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !11864)
!12097 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !11864)
!12098 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !11864)
!12099 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !11864)
!12100 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !11864)
!12101 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !11864)
!12102 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !11864)
!12103 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !11864)
!12104 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !11864)
!12105 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !11864)
!12106 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !11864)
!12107 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !11864)
!12108 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !11864)
!12109 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !11864)
!12110 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !11864)
!12111 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !11864)
!12112 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !11864)
!12113 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !11864)
!12114 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !11864)
!12115 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !11864)
!12116 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !11864)
!12117 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !11864)
!12118 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !11864)
!12119 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !11864)
!12120 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !11864)
!12121 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !11864)
!12122 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !11864)
!12123 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !11864)
!12124 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !11864)
!12125 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11864)
!12126 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11863)
!12127 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11863)
!12128 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11863)
!12129 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11863)
!12130 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11863)
!12131 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11863)
!12132 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11863)
!12133 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11863)
!12134 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11863)
!12135 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11863)
!12136 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11863)
!12137 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11863)
!12138 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11863)
!12139 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11863)
!12140 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11863)
!12141 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11863)
!12142 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11863)
!12143 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11863)
!12144 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !11864)
!12145 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !11864)
!12146 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !11864)
!12147 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !11864)
!12148 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !11864)
!12149 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !11864)
!12150 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !11864)
!12151 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !11864)
!12152 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !11864)
!12153 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !11864)
!12154 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !11864)
!12155 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !11864)
!12156 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !11864)
!12157 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !11864)
!12158 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !11864)
!12159 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !11864)
!12160 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !11864)
!12161 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !11864)
!12162 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !11864)
!12163 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !11864)
!12164 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !11864)
!12165 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !11864)
!12166 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !11864)
!12167 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !11864)
!12168 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !11864)
!12169 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !11864)
!12170 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !11864)
!12171 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !11864)
!12172 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !11864)
!12173 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !11864)
!12174 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !11864)
!12175 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !11864)
!12176 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !11864)
!12177 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !11864)
!12178 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !11864)
!12179 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !11864)
!12180 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !11864)
!12181 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !11864)
!12182 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !11864)
!12183 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !11864)
!12184 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !11864)
!12185 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !11864)
!12186 = !DILocation(line: 1233, column: 23, scope: !11821)
!12187 = !DILocation(line: 1235, column: 24, scope: !11821)
!12188 = !DILocation(line: 1235, column: 29, scope: !11821)
!12189 = !DILocation(line: 1235, column: 40, scope: !11821)
!12190 = !DILocation(line: 1235, column: 46, scope: !12191)
!12191 = !DILexicalBlockFile(scope: !11821, file: !904, discriminator: 1)
!12192 = !DILocation(line: 1235, column: 51, scope: !12191)
!12193 = !DILocation(line: 1235, column: 24, scope: !12191)
!12194 = !DILocation(line: 1235, column: 24, scope: !12195)
!12195 = !DILexicalBlockFile(scope: !11821, file: !904, discriminator: 2)
!12196 = !DILocation(line: 1235, column: 24, scope: !12197)
!12197 = !DILexicalBlockFile(scope: !11821, file: !904, discriminator: 3)
!12198 = !DILocation(line: 1235, column: 22, scope: !12197)
!12199 = !DILocation(line: 1236, column: 37, scope: !11821)
!12200 = !DILocation(line: 1236, column: 44, scope: !11821)
!12201 = !DILocation(line: 1236, column: 42, scope: !11821)
!12202 = !DILocation(line: 1236, column: 51, scope: !11821)
!12203 = !DILocation(line: 1236, column: 17, scope: !11821)
!12204 = !DILocation(line: 1236, column: 22, scope: !11821)
!12205 = !DILocation(line: 1236, column: 34, scope: !11821)
!12206 = !DILocation(line: 1238, column: 24, scope: !11820)
!12207 = !DILocation(line: 1238, column: 22, scope: !11820)
!12208 = !DILocation(line: 1238, column: 29, scope: !12209)
!12209 = !DILexicalBlockFile(scope: !11819, file: !904, discriminator: 1)
!12210 = !DILocation(line: 1238, column: 33, scope: !12209)
!12211 = !DILocation(line: 1238, column: 38, scope: !12209)
!12212 = !DILocation(line: 1238, column: 31, scope: !12209)
!12213 = !DILocation(line: 1238, column: 17, scope: !12209)
!12214 = !DILocation(line: 1239, column: 37, scope: !11818)
!12215 = !DILocation(line: 1239, column: 42, scope: !11818)
!12216 = !DILocation(line: 1239, column: 47, scope: !11818)
!12217 = !DILocation(line: 1239, column: 39, scope: !11818)
!12218 = !DILocation(line: 1239, column: 35, scope: !11818)
!12219 = !DILocation(line: 1240, column: 39, scope: !11817)
!12220 = !DILocation(line: 1240, column: 25, scope: !11817)
!12221 = !DILocation(line: 1240, column: 30, scope: !11817)
!12222 = !DILocation(line: 1240, column: 58, scope: !11817)
!12223 = !DILocation(line: 1240, column: 60, scope: !11817)
!12224 = !DILocation(line: 1240, column: 44, scope: !11817)
!12225 = !DILocation(line: 1240, column: 49, scope: !11817)
!12226 = !DILocation(line: 1240, column: 42, scope: !11817)
!12227 = !DILocation(line: 1240, column: 25, scope: !11818)
!12228 = !DILocation(line: 1242, column: 29, scope: !11845)
!12229 = !DILocation(line: 1242, column: 29, scope: !11846)
!12230 = !DILocation(line: 1244, column: 42, scope: !11844)
!12231 = !DILocation(line: 1244, column: 63, scope: !11844)
!12232 = !DILocation(line: 1245, column: 59, scope: !11844)
!12233 = !DILocation(line: 1244, column: 33, scope: !11844)
!12234 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !11843)
!12235 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !11843)
!12236 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !11843)
!12237 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !11843)
!12238 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !11843)
!12239 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !11843)
!12240 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !11843)
!12241 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !11843)
!12242 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !11843)
!12243 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !11843)
!12244 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11843)
!12245 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11850)
!12246 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11850)
!12247 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11850)
!12248 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11850)
!12249 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11850)
!12250 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11850)
!12251 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11850)
!12252 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11850)
!12253 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11850)
!12254 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11850)
!12255 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11850)
!12256 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11850)
!12257 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11850)
!12258 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11850)
!12259 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11850)
!12260 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11850)
!12261 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11850)
!12262 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11850)
!12263 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !11843)
!12264 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !11843)
!12265 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !11843)
!12266 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !11843)
!12267 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !11843)
!12268 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !11843)
!12269 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !11843)
!12270 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !11843)
!12271 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !11843)
!12272 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !11843)
!12273 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !11843)
!12274 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !11843)
!12275 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !11843)
!12276 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !11843)
!12277 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !11843)
!12278 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !11843)
!12279 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !11843)
!12280 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !11843)
!12281 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !11843)
!12282 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !11843)
!12283 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !11843)
!12284 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !11843)
!12285 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !11843)
!12286 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !11843)
!12287 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !11843)
!12288 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !11843)
!12289 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !11843)
!12290 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !11843)
!12291 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !11843)
!12292 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !11843)
!12293 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !11843)
!12294 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !11843)
!12295 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !11843)
!12296 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !11843)
!12297 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !11843)
!12298 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !11843)
!12299 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !11843)
!12300 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !11843)
!12301 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !11843)
!12302 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !11843)
!12303 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11843)
!12304 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11848)
!12305 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11848)
!12306 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11848)
!12307 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11848)
!12308 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11848)
!12309 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11848)
!12310 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11848)
!12311 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11848)
!12312 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11848)
!12313 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11848)
!12314 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11848)
!12315 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11848)
!12316 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11848)
!12317 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11848)
!12318 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11848)
!12319 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11848)
!12320 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11848)
!12321 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11848)
!12322 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !11843)
!12323 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !11843)
!12324 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !11843)
!12325 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !11843)
!12326 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !11843)
!12327 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !11843)
!12328 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !11843)
!12329 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !11843)
!12330 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !11843)
!12331 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !11843)
!12332 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !11843)
!12333 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !11843)
!12334 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !11843)
!12335 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !11843)
!12336 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !11843)
!12337 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !11843)
!12338 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !11843)
!12339 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !11843)
!12340 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !11843)
!12341 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !11843)
!12342 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !11843)
!12343 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !11843)
!12344 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !11843)
!12345 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !11843)
!12346 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !11843)
!12347 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !11843)
!12348 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !11843)
!12349 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !11843)
!12350 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !11843)
!12351 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !11843)
!12352 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !11843)
!12353 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !11843)
!12354 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !11843)
!12355 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !11843)
!12356 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !11843)
!12357 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !11843)
!12358 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !11843)
!12359 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !11843)
!12360 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !11843)
!12361 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !11843)
!12362 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !11843)
!12363 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !11843)
!12364 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !11843)
!12365 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !11843)
!12366 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !11843)
!12367 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11843)
!12368 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11842)
!12369 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11842)
!12370 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11842)
!12371 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11842)
!12372 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11842)
!12373 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11842)
!12374 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11842)
!12375 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11842)
!12376 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11842)
!12377 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11842)
!12378 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11842)
!12379 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11842)
!12380 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11842)
!12381 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11842)
!12382 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11842)
!12383 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11842)
!12384 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11842)
!12385 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11842)
!12386 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !11843)
!12387 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !11843)
!12388 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !11843)
!12389 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !11843)
!12390 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !11843)
!12391 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !11843)
!12392 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !11843)
!12393 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !11843)
!12394 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !11843)
!12395 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !11843)
!12396 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !11843)
!12397 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !11843)
!12398 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !11843)
!12399 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !11843)
!12400 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !11843)
!12401 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !11843)
!12402 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !11843)
!12403 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !11843)
!12404 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !11843)
!12405 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !11843)
!12406 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !11843)
!12407 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !11843)
!12408 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !11843)
!12409 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !11843)
!12410 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !11843)
!12411 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !11843)
!12412 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !11843)
!12413 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !11843)
!12414 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !11843)
!12415 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !11843)
!12416 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !11843)
!12417 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !11843)
!12418 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !11843)
!12419 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !11843)
!12420 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !11843)
!12421 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !11843)
!12422 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !11843)
!12423 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !11843)
!12424 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !11843)
!12425 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !11843)
!12426 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !11843)
!12427 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !11843)
!12428 = !DILocation(line: 1243, column: 35, scope: !11844)
!12429 = !DILocation(line: 1246, column: 62, scope: !11844)
!12430 = !DILocation(line: 1246, column: 64, scope: !11844)
!12431 = !DILocation(line: 1246, column: 48, scope: !11844)
!12432 = !DILocation(line: 1246, column: 53, scope: !11844)
!12433 = !DILocation(line: 1246, column: 71, scope: !11844)
!12434 = !DILocation(line: 1246, column: 69, scope: !11844)
!12435 = !DILocation(line: 1246, column: 43, scope: !11844)
!12436 = !DILocation(line: 1246, column: 29, scope: !11844)
!12437 = !DILocation(line: 1246, column: 34, scope: !11844)
!12438 = !DILocation(line: 1246, column: 46, scope: !11844)
!12439 = !DILocation(line: 1247, column: 25, scope: !11844)
!12440 = !DILocation(line: 1248, column: 43, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12442, file: !904, line: 1248, column: 33)
!12442 = distinct !DILexicalBlock(scope: !11845, file: !904, line: 1247, column: 32)
!12443 = !DILocation(line: 1248, column: 33, scope: !12441)
!12444 = !DILocation(line: 1248, column: 33, scope: !12442)
!12445 = !DILocation(line: 1249, column: 49, scope: !12441)
!12446 = !DILocation(line: 1249, column: 53, scope: !12441)
!12447 = !DILocation(line: 1249, column: 58, scope: !12441)
!12448 = !DILocation(line: 1249, column: 63, scope: !12441)
!12449 = !DILocation(line: 1249, column: 33, scope: !12441)
!12450 = !DILocation(line: 1251, column: 66, scope: !12441)
!12451 = !DILocation(line: 1251, column: 52, scope: !12441)
!12452 = !DILocation(line: 1251, column: 57, scope: !12441)
!12453 = !DILocation(line: 1251, column: 47, scope: !12441)
!12454 = !DILocation(line: 1251, column: 33, scope: !12441)
!12455 = !DILocation(line: 1251, column: 38, scope: !12441)
!12456 = !DILocation(line: 1251, column: 50, scope: !12441)
!12457 = !DILocation(line: 1253, column: 21, scope: !11846)
!12458 = !DILocation(line: 1254, column: 31, scope: !11816)
!12459 = !DILocation(line: 1254, column: 29, scope: !11816)
!12460 = !DILocation(line: 1256, column: 42, scope: !11816)
!12461 = !DILocation(line: 1256, column: 46, scope: !11816)
!12462 = !DILocation(line: 1256, column: 51, scope: !11816)
!12463 = !DILocation(line: 1256, column: 58, scope: !11816)
!12464 = !DILocation(line: 1256, column: 63, scope: !11816)
!12465 = !DILocation(line: 1256, column: 33, scope: !11816)
!12466 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !11815)
!12467 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !11815)
!12468 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !11815)
!12469 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !11815)
!12470 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !11815)
!12471 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !11815)
!12472 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !11815)
!12473 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !11815)
!12474 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !11815)
!12475 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !11815)
!12476 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11815)
!12477 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11829)
!12478 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11829)
!12479 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11829)
!12480 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11829)
!12481 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11829)
!12482 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11829)
!12483 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11829)
!12484 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11829)
!12485 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11829)
!12486 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11829)
!12487 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11829)
!12488 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11829)
!12489 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11829)
!12490 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11829)
!12491 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11829)
!12492 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11829)
!12493 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11829)
!12494 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11829)
!12495 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !11815)
!12496 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !11815)
!12497 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !11815)
!12498 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !11815)
!12499 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !11815)
!12500 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !11815)
!12501 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !11815)
!12502 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !11815)
!12503 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !11815)
!12504 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !11815)
!12505 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !11815)
!12506 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !11815)
!12507 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !11815)
!12508 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !11815)
!12509 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !11815)
!12510 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !11815)
!12511 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !11815)
!12512 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !11815)
!12513 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !11815)
!12514 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !11815)
!12515 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !11815)
!12516 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !11815)
!12517 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !11815)
!12518 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !11815)
!12519 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !11815)
!12520 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !11815)
!12521 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !11815)
!12522 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !11815)
!12523 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !11815)
!12524 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !11815)
!12525 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !11815)
!12526 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !11815)
!12527 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !11815)
!12528 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !11815)
!12529 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !11815)
!12530 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !11815)
!12531 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !11815)
!12532 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !11815)
!12533 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !11815)
!12534 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !11815)
!12535 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11815)
!12536 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11827)
!12537 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11827)
!12538 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11827)
!12539 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11827)
!12540 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11827)
!12541 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11827)
!12542 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11827)
!12543 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11827)
!12544 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11827)
!12545 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11827)
!12546 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11827)
!12547 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11827)
!12548 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11827)
!12549 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11827)
!12550 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11827)
!12551 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11827)
!12552 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11827)
!12553 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11827)
!12554 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !11815)
!12555 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !11815)
!12556 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !11815)
!12557 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !11815)
!12558 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !11815)
!12559 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !11815)
!12560 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !11815)
!12561 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !11815)
!12562 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !11815)
!12563 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !11815)
!12564 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !11815)
!12565 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !11815)
!12566 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !11815)
!12567 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !11815)
!12568 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !11815)
!12569 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !11815)
!12570 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !11815)
!12571 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !11815)
!12572 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !11815)
!12573 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !11815)
!12574 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !11815)
!12575 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !11815)
!12576 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !11815)
!12577 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !11815)
!12578 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !11815)
!12579 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !11815)
!12580 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !11815)
!12581 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !11815)
!12582 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !11815)
!12583 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !11815)
!12584 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !11815)
!12585 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !11815)
!12586 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !11815)
!12587 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !11815)
!12588 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !11815)
!12589 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !11815)
!12590 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !11815)
!12591 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !11815)
!12592 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !11815)
!12593 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !11815)
!12594 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !11815)
!12595 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !11815)
!12596 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !11815)
!12597 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !11815)
!12598 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !11815)
!12599 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11815)
!12600 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11814)
!12601 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11814)
!12602 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11814)
!12603 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11814)
!12604 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11814)
!12605 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11814)
!12606 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11814)
!12607 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11814)
!12608 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11814)
!12609 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11814)
!12610 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11814)
!12611 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11814)
!12612 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11814)
!12613 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11814)
!12614 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11814)
!12615 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11814)
!12616 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11814)
!12617 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11814)
!12618 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !11815)
!12619 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !11815)
!12620 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !11815)
!12621 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !11815)
!12622 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !11815)
!12623 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !11815)
!12624 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !11815)
!12625 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !11815)
!12626 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !11815)
!12627 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !11815)
!12628 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !11815)
!12629 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !11815)
!12630 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !11815)
!12631 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !11815)
!12632 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !11815)
!12633 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !11815)
!12634 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !11815)
!12635 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !11815)
!12636 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !11815)
!12637 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !11815)
!12638 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !11815)
!12639 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !11815)
!12640 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !11815)
!12641 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !11815)
!12642 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !11815)
!12643 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !11815)
!12644 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !11815)
!12645 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !11815)
!12646 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !11815)
!12647 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !11815)
!12648 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !11815)
!12649 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !11815)
!12650 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !11815)
!12651 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !11815)
!12652 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !11815)
!12653 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !11815)
!12654 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !11815)
!12655 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !11815)
!12656 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !11815)
!12657 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !11815)
!12658 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !11815)
!12659 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !11815)
!12660 = !DILocation(line: 1256, column: 31, scope: !11816)
!12661 = !DILocation(line: 1257, column: 29, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !11816, file: !904, line: 1257, column: 29)
!12663 = !DILocation(line: 1257, column: 29, scope: !11816)
!12664 = !DILocation(line: 1258, column: 62, scope: !12662)
!12665 = !DILocation(line: 1258, column: 64, scope: !12662)
!12666 = !DILocation(line: 1258, column: 48, scope: !12662)
!12667 = !DILocation(line: 1258, column: 53, scope: !12662)
!12668 = !DILocation(line: 1258, column: 71, scope: !12662)
!12669 = !DILocation(line: 1258, column: 69, scope: !12662)
!12670 = !DILocation(line: 1258, column: 43, scope: !12662)
!12671 = !DILocation(line: 1258, column: 29, scope: !12662)
!12672 = !DILocation(line: 1258, column: 34, scope: !12662)
!12673 = !DILocation(line: 1258, column: 46, scope: !12662)
!12674 = !DILocation(line: 1260, column: 63, scope: !12662)
!12675 = !DILocation(line: 1260, column: 49, scope: !12662)
!12676 = !DILocation(line: 1260, column: 54, scope: !12662)
!12677 = !DILocation(line: 1260, column: 68, scope: !12662)
!12678 = !DILocation(line: 1260, column: 66, scope: !12662)
!12679 = !DILocation(line: 1260, column: 75, scope: !12662)
!12680 = !DILocation(line: 1260, column: 43, scope: !12662)
!12681 = !DILocation(line: 1260, column: 29, scope: !12662)
!12682 = !DILocation(line: 1260, column: 34, scope: !12662)
!12683 = !DILocation(line: 1260, column: 46, scope: !12662)
!12684 = !DILocation(line: 1262, column: 17, scope: !11818)
!12685 = !DILocation(line: 1238, column: 51, scope: !12686)
!12686 = !DILexicalBlockFile(scope: !11819, file: !904, discriminator: 2)
!12687 = !DILocation(line: 1238, column: 17, scope: !12686)
!12688 = distinct !{!12688, !12689}
!12689 = !DILocation(line: 1238, column: 17, scope: !11821)
!12690 = !DILocation(line: 1263, column: 13, scope: !11821)
!12691 = !DILocation(line: 1226, column: 49, scope: !12692)
!12692 = !DILexicalBlockFile(scope: !11822, file: !904, discriminator: 2)
!12693 = !DILocation(line: 1226, column: 13, scope: !12692)
!12694 = distinct !{!12694, !12695}
!12695 = !DILocation(line: 1226, column: 13, scope: !11824)
!12696 = !DILocation(line: 1264, column: 9, scope: !11824)
!12697 = !DILocation(line: 1265, column: 21, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !11825, file: !904, line: 1265, column: 13)
!12699 = !DILocation(line: 1265, column: 18, scope: !12698)
!12700 = !DILocation(line: 1265, column: 26, scope: !12701)
!12701 = !DILexicalBlockFile(scope: !12702, file: !904, discriminator: 1)
!12702 = distinct !DILexicalBlock(scope: !12698, file: !904, line: 1265, column: 13)
!12703 = !DILocation(line: 1265, column: 31, scope: !12701)
!12704 = !DILocation(line: 1265, column: 29, scope: !12701)
!12705 = !DILocation(line: 1265, column: 13, scope: !12701)
!12706 = !DILocation(line: 1266, column: 33, scope: !12702)
!12707 = !DILocation(line: 1266, column: 37, scope: !12702)
!12708 = !DILocation(line: 1266, column: 59, scope: !12702)
!12709 = !DILocation(line: 1266, column: 43, scope: !12702)
!12710 = !DILocation(line: 1266, column: 49, scope: !12702)
!12711 = !DILocation(line: 1266, column: 17, scope: !12702)
!12712 = !DILocation(line: 1265, column: 49, scope: !12713)
!12713 = !DILexicalBlockFile(scope: !12702, file: !904, discriminator: 2)
!12714 = !DILocation(line: 1265, column: 13, scope: !12713)
!12715 = distinct !{!12715, !12716}
!12716 = !DILocation(line: 1265, column: 13, scope: !11825)
!12717 = !DILocation(line: 1267, column: 9, scope: !11779)
!12718 = !DILocation(line: 1269, column: 13, scope: !11778)
!12719 = !DILocation(line: 1269, column: 13, scope: !11779)
!12720 = !DILocation(line: 1270, column: 21, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !904, line: 1270, column: 13)
!12722 = distinct !DILexicalBlock(scope: !11778, file: !904, line: 1269, column: 21)
!12723 = !DILocation(line: 1270, column: 18, scope: !12721)
!12724 = !DILocation(line: 1270, column: 26, scope: !12725)
!12725 = !DILexicalBlockFile(scope: !12726, file: !904, discriminator: 1)
!12726 = distinct !DILexicalBlock(scope: !12721, file: !904, line: 1270, column: 13)
!12727 = !DILocation(line: 1270, column: 31, scope: !12725)
!12728 = !DILocation(line: 1270, column: 29, scope: !12725)
!12729 = !DILocation(line: 1270, column: 13, scope: !12725)
!12730 = !DILocation(line: 1271, column: 37, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12732, file: !904, line: 1271, column: 21)
!12732 = distinct !DILexicalBlock(scope: !12726, file: !904, line: 1270, column: 53)
!12733 = !DILocation(line: 1271, column: 21, scope: !12731)
!12734 = !DILocation(line: 1271, column: 27, scope: !12731)
!12735 = !DILocation(line: 1271, column: 41, scope: !12731)
!12736 = !DILocation(line: 1271, column: 52, scope: !12731)
!12737 = !DILocation(line: 1271, column: 21, scope: !12732)
!12738 = !DILocation(line: 1272, column: 21, scope: !12731)
!12739 = !DILocation(line: 1273, column: 40, scope: !12732)
!12740 = !DILocation(line: 1273, column: 24, scope: !12732)
!12741 = !DILocation(line: 1273, column: 30, scope: !12732)
!12742 = !DILocation(line: 1273, column: 21, scope: !12732)
!12743 = !DILocation(line: 1274, column: 44, scope: !12732)
!12744 = !DILocation(line: 1274, column: 24, scope: !12732)
!12745 = !DILocation(line: 1274, column: 34, scope: !12732)
!12746 = !DILocation(line: 1274, column: 21, scope: !12732)
!12747 = !DILocation(line: 1275, column: 21, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12732, file: !904, line: 1275, column: 21)
!12749 = !DILocation(line: 1275, column: 26, scope: !12748)
!12750 = !DILocation(line: 1275, column: 39, scope: !12748)
!12751 = !DILocation(line: 1275, column: 44, scope: !12748)
!12752 = !DILocation(line: 1275, column: 37, scope: !12748)
!12753 = !DILocation(line: 1275, column: 55, scope: !12748)
!12754 = !DILocation(line: 1275, column: 68, scope: !12755)
!12755 = !DILexicalBlockFile(scope: !12748, file: !904, discriminator: 1)
!12756 = !DILocation(line: 1275, column: 58, scope: !12755)
!12757 = !DILocation(line: 1275, column: 21, scope: !12755)
!12758 = !DILocation(line: 1276, column: 37, scope: !12748)
!12759 = !DILocation(line: 1276, column: 41, scope: !12748)
!12760 = !DILocation(line: 1276, column: 46, scope: !12748)
!12761 = !DILocation(line: 1276, column: 21, scope: !12748)
!12762 = !DILocation(line: 1278, column: 28, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12748, file: !904, line: 1278, column: 21)
!12764 = !DILocation(line: 1278, column: 26, scope: !12763)
!12765 = !DILocation(line: 1278, column: 33, scope: !12766)
!12766 = !DILexicalBlockFile(scope: !12767, file: !904, discriminator: 1)
!12767 = distinct !DILexicalBlock(scope: !12763, file: !904, line: 1278, column: 21)
!12768 = !DILocation(line: 1278, column: 53, scope: !12766)
!12769 = !DILocation(line: 1278, column: 37, scope: !12766)
!12770 = !DILocation(line: 1278, column: 43, scope: !12766)
!12771 = !DILocation(line: 1278, column: 57, scope: !12766)
!12772 = !DILocation(line: 1278, column: 35, scope: !12766)
!12773 = !DILocation(line: 1278, column: 21, scope: !12766)
!12774 = !DILocation(line: 1279, column: 58, scope: !12767)
!12775 = !DILocation(line: 1279, column: 44, scope: !12767)
!12776 = !DILocation(line: 1279, column: 49, scope: !12767)
!12777 = !DILocation(line: 1279, column: 39, scope: !12767)
!12778 = !DILocation(line: 1279, column: 25, scope: !12767)
!12779 = !DILocation(line: 1279, column: 30, scope: !12767)
!12780 = !DILocation(line: 1279, column: 42, scope: !12767)
!12781 = !DILocation(line: 1278, column: 70, scope: !12782)
!12782 = !DILexicalBlockFile(scope: !12767, file: !904, discriminator: 2)
!12783 = !DILocation(line: 1278, column: 21, scope: !12782)
!12784 = distinct !{!12784, !12785}
!12785 = !DILocation(line: 1278, column: 21, scope: !12748)
!12786 = !DILocation(line: 1280, column: 13, scope: !12732)
!12787 = !DILocation(line: 1270, column: 49, scope: !12788)
!12788 = !DILexicalBlockFile(scope: !12726, file: !904, discriminator: 2)
!12789 = !DILocation(line: 1270, column: 13, scope: !12788)
!12790 = distinct !{!12790, !12791}
!12791 = !DILocation(line: 1270, column: 13, scope: !12722)
!12792 = !DILocation(line: 1281, column: 9, scope: !12722)
!12793 = !DILocation(line: 1283, column: 20, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !11777, file: !904, line: 1283, column: 13)
!12795 = !DILocation(line: 1283, column: 18, scope: !12794)
!12796 = !DILocation(line: 1283, column: 25, scope: !12797)
!12797 = !DILexicalBlockFile(scope: !12798, file: !904, discriminator: 1)
!12798 = distinct !DILexicalBlock(scope: !12794, file: !904, line: 1283, column: 13)
!12799 = !DILocation(line: 1283, column: 29, scope: !12797)
!12800 = !DILocation(line: 1283, column: 35, scope: !12797)
!12801 = !DILocation(line: 1283, column: 48, scope: !12797)
!12802 = !DILocation(line: 1283, column: 27, scope: !12797)
!12803 = !DILocation(line: 1283, column: 13, scope: !12797)
!12804 = !DILocation(line: 1284, column: 33, scope: !12798)
!12805 = !DILocation(line: 1284, column: 37, scope: !12798)
!12806 = !DILocation(line: 1284, column: 43, scope: !12798)
!12807 = !DILocation(line: 1284, column: 49, scope: !12798)
!12808 = !DILocation(line: 1284, column: 63, scope: !12798)
!12809 = !DILocation(line: 1284, column: 17, scope: !12798)
!12810 = !DILocation(line: 1283, column: 61, scope: !12811)
!12811 = !DILexicalBlockFile(scope: !12798, file: !904, discriminator: 2)
!12812 = !DILocation(line: 1283, column: 13, scope: !12811)
!12813 = distinct !{!12813, !12814}
!12814 = !DILocation(line: 1283, column: 13, scope: !11777)
!12815 = !DILocation(line: 1286, column: 21, scope: !11776)
!12816 = !DILocation(line: 1286, column: 18, scope: !11776)
!12817 = !DILocation(line: 1286, column: 26, scope: !12818)
!12818 = !DILexicalBlockFile(scope: !11775, file: !904, discriminator: 1)
!12819 = !DILocation(line: 1286, column: 31, scope: !12818)
!12820 = !DILocation(line: 1286, column: 29, scope: !12818)
!12821 = !DILocation(line: 1286, column: 13, scope: !12818)
!12822 = !DILocation(line: 1287, column: 37, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !11774, file: !904, line: 1287, column: 21)
!12824 = !DILocation(line: 1287, column: 21, scope: !12823)
!12825 = !DILocation(line: 1287, column: 27, scope: !12823)
!12826 = !DILocation(line: 1287, column: 41, scope: !12823)
!12827 = !DILocation(line: 1287, column: 52, scope: !12823)
!12828 = !DILocation(line: 1287, column: 21, scope: !11774)
!12829 = !DILocation(line: 1288, column: 21, scope: !12823)
!12830 = !DILocation(line: 1289, column: 40, scope: !11774)
!12831 = !DILocation(line: 1289, column: 24, scope: !11774)
!12832 = !DILocation(line: 1289, column: 30, scope: !11774)
!12833 = !DILocation(line: 1289, column: 21, scope: !11774)
!12834 = !DILocation(line: 1293, column: 34, scope: !11774)
!12835 = !DILocation(line: 1293, column: 55, scope: !11774)
!12836 = !DILocation(line: 1294, column: 51, scope: !11774)
!12837 = !DILocation(line: 1293, column: 25, scope: !11774)
!12838 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !11797)
!12839 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !11797)
!12840 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !11797)
!12841 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !11797)
!12842 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !11797)
!12843 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !11797)
!12844 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !11797)
!12845 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !11797)
!12846 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !11797)
!12847 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !11797)
!12848 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11797)
!12849 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11801)
!12850 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11801)
!12851 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11801)
!12852 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11801)
!12853 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11801)
!12854 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11801)
!12855 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11801)
!12856 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11801)
!12857 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11801)
!12858 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11801)
!12859 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11801)
!12860 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11801)
!12861 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11801)
!12862 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11801)
!12863 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11801)
!12864 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11801)
!12865 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11801)
!12866 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11801)
!12867 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !11797)
!12868 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !11797)
!12869 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !11797)
!12870 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !11797)
!12871 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !11797)
!12872 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !11797)
!12873 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !11797)
!12874 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !11797)
!12875 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !11797)
!12876 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !11797)
!12877 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !11797)
!12878 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !11797)
!12879 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !11797)
!12880 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !11797)
!12881 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !11797)
!12882 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !11797)
!12883 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !11797)
!12884 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !11797)
!12885 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !11797)
!12886 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !11797)
!12887 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !11797)
!12888 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !11797)
!12889 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !11797)
!12890 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !11797)
!12891 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !11797)
!12892 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !11797)
!12893 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !11797)
!12894 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !11797)
!12895 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !11797)
!12896 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !11797)
!12897 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !11797)
!12898 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !11797)
!12899 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !11797)
!12900 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !11797)
!12901 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !11797)
!12902 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !11797)
!12903 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !11797)
!12904 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !11797)
!12905 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !11797)
!12906 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !11797)
!12907 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11797)
!12908 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11799)
!12909 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11799)
!12910 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11799)
!12911 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11799)
!12912 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11799)
!12913 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11799)
!12914 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11799)
!12915 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11799)
!12916 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11799)
!12917 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11799)
!12918 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11799)
!12919 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11799)
!12920 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11799)
!12921 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11799)
!12922 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11799)
!12923 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11799)
!12924 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11799)
!12925 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11799)
!12926 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !11797)
!12927 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !11797)
!12928 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !11797)
!12929 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !11797)
!12930 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !11797)
!12931 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !11797)
!12932 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !11797)
!12933 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !11797)
!12934 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !11797)
!12935 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !11797)
!12936 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !11797)
!12937 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !11797)
!12938 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !11797)
!12939 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !11797)
!12940 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !11797)
!12941 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !11797)
!12942 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !11797)
!12943 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !11797)
!12944 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !11797)
!12945 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !11797)
!12946 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !11797)
!12947 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !11797)
!12948 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !11797)
!12949 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !11797)
!12950 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !11797)
!12951 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !11797)
!12952 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !11797)
!12953 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !11797)
!12954 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !11797)
!12955 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !11797)
!12956 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !11797)
!12957 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !11797)
!12958 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !11797)
!12959 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !11797)
!12960 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !11797)
!12961 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !11797)
!12962 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !11797)
!12963 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !11797)
!12964 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !11797)
!12965 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !11797)
!12966 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !11797)
!12967 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !11797)
!12968 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !11797)
!12969 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !11797)
!12970 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !11797)
!12971 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11797)
!12972 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11796)
!12973 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11796)
!12974 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11796)
!12975 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11796)
!12976 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11796)
!12977 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11796)
!12978 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11796)
!12979 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11796)
!12980 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11796)
!12981 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11796)
!12982 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11796)
!12983 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11796)
!12984 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11796)
!12985 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11796)
!12986 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11796)
!12987 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11796)
!12988 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11796)
!12989 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11796)
!12990 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !11797)
!12991 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !11797)
!12992 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !11797)
!12993 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !11797)
!12994 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !11797)
!12995 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !11797)
!12996 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !11797)
!12997 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !11797)
!12998 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !11797)
!12999 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !11797)
!13000 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !11797)
!13001 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !11797)
!13002 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !11797)
!13003 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !11797)
!13004 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !11797)
!13005 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !11797)
!13006 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !11797)
!13007 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !11797)
!13008 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !11797)
!13009 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !11797)
!13010 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !11797)
!13011 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !11797)
!13012 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !11797)
!13013 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !11797)
!13014 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !11797)
!13015 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !11797)
!13016 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !11797)
!13017 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !11797)
!13018 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !11797)
!13019 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !11797)
!13020 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !11797)
!13021 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !11797)
!13022 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !11797)
!13023 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !11797)
!13024 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !11797)
!13025 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !11797)
!13026 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !11797)
!13027 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !11797)
!13028 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !11797)
!13029 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !11797)
!13030 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !11797)
!13031 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !11797)
!13032 = !DILocation(line: 1293, column: 23, scope: !11774)
!13033 = !DILocation(line: 1295, column: 24, scope: !11774)
!13034 = !DILocation(line: 1295, column: 32, scope: !11774)
!13035 = !DILocation(line: 1295, column: 43, scope: !11774)
!13036 = !DILocation(line: 1296, column: 38, scope: !11774)
!13037 = !DILocation(line: 1296, column: 46, scope: !11774)
!13038 = !DILocation(line: 1295, column: 24, scope: !13039)
!13039 = !DILexicalBlockFile(scope: !11774, file: !904, discriminator: 1)
!13040 = !DILocation(line: 1295, column: 24, scope: !13041)
!13041 = !DILexicalBlockFile(scope: !11774, file: !904, discriminator: 2)
!13042 = !DILocation(line: 1295, column: 24, scope: !13043)
!13043 = !DILexicalBlockFile(scope: !11774, file: !904, discriminator: 3)
!13044 = !DILocation(line: 1295, column: 22, scope: !13043)
!13045 = !DILocation(line: 1297, column: 37, scope: !11774)
!13046 = !DILocation(line: 1297, column: 44, scope: !11774)
!13047 = !DILocation(line: 1297, column: 42, scope: !11774)
!13048 = !DILocation(line: 1297, column: 51, scope: !11774)
!13049 = !DILocation(line: 1297, column: 17, scope: !11774)
!13050 = !DILocation(line: 1297, column: 22, scope: !11774)
!13051 = !DILocation(line: 1297, column: 34, scope: !11774)
!13052 = !DILocation(line: 1299, column: 24, scope: !11773)
!13053 = !DILocation(line: 1299, column: 22, scope: !11773)
!13054 = !DILocation(line: 1299, column: 29, scope: !13055)
!13055 = !DILexicalBlockFile(scope: !11772, file: !904, discriminator: 1)
!13056 = !DILocation(line: 1299, column: 33, scope: !13055)
!13057 = !DILocation(line: 1299, column: 38, scope: !13055)
!13058 = !DILocation(line: 1299, column: 31, scope: !13055)
!13059 = !DILocation(line: 1299, column: 17, scope: !13055)
!13060 = !DILocation(line: 1300, column: 37, scope: !11771)
!13061 = !DILocation(line: 1300, column: 42, scope: !11771)
!13062 = !DILocation(line: 1300, column: 50, scope: !11771)
!13063 = !DILocation(line: 1300, column: 39, scope: !11771)
!13064 = !DILocation(line: 1300, column: 35, scope: !11771)
!13065 = !DILocation(line: 1303, column: 57, scope: !11771)
!13066 = !DILocation(line: 1303, column: 43, scope: !11771)
!13067 = !DILocation(line: 1303, column: 48, scope: !11771)
!13068 = !DILocation(line: 1303, column: 76, scope: !11771)
!13069 = !DILocation(line: 1303, column: 78, scope: !11771)
!13070 = !DILocation(line: 1303, column: 62, scope: !11771)
!13071 = !DILocation(line: 1303, column: 67, scope: !11771)
!13072 = !DILocation(line: 1303, column: 60, scope: !11771)
!13073 = !DILocation(line: 1303, column: 84, scope: !11771)
!13074 = !DILocation(line: 1304, column: 56, scope: !11771)
!13075 = !DILocation(line: 1304, column: 54, scope: !11771)
!13076 = !DILocation(line: 1304, column: 70, scope: !11771)
!13077 = !DILocation(line: 1303, column: 28, scope: !11771)
!13078 = !DILocation(line: 1303, column: 25, scope: !11771)
!13079 = !DILocation(line: 1305, column: 38, scope: !11771)
!13080 = !DILocation(line: 1305, column: 42, scope: !11771)
!13081 = !DILocation(line: 1305, column: 47, scope: !11771)
!13082 = !DILocation(line: 1305, column: 54, scope: !11771)
!13083 = !DILocation(line: 1305, column: 59, scope: !11771)
!13084 = !DILocation(line: 1305, column: 29, scope: !11771)
!13085 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !11770)
!13086 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !11770)
!13087 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !11770)
!13088 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !11770)
!13089 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !11770)
!13090 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !11770)
!13091 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !11770)
!13092 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !11770)
!13093 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !11770)
!13094 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !11770)
!13095 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !11770)
!13096 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11783)
!13097 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11783)
!13098 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11783)
!13099 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11783)
!13100 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11783)
!13101 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11783)
!13102 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11783)
!13103 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11783)
!13104 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11783)
!13105 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11783)
!13106 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11783)
!13107 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11783)
!13108 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11783)
!13109 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11783)
!13110 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11783)
!13111 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11783)
!13112 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11783)
!13113 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11783)
!13114 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !11770)
!13115 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !11770)
!13116 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !11770)
!13117 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !11770)
!13118 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !11770)
!13119 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !11770)
!13120 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !11770)
!13121 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !11770)
!13122 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !11770)
!13123 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !11770)
!13124 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !11770)
!13125 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !11770)
!13126 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !11770)
!13127 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !11770)
!13128 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !11770)
!13129 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !11770)
!13130 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !11770)
!13131 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !11770)
!13132 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !11770)
!13133 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !11770)
!13134 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !11770)
!13135 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !11770)
!13136 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !11770)
!13137 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !11770)
!13138 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !11770)
!13139 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !11770)
!13140 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !11770)
!13141 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !11770)
!13142 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !11770)
!13143 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !11770)
!13144 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !11770)
!13145 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !11770)
!13146 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !11770)
!13147 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !11770)
!13148 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !11770)
!13149 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !11770)
!13150 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !11770)
!13151 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !11770)
!13152 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !11770)
!13153 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !11770)
!13154 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !11770)
!13155 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11781)
!13156 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11781)
!13157 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11781)
!13158 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11781)
!13159 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11781)
!13160 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11781)
!13161 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11781)
!13162 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11781)
!13163 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11781)
!13164 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11781)
!13165 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11781)
!13166 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11781)
!13167 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11781)
!13168 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11781)
!13169 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11781)
!13170 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11781)
!13171 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11781)
!13172 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11781)
!13173 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !11770)
!13174 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !11770)
!13175 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !11770)
!13176 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !11770)
!13177 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !11770)
!13178 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !11770)
!13179 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !11770)
!13180 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !11770)
!13181 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !11770)
!13182 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !11770)
!13183 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !11770)
!13184 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !11770)
!13185 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !11770)
!13186 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !11770)
!13187 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !11770)
!13188 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !11770)
!13189 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !11770)
!13190 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !11770)
!13191 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !11770)
!13192 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !11770)
!13193 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !11770)
!13194 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !11770)
!13195 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !11770)
!13196 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !11770)
!13197 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !11770)
!13198 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !11770)
!13199 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !11770)
!13200 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !11770)
!13201 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !11770)
!13202 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !11770)
!13203 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !11770)
!13204 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !11770)
!13205 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !11770)
!13206 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !11770)
!13207 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !11770)
!13208 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !11770)
!13209 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !11770)
!13210 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !11770)
!13211 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !11770)
!13212 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !11770)
!13213 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !11770)
!13214 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !11770)
!13215 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !11770)
!13216 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !11770)
!13217 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !11770)
!13218 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !11770)
!13219 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !11769)
!13220 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !11769)
!13221 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !11769)
!13222 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !11769)
!13223 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !11769)
!13224 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !11769)
!13225 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !11769)
!13226 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !11769)
!13227 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !11769)
!13228 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !11769)
!13229 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !11769)
!13230 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !11769)
!13231 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !11769)
!13232 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !11769)
!13233 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !11769)
!13234 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !11769)
!13235 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !11769)
!13236 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !11769)
!13237 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !11770)
!13238 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !11770)
!13239 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !11770)
!13240 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !11770)
!13241 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !11770)
!13242 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !11770)
!13243 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !11770)
!13244 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !11770)
!13245 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !11770)
!13246 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !11770)
!13247 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !11770)
!13248 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !11770)
!13249 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !11770)
!13250 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !11770)
!13251 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !11770)
!13252 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !11770)
!13253 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !11770)
!13254 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !11770)
!13255 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !11770)
!13256 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !11770)
!13257 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !11770)
!13258 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !11770)
!13259 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !11770)
!13260 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !11770)
!13261 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !11770)
!13262 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !11770)
!13263 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !11770)
!13264 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !11770)
!13265 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !11770)
!13266 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !11770)
!13267 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !11770)
!13268 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !11770)
!13269 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !11770)
!13270 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !11770)
!13271 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !11770)
!13272 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !11770)
!13273 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !11770)
!13274 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !11770)
!13275 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !11770)
!13276 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !11770)
!13277 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !11770)
!13278 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !11770)
!13279 = !DILocation(line: 1305, column: 27, scope: !11771)
!13280 = !DILocation(line: 1306, column: 25, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !11771, file: !904, line: 1306, column: 25)
!13282 = !DILocation(line: 1306, column: 25, scope: !11771)
!13283 = !DILocation(line: 1307, column: 58, scope: !13281)
!13284 = !DILocation(line: 1307, column: 60, scope: !13281)
!13285 = !DILocation(line: 1307, column: 44, scope: !13281)
!13286 = !DILocation(line: 1307, column: 49, scope: !13281)
!13287 = !DILocation(line: 1307, column: 67, scope: !13281)
!13288 = !DILocation(line: 1307, column: 65, scope: !13281)
!13289 = !DILocation(line: 1307, column: 39, scope: !13281)
!13290 = !DILocation(line: 1307, column: 25, scope: !13281)
!13291 = !DILocation(line: 1307, column: 30, scope: !13281)
!13292 = !DILocation(line: 1307, column: 42, scope: !13281)
!13293 = !DILocation(line: 1309, column: 62, scope: !13281)
!13294 = !DILocation(line: 1309, column: 45, scope: !13281)
!13295 = !DILocation(line: 1309, column: 53, scope: !13281)
!13296 = !DILocation(line: 1309, column: 67, scope: !13281)
!13297 = !DILocation(line: 1309, column: 65, scope: !13281)
!13298 = !DILocation(line: 1309, column: 74, scope: !13281)
!13299 = !DILocation(line: 1309, column: 39, scope: !13281)
!13300 = !DILocation(line: 1309, column: 25, scope: !13281)
!13301 = !DILocation(line: 1309, column: 30, scope: !13281)
!13302 = !DILocation(line: 1309, column: 42, scope: !13281)
!13303 = !DILocation(line: 1310, column: 17, scope: !11771)
!13304 = !DILocation(line: 1299, column: 51, scope: !13305)
!13305 = !DILexicalBlockFile(scope: !11772, file: !904, discriminator: 2)
!13306 = !DILocation(line: 1299, column: 17, scope: !13305)
!13307 = distinct !{!13307, !13308}
!13308 = !DILocation(line: 1299, column: 17, scope: !11774)
!13309 = !DILocation(line: 1311, column: 13, scope: !11774)
!13310 = !DILocation(line: 1286, column: 49, scope: !13311)
!13311 = !DILexicalBlockFile(scope: !11775, file: !904, discriminator: 2)
!13312 = !DILocation(line: 1286, column: 13, scope: !13311)
!13313 = distinct !{!13313, !13314}
!13314 = !DILocation(line: 1286, column: 13, scope: !11777)
!13315 = !DILocation(line: 1313, column: 9, scope: !11779)
!13316 = !DILocation(line: 1315, column: 13, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !11779, file: !904, line: 1315, column: 13)
!13318 = !DILocation(line: 1315, column: 13, scope: !11779)
!13319 = !DILocation(line: 1316, column: 21, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !904, line: 1316, column: 13)
!13321 = distinct !DILexicalBlock(scope: !13317, file: !904, line: 1315, column: 21)
!13322 = !DILocation(line: 1316, column: 18, scope: !13320)
!13323 = !DILocation(line: 1316, column: 26, scope: !13324)
!13324 = !DILexicalBlockFile(scope: !13325, file: !904, discriminator: 1)
!13325 = distinct !DILexicalBlock(scope: !13320, file: !904, line: 1316, column: 13)
!13326 = !DILocation(line: 1316, column: 31, scope: !13324)
!13327 = !DILocation(line: 1316, column: 29, scope: !13324)
!13328 = !DILocation(line: 1316, column: 13, scope: !13324)
!13329 = !DILocation(line: 1317, column: 24, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13325, file: !904, line: 1317, column: 17)
!13331 = !DILocation(line: 1317, column: 22, scope: !13330)
!13332 = !DILocation(line: 1317, column: 29, scope: !13333)
!13333 = !DILexicalBlockFile(scope: !13334, file: !904, discriminator: 1)
!13334 = distinct !DILexicalBlock(scope: !13330, file: !904, line: 1317, column: 17)
!13335 = !DILocation(line: 1317, column: 49, scope: !13333)
!13336 = !DILocation(line: 1317, column: 33, scope: !13333)
!13337 = !DILocation(line: 1317, column: 39, scope: !13333)
!13338 = !DILocation(line: 1317, column: 53, scope: !13333)
!13339 = !DILocation(line: 1317, column: 31, scope: !13333)
!13340 = !DILocation(line: 1317, column: 17, scope: !13333)
!13341 = !DILocation(line: 1318, column: 25, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13343, file: !904, line: 1318, column: 25)
!13343 = distinct !DILexicalBlock(scope: !13334, file: !904, line: 1317, column: 70)
!13344 = !DILocation(line: 1318, column: 50, scope: !13342)
!13345 = !DILocation(line: 1318, column: 30, scope: !13342)
!13346 = !DILocation(line: 1318, column: 40, scope: !13342)
!13347 = !DILocation(line: 1318, column: 54, scope: !13342)
!13348 = !DILocation(line: 1318, column: 27, scope: !13342)
!13349 = !DILocation(line: 1318, column: 25, scope: !13343)
!13350 = !DILocation(line: 1319, column: 41, scope: !13342)
!13351 = !DILocation(line: 1319, column: 45, scope: !13342)
!13352 = !DILocation(line: 1319, column: 67, scope: !13342)
!13353 = !DILocation(line: 1319, column: 51, scope: !13342)
!13354 = !DILocation(line: 1319, column: 57, scope: !13342)
!13355 = !DILocation(line: 1319, column: 72, scope: !13342)
!13356 = !DILocation(line: 1319, column: 25, scope: !13342)
!13357 = !DILocation(line: 1322, column: 62, scope: !13342)
!13358 = !DILocation(line: 1322, column: 29, scope: !13342)
!13359 = !DILocation(line: 1322, column: 49, scope: !13342)
!13360 = !DILocation(line: 1322, column: 39, scope: !13342)
!13361 = !DILocation(line: 1322, column: 53, scope: !13342)
!13362 = !DILocation(line: 1321, column: 54, scope: !13342)
!13363 = !DILocation(line: 1321, column: 25, scope: !13342)
!13364 = !DILocation(line: 1321, column: 41, scope: !13342)
!13365 = !DILocation(line: 1321, column: 31, scope: !13342)
!13366 = !DILocation(line: 1321, column: 45, scope: !13342)
!13367 = !DILocation(line: 1321, column: 57, scope: !13342)
!13368 = !DILocation(line: 1323, column: 17, scope: !13343)
!13369 = !DILocation(line: 1317, column: 66, scope: !13370)
!13370 = !DILexicalBlockFile(scope: !13334, file: !904, discriminator: 2)
!13371 = !DILocation(line: 1317, column: 17, scope: !13370)
!13372 = distinct !{!13372, !13373}
!13373 = !DILocation(line: 1317, column: 17, scope: !13325)
!13374 = !DILocation(line: 1323, column: 17, scope: !13375)
!13375 = !DILexicalBlockFile(scope: !13330, file: !904, discriminator: 1)
!13376 = !DILocation(line: 1316, column: 49, scope: !13377)
!13377 = !DILexicalBlockFile(scope: !13325, file: !904, discriminator: 2)
!13378 = !DILocation(line: 1316, column: 13, scope: !13377)
!13379 = distinct !{!13379, !13380}
!13380 = !DILocation(line: 1316, column: 13, scope: !13321)
!13381 = !DILocation(line: 1324, column: 9, scope: !13321)
!13382 = !DILocation(line: 1325, column: 35, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13317, file: !904, line: 1324, column: 16)
!13384 = !DILocation(line: 1325, column: 26, scope: !13383)
!13385 = !DILocation(line: 1325, column: 42, scope: !13383)
!13386 = !DILocation(line: 1325, column: 24, scope: !13383)
!13387 = !DILocation(line: 1326, column: 32, scope: !13383)
!13388 = !DILocation(line: 1326, column: 23, scope: !13383)
!13389 = !DILocation(line: 1326, column: 21, scope: !13383)
!13390 = !DILocation(line: 1328, column: 21, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13383, file: !904, line: 1328, column: 13)
!13392 = !DILocation(line: 1328, column: 18, scope: !13391)
!13393 = !DILocation(line: 1328, column: 26, scope: !13394)
!13394 = !DILexicalBlockFile(scope: !13395, file: !904, discriminator: 1)
!13395 = distinct !DILexicalBlock(scope: !13391, file: !904, line: 1328, column: 13)
!13396 = !DILocation(line: 1328, column: 31, scope: !13394)
!13397 = !DILocation(line: 1328, column: 29, scope: !13394)
!13398 = !DILocation(line: 1328, column: 13, scope: !13394)
!13399 = !DILocation(line: 1329, column: 24, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13395, file: !904, line: 1329, column: 17)
!13401 = !DILocation(line: 1329, column: 22, scope: !13400)
!13402 = !DILocation(line: 1329, column: 29, scope: !13403)
!13403 = !DILexicalBlockFile(scope: !13404, file: !904, discriminator: 1)
!13404 = distinct !DILexicalBlock(scope: !13400, file: !904, line: 1329, column: 17)
!13405 = !DILocation(line: 1329, column: 49, scope: !13403)
!13406 = !DILocation(line: 1329, column: 33, scope: !13403)
!13407 = !DILocation(line: 1329, column: 39, scope: !13403)
!13408 = !DILocation(line: 1329, column: 53, scope: !13403)
!13409 = !DILocation(line: 1329, column: 31, scope: !13403)
!13410 = !DILocation(line: 1329, column: 17, scope: !13403)
!13411 = !DILocation(line: 1330, column: 55, scope: !13404)
!13412 = !DILocation(line: 1330, column: 65, scope: !13404)
!13413 = !DILocation(line: 1330, column: 63, scope: !13404)
!13414 = !DILocation(line: 1331, column: 64, scope: !13404)
!13415 = !DILocation(line: 1331, column: 68, scope: !13404)
!13416 = !DILocation(line: 1331, column: 55, scope: !13404)
!13417 = !DILocation(line: 1330, column: 67, scope: !13404)
!13418 = !DILocation(line: 1330, column: 50, scope: !13404)
!13419 = !DILocation(line: 1330, column: 21, scope: !13404)
!13420 = !DILocation(line: 1330, column: 37, scope: !13404)
!13421 = !DILocation(line: 1330, column: 27, scope: !13404)
!13422 = !DILocation(line: 1330, column: 41, scope: !13404)
!13423 = !DILocation(line: 1330, column: 53, scope: !13404)
!13424 = !DILocation(line: 1329, column: 66, scope: !13425)
!13425 = !DILexicalBlockFile(scope: !13404, file: !904, discriminator: 2)
!13426 = !DILocation(line: 1329, column: 17, scope: !13425)
!13427 = distinct !{!13427, !13428}
!13428 = !DILocation(line: 1329, column: 17, scope: !13395)
!13429 = !DILocation(line: 1331, column: 78, scope: !13430)
!13430 = !DILexicalBlockFile(scope: !13400, file: !904, discriminator: 1)
!13431 = !DILocation(line: 1328, column: 49, scope: !13432)
!13432 = !DILexicalBlockFile(scope: !13395, file: !904, discriminator: 2)
!13433 = !DILocation(line: 1328, column: 13, scope: !13432)
!13434 = distinct !{!13434, !13435}
!13435 = !DILocation(line: 1328, column: 13, scope: !13383)
!13436 = !DILocation(line: 1333, column: 9, scope: !11779)
!13437 = !DILocation(line: 1337, column: 13, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !11765, file: !904, line: 1337, column: 5)
!13439 = !DILocation(line: 1337, column: 10, scope: !13438)
!13440 = !DILocation(line: 1337, column: 18, scope: !13441)
!13441 = !DILexicalBlockFile(scope: !13442, file: !904, discriminator: 1)
!13442 = distinct !DILexicalBlock(scope: !13438, file: !904, line: 1337, column: 5)
!13443 = !DILocation(line: 1337, column: 23, scope: !13441)
!13444 = !DILocation(line: 1337, column: 21, scope: !13441)
!13445 = !DILocation(line: 1337, column: 5, scope: !13441)
!13446 = !DILocation(line: 1338, column: 32, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13442, file: !904, line: 1337, column: 45)
!13448 = !DILocation(line: 1338, column: 16, scope: !13447)
!13449 = !DILocation(line: 1338, column: 22, scope: !13447)
!13450 = !DILocation(line: 1338, column: 13, scope: !13447)
!13451 = !DILocation(line: 1339, column: 16, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13447, file: !904, line: 1339, column: 9)
!13453 = !DILocation(line: 1339, column: 14, scope: !13452)
!13454 = !DILocation(line: 1339, column: 21, scope: !13455)
!13455 = !DILexicalBlockFile(scope: !13456, file: !904, discriminator: 1)
!13456 = distinct !DILexicalBlock(scope: !13452, file: !904, line: 1339, column: 9)
!13457 = !DILocation(line: 1339, column: 41, scope: !13455)
!13458 = !DILocation(line: 1339, column: 25, scope: !13455)
!13459 = !DILocation(line: 1339, column: 31, scope: !13455)
!13460 = !DILocation(line: 1339, column: 45, scope: !13455)
!13461 = !DILocation(line: 1339, column: 23, scope: !13455)
!13462 = !DILocation(line: 1339, column: 9, scope: !13455)
!13463 = !DILocation(line: 1340, column: 31, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13465, file: !904, line: 1340, column: 17)
!13465 = distinct !DILexicalBlock(scope: !13456, file: !904, line: 1339, column: 62)
!13466 = !DILocation(line: 1340, column: 17, scope: !13464)
!13467 = !DILocation(line: 1340, column: 22, scope: !13464)
!13468 = !DILocation(line: 1340, column: 34, scope: !13464)
!13469 = !DILocation(line: 1340, column: 38, scope: !13464)
!13470 = !DILocation(line: 1340, column: 55, scope: !13471)
!13471 = !DILexicalBlockFile(scope: !13464, file: !904, discriminator: 1)
!13472 = !DILocation(line: 1340, column: 41, scope: !13471)
!13473 = !DILocation(line: 1340, column: 46, scope: !13471)
!13474 = !DILocation(line: 1340, column: 58, scope: !13471)
!13475 = !DILocation(line: 1340, column: 63, scope: !13471)
!13476 = !DILocation(line: 1341, column: 18, scope: !13464)
!13477 = !DILocation(line: 1341, column: 20, scope: !13464)
!13478 = !DILocation(line: 1341, column: 37, scope: !13471)
!13479 = !DILocation(line: 1341, column: 23, scope: !13471)
!13480 = !DILocation(line: 1341, column: 28, scope: !13471)
!13481 = !DILocation(line: 1341, column: 57, scope: !13471)
!13482 = !DILocation(line: 1341, column: 59, scope: !13471)
!13483 = !DILocation(line: 1341, column: 43, scope: !13471)
!13484 = !DILocation(line: 1341, column: 48, scope: !13471)
!13485 = !DILocation(line: 1341, column: 40, scope: !13471)
!13486 = !DILocation(line: 1340, column: 17, scope: !13487)
!13487 = !DILexicalBlockFile(scope: !13465, file: !904, discriminator: 2)
!13488 = !DILocation(line: 1342, column: 24, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13464, file: !904, line: 1341, column: 66)
!13490 = !DILocation(line: 1344, column: 24, scope: !13489)
!13491 = !DILocation(line: 1344, column: 32, scope: !13489)
!13492 = !DILocation(line: 1344, column: 36, scope: !13489)
!13493 = !DILocation(line: 1344, column: 53, scope: !13489)
!13494 = !DILocation(line: 1344, column: 39, scope: !13489)
!13495 = !DILocation(line: 1344, column: 44, scope: !13489)
!13496 = !DILocation(line: 1342, column: 17, scope: !13489)
!13497 = !DILocation(line: 1345, column: 17, scope: !13489)
!13498 = !DILocation(line: 1347, column: 9, scope: !13465)
!13499 = !DILocation(line: 1339, column: 58, scope: !13500)
!13500 = !DILexicalBlockFile(scope: !13456, file: !904, discriminator: 2)
!13501 = !DILocation(line: 1339, column: 9, scope: !13500)
!13502 = distinct !{!13502, !13503}
!13503 = !DILocation(line: 1339, column: 9, scope: !13447)
!13504 = !DILocation(line: 1348, column: 5, scope: !13447)
!13505 = !DILocation(line: 1337, column: 41, scope: !13506)
!13506 = !DILexicalBlockFile(scope: !13442, file: !904, discriminator: 2)
!13507 = !DILocation(line: 1337, column: 5, scope: !13506)
!13508 = distinct !{!13508, !13509}
!13509 = !DILocation(line: 1337, column: 5, scope: !11765)
!13510 = !DILocation(line: 1350, column: 5, scope: !11765)
!13511 = !DILocation(line: 1351, column: 1, scope: !11765)
!13512 = distinct !DISubprogram(name: "gainc_level_mode1m", scope: !904, file: !904, line: 1045, type: !13513, isLocal: true, isDefinition: true, scopeLine: 1048, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!13513 = !DISubroutineType(types: !13514)
!13514 = !{null, !1654, !1664, !1719}
!13515 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !13517)
!13517 = distinct !DILocation(line: 1056, column: 17, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !904, line: 1055, column: 43)
!13519 = distinct !DILexicalBlock(scope: !13520, file: !904, line: 1055, column: 5)
!13520 = distinct !DILexicalBlock(scope: !13512, file: !904, line: 1055, column: 5)
!13521 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !13522)
!13522 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !13517)
!13523 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !13524)
!13524 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !13517)
!13525 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !13517)
!13526 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !13517)
!13527 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !13517)
!13528 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !13517)
!13529 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !13517)
!13530 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !13517)
!13531 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !13517)
!13532 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !13517)
!13533 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !13517)
!13534 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !13517)
!13535 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !13517)
!13536 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !13537)
!13537 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !13538)
!13538 = distinct !DILocation(line: 1052, column: 28, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13512, file: !904, line: 1051, column: 9)
!13540 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !13541)
!13541 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !13538)
!13542 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !13543)
!13543 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !13538)
!13544 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !13538)
!13545 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !13538)
!13546 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !13538)
!13547 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !13538)
!13548 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !13538)
!13549 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !13538)
!13550 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !13538)
!13551 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !13538)
!13552 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !13538)
!13553 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !13538)
!13554 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !13538)
!13555 = !DILocalVariable(name: "gb", arg: 1, scope: !13512, file: !904, line: 1045, type: !1654)
!13556 = !DILocation(line: 1045, column: 54, scope: !13512)
!13557 = !DILocalVariable(name: "ctx", arg: 2, scope: !13512, file: !904, line: 1046, type: !1664)
!13558 = !DILocation(line: 1046, column: 59, scope: !13512)
!13559 = !DILocalVariable(name: "dst", arg: 3, scope: !13512, file: !904, line: 1047, type: !1719)
!13560 = !DILocation(line: 1047, column: 54, scope: !13512)
!13561 = !DILocalVariable(name: "i", scope: !13512, file: !904, line: 1049, type: !888)
!13562 = !DILocation(line: 1049, column: 9, scope: !13512)
!13563 = !DILocalVariable(name: "delta", scope: !13512, file: !904, line: 1049, type: !888)
!13564 = !DILocation(line: 1049, column: 12, scope: !13512)
!13565 = !DILocation(line: 1051, column: 9, scope: !13539)
!13566 = !DILocation(line: 1051, column: 14, scope: !13539)
!13567 = !DILocation(line: 1051, column: 25, scope: !13539)
!13568 = !DILocation(line: 1051, column: 9, scope: !13512)
!13569 = !DILocation(line: 1052, column: 37, scope: !13539)
!13570 = !DILocation(line: 1052, column: 58, scope: !13539)
!13571 = !DILocation(line: 1053, column: 54, scope: !13539)
!13572 = !DILocation(line: 1052, column: 28, scope: !13539)
!13573 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !13538)
!13574 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !13538)
!13575 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !13538)
!13576 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !13538)
!13577 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !13538)
!13578 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !13538)
!13579 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !13538)
!13580 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !13538)
!13581 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !13538)
!13582 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !13538)
!13583 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !13538)
!13584 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !13543)
!13585 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !13543)
!13586 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !13543)
!13587 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !13543)
!13588 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !13543)
!13589 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !13543)
!13590 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !13543)
!13591 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !13543)
!13592 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !13543)
!13593 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !13543)
!13594 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !13543)
!13595 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !13543)
!13596 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !13543)
!13597 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !13543)
!13598 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !13543)
!13599 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !13543)
!13600 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !13543)
!13601 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !13543)
!13602 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !13538)
!13603 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !13538)
!13604 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !13538)
!13605 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !13538)
!13606 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !13538)
!13607 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !13538)
!13608 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !13538)
!13609 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !13538)
!13610 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !13538)
!13611 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !13538)
!13612 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !13538)
!13613 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !13538)
!13614 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !13538)
!13615 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !13538)
!13616 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !13538)
!13617 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !13538)
!13618 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !13538)
!13619 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !13538)
!13620 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !13538)
!13621 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !13538)
!13622 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !13538)
!13623 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !13538)
!13624 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !13538)
!13625 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !13538)
!13626 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !13538)
!13627 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !13538)
!13628 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !13538)
!13629 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !13538)
!13630 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !13538)
!13631 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !13538)
!13632 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !13538)
!13633 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !13538)
!13634 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !13538)
!13635 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !13538)
!13636 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !13538)
!13637 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !13538)
!13638 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !13538)
!13639 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !13538)
!13640 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !13538)
!13641 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !13538)
!13642 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !13538)
!13643 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !13541)
!13644 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !13541)
!13645 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !13541)
!13646 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !13541)
!13647 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !13541)
!13648 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !13541)
!13649 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !13541)
!13650 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !13541)
!13651 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !13541)
!13652 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !13541)
!13653 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !13541)
!13654 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !13541)
!13655 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !13541)
!13656 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !13541)
!13657 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !13541)
!13658 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !13541)
!13659 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !13541)
!13660 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !13541)
!13661 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !13538)
!13662 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !13538)
!13663 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !13538)
!13664 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !13538)
!13665 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !13538)
!13666 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !13538)
!13667 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !13538)
!13668 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !13538)
!13669 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !13538)
!13670 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !13538)
!13671 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !13538)
!13672 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !13538)
!13673 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !13538)
!13674 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !13538)
!13675 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !13538)
!13676 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !13538)
!13677 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !13538)
!13678 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !13538)
!13679 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !13538)
!13680 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !13538)
!13681 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !13538)
!13682 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !13538)
!13683 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !13538)
!13684 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !13538)
!13685 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !13538)
!13686 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !13538)
!13687 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !13538)
!13688 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !13538)
!13689 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !13538)
!13690 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !13538)
!13691 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !13538)
!13692 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !13538)
!13693 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !13538)
!13694 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !13538)
!13695 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !13538)
!13696 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !13538)
!13697 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !13538)
!13698 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !13538)
!13699 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !13538)
!13700 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !13538)
!13701 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !13538)
!13702 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !13538)
!13703 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !13538)
!13704 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !13538)
!13705 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !13538)
!13706 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !13538)
!13707 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !13537)
!13708 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !13537)
!13709 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !13537)
!13710 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !13537)
!13711 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !13537)
!13712 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !13537)
!13713 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !13537)
!13714 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !13537)
!13715 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !13537)
!13716 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !13537)
!13717 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !13537)
!13718 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !13537)
!13719 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !13537)
!13720 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !13537)
!13721 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !13537)
!13722 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !13537)
!13723 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !13537)
!13724 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !13537)
!13725 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !13538)
!13726 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !13538)
!13727 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !13538)
!13728 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !13538)
!13729 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !13538)
!13730 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !13538)
!13731 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !13538)
!13732 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !13538)
!13733 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !13538)
!13734 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !13538)
!13735 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !13538)
!13736 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !13538)
!13737 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !13538)
!13738 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !13538)
!13739 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !13538)
!13740 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !13538)
!13741 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !13538)
!13742 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !13538)
!13743 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !13538)
!13744 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !13538)
!13745 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !13538)
!13746 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !13538)
!13747 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !13538)
!13748 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !13538)
!13749 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !13538)
!13750 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !13538)
!13751 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !13538)
!13752 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !13538)
!13753 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !13538)
!13754 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !13538)
!13755 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !13538)
!13756 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !13538)
!13757 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !13538)
!13758 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !13538)
!13759 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !13538)
!13760 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !13538)
!13761 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !13538)
!13762 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !13538)
!13763 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !13538)
!13764 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !13538)
!13765 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !13538)
!13766 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !13538)
!13767 = !DILocation(line: 1052, column: 9, scope: !13539)
!13768 = !DILocation(line: 1052, column: 14, scope: !13539)
!13769 = !DILocation(line: 1052, column: 26, scope: !13539)
!13770 = !DILocation(line: 1055, column: 12, scope: !13520)
!13771 = !DILocation(line: 1055, column: 10, scope: !13520)
!13772 = !DILocation(line: 1055, column: 17, scope: !13773)
!13773 = !DILexicalBlockFile(scope: !13519, file: !904, discriminator: 1)
!13774 = !DILocation(line: 1055, column: 21, scope: !13773)
!13775 = !DILocation(line: 1055, column: 26, scope: !13773)
!13776 = !DILocation(line: 1055, column: 19, scope: !13773)
!13777 = !DILocation(line: 1055, column: 5, scope: !13773)
!13778 = !DILocation(line: 1056, column: 26, scope: !13518)
!13779 = !DILocation(line: 1056, column: 47, scope: !13518)
!13780 = !DILocation(line: 1057, column: 43, scope: !13518)
!13781 = !DILocation(line: 1056, column: 17, scope: !13518)
!13782 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !13517)
!13783 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !13517)
!13784 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !13517)
!13785 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !13517)
!13786 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !13517)
!13787 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !13517)
!13788 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !13517)
!13789 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !13517)
!13790 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !13517)
!13791 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !13517)
!13792 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !13517)
!13793 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !13524)
!13794 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !13524)
!13795 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !13524)
!13796 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !13524)
!13797 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !13524)
!13798 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !13524)
!13799 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !13524)
!13800 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !13524)
!13801 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !13524)
!13802 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !13524)
!13803 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !13524)
!13804 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !13524)
!13805 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !13524)
!13806 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !13524)
!13807 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !13524)
!13808 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !13524)
!13809 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !13524)
!13810 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !13524)
!13811 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !13517)
!13812 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !13517)
!13813 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !13517)
!13814 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !13517)
!13815 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !13517)
!13816 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !13517)
!13817 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !13517)
!13818 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !13517)
!13819 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !13517)
!13820 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !13517)
!13821 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !13517)
!13822 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !13517)
!13823 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !13517)
!13824 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !13517)
!13825 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !13517)
!13826 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !13517)
!13827 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !13517)
!13828 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !13517)
!13829 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !13517)
!13830 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !13517)
!13831 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !13517)
!13832 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !13517)
!13833 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !13517)
!13834 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !13517)
!13835 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !13517)
!13836 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !13517)
!13837 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !13517)
!13838 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !13517)
!13839 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !13517)
!13840 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !13517)
!13841 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !13517)
!13842 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !13517)
!13843 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !13517)
!13844 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !13517)
!13845 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !13517)
!13846 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !13517)
!13847 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !13517)
!13848 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !13517)
!13849 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !13517)
!13850 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !13517)
!13851 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !13517)
!13852 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !13522)
!13853 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !13522)
!13854 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !13522)
!13855 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !13522)
!13856 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !13522)
!13857 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !13522)
!13858 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !13522)
!13859 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !13522)
!13860 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !13522)
!13861 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !13522)
!13862 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !13522)
!13863 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !13522)
!13864 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !13522)
!13865 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !13522)
!13866 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !13522)
!13867 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !13522)
!13868 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !13522)
!13869 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !13522)
!13870 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !13517)
!13871 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !13517)
!13872 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !13517)
!13873 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !13517)
!13874 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !13517)
!13875 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !13517)
!13876 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !13517)
!13877 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !13517)
!13878 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !13517)
!13879 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !13517)
!13880 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !13517)
!13881 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !13517)
!13882 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !13517)
!13883 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !13517)
!13884 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !13517)
!13885 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !13517)
!13886 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !13517)
!13887 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !13517)
!13888 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !13517)
!13889 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !13517)
!13890 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !13517)
!13891 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !13517)
!13892 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !13517)
!13893 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !13517)
!13894 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !13517)
!13895 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !13517)
!13896 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !13517)
!13897 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !13517)
!13898 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !13517)
!13899 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !13517)
!13900 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !13517)
!13901 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !13517)
!13902 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !13517)
!13903 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !13517)
!13904 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !13517)
!13905 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !13517)
!13906 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !13517)
!13907 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !13517)
!13908 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !13517)
!13909 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !13517)
!13910 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !13517)
!13911 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !13517)
!13912 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !13517)
!13913 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !13517)
!13914 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !13517)
!13915 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !13517)
!13916 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !13516)
!13917 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !13516)
!13918 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !13516)
!13919 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !13516)
!13920 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !13516)
!13921 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !13516)
!13922 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !13516)
!13923 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !13516)
!13924 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !13516)
!13925 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !13516)
!13926 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !13516)
!13927 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !13516)
!13928 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !13516)
!13929 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !13516)
!13930 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !13516)
!13931 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !13516)
!13932 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !13516)
!13933 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !13516)
!13934 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !13517)
!13935 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !13517)
!13936 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !13517)
!13937 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !13517)
!13938 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !13517)
!13939 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !13517)
!13940 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !13517)
!13941 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !13517)
!13942 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !13517)
!13943 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !13517)
!13944 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !13517)
!13945 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !13517)
!13946 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !13517)
!13947 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !13517)
!13948 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !13517)
!13949 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !13517)
!13950 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !13517)
!13951 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !13517)
!13952 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !13517)
!13953 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !13517)
!13954 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !13517)
!13955 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !13517)
!13956 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !13517)
!13957 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !13517)
!13958 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !13517)
!13959 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !13517)
!13960 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !13517)
!13961 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !13517)
!13962 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !13517)
!13963 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !13517)
!13964 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !13517)
!13965 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !13517)
!13966 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !13517)
!13967 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !13517)
!13968 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !13517)
!13969 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !13517)
!13970 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !13517)
!13971 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !13517)
!13972 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !13517)
!13973 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !13517)
!13974 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !13517)
!13975 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !13517)
!13976 = !DILocation(line: 1056, column: 15, scope: !13518)
!13977 = !DILocation(line: 1058, column: 43, scope: !13518)
!13978 = !DILocation(line: 1058, column: 45, scope: !13518)
!13979 = !DILocation(line: 1058, column: 29, scope: !13518)
!13980 = !DILocation(line: 1058, column: 34, scope: !13518)
!13981 = !DILocation(line: 1058, column: 52, scope: !13518)
!13982 = !DILocation(line: 1058, column: 50, scope: !13518)
!13983 = !DILocation(line: 1058, column: 59, scope: !13518)
!13984 = !DILocation(line: 1058, column: 23, scope: !13518)
!13985 = !DILocation(line: 1058, column: 9, scope: !13518)
!13986 = !DILocation(line: 1058, column: 14, scope: !13518)
!13987 = !DILocation(line: 1058, column: 26, scope: !13518)
!13988 = !DILocation(line: 1059, column: 5, scope: !13518)
!13989 = !DILocation(line: 1055, column: 39, scope: !13990)
!13990 = !DILexicalBlockFile(scope: !13519, file: !904, discriminator: 2)
!13991 = !DILocation(line: 1055, column: 5, scope: !13990)
!13992 = distinct !{!13992, !13993}
!13993 = !DILocation(line: 1055, column: 5, scope: !13512)
!13994 = !DILocation(line: 1060, column: 1, scope: !13512)
!13995 = distinct !DISubprogram(name: "gainc_level_mode3s", scope: !904, file: !904, line: 1030, type: !13996, isLocal: true, isDefinition: true, scopeLine: 1031, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!13996 = !DISubroutineType(types: !13997)
!13997 = !{null, !1719, !1719}
!13998 = !DILocalVariable(name: "dst", arg: 1, scope: !13995, file: !904, line: 1030, type: !1719)
!13999 = !DILocation(line: 1030, column: 54, scope: !13995)
!14000 = !DILocalVariable(name: "ref", arg: 2, scope: !13995, file: !904, line: 1030, type: !1719)
!14001 = !DILocation(line: 1030, column: 74, scope: !13995)
!14002 = !DILocalVariable(name: "i", scope: !13995, file: !904, line: 1032, type: !888)
!14003 = !DILocation(line: 1032, column: 9, scope: !13995)
!14004 = !DILocation(line: 1034, column: 12, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !13995, file: !904, line: 1034, column: 5)
!14006 = !DILocation(line: 1034, column: 10, scope: !14005)
!14007 = !DILocation(line: 1034, column: 17, scope: !14008)
!14008 = !DILexicalBlockFile(scope: !14009, file: !904, discriminator: 1)
!14009 = distinct !DILexicalBlock(scope: !14005, file: !904, line: 1034, column: 5)
!14010 = !DILocation(line: 1034, column: 21, scope: !14008)
!14011 = !DILocation(line: 1034, column: 26, scope: !14008)
!14012 = !DILocation(line: 1034, column: 19, scope: !14008)
!14013 = !DILocation(line: 1034, column: 5, scope: !14008)
!14014 = !DILocation(line: 1035, column: 29, scope: !14009)
!14015 = !DILocation(line: 1035, column: 34, scope: !14009)
!14016 = !DILocation(line: 1035, column: 39, scope: !14009)
!14017 = !DILocation(line: 1035, column: 31, scope: !14009)
!14018 = !DILocation(line: 1035, column: 28, scope: !14009)
!14019 = !DILocation(line: 1035, column: 28, scope: !14008)
!14020 = !DILocation(line: 1035, column: 71, scope: !14021)
!14021 = !DILexicalBlockFile(scope: !14009, file: !904, discriminator: 2)
!14022 = !DILocation(line: 1035, column: 57, scope: !14021)
!14023 = !DILocation(line: 1035, column: 62, scope: !14021)
!14024 = !DILocation(line: 1035, column: 28, scope: !14021)
!14025 = !DILocation(line: 1035, column: 28, scope: !14026)
!14026 = !DILexicalBlockFile(scope: !14009, file: !904, discriminator: 3)
!14027 = !DILocation(line: 1035, column: 23, scope: !14026)
!14028 = !DILocation(line: 1035, column: 9, scope: !14026)
!14029 = !DILocation(line: 1035, column: 14, scope: !14026)
!14030 = !DILocation(line: 1035, column: 26, scope: !14026)
!14031 = !DILocation(line: 1034, column: 39, scope: !14021)
!14032 = !DILocation(line: 1034, column: 5, scope: !14021)
!14033 = distinct !{!14033, !14034}
!14034 = !DILocation(line: 1034, column: 5, scope: !13995)
!14035 = !DILocation(line: 1036, column: 1, scope: !13995)
!14036 = distinct !DISubprogram(name: "gainc_loc_mode0", scope: !904, file: !904, line: 1153, type: !14037, isLocal: true, isDefinition: true, scopeLine: 1155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!14037 = !DISubroutineType(types: !14038)
!14038 = !{null, !1654, !1664, !1719, !888}
!14039 = !DILocalVariable(name: "gb", arg: 1, scope: !14036, file: !904, line: 1153, type: !1654)
!14040 = !DILocation(line: 1153, column: 51, scope: !14036)
!14041 = !DILocalVariable(name: "ctx", arg: 2, scope: !14036, file: !904, line: 1153, type: !1664)
!14042 = !DILocation(line: 1153, column: 75, scope: !14036)
!14043 = !DILocalVariable(name: "dst", arg: 3, scope: !14036, file: !904, line: 1154, type: !1719)
!14044 = !DILocation(line: 1154, column: 51, scope: !14036)
!14045 = !DILocalVariable(name: "pos", arg: 4, scope: !14036, file: !904, line: 1154, type: !888)
!14046 = !DILocation(line: 1154, column: 60, scope: !14036)
!14047 = !DILocalVariable(name: "delta_bits", scope: !14036, file: !904, line: 1156, type: !888)
!14048 = !DILocation(line: 1156, column: 9, scope: !14036)
!14049 = !DILocation(line: 1158, column: 10, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14036, file: !904, line: 1158, column: 9)
!14051 = !DILocation(line: 1158, column: 14, scope: !14050)
!14052 = !DILocation(line: 1158, column: 31, scope: !14053)
!14053 = !DILexicalBlockFile(scope: !14050, file: !904, discriminator: 1)
!14054 = !DILocation(line: 1158, column: 35, scope: !14053)
!14055 = !DILocation(line: 1158, column: 17, scope: !14053)
!14056 = !DILocation(line: 1158, column: 22, scope: !14053)
!14057 = !DILocation(line: 1158, column: 40, scope: !14053)
!14058 = !DILocation(line: 1158, column: 9, scope: !14053)
!14059 = !DILocation(line: 1159, column: 39, scope: !14050)
!14060 = !DILocation(line: 1159, column: 30, scope: !14050)
!14061 = !DILocation(line: 1159, column: 23, scope: !14050)
!14062 = !DILocation(line: 1159, column: 9, scope: !14050)
!14063 = !DILocation(line: 1159, column: 14, scope: !14050)
!14064 = !DILocation(line: 1159, column: 28, scope: !14050)
!14065 = !DILocation(line: 1160, column: 28, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14050, file: !904, line: 1160, column: 14)
!14067 = !DILocation(line: 1160, column: 32, scope: !14066)
!14068 = !DILocation(line: 1160, column: 14, scope: !14066)
!14069 = !DILocation(line: 1160, column: 19, scope: !14066)
!14070 = !DILocation(line: 1160, column: 37, scope: !14066)
!14071 = !DILocation(line: 1160, column: 14, scope: !14050)
!14072 = !DILocation(line: 1161, column: 23, scope: !14066)
!14073 = !DILocation(line: 1161, column: 9, scope: !14066)
!14074 = !DILocation(line: 1161, column: 14, scope: !14066)
!14075 = !DILocation(line: 1161, column: 28, scope: !14066)
!14076 = !DILocation(line: 1163, column: 62, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14066, file: !904, line: 1162, column: 10)
!14078 = !DILocation(line: 1163, column: 66, scope: !14077)
!14079 = !DILocation(line: 1163, column: 48, scope: !14077)
!14080 = !DILocation(line: 1163, column: 53, scope: !14077)
!14081 = !DILocation(line: 1163, column: 46, scope: !14077)
!14082 = !DILocation(line: 1163, column: 71, scope: !14077)
!14083 = !DILocation(line: 1163, column: 28, scope: !14077)
!14084 = !DILocation(line: 1163, column: 26, scope: !14077)
!14085 = !DILocation(line: 1163, column: 76, scope: !14077)
!14086 = !DILocation(line: 1163, column: 20, scope: !14077)
!14087 = !DILocation(line: 1164, column: 44, scope: !14077)
!14088 = !DILocation(line: 1164, column: 48, scope: !14077)
!14089 = !DILocation(line: 1164, column: 30, scope: !14077)
!14090 = !DILocation(line: 1164, column: 35, scope: !14077)
!14091 = !DILocation(line: 1165, column: 39, scope: !14077)
!14092 = !DILocation(line: 1165, column: 43, scope: !14077)
!14093 = !DILocation(line: 1165, column: 30, scope: !14077)
!14094 = !DILocation(line: 1164, column: 53, scope: !14077)
!14095 = !DILocation(line: 1165, column: 55, scope: !14077)
!14096 = !DILocation(line: 1164, column: 23, scope: !14077)
!14097 = !DILocation(line: 1164, column: 9, scope: !14077)
!14098 = !DILocation(line: 1164, column: 14, scope: !14077)
!14099 = !DILocation(line: 1164, column: 28, scope: !14077)
!14100 = !DILocation(line: 1167, column: 1, scope: !14036)
!14101 = distinct !DISubprogram(name: "gainc_loc_mode1", scope: !904, file: !904, line: 1176, type: !13513, isLocal: true, isDefinition: true, scopeLine: 1178, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!14102 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14103)
!14103 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !14104)
!14104 = distinct !DILocation(line: 1193, column: 32, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14106, file: !904, line: 1186, column: 47)
!14106 = distinct !DILexicalBlock(scope: !14107, file: !904, line: 1186, column: 9)
!14107 = distinct !DILexicalBlock(scope: !14108, file: !904, line: 1186, column: 9)
!14108 = distinct !DILexicalBlock(scope: !14109, file: !904, line: 1182, column: 30)
!14109 = distinct !DILexicalBlock(scope: !14101, file: !904, line: 1182, column: 9)
!14110 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14111)
!14111 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !14104)
!14112 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !14104)
!14114 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !14104)
!14115 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !14104)
!14116 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !14104)
!14117 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !14104)
!14118 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !14104)
!14119 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !14104)
!14120 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !14104)
!14121 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !14104)
!14122 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !14104)
!14123 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !14104)
!14124 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !14104)
!14125 = !DILocalVariable(name: "gb", arg: 1, scope: !14101, file: !904, line: 1176, type: !1654)
!14126 = !DILocation(line: 1176, column: 51, scope: !14101)
!14127 = !DILocalVariable(name: "ctx", arg: 2, scope: !14101, file: !904, line: 1176, type: !1664)
!14128 = !DILocation(line: 1176, column: 75, scope: !14101)
!14129 = !DILocalVariable(name: "dst", arg: 3, scope: !14101, file: !904, line: 1177, type: !1719)
!14130 = !DILocation(line: 1177, column: 51, scope: !14101)
!14131 = !DILocalVariable(name: "i", scope: !14101, file: !904, line: 1179, type: !888)
!14132 = !DILocation(line: 1179, column: 9, scope: !14101)
!14133 = !DILocalVariable(name: "tab", scope: !14101, file: !904, line: 1180, type: !1536)
!14134 = !DILocation(line: 1180, column: 10, scope: !14101)
!14135 = !DILocation(line: 1182, column: 9, scope: !14109)
!14136 = !DILocation(line: 1182, column: 14, scope: !14109)
!14137 = !DILocation(line: 1182, column: 25, scope: !14109)
!14138 = !DILocation(line: 1182, column: 9, scope: !14101)
!14139 = !DILocation(line: 1184, column: 37, scope: !14108)
!14140 = !DILocation(line: 1184, column: 28, scope: !14108)
!14141 = !DILocation(line: 1184, column: 9, scope: !14108)
!14142 = !DILocation(line: 1184, column: 14, scope: !14108)
!14143 = !DILocation(line: 1184, column: 26, scope: !14108)
!14144 = !DILocation(line: 1186, column: 16, scope: !14107)
!14145 = !DILocation(line: 1186, column: 14, scope: !14107)
!14146 = !DILocation(line: 1186, column: 21, scope: !14147)
!14147 = !DILexicalBlockFile(scope: !14106, file: !904, discriminator: 1)
!14148 = !DILocation(line: 1186, column: 25, scope: !14147)
!14149 = !DILocation(line: 1186, column: 30, scope: !14147)
!14150 = !DILocation(line: 1186, column: 23, scope: !14147)
!14151 = !DILocation(line: 1186, column: 9, scope: !14147)
!14152 = !DILocation(line: 1189, column: 34, scope: !14105)
!14153 = !DILocation(line: 1189, column: 20, scope: !14105)
!14154 = !DILocation(line: 1189, column: 25, scope: !14105)
!14155 = !DILocation(line: 1189, column: 54, scope: !14105)
!14156 = !DILocation(line: 1189, column: 56, scope: !14105)
!14157 = !DILocation(line: 1189, column: 40, scope: !14105)
!14158 = !DILocation(line: 1189, column: 45, scope: !14105)
!14159 = !DILocation(line: 1189, column: 37, scope: !14105)
!14160 = !DILocation(line: 1189, column: 19, scope: !14105)
!14161 = !DILocation(line: 1189, column: 17, scope: !14105)
!14162 = !DILocation(line: 1192, column: 46, scope: !14105)
!14163 = !DILocation(line: 1192, column: 48, scope: !14105)
!14164 = !DILocation(line: 1192, column: 32, scope: !14105)
!14165 = !DILocation(line: 1192, column: 37, scope: !14105)
!14166 = !DILocation(line: 1193, column: 41, scope: !14105)
!14167 = !DILocation(line: 1193, column: 45, scope: !14105)
!14168 = !DILocation(line: 1193, column: 50, scope: !14105)
!14169 = !DILocation(line: 1193, column: 57, scope: !14105)
!14170 = !DILocation(line: 1193, column: 62, scope: !14105)
!14171 = !DILocation(line: 1193, column: 32, scope: !14105)
!14172 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !14104)
!14173 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !14104)
!14174 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !14104)
!14175 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !14104)
!14176 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !14104)
!14177 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !14104)
!14178 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !14104)
!14179 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !14104)
!14180 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !14104)
!14181 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !14104)
!14182 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !14104)
!14183 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14113)
!14184 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14113)
!14185 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14113)
!14186 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14113)
!14187 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14113)
!14188 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14113)
!14189 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14113)
!14190 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14113)
!14191 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14113)
!14192 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14113)
!14193 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14113)
!14194 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14113)
!14195 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14113)
!14196 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14113)
!14197 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14113)
!14198 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14113)
!14199 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14113)
!14200 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14113)
!14201 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !14104)
!14202 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !14104)
!14203 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !14104)
!14204 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !14104)
!14205 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !14104)
!14206 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !14104)
!14207 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !14104)
!14208 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !14104)
!14209 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !14104)
!14210 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !14104)
!14211 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !14104)
!14212 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !14104)
!14213 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !14104)
!14214 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !14104)
!14215 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !14104)
!14216 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !14104)
!14217 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !14104)
!14218 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !14104)
!14219 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !14104)
!14220 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !14104)
!14221 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !14104)
!14222 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !14104)
!14223 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !14104)
!14224 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !14104)
!14225 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !14104)
!14226 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !14104)
!14227 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !14104)
!14228 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !14104)
!14229 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !14104)
!14230 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !14104)
!14231 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !14104)
!14232 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !14104)
!14233 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !14104)
!14234 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !14104)
!14235 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !14104)
!14236 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !14104)
!14237 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !14104)
!14238 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !14104)
!14239 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !14104)
!14240 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !14104)
!14241 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !14104)
!14242 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14111)
!14243 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14111)
!14244 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14111)
!14245 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14111)
!14246 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14111)
!14247 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14111)
!14248 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14111)
!14249 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14111)
!14250 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14111)
!14251 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14111)
!14252 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14111)
!14253 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14111)
!14254 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14111)
!14255 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14111)
!14256 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14111)
!14257 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14111)
!14258 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14111)
!14259 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14111)
!14260 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !14104)
!14261 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !14104)
!14262 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !14104)
!14263 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !14104)
!14264 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !14104)
!14265 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !14104)
!14266 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !14104)
!14267 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !14104)
!14268 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !14104)
!14269 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !14104)
!14270 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !14104)
!14271 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !14104)
!14272 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !14104)
!14273 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !14104)
!14274 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !14104)
!14275 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !14104)
!14276 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !14104)
!14277 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !14104)
!14278 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !14104)
!14279 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !14104)
!14280 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !14104)
!14281 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !14104)
!14282 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !14104)
!14283 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !14104)
!14284 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !14104)
!14285 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !14104)
!14286 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !14104)
!14287 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !14104)
!14288 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !14104)
!14289 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !14104)
!14290 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !14104)
!14291 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !14104)
!14292 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !14104)
!14293 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !14104)
!14294 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !14104)
!14295 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !14104)
!14296 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !14104)
!14297 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !14104)
!14298 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !14104)
!14299 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !14104)
!14300 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !14104)
!14301 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !14104)
!14302 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !14104)
!14303 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !14104)
!14304 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !14104)
!14305 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !14104)
!14306 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14103)
!14307 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14103)
!14308 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14103)
!14309 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14103)
!14310 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14103)
!14311 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14103)
!14312 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14103)
!14313 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14103)
!14314 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14103)
!14315 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14103)
!14316 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14103)
!14317 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14103)
!14318 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14103)
!14319 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14103)
!14320 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14103)
!14321 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14103)
!14322 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14103)
!14323 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14103)
!14324 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !14104)
!14325 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !14104)
!14326 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !14104)
!14327 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !14104)
!14328 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !14104)
!14329 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !14104)
!14330 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !14104)
!14331 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !14104)
!14332 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !14104)
!14333 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !14104)
!14334 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !14104)
!14335 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !14104)
!14336 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !14104)
!14337 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !14104)
!14338 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !14104)
!14339 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !14104)
!14340 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !14104)
!14341 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !14104)
!14342 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !14104)
!14343 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !14104)
!14344 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !14104)
!14345 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !14104)
!14346 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !14104)
!14347 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !14104)
!14348 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !14104)
!14349 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !14104)
!14350 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !14104)
!14351 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !14104)
!14352 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !14104)
!14353 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !14104)
!14354 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !14104)
!14355 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !14104)
!14356 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !14104)
!14357 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !14104)
!14358 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !14104)
!14359 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !14104)
!14360 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !14104)
!14361 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !14104)
!14362 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !14104)
!14363 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !14104)
!14364 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !14104)
!14365 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !14104)
!14366 = !DILocation(line: 1192, column: 53, scope: !14105)
!14367 = !DILocation(line: 1192, column: 27, scope: !14105)
!14368 = !DILocation(line: 1192, column: 13, scope: !14105)
!14369 = !DILocation(line: 1192, column: 18, scope: !14105)
!14370 = !DILocation(line: 1192, column: 30, scope: !14105)
!14371 = !DILocation(line: 1194, column: 9, scope: !14105)
!14372 = !DILocation(line: 1186, column: 43, scope: !14373)
!14373 = !DILexicalBlockFile(scope: !14106, file: !904, discriminator: 2)
!14374 = !DILocation(line: 1186, column: 9, scope: !14373)
!14375 = distinct !{!14375, !14376}
!14376 = !DILocation(line: 1186, column: 9, scope: !14108)
!14377 = !DILocation(line: 1195, column: 5, scope: !14108)
!14378 = !DILocation(line: 1196, column: 1, scope: !14101)
!14379 = distinct !DISubprogram(name: "decode_tones_envelope", scope: !904, file: !904, line: 1405, type: !14380, isLocal: true, isDefinition: true, scopeLine: 1407, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{null, !1654, !1664, !888, !1535}
!14382 = !DILocalVariable(name: "gb", arg: 1, scope: !14379, file: !904, line: 1405, type: !1654)
!14383 = !DILocation(line: 1405, column: 50, scope: !14379)
!14384 = !DILocalVariable(name: "ctx", arg: 2, scope: !14379, file: !904, line: 1405, type: !1664)
!14385 = !DILocation(line: 1405, column: 74, scope: !14379)
!14386 = !DILocalVariable(name: "ch_num", arg: 3, scope: !14379, file: !904, line: 1406, type: !888)
!14387 = !DILocation(line: 1406, column: 39, scope: !14379)
!14388 = !DILocalVariable(name: "band_has_tones", arg: 4, scope: !14379, file: !904, line: 1406, type: !1535)
!14389 = !DILocation(line: 1406, column: 51, scope: !14379)
!14390 = !DILocalVariable(name: "sb", scope: !14379, file: !904, line: 1408, type: !888)
!14391 = !DILocation(line: 1408, column: 9, scope: !14379)
!14392 = !DILocalVariable(name: "dst", scope: !14379, file: !904, line: 1409, type: !1739)
!14393 = !DILocation(line: 1409, column: 23, scope: !14379)
!14394 = !DILocation(line: 1409, column: 43, scope: !14379)
!14395 = !DILocation(line: 1409, column: 29, scope: !14379)
!14396 = !DILocation(line: 1409, column: 34, scope: !14379)
!14397 = !DILocation(line: 1409, column: 51, scope: !14379)
!14398 = !DILocalVariable(name: "ref", scope: !14379, file: !904, line: 1410, type: !1739)
!14399 = !DILocation(line: 1410, column: 23, scope: !14379)
!14400 = !DILocation(line: 1410, column: 29, scope: !14379)
!14401 = !DILocation(line: 1410, column: 34, scope: !14379)
!14402 = !DILocation(line: 1410, column: 46, scope: !14379)
!14403 = !DILocation(line: 1412, column: 10, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14379, file: !904, line: 1412, column: 9)
!14405 = !DILocation(line: 1412, column: 17, scope: !14404)
!14406 = !DILocation(line: 1412, column: 31, scope: !14407)
!14407 = !DILexicalBlockFile(scope: !14404, file: !904, discriminator: 1)
!14408 = !DILocation(line: 1412, column: 21, scope: !14407)
!14409 = !DILocation(line: 1412, column: 9, scope: !14407)
!14410 = !DILocation(line: 1413, column: 17, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14412, file: !904, line: 1413, column: 9)
!14412 = distinct !DILexicalBlock(scope: !14404, file: !904, line: 1412, column: 36)
!14413 = !DILocation(line: 1413, column: 14, scope: !14411)
!14414 = !DILocation(line: 1413, column: 22, scope: !14415)
!14415 = !DILexicalBlockFile(scope: !14416, file: !904, discriminator: 1)
!14416 = distinct !DILexicalBlock(scope: !14411, file: !904, line: 1413, column: 9)
!14417 = !DILocation(line: 1413, column: 27, scope: !14415)
!14418 = !DILocation(line: 1413, column: 32, scope: !14415)
!14419 = !DILocation(line: 1413, column: 44, scope: !14415)
!14420 = !DILocation(line: 1413, column: 25, scope: !14415)
!14421 = !DILocation(line: 1413, column: 9, scope: !14415)
!14422 = !DILocation(line: 1414, column: 33, scope: !14423)
!14423 = distinct !DILexicalBlock(scope: !14424, file: !904, line: 1414, column: 17)
!14424 = distinct !DILexicalBlock(scope: !14416, file: !904, line: 1413, column: 66)
!14425 = !DILocation(line: 1414, column: 18, scope: !14423)
!14426 = !DILocation(line: 1414, column: 17, scope: !14424)
!14427 = !DILocation(line: 1415, column: 17, scope: !14423)
!14428 = !DILocation(line: 1416, column: 58, scope: !14424)
!14429 = !DILocation(line: 1416, column: 48, scope: !14424)
!14430 = !DILocation(line: 1416, column: 17, scope: !14424)
!14431 = !DILocation(line: 1416, column: 13, scope: !14424)
!14432 = !DILocation(line: 1416, column: 21, scope: !14424)
!14433 = !DILocation(line: 1416, column: 30, scope: !14424)
!14434 = !DILocation(line: 1416, column: 46, scope: !14424)
!14435 = !DILocation(line: 1417, column: 46, scope: !14424)
!14436 = !DILocation(line: 1417, column: 42, scope: !14424)
!14437 = !DILocation(line: 1417, column: 50, scope: !14424)
!14438 = !DILocation(line: 1417, column: 59, scope: !14424)
!14439 = !DILocation(line: 1418, column: 59, scope: !14424)
!14440 = !DILocation(line: 1418, column: 50, scope: !14424)
!14441 = !DILocation(line: 1417, column: 42, scope: !14442)
!14442 = !DILexicalBlockFile(scope: !14424, file: !904, discriminator: 1)
!14443 = !DILocation(line: 1417, column: 42, scope: !14444)
!14444 = !DILexicalBlockFile(scope: !14424, file: !904, discriminator: 2)
!14445 = !DILocation(line: 1417, column: 42, scope: !14446)
!14446 = !DILexicalBlockFile(scope: !14424, file: !904, discriminator: 3)
!14447 = !DILocation(line: 1417, column: 17, scope: !14446)
!14448 = !DILocation(line: 1417, column: 13, scope: !14446)
!14449 = !DILocation(line: 1417, column: 21, scope: !14446)
!14450 = !DILocation(line: 1417, column: 30, scope: !14446)
!14451 = !DILocation(line: 1417, column: 40, scope: !14446)
!14452 = !DILocation(line: 1419, column: 57, scope: !14424)
!14453 = !DILocation(line: 1419, column: 47, scope: !14424)
!14454 = !DILocation(line: 1419, column: 17, scope: !14424)
!14455 = !DILocation(line: 1419, column: 13, scope: !14424)
!14456 = !DILocation(line: 1419, column: 21, scope: !14424)
!14457 = !DILocation(line: 1419, column: 30, scope: !14424)
!14458 = !DILocation(line: 1419, column: 45, scope: !14424)
!14459 = !DILocation(line: 1420, column: 45, scope: !14424)
!14460 = !DILocation(line: 1420, column: 41, scope: !14424)
!14461 = !DILocation(line: 1420, column: 49, scope: !14424)
!14462 = !DILocation(line: 1420, column: 58, scope: !14424)
!14463 = !DILocation(line: 1421, column: 59, scope: !14424)
!14464 = !DILocation(line: 1421, column: 50, scope: !14424)
!14465 = !DILocation(line: 1420, column: 41, scope: !14442)
!14466 = !DILocation(line: 1420, column: 41, scope: !14444)
!14467 = !DILocation(line: 1420, column: 41, scope: !14446)
!14468 = !DILocation(line: 1420, column: 17, scope: !14446)
!14469 = !DILocation(line: 1420, column: 13, scope: !14446)
!14470 = !DILocation(line: 1420, column: 21, scope: !14446)
!14471 = !DILocation(line: 1420, column: 30, scope: !14446)
!14472 = !DILocation(line: 1420, column: 39, scope: !14446)
!14473 = !DILocation(line: 1422, column: 9, scope: !14424)
!14474 = !DILocation(line: 1413, column: 62, scope: !14475)
!14475 = !DILexicalBlockFile(scope: !14416, file: !904, discriminator: 2)
!14476 = !DILocation(line: 1413, column: 9, scope: !14475)
!14477 = distinct !{!14477, !14478}
!14478 = !DILocation(line: 1413, column: 9, scope: !14412)
!14479 = !DILocation(line: 1423, column: 5, scope: !14412)
!14480 = !DILocation(line: 1424, column: 17, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14482, file: !904, line: 1424, column: 9)
!14482 = distinct !DILexicalBlock(scope: !14404, file: !904, line: 1423, column: 12)
!14483 = !DILocation(line: 1424, column: 14, scope: !14481)
!14484 = !DILocation(line: 1424, column: 22, scope: !14485)
!14485 = !DILexicalBlockFile(scope: !14486, file: !904, discriminator: 1)
!14486 = distinct !DILexicalBlock(scope: !14481, file: !904, line: 1424, column: 9)
!14487 = !DILocation(line: 1424, column: 27, scope: !14485)
!14488 = !DILocation(line: 1424, column: 32, scope: !14485)
!14489 = !DILocation(line: 1424, column: 44, scope: !14485)
!14490 = !DILocation(line: 1424, column: 25, scope: !14485)
!14491 = !DILocation(line: 1424, column: 9, scope: !14485)
!14492 = !DILocation(line: 1425, column: 33, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !14494, file: !904, line: 1425, column: 17)
!14494 = distinct !DILexicalBlock(scope: !14486, file: !904, line: 1424, column: 66)
!14495 = !DILocation(line: 1425, column: 18, scope: !14493)
!14496 = !DILocation(line: 1425, column: 17, scope: !14494)
!14497 = !DILocation(line: 1426, column: 17, scope: !14493)
!14498 = !DILocation(line: 1427, column: 52, scope: !14494)
!14499 = !DILocation(line: 1427, column: 48, scope: !14494)
!14500 = !DILocation(line: 1427, column: 56, scope: !14494)
!14501 = !DILocation(line: 1427, column: 65, scope: !14494)
!14502 = !DILocation(line: 1427, column: 17, scope: !14494)
!14503 = !DILocation(line: 1427, column: 13, scope: !14494)
!14504 = !DILocation(line: 1427, column: 21, scope: !14494)
!14505 = !DILocation(line: 1427, column: 30, scope: !14494)
!14506 = !DILocation(line: 1427, column: 46, scope: !14494)
!14507 = !DILocation(line: 1428, column: 51, scope: !14494)
!14508 = !DILocation(line: 1428, column: 47, scope: !14494)
!14509 = !DILocation(line: 1428, column: 55, scope: !14494)
!14510 = !DILocation(line: 1428, column: 64, scope: !14494)
!14511 = !DILocation(line: 1428, column: 17, scope: !14494)
!14512 = !DILocation(line: 1428, column: 13, scope: !14494)
!14513 = !DILocation(line: 1428, column: 21, scope: !14494)
!14514 = !DILocation(line: 1428, column: 30, scope: !14494)
!14515 = !DILocation(line: 1428, column: 45, scope: !14494)
!14516 = !DILocation(line: 1429, column: 46, scope: !14494)
!14517 = !DILocation(line: 1429, column: 42, scope: !14494)
!14518 = !DILocation(line: 1429, column: 50, scope: !14494)
!14519 = !DILocation(line: 1429, column: 59, scope: !14494)
!14520 = !DILocation(line: 1429, column: 17, scope: !14494)
!14521 = !DILocation(line: 1429, column: 13, scope: !14494)
!14522 = !DILocation(line: 1429, column: 21, scope: !14494)
!14523 = !DILocation(line: 1429, column: 30, scope: !14494)
!14524 = !DILocation(line: 1429, column: 40, scope: !14494)
!14525 = !DILocation(line: 1430, column: 45, scope: !14494)
!14526 = !DILocation(line: 1430, column: 41, scope: !14494)
!14527 = !DILocation(line: 1430, column: 49, scope: !14494)
!14528 = !DILocation(line: 1430, column: 58, scope: !14494)
!14529 = !DILocation(line: 1430, column: 17, scope: !14494)
!14530 = !DILocation(line: 1430, column: 13, scope: !14494)
!14531 = !DILocation(line: 1430, column: 21, scope: !14494)
!14532 = !DILocation(line: 1430, column: 30, scope: !14494)
!14533 = !DILocation(line: 1430, column: 39, scope: !14494)
!14534 = !DILocation(line: 1431, column: 9, scope: !14494)
!14535 = !DILocation(line: 1424, column: 62, scope: !14536)
!14536 = !DILexicalBlockFile(scope: !14486, file: !904, discriminator: 2)
!14537 = !DILocation(line: 1424, column: 9, scope: !14536)
!14538 = distinct !{!14538, !14539}
!14539 = !DILocation(line: 1424, column: 9, scope: !14482)
!14540 = !DILocation(line: 1433, column: 1, scope: !14379)
!14541 = distinct !DISubprogram(name: "decode_band_numwavs", scope: !904, file: !904, line: 1446, type: !14542, isLocal: true, isDefinition: true, scopeLine: 1449, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!14542 = !DISubroutineType(types: !14543)
!14543 = !{!888, !1654, !1664, !888, !1535, !1782}
!14544 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !14546)
!14546 = distinct !DILocation(line: 1471, column: 25, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14548, file: !904, line: 1470, column: 37)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !904, line: 1470, column: 17)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !904, line: 1469, column: 9)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !904, line: 1469, column: 9)
!14551 = distinct !DILexicalBlock(scope: !14541, file: !904, line: 1455, column: 19)
!14552 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !14546)
!14554 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14555)
!14555 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !14546)
!14556 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !14546)
!14557 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !14546)
!14558 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !14546)
!14559 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !14546)
!14560 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !14546)
!14561 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !14546)
!14562 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !14546)
!14563 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !14546)
!14564 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !14546)
!14565 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !14546)
!14566 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !14546)
!14567 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 1465, column: 21, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14571, file: !904, line: 1463, column: 17)
!14571 = distinct !DILexicalBlock(scope: !14572, file: !904, line: 1462, column: 9)
!14572 = distinct !DILexicalBlock(scope: !14551, file: !904, line: 1462, column: 9)
!14573 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !14569)
!14575 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !14569)
!14577 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !14569)
!14578 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !14569)
!14579 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !14569)
!14580 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !14569)
!14581 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !14569)
!14582 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !14569)
!14583 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !14569)
!14584 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !14569)
!14585 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !14569)
!14586 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !14569)
!14587 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !14569)
!14588 = !DILocalVariable(name: "gb", arg: 1, scope: !14541, file: !904, line: 1446, type: !1654)
!14589 = !DILocation(line: 1446, column: 47, scope: !14541)
!14590 = !DILocalVariable(name: "ctx", arg: 2, scope: !14541, file: !904, line: 1446, type: !1664)
!14591 = !DILocation(line: 1446, column: 71, scope: !14541)
!14592 = !DILocalVariable(name: "ch_num", arg: 3, scope: !14541, file: !904, line: 1447, type: !888)
!14593 = !DILocation(line: 1447, column: 36, scope: !14541)
!14594 = !DILocalVariable(name: "band_has_tones", arg: 4, scope: !14541, file: !904, line: 1447, type: !1535)
!14595 = !DILocation(line: 1447, column: 48, scope: !14541)
!14596 = !DILocalVariable(name: "avctx", arg: 5, scope: !14541, file: !904, line: 1448, type: !1782)
!14597 = !DILocation(line: 1448, column: 48, scope: !14541)
!14598 = !DILocalVariable(name: "mode", scope: !14541, file: !904, line: 1450, type: !888)
!14599 = !DILocation(line: 1450, column: 9, scope: !14541)
!14600 = !DILocalVariable(name: "sb", scope: !14541, file: !904, line: 1450, type: !888)
!14601 = !DILocation(line: 1450, column: 15, scope: !14541)
!14602 = !DILocalVariable(name: "delta", scope: !14541, file: !904, line: 1450, type: !888)
!14603 = !DILocation(line: 1450, column: 19, scope: !14541)
!14604 = !DILocalVariable(name: "dst", scope: !14541, file: !904, line: 1451, type: !1739)
!14605 = !DILocation(line: 1451, column: 23, scope: !14541)
!14606 = !DILocation(line: 1451, column: 43, scope: !14541)
!14607 = !DILocation(line: 1451, column: 29, scope: !14541)
!14608 = !DILocation(line: 1451, column: 34, scope: !14541)
!14609 = !DILocation(line: 1451, column: 51, scope: !14541)
!14610 = !DILocalVariable(name: "ref", scope: !14541, file: !904, line: 1452, type: !1739)
!14611 = !DILocation(line: 1452, column: 23, scope: !14541)
!14612 = !DILocation(line: 1452, column: 29, scope: !14541)
!14613 = !DILocation(line: 1452, column: 34, scope: !14541)
!14614 = !DILocation(line: 1452, column: 46, scope: !14541)
!14615 = !DILocation(line: 1454, column: 21, scope: !14541)
!14616 = !DILocation(line: 1454, column: 25, scope: !14541)
!14617 = !DILocation(line: 1454, column: 32, scope: !14541)
!14618 = !DILocation(line: 1454, column: 12, scope: !14541)
!14619 = !DILocation(line: 1454, column: 10, scope: !14541)
!14620 = !DILocation(line: 1455, column: 13, scope: !14541)
!14621 = !DILocation(line: 1455, column: 5, scope: !14541)
!14622 = !DILocation(line: 1457, column: 17, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14551, file: !904, line: 1457, column: 9)
!14624 = !DILocation(line: 1457, column: 14, scope: !14623)
!14625 = !DILocation(line: 1457, column: 22, scope: !14626)
!14626 = !DILexicalBlockFile(scope: !14627, file: !904, discriminator: 1)
!14627 = distinct !DILexicalBlock(scope: !14623, file: !904, line: 1457, column: 9)
!14628 = !DILocation(line: 1457, column: 27, scope: !14626)
!14629 = !DILocation(line: 1457, column: 32, scope: !14626)
!14630 = !DILocation(line: 1457, column: 44, scope: !14626)
!14631 = !DILocation(line: 1457, column: 25, scope: !14626)
!14632 = !DILocation(line: 1457, column: 9, scope: !14626)
!14633 = !DILocation(line: 1458, column: 32, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14627, file: !904, line: 1458, column: 17)
!14635 = !DILocation(line: 1458, column: 17, scope: !14634)
!14636 = !DILocation(line: 1458, column: 17, scope: !14627)
!14637 = !DILocation(line: 1459, column: 45, scope: !14634)
!14638 = !DILocation(line: 1459, column: 36, scope: !14634)
!14639 = !DILocation(line: 1459, column: 21, scope: !14634)
!14640 = !DILocation(line: 1459, column: 17, scope: !14634)
!14641 = !DILocation(line: 1459, column: 25, scope: !14634)
!14642 = !DILocation(line: 1459, column: 34, scope: !14634)
!14643 = !DILocation(line: 1458, column: 34, scope: !14644)
!14644 = !DILexicalBlockFile(scope: !14634, file: !904, discriminator: 1)
!14645 = !DILocation(line: 1457, column: 62, scope: !14646)
!14646 = !DILexicalBlockFile(scope: !14627, file: !904, discriminator: 2)
!14647 = !DILocation(line: 1457, column: 9, scope: !14646)
!14648 = distinct !{!14648, !14649}
!14649 = !DILocation(line: 1457, column: 9, scope: !14551)
!14650 = !DILocation(line: 1460, column: 9, scope: !14551)
!14651 = !DILocation(line: 1462, column: 17, scope: !14572)
!14652 = !DILocation(line: 1462, column: 14, scope: !14572)
!14653 = !DILocation(line: 1462, column: 22, scope: !14654)
!14654 = !DILexicalBlockFile(scope: !14571, file: !904, discriminator: 1)
!14655 = !DILocation(line: 1462, column: 27, scope: !14654)
!14656 = !DILocation(line: 1462, column: 32, scope: !14654)
!14657 = !DILocation(line: 1462, column: 44, scope: !14654)
!14658 = !DILocation(line: 1462, column: 25, scope: !14654)
!14659 = !DILocation(line: 1462, column: 9, scope: !14654)
!14660 = !DILocation(line: 1463, column: 32, scope: !14570)
!14661 = !DILocation(line: 1463, column: 17, scope: !14570)
!14662 = !DILocation(line: 1463, column: 17, scope: !14571)
!14663 = !DILocation(line: 1465, column: 30, scope: !14570)
!14664 = !DILocation(line: 1465, column: 51, scope: !14570)
!14665 = !DILocation(line: 1466, column: 47, scope: !14570)
!14666 = !DILocation(line: 1465, column: 21, scope: !14570)
!14667 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !14569)
!14668 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !14569)
!14669 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !14569)
!14670 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !14569)
!14671 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !14569)
!14672 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !14569)
!14673 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !14569)
!14674 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !14569)
!14675 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !14569)
!14676 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !14569)
!14677 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !14569)
!14678 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14576)
!14679 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14576)
!14680 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14576)
!14681 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14576)
!14682 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14576)
!14683 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14576)
!14684 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14576)
!14685 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14576)
!14686 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14576)
!14687 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14576)
!14688 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14576)
!14689 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14576)
!14690 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14576)
!14691 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14576)
!14692 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14576)
!14693 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14576)
!14694 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14576)
!14695 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14576)
!14696 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !14569)
!14697 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !14569)
!14698 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !14569)
!14699 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !14569)
!14700 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !14569)
!14701 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !14569)
!14702 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !14569)
!14703 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !14569)
!14704 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !14569)
!14705 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !14569)
!14706 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !14569)
!14707 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !14569)
!14708 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !14569)
!14709 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !14569)
!14710 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !14569)
!14711 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !14569)
!14712 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !14569)
!14713 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !14569)
!14714 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !14569)
!14715 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !14569)
!14716 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !14569)
!14717 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !14569)
!14718 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !14569)
!14719 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !14569)
!14720 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !14569)
!14721 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !14569)
!14722 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !14569)
!14723 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !14569)
!14724 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !14569)
!14725 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !14569)
!14726 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !14569)
!14727 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !14569)
!14728 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !14569)
!14729 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !14569)
!14730 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !14569)
!14731 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !14569)
!14732 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !14569)
!14733 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !14569)
!14734 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !14569)
!14735 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !14569)
!14736 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !14569)
!14737 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14574)
!14738 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14574)
!14739 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14574)
!14740 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14574)
!14741 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14574)
!14742 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14574)
!14743 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14574)
!14744 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14574)
!14745 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14574)
!14746 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14574)
!14747 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14574)
!14748 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14574)
!14749 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14574)
!14750 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14574)
!14751 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14574)
!14752 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14574)
!14753 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14574)
!14754 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14574)
!14755 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !14569)
!14756 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !14569)
!14757 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !14569)
!14758 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !14569)
!14759 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !14569)
!14760 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !14569)
!14761 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !14569)
!14762 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !14569)
!14763 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !14569)
!14764 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !14569)
!14765 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !14569)
!14766 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !14569)
!14767 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !14569)
!14768 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !14569)
!14769 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !14569)
!14770 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !14569)
!14771 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !14569)
!14772 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !14569)
!14773 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !14569)
!14774 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !14569)
!14775 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !14569)
!14776 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !14569)
!14777 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !14569)
!14778 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !14569)
!14779 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !14569)
!14780 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !14569)
!14781 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !14569)
!14782 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !14569)
!14783 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !14569)
!14784 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !14569)
!14785 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !14569)
!14786 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !14569)
!14787 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !14569)
!14788 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !14569)
!14789 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !14569)
!14790 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !14569)
!14791 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !14569)
!14792 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !14569)
!14793 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !14569)
!14794 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !14569)
!14795 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !14569)
!14796 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !14569)
!14797 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !14569)
!14798 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !14569)
!14799 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !14569)
!14800 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !14569)
!14801 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14568)
!14802 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14568)
!14803 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14568)
!14804 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14568)
!14805 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14568)
!14806 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14568)
!14807 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14568)
!14808 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14568)
!14809 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14568)
!14810 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14568)
!14811 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14568)
!14812 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14568)
!14813 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14568)
!14814 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14568)
!14815 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14568)
!14816 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14568)
!14817 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14568)
!14818 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14568)
!14819 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !14569)
!14820 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !14569)
!14821 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !14569)
!14822 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !14569)
!14823 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !14569)
!14824 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !14569)
!14825 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !14569)
!14826 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !14569)
!14827 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !14569)
!14828 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !14569)
!14829 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !14569)
!14830 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !14569)
!14831 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !14569)
!14832 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !14569)
!14833 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !14569)
!14834 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !14569)
!14835 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !14569)
!14836 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !14569)
!14837 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !14569)
!14838 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !14569)
!14839 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !14569)
!14840 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !14569)
!14841 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !14569)
!14842 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !14569)
!14843 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !14569)
!14844 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !14569)
!14845 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !14569)
!14846 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !14569)
!14847 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !14569)
!14848 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !14569)
!14849 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !14569)
!14850 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !14569)
!14851 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !14569)
!14852 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !14569)
!14853 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !14569)
!14854 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !14569)
!14855 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !14569)
!14856 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !14569)
!14857 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !14569)
!14858 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !14569)
!14859 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !14569)
!14860 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !14569)
!14861 = !DILocation(line: 1464, column: 21, scope: !14570)
!14862 = !DILocation(line: 1464, column: 17, scope: !14570)
!14863 = !DILocation(line: 1464, column: 25, scope: !14570)
!14864 = !DILocation(line: 1464, column: 34, scope: !14570)
!14865 = !DILocation(line: 1463, column: 34, scope: !14866)
!14866 = !DILexicalBlockFile(scope: !14570, file: !904, discriminator: 1)
!14867 = !DILocation(line: 1462, column: 62, scope: !14868)
!14868 = !DILexicalBlockFile(scope: !14571, file: !904, discriminator: 2)
!14869 = !DILocation(line: 1462, column: 9, scope: !14868)
!14870 = distinct !{!14870, !14871}
!14871 = !DILocation(line: 1462, column: 9, scope: !14551)
!14872 = !DILocation(line: 1467, column: 9, scope: !14551)
!14873 = !DILocation(line: 1469, column: 17, scope: !14550)
!14874 = !DILocation(line: 1469, column: 14, scope: !14550)
!14875 = !DILocation(line: 1469, column: 22, scope: !14876)
!14876 = !DILexicalBlockFile(scope: !14549, file: !904, discriminator: 1)
!14877 = !DILocation(line: 1469, column: 27, scope: !14876)
!14878 = !DILocation(line: 1469, column: 32, scope: !14876)
!14879 = !DILocation(line: 1469, column: 44, scope: !14876)
!14880 = !DILocation(line: 1469, column: 25, scope: !14876)
!14881 = !DILocation(line: 1469, column: 9, scope: !14876)
!14882 = !DILocation(line: 1470, column: 32, scope: !14548)
!14883 = !DILocation(line: 1470, column: 17, scope: !14548)
!14884 = !DILocation(line: 1470, column: 17, scope: !14549)
!14885 = !DILocation(line: 1471, column: 34, scope: !14547)
!14886 = !DILocation(line: 1471, column: 55, scope: !14547)
!14887 = !DILocation(line: 1472, column: 51, scope: !14547)
!14888 = !DILocation(line: 1471, column: 25, scope: !14547)
!14889 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !14546)
!14890 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !14546)
!14891 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !14546)
!14892 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !14546)
!14893 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !14546)
!14894 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !14546)
!14895 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !14546)
!14896 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !14546)
!14897 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !14546)
!14898 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !14546)
!14899 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !14546)
!14900 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14555)
!14901 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14555)
!14902 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14555)
!14903 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14555)
!14904 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14555)
!14905 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14555)
!14906 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14555)
!14907 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14555)
!14908 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14555)
!14909 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14555)
!14910 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14555)
!14911 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14555)
!14912 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14555)
!14913 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14555)
!14914 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14555)
!14915 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14555)
!14916 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14555)
!14917 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14555)
!14918 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !14546)
!14919 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !14546)
!14920 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !14546)
!14921 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !14546)
!14922 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !14546)
!14923 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !14546)
!14924 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !14546)
!14925 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !14546)
!14926 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !14546)
!14927 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !14546)
!14928 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !14546)
!14929 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !14546)
!14930 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !14546)
!14931 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !14546)
!14932 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !14546)
!14933 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !14546)
!14934 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !14546)
!14935 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !14546)
!14936 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !14546)
!14937 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !14546)
!14938 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !14546)
!14939 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !14546)
!14940 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !14546)
!14941 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !14546)
!14942 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !14546)
!14943 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !14546)
!14944 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !14546)
!14945 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !14546)
!14946 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !14546)
!14947 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !14546)
!14948 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !14546)
!14949 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !14546)
!14950 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !14546)
!14951 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !14546)
!14952 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !14546)
!14953 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !14546)
!14954 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !14546)
!14955 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !14546)
!14956 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !14546)
!14957 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !14546)
!14958 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !14546)
!14959 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14553)
!14960 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14553)
!14961 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14553)
!14962 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14553)
!14963 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14553)
!14964 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14553)
!14965 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14553)
!14966 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14553)
!14967 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14553)
!14968 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14553)
!14969 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14553)
!14970 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14553)
!14971 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14553)
!14972 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14553)
!14973 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14553)
!14974 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14553)
!14975 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14553)
!14976 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14553)
!14977 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !14546)
!14978 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !14546)
!14979 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !14546)
!14980 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !14546)
!14981 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !14546)
!14982 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !14546)
!14983 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !14546)
!14984 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !14546)
!14985 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !14546)
!14986 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !14546)
!14987 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !14546)
!14988 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !14546)
!14989 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !14546)
!14990 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !14546)
!14991 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !14546)
!14992 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !14546)
!14993 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !14546)
!14994 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !14546)
!14995 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !14546)
!14996 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !14546)
!14997 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !14546)
!14998 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !14546)
!14999 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !14546)
!15000 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !14546)
!15001 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !14546)
!15002 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !14546)
!15003 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !14546)
!15004 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !14546)
!15005 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !14546)
!15006 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !14546)
!15007 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !14546)
!15008 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !14546)
!15009 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !14546)
!15010 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !14546)
!15011 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !14546)
!15012 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !14546)
!15013 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !14546)
!15014 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !14546)
!15015 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !14546)
!15016 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !14546)
!15017 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !14546)
!15018 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !14546)
!15019 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !14546)
!15020 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !14546)
!15021 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !14546)
!15022 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !14546)
!15023 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !14545)
!15024 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !14545)
!15025 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !14545)
!15026 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !14545)
!15027 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !14545)
!15028 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !14545)
!15029 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !14545)
!15030 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !14545)
!15031 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !14545)
!15032 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !14545)
!15033 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !14545)
!15034 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !14545)
!15035 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !14545)
!15036 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !14545)
!15037 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !14545)
!15038 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !14545)
!15039 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !14545)
!15040 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !14545)
!15041 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !14546)
!15042 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !14546)
!15043 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !14546)
!15044 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !14546)
!15045 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !14546)
!15046 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !14546)
!15047 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !14546)
!15048 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !14546)
!15049 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !14546)
!15050 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !14546)
!15051 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !14546)
!15052 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !14546)
!15053 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !14546)
!15054 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !14546)
!15055 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !14546)
!15056 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !14546)
!15057 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !14546)
!15058 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !14546)
!15059 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !14546)
!15060 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !14546)
!15061 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !14546)
!15062 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !14546)
!15063 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !14546)
!15064 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !14546)
!15065 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !14546)
!15066 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !14546)
!15067 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !14546)
!15068 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !14546)
!15069 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !14546)
!15070 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !14546)
!15071 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !14546)
!15072 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !14546)
!15073 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !14546)
!15074 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !14546)
!15075 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !14546)
!15076 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !14546)
!15077 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !14546)
!15078 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !14546)
!15079 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !14546)
!15080 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !14546)
!15081 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !14546)
!15082 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !14546)
!15083 = !DILocation(line: 1471, column: 23, scope: !14547)
!15084 = !DILocation(line: 1473, column: 37, scope: !14547)
!15085 = !DILocation(line: 1473, column: 25, scope: !14547)
!15086 = !DILocation(line: 1473, column: 23, scope: !14547)
!15087 = !DILocation(line: 1474, column: 41, scope: !14547)
!15088 = !DILocation(line: 1474, column: 37, scope: !14547)
!15089 = !DILocation(line: 1474, column: 45, scope: !14547)
!15090 = !DILocation(line: 1474, column: 56, scope: !14547)
!15091 = !DILocation(line: 1474, column: 54, scope: !14547)
!15092 = !DILocation(line: 1474, column: 63, scope: !14547)
!15093 = !DILocation(line: 1474, column: 21, scope: !14547)
!15094 = !DILocation(line: 1474, column: 17, scope: !14547)
!15095 = !DILocation(line: 1474, column: 25, scope: !14547)
!15096 = !DILocation(line: 1474, column: 34, scope: !14547)
!15097 = !DILocation(line: 1475, column: 13, scope: !14547)
!15098 = !DILocation(line: 1470, column: 34, scope: !15099)
!15099 = !DILexicalBlockFile(scope: !14548, file: !904, discriminator: 1)
!15100 = !DILocation(line: 1469, column: 62, scope: !15101)
!15101 = !DILexicalBlockFile(scope: !14549, file: !904, discriminator: 2)
!15102 = !DILocation(line: 1469, column: 9, scope: !15101)
!15103 = distinct !{!15103, !15104}
!15104 = !DILocation(line: 1469, column: 9, scope: !14551)
!15105 = !DILocation(line: 1476, column: 9, scope: !14551)
!15106 = !DILocation(line: 1478, column: 17, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !14551, file: !904, line: 1478, column: 9)
!15108 = !DILocation(line: 1478, column: 14, scope: !15107)
!15109 = !DILocation(line: 1478, column: 22, scope: !15110)
!15110 = !DILexicalBlockFile(scope: !15111, file: !904, discriminator: 1)
!15111 = distinct !DILexicalBlock(scope: !15107, file: !904, line: 1478, column: 9)
!15112 = !DILocation(line: 1478, column: 27, scope: !15110)
!15113 = !DILocation(line: 1478, column: 32, scope: !15110)
!15114 = !DILocation(line: 1478, column: 44, scope: !15110)
!15115 = !DILocation(line: 1478, column: 25, scope: !15110)
!15116 = !DILocation(line: 1478, column: 9, scope: !15110)
!15117 = !DILocation(line: 1479, column: 32, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15111, file: !904, line: 1479, column: 17)
!15119 = !DILocation(line: 1479, column: 17, scope: !15118)
!15120 = !DILocation(line: 1479, column: 17, scope: !15111)
!15121 = !DILocation(line: 1480, column: 40, scope: !15118)
!15122 = !DILocation(line: 1480, column: 36, scope: !15118)
!15123 = !DILocation(line: 1480, column: 44, scope: !15118)
!15124 = !DILocation(line: 1480, column: 21, scope: !15118)
!15125 = !DILocation(line: 1480, column: 17, scope: !15118)
!15126 = !DILocation(line: 1480, column: 25, scope: !15118)
!15127 = !DILocation(line: 1480, column: 34, scope: !15118)
!15128 = !DILocation(line: 1479, column: 34, scope: !15129)
!15129 = !DILexicalBlockFile(scope: !15118, file: !904, discriminator: 1)
!15130 = !DILocation(line: 1478, column: 62, scope: !15131)
!15131 = !DILexicalBlockFile(scope: !15111, file: !904, discriminator: 2)
!15132 = !DILocation(line: 1478, column: 9, scope: !15131)
!15133 = distinct !{!15133, !15134}
!15134 = !DILocation(line: 1478, column: 9, scope: !14551)
!15135 = !DILocation(line: 1481, column: 9, scope: !14551)
!15136 = !DILocation(line: 1485, column: 13, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !14541, file: !904, line: 1485, column: 5)
!15138 = !DILocation(line: 1485, column: 10, scope: !15137)
!15139 = !DILocation(line: 1485, column: 18, scope: !15140)
!15140 = !DILexicalBlockFile(scope: !15141, file: !904, discriminator: 1)
!15141 = distinct !DILexicalBlock(scope: !15137, file: !904, line: 1485, column: 5)
!15142 = !DILocation(line: 1485, column: 23, scope: !15140)
!15143 = !DILocation(line: 1485, column: 28, scope: !15140)
!15144 = !DILocation(line: 1485, column: 40, scope: !15140)
!15145 = !DILocation(line: 1485, column: 21, scope: !15140)
!15146 = !DILocation(line: 1485, column: 5, scope: !15140)
!15147 = !DILocation(line: 1486, column: 28, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15141, file: !904, line: 1486, column: 13)
!15149 = !DILocation(line: 1486, column: 13, scope: !15148)
!15150 = !DILocation(line: 1486, column: 13, scope: !15141)
!15151 = !DILocation(line: 1487, column: 17, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15153, file: !904, line: 1487, column: 17)
!15153 = distinct !DILexicalBlock(scope: !15148, file: !904, line: 1486, column: 33)
!15154 = !DILocation(line: 1487, column: 22, scope: !15152)
!15155 = !DILocation(line: 1487, column: 34, scope: !15152)
!15156 = !DILocation(line: 1487, column: 52, scope: !15152)
!15157 = !DILocation(line: 1487, column: 48, scope: !15152)
!15158 = !DILocation(line: 1487, column: 56, scope: !15152)
!15159 = !DILocation(line: 1487, column: 46, scope: !15152)
!15160 = !DILocation(line: 1487, column: 65, scope: !15152)
!15161 = !DILocation(line: 1487, column: 17, scope: !15153)
!15162 = !DILocation(line: 1488, column: 24, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15152, file: !904, line: 1487, column: 71)
!15164 = !DILocation(line: 1490, column: 24, scope: !15163)
!15165 = !DILocation(line: 1490, column: 29, scope: !15163)
!15166 = !DILocation(line: 1490, column: 41, scope: !15163)
!15167 = !DILocation(line: 1490, column: 59, scope: !15163)
!15168 = !DILocation(line: 1490, column: 55, scope: !15163)
!15169 = !DILocation(line: 1490, column: 63, scope: !15163)
!15170 = !DILocation(line: 1490, column: 53, scope: !15163)
!15171 = !DILocation(line: 1491, column: 24, scope: !15163)
!15172 = !DILocation(line: 1491, column: 31, scope: !15163)
!15173 = !DILocation(line: 1488, column: 17, scope: !15163)
!15174 = !DILocation(line: 1492, column: 17, scope: !15163)
!15175 = !DILocation(line: 1494, column: 35, scope: !15153)
!15176 = !DILocation(line: 1494, column: 40, scope: !15153)
!15177 = !DILocation(line: 1494, column: 52, scope: !15153)
!15178 = !DILocation(line: 1494, column: 17, scope: !15153)
!15179 = !DILocation(line: 1494, column: 13, scope: !15153)
!15180 = !DILocation(line: 1494, column: 21, scope: !15153)
!15181 = !DILocation(line: 1494, column: 33, scope: !15153)
!15182 = !DILocation(line: 1495, column: 49, scope: !15153)
!15183 = !DILocation(line: 1495, column: 45, scope: !15153)
!15184 = !DILocation(line: 1495, column: 53, scope: !15153)
!15185 = !DILocation(line: 1495, column: 13, scope: !15153)
!15186 = !DILocation(line: 1495, column: 18, scope: !15153)
!15187 = !DILocation(line: 1495, column: 30, scope: !15153)
!15188 = !DILocation(line: 1495, column: 42, scope: !15153)
!15189 = !DILocation(line: 1496, column: 9, scope: !15153)
!15190 = !DILocation(line: 1486, column: 30, scope: !15191)
!15191 = !DILexicalBlockFile(scope: !15148, file: !904, discriminator: 1)
!15192 = !DILocation(line: 1485, column: 58, scope: !15193)
!15193 = !DILexicalBlockFile(scope: !15141, file: !904, discriminator: 2)
!15194 = !DILocation(line: 1485, column: 5, scope: !15193)
!15195 = distinct !{!15195, !15196}
!15196 = !DILocation(line: 1485, column: 5, scope: !14541)
!15197 = !DILocation(line: 1498, column: 5, scope: !14541)
!15198 = !DILocation(line: 1499, column: 1, scope: !14541)
!15199 = distinct !DISubprogram(name: "decode_tones_frequency", scope: !904, file: !904, line: 1510, type: !14380, isLocal: true, isDefinition: true, scopeLine: 1512, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!15200 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 1550, column: 25, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15204, file: !904, line: 1549, column: 52)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !904, line: 1549, column: 13)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !904, line: 1549, column: 13)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !904, line: 1544, column: 66)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !904, line: 1544, column: 9)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !904, line: 1544, column: 9)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !904, line: 1543, column: 12)
!15210 = distinct !DILexicalBlock(scope: !15199, file: !904, line: 1518, column: 9)
!15211 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15202)
!15213 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15202)
!15215 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !15202)
!15216 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !15202)
!15217 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !15202)
!15218 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !15202)
!15219 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !15202)
!15220 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !15202)
!15221 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !15202)
!15222 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !15202)
!15223 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !15202)
!15224 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !15202)
!15225 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !15202)
!15226 = !DILocalVariable(name: "gb", arg: 1, scope: !15199, file: !904, line: 1510, type: !1654)
!15227 = !DILocation(line: 1510, column: 51, scope: !15199)
!15228 = !DILocalVariable(name: "ctx", arg: 2, scope: !15199, file: !904, line: 1510, type: !1664)
!15229 = !DILocation(line: 1510, column: 75, scope: !15199)
!15230 = !DILocalVariable(name: "ch_num", arg: 3, scope: !15199, file: !904, line: 1511, type: !888)
!15231 = !DILocation(line: 1511, column: 40, scope: !15199)
!15232 = !DILocalVariable(name: "band_has_tones", arg: 4, scope: !15199, file: !904, line: 1511, type: !1535)
!15233 = !DILocation(line: 1511, column: 52, scope: !15199)
!15234 = !DILocalVariable(name: "sb", scope: !15199, file: !904, line: 1513, type: !888)
!15235 = !DILocation(line: 1513, column: 9, scope: !15199)
!15236 = !DILocalVariable(name: "i", scope: !15199, file: !904, line: 1513, type: !888)
!15237 = !DILocation(line: 1513, column: 13, scope: !15199)
!15238 = !DILocalVariable(name: "direction", scope: !15199, file: !904, line: 1513, type: !888)
!15239 = !DILocation(line: 1513, column: 16, scope: !15199)
!15240 = !DILocalVariable(name: "nbits", scope: !15199, file: !904, line: 1513, type: !888)
!15241 = !DILocation(line: 1513, column: 27, scope: !15199)
!15242 = !DILocalVariable(name: "pred", scope: !15199, file: !904, line: 1513, type: !888)
!15243 = !DILocation(line: 1513, column: 34, scope: !15199)
!15244 = !DILocalVariable(name: "delta", scope: !15199, file: !904, line: 1513, type: !888)
!15245 = !DILocation(line: 1513, column: 40, scope: !15199)
!15246 = !DILocalVariable(name: "iwav", scope: !15199, file: !904, line: 1514, type: !15247)
!15247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64, align: 64)
!15248 = !DILocation(line: 1514, column: 23, scope: !15199)
!15249 = !DILocalVariable(name: "owav", scope: !15199, file: !904, line: 1514, type: !15247)
!15250 = !DILocation(line: 1514, column: 30, scope: !15199)
!15251 = !DILocalVariable(name: "dst", scope: !15199, file: !904, line: 1515, type: !1739)
!15252 = !DILocation(line: 1515, column: 23, scope: !15199)
!15253 = !DILocation(line: 1515, column: 43, scope: !15199)
!15254 = !DILocation(line: 1515, column: 29, scope: !15199)
!15255 = !DILocation(line: 1515, column: 34, scope: !15199)
!15256 = !DILocation(line: 1515, column: 51, scope: !15199)
!15257 = !DILocalVariable(name: "ref", scope: !15199, file: !904, line: 1516, type: !1739)
!15258 = !DILocation(line: 1516, column: 23, scope: !15199)
!15259 = !DILocation(line: 1516, column: 29, scope: !15199)
!15260 = !DILocation(line: 1516, column: 34, scope: !15199)
!15261 = !DILocation(line: 1516, column: 46, scope: !15199)
!15262 = !DILocation(line: 1518, column: 10, scope: !15210)
!15263 = !DILocation(line: 1518, column: 17, scope: !15210)
!15264 = !DILocation(line: 1518, column: 31, scope: !15265)
!15265 = !DILexicalBlockFile(scope: !15210, file: !904, discriminator: 1)
!15266 = !DILocation(line: 1518, column: 21, scope: !15265)
!15267 = !DILocation(line: 1518, column: 9, scope: !15265)
!15268 = !DILocation(line: 1519, column: 17, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15270, file: !904, line: 1519, column: 9)
!15270 = distinct !DILexicalBlock(scope: !15210, file: !904, line: 1518, column: 36)
!15271 = !DILocation(line: 1519, column: 14, scope: !15269)
!15272 = !DILocation(line: 1519, column: 22, scope: !15273)
!15273 = !DILexicalBlockFile(scope: !15274, file: !904, discriminator: 1)
!15274 = distinct !DILexicalBlock(scope: !15269, file: !904, line: 1519, column: 9)
!15275 = !DILocation(line: 1519, column: 27, scope: !15273)
!15276 = !DILocation(line: 1519, column: 32, scope: !15273)
!15277 = !DILocation(line: 1519, column: 44, scope: !15273)
!15278 = !DILocation(line: 1519, column: 25, scope: !15273)
!15279 = !DILocation(line: 1519, column: 9, scope: !15273)
!15280 = !DILocation(line: 1520, column: 33, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15282, file: !904, line: 1520, column: 17)
!15282 = distinct !DILexicalBlock(scope: !15274, file: !904, line: 1519, column: 66)
!15283 = !DILocation(line: 1520, column: 18, scope: !15281)
!15284 = !DILocation(line: 1520, column: 37, scope: !15281)
!15285 = !DILocation(line: 1520, column: 45, scope: !15286)
!15286 = !DILexicalBlockFile(scope: !15281, file: !904, discriminator: 1)
!15287 = !DILocation(line: 1520, column: 41, scope: !15286)
!15288 = !DILocation(line: 1520, column: 49, scope: !15286)
!15289 = !DILocation(line: 1520, column: 17, scope: !15286)
!15290 = !DILocation(line: 1521, column: 17, scope: !15281)
!15291 = !DILocation(line: 1522, column: 48, scope: !15282)
!15292 = !DILocation(line: 1522, column: 44, scope: !15282)
!15293 = !DILocation(line: 1522, column: 52, scope: !15282)
!15294 = !DILocation(line: 1522, column: 21, scope: !15282)
!15295 = !DILocation(line: 1522, column: 26, scope: !15282)
!15296 = !DILocation(line: 1522, column: 38, scope: !15282)
!15297 = !DILocation(line: 1522, column: 18, scope: !15282)
!15298 = !DILocation(line: 1523, column: 30, scope: !15282)
!15299 = !DILocation(line: 1523, column: 26, scope: !15282)
!15300 = !DILocation(line: 1523, column: 34, scope: !15282)
!15301 = !DILocation(line: 1523, column: 43, scope: !15282)
!15302 = !DILocation(line: 1523, column: 25, scope: !15282)
!15303 = !DILocation(line: 1523, column: 60, scope: !15304)
!15304 = !DILexicalBlockFile(scope: !15282, file: !904, discriminator: 1)
!15305 = !DILocation(line: 1523, column: 50, scope: !15304)
!15306 = !DILocation(line: 1523, column: 25, scope: !15304)
!15307 = !DILocation(line: 1523, column: 25, scope: !15308)
!15308 = !DILexicalBlockFile(scope: !15282, file: !904, discriminator: 2)
!15309 = !DILocation(line: 1523, column: 25, scope: !15310)
!15310 = !DILexicalBlockFile(scope: !15282, file: !904, discriminator: 3)
!15311 = !DILocation(line: 1523, column: 23, scope: !15310)
!15312 = !DILocation(line: 1524, column: 17, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15282, file: !904, line: 1524, column: 17)
!15314 = !DILocation(line: 1524, column: 17, scope: !15282)
!15315 = !DILocation(line: 1525, column: 25, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15317, file: !904, line: 1525, column: 21)
!15317 = distinct !DILexicalBlock(scope: !15313, file: !904, line: 1524, column: 28)
!15318 = !DILocation(line: 1525, column: 21, scope: !15316)
!15319 = !DILocation(line: 1525, column: 29, scope: !15316)
!15320 = !DILocation(line: 1525, column: 21, scope: !15317)
!15321 = !DILocation(line: 1526, column: 70, scope: !15316)
!15322 = !DILocation(line: 1526, column: 61, scope: !15316)
!15323 = !DILocation(line: 1526, column: 30, scope: !15316)
!15324 = !DILocation(line: 1526, column: 26, scope: !15316)
!15325 = !DILocation(line: 1526, column: 34, scope: !15316)
!15326 = !DILocation(line: 1526, column: 43, scope: !15316)
!15327 = !DILocation(line: 1526, column: 21, scope: !15316)
!15328 = !DILocation(line: 1526, column: 48, scope: !15316)
!15329 = !DILocation(line: 1526, column: 59, scope: !15316)
!15330 = !DILocation(line: 1527, column: 30, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15317, file: !904, line: 1527, column: 17)
!15332 = !DILocation(line: 1527, column: 26, scope: !15331)
!15333 = !DILocation(line: 1527, column: 34, scope: !15331)
!15334 = !DILocation(line: 1527, column: 43, scope: !15331)
!15335 = !DILocation(line: 1527, column: 24, scope: !15331)
!15336 = !DILocation(line: 1527, column: 22, scope: !15331)
!15337 = !DILocation(line: 1527, column: 48, scope: !15338)
!15338 = !DILexicalBlockFile(scope: !15339, file: !904, discriminator: 1)
!15339 = distinct !DILexicalBlock(scope: !15331, file: !904, line: 1527, column: 17)
!15340 = !DILocation(line: 1527, column: 50, scope: !15338)
!15341 = !DILocation(line: 1527, column: 17, scope: !15338)
!15342 = !DILocation(line: 1528, column: 55, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15339, file: !904, line: 1527, column: 62)
!15344 = !DILocation(line: 1528, column: 56, scope: !15343)
!15345 = !DILocation(line: 1528, column: 50, scope: !15343)
!15346 = !DILocation(line: 1528, column: 60, scope: !15343)
!15347 = !DILocation(line: 1528, column: 71, scope: !15343)
!15348 = !DILocation(line: 1528, column: 35, scope: !15343)
!15349 = !DILocation(line: 1528, column: 33, scope: !15343)
!15350 = !DILocation(line: 1528, column: 76, scope: !15343)
!15351 = !DILocation(line: 1528, column: 27, scope: !15343)
!15352 = !DILocation(line: 1529, column: 51, scope: !15343)
!15353 = !DILocation(line: 1529, column: 55, scope: !15343)
!15354 = !DILocation(line: 1529, column: 42, scope: !15343)
!15355 = !DILocation(line: 1529, column: 26, scope: !15343)
!15356 = !DILocation(line: 1529, column: 21, scope: !15343)
!15357 = !DILocation(line: 1529, column: 29, scope: !15343)
!15358 = !DILocation(line: 1529, column: 40, scope: !15343)
!15359 = !DILocation(line: 1530, column: 17, scope: !15343)
!15360 = !DILocation(line: 1527, column: 58, scope: !15361)
!15361 = !DILexicalBlockFile(scope: !15339, file: !904, discriminator: 2)
!15362 = !DILocation(line: 1527, column: 17, scope: !15361)
!15363 = distinct !{!15363, !15364}
!15364 = !DILocation(line: 1527, column: 17, scope: !15317)
!15365 = !DILocation(line: 1531, column: 13, scope: !15317)
!15366 = !DILocation(line: 1532, column: 24, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15368, file: !904, line: 1532, column: 17)
!15368 = distinct !DILexicalBlock(scope: !15313, file: !904, line: 1531, column: 20)
!15369 = !DILocation(line: 1532, column: 22, scope: !15367)
!15370 = !DILocation(line: 1532, column: 29, scope: !15371)
!15371 = !DILexicalBlockFile(scope: !15372, file: !904, discriminator: 1)
!15372 = distinct !DILexicalBlock(scope: !15367, file: !904, line: 1532, column: 17)
!15373 = !DILocation(line: 1532, column: 37, scope: !15371)
!15374 = !DILocation(line: 1532, column: 33, scope: !15371)
!15375 = !DILocation(line: 1532, column: 41, scope: !15371)
!15376 = !DILocation(line: 1532, column: 31, scope: !15371)
!15377 = !DILocation(line: 1532, column: 17, scope: !15371)
!15378 = !DILocation(line: 1533, column: 26, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15380, file: !904, line: 1533, column: 25)
!15380 = distinct !DILexicalBlock(scope: !15372, file: !904, line: 1532, column: 56)
!15381 = !DILocation(line: 1533, column: 28, scope: !15379)
!15382 = !DILocation(line: 1533, column: 36, scope: !15383)
!15383 = !DILexicalBlockFile(scope: !15379, file: !904, discriminator: 1)
!15384 = !DILocation(line: 1533, column: 38, scope: !15383)
!15385 = !DILocation(line: 1533, column: 31, scope: !15383)
!15386 = !DILocation(line: 1533, column: 43, scope: !15383)
!15387 = !DILocation(line: 1533, column: 54, scope: !15383)
!15388 = !DILocation(line: 1533, column: 25, scope: !15383)
!15389 = !DILocation(line: 1534, column: 55, scope: !15379)
!15390 = !DILocation(line: 1534, column: 46, scope: !15379)
!15391 = !DILocation(line: 1534, column: 30, scope: !15379)
!15392 = !DILocation(line: 1534, column: 25, scope: !15379)
!15393 = !DILocation(line: 1534, column: 33, scope: !15379)
!15394 = !DILocation(line: 1534, column: 44, scope: !15379)
!15395 = !DILocation(line: 1536, column: 66, scope: !15396)
!15396 = distinct !DILexicalBlock(scope: !15379, file: !904, line: 1535, column: 26)
!15397 = !DILocation(line: 1536, column: 68, scope: !15396)
!15398 = !DILocation(line: 1536, column: 61, scope: !15396)
!15399 = !DILocation(line: 1536, column: 73, scope: !15396)
!15400 = !DILocation(line: 1536, column: 59, scope: !15396)
!15401 = !DILocation(line: 1536, column: 84, scope: !15396)
!15402 = !DILocation(line: 1536, column: 39, scope: !15396)
!15403 = !DILocation(line: 1536, column: 37, scope: !15396)
!15404 = !DILocation(line: 1536, column: 89, scope: !15396)
!15405 = !DILocation(line: 1536, column: 31, scope: !15396)
!15406 = !DILocation(line: 1537, column: 55, scope: !15396)
!15407 = !DILocation(line: 1537, column: 59, scope: !15396)
!15408 = !DILocation(line: 1537, column: 46, scope: !15396)
!15409 = !DILocation(line: 1537, column: 66, scope: !15396)
!15410 = !DILocation(line: 1538, column: 59, scope: !15396)
!15411 = !DILocation(line: 1538, column: 56, scope: !15396)
!15412 = !DILocation(line: 1538, column: 51, scope: !15396)
!15413 = !DILocation(line: 1537, column: 30, scope: !15396)
!15414 = !DILocation(line: 1537, column: 25, scope: !15396)
!15415 = !DILocation(line: 1537, column: 33, scope: !15396)
!15416 = !DILocation(line: 1537, column: 44, scope: !15396)
!15417 = !DILocation(line: 1540, column: 17, scope: !15380)
!15418 = !DILocation(line: 1532, column: 52, scope: !15419)
!15419 = !DILexicalBlockFile(scope: !15372, file: !904, discriminator: 2)
!15420 = !DILocation(line: 1532, column: 17, scope: !15419)
!15421 = distinct !{!15421, !15422}
!15422 = !DILocation(line: 1532, column: 17, scope: !15368)
!15423 = !DILocation(line: 1542, column: 9, scope: !15282)
!15424 = !DILocation(line: 1519, column: 62, scope: !15425)
!15425 = !DILexicalBlockFile(scope: !15274, file: !904, discriminator: 2)
!15426 = !DILocation(line: 1519, column: 9, scope: !15425)
!15427 = distinct !{!15427, !15428}
!15428 = !DILocation(line: 1519, column: 9, scope: !15270)
!15429 = !DILocation(line: 1543, column: 5, scope: !15270)
!15430 = !DILocation(line: 1544, column: 17, scope: !15208)
!15431 = !DILocation(line: 1544, column: 14, scope: !15208)
!15432 = !DILocation(line: 1544, column: 22, scope: !15433)
!15433 = !DILexicalBlockFile(scope: !15207, file: !904, discriminator: 1)
!15434 = !DILocation(line: 1544, column: 27, scope: !15433)
!15435 = !DILocation(line: 1544, column: 32, scope: !15433)
!15436 = !DILocation(line: 1544, column: 44, scope: !15433)
!15437 = !DILocation(line: 1544, column: 25, scope: !15433)
!15438 = !DILocation(line: 1544, column: 9, scope: !15433)
!15439 = !DILocation(line: 1545, column: 33, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15206, file: !904, line: 1545, column: 17)
!15441 = !DILocation(line: 1545, column: 18, scope: !15440)
!15442 = !DILocation(line: 1545, column: 37, scope: !15440)
!15443 = !DILocation(line: 1545, column: 45, scope: !15444)
!15444 = !DILexicalBlockFile(scope: !15440, file: !904, discriminator: 1)
!15445 = !DILocation(line: 1545, column: 41, scope: !15444)
!15446 = !DILocation(line: 1545, column: 49, scope: !15444)
!15447 = !DILocation(line: 1545, column: 17, scope: !15444)
!15448 = !DILocation(line: 1546, column: 17, scope: !15440)
!15449 = !DILocation(line: 1547, column: 48, scope: !15206)
!15450 = !DILocation(line: 1547, column: 44, scope: !15206)
!15451 = !DILocation(line: 1547, column: 52, scope: !15206)
!15452 = !DILocation(line: 1547, column: 21, scope: !15206)
!15453 = !DILocation(line: 1547, column: 26, scope: !15206)
!15454 = !DILocation(line: 1547, column: 38, scope: !15206)
!15455 = !DILocation(line: 1547, column: 18, scope: !15206)
!15456 = !DILocation(line: 1548, column: 48, scope: !15206)
!15457 = !DILocation(line: 1548, column: 44, scope: !15206)
!15458 = !DILocation(line: 1548, column: 52, scope: !15206)
!15459 = !DILocation(line: 1548, column: 21, scope: !15206)
!15460 = !DILocation(line: 1548, column: 26, scope: !15206)
!15461 = !DILocation(line: 1548, column: 38, scope: !15206)
!15462 = !DILocation(line: 1548, column: 18, scope: !15206)
!15463 = !DILocation(line: 1549, column: 20, scope: !15205)
!15464 = !DILocation(line: 1549, column: 18, scope: !15205)
!15465 = !DILocation(line: 1549, column: 25, scope: !15466)
!15466 = !DILexicalBlockFile(scope: !15204, file: !904, discriminator: 1)
!15467 = !DILocation(line: 1549, column: 33, scope: !15466)
!15468 = !DILocation(line: 1549, column: 29, scope: !15466)
!15469 = !DILocation(line: 1549, column: 37, scope: !15466)
!15470 = !DILocation(line: 1549, column: 27, scope: !15466)
!15471 = !DILocation(line: 1549, column: 13, scope: !15466)
!15472 = !DILocation(line: 1550, column: 34, scope: !15203)
!15473 = !DILocation(line: 1550, column: 55, scope: !15203)
!15474 = !DILocation(line: 1551, column: 51, scope: !15203)
!15475 = !DILocation(line: 1550, column: 25, scope: !15203)
!15476 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !15202)
!15477 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !15202)
!15478 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !15202)
!15479 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !15202)
!15480 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !15202)
!15481 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !15202)
!15482 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !15202)
!15483 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !15202)
!15484 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !15202)
!15485 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !15202)
!15486 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15202)
!15487 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15214)
!15488 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15214)
!15489 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15214)
!15490 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15214)
!15491 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15214)
!15492 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15214)
!15493 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15214)
!15494 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15214)
!15495 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15214)
!15496 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15214)
!15497 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15214)
!15498 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15214)
!15499 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15214)
!15500 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15214)
!15501 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15214)
!15502 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15214)
!15503 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15214)
!15504 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15214)
!15505 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !15202)
!15506 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !15202)
!15507 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !15202)
!15508 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !15202)
!15509 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !15202)
!15510 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !15202)
!15511 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !15202)
!15512 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !15202)
!15513 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !15202)
!15514 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !15202)
!15515 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !15202)
!15516 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !15202)
!15517 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !15202)
!15518 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !15202)
!15519 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !15202)
!15520 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !15202)
!15521 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !15202)
!15522 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !15202)
!15523 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !15202)
!15524 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !15202)
!15525 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !15202)
!15526 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !15202)
!15527 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !15202)
!15528 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !15202)
!15529 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !15202)
!15530 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !15202)
!15531 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !15202)
!15532 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !15202)
!15533 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !15202)
!15534 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !15202)
!15535 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !15202)
!15536 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !15202)
!15537 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !15202)
!15538 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !15202)
!15539 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !15202)
!15540 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !15202)
!15541 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !15202)
!15542 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !15202)
!15543 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !15202)
!15544 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !15202)
!15545 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15202)
!15546 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15212)
!15547 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15212)
!15548 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15212)
!15549 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15212)
!15550 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15212)
!15551 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15212)
!15552 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15212)
!15553 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15212)
!15554 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15212)
!15555 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15212)
!15556 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15212)
!15557 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15212)
!15558 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15212)
!15559 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15212)
!15560 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15212)
!15561 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15212)
!15562 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15212)
!15563 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15212)
!15564 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !15202)
!15565 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !15202)
!15566 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !15202)
!15567 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !15202)
!15568 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !15202)
!15569 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !15202)
!15570 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !15202)
!15571 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !15202)
!15572 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !15202)
!15573 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !15202)
!15574 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !15202)
!15575 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !15202)
!15576 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !15202)
!15577 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !15202)
!15578 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !15202)
!15579 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !15202)
!15580 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !15202)
!15581 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !15202)
!15582 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !15202)
!15583 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !15202)
!15584 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !15202)
!15585 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !15202)
!15586 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !15202)
!15587 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !15202)
!15588 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !15202)
!15589 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !15202)
!15590 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !15202)
!15591 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !15202)
!15592 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !15202)
!15593 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !15202)
!15594 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !15202)
!15595 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !15202)
!15596 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !15202)
!15597 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !15202)
!15598 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !15202)
!15599 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !15202)
!15600 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !15202)
!15601 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !15202)
!15602 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !15202)
!15603 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !15202)
!15604 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !15202)
!15605 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !15202)
!15606 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !15202)
!15607 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !15202)
!15608 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !15202)
!15609 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15202)
!15610 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15201)
!15611 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15201)
!15612 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15201)
!15613 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15201)
!15614 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15201)
!15615 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15201)
!15616 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15201)
!15617 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15201)
!15618 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15201)
!15619 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15201)
!15620 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15201)
!15621 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15201)
!15622 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15201)
!15623 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15201)
!15624 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15201)
!15625 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15201)
!15626 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15201)
!15627 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15201)
!15628 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !15202)
!15629 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !15202)
!15630 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !15202)
!15631 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !15202)
!15632 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !15202)
!15633 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !15202)
!15634 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !15202)
!15635 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !15202)
!15636 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !15202)
!15637 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !15202)
!15638 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !15202)
!15639 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !15202)
!15640 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !15202)
!15641 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !15202)
!15642 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !15202)
!15643 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !15202)
!15644 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !15202)
!15645 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !15202)
!15646 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !15202)
!15647 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !15202)
!15648 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !15202)
!15649 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !15202)
!15650 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !15202)
!15651 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !15202)
!15652 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !15202)
!15653 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !15202)
!15654 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !15202)
!15655 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !15202)
!15656 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !15202)
!15657 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !15202)
!15658 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !15202)
!15659 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !15202)
!15660 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !15202)
!15661 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !15202)
!15662 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !15202)
!15663 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !15202)
!15664 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !15202)
!15665 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !15202)
!15666 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !15202)
!15667 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !15202)
!15668 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !15202)
!15669 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !15202)
!15670 = !DILocation(line: 1550, column: 23, scope: !15203)
!15671 = !DILocation(line: 1552, column: 37, scope: !15203)
!15672 = !DILocation(line: 1552, column: 25, scope: !15203)
!15673 = !DILocation(line: 1552, column: 23, scope: !15203)
!15674 = !DILocation(line: 1553, column: 25, scope: !15203)
!15675 = !DILocation(line: 1553, column: 33, scope: !15203)
!15676 = !DILocation(line: 1553, column: 29, scope: !15203)
!15677 = !DILocation(line: 1553, column: 37, scope: !15203)
!15678 = !DILocation(line: 1553, column: 27, scope: !15203)
!15679 = !DILocation(line: 1553, column: 24, scope: !15203)
!15680 = !DILocation(line: 1553, column: 54, scope: !15681)
!15681 = !DILexicalBlockFile(scope: !15203, file: !904, discriminator: 1)
!15682 = !DILocation(line: 1553, column: 49, scope: !15681)
!15683 = !DILocation(line: 1553, column: 57, scope: !15681)
!15684 = !DILocation(line: 1553, column: 24, scope: !15681)
!15685 = !DILocation(line: 1554, column: 30, scope: !15203)
!15686 = !DILocation(line: 1554, column: 26, scope: !15203)
!15687 = !DILocation(line: 1554, column: 34, scope: !15203)
!15688 = !DILocation(line: 1554, column: 54, scope: !15681)
!15689 = !DILocation(line: 1554, column: 50, scope: !15681)
!15690 = !DILocation(line: 1554, column: 58, scope: !15681)
!15691 = !DILocation(line: 1554, column: 67, scope: !15681)
!15692 = !DILocation(line: 1554, column: 45, scope: !15681)
!15693 = !DILocation(line: 1554, column: 72, scope: !15681)
!15694 = !DILocation(line: 1554, column: 26, scope: !15681)
!15695 = !DILocation(line: 1554, column: 26, scope: !15696)
!15696 = !DILexicalBlockFile(scope: !15203, file: !904, discriminator: 2)
!15697 = !DILocation(line: 1554, column: 26, scope: !15698)
!15698 = !DILexicalBlockFile(scope: !15203, file: !904, discriminator: 3)
!15699 = !DILocation(line: 1553, column: 24, scope: !15696)
!15700 = !DILocation(line: 1553, column: 24, scope: !15698)
!15701 = !DILocation(line: 1553, column: 22, scope: !15698)
!15702 = !DILocation(line: 1555, column: 39, scope: !15203)
!15703 = !DILocation(line: 1555, column: 46, scope: !15203)
!15704 = !DILocation(line: 1555, column: 44, scope: !15203)
!15705 = !DILocation(line: 1555, column: 53, scope: !15203)
!15706 = !DILocation(line: 1555, column: 22, scope: !15203)
!15707 = !DILocation(line: 1555, column: 17, scope: !15203)
!15708 = !DILocation(line: 1555, column: 25, scope: !15203)
!15709 = !DILocation(line: 1555, column: 36, scope: !15203)
!15710 = !DILocation(line: 1556, column: 13, scope: !15203)
!15711 = !DILocation(line: 1549, column: 48, scope: !15712)
!15712 = !DILexicalBlockFile(scope: !15204, file: !904, discriminator: 2)
!15713 = !DILocation(line: 1549, column: 13, scope: !15712)
!15714 = distinct !{!15714, !15715}
!15715 = !DILocation(line: 1549, column: 13, scope: !15206)
!15716 = !DILocation(line: 1557, column: 9, scope: !15206)
!15717 = !DILocation(line: 1544, column: 62, scope: !15718)
!15718 = !DILexicalBlockFile(scope: !15207, file: !904, discriminator: 2)
!15719 = !DILocation(line: 1544, column: 9, scope: !15718)
!15720 = distinct !{!15720, !15721}
!15721 = !DILocation(line: 1544, column: 9, scope: !15209)
!15722 = !DILocation(line: 1559, column: 1, scope: !15199)
!15723 = distinct !DISubprogram(name: "decode_tones_amplitude", scope: !904, file: !904, line: 1570, type: !14380, isLocal: true, isDefinition: true, scopeLine: 1572, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!15724 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15725)
!15725 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15726)
!15726 = distinct !DILocation(line: 1638, column: 25, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15728, file: !904, line: 1637, column: 52)
!15728 = distinct !DILexicalBlock(scope: !15729, file: !904, line: 1637, column: 13)
!15729 = distinct !DILexicalBlock(scope: !15730, file: !904, line: 1637, column: 13)
!15730 = distinct !DILexicalBlock(scope: !15731, file: !904, line: 1634, column: 66)
!15731 = distinct !DILexicalBlock(scope: !15732, file: !904, line: 1634, column: 9)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !904, line: 1634, column: 9)
!15733 = distinct !DILexicalBlock(scope: !15723, file: !904, line: 1606, column: 19)
!15734 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15726)
!15736 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15726)
!15738 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !15726)
!15739 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !15726)
!15740 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !15726)
!15741 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !15726)
!15742 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !15726)
!15743 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !15726)
!15744 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !15726)
!15745 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !15726)
!15746 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !15726)
!15747 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !15726)
!15748 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !15726)
!15749 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15750)
!15750 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 1629, column: 21, scope: !15752)
!15752 = distinct !DILexicalBlock(scope: !15753, file: !904, line: 1622, column: 17)
!15753 = distinct !DILexicalBlock(scope: !15754, file: !904, line: 1619, column: 66)
!15754 = distinct !DILexicalBlock(scope: !15755, file: !904, line: 1619, column: 9)
!15755 = distinct !DILexicalBlock(scope: !15733, file: !904, line: 1619, column: 9)
!15756 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15757)
!15757 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15751)
!15758 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15751)
!15760 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !15751)
!15761 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !15751)
!15762 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !15751)
!15763 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !15751)
!15764 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !15751)
!15765 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !15751)
!15766 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !15751)
!15767 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !15751)
!15768 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !15751)
!15769 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !15751)
!15770 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !15751)
!15771 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15773)
!15773 = distinct !DILocation(line: 1625, column: 25, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15775, file: !904, line: 1623, column: 17)
!15775 = distinct !DILexicalBlock(scope: !15752, file: !904, line: 1623, column: 17)
!15776 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15773)
!15778 = !DILocation(line: 66, column: 98, scope: !2532, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15773)
!15780 = !DILocation(line: 762, column: 74, scope: !3282, inlinedAt: !15773)
!15781 = !DILocation(line: 762, column: 87, scope: !3282, inlinedAt: !15773)
!15782 = !DILocation(line: 763, column: 42, scope: !3282, inlinedAt: !15773)
!15783 = !DILocation(line: 763, column: 52, scope: !3282, inlinedAt: !15773)
!15784 = !DILocation(line: 783, column: 9, scope: !3282, inlinedAt: !15773)
!15785 = !DILocation(line: 785, column: 18, scope: !3282, inlinedAt: !15773)
!15786 = !DILocation(line: 785, column: 78, scope: !3282, inlinedAt: !15773)
!15787 = !DILocation(line: 785, column: 101, scope: !3282, inlinedAt: !15773)
!15788 = !DILocation(line: 788, column: 14, scope: !3281, inlinedAt: !15773)
!15789 = !DILocation(line: 788, column: 17, scope: !3281, inlinedAt: !15773)
!15790 = !DILocation(line: 788, column: 39, scope: !3281, inlinedAt: !15773)
!15791 = !DILocalVariable(name: "gb", arg: 1, scope: !15723, file: !904, line: 1570, type: !1654)
!15792 = !DILocation(line: 1570, column: 51, scope: !15723)
!15793 = !DILocalVariable(name: "ctx", arg: 2, scope: !15723, file: !904, line: 1570, type: !1664)
!15794 = !DILocation(line: 1570, column: 75, scope: !15723)
!15795 = !DILocalVariable(name: "ch_num", arg: 3, scope: !15723, file: !904, line: 1571, type: !888)
!15796 = !DILocation(line: 1571, column: 40, scope: !15723)
!15797 = !DILocalVariable(name: "band_has_tones", arg: 4, scope: !15723, file: !904, line: 1571, type: !1535)
!15798 = !DILocation(line: 1571, column: 52, scope: !15723)
!15799 = !DILocalVariable(name: "mode", scope: !15723, file: !904, line: 1573, type: !888)
!15800 = !DILocation(line: 1573, column: 9, scope: !15723)
!15801 = !DILocalVariable(name: "sb", scope: !15723, file: !904, line: 1573, type: !888)
!15802 = !DILocation(line: 1573, column: 15, scope: !15723)
!15803 = !DILocalVariable(name: "j", scope: !15723, file: !904, line: 1573, type: !888)
!15804 = !DILocation(line: 1573, column: 19, scope: !15723)
!15805 = !DILocalVariable(name: "i", scope: !15723, file: !904, line: 1573, type: !888)
!15806 = !DILocation(line: 1573, column: 22, scope: !15723)
!15807 = !DILocalVariable(name: "diff", scope: !15723, file: !904, line: 1573, type: !888)
!15808 = !DILocation(line: 1573, column: 25, scope: !15723)
!15809 = !DILocalVariable(name: "maxdiff", scope: !15723, file: !904, line: 1573, type: !888)
!15810 = !DILocation(line: 1573, column: 31, scope: !15723)
!15811 = !DILocalVariable(name: "fi", scope: !15723, file: !904, line: 1573, type: !888)
!15812 = !DILocation(line: 1573, column: 40, scope: !15723)
!15813 = !DILocalVariable(name: "delta", scope: !15723, file: !904, line: 1573, type: !888)
!15814 = !DILocation(line: 1573, column: 44, scope: !15723)
!15815 = !DILocalVariable(name: "pred", scope: !15723, file: !904, line: 1573, type: !888)
!15816 = !DILocation(line: 1573, column: 51, scope: !15723)
!15817 = !DILocalVariable(name: "wsrc", scope: !15723, file: !904, line: 1574, type: !15247)
!15818 = !DILocation(line: 1574, column: 23, scope: !15723)
!15819 = !DILocalVariable(name: "wref", scope: !15723, file: !904, line: 1574, type: !15247)
!15820 = !DILocation(line: 1574, column: 30, scope: !15723)
!15821 = !DILocalVariable(name: "refwaves", scope: !15723, file: !904, line: 1575, type: !15822)
!15822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 1536, align: 32, elements: !1762)
!15823 = !DILocation(line: 1575, column: 9, scope: !15723)
!15824 = !DILocalVariable(name: "dst", scope: !15723, file: !904, line: 1576, type: !1739)
!15825 = !DILocation(line: 1576, column: 23, scope: !15723)
!15826 = !DILocation(line: 1576, column: 43, scope: !15723)
!15827 = !DILocation(line: 1576, column: 29, scope: !15723)
!15828 = !DILocation(line: 1576, column: 34, scope: !15723)
!15829 = !DILocation(line: 1576, column: 51, scope: !15723)
!15830 = !DILocalVariable(name: "ref", scope: !15723, file: !904, line: 1577, type: !1739)
!15831 = !DILocation(line: 1577, column: 23, scope: !15723)
!15832 = !DILocation(line: 1577, column: 29, scope: !15723)
!15833 = !DILocation(line: 1577, column: 34, scope: !15723)
!15834 = !DILocation(line: 1577, column: 46, scope: !15723)
!15835 = !DILocation(line: 1579, column: 9, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !15723, file: !904, line: 1579, column: 9)
!15837 = !DILocation(line: 1579, column: 9, scope: !15723)
!15838 = !DILocation(line: 1580, column: 17, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15840, file: !904, line: 1580, column: 9)
!15840 = distinct !DILexicalBlock(scope: !15836, file: !904, line: 1579, column: 17)
!15841 = !DILocation(line: 1580, column: 14, scope: !15839)
!15842 = !DILocation(line: 1580, column: 22, scope: !15843)
!15843 = !DILexicalBlockFile(scope: !15844, file: !904, discriminator: 1)
!15844 = distinct !DILexicalBlock(scope: !15839, file: !904, line: 1580, column: 9)
!15845 = !DILocation(line: 1580, column: 27, scope: !15843)
!15846 = !DILocation(line: 1580, column: 32, scope: !15843)
!15847 = !DILocation(line: 1580, column: 44, scope: !15843)
!15848 = !DILocation(line: 1580, column: 25, scope: !15843)
!15849 = !DILocation(line: 1580, column: 9, scope: !15843)
!15850 = !DILocation(line: 1581, column: 33, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15852, file: !904, line: 1581, column: 17)
!15852 = distinct !DILexicalBlock(scope: !15844, file: !904, line: 1580, column: 66)
!15853 = !DILocation(line: 1581, column: 18, scope: !15851)
!15854 = !DILocation(line: 1581, column: 37, scope: !15851)
!15855 = !DILocation(line: 1581, column: 45, scope: !15856)
!15856 = !DILexicalBlockFile(scope: !15851, file: !904, discriminator: 1)
!15857 = !DILocation(line: 1581, column: 41, scope: !15856)
!15858 = !DILocation(line: 1581, column: 49, scope: !15856)
!15859 = !DILocation(line: 1581, column: 17, scope: !15856)
!15860 = !DILocation(line: 1582, column: 17, scope: !15851)
!15861 = !DILocation(line: 1583, column: 48, scope: !15852)
!15862 = !DILocation(line: 1583, column: 44, scope: !15852)
!15863 = !DILocation(line: 1583, column: 52, scope: !15852)
!15864 = !DILocation(line: 1583, column: 21, scope: !15852)
!15865 = !DILocation(line: 1583, column: 26, scope: !15852)
!15866 = !DILocation(line: 1583, column: 38, scope: !15852)
!15867 = !DILocation(line: 1583, column: 18, scope: !15852)
!15868 = !DILocation(line: 1584, column: 48, scope: !15852)
!15869 = !DILocation(line: 1584, column: 44, scope: !15852)
!15870 = !DILocation(line: 1584, column: 52, scope: !15852)
!15871 = !DILocation(line: 1584, column: 21, scope: !15852)
!15872 = !DILocation(line: 1584, column: 26, scope: !15852)
!15873 = !DILocation(line: 1584, column: 38, scope: !15852)
!15874 = !DILocation(line: 1584, column: 18, scope: !15852)
!15875 = !DILocation(line: 1585, column: 20, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15852, file: !904, line: 1585, column: 13)
!15877 = !DILocation(line: 1585, column: 18, scope: !15876)
!15878 = !DILocation(line: 1585, column: 25, scope: !15879)
!15879 = !DILexicalBlockFile(scope: !15880, file: !904, discriminator: 1)
!15880 = distinct !DILexicalBlock(scope: !15876, file: !904, line: 1585, column: 13)
!15881 = !DILocation(line: 1585, column: 33, scope: !15879)
!15882 = !DILocation(line: 1585, column: 29, scope: !15879)
!15883 = !DILocation(line: 1585, column: 37, scope: !15879)
!15884 = !DILocation(line: 1585, column: 27, scope: !15879)
!15885 = !DILocation(line: 1585, column: 13, scope: !15879)
!15886 = !DILocation(line: 1586, column: 24, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15888, file: !904, line: 1586, column: 17)
!15888 = distinct !DILexicalBlock(scope: !15880, file: !904, line: 1585, column: 52)
!15889 = !DILocation(line: 1586, column: 32, scope: !15887)
!15890 = !DILocation(line: 1586, column: 45, scope: !15887)
!15891 = !DILocation(line: 1586, column: 22, scope: !15887)
!15892 = !DILocation(line: 1586, column: 53, scope: !15893)
!15893 = !DILexicalBlockFile(scope: !15894, file: !904, discriminator: 1)
!15894 = distinct !DILexicalBlock(scope: !15887, file: !904, line: 1586, column: 17)
!15895 = !DILocation(line: 1586, column: 61, scope: !15893)
!15896 = !DILocation(line: 1586, column: 57, scope: !15893)
!15897 = !DILocation(line: 1586, column: 65, scope: !15893)
!15898 = !DILocation(line: 1586, column: 55, scope: !15893)
!15899 = !DILocation(line: 1586, column: 17, scope: !15893)
!15900 = !DILocation(line: 1587, column: 35, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15894, file: !904, line: 1586, column: 80)
!15902 = !DILocation(line: 1587, column: 30, scope: !15901)
!15903 = !DILocation(line: 1587, column: 38, scope: !15901)
!15904 = !DILocation(line: 1587, column: 56, scope: !15901)
!15905 = !DILocation(line: 1587, column: 51, scope: !15901)
!15906 = !DILocation(line: 1587, column: 59, scope: !15901)
!15907 = !DILocation(line: 1587, column: 49, scope: !15901)
!15908 = !DILocation(line: 1587, column: 71, scope: !15901)
!15909 = !DILocation(line: 1587, column: 29, scope: !15901)
!15910 = !DILocation(line: 1587, column: 84, scope: !15911)
!15911 = !DILexicalBlockFile(scope: !15901, file: !904, discriminator: 1)
!15912 = !DILocation(line: 1587, column: 79, scope: !15911)
!15913 = !DILocation(line: 1587, column: 87, scope: !15911)
!15914 = !DILocation(line: 1587, column: 105, scope: !15911)
!15915 = !DILocation(line: 1587, column: 100, scope: !15911)
!15916 = !DILocation(line: 1587, column: 108, scope: !15911)
!15917 = !DILocation(line: 1587, column: 98, scope: !15911)
!15918 = !DILocation(line: 1587, column: 29, scope: !15911)
!15919 = !DILocation(line: 1587, column: 130, scope: !15920)
!15920 = !DILexicalBlockFile(scope: !15901, file: !904, discriminator: 2)
!15921 = !DILocation(line: 1587, column: 125, scope: !15920)
!15922 = !DILocation(line: 1587, column: 133, scope: !15920)
!15923 = !DILocation(line: 1587, column: 151, scope: !15920)
!15924 = !DILocation(line: 1587, column: 146, scope: !15920)
!15925 = !DILocation(line: 1587, column: 154, scope: !15920)
!15926 = !DILocation(line: 1587, column: 144, scope: !15920)
!15927 = !DILocation(line: 1587, column: 123, scope: !15920)
!15928 = !DILocation(line: 1587, column: 29, scope: !15920)
!15929 = !DILocation(line: 1587, column: 29, scope: !15930)
!15930 = !DILexicalBlockFile(scope: !15901, file: !904, discriminator: 3)
!15931 = !DILocation(line: 1587, column: 26, scope: !15930)
!15932 = !DILocation(line: 1588, column: 25, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15901, file: !904, line: 1588, column: 25)
!15934 = !DILocation(line: 1588, column: 32, scope: !15933)
!15935 = !DILocation(line: 1588, column: 30, scope: !15933)
!15936 = !DILocation(line: 1588, column: 25, scope: !15901)
!15937 = !DILocation(line: 1589, column: 35, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15933, file: !904, line: 1588, column: 41)
!15939 = !DILocation(line: 1589, column: 33, scope: !15938)
!15940 = !DILocation(line: 1590, column: 30, scope: !15938)
!15941 = !DILocation(line: 1590, column: 28, scope: !15938)
!15942 = !DILocation(line: 1591, column: 21, scope: !15938)
!15943 = !DILocation(line: 1592, column: 17, scope: !15901)
!15944 = !DILocation(line: 1586, column: 76, scope: !15945)
!15945 = !DILexicalBlockFile(scope: !15894, file: !904, discriminator: 2)
!15946 = !DILocation(line: 1586, column: 17, scope: !15945)
!15947 = distinct !{!15947, !15948}
!15948 = !DILocation(line: 1586, column: 17, scope: !15888)
!15949 = !DILocation(line: 1594, column: 21, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15888, file: !904, line: 1594, column: 21)
!15951 = !DILocation(line: 1594, column: 29, scope: !15950)
!15952 = !DILocation(line: 1594, column: 21, scope: !15888)
!15953 = !DILocation(line: 1595, column: 57, scope: !15950)
!15954 = !DILocation(line: 1595, column: 66, scope: !15950)
!15955 = !DILocation(line: 1595, column: 62, scope: !15950)
!15956 = !DILocation(line: 1595, column: 70, scope: !15950)
!15957 = !DILocation(line: 1595, column: 60, scope: !15950)
!15958 = !DILocation(line: 1595, column: 34, scope: !15950)
!15959 = !DILocation(line: 1595, column: 30, scope: !15950)
!15960 = !DILocation(line: 1595, column: 38, scope: !15950)
!15961 = !DILocation(line: 1595, column: 52, scope: !15950)
!15962 = !DILocation(line: 1595, column: 50, scope: !15950)
!15963 = !DILocation(line: 1595, column: 21, scope: !15950)
!15964 = !DILocation(line: 1595, column: 55, scope: !15950)
!15965 = !DILocation(line: 1596, column: 26, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15950, file: !904, line: 1596, column: 26)
!15967 = !DILocation(line: 1596, column: 34, scope: !15966)
!15968 = !DILocation(line: 1596, column: 30, scope: !15966)
!15969 = !DILocation(line: 1596, column: 38, scope: !15966)
!15970 = !DILocation(line: 1596, column: 28, scope: !15966)
!15971 = !DILocation(line: 1596, column: 26, scope: !15950)
!15972 = !DILocation(line: 1597, column: 57, scope: !15966)
!15973 = !DILocation(line: 1597, column: 65, scope: !15966)
!15974 = !DILocation(line: 1597, column: 61, scope: !15966)
!15975 = !DILocation(line: 1597, column: 69, scope: !15966)
!15976 = !DILocation(line: 1597, column: 59, scope: !15966)
!15977 = !DILocation(line: 1597, column: 34, scope: !15966)
!15978 = !DILocation(line: 1597, column: 30, scope: !15966)
!15979 = !DILocation(line: 1597, column: 38, scope: !15966)
!15980 = !DILocation(line: 1597, column: 52, scope: !15966)
!15981 = !DILocation(line: 1597, column: 50, scope: !15966)
!15982 = !DILocation(line: 1597, column: 21, scope: !15966)
!15983 = !DILocation(line: 1597, column: 55, scope: !15966)
!15984 = !DILocation(line: 1599, column: 34, scope: !15966)
!15985 = !DILocation(line: 1599, column: 30, scope: !15966)
!15986 = !DILocation(line: 1599, column: 38, scope: !15966)
!15987 = !DILocation(line: 1599, column: 52, scope: !15966)
!15988 = !DILocation(line: 1599, column: 50, scope: !15966)
!15989 = !DILocation(line: 1599, column: 21, scope: !15966)
!15990 = !DILocation(line: 1599, column: 55, scope: !15966)
!15991 = !DILocation(line: 1600, column: 13, scope: !15888)
!15992 = !DILocation(line: 1585, column: 48, scope: !15993)
!15993 = !DILexicalBlockFile(scope: !15880, file: !904, discriminator: 2)
!15994 = !DILocation(line: 1585, column: 13, scope: !15993)
!15995 = distinct !{!15995, !15996}
!15996 = !DILocation(line: 1585, column: 13, scope: !15852)
!15997 = !DILocation(line: 1601, column: 9, scope: !15852)
!15998 = !DILocation(line: 1580, column: 62, scope: !15999)
!15999 = !DILexicalBlockFile(scope: !15844, file: !904, discriminator: 2)
!16000 = !DILocation(line: 1580, column: 9, scope: !15999)
!16001 = distinct !{!16001, !16002}
!16002 = !DILocation(line: 1580, column: 9, scope: !15840)
!16003 = !DILocation(line: 1602, column: 5, scope: !15840)
!16004 = !DILocation(line: 1604, column: 21, scope: !15723)
!16005 = !DILocation(line: 1604, column: 25, scope: !15723)
!16006 = !DILocation(line: 1604, column: 32, scope: !15723)
!16007 = !DILocation(line: 1604, column: 12, scope: !15723)
!16008 = !DILocation(line: 1604, column: 10, scope: !15723)
!16009 = !DILocation(line: 1606, column: 13, scope: !15723)
!16010 = !DILocation(line: 1606, column: 5, scope: !15723)
!16011 = !DILocation(line: 1608, column: 17, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !15733, file: !904, line: 1608, column: 9)
!16013 = !DILocation(line: 1608, column: 14, scope: !16012)
!16014 = !DILocation(line: 1608, column: 22, scope: !16015)
!16015 = !DILexicalBlockFile(scope: !16016, file: !904, discriminator: 1)
!16016 = distinct !DILexicalBlock(scope: !16012, file: !904, line: 1608, column: 9)
!16017 = !DILocation(line: 1608, column: 27, scope: !16015)
!16018 = !DILocation(line: 1608, column: 32, scope: !16015)
!16019 = !DILocation(line: 1608, column: 44, scope: !16015)
!16020 = !DILocation(line: 1608, column: 25, scope: !16015)
!16021 = !DILocation(line: 1608, column: 9, scope: !16015)
!16022 = !DILocation(line: 1609, column: 33, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16024, file: !904, line: 1609, column: 17)
!16024 = distinct !DILexicalBlock(scope: !16016, file: !904, line: 1608, column: 66)
!16025 = !DILocation(line: 1609, column: 18, scope: !16023)
!16026 = !DILocation(line: 1609, column: 37, scope: !16023)
!16027 = !DILocation(line: 1609, column: 45, scope: !16028)
!16028 = !DILexicalBlockFile(scope: !16023, file: !904, discriminator: 1)
!16029 = !DILocation(line: 1609, column: 41, scope: !16028)
!16030 = !DILocation(line: 1609, column: 49, scope: !16028)
!16031 = !DILocation(line: 1609, column: 17, scope: !16028)
!16032 = !DILocation(line: 1610, column: 17, scope: !16023)
!16033 = !DILocation(line: 1611, column: 17, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16024, file: !904, line: 1611, column: 17)
!16035 = !DILocation(line: 1611, column: 22, scope: !16034)
!16036 = !DILocation(line: 1611, column: 34, scope: !16034)
!16037 = !DILocation(line: 1611, column: 17, scope: !16024)
!16038 = !DILocation(line: 1612, column: 24, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16034, file: !904, line: 1612, column: 17)
!16040 = !DILocation(line: 1612, column: 22, scope: !16039)
!16041 = !DILocation(line: 1612, column: 29, scope: !16042)
!16042 = !DILexicalBlockFile(scope: !16043, file: !904, discriminator: 1)
!16043 = distinct !DILexicalBlock(scope: !16039, file: !904, line: 1612, column: 17)
!16044 = !DILocation(line: 1612, column: 37, scope: !16042)
!16045 = !DILocation(line: 1612, column: 33, scope: !16042)
!16046 = !DILocation(line: 1612, column: 41, scope: !16042)
!16047 = !DILocation(line: 1612, column: 31, scope: !16042)
!16048 = !DILocation(line: 1612, column: 17, scope: !16042)
!16049 = !DILocation(line: 1613, column: 87, scope: !16043)
!16050 = !DILocation(line: 1613, column: 78, scope: !16043)
!16051 = !DILocation(line: 1613, column: 48, scope: !16043)
!16052 = !DILocation(line: 1613, column: 44, scope: !16043)
!16053 = !DILocation(line: 1613, column: 52, scope: !16043)
!16054 = !DILocation(line: 1613, column: 66, scope: !16043)
!16055 = !DILocation(line: 1613, column: 64, scope: !16043)
!16056 = !DILocation(line: 1613, column: 21, scope: !16043)
!16057 = !DILocation(line: 1613, column: 26, scope: !16043)
!16058 = !DILocation(line: 1613, column: 38, scope: !16043)
!16059 = !DILocation(line: 1613, column: 69, scope: !16043)
!16060 = !DILocation(line: 1613, column: 76, scope: !16043)
!16061 = !DILocation(line: 1612, column: 52, scope: !16062)
!16062 = !DILexicalBlockFile(scope: !16043, file: !904, discriminator: 2)
!16063 = !DILocation(line: 1612, column: 17, scope: !16062)
!16064 = distinct !{!16064, !16065}
!16065 = !DILocation(line: 1612, column: 17, scope: !16034)
!16066 = !DILocation(line: 1613, column: 92, scope: !16067)
!16067 = !DILexicalBlockFile(scope: !16039, file: !904, discriminator: 1)
!16068 = !DILocation(line: 1615, column: 79, scope: !16034)
!16069 = !DILocation(line: 1615, column: 70, scope: !16034)
!16070 = !DILocation(line: 1615, column: 44, scope: !16034)
!16071 = !DILocation(line: 1615, column: 40, scope: !16034)
!16072 = !DILocation(line: 1615, column: 48, scope: !16034)
!16073 = !DILocation(line: 1615, column: 17, scope: !16034)
!16074 = !DILocation(line: 1615, column: 22, scope: !16034)
!16075 = !DILocation(line: 1615, column: 34, scope: !16034)
!16076 = !DILocation(line: 1615, column: 61, scope: !16034)
!16077 = !DILocation(line: 1615, column: 68, scope: !16034)
!16078 = !DILocation(line: 1616, column: 9, scope: !16024)
!16079 = !DILocation(line: 1608, column: 62, scope: !16080)
!16080 = !DILexicalBlockFile(scope: !16016, file: !904, discriminator: 2)
!16081 = !DILocation(line: 1608, column: 9, scope: !16080)
!16082 = distinct !{!16082, !16083}
!16083 = !DILocation(line: 1608, column: 9, scope: !15733)
!16084 = !DILocation(line: 1617, column: 9, scope: !15733)
!16085 = !DILocation(line: 1619, column: 17, scope: !15755)
!16086 = !DILocation(line: 1619, column: 14, scope: !15755)
!16087 = !DILocation(line: 1619, column: 22, scope: !16088)
!16088 = !DILexicalBlockFile(scope: !15754, file: !904, discriminator: 1)
!16089 = !DILocation(line: 1619, column: 27, scope: !16088)
!16090 = !DILocation(line: 1619, column: 32, scope: !16088)
!16091 = !DILocation(line: 1619, column: 44, scope: !16088)
!16092 = !DILocation(line: 1619, column: 25, scope: !16088)
!16093 = !DILocation(line: 1619, column: 9, scope: !16088)
!16094 = !DILocation(line: 1620, column: 33, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !15753, file: !904, line: 1620, column: 17)
!16096 = !DILocation(line: 1620, column: 18, scope: !16095)
!16097 = !DILocation(line: 1620, column: 37, scope: !16095)
!16098 = !DILocation(line: 1620, column: 45, scope: !16099)
!16099 = !DILexicalBlockFile(scope: !16095, file: !904, discriminator: 1)
!16100 = !DILocation(line: 1620, column: 41, scope: !16099)
!16101 = !DILocation(line: 1620, column: 49, scope: !16099)
!16102 = !DILocation(line: 1620, column: 17, scope: !16099)
!16103 = !DILocation(line: 1621, column: 17, scope: !16095)
!16104 = !DILocation(line: 1622, column: 17, scope: !15752)
!16105 = !DILocation(line: 1622, column: 22, scope: !15752)
!16106 = !DILocation(line: 1622, column: 34, scope: !15752)
!16107 = !DILocation(line: 1622, column: 17, scope: !15753)
!16108 = !DILocation(line: 1623, column: 24, scope: !15775)
!16109 = !DILocation(line: 1623, column: 22, scope: !15775)
!16110 = !DILocation(line: 1623, column: 29, scope: !16111)
!16111 = !DILexicalBlockFile(scope: !15774, file: !904, discriminator: 1)
!16112 = !DILocation(line: 1623, column: 37, scope: !16111)
!16113 = !DILocation(line: 1623, column: 33, scope: !16111)
!16114 = !DILocation(line: 1623, column: 41, scope: !16111)
!16115 = !DILocation(line: 1623, column: 31, scope: !16111)
!16116 = !DILocation(line: 1623, column: 17, scope: !16111)
!16117 = !DILocation(line: 1625, column: 34, scope: !15774)
!16118 = !DILocation(line: 1625, column: 55, scope: !15774)
!16119 = !DILocation(line: 1626, column: 51, scope: !15774)
!16120 = !DILocation(line: 1625, column: 25, scope: !15774)
!16121 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !15773)
!16122 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !15773)
!16123 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !15773)
!16124 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !15773)
!16125 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !15773)
!16126 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !15773)
!16127 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !15773)
!16128 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !15773)
!16129 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !15773)
!16130 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !15773)
!16131 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15773)
!16132 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15779)
!16133 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15779)
!16134 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15779)
!16135 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15779)
!16136 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15779)
!16137 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15779)
!16138 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15779)
!16139 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15779)
!16140 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15779)
!16141 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15779)
!16142 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15779)
!16143 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15779)
!16144 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15779)
!16145 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15779)
!16146 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15779)
!16147 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15779)
!16148 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15779)
!16149 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15779)
!16150 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !15773)
!16151 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !15773)
!16152 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !15773)
!16153 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !15773)
!16154 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !15773)
!16155 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !15773)
!16156 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !15773)
!16157 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !15773)
!16158 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !15773)
!16159 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !15773)
!16160 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !15773)
!16161 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !15773)
!16162 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !15773)
!16163 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !15773)
!16164 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !15773)
!16165 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !15773)
!16166 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !15773)
!16167 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !15773)
!16168 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !15773)
!16169 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !15773)
!16170 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !15773)
!16171 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !15773)
!16172 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !15773)
!16173 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !15773)
!16174 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !15773)
!16175 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !15773)
!16176 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !15773)
!16177 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !15773)
!16178 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !15773)
!16179 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !15773)
!16180 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !15773)
!16181 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !15773)
!16182 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !15773)
!16183 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !15773)
!16184 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !15773)
!16185 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !15773)
!16186 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !15773)
!16187 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !15773)
!16188 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !15773)
!16189 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !15773)
!16190 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15773)
!16191 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15777)
!16192 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15777)
!16193 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15777)
!16194 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15777)
!16195 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15777)
!16196 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15777)
!16197 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15777)
!16198 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15777)
!16199 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15777)
!16200 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15777)
!16201 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15777)
!16202 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15777)
!16203 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15777)
!16204 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15777)
!16205 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15777)
!16206 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15777)
!16207 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15777)
!16208 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15777)
!16209 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !15773)
!16210 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !15773)
!16211 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !15773)
!16212 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !15773)
!16213 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !15773)
!16214 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !15773)
!16215 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !15773)
!16216 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !15773)
!16217 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !15773)
!16218 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !15773)
!16219 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !15773)
!16220 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !15773)
!16221 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !15773)
!16222 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !15773)
!16223 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !15773)
!16224 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !15773)
!16225 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !15773)
!16226 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !15773)
!16227 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !15773)
!16228 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !15773)
!16229 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !15773)
!16230 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !15773)
!16231 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !15773)
!16232 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !15773)
!16233 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !15773)
!16234 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !15773)
!16235 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !15773)
!16236 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !15773)
!16237 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !15773)
!16238 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !15773)
!16239 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !15773)
!16240 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !15773)
!16241 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !15773)
!16242 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !15773)
!16243 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !15773)
!16244 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !15773)
!16245 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !15773)
!16246 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !15773)
!16247 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !15773)
!16248 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !15773)
!16249 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !15773)
!16250 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !15773)
!16251 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !15773)
!16252 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !15773)
!16253 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !15773)
!16254 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15773)
!16255 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15772)
!16256 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15772)
!16257 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15772)
!16258 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15772)
!16259 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15772)
!16260 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15772)
!16261 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15772)
!16262 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15772)
!16263 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15772)
!16264 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15772)
!16265 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15772)
!16266 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15772)
!16267 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15772)
!16268 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15772)
!16269 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15772)
!16270 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15772)
!16271 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15772)
!16272 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15772)
!16273 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !15773)
!16274 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !15773)
!16275 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !15773)
!16276 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !15773)
!16277 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !15773)
!16278 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !15773)
!16279 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !15773)
!16280 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !15773)
!16281 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !15773)
!16282 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !15773)
!16283 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !15773)
!16284 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !15773)
!16285 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !15773)
!16286 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !15773)
!16287 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !15773)
!16288 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !15773)
!16289 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !15773)
!16290 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !15773)
!16291 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !15773)
!16292 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !15773)
!16293 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !15773)
!16294 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !15773)
!16295 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !15773)
!16296 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !15773)
!16297 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !15773)
!16298 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !15773)
!16299 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !15773)
!16300 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !15773)
!16301 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !15773)
!16302 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !15773)
!16303 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !15773)
!16304 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !15773)
!16305 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !15773)
!16306 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !15773)
!16307 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !15773)
!16308 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !15773)
!16309 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !15773)
!16310 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !15773)
!16311 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !15773)
!16312 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !15773)
!16313 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !15773)
!16314 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !15773)
!16315 = !DILocation(line: 1626, column: 60, scope: !15774)
!16316 = !DILocation(line: 1624, column: 48, scope: !15774)
!16317 = !DILocation(line: 1624, column: 44, scope: !15774)
!16318 = !DILocation(line: 1624, column: 52, scope: !15774)
!16319 = !DILocation(line: 1624, column: 66, scope: !15774)
!16320 = !DILocation(line: 1624, column: 64, scope: !15774)
!16321 = !DILocation(line: 1624, column: 21, scope: !15774)
!16322 = !DILocation(line: 1624, column: 26, scope: !15774)
!16323 = !DILocation(line: 1624, column: 38, scope: !15774)
!16324 = !DILocation(line: 1624, column: 69, scope: !15774)
!16325 = !DILocation(line: 1624, column: 76, scope: !15774)
!16326 = !DILocation(line: 1623, column: 52, scope: !16327)
!16327 = !DILexicalBlockFile(scope: !15774, file: !904, discriminator: 2)
!16328 = !DILocation(line: 1623, column: 17, scope: !16327)
!16329 = distinct !{!16329, !16330}
!16330 = !DILocation(line: 1623, column: 17, scope: !15752)
!16331 = !DILocation(line: 1626, column: 62, scope: !16332)
!16332 = !DILexicalBlockFile(scope: !15775, file: !904, discriminator: 1)
!16333 = !DILocation(line: 1629, column: 30, scope: !15752)
!16334 = !DILocation(line: 1629, column: 51, scope: !15752)
!16335 = !DILocation(line: 1630, column: 47, scope: !15752)
!16336 = !DILocation(line: 1629, column: 21, scope: !15752)
!16337 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !15751)
!16338 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !15751)
!16339 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !15751)
!16340 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !15751)
!16341 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !15751)
!16342 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !15751)
!16343 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !15751)
!16344 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !15751)
!16345 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !15751)
!16346 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !15751)
!16347 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15751)
!16348 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15759)
!16349 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15759)
!16350 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15759)
!16351 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15759)
!16352 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15759)
!16353 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15759)
!16354 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15759)
!16355 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15759)
!16356 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15759)
!16357 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15759)
!16358 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15759)
!16359 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15759)
!16360 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15759)
!16361 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15759)
!16362 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15759)
!16363 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15759)
!16364 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15759)
!16365 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15759)
!16366 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !15751)
!16367 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !15751)
!16368 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !15751)
!16369 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !15751)
!16370 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !15751)
!16371 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !15751)
!16372 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !15751)
!16373 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !15751)
!16374 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !15751)
!16375 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !15751)
!16376 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !15751)
!16377 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !15751)
!16378 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !15751)
!16379 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !15751)
!16380 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !15751)
!16381 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !15751)
!16382 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !15751)
!16383 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !15751)
!16384 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !15751)
!16385 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !15751)
!16386 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !15751)
!16387 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !15751)
!16388 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !15751)
!16389 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !15751)
!16390 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !15751)
!16391 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !15751)
!16392 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !15751)
!16393 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !15751)
!16394 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !15751)
!16395 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !15751)
!16396 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !15751)
!16397 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !15751)
!16398 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !15751)
!16399 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !15751)
!16400 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !15751)
!16401 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !15751)
!16402 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !15751)
!16403 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !15751)
!16404 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !15751)
!16405 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !15751)
!16406 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15751)
!16407 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15757)
!16408 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15757)
!16409 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15757)
!16410 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15757)
!16411 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15757)
!16412 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15757)
!16413 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15757)
!16414 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15757)
!16415 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15757)
!16416 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15757)
!16417 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15757)
!16418 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15757)
!16419 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15757)
!16420 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15757)
!16421 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15757)
!16422 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15757)
!16423 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15757)
!16424 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15757)
!16425 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !15751)
!16426 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !15751)
!16427 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !15751)
!16428 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !15751)
!16429 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !15751)
!16430 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !15751)
!16431 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !15751)
!16432 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !15751)
!16433 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !15751)
!16434 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !15751)
!16435 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !15751)
!16436 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !15751)
!16437 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !15751)
!16438 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !15751)
!16439 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !15751)
!16440 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !15751)
!16441 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !15751)
!16442 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !15751)
!16443 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !15751)
!16444 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !15751)
!16445 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !15751)
!16446 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !15751)
!16447 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !15751)
!16448 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !15751)
!16449 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !15751)
!16450 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !15751)
!16451 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !15751)
!16452 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !15751)
!16453 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !15751)
!16454 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !15751)
!16455 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !15751)
!16456 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !15751)
!16457 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !15751)
!16458 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !15751)
!16459 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !15751)
!16460 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !15751)
!16461 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !15751)
!16462 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !15751)
!16463 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !15751)
!16464 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !15751)
!16465 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !15751)
!16466 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !15751)
!16467 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !15751)
!16468 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !15751)
!16469 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !15751)
!16470 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15751)
!16471 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15750)
!16472 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15750)
!16473 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15750)
!16474 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15750)
!16475 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15750)
!16476 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15750)
!16477 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15750)
!16478 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15750)
!16479 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15750)
!16480 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15750)
!16481 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15750)
!16482 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15750)
!16483 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15750)
!16484 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15750)
!16485 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15750)
!16486 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15750)
!16487 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15750)
!16488 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15750)
!16489 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !15751)
!16490 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !15751)
!16491 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !15751)
!16492 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !15751)
!16493 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !15751)
!16494 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !15751)
!16495 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !15751)
!16496 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !15751)
!16497 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !15751)
!16498 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !15751)
!16499 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !15751)
!16500 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !15751)
!16501 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !15751)
!16502 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !15751)
!16503 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !15751)
!16504 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !15751)
!16505 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !15751)
!16506 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !15751)
!16507 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !15751)
!16508 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !15751)
!16509 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !15751)
!16510 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !15751)
!16511 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !15751)
!16512 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !15751)
!16513 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !15751)
!16514 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !15751)
!16515 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !15751)
!16516 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !15751)
!16517 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !15751)
!16518 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !15751)
!16519 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !15751)
!16520 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !15751)
!16521 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !15751)
!16522 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !15751)
!16523 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !15751)
!16524 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !15751)
!16525 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !15751)
!16526 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !15751)
!16527 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !15751)
!16528 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !15751)
!16529 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !15751)
!16530 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !15751)
!16531 = !DILocation(line: 1630, column: 56, scope: !15752)
!16532 = !DILocation(line: 1628, column: 44, scope: !15752)
!16533 = !DILocation(line: 1628, column: 40, scope: !15752)
!16534 = !DILocation(line: 1628, column: 48, scope: !15752)
!16535 = !DILocation(line: 1628, column: 17, scope: !15752)
!16536 = !DILocation(line: 1628, column: 22, scope: !15752)
!16537 = !DILocation(line: 1628, column: 34, scope: !15752)
!16538 = !DILocation(line: 1628, column: 61, scope: !15752)
!16539 = !DILocation(line: 1628, column: 68, scope: !15752)
!16540 = !DILocation(line: 1631, column: 9, scope: !15753)
!16541 = !DILocation(line: 1619, column: 62, scope: !16542)
!16542 = !DILexicalBlockFile(scope: !15754, file: !904, discriminator: 2)
!16543 = !DILocation(line: 1619, column: 9, scope: !16542)
!16544 = distinct !{!16544, !16545}
!16545 = !DILocation(line: 1619, column: 9, scope: !15733)
!16546 = !DILocation(line: 1632, column: 9, scope: !15733)
!16547 = !DILocation(line: 1634, column: 17, scope: !15732)
!16548 = !DILocation(line: 1634, column: 14, scope: !15732)
!16549 = !DILocation(line: 1634, column: 22, scope: !16550)
!16550 = !DILexicalBlockFile(scope: !15731, file: !904, discriminator: 1)
!16551 = !DILocation(line: 1634, column: 27, scope: !16550)
!16552 = !DILocation(line: 1634, column: 32, scope: !16550)
!16553 = !DILocation(line: 1634, column: 44, scope: !16550)
!16554 = !DILocation(line: 1634, column: 25, scope: !16550)
!16555 = !DILocation(line: 1634, column: 9, scope: !16550)
!16556 = !DILocation(line: 1635, column: 33, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !15730, file: !904, line: 1635, column: 17)
!16558 = !DILocation(line: 1635, column: 18, scope: !16557)
!16559 = !DILocation(line: 1635, column: 37, scope: !16557)
!16560 = !DILocation(line: 1635, column: 45, scope: !16561)
!16561 = !DILexicalBlockFile(scope: !16557, file: !904, discriminator: 1)
!16562 = !DILocation(line: 1635, column: 41, scope: !16561)
!16563 = !DILocation(line: 1635, column: 49, scope: !16561)
!16564 = !DILocation(line: 1635, column: 17, scope: !16561)
!16565 = !DILocation(line: 1636, column: 17, scope: !16557)
!16566 = !DILocation(line: 1637, column: 20, scope: !15729)
!16567 = !DILocation(line: 1637, column: 18, scope: !15729)
!16568 = !DILocation(line: 1637, column: 25, scope: !16569)
!16569 = !DILexicalBlockFile(scope: !15728, file: !904, discriminator: 1)
!16570 = !DILocation(line: 1637, column: 33, scope: !16569)
!16571 = !DILocation(line: 1637, column: 29, scope: !16569)
!16572 = !DILocation(line: 1637, column: 37, scope: !16569)
!16573 = !DILocation(line: 1637, column: 27, scope: !16569)
!16574 = !DILocation(line: 1637, column: 13, scope: !16569)
!16575 = !DILocation(line: 1638, column: 34, scope: !15727)
!16576 = !DILocation(line: 1638, column: 55, scope: !15727)
!16577 = !DILocation(line: 1639, column: 51, scope: !15727)
!16578 = !DILocation(line: 1638, column: 25, scope: !15727)
!16579 = !DILocation(line: 785, column: 30, scope: !3282, inlinedAt: !15726)
!16580 = !DILocation(line: 785, column: 34, scope: !3282, inlinedAt: !15726)
!16581 = !DILocation(line: 785, column: 118, scope: !3282, inlinedAt: !15726)
!16582 = !DILocation(line: 785, column: 122, scope: !3282, inlinedAt: !15726)
!16583 = !DILocation(line: 786, column: 60, scope: !3282, inlinedAt: !15726)
!16584 = !DILocation(line: 786, column: 64, scope: !3282, inlinedAt: !15726)
!16585 = !DILocation(line: 786, column: 74, scope: !3282, inlinedAt: !15726)
!16586 = !DILocation(line: 786, column: 83, scope: !3282, inlinedAt: !15726)
!16587 = !DILocation(line: 786, column: 71, scope: !3282, inlinedAt: !15726)
!16588 = !DILocation(line: 786, column: 92, scope: !3282, inlinedAt: !15726)
!16589 = !DILocation(line: 786, column: 16, scope: !3282, inlinedAt: !15726)
!16590 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15737)
!16591 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15737)
!16592 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15737)
!16593 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15737)
!16594 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15737)
!16595 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15737)
!16596 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15737)
!16597 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15737)
!16598 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15737)
!16599 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15737)
!16600 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15737)
!16601 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15737)
!16602 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15737)
!16603 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15737)
!16604 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15737)
!16605 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15737)
!16606 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15737)
!16607 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15737)
!16608 = !DILocation(line: 786, column: 100, scope: !3282, inlinedAt: !15726)
!16609 = !DILocation(line: 786, column: 109, scope: !3282, inlinedAt: !15726)
!16610 = !DILocation(line: 786, column: 96, scope: !3282, inlinedAt: !15726)
!16611 = !DILocation(line: 786, column: 14, scope: !3282, inlinedAt: !15726)
!16612 = !DILocation(line: 788, column: 64, scope: !3418, inlinedAt: !15726)
!16613 = !DILocation(line: 788, column: 74, scope: !3418, inlinedAt: !15726)
!16614 = !DILocation(line: 788, column: 54, scope: !3418, inlinedAt: !15726)
!16615 = !DILocation(line: 788, column: 52, scope: !3418, inlinedAt: !15726)
!16616 = !DILocation(line: 788, column: 94, scope: !3418, inlinedAt: !15726)
!16617 = !DILocation(line: 788, column: 88, scope: !3418, inlinedAt: !15726)
!16618 = !DILocation(line: 788, column: 86, scope: !3418, inlinedAt: !15726)
!16619 = !DILocation(line: 788, column: 115, scope: !3418, inlinedAt: !15726)
!16620 = !DILocation(line: 788, column: 109, scope: !3418, inlinedAt: !15726)
!16621 = !DILocation(line: 788, column: 107, scope: !3418, inlinedAt: !15726)
!16622 = !DILocation(line: 788, column: 130, scope: !3418, inlinedAt: !15726)
!16623 = !DILocation(line: 788, column: 140, scope: !3418, inlinedAt: !15726)
!16624 = !DILocation(line: 788, column: 144, scope: !3418, inlinedAt: !15726)
!16625 = !DILocation(line: 788, column: 147, scope: !3432, inlinedAt: !15726)
!16626 = !DILocation(line: 788, column: 149, scope: !3432, inlinedAt: !15726)
!16627 = !DILocation(line: 788, column: 130, scope: !3432, inlinedAt: !15726)
!16628 = !DILocation(line: 788, column: 169, scope: !3436, inlinedAt: !15726)
!16629 = !DILocation(line: 788, column: 187, scope: !3436, inlinedAt: !15726)
!16630 = !DILocation(line: 788, column: 199, scope: !3436, inlinedAt: !15726)
!16631 = !DILocation(line: 788, column: 196, scope: !3436, inlinedAt: !15726)
!16632 = !DILocation(line: 788, column: 184, scope: !3436, inlinedAt: !15726)
!16633 = !DILocation(line: 788, column: 168, scope: !3436, inlinedAt: !15726)
!16634 = !DILocation(line: 788, column: 209, scope: !3443, inlinedAt: !15726)
!16635 = !DILocation(line: 788, column: 221, scope: !3443, inlinedAt: !15726)
!16636 = !DILocation(line: 788, column: 218, scope: !3443, inlinedAt: !15726)
!16637 = !DILocation(line: 788, column: 168, scope: !3443, inlinedAt: !15726)
!16638 = !DILocation(line: 788, column: 231, scope: !3448, inlinedAt: !15726)
!16639 = !DILocation(line: 788, column: 168, scope: !3448, inlinedAt: !15726)
!16640 = !DILocation(line: 788, column: 168, scope: !3288, inlinedAt: !15726)
!16641 = !DILocation(line: 788, column: 165, scope: !3288, inlinedAt: !15726)
!16642 = !DILocation(line: 788, column: 303, scope: !3288, inlinedAt: !15726)
!16643 = !DILocation(line: 788, column: 307, scope: !3288, inlinedAt: !15726)
!16644 = !DILocation(line: 788, column: 317, scope: !3288, inlinedAt: !15726)
!16645 = !DILocation(line: 788, column: 326, scope: !3288, inlinedAt: !15726)
!16646 = !DILocation(line: 788, column: 314, scope: !3288, inlinedAt: !15726)
!16647 = !DILocation(line: 788, column: 335, scope: !3288, inlinedAt: !15726)
!16648 = !DILocation(line: 788, column: 259, scope: !3288, inlinedAt: !15726)
!16649 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15735)
!16650 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15735)
!16651 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15735)
!16652 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15735)
!16653 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15735)
!16654 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15735)
!16655 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15735)
!16656 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15735)
!16657 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15735)
!16658 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15735)
!16659 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15735)
!16660 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15735)
!16661 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15735)
!16662 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15735)
!16663 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15735)
!16664 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15735)
!16665 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15735)
!16666 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15735)
!16667 = !DILocation(line: 788, column: 343, scope: !3288, inlinedAt: !15726)
!16668 = !DILocation(line: 788, column: 352, scope: !3288, inlinedAt: !15726)
!16669 = !DILocation(line: 788, column: 339, scope: !3288, inlinedAt: !15726)
!16670 = !DILocation(line: 788, column: 257, scope: !3288, inlinedAt: !15726)
!16671 = !DILocation(line: 788, column: 369, scope: !3288, inlinedAt: !15726)
!16672 = !DILocation(line: 788, column: 368, scope: !3288, inlinedAt: !15726)
!16673 = !DILocation(line: 788, column: 366, scope: !3288, inlinedAt: !15726)
!16674 = !DILocation(line: 788, column: 390, scope: !3288, inlinedAt: !15726)
!16675 = !DILocation(line: 788, column: 400, scope: !3288, inlinedAt: !15726)
!16676 = !DILocation(line: 788, column: 380, scope: !3487, inlinedAt: !15726)
!16677 = !DILocation(line: 788, column: 411, scope: !3288, inlinedAt: !15726)
!16678 = !DILocation(line: 788, column: 409, scope: !3288, inlinedAt: !15726)
!16679 = !DILocation(line: 788, column: 378, scope: !3288, inlinedAt: !15726)
!16680 = !DILocation(line: 788, column: 430, scope: !3288, inlinedAt: !15726)
!16681 = !DILocation(line: 788, column: 424, scope: !3288, inlinedAt: !15726)
!16682 = !DILocation(line: 788, column: 422, scope: !3288, inlinedAt: !15726)
!16683 = !DILocation(line: 788, column: 451, scope: !3288, inlinedAt: !15726)
!16684 = !DILocation(line: 788, column: 445, scope: !3288, inlinedAt: !15726)
!16685 = !DILocation(line: 788, column: 443, scope: !3288, inlinedAt: !15726)
!16686 = !DILocation(line: 788, column: 466, scope: !3288, inlinedAt: !15726)
!16687 = !DILocation(line: 788, column: 476, scope: !3288, inlinedAt: !15726)
!16688 = !DILocation(line: 788, column: 480, scope: !3288, inlinedAt: !15726)
!16689 = !DILocation(line: 788, column: 483, scope: !3501, inlinedAt: !15726)
!16690 = !DILocation(line: 788, column: 485, scope: !3501, inlinedAt: !15726)
!16691 = !DILocation(line: 788, column: 466, scope: !3501, inlinedAt: !15726)
!16692 = !DILocation(line: 788, column: 505, scope: !3505, inlinedAt: !15726)
!16693 = !DILocation(line: 788, column: 523, scope: !3505, inlinedAt: !15726)
!16694 = !DILocation(line: 788, column: 535, scope: !3505, inlinedAt: !15726)
!16695 = !DILocation(line: 788, column: 532, scope: !3505, inlinedAt: !15726)
!16696 = !DILocation(line: 788, column: 520, scope: !3505, inlinedAt: !15726)
!16697 = !DILocation(line: 788, column: 504, scope: !3505, inlinedAt: !15726)
!16698 = !DILocation(line: 788, column: 548, scope: !3512, inlinedAt: !15726)
!16699 = !DILocation(line: 788, column: 560, scope: !3512, inlinedAt: !15726)
!16700 = !DILocation(line: 788, column: 557, scope: !3512, inlinedAt: !15726)
!16701 = !DILocation(line: 788, column: 504, scope: !3512, inlinedAt: !15726)
!16702 = !DILocation(line: 788, column: 573, scope: !3517, inlinedAt: !15726)
!16703 = !DILocation(line: 788, column: 504, scope: !3517, inlinedAt: !15726)
!16704 = !DILocation(line: 788, column: 504, scope: !3276, inlinedAt: !15726)
!16705 = !DILocation(line: 788, column: 501, scope: !3276, inlinedAt: !15726)
!16706 = !DILocation(line: 788, column: 645, scope: !3276, inlinedAt: !15726)
!16707 = !DILocation(line: 788, column: 649, scope: !3276, inlinedAt: !15726)
!16708 = !DILocation(line: 788, column: 659, scope: !3276, inlinedAt: !15726)
!16709 = !DILocation(line: 788, column: 668, scope: !3276, inlinedAt: !15726)
!16710 = !DILocation(line: 788, column: 656, scope: !3276, inlinedAt: !15726)
!16711 = !DILocation(line: 788, column: 677, scope: !3276, inlinedAt: !15726)
!16712 = !DILocation(line: 788, column: 601, scope: !3276, inlinedAt: !15726)
!16713 = !DILocation(line: 68, column: 16, scope: !2532, inlinedAt: !15725)
!16714 = !DILocation(line: 68, column: 19, scope: !2532, inlinedAt: !15725)
!16715 = !DILocation(line: 68, column: 24, scope: !2532, inlinedAt: !15725)
!16716 = !DILocation(line: 68, column: 38, scope: !2532, inlinedAt: !15725)
!16717 = !DILocation(line: 68, column: 41, scope: !2532, inlinedAt: !15725)
!16718 = !DILocation(line: 68, column: 46, scope: !2532, inlinedAt: !15725)
!16719 = !DILocation(line: 68, column: 34, scope: !2532, inlinedAt: !15725)
!16720 = !DILocation(line: 68, column: 57, scope: !2532, inlinedAt: !15725)
!16721 = !DILocation(line: 68, column: 69, scope: !2532, inlinedAt: !15725)
!16722 = !DILocation(line: 68, column: 72, scope: !2532, inlinedAt: !15725)
!16723 = !DILocation(line: 68, column: 79, scope: !2532, inlinedAt: !15725)
!16724 = !DILocation(line: 68, column: 84, scope: !2532, inlinedAt: !15725)
!16725 = !DILocation(line: 68, column: 99, scope: !2532, inlinedAt: !15725)
!16726 = !DILocation(line: 68, column: 102, scope: !2532, inlinedAt: !15725)
!16727 = !DILocation(line: 68, column: 109, scope: !2532, inlinedAt: !15725)
!16728 = !DILocation(line: 68, column: 114, scope: !2532, inlinedAt: !15725)
!16729 = !DILocation(line: 68, column: 94, scope: !2532, inlinedAt: !15725)
!16730 = !DILocation(line: 68, column: 63, scope: !2532, inlinedAt: !15725)
!16731 = !DILocation(line: 788, column: 685, scope: !3276, inlinedAt: !15726)
!16732 = !DILocation(line: 788, column: 694, scope: !3276, inlinedAt: !15726)
!16733 = !DILocation(line: 788, column: 681, scope: !3276, inlinedAt: !15726)
!16734 = !DILocation(line: 788, column: 599, scope: !3276, inlinedAt: !15726)
!16735 = !DILocation(line: 788, column: 711, scope: !3276, inlinedAt: !15726)
!16736 = !DILocation(line: 788, column: 710, scope: !3276, inlinedAt: !15726)
!16737 = !DILocation(line: 788, column: 708, scope: !3276, inlinedAt: !15726)
!16738 = !DILocation(line: 788, column: 732, scope: !3276, inlinedAt: !15726)
!16739 = !DILocation(line: 788, column: 742, scope: !3276, inlinedAt: !15726)
!16740 = !DILocation(line: 788, column: 722, scope: !3556, inlinedAt: !15726)
!16741 = !DILocation(line: 788, column: 753, scope: !3276, inlinedAt: !15726)
!16742 = !DILocation(line: 788, column: 751, scope: !3276, inlinedAt: !15726)
!16743 = !DILocation(line: 788, column: 720, scope: !3276, inlinedAt: !15726)
!16744 = !DILocation(line: 788, column: 772, scope: !3276, inlinedAt: !15726)
!16745 = !DILocation(line: 788, column: 766, scope: !3276, inlinedAt: !15726)
!16746 = !DILocation(line: 788, column: 764, scope: !3276, inlinedAt: !15726)
!16747 = !DILocation(line: 788, column: 793, scope: !3276, inlinedAt: !15726)
!16748 = !DILocation(line: 788, column: 787, scope: !3276, inlinedAt: !15726)
!16749 = !DILocation(line: 788, column: 785, scope: !3276, inlinedAt: !15726)
!16750 = !DILocation(line: 788, column: 804, scope: !3276, inlinedAt: !15726)
!16751 = !DILocation(line: 788, column: 806, scope: !3568, inlinedAt: !15726)
!16752 = !DILocation(line: 788, column: 827, scope: !3570, inlinedAt: !15726)
!16753 = !DILocation(line: 788, column: 822, scope: !3570, inlinedAt: !15726)
!16754 = !DILocation(line: 788, column: 844, scope: !3570, inlinedAt: !15726)
!16755 = !DILocation(line: 788, column: 862, scope: !3570, inlinedAt: !15726)
!16756 = !DILocation(line: 788, column: 874, scope: !3570, inlinedAt: !15726)
!16757 = !DILocation(line: 788, column: 871, scope: !3570, inlinedAt: !15726)
!16758 = !DILocation(line: 788, column: 859, scope: !3570, inlinedAt: !15726)
!16759 = !DILocation(line: 788, column: 843, scope: !3570, inlinedAt: !15726)
!16760 = !DILocation(line: 788, column: 881, scope: !3580, inlinedAt: !15726)
!16761 = !DILocation(line: 788, column: 893, scope: !3580, inlinedAt: !15726)
!16762 = !DILocation(line: 788, column: 890, scope: !3580, inlinedAt: !15726)
!16763 = !DILocation(line: 788, column: 843, scope: !3580, inlinedAt: !15726)
!16764 = !DILocation(line: 788, column: 900, scope: !3585, inlinedAt: !15726)
!16765 = !DILocation(line: 788, column: 843, scope: !3585, inlinedAt: !15726)
!16766 = !DILocation(line: 788, column: 843, scope: !3588, inlinedAt: !15726)
!16767 = !DILocation(line: 788, column: 840, scope: !3588, inlinedAt: !15726)
!16768 = !DILocation(line: 790, column: 18, scope: !3282, inlinedAt: !15726)
!16769 = !DILocation(line: 790, column: 6, scope: !3282, inlinedAt: !15726)
!16770 = !DILocation(line: 790, column: 10, scope: !3282, inlinedAt: !15726)
!16771 = !DILocation(line: 790, column: 16, scope: !3282, inlinedAt: !15726)
!16772 = !DILocation(line: 792, column: 12, scope: !3282, inlinedAt: !15726)
!16773 = !DILocation(line: 1638, column: 23, scope: !15727)
!16774 = !DILocation(line: 1640, column: 37, scope: !15727)
!16775 = !DILocation(line: 1640, column: 25, scope: !15727)
!16776 = !DILocation(line: 1640, column: 23, scope: !15727)
!16777 = !DILocation(line: 1641, column: 37, scope: !15727)
!16778 = !DILocation(line: 1641, column: 33, scope: !15727)
!16779 = !DILocation(line: 1641, column: 41, scope: !15727)
!16780 = !DILocation(line: 1641, column: 55, scope: !15727)
!16781 = !DILocation(line: 1641, column: 53, scope: !15727)
!16782 = !DILocation(line: 1641, column: 24, scope: !15727)
!16783 = !DILocation(line: 1641, column: 58, scope: !15727)
!16784 = !DILocation(line: 1642, column: 61, scope: !15727)
!16785 = !DILocation(line: 1642, column: 57, scope: !15727)
!16786 = !DILocation(line: 1642, column: 65, scope: !15727)
!16787 = !DILocation(line: 1642, column: 79, scope: !15727)
!16788 = !DILocation(line: 1642, column: 77, scope: !15727)
!16789 = !DILocation(line: 1642, column: 48, scope: !15727)
!16790 = !DILocation(line: 1642, column: 25, scope: !15727)
!16791 = !DILocation(line: 1642, column: 30, scope: !15727)
!16792 = !DILocation(line: 1642, column: 42, scope: !15727)
!16793 = !DILocation(line: 1642, column: 83, scope: !15727)
!16794 = !DILocation(line: 1641, column: 24, scope: !16795)
!16795 = !DILexicalBlockFile(scope: !15727, file: !904, discriminator: 1)
!16796 = !DILocation(line: 1641, column: 24, scope: !16797)
!16797 = !DILexicalBlockFile(scope: !15727, file: !904, discriminator: 2)
!16798 = !DILocation(line: 1641, column: 24, scope: !16799)
!16799 = !DILexicalBlockFile(scope: !15727, file: !904, discriminator: 3)
!16800 = !DILocation(line: 1641, column: 22, scope: !16799)
!16801 = !DILocation(line: 1643, column: 75, scope: !15727)
!16802 = !DILocation(line: 1643, column: 82, scope: !15727)
!16803 = !DILocation(line: 1643, column: 80, scope: !15727)
!16804 = !DILocation(line: 1643, column: 89, scope: !15727)
!16805 = !DILocation(line: 1643, column: 44, scope: !15727)
!16806 = !DILocation(line: 1643, column: 40, scope: !15727)
!16807 = !DILocation(line: 1643, column: 48, scope: !15727)
!16808 = !DILocation(line: 1643, column: 62, scope: !15727)
!16809 = !DILocation(line: 1643, column: 60, scope: !15727)
!16810 = !DILocation(line: 1643, column: 17, scope: !15727)
!16811 = !DILocation(line: 1643, column: 22, scope: !15727)
!16812 = !DILocation(line: 1643, column: 34, scope: !15727)
!16813 = !DILocation(line: 1643, column: 65, scope: !15727)
!16814 = !DILocation(line: 1643, column: 72, scope: !15727)
!16815 = !DILocation(line: 1644, column: 13, scope: !15727)
!16816 = !DILocation(line: 1637, column: 48, scope: !16817)
!16817 = !DILexicalBlockFile(scope: !15728, file: !904, discriminator: 2)
!16818 = !DILocation(line: 1637, column: 13, scope: !16817)
!16819 = distinct !{!16819, !16820}
!16820 = !DILocation(line: 1637, column: 13, scope: !15730)
!16821 = !DILocation(line: 1645, column: 9, scope: !15730)
!16822 = !DILocation(line: 1634, column: 62, scope: !16823)
!16823 = !DILexicalBlockFile(scope: !15731, file: !904, discriminator: 2)
!16824 = !DILocation(line: 1634, column: 9, scope: !16823)
!16825 = distinct !{!16825, !16826}
!16826 = !DILocation(line: 1634, column: 9, scope: !15733)
!16827 = !DILocation(line: 1646, column: 9, scope: !15733)
!16828 = !DILocation(line: 1648, column: 17, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !15733, file: !904, line: 1648, column: 9)
!16830 = !DILocation(line: 1648, column: 14, scope: !16829)
!16831 = !DILocation(line: 1648, column: 22, scope: !16832)
!16832 = !DILexicalBlockFile(scope: !16833, file: !904, discriminator: 1)
!16833 = distinct !DILexicalBlock(scope: !16829, file: !904, line: 1648, column: 9)
!16834 = !DILocation(line: 1648, column: 27, scope: !16832)
!16835 = !DILocation(line: 1648, column: 32, scope: !16832)
!16836 = !DILocation(line: 1648, column: 44, scope: !16832)
!16837 = !DILocation(line: 1648, column: 25, scope: !16832)
!16838 = !DILocation(line: 1648, column: 9, scope: !16832)
!16839 = !DILocation(line: 1649, column: 33, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16841, file: !904, line: 1649, column: 17)
!16841 = distinct !DILexicalBlock(scope: !16833, file: !904, line: 1648, column: 66)
!16842 = !DILocation(line: 1649, column: 18, scope: !16840)
!16843 = !DILocation(line: 1649, column: 17, scope: !16841)
!16844 = !DILocation(line: 1650, column: 17, scope: !16840)
!16845 = !DILocation(line: 1651, column: 20, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16841, file: !904, line: 1651, column: 13)
!16847 = !DILocation(line: 1651, column: 18, scope: !16846)
!16848 = !DILocation(line: 1651, column: 25, scope: !16849)
!16849 = !DILexicalBlockFile(scope: !16850, file: !904, discriminator: 1)
!16850 = distinct !DILexicalBlock(scope: !16846, file: !904, line: 1651, column: 13)
!16851 = !DILocation(line: 1651, column: 33, scope: !16849)
!16852 = !DILocation(line: 1651, column: 29, scope: !16849)
!16853 = !DILocation(line: 1651, column: 37, scope: !16849)
!16854 = !DILocation(line: 1651, column: 27, scope: !16849)
!16855 = !DILocation(line: 1651, column: 13, scope: !16849)
!16856 = !DILocation(line: 1653, column: 34, scope: !16850)
!16857 = !DILocation(line: 1653, column: 30, scope: !16850)
!16858 = !DILocation(line: 1653, column: 38, scope: !16850)
!16859 = !DILocation(line: 1653, column: 52, scope: !16850)
!16860 = !DILocation(line: 1653, column: 50, scope: !16850)
!16861 = !DILocation(line: 1653, column: 21, scope: !16850)
!16862 = !DILocation(line: 1653, column: 55, scope: !16850)
!16863 = !DILocation(line: 1654, column: 59, scope: !16850)
!16864 = !DILocation(line: 1654, column: 55, scope: !16850)
!16865 = !DILocation(line: 1654, column: 63, scope: !16850)
!16866 = !DILocation(line: 1654, column: 77, scope: !16850)
!16867 = !DILocation(line: 1654, column: 75, scope: !16850)
!16868 = !DILocation(line: 1654, column: 46, scope: !16850)
!16869 = !DILocation(line: 1654, column: 23, scope: !16850)
!16870 = !DILocation(line: 1654, column: 28, scope: !16850)
!16871 = !DILocation(line: 1654, column: 40, scope: !16850)
!16872 = !DILocation(line: 1654, column: 81, scope: !16850)
!16873 = !DILocation(line: 1653, column: 21, scope: !16849)
!16874 = !DILocation(line: 1653, column: 21, scope: !16875)
!16875 = !DILexicalBlockFile(scope: !16850, file: !904, discriminator: 2)
!16876 = !DILocation(line: 1653, column: 21, scope: !16877)
!16877 = !DILexicalBlockFile(scope: !16850, file: !904, discriminator: 3)
!16878 = !DILocation(line: 1652, column: 44, scope: !16850)
!16879 = !DILocation(line: 1652, column: 40, scope: !16850)
!16880 = !DILocation(line: 1652, column: 48, scope: !16850)
!16881 = !DILocation(line: 1652, column: 62, scope: !16850)
!16882 = !DILocation(line: 1652, column: 60, scope: !16850)
!16883 = !DILocation(line: 1652, column: 17, scope: !16850)
!16884 = !DILocation(line: 1652, column: 22, scope: !16850)
!16885 = !DILocation(line: 1652, column: 34, scope: !16850)
!16886 = !DILocation(line: 1652, column: 65, scope: !16850)
!16887 = !DILocation(line: 1652, column: 72, scope: !16850)
!16888 = !DILocation(line: 1651, column: 48, scope: !16875)
!16889 = !DILocation(line: 1651, column: 13, scope: !16875)
!16890 = distinct !{!16890, !16891}
!16891 = !DILocation(line: 1651, column: 13, scope: !16841)
!16892 = !DILocation(line: 1656, column: 9, scope: !16841)
!16893 = !DILocation(line: 1648, column: 62, scope: !16894)
!16894 = !DILexicalBlockFile(scope: !16833, file: !904, discriminator: 2)
!16895 = !DILocation(line: 1648, column: 9, scope: !16894)
!16896 = distinct !{!16896, !16897}
!16897 = !DILocation(line: 1648, column: 9, scope: !15733)
!16898 = !DILocation(line: 1657, column: 9, scope: !15733)
!16899 = !DILocation(line: 1659, column: 1, scope: !15723)
!16900 = distinct !DISubprogram(name: "decode_tones_phase", scope: !904, file: !904, line: 1670, type: !14380, isLocal: true, isDefinition: true, scopeLine: 1672, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !907)
!16901 = !DILocalVariable(name: "gb", arg: 1, scope: !16900, file: !904, line: 1670, type: !1654)
!16902 = !DILocation(line: 1670, column: 47, scope: !16900)
!16903 = !DILocalVariable(name: "ctx", arg: 2, scope: !16900, file: !904, line: 1670, type: !1664)
!16904 = !DILocation(line: 1670, column: 71, scope: !16900)
!16905 = !DILocalVariable(name: "ch_num", arg: 3, scope: !16900, file: !904, line: 1671, type: !888)
!16906 = !DILocation(line: 1671, column: 36, scope: !16900)
!16907 = !DILocalVariable(name: "band_has_tones", arg: 4, scope: !16900, file: !904, line: 1671, type: !1535)
!16908 = !DILocation(line: 1671, column: 48, scope: !16900)
!16909 = !DILocalVariable(name: "sb", scope: !16900, file: !904, line: 1673, type: !888)
!16910 = !DILocation(line: 1673, column: 9, scope: !16900)
!16911 = !DILocalVariable(name: "i", scope: !16900, file: !904, line: 1673, type: !888)
!16912 = !DILocation(line: 1673, column: 13, scope: !16900)
!16913 = !DILocalVariable(name: "wparam", scope: !16900, file: !904, line: 1674, type: !15247)
!16914 = !DILocation(line: 1674, column: 23, scope: !16900)
!16915 = !DILocalVariable(name: "dst", scope: !16900, file: !904, line: 1675, type: !1739)
!16916 = !DILocation(line: 1675, column: 23, scope: !16900)
!16917 = !DILocation(line: 1675, column: 43, scope: !16900)
!16918 = !DILocation(line: 1675, column: 29, scope: !16900)
!16919 = !DILocation(line: 1675, column: 34, scope: !16900)
!16920 = !DILocation(line: 1675, column: 51, scope: !16900)
!16921 = !DILocation(line: 1677, column: 13, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16900, file: !904, line: 1677, column: 5)
!16923 = !DILocation(line: 1677, column: 10, scope: !16922)
!16924 = !DILocation(line: 1677, column: 18, scope: !16925)
!16925 = !DILexicalBlockFile(scope: !16926, file: !904, discriminator: 1)
!16926 = distinct !DILexicalBlock(scope: !16922, file: !904, line: 1677, column: 5)
!16927 = !DILocation(line: 1677, column: 23, scope: !16925)
!16928 = !DILocation(line: 1677, column: 28, scope: !16925)
!16929 = !DILocation(line: 1677, column: 40, scope: !16925)
!16930 = !DILocation(line: 1677, column: 21, scope: !16925)
!16931 = !DILocation(line: 1677, column: 5, scope: !16925)
!16932 = !DILocation(line: 1678, column: 29, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16934, file: !904, line: 1678, column: 13)
!16934 = distinct !DILexicalBlock(scope: !16926, file: !904, line: 1677, column: 62)
!16935 = !DILocation(line: 1678, column: 14, scope: !16933)
!16936 = !DILocation(line: 1678, column: 13, scope: !16934)
!16937 = !DILocation(line: 1679, column: 13, scope: !16933)
!16938 = !DILocation(line: 1680, column: 46, scope: !16934)
!16939 = !DILocation(line: 1680, column: 42, scope: !16934)
!16940 = !DILocation(line: 1680, column: 50, scope: !16934)
!16941 = !DILocation(line: 1680, column: 19, scope: !16934)
!16942 = !DILocation(line: 1680, column: 24, scope: !16934)
!16943 = !DILocation(line: 1680, column: 36, scope: !16934)
!16944 = !DILocation(line: 1680, column: 16, scope: !16934)
!16945 = !DILocation(line: 1681, column: 16, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16934, file: !904, line: 1681, column: 9)
!16947 = !DILocation(line: 1681, column: 14, scope: !16946)
!16948 = !DILocation(line: 1681, column: 21, scope: !16949)
!16949 = !DILexicalBlockFile(scope: !16950, file: !904, discriminator: 1)
!16950 = distinct !DILexicalBlock(scope: !16946, file: !904, line: 1681, column: 9)
!16951 = !DILocation(line: 1681, column: 29, scope: !16949)
!16952 = !DILocation(line: 1681, column: 25, scope: !16949)
!16953 = !DILocation(line: 1681, column: 33, scope: !16949)
!16954 = !DILocation(line: 1681, column: 23, scope: !16949)
!16955 = !DILocation(line: 1681, column: 9, scope: !16949)
!16956 = !DILocation(line: 1682, column: 46, scope: !16950)
!16957 = !DILocation(line: 1682, column: 37, scope: !16950)
!16958 = !DILocation(line: 1682, column: 20, scope: !16950)
!16959 = !DILocation(line: 1682, column: 13, scope: !16950)
!16960 = !DILocation(line: 1682, column: 23, scope: !16950)
!16961 = !DILocation(line: 1682, column: 35, scope: !16950)
!16962 = !DILocation(line: 1681, column: 44, scope: !16963)
!16963 = !DILexicalBlockFile(scope: !16950, file: !904, discriminator: 2)
!16964 = !DILocation(line: 1681, column: 9, scope: !16963)
!16965 = distinct !{!16965, !16966}
!16966 = !DILocation(line: 1681, column: 9, scope: !16934)
!16967 = !DILocation(line: 1683, column: 5, scope: !16934)
!16968 = !DILocation(line: 1677, column: 58, scope: !16969)
!16969 = !DILexicalBlockFile(scope: !16926, file: !904, discriminator: 2)
!16970 = !DILocation(line: 1677, column: 5, scope: !16969)
!16971 = distinct !{!16971, !16972}
!16972 = !DILocation(line: 1677, column: 5, scope: !16900)
!16973 = !DILocation(line: 1684, column: 1, scope: !16900)
