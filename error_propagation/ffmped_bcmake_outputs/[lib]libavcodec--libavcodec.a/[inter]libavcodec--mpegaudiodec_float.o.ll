; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mpegaudiodec_float.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mpegaudiodec_float.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.HuffTable = type { i32, i8*, i16* }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.MPADecodeContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1048 x i8], i32, i32, i32, %struct.GetBitContext, %struct.GetBitContext, [16 x i8], [2 x [1024 x float]], [2 x i32], [24 x i8], [2 x [36 x [32 x float]]], [2 x [576 x float]], [2 x [2 x %struct.GranuleDef]], i32, i32, i32, %struct.AVCodecContext*, %struct.MPADSPContext, %struct.AVFloatDSPContext*, %struct.AVFrame*, [8 x i8] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.GranuleDef = type { i8, i32, i32, i32, i32, i8, i8, [3 x i32], [3 x i32], i8, i8, [3 x i32], i32, i32, i32, [40 x i8], [12 x i8], [576 x float] }
%struct.MPADSPContext = type { void (float*, float*, i32*, float*, i64)*, void (i32*, i32*, i32*, i16*, i64)*, void (float*, float*)*, void (i32*, i32*)*, void (float*, float*, float*, i32, i32, i32)*, void (i32*, i32*, i32*, i32, i32, i32)* }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%union.unaligned_32 = type { i32 }
%struct.MPADecodeHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MP3On4DecodeContext = type { i32, i32, i8*, [5 x %struct.MPADecodeContext*] }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.unaligned_16 = type { i16 }
%union.av_alias32 = type { i32 }

@.str = private unnamed_addr constant [9 x i8] c"mp1float\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"MP1 (MPEG audio layer 1)\00", align 1
@.compoundliteral = internal constant [3 x i32] [i32 8, i32 3, i32 -1], align 4
@ff_mp1float_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86058, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [9 x i8] c"mp2float\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"MP2 (MPEG audio layer 2)\00", align 1
@.compoundliteral.4 = internal constant [3 x i32] [i32 8, i32 3, i32 -1], align 4
@ff_mp2float_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i32 1, i32 86016, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral.4, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"mp3float\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"MP3 (MPEG audio layer 3)\00", align 1
@.compoundliteral.7 = internal constant [3 x i32] [i32 8, i32 3, i32 -1], align 4
@ff_mp3float_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i32 1, i32 86017, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral.7, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.8 = private unnamed_addr constant [12 x i8] c"mp3adufloat\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"ADU (Application Data Unit) MP3 (MPEG audio layer 3)\00", align 1
@.compoundliteral.10 = internal constant [3 x i32] [i32 8, i32 3, i32 -1], align 4
@ff_mp3adufloat_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i32 0, i32 0), i32 1, i32 86029, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral.10, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame_adu, i32 (%struct.AVCodecContext*)* @decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.11 = private unnamed_addr constant [12 x i8] c"mp3on4float\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"MP3onMP4\00", align 1
@.compoundliteral.13 = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ff_mp3on4float_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i32 1, i32 86030, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.13, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 56, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init_mp3on4, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame_mp3on4, i32 (%struct.AVCodecContext*)* @decode_close_mp3on4, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush_mp3on4, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@decode_init.initialized_tables = internal global i32 0, align 4
@scale_factor_modshift = internal global [64 x i16] zeroinitializer, align 16
@scale_factor_mult = internal global [15 x [3 x i32]] zeroinitializer, align 16
@ff_mpa_synth_window_float = external global [0 x float], align 4
@mpa_huff_tables = internal constant [16 x %struct.HuffTable] [%struct.HuffTable { i32 1, i8* null, i16* null }, %struct.HuffTable { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @mpa_huffbits_1, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @mpa_huffcodes_1, i32 0, i32 0) }, %struct.HuffTable { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @mpa_huffbits_2, i32 0, i32 0), i16* getelementptr inbounds ([9 x i16], [9 x i16]* @mpa_huffcodes_2, i32 0, i32 0) }, %struct.HuffTable { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @mpa_huffbits_3, i32 0, i32 0), i16* getelementptr inbounds ([9 x i16], [9 x i16]* @mpa_huffcodes_3, i32 0, i32 0) }, %struct.HuffTable { i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mpa_huffbits_5, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @mpa_huffcodes_5, i32 0, i32 0) }, %struct.HuffTable { i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mpa_huffbits_6, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @mpa_huffcodes_6, i32 0, i32 0) }, %struct.HuffTable { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @mpa_huffbits_7, i32 0, i32 0), i16* getelementptr inbounds ([36 x i16], [36 x i16]* @mpa_huffcodes_7, i32 0, i32 0) }, %struct.HuffTable { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @mpa_huffbits_8, i32 0, i32 0), i16* getelementptr inbounds ([36 x i16], [36 x i16]* @mpa_huffcodes_8, i32 0, i32 0) }, %struct.HuffTable { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @mpa_huffbits_9, i32 0, i32 0), i16* getelementptr inbounds ([36 x i16], [36 x i16]* @mpa_huffcodes_9, i32 0, i32 0) }, %struct.HuffTable { i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @mpa_huffbits_10, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @mpa_huffcodes_10, i32 0, i32 0) }, %struct.HuffTable { i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @mpa_huffbits_11, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @mpa_huffcodes_11, i32 0, i32 0) }, %struct.HuffTable { i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @mpa_huffbits_12, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @mpa_huffcodes_12, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_13, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_13, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_15, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_15, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_16, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_16, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_24, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_24, i32 0, i32 0) }], align 16
@huff_vlc_tables = internal global [3746 x [2 x i16]] zeroinitializer, align 16
@huff_vlc = internal global [16 x %struct.VLC] zeroinitializer, align 16
@huff_vlc_tables_sizes = internal constant [16 x i32] [i32 0, i32 128, i32 128, i32 128, i32 130, i32 128, i32 154, i32 166, i32 142, i32 204, i32 190, i32 170, i32 542, i32 460, i32 662, i32 414], align 16
@.str.14 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.15 = private unnamed_addr constant [67 x i8] c"offset == (sizeof(huff_vlc_tables) / sizeof((huff_vlc_tables)[0]))\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"libavcodec/mpegaudiodec_template.c\00", align 1
@huff_quad_vlc_tables = internal global [144 x [2 x i16]] zeroinitializer, align 16
@huff_quad_vlc = internal global [2 x %struct.VLC] zeroinitializer, align 16
@huff_quad_vlc_tables_sizes = internal constant [2 x i32] [i32 128, i32 16], align 4
@mpa_quad_bits = internal constant [2 x [16 x i8]] [[16 x i8] c"\01\04\04\05\04\06\05\06\04\05\05\06\05\06\06\06", [16 x i8] c"\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04"], align 16
@mpa_quad_codes = internal constant [2 x [16 x i8]] [[16 x i8] c"\01\05\04\05\06\05\04\04\07\03\06\00\07\02\03\01", [16 x i8] c"\0F\0E\0D\0C\0B\0A\09\08\07\06\05\04\03\02\01\00"], align 16
@.str.17 = private unnamed_addr constant [77 x i8] c"offset == (sizeof(huff_quad_vlc_tables) / sizeof((huff_quad_vlc_tables)[0]))\00", align 1
@band_index_long = internal global [9 x [23 x i16]] zeroinitializer, align 16
@band_size_long = internal constant [9 x [22 x i8]] [[22 x i8] c"\04\04\04\04\04\04\06\06\08\08\0A\0C\10\14\18\1C\22*26L\9E", [22 x i8] c"\04\04\04\04\04\04\06\06\06\08\0A\0C\10\12\16\1C\22(.66\C0", [22 x i8] c"\04\04\04\04\04\04\06\06\08\0A\0C\10\14\18\1E&.8DTf\1A", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\12\16\1A &.4@FL$", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\0C\0C\0C\0C\0C\0C\10\14\18\1C (08@LZ\02\02\02\02\02"], align 16
@ff_mpa_quant_bits = external constant [17 x i32], align 16
@ff_mpa_quant_steps = external constant [17 x i32], align 16
@division_tabs = internal constant [4 x i16*] [i16* getelementptr inbounds ([64 x i16], [64 x i16]* @division_tab3, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @division_tab5, i32 0, i32 0), i16* null, i16* getelementptr inbounds ([2048 x i16], [2048 x i16]* @division_tab9, i32 0, i32 0)], align 16
@is_table = internal global [2 x [16 x float]] zeroinitializer, align 16
@is_table_lsf = internal global [2 x [2 x [16 x float]]] zeroinitializer, align 16
@ci_table = internal constant [8 x float] [float 0xBFE3333340000000, float 0xBFE11EB860000000, float 0xBFD51EB860000000, float 0xBFC7AE1480000000, float 0xBFB851EB80000000, float 0xBFA4FDF3C0000000, float 0xBF8D14E3C0000000, float 0xBF6E4F7660000000], align 16
@csa_table = internal global [8 x [4 x float]] zeroinitializer, align 16
@mpa_huffbits_1 = internal constant [4 x i8] c"\01\03\02\03", align 1
@mpa_huffcodes_1 = internal constant [4 x i16] [i16 1, i16 1, i16 1, i16 0], align 2
@mpa_huffbits_2 = internal constant [9 x i8] c"\01\03\06\03\03\05\05\05\06", align 1
@mpa_huffcodes_2 = internal constant [9 x i16] [i16 1, i16 2, i16 1, i16 3, i16 1, i16 1, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_3 = internal constant [9 x i8] c"\02\02\06\03\02\05\05\05\06", align 1
@mpa_huffcodes_3 = internal constant [9 x i16] [i16 3, i16 2, i16 1, i16 1, i16 1, i16 1, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_5 = internal constant [16 x i8] c"\01\03\06\07\03\03\06\07\06\06\07\08\07\06\07\08", align 16
@mpa_huffcodes_5 = internal constant [16 x i16] [i16 1, i16 2, i16 6, i16 5, i16 3, i16 1, i16 4, i16 4, i16 7, i16 5, i16 7, i16 1, i16 6, i16 1, i16 1, i16 0], align 16
@mpa_huffbits_6 = internal constant [16 x i8] c"\03\03\05\07\03\02\04\05\04\04\05\06\06\05\06\07", align 16
@mpa_huffcodes_6 = internal constant [16 x i16] [i16 7, i16 3, i16 5, i16 1, i16 6, i16 2, i16 3, i16 2, i16 5, i16 4, i16 4, i16 1, i16 3, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_7 = internal constant [36 x i8] c"\01\03\06\08\08\09\03\04\06\07\07\08\06\05\07\08\08\09\07\07\08\09\09\09\07\07\08\09\09\0A\08\08\09\0A\0A\0A", align 16
@mpa_huffcodes_7 = internal constant [36 x i16] [i16 1, i16 2, i16 10, i16 19, i16 16, i16 10, i16 3, i16 3, i16 7, i16 10, i16 5, i16 3, i16 11, i16 4, i16 13, i16 17, i16 8, i16 4, i16 12, i16 11, i16 18, i16 15, i16 11, i16 2, i16 7, i16 6, i16 9, i16 14, i16 3, i16 1, i16 6, i16 4, i16 5, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_8 = internal constant [36 x i8] c"\02\03\06\08\08\09\03\02\04\08\08\08\06\04\06\08\08\09\08\08\08\09\09\0A\08\07\08\09\0A\0A\09\08\09\09\0B\0B", align 16
@mpa_huffcodes_8 = internal constant [36 x i16] [i16 3, i16 4, i16 6, i16 18, i16 12, i16 5, i16 5, i16 1, i16 2, i16 16, i16 9, i16 3, i16 7, i16 3, i16 5, i16 14, i16 7, i16 3, i16 19, i16 17, i16 15, i16 13, i16 10, i16 4, i16 13, i16 5, i16 8, i16 11, i16 5, i16 1, i16 12, i16 4, i16 4, i16 1, i16 1, i16 0], align 16
@mpa_huffbits_9 = internal constant [36 x i8] c"\03\03\05\06\08\09\03\03\04\05\06\08\04\04\05\06\07\08\06\05\06\07\07\08\07\06\07\07\08\09\08\07\08\08\09\09", align 16
@mpa_huffcodes_9 = internal constant [36 x i16] [i16 7, i16 5, i16 9, i16 14, i16 15, i16 7, i16 6, i16 4, i16 5, i16 5, i16 6, i16 7, i16 7, i16 6, i16 8, i16 8, i16 8, i16 5, i16 15, i16 6, i16 9, i16 10, i16 5, i16 1, i16 11, i16 7, i16 9, i16 6, i16 4, i16 1, i16 14, i16 4, i16 6, i16 2, i16 6, i16 0], align 16
@mpa_huffbits_10 = internal constant [64 x i8] c"\01\03\06\08\09\09\09\0A\03\04\06\07\08\09\08\08\06\06\07\08\09\0A\09\09\07\07\08\09\0A\0A\09\0A\08\08\09\0A\0A\0A\0A\0A\09\09\0A\0A\0B\0B\0A\0B\08\08\09\0A\0A\0A\0B\0B\09\08\09\0A\0A\0B\0B\0B", align 16
@mpa_huffcodes_10 = internal constant [64 x i16] [i16 1, i16 2, i16 10, i16 23, i16 35, i16 30, i16 12, i16 17, i16 3, i16 3, i16 8, i16 12, i16 18, i16 21, i16 12, i16 7, i16 11, i16 9, i16 15, i16 21, i16 32, i16 40, i16 19, i16 6, i16 14, i16 13, i16 22, i16 34, i16 46, i16 23, i16 18, i16 7, i16 20, i16 19, i16 33, i16 47, i16 27, i16 22, i16 9, i16 3, i16 31, i16 22, i16 41, i16 26, i16 21, i16 20, i16 5, i16 3, i16 14, i16 13, i16 10, i16 11, i16 16, i16 6, i16 5, i16 1, i16 9, i16 8, i16 7, i16 8, i16 4, i16 4, i16 2, i16 0], align 16
@mpa_huffbits_11 = internal constant [64 x i8] c"\02\03\05\07\08\09\08\09\03\03\04\06\08\08\07\08\05\05\06\07\08\09\08\08\07\06\07\09\08\0A\08\09\08\08\08\09\09\0A\09\0A\08\08\09\0A\0A\0B\0A\0B\08\07\07\08\09\0A\0A\0A\08\07\08\09\0A\0A\0A\0A", align 16
@mpa_huffcodes_11 = internal constant [64 x i16] [i16 3, i16 4, i16 10, i16 24, i16 34, i16 33, i16 21, i16 15, i16 5, i16 3, i16 4, i16 10, i16 32, i16 17, i16 11, i16 10, i16 11, i16 7, i16 13, i16 18, i16 30, i16 31, i16 20, i16 5, i16 25, i16 11, i16 19, i16 59, i16 27, i16 18, i16 12, i16 5, i16 35, i16 33, i16 31, i16 58, i16 30, i16 16, i16 7, i16 5, i16 28, i16 26, i16 32, i16 19, i16 17, i16 15, i16 8, i16 14, i16 14, i16 12, i16 9, i16 13, i16 14, i16 9, i16 4, i16 1, i16 11, i16 4, i16 6, i16 6, i16 6, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_12 = internal constant [64 x i8] c"\04\03\05\07\08\09\09\09\03\03\04\05\07\07\08\08\05\04\05\06\07\08\07\08\06\05\06\06\07\08\08\08\07\06\07\07\08\08\08\09\08\07\08\08\08\09\08\09\08\07\07\08\08\09\09\0A\09\08\08\09\09\09\09\0A", align 16
@mpa_huffcodes_12 = internal constant [64 x i16] [i16 9, i16 6, i16 16, i16 33, i16 41, i16 39, i16 38, i16 26, i16 7, i16 5, i16 6, i16 9, i16 23, i16 16, i16 26, i16 11, i16 17, i16 7, i16 11, i16 14, i16 21, i16 30, i16 10, i16 7, i16 17, i16 10, i16 15, i16 12, i16 18, i16 28, i16 14, i16 5, i16 32, i16 13, i16 22, i16 19, i16 18, i16 16, i16 9, i16 5, i16 40, i16 17, i16 31, i16 29, i16 17, i16 13, i16 4, i16 2, i16 27, i16 12, i16 11, i16 15, i16 10, i16 7, i16 4, i16 1, i16 27, i16 12, i16 8, i16 12, i16 6, i16 3, i16 1, i16 0], align 16
@mpa_huffbits_13 = internal constant [256 x i8] c"\01\04\06\07\08\09\09\0A\09\0A\0B\0B\0C\0C\0D\0D\03\04\06\07\08\08\09\09\09\09\0A\0A\0B\0C\0C\0C\06\06\07\08\09\09\0A\0A\09\0A\0A\0B\0B\0C\0D\0D\07\07\08\09\09\0A\0A\0A\0A\0B\0B\0B\0B\0C\0D\0D\08\07\09\09\0A\0A\0B\0B\0A\0B\0B\0C\0C\0D\0D\0E\09\08\09\0A\0A\0A\0B\0B\0B\0B\0C\0B\0D\0D\0E\0E\09\09\0A\0A\0B\0B\0B\0B\0B\0C\0C\0C\0D\0D\0E\0E\0A\09\0A\0B\0B\0B\0C\0C\0C\0C\0D\0D\0D\0E\10\10\09\08\09\0A\0A\0B\0B\0C\0C\0C\0C\0D\0D\0E\0F\0F\0A\09\0A\0A\0B\0B\0B\0D\0C\0D\0D\0E\0E\0E\10\0F\0A\0A\0A\0B\0B\0C\0C\0D\0C\0D\0E\0D\0E\0F\10\11\0B\0A\0A\0B\0C\0C\0C\0C\0D\0D\0D\0E\0F\0F\0F\10\0B\0B\0B\0C\0C\0D\0C\0D\0E\0E\0F\0F\0F\10\10\10\0C\0B\0C\0D\0D\0D\0E\0E\0E\0E\0E\0F\10\0F\10\10\0D\0C\0C\0D\0D\0D\0F\0E\0E\11\0F\0F\0F\11\10\10\0C\0C\0D\0E\0E\0E\0F\0E\0F\0F\10\10\13\12\13\10", align 16
@mpa_huffcodes_13 = internal constant [256 x i16] [i16 1, i16 5, i16 14, i16 21, i16 34, i16 51, i16 46, i16 71, i16 42, i16 52, i16 68, i16 52, i16 67, i16 44, i16 43, i16 19, i16 3, i16 4, i16 12, i16 19, i16 31, i16 26, i16 44, i16 33, i16 31, i16 24, i16 32, i16 24, i16 31, i16 35, i16 22, i16 14, i16 15, i16 13, i16 23, i16 36, i16 59, i16 49, i16 77, i16 65, i16 29, i16 40, i16 30, i16 40, i16 27, i16 33, i16 42, i16 16, i16 22, i16 20, i16 37, i16 61, i16 56, i16 79, i16 73, i16 64, i16 43, i16 76, i16 56, i16 37, i16 26, i16 31, i16 25, i16 14, i16 35, i16 16, i16 60, i16 57, i16 97, i16 75, i16 114, i16 91, i16 54, i16 73, i16 55, i16 41, i16 48, i16 53, i16 23, i16 24, i16 58, i16 27, i16 50, i16 96, i16 76, i16 70, i16 93, i16 84, i16 77, i16 58, i16 79, i16 29, i16 74, i16 49, i16 41, i16 17, i16 47, i16 45, i16 78, i16 74, i16 115, i16 94, i16 90, i16 79, i16 69, i16 83, i16 71, i16 50, i16 59, i16 38, i16 36, i16 15, i16 72, i16 34, i16 56, i16 95, i16 92, i16 85, i16 91, i16 90, i16 86, i16 73, i16 77, i16 65, i16 51, i16 44, i16 43, i16 42, i16 43, i16 20, i16 30, i16 44, i16 55, i16 78, i16 72, i16 87, i16 78, i16 61, i16 46, i16 54, i16 37, i16 30, i16 20, i16 16, i16 53, i16 25, i16 41, i16 37, i16 44, i16 59, i16 54, i16 81, i16 66, i16 76, i16 57, i16 54, i16 37, i16 18, i16 39, i16 11, i16 35, i16 33, i16 31, i16 57, i16 42, i16 82, i16 72, i16 80, i16 47, i16 58, i16 55, i16 21, i16 22, i16 26, i16 38, i16 22, i16 53, i16 25, i16 23, i16 38, i16 70, i16 60, i16 51, i16 36, i16 55, i16 26, i16 34, i16 23, i16 27, i16 14, i16 9, i16 7, i16 34, i16 32, i16 28, i16 39, i16 49, i16 75, i16 30, i16 52, i16 48, i16 40, i16 52, i16 28, i16 18, i16 17, i16 9, i16 5, i16 45, i16 21, i16 34, i16 64, i16 56, i16 50, i16 49, i16 45, i16 31, i16 19, i16 12, i16 15, i16 10, i16 7, i16 6, i16 3, i16 48, i16 23, i16 20, i16 39, i16 36, i16 35, i16 53, i16 21, i16 16, i16 23, i16 13, i16 10, i16 6, i16 1, i16 4, i16 2, i16 16, i16 15, i16 17, i16 27, i16 25, i16 20, i16 29, i16 11, i16 17, i16 12, i16 16, i16 8, i16 1, i16 1, i16 0, i16 1], align 16
@mpa_huffbits_15 = internal constant [256 x i8] calign 16
@mpa_huffcodes_15 = internal constant [256 x i16] [i16 7, i16 12, i16 18, i16 53, i16 47, i16 76, i16 124, i16 108, i16 89, i16 123, i16 108, i16 119, i16 107, i16 81, i16 122, i16 63, i16 13, i16 5, i16 16, i16 27, i16 46, i16 36, i16 61, i16 51, i16 42, i16 70, i16 52, i16 83, i16 65, i16 41, i16 59, i16 36, i16 19, i16 17, i16 15, i16 24, i16 41, i16 34, i16 59, i16 48, i16 40, i16 64, i16 50, i16 78, i16 62, i16 80, i16 56, i16 33, i16 29, i16 28, i16 25, i16 43, i16 39, i16 63, i16 55, i16 93, i16 76, i16 59, i16 93, i16 72, i16 54, i16 75, i16 50, i16 29, i16 52, i16 22, i16 42, i16 40, i16 67, i16 57, i16 95, i16 79, i16 72, i16 57, i16 89, i16 69, i16 49, i16 66, i16 46, i16 27, i16 77, i16 37, i16 35, i16 66, i16 58, i16 52, i16 91, i16 74, i16 62, i16 48, i16 79, i16 63, i16 90, i16 62, i16 40, i16 38, i16 125, i16 32, i16 60, i16 56, i16 50, i16 92, i16 78, i16 65, i16 55, i16 87, i16 71, i16 51, i16 73, i16 51, i16 70, i16 30, i16 109, i16 53, i16 49, i16 94, i16 88, i16 75, i16 66, i16 122, i16 91, i16 73, i16 56, i16 42, i16 64, i16 44, i16 21, i16 25, i16 90, i16 43, i16 41, i16 77, i16 73, i16 63, i16 56, i16 92, i16 77, i16 66, i16 47, i16 67, i16 48, i16 53, i16 36, i16 20, i16 71, i16 34, i16 67, i16 60, i16 58, i16 49, i16 88, i16 76, i16 67, i16 106, i16 71, i16 54, i16 38, i16 39, i16 23, i16 15, i16 109, i16 53, i16 51, i16 47, i16 90, i16 82, i16 58, i16 57, i16 48, i16 72, i16 57, i16 41, i16 23, i16 27, i16 62, i16 9, i16 86, i16 42, i16 40, i16 37, i16 70, i16 64, i16 52, i16 43, i16 70, i16 55, i16 42, i16 25, i16 29, i16 18, i16 11, i16 11, i16 118, i16 68, i16 30, i16 55, i16 50, i16 46, i16 74, i16 65, i16 49, i16 39, i16 24, i16 16, i16 22, i16 13, i16 14, i16 7, i16 91, i16 44, i16 39, i16 38, i16 34, i16 63, i16 52, i16 45, i16 31, i16 52, i16 28, i16 19, i16 14, i16 8, i16 9, i16 3, i16 123, i16 60, i16 58, i16 53, i16 47, i16 43, i16 32, i16 22, i16 37, i16 24, i16 17, i16 12, i16 15, i16 10, i16 2, i16 1, i16 71, i16 37, i16 34, i16 30, i16 28, i16 20, i16 17, i16 26, i16 21, i16 16, i16 10, i16 6, i16 8, i16 6, i16 2, i16 0], align 16
@mpa_huffbits_16 = internal constant [256 x i8] c"\01\04\06\08\09\09\0A\0A\0B\0B\0B\0C\0C\0C\0D\09\03\04\06\07\08\09\09\09\0A\0A\0A\0B\0C\0B\0C\08\06\06\07\08\09\09\0A\0A\0B\0A\0B\0B\0B\0C\0C\09\08\07\08\09\09\0A\0A\0A\0B\0B\0C\0C\0C\0D\0D\0A\09\08\09\09\0A\0A\0B\0B\0B\0C\0C\0C\0D\0D\0D\09\09\08\09\09\0A\0B\0B\0C\0B\0C\0C\0D\0D\0D\0E\0A\0A\09\09\0A\0B\0B\0B\0B\0C\0C\0C\0C\0D\0D\0E\0A\0A\09\0A\0A\0B\0B\0B\0C\0C\0D\0D\0D\0D\0F\0F\0A\0A\0A\0A\0B\0B\0B\0C\0C\0D\0D\0D\0D\0E\0E\0E\0A\0B\0A\0A\0B\0B\0C\0C\0D\0D\0D\0D\0E\0D\0E\0D\0B\0B\0B\0A\0B\0C\0C\0C\0C\0D\0E\0E\0E\0F\0F\0E\0A\0C\0B\0B\0B\0C\0C\0D\0E\0E\0E\0E\0E\0E\0D\0E\0B\0C\0C\0C\0C\0C\0D\0D\0D\0D\0F\0E\0E\0E\0E\10\0B\0E\0C\0C\0C\0D\0D\0E\0E\0E\10\0F\0F\0F\11\0F\0B\0D\0D\0B\0C\0E\0E\0D\0E\0E\0F\10\0F\11\0F\0E\0B\09\08\08\09\09\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\08", align 16
@mpa_huffcodes_16 = internal constant [256 x i16] [i16 1, i16 5, i16 14, i16 44, i16 74, i16 63, i16 110, i16 93, i16 172, i16 149, i16 138, i16 242, i16 225, i16 195, i16 376, i16 17, i16 3, i16 4, i16 12, i16 20, i16 35, i16 62, i16 53, i16 47, i16 83, i16 75, i16 68, i16 119, i16 201, i16 107, i16 207, i16 9, i16 15, i16 13, i16 23, i16 38, i16 67, i16 58, i16 103, i16 90, i16 161, i16 72, i16 127, i16 117, i16 110, i16 209, i16 206, i16 16, i16 45, i16 21, i16 39, i16 69, i16 64, i16 114, i16 99, i16 87, i16 158, i16 140, i16 252, i16 212, i16 199, i16 387, i16 365, i16 26, i16 75, i16 36, i16 68, i16 65, i16 115, i16 101, i16 179, i16 164, i16 155, i16 264, i16 246, i16 226, i16 395, i16 382, i16 362, i16 9, i16 66, i16 30, i16 59, i16 56, i16 102, i16 185, i16 173, i16 265, i16 142, i16 253, i16 232, i16 400, i16 388, i16 378, i16 445, i16 16, i16 111, i16 54, i16 52, i16 100, i16 184, i16 178, i16 160, i16 133, i16 257, i16 244, i16 228, i16 217, i16 385, i16 366, i16 715, i16 10, i16 98, i16 48, i16 91, i16 88, i16 165, i16 157, i16 148, i16 261, i16 248, i16 407, i16 397, i16 372, i16 380, i16 889, i16 884, i16 8, i16 85, i16 84, i16 81, i16 159, i16 156, i16 143, i16 260, i16 249, i16 427, i16 401, i16 392, i16 383, i16 727, i16 713, i16 708, i16 7, i16 154, i16 76, i16 73, i16 141, i16 131, i16 256, i16 245, i16 426, i16 406, i16 394, i16 384, i16 735, i16 359, i16 710, i16 352, i16 11, i16 139, i16 129, i16 67, i16 125, i16 247, i16 233, i16 229, i16 219, i16 393, i16 743, i16 737, i16 720, i16 885, i16 882, i16 439, i16 4, i16 243, i16 120, i16 118, i16 115, i16 227, i16 223, i16 396, i16 746, i16 742, i16 736, i16 721, i16 712, i16 706, i16 223, i16 436, i16 6, i16 202, i16 224, i16 222, i16 218, i16 216, i16 389, i16 386, i16 381, i16 364, i16 888, i16 443, i16 707, i16 440, i16 437, i16 1728, i16 4, i16 747, i16 211, i16 210, i16 208, i16 370, i16 379, i16 734, i16 723, i16 714, i16 1735, i16 883, i16 877, i16 876, i16 3459, i16 865, i16 2, i16 377, i16 369, i16 102, i16 187, i16 726, i16 722, i16 358, i16 711, i16 709, i16 866, i16 1734, i16 871, i16 3458, i16 870, i16 434, i16 0, i16 12, i16 10, i16 7, i16 11, i16 10, i16 17, i16 11, i16 9, i16 13, i16 12, i16 10, i16 7, i16 5, i16 3, i16 1, i16 3], align 16
@mpa_huffbits_24 = internal constant [256 x i8] calign 16
@mpa_huffcodes_24 = internal constant [256 x i16] [i16 15, i16 13, i16 46, i16 80, i16 146, i16 262, i16 248, i16 434, i16 426, i16 669, i16 653, i16 649, i16 621, i16 517, i16 1032, i16 88, i16 14, i16 12, i16 21, i16 38, i16 71, i16 130, i16 122, i16 216, i16 209, i16 198, i16 327, i16 345, i16 319, i16 297, i16 279, i16 42, i16 47, i16 22, i16 41, i16 74, i16 68, i16 128, i16 120, i16 221, i16 207, i16 194, i16 182, i16 340, i16 315, i16 295, i16 541, i16 18, i16 81, i16 39, i16 75, i16 70, i16 134, i16 125, i16 116, i16 220, i16 204, i16 190, i16 178, i16 325, i16 311, i16 293, i16 271, i16 16, i16 147, i16 72, i16 69, i16 135, i16 127, i16 118, i16 112, i16 210, i16 200, i16 188, i16 352, i16 323, i16 306, i16 285, i16 540, i16 14, i16 263, i16 66, i16 129, i16 126, i16 119, i16 114, i16 214, i16 202, i16 192, i16 180, i16 341, i16 317, i16 301, i16 281, i16 262, i16 12, i16 249, i16 123, i16 121, i16 117, i16 113, i16 215, i16 206, i16 195, i16 185, i16 347, i16 330, i16 308, i16 291, i16 272, i16 520, i16 10, i16 435, i16 115, i16 111, i16 109, i16 211, i16 203, i16 196, i16 187, i16 353, i16 332, i16 313, i16 298, i16 283, i16 531, i16 381, i16 17, i16 427, i16 212, i16 208, i16 205, i16 201, i16 193, i16 186, i16 177, i16 169, i16 320, i16 303, i16 286, i16 268, i16 514, i16 377, i16 16, i16 335, i16 199, i16 197, i16 191, i16 189, i16 181, i16 174, i16 333, i16 321, i16 305, i16 289, i16 275, i16 521, i16 379, i16 371, i16 11, i16 668, i16 184, i16 183, i16 179, i16 175, i16 344, i16 331, i16 314, i16 304, i16 290, i16 277, i16 530, i16 383, i16 373, i16 366, i16 10, i16 652, i16 346, i16 171, i16 168, i16 164, i16 318, i16 309, i16 299, i16 287, i16 276, i16 263, i16 513, i16 375, i16 368, i16 362, i16 6, i16 648, i16 322, i16 316, i16 312, i16 307, i16 302, i16 292, i16 284, i16 269, i16 261, i16 512, i16 376, i16 370, i16 364, i16 359, i16 4, i16 620, i16 300, i16 296, i16 294, i16 288, i16 282, i16 273, i16 266, i16 515, i16 380, i16 374, i16 369, i16 365, i16 361, i16 357, i16 2, i16 1033, i16 280, i16 278, i16 274, i16 267, i16 264, i16 259, i16 382, i16 378, i16 372, i16 367, i16 363, i16 360, i16 358, i16 356, i16 0, i16 43, i16 20, i16 19, i16 17, i16 15, i16 13, i16 11, i16 9, i16 7, i16 6, i16 4, i16 7, i16 5, i16 3, i16 1, i16 3], align 16
@mpegaudio_tableinit.exp2_lut = internal constant [4 x double] [double 1.000000e+00, double 0x3FF306FE0A31B715, double 0x3FF6A09E667F3BCD, double 0x3FFAE89F995AD3AD], align 16
@mpegaudio_tableinit.pow43_lut = internal global [16 x double] zeroinitializer, align 16
@table_4_3_value = internal global [32828 x i32] zeroinitializer, align 16
@table_4_3_exp = internal global [32828 x i8] zeroinitializer, align 16
@expval_table_fixed = internal global [512 x [16 x i32]] zeroinitializer, align 16
@expval_table_float = internal global [512 x [16 x float]] zeroinitializer, align 16
@exp_table_fixed = internal global [512 x i32] zeroinitializer, align 16
@exp_table_float = internal global [512 x float] zeroinitializer, align 16
@division_tab3 = internal global [64 x i16] zeroinitializer, align 16
@division_tab5 = internal global [256 x i16] zeroinitializer, align 16
@division_tab9 = internal global [2048 x i16] zeroinitializer, align 16
@.str.18 = private unnamed_addr constant [4 x i8] c"TAG\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"discarding ID3 tag\0A\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"Header missing\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"incomplete frame\0A\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"incorrect frame size - multiple frames in buffer?\0A\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"Error while decoding MPEG audio frame.\0A\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"invalid old backstep %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"invalid new backstep %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"s->frame\00", align 1
@ff_mpa_sblimit_table = external constant [5 x i32], align 16
@ff_mpa_alloc_tables = external constant [5 x i8*], align 16
@scale_factor_mult2 = internal constant [3 x [3 x i32]] [[3 x i32] [i32 11184811, i32 8877390, i32 7045989], [3 x i32] [i32 6710886, i32 5326434, i32 4227594], [3 x i32] [i32 3728270, i32 2959130, i32 2348663]], align 16
@.str.27 = private unnamed_addr constant [20 x i8] c"big_values too big\0A\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"invalid block type\0A\00", align 1
@slen_table = internal constant [2 x [16 x i8]] [[16 x i8] c"\00\00\00\00\03\01\01\01\02\02\02\03\03\03\04\04", [16 x i8] c"\00\01\02\03\00\01\02\03\01\02\03\01\02\03\02\03"], align 16
@lsf_nsf_table = internal constant [6 x [3 x [4 x i8]]] [[3 x [4 x i8]] [[4 x i8] c"\06\05\05\05", [4 x i8] c"\09\09\09\09", [4 x i8] c"\06\09\09\09"], [3 x [4 x i8]] [[4 x i8] c"\06\05\07\03", [4 x i8] c"\09\09\0C\06", [4 x i8] c"\06\09\0C\06"], [3 x [4 x i8]] [[4 x i8] c"\0B\0A\00\00", [4 x i8] c"\12\12\00\00", [4 x i8] c"\0F\12\00\00"], [3 x [4 x i8]] [[4 x i8] c"\07\07\07\00", [4 x i8] c"\0C\0C\0C\00", [4 x i8] c"\06\0F\0C\00"], [3 x [4 x i8]] [[4 x i8] c"\06\06\06\03", [4 x i8] c"\0C\09\09\06", [4 x i8] c"\06\0C\09\06"], [3 x [4 x i8]] [[4 x i8] c"\08\08\05\00", [4 x i8] c"\0F\0C\09\00", [4 x i8] c"\06\12\09\00"]], align 16
@.str.29 = private unnamed_addr constant [21 x i8] c"switch point in 8khz\00", align 1
@ff_mdct_win_float = external global [8 x [40 x float]], align 16
@mpa_pretab = internal constant [2 x [22 x i8]] [[22 x i8] zeroinitializer, [22 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\02\02\03\03\03\02\00"], align 16
@band_size_short = internal constant [9 x [13 x i8]] [[13 x i8] c"\04\04\04\04\06\08\0A\0C\0E\12\16\1E8", [13 x i8] c"\04\04\04\04\06\06\0A\0C\0E\10\14\1AB", [13 x i8] c"\04\04\04\04\06\08\0C\10\14\1A\22*\0C", [13 x i8] c"\04\04\04\06\06\08\0A\0E\12\1A *\12", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18 ,\0C", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18\1E(\12", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18\1E(\12", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18\1E(\12", [13 x i8] c"\08\08\08\0C\10\14\18\1C$\02\02\02\1A"], align 16
@mpa_huff_data = internal constant [32 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] zeroinitializer, [2 x i8] c"\04\00", [2 x i8] c"\05\00", [2 x i8] c"\06\00", [2 x i8] c"\07\00", [2 x i8] c"\08\00", [2 x i8] c"\09\00", [2 x i8] c"\0A\00", [2 x i8] c"\0B\00", [2 x i8] c"\0C\00", [2 x i8] zeroinitializer, [2 x i8] c"\0D\00", [2 x i8] c"\0E\01", [2 x i8] c"\0E\02", [2 x i8] c"\0E\03", [2 x i8] c"\0E\04", [2 x i8] c"\0E\06", [2 x i8] c"\0E\08", [2 x i8] c"\0E\0A", [2 x i8] c"\0E\0D", [2 x i8] c"\0F\04", [2 x i8] c"\0F\05", [2 x i8] c"\0F\06", [2 x i8] c"\0F\07", [2 x i8] c"\0F\08", [2 x i8] c"\0F\09", [2 x i8] c"\0F\0B", [2 x i8] c"\0F\0D"], align 16
@.str.30 = private unnamed_addr constant [35 x i8] c"overread, skip %d enddists: %d %d\0A\00", align 1
@huffman_decode.idxtab = internal constant [16 x i32] [i32 3, i32 3, i32 2, i32 2, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@.str.31 = private unnamed_addr constant [14 x i8] c"bits_left=%d\0A\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"Packet is too small\0A\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Invalid frame header\0A\00", align 1
@.str.34 = private unnamed_addr constant [39 x i8] c"Codec extradata missing or too short.\0A\00", align 1
@.str.35 = private unnamed_addr constant [32 x i8] c"Invalid channel config number.\0A\00", align 1
@mp3Frames = internal constant [8 x i8] c"\00\01\01\02\03\03\04\05", align 1
@chan_offset = internal constant [8 x [5 x i8]] [[5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] c"\02\00\00\00\00", [5 x i8] c"\02\00\03\00\00", [5 x i8] c"\02\00\03\00\00", [5 x i8] c"\02\00\04\03\00", [5 x i8] c"\02\00\06\04\03"], align 16
@ff_mpeg4audio_channels = external constant [8 x i8], align 1
@chan_layout = internal constant [8 x i16] [i16 0, i16 4, i16 3, i16 7, i16 263, i16 1543, i16 1551, i16 1599], align 16
@.str.36 = private unnamed_addr constant [37 x i8] c"Frame size smaller than header size\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"Bad header, discard block\0A\00", align 1
@.str.38 = private unnamed_addr constant [49 x i8] c"frame channel count exceeds codec channel count\0A\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"failed to decode channel %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"failed to decode all channels\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1676 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MPADecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2030, metadata !2031), !dbg !2032
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s, metadata !2033, metadata !2031), !dbg !2034
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2035
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2036
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2036
  %2 = bitcast i8* %1 to %struct.MPADecodeContext*, !dbg !2035
  store %struct.MPADecodeContext* %2, %struct.MPADecodeContext** %s, align 8, !dbg !2034
  %3 = load i32, i32* @decode_init.initialized_tables, align 4, !dbg !2037
  %tobool = icmp ne i32 %3, 0, !dbg !2037
  br i1 %tobool, label %if.end, label %if.then, !dbg !2039

if.then:                                          ; preds = %entry
  call void @decode_init_static(), !dbg !2040
  store i32 1, i32* @decode_init.initialized_tables, align 4, !dbg !2042
  br label %if.end, !dbg !2043

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2044
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2045
  %avctx1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 26, !dbg !2046
  store %struct.AVCodecContext* %4, %struct.AVCodecContext** %avctx1, align 16, !dbg !2047
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2048
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 13, !dbg !2049
  %7 = load i32, i32* %flags, align 4, !dbg !2049
  %and = and i32 %7, 8388608, !dbg !2050
  %call = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and), !dbg !2051
  %8 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2052
  %fdsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %8, i32 0, i32 28, !dbg !2053
  store %struct.AVFloatDSPContext* %call, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2054
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2055
  %fdsp2 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 28, !dbg !2057
  %10 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp2, align 8, !dbg !2057
  %tobool3 = icmp ne %struct.AVFloatDSPContext* %10, null, !dbg !2055
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !2058

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !2059
  br label %return, !dbg !2059

if.end5:                                          ; preds = %if.end
  %11 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2060
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %11, i32 0, i32 27, !dbg !2061
  call void @ff_mpadsp_init(%struct.MPADSPContext* %mpadsp), !dbg !2062
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2063
  %request_sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 92, !dbg !2065
  %13 = load i32, i32* %request_sample_fmt, align 4, !dbg !2065
  %cmp = icmp eq i32 %13, 3, !dbg !2066
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2067

land.lhs.true:                                    ; preds = %if.end5
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2068
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 4, !dbg !2069
  %15 = load i32, i32* %codec_id, align 8, !dbg !2069
  %cmp6 = icmp ne i32 %15, 86030, !dbg !2070
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !2071

if.then7:                                         ; preds = %land.lhs.true
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2073
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 84, !dbg !2074
  store i32 3, i32* %sample_fmt, align 8, !dbg !2075
  br label %if.end9, !dbg !2073

if.else:                                          ; preds = %land.lhs.true, %if.end5
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2076
  %sample_fmt8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 84, !dbg !2077
  store i32 8, i32* %sample_fmt8, align 8, !dbg !2078
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2079
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 135, !dbg !2080
  %19 = load i32, i32* %err_recognition, align 8, !dbg !2080
  %20 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2081
  %err_recognition10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %20, i32 0, i32 25, !dbg !2082
  store i32 %19, i32* %err_recognition10, align 8, !dbg !2083
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2084
  %codec_id11 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i32 0, i32 4, !dbg !2086
  %22 = load i32, i32* %codec_id11, align 8, !dbg !2086
  %cmp12 = icmp eq i32 %22, 86029, !dbg !2087
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2088

if.then13:                                        ; preds = %if.end9
  %23 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2089
  %adu_mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %23, i32 0, i32 23, !dbg !2090
  store i32 1, i32* %adu_mode, align 32, !dbg !2091
  br label %if.end14, !dbg !2089

if.end14:                                         ; preds = %if.then13, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !2092
  br label %return, !dbg !2092

return:                                           ; preds = %if.end14, %if.then4
  %24 = load i32, i32* %retval, align 4, !dbg !2093
  ret i32 %24, !dbg !2093
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2094 {
entry:
  %x.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i53, metadata !2095, metadata !2031), !dbg !2100
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2095, metadata !2031), !dbg !2103
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.MPADecodeContext*, align 8
  %header = alloca i32, align 4
  %ret = alloca i32, align 4
  %skipped = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2105, metadata !2031), !dbg !2106
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2107, metadata !2031), !dbg !2108
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2109, metadata !2031), !dbg !2110
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2111, metadata !2031), !dbg !2112
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2113, metadata !2031), !dbg !2114
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2115
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !2116
  %1 = load i8*, i8** %data1, align 8, !dbg !2116
  store i8* %1, i8** %buf, align 8, !dbg !2114
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2117, metadata !2031), !dbg !2118
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2119
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !2120
  %3 = load i32, i32* %size, align 8, !dbg !2120
  store i32 %3, i32* %buf_size, align 4, !dbg !2118
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s, metadata !2121, metadata !2031), !dbg !2122
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2123
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !2124
  %5 = load i8*, i8** %priv_data, align 8, !dbg !2124
  %6 = bitcast i8* %5 to %struct.MPADecodeContext*, !dbg !2123
  store %struct.MPADecodeContext* %6, %struct.MPADecodeContext** %s, align 8, !dbg !2122
  call void @llvm.dbg.declare(metadata i32* %header, metadata !2125, metadata !2031), !dbg !2126
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2127, metadata !2031), !dbg !2128
  call void @llvm.dbg.declare(metadata i32* %skipped, metadata !2129, metadata !2031), !dbg !2130
  store i32 0, i32* %skipped, align 4, !dbg !2130
  br label %while.cond, !dbg !2131

while.cond:                                       ; preds = %while.body, %entry
  %7 = load i32, i32* %buf_size, align 4, !dbg !2132
  %tobool = icmp ne i32 %7, 0, !dbg !2132
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2134

land.rhs:                                         ; preds = %while.cond
  %8 = load i8*, i8** %buf, align 8, !dbg !2135
  %9 = load i8, i8* %8, align 1, !dbg !2137
  %tobool2 = icmp ne i8 %9, 0, !dbg !2138
  %lnot = xor i1 %tobool2, true, !dbg !2138
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %10, label %while.body, label %while.end, !dbg !2139

while.body:                                       ; preds = %land.end
  %11 = load i8*, i8** %buf, align 8, !dbg !2141
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !2141
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !2141
  %12 = load i32, i32* %buf_size, align 4, !dbg !2143
  %dec = add nsw i32 %12, -1, !dbg !2143
  store i32 %dec, i32* %buf_size, align 4, !dbg !2143
  %13 = load i32, i32* %skipped, align 4, !dbg !2144
  %inc = add nsw i32 %13, 1, !dbg !2144
  store i32 %inc, i32* %skipped, align 4, !dbg !2144
  br label %while.cond, !dbg !2145, !llvm.loop !2147

while.end:                                        ; preds = %land.end
  %14 = load i32, i32* %buf_size, align 4, !dbg !2148
  %cmp = icmp slt i32 %14, 4, !dbg !2150
  br i1 %cmp, label %if.then, label %if.end, !dbg !2151

if.then:                                          ; preds = %while.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !2152
  br label %return, !dbg !2152

if.end:                                           ; preds = %while.end
  %15 = load i8*, i8** %buf, align 8, !dbg !2153
  %16 = bitcast i8* %15 to %union.unaligned_32*, !dbg !2154
  %l = bitcast %union.unaligned_32* %16 to i32*, !dbg !2154
  %17 = load i32, i32* %l, align 1, !dbg !2154
  store i32 %17, i32* %x.addr.i, align 4, !dbg !2155
  %18 = load i32, i32* %x.addr.i, align 4, !dbg !2156
  %shl.i = shl i32 %18, 8, !dbg !2157
  %and.i = and i32 %shl.i, 65280, !dbg !2158
  %19 = load i32, i32* %x.addr.i, align 4, !dbg !2159
  %shr.i = lshr i32 %19, 8, !dbg !2160
  %and1.i = and i32 %shr.i, 255, !dbg !2161
  %or.i = or i32 %and.i, %and1.i, !dbg !2162
  %shl2.i = shl i32 %or.i, 16, !dbg !2163
  %20 = load i32, i32* %x.addr.i, align 4, !dbg !2164
  %shr3.i = lshr i32 %20, 16, !dbg !2165
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2166
  %and5.i = and i32 %shl4.i, 65280, !dbg !2167
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !2168
  %shr6.i = lshr i32 %21, 16, !dbg !2169
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2170
  %and8.i = and i32 %shr7.i, 255, !dbg !2171
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2172
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2173
  store i32 %or10.i, i32* %header, align 4, !dbg !2174
  %22 = load i32, i32* %header, align 4, !dbg !2175
  %shr = lshr i32 %22, 8, !dbg !2176
  %23 = load i32, i32* bitcast ([4 x i8]* @.str.18 to i32*), align 1, !dbg !2177
  store i32 %23, i32* %x.addr.i53, align 4, !dbg !2178
  %24 = load i32, i32* %x.addr.i53, align 4, !dbg !2179
  %shl.i54 = shl i32 %24, 8, !dbg !2180
  %and.i55 = and i32 %shl.i54, 65280, !dbg !2181
  %25 = load i32, i32* %x.addr.i53, align 4, !dbg !2182
  %shr.i56 = lshr i32 %25, 8, !dbg !2183
  %and1.i57 = and i32 %shr.i56, 255, !dbg !2184
  %or.i58 = or i32 %and.i55, %and1.i57, !dbg !2185
  %shl2.i59 = shl i32 %or.i58, 16, !dbg !2186
  %26 = load i32, i32* %x.addr.i53, align 4, !dbg !2187
  %shr3.i60 = lshr i32 %26, 16, !dbg !2188
  %shl4.i61 = shl i32 %shr3.i60, 8, !dbg !2189
  %and5.i62 = and i32 %shl4.i61, 65280, !dbg !2190
  %27 = load i32, i32* %x.addr.i53, align 4, !dbg !2191
  %shr6.i63 = lshr i32 %27, 16, !dbg !2192
  %shr7.i64 = lshr i32 %shr6.i63, 8, !dbg !2193
  %and8.i65 = and i32 %shr7.i64, 255, !dbg !2194
  %or9.i66 = or i32 %and5.i62, %and8.i65, !dbg !2195
  %or10.i67 = or i32 %shl2.i59, %or9.i66, !dbg !2196
  %shr4 = lshr i32 %or10.i67, 8, !dbg !2197
  %cmp5 = icmp eq i32 %shr, %shr4, !dbg !2198
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2199

if.then6:                                         ; preds = %if.end
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2200
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !2200
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0)), !dbg !2202
  %30 = load i32, i32* %buf_size, align 4, !dbg !2203
  %31 = load i32, i32* %skipped, align 4, !dbg !2204
  %add = add nsw i32 %30, %31, !dbg !2205
  store i32 %add, i32* %retval, align 4, !dbg !2206
  br label %return, !dbg !2206

if.end7:                                          ; preds = %if.end
  %32 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2207
  %33 = bitcast %struct.MPADecodeContext* %32 to %struct.MPADecodeHeader*, !dbg !2208
  %34 = load i32, i32* %header, align 4, !dbg !2209
  %call8 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* %33, i32 %34), !dbg !2210
  store i32 %call8, i32* %ret, align 4, !dbg !2211
  %35 = load i32, i32* %ret, align 4, !dbg !2212
  %cmp9 = icmp slt i32 %35, 0, !dbg !2214
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !2215

if.then10:                                        ; preds = %if.end7
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2216
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !2216
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !2218
  store i32 -1094995529, i32* %retval, align 4, !dbg !2219
  br label %return, !dbg !2219

if.else:                                          ; preds = %if.end7
  %38 = load i32, i32* %ret, align 4, !dbg !2220
  %cmp11 = icmp eq i32 %38, 1, !dbg !2222
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2223

if.then12:                                        ; preds = %if.else
  %39 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2224
  %frame_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %39, i32 0, i32 0, !dbg !2226
  store i32 -1, i32* %frame_size, align 32, !dbg !2227
  store i32 -1094995529, i32* %retval, align 4, !dbg !2228
  br label %return, !dbg !2228

if.end13:                                         ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13
  %40 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2229
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %40, i32 0, i32 6, !dbg !2230
  %41 = load i32, i32* %nb_channels, align 8, !dbg !2230
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2231
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 83, !dbg !2232
  store i32 %41, i32* %channels, align 4, !dbg !2233
  %43 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2234
  %nb_channels15 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %43, i32 0, i32 6, !dbg !2235
  %44 = load i32, i32* %nb_channels15, align 8, !dbg !2235
  %cmp16 = icmp eq i32 %44, 1, !dbg !2236
  %cond = select i1 %cmp16, i32 4, i32 3, !dbg !2234
  %conv = sext i32 %cond to i64, !dbg !2234
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2237
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 89, !dbg !2238
  store i64 %conv, i64* %channel_layout, align 8, !dbg !2239
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2240
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 9, !dbg !2242
  %47 = load i64, i64* %bit_rate, align 8, !dbg !2242
  %tobool17 = icmp ne i64 %47, 0, !dbg !2240
  br i1 %tobool17, label %if.end22, label %if.then18, !dbg !2243

if.then18:                                        ; preds = %if.end14
  %48 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2244
  %bit_rate19 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %48, i32 0, i32 5, !dbg !2245
  %49 = load i32, i32* %bit_rate19, align 4, !dbg !2245
  %conv20 = sext i32 %49 to i64, !dbg !2244
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2246
  %bit_rate21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 9, !dbg !2247
  store i64 %conv20, i64* %bit_rate21, align 8, !dbg !2248
  br label %if.end22, !dbg !2246

if.end22:                                         ; preds = %if.then18, %if.end14
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2249
  %frame_size23 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %51, i32 0, i32 0, !dbg !2251
  %52 = load i32, i32* %frame_size23, align 32, !dbg !2251
  %cmp24 = icmp sle i32 %52, 0, !dbg !2252
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !2253

if.then26:                                        ; preds = %if.end22
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2254
  %54 = bitcast %struct.AVCodecContext* %53 to i8*, !dbg !2254
  call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i32 0, i32 0)), !dbg !2256
  store i32 -1094995529, i32* %retval, align 4, !dbg !2257
  br label %return, !dbg !2257

if.else27:                                        ; preds = %if.end22
  %55 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2258
  %frame_size28 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %55, i32 0, i32 0, !dbg !2260
  %56 = load i32, i32* %frame_size28, align 32, !dbg !2260
  %57 = load i32, i32* %buf_size, align 4, !dbg !2261
  %cmp29 = icmp slt i32 %56, %57, !dbg !2262
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !2263

if.then31:                                        ; preds = %if.else27
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2264
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !2264
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 48, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i32 0, i32 0)), !dbg !2266
  %60 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2267
  %frame_size32 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %60, i32 0, i32 0, !dbg !2268
  %61 = load i32, i32* %frame_size32, align 32, !dbg !2268
  store i32 %61, i32* %buf_size, align 4, !dbg !2269
  br label %if.end33, !dbg !2270

if.end33:                                         ; preds = %if.then31, %if.else27
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  %62 = load i8*, i8** %data.addr, align 8, !dbg !2271
  %63 = bitcast i8* %62 to %struct.AVFrame*, !dbg !2271
  %64 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2272
  %frame = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %64, i32 0, i32 29, !dbg !2273
  store %struct.AVFrame* %63, %struct.AVFrame** %frame, align 16, !dbg !2274
  %65 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2275
  %66 = load i8*, i8** %buf, align 8, !dbg !2276
  %67 = load i32, i32* %buf_size, align 4, !dbg !2277
  %call35 = call i32 @mp_decode_frame(%struct.MPADecodeContext* %65, float** null, i8* %66, i32 %67), !dbg !2278
  store i32 %call35, i32* %ret, align 4, !dbg !2279
  %68 = load i32, i32* %ret, align 4, !dbg !2280
  %cmp36 = icmp sge i32 %68, 0, !dbg !2282
  br i1 %cmp36, label %if.then38, label %if.else42, !dbg !2283

if.then38:                                        ; preds = %if.end34
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2284
  %frame_size39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 85, !dbg !2286
  %70 = load i32, i32* %frame_size39, align 4, !dbg !2286
  %71 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2287
  %frame40 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %71, i32 0, i32 29, !dbg !2288
  %72 = load %struct.AVFrame*, %struct.AVFrame** %frame40, align 16, !dbg !2288
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %72, i32 0, i32 5, !dbg !2289
  store i32 %70, i32* %nb_samples, align 8, !dbg !2290
  %73 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2291
  store i32 1, i32* %73, align 4, !dbg !2292
  %74 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2293
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %74, i32 0, i32 3, !dbg !2294
  %75 = load i32, i32* %sample_rate, align 4, !dbg !2294
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2295
  %sample_rate41 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 82, !dbg !2296
  store i32 %75, i32* %sample_rate41, align 8, !dbg !2297
  br label %if.end50, !dbg !2298

if.else42:                                        ; preds = %if.end34
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2299
  %78 = bitcast %struct.AVCodecContext* %77 to i8*, !dbg !2299
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i32 0, i32 0)), !dbg !2301
  %79 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2302
  store i32 0, i32* %79, align 4, !dbg !2303
  %80 = load i32, i32* %buf_size, align 4, !dbg !2304
  %81 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2306
  %size43 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %81, i32 0, i32 4, !dbg !2307
  %82 = load i32, i32* %size43, align 8, !dbg !2307
  %cmp44 = icmp eq i32 %80, %82, !dbg !2308
  br i1 %cmp44, label %if.then48, label %lor.lhs.false, !dbg !2309

lor.lhs.false:                                    ; preds = %if.else42
  %83 = load i32, i32* %ret, align 4, !dbg !2310
  %cmp46 = icmp ne i32 %83, -1094995529, !dbg !2312
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !2313

if.then48:                                        ; preds = %lor.lhs.false, %if.else42
  %84 = load i32, i32* %ret, align 4, !dbg !2314
  store i32 %84, i32* %retval, align 4, !dbg !2315
  br label %return, !dbg !2315

if.end49:                                         ; preds = %lor.lhs.false
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then38
  %85 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2316
  %frame_size51 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %85, i32 0, i32 0, !dbg !2317
  store i32 0, i32* %frame_size51, align 32, !dbg !2318
  %86 = load i32, i32* %buf_size, align 4, !dbg !2319
  %87 = load i32, i32* %skipped, align 4, !dbg !2320
  %add52 = add nsw i32 %86, %87, !dbg !2321
  store i32 %add52, i32* %retval, align 4, !dbg !2322
  br label %return, !dbg !2322

return:                                           ; preds = %if.end50, %if.then48, %if.then26, %if.then12, %if.then10, %if.then6, %if.then
  %88 = load i32, i32* %retval, align 4, !dbg !2323
  ret i32 %88, !dbg !2323
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2324 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MPADecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2325, metadata !2031), !dbg !2326
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s, metadata !2327, metadata !2031), !dbg !2328
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2329
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2330
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2330
  %2 = bitcast i8* %1 to %struct.MPADecodeContext*, !dbg !2329
  store %struct.MPADecodeContext* %2, %struct.MPADecodeContext** %s, align 8, !dbg !2328
  %3 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2331
  %fdsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %3, i32 0, i32 28, !dbg !2332
  %4 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !2333
  call void @av_freep(i8* %4), !dbg !2334
  ret i32 0, !dbg !2335
}

; Function Attrs: nounwind uwtable
define internal void @flush(%struct.AVCodecContext* %avctx) #1 !dbg !2336 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2337, metadata !2031), !dbg !2338
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2339
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2340
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2340
  %2 = bitcast i8* %1 to %struct.MPADecodeContext*, !dbg !2339
  call void @mp_flush(%struct.MPADecodeContext* %2), !dbg !2341
  ret void, !dbg !2342
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame_adu(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2343 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2095, metadata !2031), !dbg !2344
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.MPADecodeContext*, align 8
  %header = alloca i32, align 4
  %len = alloca i32, align 4
  %ret = alloca i32, align 4
  %out_size = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2346, metadata !2031), !dbg !2347
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2348, metadata !2031), !dbg !2349
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2350, metadata !2031), !dbg !2351
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2352, metadata !2031), !dbg !2353
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2354, metadata !2031), !dbg !2355
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2356
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !2357
  %1 = load i8*, i8** %data1, align 8, !dbg !2357
  store i8* %1, i8** %buf, align 8, !dbg !2355
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2358, metadata !2031), !dbg !2359
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2360
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !2361
  %3 = load i32, i32* %size, align 8, !dbg !2361
  store i32 %3, i32* %buf_size, align 4, !dbg !2359
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s, metadata !2362, metadata !2031), !dbg !2363
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2364
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !2365
  %5 = load i8*, i8** %priv_data, align 8, !dbg !2365
  %6 = bitcast i8* %5 to %struct.MPADecodeContext*, !dbg !2364
  store %struct.MPADecodeContext* %6, %struct.MPADecodeContext** %s, align 8, !dbg !2363
  call void @llvm.dbg.declare(metadata i32* %header, metadata !2366, metadata !2031), !dbg !2367
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2368, metadata !2031), !dbg !2369
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2370, metadata !2031), !dbg !2371
  call void @llvm.dbg.declare(metadata i32* %out_size, metadata !2372, metadata !2031), !dbg !2373
  %7 = load i32, i32* %buf_size, align 4, !dbg !2374
  store i32 %7, i32* %len, align 4, !dbg !2375
  %8 = load i32, i32* %buf_size, align 4, !dbg !2376
  %cmp = icmp slt i32 %8, 4, !dbg !2378
  br i1 %cmp, label %if.then, label %if.end, !dbg !2379

if.then:                                          ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2380
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !2380
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0)), !dbg !2382
  store i32 -1094995529, i32* %retval, align 4, !dbg !2383
  br label %return, !dbg !2383

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %len, align 4, !dbg !2384
  %cmp2 = icmp sgt i32 %11, 1792, !dbg !2386
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2387

if.then3:                                         ; preds = %if.end
  store i32 1792, i32* %len, align 4, !dbg !2388
  br label %if.end4, !dbg !2389

if.end4:                                          ; preds = %if.then3, %if.end
  %12 = load i8*, i8** %buf, align 8, !dbg !2390
  %13 = bitcast i8* %12 to %union.unaligned_32*, !dbg !2391
  %l = bitcast %union.unaligned_32* %13 to i32*, !dbg !2391
  %14 = load i32, i32* %l, align 1, !dbg !2391
  store i32 %14, i32* %x.addr.i, align 4, !dbg !2392
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !2393
  %shl.i = shl i32 %15, 8, !dbg !2394
  %and.i = and i32 %shl.i, 65280, !dbg !2395
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !2396
  %shr.i = lshr i32 %16, 8, !dbg !2397
  %and1.i = and i32 %shr.i, 255, !dbg !2398
  %or.i = or i32 %and.i, %and1.i, !dbg !2399
  %shl2.i = shl i32 %or.i, 16, !dbg !2400
  %17 = load i32, i32* %x.addr.i, align 4, !dbg !2401
  %shr3.i = lshr i32 %17, 16, !dbg !2402
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2403
  %and5.i = and i32 %shl4.i, 65280, !dbg !2404
  %18 = load i32, i32* %x.addr.i, align 4, !dbg !2405
  %shr6.i = lshr i32 %18, 16, !dbg !2406
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2407
  %and8.i = and i32 %shr7.i, 255, !dbg !2408
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2409
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2410
  %or = or i32 %or10.i, -2097152, !dbg !2411
  store i32 %or, i32* %header, align 4, !dbg !2412
  %19 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2413
  %20 = bitcast %struct.MPADecodeContext* %19 to %struct.MPADecodeHeader*, !dbg !2414
  %21 = load i32, i32* %header, align 4, !dbg !2415
  %call5 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* %20, i32 %21), !dbg !2416
  store i32 %call5, i32* %ret, align 4, !dbg !2417
  %22 = load i32, i32* %ret, align 4, !dbg !2418
  %cmp6 = icmp slt i32 %22, 0, !dbg !2420
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2421

if.then7:                                         ; preds = %if.end4
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2422
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !2422
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0)), !dbg !2424
  %25 = load i32, i32* %ret, align 4, !dbg !2425
  store i32 %25, i32* %retval, align 4, !dbg !2426
  br label %return, !dbg !2426

if.end8:                                          ; preds = %if.end4
  %26 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2427
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %26, i32 0, i32 3, !dbg !2428
  %27 = load i32, i32* %sample_rate, align 4, !dbg !2428
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2429
  %sample_rate9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 82, !dbg !2430
  store i32 %27, i32* %sample_rate9, align 8, !dbg !2431
  %29 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2432
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %29, i32 0, i32 6, !dbg !2433
  %30 = load i32, i32* %nb_channels, align 8, !dbg !2433
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2434
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 83, !dbg !2435
  store i32 %30, i32* %channels, align 4, !dbg !2436
  %32 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2437
  %nb_channels10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %32, i32 0, i32 6, !dbg !2438
  %33 = load i32, i32* %nb_channels10, align 8, !dbg !2438
  %cmp11 = icmp eq i32 %33, 1, !dbg !2439
  %cond = select i1 %cmp11, i32 4, i32 3, !dbg !2437
  %conv = sext i32 %cond to i64, !dbg !2437
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2440
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 89, !dbg !2441
  store i64 %conv, i64* %channel_layout, align 8, !dbg !2442
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2443
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 9, !dbg !2445
  %36 = load i64, i64* %bit_rate, align 8, !dbg !2445
  %tobool = icmp ne i64 %36, 0, !dbg !2443
  br i1 %tobool, label %if.end16, label %if.then12, !dbg !2446

if.then12:                                        ; preds = %if.end8
  %37 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2447
  %bit_rate13 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %37, i32 0, i32 5, !dbg !2448
  %38 = load i32, i32* %bit_rate13, align 4, !dbg !2448
  %conv14 = sext i32 %38 to i64, !dbg !2447
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2449
  %bit_rate15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 9, !dbg !2450
  store i64 %conv14, i64* %bit_rate15, align 8, !dbg !2451
  br label %if.end16, !dbg !2449

if.end16:                                         ; preds = %if.then12, %if.end8
  %40 = load i32, i32* %len, align 4, !dbg !2452
  %41 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2453
  %frame_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %41, i32 0, i32 0, !dbg !2454
  store i32 %40, i32* %frame_size, align 32, !dbg !2455
  %42 = load i8*, i8** %data.addr, align 8, !dbg !2456
  %43 = bitcast i8* %42 to %struct.AVFrame*, !dbg !2456
  %44 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2457
  %frame = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %44, i32 0, i32 29, !dbg !2458
  store %struct.AVFrame* %43, %struct.AVFrame** %frame, align 16, !dbg !2459
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2460
  %46 = load i8*, i8** %buf, align 8, !dbg !2461
  %47 = load i32, i32* %buf_size, align 4, !dbg !2462
  %call17 = call i32 @mp_decode_frame(%struct.MPADecodeContext* %45, float** null, i8* %46, i32 %47), !dbg !2463
  store i32 %call17, i32* %ret, align 4, !dbg !2464
  %48 = load i32, i32* %ret, align 4, !dbg !2465
  %cmp18 = icmp slt i32 %48, 0, !dbg !2467
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !2468

if.then20:                                        ; preds = %if.end16
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2469
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !2469
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i32 0, i32 0)), !dbg !2471
  %51 = load i32, i32* %ret, align 4, !dbg !2472
  store i32 %51, i32* %retval, align 4, !dbg !2473
  br label %return, !dbg !2473

if.end21:                                         ; preds = %if.end16
  %52 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2474
  store i32 1, i32* %52, align 4, !dbg !2475
  %53 = load i32, i32* %buf_size, align 4, !dbg !2476
  store i32 %53, i32* %retval, align 4, !dbg !2477
  br label %return, !dbg !2477

return:                                           ; preds = %if.end21, %if.then20, %if.then7, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !2478
  ret i32 %54, !dbg !2478
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init_mp3on4(%struct.AVCodecContext* %avctx) #0 !dbg !2479 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  %cfg = alloca %struct.MPEG4AudioConfig, align 4
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2480, metadata !2031), !dbg !2481
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !2482, metadata !2031), !dbg !2493
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2494
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2495
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2495
  %2 = bitcast i8* %1 to %struct.MP3On4DecodeContext*, !dbg !2494
  store %struct.MP3On4DecodeContext* %2, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2493
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig* %cfg, metadata !2496, metadata !2031), !dbg !2513
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2514, metadata !2031), !dbg !2515
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2516
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 16, !dbg !2518
  %4 = load i32, i32* %extradata_size, align 8, !dbg !2518
  %cmp = icmp slt i32 %4, 2, !dbg !2519
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2520

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2521
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 15, !dbg !2523
  %6 = load i8*, i8** %extradata, align 8, !dbg !2523
  %tobool = icmp ne i8* %6, null, !dbg !2521
  br i1 %tobool, label %if.end, label %if.then, !dbg !2524

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2525
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !2525
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.34, i32 0, i32 0)), !dbg !2527
  store i32 -1094995529, i32* %retval, align 4, !dbg !2528
  br label %return, !dbg !2528

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2529
  %extradata1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 15, !dbg !2530
  %10 = load i8*, i8** %extradata1, align 8, !dbg !2530
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2531
  %extradata_size2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 16, !dbg !2532
  %12 = load i32, i32* %extradata_size2, align 8, !dbg !2532
  %mul = mul nsw i32 %12, 8, !dbg !2533
  %call = call i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig* %cfg, i8* %10, i32 %mul, i32 1), !dbg !2534
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2535
  %13 = load i32, i32* %chan_config, align 4, !dbg !2535
  %tobool3 = icmp ne i32 %13, 0, !dbg !2537
  br i1 %tobool3, label %lor.lhs.false4, label %if.then7, !dbg !2538

lor.lhs.false4:                                   ; preds = %if.end
  %chan_config5 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2539
  %14 = load i32, i32* %chan_config5, align 4, !dbg !2539
  %cmp6 = icmp sgt i32 %14, 7, !dbg !2541
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2542

if.then7:                                         ; preds = %lor.lhs.false4, %if.end
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2543
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !2543
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i32 0, i32 0)), !dbg !2545
  store i32 -1094995529, i32* %retval, align 4, !dbg !2546
  br label %return, !dbg !2546

if.end8:                                          ; preds = %lor.lhs.false4
  %chan_config9 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2547
  %17 = load i32, i32* %chan_config9, align 4, !dbg !2547
  %idxprom = sext i32 %17 to i64, !dbg !2548
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* @mp3Frames, i64 0, i64 %idxprom, !dbg !2548
  %18 = load i8, i8* %arrayidx, align 1, !dbg !2548
  %conv = zext i8 %18 to i32, !dbg !2548
  %19 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2549
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %19, i32 0, i32 0, !dbg !2550
  store i32 %conv, i32* %frames, align 8, !dbg !2551
  %chan_config10 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2552
  %20 = load i32, i32* %chan_config10, align 4, !dbg !2552
  %idxprom11 = sext i32 %20 to i64, !dbg !2553
  %arrayidx12 = getelementptr inbounds [8 x [5 x i8]], [8 x [5 x i8]]* @chan_offset, i64 0, i64 %idxprom11, !dbg !2553
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx12, i32 0, i32 0, !dbg !2553
  %21 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2554
  %coff = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %21, i32 0, i32 2, !dbg !2555
  store i8* %arraydecay, i8** %coff, align 8, !dbg !2556
  %chan_config13 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2557
  %22 = load i32, i32* %chan_config13, align 4, !dbg !2557
  %idxprom14 = sext i32 %22 to i64, !dbg !2558
  %arrayidx15 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_mpeg4audio_channels, i64 0, i64 %idxprom14, !dbg !2558
  %23 = load i8, i8* %arrayidx15, align 1, !dbg !2558
  %conv16 = zext i8 %23 to i32, !dbg !2558
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2559
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 83, !dbg !2560
  store i32 %conv16, i32* %channels, align 4, !dbg !2561
  %chan_config17 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2562
  %25 = load i32, i32* %chan_config17, align 4, !dbg !2562
  %idxprom18 = sext i32 %25 to i64, !dbg !2563
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* @chan_layout, i64 0, i64 %idxprom18, !dbg !2563
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !2563
  %conv20 = sext i16 %26 to i64, !dbg !2563
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2564
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 89, !dbg !2565
  store i64 %conv20, i64* %channel_layout, align 8, !dbg !2566
  %sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 2, !dbg !2567
  %28 = load i32, i32* %sample_rate, align 4, !dbg !2567
  %cmp21 = icmp slt i32 %28, 16000, !dbg !2569
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !2570

if.then23:                                        ; preds = %if.end8
  %29 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2571
  %syncword = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %29, i32 0, i32 1, !dbg !2572
  store i32 -2097152, i32* %syncword, align 4, !dbg !2573
  br label %if.end25, !dbg !2571

if.else:                                          ; preds = %if.end8
  %30 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2574
  %syncword24 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %30, i32 0, i32 1, !dbg !2575
  store i32 -1048576, i32* %syncword24, align 4, !dbg !2576
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then23
  %call26 = call noalias i8* @av_mallocz(i64 33056), !dbg !2577
  %31 = bitcast i8* %call26 to %struct.MPADecodeContext*, !dbg !2577
  %32 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2578
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %32, i32 0, i32 3, !dbg !2579
  %arrayidx27 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 0, !dbg !2578
  store %struct.MPADecodeContext* %31, %struct.MPADecodeContext** %arrayidx27, align 8, !dbg !2580
  %33 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2581
  %mp3decctx28 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %33, i32 0, i32 3, !dbg !2583
  %arrayidx29 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx28, i64 0, i64 0, !dbg !2581
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx29, align 8, !dbg !2581
  %tobool30 = icmp ne %struct.MPADecodeContext* %34, null, !dbg !2581
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !2584

if.then31:                                        ; preds = %if.end25
  br label %alloc_fail, !dbg !2585

if.end32:                                         ; preds = %if.end25
  %35 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2586
  %mp3decctx33 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %35, i32 0, i32 3, !dbg !2587
  %arrayidx34 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx33, i64 0, i64 0, !dbg !2586
  %36 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx34, align 8, !dbg !2586
  %37 = bitcast %struct.MPADecodeContext* %36 to i8*, !dbg !2586
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2588
  %priv_data35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 6, !dbg !2589
  store i8* %37, i8** %priv_data35, align 8, !dbg !2590
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2591
  %call36 = call i32 @decode_init(%struct.AVCodecContext* %39), !dbg !2592
  %40 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2593
  %41 = bitcast %struct.MP3On4DecodeContext* %40 to i8*, !dbg !2593
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2594
  %priv_data37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 6, !dbg !2595
  store i8* %41, i8** %priv_data37, align 8, !dbg !2596
  %43 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2597
  %mp3decctx38 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %43, i32 0, i32 3, !dbg !2598
  %arrayidx39 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx38, i64 0, i64 0, !dbg !2597
  %44 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx39, align 8, !dbg !2597
  %adu_mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %44, i32 0, i32 23, !dbg !2599
  store i32 1, i32* %adu_mode, align 32, !dbg !2600
  store i32 1, i32* %i, align 4, !dbg !2601
  br label %for.cond, !dbg !2603

for.cond:                                         ; preds = %for.inc, %if.end32
  %45 = load i32, i32* %i, align 4, !dbg !2604
  %46 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2607
  %frames40 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %46, i32 0, i32 0, !dbg !2608
  %47 = load i32, i32* %frames40, align 8, !dbg !2608
  %cmp41 = icmp slt i32 %45, %47, !dbg !2609
  br i1 %cmp41, label %for.body, label %for.end, !dbg !2610

for.body:                                         ; preds = %for.cond
  %call43 = call noalias i8* @av_mallocz(i64 33056), !dbg !2611
  %48 = bitcast i8* %call43 to %struct.MPADecodeContext*, !dbg !2611
  %49 = load i32, i32* %i, align 4, !dbg !2613
  %idxprom44 = sext i32 %49 to i64, !dbg !2614
  %50 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2614
  %mp3decctx45 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %50, i32 0, i32 3, !dbg !2615
  %arrayidx46 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx45, i64 0, i64 %idxprom44, !dbg !2614
  store %struct.MPADecodeContext* %48, %struct.MPADecodeContext** %arrayidx46, align 8, !dbg !2616
  %51 = load i32, i32* %i, align 4, !dbg !2617
  %idxprom47 = sext i32 %51 to i64, !dbg !2619
  %52 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2619
  %mp3decctx48 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %52, i32 0, i32 3, !dbg !2620
  %arrayidx49 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx48, i64 0, i64 %idxprom47, !dbg !2619
  %53 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx49, align 8, !dbg !2619
  %tobool50 = icmp ne %struct.MPADecodeContext* %53, null, !dbg !2619
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !2621

if.then51:                                        ; preds = %for.body
  br label %alloc_fail, !dbg !2622

if.end52:                                         ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !dbg !2623
  %idxprom53 = sext i32 %54 to i64, !dbg !2624
  %55 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2624
  %mp3decctx54 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %55, i32 0, i32 3, !dbg !2625
  %arrayidx55 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx54, i64 0, i64 %idxprom53, !dbg !2624
  %56 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx55, align 8, !dbg !2624
  %adu_mode56 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %56, i32 0, i32 23, !dbg !2626
  store i32 1, i32* %adu_mode56, align 32, !dbg !2627
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2628
  %58 = load i32, i32* %i, align 4, !dbg !2629
  %idxprom57 = sext i32 %58 to i64, !dbg !2630
  %59 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2630
  %mp3decctx58 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %59, i32 0, i32 3, !dbg !2631
  %arrayidx59 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx58, i64 0, i64 %idxprom57, !dbg !2630
  %60 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx59, align 8, !dbg !2630
  %avctx60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %60, i32 0, i32 26, !dbg !2632
  store %struct.AVCodecContext* %57, %struct.AVCodecContext** %avctx60, align 16, !dbg !2633
  %61 = load i32, i32* %i, align 4, !dbg !2634
  %idxprom61 = sext i32 %61 to i64, !dbg !2635
  %62 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2635
  %mp3decctx62 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %62, i32 0, i32 3, !dbg !2636
  %arrayidx63 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx62, i64 0, i64 %idxprom61, !dbg !2635
  %63 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx63, align 8, !dbg !2635
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %63, i32 0, i32 27, !dbg !2637
  %64 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2638
  %mp3decctx64 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %64, i32 0, i32 3, !dbg !2639
  %arrayidx65 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx64, i64 0, i64 0, !dbg !2638
  %65 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx65, align 8, !dbg !2638
  %mpadsp66 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %65, i32 0, i32 27, !dbg !2640
  %66 = bitcast %struct.MPADSPContext* %mpadsp to i8*, !dbg !2640
  %67 = bitcast %struct.MPADSPContext* %mpadsp66 to i8*, !dbg !2640
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 48, i32 8, i1 false), !dbg !2640
  %68 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2641
  %mp3decctx67 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %68, i32 0, i32 3, !dbg !2642
  %arrayidx68 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx67, i64 0, i64 0, !dbg !2641
  %69 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx68, align 8, !dbg !2641
  %fdsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %69, i32 0, i32 28, !dbg !2643
  %70 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2643
  %71 = load i32, i32* %i, align 4, !dbg !2644
  %idxprom69 = sext i32 %71 to i64, !dbg !2645
  %72 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2645
  %mp3decctx70 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %72, i32 0, i32 3, !dbg !2646
  %arrayidx71 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx70, i64 0, i64 %idxprom69, !dbg !2645
  %73 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx71, align 8, !dbg !2645
  %fdsp72 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %73, i32 0, i32 28, !dbg !2647
  store %struct.AVFloatDSPContext* %70, %struct.AVFloatDSPContext** %fdsp72, align 8, !dbg !2648
  br label %for.inc, !dbg !2649

for.inc:                                          ; preds = %if.end52
  %74 = load i32, i32* %i, align 4, !dbg !2650
  %inc = add nsw i32 %74, 1, !dbg !2650
  store i32 %inc, i32* %i, align 4, !dbg !2650
  br label %for.cond, !dbg !2652, !llvm.loop !2653

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2655
  br label %return, !dbg !2655

alloc_fail:                                       ; preds = %if.then51, %if.then31
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2656
  %call73 = call i32 @decode_close_mp3on4(%struct.AVCodecContext* %75), !dbg !2657
  store i32 -12, i32* %retval, align 4, !dbg !2658
  br label %return, !dbg !2658

return:                                           ; preds = %alloc_fail, %for.end, %if.then7, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !2659
  ret i32 %76, !dbg !2659
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame_mp3on4(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2660 {
entry:
  %x.addr.i100 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i100, metadata !2095, metadata !2031), !dbg !2661
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !2666, metadata !2031), !dbg !2670
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  %m = alloca %struct.MPADecodeContext*, align 8
  %fsize = alloca i32, align 4
  %len = alloca i32, align 4
  %out_size = alloca i32, align 4
  %header = alloca i32, align 4
  %out_samples = alloca float**, align 8
  %outptr = alloca [2 x float*], align 16
  %fr = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2672, metadata !2031), !dbg !2673
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2674, metadata !2031), !dbg !2675
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2676, metadata !2031), !dbg !2677
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2678, metadata !2031), !dbg !2679
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2680, metadata !2031), !dbg !2681
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2682
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2682
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2681
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2683, metadata !2031), !dbg !2684
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2685
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !2686
  %3 = load i8*, i8** %data1, align 8, !dbg !2686
  store i8* %3, i8** %buf, align 8, !dbg !2684
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2687, metadata !2031), !dbg !2688
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2689
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !2690
  %5 = load i32, i32* %size, align 8, !dbg !2690
  store i32 %5, i32* %buf_size, align 4, !dbg !2688
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !2691, metadata !2031), !dbg !2692
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2693
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !2694
  %7 = load i8*, i8** %priv_data, align 8, !dbg !2694
  %8 = bitcast i8* %7 to %struct.MP3On4DecodeContext*, !dbg !2693
  store %struct.MP3On4DecodeContext* %8, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2692
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %m, metadata !2695, metadata !2031), !dbg !2696
  call void @llvm.dbg.declare(metadata i32* %fsize, metadata !2697, metadata !2031), !dbg !2698
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2699, metadata !2031), !dbg !2700
  %9 = load i32, i32* %buf_size, align 4, !dbg !2701
  store i32 %9, i32* %len, align 4, !dbg !2700
  call void @llvm.dbg.declare(metadata i32* %out_size, metadata !2702, metadata !2031), !dbg !2703
  store i32 0, i32* %out_size, align 4, !dbg !2703
  call void @llvm.dbg.declare(metadata i32* %header, metadata !2704, metadata !2031), !dbg !2705
  call void @llvm.dbg.declare(metadata float*** %out_samples, metadata !2706, metadata !2031), !dbg !2707
  call void @llvm.dbg.declare(metadata [2 x float*]* %outptr, metadata !2708, metadata !2031), !dbg !2710
  call void @llvm.dbg.declare(metadata i32* %fr, metadata !2711, metadata !2031), !dbg !2712
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2713, metadata !2031), !dbg !2714
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2715, metadata !2031), !dbg !2716
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2717
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 5, !dbg !2718
  store i32 1152, i32* %nb_samples, align 8, !dbg !2719
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2720
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2722
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %11, %struct.AVFrame* %12, i32 0), !dbg !2723
  store i32 %call, i32* %ret, align 4, !dbg !2724
  %cmp = icmp slt i32 %call, 0, !dbg !2725
  br i1 %cmp, label %if.then, label %if.end, !dbg !2726

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %ret, align 4, !dbg !2727
  store i32 %13, i32* %retval, align 4, !dbg !2728
  br label %return, !dbg !2728

if.end:                                           ; preds = %entry
  %14 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2729
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 2, !dbg !2730
  %15 = load i8**, i8*** %extended_data, align 8, !dbg !2730
  %16 = bitcast i8** %15 to float**, !dbg !2731
  store float** %16, float*** %out_samples, align 8, !dbg !2732
  %17 = load i32, i32* %buf_size, align 4, !dbg !2733
  %cmp2 = icmp slt i32 %17, 4, !dbg !2735
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2736

if.then3:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !2737
  br label %return, !dbg !2737

if.end4:                                          ; preds = %if.end
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2738
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 9, !dbg !2739
  store i64 0, i64* %bit_rate, align 8, !dbg !2740
  store i32 0, i32* %ch, align 4, !dbg !2741
  store i32 0, i32* %fr, align 4, !dbg !2742
  br label %for.cond, !dbg !2743

for.cond:                                         ; preds = %for.inc, %if.end4
  %19 = load i32, i32* %fr, align 4, !dbg !2744
  %20 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2746
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %20, i32 0, i32 0, !dbg !2747
  %21 = load i32, i32* %frames, align 8, !dbg !2747
  %cmp5 = icmp slt i32 %19, %21, !dbg !2748
  br i1 %cmp5, label %for.body, label %for.end, !dbg !2749

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %buf, align 8, !dbg !2750
  %23 = bitcast i8* %22 to %union.unaligned_16*, !dbg !2751
  %l = bitcast %union.unaligned_16* %23 to i16*, !dbg !2751
  %24 = load i16, i16* %l, align 1, !dbg !2751
  store i16 %24, i16* %x.addr.i, align 2, !dbg !2752
  %25 = load i16, i16* %x.addr.i, align 2, !dbg !2753
  %conv.i = zext i16 %25 to i32, !dbg !2753
  %shr.i = ashr i32 %conv.i, 8, !dbg !2754
  %26 = load i16, i16* %x.addr.i, align 2, !dbg !2755
  %conv1.i = zext i16 %26 to i32, !dbg !2755
  %shl.i = shl i32 %conv1.i, 8, !dbg !2756
  %or.i = or i32 %shr.i, %shl.i, !dbg !2757
  %conv2.i = trunc i32 %or.i to i16, !dbg !2758
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !2759
  %27 = load i16, i16* %x.addr.i, align 2, !dbg !2760
  %conv = zext i16 %27 to i32, !dbg !2752
  %shr = ashr i32 %conv, 4, !dbg !2761
  store i32 %shr, i32* %fsize, align 4, !dbg !2762
  %28 = load i32, i32* %fsize, align 4, !dbg !2763
  %29 = load i32, i32* %len, align 4, !dbg !2764
  %cmp7 = icmp sgt i32 %28, %29, !dbg !2765
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2766

cond.true:                                        ; preds = %for.body
  %30 = load i32, i32* %len, align 4, !dbg !2767
  br label %cond.end, !dbg !2769

cond.false:                                       ; preds = %for.body
  %31 = load i32, i32* %fsize, align 4, !dbg !2770
  br label %cond.end, !dbg !2772

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %30, %cond.true ], [ %31, %cond.false ], !dbg !2773
  %cmp9 = icmp sgt i32 %cond, 1792, !dbg !2775
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !2776

cond.true11:                                      ; preds = %cond.end
  br label %cond.end19, !dbg !2777

cond.false12:                                     ; preds = %cond.end
  %32 = load i32, i32* %fsize, align 4, !dbg !2779
  %33 = load i32, i32* %len, align 4, !dbg !2781
  %cmp13 = icmp sgt i32 %32, %33, !dbg !2782
  br i1 %cmp13, label %cond.true15, label %cond.false16, !dbg !2783

cond.true15:                                      ; preds = %cond.false12
  %34 = load i32, i32* %len, align 4, !dbg !2784
  br label %cond.end17, !dbg !2786

cond.false16:                                     ; preds = %cond.false12
  %35 = load i32, i32* %fsize, align 4, !dbg !2787
  br label %cond.end17, !dbg !2789

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi i32 [ %34, %cond.true15 ], [ %35, %cond.false16 ], !dbg !2790
  br label %cond.end19, !dbg !2792

cond.end19:                                       ; preds = %cond.end17, %cond.true11
  %cond20 = phi i32 [ 1792, %cond.true11 ], [ %cond18, %cond.end17 ], !dbg !2793
  store i32 %cond20, i32* %fsize, align 4, !dbg !2795
  %36 = load i32, i32* %fr, align 4, !dbg !2796
  %idxprom = sext i32 %36 to i64, !dbg !2797
  %37 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2797
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %37, i32 0, i32 3, !dbg !2798
  %arrayidx = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 %idxprom, !dbg !2797
  %38 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx, align 8, !dbg !2797
  store %struct.MPADecodeContext* %38, %struct.MPADecodeContext** %m, align 8, !dbg !2799
  %39 = load i32, i32* %fsize, align 4, !dbg !2800
  %cmp21 = icmp slt i32 %39, 4, !dbg !2802
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !2803

if.then23:                                        ; preds = %cond.end19
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2804
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !2804
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i32 0, i32 0)), !dbg !2806
  store i32 -1094995529, i32* %retval, align 4, !dbg !2807
  br label %return, !dbg !2807

if.end24:                                         ; preds = %cond.end19
  %42 = load i8*, i8** %buf, align 8, !dbg !2808
  %43 = bitcast i8* %42 to %union.unaligned_32*, !dbg !2809
  %l25 = bitcast %union.unaligned_32* %43 to i32*, !dbg !2809
  %44 = load i32, i32* %l25, align 1, !dbg !2809
  store i32 %44, i32* %x.addr.i100, align 4, !dbg !2810
  %45 = load i32, i32* %x.addr.i100, align 4, !dbg !2811
  %shl.i101 = shl i32 %45, 8, !dbg !2812
  %and.i = and i32 %shl.i101, 65280, !dbg !2813
  %46 = load i32, i32* %x.addr.i100, align 4, !dbg !2814
  %shr.i102 = lshr i32 %46, 8, !dbg !2815
  %and1.i = and i32 %shr.i102, 255, !dbg !2816
  %or.i103 = or i32 %and.i, %and1.i, !dbg !2817
  %shl2.i = shl i32 %or.i103, 16, !dbg !2818
  %47 = load i32, i32* %x.addr.i100, align 4, !dbg !2819
  %shr3.i = lshr i32 %47, 16, !dbg !2820
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2821
  %and5.i = and i32 %shl4.i, 65280, !dbg !2822
  %48 = load i32, i32* %x.addr.i100, align 4, !dbg !2823
  %shr6.i = lshr i32 %48, 16, !dbg !2824
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2825
  %and8.i = and i32 %shr7.i, 255, !dbg !2826
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2827
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2828
  %and = and i32 %or10.i, 1048575, !dbg !2829
  %49 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2830
  %syncword = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %49, i32 0, i32 1, !dbg !2831
  %50 = load i32, i32* %syncword, align 4, !dbg !2831
  %or = or i32 %and, %50, !dbg !2832
  store i32 %or, i32* %header, align 4, !dbg !2833
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2834
  %52 = bitcast %struct.MPADecodeContext* %51 to %struct.MPADecodeHeader*, !dbg !2835
  %53 = load i32, i32* %header, align 4, !dbg !2836
  %call27 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* %52, i32 %53), !dbg !2837
  store i32 %call27, i32* %ret, align 4, !dbg !2838
  %54 = load i32, i32* %ret, align 4, !dbg !2839
  %cmp28 = icmp slt i32 %54, 0, !dbg !2841
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2842

if.then30:                                        ; preds = %if.end24
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2843
  %56 = bitcast %struct.AVCodecContext* %55 to i8*, !dbg !2843
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i32 0, i32 0)), !dbg !2845
  store i32 -1094995529, i32* %retval, align 4, !dbg !2846
  br label %return, !dbg !2846

if.end31:                                         ; preds = %if.end24
  %57 = load i32, i32* %ch, align 4, !dbg !2847
  %58 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2849
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %58, i32 0, i32 6, !dbg !2850
  %59 = load i32, i32* %nb_channels, align 8, !dbg !2850
  %add = add nsw i32 %57, %59, !dbg !2851
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2852
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %60, i32 0, i32 83, !dbg !2853
  %61 = load i32, i32* %channels, align 4, !dbg !2853
  %cmp32 = icmp sgt i32 %add, %61, !dbg !2854
  br i1 %cmp32, label %if.then42, label %lor.lhs.false, !dbg !2855

lor.lhs.false:                                    ; preds = %if.end31
  %62 = load i32, i32* %fr, align 4, !dbg !2856
  %idxprom34 = sext i32 %62 to i64, !dbg !2857
  %63 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2857
  %coff = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %63, i32 0, i32 2, !dbg !2858
  %64 = load i8*, i8** %coff, align 8, !dbg !2858
  %arrayidx35 = getelementptr inbounds i8, i8* %64, i64 %idxprom34, !dbg !2857
  %65 = load i8, i8* %arrayidx35, align 1, !dbg !2857
  %conv36 = zext i8 %65 to i32, !dbg !2857
  %66 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2859
  %nb_channels37 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %66, i32 0, i32 6, !dbg !2860
  %67 = load i32, i32* %nb_channels37, align 8, !dbg !2860
  %add38 = add nsw i32 %conv36, %67, !dbg !2861
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2862
  %channels39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %68, i32 0, i32 83, !dbg !2863
  %69 = load i32, i32* %channels39, align 4, !dbg !2863
  %cmp40 = icmp sgt i32 %add38, %69, !dbg !2864
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !2865

if.then42:                                        ; preds = %lor.lhs.false, %if.end31
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2866
  %71 = bitcast %struct.AVCodecContext* %70 to i8*, !dbg !2866
  call void (i8*, i32, i8*, ...) @av_log(i8* %71, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.38, i32 0, i32 0)), !dbg !2868
  store i32 -1094995529, i32* %retval, align 4, !dbg !2869
  br label %return, !dbg !2869

if.end43:                                         ; preds = %lor.lhs.false
  %72 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2870
  %nb_channels44 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %72, i32 0, i32 6, !dbg !2871
  %73 = load i32, i32* %nb_channels44, align 8, !dbg !2871
  %74 = load i32, i32* %ch, align 4, !dbg !2872
  %add45 = add nsw i32 %74, %73, !dbg !2872
  store i32 %add45, i32* %ch, align 4, !dbg !2872
  %75 = load i32, i32* %fr, align 4, !dbg !2873
  %idxprom46 = sext i32 %75 to i64, !dbg !2874
  %76 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2874
  %coff47 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %76, i32 0, i32 2, !dbg !2875
  %77 = load i8*, i8** %coff47, align 8, !dbg !2875
  %arrayidx48 = getelementptr inbounds i8, i8* %77, i64 %idxprom46, !dbg !2874
  %78 = load i8, i8* %arrayidx48, align 1, !dbg !2874
  %idxprom49 = zext i8 %78 to i64, !dbg !2876
  %79 = load float**, float*** %out_samples, align 8, !dbg !2876
  %arrayidx50 = getelementptr inbounds float*, float** %79, i64 %idxprom49, !dbg !2876
  %80 = load float*, float** %arrayidx50, align 8, !dbg !2876
  %arrayidx51 = getelementptr inbounds [2 x float*], [2 x float*]* %outptr, i64 0, i64 0, !dbg !2877
  store float* %80, float** %arrayidx51, align 16, !dbg !2878
  %81 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2879
  %nb_channels52 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %81, i32 0, i32 6, !dbg !2881
  %82 = load i32, i32* %nb_channels52, align 8, !dbg !2881
  %cmp53 = icmp sgt i32 %82, 1, !dbg !2882
  br i1 %cmp53, label %if.then55, label %if.end64, !dbg !2883

if.then55:                                        ; preds = %if.end43
  %83 = load i32, i32* %fr, align 4, !dbg !2884
  %idxprom56 = sext i32 %83 to i64, !dbg !2885
  %84 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2885
  %coff57 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %84, i32 0, i32 2, !dbg !2886
  %85 = load i8*, i8** %coff57, align 8, !dbg !2886
  %arrayidx58 = getelementptr inbounds i8, i8* %85, i64 %idxprom56, !dbg !2885
  %86 = load i8, i8* %arrayidx58, align 1, !dbg !2885
  %conv59 = zext i8 %86 to i32, !dbg !2885
  %add60 = add nsw i32 %conv59, 1, !dbg !2887
  %idxprom61 = sext i32 %add60 to i64, !dbg !2888
  %87 = load float**, float*** %out_samples, align 8, !dbg !2888
  %arrayidx62 = getelementptr inbounds float*, float** %87, i64 %idxprom61, !dbg !2888
  %88 = load float*, float** %arrayidx62, align 8, !dbg !2888
  %arrayidx63 = getelementptr inbounds [2 x float*], [2 x float*]* %outptr, i64 0, i64 1, !dbg !2889
  store float* %88, float** %arrayidx63, align 8, !dbg !2890
  br label %if.end64, !dbg !2889

if.end64:                                         ; preds = %if.then55, %if.end43
  %89 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2891
  %arraydecay = getelementptr inbounds [2 x float*], [2 x float*]* %outptr, i32 0, i32 0, !dbg !2893
  %90 = load i8*, i8** %buf, align 8, !dbg !2894
  %91 = load i32, i32* %fsize, align 4, !dbg !2895
  %call65 = call i32 @mp_decode_frame(%struct.MPADecodeContext* %89, float** %arraydecay, i8* %90, i32 %91), !dbg !2896
  store i32 %call65, i32* %ret, align 4, !dbg !2897
  %cmp66 = icmp slt i32 %call65, 0, !dbg !2898
  br i1 %cmp66, label %if.then68, label %if.end80, !dbg !2899

if.then68:                                        ; preds = %if.end64
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2900
  %93 = bitcast %struct.AVCodecContext* %92 to i8*, !dbg !2900
  %94 = load i32, i32* %ch, align 4, !dbg !2902
  call void (i8*, i32, i8*, ...) @av_log(i8* %93, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i32 %94), !dbg !2903
  %arrayidx69 = getelementptr inbounds [2 x float*], [2 x float*]* %outptr, i64 0, i64 0, !dbg !2904
  %95 = load float*, float** %arrayidx69, align 16, !dbg !2904
  %96 = bitcast float* %95 to i8*, !dbg !2905
  call void @llvm.memset.p0i8.i64(i8* %96, i8 0, i64 4608, i32 4, i1 false), !dbg !2905
  %97 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2906
  %nb_channels70 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %97, i32 0, i32 6, !dbg !2908
  %98 = load i32, i32* %nb_channels70, align 8, !dbg !2908
  %cmp71 = icmp sgt i32 %98, 1, !dbg !2909
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !2910

if.then73:                                        ; preds = %if.then68
  %arrayidx74 = getelementptr inbounds [2 x float*], [2 x float*]* %outptr, i64 0, i64 1, !dbg !2911
  %99 = load float*, float** %arrayidx74, align 8, !dbg !2911
  %100 = bitcast float* %99 to i8*, !dbg !2912
  call void @llvm.memset.p0i8.i64(i8* %100, i8 0, i64 4608, i32 4, i1 false), !dbg !2912
  br label %if.end75, !dbg !2912

if.end75:                                         ; preds = %if.then73, %if.then68
  %101 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2913
  %nb_channels76 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %101, i32 0, i32 6, !dbg !2914
  %102 = load i32, i32* %nb_channels76, align 8, !dbg !2914
  %mul = mul nsw i32 %102, 1152, !dbg !2915
  %conv77 = sext i32 %mul to i64, !dbg !2913
  %mul78 = mul i64 %conv77, 4, !dbg !2916
  %conv79 = trunc i64 %mul78 to i32, !dbg !2913
  store i32 %conv79, i32* %ret, align 4, !dbg !2917
  br label %if.end80, !dbg !2918

if.end80:                                         ; preds = %if.end75, %if.end64
  %103 = load i32, i32* %ret, align 4, !dbg !2919
  %104 = load i32, i32* %out_size, align 4, !dbg !2920
  %add81 = add nsw i32 %104, %103, !dbg !2920
  store i32 %add81, i32* %out_size, align 4, !dbg !2920
  %105 = load i32, i32* %fsize, align 4, !dbg !2921
  %106 = load i8*, i8** %buf, align 8, !dbg !2922
  %idx.ext = sext i32 %105 to i64, !dbg !2922
  %add.ptr = getelementptr inbounds i8, i8* %106, i64 %idx.ext, !dbg !2922
  store i8* %add.ptr, i8** %buf, align 8, !dbg !2922
  %107 = load i32, i32* %fsize, align 4, !dbg !2923
  %108 = load i32, i32* %len, align 4, !dbg !2924
  %sub = sub nsw i32 %108, %107, !dbg !2924
  store i32 %sub, i32* %len, align 4, !dbg !2924
  %109 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2925
  %bit_rate82 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %109, i32 0, i32 5, !dbg !2926
  %110 = load i32, i32* %bit_rate82, align 4, !dbg !2926
  %conv83 = sext i32 %110 to i64, !dbg !2925
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2927
  %bit_rate84 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 9, !dbg !2928
  %112 = load i64, i64* %bit_rate84, align 8, !dbg !2929
  %add85 = add nsw i64 %112, %conv83, !dbg !2929
  store i64 %add85, i64* %bit_rate84, align 8, !dbg !2929
  br label %for.inc, !dbg !2930

for.inc:                                          ; preds = %if.end80
  %113 = load i32, i32* %fr, align 4, !dbg !2931
  %inc = add nsw i32 %113, 1, !dbg !2931
  store i32 %inc, i32* %fr, align 4, !dbg !2931
  br label %for.cond, !dbg !2933, !llvm.loop !2934

for.end:                                          ; preds = %for.cond
  %114 = load i32, i32* %ch, align 4, !dbg !2936
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2938
  %channels86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 83, !dbg !2939
  %116 = load i32, i32* %channels86, align 4, !dbg !2939
  %cmp87 = icmp ne i32 %114, %116, !dbg !2940
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !2941

if.then89:                                        ; preds = %for.end
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2942
  %118 = bitcast %struct.AVCodecContext* %117 to i8*, !dbg !2942
  call void (i8*, i32, i8*, ...) @av_log(i8* %118, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i32 0, i32 0)), !dbg !2944
  store i32 -1094995529, i32* %retval, align 4, !dbg !2945
  br label %return, !dbg !2945

if.end90:                                         ; preds = %for.end
  %119 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2946
  %mp3decctx91 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %119, i32 0, i32 3, !dbg !2947
  %arrayidx92 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx91, i64 0, i64 0, !dbg !2946
  %120 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx92, align 8, !dbg !2946
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %120, i32 0, i32 3, !dbg !2948
  %121 = load i32, i32* %sample_rate, align 4, !dbg !2948
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2949
  %sample_rate93 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %122, i32 0, i32 82, !dbg !2950
  store i32 %121, i32* %sample_rate93, align 8, !dbg !2951
  %123 = load i32, i32* %out_size, align 4, !dbg !2952
  %conv94 = sext i32 %123 to i64, !dbg !2952
  %124 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2953
  %channels95 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %124, i32 0, i32 83, !dbg !2954
  %125 = load i32, i32* %channels95, align 4, !dbg !2954
  %conv96 = sext i32 %125 to i64, !dbg !2953
  %mul97 = mul i64 %conv96, 4, !dbg !2955
  %div = udiv i64 %conv94, %mul97, !dbg !2956
  %conv98 = trunc i64 %div to i32, !dbg !2952
  %126 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2957
  %nb_samples99 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %126, i32 0, i32 5, !dbg !2958
  store i32 %conv98, i32* %nb_samples99, align 8, !dbg !2959
  %127 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2960
  store i32 1, i32* %127, align 4, !dbg !2961
  %128 = load i32, i32* %buf_size, align 4, !dbg !2962
  store i32 %128, i32* %retval, align 4, !dbg !2963
  br label %return, !dbg !2963

return:                                           ; preds = %if.end90, %if.then89, %if.then42, %if.then30, %if.then23, %if.then3, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !2964
  ret i32 %129, !dbg !2964
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_close_mp3on4(%struct.AVCodecContext* %avctx) #0 !dbg !2965 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2966, metadata !2031), !dbg !2967
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !2968, metadata !2031), !dbg !2969
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2970
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2971
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2971
  %2 = bitcast i8* %1 to %struct.MP3On4DecodeContext*, !dbg !2970
  store %struct.MP3On4DecodeContext* %2, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2969
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2972, metadata !2031), !dbg !2973
  %3 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2974
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %3, i32 0, i32 3, !dbg !2976
  %arrayidx = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 0, !dbg !2974
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx, align 8, !dbg !2974
  %tobool = icmp ne %struct.MPADecodeContext* %4, null, !dbg !2974
  br i1 %tobool, label %if.then, label %if.end, !dbg !2977

if.then:                                          ; preds = %entry
  %5 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2978
  %mp3decctx1 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %5, i32 0, i32 3, !dbg !2979
  %arrayidx2 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx1, i64 0, i64 0, !dbg !2978
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx2, align 8, !dbg !2978
  %fdsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 28, !dbg !2980
  %7 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !2981
  call void @av_freep(i8* %7), !dbg !2982
  br label %if.end, !dbg !2982

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !2983
  br label %for.cond, !dbg !2985

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !2986
  %9 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2989
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %9, i32 0, i32 0, !dbg !2990
  %10 = load i32, i32* %frames, align 8, !dbg !2990
  %cmp = icmp slt i32 %8, %10, !dbg !2991
  br i1 %cmp, label %for.body, label %for.end, !dbg !2992

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !2993
  %idxprom = sext i32 %11 to i64, !dbg !2994
  %12 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2994
  %mp3decctx3 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %12, i32 0, i32 3, !dbg !2995
  %arrayidx4 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx3, i64 0, i64 %idxprom, !dbg !2994
  %13 = bitcast %struct.MPADecodeContext** %arrayidx4 to i8*, !dbg !2996
  call void @av_freep(i8* %13), !dbg !2997
  br label %for.inc, !dbg !2997

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !2998
  %inc = add nsw i32 %14, 1, !dbg !2998
  store i32 %inc, i32* %i, align 4, !dbg !2998
  br label %for.cond, !dbg !3000, !llvm.loop !3001

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !3003
}

; Function Attrs: nounwind uwtable
define internal void @flush_mp3on4(%struct.AVCodecContext* %avctx) #1 !dbg !3004 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3005, metadata !2031), !dbg !3006
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3007, metadata !2031), !dbg !3008
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !3009, metadata !2031), !dbg !3010
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3011
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3012
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3012
  %2 = bitcast i8* %1 to %struct.MP3On4DecodeContext*, !dbg !3011
  store %struct.MP3On4DecodeContext* %2, %struct.MP3On4DecodeContext** %s, align 8, !dbg !3010
  store i32 0, i32* %i, align 4, !dbg !3013
  br label %for.cond, !dbg !3015

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3016
  %4 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !3019
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %4, i32 0, i32 0, !dbg !3020
  %5 = load i32, i32* %frames, align 8, !dbg !3020
  %cmp = icmp slt i32 %3, %5, !dbg !3021
  br i1 %cmp, label %for.body, label %for.end, !dbg !3022

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !3023
  %idxprom = sext i32 %6 to i64, !dbg !3024
  %7 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !3024
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %7, i32 0, i32 3, !dbg !3025
  %arrayidx = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 %idxprom, !dbg !3024
  %8 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx, align 8, !dbg !3024
  call void @mp_flush(%struct.MPADecodeContext* %8), !dbg !3026
  br label %for.inc, !dbg !3026

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !3027
  %inc = add nsw i32 %9, 1, !dbg !3027
  store i32 %inc, i32* %i, align 4, !dbg !3027
  br label %for.cond, !dbg !3029, !llvm.loop !3030

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3032
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: cold nounwind optsize uwtable
define internal void @decode_init_static() #0 !dbg !3033 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %offset = alloca i32, align 4
  %shift = alloca i32, align 4
  %mod = alloca i32, align 4
  %n = alloca i32, align 4
  %norm = alloca i32, align 4
  %h = alloca %struct.HuffTable*, align 8
  %xsize = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %tmp_bits = alloca [512 x i8], align 16
  %tmp_codes = alloca [512 x i16], align 16
  %val1 = alloca i32, align 4
  %val2 = alloca i32, align 4
  %val3 = alloca i32, align 4
  %steps = alloca i32, align 4
  %val = alloca i32, align 4
  %f = alloca float, align 4
  %v = alloca float, align 4
  %f243 = alloca double, align 8
  %e = alloca i32, align 4
  %k244 = alloca i32, align 4
  %ci = alloca double, align 8
  %cs = alloca double, align 8
  %ca = alloca double, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3034, metadata !2031), !dbg !3035
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3036, metadata !2031), !dbg !3037
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3038, metadata !2031), !dbg !3039
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3040, metadata !2031), !dbg !3041
  store i32 0, i32* %i, align 4, !dbg !3042
  br label %for.cond, !dbg !3044

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3045
  %cmp = icmp slt i32 %0, 64, !dbg !3048
  br i1 %cmp, label %for.body, label %for.end, !dbg !3049

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3050, metadata !2031), !dbg !3052
  call void @llvm.dbg.declare(metadata i32* %mod, metadata !3053, metadata !2031), !dbg !3054
  %1 = load i32, i32* %i, align 4, !dbg !3055
  %div = sdiv i32 %1, 3, !dbg !3056
  store i32 %div, i32* %shift, align 4, !dbg !3057
  %2 = load i32, i32* %i, align 4, !dbg !3058
  %rem = srem i32 %2, 3, !dbg !3059
  store i32 %rem, i32* %mod, align 4, !dbg !3060
  %3 = load i32, i32* %mod, align 4, !dbg !3061
  %4 = load i32, i32* %shift, align 4, !dbg !3062
  %shl = shl i32 %4, 2, !dbg !3063
  %or = or i32 %3, %shl, !dbg !3064
  %conv = trunc i32 %or to i16, !dbg !3061
  %5 = load i32, i32* %i, align 4, !dbg !3065
  %idxprom = sext i32 %5 to i64, !dbg !3066
  %arrayidx = getelementptr inbounds [64 x i16], [64 x i16]* @scale_factor_modshift, i64 0, i64 %idxprom, !dbg !3066
  store i16 %conv, i16* %arrayidx, align 2, !dbg !3067
  br label %for.inc, !dbg !3068

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !3069
  %inc = add nsw i32 %6, 1, !dbg !3069
  store i32 %inc, i32* %i, align 4, !dbg !3069
  br label %for.cond, !dbg !3071, !llvm.loop !3072

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3074
  br label %for.cond1, !dbg !3076

for.cond1:                                        ; preds = %for.inc28, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !3077
  %cmp2 = icmp slt i32 %7, 15, !dbg !3080
  br i1 %cmp2, label %for.body4, label %for.end30, !dbg !3081

for.body4:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3082, metadata !2031), !dbg !3084
  call void @llvm.dbg.declare(metadata i32* %norm, metadata !3085, metadata !2031), !dbg !3086
  %8 = load i32, i32* %i, align 4, !dbg !3087
  %add = add nsw i32 %8, 2, !dbg !3088
  store i32 %add, i32* %n, align 4, !dbg !3089
  %9 = load i32, i32* %n, align 4, !dbg !3090
  %sh_prom = zext i32 %9 to i64, !dbg !3091
  %shl5 = shl i64 1, %sh_prom, !dbg !3091
  %mul = mul nsw i64 %shl5, 8388608, !dbg !3092
  %10 = load i32, i32* %n, align 4, !dbg !3093
  %shl6 = shl i32 1, %10, !dbg !3094
  %sub = sub nsw i32 %shl6, 1, !dbg !3095
  %conv7 = sext i32 %sub to i64, !dbg !3096
  %div8 = sdiv i64 %mul, %conv7, !dbg !3097
  %conv9 = trunc i64 %div8 to i32, !dbg !3098
  store i32 %conv9, i32* %norm, align 4, !dbg !3099
  %11 = load i32, i32* %norm, align 4, !dbg !3100
  %conv10 = sitofp i32 %11 to float, !dbg !3101
  %mul11 = fmul float 2.000000e+00, %conv10, !dbg !3102
  %conv12 = fptosi float %mul11 to i32, !dbg !3103
  %12 = load i32, i32* %i, align 4, !dbg !3104
  %idxprom13 = sext i32 %12 to i64, !dbg !3105
  %arrayidx14 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom13, !dbg !3105
  %arrayidx15 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx14, i64 0, i64 0, !dbg !3105
  store i32 %conv12, i32* %arrayidx15, align 4, !dbg !3106
  %13 = load i32, i32* %norm, align 4, !dbg !3107
  %conv16 = sitofp i32 %13 to float, !dbg !3108
  %mul17 = fmul float 0x3FF965FEA0000000, %conv16, !dbg !3109
  %conv18 = fptosi float %mul17 to i32, !dbg !3110
  %14 = load i32, i32* %i, align 4, !dbg !3111
  %idxprom19 = sext i32 %14 to i64, !dbg !3112
  %arrayidx20 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom19, !dbg !3112
  %arrayidx21 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx20, i64 0, i64 1, !dbg !3112
  store i32 %conv18, i32* %arrayidx21, align 4, !dbg !3113
  %15 = load i32, i32* %norm, align 4, !dbg !3114
  %conv22 = sitofp i32 %15 to float, !dbg !3115
  %mul23 = fmul float 0x3FF428A300000000, %conv22, !dbg !3116
  %conv24 = fptosi float %mul23 to i32, !dbg !3117
  %16 = load i32, i32* %i, align 4, !dbg !3118
  %idxprom25 = sext i32 %16 to i64, !dbg !3119
  %arrayidx26 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom25, !dbg !3119
  %arrayidx27 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx26, i64 0, i64 2, !dbg !3119
  store i32 %conv24, i32* %arrayidx27, align 4, !dbg !3120
  br label %do.body, !dbg !3121, !llvm.loop !3122

do.body:                                          ; preds = %for.body4
  br label %do.end, !dbg !3123

do.end:                                           ; preds = %do.body
  br label %for.inc28, !dbg !3126

for.inc28:                                        ; preds = %do.end
  %17 = load i32, i32* %i, align 4, !dbg !3127
  %inc29 = add nsw i32 %17, 1, !dbg !3127
  store i32 %inc29, i32* %i, align 4, !dbg !3127
  br label %for.cond1, !dbg !3129, !llvm.loop !3130

for.end30:                                        ; preds = %for.cond1
  call void @ff_mpa_synth_init_float(float* getelementptr inbounds ([0 x float], [0 x float]* @ff_mpa_synth_window_float, i32 0, i32 0)), !dbg !3132
  store i32 0, i32* %offset, align 4, !dbg !3133
  store i32 1, i32* %i, align 4, !dbg !3134
  br label %for.cond31, !dbg !3136

for.cond31:                                       ; preds = %for.inc87, %for.end30
  %18 = load i32, i32* %i, align 4, !dbg !3137
  %cmp32 = icmp slt i32 %18, 16, !dbg !3140
  br i1 %cmp32, label %for.body34, label %for.end89, !dbg !3141

for.body34:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata %struct.HuffTable** %h, metadata !3142, metadata !2031), !dbg !3145
  %19 = load i32, i32* %i, align 4, !dbg !3146
  %idxprom35 = sext i32 %19 to i64, !dbg !3147
  %arrayidx36 = getelementptr inbounds [16 x %struct.HuffTable], [16 x %struct.HuffTable]* @mpa_huff_tables, i64 0, i64 %idxprom35, !dbg !3147
  store %struct.HuffTable* %arrayidx36, %struct.HuffTable** %h, align 8, !dbg !3145
  call void @llvm.dbg.declare(metadata i32* %xsize, metadata !3148, metadata !2031), !dbg !3149
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3150, metadata !2031), !dbg !3151
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3152, metadata !2031), !dbg !3153
  call void @llvm.dbg.declare(metadata [512 x i8]* %tmp_bits, metadata !3154, metadata !2031), !dbg !3156
  %20 = bitcast [512 x i8]* %tmp_bits to i8*, !dbg !3156
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 512, i32 16, i1 false), !dbg !3156
  call void @llvm.dbg.declare(metadata [512 x i16]* %tmp_codes, metadata !3157, metadata !2031), !dbg !3159
  %21 = bitcast [512 x i16]* %tmp_codes to i8*, !dbg !3159
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 1024, i32 16, i1 false), !dbg !3159
  %22 = load %struct.HuffTable*, %struct.HuffTable** %h, align 8, !dbg !3160
  %xsize37 = getelementptr inbounds %struct.HuffTable, %struct.HuffTable* %22, i32 0, i32 0, !dbg !3161
  %23 = load i32, i32* %xsize37, align 8, !dbg !3161
  store i32 %23, i32* %xsize, align 4, !dbg !3162
  store i32 0, i32* %j, align 4, !dbg !3163
  store i32 0, i32* %x, align 4, !dbg !3164
  br label %for.cond38, !dbg !3166

for.cond38:                                       ; preds = %for.inc72, %for.body34
  %24 = load i32, i32* %x, align 4, !dbg !3167
  %25 = load i32, i32* %xsize, align 4, !dbg !3170
  %cmp39 = icmp slt i32 %24, %25, !dbg !3171
  br i1 %cmp39, label %for.body41, label %for.end74, !dbg !3172

for.body41:                                       ; preds = %for.cond38
  store i32 0, i32* %y, align 4, !dbg !3173
  br label %for.cond42, !dbg !3176

for.cond42:                                       ; preds = %for.inc69, %for.body41
  %26 = load i32, i32* %y, align 4, !dbg !3177
  %27 = load i32, i32* %xsize, align 4, !dbg !3180
  %cmp43 = icmp slt i32 %26, %27, !dbg !3181
  br i1 %cmp43, label %for.body45, label %for.end71, !dbg !3182

for.body45:                                       ; preds = %for.cond42
  %28 = load i32, i32* %j, align 4, !dbg !3183
  %idxprom46 = sext i32 %28 to i64, !dbg !3185
  %29 = load %struct.HuffTable*, %struct.HuffTable** %h, align 8, !dbg !3185
  %bits = getelementptr inbounds %struct.HuffTable, %struct.HuffTable* %29, i32 0, i32 1, !dbg !3186
  %30 = load i8*, i8** %bits, align 8, !dbg !3186
  %arrayidx47 = getelementptr inbounds i8, i8* %30, i64 %idxprom46, !dbg !3185
  %31 = load i8, i8* %arrayidx47, align 1, !dbg !3185
  %32 = load i32, i32* %x, align 4, !dbg !3187
  %shl48 = shl i32 %32, 5, !dbg !3188
  %33 = load i32, i32* %y, align 4, !dbg !3189
  %or49 = or i32 %shl48, %33, !dbg !3190
  %34 = load i32, i32* %x, align 4, !dbg !3191
  %tobool = icmp ne i32 %34, 0, !dbg !3191
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3192

land.rhs:                                         ; preds = %for.body45
  %35 = load i32, i32* %y, align 4, !dbg !3193
  %tobool50 = icmp ne i32 %35, 0, !dbg !3195
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body45
  %36 = phi i1 [ false, %for.body45 ], [ %tobool50, %land.rhs ]
  %land.ext = zext i1 %36 to i32, !dbg !3196
  %shl51 = shl i32 %land.ext, 4, !dbg !3198
  %or52 = or i32 %or49, %shl51, !dbg !3199
  %idxprom53 = sext i32 %or52 to i64, !dbg !3200
  %arrayidx54 = getelementptr inbounds [512 x i8], [512 x i8]* %tmp_bits, i64 0, i64 %idxprom53, !dbg !3200
  store i8 %31, i8* %arrayidx54, align 1, !dbg !3201
  %37 = load i32, i32* %j, align 4, !dbg !3202
  %inc55 = add nsw i32 %37, 1, !dbg !3202
  store i32 %inc55, i32* %j, align 4, !dbg !3202
  %idxprom56 = sext i32 %37 to i64, !dbg !3203
  %38 = load %struct.HuffTable*, %struct.HuffTable** %h, align 8, !dbg !3203
  %codes = getelementptr inbounds %struct.HuffTable, %struct.HuffTable* %38, i32 0, i32 2, !dbg !3204
  %39 = load i16*, i16** %codes, align 8, !dbg !3204
  %arrayidx57 = getelementptr inbounds i16, i16* %39, i64 %idxprom56, !dbg !3203
  %40 = load i16, i16* %arrayidx57, align 2, !dbg !3203
  %41 = load i32, i32* %x, align 4, !dbg !3205
  %shl58 = shl i32 %41, 5, !dbg !3206
  %42 = load i32, i32* %y, align 4, !dbg !3207
  %or59 = or i32 %shl58, %42, !dbg !3208
  %43 = load i32, i32* %x, align 4, !dbg !3209
  %tobool60 = icmp ne i32 %43, 0, !dbg !3209
  br i1 %tobool60, label %land.rhs61, label %land.end63, !dbg !3210

land.rhs61:                                       ; preds = %land.end
  %44 = load i32, i32* %y, align 4, !dbg !3211
  %tobool62 = icmp ne i32 %44, 0, !dbg !3212
  br label %land.end63

land.end63:                                       ; preds = %land.rhs61, %land.end
  %45 = phi i1 [ false, %land.end ], [ %tobool62, %land.rhs61 ]
  %land.ext64 = zext i1 %45 to i32, !dbg !3213
  %shl65 = shl i32 %land.ext64, 4, !dbg !3214
  %or66 = or i32 %or59, %shl65, !dbg !3215
  %idxprom67 = sext i32 %or66 to i64, !dbg !3216
  %arrayidx68 = getelementptr inbounds [512 x i16], [512 x i16]* %tmp_codes, i64 0, i64 %idxprom67, !dbg !3216
  store i16 %40, i16* %arrayidx68, align 2, !dbg !3217
  br label %for.inc69, !dbg !3218

for.inc69:                                        ; preds = %land.end63
  %46 = load i32, i32* %y, align 4, !dbg !3219
  %inc70 = add nsw i32 %46, 1, !dbg !3219
  store i32 %inc70, i32* %y, align 4, !dbg !3219
  br label %for.cond42, !dbg !3221, !llvm.loop !3222

for.end71:                                        ; preds = %for.cond42
  br label %for.inc72, !dbg !3224

for.inc72:                                        ; preds = %for.end71
  %47 = load i32, i32* %x, align 4, !dbg !3225
  %inc73 = add nsw i32 %47, 1, !dbg !3225
  store i32 %inc73, i32* %x, align 4, !dbg !3225
  br label %for.cond38, !dbg !3227, !llvm.loop !3228

for.end74:                                        ; preds = %for.cond38
  %48 = load i32, i32* %offset, align 4, !dbg !3230
  %idx.ext = sext i32 %48 to i64, !dbg !3231
  %add.ptr = getelementptr inbounds [2 x i16], [2 x i16]* getelementptr inbounds ([3746 x [2 x i16]], [3746 x [2 x i16]]* @huff_vlc_tables, i32 0, i32 0), i64 %idx.ext, !dbg !3231
  %49 = load i32, i32* %i, align 4, !dbg !3232
  %idxprom75 = sext i32 %49 to i64, !dbg !3233
  %arrayidx76 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom75, !dbg !3233
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx76, i32 0, i32 1, !dbg !3234
  store [2 x i16]* %add.ptr, [2 x i16]** %table, align 8, !dbg !3235
  %50 = load i32, i32* %i, align 4, !dbg !3236
  %idxprom77 = sext i32 %50 to i64, !dbg !3237
  %arrayidx78 = getelementptr inbounds [16 x i32], [16 x i32]* @huff_vlc_tables_sizes, i64 0, i64 %idxprom77, !dbg !3237
  %51 = load i32, i32* %arrayidx78, align 4, !dbg !3237
  %52 = load i32, i32* %i, align 4, !dbg !3238
  %idxprom79 = sext i32 %52 to i64, !dbg !3239
  %arrayidx80 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom79, !dbg !3239
  %table_allocated = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx80, i32 0, i32 3, !dbg !3240
  store i32 %51, i32* %table_allocated, align 4, !dbg !3241
  %53 = load i32, i32* %i, align 4, !dbg !3242
  %idxprom81 = sext i32 %53 to i64, !dbg !3243
  %arrayidx82 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom81, !dbg !3243
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %tmp_bits, i32 0, i32 0, !dbg !3244
  %arraydecay83 = getelementptr inbounds [512 x i16], [512 x i16]* %tmp_codes, i32 0, i32 0, !dbg !3245
  %54 = bitcast i16* %arraydecay83 to i8*, !dbg !3245
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx82, i32 7, i32 512, i8* %arraydecay, i32 1, i32 1, i8* %54, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3246
  %55 = load i32, i32* %i, align 4, !dbg !3247
  %idxprom84 = sext i32 %55 to i64, !dbg !3248
  %arrayidx85 = getelementptr inbounds [16 x i32], [16 x i32]* @huff_vlc_tables_sizes, i64 0, i64 %idxprom84, !dbg !3248
  %56 = load i32, i32* %arrayidx85, align 4, !dbg !3248
  %57 = load i32, i32* %offset, align 4, !dbg !3249
  %add86 = add nsw i32 %57, %56, !dbg !3249
  store i32 %add86, i32* %offset, align 4, !dbg !3249
  br label %for.inc87, !dbg !3250

for.inc87:                                        ; preds = %for.end74
  %58 = load i32, i32* %i, align 4, !dbg !3251
  %inc88 = add nsw i32 %58, 1, !dbg !3251
  store i32 %inc88, i32* %i, align 4, !dbg !3251
  br label %for.cond31, !dbg !3253, !llvm.loop !3254

for.end89:                                        ; preds = %for.cond31
  br label %do.body90, !dbg !3256, !llvm.loop !3257

do.body90:                                        ; preds = %for.end89
  %59 = load i32, i32* %offset, align 4, !dbg !3258
  %conv91 = sext i32 %59 to i64, !dbg !3258
  %cmp92 = icmp eq i64 %conv91, 3746, !dbg !3262
  br i1 %cmp92, label %if.end, label %if.then, !dbg !3263

if.then:                                          ; preds = %do.body90
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0), i32 318), !dbg !3264
  call void @abort() #8, !dbg !3267
  unreachable, !dbg !3269

if.end:                                           ; preds = %do.body90
  br label %do.end94, !dbg !3270

do.end94:                                         ; preds = %if.end
  store i32 0, i32* %offset, align 4, !dbg !3272
  store i32 0, i32* %i, align 4, !dbg !3273
  br label %for.cond95, !dbg !3275

for.cond95:                                       ; preds = %for.inc123, %do.end94
  %60 = load i32, i32* %i, align 4, !dbg !3276
  %cmp96 = icmp slt i32 %60, 2, !dbg !3279
  br i1 %cmp96, label %for.body98, label %for.end125, !dbg !3280

for.body98:                                       ; preds = %for.cond95
  %61 = load i32, i32* %offset, align 4, !dbg !3281
  %idx.ext99 = sext i32 %61 to i64, !dbg !3283
  %add.ptr100 = getelementptr inbounds [2 x i16], [2 x i16]* getelementptr inbounds ([144 x [2 x i16]], [144 x [2 x i16]]* @huff_quad_vlc_tables, i32 0, i32 0), i64 %idx.ext99, !dbg !3283
  %62 = load i32, i32* %i, align 4, !dbg !3284
  %idxprom101 = sext i32 %62 to i64, !dbg !3285
  %arrayidx102 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom101, !dbg !3285
  %table103 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx102, i32 0, i32 1, !dbg !3286
  store [2 x i16]* %add.ptr100, [2 x i16]** %table103, align 8, !dbg !3287
  %63 = load i32, i32* %i, align 4, !dbg !3288
  %idxprom104 = sext i32 %63 to i64, !dbg !3289
  %arrayidx105 = getelementptr inbounds [2 x i32], [2 x i32]* @huff_quad_vlc_tables_sizes, i64 0, i64 %idxprom104, !dbg !3289
  %64 = load i32, i32* %arrayidx105, align 4, !dbg !3289
  %65 = load i32, i32* %i, align 4, !dbg !3290
  %idxprom106 = sext i32 %65 to i64, !dbg !3291
  %arrayidx107 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom106, !dbg !3291
  %table_allocated108 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx107, i32 0, i32 3, !dbg !3292
  store i32 %64, i32* %table_allocated108, align 4, !dbg !3293
  %66 = load i32, i32* %i, align 4, !dbg !3294
  %idxprom109 = sext i32 %66 to i64, !dbg !3295
  %arrayidx110 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom109, !dbg !3295
  %67 = load i32, i32* %i, align 4, !dbg !3296
  %cmp111 = icmp eq i32 %67, 0, !dbg !3297
  %cond = select i1 %cmp111, i32 7, i32 4, !dbg !3296
  %68 = load i32, i32* %i, align 4, !dbg !3298
  %idxprom113 = sext i32 %68 to i64, !dbg !3299
  %arrayidx114 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @mpa_quad_bits, i64 0, i64 %idxprom113, !dbg !3299
  %arraydecay115 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx114, i32 0, i32 0, !dbg !3299
  %69 = load i32, i32* %i, align 4, !dbg !3300
  %idxprom116 = sext i32 %69 to i64, !dbg !3301
  %arrayidx117 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @mpa_quad_codes, i64 0, i64 %idxprom116, !dbg !3301
  %arraydecay118 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx117, i32 0, i32 0, !dbg !3301
  %call119 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx110, i32 %cond, i32 16, i8* %arraydecay115, i32 1, i32 1, i8* %arraydecay118, i32 1, i32 1, i8* null, i32 0, i32 0, i32 4), !dbg !3302
  %70 = load i32, i32* %i, align 4, !dbg !3303
  %idxprom120 = sext i32 %70 to i64, !dbg !3304
  %arrayidx121 = getelementptr inbounds [2 x i32], [2 x i32]* @huff_quad_vlc_tables_sizes, i64 0, i64 %idxprom120, !dbg !3304
  %71 = load i32, i32* %arrayidx121, align 4, !dbg !3304
  %72 = load i32, i32* %offset, align 4, !dbg !3305
  %add122 = add nsw i32 %72, %71, !dbg !3305
  store i32 %add122, i32* %offset, align 4, !dbg !3305
  br label %for.inc123, !dbg !3306

for.inc123:                                       ; preds = %for.body98
  %73 = load i32, i32* %i, align 4, !dbg !3307
  %inc124 = add nsw i32 %73, 1, !dbg !3307
  store i32 %inc124, i32* %i, align 4, !dbg !3307
  br label %for.cond95, !dbg !3309, !llvm.loop !3310

for.end125:                                       ; preds = %for.cond95
  br label %do.body126, !dbg !3312, !llvm.loop !3313

do.body126:                                       ; preds = %for.end125
  %74 = load i32, i32* %offset, align 4, !dbg !3314
  %conv127 = sext i32 %74 to i64, !dbg !3314
  %cmp128 = icmp eq i64 %conv127, 144, !dbg !3318
  br i1 %cmp128, label %if.end131, label %if.then130, !dbg !3319

if.then130:                                       ; preds = %do.body126
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0), i32 329), !dbg !3320
  call void @abort() #8, !dbg !3323
  unreachable, !dbg !3325

if.end131:                                        ; preds = %do.body126
  br label %do.end132, !dbg !3326

do.end132:                                        ; preds = %if.end131
  store i32 0, i32* %i, align 4, !dbg !3328
  br label %for.cond133, !dbg !3330

for.cond133:                                      ; preds = %for.inc159, %do.end132
  %75 = load i32, i32* %i, align 4, !dbg !3331
  %cmp134 = icmp slt i32 %75, 9, !dbg !3334
  br i1 %cmp134, label %for.body136, label %for.end161, !dbg !3335

for.body136:                                      ; preds = %for.cond133
  store i32 0, i32* %k, align 4, !dbg !3336
  store i32 0, i32* %j, align 4, !dbg !3338
  br label %for.cond137, !dbg !3340

for.cond137:                                      ; preds = %for.inc152, %for.body136
  %76 = load i32, i32* %j, align 4, !dbg !3341
  %cmp138 = icmp slt i32 %76, 22, !dbg !3344
  br i1 %cmp138, label %for.body140, label %for.end154, !dbg !3345

for.body140:                                      ; preds = %for.cond137
  %77 = load i32, i32* %k, align 4, !dbg !3346
  %conv141 = trunc i32 %77 to i16, !dbg !3346
  %78 = load i32, i32* %j, align 4, !dbg !3348
  %idxprom142 = sext i32 %78 to i64, !dbg !3349
  %79 = load i32, i32* %i, align 4, !dbg !3350
  %idxprom143 = sext i32 %79 to i64, !dbg !3349
  %arrayidx144 = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom143, !dbg !3349
  %arrayidx145 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx144, i64 0, i64 %idxprom142, !dbg !3349
  store i16 %conv141, i16* %arrayidx145, align 2, !dbg !3351
  %80 = load i32, i32* %j, align 4, !dbg !3352
  %idxprom146 = sext i32 %80 to i64, !dbg !3353
  %81 = load i32, i32* %i, align 4, !dbg !3354
  %idxprom147 = sext i32 %81 to i64, !dbg !3353
  %arrayidx148 = getelementptr inbounds [9 x [22 x i8]], [9 x [22 x i8]]* @band_size_long, i64 0, i64 %idxprom147, !dbg !3353
  %arrayidx149 = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx148, i64 0, i64 %idxprom146, !dbg !3353
  %82 = load i8, i8* %arrayidx149, align 1, !dbg !3353
  %conv150 = zext i8 %82 to i32, !dbg !3353
  %83 = load i32, i32* %k, align 4, !dbg !3355
  %add151 = add nsw i32 %83, %conv150, !dbg !3355
  store i32 %add151, i32* %k, align 4, !dbg !3355
  br label %for.inc152, !dbg !3356

for.inc152:                                       ; preds = %for.body140
  %84 = load i32, i32* %j, align 4, !dbg !3357
  %inc153 = add nsw i32 %84, 1, !dbg !3357
  store i32 %inc153, i32* %j, align 4, !dbg !3357
  br label %for.cond137, !dbg !3359, !llvm.loop !3360

for.end154:                                       ; preds = %for.cond137
  %85 = load i32, i32* %k, align 4, !dbg !3362
  %conv155 = trunc i32 %85 to i16, !dbg !3362
  %86 = load i32, i32* %i, align 4, !dbg !3363
  %idxprom156 = sext i32 %86 to i64, !dbg !3364
  %arrayidx157 = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom156, !dbg !3364
  %arrayidx158 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx157, i64 0, i64 22, !dbg !3364
  store i16 %conv155, i16* %arrayidx158, align 2, !dbg !3365
  br label %for.inc159, !dbg !3366

for.inc159:                                       ; preds = %for.end154
  %87 = load i32, i32* %i, align 4, !dbg !3367
  %inc160 = add nsw i32 %87, 1, !dbg !3367
  store i32 %inc160, i32* %i, align 4, !dbg !3367
  br label %for.cond133, !dbg !3369, !llvm.loop !3370

for.end161:                                       ; preds = %for.cond133
  call void @mpegaudio_tableinit(), !dbg !3372
  store i32 0, i32* %i, align 4, !dbg !3373
  br label %for.cond162, !dbg !3375

for.cond162:                                      ; preds = %for.inc199, %for.end161
  %88 = load i32, i32* %i, align 4, !dbg !3376
  %cmp163 = icmp slt i32 %88, 4, !dbg !3379
  br i1 %cmp163, label %for.body165, label %for.end201, !dbg !3380

for.body165:                                      ; preds = %for.cond162
  %89 = load i32, i32* %i, align 4, !dbg !3381
  %idxprom166 = sext i32 %89 to i64, !dbg !3384
  %arrayidx167 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom166, !dbg !3384
  %90 = load i32, i32* %arrayidx167, align 4, !dbg !3384
  %cmp168 = icmp slt i32 %90, 0, !dbg !3385
  br i1 %cmp168, label %if.then170, label %if.end198, !dbg !3386

if.then170:                                       ; preds = %for.body165
  store i32 0, i32* %j, align 4, !dbg !3387
  br label %for.cond171, !dbg !3390

for.cond171:                                      ; preds = %for.inc195, %if.then170
  %91 = load i32, i32* %j, align 4, !dbg !3391
  %92 = load i32, i32* %i, align 4, !dbg !3394
  %idxprom172 = sext i32 %92 to i64, !dbg !3395
  %arrayidx173 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom172, !dbg !3395
  %93 = load i32, i32* %arrayidx173, align 4, !dbg !3395
  %sub174 = sub nsw i32 0, %93, !dbg !3396
  %add175 = add nsw i32 %sub174, 1, !dbg !3397
  %shl176 = shl i32 1, %add175, !dbg !3398
  %cmp177 = icmp slt i32 %91, %shl176, !dbg !3399
  br i1 %cmp177, label %for.body179, label %for.end197, !dbg !3400

for.body179:                                      ; preds = %for.cond171
  call void @llvm.dbg.declare(metadata i32* %val1, metadata !3401, metadata !2031), !dbg !3403
  call void @llvm.dbg.declare(metadata i32* %val2, metadata !3404, metadata !2031), !dbg !3405
  call void @llvm.dbg.declare(metadata i32* %val3, metadata !3406, metadata !2031), !dbg !3407
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !3408, metadata !2031), !dbg !3409
  call void @llvm.dbg.declare(metadata i32* %val, metadata !3410, metadata !2031), !dbg !3411
  %94 = load i32, i32* %j, align 4, !dbg !3412
  store i32 %94, i32* %val, align 4, !dbg !3411
  %95 = load i32, i32* %i, align 4, !dbg !3413
  %idxprom180 = sext i32 %95 to i64, !dbg !3414
  %arrayidx181 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_steps, i64 0, i64 %idxprom180, !dbg !3414
  %96 = load i32, i32* %arrayidx181, align 4, !dbg !3414
  store i32 %96, i32* %steps, align 4, !dbg !3415
  %97 = load i32, i32* %val, align 4, !dbg !3416
  %98 = load i32, i32* %steps, align 4, !dbg !3417
  %rem182 = srem i32 %97, %98, !dbg !3418
  store i32 %rem182, i32* %val1, align 4, !dbg !3419
  %99 = load i32, i32* %steps, align 4, !dbg !3420
  %100 = load i32, i32* %val, align 4, !dbg !3421
  %div183 = sdiv i32 %100, %99, !dbg !3421
  store i32 %div183, i32* %val, align 4, !dbg !3421
  %101 = load i32, i32* %val, align 4, !dbg !3422
  %102 = load i32, i32* %steps, align 4, !dbg !3423
  %rem184 = srem i32 %101, %102, !dbg !3424
  store i32 %rem184, i32* %val2, align 4, !dbg !3425
  %103 = load i32, i32* %val, align 4, !dbg !3426
  %104 = load i32, i32* %steps, align 4, !dbg !3427
  %div185 = sdiv i32 %103, %104, !dbg !3428
  store i32 %div185, i32* %val3, align 4, !dbg !3429
  %105 = load i32, i32* %val1, align 4, !dbg !3430
  %106 = load i32, i32* %val2, align 4, !dbg !3431
  %shl186 = shl i32 %106, 4, !dbg !3432
  %add187 = add nsw i32 %105, %shl186, !dbg !3433
  %107 = load i32, i32* %val3, align 4, !dbg !3434
  %shl188 = shl i32 %107, 8, !dbg !3435
  %add189 = add nsw i32 %add187, %shl188, !dbg !3436
  %conv190 = trunc i32 %add189 to i16, !dbg !3430
  %108 = load i32, i32* %j, align 4, !dbg !3437
  %idxprom191 = sext i32 %108 to i64, !dbg !3438
  %109 = load i32, i32* %i, align 4, !dbg !3439
  %idxprom192 = sext i32 %109 to i64, !dbg !3438
  %arrayidx193 = getelementptr inbounds [4 x i16*], [4 x i16*]* @division_tabs, i64 0, i64 %idxprom192, !dbg !3438
  %110 = load i16*, i16** %arrayidx193, align 8, !dbg !3438
  %arrayidx194 = getelementptr inbounds i16, i16* %110, i64 %idxprom191, !dbg !3438
  store i16 %conv190, i16* %arrayidx194, align 2, !dbg !3440
  br label %for.inc195, !dbg !3441

for.inc195:                                       ; preds = %for.body179
  %111 = load i32, i32* %j, align 4, !dbg !3442
  %inc196 = add nsw i32 %111, 1, !dbg !3442
  store i32 %inc196, i32* %j, align 4, !dbg !3442
  br label %for.cond171, !dbg !3444, !llvm.loop !3445

for.end197:                                       ; preds = %for.cond171
  br label %if.end198, !dbg !3447

if.end198:                                        ; preds = %for.end197, %for.body165
  br label %for.inc199, !dbg !3448

for.inc199:                                       ; preds = %if.end198
  %112 = load i32, i32* %i, align 4, !dbg !3449
  %inc200 = add nsw i32 %112, 1, !dbg !3449
  store i32 %inc200, i32* %i, align 4, !dbg !3449
  br label %for.cond162, !dbg !3451, !llvm.loop !3452

for.end201:                                       ; preds = %for.cond162
  store i32 0, i32* %i, align 4, !dbg !3454
  br label %for.cond202, !dbg !3456

for.cond202:                                      ; preds = %for.inc225, %for.end201
  %113 = load i32, i32* %i, align 4, !dbg !3457
  %cmp203 = icmp slt i32 %113, 7, !dbg !3460
  br i1 %cmp203, label %for.body205, label %for.end227, !dbg !3461

for.body205:                                      ; preds = %for.cond202
  call void @llvm.dbg.declare(metadata float* %f, metadata !3462, metadata !2031), !dbg !3464
  call void @llvm.dbg.declare(metadata float* %v, metadata !3465, metadata !2031), !dbg !3466
  %114 = load i32, i32* %i, align 4, !dbg !3467
  %cmp206 = icmp ne i32 %114, 6, !dbg !3469
  br i1 %cmp206, label %if.then208, label %if.else, !dbg !3470

if.then208:                                       ; preds = %for.body205
  %115 = load i32, i32* %i, align 4, !dbg !3471
  %conv209 = sitofp i32 %115 to double, !dbg !3473
  %mul210 = fmul double %conv209, 0x400921FB54442D18, !dbg !3474
  %div211 = fdiv double %mul210, 1.200000e+01, !dbg !3475
  %call212 = call double @tan(double %div211) #9, !dbg !3476
  %conv213 = fptrunc double %call212 to float, !dbg !3476
  store float %conv213, float* %f, align 4, !dbg !3477
  %116 = load float, float* %f, align 4, !dbg !3478
  %conv214 = fpext float %116 to double, !dbg !3478
  %117 = load float, float* %f, align 4, !dbg !3479
  %conv215 = fpext float %117 to double, !dbg !3479
  %add216 = fadd double 1.000000e+00, %conv215, !dbg !3480
  %div217 = fdiv double %conv214, %add216, !dbg !3481
  %conv218 = fptrunc double %div217 to float, !dbg !3482
  store float %conv218, float* %v, align 4, !dbg !3483
  br label %if.end219, !dbg !3484

if.else:                                          ; preds = %for.body205
  store float 1.000000e+00, float* %v, align 4, !dbg !3485
  br label %if.end219

if.end219:                                        ; preds = %if.else, %if.then208
  %118 = load float, float* %v, align 4, !dbg !3487
  %119 = load i32, i32* %i, align 4, !dbg !3488
  %idxprom220 = sext i32 %119 to i64, !dbg !3489
  %arrayidx221 = getelementptr inbounds [16 x float], [16 x float]* getelementptr inbounds ([2 x [16 x float]], [2 x [16 x float]]* @is_table, i64 0, i64 0), i64 0, i64 %idxprom220, !dbg !3489
  store float %118, float* %arrayidx221, align 4, !dbg !3490
  %120 = load float, float* %v, align 4, !dbg !3491
  %121 = load i32, i32* %i, align 4, !dbg !3492
  %sub222 = sub nsw i32 6, %121, !dbg !3493
  %idxprom223 = sext i32 %sub222 to i64, !dbg !3494
  %arrayidx224 = getelementptr inbounds [16 x float], [16 x float]* getelementptr inbounds ([2 x [16 x float]], [2 x [16 x float]]* @is_table, i64 0, i64 1), i64 0, i64 %idxprom223, !dbg !3494
  store float %120, float* %arrayidx224, align 4, !dbg !3495
  br label %for.inc225, !dbg !3496

for.inc225:                                       ; preds = %if.end219
  %122 = load i32, i32* %i, align 4, !dbg !3497
  %inc226 = add nsw i32 %122, 1, !dbg !3497
  store i32 %inc226, i32* %i, align 4, !dbg !3497
  br label %for.cond202, !dbg !3499, !llvm.loop !3500

for.end227:                                       ; preds = %for.cond202
  store i32 7, i32* %i, align 4, !dbg !3502
  br label %for.cond228, !dbg !3504

for.cond228:                                      ; preds = %for.inc236, %for.end227
  %123 = load i32, i32* %i, align 4, !dbg !3505
  %cmp229 = icmp slt i32 %123, 16, !dbg !3508
  br i1 %cmp229, label %for.body231, label %for.end238, !dbg !3509

for.body231:                                      ; preds = %for.cond228
  %124 = load i32, i32* %i, align 4, !dbg !3510
  %idxprom232 = sext i32 %124 to i64, !dbg !3511
  %arrayidx233 = getelementptr inbounds [16 x float], [16 x float]* getelementptr inbounds ([2 x [16 x float]], [2 x [16 x float]]* @is_table, i64 0, i64 1), i64 0, i64 %idxprom232, !dbg !3511
  store float 0.000000e+00, float* %arrayidx233, align 4, !dbg !3512
  %125 = load i32, i32* %i, align 4, !dbg !3513
  %idxprom234 = sext i32 %125 to i64, !dbg !3514
  %arrayidx235 = getelementptr inbounds [16 x float], [16 x float]* getelementptr inbounds ([2 x [16 x float]], [2 x [16 x float]]* @is_table, i64 0, i64 0), i64 0, i64 %idxprom234, !dbg !3514
  store float 0.000000e+00, float* %arrayidx235, align 4, !dbg !3515
  br label %for.inc236, !dbg !3514

for.inc236:                                       ; preds = %for.body231
  %126 = load i32, i32* %i, align 4, !dbg !3516
  %inc237 = add nsw i32 %126, 1, !dbg !3516
  store i32 %inc237, i32* %i, align 4, !dbg !3516
  br label %for.cond228, !dbg !3518, !llvm.loop !3519

for.end238:                                       ; preds = %for.cond228
  store i32 0, i32* %i, align 4, !dbg !3521
  br label %for.cond239, !dbg !3523

for.cond239:                                      ; preds = %for.inc274, %for.end238
  %127 = load i32, i32* %i, align 4, !dbg !3524
  %cmp240 = icmp slt i32 %127, 16, !dbg !3527
  br i1 %cmp240, label %for.body242, label %for.end276, !dbg !3528

for.body242:                                      ; preds = %for.cond239
  call void @llvm.dbg.declare(metadata double* %f243, metadata !3529, metadata !2031), !dbg !3531
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3532, metadata !2031), !dbg !3533
  call void @llvm.dbg.declare(metadata i32* %k244, metadata !3534, metadata !2031), !dbg !3535
  store i32 0, i32* %j, align 4, !dbg !3536
  br label %for.cond245, !dbg !3538

for.cond245:                                      ; preds = %for.inc271, %for.body242
  %128 = load i32, i32* %j, align 4, !dbg !3539
  %cmp246 = icmp slt i32 %128, 2, !dbg !3542
  br i1 %cmp246, label %for.body248, label %for.end273, !dbg !3543

for.body248:                                      ; preds = %for.cond245
  %129 = load i32, i32* %j, align 4, !dbg !3544
  %add249 = add nsw i32 %129, 1, !dbg !3546
  %sub250 = sub nsw i32 0, %add249, !dbg !3547
  %130 = load i32, i32* %i, align 4, !dbg !3548
  %add251 = add nsw i32 %130, 1, !dbg !3549
  %shr = ashr i32 %add251, 1, !dbg !3550
  %mul252 = mul nsw i32 %sub250, %shr, !dbg !3551
  store i32 %mul252, i32* %e, align 4, !dbg !3552
  %131 = load i32, i32* %e, align 4, !dbg !3553
  %conv253 = sitofp i32 %131 to double, !dbg !3553
  %div254 = fdiv double %conv253, 4.000000e+00, !dbg !3554
  %call255 = call double @exp2(double %div254) #9, !dbg !3555
  store double %call255, double* %f243, align 8, !dbg !3556
  %132 = load i32, i32* %i, align 4, !dbg !3557
  %and = and i32 %132, 1, !dbg !3558
  store i32 %and, i32* %k244, align 4, !dbg !3559
  %133 = load double, double* %f243, align 8, !dbg !3560
  %conv256 = fptrunc double %133 to float, !dbg !3561
  %134 = load i32, i32* %i, align 4, !dbg !3562
  %idxprom257 = sext i32 %134 to i64, !dbg !3563
  %135 = load i32, i32* %k244, align 4, !dbg !3564
  %xor = xor i32 %135, 1, !dbg !3565
  %idxprom258 = sext i32 %xor to i64, !dbg !3563
  %136 = load i32, i32* %j, align 4, !dbg !3566
  %idxprom259 = sext i32 %136 to i64, !dbg !3563
  %arrayidx260 = getelementptr inbounds [2 x [2 x [16 x float]]], [2 x [2 x [16 x float]]]* @is_table_lsf, i64 0, i64 %idxprom259, !dbg !3563
  %arrayidx261 = getelementptr inbounds [2 x [16 x float]], [2 x [16 x float]]* %arrayidx260, i64 0, i64 %idxprom258, !dbg !3563
  %arrayidx262 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx261, i64 0, i64 %idxprom257, !dbg !3563
  store float %conv256, float* %arrayidx262, align 4, !dbg !3567
  %137 = load i32, i32* %i, align 4, !dbg !3568
  %idxprom263 = sext i32 %137 to i64, !dbg !3569
  %138 = load i32, i32* %k244, align 4, !dbg !3570
  %idxprom264 = sext i32 %138 to i64, !dbg !3569
  %139 = load i32, i32* %j, align 4, !dbg !3571
  %idxprom265 = sext i32 %139 to i64, !dbg !3569
  %arrayidx266 = getelementptr inbounds [2 x [2 x [16 x float]]], [2 x [2 x [16 x float]]]* @is_table_lsf, i64 0, i64 %idxprom265, !dbg !3569
  %arrayidx267 = getelementptr inbounds [2 x [16 x float]], [2 x [16 x float]]* %arrayidx266, i64 0, i64 %idxprom264, !dbg !3569
  %arrayidx268 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx267, i64 0, i64 %idxprom263, !dbg !3569
  store float 1.000000e+00, float* %arrayidx268, align 4, !dbg !3572
  br label %do.body269, !dbg !3573, !llvm.loop !3574

do.body269:                                       ; preds = %for.body248
  br label %do.end270, !dbg !3575

do.end270:                                        ; preds = %do.body269
  br label %for.inc271, !dbg !3578

for.inc271:                                       ; preds = %do.end270
  %140 = load i32, i32* %j, align 4, !dbg !3579
  %inc272 = add nsw i32 %140, 1, !dbg !3579
  store i32 %inc272, i32* %j, align 4, !dbg !3579
  br label %for.cond245, !dbg !3581, !llvm.loop !3582

for.end273:                                       ; preds = %for.cond245
  br label %for.inc274, !dbg !3584

for.inc274:                                       ; preds = %for.end273
  %141 = load i32, i32* %i, align 4, !dbg !3585
  %inc275 = add nsw i32 %141, 1, !dbg !3585
  store i32 %inc275, i32* %i, align 4, !dbg !3585
  br label %for.cond239, !dbg !3587, !llvm.loop !3588

for.end276:                                       ; preds = %for.cond239
  store i32 0, i32* %i, align 4, !dbg !3590
  br label %for.cond277, !dbg !3592

for.cond277:                                      ; preds = %for.inc307, %for.end276
  %142 = load i32, i32* %i, align 4, !dbg !3593
  %cmp278 = icmp slt i32 %142, 8, !dbg !3596
  br i1 %cmp278, label %for.body280, label %for.end309, !dbg !3597

for.body280:                                      ; preds = %for.cond277
  call void @llvm.dbg.declare(metadata double* %ci, metadata !3598, metadata !2031), !dbg !3600
  call void @llvm.dbg.declare(metadata double* %cs, metadata !3601, metadata !2031), !dbg !3602
  call void @llvm.dbg.declare(metadata double* %ca, metadata !3603, metadata !2031), !dbg !3604
  %143 = load i32, i32* %i, align 4, !dbg !3605
  %idxprom281 = sext i32 %143 to i64, !dbg !3606
  %arrayidx282 = getelementptr inbounds [8 x float], [8 x float]* @ci_table, i64 0, i64 %idxprom281, !dbg !3606
  %144 = load float, float* %arrayidx282, align 4, !dbg !3606
  %conv283 = fpext float %144 to double, !dbg !3606
  store double %conv283, double* %ci, align 8, !dbg !3607
  %145 = load double, double* %ci, align 8, !dbg !3608
  %146 = load double, double* %ci, align 8, !dbg !3609
  %mul284 = fmul double %145, %146, !dbg !3610
  %add285 = fadd double 1.000000e+00, %mul284, !dbg !3611
  %call286 = call double @sqrt(double %add285) #9, !dbg !3612
  %div287 = fdiv double 1.000000e+00, %call286, !dbg !3613
  store double %div287, double* %cs, align 8, !dbg !3614
  %147 = load double, double* %cs, align 8, !dbg !3615
  %148 = load double, double* %ci, align 8, !dbg !3616
  %mul288 = fmul double %147, %148, !dbg !3617
  store double %mul288, double* %ca, align 8, !dbg !3618
  %149 = load double, double* %cs, align 8, !dbg !3619
  %conv289 = fptrunc double %149 to float, !dbg !3619
  %150 = load i32, i32* %i, align 4, !dbg !3620
  %idxprom290 = sext i32 %150 to i64, !dbg !3621
  %arrayidx291 = getelementptr inbounds [8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 %idxprom290, !dbg !3621
  %arrayidx292 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx291, i64 0, i64 0, !dbg !3621
  store float %conv289, float* %arrayidx292, align 16, !dbg !3622
  %151 = load double, double* %ca, align 8, !dbg !3623
  %conv293 = fptrunc double %151 to float, !dbg !3623
  %152 = load i32, i32* %i, align 4, !dbg !3624
  %idxprom294 = sext i32 %152 to i64, !dbg !3625
  %arrayidx295 = getelementptr inbounds [8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 %idxprom294, !dbg !3625
  %arrayidx296 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx295, i64 0, i64 1, !dbg !3625
  store float %conv293, float* %arrayidx296, align 4, !dbg !3626
  %153 = load double, double* %ca, align 8, !dbg !3627
  %154 = load double, double* %cs, align 8, !dbg !3628
  %add297 = fadd double %153, %154, !dbg !3629
  %conv298 = fptrunc double %add297 to float, !dbg !3627
  %155 = load i32, i32* %i, align 4, !dbg !3630
  %idxprom299 = sext i32 %155 to i64, !dbg !3631
  %arrayidx300 = getelementptr inbounds [8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 %idxprom299, !dbg !3631
  %arrayidx301 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx300, i64 0, i64 2, !dbg !3631
  store float %conv298, float* %arrayidx301, align 8, !dbg !3632
  %156 = load double, double* %ca, align 8, !dbg !3633
  %157 = load double, double* %cs, align 8, !dbg !3634
  %sub302 = fsub double %156, %157, !dbg !3635
  %conv303 = fptrunc double %sub302 to float, !dbg !3633
  %158 = load i32, i32* %i, align 4, !dbg !3636
  %idxprom304 = sext i32 %158 to i64, !dbg !3637
  %arrayidx305 = getelementptr inbounds [8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 %idxprom304, !dbg !3637
  %arrayidx306 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx305, i64 0, i64 3, !dbg !3637
  store float %conv303, float* %arrayidx306, align 4, !dbg !3638
  br label %for.inc307, !dbg !3639

for.inc307:                                       ; preds = %for.body280
  %159 = load i32, i32* %i, align 4, !dbg !3640
  %inc308 = add nsw i32 %159, 1, !dbg !3640
  store i32 %inc308, i32* %i, align 4, !dbg !3640
  br label %for.cond277, !dbg !3642, !llvm.loop !3643

for.end309:                                       ; preds = %for.cond277
  ret void, !dbg !3645
}

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #3

declare void @ff_mpadsp_init(%struct.MPADSPContext*) #3

declare void @ff_mpa_synth_init_float(float*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: cold nounwind optsize uwtable
define internal void @mpegaudio_tableinit() #0 !dbg !1791 {
entry:
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  %exponent = alloca i32, align 4
  %exp2_base = alloca double, align 8
  %exp2_val = alloca double, align 8
  %pow43_val = alloca double, align 8
  %f = alloca double, align 8
  %fm = alloca double, align 8
  %e = alloca i32, align 4
  %m = alloca i32, align 4
  %value6 = alloca double, align 8
  %f48 = alloca double, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3646, metadata !2031), !dbg !3647
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3648, metadata !2031), !dbg !3649
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !3650, metadata !2031), !dbg !3651
  call void @llvm.dbg.declare(metadata double* %exp2_base, metadata !3652, metadata !2031), !dbg !3653
  store double 0x3B70000000000000, double* %exp2_base, align 8, !dbg !3653
  call void @llvm.dbg.declare(metadata double* %exp2_val, metadata !3654, metadata !2031), !dbg !3655
  call void @llvm.dbg.declare(metadata double* %pow43_val, metadata !3656, metadata !2031), !dbg !3657
  store double 0.000000e+00, double* %pow43_val, align 8, !dbg !3657
  store i32 0, i32* %i, align 4, !dbg !3658
  br label %for.cond, !dbg !3660

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3661
  %cmp = icmp slt i32 %0, 16, !dbg !3664
  br i1 %cmp, label %for.body, label %for.end, !dbg !3665

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3666
  %conv = sitofp i32 %1 to double, !dbg !3666
  %2 = load i32, i32* %i, align 4, !dbg !3667
  %conv1 = sitofp i32 %2 to double, !dbg !3667
  %call = call double @cbrt(double %conv1) #9, !dbg !3668
  %mul = fmul double %conv, %call, !dbg !3669
  %3 = load i32, i32* %i, align 4, !dbg !3670
  %idxprom = sext i32 %3 to i64, !dbg !3671
  %arrayidx = getelementptr inbounds [16 x double], [16 x double]* @mpegaudio_tableinit.pow43_lut, i64 0, i64 %idxprom, !dbg !3671
  store double %mul, double* %arrayidx, align 8, !dbg !3672
  br label %for.inc, !dbg !3671

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !3673
  %inc = add nsw i32 %4, 1, !dbg !3673
  store i32 %inc, i32* %i, align 4, !dbg !3673
  br label %for.cond, !dbg !3675, !llvm.loop !3676

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %i, align 4, !dbg !3678
  br label %for.cond2, !dbg !3680

for.cond2:                                        ; preds = %for.inc26, %for.end
  %5 = load i32, i32* %i, align 4, !dbg !3681
  %cmp3 = icmp slt i32 %5, 32828, !dbg !3684
  br i1 %cmp3, label %for.body5, label %for.end28, !dbg !3685

for.body5:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata double* %f, metadata !3686, metadata !2031), !dbg !3688
  call void @llvm.dbg.declare(metadata double* %fm, metadata !3689, metadata !2031), !dbg !3690
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3691, metadata !2031), !dbg !3692
  call void @llvm.dbg.declare(metadata i32* %m, metadata !3693, metadata !2031), !dbg !3694
  call void @llvm.dbg.declare(metadata double* %value6, metadata !3695, metadata !2031), !dbg !3696
  %6 = load i32, i32* %i, align 4, !dbg !3697
  %div = sdiv i32 %6, 4, !dbg !3698
  %conv7 = sitofp i32 %div to double, !dbg !3697
  store double %conv7, double* %value6, align 8, !dbg !3696
  %7 = load i32, i32* %i, align 4, !dbg !3699
  %and = and i32 %7, 3, !dbg !3701
  %cmp8 = icmp eq i32 %and, 0, !dbg !3702
  br i1 %cmp8, label %if.then, label %if.end, !dbg !3703

if.then:                                          ; preds = %for.body5
  %8 = load double, double* %value6, align 8, !dbg !3704
  %div10 = fdiv double %8, 1.759000e+00, !dbg !3705
  %9 = load double, double* %value6, align 8, !dbg !3706
  %call11 = call double @cbrt(double %9) #9, !dbg !3707
  %mul12 = fmul double %div10, %call11, !dbg !3708
  store double %mul12, double* %pow43_val, align 8, !dbg !3709
  br label %if.end, !dbg !3710

if.end:                                           ; preds = %if.then, %for.body5
  %10 = load double, double* %pow43_val, align 8, !dbg !3711
  %11 = load i32, i32* %i, align 4, !dbg !3712
  %and13 = and i32 %11, 3, !dbg !3713
  %idxprom14 = sext i32 %and13 to i64, !dbg !3714
  %arrayidx15 = getelementptr inbounds [4 x double], [4 x double]* @mpegaudio_tableinit.exp2_lut, i64 0, i64 %idxprom14, !dbg !3714
  %12 = load double, double* %arrayidx15, align 8, !dbg !3714
  %mul16 = fmul double %10, %12, !dbg !3715
  store double %mul16, double* %f, align 8, !dbg !3716
  %13 = load double, double* %f, align 8, !dbg !3717
  %call17 = call double @frexp(double %13, i32* %e) #9, !dbg !3718
  store double %call17, double* %fm, align 8, !dbg !3719
  %14 = load double, double* %fm, align 8, !dbg !3720
  %mul18 = fmul double %14, 0x41E0000000000000, !dbg !3721
  %call19 = call i64 @llrint(double %mul18) #9, !dbg !3722
  %conv20 = trunc i64 %call19 to i32, !dbg !3722
  store i32 %conv20, i32* %m, align 4, !dbg !3723
  %15 = load i32, i32* %e, align 4, !dbg !3724
  %add = add nsw i32 %15, -103, !dbg !3724
  store i32 %add, i32* %e, align 4, !dbg !3724
  %16 = load i32, i32* %m, align 4, !dbg !3725
  %17 = load i32, i32* %i, align 4, !dbg !3726
  %idxprom21 = sext i32 %17 to i64, !dbg !3727
  %arrayidx22 = getelementptr inbounds [32828 x i32], [32828 x i32]* @table_4_3_value, i64 0, i64 %idxprom21, !dbg !3727
  store i32 %16, i32* %arrayidx22, align 4, !dbg !3728
  %18 = load i32, i32* %e, align 4, !dbg !3729
  %sub = sub nsw i32 0, %18, !dbg !3730
  %conv23 = trunc i32 %sub to i8, !dbg !3730
  %19 = load i32, i32* %i, align 4, !dbg !3731
  %idxprom24 = sext i32 %19 to i64, !dbg !3732
  %arrayidx25 = getelementptr inbounds [32828 x i8], [32828 x i8]* @table_4_3_exp, i64 0, i64 %idxprom24, !dbg !3732
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !3733
  br label %for.inc26, !dbg !3734

for.inc26:                                        ; preds = %if.end
  %20 = load i32, i32* %i, align 4, !dbg !3735
  %inc27 = add nsw i32 %20, 1, !dbg !3735
  store i32 %inc27, i32* %i, align 4, !dbg !3735
  br label %for.cond2, !dbg !3737, !llvm.loop !3738

for.end28:                                        ; preds = %for.cond2
  store i32 0, i32* %exponent, align 4, !dbg !3740
  br label %for.cond29, !dbg !3742

for.cond29:                                       ; preds = %for.inc78, %for.end28
  %21 = load i32, i32* %exponent, align 4, !dbg !3743
  %cmp30 = icmp slt i32 %21, 512, !dbg !3746
  br i1 %cmp30, label %for.body32, label %for.end80, !dbg !3747

for.body32:                                       ; preds = %for.cond29
  %22 = load i32, i32* %exponent, align 4, !dbg !3748
  %tobool = icmp ne i32 %22, 0, !dbg !3748
  br i1 %tobool, label %land.lhs.true, label %if.end38, !dbg !3751

land.lhs.true:                                    ; preds = %for.body32
  %23 = load i32, i32* %exponent, align 4, !dbg !3752
  %and33 = and i32 %23, 3, !dbg !3754
  %cmp34 = icmp eq i32 %and33, 0, !dbg !3755
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !3756

if.then36:                                        ; preds = %land.lhs.true
  %24 = load double, double* %exp2_base, align 8, !dbg !3757
  %mul37 = fmul double %24, 2.000000e+00, !dbg !3757
  store double %mul37, double* %exp2_base, align 8, !dbg !3757
  br label %if.end38, !dbg !3758

if.end38:                                         ; preds = %if.then36, %land.lhs.true, %for.body32
  %25 = load double, double* %exp2_base, align 8, !dbg !3759
  %26 = load i32, i32* %exponent, align 4, !dbg !3760
  %and39 = and i32 %26, 3, !dbg !3761
  %idxprom40 = sext i32 %and39 to i64, !dbg !3762
  %arrayidx41 = getelementptr inbounds [4 x double], [4 x double]* @mpegaudio_tableinit.exp2_lut, i64 0, i64 %idxprom40, !dbg !3762
  %27 = load double, double* %arrayidx41, align 8, !dbg !3762
  %mul42 = fmul double %25, %27, !dbg !3763
  %div43 = fdiv double %mul42, 1.759000e+00, !dbg !3764
  store double %div43, double* %exp2_val, align 8, !dbg !3765
  store i32 0, i32* %value, align 4, !dbg !3766
  br label %for.cond44, !dbg !3768

for.cond44:                                       ; preds = %for.inc65, %if.end38
  %28 = load i32, i32* %value, align 4, !dbg !3769
  %cmp45 = icmp slt i32 %28, 16, !dbg !3772
  br i1 %cmp45, label %for.body47, label %for.end67, !dbg !3773

for.body47:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata double* %f48, metadata !3774, metadata !2031), !dbg !3776
  %29 = load i32, i32* %value, align 4, !dbg !3777
  %idxprom49 = sext i32 %29 to i64, !dbg !3778
  %arrayidx50 = getelementptr inbounds [16 x double], [16 x double]* @mpegaudio_tableinit.pow43_lut, i64 0, i64 %idxprom49, !dbg !3778
  %30 = load double, double* %arrayidx50, align 8, !dbg !3778
  %31 = load double, double* %exp2_val, align 8, !dbg !3779
  %mul51 = fmul double %30, %31, !dbg !3780
  store double %mul51, double* %f48, align 8, !dbg !3776
  %32 = load double, double* %f48, align 8, !dbg !3781
  %cmp52 = fcmp olt double %32, 0x41EFFFFFFFE00000, !dbg !3782
  br i1 %cmp52, label %cond.true, label %cond.false, !dbg !3781

cond.true:                                        ; preds = %for.body47
  %33 = load double, double* %f48, align 8, !dbg !3783
  %call54 = call i64 @llrint(double %33) #9, !dbg !3785
  br label %cond.end, !dbg !3786

cond.false:                                       ; preds = %for.body47
  br label %cond.end, !dbg !3787

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call54, %cond.true ], [ 4294967295, %cond.false ], !dbg !3789
  %conv55 = trunc i64 %cond to i32, !dbg !3791
  %34 = load i32, i32* %value, align 4, !dbg !3792
  %idxprom56 = sext i32 %34 to i64, !dbg !3793
  %35 = load i32, i32* %exponent, align 4, !dbg !3794
  %idxprom57 = sext i32 %35 to i64, !dbg !3793
  %arrayidx58 = getelementptr inbounds [512 x [16 x i32]], [512 x [16 x i32]]* @expval_table_fixed, i64 0, i64 %idxprom57, !dbg !3793
  %arrayidx59 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx58, i64 0, i64 %idxprom56, !dbg !3793
  store i32 %conv55, i32* %arrayidx59, align 4, !dbg !3795
  %36 = load double, double* %f48, align 8, !dbg !3796
  %conv60 = fptrunc double %36 to float, !dbg !3796
  %37 = load i32, i32* %value, align 4, !dbg !3797
  %idxprom61 = sext i32 %37 to i64, !dbg !3798
  %38 = load i32, i32* %exponent, align 4, !dbg !3799
  %idxprom62 = sext i32 %38 to i64, !dbg !3798
  %arrayidx63 = getelementptr inbounds [512 x [16 x float]], [512 x [16 x float]]* @expval_table_float, i64 0, i64 %idxprom62, !dbg !3798
  %arrayidx64 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx63, i64 0, i64 %idxprom61, !dbg !3798
  store float %conv60, float* %arrayidx64, align 4, !dbg !3800
  br label %for.inc65, !dbg !3801

for.inc65:                                        ; preds = %cond.end
  %39 = load i32, i32* %value, align 4, !dbg !3802
  %inc66 = add nsw i32 %39, 1, !dbg !3802
  store i32 %inc66, i32* %value, align 4, !dbg !3802
  br label %for.cond44, !dbg !3804, !llvm.loop !3805

for.end67:                                        ; preds = %for.cond44
  %40 = load i32, i32* %exponent, align 4, !dbg !3807
  %idxprom68 = sext i32 %40 to i64, !dbg !3808
  %arrayidx69 = getelementptr inbounds [512 x [16 x i32]], [512 x [16 x i32]]* @expval_table_fixed, i64 0, i64 %idxprom68, !dbg !3808
  %arrayidx70 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx69, i64 0, i64 1, !dbg !3808
  %41 = load i32, i32* %arrayidx70, align 4, !dbg !3808
  %42 = load i32, i32* %exponent, align 4, !dbg !3809
  %idxprom71 = sext i32 %42 to i64, !dbg !3810
  %arrayidx72 = getelementptr inbounds [512 x i32], [512 x i32]* @exp_table_fixed, i64 0, i64 %idxprom71, !dbg !3810
  store i32 %41, i32* %arrayidx72, align 4, !dbg !3811
  %43 = load i32, i32* %exponent, align 4, !dbg !3812
  %idxprom73 = sext i32 %43 to i64, !dbg !3813
  %arrayidx74 = getelementptr inbounds [512 x [16 x float]], [512 x [16 x float]]* @expval_table_float, i64 0, i64 %idxprom73, !dbg !3813
  %arrayidx75 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx74, i64 0, i64 1, !dbg !3813
  %44 = load float, float* %arrayidx75, align 4, !dbg !3813
  %45 = load i32, i32* %exponent, align 4, !dbg !3814
  %idxprom76 = sext i32 %45 to i64, !dbg !3815
  %arrayidx77 = getelementptr inbounds [512 x float], [512 x float]* @exp_table_float, i64 0, i64 %idxprom76, !dbg !3815
  store float %44, float* %arrayidx77, align 4, !dbg !3816
  br label %for.inc78, !dbg !3817

for.inc78:                                        ; preds = %for.end67
  %46 = load i32, i32* %exponent, align 4, !dbg !3818
  %inc79 = add nsw i32 %46, 1, !dbg !3818
  store i32 %inc79, i32* %exponent, align 4, !dbg !3818
  br label %for.cond29, !dbg !3820, !llvm.loop !3821

for.end80:                                        ; preds = %for.cond29
  ret void, !dbg !3823
}

; Function Attrs: nounwind
declare double @tan(double) #6

; Function Attrs: nounwind
declare double @exp2(double) #6

; Function Attrs: nounwind
declare double @sqrt(double) #6

; Function Attrs: nounwind
declare double @cbrt(double) #6

; Function Attrs: nounwind
declare double @frexp(double, i32*) #6

; Function Attrs: nounwind
declare i64 @llrint(double) #6

declare i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_frame(%struct.MPADecodeContext* %s, float** %samples, i8* %buf, i32 %buf_size) #1 !dbg !3824 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %samples.addr = alloca float**, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %nb_frames = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %samples_ptr = alloca float*, align 8
  %sample_stride = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !3827, metadata !2031), !dbg !3828
  store float** %samples, float*** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %samples.addr, metadata !3829, metadata !2031), !dbg !3830
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !3831, metadata !2031), !dbg !3832
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !3833, metadata !2031), !dbg !3834
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3835, metadata !2031), !dbg !3836
  call void @llvm.dbg.declare(metadata i32* %nb_frames, metadata !3837, metadata !2031), !dbg !3838
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3839, metadata !2031), !dbg !3840
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3841, metadata !2031), !dbg !3842
  call void @llvm.dbg.declare(metadata float** %samples_ptr, metadata !3843, metadata !2031), !dbg !3844
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3845
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 14, !dbg !3846
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !3847
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 4, !dbg !3848
  %2 = load i32, i32* %buf_size.addr, align 4, !dbg !3849
  %sub = sub nsw i32 %2, 4, !dbg !3850
  %mul = mul nsw i32 %sub, 8, !dbg !3851
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %add.ptr, i32 %mul), !dbg !3852
  %3 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3853
  %error_protection = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %3, i32 0, i32 1, !dbg !3855
  %4 = load i32, i32* %error_protection, align 4, !dbg !3855
  %tobool = icmp ne i32 %4, 0, !dbg !3853
  br i1 %tobool, label %if.then, label %if.end, !dbg !3856

if.then:                                          ; preds = %entry
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3857
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 14, !dbg !3858
  call void @skip_bits(%struct.GetBitContext* %gb1, i32 16), !dbg !3859
  br label %if.end, !dbg !3859

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3860
  %layer = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 2, !dbg !3861
  %7 = load i32, i32* %layer, align 8, !dbg !3861
  switch i32 %7, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb7
  ], !dbg !3862

sw.bb:                                            ; preds = %if.end
  %8 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3863
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %8, i32 0, i32 26, !dbg !3865
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !3865
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 85, !dbg !3866
  store i32 384, i32* %frame_size, align 4, !dbg !3867
  %10 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3868
  %call2 = call i32 @mp_decode_layer1(%struct.MPADecodeContext* %10), !dbg !3869
  store i32 %call2, i32* %nb_frames, align 4, !dbg !3870
  br label %sw.epilog, !dbg !3871

sw.bb3:                                           ; preds = %if.end
  %11 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3872
  %avctx4 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %11, i32 0, i32 26, !dbg !3873
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx4, align 16, !dbg !3873
  %frame_size5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 85, !dbg !3874
  store i32 1152, i32* %frame_size5, align 4, !dbg !3875
  %13 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3876
  %call6 = call i32 @mp_decode_layer2(%struct.MPADecodeContext* %13), !dbg !3877
  store i32 %call6, i32* %nb_frames, align 4, !dbg !3878
  br label %sw.epilog, !dbg !3879

sw.bb7:                                           ; preds = %if.end
  %14 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3880
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %14, i32 0, i32 9, !dbg !3881
  %15 = load i32, i32* %lsf, align 4, !dbg !3881
  %tobool8 = icmp ne i32 %15, 0, !dbg !3880
  %cond = select i1 %tobool8, i32 576, i32 1152, !dbg !3880
  %16 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3882
  %avctx9 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %16, i32 0, i32 26, !dbg !3883
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 16, !dbg !3883
  %frame_size10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 85, !dbg !3884
  store i32 %cond, i32* %frame_size10, align 4, !dbg !3885
  br label %sw.default, !dbg !3882

sw.default:                                       ; preds = %if.end, %sw.bb7
  %18 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3886
  %call11 = call i32 @mp_decode_layer3(%struct.MPADecodeContext* %18), !dbg !3887
  store i32 %call11, i32* %nb_frames, align 4, !dbg !3888
  %19 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3889
  %last_buf_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %19, i32 0, i32 11, !dbg !3890
  store i32 0, i32* %last_buf_size, align 32, !dbg !3891
  %20 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3892
  %in_gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %20, i32 0, i32 15, !dbg !3894
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb, i32 0, i32 0, !dbg !3895
  %21 = load i8*, i8** %buffer, align 16, !dbg !3895
  %tobool12 = icmp ne i8* %21, null, !dbg !3892
  br i1 %tobool12, label %if.then13, label %if.end35, !dbg !3896

if.then13:                                        ; preds = %sw.default
  %22 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3897
  %gb14 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %22, i32 0, i32 14, !dbg !3899
  %call15 = call i8* @align_get_bits(%struct.GetBitContext* %gb14), !dbg !3900
  %23 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3901
  %gb16 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %23, i32 0, i32 14, !dbg !3902
  %call17 = call i32 @get_bits_left(%struct.GetBitContext* %gb16), !dbg !3903
  %shr = ashr i32 %call17, 3, !dbg !3904
  %24 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3905
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %24, i32 0, i32 12, !dbg !3906
  %25 = load i32, i32* %extrasize, align 4, !dbg !3906
  %sub18 = sub nsw i32 %shr, %25, !dbg !3907
  store i32 %sub18, i32* %i, align 4, !dbg !3908
  %26 = load i32, i32* %i, align 4, !dbg !3909
  %cmp = icmp sge i32 %26, 0, !dbg !3911
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3912

land.lhs.true:                                    ; preds = %if.then13
  %27 = load i32, i32* %i, align 4, !dbg !3913
  %cmp19 = icmp sle i32 %27, 512, !dbg !3915
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !3916

if.then20:                                        ; preds = %land.lhs.true
  %28 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3917
  %last_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %28, i32 0, i32 10, !dbg !3919
  %arraydecay = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf, i32 0, i32 0, !dbg !3920
  %29 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3921
  %gb21 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %29, i32 0, i32 14, !dbg !3922
  %buffer22 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb21, i32 0, i32 0, !dbg !3923
  %30 = load i8*, i8** %buffer22, align 16, !dbg !3923
  %31 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3924
  %gb23 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %31, i32 0, i32 14, !dbg !3925
  %call24 = call i32 @get_bits_count(%struct.GetBitContext* %gb23), !dbg !3926
  %shr25 = ashr i32 %call24, 3, !dbg !3927
  %idx.ext = sext i32 %shr25 to i64, !dbg !3928
  %add.ptr26 = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !3928
  %32 = load i32, i32* %i, align 4, !dbg !3929
  %conv = sext i32 %32 to i64, !dbg !3929
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %arraydecay, i8* %add.ptr26, i64 %conv, i32 1, i1 false), !dbg !3930
  %33 = load i32, i32* %i, align 4, !dbg !3932
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3933
  %last_buf_size27 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %34, i32 0, i32 11, !dbg !3934
  store i32 %33, i32* %last_buf_size27, align 32, !dbg !3935
  br label %if.end29, !dbg !3936

if.else:                                          ; preds = %land.lhs.true, %if.then13
  %35 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3937
  %avctx28 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %35, i32 0, i32 26, !dbg !3938
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx28, align 16, !dbg !3938
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !3937
  %38 = load i32, i32* %i, align 4, !dbg !3939
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0), i32 %38), !dbg !3940
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then20
  %39 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3941
  %gb30 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %39, i32 0, i32 14, !dbg !3942
  %40 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3943
  %in_gb31 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %40, i32 0, i32 15, !dbg !3944
  %41 = bitcast %struct.GetBitContext* %gb30 to i8*, !dbg !3944
  %42 = bitcast %struct.GetBitContext* %in_gb31 to i8*, !dbg !3944
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 32, i32 16, i1 false), !dbg !3944
  %43 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3945
  %in_gb32 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %43, i32 0, i32 15, !dbg !3946
  %buffer33 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb32, i32 0, i32 0, !dbg !3947
  store i8* null, i8** %buffer33, align 16, !dbg !3948
  %44 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3949
  %extrasize34 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %44, i32 0, i32 12, !dbg !3950
  store i32 0, i32* %extrasize34, align 4, !dbg !3951
  br label %if.end35, !dbg !3952

if.end35:                                         ; preds = %if.end29, %sw.default
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3953
  %gb36 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %45, i32 0, i32 14, !dbg !3954
  %call37 = call i8* @align_get_bits(%struct.GetBitContext* %gb36), !dbg !3955
  %46 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3956
  %gb38 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %46, i32 0, i32 14, !dbg !3957
  %call39 = call i32 @get_bits_left(%struct.GetBitContext* %gb38), !dbg !3958
  %shr40 = ashr i32 %call39, 3, !dbg !3959
  %47 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3960
  %extrasize41 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %47, i32 0, i32 12, !dbg !3961
  %48 = load i32, i32* %extrasize41, align 4, !dbg !3961
  %sub42 = sub nsw i32 %shr40, %48, !dbg !3962
  store i32 %sub42, i32* %i, align 4, !dbg !3963
  %49 = load i32, i32* %i, align 4, !dbg !3964
  %cmp43 = icmp slt i32 %49, 0, !dbg !3966
  br i1 %cmp43, label %if.then50, label %lor.lhs.false, !dbg !3967

lor.lhs.false:                                    ; preds = %if.end35
  %50 = load i32, i32* %i, align 4, !dbg !3968
  %cmp45 = icmp sgt i32 %50, 512, !dbg !3970
  br i1 %cmp45, label %if.then50, label %lor.lhs.false47, !dbg !3971

lor.lhs.false47:                                  ; preds = %lor.lhs.false
  %51 = load i32, i32* %nb_frames, align 4, !dbg !3972
  %cmp48 = icmp slt i32 %51, 0, !dbg !3974
  br i1 %cmp48, label %if.then50, label %if.end61, !dbg !3975

if.then50:                                        ; preds = %lor.lhs.false47, %lor.lhs.false, %if.end35
  %52 = load i32, i32* %i, align 4, !dbg !3976
  %cmp51 = icmp slt i32 %52, 0, !dbg !3979
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !3980

if.then53:                                        ; preds = %if.then50
  %53 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3981
  %avctx54 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %53, i32 0, i32 26, !dbg !3982
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx54, align 16, !dbg !3982
  %55 = bitcast %struct.AVCodecContext* %54 to i8*, !dbg !3981
  %56 = load i32, i32* %i, align 4, !dbg !3983
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i32 0, i32 0), i32 %56), !dbg !3984
  br label %if.end55, !dbg !3984

if.end55:                                         ; preds = %if.then53, %if.then50
  %57 = load i32, i32* %buf_size.addr, align 4, !dbg !3985
  %sub56 = sub nsw i32 %57, 4, !dbg !3986
  %cmp57 = icmp sgt i32 512, %sub56, !dbg !3987
  br i1 %cmp57, label %cond.true, label %cond.false, !dbg !3988

cond.true:                                        ; preds = %if.end55
  %58 = load i32, i32* %buf_size.addr, align 4, !dbg !3989
  %sub59 = sub nsw i32 %58, 4, !dbg !3991
  br label %cond.end, !dbg !3992

cond.false:                                       ; preds = %if.end55
  br label %cond.end, !dbg !3993

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond60 = phi i32 [ %sub59, %cond.true ], [ 512, %cond.false ], !dbg !3995
  store i32 %cond60, i32* %i, align 4, !dbg !3997
  br label %if.end61, !dbg !3998

if.end61:                                         ; preds = %cond.end, %lor.lhs.false47
  %59 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3999
  %last_buf62 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %59, i32 0, i32 10, !dbg !4000
  %arraydecay63 = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf62, i32 0, i32 0, !dbg !3999
  %60 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4001
  %last_buf_size64 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %60, i32 0, i32 11, !dbg !4002
  %61 = load i32, i32* %last_buf_size64, align 32, !dbg !4002
  %idx.ext65 = sext i32 %61 to i64, !dbg !4003
  %add.ptr66 = getelementptr inbounds i8, i8* %arraydecay63, i64 %idx.ext65, !dbg !4003
  %62 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4004
  %gb67 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %62, i32 0, i32 14, !dbg !4005
  %buffer68 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb67, i32 0, i32 0, !dbg !4006
  %63 = load i8*, i8** %buffer68, align 16, !dbg !4006
  %64 = load i32, i32* %buf_size.addr, align 4, !dbg !4007
  %idx.ext69 = sext i32 %64 to i64, !dbg !4008
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %idx.ext69, !dbg !4008
  %add.ptr71 = getelementptr inbounds i8, i8* %add.ptr70, i64 -4, !dbg !4009
  %65 = load i32, i32* %i, align 4, !dbg !4010
  %idx.ext72 = sext i32 %65 to i64, !dbg !4011
  %idx.neg = sub i64 0, %idx.ext72, !dbg !4011
  %add.ptr73 = getelementptr inbounds i8, i8* %add.ptr71, i64 %idx.neg, !dbg !4011
  %66 = load i32, i32* %i, align 4, !dbg !4012
  %conv74 = sext i32 %66 to i64, !dbg !4012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr66, i8* %add.ptr73, i64 %conv74, i32 1, i1 false), !dbg !4013
  %67 = load i32, i32* %i, align 4, !dbg !4014
  %68 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4015
  %last_buf_size75 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %68, i32 0, i32 11, !dbg !4016
  %69 = load i32, i32* %last_buf_size75, align 32, !dbg !4017
  %add = add nsw i32 %69, %67, !dbg !4017
  store i32 %add, i32* %last_buf_size75, align 32, !dbg !4017
  br label %sw.epilog, !dbg !4018

sw.epilog:                                        ; preds = %if.end61, %sw.bb3, %sw.bb
  %70 = load i32, i32* %nb_frames, align 4, !dbg !4019
  %cmp76 = icmp slt i32 %70, 0, !dbg !4021
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !4022

if.then78:                                        ; preds = %sw.epilog
  %71 = load i32, i32* %nb_frames, align 4, !dbg !4023
  store i32 %71, i32* %retval, align 4, !dbg !4024
  br label %return, !dbg !4024

if.end79:                                         ; preds = %sw.epilog
  %72 = load float**, float*** %samples.addr, align 8, !dbg !4025
  %tobool80 = icmp ne float** %72, null, !dbg !4025
  br i1 %tobool80, label %if.end96, label %if.then81, !dbg !4027

if.then81:                                        ; preds = %if.end79
  br label %do.body, !dbg !4028, !llvm.loop !4030

do.body:                                          ; preds = %if.then81
  %73 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4031
  %frame = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %73, i32 0, i32 29, !dbg !4035
  %74 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 16, !dbg !4035
  %tobool82 = icmp ne %struct.AVFrame* %74, null, !dbg !4036
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !4037

if.then83:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0), i32 1618), !dbg !4038
  call void @abort() #8, !dbg !4041
  unreachable, !dbg !4043

if.end84:                                         ; preds = %do.body
  br label %do.end, !dbg !4044

do.end:                                           ; preds = %if.end84
  %75 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4046
  %avctx85 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %75, i32 0, i32 26, !dbg !4047
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx85, align 16, !dbg !4047
  %frame_size86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 85, !dbg !4048
  %77 = load i32, i32* %frame_size86, align 4, !dbg !4048
  %78 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4049
  %frame87 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %78, i32 0, i32 29, !dbg !4050
  %79 = load %struct.AVFrame*, %struct.AVFrame** %frame87, align 16, !dbg !4050
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %79, i32 0, i32 5, !dbg !4051
  store i32 %77, i32* %nb_samples, align 8, !dbg !4052
  %80 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4053
  %avctx88 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %80, i32 0, i32 26, !dbg !4055
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx88, align 16, !dbg !4055
  %82 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4056
  %frame89 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %82, i32 0, i32 29, !dbg !4057
  %83 = load %struct.AVFrame*, %struct.AVFrame** %frame89, align 16, !dbg !4057
  %call90 = call i32 @ff_get_buffer(%struct.AVCodecContext* %81, %struct.AVFrame* %83, i32 0), !dbg !4058
  store i32 %call90, i32* %ret, align 4, !dbg !4059
  %cmp91 = icmp slt i32 %call90, 0, !dbg !4060
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !4061

if.then93:                                        ; preds = %do.end
  %84 = load i32, i32* %ret, align 4, !dbg !4062
  store i32 %84, i32* %retval, align 4, !dbg !4063
  br label %return, !dbg !4063

if.end94:                                         ; preds = %do.end
  %85 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4064
  %frame95 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %85, i32 0, i32 29, !dbg !4065
  %86 = load %struct.AVFrame*, %struct.AVFrame** %frame95, align 16, !dbg !4065
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %86, i32 0, i32 2, !dbg !4066
  %87 = load i8**, i8*** %extended_data, align 8, !dbg !4066
  %88 = bitcast i8** %87 to float**, !dbg !4067
  store float** %88, float*** %samples.addr, align 8, !dbg !4068
  br label %if.end96, !dbg !4069

if.end96:                                         ; preds = %if.end94, %if.end79
  store i32 0, i32* %ch, align 4, !dbg !4070
  br label %for.cond, !dbg !4072

for.cond:                                         ; preds = %for.inc127, %if.end96
  %89 = load i32, i32* %ch, align 4, !dbg !4073
  %90 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4076
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %90, i32 0, i32 6, !dbg !4077
  %91 = load i32, i32* %nb_channels, align 8, !dbg !4077
  %cmp97 = icmp slt i32 %89, %91, !dbg !4078
  br i1 %cmp97, label %for.body, label %for.end129, !dbg !4079

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sample_stride, metadata !4080, metadata !2031), !dbg !4082
  %92 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4083
  %avctx99 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %92, i32 0, i32 26, !dbg !4085
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx99, align 16, !dbg !4085
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %93, i32 0, i32 84, !dbg !4086
  %94 = load i32, i32* %sample_fmt, align 8, !dbg !4086
  %cmp100 = icmp eq i32 %94, 8, !dbg !4087
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !4088

if.then102:                                       ; preds = %for.body
  %95 = load i32, i32* %ch, align 4, !dbg !4089
  %idxprom = sext i32 %95 to i64, !dbg !4091
  %96 = load float**, float*** %samples.addr, align 8, !dbg !4091
  %arrayidx = getelementptr inbounds float*, float** %96, i64 %idxprom, !dbg !4091
  %97 = load float*, float** %arrayidx, align 8, !dbg !4091
  store float* %97, float** %samples_ptr, align 8, !dbg !4092
  store i32 1, i32* %sample_stride, align 4, !dbg !4093
  br label %if.end108, !dbg !4094

if.else103:                                       ; preds = %for.body
  %98 = load float**, float*** %samples.addr, align 8, !dbg !4095
  %arrayidx104 = getelementptr inbounds float*, float** %98, i64 0, !dbg !4095
  %99 = load float*, float** %arrayidx104, align 8, !dbg !4095
  %100 = load i32, i32* %ch, align 4, !dbg !4097
  %idx.ext105 = sext i32 %100 to i64, !dbg !4098
  %add.ptr106 = getelementptr inbounds float, float* %99, i64 %idx.ext105, !dbg !4098
  store float* %add.ptr106, float** %samples_ptr, align 8, !dbg !4099
  %101 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4100
  %nb_channels107 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %101, i32 0, i32 6, !dbg !4101
  %102 = load i32, i32* %nb_channels107, align 8, !dbg !4101
  store i32 %102, i32* %sample_stride, align 4, !dbg !4102
  br label %if.end108

if.end108:                                        ; preds = %if.else103, %if.then102
  store i32 0, i32* %i, align 4, !dbg !4103
  br label %for.cond109, !dbg !4105

for.cond109:                                      ; preds = %for.inc, %if.end108
  %103 = load i32, i32* %i, align 4, !dbg !4106
  %104 = load i32, i32* %nb_frames, align 4, !dbg !4109
  %cmp110 = icmp slt i32 %103, %104, !dbg !4110
  br i1 %cmp110, label %for.body112, label %for.end, !dbg !4111

for.body112:                                      ; preds = %for.cond109
  %105 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4112
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %105, i32 0, i32 27, !dbg !4114
  %106 = load i32, i32* %ch, align 4, !dbg !4115
  %idxprom113 = sext i32 %106 to i64, !dbg !4116
  %107 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4116
  %synth_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %107, i32 0, i32 17, !dbg !4117
  %arrayidx114 = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %synth_buf, i64 0, i64 %idxprom113, !dbg !4116
  %arraydecay115 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx114, i32 0, i32 0, !dbg !4116
  %108 = load i32, i32* %ch, align 4, !dbg !4118
  %idxprom116 = sext i32 %108 to i64, !dbg !4119
  %109 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4119
  %synth_buf_offset = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %109, i32 0, i32 18, !dbg !4120
  %arrayidx117 = getelementptr inbounds [2 x i32], [2 x i32]* %synth_buf_offset, i64 0, i64 %idxprom116, !dbg !4119
  %110 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4121
  %dither_state = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %110, i32 0, i32 24, !dbg !4122
  %111 = load float*, float** %samples_ptr, align 8, !dbg !4123
  %112 = load i32, i32* %sample_stride, align 4, !dbg !4124
  %conv118 = sext i32 %112 to i64, !dbg !4124
  %113 = load i32, i32* %i, align 4, !dbg !4125
  %idxprom119 = sext i32 %113 to i64, !dbg !4126
  %114 = load i32, i32* %ch, align 4, !dbg !4127
  %idxprom120 = sext i32 %114 to i64, !dbg !4126
  %115 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4126
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %115, i32 0, i32 20, !dbg !4128
  %arrayidx121 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples, i64 0, i64 %idxprom120, !dbg !4126
  %arrayidx122 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx121, i64 0, i64 %idxprom119, !dbg !4126
  %arraydecay123 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx122, i32 0, i32 0, !dbg !4126
  call void @ff_mpa_synth_filter_float(%struct.MPADSPContext* %mpadsp, float* %arraydecay115, i32* %arrayidx117, float* getelementptr inbounds ([0 x float], [0 x float]* @ff_mpa_synth_window_float, i32 0, i32 0), i32* %dither_state, float* %111, i64 %conv118, float* %arraydecay123), !dbg !4129
  %116 = load i32, i32* %sample_stride, align 4, !dbg !4130
  %mul124 = mul nsw i32 32, %116, !dbg !4131
  %117 = load float*, float** %samples_ptr, align 8, !dbg !4132
  %idx.ext125 = sext i32 %mul124 to i64, !dbg !4132
  %add.ptr126 = getelementptr inbounds float, float* %117, i64 %idx.ext125, !dbg !4132
  store float* %add.ptr126, float** %samples_ptr, align 8, !dbg !4132
  br label %for.inc, !dbg !4133

for.inc:                                          ; preds = %for.body112
  %118 = load i32, i32* %i, align 4, !dbg !4134
  %inc = add nsw i32 %118, 1, !dbg !4134
  store i32 %inc, i32* %i, align 4, !dbg !4134
  br label %for.cond109, !dbg !4136, !llvm.loop !4137

for.end:                                          ; preds = %for.cond109
  br label %for.inc127, !dbg !4139

for.inc127:                                       ; preds = %for.end
  %119 = load i32, i32* %ch, align 4, !dbg !4140
  %inc128 = add nsw i32 %119, 1, !dbg !4140
  store i32 %inc128, i32* %ch, align 4, !dbg !4140
  br label %for.cond, !dbg !4142, !llvm.loop !4143

for.end129:                                       ; preds = %for.cond
  %120 = load i32, i32* %nb_frames, align 4, !dbg !4145
  %mul130 = mul nsw i32 %120, 32, !dbg !4146
  %conv131 = sext i32 %mul130 to i64, !dbg !4145
  %mul132 = mul i64 %conv131, 4, !dbg !4147
  %121 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4148
  %nb_channels133 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %121, i32 0, i32 6, !dbg !4149
  %122 = load i32, i32* %nb_channels133, align 8, !dbg !4149
  %conv134 = sext i32 %122 to i64, !dbg !4148
  %mul135 = mul i64 %mul132, %conv134, !dbg !4150
  %conv136 = trunc i64 %mul135 to i32, !dbg !4145
  store i32 %conv136, i32* %retval, align 4, !dbg !4151
  br label %return, !dbg !4151

return:                                           ; preds = %for.end129, %if.then93, %if.then78
  %123 = load i32, i32* %retval, align 4, !dbg !4152
  ret i32 %123, !dbg !4152
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #7 !dbg !4153 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4157, metadata !2031), !dbg !4158
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4159, metadata !2031), !dbg !4160
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !4161, metadata !2031), !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !4163, metadata !2031), !dbg !4164
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4165, metadata !2031), !dbg !4166
  store i32 0, i32* %ret, align 4, !dbg !4166
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !4167
  %cmp = icmp sge i32 %0, 2147483135, !dbg !4169
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4170

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !4171
  %cmp1 = icmp slt i32 %1, 0, !dbg !4173
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4174

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !4175
  %tobool = icmp ne i8* %2, null, !dbg !4175
  br i1 %tobool, label %if.end, label %if.then, !dbg !4177

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !4178
  store i8* null, i8** %buffer.addr, align 8, !dbg !4180
  store i32 -1094995529, i32* %ret, align 4, !dbg !4181
  br label %if.end, !dbg !4182

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !4183
  %add = add nsw i32 %3, 7, !dbg !4184
  %shr = ashr i32 %add, 3, !dbg !4185
  store i32 %shr, i32* %buffer_size, align 4, !dbg !4186
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !4187
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4188
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !4189
  store i8* %4, i8** %buffer3, align 8, !dbg !4190
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !4191
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4192
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !4193
  store i32 %6, i32* %size_in_bits, align 4, !dbg !4194
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !4195
  %add4 = add nsw i32 %8, 8, !dbg !4196
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4197
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !4198
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !4199
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !4200
  %11 = load i32, i32* %buffer_size, align 4, !dbg !4201
  %idx.ext = sext i32 %11 to i64, !dbg !4202
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !4202
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4203
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !4204
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !4205
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4206
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !4207
  store i32 0, i32* %index, align 8, !dbg !4208
  %14 = load i32, i32* %ret, align 4, !dbg !4209
  ret i32 %14, !dbg !4210
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #7 !dbg !4211 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4214, metadata !2031), !dbg !4215
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4216, metadata !2031), !dbg !4217
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4218, metadata !2031), !dbg !4219
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4220
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4221
  %1 = load i32, i32* %index, align 8, !dbg !4221
  store i32 %1, i32* %re_index, align 4, !dbg !4219
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4222, metadata !2031), !dbg !4223
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4224, metadata !2031), !dbg !4225
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4226
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4227
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4227
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4225
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !4228
  %5 = load i32, i32* %re_index, align 4, !dbg !4229
  %6 = load i32, i32* %n.addr, align 4, !dbg !4230
  %add = add i32 %5, %6, !dbg !4231
  %cmp = icmp ugt i32 %4, %add, !dbg !4232
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4233

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !4234
  %8 = load i32, i32* %n.addr, align 4, !dbg !4236
  %add1 = add i32 %7, %8, !dbg !4237
  br label %cond.end, !dbg !4238

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !4239
  br label %cond.end, !dbg !4241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !4242
  store i32 %cond, i32* %re_index, align 4, !dbg !4244
  %10 = load i32, i32* %re_index, align 4, !dbg !4245
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4246
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !4247
  store i32 %10, i32* %index2, align 8, !dbg !4248
  ret void, !dbg !4249
}

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_layer1(%struct.MPADecodeContext* %s) #1 !dbg !4250 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %bound = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %j = alloca i32, align 4
  %mant = alloca i32, align 4
  %allocation = alloca [2 x [32 x i8]], align 16
  %scale_factors = alloca [2 x [32 x i8]], align 16
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !4253, metadata !2031), !dbg !4254
  call void @llvm.dbg.declare(metadata i32* %bound, metadata !4255, metadata !2031), !dbg !4256
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4257, metadata !2031), !dbg !4258
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4259, metadata !2031), !dbg !4260
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4261, metadata !2031), !dbg !4262
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4263, metadata !2031), !dbg !4264
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4265, metadata !2031), !dbg !4266
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !4267, metadata !2031), !dbg !4268
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %allocation, metadata !4269, metadata !2031), !dbg !4272
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %scale_factors, metadata !4273, metadata !2031), !dbg !4274
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4275
  %mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 7, !dbg !4277
  %1 = load i32, i32* %mode, align 4, !dbg !4277
  %cmp = icmp eq i32 %1, 1, !dbg !4278
  br i1 %cmp, label %if.then, label %if.else, !dbg !4279

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4280
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 8, !dbg !4281
  %3 = load i32, i32* %mode_ext, align 32, !dbg !4281
  %add = add nsw i32 %3, 1, !dbg !4282
  %mul = mul nsw i32 %add, 4, !dbg !4283
  store i32 %mul, i32* %bound, align 4, !dbg !4284
  br label %if.end, !dbg !4285

if.else:                                          ; preds = %entry
  store i32 32, i32* %bound, align 4, !dbg !4286
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !4287
  br label %for.cond, !dbg !4289

for.cond:                                         ; preds = %for.inc7, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !4290
  %5 = load i32, i32* %bound, align 4, !dbg !4293
  %cmp1 = icmp slt i32 %4, %5, !dbg !4294
  br i1 %cmp1, label %for.body, label %for.end9, !dbg !4295

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ch, align 4, !dbg !4296
  br label %for.cond2, !dbg !4299

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %ch, align 4, !dbg !4300
  %7 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4303
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %7, i32 0, i32 6, !dbg !4304
  %8 = load i32, i32* %nb_channels, align 8, !dbg !4304
  %cmp3 = icmp slt i32 %6, %8, !dbg !4305
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !4306

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4307
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 14, !dbg !4309
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 4), !dbg !4310
  %conv = trunc i32 %call to i8, !dbg !4310
  %10 = load i32, i32* %i, align 4, !dbg !4311
  %idxprom = sext i32 %10 to i64, !dbg !4312
  %11 = load i32, i32* %ch, align 4, !dbg !4313
  %idxprom5 = sext i32 %11 to i64, !dbg !4312
  %arrayidx = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 %idxprom5, !dbg !4312
  %arrayidx6 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !4312
  store i8 %conv, i8* %arrayidx6, align 1, !dbg !4314
  br label %for.inc, !dbg !4315

for.inc:                                          ; preds = %for.body4
  %12 = load i32, i32* %ch, align 4, !dbg !4316
  %inc = add nsw i32 %12, 1, !dbg !4316
  store i32 %inc, i32* %ch, align 4, !dbg !4316
  br label %for.cond2, !dbg !4318, !llvm.loop !4319

for.end:                                          ; preds = %for.cond2
  br label %for.inc7, !dbg !4321

for.inc7:                                         ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !dbg !4322
  %inc8 = add nsw i32 %13, 1, !dbg !4322
  store i32 %inc8, i32* %i, align 4, !dbg !4322
  br label %for.cond, !dbg !4324, !llvm.loop !4325

for.end9:                                         ; preds = %for.cond
  %14 = load i32, i32* %bound, align 4, !dbg !4327
  store i32 %14, i32* %i, align 4, !dbg !4329
  br label %for.cond10, !dbg !4330

for.cond10:                                       ; preds = %for.inc20, %for.end9
  %15 = load i32, i32* %i, align 4, !dbg !4331
  %cmp11 = icmp slt i32 %15, 32, !dbg !4334
  br i1 %cmp11, label %for.body13, label %for.end22, !dbg !4335

for.body13:                                       ; preds = %for.cond10
  %16 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4336
  %gb14 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %16, i32 0, i32 14, !dbg !4337
  %call15 = call i32 @get_bits(%struct.GetBitContext* %gb14, i32 4), !dbg !4338
  %conv16 = trunc i32 %call15 to i8, !dbg !4338
  %17 = load i32, i32* %i, align 4, !dbg !4339
  %idxprom17 = sext i32 %17 to i64, !dbg !4340
  %arrayidx18 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 0, !dbg !4340
  %arrayidx19 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx18, i64 0, i64 %idxprom17, !dbg !4340
  store i8 %conv16, i8* %arrayidx19, align 1, !dbg !4341
  br label %for.inc20, !dbg !4340

for.inc20:                                        ; preds = %for.body13
  %18 = load i32, i32* %i, align 4, !dbg !4342
  %inc21 = add nsw i32 %18, 1, !dbg !4342
  store i32 %inc21, i32* %i, align 4, !dbg !4342
  br label %for.cond10, !dbg !4344, !llvm.loop !4345

for.end22:                                        ; preds = %for.cond10
  store i32 0, i32* %i, align 4, !dbg !4347
  br label %for.cond23, !dbg !4349

for.cond23:                                       ; preds = %for.inc48, %for.end22
  %19 = load i32, i32* %i, align 4, !dbg !4350
  %20 = load i32, i32* %bound, align 4, !dbg !4353
  %cmp24 = icmp slt i32 %19, %20, !dbg !4354
  br i1 %cmp24, label %for.body26, label %for.end50, !dbg !4355

for.body26:                                       ; preds = %for.cond23
  store i32 0, i32* %ch, align 4, !dbg !4356
  br label %for.cond27, !dbg !4359

for.cond27:                                       ; preds = %for.inc45, %for.body26
  %21 = load i32, i32* %ch, align 4, !dbg !4360
  %22 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4363
  %nb_channels28 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %22, i32 0, i32 6, !dbg !4364
  %23 = load i32, i32* %nb_channels28, align 8, !dbg !4364
  %cmp29 = icmp slt i32 %21, %23, !dbg !4365
  br i1 %cmp29, label %for.body31, label %for.end47, !dbg !4366

for.body31:                                       ; preds = %for.cond27
  %24 = load i32, i32* %i, align 4, !dbg !4367
  %idxprom32 = sext i32 %24 to i64, !dbg !4370
  %25 = load i32, i32* %ch, align 4, !dbg !4371
  %idxprom33 = sext i32 %25 to i64, !dbg !4370
  %arrayidx34 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 %idxprom33, !dbg !4370
  %arrayidx35 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx34, i64 0, i64 %idxprom32, !dbg !4370
  %26 = load i8, i8* %arrayidx35, align 1, !dbg !4370
  %tobool = icmp ne i8 %26, 0, !dbg !4370
  br i1 %tobool, label %if.then36, label %if.end44, !dbg !4372

if.then36:                                        ; preds = %for.body31
  %27 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4373
  %gb37 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %27, i32 0, i32 14, !dbg !4374
  %call38 = call i32 @get_bits(%struct.GetBitContext* %gb37, i32 6), !dbg !4375
  %conv39 = trunc i32 %call38 to i8, !dbg !4375
  %28 = load i32, i32* %i, align 4, !dbg !4376
  %idxprom40 = sext i32 %28 to i64, !dbg !4377
  %29 = load i32, i32* %ch, align 4, !dbg !4378
  %idxprom41 = sext i32 %29 to i64, !dbg !4377
  %arrayidx42 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 %idxprom41, !dbg !4377
  %arrayidx43 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx42, i64 0, i64 %idxprom40, !dbg !4377
  store i8 %conv39, i8* %arrayidx43, align 1, !dbg !4379
  br label %if.end44, !dbg !4377

if.end44:                                         ; preds = %if.then36, %for.body31
  br label %for.inc45, !dbg !4380

for.inc45:                                        ; preds = %if.end44
  %30 = load i32, i32* %ch, align 4, !dbg !4381
  %inc46 = add nsw i32 %30, 1, !dbg !4381
  store i32 %inc46, i32* %ch, align 4, !dbg !4381
  br label %for.cond27, !dbg !4383, !llvm.loop !4384

for.end47:                                        ; preds = %for.cond27
  br label %for.inc48, !dbg !4386

for.inc48:                                        ; preds = %for.end47
  %31 = load i32, i32* %i, align 4, !dbg !4387
  %inc49 = add nsw i32 %31, 1, !dbg !4387
  store i32 %inc49, i32* %i, align 4, !dbg !4387
  br label %for.cond23, !dbg !4389, !llvm.loop !4390

for.end50:                                        ; preds = %for.cond23
  %32 = load i32, i32* %bound, align 4, !dbg !4392
  store i32 %32, i32* %i, align 4, !dbg !4394
  br label %for.cond51, !dbg !4395

for.cond51:                                       ; preds = %for.inc73, %for.end50
  %33 = load i32, i32* %i, align 4, !dbg !4396
  %cmp52 = icmp slt i32 %33, 32, !dbg !4399
  br i1 %cmp52, label %for.body54, label %for.end75, !dbg !4400

for.body54:                                       ; preds = %for.cond51
  %34 = load i32, i32* %i, align 4, !dbg !4401
  %idxprom55 = sext i32 %34 to i64, !dbg !4404
  %arrayidx56 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 0, !dbg !4404
  %arrayidx57 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx56, i64 0, i64 %idxprom55, !dbg !4404
  %35 = load i8, i8* %arrayidx57, align 1, !dbg !4404
  %tobool58 = icmp ne i8 %35, 0, !dbg !4404
  br i1 %tobool58, label %if.then59, label %if.end72, !dbg !4405

if.then59:                                        ; preds = %for.body54
  %36 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4406
  %gb60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %36, i32 0, i32 14, !dbg !4408
  %call61 = call i32 @get_bits(%struct.GetBitContext* %gb60, i32 6), !dbg !4409
  %conv62 = trunc i32 %call61 to i8, !dbg !4409
  %37 = load i32, i32* %i, align 4, !dbg !4410
  %idxprom63 = sext i32 %37 to i64, !dbg !4411
  %arrayidx64 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 0, !dbg !4411
  %arrayidx65 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx64, i64 0, i64 %idxprom63, !dbg !4411
  store i8 %conv62, i8* %arrayidx65, align 1, !dbg !4412
  %38 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4413
  %gb66 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %38, i32 0, i32 14, !dbg !4414
  %call67 = call i32 @get_bits(%struct.GetBitContext* %gb66, i32 6), !dbg !4415
  %conv68 = trunc i32 %call67 to i8, !dbg !4415
  %39 = load i32, i32* %i, align 4, !dbg !4416
  %idxprom69 = sext i32 %39 to i64, !dbg !4417
  %arrayidx70 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 1, !dbg !4417
  %arrayidx71 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx70, i64 0, i64 %idxprom69, !dbg !4417
  store i8 %conv68, i8* %arrayidx71, align 1, !dbg !4418
  br label %if.end72, !dbg !4419

if.end72:                                         ; preds = %if.then59, %for.body54
  br label %for.inc73, !dbg !4420

for.inc73:                                        ; preds = %if.end72
  %40 = load i32, i32* %i, align 4, !dbg !4421
  %inc74 = add nsw i32 %40, 1, !dbg !4421
  store i32 %inc74, i32* %i, align 4, !dbg !4421
  br label %for.cond51, !dbg !4423, !llvm.loop !4424

for.end75:                                        ; preds = %for.cond51
  store i32 0, i32* %j, align 4, !dbg !4426
  br label %for.cond76, !dbg !4428

for.cond76:                                       ; preds = %for.inc174, %for.end75
  %41 = load i32, i32* %j, align 4, !dbg !4429
  %cmp77 = icmp slt i32 %41, 12, !dbg !4432
  br i1 %cmp77, label %for.body79, label %for.end176, !dbg !4433

for.body79:                                       ; preds = %for.cond76
  store i32 0, i32* %i, align 4, !dbg !4434
  br label %for.cond80, !dbg !4437

for.cond80:                                       ; preds = %for.inc117, %for.body79
  %42 = load i32, i32* %i, align 4, !dbg !4438
  %43 = load i32, i32* %bound, align 4, !dbg !4441
  %cmp81 = icmp slt i32 %42, %43, !dbg !4442
  br i1 %cmp81, label %for.body83, label %for.end119, !dbg !4443

for.body83:                                       ; preds = %for.cond80
  store i32 0, i32* %ch, align 4, !dbg !4444
  br label %for.cond84, !dbg !4447

for.cond84:                                       ; preds = %for.inc114, %for.body83
  %44 = load i32, i32* %ch, align 4, !dbg !4448
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4451
  %nb_channels85 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %45, i32 0, i32 6, !dbg !4452
  %46 = load i32, i32* %nb_channels85, align 8, !dbg !4452
  %cmp86 = icmp slt i32 %44, %46, !dbg !4453
  br i1 %cmp86, label %for.body88, label %for.end116, !dbg !4454

for.body88:                                       ; preds = %for.cond84
  %47 = load i32, i32* %i, align 4, !dbg !4455
  %idxprom89 = sext i32 %47 to i64, !dbg !4457
  %48 = load i32, i32* %ch, align 4, !dbg !4458
  %idxprom90 = sext i32 %48 to i64, !dbg !4457
  %arrayidx91 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 %idxprom90, !dbg !4457
  %arrayidx92 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx91, i64 0, i64 %idxprom89, !dbg !4457
  %49 = load i8, i8* %arrayidx92, align 1, !dbg !4457
  %conv93 = zext i8 %49 to i32, !dbg !4457
  store i32 %conv93, i32* %n, align 4, !dbg !4459
  %50 = load i32, i32* %n, align 4, !dbg !4460
  %tobool94 = icmp ne i32 %50, 0, !dbg !4460
  br i1 %tobool94, label %if.then95, label %if.else105, !dbg !4462

if.then95:                                        ; preds = %for.body88
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4463
  %gb96 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %51, i32 0, i32 14, !dbg !4465
  %52 = load i32, i32* %n, align 4, !dbg !4466
  %add97 = add nsw i32 %52, 1, !dbg !4467
  %call98 = call i32 @get_bits(%struct.GetBitContext* %gb96, i32 %add97), !dbg !4468
  store i32 %call98, i32* %mant, align 4, !dbg !4469
  %53 = load i32, i32* %n, align 4, !dbg !4470
  %54 = load i32, i32* %mant, align 4, !dbg !4471
  %55 = load i32, i32* %i, align 4, !dbg !4472
  %idxprom99 = sext i32 %55 to i64, !dbg !4473
  %56 = load i32, i32* %ch, align 4, !dbg !4474
  %idxprom100 = sext i32 %56 to i64, !dbg !4473
  %arrayidx101 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 %idxprom100, !dbg !4473
  %arrayidx102 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx101, i64 0, i64 %idxprom99, !dbg !4473
  %57 = load i8, i8* %arrayidx102, align 1, !dbg !4473
  %conv103 = zext i8 %57 to i32, !dbg !4473
  %call104 = call i32 @l1_unscale(i32 %53, i32 %54, i32 %conv103), !dbg !4475
  store i32 %call104, i32* %v, align 4, !dbg !4476
  br label %if.end106, !dbg !4477

if.else105:                                       ; preds = %for.body88
  store i32 0, i32* %v, align 4, !dbg !4478
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then95
  %58 = load i32, i32* %v, align 4, !dbg !4480
  %conv107 = sitofp i32 %58 to float, !dbg !4480
  %59 = load i32, i32* %i, align 4, !dbg !4481
  %idxprom108 = sext i32 %59 to i64, !dbg !4482
  %60 = load i32, i32* %j, align 4, !dbg !4483
  %idxprom109 = sext i32 %60 to i64, !dbg !4482
  %61 = load i32, i32* %ch, align 4, !dbg !4484
  %idxprom110 = sext i32 %61 to i64, !dbg !4482
  %62 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4482
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %62, i32 0, i32 20, !dbg !4485
  %arrayidx111 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples, i64 0, i64 %idxprom110, !dbg !4482
  %arrayidx112 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx111, i64 0, i64 %idxprom109, !dbg !4482
  %arrayidx113 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx112, i64 0, i64 %idxprom108, !dbg !4482
  store float %conv107, float* %arrayidx113, align 4, !dbg !4486
  br label %for.inc114, !dbg !4487

for.inc114:                                       ; preds = %if.end106
  %63 = load i32, i32* %ch, align 4, !dbg !4488
  %inc115 = add nsw i32 %63, 1, !dbg !4488
  store i32 %inc115, i32* %ch, align 4, !dbg !4488
  br label %for.cond84, !dbg !4490, !llvm.loop !4491

for.end116:                                       ; preds = %for.cond84
  br label %for.inc117, !dbg !4493

for.inc117:                                       ; preds = %for.end116
  %64 = load i32, i32* %i, align 4, !dbg !4494
  %inc118 = add nsw i32 %64, 1, !dbg !4494
  store i32 %inc118, i32* %i, align 4, !dbg !4494
  br label %for.cond80, !dbg !4496, !llvm.loop !4497

for.end119:                                       ; preds = %for.cond80
  %65 = load i32, i32* %bound, align 4, !dbg !4499
  store i32 %65, i32* %i, align 4, !dbg !4501
  br label %for.cond120, !dbg !4502

for.cond120:                                      ; preds = %for.inc171, %for.end119
  %66 = load i32, i32* %i, align 4, !dbg !4503
  %cmp121 = icmp slt i32 %66, 32, !dbg !4506
  br i1 %cmp121, label %for.body123, label %for.end173, !dbg !4507

for.body123:                                      ; preds = %for.cond120
  %67 = load i32, i32* %i, align 4, !dbg !4508
  %idxprom124 = sext i32 %67 to i64, !dbg !4510
  %arrayidx125 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 0, !dbg !4510
  %arrayidx126 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx125, i64 0, i64 %idxprom124, !dbg !4510
  %68 = load i8, i8* %arrayidx126, align 1, !dbg !4510
  %conv127 = zext i8 %68 to i32, !dbg !4510
  store i32 %conv127, i32* %n, align 4, !dbg !4511
  %69 = load i32, i32* %n, align 4, !dbg !4512
  %tobool128 = icmp ne i32 %69, 0, !dbg !4512
  br i1 %tobool128, label %if.then129, label %if.else157, !dbg !4514

if.then129:                                       ; preds = %for.body123
  %70 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4515
  %gb130 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %70, i32 0, i32 14, !dbg !4517
  %71 = load i32, i32* %n, align 4, !dbg !4518
  %add131 = add nsw i32 %71, 1, !dbg !4519
  %call132 = call i32 @get_bits(%struct.GetBitContext* %gb130, i32 %add131), !dbg !4520
  store i32 %call132, i32* %mant, align 4, !dbg !4521
  %72 = load i32, i32* %n, align 4, !dbg !4522
  %73 = load i32, i32* %mant, align 4, !dbg !4523
  %74 = load i32, i32* %i, align 4, !dbg !4524
  %idxprom133 = sext i32 %74 to i64, !dbg !4525
  %arrayidx134 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 0, !dbg !4525
  %arrayidx135 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx134, i64 0, i64 %idxprom133, !dbg !4525
  %75 = load i8, i8* %arrayidx135, align 1, !dbg !4525
  %conv136 = zext i8 %75 to i32, !dbg !4525
  %call137 = call i32 @l1_unscale(i32 %72, i32 %73, i32 %conv136), !dbg !4526
  store i32 %call137, i32* %v, align 4, !dbg !4527
  %76 = load i32, i32* %v, align 4, !dbg !4528
  %conv138 = sitofp i32 %76 to float, !dbg !4528
  %77 = load i32, i32* %i, align 4, !dbg !4529
  %idxprom139 = sext i32 %77 to i64, !dbg !4530
  %78 = load i32, i32* %j, align 4, !dbg !4531
  %idxprom140 = sext i32 %78 to i64, !dbg !4530
  %79 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4530
  %sb_samples141 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %79, i32 0, i32 20, !dbg !4532
  %arrayidx142 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples141, i64 0, i64 0, !dbg !4530
  %arrayidx143 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx142, i64 0, i64 %idxprom140, !dbg !4530
  %arrayidx144 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx143, i64 0, i64 %idxprom139, !dbg !4530
  store float %conv138, float* %arrayidx144, align 4, !dbg !4533
  %80 = load i32, i32* %n, align 4, !dbg !4534
  %81 = load i32, i32* %mant, align 4, !dbg !4535
  %82 = load i32, i32* %i, align 4, !dbg !4536
  %idxprom145 = sext i32 %82 to i64, !dbg !4537
  %arrayidx146 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 1, !dbg !4537
  %arrayidx147 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx146, i64 0, i64 %idxprom145, !dbg !4537
  %83 = load i8, i8* %arrayidx147, align 1, !dbg !4537
  %conv148 = zext i8 %83 to i32, !dbg !4537
  %call149 = call i32 @l1_unscale(i32 %80, i32 %81, i32 %conv148), !dbg !4538
  store i32 %call149, i32* %v, align 4, !dbg !4539
  %84 = load i32, i32* %v, align 4, !dbg !4540
  %conv150 = sitofp i32 %84 to float, !dbg !4540
  %85 = load i32, i32* %i, align 4, !dbg !4541
  %idxprom151 = sext i32 %85 to i64, !dbg !4542
  %86 = load i32, i32* %j, align 4, !dbg !4543
  %idxprom152 = sext i32 %86 to i64, !dbg !4542
  %87 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4542
  %sb_samples153 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %87, i32 0, i32 20, !dbg !4544
  %arrayidx154 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples153, i64 0, i64 1, !dbg !4542
  %arrayidx155 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx154, i64 0, i64 %idxprom152, !dbg !4542
  %arrayidx156 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx155, i64 0, i64 %idxprom151, !dbg !4542
  store float %conv150, float* %arrayidx156, align 4, !dbg !4545
  br label %if.end170, !dbg !4546

if.else157:                                       ; preds = %for.body123
  %88 = load i32, i32* %i, align 4, !dbg !4547
  %idxprom158 = sext i32 %88 to i64, !dbg !4549
  %89 = load i32, i32* %j, align 4, !dbg !4550
  %idxprom159 = sext i32 %89 to i64, !dbg !4549
  %90 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4549
  %sb_samples160 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %90, i32 0, i32 20, !dbg !4551
  %arrayidx161 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples160, i64 0, i64 0, !dbg !4549
  %arrayidx162 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx161, i64 0, i64 %idxprom159, !dbg !4549
  %arrayidx163 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx162, i64 0, i64 %idxprom158, !dbg !4549
  store float 0.000000e+00, float* %arrayidx163, align 4, !dbg !4552
  %91 = load i32, i32* %i, align 4, !dbg !4553
  %idxprom164 = sext i32 %91 to i64, !dbg !4554
  %92 = load i32, i32* %j, align 4, !dbg !4555
  %idxprom165 = sext i32 %92 to i64, !dbg !4554
  %93 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4554
  %sb_samples166 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %93, i32 0, i32 20, !dbg !4556
  %arrayidx167 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples166, i64 0, i64 1, !dbg !4554
  %arrayidx168 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx167, i64 0, i64 %idxprom165, !dbg !4554
  %arrayidx169 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx168, i64 0, i64 %idxprom164, !dbg !4554
  store float 0.000000e+00, float* %arrayidx169, align 4, !dbg !4557
  br label %if.end170

if.end170:                                        ; preds = %if.else157, %if.then129
  br label %for.inc171, !dbg !4558

for.inc171:                                       ; preds = %if.end170
  %94 = load i32, i32* %i, align 4, !dbg !4559
  %inc172 = add nsw i32 %94, 1, !dbg !4559
  store i32 %inc172, i32* %i, align 4, !dbg !4559
  br label %for.cond120, !dbg !4561, !llvm.loop !4562

for.end173:                                       ; preds = %for.cond120
  br label %for.inc174, !dbg !4564

for.inc174:                                       ; preds = %for.end173
  %95 = load i32, i32* %j, align 4, !dbg !4565
  %inc175 = add nsw i32 %95, 1, !dbg !4565
  store i32 %inc175, i32* %j, align 4, !dbg !4565
  br label %for.cond76, !dbg !4567, !llvm.loop !4568

for.end176:                                       ; preds = %for.cond76
  ret i32 12, !dbg !4570
}

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_layer2(%struct.MPADecodeContext* %s) #1 !dbg !4571 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %sblimit = alloca i32, align 4
  %alloc_table = alloca i8*, align 8
  %table = alloca i32, align 4
  %bit_alloc_bits = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ch = alloca i32, align 4
  %bound = alloca i32, align 4
  %v = alloca i32, align 4
  %bit_alloc = alloca [2 x [32 x i8]], align 16
  %scale_code = alloca [2 x [32 x i8]], align 16
  %scale_factors = alloca [2 x [32 x [3 x i8]]], align 16
  %sf = alloca i8*, align 8
  %scale = alloca i32, align 4
  %qindex = alloca i32, align 4
  %bits = alloca i32, align 4
  %steps = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %b = alloca i32, align 4
  %v2 = alloca i32, align 4
  %mant = alloca i32, align 4
  %scale0 = alloca i32, align 4
  %scale1 = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !4572, metadata !2031), !dbg !4573
  call void @llvm.dbg.declare(metadata i32* %sblimit, metadata !4574, metadata !2031), !dbg !4575
  call void @llvm.dbg.declare(metadata i8** %alloc_table, metadata !4576, metadata !2031), !dbg !4579
  call void @llvm.dbg.declare(metadata i32* %table, metadata !4580, metadata !2031), !dbg !4581
  call void @llvm.dbg.declare(metadata i32* %bit_alloc_bits, metadata !4582, metadata !2031), !dbg !4583
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4584, metadata !2031), !dbg !4585
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4586, metadata !2031), !dbg !4587
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4588, metadata !2031), !dbg !4589
  call void @llvm.dbg.declare(metadata i32* %bound, metadata !4590, metadata !2031), !dbg !4591
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4592, metadata !2031), !dbg !4593
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %bit_alloc, metadata !4594, metadata !2031), !dbg !4596
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %scale_code, metadata !4597, metadata !2031), !dbg !4598
  call void @llvm.dbg.declare(metadata [2 x [32 x [3 x i8]]]* %scale_factors, metadata !4599, metadata !2031), !dbg !4602
  call void @llvm.dbg.declare(metadata i8** %sf, metadata !4603, metadata !2031), !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !4606, metadata !2031), !dbg !4607
  call void @llvm.dbg.declare(metadata i32* %qindex, metadata !4608, metadata !2031), !dbg !4609
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !4610, metadata !2031), !dbg !4611
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !4612, metadata !2031), !dbg !4613
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4614, metadata !2031), !dbg !4615
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4616, metadata !2031), !dbg !4617
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4618, metadata !2031), !dbg !4619
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4620, metadata !2031), !dbg !4621
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4622
  %bit_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 5, !dbg !4623
  %1 = load i32, i32* %bit_rate, align 4, !dbg !4623
  %div = sdiv i32 %1, 1000, !dbg !4624
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4625
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 6, !dbg !4626
  %3 = load i32, i32* %nb_channels, align 8, !dbg !4626
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4627
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 3, !dbg !4628
  %5 = load i32, i32* %sample_rate, align 4, !dbg !4628
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4629
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 9, !dbg !4630
  %7 = load i32, i32* %lsf, align 4, !dbg !4630
  %call = call i32 @ff_mpa_l2_select_table(i32 %div, i32 %3, i32 %5, i32 %7), !dbg !4631
  store i32 %call, i32* %table, align 4, !dbg !4632
  %8 = load i32, i32* %table, align 4, !dbg !4633
  %idxprom = sext i32 %8 to i64, !dbg !4634
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @ff_mpa_sblimit_table, i64 0, i64 %idxprom, !dbg !4634
  %9 = load i32, i32* %arrayidx, align 4, !dbg !4634
  store i32 %9, i32* %sblimit, align 4, !dbg !4635
  %10 = load i32, i32* %table, align 4, !dbg !4636
  %idxprom1 = sext i32 %10 to i64, !dbg !4637
  %arrayidx2 = getelementptr inbounds [5 x i8*], [5 x i8*]* @ff_mpa_alloc_tables, i64 0, i64 %idxprom1, !dbg !4637
  %11 = load i8*, i8** %arrayidx2, align 8, !dbg !4637
  store i8* %11, i8** %alloc_table, align 8, !dbg !4638
  %12 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4639
  %mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %12, i32 0, i32 7, !dbg !4641
  %13 = load i32, i32* %mode, align 4, !dbg !4641
  %cmp = icmp eq i32 %13, 1, !dbg !4642
  br i1 %cmp, label %if.then, label %if.else, !dbg !4643

if.then:                                          ; preds = %entry
  %14 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4644
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %14, i32 0, i32 8, !dbg !4645
  %15 = load i32, i32* %mode_ext, align 32, !dbg !4645
  %add = add nsw i32 %15, 1, !dbg !4646
  %mul = mul nsw i32 %add, 4, !dbg !4647
  store i32 %mul, i32* %bound, align 4, !dbg !4648
  br label %if.end, !dbg !4649

if.else:                                          ; preds = %entry
  %16 = load i32, i32* %sblimit, align 4, !dbg !4650
  store i32 %16, i32* %bound, align 4, !dbg !4651
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !4652, !llvm.loop !4653

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !4654

do.end:                                           ; preds = %do.body
  %17 = load i32, i32* %bound, align 4, !dbg !4657
  %18 = load i32, i32* %sblimit, align 4, !dbg !4659
  %cmp3 = icmp sgt i32 %17, %18, !dbg !4660
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4661

if.then4:                                         ; preds = %do.end
  %19 = load i32, i32* %sblimit, align 4, !dbg !4662
  store i32 %19, i32* %bound, align 4, !dbg !4663
  br label %if.end5, !dbg !4664

if.end5:                                          ; preds = %if.then4, %do.end
  store i32 0, i32* %j, align 4, !dbg !4665
  store i32 0, i32* %i, align 4, !dbg !4666
  br label %for.cond, !dbg !4668

for.cond:                                         ; preds = %for.inc21, %if.end5
  %20 = load i32, i32* %i, align 4, !dbg !4669
  %21 = load i32, i32* %bound, align 4, !dbg !4672
  %cmp6 = icmp slt i32 %20, %21, !dbg !4673
  br i1 %cmp6, label %for.body, label %for.end23, !dbg !4674

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %j, align 4, !dbg !4675
  %idxprom7 = sext i32 %22 to i64, !dbg !4677
  %23 = load i8*, i8** %alloc_table, align 8, !dbg !4677
  %arrayidx8 = getelementptr inbounds i8, i8* %23, i64 %idxprom7, !dbg !4677
  %24 = load i8, i8* %arrayidx8, align 1, !dbg !4677
  %conv = zext i8 %24 to i32, !dbg !4677
  store i32 %conv, i32* %bit_alloc_bits, align 4, !dbg !4678
  store i32 0, i32* %ch, align 4, !dbg !4679
  br label %for.cond9, !dbg !4681

for.cond9:                                        ; preds = %for.inc, %for.body
  %25 = load i32, i32* %ch, align 4, !dbg !4682
  %26 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4685
  %nb_channels10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %26, i32 0, i32 6, !dbg !4686
  %27 = load i32, i32* %nb_channels10, align 8, !dbg !4686
  %cmp11 = icmp slt i32 %25, %27, !dbg !4687
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !4688

for.body13:                                       ; preds = %for.cond9
  %28 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4689
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %28, i32 0, i32 14, !dbg !4690
  %29 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4691
  %call14 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 %29), !dbg !4692
  %conv15 = trunc i32 %call14 to i8, !dbg !4692
  %30 = load i32, i32* %i, align 4, !dbg !4693
  %idxprom16 = sext i32 %30 to i64, !dbg !4694
  %31 = load i32, i32* %ch, align 4, !dbg !4695
  %idxprom17 = sext i32 %31 to i64, !dbg !4694
  %arrayidx18 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom17, !dbg !4694
  %arrayidx19 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx18, i64 0, i64 %idxprom16, !dbg !4694
  store i8 %conv15, i8* %arrayidx19, align 1, !dbg !4696
  br label %for.inc, !dbg !4694

for.inc:                                          ; preds = %for.body13
  %32 = load i32, i32* %ch, align 4, !dbg !4697
  %inc = add nsw i32 %32, 1, !dbg !4697
  store i32 %inc, i32* %ch, align 4, !dbg !4697
  br label %for.cond9, !dbg !4699, !llvm.loop !4700

for.end:                                          ; preds = %for.cond9
  %33 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4702
  %shl = shl i32 1, %33, !dbg !4703
  %34 = load i32, i32* %j, align 4, !dbg !4704
  %add20 = add nsw i32 %34, %shl, !dbg !4704
  store i32 %add20, i32* %j, align 4, !dbg !4704
  br label %for.inc21, !dbg !4705

for.inc21:                                        ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !4706
  %inc22 = add nsw i32 %35, 1, !dbg !4706
  store i32 %inc22, i32* %i, align 4, !dbg !4706
  br label %for.cond, !dbg !4708, !llvm.loop !4709

for.end23:                                        ; preds = %for.cond
  %36 = load i32, i32* %bound, align 4, !dbg !4711
  store i32 %36, i32* %i, align 4, !dbg !4713
  br label %for.cond24, !dbg !4714

for.cond24:                                       ; preds = %for.inc43, %for.end23
  %37 = load i32, i32* %i, align 4, !dbg !4715
  %38 = load i32, i32* %sblimit, align 4, !dbg !4718
  %cmp25 = icmp slt i32 %37, %38, !dbg !4719
  br i1 %cmp25, label %for.body27, label %for.end45, !dbg !4720

for.body27:                                       ; preds = %for.cond24
  %39 = load i32, i32* %j, align 4, !dbg !4721
  %idxprom28 = sext i32 %39 to i64, !dbg !4723
  %40 = load i8*, i8** %alloc_table, align 8, !dbg !4723
  %arrayidx29 = getelementptr inbounds i8, i8* %40, i64 %idxprom28, !dbg !4723
  %41 = load i8, i8* %arrayidx29, align 1, !dbg !4723
  %conv30 = zext i8 %41 to i32, !dbg !4723
  store i32 %conv30, i32* %bit_alloc_bits, align 4, !dbg !4724
  %42 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4725
  %gb31 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %42, i32 0, i32 14, !dbg !4726
  %43 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4727
  %call32 = call i32 @get_bits(%struct.GetBitContext* %gb31, i32 %43), !dbg !4728
  store i32 %call32, i32* %v, align 4, !dbg !4729
  %44 = load i32, i32* %v, align 4, !dbg !4730
  %conv33 = trunc i32 %44 to i8, !dbg !4730
  %45 = load i32, i32* %i, align 4, !dbg !4731
  %idxprom34 = sext i32 %45 to i64, !dbg !4732
  %arrayidx35 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 0, !dbg !4732
  %arrayidx36 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx35, i64 0, i64 %idxprom34, !dbg !4732
  store i8 %conv33, i8* %arrayidx36, align 1, !dbg !4733
  %46 = load i32, i32* %v, align 4, !dbg !4734
  %conv37 = trunc i32 %46 to i8, !dbg !4734
  %47 = load i32, i32* %i, align 4, !dbg !4735
  %idxprom38 = sext i32 %47 to i64, !dbg !4736
  %arrayidx39 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 1, !dbg !4736
  %arrayidx40 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx39, i64 0, i64 %idxprom38, !dbg !4736
  store i8 %conv37, i8* %arrayidx40, align 1, !dbg !4737
  %48 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4738
  %shl41 = shl i32 1, %48, !dbg !4739
  %49 = load i32, i32* %j, align 4, !dbg !4740
  %add42 = add nsw i32 %49, %shl41, !dbg !4740
  store i32 %add42, i32* %j, align 4, !dbg !4740
  br label %for.inc43, !dbg !4741

for.inc43:                                        ; preds = %for.body27
  %50 = load i32, i32* %i, align 4, !dbg !4742
  %inc44 = add nsw i32 %50, 1, !dbg !4742
  store i32 %inc44, i32* %i, align 4, !dbg !4742
  br label %for.cond24, !dbg !4744, !llvm.loop !4745

for.end45:                                        ; preds = %for.cond24
  store i32 0, i32* %i, align 4, !dbg !4747
  br label %for.cond46, !dbg !4749

for.cond46:                                       ; preds = %for.inc71, %for.end45
  %51 = load i32, i32* %i, align 4, !dbg !4750
  %52 = load i32, i32* %sblimit, align 4, !dbg !4753
  %cmp47 = icmp slt i32 %51, %52, !dbg !4754
  br i1 %cmp47, label %for.body49, label %for.end73, !dbg !4755

for.body49:                                       ; preds = %for.cond46
  store i32 0, i32* %ch, align 4, !dbg !4756
  br label %for.cond50, !dbg !4759

for.cond50:                                       ; preds = %for.inc68, %for.body49
  %53 = load i32, i32* %ch, align 4, !dbg !4760
  %54 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4763
  %nb_channels51 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %54, i32 0, i32 6, !dbg !4764
  %55 = load i32, i32* %nb_channels51, align 8, !dbg !4764
  %cmp52 = icmp slt i32 %53, %55, !dbg !4765
  br i1 %cmp52, label %for.body54, label %for.end70, !dbg !4766

for.body54:                                       ; preds = %for.cond50
  %56 = load i32, i32* %i, align 4, !dbg !4767
  %idxprom55 = sext i32 %56 to i64, !dbg !4770
  %57 = load i32, i32* %ch, align 4, !dbg !4771
  %idxprom56 = sext i32 %57 to i64, !dbg !4770
  %arrayidx57 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom56, !dbg !4770
  %arrayidx58 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx57, i64 0, i64 %idxprom55, !dbg !4770
  %58 = load i8, i8* %arrayidx58, align 1, !dbg !4770
  %tobool = icmp ne i8 %58, 0, !dbg !4770
  br i1 %tobool, label %if.then59, label %if.end67, !dbg !4772

if.then59:                                        ; preds = %for.body54
  %59 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4773
  %gb60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %59, i32 0, i32 14, !dbg !4774
  %call61 = call i32 @get_bits(%struct.GetBitContext* %gb60, i32 2), !dbg !4775
  %conv62 = trunc i32 %call61 to i8, !dbg !4775
  %60 = load i32, i32* %i, align 4, !dbg !4776
  %idxprom63 = sext i32 %60 to i64, !dbg !4777
  %61 = load i32, i32* %ch, align 4, !dbg !4778
  %idxprom64 = sext i32 %61 to i64, !dbg !4777
  %arrayidx65 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_code, i64 0, i64 %idxprom64, !dbg !4777
  %arrayidx66 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx65, i64 0, i64 %idxprom63, !dbg !4777
  store i8 %conv62, i8* %arrayidx66, align 1, !dbg !4779
  br label %if.end67, !dbg !4777

if.end67:                                         ; preds = %if.then59, %for.body54
  br label %for.inc68, !dbg !4780

for.inc68:                                        ; preds = %if.end67
  %62 = load i32, i32* %ch, align 4, !dbg !4781
  %inc69 = add nsw i32 %62, 1, !dbg !4781
  store i32 %inc69, i32* %ch, align 4, !dbg !4781
  br label %for.cond50, !dbg !4783, !llvm.loop !4784

for.end70:                                        ; preds = %for.cond50
  br label %for.inc71, !dbg !4786

for.inc71:                                        ; preds = %for.end70
  %63 = load i32, i32* %i, align 4, !dbg !4787
  %inc72 = add nsw i32 %63, 1, !dbg !4787
  store i32 %inc72, i32* %i, align 4, !dbg !4787
  br label %for.cond46, !dbg !4789, !llvm.loop !4790

for.end73:                                        ; preds = %for.cond46
  store i32 0, i32* %i, align 4, !dbg !4792
  br label %for.cond74, !dbg !4794

for.cond74:                                       ; preds = %for.inc145, %for.end73
  %64 = load i32, i32* %i, align 4, !dbg !4795
  %65 = load i32, i32* %sblimit, align 4, !dbg !4798
  %cmp75 = icmp slt i32 %64, %65, !dbg !4799
  br i1 %cmp75, label %for.body77, label %for.end147, !dbg !4800

for.body77:                                       ; preds = %for.cond74
  store i32 0, i32* %ch, align 4, !dbg !4801
  br label %for.cond78, !dbg !4804

for.cond78:                                       ; preds = %for.inc142, %for.body77
  %66 = load i32, i32* %ch, align 4, !dbg !4805
  %67 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4808
  %nb_channels79 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %67, i32 0, i32 6, !dbg !4809
  %68 = load i32, i32* %nb_channels79, align 8, !dbg !4809
  %cmp80 = icmp slt i32 %66, %68, !dbg !4810
  br i1 %cmp80, label %for.body82, label %for.end144, !dbg !4811

for.body82:                                       ; preds = %for.cond78
  %69 = load i32, i32* %i, align 4, !dbg !4812
  %idxprom83 = sext i32 %69 to i64, !dbg !4815
  %70 = load i32, i32* %ch, align 4, !dbg !4816
  %idxprom84 = sext i32 %70 to i64, !dbg !4815
  %arrayidx85 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom84, !dbg !4815
  %arrayidx86 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx85, i64 0, i64 %idxprom83, !dbg !4815
  %71 = load i8, i8* %arrayidx86, align 1, !dbg !4815
  %tobool87 = icmp ne i8 %71, 0, !dbg !4815
  br i1 %tobool87, label %if.then88, label %if.end141, !dbg !4817

if.then88:                                        ; preds = %for.body82
  %72 = load i32, i32* %i, align 4, !dbg !4818
  %idxprom89 = sext i32 %72 to i64, !dbg !4820
  %73 = load i32, i32* %ch, align 4, !dbg !4821
  %idxprom90 = sext i32 %73 to i64, !dbg !4820
  %arrayidx91 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 %idxprom90, !dbg !4820
  %arrayidx92 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx91, i64 0, i64 %idxprom89, !dbg !4820
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx92, i32 0, i32 0, !dbg !4820
  store i8* %arraydecay, i8** %sf, align 8, !dbg !4822
  %74 = load i32, i32* %i, align 4, !dbg !4823
  %idxprom93 = sext i32 %74 to i64, !dbg !4824
  %75 = load i32, i32* %ch, align 4, !dbg !4825
  %idxprom94 = sext i32 %75 to i64, !dbg !4824
  %arrayidx95 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_code, i64 0, i64 %idxprom94, !dbg !4824
  %arrayidx96 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx95, i64 0, i64 %idxprom93, !dbg !4824
  %76 = load i8, i8* %arrayidx96, align 1, !dbg !4824
  %conv97 = zext i8 %76 to i32, !dbg !4824
  switch i32 %conv97, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb110
    i32 1, label %sw.bb119
    i32 3, label %sw.bb130
  ], !dbg !4826

sw.default:                                       ; preds = %if.then88
  br label %sw.bb, !dbg !4827

sw.bb:                                            ; preds = %if.then88, %sw.default
  %77 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4829
  %gb98 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %77, i32 0, i32 14, !dbg !4831
  %call99 = call i32 @get_bits(%struct.GetBitContext* %gb98, i32 6), !dbg !4832
  %conv100 = trunc i32 %call99 to i8, !dbg !4832
  %78 = load i8*, i8** %sf, align 8, !dbg !4833
  %arrayidx101 = getelementptr inbounds i8, i8* %78, i64 0, !dbg !4833
  store i8 %conv100, i8* %arrayidx101, align 1, !dbg !4834
  %79 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4835
  %gb102 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %79, i32 0, i32 14, !dbg !4836
  %call103 = call i32 @get_bits(%struct.GetBitContext* %gb102, i32 6), !dbg !4837
  %conv104 = trunc i32 %call103 to i8, !dbg !4837
  %80 = load i8*, i8** %sf, align 8, !dbg !4838
  %arrayidx105 = getelementptr inbounds i8, i8* %80, i64 1, !dbg !4838
  store i8 %conv104, i8* %arrayidx105, align 1, !dbg !4839
  %81 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4840
  %gb106 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %81, i32 0, i32 14, !dbg !4841
  %call107 = call i32 @get_bits(%struct.GetBitContext* %gb106, i32 6), !dbg !4842
  %conv108 = trunc i32 %call107 to i8, !dbg !4842
  %82 = load i8*, i8** %sf, align 8, !dbg !4843
  %arrayidx109 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !4843
  store i8 %conv108, i8* %arrayidx109, align 1, !dbg !4844
  br label %sw.epilog, !dbg !4845

sw.bb110:                                         ; preds = %if.then88
  %83 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4846
  %gb111 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %83, i32 0, i32 14, !dbg !4847
  %call112 = call i32 @get_bits(%struct.GetBitContext* %gb111, i32 6), !dbg !4848
  %conv113 = trunc i32 %call112 to i8, !dbg !4848
  %84 = load i8*, i8** %sf, align 8, !dbg !4849
  %arrayidx114 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !4849
  store i8 %conv113, i8* %arrayidx114, align 1, !dbg !4850
  %85 = load i8*, i8** %sf, align 8, !dbg !4851
  %arrayidx115 = getelementptr inbounds i8, i8* %85, i64 0, !dbg !4851
  %86 = load i8, i8* %arrayidx115, align 1, !dbg !4851
  %87 = load i8*, i8** %sf, align 8, !dbg !4852
  %arrayidx116 = getelementptr inbounds i8, i8* %87, i64 1, !dbg !4852
  store i8 %86, i8* %arrayidx116, align 1, !dbg !4853
  %88 = load i8*, i8** %sf, align 8, !dbg !4854
  %arrayidx117 = getelementptr inbounds i8, i8* %88, i64 0, !dbg !4854
  %89 = load i8, i8* %arrayidx117, align 1, !dbg !4854
  %90 = load i8*, i8** %sf, align 8, !dbg !4855
  %arrayidx118 = getelementptr inbounds i8, i8* %90, i64 2, !dbg !4855
  store i8 %89, i8* %arrayidx118, align 1, !dbg !4856
  br label %sw.epilog, !dbg !4857

sw.bb119:                                         ; preds = %if.then88
  %91 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4858
  %gb120 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %91, i32 0, i32 14, !dbg !4859
  %call121 = call i32 @get_bits(%struct.GetBitContext* %gb120, i32 6), !dbg !4860
  %conv122 = trunc i32 %call121 to i8, !dbg !4860
  %92 = load i8*, i8** %sf, align 8, !dbg !4861
  %arrayidx123 = getelementptr inbounds i8, i8* %92, i64 0, !dbg !4861
  store i8 %conv122, i8* %arrayidx123, align 1, !dbg !4862
  %93 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4863
  %gb124 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %93, i32 0, i32 14, !dbg !4864
  %call125 = call i32 @get_bits(%struct.GetBitContext* %gb124, i32 6), !dbg !4865
  %conv126 = trunc i32 %call125 to i8, !dbg !4865
  %94 = load i8*, i8** %sf, align 8, !dbg !4866
  %arrayidx127 = getelementptr inbounds i8, i8* %94, i64 2, !dbg !4866
  store i8 %conv126, i8* %arrayidx127, align 1, !dbg !4867
  %95 = load i8*, i8** %sf, align 8, !dbg !4868
  %arrayidx128 = getelementptr inbounds i8, i8* %95, i64 0, !dbg !4868
  %96 = load i8, i8* %arrayidx128, align 1, !dbg !4868
  %97 = load i8*, i8** %sf, align 8, !dbg !4869
  %arrayidx129 = getelementptr inbounds i8, i8* %97, i64 1, !dbg !4869
  store i8 %96, i8* %arrayidx129, align 1, !dbg !4870
  br label %sw.epilog, !dbg !4871

sw.bb130:                                         ; preds = %if.then88
  %98 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4872
  %gb131 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %98, i32 0, i32 14, !dbg !4873
  %call132 = call i32 @get_bits(%struct.GetBitContext* %gb131, i32 6), !dbg !4874
  %conv133 = trunc i32 %call132 to i8, !dbg !4874
  %99 = load i8*, i8** %sf, align 8, !dbg !4875
  %arrayidx134 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !4875
  store i8 %conv133, i8* %arrayidx134, align 1, !dbg !4876
  %100 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4877
  %gb135 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %100, i32 0, i32 14, !dbg !4878
  %call136 = call i32 @get_bits(%struct.GetBitContext* %gb135, i32 6), !dbg !4879
  %conv137 = trunc i32 %call136 to i8, !dbg !4879
  %101 = load i8*, i8** %sf, align 8, !dbg !4880
  %arrayidx138 = getelementptr inbounds i8, i8* %101, i64 2, !dbg !4880
  store i8 %conv137, i8* %arrayidx138, align 1, !dbg !4881
  %102 = load i8*, i8** %sf, align 8, !dbg !4882
  %arrayidx139 = getelementptr inbounds i8, i8* %102, i64 2, !dbg !4882
  %103 = load i8, i8* %arrayidx139, align 1, !dbg !4882
  %104 = load i8*, i8** %sf, align 8, !dbg !4883
  %arrayidx140 = getelementptr inbounds i8, i8* %104, i64 1, !dbg !4883
  store i8 %103, i8* %arrayidx140, align 1, !dbg !4884
  br label %sw.epilog, !dbg !4885

sw.epilog:                                        ; preds = %sw.bb130, %sw.bb119, %sw.bb110, %sw.bb
  br label %if.end141, !dbg !4886

if.end141:                                        ; preds = %sw.epilog, %for.body82
  br label %for.inc142, !dbg !4887

for.inc142:                                       ; preds = %if.end141
  %105 = load i32, i32* %ch, align 4, !dbg !4888
  %inc143 = add nsw i32 %105, 1, !dbg !4888
  store i32 %inc143, i32* %ch, align 4, !dbg !4888
  br label %for.cond78, !dbg !4890, !llvm.loop !4891

for.end144:                                       ; preds = %for.cond78
  br label %for.inc145, !dbg !4893

for.inc145:                                       ; preds = %for.end144
  %106 = load i32, i32* %i, align 4, !dbg !4894
  %inc146 = add nsw i32 %106, 1, !dbg !4894
  store i32 %inc146, i32* %i, align 4, !dbg !4894
  br label %for.cond74, !dbg !4896, !llvm.loop !4897

for.end147:                                       ; preds = %for.cond74
  store i32 0, i32* %k, align 4, !dbg !4899
  br label %for.cond148, !dbg !4901

for.cond148:                                      ; preds = %for.inc553, %for.end147
  %107 = load i32, i32* %k, align 4, !dbg !4902
  %cmp149 = icmp slt i32 %107, 3, !dbg !4905
  br i1 %cmp149, label %for.body151, label %for.end555, !dbg !4906

for.body151:                                      ; preds = %for.cond148
  store i32 0, i32* %l, align 4, !dbg !4907
  br label %for.cond152, !dbg !4910

for.cond152:                                      ; preds = %for.inc550, %for.body151
  %108 = load i32, i32* %l, align 4, !dbg !4911
  %cmp153 = icmp slt i32 %108, 12, !dbg !4914
  br i1 %cmp153, label %for.body155, label %for.end552, !dbg !4915

for.body155:                                      ; preds = %for.cond152
  store i32 0, i32* %j, align 4, !dbg !4916
  store i32 0, i32* %i, align 4, !dbg !4918
  br label %for.cond156, !dbg !4920

for.cond156:                                      ; preds = %for.inc298, %for.body155
  %109 = load i32, i32* %i, align 4, !dbg !4921
  %110 = load i32, i32* %bound, align 4, !dbg !4924
  %cmp157 = icmp slt i32 %109, %110, !dbg !4925
  br i1 %cmp157, label %for.body159, label %for.end300, !dbg !4926

for.body159:                                      ; preds = %for.cond156
  %111 = load i32, i32* %j, align 4, !dbg !4927
  %idxprom160 = sext i32 %111 to i64, !dbg !4929
  %112 = load i8*, i8** %alloc_table, align 8, !dbg !4929
  %arrayidx161 = getelementptr inbounds i8, i8* %112, i64 %idxprom160, !dbg !4929
  %113 = load i8, i8* %arrayidx161, align 1, !dbg !4929
  %conv162 = zext i8 %113 to i32, !dbg !4929
  store i32 %conv162, i32* %bit_alloc_bits, align 4, !dbg !4930
  store i32 0, i32* %ch, align 4, !dbg !4931
  br label %for.cond163, !dbg !4933

for.cond163:                                      ; preds = %for.inc293, %for.body159
  %114 = load i32, i32* %ch, align 4, !dbg !4934
  %115 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4937
  %nb_channels164 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %115, i32 0, i32 6, !dbg !4938
  %116 = load i32, i32* %nb_channels164, align 8, !dbg !4938
  %cmp165 = icmp slt i32 %114, %116, !dbg !4939
  br i1 %cmp165, label %for.body167, label %for.end295, !dbg !4940

for.body167:                                      ; preds = %for.cond163
  %117 = load i32, i32* %i, align 4, !dbg !4941
  %idxprom168 = sext i32 %117 to i64, !dbg !4943
  %118 = load i32, i32* %ch, align 4, !dbg !4944
  %idxprom169 = sext i32 %118 to i64, !dbg !4943
  %arrayidx170 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom169, !dbg !4943
  %arrayidx171 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx170, i64 0, i64 %idxprom168, !dbg !4943
  %119 = load i8, i8* %arrayidx171, align 1, !dbg !4943
  %conv172 = zext i8 %119 to i32, !dbg !4943
  store i32 %conv172, i32* %b, align 4, !dbg !4945
  %120 = load i32, i32* %b, align 4, !dbg !4946
  %tobool173 = icmp ne i32 %120, 0, !dbg !4946
  br i1 %tobool173, label %if.then174, label %if.else261, !dbg !4948

if.then174:                                       ; preds = %for.body167
  %121 = load i32, i32* %k, align 4, !dbg !4949
  %idxprom175 = sext i32 %121 to i64, !dbg !4951
  %122 = load i32, i32* %i, align 4, !dbg !4952
  %idxprom176 = sext i32 %122 to i64, !dbg !4951
  %123 = load i32, i32* %ch, align 4, !dbg !4953
  %idxprom177 = sext i32 %123 to i64, !dbg !4951
  %arrayidx178 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 %idxprom177, !dbg !4951
  %arrayidx179 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx178, i64 0, i64 %idxprom176, !dbg !4951
  %arrayidx180 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx179, i64 0, i64 %idxprom175, !dbg !4951
  %124 = load i8, i8* %arrayidx180, align 1, !dbg !4951
  %conv181 = zext i8 %124 to i32, !dbg !4951
  store i32 %conv181, i32* %scale, align 4, !dbg !4954
  %125 = load i32, i32* %j, align 4, !dbg !4955
  %126 = load i32, i32* %b, align 4, !dbg !4956
  %add182 = add nsw i32 %125, %126, !dbg !4957
  %idxprom183 = sext i32 %add182 to i64, !dbg !4958
  %127 = load i8*, i8** %alloc_table, align 8, !dbg !4958
  %arrayidx184 = getelementptr inbounds i8, i8* %127, i64 %idxprom183, !dbg !4958
  %128 = load i8, i8* %arrayidx184, align 1, !dbg !4958
  %conv185 = zext i8 %128 to i32, !dbg !4958
  store i32 %conv185, i32* %qindex, align 4, !dbg !4959
  %129 = load i32, i32* %qindex, align 4, !dbg !4960
  %idxprom186 = sext i32 %129 to i64, !dbg !4961
  %arrayidx187 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom186, !dbg !4961
  %130 = load i32, i32* %arrayidx187, align 4, !dbg !4961
  store i32 %130, i32* %bits, align 4, !dbg !4962
  %131 = load i32, i32* %bits, align 4, !dbg !4963
  %cmp188 = icmp slt i32 %131, 0, !dbg !4965
  br i1 %cmp188, label %if.then190, label %if.else237, !dbg !4966

if.then190:                                       ; preds = %if.then174
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !4967, metadata !2031), !dbg !4969
  %132 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4970
  %gb191 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %132, i32 0, i32 14, !dbg !4971
  %133 = load i32, i32* %bits, align 4, !dbg !4972
  %sub = sub nsw i32 0, %133, !dbg !4973
  %call192 = call i32 @get_bits(%struct.GetBitContext* %gb191, i32 %sub), !dbg !4974
  store i32 %call192, i32* %v, align 4, !dbg !4975
  %134 = load i32, i32* %v, align 4, !dbg !4976
  %idxprom193 = sext i32 %134 to i64, !dbg !4977
  %135 = load i32, i32* %qindex, align 4, !dbg !4978
  %idxprom194 = sext i32 %135 to i64, !dbg !4977
  %arrayidx195 = getelementptr inbounds [4 x i16*], [4 x i16*]* @division_tabs, i64 0, i64 %idxprom194, !dbg !4977
  %136 = load i16*, i16** %arrayidx195, align 8, !dbg !4977
  %arrayidx196 = getelementptr inbounds i16, i16* %136, i64 %idxprom193, !dbg !4977
  %137 = load i16, i16* %arrayidx196, align 2, !dbg !4977
  %conv197 = sext i16 %137 to i32, !dbg !4977
  store i32 %conv197, i32* %v2, align 4, !dbg !4979
  %138 = load i32, i32* %qindex, align 4, !dbg !4980
  %idxprom198 = sext i32 %138 to i64, !dbg !4981
  %arrayidx199 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_steps, i64 0, i64 %idxprom198, !dbg !4981
  %139 = load i32, i32* %arrayidx199, align 4, !dbg !4981
  store i32 %139, i32* %steps, align 4, !dbg !4982
  %140 = load i32, i32* %steps, align 4, !dbg !4983
  %141 = load i32, i32* %v2, align 4, !dbg !4984
  %and = and i32 %141, 15, !dbg !4985
  %142 = load i32, i32* %scale, align 4, !dbg !4986
  %call200 = call i32 @l2_unscale_group(i32 %140, i32 %and, i32 %142), !dbg !4987
  %conv201 = sitofp i32 %call200 to float, !dbg !4987
  %143 = load i32, i32* %i, align 4, !dbg !4988
  %idxprom202 = sext i32 %143 to i64, !dbg !4989
  %144 = load i32, i32* %k, align 4, !dbg !4990
  %mul203 = mul nsw i32 %144, 12, !dbg !4991
  %145 = load i32, i32* %l, align 4, !dbg !4992
  %add204 = add nsw i32 %mul203, %145, !dbg !4993
  %add205 = add nsw i32 %add204, 0, !dbg !4994
  %idxprom206 = sext i32 %add205 to i64, !dbg !4989
  %146 = load i32, i32* %ch, align 4, !dbg !4995
  %idxprom207 = sext i32 %146 to i64, !dbg !4989
  %147 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4989
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %147, i32 0, i32 20, !dbg !4996
  %arrayidx208 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples, i64 0, i64 %idxprom207, !dbg !4989
  %arrayidx209 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx208, i64 0, i64 %idxprom206, !dbg !4989
  %arrayidx210 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx209, i64 0, i64 %idxprom202, !dbg !4989
  store float %conv201, float* %arrayidx210, align 4, !dbg !4997
  %148 = load i32, i32* %steps, align 4, !dbg !4998
  %149 = load i32, i32* %v2, align 4, !dbg !4999
  %shr = ashr i32 %149, 4, !dbg !5000
  %and211 = and i32 %shr, 15, !dbg !5001
  %150 = load i32, i32* %scale, align 4, !dbg !5002
  %call212 = call i32 @l2_unscale_group(i32 %148, i32 %and211, i32 %150), !dbg !5003
  %conv213 = sitofp i32 %call212 to float, !dbg !5003
  %151 = load i32, i32* %i, align 4, !dbg !5004
  %idxprom214 = sext i32 %151 to i64, !dbg !5005
  %152 = load i32, i32* %k, align 4, !dbg !5006
  %mul215 = mul nsw i32 %152, 12, !dbg !5007
  %153 = load i32, i32* %l, align 4, !dbg !5008
  %add216 = add nsw i32 %mul215, %153, !dbg !5009
  %add217 = add nsw i32 %add216, 1, !dbg !5010
  %idxprom218 = sext i32 %add217 to i64, !dbg !5005
  %154 = load i32, i32* %ch, align 4, !dbg !5011
  %idxprom219 = sext i32 %154 to i64, !dbg !5005
  %155 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5005
  %sb_samples220 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %155, i32 0, i32 20, !dbg !5012
  %arrayidx221 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples220, i64 0, i64 %idxprom219, !dbg !5005
  %arrayidx222 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx221, i64 0, i64 %idxprom218, !dbg !5005
  %arrayidx223 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx222, i64 0, i64 %idxprom214, !dbg !5005
  store float %conv213, float* %arrayidx223, align 4, !dbg !5013
  %156 = load i32, i32* %steps, align 4, !dbg !5014
  %157 = load i32, i32* %v2, align 4, !dbg !5015
  %shr224 = ashr i32 %157, 8, !dbg !5016
  %158 = load i32, i32* %scale, align 4, !dbg !5017
  %call225 = call i32 @l2_unscale_group(i32 %156, i32 %shr224, i32 %158), !dbg !5018
  %conv226 = sitofp i32 %call225 to float, !dbg !5018
  %159 = load i32, i32* %i, align 4, !dbg !5019
  %idxprom227 = sext i32 %159 to i64, !dbg !5020
  %160 = load i32, i32* %k, align 4, !dbg !5021
  %mul228 = mul nsw i32 %160, 12, !dbg !5022
  %161 = load i32, i32* %l, align 4, !dbg !5023
  %add229 = add nsw i32 %mul228, %161, !dbg !5024
  %add230 = add nsw i32 %add229, 2, !dbg !5025
  %idxprom231 = sext i32 %add230 to i64, !dbg !5020
  %162 = load i32, i32* %ch, align 4, !dbg !5026
  %idxprom232 = sext i32 %162 to i64, !dbg !5020
  %163 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5020
  %sb_samples233 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %163, i32 0, i32 20, !dbg !5027
  %arrayidx234 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples233, i64 0, i64 %idxprom232, !dbg !5020
  %arrayidx235 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx234, i64 0, i64 %idxprom231, !dbg !5020
  %arrayidx236 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx235, i64 0, i64 %idxprom227, !dbg !5020
  store float %conv226, float* %arrayidx236, align 4, !dbg !5028
  br label %if.end260, !dbg !5029

if.else237:                                       ; preds = %if.then174
  store i32 0, i32* %m, align 4, !dbg !5030
  br label %for.cond238, !dbg !5033

for.cond238:                                      ; preds = %for.inc257, %if.else237
  %164 = load i32, i32* %m, align 4, !dbg !5034
  %cmp239 = icmp slt i32 %164, 3, !dbg !5037
  br i1 %cmp239, label %for.body241, label %for.end259, !dbg !5038

for.body241:                                      ; preds = %for.cond238
  %165 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5039
  %gb242 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %165, i32 0, i32 14, !dbg !5041
  %166 = load i32, i32* %bits, align 4, !dbg !5042
  %call243 = call i32 @get_bits(%struct.GetBitContext* %gb242, i32 %166), !dbg !5043
  store i32 %call243, i32* %v, align 4, !dbg !5044
  %167 = load i32, i32* %bits, align 4, !dbg !5045
  %sub244 = sub nsw i32 %167, 1, !dbg !5046
  %168 = load i32, i32* %v, align 4, !dbg !5047
  %169 = load i32, i32* %scale, align 4, !dbg !5048
  %call245 = call i32 @l1_unscale(i32 %sub244, i32 %168, i32 %169), !dbg !5049
  store i32 %call245, i32* %v, align 4, !dbg !5050
  %170 = load i32, i32* %v, align 4, !dbg !5051
  %conv246 = sitofp i32 %170 to float, !dbg !5051
  %171 = load i32, i32* %i, align 4, !dbg !5052
  %idxprom247 = sext i32 %171 to i64, !dbg !5053
  %172 = load i32, i32* %k, align 4, !dbg !5054
  %mul248 = mul nsw i32 %172, 12, !dbg !5055
  %173 = load i32, i32* %l, align 4, !dbg !5056
  %add249 = add nsw i32 %mul248, %173, !dbg !5057
  %174 = load i32, i32* %m, align 4, !dbg !5058
  %add250 = add nsw i32 %add249, %174, !dbg !5059
  %idxprom251 = sext i32 %add250 to i64, !dbg !5053
  %175 = load i32, i32* %ch, align 4, !dbg !5060
  %idxprom252 = sext i32 %175 to i64, !dbg !5053
  %176 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5053
  %sb_samples253 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %176, i32 0, i32 20, !dbg !5061
  %arrayidx254 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples253, i64 0, i64 %idxprom252, !dbg !5053
  %arrayidx255 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx254, i64 0, i64 %idxprom251, !dbg !5053
  %arrayidx256 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx255, i64 0, i64 %idxprom247, !dbg !5053
  store float %conv246, float* %arrayidx256, align 4, !dbg !5062
  br label %for.inc257, !dbg !5063

for.inc257:                                       ; preds = %for.body241
  %177 = load i32, i32* %m, align 4, !dbg !5064
  %inc258 = add nsw i32 %177, 1, !dbg !5064
  store i32 %inc258, i32* %m, align 4, !dbg !5064
  br label %for.cond238, !dbg !5066, !llvm.loop !5067

for.end259:                                       ; preds = %for.cond238
  br label %if.end260

if.end260:                                        ; preds = %for.end259, %if.then190
  br label %if.end292, !dbg !5069

if.else261:                                       ; preds = %for.body167
  %178 = load i32, i32* %i, align 4, !dbg !5070
  %idxprom262 = sext i32 %178 to i64, !dbg !5072
  %179 = load i32, i32* %k, align 4, !dbg !5073
  %mul263 = mul nsw i32 %179, 12, !dbg !5074
  %180 = load i32, i32* %l, align 4, !dbg !5075
  %add264 = add nsw i32 %mul263, %180, !dbg !5076
  %add265 = add nsw i32 %add264, 0, !dbg !5077
  %idxprom266 = sext i32 %add265 to i64, !dbg !5072
  %181 = load i32, i32* %ch, align 4, !dbg !5078
  %idxprom267 = sext i32 %181 to i64, !dbg !5072
  %182 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5072
  %sb_samples268 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %182, i32 0, i32 20, !dbg !5079
  %arrayidx269 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples268, i64 0, i64 %idxprom267, !dbg !5072
  %arrayidx270 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx269, i64 0, i64 %idxprom266, !dbg !5072
  %arrayidx271 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx270, i64 0, i64 %idxprom262, !dbg !5072
  store float 0.000000e+00, float* %arrayidx271, align 4, !dbg !5080
  %183 = load i32, i32* %i, align 4, !dbg !5081
  %idxprom272 = sext i32 %183 to i64, !dbg !5082
  %184 = load i32, i32* %k, align 4, !dbg !5083
  %mul273 = mul nsw i32 %184, 12, !dbg !5084
  %185 = load i32, i32* %l, align 4, !dbg !5085
  %add274 = add nsw i32 %mul273, %185, !dbg !5086
  %add275 = add nsw i32 %add274, 1, !dbg !5087
  %idxprom276 = sext i32 %add275 to i64, !dbg !5082
  %186 = load i32, i32* %ch, align 4, !dbg !5088
  %idxprom277 = sext i32 %186 to i64, !dbg !5082
  %187 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5082
  %sb_samples278 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %187, i32 0, i32 20, !dbg !5089
  %arrayidx279 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples278, i64 0, i64 %idxprom277, !dbg !5082
  %arrayidx280 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx279, i64 0, i64 %idxprom276, !dbg !5082
  %arrayidx281 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx280, i64 0, i64 %idxprom272, !dbg !5082
  store float 0.000000e+00, float* %arrayidx281, align 4, !dbg !5090
  %188 = load i32, i32* %i, align 4, !dbg !5091
  %idxprom282 = sext i32 %188 to i64, !dbg !5092
  %189 = load i32, i32* %k, align 4, !dbg !5093
  %mul283 = mul nsw i32 %189, 12, !dbg !5094
  %190 = load i32, i32* %l, align 4, !dbg !5095
  %add284 = add nsw i32 %mul283, %190, !dbg !5096
  %add285 = add nsw i32 %add284, 2, !dbg !5097
  %idxprom286 = sext i32 %add285 to i64, !dbg !5092
  %191 = load i32, i32* %ch, align 4, !dbg !5098
  %idxprom287 = sext i32 %191 to i64, !dbg !5092
  %192 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5092
  %sb_samples288 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %192, i32 0, i32 20, !dbg !5099
  %arrayidx289 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples288, i64 0, i64 %idxprom287, !dbg !5092
  %arrayidx290 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx289, i64 0, i64 %idxprom286, !dbg !5092
  %arrayidx291 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx290, i64 0, i64 %idxprom282, !dbg !5092
  store float 0.000000e+00, float* %arrayidx291, align 4, !dbg !5100
  br label %if.end292

if.end292:                                        ; preds = %if.else261, %if.end260
  br label %for.inc293, !dbg !5101

for.inc293:                                       ; preds = %if.end292
  %193 = load i32, i32* %ch, align 4, !dbg !5102
  %inc294 = add nsw i32 %193, 1, !dbg !5102
  store i32 %inc294, i32* %ch, align 4, !dbg !5102
  br label %for.cond163, !dbg !5104, !llvm.loop !5105

for.end295:                                       ; preds = %for.cond163
  %194 = load i32, i32* %bit_alloc_bits, align 4, !dbg !5107
  %shl296 = shl i32 1, %194, !dbg !5108
  %195 = load i32, i32* %j, align 4, !dbg !5109
  %add297 = add nsw i32 %195, %shl296, !dbg !5109
  store i32 %add297, i32* %j, align 4, !dbg !5109
  br label %for.inc298, !dbg !5110

for.inc298:                                       ; preds = %for.end295
  %196 = load i32, i32* %i, align 4, !dbg !5111
  %inc299 = add nsw i32 %196, 1, !dbg !5111
  store i32 %inc299, i32* %i, align 4, !dbg !5111
  br label %for.cond156, !dbg !5113, !llvm.loop !5114

for.end300:                                       ; preds = %for.cond156
  %197 = load i32, i32* %bound, align 4, !dbg !5116
  store i32 %197, i32* %i, align 4, !dbg !5118
  br label %for.cond301, !dbg !5119

for.cond301:                                      ; preds = %for.inc502, %for.end300
  %198 = load i32, i32* %i, align 4, !dbg !5120
  %199 = load i32, i32* %sblimit, align 4, !dbg !5123
  %cmp302 = icmp slt i32 %198, %199, !dbg !5124
  br i1 %cmp302, label %for.body304, label %for.end504, !dbg !5125

for.body304:                                      ; preds = %for.cond301
  %200 = load i32, i32* %j, align 4, !dbg !5126
  %idxprom305 = sext i32 %200 to i64, !dbg !5128
  %201 = load i8*, i8** %alloc_table, align 8, !dbg !5128
  %arrayidx306 = getelementptr inbounds i8, i8* %201, i64 %idxprom305, !dbg !5128
  %202 = load i8, i8* %arrayidx306, align 1, !dbg !5128
  %conv307 = zext i8 %202 to i32, !dbg !5128
  store i32 %conv307, i32* %bit_alloc_bits, align 4, !dbg !5129
  %203 = load i32, i32* %i, align 4, !dbg !5130
  %idxprom308 = sext i32 %203 to i64, !dbg !5131
  %arrayidx309 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 0, !dbg !5131
  %arrayidx310 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx309, i64 0, i64 %idxprom308, !dbg !5131
  %204 = load i8, i8* %arrayidx310, align 1, !dbg !5131
  %conv311 = zext i8 %204 to i32, !dbg !5131
  store i32 %conv311, i32* %b, align 4, !dbg !5132
  %205 = load i32, i32* %b, align 4, !dbg !5133
  %tobool312 = icmp ne i32 %205, 0, !dbg !5133
  br i1 %tobool312, label %if.then313, label %if.else444, !dbg !5135

if.then313:                                       ; preds = %for.body304
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !5136, metadata !2031), !dbg !5138
  call void @llvm.dbg.declare(metadata i32* %scale0, metadata !5139, metadata !2031), !dbg !5140
  call void @llvm.dbg.declare(metadata i32* %scale1, metadata !5141, metadata !2031), !dbg !5142
  %206 = load i32, i32* %k, align 4, !dbg !5143
  %idxprom314 = sext i32 %206 to i64, !dbg !5144
  %207 = load i32, i32* %i, align 4, !dbg !5145
  %idxprom315 = sext i32 %207 to i64, !dbg !5144
  %arrayidx316 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 0, !dbg !5144
  %arrayidx317 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx316, i64 0, i64 %idxprom315, !dbg !5144
  %arrayidx318 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx317, i64 0, i64 %idxprom314, !dbg !5144
  %208 = load i8, i8* %arrayidx318, align 1, !dbg !5144
  %conv319 = zext i8 %208 to i32, !dbg !5144
  store i32 %conv319, i32* %scale0, align 4, !dbg !5146
  %209 = load i32, i32* %k, align 4, !dbg !5147
  %idxprom320 = sext i32 %209 to i64, !dbg !5148
  %210 = load i32, i32* %i, align 4, !dbg !5149
  %idxprom321 = sext i32 %210 to i64, !dbg !5148
  %arrayidx322 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 1, !dbg !5148
  %arrayidx323 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx322, i64 0, i64 %idxprom321, !dbg !5148
  %arrayidx324 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx323, i64 0, i64 %idxprom320, !dbg !5148
  %211 = load i8, i8* %arrayidx324, align 1, !dbg !5148
  %conv325 = zext i8 %211 to i32, !dbg !5148
  store i32 %conv325, i32* %scale1, align 4, !dbg !5150
  %212 = load i32, i32* %j, align 4, !dbg !5151
  %213 = load i32, i32* %b, align 4, !dbg !5152
  %add326 = add nsw i32 %212, %213, !dbg !5153
  %idxprom327 = sext i32 %add326 to i64, !dbg !5154
  %214 = load i8*, i8** %alloc_table, align 8, !dbg !5154
  %arrayidx328 = getelementptr inbounds i8, i8* %214, i64 %idxprom327, !dbg !5154
  %215 = load i8, i8* %arrayidx328, align 1, !dbg !5154
  %conv329 = zext i8 %215 to i32, !dbg !5154
  store i32 %conv329, i32* %qindex, align 4, !dbg !5155
  %216 = load i32, i32* %qindex, align 4, !dbg !5156
  %idxprom330 = sext i32 %216 to i64, !dbg !5157
  %arrayidx331 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom330, !dbg !5157
  %217 = load i32, i32* %arrayidx331, align 4, !dbg !5157
  store i32 %217, i32* %bits, align 4, !dbg !5158
  %218 = load i32, i32* %bits, align 4, !dbg !5159
  %cmp332 = icmp slt i32 %218, 0, !dbg !5161
  br i1 %cmp332, label %if.then334, label %if.else409, !dbg !5162

if.then334:                                       ; preds = %if.then313
  %219 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5163
  %gb335 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %219, i32 0, i32 14, !dbg !5165
  %220 = load i32, i32* %bits, align 4, !dbg !5166
  %sub336 = sub nsw i32 0, %220, !dbg !5167
  %call337 = call i32 @get_bits(%struct.GetBitContext* %gb335, i32 %sub336), !dbg !5168
  store i32 %call337, i32* %v, align 4, !dbg !5169
  %221 = load i32, i32* %qindex, align 4, !dbg !5170
  %idxprom338 = sext i32 %221 to i64, !dbg !5171
  %arrayidx339 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_steps, i64 0, i64 %idxprom338, !dbg !5171
  %222 = load i32, i32* %arrayidx339, align 4, !dbg !5171
  store i32 %222, i32* %steps, align 4, !dbg !5172
  %223 = load i32, i32* %v, align 4, !dbg !5173
  %224 = load i32, i32* %steps, align 4, !dbg !5174
  %rem = srem i32 %223, %224, !dbg !5175
  store i32 %rem, i32* %mant, align 4, !dbg !5176
  %225 = load i32, i32* %v, align 4, !dbg !5177
  %226 = load i32, i32* %steps, align 4, !dbg !5178
  %div340 = sdiv i32 %225, %226, !dbg !5179
  store i32 %div340, i32* %v, align 4, !dbg !5180
  %227 = load i32, i32* %steps, align 4, !dbg !5181
  %228 = load i32, i32* %mant, align 4, !dbg !5182
  %229 = load i32, i32* %scale0, align 4, !dbg !5183
  %call341 = call i32 @l2_unscale_group(i32 %227, i32 %228, i32 %229), !dbg !5184
  %conv342 = sitofp i32 %call341 to float, !dbg !5184
  %230 = load i32, i32* %i, align 4, !dbg !5185
  %idxprom343 = sext i32 %230 to i64, !dbg !5186
  %231 = load i32, i32* %k, align 4, !dbg !5187
  %mul344 = mul nsw i32 %231, 12, !dbg !5188
  %232 = load i32, i32* %l, align 4, !dbg !5189
  %add345 = add nsw i32 %mul344, %232, !dbg !5190
  %add346 = add nsw i32 %add345, 0, !dbg !5191
  %idxprom347 = sext i32 %add346 to i64, !dbg !5186
  %233 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5186
  %sb_samples348 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %233, i32 0, i32 20, !dbg !5192
  %arrayidx349 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples348, i64 0, i64 0, !dbg !5186
  %arrayidx350 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx349, i64 0, i64 %idxprom347, !dbg !5186
  %arrayidx351 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx350, i64 0, i64 %idxprom343, !dbg !5186
  store float %conv342, float* %arrayidx351, align 4, !dbg !5193
  %234 = load i32, i32* %steps, align 4, !dbg !5194
  %235 = load i32, i32* %mant, align 4, !dbg !5195
  %236 = load i32, i32* %scale1, align 4, !dbg !5196
  %call352 = call i32 @l2_unscale_group(i32 %234, i32 %235, i32 %236), !dbg !5197
  %conv353 = sitofp i32 %call352 to float, !dbg !5197
  %237 = load i32, i32* %i, align 4, !dbg !5198
  %idxprom354 = sext i32 %237 to i64, !dbg !5199
  %238 = load i32, i32* %k, align 4, !dbg !5200
  %mul355 = mul nsw i32 %238, 12, !dbg !5201
  %239 = load i32, i32* %l, align 4, !dbg !5202
  %add356 = add nsw i32 %mul355, %239, !dbg !5203
  %add357 = add nsw i32 %add356, 0, !dbg !5204
  %idxprom358 = sext i32 %add357 to i64, !dbg !5199
  %240 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5199
  %sb_samples359 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %240, i32 0, i32 20, !dbg !5205
  %arrayidx360 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples359, i64 0, i64 1, !dbg !5199
  %arrayidx361 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx360, i64 0, i64 %idxprom358, !dbg !5199
  %arrayidx362 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx361, i64 0, i64 %idxprom354, !dbg !5199
  store float %conv353, float* %arrayidx362, align 4, !dbg !5206
  %241 = load i32, i32* %v, align 4, !dbg !5207
  %242 = load i32, i32* %steps, align 4, !dbg !5208
  %rem363 = srem i32 %241, %242, !dbg !5209
  store i32 %rem363, i32* %mant, align 4, !dbg !5210
  %243 = load i32, i32* %v, align 4, !dbg !5211
  %244 = load i32, i32* %steps, align 4, !dbg !5212
  %div364 = sdiv i32 %243, %244, !dbg !5213
  store i32 %div364, i32* %v, align 4, !dbg !5214
  %245 = load i32, i32* %steps, align 4, !dbg !5215
  %246 = load i32, i32* %mant, align 4, !dbg !5216
  %247 = load i32, i32* %scale0, align 4, !dbg !5217
  %call365 = call i32 @l2_unscale_group(i32 %245, i32 %246, i32 %247), !dbg !5218
  %conv366 = sitofp i32 %call365 to float, !dbg !5218
  %248 = load i32, i32* %i, align 4, !dbg !5219
  %idxprom367 = sext i32 %248 to i64, !dbg !5220
  %249 = load i32, i32* %k, align 4, !dbg !5221
  %mul368 = mul nsw i32 %249, 12, !dbg !5222
  %250 = load i32, i32* %l, align 4, !dbg !5223
  %add369 = add nsw i32 %mul368, %250, !dbg !5224
  %add370 = add nsw i32 %add369, 1, !dbg !5225
  %idxprom371 = sext i32 %add370 to i64, !dbg !5220
  %251 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5220
  %sb_samples372 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %251, i32 0, i32 20, !dbg !5226
  %arrayidx373 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples372, i64 0, i64 0, !dbg !5220
  %arrayidx374 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx373, i64 0, i64 %idxprom371, !dbg !5220
  %arrayidx375 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx374, i64 0, i64 %idxprom367, !dbg !5220
  store float %conv366, float* %arrayidx375, align 4, !dbg !5227
  %252 = load i32, i32* %steps, align 4, !dbg !5228
  %253 = load i32, i32* %mant, align 4, !dbg !5229
  %254 = load i32, i32* %scale1, align 4, !dbg !5230
  %call376 = call i32 @l2_unscale_group(i32 %252, i32 %253, i32 %254), !dbg !5231
  %conv377 = sitofp i32 %call376 to float, !dbg !5231
  %255 = load i32, i32* %i, align 4, !dbg !5232
  %idxprom378 = sext i32 %255 to i64, !dbg !5233
  %256 = load i32, i32* %k, align 4, !dbg !5234
  %mul379 = mul nsw i32 %256, 12, !dbg !5235
  %257 = load i32, i32* %l, align 4, !dbg !5236
  %add380 = add nsw i32 %mul379, %257, !dbg !5237
  %add381 = add nsw i32 %add380, 1, !dbg !5238
  %idxprom382 = sext i32 %add381 to i64, !dbg !5233
  %258 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5233
  %sb_samples383 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %258, i32 0, i32 20, !dbg !5239
  %arrayidx384 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples383, i64 0, i64 1, !dbg !5233
  %arrayidx385 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx384, i64 0, i64 %idxprom382, !dbg !5233
  %arrayidx386 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx385, i64 0, i64 %idxprom378, !dbg !5233
  store float %conv377, float* %arrayidx386, align 4, !dbg !5240
  %259 = load i32, i32* %steps, align 4, !dbg !5241
  %260 = load i32, i32* %v, align 4, !dbg !5242
  %261 = load i32, i32* %scale0, align 4, !dbg !5243
  %call387 = call i32 @l2_unscale_group(i32 %259, i32 %260, i32 %261), !dbg !5244
  %conv388 = sitofp i32 %call387 to float, !dbg !5244
  %262 = load i32, i32* %i, align 4, !dbg !5245
  %idxprom389 = sext i32 %262 to i64, !dbg !5246
  %263 = load i32, i32* %k, align 4, !dbg !5247
  %mul390 = mul nsw i32 %263, 12, !dbg !5248
  %264 = load i32, i32* %l, align 4, !dbg !5249
  %add391 = add nsw i32 %mul390, %264, !dbg !5250
  %add392 = add nsw i32 %add391, 2, !dbg !5251
  %idxprom393 = sext i32 %add392 to i64, !dbg !5246
  %265 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5246
  %sb_samples394 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %265, i32 0, i32 20, !dbg !5252
  %arrayidx395 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples394, i64 0, i64 0, !dbg !5246
  %arrayidx396 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx395, i64 0, i64 %idxprom393, !dbg !5246
  %arrayidx397 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx396, i64 0, i64 %idxprom389, !dbg !5246
  store float %conv388, float* %arrayidx397, align 4, !dbg !5253
  %266 = load i32, i32* %steps, align 4, !dbg !5254
  %267 = load i32, i32* %v, align 4, !dbg !5255
  %268 = load i32, i32* %scale1, align 4, !dbg !5256
  %call398 = call i32 @l2_unscale_group(i32 %266, i32 %267, i32 %268), !dbg !5257
  %conv399 = sitofp i32 %call398 to float, !dbg !5257
  %269 = load i32, i32* %i, align 4, !dbg !5258
  %idxprom400 = sext i32 %269 to i64, !dbg !5259
  %270 = load i32, i32* %k, align 4, !dbg !5260
  %mul401 = mul nsw i32 %270, 12, !dbg !5261
  %271 = load i32, i32* %l, align 4, !dbg !5262
  %add402 = add nsw i32 %mul401, %271, !dbg !5263
  %add403 = add nsw i32 %add402, 2, !dbg !5264
  %idxprom404 = sext i32 %add403 to i64, !dbg !5259
  %272 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5259
  %sb_samples405 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %272, i32 0, i32 20, !dbg !5265
  %arrayidx406 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples405, i64 0, i64 1, !dbg !5259
  %arrayidx407 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx406, i64 0, i64 %idxprom404, !dbg !5259
  %arrayidx408 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx407, i64 0, i64 %idxprom400, !dbg !5259
  store float %conv399, float* %arrayidx408, align 4, !dbg !5266
  br label %if.end443, !dbg !5267

if.else409:                                       ; preds = %if.then313
  store i32 0, i32* %m, align 4, !dbg !5268
  br label %for.cond410, !dbg !5271

for.cond410:                                      ; preds = %for.inc440, %if.else409
  %273 = load i32, i32* %m, align 4, !dbg !5272
  %cmp411 = icmp slt i32 %273, 3, !dbg !5275
  br i1 %cmp411, label %for.body413, label %for.end442, !dbg !5276

for.body413:                                      ; preds = %for.cond410
  %274 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5277
  %gb414 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %274, i32 0, i32 14, !dbg !5279
  %275 = load i32, i32* %bits, align 4, !dbg !5280
  %call415 = call i32 @get_bits(%struct.GetBitContext* %gb414, i32 %275), !dbg !5281
  store i32 %call415, i32* %mant, align 4, !dbg !5282
  %276 = load i32, i32* %bits, align 4, !dbg !5283
  %sub416 = sub nsw i32 %276, 1, !dbg !5284
  %277 = load i32, i32* %mant, align 4, !dbg !5285
  %278 = load i32, i32* %scale0, align 4, !dbg !5286
  %call417 = call i32 @l1_unscale(i32 %sub416, i32 %277, i32 %278), !dbg !5287
  %conv418 = sitofp i32 %call417 to float, !dbg !5287
  %279 = load i32, i32* %i, align 4, !dbg !5288
  %idxprom419 = sext i32 %279 to i64, !dbg !5289
  %280 = load i32, i32* %k, align 4, !dbg !5290
  %mul420 = mul nsw i32 %280, 12, !dbg !5291
  %281 = load i32, i32* %l, align 4, !dbg !5292
  %add421 = add nsw i32 %mul420, %281, !dbg !5293
  %282 = load i32, i32* %m, align 4, !dbg !5294
  %add422 = add nsw i32 %add421, %282, !dbg !5295
  %idxprom423 = sext i32 %add422 to i64, !dbg !5289
  %283 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5289
  %sb_samples424 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %283, i32 0, i32 20, !dbg !5296
  %arrayidx425 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples424, i64 0, i64 0, !dbg !5289
  %arrayidx426 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx425, i64 0, i64 %idxprom423, !dbg !5289
  %arrayidx427 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx426, i64 0, i64 %idxprom419, !dbg !5289
  store float %conv418, float* %arrayidx427, align 4, !dbg !5297
  %284 = load i32, i32* %bits, align 4, !dbg !5298
  %sub428 = sub nsw i32 %284, 1, !dbg !5299
  %285 = load i32, i32* %mant, align 4, !dbg !5300
  %286 = load i32, i32* %scale1, align 4, !dbg !5301
  %call429 = call i32 @l1_unscale(i32 %sub428, i32 %285, i32 %286), !dbg !5302
  %conv430 = sitofp i32 %call429 to float, !dbg !5302
  %287 = load i32, i32* %i, align 4, !dbg !5303
  %idxprom431 = sext i32 %287 to i64, !dbg !5304
  %288 = load i32, i32* %k, align 4, !dbg !5305
  %mul432 = mul nsw i32 %288, 12, !dbg !5306
  %289 = load i32, i32* %l, align 4, !dbg !5307
  %add433 = add nsw i32 %mul432, %289, !dbg !5308
  %290 = load i32, i32* %m, align 4, !dbg !5309
  %add434 = add nsw i32 %add433, %290, !dbg !5310
  %idxprom435 = sext i32 %add434 to i64, !dbg !5304
  %291 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5304
  %sb_samples436 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %291, i32 0, i32 20, !dbg !5311
  %arrayidx437 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples436, i64 0, i64 1, !dbg !5304
  %arrayidx438 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx437, i64 0, i64 %idxprom435, !dbg !5304
  %arrayidx439 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx438, i64 0, i64 %idxprom431, !dbg !5304
  store float %conv430, float* %arrayidx439, align 4, !dbg !5312
  br label %for.inc440, !dbg !5313

for.inc440:                                       ; preds = %for.body413
  %292 = load i32, i32* %m, align 4, !dbg !5314
  %inc441 = add nsw i32 %292, 1, !dbg !5314
  store i32 %inc441, i32* %m, align 4, !dbg !5314
  br label %for.cond410, !dbg !5316, !llvm.loop !5317

for.end442:                                       ; preds = %for.cond410
  br label %if.end443

if.end443:                                        ; preds = %for.end442, %if.then334
  br label %if.end499, !dbg !5319

if.else444:                                       ; preds = %for.body304
  %293 = load i32, i32* %i, align 4, !dbg !5320
  %idxprom445 = sext i32 %293 to i64, !dbg !5322
  %294 = load i32, i32* %k, align 4, !dbg !5323
  %mul446 = mul nsw i32 %294, 12, !dbg !5324
  %295 = load i32, i32* %l, align 4, !dbg !5325
  %add447 = add nsw i32 %mul446, %295, !dbg !5326
  %add448 = add nsw i32 %add447, 0, !dbg !5327
  %idxprom449 = sext i32 %add448 to i64, !dbg !5322
  %296 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5322
  %sb_samples450 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %296, i32 0, i32 20, !dbg !5328
  %arrayidx451 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples450, i64 0, i64 0, !dbg !5322
  %arrayidx452 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx451, i64 0, i64 %idxprom449, !dbg !5322
  %arrayidx453 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx452, i64 0, i64 %idxprom445, !dbg !5322
  store float 0.000000e+00, float* %arrayidx453, align 4, !dbg !5329
  %297 = load i32, i32* %i, align 4, !dbg !5330
  %idxprom454 = sext i32 %297 to i64, !dbg !5331
  %298 = load i32, i32* %k, align 4, !dbg !5332
  %mul455 = mul nsw i32 %298, 12, !dbg !5333
  %299 = load i32, i32* %l, align 4, !dbg !5334
  %add456 = add nsw i32 %mul455, %299, !dbg !5335
  %add457 = add nsw i32 %add456, 1, !dbg !5336
  %idxprom458 = sext i32 %add457 to i64, !dbg !5331
  %300 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5331
  %sb_samples459 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %300, i32 0, i32 20, !dbg !5337
  %arrayidx460 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples459, i64 0, i64 0, !dbg !5331
  %arrayidx461 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx460, i64 0, i64 %idxprom458, !dbg !5331
  %arrayidx462 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx461, i64 0, i64 %idxprom454, !dbg !5331
  store float 0.000000e+00, float* %arrayidx462, align 4, !dbg !5338
  %301 = load i32, i32* %i, align 4, !dbg !5339
  %idxprom463 = sext i32 %301 to i64, !dbg !5340
  %302 = load i32, i32* %k, align 4, !dbg !5341
  %mul464 = mul nsw i32 %302, 12, !dbg !5342
  %303 = load i32, i32* %l, align 4, !dbg !5343
  %add465 = add nsw i32 %mul464, %303, !dbg !5344
  %add466 = add nsw i32 %add465, 2, !dbg !5345
  %idxprom467 = sext i32 %add466 to i64, !dbg !5340
  %304 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5340
  %sb_samples468 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %304, i32 0, i32 20, !dbg !5346
  %arrayidx469 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples468, i64 0, i64 0, !dbg !5340
  %arrayidx470 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx469, i64 0, i64 %idxprom467, !dbg !5340
  %arrayidx471 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx470, i64 0, i64 %idxprom463, !dbg !5340
  store float 0.000000e+00, float* %arrayidx471, align 4, !dbg !5347
  %305 = load i32, i32* %i, align 4, !dbg !5348
  %idxprom472 = sext i32 %305 to i64, !dbg !5349
  %306 = load i32, i32* %k, align 4, !dbg !5350
  %mul473 = mul nsw i32 %306, 12, !dbg !5351
  %307 = load i32, i32* %l, align 4, !dbg !5352
  %add474 = add nsw i32 %mul473, %307, !dbg !5353
  %add475 = add nsw i32 %add474, 0, !dbg !5354
  %idxprom476 = sext i32 %add475 to i64, !dbg !5349
  %308 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5349
  %sb_samples477 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %308, i32 0, i32 20, !dbg !5355
  %arrayidx478 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples477, i64 0, i64 1, !dbg !5349
  %arrayidx479 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx478, i64 0, i64 %idxprom476, !dbg !5349
  %arrayidx480 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx479, i64 0, i64 %idxprom472, !dbg !5349
  store float 0.000000e+00, float* %arrayidx480, align 4, !dbg !5356
  %309 = load i32, i32* %i, align 4, !dbg !5357
  %idxprom481 = sext i32 %309 to i64, !dbg !5358
  %310 = load i32, i32* %k, align 4, !dbg !5359
  %mul482 = mul nsw i32 %310, 12, !dbg !5360
  %311 = load i32, i32* %l, align 4, !dbg !5361
  %add483 = add nsw i32 %mul482, %311, !dbg !5362
  %add484 = add nsw i32 %add483, 1, !dbg !5363
  %idxprom485 = sext i32 %add484 to i64, !dbg !5358
  %312 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5358
  %sb_samples486 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %312, i32 0, i32 20, !dbg !5364
  %arrayidx487 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples486, i64 0, i64 1, !dbg !5358
  %arrayidx488 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx487, i64 0, i64 %idxprom485, !dbg !5358
  %arrayidx489 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx488, i64 0, i64 %idxprom481, !dbg !5358
  store float 0.000000e+00, float* %arrayidx489, align 4, !dbg !5365
  %313 = load i32, i32* %i, align 4, !dbg !5366
  %idxprom490 = sext i32 %313 to i64, !dbg !5367
  %314 = load i32, i32* %k, align 4, !dbg !5368
  %mul491 = mul nsw i32 %314, 12, !dbg !5369
  %315 = load i32, i32* %l, align 4, !dbg !5370
  %add492 = add nsw i32 %mul491, %315, !dbg !5371
  %add493 = add nsw i32 %add492, 2, !dbg !5372
  %idxprom494 = sext i32 %add493 to i64, !dbg !5367
  %316 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5367
  %sb_samples495 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %316, i32 0, i32 20, !dbg !5373
  %arrayidx496 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples495, i64 0, i64 1, !dbg !5367
  %arrayidx497 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx496, i64 0, i64 %idxprom494, !dbg !5367
  %arrayidx498 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx497, i64 0, i64 %idxprom490, !dbg !5367
  store float 0.000000e+00, float* %arrayidx498, align 4, !dbg !5374
  br label %if.end499

if.end499:                                        ; preds = %if.else444, %if.end443
  %317 = load i32, i32* %bit_alloc_bits, align 4, !dbg !5375
  %shl500 = shl i32 1, %317, !dbg !5376
  %318 = load i32, i32* %j, align 4, !dbg !5377
  %add501 = add nsw i32 %318, %shl500, !dbg !5377
  store i32 %add501, i32* %j, align 4, !dbg !5377
  br label %for.inc502, !dbg !5378

for.inc502:                                       ; preds = %if.end499
  %319 = load i32, i32* %i, align 4, !dbg !5379
  %inc503 = add nsw i32 %319, 1, !dbg !5379
  store i32 %inc503, i32* %i, align 4, !dbg !5379
  br label %for.cond301, !dbg !5381, !llvm.loop !5382

for.end504:                                       ; preds = %for.cond301
  %320 = load i32, i32* %sblimit, align 4, !dbg !5384
  store i32 %320, i32* %i, align 4, !dbg !5386
  br label %for.cond505, !dbg !5387

for.cond505:                                      ; preds = %for.inc547, %for.end504
  %321 = load i32, i32* %i, align 4, !dbg !5388
  %cmp506 = icmp slt i32 %321, 32, !dbg !5391
  br i1 %cmp506, label %for.body508, label %for.end549, !dbg !5392

for.body508:                                      ; preds = %for.cond505
  store i32 0, i32* %ch, align 4, !dbg !5393
  br label %for.cond509, !dbg !5396

for.cond509:                                      ; preds = %for.inc544, %for.body508
  %322 = load i32, i32* %ch, align 4, !dbg !5397
  %323 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5400
  %nb_channels510 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %323, i32 0, i32 6, !dbg !5401
  %324 = load i32, i32* %nb_channels510, align 8, !dbg !5401
  %cmp511 = icmp slt i32 %322, %324, !dbg !5402
  br i1 %cmp511, label %for.body513, label %for.end546, !dbg !5403

for.body513:                                      ; preds = %for.cond509
  %325 = load i32, i32* %i, align 4, !dbg !5404
  %idxprom514 = sext i32 %325 to i64, !dbg !5406
  %326 = load i32, i32* %k, align 4, !dbg !5407
  %mul515 = mul nsw i32 %326, 12, !dbg !5408
  %327 = load i32, i32* %l, align 4, !dbg !5409
  %add516 = add nsw i32 %mul515, %327, !dbg !5410
  %add517 = add nsw i32 %add516, 0, !dbg !5411
  %idxprom518 = sext i32 %add517 to i64, !dbg !5406
  %328 = load i32, i32* %ch, align 4, !dbg !5412
  %idxprom519 = sext i32 %328 to i64, !dbg !5406
  %329 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5406
  %sb_samples520 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %329, i32 0, i32 20, !dbg !5413
  %arrayidx521 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples520, i64 0, i64 %idxprom519, !dbg !5406
  %arrayidx522 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx521, i64 0, i64 %idxprom518, !dbg !5406
  %arrayidx523 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx522, i64 0, i64 %idxprom514, !dbg !5406
  store float 0.000000e+00, float* %arrayidx523, align 4, !dbg !5414
  %330 = load i32, i32* %i, align 4, !dbg !5415
  %idxprom524 = sext i32 %330 to i64, !dbg !5416
  %331 = load i32, i32* %k, align 4, !dbg !5417
  %mul525 = mul nsw i32 %331, 12, !dbg !5418
  %332 = load i32, i32* %l, align 4, !dbg !5419
  %add526 = add nsw i32 %mul525, %332, !dbg !5420
  %add527 = add nsw i32 %add526, 1, !dbg !5421
  %idxprom528 = sext i32 %add527 to i64, !dbg !5416
  %333 = load i32, i32* %ch, align 4, !dbg !5422
  %idxprom529 = sext i32 %333 to i64, !dbg !5416
  %334 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5416
  %sb_samples530 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %334, i32 0, i32 20, !dbg !5423
  %arrayidx531 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples530, i64 0, i64 %idxprom529, !dbg !5416
  %arrayidx532 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx531, i64 0, i64 %idxprom528, !dbg !5416
  %arrayidx533 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx532, i64 0, i64 %idxprom524, !dbg !5416
  store float 0.000000e+00, float* %arrayidx533, align 4, !dbg !5424
  %335 = load i32, i32* %i, align 4, !dbg !5425
  %idxprom534 = sext i32 %335 to i64, !dbg !5426
  %336 = load i32, i32* %k, align 4, !dbg !5427
  %mul535 = mul nsw i32 %336, 12, !dbg !5428
  %337 = load i32, i32* %l, align 4, !dbg !5429
  %add536 = add nsw i32 %mul535, %337, !dbg !5430
  %add537 = add nsw i32 %add536, 2, !dbg !5431
  %idxprom538 = sext i32 %add537 to i64, !dbg !5426
  %338 = load i32, i32* %ch, align 4, !dbg !5432
  %idxprom539 = sext i32 %338 to i64, !dbg !5426
  %339 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5426
  %sb_samples540 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %339, i32 0, i32 20, !dbg !5433
  %arrayidx541 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples540, i64 0, i64 %idxprom539, !dbg !5426
  %arrayidx542 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx541, i64 0, i64 %idxprom538, !dbg !5426
  %arrayidx543 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx542, i64 0, i64 %idxprom534, !dbg !5426
  store float 0.000000e+00, float* %arrayidx543, align 4, !dbg !5434
  br label %for.inc544, !dbg !5435

for.inc544:                                       ; preds = %for.body513
  %340 = load i32, i32* %ch, align 4, !dbg !5436
  %inc545 = add nsw i32 %340, 1, !dbg !5436
  store i32 %inc545, i32* %ch, align 4, !dbg !5436
  br label %for.cond509, !dbg !5438, !llvm.loop !5439

for.end546:                                       ; preds = %for.cond509
  br label %for.inc547, !dbg !5441

for.inc547:                                       ; preds = %for.end546
  %341 = load i32, i32* %i, align 4, !dbg !5442
  %inc548 = add nsw i32 %341, 1, !dbg !5442
  store i32 %inc548, i32* %i, align 4, !dbg !5442
  br label %for.cond505, !dbg !5444, !llvm.loop !5445

for.end549:                                       ; preds = %for.cond505
  br label %for.inc550, !dbg !5447

for.inc550:                                       ; preds = %for.end549
  %342 = load i32, i32* %l, align 4, !dbg !5448
  %add551 = add nsw i32 %342, 3, !dbg !5448
  store i32 %add551, i32* %l, align 4, !dbg !5448
  br label %for.cond152, !dbg !5450, !llvm.loop !5451

for.end552:                                       ; preds = %for.cond152
  br label %for.inc553, !dbg !5453

for.inc553:                                       ; preds = %for.end552
  %343 = load i32, i32* %k, align 4, !dbg !5454
  %inc554 = add nsw i32 %343, 1, !dbg !5454
  store i32 %inc554, i32* %k, align 4, !dbg !5454
  br label %for.cond148, !dbg !5456, !llvm.loop !5457

for.end555:                                       ; preds = %for.cond148
  ret i32 36, !dbg !5459
}

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_layer3(%struct.MPADecodeContext* %s) #1 !dbg !5460 {
entry:
  %slen.addr.i1074 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i1074, metadata !5461, metadata !2031), !dbg !5465
  %sf.addr.i1075 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i1075, metadata !5480, metadata !2031), !dbg !5481
  %n1.addr.i1076 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i1076, metadata !5482, metadata !2031), !dbg !5483
  %n2.addr.i1077 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i1077, metadata !5484, metadata !2031), !dbg !5485
  %n3.addr.i1078 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i1078, metadata !5486, metadata !2031), !dbg !5487
  %m.i1079 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i1079, metadata !5488, metadata !2031), !dbg !5491
  %m9.i1080 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i1080, metadata !5492, metadata !2031), !dbg !5496
  %m18.i1081 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i1081, metadata !5497, metadata !2031), !dbg !5500
  %m31.i1082 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i1082, metadata !5501, metadata !2031), !dbg !5504
  %m46.i1083 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i1083, metadata !5505, metadata !2031), !dbg !5509
  %m55.i1084 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i1084, metadata !5510, metadata !2031), !dbg !5513
  %m69.i1085 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i1085, metadata !5514, metadata !2031), !dbg !5517
  %m84.i1086 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i1086, metadata !5518, metadata !2031), !dbg !5522
  %m93.i1087 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i1087, metadata !5523, metadata !2031), !dbg !5526
  %slen.addr.i955 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i955, metadata !5461, metadata !2031), !dbg !5527
  %sf.addr.i956 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i956, metadata !5480, metadata !2031), !dbg !5530
  %n1.addr.i957 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i957, metadata !5482, metadata !2031), !dbg !5531
  %n2.addr.i958 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i958, metadata !5484, metadata !2031), !dbg !5532
  %n3.addr.i959 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i959, metadata !5486, metadata !2031), !dbg !5533
  %m.i960 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i960, metadata !5488, metadata !2031), !dbg !5534
  %m9.i961 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i961, metadata !5492, metadata !2031), !dbg !5535
  %m18.i962 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i962, metadata !5497, metadata !2031), !dbg !5536
  %m31.i963 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i963, metadata !5501, metadata !2031), !dbg !5537
  %m46.i964 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i964, metadata !5505, metadata !2031), !dbg !5538
  %m55.i965 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i965, metadata !5510, metadata !2031), !dbg !5539
  %m69.i966 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i966, metadata !5514, metadata !2031), !dbg !5540
  %m84.i967 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i967, metadata !5518, metadata !2031), !dbg !5541
  %m93.i968 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i968, metadata !5523, metadata !2031), !dbg !5542
  %slen.addr.i836 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i836, metadata !5461, metadata !2031), !dbg !5543
  %sf.addr.i837 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i837, metadata !5480, metadata !2031), !dbg !5546
  %n1.addr.i838 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i838, metadata !5482, metadata !2031), !dbg !5547
  %n2.addr.i839 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i839, metadata !5484, metadata !2031), !dbg !5548
  %n3.addr.i840 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i840, metadata !5486, metadata !2031), !dbg !5549
  %m.i841 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i841, metadata !5488, metadata !2031), !dbg !5550
  %m9.i842 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i842, metadata !5492, metadata !2031), !dbg !5551
  %m18.i843 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i843, metadata !5497, metadata !2031), !dbg !5552
  %m31.i844 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i844, metadata !5501, metadata !2031), !dbg !5553
  %m46.i845 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i845, metadata !5505, metadata !2031), !dbg !5554
  %m55.i846 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i846, metadata !5510, metadata !2031), !dbg !5555
  %m69.i847 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i847, metadata !5514, metadata !2031), !dbg !5556
  %m84.i848 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i848, metadata !5518, metadata !2031), !dbg !5557
  %m93.i849 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i849, metadata !5523, metadata !2031), !dbg !5558
  %slen.addr.i717 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i717, metadata !5461, metadata !2031), !dbg !5559
  %sf.addr.i718 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i718, metadata !5480, metadata !2031), !dbg !5565
  %n1.addr.i719 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i719, metadata !5482, metadata !2031), !dbg !5566
  %n2.addr.i720 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i720, metadata !5484, metadata !2031), !dbg !5567
  %n3.addr.i721 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i721, metadata !5486, metadata !2031), !dbg !5568
  %m.i722 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i722, metadata !5488, metadata !2031), !dbg !5569
  %m9.i723 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i723, metadata !5492, metadata !2031), !dbg !5570
  %m18.i724 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i724, metadata !5497, metadata !2031), !dbg !5571
  %m31.i725 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i725, metadata !5501, metadata !2031), !dbg !5572
  %m46.i726 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i726, metadata !5505, metadata !2031), !dbg !5573
  %m55.i727 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i727, metadata !5510, metadata !2031), !dbg !5574
  %m69.i728 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i728, metadata !5514, metadata !2031), !dbg !5575
  %m84.i729 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i729, metadata !5518, metadata !2031), !dbg !5576
  %m93.i730 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i730, metadata !5523, metadata !2031), !dbg !5577
  %slen.addr.i598 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i598, metadata !5461, metadata !2031), !dbg !5578
  %sf.addr.i599 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i599, metadata !5480, metadata !2031), !dbg !5581
  %n1.addr.i600 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i600, metadata !5482, metadata !2031), !dbg !5582
  %n2.addr.i601 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i601, metadata !5484, metadata !2031), !dbg !5583
  %n3.addr.i602 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i602, metadata !5486, metadata !2031), !dbg !5584
  %m.i603 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i603, metadata !5488, metadata !2031), !dbg !5585
  %m9.i604 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i604, metadata !5492, metadata !2031), !dbg !5586
  %m18.i605 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i605, metadata !5497, metadata !2031), !dbg !5587
  %m31.i606 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i606, metadata !5501, metadata !2031), !dbg !5588
  %m46.i607 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i607, metadata !5505, metadata !2031), !dbg !5589
  %m55.i608 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i608, metadata !5510, metadata !2031), !dbg !5590
  %m69.i609 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i609, metadata !5514, metadata !2031), !dbg !5591
  %m84.i610 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i610, metadata !5518, metadata !2031), !dbg !5592
  %m93.i611 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i611, metadata !5523, metadata !2031), !dbg !5593
  %slen.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i, metadata !5461, metadata !2031), !dbg !5594
  %sf.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i, metadata !5480, metadata !2031), !dbg !5597
  %n1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i, metadata !5482, metadata !2031), !dbg !5598
  %n2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i, metadata !5484, metadata !2031), !dbg !5599
  %n3.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i, metadata !5486, metadata !2031), !dbg !5600
  %m.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i, metadata !5488, metadata !2031), !dbg !5601
  %m9.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i, metadata !5492, metadata !2031), !dbg !5602
  %m18.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i, metadata !5497, metadata !2031), !dbg !5603
  %m31.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i, metadata !5501, metadata !2031), !dbg !5604
  %m46.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i, metadata !5505, metadata !2031), !dbg !5605
  %m55.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i, metadata !5510, metadata !2031), !dbg !5606
  %m69.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i, metadata !5514, metadata !2031), !dbg !5607
  %m84.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i, metadata !5518, metadata !2031), !dbg !5608
  %m93.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i, metadata !5523, metadata !2031), !dbg !5609
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5610, metadata !2031), !dbg !5615
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5620, metadata !2031), !dbg !5621
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5622, metadata !2031), !dbg !5623
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %nb_granules = alloca i32, align 4
  %main_data_begin = alloca i32, align 4
  %gr = alloca i32, align 4
  %ch = alloca i32, align 4
  %blocksplit_flag = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %bits_pos = alloca i32, align 4
  %g = alloca %struct.GranuleDef*, align 8
  %exponents = alloca [576 x i16], align 16
  %region_address1 = alloca i32, align 4
  %region_address2 = alloca i32, align 4
  %skip = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %sc = alloca i8*, align 8
  %slen = alloca i32, align 4
  %slen1 = alloca i32, align 4
  %slen2 = alloca i32, align 4
  %tindex = alloca i32, align 4
  %tindex2 = alloca i32, align 4
  %slen427 = alloca [4 x i32], align 16
  %sl = alloca i32, align 4
  %sf = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !5624, metadata !2031), !dbg !5625
  call void @llvm.dbg.declare(metadata i32* %nb_granules, metadata !5626, metadata !2031), !dbg !5627
  call void @llvm.dbg.declare(metadata i32* %main_data_begin, metadata !5628, metadata !2031), !dbg !5629
  call void @llvm.dbg.declare(metadata i32* %gr, metadata !5630, metadata !2031), !dbg !5631
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5632, metadata !2031), !dbg !5633
  call void @llvm.dbg.declare(metadata i32* %blocksplit_flag, metadata !5634, metadata !2031), !dbg !5635
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5636, metadata !2031), !dbg !5637
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5638, metadata !2031), !dbg !5639
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5640, metadata !2031), !dbg !5641
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5642, metadata !2031), !dbg !5643
  call void @llvm.dbg.declare(metadata i32* %bits_pos, metadata !5644, metadata !2031), !dbg !5645
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g, metadata !5646, metadata !2031), !dbg !5647
  call void @llvm.dbg.declare(metadata [576 x i16]* %exponents, metadata !5648, metadata !2031), !dbg !5650
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5651
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 9, !dbg !5653
  %1 = load i32, i32* %lsf, align 4, !dbg !5653
  %tobool = icmp ne i32 %1, 0, !dbg !5651
  br i1 %tobool, label %if.then, label %if.else, !dbg !5654

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5655
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 14, !dbg !5657
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !5658
  store i32 %call, i32* %main_data_begin, align 4, !dbg !5659
  %3 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5660
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %3, i32 0, i32 14, !dbg !5661
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5662
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 6, !dbg !5663
  %5 = load i32, i32* %nb_channels, align 8, !dbg !5663
  call void @skip_bits(%struct.GetBitContext* %gb1, i32 %5), !dbg !5664
  store i32 1, i32* %nb_granules, align 4, !dbg !5665
  br label %if.end19, !dbg !5666

if.else:                                          ; preds = %entry
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5667
  %gb2 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 14, !dbg !5669
  %call3 = call i32 @get_bits(%struct.GetBitContext* %gb2, i32 9), !dbg !5670
  store i32 %call3, i32* %main_data_begin, align 4, !dbg !5671
  %7 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5672
  %nb_channels4 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %7, i32 0, i32 6, !dbg !5674
  %8 = load i32, i32* %nb_channels4, align 8, !dbg !5674
  %cmp = icmp eq i32 %8, 2, !dbg !5675
  br i1 %cmp, label %if.then5, label %if.else7, !dbg !5676

if.then5:                                         ; preds = %if.else
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5677
  %gb6 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 14, !dbg !5678
  call void @skip_bits(%struct.GetBitContext* %gb6, i32 3), !dbg !5679
  br label %if.end, !dbg !5679

if.else7:                                         ; preds = %if.else
  %10 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5680
  %gb8 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %10, i32 0, i32 14, !dbg !5681
  call void @skip_bits(%struct.GetBitContext* %gb8, i32 5), !dbg !5682
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then5
  store i32 2, i32* %nb_granules, align 4, !dbg !5683
  store i32 0, i32* %ch, align 4, !dbg !5684
  br label %for.cond, !dbg !5686

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %ch, align 4, !dbg !5687
  %12 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5690
  %nb_channels9 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %12, i32 0, i32 6, !dbg !5691
  %13 = load i32, i32* %nb_channels9, align 8, !dbg !5691
  %cmp10 = icmp slt i32 %11, %13, !dbg !5692
  br i1 %cmp10, label %for.body, label %for.end, !dbg !5693

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %ch, align 4, !dbg !5694
  %idxprom = sext i32 %14 to i64, !dbg !5696
  %15 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5696
  %granules = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %15, i32 0, i32 22, !dbg !5697
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules, i64 0, i64 %idxprom, !dbg !5696
  %arrayidx11 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx, i64 0, i64 0, !dbg !5696
  %scfsi = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %arrayidx11, i32 0, i32 0, !dbg !5698
  store i8 0, i8* %scfsi, align 32, !dbg !5699
  %16 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5700
  %gb12 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %16, i32 0, i32 14, !dbg !5701
  %call13 = call i32 @get_bits(%struct.GetBitContext* %gb12, i32 4), !dbg !5702
  %conv = trunc i32 %call13 to i8, !dbg !5702
  %17 = load i32, i32* %ch, align 4, !dbg !5703
  %idxprom14 = sext i32 %17 to i64, !dbg !5704
  %18 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5704
  %granules15 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %18, i32 0, i32 22, !dbg !5705
  %arrayidx16 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules15, i64 0, i64 %idxprom14, !dbg !5704
  %arrayidx17 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx16, i64 0, i64 1, !dbg !5704
  %scfsi18 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %arrayidx17, i32 0, i32 0, !dbg !5706
  store i8 %conv, i8* %scfsi18, align 32, !dbg !5707
  br label %for.inc, !dbg !5708

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %ch, align 4, !dbg !5709
  %inc = add nsw i32 %19, 1, !dbg !5709
  store i32 %inc, i32* %ch, align 4, !dbg !5709
  br label %for.cond, !dbg !5711, !llvm.loop !5712

for.end:                                          ; preds = %for.cond
  br label %if.end19

if.end19:                                         ; preds = %for.end, %if.then
  store i32 0, i32* %gr, align 4, !dbg !5714
  br label %for.cond20, !dbg !5716

for.cond20:                                       ; preds = %for.inc139, %if.end19
  %20 = load i32, i32* %gr, align 4, !dbg !5717
  %21 = load i32, i32* %nb_granules, align 4, !dbg !5720
  %cmp21 = icmp slt i32 %20, %21, !dbg !5721
  br i1 %cmp21, label %for.body23, label %for.end141, !dbg !5722

for.body23:                                       ; preds = %for.cond20
  store i32 0, i32* %ch, align 4, !dbg !5723
  br label %for.cond24, !dbg !5726

for.cond24:                                       ; preds = %for.inc136, %for.body23
  %22 = load i32, i32* %ch, align 4, !dbg !5727
  %23 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5730
  %nb_channels25 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %23, i32 0, i32 6, !dbg !5731
  %24 = load i32, i32* %nb_channels25, align 8, !dbg !5731
  %cmp26 = icmp slt i32 %22, %24, !dbg !5732
  br i1 %cmp26, label %for.body28, label %for.end138, !dbg !5733

for.body28:                                       ; preds = %for.cond24
  br label %do.body, !dbg !5734, !llvm.loop !5736

do.body:                                          ; preds = %for.body28
  br label %do.end, !dbg !5737

do.end:                                           ; preds = %do.body
  %25 = load i32, i32* %gr, align 4, !dbg !5740
  %idxprom29 = sext i32 %25 to i64, !dbg !5741
  %26 = load i32, i32* %ch, align 4, !dbg !5742
  %idxprom30 = sext i32 %26 to i64, !dbg !5741
  %27 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5741
  %granules31 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %27, i32 0, i32 22, !dbg !5743
  %arrayidx32 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules31, i64 0, i64 %idxprom30, !dbg !5741
  %arrayidx33 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !5741
  store %struct.GranuleDef* %arrayidx33, %struct.GranuleDef** %g, align 8, !dbg !5744
  %28 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5745
  %gb34 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %28, i32 0, i32 14, !dbg !5746
  %call35 = call i32 @get_bits(%struct.GetBitContext* %gb34, i32 12), !dbg !5747
  %29 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5748
  %part2_3_length = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %29, i32 0, i32 1, !dbg !5749
  store i32 %call35, i32* %part2_3_length, align 4, !dbg !5750
  %30 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5751
  %gb36 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %30, i32 0, i32 14, !dbg !5752
  %call37 = call i32 @get_bits(%struct.GetBitContext* %gb36, i32 9), !dbg !5753
  %31 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5754
  %big_values = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %31, i32 0, i32 2, !dbg !5755
  store i32 %call37, i32* %big_values, align 8, !dbg !5756
  %32 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5757
  %big_values38 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %32, i32 0, i32 2, !dbg !5759
  %33 = load i32, i32* %big_values38, align 8, !dbg !5759
  %cmp39 = icmp sgt i32 %33, 288, !dbg !5760
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !5761

if.then41:                                        ; preds = %do.end
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5762
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %34, i32 0, i32 26, !dbg !5764
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !5764
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !5762
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i32 0, i32 0)), !dbg !5765
  store i32 -1094995529, i32* %retval, align 4, !dbg !5766
  br label %return, !dbg !5766

if.end42:                                         ; preds = %do.end
  %37 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5767
  %gb43 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %37, i32 0, i32 14, !dbg !5768
  %call44 = call i32 @get_bits(%struct.GetBitContext* %gb43, i32 8), !dbg !5769
  %38 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5770
  %global_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %38, i32 0, i32 3, !dbg !5771
  store i32 %call44, i32* %global_gain, align 4, !dbg !5772
  %39 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5773
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %39, i32 0, i32 8, !dbg !5775
  %40 = load i32, i32* %mode_ext, align 32, !dbg !5775
  %and = and i32 %40, 3, !dbg !5776
  %cmp45 = icmp eq i32 %and, 2, !dbg !5777
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !5778

if.then47:                                        ; preds = %if.end42
  %41 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5779
  %global_gain48 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %41, i32 0, i32 3, !dbg !5780
  %42 = load i32, i32* %global_gain48, align 4, !dbg !5781
  %sub = sub nsw i32 %42, 2, !dbg !5781
  store i32 %sub, i32* %global_gain48, align 4, !dbg !5781
  br label %if.end49, !dbg !5779

if.end49:                                         ; preds = %if.then47, %if.end42
  %43 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5782
  %lsf50 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %43, i32 0, i32 9, !dbg !5784
  %44 = load i32, i32* %lsf50, align 4, !dbg !5784
  %tobool51 = icmp ne i32 %44, 0, !dbg !5782
  br i1 %tobool51, label %if.then52, label %if.else55, !dbg !5785

if.then52:                                        ; preds = %if.end49
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5786
  %gb53 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %45, i32 0, i32 14, !dbg !5787
  %call54 = call i32 @get_bits(%struct.GetBitContext* %gb53, i32 9), !dbg !5788
  %46 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5789
  %scalefac_compress = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %46, i32 0, i32 4, !dbg !5790
  store i32 %call54, i32* %scalefac_compress, align 16, !dbg !5791
  br label %if.end59, !dbg !5789

if.else55:                                        ; preds = %if.end49
  %47 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5792
  %gb56 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %47, i32 0, i32 14, !dbg !5793
  %call57 = call i32 @get_bits(%struct.GetBitContext* %gb56, i32 4), !dbg !5794
  %48 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5795
  %scalefac_compress58 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %48, i32 0, i32 4, !dbg !5796
  store i32 %call57, i32* %scalefac_compress58, align 16, !dbg !5797
  br label %if.end59

if.end59:                                         ; preds = %if.else55, %if.then52
  %49 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5798
  %gb60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %49, i32 0, i32 14, !dbg !5799
  %call61 = call i32 @get_bits1(%struct.GetBitContext* %gb60), !dbg !5800
  store i32 %call61, i32* %blocksplit_flag, align 4, !dbg !5801
  %50 = load i32, i32* %blocksplit_flag, align 4, !dbg !5802
  %tobool62 = icmp ne i32 %50, 0, !dbg !5802
  br i1 %tobool62, label %if.then63, label %if.else99, !dbg !5804

if.then63:                                        ; preds = %if.end59
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5805
  %gb64 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %51, i32 0, i32 14, !dbg !5807
  %call65 = call i32 @get_bits(%struct.GetBitContext* %gb64, i32 2), !dbg !5808
  %conv66 = trunc i32 %call65 to i8, !dbg !5808
  %52 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5809
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %52, i32 0, i32 5, !dbg !5810
  store i8 %conv66, i8* %block_type, align 4, !dbg !5811
  %53 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5812
  %block_type67 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %53, i32 0, i32 5, !dbg !5814
  %54 = load i8, i8* %block_type67, align 4, !dbg !5814
  %conv68 = zext i8 %54 to i32, !dbg !5812
  %cmp69 = icmp eq i32 %conv68, 0, !dbg !5815
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !5816

if.then71:                                        ; preds = %if.then63
  %55 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5817
  %avctx72 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %55, i32 0, i32 26, !dbg !5819
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx72, align 16, !dbg !5819
  %57 = bitcast %struct.AVCodecContext* %56 to i8*, !dbg !5817
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0)), !dbg !5820
  store i32 -1094995529, i32* %retval, align 4, !dbg !5821
  br label %return, !dbg !5821

if.end73:                                         ; preds = %if.then63
  %58 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5822
  %gb74 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %58, i32 0, i32 14, !dbg !5823
  %call75 = call i32 @get_bits1(%struct.GetBitContext* %gb74), !dbg !5824
  %conv76 = trunc i32 %call75 to i8, !dbg !5824
  %59 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5825
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %59, i32 0, i32 6, !dbg !5826
  store i8 %conv76, i8* %switch_point, align 1, !dbg !5827
  store i32 0, i32* %i, align 4, !dbg !5828
  br label %for.cond77, !dbg !5830

for.cond77:                                       ; preds = %for.inc85, %if.end73
  %60 = load i32, i32* %i, align 4, !dbg !5831
  %cmp78 = icmp slt i32 %60, 2, !dbg !5834
  br i1 %cmp78, label %for.body80, label %for.end87, !dbg !5835

for.body80:                                       ; preds = %for.cond77
  %61 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5836
  %gb81 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %61, i32 0, i32 14, !dbg !5837
  %call82 = call i32 @get_bits(%struct.GetBitContext* %gb81, i32 5), !dbg !5838
  %62 = load i32, i32* %i, align 4, !dbg !5839
  %idxprom83 = sext i32 %62 to i64, !dbg !5840
  %63 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5840
  %table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %63, i32 0, i32 7, !dbg !5841
  %arrayidx84 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select, i64 0, i64 %idxprom83, !dbg !5840
  store i32 %call82, i32* %arrayidx84, align 4, !dbg !5842
  br label %for.inc85, !dbg !5840

for.inc85:                                        ; preds = %for.body80
  %64 = load i32, i32* %i, align 4, !dbg !5843
  %inc86 = add nsw i32 %64, 1, !dbg !5843
  store i32 %inc86, i32* %i, align 4, !dbg !5843
  br label %for.cond77, !dbg !5845, !llvm.loop !5846

for.end87:                                        ; preds = %for.cond77
  store i32 0, i32* %i, align 4, !dbg !5848
  br label %for.cond88, !dbg !5850

for.cond88:                                       ; preds = %for.inc96, %for.end87
  %65 = load i32, i32* %i, align 4, !dbg !5851
  %cmp89 = icmp slt i32 %65, 3, !dbg !5854
  br i1 %cmp89, label %for.body91, label %for.end98, !dbg !5855

for.body91:                                       ; preds = %for.cond88
  %66 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5856
  %gb92 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %66, i32 0, i32 14, !dbg !5857
  %call93 = call i32 @get_bits(%struct.GetBitContext* %gb92, i32 3), !dbg !5858
  %67 = load i32, i32* %i, align 4, !dbg !5859
  %idxprom94 = sext i32 %67 to i64, !dbg !5860
  %68 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5860
  %subblock_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %68, i32 0, i32 8, !dbg !5861
  %arrayidx95 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain, i64 0, i64 %idxprom94, !dbg !5860
  store i32 %call93, i32* %arrayidx95, align 4, !dbg !5862
  br label %for.inc96, !dbg !5860

for.inc96:                                        ; preds = %for.body91
  %69 = load i32, i32* %i, align 4, !dbg !5863
  %inc97 = add nsw i32 %69, 1, !dbg !5863
  store i32 %inc97, i32* %i, align 4, !dbg !5863
  br label %for.cond88, !dbg !5865, !llvm.loop !5866

for.end98:                                        ; preds = %for.cond88
  %70 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5868
  %71 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5869
  call void @init_short_region(%struct.MPADecodeContext* %70, %struct.GranuleDef* %71), !dbg !5870
  br label %if.end120, !dbg !5871

if.else99:                                        ; preds = %if.end59
  call void @llvm.dbg.declare(metadata i32* %region_address1, metadata !5872, metadata !2031), !dbg !5874
  call void @llvm.dbg.declare(metadata i32* %region_address2, metadata !5875, metadata !2031), !dbg !5876
  %72 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5877
  %block_type100 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %72, i32 0, i32 5, !dbg !5878
  store i8 0, i8* %block_type100, align 4, !dbg !5879
  %73 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5880
  %switch_point101 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %73, i32 0, i32 6, !dbg !5881
  store i8 0, i8* %switch_point101, align 1, !dbg !5882
  store i32 0, i32* %i, align 4, !dbg !5883
  br label %for.cond102, !dbg !5885

for.cond102:                                      ; preds = %for.inc111, %if.else99
  %74 = load i32, i32* %i, align 4, !dbg !5886
  %cmp103 = icmp slt i32 %74, 3, !dbg !5889
  br i1 %cmp103, label %for.body105, label %for.end113, !dbg !5890

for.body105:                                      ; preds = %for.cond102
  %75 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5891
  %gb106 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %75, i32 0, i32 14, !dbg !5892
  %call107 = call i32 @get_bits(%struct.GetBitContext* %gb106, i32 5), !dbg !5893
  %76 = load i32, i32* %i, align 4, !dbg !5894
  %idxprom108 = sext i32 %76 to i64, !dbg !5895
  %77 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5895
  %table_select109 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %77, i32 0, i32 7, !dbg !5896
  %arrayidx110 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select109, i64 0, i64 %idxprom108, !dbg !5895
  store i32 %call107, i32* %arrayidx110, align 4, !dbg !5897
  br label %for.inc111, !dbg !5895

for.inc111:                                       ; preds = %for.body105
  %78 = load i32, i32* %i, align 4, !dbg !5898
  %inc112 = add nsw i32 %78, 1, !dbg !5898
  store i32 %inc112, i32* %i, align 4, !dbg !5898
  br label %for.cond102, !dbg !5900, !llvm.loop !5901

for.end113:                                       ; preds = %for.cond102
  %79 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5903
  %gb114 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %79, i32 0, i32 14, !dbg !5904
  %call115 = call i32 @get_bits(%struct.GetBitContext* %gb114, i32 4), !dbg !5905
  store i32 %call115, i32* %region_address1, align 4, !dbg !5906
  %80 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5907
  %gb116 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %80, i32 0, i32 14, !dbg !5908
  %call117 = call i32 @get_bits(%struct.GetBitContext* %gb116, i32 3), !dbg !5909
  store i32 %call117, i32* %region_address2, align 4, !dbg !5910
  br label %do.body118, !dbg !5911, !llvm.loop !5912

do.body118:                                       ; preds = %for.end113
  br label %do.end119, !dbg !5913

do.end119:                                        ; preds = %do.body118
  %81 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5916
  %82 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5917
  %83 = load i32, i32* %region_address1, align 4, !dbg !5918
  %84 = load i32, i32* %region_address2, align 4, !dbg !5919
  call void @init_long_region(%struct.MPADecodeContext* %81, %struct.GranuleDef* %82, i32 %83, i32 %84), !dbg !5920
  br label %if.end120

if.end120:                                        ; preds = %do.end119, %for.end98
  %85 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5921
  call void @region_offset2size(%struct.GranuleDef* %85), !dbg !5922
  %86 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5923
  %87 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5924
  call void @compute_band_indexes(%struct.MPADecodeContext* %86, %struct.GranuleDef* %87), !dbg !5925
  %88 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5926
  %preflag = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %88, i32 0, i32 12, !dbg !5927
  store i32 0, i32* %preflag, align 16, !dbg !5928
  %89 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5929
  %lsf121 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %89, i32 0, i32 9, !dbg !5931
  %90 = load i32, i32* %lsf121, align 4, !dbg !5931
  %tobool122 = icmp ne i32 %90, 0, !dbg !5929
  br i1 %tobool122, label %if.end127, label %if.then123, !dbg !5932

if.then123:                                       ; preds = %if.end120
  %91 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5933
  %gb124 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %91, i32 0, i32 14, !dbg !5934
  %call125 = call i32 @get_bits1(%struct.GetBitContext* %gb124), !dbg !5935
  %92 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5936
  %preflag126 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %92, i32 0, i32 12, !dbg !5937
  store i32 %call125, i32* %preflag126, align 16, !dbg !5938
  br label %if.end127, !dbg !5936

if.end127:                                        ; preds = %if.then123, %if.end120
  %93 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5939
  %gb128 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %93, i32 0, i32 14, !dbg !5940
  %call129 = call i32 @get_bits1(%struct.GetBitContext* %gb128), !dbg !5941
  %conv130 = trunc i32 %call129 to i8, !dbg !5941
  %94 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5942
  %scalefac_scale = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %94, i32 0, i32 9, !dbg !5943
  store i8 %conv130, i8* %scalefac_scale, align 16, !dbg !5944
  %95 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5945
  %gb131 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %95, i32 0, i32 14, !dbg !5946
  %call132 = call i32 @get_bits1(%struct.GetBitContext* %gb131), !dbg !5947
  %conv133 = trunc i32 %call132 to i8, !dbg !5947
  %96 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5948
  %count1table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %96, i32 0, i32 10, !dbg !5949
  store i8 %conv133, i8* %count1table_select, align 1, !dbg !5950
  br label %do.body134, !dbg !5951, !llvm.loop !5952

do.body134:                                       ; preds = %if.end127
  br label %do.end135, !dbg !5953

do.end135:                                        ; preds = %do.body134
  br label %for.inc136, !dbg !5956

for.inc136:                                       ; preds = %do.end135
  %97 = load i32, i32* %ch, align 4, !dbg !5957
  %inc137 = add nsw i32 %97, 1, !dbg !5957
  store i32 %inc137, i32* %ch, align 4, !dbg !5957
  br label %for.cond24, !dbg !5959, !llvm.loop !5960

for.end138:                                       ; preds = %for.cond24
  br label %for.inc139, !dbg !5962

for.inc139:                                       ; preds = %for.end138
  %98 = load i32, i32* %gr, align 4, !dbg !5963
  %inc140 = add nsw i32 %98, 1, !dbg !5963
  store i32 %inc140, i32* %gr, align 4, !dbg !5963
  br label %for.cond20, !dbg !5965, !llvm.loop !5966

for.end141:                                       ; preds = %for.cond20
  %99 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5968
  %adu_mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %99, i32 0, i32 23, !dbg !5969
  %100 = load i32, i32* %adu_mode, align 32, !dbg !5969
  %tobool142 = icmp ne i32 %100, 0, !dbg !5968
  br i1 %tobool142, label %if.else238, label %if.then143, !dbg !5970

if.then143:                                       ; preds = %for.end141
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !5971, metadata !2031), !dbg !5972
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5973, metadata !2031), !dbg !5974
  %101 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5975
  %gb144 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %101, i32 0, i32 14, !dbg !5976
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb144, i32 0, i32 0, !dbg !5977
  %102 = load i8*, i8** %buffer, align 16, !dbg !5977
  %103 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5978
  %gb145 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %103, i32 0, i32 14, !dbg !5979
  %call146 = call i32 @get_bits_count(%struct.GetBitContext* %gb145), !dbg !5980
  %shr = ashr i32 %call146, 3, !dbg !5981
  %idx.ext = sext i32 %shr to i64, !dbg !5982
  %add.ptr = getelementptr inbounds i8, i8* %102, i64 %idx.ext, !dbg !5982
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !5974
  %104 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5983
  %gb147 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %104, i32 0, i32 14, !dbg !5984
  %call148 = call i32 @get_bits_left(%struct.GetBitContext* %gb147), !dbg !5985
  %shr149 = ashr i32 %call148, 3, !dbg !5986
  %105 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5987
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %105, i32 0, i32 12, !dbg !5988
  %106 = load i32, i32* %extrasize, align 4, !dbg !5988
  %sub150 = sub nsw i32 %shr149, %106, !dbg !5989
  %107 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5990
  %last_buf_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %107, i32 0, i32 11, !dbg !5991
  %108 = load i32, i32* %last_buf_size, align 32, !dbg !5991
  %sub151 = sub nsw i32 1048, %108, !dbg !5992
  %cmp152 = icmp sgt i32 0, %sub151, !dbg !5993
  br i1 %cmp152, label %cond.true, label %cond.false, !dbg !5994

cond.true:                                        ; preds = %if.then143
  br label %cond.end, !dbg !5995

cond.false:                                       ; preds = %if.then143
  %109 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5996
  %last_buf_size154 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %109, i32 0, i32 11, !dbg !5998
  %110 = load i32, i32* %last_buf_size154, align 32, !dbg !5998
  %sub155 = sub nsw i32 1048, %110, !dbg !5999
  br label %cond.end, !dbg !6000

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub155, %cond.false ], !dbg !6001
  store i32 %sub150, i32* %a.addr.i, align 4, !dbg !6003
  store i32 0, i32* %amin.addr.i, align 4, !dbg !6003
  store i32 %cond, i32* %amax.addr.i, align 4, !dbg !6003
  %111 = load i32, i32* %a.addr.i, align 4, !dbg !6004
  %112 = load i32, i32* %amin.addr.i, align 4, !dbg !6006
  %cmp.i = icmp slt i32 %111, %112, !dbg !6007
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6008

if.then.i:                                        ; preds = %cond.end
  %113 = load i32, i32* %amin.addr.i, align 4, !dbg !6009
  store i32 %113, i32* %retval.i, align 4, !dbg !6011
  br label %av_clip_c.exit, !dbg !6011

if.else.i:                                        ; preds = %cond.end
  %114 = load i32, i32* %a.addr.i, align 4, !dbg !6012
  %115 = load i32, i32* %amax.addr.i, align 4, !dbg !6014
  %cmp1.i = icmp sgt i32 %114, %115, !dbg !6015
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6016

if.then2.i:                                       ; preds = %if.else.i
  %116 = load i32, i32* %amax.addr.i, align 4, !dbg !6017
  store i32 %116, i32* %retval.i, align 4, !dbg !6019
  br label %av_clip_c.exit, !dbg !6019

if.else3.i:                                       ; preds = %if.else.i
  %117 = load i32, i32* %a.addr.i, align 4, !dbg !6020
  store i32 %117, i32* %retval.i, align 4, !dbg !6021
  br label %av_clip_c.exit, !dbg !6021

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %118 = load i32, i32* %retval.i, align 4, !dbg !6022
  %119 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6023
  %extrasize157 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %119, i32 0, i32 12, !dbg !6024
  store i32 %118, i32* %extrasize157, align 4, !dbg !6025
  br label %do.body158, !dbg !6026, !llvm.loop !6027

do.body158:                                       ; preds = %av_clip_c.exit
  br label %do.end159, !dbg !6028

do.end159:                                        ; preds = %do.body158
  %120 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6031
  %last_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %120, i32 0, i32 10, !dbg !6032
  %arraydecay = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf, i32 0, i32 0, !dbg !6031
  %121 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6033
  %last_buf_size160 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %121, i32 0, i32 11, !dbg !6034
  %122 = load i32, i32* %last_buf_size160, align 32, !dbg !6034
  %idx.ext161 = sext i32 %122 to i64, !dbg !6035
  %add.ptr162 = getelementptr inbounds i8, i8* %arraydecay, i64 %idx.ext161, !dbg !6035
  %123 = load i8*, i8** %ptr, align 8, !dbg !6036
  %124 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6037
  %extrasize163 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %124, i32 0, i32 12, !dbg !6038
  %125 = load i32, i32* %extrasize163, align 4, !dbg !6038
  %conv164 = sext i32 %125 to i64, !dbg !6037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr162, i8* %123, i64 %conv164, i32 1, i1 false), !dbg !6039
  %126 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6040
  %in_gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %126, i32 0, i32 15, !dbg !6041
  %127 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6042
  %gb165 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %127, i32 0, i32 14, !dbg !6043
  %128 = bitcast %struct.GetBitContext* %in_gb to i8*, !dbg !6043
  %129 = bitcast %struct.GetBitContext* %gb165 to i8*, !dbg !6043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 32, i32 16, i1 false), !dbg !6043
  %130 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6044
  %gb166 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %130, i32 0, i32 14, !dbg !6045
  %131 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6046
  %last_buf167 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %131, i32 0, i32 10, !dbg !6047
  %arraydecay168 = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf167, i32 0, i32 0, !dbg !6046
  %132 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6048
  %last_buf_size169 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %132, i32 0, i32 11, !dbg !6049
  %133 = load i32, i32* %last_buf_size169, align 32, !dbg !6049
  %134 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6050
  %extrasize170 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %134, i32 0, i32 12, !dbg !6051
  %135 = load i32, i32* %extrasize170, align 4, !dbg !6051
  %add = add nsw i32 %133, %135, !dbg !6052
  %mul = mul nsw i32 %add, 8, !dbg !6053
  %call171 = call i32 @init_get_bits(%struct.GetBitContext* %gb166, i8* %arraydecay168, i32 %mul), !dbg !6054
  %136 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6055
  %last_buf_size172 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %136, i32 0, i32 11, !dbg !6056
  %137 = load i32, i32* %last_buf_size172, align 32, !dbg !6057
  %shl = shl i32 %137, 3, !dbg !6057
  store i32 %shl, i32* %last_buf_size172, align 32, !dbg !6057
  store i32 0, i32* %gr, align 4, !dbg !6058
  br label %for.cond173, !dbg !6060

for.cond173:                                      ; preds = %for.inc207, %do.end159
  %138 = load i32, i32* %gr, align 4, !dbg !6061
  %139 = load i32, i32* %nb_granules, align 4, !dbg !6064
  %cmp174 = icmp slt i32 %138, %139, !dbg !6065
  br i1 %cmp174, label %land.rhs, label %land.end, !dbg !6066

land.rhs:                                         ; preds = %for.cond173
  %140 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6067
  %last_buf_size176 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %140, i32 0, i32 11, !dbg !6069
  %141 = load i32, i32* %last_buf_size176, align 32, !dbg !6069
  %shr177 = ashr i32 %141, 3, !dbg !6070
  %142 = load i32, i32* %main_data_begin, align 4, !dbg !6071
  %cmp178 = icmp slt i32 %shr177, %142, !dbg !6072
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond173
  %143 = phi i1 [ false, %for.cond173 ], [ %cmp178, %land.rhs ]
  br i1 %143, label %for.body180, label %for.end209, !dbg !6073

for.body180:                                      ; preds = %land.end
  store i32 0, i32* %ch, align 4, !dbg !6075
  br label %for.cond181, !dbg !6078

for.cond181:                                      ; preds = %for.inc204, %for.body180
  %144 = load i32, i32* %ch, align 4, !dbg !6079
  %145 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6082
  %nb_channels182 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %145, i32 0, i32 6, !dbg !6083
  %146 = load i32, i32* %nb_channels182, align 8, !dbg !6083
  %cmp183 = icmp slt i32 %144, %146, !dbg !6084
  br i1 %cmp183, label %for.body185, label %for.end206, !dbg !6085

for.body185:                                      ; preds = %for.cond181
  %147 = load i32, i32* %gr, align 4, !dbg !6086
  %idxprom186 = sext i32 %147 to i64, !dbg !6088
  %148 = load i32, i32* %ch, align 4, !dbg !6089
  %idxprom187 = sext i32 %148 to i64, !dbg !6088
  %149 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6088
  %granules188 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %149, i32 0, i32 22, !dbg !6090
  %arrayidx189 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules188, i64 0, i64 %idxprom187, !dbg !6088
  %arrayidx190 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx189, i64 0, i64 %idxprom186, !dbg !6088
  store %struct.GranuleDef* %arrayidx190, %struct.GranuleDef** %g, align 8, !dbg !6091
  %150 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6092
  %part2_3_length191 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %150, i32 0, i32 1, !dbg !6093
  %151 = load i32, i32* %part2_3_length191, align 4, !dbg !6093
  %152 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6094
  %last_buf_size192 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %152, i32 0, i32 11, !dbg !6095
  %153 = load i32, i32* %last_buf_size192, align 32, !dbg !6096
  %add193 = add nsw i32 %153, %151, !dbg !6096
  store i32 %add193, i32* %last_buf_size192, align 32, !dbg !6096
  %154 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6097
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %154, i32 0, i32 17, !dbg !6098
  %arraydecay194 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid, i32 0, i32 0, !dbg !6099
  %155 = bitcast float* %arraydecay194 to i8*, !dbg !6099
  call void @llvm.memset.p0i8.i64(i8* %155, i8 0, i64 2304, i32 16, i1 false), !dbg !6099
  %156 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6100
  %157 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6101
  %158 = load i32, i32* %gr, align 4, !dbg !6102
  %mul195 = mul nsw i32 18, %158, !dbg !6103
  %idxprom196 = sext i32 %mul195 to i64, !dbg !6104
  %159 = load i32, i32* %ch, align 4, !dbg !6105
  %idxprom197 = sext i32 %159 to i64, !dbg !6104
  %160 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6104
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %160, i32 0, i32 20, !dbg !6106
  %arrayidx198 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples, i64 0, i64 %idxprom197, !dbg !6104
  %arrayidx199 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx198, i64 0, i64 %idxprom196, !dbg !6104
  %arrayidx200 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx199, i64 0, i64 0, !dbg !6104
  %161 = load i32, i32* %ch, align 4, !dbg !6107
  %idxprom201 = sext i32 %161 to i64, !dbg !6108
  %162 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6108
  %mdct_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %162, i32 0, i32 21, !dbg !6109
  %arrayidx202 = getelementptr inbounds [2 x [576 x float]], [2 x [576 x float]]* %mdct_buf, i64 0, i64 %idxprom201, !dbg !6108
  %arraydecay203 = getelementptr inbounds [576 x float], [576 x float]* %arrayidx202, i32 0, i32 0, !dbg !6108
  call void @compute_imdct(%struct.MPADecodeContext* %156, %struct.GranuleDef* %157, float* %arrayidx200, float* %arraydecay203), !dbg !6110
  br label %for.inc204, !dbg !6111

for.inc204:                                       ; preds = %for.body185
  %163 = load i32, i32* %ch, align 4, !dbg !6112
  %inc205 = add nsw i32 %163, 1, !dbg !6112
  store i32 %inc205, i32* %ch, align 4, !dbg !6112
  br label %for.cond181, !dbg !6114, !llvm.loop !6115

for.end206:                                       ; preds = %for.cond181
  br label %for.inc207, !dbg !6117

for.inc207:                                       ; preds = %for.end206
  %164 = load i32, i32* %gr, align 4, !dbg !6118
  %inc208 = add nsw i32 %164, 1, !dbg !6118
  store i32 %inc208, i32* %gr, align 4, !dbg !6118
  br label %for.cond173, !dbg !6120, !llvm.loop !6121

for.end209:                                       ; preds = %land.end
  %165 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6123
  %last_buf_size210 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %165, i32 0, i32 11, !dbg !6124
  %166 = load i32, i32* %last_buf_size210, align 32, !dbg !6124
  %167 = load i32, i32* %main_data_begin, align 4, !dbg !6125
  %mul211 = mul nsw i32 8, %167, !dbg !6126
  %sub212 = sub nsw i32 %166, %mul211, !dbg !6127
  store i32 %sub212, i32* %skip, align 4, !dbg !6128
  %168 = load i32, i32* %skip, align 4, !dbg !6129
  %169 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6131
  %gb213 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %169, i32 0, i32 14, !dbg !6132
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb213, i32 0, i32 3, !dbg !6133
  %170 = load i32, i32* %size_in_bits, align 4, !dbg !6133
  %171 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6134
  %extrasize214 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %171, i32 0, i32 12, !dbg !6135
  %172 = load i32, i32* %extrasize214, align 4, !dbg !6135
  %mul215 = mul nsw i32 %172, 8, !dbg !6136
  %sub216 = sub nsw i32 %170, %mul215, !dbg !6137
  %cmp217 = icmp sge i32 %168, %sub216, !dbg !6138
  br i1 %cmp217, label %land.lhs.true, label %if.else235, !dbg !6139

land.lhs.true:                                    ; preds = %for.end209
  %173 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6140
  %in_gb219 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %173, i32 0, i32 15, !dbg !6142
  %buffer220 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb219, i32 0, i32 0, !dbg !6143
  %174 = load i8*, i8** %buffer220, align 16, !dbg !6143
  %tobool221 = icmp ne i8* %174, null, !dbg !6140
  br i1 %tobool221, label %if.then222, label %if.else235, !dbg !6144

if.then222:                                       ; preds = %land.lhs.true
  %175 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6145
  %in_gb223 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %175, i32 0, i32 15, !dbg !6147
  %176 = load i32, i32* %skip, align 4, !dbg !6148
  %177 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6149
  %gb224 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %177, i32 0, i32 14, !dbg !6150
  %size_in_bits225 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb224, i32 0, i32 3, !dbg !6151
  %178 = load i32, i32* %size_in_bits225, align 4, !dbg !6151
  %sub226 = sub nsw i32 %176, %178, !dbg !6152
  %179 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6153
  %extrasize227 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %179, i32 0, i32 12, !dbg !6154
  %180 = load i32, i32* %extrasize227, align 4, !dbg !6154
  %mul228 = mul nsw i32 %180, 8, !dbg !6155
  %add229 = add nsw i32 %sub226, %mul228, !dbg !6156
  call void @skip_bits_long(%struct.GetBitContext* %in_gb223, i32 %add229), !dbg !6157
  %181 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6158
  %gb230 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %181, i32 0, i32 14, !dbg !6159
  %182 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6160
  %in_gb231 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %182, i32 0, i32 15, !dbg !6161
  %183 = bitcast %struct.GetBitContext* %gb230 to i8*, !dbg !6161
  %184 = bitcast %struct.GetBitContext* %in_gb231 to i8*, !dbg !6161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %183, i8* %184, i64 32, i32 16, i1 false), !dbg !6161
  %185 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6162
  %in_gb232 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %185, i32 0, i32 15, !dbg !6163
  %buffer233 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb232, i32 0, i32 0, !dbg !6164
  store i8* null, i8** %buffer233, align 16, !dbg !6165
  %186 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6166
  %extrasize234 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %186, i32 0, i32 12, !dbg !6167
  store i32 0, i32* %extrasize234, align 4, !dbg !6168
  br label %if.end237, !dbg !6169

if.else235:                                       ; preds = %land.lhs.true, %for.end209
  %187 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6170
  %gb236 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %187, i32 0, i32 14, !dbg !6172
  %188 = load i32, i32* %skip, align 4, !dbg !6173
  call void @skip_bits_long(%struct.GetBitContext* %gb236, i32 %188), !dbg !6174
  br label %if.end237

if.end237:                                        ; preds = %if.else235, %if.then222
  br label %if.end240, !dbg !6175

if.else238:                                       ; preds = %for.end141
  store i32 0, i32* %gr, align 4, !dbg !6176
  %189 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6178
  %extrasize239 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %189, i32 0, i32 12, !dbg !6179
  store i32 0, i32* %extrasize239, align 4, !dbg !6180
  br label %if.end240

if.end240:                                        ; preds = %if.else238, %if.end237
  br label %for.cond241, !dbg !6181

for.cond241:                                      ; preds = %for.inc581, %if.end240
  %190 = load i32, i32* %gr, align 4, !dbg !6182
  %191 = load i32, i32* %nb_granules, align 4, !dbg !6184
  %cmp242 = icmp slt i32 %190, %191, !dbg !6185
  br i1 %cmp242, label %for.body244, label %for.end583, !dbg !6186

for.body244:                                      ; preds = %for.cond241
  store i32 0, i32* %ch, align 4, !dbg !6187
  br label %for.cond245, !dbg !6188

for.cond245:                                      ; preds = %for.inc542, %for.body244
  %192 = load i32, i32* %ch, align 4, !dbg !6189
  %193 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6191
  %nb_channels246 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %193, i32 0, i32 6, !dbg !6192
  %194 = load i32, i32* %nb_channels246, align 8, !dbg !6192
  %cmp247 = icmp slt i32 %192, %194, !dbg !6193
  br i1 %cmp247, label %for.body249, label %for.end544, !dbg !6194

for.body249:                                      ; preds = %for.cond245
  %195 = load i32, i32* %gr, align 4, !dbg !6195
  %idxprom250 = sext i32 %195 to i64, !dbg !6196
  %196 = load i32, i32* %ch, align 4, !dbg !6197
  %idxprom251 = sext i32 %196 to i64, !dbg !6196
  %197 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6196
  %granules252 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %197, i32 0, i32 22, !dbg !6198
  %arrayidx253 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules252, i64 0, i64 %idxprom251, !dbg !6196
  %arrayidx254 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx253, i64 0, i64 %idxprom250, !dbg !6196
  store %struct.GranuleDef* %arrayidx254, %struct.GranuleDef** %g, align 8, !dbg !6199
  %198 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6200
  %gb255 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %198, i32 0, i32 14, !dbg !6201
  %call256 = call i32 @get_bits_count(%struct.GetBitContext* %gb255), !dbg !6202
  store i32 %call256, i32* %bits_pos, align 4, !dbg !6203
  %199 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6204
  %lsf257 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %199, i32 0, i32 9, !dbg !6205
  %200 = load i32, i32* %lsf257, align 4, !dbg !6205
  %tobool258 = icmp ne i32 %200, 0, !dbg !6204
  br i1 %tobool258, label %if.else426, label %if.then259, !dbg !6206

if.then259:                                       ; preds = %for.body249
  call void @llvm.dbg.declare(metadata i8** %sc, metadata !6207, metadata !2031), !dbg !6209
  call void @llvm.dbg.declare(metadata i32* %slen, metadata !6210, metadata !2031), !dbg !6211
  call void @llvm.dbg.declare(metadata i32* %slen1, metadata !6212, metadata !2031), !dbg !6213
  call void @llvm.dbg.declare(metadata i32* %slen2, metadata !6214, metadata !2031), !dbg !6215
  %201 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6216
  %scalefac_compress260 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %201, i32 0, i32 4, !dbg !6217
  %202 = load i32, i32* %scalefac_compress260, align 16, !dbg !6217
  %idxprom261 = sext i32 %202 to i64, !dbg !6218
  %arrayidx262 = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @slen_table, i64 0, i64 0), i64 0, i64 %idxprom261, !dbg !6218
  %203 = load i8, i8* %arrayidx262, align 1, !dbg !6218
  %conv263 = zext i8 %203 to i32, !dbg !6218
  store i32 %conv263, i32* %slen1, align 4, !dbg !6219
  %204 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6220
  %scalefac_compress264 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %204, i32 0, i32 4, !dbg !6221
  %205 = load i32, i32* %scalefac_compress264, align 16, !dbg !6221
  %idxprom265 = sext i32 %205 to i64, !dbg !6222
  %arrayidx266 = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @slen_table, i64 0, i64 1), i64 0, i64 %idxprom265, !dbg !6222
  %206 = load i8, i8* %arrayidx266, align 1, !dbg !6222
  %conv267 = zext i8 %206 to i32, !dbg !6222
  store i32 %conv267, i32* %slen2, align 4, !dbg !6223
  br label %do.body268, !dbg !6224, !llvm.loop !6225

do.body268:                                       ; preds = %if.then259
  br label %do.end269, !dbg !6226

do.end269:                                        ; preds = %do.body268
  %207 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6229
  %block_type270 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %207, i32 0, i32 5, !dbg !6231
  %208 = load i8, i8* %block_type270, align 4, !dbg !6231
  %conv271 = zext i8 %208 to i32, !dbg !6229
  %cmp272 = icmp eq i32 %conv271, 2, !dbg !6232
  br i1 %cmp272, label %if.then274, label %if.else347, !dbg !6233

if.then274:                                       ; preds = %do.end269
  %209 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6234
  %switch_point275 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %209, i32 0, i32 6, !dbg !6236
  %210 = load i8, i8* %switch_point275, align 1, !dbg !6236
  %conv276 = zext i8 %210 to i32, !dbg !6234
  %tobool277 = icmp ne i32 %conv276, 0, !dbg !6234
  %cond278 = select i1 %tobool277, i32 17, i32 18, !dbg !6234
  store i32 %cond278, i32* %n, align 4, !dbg !6237
  store i32 0, i32* %j, align 4, !dbg !6238
  %211 = load i32, i32* %slen1, align 4, !dbg !6239
  %tobool279 = icmp ne i32 %211, 0, !dbg !6239
  br i1 %tobool279, label %if.then280, label %if.else294, !dbg !6241

if.then280:                                       ; preds = %if.then274
  store i32 0, i32* %i, align 4, !dbg !6242
  br label %for.cond281, !dbg !6245

for.cond281:                                      ; preds = %for.inc291, %if.then280
  %212 = load i32, i32* %i, align 4, !dbg !6246
  %213 = load i32, i32* %n, align 4, !dbg !6249
  %cmp282 = icmp slt i32 %212, %213, !dbg !6250
  br i1 %cmp282, label %for.body284, label %for.end293, !dbg !6251

for.body284:                                      ; preds = %for.cond281
  %214 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6252
  %gb285 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %214, i32 0, i32 14, !dbg !6253
  %215 = load i32, i32* %slen1, align 4, !dbg !6254
  %call286 = call i32 @get_bits(%struct.GetBitContext* %gb285, i32 %215), !dbg !6255
  %conv287 = trunc i32 %call286 to i8, !dbg !6255
  %216 = load i32, i32* %j, align 4, !dbg !6256
  %inc288 = add nsw i32 %216, 1, !dbg !6256
  store i32 %inc288, i32* %j, align 4, !dbg !6256
  %idxprom289 = sext i32 %216 to i64, !dbg !6257
  %217 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6257
  %scale_factors = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %217, i32 0, i32 15, !dbg !6258
  %arrayidx290 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors, i64 0, i64 %idxprom289, !dbg !6257
  store i8 %conv287, i8* %arrayidx290, align 1, !dbg !6259
  br label %for.inc291, !dbg !6257

for.inc291:                                       ; preds = %for.body284
  %218 = load i32, i32* %i, align 4, !dbg !6260
  %inc292 = add nsw i32 %218, 1, !dbg !6260
  store i32 %inc292, i32* %i, align 4, !dbg !6260
  br label %for.cond281, !dbg !6262, !llvm.loop !6263

for.end293:                                       ; preds = %for.cond281
  br label %if.end306, !dbg !6265

if.else294:                                       ; preds = %if.then274
  store i32 0, i32* %i, align 4, !dbg !6266
  br label %for.cond295, !dbg !6269

for.cond295:                                      ; preds = %for.inc303, %if.else294
  %219 = load i32, i32* %i, align 4, !dbg !6270
  %220 = load i32, i32* %n, align 4, !dbg !6273
  %cmp296 = icmp slt i32 %219, %220, !dbg !6274
  br i1 %cmp296, label %for.body298, label %for.end305, !dbg !6275

for.body298:                                      ; preds = %for.cond295
  %221 = load i32, i32* %j, align 4, !dbg !6276
  %inc299 = add nsw i32 %221, 1, !dbg !6276
  store i32 %inc299, i32* %j, align 4, !dbg !6276
  %idxprom300 = sext i32 %221 to i64, !dbg !6277
  %222 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6277
  %scale_factors301 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %222, i32 0, i32 15, !dbg !6278
  %arrayidx302 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors301, i64 0, i64 %idxprom300, !dbg !6277
  store i8 0, i8* %arrayidx302, align 1, !dbg !6279
  br label %for.inc303, !dbg !6277

for.inc303:                                       ; preds = %for.body298
  %223 = load i32, i32* %i, align 4, !dbg !6280
  %inc304 = add nsw i32 %223, 1, !dbg !6280
  store i32 %inc304, i32* %i, align 4, !dbg !6280
  br label %for.cond295, !dbg !6282, !llvm.loop !6283

for.end305:                                       ; preds = %for.cond295
  br label %if.end306

if.end306:                                        ; preds = %for.end305, %for.end293
  %224 = load i32, i32* %slen2, align 4, !dbg !6285
  %tobool307 = icmp ne i32 %224, 0, !dbg !6285
  br i1 %tobool307, label %if.then308, label %if.else334, !dbg !6287

if.then308:                                       ; preds = %if.end306
  store i32 0, i32* %i, align 4, !dbg !6288
  br label %for.cond309, !dbg !6291

for.cond309:                                      ; preds = %for.inc320, %if.then308
  %225 = load i32, i32* %i, align 4, !dbg !6292
  %cmp310 = icmp slt i32 %225, 18, !dbg !6295
  br i1 %cmp310, label %for.body312, label %for.end322, !dbg !6296

for.body312:                                      ; preds = %for.cond309
  %226 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6297
  %gb313 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %226, i32 0, i32 14, !dbg !6298
  %227 = load i32, i32* %slen2, align 4, !dbg !6299
  %call314 = call i32 @get_bits(%struct.GetBitContext* %gb313, i32 %227), !dbg !6300
  %conv315 = trunc i32 %call314 to i8, !dbg !6300
  %228 = load i32, i32* %j, align 4, !dbg !6301
  %inc316 = add nsw i32 %228, 1, !dbg !6301
  store i32 %inc316, i32* %j, align 4, !dbg !6301
  %idxprom317 = sext i32 %228 to i64, !dbg !6302
  %229 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6302
  %scale_factors318 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %229, i32 0, i32 15, !dbg !6303
  %arrayidx319 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors318, i64 0, i64 %idxprom317, !dbg !6302
  store i8 %conv315, i8* %arrayidx319, align 1, !dbg !6304
  br label %for.inc320, !dbg !6302

for.inc320:                                       ; preds = %for.body312
  %230 = load i32, i32* %i, align 4, !dbg !6305
  %inc321 = add nsw i32 %230, 1, !dbg !6305
  store i32 %inc321, i32* %i, align 4, !dbg !6305
  br label %for.cond309, !dbg !6307, !llvm.loop !6308

for.end322:                                       ; preds = %for.cond309
  store i32 0, i32* %i, align 4, !dbg !6310
  br label %for.cond323, !dbg !6312

for.cond323:                                      ; preds = %for.inc331, %for.end322
  %231 = load i32, i32* %i, align 4, !dbg !6313
  %cmp324 = icmp slt i32 %231, 3, !dbg !6316
  br i1 %cmp324, label %for.body326, label %for.end333, !dbg !6317

for.body326:                                      ; preds = %for.cond323
  %232 = load i32, i32* %j, align 4, !dbg !6318
  %inc327 = add nsw i32 %232, 1, !dbg !6318
  store i32 %inc327, i32* %j, align 4, !dbg !6318
  %idxprom328 = sext i32 %232 to i64, !dbg !6319
  %233 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6319
  %scale_factors329 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %233, i32 0, i32 15, !dbg !6320
  %arrayidx330 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors329, i64 0, i64 %idxprom328, !dbg !6319
  store i8 0, i8* %arrayidx330, align 1, !dbg !6321
  br label %for.inc331, !dbg !6319

for.inc331:                                       ; preds = %for.body326
  %234 = load i32, i32* %i, align 4, !dbg !6322
  %inc332 = add nsw i32 %234, 1, !dbg !6322
  store i32 %inc332, i32* %i, align 4, !dbg !6322
  br label %for.cond323, !dbg !6324, !llvm.loop !6325

for.end333:                                       ; preds = %for.cond323
  br label %if.end346, !dbg !6327

if.else334:                                       ; preds = %if.end306
  store i32 0, i32* %i, align 4, !dbg !6328
  br label %for.cond335, !dbg !6331

for.cond335:                                      ; preds = %for.inc343, %if.else334
  %235 = load i32, i32* %i, align 4, !dbg !6332
  %cmp336 = icmp slt i32 %235, 21, !dbg !6335
  br i1 %cmp336, label %for.body338, label %for.end345, !dbg !6336

for.body338:                                      ; preds = %for.cond335
  %236 = load i32, i32* %j, align 4, !dbg !6337
  %inc339 = add nsw i32 %236, 1, !dbg !6337
  store i32 %inc339, i32* %j, align 4, !dbg !6337
  %idxprom340 = sext i32 %236 to i64, !dbg !6338
  %237 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6338
  %scale_factors341 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %237, i32 0, i32 15, !dbg !6339
  %arrayidx342 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors341, i64 0, i64 %idxprom340, !dbg !6338
  store i8 0, i8* %arrayidx342, align 1, !dbg !6340
  br label %for.inc343, !dbg !6338

for.inc343:                                       ; preds = %for.body338
  %238 = load i32, i32* %i, align 4, !dbg !6341
  %inc344 = add nsw i32 %238, 1, !dbg !6341
  store i32 %inc344, i32* %i, align 4, !dbg !6341
  br label %for.cond335, !dbg !6343, !llvm.loop !6344

for.end345:                                       ; preds = %for.cond335
  br label %if.end346

if.end346:                                        ; preds = %for.end345, %for.end333
  br label %if.end425, !dbg !6346

if.else347:                                       ; preds = %do.end269
  %239 = load i32, i32* %ch, align 4, !dbg !6347
  %idxprom348 = sext i32 %239 to i64, !dbg !6349
  %240 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6349
  %granules349 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %240, i32 0, i32 22, !dbg !6350
  %arrayidx350 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules349, i64 0, i64 %idxprom348, !dbg !6349
  %arrayidx351 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx350, i64 0, i64 0, !dbg !6349
  %scale_factors352 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %arrayidx351, i32 0, i32 15, !dbg !6351
  %arraydecay353 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors352, i32 0, i32 0, !dbg !6349
  store i8* %arraydecay353, i8** %sc, align 8, !dbg !6352
  store i32 0, i32* %j, align 4, !dbg !6353
  store i32 0, i32* %k, align 4, !dbg !6354
  br label %for.cond354, !dbg !6356

for.cond354:                                      ; preds = %for.inc418, %if.else347
  %241 = load i32, i32* %k, align 4, !dbg !6357
  %cmp355 = icmp slt i32 %241, 4, !dbg !6360
  br i1 %cmp355, label %for.body357, label %for.end420, !dbg !6361

for.body357:                                      ; preds = %for.cond354
  %242 = load i32, i32* %k, align 4, !dbg !6362
  %cmp358 = icmp eq i32 %242, 0, !dbg !6364
  %cond360 = select i1 %cmp358, i32 6, i32 5, !dbg !6362
  store i32 %cond360, i32* %n, align 4, !dbg !6365
  %243 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6366
  %scfsi361 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %243, i32 0, i32 0, !dbg !6368
  %244 = load i8, i8* %scfsi361, align 16, !dbg !6368
  %conv362 = zext i8 %244 to i32, !dbg !6366
  %245 = load i32, i32* %k, align 4, !dbg !6369
  %shr363 = ashr i32 8, %245, !dbg !6370
  %and364 = and i32 %conv362, %shr363, !dbg !6371
  %cmp365 = icmp eq i32 %and364, 0, !dbg !6372
  br i1 %cmp365, label %if.then367, label %if.else403, !dbg !6373

if.then367:                                       ; preds = %for.body357
  %246 = load i32, i32* %k, align 4, !dbg !6374
  %cmp368 = icmp slt i32 %246, 2, !dbg !6376
  br i1 %cmp368, label %cond.true370, label %cond.false371, !dbg !6377

cond.true370:                                     ; preds = %if.then367
  %247 = load i32, i32* %slen1, align 4, !dbg !6378
  br label %cond.end372, !dbg !6380

cond.false371:                                    ; preds = %if.then367
  %248 = load i32, i32* %slen2, align 4, !dbg !6381
  br label %cond.end372, !dbg !6383

cond.end372:                                      ; preds = %cond.false371, %cond.true370
  %cond373 = phi i32 [ %247, %cond.true370 ], [ %248, %cond.false371 ], !dbg !6384
  store i32 %cond373, i32* %slen, align 4, !dbg !6386
  %249 = load i32, i32* %slen, align 4, !dbg !6387
  %tobool374 = icmp ne i32 %249, 0, !dbg !6387
  br i1 %tobool374, label %if.then375, label %if.else390, !dbg !6389

if.then375:                                       ; preds = %cond.end372
  store i32 0, i32* %i, align 4, !dbg !6390
  br label %for.cond376, !dbg !6393

for.cond376:                                      ; preds = %for.inc387, %if.then375
  %250 = load i32, i32* %i, align 4, !dbg !6394
  %251 = load i32, i32* %n, align 4, !dbg !6397
  %cmp377 = icmp slt i32 %250, %251, !dbg !6398
  br i1 %cmp377, label %for.body379, label %for.end389, !dbg !6399

for.body379:                                      ; preds = %for.cond376
  %252 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6400
  %gb380 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %252, i32 0, i32 14, !dbg !6401
  %253 = load i32, i32* %slen, align 4, !dbg !6402
  %call381 = call i32 @get_bits(%struct.GetBitContext* %gb380, i32 %253), !dbg !6403
  %conv382 = trunc i32 %call381 to i8, !dbg !6403
  %254 = load i32, i32* %j, align 4, !dbg !6404
  %inc383 = add nsw i32 %254, 1, !dbg !6404
  store i32 %inc383, i32* %j, align 4, !dbg !6404
  %idxprom384 = sext i32 %254 to i64, !dbg !6405
  %255 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6405
  %scale_factors385 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %255, i32 0, i32 15, !dbg !6406
  %arrayidx386 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors385, i64 0, i64 %idxprom384, !dbg !6405
  store i8 %conv382, i8* %arrayidx386, align 1, !dbg !6407
  br label %for.inc387, !dbg !6405

for.inc387:                                       ; preds = %for.body379
  %256 = load i32, i32* %i, align 4, !dbg !6408
  %inc388 = add nsw i32 %256, 1, !dbg !6408
  store i32 %inc388, i32* %i, align 4, !dbg !6408
  br label %for.cond376, !dbg !6410, !llvm.loop !6411

for.end389:                                       ; preds = %for.cond376
  br label %if.end402, !dbg !6413

if.else390:                                       ; preds = %cond.end372
  store i32 0, i32* %i, align 4, !dbg !6414
  br label %for.cond391, !dbg !6417

for.cond391:                                      ; preds = %for.inc399, %if.else390
  %257 = load i32, i32* %i, align 4, !dbg !6418
  %258 = load i32, i32* %n, align 4, !dbg !6421
  %cmp392 = icmp slt i32 %257, %258, !dbg !6422
  br i1 %cmp392, label %for.body394, label %for.end401, !dbg !6423

for.body394:                                      ; preds = %for.cond391
  %259 = load i32, i32* %j, align 4, !dbg !6424
  %inc395 = add nsw i32 %259, 1, !dbg !6424
  store i32 %inc395, i32* %j, align 4, !dbg !6424
  %idxprom396 = sext i32 %259 to i64, !dbg !6425
  %260 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6425
  %scale_factors397 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %260, i32 0, i32 15, !dbg !6426
  %arrayidx398 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors397, i64 0, i64 %idxprom396, !dbg !6425
  store i8 0, i8* %arrayidx398, align 1, !dbg !6427
  br label %for.inc399, !dbg !6425

for.inc399:                                       ; preds = %for.body394
  %261 = load i32, i32* %i, align 4, !dbg !6428
  %inc400 = add nsw i32 %261, 1, !dbg !6428
  store i32 %inc400, i32* %i, align 4, !dbg !6428
  br label %for.cond391, !dbg !6430, !llvm.loop !6431

for.end401:                                       ; preds = %for.cond391
  br label %if.end402

if.end402:                                        ; preds = %for.end401, %for.end389
  br label %if.end417, !dbg !6433

if.else403:                                       ; preds = %for.body357
  store i32 0, i32* %i, align 4, !dbg !6434
  br label %for.cond404, !dbg !6437

for.cond404:                                      ; preds = %for.inc414, %if.else403
  %262 = load i32, i32* %i, align 4, !dbg !6438
  %263 = load i32, i32* %n, align 4, !dbg !6441
  %cmp405 = icmp slt i32 %262, %263, !dbg !6442
  br i1 %cmp405, label %for.body407, label %for.end416, !dbg !6443

for.body407:                                      ; preds = %for.cond404
  %264 = load i32, i32* %j, align 4, !dbg !6444
  %idxprom408 = sext i32 %264 to i64, !dbg !6446
  %265 = load i8*, i8** %sc, align 8, !dbg !6446
  %arrayidx409 = getelementptr inbounds i8, i8* %265, i64 %idxprom408, !dbg !6446
  %266 = load i8, i8* %arrayidx409, align 1, !dbg !6446
  %267 = load i32, i32* %j, align 4, !dbg !6447
  %idxprom410 = sext i32 %267 to i64, !dbg !6448
  %268 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6448
  %scale_factors411 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %268, i32 0, i32 15, !dbg !6449
  %arrayidx412 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors411, i64 0, i64 %idxprom410, !dbg !6448
  store i8 %266, i8* %arrayidx412, align 1, !dbg !6450
  %269 = load i32, i32* %j, align 4, !dbg !6451
  %inc413 = add nsw i32 %269, 1, !dbg !6451
  store i32 %inc413, i32* %j, align 4, !dbg !6451
  br label %for.inc414, !dbg !6452

for.inc414:                                       ; preds = %for.body407
  %270 = load i32, i32* %i, align 4, !dbg !6453
  %inc415 = add nsw i32 %270, 1, !dbg !6453
  store i32 %inc415, i32* %i, align 4, !dbg !6453
  br label %for.cond404, !dbg !6455, !llvm.loop !6456

for.end416:                                       ; preds = %for.cond404
  br label %if.end417

if.end417:                                        ; preds = %for.end416, %if.end402
  br label %for.inc418, !dbg !6458

for.inc418:                                       ; preds = %if.end417
  %271 = load i32, i32* %k, align 4, !dbg !6459
  %inc419 = add nsw i32 %271, 1, !dbg !6459
  store i32 %inc419, i32* %k, align 4, !dbg !6459
  br label %for.cond354, !dbg !6461, !llvm.loop !6462

for.end420:                                       ; preds = %for.cond354
  %272 = load i32, i32* %j, align 4, !dbg !6464
  %inc421 = add nsw i32 %272, 1, !dbg !6464
  store i32 %inc421, i32* %j, align 4, !dbg !6464
  %idxprom422 = sext i32 %272 to i64, !dbg !6465
  %273 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6465
  %scale_factors423 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %273, i32 0, i32 15, !dbg !6466
  %arrayidx424 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors423, i64 0, i64 %idxprom422, !dbg !6465
  store i8 0, i8* %arrayidx424, align 1, !dbg !6467
  br label %if.end425

if.end425:                                        ; preds = %for.end420, %if.end346
  br label %if.end536, !dbg !6468

if.else426:                                       ; preds = %for.body249
  call void @llvm.dbg.declare(metadata i32* %tindex, metadata !6469, metadata !2031), !dbg !6470
  call void @llvm.dbg.declare(metadata i32* %tindex2, metadata !6471, metadata !2031), !dbg !6472
  call void @llvm.dbg.declare(metadata [4 x i32]* %slen427, metadata !6473, metadata !2031), !dbg !6474
  call void @llvm.dbg.declare(metadata i32* %sl, metadata !6475, metadata !2031), !dbg !6476
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !6477, metadata !2031), !dbg !6478
  %274 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6479
  %block_type428 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %274, i32 0, i32 5, !dbg !6481
  %275 = load i8, i8* %block_type428, align 4, !dbg !6481
  %conv429 = zext i8 %275 to i32, !dbg !6479
  %cmp430 = icmp eq i32 %conv429, 2, !dbg !6482
  br i1 %cmp430, label %if.then432, label %if.else437, !dbg !6483

if.then432:                                       ; preds = %if.else426
  %276 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6484
  %switch_point433 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %276, i32 0, i32 6, !dbg !6485
  %277 = load i8, i8* %switch_point433, align 1, !dbg !6485
  %conv434 = zext i8 %277 to i32, !dbg !6484
  %tobool435 = icmp ne i32 %conv434, 0, !dbg !6484
  %cond436 = select i1 %tobool435, i32 2, i32 1, !dbg !6484
  store i32 %cond436, i32* %tindex, align 4, !dbg !6486
  br label %if.end438, !dbg !6487

if.else437:                                       ; preds = %if.else426
  store i32 0, i32* %tindex, align 4, !dbg !6488
  br label %if.end438

if.end438:                                        ; preds = %if.else437, %if.then432
  %278 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6489
  %scalefac_compress439 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %278, i32 0, i32 4, !dbg !6490
  %279 = load i32, i32* %scalefac_compress439, align 16, !dbg !6490
  store i32 %279, i32* %sf, align 4, !dbg !6491
  %280 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6492
  %mode_ext440 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %280, i32 0, i32 8, !dbg !6493
  %281 = load i32, i32* %mode_ext440, align 32, !dbg !6493
  %and441 = and i32 %281, 1, !dbg !6494
  %tobool442 = icmp ne i32 %and441, 0, !dbg !6494
  br i1 %tobool442, label %land.lhs.true443, label %if.else463, !dbg !6495

land.lhs.true443:                                 ; preds = %if.end438
  %282 = load i32, i32* %ch, align 4, !dbg !6496
  %cmp444 = icmp eq i32 %282, 1, !dbg !6498
  br i1 %cmp444, label %if.then446, label %if.else463, !dbg !6499

if.then446:                                       ; preds = %land.lhs.true443
  %283 = load i32, i32* %sf, align 4, !dbg !6500
  %shr447 = ashr i32 %283, 1, !dbg !6500
  store i32 %shr447, i32* %sf, align 4, !dbg !6500
  %284 = load i32, i32* %sf, align 4, !dbg !6501
  %cmp448 = icmp slt i32 %284, 180, !dbg !6502
  br i1 %cmp448, label %if.then450, label %if.else452, !dbg !6503

if.then450:                                       ; preds = %if.then446
  %arraydecay451 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !6504
  %285 = load i32, i32* %sf, align 4, !dbg !6505
  store i32* %arraydecay451, i32** %slen.addr.i, align 8, !dbg !6506
  store i32 %285, i32* %sf.addr.i, align 4, !dbg !6506
  store i32 6, i32* %n1.addr.i, align 4, !dbg !6506
  store i32 6, i32* %n2.addr.i, align 4, !dbg !6506
  store i32 0, i32* %n3.addr.i, align 4, !dbg !6506
  %286 = load i32, i32* %n3.addr.i, align 4, !dbg !6507
  %cmp.i595 = icmp eq i32 %286, 3, !dbg !6508
  br i1 %cmp.i595, label %if.then.i596, label %if.else.i597, !dbg !6509

if.then.i596:                                     ; preds = %if.then450
  %287 = load i32, i32* %sf.addr.i, align 4, !dbg !6510
  %mul.i = mul nsw i32 %287, 171, !dbg !6512
  %shr.i = ashr i32 %mul.i, 9, !dbg !6513
  store i32 %shr.i, i32* %m.i, align 4, !dbg !6514
  %288 = load i32, i32* %sf.addr.i, align 4, !dbg !6515
  %289 = load i32, i32* %m.i, align 4, !dbg !6516
  %mul1.i = mul nsw i32 3, %289, !dbg !6517
  %sub.i = sub nsw i32 %288, %mul1.i, !dbg !6518
  %290 = load i32*, i32** %slen.addr.i, align 8, !dbg !6519
  %arrayidx.i = getelementptr inbounds i32, i32* %290, i64 3, !dbg !6519
  store i32 %sub.i, i32* %arrayidx.i, align 4, !dbg !6520
  %291 = load i32, i32* %m.i, align 4, !dbg !6521
  store i32 %291, i32* %sf.addr.i, align 4, !dbg !6522
  br label %if.end28.i, !dbg !6523

if.else.i597:                                     ; preds = %if.then450
  %292 = load i32, i32* %n3.addr.i, align 4, !dbg !6524
  %cmp2.i = icmp eq i32 %292, 4, !dbg !6526
  br i1 %cmp2.i, label %if.then3.i, label %if.else6.i, !dbg !6524

if.then3.i:                                       ; preds = %if.else.i597
  %293 = load i32, i32* %sf.addr.i, align 4, !dbg !6527
  %and.i = and i32 %293, 3, !dbg !6530
  %294 = load i32*, i32** %slen.addr.i, align 8, !dbg !6531
  %arrayidx4.i = getelementptr inbounds i32, i32* %294, i64 3, !dbg !6531
  store i32 %and.i, i32* %arrayidx4.i, align 4, !dbg !6532
  %295 = load i32, i32* %sf.addr.i, align 4, !dbg !6533
  %shr5.i = ashr i32 %295, 2, !dbg !6533
  store i32 %shr5.i, i32* %sf.addr.i, align 4, !dbg !6533
  br label %if.end27.i, !dbg !6534

if.else6.i:                                       ; preds = %if.else.i597
  %296 = load i32, i32* %n3.addr.i, align 4, !dbg !6535
  %cmp7.i = icmp eq i32 %296, 5, !dbg !6537
  br i1 %cmp7.i, label %if.then8.i, label %if.else15.i, !dbg !6535

if.then8.i:                                       ; preds = %if.else6.i
  %297 = load i32, i32* %sf.addr.i, align 4, !dbg !6538
  %mul10.i = mul nsw i32 %297, 205, !dbg !6540
  %shr11.i = ashr i32 %mul10.i, 10, !dbg !6541
  store i32 %shr11.i, i32* %m9.i, align 4, !dbg !6542
  %298 = load i32, i32* %sf.addr.i, align 4, !dbg !6543
  %299 = load i32, i32* %m9.i, align 4, !dbg !6544
  %mul12.i = mul nsw i32 5, %299, !dbg !6545
  %sub13.i = sub nsw i32 %298, %mul12.i, !dbg !6546
  %300 = load i32*, i32** %slen.addr.i, align 8, !dbg !6547
  %arrayidx14.i = getelementptr inbounds i32, i32* %300, i64 3, !dbg !6547
  store i32 %sub13.i, i32* %arrayidx14.i, align 4, !dbg !6548
  %301 = load i32, i32* %m9.i, align 4, !dbg !6549
  store i32 %301, i32* %sf.addr.i, align 4, !dbg !6550
  br label %if.end26.i, !dbg !6551

if.else15.i:                                      ; preds = %if.else6.i
  %302 = load i32, i32* %n3.addr.i, align 4, !dbg !6552
  %cmp16.i = icmp eq i32 %302, 6, !dbg !6554
  br i1 %cmp16.i, label %if.then17.i, label %if.else24.i, !dbg !6552

if.then17.i:                                      ; preds = %if.else15.i
  %303 = load i32, i32* %sf.addr.i, align 4, !dbg !6555
  %mul19.i = mul nsw i32 %303, 171, !dbg !6557
  %shr20.i = ashr i32 %mul19.i, 10, !dbg !6558
  store i32 %shr20.i, i32* %m18.i, align 4, !dbg !6559
  %304 = load i32, i32* %sf.addr.i, align 4, !dbg !6560
  %305 = load i32, i32* %m18.i, align 4, !dbg !6561
  %mul21.i = mul nsw i32 6, %305, !dbg !6562
  %sub22.i = sub nsw i32 %304, %mul21.i, !dbg !6563
  %306 = load i32*, i32** %slen.addr.i, align 8, !dbg !6564
  %arrayidx23.i = getelementptr inbounds i32, i32* %306, i64 3, !dbg !6564
  store i32 %sub22.i, i32* %arrayidx23.i, align 4, !dbg !6565
  %307 = load i32, i32* %m18.i, align 4, !dbg !6566
  store i32 %307, i32* %sf.addr.i, align 4, !dbg !6567
  br label %if.end.i, !dbg !6568

if.else24.i:                                      ; preds = %if.else15.i
  %308 = load i32*, i32** %slen.addr.i, align 8, !dbg !6569
  %arrayidx25.i = getelementptr inbounds i32, i32* %308, i64 3, !dbg !6569
  store i32 0, i32* %arrayidx25.i, align 4, !dbg !6572
  br label %if.end.i, !dbg !6506

if.end.i:                                         ; preds = %if.else24.i, %if.then17.i
  br label %if.end26.i, !dbg !6506

if.end26.i:                                       ; preds = %if.end.i, %if.then8.i
  br label %if.end27.i, !dbg !6506

if.end27.i:                                       ; preds = %if.end26.i, %if.then3.i
  br label %if.end28.i, !dbg !6506

if.end28.i:                                       ; preds = %if.end27.i, %if.then.i596
  %309 = load i32, i32* %n2.addr.i, align 4, !dbg !6573
  %cmp29.i = icmp eq i32 %309, 3, !dbg !6574
  br i1 %cmp29.i, label %if.then30.i, label %if.else37.i, !dbg !6575

if.then30.i:                                      ; preds = %if.end28.i
  %310 = load i32, i32* %sf.addr.i, align 4, !dbg !6576
  %mul32.i = mul nsw i32 %310, 171, !dbg !6578
  %shr33.i = ashr i32 %mul32.i, 9, !dbg !6579
  store i32 %shr33.i, i32* %m31.i, align 4, !dbg !6580
  %311 = load i32, i32* %sf.addr.i, align 4, !dbg !6581
  %312 = load i32, i32* %m31.i, align 4, !dbg !6582
  %mul34.i = mul nsw i32 3, %312, !dbg !6583
  %sub35.i = sub nsw i32 %311, %mul34.i, !dbg !6584
  %313 = load i32*, i32** %slen.addr.i, align 8, !dbg !6585
  %arrayidx36.i = getelementptr inbounds i32, i32* %313, i64 2, !dbg !6585
  store i32 %sub35.i, i32* %arrayidx36.i, align 4, !dbg !6586
  %314 = load i32, i32* %m31.i, align 4, !dbg !6587
  store i32 %314, i32* %sf.addr.i, align 4, !dbg !6588
  br label %if.end66.i, !dbg !6589

if.else37.i:                                      ; preds = %if.end28.i
  %315 = load i32, i32* %n2.addr.i, align 4, !dbg !6590
  %cmp38.i = icmp eq i32 %315, 4, !dbg !6592
  br i1 %cmp38.i, label %if.then39.i, label %if.else43.i, !dbg !6590

if.then39.i:                                      ; preds = %if.else37.i
  %316 = load i32, i32* %sf.addr.i, align 4, !dbg !6593
  %and40.i = and i32 %316, 3, !dbg !6596
  %317 = load i32*, i32** %slen.addr.i, align 8, !dbg !6597
  %arrayidx41.i = getelementptr inbounds i32, i32* %317, i64 2, !dbg !6597
  store i32 %and40.i, i32* %arrayidx41.i, align 4, !dbg !6598
  %318 = load i32, i32* %sf.addr.i, align 4, !dbg !6599
  %shr42.i = ashr i32 %318, 2, !dbg !6599
  store i32 %shr42.i, i32* %sf.addr.i, align 4, !dbg !6599
  br label %if.end65.i, !dbg !6600

if.else43.i:                                      ; preds = %if.else37.i
  %319 = load i32, i32* %n2.addr.i, align 4, !dbg !6601
  %cmp44.i = icmp eq i32 %319, 5, !dbg !6603
  br i1 %cmp44.i, label %if.then45.i, label %if.else52.i, !dbg !6601

if.then45.i:                                      ; preds = %if.else43.i
  %320 = load i32, i32* %sf.addr.i, align 4, !dbg !6604
  %mul47.i = mul nsw i32 %320, 205, !dbg !6606
  %shr48.i = ashr i32 %mul47.i, 10, !dbg !6607
  store i32 %shr48.i, i32* %m46.i, align 4, !dbg !6608
  %321 = load i32, i32* %sf.addr.i, align 4, !dbg !6609
  %322 = load i32, i32* %m46.i, align 4, !dbg !6610
  %mul49.i = mul nsw i32 5, %322, !dbg !6611
  %sub50.i = sub nsw i32 %321, %mul49.i, !dbg !6612
  %323 = load i32*, i32** %slen.addr.i, align 8, !dbg !6613
  %arrayidx51.i = getelementptr inbounds i32, i32* %323, i64 2, !dbg !6613
  store i32 %sub50.i, i32* %arrayidx51.i, align 4, !dbg !6614
  %324 = load i32, i32* %m46.i, align 4, !dbg !6615
  store i32 %324, i32* %sf.addr.i, align 4, !dbg !6616
  br label %if.end64.i, !dbg !6617

if.else52.i:                                      ; preds = %if.else43.i
  %325 = load i32, i32* %n2.addr.i, align 4, !dbg !6618
  %cmp53.i = icmp eq i32 %325, 6, !dbg !6620
  br i1 %cmp53.i, label %if.then54.i, label %if.else61.i, !dbg !6618

if.then54.i:                                      ; preds = %if.else52.i
  %326 = load i32, i32* %sf.addr.i, align 4, !dbg !6621
  %mul56.i = mul nsw i32 %326, 171, !dbg !6623
  %shr57.i = ashr i32 %mul56.i, 10, !dbg !6624
  store i32 %shr57.i, i32* %m55.i, align 4, !dbg !6625
  %327 = load i32, i32* %sf.addr.i, align 4, !dbg !6626
  %328 = load i32, i32* %m55.i, align 4, !dbg !6627
  %mul58.i = mul nsw i32 6, %328, !dbg !6628
  %sub59.i = sub nsw i32 %327, %mul58.i, !dbg !6629
  %329 = load i32*, i32** %slen.addr.i, align 8, !dbg !6630
  %arrayidx60.i = getelementptr inbounds i32, i32* %329, i64 2, !dbg !6630
  store i32 %sub59.i, i32* %arrayidx60.i, align 4, !dbg !6631
  %330 = load i32, i32* %m55.i, align 4, !dbg !6632
  store i32 %330, i32* %sf.addr.i, align 4, !dbg !6633
  br label %if.end63.i, !dbg !6634

if.else61.i:                                      ; preds = %if.else52.i
  %331 = load i32*, i32** %slen.addr.i, align 8, !dbg !6635
  %arrayidx62.i = getelementptr inbounds i32, i32* %331, i64 2, !dbg !6635
  store i32 0, i32* %arrayidx62.i, align 4, !dbg !6638
  br label %if.end63.i, !dbg !6506

if.end63.i:                                       ; preds = %if.else61.i, %if.then54.i
  br label %if.end64.i, !dbg !6506

if.end64.i:                                       ; preds = %if.end63.i, %if.then45.i
  br label %if.end65.i, !dbg !6506

if.end65.i:                                       ; preds = %if.end64.i, %if.then39.i
  br label %if.end66.i, !dbg !6506

if.end66.i:                                       ; preds = %if.end65.i, %if.then30.i
  %332 = load i32, i32* %n1.addr.i, align 4, !dbg !6639
  %cmp67.i = icmp eq i32 %332, 3, !dbg !6640
  br i1 %cmp67.i, label %if.then68.i, label %if.else75.i, !dbg !6641

if.then68.i:                                      ; preds = %if.end66.i
  %333 = load i32, i32* %sf.addr.i, align 4, !dbg !6642
  %mul70.i = mul nsw i32 %333, 171, !dbg !6644
  %shr71.i = ashr i32 %mul70.i, 9, !dbg !6645
  store i32 %shr71.i, i32* %m69.i, align 4, !dbg !6646
  %334 = load i32, i32* %sf.addr.i, align 4, !dbg !6647
  %335 = load i32, i32* %m69.i, align 4, !dbg !6648
  %mul72.i = mul nsw i32 3, %335, !dbg !6649
  %sub73.i = sub nsw i32 %334, %mul72.i, !dbg !6650
  %336 = load i32*, i32** %slen.addr.i, align 8, !dbg !6651
  %arrayidx74.i = getelementptr inbounds i32, i32* %336, i64 1, !dbg !6651
  store i32 %sub73.i, i32* %arrayidx74.i, align 4, !dbg !6652
  %337 = load i32, i32* %m69.i, align 4, !dbg !6653
  store i32 %337, i32* %sf.addr.i, align 4, !dbg !6654
  br label %lsf_sf_expand.exit, !dbg !6655

if.else75.i:                                      ; preds = %if.end66.i
  %338 = load i32, i32* %n1.addr.i, align 4, !dbg !6656
  %cmp76.i = icmp eq i32 %338, 4, !dbg !6658
  br i1 %cmp76.i, label %if.then77.i, label %if.else81.i, !dbg !6656

if.then77.i:                                      ; preds = %if.else75.i
  %339 = load i32, i32* %sf.addr.i, align 4, !dbg !6659
  %and78.i = and i32 %339, 3, !dbg !6662
  %340 = load i32*, i32** %slen.addr.i, align 8, !dbg !6663
  %arrayidx79.i = getelementptr inbounds i32, i32* %340, i64 1, !dbg !6663
  store i32 %and78.i, i32* %arrayidx79.i, align 4, !dbg !6664
  %341 = load i32, i32* %sf.addr.i, align 4, !dbg !6665
  %shr80.i = ashr i32 %341, 2, !dbg !6665
  store i32 %shr80.i, i32* %sf.addr.i, align 4, !dbg !6665
  br label %if.end103.i, !dbg !6666

if.else81.i:                                      ; preds = %if.else75.i
  %342 = load i32, i32* %n1.addr.i, align 4, !dbg !6667
  %cmp82.i = icmp eq i32 %342, 5, !dbg !6669
  br i1 %cmp82.i, label %if.then83.i, label %if.else90.i, !dbg !6667

if.then83.i:                                      ; preds = %if.else81.i
  %343 = load i32, i32* %sf.addr.i, align 4, !dbg !6670
  %mul85.i = mul nsw i32 %343, 205, !dbg !6672
  %shr86.i = ashr i32 %mul85.i, 10, !dbg !6673
  store i32 %shr86.i, i32* %m84.i, align 4, !dbg !6674
  %344 = load i32, i32* %sf.addr.i, align 4, !dbg !6675
  %345 = load i32, i32* %m84.i, align 4, !dbg !6676
  %mul87.i = mul nsw i32 5, %345, !dbg !6677
  %sub88.i = sub nsw i32 %344, %mul87.i, !dbg !6678
  %346 = load i32*, i32** %slen.addr.i, align 8, !dbg !6679
  %arrayidx89.i = getelementptr inbounds i32, i32* %346, i64 1, !dbg !6679
  store i32 %sub88.i, i32* %arrayidx89.i, align 4, !dbg !6680
  %347 = load i32, i32* %m84.i, align 4, !dbg !6681
  store i32 %347, i32* %sf.addr.i, align 4, !dbg !6682
  br label %if.end102.i, !dbg !6683

if.else90.i:                                      ; preds = %if.else81.i
  %348 = load i32, i32* %n1.addr.i, align 4, !dbg !6684
  %cmp91.i = icmp eq i32 %348, 6, !dbg !6686
  br i1 %cmp91.i, label %if.then92.i, label %if.else99.i, !dbg !6684

if.then92.i:                                      ; preds = %if.else90.i
  %349 = load i32, i32* %sf.addr.i, align 4, !dbg !6687
  %mul94.i = mul nsw i32 %349, 171, !dbg !6689
  %shr95.i = ashr i32 %mul94.i, 10, !dbg !6690
  store i32 %shr95.i, i32* %m93.i, align 4, !dbg !6691
  %350 = load i32, i32* %sf.addr.i, align 4, !dbg !6692
  %351 = load i32, i32* %m93.i, align 4, !dbg !6693
  %mul96.i = mul nsw i32 6, %351, !dbg !6694
  %sub97.i = sub nsw i32 %350, %mul96.i, !dbg !6695
  %352 = load i32*, i32** %slen.addr.i, align 8, !dbg !6696
  %arrayidx98.i = getelementptr inbounds i32, i32* %352, i64 1, !dbg !6696
  store i32 %sub97.i, i32* %arrayidx98.i, align 4, !dbg !6697
  %353 = load i32, i32* %m93.i, align 4, !dbg !6698
  store i32 %353, i32* %sf.addr.i, align 4, !dbg !6699
  br label %if.end101.i, !dbg !6700

if.else99.i:                                      ; preds = %if.else90.i
  %354 = load i32*, i32** %slen.addr.i, align 8, !dbg !6701
  %arrayidx100.i = getelementptr inbounds i32, i32* %354, i64 1, !dbg !6701
  store i32 0, i32* %arrayidx100.i, align 4, !dbg !6704
  br label %if.end101.i, !dbg !6506

if.end101.i:                                      ; preds = %if.else99.i, %if.then92.i
  br label %if.end102.i, !dbg !6506

if.end102.i:                                      ; preds = %if.end101.i, %if.then83.i
  br label %if.end103.i, !dbg !6506

if.end103.i:                                      ; preds = %if.end102.i, %if.then77.i
  br label %lsf_sf_expand.exit, !dbg !6506

lsf_sf_expand.exit:                               ; preds = %if.then68.i, %if.end103.i
  %355 = load i32, i32* %sf.addr.i, align 4, !dbg !6705
  %356 = load i32*, i32** %slen.addr.i, align 8, !dbg !6706
  store i32 %355, i32* %356, align 4, !dbg !6707
  store i32 3, i32* %tindex2, align 4, !dbg !6708
  br label %if.end462, !dbg !6709

if.else452:                                       ; preds = %if.then446
  %357 = load i32, i32* %sf, align 4, !dbg !6710
  %cmp453 = icmp slt i32 %357, 244, !dbg !6712
  br i1 %cmp453, label %if.then455, label %if.else458, !dbg !6710

if.then455:                                       ; preds = %if.else452
  %arraydecay456 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !6713
  %358 = load i32, i32* %sf, align 4, !dbg !6714
  %sub457 = sub nsw i32 %358, 180, !dbg !6715
  store i32* %arraydecay456, i32** %slen.addr.i598, align 8, !dbg !6716
  store i32 %sub457, i32* %sf.addr.i599, align 4, !dbg !6716
  store i32 4, i32* %n1.addr.i600, align 4, !dbg !6716
  store i32 4, i32* %n2.addr.i601, align 4, !dbg !6716
  store i32 0, i32* %n3.addr.i602, align 4, !dbg !6716
  %359 = load i32, i32* %n3.addr.i602, align 4, !dbg !6717
  %cmp.i612 = icmp eq i32 %359, 3, !dbg !6718
  br i1 %cmp.i612, label %if.then.i618, label %if.else.i620, !dbg !6719

if.then.i618:                                     ; preds = %if.then455
  %360 = load i32, i32* %sf.addr.i599, align 4, !dbg !6720
  %mul.i613 = mul nsw i32 %360, 171, !dbg !6721
  %shr.i614 = ashr i32 %mul.i613, 9, !dbg !6722
  store i32 %shr.i614, i32* %m.i603, align 4, !dbg !6723
  %361 = load i32, i32* %sf.addr.i599, align 4, !dbg !6724
  %362 = load i32, i32* %m.i603, align 4, !dbg !6725
  %mul1.i615 = mul nsw i32 3, %362, !dbg !6726
  %sub.i616 = sub nsw i32 %361, %mul1.i615, !dbg !6727
  %363 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6728
  %arrayidx.i617 = getelementptr inbounds i32, i32* %363, i64 3, !dbg !6728
  store i32 %sub.i616, i32* %arrayidx.i617, align 4, !dbg !6729
  %364 = load i32, i32* %m.i603, align 4, !dbg !6730
  store i32 %364, i32* %sf.addr.i599, align 4, !dbg !6731
  br label %if.end28.i647, !dbg !6732

if.else.i620:                                     ; preds = %if.then455
  %365 = load i32, i32* %n3.addr.i602, align 4, !dbg !6733
  %cmp2.i619 = icmp eq i32 %365, 4, !dbg !6734
  br i1 %cmp2.i619, label %if.then3.i624, label %if.else6.i626, !dbg !6733

if.then3.i624:                                    ; preds = %if.else.i620
  %366 = load i32, i32* %sf.addr.i599, align 4, !dbg !6735
  %and.i621 = and i32 %366, 3, !dbg !6736
  %367 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6737
  %arrayidx4.i622 = getelementptr inbounds i32, i32* %367, i64 3, !dbg !6737
  store i32 %and.i621, i32* %arrayidx4.i622, align 4, !dbg !6738
  %368 = load i32, i32* %sf.addr.i599, align 4, !dbg !6739
  %shr5.i623 = ashr i32 %368, 2, !dbg !6739
  store i32 %shr5.i623, i32* %sf.addr.i599, align 4, !dbg !6739
  br label %if.end27.i645, !dbg !6740

if.else6.i626:                                    ; preds = %if.else.i620
  %369 = load i32, i32* %n3.addr.i602, align 4, !dbg !6741
  %cmp7.i625 = icmp eq i32 %369, 5, !dbg !6742
  br i1 %cmp7.i625, label %if.then8.i632, label %if.else15.i634, !dbg !6741

if.then8.i632:                                    ; preds = %if.else6.i626
  %370 = load i32, i32* %sf.addr.i599, align 4, !dbg !6743
  %mul10.i627 = mul nsw i32 %370, 205, !dbg !6744
  %shr11.i628 = ashr i32 %mul10.i627, 10, !dbg !6745
  store i32 %shr11.i628, i32* %m9.i604, align 4, !dbg !6746
  %371 = load i32, i32* %sf.addr.i599, align 4, !dbg !6747
  %372 = load i32, i32* %m9.i604, align 4, !dbg !6748
  %mul12.i629 = mul nsw i32 5, %372, !dbg !6749
  %sub13.i630 = sub nsw i32 %371, %mul12.i629, !dbg !6750
  %373 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6751
  %arrayidx14.i631 = getelementptr inbounds i32, i32* %373, i64 3, !dbg !6751
  store i32 %sub13.i630, i32* %arrayidx14.i631, align 4, !dbg !6752
  %374 = load i32, i32* %m9.i604, align 4, !dbg !6753
  store i32 %374, i32* %sf.addr.i599, align 4, !dbg !6754
  br label %if.end26.i644, !dbg !6755

if.else15.i634:                                   ; preds = %if.else6.i626
  %375 = load i32, i32* %n3.addr.i602, align 4, !dbg !6756
  %cmp16.i633 = icmp eq i32 %375, 6, !dbg !6757
  br i1 %cmp16.i633, label %if.then17.i640, label %if.else24.i642, !dbg !6756

if.then17.i640:                                   ; preds = %if.else15.i634
  %376 = load i32, i32* %sf.addr.i599, align 4, !dbg !6758
  %mul19.i635 = mul nsw i32 %376, 171, !dbg !6759
  %shr20.i636 = ashr i32 %mul19.i635, 10, !dbg !6760
  store i32 %shr20.i636, i32* %m18.i605, align 4, !dbg !6761
  %377 = load i32, i32* %sf.addr.i599, align 4, !dbg !6762
  %378 = load i32, i32* %m18.i605, align 4, !dbg !6763
  %mul21.i637 = mul nsw i32 6, %378, !dbg !6764
  %sub22.i638 = sub nsw i32 %377, %mul21.i637, !dbg !6765
  %379 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6766
  %arrayidx23.i639 = getelementptr inbounds i32, i32* %379, i64 3, !dbg !6766
  store i32 %sub22.i638, i32* %arrayidx23.i639, align 4, !dbg !6767
  %380 = load i32, i32* %m18.i605, align 4, !dbg !6768
  store i32 %380, i32* %sf.addr.i599, align 4, !dbg !6769
  br label %if.end.i643, !dbg !6770

if.else24.i642:                                   ; preds = %if.else15.i634
  %381 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6771
  %arrayidx25.i641 = getelementptr inbounds i32, i32* %381, i64 3, !dbg !6771
  store i32 0, i32* %arrayidx25.i641, align 4, !dbg !6772
  br label %if.end.i643, !dbg !6716

if.end.i643:                                      ; preds = %if.else24.i642, %if.then17.i640
  br label %if.end26.i644, !dbg !6716

if.end26.i644:                                    ; preds = %if.end.i643, %if.then8.i632
  br label %if.end27.i645, !dbg !6716

if.end27.i645:                                    ; preds = %if.end26.i644, %if.then3.i624
  br label %if.end28.i647, !dbg !6716

if.end28.i647:                                    ; preds = %if.end27.i645, %if.then.i618
  %382 = load i32, i32* %n2.addr.i601, align 4, !dbg !6773
  %cmp29.i646 = icmp eq i32 %382, 3, !dbg !6774
  br i1 %cmp29.i646, label %if.then30.i653, label %if.else37.i655, !dbg !6775

if.then30.i653:                                   ; preds = %if.end28.i647
  %383 = load i32, i32* %sf.addr.i599, align 4, !dbg !6776
  %mul32.i648 = mul nsw i32 %383, 171, !dbg !6777
  %shr33.i649 = ashr i32 %mul32.i648, 9, !dbg !6778
  store i32 %shr33.i649, i32* %m31.i606, align 4, !dbg !6779
  %384 = load i32, i32* %sf.addr.i599, align 4, !dbg !6780
  %385 = load i32, i32* %m31.i606, align 4, !dbg !6781
  %mul34.i650 = mul nsw i32 3, %385, !dbg !6782
  %sub35.i651 = sub nsw i32 %384, %mul34.i650, !dbg !6783
  %386 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6784
  %arrayidx36.i652 = getelementptr inbounds i32, i32* %386, i64 2, !dbg !6784
  store i32 %sub35.i651, i32* %arrayidx36.i652, align 4, !dbg !6785
  %387 = load i32, i32* %m31.i606, align 4, !dbg !6786
  store i32 %387, i32* %sf.addr.i599, align 4, !dbg !6787
  br label %if.end66.i682, !dbg !6788

if.else37.i655:                                   ; preds = %if.end28.i647
  %388 = load i32, i32* %n2.addr.i601, align 4, !dbg !6789
  %cmp38.i654 = icmp eq i32 %388, 4, !dbg !6790
  br i1 %cmp38.i654, label %if.then39.i659, label %if.else43.i661, !dbg !6789

if.then39.i659:                                   ; preds = %if.else37.i655
  %389 = load i32, i32* %sf.addr.i599, align 4, !dbg !6791
  %and40.i656 = and i32 %389, 3, !dbg !6792
  %390 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6793
  %arrayidx41.i657 = getelementptr inbounds i32, i32* %390, i64 2, !dbg !6793
  store i32 %and40.i656, i32* %arrayidx41.i657, align 4, !dbg !6794
  %391 = load i32, i32* %sf.addr.i599, align 4, !dbg !6795
  %shr42.i658 = ashr i32 %391, 2, !dbg !6795
  store i32 %shr42.i658, i32* %sf.addr.i599, align 4, !dbg !6795
  br label %if.end65.i680, !dbg !6796

if.else43.i661:                                   ; preds = %if.else37.i655
  %392 = load i32, i32* %n2.addr.i601, align 4, !dbg !6797
  %cmp44.i660 = icmp eq i32 %392, 5, !dbg !6798
  br i1 %cmp44.i660, label %if.then45.i667, label %if.else52.i669, !dbg !6797

if.then45.i667:                                   ; preds = %if.else43.i661
  %393 = load i32, i32* %sf.addr.i599, align 4, !dbg !6799
  %mul47.i662 = mul nsw i32 %393, 205, !dbg !6800
  %shr48.i663 = ashr i32 %mul47.i662, 10, !dbg !6801
  store i32 %shr48.i663, i32* %m46.i607, align 4, !dbg !6802
  %394 = load i32, i32* %sf.addr.i599, align 4, !dbg !6803
  %395 = load i32, i32* %m46.i607, align 4, !dbg !6804
  %mul49.i664 = mul nsw i32 5, %395, !dbg !6805
  %sub50.i665 = sub nsw i32 %394, %mul49.i664, !dbg !6806
  %396 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6807
  %arrayidx51.i666 = getelementptr inbounds i32, i32* %396, i64 2, !dbg !6807
  store i32 %sub50.i665, i32* %arrayidx51.i666, align 4, !dbg !6808
  %397 = load i32, i32* %m46.i607, align 4, !dbg !6809
  store i32 %397, i32* %sf.addr.i599, align 4, !dbg !6810
  br label %if.end64.i679, !dbg !6811

if.else52.i669:                                   ; preds = %if.else43.i661
  %398 = load i32, i32* %n2.addr.i601, align 4, !dbg !6812
  %cmp53.i668 = icmp eq i32 %398, 6, !dbg !6813
  br i1 %cmp53.i668, label %if.then54.i675, label %if.else61.i677, !dbg !6812

if.then54.i675:                                   ; preds = %if.else52.i669
  %399 = load i32, i32* %sf.addr.i599, align 4, !dbg !6814
  %mul56.i670 = mul nsw i32 %399, 171, !dbg !6815
  %shr57.i671 = ashr i32 %mul56.i670, 10, !dbg !6816
  store i32 %shr57.i671, i32* %m55.i608, align 4, !dbg !6817
  %400 = load i32, i32* %sf.addr.i599, align 4, !dbg !6818
  %401 = load i32, i32* %m55.i608, align 4, !dbg !6819
  %mul58.i672 = mul nsw i32 6, %401, !dbg !6820
  %sub59.i673 = sub nsw i32 %400, %mul58.i672, !dbg !6821
  %402 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6822
  %arrayidx60.i674 = getelementptr inbounds i32, i32* %402, i64 2, !dbg !6822
  store i32 %sub59.i673, i32* %arrayidx60.i674, align 4, !dbg !6823
  %403 = load i32, i32* %m55.i608, align 4, !dbg !6824
  store i32 %403, i32* %sf.addr.i599, align 4, !dbg !6825
  br label %if.end63.i678, !dbg !6826

if.else61.i677:                                   ; preds = %if.else52.i669
  %404 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6827
  %arrayidx62.i676 = getelementptr inbounds i32, i32* %404, i64 2, !dbg !6827
  store i32 0, i32* %arrayidx62.i676, align 4, !dbg !6828
  br label %if.end63.i678, !dbg !6716

if.end63.i678:                                    ; preds = %if.else61.i677, %if.then54.i675
  br label %if.end64.i679, !dbg !6716

if.end64.i679:                                    ; preds = %if.end63.i678, %if.then45.i667
  br label %if.end65.i680, !dbg !6716

if.end65.i680:                                    ; preds = %if.end64.i679, %if.then39.i659
  br label %if.end66.i682, !dbg !6716

if.end66.i682:                                    ; preds = %if.end65.i680, %if.then30.i653
  %405 = load i32, i32* %n1.addr.i600, align 4, !dbg !6829
  %cmp67.i681 = icmp eq i32 %405, 3, !dbg !6830
  br i1 %cmp67.i681, label %if.then68.i688, label %if.else75.i690, !dbg !6831

if.then68.i688:                                   ; preds = %if.end66.i682
  %406 = load i32, i32* %sf.addr.i599, align 4, !dbg !6832
  %mul70.i683 = mul nsw i32 %406, 171, !dbg !6833
  %shr71.i684 = ashr i32 %mul70.i683, 9, !dbg !6834
  store i32 %shr71.i684, i32* %m69.i609, align 4, !dbg !6835
  %407 = load i32, i32* %sf.addr.i599, align 4, !dbg !6836
  %408 = load i32, i32* %m69.i609, align 4, !dbg !6837
  %mul72.i685 = mul nsw i32 3, %408, !dbg !6838
  %sub73.i686 = sub nsw i32 %407, %mul72.i685, !dbg !6839
  %409 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6840
  %arrayidx74.i687 = getelementptr inbounds i32, i32* %409, i64 1, !dbg !6840
  store i32 %sub73.i686, i32* %arrayidx74.i687, align 4, !dbg !6841
  %410 = load i32, i32* %m69.i609, align 4, !dbg !6842
  store i32 %410, i32* %sf.addr.i599, align 4, !dbg !6843
  br label %lsf_sf_expand.exit716, !dbg !6844

if.else75.i690:                                   ; preds = %if.end66.i682
  %411 = load i32, i32* %n1.addr.i600, align 4, !dbg !6845
  %cmp76.i689 = icmp eq i32 %411, 4, !dbg !6846
  br i1 %cmp76.i689, label %if.then77.i694, label %if.else81.i696, !dbg !6845

if.then77.i694:                                   ; preds = %if.else75.i690
  %412 = load i32, i32* %sf.addr.i599, align 4, !dbg !6847
  %and78.i691 = and i32 %412, 3, !dbg !6848
  %413 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6849
  %arrayidx79.i692 = getelementptr inbounds i32, i32* %413, i64 1, !dbg !6849
  store i32 %and78.i691, i32* %arrayidx79.i692, align 4, !dbg !6850
  %414 = load i32, i32* %sf.addr.i599, align 4, !dbg !6851
  %shr80.i693 = ashr i32 %414, 2, !dbg !6851
  store i32 %shr80.i693, i32* %sf.addr.i599, align 4, !dbg !6851
  br label %if.end103.i715, !dbg !6852

if.else81.i696:                                   ; preds = %if.else75.i690
  %415 = load i32, i32* %n1.addr.i600, align 4, !dbg !6853
  %cmp82.i695 = icmp eq i32 %415, 5, !dbg !6854
  br i1 %cmp82.i695, label %if.then83.i702, label %if.else90.i704, !dbg !6853

if.then83.i702:                                   ; preds = %if.else81.i696
  %416 = load i32, i32* %sf.addr.i599, align 4, !dbg !6855
  %mul85.i697 = mul nsw i32 %416, 205, !dbg !6856
  %shr86.i698 = ashr i32 %mul85.i697, 10, !dbg !6857
  store i32 %shr86.i698, i32* %m84.i610, align 4, !dbg !6858
  %417 = load i32, i32* %sf.addr.i599, align 4, !dbg !6859
  %418 = load i32, i32* %m84.i610, align 4, !dbg !6860
  %mul87.i699 = mul nsw i32 5, %418, !dbg !6861
  %sub88.i700 = sub nsw i32 %417, %mul87.i699, !dbg !6862
  %419 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6863
  %arrayidx89.i701 = getelementptr inbounds i32, i32* %419, i64 1, !dbg !6863
  store i32 %sub88.i700, i32* %arrayidx89.i701, align 4, !dbg !6864
  %420 = load i32, i32* %m84.i610, align 4, !dbg !6865
  store i32 %420, i32* %sf.addr.i599, align 4, !dbg !6866
  br label %if.end102.i714, !dbg !6867

if.else90.i704:                                   ; preds = %if.else81.i696
  %421 = load i32, i32* %n1.addr.i600, align 4, !dbg !6868
  %cmp91.i703 = icmp eq i32 %421, 6, !dbg !6869
  br i1 %cmp91.i703, label %if.then92.i710, label %if.else99.i712, !dbg !6868

if.then92.i710:                                   ; preds = %if.else90.i704
  %422 = load i32, i32* %sf.addr.i599, align 4, !dbg !6870
  %mul94.i705 = mul nsw i32 %422, 171, !dbg !6871
  %shr95.i706 = ashr i32 %mul94.i705, 10, !dbg !6872
  store i32 %shr95.i706, i32* %m93.i611, align 4, !dbg !6873
  %423 = load i32, i32* %sf.addr.i599, align 4, !dbg !6874
  %424 = load i32, i32* %m93.i611, align 4, !dbg !6875
  %mul96.i707 = mul nsw i32 6, %424, !dbg !6876
  %sub97.i708 = sub nsw i32 %423, %mul96.i707, !dbg !6877
  %425 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6878
  %arrayidx98.i709 = getelementptr inbounds i32, i32* %425, i64 1, !dbg !6878
  store i32 %sub97.i708, i32* %arrayidx98.i709, align 4, !dbg !6879
  %426 = load i32, i32* %m93.i611, align 4, !dbg !6880
  store i32 %426, i32* %sf.addr.i599, align 4, !dbg !6881
  br label %if.end101.i713, !dbg !6882

if.else99.i712:                                   ; preds = %if.else90.i704
  %427 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6883
  %arrayidx100.i711 = getelementptr inbounds i32, i32* %427, i64 1, !dbg !6883
  store i32 0, i32* %arrayidx100.i711, align 4, !dbg !6884
  br label %if.end101.i713, !dbg !6716

if.end101.i713:                                   ; preds = %if.else99.i712, %if.then92.i710
  br label %if.end102.i714, !dbg !6716

if.end102.i714:                                   ; preds = %if.end101.i713, %if.then83.i702
  br label %if.end103.i715, !dbg !6716

if.end103.i715:                                   ; preds = %if.end102.i714, %if.then77.i694
  br label %lsf_sf_expand.exit716, !dbg !6716

lsf_sf_expand.exit716:                            ; preds = %if.then68.i688, %if.end103.i715
  %428 = load i32, i32* %sf.addr.i599, align 4, !dbg !6885
  %429 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6886
  store i32 %428, i32* %429, align 4, !dbg !6887
  store i32 4, i32* %tindex2, align 4, !dbg !6888
  br label %if.end461, !dbg !6889

if.else458:                                       ; preds = %if.else452
  %arraydecay459 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !6890
  %430 = load i32, i32* %sf, align 4, !dbg !6891
  %sub460 = sub nsw i32 %430, 244, !dbg !6892
  store i32* %arraydecay459, i32** %slen.addr.i717, align 8, !dbg !6893
  store i32 %sub460, i32* %sf.addr.i718, align 4, !dbg !6893
  store i32 3, i32* %n1.addr.i719, align 4, !dbg !6893
  store i32 0, i32* %n2.addr.i720, align 4, !dbg !6893
  store i32 0, i32* %n3.addr.i721, align 4, !dbg !6893
  %431 = load i32, i32* %n3.addr.i721, align 4, !dbg !6894
  %cmp.i731 = icmp eq i32 %431, 3, !dbg !6895
  br i1 %cmp.i731, label %if.then.i737, label %if.else.i739, !dbg !6896

if.then.i737:                                     ; preds = %if.else458
  %432 = load i32, i32* %sf.addr.i718, align 4, !dbg !6897
  %mul.i732 = mul nsw i32 %432, 171, !dbg !6898
  %shr.i733 = ashr i32 %mul.i732, 9, !dbg !6899
  store i32 %shr.i733, i32* %m.i722, align 4, !dbg !6900
  %433 = load i32, i32* %sf.addr.i718, align 4, !dbg !6901
  %434 = load i32, i32* %m.i722, align 4, !dbg !6902
  %mul1.i734 = mul nsw i32 3, %434, !dbg !6903
  %sub.i735 = sub nsw i32 %433, %mul1.i734, !dbg !6904
  %435 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6905
  %arrayidx.i736 = getelementptr inbounds i32, i32* %435, i64 3, !dbg !6905
  store i32 %sub.i735, i32* %arrayidx.i736, align 4, !dbg !6906
  %436 = load i32, i32* %m.i722, align 4, !dbg !6907
  store i32 %436, i32* %sf.addr.i718, align 4, !dbg !6908
  br label %if.end28.i766, !dbg !6909

if.else.i739:                                     ; preds = %if.else458
  %437 = load i32, i32* %n3.addr.i721, align 4, !dbg !6910
  %cmp2.i738 = icmp eq i32 %437, 4, !dbg !6911
  br i1 %cmp2.i738, label %if.then3.i743, label %if.else6.i745, !dbg !6910

if.then3.i743:                                    ; preds = %if.else.i739
  %438 = load i32, i32* %sf.addr.i718, align 4, !dbg !6912
  %and.i740 = and i32 %438, 3, !dbg !6913
  %439 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6914
  %arrayidx4.i741 = getelementptr inbounds i32, i32* %439, i64 3, !dbg !6914
  store i32 %and.i740, i32* %arrayidx4.i741, align 4, !dbg !6915
  %440 = load i32, i32* %sf.addr.i718, align 4, !dbg !6916
  %shr5.i742 = ashr i32 %440, 2, !dbg !6916
  store i32 %shr5.i742, i32* %sf.addr.i718, align 4, !dbg !6916
  br label %if.end27.i764, !dbg !6917

if.else6.i745:                                    ; preds = %if.else.i739
  %441 = load i32, i32* %n3.addr.i721, align 4, !dbg !6918
  %cmp7.i744 = icmp eq i32 %441, 5, !dbg !6919
  br i1 %cmp7.i744, label %if.then8.i751, label %if.else15.i753, !dbg !6918

if.then8.i751:                                    ; preds = %if.else6.i745
  %442 = load i32, i32* %sf.addr.i718, align 4, !dbg !6920
  %mul10.i746 = mul nsw i32 %442, 205, !dbg !6921
  %shr11.i747 = ashr i32 %mul10.i746, 10, !dbg !6922
  store i32 %shr11.i747, i32* %m9.i723, align 4, !dbg !6923
  %443 = load i32, i32* %sf.addr.i718, align 4, !dbg !6924
  %444 = load i32, i32* %m9.i723, align 4, !dbg !6925
  %mul12.i748 = mul nsw i32 5, %444, !dbg !6926
  %sub13.i749 = sub nsw i32 %443, %mul12.i748, !dbg !6927
  %445 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6928
  %arrayidx14.i750 = getelementptr inbounds i32, i32* %445, i64 3, !dbg !6928
  store i32 %sub13.i749, i32* %arrayidx14.i750, align 4, !dbg !6929
  %446 = load i32, i32* %m9.i723, align 4, !dbg !6930
  store i32 %446, i32* %sf.addr.i718, align 4, !dbg !6931
  br label %if.end26.i763, !dbg !6932

if.else15.i753:                                   ; preds = %if.else6.i745
  %447 = load i32, i32* %n3.addr.i721, align 4, !dbg !6933
  %cmp16.i752 = icmp eq i32 %447, 6, !dbg !6934
  br i1 %cmp16.i752, label %if.then17.i759, label %if.else24.i761, !dbg !6933

if.then17.i759:                                   ; preds = %if.else15.i753
  %448 = load i32, i32* %sf.addr.i718, align 4, !dbg !6935
  %mul19.i754 = mul nsw i32 %448, 171, !dbg !6936
  %shr20.i755 = ashr i32 %mul19.i754, 10, !dbg !6937
  store i32 %shr20.i755, i32* %m18.i724, align 4, !dbg !6938
  %449 = load i32, i32* %sf.addr.i718, align 4, !dbg !6939
  %450 = load i32, i32* %m18.i724, align 4, !dbg !6940
  %mul21.i756 = mul nsw i32 6, %450, !dbg !6941
  %sub22.i757 = sub nsw i32 %449, %mul21.i756, !dbg !6942
  %451 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6943
  %arrayidx23.i758 = getelementptr inbounds i32, i32* %451, i64 3, !dbg !6943
  store i32 %sub22.i757, i32* %arrayidx23.i758, align 4, !dbg !6944
  %452 = load i32, i32* %m18.i724, align 4, !dbg !6945
  store i32 %452, i32* %sf.addr.i718, align 4, !dbg !6946
  br label %if.end.i762, !dbg !6947

if.else24.i761:                                   ; preds = %if.else15.i753
  %453 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6948
  %arrayidx25.i760 = getelementptr inbounds i32, i32* %453, i64 3, !dbg !6948
  store i32 0, i32* %arrayidx25.i760, align 4, !dbg !6949
  br label %if.end.i762, !dbg !6893

if.end.i762:                                      ; preds = %if.else24.i761, %if.then17.i759
  br label %if.end26.i763, !dbg !6893

if.end26.i763:                                    ; preds = %if.end.i762, %if.then8.i751
  br label %if.end27.i764, !dbg !6893

if.end27.i764:                                    ; preds = %if.end26.i763, %if.then3.i743
  br label %if.end28.i766, !dbg !6893

if.end28.i766:                                    ; preds = %if.end27.i764, %if.then.i737
  %454 = load i32, i32* %n2.addr.i720, align 4, !dbg !6950
  %cmp29.i765 = icmp eq i32 %454, 3, !dbg !6951
  br i1 %cmp29.i765, label %if.then30.i772, label %if.else37.i774, !dbg !6952

if.then30.i772:                                   ; preds = %if.end28.i766
  %455 = load i32, i32* %sf.addr.i718, align 4, !dbg !6953
  %mul32.i767 = mul nsw i32 %455, 171, !dbg !6954
  %shr33.i768 = ashr i32 %mul32.i767, 9, !dbg !6955
  store i32 %shr33.i768, i32* %m31.i725, align 4, !dbg !6956
  %456 = load i32, i32* %sf.addr.i718, align 4, !dbg !6957
  %457 = load i32, i32* %m31.i725, align 4, !dbg !6958
  %mul34.i769 = mul nsw i32 3, %457, !dbg !6959
  %sub35.i770 = sub nsw i32 %456, %mul34.i769, !dbg !6960
  %458 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6961
  %arrayidx36.i771 = getelementptr inbounds i32, i32* %458, i64 2, !dbg !6961
  store i32 %sub35.i770, i32* %arrayidx36.i771, align 4, !dbg !6962
  %459 = load i32, i32* %m31.i725, align 4, !dbg !6963
  store i32 %459, i32* %sf.addr.i718, align 4, !dbg !6964
  br label %if.end66.i801, !dbg !6965

if.else37.i774:                                   ; preds = %if.end28.i766
  %460 = load i32, i32* %n2.addr.i720, align 4, !dbg !6966
  %cmp38.i773 = icmp eq i32 %460, 4, !dbg !6967
  br i1 %cmp38.i773, label %if.then39.i778, label %if.else43.i780, !dbg !6966

if.then39.i778:                                   ; preds = %if.else37.i774
  %461 = load i32, i32* %sf.addr.i718, align 4, !dbg !6968
  %and40.i775 = and i32 %461, 3, !dbg !6969
  %462 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6970
  %arrayidx41.i776 = getelementptr inbounds i32, i32* %462, i64 2, !dbg !6970
  store i32 %and40.i775, i32* %arrayidx41.i776, align 4, !dbg !6971
  %463 = load i32, i32* %sf.addr.i718, align 4, !dbg !6972
  %shr42.i777 = ashr i32 %463, 2, !dbg !6972
  store i32 %shr42.i777, i32* %sf.addr.i718, align 4, !dbg !6972
  br label %if.end65.i799, !dbg !6973

if.else43.i780:                                   ; preds = %if.else37.i774
  %464 = load i32, i32* %n2.addr.i720, align 4, !dbg !6974
  %cmp44.i779 = icmp eq i32 %464, 5, !dbg !6975
  br i1 %cmp44.i779, label %if.then45.i786, label %if.else52.i788, !dbg !6974

if.then45.i786:                                   ; preds = %if.else43.i780
  %465 = load i32, i32* %sf.addr.i718, align 4, !dbg !6976
  %mul47.i781 = mul nsw i32 %465, 205, !dbg !6977
  %shr48.i782 = ashr i32 %mul47.i781, 10, !dbg !6978
  store i32 %shr48.i782, i32* %m46.i726, align 4, !dbg !6979
  %466 = load i32, i32* %sf.addr.i718, align 4, !dbg !6980
  %467 = load i32, i32* %m46.i726, align 4, !dbg !6981
  %mul49.i783 = mul nsw i32 5, %467, !dbg !6982
  %sub50.i784 = sub nsw i32 %466, %mul49.i783, !dbg !6983
  %468 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6984
  %arrayidx51.i785 = getelementptr inbounds i32, i32* %468, i64 2, !dbg !6984
  store i32 %sub50.i784, i32* %arrayidx51.i785, align 4, !dbg !6985
  %469 = load i32, i32* %m46.i726, align 4, !dbg !6986
  store i32 %469, i32* %sf.addr.i718, align 4, !dbg !6987
  br label %if.end64.i798, !dbg !6988

if.else52.i788:                                   ; preds = %if.else43.i780
  %470 = load i32, i32* %n2.addr.i720, align 4, !dbg !6989
  %cmp53.i787 = icmp eq i32 %470, 6, !dbg !6990
  br i1 %cmp53.i787, label %if.then54.i794, label %if.else61.i796, !dbg !6989

if.then54.i794:                                   ; preds = %if.else52.i788
  %471 = load i32, i32* %sf.addr.i718, align 4, !dbg !6991
  %mul56.i789 = mul nsw i32 %471, 171, !dbg !6992
  %shr57.i790 = ashr i32 %mul56.i789, 10, !dbg !6993
  store i32 %shr57.i790, i32* %m55.i727, align 4, !dbg !6994
  %472 = load i32, i32* %sf.addr.i718, align 4, !dbg !6995
  %473 = load i32, i32* %m55.i727, align 4, !dbg !6996
  %mul58.i791 = mul nsw i32 6, %473, !dbg !6997
  %sub59.i792 = sub nsw i32 %472, %mul58.i791, !dbg !6998
  %474 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6999
  %arrayidx60.i793 = getelementptr inbounds i32, i32* %474, i64 2, !dbg !6999
  store i32 %sub59.i792, i32* %arrayidx60.i793, align 4, !dbg !7000
  %475 = load i32, i32* %m55.i727, align 4, !dbg !7001
  store i32 %475, i32* %sf.addr.i718, align 4, !dbg !7002
  br label %if.end63.i797, !dbg !7003

if.else61.i796:                                   ; preds = %if.else52.i788
  %476 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7004
  %arrayidx62.i795 = getelementptr inbounds i32, i32* %476, i64 2, !dbg !7004
  store i32 0, i32* %arrayidx62.i795, align 4, !dbg !7005
  br label %if.end63.i797, !dbg !6893

if.end63.i797:                                    ; preds = %if.else61.i796, %if.then54.i794
  br label %if.end64.i798, !dbg !6893

if.end64.i798:                                    ; preds = %if.end63.i797, %if.then45.i786
  br label %if.end65.i799, !dbg !6893

if.end65.i799:                                    ; preds = %if.end64.i798, %if.then39.i778
  br label %if.end66.i801, !dbg !6893

if.end66.i801:                                    ; preds = %if.end65.i799, %if.then30.i772
  %477 = load i32, i32* %n1.addr.i719, align 4, !dbg !7006
  %cmp67.i800 = icmp eq i32 %477, 3, !dbg !7007
  br i1 %cmp67.i800, label %if.then68.i807, label %if.else75.i809, !dbg !7008

if.then68.i807:                                   ; preds = %if.end66.i801
  %478 = load i32, i32* %sf.addr.i718, align 4, !dbg !7009
  %mul70.i802 = mul nsw i32 %478, 171, !dbg !7010
  %shr71.i803 = ashr i32 %mul70.i802, 9, !dbg !7011
  store i32 %shr71.i803, i32* %m69.i728, align 4, !dbg !7012
  %479 = load i32, i32* %sf.addr.i718, align 4, !dbg !7013
  %480 = load i32, i32* %m69.i728, align 4, !dbg !7014
  %mul72.i804 = mul nsw i32 3, %480, !dbg !7015
  %sub73.i805 = sub nsw i32 %479, %mul72.i804, !dbg !7016
  %481 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7017
  %arrayidx74.i806 = getelementptr inbounds i32, i32* %481, i64 1, !dbg !7017
  store i32 %sub73.i805, i32* %arrayidx74.i806, align 4, !dbg !7018
  %482 = load i32, i32* %m69.i728, align 4, !dbg !7019
  store i32 %482, i32* %sf.addr.i718, align 4, !dbg !7020
  br label %lsf_sf_expand.exit835, !dbg !7021

if.else75.i809:                                   ; preds = %if.end66.i801
  %483 = load i32, i32* %n1.addr.i719, align 4, !dbg !7022
  %cmp76.i808 = icmp eq i32 %483, 4, !dbg !7023
  br i1 %cmp76.i808, label %if.then77.i813, label %if.else81.i815, !dbg !7022

if.then77.i813:                                   ; preds = %if.else75.i809
  %484 = load i32, i32* %sf.addr.i718, align 4, !dbg !7024
  %and78.i810 = and i32 %484, 3, !dbg !7025
  %485 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7026
  %arrayidx79.i811 = getelementptr inbounds i32, i32* %485, i64 1, !dbg !7026
  store i32 %and78.i810, i32* %arrayidx79.i811, align 4, !dbg !7027
  %486 = load i32, i32* %sf.addr.i718, align 4, !dbg !7028
  %shr80.i812 = ashr i32 %486, 2, !dbg !7028
  store i32 %shr80.i812, i32* %sf.addr.i718, align 4, !dbg !7028
  br label %if.end103.i834, !dbg !7029

if.else81.i815:                                   ; preds = %if.else75.i809
  %487 = load i32, i32* %n1.addr.i719, align 4, !dbg !7030
  %cmp82.i814 = icmp eq i32 %487, 5, !dbg !7031
  br i1 %cmp82.i814, label %if.then83.i821, label %if.else90.i823, !dbg !7030

if.then83.i821:                                   ; preds = %if.else81.i815
  %488 = load i32, i32* %sf.addr.i718, align 4, !dbg !7032
  %mul85.i816 = mul nsw i32 %488, 205, !dbg !7033
  %shr86.i817 = ashr i32 %mul85.i816, 10, !dbg !7034
  store i32 %shr86.i817, i32* %m84.i729, align 4, !dbg !7035
  %489 = load i32, i32* %sf.addr.i718, align 4, !dbg !7036
  %490 = load i32, i32* %m84.i729, align 4, !dbg !7037
  %mul87.i818 = mul nsw i32 5, %490, !dbg !7038
  %sub88.i819 = sub nsw i32 %489, %mul87.i818, !dbg !7039
  %491 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7040
  %arrayidx89.i820 = getelementptr inbounds i32, i32* %491, i64 1, !dbg !7040
  store i32 %sub88.i819, i32* %arrayidx89.i820, align 4, !dbg !7041
  %492 = load i32, i32* %m84.i729, align 4, !dbg !7042
  store i32 %492, i32* %sf.addr.i718, align 4, !dbg !7043
  br label %if.end102.i833, !dbg !7044

if.else90.i823:                                   ; preds = %if.else81.i815
  %493 = load i32, i32* %n1.addr.i719, align 4, !dbg !7045
  %cmp91.i822 = icmp eq i32 %493, 6, !dbg !7046
  br i1 %cmp91.i822, label %if.then92.i829, label %if.else99.i831, !dbg !7045

if.then92.i829:                                   ; preds = %if.else90.i823
  %494 = load i32, i32* %sf.addr.i718, align 4, !dbg !7047
  %mul94.i824 = mul nsw i32 %494, 171, !dbg !7048
  %shr95.i825 = ashr i32 %mul94.i824, 10, !dbg !7049
  store i32 %shr95.i825, i32* %m93.i730, align 4, !dbg !7050
  %495 = load i32, i32* %sf.addr.i718, align 4, !dbg !7051
  %496 = load i32, i32* %m93.i730, align 4, !dbg !7052
  %mul96.i826 = mul nsw i32 6, %496, !dbg !7053
  %sub97.i827 = sub nsw i32 %495, %mul96.i826, !dbg !7054
  %497 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7055
  %arrayidx98.i828 = getelementptr inbounds i32, i32* %497, i64 1, !dbg !7055
  store i32 %sub97.i827, i32* %arrayidx98.i828, align 4, !dbg !7056
  %498 = load i32, i32* %m93.i730, align 4, !dbg !7057
  store i32 %498, i32* %sf.addr.i718, align 4, !dbg !7058
  br label %if.end101.i832, !dbg !7059

if.else99.i831:                                   ; preds = %if.else90.i823
  %499 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7060
  %arrayidx100.i830 = getelementptr inbounds i32, i32* %499, i64 1, !dbg !7060
  store i32 0, i32* %arrayidx100.i830, align 4, !dbg !7061
  br label %if.end101.i832, !dbg !6893

if.end101.i832:                                   ; preds = %if.else99.i831, %if.then92.i829
  br label %if.end102.i833, !dbg !6893

if.end102.i833:                                   ; preds = %if.end101.i832, %if.then83.i821
  br label %if.end103.i834, !dbg !6893

if.end103.i834:                                   ; preds = %if.end102.i833, %if.then77.i813
  br label %lsf_sf_expand.exit835, !dbg !6893

lsf_sf_expand.exit835:                            ; preds = %if.then68.i807, %if.end103.i834
  %500 = load i32, i32* %sf.addr.i718, align 4, !dbg !7062
  %501 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7063
  store i32 %500, i32* %501, align 4, !dbg !7064
  store i32 5, i32* %tindex2, align 4, !dbg !7065
  br label %if.end461

if.end461:                                        ; preds = %lsf_sf_expand.exit835, %lsf_sf_expand.exit716
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %lsf_sf_expand.exit
  br label %if.end480, !dbg !7066

if.else463:                                       ; preds = %land.lhs.true443, %if.end438
  %502 = load i32, i32* %sf, align 4, !dbg !7067
  %cmp464 = icmp slt i32 %502, 400, !dbg !7068
  br i1 %cmp464, label %if.then466, label %if.else468, !dbg !7069

if.then466:                                       ; preds = %if.else463
  %arraydecay467 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !7070
  %503 = load i32, i32* %sf, align 4, !dbg !7071
  store i32* %arraydecay467, i32** %slen.addr.i836, align 8, !dbg !7072
  store i32 %503, i32* %sf.addr.i837, align 4, !dbg !7072
  store i32 5, i32* %n1.addr.i838, align 4, !dbg !7072
  store i32 4, i32* %n2.addr.i839, align 4, !dbg !7072
  store i32 4, i32* %n3.addr.i840, align 4, !dbg !7072
  %504 = load i32, i32* %n3.addr.i840, align 4, !dbg !7073
  %cmp.i850 = icmp eq i32 %504, 3, !dbg !7074
  br i1 %cmp.i850, label %if.then.i856, label %if.else.i858, !dbg !7075

if.then.i856:                                     ; preds = %if.then466
  %505 = load i32, i32* %sf.addr.i837, align 4, !dbg !7076
  %mul.i851 = mul nsw i32 %505, 171, !dbg !7077
  %shr.i852 = ashr i32 %mul.i851, 9, !dbg !7078
  store i32 %shr.i852, i32* %m.i841, align 4, !dbg !7079
  %506 = load i32, i32* %sf.addr.i837, align 4, !dbg !7080
  %507 = load i32, i32* %m.i841, align 4, !dbg !7081
  %mul1.i853 = mul nsw i32 3, %507, !dbg !7082
  %sub.i854 = sub nsw i32 %506, %mul1.i853, !dbg !7083
  %508 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7084
  %arrayidx.i855 = getelementptr inbounds i32, i32* %508, i64 3, !dbg !7084
  store i32 %sub.i854, i32* %arrayidx.i855, align 4, !dbg !7085
  %509 = load i32, i32* %m.i841, align 4, !dbg !7086
  store i32 %509, i32* %sf.addr.i837, align 4, !dbg !7087
  br label %if.end28.i885, !dbg !7088

if.else.i858:                                     ; preds = %if.then466
  %510 = load i32, i32* %n3.addr.i840, align 4, !dbg !7089
  %cmp2.i857 = icmp eq i32 %510, 4, !dbg !7090
  br i1 %cmp2.i857, label %if.then3.i862, label %if.else6.i864, !dbg !7089

if.then3.i862:                                    ; preds = %if.else.i858
  %511 = load i32, i32* %sf.addr.i837, align 4, !dbg !7091
  %and.i859 = and i32 %511, 3, !dbg !7092
  %512 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7093
  %arrayidx4.i860 = getelementptr inbounds i32, i32* %512, i64 3, !dbg !7093
  store i32 %and.i859, i32* %arrayidx4.i860, align 4, !dbg !7094
  %513 = load i32, i32* %sf.addr.i837, align 4, !dbg !7095
  %shr5.i861 = ashr i32 %513, 2, !dbg !7095
  store i32 %shr5.i861, i32* %sf.addr.i837, align 4, !dbg !7095
  br label %if.end27.i883, !dbg !7096

if.else6.i864:                                    ; preds = %if.else.i858
  %514 = load i32, i32* %n3.addr.i840, align 4, !dbg !7097
  %cmp7.i863 = icmp eq i32 %514, 5, !dbg !7098
  br i1 %cmp7.i863, label %if.then8.i870, label %if.else15.i872, !dbg !7097

if.then8.i870:                                    ; preds = %if.else6.i864
  %515 = load i32, i32* %sf.addr.i837, align 4, !dbg !7099
  %mul10.i865 = mul nsw i32 %515, 205, !dbg !7100
  %shr11.i866 = ashr i32 %mul10.i865, 10, !dbg !7101
  store i32 %shr11.i866, i32* %m9.i842, align 4, !dbg !7102
  %516 = load i32, i32* %sf.addr.i837, align 4, !dbg !7103
  %517 = load i32, i32* %m9.i842, align 4, !dbg !7104
  %mul12.i867 = mul nsw i32 5, %517, !dbg !7105
  %sub13.i868 = sub nsw i32 %516, %mul12.i867, !dbg !7106
  %518 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7107
  %arrayidx14.i869 = getelementptr inbounds i32, i32* %518, i64 3, !dbg !7107
  store i32 %sub13.i868, i32* %arrayidx14.i869, align 4, !dbg !7108
  %519 = load i32, i32* %m9.i842, align 4, !dbg !7109
  store i32 %519, i32* %sf.addr.i837, align 4, !dbg !7110
  br label %if.end26.i882, !dbg !7111

if.else15.i872:                                   ; preds = %if.else6.i864
  %520 = load i32, i32* %n3.addr.i840, align 4, !dbg !7112
  %cmp16.i871 = icmp eq i32 %520, 6, !dbg !7113
  br i1 %cmp16.i871, label %if.then17.i878, label %if.else24.i880, !dbg !7112

if.then17.i878:                                   ; preds = %if.else15.i872
  %521 = load i32, i32* %sf.addr.i837, align 4, !dbg !7114
  %mul19.i873 = mul nsw i32 %521, 171, !dbg !7115
  %shr20.i874 = ashr i32 %mul19.i873, 10, !dbg !7116
  store i32 %shr20.i874, i32* %m18.i843, align 4, !dbg !7117
  %522 = load i32, i32* %sf.addr.i837, align 4, !dbg !7118
  %523 = load i32, i32* %m18.i843, align 4, !dbg !7119
  %mul21.i875 = mul nsw i32 6, %523, !dbg !7120
  %sub22.i876 = sub nsw i32 %522, %mul21.i875, !dbg !7121
  %524 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7122
  %arrayidx23.i877 = getelementptr inbounds i32, i32* %524, i64 3, !dbg !7122
  store i32 %sub22.i876, i32* %arrayidx23.i877, align 4, !dbg !7123
  %525 = load i32, i32* %m18.i843, align 4, !dbg !7124
  store i32 %525, i32* %sf.addr.i837, align 4, !dbg !7125
  br label %if.end.i881, !dbg !7126

if.else24.i880:                                   ; preds = %if.else15.i872
  %526 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7127
  %arrayidx25.i879 = getelementptr inbounds i32, i32* %526, i64 3, !dbg !7127
  store i32 0, i32* %arrayidx25.i879, align 4, !dbg !7128
  br label %if.end.i881, !dbg !7072

if.end.i881:                                      ; preds = %if.else24.i880, %if.then17.i878
  br label %if.end26.i882, !dbg !7072

if.end26.i882:                                    ; preds = %if.end.i881, %if.then8.i870
  br label %if.end27.i883, !dbg !7072

if.end27.i883:                                    ; preds = %if.end26.i882, %if.then3.i862
  br label %if.end28.i885, !dbg !7072

if.end28.i885:                                    ; preds = %if.end27.i883, %if.then.i856
  %527 = load i32, i32* %n2.addr.i839, align 4, !dbg !7129
  %cmp29.i884 = icmp eq i32 %527, 3, !dbg !7130
  br i1 %cmp29.i884, label %if.then30.i891, label %if.else37.i893, !dbg !7131

if.then30.i891:                                   ; preds = %if.end28.i885
  %528 = load i32, i32* %sf.addr.i837, align 4, !dbg !7132
  %mul32.i886 = mul nsw i32 %528, 171, !dbg !7133
  %shr33.i887 = ashr i32 %mul32.i886, 9, !dbg !7134
  store i32 %shr33.i887, i32* %m31.i844, align 4, !dbg !7135
  %529 = load i32, i32* %sf.addr.i837, align 4, !dbg !7136
  %530 = load i32, i32* %m31.i844, align 4, !dbg !7137
  %mul34.i888 = mul nsw i32 3, %530, !dbg !7138
  %sub35.i889 = sub nsw i32 %529, %mul34.i888, !dbg !7139
  %531 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7140
  %arrayidx36.i890 = getelementptr inbounds i32, i32* %531, i64 2, !dbg !7140
  store i32 %sub35.i889, i32* %arrayidx36.i890, align 4, !dbg !7141
  %532 = load i32, i32* %m31.i844, align 4, !dbg !7142
  store i32 %532, i32* %sf.addr.i837, align 4, !dbg !7143
  br label %if.end66.i920, !dbg !7144

if.else37.i893:                                   ; preds = %if.end28.i885
  %533 = load i32, i32* %n2.addr.i839, align 4, !dbg !7145
  %cmp38.i892 = icmp eq i32 %533, 4, !dbg !7146
  br i1 %cmp38.i892, label %if.then39.i897, label %if.else43.i899, !dbg !7145

if.then39.i897:                                   ; preds = %if.else37.i893
  %534 = load i32, i32* %sf.addr.i837, align 4, !dbg !7147
  %and40.i894 = and i32 %534, 3, !dbg !7148
  %535 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7149
  %arrayidx41.i895 = getelementptr inbounds i32, i32* %535, i64 2, !dbg !7149
  store i32 %and40.i894, i32* %arrayidx41.i895, align 4, !dbg !7150
  %536 = load i32, i32* %sf.addr.i837, align 4, !dbg !7151
  %shr42.i896 = ashr i32 %536, 2, !dbg !7151
  store i32 %shr42.i896, i32* %sf.addr.i837, align 4, !dbg !7151
  br label %if.end65.i918, !dbg !7152

if.else43.i899:                                   ; preds = %if.else37.i893
  %537 = load i32, i32* %n2.addr.i839, align 4, !dbg !7153
  %cmp44.i898 = icmp eq i32 %537, 5, !dbg !7154
  br i1 %cmp44.i898, label %if.then45.i905, label %if.else52.i907, !dbg !7153

if.then45.i905:                                   ; preds = %if.else43.i899
  %538 = load i32, i32* %sf.addr.i837, align 4, !dbg !7155
  %mul47.i900 = mul nsw i32 %538, 205, !dbg !7156
  %shr48.i901 = ashr i32 %mul47.i900, 10, !dbg !7157
  store i32 %shr48.i901, i32* %m46.i845, align 4, !dbg !7158
  %539 = load i32, i32* %sf.addr.i837, align 4, !dbg !7159
  %540 = load i32, i32* %m46.i845, align 4, !dbg !7160
  %mul49.i902 = mul nsw i32 5, %540, !dbg !7161
  %sub50.i903 = sub nsw i32 %539, %mul49.i902, !dbg !7162
  %541 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7163
  %arrayidx51.i904 = getelementptr inbounds i32, i32* %541, i64 2, !dbg !7163
  store i32 %sub50.i903, i32* %arrayidx51.i904, align 4, !dbg !7164
  %542 = load i32, i32* %m46.i845, align 4, !dbg !7165
  store i32 %542, i32* %sf.addr.i837, align 4, !dbg !7166
  br label %if.end64.i917, !dbg !7167

if.else52.i907:                                   ; preds = %if.else43.i899
  %543 = load i32, i32* %n2.addr.i839, align 4, !dbg !7168
  %cmp53.i906 = icmp eq i32 %543, 6, !dbg !7169
  br i1 %cmp53.i906, label %if.then54.i913, label %if.else61.i915, !dbg !7168

if.then54.i913:                                   ; preds = %if.else52.i907
  %544 = load i32, i32* %sf.addr.i837, align 4, !dbg !7170
  %mul56.i908 = mul nsw i32 %544, 171, !dbg !7171
  %shr57.i909 = ashr i32 %mul56.i908, 10, !dbg !7172
  store i32 %shr57.i909, i32* %m55.i846, align 4, !dbg !7173
  %545 = load i32, i32* %sf.addr.i837, align 4, !dbg !7174
  %546 = load i32, i32* %m55.i846, align 4, !dbg !7175
  %mul58.i910 = mul nsw i32 6, %546, !dbg !7176
  %sub59.i911 = sub nsw i32 %545, %mul58.i910, !dbg !7177
  %547 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7178
  %arrayidx60.i912 = getelementptr inbounds i32, i32* %547, i64 2, !dbg !7178
  store i32 %sub59.i911, i32* %arrayidx60.i912, align 4, !dbg !7179
  %548 = load i32, i32* %m55.i846, align 4, !dbg !7180
  store i32 %548, i32* %sf.addr.i837, align 4, !dbg !7181
  br label %if.end63.i916, !dbg !7182

if.else61.i915:                                   ; preds = %if.else52.i907
  %549 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7183
  %arrayidx62.i914 = getelementptr inbounds i32, i32* %549, i64 2, !dbg !7183
  store i32 0, i32* %arrayidx62.i914, align 4, !dbg !7184
  br label %if.end63.i916, !dbg !7072

if.end63.i916:                                    ; preds = %if.else61.i915, %if.then54.i913
  br label %if.end64.i917, !dbg !7072

if.end64.i917:                                    ; preds = %if.end63.i916, %if.then45.i905
  br label %if.end65.i918, !dbg !7072

if.end65.i918:                                    ; preds = %if.end64.i917, %if.then39.i897
  br label %if.end66.i920, !dbg !7072

if.end66.i920:                                    ; preds = %if.end65.i918, %if.then30.i891
  %550 = load i32, i32* %n1.addr.i838, align 4, !dbg !7185
  %cmp67.i919 = icmp eq i32 %550, 3, !dbg !7186
  br i1 %cmp67.i919, label %if.then68.i926, label %if.else75.i928, !dbg !7187

if.then68.i926:                                   ; preds = %if.end66.i920
  %551 = load i32, i32* %sf.addr.i837, align 4, !dbg !7188
  %mul70.i921 = mul nsw i32 %551, 171, !dbg !7189
  %shr71.i922 = ashr i32 %mul70.i921, 9, !dbg !7190
  store i32 %shr71.i922, i32* %m69.i847, align 4, !dbg !7191
  %552 = load i32, i32* %sf.addr.i837, align 4, !dbg !7192
  %553 = load i32, i32* %m69.i847, align 4, !dbg !7193
  %mul72.i923 = mul nsw i32 3, %553, !dbg !7194
  %sub73.i924 = sub nsw i32 %552, %mul72.i923, !dbg !7195
  %554 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7196
  %arrayidx74.i925 = getelementptr inbounds i32, i32* %554, i64 1, !dbg !7196
  store i32 %sub73.i924, i32* %arrayidx74.i925, align 4, !dbg !7197
  %555 = load i32, i32* %m69.i847, align 4, !dbg !7198
  store i32 %555, i32* %sf.addr.i837, align 4, !dbg !7199
  br label %lsf_sf_expand.exit954, !dbg !7200

if.else75.i928:                                   ; preds = %if.end66.i920
  %556 = load i32, i32* %n1.addr.i838, align 4, !dbg !7201
  %cmp76.i927 = icmp eq i32 %556, 4, !dbg !7202
  br i1 %cmp76.i927, label %if.then77.i932, label %if.else81.i934, !dbg !7201

if.then77.i932:                                   ; preds = %if.else75.i928
  %557 = load i32, i32* %sf.addr.i837, align 4, !dbg !7203
  %and78.i929 = and i32 %557, 3, !dbg !7204
  %558 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7205
  %arrayidx79.i930 = getelementptr inbounds i32, i32* %558, i64 1, !dbg !7205
  store i32 %and78.i929, i32* %arrayidx79.i930, align 4, !dbg !7206
  %559 = load i32, i32* %sf.addr.i837, align 4, !dbg !7207
  %shr80.i931 = ashr i32 %559, 2, !dbg !7207
  store i32 %shr80.i931, i32* %sf.addr.i837, align 4, !dbg !7207
  br label %if.end103.i953, !dbg !7208

if.else81.i934:                                   ; preds = %if.else75.i928
  %560 = load i32, i32* %n1.addr.i838, align 4, !dbg !7209
  %cmp82.i933 = icmp eq i32 %560, 5, !dbg !7210
  br i1 %cmp82.i933, label %if.then83.i940, label %if.else90.i942, !dbg !7209

if.then83.i940:                                   ; preds = %if.else81.i934
  %561 = load i32, i32* %sf.addr.i837, align 4, !dbg !7211
  %mul85.i935 = mul nsw i32 %561, 205, !dbg !7212
  %shr86.i936 = ashr i32 %mul85.i935, 10, !dbg !7213
  store i32 %shr86.i936, i32* %m84.i848, align 4, !dbg !7214
  %562 = load i32, i32* %sf.addr.i837, align 4, !dbg !7215
  %563 = load i32, i32* %m84.i848, align 4, !dbg !7216
  %mul87.i937 = mul nsw i32 5, %563, !dbg !7217
  %sub88.i938 = sub nsw i32 %562, %mul87.i937, !dbg !7218
  %564 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7219
  %arrayidx89.i939 = getelementptr inbounds i32, i32* %564, i64 1, !dbg !7219
  store i32 %sub88.i938, i32* %arrayidx89.i939, align 4, !dbg !7220
  %565 = load i32, i32* %m84.i848, align 4, !dbg !7221
  store i32 %565, i32* %sf.addr.i837, align 4, !dbg !7222
  br label %if.end102.i952, !dbg !7223

if.else90.i942:                                   ; preds = %if.else81.i934
  %566 = load i32, i32* %n1.addr.i838, align 4, !dbg !7224
  %cmp91.i941 = icmp eq i32 %566, 6, !dbg !7225
  br i1 %cmp91.i941, label %if.then92.i948, label %if.else99.i950, !dbg !7224

if.then92.i948:                                   ; preds = %if.else90.i942
  %567 = load i32, i32* %sf.addr.i837, align 4, !dbg !7226
  %mul94.i943 = mul nsw i32 %567, 171, !dbg !7227
  %shr95.i944 = ashr i32 %mul94.i943, 10, !dbg !7228
  store i32 %shr95.i944, i32* %m93.i849, align 4, !dbg !7229
  %568 = load i32, i32* %sf.addr.i837, align 4, !dbg !7230
  %569 = load i32, i32* %m93.i849, align 4, !dbg !7231
  %mul96.i945 = mul nsw i32 6, %569, !dbg !7232
  %sub97.i946 = sub nsw i32 %568, %mul96.i945, !dbg !7233
  %570 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7234
  %arrayidx98.i947 = getelementptr inbounds i32, i32* %570, i64 1, !dbg !7234
  store i32 %sub97.i946, i32* %arrayidx98.i947, align 4, !dbg !7235
  %571 = load i32, i32* %m93.i849, align 4, !dbg !7236
  store i32 %571, i32* %sf.addr.i837, align 4, !dbg !7237
  br label %if.end101.i951, !dbg !7238

if.else99.i950:                                   ; preds = %if.else90.i942
  %572 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7239
  %arrayidx100.i949 = getelementptr inbounds i32, i32* %572, i64 1, !dbg !7239
  store i32 0, i32* %arrayidx100.i949, align 4, !dbg !7240
  br label %if.end101.i951, !dbg !7072

if.end101.i951:                                   ; preds = %if.else99.i950, %if.then92.i948
  br label %if.end102.i952, !dbg !7072

if.end102.i952:                                   ; preds = %if.end101.i951, %if.then83.i940
  br label %if.end103.i953, !dbg !7072

if.end103.i953:                                   ; preds = %if.end102.i952, %if.then77.i932
  br label %lsf_sf_expand.exit954, !dbg !7072

lsf_sf_expand.exit954:                            ; preds = %if.then68.i926, %if.end103.i953
  %573 = load i32, i32* %sf.addr.i837, align 4, !dbg !7241
  %574 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7242
  store i32 %573, i32* %574, align 4, !dbg !7243
  store i32 0, i32* %tindex2, align 4, !dbg !7244
  br label %if.end479, !dbg !7245

if.else468:                                       ; preds = %if.else463
  %575 = load i32, i32* %sf, align 4, !dbg !7246
  %cmp469 = icmp slt i32 %575, 500, !dbg !7248
  br i1 %cmp469, label %if.then471, label %if.else474, !dbg !7246

if.then471:                                       ; preds = %if.else468
  %arraydecay472 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !7249
  %576 = load i32, i32* %sf, align 4, !dbg !7250
  %sub473 = sub nsw i32 %576, 400, !dbg !7251
  store i32* %arraydecay472, i32** %slen.addr.i955, align 8, !dbg !7252
  store i32 %sub473, i32* %sf.addr.i956, align 4, !dbg !7252
  store i32 5, i32* %n1.addr.i957, align 4, !dbg !7252
  store i32 4, i32* %n2.addr.i958, align 4, !dbg !7252
  store i32 0, i32* %n3.addr.i959, align 4, !dbg !7252
  %577 = load i32, i32* %n3.addr.i959, align 4, !dbg !7253
  %cmp.i969 = icmp eq i32 %577, 3, !dbg !7254
  br i1 %cmp.i969, label %if.then.i975, label %if.else.i977, !dbg !7255

if.then.i975:                                     ; preds = %if.then471
  %578 = load i32, i32* %sf.addr.i956, align 4, !dbg !7256
  %mul.i970 = mul nsw i32 %578, 171, !dbg !7257
  %shr.i971 = ashr i32 %mul.i970, 9, !dbg !7258
  store i32 %shr.i971, i32* %m.i960, align 4, !dbg !7259
  %579 = load i32, i32* %sf.addr.i956, align 4, !dbg !7260
  %580 = load i32, i32* %m.i960, align 4, !dbg !7261
  %mul1.i972 = mul nsw i32 3, %580, !dbg !7262
  %sub.i973 = sub nsw i32 %579, %mul1.i972, !dbg !7263
  %581 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7264
  %arrayidx.i974 = getelementptr inbounds i32, i32* %581, i64 3, !dbg !7264
  store i32 %sub.i973, i32* %arrayidx.i974, align 4, !dbg !7265
  %582 = load i32, i32* %m.i960, align 4, !dbg !7266
  store i32 %582, i32* %sf.addr.i956, align 4, !dbg !7267
  br label %if.end28.i1004, !dbg !7268

if.else.i977:                                     ; preds = %if.then471
  %583 = load i32, i32* %n3.addr.i959, align 4, !dbg !7269
  %cmp2.i976 = icmp eq i32 %583, 4, !dbg !7270
  br i1 %cmp2.i976, label %if.then3.i981, label %if.else6.i983, !dbg !7269

if.then3.i981:                                    ; preds = %if.else.i977
  %584 = load i32, i32* %sf.addr.i956, align 4, !dbg !7271
  %and.i978 = and i32 %584, 3, !dbg !7272
  %585 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7273
  %arrayidx4.i979 = getelementptr inbounds i32, i32* %585, i64 3, !dbg !7273
  store i32 %and.i978, i32* %arrayidx4.i979, align 4, !dbg !7274
  %586 = load i32, i32* %sf.addr.i956, align 4, !dbg !7275
  %shr5.i980 = ashr i32 %586, 2, !dbg !7275
  store i32 %shr5.i980, i32* %sf.addr.i956, align 4, !dbg !7275
  br label %if.end27.i1002, !dbg !7276

if.else6.i983:                                    ; preds = %if.else.i977
  %587 = load i32, i32* %n3.addr.i959, align 4, !dbg !7277
  %cmp7.i982 = icmp eq i32 %587, 5, !dbg !7278
  br i1 %cmp7.i982, label %if.then8.i989, label %if.else15.i991, !dbg !7277

if.then8.i989:                                    ; preds = %if.else6.i983
  %588 = load i32, i32* %sf.addr.i956, align 4, !dbg !7279
  %mul10.i984 = mul nsw i32 %588, 205, !dbg !7280
  %shr11.i985 = ashr i32 %mul10.i984, 10, !dbg !7281
  store i32 %shr11.i985, i32* %m9.i961, align 4, !dbg !7282
  %589 = load i32, i32* %sf.addr.i956, align 4, !dbg !7283
  %590 = load i32, i32* %m9.i961, align 4, !dbg !7284
  %mul12.i986 = mul nsw i32 5, %590, !dbg !7285
  %sub13.i987 = sub nsw i32 %589, %mul12.i986, !dbg !7286
  %591 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7287
  %arrayidx14.i988 = getelementptr inbounds i32, i32* %591, i64 3, !dbg !7287
  store i32 %sub13.i987, i32* %arrayidx14.i988, align 4, !dbg !7288
  %592 = load i32, i32* %m9.i961, align 4, !dbg !7289
  store i32 %592, i32* %sf.addr.i956, align 4, !dbg !7290
  br label %if.end26.i1001, !dbg !7291

if.else15.i991:                                   ; preds = %if.else6.i983
  %593 = load i32, i32* %n3.addr.i959, align 4, !dbg !7292
  %cmp16.i990 = icmp eq i32 %593, 6, !dbg !7293
  br i1 %cmp16.i990, label %if.then17.i997, label %if.else24.i999, !dbg !7292

if.then17.i997:                                   ; preds = %if.else15.i991
  %594 = load i32, i32* %sf.addr.i956, align 4, !dbg !7294
  %mul19.i992 = mul nsw i32 %594, 171, !dbg !7295
  %shr20.i993 = ashr i32 %mul19.i992, 10, !dbg !7296
  store i32 %shr20.i993, i32* %m18.i962, align 4, !dbg !7297
  %595 = load i32, i32* %sf.addr.i956, align 4, !dbg !7298
  %596 = load i32, i32* %m18.i962, align 4, !dbg !7299
  %mul21.i994 = mul nsw i32 6, %596, !dbg !7300
  %sub22.i995 = sub nsw i32 %595, %mul21.i994, !dbg !7301
  %597 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7302
  %arrayidx23.i996 = getelementptr inbounds i32, i32* %597, i64 3, !dbg !7302
  store i32 %sub22.i995, i32* %arrayidx23.i996, align 4, !dbg !7303
  %598 = load i32, i32* %m18.i962, align 4, !dbg !7304
  store i32 %598, i32* %sf.addr.i956, align 4, !dbg !7305
  br label %if.end.i1000, !dbg !7306

if.else24.i999:                                   ; preds = %if.else15.i991
  %599 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7307
  %arrayidx25.i998 = getelementptr inbounds i32, i32* %599, i64 3, !dbg !7307
  store i32 0, i32* %arrayidx25.i998, align 4, !dbg !7308
  br label %if.end.i1000, !dbg !7252

if.end.i1000:                                     ; preds = %if.else24.i999, %if.then17.i997
  br label %if.end26.i1001, !dbg !7252

if.end26.i1001:                                   ; preds = %if.end.i1000, %if.then8.i989
  br label %if.end27.i1002, !dbg !7252

if.end27.i1002:                                   ; preds = %if.end26.i1001, %if.then3.i981
  br label %if.end28.i1004, !dbg !7252

if.end28.i1004:                                   ; preds = %if.end27.i1002, %if.then.i975
  %600 = load i32, i32* %n2.addr.i958, align 4, !dbg !7309
  %cmp29.i1003 = icmp eq i32 %600, 3, !dbg !7310
  br i1 %cmp29.i1003, label %if.then30.i1010, label %if.else37.i1012, !dbg !7311

if.then30.i1010:                                  ; preds = %if.end28.i1004
  %601 = load i32, i32* %sf.addr.i956, align 4, !dbg !7312
  %mul32.i1005 = mul nsw i32 %601, 171, !dbg !7313
  %shr33.i1006 = ashr i32 %mul32.i1005, 9, !dbg !7314
  store i32 %shr33.i1006, i32* %m31.i963, align 4, !dbg !7315
  %602 = load i32, i32* %sf.addr.i956, align 4, !dbg !7316
  %603 = load i32, i32* %m31.i963, align 4, !dbg !7317
  %mul34.i1007 = mul nsw i32 3, %603, !dbg !7318
  %sub35.i1008 = sub nsw i32 %602, %mul34.i1007, !dbg !7319
  %604 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7320
  %arrayidx36.i1009 = getelementptr inbounds i32, i32* %604, i64 2, !dbg !7320
  store i32 %sub35.i1008, i32* %arrayidx36.i1009, align 4, !dbg !7321
  %605 = load i32, i32* %m31.i963, align 4, !dbg !7322
  store i32 %605, i32* %sf.addr.i956, align 4, !dbg !7323
  br label %if.end66.i1039, !dbg !7324

if.else37.i1012:                                  ; preds = %if.end28.i1004
  %606 = load i32, i32* %n2.addr.i958, align 4, !dbg !7325
  %cmp38.i1011 = icmp eq i32 %606, 4, !dbg !7326
  br i1 %cmp38.i1011, label %if.then39.i1016, label %if.else43.i1018, !dbg !7325

if.then39.i1016:                                  ; preds = %if.else37.i1012
  %607 = load i32, i32* %sf.addr.i956, align 4, !dbg !7327
  %and40.i1013 = and i32 %607, 3, !dbg !7328
  %608 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7329
  %arrayidx41.i1014 = getelementptr inbounds i32, i32* %608, i64 2, !dbg !7329
  store i32 %and40.i1013, i32* %arrayidx41.i1014, align 4, !dbg !7330
  %609 = load i32, i32* %sf.addr.i956, align 4, !dbg !7331
  %shr42.i1015 = ashr i32 %609, 2, !dbg !7331
  store i32 %shr42.i1015, i32* %sf.addr.i956, align 4, !dbg !7331
  br label %if.end65.i1037, !dbg !7332

if.else43.i1018:                                  ; preds = %if.else37.i1012
  %610 = load i32, i32* %n2.addr.i958, align 4, !dbg !7333
  %cmp44.i1017 = icmp eq i32 %610, 5, !dbg !7334
  br i1 %cmp44.i1017, label %if.then45.i1024, label %if.else52.i1026, !dbg !7333

if.then45.i1024:                                  ; preds = %if.else43.i1018
  %611 = load i32, i32* %sf.addr.i956, align 4, !dbg !7335
  %mul47.i1019 = mul nsw i32 %611, 205, !dbg !7336
  %shr48.i1020 = ashr i32 %mul47.i1019, 10, !dbg !7337
  store i32 %shr48.i1020, i32* %m46.i964, align 4, !dbg !7338
  %612 = load i32, i32* %sf.addr.i956, align 4, !dbg !7339
  %613 = load i32, i32* %m46.i964, align 4, !dbg !7340
  %mul49.i1021 = mul nsw i32 5, %613, !dbg !7341
  %sub50.i1022 = sub nsw i32 %612, %mul49.i1021, !dbg !7342
  %614 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7343
  %arrayidx51.i1023 = getelementptr inbounds i32, i32* %614, i64 2, !dbg !7343
  store i32 %sub50.i1022, i32* %arrayidx51.i1023, align 4, !dbg !7344
  %615 = load i32, i32* %m46.i964, align 4, !dbg !7345
  store i32 %615, i32* %sf.addr.i956, align 4, !dbg !7346
  br label %if.end64.i1036, !dbg !7347

if.else52.i1026:                                  ; preds = %if.else43.i1018
  %616 = load i32, i32* %n2.addr.i958, align 4, !dbg !7348
  %cmp53.i1025 = icmp eq i32 %616, 6, !dbg !7349
  br i1 %cmp53.i1025, label %if.then54.i1032, label %if.else61.i1034, !dbg !7348

if.then54.i1032:                                  ; preds = %if.else52.i1026
  %617 = load i32, i32* %sf.addr.i956, align 4, !dbg !7350
  %mul56.i1027 = mul nsw i32 %617, 171, !dbg !7351
  %shr57.i1028 = ashr i32 %mul56.i1027, 10, !dbg !7352
  store i32 %shr57.i1028, i32* %m55.i965, align 4, !dbg !7353
  %618 = load i32, i32* %sf.addr.i956, align 4, !dbg !7354
  %619 = load i32, i32* %m55.i965, align 4, !dbg !7355
  %mul58.i1029 = mul nsw i32 6, %619, !dbg !7356
  %sub59.i1030 = sub nsw i32 %618, %mul58.i1029, !dbg !7357
  %620 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7358
  %arrayidx60.i1031 = getelementptr inbounds i32, i32* %620, i64 2, !dbg !7358
  store i32 %sub59.i1030, i32* %arrayidx60.i1031, align 4, !dbg !7359
  %621 = load i32, i32* %m55.i965, align 4, !dbg !7360
  store i32 %621, i32* %sf.addr.i956, align 4, !dbg !7361
  br label %if.end63.i1035, !dbg !7362

if.else61.i1034:                                  ; preds = %if.else52.i1026
  %622 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7363
  %arrayidx62.i1033 = getelementptr inbounds i32, i32* %622, i64 2, !dbg !7363
  store i32 0, i32* %arrayidx62.i1033, align 4, !dbg !7364
  br label %if.end63.i1035, !dbg !7252

if.end63.i1035:                                   ; preds = %if.else61.i1034, %if.then54.i1032
  br label %if.end64.i1036, !dbg !7252

if.end64.i1036:                                   ; preds = %if.end63.i1035, %if.then45.i1024
  br label %if.end65.i1037, !dbg !7252

if.end65.i1037:                                   ; preds = %if.end64.i1036, %if.then39.i1016
  br label %if.end66.i1039, !dbg !7252

if.end66.i1039:                                   ; preds = %if.end65.i1037, %if.then30.i1010
  %623 = load i32, i32* %n1.addr.i957, align 4, !dbg !7365
  %cmp67.i1038 = icmp eq i32 %623, 3, !dbg !7366
  br i1 %cmp67.i1038, label %if.then68.i1045, label %if.else75.i1047, !dbg !7367

if.then68.i1045:                                  ; preds = %if.end66.i1039
  %624 = load i32, i32* %sf.addr.i956, align 4, !dbg !7368
  %mul70.i1040 = mul nsw i32 %624, 171, !dbg !7369
  %shr71.i1041 = ashr i32 %mul70.i1040, 9, !dbg !7370
  store i32 %shr71.i1041, i32* %m69.i966, align 4, !dbg !7371
  %625 = load i32, i32* %sf.addr.i956, align 4, !dbg !7372
  %626 = load i32, i32* %m69.i966, align 4, !dbg !7373
  %mul72.i1042 = mul nsw i32 3, %626, !dbg !7374
  %sub73.i1043 = sub nsw i32 %625, %mul72.i1042, !dbg !7375
  %627 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7376
  %arrayidx74.i1044 = getelementptr inbounds i32, i32* %627, i64 1, !dbg !7376
  store i32 %sub73.i1043, i32* %arrayidx74.i1044, align 4, !dbg !7377
  %628 = load i32, i32* %m69.i966, align 4, !dbg !7378
  store i32 %628, i32* %sf.addr.i956, align 4, !dbg !7379
  br label %lsf_sf_expand.exit1073, !dbg !7380

if.else75.i1047:                                  ; preds = %if.end66.i1039
  %629 = load i32, i32* %n1.addr.i957, align 4, !dbg !7381
  %cmp76.i1046 = icmp eq i32 %629, 4, !dbg !7382
  br i1 %cmp76.i1046, label %if.then77.i1051, label %if.else81.i1053, !dbg !7381

if.then77.i1051:                                  ; preds = %if.else75.i1047
  %630 = load i32, i32* %sf.addr.i956, align 4, !dbg !7383
  %and78.i1048 = and i32 %630, 3, !dbg !7384
  %631 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7385
  %arrayidx79.i1049 = getelementptr inbounds i32, i32* %631, i64 1, !dbg !7385
  store i32 %and78.i1048, i32* %arrayidx79.i1049, align 4, !dbg !7386
  %632 = load i32, i32* %sf.addr.i956, align 4, !dbg !7387
  %shr80.i1050 = ashr i32 %632, 2, !dbg !7387
  store i32 %shr80.i1050, i32* %sf.addr.i956, align 4, !dbg !7387
  br label %if.end103.i1072, !dbg !7388

if.else81.i1053:                                  ; preds = %if.else75.i1047
  %633 = load i32, i32* %n1.addr.i957, align 4, !dbg !7389
  %cmp82.i1052 = icmp eq i32 %633, 5, !dbg !7390
  br i1 %cmp82.i1052, label %if.then83.i1059, label %if.else90.i1061, !dbg !7389

if.then83.i1059:                                  ; preds = %if.else81.i1053
  %634 = load i32, i32* %sf.addr.i956, align 4, !dbg !7391
  %mul85.i1054 = mul nsw i32 %634, 205, !dbg !7392
  %shr86.i1055 = ashr i32 %mul85.i1054, 10, !dbg !7393
  store i32 %shr86.i1055, i32* %m84.i967, align 4, !dbg !7394
  %635 = load i32, i32* %sf.addr.i956, align 4, !dbg !7395
  %636 = load i32, i32* %m84.i967, align 4, !dbg !7396
  %mul87.i1056 = mul nsw i32 5, %636, !dbg !7397
  %sub88.i1057 = sub nsw i32 %635, %mul87.i1056, !dbg !7398
  %637 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7399
  %arrayidx89.i1058 = getelementptr inbounds i32, i32* %637, i64 1, !dbg !7399
  store i32 %sub88.i1057, i32* %arrayidx89.i1058, align 4, !dbg !7400
  %638 = load i32, i32* %m84.i967, align 4, !dbg !7401
  store i32 %638, i32* %sf.addr.i956, align 4, !dbg !7402
  br label %if.end102.i1071, !dbg !7403

if.else90.i1061:                                  ; preds = %if.else81.i1053
  %639 = load i32, i32* %n1.addr.i957, align 4, !dbg !7404
  %cmp91.i1060 = icmp eq i32 %639, 6, !dbg !7405
  br i1 %cmp91.i1060, label %if.then92.i1067, label %if.else99.i1069, !dbg !7404

if.then92.i1067:                                  ; preds = %if.else90.i1061
  %640 = load i32, i32* %sf.addr.i956, align 4, !dbg !7406
  %mul94.i1062 = mul nsw i32 %640, 171, !dbg !7407
  %shr95.i1063 = ashr i32 %mul94.i1062, 10, !dbg !7408
  store i32 %shr95.i1063, i32* %m93.i968, align 4, !dbg !7409
  %641 = load i32, i32* %sf.addr.i956, align 4, !dbg !7410
  %642 = load i32, i32* %m93.i968, align 4, !dbg !7411
  %mul96.i1064 = mul nsw i32 6, %642, !dbg !7412
  %sub97.i1065 = sub nsw i32 %641, %mul96.i1064, !dbg !7413
  %643 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7414
  %arrayidx98.i1066 = getelementptr inbounds i32, i32* %643, i64 1, !dbg !7414
  store i32 %sub97.i1065, i32* %arrayidx98.i1066, align 4, !dbg !7415
  %644 = load i32, i32* %m93.i968, align 4, !dbg !7416
  store i32 %644, i32* %sf.addr.i956, align 4, !dbg !7417
  br label %if.end101.i1070, !dbg !7418

if.else99.i1069:                                  ; preds = %if.else90.i1061
  %645 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7419
  %arrayidx100.i1068 = getelementptr inbounds i32, i32* %645, i64 1, !dbg !7419
  store i32 0, i32* %arrayidx100.i1068, align 4, !dbg !7420
  br label %if.end101.i1070, !dbg !7252

if.end101.i1070:                                  ; preds = %if.else99.i1069, %if.then92.i1067
  br label %if.end102.i1071, !dbg !7252

if.end102.i1071:                                  ; preds = %if.end101.i1070, %if.then83.i1059
  br label %if.end103.i1072, !dbg !7252

if.end103.i1072:                                  ; preds = %if.end102.i1071, %if.then77.i1051
  br label %lsf_sf_expand.exit1073, !dbg !7252

lsf_sf_expand.exit1073:                           ; preds = %if.then68.i1045, %if.end103.i1072
  %646 = load i32, i32* %sf.addr.i956, align 4, !dbg !7421
  %647 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7422
  store i32 %646, i32* %647, align 4, !dbg !7423
  store i32 1, i32* %tindex2, align 4, !dbg !7424
  br label %if.end478, !dbg !7425

if.else474:                                       ; preds = %if.else468
  %arraydecay475 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !7426
  %648 = load i32, i32* %sf, align 4, !dbg !7427
  %sub476 = sub nsw i32 %648, 500, !dbg !7428
  store i32* %arraydecay475, i32** %slen.addr.i1074, align 8, !dbg !7429
  store i32 %sub476, i32* %sf.addr.i1075, align 4, !dbg !7429
  store i32 3, i32* %n1.addr.i1076, align 4, !dbg !7429
  store i32 0, i32* %n2.addr.i1077, align 4, !dbg !7429
  store i32 0, i32* %n3.addr.i1078, align 4, !dbg !7429
  %649 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7430
  %cmp.i1088 = icmp eq i32 %649, 3, !dbg !7431
  br i1 %cmp.i1088, label %if.then.i1094, label %if.else.i1096, !dbg !7432

if.then.i1094:                                    ; preds = %if.else474
  %650 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7433
  %mul.i1089 = mul nsw i32 %650, 171, !dbg !7434
  %shr.i1090 = ashr i32 %mul.i1089, 9, !dbg !7435
  store i32 %shr.i1090, i32* %m.i1079, align 4, !dbg !7436
  %651 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7437
  %652 = load i32, i32* %m.i1079, align 4, !dbg !7438
  %mul1.i1091 = mul nsw i32 3, %652, !dbg !7439
  %sub.i1092 = sub nsw i32 %651, %mul1.i1091, !dbg !7440
  %653 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7441
  %arrayidx.i1093 = getelementptr inbounds i32, i32* %653, i64 3, !dbg !7441
  store i32 %sub.i1092, i32* %arrayidx.i1093, align 4, !dbg !7442
  %654 = load i32, i32* %m.i1079, align 4, !dbg !7443
  store i32 %654, i32* %sf.addr.i1075, align 4, !dbg !7444
  br label %if.end28.i1123, !dbg !7445

if.else.i1096:                                    ; preds = %if.else474
  %655 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7446
  %cmp2.i1095 = icmp eq i32 %655, 4, !dbg !7447
  br i1 %cmp2.i1095, label %if.then3.i1100, label %if.else6.i1102, !dbg !7446

if.then3.i1100:                                   ; preds = %if.else.i1096
  %656 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7448
  %and.i1097 = and i32 %656, 3, !dbg !7449
  %657 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7450
  %arrayidx4.i1098 = getelementptr inbounds i32, i32* %657, i64 3, !dbg !7450
  store i32 %and.i1097, i32* %arrayidx4.i1098, align 4, !dbg !7451
  %658 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7452
  %shr5.i1099 = ashr i32 %658, 2, !dbg !7452
  store i32 %shr5.i1099, i32* %sf.addr.i1075, align 4, !dbg !7452
  br label %if.end27.i1121, !dbg !7453

if.else6.i1102:                                   ; preds = %if.else.i1096
  %659 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7454
  %cmp7.i1101 = icmp eq i32 %659, 5, !dbg !7455
  br i1 %cmp7.i1101, label %if.then8.i1108, label %if.else15.i1110, !dbg !7454

if.then8.i1108:                                   ; preds = %if.else6.i1102
  %660 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7456
  %mul10.i1103 = mul nsw i32 %660, 205, !dbg !7457
  %shr11.i1104 = ashr i32 %mul10.i1103, 10, !dbg !7458
  store i32 %shr11.i1104, i32* %m9.i1080, align 4, !dbg !7459
  %661 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7460
  %662 = load i32, i32* %m9.i1080, align 4, !dbg !7461
  %mul12.i1105 = mul nsw i32 5, %662, !dbg !7462
  %sub13.i1106 = sub nsw i32 %661, %mul12.i1105, !dbg !7463
  %663 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7464
  %arrayidx14.i1107 = getelementptr inbounds i32, i32* %663, i64 3, !dbg !7464
  store i32 %sub13.i1106, i32* %arrayidx14.i1107, align 4, !dbg !7465
  %664 = load i32, i32* %m9.i1080, align 4, !dbg !7466
  store i32 %664, i32* %sf.addr.i1075, align 4, !dbg !7467
  br label %if.end26.i1120, !dbg !7468

if.else15.i1110:                                  ; preds = %if.else6.i1102
  %665 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7469
  %cmp16.i1109 = icmp eq i32 %665, 6, !dbg !7470
  br i1 %cmp16.i1109, label %if.then17.i1116, label %if.else24.i1118, !dbg !7469

if.then17.i1116:                                  ; preds = %if.else15.i1110
  %666 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7471
  %mul19.i1111 = mul nsw i32 %666, 171, !dbg !7472
  %shr20.i1112 = ashr i32 %mul19.i1111, 10, !dbg !7473
  store i32 %shr20.i1112, i32* %m18.i1081, align 4, !dbg !7474
  %667 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7475
  %668 = load i32, i32* %m18.i1081, align 4, !dbg !7476
  %mul21.i1113 = mul nsw i32 6, %668, !dbg !7477
  %sub22.i1114 = sub nsw i32 %667, %mul21.i1113, !dbg !7478
  %669 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7479
  %arrayidx23.i1115 = getelementptr inbounds i32, i32* %669, i64 3, !dbg !7479
  store i32 %sub22.i1114, i32* %arrayidx23.i1115, align 4, !dbg !7480
  %670 = load i32, i32* %m18.i1081, align 4, !dbg !7481
  store i32 %670, i32* %sf.addr.i1075, align 4, !dbg !7482
  br label %if.end.i1119, !dbg !7483

if.else24.i1118:                                  ; preds = %if.else15.i1110
  %671 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7484
  %arrayidx25.i1117 = getelementptr inbounds i32, i32* %671, i64 3, !dbg !7484
  store i32 0, i32* %arrayidx25.i1117, align 4, !dbg !7485
  br label %if.end.i1119, !dbg !7429

if.end.i1119:                                     ; preds = %if.else24.i1118, %if.then17.i1116
  br label %if.end26.i1120, !dbg !7429

if.end26.i1120:                                   ; preds = %if.end.i1119, %if.then8.i1108
  br label %if.end27.i1121, !dbg !7429

if.end27.i1121:                                   ; preds = %if.end26.i1120, %if.then3.i1100
  br label %if.end28.i1123, !dbg !7429

if.end28.i1123:                                   ; preds = %if.end27.i1121, %if.then.i1094
  %672 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7486
  %cmp29.i1122 = icmp eq i32 %672, 3, !dbg !7487
  br i1 %cmp29.i1122, label %if.then30.i1129, label %if.else37.i1131, !dbg !7488

if.then30.i1129:                                  ; preds = %if.end28.i1123
  %673 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7489
  %mul32.i1124 = mul nsw i32 %673, 171, !dbg !7490
  %shr33.i1125 = ashr i32 %mul32.i1124, 9, !dbg !7491
  store i32 %shr33.i1125, i32* %m31.i1082, align 4, !dbg !7492
  %674 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7493
  %675 = load i32, i32* %m31.i1082, align 4, !dbg !7494
  %mul34.i1126 = mul nsw i32 3, %675, !dbg !7495
  %sub35.i1127 = sub nsw i32 %674, %mul34.i1126, !dbg !7496
  %676 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7497
  %arrayidx36.i1128 = getelementptr inbounds i32, i32* %676, i64 2, !dbg !7497
  store i32 %sub35.i1127, i32* %arrayidx36.i1128, align 4, !dbg !7498
  %677 = load i32, i32* %m31.i1082, align 4, !dbg !7499
  store i32 %677, i32* %sf.addr.i1075, align 4, !dbg !7500
  br label %if.end66.i1158, !dbg !7501

if.else37.i1131:                                  ; preds = %if.end28.i1123
  %678 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7502
  %cmp38.i1130 = icmp eq i32 %678, 4, !dbg !7503
  br i1 %cmp38.i1130, label %if.then39.i1135, label %if.else43.i1137, !dbg !7502

if.then39.i1135:                                  ; preds = %if.else37.i1131
  %679 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7504
  %and40.i1132 = and i32 %679, 3, !dbg !7505
  %680 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7506
  %arrayidx41.i1133 = getelementptr inbounds i32, i32* %680, i64 2, !dbg !7506
  store i32 %and40.i1132, i32* %arrayidx41.i1133, align 4, !dbg !7507
  %681 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7508
  %shr42.i1134 = ashr i32 %681, 2, !dbg !7508
  store i32 %shr42.i1134, i32* %sf.addr.i1075, align 4, !dbg !7508
  br label %if.end65.i1156, !dbg !7509

if.else43.i1137:                                  ; preds = %if.else37.i1131
  %682 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7510
  %cmp44.i1136 = icmp eq i32 %682, 5, !dbg !7511
  br i1 %cmp44.i1136, label %if.then45.i1143, label %if.else52.i1145, !dbg !7510

if.then45.i1143:                                  ; preds = %if.else43.i1137
  %683 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7512
  %mul47.i1138 = mul nsw i32 %683, 205, !dbg !7513
  %shr48.i1139 = ashr i32 %mul47.i1138, 10, !dbg !7514
  store i32 %shr48.i1139, i32* %m46.i1083, align 4, !dbg !7515
  %684 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7516
  %685 = load i32, i32* %m46.i1083, align 4, !dbg !7517
  %mul49.i1140 = mul nsw i32 5, %685, !dbg !7518
  %sub50.i1141 = sub nsw i32 %684, %mul49.i1140, !dbg !7519
  %686 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7520
  %arrayidx51.i1142 = getelementptr inbounds i32, i32* %686, i64 2, !dbg !7520
  store i32 %sub50.i1141, i32* %arrayidx51.i1142, align 4, !dbg !7521
  %687 = load i32, i32* %m46.i1083, align 4, !dbg !7522
  store i32 %687, i32* %sf.addr.i1075, align 4, !dbg !7523
  br label %if.end64.i1155, !dbg !7524

if.else52.i1145:                                  ; preds = %if.else43.i1137
  %688 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7525
  %cmp53.i1144 = icmp eq i32 %688, 6, !dbg !7526
  br i1 %cmp53.i1144, label %if.then54.i1151, label %if.else61.i1153, !dbg !7525

if.then54.i1151:                                  ; preds = %if.else52.i1145
  %689 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7527
  %mul56.i1146 = mul nsw i32 %689, 171, !dbg !7528
  %shr57.i1147 = ashr i32 %mul56.i1146, 10, !dbg !7529
  store i32 %shr57.i1147, i32* %m55.i1084, align 4, !dbg !7530
  %690 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7531
  %691 = load i32, i32* %m55.i1084, align 4, !dbg !7532
  %mul58.i1148 = mul nsw i32 6, %691, !dbg !7533
  %sub59.i1149 = sub nsw i32 %690, %mul58.i1148, !dbg !7534
  %692 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7535
  %arrayidx60.i1150 = getelementptr inbounds i32, i32* %692, i64 2, !dbg !7535
  store i32 %sub59.i1149, i32* %arrayidx60.i1150, align 4, !dbg !7536
  %693 = load i32, i32* %m55.i1084, align 4, !dbg !7537
  store i32 %693, i32* %sf.addr.i1075, align 4, !dbg !7538
  br label %if.end63.i1154, !dbg !7539

if.else61.i1153:                                  ; preds = %if.else52.i1145
  %694 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7540
  %arrayidx62.i1152 = getelementptr inbounds i32, i32* %694, i64 2, !dbg !7540
  store i32 0, i32* %arrayidx62.i1152, align 4, !dbg !7541
  br label %if.end63.i1154, !dbg !7429

if.end63.i1154:                                   ; preds = %if.else61.i1153, %if.then54.i1151
  br label %if.end64.i1155, !dbg !7429

if.end64.i1155:                                   ; preds = %if.end63.i1154, %if.then45.i1143
  br label %if.end65.i1156, !dbg !7429

if.end65.i1156:                                   ; preds = %if.end64.i1155, %if.then39.i1135
  br label %if.end66.i1158, !dbg !7429

if.end66.i1158:                                   ; preds = %if.end65.i1156, %if.then30.i1129
  %695 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7542
  %cmp67.i1157 = icmp eq i32 %695, 3, !dbg !7543
  br i1 %cmp67.i1157, label %if.then68.i1164, label %if.else75.i1166, !dbg !7544

if.then68.i1164:                                  ; preds = %if.end66.i1158
  %696 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7545
  %mul70.i1159 = mul nsw i32 %696, 171, !dbg !7546
  %shr71.i1160 = ashr i32 %mul70.i1159, 9, !dbg !7547
  store i32 %shr71.i1160, i32* %m69.i1085, align 4, !dbg !7548
  %697 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7549
  %698 = load i32, i32* %m69.i1085, align 4, !dbg !7550
  %mul72.i1161 = mul nsw i32 3, %698, !dbg !7551
  %sub73.i1162 = sub nsw i32 %697, %mul72.i1161, !dbg !7552
  %699 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7553
  %arrayidx74.i1163 = getelementptr inbounds i32, i32* %699, i64 1, !dbg !7553
  store i32 %sub73.i1162, i32* %arrayidx74.i1163, align 4, !dbg !7554
  %700 = load i32, i32* %m69.i1085, align 4, !dbg !7555
  store i32 %700, i32* %sf.addr.i1075, align 4, !dbg !7556
  br label %lsf_sf_expand.exit1192, !dbg !7557

if.else75.i1166:                                  ; preds = %if.end66.i1158
  %701 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7558
  %cmp76.i1165 = icmp eq i32 %701, 4, !dbg !7559
  br i1 %cmp76.i1165, label %if.then77.i1170, label %if.else81.i1172, !dbg !7558

if.then77.i1170:                                  ; preds = %if.else75.i1166
  %702 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7560
  %and78.i1167 = and i32 %702, 3, !dbg !7561
  %703 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7562
  %arrayidx79.i1168 = getelementptr inbounds i32, i32* %703, i64 1, !dbg !7562
  store i32 %and78.i1167, i32* %arrayidx79.i1168, align 4, !dbg !7563
  %704 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7564
  %shr80.i1169 = ashr i32 %704, 2, !dbg !7564
  store i32 %shr80.i1169, i32* %sf.addr.i1075, align 4, !dbg !7564
  br label %if.end103.i1191, !dbg !7565

if.else81.i1172:                                  ; preds = %if.else75.i1166
  %705 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7566
  %cmp82.i1171 = icmp eq i32 %705, 5, !dbg !7567
  br i1 %cmp82.i1171, label %if.then83.i1178, label %if.else90.i1180, !dbg !7566

if.then83.i1178:                                  ; preds = %if.else81.i1172
  %706 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7568
  %mul85.i1173 = mul nsw i32 %706, 205, !dbg !7569
  %shr86.i1174 = ashr i32 %mul85.i1173, 10, !dbg !7570
  store i32 %shr86.i1174, i32* %m84.i1086, align 4, !dbg !7571
  %707 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7572
  %708 = load i32, i32* %m84.i1086, align 4, !dbg !7573
  %mul87.i1175 = mul nsw i32 5, %708, !dbg !7574
  %sub88.i1176 = sub nsw i32 %707, %mul87.i1175, !dbg !7575
  %709 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7576
  %arrayidx89.i1177 = getelementptr inbounds i32, i32* %709, i64 1, !dbg !7576
  store i32 %sub88.i1176, i32* %arrayidx89.i1177, align 4, !dbg !7577
  %710 = load i32, i32* %m84.i1086, align 4, !dbg !7578
  store i32 %710, i32* %sf.addr.i1075, align 4, !dbg !7579
  br label %if.end102.i1190, !dbg !7580

if.else90.i1180:                                  ; preds = %if.else81.i1172
  %711 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7581
  %cmp91.i1179 = icmp eq i32 %711, 6, !dbg !7582
  br i1 %cmp91.i1179, label %if.then92.i1186, label %if.else99.i1188, !dbg !7581

if.then92.i1186:                                  ; preds = %if.else90.i1180
  %712 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7583
  %mul94.i1181 = mul nsw i32 %712, 171, !dbg !7584
  %shr95.i1182 = ashr i32 %mul94.i1181, 10, !dbg !7585
  store i32 %shr95.i1182, i32* %m93.i1087, align 4, !dbg !7586
  %713 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7587
  %714 = load i32, i32* %m93.i1087, align 4, !dbg !7588
  %mul96.i1183 = mul nsw i32 6, %714, !dbg !7589
  %sub97.i1184 = sub nsw i32 %713, %mul96.i1183, !dbg !7590
  %715 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7591
  %arrayidx98.i1185 = getelementptr inbounds i32, i32* %715, i64 1, !dbg !7591
  store i32 %sub97.i1184, i32* %arrayidx98.i1185, align 4, !dbg !7592
  %716 = load i32, i32* %m93.i1087, align 4, !dbg !7593
  store i32 %716, i32* %sf.addr.i1075, align 4, !dbg !7594
  br label %if.end101.i1189, !dbg !7595

if.else99.i1188:                                  ; preds = %if.else90.i1180
  %717 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7596
  %arrayidx100.i1187 = getelementptr inbounds i32, i32* %717, i64 1, !dbg !7596
  store i32 0, i32* %arrayidx100.i1187, align 4, !dbg !7597
  br label %if.end101.i1189, !dbg !7429

if.end101.i1189:                                  ; preds = %if.else99.i1188, %if.then92.i1186
  br label %if.end102.i1190, !dbg !7429

if.end102.i1190:                                  ; preds = %if.end101.i1189, %if.then83.i1178
  br label %if.end103.i1191, !dbg !7429

if.end103.i1191:                                  ; preds = %if.end102.i1190, %if.then77.i1170
  br label %lsf_sf_expand.exit1192, !dbg !7429

lsf_sf_expand.exit1192:                           ; preds = %if.then68.i1164, %if.end103.i1191
  %718 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7598
  %719 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7599
  store i32 %718, i32* %719, align 4, !dbg !7600
  store i32 2, i32* %tindex2, align 4, !dbg !7601
  %720 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7602
  %preflag477 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %720, i32 0, i32 12, !dbg !7603
  store i32 1, i32* %preflag477, align 16, !dbg !7604
  br label %if.end478

if.end478:                                        ; preds = %lsf_sf_expand.exit1192, %lsf_sf_expand.exit1073
  br label %if.end479

if.end479:                                        ; preds = %if.end478, %lsf_sf_expand.exit954
  br label %if.end480

if.end480:                                        ; preds = %if.end479, %if.end462
  store i32 0, i32* %j, align 4, !dbg !7605
  store i32 0, i32* %k, align 4, !dbg !7606
  br label %for.cond481, !dbg !7608

for.cond481:                                      ; preds = %for.inc523, %if.end480
  %721 = load i32, i32* %k, align 4, !dbg !7609
  %cmp482 = icmp slt i32 %721, 4, !dbg !7612
  br i1 %cmp482, label %for.body484, label %for.end525, !dbg !7613

for.body484:                                      ; preds = %for.cond481
  %722 = load i32, i32* %k, align 4, !dbg !7614
  %idxprom485 = sext i32 %722 to i64, !dbg !7616
  %723 = load i32, i32* %tindex, align 4, !dbg !7617
  %idxprom486 = sext i32 %723 to i64, !dbg !7616
  %724 = load i32, i32* %tindex2, align 4, !dbg !7618
  %idxprom487 = sext i32 %724 to i64, !dbg !7616
  %arrayidx488 = getelementptr inbounds [6 x [3 x [4 x i8]]], [6 x [3 x [4 x i8]]]* @lsf_nsf_table, i64 0, i64 %idxprom487, !dbg !7616
  %arrayidx489 = getelementptr inbounds [3 x [4 x i8]], [3 x [4 x i8]]* %arrayidx488, i64 0, i64 %idxprom486, !dbg !7616
  %arrayidx490 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx489, i64 0, i64 %idxprom485, !dbg !7616
  %725 = load i8, i8* %arrayidx490, align 1, !dbg !7616
  %conv491 = zext i8 %725 to i32, !dbg !7616
  store i32 %conv491, i32* %n, align 4, !dbg !7619
  %726 = load i32, i32* %k, align 4, !dbg !7620
  %idxprom492 = sext i32 %726 to i64, !dbg !7621
  %arrayidx493 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i64 0, i64 %idxprom492, !dbg !7621
  %727 = load i32, i32* %arrayidx493, align 4, !dbg !7621
  store i32 %727, i32* %sl, align 4, !dbg !7622
  %728 = load i32, i32* %sl, align 4, !dbg !7623
  %tobool494 = icmp ne i32 %728, 0, !dbg !7623
  br i1 %tobool494, label %if.then495, label %if.else510, !dbg !7625

if.then495:                                       ; preds = %for.body484
  store i32 0, i32* %i, align 4, !dbg !7626
  br label %for.cond496, !dbg !7629

for.cond496:                                      ; preds = %for.inc507, %if.then495
  %729 = load i32, i32* %i, align 4, !dbg !7630
  %730 = load i32, i32* %n, align 4, !dbg !7633
  %cmp497 = icmp slt i32 %729, %730, !dbg !7634
  br i1 %cmp497, label %for.body499, label %for.end509, !dbg !7635

for.body499:                                      ; preds = %for.cond496
  %731 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7636
  %gb500 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %731, i32 0, i32 14, !dbg !7637
  %732 = load i32, i32* %sl, align 4, !dbg !7638
  %call501 = call i32 @get_bits(%struct.GetBitContext* %gb500, i32 %732), !dbg !7639
  %conv502 = trunc i32 %call501 to i8, !dbg !7639
  %733 = load i32, i32* %j, align 4, !dbg !7640
  %inc503 = add nsw i32 %733, 1, !dbg !7640
  store i32 %inc503, i32* %j, align 4, !dbg !7640
  %idxprom504 = sext i32 %733 to i64, !dbg !7641
  %734 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7641
  %scale_factors505 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %734, i32 0, i32 15, !dbg !7642
  %arrayidx506 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors505, i64 0, i64 %idxprom504, !dbg !7641
  store i8 %conv502, i8* %arrayidx506, align 1, !dbg !7643
  br label %for.inc507, !dbg !7641

for.inc507:                                       ; preds = %for.body499
  %735 = load i32, i32* %i, align 4, !dbg !7644
  %inc508 = add nsw i32 %735, 1, !dbg !7644
  store i32 %inc508, i32* %i, align 4, !dbg !7644
  br label %for.cond496, !dbg !7646, !llvm.loop !7647

for.end509:                                       ; preds = %for.cond496
  br label %if.end522, !dbg !7649

if.else510:                                       ; preds = %for.body484
  store i32 0, i32* %i, align 4, !dbg !7650
  br label %for.cond511, !dbg !7653

for.cond511:                                      ; preds = %for.inc519, %if.else510
  %736 = load i32, i32* %i, align 4, !dbg !7654
  %737 = load i32, i32* %n, align 4, !dbg !7657
  %cmp512 = icmp slt i32 %736, %737, !dbg !7658
  br i1 %cmp512, label %for.body514, label %for.end521, !dbg !7659

for.body514:                                      ; preds = %for.cond511
  %738 = load i32, i32* %j, align 4, !dbg !7660
  %inc515 = add nsw i32 %738, 1, !dbg !7660
  store i32 %inc515, i32* %j, align 4, !dbg !7660
  %idxprom516 = sext i32 %738 to i64, !dbg !7661
  %739 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7661
  %scale_factors517 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %739, i32 0, i32 15, !dbg !7662
  %arrayidx518 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors517, i64 0, i64 %idxprom516, !dbg !7661
  store i8 0, i8* %arrayidx518, align 1, !dbg !7663
  br label %for.inc519, !dbg !7661

for.inc519:                                       ; preds = %for.body514
  %740 = load i32, i32* %i, align 4, !dbg !7664
  %inc520 = add nsw i32 %740, 1, !dbg !7664
  store i32 %inc520, i32* %i, align 4, !dbg !7664
  br label %for.cond511, !dbg !7666, !llvm.loop !7667

for.end521:                                       ; preds = %for.cond511
  br label %if.end522

if.end522:                                        ; preds = %for.end521, %for.end509
  br label %for.inc523, !dbg !7669

for.inc523:                                       ; preds = %if.end522
  %741 = load i32, i32* %k, align 4, !dbg !7670
  %inc524 = add nsw i32 %741, 1, !dbg !7670
  store i32 %inc524, i32* %k, align 4, !dbg !7670
  br label %for.cond481, !dbg !7672, !llvm.loop !7673

for.end525:                                       ; preds = %for.cond481
  br label %for.cond526, !dbg !7675

for.cond526:                                      ; preds = %for.inc533, %for.end525
  %742 = load i32, i32* %j, align 4, !dbg !7676
  %cmp527 = icmp slt i32 %742, 40, !dbg !7680
  br i1 %cmp527, label %for.body529, label %for.end535, !dbg !7681

for.body529:                                      ; preds = %for.cond526
  %743 = load i32, i32* %j, align 4, !dbg !7682
  %idxprom530 = sext i32 %743 to i64, !dbg !7683
  %744 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7683
  %scale_factors531 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %744, i32 0, i32 15, !dbg !7684
  %arrayidx532 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors531, i64 0, i64 %idxprom530, !dbg !7683
  store i8 0, i8* %arrayidx532, align 1, !dbg !7685
  br label %for.inc533, !dbg !7683

for.inc533:                                       ; preds = %for.body529
  %745 = load i32, i32* %j, align 4, !dbg !7686
  %inc534 = add nsw i32 %745, 1, !dbg !7686
  store i32 %inc534, i32* %j, align 4, !dbg !7686
  br label %for.cond526, !dbg !7688, !llvm.loop !7689

for.end535:                                       ; preds = %for.cond526
  br label %if.end536

if.end536:                                        ; preds = %for.end535, %if.end425
  %746 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7690
  %747 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7691
  %arraydecay537 = getelementptr inbounds [576 x i16], [576 x i16]* %exponents, i32 0, i32 0, !dbg !7692
  call void @exponents_from_scale_factors(%struct.MPADecodeContext* %746, %struct.GranuleDef* %747, i16* %arraydecay537), !dbg !7693
  %748 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7694
  %749 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7695
  %arraydecay538 = getelementptr inbounds [576 x i16], [576 x i16]* %exponents, i32 0, i32 0, !dbg !7696
  %750 = load i32, i32* %bits_pos, align 4, !dbg !7697
  %751 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7698
  %part2_3_length539 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %751, i32 0, i32 1, !dbg !7699
  %752 = load i32, i32* %part2_3_length539, align 4, !dbg !7699
  %add540 = add nsw i32 %750, %752, !dbg !7700
  %call541 = call i32 @huffman_decode(%struct.MPADecodeContext* %748, %struct.GranuleDef* %749, i16* %arraydecay538, i32 %add540), !dbg !7701
  br label %for.inc542, !dbg !7702

for.inc542:                                       ; preds = %if.end536
  %753 = load i32, i32* %ch, align 4, !dbg !7703
  %inc543 = add nsw i32 %753, 1, !dbg !7703
  store i32 %inc543, i32* %ch, align 4, !dbg !7703
  br label %for.cond245, !dbg !7705, !llvm.loop !7706

for.end544:                                       ; preds = %for.cond245
  %754 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7708
  %mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %754, i32 0, i32 7, !dbg !7710
  %755 = load i32, i32* %mode, align 4, !dbg !7710
  %cmp545 = icmp eq i32 %755, 1, !dbg !7711
  br i1 %cmp545, label %if.then547, label %if.end556, !dbg !7712

if.then547:                                       ; preds = %for.end544
  %756 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7713
  %757 = load i32, i32* %gr, align 4, !dbg !7714
  %idxprom548 = sext i32 %757 to i64, !dbg !7715
  %758 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7715
  %granules549 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %758, i32 0, i32 22, !dbg !7716
  %arrayidx550 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules549, i64 0, i64 0, !dbg !7715
  %arrayidx551 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx550, i64 0, i64 %idxprom548, !dbg !7715
  %759 = load i32, i32* %gr, align 4, !dbg !7717
  %idxprom552 = sext i32 %759 to i64, !dbg !7718
  %760 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7718
  %granules553 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %760, i32 0, i32 22, !dbg !7719
  %arrayidx554 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules553, i64 0, i64 1, !dbg !7718
  %arrayidx555 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx554, i64 0, i64 %idxprom552, !dbg !7718
  call void @compute_stereo(%struct.MPADecodeContext* %756, %struct.GranuleDef* %arrayidx551, %struct.GranuleDef* %arrayidx555), !dbg !7720
  br label %if.end556, !dbg !7720

if.end556:                                        ; preds = %if.then547, %for.end544
  store i32 0, i32* %ch, align 4, !dbg !7721
  br label %for.cond557, !dbg !7723

for.cond557:                                      ; preds = %for.inc578, %if.end556
  %761 = load i32, i32* %ch, align 4, !dbg !7724
  %762 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7727
  %nb_channels558 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %762, i32 0, i32 6, !dbg !7728
  %763 = load i32, i32* %nb_channels558, align 8, !dbg !7728
  %cmp559 = icmp slt i32 %761, %763, !dbg !7729
  br i1 %cmp559, label %for.body561, label %for.end580, !dbg !7730

for.body561:                                      ; preds = %for.cond557
  %764 = load i32, i32* %gr, align 4, !dbg !7731
  %idxprom562 = sext i32 %764 to i64, !dbg !7733
  %765 = load i32, i32* %ch, align 4, !dbg !7734
  %idxprom563 = sext i32 %765 to i64, !dbg !7733
  %766 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7733
  %granules564 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %766, i32 0, i32 22, !dbg !7735
  %arrayidx565 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules564, i64 0, i64 %idxprom563, !dbg !7733
  %arrayidx566 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx565, i64 0, i64 %idxprom562, !dbg !7733
  store %struct.GranuleDef* %arrayidx566, %struct.GranuleDef** %g, align 8, !dbg !7736
  %767 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7737
  %768 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7738
  call void @reorder_block(%struct.MPADecodeContext* %767, %struct.GranuleDef* %768), !dbg !7739
  %769 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7740
  %770 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7741
  call void @compute_antialias(%struct.MPADecodeContext* %769, %struct.GranuleDef* %770), !dbg !7742
  %771 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7743
  %772 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7744
  %773 = load i32, i32* %gr, align 4, !dbg !7745
  %mul567 = mul nsw i32 18, %773, !dbg !7746
  %idxprom568 = sext i32 %mul567 to i64, !dbg !7747
  %774 = load i32, i32* %ch, align 4, !dbg !7748
  %idxprom569 = sext i32 %774 to i64, !dbg !7747
  %775 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7747
  %sb_samples570 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %775, i32 0, i32 20, !dbg !7749
  %arrayidx571 = getelementptr inbounds [2 x [36 x [32 x float]]], [2 x [36 x [32 x float]]]* %sb_samples570, i64 0, i64 %idxprom569, !dbg !7747
  %arrayidx572 = getelementptr inbounds [36 x [32 x float]], [36 x [32 x float]]* %arrayidx571, i64 0, i64 %idxprom568, !dbg !7747
  %arrayidx573 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx572, i64 0, i64 0, !dbg !7747
  %776 = load i32, i32* %ch, align 4, !dbg !7750
  %idxprom574 = sext i32 %776 to i64, !dbg !7751
  %777 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7751
  %mdct_buf575 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %777, i32 0, i32 21, !dbg !7752
  %arrayidx576 = getelementptr inbounds [2 x [576 x float]], [2 x [576 x float]]* %mdct_buf575, i64 0, i64 %idxprom574, !dbg !7751
  %arraydecay577 = getelementptr inbounds [576 x float], [576 x float]* %arrayidx576, i32 0, i32 0, !dbg !7751
  call void @compute_imdct(%struct.MPADecodeContext* %771, %struct.GranuleDef* %772, float* %arrayidx573, float* %arraydecay577), !dbg !7753
  br label %for.inc578, !dbg !7754

for.inc578:                                       ; preds = %for.body561
  %778 = load i32, i32* %ch, align 4, !dbg !7755
  %inc579 = add nsw i32 %778, 1, !dbg !7755
  store i32 %inc579, i32* %ch, align 4, !dbg !7755
  br label %for.cond557, !dbg !7757, !llvm.loop !7758

for.end580:                                       ; preds = %for.cond557
  br label %for.inc581, !dbg !7760

for.inc581:                                       ; preds = %for.end580
  %779 = load i32, i32* %gr, align 4, !dbg !7761
  %inc582 = add nsw i32 %779, 1, !dbg !7761
  store i32 %inc582, i32* %gr, align 4, !dbg !7761
  br label %for.cond241, !dbg !7763, !llvm.loop !7764

for.end583:                                       ; preds = %for.cond241
  %780 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7765
  %gb584 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %780, i32 0, i32 14, !dbg !7767
  %call585 = call i32 @get_bits_count(%struct.GetBitContext* %gb584), !dbg !7768
  %cmp586 = icmp slt i32 %call585, 0, !dbg !7769
  br i1 %cmp586, label %if.then588, label %if.end593, !dbg !7770

if.then588:                                       ; preds = %for.end583
  %781 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7771
  %gb589 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %781, i32 0, i32 14, !dbg !7772
  %782 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7773
  %gb590 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %782, i32 0, i32 14, !dbg !7774
  %call591 = call i32 @get_bits_count(%struct.GetBitContext* %gb590), !dbg !7775
  %sub592 = sub nsw i32 0, %call591, !dbg !7776
  call void @skip_bits_long(%struct.GetBitContext* %gb589, i32 %sub592), !dbg !7777
  br label %if.end593, !dbg !7779

if.end593:                                        ; preds = %if.then588, %for.end583
  %783 = load i32, i32* %nb_granules, align 4, !dbg !7780
  %mul594 = mul nsw i32 %783, 18, !dbg !7781
  store i32 %mul594, i32* %retval, align 4, !dbg !7782
  br label %return, !dbg !7782

return:                                           ; preds = %if.end593, %if.then71, %if.then41
  %784 = load i32, i32* %retval, align 4, !dbg !7783
  ret i32 %784, !dbg !7783
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #7 !dbg !7784 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7787, metadata !2031), !dbg !7788
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7789, metadata !2031), !dbg !7790
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7791
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !7792
  %sub = sub nsw i32 0, %call, !dbg !7793
  %and = and i32 %sub, 7, !dbg !7794
  store i32 %and, i32* %n, align 4, !dbg !7790
  %1 = load i32, i32* %n, align 4, !dbg !7795
  %tobool = icmp ne i32 %1, 0, !dbg !7795
  br i1 %tobool, label %if.then, label %if.end, !dbg !7797

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7798
  %3 = load i32, i32* %n, align 4, !dbg !7799
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !7800
  br label %if.end, !dbg !7800

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7801
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7802
  %5 = load i8*, i8** %buffer, align 8, !dbg !7802
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7803
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !7804
  %7 = load i32, i32* %index, align 8, !dbg !7804
  %shr = ashr i32 %7, 3, !dbg !7805
  %idx.ext = sext i32 %shr to i64, !dbg !7806
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7806
  ret i8* %add.ptr, !dbg !7807
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #7 !dbg !7808 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7811, metadata !2031), !dbg !7812
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7813
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !7814
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !7814
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7815
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !7816
  %sub = sub nsw i32 %1, %call, !dbg !7817
  ret i32 %sub, !dbg !7818
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #7 !dbg !7819 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7824, metadata !2031), !dbg !7825
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7826
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7827
  %1 = load i32, i32* %index, align 8, !dbg !7827
  ret i32 %1, !dbg !7828
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

declare void @ff_mpa_synth_filter_float(%struct.MPADSPContext*, float*, i32*, float*, i32*, float*, i64, float*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #7 !dbg !7829 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2095, metadata !2031), !dbg !7832
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7834, metadata !2031), !dbg !7835
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7836, metadata !2031), !dbg !7837
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7838, metadata !2031), !dbg !7839
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7840, metadata !2031), !dbg !7841
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7842
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7843
  %1 = load i32, i32* %index, align 8, !dbg !7843
  store i32 %1, i32* %re_index, align 4, !dbg !7841
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7844, metadata !2031), !dbg !7845
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7846, metadata !2031), !dbg !7847
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7848
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7849
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7849
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7847
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7850
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7851
  %5 = load i8*, i8** %buffer, align 8, !dbg !7851
  %6 = load i32, i32* %re_index, align 4, !dbg !7852
  %shr = lshr i32 %6, 3, !dbg !7853
  %idx.ext = zext i32 %shr to i64, !dbg !7854
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7854
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7855
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7855
  %8 = load i32, i32* %l, align 1, !dbg !7855
  store i32 %8, i32* %x.addr.i, align 4, !dbg !7856
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !7857
  %shl.i = shl i32 %9, 8, !dbg !7858
  %and.i = and i32 %shl.i, 65280, !dbg !7859
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !7860
  %shr.i = lshr i32 %10, 8, !dbg !7861
  %and1.i = and i32 %shr.i, 255, !dbg !7862
  %or.i = or i32 %and.i, %and1.i, !dbg !7863
  %shl2.i = shl i32 %or.i, 16, !dbg !7864
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7865
  %shr3.i = lshr i32 %11, 16, !dbg !7866
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7867
  %and5.i = and i32 %shl4.i, 65280, !dbg !7868
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7869
  %shr6.i = lshr i32 %12, 16, !dbg !7870
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7871
  %and8.i = and i32 %shr7.i, 255, !dbg !7872
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7873
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7874
  %13 = load i32, i32* %re_index, align 4, !dbg !7875
  %and = and i32 %13, 7, !dbg !7876
  %shl = shl i32 %or10.i, %and, !dbg !7877
  store i32 %shl, i32* %re_cache, align 4, !dbg !7878
  %14 = load i32, i32* %re_cache, align 4, !dbg !7879
  %15 = load i32, i32* %n.addr, align 4, !dbg !7880
  %conv = trunc i32 %15 to i8, !dbg !7880
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !7881
  store i32 %call4, i32* %tmp, align 4, !dbg !7882
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !7883
  %17 = load i32, i32* %re_index, align 4, !dbg !7884
  %18 = load i32, i32* %n.addr, align 4, !dbg !7885
  %add = add i32 %17, %18, !dbg !7886
  %cmp = icmp ugt i32 %16, %add, !dbg !7887
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7888

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !7889
  %20 = load i32, i32* %n.addr, align 4, !dbg !7891
  %add6 = add i32 %19, %20, !dbg !7892
  br label %cond.end, !dbg !7893

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !7894
  br label %cond.end, !dbg !7896

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !7897
  store i32 %cond, i32* %re_index, align 4, !dbg !7899
  %22 = load i32, i32* %re_index, align 4, !dbg !7900
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7901
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !7902
  store i32 %22, i32* %index7, align 8, !dbg !7903
  %24 = load i32, i32* %tmp, align 4, !dbg !7904
  ret i32 %24, !dbg !7905
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @l1_unscale(i32 %n, i32 %mant, i32 %scale_factor) #7 !dbg !7906 {
entry:
  %n.addr = alloca i32, align 4
  %mant.addr = alloca i32, align 4
  %scale_factor.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %mod = alloca i32, align 4
  %val = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7907, metadata !2031), !dbg !7908
  store i32 %mant, i32* %mant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mant.addr, metadata !7909, metadata !2031), !dbg !7910
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !7911, metadata !2031), !dbg !7912
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7913, metadata !2031), !dbg !7914
  call void @llvm.dbg.declare(metadata i32* %mod, metadata !7915, metadata !2031), !dbg !7916
  call void @llvm.dbg.declare(metadata i64* %val, metadata !7917, metadata !2031), !dbg !7918
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !7919
  %idxprom = sext i32 %0 to i64, !dbg !7920
  %arrayidx = getelementptr inbounds [64 x i16], [64 x i16]* @scale_factor_modshift, i64 0, i64 %idxprom, !dbg !7920
  %1 = load i16, i16* %arrayidx, align 2, !dbg !7920
  %conv = zext i16 %1 to i32, !dbg !7920
  store i32 %conv, i32* %shift, align 4, !dbg !7921
  %2 = load i32, i32* %shift, align 4, !dbg !7922
  %and = and i32 %2, 3, !dbg !7923
  store i32 %and, i32* %mod, align 4, !dbg !7924
  %3 = load i32, i32* %shift, align 4, !dbg !7925
  %shr = ashr i32 %3, 2, !dbg !7925
  store i32 %shr, i32* %shift, align 4, !dbg !7925
  %4 = load i32, i32* %mant.addr, align 4, !dbg !7926
  %5 = load i32, i32* %n.addr, align 4, !dbg !7927
  %shl = shl i32 -1, %5, !dbg !7928
  %add = add i32 %4, %shl, !dbg !7929
  %add1 = add i32 %add, 1, !dbg !7930
  %conv2 = sext i32 %add1 to i64, !dbg !7931
  %6 = load i32, i32* %mod, align 4, !dbg !7932
  %idxprom3 = sext i32 %6 to i64, !dbg !7933
  %7 = load i32, i32* %n.addr, align 4, !dbg !7934
  %sub = sub nsw i32 %7, 1, !dbg !7935
  %idxprom4 = sext i32 %sub to i64, !dbg !7933
  %arrayidx5 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom4, !dbg !7933
  %arrayidx6 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx5, i64 0, i64 %idxprom3, !dbg !7933
  %8 = load i32, i32* %arrayidx6, align 4, !dbg !7933
  %conv7 = sext i32 %8 to i64, !dbg !7936
  %mul = mul nsw i64 %conv2, %conv7, !dbg !7937
  store i64 %mul, i64* %val, align 8, !dbg !7938
  %9 = load i32, i32* %n.addr, align 4, !dbg !7939
  %10 = load i32, i32* %shift, align 4, !dbg !7940
  %add8 = add nsw i32 %10, %9, !dbg !7940
  store i32 %add8, i32* %shift, align 4, !dbg !7940
  %11 = load i64, i64* %val, align 8, !dbg !7941
  %12 = load i32, i32* %shift, align 4, !dbg !7942
  %sub9 = sub nsw i32 %12, 1, !dbg !7943
  %sh_prom = zext i32 %sub9 to i64, !dbg !7944
  %shl10 = shl i64 1, %sh_prom, !dbg !7944
  %add11 = add nsw i64 %11, %shl10, !dbg !7945
  %13 = load i32, i32* %shift, align 4, !dbg !7946
  %sh_prom12 = zext i32 %13 to i64, !dbg !7947
  %shr13 = ashr i64 %add11, %sh_prom12, !dbg !7947
  %conv14 = trunc i64 %shr13 to i32, !dbg !7948
  ret i32 %conv14, !dbg !7949
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #7 !dbg !7950 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7954, metadata !2031), !dbg !7955
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7956, metadata !2031), !dbg !7957
  %0 = load i32, i32* %a.addr, align 4, !dbg !7958
  %1 = load i8, i8* %s.addr, align 1, !dbg !7959
  %conv = sext i8 %1 to i32, !dbg !7959
  %sub = sub nsw i32 0, %conv, !dbg !7960
  %conv1 = trunc i32 %sub to i8, !dbg !7961
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !7958, !srcloc !7962
  store i32 %2, i32* %a.addr, align 4, !dbg !7958
  %3 = load i32, i32* %a.addr, align 4, !dbg !7963
  ret i32 %3, !dbg !7964
}

declare i32 @ff_mpa_l2_select_table(i32, i32, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @l2_unscale_group(i32 %steps, i32 %mant, i32 %scale_factor) #7 !dbg !7965 {
entry:
  %steps.addr = alloca i32, align 4
  %mant.addr = alloca i32, align 4
  %scale_factor.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %mod = alloca i32, align 4
  %val = alloca i32, align 4
  store i32 %steps, i32* %steps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %steps.addr, metadata !7966, metadata !2031), !dbg !7967
  store i32 %mant, i32* %mant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mant.addr, metadata !7968, metadata !2031), !dbg !7969
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !7970, metadata !2031), !dbg !7971
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7972, metadata !2031), !dbg !7973
  call void @llvm.dbg.declare(metadata i32* %mod, metadata !7974, metadata !2031), !dbg !7975
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7976, metadata !2031), !dbg !7977
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !7978
  %idxprom = sext i32 %0 to i64, !dbg !7979
  %arrayidx = getelementptr inbounds [64 x i16], [64 x i16]* @scale_factor_modshift, i64 0, i64 %idxprom, !dbg !7979
  %1 = load i16, i16* %arrayidx, align 2, !dbg !7979
  %conv = zext i16 %1 to i32, !dbg !7979
  store i32 %conv, i32* %shift, align 4, !dbg !7980
  %2 = load i32, i32* %shift, align 4, !dbg !7981
  %and = and i32 %2, 3, !dbg !7982
  store i32 %and, i32* %mod, align 4, !dbg !7983
  %3 = load i32, i32* %shift, align 4, !dbg !7984
  %shr = ashr i32 %3, 2, !dbg !7984
  store i32 %shr, i32* %shift, align 4, !dbg !7984
  %4 = load i32, i32* %mant.addr, align 4, !dbg !7985
  %5 = load i32, i32* %steps.addr, align 4, !dbg !7986
  %shr1 = ashr i32 %5, 1, !dbg !7987
  %sub = sub nsw i32 %4, %shr1, !dbg !7988
  %6 = load i32, i32* %mod, align 4, !dbg !7989
  %idxprom2 = sext i32 %6 to i64, !dbg !7990
  %7 = load i32, i32* %steps.addr, align 4, !dbg !7991
  %shr3 = ashr i32 %7, 2, !dbg !7992
  %idxprom4 = sext i32 %shr3 to i64, !dbg !7990
  %arrayidx5 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @scale_factor_mult2, i64 0, i64 %idxprom4, !dbg !7990
  %arrayidx6 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx5, i64 0, i64 %idxprom2, !dbg !7990
  %8 = load i32, i32* %arrayidx6, align 4, !dbg !7990
  %mul = mul nsw i32 %sub, %8, !dbg !7993
  store i32 %mul, i32* %val, align 4, !dbg !7994
  %9 = load i32, i32* %shift, align 4, !dbg !7995
  %cmp = icmp sgt i32 %9, 0, !dbg !7997
  br i1 %cmp, label %if.then, label %if.end, !dbg !7998

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %val, align 4, !dbg !7999
  %11 = load i32, i32* %shift, align 4, !dbg !8000
  %sub8 = sub nsw i32 %11, 1, !dbg !8001
  %shl = shl i32 1, %sub8, !dbg !8002
  %add = add nsw i32 %10, %shl, !dbg !8003
  %12 = load i32, i32* %shift, align 4, !dbg !8004
  %shr9 = ashr i32 %add, %12, !dbg !8005
  store i32 %shr9, i32* %val, align 4, !dbg !8006
  br label %if.end, !dbg !8007

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %val, align 4, !dbg !8008
  ret i32 %13, !dbg !8009
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #7 !dbg !8010 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8013, metadata !2031), !dbg !8014
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8015, metadata !2031), !dbg !8016
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8017
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8018
  %1 = load i32, i32* %index1, align 8, !dbg !8018
  store i32 %1, i32* %index, align 4, !dbg !8016
  call void @llvm.dbg.declare(metadata i8* %result, metadata !8019, metadata !2031), !dbg !8020
  %2 = load i32, i32* %index, align 4, !dbg !8021
  %shr = lshr i32 %2, 3, !dbg !8022
  %idxprom = zext i32 %shr to i64, !dbg !8023
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8023
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !8024
  %4 = load i8*, i8** %buffer, align 8, !dbg !8024
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8023
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8023
  store i8 %5, i8* %result, align 1, !dbg !8020
  %6 = load i32, i32* %index, align 4, !dbg !8025
  %and = and i32 %6, 7, !dbg !8026
  %7 = load i8, i8* %result, align 1, !dbg !8027
  %conv = zext i8 %7 to i32, !dbg !8027
  %shl = shl i32 %conv, %and, !dbg !8027
  %conv2 = trunc i32 %shl to i8, !dbg !8027
  store i8 %conv2, i8* %result, align 1, !dbg !8027
  %8 = load i8, i8* %result, align 1, !dbg !8028
  %conv3 = zext i8 %8 to i32, !dbg !8028
  %shr4 = ashr i32 %conv3, 7, !dbg !8028
  %conv5 = trunc i32 %shr4 to i8, !dbg !8028
  store i8 %conv5, i8* %result, align 1, !dbg !8028
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8029
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !8031
  %10 = load i32, i32* %index6, align 8, !dbg !8031
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8032
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !8033
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8033
  %cmp = icmp slt i32 %10, %12, !dbg !8034
  br i1 %cmp, label %if.then, label %if.end, !dbg !8035

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !8036
  %inc = add i32 %13, 1, !dbg !8036
  store i32 %inc, i32* %index, align 4, !dbg !8036
  br label %if.end, !dbg !8037

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !8038
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8039
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8040
  store i32 %14, i32* %index8, align 8, !dbg !8041
  %16 = load i8, i8* %result, align 1, !dbg !8042
  %conv9 = zext i8 %16 to i32, !dbg !8042
  ret i32 %conv9, !dbg !8043
}

; Function Attrs: nounwind uwtable
define internal void @init_short_region(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !8044 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8047, metadata !2031), !dbg !8048
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8049, metadata !2031), !dbg !8050
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8051
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !8053
  %1 = load i8, i8* %block_type, align 4, !dbg !8053
  %conv = zext i8 %1 to i32, !dbg !8051
  %cmp = icmp eq i32 %conv, 2, !dbg !8054
  br i1 %cmp, label %if.then, label %if.else7, !dbg !8055

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8056
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 4, !dbg !8059
  %3 = load i32, i32* %sample_rate_index, align 16, !dbg !8059
  %cmp2 = icmp ne i32 %3, 8, !dbg !8060
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !8061

if.then4:                                         ; preds = %if.then
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8062
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 11, !dbg !8063
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 0, !dbg !8062
  store i32 18, i32* %arrayidx, align 4, !dbg !8064
  br label %if.end, !dbg !8062

if.else:                                          ; preds = %if.then
  %5 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8065
  %region_size5 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %5, i32 0, i32 11, !dbg !8066
  %arrayidx6 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size5, i64 0, i64 0, !dbg !8065
  store i32 36, i32* %arrayidx6, align 4, !dbg !8067
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end26, !dbg !8068

if.else7:                                         ; preds = %entry
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8069
  %sample_rate_index8 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 4, !dbg !8072
  %7 = load i32, i32* %sample_rate_index8, align 16, !dbg !8072
  %cmp9 = icmp sle i32 %7, 2, !dbg !8073
  br i1 %cmp9, label %if.then11, label %if.else14, !dbg !8074

if.then11:                                        ; preds = %if.else7
  %8 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8075
  %region_size12 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %8, i32 0, i32 11, !dbg !8076
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size12, i64 0, i64 0, !dbg !8075
  store i32 18, i32* %arrayidx13, align 4, !dbg !8077
  br label %if.end25, !dbg !8075

if.else14:                                        ; preds = %if.else7
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8078
  %sample_rate_index15 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 4, !dbg !8080
  %10 = load i32, i32* %sample_rate_index15, align 16, !dbg !8080
  %cmp16 = icmp ne i32 %10, 8, !dbg !8081
  br i1 %cmp16, label %if.then18, label %if.else21, !dbg !8082

if.then18:                                        ; preds = %if.else14
  %11 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8083
  %region_size19 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %11, i32 0, i32 11, !dbg !8084
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size19, i64 0, i64 0, !dbg !8083
  store i32 27, i32* %arrayidx20, align 4, !dbg !8085
  br label %if.end24, !dbg !8083

if.else21:                                        ; preds = %if.else14
  %12 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8086
  %region_size22 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %12, i32 0, i32 11, !dbg !8087
  %arrayidx23 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size22, i64 0, i64 0, !dbg !8086
  store i32 54, i32* %arrayidx23, align 4, !dbg !8088
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then18
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8089
  %region_size27 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 11, !dbg !8090
  %arrayidx28 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size27, i64 0, i64 1, !dbg !8089
  store i32 288, i32* %arrayidx28, align 4, !dbg !8091
  ret void, !dbg !8092
}

; Function Attrs: nounwind uwtable
define internal void @init_long_region(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, i32 %ra1, i32 %ra2) #1 !dbg !8093 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %ra1.addr = alloca i32, align 4
  %ra2.addr = alloca i32, align 4
  %l = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8096, metadata !2031), !dbg !8097
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8098, metadata !2031), !dbg !8099
  store i32 %ra1, i32* %ra1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra1.addr, metadata !8100, metadata !2031), !dbg !8101
  store i32 %ra2, i32* %ra2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra2.addr, metadata !8102, metadata !2031), !dbg !8103
  call void @llvm.dbg.declare(metadata i32* %l, metadata !8104, metadata !2031), !dbg !8105
  %0 = load i32, i32* %ra1.addr, align 4, !dbg !8106
  %add = add nsw i32 %0, 1, !dbg !8107
  %idxprom = sext i32 %add to i64, !dbg !8108
  %1 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8109
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %1, i32 0, i32 4, !dbg !8110
  %2 = load i32, i32* %sample_rate_index, align 16, !dbg !8110
  %idxprom1 = sext i32 %2 to i64, !dbg !8108
  %arrayidx = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom1, !dbg !8108
  %arrayidx2 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx, i64 0, i64 %idxprom, !dbg !8108
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !8108
  %conv = zext i16 %3 to i32, !dbg !8108
  %shr = ashr i32 %conv, 1, !dbg !8111
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8112
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 11, !dbg !8113
  %arrayidx3 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 0, !dbg !8112
  store i32 %shr, i32* %arrayidx3, align 4, !dbg !8114
  %5 = load i32, i32* %ra1.addr, align 4, !dbg !8115
  %6 = load i32, i32* %ra2.addr, align 4, !dbg !8116
  %add4 = add nsw i32 %5, %6, !dbg !8117
  %add5 = add nsw i32 %add4, 2, !dbg !8118
  %cmp = icmp sgt i32 %add5, 22, !dbg !8119
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8120

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8121

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %ra1.addr, align 4, !dbg !8123
  %8 = load i32, i32* %ra2.addr, align 4, !dbg !8125
  %add7 = add nsw i32 %7, %8, !dbg !8126
  %add8 = add nsw i32 %add7, 2, !dbg !8127
  br label %cond.end, !dbg !8128

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 22, %cond.true ], [ %add8, %cond.false ], !dbg !8129
  store i32 %cond, i32* %l, align 4, !dbg !8131
  %9 = load i32, i32* %l, align 4, !dbg !8132
  %idxprom9 = sext i32 %9 to i64, !dbg !8133
  %10 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8134
  %sample_rate_index10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %10, i32 0, i32 4, !dbg !8135
  %11 = load i32, i32* %sample_rate_index10, align 16, !dbg !8135
  %idxprom11 = sext i32 %11 to i64, !dbg !8133
  %arrayidx12 = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom11, !dbg !8133
  %arrayidx13 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx12, i64 0, i64 %idxprom9, !dbg !8133
  %12 = load i16, i16* %arrayidx13, align 2, !dbg !8133
  %conv14 = zext i16 %12 to i32, !dbg !8133
  %shr15 = ashr i32 %conv14, 1, !dbg !8136
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8137
  %region_size16 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 11, !dbg !8138
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size16, i64 0, i64 1, !dbg !8137
  store i32 %shr15, i32* %arrayidx17, align 4, !dbg !8139
  ret void, !dbg !8140
}

; Function Attrs: nounwind uwtable
define internal void @region_offset2size(%struct.GranuleDef* %g) #1 !dbg !8141 {
entry:
  %g.addr = alloca %struct.GranuleDef*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8144, metadata !2031), !dbg !8145
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8146, metadata !2031), !dbg !8147
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8148, metadata !2031), !dbg !8149
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8150, metadata !2031), !dbg !8151
  store i32 0, i32* %j, align 4, !dbg !8151
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8152
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 11, !dbg !8153
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 2, !dbg !8152
  store i32 288, i32* %arrayidx, align 4, !dbg !8154
  store i32 0, i32* %i, align 4, !dbg !8155
  br label %for.cond, !dbg !8157

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8158
  %cmp = icmp slt i32 %1, 3, !dbg !8161
  br i1 %cmp, label %for.body, label %for.end, !dbg !8162

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !8163
  %idxprom = sext i32 %2 to i64, !dbg !8165
  %3 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8165
  %region_size1 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %3, i32 0, i32 11, !dbg !8166
  %arrayidx2 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size1, i64 0, i64 %idxprom, !dbg !8165
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !8165
  %5 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8167
  %big_values = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %5, i32 0, i32 2, !dbg !8168
  %6 = load i32, i32* %big_values, align 8, !dbg !8168
  %cmp3 = icmp sgt i32 %4, %6, !dbg !8169
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !8170

cond.true:                                        ; preds = %for.body
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8171
  %big_values4 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 2, !dbg !8173
  %8 = load i32, i32* %big_values4, align 8, !dbg !8173
  br label %cond.end, !dbg !8174

cond.false:                                       ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !8175
  %idxprom5 = sext i32 %9 to i64, !dbg !8177
  %10 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8177
  %region_size6 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %10, i32 0, i32 11, !dbg !8178
  %arrayidx7 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size6, i64 0, i64 %idxprom5, !dbg !8177
  %11 = load i32, i32* %arrayidx7, align 4, !dbg !8177
  br label %cond.end, !dbg !8179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %11, %cond.false ], !dbg !8180
  store i32 %cond, i32* %k, align 4, !dbg !8182
  %12 = load i32, i32* %k, align 4, !dbg !8183
  %13 = load i32, i32* %j, align 4, !dbg !8184
  %sub = sub nsw i32 %12, %13, !dbg !8185
  %14 = load i32, i32* %i, align 4, !dbg !8186
  %idxprom8 = sext i32 %14 to i64, !dbg !8187
  %15 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8187
  %region_size9 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %15, i32 0, i32 11, !dbg !8188
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size9, i64 0, i64 %idxprom8, !dbg !8187
  store i32 %sub, i32* %arrayidx10, align 4, !dbg !8189
  %16 = load i32, i32* %k, align 4, !dbg !8190
  store i32 %16, i32* %j, align 4, !dbg !8191
  br label %for.inc, !dbg !8192

for.inc:                                          ; preds = %cond.end
  %17 = load i32, i32* %i, align 4, !dbg !8193
  %inc = add nsw i32 %17, 1, !dbg !8193
  store i32 %inc, i32* %i, align 4, !dbg !8193
  br label %for.cond, !dbg !8195, !llvm.loop !8196

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8198
}

; Function Attrs: nounwind uwtable
define internal void @compute_band_indexes(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !8199 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8200, metadata !2031), !dbg !8201
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8202, metadata !2031), !dbg !8203
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8204
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !8206
  %1 = load i8, i8* %block_type, align 4, !dbg !8206
  %conv = zext i8 %1 to i32, !dbg !8204
  %cmp = icmp eq i32 %conv, 2, !dbg !8207
  br i1 %cmp, label %if.then, label %if.else16, !dbg !8208

if.then:                                          ; preds = %entry
  %2 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8209
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %2, i32 0, i32 6, !dbg !8212
  %3 = load i8, i8* %switch_point, align 1, !dbg !8212
  %tobool = icmp ne i8 %3, 0, !dbg !8209
  br i1 %tobool, label %if.then2, label %if.else12, !dbg !8213

if.then2:                                         ; preds = %if.then
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8214
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 4, !dbg !8217
  %5 = load i32, i32* %sample_rate_index, align 16, !dbg !8217
  %cmp3 = icmp eq i32 %5, 8, !dbg !8218
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !8219

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8220
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 26, !dbg !8221
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !8221
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !8220
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0)), !dbg !8222
  br label %if.end, !dbg !8222

if.end:                                           ; preds = %if.then5, %if.then2
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8223
  %sample_rate_index6 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 4, !dbg !8225
  %10 = load i32, i32* %sample_rate_index6, align 16, !dbg !8225
  %cmp7 = icmp sle i32 %10, 2, !dbg !8226
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !8227

if.then9:                                         ; preds = %if.end
  %11 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8228
  %long_end = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %11, i32 0, i32 14, !dbg !8229
  store i32 8, i32* %long_end, align 8, !dbg !8230
  br label %if.end11, !dbg !8228

if.else:                                          ; preds = %if.end
  %12 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8231
  %long_end10 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %12, i32 0, i32 14, !dbg !8232
  store i32 6, i32* %long_end10, align 8, !dbg !8233
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8234
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 13, !dbg !8235
  store i32 3, i32* %short_start, align 4, !dbg !8236
  br label %if.end15, !dbg !8237

if.else12:                                        ; preds = %if.then
  %14 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8238
  %long_end13 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %14, i32 0, i32 14, !dbg !8240
  store i32 0, i32* %long_end13, align 8, !dbg !8241
  %15 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8242
  %short_start14 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %15, i32 0, i32 13, !dbg !8243
  store i32 0, i32* %short_start14, align 4, !dbg !8244
  br label %if.end15

if.end15:                                         ; preds = %if.else12, %if.end11
  br label %if.end19, !dbg !8245

if.else16:                                        ; preds = %entry
  %16 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8246
  %short_start17 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %16, i32 0, i32 13, !dbg !8248
  store i32 13, i32* %short_start17, align 4, !dbg !8249
  %17 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8250
  %long_end18 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %17, i32 0, i32 14, !dbg !8251
  store i32 22, i32* %long_end18, align 8, !dbg !8252
  br label %if.end19

if.end19:                                         ; preds = %if.else16, %if.end15
  ret void, !dbg !8253
}

; Function Attrs: nounwind uwtable
define internal void @compute_imdct(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, float* %sb_samples, float* %mdct_buf) #1 !dbg !8254 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %sb_samples.addr = alloca float*, align 8
  %mdct_buf.addr = alloca float*, align 8
  %win = alloca float*, align 8
  %out_ptr = alloca float*, align 8
  %ptr = alloca float*, align 8
  %buf = alloca float*, align 8
  %ptr1 = alloca float*, align 8
  %out2 = alloca [12 x float], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mdct_long_end = alloca i32, align 4
  %sblimit = alloca i32, align 4
  %p = alloca i32*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8257, metadata !2031), !dbg !8258
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8259, metadata !2031), !dbg !8260
  store float* %sb_samples, float** %sb_samples.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sb_samples.addr, metadata !8261, metadata !2031), !dbg !8262
  store float* %mdct_buf, float** %mdct_buf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mdct_buf.addr, metadata !8263, metadata !2031), !dbg !8264
  call void @llvm.dbg.declare(metadata float** %win, metadata !8265, metadata !2031), !dbg !8266
  call void @llvm.dbg.declare(metadata float** %out_ptr, metadata !8267, metadata !2031), !dbg !8268
  call void @llvm.dbg.declare(metadata float** %ptr, metadata !8269, metadata !2031), !dbg !8270
  call void @llvm.dbg.declare(metadata float** %buf, metadata !8271, metadata !2031), !dbg !8272
  call void @llvm.dbg.declare(metadata float** %ptr1, metadata !8273, metadata !2031), !dbg !8274
  call void @llvm.dbg.declare(metadata [12 x float]* %out2, metadata !8275, metadata !2031), !dbg !8279
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8280, metadata !2031), !dbg !8281
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8282, metadata !2031), !dbg !8283
  call void @llvm.dbg.declare(metadata i32* %mdct_long_end, metadata !8284, metadata !2031), !dbg !8285
  call void @llvm.dbg.declare(metadata i32* %sblimit, metadata !8286, metadata !2031), !dbg !8287
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8288
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 17, !dbg !8289
  %arraydecay = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid, i32 0, i32 0, !dbg !8288
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 576, !dbg !8290
  store float* %add.ptr, float** %ptr, align 8, !dbg !8291
  %1 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8292
  %sb_hybrid1 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %1, i32 0, i32 17, !dbg !8293
  %arraydecay2 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid1, i32 0, i32 0, !dbg !8292
  %add.ptr3 = getelementptr inbounds float, float* %arraydecay2, i64 36, !dbg !8294
  store float* %add.ptr3, float** %ptr1, align 8, !dbg !8295
  br label %while.cond, !dbg !8296

while.cond:                                       ; preds = %if.end, %entry
  %2 = load float*, float** %ptr, align 8, !dbg !8297
  %3 = load float*, float** %ptr1, align 8, !dbg !8299
  %cmp = icmp uge float* %2, %3, !dbg !8300
  br i1 %cmp, label %while.body, label %while.end, !dbg !8301

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %p, metadata !8302, metadata !2031), !dbg !8304
  %4 = load float*, float** %ptr, align 8, !dbg !8305
  %add.ptr4 = getelementptr inbounds float, float* %4, i64 -6, !dbg !8305
  store float* %add.ptr4, float** %ptr, align 8, !dbg !8305
  %5 = load float*, float** %ptr, align 8, !dbg !8306
  %6 = bitcast float* %5 to i32*, !dbg !8307
  store i32* %6, i32** %p, align 8, !dbg !8308
  %7 = load i32*, i32** %p, align 8, !dbg !8309
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !8309
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8309
  %9 = load i32*, i32** %p, align 8, !dbg !8311
  %arrayidx5 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !8311
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !8311
  %or = or i32 %8, %10, !dbg !8312
  %11 = load i32*, i32** %p, align 8, !dbg !8313
  %arrayidx6 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !8313
  %12 = load i32, i32* %arrayidx6, align 4, !dbg !8313
  %or7 = or i32 %or, %12, !dbg !8314
  %13 = load i32*, i32** %p, align 8, !dbg !8315
  %arrayidx8 = getelementptr inbounds i32, i32* %13, i64 3, !dbg !8315
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !8315
  %or9 = or i32 %or7, %14, !dbg !8316
  %15 = load i32*, i32** %p, align 8, !dbg !8317
  %arrayidx10 = getelementptr inbounds i32, i32* %15, i64 4, !dbg !8317
  %16 = load i32, i32* %arrayidx10, align 4, !dbg !8317
  %or11 = or i32 %or9, %16, !dbg !8318
  %17 = load i32*, i32** %p, align 8, !dbg !8319
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i64 5, !dbg !8319
  %18 = load i32, i32* %arrayidx12, align 4, !dbg !8319
  %or13 = or i32 %or11, %18, !dbg !8320
  %tobool = icmp ne i32 %or13, 0, !dbg !8320
  br i1 %tobool, label %if.then, label %if.end, !dbg !8321

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !8322

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !8323, !llvm.loop !8325

while.end:                                        ; preds = %if.then, %while.cond
  %19 = load float*, float** %ptr, align 8, !dbg !8326
  %20 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8327
  %sb_hybrid14 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %20, i32 0, i32 17, !dbg !8328
  %arraydecay15 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid14, i32 0, i32 0, !dbg !8327
  %sub.ptr.lhs.cast = ptrtoint float* %19 to i64, !dbg !8329
  %sub.ptr.rhs.cast = ptrtoint float* %arraydecay15 to i64, !dbg !8329
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8329
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4, !dbg !8329
  %div = sdiv i64 %sub.ptr.div, 18, !dbg !8330
  %add = add nsw i64 %div, 1, !dbg !8331
  %conv = trunc i64 %add to i32, !dbg !8332
  store i32 %conv, i32* %sblimit, align 4, !dbg !8333
  %21 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8334
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %21, i32 0, i32 5, !dbg !8336
  %22 = load i8, i8* %block_type, align 4, !dbg !8336
  %conv16 = zext i8 %22 to i32, !dbg !8334
  %cmp17 = icmp eq i32 %conv16, 2, !dbg !8337
  br i1 %cmp17, label %if.then19, label %if.else23, !dbg !8338

if.then19:                                        ; preds = %while.end
  %23 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8339
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %23, i32 0, i32 6, !dbg !8342
  %24 = load i8, i8* %switch_point, align 1, !dbg !8342
  %tobool20 = icmp ne i8 %24, 0, !dbg !8339
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !8343

if.then21:                                        ; preds = %if.then19
  store i32 2, i32* %mdct_long_end, align 4, !dbg !8344
  br label %if.end22, !dbg !8345

if.else:                                          ; preds = %if.then19
  store i32 0, i32* %mdct_long_end, align 4, !dbg !8346
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then21
  br label %if.end24, !dbg !8347

if.else23:                                        ; preds = %while.end
  %25 = load i32, i32* %sblimit, align 4, !dbg !8348
  store i32 %25, i32* %mdct_long_end, align 4, !dbg !8350
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.end22
  %26 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8351
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %26, i32 0, i32 27, !dbg !8352
  %imdct36_blocks_float = getelementptr inbounds %struct.MPADSPContext, %struct.MPADSPContext* %mpadsp, i32 0, i32 4, !dbg !8353
  %27 = load void (float*, float*, float*, i32, i32, i32)*, void (float*, float*, float*, i32, i32, i32)** %imdct36_blocks_float, align 8, !dbg !8353
  %28 = load float*, float** %sb_samples.addr, align 8, !dbg !8354
  %29 = load float*, float** %mdct_buf.addr, align 8, !dbg !8355
  %30 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8356
  %sb_hybrid25 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %30, i32 0, i32 17, !dbg !8357
  %arraydecay26 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid25, i32 0, i32 0, !dbg !8356
  %31 = load i32, i32* %mdct_long_end, align 4, !dbg !8358
  %32 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8359
  %switch_point27 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %32, i32 0, i32 6, !dbg !8360
  %33 = load i8, i8* %switch_point27, align 1, !dbg !8360
  %conv28 = zext i8 %33 to i32, !dbg !8359
  %34 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8361
  %block_type29 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %34, i32 0, i32 5, !dbg !8362
  %35 = load i8, i8* %block_type29, align 4, !dbg !8362
  %conv30 = zext i8 %35 to i32, !dbg !8361
  call void %27(float* %28, float* %29, float* %arraydecay26, i32 %31, i32 %conv28, i32 %conv30), !dbg !8351
  %36 = load float*, float** %mdct_buf.addr, align 8, !dbg !8363
  %37 = load i32, i32* %mdct_long_end, align 4, !dbg !8364
  %shr = ashr i32 %37, 2, !dbg !8365
  %mul = mul nsw i32 72, %shr, !dbg !8366
  %idx.ext = sext i32 %mul to i64, !dbg !8367
  %add.ptr31 = getelementptr inbounds float, float* %36, i64 %idx.ext, !dbg !8367
  %38 = load i32, i32* %mdct_long_end, align 4, !dbg !8368
  %and = and i32 %38, 3, !dbg !8369
  %idx.ext32 = sext i32 %and to i64, !dbg !8370
  %add.ptr33 = getelementptr inbounds float, float* %add.ptr31, i64 %idx.ext32, !dbg !8370
  store float* %add.ptr33, float** %buf, align 8, !dbg !8371
  %39 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8372
  %sb_hybrid34 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %39, i32 0, i32 17, !dbg !8373
  %arraydecay35 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid34, i32 0, i32 0, !dbg !8372
  %40 = load i32, i32* %mdct_long_end, align 4, !dbg !8374
  %mul36 = mul nsw i32 18, %40, !dbg !8375
  %idx.ext37 = sext i32 %mul36 to i64, !dbg !8376
  %add.ptr38 = getelementptr inbounds float, float* %arraydecay35, i64 %idx.ext37, !dbg !8376
  store float* %add.ptr38, float** %ptr, align 8, !dbg !8377
  %41 = load i32, i32* %mdct_long_end, align 4, !dbg !8378
  store i32 %41, i32* %j, align 4, !dbg !8380
  br label %for.cond, !dbg !8381

for.cond:                                         ; preds = %for.inc168, %if.end24
  %42 = load i32, i32* %j, align 4, !dbg !8382
  %43 = load i32, i32* %sblimit, align 4, !dbg !8385
  %cmp39 = icmp slt i32 %42, %43, !dbg !8386
  br i1 %cmp39, label %for.body, label %for.end170, !dbg !8387

for.body:                                         ; preds = %for.cond
  %44 = load i32, i32* %j, align 4, !dbg !8388
  %and41 = and i32 %44, 1, !dbg !8390
  %sub = sub nsw i32 0, %and41, !dbg !8391
  %and42 = and i32 4, %sub, !dbg !8392
  %add43 = add nsw i32 2, %and42, !dbg !8393
  %idxprom = sext i32 %add43 to i64, !dbg !8394
  %arrayidx44 = getelementptr inbounds [8 x [40 x float]], [8 x [40 x float]]* @ff_mdct_win_float, i64 0, i64 %idxprom, !dbg !8394
  %arraydecay45 = getelementptr inbounds [40 x float], [40 x float]* %arrayidx44, i32 0, i32 0, !dbg !8394
  store float* %arraydecay45, float** %win, align 8, !dbg !8395
  %45 = load float*, float** %sb_samples.addr, align 8, !dbg !8396
  %46 = load i32, i32* %j, align 4, !dbg !8397
  %idx.ext46 = sext i32 %46 to i64, !dbg !8398
  %add.ptr47 = getelementptr inbounds float, float* %45, i64 %idx.ext46, !dbg !8398
  store float* %add.ptr47, float** %out_ptr, align 8, !dbg !8399
  store i32 0, i32* %i, align 4, !dbg !8400
  br label %for.cond48, !dbg !8402

for.cond48:                                       ; preds = %for.inc, %for.body
  %47 = load i32, i32* %i, align 4, !dbg !8403
  %cmp49 = icmp slt i32 %47, 6, !dbg !8406
  br i1 %cmp49, label %for.body51, label %for.end, !dbg !8407

for.body51:                                       ; preds = %for.cond48
  %48 = load i32, i32* %i, align 4, !dbg !8408
  %mul52 = mul nsw i32 4, %48, !dbg !8410
  %idxprom53 = sext i32 %mul52 to i64, !dbg !8411
  %49 = load float*, float** %buf, align 8, !dbg !8411
  %arrayidx54 = getelementptr inbounds float, float* %49, i64 %idxprom53, !dbg !8411
  %50 = load float, float* %arrayidx54, align 4, !dbg !8411
  %51 = load float*, float** %out_ptr, align 8, !dbg !8412
  store float %50, float* %51, align 4, !dbg !8413
  %52 = load float*, float** %out_ptr, align 8, !dbg !8414
  %add.ptr55 = getelementptr inbounds float, float* %52, i64 32, !dbg !8414
  store float* %add.ptr55, float** %out_ptr, align 8, !dbg !8414
  br label %for.inc, !dbg !8415

for.inc:                                          ; preds = %for.body51
  %53 = load i32, i32* %i, align 4, !dbg !8416
  %inc = add nsw i32 %53, 1, !dbg !8416
  store i32 %inc, i32* %i, align 4, !dbg !8416
  br label %for.cond48, !dbg !8418, !llvm.loop !8419

for.end:                                          ; preds = %for.cond48
  %arraydecay56 = getelementptr inbounds [12 x float], [12 x float]* %out2, i32 0, i32 0, !dbg !8421
  %54 = load float*, float** %ptr, align 8, !dbg !8422
  %add.ptr57 = getelementptr inbounds float, float* %54, i64 0, !dbg !8423
  call void @imdct12(float* %arraydecay56, float* %add.ptr57), !dbg !8424
  store i32 0, i32* %i, align 4, !dbg !8425
  br label %for.cond58, !dbg !8427

for.cond58:                                       ; preds = %for.inc86, %for.end
  %55 = load i32, i32* %i, align 4, !dbg !8428
  %cmp59 = icmp slt i32 %55, 6, !dbg !8431
  br i1 %cmp59, label %for.body61, label %for.end88, !dbg !8432

for.body61:                                       ; preds = %for.cond58
  %56 = load i32, i32* %i, align 4, !dbg !8433
  %idxprom62 = sext i32 %56 to i64, !dbg !8435
  %57 = load float*, float** %win, align 8, !dbg !8435
  %arrayidx63 = getelementptr inbounds float, float* %57, i64 %idxprom62, !dbg !8435
  %58 = load float, float* %arrayidx63, align 4, !dbg !8435
  %mul64 = fmul float 1.000000e+00, %58, !dbg !8436
  %59 = load i32, i32* %i, align 4, !dbg !8437
  %idxprom65 = sext i32 %59 to i64, !dbg !8438
  %arrayidx66 = getelementptr inbounds [12 x float], [12 x float]* %out2, i64 0, i64 %idxprom65, !dbg !8438
  %60 = load float, float* %arrayidx66, align 4, !dbg !8438
  %mul67 = fmul float %mul64, %60, !dbg !8439
  %61 = load i32, i32* %i, align 4, !dbg !8440
  %add68 = add nsw i32 %61, 6, !dbg !8441
  %mul69 = mul nsw i32 4, %add68, !dbg !8442
  %idxprom70 = sext i32 %mul69 to i64, !dbg !8443
  %62 = load float*, float** %buf, align 8, !dbg !8443
  %arrayidx71 = getelementptr inbounds float, float* %62, i64 %idxprom70, !dbg !8443
  %63 = load float, float* %arrayidx71, align 4, !dbg !8443
  %add72 = fadd float %mul67, %63, !dbg !8444
  %64 = load float*, float** %out_ptr, align 8, !dbg !8445
  store float %add72, float* %64, align 4, !dbg !8446
  %65 = load i32, i32* %i, align 4, !dbg !8447
  %add73 = add nsw i32 %65, 6, !dbg !8448
  %idxprom74 = sext i32 %add73 to i64, !dbg !8449
  %66 = load float*, float** %win, align 8, !dbg !8449
  %arrayidx75 = getelementptr inbounds float, float* %66, i64 %idxprom74, !dbg !8449
  %67 = load float, float* %arrayidx75, align 4, !dbg !8449
  %mul76 = fmul float 1.000000e+00, %67, !dbg !8450
  %68 = load i32, i32* %i, align 4, !dbg !8451
  %add77 = add nsw i32 %68, 6, !dbg !8452
  %idxprom78 = sext i32 %add77 to i64, !dbg !8453
  %arrayidx79 = getelementptr inbounds [12 x float], [12 x float]* %out2, i64 0, i64 %idxprom78, !dbg !8453
  %69 = load float, float* %arrayidx79, align 4, !dbg !8453
  %mul80 = fmul float %mul76, %69, !dbg !8454
  %70 = load i32, i32* %i, align 4, !dbg !8455
  %add81 = add nsw i32 %70, 12, !dbg !8456
  %mul82 = mul nsw i32 4, %add81, !dbg !8457
  %idxprom83 = sext i32 %mul82 to i64, !dbg !8458
  %71 = load float*, float** %buf, align 8, !dbg !8458
  %arrayidx84 = getelementptr inbounds float, float* %71, i64 %idxprom83, !dbg !8458
  store float %mul80, float* %arrayidx84, align 4, !dbg !8459
  %72 = load float*, float** %out_ptr, align 8, !dbg !8460
  %add.ptr85 = getelementptr inbounds float, float* %72, i64 32, !dbg !8460
  store float* %add.ptr85, float** %out_ptr, align 8, !dbg !8460
  br label %for.inc86, !dbg !8461

for.inc86:                                        ; preds = %for.body61
  %73 = load i32, i32* %i, align 4, !dbg !8462
  %inc87 = add nsw i32 %73, 1, !dbg !8462
  store i32 %inc87, i32* %i, align 4, !dbg !8462
  br label %for.cond58, !dbg !8464, !llvm.loop !8465

for.end88:                                        ; preds = %for.cond58
  %arraydecay89 = getelementptr inbounds [12 x float], [12 x float]* %out2, i32 0, i32 0, !dbg !8467
  %74 = load float*, float** %ptr, align 8, !dbg !8468
  %add.ptr90 = getelementptr inbounds float, float* %74, i64 1, !dbg !8469
  call void @imdct12(float* %arraydecay89, float* %add.ptr90), !dbg !8470
  store i32 0, i32* %i, align 4, !dbg !8471
  br label %for.cond91, !dbg !8473

for.cond91:                                       ; preds = %for.inc119, %for.end88
  %75 = load i32, i32* %i, align 4, !dbg !8474
  %cmp92 = icmp slt i32 %75, 6, !dbg !8477
  br i1 %cmp92, label %for.body94, label %for.end121, !dbg !8478

for.body94:                                       ; preds = %for.cond91
  %76 = load i32, i32* %i, align 4, !dbg !8479
  %idxprom95 = sext i32 %76 to i64, !dbg !8481
  %77 = load float*, float** %win, align 8, !dbg !8481
  %arrayidx96 = getelementptr inbounds float, float* %77, i64 %idxprom95, !dbg !8481
  %78 = load float, float* %arrayidx96, align 4, !dbg !8481
  %mul97 = fmul float 1.000000e+00, %78, !dbg !8482
  %79 = load i32, i32* %i, align 4, !dbg !8483
  %idxprom98 = sext i32 %79 to i64, !dbg !8484
  %arrayidx99 = getelementptr inbounds [12 x float], [12 x float]* %out2, i64 0, i64 %idxprom98, !dbg !8484
  %80 = load float, float* %arrayidx99, align 4, !dbg !8484
  %mul100 = fmul float %mul97, %80, !dbg !8485
  %81 = load i32, i32* %i, align 4, !dbg !8486
  %add101 = add nsw i32 %81, 12, !dbg !8487
  %mul102 = mul nsw i32 4, %add101, !dbg !8488
  %idxprom103 = sext i32 %mul102 to i64, !dbg !8489
  %82 = load float*, float** %buf, align 8, !dbg !8489
  %arrayidx104 = getelementptr inbounds float, float* %82, i64 %idxprom103, !dbg !8489
  %83 = load float, float* %arrayidx104, align 4, !dbg !8489
  %add105 = fadd float %mul100, %83, !dbg !8490
  %84 = load float*, float** %out_ptr, align 8, !dbg !8491
  store float %add105, float* %84, align 4, !dbg !8492
  %85 = load i32, i32* %i, align 4, !dbg !8493
  %add106 = add nsw i32 %85, 6, !dbg !8494
  %idxprom107 = sext i32 %add106 to i64, !dbg !8495
  %86 = load float*, float** %win, align 8, !dbg !8495
  %arrayidx108 = getelementptr inbounds float, float* %86, i64 %idxprom107, !dbg !8495
  %87 = load float, float* %arrayidx108, align 4, !dbg !8495
  %mul109 = fmul float 1.000000e+00, %87, !dbg !8496
  %88 = load i32, i32* %i, align 4, !dbg !8497
  %add110 = add nsw i32 %88, 6, !dbg !8498
  %idxprom111 = sext i32 %add110 to i64, !dbg !8499
  %arrayidx112 = getelementptr inbounds [12 x float], [12 x float]* %out2, i64 0, i64 %idxprom111, !dbg !8499
  %89 = load float, float* %arrayidx112, align 4, !dbg !8499
  %mul113 = fmul float %mul109, %89, !dbg !8500
  %90 = load i32, i32* %i, align 4, !dbg !8501
  %add114 = add nsw i32 %90, 0, !dbg !8502
  %mul115 = mul nsw i32 4, %add114, !dbg !8503
  %idxprom116 = sext i32 %mul115 to i64, !dbg !8504
  %91 = load float*, float** %buf, align 8, !dbg !8504
  %arrayidx117 = getelementptr inbounds float, float* %91, i64 %idxprom116, !dbg !8504
  store float %mul113, float* %arrayidx117, align 4, !dbg !8505
  %92 = load float*, float** %out_ptr, align 8, !dbg !8506
  %add.ptr118 = getelementptr inbounds float, float* %92, i64 32, !dbg !8506
  store float* %add.ptr118, float** %out_ptr, align 8, !dbg !8506
  br label %for.inc119, !dbg !8507

for.inc119:                                       ; preds = %for.body94
  %93 = load i32, i32* %i, align 4, !dbg !8508
  %inc120 = add nsw i32 %93, 1, !dbg !8508
  store i32 %inc120, i32* %i, align 4, !dbg !8508
  br label %for.cond91, !dbg !8510, !llvm.loop !8511

for.end121:                                       ; preds = %for.cond91
  %arraydecay122 = getelementptr inbounds [12 x float], [12 x float]* %out2, i32 0, i32 0, !dbg !8513
  %94 = load float*, float** %ptr, align 8, !dbg !8514
  %add.ptr123 = getelementptr inbounds float, float* %94, i64 2, !dbg !8515
  call void @imdct12(float* %arraydecay122, float* %add.ptr123), !dbg !8516
  store i32 0, i32* %i, align 4, !dbg !8517
  br label %for.cond124, !dbg !8519

for.cond124:                                      ; preds = %for.inc159, %for.end121
  %95 = load i32, i32* %i, align 4, !dbg !8520
  %cmp125 = icmp slt i32 %95, 6, !dbg !8523
  br i1 %cmp125, label %for.body127, label %for.end161, !dbg !8524

for.body127:                                      ; preds = %for.cond124
  %96 = load i32, i32* %i, align 4, !dbg !8525
  %idxprom128 = sext i32 %96 to i64, !dbg !8527
  %97 = load float*, float** %win, align 8, !dbg !8527
  %arrayidx129 = getelementptr inbounds float, float* %97, i64 %idxprom128, !dbg !8527
  %98 = load float, float* %arrayidx129, align 4, !dbg !8527
  %mul130 = fmul float 1.000000e+00, %98, !dbg !8528
  %99 = load i32, i32* %i, align 4, !dbg !8529
  %idxprom131 = sext i32 %99 to i64, !dbg !8530
  %arrayidx132 = getelementptr inbounds [12 x float], [12 x float]* %out2, i64 0, i64 %idxprom131, !dbg !8530
  %100 = load float, float* %arrayidx132, align 4, !dbg !8530
  %mul133 = fmul float %mul130, %100, !dbg !8531
  %101 = load i32, i32* %i, align 4, !dbg !8532
  %add134 = add nsw i32 %101, 0, !dbg !8533
  %mul135 = mul nsw i32 4, %add134, !dbg !8534
  %idxprom136 = sext i32 %mul135 to i64, !dbg !8535
  %102 = load float*, float** %buf, align 8, !dbg !8535
  %arrayidx137 = getelementptr inbounds float, float* %102, i64 %idxprom136, !dbg !8535
  %103 = load float, float* %arrayidx137, align 4, !dbg !8535
  %add138 = fadd float %mul133, %103, !dbg !8536
  %104 = load i32, i32* %i, align 4, !dbg !8537
  %add139 = add nsw i32 %104, 0, !dbg !8538
  %mul140 = mul nsw i32 4, %add139, !dbg !8539
  %idxprom141 = sext i32 %mul140 to i64, !dbg !8540
  %105 = load float*, float** %buf, align 8, !dbg !8540
  %arrayidx142 = getelementptr inbounds float, float* %105, i64 %idxprom141, !dbg !8540
  store float %add138, float* %arrayidx142, align 4, !dbg !8541
  %106 = load i32, i32* %i, align 4, !dbg !8542
  %add143 = add nsw i32 %106, 6, !dbg !8543
  %idxprom144 = sext i32 %add143 to i64, !dbg !8544
  %107 = load float*, float** %win, align 8, !dbg !8544
  %arrayidx145 = getelementptr inbounds float, float* %107, i64 %idxprom144, !dbg !8544
  %108 = load float, float* %arrayidx145, align 4, !dbg !8544
  %mul146 = fmul float 1.000000e+00, %108, !dbg !8545
  %109 = load i32, i32* %i, align 4, !dbg !8546
  %add147 = add nsw i32 %109, 6, !dbg !8547
  %idxprom148 = sext i32 %add147 to i64, !dbg !8548
  %arrayidx149 = getelementptr inbounds [12 x float], [12 x float]* %out2, i64 0, i64 %idxprom148, !dbg !8548
  %110 = load float, float* %arrayidx149, align 4, !dbg !8548
  %mul150 = fmul float %mul146, %110, !dbg !8549
  %111 = load i32, i32* %i, align 4, !dbg !8550
  %add151 = add nsw i32 %111, 6, !dbg !8551
  %mul152 = mul nsw i32 4, %add151, !dbg !8552
  %idxprom153 = sext i32 %mul152 to i64, !dbg !8553
  %112 = load float*, float** %buf, align 8, !dbg !8553
  %arrayidx154 = getelementptr inbounds float, float* %112, i64 %idxprom153, !dbg !8553
  store float %mul150, float* %arrayidx154, align 4, !dbg !8554
  %113 = load i32, i32* %i, align 4, !dbg !8555
  %add155 = add nsw i32 %113, 12, !dbg !8556
  %mul156 = mul nsw i32 4, %add155, !dbg !8557
  %idxprom157 = sext i32 %mul156 to i64, !dbg !8558
  %114 = load float*, float** %buf, align 8, !dbg !8558
  %arrayidx158 = getelementptr inbounds float, float* %114, i64 %idxprom157, !dbg !8558
  store float 0.000000e+00, float* %arrayidx158, align 4, !dbg !8559
  br label %for.inc159, !dbg !8560

for.inc159:                                       ; preds = %for.body127
  %115 = load i32, i32* %i, align 4, !dbg !8561
  %inc160 = add nsw i32 %115, 1, !dbg !8561
  store i32 %inc160, i32* %i, align 4, !dbg !8561
  br label %for.cond124, !dbg !8563, !llvm.loop !8564

for.end161:                                       ; preds = %for.cond124
  %116 = load float*, float** %ptr, align 8, !dbg !8566
  %add.ptr162 = getelementptr inbounds float, float* %116, i64 18, !dbg !8566
  store float* %add.ptr162, float** %ptr, align 8, !dbg !8566
  %117 = load i32, i32* %j, align 4, !dbg !8567
  %and163 = and i32 %117, 3, !dbg !8568
  %cmp164 = icmp ne i32 %and163, 3, !dbg !8569
  %cond = select i1 %cmp164, i32 1, i32 69, !dbg !8570
  %118 = load float*, float** %buf, align 8, !dbg !8571
  %idx.ext166 = sext i32 %cond to i64, !dbg !8571
  %add.ptr167 = getelementptr inbounds float, float* %118, i64 %idx.ext166, !dbg !8571
  store float* %add.ptr167, float** %buf, align 8, !dbg !8571
  br label %for.inc168, !dbg !8572

for.inc168:                                       ; preds = %for.end161
  %119 = load i32, i32* %j, align 4, !dbg !8573
  %inc169 = add nsw i32 %119, 1, !dbg !8573
  store i32 %inc169, i32* %j, align 4, !dbg !8573
  br label %for.cond, !dbg !8575, !llvm.loop !8576

for.end170:                                       ; preds = %for.cond
  %120 = load i32, i32* %sblimit, align 4, !dbg !8578
  store i32 %120, i32* %j, align 4, !dbg !8580
  br label %for.cond171, !dbg !8581

for.cond171:                                      ; preds = %for.inc197, %for.end170
  %121 = load i32, i32* %j, align 4, !dbg !8582
  %cmp172 = icmp slt i32 %121, 32, !dbg !8585
  br i1 %cmp172, label %for.body174, label %for.end199, !dbg !8586

for.body174:                                      ; preds = %for.cond171
  %122 = load float*, float** %sb_samples.addr, align 8, !dbg !8587
  %123 = load i32, i32* %j, align 4, !dbg !8589
  %idx.ext175 = sext i32 %123 to i64, !dbg !8590
  %add.ptr176 = getelementptr inbounds float, float* %122, i64 %idx.ext175, !dbg !8590
  store float* %add.ptr176, float** %out_ptr, align 8, !dbg !8591
  store i32 0, i32* %i, align 4, !dbg !8592
  br label %for.cond177, !dbg !8594

for.cond177:                                      ; preds = %for.inc188, %for.body174
  %124 = load i32, i32* %i, align 4, !dbg !8595
  %cmp178 = icmp slt i32 %124, 18, !dbg !8598
  br i1 %cmp178, label %for.body180, label %for.end190, !dbg !8599

for.body180:                                      ; preds = %for.cond177
  %125 = load i32, i32* %i, align 4, !dbg !8600
  %mul181 = mul nsw i32 4, %125, !dbg !8602
  %idxprom182 = sext i32 %mul181 to i64, !dbg !8603
  %126 = load float*, float** %buf, align 8, !dbg !8603
  %arrayidx183 = getelementptr inbounds float, float* %126, i64 %idxprom182, !dbg !8603
  %127 = load float, float* %arrayidx183, align 4, !dbg !8603
  %128 = load float*, float** %out_ptr, align 8, !dbg !8604
  store float %127, float* %128, align 4, !dbg !8605
  %129 = load i32, i32* %i, align 4, !dbg !8606
  %mul184 = mul nsw i32 4, %129, !dbg !8607
  %idxprom185 = sext i32 %mul184 to i64, !dbg !8608
  %130 = load float*, float** %buf, align 8, !dbg !8608
  %arrayidx186 = getelementptr inbounds float, float* %130, i64 %idxprom185, !dbg !8608
  store float 0.000000e+00, float* %arrayidx186, align 4, !dbg !8609
  %131 = load float*, float** %out_ptr, align 8, !dbg !8610
  %add.ptr187 = getelementptr inbounds float, float* %131, i64 32, !dbg !8610
  store float* %add.ptr187, float** %out_ptr, align 8, !dbg !8610
  br label %for.inc188, !dbg !8611

for.inc188:                                       ; preds = %for.body180
  %132 = load i32, i32* %i, align 4, !dbg !8612
  %inc189 = add nsw i32 %132, 1, !dbg !8612
  store i32 %inc189, i32* %i, align 4, !dbg !8612
  br label %for.cond177, !dbg !8614, !llvm.loop !8615

for.end190:                                       ; preds = %for.cond177
  %133 = load i32, i32* %j, align 4, !dbg !8617
  %and191 = and i32 %133, 3, !dbg !8618
  %cmp192 = icmp ne i32 %and191, 3, !dbg !8619
  %cond194 = select i1 %cmp192, i32 1, i32 69, !dbg !8620
  %134 = load float*, float** %buf, align 8, !dbg !8621
  %idx.ext195 = sext i32 %cond194 to i64, !dbg !8621
  %add.ptr196 = getelementptr inbounds float, float* %134, i64 %idx.ext195, !dbg !8621
  store float* %add.ptr196, float** %buf, align 8, !dbg !8621
  br label %for.inc197, !dbg !8622

for.inc197:                                       ; preds = %for.end190
  %135 = load i32, i32* %j, align 4, !dbg !8623
  %inc198 = add nsw i32 %135, 1, !dbg !8623
  store i32 %inc198, i32* %j, align 4, !dbg !8623
  br label %for.cond171, !dbg !8625, !llvm.loop !8626

for.end199:                                       ; preds = %for.cond171
  ret void, !dbg !8628
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #7 !dbg !8629 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5610, metadata !2031), !dbg !8630
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5620, metadata !2031), !dbg !8632
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5622, metadata !2031), !dbg !8633
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8634, metadata !2031), !dbg !8635
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8636, metadata !2031), !dbg !8637
  %0 = load i32, i32* %n.addr, align 4, !dbg !8638
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8639
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !8640
  %2 = load i32, i32* %index, align 8, !dbg !8640
  %sub = sub nsw i32 0, %2, !dbg !8641
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8642
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !8643
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8643
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8644
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !8645
  %6 = load i32, i32* %index1, align 8, !dbg !8645
  %sub2 = sub nsw i32 %4, %6, !dbg !8646
  store i32 %0, i32* %a.addr.i, align 4, !dbg !8647
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !8647
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !8647
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !8648
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !8649
  %cmp.i = icmp slt i32 %7, %8, !dbg !8650
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8651

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !8652
  store i32 %9, i32* %retval.i, align 4, !dbg !8653
  br label %av_clip_c.exit, !dbg !8653

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !8654
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !8655
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !8656
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8657

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !8658
  store i32 %12, i32* %retval.i, align 4, !dbg !8659
  br label %av_clip_c.exit, !dbg !8659

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !8660
  store i32 %13, i32* %retval.i, align 4, !dbg !8661
  br label %av_clip_c.exit, !dbg !8661

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !8662
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8663
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8664
  %16 = load i32, i32* %index3, align 8, !dbg !8665
  %add = add nsw i32 %16, %14, !dbg !8665
  store i32 %add, i32* %index3, align 8, !dbg !8665
  ret void, !dbg !8666
}

; Function Attrs: nounwind uwtable
define internal void @exponents_from_scale_factors(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, i16* %exponents) #1 !dbg !8667 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %exponents.addr = alloca i16*, align 8
  %bstab = alloca i8*, align 8
  %pretab = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %v0 = alloca i32, align 4
  %shift = alloca i32, align 4
  %gain = alloca i32, align 4
  %gains = alloca [3 x i32], align 4
  %exp_ptr = alloca i16*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8670, metadata !2031), !dbg !8671
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8672, metadata !2031), !dbg !8673
  store i16* %exponents, i16** %exponents.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %exponents.addr, metadata !8674, metadata !2031), !dbg !8675
  call void @llvm.dbg.declare(metadata i8** %bstab, metadata !8676, metadata !2031), !dbg !8677
  call void @llvm.dbg.declare(metadata i8** %pretab, metadata !8678, metadata !2031), !dbg !8679
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8680, metadata !2031), !dbg !8681
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8682, metadata !2031), !dbg !8683
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8684, metadata !2031), !dbg !8685
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8686, metadata !2031), !dbg !8687
  call void @llvm.dbg.declare(metadata i32* %l, metadata !8688, metadata !2031), !dbg !8689
  call void @llvm.dbg.declare(metadata i32* %v0, metadata !8690, metadata !2031), !dbg !8691
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !8692, metadata !2031), !dbg !8693
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !8694, metadata !2031), !dbg !8695
  call void @llvm.dbg.declare(metadata [3 x i32]* %gains, metadata !8696, metadata !2031), !dbg !8697
  call void @llvm.dbg.declare(metadata i16** %exp_ptr, metadata !8698, metadata !2031), !dbg !8699
  %0 = load i16*, i16** %exponents.addr, align 8, !dbg !8700
  store i16* %0, i16** %exp_ptr, align 8, !dbg !8701
  %1 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8702
  %global_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %1, i32 0, i32 3, !dbg !8703
  %2 = load i32, i32* %global_gain, align 4, !dbg !8703
  %sub = sub nsw i32 %2, 210, !dbg !8704
  store i32 %sub, i32* %gain, align 4, !dbg !8705
  %3 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8706
  %scalefac_scale = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %3, i32 0, i32 9, !dbg !8707
  %4 = load i8, i8* %scalefac_scale, align 16, !dbg !8707
  %conv = zext i8 %4 to i32, !dbg !8706
  %add = add nsw i32 %conv, 1, !dbg !8708
  store i32 %add, i32* %shift, align 4, !dbg !8709
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8710
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 4, !dbg !8711
  %6 = load i32, i32* %sample_rate_index, align 16, !dbg !8711
  %idxprom = sext i32 %6 to i64, !dbg !8712
  %arrayidx = getelementptr inbounds [9 x [22 x i8]], [9 x [22 x i8]]* @band_size_long, i64 0, i64 %idxprom, !dbg !8712
  %arraydecay = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx, i32 0, i32 0, !dbg !8712
  store i8* %arraydecay, i8** %bstab, align 8, !dbg !8713
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8714
  %preflag = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 12, !dbg !8715
  %8 = load i32, i32* %preflag, align 16, !dbg !8715
  %idxprom1 = sext i32 %8 to i64, !dbg !8716
  %arrayidx2 = getelementptr inbounds [2 x [22 x i8]], [2 x [22 x i8]]* @mpa_pretab, i64 0, i64 %idxprom1, !dbg !8716
  %arraydecay3 = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx2, i32 0, i32 0, !dbg !8716
  store i8* %arraydecay3, i8** %pretab, align 8, !dbg !8717
  store i32 0, i32* %i, align 4, !dbg !8718
  br label %for.cond, !dbg !8720

for.cond:                                         ; preds = %for.inc22, %entry
  %9 = load i32, i32* %i, align 4, !dbg !8721
  %10 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8724
  %long_end = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %10, i32 0, i32 14, !dbg !8725
  %11 = load i32, i32* %long_end, align 8, !dbg !8725
  %cmp = icmp slt i32 %9, %11, !dbg !8726
  br i1 %cmp, label %for.body, label %for.end23, !dbg !8727

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %gain, align 4, !dbg !8728
  %13 = load i32, i32* %i, align 4, !dbg !8730
  %idxprom5 = sext i32 %13 to i64, !dbg !8731
  %14 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8731
  %scale_factors = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %14, i32 0, i32 15, !dbg !8732
  %arrayidx6 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors, i64 0, i64 %idxprom5, !dbg !8731
  %15 = load i8, i8* %arrayidx6, align 1, !dbg !8731
  %conv7 = zext i8 %15 to i32, !dbg !8731
  %16 = load i32, i32* %i, align 4, !dbg !8733
  %idxprom8 = sext i32 %16 to i64, !dbg !8734
  %17 = load i8*, i8** %pretab, align 8, !dbg !8734
  %arrayidx9 = getelementptr inbounds i8, i8* %17, i64 %idxprom8, !dbg !8734
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !8734
  %conv10 = zext i8 %18 to i32, !dbg !8734
  %add11 = add nsw i32 %conv7, %conv10, !dbg !8735
  %19 = load i32, i32* %shift, align 4, !dbg !8736
  %shl = shl i32 %add11, %19, !dbg !8737
  %sub12 = sub nsw i32 %12, %shl, !dbg !8738
  %add13 = add nsw i32 %sub12, 400, !dbg !8739
  store i32 %add13, i32* %v0, align 4, !dbg !8740
  %20 = load i32, i32* %i, align 4, !dbg !8741
  %idxprom14 = sext i32 %20 to i64, !dbg !8742
  %21 = load i8*, i8** %bstab, align 8, !dbg !8742
  %arrayidx15 = getelementptr inbounds i8, i8* %21, i64 %idxprom14, !dbg !8742
  %22 = load i8, i8* %arrayidx15, align 1, !dbg !8742
  %conv16 = zext i8 %22 to i32, !dbg !8742
  store i32 %conv16, i32* %len, align 4, !dbg !8743
  %23 = load i32, i32* %len, align 4, !dbg !8744
  store i32 %23, i32* %j, align 4, !dbg !8746
  br label %for.cond17, !dbg !8747

for.cond17:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %j, align 4, !dbg !8748
  %cmp18 = icmp sgt i32 %24, 0, !dbg !8751
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !8752

for.body20:                                       ; preds = %for.cond17
  %25 = load i32, i32* %v0, align 4, !dbg !8753
  %conv21 = trunc i32 %25 to i16, !dbg !8753
  %26 = load i16*, i16** %exp_ptr, align 8, !dbg !8754
  %incdec.ptr = getelementptr inbounds i16, i16* %26, i32 1, !dbg !8754
  store i16* %incdec.ptr, i16** %exp_ptr, align 8, !dbg !8754
  store i16 %conv21, i16* %26, align 2, !dbg !8755
  br label %for.inc, !dbg !8756

for.inc:                                          ; preds = %for.body20
  %27 = load i32, i32* %j, align 4, !dbg !8757
  %dec = add nsw i32 %27, -1, !dbg !8757
  store i32 %dec, i32* %j, align 4, !dbg !8757
  br label %for.cond17, !dbg !8759, !llvm.loop !8760

for.end:                                          ; preds = %for.cond17
  br label %for.inc22, !dbg !8762

for.inc22:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !8763
  %inc = add nsw i32 %28, 1, !dbg !8763
  store i32 %inc, i32* %i, align 4, !dbg !8763
  br label %for.cond, !dbg !8765, !llvm.loop !8766

for.end23:                                        ; preds = %for.cond
  %29 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8768
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %29, i32 0, i32 13, !dbg !8770
  %30 = load i32, i32* %short_start, align 4, !dbg !8770
  %cmp24 = icmp slt i32 %30, 13, !dbg !8771
  br i1 %cmp24, label %if.then, label %if.end, !dbg !8772

if.then:                                          ; preds = %for.end23
  %31 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8773
  %sample_rate_index26 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %31, i32 0, i32 4, !dbg !8775
  %32 = load i32, i32* %sample_rate_index26, align 16, !dbg !8775
  %idxprom27 = sext i32 %32 to i64, !dbg !8776
  %arrayidx28 = getelementptr inbounds [9 x [13 x i8]], [9 x [13 x i8]]* @band_size_short, i64 0, i64 %idxprom27, !dbg !8776
  %arraydecay29 = getelementptr inbounds [13 x i8], [13 x i8]* %arrayidx28, i32 0, i32 0, !dbg !8776
  store i8* %arraydecay29, i8** %bstab, align 8, !dbg !8777
  %33 = load i32, i32* %gain, align 4, !dbg !8778
  %34 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8779
  %subblock_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %34, i32 0, i32 8, !dbg !8780
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain, i64 0, i64 0, !dbg !8779
  %35 = load i32, i32* %arrayidx30, align 4, !dbg !8779
  %shl31 = shl i32 %35, 3, !dbg !8781
  %sub32 = sub nsw i32 %33, %shl31, !dbg !8782
  %arrayidx33 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 0, !dbg !8783
  store i32 %sub32, i32* %arrayidx33, align 4, !dbg !8784
  %36 = load i32, i32* %gain, align 4, !dbg !8785
  %37 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8786
  %subblock_gain34 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %37, i32 0, i32 8, !dbg !8787
  %arrayidx35 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain34, i64 0, i64 1, !dbg !8786
  %38 = load i32, i32* %arrayidx35, align 4, !dbg !8786
  %shl36 = shl i32 %38, 3, !dbg !8788
  %sub37 = sub nsw i32 %36, %shl36, !dbg !8789
  %arrayidx38 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 1, !dbg !8790
  store i32 %sub37, i32* %arrayidx38, align 4, !dbg !8791
  %39 = load i32, i32* %gain, align 4, !dbg !8792
  %40 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8793
  %subblock_gain39 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %40, i32 0, i32 8, !dbg !8794
  %arrayidx40 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain39, i64 0, i64 2, !dbg !8793
  %41 = load i32, i32* %arrayidx40, align 4, !dbg !8793
  %shl41 = shl i32 %41, 3, !dbg !8795
  %sub42 = sub nsw i32 %39, %shl41, !dbg !8796
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 2, !dbg !8797
  store i32 %sub42, i32* %arrayidx43, align 4, !dbg !8798
  %42 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8799
  %long_end44 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %42, i32 0, i32 14, !dbg !8800
  %43 = load i32, i32* %long_end44, align 8, !dbg !8800
  store i32 %43, i32* %k, align 4, !dbg !8801
  %44 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8802
  %short_start45 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %44, i32 0, i32 13, !dbg !8804
  %45 = load i32, i32* %short_start45, align 4, !dbg !8804
  store i32 %45, i32* %i, align 4, !dbg !8805
  br label %for.cond46, !dbg !8806

for.cond46:                                       ; preds = %for.inc79, %if.then
  %46 = load i32, i32* %i, align 4, !dbg !8807
  %cmp47 = icmp slt i32 %46, 13, !dbg !8810
  br i1 %cmp47, label %for.body49, label %for.end81, !dbg !8811

for.body49:                                       ; preds = %for.cond46
  %47 = load i32, i32* %i, align 4, !dbg !8812
  %idxprom50 = sext i32 %47 to i64, !dbg !8814
  %48 = load i8*, i8** %bstab, align 8, !dbg !8814
  %arrayidx51 = getelementptr inbounds i8, i8* %48, i64 %idxprom50, !dbg !8814
  %49 = load i8, i8* %arrayidx51, align 1, !dbg !8814
  %conv52 = zext i8 %49 to i32, !dbg !8814
  store i32 %conv52, i32* %len, align 4, !dbg !8815
  store i32 0, i32* %l, align 4, !dbg !8816
  br label %for.cond53, !dbg !8818

for.cond53:                                       ; preds = %for.inc76, %for.body49
  %50 = load i32, i32* %l, align 4, !dbg !8819
  %cmp54 = icmp slt i32 %50, 3, !dbg !8822
  br i1 %cmp54, label %for.body56, label %for.end78, !dbg !8823

for.body56:                                       ; preds = %for.cond53
  %51 = load i32, i32* %l, align 4, !dbg !8824
  %idxprom57 = sext i32 %51 to i64, !dbg !8826
  %arrayidx58 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 %idxprom57, !dbg !8826
  %52 = load i32, i32* %arrayidx58, align 4, !dbg !8826
  %53 = load i32, i32* %k, align 4, !dbg !8827
  %inc59 = add nsw i32 %53, 1, !dbg !8827
  store i32 %inc59, i32* %k, align 4, !dbg !8827
  %idxprom60 = sext i32 %53 to i64, !dbg !8828
  %54 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8828
  %scale_factors61 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %54, i32 0, i32 15, !dbg !8829
  %arrayidx62 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors61, i64 0, i64 %idxprom60, !dbg !8828
  %55 = load i8, i8* %arrayidx62, align 1, !dbg !8828
  %conv63 = zext i8 %55 to i32, !dbg !8828
  %56 = load i32, i32* %shift, align 4, !dbg !8830
  %shl64 = shl i32 %conv63, %56, !dbg !8831
  %sub65 = sub nsw i32 %52, %shl64, !dbg !8832
  %add66 = add nsw i32 %sub65, 400, !dbg !8833
  store i32 %add66, i32* %v0, align 4, !dbg !8834
  %57 = load i32, i32* %len, align 4, !dbg !8835
  store i32 %57, i32* %j, align 4, !dbg !8837
  br label %for.cond67, !dbg !8838

for.cond67:                                       ; preds = %for.inc73, %for.body56
  %58 = load i32, i32* %j, align 4, !dbg !8839
  %cmp68 = icmp sgt i32 %58, 0, !dbg !8842
  br i1 %cmp68, label %for.body70, label %for.end75, !dbg !8843

for.body70:                                       ; preds = %for.cond67
  %59 = load i32, i32* %v0, align 4, !dbg !8844
  %conv71 = trunc i32 %59 to i16, !dbg !8844
  %60 = load i16*, i16** %exp_ptr, align 8, !dbg !8845
  %incdec.ptr72 = getelementptr inbounds i16, i16* %60, i32 1, !dbg !8845
  store i16* %incdec.ptr72, i16** %exp_ptr, align 8, !dbg !8845
  store i16 %conv71, i16* %60, align 2, !dbg !8846
  br label %for.inc73, !dbg !8847

for.inc73:                                        ; preds = %for.body70
  %61 = load i32, i32* %j, align 4, !dbg !8848
  %dec74 = add nsw i32 %61, -1, !dbg !8848
  store i32 %dec74, i32* %j, align 4, !dbg !8848
  br label %for.cond67, !dbg !8850, !llvm.loop !8851

for.end75:                                        ; preds = %for.cond67
  br label %for.inc76, !dbg !8853

for.inc76:                                        ; preds = %for.end75
  %62 = load i32, i32* %l, align 4, !dbg !8854
  %inc77 = add nsw i32 %62, 1, !dbg !8854
  store i32 %inc77, i32* %l, align 4, !dbg !8854
  br label %for.cond53, !dbg !8856, !llvm.loop !8857

for.end78:                                        ; preds = %for.cond53
  br label %for.inc79, !dbg !8859

for.inc79:                                        ; preds = %for.end78
  %63 = load i32, i32* %i, align 4, !dbg !8860
  %inc80 = add nsw i32 %63, 1, !dbg !8860
  store i32 %inc80, i32* %i, align 4, !dbg !8860
  br label %for.cond46, !dbg !8862, !llvm.loop !8863

for.end81:                                        ; preds = %for.cond46
  br label %if.end, !dbg !8865

if.end:                                           ; preds = %for.end81, %for.end23
  ret void, !dbg !8866
}

; Function Attrs: nounwind uwtable
define internal i32 @huffman_decode(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, i16* %exponents, i32 %end_pos2) #1 !dbg !1856 {
entry:
  %x.addr.i96.i314 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i314, metadata !2095, metadata !2031), !dbg !8867
  %x.addr.i81.i315 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i315, metadata !2095, metadata !2031), !dbg !8880
  %x.addr.i.i316 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i316, metadata !2095, metadata !2031), !dbg !8883
  %s.addr.i317 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i317, metadata !8885, metadata !2031), !dbg !8886
  %table.addr.i318 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i318, metadata !8887, metadata !2031), !dbg !8888
  %bits.addr.i319 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i319, metadata !8889, metadata !2031), !dbg !8890
  %max_depth.addr.i320 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i320, metadata !8891, metadata !2031), !dbg !8892
  %code.i321 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i321, metadata !8893, metadata !2031), !dbg !8894
  %re_index.i322 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i322, metadata !8895, metadata !2031), !dbg !8896
  %re_cache.i323 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i323, metadata !8897, metadata !2031), !dbg !8898
  %re_size_plus8.i324 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i324, metadata !8899, metadata !2031), !dbg !8900
  %n.i325 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i325, metadata !8901, metadata !2031), !dbg !8902
  %nb_bits.i326 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i326, metadata !8903, metadata !2031), !dbg !8904
  %index1.i327 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i327, metadata !8905, metadata !2031), !dbg !8906
  %s.addr.i305 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i305, metadata !8907, metadata !2031), !dbg !8911
  %n.addr.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i306, metadata !8923, metadata !2031), !dbg !8924
  %s.addr.i296 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i296, metadata !8907, metadata !2031), !dbg !8925
  %n.addr.i297 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i297, metadata !8923, metadata !2031), !dbg !8930
  %s.addr.i291 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i291, metadata !8907, metadata !2031), !dbg !8931
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !8923, metadata !2031), !dbg !8935
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2095, metadata !2031), !dbg !8936
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2095, metadata !2031), !dbg !8939
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2095, metadata !2031), !dbg !8941
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !8885, metadata !2031), !dbg !8943
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !8887, metadata !2031), !dbg !8944
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !8889, metadata !2031), !dbg !8945
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !8891, metadata !2031), !dbg !8946
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !8893, metadata !2031), !dbg !8947
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !8895, metadata !2031), !dbg !8948
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !8897, metadata !2031), !dbg !8949
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !8899, metadata !2031), !dbg !8950
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !8901, metadata !2031), !dbg !8951
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !8903, metadata !2031), !dbg !8952
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !8905, metadata !2031), !dbg !8953
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %exponents.addr = alloca i16*, align 8
  %end_pos2.addr = alloca i32, align 4
  %s_index = alloca i32, align 4
  %i = alloca i32, align 4
  %last_pos = alloca i32, align 4
  %bits_left = alloca i32, align 4
  %vlc = alloca %struct.VLC*, align 8
  %end_pos = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %linbits = alloca i32, align 4
  %exponent = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %v = alloca i32, align 4
  %pos = alloca i32, align 4
  %pos184 = alloca i32, align 4
  %code = alloca i32, align 4
  %v234 = alloca i32, align 4
  %pos235 = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8954, metadata !2031), !dbg !8955
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8956, metadata !2031), !dbg !8957
  store i16* %exponents, i16** %exponents.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %exponents.addr, metadata !8958, metadata !2031), !dbg !8959
  store i32 %end_pos2, i32* %end_pos2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_pos2.addr, metadata !8960, metadata !2031), !dbg !8961
  call void @llvm.dbg.declare(metadata i32* %s_index, metadata !8962, metadata !2031), !dbg !8963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8964, metadata !2031), !dbg !8965
  call void @llvm.dbg.declare(metadata i32* %last_pos, metadata !8966, metadata !2031), !dbg !8967
  call void @llvm.dbg.declare(metadata i32* %bits_left, metadata !8968, metadata !2031), !dbg !8969
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc, metadata !8970, metadata !2031), !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %end_pos, metadata !8973, metadata !2031), !dbg !8974
  %0 = load i32, i32* %end_pos2.addr, align 4, !dbg !8975
  %1 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8976
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %1, i32 0, i32 14, !dbg !8977
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb, i32 0, i32 3, !dbg !8978
  %2 = load i32, i32* %size_in_bits, align 4, !dbg !8978
  %3 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8979
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %3, i32 0, i32 12, !dbg !8980
  %4 = load i32, i32* %extrasize, align 4, !dbg !8980
  %mul = mul nsw i32 %4, 8, !dbg !8981
  %sub = sub nsw i32 %2, %mul, !dbg !8982
  %cmp = icmp sgt i32 %0, %sub, !dbg !8983
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8984

cond.true:                                        ; preds = %entry
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8985
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 14, !dbg !8987
  %size_in_bits2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb1, i32 0, i32 3, !dbg !8988
  %6 = load i32, i32* %size_in_bits2, align 4, !dbg !8988
  %7 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8989
  %extrasize3 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %7, i32 0, i32 12, !dbg !8990
  %8 = load i32, i32* %extrasize3, align 4, !dbg !8990
  %mul4 = mul nsw i32 %8, 8, !dbg !8991
  %sub5 = sub nsw i32 %6, %mul4, !dbg !8992
  br label %cond.end, !dbg !8993

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %end_pos2.addr, align 4, !dbg !8994
  br label %cond.end, !dbg !8996

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub5, %cond.true ], [ %9, %cond.false ], !dbg !8997
  store i32 %cond, i32* %end_pos, align 4, !dbg !8999
  store i32 0, i32* %s_index, align 4, !dbg !9000
  store i32 0, i32* %i, align 4, !dbg !9001
  br label %for.cond, !dbg !9002

for.cond:                                         ; preds = %for.inc178, %cond.end
  %10 = load i32, i32* %i, align 4, !dbg !9003
  %cmp6 = icmp slt i32 %10, 3, !dbg !9005
  br i1 %cmp6, label %for.body, label %for.end179, !dbg !9006

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9007, metadata !2031), !dbg !9008
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9009, metadata !2031), !dbg !9010
  call void @llvm.dbg.declare(metadata i32* %l, metadata !9011, metadata !2031), !dbg !9012
  call void @llvm.dbg.declare(metadata i32* %linbits, metadata !9013, metadata !2031), !dbg !9014
  %11 = load i32, i32* %i, align 4, !dbg !9015
  %idxprom = sext i32 %11 to i64, !dbg !9016
  %12 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9016
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %12, i32 0, i32 11, !dbg !9017
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 %idxprom, !dbg !9016
  %13 = load i32, i32* %arrayidx, align 4, !dbg !9016
  store i32 %13, i32* %j, align 4, !dbg !9018
  %14 = load i32, i32* %j, align 4, !dbg !9019
  %cmp7 = icmp eq i32 %14, 0, !dbg !9021
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9022

if.then:                                          ; preds = %for.body
  br label %for.inc178, !dbg !9023

if.end:                                           ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !9024
  %idxprom8 = sext i32 %15 to i64, !dbg !9025
  %16 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9025
  %table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %16, i32 0, i32 7, !dbg !9026
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select, i64 0, i64 %idxprom8, !dbg !9025
  %17 = load i32, i32* %arrayidx9, align 4, !dbg !9025
  store i32 %17, i32* %k, align 4, !dbg !9027
  %18 = load i32, i32* %k, align 4, !dbg !9028
  %idxprom10 = sext i32 %18 to i64, !dbg !9029
  %arrayidx11 = getelementptr inbounds [32 x [2 x i8]], [32 x [2 x i8]]* @mpa_huff_data, i64 0, i64 %idxprom10, !dbg !9029
  %arrayidx12 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx11, i64 0, i64 0, !dbg !9029
  %19 = load i8, i8* %arrayidx12, align 2, !dbg !9029
  %conv = zext i8 %19 to i32, !dbg !9029
  store i32 %conv, i32* %l, align 4, !dbg !9030
  %20 = load i32, i32* %k, align 4, !dbg !9031
  %idxprom13 = sext i32 %20 to i64, !dbg !9032
  %arrayidx14 = getelementptr inbounds [32 x [2 x i8]], [32 x [2 x i8]]* @mpa_huff_data, i64 0, i64 %idxprom13, !dbg !9032
  %arrayidx15 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx14, i64 0, i64 1, !dbg !9032
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !9032
  %conv16 = zext i8 %21 to i32, !dbg !9032
  store i32 %conv16, i32* %linbits, align 4, !dbg !9033
  %22 = load i32, i32* %l, align 4, !dbg !9034
  %idxprom17 = sext i32 %22 to i64, !dbg !9035
  %arrayidx18 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom17, !dbg !9035
  store %struct.VLC* %arrayidx18, %struct.VLC** %vlc, align 8, !dbg !9036
  %23 = load i32, i32* %l, align 4, !dbg !9037
  %tobool = icmp ne i32 %23, 0, !dbg !9037
  br i1 %tobool, label %if.end25, label %if.then19, !dbg !9039

if.then19:                                        ; preds = %if.end
  %24 = load i32, i32* %s_index, align 4, !dbg !9040
  %idxprom20 = sext i32 %24 to i64, !dbg !9042
  %25 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9042
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %25, i32 0, i32 17, !dbg !9043
  %arrayidx21 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid, i64 0, i64 %idxprom20, !dbg !9042
  %26 = bitcast float* %arrayidx21 to i8*, !dbg !9044
  %27 = load i32, i32* %j, align 4, !dbg !9045
  %conv22 = sext i32 %27 to i64, !dbg !9045
  %mul23 = mul i64 8, %conv22, !dbg !9046
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 %mul23, i32 4, i1 false), !dbg !9044
  %28 = load i32, i32* %j, align 4, !dbg !9047
  %mul24 = mul nsw i32 2, %28, !dbg !9048
  %29 = load i32, i32* %s_index, align 4, !dbg !9049
  %add = add nsw i32 %29, %mul24, !dbg !9049
  store i32 %add, i32* %s_index, align 4, !dbg !9049
  br label %for.inc178, !dbg !9050

if.end25:                                         ; preds = %if.end
  br label %for.cond26, !dbg !9051

for.cond26:                                       ; preds = %for.inc, %if.end25
  %30 = load i32, i32* %j, align 4, !dbg !9052
  %cmp27 = icmp sgt i32 %30, 0, !dbg !9054
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !9055

for.body29:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !9056, metadata !2031), !dbg !9057
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9058, metadata !2031), !dbg !9059
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9060, metadata !2031), !dbg !9061
  call void @llvm.dbg.declare(metadata i32* %v, metadata !9062, metadata !2031), !dbg !9063
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9064, metadata !2031), !dbg !9065
  %31 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9066
  %gb30 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %31, i32 0, i32 14, !dbg !9067
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb30), !dbg !9068
  store i32 %call, i32* %pos, align 4, !dbg !9065
  %32 = load i32, i32* %pos, align 4, !dbg !9069
  %33 = load i32, i32* %end_pos, align 4, !dbg !9071
  %cmp31 = icmp sge i32 %32, %33, !dbg !9072
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !9073

if.then33:                                        ; preds = %for.body29
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9074
  call void @switch_buffer(%struct.MPADecodeContext* %34, i32* %pos, i32* %end_pos, i32* %end_pos2.addr), !dbg !9076
  %35 = load i32, i32* %pos, align 4, !dbg !9077
  %36 = load i32, i32* %end_pos, align 4, !dbg !9079
  %cmp34 = icmp sge i32 %35, %36, !dbg !9080
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !9081

if.then36:                                        ; preds = %if.then33
  br label %for.end, !dbg !9082

if.end37:                                         ; preds = %if.then33
  br label %if.end38, !dbg !9083

if.end38:                                         ; preds = %if.end37, %for.body29
  %37 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9084
  %gb39 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %37, i32 0, i32 14, !dbg !9085
  %38 = load %struct.VLC*, %struct.VLC** %vlc, align 8, !dbg !9086
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %38, i32 0, i32 1, !dbg !9087
  %39 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !9087
  store %struct.GetBitContext* %gb39, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9088
  store [2 x i16]* %39, [2 x i16]** %table.addr.i, align 8, !dbg !9088
  store i32 7, i32* %bits.addr.i, align 4, !dbg !9088
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !9088
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9089
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %40, i32 0, i32 2, !dbg !9090
  %41 = load i32, i32* %index.i, align 8, !dbg !9090
  store i32 %41, i32* %re_index.i, align 4, !dbg !8948
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9091
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %42, i32 0, i32 4, !dbg !9092
  %43 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !9092
  store i32 %43, i32* %re_size_plus8.i, align 4, !dbg !8950
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9093
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %44, i32 0, i32 0, !dbg !9094
  %45 = load i8*, i8** %buffer.i, align 8, !dbg !9094
  %46 = load i32, i32* %re_index.i, align 4, !dbg !9095
  %shr.i = lshr i32 %46, 3, !dbg !9096
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !9097
  %add.ptr.i = getelementptr inbounds i8, i8* %45, i64 %idx.ext.i, !dbg !9097
  %47 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !9098
  %l.i = bitcast %union.unaligned_32* %47 to i32*, !dbg !9098
  %48 = load i32, i32* %l.i, align 1, !dbg !9098
  store i32 %48, i32* %x.addr.i.i, align 4, !dbg !9099
  %49 = load i32, i32* %x.addr.i.i, align 4, !dbg !9100
  %shl.i.i = shl i32 %49, 8, !dbg !9101
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !9102
  %50 = load i32, i32* %x.addr.i.i, align 4, !dbg !9103
  %shr.i.i = lshr i32 %50, 8, !dbg !9104
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !9105
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !9106
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !9107
  %51 = load i32, i32* %x.addr.i.i, align 4, !dbg !9108
  %shr3.i.i = lshr i32 %51, 16, !dbg !9109
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !9110
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !9111
  %52 = load i32, i32* %x.addr.i.i, align 4, !dbg !9112
  %shr6.i.i = lshr i32 %52, 16, !dbg !9113
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !9114
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !9115
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !9116
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !9117
  %53 = load i32, i32* %re_index.i, align 4, !dbg !9118
  %and.i = and i32 %53, 7, !dbg !9119
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !9120
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !9121
  %54 = load i32, i32* %re_cache.i, align 4, !dbg !9122
  %55 = load i32, i32* %bits.addr.i, align 4, !dbg !9124
  %conv.i = trunc i32 %55 to i8, !dbg !9124
  %call2.i = call i32 @NEG_USR32(i32 %54, i8 signext %conv.i) #9, !dbg !9125
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !9126
  %56 = load i32, i32* %index1.i, align 4, !dbg !9127
  %idxprom.i = zext i32 %56 to i64, !dbg !9128
  %57 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9128
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %57, i64 %idxprom.i, !dbg !9128
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !9128
  %58 = load i16, i16* %arrayidx3.i, align 2, !dbg !9128
  %conv4.i = sext i16 %58 to i32, !dbg !9128
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !9129
  %59 = load i32, i32* %index1.i, align 4, !dbg !9130
  %idxprom5.i = zext i32 %59 to i64, !dbg !9131
  %60 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9131
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %60, i64 %idxprom5.i, !dbg !9131
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !9131
  %61 = load i16, i16* %arrayidx7.i, align 2, !dbg !9131
  %conv8.i = sext i16 %61 to i32, !dbg !9131
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !9132
  %62 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9133
  %cmp.i = icmp sgt i32 %62, 1, !dbg !9134
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !9135

land.lhs.true.i:                                  ; preds = %if.end38
  %63 = load i32, i32* %n.i, align 4, !dbg !9136
  %cmp10.i = icmp slt i32 %63, 0, !dbg !9138
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !9139

if.then.i:                                        ; preds = %land.lhs.true.i
  %64 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9140
  %65 = load i32, i32* %re_index.i, align 4, !dbg !9142
  %66 = load i32, i32* %bits.addr.i, align 4, !dbg !9143
  %add.i = add i32 %65, %66, !dbg !9144
  %cmp12.i = icmp ugt i32 %64, %add.i, !dbg !9145
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !9146

cond.true.i:                                      ; preds = %if.then.i
  %67 = load i32, i32* %re_index.i, align 4, !dbg !9147
  %68 = load i32, i32* %bits.addr.i, align 4, !dbg !9149
  %add14.i = add i32 %67, %68, !dbg !9150
  br label %cond.end.i, !dbg !9151

cond.false.i:                                     ; preds = %if.then.i
  %69 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9152
  br label %cond.end.i, !dbg !9154

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %69, %cond.false.i ], !dbg !9155
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !9156
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9157
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %70, i32 0, i32 0, !dbg !9158
  %71 = load i8*, i8** %buffer15.i, align 8, !dbg !9158
  %72 = load i32, i32* %re_index.i, align 4, !dbg !9159
  %shr16.i = lshr i32 %72, 3, !dbg !9160
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !9161
  %add.ptr18.i = getelementptr inbounds i8, i8* %71, i64 %idx.ext17.i, !dbg !9161
  %73 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !9162
  %l19.i = bitcast %union.unaligned_32* %73 to i32*, !dbg !9162
  %74 = load i32, i32* %l19.i, align 1, !dbg !9162
  store i32 %74, i32* %x.addr.i81.i, align 4, !dbg !9163
  %75 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9164
  %shl.i82.i = shl i32 %75, 8, !dbg !9165
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !9166
  %76 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9167
  %shr.i84.i = lshr i32 %76, 8, !dbg !9168
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !9169
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !9170
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !9171
  %77 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9172
  %shr3.i88.i = lshr i32 %77, 16, !dbg !9173
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !9174
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !9175
  %78 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9176
  %shr6.i91.i = lshr i32 %78, 16, !dbg !9177
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !9178
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !9179
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !9180
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !9181
  %79 = load i32, i32* %re_index.i, align 4, !dbg !9182
  %and21.i = and i32 %79, 7, !dbg !9183
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !9184
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !9185
  %80 = load i32, i32* %n.i, align 4, !dbg !9186
  %sub.i = sub nsw i32 0, %80, !dbg !9187
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !9188
  %81 = load i32, i32* %re_cache.i, align 4, !dbg !9189
  %82 = load i32, i32* %nb_bits.i, align 4, !dbg !9190
  %conv23.i = trunc i32 %82 to i8, !dbg !9190
  %call24.i = call i32 @NEG_USR32(i32 %81, i8 signext %conv23.i) #9, !dbg !9191
  %83 = load i32, i32* %code.i, align 4, !dbg !9193
  %add25.i = add i32 %call24.i, %83, !dbg !9194
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !9195
  %84 = load i32, i32* %index1.i, align 4, !dbg !9196
  %idxprom26.i = zext i32 %84 to i64, !dbg !9197
  %85 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9197
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %85, i64 %idxprom26.i, !dbg !9197
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !9197
  %86 = load i16, i16* %arrayidx28.i, align 2, !dbg !9197
  %conv29.i = sext i16 %86 to i32, !dbg !9197
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !9198
  %87 = load i32, i32* %index1.i, align 4, !dbg !9199
  %idxprom30.i = zext i32 %87 to i64, !dbg !9200
  %88 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9200
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %88, i64 %idxprom30.i, !dbg !9200
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !9200
  %89 = load i16, i16* %arrayidx32.i, align 2, !dbg !9200
  %conv33.i = sext i16 %89 to i32, !dbg !9200
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !9201
  %90 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9202
  %cmp34.i = icmp sgt i32 %90, 2, !dbg !9203
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !9204

land.lhs.true36.i:                                ; preds = %cond.end.i
  %91 = load i32, i32* %n.i, align 4, !dbg !9205
  %cmp37.i = icmp slt i32 %91, 0, !dbg !9207
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !9208

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %92 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9209
  %93 = load i32, i32* %re_index.i, align 4, !dbg !9211
  %94 = load i32, i32* %nb_bits.i, align 4, !dbg !9212
  %add40.i = add i32 %93, %94, !dbg !9213
  %cmp41.i = icmp ugt i32 %92, %add40.i, !dbg !9214
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !9215

cond.true43.i:                                    ; preds = %if.then39.i
  %95 = load i32, i32* %re_index.i, align 4, !dbg !9216
  %96 = load i32, i32* %nb_bits.i, align 4, !dbg !9218
  %add44.i = add i32 %95, %96, !dbg !9219
  br label %cond.end46.i, !dbg !9220

cond.false45.i:                                   ; preds = %if.then39.i
  %97 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9221
  br label %cond.end46.i, !dbg !9223

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %97, %cond.false45.i ], !dbg !9224
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !9225
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9226
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %98, i32 0, i32 0, !dbg !9227
  %99 = load i8*, i8** %buffer48.i, align 8, !dbg !9227
  %100 = load i32, i32* %re_index.i, align 4, !dbg !9228
  %shr49.i = lshr i32 %100, 3, !dbg !9229
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !9230
  %add.ptr51.i = getelementptr inbounds i8, i8* %99, i64 %idx.ext50.i, !dbg !9230
  %101 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !9231
  %l52.i = bitcast %union.unaligned_32* %101 to i32*, !dbg !9231
  %102 = load i32, i32* %l52.i, align 1, !dbg !9231
  store i32 %102, i32* %x.addr.i96.i, align 4, !dbg !9232
  %103 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9233
  %shl.i97.i = shl i32 %103, 8, !dbg !9234
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !9235
  %104 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9236
  %shr.i99.i = lshr i32 %104, 8, !dbg !9237
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !9238
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !9239
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !9240
  %105 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9241
  %shr3.i103.i = lshr i32 %105, 16, !dbg !9242
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !9243
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !9244
  %106 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9245
  %shr6.i106.i = lshr i32 %106, 16, !dbg !9246
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !9247
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !9248
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !9249
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !9250
  %107 = load i32, i32* %re_index.i, align 4, !dbg !9251
  %and54.i = and i32 %107, 7, !dbg !9252
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !9253
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !9254
  %108 = load i32, i32* %n.i, align 4, !dbg !9255
  %sub56.i = sub nsw i32 0, %108, !dbg !9256
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !9257
  %109 = load i32, i32* %re_cache.i, align 4, !dbg !9258
  %110 = load i32, i32* %nb_bits.i, align 4, !dbg !9259
  %conv57.i = trunc i32 %110 to i8, !dbg !9259
  %call58.i = call i32 @NEG_USR32(i32 %109, i8 signext %conv57.i) #9, !dbg !9260
  %111 = load i32, i32* %code.i, align 4, !dbg !9262
  %add59.i = add i32 %call58.i, %111, !dbg !9263
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !9264
  %112 = load i32, i32* %index1.i, align 4, !dbg !9265
  %idxprom60.i = zext i32 %112 to i64, !dbg !9266
  %113 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9266
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %113, i64 %idxprom60.i, !dbg !9266
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !9266
  %114 = load i16, i16* %arrayidx62.i, align 2, !dbg !9266
  %conv63.i = sext i16 %114 to i32, !dbg !9266
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !9267
  %115 = load i32, i32* %index1.i, align 4, !dbg !9268
  %idxprom64.i = zext i32 %115 to i64, !dbg !9269
  %116 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9269
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %116, i64 %idxprom64.i, !dbg !9269
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !9269
  %117 = load i16, i16* %arrayidx66.i, align 2, !dbg !9269
  %conv67.i = sext i16 %117 to i32, !dbg !9269
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !9270
  br label %if.end.i, !dbg !9271

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !9272

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end38
  %118 = load i32, i32* %n.i, align 4, !dbg !9274
  %119 = load i32, i32* %re_cache.i, align 4, !dbg !9277
  %shl70.i = shl i32 %119, %118, !dbg !9277
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !9277
  %120 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9278
  %121 = load i32, i32* %re_index.i, align 4, !dbg !9279
  %122 = load i32, i32* %n.i, align 4, !dbg !9280
  %add71.i = add i32 %121, %122, !dbg !9281
  %cmp72.i = icmp ugt i32 %120, %add71.i, !dbg !9282
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !9283

cond.true74.i:                                    ; preds = %if.end68.i
  %123 = load i32, i32* %re_index.i, align 4, !dbg !9284
  %124 = load i32, i32* %n.i, align 4, !dbg !9286
  %add75.i = add i32 %123, %124, !dbg !9287
  br label %get_vlc2.exit, !dbg !9288

cond.false76.i:                                   ; preds = %if.end68.i
  %125 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9289
  br label %get_vlc2.exit, !dbg !9291

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %125, %cond.false76.i ], !dbg !9292
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !9294
  %126 = load i32, i32* %re_index.i, align 4, !dbg !9295
  %127 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9296
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %127, i32 0, i32 2, !dbg !9297
  store i32 %126, i32* %index80.i, align 8, !dbg !9298
  %128 = load i32, i32* %code.i, align 4, !dbg !9299
  store i32 %128, i32* %y, align 4, !dbg !9300
  %129 = load i32, i32* %y, align 4, !dbg !9301
  %tobool41 = icmp ne i32 %129, 0, !dbg !9301
  br i1 %tobool41, label %if.end51, label %if.then42, !dbg !9303

if.then42:                                        ; preds = %get_vlc2.exit
  %130 = load i32, i32* %s_index, align 4, !dbg !9304
  %add43 = add nsw i32 %130, 1, !dbg !9306
  %idxprom44 = sext i32 %add43 to i64, !dbg !9307
  %131 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9307
  %sb_hybrid45 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %131, i32 0, i32 17, !dbg !9308
  %arrayidx46 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid45, i64 0, i64 %idxprom44, !dbg !9307
  store float 0.000000e+00, float* %arrayidx46, align 4, !dbg !9309
  %132 = load i32, i32* %s_index, align 4, !dbg !9310
  %idxprom47 = sext i32 %132 to i64, !dbg !9311
  %133 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9311
  %sb_hybrid48 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %133, i32 0, i32 17, !dbg !9312
  %arrayidx49 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid48, i64 0, i64 %idxprom47, !dbg !9311
  store float 0.000000e+00, float* %arrayidx49, align 4, !dbg !9313
  %134 = load i32, i32* %s_index, align 4, !dbg !9314
  %add50 = add nsw i32 %134, 2, !dbg !9314
  store i32 %add50, i32* %s_index, align 4, !dbg !9314
  br label %for.inc, !dbg !9315

if.end51:                                         ; preds = %get_vlc2.exit
  %135 = load i32, i32* %s_index, align 4, !dbg !9316
  %idxprom52 = sext i32 %135 to i64, !dbg !9317
  %136 = load i16*, i16** %exponents.addr, align 8, !dbg !9317
  %arrayidx53 = getelementptr inbounds i16, i16* %136, i64 %idxprom52, !dbg !9317
  %137 = load i16, i16* %arrayidx53, align 2, !dbg !9317
  %conv54 = sext i16 %137 to i32, !dbg !9317
  store i32 %conv54, i32* %exponent, align 4, !dbg !9318
  br label %do.body, !dbg !9319, !llvm.loop !9320

do.body:                                          ; preds = %if.end51
  br label %do.end, !dbg !9321

do.end:                                           ; preds = %do.body
  %138 = load i32, i32* %y, align 4, !dbg !9324
  %and = and i32 %138, 16, !dbg !9325
  %tobool55 = icmp ne i32 %and, 0, !dbg !9325
  br i1 %tobool55, label %if.then56, label %if.else121, !dbg !9326

if.then56:                                        ; preds = %do.end
  %139 = load i32, i32* %y, align 4, !dbg !9327
  %shr = ashr i32 %139, 5, !dbg !9328
  store i32 %shr, i32* %x, align 4, !dbg !9329
  %140 = load i32, i32* %y, align 4, !dbg !9330
  %and57 = and i32 %140, 15, !dbg !9331
  store i32 %and57, i32* %y, align 4, !dbg !9332
  %141 = load i32, i32* %x, align 4, !dbg !9333
  %cmp58 = icmp slt i32 %141, 15, !dbg !9334
  br i1 %cmp58, label %if.then60, label %if.else, !dbg !9335

if.then60:                                        ; preds = %if.then56
  %142 = load i32, i32* %exponent, align 4, !dbg !9336
  %idxprom61 = sext i32 %142 to i64, !dbg !9338
  %arrayidx62 = getelementptr inbounds [512 x [16 x float]], [512 x [16 x float]]* @expval_table_float, i64 0, i64 %idxprom61, !dbg !9338
  %arraydecay = getelementptr inbounds [16 x float], [16 x float]* %arrayidx62, i32 0, i32 0, !dbg !9338
  %143 = load i32, i32* %x, align 4, !dbg !9339
  %idx.ext = sext i32 %143 to i64, !dbg !9340
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 %idx.ext, !dbg !9340
  %144 = bitcast float* %add.ptr to %union.av_alias32*, !dbg !9341
  %u32 = bitcast %union.av_alias32* %144 to i32*, !dbg !9341
  %145 = load i32, i32* %u32, align 4, !dbg !9341
  %146 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9342
  %gb63 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %146, i32 0, i32 14, !dbg !9343
  %call64 = call i32 @get_bits1(%struct.GetBitContext* %gb63), !dbg !9344
  %shl = shl i32 %call64, 31, !dbg !9345
  %xor = xor i32 %145, %shl, !dbg !9346
  store i32 %xor, i32* %v, align 4, !dbg !9347
  %147 = load i32, i32* %v, align 4, !dbg !9348
  %148 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9349
  %sb_hybrid65 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %148, i32 0, i32 17, !dbg !9350
  %arraydecay66 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid65, i32 0, i32 0, !dbg !9349
  %149 = load i32, i32* %s_index, align 4, !dbg !9351
  %idx.ext67 = sext i32 %149 to i64, !dbg !9352
  %add.ptr68 = getelementptr inbounds float, float* %arraydecay66, i64 %idx.ext67, !dbg !9352
  %150 = bitcast float* %add.ptr68 to %union.av_alias32*, !dbg !9353
  %u3269 = bitcast %union.av_alias32* %150 to i32*, !dbg !9353
  store i32 %147, i32* %u3269, align 4, !dbg !9354
  br label %if.end84, !dbg !9355

if.else:                                          ; preds = %if.then56
  %151 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9356
  %gb70 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %151, i32 0, i32 14, !dbg !9357
  %152 = load i32, i32* %linbits, align 4, !dbg !9358
  store %struct.GetBitContext* %gb70, %struct.GetBitContext** %s.addr.i291, align 8, !dbg !9359
  store i32 %152, i32* %n.addr.i, align 4, !dbg !9359
  %153 = load i32, i32* %n.addr.i, align 4, !dbg !9360
  %tobool.i = icmp ne i32 %153, 0, !dbg !9360
  br i1 %tobool.i, label %cond.true.i292, label %cond.false.i293, !dbg !9360

cond.true.i292:                                   ; preds = %if.else
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i291, align 8, !dbg !9361
  %155 = load i32, i32* %n.addr.i, align 4, !dbg !9363
  %call.i = call i32 @get_bits(%struct.GetBitContext* %154, i32 %155) #9, !dbg !9364
  br label %get_bitsz.exit, !dbg !9365

cond.false.i293:                                  ; preds = %if.else
  br label %get_bitsz.exit, !dbg !9366

get_bitsz.exit:                                   ; preds = %cond.true.i292, %cond.false.i293
  %cond.i294 = phi i32 [ %call.i, %cond.true.i292 ], [ 0, %cond.false.i293 ], !dbg !9368
  %156 = load i32, i32* %x, align 4, !dbg !9370
  %add72 = add nsw i32 %156, %cond.i294, !dbg !9370
  store i32 %add72, i32* %x, align 4, !dbg !9370
  %157 = load i32, i32* %x, align 4, !dbg !9371
  %158 = load i32, i32* %exponent, align 4, !dbg !9372
  %call73 = call i32 @l3_unscale(i32 %157, i32 %158), !dbg !9373
  store i32 %call73, i32* %v, align 4, !dbg !9374
  %159 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9375
  %gb74 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %159, i32 0, i32 14, !dbg !9377
  %call75 = call i32 @get_bits1(%struct.GetBitContext* %gb74), !dbg !9378
  %tobool76 = icmp ne i32 %call75, 0, !dbg !9378
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !9379

if.then77:                                        ; preds = %get_bitsz.exit
  %160 = load i32, i32* %v, align 4, !dbg !9380
  %sub78 = sub nsw i32 0, %160, !dbg !9381
  store i32 %sub78, i32* %v, align 4, !dbg !9382
  br label %if.end79, !dbg !9383

if.end79:                                         ; preds = %if.then77, %get_bitsz.exit
  %161 = load i32, i32* %v, align 4, !dbg !9384
  %conv80 = sitofp i32 %161 to float, !dbg !9384
  %162 = load i32, i32* %s_index, align 4, !dbg !9385
  %idxprom81 = sext i32 %162 to i64, !dbg !9386
  %163 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9386
  %sb_hybrid82 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %163, i32 0, i32 17, !dbg !9387
  %arrayidx83 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid82, i64 0, i64 %idxprom81, !dbg !9386
  store float %conv80, float* %arrayidx83, align 4, !dbg !9388
  br label %if.end84

if.end84:                                         ; preds = %if.end79, %if.then60
  %164 = load i32, i32* %y, align 4, !dbg !9389
  %cmp85 = icmp slt i32 %164, 15, !dbg !9390
  br i1 %cmp85, label %if.then87, label %if.else104, !dbg !9391

if.then87:                                        ; preds = %if.end84
  %165 = load i32, i32* %exponent, align 4, !dbg !9392
  %idxprom88 = sext i32 %165 to i64, !dbg !9394
  %arrayidx89 = getelementptr inbounds [512 x [16 x float]], [512 x [16 x float]]* @expval_table_float, i64 0, i64 %idxprom88, !dbg !9394
  %arraydecay90 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx89, i32 0, i32 0, !dbg !9394
  %166 = load i32, i32* %y, align 4, !dbg !9395
  %idx.ext91 = sext i32 %166 to i64, !dbg !9396
  %add.ptr92 = getelementptr inbounds float, float* %arraydecay90, i64 %idx.ext91, !dbg !9396
  %167 = bitcast float* %add.ptr92 to %union.av_alias32*, !dbg !9397
  %u3293 = bitcast %union.av_alias32* %167 to i32*, !dbg !9397
  %168 = load i32, i32* %u3293, align 4, !dbg !9397
  %169 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9398
  %gb94 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %169, i32 0, i32 14, !dbg !9399
  %call95 = call i32 @get_bits1(%struct.GetBitContext* %gb94), !dbg !9400
  %shl96 = shl i32 %call95, 31, !dbg !9401
  %xor97 = xor i32 %168, %shl96, !dbg !9402
  store i32 %xor97, i32* %v, align 4, !dbg !9403
  %170 = load i32, i32* %v, align 4, !dbg !9404
  %171 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9405
  %sb_hybrid98 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %171, i32 0, i32 17, !dbg !9406
  %arraydecay99 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid98, i32 0, i32 0, !dbg !9405
  %172 = load i32, i32* %s_index, align 4, !dbg !9407
  %idx.ext100 = sext i32 %172 to i64, !dbg !9408
  %add.ptr101 = getelementptr inbounds float, float* %arraydecay99, i64 %idx.ext100, !dbg !9408
  %add.ptr102 = getelementptr inbounds float, float* %add.ptr101, i64 1, !dbg !9409
  %173 = bitcast float* %add.ptr102 to %union.av_alias32*, !dbg !9410
  %u32103 = bitcast %union.av_alias32* %173 to i32*, !dbg !9410
  store i32 %170, i32* %u32103, align 4, !dbg !9411
  br label %if.end120, !dbg !9412

if.else104:                                       ; preds = %if.end84
  %174 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9413
  %gb105 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %174, i32 0, i32 14, !dbg !9414
  %175 = load i32, i32* %linbits, align 4, !dbg !9415
  store %struct.GetBitContext* %gb105, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !9416
  store i32 %175, i32* %n.addr.i297, align 4, !dbg !9416
  %176 = load i32, i32* %n.addr.i297, align 4, !dbg !9417
  %tobool.i298 = icmp ne i32 %176, 0, !dbg !9417
  br i1 %tobool.i298, label %cond.true.i300, label %cond.false.i301, !dbg !9417

cond.true.i300:                                   ; preds = %if.else104
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !9418
  %178 = load i32, i32* %n.addr.i297, align 4, !dbg !9419
  %call.i299 = call i32 @get_bits(%struct.GetBitContext* %177, i32 %178) #9, !dbg !9420
  br label %get_bitsz.exit304, !dbg !9421

cond.false.i301:                                  ; preds = %if.else104
  br label %get_bitsz.exit304, !dbg !9422

get_bitsz.exit304:                                ; preds = %cond.true.i300, %cond.false.i301
  %cond.i302 = phi i32 [ %call.i299, %cond.true.i300 ], [ 0, %cond.false.i301 ], !dbg !9423
  %179 = load i32, i32* %y, align 4, !dbg !9424
  %add107 = add nsw i32 %179, %cond.i302, !dbg !9424
  store i32 %add107, i32* %y, align 4, !dbg !9424
  %180 = load i32, i32* %y, align 4, !dbg !9425
  %181 = load i32, i32* %exponent, align 4, !dbg !9426
  %call108 = call i32 @l3_unscale(i32 %180, i32 %181), !dbg !9427
  store i32 %call108, i32* %v, align 4, !dbg !9428
  %182 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9429
  %gb109 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %182, i32 0, i32 14, !dbg !9431
  %call110 = call i32 @get_bits1(%struct.GetBitContext* %gb109), !dbg !9432
  %tobool111 = icmp ne i32 %call110, 0, !dbg !9432
  br i1 %tobool111, label %if.then112, label %if.end114, !dbg !9433

if.then112:                                       ; preds = %get_bitsz.exit304
  %183 = load i32, i32* %v, align 4, !dbg !9434
  %sub113 = sub nsw i32 0, %183, !dbg !9435
  store i32 %sub113, i32* %v, align 4, !dbg !9436
  br label %if.end114, !dbg !9437

if.end114:                                        ; preds = %if.then112, %get_bitsz.exit304
  %184 = load i32, i32* %v, align 4, !dbg !9438
  %conv115 = sitofp i32 %184 to float, !dbg !9438
  %185 = load i32, i32* %s_index, align 4, !dbg !9439
  %add116 = add nsw i32 %185, 1, !dbg !9440
  %idxprom117 = sext i32 %add116 to i64, !dbg !9441
  %186 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9441
  %sb_hybrid118 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %186, i32 0, i32 17, !dbg !9442
  %arrayidx119 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid118, i64 0, i64 %idxprom117, !dbg !9441
  store float %conv115, float* %arrayidx119, align 4, !dbg !9443
  br label %if.end120

if.end120:                                        ; preds = %if.end114, %if.then87
  br label %if.end176, !dbg !9444

if.else121:                                       ; preds = %do.end
  %187 = load i32, i32* %y, align 4, !dbg !9445
  %shr122 = ashr i32 %187, 5, !dbg !9446
  store i32 %shr122, i32* %x, align 4, !dbg !9447
  %188 = load i32, i32* %y, align 4, !dbg !9448
  %and123 = and i32 %188, 15, !dbg !9449
  store i32 %and123, i32* %y, align 4, !dbg !9450
  %189 = load i32, i32* %y, align 4, !dbg !9451
  %190 = load i32, i32* %x, align 4, !dbg !9452
  %add124 = add nsw i32 %190, %189, !dbg !9452
  store i32 %add124, i32* %x, align 4, !dbg !9452
  %191 = load i32, i32* %x, align 4, !dbg !9453
  %cmp125 = icmp slt i32 %191, 15, !dbg !9454
  br i1 %cmp125, label %if.then127, label %if.else147, !dbg !9455

if.then127:                                       ; preds = %if.else121
  %192 = load i32, i32* %exponent, align 4, !dbg !9456
  %idxprom128 = sext i32 %192 to i64, !dbg !9458
  %arrayidx129 = getelementptr inbounds [512 x [16 x float]], [512 x [16 x float]]* @expval_table_float, i64 0, i64 %idxprom128, !dbg !9458
  %arraydecay130 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx129, i32 0, i32 0, !dbg !9458
  %193 = load i32, i32* %x, align 4, !dbg !9459
  %idx.ext131 = sext i32 %193 to i64, !dbg !9460
  %add.ptr132 = getelementptr inbounds float, float* %arraydecay130, i64 %idx.ext131, !dbg !9460
  %194 = bitcast float* %add.ptr132 to %union.av_alias32*, !dbg !9461
  %u32133 = bitcast %union.av_alias32* %194 to i32*, !dbg !9461
  %195 = load i32, i32* %u32133, align 4, !dbg !9461
  %196 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9462
  %gb134 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %196, i32 0, i32 14, !dbg !9463
  %call135 = call i32 @get_bits1(%struct.GetBitContext* %gb134), !dbg !9464
  %shl136 = shl i32 %call135, 31, !dbg !9465
  %xor137 = xor i32 %195, %shl136, !dbg !9466
  store i32 %xor137, i32* %v, align 4, !dbg !9467
  %197 = load i32, i32* %v, align 4, !dbg !9468
  %198 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9469
  %sb_hybrid138 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %198, i32 0, i32 17, !dbg !9470
  %arraydecay139 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid138, i32 0, i32 0, !dbg !9469
  %199 = load i32, i32* %s_index, align 4, !dbg !9471
  %idx.ext140 = sext i32 %199 to i64, !dbg !9472
  %add.ptr141 = getelementptr inbounds float, float* %arraydecay139, i64 %idx.ext140, !dbg !9472
  %200 = load i32, i32* %y, align 4, !dbg !9473
  %tobool142 = icmp ne i32 %200, 0, !dbg !9474
  %lnot = xor i1 %tobool142, true, !dbg !9474
  %lnot143 = xor i1 %lnot, true, !dbg !9475
  %lnot.ext = zext i1 %lnot143 to i32, !dbg !9475
  %idx.ext144 = sext i32 %lnot.ext to i64, !dbg !9476
  %add.ptr145 = getelementptr inbounds float, float* %add.ptr141, i64 %idx.ext144, !dbg !9476
  %201 = bitcast float* %add.ptr145 to %union.av_alias32*, !dbg !9477
  %u32146 = bitcast %union.av_alias32* %201 to i32*, !dbg !9477
  store i32 %197, i32* %u32146, align 4, !dbg !9478
  br label %if.end168, !dbg !9479

if.else147:                                       ; preds = %if.else121
  %202 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9480
  %gb148 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %202, i32 0, i32 14, !dbg !9481
  %203 = load i32, i32* %linbits, align 4, !dbg !9482
  store %struct.GetBitContext* %gb148, %struct.GetBitContext** %s.addr.i305, align 8, !dbg !9483
  store i32 %203, i32* %n.addr.i306, align 4, !dbg !9483
  %204 = load i32, i32* %n.addr.i306, align 4, !dbg !9484
  %tobool.i307 = icmp ne i32 %204, 0, !dbg !9484
  br i1 %tobool.i307, label %cond.true.i309, label %cond.false.i310, !dbg !9484

cond.true.i309:                                   ; preds = %if.else147
  %205 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i305, align 8, !dbg !9485
  %206 = load i32, i32* %n.addr.i306, align 4, !dbg !9486
  %call.i308 = call i32 @get_bits(%struct.GetBitContext* %205, i32 %206) #9, !dbg !9487
  br label %get_bitsz.exit313, !dbg !9488

cond.false.i310:                                  ; preds = %if.else147
  br label %get_bitsz.exit313, !dbg !9489

get_bitsz.exit313:                                ; preds = %cond.true.i309, %cond.false.i310
  %cond.i311 = phi i32 [ %call.i308, %cond.true.i309 ], [ 0, %cond.false.i310 ], !dbg !9490
  %207 = load i32, i32* %x, align 4, !dbg !9491
  %add150 = add nsw i32 %207, %cond.i311, !dbg !9491
  store i32 %add150, i32* %x, align 4, !dbg !9491
  %208 = load i32, i32* %x, align 4, !dbg !9492
  %209 = load i32, i32* %exponent, align 4, !dbg !9493
  %call151 = call i32 @l3_unscale(i32 %208, i32 %209), !dbg !9494
  store i32 %call151, i32* %v, align 4, !dbg !9495
  %210 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9496
  %gb152 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %210, i32 0, i32 14, !dbg !9498
  %call153 = call i32 @get_bits1(%struct.GetBitContext* %gb152), !dbg !9499
  %tobool154 = icmp ne i32 %call153, 0, !dbg !9499
  br i1 %tobool154, label %if.then155, label %if.end157, !dbg !9500

if.then155:                                       ; preds = %get_bitsz.exit313
  %211 = load i32, i32* %v, align 4, !dbg !9501
  %sub156 = sub nsw i32 0, %211, !dbg !9502
  store i32 %sub156, i32* %v, align 4, !dbg !9503
  br label %if.end157, !dbg !9504

if.end157:                                        ; preds = %if.then155, %get_bitsz.exit313
  %212 = load i32, i32* %v, align 4, !dbg !9505
  %conv158 = sitofp i32 %212 to float, !dbg !9505
  %213 = load i32, i32* %s_index, align 4, !dbg !9506
  %214 = load i32, i32* %y, align 4, !dbg !9507
  %tobool159 = icmp ne i32 %214, 0, !dbg !9508
  %lnot160 = xor i1 %tobool159, true, !dbg !9508
  %lnot162 = xor i1 %lnot160, true, !dbg !9509
  %lnot.ext163 = zext i1 %lnot162 to i32, !dbg !9509
  %add164 = add nsw i32 %213, %lnot.ext163, !dbg !9510
  %idxprom165 = sext i32 %add164 to i64, !dbg !9511
  %215 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9511
  %sb_hybrid166 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %215, i32 0, i32 17, !dbg !9512
  %arrayidx167 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid166, i64 0, i64 %idxprom165, !dbg !9511
  store float %conv158, float* %arrayidx167, align 4, !dbg !9513
  br label %if.end168

if.end168:                                        ; preds = %if.end157, %if.then127
  %216 = load i32, i32* %s_index, align 4, !dbg !9514
  %217 = load i32, i32* %y, align 4, !dbg !9515
  %tobool169 = icmp ne i32 %217, 0, !dbg !9516
  %lnot170 = xor i1 %tobool169, true, !dbg !9516
  %lnot.ext171 = zext i1 %lnot170 to i32, !dbg !9516
  %add172 = add nsw i32 %216, %lnot.ext171, !dbg !9517
  %idxprom173 = sext i32 %add172 to i64, !dbg !9518
  %218 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9518
  %sb_hybrid174 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %218, i32 0, i32 17, !dbg !9519
  %arrayidx175 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid174, i64 0, i64 %idxprom173, !dbg !9518
  store float 0.000000e+00, float* %arrayidx175, align 4, !dbg !9520
  br label %if.end176

if.end176:                                        ; preds = %if.end168, %if.end120
  %219 = load i32, i32* %s_index, align 4, !dbg !9521
  %add177 = add nsw i32 %219, 2, !dbg !9521
  store i32 %add177, i32* %s_index, align 4, !dbg !9521
  br label %for.inc, !dbg !9522

for.inc:                                          ; preds = %if.end176, %if.then42
  %220 = load i32, i32* %j, align 4, !dbg !9523
  %dec = add nsw i32 %220, -1, !dbg !9523
  store i32 %dec, i32* %j, align 4, !dbg !9523
  br label %for.cond26, !dbg !9525, !llvm.loop !9526

for.end:                                          ; preds = %if.then36, %for.cond26
  br label %for.inc178, !dbg !9527

for.inc178:                                       ; preds = %for.end, %if.then19, %if.then
  %221 = load i32, i32* %i, align 4, !dbg !9528
  %inc = add nsw i32 %221, 1, !dbg !9528
  store i32 %inc, i32* %i, align 4, !dbg !9528
  br label %for.cond, !dbg !9530, !llvm.loop !9531

for.end179:                                       ; preds = %for.cond
  %222 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9533
  %count1table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %222, i32 0, i32 10, !dbg !9534
  %223 = load i8, i8* %count1table_select, align 1, !dbg !9534
  %idxprom180 = zext i8 %223 to i64, !dbg !9535
  %arrayidx181 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom180, !dbg !9535
  store %struct.VLC* %arrayidx181, %struct.VLC** %vlc, align 8, !dbg !9536
  store i32 0, i32* %last_pos, align 4, !dbg !9537
  br label %while.cond, !dbg !9538

while.cond:                                       ; preds = %while.end, %for.end179
  %224 = load i32, i32* %s_index, align 4, !dbg !9539
  %cmp182 = icmp sle i32 %224, 572, !dbg !9540
  br i1 %cmp182, label %while.body, label %while.end259, !dbg !9541

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %pos184, metadata !9542, metadata !2031), !dbg !9543
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9544, metadata !2031), !dbg !9545
  %225 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9546
  %gb185 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %225, i32 0, i32 14, !dbg !9547
  %call186 = call i32 @get_bits_count(%struct.GetBitContext* %gb185), !dbg !9548
  store i32 %call186, i32* %pos184, align 4, !dbg !9549
  %226 = load i32, i32* %pos184, align 4, !dbg !9550
  %227 = load i32, i32* %end_pos, align 4, !dbg !9552
  %cmp187 = icmp sge i32 %226, %227, !dbg !9553
  br i1 %cmp187, label %if.then189, label %if.end209, !dbg !9554

if.then189:                                       ; preds = %while.body
  %228 = load i32, i32* %pos184, align 4, !dbg !9555
  %229 = load i32, i32* %end_pos2.addr, align 4, !dbg !9558
  %cmp190 = icmp sgt i32 %228, %229, !dbg !9559
  br i1 %cmp190, label %land.lhs.true, label %if.end204, !dbg !9560

land.lhs.true:                                    ; preds = %if.then189
  %230 = load i32, i32* %last_pos, align 4, !dbg !9561
  %tobool192 = icmp ne i32 %230, 0, !dbg !9561
  br i1 %tobool192, label %if.then193, label %if.end204, !dbg !9563

if.then193:                                       ; preds = %land.lhs.true
  %231 = load i32, i32* %s_index, align 4, !dbg !9564
  %sub194 = sub nsw i32 %231, 4, !dbg !9564
  store i32 %sub194, i32* %s_index, align 4, !dbg !9564
  %232 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9566
  %gb195 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %232, i32 0, i32 14, !dbg !9567
  %233 = load i32, i32* %last_pos, align 4, !dbg !9568
  %234 = load i32, i32* %pos184, align 4, !dbg !9569
  %sub196 = sub nsw i32 %233, %234, !dbg !9570
  call void @skip_bits_long(%struct.GetBitContext* %gb195, i32 %sub196), !dbg !9571
  %235 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9572
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %235, i32 0, i32 26, !dbg !9573
  %236 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !9573
  %237 = bitcast %struct.AVCodecContext* %236 to i8*, !dbg !9572
  %238 = load i32, i32* %last_pos, align 4, !dbg !9574
  %239 = load i32, i32* %pos184, align 4, !dbg !9575
  %sub197 = sub nsw i32 %238, %239, !dbg !9576
  %240 = load i32, i32* %end_pos, align 4, !dbg !9577
  %241 = load i32, i32* %pos184, align 4, !dbg !9578
  %sub198 = sub nsw i32 %240, %241, !dbg !9579
  %242 = load i32, i32* %end_pos2.addr, align 4, !dbg !9580
  %243 = load i32, i32* %pos184, align 4, !dbg !9581
  %sub199 = sub nsw i32 %242, %243, !dbg !9582
  call void (i8*, i32, i8*, ...) @av_log(i8* %237, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 %sub197, i32 %sub198, i32 %sub199), !dbg !9583
  %244 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9584
  %err_recognition = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %244, i32 0, i32 25, !dbg !9586
  %245 = load i32, i32* %err_recognition, align 8, !dbg !9586
  %and200 = and i32 %245, 131074, !dbg !9587
  %tobool201 = icmp ne i32 %and200, 0, !dbg !9587
  br i1 %tobool201, label %if.then202, label %if.end203, !dbg !9588

if.then202:                                       ; preds = %if.then193
  store i32 0, i32* %s_index, align 4, !dbg !9589
  br label %if.end203, !dbg !9590

if.end203:                                        ; preds = %if.then202, %if.then193
  br label %while.end259, !dbg !9591

if.end204:                                        ; preds = %land.lhs.true, %if.then189
  %246 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9592
  call void @switch_buffer(%struct.MPADecodeContext* %246, i32* %pos184, i32* %end_pos, i32* %end_pos2.addr), !dbg !9593
  %247 = load i32, i32* %pos184, align 4, !dbg !9594
  %248 = load i32, i32* %end_pos, align 4, !dbg !9596
  %cmp205 = icmp sge i32 %247, %248, !dbg !9597
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !9598

if.then207:                                       ; preds = %if.end204
  br label %while.end259, !dbg !9599

if.end208:                                        ; preds = %if.end204
  br label %if.end209, !dbg !9600

if.end209:                                        ; preds = %if.end208, %while.body
  %249 = load i32, i32* %pos184, align 4, !dbg !9601
  store i32 %249, i32* %last_pos, align 4, !dbg !9602
  %250 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9603
  %gb210 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %250, i32 0, i32 14, !dbg !9604
  %251 = load %struct.VLC*, %struct.VLC** %vlc, align 8, !dbg !9605
  %table211 = getelementptr inbounds %struct.VLC, %struct.VLC* %251, i32 0, i32 1, !dbg !9606
  %252 = load [2 x i16]*, [2 x i16]** %table211, align 8, !dbg !9606
  %253 = load %struct.VLC*, %struct.VLC** %vlc, align 8, !dbg !9607
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %253, i32 0, i32 0, !dbg !9608
  %254 = load i32, i32* %bits, align 8, !dbg !9608
  store %struct.GetBitContext* %gb210, %struct.GetBitContext** %s.addr.i317, align 8, !dbg !9609
  store [2 x i16]* %252, [2 x i16]** %table.addr.i318, align 8, !dbg !9609
  store i32 %254, i32* %bits.addr.i319, align 4, !dbg !9609
  store i32 1, i32* %max_depth.addr.i320, align 4, !dbg !9609
  %255 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i317, align 8, !dbg !9610
  %index.i328 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %255, i32 0, i32 2, !dbg !9611
  %256 = load i32, i32* %index.i328, align 8, !dbg !9611
  store i32 %256, i32* %re_index.i322, align 4, !dbg !8896
  %257 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i317, align 8, !dbg !9612
  %size_in_bits_plus8.i329 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %257, i32 0, i32 4, !dbg !9613
  %258 = load i32, i32* %size_in_bits_plus8.i329, align 8, !dbg !9613
  store i32 %258, i32* %re_size_plus8.i324, align 4, !dbg !8900
  %259 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i317, align 8, !dbg !9614
  %buffer.i330 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %259, i32 0, i32 0, !dbg !9615
  %260 = load i8*, i8** %buffer.i330, align 8, !dbg !9615
  %261 = load i32, i32* %re_index.i322, align 4, !dbg !9616
  %shr.i331 = lshr i32 %261, 3, !dbg !9617
  %idx.ext.i332 = zext i32 %shr.i331 to i64, !dbg !9618
  %add.ptr.i333 = getelementptr inbounds i8, i8* %260, i64 %idx.ext.i332, !dbg !9618
  %262 = bitcast i8* %add.ptr.i333 to %union.unaligned_32*, !dbg !9619
  %l.i334 = bitcast %union.unaligned_32* %262 to i32*, !dbg !9619
  %263 = load i32, i32* %l.i334, align 1, !dbg !9619
  store i32 %263, i32* %x.addr.i.i316, align 4, !dbg !9620
  %264 = load i32, i32* %x.addr.i.i316, align 4, !dbg !9621
  %shl.i.i335 = shl i32 %264, 8, !dbg !9622
  %and.i.i336 = and i32 %shl.i.i335, 65280, !dbg !9623
  %265 = load i32, i32* %x.addr.i.i316, align 4, !dbg !9624
  %shr.i.i337 = lshr i32 %265, 8, !dbg !9625
  %and1.i.i338 = and i32 %shr.i.i337, 255, !dbg !9626
  %or.i.i339 = or i32 %and.i.i336, %and1.i.i338, !dbg !9627
  %shl2.i.i340 = shl i32 %or.i.i339, 16, !dbg !9628
  %266 = load i32, i32* %x.addr.i.i316, align 4, !dbg !9629
  %shr3.i.i341 = lshr i32 %266, 16, !dbg !9630
  %shl4.i.i342 = shl i32 %shr3.i.i341, 8, !dbg !9631
  %and5.i.i343 = and i32 %shl4.i.i342, 65280, !dbg !9632
  %267 = load i32, i32* %x.addr.i.i316, align 4, !dbg !9633
  %shr6.i.i344 = lshr i32 %267, 16, !dbg !9634
  %shr7.i.i345 = lshr i32 %shr6.i.i344, 8, !dbg !9635
  %and8.i.i346 = and i32 %shr7.i.i345, 255, !dbg !9636
  %or9.i.i347 = or i32 %and5.i.i343, %and8.i.i346, !dbg !9637
  %or10.i.i348 = or i32 %shl2.i.i340, %or9.i.i347, !dbg !9638
  %268 = load i32, i32* %re_index.i322, align 4, !dbg !9639
  %and.i349 = and i32 %268, 7, !dbg !9640
  %shl.i350 = shl i32 %or10.i.i348, %and.i349, !dbg !9641
  store i32 %shl.i350, i32* %re_cache.i323, align 4, !dbg !9642
  %269 = load i32, i32* %re_cache.i323, align 4, !dbg !9643
  %270 = load i32, i32* %bits.addr.i319, align 4, !dbg !9644
  %conv.i351 = trunc i32 %270 to i8, !dbg !9644
  %call2.i352 = call i32 @NEG_USR32(i32 %269, i8 signext %conv.i351) #9, !dbg !9645
  store i32 %call2.i352, i32* %index1.i327, align 4, !dbg !9646
  %271 = load i32, i32* %index1.i327, align 4, !dbg !9647
  %idxprom.i353 = zext i32 %271 to i64, !dbg !9648
  %272 = load [2 x i16]*, [2 x i16]** %table.addr.i318, align 8, !dbg !9648
  %arrayidx.i354 = getelementptr inbounds [2 x i16], [2 x i16]* %272, i64 %idxprom.i353, !dbg !9648
  %arrayidx3.i355 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i354, i64 0, i64 0, !dbg !9648
  %273 = load i16, i16* %arrayidx3.i355, align 2, !dbg !9648
  %conv4.i356 = sext i16 %273 to i32, !dbg !9648
  store i32 %conv4.i356, i32* %code.i321, align 4, !dbg !9649
  %274 = load i32, i32* %index1.i327, align 4, !dbg !9650
  %idxprom5.i357 = zext i32 %274 to i64, !dbg !9651
  %275 = load [2 x i16]*, [2 x i16]** %table.addr.i318, align 8, !dbg !9651
  %arrayidx6.i358 = getelementptr inbounds [2 x i16], [2 x i16]* %275, i64 %idxprom5.i357, !dbg !9651
  %arrayidx7.i359 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i358, i64 0, i64 1, !dbg !9651
  %276 = load i16, i16* %arrayidx7.i359, align 2, !dbg !9651
  %conv8.i360 = sext i16 %276 to i32, !dbg !9651
  store i32 %conv8.i360, i32* %n.i325, align 4, !dbg !9652
  %277 = load i32, i32* %max_depth.addr.i320, align 4, !dbg !9653
  %cmp.i361 = icmp sgt i32 %277, 1, !dbg !9654
  br i1 %cmp.i361, label %land.lhs.true.i363, label %if.end68.i450, !dbg !9655

land.lhs.true.i363:                               ; preds = %if.end209
  %278 = load i32, i32* %n.i325, align 4, !dbg !9656
  %cmp10.i362 = icmp slt i32 %278, 0, !dbg !9657
  br i1 %cmp10.i362, label %if.then.i366, label %if.end68.i450, !dbg !9658

if.then.i366:                                     ; preds = %land.lhs.true.i363
  %279 = load i32, i32* %re_size_plus8.i324, align 4, !dbg !9659
  %280 = load i32, i32* %re_index.i322, align 4, !dbg !9660
  %281 = load i32, i32* %bits.addr.i319, align 4, !dbg !9661
  %add.i364 = add i32 %280, %281, !dbg !9662
  %cmp12.i365 = icmp ugt i32 %279, %add.i364, !dbg !9663
  br i1 %cmp12.i365, label %cond.true.i368, label %cond.false.i369, !dbg !9664

cond.true.i368:                                   ; preds = %if.then.i366
  %282 = load i32, i32* %re_index.i322, align 4, !dbg !9665
  %283 = load i32, i32* %bits.addr.i319, align 4, !dbg !9666
  %add14.i367 = add i32 %282, %283, !dbg !9667
  br label %cond.end.i405, !dbg !9668

cond.false.i369:                                  ; preds = %if.then.i366
  %284 = load i32, i32* %re_size_plus8.i324, align 4, !dbg !9669
  br label %cond.end.i405, !dbg !9670

cond.end.i405:                                    ; preds = %cond.false.i369, %cond.true.i368
  %cond.i370 = phi i32 [ %add14.i367, %cond.true.i368 ], [ %284, %cond.false.i369 ], !dbg !9671
  store i32 %cond.i370, i32* %re_index.i322, align 4, !dbg !9672
  %285 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i317, align 8, !dbg !9673
  %buffer15.i371 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %285, i32 0, i32 0, !dbg !9674
  %286 = load i8*, i8** %buffer15.i371, align 8, !dbg !9674
  %287 = load i32, i32* %re_index.i322, align 4, !dbg !9675
  %shr16.i372 = lshr i32 %287, 3, !dbg !9676
  %idx.ext17.i373 = zext i32 %shr16.i372 to i64, !dbg !9677
  %add.ptr18.i374 = getelementptr inbounds i8, i8* %286, i64 %idx.ext17.i373, !dbg !9677
  %288 = bitcast i8* %add.ptr18.i374 to %union.unaligned_32*, !dbg !9678
  %l19.i375 = bitcast %union.unaligned_32* %288 to i32*, !dbg !9678
  %289 = load i32, i32* %l19.i375, align 1, !dbg !9678
  store i32 %289, i32* %x.addr.i81.i315, align 4, !dbg !9679
  %290 = load i32, i32* %x.addr.i81.i315, align 4, !dbg !9680
  %shl.i82.i376 = shl i32 %290, 8, !dbg !9681
  %and.i83.i377 = and i32 %shl.i82.i376, 65280, !dbg !9682
  %291 = load i32, i32* %x.addr.i81.i315, align 4, !dbg !9683
  %shr.i84.i378 = lshr i32 %291, 8, !dbg !9684
  %and1.i85.i379 = and i32 %shr.i84.i378, 255, !dbg !9685
  %or.i86.i380 = or i32 %and.i83.i377, %and1.i85.i379, !dbg !9686
  %shl2.i87.i381 = shl i32 %or.i86.i380, 16, !dbg !9687
  %292 = load i32, i32* %x.addr.i81.i315, align 4, !dbg !9688
  %shr3.i88.i382 = lshr i32 %292, 16, !dbg !9689
  %shl4.i89.i383 = shl i32 %shr3.i88.i382, 8, !dbg !9690
  %and5.i90.i384 = and i32 %shl4.i89.i383, 65280, !dbg !9691
  %293 = load i32, i32* %x.addr.i81.i315, align 4, !dbg !9692
  %shr6.i91.i385 = lshr i32 %293, 16, !dbg !9693
  %shr7.i92.i386 = lshr i32 %shr6.i91.i385, 8, !dbg !9694
  %and8.i93.i387 = and i32 %shr7.i92.i386, 255, !dbg !9695
  %or9.i94.i388 = or i32 %and5.i90.i384, %and8.i93.i387, !dbg !9696
  %or10.i95.i389 = or i32 %shl2.i87.i381, %or9.i94.i388, !dbg !9697
  %294 = load i32, i32* %re_index.i322, align 4, !dbg !9698
  %and21.i390 = and i32 %294, 7, !dbg !9699
  %shl22.i391 = shl i32 %or10.i95.i389, %and21.i390, !dbg !9700
  store i32 %shl22.i391, i32* %re_cache.i323, align 4, !dbg !9701
  %295 = load i32, i32* %n.i325, align 4, !dbg !9702
  %sub.i392 = sub nsw i32 0, %295, !dbg !9703
  store i32 %sub.i392, i32* %nb_bits.i326, align 4, !dbg !9704
  %296 = load i32, i32* %re_cache.i323, align 4, !dbg !9705
  %297 = load i32, i32* %nb_bits.i326, align 4, !dbg !9706
  %conv23.i393 = trunc i32 %297 to i8, !dbg !9706
  %call24.i394 = call i32 @NEG_USR32(i32 %296, i8 signext %conv23.i393) #9, !dbg !9707
  %298 = load i32, i32* %code.i321, align 4, !dbg !9708
  %add25.i395 = add i32 %call24.i394, %298, !dbg !9709
  store i32 %add25.i395, i32* %index1.i327, align 4, !dbg !9710
  %299 = load i32, i32* %index1.i327, align 4, !dbg !9711
  %idxprom26.i396 = zext i32 %299 to i64, !dbg !9712
  %300 = load [2 x i16]*, [2 x i16]** %table.addr.i318, align 8, !dbg !9712
  %arrayidx27.i397 = getelementptr inbounds [2 x i16], [2 x i16]* %300, i64 %idxprom26.i396, !dbg !9712
  %arrayidx28.i398 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i397, i64 0, i64 0, !dbg !9712
  %301 = load i16, i16* %arrayidx28.i398, align 2, !dbg !9712
  %conv29.i399 = sext i16 %301 to i32, !dbg !9712
  store i32 %conv29.i399, i32* %code.i321, align 4, !dbg !9713
  %302 = load i32, i32* %index1.i327, align 4, !dbg !9714
  %idxprom30.i400 = zext i32 %302 to i64, !dbg !9715
  %303 = load [2 x i16]*, [2 x i16]** %table.addr.i318, align 8, !dbg !9715
  %arrayidx31.i401 = getelementptr inbounds [2 x i16], [2 x i16]* %303, i64 %idxprom30.i400, !dbg !9715
  %arrayidx32.i402 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i401, i64 0, i64 1, !dbg !9715
  %304 = load i16, i16* %arrayidx32.i402, align 2, !dbg !9715
  %conv33.i403 = sext i16 %304 to i32, !dbg !9715
  store i32 %conv33.i403, i32* %n.i325, align 4, !dbg !9716
  %305 = load i32, i32* %max_depth.addr.i320, align 4, !dbg !9717
  %cmp34.i404 = icmp sgt i32 %305, 2, !dbg !9718
  br i1 %cmp34.i404, label %land.lhs.true36.i407, label %if.end.i449, !dbg !9719

land.lhs.true36.i407:                             ; preds = %cond.end.i405
  %306 = load i32, i32* %n.i325, align 4, !dbg !9720
  %cmp37.i406 = icmp slt i32 %306, 0, !dbg !9721
  br i1 %cmp37.i406, label %if.then39.i410, label %if.end.i449, !dbg !9722

if.then39.i410:                                   ; preds = %land.lhs.true36.i407
  %307 = load i32, i32* %re_size_plus8.i324, align 4, !dbg !9723
  %308 = load i32, i32* %re_index.i322, align 4, !dbg !9724
  %309 = load i32, i32* %nb_bits.i326, align 4, !dbg !9725
  %add40.i408 = add i32 %308, %309, !dbg !9726
  %cmp41.i409 = icmp ugt i32 %307, %add40.i408, !dbg !9727
  br i1 %cmp41.i409, label %cond.true43.i412, label %cond.false45.i413, !dbg !9728

cond.true43.i412:                                 ; preds = %if.then39.i410
  %310 = load i32, i32* %re_index.i322, align 4, !dbg !9729
  %311 = load i32, i32* %nb_bits.i326, align 4, !dbg !9730
  %add44.i411 = add i32 %310, %311, !dbg !9731
  br label %cond.end46.i448, !dbg !9732

cond.false45.i413:                                ; preds = %if.then39.i410
  %312 = load i32, i32* %re_size_plus8.i324, align 4, !dbg !9733
  br label %cond.end46.i448, !dbg !9734

cond.end46.i448:                                  ; preds = %cond.false45.i413, %cond.true43.i412
  %cond47.i414 = phi i32 [ %add44.i411, %cond.true43.i412 ], [ %312, %cond.false45.i413 ], !dbg !9735
  store i32 %cond47.i414, i32* %re_index.i322, align 4, !dbg !9736
  %313 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i317, align 8, !dbg !9737
  %buffer48.i415 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %313, i32 0, i32 0, !dbg !9738
  %314 = load i8*, i8** %buffer48.i415, align 8, !dbg !9738
  %315 = load i32, i32* %re_index.i322, align 4, !dbg !9739
  %shr49.i416 = lshr i32 %315, 3, !dbg !9740
  %idx.ext50.i417 = zext i32 %shr49.i416 to i64, !dbg !9741
  %add.ptr51.i418 = getelementptr inbounds i8, i8* %314, i64 %idx.ext50.i417, !dbg !9741
  %316 = bitcast i8* %add.ptr51.i418 to %union.unaligned_32*, !dbg !9742
  %l52.i419 = bitcast %union.unaligned_32* %316 to i32*, !dbg !9742
  %317 = load i32, i32* %l52.i419, align 1, !dbg !9742
  store i32 %317, i32* %x.addr.i96.i314, align 4, !dbg !9743
  %318 = load i32, i32* %x.addr.i96.i314, align 4, !dbg !9744
  %shl.i97.i420 = shl i32 %318, 8, !dbg !9745
  %and.i98.i421 = and i32 %shl.i97.i420, 65280, !dbg !9746
  %319 = load i32, i32* %x.addr.i96.i314, align 4, !dbg !9747
  %shr.i99.i422 = lshr i32 %319, 8, !dbg !9748
  %and1.i100.i423 = and i32 %shr.i99.i422, 255, !dbg !9749
  %or.i101.i424 = or i32 %and.i98.i421, %and1.i100.i423, !dbg !9750
  %shl2.i102.i425 = shl i32 %or.i101.i424, 16, !dbg !9751
  %320 = load i32, i32* %x.addr.i96.i314, align 4, !dbg !9752
  %shr3.i103.i426 = lshr i32 %320, 16, !dbg !9753
  %shl4.i104.i427 = shl i32 %shr3.i103.i426, 8, !dbg !9754
  %and5.i105.i428 = and i32 %shl4.i104.i427, 65280, !dbg !9755
  %321 = load i32, i32* %x.addr.i96.i314, align 4, !dbg !9756
  %shr6.i106.i429 = lshr i32 %321, 16, !dbg !9757
  %shr7.i107.i430 = lshr i32 %shr6.i106.i429, 8, !dbg !9758
  %and8.i108.i431 = and i32 %shr7.i107.i430, 255, !dbg !9759
  %or9.i109.i432 = or i32 %and5.i105.i428, %and8.i108.i431, !dbg !9760
  %or10.i110.i433 = or i32 %shl2.i102.i425, %or9.i109.i432, !dbg !9761
  %322 = load i32, i32* %re_index.i322, align 4, !dbg !9762
  %and54.i434 = and i32 %322, 7, !dbg !9763
  %shl55.i435 = shl i32 %or10.i110.i433, %and54.i434, !dbg !9764
  store i32 %shl55.i435, i32* %re_cache.i323, align 4, !dbg !9765
  %323 = load i32, i32* %n.i325, align 4, !dbg !9766
  %sub56.i436 = sub nsw i32 0, %323, !dbg !9767
  store i32 %sub56.i436, i32* %nb_bits.i326, align 4, !dbg !9768
  %324 = load i32, i32* %re_cache.i323, align 4, !dbg !9769
  %325 = load i32, i32* %nb_bits.i326, align 4, !dbg !9770
  %conv57.i437 = trunc i32 %325 to i8, !dbg !9770
  %call58.i438 = call i32 @NEG_USR32(i32 %324, i8 signext %conv57.i437) #9, !dbg !9771
  %326 = load i32, i32* %code.i321, align 4, !dbg !9772
  %add59.i439 = add i32 %call58.i438, %326, !dbg !9773
  store i32 %add59.i439, i32* %index1.i327, align 4, !dbg !9774
  %327 = load i32, i32* %index1.i327, align 4, !dbg !9775
  %idxprom60.i440 = zext i32 %327 to i64, !dbg !9776
  %328 = load [2 x i16]*, [2 x i16]** %table.addr.i318, align 8, !dbg !9776
  %arrayidx61.i441 = getelementptr inbounds [2 x i16], [2 x i16]* %328, i64 %idxprom60.i440, !dbg !9776
  %arrayidx62.i442 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i441, i64 0, i64 0, !dbg !9776
  %329 = load i16, i16* %arrayidx62.i442, align 2, !dbg !9776
  %conv63.i443 = sext i16 %329 to i32, !dbg !9776
  store i32 %conv63.i443, i32* %code.i321, align 4, !dbg !9777
  %330 = load i32, i32* %index1.i327, align 4, !dbg !9778
  %idxprom64.i444 = zext i32 %330 to i64, !dbg !9779
  %331 = load [2 x i16]*, [2 x i16]** %table.addr.i318, align 8, !dbg !9779
  %arrayidx65.i445 = getelementptr inbounds [2 x i16], [2 x i16]* %331, i64 %idxprom64.i444, !dbg !9779
  %arrayidx66.i446 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i445, i64 0, i64 1, !dbg !9779
  %332 = load i16, i16* %arrayidx66.i446, align 2, !dbg !9779
  %conv67.i447 = sext i16 %332 to i32, !dbg !9779
  store i32 %conv67.i447, i32* %n.i325, align 4, !dbg !9780
  br label %if.end.i449, !dbg !9781

if.end.i449:                                      ; preds = %cond.end46.i448, %land.lhs.true36.i407, %cond.end.i405
  br label %if.end68.i450, !dbg !9782

if.end68.i450:                                    ; preds = %if.end.i449, %land.lhs.true.i363, %if.end209
  %333 = load i32, i32* %n.i325, align 4, !dbg !9783
  %334 = load i32, i32* %re_cache.i323, align 4, !dbg !9784
  %shl70.i451 = shl i32 %334, %333, !dbg !9784
  store i32 %shl70.i451, i32* %re_cache.i323, align 4, !dbg !9784
  %335 = load i32, i32* %re_size_plus8.i324, align 4, !dbg !9785
  %336 = load i32, i32* %re_index.i322, align 4, !dbg !9786
  %337 = load i32, i32* %n.i325, align 4, !dbg !9787
  %add71.i452 = add i32 %336, %337, !dbg !9788
  %cmp72.i453 = icmp ugt i32 %335, %add71.i452, !dbg !9789
  br i1 %cmp72.i453, label %cond.true74.i455, label %cond.false76.i456, !dbg !9790

cond.true74.i455:                                 ; preds = %if.end68.i450
  %338 = load i32, i32* %re_index.i322, align 4, !dbg !9791
  %339 = load i32, i32* %n.i325, align 4, !dbg !9792
  %add75.i454 = add i32 %338, %339, !dbg !9793
  br label %get_vlc2.exit459, !dbg !9794

cond.false76.i456:                                ; preds = %if.end68.i450
  %340 = load i32, i32* %re_size_plus8.i324, align 4, !dbg !9795
  br label %get_vlc2.exit459, !dbg !9796

get_vlc2.exit459:                                 ; preds = %cond.true74.i455, %cond.false76.i456
  %cond78.i457 = phi i32 [ %add75.i454, %cond.true74.i455 ], [ %340, %cond.false76.i456 ], !dbg !9797
  store i32 %cond78.i457, i32* %re_index.i322, align 4, !dbg !9798
  %341 = load i32, i32* %re_index.i322, align 4, !dbg !9799
  %342 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i317, align 8, !dbg !9800
  %index80.i458 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %342, i32 0, i32 2, !dbg !9801
  store i32 %341, i32* %index80.i458, align 8, !dbg !9802
  %343 = load i32, i32* %code.i321, align 4, !dbg !9803
  store i32 %343, i32* %code, align 4, !dbg !9804
  br label %do.body213, !dbg !9805, !llvm.loop !9806

do.body213:                                       ; preds = %get_vlc2.exit459
  br label %do.end214, !dbg !9807

do.end214:                                        ; preds = %do.body213
  %344 = load i32, i32* %s_index, align 4, !dbg !9810
  %add215 = add nsw i32 %344, 3, !dbg !9811
  %idxprom216 = sext i32 %add215 to i64, !dbg !9812
  %345 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9812
  %sb_hybrid217 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %345, i32 0, i32 17, !dbg !9813
  %arrayidx218 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid217, i64 0, i64 %idxprom216, !dbg !9812
  store float 0.000000e+00, float* %arrayidx218, align 4, !dbg !9814
  %346 = load i32, i32* %s_index, align 4, !dbg !9815
  %add219 = add nsw i32 %346, 2, !dbg !9816
  %idxprom220 = sext i32 %add219 to i64, !dbg !9817
  %347 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9817
  %sb_hybrid221 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %347, i32 0, i32 17, !dbg !9818
  %arrayidx222 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid221, i64 0, i64 %idxprom220, !dbg !9817
  store float 0.000000e+00, float* %arrayidx222, align 4, !dbg !9819
  %348 = load i32, i32* %s_index, align 4, !dbg !9820
  %add223 = add nsw i32 %348, 1, !dbg !9821
  %idxprom224 = sext i32 %add223 to i64, !dbg !9822
  %349 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9822
  %sb_hybrid225 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %349, i32 0, i32 17, !dbg !9823
  %arrayidx226 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid225, i64 0, i64 %idxprom224, !dbg !9822
  store float 0.000000e+00, float* %arrayidx226, align 4, !dbg !9824
  %350 = load i32, i32* %s_index, align 4, !dbg !9825
  %add227 = add nsw i32 %350, 0, !dbg !9826
  %idxprom228 = sext i32 %add227 to i64, !dbg !9827
  %351 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9827
  %sb_hybrid229 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %351, i32 0, i32 17, !dbg !9828
  %arrayidx230 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid229, i64 0, i64 %idxprom228, !dbg !9827
  store float 0.000000e+00, float* %arrayidx230, align 4, !dbg !9829
  br label %while.cond231, !dbg !9830

while.cond231:                                    ; preds = %while.body233, %do.end214
  %352 = load i32, i32* %code, align 4, !dbg !9831
  %tobool232 = icmp ne i32 %352, 0, !dbg !9833
  br i1 %tobool232, label %while.body233, label %while.end, !dbg !9833

while.body233:                                    ; preds = %while.cond231
  call void @llvm.dbg.declare(metadata i32* %v234, metadata !9834, metadata !2031), !dbg !9836
  call void @llvm.dbg.declare(metadata i32* %pos235, metadata !9837, metadata !2031), !dbg !9838
  %353 = load i32, i32* %s_index, align 4, !dbg !9839
  %354 = load i32, i32* %code, align 4, !dbg !9840
  %idxprom236 = sext i32 %354 to i64, !dbg !9841
  %arrayidx237 = getelementptr inbounds [16 x i32], [16 x i32]* @huffman_decode.idxtab, i64 0, i64 %idxprom236, !dbg !9841
  %355 = load i32, i32* %arrayidx237, align 4, !dbg !9841
  %add238 = add nsw i32 %353, %355, !dbg !9842
  store i32 %add238, i32* %pos235, align 4, !dbg !9838
  %356 = load i32, i32* %code, align 4, !dbg !9843
  %idxprom239 = sext i32 %356 to i64, !dbg !9844
  %arrayidx240 = getelementptr inbounds [16 x i32], [16 x i32]* @huffman_decode.idxtab, i64 0, i64 %idxprom239, !dbg !9844
  %357 = load i32, i32* %arrayidx240, align 4, !dbg !9844
  %shr241 = ashr i32 8, %357, !dbg !9845
  %358 = load i32, i32* %code, align 4, !dbg !9846
  %xor242 = xor i32 %358, %shr241, !dbg !9846
  store i32 %xor242, i32* %code, align 4, !dbg !9846
  %359 = load i32, i32* %pos235, align 4, !dbg !9847
  %idxprom243 = sext i32 %359 to i64, !dbg !9848
  %360 = load i16*, i16** %exponents.addr, align 8, !dbg !9848
  %arrayidx244 = getelementptr inbounds i16, i16* %360, i64 %idxprom243, !dbg !9848
  %361 = load i16, i16* %arrayidx244, align 2, !dbg !9848
  %conv245 = sext i16 %361 to i32, !dbg !9848
  %idx.ext246 = sext i32 %conv245 to i64, !dbg !9849
  %add.ptr247 = getelementptr inbounds float, float* getelementptr inbounds ([512 x float], [512 x float]* @exp_table_float, i32 0, i32 0), i64 %idx.ext246, !dbg !9849
  %362 = bitcast float* %add.ptr247 to %union.av_alias32*, !dbg !9850
  %u32248 = bitcast %union.av_alias32* %362 to i32*, !dbg !9850
  %363 = load i32, i32* %u32248, align 4, !dbg !9850
  %364 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9851
  %gb249 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %364, i32 0, i32 14, !dbg !9852
  %call250 = call i32 @get_bits1(%struct.GetBitContext* %gb249), !dbg !9853
  %shl251 = shl i32 %call250, 31, !dbg !9854
  %xor252 = xor i32 %363, %shl251, !dbg !9855
  store i32 %xor252, i32* %v234, align 4, !dbg !9856
  %365 = load i32, i32* %v234, align 4, !dbg !9857
  %366 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9858
  %sb_hybrid253 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %366, i32 0, i32 17, !dbg !9859
  %arraydecay254 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid253, i32 0, i32 0, !dbg !9858
  %367 = load i32, i32* %pos235, align 4, !dbg !9860
  %idx.ext255 = sext i32 %367 to i64, !dbg !9861
  %add.ptr256 = getelementptr inbounds float, float* %arraydecay254, i64 %idx.ext255, !dbg !9861
  %368 = bitcast float* %add.ptr256 to %union.av_alias32*, !dbg !9862
  %u32257 = bitcast %union.av_alias32* %368 to i32*, !dbg !9862
  store i32 %365, i32* %u32257, align 4, !dbg !9863
  br label %while.cond231, !dbg !9864, !llvm.loop !9866

while.end:                                        ; preds = %while.cond231
  %369 = load i32, i32* %s_index, align 4, !dbg !9867
  %add258 = add nsw i32 %369, 4, !dbg !9867
  store i32 %add258, i32* %s_index, align 4, !dbg !9867
  br label %while.cond, !dbg !9868, !llvm.loop !9869

while.end259:                                     ; preds = %if.then207, %if.end203, %while.cond
  %370 = load i32, i32* %end_pos2.addr, align 4, !dbg !9870
  %371 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9871
  %gb260 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %371, i32 0, i32 14, !dbg !9872
  %call261 = call i32 @get_bits_count(%struct.GetBitContext* %gb260), !dbg !9873
  %sub262 = sub nsw i32 %370, %call261, !dbg !9874
  store i32 %sub262, i32* %bits_left, align 4, !dbg !9875
  %372 = load i32, i32* %bits_left, align 4, !dbg !9876
  %cmp263 = icmp slt i32 %372, 0, !dbg !9878
  br i1 %cmp263, label %land.lhs.true265, label %if.else271, !dbg !9879

land.lhs.true265:                                 ; preds = %while.end259
  %373 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9880
  %err_recognition266 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %373, i32 0, i32 25, !dbg !9882
  %374 = load i32, i32* %err_recognition266, align 8, !dbg !9882
  %and267 = and i32 %374, 131076, !dbg !9883
  %tobool268 = icmp ne i32 %and267, 0, !dbg !9883
  br i1 %tobool268, label %if.then269, label %if.else271, !dbg !9884

if.then269:                                       ; preds = %land.lhs.true265
  %375 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9885
  %avctx270 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %375, i32 0, i32 26, !dbg !9887
  %376 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx270, align 16, !dbg !9887
  %377 = bitcast %struct.AVCodecContext* %376 to i8*, !dbg !9885
  %378 = load i32, i32* %bits_left, align 4, !dbg !9888
  call void (i8*, i32, i8*, ...) @av_log(i8* %377, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i32 %378), !dbg !9889
  store i32 0, i32* %s_index, align 4, !dbg !9890
  br label %if.end281, !dbg !9891

if.else271:                                       ; preds = %land.lhs.true265, %while.end259
  %379 = load i32, i32* %bits_left, align 4, !dbg !9892
  %cmp272 = icmp sgt i32 %379, 0, !dbg !9895
  br i1 %cmp272, label %land.lhs.true274, label %if.end280, !dbg !9896

land.lhs.true274:                                 ; preds = %if.else271
  %380 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9897
  %err_recognition275 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %380, i32 0, i32 25, !dbg !9899
  %381 = load i32, i32* %err_recognition275, align 8, !dbg !9899
  %and276 = and i32 %381, 262148, !dbg !9900
  %tobool277 = icmp ne i32 %and276, 0, !dbg !9900
  br i1 %tobool277, label %if.then278, label %if.end280, !dbg !9901

if.then278:                                       ; preds = %land.lhs.true274
  %382 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9902
  %avctx279 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %382, i32 0, i32 26, !dbg !9904
  %383 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx279, align 16, !dbg !9904
  %384 = bitcast %struct.AVCodecContext* %383 to i8*, !dbg !9902
  %385 = load i32, i32* %bits_left, align 4, !dbg !9905
  call void (i8*, i32, i8*, ...) @av_log(i8* %384, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i32 %385), !dbg !9906
  store i32 0, i32* %s_index, align 4, !dbg !9907
  br label %if.end280, !dbg !9908

if.end280:                                        ; preds = %if.then278, %land.lhs.true274, %if.else271
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then269
  %386 = load i32, i32* %s_index, align 4, !dbg !9909
  %idxprom282 = sext i32 %386 to i64, !dbg !9910
  %387 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9910
  %sb_hybrid283 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %387, i32 0, i32 17, !dbg !9911
  %arrayidx284 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid283, i64 0, i64 %idxprom282, !dbg !9910
  %388 = bitcast float* %arrayidx284 to i8*, !dbg !9912
  %389 = load i32, i32* %s_index, align 4, !dbg !9913
  %sub285 = sub nsw i32 576, %389, !dbg !9914
  %conv286 = sext i32 %sub285 to i64, !dbg !9915
  %mul287 = mul i64 4, %conv286, !dbg !9916
  call void @llvm.memset.p0i8.i64(i8* %388, i8 0, i64 %mul287, i32 4, i1 false), !dbg !9912
  %390 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9917
  %gb288 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %390, i32 0, i32 14, !dbg !9918
  %391 = load i32, i32* %bits_left, align 4, !dbg !9919
  call void @skip_bits_long(%struct.GetBitContext* %gb288, i32 %391), !dbg !9920
  %392 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9921
  %gb289 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %392, i32 0, i32 14, !dbg !9922
  %call290 = call i32 @get_bits_count(%struct.GetBitContext* %gb289), !dbg !9923
  store i32 %call290, i32* %i, align 4, !dbg !9924
  %393 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9925
  call void @switch_buffer(%struct.MPADecodeContext* %393, i32* %i, i32* %end_pos, i32* %end_pos2.addr), !dbg !9926
  ret i32 0, !dbg !9927
}

; Function Attrs: nounwind uwtable
define internal void @compute_stereo(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g0, %struct.GranuleDef* %g1) #1 !dbg !9928 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g0.addr = alloca %struct.GranuleDef*, align 8
  %g1.addr = alloca %struct.GranuleDef*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %sf_max = alloca i32, align 4
  %sf = alloca i32, align 4
  %len = alloca i32, align 4
  %non_zero_found = alloca i32, align 4
  %is_tab = alloca [16 x float]*, align 8
  %tab0 = alloca float*, align 8
  %tab1 = alloca float*, align 8
  %v1 = alloca float, align 4
  %v2 = alloca float, align 4
  %tmp0 = alloca float, align 4
  %tmp1 = alloca float, align 4
  %non_zero_found_short = alloca [3 x i32], align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !9931, metadata !2031), !dbg !9932
  store %struct.GranuleDef* %g0, %struct.GranuleDef** %g0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g0.addr, metadata !9933, metadata !2031), !dbg !9934
  store %struct.GranuleDef* %g1, %struct.GranuleDef** %g1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g1.addr, metadata !9935, metadata !2031), !dbg !9936
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9937, metadata !2031), !dbg !9938
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9939, metadata !2031), !dbg !9940
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9941, metadata !2031), !dbg !9942
  call void @llvm.dbg.declare(metadata i32* %l, metadata !9943, metadata !2031), !dbg !9944
  call void @llvm.dbg.declare(metadata i32* %sf_max, metadata !9945, metadata !2031), !dbg !9946
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !9947, metadata !2031), !dbg !9948
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9949, metadata !2031), !dbg !9950
  call void @llvm.dbg.declare(metadata i32* %non_zero_found, metadata !9951, metadata !2031), !dbg !9952
  call void @llvm.dbg.declare(metadata [16 x float]** %is_tab, metadata !9953, metadata !2031), !dbg !9956
  call void @llvm.dbg.declare(metadata float** %tab0, metadata !9957, metadata !2031), !dbg !9958
  call void @llvm.dbg.declare(metadata float** %tab1, metadata !9959, metadata !2031), !dbg !9960
  call void @llvm.dbg.declare(metadata float* %v1, metadata !9961, metadata !2031), !dbg !9962
  call void @llvm.dbg.declare(metadata float* %v2, metadata !9963, metadata !2031), !dbg !9964
  call void @llvm.dbg.declare(metadata float* %tmp0, metadata !9965, metadata !2031), !dbg !9966
  call void @llvm.dbg.declare(metadata float* %tmp1, metadata !9967, metadata !2031), !dbg !9968
  call void @llvm.dbg.declare(metadata [3 x i32]* %non_zero_found_short, metadata !9969, metadata !2031), !dbg !9970
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9971
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 8, !dbg !9973
  %1 = load i32, i32* %mode_ext, align 32, !dbg !9973
  %and = and i32 %1, 1, !dbg !9974
  %tobool = icmp ne i32 %and, 0, !dbg !9974
  br i1 %tobool, label %if.then, label %if.else202, !dbg !9975

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9976
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 9, !dbg !9979
  %3 = load i32, i32* %lsf, align 4, !dbg !9979
  %tobool1 = icmp ne i32 %3, 0, !dbg !9976
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !9980

if.then2:                                         ; preds = %if.then
  store [16 x float]* getelementptr inbounds ([2 x [16 x float]], [2 x [16 x float]]* @is_table, i32 0, i32 0), [16 x float]** %is_tab, align 8, !dbg !9981
  store i32 7, i32* %sf_max, align 4, !dbg !9983
  br label %if.end, !dbg !9984

if.else:                                          ; preds = %if.then
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !9985
  %scalefac_compress = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 4, !dbg !9987
  %5 = load i32, i32* %scalefac_compress, align 16, !dbg !9987
  %and3 = and i32 %5, 1, !dbg !9988
  %idxprom = sext i32 %and3 to i64, !dbg !9989
  %arrayidx = getelementptr inbounds [2 x [2 x [16 x float]]], [2 x [2 x [16 x float]]]* @is_table_lsf, i64 0, i64 %idxprom, !dbg !9989
  %arraydecay = getelementptr inbounds [2 x [16 x float]], [2 x [16 x float]]* %arrayidx, i32 0, i32 0, !dbg !9989
  store [16 x float]* %arraydecay, [16 x float]** %is_tab, align 8, !dbg !9990
  store i32 16, i32* %sf_max, align 4, !dbg !9991
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %6 = load %struct.GranuleDef*, %struct.GranuleDef** %g0.addr, align 8, !dbg !9992
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %6, i32 0, i32 17, !dbg !9993
  %arraydecay4 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid, i32 0, i32 0, !dbg !9992
  %add.ptr = getelementptr inbounds float, float* %arraydecay4, i64 576, !dbg !9994
  store float* %add.ptr, float** %tab0, align 8, !dbg !9995
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !9996
  %sb_hybrid5 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 17, !dbg !9997
  %arraydecay6 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid5, i32 0, i32 0, !dbg !9996
  %add.ptr7 = getelementptr inbounds float, float* %arraydecay6, i64 576, !dbg !9998
  store float* %add.ptr7, float** %tab1, align 8, !dbg !9999
  %arrayidx8 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 0, !dbg !10000
  store i32 0, i32* %arrayidx8, align 4, !dbg !10001
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 1, !dbg !10002
  store i32 0, i32* %arrayidx9, align 4, !dbg !10003
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 2, !dbg !10004
  store i32 0, i32* %arrayidx10, align 4, !dbg !10005
  %8 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10006
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %8, i32 0, i32 13, !dbg !10007
  %9 = load i32, i32* %short_start, align 4, !dbg !10007
  %sub = sub nsw i32 13, %9, !dbg !10008
  %mul = mul nsw i32 %sub, 3, !dbg !10009
  %10 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10010
  %long_end = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %10, i32 0, i32 14, !dbg !10011
  %11 = load i32, i32* %long_end, align 8, !dbg !10011
  %add = add nsw i32 %mul, %11, !dbg !10012
  %sub11 = sub nsw i32 %add, 3, !dbg !10013
  store i32 %sub11, i32* %k, align 4, !dbg !10014
  store i32 12, i32* %i, align 4, !dbg !10015
  br label %for.cond, !dbg !10017

for.cond:                                         ; preds = %for.inc102, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !10018
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10021
  %short_start12 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 13, !dbg !10022
  %14 = load i32, i32* %short_start12, align 4, !dbg !10022
  %cmp = icmp sge i32 %12, %14, !dbg !10023
  br i1 %cmp, label %for.body, label %for.end104, !dbg !10024

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !10025
  %cmp13 = icmp ne i32 %15, 11, !dbg !10028
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !10029

if.then14:                                        ; preds = %for.body
  %16 = load i32, i32* %k, align 4, !dbg !10030
  %sub15 = sub nsw i32 %16, 3, !dbg !10030
  store i32 %sub15, i32* %k, align 4, !dbg !10030
  br label %if.end16, !dbg !10031

if.end16:                                         ; preds = %if.then14, %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10032
  %idxprom17 = sext i32 %17 to i64, !dbg !10033
  %18 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10034
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %18, i32 0, i32 4, !dbg !10035
  %19 = load i32, i32* %sample_rate_index, align 16, !dbg !10035
  %idxprom18 = sext i32 %19 to i64, !dbg !10033
  %arrayidx19 = getelementptr inbounds [9 x [13 x i8]], [9 x [13 x i8]]* @band_size_short, i64 0, i64 %idxprom18, !dbg !10033
  %arrayidx20 = getelementptr inbounds [13 x i8], [13 x i8]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !10033
  %20 = load i8, i8* %arrayidx20, align 1, !dbg !10033
  %conv = zext i8 %20 to i32, !dbg !10033
  store i32 %conv, i32* %len, align 4, !dbg !10036
  store i32 2, i32* %l, align 4, !dbg !10037
  br label %for.cond21, !dbg !10039

for.cond21:                                       ; preds = %for.inc100, %if.end16
  %21 = load i32, i32* %l, align 4, !dbg !10040
  %cmp22 = icmp sge i32 %21, 0, !dbg !10043
  br i1 %cmp22, label %for.body24, label %for.end101, !dbg !10044

for.body24:                                       ; preds = %for.cond21
  %22 = load i32, i32* %len, align 4, !dbg !10045
  %23 = load float*, float** %tab0, align 8, !dbg !10047
  %idx.ext = sext i32 %22 to i64, !dbg !10047
  %idx.neg = sub i64 0, %idx.ext, !dbg !10047
  %add.ptr25 = getelementptr inbounds float, float* %23, i64 %idx.neg, !dbg !10047
  store float* %add.ptr25, float** %tab0, align 8, !dbg !10047
  %24 = load i32, i32* %len, align 4, !dbg !10048
  %25 = load float*, float** %tab1, align 8, !dbg !10049
  %idx.ext26 = sext i32 %24 to i64, !dbg !10049
  %idx.neg27 = sub i64 0, %idx.ext26, !dbg !10049
  %add.ptr28 = getelementptr inbounds float, float* %25, i64 %idx.neg27, !dbg !10049
  store float* %add.ptr28, float** %tab1, align 8, !dbg !10049
  %26 = load i32, i32* %l, align 4, !dbg !10050
  %idxprom29 = sext i32 %26 to i64, !dbg !10052
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 %idxprom29, !dbg !10052
  %27 = load i32, i32* %arrayidx30, align 4, !dbg !10052
  %tobool31 = icmp ne i32 %27, 0, !dbg !10052
  br i1 %tobool31, label %if.else74, label %if.then32, !dbg !10053

if.then32:                                        ; preds = %for.body24
  store i32 0, i32* %j, align 4, !dbg !10054
  br label %for.cond33, !dbg !10057

for.cond33:                                       ; preds = %for.inc, %if.then32
  %28 = load i32, i32* %j, align 4, !dbg !10058
  %29 = load i32, i32* %len, align 4, !dbg !10061
  %cmp34 = icmp slt i32 %28, %29, !dbg !10062
  br i1 %cmp34, label %for.body36, label %for.end, !dbg !10063

for.body36:                                       ; preds = %for.cond33
  %30 = load i32, i32* %j, align 4, !dbg !10064
  %idxprom37 = sext i32 %30 to i64, !dbg !10067
  %31 = load float*, float** %tab1, align 8, !dbg !10067
  %arrayidx38 = getelementptr inbounds float, float* %31, i64 %idxprom37, !dbg !10067
  %32 = load float, float* %arrayidx38, align 4, !dbg !10067
  %cmp39 = fcmp une float %32, 0.000000e+00, !dbg !10068
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !10069

if.then41:                                        ; preds = %for.body36
  %33 = load i32, i32* %l, align 4, !dbg !10070
  %idxprom42 = sext i32 %33 to i64, !dbg !10072
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 %idxprom42, !dbg !10072
  store i32 1, i32* %arrayidx43, align 4, !dbg !10073
  br label %found1, !dbg !10074

if.end44:                                         ; preds = %for.body36
  br label %for.inc, !dbg !10075

for.inc:                                          ; preds = %if.end44
  %34 = load i32, i32* %j, align 4, !dbg !10076
  %inc = add nsw i32 %34, 1, !dbg !10076
  store i32 %inc, i32* %j, align 4, !dbg !10076
  br label %for.cond33, !dbg !10078, !llvm.loop !10079

for.end:                                          ; preds = %for.cond33
  %35 = load i32, i32* %k, align 4, !dbg !10081
  %36 = load i32, i32* %l, align 4, !dbg !10082
  %add45 = add nsw i32 %35, %36, !dbg !10083
  %idxprom46 = sext i32 %add45 to i64, !dbg !10084
  %37 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10084
  %scale_factors = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %37, i32 0, i32 15, !dbg !10085
  %arrayidx47 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors, i64 0, i64 %idxprom46, !dbg !10084
  %38 = load i8, i8* %arrayidx47, align 1, !dbg !10084
  %conv48 = zext i8 %38 to i32, !dbg !10084
  store i32 %conv48, i32* %sf, align 4, !dbg !10086
  %39 = load i32, i32* %sf, align 4, !dbg !10087
  %40 = load i32, i32* %sf_max, align 4, !dbg !10089
  %cmp49 = icmp sge i32 %39, %40, !dbg !10090
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !10091

if.then51:                                        ; preds = %for.end
  br label %found1, !dbg !10092

if.end52:                                         ; preds = %for.end
  %41 = load i32, i32* %sf, align 4, !dbg !10093
  %idxprom53 = sext i32 %41 to i64, !dbg !10094
  %42 = load [16 x float]*, [16 x float]** %is_tab, align 8, !dbg !10094
  %arrayidx54 = getelementptr inbounds [16 x float], [16 x float]* %42, i64 0, !dbg !10094
  %arrayidx55 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx54, i64 0, i64 %idxprom53, !dbg !10094
  %43 = load float, float* %arrayidx55, align 4, !dbg !10094
  store float %43, float* %v1, align 4, !dbg !10095
  %44 = load i32, i32* %sf, align 4, !dbg !10096
  %idxprom56 = sext i32 %44 to i64, !dbg !10097
  %45 = load [16 x float]*, [16 x float]** %is_tab, align 8, !dbg !10097
  %arrayidx57 = getelementptr inbounds [16 x float], [16 x float]* %45, i64 1, !dbg !10097
  %arrayidx58 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx57, i64 0, i64 %idxprom56, !dbg !10097
  %46 = load float, float* %arrayidx58, align 4, !dbg !10097
  store float %46, float* %v2, align 4, !dbg !10098
  store i32 0, i32* %j, align 4, !dbg !10099
  br label %for.cond59, !dbg !10101

for.cond59:                                       ; preds = %for.inc71, %if.end52
  %47 = load i32, i32* %j, align 4, !dbg !10102
  %48 = load i32, i32* %len, align 4, !dbg !10105
  %cmp60 = icmp slt i32 %47, %48, !dbg !10106
  br i1 %cmp60, label %for.body62, label %for.end73, !dbg !10107

for.body62:                                       ; preds = %for.cond59
  %49 = load i32, i32* %j, align 4, !dbg !10108
  %idxprom63 = sext i32 %49 to i64, !dbg !10110
  %50 = load float*, float** %tab0, align 8, !dbg !10110
  %arrayidx64 = getelementptr inbounds float, float* %50, i64 %idxprom63, !dbg !10110
  %51 = load float, float* %arrayidx64, align 4, !dbg !10110
  store float %51, float* %tmp0, align 4, !dbg !10111
  %52 = load float, float* %v1, align 4, !dbg !10112
  %53 = load float, float* %tmp0, align 4, !dbg !10113
  %mul65 = fmul float %52, %53, !dbg !10114
  %54 = load i32, i32* %j, align 4, !dbg !10115
  %idxprom66 = sext i32 %54 to i64, !dbg !10116
  %55 = load float*, float** %tab0, align 8, !dbg !10116
  %arrayidx67 = getelementptr inbounds float, float* %55, i64 %idxprom66, !dbg !10116
  store float %mul65, float* %arrayidx67, align 4, !dbg !10117
  %56 = load float, float* %v2, align 4, !dbg !10118
  %57 = load float, float* %tmp0, align 4, !dbg !10119
  %mul68 = fmul float %56, %57, !dbg !10120
  %58 = load i32, i32* %j, align 4, !dbg !10121
  %idxprom69 = sext i32 %58 to i64, !dbg !10122
  %59 = load float*, float** %tab1, align 8, !dbg !10122
  %arrayidx70 = getelementptr inbounds float, float* %59, i64 %idxprom69, !dbg !10122
  store float %mul68, float* %arrayidx70, align 4, !dbg !10123
  br label %for.inc71, !dbg !10124

for.inc71:                                        ; preds = %for.body62
  %60 = load i32, i32* %j, align 4, !dbg !10125
  %inc72 = add nsw i32 %60, 1, !dbg !10125
  store i32 %inc72, i32* %j, align 4, !dbg !10125
  br label %for.cond59, !dbg !10127, !llvm.loop !10128

for.end73:                                        ; preds = %for.cond59
  br label %if.end99, !dbg !10130

if.else74:                                        ; preds = %for.body24
  br label %found1, !dbg !10131

found1:                                           ; preds = %if.else74, %if.then51, %if.then41
  %61 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10133
  %mode_ext75 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %61, i32 0, i32 8, !dbg !10136
  %62 = load i32, i32* %mode_ext75, align 32, !dbg !10136
  %and76 = and i32 %62, 2, !dbg !10137
  %tobool77 = icmp ne i32 %and76, 0, !dbg !10137
  br i1 %tobool77, label %if.then78, label %if.end98, !dbg !10138

if.then78:                                        ; preds = %found1
  store i32 0, i32* %j, align 4, !dbg !10139
  br label %for.cond79, !dbg !10142

for.cond79:                                       ; preds = %for.inc95, %if.then78
  %63 = load i32, i32* %j, align 4, !dbg !10143
  %64 = load i32, i32* %len, align 4, !dbg !10146
  %cmp80 = icmp slt i32 %63, %64, !dbg !10147
  br i1 %cmp80, label %for.body82, label %for.end97, !dbg !10148

for.body82:                                       ; preds = %for.cond79
  %65 = load i32, i32* %j, align 4, !dbg !10149
  %idxprom83 = sext i32 %65 to i64, !dbg !10151
  %66 = load float*, float** %tab0, align 8, !dbg !10151
  %arrayidx84 = getelementptr inbounds float, float* %66, i64 %idxprom83, !dbg !10151
  %67 = load float, float* %arrayidx84, align 4, !dbg !10151
  store float %67, float* %tmp0, align 4, !dbg !10152
  %68 = load i32, i32* %j, align 4, !dbg !10153
  %idxprom85 = sext i32 %68 to i64, !dbg !10154
  %69 = load float*, float** %tab1, align 8, !dbg !10154
  %arrayidx86 = getelementptr inbounds float, float* %69, i64 %idxprom85, !dbg !10154
  %70 = load float, float* %arrayidx86, align 4, !dbg !10154
  store float %70, float* %tmp1, align 4, !dbg !10155
  %71 = load float, float* %tmp0, align 4, !dbg !10156
  %72 = load float, float* %tmp1, align 4, !dbg !10157
  %add87 = fadd float %71, %72, !dbg !10158
  %mul88 = fmul float 0x3FE6A09E60000000, %add87, !dbg !10159
  %73 = load i32, i32* %j, align 4, !dbg !10160
  %idxprom89 = sext i32 %73 to i64, !dbg !10161
  %74 = load float*, float** %tab0, align 8, !dbg !10161
  %arrayidx90 = getelementptr inbounds float, float* %74, i64 %idxprom89, !dbg !10161
  store float %mul88, float* %arrayidx90, align 4, !dbg !10162
  %75 = load float, float* %tmp0, align 4, !dbg !10163
  %76 = load float, float* %tmp1, align 4, !dbg !10164
  %sub91 = fsub float %75, %76, !dbg !10165
  %mul92 = fmul float 0x3FE6A09E60000000, %sub91, !dbg !10166
  %77 = load i32, i32* %j, align 4, !dbg !10167
  %idxprom93 = sext i32 %77 to i64, !dbg !10168
  %78 = load float*, float** %tab1, align 8, !dbg !10168
  %arrayidx94 = getelementptr inbounds float, float* %78, i64 %idxprom93, !dbg !10168
  store float %mul92, float* %arrayidx94, align 4, !dbg !10169
  br label %for.inc95, !dbg !10170

for.inc95:                                        ; preds = %for.body82
  %79 = load i32, i32* %j, align 4, !dbg !10171
  %inc96 = add nsw i32 %79, 1, !dbg !10171
  store i32 %inc96, i32* %j, align 4, !dbg !10171
  br label %for.cond79, !dbg !10173, !llvm.loop !10174

for.end97:                                        ; preds = %for.cond79
  br label %if.end98, !dbg !10176

if.end98:                                         ; preds = %for.end97, %found1
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %for.end73
  br label %for.inc100, !dbg !10177

for.inc100:                                       ; preds = %if.end99
  %80 = load i32, i32* %l, align 4, !dbg !10178
  %dec = add nsw i32 %80, -1, !dbg !10178
  store i32 %dec, i32* %l, align 4, !dbg !10178
  br label %for.cond21, !dbg !10180, !llvm.loop !10181

for.end101:                                       ; preds = %for.cond21
  br label %for.inc102, !dbg !10183

for.inc102:                                       ; preds = %for.end101
  %81 = load i32, i32* %i, align 4, !dbg !10184
  %dec103 = add nsw i32 %81, -1, !dbg !10184
  store i32 %dec103, i32* %i, align 4, !dbg !10184
  br label %for.cond, !dbg !10186, !llvm.loop !10187

for.end104:                                       ; preds = %for.cond
  %arrayidx105 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 0, !dbg !10189
  %82 = load i32, i32* %arrayidx105, align 4, !dbg !10189
  %arrayidx106 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 1, !dbg !10190
  %83 = load i32, i32* %arrayidx106, align 4, !dbg !10190
  %or = or i32 %82, %83, !dbg !10191
  %arrayidx107 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 2, !dbg !10192
  %84 = load i32, i32* %arrayidx107, align 4, !dbg !10192
  %or108 = or i32 %or, %84, !dbg !10193
  store i32 %or108, i32* %non_zero_found, align 4, !dbg !10194
  %85 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10195
  %long_end109 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %85, i32 0, i32 14, !dbg !10197
  %86 = load i32, i32* %long_end109, align 8, !dbg !10197
  %sub110 = sub nsw i32 %86, 1, !dbg !10198
  store i32 %sub110, i32* %i, align 4, !dbg !10199
  br label %for.cond111, !dbg !10200

for.cond111:                                      ; preds = %for.inc199, %for.end104
  %87 = load i32, i32* %i, align 4, !dbg !10201
  %cmp112 = icmp sge i32 %87, 0, !dbg !10204
  br i1 %cmp112, label %for.body114, label %for.end201, !dbg !10205

for.body114:                                      ; preds = %for.cond111
  %88 = load i32, i32* %i, align 4, !dbg !10206
  %idxprom115 = sext i32 %88 to i64, !dbg !10208
  %89 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10209
  %sample_rate_index116 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %89, i32 0, i32 4, !dbg !10210
  %90 = load i32, i32* %sample_rate_index116, align 16, !dbg !10210
  %idxprom117 = sext i32 %90 to i64, !dbg !10208
  %arrayidx118 = getelementptr inbounds [9 x [22 x i8]], [9 x [22 x i8]]* @band_size_long, i64 0, i64 %idxprom117, !dbg !10208
  %arrayidx119 = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx118, i64 0, i64 %idxprom115, !dbg !10208
  %91 = load i8, i8* %arrayidx119, align 1, !dbg !10208
  %conv120 = zext i8 %91 to i32, !dbg !10208
  store i32 %conv120, i32* %len, align 4, !dbg !10211
  %92 = load i32, i32* %len, align 4, !dbg !10212
  %93 = load float*, float** %tab0, align 8, !dbg !10213
  %idx.ext121 = sext i32 %92 to i64, !dbg !10213
  %idx.neg122 = sub i64 0, %idx.ext121, !dbg !10213
  %add.ptr123 = getelementptr inbounds float, float* %93, i64 %idx.neg122, !dbg !10213
  store float* %add.ptr123, float** %tab0, align 8, !dbg !10213
  %94 = load i32, i32* %len, align 4, !dbg !10214
  %95 = load float*, float** %tab1, align 8, !dbg !10215
  %idx.ext124 = sext i32 %94 to i64, !dbg !10215
  %idx.neg125 = sub i64 0, %idx.ext124, !dbg !10215
  %add.ptr126 = getelementptr inbounds float, float* %95, i64 %idx.neg125, !dbg !10215
  store float* %add.ptr126, float** %tab1, align 8, !dbg !10215
  %96 = load i32, i32* %non_zero_found, align 4, !dbg !10216
  %tobool127 = icmp ne i32 %96, 0, !dbg !10216
  br i1 %tobool127, label %if.else173, label %if.then128, !dbg !10218

if.then128:                                       ; preds = %for.body114
  store i32 0, i32* %j, align 4, !dbg !10219
  br label %for.cond129, !dbg !10222

for.cond129:                                      ; preds = %for.inc139, %if.then128
  %97 = load i32, i32* %j, align 4, !dbg !10223
  %98 = load i32, i32* %len, align 4, !dbg !10226
  %cmp130 = icmp slt i32 %97, %98, !dbg !10227
  br i1 %cmp130, label %for.body132, label %for.end141, !dbg !10228

for.body132:                                      ; preds = %for.cond129
  %99 = load i32, i32* %j, align 4, !dbg !10229
  %idxprom133 = sext i32 %99 to i64, !dbg !10232
  %100 = load float*, float** %tab1, align 8, !dbg !10232
  %arrayidx134 = getelementptr inbounds float, float* %100, i64 %idxprom133, !dbg !10232
  %101 = load float, float* %arrayidx134, align 4, !dbg !10232
  %cmp135 = fcmp une float %101, 0.000000e+00, !dbg !10233
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !10234

if.then137:                                       ; preds = %for.body132
  store i32 1, i32* %non_zero_found, align 4, !dbg !10235
  br label %found2, !dbg !10237

if.end138:                                        ; preds = %for.body132
  br label %for.inc139, !dbg !10238

for.inc139:                                       ; preds = %if.end138
  %102 = load i32, i32* %j, align 4, !dbg !10239
  %inc140 = add nsw i32 %102, 1, !dbg !10239
  store i32 %inc140, i32* %j, align 4, !dbg !10239
  br label %for.cond129, !dbg !10241, !llvm.loop !10242

for.end141:                                       ; preds = %for.cond129
  %103 = load i32, i32* %i, align 4, !dbg !10244
  %cmp142 = icmp eq i32 %103, 21, !dbg !10245
  br i1 %cmp142, label %cond.true, label %cond.false, !dbg !10246

cond.true:                                        ; preds = %for.end141
  br label %cond.end, !dbg !10247

cond.false:                                       ; preds = %for.end141
  %104 = load i32, i32* %i, align 4, !dbg !10249
  br label %cond.end, !dbg !10251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 20, %cond.true ], [ %104, %cond.false ], !dbg !10252
  store i32 %cond, i32* %k, align 4, !dbg !10254
  %105 = load i32, i32* %k, align 4, !dbg !10255
  %idxprom144 = sext i32 %105 to i64, !dbg !10256
  %106 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10256
  %scale_factors145 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %106, i32 0, i32 15, !dbg !10257
  %arrayidx146 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors145, i64 0, i64 %idxprom144, !dbg !10256
  %107 = load i8, i8* %arrayidx146, align 1, !dbg !10256
  %conv147 = zext i8 %107 to i32, !dbg !10256
  store i32 %conv147, i32* %sf, align 4, !dbg !10258
  %108 = load i32, i32* %sf, align 4, !dbg !10259
  %109 = load i32, i32* %sf_max, align 4, !dbg !10261
  %cmp148 = icmp sge i32 %108, %109, !dbg !10262
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !10263

if.then150:                                       ; preds = %cond.end
  br label %found2, !dbg !10264

if.end151:                                        ; preds = %cond.end
  %110 = load i32, i32* %sf, align 4, !dbg !10265
  %idxprom152 = sext i32 %110 to i64, !dbg !10266
  %111 = load [16 x float]*, [16 x float]** %is_tab, align 8, !dbg !10266
  %arrayidx153 = getelementptr inbounds [16 x float], [16 x float]* %111, i64 0, !dbg !10266
  %arrayidx154 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx153, i64 0, i64 %idxprom152, !dbg !10266
  %112 = load float, float* %arrayidx154, align 4, !dbg !10266
  store float %112, float* %v1, align 4, !dbg !10267
  %113 = load i32, i32* %sf, align 4, !dbg !10268
  %idxprom155 = sext i32 %113 to i64, !dbg !10269
  %114 = load [16 x float]*, [16 x float]** %is_tab, align 8, !dbg !10269
  %arrayidx156 = getelementptr inbounds [16 x float], [16 x float]* %114, i64 1, !dbg !10269
  %arrayidx157 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx156, i64 0, i64 %idxprom155, !dbg !10269
  %115 = load float, float* %arrayidx157, align 4, !dbg !10269
  store float %115, float* %v2, align 4, !dbg !10270
  store i32 0, i32* %j, align 4, !dbg !10271
  br label %for.cond158, !dbg !10273

for.cond158:                                      ; preds = %for.inc170, %if.end151
  %116 = load i32, i32* %j, align 4, !dbg !10274
  %117 = load i32, i32* %len, align 4, !dbg !10277
  %cmp159 = icmp slt i32 %116, %117, !dbg !10278
  br i1 %cmp159, label %for.body161, label %for.end172, !dbg !10279

for.body161:                                      ; preds = %for.cond158
  %118 = load i32, i32* %j, align 4, !dbg !10280
  %idxprom162 = sext i32 %118 to i64, !dbg !10282
  %119 = load float*, float** %tab0, align 8, !dbg !10282
  %arrayidx163 = getelementptr inbounds float, float* %119, i64 %idxprom162, !dbg !10282
  %120 = load float, float* %arrayidx163, align 4, !dbg !10282
  store float %120, float* %tmp0, align 4, !dbg !10283
  %121 = load float, float* %v1, align 4, !dbg !10284
  %122 = load float, float* %tmp0, align 4, !dbg !10285
  %mul164 = fmul float %121, %122, !dbg !10286
  %123 = load i32, i32* %j, align 4, !dbg !10287
  %idxprom165 = sext i32 %123 to i64, !dbg !10288
  %124 = load float*, float** %tab0, align 8, !dbg !10288
  %arrayidx166 = getelementptr inbounds float, float* %124, i64 %idxprom165, !dbg !10288
  store float %mul164, float* %arrayidx166, align 4, !dbg !10289
  %125 = load float, float* %v2, align 4, !dbg !10290
  %126 = load float, float* %tmp0, align 4, !dbg !10291
  %mul167 = fmul float %125, %126, !dbg !10292
  %127 = load i32, i32* %j, align 4, !dbg !10293
  %idxprom168 = sext i32 %127 to i64, !dbg !10294
  %128 = load float*, float** %tab1, align 8, !dbg !10294
  %arrayidx169 = getelementptr inbounds float, float* %128, i64 %idxprom168, !dbg !10294
  store float %mul167, float* %arrayidx169, align 4, !dbg !10295
  br label %for.inc170, !dbg !10296

for.inc170:                                       ; preds = %for.body161
  %129 = load i32, i32* %j, align 4, !dbg !10297
  %inc171 = add nsw i32 %129, 1, !dbg !10297
  store i32 %inc171, i32* %j, align 4, !dbg !10297
  br label %for.cond158, !dbg !10299, !llvm.loop !10300

for.end172:                                       ; preds = %for.cond158
  br label %if.end198, !dbg !10302

if.else173:                                       ; preds = %for.body114
  br label %found2, !dbg !10303

found2:                                           ; preds = %if.else173, %if.then150, %if.then137
  %130 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10305
  %mode_ext174 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %130, i32 0, i32 8, !dbg !10308
  %131 = load i32, i32* %mode_ext174, align 32, !dbg !10308
  %and175 = and i32 %131, 2, !dbg !10309
  %tobool176 = icmp ne i32 %and175, 0, !dbg !10309
  br i1 %tobool176, label %if.then177, label %if.end197, !dbg !10310

if.then177:                                       ; preds = %found2
  store i32 0, i32* %j, align 4, !dbg !10311
  br label %for.cond178, !dbg !10314

for.cond178:                                      ; preds = %for.inc194, %if.then177
  %132 = load i32, i32* %j, align 4, !dbg !10315
  %133 = load i32, i32* %len, align 4, !dbg !10318
  %cmp179 = icmp slt i32 %132, %133, !dbg !10319
  br i1 %cmp179, label %for.body181, label %for.end196, !dbg !10320

for.body181:                                      ; preds = %for.cond178
  %134 = load i32, i32* %j, align 4, !dbg !10321
  %idxprom182 = sext i32 %134 to i64, !dbg !10323
  %135 = load float*, float** %tab0, align 8, !dbg !10323
  %arrayidx183 = getelementptr inbounds float, float* %135, i64 %idxprom182, !dbg !10323
  %136 = load float, float* %arrayidx183, align 4, !dbg !10323
  store float %136, float* %tmp0, align 4, !dbg !10324
  %137 = load i32, i32* %j, align 4, !dbg !10325
  %idxprom184 = sext i32 %137 to i64, !dbg !10326
  %138 = load float*, float** %tab1, align 8, !dbg !10326
  %arrayidx185 = getelementptr inbounds float, float* %138, i64 %idxprom184, !dbg !10326
  %139 = load float, float* %arrayidx185, align 4, !dbg !10326
  store float %139, float* %tmp1, align 4, !dbg !10327
  %140 = load float, float* %tmp0, align 4, !dbg !10328
  %141 = load float, float* %tmp1, align 4, !dbg !10329
  %add186 = fadd float %140, %141, !dbg !10330
  %mul187 = fmul float 0x3FE6A09E60000000, %add186, !dbg !10331
  %142 = load i32, i32* %j, align 4, !dbg !10332
  %idxprom188 = sext i32 %142 to i64, !dbg !10333
  %143 = load float*, float** %tab0, align 8, !dbg !10333
  %arrayidx189 = getelementptr inbounds float, float* %143, i64 %idxprom188, !dbg !10333
  store float %mul187, float* %arrayidx189, align 4, !dbg !10334
  %144 = load float, float* %tmp0, align 4, !dbg !10335
  %145 = load float, float* %tmp1, align 4, !dbg !10336
  %sub190 = fsub float %144, %145, !dbg !10337
  %mul191 = fmul float 0x3FE6A09E60000000, %sub190, !dbg !10338
  %146 = load i32, i32* %j, align 4, !dbg !10339
  %idxprom192 = sext i32 %146 to i64, !dbg !10340
  %147 = load float*, float** %tab1, align 8, !dbg !10340
  %arrayidx193 = getelementptr inbounds float, float* %147, i64 %idxprom192, !dbg !10340
  store float %mul191, float* %arrayidx193, align 4, !dbg !10341
  br label %for.inc194, !dbg !10342

for.inc194:                                       ; preds = %for.body181
  %148 = load i32, i32* %j, align 4, !dbg !10343
  %inc195 = add nsw i32 %148, 1, !dbg !10343
  store i32 %inc195, i32* %j, align 4, !dbg !10343
  br label %for.cond178, !dbg !10345, !llvm.loop !10346

for.end196:                                       ; preds = %for.cond178
  br label %if.end197, !dbg !10348

if.end197:                                        ; preds = %for.end196, %found2
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %for.end172
  br label %for.inc199, !dbg !10349

for.inc199:                                       ; preds = %if.end198
  %149 = load i32, i32* %i, align 4, !dbg !10350
  %dec200 = add nsw i32 %149, -1, !dbg !10350
  store i32 %dec200, i32* %i, align 4, !dbg !10350
  br label %for.cond111, !dbg !10352, !llvm.loop !10353

for.end201:                                       ; preds = %for.cond111
  br label %if.end212, !dbg !10355

if.else202:                                       ; preds = %entry
  %150 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10356
  %mode_ext203 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %150, i32 0, i32 8, !dbg !10359
  %151 = load i32, i32* %mode_ext203, align 32, !dbg !10359
  %and204 = and i32 %151, 2, !dbg !10360
  %tobool205 = icmp ne i32 %and204, 0, !dbg !10360
  br i1 %tobool205, label %if.then206, label %if.end211, !dbg !10356

if.then206:                                       ; preds = %if.else202
  %152 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10361
  %fdsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %152, i32 0, i32 28, !dbg !10363
  %153 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !10363
  %butterflies_float = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %153, i32 0, i32 8, !dbg !10364
  %154 = load void (float*, float*, i32)*, void (float*, float*, i32)** %butterflies_float, align 8, !dbg !10364
  %155 = load %struct.GranuleDef*, %struct.GranuleDef** %g0.addr, align 8, !dbg !10365
  %sb_hybrid207 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %155, i32 0, i32 17, !dbg !10366
  %arraydecay208 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid207, i32 0, i32 0, !dbg !10365
  %156 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10367
  %sb_hybrid209 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %156, i32 0, i32 17, !dbg !10368
  %arraydecay210 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid209, i32 0, i32 0, !dbg !10367
  call void %154(float* %arraydecay208, float* %arraydecay210, i32 576), !dbg !10361
  br label %if.end211, !dbg !10369

if.end211:                                        ; preds = %if.then206, %if.else202
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %for.end201
  ret void, !dbg !10370
}

; Function Attrs: nounwind uwtable
define internal void @reorder_block(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !10371 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca i32, align 4
  %ptr = alloca float*, align 8
  %dst = alloca float*, align 8
  %ptr1 = alloca float*, align 8
  %tmp = alloca [576 x float], align 16
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !10372, metadata !2031), !dbg !10373
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !10374, metadata !2031), !dbg !10375
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10376, metadata !2031), !dbg !10377
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10378, metadata !2031), !dbg !10379
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10380, metadata !2031), !dbg !10381
  call void @llvm.dbg.declare(metadata float** %ptr, metadata !10382, metadata !2031), !dbg !10383
  call void @llvm.dbg.declare(metadata float** %dst, metadata !10384, metadata !2031), !dbg !10385
  call void @llvm.dbg.declare(metadata float** %ptr1, metadata !10386, metadata !2031), !dbg !10387
  call void @llvm.dbg.declare(metadata [576 x float]* %tmp, metadata !10388, metadata !2031), !dbg !10389
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10390
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !10392
  %1 = load i8, i8* %block_type, align 4, !dbg !10392
  %conv = zext i8 %1 to i32, !dbg !10390
  %cmp = icmp ne i32 %conv, 2, !dbg !10393
  br i1 %cmp, label %if.then, label %if.end, !dbg !10394

if.then:                                          ; preds = %entry
  br label %for.end43, !dbg !10395

if.end:                                           ; preds = %entry
  %2 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10396
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %2, i32 0, i32 6, !dbg !10398
  %3 = load i8, i8* %switch_point, align 1, !dbg !10398
  %tobool = icmp ne i8 %3, 0, !dbg !10396
  br i1 %tobool, label %if.then2, label %if.else10, !dbg !10399

if.then2:                                         ; preds = %if.end
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10400
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 4, !dbg !10403
  %5 = load i32, i32* %sample_rate_index, align 16, !dbg !10403
  %cmp3 = icmp ne i32 %5, 8, !dbg !10404
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !10405

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10406
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %6, i32 0, i32 17, !dbg !10407
  %arraydecay = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid, i32 0, i32 0, !dbg !10406
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 36, !dbg !10408
  store float* %add.ptr, float** %ptr, align 8, !dbg !10409
  br label %if.end9, !dbg !10410

if.else:                                          ; preds = %if.then2
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10411
  %sb_hybrid6 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 17, !dbg !10412
  %arraydecay7 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid6, i32 0, i32 0, !dbg !10411
  %add.ptr8 = getelementptr inbounds float, float* %arraydecay7, i64 72, !dbg !10413
  store float* %add.ptr8, float** %ptr, align 8, !dbg !10414
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  br label %if.end13, !dbg !10415

if.else10:                                        ; preds = %if.end
  %8 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10416
  %sb_hybrid11 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %8, i32 0, i32 17, !dbg !10418
  %arraydecay12 = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid11, i32 0, i32 0, !dbg !10416
  store float* %arraydecay12, float** %ptr, align 8, !dbg !10419
  br label %if.end13

if.end13:                                         ; preds = %if.else10, %if.end9
  %9 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10420
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %9, i32 0, i32 13, !dbg !10422
  %10 = load i32, i32* %short_start, align 4, !dbg !10422
  store i32 %10, i32* %i, align 4, !dbg !10423
  br label %for.cond, !dbg !10424

for.cond:                                         ; preds = %for.inc42, %if.end13
  %11 = load i32, i32* %i, align 4, !dbg !10425
  %cmp14 = icmp slt i32 %11, 13, !dbg !10428
  br i1 %cmp14, label %for.body, label %for.end43, !dbg !10429

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !10430
  %idxprom = sext i32 %12 to i64, !dbg !10432
  %13 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10433
  %sample_rate_index16 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %13, i32 0, i32 4, !dbg !10434
  %14 = load i32, i32* %sample_rate_index16, align 16, !dbg !10434
  %idxprom17 = sext i32 %14 to i64, !dbg !10432
  %arrayidx = getelementptr inbounds [9 x [13 x i8]], [9 x [13 x i8]]* @band_size_short, i64 0, i64 %idxprom17, !dbg !10432
  %arrayidx18 = getelementptr inbounds [13 x i8], [13 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !10432
  %15 = load i8, i8* %arrayidx18, align 1, !dbg !10432
  %conv19 = zext i8 %15 to i32, !dbg !10432
  store i32 %conv19, i32* %len, align 4, !dbg !10435
  %16 = load float*, float** %ptr, align 8, !dbg !10436
  store float* %16, float** %ptr1, align 8, !dbg !10437
  %arraydecay20 = getelementptr inbounds [576 x float], [576 x float]* %tmp, i32 0, i32 0, !dbg !10438
  store float* %arraydecay20, float** %dst, align 8, !dbg !10439
  %17 = load i32, i32* %len, align 4, !dbg !10440
  store i32 %17, i32* %j, align 4, !dbg !10442
  br label %for.cond21, !dbg !10443

for.cond21:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %j, align 4, !dbg !10444
  %cmp22 = icmp sgt i32 %18, 0, !dbg !10447
  br i1 %cmp22, label %for.body24, label %for.end, !dbg !10448

for.body24:                                       ; preds = %for.cond21
  %19 = load i32, i32* %len, align 4, !dbg !10449
  %mul = mul nsw i32 0, %19, !dbg !10451
  %idxprom25 = sext i32 %mul to i64, !dbg !10452
  %20 = load float*, float** %ptr, align 8, !dbg !10452
  %arrayidx26 = getelementptr inbounds float, float* %20, i64 %idxprom25, !dbg !10452
  %21 = load float, float* %arrayidx26, align 4, !dbg !10452
  %22 = load float*, float** %dst, align 8, !dbg !10453
  %incdec.ptr = getelementptr inbounds float, float* %22, i32 1, !dbg !10453
  store float* %incdec.ptr, float** %dst, align 8, !dbg !10453
  store float %21, float* %22, align 4, !dbg !10454
  %23 = load i32, i32* %len, align 4, !dbg !10455
  %mul27 = mul nsw i32 1, %23, !dbg !10456
  %idxprom28 = sext i32 %mul27 to i64, !dbg !10457
  %24 = load float*, float** %ptr, align 8, !dbg !10457
  %arrayidx29 = getelementptr inbounds float, float* %24, i64 %idxprom28, !dbg !10457
  %25 = load float, float* %arrayidx29, align 4, !dbg !10457
  %26 = load float*, float** %dst, align 8, !dbg !10458
  %incdec.ptr30 = getelementptr inbounds float, float* %26, i32 1, !dbg !10458
  store float* %incdec.ptr30, float** %dst, align 8, !dbg !10458
  store float %25, float* %26, align 4, !dbg !10459
  %27 = load i32, i32* %len, align 4, !dbg !10460
  %mul31 = mul nsw i32 2, %27, !dbg !10461
  %idxprom32 = sext i32 %mul31 to i64, !dbg !10462
  %28 = load float*, float** %ptr, align 8, !dbg !10462
  %arrayidx33 = getelementptr inbounds float, float* %28, i64 %idxprom32, !dbg !10462
  %29 = load float, float* %arrayidx33, align 4, !dbg !10462
  %30 = load float*, float** %dst, align 8, !dbg !10463
  %incdec.ptr34 = getelementptr inbounds float, float* %30, i32 1, !dbg !10463
  store float* %incdec.ptr34, float** %dst, align 8, !dbg !10463
  store float %29, float* %30, align 4, !dbg !10464
  %31 = load float*, float** %ptr, align 8, !dbg !10465
  %incdec.ptr35 = getelementptr inbounds float, float* %31, i32 1, !dbg !10465
  store float* %incdec.ptr35, float** %ptr, align 8, !dbg !10465
  br label %for.inc, !dbg !10466

for.inc:                                          ; preds = %for.body24
  %32 = load i32, i32* %j, align 4, !dbg !10467
  %dec = add nsw i32 %32, -1, !dbg !10467
  store i32 %dec, i32* %j, align 4, !dbg !10467
  br label %for.cond21, !dbg !10469, !llvm.loop !10470

for.end:                                          ; preds = %for.cond21
  %33 = load i32, i32* %len, align 4, !dbg !10472
  %mul36 = mul nsw i32 2, %33, !dbg !10473
  %34 = load float*, float** %ptr, align 8, !dbg !10474
  %idx.ext = sext i32 %mul36 to i64, !dbg !10474
  %add.ptr37 = getelementptr inbounds float, float* %34, i64 %idx.ext, !dbg !10474
  store float* %add.ptr37, float** %ptr, align 8, !dbg !10474
  %35 = load float*, float** %ptr1, align 8, !dbg !10475
  %36 = bitcast float* %35 to i8*, !dbg !10476
  %arraydecay38 = getelementptr inbounds [576 x float], [576 x float]* %tmp, i32 0, i32 0, !dbg !10476
  %37 = bitcast float* %arraydecay38 to i8*, !dbg !10476
  %38 = load i32, i32* %len, align 4, !dbg !10477
  %mul39 = mul nsw i32 %38, 3, !dbg !10478
  %conv40 = sext i32 %mul39 to i64, !dbg !10477
  %mul41 = mul i64 %conv40, 4, !dbg !10479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 %mul41, i32 4, i1 false), !dbg !10476
  br label %for.inc42, !dbg !10480

for.inc42:                                        ; preds = %for.end
  %39 = load i32, i32* %i, align 4, !dbg !10481
  %inc = add nsw i32 %39, 1, !dbg !10481
  store i32 %inc, i32* %i, align 4, !dbg !10481
  br label %for.cond, !dbg !10483, !llvm.loop !10484

for.end43:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !10486
}

; Function Attrs: nounwind uwtable
define internal void @compute_antialias(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !10487 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %ptr = alloca float*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp0 = alloca float, align 4
  %tmp1 = alloca float, align 4
  %tmp013 = alloca float, align 4
  %tmp115 = alloca float, align 4
  %tmp027 = alloca float, align 4
  %tmp129 = alloca float, align 4
  %tmp041 = alloca float, align 4
  %tmp143 = alloca float, align 4
  %tmp055 = alloca float, align 4
  %tmp157 = alloca float, align 4
  %tmp069 = alloca float, align 4
  %tmp171 = alloca float, align 4
  %tmp083 = alloca float, align 4
  %tmp185 = alloca float, align 4
  %tmp097 = alloca float, align 4
  %tmp199 = alloca float, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !10488, metadata !2031), !dbg !10489
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !10490, metadata !2031), !dbg !10491
  call void @llvm.dbg.declare(metadata float** %ptr, metadata !10492, metadata !2031), !dbg !10493
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10494, metadata !2031), !dbg !10495
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10496, metadata !2031), !dbg !10497
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10498
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !10500
  %1 = load i8, i8* %block_type, align 4, !dbg !10500
  %conv = zext i8 %1 to i32, !dbg !10498
  %cmp = icmp eq i32 %conv, 2, !dbg !10501
  br i1 %cmp, label %if.then, label %if.else, !dbg !10502

if.then:                                          ; preds = %entry
  %2 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10503
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %2, i32 0, i32 6, !dbg !10506
  %3 = load i8, i8* %switch_point, align 1, !dbg !10506
  %tobool = icmp ne i8 %3, 0, !dbg !10503
  br i1 %tobool, label %if.end, label %if.then2, !dbg !10507

if.then2:                                         ; preds = %if.then
  br label %for.end, !dbg !10508

if.end:                                           ; preds = %if.then
  store i32 1, i32* %n, align 4, !dbg !10509
  br label %if.end3, !dbg !10510

if.else:                                          ; preds = %entry
  store i32 31, i32* %n, align 4, !dbg !10511
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10513
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 17, !dbg !10514
  %arraydecay = getelementptr inbounds [576 x float], [576 x float]* %sb_hybrid, i32 0, i32 0, !dbg !10513
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 18, !dbg !10515
  store float* %add.ptr, float** %ptr, align 8, !dbg !10516
  %5 = load i32, i32* %n, align 4, !dbg !10517
  store i32 %5, i32* %i, align 4, !dbg !10519
  br label %for.cond, !dbg !10520

for.cond:                                         ; preds = %for.inc, %if.end3
  %6 = load i32, i32* %i, align 4, !dbg !10521
  %cmp4 = icmp sgt i32 %6, 0, !dbg !10524
  br i1 %cmp4, label %for.body, label %for.end, !dbg !10525

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !10526, !llvm.loop !10528

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %tmp0, metadata !10529, metadata !2031), !dbg !10531
  %7 = load float*, float** %ptr, align 8, !dbg !10532
  %arrayidx = getelementptr inbounds float, float* %7, i64 -1, !dbg !10532
  %8 = load float, float* %arrayidx, align 4, !dbg !10532
  store float %8, float* %tmp0, align 4, !dbg !10534
  call void @llvm.dbg.declare(metadata float* %tmp1, metadata !10535, metadata !2031), !dbg !10536
  %9 = load float*, float** %ptr, align 8, !dbg !10537
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 0, !dbg !10537
  %10 = load float, float* %arrayidx6, align 4, !dbg !10537
  store float %10, float* %tmp1, align 4, !dbg !10538
  %11 = load float, float* %tmp0, align 4, !dbg !10539
  %12 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 0, i64 0), align 16, !dbg !10540
  %mul = fmul float %11, %12, !dbg !10541
  %13 = load float, float* %tmp1, align 4, !dbg !10542
  %14 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 0, i64 1), align 4, !dbg !10543
  %mul7 = fmul float %13, %14, !dbg !10544
  %sub = fsub float %mul, %mul7, !dbg !10545
  %15 = load float*, float** %ptr, align 8, !dbg !10546
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 -1, !dbg !10546
  store float %sub, float* %arrayidx8, align 4, !dbg !10547
  %16 = load float, float* %tmp0, align 4, !dbg !10548
  %17 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 0, i64 1), align 4, !dbg !10549
  %mul9 = fmul float %16, %17, !dbg !10550
  %18 = load float, float* %tmp1, align 4, !dbg !10551
  %19 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 0, i64 0), align 16, !dbg !10552
  %mul10 = fmul float %18, %19, !dbg !10553
  %add = fadd float %mul9, %mul10, !dbg !10554
  %20 = load float*, float** %ptr, align 8, !dbg !10555
  %arrayidx11 = getelementptr inbounds float, float* %20, i64 0, !dbg !10555
  store float %add, float* %arrayidx11, align 4, !dbg !10556
  br label %do.end, !dbg !10557

do.end:                                           ; preds = %do.body
  br label %do.body12, !dbg !10558, !llvm.loop !10559

do.body12:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata float* %tmp013, metadata !10560, metadata !2031), !dbg !10562
  %21 = load float*, float** %ptr, align 8, !dbg !10563
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 -2, !dbg !10563
  %22 = load float, float* %arrayidx14, align 4, !dbg !10563
  store float %22, float* %tmp013, align 4, !dbg !10565
  call void @llvm.dbg.declare(metadata float* %tmp115, metadata !10566, metadata !2031), !dbg !10567
  %23 = load float*, float** %ptr, align 8, !dbg !10568
  %arrayidx16 = getelementptr inbounds float, float* %23, i64 1, !dbg !10568
  %24 = load float, float* %arrayidx16, align 4, !dbg !10568
  store float %24, float* %tmp115, align 4, !dbg !10569
  %25 = load float, float* %tmp013, align 4, !dbg !10570
  %26 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 1, i64 0), align 16, !dbg !10571
  %mul17 = fmul float %25, %26, !dbg !10572
  %27 = load float, float* %tmp115, align 4, !dbg !10573
  %28 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 1, i64 1), align 4, !dbg !10574
  %mul18 = fmul float %27, %28, !dbg !10575
  %sub19 = fsub float %mul17, %mul18, !dbg !10576
  %29 = load float*, float** %ptr, align 8, !dbg !10577
  %arrayidx20 = getelementptr inbounds float, float* %29, i64 -2, !dbg !10577
  store float %sub19, float* %arrayidx20, align 4, !dbg !10578
  %30 = load float, float* %tmp013, align 4, !dbg !10579
  %31 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 1, i64 1), align 4, !dbg !10580
  %mul21 = fmul float %30, %31, !dbg !10581
  %32 = load float, float* %tmp115, align 4, !dbg !10582
  %33 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 1, i64 0), align 16, !dbg !10583
  %mul22 = fmul float %32, %33, !dbg !10584
  %add23 = fadd float %mul21, %mul22, !dbg !10585
  %34 = load float*, float** %ptr, align 8, !dbg !10586
  %arrayidx24 = getelementptr inbounds float, float* %34, i64 1, !dbg !10586
  store float %add23, float* %arrayidx24, align 4, !dbg !10587
  br label %do.end25, !dbg !10588

do.end25:                                         ; preds = %do.body12
  br label %do.body26, !dbg !10589, !llvm.loop !10590

do.body26:                                        ; preds = %do.end25
  call void @llvm.dbg.declare(metadata float* %tmp027, metadata !10591, metadata !2031), !dbg !10593
  %35 = load float*, float** %ptr, align 8, !dbg !10594
  %arrayidx28 = getelementptr inbounds float, float* %35, i64 -3, !dbg !10594
  %36 = load float, float* %arrayidx28, align 4, !dbg !10594
  store float %36, float* %tmp027, align 4, !dbg !10596
  call void @llvm.dbg.declare(metadata float* %tmp129, metadata !10597, metadata !2031), !dbg !10598
  %37 = load float*, float** %ptr, align 8, !dbg !10599
  %arrayidx30 = getelementptr inbounds float, float* %37, i64 2, !dbg !10599
  %38 = load float, float* %arrayidx30, align 4, !dbg !10599
  store float %38, float* %tmp129, align 4, !dbg !10600
  %39 = load float, float* %tmp027, align 4, !dbg !10601
  %40 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 2, i64 0), align 16, !dbg !10602
  %mul31 = fmul float %39, %40, !dbg !10603
  %41 = load float, float* %tmp129, align 4, !dbg !10604
  %42 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 2, i64 1), align 4, !dbg !10605
  %mul32 = fmul float %41, %42, !dbg !10606
  %sub33 = fsub float %mul31, %mul32, !dbg !10607
  %43 = load float*, float** %ptr, align 8, !dbg !10608
  %arrayidx34 = getelementptr inbounds float, float* %43, i64 -3, !dbg !10608
  store float %sub33, float* %arrayidx34, align 4, !dbg !10609
  %44 = load float, float* %tmp027, align 4, !dbg !10610
  %45 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 2, i64 1), align 4, !dbg !10611
  %mul35 = fmul float %44, %45, !dbg !10612
  %46 = load float, float* %tmp129, align 4, !dbg !10613
  %47 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 2, i64 0), align 16, !dbg !10614
  %mul36 = fmul float %46, %47, !dbg !10615
  %add37 = fadd float %mul35, %mul36, !dbg !10616
  %48 = load float*, float** %ptr, align 8, !dbg !10617
  %arrayidx38 = getelementptr inbounds float, float* %48, i64 2, !dbg !10617
  store float %add37, float* %arrayidx38, align 4, !dbg !10618
  br label %do.end39, !dbg !10619

do.end39:                                         ; preds = %do.body26
  br label %do.body40, !dbg !10620, !llvm.loop !10621

do.body40:                                        ; preds = %do.end39
  call void @llvm.dbg.declare(metadata float* %tmp041, metadata !10622, metadata !2031), !dbg !10624
  %49 = load float*, float** %ptr, align 8, !dbg !10625
  %arrayidx42 = getelementptr inbounds float, float* %49, i64 -4, !dbg !10625
  %50 = load float, float* %arrayidx42, align 4, !dbg !10625
  store float %50, float* %tmp041, align 4, !dbg !10627
  call void @llvm.dbg.declare(metadata float* %tmp143, metadata !10628, metadata !2031), !dbg !10629
  %51 = load float*, float** %ptr, align 8, !dbg !10630
  %arrayidx44 = getelementptr inbounds float, float* %51, i64 3, !dbg !10630
  %52 = load float, float* %arrayidx44, align 4, !dbg !10630
  store float %52, float* %tmp143, align 4, !dbg !10631
  %53 = load float, float* %tmp041, align 4, !dbg !10632
  %54 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 3, i64 0), align 16, !dbg !10633
  %mul45 = fmul float %53, %54, !dbg !10634
  %55 = load float, float* %tmp143, align 4, !dbg !10635
  %56 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 3, i64 1), align 4, !dbg !10636
  %mul46 = fmul float %55, %56, !dbg !10637
  %sub47 = fsub float %mul45, %mul46, !dbg !10638
  %57 = load float*, float** %ptr, align 8, !dbg !10639
  %arrayidx48 = getelementptr inbounds float, float* %57, i64 -4, !dbg !10639
  store float %sub47, float* %arrayidx48, align 4, !dbg !10640
  %58 = load float, float* %tmp041, align 4, !dbg !10641
  %59 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 3, i64 1), align 4, !dbg !10642
  %mul49 = fmul float %58, %59, !dbg !10643
  %60 = load float, float* %tmp143, align 4, !dbg !10644
  %61 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 3, i64 0), align 16, !dbg !10645
  %mul50 = fmul float %60, %61, !dbg !10646
  %add51 = fadd float %mul49, %mul50, !dbg !10647
  %62 = load float*, float** %ptr, align 8, !dbg !10648
  %arrayidx52 = getelementptr inbounds float, float* %62, i64 3, !dbg !10648
  store float %add51, float* %arrayidx52, align 4, !dbg !10649
  br label %do.end53, !dbg !10650

do.end53:                                         ; preds = %do.body40
  br label %do.body54, !dbg !10651, !llvm.loop !10652

do.body54:                                        ; preds = %do.end53
  call void @llvm.dbg.declare(metadata float* %tmp055, metadata !10653, metadata !2031), !dbg !10655
  %63 = load float*, float** %ptr, align 8, !dbg !10656
  %arrayidx56 = getelementptr inbounds float, float* %63, i64 -5, !dbg !10656
  %64 = load float, float* %arrayidx56, align 4, !dbg !10656
  store float %64, float* %tmp055, align 4, !dbg !10658
  call void @llvm.dbg.declare(metadata float* %tmp157, metadata !10659, metadata !2031), !dbg !10660
  %65 = load float*, float** %ptr, align 8, !dbg !10661
  %arrayidx58 = getelementptr inbounds float, float* %65, i64 4, !dbg !10661
  %66 = load float, float* %arrayidx58, align 4, !dbg !10661
  store float %66, float* %tmp157, align 4, !dbg !10662
  %67 = load float, float* %tmp055, align 4, !dbg !10663
  %68 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 4, i64 0), align 16, !dbg !10664
  %mul59 = fmul float %67, %68, !dbg !10665
  %69 = load float, float* %tmp157, align 4, !dbg !10666
  %70 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 4, i64 1), align 4, !dbg !10667
  %mul60 = fmul float %69, %70, !dbg !10668
  %sub61 = fsub float %mul59, %mul60, !dbg !10669
  %71 = load float*, float** %ptr, align 8, !dbg !10670
  %arrayidx62 = getelementptr inbounds float, float* %71, i64 -5, !dbg !10670
  store float %sub61, float* %arrayidx62, align 4, !dbg !10671
  %72 = load float, float* %tmp055, align 4, !dbg !10672
  %73 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 4, i64 1), align 4, !dbg !10673
  %mul63 = fmul float %72, %73, !dbg !10674
  %74 = load float, float* %tmp157, align 4, !dbg !10675
  %75 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 4, i64 0), align 16, !dbg !10676
  %mul64 = fmul float %74, %75, !dbg !10677
  %add65 = fadd float %mul63, %mul64, !dbg !10678
  %76 = load float*, float** %ptr, align 8, !dbg !10679
  %arrayidx66 = getelementptr inbounds float, float* %76, i64 4, !dbg !10679
  store float %add65, float* %arrayidx66, align 4, !dbg !10680
  br label %do.end67, !dbg !10681

do.end67:                                         ; preds = %do.body54
  br label %do.body68, !dbg !10682, !llvm.loop !10683

do.body68:                                        ; preds = %do.end67
  call void @llvm.dbg.declare(metadata float* %tmp069, metadata !10684, metadata !2031), !dbg !10686
  %77 = load float*, float** %ptr, align 8, !dbg !10687
  %arrayidx70 = getelementptr inbounds float, float* %77, i64 -6, !dbg !10687
  %78 = load float, float* %arrayidx70, align 4, !dbg !10687
  store float %78, float* %tmp069, align 4, !dbg !10689
  call void @llvm.dbg.declare(metadata float* %tmp171, metadata !10690, metadata !2031), !dbg !10691
  %79 = load float*, float** %ptr, align 8, !dbg !10692
  %arrayidx72 = getelementptr inbounds float, float* %79, i64 5, !dbg !10692
  %80 = load float, float* %arrayidx72, align 4, !dbg !10692
  store float %80, float* %tmp171, align 4, !dbg !10693
  %81 = load float, float* %tmp069, align 4, !dbg !10694
  %82 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 5, i64 0), align 16, !dbg !10695
  %mul73 = fmul float %81, %82, !dbg !10696
  %83 = load float, float* %tmp171, align 4, !dbg !10697
  %84 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 5, i64 1), align 4, !dbg !10698
  %mul74 = fmul float %83, %84, !dbg !10699
  %sub75 = fsub float %mul73, %mul74, !dbg !10700
  %85 = load float*, float** %ptr, align 8, !dbg !10701
  %arrayidx76 = getelementptr inbounds float, float* %85, i64 -6, !dbg !10701
  store float %sub75, float* %arrayidx76, align 4, !dbg !10702
  %86 = load float, float* %tmp069, align 4, !dbg !10703
  %87 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 5, i64 1), align 4, !dbg !10704
  %mul77 = fmul float %86, %87, !dbg !10705
  %88 = load float, float* %tmp171, align 4, !dbg !10706
  %89 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 5, i64 0), align 16, !dbg !10707
  %mul78 = fmul float %88, %89, !dbg !10708
  %add79 = fadd float %mul77, %mul78, !dbg !10709
  %90 = load float*, float** %ptr, align 8, !dbg !10710
  %arrayidx80 = getelementptr inbounds float, float* %90, i64 5, !dbg !10710
  store float %add79, float* %arrayidx80, align 4, !dbg !10711
  br label %do.end81, !dbg !10712

do.end81:                                         ; preds = %do.body68
  br label %do.body82, !dbg !10713, !llvm.loop !10714

do.body82:                                        ; preds = %do.end81
  call void @llvm.dbg.declare(metadata float* %tmp083, metadata !10715, metadata !2031), !dbg !10717
  %91 = load float*, float** %ptr, align 8, !dbg !10718
  %arrayidx84 = getelementptr inbounds float, float* %91, i64 -7, !dbg !10718
  %92 = load float, float* %arrayidx84, align 4, !dbg !10718
  store float %92, float* %tmp083, align 4, !dbg !10720
  call void @llvm.dbg.declare(metadata float* %tmp185, metadata !10721, metadata !2031), !dbg !10722
  %93 = load float*, float** %ptr, align 8, !dbg !10723
  %arrayidx86 = getelementptr inbounds float, float* %93, i64 6, !dbg !10723
  %94 = load float, float* %arrayidx86, align 4, !dbg !10723
  store float %94, float* %tmp185, align 4, !dbg !10724
  %95 = load float, float* %tmp083, align 4, !dbg !10725
  %96 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 6, i64 0), align 16, !dbg !10726
  %mul87 = fmul float %95, %96, !dbg !10727
  %97 = load float, float* %tmp185, align 4, !dbg !10728
  %98 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 6, i64 1), align 4, !dbg !10729
  %mul88 = fmul float %97, %98, !dbg !10730
  %sub89 = fsub float %mul87, %mul88, !dbg !10731
  %99 = load float*, float** %ptr, align 8, !dbg !10732
  %arrayidx90 = getelementptr inbounds float, float* %99, i64 -7, !dbg !10732
  store float %sub89, float* %arrayidx90, align 4, !dbg !10733
  %100 = load float, float* %tmp083, align 4, !dbg !10734
  %101 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 6, i64 1), align 4, !dbg !10735
  %mul91 = fmul float %100, %101, !dbg !10736
  %102 = load float, float* %tmp185, align 4, !dbg !10737
  %103 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 6, i64 0), align 16, !dbg !10738
  %mul92 = fmul float %102, %103, !dbg !10739
  %add93 = fadd float %mul91, %mul92, !dbg !10740
  %104 = load float*, float** %ptr, align 8, !dbg !10741
  %arrayidx94 = getelementptr inbounds float, float* %104, i64 6, !dbg !10741
  store float %add93, float* %arrayidx94, align 4, !dbg !10742
  br label %do.end95, !dbg !10743

do.end95:                                         ; preds = %do.body82
  br label %do.body96, !dbg !10744, !llvm.loop !10745

do.body96:                                        ; preds = %do.end95
  call void @llvm.dbg.declare(metadata float* %tmp097, metadata !10746, metadata !2031), !dbg !10748
  %105 = load float*, float** %ptr, align 8, !dbg !10749
  %arrayidx98 = getelementptr inbounds float, float* %105, i64 -8, !dbg !10749
  %106 = load float, float* %arrayidx98, align 4, !dbg !10749
  store float %106, float* %tmp097, align 4, !dbg !10751
  call void @llvm.dbg.declare(metadata float* %tmp199, metadata !10752, metadata !2031), !dbg !10753
  %107 = load float*, float** %ptr, align 8, !dbg !10754
  %arrayidx100 = getelementptr inbounds float, float* %107, i64 7, !dbg !10754
  %108 = load float, float* %arrayidx100, align 4, !dbg !10754
  store float %108, float* %tmp199, align 4, !dbg !10755
  %109 = load float, float* %tmp097, align 4, !dbg !10756
  %110 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 7, i64 0), align 16, !dbg !10757
  %mul101 = fmul float %109, %110, !dbg !10758
  %111 = load float, float* %tmp199, align 4, !dbg !10759
  %112 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 7, i64 1), align 4, !dbg !10760
  %mul102 = fmul float %111, %112, !dbg !10761
  %sub103 = fsub float %mul101, %mul102, !dbg !10762
  %113 = load float*, float** %ptr, align 8, !dbg !10763
  %arrayidx104 = getelementptr inbounds float, float* %113, i64 -8, !dbg !10763
  store float %sub103, float* %arrayidx104, align 4, !dbg !10764
  %114 = load float, float* %tmp097, align 4, !dbg !10765
  %115 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 7, i64 1), align 4, !dbg !10766
  %mul105 = fmul float %114, %115, !dbg !10767
  %116 = load float, float* %tmp199, align 4, !dbg !10768
  %117 = load float, float* getelementptr inbounds ([8 x [4 x float]], [8 x [4 x float]]* @csa_table, i64 0, i64 7, i64 0), align 16, !dbg !10769
  %mul106 = fmul float %116, %117, !dbg !10770
  %add107 = fadd float %mul105, %mul106, !dbg !10771
  %118 = load float*, float** %ptr, align 8, !dbg !10772
  %arrayidx108 = getelementptr inbounds float, float* %118, i64 7, !dbg !10772
  store float %add107, float* %arrayidx108, align 4, !dbg !10773
  br label %do.end109, !dbg !10774

do.end109:                                        ; preds = %do.body96
  %119 = load float*, float** %ptr, align 8, !dbg !10775
  %add.ptr110 = getelementptr inbounds float, float* %119, i64 18, !dbg !10775
  store float* %add.ptr110, float** %ptr, align 8, !dbg !10775
  br label %for.inc, !dbg !10776

for.inc:                                          ; preds = %do.end109
  %120 = load i32, i32* %i, align 4, !dbg !10777
  %dec = add nsw i32 %120, -1, !dbg !10777
  store i32 %dec, i32* %i, align 4, !dbg !10777
  br label %for.cond, !dbg !10779, !llvm.loop !10780

for.end:                                          ; preds = %if.then2, %for.cond
  ret void, !dbg !10782
}

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal void @imdct12(float* %out, float* %in) #1 !dbg !10783 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca float*, align 8
  %in0 = alloca float, align 4
  %in1 = alloca float, align 4
  %in2 = alloca float, align 4
  %in3 = alloca float, align 4
  %in4 = alloca float, align 4
  %in5 = alloca float, align 4
  %t1 = alloca float, align 4
  %t2 = alloca float, align 4
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !10786, metadata !2031), !dbg !10787
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !10788, metadata !2031), !dbg !10789
  call void @llvm.dbg.declare(metadata float* %in0, metadata !10790, metadata !2031), !dbg !10791
  call void @llvm.dbg.declare(metadata float* %in1, metadata !10792, metadata !2031), !dbg !10793
  call void @llvm.dbg.declare(metadata float* %in2, metadata !10794, metadata !2031), !dbg !10795
  call void @llvm.dbg.declare(metadata float* %in3, metadata !10796, metadata !2031), !dbg !10797
  call void @llvm.dbg.declare(metadata float* %in4, metadata !10798, metadata !2031), !dbg !10799
  call void @llvm.dbg.declare(metadata float* %in5, metadata !10800, metadata !2031), !dbg !10801
  call void @llvm.dbg.declare(metadata float* %t1, metadata !10802, metadata !2031), !dbg !10803
  call void @llvm.dbg.declare(metadata float* %t2, metadata !10804, metadata !2031), !dbg !10805
  %0 = load float*, float** %in.addr, align 8, !dbg !10806
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10806
  %1 = load float, float* %arrayidx, align 4, !dbg !10806
  store float %1, float* %in0, align 4, !dbg !10807
  %2 = load float*, float** %in.addr, align 8, !dbg !10808
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 3, !dbg !10808
  %3 = load float, float* %arrayidx1, align 4, !dbg !10808
  %4 = load float*, float** %in.addr, align 8, !dbg !10809
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !10809
  %5 = load float, float* %arrayidx2, align 4, !dbg !10809
  %add = fadd float %3, %5, !dbg !10810
  store float %add, float* %in1, align 4, !dbg !10811
  %6 = load float*, float** %in.addr, align 8, !dbg !10812
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 6, !dbg !10812
  %7 = load float, float* %arrayidx3, align 4, !dbg !10812
  %8 = load float*, float** %in.addr, align 8, !dbg !10813
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 3, !dbg !10813
  %9 = load float, float* %arrayidx4, align 4, !dbg !10813
  %add5 = fadd float %7, %9, !dbg !10814
  store float %add5, float* %in2, align 4, !dbg !10815
  %10 = load float*, float** %in.addr, align 8, !dbg !10816
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 9, !dbg !10816
  %11 = load float, float* %arrayidx6, align 4, !dbg !10816
  %12 = load float*, float** %in.addr, align 8, !dbg !10817
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 6, !dbg !10817
  %13 = load float, float* %arrayidx7, align 4, !dbg !10817
  %add8 = fadd float %11, %13, !dbg !10818
  store float %add8, float* %in3, align 4, !dbg !10819
  %14 = load float*, float** %in.addr, align 8, !dbg !10820
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 12, !dbg !10820
  %15 = load float, float* %arrayidx9, align 4, !dbg !10820
  %16 = load float*, float** %in.addr, align 8, !dbg !10821
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 9, !dbg !10821
  %17 = load float, float* %arrayidx10, align 4, !dbg !10821
  %add11 = fadd float %15, %17, !dbg !10822
  store float %add11, float* %in4, align 4, !dbg !10823
  %18 = load float*, float** %in.addr, align 8, !dbg !10824
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 15, !dbg !10824
  %19 = load float, float* %arrayidx12, align 4, !dbg !10824
  %20 = load float*, float** %in.addr, align 8, !dbg !10825
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 12, !dbg !10825
  %21 = load float, float* %arrayidx13, align 4, !dbg !10825
  %add14 = fadd float %19, %21, !dbg !10826
  store float %add14, float* %in5, align 4, !dbg !10827
  %22 = load float, float* %in3, align 4, !dbg !10828
  %23 = load float, float* %in5, align 4, !dbg !10829
  %add15 = fadd float %23, %22, !dbg !10829
  store float %add15, float* %in5, align 4, !dbg !10829
  %24 = load float, float* %in1, align 4, !dbg !10830
  %25 = load float, float* %in3, align 4, !dbg !10831
  %add16 = fadd float %25, %24, !dbg !10831
  store float %add16, float* %in3, align 4, !dbg !10831
  %26 = load float, float* %in2, align 4, !dbg !10832
  %mul = fmul float 0x3FEBB67AE0000000, %26, !dbg !10833
  store float %mul, float* %in2, align 4, !dbg !10834
  %27 = load float, float* %in3, align 4, !dbg !10835
  %mul17 = fmul float 0x3FFBB67AE0000000, %27, !dbg !10836
  store float %mul17, float* %in3, align 4, !dbg !10837
  %28 = load float, float* %in0, align 4, !dbg !10838
  %29 = load float, float* %in4, align 4, !dbg !10839
  %sub = fsub float %28, %29, !dbg !10840
  store float %sub, float* %t1, align 4, !dbg !10841
  %30 = load float, float* %in1, align 4, !dbg !10842
  %31 = load float, float* %in5, align 4, !dbg !10843
  %sub18 = fsub float %30, %31, !dbg !10844
  %mul19 = fmul float 0x3FE6A09E60000000, %sub18, !dbg !10845
  store float %mul19, float* %t2, align 4, !dbg !10846
  %32 = load float, float* %t1, align 4, !dbg !10847
  %33 = load float, float* %t2, align 4, !dbg !10848
  %add20 = fadd float %32, %33, !dbg !10849
  %34 = load float*, float** %out.addr, align 8, !dbg !10850
  %arrayidx21 = getelementptr inbounds float, float* %34, i64 10, !dbg !10850
  store float %add20, float* %arrayidx21, align 4, !dbg !10851
  %35 = load float*, float** %out.addr, align 8, !dbg !10852
  %arrayidx22 = getelementptr inbounds float, float* %35, i64 7, !dbg !10852
  store float %add20, float* %arrayidx22, align 4, !dbg !10853
  %36 = load float, float* %t1, align 4, !dbg !10854
  %37 = load float, float* %t2, align 4, !dbg !10855
  %sub23 = fsub float %36, %37, !dbg !10856
  %38 = load float*, float** %out.addr, align 8, !dbg !10857
  %arrayidx24 = getelementptr inbounds float, float* %38, i64 4, !dbg !10857
  store float %sub23, float* %arrayidx24, align 4, !dbg !10858
  %39 = load float*, float** %out.addr, align 8, !dbg !10859
  %arrayidx25 = getelementptr inbounds float, float* %39, i64 1, !dbg !10859
  store float %sub23, float* %arrayidx25, align 4, !dbg !10860
  %40 = load float, float* %in4, align 4, !dbg !10861
  %mul26 = fmul float %40, 5.000000e-01, !dbg !10862
  %41 = load float, float* %in0, align 4, !dbg !10863
  %add27 = fadd float %41, %mul26, !dbg !10863
  store float %add27, float* %in0, align 4, !dbg !10863
  %42 = load float, float* %in0, align 4, !dbg !10864
  %43 = load float, float* %in2, align 4, !dbg !10865
  %add28 = fadd float %42, %43, !dbg !10866
  store float %add28, float* %in4, align 4, !dbg !10867
  %44 = load float, float* %in1, align 4, !dbg !10868
  %mul29 = fmul float 2.000000e+00, %44, !dbg !10869
  %45 = load float, float* %in5, align 4, !dbg !10870
  %add30 = fadd float %45, %mul29, !dbg !10870
  store float %add30, float* %in5, align 4, !dbg !10870
  %46 = load float, float* %in5, align 4, !dbg !10871
  %47 = load float, float* %in3, align 4, !dbg !10872
  %add31 = fadd float %46, %47, !dbg !10873
  %mul32 = fmul float 0x3FD0907DC0000000, %add31, !dbg !10874
  store float %mul32, float* %in1, align 4, !dbg !10875
  %48 = load float, float* %in4, align 4, !dbg !10876
  %49 = load float, float* %in1, align 4, !dbg !10877
  %add33 = fadd float %48, %49, !dbg !10878
  %50 = load float*, float** %out.addr, align 8, !dbg !10879
  %arrayidx34 = getelementptr inbounds float, float* %50, i64 9, !dbg !10879
  store float %add33, float* %arrayidx34, align 4, !dbg !10880
  %51 = load float*, float** %out.addr, align 8, !dbg !10881
  %arrayidx35 = getelementptr inbounds float, float* %51, i64 8, !dbg !10881
  store float %add33, float* %arrayidx35, align 4, !dbg !10882
  %52 = load float, float* %in4, align 4, !dbg !10883
  %53 = load float, float* %in1, align 4, !dbg !10884
  %sub36 = fsub float %52, %53, !dbg !10885
  %54 = load float*, float** %out.addr, align 8, !dbg !10886
  %arrayidx37 = getelementptr inbounds float, float* %54, i64 3, !dbg !10886
  store float %sub36, float* %arrayidx37, align 4, !dbg !10887
  %55 = load float*, float** %out.addr, align 8, !dbg !10888
  %arrayidx38 = getelementptr inbounds float, float* %55, i64 2, !dbg !10888
  store float %sub36, float* %arrayidx38, align 4, !dbg !10889
  %56 = load float, float* %in2, align 4, !dbg !10890
  %57 = load float, float* %in0, align 4, !dbg !10891
  %sub39 = fsub float %57, %56, !dbg !10891
  store float %sub39, float* %in0, align 4, !dbg !10891
  %58 = load float, float* %in5, align 4, !dbg !10892
  %59 = load float, float* %in3, align 4, !dbg !10893
  %sub40 = fsub float %58, %59, !dbg !10894
  %mul41 = fmul float 0x3FEEE8DD40000000, %sub40, !dbg !10895
  store float %mul41, float* %in5, align 4, !dbg !10896
  %60 = load float, float* %in0, align 4, !dbg !10897
  %61 = load float, float* %in5, align 4, !dbg !10898
  %sub42 = fsub float %60, %61, !dbg !10899
  %62 = load float*, float** %out.addr, align 8, !dbg !10900
  %arrayidx43 = getelementptr inbounds float, float* %62, i64 5, !dbg !10900
  store float %sub42, float* %arrayidx43, align 4, !dbg !10901
  %63 = load float*, float** %out.addr, align 8, !dbg !10902
  %arrayidx44 = getelementptr inbounds float, float* %63, i64 0, !dbg !10902
  store float %sub42, float* %arrayidx44, align 4, !dbg !10903
  %64 = load float, float* %in0, align 4, !dbg !10904
  %65 = load float, float* %in5, align 4, !dbg !10905
  %add45 = fadd float %64, %65, !dbg !10906
  %66 = load float*, float** %out.addr, align 8, !dbg !10907
  %arrayidx46 = getelementptr inbounds float, float* %66, i64 11, !dbg !10907
  store float %add45, float* %arrayidx46, align 4, !dbg !10908
  %67 = load float*, float** %out.addr, align 8, !dbg !10909
  %arrayidx47 = getelementptr inbounds float, float* %67, i64 6, !dbg !10909
  store float %add45, float* %arrayidx47, align 4, !dbg !10910
  ret void, !dbg !10911
}

; Function Attrs: nounwind uwtable
define internal void @switch_buffer(%struct.MPADecodeContext* %s, i32* %pos, i32* %end_pos, i32* %end_pos2) #1 !dbg !10912 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %pos.addr = alloca i32*, align 8
  %end_pos.addr = alloca i32*, align 8
  %end_pos2.addr = alloca i32*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !10915, metadata !2031), !dbg !10916
  store i32* %pos, i32** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pos.addr, metadata !10917, metadata !2031), !dbg !10918
  store i32* %end_pos, i32** %end_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %end_pos.addr, metadata !10919, metadata !2031), !dbg !10920
  store i32* %end_pos2, i32** %end_pos2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %end_pos2.addr, metadata !10921, metadata !2031), !dbg !10922
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10923
  %in_gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 15, !dbg !10925
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb, i32 0, i32 0, !dbg !10926
  %1 = load i8*, i8** %buffer, align 16, !dbg !10926
  %tobool = icmp ne i8* %1, null, !dbg !10923
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10927

land.lhs.true:                                    ; preds = %entry
  %2 = load i32*, i32** %pos.addr, align 8, !dbg !10928
  %3 = load i32, i32* %2, align 4, !dbg !10930
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10931
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 14, !dbg !10932
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb, i32 0, i32 3, !dbg !10933
  %5 = load i32, i32* %size_in_bits, align 4, !dbg !10933
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10934
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 12, !dbg !10935
  %7 = load i32, i32* %extrasize, align 4, !dbg !10935
  %mul = mul nsw i32 %7, 8, !dbg !10936
  %sub = sub nsw i32 %5, %mul, !dbg !10937
  %cmp = icmp sge i32 %3, %sub, !dbg !10938
  br i1 %cmp, label %if.then, label %if.end, !dbg !10939

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10940
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %8, i32 0, i32 14, !dbg !10942
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10943
  %in_gb2 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 15, !dbg !10944
  %10 = bitcast %struct.GetBitContext* %gb1 to i8*, !dbg !10944
  %11 = bitcast %struct.GetBitContext* %in_gb2 to i8*, !dbg !10944
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 16, i1 false), !dbg !10944
  %12 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10945
  %in_gb3 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %12, i32 0, i32 15, !dbg !10946
  %buffer4 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb3, i32 0, i32 0, !dbg !10947
  store i8* null, i8** %buffer4, align 16, !dbg !10948
  %13 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10949
  %extrasize5 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %13, i32 0, i32 12, !dbg !10950
  store i32 0, i32* %extrasize5, align 4, !dbg !10951
  %14 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10952
  %gb6 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %14, i32 0, i32 14, !dbg !10953
  %15 = load i32*, i32** %pos.addr, align 8, !dbg !10954
  %16 = load i32, i32* %15, align 4, !dbg !10955
  %17 = load i32*, i32** %end_pos.addr, align 8, !dbg !10956
  %18 = load i32, i32* %17, align 4, !dbg !10957
  %sub7 = sub nsw i32 %16, %18, !dbg !10958
  call void @skip_bits_long(%struct.GetBitContext* %gb6, i32 %sub7), !dbg !10959
  %19 = load i32*, i32** %end_pos2.addr, align 8, !dbg !10960
  %20 = load i32, i32* %19, align 4, !dbg !10961
  %21 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10962
  %gb8 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %21, i32 0, i32 14, !dbg !10963
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb8), !dbg !10964
  %add = add nsw i32 %20, %call, !dbg !10965
  %22 = load i32*, i32** %pos.addr, align 8, !dbg !10966
  %23 = load i32, i32* %22, align 4, !dbg !10967
  %sub9 = sub nsw i32 %add, %23, !dbg !10968
  %24 = load i32*, i32** %end_pos.addr, align 8, !dbg !10969
  store i32 %sub9, i32* %24, align 4, !dbg !10970
  %25 = load i32*, i32** %end_pos2.addr, align 8, !dbg !10971
  store i32 %sub9, i32* %25, align 4, !dbg !10972
  %26 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10973
  %gb10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %26, i32 0, i32 14, !dbg !10974
  %call11 = call i32 @get_bits_count(%struct.GetBitContext* %gb10), !dbg !10975
  %27 = load i32*, i32** %pos.addr, align 8, !dbg !10976
  store i32 %call11, i32* %27, align 4, !dbg !10977
  br label %if.end, !dbg !10978

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !10979
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @l3_unscale(i32 %value, i32 %exponent) #7 !dbg !10980 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %exponent.addr = alloca i32, align 4
  %m = alloca i32, align 4
  %e = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10983, metadata !2031), !dbg !10984
  store i32 %exponent, i32* %exponent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exponent.addr, metadata !10985, metadata !2031), !dbg !10986
  call void @llvm.dbg.declare(metadata i32* %m, metadata !10987, metadata !2031), !dbg !10988
  call void @llvm.dbg.declare(metadata i32* %e, metadata !10989, metadata !2031), !dbg !10990
  %0 = load i32, i32* %value.addr, align 4, !dbg !10991
  %mul = mul nsw i32 4, %0, !dbg !10992
  %1 = load i32, i32* %exponent.addr, align 4, !dbg !10993
  %and = and i32 %1, 3, !dbg !10994
  %add = add nsw i32 %mul, %and, !dbg !10995
  %idxprom = sext i32 %add to i64, !dbg !10996
  %arrayidx = getelementptr inbounds [32828 x i8], [32828 x i8]* @table_4_3_exp, i64 0, i64 %idxprom, !dbg !10996
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10996
  %conv = sext i8 %2 to i32, !dbg !10996
  store i32 %conv, i32* %e, align 4, !dbg !10997
  %3 = load i32, i32* %value.addr, align 4, !dbg !10998
  %mul1 = mul nsw i32 4, %3, !dbg !10999
  %4 = load i32, i32* %exponent.addr, align 4, !dbg !11000
  %and2 = and i32 %4, 3, !dbg !11001
  %add3 = add nsw i32 %mul1, %and2, !dbg !11002
  %idxprom4 = sext i32 %add3 to i64, !dbg !11003
  %arrayidx5 = getelementptr inbounds [32828 x i32], [32828 x i32]* @table_4_3_value, i64 0, i64 %idxprom4, !dbg !11003
  %5 = load i32, i32* %arrayidx5, align 4, !dbg !11003
  store i32 %5, i32* %m, align 4, !dbg !11004
  %6 = load i32, i32* %exponent.addr, align 4, !dbg !11005
  %shr = ashr i32 %6, 2, !dbg !11006
  %7 = load i32, i32* %e, align 4, !dbg !11007
  %sub = sub nsw i32 %7, %shr, !dbg !11007
  store i32 %sub, i32* %e, align 4, !dbg !11007
  %8 = load i32, i32* %e, align 4, !dbg !11008
  %cmp = icmp ugt i32 %8, 31, !dbg !11010
  br i1 %cmp, label %if.then, label %if.end, !dbg !11011

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11012
  br label %return, !dbg !11012

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %m, align 4, !dbg !11013
  %10 = load i32, i32* %e, align 4, !dbg !11014
  %shl = shl i32 1, %10, !dbg !11015
  %shr7 = lshr i32 %shl, 1, !dbg !11016
  %add8 = add i32 %9, %shr7, !dbg !11017
  %11 = load i32, i32* %e, align 4, !dbg !11018
  %shr9 = lshr i32 %add8, %11, !dbg !11019
  store i32 %shr9, i32* %m, align 4, !dbg !11020
  %12 = load i32, i32* %m, align 4, !dbg !11021
  store i32 %12, i32* %retval, align 4, !dbg !11022
  br label %return, !dbg !11022

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !11023
  ret i32 %13, !dbg !11023
}

declare void @av_freep(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @mp_flush(%struct.MPADecodeContext* %ctx) #1 !dbg !11024 {
entry:
  %ctx.addr = alloca %struct.MPADecodeContext*, align 8
  store %struct.MPADecodeContext* %ctx, %struct.MPADecodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %ctx.addr, metadata !11027, metadata !2031), !dbg !11028
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11029
  %synth_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 17, !dbg !11030
  %arraydecay = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %synth_buf, i32 0, i32 0, !dbg !11031
  %1 = bitcast [1024 x float]* %arraydecay to i8*, !dbg !11031
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 8192, i32 32, i1 false), !dbg !11031
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11032
  %mdct_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 21, !dbg !11033
  %arraydecay1 = getelementptr inbounds [2 x [576 x float]], [2 x [576 x float]]* %mdct_buf, i32 0, i32 0, !dbg !11034
  %3 = bitcast [576 x float]* %arraydecay1 to i8*, !dbg !11034
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 4608, i32 32, i1 false), !dbg !11034
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11035
  %last_buf_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 11, !dbg !11036
  store i32 0, i32* %last_buf_size, align 32, !dbg !11037
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11038
  %dither_state = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 24, !dbg !11039
  store i32 0, i32* %dither_state, align 4, !dbg !11040
  ret void, !dbg !11041
}

declare i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig*, i8*, i32, i32) #3

declare noalias i8* @av_mallocz(i64) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2027, !2028}
!llvm.ident = !{!2029}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !887, globals: !949)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mpegaudiodec_float.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !{!888, !889, !890, !891, !892, !893, !901, !916, !920, !922, !924, !926, !943, !944}
!888 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!890 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!891 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!892 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64, align: 64)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !896, line: 221, size: 32, align: 8, elements: !897)
!896 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!897 = !{!898}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !895, file: !896, line: 221, baseType: !899, size: 32, align: 32)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !900, line: 51, baseType: !892)
!900 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64, align: 64)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPADecodeHeader", file: !903, line: 48, baseType: !904)
!903 = !DIFile(filename: "libavcodec/mpegaudiodecheader.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPADecodeHeader", file: !903, line: 46, size: 320, align: 32, elements: !905)
!905 = !{!906, !907, !908, !909, !910, !911, !912, !913, !914, !915}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "error_protection", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 96)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate_index", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 128)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 160)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 224)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "mode_ext", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 256)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "lsf", scope: !904, file: !903, line: 47, baseType: !891, size: 32, align: 32, offset: 288)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "OUT_INT", file: !919, line: 66, baseType: !888)
!919 = !DIFile(filename: "libavcodec/mpegaudio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !900, line: 48, baseType: !921)
!921 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !900, line: 40, baseType: !923)
!923 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !900, line: 38, baseType: !891)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64, align: 64)
!927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_alias32", file: !896, line: 41, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !896, line: 36, size: 32, align: 32, elements: !930)
!930 = !{!931, !932, !938, !942}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !929, file: !896, line: 37, baseType: !899, size: 32, align: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !929, file: !896, line: 38, baseType: !933, size: 32, align: 16)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 32, align: 16, elements: !936)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !900, line: 49, baseType: !935)
!935 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!936 = !{!937}
!937 = !DISubrange(count: 2)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !929, file: !896, line: 39, baseType: !939, size: 32, align: 8)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 32, align: 8, elements: !940)
!940 = !{!941}
!941 = !DISubrange(count: 4)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "f32", scope: !929, file: !896, line: 40, baseType: !888, size: 32, align: 32)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !896, line: 222, size: 16, align: 8, elements: !947)
!947 = !{!948}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !946, file: !896, line: 222, baseType: !934, size: 16, align: 16)
!949 = !{!950, !1671, !1672, !1673, !1674, !1675, !1679, !1683, !1688, !1702, !1704, !1706, !1710, !1712, !1713, !1714, !1716, !1718, !1719, !1720, !1724, !1726, !1727, !1728, !1729, !1730, !1732, !1734, !1735, !1736, !1737, !1738, !1742, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1756, !1768, !1770, !1774, !1776, !1778, !1781, !1782, !1786, !1790, !1797, !1799, !1803, !1805, !1809, !1811, !1814, !1816, !1820, !1822, !1824, !1828, !1830, !1833, !1836, !1839, !1843, !1844, !1848, !1851, !1855, !2015, !2018, !2020, !2024}
!950 = distinct !DIGlobalVariable(name: "ff_mp1float_decoder", scope: !0, file: !951, line: 42, type: !952, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp1float_decoder)
!951 = !DIFile(filename: "libavcodec/mpegaudiodec_float.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !953)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !954)
!954 = !{!955, !959, !960, !961, !962, !963, !972, !975, !978, !981, !986, !987, !1028, !1036, !1037, !1038, !1040, !1586, !1592, !1600, !1604, !1605, !1642, !1646, !1650, !1651, !1655, !1659, !1660, !1664, !1665, !1666}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !953, file: !14, line: 3475, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!958 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !953, file: !14, line: 3480, baseType: !956, size: 64, align: 64, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !953, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !953, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !953, file: !14, line: 3487, baseType: !891, size: 32, align: 32, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !953, file: !14, line: 3488, baseType: !964, size: 64, align: 64, offset: 256)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !967, line: 61, baseType: !968)
!967 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !967, line: 58, size: 64, align: 32, elements: !969)
!969 = !{!970, !971}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !968, file: !967, line: 59, baseType: !891, size: 32, align: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !968, file: !967, line: 60, baseType: !891, size: 32, align: 32, offset: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !953, file: !14, line: 3489, baseType: !973, size: 64, align: 64, offset: 320)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !953, file: !14, line: 3490, baseType: !976, size: 64, align: 64, offset: 384)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !953, file: !14, line: 3491, baseType: !979, size: 64, align: 64, offset: 448)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64, align: 64)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !953, file: !14, line: 3492, baseType: !982, size: 64, align: 64, offset: 512)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !900, line: 55, baseType: !985)
!985 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !953, file: !14, line: 3493, baseType: !920, size: 8, align: 8, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !953, file: !14, line: 3494, baseType: !988, size: 64, align: 64, offset: 640)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !992)
!992 = !{!993, !994, !998, !1002, !1003, !1004, !1005, !1009, !1015, !1017, !1021}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !991, file: !691, line: 72, baseType: !956, size: 64, align: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !991, file: !691, line: 78, baseType: !995, size: 64, align: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!956, !889}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !991, file: !691, line: 85, baseType: !999, size: 64, align: 64, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1001 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !991, file: !691, line: 93, baseType: !891, size: 32, align: 32, offset: 192)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !991, file: !691, line: 99, baseType: !891, size: 32, align: 32, offset: 224)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !991, file: !691, line: 108, baseType: !891, size: 32, align: 32, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !991, file: !691, line: 113, baseType: !1006, size: 64, align: 64, offset: 320)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!889, !889, !889}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !991, file: !691, line: 123, baseType: !1010, size: 64, align: 64, offset: 384)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!1013, !1013}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !991, file: !691, line: 130, baseType: !1016, size: 32, align: 32, offset: 448)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !991, file: !691, line: 136, baseType: !1018, size: 64, align: 64, offset: 512)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!1016, !889}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !991, file: !691, line: 142, baseType: !1022, size: 64, align: 64, offset: 576)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!891, !1025, !889, !956, !891}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1027 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !953, file: !14, line: 3495, baseType: !1029, size: 64, align: 64, offset: 704)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1032, file: !14, line: 3402, baseType: !891, size: 32, align: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1032, file: !14, line: 3403, baseType: !956, size: 64, align: 64, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !953, file: !14, line: 3507, baseType: !956, size: 64, align: 64, offset: 768)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !953, file: !14, line: 3516, baseType: !891, size: 32, align: 32, offset: 832)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !953, file: !14, line: 3517, baseType: !1039, size: 64, align: 64, offset: 896)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64, align: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !953, file: !14, line: 3527, baseType: !1041, size: 64, align: 64, offset: 960)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!891, !1044}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1051, !1054, !1055, !1056, !1057, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1335, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1524, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1046, file: !14, line: 1561, baseType: !988, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1046, file: !14, line: 1562, baseType: !891, size: 32, align: 32, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1046, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1046, file: !14, line: 1565, baseType: !1052, size: 64, align: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64, align: 64)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1046, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1046, file: !14, line: 1581, baseType: !892, size: 32, align: 32, offset: 224)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1046, file: !14, line: 1583, baseType: !889, size: 64, align: 64, offset: 256)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1046, file: !14, line: 1591, baseType: !1058, size: 64, align: 64, offset: 320)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64, align: 64)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1060, line: 129, size: 1664, align: 64, elements: !1061)
!1060 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1061 = !{!1062, !1063, !1064, !1065, !1163, !1182, !1183, !1212, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1059, file: !1060, line: 136, baseType: !891, size: 32, align: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1059, file: !1060, line: 151, baseType: !891, size: 32, align: 32, offset: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1059, file: !1060, line: 157, baseType: !891, size: 32, align: 32, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1059, file: !1060, line: 159, baseType: !1066, size: 64, align: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1068)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1069)
!1069 = !{!1070, !1075, !1077, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1115, !1117, !1118, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1151, !1152, !1153, !1154, !1155, !1156, !1159, !1160, !1161, !1162}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1068, file: !722, line: 282, baseType: !1071, size: 512, align: 64)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 512, align: 64, elements: !1073)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64, align: 64)
!1073 = !{!1074}
!1074 = !DISubrange(count: 8)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1068, file: !722, line: 299, baseType: !1076, size: 256, align: 32, offset: 512)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 256, align: 32, elements: !1073)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1068, file: !722, line: 315, baseType: !1078, size: 64, align: 64, offset: 768)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1068, file: !722, line: 326, baseType: !891, size: 32, align: 32, offset: 832)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1068, file: !722, line: 326, baseType: !891, size: 32, align: 32, offset: 864)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1068, file: !722, line: 334, baseType: !891, size: 32, align: 32, offset: 896)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1068, file: !722, line: 341, baseType: !891, size: 32, align: 32, offset: 928)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1068, file: !722, line: 346, baseType: !891, size: 32, align: 32, offset: 960)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1068, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1068, file: !722, line: 356, baseType: !966, size: 64, align: 32, offset: 1024)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1068, file: !722, line: 361, baseType: !922, size: 64, align: 64, offset: 1088)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1068, file: !722, line: 369, baseType: !922, size: 64, align: 64, offset: 1152)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1068, file: !722, line: 377, baseType: !922, size: 64, align: 64, offset: 1216)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1068, file: !722, line: 382, baseType: !891, size: 32, align: 32, offset: 1280)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1068, file: !722, line: 386, baseType: !891, size: 32, align: 32, offset: 1312)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1068, file: !722, line: 391, baseType: !891, size: 32, align: 32, offset: 1344)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1068, file: !722, line: 396, baseType: !889, size: 64, align: 64, offset: 1408)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1068, file: !722, line: 403, baseType: !1094, size: 512, align: 64, offset: 1472)
!1094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 512, align: 64, elements: !1073)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1068, file: !722, line: 410, baseType: !891, size: 32, align: 32, offset: 1984)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1068, file: !722, line: 415, baseType: !891, size: 32, align: 32, offset: 2016)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1068, file: !722, line: 420, baseType: !891, size: 32, align: 32, offset: 2048)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1068, file: !722, line: 425, baseType: !891, size: 32, align: 32, offset: 2080)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1068, file: !722, line: 435, baseType: !922, size: 64, align: 64, offset: 2112)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1068, file: !722, line: 440, baseType: !891, size: 32, align: 32, offset: 2176)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1068, file: !722, line: 445, baseType: !984, size: 64, align: 64, offset: 2240)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1068, file: !722, line: 459, baseType: !1103, size: 512, align: 64, offset: 2304)
!1103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 512, align: 64, elements: !1073)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1106, line: 94, baseType: !1107)
!1106 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1106, line: 81, size: 192, align: 64, elements: !1108)
!1108 = !{!1109, !1113, !1114}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1107, file: !1106, line: 82, baseType: !1110, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1106, line: 73, baseType: !1112)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1106, line: 73, flags: DIFlagFwdDecl)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1107, file: !1106, line: 89, baseType: !1072, size: 64, align: 64, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1107, file: !1106, line: 93, baseType: !891, size: 32, align: 32, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1068, file: !722, line: 473, baseType: !1116, size: 64, align: 64, offset: 2816)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1068, file: !722, line: 477, baseType: !891, size: 32, align: 32, offset: 2880)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1068, file: !722, line: 479, baseType: !1119, size: 64, align: 64, offset: 2944)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1132}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1122, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1122, file: !722, line: 203, baseType: !1072, size: 64, align: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1122, file: !722, line: 204, baseType: !891, size: 32, align: 32, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1122, file: !722, line: 205, baseType: !1128, size: 64, align: 64, offset: 192)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1130, line: 86, baseType: !1131)
!1130 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1131 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1130, line: 86, flags: DIFlagFwdDecl)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1122, file: !722, line: 206, baseType: !1104, size: 64, align: 64, offset: 256)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1068, file: !722, line: 480, baseType: !891, size: 32, align: 32, offset: 3008)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1068, file: !722, line: 505, baseType: !891, size: 32, align: 32, offset: 3040)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1068, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1068, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1068, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1068, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1068, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1068, file: !722, line: 532, baseType: !922, size: 64, align: 64, offset: 3264)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1068, file: !722, line: 539, baseType: !922, size: 64, align: 64, offset: 3328)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1068, file: !722, line: 547, baseType: !922, size: 64, align: 64, offset: 3392)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1068, file: !722, line: 554, baseType: !1128, size: 64, align: 64, offset: 3456)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1068, file: !722, line: 563, baseType: !891, size: 32, align: 32, offset: 3520)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1068, file: !722, line: 572, baseType: !891, size: 32, align: 32, offset: 3552)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1068, file: !722, line: 581, baseType: !891, size: 32, align: 32, offset: 3584)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1068, file: !722, line: 588, baseType: !1148, size: 64, align: 64, offset: 3648)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !900, line: 36, baseType: !1150)
!1150 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1068, file: !722, line: 593, baseType: !891, size: 32, align: 32, offset: 3712)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1068, file: !722, line: 596, baseType: !891, size: 32, align: 32, offset: 3744)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1068, file: !722, line: 599, baseType: !1104, size: 64, align: 64, offset: 3776)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1068, file: !722, line: 605, baseType: !1104, size: 64, align: 64, offset: 3840)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1068, file: !722, line: 616, baseType: !1104, size: 64, align: 64, offset: 3904)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1068, file: !722, line: 626, baseType: !1157, size: 64, align: 64, offset: 3968)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1158, line: 216, baseType: !985)
!1158 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1068, file: !722, line: 627, baseType: !1157, size: 64, align: 64, offset: 4032)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1068, file: !722, line: 628, baseType: !1157, size: 64, align: 64, offset: 4096)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1068, file: !722, line: 629, baseType: !1157, size: 64, align: 64, offset: 4160)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1068, file: !722, line: 645, baseType: !1104, size: 64, align: 64, offset: 4224)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1059, file: !1060, line: 161, baseType: !1164, size: 64, align: 64, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1060, line: 117, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1060, line: 100, size: 832, align: 64, elements: !1167)
!1167 = !{!1168, !1173, !1174, !1175, !1176, !1177, !1179, !1180, !1181}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1166, file: !1060, line: 105, baseType: !1169, size: 256, align: 64)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1170, size: 256, align: 64, elements: !940)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1106, line: 238, baseType: !1172)
!1172 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1106, line: 238, flags: DIFlagFwdDecl)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1166, file: !1060, line: 110, baseType: !891, size: 32, align: 32, offset: 256)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1166, file: !1060, line: 111, baseType: !891, size: 32, align: 32, offset: 288)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1166, file: !1060, line: 111, baseType: !891, size: 32, align: 32, offset: 320)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1166, file: !1060, line: 112, baseType: !1076, size: 256, align: 32, offset: 352)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1166, file: !1060, line: 113, baseType: !1178, size: 128, align: 32, offset: 608)
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 128, align: 32, elements: !940)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1166, file: !1060, line: 114, baseType: !891, size: 32, align: 32, offset: 736)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1166, file: !1060, line: 115, baseType: !891, size: 32, align: 32, offset: 768)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1166, file: !1060, line: 116, baseType: !891, size: 32, align: 32, offset: 800)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1059, file: !1060, line: 163, baseType: !889, size: 64, align: 64, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1059, file: !1060, line: 165, baseType: !1184, size: 128, align: 64, offset: 320)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1060, line: 122, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1060, line: 119, size: 128, align: 64, elements: !1186)
!1186 = !{!1187, !1211}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1185, file: !1060, line: 120, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1207, !1208, !1209, !1210}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1190, file: !14, line: 1451, baseType: !1104, size: 64, align: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1190, file: !14, line: 1461, baseType: !922, size: 64, align: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1190, file: !14, line: 1467, baseType: !922, size: 64, align: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1190, file: !14, line: 1468, baseType: !1072, size: 64, align: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1190, file: !14, line: 1469, baseType: !891, size: 32, align: 32, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1190, file: !14, line: 1470, baseType: !891, size: 32, align: 32, offset: 288)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1190, file: !14, line: 1474, baseType: !891, size: 32, align: 32, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1190, file: !14, line: 1479, baseType: !1200, size: 64, align: 64, offset: 384)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64, align: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1203)
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !14, line: 1412, baseType: !1072, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1202, file: !14, line: 1413, baseType: !891, size: 32, align: 32, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1202, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1190, file: !14, line: 1480, baseType: !891, size: 32, align: 32, offset: 448)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1190, file: !14, line: 1486, baseType: !922, size: 64, align: 64, offset: 512)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1190, file: !14, line: 1488, baseType: !922, size: 64, align: 64, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1190, file: !14, line: 1497, baseType: !922, size: 64, align: 64, offset: 640)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1185, file: !1060, line: 121, baseType: !1066, size: 64, align: 64, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1059, file: !1060, line: 166, baseType: !1213, size: 128, align: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1060, line: 127, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1060, line: 124, size: 128, align: 64, elements: !1215)
!1215 = !{!1216, !1289}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1214, file: !1060, line: 125, baseType: !1217, size: 64, align: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1221)
!1221 = !{!1222, !1223, !1247, !1251, !1252, !1286, !1287, !1288}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1220, file: !14, line: 5751, baseType: !988, size: 64, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1220, file: !14, line: 5756, baseType: !1224, size: 64, align: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1227)
!1227 = !{!1228, !1229, !1232, !1233, !1234, !1238, !1242, !1246}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1226, file: !14, line: 5797, baseType: !956, size: 64, align: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1226, file: !14, line: 5804, baseType: !1230, size: 64, align: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1226, file: !14, line: 5815, baseType: !988, size: 64, align: 64, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1226, file: !14, line: 5825, baseType: !891, size: 32, align: 32, offset: 192)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1226, file: !14, line: 5826, baseType: !1235, size: 64, align: 64, offset: 256)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!891, !1218}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1226, file: !14, line: 5827, baseType: !1239, size: 64, align: 64, offset: 320)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64, align: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!891, !1218, !1188}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1226, file: !14, line: 5828, baseType: !1243, size: 64, align: 64, offset: 384)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64, align: 64)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{null, !1218}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1226, file: !14, line: 5829, baseType: !1243, size: 64, align: 64, offset: 448)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1220, file: !14, line: 5762, baseType: !1248, size: 64, align: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1250)
!1250 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1220, file: !14, line: 5768, baseType: !889, size: 64, align: 64, offset: 192)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1220, file: !14, line: 5775, baseType: !1253, size: 64, align: 64, offset: 256)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64, align: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1255, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1255, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1255, file: !14, line: 3948, baseType: !899, size: 32, align: 32, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1255, file: !14, line: 3958, baseType: !1072, size: 64, align: 64, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1255, file: !14, line: 3962, baseType: !891, size: 32, align: 32, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1255, file: !14, line: 3968, baseType: !891, size: 32, align: 32, offset: 224)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1255, file: !14, line: 3973, baseType: !922, size: 64, align: 64, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1255, file: !14, line: 3986, baseType: !891, size: 32, align: 32, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1255, file: !14, line: 3999, baseType: !891, size: 32, align: 32, offset: 352)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1255, file: !14, line: 4004, baseType: !891, size: 32, align: 32, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1255, file: !14, line: 4005, baseType: !891, size: 32, align: 32, offset: 416)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1255, file: !14, line: 4010, baseType: !891, size: 32, align: 32, offset: 448)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1255, file: !14, line: 4011, baseType: !891, size: 32, align: 32, offset: 480)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1255, file: !14, line: 4020, baseType: !966, size: 64, align: 32, offset: 512)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1255, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1255, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1255, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1255, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1255, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1255, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1255, file: !14, line: 4039, baseType: !891, size: 32, align: 32, offset: 768)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1255, file: !14, line: 4046, baseType: !984, size: 64, align: 64, offset: 832)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1255, file: !14, line: 4050, baseType: !891, size: 32, align: 32, offset: 896)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1255, file: !14, line: 4054, baseType: !891, size: 32, align: 32, offset: 928)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1255, file: !14, line: 4061, baseType: !891, size: 32, align: 32, offset: 960)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1255, file: !14, line: 4065, baseType: !891, size: 32, align: 32, offset: 992)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1255, file: !14, line: 4073, baseType: !891, size: 32, align: 32, offset: 1024)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1255, file: !14, line: 4080, baseType: !891, size: 32, align: 32, offset: 1056)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1255, file: !14, line: 4084, baseType: !891, size: 32, align: 32, offset: 1088)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1220, file: !14, line: 5781, baseType: !1253, size: 64, align: 64, offset: 320)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1220, file: !14, line: 5787, baseType: !966, size: 64, align: 32, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1220, file: !14, line: 5793, baseType: !966, size: 64, align: 32, offset: 448)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1214, file: !1060, line: 126, baseType: !891, size: 32, align: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1059, file: !1060, line: 172, baseType: !1188, size: 64, align: 64, offset: 576)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1059, file: !1060, line: 177, baseType: !1072, size: 64, align: 64, offset: 640)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1059, file: !1060, line: 178, baseType: !892, size: 32, align: 32, offset: 704)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1059, file: !1060, line: 180, baseType: !889, size: 64, align: 64, offset: 768)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1059, file: !1060, line: 185, baseType: !891, size: 32, align: 32, offset: 832)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1059, file: !1060, line: 190, baseType: !889, size: 64, align: 64, offset: 896)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1059, file: !1060, line: 195, baseType: !891, size: 32, align: 32, offset: 960)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1059, file: !1060, line: 200, baseType: !1188, size: 64, align: 64, offset: 1024)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1059, file: !1060, line: 201, baseType: !891, size: 32, align: 32, offset: 1088)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1059, file: !1060, line: 202, baseType: !1066, size: 64, align: 64, offset: 1152)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1059, file: !1060, line: 203, baseType: !891, size: 32, align: 32, offset: 1216)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1059, file: !1060, line: 205, baseType: !891, size: 32, align: 32, offset: 1248)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1059, file: !1060, line: 206, baseType: !891, size: 32, align: 32, offset: 1280)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1059, file: !1060, line: 209, baseType: !1157, size: 64, align: 64, offset: 1344)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1059, file: !1060, line: 212, baseType: !1157, size: 64, align: 64, offset: 1408)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1059, file: !1060, line: 213, baseType: !1066, size: 64, align: 64, offset: 1472)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1059, file: !1060, line: 215, baseType: !891, size: 32, align: 32, offset: 1536)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1059, file: !1060, line: 217, baseType: !891, size: 32, align: 32, offset: 1568)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1059, file: !1060, line: 220, baseType: !891, size: 32, align: 32, offset: 1600)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1046, file: !14, line: 1598, baseType: !889, size: 64, align: 64, offset: 384)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1046, file: !14, line: 1606, baseType: !922, size: 64, align: 64, offset: 448)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1046, file: !14, line: 1614, baseType: !891, size: 32, align: 32, offset: 512)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1046, file: !14, line: 1622, baseType: !891, size: 32, align: 32, offset: 544)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1046, file: !14, line: 1628, baseType: !891, size: 32, align: 32, offset: 576)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1046, file: !14, line: 1636, baseType: !891, size: 32, align: 32, offset: 608)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1046, file: !14, line: 1643, baseType: !891, size: 32, align: 32, offset: 640)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1046, file: !14, line: 1657, baseType: !1072, size: 64, align: 64, offset: 704)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1046, file: !14, line: 1658, baseType: !891, size: 32, align: 32, offset: 768)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1046, file: !14, line: 1679, baseType: !966, size: 64, align: 32, offset: 800)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1046, file: !14, line: 1688, baseType: !891, size: 32, align: 32, offset: 864)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1046, file: !14, line: 1712, baseType: !891, size: 32, align: 32, offset: 896)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1046, file: !14, line: 1729, baseType: !891, size: 32, align: 32, offset: 928)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1046, file: !14, line: 1729, baseType: !891, size: 32, align: 32, offset: 960)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1046, file: !14, line: 1744, baseType: !891, size: 32, align: 32, offset: 992)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1046, file: !14, line: 1744, baseType: !891, size: 32, align: 32, offset: 1024)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1046, file: !14, line: 1751, baseType: !891, size: 32, align: 32, offset: 1056)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1046, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1046, file: !14, line: 1791, baseType: !1328, size: 64, align: 64, offset: 1152)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64, align: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{null, !1331, !1332, !1334, !891, !891, !891}
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64, align: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1046, file: !14, line: 1808, baseType: !1336, size: 64, align: 64, offset: 1216)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64, align: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!473, !1331, !973}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1046, file: !14, line: 1816, baseType: !891, size: 32, align: 32, offset: 1280)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1046, file: !14, line: 1825, baseType: !888, size: 32, align: 32, offset: 1312)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1046, file: !14, line: 1830, baseType: !891, size: 32, align: 32, offset: 1344)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1046, file: !14, line: 1838, baseType: !888, size: 32, align: 32, offset: 1376)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1046, file: !14, line: 1846, baseType: !891, size: 32, align: 32, offset: 1408)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1046, file: !14, line: 1851, baseType: !891, size: 32, align: 32, offset: 1440)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1046, file: !14, line: 1861, baseType: !888, size: 32, align: 32, offset: 1472)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1046, file: !14, line: 1868, baseType: !888, size: 32, align: 32, offset: 1504)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1046, file: !14, line: 1875, baseType: !888, size: 32, align: 32, offset: 1536)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1046, file: !14, line: 1882, baseType: !888, size: 32, align: 32, offset: 1568)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1046, file: !14, line: 1889, baseType: !888, size: 32, align: 32, offset: 1600)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1046, file: !14, line: 1896, baseType: !888, size: 32, align: 32, offset: 1632)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1046, file: !14, line: 1903, baseType: !888, size: 32, align: 32, offset: 1664)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1046, file: !14, line: 1910, baseType: !891, size: 32, align: 32, offset: 1696)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1046, file: !14, line: 1915, baseType: !891, size: 32, align: 32, offset: 1728)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1046, file: !14, line: 1926, baseType: !1334, size: 64, align: 64, offset: 1792)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1046, file: !14, line: 1935, baseType: !966, size: 64, align: 32, offset: 1856)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1046, file: !14, line: 1942, baseType: !891, size: 32, align: 32, offset: 1920)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1046, file: !14, line: 1948, baseType: !891, size: 32, align: 32, offset: 1952)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1046, file: !14, line: 1954, baseType: !891, size: 32, align: 32, offset: 1984)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1046, file: !14, line: 1960, baseType: !891, size: 32, align: 32, offset: 2016)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1046, file: !14, line: 1984, baseType: !891, size: 32, align: 32, offset: 2048)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1046, file: !14, line: 1991, baseType: !891, size: 32, align: 32, offset: 2080)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1046, file: !14, line: 1996, baseType: !891, size: 32, align: 32, offset: 2112)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1046, file: !14, line: 2004, baseType: !891, size: 32, align: 32, offset: 2144)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1046, file: !14, line: 2011, baseType: !891, size: 32, align: 32, offset: 2176)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1046, file: !14, line: 2018, baseType: !891, size: 32, align: 32, offset: 2208)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1046, file: !14, line: 2027, baseType: !891, size: 32, align: 32, offset: 2240)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1046, file: !14, line: 2034, baseType: !891, size: 32, align: 32, offset: 2272)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1046, file: !14, line: 2044, baseType: !891, size: 32, align: 32, offset: 2304)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1046, file: !14, line: 2054, baseType: !1370, size: 64, align: 64, offset: 2368)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64, align: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1046, file: !14, line: 2061, baseType: !1370, size: 64, align: 64, offset: 2432)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1046, file: !14, line: 2066, baseType: !891, size: 32, align: 32, offset: 2496)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1046, file: !14, line: 2070, baseType: !891, size: 32, align: 32, offset: 2528)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1046, file: !14, line: 2078, baseType: !891, size: 32, align: 32, offset: 2560)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1046, file: !14, line: 2085, baseType: !891, size: 32, align: 32, offset: 2592)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1046, file: !14, line: 2092, baseType: !891, size: 32, align: 32, offset: 2624)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1046, file: !14, line: 2099, baseType: !891, size: 32, align: 32, offset: 2656)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1046, file: !14, line: 2106, baseType: !891, size: 32, align: 32, offset: 2688)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1046, file: !14, line: 2113, baseType: !891, size: 32, align: 32, offset: 2720)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1046, file: !14, line: 2120, baseType: !891, size: 32, align: 32, offset: 2752)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1046, file: !14, line: 2125, baseType: !891, size: 32, align: 32, offset: 2784)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1046, file: !14, line: 2133, baseType: !891, size: 32, align: 32, offset: 2816)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1046, file: !14, line: 2140, baseType: !891, size: 32, align: 32, offset: 2848)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1046, file: !14, line: 2145, baseType: !891, size: 32, align: 32, offset: 2880)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1046, file: !14, line: 2153, baseType: !891, size: 32, align: 32, offset: 2912)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1046, file: !14, line: 2158, baseType: !891, size: 32, align: 32, offset: 2944)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1046, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1046, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1046, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1046, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1046, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1046, file: !14, line: 2203, baseType: !891, size: 32, align: 32, offset: 3136)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1046, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1046, file: !14, line: 2212, baseType: !891, size: 32, align: 32, offset: 3200)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1046, file: !14, line: 2213, baseType: !891, size: 32, align: 32, offset: 3232)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1046, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1046, file: !14, line: 2232, baseType: !891, size: 32, align: 32, offset: 3296)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1046, file: !14, line: 2243, baseType: !891, size: 32, align: 32, offset: 3328)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1046, file: !14, line: 2249, baseType: !891, size: 32, align: 32, offset: 3360)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1046, file: !14, line: 2256, baseType: !891, size: 32, align: 32, offset: 3392)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1046, file: !14, line: 2263, baseType: !984, size: 64, align: 64, offset: 3456)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1046, file: !14, line: 2270, baseType: !984, size: 64, align: 64, offset: 3520)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1046, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1046, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1046, file: !14, line: 2367, baseType: !1406, size: 64, align: 64, offset: 3648)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64, align: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!891, !1331, !1066, !891}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1046, file: !14, line: 2383, baseType: !891, size: 32, align: 32, offset: 3712)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1046, file: !14, line: 2386, baseType: !888, size: 32, align: 32, offset: 3744)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1046, file: !14, line: 2387, baseType: !888, size: 32, align: 32, offset: 3776)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1046, file: !14, line: 2394, baseType: !891, size: 32, align: 32, offset: 3808)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1046, file: !14, line: 2401, baseType: !891, size: 32, align: 32, offset: 3840)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1046, file: !14, line: 2408, baseType: !891, size: 32, align: 32, offset: 3872)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1046, file: !14, line: 2415, baseType: !891, size: 32, align: 32, offset: 3904)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1046, file: !14, line: 2422, baseType: !891, size: 32, align: 32, offset: 3936)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1046, file: !14, line: 2423, baseType: !1418, size: 64, align: 64, offset: 3968)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64, align: 64)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1420)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1421)
!1421 = !{!1422, !1423, !1424, !1425}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1420, file: !14, line: 827, baseType: !891, size: 32, align: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1420, file: !14, line: 828, baseType: !891, size: 32, align: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1420, file: !14, line: 829, baseType: !891, size: 32, align: 32, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1420, file: !14, line: 830, baseType: !888, size: 32, align: 32, offset: 96)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1046, file: !14, line: 2430, baseType: !922, size: 64, align: 64, offset: 4032)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1046, file: !14, line: 2437, baseType: !922, size: 64, align: 64, offset: 4096)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1046, file: !14, line: 2444, baseType: !888, size: 32, align: 32, offset: 4160)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1046, file: !14, line: 2451, baseType: !888, size: 32, align: 32, offset: 4192)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1046, file: !14, line: 2458, baseType: !891, size: 32, align: 32, offset: 4224)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1046, file: !14, line: 2469, baseType: !891, size: 32, align: 32, offset: 4256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1046, file: !14, line: 2475, baseType: !891, size: 32, align: 32, offset: 4288)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1046, file: !14, line: 2481, baseType: !891, size: 32, align: 32, offset: 4320)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1046, file: !14, line: 2485, baseType: !891, size: 32, align: 32, offset: 4352)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1046, file: !14, line: 2489, baseType: !891, size: 32, align: 32, offset: 4384)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1046, file: !14, line: 2493, baseType: !891, size: 32, align: 32, offset: 4416)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1046, file: !14, line: 2501, baseType: !891, size: 32, align: 32, offset: 4448)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1046, file: !14, line: 2506, baseType: !891, size: 32, align: 32, offset: 4480)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1046, file: !14, line: 2510, baseType: !891, size: 32, align: 32, offset: 4512)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1046, file: !14, line: 2514, baseType: !922, size: 64, align: 64, offset: 4544)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1046, file: !14, line: 2528, baseType: !1442, size: 64, align: 64, offset: 4608)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{null, !1331, !889, !891, !891}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1046, file: !14, line: 2534, baseType: !891, size: 32, align: 32, offset: 4672)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1046, file: !14, line: 2545, baseType: !891, size: 32, align: 32, offset: 4704)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1046, file: !14, line: 2547, baseType: !891, size: 32, align: 32, offset: 4736)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1046, file: !14, line: 2549, baseType: !891, size: 32, align: 32, offset: 4768)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1046, file: !14, line: 2551, baseType: !891, size: 32, align: 32, offset: 4800)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1046, file: !14, line: 2553, baseType: !891, size: 32, align: 32, offset: 4832)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1046, file: !14, line: 2555, baseType: !891, size: 32, align: 32, offset: 4864)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1046, file: !14, line: 2557, baseType: !891, size: 32, align: 32, offset: 4896)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1046, file: !14, line: 2559, baseType: !891, size: 32, align: 32, offset: 4928)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1046, file: !14, line: 2563, baseType: !891, size: 32, align: 32, offset: 4960)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1046, file: !14, line: 2571, baseType: !1456, size: 64, align: 64, offset: 4992)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64, align: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1046, file: !14, line: 2579, baseType: !1456, size: 64, align: 64, offset: 5056)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1046, file: !14, line: 2586, baseType: !891, size: 32, align: 32, offset: 5120)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1046, file: !14, line: 2615, baseType: !891, size: 32, align: 32, offset: 5152)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1046, file: !14, line: 2627, baseType: !891, size: 32, align: 32, offset: 5184)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1046, file: !14, line: 2637, baseType: !891, size: 32, align: 32, offset: 5216)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1046, file: !14, line: 2681, baseType: !891, size: 32, align: 32, offset: 5248)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1046, file: !14, line: 2709, baseType: !922, size: 64, align: 64, offset: 5312)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1046, file: !14, line: 2716, baseType: !1465, size: 64, align: 64, offset: 5376)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472, !1473, !1474, !1478, !1484, !1488, !1489, !1490, !1491, !1497, !1498, !1499, !1500, !1501}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1467, file: !14, line: 3642, baseType: !956, size: 64, align: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1467, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1467, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1467, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1467, file: !14, line: 3669, baseType: !891, size: 32, align: 32, offset: 160)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1467, file: !14, line: 3682, baseType: !1475, size: 64, align: 64, offset: 192)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64, align: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!891, !1044, !1066}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1467, file: !14, line: 3698, baseType: !1479, size: 64, align: 64, offset: 256)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64, align: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!891, !1044, !1482, !899}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1467, file: !14, line: 3712, baseType: !1485, size: 64, align: 64, offset: 320)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!891, !1044, !891, !1482, !899}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1467, file: !14, line: 3726, baseType: !1479, size: 64, align: 64, offset: 384)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1467, file: !14, line: 3737, baseType: !1041, size: 64, align: 64, offset: 448)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1467, file: !14, line: 3746, baseType: !891, size: 32, align: 32, offset: 512)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1467, file: !14, line: 3757, baseType: !1492, size: 64, align: 64, offset: 576)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64, align: 64)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{null, !1495}
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64, align: 64)
!1496 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1467, file: !14, line: 3766, baseType: !1041, size: 64, align: 64, offset: 640)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1467, file: !14, line: 3774, baseType: !1041, size: 64, align: 64, offset: 704)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1467, file: !14, line: 3780, baseType: !891, size: 32, align: 32, offset: 768)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1467, file: !14, line: 3785, baseType: !891, size: 32, align: 32, offset: 800)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1467, file: !14, line: 3795, baseType: !1502, size: 64, align: 64, offset: 832)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64, align: 64)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!891, !1044, !1104}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1046, file: !14, line: 2728, baseType: !889, size: 64, align: 64, offset: 5440)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1046, file: !14, line: 2735, baseType: !1094, size: 512, align: 64, offset: 5504)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1046, file: !14, line: 2742, baseType: !891, size: 32, align: 32, offset: 6016)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1046, file: !14, line: 2755, baseType: !891, size: 32, align: 32, offset: 6048)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1046, file: !14, line: 2776, baseType: !891, size: 32, align: 32, offset: 6080)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1046, file: !14, line: 2783, baseType: !891, size: 32, align: 32, offset: 6112)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1046, file: !14, line: 2791, baseType: !891, size: 32, align: 32, offset: 6144)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1046, file: !14, line: 2802, baseType: !1066, size: 64, align: 64, offset: 6208)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1046, file: !14, line: 2811, baseType: !891, size: 32, align: 32, offset: 6272)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1046, file: !14, line: 2821, baseType: !891, size: 32, align: 32, offset: 6304)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1046, file: !14, line: 2830, baseType: !891, size: 32, align: 32, offset: 6336)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1046, file: !14, line: 2840, baseType: !891, size: 32, align: 32, offset: 6368)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1046, file: !14, line: 2851, baseType: !1518, size: 64, align: 64, offset: 6400)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!891, !1331, !1521, !889, !1334, !891, !891}
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!891, !1331, !889}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1046, file: !14, line: 2871, baseType: !1525, size: 64, align: 64, offset: 6464)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64, align: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!891, !1331, !1528, !889, !1334, !891}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!891, !1331, !889, !891, !891}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1046, file: !14, line: 2878, baseType: !891, size: 32, align: 32, offset: 6528)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1046, file: !14, line: 2885, baseType: !891, size: 32, align: 32, offset: 6560)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1046, file: !14, line: 3005, baseType: !891, size: 32, align: 32, offset: 6592)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1046, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1046, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1046, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1046, file: !14, line: 3037, baseType: !1072, size: 64, align: 64, offset: 6720)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1046, file: !14, line: 3038, baseType: !891, size: 32, align: 32, offset: 6784)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1046, file: !14, line: 3050, baseType: !984, size: 64, align: 64, offset: 6848)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1046, file: !14, line: 3065, baseType: !891, size: 32, align: 32, offset: 6912)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1046, file: !14, line: 3083, baseType: !891, size: 32, align: 32, offset: 6944)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1046, file: !14, line: 3092, baseType: !966, size: 64, align: 32, offset: 6976)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1046, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1046, file: !14, line: 3106, baseType: !966, size: 64, align: 32, offset: 7072)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1046, file: !14, line: 3113, baseType: !1546, size: 64, align: 64, offset: 7168)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64, align: 64)
!1547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1548)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554, !1555, !1556, !1559}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1549, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1549, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1549, file: !14, line: 720, baseType: !956, size: 64, align: 64, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1549, file: !14, line: 724, baseType: !956, size: 64, align: 64, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1549, file: !14, line: 728, baseType: !891, size: 32, align: 32, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1549, file: !14, line: 734, baseType: !1557, size: 64, align: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1549, file: !14, line: 739, baseType: !1560, size: 64, align: 64, offset: 320)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64, align: 64)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1046, file: !14, line: 3129, baseType: !922, size: 64, align: 64, offset: 7232)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1046, file: !14, line: 3130, baseType: !922, size: 64, align: 64, offset: 7296)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1046, file: !14, line: 3131, baseType: !922, size: 64, align: 64, offset: 7360)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1046, file: !14, line: 3132, baseType: !922, size: 64, align: 64, offset: 7424)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1046, file: !14, line: 3139, baseType: !1456, size: 64, align: 64, offset: 7488)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1046, file: !14, line: 3147, baseType: !891, size: 32, align: 32, offset: 7552)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1046, file: !14, line: 3165, baseType: !891, size: 32, align: 32, offset: 7584)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1046, file: !14, line: 3172, baseType: !891, size: 32, align: 32, offset: 7616)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1046, file: !14, line: 3180, baseType: !891, size: 32, align: 32, offset: 7648)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1046, file: !14, line: 3191, baseType: !1370, size: 64, align: 64, offset: 7680)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1046, file: !14, line: 3199, baseType: !1072, size: 64, align: 64, offset: 7744)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1046, file: !14, line: 3207, baseType: !1456, size: 64, align: 64, offset: 7808)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1046, file: !14, line: 3214, baseType: !892, size: 32, align: 32, offset: 7872)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1046, file: !14, line: 3224, baseType: !1200, size: 64, align: 64, offset: 7936)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1046, file: !14, line: 3225, baseType: !891, size: 32, align: 32, offset: 8000)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1046, file: !14, line: 3249, baseType: !1104, size: 64, align: 64, offset: 8064)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1046, file: !14, line: 3256, baseType: !891, size: 32, align: 32, offset: 8128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1046, file: !14, line: 3271, baseType: !891, size: 32, align: 32, offset: 8160)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1046, file: !14, line: 3279, baseType: !922, size: 64, align: 64, offset: 8192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1046, file: !14, line: 3301, baseType: !1104, size: 64, align: 64, offset: 8256)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1046, file: !14, line: 3310, baseType: !891, size: 32, align: 32, offset: 8320)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1046, file: !14, line: 3337, baseType: !891, size: 32, align: 32, offset: 8352)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1046, file: !14, line: 3351, baseType: !891, size: 32, align: 32, offset: 8384)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1046, file: !14, line: 3359, baseType: !891, size: 32, align: 32, offset: 8416)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !953, file: !14, line: 3535, baseType: !1587, size: 64, align: 64, offset: 1024)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64, align: 64)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!891, !1044, !1590}
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !953, file: !14, line: 3541, baseType: !1593, size: 64, align: 64, offset: 1088)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1060, line: 223, size: 128, align: 64, elements: !1597)
!1597 = !{!1598, !1599}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1596, file: !1060, line: 224, baseType: !1482, size: 64, align: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1596, file: !1060, line: 225, baseType: !1482, size: 64, align: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !953, file: !14, line: 3549, baseType: !1601, size: 64, align: 64, offset: 1152)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{null, !1039}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !953, file: !14, line: 3551, baseType: !1041, size: 64, align: 64, offset: 1216)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !953, file: !14, line: 3552, baseType: !1606, size: 64, align: 64, offset: 1280)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!891, !1044, !1072, !891, !1609}
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64, align: 64)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1641}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1611, file: !14, line: 3921, baseType: !934, size: 16, align: 16)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1611, file: !14, line: 3922, baseType: !899, size: 32, align: 32, offset: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1611, file: !14, line: 3923, baseType: !899, size: 32, align: 32, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1611, file: !14, line: 3924, baseType: !892, size: 32, align: 32, offset: 96)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1611, file: !14, line: 3925, baseType: !1618, size: 64, align: 64, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64, align: 64)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1627, !1628, !1634, !1636, !1637, !1638, !1639, !1640}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1621, file: !14, line: 3886, baseType: !891, size: 32, align: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1621, file: !14, line: 3887, baseType: !891, size: 32, align: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1621, file: !14, line: 3888, baseType: !891, size: 32, align: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1621, file: !14, line: 3889, baseType: !891, size: 32, align: 32, offset: 96)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1621, file: !14, line: 3890, baseType: !891, size: 32, align: 32, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1621, file: !14, line: 3897, baseType: !1629, size: 768, align: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1630, file: !14, line: 3855, baseType: !1071, size: 512, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1630, file: !14, line: 3857, baseType: !1076, size: 256, align: 32, offset: 512)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1621, file: !14, line: 3903, baseType: !1635, size: 256, align: 64, offset: 960)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 256, align: 64, elements: !940)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1621, file: !14, line: 3904, baseType: !1178, size: 128, align: 32, offset: 1216)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1621, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1621, file: !14, line: 3908, baseType: !1456, size: 64, align: 64, offset: 1408)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1621, file: !14, line: 3915, baseType: !1456, size: 64, align: 64, offset: 1472)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1621, file: !14, line: 3917, baseType: !891, size: 32, align: 32, offset: 1536)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1611, file: !14, line: 3926, baseType: !922, size: 64, align: 64, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !953, file: !14, line: 3564, baseType: !1643, size: 64, align: 64, offset: 1344)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64, align: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!891, !1044, !1188, !1332, !1334}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !953, file: !14, line: 3566, baseType: !1647, size: 64, align: 64, offset: 1408)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!891, !1044, !889, !1334, !1188}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !953, file: !14, line: 3567, baseType: !1041, size: 64, align: 64, offset: 1472)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !953, file: !14, line: 3576, baseType: !1652, size: 64, align: 64, offset: 1536)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64, align: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!891, !1044, !1332}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !953, file: !14, line: 3577, baseType: !1656, size: 64, align: 64, offset: 1600)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64, align: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!891, !1044, !1188}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !953, file: !14, line: 3584, baseType: !1475, size: 64, align: 64, offset: 1664)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !953, file: !14, line: 3589, baseType: !1661, size: 64, align: 64, offset: 1728)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64, align: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !1044}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !953, file: !14, line: 3594, baseType: !891, size: 32, align: 32, offset: 1792)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !953, file: !14, line: 3600, baseType: !956, size: 64, align: 64, offset: 1856)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !953, file: !14, line: 3609, baseType: !1667, size: 64, align: 64, offset: 1920)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64, align: 64)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64, align: 64)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1670 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1671 = distinct !DIGlobalVariable(name: "ff_mp2float_decoder", scope: !0, file: !951, line: 59, type: !952, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp2float_decoder)
!1672 = distinct !DIGlobalVariable(name: "ff_mp3float_decoder", scope: !0, file: !951, line: 76, type: !952, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp3float_decoder)
!1673 = distinct !DIGlobalVariable(name: "ff_mp3adufloat_decoder", scope: !0, file: !951, line: 93, type: !952, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp3adufloat_decoder)
!1674 = distinct !DIGlobalVariable(name: "ff_mp3on4float_decoder", scope: !0, file: !951, line: 110, type: !952, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp3on4float_decoder)
!1675 = distinct !DIGlobalVariable(name: "initialized_tables", scope: !1676, file: !1677, line: 423, type: !891, isLocal: true, isDefinition: true, variable: i32* @decode_init.initialized_tables)
!1676 = distinct !DISubprogram(name: "decode_init", scope: !1677, file: !1677, line: 421, type: !1042, isLocal: true, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!1677 = !DIFile(filename: "libavcodec/mpegaudiodec_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1678 = !{}
!1679 = distinct !DIGlobalVariable(name: "scale_factor_modshift", scope: !0, file: !1677, line: 128, type: !1680, isLocal: true, isDefinition: true, variable: [64 x i16]* @scale_factor_modshift)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 1024, align: 16, elements: !1681)
!1681 = !{!1682}
!1682 = !DISubrange(count: 64)
!1683 = distinct !DIGlobalVariable(name: "scale_factor_mult", scope: !0, file: !1677, line: 130, type: !1684, isLocal: true, isDefinition: true, variable: [15 x [3 x i32]]* @scale_factor_mult)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 1440, align: 32, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DISubrange(count: 15)
!1687 = !DISubrange(count: 3)
!1688 = distinct !DIGlobalVariable(name: "mpa_huff_tables", scope: !0, file: !1689, line: 505, type: !1690, isLocal: true, isDefinition: true, variable: [16 x %struct.HuffTable]* @mpa_huff_tables)
!1689 = !DIFile(filename: "libavcodec/mpegaudiodectab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1691, size: 3072, align: 64, elements: !1700)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1692)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "HuffTable", file: !1689, line: 43, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HuffTable", file: !1689, line: 39, size: 192, align: 64, elements: !1694)
!1694 = !{!1695, !1696, !1697}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "xsize", scope: !1693, file: !1689, line: 40, baseType: !891, size: 32, align: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1693, file: !1689, line: 41, baseType: !1482, size: 64, align: 64, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "codes", scope: !1693, file: !1689, line: 42, baseType: !1698, size: 64, align: 64, offset: 128)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64, align: 64)
!1699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!1700 = !{!1701}
!1701 = !DISubrange(count: 16)
!1702 = distinct !DIGlobalVariable(name: "mpa_huffbits_1", scope: !0, file: !1689, line: 67, type: !1703, isLocal: true, isDefinition: true, variable: [4 x i8]* @mpa_huffbits_1)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 32, align: 8, elements: !940)
!1704 = distinct !DIGlobalVariable(name: "mpa_huffcodes_1", scope: !0, file: !1689, line: 63, type: !1705, isLocal: true, isDefinition: true, variable: [4 x i16]* @mpa_huffcodes_1)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 64, align: 16, elements: !940)
!1706 = distinct !DIGlobalVariable(name: "mpa_huffbits_2", scope: !0, file: !1689, line: 76, type: !1707, isLocal: true, isDefinition: true, variable: [9 x i8]* @mpa_huffbits_2)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 72, align: 8, elements: !1708)
!1708 = !{!1709}
!1709 = !DISubrange(count: 9)
!1710 = distinct !DIGlobalVariable(name: "mpa_huffcodes_2", scope: !0, file: !1689, line: 71, type: !1711, isLocal: true, isDefinition: true, variable: [9 x i16]* @mpa_huffcodes_2)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 144, align: 16, elements: !1708)
!1712 = distinct !DIGlobalVariable(name: "mpa_huffbits_3", scope: !0, file: !1689, line: 86, type: !1707, isLocal: true, isDefinition: true, variable: [9 x i8]* @mpa_huffbits_3)
!1713 = distinct !DIGlobalVariable(name: "mpa_huffcodes_3", scope: !0, file: !1689, line: 81, type: !1711, isLocal: true, isDefinition: true, variable: [9 x i16]* @mpa_huffcodes_3)
!1714 = distinct !DIGlobalVariable(name: "mpa_huffbits_5", scope: !0, file: !1689, line: 96, type: !1715, isLocal: true, isDefinition: true, variable: [16 x i8]* @mpa_huffbits_5)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 128, align: 8, elements: !1700)
!1716 = distinct !DIGlobalVariable(name: "mpa_huffcodes_5", scope: !0, file: !1689, line: 91, type: !1717, isLocal: true, isDefinition: true, variable: [16 x i16]* @mpa_huffcodes_5)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 256, align: 16, elements: !1700)
!1718 = distinct !DIGlobalVariable(name: "mpa_huffbits_6", scope: !0, file: !1689, line: 106, type: !1715, isLocal: true, isDefinition: true, variable: [16 x i8]* @mpa_huffbits_6)
!1719 = distinct !DIGlobalVariable(name: "mpa_huffcodes_6", scope: !0, file: !1689, line: 101, type: !1717, isLocal: true, isDefinition: true, variable: [16 x i16]* @mpa_huffcodes_6)
!1720 = distinct !DIGlobalVariable(name: "mpa_huffbits_7", scope: !0, file: !1689, line: 119, type: !1721, isLocal: true, isDefinition: true, variable: [36 x i8]* @mpa_huffbits_7)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 288, align: 8, elements: !1722)
!1722 = !{!1723}
!1723 = !DISubrange(count: 36)
!1724 = distinct !DIGlobalVariable(name: "mpa_huffcodes_7", scope: !0, file: !1689, line: 111, type: !1725, isLocal: true, isDefinition: true, variable: [36 x i16]* @mpa_huffcodes_7)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 576, align: 16, elements: !1722)
!1726 = distinct !DIGlobalVariable(name: "mpa_huffbits_8", scope: !0, file: !1689, line: 135, type: !1721, isLocal: true, isDefinition: true, variable: [36 x i8]* @mpa_huffbits_8)
!1727 = distinct !DIGlobalVariable(name: "mpa_huffcodes_8", scope: !0, file: !1689, line: 127, type: !1725, isLocal: true, isDefinition: true, variable: [36 x i16]* @mpa_huffcodes_8)
!1728 = distinct !DIGlobalVariable(name: "mpa_huffbits_9", scope: !0, file: !1689, line: 151, type: !1721, isLocal: true, isDefinition: true, variable: [36 x i8]* @mpa_huffbits_9)
!1729 = distinct !DIGlobalVariable(name: "mpa_huffcodes_9", scope: !0, file: !1689, line: 143, type: !1725, isLocal: true, isDefinition: true, variable: [36 x i16]* @mpa_huffcodes_9)
!1730 = distinct !DIGlobalVariable(name: "mpa_huffbits_10", scope: !0, file: !1689, line: 170, type: !1731, isLocal: true, isDefinition: true, variable: [64 x i8]* @mpa_huffbits_10)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 512, align: 8, elements: !1681)
!1732 = distinct !DIGlobalVariable(name: "mpa_huffcodes_10", scope: !0, file: !1689, line: 159, type: !1733, isLocal: true, isDefinition: true, variable: [64 x i16]* @mpa_huffcodes_10)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 1024, align: 16, elements: !1681)
!1734 = distinct !DIGlobalVariable(name: "mpa_huffbits_11", scope: !0, file: !1689, line: 192, type: !1731, isLocal: true, isDefinition: true, variable: [64 x i8]* @mpa_huffbits_11)
!1735 = distinct !DIGlobalVariable(name: "mpa_huffcodes_11", scope: !0, file: !1689, line: 181, type: !1733, isLocal: true, isDefinition: true, variable: [64 x i16]* @mpa_huffcodes_11)
!1736 = distinct !DIGlobalVariable(name: "mpa_huffbits_12", scope: !0, file: !1689, line: 214, type: !1731, isLocal: true, isDefinition: true, variable: [64 x i8]* @mpa_huffbits_12)
!1737 = distinct !DIGlobalVariable(name: "mpa_huffcodes_12", scope: !0, file: !1689, line: 203, type: !1733, isLocal: true, isDefinition: true, variable: [64 x i16]* @mpa_huffcodes_12)
!1738 = distinct !DIGlobalVariable(name: "mpa_huffbits_13", scope: !0, file: !1689, line: 260, type: !1739, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_13)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 2048, align: 8, elements: !1740)
!1740 = !{!1741}
!1741 = !DISubrange(count: 256)
!1742 = distinct !DIGlobalVariable(name: "mpa_huffcodes_13", scope: !0, file: !1689, line: 225, type: !1743, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_13)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 4096, align: 16, elements: !1740)
!1744 = distinct !DIGlobalVariable(name: "mpa_huffbits_15", scope: !0, file: !1689, line: 330, type: !1739, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_15)
!1745 = distinct !DIGlobalVariable(name: "mpa_huffcodes_15", scope: !0, file: !1689, line: 295, type: !1743, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_15)
!1746 = distinct !DIGlobalVariable(name: "mpa_huffbits_16", scope: !0, file: !1689, line: 400, type: !1739, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_16)
!1747 = distinct !DIGlobalVariable(name: "mpa_huffcodes_16", scope: !0, file: !1689, line: 365, type: !1743, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_16)
!1748 = distinct !DIGlobalVariable(name: "mpa_huffbits_24", scope: !0, file: !1689, line: 470, type: !1739, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_24)
!1749 = distinct !DIGlobalVariable(name: "mpa_huffcodes_24", scope: !0, file: !1689, line: 435, type: !1743, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_24)
!1750 = distinct !DIGlobalVariable(name: "huff_vlc_tables", scope: !0, file: !1677, line: 100, type: !1751, isLocal: true, isDefinition: true, variable: [3746 x [2 x i16]]* @huff_vlc_tables)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 119872, align: 16, elements: !1754)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !900, line: 37, baseType: !1753)
!1753 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1754 = !{!1755, !937}
!1755 = !DISubrange(count: 3746)
!1756 = distinct !DIGlobalVariable(name: "huff_vlc", scope: !0, file: !1677, line: 99, type: !1757, isLocal: true, isDefinition: true, variable: [16 x %struct.VLC]* @huff_vlc)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1758, size: 3072, align: 64, elements: !1700)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1759, line: 30, baseType: !1760)
!1759 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1759, line: 26, size: 192, align: 64, elements: !1761)
!1761 = !{!1762, !1763, !1766, !1767}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1760, file: !1759, line: 27, baseType: !891, size: 32, align: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1760, file: !1759, line: 28, baseType: !1764, size: 64, align: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64, align: 64)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 32, align: 16, elements: !936)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1760, file: !1759, line: 29, baseType: !891, size: 32, align: 32, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1760, file: !1759, line: 29, baseType: !891, size: 32, align: 32, offset: 160)
!1768 = distinct !DIGlobalVariable(name: "huff_vlc_tables_sizes", scope: !0, file: !1677, line: 104, type: !1769, isLocal: true, isDefinition: true, variable: [16 x i32]* @huff_vlc_tables_sizes)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 512, align: 32, elements: !1700)
!1770 = distinct !DIGlobalVariable(name: "huff_quad_vlc_tables", scope: !0, file: !1677, line: 109, type: !1771, isLocal: true, isDefinition: true, variable: [144 x [2 x i16]]* @huff_quad_vlc_tables)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 4608, align: 16, elements: !1772)
!1772 = !{!1773, !937}
!1773 = !DISubrange(count: 144)
!1774 = distinct !DIGlobalVariable(name: "huff_quad_vlc", scope: !0, file: !1677, line: 108, type: !1775, isLocal: true, isDefinition: true, variable: [2 x %struct.VLC]* @huff_quad_vlc)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1758, size: 384, align: 64, elements: !936)
!1776 = distinct !DIGlobalVariable(name: "huff_quad_vlc_tables_sizes", scope: !0, file: !1677, line: 110, type: !1777, isLocal: true, isDefinition: true, variable: [2 x i32]* @huff_quad_vlc_tables_sizes)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 64, align: 32, elements: !936)
!1778 = distinct !DIGlobalVariable(name: "mpa_quad_bits", scope: !0, file: !1689, line: 566, type: !1779, isLocal: true, isDefinition: true, variable: [2 x [16 x i8]]* @mpa_quad_bits)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 256, align: 8, elements: !1780)
!1780 = !{!937, !1701}
!1781 = distinct !DIGlobalVariable(name: "mpa_quad_codes", scope: !0, file: !1689, line: 561, type: !1779, isLocal: true, isDefinition: true, variable: [2 x [16 x i8]]* @mpa_quad_codes)
!1782 = distinct !DIGlobalVariable(name: "band_index_long", scope: !0, file: !1677, line: 112, type: !1783, isLocal: true, isDefinition: true, variable: [9 x [23 x i16]]* @band_index_long)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 3312, align: 16, elements: !1784)
!1784 = !{!1709, !1785}
!1785 = !DISubrange(count: 23)
!1786 = distinct !DIGlobalVariable(name: "band_size_long", scope: !0, file: !1689, line: 572, type: !1787, isLocal: true, isDefinition: true, variable: [9 x [22 x i8]]* @band_size_long)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 1584, align: 8, elements: !1788)
!1788 = !{!1709, !1789}
!1789 = !DISubrange(count: 22)
!1790 = distinct !DIGlobalVariable(name: "exp2_lut", scope: !1791, file: !1792, line: 48, type: !1795, isLocal: true, isDefinition: true, variable: [4 x double]* @mpegaudio_tableinit.exp2_lut)
!1791 = distinct !DISubprogram(name: "mpegaudio_tableinit", scope: !1792, file: !1792, line: 45, type: !1793, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!1792 = !DIFile(filename: "libavcodec/mpegaudio_tablegen.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null}
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1796, size: 256, align: 64, elements: !940)
!1796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!1797 = distinct !DIGlobalVariable(name: "pow43_lut", scope: !1791, file: !1792, line: 54, type: !1798, isLocal: true, isDefinition: true, variable: [16 x double]* @mpegaudio_tableinit.pow43_lut)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 1024, align: 64, elements: !1700)
!1799 = distinct !DIGlobalVariable(name: "table_4_3_value", scope: !0, file: !1792, line: 36, type: !1800, isLocal: true, isDefinition: true, variable: [32828 x i32]* @table_4_3_value)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 1050496, align: 32, elements: !1801)
!1801 = !{!1802}
!1802 = !DISubrange(count: 32828)
!1803 = distinct !DIGlobalVariable(name: "table_4_3_exp", scope: !0, file: !1792, line: 35, type: !1804, isLocal: true, isDefinition: true, variable: [32828 x i8]* @table_4_3_exp)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 262624, align: 8, elements: !1801)
!1805 = distinct !DIGlobalVariable(name: "expval_table_fixed", scope: !0, file: !1792, line: 38, type: !1806, isLocal: true, isDefinition: true, variable: [512 x [16 x i32]]* @expval_table_fixed)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 262144, align: 32, elements: !1807)
!1807 = !{!1808, !1701}
!1808 = !DISubrange(count: 512)
!1809 = distinct !DIGlobalVariable(name: "expval_table_float", scope: !0, file: !1792, line: 40, type: !1810, isLocal: true, isDefinition: true, variable: [512 x [16 x float]]* @expval_table_float)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 262144, align: 32, elements: !1807)
!1811 = distinct !DIGlobalVariable(name: "exp_table_fixed", scope: !0, file: !1792, line: 37, type: !1812, isLocal: true, isDefinition: true, variable: [512 x i32]* @exp_table_fixed)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 16384, align: 32, elements: !1813)
!1813 = !{!1808}
!1814 = distinct !DIGlobalVariable(name: "exp_table_float", scope: !0, file: !1792, line: 39, type: !1815, isLocal: true, isDefinition: true, variable: [512 x float]* @exp_table_float)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 16384, align: 32, elements: !1813)
!1816 = distinct !DIGlobalVariable(name: "division_tabs", scope: !0, file: !1677, line: 123, type: !1817, isLocal: true, isDefinition: true, variable: [4 x i16*]* @division_tabs)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1818, size: 256, align: 64, elements: !940)
!1818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1819)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1820 = distinct !DIGlobalVariable(name: "division_tab3", scope: !0, file: !1677, line: 119, type: !1821, isLocal: true, isDefinition: true, variable: [64 x i16]* @division_tab3)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 1024, align: 16, elements: !1681)
!1822 = distinct !DIGlobalVariable(name: "division_tab5", scope: !0, file: !1677, line: 120, type: !1823, isLocal: true, isDefinition: true, variable: [256 x i16]* @division_tab5)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 4096, align: 16, elements: !1740)
!1824 = distinct !DIGlobalVariable(name: "division_tab9", scope: !0, file: !1677, line: 121, type: !1825, isLocal: true, isDefinition: true, variable: [2048 x i16]* @division_tab9)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 32768, align: 16, elements: !1826)
!1826 = !{!1827}
!1827 = !DISubrange(count: 2048)
!1828 = distinct !DIGlobalVariable(name: "is_table", scope: !0, file: !1677, line: 115, type: !1829, isLocal: true, isDefinition: true, variable: [2 x [16 x float]]* @is_table)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 1024, align: 32, elements: !1780)
!1830 = distinct !DIGlobalVariable(name: "is_table_lsf", scope: !0, file: !1677, line: 116, type: !1831, isLocal: true, isDefinition: true, variable: [2 x [2 x [16 x float]]]* @is_table_lsf)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 2048, align: 32, elements: !1832)
!1832 = !{!937, !937, !1701}
!1833 = distinct !DIGlobalVariable(name: "ci_table", scope: !0, file: !1689, line: 611, type: !1834, isLocal: true, isDefinition: true, variable: [8 x float]* @ci_table)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 256, align: 32, elements: !1073)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!1836 = distinct !DIGlobalVariable(name: "csa_table", scope: !0, file: !1677, line: 117, type: !1837, isLocal: true, isDefinition: true, variable: [8 x [4 x float]]* @csa_table)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 1024, align: 32, elements: !1838)
!1838 = !{!1074, !941}
!1839 = distinct !DIGlobalVariable(name: "scale_factor_mult2", scope: !0, file: !1677, line: 136, type: !1840, isLocal: true, isDefinition: true, variable: [3 x [3 x i32]]* @scale_factor_mult2)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 288, align: 32, elements: !1842)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!1842 = !{!1687, !1687}
!1843 = distinct !DIGlobalVariable(name: "slen_table", scope: !0, file: !1689, line: 46, type: !1779, isLocal: true, isDefinition: true, variable: [2 x [16 x i8]]* @slen_table)
!1844 = distinct !DIGlobalVariable(name: "lsf_nsf_table", scope: !0, file: !1689, line: 52, type: !1845, isLocal: true, isDefinition: true, variable: [6 x [3 x [4 x i8]]]* @lsf_nsf_table)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 576, align: 8, elements: !1846)
!1846 = !{!1847, !1687, !941}
!1847 = !DISubrange(count: 6)
!1848 = distinct !DIGlobalVariable(name: "mpa_pretab", scope: !0, file: !1689, line: 605, type: !1849, isLocal: true, isDefinition: true, variable: [2 x [22 x i8]]* @mpa_pretab)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 352, align: 8, elements: !1850)
!1850 = !{!937, !1789}
!1851 = distinct !DIGlobalVariable(name: "band_size_short", scope: !0, file: !1689, line: 593, type: !1852, isLocal: true, isDefinition: true, variable: [9 x [13 x i8]]* @band_size_short)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 936, align: 8, elements: !1853)
!1853 = !{!1709, !1854}
!1854 = !DISubrange(count: 13)
!1855 = distinct !DIGlobalVariable(name: "idxtab", scope: !1856, file: !1677, line: 974, type: !1769, isLocal: true, isDefinition: true, variable: [16 x i32]* @huffman_decode.idxtab)
!1856 = distinct !DISubprogram(name: "huffman_decode", scope: !1677, file: !1677, line: 852, type: !1857, isLocal: true, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!891, !1859, !2014, !1819, !891}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64, align: 64)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPADecodeContext", file: !1677, line: 91, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPADecodeContext", file: !1677, line: 70, size: 264448, align: 256, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1877, !1878, !1879, !1880, !1890, !1891, !1896, !1898, !1902, !1906, !1936, !1937, !1938, !1939, !1940, !1972, !2013}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "error_protection", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate_index", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 224)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "mode_ext", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 256)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "lsf", scope: !1861, file: !1677, line: 71, baseType: !891, size: 32, align: 32, offset: 288)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "last_buf", scope: !1861, file: !1677, line: 72, baseType: !1874, size: 8384, align: 8, offset: 320)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 8384, align: 8, elements: !1875)
!1875 = !{!1876}
!1876 = !DISubrange(count: 1048)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "last_buf_size", scope: !1861, file: !1677, line: 73, baseType: !891, size: 32, align: 32, offset: 8704)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "extrasize", scope: !1861, file: !1677, line: 74, baseType: !891, size: 32, align: 32, offset: 8736)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "free_format_next_header", scope: !1861, file: !1677, line: 76, baseType: !899, size: 32, align: 32, offset: 8768)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1861, file: !1677, line: 77, baseType: !1881, size: 256, align: 64, offset: 8832)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1882, line: 70, baseType: !1883)
!1882 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1882, line: 61, size: 256, align: 64, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1883, file: !1882, line: 62, baseType: !1482, size: 64, align: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1883, file: !1882, line: 62, baseType: !1482, size: 64, align: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1883, file: !1882, line: 67, baseType: !891, size: 32, align: 32, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1883, file: !1882, line: 68, baseType: !891, size: 32, align: 32, offset: 160)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1883, file: !1882, line: 69, baseType: !891, size: 32, align: 32, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "in_gb", scope: !1861, file: !1677, line: 78, baseType: !1881, size: 256, align: 64, offset: 9088)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "synth_buf", scope: !1861, file: !1677, line: 79, baseType: !1892, size: 65536, align: 32, offset: 9472)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 65536, align: 32, elements: !1894)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPA_INT", file: !919, line: 65, baseType: !888)
!1894 = !{!937, !1895}
!1895 = !DISubrange(count: 1024)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "synth_buf_offset", scope: !1861, file: !1677, line: 80, baseType: !1897, size: 64, align: 32, offset: 75008)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 64, align: 32, elements: !936)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sb_samples", scope: !1861, file: !1677, line: 81, baseType: !1899, size: 73728, align: 32, offset: 75264)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 73728, align: 32, elements: !1900)
!1900 = !{!937, !1723, !1901}
!1901 = !DISubrange(count: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_buf", scope: !1861, file: !1677, line: 82, baseType: !1903, size: 36864, align: 32, offset: 148992)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 36864, align: 32, elements: !1904)
!1904 = !{!937, !1905}
!1905 = !DISubrange(count: 576)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "granules", scope: !1861, file: !1677, line: 83, baseType: !1907, size: 77824, align: 128, offset: 185856)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 77824, align: 128, elements: !1935)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "GranuleDef", file: !1677, line: 68, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GranuleDef", file: !1677, line: 51, size: 19456, align: 128, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1932}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "scfsi", scope: !1909, file: !1677, line: 52, baseType: !920, size: 8, align: 8)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "part2_3_length", scope: !1909, file: !1677, line: 53, baseType: !891, size: 32, align: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "big_values", scope: !1909, file: !1677, line: 54, baseType: !891, size: 32, align: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "global_gain", scope: !1909, file: !1677, line: 55, baseType: !891, size: 32, align: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "scalefac_compress", scope: !1909, file: !1677, line: 56, baseType: !891, size: 32, align: 32, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "block_type", scope: !1909, file: !1677, line: 57, baseType: !920, size: 8, align: 8, offset: 160)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "switch_point", scope: !1909, file: !1677, line: 58, baseType: !920, size: 8, align: 8, offset: 168)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "table_select", scope: !1909, file: !1677, line: 59, baseType: !1919, size: 96, align: 32, offset: 192)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 96, align: 32, elements: !1920)
!1920 = !{!1687}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "subblock_gain", scope: !1909, file: !1677, line: 60, baseType: !1919, size: 96, align: 32, offset: 288)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "scalefac_scale", scope: !1909, file: !1677, line: 61, baseType: !920, size: 8, align: 8, offset: 384)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "count1table_select", scope: !1909, file: !1677, line: 62, baseType: !920, size: 8, align: 8, offset: 392)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "region_size", scope: !1909, file: !1677, line: 63, baseType: !1919, size: 96, align: 32, offset: 416)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "preflag", scope: !1909, file: !1677, line: 64, baseType: !891, size: 32, align: 32, offset: 512)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "short_start", scope: !1909, file: !1677, line: 65, baseType: !891, size: 32, align: 32, offset: 544)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "long_end", scope: !1909, file: !1677, line: 65, baseType: !891, size: 32, align: 32, offset: 576)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factors", scope: !1909, file: !1677, line: 66, baseType: !1929, size: 320, align: 8, offset: 608)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 320, align: 8, elements: !1930)
!1930 = !{!1931}
!1931 = !DISubrange(count: 40)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "sb_hybrid", scope: !1909, file: !1677, line: 67, baseType: !1933, size: 18432, align: 32, offset: 1024)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 18432, align: 32, elements: !1934)
!1934 = !{!1905}
!1935 = !{!937, !937}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "adu_mode", scope: !1861, file: !1677, line: 84, baseType: !891, size: 32, align: 32, offset: 263680)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "dither_state", scope: !1861, file: !1677, line: 85, baseType: !891, size: 32, align: 32, offset: 263712)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1861, file: !1677, line: 86, baseType: !891, size: 32, align: 32, offset: 263744)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1861, file: !1677, line: 87, baseType: !1044, size: 64, align: 64, offset: 263808)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "mpadsp", scope: !1861, file: !1677, line: 88, baseType: !1941, size: 384, align: 64, offset: 263872)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPADSPContext", file: !1942, line: 41, baseType: !1943)
!1942 = !DIFile(filename: "libavcodec/mpegaudiodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPADSPContext", file: !1942, line: 27, size: 384, align: 64, elements: !1944)
!1944 = !{!1945, !1951, !1955, !1960, !1964, !1968}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_float", scope: !1943, file: !1942, line: 28, baseType: !1946, size: 64, align: 64)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64, align: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !1949, !1949, !1334, !1949, !1950}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64, align: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1158, line: 149, baseType: !923)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_fixed", scope: !1943, file: !1942, line: 31, baseType: !1952, size: 64, align: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64, align: 64)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{null, !924, !924, !1334, !1819, !1950}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "dct32_float", scope: !1943, file: !1942, line: 34, baseType: !1956, size: 64, align: 64, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64, align: 64)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{null, !1949, !1959}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64, align: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "dct32_fixed", scope: !1943, file: !1942, line: 35, baseType: !1961, size: 64, align: 64, offset: 192)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64, align: 64)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{null, !1334, !976}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "imdct36_blocks_float", scope: !1943, file: !1942, line: 37, baseType: !1965, size: 64, align: 64, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64, align: 64)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{null, !1949, !1949, !1949, !891, !891, !891}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "imdct36_blocks_fixed", scope: !1943, file: !1942, line: 39, baseType: !1969, size: 64, align: 64, offset: 320)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64, align: 64)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !1334, !1334, !1334, !891, !891, !891}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1861, file: !1677, line: 89, baseType: !1973, size: 64, align: 64, offset: 264256)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64, align: 64)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1975, line: 192, baseType: !1976)
!1975 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1975, line: 24, size: 704, align: 64, elements: !1977)
!1977 = !{!1978, !1982, !1986, !1992, !1993, !1994, !1998, !1999, !2000, !2005, !2009}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1976, file: !1975, line: 38, baseType: !1979, size: 64, align: 64)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64, align: 64)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1949, !1959, !1959, !891}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1976, file: !1975, line: 54, baseType: !1983, size: 64, align: 64, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64, align: 64)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1949, !1959, !888, !891}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1976, file: !1975, line: 70, baseType: !1987, size: 64, align: 64, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64, align: 64)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{null, !1990, !1991, !890, !891}
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64, align: 64)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64, align: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1976, file: !1975, line: 85, baseType: !1983, size: 64, align: 64, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1976, file: !1975, line: 100, baseType: !1987, size: 64, align: 64, offset: 256)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1976, file: !1975, line: 119, baseType: !1995, size: 64, align: 64, offset: 320)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64, align: 64)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{null, !1949, !1959, !1959, !1959, !891}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1976, file: !1975, line: 137, baseType: !1995, size: 64, align: 64, offset: 384)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1976, file: !1975, line: 154, baseType: !1979, size: 64, align: 64, offset: 448)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1976, file: !1975, line: 164, baseType: !2001, size: 64, align: 64, offset: 512)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64, align: 64)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{null, !2004, !2004, !891}
!2004 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1949)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1976, file: !1975, line: 175, baseType: !2006, size: 64, align: 64, offset: 576)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64, align: 64)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!888, !1959, !1959, !891}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1976, file: !1975, line: 190, baseType: !2010, size: 64, align: 64, offset: 640)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64, align: 64)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{null, !1990, !1991, !1991, !891}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1861, file: !1677, line: 90, baseType: !1066, size: 64, align: 64, offset: 264320)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64, align: 64)
!2015 = distinct !DIGlobalVariable(name: "mpa_huff_data", scope: !0, file: !1689, line: 524, type: !2016, isLocal: true, isDefinition: true, variable: [32 x [2 x i8]]* @mpa_huff_data)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 512, align: 8, elements: !2017)
!2017 = !{!1901, !937}
!2018 = distinct !DIGlobalVariable(name: "mp3Frames", scope: !0, file: !1677, line: 1802, type: !2019, isLocal: true, isDefinition: true, variable: [8 x i8]* @mp3Frames)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 64, align: 8, elements: !1073)
!2020 = distinct !DIGlobalVariable(name: "chan_offset", scope: !0, file: !1677, line: 1805, type: !2021, isLocal: true, isDefinition: true, variable: [8 x [5 x i8]]* @chan_offset)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 320, align: 8, elements: !2022)
!2022 = !{!1074, !2023}
!2023 = !DISubrange(count: 5)
!2024 = distinct !DIGlobalVariable(name: "chan_layout", scope: !0, file: !1677, line: 1817, type: !2025, isLocal: true, isDefinition: true, variable: [8 x i16]* @chan_layout)
!2025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 128, align: 16, elements: !1073)
!2026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!2027 = !{i32 2, !"Dwarf Version", i32 4}
!2028 = !{i32 2, !"Debug Info Version", i32 3}
!2029 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2030 = !DILocalVariable(name: "avctx", arg: 1, scope: !1676, file: !1677, line: 421, type: !1044)
!2031 = !DIExpression()
!2032 = !DILocation(line: 421, column: 63, scope: !1676)
!2033 = !DILocalVariable(name: "s", scope: !1676, file: !1677, line: 424, type: !1859)
!2034 = !DILocation(line: 424, column: 23, scope: !1676)
!2035 = !DILocation(line: 424, column: 27, scope: !1676)
!2036 = !DILocation(line: 424, column: 34, scope: !1676)
!2037 = !DILocation(line: 426, column: 10, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !1676, file: !1677, line: 426, column: 9)
!2039 = !DILocation(line: 426, column: 9, scope: !1676)
!2040 = !DILocation(line: 427, column: 9, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !2038, file: !1677, line: 426, column: 30)
!2042 = !DILocation(line: 428, column: 28, scope: !2041)
!2043 = !DILocation(line: 429, column: 5, scope: !2041)
!2044 = !DILocation(line: 431, column: 16, scope: !1676)
!2045 = !DILocation(line: 431, column: 5, scope: !1676)
!2046 = !DILocation(line: 431, column: 8, scope: !1676)
!2047 = !DILocation(line: 431, column: 14, scope: !1676)
!2048 = !DILocation(line: 434, column: 38, scope: !1676)
!2049 = !DILocation(line: 434, column: 45, scope: !1676)
!2050 = !DILocation(line: 434, column: 51, scope: !1676)
!2051 = !DILocation(line: 434, column: 15, scope: !1676)
!2052 = !DILocation(line: 434, column: 5, scope: !1676)
!2053 = !DILocation(line: 434, column: 8, scope: !1676)
!2054 = !DILocation(line: 434, column: 13, scope: !1676)
!2055 = !DILocation(line: 435, column: 10, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !1676, file: !1677, line: 435, column: 9)
!2057 = !DILocation(line: 435, column: 13, scope: !2056)
!2058 = !DILocation(line: 435, column: 9, scope: !1676)
!2059 = !DILocation(line: 436, column: 9, scope: !2056)
!2060 = !DILocation(line: 439, column: 21, scope: !1676)
!2061 = !DILocation(line: 439, column: 24, scope: !1676)
!2062 = !DILocation(line: 439, column: 5, scope: !1676)
!2063 = !DILocation(line: 441, column: 9, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !1676, file: !1677, line: 441, column: 9)
!2065 = !DILocation(line: 441, column: 16, scope: !2064)
!2066 = !DILocation(line: 441, column: 35, scope: !2064)
!2067 = !DILocation(line: 441, column: 56, scope: !2064)
!2068 = !DILocation(line: 442, column: 9, scope: !2064)
!2069 = !DILocation(line: 442, column: 16, scope: !2064)
!2070 = !DILocation(line: 442, column: 25, scope: !2064)
!2071 = !DILocation(line: 441, column: 9, scope: !2072)
!2072 = !DILexicalBlockFile(scope: !1676, file: !1677, discriminator: 1)
!2073 = !DILocation(line: 443, column: 9, scope: !2064)
!2074 = !DILocation(line: 443, column: 16, scope: !2064)
!2075 = !DILocation(line: 443, column: 27, scope: !2064)
!2076 = !DILocation(line: 445, column: 9, scope: !2064)
!2077 = !DILocation(line: 445, column: 16, scope: !2064)
!2078 = !DILocation(line: 445, column: 27, scope: !2064)
!2079 = !DILocation(line: 446, column: 26, scope: !1676)
!2080 = !DILocation(line: 446, column: 33, scope: !1676)
!2081 = !DILocation(line: 446, column: 5, scope: !1676)
!2082 = !DILocation(line: 446, column: 8, scope: !1676)
!2083 = !DILocation(line: 446, column: 24, scope: !1676)
!2084 = !DILocation(line: 448, column: 9, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !1676, file: !1677, line: 448, column: 9)
!2086 = !DILocation(line: 448, column: 16, scope: !2085)
!2087 = !DILocation(line: 448, column: 25, scope: !2085)
!2088 = !DILocation(line: 448, column: 9, scope: !1676)
!2089 = !DILocation(line: 449, column: 9, scope: !2085)
!2090 = !DILocation(line: 449, column: 12, scope: !2085)
!2091 = !DILocation(line: 449, column: 21, scope: !2085)
!2092 = !DILocation(line: 451, column: 5, scope: !1676)
!2093 = !DILocation(line: 452, column: 1, scope: !1676)
!2094 = distinct !DISubprogram(name: "decode_frame", scope: !1677, file: !1677, line: 1648, type: !1648, isLocal: true, isDefinition: true, scopeLine: 1650, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2095 = !DILocalVariable(name: "x", arg: 1, scope: !2096, file: !2097, line: 66, type: !899)
!2096 = distinct !DISubprogram(name: "av_bswap32", scope: !2097, file: !2097, line: 66, type: !2098, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2097 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!899, !899}
!2100 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !2101)
!2101 = distinct !DILocation(line: 1668, column: 22, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2094, file: !1677, line: 1668, column: 9)
!2103 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !2104)
!2104 = distinct !DILocation(line: 1667, column: 14, scope: !2094)
!2105 = !DILocalVariable(name: "avctx", arg: 1, scope: !2094, file: !1677, line: 1648, type: !1044)
!2106 = !DILocation(line: 1648, column: 42, scope: !2094)
!2107 = !DILocalVariable(name: "data", arg: 2, scope: !2094, file: !1677, line: 1648, type: !889)
!2108 = !DILocation(line: 1648, column: 55, scope: !2094)
!2109 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2094, file: !1677, line: 1648, type: !1334)
!2110 = !DILocation(line: 1648, column: 66, scope: !2094)
!2111 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2094, file: !1677, line: 1649, type: !1188)
!2112 = !DILocation(line: 1649, column: 35, scope: !2094)
!2113 = !DILocalVariable(name: "buf", scope: !2094, file: !1677, line: 1651, type: !1482)
!2114 = !DILocation(line: 1651, column: 20, scope: !2094)
!2115 = !DILocation(line: 1651, column: 26, scope: !2094)
!2116 = !DILocation(line: 1651, column: 33, scope: !2094)
!2117 = !DILocalVariable(name: "buf_size", scope: !2094, file: !1677, line: 1652, type: !891)
!2118 = !DILocation(line: 1652, column: 9, scope: !2094)
!2119 = !DILocation(line: 1652, column: 20, scope: !2094)
!2120 = !DILocation(line: 1652, column: 27, scope: !2094)
!2121 = !DILocalVariable(name: "s", scope: !2094, file: !1677, line: 1653, type: !1859)
!2122 = !DILocation(line: 1653, column: 23, scope: !2094)
!2123 = !DILocation(line: 1653, column: 27, scope: !2094)
!2124 = !DILocation(line: 1653, column: 34, scope: !2094)
!2125 = !DILocalVariable(name: "header", scope: !2094, file: !1677, line: 1654, type: !899)
!2126 = !DILocation(line: 1654, column: 14, scope: !2094)
!2127 = !DILocalVariable(name: "ret", scope: !2094, file: !1677, line: 1655, type: !891)
!2128 = !DILocation(line: 1655, column: 9, scope: !2094)
!2129 = !DILocalVariable(name: "skipped", scope: !2094, file: !1677, line: 1657, type: !891)
!2130 = !DILocation(line: 1657, column: 9, scope: !2094)
!2131 = !DILocation(line: 1658, column: 5, scope: !2094)
!2132 = !DILocation(line: 1658, column: 11, scope: !2133)
!2133 = !DILexicalBlockFile(scope: !2094, file: !1677, discriminator: 1)
!2134 = !DILocation(line: 1658, column: 20, scope: !2133)
!2135 = !DILocation(line: 1658, column: 25, scope: !2136)
!2136 = !DILexicalBlockFile(scope: !2094, file: !1677, discriminator: 2)
!2137 = !DILocation(line: 1658, column: 24, scope: !2136)
!2138 = !DILocation(line: 1658, column: 23, scope: !2136)
!2139 = !DILocation(line: 1658, column: 5, scope: !2140)
!2140 = !DILexicalBlockFile(scope: !2094, file: !1677, discriminator: 3)
!2141 = !DILocation(line: 1659, column: 12, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2094, file: !1677, line: 1658, column: 29)
!2143 = !DILocation(line: 1660, column: 17, scope: !2142)
!2144 = !DILocation(line: 1661, column: 16, scope: !2142)
!2145 = !DILocation(line: 1658, column: 5, scope: !2146)
!2146 = !DILexicalBlockFile(scope: !2094, file: !1677, discriminator: 4)
!2147 = distinct !{!2147, !2131}
!2148 = !DILocation(line: 1664, column: 9, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2094, file: !1677, line: 1664, column: 9)
!2150 = !DILocation(line: 1664, column: 18, scope: !2149)
!2151 = !DILocation(line: 1664, column: 9, scope: !2094)
!2152 = !DILocation(line: 1665, column: 9, scope: !2149)
!2153 = !DILocation(line: 1667, column: 57, scope: !2094)
!2154 = !DILocation(line: 1667, column: 64, scope: !2094)
!2155 = !DILocation(line: 1667, column: 14, scope: !2094)
!2156 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !2104)
!2157 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !2104)
!2158 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !2104)
!2159 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !2104)
!2160 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !2104)
!2161 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !2104)
!2162 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !2104)
!2163 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !2104)
!2164 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !2104)
!2165 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !2104)
!2166 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !2104)
!2167 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !2104)
!2168 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !2104)
!2169 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !2104)
!2170 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !2104)
!2171 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !2104)
!2172 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !2104)
!2173 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !2104)
!2174 = !DILocation(line: 1667, column: 12, scope: !2094)
!2175 = !DILocation(line: 1668, column: 9, scope: !2102)
!2176 = !DILocation(line: 1668, column: 15, scope: !2102)
!2177 = !DILocation(line: 1668, column: 74, scope: !2102)
!2178 = !DILocation(line: 1668, column: 22, scope: !2102)
!2179 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !2101)
!2180 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !2101)
!2181 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !2101)
!2182 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !2101)
!2183 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !2101)
!2184 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !2101)
!2185 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !2101)
!2186 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !2101)
!2187 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !2101)
!2188 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !2101)
!2189 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !2101)
!2190 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !2101)
!2191 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !2101)
!2192 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !2101)
!2193 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !2101)
!2194 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !2101)
!2195 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !2101)
!2196 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !2101)
!2197 = !DILocation(line: 1668, column: 77, scope: !2102)
!2198 = !DILocation(line: 1668, column: 19, scope: !2102)
!2199 = !DILocation(line: 1668, column: 9, scope: !2094)
!2200 = !DILocation(line: 1669, column: 16, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !2102, file: !1677, line: 1668, column: 82)
!2202 = !DILocation(line: 1669, column: 9, scope: !2201)
!2203 = !DILocation(line: 1670, column: 16, scope: !2201)
!2204 = !DILocation(line: 1670, column: 27, scope: !2201)
!2205 = !DILocation(line: 1670, column: 25, scope: !2201)
!2206 = !DILocation(line: 1670, column: 9, scope: !2201)
!2207 = !DILocation(line: 1672, column: 61, scope: !2094)
!2208 = !DILocation(line: 1672, column: 42, scope: !2094)
!2209 = !DILocation(line: 1672, column: 64, scope: !2094)
!2210 = !DILocation(line: 1672, column: 11, scope: !2094)
!2211 = !DILocation(line: 1672, column: 9, scope: !2094)
!2212 = !DILocation(line: 1673, column: 9, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2094, file: !1677, line: 1673, column: 9)
!2214 = !DILocation(line: 1673, column: 13, scope: !2213)
!2215 = !DILocation(line: 1673, column: 9, scope: !2094)
!2216 = !DILocation(line: 1674, column: 16, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2213, file: !1677, line: 1673, column: 18)
!2218 = !DILocation(line: 1674, column: 9, scope: !2217)
!2219 = !DILocation(line: 1675, column: 9, scope: !2217)
!2220 = !DILocation(line: 1676, column: 16, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2213, file: !1677, line: 1676, column: 16)
!2222 = !DILocation(line: 1676, column: 20, scope: !2221)
!2223 = !DILocation(line: 1676, column: 16, scope: !2213)
!2224 = !DILocation(line: 1678, column: 9, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2221, file: !1677, line: 1676, column: 26)
!2226 = !DILocation(line: 1678, column: 12, scope: !2225)
!2227 = !DILocation(line: 1678, column: 23, scope: !2225)
!2228 = !DILocation(line: 1679, column: 9, scope: !2225)
!2229 = !DILocation(line: 1682, column: 23, scope: !2094)
!2230 = !DILocation(line: 1682, column: 26, scope: !2094)
!2231 = !DILocation(line: 1682, column: 5, scope: !2094)
!2232 = !DILocation(line: 1682, column: 12, scope: !2094)
!2233 = !DILocation(line: 1682, column: 21, scope: !2094)
!2234 = !DILocation(line: 1683, column: 29, scope: !2094)
!2235 = !DILocation(line: 1683, column: 32, scope: !2094)
!2236 = !DILocation(line: 1683, column: 44, scope: !2094)
!2237 = !DILocation(line: 1683, column: 5, scope: !2094)
!2238 = !DILocation(line: 1683, column: 12, scope: !2094)
!2239 = !DILocation(line: 1683, column: 27, scope: !2094)
!2240 = !DILocation(line: 1684, column: 10, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2094, file: !1677, line: 1684, column: 9)
!2242 = !DILocation(line: 1684, column: 17, scope: !2241)
!2243 = !DILocation(line: 1684, column: 9, scope: !2094)
!2244 = !DILocation(line: 1685, column: 27, scope: !2241)
!2245 = !DILocation(line: 1685, column: 30, scope: !2241)
!2246 = !DILocation(line: 1685, column: 9, scope: !2241)
!2247 = !DILocation(line: 1685, column: 16, scope: !2241)
!2248 = !DILocation(line: 1685, column: 25, scope: !2241)
!2249 = !DILocation(line: 1687, column: 9, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2094, file: !1677, line: 1687, column: 9)
!2251 = !DILocation(line: 1687, column: 12, scope: !2250)
!2252 = !DILocation(line: 1687, column: 23, scope: !2250)
!2253 = !DILocation(line: 1687, column: 9, scope: !2094)
!2254 = !DILocation(line: 1688, column: 16, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2250, file: !1677, line: 1687, column: 29)
!2256 = !DILocation(line: 1688, column: 9, scope: !2255)
!2257 = !DILocation(line: 1689, column: 9, scope: !2255)
!2258 = !DILocation(line: 1690, column: 16, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2250, file: !1677, line: 1690, column: 16)
!2260 = !DILocation(line: 1690, column: 19, scope: !2259)
!2261 = !DILocation(line: 1690, column: 32, scope: !2259)
!2262 = !DILocation(line: 1690, column: 30, scope: !2259)
!2263 = !DILocation(line: 1690, column: 16, scope: !2250)
!2264 = !DILocation(line: 1691, column: 16, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2259, file: !1677, line: 1690, column: 42)
!2266 = !DILocation(line: 1691, column: 9, scope: !2265)
!2267 = !DILocation(line: 1692, column: 19, scope: !2265)
!2268 = !DILocation(line: 1692, column: 22, scope: !2265)
!2269 = !DILocation(line: 1692, column: 17, scope: !2265)
!2270 = !DILocation(line: 1693, column: 5, scope: !2265)
!2271 = !DILocation(line: 1695, column: 16, scope: !2094)
!2272 = !DILocation(line: 1695, column: 5, scope: !2094)
!2273 = !DILocation(line: 1695, column: 8, scope: !2094)
!2274 = !DILocation(line: 1695, column: 14, scope: !2094)
!2275 = !DILocation(line: 1697, column: 27, scope: !2094)
!2276 = !DILocation(line: 1697, column: 35, scope: !2094)
!2277 = !DILocation(line: 1697, column: 40, scope: !2094)
!2278 = !DILocation(line: 1697, column: 11, scope: !2094)
!2279 = !DILocation(line: 1697, column: 9, scope: !2094)
!2280 = !DILocation(line: 1698, column: 9, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2094, file: !1677, line: 1698, column: 9)
!2282 = !DILocation(line: 1698, column: 13, scope: !2281)
!2283 = !DILocation(line: 1698, column: 9, scope: !2094)
!2284 = !DILocation(line: 1699, column: 32, scope: !2285)
!2285 = distinct !DILexicalBlock(scope: !2281, file: !1677, line: 1698, column: 19)
!2286 = !DILocation(line: 1699, column: 39, scope: !2285)
!2287 = !DILocation(line: 1699, column: 9, scope: !2285)
!2288 = !DILocation(line: 1699, column: 12, scope: !2285)
!2289 = !DILocation(line: 1699, column: 19, scope: !2285)
!2290 = !DILocation(line: 1699, column: 30, scope: !2285)
!2291 = !DILocation(line: 1700, column: 10, scope: !2285)
!2292 = !DILocation(line: 1700, column: 24, scope: !2285)
!2293 = !DILocation(line: 1701, column: 30, scope: !2285)
!2294 = !DILocation(line: 1701, column: 33, scope: !2285)
!2295 = !DILocation(line: 1701, column: 9, scope: !2285)
!2296 = !DILocation(line: 1701, column: 16, scope: !2285)
!2297 = !DILocation(line: 1701, column: 28, scope: !2285)
!2298 = !DILocation(line: 1703, column: 5, scope: !2285)
!2299 = !DILocation(line: 1704, column: 16, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2281, file: !1677, line: 1703, column: 12)
!2301 = !DILocation(line: 1704, column: 9, scope: !2300)
!2302 = !DILocation(line: 1710, column: 10, scope: !2300)
!2303 = !DILocation(line: 1710, column: 24, scope: !2300)
!2304 = !DILocation(line: 1711, column: 13, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2300, file: !1677, line: 1711, column: 13)
!2306 = !DILocation(line: 1711, column: 25, scope: !2305)
!2307 = !DILocation(line: 1711, column: 32, scope: !2305)
!2308 = !DILocation(line: 1711, column: 22, scope: !2305)
!2309 = !DILocation(line: 1711, column: 37, scope: !2305)
!2310 = !DILocation(line: 1711, column: 40, scope: !2311)
!2311 = !DILexicalBlockFile(scope: !2305, file: !1677, discriminator: 1)
!2312 = !DILocation(line: 1711, column: 44, scope: !2311)
!2313 = !DILocation(line: 1711, column: 13, scope: !2311)
!2314 = !DILocation(line: 1712, column: 20, scope: !2305)
!2315 = !DILocation(line: 1712, column: 13, scope: !2305)
!2316 = !DILocation(line: 1714, column: 5, scope: !2094)
!2317 = !DILocation(line: 1714, column: 8, scope: !2094)
!2318 = !DILocation(line: 1714, column: 19, scope: !2094)
!2319 = !DILocation(line: 1715, column: 12, scope: !2094)
!2320 = !DILocation(line: 1715, column: 23, scope: !2094)
!2321 = !DILocation(line: 1715, column: 21, scope: !2094)
!2322 = !DILocation(line: 1715, column: 5, scope: !2094)
!2323 = !DILocation(line: 1716, column: 1, scope: !2094)
!2324 = distinct !DISubprogram(name: "decode_close", scope: !1677, file: !1677, line: 412, type: !1042, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2325 = !DILocalVariable(name: "avctx", arg: 1, scope: !2324, file: !1677, line: 412, type: !1044)
!2326 = !DILocation(line: 412, column: 64, scope: !2324)
!2327 = !DILocalVariable(name: "s", scope: !2324, file: !1677, line: 414, type: !1859)
!2328 = !DILocation(line: 414, column: 23, scope: !2324)
!2329 = !DILocation(line: 414, column: 27, scope: !2324)
!2330 = !DILocation(line: 414, column: 34, scope: !2324)
!2331 = !DILocation(line: 415, column: 15, scope: !2324)
!2332 = !DILocation(line: 415, column: 18, scope: !2324)
!2333 = !DILocation(line: 415, column: 14, scope: !2324)
!2334 = !DILocation(line: 415, column: 5, scope: !2324)
!2335 = !DILocation(line: 417, column: 5, scope: !2324)
!2336 = distinct !DISubprogram(name: "flush", scope: !1677, file: !1677, line: 1726, type: !1662, isLocal: true, isDefinition: true, scopeLine: 1727, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2337 = !DILocalVariable(name: "avctx", arg: 1, scope: !2336, file: !1677, line: 1726, type: !1044)
!2338 = !DILocation(line: 1726, column: 35, scope: !2336)
!2339 = !DILocation(line: 1728, column: 14, scope: !2336)
!2340 = !DILocation(line: 1728, column: 21, scope: !2336)
!2341 = !DILocation(line: 1728, column: 5, scope: !2336)
!2342 = !DILocation(line: 1729, column: 1, scope: !2336)
!2343 = distinct !DISubprogram(name: "decode_frame_adu", scope: !1677, file: !1677, line: 1732, type: !1648, isLocal: true, isDefinition: true, scopeLine: 1734, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2344 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !2345)
!2345 = distinct !DILocation(line: 1755, column: 14, scope: !2343)
!2346 = !DILocalVariable(name: "avctx", arg: 1, scope: !2343, file: !1677, line: 1732, type: !1044)
!2347 = !DILocation(line: 1732, column: 45, scope: !2343)
!2348 = !DILocalVariable(name: "data", arg: 2, scope: !2343, file: !1677, line: 1732, type: !889)
!2349 = !DILocation(line: 1732, column: 58, scope: !2343)
!2350 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2343, file: !1677, line: 1733, type: !1334)
!2351 = !DILocation(line: 1733, column: 34, scope: !2343)
!2352 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2343, file: !1677, line: 1733, type: !1188)
!2353 = !DILocation(line: 1733, column: 59, scope: !2343)
!2354 = !DILocalVariable(name: "buf", scope: !2343, file: !1677, line: 1735, type: !1482)
!2355 = !DILocation(line: 1735, column: 20, scope: !2343)
!2356 = !DILocation(line: 1735, column: 26, scope: !2343)
!2357 = !DILocation(line: 1735, column: 33, scope: !2343)
!2358 = !DILocalVariable(name: "buf_size", scope: !2343, file: !1677, line: 1736, type: !891)
!2359 = !DILocation(line: 1736, column: 9, scope: !2343)
!2360 = !DILocation(line: 1736, column: 20, scope: !2343)
!2361 = !DILocation(line: 1736, column: 27, scope: !2343)
!2362 = !DILocalVariable(name: "s", scope: !2343, file: !1677, line: 1737, type: !1859)
!2363 = !DILocation(line: 1737, column: 23, scope: !2343)
!2364 = !DILocation(line: 1737, column: 27, scope: !2343)
!2365 = !DILocation(line: 1737, column: 34, scope: !2343)
!2366 = !DILocalVariable(name: "header", scope: !2343, file: !1677, line: 1738, type: !899)
!2367 = !DILocation(line: 1738, column: 14, scope: !2343)
!2368 = !DILocalVariable(name: "len", scope: !2343, file: !1677, line: 1739, type: !891)
!2369 = !DILocation(line: 1739, column: 9, scope: !2343)
!2370 = !DILocalVariable(name: "ret", scope: !2343, file: !1677, line: 1739, type: !891)
!2371 = !DILocation(line: 1739, column: 14, scope: !2343)
!2372 = !DILocalVariable(name: "out_size", scope: !2343, file: !1677, line: 1740, type: !891)
!2373 = !DILocation(line: 1740, column: 33, scope: !2343)
!2374 = !DILocation(line: 1742, column: 11, scope: !2343)
!2375 = !DILocation(line: 1742, column: 9, scope: !2343)
!2376 = !DILocation(line: 1745, column: 9, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2343, file: !1677, line: 1745, column: 9)
!2378 = !DILocation(line: 1745, column: 18, scope: !2377)
!2379 = !DILocation(line: 1745, column: 9, scope: !2343)
!2380 = !DILocation(line: 1746, column: 16, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2377, file: !1677, line: 1745, column: 23)
!2382 = !DILocation(line: 1746, column: 9, scope: !2381)
!2383 = !DILocation(line: 1747, column: 9, scope: !2381)
!2384 = !DILocation(line: 1751, column: 9, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2343, file: !1677, line: 1751, column: 9)
!2386 = !DILocation(line: 1751, column: 13, scope: !2385)
!2387 = !DILocation(line: 1751, column: 9, scope: !2343)
!2388 = !DILocation(line: 1752, column: 13, scope: !2385)
!2389 = !DILocation(line: 1752, column: 9, scope: !2385)
!2390 = !DILocation(line: 1755, column: 57, scope: !2343)
!2391 = !DILocation(line: 1755, column: 64, scope: !2343)
!2392 = !DILocation(line: 1755, column: 14, scope: !2343)
!2393 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !2345)
!2394 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !2345)
!2395 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !2345)
!2396 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !2345)
!2397 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !2345)
!2398 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !2345)
!2399 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !2345)
!2400 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !2345)
!2401 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !2345)
!2402 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !2345)
!2403 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !2345)
!2404 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !2345)
!2405 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !2345)
!2406 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !2345)
!2407 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !2345)
!2408 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !2345)
!2409 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !2345)
!2410 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !2345)
!2411 = !DILocation(line: 1755, column: 68, scope: !2343)
!2412 = !DILocation(line: 1755, column: 12, scope: !2343)
!2413 = !DILocation(line: 1757, column: 61, scope: !2343)
!2414 = !DILocation(line: 1757, column: 42, scope: !2343)
!2415 = !DILocation(line: 1757, column: 64, scope: !2343)
!2416 = !DILocation(line: 1757, column: 11, scope: !2343)
!2417 = !DILocation(line: 1757, column: 9, scope: !2343)
!2418 = !DILocation(line: 1758, column: 9, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2343, file: !1677, line: 1758, column: 9)
!2420 = !DILocation(line: 1758, column: 13, scope: !2419)
!2421 = !DILocation(line: 1758, column: 9, scope: !2343)
!2422 = !DILocation(line: 1759, column: 16, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2419, file: !1677, line: 1758, column: 18)
!2424 = !DILocation(line: 1759, column: 9, scope: !2423)
!2425 = !DILocation(line: 1760, column: 16, scope: !2423)
!2426 = !DILocation(line: 1760, column: 9, scope: !2423)
!2427 = !DILocation(line: 1763, column: 26, scope: !2343)
!2428 = !DILocation(line: 1763, column: 29, scope: !2343)
!2429 = !DILocation(line: 1763, column: 5, scope: !2343)
!2430 = !DILocation(line: 1763, column: 12, scope: !2343)
!2431 = !DILocation(line: 1763, column: 24, scope: !2343)
!2432 = !DILocation(line: 1764, column: 23, scope: !2343)
!2433 = !DILocation(line: 1764, column: 26, scope: !2343)
!2434 = !DILocation(line: 1764, column: 5, scope: !2343)
!2435 = !DILocation(line: 1764, column: 12, scope: !2343)
!2436 = !DILocation(line: 1764, column: 21, scope: !2343)
!2437 = !DILocation(line: 1765, column: 29, scope: !2343)
!2438 = !DILocation(line: 1765, column: 32, scope: !2343)
!2439 = !DILocation(line: 1765, column: 44, scope: !2343)
!2440 = !DILocation(line: 1765, column: 5, scope: !2343)
!2441 = !DILocation(line: 1765, column: 12, scope: !2343)
!2442 = !DILocation(line: 1765, column: 27, scope: !2343)
!2443 = !DILocation(line: 1766, column: 10, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2343, file: !1677, line: 1766, column: 9)
!2445 = !DILocation(line: 1766, column: 17, scope: !2444)
!2446 = !DILocation(line: 1766, column: 9, scope: !2343)
!2447 = !DILocation(line: 1767, column: 27, scope: !2444)
!2448 = !DILocation(line: 1767, column: 30, scope: !2444)
!2449 = !DILocation(line: 1767, column: 9, scope: !2444)
!2450 = !DILocation(line: 1767, column: 16, scope: !2444)
!2451 = !DILocation(line: 1767, column: 25, scope: !2444)
!2452 = !DILocation(line: 1769, column: 21, scope: !2343)
!2453 = !DILocation(line: 1769, column: 5, scope: !2343)
!2454 = !DILocation(line: 1769, column: 8, scope: !2343)
!2455 = !DILocation(line: 1769, column: 19, scope: !2343)
!2456 = !DILocation(line: 1771, column: 16, scope: !2343)
!2457 = !DILocation(line: 1771, column: 5, scope: !2343)
!2458 = !DILocation(line: 1771, column: 8, scope: !2343)
!2459 = !DILocation(line: 1771, column: 14, scope: !2343)
!2460 = !DILocation(line: 1773, column: 27, scope: !2343)
!2461 = !DILocation(line: 1773, column: 35, scope: !2343)
!2462 = !DILocation(line: 1773, column: 40, scope: !2343)
!2463 = !DILocation(line: 1773, column: 11, scope: !2343)
!2464 = !DILocation(line: 1773, column: 9, scope: !2343)
!2465 = !DILocation(line: 1774, column: 9, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2343, file: !1677, line: 1774, column: 9)
!2467 = !DILocation(line: 1774, column: 13, scope: !2466)
!2468 = !DILocation(line: 1774, column: 9, scope: !2343)
!2469 = !DILocation(line: 1775, column: 16, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2466, file: !1677, line: 1774, column: 18)
!2471 = !DILocation(line: 1775, column: 9, scope: !2470)
!2472 = !DILocation(line: 1776, column: 16, scope: !2470)
!2473 = !DILocation(line: 1776, column: 9, scope: !2470)
!2474 = !DILocation(line: 1779, column: 6, scope: !2343)
!2475 = !DILocation(line: 1779, column: 20, scope: !2343)
!2476 = !DILocation(line: 1781, column: 12, scope: !2343)
!2477 = !DILocation(line: 1781, column: 5, scope: !2343)
!2478 = !DILocation(line: 1782, column: 1, scope: !2343)
!2479 = distinct !DISubprogram(name: "decode_init_mp3on4", scope: !1677, file: !1677, line: 1843, type: !1042, isLocal: true, isDefinition: true, scopeLine: 1844, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2480 = !DILocalVariable(name: "avctx", arg: 1, scope: !2479, file: !1677, line: 1843, type: !1044)
!2481 = !DILocation(line: 1843, column: 70, scope: !2479)
!2482 = !DILocalVariable(name: "s", scope: !2479, file: !1677, line: 1845, type: !2483)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64, align: 64)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "MP3On4DecodeContext", file: !1677, line: 1795, baseType: !2485)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MP3On4DecodeContext", file: !1677, line: 1790, size: 448, align: 64, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2485, file: !1677, line: 1791, baseType: !891, size: 32, align: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "syncword", scope: !2485, file: !1677, line: 1792, baseType: !891, size: 32, align: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "coff", scope: !2485, file: !1677, line: 1793, baseType: !1482, size: 64, align: 64, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "mp3decctx", scope: !2485, file: !1677, line: 1794, baseType: !2491, size: 320, align: 64, offset: 128)
!2491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1859, size: 320, align: 64, elements: !2492)
!2492 = !{!2023}
!2493 = !DILocation(line: 1845, column: 26, scope: !2479)
!2494 = !DILocation(line: 1845, column: 30, scope: !2479)
!2495 = !DILocation(line: 1845, column: 37, scope: !2479)
!2496 = !DILocalVariable(name: "cfg", scope: !2479, file: !1677, line: 1846, type: !2497)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !2498, line: 46, baseType: !2499)
!2498 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !2498, line: 33, size: 384, align: 32, elements: !2500)
!2500 = !{!2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2499, file: !2498, line: 34, baseType: !891, size: 32, align: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2499, file: !2498, line: 35, baseType: !891, size: 32, align: 32, offset: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2499, file: !2498, line: 36, baseType: !891, size: 32, align: 32, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2499, file: !2498, line: 37, baseType: !891, size: 32, align: 32, offset: 96)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2499, file: !2498, line: 38, baseType: !891, size: 32, align: 32, offset: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2499, file: !2498, line: 39, baseType: !891, size: 32, align: 32, offset: 160)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2499, file: !2498, line: 40, baseType: !891, size: 32, align: 32, offset: 192)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2499, file: !2498, line: 41, baseType: !891, size: 32, align: 32, offset: 224)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2499, file: !2498, line: 42, baseType: !891, size: 32, align: 32, offset: 256)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2499, file: !2498, line: 43, baseType: !891, size: 32, align: 32, offset: 288)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2499, file: !2498, line: 44, baseType: !891, size: 32, align: 32, offset: 320)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2499, file: !2498, line: 45, baseType: !891, size: 32, align: 32, offset: 352)
!2513 = !DILocation(line: 1846, column: 22, scope: !2479)
!2514 = !DILocalVariable(name: "i", scope: !2479, file: !1677, line: 1847, type: !891)
!2515 = !DILocation(line: 1847, column: 9, scope: !2479)
!2516 = !DILocation(line: 1849, column: 10, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2479, file: !1677, line: 1849, column: 9)
!2518 = !DILocation(line: 1849, column: 17, scope: !2517)
!2519 = !DILocation(line: 1849, column: 32, scope: !2517)
!2520 = !DILocation(line: 1849, column: 37, scope: !2517)
!2521 = !DILocation(line: 1849, column: 41, scope: !2522)
!2522 = !DILexicalBlockFile(scope: !2517, file: !1677, discriminator: 1)
!2523 = !DILocation(line: 1849, column: 48, scope: !2522)
!2524 = !DILocation(line: 1849, column: 9, scope: !2522)
!2525 = !DILocation(line: 1850, column: 16, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2517, file: !1677, line: 1849, column: 59)
!2527 = !DILocation(line: 1850, column: 9, scope: !2526)
!2528 = !DILocation(line: 1851, column: 9, scope: !2526)
!2529 = !DILocation(line: 1854, column: 40, scope: !2479)
!2530 = !DILocation(line: 1854, column: 47, scope: !2479)
!2531 = !DILocation(line: 1855, column: 34, scope: !2479)
!2532 = !DILocation(line: 1855, column: 41, scope: !2479)
!2533 = !DILocation(line: 1855, column: 56, scope: !2479)
!2534 = !DILocation(line: 1854, column: 5, scope: !2479)
!2535 = !DILocation(line: 1856, column: 14, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2479, file: !1677, line: 1856, column: 9)
!2537 = !DILocation(line: 1856, column: 10, scope: !2536)
!2538 = !DILocation(line: 1856, column: 26, scope: !2536)
!2539 = !DILocation(line: 1856, column: 33, scope: !2540)
!2540 = !DILexicalBlockFile(scope: !2536, file: !1677, discriminator: 1)
!2541 = !DILocation(line: 1856, column: 45, scope: !2540)
!2542 = !DILocation(line: 1856, column: 9, scope: !2540)
!2543 = !DILocation(line: 1857, column: 16, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2536, file: !1677, line: 1856, column: 50)
!2545 = !DILocation(line: 1857, column: 9, scope: !2544)
!2546 = !DILocation(line: 1858, column: 9, scope: !2544)
!2547 = !DILocation(line: 1860, column: 31, scope: !2479)
!2548 = !DILocation(line: 1860, column: 17, scope: !2479)
!2549 = !DILocation(line: 1860, column: 5, scope: !2479)
!2550 = !DILocation(line: 1860, column: 8, scope: !2479)
!2551 = !DILocation(line: 1860, column: 15, scope: !2479)
!2552 = !DILocation(line: 1861, column: 31, scope: !2479)
!2553 = !DILocation(line: 1861, column: 15, scope: !2479)
!2554 = !DILocation(line: 1861, column: 5, scope: !2479)
!2555 = !DILocation(line: 1861, column: 8, scope: !2479)
!2556 = !DILocation(line: 1861, column: 13, scope: !2479)
!2557 = !DILocation(line: 1862, column: 50, scope: !2479)
!2558 = !DILocation(line: 1862, column: 23, scope: !2479)
!2559 = !DILocation(line: 1862, column: 5, scope: !2479)
!2560 = !DILocation(line: 1862, column: 12, scope: !2479)
!2561 = !DILocation(line: 1862, column: 21, scope: !2479)
!2562 = !DILocation(line: 1863, column: 45, scope: !2479)
!2563 = !DILocation(line: 1863, column: 29, scope: !2479)
!2564 = !DILocation(line: 1863, column: 5, scope: !2479)
!2565 = !DILocation(line: 1863, column: 12, scope: !2479)
!2566 = !DILocation(line: 1863, column: 27, scope: !2479)
!2567 = !DILocation(line: 1865, column: 13, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2479, file: !1677, line: 1865, column: 9)
!2569 = !DILocation(line: 1865, column: 25, scope: !2568)
!2570 = !DILocation(line: 1865, column: 9, scope: !2479)
!2571 = !DILocation(line: 1866, column: 9, scope: !2568)
!2572 = !DILocation(line: 1866, column: 12, scope: !2568)
!2573 = !DILocation(line: 1866, column: 21, scope: !2568)
!2574 = !DILocation(line: 1868, column: 9, scope: !2568)
!2575 = !DILocation(line: 1868, column: 12, scope: !2568)
!2576 = !DILocation(line: 1868, column: 21, scope: !2568)
!2577 = !DILocation(line: 1876, column: 23, scope: !2479)
!2578 = !DILocation(line: 1876, column: 5, scope: !2479)
!2579 = !DILocation(line: 1876, column: 8, scope: !2479)
!2580 = !DILocation(line: 1876, column: 21, scope: !2479)
!2581 = !DILocation(line: 1877, column: 10, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2479, file: !1677, line: 1877, column: 9)
!2583 = !DILocation(line: 1877, column: 13, scope: !2582)
!2584 = !DILocation(line: 1877, column: 9, scope: !2479)
!2585 = !DILocation(line: 1878, column: 9, scope: !2582)
!2586 = !DILocation(line: 1880, column: 24, scope: !2479)
!2587 = !DILocation(line: 1880, column: 27, scope: !2479)
!2588 = !DILocation(line: 1880, column: 5, scope: !2479)
!2589 = !DILocation(line: 1880, column: 12, scope: !2479)
!2590 = !DILocation(line: 1880, column: 22, scope: !2479)
!2591 = !DILocation(line: 1881, column: 17, scope: !2479)
!2592 = !DILocation(line: 1881, column: 5, scope: !2479)
!2593 = !DILocation(line: 1883, column: 24, scope: !2479)
!2594 = !DILocation(line: 1883, column: 5, scope: !2479)
!2595 = !DILocation(line: 1883, column: 12, scope: !2479)
!2596 = !DILocation(line: 1883, column: 22, scope: !2479)
!2597 = !DILocation(line: 1884, column: 5, scope: !2479)
!2598 = !DILocation(line: 1884, column: 8, scope: !2479)
!2599 = !DILocation(line: 1884, column: 22, scope: !2479)
!2600 = !DILocation(line: 1884, column: 31, scope: !2479)
!2601 = !DILocation(line: 1889, column: 12, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2479, file: !1677, line: 1889, column: 5)
!2603 = !DILocation(line: 1889, column: 10, scope: !2602)
!2604 = !DILocation(line: 1889, column: 17, scope: !2605)
!2605 = !DILexicalBlockFile(scope: !2606, file: !1677, discriminator: 1)
!2606 = distinct !DILexicalBlock(scope: !2602, file: !1677, line: 1889, column: 5)
!2607 = !DILocation(line: 1889, column: 21, scope: !2605)
!2608 = !DILocation(line: 1889, column: 24, scope: !2605)
!2609 = !DILocation(line: 1889, column: 19, scope: !2605)
!2610 = !DILocation(line: 1889, column: 5, scope: !2605)
!2611 = !DILocation(line: 1890, column: 27, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2606, file: !1677, line: 1889, column: 37)
!2613 = !DILocation(line: 1890, column: 22, scope: !2612)
!2614 = !DILocation(line: 1890, column: 9, scope: !2612)
!2615 = !DILocation(line: 1890, column: 12, scope: !2612)
!2616 = !DILocation(line: 1890, column: 25, scope: !2612)
!2617 = !DILocation(line: 1891, column: 27, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2612, file: !1677, line: 1891, column: 13)
!2619 = !DILocation(line: 1891, column: 14, scope: !2618)
!2620 = !DILocation(line: 1891, column: 17, scope: !2618)
!2621 = !DILocation(line: 1891, column: 13, scope: !2612)
!2622 = !DILocation(line: 1892, column: 13, scope: !2618)
!2623 = !DILocation(line: 1893, column: 22, scope: !2612)
!2624 = !DILocation(line: 1893, column: 9, scope: !2612)
!2625 = !DILocation(line: 1893, column: 12, scope: !2612)
!2626 = !DILocation(line: 1893, column: 26, scope: !2612)
!2627 = !DILocation(line: 1893, column: 35, scope: !2612)
!2628 = !DILocation(line: 1894, column: 34, scope: !2612)
!2629 = !DILocation(line: 1894, column: 22, scope: !2612)
!2630 = !DILocation(line: 1894, column: 9, scope: !2612)
!2631 = !DILocation(line: 1894, column: 12, scope: !2612)
!2632 = !DILocation(line: 1894, column: 26, scope: !2612)
!2633 = !DILocation(line: 1894, column: 32, scope: !2612)
!2634 = !DILocation(line: 1895, column: 22, scope: !2612)
!2635 = !DILocation(line: 1895, column: 9, scope: !2612)
!2636 = !DILocation(line: 1895, column: 12, scope: !2612)
!2637 = !DILocation(line: 1895, column: 26, scope: !2612)
!2638 = !DILocation(line: 1895, column: 35, scope: !2612)
!2639 = !DILocation(line: 1895, column: 38, scope: !2612)
!2640 = !DILocation(line: 1895, column: 52, scope: !2612)
!2641 = !DILocation(line: 1896, column: 33, scope: !2612)
!2642 = !DILocation(line: 1896, column: 36, scope: !2612)
!2643 = !DILocation(line: 1896, column: 50, scope: !2612)
!2644 = !DILocation(line: 1896, column: 22, scope: !2612)
!2645 = !DILocation(line: 1896, column: 9, scope: !2612)
!2646 = !DILocation(line: 1896, column: 12, scope: !2612)
!2647 = !DILocation(line: 1896, column: 26, scope: !2612)
!2648 = !DILocation(line: 1896, column: 31, scope: !2612)
!2649 = !DILocation(line: 1897, column: 5, scope: !2612)
!2650 = !DILocation(line: 1889, column: 33, scope: !2651)
!2651 = !DILexicalBlockFile(scope: !2606, file: !1677, discriminator: 2)
!2652 = !DILocation(line: 1889, column: 5, scope: !2651)
!2653 = distinct !{!2653, !2654}
!2654 = !DILocation(line: 1889, column: 5, scope: !2479)
!2655 = !DILocation(line: 1899, column: 5, scope: !2479)
!2656 = !DILocation(line: 1901, column: 25, scope: !2479)
!2657 = !DILocation(line: 1901, column: 5, scope: !2479)
!2658 = !DILocation(line: 1902, column: 5, scope: !2479)
!2659 = !DILocation(line: 1903, column: 1, scope: !2479)
!2660 = distinct !DISubprogram(name: "decode_frame_mp3on4", scope: !1677, file: !1677, line: 1916, type: !1648, isLocal: true, isDefinition: true, scopeLine: 1918, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2661 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !2662)
!2662 = distinct !DILocation(line: 1953, column: 19, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2664, file: !1677, line: 1943, column: 40)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !1677, line: 1943, column: 5)
!2665 = distinct !DILexicalBlock(scope: !2660, file: !1677, line: 1943, column: 5)
!2666 = !DILocalVariable(name: "x", arg: 1, scope: !2667, file: !2097, line: 58, type: !934)
!2667 = distinct !DISubprogram(name: "av_bswap16", scope: !2097, file: !2097, line: 58, type: !2668, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!934, !934}
!2670 = !DILocation(line: 58, column: 98, scope: !2667, inlinedAt: !2671)
!2671 = distinct !DILocation(line: 1944, column: 17, scope: !2663)
!2672 = !DILocalVariable(name: "avctx", arg: 1, scope: !2660, file: !1677, line: 1916, type: !1044)
!2673 = !DILocation(line: 1916, column: 48, scope: !2660)
!2674 = !DILocalVariable(name: "data", arg: 2, scope: !2660, file: !1677, line: 1916, type: !889)
!2675 = !DILocation(line: 1916, column: 61, scope: !2660)
!2676 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2660, file: !1677, line: 1917, type: !1334)
!2677 = !DILocation(line: 1917, column: 37, scope: !2660)
!2678 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2660, file: !1677, line: 1917, type: !1188)
!2679 = !DILocation(line: 1917, column: 62, scope: !2660)
!2680 = !DILocalVariable(name: "frame", scope: !2660, file: !1677, line: 1919, type: !1066)
!2681 = !DILocation(line: 1919, column: 14, scope: !2660)
!2682 = !DILocation(line: 1919, column: 22, scope: !2660)
!2683 = !DILocalVariable(name: "buf", scope: !2660, file: !1677, line: 1920, type: !1482)
!2684 = !DILocation(line: 1920, column: 20, scope: !2660)
!2685 = !DILocation(line: 1920, column: 26, scope: !2660)
!2686 = !DILocation(line: 1920, column: 33, scope: !2660)
!2687 = !DILocalVariable(name: "buf_size", scope: !2660, file: !1677, line: 1921, type: !891)
!2688 = !DILocation(line: 1921, column: 9, scope: !2660)
!2689 = !DILocation(line: 1921, column: 20, scope: !2660)
!2690 = !DILocation(line: 1921, column: 27, scope: !2660)
!2691 = !DILocalVariable(name: "s", scope: !2660, file: !1677, line: 1922, type: !2483)
!2692 = !DILocation(line: 1922, column: 26, scope: !2660)
!2693 = !DILocation(line: 1922, column: 30, scope: !2660)
!2694 = !DILocation(line: 1922, column: 37, scope: !2660)
!2695 = !DILocalVariable(name: "m", scope: !2660, file: !1677, line: 1923, type: !1859)
!2696 = !DILocation(line: 1923, column: 23, scope: !2660)
!2697 = !DILocalVariable(name: "fsize", scope: !2660, file: !1677, line: 1924, type: !891)
!2698 = !DILocation(line: 1924, column: 9, scope: !2660)
!2699 = !DILocalVariable(name: "len", scope: !2660, file: !1677, line: 1924, type: !891)
!2700 = !DILocation(line: 1924, column: 16, scope: !2660)
!2701 = !DILocation(line: 1924, column: 22, scope: !2660)
!2702 = !DILocalVariable(name: "out_size", scope: !2660, file: !1677, line: 1924, type: !891)
!2703 = !DILocation(line: 1924, column: 32, scope: !2660)
!2704 = !DILocalVariable(name: "header", scope: !2660, file: !1677, line: 1925, type: !899)
!2705 = !DILocation(line: 1925, column: 14, scope: !2660)
!2706 = !DILocalVariable(name: "out_samples", scope: !2660, file: !1677, line: 1926, type: !916)
!2707 = !DILocation(line: 1926, column: 15, scope: !2660)
!2708 = !DILocalVariable(name: "outptr", scope: !2660, file: !1677, line: 1927, type: !2709)
!2709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 128, align: 64, elements: !936)
!2710 = !DILocation(line: 1927, column: 14, scope: !2660)
!2711 = !DILocalVariable(name: "fr", scope: !2660, file: !1677, line: 1928, type: !891)
!2712 = !DILocation(line: 1928, column: 9, scope: !2660)
!2713 = !DILocalVariable(name: "ch", scope: !2660, file: !1677, line: 1928, type: !891)
!2714 = !DILocation(line: 1928, column: 13, scope: !2660)
!2715 = !DILocalVariable(name: "ret", scope: !2660, file: !1677, line: 1928, type: !891)
!2716 = !DILocation(line: 1928, column: 17, scope: !2660)
!2717 = !DILocation(line: 1931, column: 5, scope: !2660)
!2718 = !DILocation(line: 1931, column: 12, scope: !2660)
!2719 = !DILocation(line: 1931, column: 23, scope: !2660)
!2720 = !DILocation(line: 1932, column: 30, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2660, file: !1677, line: 1932, column: 9)
!2722 = !DILocation(line: 1932, column: 37, scope: !2721)
!2723 = !DILocation(line: 1932, column: 16, scope: !2721)
!2724 = !DILocation(line: 1932, column: 14, scope: !2721)
!2725 = !DILocation(line: 1932, column: 48, scope: !2721)
!2726 = !DILocation(line: 1932, column: 9, scope: !2660)
!2727 = !DILocation(line: 1933, column: 16, scope: !2721)
!2728 = !DILocation(line: 1933, column: 9, scope: !2721)
!2729 = !DILocation(line: 1934, column: 31, scope: !2660)
!2730 = !DILocation(line: 1934, column: 38, scope: !2660)
!2731 = !DILocation(line: 1934, column: 19, scope: !2660)
!2732 = !DILocation(line: 1934, column: 17, scope: !2660)
!2733 = !DILocation(line: 1937, column: 9, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2660, file: !1677, line: 1937, column: 9)
!2735 = !DILocation(line: 1937, column: 18, scope: !2734)
!2736 = !DILocation(line: 1937, column: 9, scope: !2660)
!2737 = !DILocation(line: 1938, column: 9, scope: !2734)
!2738 = !DILocation(line: 1940, column: 5, scope: !2660)
!2739 = !DILocation(line: 1940, column: 12, scope: !2660)
!2740 = !DILocation(line: 1940, column: 21, scope: !2660)
!2741 = !DILocation(line: 1942, column: 8, scope: !2660)
!2742 = !DILocation(line: 1943, column: 13, scope: !2665)
!2743 = !DILocation(line: 1943, column: 10, scope: !2665)
!2744 = !DILocation(line: 1943, column: 18, scope: !2745)
!2745 = !DILexicalBlockFile(scope: !2664, file: !1677, discriminator: 1)
!2746 = !DILocation(line: 1943, column: 23, scope: !2745)
!2747 = !DILocation(line: 1943, column: 26, scope: !2745)
!2748 = !DILocation(line: 1943, column: 21, scope: !2745)
!2749 = !DILocation(line: 1943, column: 5, scope: !2745)
!2750 = !DILocation(line: 1944, column: 60, scope: !2663)
!2751 = !DILocation(line: 1944, column: 67, scope: !2663)
!2752 = !DILocation(line: 1944, column: 17, scope: !2663)
!2753 = !DILocation(line: 60, column: 9, scope: !2667, inlinedAt: !2671)
!2754 = !DILocation(line: 60, column: 10, scope: !2667, inlinedAt: !2671)
!2755 = !DILocation(line: 60, column: 18, scope: !2667, inlinedAt: !2671)
!2756 = !DILocation(line: 60, column: 19, scope: !2667, inlinedAt: !2671)
!2757 = !DILocation(line: 60, column: 15, scope: !2667, inlinedAt: !2671)
!2758 = !DILocation(line: 60, column: 8, scope: !2667, inlinedAt: !2671)
!2759 = !DILocation(line: 60, column: 6, scope: !2667, inlinedAt: !2671)
!2760 = !DILocation(line: 61, column: 12, scope: !2667, inlinedAt: !2671)
!2761 = !DILocation(line: 1944, column: 71, scope: !2663)
!2762 = !DILocation(line: 1944, column: 15, scope: !2663)
!2763 = !DILocation(line: 1945, column: 21, scope: !2663)
!2764 = !DILocation(line: 1945, column: 31, scope: !2663)
!2765 = !DILocation(line: 1945, column: 28, scope: !2663)
!2766 = !DILocation(line: 1945, column: 20, scope: !2663)
!2767 = !DILocation(line: 1945, column: 39, scope: !2768)
!2768 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 1)
!2769 = !DILocation(line: 1945, column: 20, scope: !2768)
!2770 = !DILocation(line: 1945, column: 47, scope: !2771)
!2771 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 2)
!2772 = !DILocation(line: 1945, column: 20, scope: !2771)
!2773 = !DILocation(line: 1945, column: 20, scope: !2774)
!2774 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 3)
!2775 = !DILocation(line: 1945, column: 56, scope: !2774)
!2776 = !DILocation(line: 1945, column: 18, scope: !2774)
!2777 = !DILocation(line: 1945, column: 18, scope: !2778)
!2778 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 4)
!2779 = !DILocation(line: 1945, column: 79, scope: !2780)
!2780 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 5)
!2781 = !DILocation(line: 1945, column: 89, scope: !2780)
!2782 = !DILocation(line: 1945, column: 86, scope: !2780)
!2783 = !DILocation(line: 1945, column: 78, scope: !2780)
!2784 = !DILocation(line: 1945, column: 97, scope: !2785)
!2785 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 6)
!2786 = !DILocation(line: 1945, column: 78, scope: !2785)
!2787 = !DILocation(line: 1945, column: 105, scope: !2788)
!2788 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 7)
!2789 = !DILocation(line: 1945, column: 78, scope: !2788)
!2790 = !DILocation(line: 1945, column: 78, scope: !2791)
!2791 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 8)
!2792 = !DILocation(line: 1945, column: 18, scope: !2791)
!2793 = !DILocation(line: 1945, column: 18, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !2663, file: !1677, discriminator: 9)
!2795 = !DILocation(line: 1945, column: 15, scope: !2794)
!2796 = !DILocation(line: 1946, column: 26, scope: !2663)
!2797 = !DILocation(line: 1946, column: 13, scope: !2663)
!2798 = !DILocation(line: 1946, column: 16, scope: !2663)
!2799 = !DILocation(line: 1946, column: 11, scope: !2663)
!2800 = !DILocation(line: 1949, column: 13, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2663, file: !1677, line: 1949, column: 13)
!2802 = !DILocation(line: 1949, column: 19, scope: !2801)
!2803 = !DILocation(line: 1949, column: 13, scope: !2663)
!2804 = !DILocation(line: 1950, column: 20, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2801, file: !1677, line: 1949, column: 24)
!2806 = !DILocation(line: 1950, column: 13, scope: !2805)
!2807 = !DILocation(line: 1951, column: 13, scope: !2805)
!2808 = !DILocation(line: 1953, column: 62, scope: !2663)
!2809 = !DILocation(line: 1953, column: 69, scope: !2663)
!2810 = !DILocation(line: 1953, column: 19, scope: !2663)
!2811 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !2662)
!2812 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !2662)
!2813 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !2662)
!2814 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !2662)
!2815 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !2662)
!2816 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !2662)
!2817 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !2662)
!2818 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !2662)
!2819 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !2662)
!2820 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !2662)
!2821 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !2662)
!2822 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !2662)
!2823 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !2662)
!2824 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !2662)
!2825 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !2662)
!2826 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !2662)
!2827 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !2662)
!2828 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !2662)
!2829 = !DILocation(line: 1953, column: 73, scope: !2663)
!2830 = !DILocation(line: 1953, column: 89, scope: !2663)
!2831 = !DILocation(line: 1953, column: 92, scope: !2663)
!2832 = !DILocation(line: 1953, column: 87, scope: !2663)
!2833 = !DILocation(line: 1953, column: 16, scope: !2663)
!2834 = !DILocation(line: 1955, column: 65, scope: !2663)
!2835 = !DILocation(line: 1955, column: 46, scope: !2663)
!2836 = !DILocation(line: 1955, column: 68, scope: !2663)
!2837 = !DILocation(line: 1955, column: 15, scope: !2663)
!2838 = !DILocation(line: 1955, column: 13, scope: !2663)
!2839 = !DILocation(line: 1956, column: 13, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2663, file: !1677, line: 1956, column: 13)
!2841 = !DILocation(line: 1956, column: 17, scope: !2840)
!2842 = !DILocation(line: 1956, column: 13, scope: !2663)
!2843 = !DILocation(line: 1957, column: 20, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2840, file: !1677, line: 1956, column: 22)
!2845 = !DILocation(line: 1957, column: 13, scope: !2844)
!2846 = !DILocation(line: 1958, column: 13, scope: !2844)
!2847 = !DILocation(line: 1961, column: 13, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2663, file: !1677, line: 1961, column: 13)
!2849 = !DILocation(line: 1961, column: 18, scope: !2848)
!2850 = !DILocation(line: 1961, column: 21, scope: !2848)
!2851 = !DILocation(line: 1961, column: 16, scope: !2848)
!2852 = !DILocation(line: 1961, column: 35, scope: !2848)
!2853 = !DILocation(line: 1961, column: 42, scope: !2848)
!2854 = !DILocation(line: 1961, column: 33, scope: !2848)
!2855 = !DILocation(line: 1961, column: 51, scope: !2848)
!2856 = !DILocation(line: 1962, column: 21, scope: !2848)
!2857 = !DILocation(line: 1962, column: 13, scope: !2848)
!2858 = !DILocation(line: 1962, column: 16, scope: !2848)
!2859 = !DILocation(line: 1962, column: 27, scope: !2848)
!2860 = !DILocation(line: 1962, column: 30, scope: !2848)
!2861 = !DILocation(line: 1962, column: 25, scope: !2848)
!2862 = !DILocation(line: 1962, column: 44, scope: !2848)
!2863 = !DILocation(line: 1962, column: 51, scope: !2848)
!2864 = !DILocation(line: 1962, column: 42, scope: !2848)
!2865 = !DILocation(line: 1961, column: 13, scope: !2768)
!2866 = !DILocation(line: 1963, column: 20, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2848, file: !1677, line: 1962, column: 61)
!2868 = !DILocation(line: 1963, column: 13, scope: !2867)
!2869 = !DILocation(line: 1965, column: 13, scope: !2867)
!2870 = !DILocation(line: 1967, column: 15, scope: !2663)
!2871 = !DILocation(line: 1967, column: 18, scope: !2663)
!2872 = !DILocation(line: 1967, column: 12, scope: !2663)
!2873 = !DILocation(line: 1969, column: 41, scope: !2663)
!2874 = !DILocation(line: 1969, column: 33, scope: !2663)
!2875 = !DILocation(line: 1969, column: 36, scope: !2663)
!2876 = !DILocation(line: 1969, column: 21, scope: !2663)
!2877 = !DILocation(line: 1969, column: 9, scope: !2663)
!2878 = !DILocation(line: 1969, column: 19, scope: !2663)
!2879 = !DILocation(line: 1970, column: 13, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2663, file: !1677, line: 1970, column: 13)
!2881 = !DILocation(line: 1970, column: 16, scope: !2880)
!2882 = !DILocation(line: 1970, column: 28, scope: !2880)
!2883 = !DILocation(line: 1970, column: 13, scope: !2663)
!2884 = !DILocation(line: 1971, column: 45, scope: !2880)
!2885 = !DILocation(line: 1971, column: 37, scope: !2880)
!2886 = !DILocation(line: 1971, column: 40, scope: !2880)
!2887 = !DILocation(line: 1971, column: 49, scope: !2880)
!2888 = !DILocation(line: 1971, column: 25, scope: !2880)
!2889 = !DILocation(line: 1971, column: 13, scope: !2880)
!2890 = !DILocation(line: 1971, column: 23, scope: !2880)
!2891 = !DILocation(line: 1973, column: 36, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2663, file: !1677, line: 1973, column: 13)
!2893 = !DILocation(line: 1973, column: 39, scope: !2892)
!2894 = !DILocation(line: 1973, column: 47, scope: !2892)
!2895 = !DILocation(line: 1973, column: 52, scope: !2892)
!2896 = !DILocation(line: 1973, column: 20, scope: !2892)
!2897 = !DILocation(line: 1973, column: 18, scope: !2892)
!2898 = !DILocation(line: 1973, column: 60, scope: !2892)
!2899 = !DILocation(line: 1973, column: 13, scope: !2663)
!2900 = !DILocation(line: 1974, column: 20, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2892, file: !1677, line: 1973, column: 65)
!2902 = !DILocation(line: 1974, column: 64, scope: !2901)
!2903 = !DILocation(line: 1974, column: 13, scope: !2901)
!2904 = !DILocation(line: 1975, column: 20, scope: !2901)
!2905 = !DILocation(line: 1975, column: 13, scope: !2901)
!2906 = !DILocation(line: 1976, column: 17, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2901, file: !1677, line: 1976, column: 17)
!2908 = !DILocation(line: 1976, column: 20, scope: !2907)
!2909 = !DILocation(line: 1976, column: 32, scope: !2907)
!2910 = !DILocation(line: 1976, column: 17, scope: !2901)
!2911 = !DILocation(line: 1977, column: 24, scope: !2907)
!2912 = !DILocation(line: 1977, column: 17, scope: !2907)
!2913 = !DILocation(line: 1978, column: 19, scope: !2901)
!2914 = !DILocation(line: 1978, column: 22, scope: !2901)
!2915 = !DILocation(line: 1978, column: 34, scope: !2901)
!2916 = !DILocation(line: 1978, column: 40, scope: !2901)
!2917 = !DILocation(line: 1978, column: 17, scope: !2901)
!2918 = !DILocation(line: 1979, column: 9, scope: !2901)
!2919 = !DILocation(line: 1981, column: 21, scope: !2663)
!2920 = !DILocation(line: 1981, column: 18, scope: !2663)
!2921 = !DILocation(line: 1982, column: 16, scope: !2663)
!2922 = !DILocation(line: 1982, column: 13, scope: !2663)
!2923 = !DILocation(line: 1983, column: 16, scope: !2663)
!2924 = !DILocation(line: 1983, column: 13, scope: !2663)
!2925 = !DILocation(line: 1985, column: 28, scope: !2663)
!2926 = !DILocation(line: 1985, column: 31, scope: !2663)
!2927 = !DILocation(line: 1985, column: 9, scope: !2663)
!2928 = !DILocation(line: 1985, column: 16, scope: !2663)
!2929 = !DILocation(line: 1985, column: 25, scope: !2663)
!2930 = !DILocation(line: 1986, column: 5, scope: !2663)
!2931 = !DILocation(line: 1943, column: 36, scope: !2932)
!2932 = !DILexicalBlockFile(scope: !2664, file: !1677, discriminator: 2)
!2933 = !DILocation(line: 1943, column: 5, scope: !2932)
!2934 = distinct !{!2934, !2935}
!2935 = !DILocation(line: 1943, column: 5, scope: !2660)
!2936 = !DILocation(line: 1987, column: 9, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2660, file: !1677, line: 1987, column: 9)
!2938 = !DILocation(line: 1987, column: 15, scope: !2937)
!2939 = !DILocation(line: 1987, column: 22, scope: !2937)
!2940 = !DILocation(line: 1987, column: 12, scope: !2937)
!2941 = !DILocation(line: 1987, column: 9, scope: !2660)
!2942 = !DILocation(line: 1988, column: 16, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2937, file: !1677, line: 1987, column: 32)
!2944 = !DILocation(line: 1988, column: 9, scope: !2943)
!2945 = !DILocation(line: 1989, column: 9, scope: !2943)
!2946 = !DILocation(line: 1993, column: 26, scope: !2660)
!2947 = !DILocation(line: 1993, column: 29, scope: !2660)
!2948 = !DILocation(line: 1993, column: 43, scope: !2660)
!2949 = !DILocation(line: 1993, column: 5, scope: !2660)
!2950 = !DILocation(line: 1993, column: 12, scope: !2660)
!2951 = !DILocation(line: 1993, column: 24, scope: !2660)
!2952 = !DILocation(line: 1995, column: 25, scope: !2660)
!2953 = !DILocation(line: 1995, column: 37, scope: !2660)
!2954 = !DILocation(line: 1995, column: 44, scope: !2660)
!2955 = !DILocation(line: 1995, column: 53, scope: !2660)
!2956 = !DILocation(line: 1995, column: 34, scope: !2660)
!2957 = !DILocation(line: 1995, column: 5, scope: !2660)
!2958 = !DILocation(line: 1995, column: 12, scope: !2660)
!2959 = !DILocation(line: 1995, column: 23, scope: !2660)
!2960 = !DILocation(line: 1996, column: 6, scope: !2660)
!2961 = !DILocation(line: 1996, column: 20, scope: !2660)
!2962 = !DILocation(line: 1998, column: 12, scope: !2660)
!2963 = !DILocation(line: 1998, column: 5, scope: !2660)
!2964 = !DILocation(line: 1999, column: 1, scope: !2660)
!2965 = distinct !DISubprogram(name: "decode_close_mp3on4", scope: !1677, file: !1677, line: 1828, type: !1042, isLocal: true, isDefinition: true, scopeLine: 1829, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!2966 = !DILocalVariable(name: "avctx", arg: 1, scope: !2965, file: !1677, line: 1828, type: !1044)
!2967 = !DILocation(line: 1828, column: 71, scope: !2965)
!2968 = !DILocalVariable(name: "s", scope: !2965, file: !1677, line: 1830, type: !2483)
!2969 = !DILocation(line: 1830, column: 26, scope: !2965)
!2970 = !DILocation(line: 1830, column: 30, scope: !2965)
!2971 = !DILocation(line: 1830, column: 37, scope: !2965)
!2972 = !DILocalVariable(name: "i", scope: !2965, file: !1677, line: 1831, type: !891)
!2973 = !DILocation(line: 1831, column: 9, scope: !2965)
!2974 = !DILocation(line: 1833, column: 9, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2965, file: !1677, line: 1833, column: 9)
!2976 = !DILocation(line: 1833, column: 12, scope: !2975)
!2977 = !DILocation(line: 1833, column: 9, scope: !2965)
!2978 = !DILocation(line: 1834, column: 19, scope: !2975)
!2979 = !DILocation(line: 1834, column: 22, scope: !2975)
!2980 = !DILocation(line: 1834, column: 36, scope: !2975)
!2981 = !DILocation(line: 1834, column: 18, scope: !2975)
!2982 = !DILocation(line: 1834, column: 9, scope: !2975)
!2983 = !DILocation(line: 1836, column: 12, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2965, file: !1677, line: 1836, column: 5)
!2985 = !DILocation(line: 1836, column: 10, scope: !2984)
!2986 = !DILocation(line: 1836, column: 17, scope: !2987)
!2987 = !DILexicalBlockFile(scope: !2988, file: !1677, discriminator: 1)
!2988 = distinct !DILexicalBlock(scope: !2984, file: !1677, line: 1836, column: 5)
!2989 = !DILocation(line: 1836, column: 21, scope: !2987)
!2990 = !DILocation(line: 1836, column: 24, scope: !2987)
!2991 = !DILocation(line: 1836, column: 19, scope: !2987)
!2992 = !DILocation(line: 1836, column: 5, scope: !2987)
!2993 = !DILocation(line: 1837, column: 32, scope: !2988)
!2994 = !DILocation(line: 1837, column: 19, scope: !2988)
!2995 = !DILocation(line: 1837, column: 22, scope: !2988)
!2996 = !DILocation(line: 1837, column: 18, scope: !2988)
!2997 = !DILocation(line: 1837, column: 9, scope: !2988)
!2998 = !DILocation(line: 1836, column: 33, scope: !2999)
!2999 = !DILexicalBlockFile(scope: !2988, file: !1677, discriminator: 2)
!3000 = !DILocation(line: 1836, column: 5, scope: !2999)
!3001 = distinct !{!3001, !3002}
!3002 = !DILocation(line: 1836, column: 5, scope: !2965)
!3003 = !DILocation(line: 1839, column: 5, scope: !2965)
!3004 = distinct !DISubprogram(name: "flush_mp3on4", scope: !1677, file: !1677, line: 1906, type: !1662, isLocal: true, isDefinition: true, scopeLine: 1907, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!3005 = !DILocalVariable(name: "avctx", arg: 1, scope: !3004, file: !1677, line: 1906, type: !1044)
!3006 = !DILocation(line: 1906, column: 42, scope: !3004)
!3007 = !DILocalVariable(name: "i", scope: !3004, file: !1677, line: 1908, type: !891)
!3008 = !DILocation(line: 1908, column: 9, scope: !3004)
!3009 = !DILocalVariable(name: "s", scope: !3004, file: !1677, line: 1909, type: !2483)
!3010 = !DILocation(line: 1909, column: 26, scope: !3004)
!3011 = !DILocation(line: 1909, column: 30, scope: !3004)
!3012 = !DILocation(line: 1909, column: 37, scope: !3004)
!3013 = !DILocation(line: 1911, column: 12, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3004, file: !1677, line: 1911, column: 5)
!3015 = !DILocation(line: 1911, column: 10, scope: !3014)
!3016 = !DILocation(line: 1911, column: 17, scope: !3017)
!3017 = !DILexicalBlockFile(scope: !3018, file: !1677, discriminator: 1)
!3018 = distinct !DILexicalBlock(scope: !3014, file: !1677, line: 1911, column: 5)
!3019 = !DILocation(line: 1911, column: 21, scope: !3017)
!3020 = !DILocation(line: 1911, column: 24, scope: !3017)
!3021 = !DILocation(line: 1911, column: 19, scope: !3017)
!3022 = !DILocation(line: 1911, column: 5, scope: !3017)
!3023 = !DILocation(line: 1912, column: 31, scope: !3018)
!3024 = !DILocation(line: 1912, column: 18, scope: !3018)
!3025 = !DILocation(line: 1912, column: 21, scope: !3018)
!3026 = !DILocation(line: 1912, column: 9, scope: !3018)
!3027 = !DILocation(line: 1911, column: 33, scope: !3028)
!3028 = !DILexicalBlockFile(scope: !3018, file: !1677, discriminator: 2)
!3029 = !DILocation(line: 1911, column: 5, scope: !3028)
!3030 = distinct !{!3030, !3031}
!3031 = !DILocation(line: 1911, column: 5, scope: !3004)
!3032 = !DILocation(line: 1913, column: 1, scope: !3004)
!3033 = distinct !DISubprogram(name: "decode_init_static", scope: !1677, file: !1677, line: 261, type: !1793, isLocal: true, isDefinition: true, scopeLine: 262, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!3034 = !DILocalVariable(name: "i", scope: !3033, file: !1677, line: 263, type: !891)
!3035 = !DILocation(line: 263, column: 9, scope: !3033)
!3036 = !DILocalVariable(name: "j", scope: !3033, file: !1677, line: 263, type: !891)
!3037 = !DILocation(line: 263, column: 12, scope: !3033)
!3038 = !DILocalVariable(name: "k", scope: !3033, file: !1677, line: 263, type: !891)
!3039 = !DILocation(line: 263, column: 15, scope: !3033)
!3040 = !DILocalVariable(name: "offset", scope: !3033, file: !1677, line: 264, type: !891)
!3041 = !DILocation(line: 264, column: 9, scope: !3033)
!3042 = !DILocation(line: 267, column: 12, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 267, column: 5)
!3044 = !DILocation(line: 267, column: 10, scope: !3043)
!3045 = !DILocation(line: 267, column: 17, scope: !3046)
!3046 = !DILexicalBlockFile(scope: !3047, file: !1677, discriminator: 1)
!3047 = distinct !DILexicalBlock(scope: !3043, file: !1677, line: 267, column: 5)
!3048 = !DILocation(line: 267, column: 19, scope: !3046)
!3049 = !DILocation(line: 267, column: 5, scope: !3046)
!3050 = !DILocalVariable(name: "shift", scope: !3051, file: !1677, line: 268, type: !891)
!3051 = distinct !DILexicalBlock(scope: !3047, file: !1677, line: 267, column: 30)
!3052 = !DILocation(line: 268, column: 13, scope: !3051)
!3053 = !DILocalVariable(name: "mod", scope: !3051, file: !1677, line: 268, type: !891)
!3054 = !DILocation(line: 268, column: 20, scope: !3051)
!3055 = !DILocation(line: 270, column: 17, scope: !3051)
!3056 = !DILocation(line: 270, column: 19, scope: !3051)
!3057 = !DILocation(line: 270, column: 15, scope: !3051)
!3058 = !DILocation(line: 271, column: 15, scope: !3051)
!3059 = !DILocation(line: 271, column: 17, scope: !3051)
!3060 = !DILocation(line: 271, column: 13, scope: !3051)
!3061 = !DILocation(line: 272, column: 36, scope: !3051)
!3062 = !DILocation(line: 272, column: 43, scope: !3051)
!3063 = !DILocation(line: 272, column: 49, scope: !3051)
!3064 = !DILocation(line: 272, column: 40, scope: !3051)
!3065 = !DILocation(line: 272, column: 31, scope: !3051)
!3066 = !DILocation(line: 272, column: 9, scope: !3051)
!3067 = !DILocation(line: 272, column: 34, scope: !3051)
!3068 = !DILocation(line: 273, column: 5, scope: !3051)
!3069 = !DILocation(line: 267, column: 26, scope: !3070)
!3070 = !DILexicalBlockFile(scope: !3047, file: !1677, discriminator: 2)
!3071 = !DILocation(line: 267, column: 5, scope: !3070)
!3072 = distinct !{!3072, !3073}
!3073 = !DILocation(line: 267, column: 5, scope: !3033)
!3074 = !DILocation(line: 276, column: 12, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 276, column: 5)
!3076 = !DILocation(line: 276, column: 10, scope: !3075)
!3077 = !DILocation(line: 276, column: 17, scope: !3078)
!3078 = !DILexicalBlockFile(scope: !3079, file: !1677, discriminator: 1)
!3079 = distinct !DILexicalBlock(scope: !3075, file: !1677, line: 276, column: 5)
!3080 = !DILocation(line: 276, column: 19, scope: !3078)
!3081 = !DILocation(line: 276, column: 5, scope: !3078)
!3082 = !DILocalVariable(name: "n", scope: !3083, file: !1677, line: 277, type: !891)
!3083 = distinct !DILexicalBlock(scope: !3079, file: !1677, line: 276, column: 30)
!3084 = !DILocation(line: 277, column: 13, scope: !3083)
!3085 = !DILocalVariable(name: "norm", scope: !3083, file: !1677, line: 277, type: !891)
!3086 = !DILocation(line: 277, column: 16, scope: !3083)
!3087 = !DILocation(line: 278, column: 13, scope: !3083)
!3088 = !DILocation(line: 278, column: 15, scope: !3083)
!3089 = !DILocation(line: 278, column: 11, scope: !3083)
!3090 = !DILocation(line: 279, column: 24, scope: !3083)
!3091 = !DILocation(line: 279, column: 21, scope: !3083)
!3092 = !DILocation(line: 279, column: 27, scope: !3083)
!3093 = !DILocation(line: 279, column: 49, scope: !3083)
!3094 = !DILocation(line: 279, column: 46, scope: !3083)
!3095 = !DILocation(line: 279, column: 52, scope: !3083)
!3096 = !DILocation(line: 279, column: 42, scope: !3083)
!3097 = !DILocation(line: 279, column: 40, scope: !3083)
!3098 = !DILocation(line: 279, column: 16, scope: !3083)
!3099 = !DILocation(line: 279, column: 14, scope: !3083)
!3100 = !DILocation(line: 280, column: 60, scope: !3083)
!3101 = !DILocation(line: 280, column: 59, scope: !3083)
!3102 = !DILocation(line: 280, column: 58, scope: !3083)
!3103 = !DILocation(line: 280, column: 35, scope: !3083)
!3104 = !DILocation(line: 280, column: 27, scope: !3083)
!3105 = !DILocation(line: 280, column: 9, scope: !3083)
!3106 = !DILocation(line: 280, column: 33, scope: !3083)
!3107 = !DILocation(line: 281, column: 69, scope: !3083)
!3108 = !DILocation(line: 281, column: 68, scope: !3083)
!3109 = !DILocation(line: 281, column: 67, scope: !3083)
!3110 = !DILocation(line: 281, column: 35, scope: !3083)
!3111 = !DILocation(line: 281, column: 27, scope: !3083)
!3112 = !DILocation(line: 281, column: 9, scope: !3083)
!3113 = !DILocation(line: 281, column: 33, scope: !3083)
!3114 = !DILocation(line: 282, column: 69, scope: !3083)
!3115 = !DILocation(line: 282, column: 68, scope: !3083)
!3116 = !DILocation(line: 282, column: 67, scope: !3083)
!3117 = !DILocation(line: 282, column: 35, scope: !3083)
!3118 = !DILocation(line: 282, column: 27, scope: !3083)
!3119 = !DILocation(line: 282, column: 9, scope: !3083)
!3120 = !DILocation(line: 282, column: 33, scope: !3083)
!3121 = !DILocation(line: 283, column: 9, scope: !3083)
!3122 = distinct !{!3122, !3121}
!3123 = !DILocation(line: 283, column: 109, scope: !3124)
!3124 = !DILexicalBlockFile(scope: !3125, file: !1677, discriminator: 1)
!3125 = distinct !DILexicalBlock(scope: !3083, file: !1677, line: 283, column: 12)
!3126 = !DILocation(line: 288, column: 5, scope: !3083)
!3127 = !DILocation(line: 276, column: 26, scope: !3128)
!3128 = !DILexicalBlockFile(scope: !3079, file: !1677, discriminator: 2)
!3129 = !DILocation(line: 276, column: 5, scope: !3128)
!3130 = distinct !{!3130, !3131}
!3131 = !DILocation(line: 276, column: 5, scope: !3033)
!3132 = !DILocation(line: 290, column: 5, scope: !3033)
!3133 = !DILocation(line: 293, column: 12, scope: !3033)
!3134 = !DILocation(line: 294, column: 12, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 294, column: 5)
!3136 = !DILocation(line: 294, column: 10, scope: !3135)
!3137 = !DILocation(line: 294, column: 17, scope: !3138)
!3138 = !DILexicalBlockFile(scope: !3139, file: !1677, discriminator: 1)
!3139 = distinct !DILexicalBlock(scope: !3135, file: !1677, line: 294, column: 5)
!3140 = !DILocation(line: 294, column: 19, scope: !3138)
!3141 = !DILocation(line: 294, column: 5, scope: !3138)
!3142 = !DILocalVariable(name: "h", scope: !3143, file: !1677, line: 295, type: !3144)
!3143 = distinct !DILexicalBlock(scope: !3139, file: !1677, line: 294, column: 30)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!3145 = !DILocation(line: 295, column: 26, scope: !3143)
!3146 = !DILocation(line: 295, column: 47, scope: !3143)
!3147 = !DILocation(line: 295, column: 31, scope: !3143)
!3148 = !DILocalVariable(name: "xsize", scope: !3143, file: !1677, line: 296, type: !891)
!3149 = !DILocation(line: 296, column: 13, scope: !3143)
!3150 = !DILocalVariable(name: "x", scope: !3143, file: !1677, line: 296, type: !891)
!3151 = !DILocation(line: 296, column: 20, scope: !3143)
!3152 = !DILocalVariable(name: "y", scope: !3143, file: !1677, line: 296, type: !891)
!3153 = !DILocation(line: 296, column: 23, scope: !3143)
!3154 = !DILocalVariable(name: "tmp_bits", scope: !3143, file: !1677, line: 297, type: !3155)
!3155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 4096, align: 8, elements: !1813)
!3156 = !DILocation(line: 297, column: 17, scope: !3143)
!3157 = !DILocalVariable(name: "tmp_codes", scope: !3143, file: !1677, line: 298, type: !3158)
!3158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 8192, align: 16, elements: !1813)
!3159 = !DILocation(line: 298, column: 18, scope: !3143)
!3160 = !DILocation(line: 300, column: 17, scope: !3143)
!3161 = !DILocation(line: 300, column: 20, scope: !3143)
!3162 = !DILocation(line: 300, column: 15, scope: !3143)
!3163 = !DILocation(line: 302, column: 11, scope: !3143)
!3164 = !DILocation(line: 303, column: 16, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3143, file: !1677, line: 303, column: 9)
!3166 = !DILocation(line: 303, column: 14, scope: !3165)
!3167 = !DILocation(line: 303, column: 21, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !3169, file: !1677, discriminator: 1)
!3169 = distinct !DILexicalBlock(scope: !3165, file: !1677, line: 303, column: 9)
!3170 = !DILocation(line: 303, column: 25, scope: !3168)
!3171 = !DILocation(line: 303, column: 23, scope: !3168)
!3172 = !DILocation(line: 303, column: 9, scope: !3168)
!3173 = !DILocation(line: 304, column: 20, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3175, file: !1677, line: 304, column: 13)
!3175 = distinct !DILexicalBlock(scope: !3169, file: !1677, line: 303, column: 37)
!3176 = !DILocation(line: 304, column: 18, scope: !3174)
!3177 = !DILocation(line: 304, column: 25, scope: !3178)
!3178 = !DILexicalBlockFile(scope: !3179, file: !1677, discriminator: 1)
!3179 = distinct !DILexicalBlock(scope: !3174, file: !1677, line: 304, column: 13)
!3180 = !DILocation(line: 304, column: 29, scope: !3178)
!3181 = !DILocation(line: 304, column: 27, scope: !3178)
!3182 = !DILocation(line: 304, column: 13, scope: !3178)
!3183 = !DILocation(line: 305, column: 65, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3179, file: !1677, line: 304, column: 41)
!3185 = !DILocation(line: 305, column: 56, scope: !3184)
!3186 = !DILocation(line: 305, column: 59, scope: !3184)
!3187 = !DILocation(line: 305, column: 28, scope: !3184)
!3188 = !DILocation(line: 305, column: 30, scope: !3184)
!3189 = !DILocation(line: 305, column: 38, scope: !3184)
!3190 = !DILocation(line: 305, column: 36, scope: !3184)
!3191 = !DILocation(line: 305, column: 44, scope: !3184)
!3192 = !DILocation(line: 305, column: 45, scope: !3184)
!3193 = !DILocation(line: 305, column: 47, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3184, file: !1677, discriminator: 1)
!3195 = !DILocation(line: 305, column: 45, scope: !3194)
!3196 = !DILocation(line: 305, column: 45, scope: !3197)
!3197 = !DILexicalBlockFile(scope: !3184, file: !1677, discriminator: 2)
!3198 = !DILocation(line: 305, column: 49, scope: !3197)
!3199 = !DILocation(line: 305, column: 40, scope: !3197)
!3200 = !DILocation(line: 305, column: 17, scope: !3197)
!3201 = !DILocation(line: 305, column: 54, scope: !3197)
!3202 = !DILocation(line: 306, column: 66, scope: !3184)
!3203 = !DILocation(line: 306, column: 56, scope: !3184)
!3204 = !DILocation(line: 306, column: 59, scope: !3184)
!3205 = !DILocation(line: 306, column: 28, scope: !3184)
!3206 = !DILocation(line: 306, column: 30, scope: !3184)
!3207 = !DILocation(line: 306, column: 38, scope: !3184)
!3208 = !DILocation(line: 306, column: 36, scope: !3184)
!3209 = !DILocation(line: 306, column: 44, scope: !3184)
!3210 = !DILocation(line: 306, column: 45, scope: !3184)
!3211 = !DILocation(line: 306, column: 47, scope: !3194)
!3212 = !DILocation(line: 306, column: 45, scope: !3194)
!3213 = !DILocation(line: 306, column: 45, scope: !3197)
!3214 = !DILocation(line: 306, column: 49, scope: !3197)
!3215 = !DILocation(line: 306, column: 40, scope: !3197)
!3216 = !DILocation(line: 306, column: 17, scope: !3197)
!3217 = !DILocation(line: 306, column: 54, scope: !3197)
!3218 = !DILocation(line: 307, column: 13, scope: !3184)
!3219 = !DILocation(line: 304, column: 37, scope: !3220)
!3220 = !DILexicalBlockFile(scope: !3179, file: !1677, discriminator: 2)
!3221 = !DILocation(line: 304, column: 13, scope: !3220)
!3222 = distinct !{!3222, !3223}
!3223 = !DILocation(line: 304, column: 13, scope: !3175)
!3224 = !DILocation(line: 308, column: 9, scope: !3175)
!3225 = !DILocation(line: 303, column: 33, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !3169, file: !1677, discriminator: 2)
!3227 = !DILocation(line: 303, column: 9, scope: !3226)
!3228 = distinct !{!3228, !3229}
!3229 = !DILocation(line: 303, column: 9, scope: !3143)
!3230 = !DILocation(line: 311, column: 45, scope: !3143)
!3231 = !DILocation(line: 311, column: 44, scope: !3143)
!3232 = !DILocation(line: 311, column: 18, scope: !3143)
!3233 = !DILocation(line: 311, column: 9, scope: !3143)
!3234 = !DILocation(line: 311, column: 21, scope: !3143)
!3235 = !DILocation(line: 311, column: 27, scope: !3143)
!3236 = !DILocation(line: 312, column: 61, scope: !3143)
!3237 = !DILocation(line: 312, column: 39, scope: !3143)
!3238 = !DILocation(line: 312, column: 18, scope: !3143)
!3239 = !DILocation(line: 312, column: 9, scope: !3143)
!3240 = !DILocation(line: 312, column: 21, scope: !3143)
!3241 = !DILocation(line: 312, column: 37, scope: !3143)
!3242 = !DILocation(line: 313, column: 38, scope: !3143)
!3243 = !DILocation(line: 313, column: 29, scope: !3143)
!3244 = !DILocation(line: 313, column: 50, scope: !3143)
!3245 = !DILocation(line: 313, column: 66, scope: !3143)
!3246 = !DILocation(line: 313, column: 9, scope: !3143)
!3247 = !DILocation(line: 316, column: 41, scope: !3143)
!3248 = !DILocation(line: 316, column: 19, scope: !3143)
!3249 = !DILocation(line: 316, column: 16, scope: !3143)
!3250 = !DILocation(line: 317, column: 5, scope: !3143)
!3251 = !DILocation(line: 294, column: 26, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !3139, file: !1677, discriminator: 2)
!3253 = !DILocation(line: 294, column: 5, scope: !3252)
!3254 = distinct !{!3254, !3255}
!3255 = !DILocation(line: 294, column: 5, scope: !3033)
!3256 = !DILocation(line: 318, column: 5, scope: !3033)
!3257 = distinct !{!3257, !3256}
!3258 = !DILocation(line: 318, column: 16, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3260, file: !1677, discriminator: 1)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !1677, line: 318, column: 14)
!3261 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 318, column: 8)
!3262 = !DILocation(line: 318, column: 23, scope: !3259)
!3263 = !DILocation(line: 318, column: 14, scope: !3259)
!3264 = !DILocation(line: 318, column: 87, scope: !3265)
!3265 = !DILexicalBlockFile(scope: !3266, file: !1677, discriminator: 2)
!3266 = distinct !DILexicalBlock(scope: !3260, file: !1677, line: 318, column: 85)
!3267 = !DILocation(line: 318, column: 157, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3265, file: !1677, discriminator: 4)
!3269 = !DILocation(line: 318, column: 157, scope: !3265)
!3270 = !DILocation(line: 318, column: 168, scope: !3271)
!3271 = !DILexicalBlockFile(scope: !3261, file: !1677, discriminator: 3)
!3272 = !DILocation(line: 320, column: 12, scope: !3033)
!3273 = !DILocation(line: 321, column: 12, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 321, column: 5)
!3275 = !DILocation(line: 321, column: 10, scope: !3274)
!3276 = !DILocation(line: 321, column: 17, scope: !3277)
!3277 = !DILexicalBlockFile(scope: !3278, file: !1677, discriminator: 1)
!3278 = distinct !DILexicalBlock(scope: !3274, file: !1677, line: 321, column: 5)
!3279 = !DILocation(line: 321, column: 19, scope: !3277)
!3280 = !DILocation(line: 321, column: 5, scope: !3277)
!3281 = !DILocation(line: 322, column: 55, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3278, file: !1677, line: 321, column: 29)
!3283 = !DILocation(line: 322, column: 54, scope: !3282)
!3284 = !DILocation(line: 322, column: 23, scope: !3282)
!3285 = !DILocation(line: 322, column: 9, scope: !3282)
!3286 = !DILocation(line: 322, column: 26, scope: !3282)
!3287 = !DILocation(line: 322, column: 32, scope: !3282)
!3288 = !DILocation(line: 323, column: 71, scope: !3282)
!3289 = !DILocation(line: 323, column: 44, scope: !3282)
!3290 = !DILocation(line: 323, column: 23, scope: !3282)
!3291 = !DILocation(line: 323, column: 9, scope: !3282)
!3292 = !DILocation(line: 323, column: 26, scope: !3282)
!3293 = !DILocation(line: 323, column: 42, scope: !3282)
!3294 = !DILocation(line: 324, column: 43, scope: !3282)
!3295 = !DILocation(line: 324, column: 29, scope: !3282)
!3296 = !DILocation(line: 324, column: 47, scope: !3282)
!3297 = !DILocation(line: 324, column: 49, scope: !3282)
!3298 = !DILocation(line: 324, column: 81, scope: !3282)
!3299 = !DILocation(line: 324, column: 67, scope: !3282)
!3300 = !DILocation(line: 324, column: 106, scope: !3282)
!3301 = !DILocation(line: 324, column: 91, scope: !3282)
!3302 = !DILocation(line: 324, column: 9, scope: !3282)
!3303 = !DILocation(line: 327, column: 46, scope: !3282)
!3304 = !DILocation(line: 327, column: 19, scope: !3282)
!3305 = !DILocation(line: 327, column: 16, scope: !3282)
!3306 = !DILocation(line: 328, column: 5, scope: !3282)
!3307 = !DILocation(line: 321, column: 25, scope: !3308)
!3308 = !DILexicalBlockFile(scope: !3278, file: !1677, discriminator: 2)
!3309 = !DILocation(line: 321, column: 5, scope: !3308)
!3310 = distinct !{!3310, !3311}
!3311 = !DILocation(line: 321, column: 5, scope: !3033)
!3312 = !DILocation(line: 329, column: 5, scope: !3033)
!3313 = distinct !{!3313, !3312}
!3314 = !DILocation(line: 329, column: 16, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3316, file: !1677, discriminator: 1)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !1677, line: 329, column: 14)
!3317 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 329, column: 8)
!3318 = !DILocation(line: 329, column: 23, scope: !3315)
!3319 = !DILocation(line: 329, column: 14, scope: !3315)
!3320 = !DILocation(line: 329, column: 97, scope: !3321)
!3321 = !DILexicalBlockFile(scope: !3322, file: !1677, discriminator: 2)
!3322 = distinct !DILexicalBlock(scope: !3316, file: !1677, line: 329, column: 95)
!3323 = !DILocation(line: 329, column: 167, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !3321, file: !1677, discriminator: 4)
!3325 = !DILocation(line: 329, column: 167, scope: !3321)
!3326 = !DILocation(line: 329, column: 178, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3317, file: !1677, discriminator: 3)
!3328 = !DILocation(line: 331, column: 12, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 331, column: 5)
!3330 = !DILocation(line: 331, column: 10, scope: !3329)
!3331 = !DILocation(line: 331, column: 17, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3333, file: !1677, discriminator: 1)
!3333 = distinct !DILexicalBlock(scope: !3329, file: !1677, line: 331, column: 5)
!3334 = !DILocation(line: 331, column: 19, scope: !3332)
!3335 = !DILocation(line: 331, column: 5, scope: !3332)
!3336 = !DILocation(line: 332, column: 11, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3333, file: !1677, line: 331, column: 29)
!3338 = !DILocation(line: 333, column: 16, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3337, file: !1677, line: 333, column: 9)
!3340 = !DILocation(line: 333, column: 14, scope: !3339)
!3341 = !DILocation(line: 333, column: 21, scope: !3342)
!3342 = !DILexicalBlockFile(scope: !3343, file: !1677, discriminator: 1)
!3343 = distinct !DILexicalBlock(scope: !3339, file: !1677, line: 333, column: 9)
!3344 = !DILocation(line: 333, column: 23, scope: !3342)
!3345 = !DILocation(line: 333, column: 9, scope: !3342)
!3346 = !DILocation(line: 334, column: 37, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3343, file: !1677, line: 333, column: 34)
!3348 = !DILocation(line: 334, column: 32, scope: !3347)
!3349 = !DILocation(line: 334, column: 13, scope: !3347)
!3350 = !DILocation(line: 334, column: 29, scope: !3347)
!3351 = !DILocation(line: 334, column: 35, scope: !3347)
!3352 = !DILocation(line: 335, column: 36, scope: !3347)
!3353 = !DILocation(line: 335, column: 18, scope: !3347)
!3354 = !DILocation(line: 335, column: 33, scope: !3347)
!3355 = !DILocation(line: 335, column: 15, scope: !3347)
!3356 = !DILocation(line: 336, column: 9, scope: !3347)
!3357 = !DILocation(line: 333, column: 30, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3343, file: !1677, discriminator: 2)
!3359 = !DILocation(line: 333, column: 9, scope: !3358)
!3360 = distinct !{!3360, !3361}
!3361 = !DILocation(line: 333, column: 9, scope: !3337)
!3362 = !DILocation(line: 337, column: 34, scope: !3337)
!3363 = !DILocation(line: 337, column: 25, scope: !3337)
!3364 = !DILocation(line: 337, column: 9, scope: !3337)
!3365 = !DILocation(line: 337, column: 32, scope: !3337)
!3366 = !DILocation(line: 338, column: 5, scope: !3337)
!3367 = !DILocation(line: 331, column: 25, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3333, file: !1677, discriminator: 2)
!3369 = !DILocation(line: 331, column: 5, scope: !3368)
!3370 = distinct !{!3370, !3371}
!3371 = !DILocation(line: 331, column: 5, scope: !3033)
!3372 = !DILocation(line: 342, column: 5, scope: !3033)
!3373 = !DILocation(line: 344, column: 12, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 344, column: 5)
!3375 = !DILocation(line: 344, column: 10, scope: !3374)
!3376 = !DILocation(line: 344, column: 17, scope: !3377)
!3377 = !DILexicalBlockFile(scope: !3378, file: !1677, discriminator: 1)
!3378 = distinct !DILexicalBlock(scope: !3374, file: !1677, line: 344, column: 5)
!3379 = !DILocation(line: 344, column: 19, scope: !3377)
!3380 = !DILocation(line: 344, column: 5, scope: !3377)
!3381 = !DILocation(line: 345, column: 31, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !1677, line: 345, column: 13)
!3383 = distinct !DILexicalBlock(scope: !3378, file: !1677, line: 344, column: 29)
!3384 = !DILocation(line: 345, column: 13, scope: !3382)
!3385 = !DILocation(line: 345, column: 34, scope: !3382)
!3386 = !DILocation(line: 345, column: 13, scope: !3383)
!3387 = !DILocation(line: 346, column: 20, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !1677, line: 346, column: 13)
!3389 = distinct !DILexicalBlock(scope: !3382, file: !1677, line: 345, column: 39)
!3390 = !DILocation(line: 346, column: 18, scope: !3388)
!3391 = !DILocation(line: 346, column: 25, scope: !3392)
!3392 = !DILexicalBlockFile(scope: !3393, file: !1677, discriminator: 1)
!3393 = distinct !DILexicalBlock(scope: !3388, file: !1677, line: 346, column: 13)
!3394 = !DILocation(line: 346, column: 55, scope: !3392)
!3395 = !DILocation(line: 346, column: 37, scope: !3392)
!3396 = !DILocation(line: 346, column: 36, scope: !3392)
!3397 = !DILocation(line: 346, column: 57, scope: !3392)
!3398 = !DILocation(line: 346, column: 32, scope: !3392)
!3399 = !DILocation(line: 346, column: 27, scope: !3392)
!3400 = !DILocation(line: 346, column: 13, scope: !3392)
!3401 = !DILocalVariable(name: "val1", scope: !3402, file: !1677, line: 347, type: !891)
!3402 = distinct !DILexicalBlock(scope: !3393, file: !1677, line: 346, column: 68)
!3403 = !DILocation(line: 347, column: 21, scope: !3402)
!3404 = !DILocalVariable(name: "val2", scope: !3402, file: !1677, line: 347, type: !891)
!3405 = !DILocation(line: 347, column: 27, scope: !3402)
!3406 = !DILocalVariable(name: "val3", scope: !3402, file: !1677, line: 347, type: !891)
!3407 = !DILocation(line: 347, column: 33, scope: !3402)
!3408 = !DILocalVariable(name: "steps", scope: !3402, file: !1677, line: 347, type: !891)
!3409 = !DILocation(line: 347, column: 39, scope: !3402)
!3410 = !DILocalVariable(name: "val", scope: !3402, file: !1677, line: 348, type: !891)
!3411 = !DILocation(line: 348, column: 21, scope: !3402)
!3412 = !DILocation(line: 348, column: 27, scope: !3402)
!3413 = !DILocation(line: 349, column: 44, scope: !3402)
!3414 = !DILocation(line: 349, column: 25, scope: !3402)
!3415 = !DILocation(line: 349, column: 23, scope: !3402)
!3416 = !DILocation(line: 350, column: 24, scope: !3402)
!3417 = !DILocation(line: 350, column: 30, scope: !3402)
!3418 = !DILocation(line: 350, column: 28, scope: !3402)
!3419 = !DILocation(line: 350, column: 22, scope: !3402)
!3420 = !DILocation(line: 351, column: 24, scope: !3402)
!3421 = !DILocation(line: 351, column: 21, scope: !3402)
!3422 = !DILocation(line: 352, column: 24, scope: !3402)
!3423 = !DILocation(line: 352, column: 30, scope: !3402)
!3424 = !DILocation(line: 352, column: 28, scope: !3402)
!3425 = !DILocation(line: 352, column: 22, scope: !3402)
!3426 = !DILocation(line: 353, column: 24, scope: !3402)
!3427 = !DILocation(line: 353, column: 30, scope: !3402)
!3428 = !DILocation(line: 353, column: 28, scope: !3402)
!3429 = !DILocation(line: 353, column: 22, scope: !3402)
!3430 = !DILocation(line: 354, column: 39, scope: !3402)
!3431 = !DILocation(line: 354, column: 47, scope: !3402)
!3432 = !DILocation(line: 354, column: 52, scope: !3402)
!3433 = !DILocation(line: 354, column: 44, scope: !3402)
!3434 = !DILocation(line: 354, column: 61, scope: !3402)
!3435 = !DILocation(line: 354, column: 66, scope: !3402)
!3436 = !DILocation(line: 354, column: 58, scope: !3402)
!3437 = !DILocation(line: 354, column: 34, scope: !3402)
!3438 = !DILocation(line: 354, column: 17, scope: !3402)
!3439 = !DILocation(line: 354, column: 31, scope: !3402)
!3440 = !DILocation(line: 354, column: 37, scope: !3402)
!3441 = !DILocation(line: 355, column: 13, scope: !3402)
!3442 = !DILocation(line: 346, column: 64, scope: !3443)
!3443 = !DILexicalBlockFile(scope: !3393, file: !1677, discriminator: 2)
!3444 = !DILocation(line: 346, column: 13, scope: !3443)
!3445 = distinct !{!3445, !3446}
!3446 = !DILocation(line: 346, column: 13, scope: !3389)
!3447 = !DILocation(line: 356, column: 9, scope: !3389)
!3448 = !DILocation(line: 357, column: 5, scope: !3383)
!3449 = !DILocation(line: 344, column: 25, scope: !3450)
!3450 = !DILexicalBlockFile(scope: !3378, file: !1677, discriminator: 2)
!3451 = !DILocation(line: 344, column: 5, scope: !3450)
!3452 = distinct !{!3452, !3453}
!3453 = !DILocation(line: 344, column: 5, scope: !3033)
!3454 = !DILocation(line: 360, column: 12, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 360, column: 5)
!3456 = !DILocation(line: 360, column: 10, scope: !3455)
!3457 = !DILocation(line: 360, column: 17, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3459, file: !1677, discriminator: 1)
!3459 = distinct !DILexicalBlock(scope: !3455, file: !1677, line: 360, column: 5)
!3460 = !DILocation(line: 360, column: 19, scope: !3458)
!3461 = !DILocation(line: 360, column: 5, scope: !3458)
!3462 = !DILocalVariable(name: "f", scope: !3463, file: !1677, line: 361, type: !888)
!3463 = distinct !DILexicalBlock(scope: !3459, file: !1677, line: 360, column: 29)
!3464 = !DILocation(line: 361, column: 15, scope: !3463)
!3465 = !DILocalVariable(name: "v", scope: !3463, file: !1677, line: 362, type: !888)
!3466 = !DILocation(line: 362, column: 15, scope: !3463)
!3467 = !DILocation(line: 363, column: 13, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3463, file: !1677, line: 363, column: 13)
!3469 = !DILocation(line: 363, column: 15, scope: !3468)
!3470 = !DILocation(line: 363, column: 13, scope: !3463)
!3471 = !DILocation(line: 364, column: 29, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3468, file: !1677, line: 363, column: 21)
!3473 = !DILocation(line: 364, column: 21, scope: !3472)
!3474 = !DILocation(line: 364, column: 31, scope: !3472)
!3475 = !DILocation(line: 364, column: 37, scope: !3472)
!3476 = !DILocation(line: 364, column: 17, scope: !3472)
!3477 = !DILocation(line: 364, column: 15, scope: !3472)
!3478 = !DILocation(line: 365, column: 26, scope: !3472)
!3479 = !DILocation(line: 365, column: 37, scope: !3472)
!3480 = !DILocation(line: 365, column: 35, scope: !3472)
!3481 = !DILocation(line: 365, column: 28, scope: !3472)
!3482 = !DILocation(line: 365, column: 18, scope: !3472)
!3483 = !DILocation(line: 365, column: 15, scope: !3472)
!3484 = !DILocation(line: 366, column: 9, scope: !3472)
!3485 = !DILocation(line: 367, column: 15, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3468, file: !1677, line: 366, column: 16)
!3487 = !DILocation(line: 369, column: 27, scope: !3463)
!3488 = !DILocation(line: 369, column: 22, scope: !3463)
!3489 = !DILocation(line: 369, column: 9, scope: !3463)
!3490 = !DILocation(line: 369, column: 25, scope: !3463)
!3491 = !DILocation(line: 370, column: 30, scope: !3463)
!3492 = !DILocation(line: 370, column: 25, scope: !3463)
!3493 = !DILocation(line: 370, column: 23, scope: !3463)
!3494 = !DILocation(line: 370, column: 9, scope: !3463)
!3495 = !DILocation(line: 370, column: 28, scope: !3463)
!3496 = !DILocation(line: 371, column: 5, scope: !3463)
!3497 = !DILocation(line: 360, column: 25, scope: !3498)
!3498 = !DILexicalBlockFile(scope: !3459, file: !1677, discriminator: 2)
!3499 = !DILocation(line: 360, column: 5, scope: !3498)
!3500 = distinct !{!3500, !3501}
!3501 = !DILocation(line: 360, column: 5, scope: !3033)
!3502 = !DILocation(line: 373, column: 12, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 373, column: 5)
!3504 = !DILocation(line: 373, column: 10, scope: !3503)
!3505 = !DILocation(line: 373, column: 17, scope: !3506)
!3506 = !DILexicalBlockFile(scope: !3507, file: !1677, discriminator: 1)
!3507 = distinct !DILexicalBlock(scope: !3503, file: !1677, line: 373, column: 5)
!3508 = !DILocation(line: 373, column: 19, scope: !3506)
!3509 = !DILocation(line: 373, column: 5, scope: !3506)
!3510 = !DILocation(line: 374, column: 38, scope: !3507)
!3511 = !DILocation(line: 374, column: 26, scope: !3507)
!3512 = !DILocation(line: 374, column: 41, scope: !3507)
!3513 = !DILocation(line: 374, column: 21, scope: !3507)
!3514 = !DILocation(line: 374, column: 9, scope: !3507)
!3515 = !DILocation(line: 374, column: 24, scope: !3507)
!3516 = !DILocation(line: 373, column: 26, scope: !3517)
!3517 = !DILexicalBlockFile(scope: !3507, file: !1677, discriminator: 2)
!3518 = !DILocation(line: 373, column: 5, scope: !3517)
!3519 = distinct !{!3519, !3520}
!3520 = !DILocation(line: 373, column: 5, scope: !3033)
!3521 = !DILocation(line: 376, column: 12, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 376, column: 5)
!3523 = !DILocation(line: 376, column: 10, scope: !3522)
!3524 = !DILocation(line: 376, column: 17, scope: !3525)
!3525 = !DILexicalBlockFile(scope: !3526, file: !1677, discriminator: 1)
!3526 = distinct !DILexicalBlock(scope: !3522, file: !1677, line: 376, column: 5)
!3527 = !DILocation(line: 376, column: 19, scope: !3525)
!3528 = !DILocation(line: 376, column: 5, scope: !3525)
!3529 = !DILocalVariable(name: "f", scope: !3530, file: !1677, line: 377, type: !890)
!3530 = distinct !DILexicalBlock(scope: !3526, file: !1677, line: 376, column: 30)
!3531 = !DILocation(line: 377, column: 16, scope: !3530)
!3532 = !DILocalVariable(name: "e", scope: !3530, file: !1677, line: 378, type: !891)
!3533 = !DILocation(line: 378, column: 13, scope: !3530)
!3534 = !DILocalVariable(name: "k", scope: !3530, file: !1677, line: 378, type: !891)
!3535 = !DILocation(line: 378, column: 16, scope: !3530)
!3536 = !DILocation(line: 380, column: 16, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3530, file: !1677, line: 380, column: 9)
!3538 = !DILocation(line: 380, column: 14, scope: !3537)
!3539 = !DILocation(line: 380, column: 21, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !3541, file: !1677, discriminator: 1)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !1677, line: 380, column: 9)
!3542 = !DILocation(line: 380, column: 23, scope: !3540)
!3543 = !DILocation(line: 380, column: 9, scope: !3540)
!3544 = !DILocation(line: 381, column: 19, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !1677, line: 380, column: 33)
!3546 = !DILocation(line: 381, column: 21, scope: !3545)
!3547 = !DILocation(line: 381, column: 17, scope: !3545)
!3548 = !DILocation(line: 381, column: 30, scope: !3545)
!3549 = !DILocation(line: 381, column: 32, scope: !3545)
!3550 = !DILocation(line: 381, column: 37, scope: !3545)
!3551 = !DILocation(line: 381, column: 26, scope: !3545)
!3552 = !DILocation(line: 381, column: 15, scope: !3545)
!3553 = !DILocation(line: 382, column: 22, scope: !3545)
!3554 = !DILocation(line: 382, column: 24, scope: !3545)
!3555 = !DILocation(line: 382, column: 17, scope: !3545)
!3556 = !DILocation(line: 382, column: 15, scope: !3545)
!3557 = !DILocation(line: 383, column: 17, scope: !3545)
!3558 = !DILocation(line: 383, column: 19, scope: !3545)
!3559 = !DILocation(line: 383, column: 15, scope: !3545)
!3560 = !DILocation(line: 384, column: 50, scope: !3545)
!3561 = !DILocation(line: 384, column: 42, scope: !3545)
!3562 = !DILocation(line: 384, column: 36, scope: !3545)
!3563 = !DILocation(line: 384, column: 13, scope: !3545)
!3564 = !DILocation(line: 384, column: 29, scope: !3545)
!3565 = !DILocation(line: 384, column: 31, scope: !3545)
!3566 = !DILocation(line: 384, column: 26, scope: !3545)
!3567 = !DILocation(line: 384, column: 39, scope: !3545)
!3568 = !DILocation(line: 385, column: 33, scope: !3545)
!3569 = !DILocation(line: 385, column: 13, scope: !3545)
!3570 = !DILocation(line: 385, column: 29, scope: !3545)
!3571 = !DILocation(line: 385, column: 26, scope: !3545)
!3572 = !DILocation(line: 385, column: 36, scope: !3545)
!3573 = !DILocation(line: 386, column: 13, scope: !3545)
!3574 = distinct !{!3574, !3573}
!3575 = !DILocation(line: 386, column: 118, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !3577, file: !1677, discriminator: 1)
!3577 = distinct !DILexicalBlock(scope: !3545, file: !1677, line: 386, column: 16)
!3578 = !DILocation(line: 389, column: 9, scope: !3545)
!3579 = !DILocation(line: 380, column: 29, scope: !3580)
!3580 = !DILexicalBlockFile(scope: !3541, file: !1677, discriminator: 2)
!3581 = !DILocation(line: 380, column: 9, scope: !3580)
!3582 = distinct !{!3582, !3583}
!3583 = !DILocation(line: 380, column: 9, scope: !3530)
!3584 = !DILocation(line: 390, column: 5, scope: !3530)
!3585 = !DILocation(line: 376, column: 26, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3526, file: !1677, discriminator: 2)
!3587 = !DILocation(line: 376, column: 5, scope: !3586)
!3588 = distinct !{!3588, !3589}
!3589 = !DILocation(line: 376, column: 5, scope: !3033)
!3590 = !DILocation(line: 392, column: 12, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3033, file: !1677, line: 392, column: 5)
!3592 = !DILocation(line: 392, column: 10, scope: !3591)
!3593 = !DILocation(line: 392, column: 17, scope: !3594)
!3594 = !DILexicalBlockFile(scope: !3595, file: !1677, discriminator: 1)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !1677, line: 392, column: 5)
!3596 = !DILocation(line: 392, column: 19, scope: !3594)
!3597 = !DILocation(line: 392, column: 5, scope: !3594)
!3598 = !DILocalVariable(name: "ci", scope: !3599, file: !1677, line: 393, type: !890)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !1677, line: 392, column: 29)
!3600 = !DILocation(line: 393, column: 16, scope: !3599)
!3601 = !DILocalVariable(name: "cs", scope: !3599, file: !1677, line: 393, type: !890)
!3602 = !DILocation(line: 393, column: 20, scope: !3599)
!3603 = !DILocalVariable(name: "ca", scope: !3599, file: !1677, line: 393, type: !890)
!3604 = !DILocation(line: 393, column: 24, scope: !3599)
!3605 = !DILocation(line: 394, column: 23, scope: !3599)
!3606 = !DILocation(line: 394, column: 14, scope: !3599)
!3607 = !DILocation(line: 394, column: 12, scope: !3599)
!3608 = !DILocation(line: 395, column: 31, scope: !3599)
!3609 = !DILocation(line: 395, column: 36, scope: !3599)
!3610 = !DILocation(line: 395, column: 34, scope: !3599)
!3611 = !DILocation(line: 395, column: 29, scope: !3599)
!3612 = !DILocation(line: 395, column: 20, scope: !3599)
!3613 = !DILocation(line: 395, column: 18, scope: !3599)
!3614 = !DILocation(line: 395, column: 12, scope: !3599)
!3615 = !DILocation(line: 396, column: 14, scope: !3599)
!3616 = !DILocation(line: 396, column: 19, scope: !3599)
!3617 = !DILocation(line: 396, column: 17, scope: !3599)
!3618 = !DILocation(line: 396, column: 12, scope: !3599)
!3619 = !DILocation(line: 403, column: 27, scope: !3599)
!3620 = !DILocation(line: 403, column: 19, scope: !3599)
!3621 = !DILocation(line: 403, column: 9, scope: !3599)
!3622 = !DILocation(line: 403, column: 25, scope: !3599)
!3623 = !DILocation(line: 404, column: 27, scope: !3599)
!3624 = !DILocation(line: 404, column: 19, scope: !3599)
!3625 = !DILocation(line: 404, column: 9, scope: !3599)
!3626 = !DILocation(line: 404, column: 25, scope: !3599)
!3627 = !DILocation(line: 405, column: 27, scope: !3599)
!3628 = !DILocation(line: 405, column: 32, scope: !3599)
!3629 = !DILocation(line: 405, column: 30, scope: !3599)
!3630 = !DILocation(line: 405, column: 19, scope: !3599)
!3631 = !DILocation(line: 405, column: 9, scope: !3599)
!3632 = !DILocation(line: 405, column: 25, scope: !3599)
!3633 = !DILocation(line: 406, column: 27, scope: !3599)
!3634 = !DILocation(line: 406, column: 32, scope: !3599)
!3635 = !DILocation(line: 406, column: 30, scope: !3599)
!3636 = !DILocation(line: 406, column: 19, scope: !3599)
!3637 = !DILocation(line: 406, column: 9, scope: !3599)
!3638 = !DILocation(line: 406, column: 25, scope: !3599)
!3639 = !DILocation(line: 408, column: 5, scope: !3599)
!3640 = !DILocation(line: 392, column: 25, scope: !3641)
!3641 = !DILexicalBlockFile(scope: !3595, file: !1677, discriminator: 2)
!3642 = !DILocation(line: 392, column: 5, scope: !3641)
!3643 = distinct !{!3643, !3644}
!3644 = !DILocation(line: 392, column: 5, scope: !3033)
!3645 = !DILocation(line: 409, column: 1, scope: !3033)
!3646 = !DILocalVariable(name: "i", scope: !1791, file: !1792, line: 47, type: !891)
!3647 = !DILocation(line: 47, column: 9, scope: !1791)
!3648 = !DILocalVariable(name: "value", scope: !1791, file: !1792, line: 47, type: !891)
!3649 = !DILocation(line: 47, column: 12, scope: !1791)
!3650 = !DILocalVariable(name: "exponent", scope: !1791, file: !1792, line: 47, type: !891)
!3651 = !DILocation(line: 47, column: 19, scope: !1791)
!3652 = !DILocalVariable(name: "exp2_base", scope: !1791, file: !1792, line: 55, type: !890)
!3653 = !DILocation(line: 55, column: 12, scope: !1791)
!3654 = !DILocalVariable(name: "exp2_val", scope: !1791, file: !1792, line: 56, type: !890)
!3655 = !DILocation(line: 56, column: 12, scope: !1791)
!3656 = !DILocalVariable(name: "pow43_val", scope: !1791, file: !1792, line: 57, type: !890)
!3657 = !DILocation(line: 57, column: 12, scope: !1791)
!3658 = !DILocation(line: 58, column: 12, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !1791, file: !1792, line: 58, column: 5)
!3660 = !DILocation(line: 58, column: 10, scope: !3659)
!3661 = !DILocation(line: 58, column: 17, scope: !3662)
!3662 = !DILexicalBlockFile(scope: !3663, file: !1792, discriminator: 1)
!3663 = distinct !DILexicalBlock(scope: !3659, file: !1792, line: 58, column: 5)
!3664 = !DILocation(line: 58, column: 19, scope: !3662)
!3665 = !DILocation(line: 58, column: 5, scope: !3662)
!3666 = !DILocation(line: 59, column: 24, scope: !3663)
!3667 = !DILocation(line: 59, column: 33, scope: !3663)
!3668 = !DILocation(line: 59, column: 28, scope: !3663)
!3669 = !DILocation(line: 59, column: 26, scope: !3663)
!3670 = !DILocation(line: 59, column: 19, scope: !3663)
!3671 = !DILocation(line: 59, column: 9, scope: !3663)
!3672 = !DILocation(line: 59, column: 22, scope: !3663)
!3673 = !DILocation(line: 58, column: 25, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3663, file: !1792, discriminator: 2)
!3675 = !DILocation(line: 58, column: 5, scope: !3674)
!3676 = distinct !{!3676, !3677}
!3677 = !DILocation(line: 58, column: 5, scope: !1791)
!3678 = !DILocation(line: 61, column: 12, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !1791, file: !1792, line: 61, column: 5)
!3680 = !DILocation(line: 61, column: 10, scope: !3679)
!3681 = !DILocation(line: 61, column: 17, scope: !3682)
!3682 = !DILexicalBlockFile(scope: !3683, file: !1792, discriminator: 1)
!3683 = distinct !DILexicalBlock(scope: !3679, file: !1792, line: 61, column: 5)
!3684 = !DILocation(line: 61, column: 19, scope: !3682)
!3685 = !DILocation(line: 61, column: 5, scope: !3682)
!3686 = !DILocalVariable(name: "f", scope: !3687, file: !1792, line: 62, type: !890)
!3687 = distinct !DILexicalBlock(scope: !3683, file: !1792, line: 61, column: 41)
!3688 = !DILocation(line: 62, column: 16, scope: !3687)
!3689 = !DILocalVariable(name: "fm", scope: !3687, file: !1792, line: 62, type: !890)
!3690 = !DILocation(line: 62, column: 19, scope: !3687)
!3691 = !DILocalVariable(name: "e", scope: !3687, file: !1792, line: 63, type: !891)
!3692 = !DILocation(line: 63, column: 13, scope: !3687)
!3693 = !DILocalVariable(name: "m", scope: !3687, file: !1792, line: 63, type: !891)
!3694 = !DILocation(line: 63, column: 16, scope: !3687)
!3695 = !DILocalVariable(name: "value", scope: !3687, file: !1792, line: 64, type: !890)
!3696 = !DILocation(line: 64, column: 16, scope: !3687)
!3697 = !DILocation(line: 64, column: 24, scope: !3687)
!3698 = !DILocation(line: 64, column: 26, scope: !3687)
!3699 = !DILocation(line: 65, column: 14, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3687, file: !1792, line: 65, column: 13)
!3701 = !DILocation(line: 65, column: 16, scope: !3700)
!3702 = !DILocation(line: 65, column: 21, scope: !3700)
!3703 = !DILocation(line: 65, column: 13, scope: !3687)
!3704 = !DILocation(line: 66, column: 25, scope: !3700)
!3705 = !DILocation(line: 66, column: 31, scope: !3700)
!3706 = !DILocation(line: 66, column: 46, scope: !3700)
!3707 = !DILocation(line: 66, column: 41, scope: !3700)
!3708 = !DILocation(line: 66, column: 39, scope: !3700)
!3709 = !DILocation(line: 66, column: 23, scope: !3700)
!3710 = !DILocation(line: 66, column: 13, scope: !3700)
!3711 = !DILocation(line: 67, column: 13, scope: !3687)
!3712 = !DILocation(line: 67, column: 34, scope: !3687)
!3713 = !DILocation(line: 67, column: 36, scope: !3687)
!3714 = !DILocation(line: 67, column: 25, scope: !3687)
!3715 = !DILocation(line: 67, column: 23, scope: !3687)
!3716 = !DILocation(line: 67, column: 11, scope: !3687)
!3717 = !DILocation(line: 68, column: 20, scope: !3687)
!3718 = !DILocation(line: 68, column: 14, scope: !3687)
!3719 = !DILocation(line: 68, column: 12, scope: !3687)
!3720 = !DILocation(line: 69, column: 20, scope: !3687)
!3721 = !DILocation(line: 69, column: 23, scope: !3687)
!3722 = !DILocation(line: 69, column: 13, scope: !3687)
!3723 = !DILocation(line: 69, column: 11, scope: !3687)
!3724 = !DILocation(line: 70, column: 11, scope: !3687)
!3725 = !DILocation(line: 73, column: 30, scope: !3687)
!3726 = !DILocation(line: 73, column: 25, scope: !3687)
!3727 = !DILocation(line: 73, column: 9, scope: !3687)
!3728 = !DILocation(line: 73, column: 28, scope: !3687)
!3729 = !DILocation(line: 74, column: 29, scope: !3687)
!3730 = !DILocation(line: 74, column: 28, scope: !3687)
!3731 = !DILocation(line: 74, column: 23, scope: !3687)
!3732 = !DILocation(line: 74, column: 9, scope: !3687)
!3733 = !DILocation(line: 74, column: 26, scope: !3687)
!3734 = !DILocation(line: 75, column: 5, scope: !3687)
!3735 = !DILocation(line: 61, column: 37, scope: !3736)
!3736 = !DILexicalBlockFile(scope: !3683, file: !1792, discriminator: 2)
!3737 = !DILocation(line: 61, column: 5, scope: !3736)
!3738 = distinct !{!3738, !3739}
!3739 = !DILocation(line: 61, column: 5, scope: !1791)
!3740 = !DILocation(line: 76, column: 19, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !1791, file: !1792, line: 76, column: 5)
!3742 = !DILocation(line: 76, column: 10, scope: !3741)
!3743 = !DILocation(line: 76, column: 24, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3745, file: !1792, discriminator: 1)
!3745 = distinct !DILexicalBlock(scope: !3741, file: !1792, line: 76, column: 5)
!3746 = !DILocation(line: 76, column: 33, scope: !3744)
!3747 = !DILocation(line: 76, column: 5, scope: !3744)
!3748 = !DILocation(line: 77, column: 13, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3750, file: !1792, line: 77, column: 13)
!3750 = distinct !DILexicalBlock(scope: !3745, file: !1792, line: 76, column: 52)
!3751 = !DILocation(line: 77, column: 22, scope: !3749)
!3752 = !DILocation(line: 77, column: 26, scope: !3753)
!3753 = !DILexicalBlockFile(scope: !3749, file: !1792, discriminator: 1)
!3754 = !DILocation(line: 77, column: 35, scope: !3753)
!3755 = !DILocation(line: 77, column: 40, scope: !3753)
!3756 = !DILocation(line: 77, column: 13, scope: !3753)
!3757 = !DILocation(line: 78, column: 23, scope: !3749)
!3758 = !DILocation(line: 78, column: 13, scope: !3749)
!3759 = !DILocation(line: 79, column: 20, scope: !3750)
!3760 = !DILocation(line: 79, column: 41, scope: !3750)
!3761 = !DILocation(line: 79, column: 50, scope: !3750)
!3762 = !DILocation(line: 79, column: 32, scope: !3750)
!3763 = !DILocation(line: 79, column: 30, scope: !3750)
!3764 = !DILocation(line: 79, column: 55, scope: !3750)
!3765 = !DILocation(line: 79, column: 18, scope: !3750)
!3766 = !DILocation(line: 80, column: 20, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3750, file: !1792, line: 80, column: 9)
!3768 = !DILocation(line: 80, column: 14, scope: !3767)
!3769 = !DILocation(line: 80, column: 25, scope: !3770)
!3770 = !DILexicalBlockFile(scope: !3771, file: !1792, discriminator: 1)
!3771 = distinct !DILexicalBlock(scope: !3767, file: !1792, line: 80, column: 9)
!3772 = !DILocation(line: 80, column: 31, scope: !3770)
!3773 = !DILocation(line: 80, column: 9, scope: !3770)
!3774 = !DILocalVariable(name: "f", scope: !3775, file: !1792, line: 81, type: !890)
!3775 = distinct !DILexicalBlock(scope: !3771, file: !1792, line: 80, column: 46)
!3776 = !DILocation(line: 81, column: 20, scope: !3775)
!3777 = !DILocation(line: 81, column: 34, scope: !3775)
!3778 = !DILocation(line: 81, column: 24, scope: !3775)
!3779 = !DILocation(line: 81, column: 43, scope: !3775)
!3780 = !DILocation(line: 81, column: 41, scope: !3775)
!3781 = !DILocation(line: 82, column: 52, scope: !3775)
!3782 = !DILocation(line: 82, column: 54, scope: !3775)
!3783 = !DILocation(line: 82, column: 76, scope: !3784)
!3784 = !DILexicalBlockFile(scope: !3775, file: !1792, discriminator: 1)
!3785 = !DILocation(line: 82, column: 69, scope: !3784)
!3786 = !DILocation(line: 82, column: 52, scope: !3784)
!3787 = !DILocation(line: 82, column: 52, scope: !3788)
!3788 = !DILexicalBlockFile(scope: !3775, file: !1792, discriminator: 2)
!3789 = !DILocation(line: 82, column: 52, scope: !3790)
!3790 = !DILexicalBlockFile(scope: !3775, file: !1792, discriminator: 3)
!3791 = !DILocation(line: 82, column: 51, scope: !3790)
!3792 = !DILocation(line: 82, column: 42, scope: !3790)
!3793 = !DILocation(line: 82, column: 13, scope: !3790)
!3794 = !DILocation(line: 82, column: 32, scope: !3790)
!3795 = !DILocation(line: 82, column: 49, scope: !3790)
!3796 = !DILocation(line: 83, column: 51, scope: !3775)
!3797 = !DILocation(line: 83, column: 42, scope: !3775)
!3798 = !DILocation(line: 83, column: 13, scope: !3775)
!3799 = !DILocation(line: 83, column: 32, scope: !3775)
!3800 = !DILocation(line: 83, column: 49, scope: !3775)
!3801 = !DILocation(line: 84, column: 9, scope: !3775)
!3802 = !DILocation(line: 80, column: 42, scope: !3803)
!3803 = !DILexicalBlockFile(scope: !3771, file: !1792, discriminator: 2)
!3804 = !DILocation(line: 80, column: 9, scope: !3803)
!3805 = distinct !{!3805, !3806}
!3806 = !DILocation(line: 80, column: 9, scope: !3750)
!3807 = !DILocation(line: 85, column: 56, scope: !3750)
!3808 = !DILocation(line: 85, column: 37, scope: !3750)
!3809 = !DILocation(line: 85, column: 25, scope: !3750)
!3810 = !DILocation(line: 85, column: 9, scope: !3750)
!3811 = !DILocation(line: 85, column: 35, scope: !3750)
!3812 = !DILocation(line: 86, column: 56, scope: !3750)
!3813 = !DILocation(line: 86, column: 37, scope: !3750)
!3814 = !DILocation(line: 86, column: 25, scope: !3750)
!3815 = !DILocation(line: 86, column: 9, scope: !3750)
!3816 = !DILocation(line: 86, column: 35, scope: !3750)
!3817 = !DILocation(line: 87, column: 5, scope: !3750)
!3818 = !DILocation(line: 76, column: 48, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !3745, file: !1792, discriminator: 2)
!3820 = !DILocation(line: 76, column: 5, scope: !3819)
!3821 = distinct !{!3821, !3822}
!3822 = !DILocation(line: 76, column: 5, scope: !1791)
!3823 = !DILocation(line: 88, column: 1, scope: !1791)
!3824 = distinct !DISubprogram(name: "mp_decode_frame", scope: !1677, file: !1677, line: 1560, type: !3825, isLocal: true, isDefinition: true, scopeLine: 1562, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{!891, !1859, !916, !1482, !891}
!3827 = !DILocalVariable(name: "s", arg: 1, scope: !3824, file: !1677, line: 1560, type: !1859)
!3828 = !DILocation(line: 1560, column: 46, scope: !3824)
!3829 = !DILocalVariable(name: "samples", arg: 2, scope: !3824, file: !1677, line: 1560, type: !916)
!3830 = !DILocation(line: 1560, column: 59, scope: !3824)
!3831 = !DILocalVariable(name: "buf", arg: 3, scope: !3824, file: !1677, line: 1561, type: !1482)
!3832 = !DILocation(line: 1561, column: 43, scope: !3824)
!3833 = !DILocalVariable(name: "buf_size", arg: 4, scope: !3824, file: !1677, line: 1561, type: !891)
!3834 = !DILocation(line: 1561, column: 52, scope: !3824)
!3835 = !DILocalVariable(name: "i", scope: !3824, file: !1677, line: 1563, type: !891)
!3836 = !DILocation(line: 1563, column: 9, scope: !3824)
!3837 = !DILocalVariable(name: "nb_frames", scope: !3824, file: !1677, line: 1563, type: !891)
!3838 = !DILocation(line: 1563, column: 12, scope: !3824)
!3839 = !DILocalVariable(name: "ch", scope: !3824, file: !1677, line: 1563, type: !891)
!3840 = !DILocation(line: 1563, column: 23, scope: !3824)
!3841 = !DILocalVariable(name: "ret", scope: !3824, file: !1677, line: 1563, type: !891)
!3842 = !DILocation(line: 1563, column: 27, scope: !3824)
!3843 = !DILocalVariable(name: "samples_ptr", scope: !3824, file: !1677, line: 1564, type: !917)
!3844 = !DILocation(line: 1564, column: 14, scope: !3824)
!3845 = !DILocation(line: 1566, column: 20, scope: !3824)
!3846 = !DILocation(line: 1566, column: 23, scope: !3824)
!3847 = !DILocation(line: 1566, column: 27, scope: !3824)
!3848 = !DILocation(line: 1566, column: 31, scope: !3824)
!3849 = !DILocation(line: 1566, column: 37, scope: !3824)
!3850 = !DILocation(line: 1566, column: 46, scope: !3824)
!3851 = !DILocation(line: 1566, column: 51, scope: !3824)
!3852 = !DILocation(line: 1566, column: 5, scope: !3824)
!3853 = !DILocation(line: 1569, column: 9, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3824, file: !1677, line: 1569, column: 9)
!3855 = !DILocation(line: 1569, column: 12, scope: !3854)
!3856 = !DILocation(line: 1569, column: 9, scope: !3824)
!3857 = !DILocation(line: 1570, column: 20, scope: !3854)
!3858 = !DILocation(line: 1570, column: 23, scope: !3854)
!3859 = !DILocation(line: 1570, column: 9, scope: !3854)
!3860 = !DILocation(line: 1572, column: 12, scope: !3824)
!3861 = !DILocation(line: 1572, column: 15, scope: !3824)
!3862 = !DILocation(line: 1572, column: 5, scope: !3824)
!3863 = !DILocation(line: 1574, column: 9, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3824, file: !1677, line: 1572, column: 22)
!3865 = !DILocation(line: 1574, column: 12, scope: !3864)
!3866 = !DILocation(line: 1574, column: 19, scope: !3864)
!3867 = !DILocation(line: 1574, column: 30, scope: !3864)
!3868 = !DILocation(line: 1575, column: 38, scope: !3864)
!3869 = !DILocation(line: 1575, column: 21, scope: !3864)
!3870 = !DILocation(line: 1575, column: 19, scope: !3864)
!3871 = !DILocation(line: 1576, column: 9, scope: !3864)
!3872 = !DILocation(line: 1578, column: 9, scope: !3864)
!3873 = !DILocation(line: 1578, column: 12, scope: !3864)
!3874 = !DILocation(line: 1578, column: 19, scope: !3864)
!3875 = !DILocation(line: 1578, column: 30, scope: !3864)
!3876 = !DILocation(line: 1579, column: 38, scope: !3864)
!3877 = !DILocation(line: 1579, column: 21, scope: !3864)
!3878 = !DILocation(line: 1579, column: 19, scope: !3864)
!3879 = !DILocation(line: 1580, column: 9, scope: !3864)
!3880 = !DILocation(line: 1582, column: 32, scope: !3864)
!3881 = !DILocation(line: 1582, column: 35, scope: !3864)
!3882 = !DILocation(line: 1582, column: 9, scope: !3864)
!3883 = !DILocation(line: 1582, column: 12, scope: !3864)
!3884 = !DILocation(line: 1582, column: 19, scope: !3864)
!3885 = !DILocation(line: 1582, column: 30, scope: !3864)
!3886 = !DILocation(line: 1584, column: 38, scope: !3864)
!3887 = !DILocation(line: 1584, column: 21, scope: !3864)
!3888 = !DILocation(line: 1584, column: 19, scope: !3864)
!3889 = !DILocation(line: 1586, column: 9, scope: !3864)
!3890 = !DILocation(line: 1586, column: 12, scope: !3864)
!3891 = !DILocation(line: 1586, column: 25, scope: !3864)
!3892 = !DILocation(line: 1587, column: 13, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3864, file: !1677, line: 1587, column: 13)
!3894 = !DILocation(line: 1587, column: 16, scope: !3893)
!3895 = !DILocation(line: 1587, column: 22, scope: !3893)
!3896 = !DILocation(line: 1587, column: 13, scope: !3864)
!3897 = !DILocation(line: 1588, column: 29, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3893, file: !1677, line: 1587, column: 30)
!3899 = !DILocation(line: 1588, column: 32, scope: !3898)
!3900 = !DILocation(line: 1588, column: 13, scope: !3898)
!3901 = !DILocation(line: 1589, column: 33, scope: !3898)
!3902 = !DILocation(line: 1589, column: 36, scope: !3898)
!3903 = !DILocation(line: 1589, column: 18, scope: !3898)
!3904 = !DILocation(line: 1589, column: 40, scope: !3898)
!3905 = !DILocation(line: 1589, column: 48, scope: !3898)
!3906 = !DILocation(line: 1589, column: 51, scope: !3898)
!3907 = !DILocation(line: 1589, column: 46, scope: !3898)
!3908 = !DILocation(line: 1589, column: 15, scope: !3898)
!3909 = !DILocation(line: 1590, column: 17, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3898, file: !1677, line: 1590, column: 17)
!3911 = !DILocation(line: 1590, column: 19, scope: !3910)
!3912 = !DILocation(line: 1590, column: 24, scope: !3910)
!3913 = !DILocation(line: 1590, column: 27, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3910, file: !1677, discriminator: 1)
!3915 = !DILocation(line: 1590, column: 29, scope: !3914)
!3916 = !DILocation(line: 1590, column: 17, scope: !3914)
!3917 = !DILocation(line: 1591, column: 25, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3910, file: !1677, line: 1590, column: 37)
!3919 = !DILocation(line: 1591, column: 28, scope: !3918)
!3920 = !DILocation(line: 1591, column: 17, scope: !3918)
!3921 = !DILocation(line: 1591, column: 38, scope: !3918)
!3922 = !DILocation(line: 1591, column: 41, scope: !3918)
!3923 = !DILocation(line: 1591, column: 44, scope: !3918)
!3924 = !DILocation(line: 1591, column: 70, scope: !3918)
!3925 = !DILocation(line: 1591, column: 73, scope: !3918)
!3926 = !DILocation(line: 1591, column: 54, scope: !3918)
!3927 = !DILocation(line: 1591, column: 76, scope: !3918)
!3928 = !DILocation(line: 1591, column: 51, scope: !3918)
!3929 = !DILocation(line: 1591, column: 82, scope: !3918)
!3930 = !DILocation(line: 1591, column: 17, scope: !3931)
!3931 = !DILexicalBlockFile(scope: !3918, file: !1677, discriminator: 1)
!3932 = !DILocation(line: 1592, column: 34, scope: !3918)
!3933 = !DILocation(line: 1592, column: 17, scope: !3918)
!3934 = !DILocation(line: 1592, column: 20, scope: !3918)
!3935 = !DILocation(line: 1592, column: 33, scope: !3918)
!3936 = !DILocation(line: 1593, column: 13, scope: !3918)
!3937 = !DILocation(line: 1594, column: 24, scope: !3910)
!3938 = !DILocation(line: 1594, column: 27, scope: !3910)
!3939 = !DILocation(line: 1594, column: 67, scope: !3910)
!3940 = !DILocation(line: 1594, column: 17, scope: !3910)
!3941 = !DILocation(line: 1595, column: 13, scope: !3898)
!3942 = !DILocation(line: 1595, column: 16, scope: !3898)
!3943 = !DILocation(line: 1595, column: 21, scope: !3898)
!3944 = !DILocation(line: 1595, column: 24, scope: !3898)
!3945 = !DILocation(line: 1596, column: 13, scope: !3898)
!3946 = !DILocation(line: 1596, column: 16, scope: !3898)
!3947 = !DILocation(line: 1596, column: 22, scope: !3898)
!3948 = !DILocation(line: 1596, column: 29, scope: !3898)
!3949 = !DILocation(line: 1597, column: 13, scope: !3898)
!3950 = !DILocation(line: 1597, column: 16, scope: !3898)
!3951 = !DILocation(line: 1597, column: 26, scope: !3898)
!3952 = !DILocation(line: 1598, column: 9, scope: !3898)
!3953 = !DILocation(line: 1600, column: 25, scope: !3864)
!3954 = !DILocation(line: 1600, column: 28, scope: !3864)
!3955 = !DILocation(line: 1600, column: 9, scope: !3864)
!3956 = !DILocation(line: 1602, column: 29, scope: !3864)
!3957 = !DILocation(line: 1602, column: 32, scope: !3864)
!3958 = !DILocation(line: 1602, column: 14, scope: !3864)
!3959 = !DILocation(line: 1602, column: 36, scope: !3864)
!3960 = !DILocation(line: 1602, column: 44, scope: !3864)
!3961 = !DILocation(line: 1602, column: 47, scope: !3864)
!3962 = !DILocation(line: 1602, column: 42, scope: !3864)
!3963 = !DILocation(line: 1602, column: 11, scope: !3864)
!3964 = !DILocation(line: 1603, column: 13, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3864, file: !1677, line: 1603, column: 13)
!3966 = !DILocation(line: 1603, column: 15, scope: !3965)
!3967 = !DILocation(line: 1603, column: 19, scope: !3965)
!3968 = !DILocation(line: 1603, column: 22, scope: !3969)
!3969 = !DILexicalBlockFile(scope: !3965, file: !1677, discriminator: 1)
!3970 = !DILocation(line: 1603, column: 24, scope: !3969)
!3971 = !DILocation(line: 1603, column: 30, scope: !3969)
!3972 = !DILocation(line: 1603, column: 33, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3965, file: !1677, discriminator: 2)
!3974 = !DILocation(line: 1603, column: 43, scope: !3973)
!3975 = !DILocation(line: 1603, column: 13, scope: !3973)
!3976 = !DILocation(line: 1604, column: 17, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !1677, line: 1604, column: 17)
!3978 = distinct !DILexicalBlock(scope: !3965, file: !1677, line: 1603, column: 48)
!3979 = !DILocation(line: 1604, column: 19, scope: !3977)
!3980 = !DILocation(line: 1604, column: 17, scope: !3978)
!3981 = !DILocation(line: 1605, column: 24, scope: !3977)
!3982 = !DILocation(line: 1605, column: 27, scope: !3977)
!3983 = !DILocation(line: 1605, column: 67, scope: !3977)
!3984 = !DILocation(line: 1605, column: 17, scope: !3977)
!3985 = !DILocation(line: 1606, column: 27, scope: !3978)
!3986 = !DILocation(line: 1606, column: 36, scope: !3978)
!3987 = !DILocation(line: 1606, column: 24, scope: !3978)
!3988 = !DILocation(line: 1606, column: 18, scope: !3978)
!3989 = !DILocation(line: 1606, column: 44, scope: !3990)
!3990 = !DILexicalBlockFile(scope: !3978, file: !1677, discriminator: 1)
!3991 = !DILocation(line: 1606, column: 53, scope: !3990)
!3992 = !DILocation(line: 1606, column: 18, scope: !3990)
!3993 = !DILocation(line: 1606, column: 18, scope: !3994)
!3994 = !DILexicalBlockFile(scope: !3978, file: !1677, discriminator: 2)
!3995 = !DILocation(line: 1606, column: 18, scope: !3996)
!3996 = !DILexicalBlockFile(scope: !3978, file: !1677, discriminator: 3)
!3997 = !DILocation(line: 1606, column: 15, scope: !3996)
!3998 = !DILocation(line: 1607, column: 9, scope: !3978)
!3999 = !DILocation(line: 1609, column: 16, scope: !3864)
!4000 = !DILocation(line: 1609, column: 19, scope: !3864)
!4001 = !DILocation(line: 1609, column: 30, scope: !3864)
!4002 = !DILocation(line: 1609, column: 33, scope: !3864)
!4003 = !DILocation(line: 1609, column: 28, scope: !3864)
!4004 = !DILocation(line: 1609, column: 48, scope: !3864)
!4005 = !DILocation(line: 1609, column: 51, scope: !3864)
!4006 = !DILocation(line: 1609, column: 54, scope: !3864)
!4007 = !DILocation(line: 1609, column: 63, scope: !3864)
!4008 = !DILocation(line: 1609, column: 61, scope: !3864)
!4009 = !DILocation(line: 1609, column: 72, scope: !3864)
!4010 = !DILocation(line: 1609, column: 78, scope: !3864)
!4011 = !DILocation(line: 1609, column: 76, scope: !3864)
!4012 = !DILocation(line: 1609, column: 81, scope: !3864)
!4013 = !DILocation(line: 1609, column: 9, scope: !3864)
!4014 = !DILocation(line: 1610, column: 29, scope: !3864)
!4015 = !DILocation(line: 1610, column: 9, scope: !3864)
!4016 = !DILocation(line: 1610, column: 12, scope: !3864)
!4017 = !DILocation(line: 1610, column: 26, scope: !3864)
!4018 = !DILocation(line: 1611, column: 5, scope: !3864)
!4019 = !DILocation(line: 1613, column: 8, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3824, file: !1677, line: 1613, column: 8)
!4021 = !DILocation(line: 1613, column: 18, scope: !4020)
!4022 = !DILocation(line: 1613, column: 8, scope: !3824)
!4023 = !DILocation(line: 1614, column: 16, scope: !4020)
!4024 = !DILocation(line: 1614, column: 9, scope: !4020)
!4025 = !DILocation(line: 1617, column: 10, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3824, file: !1677, line: 1617, column: 9)
!4027 = !DILocation(line: 1617, column: 9, scope: !3824)
!4028 = !DILocation(line: 1618, column: 9, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4026, file: !1677, line: 1617, column: 19)
!4030 = distinct !{!4030, !4028}
!4031 = !DILocation(line: 1618, column: 20, scope: !4032)
!4032 = !DILexicalBlockFile(scope: !4033, file: !1677, discriminator: 1)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !1677, line: 1618, column: 18)
!4034 = distinct !DILexicalBlock(scope: !4029, file: !1677, line: 1618, column: 12)
!4035 = !DILocation(line: 1618, column: 23, scope: !4032)
!4036 = !DILocation(line: 1618, column: 19, scope: !4032)
!4037 = !DILocation(line: 1618, column: 18, scope: !4032)
!4038 = !DILocation(line: 1618, column: 33, scope: !4039)
!4039 = !DILexicalBlockFile(scope: !4040, file: !1677, discriminator: 2)
!4040 = distinct !DILexicalBlock(scope: !4033, file: !1677, line: 1618, column: 31)
!4041 = !DILocation(line: 1618, column: 104, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !4039, file: !1677, discriminator: 4)
!4043 = !DILocation(line: 1618, column: 104, scope: !4039)
!4044 = !DILocation(line: 1618, column: 115, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !4034, file: !1677, discriminator: 3)
!4046 = !DILocation(line: 1619, column: 32, scope: !4029)
!4047 = !DILocation(line: 1619, column: 35, scope: !4029)
!4048 = !DILocation(line: 1619, column: 42, scope: !4029)
!4049 = !DILocation(line: 1619, column: 9, scope: !4029)
!4050 = !DILocation(line: 1619, column: 12, scope: !4029)
!4051 = !DILocation(line: 1619, column: 19, scope: !4029)
!4052 = !DILocation(line: 1619, column: 30, scope: !4029)
!4053 = !DILocation(line: 1620, column: 34, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4029, file: !1677, line: 1620, column: 13)
!4055 = !DILocation(line: 1620, column: 37, scope: !4054)
!4056 = !DILocation(line: 1620, column: 44, scope: !4054)
!4057 = !DILocation(line: 1620, column: 47, scope: !4054)
!4058 = !DILocation(line: 1620, column: 20, scope: !4054)
!4059 = !DILocation(line: 1620, column: 18, scope: !4054)
!4060 = !DILocation(line: 1620, column: 58, scope: !4054)
!4061 = !DILocation(line: 1620, column: 13, scope: !4029)
!4062 = !DILocation(line: 1621, column: 20, scope: !4054)
!4063 = !DILocation(line: 1621, column: 13, scope: !4054)
!4064 = !DILocation(line: 1622, column: 31, scope: !4029)
!4065 = !DILocation(line: 1622, column: 34, scope: !4029)
!4066 = !DILocation(line: 1622, column: 41, scope: !4029)
!4067 = !DILocation(line: 1622, column: 19, scope: !4029)
!4068 = !DILocation(line: 1622, column: 17, scope: !4029)
!4069 = !DILocation(line: 1623, column: 5, scope: !4029)
!4070 = !DILocation(line: 1626, column: 13, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3824, file: !1677, line: 1626, column: 5)
!4072 = !DILocation(line: 1626, column: 10, scope: !4071)
!4073 = !DILocation(line: 1626, column: 18, scope: !4074)
!4074 = !DILexicalBlockFile(scope: !4075, file: !1677, discriminator: 1)
!4075 = distinct !DILexicalBlock(scope: !4071, file: !1677, line: 1626, column: 5)
!4076 = !DILocation(line: 1626, column: 23, scope: !4074)
!4077 = !DILocation(line: 1626, column: 26, scope: !4074)
!4078 = !DILocation(line: 1626, column: 21, scope: !4074)
!4079 = !DILocation(line: 1626, column: 5, scope: !4074)
!4080 = !DILocalVariable(name: "sample_stride", scope: !4081, file: !1677, line: 1627, type: !891)
!4081 = distinct !DILexicalBlock(scope: !4075, file: !1677, line: 1626, column: 45)
!4082 = !DILocation(line: 1627, column: 13, scope: !4081)
!4083 = !DILocation(line: 1628, column: 13, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4081, file: !1677, line: 1628, column: 13)
!4085 = !DILocation(line: 1628, column: 16, scope: !4084)
!4086 = !DILocation(line: 1628, column: 23, scope: !4084)
!4087 = !DILocation(line: 1628, column: 34, scope: !4084)
!4088 = !DILocation(line: 1628, column: 13, scope: !4081)
!4089 = !DILocation(line: 1629, column: 35, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4084, file: !1677, line: 1628, column: 57)
!4091 = !DILocation(line: 1629, column: 27, scope: !4090)
!4092 = !DILocation(line: 1629, column: 25, scope: !4090)
!4093 = !DILocation(line: 1630, column: 27, scope: !4090)
!4094 = !DILocation(line: 1631, column: 9, scope: !4090)
!4095 = !DILocation(line: 1632, column: 27, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4084, file: !1677, line: 1631, column: 16)
!4097 = !DILocation(line: 1632, column: 40, scope: !4096)
!4098 = !DILocation(line: 1632, column: 38, scope: !4096)
!4099 = !DILocation(line: 1632, column: 25, scope: !4096)
!4100 = !DILocation(line: 1633, column: 29, scope: !4096)
!4101 = !DILocation(line: 1633, column: 32, scope: !4096)
!4102 = !DILocation(line: 1633, column: 27, scope: !4096)
!4103 = !DILocation(line: 1635, column: 16, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4081, file: !1677, line: 1635, column: 9)
!4105 = !DILocation(line: 1635, column: 14, scope: !4104)
!4106 = !DILocation(line: 1635, column: 21, scope: !4107)
!4107 = !DILexicalBlockFile(scope: !4108, file: !1677, discriminator: 1)
!4108 = distinct !DILexicalBlock(scope: !4104, file: !1677, line: 1635, column: 9)
!4109 = !DILocation(line: 1635, column: 25, scope: !4107)
!4110 = !DILocation(line: 1635, column: 23, scope: !4107)
!4111 = !DILocation(line: 1635, column: 9, scope: !4107)
!4112 = !DILocation(line: 1636, column: 40, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4108, file: !1677, line: 1635, column: 41)
!4114 = !DILocation(line: 1636, column: 43, scope: !4113)
!4115 = !DILocation(line: 1636, column: 64, scope: !4113)
!4116 = !DILocation(line: 1636, column: 51, scope: !4113)
!4117 = !DILocation(line: 1636, column: 54, scope: !4113)
!4118 = !DILocation(line: 1637, column: 63, scope: !4113)
!4119 = !DILocation(line: 1637, column: 43, scope: !4113)
!4120 = !DILocation(line: 1637, column: 46, scope: !4113)
!4121 = !DILocation(line: 1639, column: 42, scope: !4113)
!4122 = !DILocation(line: 1639, column: 45, scope: !4113)
!4123 = !DILocation(line: 1639, column: 59, scope: !4113)
!4124 = !DILocation(line: 1640, column: 41, scope: !4113)
!4125 = !DILocation(line: 1640, column: 74, scope: !4113)
!4126 = !DILocation(line: 1640, column: 56, scope: !4113)
!4127 = !DILocation(line: 1640, column: 70, scope: !4113)
!4128 = !DILocation(line: 1640, column: 59, scope: !4113)
!4129 = !DILocation(line: 1636, column: 13, scope: !4113)
!4130 = !DILocation(line: 1641, column: 33, scope: !4113)
!4131 = !DILocation(line: 1641, column: 31, scope: !4113)
!4132 = !DILocation(line: 1641, column: 25, scope: !4113)
!4133 = !DILocation(line: 1642, column: 9, scope: !4113)
!4134 = !DILocation(line: 1635, column: 37, scope: !4135)
!4135 = !DILexicalBlockFile(scope: !4108, file: !1677, discriminator: 2)
!4136 = !DILocation(line: 1635, column: 9, scope: !4135)
!4137 = distinct !{!4137, !4138}
!4138 = !DILocation(line: 1635, column: 9, scope: !4081)
!4139 = !DILocation(line: 1643, column: 5, scope: !4081)
!4140 = !DILocation(line: 1626, column: 41, scope: !4141)
!4141 = !DILexicalBlockFile(scope: !4075, file: !1677, discriminator: 2)
!4142 = !DILocation(line: 1626, column: 5, scope: !4141)
!4143 = distinct !{!4143, !4144}
!4144 = !DILocation(line: 1626, column: 5, scope: !3824)
!4145 = !DILocation(line: 1645, column: 12, scope: !3824)
!4146 = !DILocation(line: 1645, column: 22, scope: !3824)
!4147 = !DILocation(line: 1645, column: 27, scope: !3824)
!4148 = !DILocation(line: 1645, column: 47, scope: !3824)
!4149 = !DILocation(line: 1645, column: 50, scope: !3824)
!4150 = !DILocation(line: 1645, column: 45, scope: !3824)
!4151 = !DILocation(line: 1645, column: 5, scope: !3824)
!4152 = !DILocation(line: 1646, column: 1, scope: !3824)
!4153 = distinct !DISubprogram(name: "init_get_bits", scope: !1882, file: !1882, line: 615, type: !4154, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{!891, !4156, !1482, !891}
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64, align: 64)
!4157 = !DILocalVariable(name: "s", arg: 1, scope: !4153, file: !1882, line: 615, type: !4156)
!4158 = !DILocation(line: 615, column: 48, scope: !4153)
!4159 = !DILocalVariable(name: "buffer", arg: 2, scope: !4153, file: !1882, line: 615, type: !1482)
!4160 = !DILocation(line: 615, column: 66, scope: !4153)
!4161 = !DILocalVariable(name: "bit_size", arg: 3, scope: !4153, file: !1882, line: 616, type: !891)
!4162 = !DILocation(line: 616, column: 37, scope: !4153)
!4163 = !DILocalVariable(name: "buffer_size", scope: !4153, file: !1882, line: 618, type: !891)
!4164 = !DILocation(line: 618, column: 9, scope: !4153)
!4165 = !DILocalVariable(name: "ret", scope: !4153, file: !1882, line: 619, type: !891)
!4166 = !DILocation(line: 619, column: 9, scope: !4153)
!4167 = !DILocation(line: 621, column: 9, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4153, file: !1882, line: 621, column: 9)
!4169 = !DILocation(line: 621, column: 18, scope: !4168)
!4170 = !DILocation(line: 621, column: 64, scope: !4168)
!4171 = !DILocation(line: 621, column: 67, scope: !4172)
!4172 = !DILexicalBlockFile(scope: !4168, file: !1882, discriminator: 1)
!4173 = !DILocation(line: 621, column: 76, scope: !4172)
!4174 = !DILocation(line: 621, column: 80, scope: !4172)
!4175 = !DILocation(line: 621, column: 84, scope: !4176)
!4176 = !DILexicalBlockFile(scope: !4168, file: !1882, discriminator: 2)
!4177 = !DILocation(line: 621, column: 9, scope: !4176)
!4178 = !DILocation(line: 622, column: 18, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4168, file: !1882, line: 621, column: 92)
!4180 = !DILocation(line: 623, column: 16, scope: !4179)
!4181 = !DILocation(line: 624, column: 13, scope: !4179)
!4182 = !DILocation(line: 625, column: 5, scope: !4179)
!4183 = !DILocation(line: 627, column: 20, scope: !4153)
!4184 = !DILocation(line: 627, column: 29, scope: !4153)
!4185 = !DILocation(line: 627, column: 34, scope: !4153)
!4186 = !DILocation(line: 627, column: 17, scope: !4153)
!4187 = !DILocation(line: 629, column: 17, scope: !4153)
!4188 = !DILocation(line: 629, column: 5, scope: !4153)
!4189 = !DILocation(line: 629, column: 8, scope: !4153)
!4190 = !DILocation(line: 629, column: 15, scope: !4153)
!4191 = !DILocation(line: 630, column: 23, scope: !4153)
!4192 = !DILocation(line: 630, column: 5, scope: !4153)
!4193 = !DILocation(line: 630, column: 8, scope: !4153)
!4194 = !DILocation(line: 630, column: 21, scope: !4153)
!4195 = !DILocation(line: 631, column: 29, scope: !4153)
!4196 = !DILocation(line: 631, column: 38, scope: !4153)
!4197 = !DILocation(line: 631, column: 5, scope: !4153)
!4198 = !DILocation(line: 631, column: 8, scope: !4153)
!4199 = !DILocation(line: 631, column: 27, scope: !4153)
!4200 = !DILocation(line: 632, column: 21, scope: !4153)
!4201 = !DILocation(line: 632, column: 30, scope: !4153)
!4202 = !DILocation(line: 632, column: 28, scope: !4153)
!4203 = !DILocation(line: 632, column: 5, scope: !4153)
!4204 = !DILocation(line: 632, column: 8, scope: !4153)
!4205 = !DILocation(line: 632, column: 19, scope: !4153)
!4206 = !DILocation(line: 633, column: 5, scope: !4153)
!4207 = !DILocation(line: 633, column: 8, scope: !4153)
!4208 = !DILocation(line: 633, column: 14, scope: !4153)
!4209 = !DILocation(line: 639, column: 12, scope: !4153)
!4210 = !DILocation(line: 639, column: 5, scope: !4153)
!4211 = distinct !DISubprogram(name: "skip_bits", scope: !1882, file: !1882, line: 460, type: !4212, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{null, !4156, !891}
!4214 = !DILocalVariable(name: "s", arg: 1, scope: !4211, file: !1882, line: 460, type: !4156)
!4215 = !DILocation(line: 460, column: 45, scope: !4211)
!4216 = !DILocalVariable(name: "n", arg: 2, scope: !4211, file: !1882, line: 460, type: !891)
!4217 = !DILocation(line: 460, column: 52, scope: !4211)
!4218 = !DILocalVariable(name: "re_index", scope: !4211, file: !1882, line: 481, type: !892)
!4219 = !DILocation(line: 481, column: 18, scope: !4211)
!4220 = !DILocation(line: 481, column: 30, scope: !4211)
!4221 = !DILocation(line: 481, column: 34, scope: !4211)
!4222 = !DILocalVariable(name: "re_cache", scope: !4211, file: !1882, line: 481, type: !892)
!4223 = !DILocation(line: 481, column: 78, scope: !4211)
!4224 = !DILocalVariable(name: "re_size_plus8", scope: !4211, file: !1882, line: 481, type: !892)
!4225 = !DILocation(line: 481, column: 101, scope: !4211)
!4226 = !DILocation(line: 481, column: 118, scope: !4211)
!4227 = !DILocation(line: 481, column: 122, scope: !4211)
!4228 = !DILocation(line: 482, column: 18, scope: !4211)
!4229 = !DILocation(line: 482, column: 36, scope: !4211)
!4230 = !DILocation(line: 482, column: 48, scope: !4211)
!4231 = !DILocation(line: 482, column: 45, scope: !4211)
!4232 = !DILocation(line: 482, column: 33, scope: !4211)
!4233 = !DILocation(line: 482, column: 17, scope: !4211)
!4234 = !DILocation(line: 482, column: 55, scope: !4235)
!4235 = !DILexicalBlockFile(scope: !4211, file: !1882, discriminator: 1)
!4236 = !DILocation(line: 482, column: 67, scope: !4235)
!4237 = !DILocation(line: 482, column: 64, scope: !4235)
!4238 = !DILocation(line: 482, column: 17, scope: !4235)
!4239 = !DILocation(line: 482, column: 74, scope: !4240)
!4240 = !DILexicalBlockFile(scope: !4211, file: !1882, discriminator: 2)
!4241 = !DILocation(line: 482, column: 17, scope: !4240)
!4242 = !DILocation(line: 482, column: 17, scope: !4243)
!4243 = !DILexicalBlockFile(scope: !4211, file: !1882, discriminator: 3)
!4244 = !DILocation(line: 482, column: 14, scope: !4243)
!4245 = !DILocation(line: 483, column: 18, scope: !4211)
!4246 = !DILocation(line: 483, column: 6, scope: !4211)
!4247 = !DILocation(line: 483, column: 10, scope: !4211)
!4248 = !DILocation(line: 483, column: 16, scope: !4211)
!4249 = !DILocation(line: 485, column: 1, scope: !4211)
!4250 = distinct !DISubprogram(name: "mp_decode_layer1", scope: !1677, file: !1677, line: 503, type: !4251, isLocal: true, isDefinition: true, scopeLine: 504, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{!891, !1859}
!4253 = !DILocalVariable(name: "s", arg: 1, scope: !4250, file: !1677, line: 503, type: !1859)
!4254 = !DILocation(line: 503, column: 47, scope: !4250)
!4255 = !DILocalVariable(name: "bound", scope: !4250, file: !1677, line: 505, type: !891)
!4256 = !DILocation(line: 505, column: 9, scope: !4250)
!4257 = !DILocalVariable(name: "i", scope: !4250, file: !1677, line: 505, type: !891)
!4258 = !DILocation(line: 505, column: 16, scope: !4250)
!4259 = !DILocalVariable(name: "v", scope: !4250, file: !1677, line: 505, type: !891)
!4260 = !DILocation(line: 505, column: 19, scope: !4250)
!4261 = !DILocalVariable(name: "n", scope: !4250, file: !1677, line: 505, type: !891)
!4262 = !DILocation(line: 505, column: 22, scope: !4250)
!4263 = !DILocalVariable(name: "ch", scope: !4250, file: !1677, line: 505, type: !891)
!4264 = !DILocation(line: 505, column: 25, scope: !4250)
!4265 = !DILocalVariable(name: "j", scope: !4250, file: !1677, line: 505, type: !891)
!4266 = !DILocation(line: 505, column: 29, scope: !4250)
!4267 = !DILocalVariable(name: "mant", scope: !4250, file: !1677, line: 505, type: !891)
!4268 = !DILocation(line: 505, column: 32, scope: !4250)
!4269 = !DILocalVariable(name: "allocation", scope: !4250, file: !1677, line: 506, type: !4270)
!4270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 512, align: 8, elements: !4271)
!4271 = !{!937, !1901}
!4272 = !DILocation(line: 506, column: 13, scope: !4250)
!4273 = !DILocalVariable(name: "scale_factors", scope: !4250, file: !1677, line: 507, type: !4270)
!4274 = !DILocation(line: 507, column: 13, scope: !4250)
!4275 = !DILocation(line: 509, column: 9, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4250, file: !1677, line: 509, column: 9)
!4277 = !DILocation(line: 509, column: 12, scope: !4276)
!4278 = !DILocation(line: 509, column: 17, scope: !4276)
!4279 = !DILocation(line: 509, column: 9, scope: !4250)
!4280 = !DILocation(line: 510, column: 18, scope: !4276)
!4281 = !DILocation(line: 510, column: 21, scope: !4276)
!4282 = !DILocation(line: 510, column: 30, scope: !4276)
!4283 = !DILocation(line: 510, column: 35, scope: !4276)
!4284 = !DILocation(line: 510, column: 15, scope: !4276)
!4285 = !DILocation(line: 510, column: 9, scope: !4276)
!4286 = !DILocation(line: 512, column: 15, scope: !4276)
!4287 = !DILocation(line: 515, column: 12, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4250, file: !1677, line: 515, column: 5)
!4289 = !DILocation(line: 515, column: 10, scope: !4288)
!4290 = !DILocation(line: 515, column: 17, scope: !4291)
!4291 = !DILexicalBlockFile(scope: !4292, file: !1677, discriminator: 1)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !1677, line: 515, column: 5)
!4293 = !DILocation(line: 515, column: 21, scope: !4291)
!4294 = !DILocation(line: 515, column: 19, scope: !4291)
!4295 = !DILocation(line: 515, column: 5, scope: !4291)
!4296 = !DILocation(line: 516, column: 17, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !1677, line: 516, column: 9)
!4298 = distinct !DILexicalBlock(scope: !4292, file: !1677, line: 515, column: 33)
!4299 = !DILocation(line: 516, column: 14, scope: !4297)
!4300 = !DILocation(line: 516, column: 22, scope: !4301)
!4301 = !DILexicalBlockFile(scope: !4302, file: !1677, discriminator: 1)
!4302 = distinct !DILexicalBlock(scope: !4297, file: !1677, line: 516, column: 9)
!4303 = !DILocation(line: 516, column: 27, scope: !4301)
!4304 = !DILocation(line: 516, column: 30, scope: !4301)
!4305 = !DILocation(line: 516, column: 25, scope: !4301)
!4306 = !DILocation(line: 516, column: 9, scope: !4301)
!4307 = !DILocation(line: 517, column: 43, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4302, file: !1677, line: 516, column: 49)
!4309 = !DILocation(line: 517, column: 46, scope: !4308)
!4310 = !DILocation(line: 517, column: 33, scope: !4308)
!4311 = !DILocation(line: 517, column: 28, scope: !4308)
!4312 = !DILocation(line: 517, column: 13, scope: !4308)
!4313 = !DILocation(line: 517, column: 24, scope: !4308)
!4314 = !DILocation(line: 517, column: 31, scope: !4308)
!4315 = !DILocation(line: 518, column: 9, scope: !4308)
!4316 = !DILocation(line: 516, column: 45, scope: !4317)
!4317 = !DILexicalBlockFile(scope: !4302, file: !1677, discriminator: 2)
!4318 = !DILocation(line: 516, column: 9, scope: !4317)
!4319 = distinct !{!4319, !4320}
!4320 = !DILocation(line: 516, column: 9, scope: !4298)
!4321 = !DILocation(line: 519, column: 5, scope: !4298)
!4322 = !DILocation(line: 515, column: 29, scope: !4323)
!4323 = !DILexicalBlockFile(scope: !4292, file: !1677, discriminator: 2)
!4324 = !DILocation(line: 515, column: 5, scope: !4323)
!4325 = distinct !{!4325, !4326}
!4326 = !DILocation(line: 515, column: 5, scope: !4250)
!4327 = !DILocation(line: 520, column: 14, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4250, file: !1677, line: 520, column: 5)
!4329 = !DILocation(line: 520, column: 12, scope: !4328)
!4330 = !DILocation(line: 520, column: 10, scope: !4328)
!4331 = !DILocation(line: 520, column: 21, scope: !4332)
!4332 = !DILexicalBlockFile(scope: !4333, file: !1677, discriminator: 1)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !1677, line: 520, column: 5)
!4334 = !DILocation(line: 520, column: 23, scope: !4332)
!4335 = !DILocation(line: 520, column: 5, scope: !4332)
!4336 = !DILocation(line: 521, column: 38, scope: !4333)
!4337 = !DILocation(line: 521, column: 41, scope: !4333)
!4338 = !DILocation(line: 521, column: 28, scope: !4333)
!4339 = !DILocation(line: 521, column: 23, scope: !4333)
!4340 = !DILocation(line: 521, column: 9, scope: !4333)
!4341 = !DILocation(line: 521, column: 26, scope: !4333)
!4342 = !DILocation(line: 520, column: 30, scope: !4343)
!4343 = !DILexicalBlockFile(scope: !4333, file: !1677, discriminator: 2)
!4344 = !DILocation(line: 520, column: 5, scope: !4343)
!4345 = distinct !{!4345, !4346}
!4346 = !DILocation(line: 520, column: 5, scope: !4250)
!4347 = !DILocation(line: 524, column: 12, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4250, file: !1677, line: 524, column: 5)
!4349 = !DILocation(line: 524, column: 10, scope: !4348)
!4350 = !DILocation(line: 524, column: 17, scope: !4351)
!4351 = !DILexicalBlockFile(scope: !4352, file: !1677, discriminator: 1)
!4352 = distinct !DILexicalBlock(scope: !4348, file: !1677, line: 524, column: 5)
!4353 = !DILocation(line: 524, column: 21, scope: !4351)
!4354 = !DILocation(line: 524, column: 19, scope: !4351)
!4355 = !DILocation(line: 524, column: 5, scope: !4351)
!4356 = !DILocation(line: 525, column: 17, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !1677, line: 525, column: 9)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !1677, line: 524, column: 33)
!4359 = !DILocation(line: 525, column: 14, scope: !4357)
!4360 = !DILocation(line: 525, column: 22, scope: !4361)
!4361 = !DILexicalBlockFile(scope: !4362, file: !1677, discriminator: 1)
!4362 = distinct !DILexicalBlock(scope: !4357, file: !1677, line: 525, column: 9)
!4363 = !DILocation(line: 525, column: 27, scope: !4361)
!4364 = !DILocation(line: 525, column: 30, scope: !4361)
!4365 = !DILocation(line: 525, column: 25, scope: !4361)
!4366 = !DILocation(line: 525, column: 9, scope: !4361)
!4367 = !DILocation(line: 526, column: 32, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !1677, line: 526, column: 17)
!4369 = distinct !DILexicalBlock(scope: !4362, file: !1677, line: 525, column: 49)
!4370 = !DILocation(line: 526, column: 17, scope: !4368)
!4371 = !DILocation(line: 526, column: 28, scope: !4368)
!4372 = !DILocation(line: 526, column: 17, scope: !4369)
!4373 = !DILocation(line: 527, column: 50, scope: !4368)
!4374 = !DILocation(line: 527, column: 53, scope: !4368)
!4375 = !DILocation(line: 527, column: 40, scope: !4368)
!4376 = !DILocation(line: 527, column: 35, scope: !4368)
!4377 = !DILocation(line: 527, column: 17, scope: !4368)
!4378 = !DILocation(line: 527, column: 31, scope: !4368)
!4379 = !DILocation(line: 527, column: 38, scope: !4368)
!4380 = !DILocation(line: 528, column: 9, scope: !4369)
!4381 = !DILocation(line: 525, column: 45, scope: !4382)
!4382 = !DILexicalBlockFile(scope: !4362, file: !1677, discriminator: 2)
!4383 = !DILocation(line: 525, column: 9, scope: !4382)
!4384 = distinct !{!4384, !4385}
!4385 = !DILocation(line: 525, column: 9, scope: !4358)
!4386 = !DILocation(line: 529, column: 5, scope: !4358)
!4387 = !DILocation(line: 524, column: 29, scope: !4388)
!4388 = !DILexicalBlockFile(scope: !4352, file: !1677, discriminator: 2)
!4389 = !DILocation(line: 524, column: 5, scope: !4388)
!4390 = distinct !{!4390, !4391}
!4391 = !DILocation(line: 524, column: 5, scope: !4250)
!4392 = !DILocation(line: 530, column: 14, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4250, file: !1677, line: 530, column: 5)
!4394 = !DILocation(line: 530, column: 12, scope: !4393)
!4395 = !DILocation(line: 530, column: 10, scope: !4393)
!4396 = !DILocation(line: 530, column: 21, scope: !4397)
!4397 = !DILexicalBlockFile(scope: !4398, file: !1677, discriminator: 1)
!4398 = distinct !DILexicalBlock(scope: !4393, file: !1677, line: 530, column: 5)
!4399 = !DILocation(line: 530, column: 23, scope: !4397)
!4400 = !DILocation(line: 530, column: 5, scope: !4397)
!4401 = !DILocation(line: 531, column: 27, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !1677, line: 531, column: 13)
!4403 = distinct !DILexicalBlock(scope: !4398, file: !1677, line: 530, column: 34)
!4404 = !DILocation(line: 531, column: 13, scope: !4402)
!4405 = !DILocation(line: 531, column: 13, scope: !4403)
!4406 = !DILocation(line: 532, column: 45, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4402, file: !1677, line: 531, column: 31)
!4408 = !DILocation(line: 532, column: 48, scope: !4407)
!4409 = !DILocation(line: 532, column: 35, scope: !4407)
!4410 = !DILocation(line: 532, column: 30, scope: !4407)
!4411 = !DILocation(line: 532, column: 13, scope: !4407)
!4412 = !DILocation(line: 532, column: 33, scope: !4407)
!4413 = !DILocation(line: 533, column: 45, scope: !4407)
!4414 = !DILocation(line: 533, column: 48, scope: !4407)
!4415 = !DILocation(line: 533, column: 35, scope: !4407)
!4416 = !DILocation(line: 533, column: 30, scope: !4407)
!4417 = !DILocation(line: 533, column: 13, scope: !4407)
!4418 = !DILocation(line: 533, column: 33, scope: !4407)
!4419 = !DILocation(line: 534, column: 9, scope: !4407)
!4420 = !DILocation(line: 535, column: 5, scope: !4403)
!4421 = !DILocation(line: 530, column: 30, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4398, file: !1677, discriminator: 2)
!4423 = !DILocation(line: 530, column: 5, scope: !4422)
!4424 = distinct !{!4424, !4425}
!4425 = !DILocation(line: 530, column: 5, scope: !4250)
!4426 = !DILocation(line: 538, column: 12, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4250, file: !1677, line: 538, column: 5)
!4428 = !DILocation(line: 538, column: 10, scope: !4427)
!4429 = !DILocation(line: 538, column: 17, scope: !4430)
!4430 = !DILexicalBlockFile(scope: !4431, file: !1677, discriminator: 1)
!4431 = distinct !DILexicalBlock(scope: !4427, file: !1677, line: 538, column: 5)
!4432 = !DILocation(line: 538, column: 19, scope: !4430)
!4433 = !DILocation(line: 538, column: 5, scope: !4430)
!4434 = !DILocation(line: 539, column: 16, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !1677, line: 539, column: 9)
!4436 = distinct !DILexicalBlock(scope: !4431, file: !1677, line: 538, column: 30)
!4437 = !DILocation(line: 539, column: 14, scope: !4435)
!4438 = !DILocation(line: 539, column: 21, scope: !4439)
!4439 = !DILexicalBlockFile(scope: !4440, file: !1677, discriminator: 1)
!4440 = distinct !DILexicalBlock(scope: !4435, file: !1677, line: 539, column: 9)
!4441 = !DILocation(line: 539, column: 25, scope: !4439)
!4442 = !DILocation(line: 539, column: 23, scope: !4439)
!4443 = !DILocation(line: 539, column: 9, scope: !4439)
!4444 = !DILocation(line: 540, column: 21, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !1677, line: 540, column: 13)
!4446 = distinct !DILexicalBlock(scope: !4440, file: !1677, line: 539, column: 37)
!4447 = !DILocation(line: 540, column: 18, scope: !4445)
!4448 = !DILocation(line: 540, column: 26, scope: !4449)
!4449 = !DILexicalBlockFile(scope: !4450, file: !1677, discriminator: 1)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !1677, line: 540, column: 13)
!4451 = !DILocation(line: 540, column: 31, scope: !4449)
!4452 = !DILocation(line: 540, column: 34, scope: !4449)
!4453 = !DILocation(line: 540, column: 29, scope: !4449)
!4454 = !DILocation(line: 540, column: 13, scope: !4449)
!4455 = !DILocation(line: 541, column: 36, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4450, file: !1677, line: 540, column: 53)
!4457 = !DILocation(line: 541, column: 21, scope: !4456)
!4458 = !DILocation(line: 541, column: 32, scope: !4456)
!4459 = !DILocation(line: 541, column: 19, scope: !4456)
!4460 = !DILocation(line: 542, column: 21, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4456, file: !1677, line: 542, column: 21)
!4462 = !DILocation(line: 542, column: 21, scope: !4456)
!4463 = !DILocation(line: 543, column: 38, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !1677, line: 542, column: 24)
!4465 = !DILocation(line: 543, column: 41, scope: !4464)
!4466 = !DILocation(line: 543, column: 45, scope: !4464)
!4467 = !DILocation(line: 543, column: 47, scope: !4464)
!4468 = !DILocation(line: 543, column: 28, scope: !4464)
!4469 = !DILocation(line: 543, column: 26, scope: !4464)
!4470 = !DILocation(line: 544, column: 36, scope: !4464)
!4471 = !DILocation(line: 544, column: 39, scope: !4464)
!4472 = !DILocation(line: 544, column: 63, scope: !4464)
!4473 = !DILocation(line: 544, column: 45, scope: !4464)
!4474 = !DILocation(line: 544, column: 59, scope: !4464)
!4475 = !DILocation(line: 544, column: 25, scope: !4464)
!4476 = !DILocation(line: 544, column: 23, scope: !4464)
!4477 = !DILocation(line: 545, column: 17, scope: !4464)
!4478 = !DILocation(line: 546, column: 23, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4461, file: !1677, line: 545, column: 24)
!4480 = !DILocation(line: 548, column: 43, scope: !4456)
!4481 = !DILocation(line: 548, column: 38, scope: !4456)
!4482 = !DILocation(line: 548, column: 17, scope: !4456)
!4483 = !DILocation(line: 548, column: 35, scope: !4456)
!4484 = !DILocation(line: 548, column: 31, scope: !4456)
!4485 = !DILocation(line: 548, column: 20, scope: !4456)
!4486 = !DILocation(line: 548, column: 41, scope: !4456)
!4487 = !DILocation(line: 549, column: 13, scope: !4456)
!4488 = !DILocation(line: 540, column: 49, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !4450, file: !1677, discriminator: 2)
!4490 = !DILocation(line: 540, column: 13, scope: !4489)
!4491 = distinct !{!4491, !4492}
!4492 = !DILocation(line: 540, column: 13, scope: !4446)
!4493 = !DILocation(line: 550, column: 9, scope: !4446)
!4494 = !DILocation(line: 539, column: 33, scope: !4495)
!4495 = !DILexicalBlockFile(scope: !4440, file: !1677, discriminator: 2)
!4496 = !DILocation(line: 539, column: 9, scope: !4495)
!4497 = distinct !{!4497, !4498}
!4498 = !DILocation(line: 539, column: 9, scope: !4436)
!4499 = !DILocation(line: 551, column: 18, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4436, file: !1677, line: 551, column: 9)
!4501 = !DILocation(line: 551, column: 16, scope: !4500)
!4502 = !DILocation(line: 551, column: 14, scope: !4500)
!4503 = !DILocation(line: 551, column: 25, scope: !4504)
!4504 = !DILexicalBlockFile(scope: !4505, file: !1677, discriminator: 1)
!4505 = distinct !DILexicalBlock(scope: !4500, file: !1677, line: 551, column: 9)
!4506 = !DILocation(line: 551, column: 27, scope: !4504)
!4507 = !DILocation(line: 551, column: 9, scope: !4504)
!4508 = !DILocation(line: 552, column: 31, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !1677, line: 551, column: 38)
!4510 = !DILocation(line: 552, column: 17, scope: !4509)
!4511 = !DILocation(line: 552, column: 15, scope: !4509)
!4512 = !DILocation(line: 553, column: 17, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4509, file: !1677, line: 553, column: 17)
!4514 = !DILocation(line: 553, column: 17, scope: !4509)
!4515 = !DILocation(line: 554, column: 34, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4513, file: !1677, line: 553, column: 20)
!4517 = !DILocation(line: 554, column: 37, scope: !4516)
!4518 = !DILocation(line: 554, column: 41, scope: !4516)
!4519 = !DILocation(line: 554, column: 43, scope: !4516)
!4520 = !DILocation(line: 554, column: 24, scope: !4516)
!4521 = !DILocation(line: 554, column: 22, scope: !4516)
!4522 = !DILocation(line: 555, column: 32, scope: !4516)
!4523 = !DILocation(line: 555, column: 35, scope: !4516)
!4524 = !DILocation(line: 555, column: 58, scope: !4516)
!4525 = !DILocation(line: 555, column: 41, scope: !4516)
!4526 = !DILocation(line: 555, column: 21, scope: !4516)
!4527 = !DILocation(line: 555, column: 19, scope: !4516)
!4528 = !DILocation(line: 556, column: 42, scope: !4516)
!4529 = !DILocation(line: 556, column: 37, scope: !4516)
!4530 = !DILocation(line: 556, column: 17, scope: !4516)
!4531 = !DILocation(line: 556, column: 34, scope: !4516)
!4532 = !DILocation(line: 556, column: 20, scope: !4516)
!4533 = !DILocation(line: 556, column: 40, scope: !4516)
!4534 = !DILocation(line: 557, column: 32, scope: !4516)
!4535 = !DILocation(line: 557, column: 35, scope: !4516)
!4536 = !DILocation(line: 557, column: 58, scope: !4516)
!4537 = !DILocation(line: 557, column: 41, scope: !4516)
!4538 = !DILocation(line: 557, column: 21, scope: !4516)
!4539 = !DILocation(line: 557, column: 19, scope: !4516)
!4540 = !DILocation(line: 558, column: 42, scope: !4516)
!4541 = !DILocation(line: 558, column: 37, scope: !4516)
!4542 = !DILocation(line: 558, column: 17, scope: !4516)
!4543 = !DILocation(line: 558, column: 34, scope: !4516)
!4544 = !DILocation(line: 558, column: 20, scope: !4516)
!4545 = !DILocation(line: 558, column: 40, scope: !4516)
!4546 = !DILocation(line: 559, column: 13, scope: !4516)
!4547 = !DILocation(line: 560, column: 37, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4513, file: !1677, line: 559, column: 20)
!4549 = !DILocation(line: 560, column: 17, scope: !4548)
!4550 = !DILocation(line: 560, column: 34, scope: !4548)
!4551 = !DILocation(line: 560, column: 20, scope: !4548)
!4552 = !DILocation(line: 560, column: 40, scope: !4548)
!4553 = !DILocation(line: 561, column: 37, scope: !4548)
!4554 = !DILocation(line: 561, column: 17, scope: !4548)
!4555 = !DILocation(line: 561, column: 34, scope: !4548)
!4556 = !DILocation(line: 561, column: 20, scope: !4548)
!4557 = !DILocation(line: 561, column: 40, scope: !4548)
!4558 = !DILocation(line: 563, column: 9, scope: !4509)
!4559 = !DILocation(line: 551, column: 34, scope: !4560)
!4560 = !DILexicalBlockFile(scope: !4505, file: !1677, discriminator: 2)
!4561 = !DILocation(line: 551, column: 9, scope: !4560)
!4562 = distinct !{!4562, !4563}
!4563 = !DILocation(line: 551, column: 9, scope: !4436)
!4564 = !DILocation(line: 564, column: 5, scope: !4436)
!4565 = !DILocation(line: 538, column: 26, scope: !4566)
!4566 = !DILexicalBlockFile(scope: !4431, file: !1677, discriminator: 2)
!4567 = !DILocation(line: 538, column: 5, scope: !4566)
!4568 = distinct !{!4568, !4569}
!4569 = !DILocation(line: 538, column: 5, scope: !4250)
!4570 = !DILocation(line: 565, column: 5, scope: !4250)
!4571 = distinct !DISubprogram(name: "mp_decode_layer2", scope: !1677, file: !1677, line: 568, type: !4251, isLocal: true, isDefinition: true, scopeLine: 569, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!4572 = !DILocalVariable(name: "s", arg: 1, scope: !4571, file: !1677, line: 568, type: !1859)
!4573 = !DILocation(line: 568, column: 47, scope: !4571)
!4574 = !DILocalVariable(name: "sblimit", scope: !4571, file: !1677, line: 570, type: !891)
!4575 = !DILocation(line: 570, column: 9, scope: !4571)
!4576 = !DILocalVariable(name: "alloc_table", scope: !4571, file: !1677, line: 571, type: !4577)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64, align: 64)
!4578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!4579 = !DILocation(line: 571, column: 26, scope: !4571)
!4580 = !DILocalVariable(name: "table", scope: !4571, file: !1677, line: 572, type: !891)
!4581 = !DILocation(line: 572, column: 9, scope: !4571)
!4582 = !DILocalVariable(name: "bit_alloc_bits", scope: !4571, file: !1677, line: 572, type: !891)
!4583 = !DILocation(line: 572, column: 16, scope: !4571)
!4584 = !DILocalVariable(name: "i", scope: !4571, file: !1677, line: 572, type: !891)
!4585 = !DILocation(line: 572, column: 32, scope: !4571)
!4586 = !DILocalVariable(name: "j", scope: !4571, file: !1677, line: 572, type: !891)
!4587 = !DILocation(line: 572, column: 35, scope: !4571)
!4588 = !DILocalVariable(name: "ch", scope: !4571, file: !1677, line: 572, type: !891)
!4589 = !DILocation(line: 572, column: 38, scope: !4571)
!4590 = !DILocalVariable(name: "bound", scope: !4571, file: !1677, line: 572, type: !891)
!4591 = !DILocation(line: 572, column: 42, scope: !4571)
!4592 = !DILocalVariable(name: "v", scope: !4571, file: !1677, line: 572, type: !891)
!4593 = !DILocation(line: 572, column: 49, scope: !4571)
!4594 = !DILocalVariable(name: "bit_alloc", scope: !4571, file: !1677, line: 573, type: !4595)
!4595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 512, align: 8, elements: !4271)
!4596 = !DILocation(line: 573, column: 19, scope: !4571)
!4597 = !DILocalVariable(name: "scale_code", scope: !4571, file: !1677, line: 574, type: !4595)
!4598 = !DILocation(line: 574, column: 19, scope: !4571)
!4599 = !DILocalVariable(name: "scale_factors", scope: !4571, file: !1677, line: 575, type: !4600)
!4600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 1536, align: 8, elements: !4601)
!4601 = !{!937, !1901, !1687}
!4602 = !DILocation(line: 575, column: 19, scope: !4571)
!4603 = !DILocalVariable(name: "sf", scope: !4571, file: !1677, line: 575, type: !4604)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!4605 = !DILocation(line: 575, column: 45, scope: !4571)
!4606 = !DILocalVariable(name: "scale", scope: !4571, file: !1677, line: 576, type: !891)
!4607 = !DILocation(line: 576, column: 9, scope: !4571)
!4608 = !DILocalVariable(name: "qindex", scope: !4571, file: !1677, line: 576, type: !891)
!4609 = !DILocation(line: 576, column: 16, scope: !4571)
!4610 = !DILocalVariable(name: "bits", scope: !4571, file: !1677, line: 576, type: !891)
!4611 = !DILocation(line: 576, column: 24, scope: !4571)
!4612 = !DILocalVariable(name: "steps", scope: !4571, file: !1677, line: 576, type: !891)
!4613 = !DILocation(line: 576, column: 30, scope: !4571)
!4614 = !DILocalVariable(name: "k", scope: !4571, file: !1677, line: 576, type: !891)
!4615 = !DILocation(line: 576, column: 37, scope: !4571)
!4616 = !DILocalVariable(name: "l", scope: !4571, file: !1677, line: 576, type: !891)
!4617 = !DILocation(line: 576, column: 40, scope: !4571)
!4618 = !DILocalVariable(name: "m", scope: !4571, file: !1677, line: 576, type: !891)
!4619 = !DILocation(line: 576, column: 43, scope: !4571)
!4620 = !DILocalVariable(name: "b", scope: !4571, file: !1677, line: 576, type: !891)
!4621 = !DILocation(line: 576, column: 46, scope: !4571)
!4622 = !DILocation(line: 579, column: 36, scope: !4571)
!4623 = !DILocation(line: 579, column: 39, scope: !4571)
!4624 = !DILocation(line: 579, column: 48, scope: !4571)
!4625 = !DILocation(line: 579, column: 56, scope: !4571)
!4626 = !DILocation(line: 579, column: 59, scope: !4571)
!4627 = !DILocation(line: 580, column: 36, scope: !4571)
!4628 = !DILocation(line: 580, column: 39, scope: !4571)
!4629 = !DILocation(line: 580, column: 52, scope: !4571)
!4630 = !DILocation(line: 580, column: 55, scope: !4571)
!4631 = !DILocation(line: 579, column: 13, scope: !4571)
!4632 = !DILocation(line: 579, column: 11, scope: !4571)
!4633 = !DILocation(line: 581, column: 36, scope: !4571)
!4634 = !DILocation(line: 581, column: 15, scope: !4571)
!4635 = !DILocation(line: 581, column: 13, scope: !4571)
!4636 = !DILocation(line: 582, column: 39, scope: !4571)
!4637 = !DILocation(line: 582, column: 19, scope: !4571)
!4638 = !DILocation(line: 582, column: 17, scope: !4571)
!4639 = !DILocation(line: 584, column: 9, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 584, column: 9)
!4641 = !DILocation(line: 584, column: 12, scope: !4640)
!4642 = !DILocation(line: 584, column: 17, scope: !4640)
!4643 = !DILocation(line: 584, column: 9, scope: !4571)
!4644 = !DILocation(line: 585, column: 18, scope: !4640)
!4645 = !DILocation(line: 585, column: 21, scope: !4640)
!4646 = !DILocation(line: 585, column: 30, scope: !4640)
!4647 = !DILocation(line: 585, column: 35, scope: !4640)
!4648 = !DILocation(line: 585, column: 15, scope: !4640)
!4649 = !DILocation(line: 585, column: 9, scope: !4640)
!4650 = !DILocation(line: 587, column: 17, scope: !4640)
!4651 = !DILocation(line: 587, column: 15, scope: !4640)
!4652 = !DILocation(line: 589, column: 5, scope: !4571)
!4653 = distinct !{!4653, !4652}
!4654 = !DILocation(line: 589, column: 80, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !4656, file: !1677, discriminator: 1)
!4656 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 589, column: 8)
!4657 = !DILocation(line: 592, column: 9, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 592, column: 9)
!4659 = !DILocation(line: 592, column: 17, scope: !4658)
!4660 = !DILocation(line: 592, column: 15, scope: !4658)
!4661 = !DILocation(line: 592, column: 9, scope: !4571)
!4662 = !DILocation(line: 593, column: 17, scope: !4658)
!4663 = !DILocation(line: 593, column: 15, scope: !4658)
!4664 = !DILocation(line: 593, column: 9, scope: !4658)
!4665 = !DILocation(line: 596, column: 7, scope: !4571)
!4666 = !DILocation(line: 597, column: 12, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 597, column: 5)
!4668 = !DILocation(line: 597, column: 10, scope: !4667)
!4669 = !DILocation(line: 597, column: 17, scope: !4670)
!4670 = !DILexicalBlockFile(scope: !4671, file: !1677, discriminator: 1)
!4671 = distinct !DILexicalBlock(scope: !4667, file: !1677, line: 597, column: 5)
!4672 = !DILocation(line: 597, column: 21, scope: !4670)
!4673 = !DILocation(line: 597, column: 19, scope: !4670)
!4674 = !DILocation(line: 597, column: 5, scope: !4670)
!4675 = !DILocation(line: 598, column: 38, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4671, file: !1677, line: 597, column: 33)
!4677 = !DILocation(line: 598, column: 26, scope: !4676)
!4678 = !DILocation(line: 598, column: 24, scope: !4676)
!4679 = !DILocation(line: 599, column: 17, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !1677, line: 599, column: 9)
!4681 = !DILocation(line: 599, column: 14, scope: !4680)
!4682 = !DILocation(line: 599, column: 22, scope: !4683)
!4683 = !DILexicalBlockFile(scope: !4684, file: !1677, discriminator: 1)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !1677, line: 599, column: 9)
!4685 = !DILocation(line: 599, column: 27, scope: !4683)
!4686 = !DILocation(line: 599, column: 30, scope: !4683)
!4687 = !DILocation(line: 599, column: 25, scope: !4683)
!4688 = !DILocation(line: 599, column: 9, scope: !4683)
!4689 = !DILocation(line: 600, column: 42, scope: !4684)
!4690 = !DILocation(line: 600, column: 45, scope: !4684)
!4691 = !DILocation(line: 600, column: 49, scope: !4684)
!4692 = !DILocation(line: 600, column: 32, scope: !4684)
!4693 = !DILocation(line: 600, column: 27, scope: !4684)
!4694 = !DILocation(line: 600, column: 13, scope: !4684)
!4695 = !DILocation(line: 600, column: 23, scope: !4684)
!4696 = !DILocation(line: 600, column: 30, scope: !4684)
!4697 = !DILocation(line: 599, column: 45, scope: !4698)
!4698 = !DILexicalBlockFile(scope: !4684, file: !1677, discriminator: 2)
!4699 = !DILocation(line: 599, column: 9, scope: !4698)
!4700 = distinct !{!4700, !4701}
!4701 = !DILocation(line: 599, column: 9, scope: !4676)
!4702 = !DILocation(line: 601, column: 19, scope: !4676)
!4703 = !DILocation(line: 601, column: 16, scope: !4676)
!4704 = !DILocation(line: 601, column: 11, scope: !4676)
!4705 = !DILocation(line: 602, column: 5, scope: !4676)
!4706 = !DILocation(line: 597, column: 29, scope: !4707)
!4707 = !DILexicalBlockFile(scope: !4671, file: !1677, discriminator: 2)
!4708 = !DILocation(line: 597, column: 5, scope: !4707)
!4709 = distinct !{!4709, !4710}
!4710 = !DILocation(line: 597, column: 5, scope: !4571)
!4711 = !DILocation(line: 603, column: 14, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 603, column: 5)
!4713 = !DILocation(line: 603, column: 12, scope: !4712)
!4714 = !DILocation(line: 603, column: 10, scope: !4712)
!4715 = !DILocation(line: 603, column: 21, scope: !4716)
!4716 = !DILexicalBlockFile(scope: !4717, file: !1677, discriminator: 1)
!4717 = distinct !DILexicalBlock(scope: !4712, file: !1677, line: 603, column: 5)
!4718 = !DILocation(line: 603, column: 25, scope: !4716)
!4719 = !DILocation(line: 603, column: 23, scope: !4716)
!4720 = !DILocation(line: 603, column: 5, scope: !4716)
!4721 = !DILocation(line: 604, column: 38, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4717, file: !1677, line: 603, column: 39)
!4723 = !DILocation(line: 604, column: 26, scope: !4722)
!4724 = !DILocation(line: 604, column: 24, scope: !4722)
!4725 = !DILocation(line: 605, column: 23, scope: !4722)
!4726 = !DILocation(line: 605, column: 26, scope: !4722)
!4727 = !DILocation(line: 605, column: 30, scope: !4722)
!4728 = !DILocation(line: 605, column: 13, scope: !4722)
!4729 = !DILocation(line: 605, column: 11, scope: !4722)
!4730 = !DILocation(line: 606, column: 27, scope: !4722)
!4731 = !DILocation(line: 606, column: 22, scope: !4722)
!4732 = !DILocation(line: 606, column: 9, scope: !4722)
!4733 = !DILocation(line: 606, column: 25, scope: !4722)
!4734 = !DILocation(line: 607, column: 27, scope: !4722)
!4735 = !DILocation(line: 607, column: 22, scope: !4722)
!4736 = !DILocation(line: 607, column: 9, scope: !4722)
!4737 = !DILocation(line: 607, column: 25, scope: !4722)
!4738 = !DILocation(line: 608, column: 19, scope: !4722)
!4739 = !DILocation(line: 608, column: 16, scope: !4722)
!4740 = !DILocation(line: 608, column: 11, scope: !4722)
!4741 = !DILocation(line: 609, column: 5, scope: !4722)
!4742 = !DILocation(line: 603, column: 35, scope: !4743)
!4743 = !DILexicalBlockFile(scope: !4717, file: !1677, discriminator: 2)
!4744 = !DILocation(line: 603, column: 5, scope: !4743)
!4745 = distinct !{!4745, !4746}
!4746 = !DILocation(line: 603, column: 5, scope: !4571)
!4747 = !DILocation(line: 612, column: 12, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 612, column: 5)
!4749 = !DILocation(line: 612, column: 10, scope: !4748)
!4750 = !DILocation(line: 612, column: 17, scope: !4751)
!4751 = !DILexicalBlockFile(scope: !4752, file: !1677, discriminator: 1)
!4752 = distinct !DILexicalBlock(scope: !4748, file: !1677, line: 612, column: 5)
!4753 = !DILocation(line: 612, column: 21, scope: !4751)
!4754 = !DILocation(line: 612, column: 19, scope: !4751)
!4755 = !DILocation(line: 612, column: 5, scope: !4751)
!4756 = !DILocation(line: 613, column: 17, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !1677, line: 613, column: 9)
!4758 = distinct !DILexicalBlock(scope: !4752, file: !1677, line: 612, column: 35)
!4759 = !DILocation(line: 613, column: 14, scope: !4757)
!4760 = !DILocation(line: 613, column: 22, scope: !4761)
!4761 = !DILexicalBlockFile(scope: !4762, file: !1677, discriminator: 1)
!4762 = distinct !DILexicalBlock(scope: !4757, file: !1677, line: 613, column: 9)
!4763 = !DILocation(line: 613, column: 27, scope: !4761)
!4764 = !DILocation(line: 613, column: 30, scope: !4761)
!4765 = !DILocation(line: 613, column: 25, scope: !4761)
!4766 = !DILocation(line: 613, column: 9, scope: !4761)
!4767 = !DILocation(line: 614, column: 31, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !1677, line: 614, column: 17)
!4769 = distinct !DILexicalBlock(scope: !4762, file: !1677, line: 613, column: 49)
!4770 = !DILocation(line: 614, column: 17, scope: !4768)
!4771 = !DILocation(line: 614, column: 27, scope: !4768)
!4772 = !DILocation(line: 614, column: 17, scope: !4769)
!4773 = !DILocation(line: 615, column: 47, scope: !4768)
!4774 = !DILocation(line: 615, column: 50, scope: !4768)
!4775 = !DILocation(line: 615, column: 37, scope: !4768)
!4776 = !DILocation(line: 615, column: 32, scope: !4768)
!4777 = !DILocation(line: 615, column: 17, scope: !4768)
!4778 = !DILocation(line: 615, column: 28, scope: !4768)
!4779 = !DILocation(line: 615, column: 35, scope: !4768)
!4780 = !DILocation(line: 616, column: 9, scope: !4769)
!4781 = !DILocation(line: 613, column: 45, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !4762, file: !1677, discriminator: 2)
!4783 = !DILocation(line: 613, column: 9, scope: !4782)
!4784 = distinct !{!4784, !4785}
!4785 = !DILocation(line: 613, column: 9, scope: !4758)
!4786 = !DILocation(line: 617, column: 5, scope: !4758)
!4787 = !DILocation(line: 612, column: 31, scope: !4788)
!4788 = !DILexicalBlockFile(scope: !4752, file: !1677, discriminator: 2)
!4789 = !DILocation(line: 612, column: 5, scope: !4788)
!4790 = distinct !{!4790, !4791}
!4791 = !DILocation(line: 612, column: 5, scope: !4571)
!4792 = !DILocation(line: 620, column: 12, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 620, column: 5)
!4794 = !DILocation(line: 620, column: 10, scope: !4793)
!4795 = !DILocation(line: 620, column: 17, scope: !4796)
!4796 = !DILexicalBlockFile(scope: !4797, file: !1677, discriminator: 1)
!4797 = distinct !DILexicalBlock(scope: !4793, file: !1677, line: 620, column: 5)
!4798 = !DILocation(line: 620, column: 21, scope: !4796)
!4799 = !DILocation(line: 620, column: 19, scope: !4796)
!4800 = !DILocation(line: 620, column: 5, scope: !4796)
!4801 = !DILocation(line: 621, column: 17, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !1677, line: 621, column: 9)
!4803 = distinct !DILexicalBlock(scope: !4797, file: !1677, line: 620, column: 35)
!4804 = !DILocation(line: 621, column: 14, scope: !4802)
!4805 = !DILocation(line: 621, column: 22, scope: !4806)
!4806 = !DILexicalBlockFile(scope: !4807, file: !1677, discriminator: 1)
!4807 = distinct !DILexicalBlock(scope: !4802, file: !1677, line: 621, column: 9)
!4808 = !DILocation(line: 621, column: 27, scope: !4806)
!4809 = !DILocation(line: 621, column: 30, scope: !4806)
!4810 = !DILocation(line: 621, column: 25, scope: !4806)
!4811 = !DILocation(line: 621, column: 9, scope: !4806)
!4812 = !DILocation(line: 622, column: 31, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !1677, line: 622, column: 17)
!4814 = distinct !DILexicalBlock(scope: !4807, file: !1677, line: 621, column: 49)
!4815 = !DILocation(line: 622, column: 17, scope: !4813)
!4816 = !DILocation(line: 622, column: 27, scope: !4813)
!4817 = !DILocation(line: 622, column: 17, scope: !4814)
!4818 = !DILocation(line: 623, column: 40, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4813, file: !1677, line: 622, column: 35)
!4820 = !DILocation(line: 623, column: 22, scope: !4819)
!4821 = !DILocation(line: 623, column: 36, scope: !4819)
!4822 = !DILocation(line: 623, column: 20, scope: !4819)
!4823 = !DILocation(line: 624, column: 40, scope: !4819)
!4824 = !DILocation(line: 624, column: 25, scope: !4819)
!4825 = !DILocation(line: 624, column: 36, scope: !4819)
!4826 = !DILocation(line: 624, column: 17, scope: !4819)
!4827 = !DILocation(line: 624, column: 44, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4819, file: !1677, discriminator: 1)
!4829 = !DILocation(line: 627, column: 39, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4819, file: !1677, line: 624, column: 44)
!4831 = !DILocation(line: 627, column: 42, scope: !4830)
!4832 = !DILocation(line: 627, column: 29, scope: !4830)
!4833 = !DILocation(line: 627, column: 21, scope: !4830)
!4834 = !DILocation(line: 627, column: 27, scope: !4830)
!4835 = !DILocation(line: 628, column: 39, scope: !4830)
!4836 = !DILocation(line: 628, column: 42, scope: !4830)
!4837 = !DILocation(line: 628, column: 29, scope: !4830)
!4838 = !DILocation(line: 628, column: 21, scope: !4830)
!4839 = !DILocation(line: 628, column: 27, scope: !4830)
!4840 = !DILocation(line: 629, column: 39, scope: !4830)
!4841 = !DILocation(line: 629, column: 42, scope: !4830)
!4842 = !DILocation(line: 629, column: 29, scope: !4830)
!4843 = !DILocation(line: 629, column: 21, scope: !4830)
!4844 = !DILocation(line: 629, column: 27, scope: !4830)
!4845 = !DILocation(line: 630, column: 21, scope: !4830)
!4846 = !DILocation(line: 632, column: 39, scope: !4830)
!4847 = !DILocation(line: 632, column: 42, scope: !4830)
!4848 = !DILocation(line: 632, column: 29, scope: !4830)
!4849 = !DILocation(line: 632, column: 21, scope: !4830)
!4850 = !DILocation(line: 632, column: 27, scope: !4830)
!4851 = !DILocation(line: 633, column: 29, scope: !4830)
!4852 = !DILocation(line: 633, column: 21, scope: !4830)
!4853 = !DILocation(line: 633, column: 27, scope: !4830)
!4854 = !DILocation(line: 634, column: 29, scope: !4830)
!4855 = !DILocation(line: 634, column: 21, scope: !4830)
!4856 = !DILocation(line: 634, column: 27, scope: !4830)
!4857 = !DILocation(line: 635, column: 21, scope: !4830)
!4858 = !DILocation(line: 637, column: 39, scope: !4830)
!4859 = !DILocation(line: 637, column: 42, scope: !4830)
!4860 = !DILocation(line: 637, column: 29, scope: !4830)
!4861 = !DILocation(line: 637, column: 21, scope: !4830)
!4862 = !DILocation(line: 637, column: 27, scope: !4830)
!4863 = !DILocation(line: 638, column: 39, scope: !4830)
!4864 = !DILocation(line: 638, column: 42, scope: !4830)
!4865 = !DILocation(line: 638, column: 29, scope: !4830)
!4866 = !DILocation(line: 638, column: 21, scope: !4830)
!4867 = !DILocation(line: 638, column: 27, scope: !4830)
!4868 = !DILocation(line: 639, column: 29, scope: !4830)
!4869 = !DILocation(line: 639, column: 21, scope: !4830)
!4870 = !DILocation(line: 639, column: 27, scope: !4830)
!4871 = !DILocation(line: 640, column: 21, scope: !4830)
!4872 = !DILocation(line: 642, column: 39, scope: !4830)
!4873 = !DILocation(line: 642, column: 42, scope: !4830)
!4874 = !DILocation(line: 642, column: 29, scope: !4830)
!4875 = !DILocation(line: 642, column: 21, scope: !4830)
!4876 = !DILocation(line: 642, column: 27, scope: !4830)
!4877 = !DILocation(line: 643, column: 39, scope: !4830)
!4878 = !DILocation(line: 643, column: 42, scope: !4830)
!4879 = !DILocation(line: 643, column: 29, scope: !4830)
!4880 = !DILocation(line: 643, column: 21, scope: !4830)
!4881 = !DILocation(line: 643, column: 27, scope: !4830)
!4882 = !DILocation(line: 644, column: 29, scope: !4830)
!4883 = !DILocation(line: 644, column: 21, scope: !4830)
!4884 = !DILocation(line: 644, column: 27, scope: !4830)
!4885 = !DILocation(line: 645, column: 21, scope: !4830)
!4886 = !DILocation(line: 647, column: 13, scope: !4819)
!4887 = !DILocation(line: 648, column: 9, scope: !4814)
!4888 = !DILocation(line: 621, column: 45, scope: !4889)
!4889 = !DILexicalBlockFile(scope: !4807, file: !1677, discriminator: 2)
!4890 = !DILocation(line: 621, column: 9, scope: !4889)
!4891 = distinct !{!4891, !4892}
!4892 = !DILocation(line: 621, column: 9, scope: !4803)
!4893 = !DILocation(line: 649, column: 5, scope: !4803)
!4894 = !DILocation(line: 620, column: 31, scope: !4895)
!4895 = !DILexicalBlockFile(scope: !4797, file: !1677, discriminator: 2)
!4896 = !DILocation(line: 620, column: 5, scope: !4895)
!4897 = distinct !{!4897, !4898}
!4898 = !DILocation(line: 620, column: 5, scope: !4571)
!4899 = !DILocation(line: 652, column: 12, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4571, file: !1677, line: 652, column: 5)
!4901 = !DILocation(line: 652, column: 10, scope: !4900)
!4902 = !DILocation(line: 652, column: 17, scope: !4903)
!4903 = !DILexicalBlockFile(scope: !4904, file: !1677, discriminator: 1)
!4904 = distinct !DILexicalBlock(scope: !4900, file: !1677, line: 652, column: 5)
!4905 = !DILocation(line: 652, column: 19, scope: !4903)
!4906 = !DILocation(line: 652, column: 5, scope: !4903)
!4907 = !DILocation(line: 653, column: 16, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !1677, line: 653, column: 9)
!4909 = distinct !DILexicalBlock(scope: !4904, file: !1677, line: 652, column: 29)
!4910 = !DILocation(line: 653, column: 14, scope: !4908)
!4911 = !DILocation(line: 653, column: 21, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !4913, file: !1677, discriminator: 1)
!4913 = distinct !DILexicalBlock(scope: !4908, file: !1677, line: 653, column: 9)
!4914 = !DILocation(line: 653, column: 23, scope: !4912)
!4915 = !DILocation(line: 653, column: 9, scope: !4912)
!4916 = !DILocation(line: 654, column: 15, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !1677, line: 653, column: 37)
!4918 = !DILocation(line: 655, column: 20, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4917, file: !1677, line: 655, column: 13)
!4920 = !DILocation(line: 655, column: 18, scope: !4919)
!4921 = !DILocation(line: 655, column: 25, scope: !4922)
!4922 = !DILexicalBlockFile(scope: !4923, file: !1677, discriminator: 1)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !1677, line: 655, column: 13)
!4924 = !DILocation(line: 655, column: 29, scope: !4922)
!4925 = !DILocation(line: 655, column: 27, scope: !4922)
!4926 = !DILocation(line: 655, column: 13, scope: !4922)
!4927 = !DILocation(line: 656, column: 46, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4923, file: !1677, line: 655, column: 41)
!4929 = !DILocation(line: 656, column: 34, scope: !4928)
!4930 = !DILocation(line: 656, column: 32, scope: !4928)
!4931 = !DILocation(line: 657, column: 25, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !1677, line: 657, column: 17)
!4933 = !DILocation(line: 657, column: 22, scope: !4932)
!4934 = !DILocation(line: 657, column: 30, scope: !4935)
!4935 = !DILexicalBlockFile(scope: !4936, file: !1677, discriminator: 1)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !1677, line: 657, column: 17)
!4937 = !DILocation(line: 657, column: 35, scope: !4935)
!4938 = !DILocation(line: 657, column: 38, scope: !4935)
!4939 = !DILocation(line: 657, column: 33, scope: !4935)
!4940 = !DILocation(line: 657, column: 17, scope: !4935)
!4941 = !DILocation(line: 658, column: 39, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4936, file: !1677, line: 657, column: 57)
!4943 = !DILocation(line: 658, column: 25, scope: !4942)
!4944 = !DILocation(line: 658, column: 35, scope: !4942)
!4945 = !DILocation(line: 658, column: 23, scope: !4942)
!4946 = !DILocation(line: 659, column: 25, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4942, file: !1677, line: 659, column: 25)
!4948 = !DILocation(line: 659, column: 25, scope: !4942)
!4949 = !DILocation(line: 660, column: 54, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !1677, line: 659, column: 28)
!4951 = !DILocation(line: 660, column: 33, scope: !4950)
!4952 = !DILocation(line: 660, column: 51, scope: !4950)
!4953 = !DILocation(line: 660, column: 47, scope: !4950)
!4954 = !DILocation(line: 660, column: 31, scope: !4950)
!4955 = !DILocation(line: 661, column: 46, scope: !4950)
!4956 = !DILocation(line: 661, column: 48, scope: !4950)
!4957 = !DILocation(line: 661, column: 47, scope: !4950)
!4958 = !DILocation(line: 661, column: 34, scope: !4950)
!4959 = !DILocation(line: 661, column: 32, scope: !4950)
!4960 = !DILocation(line: 662, column: 50, scope: !4950)
!4961 = !DILocation(line: 662, column: 32, scope: !4950)
!4962 = !DILocation(line: 662, column: 30, scope: !4950)
!4963 = !DILocation(line: 663, column: 29, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4950, file: !1677, line: 663, column: 29)
!4965 = !DILocation(line: 663, column: 34, scope: !4964)
!4966 = !DILocation(line: 663, column: 29, scope: !4950)
!4967 = !DILocalVariable(name: "v2", scope: !4968, file: !1677, line: 664, type: !891)
!4968 = distinct !DILexicalBlock(scope: !4964, file: !1677, line: 663, column: 39)
!4969 = !DILocation(line: 664, column: 33, scope: !4968)
!4970 = !DILocation(line: 666, column: 43, scope: !4968)
!4971 = !DILocation(line: 666, column: 46, scope: !4968)
!4972 = !DILocation(line: 666, column: 51, scope: !4968)
!4973 = !DILocation(line: 666, column: 50, scope: !4968)
!4974 = !DILocation(line: 666, column: 33, scope: !4968)
!4975 = !DILocation(line: 666, column: 31, scope: !4968)
!4976 = !DILocation(line: 667, column: 56, scope: !4968)
!4977 = !DILocation(line: 667, column: 34, scope: !4968)
!4978 = !DILocation(line: 667, column: 48, scope: !4968)
!4979 = !DILocation(line: 667, column: 32, scope: !4968)
!4980 = !DILocation(line: 668, column: 56, scope: !4968)
!4981 = !DILocation(line: 668, column: 37, scope: !4968)
!4982 = !DILocation(line: 668, column: 35, scope: !4968)
!4983 = !DILocation(line: 671, column: 50, scope: !4968)
!4984 = !DILocation(line: 671, column: 57, scope: !4968)
!4985 = !DILocation(line: 671, column: 60, scope: !4968)
!4986 = !DILocation(line: 671, column: 66, scope: !4968)
!4987 = !DILocation(line: 671, column: 33, scope: !4968)
!4988 = !DILocation(line: 670, column: 63, scope: !4968)
!4989 = !DILocation(line: 670, column: 29, scope: !4968)
!4990 = !DILocation(line: 670, column: 47, scope: !4968)
!4991 = !DILocation(line: 670, column: 49, scope: !4968)
!4992 = !DILocation(line: 670, column: 56, scope: !4968)
!4993 = !DILocation(line: 670, column: 54, scope: !4968)
!4994 = !DILocation(line: 670, column: 58, scope: !4968)
!4995 = !DILocation(line: 670, column: 43, scope: !4968)
!4996 = !DILocation(line: 670, column: 32, scope: !4968)
!4997 = !DILocation(line: 670, column: 66, scope: !4968)
!4998 = !DILocation(line: 673, column: 50, scope: !4968)
!4999 = !DILocation(line: 673, column: 58, scope: !4968)
!5000 = !DILocation(line: 673, column: 61, scope: !4968)
!5001 = !DILocation(line: 673, column: 67, scope: !4968)
!5002 = !DILocation(line: 673, column: 73, scope: !4968)
!5003 = !DILocation(line: 673, column: 33, scope: !4968)
!5004 = !DILocation(line: 672, column: 63, scope: !4968)
!5005 = !DILocation(line: 672, column: 29, scope: !4968)
!5006 = !DILocation(line: 672, column: 47, scope: !4968)
!5007 = !DILocation(line: 672, column: 49, scope: !4968)
!5008 = !DILocation(line: 672, column: 56, scope: !4968)
!5009 = !DILocation(line: 672, column: 54, scope: !4968)
!5010 = !DILocation(line: 672, column: 58, scope: !4968)
!5011 = !DILocation(line: 672, column: 43, scope: !4968)
!5012 = !DILocation(line: 672, column: 32, scope: !4968)
!5013 = !DILocation(line: 672, column: 66, scope: !4968)
!5014 = !DILocation(line: 675, column: 50, scope: !4968)
!5015 = !DILocation(line: 675, column: 57, scope: !4968)
!5016 = !DILocation(line: 675, column: 60, scope: !4968)
!5017 = !DILocation(line: 675, column: 67, scope: !4968)
!5018 = !DILocation(line: 675, column: 33, scope: !4968)
!5019 = !DILocation(line: 674, column: 63, scope: !4968)
!5020 = !DILocation(line: 674, column: 29, scope: !4968)
!5021 = !DILocation(line: 674, column: 47, scope: !4968)
!5022 = !DILocation(line: 674, column: 49, scope: !4968)
!5023 = !DILocation(line: 674, column: 56, scope: !4968)
!5024 = !DILocation(line: 674, column: 54, scope: !4968)
!5025 = !DILocation(line: 674, column: 58, scope: !4968)
!5026 = !DILocation(line: 674, column: 43, scope: !4968)
!5027 = !DILocation(line: 674, column: 32, scope: !4968)
!5028 = !DILocation(line: 674, column: 66, scope: !4968)
!5029 = !DILocation(line: 676, column: 25, scope: !4968)
!5030 = !DILocation(line: 677, column: 36, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !1677, line: 677, column: 29)
!5032 = distinct !DILexicalBlock(scope: !4964, file: !1677, line: 676, column: 32)
!5033 = !DILocation(line: 677, column: 34, scope: !5031)
!5034 = !DILocation(line: 677, column: 41, scope: !5035)
!5035 = !DILexicalBlockFile(scope: !5036, file: !1677, discriminator: 1)
!5036 = distinct !DILexicalBlock(scope: !5031, file: !1677, line: 677, column: 29)
!5037 = !DILocation(line: 677, column: 43, scope: !5035)
!5038 = !DILocation(line: 677, column: 29, scope: !5035)
!5039 = !DILocation(line: 678, column: 47, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5036, file: !1677, line: 677, column: 53)
!5041 = !DILocation(line: 678, column: 50, scope: !5040)
!5042 = !DILocation(line: 678, column: 54, scope: !5040)
!5043 = !DILocation(line: 678, column: 37, scope: !5040)
!5044 = !DILocation(line: 678, column: 35, scope: !5040)
!5045 = !DILocation(line: 679, column: 48, scope: !5040)
!5046 = !DILocation(line: 679, column: 53, scope: !5040)
!5047 = !DILocation(line: 679, column: 58, scope: !5040)
!5048 = !DILocation(line: 679, column: 61, scope: !5040)
!5049 = !DILocation(line: 679, column: 37, scope: !5040)
!5050 = !DILocation(line: 679, column: 35, scope: !5040)
!5051 = !DILocation(line: 680, column: 72, scope: !5040)
!5052 = !DILocation(line: 680, column: 67, scope: !5040)
!5053 = !DILocation(line: 680, column: 33, scope: !5040)
!5054 = !DILocation(line: 680, column: 51, scope: !5040)
!5055 = !DILocation(line: 680, column: 53, scope: !5040)
!5056 = !DILocation(line: 680, column: 60, scope: !5040)
!5057 = !DILocation(line: 680, column: 58, scope: !5040)
!5058 = !DILocation(line: 680, column: 64, scope: !5040)
!5059 = !DILocation(line: 680, column: 62, scope: !5040)
!5060 = !DILocation(line: 680, column: 47, scope: !5040)
!5061 = !DILocation(line: 680, column: 36, scope: !5040)
!5062 = !DILocation(line: 680, column: 70, scope: !5040)
!5063 = !DILocation(line: 681, column: 29, scope: !5040)
!5064 = !DILocation(line: 677, column: 49, scope: !5065)
!5065 = !DILexicalBlockFile(scope: !5036, file: !1677, discriminator: 2)
!5066 = !DILocation(line: 677, column: 29, scope: !5065)
!5067 = distinct !{!5067, !5068}
!5068 = !DILocation(line: 677, column: 29, scope: !5032)
!5069 = !DILocation(line: 683, column: 21, scope: !4950)
!5070 = !DILocation(line: 684, column: 59, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !4947, file: !1677, line: 683, column: 28)
!5072 = !DILocation(line: 684, column: 25, scope: !5071)
!5073 = !DILocation(line: 684, column: 43, scope: !5071)
!5074 = !DILocation(line: 684, column: 45, scope: !5071)
!5075 = !DILocation(line: 684, column: 52, scope: !5071)
!5076 = !DILocation(line: 684, column: 50, scope: !5071)
!5077 = !DILocation(line: 684, column: 54, scope: !5071)
!5078 = !DILocation(line: 684, column: 39, scope: !5071)
!5079 = !DILocation(line: 684, column: 28, scope: !5071)
!5080 = !DILocation(line: 684, column: 62, scope: !5071)
!5081 = !DILocation(line: 685, column: 59, scope: !5071)
!5082 = !DILocation(line: 685, column: 25, scope: !5071)
!5083 = !DILocation(line: 685, column: 43, scope: !5071)
!5084 = !DILocation(line: 685, column: 45, scope: !5071)
!5085 = !DILocation(line: 685, column: 52, scope: !5071)
!5086 = !DILocation(line: 685, column: 50, scope: !5071)
!5087 = !DILocation(line: 685, column: 54, scope: !5071)
!5088 = !DILocation(line: 685, column: 39, scope: !5071)
!5089 = !DILocation(line: 685, column: 28, scope: !5071)
!5090 = !DILocation(line: 685, column: 62, scope: !5071)
!5091 = !DILocation(line: 686, column: 59, scope: !5071)
!5092 = !DILocation(line: 686, column: 25, scope: !5071)
!5093 = !DILocation(line: 686, column: 43, scope: !5071)
!5094 = !DILocation(line: 686, column: 45, scope: !5071)
!5095 = !DILocation(line: 686, column: 52, scope: !5071)
!5096 = !DILocation(line: 686, column: 50, scope: !5071)
!5097 = !DILocation(line: 686, column: 54, scope: !5071)
!5098 = !DILocation(line: 686, column: 39, scope: !5071)
!5099 = !DILocation(line: 686, column: 28, scope: !5071)
!5100 = !DILocation(line: 686, column: 62, scope: !5071)
!5101 = !DILocation(line: 688, column: 17, scope: !4942)
!5102 = !DILocation(line: 657, column: 53, scope: !5103)
!5103 = !DILexicalBlockFile(scope: !4936, file: !1677, discriminator: 2)
!5104 = !DILocation(line: 657, column: 17, scope: !5103)
!5105 = distinct !{!5105, !5106}
!5106 = !DILocation(line: 657, column: 17, scope: !4928)
!5107 = !DILocation(line: 690, column: 27, scope: !4928)
!5108 = !DILocation(line: 690, column: 24, scope: !4928)
!5109 = !DILocation(line: 690, column: 19, scope: !4928)
!5110 = !DILocation(line: 691, column: 13, scope: !4928)
!5111 = !DILocation(line: 655, column: 37, scope: !5112)
!5112 = !DILexicalBlockFile(scope: !4923, file: !1677, discriminator: 2)
!5113 = !DILocation(line: 655, column: 13, scope: !5112)
!5114 = distinct !{!5114, !5115}
!5115 = !DILocation(line: 655, column: 13, scope: !4917)
!5116 = !DILocation(line: 693, column: 22, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !4917, file: !1677, line: 693, column: 13)
!5118 = !DILocation(line: 693, column: 20, scope: !5117)
!5119 = !DILocation(line: 693, column: 18, scope: !5117)
!5120 = !DILocation(line: 693, column: 29, scope: !5121)
!5121 = !DILexicalBlockFile(scope: !5122, file: !1677, discriminator: 1)
!5122 = distinct !DILexicalBlock(scope: !5117, file: !1677, line: 693, column: 13)
!5123 = !DILocation(line: 693, column: 33, scope: !5121)
!5124 = !DILocation(line: 693, column: 31, scope: !5121)
!5125 = !DILocation(line: 693, column: 13, scope: !5121)
!5126 = !DILocation(line: 694, column: 46, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5122, file: !1677, line: 693, column: 47)
!5128 = !DILocation(line: 694, column: 34, scope: !5127)
!5129 = !DILocation(line: 694, column: 32, scope: !5127)
!5130 = !DILocation(line: 695, column: 34, scope: !5127)
!5131 = !DILocation(line: 695, column: 21, scope: !5127)
!5132 = !DILocation(line: 695, column: 19, scope: !5127)
!5133 = !DILocation(line: 696, column: 21, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5127, file: !1677, line: 696, column: 21)
!5135 = !DILocation(line: 696, column: 21, scope: !5127)
!5136 = !DILocalVariable(name: "mant", scope: !5137, file: !1677, line: 697, type: !891)
!5137 = distinct !DILexicalBlock(scope: !5134, file: !1677, line: 696, column: 24)
!5138 = !DILocation(line: 697, column: 25, scope: !5137)
!5139 = !DILocalVariable(name: "scale0", scope: !5137, file: !1677, line: 697, type: !891)
!5140 = !DILocation(line: 697, column: 31, scope: !5137)
!5141 = !DILocalVariable(name: "scale1", scope: !5137, file: !1677, line: 697, type: !891)
!5142 = !DILocation(line: 697, column: 39, scope: !5137)
!5143 = !DILocation(line: 698, column: 50, scope: !5137)
!5144 = !DILocation(line: 698, column: 30, scope: !5137)
!5145 = !DILocation(line: 698, column: 47, scope: !5137)
!5146 = !DILocation(line: 698, column: 28, scope: !5137)
!5147 = !DILocation(line: 699, column: 50, scope: !5137)
!5148 = !DILocation(line: 699, column: 30, scope: !5137)
!5149 = !DILocation(line: 699, column: 47, scope: !5137)
!5150 = !DILocation(line: 699, column: 28, scope: !5137)
!5151 = !DILocation(line: 700, column: 42, scope: !5137)
!5152 = !DILocation(line: 700, column: 44, scope: !5137)
!5153 = !DILocation(line: 700, column: 43, scope: !5137)
!5154 = !DILocation(line: 700, column: 30, scope: !5137)
!5155 = !DILocation(line: 700, column: 28, scope: !5137)
!5156 = !DILocation(line: 701, column: 46, scope: !5137)
!5157 = !DILocation(line: 701, column: 28, scope: !5137)
!5158 = !DILocation(line: 701, column: 26, scope: !5137)
!5159 = !DILocation(line: 702, column: 25, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5137, file: !1677, line: 702, column: 25)
!5161 = !DILocation(line: 702, column: 30, scope: !5160)
!5162 = !DILocation(line: 702, column: 25, scope: !5137)
!5163 = !DILocation(line: 704, column: 39, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5160, file: !1677, line: 702, column: 35)
!5165 = !DILocation(line: 704, column: 42, scope: !5164)
!5166 = !DILocation(line: 704, column: 47, scope: !5164)
!5167 = !DILocation(line: 704, column: 46, scope: !5164)
!5168 = !DILocation(line: 704, column: 29, scope: !5164)
!5169 = !DILocation(line: 704, column: 27, scope: !5164)
!5170 = !DILocation(line: 705, column: 52, scope: !5164)
!5171 = !DILocation(line: 705, column: 33, scope: !5164)
!5172 = !DILocation(line: 705, column: 31, scope: !5164)
!5173 = !DILocation(line: 706, column: 32, scope: !5164)
!5174 = !DILocation(line: 706, column: 36, scope: !5164)
!5175 = !DILocation(line: 706, column: 34, scope: !5164)
!5176 = !DILocation(line: 706, column: 30, scope: !5164)
!5177 = !DILocation(line: 707, column: 29, scope: !5164)
!5178 = !DILocation(line: 707, column: 33, scope: !5164)
!5179 = !DILocation(line: 707, column: 31, scope: !5164)
!5180 = !DILocation(line: 707, column: 27, scope: !5164)
!5181 = !DILocation(line: 709, column: 46, scope: !5164)
!5182 = !DILocation(line: 709, column: 53, scope: !5164)
!5183 = !DILocation(line: 709, column: 59, scope: !5164)
!5184 = !DILocation(line: 709, column: 29, scope: !5164)
!5185 = !DILocation(line: 708, column: 58, scope: !5164)
!5186 = !DILocation(line: 708, column: 25, scope: !5164)
!5187 = !DILocation(line: 708, column: 42, scope: !5164)
!5188 = !DILocation(line: 708, column: 44, scope: !5164)
!5189 = !DILocation(line: 708, column: 51, scope: !5164)
!5190 = !DILocation(line: 708, column: 49, scope: !5164)
!5191 = !DILocation(line: 708, column: 53, scope: !5164)
!5192 = !DILocation(line: 708, column: 28, scope: !5164)
!5193 = !DILocation(line: 708, column: 61, scope: !5164)
!5194 = !DILocation(line: 711, column: 46, scope: !5164)
!5195 = !DILocation(line: 711, column: 53, scope: !5164)
!5196 = !DILocation(line: 711, column: 59, scope: !5164)
!5197 = !DILocation(line: 711, column: 29, scope: !5164)
!5198 = !DILocation(line: 710, column: 58, scope: !5164)
!5199 = !DILocation(line: 710, column: 25, scope: !5164)
!5200 = !DILocation(line: 710, column: 42, scope: !5164)
!5201 = !DILocation(line: 710, column: 44, scope: !5164)
!5202 = !DILocation(line: 710, column: 51, scope: !5164)
!5203 = !DILocation(line: 710, column: 49, scope: !5164)
!5204 = !DILocation(line: 710, column: 53, scope: !5164)
!5205 = !DILocation(line: 710, column: 28, scope: !5164)
!5206 = !DILocation(line: 710, column: 61, scope: !5164)
!5207 = !DILocation(line: 712, column: 32, scope: !5164)
!5208 = !DILocation(line: 712, column: 36, scope: !5164)
!5209 = !DILocation(line: 712, column: 34, scope: !5164)
!5210 = !DILocation(line: 712, column: 30, scope: !5164)
!5211 = !DILocation(line: 713, column: 29, scope: !5164)
!5212 = !DILocation(line: 713, column: 33, scope: !5164)
!5213 = !DILocation(line: 713, column: 31, scope: !5164)
!5214 = !DILocation(line: 713, column: 27, scope: !5164)
!5215 = !DILocation(line: 715, column: 46, scope: !5164)
!5216 = !DILocation(line: 715, column: 53, scope: !5164)
!5217 = !DILocation(line: 715, column: 59, scope: !5164)
!5218 = !DILocation(line: 715, column: 29, scope: !5164)
!5219 = !DILocation(line: 714, column: 58, scope: !5164)
!5220 = !DILocation(line: 714, column: 25, scope: !5164)
!5221 = !DILocation(line: 714, column: 42, scope: !5164)
!5222 = !DILocation(line: 714, column: 44, scope: !5164)
!5223 = !DILocation(line: 714, column: 51, scope: !5164)
!5224 = !DILocation(line: 714, column: 49, scope: !5164)
!5225 = !DILocation(line: 714, column: 53, scope: !5164)
!5226 = !DILocation(line: 714, column: 28, scope: !5164)
!5227 = !DILocation(line: 714, column: 61, scope: !5164)
!5228 = !DILocation(line: 717, column: 46, scope: !5164)
!5229 = !DILocation(line: 717, column: 53, scope: !5164)
!5230 = !DILocation(line: 717, column: 59, scope: !5164)
!5231 = !DILocation(line: 717, column: 29, scope: !5164)
!5232 = !DILocation(line: 716, column: 58, scope: !5164)
!5233 = !DILocation(line: 716, column: 25, scope: !5164)
!5234 = !DILocation(line: 716, column: 42, scope: !5164)
!5235 = !DILocation(line: 716, column: 44, scope: !5164)
!5236 = !DILocation(line: 716, column: 51, scope: !5164)
!5237 = !DILocation(line: 716, column: 49, scope: !5164)
!5238 = !DILocation(line: 716, column: 53, scope: !5164)
!5239 = !DILocation(line: 716, column: 28, scope: !5164)
!5240 = !DILocation(line: 716, column: 61, scope: !5164)
!5241 = !DILocation(line: 719, column: 46, scope: !5164)
!5242 = !DILocation(line: 719, column: 53, scope: !5164)
!5243 = !DILocation(line: 719, column: 56, scope: !5164)
!5244 = !DILocation(line: 719, column: 29, scope: !5164)
!5245 = !DILocation(line: 718, column: 58, scope: !5164)
!5246 = !DILocation(line: 718, column: 25, scope: !5164)
!5247 = !DILocation(line: 718, column: 42, scope: !5164)
!5248 = !DILocation(line: 718, column: 44, scope: !5164)
!5249 = !DILocation(line: 718, column: 51, scope: !5164)
!5250 = !DILocation(line: 718, column: 49, scope: !5164)
!5251 = !DILocation(line: 718, column: 53, scope: !5164)
!5252 = !DILocation(line: 718, column: 28, scope: !5164)
!5253 = !DILocation(line: 718, column: 61, scope: !5164)
!5254 = !DILocation(line: 721, column: 46, scope: !5164)
!5255 = !DILocation(line: 721, column: 53, scope: !5164)
!5256 = !DILocation(line: 721, column: 56, scope: !5164)
!5257 = !DILocation(line: 721, column: 29, scope: !5164)
!5258 = !DILocation(line: 720, column: 58, scope: !5164)
!5259 = !DILocation(line: 720, column: 25, scope: !5164)
!5260 = !DILocation(line: 720, column: 42, scope: !5164)
!5261 = !DILocation(line: 720, column: 44, scope: !5164)
!5262 = !DILocation(line: 720, column: 51, scope: !5164)
!5263 = !DILocation(line: 720, column: 49, scope: !5164)
!5264 = !DILocation(line: 720, column: 53, scope: !5164)
!5265 = !DILocation(line: 720, column: 28, scope: !5164)
!5266 = !DILocation(line: 720, column: 61, scope: !5164)
!5267 = !DILocation(line: 722, column: 21, scope: !5164)
!5268 = !DILocation(line: 723, column: 32, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !1677, line: 723, column: 25)
!5270 = distinct !DILexicalBlock(scope: !5160, file: !1677, line: 722, column: 28)
!5271 = !DILocation(line: 723, column: 30, scope: !5269)
!5272 = !DILocation(line: 723, column: 37, scope: !5273)
!5273 = !DILexicalBlockFile(scope: !5274, file: !1677, discriminator: 1)
!5274 = distinct !DILexicalBlock(scope: !5269, file: !1677, line: 723, column: 25)
!5275 = !DILocation(line: 723, column: 39, scope: !5273)
!5276 = !DILocation(line: 723, column: 25, scope: !5273)
!5277 = !DILocation(line: 724, column: 46, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !1677, line: 723, column: 49)
!5279 = !DILocation(line: 724, column: 49, scope: !5278)
!5280 = !DILocation(line: 724, column: 53, scope: !5278)
!5281 = !DILocation(line: 724, column: 36, scope: !5278)
!5282 = !DILocation(line: 724, column: 34, scope: !5278)
!5283 = !DILocation(line: 726, column: 44, scope: !5278)
!5284 = !DILocation(line: 726, column: 49, scope: !5278)
!5285 = !DILocation(line: 726, column: 54, scope: !5278)
!5286 = !DILocation(line: 726, column: 60, scope: !5278)
!5287 = !DILocation(line: 726, column: 33, scope: !5278)
!5288 = !DILocation(line: 725, column: 62, scope: !5278)
!5289 = !DILocation(line: 725, column: 29, scope: !5278)
!5290 = !DILocation(line: 725, column: 46, scope: !5278)
!5291 = !DILocation(line: 725, column: 48, scope: !5278)
!5292 = !DILocation(line: 725, column: 55, scope: !5278)
!5293 = !DILocation(line: 725, column: 53, scope: !5278)
!5294 = !DILocation(line: 725, column: 59, scope: !5278)
!5295 = !DILocation(line: 725, column: 57, scope: !5278)
!5296 = !DILocation(line: 725, column: 32, scope: !5278)
!5297 = !DILocation(line: 725, column: 65, scope: !5278)
!5298 = !DILocation(line: 728, column: 44, scope: !5278)
!5299 = !DILocation(line: 728, column: 49, scope: !5278)
!5300 = !DILocation(line: 728, column: 54, scope: !5278)
!5301 = !DILocation(line: 728, column: 60, scope: !5278)
!5302 = !DILocation(line: 728, column: 33, scope: !5278)
!5303 = !DILocation(line: 727, column: 62, scope: !5278)
!5304 = !DILocation(line: 727, column: 29, scope: !5278)
!5305 = !DILocation(line: 727, column: 46, scope: !5278)
!5306 = !DILocation(line: 727, column: 48, scope: !5278)
!5307 = !DILocation(line: 727, column: 55, scope: !5278)
!5308 = !DILocation(line: 727, column: 53, scope: !5278)
!5309 = !DILocation(line: 727, column: 59, scope: !5278)
!5310 = !DILocation(line: 727, column: 57, scope: !5278)
!5311 = !DILocation(line: 727, column: 32, scope: !5278)
!5312 = !DILocation(line: 727, column: 65, scope: !5278)
!5313 = !DILocation(line: 729, column: 25, scope: !5278)
!5314 = !DILocation(line: 723, column: 45, scope: !5315)
!5315 = !DILexicalBlockFile(scope: !5274, file: !1677, discriminator: 2)
!5316 = !DILocation(line: 723, column: 25, scope: !5315)
!5317 = distinct !{!5317, !5318}
!5318 = !DILocation(line: 723, column: 25, scope: !5270)
!5319 = !DILocation(line: 731, column: 17, scope: !5137)
!5320 = !DILocation(line: 732, column: 54, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5134, file: !1677, line: 731, column: 24)
!5322 = !DILocation(line: 732, column: 21, scope: !5321)
!5323 = !DILocation(line: 732, column: 38, scope: !5321)
!5324 = !DILocation(line: 732, column: 40, scope: !5321)
!5325 = !DILocation(line: 732, column: 47, scope: !5321)
!5326 = !DILocation(line: 732, column: 45, scope: !5321)
!5327 = !DILocation(line: 732, column: 49, scope: !5321)
!5328 = !DILocation(line: 732, column: 24, scope: !5321)
!5329 = !DILocation(line: 732, column: 57, scope: !5321)
!5330 = !DILocation(line: 733, column: 54, scope: !5321)
!5331 = !DILocation(line: 733, column: 21, scope: !5321)
!5332 = !DILocation(line: 733, column: 38, scope: !5321)
!5333 = !DILocation(line: 733, column: 40, scope: !5321)
!5334 = !DILocation(line: 733, column: 47, scope: !5321)
!5335 = !DILocation(line: 733, column: 45, scope: !5321)
!5336 = !DILocation(line: 733, column: 49, scope: !5321)
!5337 = !DILocation(line: 733, column: 24, scope: !5321)
!5338 = !DILocation(line: 733, column: 57, scope: !5321)
!5339 = !DILocation(line: 734, column: 54, scope: !5321)
!5340 = !DILocation(line: 734, column: 21, scope: !5321)
!5341 = !DILocation(line: 734, column: 38, scope: !5321)
!5342 = !DILocation(line: 734, column: 40, scope: !5321)
!5343 = !DILocation(line: 734, column: 47, scope: !5321)
!5344 = !DILocation(line: 734, column: 45, scope: !5321)
!5345 = !DILocation(line: 734, column: 49, scope: !5321)
!5346 = !DILocation(line: 734, column: 24, scope: !5321)
!5347 = !DILocation(line: 734, column: 57, scope: !5321)
!5348 = !DILocation(line: 735, column: 54, scope: !5321)
!5349 = !DILocation(line: 735, column: 21, scope: !5321)
!5350 = !DILocation(line: 735, column: 38, scope: !5321)
!5351 = !DILocation(line: 735, column: 40, scope: !5321)
!5352 = !DILocation(line: 735, column: 47, scope: !5321)
!5353 = !DILocation(line: 735, column: 45, scope: !5321)
!5354 = !DILocation(line: 735, column: 49, scope: !5321)
!5355 = !DILocation(line: 735, column: 24, scope: !5321)
!5356 = !DILocation(line: 735, column: 57, scope: !5321)
!5357 = !DILocation(line: 736, column: 54, scope: !5321)
!5358 = !DILocation(line: 736, column: 21, scope: !5321)
!5359 = !DILocation(line: 736, column: 38, scope: !5321)
!5360 = !DILocation(line: 736, column: 40, scope: !5321)
!5361 = !DILocation(line: 736, column: 47, scope: !5321)
!5362 = !DILocation(line: 736, column: 45, scope: !5321)
!5363 = !DILocation(line: 736, column: 49, scope: !5321)
!5364 = !DILocation(line: 736, column: 24, scope: !5321)
!5365 = !DILocation(line: 736, column: 57, scope: !5321)
!5366 = !DILocation(line: 737, column: 54, scope: !5321)
!5367 = !DILocation(line: 737, column: 21, scope: !5321)
!5368 = !DILocation(line: 737, column: 38, scope: !5321)
!5369 = !DILocation(line: 737, column: 40, scope: !5321)
!5370 = !DILocation(line: 737, column: 47, scope: !5321)
!5371 = !DILocation(line: 737, column: 45, scope: !5321)
!5372 = !DILocation(line: 737, column: 49, scope: !5321)
!5373 = !DILocation(line: 737, column: 24, scope: !5321)
!5374 = !DILocation(line: 737, column: 57, scope: !5321)
!5375 = !DILocation(line: 740, column: 27, scope: !5127)
!5376 = !DILocation(line: 740, column: 24, scope: !5127)
!5377 = !DILocation(line: 740, column: 19, scope: !5127)
!5378 = !DILocation(line: 741, column: 13, scope: !5127)
!5379 = !DILocation(line: 693, column: 43, scope: !5380)
!5380 = !DILexicalBlockFile(scope: !5122, file: !1677, discriminator: 2)
!5381 = !DILocation(line: 693, column: 13, scope: !5380)
!5382 = distinct !{!5382, !5383}
!5383 = !DILocation(line: 693, column: 13, scope: !4917)
!5384 = !DILocation(line: 743, column: 22, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !4917, file: !1677, line: 743, column: 13)
!5386 = !DILocation(line: 743, column: 20, scope: !5385)
!5387 = !DILocation(line: 743, column: 18, scope: !5385)
!5388 = !DILocation(line: 743, column: 31, scope: !5389)
!5389 = !DILexicalBlockFile(scope: !5390, file: !1677, discriminator: 1)
!5390 = distinct !DILexicalBlock(scope: !5385, file: !1677, line: 743, column: 13)
!5391 = !DILocation(line: 743, column: 33, scope: !5389)
!5392 = !DILocation(line: 743, column: 13, scope: !5389)
!5393 = !DILocation(line: 744, column: 25, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !1677, line: 744, column: 17)
!5395 = distinct !DILexicalBlock(scope: !5390, file: !1677, line: 743, column: 44)
!5396 = !DILocation(line: 744, column: 22, scope: !5394)
!5397 = !DILocation(line: 744, column: 30, scope: !5398)
!5398 = !DILexicalBlockFile(scope: !5399, file: !1677, discriminator: 1)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !1677, line: 744, column: 17)
!5400 = !DILocation(line: 744, column: 35, scope: !5398)
!5401 = !DILocation(line: 744, column: 38, scope: !5398)
!5402 = !DILocation(line: 744, column: 33, scope: !5398)
!5403 = !DILocation(line: 744, column: 17, scope: !5398)
!5404 = !DILocation(line: 745, column: 55, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5399, file: !1677, line: 744, column: 57)
!5406 = !DILocation(line: 745, column: 21, scope: !5405)
!5407 = !DILocation(line: 745, column: 39, scope: !5405)
!5408 = !DILocation(line: 745, column: 41, scope: !5405)
!5409 = !DILocation(line: 745, column: 48, scope: !5405)
!5410 = !DILocation(line: 745, column: 46, scope: !5405)
!5411 = !DILocation(line: 745, column: 50, scope: !5405)
!5412 = !DILocation(line: 745, column: 35, scope: !5405)
!5413 = !DILocation(line: 745, column: 24, scope: !5405)
!5414 = !DILocation(line: 745, column: 58, scope: !5405)
!5415 = !DILocation(line: 746, column: 55, scope: !5405)
!5416 = !DILocation(line: 746, column: 21, scope: !5405)
!5417 = !DILocation(line: 746, column: 39, scope: !5405)
!5418 = !DILocation(line: 746, column: 41, scope: !5405)
!5419 = !DILocation(line: 746, column: 48, scope: !5405)
!5420 = !DILocation(line: 746, column: 46, scope: !5405)
!5421 = !DILocation(line: 746, column: 50, scope: !5405)
!5422 = !DILocation(line: 746, column: 35, scope: !5405)
!5423 = !DILocation(line: 746, column: 24, scope: !5405)
!5424 = !DILocation(line: 746, column: 58, scope: !5405)
!5425 = !DILocation(line: 747, column: 55, scope: !5405)
!5426 = !DILocation(line: 747, column: 21, scope: !5405)
!5427 = !DILocation(line: 747, column: 39, scope: !5405)
!5428 = !DILocation(line: 747, column: 41, scope: !5405)
!5429 = !DILocation(line: 747, column: 48, scope: !5405)
!5430 = !DILocation(line: 747, column: 46, scope: !5405)
!5431 = !DILocation(line: 747, column: 50, scope: !5405)
!5432 = !DILocation(line: 747, column: 35, scope: !5405)
!5433 = !DILocation(line: 747, column: 24, scope: !5405)
!5434 = !DILocation(line: 747, column: 58, scope: !5405)
!5435 = !DILocation(line: 748, column: 17, scope: !5405)
!5436 = !DILocation(line: 744, column: 53, scope: !5437)
!5437 = !DILexicalBlockFile(scope: !5399, file: !1677, discriminator: 2)
!5438 = !DILocation(line: 744, column: 17, scope: !5437)
!5439 = distinct !{!5439, !5440}
!5440 = !DILocation(line: 744, column: 17, scope: !5395)
!5441 = !DILocation(line: 749, column: 13, scope: !5395)
!5442 = !DILocation(line: 743, column: 40, scope: !5443)
!5443 = !DILexicalBlockFile(scope: !5390, file: !1677, discriminator: 2)
!5444 = !DILocation(line: 743, column: 13, scope: !5443)
!5445 = distinct !{!5445, !5446}
!5446 = !DILocation(line: 743, column: 13, scope: !4917)
!5447 = !DILocation(line: 750, column: 9, scope: !4917)
!5448 = !DILocation(line: 653, column: 31, scope: !5449)
!5449 = !DILexicalBlockFile(scope: !4913, file: !1677, discriminator: 2)
!5450 = !DILocation(line: 653, column: 9, scope: !5449)
!5451 = distinct !{!5451, !5452}
!5452 = !DILocation(line: 653, column: 9, scope: !4909)
!5453 = !DILocation(line: 751, column: 5, scope: !4909)
!5454 = !DILocation(line: 652, column: 25, scope: !5455)
!5455 = !DILexicalBlockFile(scope: !4904, file: !1677, discriminator: 2)
!5456 = !DILocation(line: 652, column: 5, scope: !5455)
!5457 = distinct !{!5457, !5458}
!5458 = !DILocation(line: 652, column: 5, scope: !4571)
!5459 = !DILocation(line: 752, column: 5, scope: !4571)
!5460 = distinct !DISubprogram(name: "mp_decode_layer3", scope: !1677, file: !1677, line: 1306, type: !4251, isLocal: true, isDefinition: true, scopeLine: 1307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!5461 = !DILocalVariable(name: "slen", arg: 1, scope: !5462, file: !1677, line: 775, type: !1334)
!5462 = distinct !DISubprogram(name: "lsf_sf_expand", scope: !1677, file: !1677, line: 775, type: !5463, isLocal: true, isDefinition: true, scopeLine: 777, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!5463 = !DISubroutineType(types: !5464)
!5464 = !{null, !1334, !891, !891, !891, !891}
!5465 = !DILocation(line: 775, column: 70, scope: !5462, inlinedAt: !5466)
!5466 = distinct !DILocation(line: 1515, column: 25, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !1677, line: 1514, column: 28)
!5468 = distinct !DILexicalBlock(scope: !5469, file: !1677, line: 1511, column: 32)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !1677, line: 1508, column: 25)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !1677, line: 1506, column: 24)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !1677, line: 1493, column: 21)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !1677, line: 1483, column: 20)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !1677, line: 1432, column: 17)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !1677, line: 1428, column: 49)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !1677, line: 1428, column: 9)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !1677, line: 1428, column: 9)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !1677, line: 1427, column: 36)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !1677, line: 1427, column: 5)
!5479 = distinct !DILexicalBlock(scope: !5460, file: !1677, line: 1427, column: 5)
!5480 = !DILocalVariable(name: "sf", arg: 2, scope: !5462, file: !1677, line: 775, type: !891)
!5481 = !DILocation(line: 775, column: 80, scope: !5462, inlinedAt: !5466)
!5482 = !DILocalVariable(name: "n1", arg: 3, scope: !5462, file: !1677, line: 775, type: !891)
!5483 = !DILocation(line: 775, column: 88, scope: !5462, inlinedAt: !5466)
!5484 = !DILocalVariable(name: "n2", arg: 4, scope: !5462, file: !1677, line: 775, type: !891)
!5485 = !DILocation(line: 775, column: 96, scope: !5462, inlinedAt: !5466)
!5486 = !DILocalVariable(name: "n3", arg: 5, scope: !5462, file: !1677, line: 776, type: !891)
!5487 = !DILocation(line: 776, column: 48, scope: !5462, inlinedAt: !5466)
!5488 = !DILocalVariable(name: "m", scope: !5489, file: !1677, line: 778, type: !891)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !1677, line: 778, column: 18)
!5490 = distinct !DILexicalBlock(scope: !5462, file: !1677, line: 778, column: 9)
!5491 = !DILocation(line: 778, column: 24, scope: !5489, inlinedAt: !5466)
!5492 = !DILocalVariable(name: "m", scope: !5493, file: !1677, line: 778, type: !891)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !1677, line: 778, column: 145)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !1677, line: 778, column: 136)
!5495 = distinct !DILexicalBlock(scope: !5490, file: !1677, line: 778, column: 86)
!5496 = !DILocation(line: 778, column: 151, scope: !5493, inlinedAt: !5466)
!5497 = !DILocalVariable(name: "m", scope: !5498, file: !1677, line: 778, type: !891)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !1677, line: 778, column: 223)
!5499 = distinct !DILexicalBlock(scope: !5494, file: !1677, line: 778, column: 214)
!5500 = !DILocation(line: 778, column: 229, scope: !5498, inlinedAt: !5466)
!5501 = !DILocalVariable(name: "m", scope: !5502, file: !1677, line: 779, type: !891)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !1677, line: 779, column: 18)
!5503 = distinct !DILexicalBlock(scope: !5462, file: !1677, line: 779, column: 9)
!5504 = !DILocation(line: 779, column: 24, scope: !5502, inlinedAt: !5466)
!5505 = !DILocalVariable(name: "m", scope: !5506, file: !1677, line: 779, type: !891)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !1677, line: 779, column: 145)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !1677, line: 779, column: 136)
!5508 = distinct !DILexicalBlock(scope: !5503, file: !1677, line: 779, column: 86)
!5509 = !DILocation(line: 779, column: 151, scope: !5506, inlinedAt: !5466)
!5510 = !DILocalVariable(name: "m", scope: !5511, file: !1677, line: 779, type: !891)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !1677, line: 779, column: 223)
!5512 = distinct !DILexicalBlock(scope: !5507, file: !1677, line: 779, column: 214)
!5513 = !DILocation(line: 779, column: 229, scope: !5511, inlinedAt: !5466)
!5514 = !DILocalVariable(name: "m", scope: !5515, file: !1677, line: 780, type: !891)
!5515 = distinct !DILexicalBlock(scope: !5516, file: !1677, line: 780, column: 18)
!5516 = distinct !DILexicalBlock(scope: !5462, file: !1677, line: 780, column: 9)
!5517 = !DILocation(line: 780, column: 24, scope: !5515, inlinedAt: !5466)
!5518 = !DILocalVariable(name: "m", scope: !5519, file: !1677, line: 780, type: !891)
!5519 = distinct !DILexicalBlock(scope: !5520, file: !1677, line: 780, column: 145)
!5520 = distinct !DILexicalBlock(scope: !5521, file: !1677, line: 780, column: 136)
!5521 = distinct !DILexicalBlock(scope: !5516, file: !1677, line: 780, column: 86)
!5522 = !DILocation(line: 780, column: 151, scope: !5519, inlinedAt: !5466)
!5523 = !DILocalVariable(name: "m", scope: !5524, file: !1677, line: 780, type: !891)
!5524 = distinct !DILexicalBlock(scope: !5525, file: !1677, line: 780, column: 223)
!5525 = distinct !DILexicalBlock(scope: !5520, file: !1677, line: 780, column: 214)
!5526 = !DILocation(line: 780, column: 229, scope: !5524, inlinedAt: !5466)
!5527 = !DILocation(line: 775, column: 70, scope: !5462, inlinedAt: !5528)
!5528 = distinct !DILocation(line: 1512, column: 25, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5468, file: !1677, line: 1511, column: 42)
!5530 = !DILocation(line: 775, column: 80, scope: !5462, inlinedAt: !5528)
!5531 = !DILocation(line: 775, column: 88, scope: !5462, inlinedAt: !5528)
!5532 = !DILocation(line: 775, column: 96, scope: !5462, inlinedAt: !5528)
!5533 = !DILocation(line: 776, column: 48, scope: !5462, inlinedAt: !5528)
!5534 = !DILocation(line: 778, column: 24, scope: !5489, inlinedAt: !5528)
!5535 = !DILocation(line: 778, column: 151, scope: !5493, inlinedAt: !5528)
!5536 = !DILocation(line: 778, column: 229, scope: !5498, inlinedAt: !5528)
!5537 = !DILocation(line: 779, column: 24, scope: !5502, inlinedAt: !5528)
!5538 = !DILocation(line: 779, column: 151, scope: !5506, inlinedAt: !5528)
!5539 = !DILocation(line: 779, column: 229, scope: !5511, inlinedAt: !5528)
!5540 = !DILocation(line: 780, column: 24, scope: !5515, inlinedAt: !5528)
!5541 = !DILocation(line: 780, column: 151, scope: !5519, inlinedAt: !5528)
!5542 = !DILocation(line: 780, column: 229, scope: !5524, inlinedAt: !5528)
!5543 = !DILocation(line: 775, column: 70, scope: !5462, inlinedAt: !5544)
!5544 = distinct !DILocation(line: 1509, column: 25, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5469, file: !1677, line: 1508, column: 35)
!5546 = !DILocation(line: 775, column: 80, scope: !5462, inlinedAt: !5544)
!5547 = !DILocation(line: 775, column: 88, scope: !5462, inlinedAt: !5544)
!5548 = !DILocation(line: 775, column: 96, scope: !5462, inlinedAt: !5544)
!5549 = !DILocation(line: 776, column: 48, scope: !5462, inlinedAt: !5544)
!5550 = !DILocation(line: 778, column: 24, scope: !5489, inlinedAt: !5544)
!5551 = !DILocation(line: 778, column: 151, scope: !5493, inlinedAt: !5544)
!5552 = !DILocation(line: 778, column: 229, scope: !5498, inlinedAt: !5544)
!5553 = !DILocation(line: 779, column: 24, scope: !5502, inlinedAt: !5544)
!5554 = !DILocation(line: 779, column: 151, scope: !5506, inlinedAt: !5544)
!5555 = !DILocation(line: 779, column: 229, scope: !5511, inlinedAt: !5544)
!5556 = !DILocation(line: 780, column: 24, scope: !5515, inlinedAt: !5544)
!5557 = !DILocation(line: 780, column: 151, scope: !5519, inlinedAt: !5544)
!5558 = !DILocation(line: 780, column: 229, scope: !5524, inlinedAt: !5544)
!5559 = !DILocation(line: 775, column: 70, scope: !5462, inlinedAt: !5560)
!5560 = distinct !DILocation(line: 1503, column: 25, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5562, file: !1677, line: 1502, column: 28)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !1677, line: 1499, column: 32)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !1677, line: 1496, column: 25)
!5564 = distinct !DILexicalBlock(scope: !5471, file: !1677, line: 1493, column: 51)
!5565 = !DILocation(line: 775, column: 80, scope: !5462, inlinedAt: !5560)
!5566 = !DILocation(line: 775, column: 88, scope: !5462, inlinedAt: !5560)
!5567 = !DILocation(line: 775, column: 96, scope: !5462, inlinedAt: !5560)
!5568 = !DILocation(line: 776, column: 48, scope: !5462, inlinedAt: !5560)
!5569 = !DILocation(line: 778, column: 24, scope: !5489, inlinedAt: !5560)
!5570 = !DILocation(line: 778, column: 151, scope: !5493, inlinedAt: !5560)
!5571 = !DILocation(line: 778, column: 229, scope: !5498, inlinedAt: !5560)
!5572 = !DILocation(line: 779, column: 24, scope: !5502, inlinedAt: !5560)
!5573 = !DILocation(line: 779, column: 151, scope: !5506, inlinedAt: !5560)
!5574 = !DILocation(line: 779, column: 229, scope: !5511, inlinedAt: !5560)
!5575 = !DILocation(line: 780, column: 24, scope: !5515, inlinedAt: !5560)
!5576 = !DILocation(line: 780, column: 151, scope: !5519, inlinedAt: !5560)
!5577 = !DILocation(line: 780, column: 229, scope: !5524, inlinedAt: !5560)
!5578 = !DILocation(line: 775, column: 70, scope: !5462, inlinedAt: !5579)
!5579 = distinct !DILocation(line: 1500, column: 25, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5562, file: !1677, line: 1499, column: 42)
!5581 = !DILocation(line: 775, column: 80, scope: !5462, inlinedAt: !5579)
!5582 = !DILocation(line: 775, column: 88, scope: !5462, inlinedAt: !5579)
!5583 = !DILocation(line: 775, column: 96, scope: !5462, inlinedAt: !5579)
!5584 = !DILocation(line: 776, column: 48, scope: !5462, inlinedAt: !5579)
!5585 = !DILocation(line: 778, column: 24, scope: !5489, inlinedAt: !5579)
!5586 = !DILocation(line: 778, column: 151, scope: !5493, inlinedAt: !5579)
!5587 = !DILocation(line: 778, column: 229, scope: !5498, inlinedAt: !5579)
!5588 = !DILocation(line: 779, column: 24, scope: !5502, inlinedAt: !5579)
!5589 = !DILocation(line: 779, column: 151, scope: !5506, inlinedAt: !5579)
!5590 = !DILocation(line: 779, column: 229, scope: !5511, inlinedAt: !5579)
!5591 = !DILocation(line: 780, column: 24, scope: !5515, inlinedAt: !5579)
!5592 = !DILocation(line: 780, column: 151, scope: !5519, inlinedAt: !5579)
!5593 = !DILocation(line: 780, column: 229, scope: !5524, inlinedAt: !5579)
!5594 = !DILocation(line: 775, column: 70, scope: !5462, inlinedAt: !5595)
!5595 = distinct !DILocation(line: 1497, column: 25, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5563, file: !1677, line: 1496, column: 35)
!5597 = !DILocation(line: 775, column: 80, scope: !5462, inlinedAt: !5595)
!5598 = !DILocation(line: 775, column: 88, scope: !5462, inlinedAt: !5595)
!5599 = !DILocation(line: 775, column: 96, scope: !5462, inlinedAt: !5595)
!5600 = !DILocation(line: 776, column: 48, scope: !5462, inlinedAt: !5595)
!5601 = !DILocation(line: 778, column: 24, scope: !5489, inlinedAt: !5595)
!5602 = !DILocation(line: 778, column: 151, scope: !5493, inlinedAt: !5595)
!5603 = !DILocation(line: 778, column: 229, scope: !5498, inlinedAt: !5595)
!5604 = !DILocation(line: 779, column: 24, scope: !5502, inlinedAt: !5595)
!5605 = !DILocation(line: 779, column: 151, scope: !5506, inlinedAt: !5595)
!5606 = !DILocation(line: 779, column: 229, scope: !5511, inlinedAt: !5595)
!5607 = !DILocation(line: 780, column: 24, scope: !5515, inlinedAt: !5595)
!5608 = !DILocation(line: 780, column: 151, scope: !5519, inlinedAt: !5595)
!5609 = !DILocation(line: 780, column: 229, scope: !5524, inlinedAt: !5595)
!5610 = !DILocalVariable(name: "a", arg: 1, scope: !5611, file: !5612, line: 127, type: !891)
!5611 = distinct !DISubprogram(name: "av_clip_c", scope: !5612, file: !5612, line: 127, type: !5613, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!5612 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5613 = !DISubroutineType(types: !5614)
!5614 = !{!891, !891, !891, !891}
!5615 = !DILocation(line: 127, column: 87, scope: !5611, inlinedAt: !5616)
!5616 = distinct !DILocation(line: 1394, column: 24, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !5618, file: !1677, discriminator: 1)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !1677, line: 1391, column: 23)
!5619 = distinct !DILexicalBlock(scope: !5460, file: !1677, line: 1391, column: 9)
!5620 = !DILocalVariable(name: "amin", arg: 2, scope: !5611, file: !5612, line: 127, type: !891)
!5621 = !DILocation(line: 127, column: 94, scope: !5611, inlinedAt: !5616)
!5622 = !DILocalVariable(name: "amax", arg: 3, scope: !5611, file: !5612, line: 127, type: !891)
!5623 = !DILocation(line: 127, column: 104, scope: !5611, inlinedAt: !5616)
!5624 = !DILocalVariable(name: "s", arg: 1, scope: !5460, file: !1677, line: 1306, type: !1859)
!5625 = !DILocation(line: 1306, column: 47, scope: !5460)
!5626 = !DILocalVariable(name: "nb_granules", scope: !5460, file: !1677, line: 1308, type: !891)
!5627 = !DILocation(line: 1308, column: 9, scope: !5460)
!5628 = !DILocalVariable(name: "main_data_begin", scope: !5460, file: !1677, line: 1308, type: !891)
!5629 = !DILocation(line: 1308, column: 22, scope: !5460)
!5630 = !DILocalVariable(name: "gr", scope: !5460, file: !1677, line: 1309, type: !891)
!5631 = !DILocation(line: 1309, column: 9, scope: !5460)
!5632 = !DILocalVariable(name: "ch", scope: !5460, file: !1677, line: 1309, type: !891)
!5633 = !DILocation(line: 1309, column: 13, scope: !5460)
!5634 = !DILocalVariable(name: "blocksplit_flag", scope: !5460, file: !1677, line: 1309, type: !891)
!5635 = !DILocation(line: 1309, column: 17, scope: !5460)
!5636 = !DILocalVariable(name: "i", scope: !5460, file: !1677, line: 1309, type: !891)
!5637 = !DILocation(line: 1309, column: 34, scope: !5460)
!5638 = !DILocalVariable(name: "j", scope: !5460, file: !1677, line: 1309, type: !891)
!5639 = !DILocation(line: 1309, column: 37, scope: !5460)
!5640 = !DILocalVariable(name: "k", scope: !5460, file: !1677, line: 1309, type: !891)
!5641 = !DILocation(line: 1309, column: 40, scope: !5460)
!5642 = !DILocalVariable(name: "n", scope: !5460, file: !1677, line: 1309, type: !891)
!5643 = !DILocation(line: 1309, column: 43, scope: !5460)
!5644 = !DILocalVariable(name: "bits_pos", scope: !5460, file: !1677, line: 1309, type: !891)
!5645 = !DILocation(line: 1309, column: 46, scope: !5460)
!5646 = !DILocalVariable(name: "g", scope: !5460, file: !1677, line: 1310, type: !2014)
!5647 = !DILocation(line: 1310, column: 17, scope: !5460)
!5648 = !DILocalVariable(name: "exponents", scope: !5460, file: !1677, line: 1311, type: !5649)
!5649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 9216, align: 16, elements: !1934)
!5650 = !DILocation(line: 1311, column: 13, scope: !5460)
!5651 = !DILocation(line: 1314, column: 9, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5460, file: !1677, line: 1314, column: 9)
!5653 = !DILocation(line: 1314, column: 12, scope: !5652)
!5654 = !DILocation(line: 1314, column: 9, scope: !5460)
!5655 = !DILocation(line: 1315, column: 37, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5652, file: !1677, line: 1314, column: 17)
!5657 = !DILocation(line: 1315, column: 40, scope: !5656)
!5658 = !DILocation(line: 1315, column: 27, scope: !5656)
!5659 = !DILocation(line: 1315, column: 25, scope: !5656)
!5660 = !DILocation(line: 1316, column: 20, scope: !5656)
!5661 = !DILocation(line: 1316, column: 23, scope: !5656)
!5662 = !DILocation(line: 1316, column: 27, scope: !5656)
!5663 = !DILocation(line: 1316, column: 30, scope: !5656)
!5664 = !DILocation(line: 1316, column: 9, scope: !5656)
!5665 = !DILocation(line: 1317, column: 21, scope: !5656)
!5666 = !DILocation(line: 1318, column: 5, scope: !5656)
!5667 = !DILocation(line: 1319, column: 37, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5652, file: !1677, line: 1318, column: 12)
!5669 = !DILocation(line: 1319, column: 40, scope: !5668)
!5670 = !DILocation(line: 1319, column: 27, scope: !5668)
!5671 = !DILocation(line: 1319, column: 25, scope: !5668)
!5672 = !DILocation(line: 1320, column: 13, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5668, file: !1677, line: 1320, column: 13)
!5674 = !DILocation(line: 1320, column: 16, scope: !5673)
!5675 = !DILocation(line: 1320, column: 28, scope: !5673)
!5676 = !DILocation(line: 1320, column: 13, scope: !5668)
!5677 = !DILocation(line: 1321, column: 24, scope: !5673)
!5678 = !DILocation(line: 1321, column: 27, scope: !5673)
!5679 = !DILocation(line: 1321, column: 13, scope: !5673)
!5680 = !DILocation(line: 1323, column: 24, scope: !5673)
!5681 = !DILocation(line: 1323, column: 27, scope: !5673)
!5682 = !DILocation(line: 1323, column: 13, scope: !5673)
!5683 = !DILocation(line: 1324, column: 21, scope: !5668)
!5684 = !DILocation(line: 1325, column: 17, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5668, file: !1677, line: 1325, column: 9)
!5686 = !DILocation(line: 1325, column: 14, scope: !5685)
!5687 = !DILocation(line: 1325, column: 22, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !5689, file: !1677, discriminator: 1)
!5689 = distinct !DILexicalBlock(scope: !5685, file: !1677, line: 1325, column: 9)
!5690 = !DILocation(line: 1325, column: 27, scope: !5688)
!5691 = !DILocation(line: 1325, column: 30, scope: !5688)
!5692 = !DILocation(line: 1325, column: 25, scope: !5688)
!5693 = !DILocation(line: 1325, column: 9, scope: !5688)
!5694 = !DILocation(line: 1326, column: 25, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5689, file: !1677, line: 1325, column: 49)
!5696 = !DILocation(line: 1326, column: 13, scope: !5695)
!5697 = !DILocation(line: 1326, column: 16, scope: !5695)
!5698 = !DILocation(line: 1326, column: 32, scope: !5695)
!5699 = !DILocation(line: 1326, column: 38, scope: !5695)
!5700 = !DILocation(line: 1327, column: 50, scope: !5695)
!5701 = !DILocation(line: 1327, column: 53, scope: !5695)
!5702 = !DILocation(line: 1327, column: 40, scope: !5695)
!5703 = !DILocation(line: 1327, column: 25, scope: !5695)
!5704 = !DILocation(line: 1327, column: 13, scope: !5695)
!5705 = !DILocation(line: 1327, column: 16, scope: !5695)
!5706 = !DILocation(line: 1327, column: 32, scope: !5695)
!5707 = !DILocation(line: 1327, column: 38, scope: !5695)
!5708 = !DILocation(line: 1328, column: 9, scope: !5695)
!5709 = !DILocation(line: 1325, column: 45, scope: !5710)
!5710 = !DILexicalBlockFile(scope: !5689, file: !1677, discriminator: 2)
!5711 = !DILocation(line: 1325, column: 9, scope: !5710)
!5712 = distinct !{!5712, !5713}
!5713 = !DILocation(line: 1325, column: 9, scope: !5668)
!5714 = !DILocation(line: 1331, column: 13, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5460, file: !1677, line: 1331, column: 5)
!5716 = !DILocation(line: 1331, column: 10, scope: !5715)
!5717 = !DILocation(line: 1331, column: 18, scope: !5718)
!5718 = !DILexicalBlockFile(scope: !5719, file: !1677, discriminator: 1)
!5719 = distinct !DILexicalBlock(scope: !5715, file: !1677, line: 1331, column: 5)
!5720 = !DILocation(line: 1331, column: 23, scope: !5718)
!5721 = !DILocation(line: 1331, column: 21, scope: !5718)
!5722 = !DILocation(line: 1331, column: 5, scope: !5718)
!5723 = !DILocation(line: 1332, column: 17, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !1677, line: 1332, column: 9)
!5725 = distinct !DILexicalBlock(scope: !5719, file: !1677, line: 1331, column: 42)
!5726 = !DILocation(line: 1332, column: 14, scope: !5724)
!5727 = !DILocation(line: 1332, column: 22, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !5729, file: !1677, discriminator: 1)
!5729 = distinct !DILexicalBlock(scope: !5724, file: !1677, line: 1332, column: 9)
!5730 = !DILocation(line: 1332, column: 27, scope: !5728)
!5731 = !DILocation(line: 1332, column: 30, scope: !5728)
!5732 = !DILocation(line: 1332, column: 25, scope: !5728)
!5733 = !DILocation(line: 1332, column: 9, scope: !5728)
!5734 = !DILocation(line: 1333, column: 13, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5729, file: !1677, line: 1332, column: 49)
!5736 = distinct !{!5736, !5734}
!5737 = !DILocation(line: 1333, column: 83, scope: !5738)
!5738 = !DILexicalBlockFile(scope: !5739, file: !1677, discriminator: 1)
!5739 = distinct !DILexicalBlock(scope: !5735, file: !1677, line: 1333, column: 16)
!5740 = !DILocation(line: 1334, column: 34, scope: !5735)
!5741 = !DILocation(line: 1334, column: 18, scope: !5735)
!5742 = !DILocation(line: 1334, column: 30, scope: !5735)
!5743 = !DILocation(line: 1334, column: 21, scope: !5735)
!5744 = !DILocation(line: 1334, column: 15, scope: !5735)
!5745 = !DILocation(line: 1335, column: 43, scope: !5735)
!5746 = !DILocation(line: 1335, column: 46, scope: !5735)
!5747 = !DILocation(line: 1335, column: 33, scope: !5735)
!5748 = !DILocation(line: 1335, column: 13, scope: !5735)
!5749 = !DILocation(line: 1335, column: 16, scope: !5735)
!5750 = !DILocation(line: 1335, column: 31, scope: !5735)
!5751 = !DILocation(line: 1336, column: 39, scope: !5735)
!5752 = !DILocation(line: 1336, column: 42, scope: !5735)
!5753 = !DILocation(line: 1336, column: 29, scope: !5735)
!5754 = !DILocation(line: 1336, column: 13, scope: !5735)
!5755 = !DILocation(line: 1336, column: 16, scope: !5735)
!5756 = !DILocation(line: 1336, column: 27, scope: !5735)
!5757 = !DILocation(line: 1337, column: 17, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5735, file: !1677, line: 1337, column: 17)
!5759 = !DILocation(line: 1337, column: 20, scope: !5758)
!5760 = !DILocation(line: 1337, column: 31, scope: !5758)
!5761 = !DILocation(line: 1337, column: 17, scope: !5735)
!5762 = !DILocation(line: 1338, column: 24, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5758, file: !1677, line: 1337, column: 38)
!5764 = !DILocation(line: 1338, column: 27, scope: !5763)
!5765 = !DILocation(line: 1338, column: 17, scope: !5763)
!5766 = !DILocation(line: 1339, column: 17, scope: !5763)
!5767 = !DILocation(line: 1342, column: 40, scope: !5735)
!5768 = !DILocation(line: 1342, column: 43, scope: !5735)
!5769 = !DILocation(line: 1342, column: 30, scope: !5735)
!5770 = !DILocation(line: 1342, column: 13, scope: !5735)
!5771 = !DILocation(line: 1342, column: 16, scope: !5735)
!5772 = !DILocation(line: 1342, column: 28, scope: !5735)
!5773 = !DILocation(line: 1345, column: 18, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5735, file: !1677, line: 1345, column: 17)
!5775 = !DILocation(line: 1345, column: 21, scope: !5774)
!5776 = !DILocation(line: 1345, column: 30, scope: !5774)
!5777 = !DILocation(line: 1345, column: 41, scope: !5774)
!5778 = !DILocation(line: 1345, column: 17, scope: !5735)
!5779 = !DILocation(line: 1347, column: 17, scope: !5774)
!5780 = !DILocation(line: 1347, column: 20, scope: !5774)
!5781 = !DILocation(line: 1347, column: 32, scope: !5774)
!5782 = !DILocation(line: 1348, column: 17, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5735, file: !1677, line: 1348, column: 17)
!5784 = !DILocation(line: 1348, column: 20, scope: !5783)
!5785 = !DILocation(line: 1348, column: 17, scope: !5735)
!5786 = !DILocation(line: 1349, column: 50, scope: !5783)
!5787 = !DILocation(line: 1349, column: 53, scope: !5783)
!5788 = !DILocation(line: 1349, column: 40, scope: !5783)
!5789 = !DILocation(line: 1349, column: 17, scope: !5783)
!5790 = !DILocation(line: 1349, column: 20, scope: !5783)
!5791 = !DILocation(line: 1349, column: 38, scope: !5783)
!5792 = !DILocation(line: 1351, column: 50, scope: !5783)
!5793 = !DILocation(line: 1351, column: 53, scope: !5783)
!5794 = !DILocation(line: 1351, column: 40, scope: !5783)
!5795 = !DILocation(line: 1351, column: 17, scope: !5783)
!5796 = !DILocation(line: 1351, column: 20, scope: !5783)
!5797 = !DILocation(line: 1351, column: 38, scope: !5783)
!5798 = !DILocation(line: 1352, column: 42, scope: !5735)
!5799 = !DILocation(line: 1352, column: 45, scope: !5735)
!5800 = !DILocation(line: 1352, column: 31, scope: !5735)
!5801 = !DILocation(line: 1352, column: 29, scope: !5735)
!5802 = !DILocation(line: 1353, column: 17, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5735, file: !1677, line: 1353, column: 17)
!5804 = !DILocation(line: 1353, column: 17, scope: !5735)
!5805 = !DILocation(line: 1354, column: 43, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5803, file: !1677, line: 1353, column: 34)
!5807 = !DILocation(line: 1354, column: 46, scope: !5806)
!5808 = !DILocation(line: 1354, column: 33, scope: !5806)
!5809 = !DILocation(line: 1354, column: 17, scope: !5806)
!5810 = !DILocation(line: 1354, column: 20, scope: !5806)
!5811 = !DILocation(line: 1354, column: 31, scope: !5806)
!5812 = !DILocation(line: 1355, column: 21, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5806, file: !1677, line: 1355, column: 21)
!5814 = !DILocation(line: 1355, column: 24, scope: !5813)
!5815 = !DILocation(line: 1355, column: 35, scope: !5813)
!5816 = !DILocation(line: 1355, column: 21, scope: !5806)
!5817 = !DILocation(line: 1356, column: 28, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5813, file: !1677, line: 1355, column: 41)
!5819 = !DILocation(line: 1356, column: 31, scope: !5818)
!5820 = !DILocation(line: 1356, column: 21, scope: !5818)
!5821 = !DILocation(line: 1357, column: 21, scope: !5818)
!5822 = !DILocation(line: 1359, column: 46, scope: !5806)
!5823 = !DILocation(line: 1359, column: 49, scope: !5806)
!5824 = !DILocation(line: 1359, column: 35, scope: !5806)
!5825 = !DILocation(line: 1359, column: 17, scope: !5806)
!5826 = !DILocation(line: 1359, column: 20, scope: !5806)
!5827 = !DILocation(line: 1359, column: 33, scope: !5806)
!5828 = !DILocation(line: 1360, column: 24, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5806, file: !1677, line: 1360, column: 17)
!5830 = !DILocation(line: 1360, column: 22, scope: !5829)
!5831 = !DILocation(line: 1360, column: 29, scope: !5832)
!5832 = !DILexicalBlockFile(scope: !5833, file: !1677, discriminator: 1)
!5833 = distinct !DILexicalBlock(scope: !5829, file: !1677, line: 1360, column: 17)
!5834 = !DILocation(line: 1360, column: 31, scope: !5832)
!5835 = !DILocation(line: 1360, column: 17, scope: !5832)
!5836 = !DILocation(line: 1361, column: 52, scope: !5833)
!5837 = !DILocation(line: 1361, column: 55, scope: !5833)
!5838 = !DILocation(line: 1361, column: 42, scope: !5833)
!5839 = !DILocation(line: 1361, column: 37, scope: !5833)
!5840 = !DILocation(line: 1361, column: 21, scope: !5833)
!5841 = !DILocation(line: 1361, column: 24, scope: !5833)
!5842 = !DILocation(line: 1361, column: 40, scope: !5833)
!5843 = !DILocation(line: 1360, column: 37, scope: !5844)
!5844 = !DILexicalBlockFile(scope: !5833, file: !1677, discriminator: 2)
!5845 = !DILocation(line: 1360, column: 17, scope: !5844)
!5846 = distinct !{!5846, !5847}
!5847 = !DILocation(line: 1360, column: 17, scope: !5806)
!5848 = !DILocation(line: 1362, column: 24, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5806, file: !1677, line: 1362, column: 17)
!5850 = !DILocation(line: 1362, column: 22, scope: !5849)
!5851 = !DILocation(line: 1362, column: 29, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5853, file: !1677, discriminator: 1)
!5853 = distinct !DILexicalBlock(scope: !5849, file: !1677, line: 1362, column: 17)
!5854 = !DILocation(line: 1362, column: 31, scope: !5852)
!5855 = !DILocation(line: 1362, column: 17, scope: !5852)
!5856 = !DILocation(line: 1363, column: 53, scope: !5853)
!5857 = !DILocation(line: 1363, column: 56, scope: !5853)
!5858 = !DILocation(line: 1363, column: 43, scope: !5853)
!5859 = !DILocation(line: 1363, column: 38, scope: !5853)
!5860 = !DILocation(line: 1363, column: 21, scope: !5853)
!5861 = !DILocation(line: 1363, column: 24, scope: !5853)
!5862 = !DILocation(line: 1363, column: 41, scope: !5853)
!5863 = !DILocation(line: 1362, column: 37, scope: !5864)
!5864 = !DILexicalBlockFile(scope: !5853, file: !1677, discriminator: 2)
!5865 = !DILocation(line: 1362, column: 17, scope: !5864)
!5866 = distinct !{!5866, !5867}
!5867 = !DILocation(line: 1362, column: 17, scope: !5806)
!5868 = !DILocation(line: 1364, column: 35, scope: !5806)
!5869 = !DILocation(line: 1364, column: 38, scope: !5806)
!5870 = !DILocation(line: 1364, column: 17, scope: !5806)
!5871 = !DILocation(line: 1365, column: 13, scope: !5806)
!5872 = !DILocalVariable(name: "region_address1", scope: !5873, file: !1677, line: 1366, type: !891)
!5873 = distinct !DILexicalBlock(scope: !5803, file: !1677, line: 1365, column: 20)
!5874 = !DILocation(line: 1366, column: 21, scope: !5873)
!5875 = !DILocalVariable(name: "region_address2", scope: !5873, file: !1677, line: 1366, type: !891)
!5876 = !DILocation(line: 1366, column: 38, scope: !5873)
!5877 = !DILocation(line: 1367, column: 17, scope: !5873)
!5878 = !DILocation(line: 1367, column: 20, scope: !5873)
!5879 = !DILocation(line: 1367, column: 31, scope: !5873)
!5880 = !DILocation(line: 1368, column: 17, scope: !5873)
!5881 = !DILocation(line: 1368, column: 20, scope: !5873)
!5882 = !DILocation(line: 1368, column: 33, scope: !5873)
!5883 = !DILocation(line: 1369, column: 24, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5873, file: !1677, line: 1369, column: 17)
!5885 = !DILocation(line: 1369, column: 22, scope: !5884)
!5886 = !DILocation(line: 1369, column: 29, scope: !5887)
!5887 = !DILexicalBlockFile(scope: !5888, file: !1677, discriminator: 1)
!5888 = distinct !DILexicalBlock(scope: !5884, file: !1677, line: 1369, column: 17)
!5889 = !DILocation(line: 1369, column: 31, scope: !5887)
!5890 = !DILocation(line: 1369, column: 17, scope: !5887)
!5891 = !DILocation(line: 1370, column: 52, scope: !5888)
!5892 = !DILocation(line: 1370, column: 55, scope: !5888)
!5893 = !DILocation(line: 1370, column: 42, scope: !5888)
!5894 = !DILocation(line: 1370, column: 37, scope: !5888)
!5895 = !DILocation(line: 1370, column: 21, scope: !5888)
!5896 = !DILocation(line: 1370, column: 24, scope: !5888)
!5897 = !DILocation(line: 1370, column: 40, scope: !5888)
!5898 = !DILocation(line: 1369, column: 37, scope: !5899)
!5899 = !DILexicalBlockFile(scope: !5888, file: !1677, discriminator: 2)
!5900 = !DILocation(line: 1369, column: 17, scope: !5899)
!5901 = distinct !{!5901, !5902}
!5902 = !DILocation(line: 1369, column: 17, scope: !5873)
!5903 = !DILocation(line: 1372, column: 45, scope: !5873)
!5904 = !DILocation(line: 1372, column: 48, scope: !5873)
!5905 = !DILocation(line: 1372, column: 35, scope: !5873)
!5906 = !DILocation(line: 1372, column: 33, scope: !5873)
!5907 = !DILocation(line: 1373, column: 45, scope: !5873)
!5908 = !DILocation(line: 1373, column: 48, scope: !5873)
!5909 = !DILocation(line: 1373, column: 35, scope: !5873)
!5910 = !DILocation(line: 1373, column: 33, scope: !5873)
!5911 = !DILocation(line: 1374, column: 17, scope: !5873)
!5912 = distinct !{!5912, !5911}
!5913 = !DILocation(line: 1374, column: 112, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !5915, file: !1677, discriminator: 1)
!5915 = distinct !DILexicalBlock(scope: !5873, file: !1677, line: 1374, column: 20)
!5916 = !DILocation(line: 1376, column: 34, scope: !5873)
!5917 = !DILocation(line: 1376, column: 37, scope: !5873)
!5918 = !DILocation(line: 1376, column: 40, scope: !5873)
!5919 = !DILocation(line: 1376, column: 57, scope: !5873)
!5920 = !DILocation(line: 1376, column: 17, scope: !5873)
!5921 = !DILocation(line: 1378, column: 32, scope: !5735)
!5922 = !DILocation(line: 1378, column: 13, scope: !5735)
!5923 = !DILocation(line: 1379, column: 34, scope: !5735)
!5924 = !DILocation(line: 1379, column: 37, scope: !5735)
!5925 = !DILocation(line: 1379, column: 13, scope: !5735)
!5926 = !DILocation(line: 1381, column: 13, scope: !5735)
!5927 = !DILocation(line: 1381, column: 16, scope: !5735)
!5928 = !DILocation(line: 1381, column: 24, scope: !5735)
!5929 = !DILocation(line: 1382, column: 18, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5735, file: !1677, line: 1382, column: 17)
!5931 = !DILocation(line: 1382, column: 21, scope: !5930)
!5932 = !DILocation(line: 1382, column: 17, scope: !5735)
!5933 = !DILocation(line: 1383, column: 41, scope: !5930)
!5934 = !DILocation(line: 1383, column: 44, scope: !5930)
!5935 = !DILocation(line: 1383, column: 30, scope: !5930)
!5936 = !DILocation(line: 1383, column: 17, scope: !5930)
!5937 = !DILocation(line: 1383, column: 20, scope: !5930)
!5938 = !DILocation(line: 1383, column: 28, scope: !5930)
!5939 = !DILocation(line: 1384, column: 44, scope: !5735)
!5940 = !DILocation(line: 1384, column: 47, scope: !5735)
!5941 = !DILocation(line: 1384, column: 33, scope: !5735)
!5942 = !DILocation(line: 1384, column: 13, scope: !5735)
!5943 = !DILocation(line: 1384, column: 16, scope: !5735)
!5944 = !DILocation(line: 1384, column: 31, scope: !5735)
!5945 = !DILocation(line: 1385, column: 48, scope: !5735)
!5946 = !DILocation(line: 1385, column: 51, scope: !5735)
!5947 = !DILocation(line: 1385, column: 37, scope: !5735)
!5948 = !DILocation(line: 1385, column: 13, scope: !5735)
!5949 = !DILocation(line: 1385, column: 16, scope: !5735)
!5950 = !DILocation(line: 1385, column: 35, scope: !5735)
!5951 = !DILocation(line: 1386, column: 13, scope: !5735)
!5952 = distinct !{!5952, !5951}
!5953 = !DILocation(line: 1386, column: 114, scope: !5954)
!5954 = !DILexicalBlockFile(scope: !5955, file: !1677, discriminator: 1)
!5955 = distinct !DILexicalBlock(scope: !5735, file: !1677, line: 1386, column: 16)
!5956 = !DILocation(line: 1388, column: 9, scope: !5735)
!5957 = !DILocation(line: 1332, column: 45, scope: !5958)
!5958 = !DILexicalBlockFile(scope: !5729, file: !1677, discriminator: 2)
!5959 = !DILocation(line: 1332, column: 9, scope: !5958)
!5960 = distinct !{!5960, !5961}
!5961 = !DILocation(line: 1332, column: 9, scope: !5725)
!5962 = !DILocation(line: 1389, column: 5, scope: !5725)
!5963 = !DILocation(line: 1331, column: 38, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !5719, file: !1677, discriminator: 2)
!5965 = !DILocation(line: 1331, column: 5, scope: !5964)
!5966 = distinct !{!5966, !5967}
!5967 = !DILocation(line: 1331, column: 5, scope: !5460)
!5968 = !DILocation(line: 1391, column: 10, scope: !5619)
!5969 = !DILocation(line: 1391, column: 13, scope: !5619)
!5970 = !DILocation(line: 1391, column: 9, scope: !5460)
!5971 = !DILocalVariable(name: "skip", scope: !5618, file: !1677, line: 1392, type: !891)
!5972 = !DILocation(line: 1392, column: 13, scope: !5618)
!5973 = !DILocalVariable(name: "ptr", scope: !5618, file: !1677, line: 1393, type: !1482)
!5974 = !DILocation(line: 1393, column: 24, scope: !5618)
!5975 = !DILocation(line: 1393, column: 30, scope: !5618)
!5976 = !DILocation(line: 1393, column: 33, scope: !5618)
!5977 = !DILocation(line: 1393, column: 36, scope: !5618)
!5978 = !DILocation(line: 1393, column: 62, scope: !5618)
!5979 = !DILocation(line: 1393, column: 65, scope: !5618)
!5980 = !DILocation(line: 1393, column: 46, scope: !5618)
!5981 = !DILocation(line: 1393, column: 68, scope: !5618)
!5982 = !DILocation(line: 1393, column: 43, scope: !5618)
!5983 = !DILocation(line: 1394, column: 50, scope: !5618)
!5984 = !DILocation(line: 1394, column: 53, scope: !5618)
!5985 = !DILocation(line: 1394, column: 35, scope: !5618)
!5986 = !DILocation(line: 1394, column: 57, scope: !5618)
!5987 = !DILocation(line: 1394, column: 65, scope: !5618)
!5988 = !DILocation(line: 1394, column: 68, scope: !5618)
!5989 = !DILocation(line: 1394, column: 63, scope: !5618)
!5990 = !DILocation(line: 1395, column: 55, scope: !5618)
!5991 = !DILocation(line: 1395, column: 58, scope: !5618)
!5992 = !DILocation(line: 1395, column: 53, scope: !5618)
!5993 = !DILocation(line: 1395, column: 37, scope: !5618)
!5994 = !DILocation(line: 1395, column: 33, scope: !5618)
!5995 = !DILocation(line: 1395, column: 33, scope: !5617)
!5996 = !DILocation(line: 1395, column: 97, scope: !5997)
!5997 = !DILexicalBlockFile(scope: !5618, file: !1677, discriminator: 2)
!5998 = !DILocation(line: 1395, column: 100, scope: !5997)
!5999 = !DILocation(line: 1395, column: 95, scope: !5997)
!6000 = !DILocation(line: 1395, column: 33, scope: !5997)
!6001 = !DILocation(line: 1395, column: 33, scope: !6002)
!6002 = !DILexicalBlockFile(scope: !5618, file: !1677, discriminator: 3)
!6003 = !DILocation(line: 1394, column: 24, scope: !5617)
!6004 = !DILocation(line: 132, column: 9, scope: !6005, inlinedAt: !5616)
!6005 = distinct !DILexicalBlock(scope: !5611, file: !5612, line: 132, column: 9)
!6006 = !DILocation(line: 132, column: 13, scope: !6005, inlinedAt: !5616)
!6007 = !DILocation(line: 132, column: 11, scope: !6005, inlinedAt: !5616)
!6008 = !DILocation(line: 132, column: 9, scope: !5611, inlinedAt: !5616)
!6009 = !DILocation(line: 132, column: 26, scope: !6010, inlinedAt: !5616)
!6010 = !DILexicalBlockFile(scope: !6005, file: !5612, discriminator: 1)
!6011 = !DILocation(line: 132, column: 19, scope: !6010, inlinedAt: !5616)
!6012 = !DILocation(line: 133, column: 14, scope: !6013, inlinedAt: !5616)
!6013 = distinct !DILexicalBlock(scope: !6005, file: !5612, line: 133, column: 14)
!6014 = !DILocation(line: 133, column: 18, scope: !6013, inlinedAt: !5616)
!6015 = !DILocation(line: 133, column: 16, scope: !6013, inlinedAt: !5616)
!6016 = !DILocation(line: 133, column: 14, scope: !6005, inlinedAt: !5616)
!6017 = !DILocation(line: 133, column: 31, scope: !6018, inlinedAt: !5616)
!6018 = !DILexicalBlockFile(scope: !6013, file: !5612, discriminator: 1)
!6019 = !DILocation(line: 133, column: 24, scope: !6018, inlinedAt: !5616)
!6020 = !DILocation(line: 134, column: 17, scope: !6013, inlinedAt: !5616)
!6021 = !DILocation(line: 134, column: 10, scope: !6013, inlinedAt: !5616)
!6022 = !DILocation(line: 135, column: 1, scope: !5611, inlinedAt: !5616)
!6023 = !DILocation(line: 1394, column: 9, scope: !5617)
!6024 = !DILocation(line: 1394, column: 12, scope: !5617)
!6025 = !DILocation(line: 1394, column: 22, scope: !5617)
!6026 = !DILocation(line: 1398, column: 9, scope: !5618)
!6027 = distinct !{!6027, !6026}
!6028 = !DILocation(line: 1398, column: 107, scope: !6029)
!6029 = !DILexicalBlockFile(scope: !6030, file: !1677, discriminator: 1)
!6030 = distinct !DILexicalBlock(scope: !5618, file: !1677, line: 1398, column: 12)
!6031 = !DILocation(line: 1401, column: 16, scope: !5618)
!6032 = !DILocation(line: 1401, column: 19, scope: !5618)
!6033 = !DILocation(line: 1401, column: 30, scope: !5618)
!6034 = !DILocation(line: 1401, column: 33, scope: !5618)
!6035 = !DILocation(line: 1401, column: 28, scope: !5618)
!6036 = !DILocation(line: 1401, column: 48, scope: !5618)
!6037 = !DILocation(line: 1401, column: 53, scope: !5618)
!6038 = !DILocation(line: 1401, column: 56, scope: !5618)
!6039 = !DILocation(line: 1401, column: 9, scope: !5618)
!6040 = !DILocation(line: 1402, column: 9, scope: !5618)
!6041 = !DILocation(line: 1402, column: 12, scope: !5618)
!6042 = !DILocation(line: 1402, column: 20, scope: !5618)
!6043 = !DILocation(line: 1402, column: 23, scope: !5618)
!6044 = !DILocation(line: 1403, column: 24, scope: !5618)
!6045 = !DILocation(line: 1403, column: 27, scope: !5618)
!6046 = !DILocation(line: 1403, column: 31, scope: !5618)
!6047 = !DILocation(line: 1403, column: 34, scope: !5618)
!6048 = !DILocation(line: 1403, column: 45, scope: !5618)
!6049 = !DILocation(line: 1403, column: 48, scope: !5618)
!6050 = !DILocation(line: 1403, column: 64, scope: !5618)
!6051 = !DILocation(line: 1403, column: 67, scope: !5618)
!6052 = !DILocation(line: 1403, column: 62, scope: !5618)
!6053 = !DILocation(line: 1403, column: 78, scope: !5618)
!6054 = !DILocation(line: 1403, column: 9, scope: !5618)
!6055 = !DILocation(line: 1404, column: 9, scope: !5618)
!6056 = !DILocation(line: 1404, column: 12, scope: !5618)
!6057 = !DILocation(line: 1404, column: 26, scope: !5618)
!6058 = !DILocation(line: 1405, column: 17, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !5618, file: !1677, line: 1405, column: 9)
!6060 = !DILocation(line: 1405, column: 14, scope: !6059)
!6061 = !DILocation(line: 1405, column: 22, scope: !6062)
!6062 = !DILexicalBlockFile(scope: !6063, file: !1677, discriminator: 1)
!6063 = distinct !DILexicalBlock(scope: !6059, file: !1677, line: 1405, column: 9)
!6064 = !DILocation(line: 1405, column: 27, scope: !6062)
!6065 = !DILocation(line: 1405, column: 25, scope: !6062)
!6066 = !DILocation(line: 1405, column: 39, scope: !6062)
!6067 = !DILocation(line: 1405, column: 43, scope: !6068)
!6068 = !DILexicalBlockFile(scope: !6063, file: !1677, discriminator: 2)
!6069 = !DILocation(line: 1405, column: 46, scope: !6068)
!6070 = !DILocation(line: 1405, column: 60, scope: !6068)
!6071 = !DILocation(line: 1405, column: 68, scope: !6068)
!6072 = !DILocation(line: 1405, column: 66, scope: !6068)
!6073 = !DILocation(line: 1405, column: 9, scope: !6074)
!6074 = !DILexicalBlockFile(scope: !6059, file: !1677, discriminator: 3)
!6075 = !DILocation(line: 1406, column: 21, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !1677, line: 1406, column: 13)
!6077 = distinct !DILexicalBlock(scope: !6063, file: !1677, line: 1405, column: 91)
!6078 = !DILocation(line: 1406, column: 18, scope: !6076)
!6079 = !DILocation(line: 1406, column: 26, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !6081, file: !1677, discriminator: 1)
!6081 = distinct !DILexicalBlock(scope: !6076, file: !1677, line: 1406, column: 13)
!6082 = !DILocation(line: 1406, column: 31, scope: !6080)
!6083 = !DILocation(line: 1406, column: 34, scope: !6080)
!6084 = !DILocation(line: 1406, column: 29, scope: !6080)
!6085 = !DILocation(line: 1406, column: 13, scope: !6080)
!6086 = !DILocation(line: 1407, column: 38, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6081, file: !1677, line: 1406, column: 53)
!6088 = !DILocation(line: 1407, column: 22, scope: !6087)
!6089 = !DILocation(line: 1407, column: 34, scope: !6087)
!6090 = !DILocation(line: 1407, column: 25, scope: !6087)
!6091 = !DILocation(line: 1407, column: 19, scope: !6087)
!6092 = !DILocation(line: 1408, column: 37, scope: !6087)
!6093 = !DILocation(line: 1408, column: 40, scope: !6087)
!6094 = !DILocation(line: 1408, column: 17, scope: !6087)
!6095 = !DILocation(line: 1408, column: 20, scope: !6087)
!6096 = !DILocation(line: 1408, column: 34, scope: !6087)
!6097 = !DILocation(line: 1409, column: 24, scope: !6087)
!6098 = !DILocation(line: 1409, column: 27, scope: !6087)
!6099 = !DILocation(line: 1409, column: 17, scope: !6087)
!6100 = !DILocation(line: 1410, column: 31, scope: !6087)
!6101 = !DILocation(line: 1410, column: 34, scope: !6087)
!6102 = !DILocation(line: 1410, column: 61, scope: !6087)
!6103 = !DILocation(line: 1410, column: 59, scope: !6087)
!6104 = !DILocation(line: 1410, column: 38, scope: !6087)
!6105 = !DILocation(line: 1410, column: 52, scope: !6087)
!6106 = !DILocation(line: 1410, column: 41, scope: !6087)
!6107 = !DILocation(line: 1410, column: 81, scope: !6087)
!6108 = !DILocation(line: 1410, column: 69, scope: !6087)
!6109 = !DILocation(line: 1410, column: 72, scope: !6087)
!6110 = !DILocation(line: 1410, column: 17, scope: !6087)
!6111 = !DILocation(line: 1411, column: 13, scope: !6087)
!6112 = !DILocation(line: 1406, column: 49, scope: !6113)
!6113 = !DILexicalBlockFile(scope: !6081, file: !1677, discriminator: 2)
!6114 = !DILocation(line: 1406, column: 13, scope: !6113)
!6115 = distinct !{!6115, !6116}
!6116 = !DILocation(line: 1406, column: 13, scope: !6077)
!6117 = !DILocation(line: 1412, column: 9, scope: !6077)
!6118 = !DILocation(line: 1405, column: 87, scope: !6119)
!6119 = !DILexicalBlockFile(scope: !6063, file: !1677, discriminator: 4)
!6120 = !DILocation(line: 1405, column: 9, scope: !6119)
!6121 = distinct !{!6121, !6122}
!6122 = !DILocation(line: 1405, column: 9, scope: !5618)
!6123 = !DILocation(line: 1413, column: 16, scope: !5618)
!6124 = !DILocation(line: 1413, column: 19, scope: !5618)
!6125 = !DILocation(line: 1413, column: 39, scope: !5618)
!6126 = !DILocation(line: 1413, column: 37, scope: !5618)
!6127 = !DILocation(line: 1413, column: 33, scope: !5618)
!6128 = !DILocation(line: 1413, column: 14, scope: !5618)
!6129 = !DILocation(line: 1414, column: 13, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !5618, file: !1677, line: 1414, column: 13)
!6131 = !DILocation(line: 1414, column: 21, scope: !6130)
!6132 = !DILocation(line: 1414, column: 24, scope: !6130)
!6133 = !DILocation(line: 1414, column: 27, scope: !6130)
!6134 = !DILocation(line: 1414, column: 42, scope: !6130)
!6135 = !DILocation(line: 1414, column: 45, scope: !6130)
!6136 = !DILocation(line: 1414, column: 55, scope: !6130)
!6137 = !DILocation(line: 1414, column: 40, scope: !6130)
!6138 = !DILocation(line: 1414, column: 18, scope: !6130)
!6139 = !DILocation(line: 1414, column: 59, scope: !6130)
!6140 = !DILocation(line: 1414, column: 62, scope: !6141)
!6141 = !DILexicalBlockFile(scope: !6130, file: !1677, discriminator: 1)
!6142 = !DILocation(line: 1414, column: 65, scope: !6141)
!6143 = !DILocation(line: 1414, column: 71, scope: !6141)
!6144 = !DILocation(line: 1414, column: 13, scope: !6141)
!6145 = !DILocation(line: 1415, column: 29, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6130, file: !1677, line: 1414, column: 79)
!6147 = !DILocation(line: 1415, column: 32, scope: !6146)
!6148 = !DILocation(line: 1415, column: 39, scope: !6146)
!6149 = !DILocation(line: 1415, column: 46, scope: !6146)
!6150 = !DILocation(line: 1415, column: 49, scope: !6146)
!6151 = !DILocation(line: 1415, column: 52, scope: !6146)
!6152 = !DILocation(line: 1415, column: 44, scope: !6146)
!6153 = !DILocation(line: 1415, column: 67, scope: !6146)
!6154 = !DILocation(line: 1415, column: 70, scope: !6146)
!6155 = !DILocation(line: 1415, column: 80, scope: !6146)
!6156 = !DILocation(line: 1415, column: 65, scope: !6146)
!6157 = !DILocation(line: 1415, column: 13, scope: !6146)
!6158 = !DILocation(line: 1416, column: 13, scope: !6146)
!6159 = !DILocation(line: 1416, column: 16, scope: !6146)
!6160 = !DILocation(line: 1416, column: 21, scope: !6146)
!6161 = !DILocation(line: 1416, column: 24, scope: !6146)
!6162 = !DILocation(line: 1417, column: 13, scope: !6146)
!6163 = !DILocation(line: 1417, column: 16, scope: !6146)
!6164 = !DILocation(line: 1417, column: 22, scope: !6146)
!6165 = !DILocation(line: 1417, column: 29, scope: !6146)
!6166 = !DILocation(line: 1418, column: 13, scope: !6146)
!6167 = !DILocation(line: 1418, column: 16, scope: !6146)
!6168 = !DILocation(line: 1418, column: 26, scope: !6146)
!6169 = !DILocation(line: 1419, column: 9, scope: !6146)
!6170 = !DILocation(line: 1420, column: 29, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6130, file: !1677, line: 1419, column: 16)
!6172 = !DILocation(line: 1420, column: 32, scope: !6171)
!6173 = !DILocation(line: 1420, column: 36, scope: !6171)
!6174 = !DILocation(line: 1420, column: 13, scope: !6171)
!6175 = !DILocation(line: 1422, column: 5, scope: !5618)
!6176 = !DILocation(line: 1423, column: 12, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !5619, file: !1677, line: 1422, column: 12)
!6178 = !DILocation(line: 1424, column: 9, scope: !6177)
!6179 = !DILocation(line: 1424, column: 12, scope: !6177)
!6180 = !DILocation(line: 1424, column: 22, scope: !6177)
!6181 = !DILocation(line: 1427, column: 5, scope: !5460)
!6182 = !DILocation(line: 1427, column: 12, scope: !6183)
!6183 = !DILexicalBlockFile(scope: !5478, file: !1677, discriminator: 1)
!6184 = !DILocation(line: 1427, column: 17, scope: !6183)
!6185 = !DILocation(line: 1427, column: 15, scope: !6183)
!6186 = !DILocation(line: 1427, column: 5, scope: !6183)
!6187 = !DILocation(line: 1428, column: 17, scope: !5476)
!6188 = !DILocation(line: 1428, column: 14, scope: !5476)
!6189 = !DILocation(line: 1428, column: 22, scope: !6190)
!6190 = !DILexicalBlockFile(scope: !5475, file: !1677, discriminator: 1)
!6191 = !DILocation(line: 1428, column: 27, scope: !6190)
!6192 = !DILocation(line: 1428, column: 30, scope: !6190)
!6193 = !DILocation(line: 1428, column: 25, scope: !6190)
!6194 = !DILocation(line: 1428, column: 9, scope: !6190)
!6195 = !DILocation(line: 1429, column: 34, scope: !5474)
!6196 = !DILocation(line: 1429, column: 18, scope: !5474)
!6197 = !DILocation(line: 1429, column: 30, scope: !5474)
!6198 = !DILocation(line: 1429, column: 21, scope: !5474)
!6199 = !DILocation(line: 1429, column: 15, scope: !5474)
!6200 = !DILocation(line: 1430, column: 40, scope: !5474)
!6201 = !DILocation(line: 1430, column: 43, scope: !5474)
!6202 = !DILocation(line: 1430, column: 24, scope: !5474)
!6203 = !DILocation(line: 1430, column: 22, scope: !5474)
!6204 = !DILocation(line: 1432, column: 18, scope: !5473)
!6205 = !DILocation(line: 1432, column: 21, scope: !5473)
!6206 = !DILocation(line: 1432, column: 17, scope: !5474)
!6207 = !DILocalVariable(name: "sc", scope: !6208, file: !1677, line: 1433, type: !1072)
!6208 = distinct !DILexicalBlock(scope: !5473, file: !1677, line: 1432, column: 26)
!6209 = !DILocation(line: 1433, column: 26, scope: !6208)
!6210 = !DILocalVariable(name: "slen", scope: !6208, file: !1677, line: 1434, type: !891)
!6211 = !DILocation(line: 1434, column: 21, scope: !6208)
!6212 = !DILocalVariable(name: "slen1", scope: !6208, file: !1677, line: 1434, type: !891)
!6213 = !DILocation(line: 1434, column: 27, scope: !6208)
!6214 = !DILocalVariable(name: "slen2", scope: !6208, file: !1677, line: 1434, type: !891)
!6215 = !DILocation(line: 1434, column: 34, scope: !6208)
!6216 = !DILocation(line: 1437, column: 39, scope: !6208)
!6217 = !DILocation(line: 1437, column: 42, scope: !6208)
!6218 = !DILocation(line: 1437, column: 25, scope: !6208)
!6219 = !DILocation(line: 1437, column: 23, scope: !6208)
!6220 = !DILocation(line: 1438, column: 39, scope: !6208)
!6221 = !DILocation(line: 1438, column: 42, scope: !6208)
!6222 = !DILocation(line: 1438, column: 25, scope: !6208)
!6223 = !DILocation(line: 1438, column: 23, scope: !6208)
!6224 = !DILocation(line: 1439, column: 17, scope: !6208)
!6225 = distinct !{!6225, !6224}
!6226 = !DILocation(line: 1439, column: 88, scope: !6227)
!6227 = !DILexicalBlockFile(scope: !6228, file: !1677, discriminator: 1)
!6228 = distinct !DILexicalBlock(scope: !6208, file: !1677, line: 1439, column: 20)
!6229 = !DILocation(line: 1440, column: 21, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6208, file: !1677, line: 1440, column: 21)
!6231 = !DILocation(line: 1440, column: 24, scope: !6230)
!6232 = !DILocation(line: 1440, column: 35, scope: !6230)
!6233 = !DILocation(line: 1440, column: 21, scope: !6208)
!6234 = !DILocation(line: 1441, column: 25, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6230, file: !1677, line: 1440, column: 41)
!6236 = !DILocation(line: 1441, column: 28, scope: !6235)
!6237 = !DILocation(line: 1441, column: 23, scope: !6235)
!6238 = !DILocation(line: 1442, column: 23, scope: !6235)
!6239 = !DILocation(line: 1443, column: 25, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6235, file: !1677, line: 1443, column: 25)
!6241 = !DILocation(line: 1443, column: 25, scope: !6235)
!6242 = !DILocation(line: 1444, column: 32, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !1677, line: 1444, column: 25)
!6244 = distinct !DILexicalBlock(scope: !6240, file: !1677, line: 1443, column: 32)
!6245 = !DILocation(line: 1444, column: 30, scope: !6243)
!6246 = !DILocation(line: 1444, column: 37, scope: !6247)
!6247 = !DILexicalBlockFile(scope: !6248, file: !1677, discriminator: 1)
!6248 = distinct !DILexicalBlock(scope: !6243, file: !1677, line: 1444, column: 25)
!6249 = !DILocation(line: 1444, column: 41, scope: !6247)
!6250 = !DILocation(line: 1444, column: 39, scope: !6247)
!6251 = !DILocation(line: 1444, column: 25, scope: !6247)
!6252 = !DILocation(line: 1445, column: 63, scope: !6248)
!6253 = !DILocation(line: 1445, column: 66, scope: !6248)
!6254 = !DILocation(line: 1445, column: 70, scope: !6248)
!6255 = !DILocation(line: 1445, column: 53, scope: !6248)
!6256 = !DILocation(line: 1445, column: 47, scope: !6248)
!6257 = !DILocation(line: 1445, column: 29, scope: !6248)
!6258 = !DILocation(line: 1445, column: 32, scope: !6248)
!6259 = !DILocation(line: 1445, column: 51, scope: !6248)
!6260 = !DILocation(line: 1444, column: 45, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !6248, file: !1677, discriminator: 2)
!6262 = !DILocation(line: 1444, column: 25, scope: !6261)
!6263 = distinct !{!6263, !6264}
!6264 = !DILocation(line: 1444, column: 25, scope: !6244)
!6265 = !DILocation(line: 1446, column: 21, scope: !6244)
!6266 = !DILocation(line: 1447, column: 32, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !1677, line: 1447, column: 25)
!6268 = distinct !DILexicalBlock(scope: !6240, file: !1677, line: 1446, column: 28)
!6269 = !DILocation(line: 1447, column: 30, scope: !6267)
!6270 = !DILocation(line: 1447, column: 37, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6272, file: !1677, discriminator: 1)
!6272 = distinct !DILexicalBlock(scope: !6267, file: !1677, line: 1447, column: 25)
!6273 = !DILocation(line: 1447, column: 41, scope: !6271)
!6274 = !DILocation(line: 1447, column: 39, scope: !6271)
!6275 = !DILocation(line: 1447, column: 25, scope: !6271)
!6276 = !DILocation(line: 1448, column: 47, scope: !6272)
!6277 = !DILocation(line: 1448, column: 29, scope: !6272)
!6278 = !DILocation(line: 1448, column: 32, scope: !6272)
!6279 = !DILocation(line: 1448, column: 51, scope: !6272)
!6280 = !DILocation(line: 1447, column: 45, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !6272, file: !1677, discriminator: 2)
!6282 = !DILocation(line: 1447, column: 25, scope: !6281)
!6283 = distinct !{!6283, !6284}
!6284 = !DILocation(line: 1447, column: 25, scope: !6268)
!6285 = !DILocation(line: 1450, column: 25, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6235, file: !1677, line: 1450, column: 25)
!6287 = !DILocation(line: 1450, column: 25, scope: !6235)
!6288 = !DILocation(line: 1451, column: 32, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !1677, line: 1451, column: 25)
!6290 = distinct !DILexicalBlock(scope: !6286, file: !1677, line: 1450, column: 32)
!6291 = !DILocation(line: 1451, column: 30, scope: !6289)
!6292 = !DILocation(line: 1451, column: 37, scope: !6293)
!6293 = !DILexicalBlockFile(scope: !6294, file: !1677, discriminator: 1)
!6294 = distinct !DILexicalBlock(scope: !6289, file: !1677, line: 1451, column: 25)
!6295 = !DILocation(line: 1451, column: 39, scope: !6293)
!6296 = !DILocation(line: 1451, column: 25, scope: !6293)
!6297 = !DILocation(line: 1452, column: 63, scope: !6294)
!6298 = !DILocation(line: 1452, column: 66, scope: !6294)
!6299 = !DILocation(line: 1452, column: 70, scope: !6294)
!6300 = !DILocation(line: 1452, column: 53, scope: !6294)
!6301 = !DILocation(line: 1452, column: 47, scope: !6294)
!6302 = !DILocation(line: 1452, column: 29, scope: !6294)
!6303 = !DILocation(line: 1452, column: 32, scope: !6294)
!6304 = !DILocation(line: 1452, column: 51, scope: !6294)
!6305 = !DILocation(line: 1451, column: 46, scope: !6306)
!6306 = !DILexicalBlockFile(scope: !6294, file: !1677, discriminator: 2)
!6307 = !DILocation(line: 1451, column: 25, scope: !6306)
!6308 = distinct !{!6308, !6309}
!6309 = !DILocation(line: 1451, column: 25, scope: !6290)
!6310 = !DILocation(line: 1453, column: 32, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6290, file: !1677, line: 1453, column: 25)
!6312 = !DILocation(line: 1453, column: 30, scope: !6311)
!6313 = !DILocation(line: 1453, column: 37, scope: !6314)
!6314 = !DILexicalBlockFile(scope: !6315, file: !1677, discriminator: 1)
!6315 = distinct !DILexicalBlock(scope: !6311, file: !1677, line: 1453, column: 25)
!6316 = !DILocation(line: 1453, column: 39, scope: !6314)
!6317 = !DILocation(line: 1453, column: 25, scope: !6314)
!6318 = !DILocation(line: 1454, column: 47, scope: !6315)
!6319 = !DILocation(line: 1454, column: 29, scope: !6315)
!6320 = !DILocation(line: 1454, column: 32, scope: !6315)
!6321 = !DILocation(line: 1454, column: 51, scope: !6315)
!6322 = !DILocation(line: 1453, column: 45, scope: !6323)
!6323 = !DILexicalBlockFile(scope: !6315, file: !1677, discriminator: 2)
!6324 = !DILocation(line: 1453, column: 25, scope: !6323)
!6325 = distinct !{!6325, !6326}
!6326 = !DILocation(line: 1453, column: 25, scope: !6290)
!6327 = !DILocation(line: 1455, column: 21, scope: !6290)
!6328 = !DILocation(line: 1456, column: 32, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !1677, line: 1456, column: 25)
!6330 = distinct !DILexicalBlock(scope: !6286, file: !1677, line: 1455, column: 28)
!6331 = !DILocation(line: 1456, column: 30, scope: !6329)
!6332 = !DILocation(line: 1456, column: 37, scope: !6333)
!6333 = !DILexicalBlockFile(scope: !6334, file: !1677, discriminator: 1)
!6334 = distinct !DILexicalBlock(scope: !6329, file: !1677, line: 1456, column: 25)
!6335 = !DILocation(line: 1456, column: 39, scope: !6333)
!6336 = !DILocation(line: 1456, column: 25, scope: !6333)
!6337 = !DILocation(line: 1457, column: 47, scope: !6334)
!6338 = !DILocation(line: 1457, column: 29, scope: !6334)
!6339 = !DILocation(line: 1457, column: 32, scope: !6334)
!6340 = !DILocation(line: 1457, column: 51, scope: !6334)
!6341 = !DILocation(line: 1456, column: 46, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !6334, file: !1677, discriminator: 2)
!6343 = !DILocation(line: 1456, column: 25, scope: !6342)
!6344 = distinct !{!6344, !6345}
!6345 = !DILocation(line: 1456, column: 25, scope: !6330)
!6346 = !DILocation(line: 1459, column: 17, scope: !6235)
!6347 = !DILocation(line: 1460, column: 38, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6230, file: !1677, line: 1459, column: 24)
!6349 = !DILocation(line: 1460, column: 26, scope: !6348)
!6350 = !DILocation(line: 1460, column: 29, scope: !6348)
!6351 = !DILocation(line: 1460, column: 45, scope: !6348)
!6352 = !DILocation(line: 1460, column: 24, scope: !6348)
!6353 = !DILocation(line: 1461, column: 23, scope: !6348)
!6354 = !DILocation(line: 1462, column: 28, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6348, file: !1677, line: 1462, column: 21)
!6356 = !DILocation(line: 1462, column: 26, scope: !6355)
!6357 = !DILocation(line: 1462, column: 33, scope: !6358)
!6358 = !DILexicalBlockFile(scope: !6359, file: !1677, discriminator: 1)
!6359 = distinct !DILexicalBlock(scope: !6355, file: !1677, line: 1462, column: 21)
!6360 = !DILocation(line: 1462, column: 35, scope: !6358)
!6361 = !DILocation(line: 1462, column: 21, scope: !6358)
!6362 = !DILocation(line: 1463, column: 29, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6359, file: !1677, line: 1462, column: 45)
!6364 = !DILocation(line: 1463, column: 31, scope: !6363)
!6365 = !DILocation(line: 1463, column: 27, scope: !6363)
!6366 = !DILocation(line: 1464, column: 30, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6363, file: !1677, line: 1464, column: 29)
!6368 = !DILocation(line: 1464, column: 33, scope: !6367)
!6369 = !DILocation(line: 1464, column: 49, scope: !6367)
!6370 = !DILocation(line: 1464, column: 46, scope: !6367)
!6371 = !DILocation(line: 1464, column: 39, scope: !6367)
!6372 = !DILocation(line: 1464, column: 53, scope: !6367)
!6373 = !DILocation(line: 1464, column: 29, scope: !6363)
!6374 = !DILocation(line: 1465, column: 37, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6367, file: !1677, line: 1464, column: 59)
!6376 = !DILocation(line: 1465, column: 39, scope: !6375)
!6377 = !DILocation(line: 1465, column: 36, scope: !6375)
!6378 = !DILocation(line: 1465, column: 46, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6375, file: !1677, discriminator: 1)
!6380 = !DILocation(line: 1465, column: 36, scope: !6379)
!6381 = !DILocation(line: 1465, column: 54, scope: !6382)
!6382 = !DILexicalBlockFile(scope: !6375, file: !1677, discriminator: 2)
!6383 = !DILocation(line: 1465, column: 36, scope: !6382)
!6384 = !DILocation(line: 1465, column: 36, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !6375, file: !1677, discriminator: 3)
!6386 = !DILocation(line: 1465, column: 34, scope: !6385)
!6387 = !DILocation(line: 1466, column: 33, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6375, file: !1677, line: 1466, column: 33)
!6389 = !DILocation(line: 1466, column: 33, scope: !6375)
!6390 = !DILocation(line: 1467, column: 40, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !1677, line: 1467, column: 33)
!6392 = distinct !DILexicalBlock(scope: !6388, file: !1677, line: 1466, column: 39)
!6393 = !DILocation(line: 1467, column: 38, scope: !6391)
!6394 = !DILocation(line: 1467, column: 45, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !6396, file: !1677, discriminator: 1)
!6396 = distinct !DILexicalBlock(scope: !6391, file: !1677, line: 1467, column: 33)
!6397 = !DILocation(line: 1467, column: 49, scope: !6395)
!6398 = !DILocation(line: 1467, column: 47, scope: !6395)
!6399 = !DILocation(line: 1467, column: 33, scope: !6395)
!6400 = !DILocation(line: 1468, column: 71, scope: !6396)
!6401 = !DILocation(line: 1468, column: 74, scope: !6396)
!6402 = !DILocation(line: 1468, column: 78, scope: !6396)
!6403 = !DILocation(line: 1468, column: 61, scope: !6396)
!6404 = !DILocation(line: 1468, column: 55, scope: !6396)
!6405 = !DILocation(line: 1468, column: 37, scope: !6396)
!6406 = !DILocation(line: 1468, column: 40, scope: !6396)
!6407 = !DILocation(line: 1468, column: 59, scope: !6396)
!6408 = !DILocation(line: 1467, column: 53, scope: !6409)
!6409 = !DILexicalBlockFile(scope: !6396, file: !1677, discriminator: 2)
!6410 = !DILocation(line: 1467, column: 33, scope: !6409)
!6411 = distinct !{!6411, !6412}
!6412 = !DILocation(line: 1467, column: 33, scope: !6392)
!6413 = !DILocation(line: 1469, column: 29, scope: !6392)
!6414 = !DILocation(line: 1470, column: 40, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !1677, line: 1470, column: 33)
!6416 = distinct !DILexicalBlock(scope: !6388, file: !1677, line: 1469, column: 36)
!6417 = !DILocation(line: 1470, column: 38, scope: !6415)
!6418 = !DILocation(line: 1470, column: 45, scope: !6419)
!6419 = !DILexicalBlockFile(scope: !6420, file: !1677, discriminator: 1)
!6420 = distinct !DILexicalBlock(scope: !6415, file: !1677, line: 1470, column: 33)
!6421 = !DILocation(line: 1470, column: 49, scope: !6419)
!6422 = !DILocation(line: 1470, column: 47, scope: !6419)
!6423 = !DILocation(line: 1470, column: 33, scope: !6419)
!6424 = !DILocation(line: 1471, column: 55, scope: !6420)
!6425 = !DILocation(line: 1471, column: 37, scope: !6420)
!6426 = !DILocation(line: 1471, column: 40, scope: !6420)
!6427 = !DILocation(line: 1471, column: 59, scope: !6420)
!6428 = !DILocation(line: 1470, column: 53, scope: !6429)
!6429 = !DILexicalBlockFile(scope: !6420, file: !1677, discriminator: 2)
!6430 = !DILocation(line: 1470, column: 33, scope: !6429)
!6431 = distinct !{!6431, !6432}
!6432 = !DILocation(line: 1470, column: 33, scope: !6416)
!6433 = !DILocation(line: 1473, column: 25, scope: !6375)
!6434 = !DILocation(line: 1475, column: 36, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !1677, line: 1475, column: 29)
!6436 = distinct !DILexicalBlock(scope: !6367, file: !1677, line: 1473, column: 32)
!6437 = !DILocation(line: 1475, column: 34, scope: !6435)
!6438 = !DILocation(line: 1475, column: 41, scope: !6439)
!6439 = !DILexicalBlockFile(scope: !6440, file: !1677, discriminator: 1)
!6440 = distinct !DILexicalBlock(scope: !6435, file: !1677, line: 1475, column: 29)
!6441 = !DILocation(line: 1475, column: 45, scope: !6439)
!6442 = !DILocation(line: 1475, column: 43, scope: !6439)
!6443 = !DILocation(line: 1475, column: 29, scope: !6439)
!6444 = !DILocation(line: 1476, column: 58, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6440, file: !1677, line: 1475, column: 53)
!6446 = !DILocation(line: 1476, column: 55, scope: !6445)
!6447 = !DILocation(line: 1476, column: 50, scope: !6445)
!6448 = !DILocation(line: 1476, column: 33, scope: !6445)
!6449 = !DILocation(line: 1476, column: 36, scope: !6445)
!6450 = !DILocation(line: 1476, column: 53, scope: !6445)
!6451 = !DILocation(line: 1477, column: 34, scope: !6445)
!6452 = !DILocation(line: 1478, column: 29, scope: !6445)
!6453 = !DILocation(line: 1475, column: 49, scope: !6454)
!6454 = !DILexicalBlockFile(scope: !6440, file: !1677, discriminator: 2)
!6455 = !DILocation(line: 1475, column: 29, scope: !6454)
!6456 = distinct !{!6456, !6457}
!6457 = !DILocation(line: 1475, column: 29, scope: !6436)
!6458 = !DILocation(line: 1480, column: 21, scope: !6363)
!6459 = !DILocation(line: 1462, column: 41, scope: !6460)
!6460 = !DILexicalBlockFile(scope: !6359, file: !1677, discriminator: 2)
!6461 = !DILocation(line: 1462, column: 21, scope: !6460)
!6462 = distinct !{!6462, !6463}
!6463 = !DILocation(line: 1462, column: 21, scope: !6348)
!6464 = !DILocation(line: 1481, column: 39, scope: !6348)
!6465 = !DILocation(line: 1481, column: 21, scope: !6348)
!6466 = !DILocation(line: 1481, column: 24, scope: !6348)
!6467 = !DILocation(line: 1481, column: 43, scope: !6348)
!6468 = !DILocation(line: 1483, column: 13, scope: !6208)
!6469 = !DILocalVariable(name: "tindex", scope: !5472, file: !1677, line: 1484, type: !891)
!6470 = !DILocation(line: 1484, column: 21, scope: !5472)
!6471 = !DILocalVariable(name: "tindex2", scope: !5472, file: !1677, line: 1484, type: !891)
!6472 = !DILocation(line: 1484, column: 29, scope: !5472)
!6473 = !DILocalVariable(name: "slen", scope: !5472, file: !1677, line: 1484, type: !1178)
!6474 = !DILocation(line: 1484, column: 38, scope: !5472)
!6475 = !DILocalVariable(name: "sl", scope: !5472, file: !1677, line: 1484, type: !891)
!6476 = !DILocation(line: 1484, column: 47, scope: !5472)
!6477 = !DILocalVariable(name: "sf", scope: !5472, file: !1677, line: 1484, type: !891)
!6478 = !DILocation(line: 1484, column: 51, scope: !5472)
!6479 = !DILocation(line: 1487, column: 21, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !5472, file: !1677, line: 1487, column: 21)
!6481 = !DILocation(line: 1487, column: 24, scope: !6480)
!6482 = !DILocation(line: 1487, column: 35, scope: !6480)
!6483 = !DILocation(line: 1487, column: 21, scope: !5472)
!6484 = !DILocation(line: 1488, column: 30, scope: !6480)
!6485 = !DILocation(line: 1488, column: 33, scope: !6480)
!6486 = !DILocation(line: 1488, column: 28, scope: !6480)
!6487 = !DILocation(line: 1488, column: 21, scope: !6480)
!6488 = !DILocation(line: 1490, column: 28, scope: !6480)
!6489 = !DILocation(line: 1492, column: 22, scope: !5472)
!6490 = !DILocation(line: 1492, column: 25, scope: !5472)
!6491 = !DILocation(line: 1492, column: 20, scope: !5472)
!6492 = !DILocation(line: 1493, column: 22, scope: !5471)
!6493 = !DILocation(line: 1493, column: 25, scope: !5471)
!6494 = !DILocation(line: 1493, column: 34, scope: !5471)
!6495 = !DILocation(line: 1493, column: 39, scope: !5471)
!6496 = !DILocation(line: 1493, column: 42, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !5471, file: !1677, discriminator: 1)
!6498 = !DILocation(line: 1493, column: 45, scope: !6497)
!6499 = !DILocation(line: 1493, column: 21, scope: !6497)
!6500 = !DILocation(line: 1495, column: 24, scope: !5564)
!6501 = !DILocation(line: 1496, column: 25, scope: !5563)
!6502 = !DILocation(line: 1496, column: 28, scope: !5563)
!6503 = !DILocation(line: 1496, column: 25, scope: !5564)
!6504 = !DILocation(line: 1497, column: 39, scope: !5596)
!6505 = !DILocation(line: 1497, column: 45, scope: !5596)
!6506 = !DILocation(line: 1497, column: 25, scope: !5596)
!6507 = !DILocation(line: 778, column: 9, scope: !5490, inlinedAt: !5595)
!6508 = !DILocation(line: 778, column: 12, scope: !5490, inlinedAt: !5595)
!6509 = !DILocation(line: 778, column: 9, scope: !5462, inlinedAt: !5595)
!6510 = !DILocation(line: 778, column: 29, scope: !6511, inlinedAt: !5595)
!6511 = !DILexicalBlockFile(scope: !5489, file: !1677, discriminator: 1)
!6512 = !DILocation(line: 778, column: 32, scope: !6511, inlinedAt: !5595)
!6513 = !DILocation(line: 778, column: 39, scope: !6511, inlinedAt: !5595)
!6514 = !DILocation(line: 778, column: 24, scope: !6511, inlinedAt: !5595)
!6515 = !DILocation(line: 778, column: 55, scope: !6511, inlinedAt: !5595)
!6516 = !DILocation(line: 778, column: 64, scope: !6511, inlinedAt: !5595)
!6517 = !DILocation(line: 778, column: 62, scope: !6511, inlinedAt: !5595)
!6518 = !DILocation(line: 778, column: 58, scope: !6511, inlinedAt: !5595)
!6519 = !DILocation(line: 778, column: 45, scope: !6511, inlinedAt: !5595)
!6520 = !DILocation(line: 778, column: 53, scope: !6511, inlinedAt: !5595)
!6521 = !DILocation(line: 778, column: 72, scope: !6511, inlinedAt: !5595)
!6522 = !DILocation(line: 778, column: 70, scope: !6511, inlinedAt: !5595)
!6523 = !DILocation(line: 778, column: 75, scope: !6511, inlinedAt: !5595)
!6524 = !DILocation(line: 778, column: 86, scope: !6525, inlinedAt: !5595)
!6525 = !DILexicalBlockFile(scope: !5495, file: !1677, discriminator: 2)
!6526 = !DILocation(line: 778, column: 89, scope: !6525, inlinedAt: !5595)
!6527 = !DILocation(line: 778, column: 107, scope: !6528, inlinedAt: !5595)
!6528 = !DILexicalBlockFile(scope: !6529, file: !1677, discriminator: 3)
!6529 = distinct !DILexicalBlock(scope: !5495, file: !1677, line: 778, column: 95)
!6530 = !DILocation(line: 778, column: 110, scope: !6528, inlinedAt: !5595)
!6531 = !DILocation(line: 778, column: 97, scope: !6528, inlinedAt: !5595)
!6532 = !DILocation(line: 778, column: 105, scope: !6528, inlinedAt: !5595)
!6533 = !DILocation(line: 778, column: 118, scope: !6528, inlinedAt: !5595)
!6534 = !DILocation(line: 778, column: 125, scope: !6528, inlinedAt: !5595)
!6535 = !DILocation(line: 778, column: 136, scope: !6536, inlinedAt: !5595)
!6536 = !DILexicalBlockFile(scope: !5494, file: !1677, discriminator: 4)
!6537 = !DILocation(line: 778, column: 139, scope: !6536, inlinedAt: !5595)
!6538 = !DILocation(line: 778, column: 156, scope: !6539, inlinedAt: !5595)
!6539 = !DILexicalBlockFile(scope: !5493, file: !1677, discriminator: 5)
!6540 = !DILocation(line: 778, column: 159, scope: !6539, inlinedAt: !5595)
!6541 = !DILocation(line: 778, column: 166, scope: !6539, inlinedAt: !5595)
!6542 = !DILocation(line: 778, column: 151, scope: !6539, inlinedAt: !5595)
!6543 = !DILocation(line: 778, column: 183, scope: !6539, inlinedAt: !5595)
!6544 = !DILocation(line: 778, column: 192, scope: !6539, inlinedAt: !5595)
!6545 = !DILocation(line: 778, column: 190, scope: !6539, inlinedAt: !5595)
!6546 = !DILocation(line: 778, column: 186, scope: !6539, inlinedAt: !5595)
!6547 = !DILocation(line: 778, column: 173, scope: !6539, inlinedAt: !5595)
!6548 = !DILocation(line: 778, column: 181, scope: !6539, inlinedAt: !5595)
!6549 = !DILocation(line: 778, column: 200, scope: !6539, inlinedAt: !5595)
!6550 = !DILocation(line: 778, column: 198, scope: !6539, inlinedAt: !5595)
!6551 = !DILocation(line: 778, column: 203, scope: !6539, inlinedAt: !5595)
!6552 = !DILocation(line: 778, column: 214, scope: !6553, inlinedAt: !5595)
!6553 = !DILexicalBlockFile(scope: !5499, file: !1677, discriminator: 6)
!6554 = !DILocation(line: 778, column: 217, scope: !6553, inlinedAt: !5595)
!6555 = !DILocation(line: 778, column: 234, scope: !6556, inlinedAt: !5595)
!6556 = !DILexicalBlockFile(scope: !5498, file: !1677, discriminator: 7)
!6557 = !DILocation(line: 778, column: 237, scope: !6556, inlinedAt: !5595)
!6558 = !DILocation(line: 778, column: 244, scope: !6556, inlinedAt: !5595)
!6559 = !DILocation(line: 778, column: 229, scope: !6556, inlinedAt: !5595)
!6560 = !DILocation(line: 778, column: 261, scope: !6556, inlinedAt: !5595)
!6561 = !DILocation(line: 778, column: 270, scope: !6556, inlinedAt: !5595)
!6562 = !DILocation(line: 778, column: 268, scope: !6556, inlinedAt: !5595)
!6563 = !DILocation(line: 778, column: 264, scope: !6556, inlinedAt: !5595)
!6564 = !DILocation(line: 778, column: 251, scope: !6556, inlinedAt: !5595)
!6565 = !DILocation(line: 778, column: 259, scope: !6556, inlinedAt: !5595)
!6566 = !DILocation(line: 778, column: 278, scope: !6556, inlinedAt: !5595)
!6567 = !DILocation(line: 778, column: 276, scope: !6556, inlinedAt: !5595)
!6568 = !DILocation(line: 778, column: 281, scope: !6556, inlinedAt: !5595)
!6569 = !DILocation(line: 778, column: 290, scope: !6570, inlinedAt: !5595)
!6570 = !DILexicalBlockFile(scope: !6571, file: !1677, discriminator: 8)
!6571 = distinct !DILexicalBlock(scope: !5499, file: !1677, line: 778, column: 288)
!6572 = !DILocation(line: 778, column: 298, scope: !6570, inlinedAt: !5595)
!6573 = !DILocation(line: 779, column: 9, scope: !5503, inlinedAt: !5595)
!6574 = !DILocation(line: 779, column: 12, scope: !5503, inlinedAt: !5595)
!6575 = !DILocation(line: 779, column: 9, scope: !5462, inlinedAt: !5595)
!6576 = !DILocation(line: 779, column: 29, scope: !6577, inlinedAt: !5595)
!6577 = !DILexicalBlockFile(scope: !5502, file: !1677, discriminator: 1)
!6578 = !DILocation(line: 779, column: 32, scope: !6577, inlinedAt: !5595)
!6579 = !DILocation(line: 779, column: 39, scope: !6577, inlinedAt: !5595)
!6580 = !DILocation(line: 779, column: 24, scope: !6577, inlinedAt: !5595)
!6581 = !DILocation(line: 779, column: 55, scope: !6577, inlinedAt: !5595)
!6582 = !DILocation(line: 779, column: 64, scope: !6577, inlinedAt: !5595)
!6583 = !DILocation(line: 779, column: 62, scope: !6577, inlinedAt: !5595)
!6584 = !DILocation(line: 779, column: 58, scope: !6577, inlinedAt: !5595)
!6585 = !DILocation(line: 779, column: 45, scope: !6577, inlinedAt: !5595)
!6586 = !DILocation(line: 779, column: 53, scope: !6577, inlinedAt: !5595)
!6587 = !DILocation(line: 779, column: 72, scope: !6577, inlinedAt: !5595)
!6588 = !DILocation(line: 779, column: 70, scope: !6577, inlinedAt: !5595)
!6589 = !DILocation(line: 779, column: 75, scope: !6577, inlinedAt: !5595)
!6590 = !DILocation(line: 779, column: 86, scope: !6591, inlinedAt: !5595)
!6591 = !DILexicalBlockFile(scope: !5508, file: !1677, discriminator: 2)
!6592 = !DILocation(line: 779, column: 89, scope: !6591, inlinedAt: !5595)
!6593 = !DILocation(line: 779, column: 107, scope: !6594, inlinedAt: !5595)
!6594 = !DILexicalBlockFile(scope: !6595, file: !1677, discriminator: 3)
!6595 = distinct !DILexicalBlock(scope: !5508, file: !1677, line: 779, column: 95)
!6596 = !DILocation(line: 779, column: 110, scope: !6594, inlinedAt: !5595)
!6597 = !DILocation(line: 779, column: 97, scope: !6594, inlinedAt: !5595)
!6598 = !DILocation(line: 779, column: 105, scope: !6594, inlinedAt: !5595)
!6599 = !DILocation(line: 779, column: 118, scope: !6594, inlinedAt: !5595)
!6600 = !DILocation(line: 779, column: 125, scope: !6594, inlinedAt: !5595)
!6601 = !DILocation(line: 779, column: 136, scope: !6602, inlinedAt: !5595)
!6602 = !DILexicalBlockFile(scope: !5507, file: !1677, discriminator: 4)
!6603 = !DILocation(line: 779, column: 139, scope: !6602, inlinedAt: !5595)
!6604 = !DILocation(line: 779, column: 156, scope: !6605, inlinedAt: !5595)
!6605 = !DILexicalBlockFile(scope: !5506, file: !1677, discriminator: 5)
!6606 = !DILocation(line: 779, column: 159, scope: !6605, inlinedAt: !5595)
!6607 = !DILocation(line: 779, column: 166, scope: !6605, inlinedAt: !5595)
!6608 = !DILocation(line: 779, column: 151, scope: !6605, inlinedAt: !5595)
!6609 = !DILocation(line: 779, column: 183, scope: !6605, inlinedAt: !5595)
!6610 = !DILocation(line: 779, column: 192, scope: !6605, inlinedAt: !5595)
!6611 = !DILocation(line: 779, column: 190, scope: !6605, inlinedAt: !5595)
!6612 = !DILocation(line: 779, column: 186, scope: !6605, inlinedAt: !5595)
!6613 = !DILocation(line: 779, column: 173, scope: !6605, inlinedAt: !5595)
!6614 = !DILocation(line: 779, column: 181, scope: !6605, inlinedAt: !5595)
!6615 = !DILocation(line: 779, column: 200, scope: !6605, inlinedAt: !5595)
!6616 = !DILocation(line: 779, column: 198, scope: !6605, inlinedAt: !5595)
!6617 = !DILocation(line: 779, column: 203, scope: !6605, inlinedAt: !5595)
!6618 = !DILocation(line: 779, column: 214, scope: !6619, inlinedAt: !5595)
!6619 = !DILexicalBlockFile(scope: !5512, file: !1677, discriminator: 6)
!6620 = !DILocation(line: 779, column: 217, scope: !6619, inlinedAt: !5595)
!6621 = !DILocation(line: 779, column: 234, scope: !6622, inlinedAt: !5595)
!6622 = !DILexicalBlockFile(scope: !5511, file: !1677, discriminator: 7)
!6623 = !DILocation(line: 779, column: 237, scope: !6622, inlinedAt: !5595)
!6624 = !DILocation(line: 779, column: 244, scope: !6622, inlinedAt: !5595)
!6625 = !DILocation(line: 779, column: 229, scope: !6622, inlinedAt: !5595)
!6626 = !DILocation(line: 779, column: 261, scope: !6622, inlinedAt: !5595)
!6627 = !DILocation(line: 779, column: 270, scope: !6622, inlinedAt: !5595)
!6628 = !DILocation(line: 779, column: 268, scope: !6622, inlinedAt: !5595)
!6629 = !DILocation(line: 779, column: 264, scope: !6622, inlinedAt: !5595)
!6630 = !DILocation(line: 779, column: 251, scope: !6622, inlinedAt: !5595)
!6631 = !DILocation(line: 779, column: 259, scope: !6622, inlinedAt: !5595)
!6632 = !DILocation(line: 779, column: 278, scope: !6622, inlinedAt: !5595)
!6633 = !DILocation(line: 779, column: 276, scope: !6622, inlinedAt: !5595)
!6634 = !DILocation(line: 779, column: 281, scope: !6622, inlinedAt: !5595)
!6635 = !DILocation(line: 779, column: 290, scope: !6636, inlinedAt: !5595)
!6636 = !DILexicalBlockFile(scope: !6637, file: !1677, discriminator: 8)
!6637 = distinct !DILexicalBlock(scope: !5512, file: !1677, line: 779, column: 288)
!6638 = !DILocation(line: 779, column: 298, scope: !6636, inlinedAt: !5595)
!6639 = !DILocation(line: 780, column: 9, scope: !5516, inlinedAt: !5595)
!6640 = !DILocation(line: 780, column: 12, scope: !5516, inlinedAt: !5595)
!6641 = !DILocation(line: 780, column: 9, scope: !5462, inlinedAt: !5595)
!6642 = !DILocation(line: 780, column: 29, scope: !6643, inlinedAt: !5595)
!6643 = !DILexicalBlockFile(scope: !5515, file: !1677, discriminator: 1)
!6644 = !DILocation(line: 780, column: 32, scope: !6643, inlinedAt: !5595)
!6645 = !DILocation(line: 780, column: 39, scope: !6643, inlinedAt: !5595)
!6646 = !DILocation(line: 780, column: 24, scope: !6643, inlinedAt: !5595)
!6647 = !DILocation(line: 780, column: 55, scope: !6643, inlinedAt: !5595)
!6648 = !DILocation(line: 780, column: 64, scope: !6643, inlinedAt: !5595)
!6649 = !DILocation(line: 780, column: 62, scope: !6643, inlinedAt: !5595)
!6650 = !DILocation(line: 780, column: 58, scope: !6643, inlinedAt: !5595)
!6651 = !DILocation(line: 780, column: 45, scope: !6643, inlinedAt: !5595)
!6652 = !DILocation(line: 780, column: 53, scope: !6643, inlinedAt: !5595)
!6653 = !DILocation(line: 780, column: 72, scope: !6643, inlinedAt: !5595)
!6654 = !DILocation(line: 780, column: 70, scope: !6643, inlinedAt: !5595)
!6655 = !DILocation(line: 780, column: 75, scope: !6643, inlinedAt: !5595)
!6656 = !DILocation(line: 780, column: 86, scope: !6657, inlinedAt: !5595)
!6657 = !DILexicalBlockFile(scope: !5521, file: !1677, discriminator: 2)
!6658 = !DILocation(line: 780, column: 89, scope: !6657, inlinedAt: !5595)
!6659 = !DILocation(line: 780, column: 107, scope: !6660, inlinedAt: !5595)
!6660 = !DILexicalBlockFile(scope: !6661, file: !1677, discriminator: 3)
!6661 = distinct !DILexicalBlock(scope: !5521, file: !1677, line: 780, column: 95)
!6662 = !DILocation(line: 780, column: 110, scope: !6660, inlinedAt: !5595)
!6663 = !DILocation(line: 780, column: 97, scope: !6660, inlinedAt: !5595)
!6664 = !DILocation(line: 780, column: 105, scope: !6660, inlinedAt: !5595)
!6665 = !DILocation(line: 780, column: 118, scope: !6660, inlinedAt: !5595)
!6666 = !DILocation(line: 780, column: 125, scope: !6660, inlinedAt: !5595)
!6667 = !DILocation(line: 780, column: 136, scope: !6668, inlinedAt: !5595)
!6668 = !DILexicalBlockFile(scope: !5520, file: !1677, discriminator: 4)
!6669 = !DILocation(line: 780, column: 139, scope: !6668, inlinedAt: !5595)
!6670 = !DILocation(line: 780, column: 156, scope: !6671, inlinedAt: !5595)
!6671 = !DILexicalBlockFile(scope: !5519, file: !1677, discriminator: 5)
!6672 = !DILocation(line: 780, column: 159, scope: !6671, inlinedAt: !5595)
!6673 = !DILocation(line: 780, column: 166, scope: !6671, inlinedAt: !5595)
!6674 = !DILocation(line: 780, column: 151, scope: !6671, inlinedAt: !5595)
!6675 = !DILocation(line: 780, column: 183, scope: !6671, inlinedAt: !5595)
!6676 = !DILocation(line: 780, column: 192, scope: !6671, inlinedAt: !5595)
!6677 = !DILocation(line: 780, column: 190, scope: !6671, inlinedAt: !5595)
!6678 = !DILocation(line: 780, column: 186, scope: !6671, inlinedAt: !5595)
!6679 = !DILocation(line: 780, column: 173, scope: !6671, inlinedAt: !5595)
!6680 = !DILocation(line: 780, column: 181, scope: !6671, inlinedAt: !5595)
!6681 = !DILocation(line: 780, column: 200, scope: !6671, inlinedAt: !5595)
!6682 = !DILocation(line: 780, column: 198, scope: !6671, inlinedAt: !5595)
!6683 = !DILocation(line: 780, column: 203, scope: !6671, inlinedAt: !5595)
!6684 = !DILocation(line: 780, column: 214, scope: !6685, inlinedAt: !5595)
!6685 = !DILexicalBlockFile(scope: !5525, file: !1677, discriminator: 6)
!6686 = !DILocation(line: 780, column: 217, scope: !6685, inlinedAt: !5595)
!6687 = !DILocation(line: 780, column: 234, scope: !6688, inlinedAt: !5595)
!6688 = !DILexicalBlockFile(scope: !5524, file: !1677, discriminator: 7)
!6689 = !DILocation(line: 780, column: 237, scope: !6688, inlinedAt: !5595)
!6690 = !DILocation(line: 780, column: 244, scope: !6688, inlinedAt: !5595)
!6691 = !DILocation(line: 780, column: 229, scope: !6688, inlinedAt: !5595)
!6692 = !DILocation(line: 780, column: 261, scope: !6688, inlinedAt: !5595)
!6693 = !DILocation(line: 780, column: 270, scope: !6688, inlinedAt: !5595)
!6694 = !DILocation(line: 780, column: 268, scope: !6688, inlinedAt: !5595)
!6695 = !DILocation(line: 780, column: 264, scope: !6688, inlinedAt: !5595)
!6696 = !DILocation(line: 780, column: 251, scope: !6688, inlinedAt: !5595)
!6697 = !DILocation(line: 780, column: 259, scope: !6688, inlinedAt: !5595)
!6698 = !DILocation(line: 780, column: 278, scope: !6688, inlinedAt: !5595)
!6699 = !DILocation(line: 780, column: 276, scope: !6688, inlinedAt: !5595)
!6700 = !DILocation(line: 780, column: 281, scope: !6688, inlinedAt: !5595)
!6701 = !DILocation(line: 780, column: 290, scope: !6702, inlinedAt: !5595)
!6702 = !DILexicalBlockFile(scope: !6703, file: !1677, discriminator: 8)
!6703 = distinct !DILexicalBlock(scope: !5525, file: !1677, line: 780, column: 288)
!6704 = !DILocation(line: 780, column: 298, scope: !6702, inlinedAt: !5595)
!6705 = !DILocation(line: 781, column: 15, scope: !5462, inlinedAt: !5595)
!6706 = !DILocation(line: 781, column: 5, scope: !5462, inlinedAt: !5595)
!6707 = !DILocation(line: 781, column: 13, scope: !5462, inlinedAt: !5595)
!6708 = !DILocation(line: 1498, column: 33, scope: !5596)
!6709 = !DILocation(line: 1499, column: 21, scope: !5596)
!6710 = !DILocation(line: 1499, column: 32, scope: !6711)
!6711 = !DILexicalBlockFile(scope: !5562, file: !1677, discriminator: 1)
!6712 = !DILocation(line: 1499, column: 35, scope: !6711)
!6713 = !DILocation(line: 1500, column: 39, scope: !5580)
!6714 = !DILocation(line: 1500, column: 45, scope: !5580)
!6715 = !DILocation(line: 1500, column: 48, scope: !5580)
!6716 = !DILocation(line: 1500, column: 25, scope: !5580)
!6717 = !DILocation(line: 778, column: 9, scope: !5490, inlinedAt: !5579)
!6718 = !DILocation(line: 778, column: 12, scope: !5490, inlinedAt: !5579)
!6719 = !DILocation(line: 778, column: 9, scope: !5462, inlinedAt: !5579)
!6720 = !DILocation(line: 778, column: 29, scope: !6511, inlinedAt: !5579)
!6721 = !DILocation(line: 778, column: 32, scope: !6511, inlinedAt: !5579)
!6722 = !DILocation(line: 778, column: 39, scope: !6511, inlinedAt: !5579)
!6723 = !DILocation(line: 778, column: 24, scope: !6511, inlinedAt: !5579)
!6724 = !DILocation(line: 778, column: 55, scope: !6511, inlinedAt: !5579)
!6725 = !DILocation(line: 778, column: 64, scope: !6511, inlinedAt: !5579)
!6726 = !DILocation(line: 778, column: 62, scope: !6511, inlinedAt: !5579)
!6727 = !DILocation(line: 778, column: 58, scope: !6511, inlinedAt: !5579)
!6728 = !DILocation(line: 778, column: 45, scope: !6511, inlinedAt: !5579)
!6729 = !DILocation(line: 778, column: 53, scope: !6511, inlinedAt: !5579)
!6730 = !DILocation(line: 778, column: 72, scope: !6511, inlinedAt: !5579)
!6731 = !DILocation(line: 778, column: 70, scope: !6511, inlinedAt: !5579)
!6732 = !DILocation(line: 778, column: 75, scope: !6511, inlinedAt: !5579)
!6733 = !DILocation(line: 778, column: 86, scope: !6525, inlinedAt: !5579)
!6734 = !DILocation(line: 778, column: 89, scope: !6525, inlinedAt: !5579)
!6735 = !DILocation(line: 778, column: 107, scope: !6528, inlinedAt: !5579)
!6736 = !DILocation(line: 778, column: 110, scope: !6528, inlinedAt: !5579)
!6737 = !DILocation(line: 778, column: 97, scope: !6528, inlinedAt: !5579)
!6738 = !DILocation(line: 778, column: 105, scope: !6528, inlinedAt: !5579)
!6739 = !DILocation(line: 778, column: 118, scope: !6528, inlinedAt: !5579)
!6740 = !DILocation(line: 778, column: 125, scope: !6528, inlinedAt: !5579)
!6741 = !DILocation(line: 778, column: 136, scope: !6536, inlinedAt: !5579)
!6742 = !DILocation(line: 778, column: 139, scope: !6536, inlinedAt: !5579)
!6743 = !DILocation(line: 778, column: 156, scope: !6539, inlinedAt: !5579)
!6744 = !DILocation(line: 778, column: 159, scope: !6539, inlinedAt: !5579)
!6745 = !DILocation(line: 778, column: 166, scope: !6539, inlinedAt: !5579)
!6746 = !DILocation(line: 778, column: 151, scope: !6539, inlinedAt: !5579)
!6747 = !DILocation(line: 778, column: 183, scope: !6539, inlinedAt: !5579)
!6748 = !DILocation(line: 778, column: 192, scope: !6539, inlinedAt: !5579)
!6749 = !DILocation(line: 778, column: 190, scope: !6539, inlinedAt: !5579)
!6750 = !DILocation(line: 778, column: 186, scope: !6539, inlinedAt: !5579)
!6751 = !DILocation(line: 778, column: 173, scope: !6539, inlinedAt: !5579)
!6752 = !DILocation(line: 778, column: 181, scope: !6539, inlinedAt: !5579)
!6753 = !DILocation(line: 778, column: 200, scope: !6539, inlinedAt: !5579)
!6754 = !DILocation(line: 778, column: 198, scope: !6539, inlinedAt: !5579)
!6755 = !DILocation(line: 778, column: 203, scope: !6539, inlinedAt: !5579)
!6756 = !DILocation(line: 778, column: 214, scope: !6553, inlinedAt: !5579)
!6757 = !DILocation(line: 778, column: 217, scope: !6553, inlinedAt: !5579)
!6758 = !DILocation(line: 778, column: 234, scope: !6556, inlinedAt: !5579)
!6759 = !DILocation(line: 778, column: 237, scope: !6556, inlinedAt: !5579)
!6760 = !DILocation(line: 778, column: 244, scope: !6556, inlinedAt: !5579)
!6761 = !DILocation(line: 778, column: 229, scope: !6556, inlinedAt: !5579)
!6762 = !DILocation(line: 778, column: 261, scope: !6556, inlinedAt: !5579)
!6763 = !DILocation(line: 778, column: 270, scope: !6556, inlinedAt: !5579)
!6764 = !DILocation(line: 778, column: 268, scope: !6556, inlinedAt: !5579)
!6765 = !DILocation(line: 778, column: 264, scope: !6556, inlinedAt: !5579)
!6766 = !DILocation(line: 778, column: 251, scope: !6556, inlinedAt: !5579)
!6767 = !DILocation(line: 778, column: 259, scope: !6556, inlinedAt: !5579)
!6768 = !DILocation(line: 778, column: 278, scope: !6556, inlinedAt: !5579)
!6769 = !DILocation(line: 778, column: 276, scope: !6556, inlinedAt: !5579)
!6770 = !DILocation(line: 778, column: 281, scope: !6556, inlinedAt: !5579)
!6771 = !DILocation(line: 778, column: 290, scope: !6570, inlinedAt: !5579)
!6772 = !DILocation(line: 778, column: 298, scope: !6570, inlinedAt: !5579)
!6773 = !DILocation(line: 779, column: 9, scope: !5503, inlinedAt: !5579)
!6774 = !DILocation(line: 779, column: 12, scope: !5503, inlinedAt: !5579)
!6775 = !DILocation(line: 779, column: 9, scope: !5462, inlinedAt: !5579)
!6776 = !DILocation(line: 779, column: 29, scope: !6577, inlinedAt: !5579)
!6777 = !DILocation(line: 779, column: 32, scope: !6577, inlinedAt: !5579)
!6778 = !DILocation(line: 779, column: 39, scope: !6577, inlinedAt: !5579)
!6779 = !DILocation(line: 779, column: 24, scope: !6577, inlinedAt: !5579)
!6780 = !DILocation(line: 779, column: 55, scope: !6577, inlinedAt: !5579)
!6781 = !DILocation(line: 779, column: 64, scope: !6577, inlinedAt: !5579)
!6782 = !DILocation(line: 779, column: 62, scope: !6577, inlinedAt: !5579)
!6783 = !DILocation(line: 779, column: 58, scope: !6577, inlinedAt: !5579)
!6784 = !DILocation(line: 779, column: 45, scope: !6577, inlinedAt: !5579)
!6785 = !DILocation(line: 779, column: 53, scope: !6577, inlinedAt: !5579)
!6786 = !DILocation(line: 779, column: 72, scope: !6577, inlinedAt: !5579)
!6787 = !DILocation(line: 779, column: 70, scope: !6577, inlinedAt: !5579)
!6788 = !DILocation(line: 779, column: 75, scope: !6577, inlinedAt: !5579)
!6789 = !DILocation(line: 779, column: 86, scope: !6591, inlinedAt: !5579)
!6790 = !DILocation(line: 779, column: 89, scope: !6591, inlinedAt: !5579)
!6791 = !DILocation(line: 779, column: 107, scope: !6594, inlinedAt: !5579)
!6792 = !DILocation(line: 779, column: 110, scope: !6594, inlinedAt: !5579)
!6793 = !DILocation(line: 779, column: 97, scope: !6594, inlinedAt: !5579)
!6794 = !DILocation(line: 779, column: 105, scope: !6594, inlinedAt: !5579)
!6795 = !DILocation(line: 779, column: 118, scope: !6594, inlinedAt: !5579)
!6796 = !DILocation(line: 779, column: 125, scope: !6594, inlinedAt: !5579)
!6797 = !DILocation(line: 779, column: 136, scope: !6602, inlinedAt: !5579)
!6798 = !DILocation(line: 779, column: 139, scope: !6602, inlinedAt: !5579)
!6799 = !DILocation(line: 779, column: 156, scope: !6605, inlinedAt: !5579)
!6800 = !DILocation(line: 779, column: 159, scope: !6605, inlinedAt: !5579)
!6801 = !DILocation(line: 779, column: 166, scope: !6605, inlinedAt: !5579)
!6802 = !DILocation(line: 779, column: 151, scope: !6605, inlinedAt: !5579)
!6803 = !DILocation(line: 779, column: 183, scope: !6605, inlinedAt: !5579)
!6804 = !DILocation(line: 779, column: 192, scope: !6605, inlinedAt: !5579)
!6805 = !DILocation(line: 779, column: 190, scope: !6605, inlinedAt: !5579)
!6806 = !DILocation(line: 779, column: 186, scope: !6605, inlinedAt: !5579)
!6807 = !DILocation(line: 779, column: 173, scope: !6605, inlinedAt: !5579)
!6808 = !DILocation(line: 779, column: 181, scope: !6605, inlinedAt: !5579)
!6809 = !DILocation(line: 779, column: 200, scope: !6605, inlinedAt: !5579)
!6810 = !DILocation(line: 779, column: 198, scope: !6605, inlinedAt: !5579)
!6811 = !DILocation(line: 779, column: 203, scope: !6605, inlinedAt: !5579)
!6812 = !DILocation(line: 779, column: 214, scope: !6619, inlinedAt: !5579)
!6813 = !DILocation(line: 779, column: 217, scope: !6619, inlinedAt: !5579)
!6814 = !DILocation(line: 779, column: 234, scope: !6622, inlinedAt: !5579)
!6815 = !DILocation(line: 779, column: 237, scope: !6622, inlinedAt: !5579)
!6816 = !DILocation(line: 779, column: 244, scope: !6622, inlinedAt: !5579)
!6817 = !DILocation(line: 779, column: 229, scope: !6622, inlinedAt: !5579)
!6818 = !DILocation(line: 779, column: 261, scope: !6622, inlinedAt: !5579)
!6819 = !DILocation(line: 779, column: 270, scope: !6622, inlinedAt: !5579)
!6820 = !DILocation(line: 779, column: 268, scope: !6622, inlinedAt: !5579)
!6821 = !DILocation(line: 779, column: 264, scope: !6622, inlinedAt: !5579)
!6822 = !DILocation(line: 779, column: 251, scope: !6622, inlinedAt: !5579)
!6823 = !DILocation(line: 779, column: 259, scope: !6622, inlinedAt: !5579)
!6824 = !DILocation(line: 779, column: 278, scope: !6622, inlinedAt: !5579)
!6825 = !DILocation(line: 779, column: 276, scope: !6622, inlinedAt: !5579)
!6826 = !DILocation(line: 779, column: 281, scope: !6622, inlinedAt: !5579)
!6827 = !DILocation(line: 779, column: 290, scope: !6636, inlinedAt: !5579)
!6828 = !DILocation(line: 779, column: 298, scope: !6636, inlinedAt: !5579)
!6829 = !DILocation(line: 780, column: 9, scope: !5516, inlinedAt: !5579)
!6830 = !DILocation(line: 780, column: 12, scope: !5516, inlinedAt: !5579)
!6831 = !DILocation(line: 780, column: 9, scope: !5462, inlinedAt: !5579)
!6832 = !DILocation(line: 780, column: 29, scope: !6643, inlinedAt: !5579)
!6833 = !DILocation(line: 780, column: 32, scope: !6643, inlinedAt: !5579)
!6834 = !DILocation(line: 780, column: 39, scope: !6643, inlinedAt: !5579)
!6835 = !DILocation(line: 780, column: 24, scope: !6643, inlinedAt: !5579)
!6836 = !DILocation(line: 780, column: 55, scope: !6643, inlinedAt: !5579)
!6837 = !DILocation(line: 780, column: 64, scope: !6643, inlinedAt: !5579)
!6838 = !DILocation(line: 780, column: 62, scope: !6643, inlinedAt: !5579)
!6839 = !DILocation(line: 780, column: 58, scope: !6643, inlinedAt: !5579)
!6840 = !DILocation(line: 780, column: 45, scope: !6643, inlinedAt: !5579)
!6841 = !DILocation(line: 780, column: 53, scope: !6643, inlinedAt: !5579)
!6842 = !DILocation(line: 780, column: 72, scope: !6643, inlinedAt: !5579)
!6843 = !DILocation(line: 780, column: 70, scope: !6643, inlinedAt: !5579)
!6844 = !DILocation(line: 780, column: 75, scope: !6643, inlinedAt: !5579)
!6845 = !DILocation(line: 780, column: 86, scope: !6657, inlinedAt: !5579)
!6846 = !DILocation(line: 780, column: 89, scope: !6657, inlinedAt: !5579)
!6847 = !DILocation(line: 780, column: 107, scope: !6660, inlinedAt: !5579)
!6848 = !DILocation(line: 780, column: 110, scope: !6660, inlinedAt: !5579)
!6849 = !DILocation(line: 780, column: 97, scope: !6660, inlinedAt: !5579)
!6850 = !DILocation(line: 780, column: 105, scope: !6660, inlinedAt: !5579)
!6851 = !DILocation(line: 780, column: 118, scope: !6660, inlinedAt: !5579)
!6852 = !DILocation(line: 780, column: 125, scope: !6660, inlinedAt: !5579)
!6853 = !DILocation(line: 780, column: 136, scope: !6668, inlinedAt: !5579)
!6854 = !DILocation(line: 780, column: 139, scope: !6668, inlinedAt: !5579)
!6855 = !DILocation(line: 780, column: 156, scope: !6671, inlinedAt: !5579)
!6856 = !DILocation(line: 780, column: 159, scope: !6671, inlinedAt: !5579)
!6857 = !DILocation(line: 780, column: 166, scope: !6671, inlinedAt: !5579)
!6858 = !DILocation(line: 780, column: 151, scope: !6671, inlinedAt: !5579)
!6859 = !DILocation(line: 780, column: 183, scope: !6671, inlinedAt: !5579)
!6860 = !DILocation(line: 780, column: 192, scope: !6671, inlinedAt: !5579)
!6861 = !DILocation(line: 780, column: 190, scope: !6671, inlinedAt: !5579)
!6862 = !DILocation(line: 780, column: 186, scope: !6671, inlinedAt: !5579)
!6863 = !DILocation(line: 780, column: 173, scope: !6671, inlinedAt: !5579)
!6864 = !DILocation(line: 780, column: 181, scope: !6671, inlinedAt: !5579)
!6865 = !DILocation(line: 780, column: 200, scope: !6671, inlinedAt: !5579)
!6866 = !DILocation(line: 780, column: 198, scope: !6671, inlinedAt: !5579)
!6867 = !DILocation(line: 780, column: 203, scope: !6671, inlinedAt: !5579)
!6868 = !DILocation(line: 780, column: 214, scope: !6685, inlinedAt: !5579)
!6869 = !DILocation(line: 780, column: 217, scope: !6685, inlinedAt: !5579)
!6870 = !DILocation(line: 780, column: 234, scope: !6688, inlinedAt: !5579)
!6871 = !DILocation(line: 780, column: 237, scope: !6688, inlinedAt: !5579)
!6872 = !DILocation(line: 780, column: 244, scope: !6688, inlinedAt: !5579)
!6873 = !DILocation(line: 780, column: 229, scope: !6688, inlinedAt: !5579)
!6874 = !DILocation(line: 780, column: 261, scope: !6688, inlinedAt: !5579)
!6875 = !DILocation(line: 780, column: 270, scope: !6688, inlinedAt: !5579)
!6876 = !DILocation(line: 780, column: 268, scope: !6688, inlinedAt: !5579)
!6877 = !DILocation(line: 780, column: 264, scope: !6688, inlinedAt: !5579)
!6878 = !DILocation(line: 780, column: 251, scope: !6688, inlinedAt: !5579)
!6879 = !DILocation(line: 780, column: 259, scope: !6688, inlinedAt: !5579)
!6880 = !DILocation(line: 780, column: 278, scope: !6688, inlinedAt: !5579)
!6881 = !DILocation(line: 780, column: 276, scope: !6688, inlinedAt: !5579)
!6882 = !DILocation(line: 780, column: 281, scope: !6688, inlinedAt: !5579)
!6883 = !DILocation(line: 780, column: 290, scope: !6702, inlinedAt: !5579)
!6884 = !DILocation(line: 780, column: 298, scope: !6702, inlinedAt: !5579)
!6885 = !DILocation(line: 781, column: 15, scope: !5462, inlinedAt: !5579)
!6886 = !DILocation(line: 781, column: 5, scope: !5462, inlinedAt: !5579)
!6887 = !DILocation(line: 781, column: 13, scope: !5462, inlinedAt: !5579)
!6888 = !DILocation(line: 1501, column: 33, scope: !5580)
!6889 = !DILocation(line: 1502, column: 21, scope: !5580)
!6890 = !DILocation(line: 1503, column: 39, scope: !5561)
!6891 = !DILocation(line: 1503, column: 45, scope: !5561)
!6892 = !DILocation(line: 1503, column: 48, scope: !5561)
!6893 = !DILocation(line: 1503, column: 25, scope: !5561)
!6894 = !DILocation(line: 778, column: 9, scope: !5490, inlinedAt: !5560)
!6895 = !DILocation(line: 778, column: 12, scope: !5490, inlinedAt: !5560)
!6896 = !DILocation(line: 778, column: 9, scope: !5462, inlinedAt: !5560)
!6897 = !DILocation(line: 778, column: 29, scope: !6511, inlinedAt: !5560)
!6898 = !DILocation(line: 778, column: 32, scope: !6511, inlinedAt: !5560)
!6899 = !DILocation(line: 778, column: 39, scope: !6511, inlinedAt: !5560)
!6900 = !DILocation(line: 778, column: 24, scope: !6511, inlinedAt: !5560)
!6901 = !DILocation(line: 778, column: 55, scope: !6511, inlinedAt: !5560)
!6902 = !DILocation(line: 778, column: 64, scope: !6511, inlinedAt: !5560)
!6903 = !DILocation(line: 778, column: 62, scope: !6511, inlinedAt: !5560)
!6904 = !DILocation(line: 778, column: 58, scope: !6511, inlinedAt: !5560)
!6905 = !DILocation(line: 778, column: 45, scope: !6511, inlinedAt: !5560)
!6906 = !DILocation(line: 778, column: 53, scope: !6511, inlinedAt: !5560)
!6907 = !DILocation(line: 778, column: 72, scope: !6511, inlinedAt: !5560)
!6908 = !DILocation(line: 778, column: 70, scope: !6511, inlinedAt: !5560)
!6909 = !DILocation(line: 778, column: 75, scope: !6511, inlinedAt: !5560)
!6910 = !DILocation(line: 778, column: 86, scope: !6525, inlinedAt: !5560)
!6911 = !DILocation(line: 778, column: 89, scope: !6525, inlinedAt: !5560)
!6912 = !DILocation(line: 778, column: 107, scope: !6528, inlinedAt: !5560)
!6913 = !DILocation(line: 778, column: 110, scope: !6528, inlinedAt: !5560)
!6914 = !DILocation(line: 778, column: 97, scope: !6528, inlinedAt: !5560)
!6915 = !DILocation(line: 778, column: 105, scope: !6528, inlinedAt: !5560)
!6916 = !DILocation(line: 778, column: 118, scope: !6528, inlinedAt: !5560)
!6917 = !DILocation(line: 778, column: 125, scope: !6528, inlinedAt: !5560)
!6918 = !DILocation(line: 778, column: 136, scope: !6536, inlinedAt: !5560)
!6919 = !DILocation(line: 778, column: 139, scope: !6536, inlinedAt: !5560)
!6920 = !DILocation(line: 778, column: 156, scope: !6539, inlinedAt: !5560)
!6921 = !DILocation(line: 778, column: 159, scope: !6539, inlinedAt: !5560)
!6922 = !DILocation(line: 778, column: 166, scope: !6539, inlinedAt: !5560)
!6923 = !DILocation(line: 778, column: 151, scope: !6539, inlinedAt: !5560)
!6924 = !DILocation(line: 778, column: 183, scope: !6539, inlinedAt: !5560)
!6925 = !DILocation(line: 778, column: 192, scope: !6539, inlinedAt: !5560)
!6926 = !DILocation(line: 778, column: 190, scope: !6539, inlinedAt: !5560)
!6927 = !DILocation(line: 778, column: 186, scope: !6539, inlinedAt: !5560)
!6928 = !DILocation(line: 778, column: 173, scope: !6539, inlinedAt: !5560)
!6929 = !DILocation(line: 778, column: 181, scope: !6539, inlinedAt: !5560)
!6930 = !DILocation(line: 778, column: 200, scope: !6539, inlinedAt: !5560)
!6931 = !DILocation(line: 778, column: 198, scope: !6539, inlinedAt: !5560)
!6932 = !DILocation(line: 778, column: 203, scope: !6539, inlinedAt: !5560)
!6933 = !DILocation(line: 778, column: 214, scope: !6553, inlinedAt: !5560)
!6934 = !DILocation(line: 778, column: 217, scope: !6553, inlinedAt: !5560)
!6935 = !DILocation(line: 778, column: 234, scope: !6556, inlinedAt: !5560)
!6936 = !DILocation(line: 778, column: 237, scope: !6556, inlinedAt: !5560)
!6937 = !DILocation(line: 778, column: 244, scope: !6556, inlinedAt: !5560)
!6938 = !DILocation(line: 778, column: 229, scope: !6556, inlinedAt: !5560)
!6939 = !DILocation(line: 778, column: 261, scope: !6556, inlinedAt: !5560)
!6940 = !DILocation(line: 778, column: 270, scope: !6556, inlinedAt: !5560)
!6941 = !DILocation(line: 778, column: 268, scope: !6556, inlinedAt: !5560)
!6942 = !DILocation(line: 778, column: 264, scope: !6556, inlinedAt: !5560)
!6943 = !DILocation(line: 778, column: 251, scope: !6556, inlinedAt: !5560)
!6944 = !DILocation(line: 778, column: 259, scope: !6556, inlinedAt: !5560)
!6945 = !DILocation(line: 778, column: 278, scope: !6556, inlinedAt: !5560)
!6946 = !DILocation(line: 778, column: 276, scope: !6556, inlinedAt: !5560)
!6947 = !DILocation(line: 778, column: 281, scope: !6556, inlinedAt: !5560)
!6948 = !DILocation(line: 778, column: 290, scope: !6570, inlinedAt: !5560)
!6949 = !DILocation(line: 778, column: 298, scope: !6570, inlinedAt: !5560)
!6950 = !DILocation(line: 779, column: 9, scope: !5503, inlinedAt: !5560)
!6951 = !DILocation(line: 779, column: 12, scope: !5503, inlinedAt: !5560)
!6952 = !DILocation(line: 779, column: 9, scope: !5462, inlinedAt: !5560)
!6953 = !DILocation(line: 779, column: 29, scope: !6577, inlinedAt: !5560)
!6954 = !DILocation(line: 779, column: 32, scope: !6577, inlinedAt: !5560)
!6955 = !DILocation(line: 779, column: 39, scope: !6577, inlinedAt: !5560)
!6956 = !DILocation(line: 779, column: 24, scope: !6577, inlinedAt: !5560)
!6957 = !DILocation(line: 779, column: 55, scope: !6577, inlinedAt: !5560)
!6958 = !DILocation(line: 779, column: 64, scope: !6577, inlinedAt: !5560)
!6959 = !DILocation(line: 779, column: 62, scope: !6577, inlinedAt: !5560)
!6960 = !DILocation(line: 779, column: 58, scope: !6577, inlinedAt: !5560)
!6961 = !DILocation(line: 779, column: 45, scope: !6577, inlinedAt: !5560)
!6962 = !DILocation(line: 779, column: 53, scope: !6577, inlinedAt: !5560)
!6963 = !DILocation(line: 779, column: 72, scope: !6577, inlinedAt: !5560)
!6964 = !DILocation(line: 779, column: 70, scope: !6577, inlinedAt: !5560)
!6965 = !DILocation(line: 779, column: 75, scope: !6577, inlinedAt: !5560)
!6966 = !DILocation(line: 779, column: 86, scope: !6591, inlinedAt: !5560)
!6967 = !DILocation(line: 779, column: 89, scope: !6591, inlinedAt: !5560)
!6968 = !DILocation(line: 779, column: 107, scope: !6594, inlinedAt: !5560)
!6969 = !DILocation(line: 779, column: 110, scope: !6594, inlinedAt: !5560)
!6970 = !DILocation(line: 779, column: 97, scope: !6594, inlinedAt: !5560)
!6971 = !DILocation(line: 779, column: 105, scope: !6594, inlinedAt: !5560)
!6972 = !DILocation(line: 779, column: 118, scope: !6594, inlinedAt: !5560)
!6973 = !DILocation(line: 779, column: 125, scope: !6594, inlinedAt: !5560)
!6974 = !DILocation(line: 779, column: 136, scope: !6602, inlinedAt: !5560)
!6975 = !DILocation(line: 779, column: 139, scope: !6602, inlinedAt: !5560)
!6976 = !DILocation(line: 779, column: 156, scope: !6605, inlinedAt: !5560)
!6977 = !DILocation(line: 779, column: 159, scope: !6605, inlinedAt: !5560)
!6978 = !DILocation(line: 779, column: 166, scope: !6605, inlinedAt: !5560)
!6979 = !DILocation(line: 779, column: 151, scope: !6605, inlinedAt: !5560)
!6980 = !DILocation(line: 779, column: 183, scope: !6605, inlinedAt: !5560)
!6981 = !DILocation(line: 779, column: 192, scope: !6605, inlinedAt: !5560)
!6982 = !DILocation(line: 779, column: 190, scope: !6605, inlinedAt: !5560)
!6983 = !DILocation(line: 779, column: 186, scope: !6605, inlinedAt: !5560)
!6984 = !DILocation(line: 779, column: 173, scope: !6605, inlinedAt: !5560)
!6985 = !DILocation(line: 779, column: 181, scope: !6605, inlinedAt: !5560)
!6986 = !DILocation(line: 779, column: 200, scope: !6605, inlinedAt: !5560)
!6987 = !DILocation(line: 779, column: 198, scope: !6605, inlinedAt: !5560)
!6988 = !DILocation(line: 779, column: 203, scope: !6605, inlinedAt: !5560)
!6989 = !DILocation(line: 779, column: 214, scope: !6619, inlinedAt: !5560)
!6990 = !DILocation(line: 779, column: 217, scope: !6619, inlinedAt: !5560)
!6991 = !DILocation(line: 779, column: 234, scope: !6622, inlinedAt: !5560)
!6992 = !DILocation(line: 779, column: 237, scope: !6622, inlinedAt: !5560)
!6993 = !DILocation(line: 779, column: 244, scope: !6622, inlinedAt: !5560)
!6994 = !DILocation(line: 779, column: 229, scope: !6622, inlinedAt: !5560)
!6995 = !DILocation(line: 779, column: 261, scope: !6622, inlinedAt: !5560)
!6996 = !DILocation(line: 779, column: 270, scope: !6622, inlinedAt: !5560)
!6997 = !DILocation(line: 779, column: 268, scope: !6622, inlinedAt: !5560)
!6998 = !DILocation(line: 779, column: 264, scope: !6622, inlinedAt: !5560)
!6999 = !DILocation(line: 779, column: 251, scope: !6622, inlinedAt: !5560)
!7000 = !DILocation(line: 779, column: 259, scope: !6622, inlinedAt: !5560)
!7001 = !DILocation(line: 779, column: 278, scope: !6622, inlinedAt: !5560)
!7002 = !DILocation(line: 779, column: 276, scope: !6622, inlinedAt: !5560)
!7003 = !DILocation(line: 779, column: 281, scope: !6622, inlinedAt: !5560)
!7004 = !DILocation(line: 779, column: 290, scope: !6636, inlinedAt: !5560)
!7005 = !DILocation(line: 779, column: 298, scope: !6636, inlinedAt: !5560)
!7006 = !DILocation(line: 780, column: 9, scope: !5516, inlinedAt: !5560)
!7007 = !DILocation(line: 780, column: 12, scope: !5516, inlinedAt: !5560)
!7008 = !DILocation(line: 780, column: 9, scope: !5462, inlinedAt: !5560)
!7009 = !DILocation(line: 780, column: 29, scope: !6643, inlinedAt: !5560)
!7010 = !DILocation(line: 780, column: 32, scope: !6643, inlinedAt: !5560)
!7011 = !DILocation(line: 780, column: 39, scope: !6643, inlinedAt: !5560)
!7012 = !DILocation(line: 780, column: 24, scope: !6643, inlinedAt: !5560)
!7013 = !DILocation(line: 780, column: 55, scope: !6643, inlinedAt: !5560)
!7014 = !DILocation(line: 780, column: 64, scope: !6643, inlinedAt: !5560)
!7015 = !DILocation(line: 780, column: 62, scope: !6643, inlinedAt: !5560)
!7016 = !DILocation(line: 780, column: 58, scope: !6643, inlinedAt: !5560)
!7017 = !DILocation(line: 780, column: 45, scope: !6643, inlinedAt: !5560)
!7018 = !DILocation(line: 780, column: 53, scope: !6643, inlinedAt: !5560)
!7019 = !DILocation(line: 780, column: 72, scope: !6643, inlinedAt: !5560)
!7020 = !DILocation(line: 780, column: 70, scope: !6643, inlinedAt: !5560)
!7021 = !DILocation(line: 780, column: 75, scope: !6643, inlinedAt: !5560)
!7022 = !DILocation(line: 780, column: 86, scope: !6657, inlinedAt: !5560)
!7023 = !DILocation(line: 780, column: 89, scope: !6657, inlinedAt: !5560)
!7024 = !DILocation(line: 780, column: 107, scope: !6660, inlinedAt: !5560)
!7025 = !DILocation(line: 780, column: 110, scope: !6660, inlinedAt: !5560)
!7026 = !DILocation(line: 780, column: 97, scope: !6660, inlinedAt: !5560)
!7027 = !DILocation(line: 780, column: 105, scope: !6660, inlinedAt: !5560)
!7028 = !DILocation(line: 780, column: 118, scope: !6660, inlinedAt: !5560)
!7029 = !DILocation(line: 780, column: 125, scope: !6660, inlinedAt: !5560)
!7030 = !DILocation(line: 780, column: 136, scope: !6668, inlinedAt: !5560)
!7031 = !DILocation(line: 780, column: 139, scope: !6668, inlinedAt: !5560)
!7032 = !DILocation(line: 780, column: 156, scope: !6671, inlinedAt: !5560)
!7033 = !DILocation(line: 780, column: 159, scope: !6671, inlinedAt: !5560)
!7034 = !DILocation(line: 780, column: 166, scope: !6671, inlinedAt: !5560)
!7035 = !DILocation(line: 780, column: 151, scope: !6671, inlinedAt: !5560)
!7036 = !DILocation(line: 780, column: 183, scope: !6671, inlinedAt: !5560)
!7037 = !DILocation(line: 780, column: 192, scope: !6671, inlinedAt: !5560)
!7038 = !DILocation(line: 780, column: 190, scope: !6671, inlinedAt: !5560)
!7039 = !DILocation(line: 780, column: 186, scope: !6671, inlinedAt: !5560)
!7040 = !DILocation(line: 780, column: 173, scope: !6671, inlinedAt: !5560)
!7041 = !DILocation(line: 780, column: 181, scope: !6671, inlinedAt: !5560)
!7042 = !DILocation(line: 780, column: 200, scope: !6671, inlinedAt: !5560)
!7043 = !DILocation(line: 780, column: 198, scope: !6671, inlinedAt: !5560)
!7044 = !DILocation(line: 780, column: 203, scope: !6671, inlinedAt: !5560)
!7045 = !DILocation(line: 780, column: 214, scope: !6685, inlinedAt: !5560)
!7046 = !DILocation(line: 780, column: 217, scope: !6685, inlinedAt: !5560)
!7047 = !DILocation(line: 780, column: 234, scope: !6688, inlinedAt: !5560)
!7048 = !DILocation(line: 780, column: 237, scope: !6688, inlinedAt: !5560)
!7049 = !DILocation(line: 780, column: 244, scope: !6688, inlinedAt: !5560)
!7050 = !DILocation(line: 780, column: 229, scope: !6688, inlinedAt: !5560)
!7051 = !DILocation(line: 780, column: 261, scope: !6688, inlinedAt: !5560)
!7052 = !DILocation(line: 780, column: 270, scope: !6688, inlinedAt: !5560)
!7053 = !DILocation(line: 780, column: 268, scope: !6688, inlinedAt: !5560)
!7054 = !DILocation(line: 780, column: 264, scope: !6688, inlinedAt: !5560)
!7055 = !DILocation(line: 780, column: 251, scope: !6688, inlinedAt: !5560)
!7056 = !DILocation(line: 780, column: 259, scope: !6688, inlinedAt: !5560)
!7057 = !DILocation(line: 780, column: 278, scope: !6688, inlinedAt: !5560)
!7058 = !DILocation(line: 780, column: 276, scope: !6688, inlinedAt: !5560)
!7059 = !DILocation(line: 780, column: 281, scope: !6688, inlinedAt: !5560)
!7060 = !DILocation(line: 780, column: 290, scope: !6702, inlinedAt: !5560)
!7061 = !DILocation(line: 780, column: 298, scope: !6702, inlinedAt: !5560)
!7062 = !DILocation(line: 781, column: 15, scope: !5462, inlinedAt: !5560)
!7063 = !DILocation(line: 781, column: 5, scope: !5462, inlinedAt: !5560)
!7064 = !DILocation(line: 781, column: 13, scope: !5462, inlinedAt: !5560)
!7065 = !DILocation(line: 1504, column: 33, scope: !5561)
!7066 = !DILocation(line: 1506, column: 17, scope: !5564)
!7067 = !DILocation(line: 1508, column: 25, scope: !5469)
!7068 = !DILocation(line: 1508, column: 28, scope: !5469)
!7069 = !DILocation(line: 1508, column: 25, scope: !5470)
!7070 = !DILocation(line: 1509, column: 39, scope: !5545)
!7071 = !DILocation(line: 1509, column: 45, scope: !5545)
!7072 = !DILocation(line: 1509, column: 25, scope: !5545)
!7073 = !DILocation(line: 778, column: 9, scope: !5490, inlinedAt: !5544)
!7074 = !DILocation(line: 778, column: 12, scope: !5490, inlinedAt: !5544)
!7075 = !DILocation(line: 778, column: 9, scope: !5462, inlinedAt: !5544)
!7076 = !DILocation(line: 778, column: 29, scope: !6511, inlinedAt: !5544)
!7077 = !DILocation(line: 778, column: 32, scope: !6511, inlinedAt: !5544)
!7078 = !DILocation(line: 778, column: 39, scope: !6511, inlinedAt: !5544)
!7079 = !DILocation(line: 778, column: 24, scope: !6511, inlinedAt: !5544)
!7080 = !DILocation(line: 778, column: 55, scope: !6511, inlinedAt: !5544)
!7081 = !DILocation(line: 778, column: 64, scope: !6511, inlinedAt: !5544)
!7082 = !DILocation(line: 778, column: 62, scope: !6511, inlinedAt: !5544)
!7083 = !DILocation(line: 778, column: 58, scope: !6511, inlinedAt: !5544)
!7084 = !DILocation(line: 778, column: 45, scope: !6511, inlinedAt: !5544)
!7085 = !DILocation(line: 778, column: 53, scope: !6511, inlinedAt: !5544)
!7086 = !DILocation(line: 778, column: 72, scope: !6511, inlinedAt: !5544)
!7087 = !DILocation(line: 778, column: 70, scope: !6511, inlinedAt: !5544)
!7088 = !DILocation(line: 778, column: 75, scope: !6511, inlinedAt: !5544)
!7089 = !DILocation(line: 778, column: 86, scope: !6525, inlinedAt: !5544)
!7090 = !DILocation(line: 778, column: 89, scope: !6525, inlinedAt: !5544)
!7091 = !DILocation(line: 778, column: 107, scope: !6528, inlinedAt: !5544)
!7092 = !DILocation(line: 778, column: 110, scope: !6528, inlinedAt: !5544)
!7093 = !DILocation(line: 778, column: 97, scope: !6528, inlinedAt: !5544)
!7094 = !DILocation(line: 778, column: 105, scope: !6528, inlinedAt: !5544)
!7095 = !DILocation(line: 778, column: 118, scope: !6528, inlinedAt: !5544)
!7096 = !DILocation(line: 778, column: 125, scope: !6528, inlinedAt: !5544)
!7097 = !DILocation(line: 778, column: 136, scope: !6536, inlinedAt: !5544)
!7098 = !DILocation(line: 778, column: 139, scope: !6536, inlinedAt: !5544)
!7099 = !DILocation(line: 778, column: 156, scope: !6539, inlinedAt: !5544)
!7100 = !DILocation(line: 778, column: 159, scope: !6539, inlinedAt: !5544)
!7101 = !DILocation(line: 778, column: 166, scope: !6539, inlinedAt: !5544)
!7102 = !DILocation(line: 778, column: 151, scope: !6539, inlinedAt: !5544)
!7103 = !DILocation(line: 778, column: 183, scope: !6539, inlinedAt: !5544)
!7104 = !DILocation(line: 778, column: 192, scope: !6539, inlinedAt: !5544)
!7105 = !DILocation(line: 778, column: 190, scope: !6539, inlinedAt: !5544)
!7106 = !DILocation(line: 778, column: 186, scope: !6539, inlinedAt: !5544)
!7107 = !DILocation(line: 778, column: 173, scope: !6539, inlinedAt: !5544)
!7108 = !DILocation(line: 778, column: 181, scope: !6539, inlinedAt: !5544)
!7109 = !DILocation(line: 778, column: 200, scope: !6539, inlinedAt: !5544)
!7110 = !DILocation(line: 778, column: 198, scope: !6539, inlinedAt: !5544)
!7111 = !DILocation(line: 778, column: 203, scope: !6539, inlinedAt: !5544)
!7112 = !DILocation(line: 778, column: 214, scope: !6553, inlinedAt: !5544)
!7113 = !DILocation(line: 778, column: 217, scope: !6553, inlinedAt: !5544)
!7114 = !DILocation(line: 778, column: 234, scope: !6556, inlinedAt: !5544)
!7115 = !DILocation(line: 778, column: 237, scope: !6556, inlinedAt: !5544)
!7116 = !DILocation(line: 778, column: 244, scope: !6556, inlinedAt: !5544)
!7117 = !DILocation(line: 778, column: 229, scope: !6556, inlinedAt: !5544)
!7118 = !DILocation(line: 778, column: 261, scope: !6556, inlinedAt: !5544)
!7119 = !DILocation(line: 778, column: 270, scope: !6556, inlinedAt: !5544)
!7120 = !DILocation(line: 778, column: 268, scope: !6556, inlinedAt: !5544)
!7121 = !DILocation(line: 778, column: 264, scope: !6556, inlinedAt: !5544)
!7122 = !DILocation(line: 778, column: 251, scope: !6556, inlinedAt: !5544)
!7123 = !DILocation(line: 778, column: 259, scope: !6556, inlinedAt: !5544)
!7124 = !DILocation(line: 778, column: 278, scope: !6556, inlinedAt: !5544)
!7125 = !DILocation(line: 778, column: 276, scope: !6556, inlinedAt: !5544)
!7126 = !DILocation(line: 778, column: 281, scope: !6556, inlinedAt: !5544)
!7127 = !DILocation(line: 778, column: 290, scope: !6570, inlinedAt: !5544)
!7128 = !DILocation(line: 778, column: 298, scope: !6570, inlinedAt: !5544)
!7129 = !DILocation(line: 779, column: 9, scope: !5503, inlinedAt: !5544)
!7130 = !DILocation(line: 779, column: 12, scope: !5503, inlinedAt: !5544)
!7131 = !DILocation(line: 779, column: 9, scope: !5462, inlinedAt: !5544)
!7132 = !DILocation(line: 779, column: 29, scope: !6577, inlinedAt: !5544)
!7133 = !DILocation(line: 779, column: 32, scope: !6577, inlinedAt: !5544)
!7134 = !DILocation(line: 779, column: 39, scope: !6577, inlinedAt: !5544)
!7135 = !DILocation(line: 779, column: 24, scope: !6577, inlinedAt: !5544)
!7136 = !DILocation(line: 779, column: 55, scope: !6577, inlinedAt: !5544)
!7137 = !DILocation(line: 779, column: 64, scope: !6577, inlinedAt: !5544)
!7138 = !DILocation(line: 779, column: 62, scope: !6577, inlinedAt: !5544)
!7139 = !DILocation(line: 779, column: 58, scope: !6577, inlinedAt: !5544)
!7140 = !DILocation(line: 779, column: 45, scope: !6577, inlinedAt: !5544)
!7141 = !DILocation(line: 779, column: 53, scope: !6577, inlinedAt: !5544)
!7142 = !DILocation(line: 779, column: 72, scope: !6577, inlinedAt: !5544)
!7143 = !DILocation(line: 779, column: 70, scope: !6577, inlinedAt: !5544)
!7144 = !DILocation(line: 779, column: 75, scope: !6577, inlinedAt: !5544)
!7145 = !DILocation(line: 779, column: 86, scope: !6591, inlinedAt: !5544)
!7146 = !DILocation(line: 779, column: 89, scope: !6591, inlinedAt: !5544)
!7147 = !DILocation(line: 779, column: 107, scope: !6594, inlinedAt: !5544)
!7148 = !DILocation(line: 779, column: 110, scope: !6594, inlinedAt: !5544)
!7149 = !DILocation(line: 779, column: 97, scope: !6594, inlinedAt: !5544)
!7150 = !DILocation(line: 779, column: 105, scope: !6594, inlinedAt: !5544)
!7151 = !DILocation(line: 779, column: 118, scope: !6594, inlinedAt: !5544)
!7152 = !DILocation(line: 779, column: 125, scope: !6594, inlinedAt: !5544)
!7153 = !DILocation(line: 779, column: 136, scope: !6602, inlinedAt: !5544)
!7154 = !DILocation(line: 779, column: 139, scope: !6602, inlinedAt: !5544)
!7155 = !DILocation(line: 779, column: 156, scope: !6605, inlinedAt: !5544)
!7156 = !DILocation(line: 779, column: 159, scope: !6605, inlinedAt: !5544)
!7157 = !DILocation(line: 779, column: 166, scope: !6605, inlinedAt: !5544)
!7158 = !DILocation(line: 779, column: 151, scope: !6605, inlinedAt: !5544)
!7159 = !DILocation(line: 779, column: 183, scope: !6605, inlinedAt: !5544)
!7160 = !DILocation(line: 779, column: 192, scope: !6605, inlinedAt: !5544)
!7161 = !DILocation(line: 779, column: 190, scope: !6605, inlinedAt: !5544)
!7162 = !DILocation(line: 779, column: 186, scope: !6605, inlinedAt: !5544)
!7163 = !DILocation(line: 779, column: 173, scope: !6605, inlinedAt: !5544)
!7164 = !DILocation(line: 779, column: 181, scope: !6605, inlinedAt: !5544)
!7165 = !DILocation(line: 779, column: 200, scope: !6605, inlinedAt: !5544)
!7166 = !DILocation(line: 779, column: 198, scope: !6605, inlinedAt: !5544)
!7167 = !DILocation(line: 779, column: 203, scope: !6605, inlinedAt: !5544)
!7168 = !DILocation(line: 779, column: 214, scope: !6619, inlinedAt: !5544)
!7169 = !DILocation(line: 779, column: 217, scope: !6619, inlinedAt: !5544)
!7170 = !DILocation(line: 779, column: 234, scope: !6622, inlinedAt: !5544)
!7171 = !DILocation(line: 779, column: 237, scope: !6622, inlinedAt: !5544)
!7172 = !DILocation(line: 779, column: 244, scope: !6622, inlinedAt: !5544)
!7173 = !DILocation(line: 779, column: 229, scope: !6622, inlinedAt: !5544)
!7174 = !DILocation(line: 779, column: 261, scope: !6622, inlinedAt: !5544)
!7175 = !DILocation(line: 779, column: 270, scope: !6622, inlinedAt: !5544)
!7176 = !DILocation(line: 779, column: 268, scope: !6622, inlinedAt: !5544)
!7177 = !DILocation(line: 779, column: 264, scope: !6622, inlinedAt: !5544)
!7178 = !DILocation(line: 779, column: 251, scope: !6622, inlinedAt: !5544)
!7179 = !DILocation(line: 779, column: 259, scope: !6622, inlinedAt: !5544)
!7180 = !DILocation(line: 779, column: 278, scope: !6622, inlinedAt: !5544)
!7181 = !DILocation(line: 779, column: 276, scope: !6622, inlinedAt: !5544)
!7182 = !DILocation(line: 779, column: 281, scope: !6622, inlinedAt: !5544)
!7183 = !DILocation(line: 779, column: 290, scope: !6636, inlinedAt: !5544)
!7184 = !DILocation(line: 779, column: 298, scope: !6636, inlinedAt: !5544)
!7185 = !DILocation(line: 780, column: 9, scope: !5516, inlinedAt: !5544)
!7186 = !DILocation(line: 780, column: 12, scope: !5516, inlinedAt: !5544)
!7187 = !DILocation(line: 780, column: 9, scope: !5462, inlinedAt: !5544)
!7188 = !DILocation(line: 780, column: 29, scope: !6643, inlinedAt: !5544)
!7189 = !DILocation(line: 780, column: 32, scope: !6643, inlinedAt: !5544)
!7190 = !DILocation(line: 780, column: 39, scope: !6643, inlinedAt: !5544)
!7191 = !DILocation(line: 780, column: 24, scope: !6643, inlinedAt: !5544)
!7192 = !DILocation(line: 780, column: 55, scope: !6643, inlinedAt: !5544)
!7193 = !DILocation(line: 780, column: 64, scope: !6643, inlinedAt: !5544)
!7194 = !DILocation(line: 780, column: 62, scope: !6643, inlinedAt: !5544)
!7195 = !DILocation(line: 780, column: 58, scope: !6643, inlinedAt: !5544)
!7196 = !DILocation(line: 780, column: 45, scope: !6643, inlinedAt: !5544)
!7197 = !DILocation(line: 780, column: 53, scope: !6643, inlinedAt: !5544)
!7198 = !DILocation(line: 780, column: 72, scope: !6643, inlinedAt: !5544)
!7199 = !DILocation(line: 780, column: 70, scope: !6643, inlinedAt: !5544)
!7200 = !DILocation(line: 780, column: 75, scope: !6643, inlinedAt: !5544)
!7201 = !DILocation(line: 780, column: 86, scope: !6657, inlinedAt: !5544)
!7202 = !DILocation(line: 780, column: 89, scope: !6657, inlinedAt: !5544)
!7203 = !DILocation(line: 780, column: 107, scope: !6660, inlinedAt: !5544)
!7204 = !DILocation(line: 780, column: 110, scope: !6660, inlinedAt: !5544)
!7205 = !DILocation(line: 780, column: 97, scope: !6660, inlinedAt: !5544)
!7206 = !DILocation(line: 780, column: 105, scope: !6660, inlinedAt: !5544)
!7207 = !DILocation(line: 780, column: 118, scope: !6660, inlinedAt: !5544)
!7208 = !DILocation(line: 780, column: 125, scope: !6660, inlinedAt: !5544)
!7209 = !DILocation(line: 780, column: 136, scope: !6668, inlinedAt: !5544)
!7210 = !DILocation(line: 780, column: 139, scope: !6668, inlinedAt: !5544)
!7211 = !DILocation(line: 780, column: 156, scope: !6671, inlinedAt: !5544)
!7212 = !DILocation(line: 780, column: 159, scope: !6671, inlinedAt: !5544)
!7213 = !DILocation(line: 780, column: 166, scope: !6671, inlinedAt: !5544)
!7214 = !DILocation(line: 780, column: 151, scope: !6671, inlinedAt: !5544)
!7215 = !DILocation(line: 780, column: 183, scope: !6671, inlinedAt: !5544)
!7216 = !DILocation(line: 780, column: 192, scope: !6671, inlinedAt: !5544)
!7217 = !DILocation(line: 780, column: 190, scope: !6671, inlinedAt: !5544)
!7218 = !DILocation(line: 780, column: 186, scope: !6671, inlinedAt: !5544)
!7219 = !DILocation(line: 780, column: 173, scope: !6671, inlinedAt: !5544)
!7220 = !DILocation(line: 780, column: 181, scope: !6671, inlinedAt: !5544)
!7221 = !DILocation(line: 780, column: 200, scope: !6671, inlinedAt: !5544)
!7222 = !DILocation(line: 780, column: 198, scope: !6671, inlinedAt: !5544)
!7223 = !DILocation(line: 780, column: 203, scope: !6671, inlinedAt: !5544)
!7224 = !DILocation(line: 780, column: 214, scope: !6685, inlinedAt: !5544)
!7225 = !DILocation(line: 780, column: 217, scope: !6685, inlinedAt: !5544)
!7226 = !DILocation(line: 780, column: 234, scope: !6688, inlinedAt: !5544)
!7227 = !DILocation(line: 780, column: 237, scope: !6688, inlinedAt: !5544)
!7228 = !DILocation(line: 780, column: 244, scope: !6688, inlinedAt: !5544)
!7229 = !DILocation(line: 780, column: 229, scope: !6688, inlinedAt: !5544)
!7230 = !DILocation(line: 780, column: 261, scope: !6688, inlinedAt: !5544)
!7231 = !DILocation(line: 780, column: 270, scope: !6688, inlinedAt: !5544)
!7232 = !DILocation(line: 780, column: 268, scope: !6688, inlinedAt: !5544)
!7233 = !DILocation(line: 780, column: 264, scope: !6688, inlinedAt: !5544)
!7234 = !DILocation(line: 780, column: 251, scope: !6688, inlinedAt: !5544)
!7235 = !DILocation(line: 780, column: 259, scope: !6688, inlinedAt: !5544)
!7236 = !DILocation(line: 780, column: 278, scope: !6688, inlinedAt: !5544)
!7237 = !DILocation(line: 780, column: 276, scope: !6688, inlinedAt: !5544)
!7238 = !DILocation(line: 780, column: 281, scope: !6688, inlinedAt: !5544)
!7239 = !DILocation(line: 780, column: 290, scope: !6702, inlinedAt: !5544)
!7240 = !DILocation(line: 780, column: 298, scope: !6702, inlinedAt: !5544)
!7241 = !DILocation(line: 781, column: 15, scope: !5462, inlinedAt: !5544)
!7242 = !DILocation(line: 781, column: 5, scope: !5462, inlinedAt: !5544)
!7243 = !DILocation(line: 781, column: 13, scope: !5462, inlinedAt: !5544)
!7244 = !DILocation(line: 1510, column: 33, scope: !5545)
!7245 = !DILocation(line: 1511, column: 21, scope: !5545)
!7246 = !DILocation(line: 1511, column: 32, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !5468, file: !1677, discriminator: 1)
!7248 = !DILocation(line: 1511, column: 35, scope: !7247)
!7249 = !DILocation(line: 1512, column: 39, scope: !5529)
!7250 = !DILocation(line: 1512, column: 45, scope: !5529)
!7251 = !DILocation(line: 1512, column: 48, scope: !5529)
!7252 = !DILocation(line: 1512, column: 25, scope: !5529)
!7253 = !DILocation(line: 778, column: 9, scope: !5490, inlinedAt: !5528)
!7254 = !DILocation(line: 778, column: 12, scope: !5490, inlinedAt: !5528)
!7255 = !DILocation(line: 778, column: 9, scope: !5462, inlinedAt: !5528)
!7256 = !DILocation(line: 778, column: 29, scope: !6511, inlinedAt: !5528)
!7257 = !DILocation(line: 778, column: 32, scope: !6511, inlinedAt: !5528)
!7258 = !DILocation(line: 778, column: 39, scope: !6511, inlinedAt: !5528)
!7259 = !DILocation(line: 778, column: 24, scope: !6511, inlinedAt: !5528)
!7260 = !DILocation(line: 778, column: 55, scope: !6511, inlinedAt: !5528)
!7261 = !DILocation(line: 778, column: 64, scope: !6511, inlinedAt: !5528)
!7262 = !DILocation(line: 778, column: 62, scope: !6511, inlinedAt: !5528)
!7263 = !DILocation(line: 778, column: 58, scope: !6511, inlinedAt: !5528)
!7264 = !DILocation(line: 778, column: 45, scope: !6511, inlinedAt: !5528)
!7265 = !DILocation(line: 778, column: 53, scope: !6511, inlinedAt: !5528)
!7266 = !DILocation(line: 778, column: 72, scope: !6511, inlinedAt: !5528)
!7267 = !DILocation(line: 778, column: 70, scope: !6511, inlinedAt: !5528)
!7268 = !DILocation(line: 778, column: 75, scope: !6511, inlinedAt: !5528)
!7269 = !DILocation(line: 778, column: 86, scope: !6525, inlinedAt: !5528)
!7270 = !DILocation(line: 778, column: 89, scope: !6525, inlinedAt: !5528)
!7271 = !DILocation(line: 778, column: 107, scope: !6528, inlinedAt: !5528)
!7272 = !DILocation(line: 778, column: 110, scope: !6528, inlinedAt: !5528)
!7273 = !DILocation(line: 778, column: 97, scope: !6528, inlinedAt: !5528)
!7274 = !DILocation(line: 778, column: 105, scope: !6528, inlinedAt: !5528)
!7275 = !DILocation(line: 778, column: 118, scope: !6528, inlinedAt: !5528)
!7276 = !DILocation(line: 778, column: 125, scope: !6528, inlinedAt: !5528)
!7277 = !DILocation(line: 778, column: 136, scope: !6536, inlinedAt: !5528)
!7278 = !DILocation(line: 778, column: 139, scope: !6536, inlinedAt: !5528)
!7279 = !DILocation(line: 778, column: 156, scope: !6539, inlinedAt: !5528)
!7280 = !DILocation(line: 778, column: 159, scope: !6539, inlinedAt: !5528)
!7281 = !DILocation(line: 778, column: 166, scope: !6539, inlinedAt: !5528)
!7282 = !DILocation(line: 778, column: 151, scope: !6539, inlinedAt: !5528)
!7283 = !DILocation(line: 778, column: 183, scope: !6539, inlinedAt: !5528)
!7284 = !DILocation(line: 778, column: 192, scope: !6539, inlinedAt: !5528)
!7285 = !DILocation(line: 778, column: 190, scope: !6539, inlinedAt: !5528)
!7286 = !DILocation(line: 778, column: 186, scope: !6539, inlinedAt: !5528)
!7287 = !DILocation(line: 778, column: 173, scope: !6539, inlinedAt: !5528)
!7288 = !DILocation(line: 778, column: 181, scope: !6539, inlinedAt: !5528)
!7289 = !DILocation(line: 778, column: 200, scope: !6539, inlinedAt: !5528)
!7290 = !DILocation(line: 778, column: 198, scope: !6539, inlinedAt: !5528)
!7291 = !DILocation(line: 778, column: 203, scope: !6539, inlinedAt: !5528)
!7292 = !DILocation(line: 778, column: 214, scope: !6553, inlinedAt: !5528)
!7293 = !DILocation(line: 778, column: 217, scope: !6553, inlinedAt: !5528)
!7294 = !DILocation(line: 778, column: 234, scope: !6556, inlinedAt: !5528)
!7295 = !DILocation(line: 778, column: 237, scope: !6556, inlinedAt: !5528)
!7296 = !DILocation(line: 778, column: 244, scope: !6556, inlinedAt: !5528)
!7297 = !DILocation(line: 778, column: 229, scope: !6556, inlinedAt: !5528)
!7298 = !DILocation(line: 778, column: 261, scope: !6556, inlinedAt: !5528)
!7299 = !DILocation(line: 778, column: 270, scope: !6556, inlinedAt: !5528)
!7300 = !DILocation(line: 778, column: 268, scope: !6556, inlinedAt: !5528)
!7301 = !DILocation(line: 778, column: 264, scope: !6556, inlinedAt: !5528)
!7302 = !DILocation(line: 778, column: 251, scope: !6556, inlinedAt: !5528)
!7303 = !DILocation(line: 778, column: 259, scope: !6556, inlinedAt: !5528)
!7304 = !DILocation(line: 778, column: 278, scope: !6556, inlinedAt: !5528)
!7305 = !DILocation(line: 778, column: 276, scope: !6556, inlinedAt: !5528)
!7306 = !DILocation(line: 778, column: 281, scope: !6556, inlinedAt: !5528)
!7307 = !DILocation(line: 778, column: 290, scope: !6570, inlinedAt: !5528)
!7308 = !DILocation(line: 778, column: 298, scope: !6570, inlinedAt: !5528)
!7309 = !DILocation(line: 779, column: 9, scope: !5503, inlinedAt: !5528)
!7310 = !DILocation(line: 779, column: 12, scope: !5503, inlinedAt: !5528)
!7311 = !DILocation(line: 779, column: 9, scope: !5462, inlinedAt: !5528)
!7312 = !DILocation(line: 779, column: 29, scope: !6577, inlinedAt: !5528)
!7313 = !DILocation(line: 779, column: 32, scope: !6577, inlinedAt: !5528)
!7314 = !DILocation(line: 779, column: 39, scope: !6577, inlinedAt: !5528)
!7315 = !DILocation(line: 779, column: 24, scope: !6577, inlinedAt: !5528)
!7316 = !DILocation(line: 779, column: 55, scope: !6577, inlinedAt: !5528)
!7317 = !DILocation(line: 779, column: 64, scope: !6577, inlinedAt: !5528)
!7318 = !DILocation(line: 779, column: 62, scope: !6577, inlinedAt: !5528)
!7319 = !DILocation(line: 779, column: 58, scope: !6577, inlinedAt: !5528)
!7320 = !DILocation(line: 779, column: 45, scope: !6577, inlinedAt: !5528)
!7321 = !DILocation(line: 779, column: 53, scope: !6577, inlinedAt: !5528)
!7322 = !DILocation(line: 779, column: 72, scope: !6577, inlinedAt: !5528)
!7323 = !DILocation(line: 779, column: 70, scope: !6577, inlinedAt: !5528)
!7324 = !DILocation(line: 779, column: 75, scope: !6577, inlinedAt: !5528)
!7325 = !DILocation(line: 779, column: 86, scope: !6591, inlinedAt: !5528)
!7326 = !DILocation(line: 779, column: 89, scope: !6591, inlinedAt: !5528)
!7327 = !DILocation(line: 779, column: 107, scope: !6594, inlinedAt: !5528)
!7328 = !DILocation(line: 779, column: 110, scope: !6594, inlinedAt: !5528)
!7329 = !DILocation(line: 779, column: 97, scope: !6594, inlinedAt: !5528)
!7330 = !DILocation(line: 779, column: 105, scope: !6594, inlinedAt: !5528)
!7331 = !DILocation(line: 779, column: 118, scope: !6594, inlinedAt: !5528)
!7332 = !DILocation(line: 779, column: 125, scope: !6594, inlinedAt: !5528)
!7333 = !DILocation(line: 779, column: 136, scope: !6602, inlinedAt: !5528)
!7334 = !DILocation(line: 779, column: 139, scope: !6602, inlinedAt: !5528)
!7335 = !DILocation(line: 779, column: 156, scope: !6605, inlinedAt: !5528)
!7336 = !DILocation(line: 779, column: 159, scope: !6605, inlinedAt: !5528)
!7337 = !DILocation(line: 779, column: 166, scope: !6605, inlinedAt: !5528)
!7338 = !DILocation(line: 779, column: 151, scope: !6605, inlinedAt: !5528)
!7339 = !DILocation(line: 779, column: 183, scope: !6605, inlinedAt: !5528)
!7340 = !DILocation(line: 779, column: 192, scope: !6605, inlinedAt: !5528)
!7341 = !DILocation(line: 779, column: 190, scope: !6605, inlinedAt: !5528)
!7342 = !DILocation(line: 779, column: 186, scope: !6605, inlinedAt: !5528)
!7343 = !DILocation(line: 779, column: 173, scope: !6605, inlinedAt: !5528)
!7344 = !DILocation(line: 779, column: 181, scope: !6605, inlinedAt: !5528)
!7345 = !DILocation(line: 779, column: 200, scope: !6605, inlinedAt: !5528)
!7346 = !DILocation(line: 779, column: 198, scope: !6605, inlinedAt: !5528)
!7347 = !DILocation(line: 779, column: 203, scope: !6605, inlinedAt: !5528)
!7348 = !DILocation(line: 779, column: 214, scope: !6619, inlinedAt: !5528)
!7349 = !DILocation(line: 779, column: 217, scope: !6619, inlinedAt: !5528)
!7350 = !DILocation(line: 779, column: 234, scope: !6622, inlinedAt: !5528)
!7351 = !DILocation(line: 779, column: 237, scope: !6622, inlinedAt: !5528)
!7352 = !DILocation(line: 779, column: 244, scope: !6622, inlinedAt: !5528)
!7353 = !DILocation(line: 779, column: 229, scope: !6622, inlinedAt: !5528)
!7354 = !DILocation(line: 779, column: 261, scope: !6622, inlinedAt: !5528)
!7355 = !DILocation(line: 779, column: 270, scope: !6622, inlinedAt: !5528)
!7356 = !DILocation(line: 779, column: 268, scope: !6622, inlinedAt: !5528)
!7357 = !DILocation(line: 779, column: 264, scope: !6622, inlinedAt: !5528)
!7358 = !DILocation(line: 779, column: 251, scope: !6622, inlinedAt: !5528)
!7359 = !DILocation(line: 779, column: 259, scope: !6622, inlinedAt: !5528)
!7360 = !DILocation(line: 779, column: 278, scope: !6622, inlinedAt: !5528)
!7361 = !DILocation(line: 779, column: 276, scope: !6622, inlinedAt: !5528)
!7362 = !DILocation(line: 779, column: 281, scope: !6622, inlinedAt: !5528)
!7363 = !DILocation(line: 779, column: 290, scope: !6636, inlinedAt: !5528)
!7364 = !DILocation(line: 779, column: 298, scope: !6636, inlinedAt: !5528)
!7365 = !DILocation(line: 780, column: 9, scope: !5516, inlinedAt: !5528)
!7366 = !DILocation(line: 780, column: 12, scope: !5516, inlinedAt: !5528)
!7367 = !DILocation(line: 780, column: 9, scope: !5462, inlinedAt: !5528)
!7368 = !DILocation(line: 780, column: 29, scope: !6643, inlinedAt: !5528)
!7369 = !DILocation(line: 780, column: 32, scope: !6643, inlinedAt: !5528)
!7370 = !DILocation(line: 780, column: 39, scope: !6643, inlinedAt: !5528)
!7371 = !DILocation(line: 780, column: 24, scope: !6643, inlinedAt: !5528)
!7372 = !DILocation(line: 780, column: 55, scope: !6643, inlinedAt: !5528)
!7373 = !DILocation(line: 780, column: 64, scope: !6643, inlinedAt: !5528)
!7374 = !DILocation(line: 780, column: 62, scope: !6643, inlinedAt: !5528)
!7375 = !DILocation(line: 780, column: 58, scope: !6643, inlinedAt: !5528)
!7376 = !DILocation(line: 780, column: 45, scope: !6643, inlinedAt: !5528)
!7377 = !DILocation(line: 780, column: 53, scope: !6643, inlinedAt: !5528)
!7378 = !DILocation(line: 780, column: 72, scope: !6643, inlinedAt: !5528)
!7379 = !DILocation(line: 780, column: 70, scope: !6643, inlinedAt: !5528)
!7380 = !DILocation(line: 780, column: 75, scope: !6643, inlinedAt: !5528)
!7381 = !DILocation(line: 780, column: 86, scope: !6657, inlinedAt: !5528)
!7382 = !DILocation(line: 780, column: 89, scope: !6657, inlinedAt: !5528)
!7383 = !DILocation(line: 780, column: 107, scope: !6660, inlinedAt: !5528)
!7384 = !DILocation(line: 780, column: 110, scope: !6660, inlinedAt: !5528)
!7385 = !DILocation(line: 780, column: 97, scope: !6660, inlinedAt: !5528)
!7386 = !DILocation(line: 780, column: 105, scope: !6660, inlinedAt: !5528)
!7387 = !DILocation(line: 780, column: 118, scope: !6660, inlinedAt: !5528)
!7388 = !DILocation(line: 780, column: 125, scope: !6660, inlinedAt: !5528)
!7389 = !DILocation(line: 780, column: 136, scope: !6668, inlinedAt: !5528)
!7390 = !DILocation(line: 780, column: 139, scope: !6668, inlinedAt: !5528)
!7391 = !DILocation(line: 780, column: 156, scope: !6671, inlinedAt: !5528)
!7392 = !DILocation(line: 780, column: 159, scope: !6671, inlinedAt: !5528)
!7393 = !DILocation(line: 780, column: 166, scope: !6671, inlinedAt: !5528)
!7394 = !DILocation(line: 780, column: 151, scope: !6671, inlinedAt: !5528)
!7395 = !DILocation(line: 780, column: 183, scope: !6671, inlinedAt: !5528)
!7396 = !DILocation(line: 780, column: 192, scope: !6671, inlinedAt: !5528)
!7397 = !DILocation(line: 780, column: 190, scope: !6671, inlinedAt: !5528)
!7398 = !DILocation(line: 780, column: 186, scope: !6671, inlinedAt: !5528)
!7399 = !DILocation(line: 780, column: 173, scope: !6671, inlinedAt: !5528)
!7400 = !DILocation(line: 780, column: 181, scope: !6671, inlinedAt: !5528)
!7401 = !DILocation(line: 780, column: 200, scope: !6671, inlinedAt: !5528)
!7402 = !DILocation(line: 780, column: 198, scope: !6671, inlinedAt: !5528)
!7403 = !DILocation(line: 780, column: 203, scope: !6671, inlinedAt: !5528)
!7404 = !DILocation(line: 780, column: 214, scope: !6685, inlinedAt: !5528)
!7405 = !DILocation(line: 780, column: 217, scope: !6685, inlinedAt: !5528)
!7406 = !DILocation(line: 780, column: 234, scope: !6688, inlinedAt: !5528)
!7407 = !DILocation(line: 780, column: 237, scope: !6688, inlinedAt: !5528)
!7408 = !DILocation(line: 780, column: 244, scope: !6688, inlinedAt: !5528)
!7409 = !DILocation(line: 780, column: 229, scope: !6688, inlinedAt: !5528)
!7410 = !DILocation(line: 780, column: 261, scope: !6688, inlinedAt: !5528)
!7411 = !DILocation(line: 780, column: 270, scope: !6688, inlinedAt: !5528)
!7412 = !DILocation(line: 780, column: 268, scope: !6688, inlinedAt: !5528)
!7413 = !DILocation(line: 780, column: 264, scope: !6688, inlinedAt: !5528)
!7414 = !DILocation(line: 780, column: 251, scope: !6688, inlinedAt: !5528)
!7415 = !DILocation(line: 780, column: 259, scope: !6688, inlinedAt: !5528)
!7416 = !DILocation(line: 780, column: 278, scope: !6688, inlinedAt: !5528)
!7417 = !DILocation(line: 780, column: 276, scope: !6688, inlinedAt: !5528)
!7418 = !DILocation(line: 780, column: 281, scope: !6688, inlinedAt: !5528)
!7419 = !DILocation(line: 780, column: 290, scope: !6702, inlinedAt: !5528)
!7420 = !DILocation(line: 780, column: 298, scope: !6702, inlinedAt: !5528)
!7421 = !DILocation(line: 781, column: 15, scope: !5462, inlinedAt: !5528)
!7422 = !DILocation(line: 781, column: 5, scope: !5462, inlinedAt: !5528)
!7423 = !DILocation(line: 781, column: 13, scope: !5462, inlinedAt: !5528)
!7424 = !DILocation(line: 1513, column: 33, scope: !5529)
!7425 = !DILocation(line: 1514, column: 21, scope: !5529)
!7426 = !DILocation(line: 1515, column: 39, scope: !5467)
!7427 = !DILocation(line: 1515, column: 45, scope: !5467)
!7428 = !DILocation(line: 1515, column: 48, scope: !5467)
!7429 = !DILocation(line: 1515, column: 25, scope: !5467)
!7430 = !DILocation(line: 778, column: 9, scope: !5490, inlinedAt: !5466)
!7431 = !DILocation(line: 778, column: 12, scope: !5490, inlinedAt: !5466)
!7432 = !DILocation(line: 778, column: 9, scope: !5462, inlinedAt: !5466)
!7433 = !DILocation(line: 778, column: 29, scope: !6511, inlinedAt: !5466)
!7434 = !DILocation(line: 778, column: 32, scope: !6511, inlinedAt: !5466)
!7435 = !DILocation(line: 778, column: 39, scope: !6511, inlinedAt: !5466)
!7436 = !DILocation(line: 778, column: 24, scope: !6511, inlinedAt: !5466)
!7437 = !DILocation(line: 778, column: 55, scope: !6511, inlinedAt: !5466)
!7438 = !DILocation(line: 778, column: 64, scope: !6511, inlinedAt: !5466)
!7439 = !DILocation(line: 778, column: 62, scope: !6511, inlinedAt: !5466)
!7440 = !DILocation(line: 778, column: 58, scope: !6511, inlinedAt: !5466)
!7441 = !DILocation(line: 778, column: 45, scope: !6511, inlinedAt: !5466)
!7442 = !DILocation(line: 778, column: 53, scope: !6511, inlinedAt: !5466)
!7443 = !DILocation(line: 778, column: 72, scope: !6511, inlinedAt: !5466)
!7444 = !DILocation(line: 778, column: 70, scope: !6511, inlinedAt: !5466)
!7445 = !DILocation(line: 778, column: 75, scope: !6511, inlinedAt: !5466)
!7446 = !DILocation(line: 778, column: 86, scope: !6525, inlinedAt: !5466)
!7447 = !DILocation(line: 778, column: 89, scope: !6525, inlinedAt: !5466)
!7448 = !DILocation(line: 778, column: 107, scope: !6528, inlinedAt: !5466)
!7449 = !DILocation(line: 778, column: 110, scope: !6528, inlinedAt: !5466)
!7450 = !DILocation(line: 778, column: 97, scope: !6528, inlinedAt: !5466)
!7451 = !DILocation(line: 778, column: 105, scope: !6528, inlinedAt: !5466)
!7452 = !DILocation(line: 778, column: 118, scope: !6528, inlinedAt: !5466)
!7453 = !DILocation(line: 778, column: 125, scope: !6528, inlinedAt: !5466)
!7454 = !DILocation(line: 778, column: 136, scope: !6536, inlinedAt: !5466)
!7455 = !DILocation(line: 778, column: 139, scope: !6536, inlinedAt: !5466)
!7456 = !DILocation(line: 778, column: 156, scope: !6539, inlinedAt: !5466)
!7457 = !DILocation(line: 778, column: 159, scope: !6539, inlinedAt: !5466)
!7458 = !DILocation(line: 778, column: 166, scope: !6539, inlinedAt: !5466)
!7459 = !DILocation(line: 778, column: 151, scope: !6539, inlinedAt: !5466)
!7460 = !DILocation(line: 778, column: 183, scope: !6539, inlinedAt: !5466)
!7461 = !DILocation(line: 778, column: 192, scope: !6539, inlinedAt: !5466)
!7462 = !DILocation(line: 778, column: 190, scope: !6539, inlinedAt: !5466)
!7463 = !DILocation(line: 778, column: 186, scope: !6539, inlinedAt: !5466)
!7464 = !DILocation(line: 778, column: 173, scope: !6539, inlinedAt: !5466)
!7465 = !DILocation(line: 778, column: 181, scope: !6539, inlinedAt: !5466)
!7466 = !DILocation(line: 778, column: 200, scope: !6539, inlinedAt: !5466)
!7467 = !DILocation(line: 778, column: 198, scope: !6539, inlinedAt: !5466)
!7468 = !DILocation(line: 778, column: 203, scope: !6539, inlinedAt: !5466)
!7469 = !DILocation(line: 778, column: 214, scope: !6553, inlinedAt: !5466)
!7470 = !DILocation(line: 778, column: 217, scope: !6553, inlinedAt: !5466)
!7471 = !DILocation(line: 778, column: 234, scope: !6556, inlinedAt: !5466)
!7472 = !DILocation(line: 778, column: 237, scope: !6556, inlinedAt: !5466)
!7473 = !DILocation(line: 778, column: 244, scope: !6556, inlinedAt: !5466)
!7474 = !DILocation(line: 778, column: 229, scope: !6556, inlinedAt: !5466)
!7475 = !DILocation(line: 778, column: 261, scope: !6556, inlinedAt: !5466)
!7476 = !DILocation(line: 778, column: 270, scope: !6556, inlinedAt: !5466)
!7477 = !DILocation(line: 778, column: 268, scope: !6556, inlinedAt: !5466)
!7478 = !DILocation(line: 778, column: 264, scope: !6556, inlinedAt: !5466)
!7479 = !DILocation(line: 778, column: 251, scope: !6556, inlinedAt: !5466)
!7480 = !DILocation(line: 778, column: 259, scope: !6556, inlinedAt: !5466)
!7481 = !DILocation(line: 778, column: 278, scope: !6556, inlinedAt: !5466)
!7482 = !DILocation(line: 778, column: 276, scope: !6556, inlinedAt: !5466)
!7483 = !DILocation(line: 778, column: 281, scope: !6556, inlinedAt: !5466)
!7484 = !DILocation(line: 778, column: 290, scope: !6570, inlinedAt: !5466)
!7485 = !DILocation(line: 778, column: 298, scope: !6570, inlinedAt: !5466)
!7486 = !DILocation(line: 779, column: 9, scope: !5503, inlinedAt: !5466)
!7487 = !DILocation(line: 779, column: 12, scope: !5503, inlinedAt: !5466)
!7488 = !DILocation(line: 779, column: 9, scope: !5462, inlinedAt: !5466)
!7489 = !DILocation(line: 779, column: 29, scope: !6577, inlinedAt: !5466)
!7490 = !DILocation(line: 779, column: 32, scope: !6577, inlinedAt: !5466)
!7491 = !DILocation(line: 779, column: 39, scope: !6577, inlinedAt: !5466)
!7492 = !DILocation(line: 779, column: 24, scope: !6577, inlinedAt: !5466)
!7493 = !DILocation(line: 779, column: 55, scope: !6577, inlinedAt: !5466)
!7494 = !DILocation(line: 779, column: 64, scope: !6577, inlinedAt: !5466)
!7495 = !DILocation(line: 779, column: 62, scope: !6577, inlinedAt: !5466)
!7496 = !DILocation(line: 779, column: 58, scope: !6577, inlinedAt: !5466)
!7497 = !DILocation(line: 779, column: 45, scope: !6577, inlinedAt: !5466)
!7498 = !DILocation(line: 779, column: 53, scope: !6577, inlinedAt: !5466)
!7499 = !DILocation(line: 779, column: 72, scope: !6577, inlinedAt: !5466)
!7500 = !DILocation(line: 779, column: 70, scope: !6577, inlinedAt: !5466)
!7501 = !DILocation(line: 779, column: 75, scope: !6577, inlinedAt: !5466)
!7502 = !DILocation(line: 779, column: 86, scope: !6591, inlinedAt: !5466)
!7503 = !DILocation(line: 779, column: 89, scope: !6591, inlinedAt: !5466)
!7504 = !DILocation(line: 779, column: 107, scope: !6594, inlinedAt: !5466)
!7505 = !DILocation(line: 779, column: 110, scope: !6594, inlinedAt: !5466)
!7506 = !DILocation(line: 779, column: 97, scope: !6594, inlinedAt: !5466)
!7507 = !DILocation(line: 779, column: 105, scope: !6594, inlinedAt: !5466)
!7508 = !DILocation(line: 779, column: 118, scope: !6594, inlinedAt: !5466)
!7509 = !DILocation(line: 779, column: 125, scope: !6594, inlinedAt: !5466)
!7510 = !DILocation(line: 779, column: 136, scope: !6602, inlinedAt: !5466)
!7511 = !DILocation(line: 779, column: 139, scope: !6602, inlinedAt: !5466)
!7512 = !DILocation(line: 779, column: 156, scope: !6605, inlinedAt: !5466)
!7513 = !DILocation(line: 779, column: 159, scope: !6605, inlinedAt: !5466)
!7514 = !DILocation(line: 779, column: 166, scope: !6605, inlinedAt: !5466)
!7515 = !DILocation(line: 779, column: 151, scope: !6605, inlinedAt: !5466)
!7516 = !DILocation(line: 779, column: 183, scope: !6605, inlinedAt: !5466)
!7517 = !DILocation(line: 779, column: 192, scope: !6605, inlinedAt: !5466)
!7518 = !DILocation(line: 779, column: 190, scope: !6605, inlinedAt: !5466)
!7519 = !DILocation(line: 779, column: 186, scope: !6605, inlinedAt: !5466)
!7520 = !DILocation(line: 779, column: 173, scope: !6605, inlinedAt: !5466)
!7521 = !DILocation(line: 779, column: 181, scope: !6605, inlinedAt: !5466)
!7522 = !DILocation(line: 779, column: 200, scope: !6605, inlinedAt: !5466)
!7523 = !DILocation(line: 779, column: 198, scope: !6605, inlinedAt: !5466)
!7524 = !DILocation(line: 779, column: 203, scope: !6605, inlinedAt: !5466)
!7525 = !DILocation(line: 779, column: 214, scope: !6619, inlinedAt: !5466)
!7526 = !DILocation(line: 779, column: 217, scope: !6619, inlinedAt: !5466)
!7527 = !DILocation(line: 779, column: 234, scope: !6622, inlinedAt: !5466)
!7528 = !DILocation(line: 779, column: 237, scope: !6622, inlinedAt: !5466)
!7529 = !DILocation(line: 779, column: 244, scope: !6622, inlinedAt: !5466)
!7530 = !DILocation(line: 779, column: 229, scope: !6622, inlinedAt: !5466)
!7531 = !DILocation(line: 779, column: 261, scope: !6622, inlinedAt: !5466)
!7532 = !DILocation(line: 779, column: 270, scope: !6622, inlinedAt: !5466)
!7533 = !DILocation(line: 779, column: 268, scope: !6622, inlinedAt: !5466)
!7534 = !DILocation(line: 779, column: 264, scope: !6622, inlinedAt: !5466)
!7535 = !DILocation(line: 779, column: 251, scope: !6622, inlinedAt: !5466)
!7536 = !DILocation(line: 779, column: 259, scope: !6622, inlinedAt: !5466)
!7537 = !DILocation(line: 779, column: 278, scope: !6622, inlinedAt: !5466)
!7538 = !DILocation(line: 779, column: 276, scope: !6622, inlinedAt: !5466)
!7539 = !DILocation(line: 779, column: 281, scope: !6622, inlinedAt: !5466)
!7540 = !DILocation(line: 779, column: 290, scope: !6636, inlinedAt: !5466)
!7541 = !DILocation(line: 779, column: 298, scope: !6636, inlinedAt: !5466)
!7542 = !DILocation(line: 780, column: 9, scope: !5516, inlinedAt: !5466)
!7543 = !DILocation(line: 780, column: 12, scope: !5516, inlinedAt: !5466)
!7544 = !DILocation(line: 780, column: 9, scope: !5462, inlinedAt: !5466)
!7545 = !DILocation(line: 780, column: 29, scope: !6643, inlinedAt: !5466)
!7546 = !DILocation(line: 780, column: 32, scope: !6643, inlinedAt: !5466)
!7547 = !DILocation(line: 780, column: 39, scope: !6643, inlinedAt: !5466)
!7548 = !DILocation(line: 780, column: 24, scope: !6643, inlinedAt: !5466)
!7549 = !DILocation(line: 780, column: 55, scope: !6643, inlinedAt: !5466)
!7550 = !DILocation(line: 780, column: 64, scope: !6643, inlinedAt: !5466)
!7551 = !DILocation(line: 780, column: 62, scope: !6643, inlinedAt: !5466)
!7552 = !DILocation(line: 780, column: 58, scope: !6643, inlinedAt: !5466)
!7553 = !DILocation(line: 780, column: 45, scope: !6643, inlinedAt: !5466)
!7554 = !DILocation(line: 780, column: 53, scope: !6643, inlinedAt: !5466)
!7555 = !DILocation(line: 780, column: 72, scope: !6643, inlinedAt: !5466)
!7556 = !DILocation(line: 780, column: 70, scope: !6643, inlinedAt: !5466)
!7557 = !DILocation(line: 780, column: 75, scope: !6643, inlinedAt: !5466)
!7558 = !DILocation(line: 780, column: 86, scope: !6657, inlinedAt: !5466)
!7559 = !DILocation(line: 780, column: 89, scope: !6657, inlinedAt: !5466)
!7560 = !DILocation(line: 780, column: 107, scope: !6660, inlinedAt: !5466)
!7561 = !DILocation(line: 780, column: 110, scope: !6660, inlinedAt: !5466)
!7562 = !DILocation(line: 780, column: 97, scope: !6660, inlinedAt: !5466)
!7563 = !DILocation(line: 780, column: 105, scope: !6660, inlinedAt: !5466)
!7564 = !DILocation(line: 780, column: 118, scope: !6660, inlinedAt: !5466)
!7565 = !DILocation(line: 780, column: 125, scope: !6660, inlinedAt: !5466)
!7566 = !DILocation(line: 780, column: 136, scope: !6668, inlinedAt: !5466)
!7567 = !DILocation(line: 780, column: 139, scope: !6668, inlinedAt: !5466)
!7568 = !DILocation(line: 780, column: 156, scope: !6671, inlinedAt: !5466)
!7569 = !DILocation(line: 780, column: 159, scope: !6671, inlinedAt: !5466)
!7570 = !DILocation(line: 780, column: 166, scope: !6671, inlinedAt: !5466)
!7571 = !DILocation(line: 780, column: 151, scope: !6671, inlinedAt: !5466)
!7572 = !DILocation(line: 780, column: 183, scope: !6671, inlinedAt: !5466)
!7573 = !DILocation(line: 780, column: 192, scope: !6671, inlinedAt: !5466)
!7574 = !DILocation(line: 780, column: 190, scope: !6671, inlinedAt: !5466)
!7575 = !DILocation(line: 780, column: 186, scope: !6671, inlinedAt: !5466)
!7576 = !DILocation(line: 780, column: 173, scope: !6671, inlinedAt: !5466)
!7577 = !DILocation(line: 780, column: 181, scope: !6671, inlinedAt: !5466)
!7578 = !DILocation(line: 780, column: 200, scope: !6671, inlinedAt: !5466)
!7579 = !DILocation(line: 780, column: 198, scope: !6671, inlinedAt: !5466)
!7580 = !DILocation(line: 780, column: 203, scope: !6671, inlinedAt: !5466)
!7581 = !DILocation(line: 780, column: 214, scope: !6685, inlinedAt: !5466)
!7582 = !DILocation(line: 780, column: 217, scope: !6685, inlinedAt: !5466)
!7583 = !DILocation(line: 780, column: 234, scope: !6688, inlinedAt: !5466)
!7584 = !DILocation(line: 780, column: 237, scope: !6688, inlinedAt: !5466)
!7585 = !DILocation(line: 780, column: 244, scope: !6688, inlinedAt: !5466)
!7586 = !DILocation(line: 780, column: 229, scope: !6688, inlinedAt: !5466)
!7587 = !DILocation(line: 780, column: 261, scope: !6688, inlinedAt: !5466)
!7588 = !DILocation(line: 780, column: 270, scope: !6688, inlinedAt: !5466)
!7589 = !DILocation(line: 780, column: 268, scope: !6688, inlinedAt: !5466)
!7590 = !DILocation(line: 780, column: 264, scope: !6688, inlinedAt: !5466)
!7591 = !DILocation(line: 780, column: 251, scope: !6688, inlinedAt: !5466)
!7592 = !DILocation(line: 780, column: 259, scope: !6688, inlinedAt: !5466)
!7593 = !DILocation(line: 780, column: 278, scope: !6688, inlinedAt: !5466)
!7594 = !DILocation(line: 780, column: 276, scope: !6688, inlinedAt: !5466)
!7595 = !DILocation(line: 780, column: 281, scope: !6688, inlinedAt: !5466)
!7596 = !DILocation(line: 780, column: 290, scope: !6702, inlinedAt: !5466)
!7597 = !DILocation(line: 780, column: 298, scope: !6702, inlinedAt: !5466)
!7598 = !DILocation(line: 781, column: 15, scope: !5462, inlinedAt: !5466)
!7599 = !DILocation(line: 781, column: 5, scope: !5462, inlinedAt: !5466)
!7600 = !DILocation(line: 781, column: 13, scope: !5462, inlinedAt: !5466)
!7601 = !DILocation(line: 1516, column: 33, scope: !5467)
!7602 = !DILocation(line: 1517, column: 25, scope: !5467)
!7603 = !DILocation(line: 1517, column: 28, scope: !5467)
!7604 = !DILocation(line: 1517, column: 36, scope: !5467)
!7605 = !DILocation(line: 1521, column: 19, scope: !5472)
!7606 = !DILocation(line: 1522, column: 24, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !5472, file: !1677, line: 1522, column: 17)
!7608 = !DILocation(line: 1522, column: 22, scope: !7607)
!7609 = !DILocation(line: 1522, column: 29, scope: !7610)
!7610 = !DILexicalBlockFile(scope: !7611, file: !1677, discriminator: 1)
!7611 = distinct !DILexicalBlock(scope: !7607, file: !1677, line: 1522, column: 17)
!7612 = !DILocation(line: 1522, column: 31, scope: !7610)
!7613 = !DILocation(line: 1522, column: 17, scope: !7610)
!7614 = !DILocation(line: 1523, column: 56, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7611, file: !1677, line: 1522, column: 41)
!7616 = !DILocation(line: 1523, column: 25, scope: !7615)
!7617 = !DILocation(line: 1523, column: 48, scope: !7615)
!7618 = !DILocation(line: 1523, column: 39, scope: !7615)
!7619 = !DILocation(line: 1523, column: 23, scope: !7615)
!7620 = !DILocation(line: 1524, column: 31, scope: !7615)
!7621 = !DILocation(line: 1524, column: 26, scope: !7615)
!7622 = !DILocation(line: 1524, column: 24, scope: !7615)
!7623 = !DILocation(line: 1525, column: 25, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7615, file: !1677, line: 1525, column: 25)
!7625 = !DILocation(line: 1525, column: 25, scope: !7615)
!7626 = !DILocation(line: 1526, column: 32, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !1677, line: 1526, column: 25)
!7628 = distinct !DILexicalBlock(scope: !7624, file: !1677, line: 1525, column: 29)
!7629 = !DILocation(line: 1526, column: 30, scope: !7627)
!7630 = !DILocation(line: 1526, column: 37, scope: !7631)
!7631 = !DILexicalBlockFile(scope: !7632, file: !1677, discriminator: 1)
!7632 = distinct !DILexicalBlock(scope: !7627, file: !1677, line: 1526, column: 25)
!7633 = !DILocation(line: 1526, column: 41, scope: !7631)
!7634 = !DILocation(line: 1526, column: 39, scope: !7631)
!7635 = !DILocation(line: 1526, column: 25, scope: !7631)
!7636 = !DILocation(line: 1527, column: 63, scope: !7632)
!7637 = !DILocation(line: 1527, column: 66, scope: !7632)
!7638 = !DILocation(line: 1527, column: 70, scope: !7632)
!7639 = !DILocation(line: 1527, column: 53, scope: !7632)
!7640 = !DILocation(line: 1527, column: 47, scope: !7632)
!7641 = !DILocation(line: 1527, column: 29, scope: !7632)
!7642 = !DILocation(line: 1527, column: 32, scope: !7632)
!7643 = !DILocation(line: 1527, column: 51, scope: !7632)
!7644 = !DILocation(line: 1526, column: 45, scope: !7645)
!7645 = !DILexicalBlockFile(scope: !7632, file: !1677, discriminator: 2)
!7646 = !DILocation(line: 1526, column: 25, scope: !7645)
!7647 = distinct !{!7647, !7648}
!7648 = !DILocation(line: 1526, column: 25, scope: !7628)
!7649 = !DILocation(line: 1528, column: 21, scope: !7628)
!7650 = !DILocation(line: 1529, column: 32, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !1677, line: 1529, column: 25)
!7652 = distinct !DILexicalBlock(scope: !7624, file: !1677, line: 1528, column: 28)
!7653 = !DILocation(line: 1529, column: 30, scope: !7651)
!7654 = !DILocation(line: 1529, column: 37, scope: !7655)
!7655 = !DILexicalBlockFile(scope: !7656, file: !1677, discriminator: 1)
!7656 = distinct !DILexicalBlock(scope: !7651, file: !1677, line: 1529, column: 25)
!7657 = !DILocation(line: 1529, column: 41, scope: !7655)
!7658 = !DILocation(line: 1529, column: 39, scope: !7655)
!7659 = !DILocation(line: 1529, column: 25, scope: !7655)
!7660 = !DILocation(line: 1530, column: 47, scope: !7656)
!7661 = !DILocation(line: 1530, column: 29, scope: !7656)
!7662 = !DILocation(line: 1530, column: 32, scope: !7656)
!7663 = !DILocation(line: 1530, column: 51, scope: !7656)
!7664 = !DILocation(line: 1529, column: 45, scope: !7665)
!7665 = !DILexicalBlockFile(scope: !7656, file: !1677, discriminator: 2)
!7666 = !DILocation(line: 1529, column: 25, scope: !7665)
!7667 = distinct !{!7667, !7668}
!7668 = !DILocation(line: 1529, column: 25, scope: !7652)
!7669 = !DILocation(line: 1532, column: 17, scope: !7615)
!7670 = !DILocation(line: 1522, column: 37, scope: !7671)
!7671 = !DILexicalBlockFile(scope: !7611, file: !1677, discriminator: 2)
!7672 = !DILocation(line: 1522, column: 17, scope: !7671)
!7673 = distinct !{!7673, !7674}
!7674 = !DILocation(line: 1522, column: 17, scope: !5472)
!7675 = !DILocation(line: 1534, column: 17, scope: !5472)
!7676 = !DILocation(line: 1534, column: 24, scope: !7677)
!7677 = !DILexicalBlockFile(scope: !7678, file: !1677, discriminator: 1)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !1677, line: 1534, column: 17)
!7679 = distinct !DILexicalBlock(scope: !5472, file: !1677, line: 1534, column: 17)
!7680 = !DILocation(line: 1534, column: 26, scope: !7677)
!7681 = !DILocation(line: 1534, column: 17, scope: !7677)
!7682 = !DILocation(line: 1535, column: 38, scope: !7678)
!7683 = !DILocation(line: 1535, column: 21, scope: !7678)
!7684 = !DILocation(line: 1535, column: 24, scope: !7678)
!7685 = !DILocation(line: 1535, column: 41, scope: !7678)
!7686 = !DILocation(line: 1534, column: 33, scope: !7687)
!7687 = !DILexicalBlockFile(scope: !7678, file: !1677, discriminator: 2)
!7688 = !DILocation(line: 1534, column: 17, scope: !7687)
!7689 = distinct !{!7689, !7675}
!7690 = !DILocation(line: 1538, column: 42, scope: !5474)
!7691 = !DILocation(line: 1538, column: 45, scope: !5474)
!7692 = !DILocation(line: 1538, column: 48, scope: !5474)
!7693 = !DILocation(line: 1538, column: 13, scope: !5474)
!7694 = !DILocation(line: 1541, column: 28, scope: !5474)
!7695 = !DILocation(line: 1541, column: 31, scope: !5474)
!7696 = !DILocation(line: 1541, column: 34, scope: !5474)
!7697 = !DILocation(line: 1541, column: 45, scope: !5474)
!7698 = !DILocation(line: 1541, column: 56, scope: !5474)
!7699 = !DILocation(line: 1541, column: 59, scope: !5474)
!7700 = !DILocation(line: 1541, column: 54, scope: !5474)
!7701 = !DILocation(line: 1541, column: 13, scope: !5474)
!7702 = !DILocation(line: 1542, column: 9, scope: !5474)
!7703 = !DILocation(line: 1428, column: 45, scope: !7704)
!7704 = !DILexicalBlockFile(scope: !5475, file: !1677, discriminator: 2)
!7705 = !DILocation(line: 1428, column: 9, scope: !7704)
!7706 = distinct !{!7706, !7707}
!7707 = !DILocation(line: 1428, column: 9, scope: !5477)
!7708 = !DILocation(line: 1544, column: 13, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !5477, file: !1677, line: 1544, column: 13)
!7710 = !DILocation(line: 1544, column: 16, scope: !7709)
!7711 = !DILocation(line: 1544, column: 21, scope: !7709)
!7712 = !DILocation(line: 1544, column: 13, scope: !5477)
!7713 = !DILocation(line: 1545, column: 28, scope: !7709)
!7714 = !DILocation(line: 1545, column: 47, scope: !7709)
!7715 = !DILocation(line: 1545, column: 32, scope: !7709)
!7716 = !DILocation(line: 1545, column: 35, scope: !7709)
!7717 = !DILocation(line: 1545, column: 68, scope: !7709)
!7718 = !DILocation(line: 1545, column: 53, scope: !7709)
!7719 = !DILocation(line: 1545, column: 56, scope: !7709)
!7720 = !DILocation(line: 1545, column: 13, scope: !7709)
!7721 = !DILocation(line: 1547, column: 17, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !5477, file: !1677, line: 1547, column: 9)
!7723 = !DILocation(line: 1547, column: 14, scope: !7722)
!7724 = !DILocation(line: 1547, column: 22, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7726, file: !1677, discriminator: 1)
!7726 = distinct !DILexicalBlock(scope: !7722, file: !1677, line: 1547, column: 9)
!7727 = !DILocation(line: 1547, column: 27, scope: !7725)
!7728 = !DILocation(line: 1547, column: 30, scope: !7725)
!7729 = !DILocation(line: 1547, column: 25, scope: !7725)
!7730 = !DILocation(line: 1547, column: 9, scope: !7725)
!7731 = !DILocation(line: 1548, column: 34, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7726, file: !1677, line: 1547, column: 49)
!7733 = !DILocation(line: 1548, column: 18, scope: !7732)
!7734 = !DILocation(line: 1548, column: 30, scope: !7732)
!7735 = !DILocation(line: 1548, column: 21, scope: !7732)
!7736 = !DILocation(line: 1548, column: 15, scope: !7732)
!7737 = !DILocation(line: 1550, column: 27, scope: !7732)
!7738 = !DILocation(line: 1550, column: 30, scope: !7732)
!7739 = !DILocation(line: 1550, column: 13, scope: !7732)
!7740 = !DILocation(line: 1551, column: 31, scope: !7732)
!7741 = !DILocation(line: 1551, column: 34, scope: !7732)
!7742 = !DILocation(line: 1551, column: 13, scope: !7732)
!7743 = !DILocation(line: 1552, column: 27, scope: !7732)
!7744 = !DILocation(line: 1552, column: 30, scope: !7732)
!7745 = !DILocation(line: 1552, column: 57, scope: !7732)
!7746 = !DILocation(line: 1552, column: 55, scope: !7732)
!7747 = !DILocation(line: 1552, column: 34, scope: !7732)
!7748 = !DILocation(line: 1552, column: 48, scope: !7732)
!7749 = !DILocation(line: 1552, column: 37, scope: !7732)
!7750 = !DILocation(line: 1552, column: 77, scope: !7732)
!7751 = !DILocation(line: 1552, column: 65, scope: !7732)
!7752 = !DILocation(line: 1552, column: 68, scope: !7732)
!7753 = !DILocation(line: 1552, column: 13, scope: !7732)
!7754 = !DILocation(line: 1553, column: 9, scope: !7732)
!7755 = !DILocation(line: 1547, column: 45, scope: !7756)
!7756 = !DILexicalBlockFile(scope: !7726, file: !1677, discriminator: 2)
!7757 = !DILocation(line: 1547, column: 9, scope: !7756)
!7758 = distinct !{!7758, !7759}
!7759 = !DILocation(line: 1547, column: 9, scope: !5477)
!7760 = !DILocation(line: 1554, column: 5, scope: !5477)
!7761 = !DILocation(line: 1427, column: 32, scope: !7762)
!7762 = !DILexicalBlockFile(scope: !5478, file: !1677, discriminator: 2)
!7763 = !DILocation(line: 1427, column: 5, scope: !7762)
!7764 = distinct !{!7764, !6181}
!7765 = !DILocation(line: 1555, column: 25, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !5460, file: !1677, line: 1555, column: 9)
!7767 = !DILocation(line: 1555, column: 28, scope: !7766)
!7768 = !DILocation(line: 1555, column: 9, scope: !7766)
!7769 = !DILocation(line: 1555, column: 32, scope: !7766)
!7770 = !DILocation(line: 1555, column: 9, scope: !5460)
!7771 = !DILocation(line: 1556, column: 25, scope: !7766)
!7772 = !DILocation(line: 1556, column: 28, scope: !7766)
!7773 = !DILocation(line: 1556, column: 49, scope: !7766)
!7774 = !DILocation(line: 1556, column: 52, scope: !7766)
!7775 = !DILocation(line: 1556, column: 33, scope: !7766)
!7776 = !DILocation(line: 1556, column: 32, scope: !7766)
!7777 = !DILocation(line: 1556, column: 9, scope: !7778)
!7778 = !DILexicalBlockFile(scope: !7766, file: !1677, discriminator: 1)
!7779 = !DILocation(line: 1556, column: 9, scope: !7766)
!7780 = !DILocation(line: 1557, column: 12, scope: !5460)
!7781 = !DILocation(line: 1557, column: 24, scope: !5460)
!7782 = !DILocation(line: 1557, column: 5, scope: !5460)
!7783 = !DILocation(line: 1558, column: 1, scope: !5460)
!7784 = distinct !DISubprogram(name: "align_get_bits", scope: !1882, file: !1882, line: 658, type: !7785, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{!1482, !4156}
!7787 = !DILocalVariable(name: "s", arg: 1, scope: !7784, file: !1882, line: 658, type: !4156)
!7788 = !DILocation(line: 658, column: 60, scope: !7784)
!7789 = !DILocalVariable(name: "n", scope: !7784, file: !1882, line: 660, type: !891)
!7790 = !DILocation(line: 660, column: 9, scope: !7784)
!7791 = !DILocation(line: 660, column: 29, scope: !7784)
!7792 = !DILocation(line: 660, column: 14, scope: !7784)
!7793 = !DILocation(line: 660, column: 13, scope: !7784)
!7794 = !DILocation(line: 660, column: 32, scope: !7784)
!7795 = !DILocation(line: 661, column: 9, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7784, file: !1882, line: 661, column: 9)
!7797 = !DILocation(line: 661, column: 9, scope: !7784)
!7798 = !DILocation(line: 662, column: 19, scope: !7796)
!7799 = !DILocation(line: 662, column: 22, scope: !7796)
!7800 = !DILocation(line: 662, column: 9, scope: !7796)
!7801 = !DILocation(line: 663, column: 12, scope: !7784)
!7802 = !DILocation(line: 663, column: 15, scope: !7784)
!7803 = !DILocation(line: 663, column: 25, scope: !7784)
!7804 = !DILocation(line: 663, column: 28, scope: !7784)
!7805 = !DILocation(line: 663, column: 34, scope: !7784)
!7806 = !DILocation(line: 663, column: 22, scope: !7784)
!7807 = !DILocation(line: 663, column: 5, scope: !7784)
!7808 = distinct !DISubprogram(name: "get_bits_left", scope: !1882, file: !1882, line: 814, type: !7809, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{!891, !4156}
!7811 = !DILocalVariable(name: "gb", arg: 1, scope: !7808, file: !1882, line: 814, type: !4156)
!7812 = !DILocation(line: 814, column: 48, scope: !7808)
!7813 = !DILocation(line: 816, column: 12, scope: !7808)
!7814 = !DILocation(line: 816, column: 16, scope: !7808)
!7815 = !DILocation(line: 816, column: 46, scope: !7808)
!7816 = !DILocation(line: 816, column: 31, scope: !7808)
!7817 = !DILocation(line: 816, column: 29, scope: !7808)
!7818 = !DILocation(line: 816, column: 5, scope: !7808)
!7819 = distinct !DISubprogram(name: "get_bits_count", scope: !1882, file: !1882, line: 219, type: !7820, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!7820 = !DISubroutineType(types: !7821)
!7821 = !{!891, !7822}
!7822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7823, size: 64, align: 64)
!7823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!7824 = !DILocalVariable(name: "s", arg: 1, scope: !7819, file: !1882, line: 219, type: !7822)
!7825 = !DILocation(line: 219, column: 55, scope: !7819)
!7826 = !DILocation(line: 224, column: 12, scope: !7819)
!7827 = !DILocation(line: 224, column: 15, scope: !7819)
!7828 = !DILocation(line: 224, column: 5, scope: !7819)
!7829 = distinct !DISubprogram(name: "get_bits", scope: !1882, file: !1882, line: 381, type: !7830, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!7830 = !DISubroutineType(types: !7831)
!7831 = !{!892, !4156, !891}
!7832 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !7833)
!7833 = distinct !DILocation(line: 401, column: 16, scope: !7829)
!7834 = !DILocalVariable(name: "s", arg: 1, scope: !7829, file: !1882, line: 381, type: !4156)
!7835 = !DILocation(line: 381, column: 52, scope: !7829)
!7836 = !DILocalVariable(name: "n", arg: 2, scope: !7829, file: !1882, line: 381, type: !891)
!7837 = !DILocation(line: 381, column: 59, scope: !7829)
!7838 = !DILocalVariable(name: "tmp", scope: !7829, file: !1882, line: 383, type: !891)
!7839 = !DILocation(line: 383, column: 18, scope: !7829)
!7840 = !DILocalVariable(name: "re_index", scope: !7829, file: !1882, line: 399, type: !892)
!7841 = !DILocation(line: 399, column: 18, scope: !7829)
!7842 = !DILocation(line: 399, column: 30, scope: !7829)
!7843 = !DILocation(line: 399, column: 34, scope: !7829)
!7844 = !DILocalVariable(name: "re_cache", scope: !7829, file: !1882, line: 399, type: !892)
!7845 = !DILocation(line: 399, column: 78, scope: !7829)
!7846 = !DILocalVariable(name: "re_size_plus8", scope: !7829, file: !1882, line: 399, type: !892)
!7847 = !DILocation(line: 399, column: 101, scope: !7829)
!7848 = !DILocation(line: 399, column: 118, scope: !7829)
!7849 = !DILocation(line: 399, column: 122, scope: !7829)
!7850 = !DILocation(line: 401, column: 60, scope: !7829)
!7851 = !DILocation(line: 401, column: 64, scope: !7829)
!7852 = !DILocation(line: 401, column: 74, scope: !7829)
!7853 = !DILocation(line: 401, column: 83, scope: !7829)
!7854 = !DILocation(line: 401, column: 71, scope: !7829)
!7855 = !DILocation(line: 401, column: 92, scope: !7829)
!7856 = !DILocation(line: 401, column: 16, scope: !7829)
!7857 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !7833)
!7858 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !7833)
!7859 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !7833)
!7860 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !7833)
!7861 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !7833)
!7862 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !7833)
!7863 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !7833)
!7864 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !7833)
!7865 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !7833)
!7866 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !7833)
!7867 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !7833)
!7868 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !7833)
!7869 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !7833)
!7870 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !7833)
!7871 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !7833)
!7872 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !7833)
!7873 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !7833)
!7874 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !7833)
!7875 = !DILocation(line: 401, column: 100, scope: !7829)
!7876 = !DILocation(line: 401, column: 109, scope: !7829)
!7877 = !DILocation(line: 401, column: 96, scope: !7829)
!7878 = !DILocation(line: 401, column: 14, scope: !7829)
!7879 = !DILocation(line: 402, column: 21, scope: !7829)
!7880 = !DILocation(line: 402, column: 31, scope: !7829)
!7881 = !DILocation(line: 402, column: 11, scope: !7829)
!7882 = !DILocation(line: 402, column: 9, scope: !7829)
!7883 = !DILocation(line: 403, column: 18, scope: !7829)
!7884 = !DILocation(line: 403, column: 36, scope: !7829)
!7885 = !DILocation(line: 403, column: 48, scope: !7829)
!7886 = !DILocation(line: 403, column: 45, scope: !7829)
!7887 = !DILocation(line: 403, column: 33, scope: !7829)
!7888 = !DILocation(line: 403, column: 17, scope: !7829)
!7889 = !DILocation(line: 403, column: 55, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7829, file: !1882, discriminator: 1)
!7891 = !DILocation(line: 403, column: 67, scope: !7890)
!7892 = !DILocation(line: 403, column: 64, scope: !7890)
!7893 = !DILocation(line: 403, column: 17, scope: !7890)
!7894 = !DILocation(line: 403, column: 74, scope: !7895)
!7895 = !DILexicalBlockFile(scope: !7829, file: !1882, discriminator: 2)
!7896 = !DILocation(line: 403, column: 17, scope: !7895)
!7897 = !DILocation(line: 403, column: 17, scope: !7898)
!7898 = !DILexicalBlockFile(scope: !7829, file: !1882, discriminator: 3)
!7899 = !DILocation(line: 403, column: 14, scope: !7898)
!7900 = !DILocation(line: 404, column: 18, scope: !7829)
!7901 = !DILocation(line: 404, column: 6, scope: !7829)
!7902 = !DILocation(line: 404, column: 10, scope: !7829)
!7903 = !DILocation(line: 404, column: 16, scope: !7829)
!7904 = !DILocation(line: 406, column: 12, scope: !7829)
!7905 = !DILocation(line: 406, column: 5, scope: !7829)
!7906 = distinct !DISubprogram(name: "l1_unscale", scope: !1677, file: !1677, line: 212, type: !5613, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!7907 = !DILocalVariable(name: "n", arg: 1, scope: !7906, file: !1677, line: 212, type: !891)
!7908 = !DILocation(line: 212, column: 34, scope: !7906)
!7909 = !DILocalVariable(name: "mant", arg: 2, scope: !7906, file: !1677, line: 212, type: !891)
!7910 = !DILocation(line: 212, column: 41, scope: !7906)
!7911 = !DILocalVariable(name: "scale_factor", arg: 3, scope: !7906, file: !1677, line: 212, type: !891)
!7912 = !DILocation(line: 212, column: 51, scope: !7906)
!7913 = !DILocalVariable(name: "shift", scope: !7906, file: !1677, line: 214, type: !891)
!7914 = !DILocation(line: 214, column: 9, scope: !7906)
!7915 = !DILocalVariable(name: "mod", scope: !7906, file: !1677, line: 214, type: !891)
!7916 = !DILocation(line: 214, column: 16, scope: !7906)
!7917 = !DILocalVariable(name: "val", scope: !7906, file: !1677, line: 215, type: !922)
!7918 = !DILocation(line: 215, column: 13, scope: !7906)
!7919 = !DILocation(line: 217, column: 35, scope: !7906)
!7920 = !DILocation(line: 217, column: 13, scope: !7906)
!7921 = !DILocation(line: 217, column: 11, scope: !7906)
!7922 = !DILocation(line: 218, column: 11, scope: !7906)
!7923 = !DILocation(line: 218, column: 17, scope: !7906)
!7924 = !DILocation(line: 218, column: 9, scope: !7906)
!7925 = !DILocation(line: 219, column: 11, scope: !7906)
!7926 = !DILocation(line: 220, column: 28, scope: !7906)
!7927 = !DILocation(line: 220, column: 43, scope: !7906)
!7928 = !DILocation(line: 220, column: 40, scope: !7906)
!7929 = !DILocation(line: 220, column: 33, scope: !7906)
!7930 = !DILocation(line: 220, column: 46, scope: !7906)
!7931 = !DILocation(line: 220, column: 12, scope: !7906)
!7932 = !DILocation(line: 220, column: 87, scope: !7906)
!7933 = !DILocation(line: 220, column: 64, scope: !7906)
!7934 = !DILocation(line: 220, column: 82, scope: !7906)
!7935 = !DILocation(line: 220, column: 83, scope: !7906)
!7936 = !DILocation(line: 220, column: 54, scope: !7906)
!7937 = !DILocation(line: 220, column: 52, scope: !7906)
!7938 = !DILocation(line: 220, column: 9, scope: !7906)
!7939 = !DILocation(line: 221, column: 14, scope: !7906)
!7940 = !DILocation(line: 221, column: 11, scope: !7906)
!7941 = !DILocation(line: 223, column: 19, scope: !7906)
!7942 = !DILocation(line: 223, column: 34, scope: !7906)
!7943 = !DILocation(line: 223, column: 40, scope: !7906)
!7944 = !DILocation(line: 223, column: 30, scope: !7906)
!7945 = !DILocation(line: 223, column: 23, scope: !7906)
!7946 = !DILocation(line: 223, column: 50, scope: !7906)
!7947 = !DILocation(line: 223, column: 47, scope: !7906)
!7948 = !DILocation(line: 223, column: 12, scope: !7906)
!7949 = !DILocation(line: 223, column: 5, scope: !7906)
!7950 = distinct !DISubprogram(name: "NEG_USR32", scope: !7951, file: !7951, line: 124, type: !7952, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!7951 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!899, !899, !1149}
!7954 = !DILocalVariable(name: "a", arg: 1, scope: !7950, file: !7951, line: 124, type: !899)
!7955 = !DILocation(line: 124, column: 43, scope: !7950)
!7956 = !DILocalVariable(name: "s", arg: 2, scope: !7950, file: !7951, line: 124, type: !1149)
!7957 = !DILocation(line: 124, column: 53, scope: !7950)
!7958 = !DILocation(line: 125, column: 5, scope: !7950)
!7959 = !DILocation(line: 127, column: 29, scope: !7950)
!7960 = !DILocation(line: 127, column: 28, scope: !7950)
!7961 = !DILocation(line: 127, column: 18, scope: !7950)
!7962 = !{i32 181467, i32 181481}
!7963 = !DILocation(line: 129, column: 12, scope: !7950)
!7964 = !DILocation(line: 129, column: 5, scope: !7950)
!7965 = distinct !DISubprogram(name: "l2_unscale_group", scope: !1677, file: !1677, line: 226, type: !5613, isLocal: true, isDefinition: true, scopeLine: 227, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!7966 = !DILocalVariable(name: "steps", arg: 1, scope: !7965, file: !1677, line: 226, type: !891)
!7967 = !DILocation(line: 226, column: 40, scope: !7965)
!7968 = !DILocalVariable(name: "mant", arg: 2, scope: !7965, file: !1677, line: 226, type: !891)
!7969 = !DILocation(line: 226, column: 51, scope: !7965)
!7970 = !DILocalVariable(name: "scale_factor", arg: 3, scope: !7965, file: !1677, line: 226, type: !891)
!7971 = !DILocation(line: 226, column: 61, scope: !7965)
!7972 = !DILocalVariable(name: "shift", scope: !7965, file: !1677, line: 228, type: !891)
!7973 = !DILocation(line: 228, column: 9, scope: !7965)
!7974 = !DILocalVariable(name: "mod", scope: !7965, file: !1677, line: 228, type: !891)
!7975 = !DILocation(line: 228, column: 16, scope: !7965)
!7976 = !DILocalVariable(name: "val", scope: !7965, file: !1677, line: 228, type: !891)
!7977 = !DILocation(line: 228, column: 21, scope: !7965)
!7978 = !DILocation(line: 230, column: 35, scope: !7965)
!7979 = !DILocation(line: 230, column: 13, scope: !7965)
!7980 = !DILocation(line: 230, column: 11, scope: !7965)
!7981 = !DILocation(line: 231, column: 11, scope: !7965)
!7982 = !DILocation(line: 231, column: 17, scope: !7965)
!7983 = !DILocation(line: 231, column: 9, scope: !7965)
!7984 = !DILocation(line: 232, column: 11, scope: !7965)
!7985 = !DILocation(line: 234, column: 12, scope: !7965)
!7986 = !DILocation(line: 234, column: 20, scope: !7965)
!7987 = !DILocation(line: 234, column: 26, scope: !7965)
!7988 = !DILocation(line: 234, column: 17, scope: !7965)
!7989 = !DILocation(line: 234, column: 66, scope: !7965)
!7990 = !DILocation(line: 234, column: 35, scope: !7965)
!7991 = !DILocation(line: 234, column: 54, scope: !7965)
!7992 = !DILocation(line: 234, column: 60, scope: !7965)
!7993 = !DILocation(line: 234, column: 33, scope: !7965)
!7994 = !DILocation(line: 234, column: 9, scope: !7965)
!7995 = !DILocation(line: 236, column: 9, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7965, file: !1677, line: 236, column: 9)
!7997 = !DILocation(line: 236, column: 15, scope: !7996)
!7998 = !DILocation(line: 236, column: 9, scope: !7965)
!7999 = !DILocation(line: 237, column: 16, scope: !7996)
!8000 = !DILocation(line: 237, column: 29, scope: !7996)
!8001 = !DILocation(line: 237, column: 35, scope: !7996)
!8002 = !DILocation(line: 237, column: 25, scope: !7996)
!8003 = !DILocation(line: 237, column: 20, scope: !7996)
!8004 = !DILocation(line: 237, column: 45, scope: !7996)
!8005 = !DILocation(line: 237, column: 42, scope: !7996)
!8006 = !DILocation(line: 237, column: 13, scope: !7996)
!8007 = !DILocation(line: 237, column: 9, scope: !7996)
!8008 = !DILocation(line: 238, column: 12, scope: !7965)
!8009 = !DILocation(line: 238, column: 5, scope: !7965)
!8010 = distinct !DISubprogram(name: "get_bits1", scope: !1882, file: !1882, line: 487, type: !8011, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8011 = !DISubroutineType(types: !8012)
!8012 = !{!892, !4156}
!8013 = !DILocalVariable(name: "s", arg: 1, scope: !8010, file: !1882, line: 487, type: !4156)
!8014 = !DILocation(line: 487, column: 53, scope: !8010)
!8015 = !DILocalVariable(name: "index", scope: !8010, file: !1882, line: 499, type: !892)
!8016 = !DILocation(line: 499, column: 18, scope: !8010)
!8017 = !DILocation(line: 499, column: 26, scope: !8010)
!8018 = !DILocation(line: 499, column: 29, scope: !8010)
!8019 = !DILocalVariable(name: "result", scope: !8010, file: !1882, line: 500, type: !920)
!8020 = !DILocation(line: 500, column: 13, scope: !8010)
!8021 = !DILocation(line: 500, column: 32, scope: !8010)
!8022 = !DILocation(line: 500, column: 38, scope: !8010)
!8023 = !DILocation(line: 500, column: 22, scope: !8010)
!8024 = !DILocation(line: 500, column: 25, scope: !8010)
!8025 = !DILocation(line: 505, column: 16, scope: !8010)
!8026 = !DILocation(line: 505, column: 22, scope: !8010)
!8027 = !DILocation(line: 505, column: 12, scope: !8010)
!8028 = !DILocation(line: 506, column: 12, scope: !8010)
!8029 = !DILocation(line: 509, column: 9, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8010, file: !1882, line: 509, column: 9)
!8031 = !DILocation(line: 509, column: 12, scope: !8030)
!8032 = !DILocation(line: 509, column: 20, scope: !8030)
!8033 = !DILocation(line: 509, column: 23, scope: !8030)
!8034 = !DILocation(line: 509, column: 18, scope: !8030)
!8035 = !DILocation(line: 509, column: 9, scope: !8010)
!8036 = !DILocation(line: 511, column: 14, scope: !8030)
!8037 = !DILocation(line: 511, column: 9, scope: !8030)
!8038 = !DILocation(line: 512, column: 16, scope: !8010)
!8039 = !DILocation(line: 512, column: 5, scope: !8010)
!8040 = !DILocation(line: 512, column: 8, scope: !8010)
!8041 = !DILocation(line: 512, column: 14, scope: !8010)
!8042 = !DILocation(line: 514, column: 12, scope: !8010)
!8043 = !DILocation(line: 514, column: 5, scope: !8010)
!8044 = distinct !DISubprogram(name: "init_short_region", scope: !1677, file: !1677, line: 157, type: !8045, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{null, !1859, !2014}
!8047 = !DILocalVariable(name: "s", arg: 1, scope: !8044, file: !1677, line: 157, type: !1859)
!8048 = !DILocation(line: 157, column: 49, scope: !8044)
!8049 = !DILocalVariable(name: "g", arg: 2, scope: !8044, file: !1677, line: 157, type: !2014)
!8050 = !DILocation(line: 157, column: 64, scope: !8044)
!8051 = !DILocation(line: 159, column: 9, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8044, file: !1677, line: 159, column: 9)
!8053 = !DILocation(line: 159, column: 12, scope: !8052)
!8054 = !DILocation(line: 159, column: 23, scope: !8052)
!8055 = !DILocation(line: 159, column: 9, scope: !8044)
!8056 = !DILocation(line: 160, column: 13, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !1677, line: 160, column: 13)
!8058 = distinct !DILexicalBlock(scope: !8052, file: !1677, line: 159, column: 29)
!8059 = !DILocation(line: 160, column: 16, scope: !8057)
!8060 = !DILocation(line: 160, column: 34, scope: !8057)
!8061 = !DILocation(line: 160, column: 13, scope: !8058)
!8062 = !DILocation(line: 161, column: 13, scope: !8057)
!8063 = !DILocation(line: 161, column: 16, scope: !8057)
!8064 = !DILocation(line: 161, column: 31, scope: !8057)
!8065 = !DILocation(line: 163, column: 13, scope: !8057)
!8066 = !DILocation(line: 163, column: 16, scope: !8057)
!8067 = !DILocation(line: 163, column: 31, scope: !8057)
!8068 = !DILocation(line: 164, column: 5, scope: !8058)
!8069 = !DILocation(line: 165, column: 13, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !1677, line: 165, column: 13)
!8071 = distinct !DILexicalBlock(scope: !8052, file: !1677, line: 164, column: 12)
!8072 = !DILocation(line: 165, column: 16, scope: !8070)
!8073 = !DILocation(line: 165, column: 34, scope: !8070)
!8074 = !DILocation(line: 165, column: 13, scope: !8071)
!8075 = !DILocation(line: 166, column: 13, scope: !8070)
!8076 = !DILocation(line: 166, column: 16, scope: !8070)
!8077 = !DILocation(line: 166, column: 31, scope: !8070)
!8078 = !DILocation(line: 167, column: 18, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8070, file: !1677, line: 167, column: 18)
!8080 = !DILocation(line: 167, column: 21, scope: !8079)
!8081 = !DILocation(line: 167, column: 39, scope: !8079)
!8082 = !DILocation(line: 167, column: 18, scope: !8070)
!8083 = !DILocation(line: 168, column: 13, scope: !8079)
!8084 = !DILocation(line: 168, column: 16, scope: !8079)
!8085 = !DILocation(line: 168, column: 31, scope: !8079)
!8086 = !DILocation(line: 170, column: 13, scope: !8079)
!8087 = !DILocation(line: 170, column: 16, scope: !8079)
!8088 = !DILocation(line: 170, column: 31, scope: !8079)
!8089 = !DILocation(line: 172, column: 5, scope: !8044)
!8090 = !DILocation(line: 172, column: 8, scope: !8044)
!8091 = !DILocation(line: 172, column: 23, scope: !8044)
!8092 = !DILocation(line: 173, column: 1, scope: !8044)
!8093 = distinct !DISubprogram(name: "init_long_region", scope: !1677, file: !1677, line: 175, type: !8094, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{null, !1859, !2014, !891, !891}
!8096 = !DILocalVariable(name: "s", arg: 1, scope: !8093, file: !1677, line: 175, type: !1859)
!8097 = !DILocation(line: 175, column: 48, scope: !8093)
!8098 = !DILocalVariable(name: "g", arg: 2, scope: !8093, file: !1677, line: 175, type: !2014)
!8099 = !DILocation(line: 175, column: 63, scope: !8093)
!8100 = !DILocalVariable(name: "ra1", arg: 3, scope: !8093, file: !1677, line: 176, type: !891)
!8101 = !DILocation(line: 176, column: 34, scope: !8093)
!8102 = !DILocalVariable(name: "ra2", arg: 4, scope: !8093, file: !1677, line: 176, type: !891)
!8103 = !DILocation(line: 176, column: 43, scope: !8093)
!8104 = !DILocalVariable(name: "l", scope: !8093, file: !1677, line: 178, type: !891)
!8105 = !DILocation(line: 178, column: 9, scope: !8093)
!8106 = !DILocation(line: 179, column: 63, scope: !8093)
!8107 = !DILocation(line: 179, column: 67, scope: !8093)
!8108 = !DILocation(line: 179, column: 25, scope: !8093)
!8109 = !DILocation(line: 179, column: 41, scope: !8093)
!8110 = !DILocation(line: 179, column: 44, scope: !8093)
!8111 = !DILocation(line: 179, column: 72, scope: !8093)
!8112 = !DILocation(line: 179, column: 5, scope: !8093)
!8113 = !DILocation(line: 179, column: 8, scope: !8093)
!8114 = !DILocation(line: 179, column: 23, scope: !8093)
!8115 = !DILocation(line: 181, column: 11, scope: !8093)
!8116 = !DILocation(line: 181, column: 17, scope: !8093)
!8117 = !DILocation(line: 181, column: 15, scope: !8093)
!8118 = !DILocation(line: 181, column: 21, scope: !8093)
!8119 = !DILocation(line: 181, column: 26, scope: !8093)
!8120 = !DILocation(line: 181, column: 10, scope: !8093)
!8121 = !DILocation(line: 181, column: 10, scope: !8122)
!8122 = !DILexicalBlockFile(scope: !8093, file: !1677, discriminator: 1)
!8123 = !DILocation(line: 181, column: 43, scope: !8124)
!8124 = !DILexicalBlockFile(scope: !8093, file: !1677, discriminator: 2)
!8125 = !DILocation(line: 181, column: 49, scope: !8124)
!8126 = !DILocation(line: 181, column: 47, scope: !8124)
!8127 = !DILocation(line: 181, column: 53, scope: !8124)
!8128 = !DILocation(line: 181, column: 10, scope: !8124)
!8129 = !DILocation(line: 181, column: 10, scope: !8130)
!8130 = !DILexicalBlockFile(scope: !8093, file: !1677, discriminator: 3)
!8131 = !DILocation(line: 181, column: 7, scope: !8130)
!8132 = !DILocation(line: 182, column: 64, scope: !8093)
!8133 = !DILocation(line: 182, column: 25, scope: !8093)
!8134 = !DILocation(line: 182, column: 41, scope: !8093)
!8135 = !DILocation(line: 182, column: 44, scope: !8093)
!8136 = !DILocation(line: 182, column: 67, scope: !8093)
!8137 = !DILocation(line: 182, column: 5, scope: !8093)
!8138 = !DILocation(line: 182, column: 8, scope: !8093)
!8139 = !DILocation(line: 182, column: 23, scope: !8093)
!8140 = !DILocation(line: 183, column: 1, scope: !8093)
!8141 = distinct !DISubprogram(name: "region_offset2size", scope: !1677, file: !1677, line: 146, type: !8142, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{null, !2014}
!8144 = !DILocalVariable(name: "g", arg: 1, scope: !8141, file: !1677, line: 146, type: !2014)
!8145 = !DILocation(line: 146, column: 44, scope: !8141)
!8146 = !DILocalVariable(name: "i", scope: !8141, file: !1677, line: 148, type: !891)
!8147 = !DILocation(line: 148, column: 9, scope: !8141)
!8148 = !DILocalVariable(name: "k", scope: !8141, file: !1677, line: 148, type: !891)
!8149 = !DILocation(line: 148, column: 12, scope: !8141)
!8150 = !DILocalVariable(name: "j", scope: !8141, file: !1677, line: 148, type: !891)
!8151 = !DILocation(line: 148, column: 15, scope: !8141)
!8152 = !DILocation(line: 149, column: 5, scope: !8141)
!8153 = !DILocation(line: 149, column: 8, scope: !8141)
!8154 = !DILocation(line: 149, column: 23, scope: !8141)
!8155 = !DILocation(line: 150, column: 12, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8141, file: !1677, line: 150, column: 5)
!8157 = !DILocation(line: 150, column: 10, scope: !8156)
!8158 = !DILocation(line: 150, column: 17, scope: !8159)
!8159 = !DILexicalBlockFile(scope: !8160, file: !1677, discriminator: 1)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !1677, line: 150, column: 5)
!8161 = !DILocation(line: 150, column: 19, scope: !8159)
!8162 = !DILocation(line: 150, column: 5, scope: !8159)
!8163 = !DILocation(line: 151, column: 30, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8160, file: !1677, line: 150, column: 29)
!8165 = !DILocation(line: 151, column: 15, scope: !8164)
!8166 = !DILocation(line: 151, column: 18, scope: !8164)
!8167 = !DILocation(line: 151, column: 37, scope: !8164)
!8168 = !DILocation(line: 151, column: 40, scope: !8164)
!8169 = !DILocation(line: 151, column: 34, scope: !8164)
!8170 = !DILocation(line: 151, column: 14, scope: !8164)
!8171 = !DILocation(line: 151, column: 55, scope: !8172)
!8172 = !DILexicalBlockFile(scope: !8164, file: !1677, discriminator: 1)
!8173 = !DILocation(line: 151, column: 58, scope: !8172)
!8174 = !DILocation(line: 151, column: 14, scope: !8172)
!8175 = !DILocation(line: 151, column: 88, scope: !8176)
!8176 = !DILexicalBlockFile(scope: !8164, file: !1677, discriminator: 2)
!8177 = !DILocation(line: 151, column: 73, scope: !8176)
!8178 = !DILocation(line: 151, column: 76, scope: !8176)
!8179 = !DILocation(line: 151, column: 14, scope: !8176)
!8180 = !DILocation(line: 151, column: 14, scope: !8181)
!8181 = !DILexicalBlockFile(scope: !8164, file: !1677, discriminator: 3)
!8182 = !DILocation(line: 151, column: 11, scope: !8181)
!8183 = !DILocation(line: 152, column: 29, scope: !8164)
!8184 = !DILocation(line: 152, column: 33, scope: !8164)
!8185 = !DILocation(line: 152, column: 31, scope: !8164)
!8186 = !DILocation(line: 152, column: 24, scope: !8164)
!8187 = !DILocation(line: 152, column: 9, scope: !8164)
!8188 = !DILocation(line: 152, column: 12, scope: !8164)
!8189 = !DILocation(line: 152, column: 27, scope: !8164)
!8190 = !DILocation(line: 153, column: 13, scope: !8164)
!8191 = !DILocation(line: 153, column: 11, scope: !8164)
!8192 = !DILocation(line: 154, column: 5, scope: !8164)
!8193 = !DILocation(line: 150, column: 25, scope: !8194)
!8194 = !DILexicalBlockFile(scope: !8160, file: !1677, discriminator: 2)
!8195 = !DILocation(line: 150, column: 5, scope: !8194)
!8196 = distinct !{!8196, !8197}
!8197 = !DILocation(line: 150, column: 5, scope: !8141)
!8198 = !DILocation(line: 155, column: 1, scope: !8141)
!8199 = distinct !DISubprogram(name: "compute_band_indexes", scope: !1677, file: !1677, line: 185, type: !8045, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8200 = !DILocalVariable(name: "s", arg: 1, scope: !8199, file: !1677, line: 185, type: !1859)
!8201 = !DILocation(line: 185, column: 52, scope: !8199)
!8202 = !DILocalVariable(name: "g", arg: 2, scope: !8199, file: !1677, line: 185, type: !2014)
!8203 = !DILocation(line: 185, column: 67, scope: !8199)
!8204 = !DILocation(line: 187, column: 9, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8199, file: !1677, line: 187, column: 9)
!8206 = !DILocation(line: 187, column: 12, scope: !8205)
!8207 = !DILocation(line: 187, column: 23, scope: !8205)
!8208 = !DILocation(line: 187, column: 9, scope: !8199)
!8209 = !DILocation(line: 188, column: 13, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !1677, line: 188, column: 13)
!8211 = distinct !DILexicalBlock(scope: !8205, file: !1677, line: 187, column: 29)
!8212 = !DILocation(line: 188, column: 16, scope: !8210)
!8213 = !DILocation(line: 188, column: 13, scope: !8211)
!8214 = !DILocation(line: 189, column: 16, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !1677, line: 189, column: 16)
!8216 = distinct !DILexicalBlock(scope: !8210, file: !1677, line: 188, column: 30)
!8217 = !DILocation(line: 189, column: 19, scope: !8215)
!8218 = !DILocation(line: 189, column: 37, scope: !8215)
!8219 = !DILocation(line: 189, column: 16, scope: !8216)
!8220 = !DILocation(line: 190, column: 39, scope: !8215)
!8221 = !DILocation(line: 190, column: 42, scope: !8215)
!8222 = !DILocation(line: 190, column: 17, scope: !8215)
!8223 = !DILocation(line: 194, column: 17, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8216, file: !1677, line: 194, column: 17)
!8225 = !DILocation(line: 194, column: 20, scope: !8224)
!8226 = !DILocation(line: 194, column: 38, scope: !8224)
!8227 = !DILocation(line: 194, column: 17, scope: !8216)
!8228 = !DILocation(line: 195, column: 17, scope: !8224)
!8229 = !DILocation(line: 195, column: 20, scope: !8224)
!8230 = !DILocation(line: 195, column: 29, scope: !8224)
!8231 = !DILocation(line: 197, column: 17, scope: !8224)
!8232 = !DILocation(line: 197, column: 20, scope: !8224)
!8233 = !DILocation(line: 197, column: 29, scope: !8224)
!8234 = !DILocation(line: 199, column: 13, scope: !8216)
!8235 = !DILocation(line: 199, column: 16, scope: !8216)
!8236 = !DILocation(line: 199, column: 28, scope: !8216)
!8237 = !DILocation(line: 200, column: 9, scope: !8216)
!8238 = !DILocation(line: 201, column: 13, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8210, file: !1677, line: 200, column: 16)
!8240 = !DILocation(line: 201, column: 16, scope: !8239)
!8241 = !DILocation(line: 201, column: 25, scope: !8239)
!8242 = !DILocation(line: 202, column: 13, scope: !8239)
!8243 = !DILocation(line: 202, column: 16, scope: !8239)
!8244 = !DILocation(line: 202, column: 28, scope: !8239)
!8245 = !DILocation(line: 204, column: 5, scope: !8211)
!8246 = !DILocation(line: 205, column: 9, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8205, file: !1677, line: 204, column: 12)
!8248 = !DILocation(line: 205, column: 12, scope: !8247)
!8249 = !DILocation(line: 205, column: 24, scope: !8247)
!8250 = !DILocation(line: 206, column: 9, scope: !8247)
!8251 = !DILocation(line: 206, column: 12, scope: !8247)
!8252 = !DILocation(line: 206, column: 21, scope: !8247)
!8253 = !DILocation(line: 208, column: 1, scope: !8199)
!8254 = distinct !DISubprogram(name: "compute_imdct", scope: !1677, file: !1677, line: 1226, type: !8255, isLocal: true, isDefinition: true, scopeLine: 1228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8255 = !DISubroutineType(types: !8256)
!8256 = !{null, !1859, !2014, !1949, !1949}
!8257 = !DILocalVariable(name: "s", arg: 1, scope: !8254, file: !1677, line: 1226, type: !1859)
!8258 = !DILocation(line: 1226, column: 45, scope: !8254)
!8259 = !DILocalVariable(name: "g", arg: 2, scope: !8254, file: !1677, line: 1226, type: !2014)
!8260 = !DILocation(line: 1226, column: 60, scope: !8254)
!8261 = !DILocalVariable(name: "sb_samples", arg: 3, scope: !8254, file: !1677, line: 1227, type: !1949)
!8262 = !DILocation(line: 1227, column: 34, scope: !8254)
!8263 = !DILocalVariable(name: "mdct_buf", arg: 4, scope: !8254, file: !1677, line: 1227, type: !1949)
!8264 = !DILocation(line: 1227, column: 53, scope: !8254)
!8265 = !DILocalVariable(name: "win", scope: !8254, file: !1677, line: 1229, type: !1949)
!8266 = !DILocation(line: 1229, column: 12, scope: !8254)
!8267 = !DILocalVariable(name: "out_ptr", scope: !8254, file: !1677, line: 1229, type: !1949)
!8268 = !DILocation(line: 1229, column: 18, scope: !8254)
!8269 = !DILocalVariable(name: "ptr", scope: !8254, file: !1677, line: 1229, type: !1949)
!8270 = !DILocation(line: 1229, column: 28, scope: !8254)
!8271 = !DILocalVariable(name: "buf", scope: !8254, file: !1677, line: 1229, type: !1949)
!8272 = !DILocation(line: 1229, column: 34, scope: !8254)
!8273 = !DILocalVariable(name: "ptr1", scope: !8254, file: !1677, line: 1229, type: !1949)
!8274 = !DILocation(line: 1229, column: 40, scope: !8254)
!8275 = !DILocalVariable(name: "out2", scope: !8254, file: !1677, line: 1230, type: !8276)
!8276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 384, align: 32, elements: !8277)
!8277 = !{!8278}
!8278 = !DISubrange(count: 12)
!8279 = !DILocation(line: 1230, column: 11, scope: !8254)
!8280 = !DILocalVariable(name: "i", scope: !8254, file: !1677, line: 1231, type: !891)
!8281 = !DILocation(line: 1231, column: 9, scope: !8254)
!8282 = !DILocalVariable(name: "j", scope: !8254, file: !1677, line: 1231, type: !891)
!8283 = !DILocation(line: 1231, column: 12, scope: !8254)
!8284 = !DILocalVariable(name: "mdct_long_end", scope: !8254, file: !1677, line: 1231, type: !891)
!8285 = !DILocation(line: 1231, column: 15, scope: !8254)
!8286 = !DILocalVariable(name: "sblimit", scope: !8254, file: !1677, line: 1231, type: !891)
!8287 = !DILocation(line: 1231, column: 30, scope: !8254)
!8288 = !DILocation(line: 1234, column: 11, scope: !8254)
!8289 = !DILocation(line: 1234, column: 14, scope: !8254)
!8290 = !DILocation(line: 1234, column: 24, scope: !8254)
!8291 = !DILocation(line: 1234, column: 9, scope: !8254)
!8292 = !DILocation(line: 1235, column: 12, scope: !8254)
!8293 = !DILocation(line: 1235, column: 15, scope: !8254)
!8294 = !DILocation(line: 1235, column: 25, scope: !8254)
!8295 = !DILocation(line: 1235, column: 10, scope: !8254)
!8296 = !DILocation(line: 1236, column: 5, scope: !8254)
!8297 = !DILocation(line: 1236, column: 12, scope: !8298)
!8298 = !DILexicalBlockFile(scope: !8254, file: !1677, discriminator: 1)
!8299 = !DILocation(line: 1236, column: 19, scope: !8298)
!8300 = !DILocation(line: 1236, column: 16, scope: !8298)
!8301 = !DILocation(line: 1236, column: 5, scope: !8298)
!8302 = !DILocalVariable(name: "p", scope: !8303, file: !1677, line: 1237, type: !924)
!8303 = distinct !DILexicalBlock(scope: !8254, file: !1677, line: 1236, column: 25)
!8304 = !DILocation(line: 1237, column: 18, scope: !8303)
!8305 = !DILocation(line: 1238, column: 13, scope: !8303)
!8306 = !DILocation(line: 1239, column: 23, scope: !8303)
!8307 = !DILocation(line: 1239, column: 13, scope: !8303)
!8308 = !DILocation(line: 1239, column: 11, scope: !8303)
!8309 = !DILocation(line: 1240, column: 13, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8303, file: !1677, line: 1240, column: 13)
!8311 = !DILocation(line: 1240, column: 20, scope: !8310)
!8312 = !DILocation(line: 1240, column: 18, scope: !8310)
!8313 = !DILocation(line: 1240, column: 27, scope: !8310)
!8314 = !DILocation(line: 1240, column: 25, scope: !8310)
!8315 = !DILocation(line: 1240, column: 34, scope: !8310)
!8316 = !DILocation(line: 1240, column: 32, scope: !8310)
!8317 = !DILocation(line: 1240, column: 41, scope: !8310)
!8318 = !DILocation(line: 1240, column: 39, scope: !8310)
!8319 = !DILocation(line: 1240, column: 48, scope: !8310)
!8320 = !DILocation(line: 1240, column: 46, scope: !8310)
!8321 = !DILocation(line: 1240, column: 13, scope: !8303)
!8322 = !DILocation(line: 1241, column: 13, scope: !8310)
!8323 = !DILocation(line: 1236, column: 5, scope: !8324)
!8324 = !DILexicalBlockFile(scope: !8254, file: !1677, discriminator: 2)
!8325 = distinct !{!8325, !8296}
!8326 = !DILocation(line: 1243, column: 17, scope: !8254)
!8327 = !DILocation(line: 1243, column: 23, scope: !8254)
!8328 = !DILocation(line: 1243, column: 26, scope: !8254)
!8329 = !DILocation(line: 1243, column: 21, scope: !8254)
!8330 = !DILocation(line: 1243, column: 37, scope: !8254)
!8331 = !DILocation(line: 1243, column: 43, scope: !8254)
!8332 = !DILocation(line: 1243, column: 15, scope: !8254)
!8333 = !DILocation(line: 1243, column: 13, scope: !8254)
!8334 = !DILocation(line: 1245, column: 9, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8254, file: !1677, line: 1245, column: 9)
!8336 = !DILocation(line: 1245, column: 12, scope: !8335)
!8337 = !DILocation(line: 1245, column: 23, scope: !8335)
!8338 = !DILocation(line: 1245, column: 9, scope: !8254)
!8339 = !DILocation(line: 1247, column: 13, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !1677, line: 1247, column: 13)
!8341 = distinct !DILexicalBlock(scope: !8335, file: !1677, line: 1245, column: 29)
!8342 = !DILocation(line: 1247, column: 16, scope: !8340)
!8343 = !DILocation(line: 1247, column: 13, scope: !8341)
!8344 = !DILocation(line: 1248, column: 27, scope: !8340)
!8345 = !DILocation(line: 1248, column: 13, scope: !8340)
!8346 = !DILocation(line: 1250, column: 27, scope: !8340)
!8347 = !DILocation(line: 1251, column: 5, scope: !8341)
!8348 = !DILocation(line: 1252, column: 25, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8335, file: !1677, line: 1251, column: 12)
!8350 = !DILocation(line: 1252, column: 23, scope: !8349)
!8351 = !DILocation(line: 1255, column: 5, scope: !8254)
!8352 = !DILocation(line: 1255, column: 8, scope: !8254)
!8353 = !DILocation(line: 1255, column: 15, scope: !8254)
!8354 = !DILocation(line: 1255, column: 36, scope: !8254)
!8355 = !DILocation(line: 1255, column: 48, scope: !8254)
!8356 = !DILocation(line: 1255, column: 58, scope: !8254)
!8357 = !DILocation(line: 1255, column: 61, scope: !8254)
!8358 = !DILocation(line: 1256, column: 38, scope: !8254)
!8359 = !DILocation(line: 1256, column: 53, scope: !8254)
!8360 = !DILocation(line: 1256, column: 56, scope: !8254)
!8361 = !DILocation(line: 1257, column: 38, scope: !8254)
!8362 = !DILocation(line: 1257, column: 41, scope: !8254)
!8363 = !DILocation(line: 1259, column: 11, scope: !8254)
!8364 = !DILocation(line: 1259, column: 28, scope: !8254)
!8365 = !DILocation(line: 1259, column: 42, scope: !8254)
!8366 = !DILocation(line: 1259, column: 26, scope: !8254)
!8367 = !DILocation(line: 1259, column: 20, scope: !8254)
!8368 = !DILocation(line: 1259, column: 51, scope: !8254)
!8369 = !DILocation(line: 1259, column: 65, scope: !8254)
!8370 = !DILocation(line: 1259, column: 48, scope: !8254)
!8371 = !DILocation(line: 1259, column: 9, scope: !8254)
!8372 = !DILocation(line: 1260, column: 11, scope: !8254)
!8373 = !DILocation(line: 1260, column: 14, scope: !8254)
!8374 = !DILocation(line: 1260, column: 31, scope: !8254)
!8375 = !DILocation(line: 1260, column: 29, scope: !8254)
!8376 = !DILocation(line: 1260, column: 24, scope: !8254)
!8377 = !DILocation(line: 1260, column: 9, scope: !8254)
!8378 = !DILocation(line: 1262, column: 14, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8254, file: !1677, line: 1262, column: 5)
!8380 = !DILocation(line: 1262, column: 12, scope: !8379)
!8381 = !DILocation(line: 1262, column: 10, scope: !8379)
!8382 = !DILocation(line: 1262, column: 29, scope: !8383)
!8383 = !DILexicalBlockFile(scope: !8384, file: !1677, discriminator: 1)
!8384 = distinct !DILexicalBlock(scope: !8379, file: !1677, line: 1262, column: 5)
!8385 = !DILocation(line: 1262, column: 33, scope: !8383)
!8386 = !DILocation(line: 1262, column: 31, scope: !8383)
!8387 = !DILocation(line: 1262, column: 5, scope: !8383)
!8388 = !DILocation(line: 1264, column: 44, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8384, file: !1677, line: 1262, column: 47)
!8390 = !DILocation(line: 1264, column: 46, scope: !8389)
!8391 = !DILocation(line: 1264, column: 42, scope: !8389)
!8392 = !DILocation(line: 1264, column: 40, scope: !8389)
!8393 = !DILocation(line: 1264, column: 35, scope: !8389)
!8394 = !DILocation(line: 1264, column: 15, scope: !8389)
!8395 = !DILocation(line: 1264, column: 13, scope: !8389)
!8396 = !DILocation(line: 1265, column: 19, scope: !8389)
!8397 = !DILocation(line: 1265, column: 32, scope: !8389)
!8398 = !DILocation(line: 1265, column: 30, scope: !8389)
!8399 = !DILocation(line: 1265, column: 17, scope: !8389)
!8400 = !DILocation(line: 1267, column: 16, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8389, file: !1677, line: 1267, column: 9)
!8402 = !DILocation(line: 1267, column: 14, scope: !8401)
!8403 = !DILocation(line: 1267, column: 21, scope: !8404)
!8404 = !DILexicalBlockFile(scope: !8405, file: !1677, discriminator: 1)
!8405 = distinct !DILexicalBlock(scope: !8401, file: !1677, line: 1267, column: 9)
!8406 = !DILocation(line: 1267, column: 23, scope: !8404)
!8407 = !DILocation(line: 1267, column: 9, scope: !8404)
!8408 = !DILocation(line: 1268, column: 30, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8405, file: !1677, line: 1267, column: 33)
!8410 = !DILocation(line: 1268, column: 29, scope: !8409)
!8411 = !DILocation(line: 1268, column: 24, scope: !8409)
!8412 = !DILocation(line: 1268, column: 14, scope: !8409)
!8413 = !DILocation(line: 1268, column: 22, scope: !8409)
!8414 = !DILocation(line: 1269, column: 21, scope: !8409)
!8415 = !DILocation(line: 1270, column: 9, scope: !8409)
!8416 = !DILocation(line: 1267, column: 29, scope: !8417)
!8417 = !DILexicalBlockFile(scope: !8405, file: !1677, discriminator: 2)
!8418 = !DILocation(line: 1267, column: 9, scope: !8417)
!8419 = distinct !{!8419, !8420}
!8420 = !DILocation(line: 1267, column: 9, scope: !8389)
!8421 = !DILocation(line: 1271, column: 17, scope: !8389)
!8422 = !DILocation(line: 1271, column: 23, scope: !8389)
!8423 = !DILocation(line: 1271, column: 27, scope: !8389)
!8424 = !DILocation(line: 1271, column: 9, scope: !8389)
!8425 = !DILocation(line: 1272, column: 16, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8389, file: !1677, line: 1272, column: 9)
!8427 = !DILocation(line: 1272, column: 14, scope: !8426)
!8428 = !DILocation(line: 1272, column: 21, scope: !8429)
!8429 = !DILexicalBlockFile(scope: !8430, file: !1677, discriminator: 1)
!8430 = distinct !DILexicalBlock(scope: !8426, file: !1677, line: 1272, column: 9)
!8431 = !DILocation(line: 1272, column: 23, scope: !8429)
!8432 = !DILocation(line: 1272, column: 9, scope: !8429)
!8433 = !DILocation(line: 1273, column: 34, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8430, file: !1677, line: 1272, column: 33)
!8435 = !DILocation(line: 1273, column: 30, scope: !8434)
!8436 = !DILocation(line: 1273, column: 28, scope: !8434)
!8437 = !DILocation(line: 1273, column: 45, scope: !8434)
!8438 = !DILocation(line: 1273, column: 40, scope: !8434)
!8439 = !DILocation(line: 1273, column: 38, scope: !8434)
!8440 = !DILocation(line: 1273, column: 60, scope: !8434)
!8441 = !DILocation(line: 1273, column: 62, scope: !8434)
!8442 = !DILocation(line: 1273, column: 58, scope: !8434)
!8443 = !DILocation(line: 1273, column: 53, scope: !8434)
!8444 = !DILocation(line: 1273, column: 51, scope: !8434)
!8445 = !DILocation(line: 1273, column: 14, scope: !8434)
!8446 = !DILocation(line: 1273, column: 22, scope: !8434)
!8447 = !DILocation(line: 1274, column: 42, scope: !8434)
!8448 = !DILocation(line: 1274, column: 44, scope: !8434)
!8449 = !DILocation(line: 1274, column: 38, scope: !8434)
!8450 = !DILocation(line: 1274, column: 36, scope: !8434)
!8451 = !DILocation(line: 1274, column: 56, scope: !8434)
!8452 = !DILocation(line: 1274, column: 58, scope: !8434)
!8453 = !DILocation(line: 1274, column: 51, scope: !8434)
!8454 = !DILocation(line: 1274, column: 49, scope: !8434)
!8455 = !DILocation(line: 1274, column: 20, scope: !8434)
!8456 = !DILocation(line: 1274, column: 22, scope: !8434)
!8457 = !DILocation(line: 1274, column: 18, scope: !8434)
!8458 = !DILocation(line: 1274, column: 13, scope: !8434)
!8459 = !DILocation(line: 1274, column: 30, scope: !8434)
!8460 = !DILocation(line: 1275, column: 21, scope: !8434)
!8461 = !DILocation(line: 1276, column: 9, scope: !8434)
!8462 = !DILocation(line: 1272, column: 29, scope: !8463)
!8463 = !DILexicalBlockFile(scope: !8430, file: !1677, discriminator: 2)
!8464 = !DILocation(line: 1272, column: 9, scope: !8463)
!8465 = distinct !{!8465, !8466}
!8466 = !DILocation(line: 1272, column: 9, scope: !8389)
!8467 = !DILocation(line: 1277, column: 17, scope: !8389)
!8468 = !DILocation(line: 1277, column: 23, scope: !8389)
!8469 = !DILocation(line: 1277, column: 27, scope: !8389)
!8470 = !DILocation(line: 1277, column: 9, scope: !8389)
!8471 = !DILocation(line: 1278, column: 16, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8389, file: !1677, line: 1278, column: 9)
!8473 = !DILocation(line: 1278, column: 14, scope: !8472)
!8474 = !DILocation(line: 1278, column: 21, scope: !8475)
!8475 = !DILexicalBlockFile(scope: !8476, file: !1677, discriminator: 1)
!8476 = distinct !DILexicalBlock(scope: !8472, file: !1677, line: 1278, column: 9)
!8477 = !DILocation(line: 1278, column: 23, scope: !8475)
!8478 = !DILocation(line: 1278, column: 9, scope: !8475)
!8479 = !DILocation(line: 1279, column: 34, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8476, file: !1677, line: 1278, column: 33)
!8481 = !DILocation(line: 1279, column: 30, scope: !8480)
!8482 = !DILocation(line: 1279, column: 28, scope: !8480)
!8483 = !DILocation(line: 1279, column: 45, scope: !8480)
!8484 = !DILocation(line: 1279, column: 40, scope: !8480)
!8485 = !DILocation(line: 1279, column: 38, scope: !8480)
!8486 = !DILocation(line: 1279, column: 60, scope: !8480)
!8487 = !DILocation(line: 1279, column: 62, scope: !8480)
!8488 = !DILocation(line: 1279, column: 58, scope: !8480)
!8489 = !DILocation(line: 1279, column: 53, scope: !8480)
!8490 = !DILocation(line: 1279, column: 51, scope: !8480)
!8491 = !DILocation(line: 1279, column: 14, scope: !8480)
!8492 = !DILocation(line: 1279, column: 22, scope: !8480)
!8493 = !DILocation(line: 1280, column: 42, scope: !8480)
!8494 = !DILocation(line: 1280, column: 44, scope: !8480)
!8495 = !DILocation(line: 1280, column: 38, scope: !8480)
!8496 = !DILocation(line: 1280, column: 36, scope: !8480)
!8497 = !DILocation(line: 1280, column: 56, scope: !8480)
!8498 = !DILocation(line: 1280, column: 58, scope: !8480)
!8499 = !DILocation(line: 1280, column: 51, scope: !8480)
!8500 = !DILocation(line: 1280, column: 49, scope: !8480)
!8501 = !DILocation(line: 1280, column: 20, scope: !8480)
!8502 = !DILocation(line: 1280, column: 22, scope: !8480)
!8503 = !DILocation(line: 1280, column: 18, scope: !8480)
!8504 = !DILocation(line: 1280, column: 13, scope: !8480)
!8505 = !DILocation(line: 1280, column: 30, scope: !8480)
!8506 = !DILocation(line: 1281, column: 21, scope: !8480)
!8507 = !DILocation(line: 1282, column: 9, scope: !8480)
!8508 = !DILocation(line: 1278, column: 29, scope: !8509)
!8509 = !DILexicalBlockFile(scope: !8476, file: !1677, discriminator: 2)
!8510 = !DILocation(line: 1278, column: 9, scope: !8509)
!8511 = distinct !{!8511, !8512}
!8512 = !DILocation(line: 1278, column: 9, scope: !8389)
!8513 = !DILocation(line: 1283, column: 17, scope: !8389)
!8514 = !DILocation(line: 1283, column: 23, scope: !8389)
!8515 = !DILocation(line: 1283, column: 27, scope: !8389)
!8516 = !DILocation(line: 1283, column: 9, scope: !8389)
!8517 = !DILocation(line: 1284, column: 16, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8389, file: !1677, line: 1284, column: 9)
!8519 = !DILocation(line: 1284, column: 14, scope: !8518)
!8520 = !DILocation(line: 1284, column: 21, scope: !8521)
!8521 = !DILexicalBlockFile(scope: !8522, file: !1677, discriminator: 1)
!8522 = distinct !DILexicalBlock(scope: !8518, file: !1677, line: 1284, column: 9)
!8523 = !DILocation(line: 1284, column: 23, scope: !8521)
!8524 = !DILocation(line: 1284, column: 9, scope: !8521)
!8525 = !DILocation(line: 1285, column: 42, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8522, file: !1677, line: 1284, column: 33)
!8527 = !DILocation(line: 1285, column: 38, scope: !8526)
!8528 = !DILocation(line: 1285, column: 36, scope: !8526)
!8529 = !DILocation(line: 1285, column: 53, scope: !8526)
!8530 = !DILocation(line: 1285, column: 48, scope: !8526)
!8531 = !DILocation(line: 1285, column: 46, scope: !8526)
!8532 = !DILocation(line: 1285, column: 68, scope: !8526)
!8533 = !DILocation(line: 1285, column: 70, scope: !8526)
!8534 = !DILocation(line: 1285, column: 66, scope: !8526)
!8535 = !DILocation(line: 1285, column: 61, scope: !8526)
!8536 = !DILocation(line: 1285, column: 59, scope: !8526)
!8537 = !DILocation(line: 1285, column: 20, scope: !8526)
!8538 = !DILocation(line: 1285, column: 22, scope: !8526)
!8539 = !DILocation(line: 1285, column: 18, scope: !8526)
!8540 = !DILocation(line: 1285, column: 13, scope: !8526)
!8541 = !DILocation(line: 1285, column: 30, scope: !8526)
!8542 = !DILocation(line: 1286, column: 42, scope: !8526)
!8543 = !DILocation(line: 1286, column: 44, scope: !8526)
!8544 = !DILocation(line: 1286, column: 38, scope: !8526)
!8545 = !DILocation(line: 1286, column: 36, scope: !8526)
!8546 = !DILocation(line: 1286, column: 56, scope: !8526)
!8547 = !DILocation(line: 1286, column: 58, scope: !8526)
!8548 = !DILocation(line: 1286, column: 51, scope: !8526)
!8549 = !DILocation(line: 1286, column: 49, scope: !8526)
!8550 = !DILocation(line: 1286, column: 20, scope: !8526)
!8551 = !DILocation(line: 1286, column: 22, scope: !8526)
!8552 = !DILocation(line: 1286, column: 18, scope: !8526)
!8553 = !DILocation(line: 1286, column: 13, scope: !8526)
!8554 = !DILocation(line: 1286, column: 30, scope: !8526)
!8555 = !DILocation(line: 1287, column: 20, scope: !8526)
!8556 = !DILocation(line: 1287, column: 22, scope: !8526)
!8557 = !DILocation(line: 1287, column: 18, scope: !8526)
!8558 = !DILocation(line: 1287, column: 13, scope: !8526)
!8559 = !DILocation(line: 1287, column: 30, scope: !8526)
!8560 = !DILocation(line: 1288, column: 9, scope: !8526)
!8561 = !DILocation(line: 1284, column: 29, scope: !8562)
!8562 = !DILexicalBlockFile(scope: !8522, file: !1677, discriminator: 2)
!8563 = !DILocation(line: 1284, column: 9, scope: !8562)
!8564 = distinct !{!8564, !8565}
!8565 = !DILocation(line: 1284, column: 9, scope: !8389)
!8566 = !DILocation(line: 1289, column: 13, scope: !8389)
!8567 = !DILocation(line: 1290, column: 17, scope: !8389)
!8568 = !DILocation(line: 1290, column: 18, scope: !8389)
!8569 = !DILocation(line: 1290, column: 22, scope: !8389)
!8570 = !DILocation(line: 1290, column: 16, scope: !8389)
!8571 = !DILocation(line: 1290, column: 13, scope: !8389)
!8572 = !DILocation(line: 1291, column: 5, scope: !8389)
!8573 = !DILocation(line: 1262, column: 43, scope: !8574)
!8574 = !DILexicalBlockFile(scope: !8384, file: !1677, discriminator: 2)
!8575 = !DILocation(line: 1262, column: 5, scope: !8574)
!8576 = distinct !{!8576, !8577}
!8577 = !DILocation(line: 1262, column: 5, scope: !8254)
!8578 = !DILocation(line: 1293, column: 14, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8254, file: !1677, line: 1293, column: 5)
!8580 = !DILocation(line: 1293, column: 12, scope: !8579)
!8581 = !DILocation(line: 1293, column: 10, scope: !8579)
!8582 = !DILocation(line: 1293, column: 23, scope: !8583)
!8583 = !DILexicalBlockFile(scope: !8584, file: !1677, discriminator: 1)
!8584 = distinct !DILexicalBlock(scope: !8579, file: !1677, line: 1293, column: 5)
!8585 = !DILocation(line: 1293, column: 25, scope: !8583)
!8586 = !DILocation(line: 1293, column: 5, scope: !8583)
!8587 = !DILocation(line: 1295, column: 19, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8584, file: !1677, line: 1293, column: 36)
!8589 = !DILocation(line: 1295, column: 32, scope: !8588)
!8590 = !DILocation(line: 1295, column: 30, scope: !8588)
!8591 = !DILocation(line: 1295, column: 17, scope: !8588)
!8592 = !DILocation(line: 1296, column: 16, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8588, file: !1677, line: 1296, column: 9)
!8594 = !DILocation(line: 1296, column: 14, scope: !8593)
!8595 = !DILocation(line: 1296, column: 21, scope: !8596)
!8596 = !DILexicalBlockFile(scope: !8597, file: !1677, discriminator: 1)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !1677, line: 1296, column: 9)
!8598 = !DILocation(line: 1296, column: 23, scope: !8596)
!8599 = !DILocation(line: 1296, column: 9, scope: !8596)
!8600 = !DILocation(line: 1297, column: 30, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8597, file: !1677, line: 1296, column: 34)
!8602 = !DILocation(line: 1297, column: 29, scope: !8601)
!8603 = !DILocation(line: 1297, column: 24, scope: !8601)
!8604 = !DILocation(line: 1297, column: 14, scope: !8601)
!8605 = !DILocation(line: 1297, column: 22, scope: !8601)
!8606 = !DILocation(line: 1298, column: 19, scope: !8601)
!8607 = !DILocation(line: 1298, column: 18, scope: !8601)
!8608 = !DILocation(line: 1298, column: 13, scope: !8601)
!8609 = !DILocation(line: 1298, column: 22, scope: !8601)
!8610 = !DILocation(line: 1299, column: 21, scope: !8601)
!8611 = !DILocation(line: 1300, column: 9, scope: !8601)
!8612 = !DILocation(line: 1296, column: 30, scope: !8613)
!8613 = !DILexicalBlockFile(scope: !8597, file: !1677, discriminator: 2)
!8614 = !DILocation(line: 1296, column: 9, scope: !8613)
!8615 = distinct !{!8615, !8616}
!8616 = !DILocation(line: 1296, column: 9, scope: !8588)
!8617 = !DILocation(line: 1301, column: 17, scope: !8588)
!8618 = !DILocation(line: 1301, column: 18, scope: !8588)
!8619 = !DILocation(line: 1301, column: 22, scope: !8588)
!8620 = !DILocation(line: 1301, column: 16, scope: !8588)
!8621 = !DILocation(line: 1301, column: 13, scope: !8588)
!8622 = !DILocation(line: 1302, column: 5, scope: !8588)
!8623 = !DILocation(line: 1293, column: 32, scope: !8624)
!8624 = !DILexicalBlockFile(scope: !8584, file: !1677, discriminator: 2)
!8625 = !DILocation(line: 1293, column: 5, scope: !8624)
!8626 = distinct !{!8626, !8627}
!8627 = !DILocation(line: 1293, column: 5, scope: !8254)
!8628 = !DILocation(line: 1303, column: 1, scope: !8254)
!8629 = distinct !DISubprogram(name: "skip_bits_long", scope: !1882, file: !1882, line: 293, type: !4212, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8630 = !DILocation(line: 127, column: 87, scope: !5611, inlinedAt: !8631)
!8631 = distinct !DILocation(line: 301, column: 17, scope: !8629)
!8632 = !DILocation(line: 127, column: 94, scope: !5611, inlinedAt: !8631)
!8633 = !DILocation(line: 127, column: 104, scope: !5611, inlinedAt: !8631)
!8634 = !DILocalVariable(name: "s", arg: 1, scope: !8629, file: !1882, line: 293, type: !4156)
!8635 = !DILocation(line: 293, column: 50, scope: !8629)
!8636 = !DILocalVariable(name: "n", arg: 2, scope: !8629, file: !1882, line: 293, type: !891)
!8637 = !DILocation(line: 293, column: 57, scope: !8629)
!8638 = !DILocation(line: 301, column: 27, scope: !8629)
!8639 = !DILocation(line: 301, column: 31, scope: !8629)
!8640 = !DILocation(line: 301, column: 34, scope: !8629)
!8641 = !DILocation(line: 301, column: 30, scope: !8629)
!8642 = !DILocation(line: 301, column: 41, scope: !8629)
!8643 = !DILocation(line: 301, column: 44, scope: !8629)
!8644 = !DILocation(line: 301, column: 65, scope: !8629)
!8645 = !DILocation(line: 301, column: 68, scope: !8629)
!8646 = !DILocation(line: 301, column: 63, scope: !8629)
!8647 = !DILocation(line: 301, column: 17, scope: !8629)
!8648 = !DILocation(line: 132, column: 9, scope: !6005, inlinedAt: !8631)
!8649 = !DILocation(line: 132, column: 13, scope: !6005, inlinedAt: !8631)
!8650 = !DILocation(line: 132, column: 11, scope: !6005, inlinedAt: !8631)
!8651 = !DILocation(line: 132, column: 9, scope: !5611, inlinedAt: !8631)
!8652 = !DILocation(line: 132, column: 26, scope: !6010, inlinedAt: !8631)
!8653 = !DILocation(line: 132, column: 19, scope: !6010, inlinedAt: !8631)
!8654 = !DILocation(line: 133, column: 14, scope: !6013, inlinedAt: !8631)
!8655 = !DILocation(line: 133, column: 18, scope: !6013, inlinedAt: !8631)
!8656 = !DILocation(line: 133, column: 16, scope: !6013, inlinedAt: !8631)
!8657 = !DILocation(line: 133, column: 14, scope: !6005, inlinedAt: !8631)
!8658 = !DILocation(line: 133, column: 31, scope: !6018, inlinedAt: !8631)
!8659 = !DILocation(line: 133, column: 24, scope: !6018, inlinedAt: !8631)
!8660 = !DILocation(line: 134, column: 17, scope: !6013, inlinedAt: !8631)
!8661 = !DILocation(line: 134, column: 10, scope: !6013, inlinedAt: !8631)
!8662 = !DILocation(line: 135, column: 1, scope: !5611, inlinedAt: !8631)
!8663 = !DILocation(line: 301, column: 5, scope: !8629)
!8664 = !DILocation(line: 301, column: 8, scope: !8629)
!8665 = !DILocation(line: 301, column: 14, scope: !8629)
!8666 = !DILocation(line: 304, column: 1, scope: !8629)
!8667 = distinct !DISubprogram(name: "exponents_from_scale_factors", scope: !1677, file: !1677, line: 784, type: !8668, isLocal: true, isDefinition: true, scopeLine: 786, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{null, !1859, !2014, !1819}
!8670 = !DILocalVariable(name: "s", arg: 1, scope: !8667, file: !1677, line: 784, type: !1859)
!8671 = !DILocation(line: 784, column: 60, scope: !8667)
!8672 = !DILocalVariable(name: "g", arg: 2, scope: !8667, file: !1677, line: 784, type: !2014)
!8673 = !DILocation(line: 784, column: 75, scope: !8667)
!8674 = !DILocalVariable(name: "exponents", arg: 3, scope: !8667, file: !1677, line: 785, type: !1819)
!8675 = !DILocation(line: 785, column: 51, scope: !8667)
!8676 = !DILocalVariable(name: "bstab", scope: !8667, file: !1677, line: 787, type: !1482)
!8677 = !DILocation(line: 787, column: 20, scope: !8667)
!8678 = !DILocalVariable(name: "pretab", scope: !8667, file: !1677, line: 787, type: !1482)
!8679 = !DILocation(line: 787, column: 28, scope: !8667)
!8680 = !DILocalVariable(name: "len", scope: !8667, file: !1677, line: 788, type: !891)
!8681 = !DILocation(line: 788, column: 9, scope: !8667)
!8682 = !DILocalVariable(name: "i", scope: !8667, file: !1677, line: 788, type: !891)
!8683 = !DILocation(line: 788, column: 14, scope: !8667)
!8684 = !DILocalVariable(name: "j", scope: !8667, file: !1677, line: 788, type: !891)
!8685 = !DILocation(line: 788, column: 17, scope: !8667)
!8686 = !DILocalVariable(name: "k", scope: !8667, file: !1677, line: 788, type: !891)
!8687 = !DILocation(line: 788, column: 20, scope: !8667)
!8688 = !DILocalVariable(name: "l", scope: !8667, file: !1677, line: 788, type: !891)
!8689 = !DILocation(line: 788, column: 23, scope: !8667)
!8690 = !DILocalVariable(name: "v0", scope: !8667, file: !1677, line: 788, type: !891)
!8691 = !DILocation(line: 788, column: 26, scope: !8667)
!8692 = !DILocalVariable(name: "shift", scope: !8667, file: !1677, line: 788, type: !891)
!8693 = !DILocation(line: 788, column: 30, scope: !8667)
!8694 = !DILocalVariable(name: "gain", scope: !8667, file: !1677, line: 788, type: !891)
!8695 = !DILocation(line: 788, column: 37, scope: !8667)
!8696 = !DILocalVariable(name: "gains", scope: !8667, file: !1677, line: 788, type: !1919)
!8697 = !DILocation(line: 788, column: 43, scope: !8667)
!8698 = !DILocalVariable(name: "exp_ptr", scope: !8667, file: !1677, line: 789, type: !1819)
!8699 = !DILocation(line: 789, column: 14, scope: !8667)
!8700 = !DILocation(line: 791, column: 15, scope: !8667)
!8701 = !DILocation(line: 791, column: 13, scope: !8667)
!8702 = !DILocation(line: 792, column: 12, scope: !8667)
!8703 = !DILocation(line: 792, column: 15, scope: !8667)
!8704 = !DILocation(line: 792, column: 27, scope: !8667)
!8705 = !DILocation(line: 792, column: 10, scope: !8667)
!8706 = !DILocation(line: 793, column: 13, scope: !8667)
!8707 = !DILocation(line: 793, column: 16, scope: !8667)
!8708 = !DILocation(line: 793, column: 31, scope: !8667)
!8709 = !DILocation(line: 793, column: 11, scope: !8667)
!8710 = !DILocation(line: 795, column: 28, scope: !8667)
!8711 = !DILocation(line: 795, column: 31, scope: !8667)
!8712 = !DILocation(line: 795, column: 13, scope: !8667)
!8713 = !DILocation(line: 795, column: 11, scope: !8667)
!8714 = !DILocation(line: 796, column: 25, scope: !8667)
!8715 = !DILocation(line: 796, column: 28, scope: !8667)
!8716 = !DILocation(line: 796, column: 14, scope: !8667)
!8717 = !DILocation(line: 796, column: 12, scope: !8667)
!8718 = !DILocation(line: 797, column: 12, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8667, file: !1677, line: 797, column: 5)
!8720 = !DILocation(line: 797, column: 10, scope: !8719)
!8721 = !DILocation(line: 797, column: 17, scope: !8722)
!8722 = !DILexicalBlockFile(scope: !8723, file: !1677, discriminator: 1)
!8723 = distinct !DILexicalBlock(scope: !8719, file: !1677, line: 797, column: 5)
!8724 = !DILocation(line: 797, column: 21, scope: !8722)
!8725 = !DILocation(line: 797, column: 24, scope: !8722)
!8726 = !DILocation(line: 797, column: 19, scope: !8722)
!8727 = !DILocation(line: 797, column: 5, scope: !8722)
!8728 = !DILocation(line: 798, column: 14, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8723, file: !1677, line: 797, column: 39)
!8730 = !DILocation(line: 798, column: 40, scope: !8729)
!8731 = !DILocation(line: 798, column: 23, scope: !8729)
!8732 = !DILocation(line: 798, column: 26, scope: !8729)
!8733 = !DILocation(line: 798, column: 52, scope: !8729)
!8734 = !DILocation(line: 798, column: 45, scope: !8729)
!8735 = !DILocation(line: 798, column: 43, scope: !8729)
!8736 = !DILocation(line: 798, column: 59, scope: !8729)
!8737 = !DILocation(line: 798, column: 56, scope: !8729)
!8738 = !DILocation(line: 798, column: 19, scope: !8729)
!8739 = !DILocation(line: 798, column: 66, scope: !8729)
!8740 = !DILocation(line: 798, column: 12, scope: !8729)
!8741 = !DILocation(line: 799, column: 21, scope: !8729)
!8742 = !DILocation(line: 799, column: 15, scope: !8729)
!8743 = !DILocation(line: 799, column: 13, scope: !8729)
!8744 = !DILocation(line: 800, column: 18, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8729, file: !1677, line: 800, column: 9)
!8746 = !DILocation(line: 800, column: 16, scope: !8745)
!8747 = !DILocation(line: 800, column: 14, scope: !8745)
!8748 = !DILocation(line: 800, column: 23, scope: !8749)
!8749 = !DILexicalBlockFile(scope: !8750, file: !1677, discriminator: 1)
!8750 = distinct !DILexicalBlock(scope: !8745, file: !1677, line: 800, column: 9)
!8751 = !DILocation(line: 800, column: 25, scope: !8749)
!8752 = !DILocation(line: 800, column: 9, scope: !8749)
!8753 = !DILocation(line: 801, column: 26, scope: !8750)
!8754 = !DILocation(line: 801, column: 21, scope: !8750)
!8755 = !DILocation(line: 801, column: 24, scope: !8750)
!8756 = !DILocation(line: 801, column: 13, scope: !8750)
!8757 = !DILocation(line: 800, column: 31, scope: !8758)
!8758 = !DILexicalBlockFile(scope: !8750, file: !1677, discriminator: 2)
!8759 = !DILocation(line: 800, column: 9, scope: !8758)
!8760 = distinct !{!8760, !8761}
!8761 = !DILocation(line: 800, column: 9, scope: !8729)
!8762 = !DILocation(line: 802, column: 5, scope: !8729)
!8763 = !DILocation(line: 797, column: 35, scope: !8764)
!8764 = !DILexicalBlockFile(scope: !8723, file: !1677, discriminator: 2)
!8765 = !DILocation(line: 797, column: 5, scope: !8764)
!8766 = distinct !{!8766, !8767}
!8767 = !DILocation(line: 797, column: 5, scope: !8667)
!8768 = !DILocation(line: 804, column: 9, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8667, file: !1677, line: 804, column: 9)
!8770 = !DILocation(line: 804, column: 12, scope: !8769)
!8771 = !DILocation(line: 804, column: 24, scope: !8769)
!8772 = !DILocation(line: 804, column: 9, scope: !8667)
!8773 = !DILocation(line: 805, column: 33, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8769, file: !1677, line: 804, column: 30)
!8775 = !DILocation(line: 805, column: 36, scope: !8774)
!8776 = !DILocation(line: 805, column: 17, scope: !8774)
!8777 = !DILocation(line: 805, column: 15, scope: !8774)
!8778 = !DILocation(line: 806, column: 20, scope: !8774)
!8779 = !DILocation(line: 806, column: 28, scope: !8774)
!8780 = !DILocation(line: 806, column: 31, scope: !8774)
!8781 = !DILocation(line: 806, column: 48, scope: !8774)
!8782 = !DILocation(line: 806, column: 25, scope: !8774)
!8783 = !DILocation(line: 806, column: 9, scope: !8774)
!8784 = !DILocation(line: 806, column: 18, scope: !8774)
!8785 = !DILocation(line: 807, column: 20, scope: !8774)
!8786 = !DILocation(line: 807, column: 28, scope: !8774)
!8787 = !DILocation(line: 807, column: 31, scope: !8774)
!8788 = !DILocation(line: 807, column: 48, scope: !8774)
!8789 = !DILocation(line: 807, column: 25, scope: !8774)
!8790 = !DILocation(line: 807, column: 9, scope: !8774)
!8791 = !DILocation(line: 807, column: 18, scope: !8774)
!8792 = !DILocation(line: 808, column: 20, scope: !8774)
!8793 = !DILocation(line: 808, column: 28, scope: !8774)
!8794 = !DILocation(line: 808, column: 31, scope: !8774)
!8795 = !DILocation(line: 808, column: 48, scope: !8774)
!8796 = !DILocation(line: 808, column: 25, scope: !8774)
!8797 = !DILocation(line: 808, column: 9, scope: !8774)
!8798 = !DILocation(line: 808, column: 18, scope: !8774)
!8799 = !DILocation(line: 809, column: 13, scope: !8774)
!8800 = !DILocation(line: 809, column: 16, scope: !8774)
!8801 = !DILocation(line: 809, column: 11, scope: !8774)
!8802 = !DILocation(line: 810, column: 18, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8774, file: !1677, line: 810, column: 9)
!8804 = !DILocation(line: 810, column: 21, scope: !8803)
!8805 = !DILocation(line: 810, column: 16, scope: !8803)
!8806 = !DILocation(line: 810, column: 14, scope: !8803)
!8807 = !DILocation(line: 810, column: 34, scope: !8808)
!8808 = !DILexicalBlockFile(scope: !8809, file: !1677, discriminator: 1)
!8809 = distinct !DILexicalBlock(scope: !8803, file: !1677, line: 810, column: 9)
!8810 = !DILocation(line: 810, column: 36, scope: !8808)
!8811 = !DILocation(line: 810, column: 9, scope: !8808)
!8812 = !DILocation(line: 811, column: 25, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !1677, line: 810, column: 47)
!8814 = !DILocation(line: 811, column: 19, scope: !8813)
!8815 = !DILocation(line: 811, column: 17, scope: !8813)
!8816 = !DILocation(line: 812, column: 20, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8813, file: !1677, line: 812, column: 13)
!8818 = !DILocation(line: 812, column: 18, scope: !8817)
!8819 = !DILocation(line: 812, column: 25, scope: !8820)
!8820 = !DILexicalBlockFile(scope: !8821, file: !1677, discriminator: 1)
!8821 = distinct !DILexicalBlock(scope: !8817, file: !1677, line: 812, column: 13)
!8822 = !DILocation(line: 812, column: 27, scope: !8820)
!8823 = !DILocation(line: 812, column: 13, scope: !8820)
!8824 = !DILocation(line: 813, column: 28, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8821, file: !1677, line: 812, column: 37)
!8826 = !DILocation(line: 813, column: 22, scope: !8825)
!8827 = !DILocation(line: 813, column: 52, scope: !8825)
!8828 = !DILocation(line: 813, column: 34, scope: !8825)
!8829 = !DILocation(line: 813, column: 37, scope: !8825)
!8830 = !DILocation(line: 813, column: 59, scope: !8825)
!8831 = !DILocation(line: 813, column: 56, scope: !8825)
!8832 = !DILocation(line: 813, column: 31, scope: !8825)
!8833 = !DILocation(line: 813, column: 66, scope: !8825)
!8834 = !DILocation(line: 813, column: 20, scope: !8825)
!8835 = !DILocation(line: 814, column: 26, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8825, file: !1677, line: 814, column: 17)
!8837 = !DILocation(line: 814, column: 24, scope: !8836)
!8838 = !DILocation(line: 814, column: 22, scope: !8836)
!8839 = !DILocation(line: 814, column: 31, scope: !8840)
!8840 = !DILexicalBlockFile(scope: !8841, file: !1677, discriminator: 1)
!8841 = distinct !DILexicalBlock(scope: !8836, file: !1677, line: 814, column: 17)
!8842 = !DILocation(line: 814, column: 33, scope: !8840)
!8843 = !DILocation(line: 814, column: 17, scope: !8840)
!8844 = !DILocation(line: 815, column: 34, scope: !8841)
!8845 = !DILocation(line: 815, column: 29, scope: !8841)
!8846 = !DILocation(line: 815, column: 32, scope: !8841)
!8847 = !DILocation(line: 815, column: 21, scope: !8841)
!8848 = !DILocation(line: 814, column: 39, scope: !8849)
!8849 = !DILexicalBlockFile(scope: !8841, file: !1677, discriminator: 2)
!8850 = !DILocation(line: 814, column: 17, scope: !8849)
!8851 = distinct !{!8851, !8852}
!8852 = !DILocation(line: 814, column: 17, scope: !8825)
!8853 = !DILocation(line: 816, column: 13, scope: !8825)
!8854 = !DILocation(line: 812, column: 33, scope: !8855)
!8855 = !DILexicalBlockFile(scope: !8821, file: !1677, discriminator: 2)
!8856 = !DILocation(line: 812, column: 13, scope: !8855)
!8857 = distinct !{!8857, !8858}
!8858 = !DILocation(line: 812, column: 13, scope: !8813)
!8859 = !DILocation(line: 817, column: 9, scope: !8813)
!8860 = !DILocation(line: 810, column: 43, scope: !8861)
!8861 = !DILexicalBlockFile(scope: !8809, file: !1677, discriminator: 2)
!8862 = !DILocation(line: 810, column: 9, scope: !8861)
!8863 = distinct !{!8863, !8864}
!8864 = !DILocation(line: 810, column: 9, scope: !8774)
!8865 = !DILocation(line: 818, column: 5, scope: !8774)
!8866 = !DILocation(line: 819, column: 1, scope: !8667)
!8867 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !8868)
!8868 = distinct !DILocation(line: 788, column: 601, scope: !8869, inlinedAt: !8878)
!8869 = !DILexicalBlockFile(scope: !8870, file: !1882, discriminator: 11)
!8870 = distinct !DILexicalBlock(scope: !8871, file: !1882, line: 788, column: 490)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !1882, line: 788, column: 466)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !1882, line: 788, column: 154)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !1882, line: 788, column: 130)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !1882, line: 788, column: 8)
!8875 = distinct !DISubprogram(name: "get_vlc2", scope: !1882, file: !1882, line: 762, type: !8876, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!891, !4156, !1764, !891, !891}
!8878 = distinct !DILocation(line: 967, column: 16, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !1856, file: !1677, line: 947, column: 28)
!8880 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !8881)
!8881 = distinct !DILocation(line: 788, column: 259, scope: !8882, inlinedAt: !8878)
!8882 = !DILexicalBlockFile(scope: !8872, file: !1882, discriminator: 6)
!8883 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !8884)
!8884 = distinct !DILocation(line: 786, column: 16, scope: !8875, inlinedAt: !8878)
!8885 = !DILocalVariable(name: "s", arg: 1, scope: !8875, file: !1882, line: 762, type: !4156)
!8886 = !DILocation(line: 762, column: 74, scope: !8875, inlinedAt: !8878)
!8887 = !DILocalVariable(name: "table", arg: 2, scope: !8875, file: !1882, line: 762, type: !1764)
!8888 = !DILocation(line: 762, column: 87, scope: !8875, inlinedAt: !8878)
!8889 = !DILocalVariable(name: "bits", arg: 3, scope: !8875, file: !1882, line: 763, type: !891)
!8890 = !DILocation(line: 763, column: 42, scope: !8875, inlinedAt: !8878)
!8891 = !DILocalVariable(name: "max_depth", arg: 4, scope: !8875, file: !1882, line: 763, type: !891)
!8892 = !DILocation(line: 763, column: 52, scope: !8875, inlinedAt: !8878)
!8893 = !DILocalVariable(name: "code", scope: !8875, file: !1882, line: 783, type: !891)
!8894 = !DILocation(line: 783, column: 9, scope: !8875, inlinedAt: !8878)
!8895 = !DILocalVariable(name: "re_index", scope: !8875, file: !1882, line: 785, type: !892)
!8896 = !DILocation(line: 785, column: 18, scope: !8875, inlinedAt: !8878)
!8897 = !DILocalVariable(name: "re_cache", scope: !8875, file: !1882, line: 785, type: !892)
!8898 = !DILocation(line: 785, column: 78, scope: !8875, inlinedAt: !8878)
!8899 = !DILocalVariable(name: "re_size_plus8", scope: !8875, file: !1882, line: 785, type: !892)
!8900 = !DILocation(line: 785, column: 101, scope: !8875, inlinedAt: !8878)
!8901 = !DILocalVariable(name: "n", scope: !8874, file: !1882, line: 788, type: !891)
!8902 = !DILocation(line: 788, column: 14, scope: !8874, inlinedAt: !8878)
!8903 = !DILocalVariable(name: "nb_bits", scope: !8874, file: !1882, line: 788, type: !891)
!8904 = !DILocation(line: 788, column: 17, scope: !8874, inlinedAt: !8878)
!8905 = !DILocalVariable(name: "index", scope: !8874, file: !1882, line: 788, type: !892)
!8906 = !DILocation(line: 788, column: 39, scope: !8874, inlinedAt: !8878)
!8907 = !DILocalVariable(name: "s", arg: 1, scope: !8908, file: !1882, line: 412, type: !4156)
!8908 = distinct !DISubprogram(name: "get_bitsz", scope: !1882, file: !1882, line: 412, type: !8909, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!8909 = !DISubroutineType(types: !8910)
!8910 = !{!891, !4156, !891}
!8911 = !DILocation(line: 412, column: 75, scope: !8908, inlinedAt: !8912)
!8912 = distinct !DILocation(line: 932, column: 26, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8914, file: !1677, line: 931, column: 24)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !1677, line: 929, column: 21)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !1677, line: 925, column: 20)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !1677, line: 904, column: 17)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !1677, line: 881, column: 28)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !1677, line: 881, column: 9)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !1677, line: 881, column: 9)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !1677, line: 863, column: 29)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !1677, line: 863, column: 5)
!8922 = distinct !DILexicalBlock(scope: !1856, file: !1677, line: 863, column: 5)
!8923 = !DILocalVariable(name: "n", arg: 2, scope: !8908, file: !1882, line: 412, type: !891)
!8924 = !DILocation(line: 412, column: 82, scope: !8908, inlinedAt: !8912)
!8925 = !DILocation(line: 412, column: 75, scope: !8908, inlinedAt: !8926)
!8926 = distinct !DILocation(line: 919, column: 26, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8928, file: !1677, line: 918, column: 24)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !1677, line: 916, column: 21)
!8929 = distinct !DILexicalBlock(scope: !8916, file: !1677, line: 904, column: 25)
!8930 = !DILocation(line: 412, column: 82, scope: !8908, inlinedAt: !8926)
!8931 = !DILocation(line: 412, column: 75, scope: !8908, inlinedAt: !8932)
!8932 = distinct !DILocation(line: 910, column: 26, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8934, file: !1677, line: 909, column: 24)
!8934 = distinct !DILexicalBlock(scope: !8929, file: !1677, line: 907, column: 21)
!8935 = !DILocation(line: 412, column: 82, scope: !8908, inlinedAt: !8932)
!8936 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !8937)
!8937 = distinct !DILocation(line: 788, column: 601, scope: !8869, inlinedAt: !8938)
!8938 = distinct !DILocation(line: 891, column: 17, scope: !8917)
!8939 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !8940)
!8940 = distinct !DILocation(line: 788, column: 259, scope: !8882, inlinedAt: !8938)
!8941 = !DILocation(line: 66, column: 98, scope: !2096, inlinedAt: !8942)
!8942 = distinct !DILocation(line: 786, column: 16, scope: !8875, inlinedAt: !8938)
!8943 = !DILocation(line: 762, column: 74, scope: !8875, inlinedAt: !8938)
!8944 = !DILocation(line: 762, column: 87, scope: !8875, inlinedAt: !8938)
!8945 = !DILocation(line: 763, column: 42, scope: !8875, inlinedAt: !8938)
!8946 = !DILocation(line: 763, column: 52, scope: !8875, inlinedAt: !8938)
!8947 = !DILocation(line: 783, column: 9, scope: !8875, inlinedAt: !8938)
!8948 = !DILocation(line: 785, column: 18, scope: !8875, inlinedAt: !8938)
!8949 = !DILocation(line: 785, column: 78, scope: !8875, inlinedAt: !8938)
!8950 = !DILocation(line: 785, column: 101, scope: !8875, inlinedAt: !8938)
!8951 = !DILocation(line: 788, column: 14, scope: !8874, inlinedAt: !8938)
!8952 = !DILocation(line: 788, column: 17, scope: !8874, inlinedAt: !8938)
!8953 = !DILocation(line: 788, column: 39, scope: !8874, inlinedAt: !8938)
!8954 = !DILocalVariable(name: "s", arg: 1, scope: !1856, file: !1677, line: 852, type: !1859)
!8955 = !DILocation(line: 852, column: 45, scope: !1856)
!8956 = !DILocalVariable(name: "g", arg: 2, scope: !1856, file: !1677, line: 852, type: !2014)
!8957 = !DILocation(line: 852, column: 60, scope: !1856)
!8958 = !DILocalVariable(name: "exponents", arg: 3, scope: !1856, file: !1677, line: 853, type: !1819)
!8959 = !DILocation(line: 853, column: 36, scope: !1856)
!8960 = !DILocalVariable(name: "end_pos2", arg: 4, scope: !1856, file: !1677, line: 853, type: !891)
!8961 = !DILocation(line: 853, column: 51, scope: !1856)
!8962 = !DILocalVariable(name: "s_index", scope: !1856, file: !1677, line: 855, type: !891)
!8963 = !DILocation(line: 855, column: 9, scope: !1856)
!8964 = !DILocalVariable(name: "i", scope: !1856, file: !1677, line: 856, type: !891)
!8965 = !DILocation(line: 856, column: 9, scope: !1856)
!8966 = !DILocalVariable(name: "last_pos", scope: !1856, file: !1677, line: 857, type: !891)
!8967 = !DILocation(line: 857, column: 9, scope: !1856)
!8968 = !DILocalVariable(name: "bits_left", scope: !1856, file: !1677, line: 857, type: !891)
!8969 = !DILocation(line: 857, column: 19, scope: !1856)
!8970 = !DILocalVariable(name: "vlc", scope: !1856, file: !1677, line: 858, type: !8971)
!8971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64, align: 64)
!8972 = !DILocation(line: 858, column: 10, scope: !1856)
!8973 = !DILocalVariable(name: "end_pos", scope: !1856, file: !1677, line: 859, type: !891)
!8974 = !DILocation(line: 859, column: 9, scope: !1856)
!8975 = !DILocation(line: 859, column: 21, scope: !1856)
!8976 = !DILocation(line: 859, column: 34, scope: !1856)
!8977 = !DILocation(line: 859, column: 37, scope: !1856)
!8978 = !DILocation(line: 859, column: 40, scope: !1856)
!8979 = !DILocation(line: 859, column: 55, scope: !1856)
!8980 = !DILocation(line: 859, column: 58, scope: !1856)
!8981 = !DILocation(line: 859, column: 68, scope: !1856)
!8982 = !DILocation(line: 859, column: 53, scope: !1856)
!8983 = !DILocation(line: 859, column: 31, scope: !1856)
!8984 = !DILocation(line: 859, column: 20, scope: !1856)
!8985 = !DILocation(line: 859, column: 76, scope: !8986)
!8986 = !DILexicalBlockFile(scope: !1856, file: !1677, discriminator: 1)
!8987 = !DILocation(line: 859, column: 79, scope: !8986)
!8988 = !DILocation(line: 859, column: 82, scope: !8986)
!8989 = !DILocation(line: 859, column: 97, scope: !8986)
!8990 = !DILocation(line: 859, column: 100, scope: !8986)
!8991 = !DILocation(line: 859, column: 110, scope: !8986)
!8992 = !DILocation(line: 859, column: 95, scope: !8986)
!8993 = !DILocation(line: 859, column: 20, scope: !8986)
!8994 = !DILocation(line: 859, column: 118, scope: !8995)
!8995 = !DILexicalBlockFile(scope: !1856, file: !1677, discriminator: 2)
!8996 = !DILocation(line: 859, column: 20, scope: !8995)
!8997 = !DILocation(line: 859, column: 20, scope: !8998)
!8998 = !DILexicalBlockFile(scope: !1856, file: !1677, discriminator: 3)
!8999 = !DILocation(line: 859, column: 9, scope: !8998)
!9000 = !DILocation(line: 862, column: 13, scope: !1856)
!9001 = !DILocation(line: 863, column: 12, scope: !8922)
!9002 = !DILocation(line: 863, column: 10, scope: !8922)
!9003 = !DILocation(line: 863, column: 17, scope: !9004)
!9004 = !DILexicalBlockFile(scope: !8921, file: !1677, discriminator: 1)
!9005 = !DILocation(line: 863, column: 19, scope: !9004)
!9006 = !DILocation(line: 863, column: 5, scope: !9004)
!9007 = !DILocalVariable(name: "j", scope: !8920, file: !1677, line: 864, type: !891)
!9008 = !DILocation(line: 864, column: 13, scope: !8920)
!9009 = !DILocalVariable(name: "k", scope: !8920, file: !1677, line: 864, type: !891)
!9010 = !DILocation(line: 864, column: 16, scope: !8920)
!9011 = !DILocalVariable(name: "l", scope: !8920, file: !1677, line: 864, type: !891)
!9012 = !DILocation(line: 864, column: 19, scope: !8920)
!9013 = !DILocalVariable(name: "linbits", scope: !8920, file: !1677, line: 864, type: !891)
!9014 = !DILocation(line: 864, column: 22, scope: !8920)
!9015 = !DILocation(line: 865, column: 28, scope: !8920)
!9016 = !DILocation(line: 865, column: 13, scope: !8920)
!9017 = !DILocation(line: 865, column: 16, scope: !8920)
!9018 = !DILocation(line: 865, column: 11, scope: !8920)
!9019 = !DILocation(line: 866, column: 13, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !8920, file: !1677, line: 866, column: 13)
!9021 = !DILocation(line: 866, column: 15, scope: !9020)
!9022 = !DILocation(line: 866, column: 13, scope: !8920)
!9023 = !DILocation(line: 867, column: 13, scope: !9020)
!9024 = !DILocation(line: 869, column: 29, scope: !8920)
!9025 = !DILocation(line: 869, column: 13, scope: !8920)
!9026 = !DILocation(line: 869, column: 16, scope: !8920)
!9027 = !DILocation(line: 869, column: 11, scope: !8920)
!9028 = !DILocation(line: 870, column: 27, scope: !8920)
!9029 = !DILocation(line: 870, column: 13, scope: !8920)
!9030 = !DILocation(line: 870, column: 11, scope: !8920)
!9031 = !DILocation(line: 871, column: 33, scope: !8920)
!9032 = !DILocation(line: 871, column: 19, scope: !8920)
!9033 = !DILocation(line: 871, column: 17, scope: !8920)
!9034 = !DILocation(line: 872, column: 25, scope: !8920)
!9035 = !DILocation(line: 872, column: 16, scope: !8920)
!9036 = !DILocation(line: 872, column: 13, scope: !8920)
!9037 = !DILocation(line: 874, column: 14, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !8920, file: !1677, line: 874, column: 13)
!9039 = !DILocation(line: 874, column: 13, scope: !8920)
!9040 = !DILocation(line: 875, column: 34, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9038, file: !1677, line: 874, column: 17)
!9042 = !DILocation(line: 875, column: 21, scope: !9041)
!9043 = !DILocation(line: 875, column: 24, scope: !9041)
!9044 = !DILocation(line: 875, column: 13, scope: !9041)
!9045 = !DILocation(line: 875, column: 75, scope: !9041)
!9046 = !DILocation(line: 875, column: 73, scope: !9041)
!9047 = !DILocation(line: 876, column: 28, scope: !9041)
!9048 = !DILocation(line: 876, column: 26, scope: !9041)
!9049 = !DILocation(line: 876, column: 21, scope: !9041)
!9050 = !DILocation(line: 877, column: 13, scope: !9041)
!9051 = !DILocation(line: 881, column: 9, scope: !8920)
!9052 = !DILocation(line: 881, column: 16, scope: !9053)
!9053 = !DILexicalBlockFile(scope: !8918, file: !1677, discriminator: 1)
!9054 = !DILocation(line: 881, column: 18, scope: !9053)
!9055 = !DILocation(line: 881, column: 9, scope: !9053)
!9056 = !DILocalVariable(name: "exponent", scope: !8917, file: !1677, line: 882, type: !891)
!9057 = !DILocation(line: 882, column: 17, scope: !8917)
!9058 = !DILocalVariable(name: "x", scope: !8917, file: !1677, line: 882, type: !891)
!9059 = !DILocation(line: 882, column: 27, scope: !8917)
!9060 = !DILocalVariable(name: "y", scope: !8917, file: !1677, line: 882, type: !891)
!9061 = !DILocation(line: 882, column: 30, scope: !8917)
!9062 = !DILocalVariable(name: "v", scope: !8917, file: !1677, line: 883, type: !891)
!9063 = !DILocation(line: 883, column: 17, scope: !8917)
!9064 = !DILocalVariable(name: "pos", scope: !8917, file: !1677, line: 884, type: !891)
!9065 = !DILocation(line: 884, column: 17, scope: !8917)
!9066 = !DILocation(line: 884, column: 39, scope: !8917)
!9067 = !DILocation(line: 884, column: 42, scope: !8917)
!9068 = !DILocation(line: 884, column: 23, scope: !8917)
!9069 = !DILocation(line: 886, column: 17, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !8917, file: !1677, line: 886, column: 17)
!9071 = !DILocation(line: 886, column: 24, scope: !9070)
!9072 = !DILocation(line: 886, column: 21, scope: !9070)
!9073 = !DILocation(line: 886, column: 17, scope: !8917)
!9074 = !DILocation(line: 887, column: 31, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9070, file: !1677, line: 886, column: 32)
!9076 = !DILocation(line: 887, column: 17, scope: !9075)
!9077 = !DILocation(line: 888, column: 21, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9075, file: !1677, line: 888, column: 21)
!9079 = !DILocation(line: 888, column: 28, scope: !9078)
!9080 = !DILocation(line: 888, column: 25, scope: !9078)
!9081 = !DILocation(line: 888, column: 21, scope: !9075)
!9082 = !DILocation(line: 889, column: 21, scope: !9078)
!9083 = !DILocation(line: 890, column: 13, scope: !9075)
!9084 = !DILocation(line: 891, column: 27, scope: !8917)
!9085 = !DILocation(line: 891, column: 30, scope: !8917)
!9086 = !DILocation(line: 891, column: 34, scope: !8917)
!9087 = !DILocation(line: 891, column: 39, scope: !8917)
!9088 = !DILocation(line: 891, column: 17, scope: !8917)
!9089 = !DILocation(line: 785, column: 30, scope: !8875, inlinedAt: !8938)
!9090 = !DILocation(line: 785, column: 34, scope: !8875, inlinedAt: !8938)
!9091 = !DILocation(line: 785, column: 118, scope: !8875, inlinedAt: !8938)
!9092 = !DILocation(line: 785, column: 122, scope: !8875, inlinedAt: !8938)
!9093 = !DILocation(line: 786, column: 60, scope: !8875, inlinedAt: !8938)
!9094 = !DILocation(line: 786, column: 64, scope: !8875, inlinedAt: !8938)
!9095 = !DILocation(line: 786, column: 74, scope: !8875, inlinedAt: !8938)
!9096 = !DILocation(line: 786, column: 83, scope: !8875, inlinedAt: !8938)
!9097 = !DILocation(line: 786, column: 71, scope: !8875, inlinedAt: !8938)
!9098 = !DILocation(line: 786, column: 92, scope: !8875, inlinedAt: !8938)
!9099 = !DILocation(line: 786, column: 16, scope: !8875, inlinedAt: !8938)
!9100 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !8942)
!9101 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !8942)
!9102 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !8942)
!9103 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !8942)
!9104 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !8942)
!9105 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !8942)
!9106 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !8942)
!9107 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !8942)
!9108 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !8942)
!9109 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !8942)
!9110 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !8942)
!9111 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !8942)
!9112 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !8942)
!9113 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !8942)
!9114 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !8942)
!9115 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !8942)
!9116 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !8942)
!9117 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !8942)
!9118 = !DILocation(line: 786, column: 100, scope: !8875, inlinedAt: !8938)
!9119 = !DILocation(line: 786, column: 109, scope: !8875, inlinedAt: !8938)
!9120 = !DILocation(line: 786, column: 96, scope: !8875, inlinedAt: !8938)
!9121 = !DILocation(line: 786, column: 14, scope: !8875, inlinedAt: !8938)
!9122 = !DILocation(line: 788, column: 64, scope: !9123, inlinedAt: !8938)
!9123 = !DILexicalBlockFile(scope: !8874, file: !1882, discriminator: 1)
!9124 = !DILocation(line: 788, column: 74, scope: !9123, inlinedAt: !8938)
!9125 = !DILocation(line: 788, column: 54, scope: !9123, inlinedAt: !8938)
!9126 = !DILocation(line: 788, column: 52, scope: !9123, inlinedAt: !8938)
!9127 = !DILocation(line: 788, column: 94, scope: !9123, inlinedAt: !8938)
!9128 = !DILocation(line: 788, column: 88, scope: !9123, inlinedAt: !8938)
!9129 = !DILocation(line: 788, column: 86, scope: !9123, inlinedAt: !8938)
!9130 = !DILocation(line: 788, column: 115, scope: !9123, inlinedAt: !8938)
!9131 = !DILocation(line: 788, column: 109, scope: !9123, inlinedAt: !8938)
!9132 = !DILocation(line: 788, column: 107, scope: !9123, inlinedAt: !8938)
!9133 = !DILocation(line: 788, column: 130, scope: !9123, inlinedAt: !8938)
!9134 = !DILocation(line: 788, column: 140, scope: !9123, inlinedAt: !8938)
!9135 = !DILocation(line: 788, column: 144, scope: !9123, inlinedAt: !8938)
!9136 = !DILocation(line: 788, column: 147, scope: !9137, inlinedAt: !8938)
!9137 = !DILexicalBlockFile(scope: !8873, file: !1882, discriminator: 2)
!9138 = !DILocation(line: 788, column: 149, scope: !9137, inlinedAt: !8938)
!9139 = !DILocation(line: 788, column: 130, scope: !9137, inlinedAt: !8938)
!9140 = !DILocation(line: 788, column: 169, scope: !9141, inlinedAt: !8938)
!9141 = !DILexicalBlockFile(scope: !8872, file: !1882, discriminator: 3)
!9142 = !DILocation(line: 788, column: 187, scope: !9141, inlinedAt: !8938)
!9143 = !DILocation(line: 788, column: 199, scope: !9141, inlinedAt: !8938)
!9144 = !DILocation(line: 788, column: 196, scope: !9141, inlinedAt: !8938)
!9145 = !DILocation(line: 788, column: 184, scope: !9141, inlinedAt: !8938)
!9146 = !DILocation(line: 788, column: 168, scope: !9141, inlinedAt: !8938)
!9147 = !DILocation(line: 788, column: 209, scope: !9148, inlinedAt: !8938)
!9148 = !DILexicalBlockFile(scope: !8872, file: !1882, discriminator: 4)
!9149 = !DILocation(line: 788, column: 221, scope: !9148, inlinedAt: !8938)
!9150 = !DILocation(line: 788, column: 218, scope: !9148, inlinedAt: !8938)
!9151 = !DILocation(line: 788, column: 168, scope: !9148, inlinedAt: !8938)
!9152 = !DILocation(line: 788, column: 231, scope: !9153, inlinedAt: !8938)
!9153 = !DILexicalBlockFile(scope: !8872, file: !1882, discriminator: 5)
!9154 = !DILocation(line: 788, column: 168, scope: !9153, inlinedAt: !8938)
!9155 = !DILocation(line: 788, column: 168, scope: !8882, inlinedAt: !8938)
!9156 = !DILocation(line: 788, column: 165, scope: !8882, inlinedAt: !8938)
!9157 = !DILocation(line: 788, column: 303, scope: !8882, inlinedAt: !8938)
!9158 = !DILocation(line: 788, column: 307, scope: !8882, inlinedAt: !8938)
!9159 = !DILocation(line: 788, column: 317, scope: !8882, inlinedAt: !8938)
!9160 = !DILocation(line: 788, column: 326, scope: !8882, inlinedAt: !8938)
!9161 = !DILocation(line: 788, column: 314, scope: !8882, inlinedAt: !8938)
!9162 = !DILocation(line: 788, column: 335, scope: !8882, inlinedAt: !8938)
!9163 = !DILocation(line: 788, column: 259, scope: !8882, inlinedAt: !8938)
!9164 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !8940)
!9165 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !8940)
!9166 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !8940)
!9167 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !8940)
!9168 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !8940)
!9169 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !8940)
!9170 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !8940)
!9171 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !8940)
!9172 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !8940)
!9173 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !8940)
!9174 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !8940)
!9175 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !8940)
!9176 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !8940)
!9177 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !8940)
!9178 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !8940)
!9179 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !8940)
!9180 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !8940)
!9181 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !8940)
!9182 = !DILocation(line: 788, column: 343, scope: !8882, inlinedAt: !8938)
!9183 = !DILocation(line: 788, column: 352, scope: !8882, inlinedAt: !8938)
!9184 = !DILocation(line: 788, column: 339, scope: !8882, inlinedAt: !8938)
!9185 = !DILocation(line: 788, column: 257, scope: !8882, inlinedAt: !8938)
!9186 = !DILocation(line: 788, column: 369, scope: !8882, inlinedAt: !8938)
!9187 = !DILocation(line: 788, column: 368, scope: !8882, inlinedAt: !8938)
!9188 = !DILocation(line: 788, column: 366, scope: !8882, inlinedAt: !8938)
!9189 = !DILocation(line: 788, column: 390, scope: !8882, inlinedAt: !8938)
!9190 = !DILocation(line: 788, column: 400, scope: !8882, inlinedAt: !8938)
!9191 = !DILocation(line: 788, column: 380, scope: !9192, inlinedAt: !8938)
!9192 = !DILexicalBlockFile(scope: !8882, file: !1882, discriminator: 19)
!9193 = !DILocation(line: 788, column: 411, scope: !8882, inlinedAt: !8938)
!9194 = !DILocation(line: 788, column: 409, scope: !8882, inlinedAt: !8938)
!9195 = !DILocation(line: 788, column: 378, scope: !8882, inlinedAt: !8938)
!9196 = !DILocation(line: 788, column: 430, scope: !8882, inlinedAt: !8938)
!9197 = !DILocation(line: 788, column: 424, scope: !8882, inlinedAt: !8938)
!9198 = !DILocation(line: 788, column: 422, scope: !8882, inlinedAt: !8938)
!9199 = !DILocation(line: 788, column: 451, scope: !8882, inlinedAt: !8938)
!9200 = !DILocation(line: 788, column: 445, scope: !8882, inlinedAt: !8938)
!9201 = !DILocation(line: 788, column: 443, scope: !8882, inlinedAt: !8938)
!9202 = !DILocation(line: 788, column: 466, scope: !8882, inlinedAt: !8938)
!9203 = !DILocation(line: 788, column: 476, scope: !8882, inlinedAt: !8938)
!9204 = !DILocation(line: 788, column: 480, scope: !8882, inlinedAt: !8938)
!9205 = !DILocation(line: 788, column: 483, scope: !9206, inlinedAt: !8938)
!9206 = !DILexicalBlockFile(scope: !8871, file: !1882, discriminator: 7)
!9207 = !DILocation(line: 788, column: 485, scope: !9206, inlinedAt: !8938)
!9208 = !DILocation(line: 788, column: 466, scope: !9206, inlinedAt: !8938)
!9209 = !DILocation(line: 788, column: 505, scope: !9210, inlinedAt: !8938)
!9210 = !DILexicalBlockFile(scope: !8870, file: !1882, discriminator: 8)
!9211 = !DILocation(line: 788, column: 523, scope: !9210, inlinedAt: !8938)
!9212 = !DILocation(line: 788, column: 535, scope: !9210, inlinedAt: !8938)
!9213 = !DILocation(line: 788, column: 532, scope: !9210, inlinedAt: !8938)
!9214 = !DILocation(line: 788, column: 520, scope: !9210, inlinedAt: !8938)
!9215 = !DILocation(line: 788, column: 504, scope: !9210, inlinedAt: !8938)
!9216 = !DILocation(line: 788, column: 548, scope: !9217, inlinedAt: !8938)
!9217 = !DILexicalBlockFile(scope: !8870, file: !1882, discriminator: 9)
!9218 = !DILocation(line: 788, column: 560, scope: !9217, inlinedAt: !8938)
!9219 = !DILocation(line: 788, column: 557, scope: !9217, inlinedAt: !8938)
!9220 = !DILocation(line: 788, column: 504, scope: !9217, inlinedAt: !8938)
!9221 = !DILocation(line: 788, column: 573, scope: !9222, inlinedAt: !8938)
!9222 = !DILexicalBlockFile(scope: !8870, file: !1882, discriminator: 10)
!9223 = !DILocation(line: 788, column: 504, scope: !9222, inlinedAt: !8938)
!9224 = !DILocation(line: 788, column: 504, scope: !8869, inlinedAt: !8938)
!9225 = !DILocation(line: 788, column: 501, scope: !8869, inlinedAt: !8938)
!9226 = !DILocation(line: 788, column: 645, scope: !8869, inlinedAt: !8938)
!9227 = !DILocation(line: 788, column: 649, scope: !8869, inlinedAt: !8938)
!9228 = !DILocation(line: 788, column: 659, scope: !8869, inlinedAt: !8938)
!9229 = !DILocation(line: 788, column: 668, scope: !8869, inlinedAt: !8938)
!9230 = !DILocation(line: 788, column: 656, scope: !8869, inlinedAt: !8938)
!9231 = !DILocation(line: 788, column: 677, scope: !8869, inlinedAt: !8938)
!9232 = !DILocation(line: 788, column: 601, scope: !8869, inlinedAt: !8938)
!9233 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !8937)
!9234 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !8937)
!9235 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !8937)
!9236 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !8937)
!9237 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !8937)
!9238 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !8937)
!9239 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !8937)
!9240 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !8937)
!9241 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !8937)
!9242 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !8937)
!9243 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !8937)
!9244 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !8937)
!9245 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !8937)
!9246 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !8937)
!9247 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !8937)
!9248 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !8937)
!9249 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !8937)
!9250 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !8937)
!9251 = !DILocation(line: 788, column: 685, scope: !8869, inlinedAt: !8938)
!9252 = !DILocation(line: 788, column: 694, scope: !8869, inlinedAt: !8938)
!9253 = !DILocation(line: 788, column: 681, scope: !8869, inlinedAt: !8938)
!9254 = !DILocation(line: 788, column: 599, scope: !8869, inlinedAt: !8938)
!9255 = !DILocation(line: 788, column: 711, scope: !8869, inlinedAt: !8938)
!9256 = !DILocation(line: 788, column: 710, scope: !8869, inlinedAt: !8938)
!9257 = !DILocation(line: 788, column: 708, scope: !8869, inlinedAt: !8938)
!9258 = !DILocation(line: 788, column: 732, scope: !8869, inlinedAt: !8938)
!9259 = !DILocation(line: 788, column: 742, scope: !8869, inlinedAt: !8938)
!9260 = !DILocation(line: 788, column: 722, scope: !9261, inlinedAt: !8938)
!9261 = !DILexicalBlockFile(scope: !8869, file: !1882, discriminator: 20)
!9262 = !DILocation(line: 788, column: 753, scope: !8869, inlinedAt: !8938)
!9263 = !DILocation(line: 788, column: 751, scope: !8869, inlinedAt: !8938)
!9264 = !DILocation(line: 788, column: 720, scope: !8869, inlinedAt: !8938)
!9265 = !DILocation(line: 788, column: 772, scope: !8869, inlinedAt: !8938)
!9266 = !DILocation(line: 788, column: 766, scope: !8869, inlinedAt: !8938)
!9267 = !DILocation(line: 788, column: 764, scope: !8869, inlinedAt: !8938)
!9268 = !DILocation(line: 788, column: 793, scope: !8869, inlinedAt: !8938)
!9269 = !DILocation(line: 788, column: 787, scope: !8869, inlinedAt: !8938)
!9270 = !DILocation(line: 788, column: 785, scope: !8869, inlinedAt: !8938)
!9271 = !DILocation(line: 788, column: 804, scope: !8869, inlinedAt: !8938)
!9272 = !DILocation(line: 788, column: 806, scope: !9273, inlinedAt: !8938)
!9273 = !DILexicalBlockFile(scope: !8872, file: !1882, discriminator: 12)
!9274 = !DILocation(line: 788, column: 827, scope: !9275, inlinedAt: !8938)
!9275 = !DILexicalBlockFile(scope: !9276, file: !1882, discriminator: 14)
!9276 = distinct !DILexicalBlock(scope: !8874, file: !1882, line: 788, column: 811)
!9277 = !DILocation(line: 788, column: 822, scope: !9275, inlinedAt: !8938)
!9278 = !DILocation(line: 788, column: 844, scope: !9275, inlinedAt: !8938)
!9279 = !DILocation(line: 788, column: 862, scope: !9275, inlinedAt: !8938)
!9280 = !DILocation(line: 788, column: 874, scope: !9275, inlinedAt: !8938)
!9281 = !DILocation(line: 788, column: 871, scope: !9275, inlinedAt: !8938)
!9282 = !DILocation(line: 788, column: 859, scope: !9275, inlinedAt: !8938)
!9283 = !DILocation(line: 788, column: 843, scope: !9275, inlinedAt: !8938)
!9284 = !DILocation(line: 788, column: 881, scope: !9285, inlinedAt: !8938)
!9285 = !DILexicalBlockFile(scope: !9276, file: !1882, discriminator: 15)
!9286 = !DILocation(line: 788, column: 893, scope: !9285, inlinedAt: !8938)
!9287 = !DILocation(line: 788, column: 890, scope: !9285, inlinedAt: !8938)
!9288 = !DILocation(line: 788, column: 843, scope: !9285, inlinedAt: !8938)
!9289 = !DILocation(line: 788, column: 900, scope: !9290, inlinedAt: !8938)
!9290 = !DILexicalBlockFile(scope: !9276, file: !1882, discriminator: 16)
!9291 = !DILocation(line: 788, column: 843, scope: !9290, inlinedAt: !8938)
!9292 = !DILocation(line: 788, column: 843, scope: !9293, inlinedAt: !8938)
!9293 = !DILexicalBlockFile(scope: !9276, file: !1882, discriminator: 17)
!9294 = !DILocation(line: 788, column: 840, scope: !9293, inlinedAt: !8938)
!9295 = !DILocation(line: 790, column: 18, scope: !8875, inlinedAt: !8938)
!9296 = !DILocation(line: 790, column: 6, scope: !8875, inlinedAt: !8938)
!9297 = !DILocation(line: 790, column: 10, scope: !8875, inlinedAt: !8938)
!9298 = !DILocation(line: 790, column: 16, scope: !8875, inlinedAt: !8938)
!9299 = !DILocation(line: 792, column: 12, scope: !8875, inlinedAt: !8938)
!9300 = !DILocation(line: 891, column: 15, scope: !8917)
!9301 = !DILocation(line: 893, column: 18, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !8917, file: !1677, line: 893, column: 17)
!9303 = !DILocation(line: 893, column: 17, scope: !8917)
!9304 = !DILocation(line: 895, column: 30, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9302, file: !1677, line: 893, column: 21)
!9306 = !DILocation(line: 895, column: 37, scope: !9305)
!9307 = !DILocation(line: 895, column: 17, scope: !9305)
!9308 = !DILocation(line: 895, column: 20, scope: !9305)
!9309 = !DILocation(line: 895, column: 41, scope: !9305)
!9310 = !DILocation(line: 894, column: 30, scope: !9305)
!9311 = !DILocation(line: 894, column: 17, scope: !9305)
!9312 = !DILocation(line: 894, column: 20, scope: !9305)
!9313 = !DILocation(line: 894, column: 40, scope: !9305)
!9314 = !DILocation(line: 896, column: 25, scope: !9305)
!9315 = !DILocation(line: 897, column: 17, scope: !9305)
!9316 = !DILocation(line: 900, column: 33, scope: !8917)
!9317 = !DILocation(line: 900, column: 23, scope: !8917)
!9318 = !DILocation(line: 900, column: 21, scope: !8917)
!9319 = !DILocation(line: 902, column: 13, scope: !8917)
!9320 = distinct !{!9320, !9319}
!9321 = !DILocation(line: 902, column: 118, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !9323, file: !1677, discriminator: 1)
!9323 = distinct !DILexicalBlock(scope: !8917, file: !1677, line: 902, column: 16)
!9324 = !DILocation(line: 904, column: 17, scope: !8916)
!9325 = !DILocation(line: 904, column: 19, scope: !8916)
!9326 = !DILocation(line: 904, column: 17, scope: !8917)
!9327 = !DILocation(line: 905, column: 21, scope: !8929)
!9328 = !DILocation(line: 905, column: 23, scope: !8929)
!9329 = !DILocation(line: 905, column: 19, scope: !8929)
!9330 = !DILocation(line: 906, column: 21, scope: !8929)
!9331 = !DILocation(line: 906, column: 23, scope: !8929)
!9332 = !DILocation(line: 906, column: 19, scope: !8929)
!9333 = !DILocation(line: 907, column: 21, scope: !8934)
!9334 = !DILocation(line: 907, column: 23, scope: !8934)
!9335 = !DILocation(line: 907, column: 21, scope: !8929)
!9336 = !DILocation(line: 908, column: 66, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !8934, file: !1677, line: 907, column: 29)
!9338 = !DILocation(line: 908, column: 47, scope: !9337)
!9339 = !DILocation(line: 908, column: 78, scope: !9337)
!9340 = !DILocation(line: 908, column: 76, scope: !9337)
!9341 = !DILocation(line: 908, column: 83, scope: !9337)
!9342 = !DILocation(line: 908, column: 102, scope: !9337)
!9343 = !DILocation(line: 908, column: 105, scope: !9337)
!9344 = !DILocation(line: 908, column: 91, scope: !9337)
!9345 = !DILocation(line: 908, column: 109, scope: !9337)
!9346 = !DILocation(line: 908, column: 88, scope: !9337)
!9347 = !DILocation(line: 908, column: 23, scope: !9337)
!9348 = !DILocation(line: 908, column: 166, scope: !9337)
!9349 = !DILocation(line: 908, column: 133, scope: !9337)
!9350 = !DILocation(line: 908, column: 136, scope: !9337)
!9351 = !DILocation(line: 908, column: 148, scope: !9337)
!9352 = !DILocation(line: 908, column: 146, scope: !9337)
!9353 = !DILocation(line: 908, column: 159, scope: !9337)
!9354 = !DILocation(line: 908, column: 163, scope: !9337)
!9355 = !DILocation(line: 909, column: 17, scope: !9337)
!9356 = !DILocation(line: 910, column: 37, scope: !8933)
!9357 = !DILocation(line: 910, column: 40, scope: !8933)
!9358 = !DILocation(line: 910, column: 44, scope: !8933)
!9359 = !DILocation(line: 910, column: 26, scope: !8933)
!9360 = !DILocation(line: 414, column: 12, scope: !8908, inlinedAt: !8932)
!9361 = !DILocation(line: 414, column: 25, scope: !9362, inlinedAt: !8932)
!9362 = !DILexicalBlockFile(scope: !8908, file: !1882, discriminator: 1)
!9363 = !DILocation(line: 414, column: 28, scope: !9362, inlinedAt: !8932)
!9364 = !DILocation(line: 414, column: 16, scope: !9362, inlinedAt: !8932)
!9365 = !DILocation(line: 414, column: 12, scope: !9362, inlinedAt: !8932)
!9366 = !DILocation(line: 414, column: 12, scope: !9367, inlinedAt: !8932)
!9367 = !DILexicalBlockFile(scope: !8908, file: !1882, discriminator: 2)
!9368 = !DILocation(line: 414, column: 12, scope: !9369, inlinedAt: !8932)
!9369 = !DILexicalBlockFile(scope: !8908, file: !1882, discriminator: 3)
!9370 = !DILocation(line: 910, column: 23, scope: !8933)
!9371 = !DILocation(line: 911, column: 36, scope: !8933)
!9372 = !DILocation(line: 911, column: 39, scope: !8933)
!9373 = !DILocation(line: 911, column: 25, scope: !8933)
!9374 = !DILocation(line: 911, column: 23, scope: !8933)
!9375 = !DILocation(line: 912, column: 36, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !8933, file: !1677, line: 912, column: 25)
!9377 = !DILocation(line: 912, column: 39, scope: !9376)
!9378 = !DILocation(line: 912, column: 25, scope: !9376)
!9379 = !DILocation(line: 912, column: 25, scope: !8933)
!9380 = !DILocation(line: 913, column: 30, scope: !9376)
!9381 = !DILocation(line: 913, column: 29, scope: !9376)
!9382 = !DILocation(line: 913, column: 27, scope: !9376)
!9383 = !DILocation(line: 913, column: 25, scope: !9376)
!9384 = !DILocation(line: 914, column: 45, scope: !8933)
!9385 = !DILocation(line: 914, column: 34, scope: !8933)
!9386 = !DILocation(line: 914, column: 21, scope: !8933)
!9387 = !DILocation(line: 914, column: 24, scope: !8933)
!9388 = !DILocation(line: 914, column: 43, scope: !8933)
!9389 = !DILocation(line: 916, column: 21, scope: !8928)
!9390 = !DILocation(line: 916, column: 23, scope: !8928)
!9391 = !DILocation(line: 916, column: 21, scope: !8929)
!9392 = !DILocation(line: 917, column: 66, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !8928, file: !1677, line: 916, column: 29)
!9394 = !DILocation(line: 917, column: 47, scope: !9393)
!9395 = !DILocation(line: 917, column: 78, scope: !9393)
!9396 = !DILocation(line: 917, column: 76, scope: !9393)
!9397 = !DILocation(line: 917, column: 83, scope: !9393)
!9398 = !DILocation(line: 917, column: 102, scope: !9393)
!9399 = !DILocation(line: 917, column: 105, scope: !9393)
!9400 = !DILocation(line: 917, column: 91, scope: !9393)
!9401 = !DILocation(line: 917, column: 109, scope: !9393)
!9402 = !DILocation(line: 917, column: 88, scope: !9393)
!9403 = !DILocation(line: 917, column: 23, scope: !9393)
!9404 = !DILocation(line: 917, column: 170, scope: !9393)
!9405 = !DILocation(line: 917, column: 133, scope: !9393)
!9406 = !DILocation(line: 917, column: 136, scope: !9393)
!9407 = !DILocation(line: 917, column: 148, scope: !9393)
!9408 = !DILocation(line: 917, column: 146, scope: !9393)
!9409 = !DILocation(line: 917, column: 156, scope: !9393)
!9410 = !DILocation(line: 917, column: 163, scope: !9393)
!9411 = !DILocation(line: 917, column: 167, scope: !9393)
!9412 = !DILocation(line: 918, column: 17, scope: !9393)
!9413 = !DILocation(line: 919, column: 37, scope: !8927)
!9414 = !DILocation(line: 919, column: 40, scope: !8927)
!9415 = !DILocation(line: 919, column: 44, scope: !8927)
!9416 = !DILocation(line: 919, column: 26, scope: !8927)
!9417 = !DILocation(line: 414, column: 12, scope: !8908, inlinedAt: !8926)
!9418 = !DILocation(line: 414, column: 25, scope: !9362, inlinedAt: !8926)
!9419 = !DILocation(line: 414, column: 28, scope: !9362, inlinedAt: !8926)
!9420 = !DILocation(line: 414, column: 16, scope: !9362, inlinedAt: !8926)
!9421 = !DILocation(line: 414, column: 12, scope: !9362, inlinedAt: !8926)
!9422 = !DILocation(line: 414, column: 12, scope: !9367, inlinedAt: !8926)
!9423 = !DILocation(line: 414, column: 12, scope: !9369, inlinedAt: !8926)
!9424 = !DILocation(line: 919, column: 23, scope: !8927)
!9425 = !DILocation(line: 920, column: 36, scope: !8927)
!9426 = !DILocation(line: 920, column: 39, scope: !8927)
!9427 = !DILocation(line: 920, column: 25, scope: !8927)
!9428 = !DILocation(line: 920, column: 23, scope: !8927)
!9429 = !DILocation(line: 921, column: 36, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !8927, file: !1677, line: 921, column: 25)
!9431 = !DILocation(line: 921, column: 39, scope: !9430)
!9432 = !DILocation(line: 921, column: 25, scope: !9430)
!9433 = !DILocation(line: 921, column: 25, scope: !8927)
!9434 = !DILocation(line: 922, column: 30, scope: !9430)
!9435 = !DILocation(line: 922, column: 29, scope: !9430)
!9436 = !DILocation(line: 922, column: 27, scope: !9430)
!9437 = !DILocation(line: 922, column: 25, scope: !9430)
!9438 = !DILocation(line: 923, column: 47, scope: !8927)
!9439 = !DILocation(line: 923, column: 34, scope: !8927)
!9440 = !DILocation(line: 923, column: 41, scope: !8927)
!9441 = !DILocation(line: 923, column: 21, scope: !8927)
!9442 = !DILocation(line: 923, column: 24, scope: !8927)
!9443 = !DILocation(line: 923, column: 45, scope: !8927)
!9444 = !DILocation(line: 925, column: 13, scope: !8929)
!9445 = !DILocation(line: 926, column: 21, scope: !8915)
!9446 = !DILocation(line: 926, column: 23, scope: !8915)
!9447 = !DILocation(line: 926, column: 19, scope: !8915)
!9448 = !DILocation(line: 927, column: 21, scope: !8915)
!9449 = !DILocation(line: 927, column: 23, scope: !8915)
!9450 = !DILocation(line: 927, column: 19, scope: !8915)
!9451 = !DILocation(line: 928, column: 22, scope: !8915)
!9452 = !DILocation(line: 928, column: 19, scope: !8915)
!9453 = !DILocation(line: 929, column: 21, scope: !8914)
!9454 = !DILocation(line: 929, column: 23, scope: !8914)
!9455 = !DILocation(line: 929, column: 21, scope: !8915)
!9456 = !DILocation(line: 930, column: 66, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !8914, file: !1677, line: 929, column: 29)
!9458 = !DILocation(line: 930, column: 47, scope: !9457)
!9459 = !DILocation(line: 930, column: 78, scope: !9457)
!9460 = !DILocation(line: 930, column: 76, scope: !9457)
!9461 = !DILocation(line: 930, column: 83, scope: !9457)
!9462 = !DILocation(line: 930, column: 102, scope: !9457)
!9463 = !DILocation(line: 930, column: 105, scope: !9457)
!9464 = !DILocation(line: 930, column: 91, scope: !9457)
!9465 = !DILocation(line: 930, column: 109, scope: !9457)
!9466 = !DILocation(line: 930, column: 88, scope: !9457)
!9467 = !DILocation(line: 930, column: 23, scope: !9457)
!9468 = !DILocation(line: 930, column: 172, scope: !9457)
!9469 = !DILocation(line: 930, column: 133, scope: !9457)
!9470 = !DILocation(line: 930, column: 136, scope: !9457)
!9471 = !DILocation(line: 930, column: 148, scope: !9457)
!9472 = !DILocation(line: 930, column: 146, scope: !9457)
!9473 = !DILocation(line: 930, column: 160, scope: !9457)
!9474 = !DILocation(line: 930, column: 159, scope: !9457)
!9475 = !DILocation(line: 930, column: 158, scope: !9457)
!9476 = !DILocation(line: 930, column: 156, scope: !9457)
!9477 = !DILocation(line: 930, column: 165, scope: !9457)
!9478 = !DILocation(line: 930, column: 169, scope: !9457)
!9479 = !DILocation(line: 931, column: 17, scope: !9457)
!9480 = !DILocation(line: 932, column: 37, scope: !8913)
!9481 = !DILocation(line: 932, column: 40, scope: !8913)
!9482 = !DILocation(line: 932, column: 44, scope: !8913)
!9483 = !DILocation(line: 932, column: 26, scope: !8913)
!9484 = !DILocation(line: 414, column: 12, scope: !8908, inlinedAt: !8912)
!9485 = !DILocation(line: 414, column: 25, scope: !9362, inlinedAt: !8912)
!9486 = !DILocation(line: 414, column: 28, scope: !9362, inlinedAt: !8912)
!9487 = !DILocation(line: 414, column: 16, scope: !9362, inlinedAt: !8912)
!9488 = !DILocation(line: 414, column: 12, scope: !9362, inlinedAt: !8912)
!9489 = !DILocation(line: 414, column: 12, scope: !9367, inlinedAt: !8912)
!9490 = !DILocation(line: 414, column: 12, scope: !9369, inlinedAt: !8912)
!9491 = !DILocation(line: 932, column: 23, scope: !8913)
!9492 = !DILocation(line: 933, column: 36, scope: !8913)
!9493 = !DILocation(line: 933, column: 39, scope: !8913)
!9494 = !DILocation(line: 933, column: 25, scope: !8913)
!9495 = !DILocation(line: 933, column: 23, scope: !8913)
!9496 = !DILocation(line: 934, column: 36, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !8913, file: !1677, line: 934, column: 25)
!9498 = !DILocation(line: 934, column: 39, scope: !9497)
!9499 = !DILocation(line: 934, column: 25, scope: !9497)
!9500 = !DILocation(line: 934, column: 25, scope: !8913)
!9501 = !DILocation(line: 935, column: 30, scope: !9497)
!9502 = !DILocation(line: 935, column: 29, scope: !9497)
!9503 = !DILocation(line: 935, column: 27, scope: !9497)
!9504 = !DILocation(line: 935, column: 25, scope: !9497)
!9505 = !DILocation(line: 936, column: 49, scope: !8913)
!9506 = !DILocation(line: 936, column: 34, scope: !8913)
!9507 = !DILocation(line: 936, column: 44, scope: !8913)
!9508 = !DILocation(line: 936, column: 43, scope: !8913)
!9509 = !DILocation(line: 936, column: 42, scope: !8913)
!9510 = !DILocation(line: 936, column: 41, scope: !8913)
!9511 = !DILocation(line: 936, column: 21, scope: !8913)
!9512 = !DILocation(line: 936, column: 24, scope: !8913)
!9513 = !DILocation(line: 936, column: 47, scope: !8913)
!9514 = !DILocation(line: 938, column: 30, scope: !8915)
!9515 = !DILocation(line: 938, column: 41, scope: !8915)
!9516 = !DILocation(line: 938, column: 40, scope: !8915)
!9517 = !DILocation(line: 938, column: 38, scope: !8915)
!9518 = !DILocation(line: 938, column: 17, scope: !8915)
!9519 = !DILocation(line: 938, column: 20, scope: !8915)
!9520 = !DILocation(line: 938, column: 44, scope: !8915)
!9521 = !DILocation(line: 940, column: 21, scope: !8917)
!9522 = !DILocation(line: 941, column: 9, scope: !8917)
!9523 = !DILocation(line: 881, column: 24, scope: !9524)
!9524 = !DILexicalBlockFile(scope: !8918, file: !1677, discriminator: 2)
!9525 = !DILocation(line: 881, column: 9, scope: !9524)
!9526 = distinct !{!9526, !9051}
!9527 = !DILocation(line: 942, column: 5, scope: !8920)
!9528 = !DILocation(line: 863, column: 25, scope: !9529)
!9529 = !DILexicalBlockFile(scope: !8921, file: !1677, discriminator: 2)
!9530 = !DILocation(line: 863, column: 5, scope: !9529)
!9531 = distinct !{!9531, !9532}
!9532 = !DILocation(line: 863, column: 5, scope: !1856)
!9533 = !DILocation(line: 945, column: 26, scope: !1856)
!9534 = !DILocation(line: 945, column: 29, scope: !1856)
!9535 = !DILocation(line: 945, column: 12, scope: !1856)
!9536 = !DILocation(line: 945, column: 9, scope: !1856)
!9537 = !DILocation(line: 946, column: 14, scope: !1856)
!9538 = !DILocation(line: 947, column: 5, scope: !1856)
!9539 = !DILocation(line: 947, column: 12, scope: !8986)
!9540 = !DILocation(line: 947, column: 20, scope: !8986)
!9541 = !DILocation(line: 947, column: 5, scope: !8986)
!9542 = !DILocalVariable(name: "pos", scope: !8879, file: !1677, line: 948, type: !891)
!9543 = !DILocation(line: 948, column: 13, scope: !8879)
!9544 = !DILocalVariable(name: "code", scope: !8879, file: !1677, line: 948, type: !891)
!9545 = !DILocation(line: 948, column: 18, scope: !8879)
!9546 = !DILocation(line: 949, column: 31, scope: !8879)
!9547 = !DILocation(line: 949, column: 34, scope: !8879)
!9548 = !DILocation(line: 949, column: 15, scope: !8879)
!9549 = !DILocation(line: 949, column: 13, scope: !8879)
!9550 = !DILocation(line: 950, column: 13, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !8879, file: !1677, line: 950, column: 13)
!9552 = !DILocation(line: 950, column: 20, scope: !9551)
!9553 = !DILocation(line: 950, column: 17, scope: !9551)
!9554 = !DILocation(line: 950, column: 13, scope: !8879)
!9555 = !DILocation(line: 951, column: 17, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !1677, line: 951, column: 17)
!9557 = distinct !DILexicalBlock(scope: !9551, file: !1677, line: 950, column: 29)
!9558 = !DILocation(line: 951, column: 23, scope: !9556)
!9559 = !DILocation(line: 951, column: 21, scope: !9556)
!9560 = !DILocation(line: 951, column: 32, scope: !9556)
!9561 = !DILocation(line: 951, column: 35, scope: !9562)
!9562 = !DILexicalBlockFile(scope: !9556, file: !1677, discriminator: 1)
!9563 = !DILocation(line: 951, column: 17, scope: !9562)
!9564 = !DILocation(line: 954, column: 25, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9556, file: !1677, line: 951, column: 45)
!9566 = !DILocation(line: 955, column: 33, scope: !9565)
!9567 = !DILocation(line: 955, column: 36, scope: !9565)
!9568 = !DILocation(line: 955, column: 40, scope: !9565)
!9569 = !DILocation(line: 955, column: 51, scope: !9565)
!9570 = !DILocation(line: 955, column: 49, scope: !9565)
!9571 = !DILocation(line: 955, column: 17, scope: !9565)
!9572 = !DILocation(line: 956, column: 24, scope: !9565)
!9573 = !DILocation(line: 956, column: 27, scope: !9565)
!9574 = !DILocation(line: 956, column: 77, scope: !9565)
!9575 = !DILocation(line: 956, column: 88, scope: !9565)
!9576 = !DILocation(line: 956, column: 86, scope: !9565)
!9577 = !DILocation(line: 956, column: 93, scope: !9565)
!9578 = !DILocation(line: 956, column: 101, scope: !9565)
!9579 = !DILocation(line: 956, column: 100, scope: !9565)
!9580 = !DILocation(line: 956, column: 106, scope: !9565)
!9581 = !DILocation(line: 956, column: 115, scope: !9565)
!9582 = !DILocation(line: 956, column: 114, scope: !9565)
!9583 = !DILocation(line: 956, column: 17, scope: !9565)
!9584 = !DILocation(line: 957, column: 20, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9565, file: !1677, line: 957, column: 20)
!9586 = !DILocation(line: 957, column: 23, scope: !9585)
!9587 = !DILocation(line: 957, column: 39, scope: !9585)
!9588 = !DILocation(line: 957, column: 20, scope: !9565)
!9589 = !DILocation(line: 958, column: 28, scope: !9585)
!9590 = !DILocation(line: 958, column: 21, scope: !9585)
!9591 = !DILocation(line: 959, column: 17, scope: !9565)
!9592 = !DILocation(line: 961, column: 27, scope: !9557)
!9593 = !DILocation(line: 961, column: 13, scope: !9557)
!9594 = !DILocation(line: 962, column: 17, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9557, file: !1677, line: 962, column: 17)
!9596 = !DILocation(line: 962, column: 24, scope: !9595)
!9597 = !DILocation(line: 962, column: 21, scope: !9595)
!9598 = !DILocation(line: 962, column: 17, scope: !9557)
!9599 = !DILocation(line: 963, column: 17, scope: !9595)
!9600 = !DILocation(line: 964, column: 9, scope: !9557)
!9601 = !DILocation(line: 965, column: 20, scope: !8879)
!9602 = !DILocation(line: 965, column: 18, scope: !8879)
!9603 = !DILocation(line: 967, column: 26, scope: !8879)
!9604 = !DILocation(line: 967, column: 29, scope: !8879)
!9605 = !DILocation(line: 967, column: 33, scope: !8879)
!9606 = !DILocation(line: 967, column: 38, scope: !8879)
!9607 = !DILocation(line: 967, column: 45, scope: !8879)
!9608 = !DILocation(line: 967, column: 50, scope: !8879)
!9609 = !DILocation(line: 967, column: 16, scope: !8879)
!9610 = !DILocation(line: 785, column: 30, scope: !8875, inlinedAt: !8878)
!9611 = !DILocation(line: 785, column: 34, scope: !8875, inlinedAt: !8878)
!9612 = !DILocation(line: 785, column: 118, scope: !8875, inlinedAt: !8878)
!9613 = !DILocation(line: 785, column: 122, scope: !8875, inlinedAt: !8878)
!9614 = !DILocation(line: 786, column: 60, scope: !8875, inlinedAt: !8878)
!9615 = !DILocation(line: 786, column: 64, scope: !8875, inlinedAt: !8878)
!9616 = !DILocation(line: 786, column: 74, scope: !8875, inlinedAt: !8878)
!9617 = !DILocation(line: 786, column: 83, scope: !8875, inlinedAt: !8878)
!9618 = !DILocation(line: 786, column: 71, scope: !8875, inlinedAt: !8878)
!9619 = !DILocation(line: 786, column: 92, scope: !8875, inlinedAt: !8878)
!9620 = !DILocation(line: 786, column: 16, scope: !8875, inlinedAt: !8878)
!9621 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !8884)
!9622 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !8884)
!9623 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !8884)
!9624 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !8884)
!9625 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !8884)
!9626 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !8884)
!9627 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !8884)
!9628 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !8884)
!9629 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !8884)
!9630 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !8884)
!9631 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !8884)
!9632 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !8884)
!9633 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !8884)
!9634 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !8884)
!9635 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !8884)
!9636 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !8884)
!9637 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !8884)
!9638 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !8884)
!9639 = !DILocation(line: 786, column: 100, scope: !8875, inlinedAt: !8878)
!9640 = !DILocation(line: 786, column: 109, scope: !8875, inlinedAt: !8878)
!9641 = !DILocation(line: 786, column: 96, scope: !8875, inlinedAt: !8878)
!9642 = !DILocation(line: 786, column: 14, scope: !8875, inlinedAt: !8878)
!9643 = !DILocation(line: 788, column: 64, scope: !9123, inlinedAt: !8878)
!9644 = !DILocation(line: 788, column: 74, scope: !9123, inlinedAt: !8878)
!9645 = !DILocation(line: 788, column: 54, scope: !9123, inlinedAt: !8878)
!9646 = !DILocation(line: 788, column: 52, scope: !9123, inlinedAt: !8878)
!9647 = !DILocation(line: 788, column: 94, scope: !9123, inlinedAt: !8878)
!9648 = !DILocation(line: 788, column: 88, scope: !9123, inlinedAt: !8878)
!9649 = !DILocation(line: 788, column: 86, scope: !9123, inlinedAt: !8878)
!9650 = !DILocation(line: 788, column: 115, scope: !9123, inlinedAt: !8878)
!9651 = !DILocation(line: 788, column: 109, scope: !9123, inlinedAt: !8878)
!9652 = !DILocation(line: 788, column: 107, scope: !9123, inlinedAt: !8878)
!9653 = !DILocation(line: 788, column: 130, scope: !9123, inlinedAt: !8878)
!9654 = !DILocation(line: 788, column: 140, scope: !9123, inlinedAt: !8878)
!9655 = !DILocation(line: 788, column: 144, scope: !9123, inlinedAt: !8878)
!9656 = !DILocation(line: 788, column: 147, scope: !9137, inlinedAt: !8878)
!9657 = !DILocation(line: 788, column: 149, scope: !9137, inlinedAt: !8878)
!9658 = !DILocation(line: 788, column: 130, scope: !9137, inlinedAt: !8878)
!9659 = !DILocation(line: 788, column: 169, scope: !9141, inlinedAt: !8878)
!9660 = !DILocation(line: 788, column: 187, scope: !9141, inlinedAt: !8878)
!9661 = !DILocation(line: 788, column: 199, scope: !9141, inlinedAt: !8878)
!9662 = !DILocation(line: 788, column: 196, scope: !9141, inlinedAt: !8878)
!9663 = !DILocation(line: 788, column: 184, scope: !9141, inlinedAt: !8878)
!9664 = !DILocation(line: 788, column: 168, scope: !9141, inlinedAt: !8878)
!9665 = !DILocation(line: 788, column: 209, scope: !9148, inlinedAt: !8878)
!9666 = !DILocation(line: 788, column: 221, scope: !9148, inlinedAt: !8878)
!9667 = !DILocation(line: 788, column: 218, scope: !9148, inlinedAt: !8878)
!9668 = !DILocation(line: 788, column: 168, scope: !9148, inlinedAt: !8878)
!9669 = !DILocation(line: 788, column: 231, scope: !9153, inlinedAt: !8878)
!9670 = !DILocation(line: 788, column: 168, scope: !9153, inlinedAt: !8878)
!9671 = !DILocation(line: 788, column: 168, scope: !8882, inlinedAt: !8878)
!9672 = !DILocation(line: 788, column: 165, scope: !8882, inlinedAt: !8878)
!9673 = !DILocation(line: 788, column: 303, scope: !8882, inlinedAt: !8878)
!9674 = !DILocation(line: 788, column: 307, scope: !8882, inlinedAt: !8878)
!9675 = !DILocation(line: 788, column: 317, scope: !8882, inlinedAt: !8878)
!9676 = !DILocation(line: 788, column: 326, scope: !8882, inlinedAt: !8878)
!9677 = !DILocation(line: 788, column: 314, scope: !8882, inlinedAt: !8878)
!9678 = !DILocation(line: 788, column: 335, scope: !8882, inlinedAt: !8878)
!9679 = !DILocation(line: 788, column: 259, scope: !8882, inlinedAt: !8878)
!9680 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !8881)
!9681 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !8881)
!9682 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !8881)
!9683 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !8881)
!9684 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !8881)
!9685 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !8881)
!9686 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !8881)
!9687 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !8881)
!9688 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !8881)
!9689 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !8881)
!9690 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !8881)
!9691 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !8881)
!9692 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !8881)
!9693 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !8881)
!9694 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !8881)
!9695 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !8881)
!9696 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !8881)
!9697 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !8881)
!9698 = !DILocation(line: 788, column: 343, scope: !8882, inlinedAt: !8878)
!9699 = !DILocation(line: 788, column: 352, scope: !8882, inlinedAt: !8878)
!9700 = !DILocation(line: 788, column: 339, scope: !8882, inlinedAt: !8878)
!9701 = !DILocation(line: 788, column: 257, scope: !8882, inlinedAt: !8878)
!9702 = !DILocation(line: 788, column: 369, scope: !8882, inlinedAt: !8878)
!9703 = !DILocation(line: 788, column: 368, scope: !8882, inlinedAt: !8878)
!9704 = !DILocation(line: 788, column: 366, scope: !8882, inlinedAt: !8878)
!9705 = !DILocation(line: 788, column: 390, scope: !8882, inlinedAt: !8878)
!9706 = !DILocation(line: 788, column: 400, scope: !8882, inlinedAt: !8878)
!9707 = !DILocation(line: 788, column: 380, scope: !9192, inlinedAt: !8878)
!9708 = !DILocation(line: 788, column: 411, scope: !8882, inlinedAt: !8878)
!9709 = !DILocation(line: 788, column: 409, scope: !8882, inlinedAt: !8878)
!9710 = !DILocation(line: 788, column: 378, scope: !8882, inlinedAt: !8878)
!9711 = !DILocation(line: 788, column: 430, scope: !8882, inlinedAt: !8878)
!9712 = !DILocation(line: 788, column: 424, scope: !8882, inlinedAt: !8878)
!9713 = !DILocation(line: 788, column: 422, scope: !8882, inlinedAt: !8878)
!9714 = !DILocation(line: 788, column: 451, scope: !8882, inlinedAt: !8878)
!9715 = !DILocation(line: 788, column: 445, scope: !8882, inlinedAt: !8878)
!9716 = !DILocation(line: 788, column: 443, scope: !8882, inlinedAt: !8878)
!9717 = !DILocation(line: 788, column: 466, scope: !8882, inlinedAt: !8878)
!9718 = !DILocation(line: 788, column: 476, scope: !8882, inlinedAt: !8878)
!9719 = !DILocation(line: 788, column: 480, scope: !8882, inlinedAt: !8878)
!9720 = !DILocation(line: 788, column: 483, scope: !9206, inlinedAt: !8878)
!9721 = !DILocation(line: 788, column: 485, scope: !9206, inlinedAt: !8878)
!9722 = !DILocation(line: 788, column: 466, scope: !9206, inlinedAt: !8878)
!9723 = !DILocation(line: 788, column: 505, scope: !9210, inlinedAt: !8878)
!9724 = !DILocation(line: 788, column: 523, scope: !9210, inlinedAt: !8878)
!9725 = !DILocation(line: 788, column: 535, scope: !9210, inlinedAt: !8878)
!9726 = !DILocation(line: 788, column: 532, scope: !9210, inlinedAt: !8878)
!9727 = !DILocation(line: 788, column: 520, scope: !9210, inlinedAt: !8878)
!9728 = !DILocation(line: 788, column: 504, scope: !9210, inlinedAt: !8878)
!9729 = !DILocation(line: 788, column: 548, scope: !9217, inlinedAt: !8878)
!9730 = !DILocation(line: 788, column: 560, scope: !9217, inlinedAt: !8878)
!9731 = !DILocation(line: 788, column: 557, scope: !9217, inlinedAt: !8878)
!9732 = !DILocation(line: 788, column: 504, scope: !9217, inlinedAt: !8878)
!9733 = !DILocation(line: 788, column: 573, scope: !9222, inlinedAt: !8878)
!9734 = !DILocation(line: 788, column: 504, scope: !9222, inlinedAt: !8878)
!9735 = !DILocation(line: 788, column: 504, scope: !8869, inlinedAt: !8878)
!9736 = !DILocation(line: 788, column: 501, scope: !8869, inlinedAt: !8878)
!9737 = !DILocation(line: 788, column: 645, scope: !8869, inlinedAt: !8878)
!9738 = !DILocation(line: 788, column: 649, scope: !8869, inlinedAt: !8878)
!9739 = !DILocation(line: 788, column: 659, scope: !8869, inlinedAt: !8878)
!9740 = !DILocation(line: 788, column: 668, scope: !8869, inlinedAt: !8878)
!9741 = !DILocation(line: 788, column: 656, scope: !8869, inlinedAt: !8878)
!9742 = !DILocation(line: 788, column: 677, scope: !8869, inlinedAt: !8878)
!9743 = !DILocation(line: 788, column: 601, scope: !8869, inlinedAt: !8878)
!9744 = !DILocation(line: 68, column: 16, scope: !2096, inlinedAt: !8868)
!9745 = !DILocation(line: 68, column: 19, scope: !2096, inlinedAt: !8868)
!9746 = !DILocation(line: 68, column: 24, scope: !2096, inlinedAt: !8868)
!9747 = !DILocation(line: 68, column: 38, scope: !2096, inlinedAt: !8868)
!9748 = !DILocation(line: 68, column: 41, scope: !2096, inlinedAt: !8868)
!9749 = !DILocation(line: 68, column: 46, scope: !2096, inlinedAt: !8868)
!9750 = !DILocation(line: 68, column: 34, scope: !2096, inlinedAt: !8868)
!9751 = !DILocation(line: 68, column: 57, scope: !2096, inlinedAt: !8868)
!9752 = !DILocation(line: 68, column: 69, scope: !2096, inlinedAt: !8868)
!9753 = !DILocation(line: 68, column: 72, scope: !2096, inlinedAt: !8868)
!9754 = !DILocation(line: 68, column: 79, scope: !2096, inlinedAt: !8868)
!9755 = !DILocation(line: 68, column: 84, scope: !2096, inlinedAt: !8868)
!9756 = !DILocation(line: 68, column: 99, scope: !2096, inlinedAt: !8868)
!9757 = !DILocation(line: 68, column: 102, scope: !2096, inlinedAt: !8868)
!9758 = !DILocation(line: 68, column: 109, scope: !2096, inlinedAt: !8868)
!9759 = !DILocation(line: 68, column: 114, scope: !2096, inlinedAt: !8868)
!9760 = !DILocation(line: 68, column: 94, scope: !2096, inlinedAt: !8868)
!9761 = !DILocation(line: 68, column: 63, scope: !2096, inlinedAt: !8868)
!9762 = !DILocation(line: 788, column: 685, scope: !8869, inlinedAt: !8878)
!9763 = !DILocation(line: 788, column: 694, scope: !8869, inlinedAt: !8878)
!9764 = !DILocation(line: 788, column: 681, scope: !8869, inlinedAt: !8878)
!9765 = !DILocation(line: 788, column: 599, scope: !8869, inlinedAt: !8878)
!9766 = !DILocation(line: 788, column: 711, scope: !8869, inlinedAt: !8878)
!9767 = !DILocation(line: 788, column: 710, scope: !8869, inlinedAt: !8878)
!9768 = !DILocation(line: 788, column: 708, scope: !8869, inlinedAt: !8878)
!9769 = !DILocation(line: 788, column: 732, scope: !8869, inlinedAt: !8878)
!9770 = !DILocation(line: 788, column: 742, scope: !8869, inlinedAt: !8878)
!9771 = !DILocation(line: 788, column: 722, scope: !9261, inlinedAt: !8878)
!9772 = !DILocation(line: 788, column: 753, scope: !8869, inlinedAt: !8878)
!9773 = !DILocation(line: 788, column: 751, scope: !8869, inlinedAt: !8878)
!9774 = !DILocation(line: 788, column: 720, scope: !8869, inlinedAt: !8878)
!9775 = !DILocation(line: 788, column: 772, scope: !8869, inlinedAt: !8878)
!9776 = !DILocation(line: 788, column: 766, scope: !8869, inlinedAt: !8878)
!9777 = !DILocation(line: 788, column: 764, scope: !8869, inlinedAt: !8878)
!9778 = !DILocation(line: 788, column: 793, scope: !8869, inlinedAt: !8878)
!9779 = !DILocation(line: 788, column: 787, scope: !8869, inlinedAt: !8878)
!9780 = !DILocation(line: 788, column: 785, scope: !8869, inlinedAt: !8878)
!9781 = !DILocation(line: 788, column: 804, scope: !8869, inlinedAt: !8878)
!9782 = !DILocation(line: 788, column: 806, scope: !9273, inlinedAt: !8878)
!9783 = !DILocation(line: 788, column: 827, scope: !9275, inlinedAt: !8878)
!9784 = !DILocation(line: 788, column: 822, scope: !9275, inlinedAt: !8878)
!9785 = !DILocation(line: 788, column: 844, scope: !9275, inlinedAt: !8878)
!9786 = !DILocation(line: 788, column: 862, scope: !9275, inlinedAt: !8878)
!9787 = !DILocation(line: 788, column: 874, scope: !9275, inlinedAt: !8878)
!9788 = !DILocation(line: 788, column: 871, scope: !9275, inlinedAt: !8878)
!9789 = !DILocation(line: 788, column: 859, scope: !9275, inlinedAt: !8878)
!9790 = !DILocation(line: 788, column: 843, scope: !9275, inlinedAt: !8878)
!9791 = !DILocation(line: 788, column: 881, scope: !9285, inlinedAt: !8878)
!9792 = !DILocation(line: 788, column: 893, scope: !9285, inlinedAt: !8878)
!9793 = !DILocation(line: 788, column: 890, scope: !9285, inlinedAt: !8878)
!9794 = !DILocation(line: 788, column: 843, scope: !9285, inlinedAt: !8878)
!9795 = !DILocation(line: 788, column: 900, scope: !9290, inlinedAt: !8878)
!9796 = !DILocation(line: 788, column: 843, scope: !9290, inlinedAt: !8878)
!9797 = !DILocation(line: 788, column: 843, scope: !9293, inlinedAt: !8878)
!9798 = !DILocation(line: 788, column: 840, scope: !9293, inlinedAt: !8878)
!9799 = !DILocation(line: 790, column: 18, scope: !8875, inlinedAt: !8878)
!9800 = !DILocation(line: 790, column: 6, scope: !8875, inlinedAt: !8878)
!9801 = !DILocation(line: 790, column: 10, scope: !8875, inlinedAt: !8878)
!9802 = !DILocation(line: 790, column: 16, scope: !8875, inlinedAt: !8878)
!9803 = !DILocation(line: 792, column: 12, scope: !8875, inlinedAt: !8878)
!9804 = !DILocation(line: 967, column: 14, scope: !8879)
!9805 = !DILocation(line: 968, column: 9, scope: !8879)
!9806 = distinct !{!9806, !9805}
!9807 = !DILocation(line: 968, column: 90, scope: !9808)
!9808 = !DILexicalBlockFile(scope: !9809, file: !1677, discriminator: 1)
!9809 = distinct !DILexicalBlock(scope: !8879, file: !1677, line: 968, column: 12)
!9810 = !DILocation(line: 972, column: 22, scope: !8879)
!9811 = !DILocation(line: 972, column: 29, scope: !8879)
!9812 = !DILocation(line: 972, column: 9, scope: !8879)
!9813 = !DILocation(line: 972, column: 12, scope: !8879)
!9814 = !DILocation(line: 972, column: 33, scope: !8879)
!9815 = !DILocation(line: 971, column: 22, scope: !8879)
!9816 = !DILocation(line: 971, column: 29, scope: !8879)
!9817 = !DILocation(line: 971, column: 9, scope: !8879)
!9818 = !DILocation(line: 971, column: 12, scope: !8879)
!9819 = !DILocation(line: 971, column: 33, scope: !8879)
!9820 = !DILocation(line: 970, column: 22, scope: !8879)
!9821 = !DILocation(line: 970, column: 29, scope: !8879)
!9822 = !DILocation(line: 970, column: 9, scope: !8879)
!9823 = !DILocation(line: 970, column: 12, scope: !8879)
!9824 = !DILocation(line: 970, column: 33, scope: !8879)
!9825 = !DILocation(line: 969, column: 22, scope: !8879)
!9826 = !DILocation(line: 969, column: 29, scope: !8879)
!9827 = !DILocation(line: 969, column: 9, scope: !8879)
!9828 = !DILocation(line: 969, column: 12, scope: !8879)
!9829 = !DILocation(line: 969, column: 33, scope: !8879)
!9830 = !DILocation(line: 973, column: 9, scope: !8879)
!9831 = !DILocation(line: 973, column: 16, scope: !9832)
!9832 = !DILexicalBlockFile(scope: !8879, file: !1677, discriminator: 1)
!9833 = !DILocation(line: 973, column: 9, scope: !9832)
!9834 = !DILocalVariable(name: "v", scope: !9835, file: !1677, line: 975, type: !891)
!9835 = distinct !DILexicalBlock(scope: !8879, file: !1677, line: 973, column: 22)
!9836 = !DILocation(line: 975, column: 17, scope: !9835)
!9837 = !DILocalVariable(name: "pos", scope: !9835, file: !1677, line: 976, type: !891)
!9838 = !DILocation(line: 976, column: 17, scope: !9835)
!9839 = !DILocation(line: 976, column: 23, scope: !9835)
!9840 = !DILocation(line: 976, column: 40, scope: !9835)
!9841 = !DILocation(line: 976, column: 33, scope: !9835)
!9842 = !DILocation(line: 976, column: 31, scope: !9835)
!9843 = !DILocation(line: 977, column: 33, scope: !9835)
!9844 = !DILocation(line: 977, column: 26, scope: !9835)
!9845 = !DILocation(line: 977, column: 23, scope: !9835)
!9846 = !DILocation(line: 977, column: 18, scope: !9835)
!9847 = !DILocation(line: 978, column: 65, scope: !9835)
!9848 = !DILocation(line: 978, column: 55, scope: !9835)
!9849 = !DILocation(line: 978, column: 54, scope: !9835)
!9850 = !DILocation(line: 978, column: 73, scope: !9835)
!9851 = !DILocation(line: 978, column: 92, scope: !9835)
!9852 = !DILocation(line: 978, column: 95, scope: !9835)
!9853 = !DILocation(line: 978, column: 81, scope: !9835)
!9854 = !DILocation(line: 978, column: 99, scope: !9835)
!9855 = !DILocation(line: 978, column: 78, scope: !9835)
!9856 = !DILocation(line: 978, column: 15, scope: !9835)
!9857 = !DILocation(line: 978, column: 152, scope: !9835)
!9858 = !DILocation(line: 978, column: 123, scope: !9835)
!9859 = !DILocation(line: 978, column: 126, scope: !9835)
!9860 = !DILocation(line: 978, column: 138, scope: !9835)
!9861 = !DILocation(line: 978, column: 136, scope: !9835)
!9862 = !DILocation(line: 978, column: 145, scope: !9835)
!9863 = !DILocation(line: 978, column: 149, scope: !9835)
!9864 = !DILocation(line: 973, column: 9, scope: !9865)
!9865 = !DILexicalBlockFile(scope: !8879, file: !1677, discriminator: 2)
!9866 = distinct !{!9866, !9830}
!9867 = !DILocation(line: 980, column: 17, scope: !8879)
!9868 = !DILocation(line: 947, column: 5, scope: !8995)
!9869 = distinct !{!9869, !9538}
!9870 = !DILocation(line: 983, column: 17, scope: !1856)
!9871 = !DILocation(line: 983, column: 44, scope: !1856)
!9872 = !DILocation(line: 983, column: 47, scope: !1856)
!9873 = !DILocation(line: 983, column: 28, scope: !1856)
!9874 = !DILocation(line: 983, column: 26, scope: !1856)
!9875 = !DILocation(line: 983, column: 15, scope: !1856)
!9876 = !DILocation(line: 984, column: 9, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !1856, file: !1677, line: 984, column: 9)
!9878 = !DILocation(line: 984, column: 19, scope: !9877)
!9879 = !DILocation(line: 984, column: 23, scope: !9877)
!9880 = !DILocation(line: 984, column: 27, scope: !9881)
!9881 = !DILexicalBlockFile(scope: !9877, file: !1677, discriminator: 1)
!9882 = !DILocation(line: 984, column: 30, scope: !9881)
!9883 = !DILocation(line: 984, column: 46, scope: !9881)
!9884 = !DILocation(line: 984, column: 9, scope: !9881)
!9885 = !DILocation(line: 985, column: 16, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9877, file: !1677, line: 984, column: 67)
!9887 = !DILocation(line: 985, column: 19, scope: !9886)
!9888 = !DILocation(line: 985, column: 48, scope: !9886)
!9889 = !DILocation(line: 985, column: 9, scope: !9886)
!9890 = !DILocation(line: 986, column: 16, scope: !9886)
!9891 = !DILocation(line: 987, column: 5, scope: !9886)
!9892 = !DILocation(line: 987, column: 16, scope: !9893)
!9893 = !DILexicalBlockFile(scope: !9894, file: !1677, discriminator: 1)
!9894 = distinct !DILexicalBlock(scope: !9877, file: !1677, line: 987, column: 16)
!9895 = !DILocation(line: 987, column: 26, scope: !9893)
!9896 = !DILocation(line: 987, column: 30, scope: !9893)
!9897 = !DILocation(line: 987, column: 34, scope: !9898)
!9898 = !DILexicalBlockFile(scope: !9894, file: !1677, discriminator: 2)
!9899 = !DILocation(line: 987, column: 37, scope: !9898)
!9900 = !DILocation(line: 987, column: 53, scope: !9898)
!9901 = !DILocation(line: 987, column: 16, scope: !9898)
!9902 = !DILocation(line: 988, column: 16, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9894, file: !1677, line: 987, column: 74)
!9904 = !DILocation(line: 988, column: 19, scope: !9903)
!9905 = !DILocation(line: 988, column: 48, scope: !9903)
!9906 = !DILocation(line: 988, column: 9, scope: !9903)
!9907 = !DILocation(line: 989, column: 17, scope: !9903)
!9908 = !DILocation(line: 990, column: 5, scope: !9903)
!9909 = !DILocation(line: 991, column: 26, scope: !1856)
!9910 = !DILocation(line: 991, column: 13, scope: !1856)
!9911 = !DILocation(line: 991, column: 16, scope: !1856)
!9912 = !DILocation(line: 991, column: 5, scope: !1856)
!9913 = !DILocation(line: 991, column: 70, scope: !1856)
!9914 = !DILocation(line: 991, column: 68, scope: !1856)
!9915 = !DILocation(line: 991, column: 63, scope: !1856)
!9916 = !DILocation(line: 991, column: 61, scope: !1856)
!9917 = !DILocation(line: 992, column: 21, scope: !1856)
!9918 = !DILocation(line: 992, column: 24, scope: !1856)
!9919 = !DILocation(line: 992, column: 28, scope: !1856)
!9920 = !DILocation(line: 992, column: 5, scope: !1856)
!9921 = !DILocation(line: 994, column: 25, scope: !1856)
!9922 = !DILocation(line: 994, column: 28, scope: !1856)
!9923 = !DILocation(line: 994, column: 9, scope: !1856)
!9924 = !DILocation(line: 994, column: 7, scope: !1856)
!9925 = !DILocation(line: 995, column: 19, scope: !1856)
!9926 = !DILocation(line: 995, column: 5, scope: !1856)
!9927 = !DILocation(line: 997, column: 5, scope: !1856)
!9928 = distinct !DISubprogram(name: "compute_stereo", scope: !1677, file: !1677, line: 1038, type: !9929, isLocal: true, isDefinition: true, scopeLine: 1039, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!9929 = !DISubroutineType(types: !9930)
!9930 = !{null, !1859, !2014, !2014}
!9931 = !DILocalVariable(name: "s", arg: 1, scope: !9928, file: !1677, line: 1038, type: !1859)
!9932 = !DILocation(line: 1038, column: 46, scope: !9928)
!9933 = !DILocalVariable(name: "g0", arg: 2, scope: !9928, file: !1677, line: 1038, type: !2014)
!9934 = !DILocation(line: 1038, column: 61, scope: !9928)
!9935 = !DILocalVariable(name: "g1", arg: 3, scope: !9928, file: !1677, line: 1038, type: !2014)
!9936 = !DILocation(line: 1038, column: 77, scope: !9928)
!9937 = !DILocalVariable(name: "i", scope: !9928, file: !1677, line: 1040, type: !891)
!9938 = !DILocation(line: 1040, column: 9, scope: !9928)
!9939 = !DILocalVariable(name: "j", scope: !9928, file: !1677, line: 1040, type: !891)
!9940 = !DILocation(line: 1040, column: 12, scope: !9928)
!9941 = !DILocalVariable(name: "k", scope: !9928, file: !1677, line: 1040, type: !891)
!9942 = !DILocation(line: 1040, column: 15, scope: !9928)
!9943 = !DILocalVariable(name: "l", scope: !9928, file: !1677, line: 1040, type: !891)
!9944 = !DILocation(line: 1040, column: 18, scope: !9928)
!9945 = !DILocalVariable(name: "sf_max", scope: !9928, file: !1677, line: 1041, type: !891)
!9946 = !DILocation(line: 1041, column: 9, scope: !9928)
!9947 = !DILocalVariable(name: "sf", scope: !9928, file: !1677, line: 1041, type: !891)
!9948 = !DILocation(line: 1041, column: 17, scope: !9928)
!9949 = !DILocalVariable(name: "len", scope: !9928, file: !1677, line: 1041, type: !891)
!9950 = !DILocation(line: 1041, column: 21, scope: !9928)
!9951 = !DILocalVariable(name: "non_zero_found", scope: !9928, file: !1677, line: 1041, type: !891)
!9952 = !DILocation(line: 1041, column: 26, scope: !9928)
!9953 = !DILocalVariable(name: "is_tab", scope: !9928, file: !1677, line: 1042, type: !9954)
!9954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9955, size: 64, align: 64)
!9955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 512, align: 32, elements: !1700)
!9956 = !DILocation(line: 1042, column: 13, scope: !9928)
!9957 = !DILocalVariable(name: "tab0", scope: !9928, file: !1677, line: 1042, type: !1949)
!9958 = !DILocation(line: 1042, column: 27, scope: !9928)
!9959 = !DILocalVariable(name: "tab1", scope: !9928, file: !1677, line: 1042, type: !1949)
!9960 = !DILocation(line: 1042, column: 34, scope: !9928)
!9961 = !DILocalVariable(name: "v1", scope: !9928, file: !1677, line: 1042, type: !888)
!9962 = !DILocation(line: 1042, column: 40, scope: !9928)
!9963 = !DILocalVariable(name: "v2", scope: !9928, file: !1677, line: 1042, type: !888)
!9964 = !DILocation(line: 1042, column: 44, scope: !9928)
!9965 = !DILocalVariable(name: "tmp0", scope: !9928, file: !1677, line: 1043, type: !888)
!9966 = !DILocation(line: 1043, column: 11, scope: !9928)
!9967 = !DILocalVariable(name: "tmp1", scope: !9928, file: !1677, line: 1043, type: !888)
!9968 = !DILocation(line: 1043, column: 17, scope: !9928)
!9969 = !DILocalVariable(name: "non_zero_found_short", scope: !9928, file: !1677, line: 1044, type: !1919)
!9970 = !DILocation(line: 1044, column: 9, scope: !9928)
!9971 = !DILocation(line: 1047, column: 9, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9928, file: !1677, line: 1047, column: 9)
!9973 = !DILocation(line: 1047, column: 12, scope: !9972)
!9974 = !DILocation(line: 1047, column: 21, scope: !9972)
!9975 = !DILocation(line: 1047, column: 9, scope: !9928)
!9976 = !DILocation(line: 1048, column: 14, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !1677, line: 1048, column: 13)
!9978 = distinct !DILexicalBlock(scope: !9972, file: !1677, line: 1047, column: 26)
!9979 = !DILocation(line: 1048, column: 17, scope: !9977)
!9980 = !DILocation(line: 1048, column: 13, scope: !9978)
!9981 = !DILocation(line: 1049, column: 20, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9977, file: !1677, line: 1048, column: 22)
!9983 = !DILocation(line: 1050, column: 20, scope: !9982)
!9984 = !DILocation(line: 1051, column: 9, scope: !9982)
!9985 = !DILocation(line: 1052, column: 35, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9977, file: !1677, line: 1051, column: 16)
!9987 = !DILocation(line: 1052, column: 39, scope: !9986)
!9988 = !DILocation(line: 1052, column: 57, scope: !9986)
!9989 = !DILocation(line: 1052, column: 22, scope: !9986)
!9990 = !DILocation(line: 1052, column: 20, scope: !9986)
!9991 = !DILocation(line: 1053, column: 20, scope: !9986)
!9992 = !DILocation(line: 1056, column: 16, scope: !9978)
!9993 = !DILocation(line: 1056, column: 20, scope: !9978)
!9994 = !DILocation(line: 1056, column: 30, scope: !9978)
!9995 = !DILocation(line: 1056, column: 14, scope: !9978)
!9996 = !DILocation(line: 1057, column: 16, scope: !9978)
!9997 = !DILocation(line: 1057, column: 20, scope: !9978)
!9998 = !DILocation(line: 1057, column: 30, scope: !9978)
!9999 = !DILocation(line: 1057, column: 14, scope: !9978)
!10000 = !DILocation(line: 1059, column: 9, scope: !9978)
!10001 = !DILocation(line: 1059, column: 33, scope: !9978)
!10002 = !DILocation(line: 1060, column: 9, scope: !9978)
!10003 = !DILocation(line: 1060, column: 33, scope: !9978)
!10004 = !DILocation(line: 1061, column: 9, scope: !9978)
!10005 = !DILocation(line: 1061, column: 33, scope: !9978)
!10006 = !DILocation(line: 1062, column: 19, scope: !9978)
!10007 = !DILocation(line: 1062, column: 23, scope: !9978)
!10008 = !DILocation(line: 1062, column: 17, scope: !9978)
!10009 = !DILocation(line: 1062, column: 36, scope: !9978)
!10010 = !DILocation(line: 1062, column: 42, scope: !9978)
!10011 = !DILocation(line: 1062, column: 46, scope: !9978)
!10012 = !DILocation(line: 1062, column: 40, scope: !9978)
!10013 = !DILocation(line: 1062, column: 55, scope: !9978)
!10014 = !DILocation(line: 1062, column: 11, scope: !9978)
!10015 = !DILocation(line: 1063, column: 16, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9978, file: !1677, line: 1063, column: 9)
!10017 = !DILocation(line: 1063, column: 14, scope: !10016)
!10018 = !DILocation(line: 1063, column: 22, scope: !10019)
!10019 = !DILexicalBlockFile(scope: !10020, file: !1677, discriminator: 1)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !1677, line: 1063, column: 9)
!10021 = !DILocation(line: 1063, column: 27, scope: !10019)
!10022 = !DILocation(line: 1063, column: 31, scope: !10019)
!10023 = !DILocation(line: 1063, column: 24, scope: !10019)
!10024 = !DILocation(line: 1063, column: 9, scope: !10019)
!10025 = !DILocation(line: 1065, column: 17, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !1677, line: 1065, column: 17)
!10027 = distinct !DILexicalBlock(scope: !10020, file: !1677, line: 1063, column: 49)
!10028 = !DILocation(line: 1065, column: 19, scope: !10026)
!10029 = !DILocation(line: 1065, column: 17, scope: !10027)
!10030 = !DILocation(line: 1066, column: 19, scope: !10026)
!10031 = !DILocation(line: 1066, column: 17, scope: !10026)
!10032 = !DILocation(line: 1067, column: 57, scope: !10027)
!10033 = !DILocation(line: 1067, column: 19, scope: !10027)
!10034 = !DILocation(line: 1067, column: 35, scope: !10027)
!10035 = !DILocation(line: 1067, column: 38, scope: !10027)
!10036 = !DILocation(line: 1067, column: 17, scope: !10027)
!10037 = !DILocation(line: 1068, column: 20, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10027, file: !1677, line: 1068, column: 13)
!10039 = !DILocation(line: 1068, column: 18, scope: !10038)
!10040 = !DILocation(line: 1068, column: 25, scope: !10041)
!10041 = !DILexicalBlockFile(scope: !10042, file: !1677, discriminator: 1)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !1677, line: 1068, column: 13)
!10043 = !DILocation(line: 1068, column: 27, scope: !10041)
!10044 = !DILocation(line: 1068, column: 13, scope: !10041)
!10045 = !DILocation(line: 1069, column: 25, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10042, file: !1677, line: 1068, column: 38)
!10047 = !DILocation(line: 1069, column: 22, scope: !10046)
!10048 = !DILocation(line: 1070, column: 25, scope: !10046)
!10049 = !DILocation(line: 1070, column: 22, scope: !10046)
!10050 = !DILocation(line: 1071, column: 43, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10046, file: !1677, line: 1071, column: 21)
!10052 = !DILocation(line: 1071, column: 22, scope: !10051)
!10053 = !DILocation(line: 1071, column: 21, scope: !10046)
!10054 = !DILocation(line: 1073, column: 28, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10056, file: !1677, line: 1073, column: 21)
!10056 = distinct !DILexicalBlock(scope: !10051, file: !1677, line: 1071, column: 47)
!10057 = !DILocation(line: 1073, column: 26, scope: !10055)
!10058 = !DILocation(line: 1073, column: 33, scope: !10059)
!10059 = !DILexicalBlockFile(scope: !10060, file: !1677, discriminator: 1)
!10060 = distinct !DILexicalBlock(scope: !10055, file: !1677, line: 1073, column: 21)
!10061 = !DILocation(line: 1073, column: 37, scope: !10059)
!10062 = !DILocation(line: 1073, column: 35, scope: !10059)
!10063 = !DILocation(line: 1073, column: 21, scope: !10059)
!10064 = !DILocation(line: 1074, column: 34, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !1677, line: 1074, column: 29)
!10066 = distinct !DILexicalBlock(scope: !10060, file: !1677, line: 1073, column: 47)
!10067 = !DILocation(line: 1074, column: 29, scope: !10065)
!10068 = !DILocation(line: 1074, column: 37, scope: !10065)
!10069 = !DILocation(line: 1074, column: 29, scope: !10066)
!10070 = !DILocation(line: 1075, column: 50, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10065, file: !1677, line: 1074, column: 43)
!10072 = !DILocation(line: 1075, column: 29, scope: !10071)
!10073 = !DILocation(line: 1075, column: 53, scope: !10071)
!10074 = !DILocation(line: 1076, column: 29, scope: !10071)
!10075 = !DILocation(line: 1078, column: 21, scope: !10066)
!10076 = !DILocation(line: 1073, column: 43, scope: !10077)
!10077 = !DILexicalBlockFile(scope: !10060, file: !1677, discriminator: 2)
!10078 = !DILocation(line: 1073, column: 21, scope: !10077)
!10079 = distinct !{!10079, !10080}
!10080 = !DILocation(line: 1073, column: 21, scope: !10056)
!10081 = !DILocation(line: 1079, column: 44, scope: !10056)
!10082 = !DILocation(line: 1079, column: 48, scope: !10056)
!10083 = !DILocation(line: 1079, column: 46, scope: !10056)
!10084 = !DILocation(line: 1079, column: 26, scope: !10056)
!10085 = !DILocation(line: 1079, column: 30, scope: !10056)
!10086 = !DILocation(line: 1079, column: 24, scope: !10056)
!10087 = !DILocation(line: 1080, column: 25, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10056, file: !1677, line: 1080, column: 25)
!10089 = !DILocation(line: 1080, column: 31, scope: !10088)
!10090 = !DILocation(line: 1080, column: 28, scope: !10088)
!10091 = !DILocation(line: 1080, column: 25, scope: !10056)
!10092 = !DILocation(line: 1081, column: 25, scope: !10088)
!10093 = !DILocation(line: 1083, column: 36, scope: !10056)
!10094 = !DILocation(line: 1083, column: 26, scope: !10056)
!10095 = !DILocation(line: 1083, column: 24, scope: !10056)
!10096 = !DILocation(line: 1084, column: 36, scope: !10056)
!10097 = !DILocation(line: 1084, column: 26, scope: !10056)
!10098 = !DILocation(line: 1084, column: 24, scope: !10056)
!10099 = !DILocation(line: 1085, column: 28, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10056, file: !1677, line: 1085, column: 21)
!10101 = !DILocation(line: 1085, column: 26, scope: !10100)
!10102 = !DILocation(line: 1085, column: 33, scope: !10103)
!10103 = !DILexicalBlockFile(scope: !10104, file: !1677, discriminator: 1)
!10104 = distinct !DILexicalBlock(scope: !10100, file: !1677, line: 1085, column: 21)
!10105 = !DILocation(line: 1085, column: 37, scope: !10103)
!10106 = !DILocation(line: 1085, column: 35, scope: !10103)
!10107 = !DILocation(line: 1085, column: 21, scope: !10103)
!10108 = !DILocation(line: 1086, column: 37, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10104, file: !1677, line: 1085, column: 47)
!10110 = !DILocation(line: 1086, column: 32, scope: !10109)
!10111 = !DILocation(line: 1086, column: 30, scope: !10109)
!10112 = !DILocation(line: 1087, column: 37, scope: !10109)
!10113 = !DILocation(line: 1087, column: 42, scope: !10109)
!10114 = !DILocation(line: 1087, column: 40, scope: !10109)
!10115 = !DILocation(line: 1087, column: 30, scope: !10109)
!10116 = !DILocation(line: 1087, column: 25, scope: !10109)
!10117 = !DILocation(line: 1087, column: 33, scope: !10109)
!10118 = !DILocation(line: 1088, column: 37, scope: !10109)
!10119 = !DILocation(line: 1088, column: 42, scope: !10109)
!10120 = !DILocation(line: 1088, column: 40, scope: !10109)
!10121 = !DILocation(line: 1088, column: 30, scope: !10109)
!10122 = !DILocation(line: 1088, column: 25, scope: !10109)
!10123 = !DILocation(line: 1088, column: 33, scope: !10109)
!10124 = !DILocation(line: 1089, column: 21, scope: !10109)
!10125 = !DILocation(line: 1085, column: 43, scope: !10126)
!10126 = !DILexicalBlockFile(scope: !10104, file: !1677, discriminator: 2)
!10127 = !DILocation(line: 1085, column: 21, scope: !10126)
!10128 = distinct !{!10128, !10129}
!10129 = !DILocation(line: 1085, column: 21, scope: !10056)
!10130 = !DILocation(line: 1090, column: 17, scope: !10056)
!10131 = !DILocation(line: 1090, column: 24, scope: !10132)
!10132 = !DILexicalBlockFile(scope: !10051, file: !1677, discriminator: 1)
!10133 = !DILocation(line: 1092, column: 25, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10135, file: !1677, line: 1092, column: 25)
!10135 = distinct !DILexicalBlock(scope: !10051, file: !1677, line: 1090, column: 24)
!10136 = !DILocation(line: 1092, column: 28, scope: !10134)
!10137 = !DILocation(line: 1092, column: 37, scope: !10134)
!10138 = !DILocation(line: 1092, column: 25, scope: !10135)
!10139 = !DILocation(line: 1095, column: 32, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !1677, line: 1095, column: 25)
!10141 = distinct !DILexicalBlock(scope: !10134, file: !1677, line: 1092, column: 42)
!10142 = !DILocation(line: 1095, column: 30, scope: !10140)
!10143 = !DILocation(line: 1095, column: 37, scope: !10144)
!10144 = !DILexicalBlockFile(scope: !10145, file: !1677, discriminator: 1)
!10145 = distinct !DILexicalBlock(scope: !10140, file: !1677, line: 1095, column: 25)
!10146 = !DILocation(line: 1095, column: 41, scope: !10144)
!10147 = !DILocation(line: 1095, column: 39, scope: !10144)
!10148 = !DILocation(line: 1095, column: 25, scope: !10144)
!10149 = !DILocation(line: 1096, column: 41, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10145, file: !1677, line: 1095, column: 51)
!10151 = !DILocation(line: 1096, column: 36, scope: !10150)
!10152 = !DILocation(line: 1096, column: 34, scope: !10150)
!10153 = !DILocation(line: 1097, column: 41, scope: !10150)
!10154 = !DILocation(line: 1097, column: 36, scope: !10150)
!10155 = !DILocation(line: 1097, column: 34, scope: !10150)
!10156 = !DILocation(line: 1098, column: 77, scope: !10150)
!10157 = !DILocation(line: 1098, column: 84, scope: !10150)
!10158 = !DILocation(line: 1098, column: 82, scope: !10150)
!10159 = !DILocation(line: 1098, column: 75, scope: !10150)
!10160 = !DILocation(line: 1098, column: 34, scope: !10150)
!10161 = !DILocation(line: 1098, column: 29, scope: !10150)
!10162 = !DILocation(line: 1098, column: 37, scope: !10150)
!10163 = !DILocation(line: 1099, column: 77, scope: !10150)
!10164 = !DILocation(line: 1099, column: 84, scope: !10150)
!10165 = !DILocation(line: 1099, column: 82, scope: !10150)
!10166 = !DILocation(line: 1099, column: 75, scope: !10150)
!10167 = !DILocation(line: 1099, column: 34, scope: !10150)
!10168 = !DILocation(line: 1099, column: 29, scope: !10150)
!10169 = !DILocation(line: 1099, column: 37, scope: !10150)
!10170 = !DILocation(line: 1100, column: 25, scope: !10150)
!10171 = !DILocation(line: 1095, column: 47, scope: !10172)
!10172 = !DILexicalBlockFile(scope: !10145, file: !1677, discriminator: 2)
!10173 = !DILocation(line: 1095, column: 25, scope: !10172)
!10174 = distinct !{!10174, !10175}
!10175 = !DILocation(line: 1095, column: 25, scope: !10141)
!10176 = !DILocation(line: 1101, column: 21, scope: !10141)
!10177 = !DILocation(line: 1103, column: 13, scope: !10046)
!10178 = !DILocation(line: 1068, column: 34, scope: !10179)
!10179 = !DILexicalBlockFile(scope: !10042, file: !1677, discriminator: 2)
!10180 = !DILocation(line: 1068, column: 13, scope: !10179)
!10181 = distinct !{!10181, !10182}
!10182 = !DILocation(line: 1068, column: 13, scope: !10027)
!10183 = !DILocation(line: 1104, column: 9, scope: !10027)
!10184 = !DILocation(line: 1063, column: 45, scope: !10185)
!10185 = !DILexicalBlockFile(scope: !10020, file: !1677, discriminator: 2)
!10186 = !DILocation(line: 1063, column: 9, scope: !10185)
!10187 = distinct !{!10187, !10188}
!10188 = !DILocation(line: 1063, column: 9, scope: !9978)
!10189 = !DILocation(line: 1106, column: 26, scope: !9978)
!10190 = !DILocation(line: 1107, column: 26, scope: !9978)
!10191 = !DILocation(line: 1106, column: 50, scope: !9978)
!10192 = !DILocation(line: 1108, column: 26, scope: !9978)
!10193 = !DILocation(line: 1107, column: 50, scope: !9978)
!10194 = !DILocation(line: 1106, column: 24, scope: !9978)
!10195 = !DILocation(line: 1110, column: 18, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !9978, file: !1677, line: 1110, column: 9)
!10197 = !DILocation(line: 1110, column: 22, scope: !10196)
!10198 = !DILocation(line: 1110, column: 31, scope: !10196)
!10199 = !DILocation(line: 1110, column: 16, scope: !10196)
!10200 = !DILocation(line: 1110, column: 14, scope: !10196)
!10201 = !DILocation(line: 1110, column: 35, scope: !10202)
!10202 = !DILexicalBlockFile(scope: !10203, file: !1677, discriminator: 1)
!10203 = distinct !DILexicalBlock(scope: !10196, file: !1677, line: 1110, column: 9)
!10204 = !DILocation(line: 1110, column: 37, scope: !10202)
!10205 = !DILocation(line: 1110, column: 9, scope: !10202)
!10206 = !DILocation(line: 1111, column: 56, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10203, file: !1677, line: 1110, column: 47)
!10208 = !DILocation(line: 1111, column: 19, scope: !10207)
!10209 = !DILocation(line: 1111, column: 34, scope: !10207)
!10210 = !DILocation(line: 1111, column: 37, scope: !10207)
!10211 = !DILocation(line: 1111, column: 17, scope: !10207)
!10212 = !DILocation(line: 1112, column: 21, scope: !10207)
!10213 = !DILocation(line: 1112, column: 18, scope: !10207)
!10214 = !DILocation(line: 1113, column: 21, scope: !10207)
!10215 = !DILocation(line: 1113, column: 18, scope: !10207)
!10216 = !DILocation(line: 1115, column: 18, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10207, file: !1677, line: 1115, column: 17)
!10218 = !DILocation(line: 1115, column: 17, scope: !10207)
!10219 = !DILocation(line: 1116, column: 24, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !1677, line: 1116, column: 17)
!10221 = distinct !DILexicalBlock(scope: !10217, file: !1677, line: 1115, column: 34)
!10222 = !DILocation(line: 1116, column: 22, scope: !10220)
!10223 = !DILocation(line: 1116, column: 29, scope: !10224)
!10224 = !DILexicalBlockFile(scope: !10225, file: !1677, discriminator: 1)
!10225 = distinct !DILexicalBlock(scope: !10220, file: !1677, line: 1116, column: 17)
!10226 = !DILocation(line: 1116, column: 33, scope: !10224)
!10227 = !DILocation(line: 1116, column: 31, scope: !10224)
!10228 = !DILocation(line: 1116, column: 17, scope: !10224)
!10229 = !DILocation(line: 1117, column: 30, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !1677, line: 1117, column: 25)
!10231 = distinct !DILexicalBlock(scope: !10225, file: !1677, line: 1116, column: 43)
!10232 = !DILocation(line: 1117, column: 25, scope: !10230)
!10233 = !DILocation(line: 1117, column: 33, scope: !10230)
!10234 = !DILocation(line: 1117, column: 25, scope: !10231)
!10235 = !DILocation(line: 1118, column: 40, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10230, file: !1677, line: 1117, column: 39)
!10237 = !DILocation(line: 1119, column: 25, scope: !10236)
!10238 = !DILocation(line: 1121, column: 17, scope: !10231)
!10239 = !DILocation(line: 1116, column: 39, scope: !10240)
!10240 = !DILexicalBlockFile(scope: !10225, file: !1677, discriminator: 2)
!10241 = !DILocation(line: 1116, column: 17, scope: !10240)
!10242 = distinct !{!10242, !10243}
!10243 = !DILocation(line: 1116, column: 17, scope: !10221)
!10244 = !DILocation(line: 1123, column: 22, scope: !10221)
!10245 = !DILocation(line: 1123, column: 24, scope: !10221)
!10246 = !DILocation(line: 1123, column: 21, scope: !10221)
!10247 = !DILocation(line: 1123, column: 21, scope: !10248)
!10248 = !DILexicalBlockFile(scope: !10221, file: !1677, discriminator: 1)
!10249 = !DILocation(line: 1123, column: 38, scope: !10250)
!10250 = !DILexicalBlockFile(scope: !10221, file: !1677, discriminator: 2)
!10251 = !DILocation(line: 1123, column: 21, scope: !10250)
!10252 = !DILocation(line: 1123, column: 21, scope: !10253)
!10253 = !DILexicalBlockFile(scope: !10221, file: !1677, discriminator: 3)
!10254 = !DILocation(line: 1123, column: 19, scope: !10253)
!10255 = !DILocation(line: 1124, column: 40, scope: !10221)
!10256 = !DILocation(line: 1124, column: 22, scope: !10221)
!10257 = !DILocation(line: 1124, column: 26, scope: !10221)
!10258 = !DILocation(line: 1124, column: 20, scope: !10221)
!10259 = !DILocation(line: 1125, column: 21, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10221, file: !1677, line: 1125, column: 21)
!10261 = !DILocation(line: 1125, column: 27, scope: !10260)
!10262 = !DILocation(line: 1125, column: 24, scope: !10260)
!10263 = !DILocation(line: 1125, column: 21, scope: !10221)
!10264 = !DILocation(line: 1126, column: 21, scope: !10260)
!10265 = !DILocation(line: 1127, column: 32, scope: !10221)
!10266 = !DILocation(line: 1127, column: 22, scope: !10221)
!10267 = !DILocation(line: 1127, column: 20, scope: !10221)
!10268 = !DILocation(line: 1128, column: 32, scope: !10221)
!10269 = !DILocation(line: 1128, column: 22, scope: !10221)
!10270 = !DILocation(line: 1128, column: 20, scope: !10221)
!10271 = !DILocation(line: 1129, column: 24, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10221, file: !1677, line: 1129, column: 17)
!10273 = !DILocation(line: 1129, column: 22, scope: !10272)
!10274 = !DILocation(line: 1129, column: 29, scope: !10275)
!10275 = !DILexicalBlockFile(scope: !10276, file: !1677, discriminator: 1)
!10276 = distinct !DILexicalBlock(scope: !10272, file: !1677, line: 1129, column: 17)
!10277 = !DILocation(line: 1129, column: 33, scope: !10275)
!10278 = !DILocation(line: 1129, column: 31, scope: !10275)
!10279 = !DILocation(line: 1129, column: 17, scope: !10275)
!10280 = !DILocation(line: 1130, column: 33, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10276, file: !1677, line: 1129, column: 43)
!10282 = !DILocation(line: 1130, column: 28, scope: !10281)
!10283 = !DILocation(line: 1130, column: 26, scope: !10281)
!10284 = !DILocation(line: 1131, column: 33, scope: !10281)
!10285 = !DILocation(line: 1131, column: 38, scope: !10281)
!10286 = !DILocation(line: 1131, column: 36, scope: !10281)
!10287 = !DILocation(line: 1131, column: 26, scope: !10281)
!10288 = !DILocation(line: 1131, column: 21, scope: !10281)
!10289 = !DILocation(line: 1131, column: 29, scope: !10281)
!10290 = !DILocation(line: 1132, column: 33, scope: !10281)
!10291 = !DILocation(line: 1132, column: 38, scope: !10281)
!10292 = !DILocation(line: 1132, column: 36, scope: !10281)
!10293 = !DILocation(line: 1132, column: 26, scope: !10281)
!10294 = !DILocation(line: 1132, column: 21, scope: !10281)
!10295 = !DILocation(line: 1132, column: 29, scope: !10281)
!10296 = !DILocation(line: 1133, column: 17, scope: !10281)
!10297 = !DILocation(line: 1129, column: 39, scope: !10298)
!10298 = !DILexicalBlockFile(scope: !10276, file: !1677, discriminator: 2)
!10299 = !DILocation(line: 1129, column: 17, scope: !10298)
!10300 = distinct !{!10300, !10301}
!10301 = !DILocation(line: 1129, column: 17, scope: !10221)
!10302 = !DILocation(line: 1134, column: 13, scope: !10221)
!10303 = !DILocation(line: 1134, column: 20, scope: !10304)
!10304 = !DILexicalBlockFile(scope: !10217, file: !1677, discriminator: 1)
!10305 = !DILocation(line: 1136, column: 21, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !1677, line: 1136, column: 21)
!10307 = distinct !DILexicalBlock(scope: !10217, file: !1677, line: 1134, column: 20)
!10308 = !DILocation(line: 1136, column: 24, scope: !10306)
!10309 = !DILocation(line: 1136, column: 33, scope: !10306)
!10310 = !DILocation(line: 1136, column: 21, scope: !10307)
!10311 = !DILocation(line: 1139, column: 28, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !1677, line: 1139, column: 21)
!10313 = distinct !DILexicalBlock(scope: !10306, file: !1677, line: 1136, column: 38)
!10314 = !DILocation(line: 1139, column: 26, scope: !10312)
!10315 = !DILocation(line: 1139, column: 33, scope: !10316)
!10316 = !DILexicalBlockFile(scope: !10317, file: !1677, discriminator: 1)
!10317 = distinct !DILexicalBlock(scope: !10312, file: !1677, line: 1139, column: 21)
!10318 = !DILocation(line: 1139, column: 37, scope: !10316)
!10319 = !DILocation(line: 1139, column: 35, scope: !10316)
!10320 = !DILocation(line: 1139, column: 21, scope: !10316)
!10321 = !DILocation(line: 1140, column: 37, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10317, file: !1677, line: 1139, column: 47)
!10323 = !DILocation(line: 1140, column: 32, scope: !10322)
!10324 = !DILocation(line: 1140, column: 30, scope: !10322)
!10325 = !DILocation(line: 1141, column: 37, scope: !10322)
!10326 = !DILocation(line: 1141, column: 32, scope: !10322)
!10327 = !DILocation(line: 1141, column: 30, scope: !10322)
!10328 = !DILocation(line: 1142, column: 73, scope: !10322)
!10329 = !DILocation(line: 1142, column: 80, scope: !10322)
!10330 = !DILocation(line: 1142, column: 78, scope: !10322)
!10331 = !DILocation(line: 1142, column: 71, scope: !10322)
!10332 = !DILocation(line: 1142, column: 30, scope: !10322)
!10333 = !DILocation(line: 1142, column: 25, scope: !10322)
!10334 = !DILocation(line: 1142, column: 33, scope: !10322)
!10335 = !DILocation(line: 1143, column: 73, scope: !10322)
!10336 = !DILocation(line: 1143, column: 80, scope: !10322)
!10337 = !DILocation(line: 1143, column: 78, scope: !10322)
!10338 = !DILocation(line: 1143, column: 71, scope: !10322)
!10339 = !DILocation(line: 1143, column: 30, scope: !10322)
!10340 = !DILocation(line: 1143, column: 25, scope: !10322)
!10341 = !DILocation(line: 1143, column: 33, scope: !10322)
!10342 = !DILocation(line: 1144, column: 21, scope: !10322)
!10343 = !DILocation(line: 1139, column: 43, scope: !10344)
!10344 = !DILexicalBlockFile(scope: !10317, file: !1677, discriminator: 2)
!10345 = !DILocation(line: 1139, column: 21, scope: !10344)
!10346 = distinct !{!10346, !10347}
!10347 = !DILocation(line: 1139, column: 21, scope: !10313)
!10348 = !DILocation(line: 1145, column: 17, scope: !10313)
!10349 = !DILocation(line: 1147, column: 9, scope: !10207)
!10350 = !DILocation(line: 1110, column: 43, scope: !10351)
!10351 = !DILexicalBlockFile(scope: !10203, file: !1677, discriminator: 2)
!10352 = !DILocation(line: 1110, column: 9, scope: !10351)
!10353 = distinct !{!10353, !10354}
!10354 = !DILocation(line: 1110, column: 9, scope: !9978)
!10355 = !DILocation(line: 1148, column: 5, scope: !9978)
!10356 = !DILocation(line: 1148, column: 16, scope: !10357)
!10357 = !DILexicalBlockFile(scope: !10358, file: !1677, discriminator: 1)
!10358 = distinct !DILexicalBlock(scope: !9972, file: !1677, line: 1148, column: 16)
!10359 = !DILocation(line: 1148, column: 19, scope: !10357)
!10360 = !DILocation(line: 1148, column: 28, scope: !10357)
!10361 = !DILocation(line: 1153, column: 8, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10358, file: !1677, line: 1148, column: 33)
!10363 = !DILocation(line: 1153, column: 11, scope: !10362)
!10364 = !DILocation(line: 1153, column: 17, scope: !10362)
!10365 = !DILocation(line: 1153, column: 35, scope: !10362)
!10366 = !DILocation(line: 1153, column: 39, scope: !10362)
!10367 = !DILocation(line: 1153, column: 50, scope: !10362)
!10368 = !DILocation(line: 1153, column: 54, scope: !10362)
!10369 = !DILocation(line: 1164, column: 5, scope: !10362)
!10370 = !DILocation(line: 1165, column: 1, scope: !9928)
!10371 = distinct !DISubprogram(name: "reorder_block", scope: !1677, file: !1677, line: 1003, type: !8045, isLocal: true, isDefinition: true, scopeLine: 1004, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!10372 = !DILocalVariable(name: "s", arg: 1, scope: !10371, file: !1677, line: 1003, type: !1859)
!10373 = !DILocation(line: 1003, column: 45, scope: !10371)
!10374 = !DILocalVariable(name: "g", arg: 2, scope: !10371, file: !1677, line: 1003, type: !2014)
!10375 = !DILocation(line: 1003, column: 60, scope: !10371)
!10376 = !DILocalVariable(name: "i", scope: !10371, file: !1677, line: 1005, type: !891)
!10377 = !DILocation(line: 1005, column: 9, scope: !10371)
!10378 = !DILocalVariable(name: "j", scope: !10371, file: !1677, line: 1005, type: !891)
!10379 = !DILocation(line: 1005, column: 12, scope: !10371)
!10380 = !DILocalVariable(name: "len", scope: !10371, file: !1677, line: 1005, type: !891)
!10381 = !DILocation(line: 1005, column: 15, scope: !10371)
!10382 = !DILocalVariable(name: "ptr", scope: !10371, file: !1677, line: 1006, type: !1949)
!10383 = !DILocation(line: 1006, column: 12, scope: !10371)
!10384 = !DILocalVariable(name: "dst", scope: !10371, file: !1677, line: 1006, type: !1949)
!10385 = !DILocation(line: 1006, column: 18, scope: !10371)
!10386 = !DILocalVariable(name: "ptr1", scope: !10371, file: !1677, line: 1006, type: !1949)
!10387 = !DILocation(line: 1006, column: 24, scope: !10371)
!10388 = !DILocalVariable(name: "tmp", scope: !10371, file: !1677, line: 1007, type: !1933)
!10389 = !DILocation(line: 1007, column: 11, scope: !10371)
!10390 = !DILocation(line: 1009, column: 9, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10371, file: !1677, line: 1009, column: 9)
!10392 = !DILocation(line: 1009, column: 12, scope: !10391)
!10393 = !DILocation(line: 1009, column: 23, scope: !10391)
!10394 = !DILocation(line: 1009, column: 9, scope: !10371)
!10395 = !DILocation(line: 1010, column: 9, scope: !10391)
!10396 = !DILocation(line: 1012, column: 9, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10371, file: !1677, line: 1012, column: 9)
!10398 = !DILocation(line: 1012, column: 12, scope: !10397)
!10399 = !DILocation(line: 1012, column: 9, scope: !10371)
!10400 = !DILocation(line: 1013, column: 13, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10402, file: !1677, line: 1013, column: 13)
!10402 = distinct !DILexicalBlock(scope: !10397, file: !1677, line: 1012, column: 26)
!10403 = !DILocation(line: 1013, column: 16, scope: !10401)
!10404 = !DILocation(line: 1013, column: 34, scope: !10401)
!10405 = !DILocation(line: 1013, column: 13, scope: !10402)
!10406 = !DILocation(line: 1014, column: 19, scope: !10401)
!10407 = !DILocation(line: 1014, column: 22, scope: !10401)
!10408 = !DILocation(line: 1014, column: 32, scope: !10401)
!10409 = !DILocation(line: 1014, column: 17, scope: !10401)
!10410 = !DILocation(line: 1014, column: 13, scope: !10401)
!10411 = !DILocation(line: 1016, column: 19, scope: !10401)
!10412 = !DILocation(line: 1016, column: 22, scope: !10401)
!10413 = !DILocation(line: 1016, column: 32, scope: !10401)
!10414 = !DILocation(line: 1016, column: 17, scope: !10401)
!10415 = !DILocation(line: 1017, column: 5, scope: !10402)
!10416 = !DILocation(line: 1018, column: 15, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10397, file: !1677, line: 1017, column: 12)
!10418 = !DILocation(line: 1018, column: 18, scope: !10417)
!10419 = !DILocation(line: 1018, column: 13, scope: !10417)
!10420 = !DILocation(line: 1021, column: 14, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10371, file: !1677, line: 1021, column: 5)
!10422 = !DILocation(line: 1021, column: 17, scope: !10421)
!10423 = !DILocation(line: 1021, column: 12, scope: !10421)
!10424 = !DILocation(line: 1021, column: 10, scope: !10421)
!10425 = !DILocation(line: 1021, column: 30, scope: !10426)
!10426 = !DILexicalBlockFile(scope: !10427, file: !1677, discriminator: 1)
!10427 = distinct !DILexicalBlock(scope: !10421, file: !1677, line: 1021, column: 5)
!10428 = !DILocation(line: 1021, column: 32, scope: !10426)
!10429 = !DILocation(line: 1021, column: 5, scope: !10426)
!10430 = !DILocation(line: 1022, column: 53, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10427, file: !1677, line: 1021, column: 43)
!10432 = !DILocation(line: 1022, column: 15, scope: !10431)
!10433 = !DILocation(line: 1022, column: 31, scope: !10431)
!10434 = !DILocation(line: 1022, column: 34, scope: !10431)
!10435 = !DILocation(line: 1022, column: 13, scope: !10431)
!10436 = !DILocation(line: 1023, column: 16, scope: !10431)
!10437 = !DILocation(line: 1023, column: 14, scope: !10431)
!10438 = !DILocation(line: 1024, column: 15, scope: !10431)
!10439 = !DILocation(line: 1024, column: 13, scope: !10431)
!10440 = !DILocation(line: 1025, column: 18, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10431, file: !1677, line: 1025, column: 9)
!10442 = !DILocation(line: 1025, column: 16, scope: !10441)
!10443 = !DILocation(line: 1025, column: 14, scope: !10441)
!10444 = !DILocation(line: 1025, column: 23, scope: !10445)
!10445 = !DILexicalBlockFile(scope: !10446, file: !1677, discriminator: 1)
!10446 = distinct !DILexicalBlock(scope: !10441, file: !1677, line: 1025, column: 9)
!10447 = !DILocation(line: 1025, column: 25, scope: !10445)
!10448 = !DILocation(line: 1025, column: 9, scope: !10445)
!10449 = !DILocation(line: 1026, column: 28, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10446, file: !1677, line: 1025, column: 35)
!10451 = !DILocation(line: 1026, column: 27, scope: !10450)
!10452 = !DILocation(line: 1026, column: 22, scope: !10450)
!10453 = !DILocation(line: 1026, column: 17, scope: !10450)
!10454 = !DILocation(line: 1026, column: 20, scope: !10450)
!10455 = !DILocation(line: 1027, column: 28, scope: !10450)
!10456 = !DILocation(line: 1027, column: 27, scope: !10450)
!10457 = !DILocation(line: 1027, column: 22, scope: !10450)
!10458 = !DILocation(line: 1027, column: 17, scope: !10450)
!10459 = !DILocation(line: 1027, column: 20, scope: !10450)
!10460 = !DILocation(line: 1028, column: 28, scope: !10450)
!10461 = !DILocation(line: 1028, column: 27, scope: !10450)
!10462 = !DILocation(line: 1028, column: 22, scope: !10450)
!10463 = !DILocation(line: 1028, column: 17, scope: !10450)
!10464 = !DILocation(line: 1028, column: 20, scope: !10450)
!10465 = !DILocation(line: 1029, column: 16, scope: !10450)
!10466 = !DILocation(line: 1030, column: 9, scope: !10450)
!10467 = !DILocation(line: 1025, column: 31, scope: !10468)
!10468 = !DILexicalBlockFile(scope: !10446, file: !1677, discriminator: 2)
!10469 = !DILocation(line: 1025, column: 9, scope: !10468)
!10470 = distinct !{!10470, !10471}
!10471 = !DILocation(line: 1025, column: 9, scope: !10431)
!10472 = !DILocation(line: 1031, column: 20, scope: !10431)
!10473 = !DILocation(line: 1031, column: 18, scope: !10431)
!10474 = !DILocation(line: 1031, column: 13, scope: !10431)
!10475 = !DILocation(line: 1032, column: 16, scope: !10431)
!10476 = !DILocation(line: 1032, column: 9, scope: !10431)
!10477 = !DILocation(line: 1032, column: 27, scope: !10431)
!10478 = !DILocation(line: 1032, column: 31, scope: !10431)
!10479 = !DILocation(line: 1032, column: 35, scope: !10431)
!10480 = !DILocation(line: 1033, column: 5, scope: !10431)
!10481 = !DILocation(line: 1021, column: 39, scope: !10482)
!10482 = !DILexicalBlockFile(scope: !10427, file: !1677, discriminator: 2)
!10483 = !DILocation(line: 1021, column: 5, scope: !10482)
!10484 = distinct !{!10484, !10485}
!10485 = !DILocation(line: 1021, column: 5, scope: !10371)
!10486 = !DILocation(line: 1034, column: 1, scope: !10371)
!10487 = distinct !DISubprogram(name: "compute_antialias", scope: !1677, file: !1677, line: 1195, type: !8045, isLocal: true, isDefinition: true, scopeLine: 1196, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!10488 = !DILocalVariable(name: "s", arg: 1, scope: !10487, file: !1677, line: 1195, type: !1859)
!10489 = !DILocation(line: 1195, column: 49, scope: !10487)
!10490 = !DILocalVariable(name: "g", arg: 2, scope: !10487, file: !1677, line: 1195, type: !2014)
!10491 = !DILocation(line: 1195, column: 64, scope: !10487)
!10492 = !DILocalVariable(name: "ptr", scope: !10487, file: !1677, line: 1197, type: !1949)
!10493 = !DILocation(line: 1197, column: 12, scope: !10487)
!10494 = !DILocalVariable(name: "n", scope: !10487, file: !1677, line: 1198, type: !891)
!10495 = !DILocation(line: 1198, column: 9, scope: !10487)
!10496 = !DILocalVariable(name: "i", scope: !10487, file: !1677, line: 1198, type: !891)
!10497 = !DILocation(line: 1198, column: 12, scope: !10487)
!10498 = !DILocation(line: 1201, column: 9, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10487, file: !1677, line: 1201, column: 9)
!10500 = !DILocation(line: 1201, column: 12, scope: !10499)
!10501 = !DILocation(line: 1201, column: 23, scope: !10499)
!10502 = !DILocation(line: 1201, column: 9, scope: !10487)
!10503 = !DILocation(line: 1202, column: 14, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !1677, line: 1202, column: 13)
!10505 = distinct !DILexicalBlock(scope: !10499, file: !1677, line: 1201, column: 29)
!10506 = !DILocation(line: 1202, column: 17, scope: !10504)
!10507 = !DILocation(line: 1202, column: 13, scope: !10505)
!10508 = !DILocation(line: 1203, column: 13, scope: !10504)
!10509 = !DILocation(line: 1205, column: 11, scope: !10505)
!10510 = !DILocation(line: 1206, column: 5, scope: !10505)
!10511 = !DILocation(line: 1207, column: 11, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10499, file: !1677, line: 1206, column: 12)
!10513 = !DILocation(line: 1210, column: 11, scope: !10487)
!10514 = !DILocation(line: 1210, column: 14, scope: !10487)
!10515 = !DILocation(line: 1210, column: 24, scope: !10487)
!10516 = !DILocation(line: 1210, column: 9, scope: !10487)
!10517 = !DILocation(line: 1211, column: 14, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10487, file: !1677, line: 1211, column: 5)
!10519 = !DILocation(line: 1211, column: 12, scope: !10518)
!10520 = !DILocation(line: 1211, column: 10, scope: !10518)
!10521 = !DILocation(line: 1211, column: 17, scope: !10522)
!10522 = !DILexicalBlockFile(scope: !10523, file: !1677, discriminator: 1)
!10523 = distinct !DILexicalBlock(scope: !10518, file: !1677, line: 1211, column: 5)
!10524 = !DILocation(line: 1211, column: 19, scope: !10522)
!10525 = !DILocation(line: 1211, column: 5, scope: !10522)
!10526 = !DILocation(line: 1212, column: 9, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10523, file: !1677, line: 1211, column: 29)
!10528 = distinct !{!10528, !10526}
!10529 = !DILocalVariable(name: "tmp0", scope: !10530, file: !1677, line: 1212, type: !888)
!10530 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1212, column: 12)
!10531 = !DILocation(line: 1212, column: 20, scope: !10530)
!10532 = !DILocation(line: 1212, column: 27, scope: !10533)
!10533 = !DILexicalBlockFile(scope: !10530, file: !1677, discriminator: 1)
!10534 = !DILocation(line: 1212, column: 20, scope: !10533)
!10535 = !DILocalVariable(name: "tmp1", scope: !10530, file: !1677, line: 1212, type: !888)
!10536 = !DILocation(line: 1212, column: 44, scope: !10530)
!10537 = !DILocation(line: 1212, column: 51, scope: !10533)
!10538 = !DILocation(line: 1212, column: 44, scope: !10533)
!10539 = !DILocation(line: 1212, column: 72, scope: !10533)
!10540 = !DILocation(line: 1212, column: 79, scope: !10533)
!10541 = !DILocation(line: 1212, column: 77, scope: !10533)
!10542 = !DILocation(line: 1212, column: 97, scope: !10533)
!10543 = !DILocation(line: 1212, column: 104, scope: !10533)
!10544 = !DILocation(line: 1212, column: 102, scope: !10533)
!10545 = !DILocation(line: 1212, column: 95, scope: !10533)
!10546 = !DILocation(line: 1212, column: 60, scope: !10533)
!10547 = !DILocation(line: 1212, column: 70, scope: !10533)
!10548 = !DILocation(line: 1212, column: 131, scope: !10533)
!10549 = !DILocation(line: 1212, column: 138, scope: !10533)
!10550 = !DILocation(line: 1212, column: 136, scope: !10533)
!10551 = !DILocation(line: 1212, column: 156, scope: !10533)
!10552 = !DILocation(line: 1212, column: 163, scope: !10533)
!10553 = !DILocation(line: 1212, column: 161, scope: !10533)
!10554 = !DILocation(line: 1212, column: 154, scope: !10533)
!10555 = !DILocation(line: 1212, column: 121, scope: !10533)
!10556 = !DILocation(line: 1212, column: 129, scope: !10533)
!10557 = !DILocation(line: 1212, column: 180, scope: !10533)
!10558 = !DILocation(line: 1213, column: 9, scope: !10527)
!10559 = distinct !{!10559, !10558}
!10560 = !DILocalVariable(name: "tmp0", scope: !10561, file: !1677, line: 1213, type: !888)
!10561 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1213, column: 12)
!10562 = !DILocation(line: 1213, column: 20, scope: !10561)
!10563 = !DILocation(line: 1213, column: 27, scope: !10564)
!10564 = !DILexicalBlockFile(scope: !10561, file: !1677, discriminator: 1)
!10565 = !DILocation(line: 1213, column: 20, scope: !10564)
!10566 = !DILocalVariable(name: "tmp1", scope: !10561, file: !1677, line: 1213, type: !888)
!10567 = !DILocation(line: 1213, column: 44, scope: !10561)
!10568 = !DILocation(line: 1213, column: 51, scope: !10564)
!10569 = !DILocation(line: 1213, column: 44, scope: !10564)
!10570 = !DILocation(line: 1213, column: 72, scope: !10564)
!10571 = !DILocation(line: 1213, column: 79, scope: !10564)
!10572 = !DILocation(line: 1213, column: 77, scope: !10564)
!10573 = !DILocation(line: 1213, column: 97, scope: !10564)
!10574 = !DILocation(line: 1213, column: 104, scope: !10564)
!10575 = !DILocation(line: 1213, column: 102, scope: !10564)
!10576 = !DILocation(line: 1213, column: 95, scope: !10564)
!10577 = !DILocation(line: 1213, column: 60, scope: !10564)
!10578 = !DILocation(line: 1213, column: 70, scope: !10564)
!10579 = !DILocation(line: 1213, column: 131, scope: !10564)
!10580 = !DILocation(line: 1213, column: 138, scope: !10564)
!10581 = !DILocation(line: 1213, column: 136, scope: !10564)
!10582 = !DILocation(line: 1213, column: 156, scope: !10564)
!10583 = !DILocation(line: 1213, column: 163, scope: !10564)
!10584 = !DILocation(line: 1213, column: 161, scope: !10564)
!10585 = !DILocation(line: 1213, column: 154, scope: !10564)
!10586 = !DILocation(line: 1213, column: 121, scope: !10564)
!10587 = !DILocation(line: 1213, column: 129, scope: !10564)
!10588 = !DILocation(line: 1213, column: 180, scope: !10564)
!10589 = !DILocation(line: 1214, column: 9, scope: !10527)
!10590 = distinct !{!10590, !10589}
!10591 = !DILocalVariable(name: "tmp0", scope: !10592, file: !1677, line: 1214, type: !888)
!10592 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1214, column: 12)
!10593 = !DILocation(line: 1214, column: 20, scope: !10592)
!10594 = !DILocation(line: 1214, column: 27, scope: !10595)
!10595 = !DILexicalBlockFile(scope: !10592, file: !1677, discriminator: 1)
!10596 = !DILocation(line: 1214, column: 20, scope: !10595)
!10597 = !DILocalVariable(name: "tmp1", scope: !10592, file: !1677, line: 1214, type: !888)
!10598 = !DILocation(line: 1214, column: 44, scope: !10592)
!10599 = !DILocation(line: 1214, column: 51, scope: !10595)
!10600 = !DILocation(line: 1214, column: 44, scope: !10595)
!10601 = !DILocation(line: 1214, column: 72, scope: !10595)
!10602 = !DILocation(line: 1214, column: 79, scope: !10595)
!10603 = !DILocation(line: 1214, column: 77, scope: !10595)
!10604 = !DILocation(line: 1214, column: 97, scope: !10595)
!10605 = !DILocation(line: 1214, column: 104, scope: !10595)
!10606 = !DILocation(line: 1214, column: 102, scope: !10595)
!10607 = !DILocation(line: 1214, column: 95, scope: !10595)
!10608 = !DILocation(line: 1214, column: 60, scope: !10595)
!10609 = !DILocation(line: 1214, column: 70, scope: !10595)
!10610 = !DILocation(line: 1214, column: 131, scope: !10595)
!10611 = !DILocation(line: 1214, column: 138, scope: !10595)
!10612 = !DILocation(line: 1214, column: 136, scope: !10595)
!10613 = !DILocation(line: 1214, column: 156, scope: !10595)
!10614 = !DILocation(line: 1214, column: 163, scope: !10595)
!10615 = !DILocation(line: 1214, column: 161, scope: !10595)
!10616 = !DILocation(line: 1214, column: 154, scope: !10595)
!10617 = !DILocation(line: 1214, column: 121, scope: !10595)
!10618 = !DILocation(line: 1214, column: 129, scope: !10595)
!10619 = !DILocation(line: 1214, column: 180, scope: !10595)
!10620 = !DILocation(line: 1215, column: 9, scope: !10527)
!10621 = distinct !{!10621, !10620}
!10622 = !DILocalVariable(name: "tmp0", scope: !10623, file: !1677, line: 1215, type: !888)
!10623 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1215, column: 12)
!10624 = !DILocation(line: 1215, column: 20, scope: !10623)
!10625 = !DILocation(line: 1215, column: 27, scope: !10626)
!10626 = !DILexicalBlockFile(scope: !10623, file: !1677, discriminator: 1)
!10627 = !DILocation(line: 1215, column: 20, scope: !10626)
!10628 = !DILocalVariable(name: "tmp1", scope: !10623, file: !1677, line: 1215, type: !888)
!10629 = !DILocation(line: 1215, column: 44, scope: !10623)
!10630 = !DILocation(line: 1215, column: 51, scope: !10626)
!10631 = !DILocation(line: 1215, column: 44, scope: !10626)
!10632 = !DILocation(line: 1215, column: 72, scope: !10626)
!10633 = !DILocation(line: 1215, column: 79, scope: !10626)
!10634 = !DILocation(line: 1215, column: 77, scope: !10626)
!10635 = !DILocation(line: 1215, column: 97, scope: !10626)
!10636 = !DILocation(line: 1215, column: 104, scope: !10626)
!10637 = !DILocation(line: 1215, column: 102, scope: !10626)
!10638 = !DILocation(line: 1215, column: 95, scope: !10626)
!10639 = !DILocation(line: 1215, column: 60, scope: !10626)
!10640 = !DILocation(line: 1215, column: 70, scope: !10626)
!10641 = !DILocation(line: 1215, column: 131, scope: !10626)
!10642 = !DILocation(line: 1215, column: 138, scope: !10626)
!10643 = !DILocation(line: 1215, column: 136, scope: !10626)
!10644 = !DILocation(line: 1215, column: 156, scope: !10626)
!10645 = !DILocation(line: 1215, column: 163, scope: !10626)
!10646 = !DILocation(line: 1215, column: 161, scope: !10626)
!10647 = !DILocation(line: 1215, column: 154, scope: !10626)
!10648 = !DILocation(line: 1215, column: 121, scope: !10626)
!10649 = !DILocation(line: 1215, column: 129, scope: !10626)
!10650 = !DILocation(line: 1215, column: 180, scope: !10626)
!10651 = !DILocation(line: 1216, column: 9, scope: !10527)
!10652 = distinct !{!10652, !10651}
!10653 = !DILocalVariable(name: "tmp0", scope: !10654, file: !1677, line: 1216, type: !888)
!10654 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1216, column: 12)
!10655 = !DILocation(line: 1216, column: 20, scope: !10654)
!10656 = !DILocation(line: 1216, column: 27, scope: !10657)
!10657 = !DILexicalBlockFile(scope: !10654, file: !1677, discriminator: 1)
!10658 = !DILocation(line: 1216, column: 20, scope: !10657)
!10659 = !DILocalVariable(name: "tmp1", scope: !10654, file: !1677, line: 1216, type: !888)
!10660 = !DILocation(line: 1216, column: 44, scope: !10654)
!10661 = !DILocation(line: 1216, column: 51, scope: !10657)
!10662 = !DILocation(line: 1216, column: 44, scope: !10657)
!10663 = !DILocation(line: 1216, column: 72, scope: !10657)
!10664 = !DILocation(line: 1216, column: 79, scope: !10657)
!10665 = !DILocation(line: 1216, column: 77, scope: !10657)
!10666 = !DILocation(line: 1216, column: 97, scope: !10657)
!10667 = !DILocation(line: 1216, column: 104, scope: !10657)
!10668 = !DILocation(line: 1216, column: 102, scope: !10657)
!10669 = !DILocation(line: 1216, column: 95, scope: !10657)
!10670 = !DILocation(line: 1216, column: 60, scope: !10657)
!10671 = !DILocation(line: 1216, column: 70, scope: !10657)
!10672 = !DILocation(line: 1216, column: 131, scope: !10657)
!10673 = !DILocation(line: 1216, column: 138, scope: !10657)
!10674 = !DILocation(line: 1216, column: 136, scope: !10657)
!10675 = !DILocation(line: 1216, column: 156, scope: !10657)
!10676 = !DILocation(line: 1216, column: 163, scope: !10657)
!10677 = !DILocation(line: 1216, column: 161, scope: !10657)
!10678 = !DILocation(line: 1216, column: 154, scope: !10657)
!10679 = !DILocation(line: 1216, column: 121, scope: !10657)
!10680 = !DILocation(line: 1216, column: 129, scope: !10657)
!10681 = !DILocation(line: 1216, column: 180, scope: !10657)
!10682 = !DILocation(line: 1217, column: 9, scope: !10527)
!10683 = distinct !{!10683, !10682}
!10684 = !DILocalVariable(name: "tmp0", scope: !10685, file: !1677, line: 1217, type: !888)
!10685 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1217, column: 12)
!10686 = !DILocation(line: 1217, column: 20, scope: !10685)
!10687 = !DILocation(line: 1217, column: 27, scope: !10688)
!10688 = !DILexicalBlockFile(scope: !10685, file: !1677, discriminator: 1)
!10689 = !DILocation(line: 1217, column: 20, scope: !10688)
!10690 = !DILocalVariable(name: "tmp1", scope: !10685, file: !1677, line: 1217, type: !888)
!10691 = !DILocation(line: 1217, column: 44, scope: !10685)
!10692 = !DILocation(line: 1217, column: 51, scope: !10688)
!10693 = !DILocation(line: 1217, column: 44, scope: !10688)
!10694 = !DILocation(line: 1217, column: 72, scope: !10688)
!10695 = !DILocation(line: 1217, column: 79, scope: !10688)
!10696 = !DILocation(line: 1217, column: 77, scope: !10688)
!10697 = !DILocation(line: 1217, column: 97, scope: !10688)
!10698 = !DILocation(line: 1217, column: 104, scope: !10688)
!10699 = !DILocation(line: 1217, column: 102, scope: !10688)
!10700 = !DILocation(line: 1217, column: 95, scope: !10688)
!10701 = !DILocation(line: 1217, column: 60, scope: !10688)
!10702 = !DILocation(line: 1217, column: 70, scope: !10688)
!10703 = !DILocation(line: 1217, column: 131, scope: !10688)
!10704 = !DILocation(line: 1217, column: 138, scope: !10688)
!10705 = !DILocation(line: 1217, column: 136, scope: !10688)
!10706 = !DILocation(line: 1217, column: 156, scope: !10688)
!10707 = !DILocation(line: 1217, column: 163, scope: !10688)
!10708 = !DILocation(line: 1217, column: 161, scope: !10688)
!10709 = !DILocation(line: 1217, column: 154, scope: !10688)
!10710 = !DILocation(line: 1217, column: 121, scope: !10688)
!10711 = !DILocation(line: 1217, column: 129, scope: !10688)
!10712 = !DILocation(line: 1217, column: 180, scope: !10688)
!10713 = !DILocation(line: 1218, column: 9, scope: !10527)
!10714 = distinct !{!10714, !10713}
!10715 = !DILocalVariable(name: "tmp0", scope: !10716, file: !1677, line: 1218, type: !888)
!10716 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1218, column: 12)
!10717 = !DILocation(line: 1218, column: 20, scope: !10716)
!10718 = !DILocation(line: 1218, column: 27, scope: !10719)
!10719 = !DILexicalBlockFile(scope: !10716, file: !1677, discriminator: 1)
!10720 = !DILocation(line: 1218, column: 20, scope: !10719)
!10721 = !DILocalVariable(name: "tmp1", scope: !10716, file: !1677, line: 1218, type: !888)
!10722 = !DILocation(line: 1218, column: 44, scope: !10716)
!10723 = !DILocation(line: 1218, column: 51, scope: !10719)
!10724 = !DILocation(line: 1218, column: 44, scope: !10719)
!10725 = !DILocation(line: 1218, column: 72, scope: !10719)
!10726 = !DILocation(line: 1218, column: 79, scope: !10719)
!10727 = !DILocation(line: 1218, column: 77, scope: !10719)
!10728 = !DILocation(line: 1218, column: 97, scope: !10719)
!10729 = !DILocation(line: 1218, column: 104, scope: !10719)
!10730 = !DILocation(line: 1218, column: 102, scope: !10719)
!10731 = !DILocation(line: 1218, column: 95, scope: !10719)
!10732 = !DILocation(line: 1218, column: 60, scope: !10719)
!10733 = !DILocation(line: 1218, column: 70, scope: !10719)
!10734 = !DILocation(line: 1218, column: 131, scope: !10719)
!10735 = !DILocation(line: 1218, column: 138, scope: !10719)
!10736 = !DILocation(line: 1218, column: 136, scope: !10719)
!10737 = !DILocation(line: 1218, column: 156, scope: !10719)
!10738 = !DILocation(line: 1218, column: 163, scope: !10719)
!10739 = !DILocation(line: 1218, column: 161, scope: !10719)
!10740 = !DILocation(line: 1218, column: 154, scope: !10719)
!10741 = !DILocation(line: 1218, column: 121, scope: !10719)
!10742 = !DILocation(line: 1218, column: 129, scope: !10719)
!10743 = !DILocation(line: 1218, column: 180, scope: !10719)
!10744 = !DILocation(line: 1219, column: 9, scope: !10527)
!10745 = distinct !{!10745, !10744}
!10746 = !DILocalVariable(name: "tmp0", scope: !10747, file: !1677, line: 1219, type: !888)
!10747 = distinct !DILexicalBlock(scope: !10527, file: !1677, line: 1219, column: 12)
!10748 = !DILocation(line: 1219, column: 20, scope: !10747)
!10749 = !DILocation(line: 1219, column: 27, scope: !10750)
!10750 = !DILexicalBlockFile(scope: !10747, file: !1677, discriminator: 1)
!10751 = !DILocation(line: 1219, column: 20, scope: !10750)
!10752 = !DILocalVariable(name: "tmp1", scope: !10747, file: !1677, line: 1219, type: !888)
!10753 = !DILocation(line: 1219, column: 44, scope: !10747)
!10754 = !DILocation(line: 1219, column: 51, scope: !10750)
!10755 = !DILocation(line: 1219, column: 44, scope: !10750)
!10756 = !DILocation(line: 1219, column: 72, scope: !10750)
!10757 = !DILocation(line: 1219, column: 79, scope: !10750)
!10758 = !DILocation(line: 1219, column: 77, scope: !10750)
!10759 = !DILocation(line: 1219, column: 97, scope: !10750)
!10760 = !DILocation(line: 1219, column: 104, scope: !10750)
!10761 = !DILocation(line: 1219, column: 102, scope: !10750)
!10762 = !DILocation(line: 1219, column: 95, scope: !10750)
!10763 = !DILocation(line: 1219, column: 60, scope: !10750)
!10764 = !DILocation(line: 1219, column: 70, scope: !10750)
!10765 = !DILocation(line: 1219, column: 131, scope: !10750)
!10766 = !DILocation(line: 1219, column: 138, scope: !10750)
!10767 = !DILocation(line: 1219, column: 136, scope: !10750)
!10768 = !DILocation(line: 1219, column: 156, scope: !10750)
!10769 = !DILocation(line: 1219, column: 163, scope: !10750)
!10770 = !DILocation(line: 1219, column: 161, scope: !10750)
!10771 = !DILocation(line: 1219, column: 154, scope: !10750)
!10772 = !DILocation(line: 1219, column: 121, scope: !10750)
!10773 = !DILocation(line: 1219, column: 129, scope: !10750)
!10774 = !DILocation(line: 1219, column: 180, scope: !10750)
!10775 = !DILocation(line: 1221, column: 13, scope: !10527)
!10776 = !DILocation(line: 1222, column: 5, scope: !10527)
!10777 = !DILocation(line: 1211, column: 25, scope: !10778)
!10778 = !DILexicalBlockFile(scope: !10523, file: !1677, discriminator: 2)
!10779 = !DILocation(line: 1211, column: 5, scope: !10778)
!10780 = distinct !{!10780, !10781}
!10781 = !DILocation(line: 1211, column: 5, scope: !10487)
!10782 = !DILocation(line: 1223, column: 1, scope: !10487)
!10783 = distinct !DISubprogram(name: "imdct12", scope: !1677, file: !1677, line: 461, type: !10784, isLocal: true, isDefinition: true, scopeLine: 462, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!10784 = !DISubroutineType(types: !10785)
!10785 = !{null, !1949, !1949}
!10786 = !DILocalVariable(name: "out", arg: 1, scope: !10783, file: !1677, line: 461, type: !1949)
!10787 = !DILocation(line: 461, column: 28, scope: !10783)
!10788 = !DILocalVariable(name: "in", arg: 2, scope: !10783, file: !1677, line: 461, type: !1949)
!10789 = !DILocation(line: 461, column: 40, scope: !10783)
!10790 = !DILocalVariable(name: "in0", scope: !10783, file: !1677, line: 463, type: !888)
!10791 = !DILocation(line: 463, column: 11, scope: !10783)
!10792 = !DILocalVariable(name: "in1", scope: !10783, file: !1677, line: 463, type: !888)
!10793 = !DILocation(line: 463, column: 16, scope: !10783)
!10794 = !DILocalVariable(name: "in2", scope: !10783, file: !1677, line: 463, type: !888)
!10795 = !DILocation(line: 463, column: 21, scope: !10783)
!10796 = !DILocalVariable(name: "in3", scope: !10783, file: !1677, line: 463, type: !888)
!10797 = !DILocation(line: 463, column: 26, scope: !10783)
!10798 = !DILocalVariable(name: "in4", scope: !10783, file: !1677, line: 463, type: !888)
!10799 = !DILocation(line: 463, column: 31, scope: !10783)
!10800 = !DILocalVariable(name: "in5", scope: !10783, file: !1677, line: 463, type: !888)
!10801 = !DILocation(line: 463, column: 36, scope: !10783)
!10802 = !DILocalVariable(name: "t1", scope: !10783, file: !1677, line: 463, type: !888)
!10803 = !DILocation(line: 463, column: 41, scope: !10783)
!10804 = !DILocalVariable(name: "t2", scope: !10783, file: !1677, line: 463, type: !888)
!10805 = !DILocation(line: 463, column: 45, scope: !10783)
!10806 = !DILocation(line: 465, column: 11, scope: !10783)
!10807 = !DILocation(line: 465, column: 9, scope: !10783)
!10808 = !DILocation(line: 466, column: 11, scope: !10783)
!10809 = !DILocation(line: 466, column: 21, scope: !10783)
!10810 = !DILocation(line: 466, column: 19, scope: !10783)
!10811 = !DILocation(line: 466, column: 9, scope: !10783)
!10812 = !DILocation(line: 467, column: 11, scope: !10783)
!10813 = !DILocation(line: 467, column: 21, scope: !10783)
!10814 = !DILocation(line: 467, column: 19, scope: !10783)
!10815 = !DILocation(line: 467, column: 9, scope: !10783)
!10816 = !DILocation(line: 468, column: 11, scope: !10783)
!10817 = !DILocation(line: 468, column: 21, scope: !10783)
!10818 = !DILocation(line: 468, column: 19, scope: !10783)
!10819 = !DILocation(line: 468, column: 9, scope: !10783)
!10820 = !DILocation(line: 469, column: 11, scope: !10783)
!10821 = !DILocation(line: 469, column: 21, scope: !10783)
!10822 = !DILocation(line: 469, column: 19, scope: !10783)
!10823 = !DILocation(line: 469, column: 9, scope: !10783)
!10824 = !DILocation(line: 470, column: 11, scope: !10783)
!10825 = !DILocation(line: 470, column: 21, scope: !10783)
!10826 = !DILocation(line: 470, column: 19, scope: !10783)
!10827 = !DILocation(line: 470, column: 9, scope: !10783)
!10828 = !DILocation(line: 471, column: 12, scope: !10783)
!10829 = !DILocation(line: 471, column: 9, scope: !10783)
!10830 = !DILocation(line: 472, column: 12, scope: !10783)
!10831 = !DILocation(line: 472, column: 9, scope: !10783)
!10832 = !DILocation(line: 474, column: 55, scope: !10783)
!10833 = !DILocation(line: 474, column: 53, scope: !10783)
!10834 = !DILocation(line: 474, column: 9, scope: !10783)
!10835 = !DILocation(line: 475, column: 55, scope: !10783)
!10836 = !DILocation(line: 475, column: 53, scope: !10783)
!10837 = !DILocation(line: 475, column: 9, scope: !10783)
!10838 = !DILocation(line: 477, column: 10, scope: !10783)
!10839 = !DILocation(line: 477, column: 16, scope: !10783)
!10840 = !DILocation(line: 477, column: 14, scope: !10783)
!10841 = !DILocation(line: 477, column: 8, scope: !10783)
!10842 = !DILocation(line: 478, column: 54, scope: !10783)
!10843 = !DILocation(line: 478, column: 60, scope: !10783)
!10844 = !DILocation(line: 478, column: 58, scope: !10783)
!10845 = !DILocation(line: 478, column: 52, scope: !10783)
!10846 = !DILocation(line: 478, column: 8, scope: !10783)
!10847 = !DILocation(line: 481, column: 15, scope: !10783)
!10848 = !DILocation(line: 481, column: 20, scope: !10783)
!10849 = !DILocation(line: 481, column: 18, scope: !10783)
!10850 = !DILocation(line: 481, column: 5, scope: !10783)
!10851 = !DILocation(line: 481, column: 13, scope: !10783)
!10852 = !DILocation(line: 480, column: 5, scope: !10783)
!10853 = !DILocation(line: 480, column: 13, scope: !10783)
!10854 = !DILocation(line: 483, column: 15, scope: !10783)
!10855 = !DILocation(line: 483, column: 20, scope: !10783)
!10856 = !DILocation(line: 483, column: 18, scope: !10783)
!10857 = !DILocation(line: 483, column: 5, scope: !10783)
!10858 = !DILocation(line: 483, column: 13, scope: !10783)
!10859 = !DILocation(line: 482, column: 5, scope: !10783)
!10860 = !DILocation(line: 482, column: 13, scope: !10783)
!10861 = !DILocation(line: 485, column: 14, scope: !10783)
!10862 = !DILocation(line: 485, column: 18, scope: !10783)
!10863 = !DILocation(line: 485, column: 9, scope: !10783)
!10864 = !DILocation(line: 486, column: 11, scope: !10783)
!10865 = !DILocation(line: 486, column: 17, scope: !10783)
!10866 = !DILocation(line: 486, column: 15, scope: !10783)
!10867 = !DILocation(line: 486, column: 9, scope: !10783)
!10868 = !DILocation(line: 487, column: 14, scope: !10783)
!10869 = !DILocation(line: 487, column: 13, scope: !10783)
!10870 = !DILocation(line: 487, column: 9, scope: !10783)
!10871 = !DILocation(line: 488, column: 55, scope: !10783)
!10872 = !DILocation(line: 488, column: 61, scope: !10783)
!10873 = !DILocation(line: 488, column: 59, scope: !10783)
!10874 = !DILocation(line: 488, column: 53, scope: !10783)
!10875 = !DILocation(line: 488, column: 9, scope: !10783)
!10876 = !DILocation(line: 490, column: 15, scope: !10783)
!10877 = !DILocation(line: 490, column: 21, scope: !10783)
!10878 = !DILocation(line: 490, column: 19, scope: !10783)
!10879 = !DILocation(line: 490, column: 5, scope: !10783)
!10880 = !DILocation(line: 490, column: 13, scope: !10783)
!10881 = !DILocation(line: 489, column: 5, scope: !10783)
!10882 = !DILocation(line: 489, column: 13, scope: !10783)
!10883 = !DILocation(line: 492, column: 15, scope: !10783)
!10884 = !DILocation(line: 492, column: 21, scope: !10783)
!10885 = !DILocation(line: 492, column: 19, scope: !10783)
!10886 = !DILocation(line: 492, column: 5, scope: !10783)
!10887 = !DILocation(line: 492, column: 13, scope: !10783)
!10888 = !DILocation(line: 491, column: 5, scope: !10783)
!10889 = !DILocation(line: 491, column: 13, scope: !10783)
!10890 = !DILocation(line: 494, column: 12, scope: !10783)
!10891 = !DILocation(line: 494, column: 9, scope: !10783)
!10892 = !DILocation(line: 495, column: 55, scope: !10783)
!10893 = !DILocation(line: 495, column: 61, scope: !10783)
!10894 = !DILocation(line: 495, column: 59, scope: !10783)
!10895 = !DILocation(line: 495, column: 53, scope: !10783)
!10896 = !DILocation(line: 495, column: 9, scope: !10783)
!10897 = !DILocation(line: 497, column: 15, scope: !10783)
!10898 = !DILocation(line: 497, column: 21, scope: !10783)
!10899 = !DILocation(line: 497, column: 19, scope: !10783)
!10900 = !DILocation(line: 497, column: 5, scope: !10783)
!10901 = !DILocation(line: 497, column: 13, scope: !10783)
!10902 = !DILocation(line: 496, column: 5, scope: !10783)
!10903 = !DILocation(line: 496, column: 13, scope: !10783)
!10904 = !DILocation(line: 499, column: 15, scope: !10783)
!10905 = !DILocation(line: 499, column: 21, scope: !10783)
!10906 = !DILocation(line: 499, column: 19, scope: !10783)
!10907 = !DILocation(line: 499, column: 5, scope: !10783)
!10908 = !DILocation(line: 499, column: 13, scope: !10783)
!10909 = !DILocation(line: 498, column: 5, scope: !10783)
!10910 = !DILocation(line: 498, column: 13, scope: !10783)
!10911 = !DILocation(line: 500, column: 1, scope: !10783)
!10912 = distinct !DISubprogram(name: "switch_buffer", scope: !1677, file: !1677, line: 821, type: !10913, isLocal: true, isDefinition: true, scopeLine: 823, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!10913 = !DISubroutineType(types: !10914)
!10914 = !{null, !1859, !1334, !1334, !1334}
!10915 = !DILocalVariable(name: "s", arg: 1, scope: !10912, file: !1677, line: 821, type: !1859)
!10916 = !DILocation(line: 821, column: 45, scope: !10912)
!10917 = !DILocalVariable(name: "pos", arg: 2, scope: !10912, file: !1677, line: 821, type: !1334)
!10918 = !DILocation(line: 821, column: 53, scope: !10912)
!10919 = !DILocalVariable(name: "end_pos", arg: 3, scope: !10912, file: !1677, line: 821, type: !1334)
!10920 = !DILocation(line: 821, column: 63, scope: !10912)
!10921 = !DILocalVariable(name: "end_pos2", arg: 4, scope: !10912, file: !1677, line: 822, type: !1334)
!10922 = !DILocation(line: 822, column: 32, scope: !10912)
!10923 = !DILocation(line: 824, column: 9, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10912, file: !1677, line: 824, column: 9)
!10925 = !DILocation(line: 824, column: 12, scope: !10924)
!10926 = !DILocation(line: 824, column: 18, scope: !10924)
!10927 = !DILocation(line: 824, column: 25, scope: !10924)
!10928 = !DILocation(line: 824, column: 29, scope: !10929)
!10929 = !DILexicalBlockFile(scope: !10924, file: !1677, discriminator: 1)
!10930 = !DILocation(line: 824, column: 28, scope: !10929)
!10931 = !DILocation(line: 824, column: 36, scope: !10929)
!10932 = !DILocation(line: 824, column: 39, scope: !10929)
!10933 = !DILocation(line: 824, column: 42, scope: !10929)
!10934 = !DILocation(line: 824, column: 57, scope: !10929)
!10935 = !DILocation(line: 824, column: 60, scope: !10929)
!10936 = !DILocation(line: 824, column: 70, scope: !10929)
!10937 = !DILocation(line: 824, column: 55, scope: !10929)
!10938 = !DILocation(line: 824, column: 33, scope: !10929)
!10939 = !DILocation(line: 824, column: 9, scope: !10929)
!10940 = !DILocation(line: 825, column: 9, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10924, file: !1677, line: 824, column: 75)
!10942 = !DILocation(line: 825, column: 12, scope: !10941)
!10943 = !DILocation(line: 825, column: 17, scope: !10941)
!10944 = !DILocation(line: 825, column: 20, scope: !10941)
!10945 = !DILocation(line: 826, column: 9, scope: !10941)
!10946 = !DILocation(line: 826, column: 12, scope: !10941)
!10947 = !DILocation(line: 826, column: 18, scope: !10941)
!10948 = !DILocation(line: 826, column: 25, scope: !10941)
!10949 = !DILocation(line: 827, column: 9, scope: !10941)
!10950 = !DILocation(line: 827, column: 12, scope: !10941)
!10951 = !DILocation(line: 827, column: 22, scope: !10941)
!10952 = !DILocation(line: 829, column: 25, scope: !10941)
!10953 = !DILocation(line: 829, column: 28, scope: !10941)
!10954 = !DILocation(line: 829, column: 33, scope: !10941)
!10955 = !DILocation(line: 829, column: 32, scope: !10941)
!10956 = !DILocation(line: 829, column: 40, scope: !10941)
!10957 = !DILocation(line: 829, column: 39, scope: !10941)
!10958 = !DILocation(line: 829, column: 37, scope: !10941)
!10959 = !DILocation(line: 829, column: 9, scope: !10941)
!10960 = !DILocation(line: 831, column: 21, scope: !10941)
!10961 = !DILocation(line: 831, column: 20, scope: !10941)
!10962 = !DILocation(line: 831, column: 48, scope: !10941)
!10963 = !DILocation(line: 831, column: 51, scope: !10941)
!10964 = !DILocation(line: 831, column: 32, scope: !10941)
!10965 = !DILocation(line: 831, column: 30, scope: !10941)
!10966 = !DILocation(line: 831, column: 58, scope: !10941)
!10967 = !DILocation(line: 831, column: 57, scope: !10941)
!10968 = !DILocation(line: 831, column: 55, scope: !10941)
!10969 = !DILocation(line: 831, column: 10, scope: !10941)
!10970 = !DILocation(line: 831, column: 18, scope: !10941)
!10971 = !DILocation(line: 830, column: 10, scope: !10941)
!10972 = !DILocation(line: 830, column: 19, scope: !10941)
!10973 = !DILocation(line: 832, column: 32, scope: !10941)
!10974 = !DILocation(line: 832, column: 35, scope: !10941)
!10975 = !DILocation(line: 832, column: 16, scope: !10941)
!10976 = !DILocation(line: 832, column: 10, scope: !10941)
!10977 = !DILocation(line: 832, column: 14, scope: !10941)
!10978 = !DILocation(line: 833, column: 5, scope: !10941)
!10979 = !DILocation(line: 834, column: 1, scope: !10912)
!10980 = distinct !DISubprogram(name: "l3_unscale", scope: !1677, file: !1677, line: 242, type: !10981, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!10981 = !DISubroutineType(types: !10982)
!10982 = !{!891, !891, !891}
!10983 = !DILocalVariable(name: "value", arg: 1, scope: !10980, file: !1677, line: 242, type: !891)
!10984 = !DILocation(line: 242, column: 34, scope: !10980)
!10985 = !DILocalVariable(name: "exponent", arg: 2, scope: !10980, file: !1677, line: 242, type: !891)
!10986 = !DILocation(line: 242, column: 45, scope: !10980)
!10987 = !DILocalVariable(name: "m", scope: !10980, file: !1677, line: 244, type: !892)
!10988 = !DILocation(line: 244, column: 18, scope: !10980)
!10989 = !DILocalVariable(name: "e", scope: !10980, file: !1677, line: 245, type: !891)
!10990 = !DILocation(line: 245, column: 9, scope: !10980)
!10991 = !DILocation(line: 247, column: 28, scope: !10980)
!10992 = !DILocation(line: 247, column: 26, scope: !10980)
!10993 = !DILocation(line: 247, column: 37, scope: !10980)
!10994 = !DILocation(line: 247, column: 46, scope: !10980)
!10995 = !DILocation(line: 247, column: 34, scope: !10980)
!10996 = !DILocation(line: 247, column: 9, scope: !10980)
!10997 = !DILocation(line: 247, column: 7, scope: !10980)
!10998 = !DILocation(line: 248, column: 29, scope: !10980)
!10999 = !DILocation(line: 248, column: 27, scope: !10980)
!11000 = !DILocation(line: 248, column: 38, scope: !10980)
!11001 = !DILocation(line: 248, column: 47, scope: !10980)
!11002 = !DILocation(line: 248, column: 35, scope: !10980)
!11003 = !DILocation(line: 248, column: 9, scope: !10980)
!11004 = !DILocation(line: 248, column: 7, scope: !10980)
!11005 = !DILocation(line: 249, column: 10, scope: !10980)
!11006 = !DILocation(line: 249, column: 19, scope: !10980)
!11007 = !DILocation(line: 249, column: 7, scope: !10980)
!11008 = !DILocation(line: 254, column: 9, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10980, file: !1677, line: 254, column: 9)
!11010 = !DILocation(line: 254, column: 11, scope: !11009)
!11011 = !DILocation(line: 254, column: 9, scope: !10980)
!11012 = !DILocation(line: 255, column: 9, scope: !11009)
!11013 = !DILocation(line: 256, column: 10, scope: !10980)
!11014 = !DILocation(line: 256, column: 22, scope: !10980)
!11015 = !DILocation(line: 256, column: 19, scope: !10980)
!11016 = !DILocation(line: 256, column: 24, scope: !10980)
!11017 = !DILocation(line: 256, column: 12, scope: !10980)
!11018 = !DILocation(line: 256, column: 33, scope: !10980)
!11019 = !DILocation(line: 256, column: 30, scope: !10980)
!11020 = !DILocation(line: 256, column: 7, scope: !10980)
!11021 = !DILocation(line: 258, column: 12, scope: !10980)
!11022 = !DILocation(line: 258, column: 5, scope: !10980)
!11023 = !DILocation(line: 259, column: 1, scope: !10980)
!11024 = distinct !DISubprogram(name: "mp_flush", scope: !1677, file: !1677, line: 1718, type: !11025, isLocal: true, isDefinition: true, scopeLine: 1719, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1678)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{null, !1859}
!11027 = !DILocalVariable(name: "ctx", arg: 1, scope: !11024, file: !1677, line: 1718, type: !1859)
!11028 = !DILocation(line: 1718, column: 40, scope: !11024)
!11029 = !DILocation(line: 1720, column: 12, scope: !11024)
!11030 = !DILocation(line: 1720, column: 17, scope: !11024)
!11031 = !DILocation(line: 1720, column: 5, scope: !11024)
!11032 = !DILocation(line: 1721, column: 12, scope: !11024)
!11033 = !DILocation(line: 1721, column: 17, scope: !11024)
!11034 = !DILocation(line: 1721, column: 5, scope: !11024)
!11035 = !DILocation(line: 1722, column: 5, scope: !11024)
!11036 = !DILocation(line: 1722, column: 10, scope: !11024)
!11037 = !DILocation(line: 1722, column: 24, scope: !11024)
!11038 = !DILocation(line: 1723, column: 5, scope: !11024)
!11039 = !DILocation(line: 1723, column: 10, scope: !11024)
!11040 = !DILocation(line: 1723, column: 23, scope: !11024)
!11041 = !DILocation(line: 1724, column: 1, scope: !11024)
