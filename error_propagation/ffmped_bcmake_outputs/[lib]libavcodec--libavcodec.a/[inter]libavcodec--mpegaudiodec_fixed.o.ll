; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mpegaudiodec_fixed.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mpegaudiodec_fixed.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.HuffTable = type { i32, i8*, i16* }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.MPADecodeContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1048 x i8], i32, i32, i32, %struct.GetBitContext, %struct.GetBitContext, [16 x i8], [2 x [1024 x i32]], [2 x i32], [24 x i8], [2 x [36 x [32 x i32]]], [2 x [576 x i32]], [2 x [2 x %struct.GranuleDef]], i32, i32, i32, %struct.AVCodecContext*, %struct.MPADSPContext, %struct.AVFloatDSPContext*, %struct.AVFrame*, [8 x i8] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.GranuleDef = type { i8, i32, i32, i32, i32, i8, i8, [3 x i32], [3 x i32], i8, i8, [3 x i32], i32, i32, i32, [40 x i8], [12 x i8], [576 x i32] }
%struct.MPADSPContext = type { void (float*, float*, i32*, float*, i64)*, void (i32*, i32*, i32*, i16*, i64)*, void (float*, float*)*, void (i32*, i32*)*, void (float*, float*, float*, i32, i32, i32)*, void (i32*, i32*, i32*, i32, i32, i32)* }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%union.unaligned_32 = type { i32 }
%struct.MPADecodeHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MP3On4DecodeContext = type { i32, i32, i8*, [5 x %struct.MPADecodeContext*] }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.unaligned_16 = type { i16 }

@.str = private unnamed_addr constant [4 x i8] c"mp1\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"MP1 (MPEG audio layer 1)\00", align 1
@.compoundliteral = internal constant [3 x i32] [i32 6, i32 1, i32 -1], align 4
@ff_mp1_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86058, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"mp2\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"MP2 (MPEG audio layer 2)\00", align 1
@.compoundliteral.4 = internal constant [3 x i32] [i32 6, i32 1, i32 -1], align 4
@ff_mp2_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i32 1, i32 86016, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral.4, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.5 = private unnamed_addr constant [4 x i8] c"mp3\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"MP3 (MPEG audio layer 3)\00", align 1
@.compoundliteral.7 = internal constant [3 x i32] [i32 6, i32 1, i32 -1], align 4
@ff_mp3_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i32 1, i32 86017, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral.7, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.8 = private unnamed_addr constant [7 x i8] c"mp3adu\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"ADU (Application Data Unit) MP3 (MPEG audio layer 3)\00", align 1
@.compoundliteral.10 = internal constant [3 x i32] [i32 6, i32 1, i32 -1], align 4
@ff_mp3adu_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i32 0, i32 0), i32 1, i32 86029, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral.10, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 33056, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame_adu, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.11 = private unnamed_addr constant [7 x i8] c"mp3on4\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"MP3onMP4\00", align 1
@.compoundliteral.13 = internal constant [2 x i32] [i32 6, i32 -1], align 4
@ff_mp3on4_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i32 1, i32 86030, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.13, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 56, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init_mp3on4, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame_mp3on4, i32 (%struct.AVCodecContext*)* @decode_close_mp3on4, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush_mp3on4, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@decode_init.initialized_tables = internal global i32 0, align 4
@scale_factor_modshift = internal global [64 x i16] zeroinitializer, align 16
@scale_factor_mult = internal global [15 x [3 x i32]] zeroinitializer, align 16
@ff_mpa_synth_window_fixed = external global [0 x i32], align 4
@mpa_huff_tables = internal constant [16 x %struct.HuffTable] [%struct.HuffTable { i32 1, i8* null, i16* null }, %struct.HuffTable { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @mpa_huffbits_1, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @mpa_huffcodes_1, i32 0, i32 0) }, %struct.HuffTable { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @mpa_huffbits_2, i32 0, i32 0), i16* getelementptr inbounds ([9 x i16], [9 x i16]* @mpa_huffcodes_2, i32 0, i32 0) }, %struct.HuffTable { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @mpa_huffbits_3, i32 0, i32 0), i16* getelementptr inbounds ([9 x i16], [9 x i16]* @mpa_huffcodes_3, i32 0, i32 0) }, %struct.HuffTable { i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mpa_huffbits_5, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @mpa_huffcodes_5, i32 0, i32 0) }, %struct.HuffTable { i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mpa_huffbits_6, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @mpa_huffcodes_6, i32 0, i32 0) }, %struct.HuffTable { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @mpa_huffbits_7, i32 0, i32 0), i16* getelementptr inbounds ([36 x i16], [36 x i16]* @mpa_huffcodes_7, i32 0, i32 0) }, %struct.HuffTable { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @mpa_huffbits_8, i32 0, i32 0), i16* getelementptr inbounds ([36 x i16], [36 x i16]* @mpa_huffcodes_8, i32 0, i32 0) }, %struct.HuffTable { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @mpa_huffbits_9, i32 0, i32 0), i16* getelementptr inbounds ([36 x i16], [36 x i16]* @mpa_huffcodes_9, i32 0, i32 0) }, %struct.HuffTable { i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @mpa_huffbits_10, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @mpa_huffcodes_10, i32 0, i32 0) }, %struct.HuffTable { i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @mpa_huffbits_11, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @mpa_huffcodes_11, i32 0, i32 0) }, %struct.HuffTable { i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @mpa_huffbits_12, i32 0, i32 0), i16* getelementptr inbounds ([64 x i16], [64 x i16]* @mpa_huffcodes_12, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_13, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_13, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_15, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_15, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_16, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_16, i32 0, i32 0) }, %struct.HuffTable { i32 16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @mpa_huffbits_24, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @mpa_huffcodes_24, i32 0, i32 0) }], align 16
@huff_vlc_tables = internal global [3746 x [2 x i16]] zeroinitializer, align 16
@huff_vlc = internal global [16 x %struct.VLC] zeroinitializer, align 16
@huff_vlc_tables_sizes = internal constant [16 x i32] [i32 0, i32 128, i32 128, i32 128, i32 130, i32 128, i32 154, i32 166, i32 142, i32 204, i32 190, i32 170, i32 542, i32 460, i32 662, i32 414], align 16
@.str.14 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.15 = private unnamed_addr constant [67 x i8] c"offset == (sizeof(huff_vlc_tables) / sizeof((huff_vlc_tables)[0]))\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"libavcodec/mpegaudiodec_template.c\00", align 1
@huff_quad_vlc_tables = internal global [144 x [2 x i16]] zeroinitializer, align 16
@huff_quad_vlc = internal global [2 x %struct.VLC] zeroinitializer, align 16
@huff_quad_vlc_tables_sizes = internal constant [2 x i32] [i32 128, i32 16], align 4
@mpa_quad_bits = internal constant [2 x [16 x i8]] [[16 x i8] c"\01\04\04\05\04\06\05\06\04\05\05\06\05\06\06\06", [16 x i8] c"\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04"], align 16
@mpa_quad_codes = internal constant [2 x [16 x i8]] [[16 x i8] c"\01\05\04\05\06\05\04\04\07\03\06\00\07\02\03\01", [16 x i8] c"\0F\0E\0D\0C\0B\0A\09\08\07\06\05\04\03\02\01\00"], align 16
@.str.17 = private unnamed_addr constant [77 x i8] c"offset == (sizeof(huff_quad_vlc_tables) / sizeof((huff_quad_vlc_tables)[0]))\00", align 1
@band_index_long = internal global [9 x [23 x i16]] zeroinitializer, align 16
@band_size_long = internal constant [9 x [22 x i8]] [[22 x i8] c"\04\04\04\04\04\04\06\06\08\08\0A\0C\10\14\18\1C\22*26L\9E", [22 x i8] c"\04\04\04\04\04\04\06\06\06\08\0A\0C\10\12\16\1C\22(.66\C0", [22 x i8] c"\04\04\04\04\04\04\06\06\08\0A\0C\10\14\18\1E&.8DTf\1A", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\12\16\1A &.4@FL$", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\06\06\06\06\06\06\08\0A\0C\0E\10\14\18\1C &.4<D:6", [22 x i8] c"\0C\0C\0C\0C\0C\0C\10\14\18\1C (08@LZ\02\02\02\02\02"], align 16
@ff_mpa_quant_bits = external constant [17 x i32], align 16
@ff_mpa_quant_steps = external constant [17 x i32], align 16
@division_tabs = internal constant [4 x i16*] [i16* getelementptr inbounds ([64 x i16], [64 x i16]* @division_tab3, i32 0, i32 0), i16* getelementptr inbounds ([256 x i16], [256 x i16]* @division_tab5, i32 0, i32 0), i16* null, i16* getelementptr inbounds ([2048 x i16], [2048 x i16]* @division_tab9, i32 0, i32 0)], align 16
@is_table = internal global [2 x [16 x i32]] zeroinitializer, align 16
@is_table_lsf = internal global [2 x [2 x [16 x i32]]] zeroinitializer, align 16
@ci_table = internal constant [8 x float] [float 0xBFE3333340000000, float 0xBFE11EB860000000, float 0xBFD51EB860000000, float 0xBFC7AE1480000000, float 0xBFB851EB80000000, float 0xBFA4FDF3C0000000, float 0xBF8D14E3C0000000, float 0xBF6E4F7660000000], align 16
@csa_table = internal global [8 x [4 x i32]] zeroinitializer, align 16
@mpa_huffbits_1 = internal constant [4 x i8] c"\01\03\02\03", align 1
@mpa_huffcodes_1 = internal constant [4 x i16] [i16 1, i16 1, i16 1, i16 0], align 2
@mpa_huffbits_2 = internal constant [9 x i8] c"\01\03\06\03\03\05\05\05\06", align 1
@mpa_huffcodes_2 = internal constant [9 x i16] [i16 1, i16 2, i16 1, i16 3, i16 1, i16 1, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_3 = internal constant [9 x i8] c"\02\02\06\03\02\05\05\05\06", align 1
@mpa_huffcodes_3 = internal constant [9 x i16] [i16 3, i16 2, i16 1, i16 1, i16 1, i16 1, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_5 = internal constant [16 x i8] c"\01\03\06\07\03\03\06\07\06\06\07\08\07\06\07\08", align 16
@mpa_huffcodes_5 = internal constant [16 x i16] [i16 1, i16 2, i16 6, i16 5, i16 3, i16 1, i16 4, i16 4, i16 7, i16 5, i16 7, i16 1, i16 6, i16 1, i16 1, i16 0], align 16
@mpa_huffbits_6 = internal constant [16 x i8] c"\03\03\05\07\03\02\04\05\04\04\05\06\06\05\06\07", align 16
@mpa_huffcodes_6 = internal constant [16 x i16] [i16 7, i16 3, i16 5, i16 1, i16 6, i16 2, i16 3, i16 2, i16 5, i16 4, i16 4, i16 1, i16 3, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_7 = internal constant [36 x i8] c"\01\03\06\08\08\09\03\04\06\07\07\08\06\05\07\08\08\09\07\07\08\09\09\09\07\07\08\09\09\0A\08\08\09\0A\0A\0A", align 16
@mpa_huffcodes_7 = internal constant [36 x i16] [i16 1, i16 2, i16 10, i16 19, i16 16, i16 10, i16 3, i16 3, i16 7, i16 10, i16 5, i16 3, i16 11, i16 4, i16 13, i16 17, i16 8, i16 4, i16 12, i16 11, i16 18, i16 15, i16 11, i16 2, i16 7, i16 6, i16 9, i16 14, i16 3, i16 1, i16 6, i16 4, i16 5, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_8 = internal constant [36 x i8] c"\02\03\06\08\08\09\03\02\04\08\08\08\06\04\06\08\08\09\08\08\08\09\09\0A\08\07\08\09\0A\0A\09\08\09\09\0B\0B", align 16
@mpa_huffcodes_8 = internal constant [36 x i16] [i16 3, i16 4, i16 6, i16 18, i16 12, i16 5, i16 5, i16 1, i16 2, i16 16, i16 9, i16 3, i16 7, i16 3, i16 5, i16 14, i16 7, i16 3, i16 19, i16 17, i16 15, i16 13, i16 10, i16 4, i16 13, i16 5, i16 8, i16 11, i16 5, i16 1, i16 12, i16 4, i16 4, i16 1, i16 1, i16 0], align 16
@mpa_huffbits_9 = internal constant [36 x i8] c"\03\03\05\06\08\09\03\03\04\05\06\08\04\04\05\06\07\08\06\05\06\07\07\08\07\06\07\07\08\09\08\07\08\08\09\09", align 16
@mpa_huffcodes_9 = internal constant [36 x i16] [i16 7, i16 5, i16 9, i16 14, i16 15, i16 7, i16 6, i16 4, i16 5, i16 5, i16 6, i16 7, i16 7, i16 6, i16 8, i16 8, i16 8, i16 5, i16 15, i16 6, i16 9, i16 10, i16 5, i16 1, i16 11, i16 7, i16 9, i16 6, i16 4, i16 1, i16 14, i16 4, i16 6, i16 2, i16 6, i16 0], align 16
@mpa_huffbits_10 = internal constant [64 x i8] c"\01\03\06\08\09\09\09\0A\03\04\06\07\08\09\08\08\06\06\07\08\09\0A\09\09\07\07\08\09\0A\0A\09\0A\08\08\09\0A\0A\0A\0A\0A\09\09\0A\0A\0B\0B\0A\0B\08\08\09\0A\0A\0A\0B\0B\09\08\09\0A\0A\0B\0B\0B", align 16
@mpa_huffcodes_10 = internal constant [64 x i16] [i16 1, i16 2, i16 10, i16 23, i16 35, i16 30, i16 12, i16 17, i16 3, i16 3, i16 8, i16 12, i16 18, i16 21, i16 12, i16 7, i16 11, i16 9, i16 15, i16 21, i16 32, i16 40, i16 19, i16 6, i16 14, i16 13, i16 22, i16 34, i16 46, i16 23, i16 18, i16 7, i16 20, i16 19, i16 33, i16 47, i16 27, i16 22, i16 9, i16 3, i16 31, i16 22, i16 41, i16 26, i16 21, i16 20, i16 5, i16 3, i16 14, i16 13, i16 10, i16 11, i16 16, i16 6, i16 5, i16 1, i16 9, i16 8, i16 7, i16 8, i16 4, i16 4, i16 2, i16 0], align 16
@mpa_huffbits_11 = internal constant [64 x i8] c"\02\03\05\07\08\09\08\09\03\03\04\06\08\08\07\08\05\05\06\07\08\09\08\08\07\06\07\09\08\0A\08\09\08\08\08\09\09\0A\09\0A\08\08\09\0A\0A\0B\0A\0B\08\07\07\08\09\0A\0A\0A\08\07\08\09\0A\0A\0A\0A", align 16
@mpa_huffcodes_11 = internal constant [64 x i16] [i16 3, i16 4, i16 10, i16 24, i16 34, i16 33, i16 21, i16 15, i16 5, i16 3, i16 4, i16 10, i16 32, i16 17, i16 11, i16 10, i16 11, i16 7, i16 13, i16 18, i16 30, i16 31, i16 20, i16 5, i16 25, i16 11, i16 19, i16 59, i16 27, i16 18, i16 12, i16 5, i16 35, i16 33, i16 31, i16 58, i16 30, i16 16, i16 7, i16 5, i16 28, i16 26, i16 32, i16 19, i16 17, i16 15, i16 8, i16 14, i16 14, i16 12, i16 9, i16 13, i16 14, i16 9, i16 4, i16 1, i16 11, i16 4, i16 6, i16 6, i16 6, i16 3, i16 2, i16 0], align 16
@mpa_huffbits_12 = internal constant [64 x i8] c"\04\03\05\07\08\09\09\09\03\03\04\05\07\07\08\08\05\04\05\06\07\08\07\08\06\05\06\06\07\08\08\08\07\06\07\07\08\08\08\09\08\07\08\08\08\09\08\09\08\07\07\08\08\09\09\0A\09\08\08\09\09\09\09\0A", align 16
@mpa_huffcodes_12 = internal constant [64 x i16] [i16 9, i16 6, i16 16, i16 33, i16 41, i16 39, i16 38, i16 26, i16 7, i16 5, i16 6, i16 9, i16 23, i16 16, i16 26, i16 11, i16 17, i16 7, i16 11, i16 14, i16 21, i16 30, i16 10, i16 7, i16 17, i16 10, i16 15, i16 12, i16 18, i16 28, i16 14, i16 5, i16 32, i16 13, i16 22, i16 19, i16 18, i16 16, i16 9, i16 5, i16 40, i16 17, i16 31, i16 29, i16 17, i16 13, i16 4, i16 2, i16 27, i16 12, i16 11, i16 15, i16 10, i16 7, i16 4, i16 1, i16 27, i16 12, i16 8, i16 12, i16 6, i16 3, i16 1, i16 0], align 16
@mpa_huffbits_13 = internal constant [256 x i8] c"\01\04\06\07\08\09\09\0A\09\0A\0B\0B\0C\0C\0D\0D\03\04\06\07\08\08\09\09\09\09\0A\0A\0B\0C\0C\0C\06\06\07\08\09\09\0A\0A\09\0A\0A\0B\0B\0C\0D\0D\07\07\08\09\09\0A\0A\0A\0A\0B\0B\0B\0B\0C\0D\0D\08\07\09\09\0A\0A\0B\0B\0A\0B\0B\0C\0C\0D\0D\0E\09\08\09\0A\0A\0A\0B\0B\0B\0B\0C\0B\0D\0D\0E\0E\09\09\0A\0A\0B\0B\0B\0B\0B\0C\0C\0C\0D\0D\0E\0E\0A\09\0A\0B\0B\0B\0C\0C\0C\0C\0D\0D\0D\0E\10\10\09\08\09\0A\0A\0B\0B\0C\0C\0C\0C\0D\0D\0E\0F\0F\0A\09\0A\0A\0B\0B\0B\0D\0C\0D\0D\0E\0E\0E\10\0F\0A\0A\0A\0B\0B\0C\0C\0D\0C\0D\0E\0D\0E\0F\10\11\0B\0A\0A\0B\0C\0C\0C\0C\0D\0D\0D\0E\0F\0F\0F\10\0B\0B\0B\0C\0C\0D\0C\0D\0E\0E\0F\0F\0F\10\10\10\0C\0B\0C\0D\0D\0D\0E\0E\0E\0E\0E\0F\10\0F\10\10\0D\0C\0C\0D\0D\0D\0F\0E\0E\11\0F\0F\0F\11\10\10\0C\0C\0D\0E\0E\0E\0F\0E\0F\0F\10\10\13\12\13\10", align 16
@mpa_huffcodes_13 = internal constant [256 x i16] [i16 1, i16 5, i16 14, i16 21, i16 34, i16 51, i16 46, i16 71, i16 42, i16 52, i16 68, i16 52, i16 67, i16 44, i16 43, i16 19, i16 3, i16 4, i16 12, i16 19, i16 31, i16 26, i16 44, i16 33, i16 31, i16 24, i16 32, i16 24, i16 31, i16 35, i16 22, i16 14, i16 15, i16 13, i16 23, i16 36, i16 59, i16 49, i16 77, i16 65, i16 29, i16 40, i16 30, i16 40, i16 27, i16 33, i16 42, i16 16, i16 22, i16 20, i16 37, i16 61, i16 56, i16 79, i16 73, i16 64, i16 43, i16 76, i16 56, i16 37, i16 26, i16 31, i16 25, i16 14, i16 35, i16 16, i16 60, i16 57, i16 97, i16 75, i16 114, i16 91, i16 54, i16 73, i16 55, i16 41, i16 48, i16 53, i16 23, i16 24, i16 58, i16 27, i16 50, i16 96, i16 76, i16 70, i16 93, i16 84, i16 77, i16 58, i16 79, i16 29, i16 74, i16 49, i16 41, i16 17, i16 47, i16 45, i16 78, i16 74, i16 115, i16 94, i16 90, i16 79, i16 69, i16 83, i16 71, i16 50, i16 59, i16 38, i16 36, i16 15, i16 72, i16 34, i16 56, i16 95, i16 92, i16 85, i16 91, i16 90, i16 86, i16 73, i16 77, i16 65, i16 51, i16 44, i16 43, i16 42, i16 43, i16 20, i16 30, i16 44, i16 55, i16 78, i16 72, i16 87, i16 78, i16 61, i16 46, i16 54, i16 37, i16 30, i16 20, i16 16, i16 53, i16 25, i16 41, i16 37, i16 44, i16 59, i16 54, i16 81, i16 66, i16 76, i16 57, i16 54, i16 37, i16 18, i16 39, i16 11, i16 35, i16 33, i16 31, i16 57, i16 42, i16 82, i16 72, i16 80, i16 47, i16 58, i16 55, i16 21, i16 22, i16 26, i16 38, i16 22, i16 53, i16 25, i16 23, i16 38, i16 70, i16 60, i16 51, i16 36, i16 55, i16 26, i16 34, i16 23, i16 27, i16 14, i16 9, i16 7, i16 34, i16 32, i16 28, i16 39, i16 49, i16 75, i16 30, i16 52, i16 48, i16 40, i16 52, i16 28, i16 18, i16 17, i16 9, i16 5, i16 45, i16 21, i16 34, i16 64, i16 56, i16 50, i16 49, i16 45, i16 31, i16 19, i16 12, i16 15, i16 10, i16 7, i16 6, i16 3, i16 48, i16 23, i16 20, i16 39, i16 36, i16 35, i16 53, i16 21, i16 16, i16 23, i16 13, i16 10, i16 6, i16 1, i16 4, i16 2, i16 16, i16 15, i16 17, i16 27, i16 25, i16 20, i16 29, i16 11, i16 17, i16 12, i16 16, i16 8, i16 1, i16 1, i16 0, i16 1], align 16
@mpa_huffbits_15 = internal constant [256 x i8] calign 16
@mpa_huffcodes_15 = internal constant [256 x i16] [i16 7, i16 12, i16 18, i16 53, i16 47, i16 76, i16 124, i16 108, i16 89, i16 123, i16 108, i16 119, i16 107, i16 81, i16 122, i16 63, i16 13, i16 5, i16 16, i16 27, i16 46, i16 36, i16 61, i16 51, i16 42, i16 70, i16 52, i16 83, i16 65, i16 41, i16 59, i16 36, i16 19, i16 17, i16 15, i16 24, i16 41, i16 34, i16 59, i16 48, i16 40, i16 64, i16 50, i16 78, i16 62, i16 80, i16 56, i16 33, i16 29, i16 28, i16 25, i16 43, i16 39, i16 63, i16 55, i16 93, i16 76, i16 59, i16 93, i16 72, i16 54, i16 75, i16 50, i16 29, i16 52, i16 22, i16 42, i16 40, i16 67, i16 57, i16 95, i16 79, i16 72, i16 57, i16 89, i16 69, i16 49, i16 66, i16 46, i16 27, i16 77, i16 37, i16 35, i16 66, i16 58, i16 52, i16 91, i16 74, i16 62, i16 48, i16 79, i16 63, i16 90, i16 62, i16 40, i16 38, i16 125, i16 32, i16 60, i16 56, i16 50, i16 92, i16 78, i16 65, i16 55, i16 87, i16 71, i16 51, i16 73, i16 51, i16 70, i16 30, i16 109, i16 53, i16 49, i16 94, i16 88, i16 75, i16 66, i16 122, i16 91, i16 73, i16 56, i16 42, i16 64, i16 44, i16 21, i16 25, i16 90, i16 43, i16 41, i16 77, i16 73, i16 63, i16 56, i16 92, i16 77, i16 66, i16 47, i16 67, i16 48, i16 53, i16 36, i16 20, i16 71, i16 34, i16 67, i16 60, i16 58, i16 49, i16 88, i16 76, i16 67, i16 106, i16 71, i16 54, i16 38, i16 39, i16 23, i16 15, i16 109, i16 53, i16 51, i16 47, i16 90, i16 82, i16 58, i16 57, i16 48, i16 72, i16 57, i16 41, i16 23, i16 27, i16 62, i16 9, i16 86, i16 42, i16 40, i16 37, i16 70, i16 64, i16 52, i16 43, i16 70, i16 55, i16 42, i16 25, i16 29, i16 18, i16 11, i16 11, i16 118, i16 68, i16 30, i16 55, i16 50, i16 46, i16 74, i16 65, i16 49, i16 39, i16 24, i16 16, i16 22, i16 13, i16 14, i16 7, i16 91, i16 44, i16 39, i16 38, i16 34, i16 63, i16 52, i16 45, i16 31, i16 52, i16 28, i16 19, i16 14, i16 8, i16 9, i16 3, i16 123, i16 60, i16 58, i16 53, i16 47, i16 43, i16 32, i16 22, i16 37, i16 24, i16 17, i16 12, i16 15, i16 10, i16 2, i16 1, i16 71, i16 37, i16 34, i16 30, i16 28, i16 20, i16 17, i16 26, i16 21, i16 16, i16 10, i16 6, i16 8, i16 6, i16 2, i16 0], align 16
@mpa_huffbits_16 = internal constant [256 x i8] c"\01\04\06\08\09\09\0A\0A\0B\0B\0B\0C\0C\0C\0D\09\03\04\06\07\08\09\09\09\0A\0A\0A\0B\0C\0B\0C\08\06\06\07\08\09\09\0A\0A\0B\0A\0B\0B\0B\0C\0C\09\08\07\08\09\09\0A\0A\0A\0B\0B\0C\0C\0C\0D\0D\0A\09\08\09\09\0A\0A\0B\0B\0B\0C\0C\0C\0D\0D\0D\09\09\08\09\09\0A\0B\0B\0C\0B\0C\0C\0D\0D\0D\0E\0A\0A\09\09\0A\0B\0B\0B\0B\0C\0C\0C\0C\0D\0D\0E\0A\0A\09\0A\0A\0B\0B\0B\0C\0C\0D\0D\0D\0D\0F\0F\0A\0A\0A\0A\0B\0B\0B\0C\0C\0D\0D\0D\0D\0E\0E\0E\0A\0B\0A\0A\0B\0B\0C\0C\0D\0D\0D\0D\0E\0D\0E\0D\0B\0B\0B\0A\0B\0C\0C\0C\0C\0D\0E\0E\0E\0F\0F\0E\0A\0C\0B\0B\0B\0C\0C\0D\0E\0E\0E\0E\0E\0E\0D\0E\0B\0C\0C\0C\0C\0C\0D\0D\0D\0D\0F\0E\0E\0E\0E\10\0B\0E\0C\0C\0C\0D\0D\0E\0E\0E\10\0F\0F\0F\11\0F\0B\0D\0D\0B\0C\0E\0E\0D\0E\0E\0F\10\0F\11\0F\0E\0B\09\08\08\09\09\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\08", align 16
@mpa_huffcodes_16 = internal constant [256 x i16] [i16 1, i16 5, i16 14, i16 44, i16 74, i16 63, i16 110, i16 93, i16 172, i16 149, i16 138, i16 242, i16 225, i16 195, i16 376, i16 17, i16 3, i16 4, i16 12, i16 20, i16 35, i16 62, i16 53, i16 47, i16 83, i16 75, i16 68, i16 119, i16 201, i16 107, i16 207, i16 9, i16 15, i16 13, i16 23, i16 38, i16 67, i16 58, i16 103, i16 90, i16 161, i16 72, i16 127, i16 117, i16 110, i16 209, i16 206, i16 16, i16 45, i16 21, i16 39, i16 69, i16 64, i16 114, i16 99, i16 87, i16 158, i16 140, i16 252, i16 212, i16 199, i16 387, i16 365, i16 26, i16 75, i16 36, i16 68, i16 65, i16 115, i16 101, i16 179, i16 164, i16 155, i16 264, i16 246, i16 226, i16 395, i16 382, i16 362, i16 9, i16 66, i16 30, i16 59, i16 56, i16 102, i16 185, i16 173, i16 265, i16 142, i16 253, i16 232, i16 400, i16 388, i16 378, i16 445, i16 16, i16 111, i16 54, i16 52, i16 100, i16 184, i16 178, i16 160, i16 133, i16 257, i16 244, i16 228, i16 217, i16 385, i16 366, i16 715, i16 10, i16 98, i16 48, i16 91, i16 88, i16 165, i16 157, i16 148, i16 261, i16 248, i16 407, i16 397, i16 372, i16 380, i16 889, i16 884, i16 8, i16 85, i16 84, i16 81, i16 159, i16 156, i16 143, i16 260, i16 249, i16 427, i16 401, i16 392, i16 383, i16 727, i16 713, i16 708, i16 7, i16 154, i16 76, i16 73, i16 141, i16 131, i16 256, i16 245, i16 426, i16 406, i16 394, i16 384, i16 735, i16 359, i16 710, i16 352, i16 11, i16 139, i16 129, i16 67, i16 125, i16 247, i16 233, i16 229, i16 219, i16 393, i16 743, i16 737, i16 720, i16 885, i16 882, i16 439, i16 4, i16 243, i16 120, i16 118, i16 115, i16 227, i16 223, i16 396, i16 746, i16 742, i16 736, i16 721, i16 712, i16 706, i16 223, i16 436, i16 6, i16 202, i16 224, i16 222, i16 218, i16 216, i16 389, i16 386, i16 381, i16 364, i16 888, i16 443, i16 707, i16 440, i16 437, i16 1728, i16 4, i16 747, i16 211, i16 210, i16 208, i16 370, i16 379, i16 734, i16 723, i16 714, i16 1735, i16 883, i16 877, i16 876, i16 3459, i16 865, i16 2, i16 377, i16 369, i16 102, i16 187, i16 726, i16 722, i16 358, i16 711, i16 709, i16 866, i16 1734, i16 871, i16 3458, i16 870, i16 434, i16 0, i16 12, i16 10, i16 7, i16 11, i16 10, i16 17, i16 11, i16 9, i16 13, i16 12, i16 10, i16 7, i16 5, i16 3, i16 1, i16 3], align 16
@mpa_huffbits_24 = internal constant [256 x i8] calign 16
@mpa_huffcodes_24 = internal constant [256 x i16] [i16 15, i16 13, i16 46, i16 80, i16 146, i16 262, i16 248, i16 434, i16 426, i16 669, i16 653, i16 649, i16 621, i16 517, i16 1032, i16 88, i16 14, i16 12, i16 21, i16 38, i16 71, i16 130, i16 122, i16 216, i16 209, i16 198, i16 327, i16 345, i16 319, i16 297, i16 279, i16 42, i16 47, i16 22, i16 41, i16 74, i16 68, i16 128, i16 120, i16 221, i16 207, i16 194, i16 182, i16 340, i16 315, i16 295, i16 541, i16 18, i16 81, i16 39, i16 75, i16 70, i16 134, i16 125, i16 116, i16 220, i16 204, i16 190, i16 178, i16 325, i16 311, i16 293, i16 271, i16 16, i16 147, i16 72, i16 69, i16 135, i16 127, i16 118, i16 112, i16 210, i16 200, i16 188, i16 352, i16 323, i16 306, i16 285, i16 540, i16 14, i16 263, i16 66, i16 129, i16 126, i16 119, i16 114, i16 214, i16 202, i16 192, i16 180, i16 341, i16 317, i16 301, i16 281, i16 262, i16 12, i16 249, i16 123, i16 121, i16 117, i16 113, i16 215, i16 206, i16 195, i16 185, i16 347, i16 330, i16 308, i16 291, i16 272, i16 520, i16 10, i16 435, i16 115, i16 111, i16 109, i16 211, i16 203, i16 196, i16 187, i16 353, i16 332, i16 313, i16 298, i16 283, i16 531, i16 381, i16 17, i16 427, i16 212, i16 208, i16 205, i16 201, i16 193, i16 186, i16 177, i16 169, i16 320, i16 303, i16 286, i16 268, i16 514, i16 377, i16 16, i16 335, i16 199, i16 197, i16 191, i16 189, i16 181, i16 174, i16 333, i16 321, i16 305, i16 289, i16 275, i16 521, i16 379, i16 371, i16 11, i16 668, i16 184, i16 183, i16 179, i16 175, i16 344, i16 331, i16 314, i16 304, i16 290, i16 277, i16 530, i16 383, i16 373, i16 366, i16 10, i16 652, i16 346, i16 171, i16 168, i16 164, i16 318, i16 309, i16 299, i16 287, i16 276, i16 263, i16 513, i16 375, i16 368, i16 362, i16 6, i16 648, i16 322, i16 316, i16 312, i16 307, i16 302, i16 292, i16 284, i16 269, i16 261, i16 512, i16 376, i16 370, i16 364, i16 359, i16 4, i16 620, i16 300, i16 296, i16 294, i16 288, i16 282, i16 273, i16 266, i16 515, i16 380, i16 374, i16 369, i16 365, i16 361, i16 357, i16 2, i16 1033, i16 280, i16 278, i16 274, i16 267, i16 264, i16 259, i16 382, i16 378, i16 372, i16 367, i16 363, i16 360, i16 358, i16 356, i16 0, i16 43, i16 20, i16 19, i16 17, i16 15, i16 13, i16 11, i16 9, i16 7, i16 6, i16 4, i16 7, i16 5, i16 3, i16 1, i16 3], align 16
@mpegaudio_tableinit.exp2_lut = internal constant [4 x double] [double 1.000000e+00, double 0x3FF306FE0A31B715, double 0x3FF6A09E667F3BCD, double 0x3FFAE89F995AD3AD], align 16
@mpegaudio_tableinit.pow43_lut = internal global [16 x double] zeroinitializer, align 16
@table_4_3_value = internal global [32828 x i32] zeroinitializer, align 16
@table_4_3_exp = internal global [32828 x i8] zeroinitializer, align 16
@expval_table_fixed = internal global [512 x [16 x i32]] zeroinitializer, align 16
@expval_table_float = internal global [512 x [16 x float]] zeroinitializer, align 16
@exp_table_fixed = internal global [512 x i32] zeroinitializer, align 16
@exp_table_float = internal global [512 x float] zeroinitializer, align 16
@division_tab3 = internal global [64 x i16] zeroinitializer, align 16
@division_tab5 = internal global [256 x i16] zeroinitializer, align 16
@division_tab9 = internal global [2048 x i16] zeroinitializer, align 16
@.str.18 = private unnamed_addr constant [4 x i8] c"TAG\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"discarding ID3 tag\0A\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"Header missing\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"incomplete frame\0A\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"incorrect frame size - multiple frames in buffer?\0A\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"Error while decoding MPEG audio frame.\0A\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"invalid old backstep %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"invalid new backstep %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"s->frame\00", align 1
@ff_mpa_sblimit_table = external constant [5 x i32], align 16
@ff_mpa_alloc_tables = external constant [5 x i8*], align 16
@scale_factor_mult2 = internal constant [3 x [3 x i32]] [[3 x i32] [i32 11184811, i32 8877390, i32 7045989], [3 x i32] [i32 6710886, i32 5326434, i32 4227594], [3 x i32] [i32 3728270, i32 2959130, i32 2348663]], align 16
@.str.27 = private unnamed_addr constant [20 x i8] c"big_values too big\0A\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"invalid block type\0A\00", align 1
@slen_table = internal constant [2 x [16 x i8]] [[16 x i8] c"\00\00\00\00\03\01\01\01\02\02\02\03\03\03\04\04", [16 x i8] c"\00\01\02\03\00\01\02\03\01\02\03\01\02\03\02\03"], align 16
@lsf_nsf_table = internal constant [6 x [3 x [4 x i8]]] [[3 x [4 x i8]] [[4 x i8] c"\06\05\05\05", [4 x i8] c"\09\09\09\09", [4 x i8] c"\06\09\09\09"], [3 x [4 x i8]] [[4 x i8] c"\06\05\07\03", [4 x i8] c"\09\09\0C\06", [4 x i8] c"\06\09\0C\06"], [3 x [4 x i8]] [[4 x i8] c"\0B\0A\00\00", [4 x i8] c"\12\12\00\00", [4 x i8] c"\0F\12\00\00"], [3 x [4 x i8]] [[4 x i8] c"\07\07\07\00", [4 x i8] c"\0C\0C\0C\00", [4 x i8] c"\06\0F\0C\00"], [3 x [4 x i8]] [[4 x i8] c"\06\06\06\03", [4 x i8] c"\0C\09\09\06", [4 x i8] c"\06\0C\09\06"], [3 x [4 x i8]] [[4 x i8] c"\08\08\05\00", [4 x i8] c"\0F\0C\09\00", [4 x i8] c"\06\12\09\00"]], align 16
@.str.29 = private unnamed_addr constant [21 x i8] c"switch point in 8khz\00", align 1
@ff_mdct_win_fixed = external global [8 x [40 x i32]], align 16
@mpa_pretab = internal constant [2 x [22 x i8]] [[22 x i8] zeroinitializer, [22 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\02\02\03\03\03\02\00"], align 16
@band_size_short = internal constant [9 x [13 x i8]] [[13 x i8] c"\04\04\04\04\06\08\0A\0C\0E\12\16\1E8", [13 x i8] c"\04\04\04\04\06\06\0A\0C\0E\10\14\1AB", [13 x i8] c"\04\04\04\04\06\08\0C\10\14\1A\22*\0C", [13 x i8] c"\04\04\04\06\06\08\0A\0E\12\1A *\12", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18 ,\0C", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18\1E(\12", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18\1E(\12", [13 x i8] c"\04\04\04\06\08\0A\0C\0E\12\18\1E(\12", [13 x i8] c"\08\08\08\0C\10\14\18\1C$\02\02\02\1A"], align 16
@mpa_huff_data = internal constant [32 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] zeroinitializer, [2 x i8] c"\04\00", [2 x i8] c"\05\00", [2 x i8] c"\06\00", [2 x i8] c"\07\00", [2 x i8] c"\08\00", [2 x i8] c"\09\00", [2 x i8] c"\0A\00", [2 x i8] c"\0B\00", [2 x i8] c"\0C\00", [2 x i8] zeroinitializer, [2 x i8] c"\0D\00", [2 x i8] c"\0E\01", [2 x i8] c"\0E\02", [2 x i8] c"\0E\03", [2 x i8] c"\0E\04", [2 x i8] c"\0E\06", [2 x i8] c"\0E\08", [2 x i8] c"\0E\0A", [2 x i8] c"\0E\0D", [2 x i8] c"\0F\04", [2 x i8] c"\0F\05", [2 x i8] c"\0F\06", [2 x i8] c"\0F\07", [2 x i8] c"\0F\08", [2 x i8] c"\0F\09", [2 x i8] c"\0F\0B", [2 x i8] c"\0F\0D"], align 16
@.str.30 = private unnamed_addr constant [35 x i8] c"overread, skip %d enddists: %d %d\0A\00", align 1
@huffman_decode.idxtab = internal constant [16 x i32] [i32 3, i32 3, i32 2, i32 2, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@.str.31 = private unnamed_addr constant [14 x i8] c"bits_left=%d\0A\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"Packet is too small\0A\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Invalid frame header\0A\00", align 1
@.str.34 = private unnamed_addr constant [39 x i8] c"Codec extradata missing or too short.\0A\00", align 1
@.str.35 = private unnamed_addr constant [32 x i8] c"Invalid channel config number.\0A\00", align 1
@mp3Frames = internal constant [8 x i8] c"\00\01\01\02\03\03\04\05", align 1
@chan_offset = internal constant [8 x [5 x i8]] [[5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] zeroinitializer, [5 x i8] c"\02\00\00\00\00", [5 x i8] c"\02\00\03\00\00", [5 x i8] c"\02\00\03\00\00", [5 x i8] c"\02\00\04\03\00", [5 x i8] c"\02\00\06\04\03"], align 16
@ff_mpeg4audio_channels = external constant [8 x i8], align 1
@chan_layout = internal constant [8 x i16] [i16 0, i16 4, i16 3, i16 7, i16 263, i16 1543, i16 1551, i16 1599], align 16
@.str.36 = private unnamed_addr constant [37 x i8] c"Frame size smaller than header size\0A\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"Bad header, discard block\0A\00", align 1
@.str.38 = private unnamed_addr constant [49 x i8] c"frame channel count exceeds codec channel count\0A\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"failed to decode channel %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"failed to decode all channels\0A\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1664 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MPADecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2018, metadata !2019), !dbg !2020
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s, metadata !2021, metadata !2019), !dbg !2022
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2023
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2024
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2024
  %2 = bitcast i8* %1 to %struct.MPADecodeContext*, !dbg !2023
  store %struct.MPADecodeContext* %2, %struct.MPADecodeContext** %s, align 8, !dbg !2022
  %3 = load i32, i32* @decode_init.initialized_tables, align 4, !dbg !2025
  %tobool = icmp ne i32 %3, 0, !dbg !2025
  br i1 %tobool, label %if.end, label %if.then, !dbg !2027

if.then:                                          ; preds = %entry
  call void @decode_init_static(), !dbg !2028
  store i32 1, i32* @decode_init.initialized_tables, align 4, !dbg !2030
  br label %if.end, !dbg !2031

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2032
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2033
  %avctx1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 26, !dbg !2034
  store %struct.AVCodecContext* %4, %struct.AVCodecContext** %avctx1, align 16, !dbg !2035
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2036
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 27, !dbg !2037
  call void @ff_mpadsp_init(%struct.MPADSPContext* %mpadsp), !dbg !2038
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2039
  %request_sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 92, !dbg !2041
  %8 = load i32, i32* %request_sample_fmt, align 4, !dbg !2041
  %cmp = icmp eq i32 %8, 1, !dbg !2042
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2043

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2044
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 4, !dbg !2045
  %10 = load i32, i32* %codec_id, align 8, !dbg !2045
  %cmp2 = icmp ne i32 %10, 86030, !dbg !2046
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !2047

if.then3:                                         ; preds = %land.lhs.true
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2049
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 84, !dbg !2050
  store i32 1, i32* %sample_fmt, align 8, !dbg !2051
  br label %if.end5, !dbg !2049

if.else:                                          ; preds = %land.lhs.true, %if.end
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2052
  %sample_fmt4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 84, !dbg !2053
  store i32 6, i32* %sample_fmt4, align 8, !dbg !2054
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2055
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 135, !dbg !2056
  %14 = load i32, i32* %err_recognition, align 8, !dbg !2056
  %15 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2057
  %err_recognition6 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %15, i32 0, i32 25, !dbg !2058
  store i32 %14, i32* %err_recognition6, align 8, !dbg !2059
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2060
  %codec_id7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 4, !dbg !2062
  %17 = load i32, i32* %codec_id7, align 8, !dbg !2062
  %cmp8 = icmp eq i32 %17, 86029, !dbg !2063
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2064

if.then9:                                         ; preds = %if.end5
  %18 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2065
  %adu_mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %18, i32 0, i32 23, !dbg !2066
  store i32 1, i32* %adu_mode, align 32, !dbg !2067
  br label %if.end10, !dbg !2065

if.end10:                                         ; preds = %if.then9, %if.end5
  ret i32 0, !dbg !2068
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2069 {
entry:
  %x.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i53, metadata !2070, metadata !2019), !dbg !2075
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2070, metadata !2019), !dbg !2078
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.MPADecodeContext*, align 8
  %header = alloca i32, align 4
  %ret = alloca i32, align 4
  %skipped = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2080, metadata !2019), !dbg !2081
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2082, metadata !2019), !dbg !2083
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2084, metadata !2019), !dbg !2085
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2086, metadata !2019), !dbg !2087
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2088, metadata !2019), !dbg !2089
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2090
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !2091
  %1 = load i8*, i8** %data1, align 8, !dbg !2091
  store i8* %1, i8** %buf, align 8, !dbg !2089
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2092, metadata !2019), !dbg !2093
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2094
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !2095
  %3 = load i32, i32* %size, align 8, !dbg !2095
  store i32 %3, i32* %buf_size, align 4, !dbg !2093
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s, metadata !2096, metadata !2019), !dbg !2097
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2098
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !2099
  %5 = load i8*, i8** %priv_data, align 8, !dbg !2099
  %6 = bitcast i8* %5 to %struct.MPADecodeContext*, !dbg !2098
  store %struct.MPADecodeContext* %6, %struct.MPADecodeContext** %s, align 8, !dbg !2097
  call void @llvm.dbg.declare(metadata i32* %header, metadata !2100, metadata !2019), !dbg !2101
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2102, metadata !2019), !dbg !2103
  call void @llvm.dbg.declare(metadata i32* %skipped, metadata !2104, metadata !2019), !dbg !2105
  store i32 0, i32* %skipped, align 4, !dbg !2105
  br label %while.cond, !dbg !2106

while.cond:                                       ; preds = %while.body, %entry
  %7 = load i32, i32* %buf_size, align 4, !dbg !2107
  %tobool = icmp ne i32 %7, 0, !dbg !2107
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2109

land.rhs:                                         ; preds = %while.cond
  %8 = load i8*, i8** %buf, align 8, !dbg !2110
  %9 = load i8, i8* %8, align 1, !dbg !2112
  %tobool2 = icmp ne i8 %9, 0, !dbg !2113
  %lnot = xor i1 %tobool2, true, !dbg !2113
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %10, label %while.body, label %while.end, !dbg !2114

while.body:                                       ; preds = %land.end
  %11 = load i8*, i8** %buf, align 8, !dbg !2116
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !2116
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !2116
  %12 = load i32, i32* %buf_size, align 4, !dbg !2118
  %dec = add nsw i32 %12, -1, !dbg !2118
  store i32 %dec, i32* %buf_size, align 4, !dbg !2118
  %13 = load i32, i32* %skipped, align 4, !dbg !2119
  %inc = add nsw i32 %13, 1, !dbg !2119
  store i32 %inc, i32* %skipped, align 4, !dbg !2119
  br label %while.cond, !dbg !2120, !llvm.loop !2122

while.end:                                        ; preds = %land.end
  %14 = load i32, i32* %buf_size, align 4, !dbg !2123
  %cmp = icmp slt i32 %14, 4, !dbg !2125
  br i1 %cmp, label %if.then, label %if.end, !dbg !2126

if.then:                                          ; preds = %while.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !2127
  br label %return, !dbg !2127

if.end:                                           ; preds = %while.end
  %15 = load i8*, i8** %buf, align 8, !dbg !2128
  %16 = bitcast i8* %15 to %union.unaligned_32*, !dbg !2129
  %l = bitcast %union.unaligned_32* %16 to i32*, !dbg !2129
  %17 = load i32, i32* %l, align 1, !dbg !2129
  store i32 %17, i32* %x.addr.i, align 4, !dbg !2130
  %18 = load i32, i32* %x.addr.i, align 4, !dbg !2131
  %shl.i = shl i32 %18, 8, !dbg !2132
  %and.i = and i32 %shl.i, 65280, !dbg !2133
  %19 = load i32, i32* %x.addr.i, align 4, !dbg !2134
  %shr.i = lshr i32 %19, 8, !dbg !2135
  %and1.i = and i32 %shr.i, 255, !dbg !2136
  %or.i = or i32 %and.i, %and1.i, !dbg !2137
  %shl2.i = shl i32 %or.i, 16, !dbg !2138
  %20 = load i32, i32* %x.addr.i, align 4, !dbg !2139
  %shr3.i = lshr i32 %20, 16, !dbg !2140
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2141
  %and5.i = and i32 %shl4.i, 65280, !dbg !2142
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !2143
  %shr6.i = lshr i32 %21, 16, !dbg !2144
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2145
  %and8.i = and i32 %shr7.i, 255, !dbg !2146
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2147
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2148
  store i32 %or10.i, i32* %header, align 4, !dbg !2149
  %22 = load i32, i32* %header, align 4, !dbg !2150
  %shr = lshr i32 %22, 8, !dbg !2151
  %23 = load i32, i32* bitcast ([4 x i8]* @.str.18 to i32*), align 1, !dbg !2152
  store i32 %23, i32* %x.addr.i53, align 4, !dbg !2153
  %24 = load i32, i32* %x.addr.i53, align 4, !dbg !2154
  %shl.i54 = shl i32 %24, 8, !dbg !2155
  %and.i55 = and i32 %shl.i54, 65280, !dbg !2156
  %25 = load i32, i32* %x.addr.i53, align 4, !dbg !2157
  %shr.i56 = lshr i32 %25, 8, !dbg !2158
  %and1.i57 = and i32 %shr.i56, 255, !dbg !2159
  %or.i58 = or i32 %and.i55, %and1.i57, !dbg !2160
  %shl2.i59 = shl i32 %or.i58, 16, !dbg !2161
  %26 = load i32, i32* %x.addr.i53, align 4, !dbg !2162
  %shr3.i60 = lshr i32 %26, 16, !dbg !2163
  %shl4.i61 = shl i32 %shr3.i60, 8, !dbg !2164
  %and5.i62 = and i32 %shl4.i61, 65280, !dbg !2165
  %27 = load i32, i32* %x.addr.i53, align 4, !dbg !2166
  %shr6.i63 = lshr i32 %27, 16, !dbg !2167
  %shr7.i64 = lshr i32 %shr6.i63, 8, !dbg !2168
  %and8.i65 = and i32 %shr7.i64, 255, !dbg !2169
  %or9.i66 = or i32 %and5.i62, %and8.i65, !dbg !2170
  %or10.i67 = or i32 %shl2.i59, %or9.i66, !dbg !2171
  %shr4 = lshr i32 %or10.i67, 8, !dbg !2172
  %cmp5 = icmp eq i32 %shr, %shr4, !dbg !2173
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2174

if.then6:                                         ; preds = %if.end
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2175
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !2175
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0)), !dbg !2177
  %30 = load i32, i32* %buf_size, align 4, !dbg !2178
  %31 = load i32, i32* %skipped, align 4, !dbg !2179
  %add = add nsw i32 %30, %31, !dbg !2180
  store i32 %add, i32* %retval, align 4, !dbg !2181
  br label %return, !dbg !2181

if.end7:                                          ; preds = %if.end
  %32 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2182
  %33 = bitcast %struct.MPADecodeContext* %32 to %struct.MPADecodeHeader*, !dbg !2183
  %34 = load i32, i32* %header, align 4, !dbg !2184
  %call8 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* %33, i32 %34), !dbg !2185
  store i32 %call8, i32* %ret, align 4, !dbg !2186
  %35 = load i32, i32* %ret, align 4, !dbg !2187
  %cmp9 = icmp slt i32 %35, 0, !dbg !2189
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !2190

if.then10:                                        ; preds = %if.end7
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2191
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !2191
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !2193
  store i32 -1094995529, i32* %retval, align 4, !dbg !2194
  br label %return, !dbg !2194

if.else:                                          ; preds = %if.end7
  %38 = load i32, i32* %ret, align 4, !dbg !2195
  %cmp11 = icmp eq i32 %38, 1, !dbg !2197
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2198

if.then12:                                        ; preds = %if.else
  %39 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2199
  %frame_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %39, i32 0, i32 0, !dbg !2201
  store i32 -1, i32* %frame_size, align 32, !dbg !2202
  store i32 -1094995529, i32* %retval, align 4, !dbg !2203
  br label %return, !dbg !2203

if.end13:                                         ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13
  %40 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2204
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %40, i32 0, i32 6, !dbg !2205
  %41 = load i32, i32* %nb_channels, align 8, !dbg !2205
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2206
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 83, !dbg !2207
  store i32 %41, i32* %channels, align 4, !dbg !2208
  %43 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2209
  %nb_channels15 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %43, i32 0, i32 6, !dbg !2210
  %44 = load i32, i32* %nb_channels15, align 8, !dbg !2210
  %cmp16 = icmp eq i32 %44, 1, !dbg !2211
  %cond = select i1 %cmp16, i32 4, i32 3, !dbg !2209
  %conv = sext i32 %cond to i64, !dbg !2209
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2212
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 89, !dbg !2213
  store i64 %conv, i64* %channel_layout, align 8, !dbg !2214
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2215
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %46, i32 0, i32 9, !dbg !2217
  %47 = load i64, i64* %bit_rate, align 8, !dbg !2217
  %tobool17 = icmp ne i64 %47, 0, !dbg !2215
  br i1 %tobool17, label %if.end22, label %if.then18, !dbg !2218

if.then18:                                        ; preds = %if.end14
  %48 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2219
  %bit_rate19 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %48, i32 0, i32 5, !dbg !2220
  %49 = load i32, i32* %bit_rate19, align 4, !dbg !2220
  %conv20 = sext i32 %49 to i64, !dbg !2219
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2221
  %bit_rate21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 9, !dbg !2222
  store i64 %conv20, i64* %bit_rate21, align 8, !dbg !2223
  br label %if.end22, !dbg !2221

if.end22:                                         ; preds = %if.then18, %if.end14
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2224
  %frame_size23 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %51, i32 0, i32 0, !dbg !2226
  %52 = load i32, i32* %frame_size23, align 32, !dbg !2226
  %cmp24 = icmp sle i32 %52, 0, !dbg !2227
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !2228

if.then26:                                        ; preds = %if.end22
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2229
  %54 = bitcast %struct.AVCodecContext* %53 to i8*, !dbg !2229
  call void (i8*, i32, i8*, ...) @av_log(i8* %54, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i32 0, i32 0)), !dbg !2231
  store i32 -1094995529, i32* %retval, align 4, !dbg !2232
  br label %return, !dbg !2232

if.else27:                                        ; preds = %if.end22
  %55 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2233
  %frame_size28 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %55, i32 0, i32 0, !dbg !2235
  %56 = load i32, i32* %frame_size28, align 32, !dbg !2235
  %57 = load i32, i32* %buf_size, align 4, !dbg !2236
  %cmp29 = icmp slt i32 %56, %57, !dbg !2237
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !2238

if.then31:                                        ; preds = %if.else27
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2239
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !2239
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 48, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i32 0, i32 0)), !dbg !2241
  %60 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2242
  %frame_size32 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %60, i32 0, i32 0, !dbg !2243
  %61 = load i32, i32* %frame_size32, align 32, !dbg !2243
  store i32 %61, i32* %buf_size, align 4, !dbg !2244
  br label %if.end33, !dbg !2245

if.end33:                                         ; preds = %if.then31, %if.else27
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  %62 = load i8*, i8** %data.addr, align 8, !dbg !2246
  %63 = bitcast i8* %62 to %struct.AVFrame*, !dbg !2246
  %64 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2247
  %frame = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %64, i32 0, i32 29, !dbg !2248
  store %struct.AVFrame* %63, %struct.AVFrame** %frame, align 16, !dbg !2249
  %65 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2250
  %66 = load i8*, i8** %buf, align 8, !dbg !2251
  %67 = load i32, i32* %buf_size, align 4, !dbg !2252
  %call35 = call i32 @mp_decode_frame(%struct.MPADecodeContext* %65, i16** null, i8* %66, i32 %67), !dbg !2253
  store i32 %call35, i32* %ret, align 4, !dbg !2254
  %68 = load i32, i32* %ret, align 4, !dbg !2255
  %cmp36 = icmp sge i32 %68, 0, !dbg !2257
  br i1 %cmp36, label %if.then38, label %if.else42, !dbg !2258

if.then38:                                        ; preds = %if.end34
  %69 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2259
  %frame_size39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %69, i32 0, i32 85, !dbg !2261
  %70 = load i32, i32* %frame_size39, align 4, !dbg !2261
  %71 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2262
  %frame40 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %71, i32 0, i32 29, !dbg !2263
  %72 = load %struct.AVFrame*, %struct.AVFrame** %frame40, align 16, !dbg !2263
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %72, i32 0, i32 5, !dbg !2264
  store i32 %70, i32* %nb_samples, align 8, !dbg !2265
  %73 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2266
  store i32 1, i32* %73, align 4, !dbg !2267
  %74 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2268
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %74, i32 0, i32 3, !dbg !2269
  %75 = load i32, i32* %sample_rate, align 4, !dbg !2269
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2270
  %sample_rate41 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 82, !dbg !2271
  store i32 %75, i32* %sample_rate41, align 8, !dbg !2272
  br label %if.end50, !dbg !2273

if.else42:                                        ; preds = %if.end34
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2274
  %78 = bitcast %struct.AVCodecContext* %77 to i8*, !dbg !2274
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i32 0, i32 0)), !dbg !2276
  %79 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2277
  store i32 0, i32* %79, align 4, !dbg !2278
  %80 = load i32, i32* %buf_size, align 4, !dbg !2279
  %81 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2281
  %size43 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %81, i32 0, i32 4, !dbg !2282
  %82 = load i32, i32* %size43, align 8, !dbg !2282
  %cmp44 = icmp eq i32 %80, %82, !dbg !2283
  br i1 %cmp44, label %if.then48, label %lor.lhs.false, !dbg !2284

lor.lhs.false:                                    ; preds = %if.else42
  %83 = load i32, i32* %ret, align 4, !dbg !2285
  %cmp46 = icmp ne i32 %83, -1094995529, !dbg !2287
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !2288

if.then48:                                        ; preds = %lor.lhs.false, %if.else42
  %84 = load i32, i32* %ret, align 4, !dbg !2289
  store i32 %84, i32* %retval, align 4, !dbg !2290
  br label %return, !dbg !2290

if.end49:                                         ; preds = %lor.lhs.false
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then38
  %85 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2291
  %frame_size51 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %85, i32 0, i32 0, !dbg !2292
  store i32 0, i32* %frame_size51, align 32, !dbg !2293
  %86 = load i32, i32* %buf_size, align 4, !dbg !2294
  %87 = load i32, i32* %skipped, align 4, !dbg !2295
  %add52 = add nsw i32 %86, %87, !dbg !2296
  store i32 %add52, i32* %retval, align 4, !dbg !2297
  br label %return, !dbg !2297

return:                                           ; preds = %if.end50, %if.then48, %if.then26, %if.then12, %if.then10, %if.then6, %if.then
  %88 = load i32, i32* %retval, align 4, !dbg !2298
  ret i32 %88, !dbg !2298
}

; Function Attrs: nounwind uwtable
define internal void @flush(%struct.AVCodecContext* %avctx) #1 !dbg !2299 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2300, metadata !2019), !dbg !2301
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2302
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2303
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2303
  %2 = bitcast i8* %1 to %struct.MPADecodeContext*, !dbg !2302
  call void @mp_flush(%struct.MPADecodeContext* %2), !dbg !2304
  ret void, !dbg !2305
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame_adu(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2306 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2070, metadata !2019), !dbg !2307
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.MPADecodeContext*, align 8
  %header = alloca i32, align 4
  %len = alloca i32, align 4
  %ret = alloca i32, align 4
  %out_size = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2309, metadata !2019), !dbg !2310
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2311, metadata !2019), !dbg !2312
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2313, metadata !2019), !dbg !2314
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2315, metadata !2019), !dbg !2316
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2317, metadata !2019), !dbg !2318
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2319
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !2320
  %1 = load i8*, i8** %data1, align 8, !dbg !2320
  store i8* %1, i8** %buf, align 8, !dbg !2318
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2321, metadata !2019), !dbg !2322
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2323
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !2324
  %3 = load i32, i32* %size, align 8, !dbg !2324
  store i32 %3, i32* %buf_size, align 4, !dbg !2322
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s, metadata !2325, metadata !2019), !dbg !2326
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2327
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !2328
  %5 = load i8*, i8** %priv_data, align 8, !dbg !2328
  %6 = bitcast i8* %5 to %struct.MPADecodeContext*, !dbg !2327
  store %struct.MPADecodeContext* %6, %struct.MPADecodeContext** %s, align 8, !dbg !2326
  call void @llvm.dbg.declare(metadata i32* %header, metadata !2329, metadata !2019), !dbg !2330
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2331, metadata !2019), !dbg !2332
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2333, metadata !2019), !dbg !2334
  call void @llvm.dbg.declare(metadata i32* %out_size, metadata !2335, metadata !2019), !dbg !2336
  %7 = load i32, i32* %buf_size, align 4, !dbg !2337
  store i32 %7, i32* %len, align 4, !dbg !2338
  %8 = load i32, i32* %buf_size, align 4, !dbg !2339
  %cmp = icmp slt i32 %8, 4, !dbg !2341
  br i1 %cmp, label %if.then, label %if.end, !dbg !2342

if.then:                                          ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2343
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !2343
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0)), !dbg !2345
  store i32 -1094995529, i32* %retval, align 4, !dbg !2346
  br label %return, !dbg !2346

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %len, align 4, !dbg !2347
  %cmp2 = icmp sgt i32 %11, 1792, !dbg !2349
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2350

if.then3:                                         ; preds = %if.end
  store i32 1792, i32* %len, align 4, !dbg !2351
  br label %if.end4, !dbg !2352

if.end4:                                          ; preds = %if.then3, %if.end
  %12 = load i8*, i8** %buf, align 8, !dbg !2353
  %13 = bitcast i8* %12 to %union.unaligned_32*, !dbg !2354
  %l = bitcast %union.unaligned_32* %13 to i32*, !dbg !2354
  %14 = load i32, i32* %l, align 1, !dbg !2354
  store i32 %14, i32* %x.addr.i, align 4, !dbg !2355
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !2356
  %shl.i = shl i32 %15, 8, !dbg !2357
  %and.i = and i32 %shl.i, 65280, !dbg !2358
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !2359
  %shr.i = lshr i32 %16, 8, !dbg !2360
  %and1.i = and i32 %shr.i, 255, !dbg !2361
  %or.i = or i32 %and.i, %and1.i, !dbg !2362
  %shl2.i = shl i32 %or.i, 16, !dbg !2363
  %17 = load i32, i32* %x.addr.i, align 4, !dbg !2364
  %shr3.i = lshr i32 %17, 16, !dbg !2365
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2366
  %and5.i = and i32 %shl4.i, 65280, !dbg !2367
  %18 = load i32, i32* %x.addr.i, align 4, !dbg !2368
  %shr6.i = lshr i32 %18, 16, !dbg !2369
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2370
  %and8.i = and i32 %shr7.i, 255, !dbg !2371
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2372
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2373
  %or = or i32 %or10.i, -2097152, !dbg !2374
  store i32 %or, i32* %header, align 4, !dbg !2375
  %19 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2376
  %20 = bitcast %struct.MPADecodeContext* %19 to %struct.MPADecodeHeader*, !dbg !2377
  %21 = load i32, i32* %header, align 4, !dbg !2378
  %call5 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* %20, i32 %21), !dbg !2379
  store i32 %call5, i32* %ret, align 4, !dbg !2380
  %22 = load i32, i32* %ret, align 4, !dbg !2381
  %cmp6 = icmp slt i32 %22, 0, !dbg !2383
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2384

if.then7:                                         ; preds = %if.end4
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2385
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !2385
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0)), !dbg !2387
  %25 = load i32, i32* %ret, align 4, !dbg !2388
  store i32 %25, i32* %retval, align 4, !dbg !2389
  br label %return, !dbg !2389

if.end8:                                          ; preds = %if.end4
  %26 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2390
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %26, i32 0, i32 3, !dbg !2391
  %27 = load i32, i32* %sample_rate, align 4, !dbg !2391
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2392
  %sample_rate9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 82, !dbg !2393
  store i32 %27, i32* %sample_rate9, align 8, !dbg !2394
  %29 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2395
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %29, i32 0, i32 6, !dbg !2396
  %30 = load i32, i32* %nb_channels, align 8, !dbg !2396
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2397
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 83, !dbg !2398
  store i32 %30, i32* %channels, align 4, !dbg !2399
  %32 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2400
  %nb_channels10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %32, i32 0, i32 6, !dbg !2401
  %33 = load i32, i32* %nb_channels10, align 8, !dbg !2401
  %cmp11 = icmp eq i32 %33, 1, !dbg !2402
  %cond = select i1 %cmp11, i32 4, i32 3, !dbg !2400
  %conv = sext i32 %cond to i64, !dbg !2400
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2403
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 89, !dbg !2404
  store i64 %conv, i64* %channel_layout, align 8, !dbg !2405
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2406
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 9, !dbg !2408
  %36 = load i64, i64* %bit_rate, align 8, !dbg !2408
  %tobool = icmp ne i64 %36, 0, !dbg !2406
  br i1 %tobool, label %if.end16, label %if.then12, !dbg !2409

if.then12:                                        ; preds = %if.end8
  %37 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2410
  %bit_rate13 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %37, i32 0, i32 5, !dbg !2411
  %38 = load i32, i32* %bit_rate13, align 4, !dbg !2411
  %conv14 = sext i32 %38 to i64, !dbg !2410
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2412
  %bit_rate15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 9, !dbg !2413
  store i64 %conv14, i64* %bit_rate15, align 8, !dbg !2414
  br label %if.end16, !dbg !2412

if.end16:                                         ; preds = %if.then12, %if.end8
  %40 = load i32, i32* %len, align 4, !dbg !2415
  %41 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2416
  %frame_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %41, i32 0, i32 0, !dbg !2417
  store i32 %40, i32* %frame_size, align 32, !dbg !2418
  %42 = load i8*, i8** %data.addr, align 8, !dbg !2419
  %43 = bitcast i8* %42 to %struct.AVFrame*, !dbg !2419
  %44 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2420
  %frame = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %44, i32 0, i32 29, !dbg !2421
  store %struct.AVFrame* %43, %struct.AVFrame** %frame, align 16, !dbg !2422
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s, align 8, !dbg !2423
  %46 = load i8*, i8** %buf, align 8, !dbg !2424
  %47 = load i32, i32* %buf_size, align 4, !dbg !2425
  %call17 = call i32 @mp_decode_frame(%struct.MPADecodeContext* %45, i16** null, i8* %46, i32 %47), !dbg !2426
  store i32 %call17, i32* %ret, align 4, !dbg !2427
  %48 = load i32, i32* %ret, align 4, !dbg !2428
  %cmp18 = icmp slt i32 %48, 0, !dbg !2430
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !2431

if.then20:                                        ; preds = %if.end16
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2432
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !2432
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i32 0, i32 0)), !dbg !2434
  %51 = load i32, i32* %ret, align 4, !dbg !2435
  store i32 %51, i32* %retval, align 4, !dbg !2436
  br label %return, !dbg !2436

if.end21:                                         ; preds = %if.end16
  %52 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2437
  store i32 1, i32* %52, align 4, !dbg !2438
  %53 = load i32, i32* %buf_size, align 4, !dbg !2439
  store i32 %53, i32* %retval, align 4, !dbg !2440
  br label %return, !dbg !2440

return:                                           ; preds = %if.end21, %if.then20, %if.then7, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !2441
  ret i32 %54, !dbg !2441
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init_mp3on4(%struct.AVCodecContext* %avctx) #0 !dbg !2442 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  %cfg = alloca %struct.MPEG4AudioConfig, align 4
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2443, metadata !2019), !dbg !2444
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !2445, metadata !2019), !dbg !2456
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2457
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2458
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2458
  %2 = bitcast i8* %1 to %struct.MP3On4DecodeContext*, !dbg !2457
  store %struct.MP3On4DecodeContext* %2, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2456
  call void @llvm.dbg.declare(metadata %struct.MPEG4AudioConfig* %cfg, metadata !2459, metadata !2019), !dbg !2476
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2477, metadata !2019), !dbg !2478
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2479
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 16, !dbg !2481
  %4 = load i32, i32* %extradata_size, align 8, !dbg !2481
  %cmp = icmp slt i32 %4, 2, !dbg !2482
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2483

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2484
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 15, !dbg !2486
  %6 = load i8*, i8** %extradata, align 8, !dbg !2486
  %tobool = icmp ne i8* %6, null, !dbg !2484
  br i1 %tobool, label %if.end, label %if.then, !dbg !2487

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2488
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !2488
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.34, i32 0, i32 0)), !dbg !2490
  store i32 -1094995529, i32* %retval, align 4, !dbg !2491
  br label %return, !dbg !2491

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2492
  %extradata1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 15, !dbg !2493
  %10 = load i8*, i8** %extradata1, align 8, !dbg !2493
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2494
  %extradata_size2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 16, !dbg !2495
  %12 = load i32, i32* %extradata_size2, align 8, !dbg !2495
  %mul = mul nsw i32 %12, 8, !dbg !2496
  %call = call i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig* %cfg, i8* %10, i32 %mul, i32 1), !dbg !2497
  %chan_config = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2498
  %13 = load i32, i32* %chan_config, align 4, !dbg !2498
  %tobool3 = icmp ne i32 %13, 0, !dbg !2500
  br i1 %tobool3, label %lor.lhs.false4, label %if.then7, !dbg !2501

lor.lhs.false4:                                   ; preds = %if.end
  %chan_config5 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2502
  %14 = load i32, i32* %chan_config5, align 4, !dbg !2502
  %cmp6 = icmp sgt i32 %14, 7, !dbg !2504
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2505

if.then7:                                         ; preds = %lor.lhs.false4, %if.end
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2506
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !2506
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i32 0, i32 0)), !dbg !2508
  store i32 -1094995529, i32* %retval, align 4, !dbg !2509
  br label %return, !dbg !2509

if.end8:                                          ; preds = %lor.lhs.false4
  %chan_config9 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2510
  %17 = load i32, i32* %chan_config9, align 4, !dbg !2510
  %idxprom = sext i32 %17 to i64, !dbg !2511
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* @mp3Frames, i64 0, i64 %idxprom, !dbg !2511
  %18 = load i8, i8* %arrayidx, align 1, !dbg !2511
  %conv = zext i8 %18 to i32, !dbg !2511
  %19 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2512
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %19, i32 0, i32 0, !dbg !2513
  store i32 %conv, i32* %frames, align 8, !dbg !2514
  %chan_config10 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2515
  %20 = load i32, i32* %chan_config10, align 4, !dbg !2515
  %idxprom11 = sext i32 %20 to i64, !dbg !2516
  %arrayidx12 = getelementptr inbounds [8 x [5 x i8]], [8 x [5 x i8]]* @chan_offset, i64 0, i64 %idxprom11, !dbg !2516
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx12, i32 0, i32 0, !dbg !2516
  %21 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2517
  %coff = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %21, i32 0, i32 2, !dbg !2518
  store i8* %arraydecay, i8** %coff, align 8, !dbg !2519
  %chan_config13 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2520
  %22 = load i32, i32* %chan_config13, align 4, !dbg !2520
  %idxprom14 = sext i32 %22 to i64, !dbg !2521
  %arrayidx15 = getelementptr inbounds [8 x i8], [8 x i8]* @ff_mpeg4audio_channels, i64 0, i64 %idxprom14, !dbg !2521
  %23 = load i8, i8* %arrayidx15, align 1, !dbg !2521
  %conv16 = zext i8 %23 to i32, !dbg !2521
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2522
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 83, !dbg !2523
  store i32 %conv16, i32* %channels, align 4, !dbg !2524
  %chan_config17 = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 3, !dbg !2525
  %25 = load i32, i32* %chan_config17, align 4, !dbg !2525
  %idxprom18 = sext i32 %25 to i64, !dbg !2526
  %arrayidx19 = getelementptr inbounds [8 x i16], [8 x i16]* @chan_layout, i64 0, i64 %idxprom18, !dbg !2526
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !2526
  %conv20 = sext i16 %26 to i64, !dbg !2526
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2527
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %27, i32 0, i32 89, !dbg !2528
  store i64 %conv20, i64* %channel_layout, align 8, !dbg !2529
  %sample_rate = getelementptr inbounds %struct.MPEG4AudioConfig, %struct.MPEG4AudioConfig* %cfg, i32 0, i32 2, !dbg !2530
  %28 = load i32, i32* %sample_rate, align 4, !dbg !2530
  %cmp21 = icmp slt i32 %28, 16000, !dbg !2532
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !2533

if.then23:                                        ; preds = %if.end8
  %29 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2534
  %syncword = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %29, i32 0, i32 1, !dbg !2535
  store i32 -2097152, i32* %syncword, align 4, !dbg !2536
  br label %if.end25, !dbg !2534

if.else:                                          ; preds = %if.end8
  %30 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2537
  %syncword24 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %30, i32 0, i32 1, !dbg !2538
  store i32 -1048576, i32* %syncword24, align 4, !dbg !2539
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then23
  %call26 = call noalias i8* @av_mallocz(i64 33056), !dbg !2540
  %31 = bitcast i8* %call26 to %struct.MPADecodeContext*, !dbg !2540
  %32 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2541
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %32, i32 0, i32 3, !dbg !2542
  %arrayidx27 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 0, !dbg !2541
  store %struct.MPADecodeContext* %31, %struct.MPADecodeContext** %arrayidx27, align 8, !dbg !2543
  %33 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2544
  %mp3decctx28 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %33, i32 0, i32 3, !dbg !2546
  %arrayidx29 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx28, i64 0, i64 0, !dbg !2544
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx29, align 8, !dbg !2544
  %tobool30 = icmp ne %struct.MPADecodeContext* %34, null, !dbg !2544
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !2547

if.then31:                                        ; preds = %if.end25
  br label %alloc_fail, !dbg !2548

if.end32:                                         ; preds = %if.end25
  %35 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2549
  %mp3decctx33 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %35, i32 0, i32 3, !dbg !2550
  %arrayidx34 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx33, i64 0, i64 0, !dbg !2549
  %36 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx34, align 8, !dbg !2549
  %37 = bitcast %struct.MPADecodeContext* %36 to i8*, !dbg !2549
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2551
  %priv_data35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %38, i32 0, i32 6, !dbg !2552
  store i8* %37, i8** %priv_data35, align 8, !dbg !2553
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2554
  %call36 = call i32 @decode_init(%struct.AVCodecContext* %39), !dbg !2555
  %40 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2556
  %41 = bitcast %struct.MP3On4DecodeContext* %40 to i8*, !dbg !2556
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2557
  %priv_data37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 6, !dbg !2558
  store i8* %41, i8** %priv_data37, align 8, !dbg !2559
  %43 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2560
  %mp3decctx38 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %43, i32 0, i32 3, !dbg !2561
  %arrayidx39 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx38, i64 0, i64 0, !dbg !2560
  %44 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx39, align 8, !dbg !2560
  %adu_mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %44, i32 0, i32 23, !dbg !2562
  store i32 1, i32* %adu_mode, align 32, !dbg !2563
  store i32 1, i32* %i, align 4, !dbg !2564
  br label %for.cond, !dbg !2566

for.cond:                                         ; preds = %for.inc, %if.end32
  %45 = load i32, i32* %i, align 4, !dbg !2567
  %46 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2570
  %frames40 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %46, i32 0, i32 0, !dbg !2571
  %47 = load i32, i32* %frames40, align 8, !dbg !2571
  %cmp41 = icmp slt i32 %45, %47, !dbg !2572
  br i1 %cmp41, label %for.body, label %for.end, !dbg !2573

for.body:                                         ; preds = %for.cond
  %call43 = call noalias i8* @av_mallocz(i64 33056), !dbg !2574
  %48 = bitcast i8* %call43 to %struct.MPADecodeContext*, !dbg !2574
  %49 = load i32, i32* %i, align 4, !dbg !2576
  %idxprom44 = sext i32 %49 to i64, !dbg !2577
  %50 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2577
  %mp3decctx45 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %50, i32 0, i32 3, !dbg !2578
  %arrayidx46 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx45, i64 0, i64 %idxprom44, !dbg !2577
  store %struct.MPADecodeContext* %48, %struct.MPADecodeContext** %arrayidx46, align 8, !dbg !2579
  %51 = load i32, i32* %i, align 4, !dbg !2580
  %idxprom47 = sext i32 %51 to i64, !dbg !2582
  %52 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2582
  %mp3decctx48 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %52, i32 0, i32 3, !dbg !2583
  %arrayidx49 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx48, i64 0, i64 %idxprom47, !dbg !2582
  %53 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx49, align 8, !dbg !2582
  %tobool50 = icmp ne %struct.MPADecodeContext* %53, null, !dbg !2582
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !2584

if.then51:                                        ; preds = %for.body
  br label %alloc_fail, !dbg !2585

if.end52:                                         ; preds = %for.body
  %54 = load i32, i32* %i, align 4, !dbg !2586
  %idxprom53 = sext i32 %54 to i64, !dbg !2587
  %55 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2587
  %mp3decctx54 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %55, i32 0, i32 3, !dbg !2588
  %arrayidx55 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx54, i64 0, i64 %idxprom53, !dbg !2587
  %56 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx55, align 8, !dbg !2587
  %adu_mode56 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %56, i32 0, i32 23, !dbg !2589
  store i32 1, i32* %adu_mode56, align 32, !dbg !2590
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2591
  %58 = load i32, i32* %i, align 4, !dbg !2592
  %idxprom57 = sext i32 %58 to i64, !dbg !2593
  %59 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2593
  %mp3decctx58 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %59, i32 0, i32 3, !dbg !2594
  %arrayidx59 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx58, i64 0, i64 %idxprom57, !dbg !2593
  %60 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx59, align 8, !dbg !2593
  %avctx60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %60, i32 0, i32 26, !dbg !2595
  store %struct.AVCodecContext* %57, %struct.AVCodecContext** %avctx60, align 16, !dbg !2596
  %61 = load i32, i32* %i, align 4, !dbg !2597
  %idxprom61 = sext i32 %61 to i64, !dbg !2598
  %62 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2598
  %mp3decctx62 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %62, i32 0, i32 3, !dbg !2599
  %arrayidx63 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx62, i64 0, i64 %idxprom61, !dbg !2598
  %63 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx63, align 8, !dbg !2598
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %63, i32 0, i32 27, !dbg !2600
  %64 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2601
  %mp3decctx64 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %64, i32 0, i32 3, !dbg !2602
  %arrayidx65 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx64, i64 0, i64 0, !dbg !2601
  %65 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx65, align 8, !dbg !2601
  %mpadsp66 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %65, i32 0, i32 27, !dbg !2603
  %66 = bitcast %struct.MPADSPContext* %mpadsp to i8*, !dbg !2603
  %67 = bitcast %struct.MPADSPContext* %mpadsp66 to i8*, !dbg !2603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 48, i32 8, i1 false), !dbg !2603
  %68 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2604
  %mp3decctx67 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %68, i32 0, i32 3, !dbg !2605
  %arrayidx68 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx67, i64 0, i64 0, !dbg !2604
  %69 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx68, align 8, !dbg !2604
  %fdsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %69, i32 0, i32 28, !dbg !2606
  %70 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2606
  %71 = load i32, i32* %i, align 4, !dbg !2607
  %idxprom69 = sext i32 %71 to i64, !dbg !2608
  %72 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2608
  %mp3decctx70 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %72, i32 0, i32 3, !dbg !2609
  %arrayidx71 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx70, i64 0, i64 %idxprom69, !dbg !2608
  %73 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx71, align 8, !dbg !2608
  %fdsp72 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %73, i32 0, i32 28, !dbg !2610
  store %struct.AVFloatDSPContext* %70, %struct.AVFloatDSPContext** %fdsp72, align 8, !dbg !2611
  br label %for.inc, !dbg !2612

for.inc:                                          ; preds = %if.end52
  %74 = load i32, i32* %i, align 4, !dbg !2613
  %inc = add nsw i32 %74, 1, !dbg !2613
  store i32 %inc, i32* %i, align 4, !dbg !2613
  br label %for.cond, !dbg !2615, !llvm.loop !2616

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2618
  br label %return, !dbg !2618

alloc_fail:                                       ; preds = %if.then51, %if.then31
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2619
  %call73 = call i32 @decode_close_mp3on4(%struct.AVCodecContext* %75), !dbg !2620
  store i32 -12, i32* %retval, align 4, !dbg !2621
  br label %return, !dbg !2621

return:                                           ; preds = %alloc_fail, %for.end, %if.then7, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !2622
  ret i32 %76, !dbg !2622
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame_mp3on4(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2623 {
entry:
  %x.addr.i100 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i100, metadata !2070, metadata !2019), !dbg !2624
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !2629, metadata !2019), !dbg !2633
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  %m = alloca %struct.MPADecodeContext*, align 8
  %fsize = alloca i32, align 4
  %len = alloca i32, align 4
  %out_size = alloca i32, align 4
  %header = alloca i32, align 4
  %out_samples = alloca i16**, align 8
  %outptr = alloca [2 x i16*], align 16
  %fr = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2635, metadata !2019), !dbg !2636
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2637, metadata !2019), !dbg !2638
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2639, metadata !2019), !dbg !2640
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2641, metadata !2019), !dbg !2642
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2643, metadata !2019), !dbg !2644
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2645
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2645
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2644
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2646, metadata !2019), !dbg !2647
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2648
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !2649
  %3 = load i8*, i8** %data1, align 8, !dbg !2649
  store i8* %3, i8** %buf, align 8, !dbg !2647
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2650, metadata !2019), !dbg !2651
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2652
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !2653
  %5 = load i32, i32* %size, align 8, !dbg !2653
  store i32 %5, i32* %buf_size, align 4, !dbg !2651
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !2654, metadata !2019), !dbg !2655
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2656
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !2657
  %7 = load i8*, i8** %priv_data, align 8, !dbg !2657
  %8 = bitcast i8* %7 to %struct.MP3On4DecodeContext*, !dbg !2656
  store %struct.MP3On4DecodeContext* %8, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2655
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %m, metadata !2658, metadata !2019), !dbg !2659
  call void @llvm.dbg.declare(metadata i32* %fsize, metadata !2660, metadata !2019), !dbg !2661
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2662, metadata !2019), !dbg !2663
  %9 = load i32, i32* %buf_size, align 4, !dbg !2664
  store i32 %9, i32* %len, align 4, !dbg !2663
  call void @llvm.dbg.declare(metadata i32* %out_size, metadata !2665, metadata !2019), !dbg !2666
  store i32 0, i32* %out_size, align 4, !dbg !2666
  call void @llvm.dbg.declare(metadata i32* %header, metadata !2667, metadata !2019), !dbg !2668
  call void @llvm.dbg.declare(metadata i16*** %out_samples, metadata !2669, metadata !2019), !dbg !2670
  call void @llvm.dbg.declare(metadata [2 x i16*]* %outptr, metadata !2671, metadata !2019), !dbg !2673
  call void @llvm.dbg.declare(metadata i32* %fr, metadata !2674, metadata !2019), !dbg !2675
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2676, metadata !2019), !dbg !2677
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2678, metadata !2019), !dbg !2679
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2680
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 5, !dbg !2681
  store i32 1152, i32* %nb_samples, align 8, !dbg !2682
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2683
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2685
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %11, %struct.AVFrame* %12, i32 0), !dbg !2686
  store i32 %call, i32* %ret, align 4, !dbg !2687
  %cmp = icmp slt i32 %call, 0, !dbg !2688
  br i1 %cmp, label %if.then, label %if.end, !dbg !2689

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %ret, align 4, !dbg !2690
  store i32 %13, i32* %retval, align 4, !dbg !2691
  br label %return, !dbg !2691

if.end:                                           ; preds = %entry
  %14 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2692
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %14, i32 0, i32 2, !dbg !2693
  %15 = load i8**, i8*** %extended_data, align 8, !dbg !2693
  %16 = bitcast i8** %15 to i16**, !dbg !2694
  store i16** %16, i16*** %out_samples, align 8, !dbg !2695
  %17 = load i32, i32* %buf_size, align 4, !dbg !2696
  %cmp2 = icmp slt i32 %17, 4, !dbg !2698
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2699

if.then3:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !2700
  br label %return, !dbg !2700

if.end4:                                          ; preds = %if.end
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2701
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 9, !dbg !2702
  store i64 0, i64* %bit_rate, align 8, !dbg !2703
  store i32 0, i32* %ch, align 4, !dbg !2704
  store i32 0, i32* %fr, align 4, !dbg !2705
  br label %for.cond, !dbg !2706

for.cond:                                         ; preds = %for.inc, %if.end4
  %19 = load i32, i32* %fr, align 4, !dbg !2707
  %20 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2709
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %20, i32 0, i32 0, !dbg !2710
  %21 = load i32, i32* %frames, align 8, !dbg !2710
  %cmp5 = icmp slt i32 %19, %21, !dbg !2711
  br i1 %cmp5, label %for.body, label %for.end, !dbg !2712

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %buf, align 8, !dbg !2713
  %23 = bitcast i8* %22 to %union.unaligned_16*, !dbg !2714
  %l = bitcast %union.unaligned_16* %23 to i16*, !dbg !2714
  %24 = load i16, i16* %l, align 1, !dbg !2714
  store i16 %24, i16* %x.addr.i, align 2, !dbg !2715
  %25 = load i16, i16* %x.addr.i, align 2, !dbg !2716
  %conv.i = zext i16 %25 to i32, !dbg !2716
  %shr.i = ashr i32 %conv.i, 8, !dbg !2717
  %26 = load i16, i16* %x.addr.i, align 2, !dbg !2718
  %conv1.i = zext i16 %26 to i32, !dbg !2718
  %shl.i = shl i32 %conv1.i, 8, !dbg !2719
  %or.i = or i32 %shr.i, %shl.i, !dbg !2720
  %conv2.i = trunc i32 %or.i to i16, !dbg !2721
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !2722
  %27 = load i16, i16* %x.addr.i, align 2, !dbg !2723
  %conv = zext i16 %27 to i32, !dbg !2715
  %shr = ashr i32 %conv, 4, !dbg !2724
  store i32 %shr, i32* %fsize, align 4, !dbg !2725
  %28 = load i32, i32* %fsize, align 4, !dbg !2726
  %29 = load i32, i32* %len, align 4, !dbg !2727
  %cmp7 = icmp sgt i32 %28, %29, !dbg !2728
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2729

cond.true:                                        ; preds = %for.body
  %30 = load i32, i32* %len, align 4, !dbg !2730
  br label %cond.end, !dbg !2732

cond.false:                                       ; preds = %for.body
  %31 = load i32, i32* %fsize, align 4, !dbg !2733
  br label %cond.end, !dbg !2735

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %30, %cond.true ], [ %31, %cond.false ], !dbg !2736
  %cmp9 = icmp sgt i32 %cond, 1792, !dbg !2738
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !2739

cond.true11:                                      ; preds = %cond.end
  br label %cond.end19, !dbg !2740

cond.false12:                                     ; preds = %cond.end
  %32 = load i32, i32* %fsize, align 4, !dbg !2742
  %33 = load i32, i32* %len, align 4, !dbg !2744
  %cmp13 = icmp sgt i32 %32, %33, !dbg !2745
  br i1 %cmp13, label %cond.true15, label %cond.false16, !dbg !2746

cond.true15:                                      ; preds = %cond.false12
  %34 = load i32, i32* %len, align 4, !dbg !2747
  br label %cond.end17, !dbg !2749

cond.false16:                                     ; preds = %cond.false12
  %35 = load i32, i32* %fsize, align 4, !dbg !2750
  br label %cond.end17, !dbg !2752

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi i32 [ %34, %cond.true15 ], [ %35, %cond.false16 ], !dbg !2753
  br label %cond.end19, !dbg !2755

cond.end19:                                       ; preds = %cond.end17, %cond.true11
  %cond20 = phi i32 [ 1792, %cond.true11 ], [ %cond18, %cond.end17 ], !dbg !2756
  store i32 %cond20, i32* %fsize, align 4, !dbg !2758
  %36 = load i32, i32* %fr, align 4, !dbg !2759
  %idxprom = sext i32 %36 to i64, !dbg !2760
  %37 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2760
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %37, i32 0, i32 3, !dbg !2761
  %arrayidx = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 %idxprom, !dbg !2760
  %38 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx, align 8, !dbg !2760
  store %struct.MPADecodeContext* %38, %struct.MPADecodeContext** %m, align 8, !dbg !2762
  %39 = load i32, i32* %fsize, align 4, !dbg !2763
  %cmp21 = icmp slt i32 %39, 4, !dbg !2765
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !2766

if.then23:                                        ; preds = %cond.end19
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2767
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !2767
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i32 0, i32 0)), !dbg !2769
  store i32 -1094995529, i32* %retval, align 4, !dbg !2770
  br label %return, !dbg !2770

if.end24:                                         ; preds = %cond.end19
  %42 = load i8*, i8** %buf, align 8, !dbg !2771
  %43 = bitcast i8* %42 to %union.unaligned_32*, !dbg !2772
  %l25 = bitcast %union.unaligned_32* %43 to i32*, !dbg !2772
  %44 = load i32, i32* %l25, align 1, !dbg !2772
  store i32 %44, i32* %x.addr.i100, align 4, !dbg !2773
  %45 = load i32, i32* %x.addr.i100, align 4, !dbg !2774
  %shl.i101 = shl i32 %45, 8, !dbg !2775
  %and.i = and i32 %shl.i101, 65280, !dbg !2776
  %46 = load i32, i32* %x.addr.i100, align 4, !dbg !2777
  %shr.i102 = lshr i32 %46, 8, !dbg !2778
  %and1.i = and i32 %shr.i102, 255, !dbg !2779
  %or.i103 = or i32 %and.i, %and1.i, !dbg !2780
  %shl2.i = shl i32 %or.i103, 16, !dbg !2781
  %47 = load i32, i32* %x.addr.i100, align 4, !dbg !2782
  %shr3.i = lshr i32 %47, 16, !dbg !2783
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2784
  %and5.i = and i32 %shl4.i, 65280, !dbg !2785
  %48 = load i32, i32* %x.addr.i100, align 4, !dbg !2786
  %shr6.i = lshr i32 %48, 16, !dbg !2787
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2788
  %and8.i = and i32 %shr7.i, 255, !dbg !2789
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2790
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2791
  %and = and i32 %or10.i, 1048575, !dbg !2792
  %49 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2793
  %syncword = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %49, i32 0, i32 1, !dbg !2794
  %50 = load i32, i32* %syncword, align 4, !dbg !2794
  %or = or i32 %and, %50, !dbg !2795
  store i32 %or, i32* %header, align 4, !dbg !2796
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2797
  %52 = bitcast %struct.MPADecodeContext* %51 to %struct.MPADecodeHeader*, !dbg !2798
  %53 = load i32, i32* %header, align 4, !dbg !2799
  %call27 = call i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader* %52, i32 %53), !dbg !2800
  store i32 %call27, i32* %ret, align 4, !dbg !2801
  %54 = load i32, i32* %ret, align 4, !dbg !2802
  %cmp28 = icmp slt i32 %54, 0, !dbg !2804
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2805

if.then30:                                        ; preds = %if.end24
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2806
  %56 = bitcast %struct.AVCodecContext* %55 to i8*, !dbg !2806
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i32 0, i32 0)), !dbg !2808
  store i32 -1094995529, i32* %retval, align 4, !dbg !2809
  br label %return, !dbg !2809

if.end31:                                         ; preds = %if.end24
  %57 = load i32, i32* %ch, align 4, !dbg !2810
  %58 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2812
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %58, i32 0, i32 6, !dbg !2813
  %59 = load i32, i32* %nb_channels, align 8, !dbg !2813
  %add = add nsw i32 %57, %59, !dbg !2814
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2815
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %60, i32 0, i32 83, !dbg !2816
  %61 = load i32, i32* %channels, align 4, !dbg !2816
  %cmp32 = icmp sgt i32 %add, %61, !dbg !2817
  br i1 %cmp32, label %if.then42, label %lor.lhs.false, !dbg !2818

lor.lhs.false:                                    ; preds = %if.end31
  %62 = load i32, i32* %fr, align 4, !dbg !2819
  %idxprom34 = sext i32 %62 to i64, !dbg !2820
  %63 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2820
  %coff = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %63, i32 0, i32 2, !dbg !2821
  %64 = load i8*, i8** %coff, align 8, !dbg !2821
  %arrayidx35 = getelementptr inbounds i8, i8* %64, i64 %idxprom34, !dbg !2820
  %65 = load i8, i8* %arrayidx35, align 1, !dbg !2820
  %conv36 = zext i8 %65 to i32, !dbg !2820
  %66 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2822
  %nb_channels37 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %66, i32 0, i32 6, !dbg !2823
  %67 = load i32, i32* %nb_channels37, align 8, !dbg !2823
  %add38 = add nsw i32 %conv36, %67, !dbg !2824
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2825
  %channels39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %68, i32 0, i32 83, !dbg !2826
  %69 = load i32, i32* %channels39, align 4, !dbg !2826
  %cmp40 = icmp sgt i32 %add38, %69, !dbg !2827
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !2828

if.then42:                                        ; preds = %lor.lhs.false, %if.end31
  %70 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2829
  %71 = bitcast %struct.AVCodecContext* %70 to i8*, !dbg !2829
  call void (i8*, i32, i8*, ...) @av_log(i8* %71, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.38, i32 0, i32 0)), !dbg !2831
  store i32 -1094995529, i32* %retval, align 4, !dbg !2832
  br label %return, !dbg !2832

if.end43:                                         ; preds = %lor.lhs.false
  %72 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2833
  %nb_channels44 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %72, i32 0, i32 6, !dbg !2834
  %73 = load i32, i32* %nb_channels44, align 8, !dbg !2834
  %74 = load i32, i32* %ch, align 4, !dbg !2835
  %add45 = add nsw i32 %74, %73, !dbg !2835
  store i32 %add45, i32* %ch, align 4, !dbg !2835
  %75 = load i32, i32* %fr, align 4, !dbg !2836
  %idxprom46 = sext i32 %75 to i64, !dbg !2837
  %76 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2837
  %coff47 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %76, i32 0, i32 2, !dbg !2838
  %77 = load i8*, i8** %coff47, align 8, !dbg !2838
  %arrayidx48 = getelementptr inbounds i8, i8* %77, i64 %idxprom46, !dbg !2837
  %78 = load i8, i8* %arrayidx48, align 1, !dbg !2837
  %idxprom49 = zext i8 %78 to i64, !dbg !2839
  %79 = load i16**, i16*** %out_samples, align 8, !dbg !2839
  %arrayidx50 = getelementptr inbounds i16*, i16** %79, i64 %idxprom49, !dbg !2839
  %80 = load i16*, i16** %arrayidx50, align 8, !dbg !2839
  %arrayidx51 = getelementptr inbounds [2 x i16*], [2 x i16*]* %outptr, i64 0, i64 0, !dbg !2840
  store i16* %80, i16** %arrayidx51, align 16, !dbg !2841
  %81 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2842
  %nb_channels52 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %81, i32 0, i32 6, !dbg !2844
  %82 = load i32, i32* %nb_channels52, align 8, !dbg !2844
  %cmp53 = icmp sgt i32 %82, 1, !dbg !2845
  br i1 %cmp53, label %if.then55, label %if.end64, !dbg !2846

if.then55:                                        ; preds = %if.end43
  %83 = load i32, i32* %fr, align 4, !dbg !2847
  %idxprom56 = sext i32 %83 to i64, !dbg !2848
  %84 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2848
  %coff57 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %84, i32 0, i32 2, !dbg !2849
  %85 = load i8*, i8** %coff57, align 8, !dbg !2849
  %arrayidx58 = getelementptr inbounds i8, i8* %85, i64 %idxprom56, !dbg !2848
  %86 = load i8, i8* %arrayidx58, align 1, !dbg !2848
  %conv59 = zext i8 %86 to i32, !dbg !2848
  %add60 = add nsw i32 %conv59, 1, !dbg !2850
  %idxprom61 = sext i32 %add60 to i64, !dbg !2851
  %87 = load i16**, i16*** %out_samples, align 8, !dbg !2851
  %arrayidx62 = getelementptr inbounds i16*, i16** %87, i64 %idxprom61, !dbg !2851
  %88 = load i16*, i16** %arrayidx62, align 8, !dbg !2851
  %arrayidx63 = getelementptr inbounds [2 x i16*], [2 x i16*]* %outptr, i64 0, i64 1, !dbg !2852
  store i16* %88, i16** %arrayidx63, align 8, !dbg !2853
  br label %if.end64, !dbg !2852

if.end64:                                         ; preds = %if.then55, %if.end43
  %89 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2854
  %arraydecay = getelementptr inbounds [2 x i16*], [2 x i16*]* %outptr, i32 0, i32 0, !dbg !2856
  %90 = load i8*, i8** %buf, align 8, !dbg !2857
  %91 = load i32, i32* %fsize, align 4, !dbg !2858
  %call65 = call i32 @mp_decode_frame(%struct.MPADecodeContext* %89, i16** %arraydecay, i8* %90, i32 %91), !dbg !2859
  store i32 %call65, i32* %ret, align 4, !dbg !2860
  %cmp66 = icmp slt i32 %call65, 0, !dbg !2861
  br i1 %cmp66, label %if.then68, label %if.end80, !dbg !2862

if.then68:                                        ; preds = %if.end64
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2863
  %93 = bitcast %struct.AVCodecContext* %92 to i8*, !dbg !2863
  %94 = load i32, i32* %ch, align 4, !dbg !2865
  call void (i8*, i32, i8*, ...) @av_log(i8* %93, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i32 %94), !dbg !2866
  %arrayidx69 = getelementptr inbounds [2 x i16*], [2 x i16*]* %outptr, i64 0, i64 0, !dbg !2867
  %95 = load i16*, i16** %arrayidx69, align 16, !dbg !2867
  %96 = bitcast i16* %95 to i8*, !dbg !2868
  call void @llvm.memset.p0i8.i64(i8* %96, i8 0, i64 2304, i32 2, i1 false), !dbg !2868
  %97 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2869
  %nb_channels70 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %97, i32 0, i32 6, !dbg !2871
  %98 = load i32, i32* %nb_channels70, align 8, !dbg !2871
  %cmp71 = icmp sgt i32 %98, 1, !dbg !2872
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !2873

if.then73:                                        ; preds = %if.then68
  %arrayidx74 = getelementptr inbounds [2 x i16*], [2 x i16*]* %outptr, i64 0, i64 1, !dbg !2874
  %99 = load i16*, i16** %arrayidx74, align 8, !dbg !2874
  %100 = bitcast i16* %99 to i8*, !dbg !2875
  call void @llvm.memset.p0i8.i64(i8* %100, i8 0, i64 2304, i32 2, i1 false), !dbg !2875
  br label %if.end75, !dbg !2875

if.end75:                                         ; preds = %if.then73, %if.then68
  %101 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2876
  %nb_channels76 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %101, i32 0, i32 6, !dbg !2877
  %102 = load i32, i32* %nb_channels76, align 8, !dbg !2877
  %mul = mul nsw i32 %102, 1152, !dbg !2878
  %conv77 = sext i32 %mul to i64, !dbg !2876
  %mul78 = mul i64 %conv77, 2, !dbg !2879
  %conv79 = trunc i64 %mul78 to i32, !dbg !2876
  store i32 %conv79, i32* %ret, align 4, !dbg !2880
  br label %if.end80, !dbg !2881

if.end80:                                         ; preds = %if.end75, %if.end64
  %103 = load i32, i32* %ret, align 4, !dbg !2882
  %104 = load i32, i32* %out_size, align 4, !dbg !2883
  %add81 = add nsw i32 %104, %103, !dbg !2883
  store i32 %add81, i32* %out_size, align 4, !dbg !2883
  %105 = load i32, i32* %fsize, align 4, !dbg !2884
  %106 = load i8*, i8** %buf, align 8, !dbg !2885
  %idx.ext = sext i32 %105 to i64, !dbg !2885
  %add.ptr = getelementptr inbounds i8, i8* %106, i64 %idx.ext, !dbg !2885
  store i8* %add.ptr, i8** %buf, align 8, !dbg !2885
  %107 = load i32, i32* %fsize, align 4, !dbg !2886
  %108 = load i32, i32* %len, align 4, !dbg !2887
  %sub = sub nsw i32 %108, %107, !dbg !2887
  store i32 %sub, i32* %len, align 4, !dbg !2887
  %109 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %m, align 8, !dbg !2888
  %bit_rate82 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %109, i32 0, i32 5, !dbg !2889
  %110 = load i32, i32* %bit_rate82, align 4, !dbg !2889
  %conv83 = sext i32 %110 to i64, !dbg !2888
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2890
  %bit_rate84 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 9, !dbg !2891
  %112 = load i64, i64* %bit_rate84, align 8, !dbg !2892
  %add85 = add nsw i64 %112, %conv83, !dbg !2892
  store i64 %add85, i64* %bit_rate84, align 8, !dbg !2892
  br label %for.inc, !dbg !2893

for.inc:                                          ; preds = %if.end80
  %113 = load i32, i32* %fr, align 4, !dbg !2894
  %inc = add nsw i32 %113, 1, !dbg !2894
  store i32 %inc, i32* %fr, align 4, !dbg !2894
  br label %for.cond, !dbg !2896, !llvm.loop !2897

for.end:                                          ; preds = %for.cond
  %114 = load i32, i32* %ch, align 4, !dbg !2899
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2901
  %channels86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 83, !dbg !2902
  %116 = load i32, i32* %channels86, align 4, !dbg !2902
  %cmp87 = icmp ne i32 %114, %116, !dbg !2903
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !2904

if.then89:                                        ; preds = %for.end
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2905
  %118 = bitcast %struct.AVCodecContext* %117 to i8*, !dbg !2905
  call void (i8*, i32, i8*, ...) @av_log(i8* %118, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i32 0, i32 0)), !dbg !2907
  store i32 -1094995529, i32* %retval, align 4, !dbg !2908
  br label %return, !dbg !2908

if.end90:                                         ; preds = %for.end
  %119 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2909
  %mp3decctx91 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %119, i32 0, i32 3, !dbg !2910
  %arrayidx92 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx91, i64 0, i64 0, !dbg !2909
  %120 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx92, align 8, !dbg !2909
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %120, i32 0, i32 3, !dbg !2911
  %121 = load i32, i32* %sample_rate, align 4, !dbg !2911
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2912
  %sample_rate93 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %122, i32 0, i32 82, !dbg !2913
  store i32 %121, i32* %sample_rate93, align 8, !dbg !2914
  %123 = load i32, i32* %out_size, align 4, !dbg !2915
  %conv94 = sext i32 %123 to i64, !dbg !2915
  %124 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2916
  %channels95 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %124, i32 0, i32 83, !dbg !2917
  %125 = load i32, i32* %channels95, align 4, !dbg !2917
  %conv96 = sext i32 %125 to i64, !dbg !2916
  %mul97 = mul i64 %conv96, 2, !dbg !2918
  %div = udiv i64 %conv94, %mul97, !dbg !2919
  %conv98 = trunc i64 %div to i32, !dbg !2915
  %126 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2920
  %nb_samples99 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %126, i32 0, i32 5, !dbg !2921
  store i32 %conv98, i32* %nb_samples99, align 8, !dbg !2922
  %127 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2923
  store i32 1, i32* %127, align 4, !dbg !2924
  %128 = load i32, i32* %buf_size, align 4, !dbg !2925
  store i32 %128, i32* %retval, align 4, !dbg !2926
  br label %return, !dbg !2926

return:                                           ; preds = %if.end90, %if.then89, %if.then42, %if.then30, %if.then23, %if.then3, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !2927
  ret i32 %129, !dbg !2927
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_close_mp3on4(%struct.AVCodecContext* %avctx) #0 !dbg !2928 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2929, metadata !2019), !dbg !2930
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !2931, metadata !2019), !dbg !2932
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2933
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2934
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2934
  %2 = bitcast i8* %1 to %struct.MP3On4DecodeContext*, !dbg !2933
  store %struct.MP3On4DecodeContext* %2, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2932
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2935, metadata !2019), !dbg !2936
  %3 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2937
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %3, i32 0, i32 3, !dbg !2939
  %arrayidx = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 0, !dbg !2937
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx, align 8, !dbg !2937
  %tobool = icmp ne %struct.MPADecodeContext* %4, null, !dbg !2937
  br i1 %tobool, label %if.then, label %if.end, !dbg !2940

if.then:                                          ; preds = %entry
  %5 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2941
  %mp3decctx1 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %5, i32 0, i32 3, !dbg !2942
  %arrayidx2 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx1, i64 0, i64 0, !dbg !2941
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx2, align 8, !dbg !2941
  %fdsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 28, !dbg !2943
  %7 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !2944
  call void @av_freep(i8* %7), !dbg !2945
  br label %if.end, !dbg !2945

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !2946
  br label %for.cond, !dbg !2948

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !2949
  %9 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2952
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %9, i32 0, i32 0, !dbg !2953
  %10 = load i32, i32* %frames, align 8, !dbg !2953
  %cmp = icmp slt i32 %8, %10, !dbg !2954
  br i1 %cmp, label %for.body, label %for.end, !dbg !2955

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !2956
  %idxprom = sext i32 %11 to i64, !dbg !2957
  %12 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2957
  %mp3decctx3 = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %12, i32 0, i32 3, !dbg !2958
  %arrayidx4 = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx3, i64 0, i64 %idxprom, !dbg !2957
  %13 = bitcast %struct.MPADecodeContext** %arrayidx4 to i8*, !dbg !2959
  call void @av_freep(i8* %13), !dbg !2960
  br label %for.inc, !dbg !2960

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !2961
  %inc = add nsw i32 %14, 1, !dbg !2961
  store i32 %inc, i32* %i, align 4, !dbg !2961
  br label %for.cond, !dbg !2963, !llvm.loop !2964

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !2966
}

; Function Attrs: nounwind uwtable
define internal void @flush_mp3on4(%struct.AVCodecContext* %avctx) #1 !dbg !2967 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.MP3On4DecodeContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2968, metadata !2019), !dbg !2969
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2970, metadata !2019), !dbg !2971
  call void @llvm.dbg.declare(metadata %struct.MP3On4DecodeContext** %s, metadata !2972, metadata !2019), !dbg !2973
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2974
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2975
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2975
  %2 = bitcast i8* %1 to %struct.MP3On4DecodeContext*, !dbg !2974
  store %struct.MP3On4DecodeContext* %2, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2973
  store i32 0, i32* %i, align 4, !dbg !2976
  br label %for.cond, !dbg !2978

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2979
  %4 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2982
  %frames = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %4, i32 0, i32 0, !dbg !2983
  %5 = load i32, i32* %frames, align 8, !dbg !2983
  %cmp = icmp slt i32 %3, %5, !dbg !2984
  br i1 %cmp, label %for.body, label %for.end, !dbg !2985

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !2986
  %idxprom = sext i32 %6 to i64, !dbg !2987
  %7 = load %struct.MP3On4DecodeContext*, %struct.MP3On4DecodeContext** %s, align 8, !dbg !2987
  %mp3decctx = getelementptr inbounds %struct.MP3On4DecodeContext, %struct.MP3On4DecodeContext* %7, i32 0, i32 3, !dbg !2988
  %arrayidx = getelementptr inbounds [5 x %struct.MPADecodeContext*], [5 x %struct.MPADecodeContext*]* %mp3decctx, i64 0, i64 %idxprom, !dbg !2987
  %8 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %arrayidx, align 8, !dbg !2987
  call void @mp_flush(%struct.MPADecodeContext* %8), !dbg !2989
  br label %for.inc, !dbg !2989

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !2990
  %inc = add nsw i32 %9, 1, !dbg !2990
  store i32 %inc, i32* %i, align 4, !dbg !2990
  br label %for.cond, !dbg !2992, !llvm.loop !2993

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2995
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: cold nounwind optsize uwtable
define internal void @decode_init_static() #0 !dbg !2996 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %offset = alloca i32, align 4
  %shift = alloca i32, align 4
  %mod = alloca i32, align 4
  %n = alloca i32, align 4
  %norm = alloca i32, align 4
  %h = alloca %struct.HuffTable*, align 8
  %xsize = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %tmp_bits = alloca [512 x i8], align 16
  %tmp_codes = alloca [512 x i16], align 16
  %val1 = alloca i32, align 4
  %val2 = alloca i32, align 4
  %val3 = alloca i32, align 4
  %steps = alloca i32, align 4
  %val = alloca i32, align 4
  %f = alloca float, align 4
  %v = alloca i32, align 4
  %f247 = alloca double, align 8
  %e = alloca i32, align 4
  %k248 = alloca i32, align 4
  %ci = alloca double, align 8
  %cs = alloca double, align 8
  %ca = alloca double, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2997, metadata !2019), !dbg !2998
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2999, metadata !2019), !dbg !3000
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3001, metadata !2019), !dbg !3002
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3003, metadata !2019), !dbg !3004
  store i32 0, i32* %i, align 4, !dbg !3005
  br label %for.cond, !dbg !3007

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3008
  %cmp = icmp slt i32 %0, 64, !dbg !3011
  br i1 %cmp, label %for.body, label %for.end, !dbg !3012

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3013, metadata !2019), !dbg !3015
  call void @llvm.dbg.declare(metadata i32* %mod, metadata !3016, metadata !2019), !dbg !3017
  %1 = load i32, i32* %i, align 4, !dbg !3018
  %div = sdiv i32 %1, 3, !dbg !3019
  store i32 %div, i32* %shift, align 4, !dbg !3020
  %2 = load i32, i32* %i, align 4, !dbg !3021
  %rem = srem i32 %2, 3, !dbg !3022
  store i32 %rem, i32* %mod, align 4, !dbg !3023
  %3 = load i32, i32* %mod, align 4, !dbg !3024
  %4 = load i32, i32* %shift, align 4, !dbg !3025
  %shl = shl i32 %4, 2, !dbg !3026
  %or = or i32 %3, %shl, !dbg !3027
  %conv = trunc i32 %or to i16, !dbg !3024
  %5 = load i32, i32* %i, align 4, !dbg !3028
  %idxprom = sext i32 %5 to i64, !dbg !3029
  %arrayidx = getelementptr inbounds [64 x i16], [64 x i16]* @scale_factor_modshift, i64 0, i64 %idxprom, !dbg !3029
  store i16 %conv, i16* %arrayidx, align 2, !dbg !3030
  br label %for.inc, !dbg !3031

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !3032
  %inc = add nsw i32 %6, 1, !dbg !3032
  store i32 %inc, i32* %i, align 4, !dbg !3032
  br label %for.cond, !dbg !3034, !llvm.loop !3035

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3037
  br label %for.cond1, !dbg !3039

for.cond1:                                        ; preds = %for.inc30, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !3040
  %cmp2 = icmp slt i32 %7, 15, !dbg !3043
  br i1 %cmp2, label %for.body4, label %for.end32, !dbg !3044

for.body4:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3045, metadata !2019), !dbg !3047
  call void @llvm.dbg.declare(metadata i32* %norm, metadata !3048, metadata !2019), !dbg !3049
  %8 = load i32, i32* %i, align 4, !dbg !3050
  %add = add nsw i32 %8, 2, !dbg !3051
  store i32 %add, i32* %n, align 4, !dbg !3052
  %9 = load i32, i32* %n, align 4, !dbg !3053
  %sh_prom = zext i32 %9 to i64, !dbg !3054
  %shl5 = shl i64 1, %sh_prom, !dbg !3054
  %mul = mul nsw i64 %shl5, 8388608, !dbg !3055
  %10 = load i32, i32* %n, align 4, !dbg !3056
  %shl6 = shl i32 1, %10, !dbg !3057
  %sub = sub nsw i32 %shl6, 1, !dbg !3058
  %conv7 = sext i32 %sub to i64, !dbg !3059
  %div8 = sdiv i64 %mul, %conv7, !dbg !3060
  %conv9 = trunc i64 %div8 to i32, !dbg !3061
  store i32 %conv9, i32* %norm, align 4, !dbg !3062
  %11 = load i32, i32* %norm, align 4, !dbg !3063
  %conv10 = sext i32 %11 to i64, !dbg !3064
  %mul11 = mul nsw i64 %conv10, 16777216, !dbg !3065
  %shr = ashr i64 %mul11, 23, !dbg !3066
  %conv12 = trunc i64 %shr to i32, !dbg !3067
  %12 = load i32, i32* %i, align 4, !dbg !3068
  %idxprom13 = sext i32 %12 to i64, !dbg !3069
  %arrayidx14 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom13, !dbg !3069
  %arrayidx15 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx14, i64 0, i64 0, !dbg !3069
  store i32 %conv12, i32* %arrayidx15, align 4, !dbg !3070
  %13 = load i32, i32* %norm, align 4, !dbg !3071
  %conv16 = sext i32 %13 to i64, !dbg !3072
  %mul17 = mul nsw i64 %conv16, 13316085, !dbg !3073
  %shr18 = ashr i64 %mul17, 23, !dbg !3074
  %conv19 = trunc i64 %shr18 to i32, !dbg !3075
  %14 = load i32, i32* %i, align 4, !dbg !3076
  %idxprom20 = sext i32 %14 to i64, !dbg !3077
  %arrayidx21 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom20, !dbg !3077
  %arrayidx22 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx21, i64 0, i64 1, !dbg !3077
  store i32 %conv19, i32* %arrayidx22, align 4, !dbg !3078
  %15 = load i32, i32* %norm, align 4, !dbg !3079
  %conv23 = sext i32 %15 to i64, !dbg !3080
  %mul24 = mul nsw i64 %conv23, 10568984, !dbg !3081
  %shr25 = ashr i64 %mul24, 23, !dbg !3082
  %conv26 = trunc i64 %shr25 to i32, !dbg !3083
  %16 = load i32, i32* %i, align 4, !dbg !3084
  %idxprom27 = sext i32 %16 to i64, !dbg !3085
  %arrayidx28 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom27, !dbg !3085
  %arrayidx29 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx28, i64 0, i64 2, !dbg !3085
  store i32 %conv26, i32* %arrayidx29, align 4, !dbg !3086
  br label %do.body, !dbg !3087, !llvm.loop !3088

do.body:                                          ; preds = %for.body4
  br label %do.end, !dbg !3089

do.end:                                           ; preds = %do.body
  br label %for.inc30, !dbg !3092

for.inc30:                                        ; preds = %do.end
  %17 = load i32, i32* %i, align 4, !dbg !3093
  %inc31 = add nsw i32 %17, 1, !dbg !3093
  store i32 %inc31, i32* %i, align 4, !dbg !3093
  br label %for.cond1, !dbg !3095, !llvm.loop !3096

for.end32:                                        ; preds = %for.cond1
  call void @ff_mpa_synth_init_fixed(i32* getelementptr inbounds ([0 x i32], [0 x i32]* @ff_mpa_synth_window_fixed, i32 0, i32 0)), !dbg !3098
  store i32 0, i32* %offset, align 4, !dbg !3099
  store i32 1, i32* %i, align 4, !dbg !3100
  br label %for.cond33, !dbg !3102

for.cond33:                                       ; preds = %for.inc89, %for.end32
  %18 = load i32, i32* %i, align 4, !dbg !3103
  %cmp34 = icmp slt i32 %18, 16, !dbg !3106
  br i1 %cmp34, label %for.body36, label %for.end91, !dbg !3107

for.body36:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata %struct.HuffTable** %h, metadata !3108, metadata !2019), !dbg !3111
  %19 = load i32, i32* %i, align 4, !dbg !3112
  %idxprom37 = sext i32 %19 to i64, !dbg !3113
  %arrayidx38 = getelementptr inbounds [16 x %struct.HuffTable], [16 x %struct.HuffTable]* @mpa_huff_tables, i64 0, i64 %idxprom37, !dbg !3113
  store %struct.HuffTable* %arrayidx38, %struct.HuffTable** %h, align 8, !dbg !3111
  call void @llvm.dbg.declare(metadata i32* %xsize, metadata !3114, metadata !2019), !dbg !3115
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3116, metadata !2019), !dbg !3117
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3118, metadata !2019), !dbg !3119
  call void @llvm.dbg.declare(metadata [512 x i8]* %tmp_bits, metadata !3120, metadata !2019), !dbg !3122
  %20 = bitcast [512 x i8]* %tmp_bits to i8*, !dbg !3122
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 512, i32 16, i1 false), !dbg !3122
  call void @llvm.dbg.declare(metadata [512 x i16]* %tmp_codes, metadata !3123, metadata !2019), !dbg !3125
  %21 = bitcast [512 x i16]* %tmp_codes to i8*, !dbg !3125
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 1024, i32 16, i1 false), !dbg !3125
  %22 = load %struct.HuffTable*, %struct.HuffTable** %h, align 8, !dbg !3126
  %xsize39 = getelementptr inbounds %struct.HuffTable, %struct.HuffTable* %22, i32 0, i32 0, !dbg !3127
  %23 = load i32, i32* %xsize39, align 8, !dbg !3127
  store i32 %23, i32* %xsize, align 4, !dbg !3128
  store i32 0, i32* %j, align 4, !dbg !3129
  store i32 0, i32* %x, align 4, !dbg !3130
  br label %for.cond40, !dbg !3132

for.cond40:                                       ; preds = %for.inc74, %for.body36
  %24 = load i32, i32* %x, align 4, !dbg !3133
  %25 = load i32, i32* %xsize, align 4, !dbg !3136
  %cmp41 = icmp slt i32 %24, %25, !dbg !3137
  br i1 %cmp41, label %for.body43, label %for.end76, !dbg !3138

for.body43:                                       ; preds = %for.cond40
  store i32 0, i32* %y, align 4, !dbg !3139
  br label %for.cond44, !dbg !3142

for.cond44:                                       ; preds = %for.inc71, %for.body43
  %26 = load i32, i32* %y, align 4, !dbg !3143
  %27 = load i32, i32* %xsize, align 4, !dbg !3146
  %cmp45 = icmp slt i32 %26, %27, !dbg !3147
  br i1 %cmp45, label %for.body47, label %for.end73, !dbg !3148

for.body47:                                       ; preds = %for.cond44
  %28 = load i32, i32* %j, align 4, !dbg !3149
  %idxprom48 = sext i32 %28 to i64, !dbg !3151
  %29 = load %struct.HuffTable*, %struct.HuffTable** %h, align 8, !dbg !3151
  %bits = getelementptr inbounds %struct.HuffTable, %struct.HuffTable* %29, i32 0, i32 1, !dbg !3152
  %30 = load i8*, i8** %bits, align 8, !dbg !3152
  %arrayidx49 = getelementptr inbounds i8, i8* %30, i64 %idxprom48, !dbg !3151
  %31 = load i8, i8* %arrayidx49, align 1, !dbg !3151
  %32 = load i32, i32* %x, align 4, !dbg !3153
  %shl50 = shl i32 %32, 5, !dbg !3154
  %33 = load i32, i32* %y, align 4, !dbg !3155
  %or51 = or i32 %shl50, %33, !dbg !3156
  %34 = load i32, i32* %x, align 4, !dbg !3157
  %tobool = icmp ne i32 %34, 0, !dbg !3157
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3158

land.rhs:                                         ; preds = %for.body47
  %35 = load i32, i32* %y, align 4, !dbg !3159
  %tobool52 = icmp ne i32 %35, 0, !dbg !3161
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body47
  %36 = phi i1 [ false, %for.body47 ], [ %tobool52, %land.rhs ]
  %land.ext = zext i1 %36 to i32, !dbg !3162
  %shl53 = shl i32 %land.ext, 4, !dbg !3164
  %or54 = or i32 %or51, %shl53, !dbg !3165
  %idxprom55 = sext i32 %or54 to i64, !dbg !3166
  %arrayidx56 = getelementptr inbounds [512 x i8], [512 x i8]* %tmp_bits, i64 0, i64 %idxprom55, !dbg !3166
  store i8 %31, i8* %arrayidx56, align 1, !dbg !3167
  %37 = load i32, i32* %j, align 4, !dbg !3168
  %inc57 = add nsw i32 %37, 1, !dbg !3168
  store i32 %inc57, i32* %j, align 4, !dbg !3168
  %idxprom58 = sext i32 %37 to i64, !dbg !3169
  %38 = load %struct.HuffTable*, %struct.HuffTable** %h, align 8, !dbg !3169
  %codes = getelementptr inbounds %struct.HuffTable, %struct.HuffTable* %38, i32 0, i32 2, !dbg !3170
  %39 = load i16*, i16** %codes, align 8, !dbg !3170
  %arrayidx59 = getelementptr inbounds i16, i16* %39, i64 %idxprom58, !dbg !3169
  %40 = load i16, i16* %arrayidx59, align 2, !dbg !3169
  %41 = load i32, i32* %x, align 4, !dbg !3171
  %shl60 = shl i32 %41, 5, !dbg !3172
  %42 = load i32, i32* %y, align 4, !dbg !3173
  %or61 = or i32 %shl60, %42, !dbg !3174
  %43 = load i32, i32* %x, align 4, !dbg !3175
  %tobool62 = icmp ne i32 %43, 0, !dbg !3175
  br i1 %tobool62, label %land.rhs63, label %land.end65, !dbg !3176

land.rhs63:                                       ; preds = %land.end
  %44 = load i32, i32* %y, align 4, !dbg !3177
  %tobool64 = icmp ne i32 %44, 0, !dbg !3178
  br label %land.end65

land.end65:                                       ; preds = %land.rhs63, %land.end
  %45 = phi i1 [ false, %land.end ], [ %tobool64, %land.rhs63 ]
  %land.ext66 = zext i1 %45 to i32, !dbg !3179
  %shl67 = shl i32 %land.ext66, 4, !dbg !3180
  %or68 = or i32 %or61, %shl67, !dbg !3181
  %idxprom69 = sext i32 %or68 to i64, !dbg !3182
  %arrayidx70 = getelementptr inbounds [512 x i16], [512 x i16]* %tmp_codes, i64 0, i64 %idxprom69, !dbg !3182
  store i16 %40, i16* %arrayidx70, align 2, !dbg !3183
  br label %for.inc71, !dbg !3184

for.inc71:                                        ; preds = %land.end65
  %46 = load i32, i32* %y, align 4, !dbg !3185
  %inc72 = add nsw i32 %46, 1, !dbg !3185
  store i32 %inc72, i32* %y, align 4, !dbg !3185
  br label %for.cond44, !dbg !3187, !llvm.loop !3188

for.end73:                                        ; preds = %for.cond44
  br label %for.inc74, !dbg !3190

for.inc74:                                        ; preds = %for.end73
  %47 = load i32, i32* %x, align 4, !dbg !3191
  %inc75 = add nsw i32 %47, 1, !dbg !3191
  store i32 %inc75, i32* %x, align 4, !dbg !3191
  br label %for.cond40, !dbg !3193, !llvm.loop !3194

for.end76:                                        ; preds = %for.cond40
  %48 = load i32, i32* %offset, align 4, !dbg !3196
  %idx.ext = sext i32 %48 to i64, !dbg !3197
  %add.ptr = getelementptr inbounds [2 x i16], [2 x i16]* getelementptr inbounds ([3746 x [2 x i16]], [3746 x [2 x i16]]* @huff_vlc_tables, i32 0, i32 0), i64 %idx.ext, !dbg !3197
  %49 = load i32, i32* %i, align 4, !dbg !3198
  %idxprom77 = sext i32 %49 to i64, !dbg !3199
  %arrayidx78 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom77, !dbg !3199
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx78, i32 0, i32 1, !dbg !3200
  store [2 x i16]* %add.ptr, [2 x i16]** %table, align 8, !dbg !3201
  %50 = load i32, i32* %i, align 4, !dbg !3202
  %idxprom79 = sext i32 %50 to i64, !dbg !3203
  %arrayidx80 = getelementptr inbounds [16 x i32], [16 x i32]* @huff_vlc_tables_sizes, i64 0, i64 %idxprom79, !dbg !3203
  %51 = load i32, i32* %arrayidx80, align 4, !dbg !3203
  %52 = load i32, i32* %i, align 4, !dbg !3204
  %idxprom81 = sext i32 %52 to i64, !dbg !3205
  %arrayidx82 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom81, !dbg !3205
  %table_allocated = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx82, i32 0, i32 3, !dbg !3206
  store i32 %51, i32* %table_allocated, align 4, !dbg !3207
  %53 = load i32, i32* %i, align 4, !dbg !3208
  %idxprom83 = sext i32 %53 to i64, !dbg !3209
  %arrayidx84 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom83, !dbg !3209
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %tmp_bits, i32 0, i32 0, !dbg !3210
  %arraydecay85 = getelementptr inbounds [512 x i16], [512 x i16]* %tmp_codes, i32 0, i32 0, !dbg !3211
  %54 = bitcast i16* %arraydecay85 to i8*, !dbg !3211
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx84, i32 7, i32 512, i8* %arraydecay, i32 1, i32 1, i8* %54, i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3212
  %55 = load i32, i32* %i, align 4, !dbg !3213
  %idxprom86 = sext i32 %55 to i64, !dbg !3214
  %arrayidx87 = getelementptr inbounds [16 x i32], [16 x i32]* @huff_vlc_tables_sizes, i64 0, i64 %idxprom86, !dbg !3214
  %56 = load i32, i32* %arrayidx87, align 4, !dbg !3214
  %57 = load i32, i32* %offset, align 4, !dbg !3215
  %add88 = add nsw i32 %57, %56, !dbg !3215
  store i32 %add88, i32* %offset, align 4, !dbg !3215
  br label %for.inc89, !dbg !3216

for.inc89:                                        ; preds = %for.end76
  %58 = load i32, i32* %i, align 4, !dbg !3217
  %inc90 = add nsw i32 %58, 1, !dbg !3217
  store i32 %inc90, i32* %i, align 4, !dbg !3217
  br label %for.cond33, !dbg !3219, !llvm.loop !3220

for.end91:                                        ; preds = %for.cond33
  br label %do.body92, !dbg !3222, !llvm.loop !3223

do.body92:                                        ; preds = %for.end91
  %59 = load i32, i32* %offset, align 4, !dbg !3224
  %conv93 = sext i32 %59 to i64, !dbg !3224
  %cmp94 = icmp eq i64 %conv93, 3746, !dbg !3228
  br i1 %cmp94, label %if.end, label %if.then, !dbg !3229

if.then:                                          ; preds = %do.body92
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0), i32 318), !dbg !3230
  call void @abort() #8, !dbg !3233
  unreachable, !dbg !3235

if.end:                                           ; preds = %do.body92
  br label %do.end96, !dbg !3236

do.end96:                                         ; preds = %if.end
  store i32 0, i32* %offset, align 4, !dbg !3238
  store i32 0, i32* %i, align 4, !dbg !3239
  br label %for.cond97, !dbg !3241

for.cond97:                                       ; preds = %for.inc125, %do.end96
  %60 = load i32, i32* %i, align 4, !dbg !3242
  %cmp98 = icmp slt i32 %60, 2, !dbg !3245
  br i1 %cmp98, label %for.body100, label %for.end127, !dbg !3246

for.body100:                                      ; preds = %for.cond97
  %61 = load i32, i32* %offset, align 4, !dbg !3247
  %idx.ext101 = sext i32 %61 to i64, !dbg !3249
  %add.ptr102 = getelementptr inbounds [2 x i16], [2 x i16]* getelementptr inbounds ([144 x [2 x i16]], [144 x [2 x i16]]* @huff_quad_vlc_tables, i32 0, i32 0), i64 %idx.ext101, !dbg !3249
  %62 = load i32, i32* %i, align 4, !dbg !3250
  %idxprom103 = sext i32 %62 to i64, !dbg !3251
  %arrayidx104 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom103, !dbg !3251
  %table105 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx104, i32 0, i32 1, !dbg !3252
  store [2 x i16]* %add.ptr102, [2 x i16]** %table105, align 8, !dbg !3253
  %63 = load i32, i32* %i, align 4, !dbg !3254
  %idxprom106 = sext i32 %63 to i64, !dbg !3255
  %arrayidx107 = getelementptr inbounds [2 x i32], [2 x i32]* @huff_quad_vlc_tables_sizes, i64 0, i64 %idxprom106, !dbg !3255
  %64 = load i32, i32* %arrayidx107, align 4, !dbg !3255
  %65 = load i32, i32* %i, align 4, !dbg !3256
  %idxprom108 = sext i32 %65 to i64, !dbg !3257
  %arrayidx109 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom108, !dbg !3257
  %table_allocated110 = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx109, i32 0, i32 3, !dbg !3258
  store i32 %64, i32* %table_allocated110, align 4, !dbg !3259
  %66 = load i32, i32* %i, align 4, !dbg !3260
  %idxprom111 = sext i32 %66 to i64, !dbg !3261
  %arrayidx112 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom111, !dbg !3261
  %67 = load i32, i32* %i, align 4, !dbg !3262
  %cmp113 = icmp eq i32 %67, 0, !dbg !3263
  %cond = select i1 %cmp113, i32 7, i32 4, !dbg !3262
  %68 = load i32, i32* %i, align 4, !dbg !3264
  %idxprom115 = sext i32 %68 to i64, !dbg !3265
  %arrayidx116 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @mpa_quad_bits, i64 0, i64 %idxprom115, !dbg !3265
  %arraydecay117 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx116, i32 0, i32 0, !dbg !3265
  %69 = load i32, i32* %i, align 4, !dbg !3266
  %idxprom118 = sext i32 %69 to i64, !dbg !3267
  %arrayidx119 = getelementptr inbounds [2 x [16 x i8]], [2 x [16 x i8]]* @mpa_quad_codes, i64 0, i64 %idxprom118, !dbg !3267
  %arraydecay120 = getelementptr inbounds [16 x i8], [16 x i8]* %arrayidx119, i32 0, i32 0, !dbg !3267
  %call121 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx112, i32 %cond, i32 16, i8* %arraydecay117, i32 1, i32 1, i8* %arraydecay120, i32 1, i32 1, i8* null, i32 0, i32 0, i32 4), !dbg !3268
  %70 = load i32, i32* %i, align 4, !dbg !3269
  %idxprom122 = sext i32 %70 to i64, !dbg !3270
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* @huff_quad_vlc_tables_sizes, i64 0, i64 %idxprom122, !dbg !3270
  %71 = load i32, i32* %arrayidx123, align 4, !dbg !3270
  %72 = load i32, i32* %offset, align 4, !dbg !3271
  %add124 = add nsw i32 %72, %71, !dbg !3271
  store i32 %add124, i32* %offset, align 4, !dbg !3271
  br label %for.inc125, !dbg !3272

for.inc125:                                       ; preds = %for.body100
  %73 = load i32, i32* %i, align 4, !dbg !3273
  %inc126 = add nsw i32 %73, 1, !dbg !3273
  store i32 %inc126, i32* %i, align 4, !dbg !3273
  br label %for.cond97, !dbg !3275, !llvm.loop !3276

for.end127:                                       ; preds = %for.cond97
  br label %do.body128, !dbg !3278, !llvm.loop !3279

do.body128:                                       ; preds = %for.end127
  %74 = load i32, i32* %offset, align 4, !dbg !3280
  %conv129 = sext i32 %74 to i64, !dbg !3280
  %cmp130 = icmp eq i64 %conv129, 144, !dbg !3284
  br i1 %cmp130, label %if.end133, label %if.then132, !dbg !3285

if.then132:                                       ; preds = %do.body128
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0), i32 329), !dbg !3286
  call void @abort() #8, !dbg !3289
  unreachable, !dbg !3291

if.end133:                                        ; preds = %do.body128
  br label %do.end134, !dbg !3292

do.end134:                                        ; preds = %if.end133
  store i32 0, i32* %i, align 4, !dbg !3294
  br label %for.cond135, !dbg !3296

for.cond135:                                      ; preds = %for.inc161, %do.end134
  %75 = load i32, i32* %i, align 4, !dbg !3297
  %cmp136 = icmp slt i32 %75, 9, !dbg !3300
  br i1 %cmp136, label %for.body138, label %for.end163, !dbg !3301

for.body138:                                      ; preds = %for.cond135
  store i32 0, i32* %k, align 4, !dbg !3302
  store i32 0, i32* %j, align 4, !dbg !3304
  br label %for.cond139, !dbg !3306

for.cond139:                                      ; preds = %for.inc154, %for.body138
  %76 = load i32, i32* %j, align 4, !dbg !3307
  %cmp140 = icmp slt i32 %76, 22, !dbg !3310
  br i1 %cmp140, label %for.body142, label %for.end156, !dbg !3311

for.body142:                                      ; preds = %for.cond139
  %77 = load i32, i32* %k, align 4, !dbg !3312
  %conv143 = trunc i32 %77 to i16, !dbg !3312
  %78 = load i32, i32* %j, align 4, !dbg !3314
  %idxprom144 = sext i32 %78 to i64, !dbg !3315
  %79 = load i32, i32* %i, align 4, !dbg !3316
  %idxprom145 = sext i32 %79 to i64, !dbg !3315
  %arrayidx146 = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom145, !dbg !3315
  %arrayidx147 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx146, i64 0, i64 %idxprom144, !dbg !3315
  store i16 %conv143, i16* %arrayidx147, align 2, !dbg !3317
  %80 = load i32, i32* %j, align 4, !dbg !3318
  %idxprom148 = sext i32 %80 to i64, !dbg !3319
  %81 = load i32, i32* %i, align 4, !dbg !3320
  %idxprom149 = sext i32 %81 to i64, !dbg !3319
  %arrayidx150 = getelementptr inbounds [9 x [22 x i8]], [9 x [22 x i8]]* @band_size_long, i64 0, i64 %idxprom149, !dbg !3319
  %arrayidx151 = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx150, i64 0, i64 %idxprom148, !dbg !3319
  %82 = load i8, i8* %arrayidx151, align 1, !dbg !3319
  %conv152 = zext i8 %82 to i32, !dbg !3319
  %83 = load i32, i32* %k, align 4, !dbg !3321
  %add153 = add nsw i32 %83, %conv152, !dbg !3321
  store i32 %add153, i32* %k, align 4, !dbg !3321
  br label %for.inc154, !dbg !3322

for.inc154:                                       ; preds = %for.body142
  %84 = load i32, i32* %j, align 4, !dbg !3323
  %inc155 = add nsw i32 %84, 1, !dbg !3323
  store i32 %inc155, i32* %j, align 4, !dbg !3323
  br label %for.cond139, !dbg !3325, !llvm.loop !3326

for.end156:                                       ; preds = %for.cond139
  %85 = load i32, i32* %k, align 4, !dbg !3328
  %conv157 = trunc i32 %85 to i16, !dbg !3328
  %86 = load i32, i32* %i, align 4, !dbg !3329
  %idxprom158 = sext i32 %86 to i64, !dbg !3330
  %arrayidx159 = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom158, !dbg !3330
  %arrayidx160 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx159, i64 0, i64 22, !dbg !3330
  store i16 %conv157, i16* %arrayidx160, align 2, !dbg !3331
  br label %for.inc161, !dbg !3332

for.inc161:                                       ; preds = %for.end156
  %87 = load i32, i32* %i, align 4, !dbg !3333
  %inc162 = add nsw i32 %87, 1, !dbg !3333
  store i32 %inc162, i32* %i, align 4, !dbg !3333
  br label %for.cond135, !dbg !3335, !llvm.loop !3336

for.end163:                                       ; preds = %for.cond135
  call void @mpegaudio_tableinit(), !dbg !3338
  store i32 0, i32* %i, align 4, !dbg !3339
  br label %for.cond164, !dbg !3341

for.cond164:                                      ; preds = %for.inc201, %for.end163
  %88 = load i32, i32* %i, align 4, !dbg !3342
  %cmp165 = icmp slt i32 %88, 4, !dbg !3345
  br i1 %cmp165, label %for.body167, label %for.end203, !dbg !3346

for.body167:                                      ; preds = %for.cond164
  %89 = load i32, i32* %i, align 4, !dbg !3347
  %idxprom168 = sext i32 %89 to i64, !dbg !3350
  %arrayidx169 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom168, !dbg !3350
  %90 = load i32, i32* %arrayidx169, align 4, !dbg !3350
  %cmp170 = icmp slt i32 %90, 0, !dbg !3351
  br i1 %cmp170, label %if.then172, label %if.end200, !dbg !3352

if.then172:                                       ; preds = %for.body167
  store i32 0, i32* %j, align 4, !dbg !3353
  br label %for.cond173, !dbg !3356

for.cond173:                                      ; preds = %for.inc197, %if.then172
  %91 = load i32, i32* %j, align 4, !dbg !3357
  %92 = load i32, i32* %i, align 4, !dbg !3360
  %idxprom174 = sext i32 %92 to i64, !dbg !3361
  %arrayidx175 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom174, !dbg !3361
  %93 = load i32, i32* %arrayidx175, align 4, !dbg !3361
  %sub176 = sub nsw i32 0, %93, !dbg !3362
  %add177 = add nsw i32 %sub176, 1, !dbg !3363
  %shl178 = shl i32 1, %add177, !dbg !3364
  %cmp179 = icmp slt i32 %91, %shl178, !dbg !3365
  br i1 %cmp179, label %for.body181, label %for.end199, !dbg !3366

for.body181:                                      ; preds = %for.cond173
  call void @llvm.dbg.declare(metadata i32* %val1, metadata !3367, metadata !2019), !dbg !3369
  call void @llvm.dbg.declare(metadata i32* %val2, metadata !3370, metadata !2019), !dbg !3371
  call void @llvm.dbg.declare(metadata i32* %val3, metadata !3372, metadata !2019), !dbg !3373
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !3374, metadata !2019), !dbg !3375
  call void @llvm.dbg.declare(metadata i32* %val, metadata !3376, metadata !2019), !dbg !3377
  %94 = load i32, i32* %j, align 4, !dbg !3378
  store i32 %94, i32* %val, align 4, !dbg !3377
  %95 = load i32, i32* %i, align 4, !dbg !3379
  %idxprom182 = sext i32 %95 to i64, !dbg !3380
  %arrayidx183 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_steps, i64 0, i64 %idxprom182, !dbg !3380
  %96 = load i32, i32* %arrayidx183, align 4, !dbg !3380
  store i32 %96, i32* %steps, align 4, !dbg !3381
  %97 = load i32, i32* %val, align 4, !dbg !3382
  %98 = load i32, i32* %steps, align 4, !dbg !3383
  %rem184 = srem i32 %97, %98, !dbg !3384
  store i32 %rem184, i32* %val1, align 4, !dbg !3385
  %99 = load i32, i32* %steps, align 4, !dbg !3386
  %100 = load i32, i32* %val, align 4, !dbg !3387
  %div185 = sdiv i32 %100, %99, !dbg !3387
  store i32 %div185, i32* %val, align 4, !dbg !3387
  %101 = load i32, i32* %val, align 4, !dbg !3388
  %102 = load i32, i32* %steps, align 4, !dbg !3389
  %rem186 = srem i32 %101, %102, !dbg !3390
  store i32 %rem186, i32* %val2, align 4, !dbg !3391
  %103 = load i32, i32* %val, align 4, !dbg !3392
  %104 = load i32, i32* %steps, align 4, !dbg !3393
  %div187 = sdiv i32 %103, %104, !dbg !3394
  store i32 %div187, i32* %val3, align 4, !dbg !3395
  %105 = load i32, i32* %val1, align 4, !dbg !3396
  %106 = load i32, i32* %val2, align 4, !dbg !3397
  %shl188 = shl i32 %106, 4, !dbg !3398
  %add189 = add nsw i32 %105, %shl188, !dbg !3399
  %107 = load i32, i32* %val3, align 4, !dbg !3400
  %shl190 = shl i32 %107, 8, !dbg !3401
  %add191 = add nsw i32 %add189, %shl190, !dbg !3402
  %conv192 = trunc i32 %add191 to i16, !dbg !3396
  %108 = load i32, i32* %j, align 4, !dbg !3403
  %idxprom193 = sext i32 %108 to i64, !dbg !3404
  %109 = load i32, i32* %i, align 4, !dbg !3405
  %idxprom194 = sext i32 %109 to i64, !dbg !3404
  %arrayidx195 = getelementptr inbounds [4 x i16*], [4 x i16*]* @division_tabs, i64 0, i64 %idxprom194, !dbg !3404
  %110 = load i16*, i16** %arrayidx195, align 8, !dbg !3404
  %arrayidx196 = getelementptr inbounds i16, i16* %110, i64 %idxprom193, !dbg !3404
  store i16 %conv192, i16* %arrayidx196, align 2, !dbg !3406
  br label %for.inc197, !dbg !3407

for.inc197:                                       ; preds = %for.body181
  %111 = load i32, i32* %j, align 4, !dbg !3408
  %inc198 = add nsw i32 %111, 1, !dbg !3408
  store i32 %inc198, i32* %j, align 4, !dbg !3408
  br label %for.cond173, !dbg !3410, !llvm.loop !3411

for.end199:                                       ; preds = %for.cond173
  br label %if.end200, !dbg !3413

if.end200:                                        ; preds = %for.end199, %for.body167
  br label %for.inc201, !dbg !3414

for.inc201:                                       ; preds = %if.end200
  %112 = load i32, i32* %i, align 4, !dbg !3415
  %inc202 = add nsw i32 %112, 1, !dbg !3415
  store i32 %inc202, i32* %i, align 4, !dbg !3415
  br label %for.cond164, !dbg !3417, !llvm.loop !3418

for.end203:                                       ; preds = %for.cond164
  store i32 0, i32* %i, align 4, !dbg !3420
  br label %for.cond204, !dbg !3422

for.cond204:                                      ; preds = %for.inc229, %for.end203
  %113 = load i32, i32* %i, align 4, !dbg !3423
  %cmp205 = icmp slt i32 %113, 7, !dbg !3426
  br i1 %cmp205, label %for.body207, label %for.end231, !dbg !3427

for.body207:                                      ; preds = %for.cond204
  call void @llvm.dbg.declare(metadata float* %f, metadata !3428, metadata !2019), !dbg !3430
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3431, metadata !2019), !dbg !3432
  %114 = load i32, i32* %i, align 4, !dbg !3433
  %cmp208 = icmp ne i32 %114, 6, !dbg !3435
  br i1 %cmp208, label %if.then210, label %if.else, !dbg !3436

if.then210:                                       ; preds = %for.body207
  %115 = load i32, i32* %i, align 4, !dbg !3437
  %conv211 = sitofp i32 %115 to double, !dbg !3439
  %mul212 = fmul double %conv211, 0x400921FB54442D18, !dbg !3440
  %div213 = fdiv double %mul212, 1.200000e+01, !dbg !3441
  %call214 = call double @tan(double %div213) #9, !dbg !3442
  %conv215 = fptrunc double %call214 to float, !dbg !3442
  store float %conv215, float* %f, align 4, !dbg !3443
  %116 = load float, float* %f, align 4, !dbg !3444
  %conv216 = fpext float %116 to double, !dbg !3444
  %117 = load float, float* %f, align 4, !dbg !3445
  %conv217 = fpext float %117 to double, !dbg !3445
  %add218 = fadd double 1.000000e+00, %conv217, !dbg !3446
  %div219 = fdiv double %conv216, %add218, !dbg !3447
  %mul220 = fmul double %div219, 8.388608e+06, !dbg !3448
  %add221 = fadd double %mul220, 5.000000e-01, !dbg !3449
  %conv222 = fptosi double %add221 to i32, !dbg !3450
  store i32 %conv222, i32* %v, align 4, !dbg !3451
  br label %if.end223, !dbg !3452

if.else:                                          ; preds = %for.body207
  store i32 8388608, i32* %v, align 4, !dbg !3453
  br label %if.end223

if.end223:                                        ; preds = %if.else, %if.then210
  %118 = load i32, i32* %v, align 4, !dbg !3455
  %119 = load i32, i32* %i, align 4, !dbg !3456
  %idxprom224 = sext i32 %119 to i64, !dbg !3457
  %arrayidx225 = getelementptr inbounds [16 x i32], [16 x i32]* getelementptr inbounds ([2 x [16 x i32]], [2 x [16 x i32]]* @is_table, i64 0, i64 0), i64 0, i64 %idxprom224, !dbg !3457
  store i32 %118, i32* %arrayidx225, align 4, !dbg !3458
  %120 = load i32, i32* %v, align 4, !dbg !3459
  %121 = load i32, i32* %i, align 4, !dbg !3460
  %sub226 = sub nsw i32 6, %121, !dbg !3461
  %idxprom227 = sext i32 %sub226 to i64, !dbg !3462
  %arrayidx228 = getelementptr inbounds [16 x i32], [16 x i32]* getelementptr inbounds ([2 x [16 x i32]], [2 x [16 x i32]]* @is_table, i64 0, i64 1), i64 0, i64 %idxprom227, !dbg !3462
  store i32 %120, i32* %arrayidx228, align 4, !dbg !3463
  br label %for.inc229, !dbg !3464

for.inc229:                                       ; preds = %if.end223
  %122 = load i32, i32* %i, align 4, !dbg !3465
  %inc230 = add nsw i32 %122, 1, !dbg !3465
  store i32 %inc230, i32* %i, align 4, !dbg !3465
  br label %for.cond204, !dbg !3467, !llvm.loop !3468

for.end231:                                       ; preds = %for.cond204
  store i32 7, i32* %i, align 4, !dbg !3470
  br label %for.cond232, !dbg !3472

for.cond232:                                      ; preds = %for.inc240, %for.end231
  %123 = load i32, i32* %i, align 4, !dbg !3473
  %cmp233 = icmp slt i32 %123, 16, !dbg !3476
  br i1 %cmp233, label %for.body235, label %for.end242, !dbg !3477

for.body235:                                      ; preds = %for.cond232
  %124 = load i32, i32* %i, align 4, !dbg !3478
  %idxprom236 = sext i32 %124 to i64, !dbg !3479
  %arrayidx237 = getelementptr inbounds [16 x i32], [16 x i32]* getelementptr inbounds ([2 x [16 x i32]], [2 x [16 x i32]]* @is_table, i64 0, i64 1), i64 0, i64 %idxprom236, !dbg !3479
  store i32 0, i32* %arrayidx237, align 4, !dbg !3480
  %125 = load i32, i32* %i, align 4, !dbg !3481
  %idxprom238 = sext i32 %125 to i64, !dbg !3482
  %arrayidx239 = getelementptr inbounds [16 x i32], [16 x i32]* getelementptr inbounds ([2 x [16 x i32]], [2 x [16 x i32]]* @is_table, i64 0, i64 0), i64 0, i64 %idxprom238, !dbg !3482
  store i32 0, i32* %arrayidx239, align 4, !dbg !3483
  br label %for.inc240, !dbg !3482

for.inc240:                                       ; preds = %for.body235
  %126 = load i32, i32* %i, align 4, !dbg !3484
  %inc241 = add nsw i32 %126, 1, !dbg !3484
  store i32 %inc241, i32* %i, align 4, !dbg !3484
  br label %for.cond232, !dbg !3486, !llvm.loop !3487

for.end242:                                       ; preds = %for.cond232
  store i32 0, i32* %i, align 4, !dbg !3489
  br label %for.cond243, !dbg !3491

for.cond243:                                      ; preds = %for.inc281, %for.end242
  %127 = load i32, i32* %i, align 4, !dbg !3492
  %cmp244 = icmp slt i32 %127, 16, !dbg !3495
  br i1 %cmp244, label %for.body246, label %for.end283, !dbg !3496

for.body246:                                      ; preds = %for.cond243
  call void @llvm.dbg.declare(metadata double* %f247, metadata !3497, metadata !2019), !dbg !3499
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3500, metadata !2019), !dbg !3501
  call void @llvm.dbg.declare(metadata i32* %k248, metadata !3502, metadata !2019), !dbg !3503
  store i32 0, i32* %j, align 4, !dbg !3504
  br label %for.cond249, !dbg !3506

for.cond249:                                      ; preds = %for.inc278, %for.body246
  %128 = load i32, i32* %j, align 4, !dbg !3507
  %cmp250 = icmp slt i32 %128, 2, !dbg !3510
  br i1 %cmp250, label %for.body252, label %for.end280, !dbg !3511

for.body252:                                      ; preds = %for.cond249
  %129 = load i32, i32* %j, align 4, !dbg !3512
  %add253 = add nsw i32 %129, 1, !dbg !3514
  %sub254 = sub nsw i32 0, %add253, !dbg !3515
  %130 = load i32, i32* %i, align 4, !dbg !3516
  %add255 = add nsw i32 %130, 1, !dbg !3517
  %shr256 = ashr i32 %add255, 1, !dbg !3518
  %mul257 = mul nsw i32 %sub254, %shr256, !dbg !3519
  store i32 %mul257, i32* %e, align 4, !dbg !3520
  %131 = load i32, i32* %e, align 4, !dbg !3521
  %conv258 = sitofp i32 %131 to double, !dbg !3521
  %div259 = fdiv double %conv258, 4.000000e+00, !dbg !3522
  %call260 = call double @exp2(double %div259) #9, !dbg !3523
  store double %call260, double* %f247, align 8, !dbg !3524
  %132 = load i32, i32* %i, align 4, !dbg !3525
  %and = and i32 %132, 1, !dbg !3526
  store i32 %and, i32* %k248, align 4, !dbg !3527
  %133 = load double, double* %f247, align 8, !dbg !3528
  %mul261 = fmul double %133, 8.388608e+06, !dbg !3529
  %add262 = fadd double %mul261, 5.000000e-01, !dbg !3530
  %conv263 = fptosi double %add262 to i32, !dbg !3531
  %134 = load i32, i32* %i, align 4, !dbg !3532
  %idxprom264 = sext i32 %134 to i64, !dbg !3533
  %135 = load i32, i32* %k248, align 4, !dbg !3534
  %xor = xor i32 %135, 1, !dbg !3535
  %idxprom265 = sext i32 %xor to i64, !dbg !3533
  %136 = load i32, i32* %j, align 4, !dbg !3536
  %idxprom266 = sext i32 %136 to i64, !dbg !3533
  %arrayidx267 = getelementptr inbounds [2 x [2 x [16 x i32]]], [2 x [2 x [16 x i32]]]* @is_table_lsf, i64 0, i64 %idxprom266, !dbg !3533
  %arrayidx268 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* %arrayidx267, i64 0, i64 %idxprom265, !dbg !3533
  %arrayidx269 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx268, i64 0, i64 %idxprom264, !dbg !3533
  store i32 %conv263, i32* %arrayidx269, align 4, !dbg !3537
  %137 = load i32, i32* %i, align 4, !dbg !3538
  %idxprom270 = sext i32 %137 to i64, !dbg !3539
  %138 = load i32, i32* %k248, align 4, !dbg !3540
  %idxprom271 = sext i32 %138 to i64, !dbg !3539
  %139 = load i32, i32* %j, align 4, !dbg !3541
  %idxprom272 = sext i32 %139 to i64, !dbg !3539
  %arrayidx273 = getelementptr inbounds [2 x [2 x [16 x i32]]], [2 x [2 x [16 x i32]]]* @is_table_lsf, i64 0, i64 %idxprom272, !dbg !3539
  %arrayidx274 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* %arrayidx273, i64 0, i64 %idxprom271, !dbg !3539
  %arrayidx275 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx274, i64 0, i64 %idxprom270, !dbg !3539
  store i32 8388608, i32* %arrayidx275, align 4, !dbg !3542
  br label %do.body276, !dbg !3543, !llvm.loop !3544

do.body276:                                       ; preds = %for.body252
  br label %do.end277, !dbg !3545

do.end277:                                        ; preds = %do.body276
  br label %for.inc278, !dbg !3548

for.inc278:                                       ; preds = %do.end277
  %140 = load i32, i32* %j, align 4, !dbg !3549
  %inc279 = add nsw i32 %140, 1, !dbg !3549
  store i32 %inc279, i32* %j, align 4, !dbg !3549
  br label %for.cond249, !dbg !3551, !llvm.loop !3552

for.end280:                                       ; preds = %for.cond249
  br label %for.inc281, !dbg !3554

for.inc281:                                       ; preds = %for.end280
  %141 = load i32, i32* %i, align 4, !dbg !3555
  %inc282 = add nsw i32 %141, 1, !dbg !3555
  store i32 %inc282, i32* %i, align 4, !dbg !3555
  br label %for.cond243, !dbg !3557, !llvm.loop !3558

for.end283:                                       ; preds = %for.cond243
  store i32 0, i32* %i, align 4, !dbg !3560
  br label %for.cond284, !dbg !3562

for.cond284:                                      ; preds = %for.inc334, %for.end283
  %142 = load i32, i32* %i, align 4, !dbg !3563
  %cmp285 = icmp slt i32 %142, 8, !dbg !3566
  br i1 %cmp285, label %for.body287, label %for.end336, !dbg !3567

for.body287:                                      ; preds = %for.cond284
  call void @llvm.dbg.declare(metadata double* %ci, metadata !3568, metadata !2019), !dbg !3570
  call void @llvm.dbg.declare(metadata double* %cs, metadata !3571, metadata !2019), !dbg !3572
  call void @llvm.dbg.declare(metadata double* %ca, metadata !3573, metadata !2019), !dbg !3574
  %143 = load i32, i32* %i, align 4, !dbg !3575
  %idxprom288 = sext i32 %143 to i64, !dbg !3576
  %arrayidx289 = getelementptr inbounds [8 x float], [8 x float]* @ci_table, i64 0, i64 %idxprom288, !dbg !3576
  %144 = load float, float* %arrayidx289, align 4, !dbg !3576
  %conv290 = fpext float %144 to double, !dbg !3576
  store double %conv290, double* %ci, align 8, !dbg !3577
  %145 = load double, double* %ci, align 8, !dbg !3578
  %146 = load double, double* %ci, align 8, !dbg !3579
  %mul291 = fmul double %145, %146, !dbg !3580
  %add292 = fadd double 1.000000e+00, %mul291, !dbg !3581
  %call293 = call double @sqrt(double %add292) #9, !dbg !3582
  %div294 = fdiv double 1.000000e+00, %call293, !dbg !3583
  store double %div294, double* %cs, align 8, !dbg !3584
  %147 = load double, double* %cs, align 8, !dbg !3585
  %148 = load double, double* %ci, align 8, !dbg !3586
  %mul295 = fmul double %147, %148, !dbg !3587
  store double %mul295, double* %ca, align 8, !dbg !3588
  %149 = load double, double* %cs, align 8, !dbg !3589
  %div296 = fdiv double %149, 4.000000e+00, !dbg !3590
  %mul297 = fmul double %div296, 0x41F0000000000000, !dbg !3591
  %add298 = fadd double %mul297, 5.000000e-01, !dbg !3592
  %conv299 = fptosi double %add298 to i32, !dbg !3593
  %150 = load i32, i32* %i, align 4, !dbg !3594
  %idxprom300 = sext i32 %150 to i64, !dbg !3595
  %arrayidx301 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 %idxprom300, !dbg !3595
  %arrayidx302 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 0, !dbg !3595
  store i32 %conv299, i32* %arrayidx302, align 16, !dbg !3596
  %151 = load double, double* %ca, align 8, !dbg !3597
  %div303 = fdiv double %151, 4.000000e+00, !dbg !3598
  %mul304 = fmul double %div303, 0x41F0000000000000, !dbg !3599
  %add305 = fadd double %mul304, 5.000000e-01, !dbg !3600
  %conv306 = fptosi double %add305 to i32, !dbg !3601
  %152 = load i32, i32* %i, align 4, !dbg !3602
  %idxprom307 = sext i32 %152 to i64, !dbg !3603
  %arrayidx308 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 %idxprom307, !dbg !3603
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx308, i64 0, i64 1, !dbg !3603
  store i32 %conv306, i32* %arrayidx309, align 4, !dbg !3604
  %153 = load double, double* %ca, align 8, !dbg !3605
  %div310 = fdiv double %153, 4.000000e+00, !dbg !3606
  %mul311 = fmul double %div310, 0x41F0000000000000, !dbg !3607
  %add312 = fadd double %mul311, 5.000000e-01, !dbg !3608
  %conv313 = fptosi double %add312 to i32, !dbg !3609
  %154 = load double, double* %cs, align 8, !dbg !3610
  %div314 = fdiv double %154, 4.000000e+00, !dbg !3611
  %mul315 = fmul double %div314, 0x41F0000000000000, !dbg !3612
  %add316 = fadd double %mul315, 5.000000e-01, !dbg !3613
  %conv317 = fptosi double %add316 to i32, !dbg !3614
  %add318 = add nsw i32 %conv313, %conv317, !dbg !3615
  %155 = load i32, i32* %i, align 4, !dbg !3616
  %idxprom319 = sext i32 %155 to i64, !dbg !3617
  %arrayidx320 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 %idxprom319, !dbg !3617
  %arrayidx321 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx320, i64 0, i64 2, !dbg !3617
  store i32 %add318, i32* %arrayidx321, align 8, !dbg !3618
  %156 = load double, double* %ca, align 8, !dbg !3619
  %div322 = fdiv double %156, 4.000000e+00, !dbg !3620
  %mul323 = fmul double %div322, 0x41F0000000000000, !dbg !3621
  %add324 = fadd double %mul323, 5.000000e-01, !dbg !3622
  %conv325 = fptosi double %add324 to i32, !dbg !3623
  %157 = load double, double* %cs, align 8, !dbg !3624
  %div326 = fdiv double %157, 4.000000e+00, !dbg !3625
  %mul327 = fmul double %div326, 0x41F0000000000000, !dbg !3626
  %add328 = fadd double %mul327, 5.000000e-01, !dbg !3627
  %conv329 = fptosi double %add328 to i32, !dbg !3628
  %sub330 = sub nsw i32 %conv325, %conv329, !dbg !3629
  %158 = load i32, i32* %i, align 4, !dbg !3630
  %idxprom331 = sext i32 %158 to i64, !dbg !3631
  %arrayidx332 = getelementptr inbounds [8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 %idxprom331, !dbg !3631
  %arrayidx333 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx332, i64 0, i64 3, !dbg !3631
  store i32 %sub330, i32* %arrayidx333, align 4, !dbg !3632
  br label %for.inc334, !dbg !3633

for.inc334:                                       ; preds = %for.body287
  %159 = load i32, i32* %i, align 4, !dbg !3634
  %inc335 = add nsw i32 %159, 1, !dbg !3634
  store i32 %inc335, i32* %i, align 4, !dbg !3634
  br label %for.cond284, !dbg !3636, !llvm.loop !3637

for.end336:                                       ; preds = %for.cond284
  ret void, !dbg !3639
}

declare void @ff_mpadsp_init(%struct.MPADSPContext*) #3

declare void @ff_mpa_synth_init_fixed(i32*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: cold nounwind optsize uwtable
define internal void @mpegaudio_tableinit() #0 !dbg !1779 {
entry:
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  %exponent = alloca i32, align 4
  %exp2_base = alloca double, align 8
  %exp2_val = alloca double, align 8
  %pow43_val = alloca double, align 8
  %f = alloca double, align 8
  %fm = alloca double, align 8
  %e = alloca i32, align 4
  %m = alloca i32, align 4
  %value6 = alloca double, align 8
  %f48 = alloca double, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3640, metadata !2019), !dbg !3641
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3642, metadata !2019), !dbg !3643
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !3644, metadata !2019), !dbg !3645
  call void @llvm.dbg.declare(metadata double* %exp2_base, metadata !3646, metadata !2019), !dbg !3647
  store double 0x3B70000000000000, double* %exp2_base, align 8, !dbg !3647
  call void @llvm.dbg.declare(metadata double* %exp2_val, metadata !3648, metadata !2019), !dbg !3649
  call void @llvm.dbg.declare(metadata double* %pow43_val, metadata !3650, metadata !2019), !dbg !3651
  store double 0.000000e+00, double* %pow43_val, align 8, !dbg !3651
  store i32 0, i32* %i, align 4, !dbg !3652
  br label %for.cond, !dbg !3654

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3655
  %cmp = icmp slt i32 %0, 16, !dbg !3658
  br i1 %cmp, label %for.body, label %for.end, !dbg !3659

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3660
  %conv = sitofp i32 %1 to double, !dbg !3660
  %2 = load i32, i32* %i, align 4, !dbg !3661
  %conv1 = sitofp i32 %2 to double, !dbg !3661
  %call = call double @cbrt(double %conv1) #9, !dbg !3662
  %mul = fmul double %conv, %call, !dbg !3663
  %3 = load i32, i32* %i, align 4, !dbg !3664
  %idxprom = sext i32 %3 to i64, !dbg !3665
  %arrayidx = getelementptr inbounds [16 x double], [16 x double]* @mpegaudio_tableinit.pow43_lut, i64 0, i64 %idxprom, !dbg !3665
  store double %mul, double* %arrayidx, align 8, !dbg !3666
  br label %for.inc, !dbg !3665

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !3667
  %inc = add nsw i32 %4, 1, !dbg !3667
  store i32 %inc, i32* %i, align 4, !dbg !3667
  br label %for.cond, !dbg !3669, !llvm.loop !3670

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %i, align 4, !dbg !3672
  br label %for.cond2, !dbg !3674

for.cond2:                                        ; preds = %for.inc26, %for.end
  %5 = load i32, i32* %i, align 4, !dbg !3675
  %cmp3 = icmp slt i32 %5, 32828, !dbg !3678
  br i1 %cmp3, label %for.body5, label %for.end28, !dbg !3679

for.body5:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata double* %f, metadata !3680, metadata !2019), !dbg !3682
  call void @llvm.dbg.declare(metadata double* %fm, metadata !3683, metadata !2019), !dbg !3684
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3685, metadata !2019), !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %m, metadata !3687, metadata !2019), !dbg !3688
  call void @llvm.dbg.declare(metadata double* %value6, metadata !3689, metadata !2019), !dbg !3690
  %6 = load i32, i32* %i, align 4, !dbg !3691
  %div = sdiv i32 %6, 4, !dbg !3692
  %conv7 = sitofp i32 %div to double, !dbg !3691
  store double %conv7, double* %value6, align 8, !dbg !3690
  %7 = load i32, i32* %i, align 4, !dbg !3693
  %and = and i32 %7, 3, !dbg !3695
  %cmp8 = icmp eq i32 %and, 0, !dbg !3696
  br i1 %cmp8, label %if.then, label %if.end, !dbg !3697

if.then:                                          ; preds = %for.body5
  %8 = load double, double* %value6, align 8, !dbg !3698
  %div10 = fdiv double %8, 1.759000e+00, !dbg !3699
  %9 = load double, double* %value6, align 8, !dbg !3700
  %call11 = call double @cbrt(double %9) #9, !dbg !3701
  %mul12 = fmul double %div10, %call11, !dbg !3702
  store double %mul12, double* %pow43_val, align 8, !dbg !3703
  br label %if.end, !dbg !3704

if.end:                                           ; preds = %if.then, %for.body5
  %10 = load double, double* %pow43_val, align 8, !dbg !3705
  %11 = load i32, i32* %i, align 4, !dbg !3706
  %and13 = and i32 %11, 3, !dbg !3707
  %idxprom14 = sext i32 %and13 to i64, !dbg !3708
  %arrayidx15 = getelementptr inbounds [4 x double], [4 x double]* @mpegaudio_tableinit.exp2_lut, i64 0, i64 %idxprom14, !dbg !3708
  %12 = load double, double* %arrayidx15, align 8, !dbg !3708
  %mul16 = fmul double %10, %12, !dbg !3709
  store double %mul16, double* %f, align 8, !dbg !3710
  %13 = load double, double* %f, align 8, !dbg !3711
  %call17 = call double @frexp(double %13, i32* %e) #9, !dbg !3712
  store double %call17, double* %fm, align 8, !dbg !3713
  %14 = load double, double* %fm, align 8, !dbg !3714
  %mul18 = fmul double %14, 0x41E0000000000000, !dbg !3715
  %call19 = call i64 @llrint(double %mul18) #9, !dbg !3716
  %conv20 = trunc i64 %call19 to i32, !dbg !3716
  store i32 %conv20, i32* %m, align 4, !dbg !3717
  %15 = load i32, i32* %e, align 4, !dbg !3718
  %add = add nsw i32 %15, -103, !dbg !3718
  store i32 %add, i32* %e, align 4, !dbg !3718
  %16 = load i32, i32* %m, align 4, !dbg !3719
  %17 = load i32, i32* %i, align 4, !dbg !3720
  %idxprom21 = sext i32 %17 to i64, !dbg !3721
  %arrayidx22 = getelementptr inbounds [32828 x i32], [32828 x i32]* @table_4_3_value, i64 0, i64 %idxprom21, !dbg !3721
  store i32 %16, i32* %arrayidx22, align 4, !dbg !3722
  %18 = load i32, i32* %e, align 4, !dbg !3723
  %sub = sub nsw i32 0, %18, !dbg !3724
  %conv23 = trunc i32 %sub to i8, !dbg !3724
  %19 = load i32, i32* %i, align 4, !dbg !3725
  %idxprom24 = sext i32 %19 to i64, !dbg !3726
  %arrayidx25 = getelementptr inbounds [32828 x i8], [32828 x i8]* @table_4_3_exp, i64 0, i64 %idxprom24, !dbg !3726
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !3727
  br label %for.inc26, !dbg !3728

for.inc26:                                        ; preds = %if.end
  %20 = load i32, i32* %i, align 4, !dbg !3729
  %inc27 = add nsw i32 %20, 1, !dbg !3729
  store i32 %inc27, i32* %i, align 4, !dbg !3729
  br label %for.cond2, !dbg !3731, !llvm.loop !3732

for.end28:                                        ; preds = %for.cond2
  store i32 0, i32* %exponent, align 4, !dbg !3734
  br label %for.cond29, !dbg !3736

for.cond29:                                       ; preds = %for.inc78, %for.end28
  %21 = load i32, i32* %exponent, align 4, !dbg !3737
  %cmp30 = icmp slt i32 %21, 512, !dbg !3740
  br i1 %cmp30, label %for.body32, label %for.end80, !dbg !3741

for.body32:                                       ; preds = %for.cond29
  %22 = load i32, i32* %exponent, align 4, !dbg !3742
  %tobool = icmp ne i32 %22, 0, !dbg !3742
  br i1 %tobool, label %land.lhs.true, label %if.end38, !dbg !3745

land.lhs.true:                                    ; preds = %for.body32
  %23 = load i32, i32* %exponent, align 4, !dbg !3746
  %and33 = and i32 %23, 3, !dbg !3748
  %cmp34 = icmp eq i32 %and33, 0, !dbg !3749
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !3750

if.then36:                                        ; preds = %land.lhs.true
  %24 = load double, double* %exp2_base, align 8, !dbg !3751
  %mul37 = fmul double %24, 2.000000e+00, !dbg !3751
  store double %mul37, double* %exp2_base, align 8, !dbg !3751
  br label %if.end38, !dbg !3752

if.end38:                                         ; preds = %if.then36, %land.lhs.true, %for.body32
  %25 = load double, double* %exp2_base, align 8, !dbg !3753
  %26 = load i32, i32* %exponent, align 4, !dbg !3754
  %and39 = and i32 %26, 3, !dbg !3755
  %idxprom40 = sext i32 %and39 to i64, !dbg !3756
  %arrayidx41 = getelementptr inbounds [4 x double], [4 x double]* @mpegaudio_tableinit.exp2_lut, i64 0, i64 %idxprom40, !dbg !3756
  %27 = load double, double* %arrayidx41, align 8, !dbg !3756
  %mul42 = fmul double %25, %27, !dbg !3757
  %div43 = fdiv double %mul42, 1.759000e+00, !dbg !3758
  store double %div43, double* %exp2_val, align 8, !dbg !3759
  store i32 0, i32* %value, align 4, !dbg !3760
  br label %for.cond44, !dbg !3762

for.cond44:                                       ; preds = %for.inc65, %if.end38
  %28 = load i32, i32* %value, align 4, !dbg !3763
  %cmp45 = icmp slt i32 %28, 16, !dbg !3766
  br i1 %cmp45, label %for.body47, label %for.end67, !dbg !3767

for.body47:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata double* %f48, metadata !3768, metadata !2019), !dbg !3770
  %29 = load i32, i32* %value, align 4, !dbg !3771
  %idxprom49 = sext i32 %29 to i64, !dbg !3772
  %arrayidx50 = getelementptr inbounds [16 x double], [16 x double]* @mpegaudio_tableinit.pow43_lut, i64 0, i64 %idxprom49, !dbg !3772
  %30 = load double, double* %arrayidx50, align 8, !dbg !3772
  %31 = load double, double* %exp2_val, align 8, !dbg !3773
  %mul51 = fmul double %30, %31, !dbg !3774
  store double %mul51, double* %f48, align 8, !dbg !3770
  %32 = load double, double* %f48, align 8, !dbg !3775
  %cmp52 = fcmp olt double %32, 0x41EFFFFFFFE00000, !dbg !3776
  br i1 %cmp52, label %cond.true, label %cond.false, !dbg !3775

cond.true:                                        ; preds = %for.body47
  %33 = load double, double* %f48, align 8, !dbg !3777
  %call54 = call i64 @llrint(double %33) #9, !dbg !3779
  br label %cond.end, !dbg !3780

cond.false:                                       ; preds = %for.body47
  br label %cond.end, !dbg !3781

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call54, %cond.true ], [ 4294967295, %cond.false ], !dbg !3783
  %conv55 = trunc i64 %cond to i32, !dbg !3785
  %34 = load i32, i32* %value, align 4, !dbg !3786
  %idxprom56 = sext i32 %34 to i64, !dbg !3787
  %35 = load i32, i32* %exponent, align 4, !dbg !3788
  %idxprom57 = sext i32 %35 to i64, !dbg !3787
  %arrayidx58 = getelementptr inbounds [512 x [16 x i32]], [512 x [16 x i32]]* @expval_table_fixed, i64 0, i64 %idxprom57, !dbg !3787
  %arrayidx59 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx58, i64 0, i64 %idxprom56, !dbg !3787
  store i32 %conv55, i32* %arrayidx59, align 4, !dbg !3789
  %36 = load double, double* %f48, align 8, !dbg !3790
  %conv60 = fptrunc double %36 to float, !dbg !3790
  %37 = load i32, i32* %value, align 4, !dbg !3791
  %idxprom61 = sext i32 %37 to i64, !dbg !3792
  %38 = load i32, i32* %exponent, align 4, !dbg !3793
  %idxprom62 = sext i32 %38 to i64, !dbg !3792
  %arrayidx63 = getelementptr inbounds [512 x [16 x float]], [512 x [16 x float]]* @expval_table_float, i64 0, i64 %idxprom62, !dbg !3792
  %arrayidx64 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx63, i64 0, i64 %idxprom61, !dbg !3792
  store float %conv60, float* %arrayidx64, align 4, !dbg !3794
  br label %for.inc65, !dbg !3795

for.inc65:                                        ; preds = %cond.end
  %39 = load i32, i32* %value, align 4, !dbg !3796
  %inc66 = add nsw i32 %39, 1, !dbg !3796
  store i32 %inc66, i32* %value, align 4, !dbg !3796
  br label %for.cond44, !dbg !3798, !llvm.loop !3799

for.end67:                                        ; preds = %for.cond44
  %40 = load i32, i32* %exponent, align 4, !dbg !3801
  %idxprom68 = sext i32 %40 to i64, !dbg !3802
  %arrayidx69 = getelementptr inbounds [512 x [16 x i32]], [512 x [16 x i32]]* @expval_table_fixed, i64 0, i64 %idxprom68, !dbg !3802
  %arrayidx70 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx69, i64 0, i64 1, !dbg !3802
  %41 = load i32, i32* %arrayidx70, align 4, !dbg !3802
  %42 = load i32, i32* %exponent, align 4, !dbg !3803
  %idxprom71 = sext i32 %42 to i64, !dbg !3804
  %arrayidx72 = getelementptr inbounds [512 x i32], [512 x i32]* @exp_table_fixed, i64 0, i64 %idxprom71, !dbg !3804
  store i32 %41, i32* %arrayidx72, align 4, !dbg !3805
  %43 = load i32, i32* %exponent, align 4, !dbg !3806
  %idxprom73 = sext i32 %43 to i64, !dbg !3807
  %arrayidx74 = getelementptr inbounds [512 x [16 x float]], [512 x [16 x float]]* @expval_table_float, i64 0, i64 %idxprom73, !dbg !3807
  %arrayidx75 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx74, i64 0, i64 1, !dbg !3807
  %44 = load float, float* %arrayidx75, align 4, !dbg !3807
  %45 = load i32, i32* %exponent, align 4, !dbg !3808
  %idxprom76 = sext i32 %45 to i64, !dbg !3809
  %arrayidx77 = getelementptr inbounds [512 x float], [512 x float]* @exp_table_float, i64 0, i64 %idxprom76, !dbg !3809
  store float %44, float* %arrayidx77, align 4, !dbg !3810
  br label %for.inc78, !dbg !3811

for.inc78:                                        ; preds = %for.end67
  %46 = load i32, i32* %exponent, align 4, !dbg !3812
  %inc79 = add nsw i32 %46, 1, !dbg !3812
  store i32 %inc79, i32* %exponent, align 4, !dbg !3812
  br label %for.cond29, !dbg !3814, !llvm.loop !3815

for.end80:                                        ; preds = %for.cond29
  ret void, !dbg !3817
}

; Function Attrs: nounwind
declare double @tan(double) #6

; Function Attrs: nounwind
declare double @exp2(double) #6

; Function Attrs: nounwind
declare double @sqrt(double) #6

; Function Attrs: nounwind
declare double @cbrt(double) #6

; Function Attrs: nounwind
declare double @frexp(double, i32*) #6

; Function Attrs: nounwind
declare i64 @llrint(double) #6

declare i32 @avpriv_mpegaudio_decode_header(%struct.MPADecodeHeader*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_frame(%struct.MPADecodeContext* %s, i16** %samples, i8* %buf, i32 %buf_size) #1 !dbg !3818 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %samples.addr = alloca i16**, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %nb_frames = alloca i32, align 4
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %samples_ptr = alloca i16*, align 8
  %sample_stride = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !3821, metadata !2019), !dbg !3822
  store i16** %samples, i16*** %samples.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %samples.addr, metadata !3823, metadata !2019), !dbg !3824
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !3825, metadata !2019), !dbg !3826
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !3827, metadata !2019), !dbg !3828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3829, metadata !2019), !dbg !3830
  call void @llvm.dbg.declare(metadata i32* %nb_frames, metadata !3831, metadata !2019), !dbg !3832
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3833, metadata !2019), !dbg !3834
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3835, metadata !2019), !dbg !3836
  call void @llvm.dbg.declare(metadata i16** %samples_ptr, metadata !3837, metadata !2019), !dbg !3838
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3839
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 14, !dbg !3840
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !3841
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 4, !dbg !3842
  %2 = load i32, i32* %buf_size.addr, align 4, !dbg !3843
  %sub = sub nsw i32 %2, 4, !dbg !3844
  %mul = mul nsw i32 %sub, 8, !dbg !3845
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %add.ptr, i32 %mul), !dbg !3846
  %3 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3847
  %error_protection = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %3, i32 0, i32 1, !dbg !3849
  %4 = load i32, i32* %error_protection, align 4, !dbg !3849
  %tobool = icmp ne i32 %4, 0, !dbg !3847
  br i1 %tobool, label %if.then, label %if.end, !dbg !3850

if.then:                                          ; preds = %entry
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3851
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 14, !dbg !3852
  call void @skip_bits(%struct.GetBitContext* %gb1, i32 16), !dbg !3853
  br label %if.end, !dbg !3853

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3854
  %layer = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 2, !dbg !3855
  %7 = load i32, i32* %layer, align 8, !dbg !3855
  switch i32 %7, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb7
  ], !dbg !3856

sw.bb:                                            ; preds = %if.end
  %8 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3857
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %8, i32 0, i32 26, !dbg !3859
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !3859
  %frame_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 85, !dbg !3860
  store i32 384, i32* %frame_size, align 4, !dbg !3861
  %10 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3862
  %call2 = call i32 @mp_decode_layer1(%struct.MPADecodeContext* %10), !dbg !3863
  store i32 %call2, i32* %nb_frames, align 4, !dbg !3864
  br label %sw.epilog, !dbg !3865

sw.bb3:                                           ; preds = %if.end
  %11 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3866
  %avctx4 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %11, i32 0, i32 26, !dbg !3867
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx4, align 16, !dbg !3867
  %frame_size5 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 85, !dbg !3868
  store i32 1152, i32* %frame_size5, align 4, !dbg !3869
  %13 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3870
  %call6 = call i32 @mp_decode_layer2(%struct.MPADecodeContext* %13), !dbg !3871
  store i32 %call6, i32* %nb_frames, align 4, !dbg !3872
  br label %sw.epilog, !dbg !3873

sw.bb7:                                           ; preds = %if.end
  %14 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3874
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %14, i32 0, i32 9, !dbg !3875
  %15 = load i32, i32* %lsf, align 4, !dbg !3875
  %tobool8 = icmp ne i32 %15, 0, !dbg !3874
  %cond = select i1 %tobool8, i32 576, i32 1152, !dbg !3874
  %16 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3876
  %avctx9 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %16, i32 0, i32 26, !dbg !3877
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx9, align 16, !dbg !3877
  %frame_size10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %17, i32 0, i32 85, !dbg !3878
  store i32 %cond, i32* %frame_size10, align 4, !dbg !3879
  br label %sw.default, !dbg !3876

sw.default:                                       ; preds = %if.end, %sw.bb7
  %18 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3880
  %call11 = call i32 @mp_decode_layer3(%struct.MPADecodeContext* %18), !dbg !3881
  store i32 %call11, i32* %nb_frames, align 4, !dbg !3882
  %19 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3883
  %last_buf_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %19, i32 0, i32 11, !dbg !3884
  store i32 0, i32* %last_buf_size, align 32, !dbg !3885
  %20 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3886
  %in_gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %20, i32 0, i32 15, !dbg !3888
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb, i32 0, i32 0, !dbg !3889
  %21 = load i8*, i8** %buffer, align 16, !dbg !3889
  %tobool12 = icmp ne i8* %21, null, !dbg !3886
  br i1 %tobool12, label %if.then13, label %if.end35, !dbg !3890

if.then13:                                        ; preds = %sw.default
  %22 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3891
  %gb14 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %22, i32 0, i32 14, !dbg !3893
  %call15 = call i8* @align_get_bits(%struct.GetBitContext* %gb14), !dbg !3894
  %23 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3895
  %gb16 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %23, i32 0, i32 14, !dbg !3896
  %call17 = call i32 @get_bits_left(%struct.GetBitContext* %gb16), !dbg !3897
  %shr = ashr i32 %call17, 3, !dbg !3898
  %24 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3899
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %24, i32 0, i32 12, !dbg !3900
  %25 = load i32, i32* %extrasize, align 4, !dbg !3900
  %sub18 = sub nsw i32 %shr, %25, !dbg !3901
  store i32 %sub18, i32* %i, align 4, !dbg !3902
  %26 = load i32, i32* %i, align 4, !dbg !3903
  %cmp = icmp sge i32 %26, 0, !dbg !3905
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3906

land.lhs.true:                                    ; preds = %if.then13
  %27 = load i32, i32* %i, align 4, !dbg !3907
  %cmp19 = icmp sle i32 %27, 512, !dbg !3909
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !3910

if.then20:                                        ; preds = %land.lhs.true
  %28 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3911
  %last_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %28, i32 0, i32 10, !dbg !3913
  %arraydecay = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf, i32 0, i32 0, !dbg !3914
  %29 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3915
  %gb21 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %29, i32 0, i32 14, !dbg !3916
  %buffer22 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb21, i32 0, i32 0, !dbg !3917
  %30 = load i8*, i8** %buffer22, align 16, !dbg !3917
  %31 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3918
  %gb23 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %31, i32 0, i32 14, !dbg !3919
  %call24 = call i32 @get_bits_count(%struct.GetBitContext* %gb23), !dbg !3920
  %shr25 = ashr i32 %call24, 3, !dbg !3921
  %idx.ext = sext i32 %shr25 to i64, !dbg !3922
  %add.ptr26 = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !3922
  %32 = load i32, i32* %i, align 4, !dbg !3923
  %conv = sext i32 %32 to i64, !dbg !3923
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %arraydecay, i8* %add.ptr26, i64 %conv, i32 1, i1 false), !dbg !3924
  %33 = load i32, i32* %i, align 4, !dbg !3926
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3927
  %last_buf_size27 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %34, i32 0, i32 11, !dbg !3928
  store i32 %33, i32* %last_buf_size27, align 32, !dbg !3929
  br label %if.end29, !dbg !3930

if.else:                                          ; preds = %land.lhs.true, %if.then13
  %35 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3931
  %avctx28 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %35, i32 0, i32 26, !dbg !3932
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx28, align 16, !dbg !3932
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !3931
  %38 = load i32, i32* %i, align 4, !dbg !3933
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i32 0, i32 0), i32 %38), !dbg !3934
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then20
  %39 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3935
  %gb30 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %39, i32 0, i32 14, !dbg !3936
  %40 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3937
  %in_gb31 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %40, i32 0, i32 15, !dbg !3938
  %41 = bitcast %struct.GetBitContext* %gb30 to i8*, !dbg !3938
  %42 = bitcast %struct.GetBitContext* %in_gb31 to i8*, !dbg !3938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 32, i32 16, i1 false), !dbg !3938
  %43 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3939
  %in_gb32 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %43, i32 0, i32 15, !dbg !3940
  %buffer33 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb32, i32 0, i32 0, !dbg !3941
  store i8* null, i8** %buffer33, align 16, !dbg !3942
  %44 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3943
  %extrasize34 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %44, i32 0, i32 12, !dbg !3944
  store i32 0, i32* %extrasize34, align 4, !dbg !3945
  br label %if.end35, !dbg !3946

if.end35:                                         ; preds = %if.end29, %sw.default
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3947
  %gb36 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %45, i32 0, i32 14, !dbg !3948
  %call37 = call i8* @align_get_bits(%struct.GetBitContext* %gb36), !dbg !3949
  %46 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3950
  %gb38 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %46, i32 0, i32 14, !dbg !3951
  %call39 = call i32 @get_bits_left(%struct.GetBitContext* %gb38), !dbg !3952
  %shr40 = ashr i32 %call39, 3, !dbg !3953
  %47 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3954
  %extrasize41 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %47, i32 0, i32 12, !dbg !3955
  %48 = load i32, i32* %extrasize41, align 4, !dbg !3955
  %sub42 = sub nsw i32 %shr40, %48, !dbg !3956
  store i32 %sub42, i32* %i, align 4, !dbg !3957
  %49 = load i32, i32* %i, align 4, !dbg !3958
  %cmp43 = icmp slt i32 %49, 0, !dbg !3960
  br i1 %cmp43, label %if.then50, label %lor.lhs.false, !dbg !3961

lor.lhs.false:                                    ; preds = %if.end35
  %50 = load i32, i32* %i, align 4, !dbg !3962
  %cmp45 = icmp sgt i32 %50, 512, !dbg !3964
  br i1 %cmp45, label %if.then50, label %lor.lhs.false47, !dbg !3965

lor.lhs.false47:                                  ; preds = %lor.lhs.false
  %51 = load i32, i32* %nb_frames, align 4, !dbg !3966
  %cmp48 = icmp slt i32 %51, 0, !dbg !3968
  br i1 %cmp48, label %if.then50, label %if.end61, !dbg !3969

if.then50:                                        ; preds = %lor.lhs.false47, %lor.lhs.false, %if.end35
  %52 = load i32, i32* %i, align 4, !dbg !3970
  %cmp51 = icmp slt i32 %52, 0, !dbg !3973
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !3974

if.then53:                                        ; preds = %if.then50
  %53 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3975
  %avctx54 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %53, i32 0, i32 26, !dbg !3976
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx54, align 16, !dbg !3976
  %55 = bitcast %struct.AVCodecContext* %54 to i8*, !dbg !3975
  %56 = load i32, i32* %i, align 4, !dbg !3977
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i32 0, i32 0), i32 %56), !dbg !3978
  br label %if.end55, !dbg !3978

if.end55:                                         ; preds = %if.then53, %if.then50
  %57 = load i32, i32* %buf_size.addr, align 4, !dbg !3979
  %sub56 = sub nsw i32 %57, 4, !dbg !3980
  %cmp57 = icmp sgt i32 512, %sub56, !dbg !3981
  br i1 %cmp57, label %cond.true, label %cond.false, !dbg !3982

cond.true:                                        ; preds = %if.end55
  %58 = load i32, i32* %buf_size.addr, align 4, !dbg !3983
  %sub59 = sub nsw i32 %58, 4, !dbg !3985
  br label %cond.end, !dbg !3986

cond.false:                                       ; preds = %if.end55
  br label %cond.end, !dbg !3987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond60 = phi i32 [ %sub59, %cond.true ], [ 512, %cond.false ], !dbg !3989
  store i32 %cond60, i32* %i, align 4, !dbg !3991
  br label %if.end61, !dbg !3992

if.end61:                                         ; preds = %cond.end, %lor.lhs.false47
  %59 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3993
  %last_buf62 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %59, i32 0, i32 10, !dbg !3994
  %arraydecay63 = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf62, i32 0, i32 0, !dbg !3993
  %60 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3995
  %last_buf_size64 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %60, i32 0, i32 11, !dbg !3996
  %61 = load i32, i32* %last_buf_size64, align 32, !dbg !3996
  %idx.ext65 = sext i32 %61 to i64, !dbg !3997
  %add.ptr66 = getelementptr inbounds i8, i8* %arraydecay63, i64 %idx.ext65, !dbg !3997
  %62 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !3998
  %gb67 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %62, i32 0, i32 14, !dbg !3999
  %buffer68 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb67, i32 0, i32 0, !dbg !4000
  %63 = load i8*, i8** %buffer68, align 16, !dbg !4000
  %64 = load i32, i32* %buf_size.addr, align 4, !dbg !4001
  %idx.ext69 = sext i32 %64 to i64, !dbg !4002
  %add.ptr70 = getelementptr inbounds i8, i8* %63, i64 %idx.ext69, !dbg !4002
  %add.ptr71 = getelementptr inbounds i8, i8* %add.ptr70, i64 -4, !dbg !4003
  %65 = load i32, i32* %i, align 4, !dbg !4004
  %idx.ext72 = sext i32 %65 to i64, !dbg !4005
  %idx.neg = sub i64 0, %idx.ext72, !dbg !4005
  %add.ptr73 = getelementptr inbounds i8, i8* %add.ptr71, i64 %idx.neg, !dbg !4005
  %66 = load i32, i32* %i, align 4, !dbg !4006
  %conv74 = sext i32 %66 to i64, !dbg !4006
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr66, i8* %add.ptr73, i64 %conv74, i32 1, i1 false), !dbg !4007
  %67 = load i32, i32* %i, align 4, !dbg !4008
  %68 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4009
  %last_buf_size75 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %68, i32 0, i32 11, !dbg !4010
  %69 = load i32, i32* %last_buf_size75, align 32, !dbg !4011
  %add = add nsw i32 %69, %67, !dbg !4011
  store i32 %add, i32* %last_buf_size75, align 32, !dbg !4011
  br label %sw.epilog, !dbg !4012

sw.epilog:                                        ; preds = %if.end61, %sw.bb3, %sw.bb
  %70 = load i32, i32* %nb_frames, align 4, !dbg !4013
  %cmp76 = icmp slt i32 %70, 0, !dbg !4015
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !4016

if.then78:                                        ; preds = %sw.epilog
  %71 = load i32, i32* %nb_frames, align 4, !dbg !4017
  store i32 %71, i32* %retval, align 4, !dbg !4018
  br label %return, !dbg !4018

if.end79:                                         ; preds = %sw.epilog
  %72 = load i16**, i16*** %samples.addr, align 8, !dbg !4019
  %tobool80 = icmp ne i16** %72, null, !dbg !4019
  br i1 %tobool80, label %if.end96, label %if.then81, !dbg !4021

if.then81:                                        ; preds = %if.end79
  br label %do.body, !dbg !4022, !llvm.loop !4024

do.body:                                          ; preds = %if.then81
  %73 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4025
  %frame = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %73, i32 0, i32 29, !dbg !4029
  %74 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 16, !dbg !4029
  %tobool82 = icmp ne %struct.AVFrame* %74, null, !dbg !4030
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !4031

if.then83:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0), i32 1618), !dbg !4032
  call void @abort() #8, !dbg !4035
  unreachable, !dbg !4037

if.end84:                                         ; preds = %do.body
  br label %do.end, !dbg !4038

do.end:                                           ; preds = %if.end84
  %75 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4040
  %avctx85 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %75, i32 0, i32 26, !dbg !4041
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx85, align 16, !dbg !4041
  %frame_size86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 85, !dbg !4042
  %77 = load i32, i32* %frame_size86, align 4, !dbg !4042
  %78 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4043
  %frame87 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %78, i32 0, i32 29, !dbg !4044
  %79 = load %struct.AVFrame*, %struct.AVFrame** %frame87, align 16, !dbg !4044
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %79, i32 0, i32 5, !dbg !4045
  store i32 %77, i32* %nb_samples, align 8, !dbg !4046
  %80 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4047
  %avctx88 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %80, i32 0, i32 26, !dbg !4049
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx88, align 16, !dbg !4049
  %82 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4050
  %frame89 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %82, i32 0, i32 29, !dbg !4051
  %83 = load %struct.AVFrame*, %struct.AVFrame** %frame89, align 16, !dbg !4051
  %call90 = call i32 @ff_get_buffer(%struct.AVCodecContext* %81, %struct.AVFrame* %83, i32 0), !dbg !4052
  store i32 %call90, i32* %ret, align 4, !dbg !4053
  %cmp91 = icmp slt i32 %call90, 0, !dbg !4054
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !4055

if.then93:                                        ; preds = %do.end
  %84 = load i32, i32* %ret, align 4, !dbg !4056
  store i32 %84, i32* %retval, align 4, !dbg !4057
  br label %return, !dbg !4057

if.end94:                                         ; preds = %do.end
  %85 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4058
  %frame95 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %85, i32 0, i32 29, !dbg !4059
  %86 = load %struct.AVFrame*, %struct.AVFrame** %frame95, align 16, !dbg !4059
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %86, i32 0, i32 2, !dbg !4060
  %87 = load i8**, i8*** %extended_data, align 8, !dbg !4060
  %88 = bitcast i8** %87 to i16**, !dbg !4061
  store i16** %88, i16*** %samples.addr, align 8, !dbg !4062
  br label %if.end96, !dbg !4063

if.end96:                                         ; preds = %if.end94, %if.end79
  store i32 0, i32* %ch, align 4, !dbg !4064
  br label %for.cond, !dbg !4066

for.cond:                                         ; preds = %for.inc127, %if.end96
  %89 = load i32, i32* %ch, align 4, !dbg !4067
  %90 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4070
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %90, i32 0, i32 6, !dbg !4071
  %91 = load i32, i32* %nb_channels, align 8, !dbg !4071
  %cmp97 = icmp slt i32 %89, %91, !dbg !4072
  br i1 %cmp97, label %for.body, label %for.end129, !dbg !4073

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sample_stride, metadata !4074, metadata !2019), !dbg !4076
  %92 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4077
  %avctx99 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %92, i32 0, i32 26, !dbg !4079
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx99, align 16, !dbg !4079
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %93, i32 0, i32 84, !dbg !4080
  %94 = load i32, i32* %sample_fmt, align 8, !dbg !4080
  %cmp100 = icmp eq i32 %94, 6, !dbg !4081
  br i1 %cmp100, label %if.then102, label %if.else103, !dbg !4082

if.then102:                                       ; preds = %for.body
  %95 = load i32, i32* %ch, align 4, !dbg !4083
  %idxprom = sext i32 %95 to i64, !dbg !4085
  %96 = load i16**, i16*** %samples.addr, align 8, !dbg !4085
  %arrayidx = getelementptr inbounds i16*, i16** %96, i64 %idxprom, !dbg !4085
  %97 = load i16*, i16** %arrayidx, align 8, !dbg !4085
  store i16* %97, i16** %samples_ptr, align 8, !dbg !4086
  store i32 1, i32* %sample_stride, align 4, !dbg !4087
  br label %if.end108, !dbg !4088

if.else103:                                       ; preds = %for.body
  %98 = load i16**, i16*** %samples.addr, align 8, !dbg !4089
  %arrayidx104 = getelementptr inbounds i16*, i16** %98, i64 0, !dbg !4089
  %99 = load i16*, i16** %arrayidx104, align 8, !dbg !4089
  %100 = load i32, i32* %ch, align 4, !dbg !4091
  %idx.ext105 = sext i32 %100 to i64, !dbg !4092
  %add.ptr106 = getelementptr inbounds i16, i16* %99, i64 %idx.ext105, !dbg !4092
  store i16* %add.ptr106, i16** %samples_ptr, align 8, !dbg !4093
  %101 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4094
  %nb_channels107 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %101, i32 0, i32 6, !dbg !4095
  %102 = load i32, i32* %nb_channels107, align 8, !dbg !4095
  store i32 %102, i32* %sample_stride, align 4, !dbg !4096
  br label %if.end108

if.end108:                                        ; preds = %if.else103, %if.then102
  store i32 0, i32* %i, align 4, !dbg !4097
  br label %for.cond109, !dbg !4099

for.cond109:                                      ; preds = %for.inc, %if.end108
  %103 = load i32, i32* %i, align 4, !dbg !4100
  %104 = load i32, i32* %nb_frames, align 4, !dbg !4103
  %cmp110 = icmp slt i32 %103, %104, !dbg !4104
  br i1 %cmp110, label %for.body112, label %for.end, !dbg !4105

for.body112:                                      ; preds = %for.cond109
  %105 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4106
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %105, i32 0, i32 27, !dbg !4108
  %106 = load i32, i32* %ch, align 4, !dbg !4109
  %idxprom113 = sext i32 %106 to i64, !dbg !4110
  %107 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4110
  %synth_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %107, i32 0, i32 17, !dbg !4111
  %arrayidx114 = getelementptr inbounds [2 x [1024 x i32]], [2 x [1024 x i32]]* %synth_buf, i64 0, i64 %idxprom113, !dbg !4110
  %arraydecay115 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx114, i32 0, i32 0, !dbg !4110
  %108 = load i32, i32* %ch, align 4, !dbg !4112
  %idxprom116 = sext i32 %108 to i64, !dbg !4113
  %109 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4113
  %synth_buf_offset = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %109, i32 0, i32 18, !dbg !4114
  %arrayidx117 = getelementptr inbounds [2 x i32], [2 x i32]* %synth_buf_offset, i64 0, i64 %idxprom116, !dbg !4113
  %110 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4115
  %dither_state = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %110, i32 0, i32 24, !dbg !4116
  %111 = load i16*, i16** %samples_ptr, align 8, !dbg !4117
  %112 = load i32, i32* %sample_stride, align 4, !dbg !4118
  %conv118 = sext i32 %112 to i64, !dbg !4118
  %113 = load i32, i32* %i, align 4, !dbg !4119
  %idxprom119 = sext i32 %113 to i64, !dbg !4120
  %114 = load i32, i32* %ch, align 4, !dbg !4121
  %idxprom120 = sext i32 %114 to i64, !dbg !4120
  %115 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4120
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %115, i32 0, i32 20, !dbg !4122
  %arrayidx121 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples, i64 0, i64 %idxprom120, !dbg !4120
  %arrayidx122 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx121, i64 0, i64 %idxprom119, !dbg !4120
  %arraydecay123 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx122, i32 0, i32 0, !dbg !4120
  call void @ff_mpa_synth_filter_fixed(%struct.MPADSPContext* %mpadsp, i32* %arraydecay115, i32* %arrayidx117, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @ff_mpa_synth_window_fixed, i32 0, i32 0), i32* %dither_state, i16* %111, i64 %conv118, i32* %arraydecay123), !dbg !4123
  %116 = load i32, i32* %sample_stride, align 4, !dbg !4124
  %mul124 = mul nsw i32 32, %116, !dbg !4125
  %117 = load i16*, i16** %samples_ptr, align 8, !dbg !4126
  %idx.ext125 = sext i32 %mul124 to i64, !dbg !4126
  %add.ptr126 = getelementptr inbounds i16, i16* %117, i64 %idx.ext125, !dbg !4126
  store i16* %add.ptr126, i16** %samples_ptr, align 8, !dbg !4126
  br label %for.inc, !dbg !4127

for.inc:                                          ; preds = %for.body112
  %118 = load i32, i32* %i, align 4, !dbg !4128
  %inc = add nsw i32 %118, 1, !dbg !4128
  store i32 %inc, i32* %i, align 4, !dbg !4128
  br label %for.cond109, !dbg !4130, !llvm.loop !4131

for.end:                                          ; preds = %for.cond109
  br label %for.inc127, !dbg !4133

for.inc127:                                       ; preds = %for.end
  %119 = load i32, i32* %ch, align 4, !dbg !4134
  %inc128 = add nsw i32 %119, 1, !dbg !4134
  store i32 %inc128, i32* %ch, align 4, !dbg !4134
  br label %for.cond, !dbg !4136, !llvm.loop !4137

for.end129:                                       ; preds = %for.cond
  %120 = load i32, i32* %nb_frames, align 4, !dbg !4139
  %mul130 = mul nsw i32 %120, 32, !dbg !4140
  %conv131 = sext i32 %mul130 to i64, !dbg !4139
  %mul132 = mul i64 %conv131, 2, !dbg !4141
  %121 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4142
  %nb_channels133 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %121, i32 0, i32 6, !dbg !4143
  %122 = load i32, i32* %nb_channels133, align 8, !dbg !4143
  %conv134 = sext i32 %122 to i64, !dbg !4142
  %mul135 = mul i64 %mul132, %conv134, !dbg !4144
  %conv136 = trunc i64 %mul135 to i32, !dbg !4139
  store i32 %conv136, i32* %retval, align 4, !dbg !4145
  br label %return, !dbg !4145

return:                                           ; preds = %for.end129, %if.then93, %if.then78
  %123 = load i32, i32* %retval, align 4, !dbg !4146
  ret i32 %123, !dbg !4146
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #7 !dbg !4147 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4151, metadata !2019), !dbg !4152
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4153, metadata !2019), !dbg !4154
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !4155, metadata !2019), !dbg !4156
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !4157, metadata !2019), !dbg !4158
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4159, metadata !2019), !dbg !4160
  store i32 0, i32* %ret, align 4, !dbg !4160
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !4161
  %cmp = icmp sge i32 %0, 2147483135, !dbg !4163
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4164

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !4165
  %cmp1 = icmp slt i32 %1, 0, !dbg !4167
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4168

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !4169
  %tobool = icmp ne i8* %2, null, !dbg !4169
  br i1 %tobool, label %if.end, label %if.then, !dbg !4171

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !4172
  store i8* null, i8** %buffer.addr, align 8, !dbg !4174
  store i32 -1094995529, i32* %ret, align 4, !dbg !4175
  br label %if.end, !dbg !4176

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !4177
  %add = add nsw i32 %3, 7, !dbg !4178
  %shr = ashr i32 %add, 3, !dbg !4179
  store i32 %shr, i32* %buffer_size, align 4, !dbg !4180
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !4181
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4182
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !4183
  store i8* %4, i8** %buffer3, align 8, !dbg !4184
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !4185
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4186
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !4187
  store i32 %6, i32* %size_in_bits, align 4, !dbg !4188
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !4189
  %add4 = add nsw i32 %8, 8, !dbg !4190
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4191
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !4192
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !4193
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !4194
  %11 = load i32, i32* %buffer_size, align 4, !dbg !4195
  %idx.ext = sext i32 %11 to i64, !dbg !4196
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !4196
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4197
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !4198
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !4199
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4200
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !4201
  store i32 0, i32* %index, align 8, !dbg !4202
  %14 = load i32, i32* %ret, align 4, !dbg !4203
  ret i32 %14, !dbg !4204
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #7 !dbg !4205 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4208, metadata !2019), !dbg !4209
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4210, metadata !2019), !dbg !4211
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4212, metadata !2019), !dbg !4213
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4214
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4215
  %1 = load i32, i32* %index, align 8, !dbg !4215
  store i32 %1, i32* %re_index, align 4, !dbg !4213
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4216, metadata !2019), !dbg !4217
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4218, metadata !2019), !dbg !4219
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4220
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4221
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4221
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4219
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !4222
  %5 = load i32, i32* %re_index, align 4, !dbg !4223
  %6 = load i32, i32* %n.addr, align 4, !dbg !4224
  %add = add i32 %5, %6, !dbg !4225
  %cmp = icmp ugt i32 %4, %add, !dbg !4226
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4227

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !4228
  %8 = load i32, i32* %n.addr, align 4, !dbg !4230
  %add1 = add i32 %7, %8, !dbg !4231
  br label %cond.end, !dbg !4232

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !4233
  br label %cond.end, !dbg !4235

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !4236
  store i32 %cond, i32* %re_index, align 4, !dbg !4238
  %10 = load i32, i32* %re_index, align 4, !dbg !4239
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4240
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !4241
  store i32 %10, i32* %index2, align 8, !dbg !4242
  ret void, !dbg !4243
}

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_layer1(%struct.MPADecodeContext* %s) #1 !dbg !4244 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %bound = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %j = alloca i32, align 4
  %mant = alloca i32, align 4
  %allocation = alloca [2 x [32 x i8]], align 16
  %scale_factors = alloca [2 x [32 x i8]], align 16
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !4247, metadata !2019), !dbg !4248
  call void @llvm.dbg.declare(metadata i32* %bound, metadata !4249, metadata !2019), !dbg !4250
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4251, metadata !2019), !dbg !4252
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4253, metadata !2019), !dbg !4254
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4255, metadata !2019), !dbg !4256
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4257, metadata !2019), !dbg !4258
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4259, metadata !2019), !dbg !4260
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !4261, metadata !2019), !dbg !4262
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %allocation, metadata !4263, metadata !2019), !dbg !4266
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %scale_factors, metadata !4267, metadata !2019), !dbg !4268
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4269
  %mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 7, !dbg !4271
  %1 = load i32, i32* %mode, align 4, !dbg !4271
  %cmp = icmp eq i32 %1, 1, !dbg !4272
  br i1 %cmp, label %if.then, label %if.else, !dbg !4273

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4274
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 8, !dbg !4275
  %3 = load i32, i32* %mode_ext, align 32, !dbg !4275
  %add = add nsw i32 %3, 1, !dbg !4276
  %mul = mul nsw i32 %add, 4, !dbg !4277
  store i32 %mul, i32* %bound, align 4, !dbg !4278
  br label %if.end, !dbg !4279

if.else:                                          ; preds = %entry
  store i32 32, i32* %bound, align 4, !dbg !4280
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !4281
  br label %for.cond, !dbg !4283

for.cond:                                         ; preds = %for.inc7, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !4284
  %5 = load i32, i32* %bound, align 4, !dbg !4287
  %cmp1 = icmp slt i32 %4, %5, !dbg !4288
  br i1 %cmp1, label %for.body, label %for.end9, !dbg !4289

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ch, align 4, !dbg !4290
  br label %for.cond2, !dbg !4293

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %ch, align 4, !dbg !4294
  %7 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4297
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %7, i32 0, i32 6, !dbg !4298
  %8 = load i32, i32* %nb_channels, align 8, !dbg !4298
  %cmp3 = icmp slt i32 %6, %8, !dbg !4299
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !4300

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4301
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 14, !dbg !4303
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 4), !dbg !4304
  %conv = trunc i32 %call to i8, !dbg !4304
  %10 = load i32, i32* %i, align 4, !dbg !4305
  %idxprom = sext i32 %10 to i64, !dbg !4306
  %11 = load i32, i32* %ch, align 4, !dbg !4307
  %idxprom5 = sext i32 %11 to i64, !dbg !4306
  %arrayidx = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 %idxprom5, !dbg !4306
  %arrayidx6 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !4306
  store i8 %conv, i8* %arrayidx6, align 1, !dbg !4308
  br label %for.inc, !dbg !4309

for.inc:                                          ; preds = %for.body4
  %12 = load i32, i32* %ch, align 4, !dbg !4310
  %inc = add nsw i32 %12, 1, !dbg !4310
  store i32 %inc, i32* %ch, align 4, !dbg !4310
  br label %for.cond2, !dbg !4312, !llvm.loop !4313

for.end:                                          ; preds = %for.cond2
  br label %for.inc7, !dbg !4315

for.inc7:                                         ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !dbg !4316
  %inc8 = add nsw i32 %13, 1, !dbg !4316
  store i32 %inc8, i32* %i, align 4, !dbg !4316
  br label %for.cond, !dbg !4318, !llvm.loop !4319

for.end9:                                         ; preds = %for.cond
  %14 = load i32, i32* %bound, align 4, !dbg !4321
  store i32 %14, i32* %i, align 4, !dbg !4323
  br label %for.cond10, !dbg !4324

for.cond10:                                       ; preds = %for.inc20, %for.end9
  %15 = load i32, i32* %i, align 4, !dbg !4325
  %cmp11 = icmp slt i32 %15, 32, !dbg !4328
  br i1 %cmp11, label %for.body13, label %for.end22, !dbg !4329

for.body13:                                       ; preds = %for.cond10
  %16 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4330
  %gb14 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %16, i32 0, i32 14, !dbg !4331
  %call15 = call i32 @get_bits(%struct.GetBitContext* %gb14, i32 4), !dbg !4332
  %conv16 = trunc i32 %call15 to i8, !dbg !4332
  %17 = load i32, i32* %i, align 4, !dbg !4333
  %idxprom17 = sext i32 %17 to i64, !dbg !4334
  %arrayidx18 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 0, !dbg !4334
  %arrayidx19 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx18, i64 0, i64 %idxprom17, !dbg !4334
  store i8 %conv16, i8* %arrayidx19, align 1, !dbg !4335
  br label %for.inc20, !dbg !4334

for.inc20:                                        ; preds = %for.body13
  %18 = load i32, i32* %i, align 4, !dbg !4336
  %inc21 = add nsw i32 %18, 1, !dbg !4336
  store i32 %inc21, i32* %i, align 4, !dbg !4336
  br label %for.cond10, !dbg !4338, !llvm.loop !4339

for.end22:                                        ; preds = %for.cond10
  store i32 0, i32* %i, align 4, !dbg !4341
  br label %for.cond23, !dbg !4343

for.cond23:                                       ; preds = %for.inc48, %for.end22
  %19 = load i32, i32* %i, align 4, !dbg !4344
  %20 = load i32, i32* %bound, align 4, !dbg !4347
  %cmp24 = icmp slt i32 %19, %20, !dbg !4348
  br i1 %cmp24, label %for.body26, label %for.end50, !dbg !4349

for.body26:                                       ; preds = %for.cond23
  store i32 0, i32* %ch, align 4, !dbg !4350
  br label %for.cond27, !dbg !4353

for.cond27:                                       ; preds = %for.inc45, %for.body26
  %21 = load i32, i32* %ch, align 4, !dbg !4354
  %22 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4357
  %nb_channels28 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %22, i32 0, i32 6, !dbg !4358
  %23 = load i32, i32* %nb_channels28, align 8, !dbg !4358
  %cmp29 = icmp slt i32 %21, %23, !dbg !4359
  br i1 %cmp29, label %for.body31, label %for.end47, !dbg !4360

for.body31:                                       ; preds = %for.cond27
  %24 = load i32, i32* %i, align 4, !dbg !4361
  %idxprom32 = sext i32 %24 to i64, !dbg !4364
  %25 = load i32, i32* %ch, align 4, !dbg !4365
  %idxprom33 = sext i32 %25 to i64, !dbg !4364
  %arrayidx34 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 %idxprom33, !dbg !4364
  %arrayidx35 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx34, i64 0, i64 %idxprom32, !dbg !4364
  %26 = load i8, i8* %arrayidx35, align 1, !dbg !4364
  %tobool = icmp ne i8 %26, 0, !dbg !4364
  br i1 %tobool, label %if.then36, label %if.end44, !dbg !4366

if.then36:                                        ; preds = %for.body31
  %27 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4367
  %gb37 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %27, i32 0, i32 14, !dbg !4368
  %call38 = call i32 @get_bits(%struct.GetBitContext* %gb37, i32 6), !dbg !4369
  %conv39 = trunc i32 %call38 to i8, !dbg !4369
  %28 = load i32, i32* %i, align 4, !dbg !4370
  %idxprom40 = sext i32 %28 to i64, !dbg !4371
  %29 = load i32, i32* %ch, align 4, !dbg !4372
  %idxprom41 = sext i32 %29 to i64, !dbg !4371
  %arrayidx42 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 %idxprom41, !dbg !4371
  %arrayidx43 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx42, i64 0, i64 %idxprom40, !dbg !4371
  store i8 %conv39, i8* %arrayidx43, align 1, !dbg !4373
  br label %if.end44, !dbg !4371

if.end44:                                         ; preds = %if.then36, %for.body31
  br label %for.inc45, !dbg !4374

for.inc45:                                        ; preds = %if.end44
  %30 = load i32, i32* %ch, align 4, !dbg !4375
  %inc46 = add nsw i32 %30, 1, !dbg !4375
  store i32 %inc46, i32* %ch, align 4, !dbg !4375
  br label %for.cond27, !dbg !4377, !llvm.loop !4378

for.end47:                                        ; preds = %for.cond27
  br label %for.inc48, !dbg !4380

for.inc48:                                        ; preds = %for.end47
  %31 = load i32, i32* %i, align 4, !dbg !4381
  %inc49 = add nsw i32 %31, 1, !dbg !4381
  store i32 %inc49, i32* %i, align 4, !dbg !4381
  br label %for.cond23, !dbg !4383, !llvm.loop !4384

for.end50:                                        ; preds = %for.cond23
  %32 = load i32, i32* %bound, align 4, !dbg !4386
  store i32 %32, i32* %i, align 4, !dbg !4388
  br label %for.cond51, !dbg !4389

for.cond51:                                       ; preds = %for.inc73, %for.end50
  %33 = load i32, i32* %i, align 4, !dbg !4390
  %cmp52 = icmp slt i32 %33, 32, !dbg !4393
  br i1 %cmp52, label %for.body54, label %for.end75, !dbg !4394

for.body54:                                       ; preds = %for.cond51
  %34 = load i32, i32* %i, align 4, !dbg !4395
  %idxprom55 = sext i32 %34 to i64, !dbg !4398
  %arrayidx56 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 0, !dbg !4398
  %arrayidx57 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx56, i64 0, i64 %idxprom55, !dbg !4398
  %35 = load i8, i8* %arrayidx57, align 1, !dbg !4398
  %tobool58 = icmp ne i8 %35, 0, !dbg !4398
  br i1 %tobool58, label %if.then59, label %if.end72, !dbg !4399

if.then59:                                        ; preds = %for.body54
  %36 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4400
  %gb60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %36, i32 0, i32 14, !dbg !4402
  %call61 = call i32 @get_bits(%struct.GetBitContext* %gb60, i32 6), !dbg !4403
  %conv62 = trunc i32 %call61 to i8, !dbg !4403
  %37 = load i32, i32* %i, align 4, !dbg !4404
  %idxprom63 = sext i32 %37 to i64, !dbg !4405
  %arrayidx64 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 0, !dbg !4405
  %arrayidx65 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx64, i64 0, i64 %idxprom63, !dbg !4405
  store i8 %conv62, i8* %arrayidx65, align 1, !dbg !4406
  %38 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4407
  %gb66 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %38, i32 0, i32 14, !dbg !4408
  %call67 = call i32 @get_bits(%struct.GetBitContext* %gb66, i32 6), !dbg !4409
  %conv68 = trunc i32 %call67 to i8, !dbg !4409
  %39 = load i32, i32* %i, align 4, !dbg !4410
  %idxprom69 = sext i32 %39 to i64, !dbg !4411
  %arrayidx70 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 1, !dbg !4411
  %arrayidx71 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx70, i64 0, i64 %idxprom69, !dbg !4411
  store i8 %conv68, i8* %arrayidx71, align 1, !dbg !4412
  br label %if.end72, !dbg !4413

if.end72:                                         ; preds = %if.then59, %for.body54
  br label %for.inc73, !dbg !4414

for.inc73:                                        ; preds = %if.end72
  %40 = load i32, i32* %i, align 4, !dbg !4415
  %inc74 = add nsw i32 %40, 1, !dbg !4415
  store i32 %inc74, i32* %i, align 4, !dbg !4415
  br label %for.cond51, !dbg !4417, !llvm.loop !4418

for.end75:                                        ; preds = %for.cond51
  store i32 0, i32* %j, align 4, !dbg !4420
  br label %for.cond76, !dbg !4422

for.cond76:                                       ; preds = %for.inc171, %for.end75
  %41 = load i32, i32* %j, align 4, !dbg !4423
  %cmp77 = icmp slt i32 %41, 12, !dbg !4426
  br i1 %cmp77, label %for.body79, label %for.end173, !dbg !4427

for.body79:                                       ; preds = %for.cond76
  store i32 0, i32* %i, align 4, !dbg !4428
  br label %for.cond80, !dbg !4431

for.cond80:                                       ; preds = %for.inc116, %for.body79
  %42 = load i32, i32* %i, align 4, !dbg !4432
  %43 = load i32, i32* %bound, align 4, !dbg !4435
  %cmp81 = icmp slt i32 %42, %43, !dbg !4436
  br i1 %cmp81, label %for.body83, label %for.end118, !dbg !4437

for.body83:                                       ; preds = %for.cond80
  store i32 0, i32* %ch, align 4, !dbg !4438
  br label %for.cond84, !dbg !4441

for.cond84:                                       ; preds = %for.inc113, %for.body83
  %44 = load i32, i32* %ch, align 4, !dbg !4442
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4445
  %nb_channels85 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %45, i32 0, i32 6, !dbg !4446
  %46 = load i32, i32* %nb_channels85, align 8, !dbg !4446
  %cmp86 = icmp slt i32 %44, %46, !dbg !4447
  br i1 %cmp86, label %for.body88, label %for.end115, !dbg !4448

for.body88:                                       ; preds = %for.cond84
  %47 = load i32, i32* %i, align 4, !dbg !4449
  %idxprom89 = sext i32 %47 to i64, !dbg !4451
  %48 = load i32, i32* %ch, align 4, !dbg !4452
  %idxprom90 = sext i32 %48 to i64, !dbg !4451
  %arrayidx91 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 %idxprom90, !dbg !4451
  %arrayidx92 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx91, i64 0, i64 %idxprom89, !dbg !4451
  %49 = load i8, i8* %arrayidx92, align 1, !dbg !4451
  %conv93 = zext i8 %49 to i32, !dbg !4451
  store i32 %conv93, i32* %n, align 4, !dbg !4453
  %50 = load i32, i32* %n, align 4, !dbg !4454
  %tobool94 = icmp ne i32 %50, 0, !dbg !4454
  br i1 %tobool94, label %if.then95, label %if.else105, !dbg !4456

if.then95:                                        ; preds = %for.body88
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4457
  %gb96 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %51, i32 0, i32 14, !dbg !4459
  %52 = load i32, i32* %n, align 4, !dbg !4460
  %add97 = add nsw i32 %52, 1, !dbg !4461
  %call98 = call i32 @get_bits(%struct.GetBitContext* %gb96, i32 %add97), !dbg !4462
  store i32 %call98, i32* %mant, align 4, !dbg !4463
  %53 = load i32, i32* %n, align 4, !dbg !4464
  %54 = load i32, i32* %mant, align 4, !dbg !4465
  %55 = load i32, i32* %i, align 4, !dbg !4466
  %idxprom99 = sext i32 %55 to i64, !dbg !4467
  %56 = load i32, i32* %ch, align 4, !dbg !4468
  %idxprom100 = sext i32 %56 to i64, !dbg !4467
  %arrayidx101 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 %idxprom100, !dbg !4467
  %arrayidx102 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx101, i64 0, i64 %idxprom99, !dbg !4467
  %57 = load i8, i8* %arrayidx102, align 1, !dbg !4467
  %conv103 = zext i8 %57 to i32, !dbg !4467
  %call104 = call i32 @l1_unscale(i32 %53, i32 %54, i32 %conv103), !dbg !4469
  store i32 %call104, i32* %v, align 4, !dbg !4470
  br label %if.end106, !dbg !4471

if.else105:                                       ; preds = %for.body88
  store i32 0, i32* %v, align 4, !dbg !4472
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then95
  %58 = load i32, i32* %v, align 4, !dbg !4474
  %59 = load i32, i32* %i, align 4, !dbg !4475
  %idxprom107 = sext i32 %59 to i64, !dbg !4476
  %60 = load i32, i32* %j, align 4, !dbg !4477
  %idxprom108 = sext i32 %60 to i64, !dbg !4476
  %61 = load i32, i32* %ch, align 4, !dbg !4478
  %idxprom109 = sext i32 %61 to i64, !dbg !4476
  %62 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4476
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %62, i32 0, i32 20, !dbg !4479
  %arrayidx110 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples, i64 0, i64 %idxprom109, !dbg !4476
  %arrayidx111 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx110, i64 0, i64 %idxprom108, !dbg !4476
  %arrayidx112 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx111, i64 0, i64 %idxprom107, !dbg !4476
  store i32 %58, i32* %arrayidx112, align 4, !dbg !4480
  br label %for.inc113, !dbg !4481

for.inc113:                                       ; preds = %if.end106
  %63 = load i32, i32* %ch, align 4, !dbg !4482
  %inc114 = add nsw i32 %63, 1, !dbg !4482
  store i32 %inc114, i32* %ch, align 4, !dbg !4482
  br label %for.cond84, !dbg !4484, !llvm.loop !4485

for.end115:                                       ; preds = %for.cond84
  br label %for.inc116, !dbg !4487

for.inc116:                                       ; preds = %for.end115
  %64 = load i32, i32* %i, align 4, !dbg !4488
  %inc117 = add nsw i32 %64, 1, !dbg !4488
  store i32 %inc117, i32* %i, align 4, !dbg !4488
  br label %for.cond80, !dbg !4490, !llvm.loop !4491

for.end118:                                       ; preds = %for.cond80
  %65 = load i32, i32* %bound, align 4, !dbg !4493
  store i32 %65, i32* %i, align 4, !dbg !4495
  br label %for.cond119, !dbg !4496

for.cond119:                                      ; preds = %for.inc168, %for.end118
  %66 = load i32, i32* %i, align 4, !dbg !4497
  %cmp120 = icmp slt i32 %66, 32, !dbg !4500
  br i1 %cmp120, label %for.body122, label %for.end170, !dbg !4501

for.body122:                                      ; preds = %for.cond119
  %67 = load i32, i32* %i, align 4, !dbg !4502
  %idxprom123 = sext i32 %67 to i64, !dbg !4504
  %arrayidx124 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %allocation, i64 0, i64 0, !dbg !4504
  %arrayidx125 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx124, i64 0, i64 %idxprom123, !dbg !4504
  %68 = load i8, i8* %arrayidx125, align 1, !dbg !4504
  %conv126 = zext i8 %68 to i32, !dbg !4504
  store i32 %conv126, i32* %n, align 4, !dbg !4505
  %69 = load i32, i32* %n, align 4, !dbg !4506
  %tobool127 = icmp ne i32 %69, 0, !dbg !4506
  br i1 %tobool127, label %if.then128, label %if.else154, !dbg !4508

if.then128:                                       ; preds = %for.body122
  %70 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4509
  %gb129 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %70, i32 0, i32 14, !dbg !4511
  %71 = load i32, i32* %n, align 4, !dbg !4512
  %add130 = add nsw i32 %71, 1, !dbg !4513
  %call131 = call i32 @get_bits(%struct.GetBitContext* %gb129, i32 %add130), !dbg !4514
  store i32 %call131, i32* %mant, align 4, !dbg !4515
  %72 = load i32, i32* %n, align 4, !dbg !4516
  %73 = load i32, i32* %mant, align 4, !dbg !4517
  %74 = load i32, i32* %i, align 4, !dbg !4518
  %idxprom132 = sext i32 %74 to i64, !dbg !4519
  %arrayidx133 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 0, !dbg !4519
  %arrayidx134 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx133, i64 0, i64 %idxprom132, !dbg !4519
  %75 = load i8, i8* %arrayidx134, align 1, !dbg !4519
  %conv135 = zext i8 %75 to i32, !dbg !4519
  %call136 = call i32 @l1_unscale(i32 %72, i32 %73, i32 %conv135), !dbg !4520
  store i32 %call136, i32* %v, align 4, !dbg !4521
  %76 = load i32, i32* %v, align 4, !dbg !4522
  %77 = load i32, i32* %i, align 4, !dbg !4523
  %idxprom137 = sext i32 %77 to i64, !dbg !4524
  %78 = load i32, i32* %j, align 4, !dbg !4525
  %idxprom138 = sext i32 %78 to i64, !dbg !4524
  %79 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4524
  %sb_samples139 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %79, i32 0, i32 20, !dbg !4526
  %arrayidx140 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples139, i64 0, i64 0, !dbg !4524
  %arrayidx141 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx140, i64 0, i64 %idxprom138, !dbg !4524
  %arrayidx142 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx141, i64 0, i64 %idxprom137, !dbg !4524
  store i32 %76, i32* %arrayidx142, align 4, !dbg !4527
  %80 = load i32, i32* %n, align 4, !dbg !4528
  %81 = load i32, i32* %mant, align 4, !dbg !4529
  %82 = load i32, i32* %i, align 4, !dbg !4530
  %idxprom143 = sext i32 %82 to i64, !dbg !4531
  %arrayidx144 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_factors, i64 0, i64 1, !dbg !4531
  %arrayidx145 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx144, i64 0, i64 %idxprom143, !dbg !4531
  %83 = load i8, i8* %arrayidx145, align 1, !dbg !4531
  %conv146 = zext i8 %83 to i32, !dbg !4531
  %call147 = call i32 @l1_unscale(i32 %80, i32 %81, i32 %conv146), !dbg !4532
  store i32 %call147, i32* %v, align 4, !dbg !4533
  %84 = load i32, i32* %v, align 4, !dbg !4534
  %85 = load i32, i32* %i, align 4, !dbg !4535
  %idxprom148 = sext i32 %85 to i64, !dbg !4536
  %86 = load i32, i32* %j, align 4, !dbg !4537
  %idxprom149 = sext i32 %86 to i64, !dbg !4536
  %87 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4536
  %sb_samples150 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %87, i32 0, i32 20, !dbg !4538
  %arrayidx151 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples150, i64 0, i64 1, !dbg !4536
  %arrayidx152 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx151, i64 0, i64 %idxprom149, !dbg !4536
  %arrayidx153 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx152, i64 0, i64 %idxprom148, !dbg !4536
  store i32 %84, i32* %arrayidx153, align 4, !dbg !4539
  br label %if.end167, !dbg !4540

if.else154:                                       ; preds = %for.body122
  %88 = load i32, i32* %i, align 4, !dbg !4541
  %idxprom155 = sext i32 %88 to i64, !dbg !4543
  %89 = load i32, i32* %j, align 4, !dbg !4544
  %idxprom156 = sext i32 %89 to i64, !dbg !4543
  %90 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4543
  %sb_samples157 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %90, i32 0, i32 20, !dbg !4545
  %arrayidx158 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples157, i64 0, i64 0, !dbg !4543
  %arrayidx159 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx158, i64 0, i64 %idxprom156, !dbg !4543
  %arrayidx160 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx159, i64 0, i64 %idxprom155, !dbg !4543
  store i32 0, i32* %arrayidx160, align 4, !dbg !4546
  %91 = load i32, i32* %i, align 4, !dbg !4547
  %idxprom161 = sext i32 %91 to i64, !dbg !4548
  %92 = load i32, i32* %j, align 4, !dbg !4549
  %idxprom162 = sext i32 %92 to i64, !dbg !4548
  %93 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4548
  %sb_samples163 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %93, i32 0, i32 20, !dbg !4550
  %arrayidx164 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples163, i64 0, i64 1, !dbg !4548
  %arrayidx165 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx164, i64 0, i64 %idxprom162, !dbg !4548
  %arrayidx166 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx165, i64 0, i64 %idxprom161, !dbg !4548
  store i32 0, i32* %arrayidx166, align 4, !dbg !4551
  br label %if.end167

if.end167:                                        ; preds = %if.else154, %if.then128
  br label %for.inc168, !dbg !4552

for.inc168:                                       ; preds = %if.end167
  %94 = load i32, i32* %i, align 4, !dbg !4553
  %inc169 = add nsw i32 %94, 1, !dbg !4553
  store i32 %inc169, i32* %i, align 4, !dbg !4553
  br label %for.cond119, !dbg !4555, !llvm.loop !4556

for.end170:                                       ; preds = %for.cond119
  br label %for.inc171, !dbg !4558

for.inc171:                                       ; preds = %for.end170
  %95 = load i32, i32* %j, align 4, !dbg !4559
  %inc172 = add nsw i32 %95, 1, !dbg !4559
  store i32 %inc172, i32* %j, align 4, !dbg !4559
  br label %for.cond76, !dbg !4561, !llvm.loop !4562

for.end173:                                       ; preds = %for.cond76
  ret i32 12, !dbg !4564
}

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_layer2(%struct.MPADecodeContext* %s) #1 !dbg !4565 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %sblimit = alloca i32, align 4
  %alloc_table = alloca i8*, align 8
  %table = alloca i32, align 4
  %bit_alloc_bits = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ch = alloca i32, align 4
  %bound = alloca i32, align 4
  %v = alloca i32, align 4
  %bit_alloc = alloca [2 x [32 x i8]], align 16
  %scale_code = alloca [2 x [32 x i8]], align 16
  %scale_factors = alloca [2 x [32 x [3 x i8]]], align 16
  %sf = alloca i8*, align 8
  %scale = alloca i32, align 4
  %qindex = alloca i32, align 4
  %bits = alloca i32, align 4
  %steps = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %b = alloca i32, align 4
  %v2 = alloca i32, align 4
  %mant = alloca i32, align 4
  %scale0 = alloca i32, align 4
  %scale1 = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !4566, metadata !2019), !dbg !4567
  call void @llvm.dbg.declare(metadata i32* %sblimit, metadata !4568, metadata !2019), !dbg !4569
  call void @llvm.dbg.declare(metadata i8** %alloc_table, metadata !4570, metadata !2019), !dbg !4573
  call void @llvm.dbg.declare(metadata i32* %table, metadata !4574, metadata !2019), !dbg !4575
  call void @llvm.dbg.declare(metadata i32* %bit_alloc_bits, metadata !4576, metadata !2019), !dbg !4577
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4578, metadata !2019), !dbg !4579
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4580, metadata !2019), !dbg !4581
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4582, metadata !2019), !dbg !4583
  call void @llvm.dbg.declare(metadata i32* %bound, metadata !4584, metadata !2019), !dbg !4585
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4586, metadata !2019), !dbg !4587
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %bit_alloc, metadata !4588, metadata !2019), !dbg !4590
  call void @llvm.dbg.declare(metadata [2 x [32 x i8]]* %scale_code, metadata !4591, metadata !2019), !dbg !4592
  call void @llvm.dbg.declare(metadata [2 x [32 x [3 x i8]]]* %scale_factors, metadata !4593, metadata !2019), !dbg !4596
  call void @llvm.dbg.declare(metadata i8** %sf, metadata !4597, metadata !2019), !dbg !4599
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !4600, metadata !2019), !dbg !4601
  call void @llvm.dbg.declare(metadata i32* %qindex, metadata !4602, metadata !2019), !dbg !4603
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !4604, metadata !2019), !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !4606, metadata !2019), !dbg !4607
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4608, metadata !2019), !dbg !4609
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4610, metadata !2019), !dbg !4611
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4612, metadata !2019), !dbg !4613
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4614, metadata !2019), !dbg !4615
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4616
  %bit_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 5, !dbg !4617
  %1 = load i32, i32* %bit_rate, align 4, !dbg !4617
  %div = sdiv i32 %1, 1000, !dbg !4618
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4619
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 6, !dbg !4620
  %3 = load i32, i32* %nb_channels, align 8, !dbg !4620
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4621
  %sample_rate = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 3, !dbg !4622
  %5 = load i32, i32* %sample_rate, align 4, !dbg !4622
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4623
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 9, !dbg !4624
  %7 = load i32, i32* %lsf, align 4, !dbg !4624
  %call = call i32 @ff_mpa_l2_select_table(i32 %div, i32 %3, i32 %5, i32 %7), !dbg !4625
  store i32 %call, i32* %table, align 4, !dbg !4626
  %8 = load i32, i32* %table, align 4, !dbg !4627
  %idxprom = sext i32 %8 to i64, !dbg !4628
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @ff_mpa_sblimit_table, i64 0, i64 %idxprom, !dbg !4628
  %9 = load i32, i32* %arrayidx, align 4, !dbg !4628
  store i32 %9, i32* %sblimit, align 4, !dbg !4629
  %10 = load i32, i32* %table, align 4, !dbg !4630
  %idxprom1 = sext i32 %10 to i64, !dbg !4631
  %arrayidx2 = getelementptr inbounds [5 x i8*], [5 x i8*]* @ff_mpa_alloc_tables, i64 0, i64 %idxprom1, !dbg !4631
  %11 = load i8*, i8** %arrayidx2, align 8, !dbg !4631
  store i8* %11, i8** %alloc_table, align 8, !dbg !4632
  %12 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4633
  %mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %12, i32 0, i32 7, !dbg !4635
  %13 = load i32, i32* %mode, align 4, !dbg !4635
  %cmp = icmp eq i32 %13, 1, !dbg !4636
  br i1 %cmp, label %if.then, label %if.else, !dbg !4637

if.then:                                          ; preds = %entry
  %14 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4638
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %14, i32 0, i32 8, !dbg !4639
  %15 = load i32, i32* %mode_ext, align 32, !dbg !4639
  %add = add nsw i32 %15, 1, !dbg !4640
  %mul = mul nsw i32 %add, 4, !dbg !4641
  store i32 %mul, i32* %bound, align 4, !dbg !4642
  br label %if.end, !dbg !4643

if.else:                                          ; preds = %entry
  %16 = load i32, i32* %sblimit, align 4, !dbg !4644
  store i32 %16, i32* %bound, align 4, !dbg !4645
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !4646, !llvm.loop !4647

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !4648

do.end:                                           ; preds = %do.body
  %17 = load i32, i32* %bound, align 4, !dbg !4651
  %18 = load i32, i32* %sblimit, align 4, !dbg !4653
  %cmp3 = icmp sgt i32 %17, %18, !dbg !4654
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4655

if.then4:                                         ; preds = %do.end
  %19 = load i32, i32* %sblimit, align 4, !dbg !4656
  store i32 %19, i32* %bound, align 4, !dbg !4657
  br label %if.end5, !dbg !4658

if.end5:                                          ; preds = %if.then4, %do.end
  store i32 0, i32* %j, align 4, !dbg !4659
  store i32 0, i32* %i, align 4, !dbg !4660
  br label %for.cond, !dbg !4662

for.cond:                                         ; preds = %for.inc21, %if.end5
  %20 = load i32, i32* %i, align 4, !dbg !4663
  %21 = load i32, i32* %bound, align 4, !dbg !4666
  %cmp6 = icmp slt i32 %20, %21, !dbg !4667
  br i1 %cmp6, label %for.body, label %for.end23, !dbg !4668

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %j, align 4, !dbg !4669
  %idxprom7 = sext i32 %22 to i64, !dbg !4671
  %23 = load i8*, i8** %alloc_table, align 8, !dbg !4671
  %arrayidx8 = getelementptr inbounds i8, i8* %23, i64 %idxprom7, !dbg !4671
  %24 = load i8, i8* %arrayidx8, align 1, !dbg !4671
  %conv = zext i8 %24 to i32, !dbg !4671
  store i32 %conv, i32* %bit_alloc_bits, align 4, !dbg !4672
  store i32 0, i32* %ch, align 4, !dbg !4673
  br label %for.cond9, !dbg !4675

for.cond9:                                        ; preds = %for.inc, %for.body
  %25 = load i32, i32* %ch, align 4, !dbg !4676
  %26 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4679
  %nb_channels10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %26, i32 0, i32 6, !dbg !4680
  %27 = load i32, i32* %nb_channels10, align 8, !dbg !4680
  %cmp11 = icmp slt i32 %25, %27, !dbg !4681
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !4682

for.body13:                                       ; preds = %for.cond9
  %28 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4683
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %28, i32 0, i32 14, !dbg !4684
  %29 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4685
  %call14 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 %29), !dbg !4686
  %conv15 = trunc i32 %call14 to i8, !dbg !4686
  %30 = load i32, i32* %i, align 4, !dbg !4687
  %idxprom16 = sext i32 %30 to i64, !dbg !4688
  %31 = load i32, i32* %ch, align 4, !dbg !4689
  %idxprom17 = sext i32 %31 to i64, !dbg !4688
  %arrayidx18 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom17, !dbg !4688
  %arrayidx19 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx18, i64 0, i64 %idxprom16, !dbg !4688
  store i8 %conv15, i8* %arrayidx19, align 1, !dbg !4690
  br label %for.inc, !dbg !4688

for.inc:                                          ; preds = %for.body13
  %32 = load i32, i32* %ch, align 4, !dbg !4691
  %inc = add nsw i32 %32, 1, !dbg !4691
  store i32 %inc, i32* %ch, align 4, !dbg !4691
  br label %for.cond9, !dbg !4693, !llvm.loop !4694

for.end:                                          ; preds = %for.cond9
  %33 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4696
  %shl = shl i32 1, %33, !dbg !4697
  %34 = load i32, i32* %j, align 4, !dbg !4698
  %add20 = add nsw i32 %34, %shl, !dbg !4698
  store i32 %add20, i32* %j, align 4, !dbg !4698
  br label %for.inc21, !dbg !4699

for.inc21:                                        ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !4700
  %inc22 = add nsw i32 %35, 1, !dbg !4700
  store i32 %inc22, i32* %i, align 4, !dbg !4700
  br label %for.cond, !dbg !4702, !llvm.loop !4703

for.end23:                                        ; preds = %for.cond
  %36 = load i32, i32* %bound, align 4, !dbg !4705
  store i32 %36, i32* %i, align 4, !dbg !4707
  br label %for.cond24, !dbg !4708

for.cond24:                                       ; preds = %for.inc43, %for.end23
  %37 = load i32, i32* %i, align 4, !dbg !4709
  %38 = load i32, i32* %sblimit, align 4, !dbg !4712
  %cmp25 = icmp slt i32 %37, %38, !dbg !4713
  br i1 %cmp25, label %for.body27, label %for.end45, !dbg !4714

for.body27:                                       ; preds = %for.cond24
  %39 = load i32, i32* %j, align 4, !dbg !4715
  %idxprom28 = sext i32 %39 to i64, !dbg !4717
  %40 = load i8*, i8** %alloc_table, align 8, !dbg !4717
  %arrayidx29 = getelementptr inbounds i8, i8* %40, i64 %idxprom28, !dbg !4717
  %41 = load i8, i8* %arrayidx29, align 1, !dbg !4717
  %conv30 = zext i8 %41 to i32, !dbg !4717
  store i32 %conv30, i32* %bit_alloc_bits, align 4, !dbg !4718
  %42 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4719
  %gb31 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %42, i32 0, i32 14, !dbg !4720
  %43 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4721
  %call32 = call i32 @get_bits(%struct.GetBitContext* %gb31, i32 %43), !dbg !4722
  store i32 %call32, i32* %v, align 4, !dbg !4723
  %44 = load i32, i32* %v, align 4, !dbg !4724
  %conv33 = trunc i32 %44 to i8, !dbg !4724
  %45 = load i32, i32* %i, align 4, !dbg !4725
  %idxprom34 = sext i32 %45 to i64, !dbg !4726
  %arrayidx35 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 0, !dbg !4726
  %arrayidx36 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx35, i64 0, i64 %idxprom34, !dbg !4726
  store i8 %conv33, i8* %arrayidx36, align 1, !dbg !4727
  %46 = load i32, i32* %v, align 4, !dbg !4728
  %conv37 = trunc i32 %46 to i8, !dbg !4728
  %47 = load i32, i32* %i, align 4, !dbg !4729
  %idxprom38 = sext i32 %47 to i64, !dbg !4730
  %arrayidx39 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 1, !dbg !4730
  %arrayidx40 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx39, i64 0, i64 %idxprom38, !dbg !4730
  store i8 %conv37, i8* %arrayidx40, align 1, !dbg !4731
  %48 = load i32, i32* %bit_alloc_bits, align 4, !dbg !4732
  %shl41 = shl i32 1, %48, !dbg !4733
  %49 = load i32, i32* %j, align 4, !dbg !4734
  %add42 = add nsw i32 %49, %shl41, !dbg !4734
  store i32 %add42, i32* %j, align 4, !dbg !4734
  br label %for.inc43, !dbg !4735

for.inc43:                                        ; preds = %for.body27
  %50 = load i32, i32* %i, align 4, !dbg !4736
  %inc44 = add nsw i32 %50, 1, !dbg !4736
  store i32 %inc44, i32* %i, align 4, !dbg !4736
  br label %for.cond24, !dbg !4738, !llvm.loop !4739

for.end45:                                        ; preds = %for.cond24
  store i32 0, i32* %i, align 4, !dbg !4741
  br label %for.cond46, !dbg !4743

for.cond46:                                       ; preds = %for.inc71, %for.end45
  %51 = load i32, i32* %i, align 4, !dbg !4744
  %52 = load i32, i32* %sblimit, align 4, !dbg !4747
  %cmp47 = icmp slt i32 %51, %52, !dbg !4748
  br i1 %cmp47, label %for.body49, label %for.end73, !dbg !4749

for.body49:                                       ; preds = %for.cond46
  store i32 0, i32* %ch, align 4, !dbg !4750
  br label %for.cond50, !dbg !4753

for.cond50:                                       ; preds = %for.inc68, %for.body49
  %53 = load i32, i32* %ch, align 4, !dbg !4754
  %54 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4757
  %nb_channels51 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %54, i32 0, i32 6, !dbg !4758
  %55 = load i32, i32* %nb_channels51, align 8, !dbg !4758
  %cmp52 = icmp slt i32 %53, %55, !dbg !4759
  br i1 %cmp52, label %for.body54, label %for.end70, !dbg !4760

for.body54:                                       ; preds = %for.cond50
  %56 = load i32, i32* %i, align 4, !dbg !4761
  %idxprom55 = sext i32 %56 to i64, !dbg !4764
  %57 = load i32, i32* %ch, align 4, !dbg !4765
  %idxprom56 = sext i32 %57 to i64, !dbg !4764
  %arrayidx57 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom56, !dbg !4764
  %arrayidx58 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx57, i64 0, i64 %idxprom55, !dbg !4764
  %58 = load i8, i8* %arrayidx58, align 1, !dbg !4764
  %tobool = icmp ne i8 %58, 0, !dbg !4764
  br i1 %tobool, label %if.then59, label %if.end67, !dbg !4766

if.then59:                                        ; preds = %for.body54
  %59 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4767
  %gb60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %59, i32 0, i32 14, !dbg !4768
  %call61 = call i32 @get_bits(%struct.GetBitContext* %gb60, i32 2), !dbg !4769
  %conv62 = trunc i32 %call61 to i8, !dbg !4769
  %60 = load i32, i32* %i, align 4, !dbg !4770
  %idxprom63 = sext i32 %60 to i64, !dbg !4771
  %61 = load i32, i32* %ch, align 4, !dbg !4772
  %idxprom64 = sext i32 %61 to i64, !dbg !4771
  %arrayidx65 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_code, i64 0, i64 %idxprom64, !dbg !4771
  %arrayidx66 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx65, i64 0, i64 %idxprom63, !dbg !4771
  store i8 %conv62, i8* %arrayidx66, align 1, !dbg !4773
  br label %if.end67, !dbg !4771

if.end67:                                         ; preds = %if.then59, %for.body54
  br label %for.inc68, !dbg !4774

for.inc68:                                        ; preds = %if.end67
  %62 = load i32, i32* %ch, align 4, !dbg !4775
  %inc69 = add nsw i32 %62, 1, !dbg !4775
  store i32 %inc69, i32* %ch, align 4, !dbg !4775
  br label %for.cond50, !dbg !4777, !llvm.loop !4778

for.end70:                                        ; preds = %for.cond50
  br label %for.inc71, !dbg !4780

for.inc71:                                        ; preds = %for.end70
  %63 = load i32, i32* %i, align 4, !dbg !4781
  %inc72 = add nsw i32 %63, 1, !dbg !4781
  store i32 %inc72, i32* %i, align 4, !dbg !4781
  br label %for.cond46, !dbg !4783, !llvm.loop !4784

for.end73:                                        ; preds = %for.cond46
  store i32 0, i32* %i, align 4, !dbg !4786
  br label %for.cond74, !dbg !4788

for.cond74:                                       ; preds = %for.inc145, %for.end73
  %64 = load i32, i32* %i, align 4, !dbg !4789
  %65 = load i32, i32* %sblimit, align 4, !dbg !4792
  %cmp75 = icmp slt i32 %64, %65, !dbg !4793
  br i1 %cmp75, label %for.body77, label %for.end147, !dbg !4794

for.body77:                                       ; preds = %for.cond74
  store i32 0, i32* %ch, align 4, !dbg !4795
  br label %for.cond78, !dbg !4798

for.cond78:                                       ; preds = %for.inc142, %for.body77
  %66 = load i32, i32* %ch, align 4, !dbg !4799
  %67 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4802
  %nb_channels79 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %67, i32 0, i32 6, !dbg !4803
  %68 = load i32, i32* %nb_channels79, align 8, !dbg !4803
  %cmp80 = icmp slt i32 %66, %68, !dbg !4804
  br i1 %cmp80, label %for.body82, label %for.end144, !dbg !4805

for.body82:                                       ; preds = %for.cond78
  %69 = load i32, i32* %i, align 4, !dbg !4806
  %idxprom83 = sext i32 %69 to i64, !dbg !4809
  %70 = load i32, i32* %ch, align 4, !dbg !4810
  %idxprom84 = sext i32 %70 to i64, !dbg !4809
  %arrayidx85 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom84, !dbg !4809
  %arrayidx86 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx85, i64 0, i64 %idxprom83, !dbg !4809
  %71 = load i8, i8* %arrayidx86, align 1, !dbg !4809
  %tobool87 = icmp ne i8 %71, 0, !dbg !4809
  br i1 %tobool87, label %if.then88, label %if.end141, !dbg !4811

if.then88:                                        ; preds = %for.body82
  %72 = load i32, i32* %i, align 4, !dbg !4812
  %idxprom89 = sext i32 %72 to i64, !dbg !4814
  %73 = load i32, i32* %ch, align 4, !dbg !4815
  %idxprom90 = sext i32 %73 to i64, !dbg !4814
  %arrayidx91 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 %idxprom90, !dbg !4814
  %arrayidx92 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx91, i64 0, i64 %idxprom89, !dbg !4814
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx92, i32 0, i32 0, !dbg !4814
  store i8* %arraydecay, i8** %sf, align 8, !dbg !4816
  %74 = load i32, i32* %i, align 4, !dbg !4817
  %idxprom93 = sext i32 %74 to i64, !dbg !4818
  %75 = load i32, i32* %ch, align 4, !dbg !4819
  %idxprom94 = sext i32 %75 to i64, !dbg !4818
  %arrayidx95 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %scale_code, i64 0, i64 %idxprom94, !dbg !4818
  %arrayidx96 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx95, i64 0, i64 %idxprom93, !dbg !4818
  %76 = load i8, i8* %arrayidx96, align 1, !dbg !4818
  %conv97 = zext i8 %76 to i32, !dbg !4818
  switch i32 %conv97, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb110
    i32 1, label %sw.bb119
    i32 3, label %sw.bb130
  ], !dbg !4820

sw.default:                                       ; preds = %if.then88
  br label %sw.bb, !dbg !4821

sw.bb:                                            ; preds = %if.then88, %sw.default
  %77 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4823
  %gb98 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %77, i32 0, i32 14, !dbg !4825
  %call99 = call i32 @get_bits(%struct.GetBitContext* %gb98, i32 6), !dbg !4826
  %conv100 = trunc i32 %call99 to i8, !dbg !4826
  %78 = load i8*, i8** %sf, align 8, !dbg !4827
  %arrayidx101 = getelementptr inbounds i8, i8* %78, i64 0, !dbg !4827
  store i8 %conv100, i8* %arrayidx101, align 1, !dbg !4828
  %79 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4829
  %gb102 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %79, i32 0, i32 14, !dbg !4830
  %call103 = call i32 @get_bits(%struct.GetBitContext* %gb102, i32 6), !dbg !4831
  %conv104 = trunc i32 %call103 to i8, !dbg !4831
  %80 = load i8*, i8** %sf, align 8, !dbg !4832
  %arrayidx105 = getelementptr inbounds i8, i8* %80, i64 1, !dbg !4832
  store i8 %conv104, i8* %arrayidx105, align 1, !dbg !4833
  %81 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4834
  %gb106 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %81, i32 0, i32 14, !dbg !4835
  %call107 = call i32 @get_bits(%struct.GetBitContext* %gb106, i32 6), !dbg !4836
  %conv108 = trunc i32 %call107 to i8, !dbg !4836
  %82 = load i8*, i8** %sf, align 8, !dbg !4837
  %arrayidx109 = getelementptr inbounds i8, i8* %82, i64 2, !dbg !4837
  store i8 %conv108, i8* %arrayidx109, align 1, !dbg !4838
  br label %sw.epilog, !dbg !4839

sw.bb110:                                         ; preds = %if.then88
  %83 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4840
  %gb111 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %83, i32 0, i32 14, !dbg !4841
  %call112 = call i32 @get_bits(%struct.GetBitContext* %gb111, i32 6), !dbg !4842
  %conv113 = trunc i32 %call112 to i8, !dbg !4842
  %84 = load i8*, i8** %sf, align 8, !dbg !4843
  %arrayidx114 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !4843
  store i8 %conv113, i8* %arrayidx114, align 1, !dbg !4844
  %85 = load i8*, i8** %sf, align 8, !dbg !4845
  %arrayidx115 = getelementptr inbounds i8, i8* %85, i64 0, !dbg !4845
  %86 = load i8, i8* %arrayidx115, align 1, !dbg !4845
  %87 = load i8*, i8** %sf, align 8, !dbg !4846
  %arrayidx116 = getelementptr inbounds i8, i8* %87, i64 1, !dbg !4846
  store i8 %86, i8* %arrayidx116, align 1, !dbg !4847
  %88 = load i8*, i8** %sf, align 8, !dbg !4848
  %arrayidx117 = getelementptr inbounds i8, i8* %88, i64 0, !dbg !4848
  %89 = load i8, i8* %arrayidx117, align 1, !dbg !4848
  %90 = load i8*, i8** %sf, align 8, !dbg !4849
  %arrayidx118 = getelementptr inbounds i8, i8* %90, i64 2, !dbg !4849
  store i8 %89, i8* %arrayidx118, align 1, !dbg !4850
  br label %sw.epilog, !dbg !4851

sw.bb119:                                         ; preds = %if.then88
  %91 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4852
  %gb120 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %91, i32 0, i32 14, !dbg !4853
  %call121 = call i32 @get_bits(%struct.GetBitContext* %gb120, i32 6), !dbg !4854
  %conv122 = trunc i32 %call121 to i8, !dbg !4854
  %92 = load i8*, i8** %sf, align 8, !dbg !4855
  %arrayidx123 = getelementptr inbounds i8, i8* %92, i64 0, !dbg !4855
  store i8 %conv122, i8* %arrayidx123, align 1, !dbg !4856
  %93 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4857
  %gb124 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %93, i32 0, i32 14, !dbg !4858
  %call125 = call i32 @get_bits(%struct.GetBitContext* %gb124, i32 6), !dbg !4859
  %conv126 = trunc i32 %call125 to i8, !dbg !4859
  %94 = load i8*, i8** %sf, align 8, !dbg !4860
  %arrayidx127 = getelementptr inbounds i8, i8* %94, i64 2, !dbg !4860
  store i8 %conv126, i8* %arrayidx127, align 1, !dbg !4861
  %95 = load i8*, i8** %sf, align 8, !dbg !4862
  %arrayidx128 = getelementptr inbounds i8, i8* %95, i64 0, !dbg !4862
  %96 = load i8, i8* %arrayidx128, align 1, !dbg !4862
  %97 = load i8*, i8** %sf, align 8, !dbg !4863
  %arrayidx129 = getelementptr inbounds i8, i8* %97, i64 1, !dbg !4863
  store i8 %96, i8* %arrayidx129, align 1, !dbg !4864
  br label %sw.epilog, !dbg !4865

sw.bb130:                                         ; preds = %if.then88
  %98 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4866
  %gb131 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %98, i32 0, i32 14, !dbg !4867
  %call132 = call i32 @get_bits(%struct.GetBitContext* %gb131, i32 6), !dbg !4868
  %conv133 = trunc i32 %call132 to i8, !dbg !4868
  %99 = load i8*, i8** %sf, align 8, !dbg !4869
  %arrayidx134 = getelementptr inbounds i8, i8* %99, i64 0, !dbg !4869
  store i8 %conv133, i8* %arrayidx134, align 1, !dbg !4870
  %100 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4871
  %gb135 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %100, i32 0, i32 14, !dbg !4872
  %call136 = call i32 @get_bits(%struct.GetBitContext* %gb135, i32 6), !dbg !4873
  %conv137 = trunc i32 %call136 to i8, !dbg !4873
  %101 = load i8*, i8** %sf, align 8, !dbg !4874
  %arrayidx138 = getelementptr inbounds i8, i8* %101, i64 2, !dbg !4874
  store i8 %conv137, i8* %arrayidx138, align 1, !dbg !4875
  %102 = load i8*, i8** %sf, align 8, !dbg !4876
  %arrayidx139 = getelementptr inbounds i8, i8* %102, i64 2, !dbg !4876
  %103 = load i8, i8* %arrayidx139, align 1, !dbg !4876
  %104 = load i8*, i8** %sf, align 8, !dbg !4877
  %arrayidx140 = getelementptr inbounds i8, i8* %104, i64 1, !dbg !4877
  store i8 %103, i8* %arrayidx140, align 1, !dbg !4878
  br label %sw.epilog, !dbg !4879

sw.epilog:                                        ; preds = %sw.bb130, %sw.bb119, %sw.bb110, %sw.bb
  br label %if.end141, !dbg !4880

if.end141:                                        ; preds = %sw.epilog, %for.body82
  br label %for.inc142, !dbg !4881

for.inc142:                                       ; preds = %if.end141
  %105 = load i32, i32* %ch, align 4, !dbg !4882
  %inc143 = add nsw i32 %105, 1, !dbg !4882
  store i32 %inc143, i32* %ch, align 4, !dbg !4882
  br label %for.cond78, !dbg !4884, !llvm.loop !4885

for.end144:                                       ; preds = %for.cond78
  br label %for.inc145, !dbg !4887

for.inc145:                                       ; preds = %for.end144
  %106 = load i32, i32* %i, align 4, !dbg !4888
  %inc146 = add nsw i32 %106, 1, !dbg !4888
  store i32 %inc146, i32* %i, align 4, !dbg !4888
  br label %for.cond74, !dbg !4890, !llvm.loop !4891

for.end147:                                       ; preds = %for.cond74
  store i32 0, i32* %k, align 4, !dbg !4893
  br label %for.cond148, !dbg !4895

for.cond148:                                      ; preds = %for.inc541, %for.end147
  %107 = load i32, i32* %k, align 4, !dbg !4896
  %cmp149 = icmp slt i32 %107, 3, !dbg !4899
  br i1 %cmp149, label %for.body151, label %for.end543, !dbg !4900

for.body151:                                      ; preds = %for.cond148
  store i32 0, i32* %l, align 4, !dbg !4901
  br label %for.cond152, !dbg !4904

for.cond152:                                      ; preds = %for.inc538, %for.body151
  %108 = load i32, i32* %l, align 4, !dbg !4905
  %cmp153 = icmp slt i32 %108, 12, !dbg !4908
  br i1 %cmp153, label %for.body155, label %for.end540, !dbg !4909

for.body155:                                      ; preds = %for.cond152
  store i32 0, i32* %j, align 4, !dbg !4910
  store i32 0, i32* %i, align 4, !dbg !4912
  br label %for.cond156, !dbg !4914

for.cond156:                                      ; preds = %for.inc294, %for.body155
  %109 = load i32, i32* %i, align 4, !dbg !4915
  %110 = load i32, i32* %bound, align 4, !dbg !4918
  %cmp157 = icmp slt i32 %109, %110, !dbg !4919
  br i1 %cmp157, label %for.body159, label %for.end296, !dbg !4920

for.body159:                                      ; preds = %for.cond156
  %111 = load i32, i32* %j, align 4, !dbg !4921
  %idxprom160 = sext i32 %111 to i64, !dbg !4923
  %112 = load i8*, i8** %alloc_table, align 8, !dbg !4923
  %arrayidx161 = getelementptr inbounds i8, i8* %112, i64 %idxprom160, !dbg !4923
  %113 = load i8, i8* %arrayidx161, align 1, !dbg !4923
  %conv162 = zext i8 %113 to i32, !dbg !4923
  store i32 %conv162, i32* %bit_alloc_bits, align 4, !dbg !4924
  store i32 0, i32* %ch, align 4, !dbg !4925
  br label %for.cond163, !dbg !4927

for.cond163:                                      ; preds = %for.inc289, %for.body159
  %114 = load i32, i32* %ch, align 4, !dbg !4928
  %115 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4931
  %nb_channels164 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %115, i32 0, i32 6, !dbg !4932
  %116 = load i32, i32* %nb_channels164, align 8, !dbg !4932
  %cmp165 = icmp slt i32 %114, %116, !dbg !4933
  br i1 %cmp165, label %for.body167, label %for.end291, !dbg !4934

for.body167:                                      ; preds = %for.cond163
  %117 = load i32, i32* %i, align 4, !dbg !4935
  %idxprom168 = sext i32 %117 to i64, !dbg !4937
  %118 = load i32, i32* %ch, align 4, !dbg !4938
  %idxprom169 = sext i32 %118 to i64, !dbg !4937
  %arrayidx170 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 %idxprom169, !dbg !4937
  %arrayidx171 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx170, i64 0, i64 %idxprom168, !dbg !4937
  %119 = load i8, i8* %arrayidx171, align 1, !dbg !4937
  %conv172 = zext i8 %119 to i32, !dbg !4937
  store i32 %conv172, i32* %b, align 4, !dbg !4939
  %120 = load i32, i32* %b, align 4, !dbg !4940
  %tobool173 = icmp ne i32 %120, 0, !dbg !4940
  br i1 %tobool173, label %if.then174, label %if.else257, !dbg !4942

if.then174:                                       ; preds = %for.body167
  %121 = load i32, i32* %k, align 4, !dbg !4943
  %idxprom175 = sext i32 %121 to i64, !dbg !4945
  %122 = load i32, i32* %i, align 4, !dbg !4946
  %idxprom176 = sext i32 %122 to i64, !dbg !4945
  %123 = load i32, i32* %ch, align 4, !dbg !4947
  %idxprom177 = sext i32 %123 to i64, !dbg !4945
  %arrayidx178 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 %idxprom177, !dbg !4945
  %arrayidx179 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx178, i64 0, i64 %idxprom176, !dbg !4945
  %arrayidx180 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx179, i64 0, i64 %idxprom175, !dbg !4945
  %124 = load i8, i8* %arrayidx180, align 1, !dbg !4945
  %conv181 = zext i8 %124 to i32, !dbg !4945
  store i32 %conv181, i32* %scale, align 4, !dbg !4948
  %125 = load i32, i32* %j, align 4, !dbg !4949
  %126 = load i32, i32* %b, align 4, !dbg !4950
  %add182 = add nsw i32 %125, %126, !dbg !4951
  %idxprom183 = sext i32 %add182 to i64, !dbg !4952
  %127 = load i8*, i8** %alloc_table, align 8, !dbg !4952
  %arrayidx184 = getelementptr inbounds i8, i8* %127, i64 %idxprom183, !dbg !4952
  %128 = load i8, i8* %arrayidx184, align 1, !dbg !4952
  %conv185 = zext i8 %128 to i32, !dbg !4952
  store i32 %conv185, i32* %qindex, align 4, !dbg !4953
  %129 = load i32, i32* %qindex, align 4, !dbg !4954
  %idxprom186 = sext i32 %129 to i64, !dbg !4955
  %arrayidx187 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom186, !dbg !4955
  %130 = load i32, i32* %arrayidx187, align 4, !dbg !4955
  store i32 %130, i32* %bits, align 4, !dbg !4956
  %131 = load i32, i32* %bits, align 4, !dbg !4957
  %cmp188 = icmp slt i32 %131, 0, !dbg !4959
  br i1 %cmp188, label %if.then190, label %if.else234, !dbg !4960

if.then190:                                       ; preds = %if.then174
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !4961, metadata !2019), !dbg !4963
  %132 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4964
  %gb191 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %132, i32 0, i32 14, !dbg !4965
  %133 = load i32, i32* %bits, align 4, !dbg !4966
  %sub = sub nsw i32 0, %133, !dbg !4967
  %call192 = call i32 @get_bits(%struct.GetBitContext* %gb191, i32 %sub), !dbg !4968
  store i32 %call192, i32* %v, align 4, !dbg !4969
  %134 = load i32, i32* %v, align 4, !dbg !4970
  %idxprom193 = sext i32 %134 to i64, !dbg !4971
  %135 = load i32, i32* %qindex, align 4, !dbg !4972
  %idxprom194 = sext i32 %135 to i64, !dbg !4971
  %arrayidx195 = getelementptr inbounds [4 x i16*], [4 x i16*]* @division_tabs, i64 0, i64 %idxprom194, !dbg !4971
  %136 = load i16*, i16** %arrayidx195, align 8, !dbg !4971
  %arrayidx196 = getelementptr inbounds i16, i16* %136, i64 %idxprom193, !dbg !4971
  %137 = load i16, i16* %arrayidx196, align 2, !dbg !4971
  %conv197 = sext i16 %137 to i32, !dbg !4971
  store i32 %conv197, i32* %v2, align 4, !dbg !4973
  %138 = load i32, i32* %qindex, align 4, !dbg !4974
  %idxprom198 = sext i32 %138 to i64, !dbg !4975
  %arrayidx199 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_steps, i64 0, i64 %idxprom198, !dbg !4975
  %139 = load i32, i32* %arrayidx199, align 4, !dbg !4975
  store i32 %139, i32* %steps, align 4, !dbg !4976
  %140 = load i32, i32* %steps, align 4, !dbg !4977
  %141 = load i32, i32* %v2, align 4, !dbg !4978
  %and = and i32 %141, 15, !dbg !4979
  %142 = load i32, i32* %scale, align 4, !dbg !4980
  %call200 = call i32 @l2_unscale_group(i32 %140, i32 %and, i32 %142), !dbg !4981
  %143 = load i32, i32* %i, align 4, !dbg !4982
  %idxprom201 = sext i32 %143 to i64, !dbg !4983
  %144 = load i32, i32* %k, align 4, !dbg !4984
  %mul202 = mul nsw i32 %144, 12, !dbg !4985
  %145 = load i32, i32* %l, align 4, !dbg !4986
  %add203 = add nsw i32 %mul202, %145, !dbg !4987
  %add204 = add nsw i32 %add203, 0, !dbg !4988
  %idxprom205 = sext i32 %add204 to i64, !dbg !4983
  %146 = load i32, i32* %ch, align 4, !dbg !4989
  %idxprom206 = sext i32 %146 to i64, !dbg !4983
  %147 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4983
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %147, i32 0, i32 20, !dbg !4990
  %arrayidx207 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples, i64 0, i64 %idxprom206, !dbg !4983
  %arrayidx208 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx207, i64 0, i64 %idxprom205, !dbg !4983
  %arrayidx209 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx208, i64 0, i64 %idxprom201, !dbg !4983
  store i32 %call200, i32* %arrayidx209, align 4, !dbg !4991
  %148 = load i32, i32* %steps, align 4, !dbg !4992
  %149 = load i32, i32* %v2, align 4, !dbg !4993
  %shr = ashr i32 %149, 4, !dbg !4994
  %and210 = and i32 %shr, 15, !dbg !4995
  %150 = load i32, i32* %scale, align 4, !dbg !4996
  %call211 = call i32 @l2_unscale_group(i32 %148, i32 %and210, i32 %150), !dbg !4997
  %151 = load i32, i32* %i, align 4, !dbg !4998
  %idxprom212 = sext i32 %151 to i64, !dbg !4999
  %152 = load i32, i32* %k, align 4, !dbg !5000
  %mul213 = mul nsw i32 %152, 12, !dbg !5001
  %153 = load i32, i32* %l, align 4, !dbg !5002
  %add214 = add nsw i32 %mul213, %153, !dbg !5003
  %add215 = add nsw i32 %add214, 1, !dbg !5004
  %idxprom216 = sext i32 %add215 to i64, !dbg !4999
  %154 = load i32, i32* %ch, align 4, !dbg !5005
  %idxprom217 = sext i32 %154 to i64, !dbg !4999
  %155 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !4999
  %sb_samples218 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %155, i32 0, i32 20, !dbg !5006
  %arrayidx219 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples218, i64 0, i64 %idxprom217, !dbg !4999
  %arrayidx220 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx219, i64 0, i64 %idxprom216, !dbg !4999
  %arrayidx221 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx220, i64 0, i64 %idxprom212, !dbg !4999
  store i32 %call211, i32* %arrayidx221, align 4, !dbg !5007
  %156 = load i32, i32* %steps, align 4, !dbg !5008
  %157 = load i32, i32* %v2, align 4, !dbg !5009
  %shr222 = ashr i32 %157, 8, !dbg !5010
  %158 = load i32, i32* %scale, align 4, !dbg !5011
  %call223 = call i32 @l2_unscale_group(i32 %156, i32 %shr222, i32 %158), !dbg !5012
  %159 = load i32, i32* %i, align 4, !dbg !5013
  %idxprom224 = sext i32 %159 to i64, !dbg !5014
  %160 = load i32, i32* %k, align 4, !dbg !5015
  %mul225 = mul nsw i32 %160, 12, !dbg !5016
  %161 = load i32, i32* %l, align 4, !dbg !5017
  %add226 = add nsw i32 %mul225, %161, !dbg !5018
  %add227 = add nsw i32 %add226, 2, !dbg !5019
  %idxprom228 = sext i32 %add227 to i64, !dbg !5014
  %162 = load i32, i32* %ch, align 4, !dbg !5020
  %idxprom229 = sext i32 %162 to i64, !dbg !5014
  %163 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5014
  %sb_samples230 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %163, i32 0, i32 20, !dbg !5021
  %arrayidx231 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples230, i64 0, i64 %idxprom229, !dbg !5014
  %arrayidx232 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx231, i64 0, i64 %idxprom228, !dbg !5014
  %arrayidx233 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx232, i64 0, i64 %idxprom224, !dbg !5014
  store i32 %call223, i32* %arrayidx233, align 4, !dbg !5022
  br label %if.end256, !dbg !5023

if.else234:                                       ; preds = %if.then174
  store i32 0, i32* %m, align 4, !dbg !5024
  br label %for.cond235, !dbg !5027

for.cond235:                                      ; preds = %for.inc253, %if.else234
  %164 = load i32, i32* %m, align 4, !dbg !5028
  %cmp236 = icmp slt i32 %164, 3, !dbg !5031
  br i1 %cmp236, label %for.body238, label %for.end255, !dbg !5032

for.body238:                                      ; preds = %for.cond235
  %165 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5033
  %gb239 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %165, i32 0, i32 14, !dbg !5035
  %166 = load i32, i32* %bits, align 4, !dbg !5036
  %call240 = call i32 @get_bits(%struct.GetBitContext* %gb239, i32 %166), !dbg !5037
  store i32 %call240, i32* %v, align 4, !dbg !5038
  %167 = load i32, i32* %bits, align 4, !dbg !5039
  %sub241 = sub nsw i32 %167, 1, !dbg !5040
  %168 = load i32, i32* %v, align 4, !dbg !5041
  %169 = load i32, i32* %scale, align 4, !dbg !5042
  %call242 = call i32 @l1_unscale(i32 %sub241, i32 %168, i32 %169), !dbg !5043
  store i32 %call242, i32* %v, align 4, !dbg !5044
  %170 = load i32, i32* %v, align 4, !dbg !5045
  %171 = load i32, i32* %i, align 4, !dbg !5046
  %idxprom243 = sext i32 %171 to i64, !dbg !5047
  %172 = load i32, i32* %k, align 4, !dbg !5048
  %mul244 = mul nsw i32 %172, 12, !dbg !5049
  %173 = load i32, i32* %l, align 4, !dbg !5050
  %add245 = add nsw i32 %mul244, %173, !dbg !5051
  %174 = load i32, i32* %m, align 4, !dbg !5052
  %add246 = add nsw i32 %add245, %174, !dbg !5053
  %idxprom247 = sext i32 %add246 to i64, !dbg !5047
  %175 = load i32, i32* %ch, align 4, !dbg !5054
  %idxprom248 = sext i32 %175 to i64, !dbg !5047
  %176 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5047
  %sb_samples249 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %176, i32 0, i32 20, !dbg !5055
  %arrayidx250 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples249, i64 0, i64 %idxprom248, !dbg !5047
  %arrayidx251 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx250, i64 0, i64 %idxprom247, !dbg !5047
  %arrayidx252 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx251, i64 0, i64 %idxprom243, !dbg !5047
  store i32 %170, i32* %arrayidx252, align 4, !dbg !5056
  br label %for.inc253, !dbg !5057

for.inc253:                                       ; preds = %for.body238
  %177 = load i32, i32* %m, align 4, !dbg !5058
  %inc254 = add nsw i32 %177, 1, !dbg !5058
  store i32 %inc254, i32* %m, align 4, !dbg !5058
  br label %for.cond235, !dbg !5060, !llvm.loop !5061

for.end255:                                       ; preds = %for.cond235
  br label %if.end256

if.end256:                                        ; preds = %for.end255, %if.then190
  br label %if.end288, !dbg !5063

if.else257:                                       ; preds = %for.body167
  %178 = load i32, i32* %i, align 4, !dbg !5064
  %idxprom258 = sext i32 %178 to i64, !dbg !5066
  %179 = load i32, i32* %k, align 4, !dbg !5067
  %mul259 = mul nsw i32 %179, 12, !dbg !5068
  %180 = load i32, i32* %l, align 4, !dbg !5069
  %add260 = add nsw i32 %mul259, %180, !dbg !5070
  %add261 = add nsw i32 %add260, 0, !dbg !5071
  %idxprom262 = sext i32 %add261 to i64, !dbg !5066
  %181 = load i32, i32* %ch, align 4, !dbg !5072
  %idxprom263 = sext i32 %181 to i64, !dbg !5066
  %182 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5066
  %sb_samples264 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %182, i32 0, i32 20, !dbg !5073
  %arrayidx265 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples264, i64 0, i64 %idxprom263, !dbg !5066
  %arrayidx266 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx265, i64 0, i64 %idxprom262, !dbg !5066
  %arrayidx267 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx266, i64 0, i64 %idxprom258, !dbg !5066
  store i32 0, i32* %arrayidx267, align 4, !dbg !5074
  %183 = load i32, i32* %i, align 4, !dbg !5075
  %idxprom268 = sext i32 %183 to i64, !dbg !5076
  %184 = load i32, i32* %k, align 4, !dbg !5077
  %mul269 = mul nsw i32 %184, 12, !dbg !5078
  %185 = load i32, i32* %l, align 4, !dbg !5079
  %add270 = add nsw i32 %mul269, %185, !dbg !5080
  %add271 = add nsw i32 %add270, 1, !dbg !5081
  %idxprom272 = sext i32 %add271 to i64, !dbg !5076
  %186 = load i32, i32* %ch, align 4, !dbg !5082
  %idxprom273 = sext i32 %186 to i64, !dbg !5076
  %187 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5076
  %sb_samples274 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %187, i32 0, i32 20, !dbg !5083
  %arrayidx275 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples274, i64 0, i64 %idxprom273, !dbg !5076
  %arrayidx276 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx275, i64 0, i64 %idxprom272, !dbg !5076
  %arrayidx277 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx276, i64 0, i64 %idxprom268, !dbg !5076
  store i32 0, i32* %arrayidx277, align 4, !dbg !5084
  %188 = load i32, i32* %i, align 4, !dbg !5085
  %idxprom278 = sext i32 %188 to i64, !dbg !5086
  %189 = load i32, i32* %k, align 4, !dbg !5087
  %mul279 = mul nsw i32 %189, 12, !dbg !5088
  %190 = load i32, i32* %l, align 4, !dbg !5089
  %add280 = add nsw i32 %mul279, %190, !dbg !5090
  %add281 = add nsw i32 %add280, 2, !dbg !5091
  %idxprom282 = sext i32 %add281 to i64, !dbg !5086
  %191 = load i32, i32* %ch, align 4, !dbg !5092
  %idxprom283 = sext i32 %191 to i64, !dbg !5086
  %192 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5086
  %sb_samples284 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %192, i32 0, i32 20, !dbg !5093
  %arrayidx285 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples284, i64 0, i64 %idxprom283, !dbg !5086
  %arrayidx286 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx285, i64 0, i64 %idxprom282, !dbg !5086
  %arrayidx287 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx286, i64 0, i64 %idxprom278, !dbg !5086
  store i32 0, i32* %arrayidx287, align 4, !dbg !5094
  br label %if.end288

if.end288:                                        ; preds = %if.else257, %if.end256
  br label %for.inc289, !dbg !5095

for.inc289:                                       ; preds = %if.end288
  %193 = load i32, i32* %ch, align 4, !dbg !5096
  %inc290 = add nsw i32 %193, 1, !dbg !5096
  store i32 %inc290, i32* %ch, align 4, !dbg !5096
  br label %for.cond163, !dbg !5098, !llvm.loop !5099

for.end291:                                       ; preds = %for.cond163
  %194 = load i32, i32* %bit_alloc_bits, align 4, !dbg !5101
  %shl292 = shl i32 1, %194, !dbg !5102
  %195 = load i32, i32* %j, align 4, !dbg !5103
  %add293 = add nsw i32 %195, %shl292, !dbg !5103
  store i32 %add293, i32* %j, align 4, !dbg !5103
  br label %for.inc294, !dbg !5104

for.inc294:                                       ; preds = %for.end291
  %196 = load i32, i32* %i, align 4, !dbg !5105
  %inc295 = add nsw i32 %196, 1, !dbg !5105
  store i32 %inc295, i32* %i, align 4, !dbg !5105
  br label %for.cond156, !dbg !5107, !llvm.loop !5108

for.end296:                                       ; preds = %for.cond156
  %197 = load i32, i32* %bound, align 4, !dbg !5110
  store i32 %197, i32* %i, align 4, !dbg !5112
  br label %for.cond297, !dbg !5113

for.cond297:                                      ; preds = %for.inc490, %for.end296
  %198 = load i32, i32* %i, align 4, !dbg !5114
  %199 = load i32, i32* %sblimit, align 4, !dbg !5117
  %cmp298 = icmp slt i32 %198, %199, !dbg !5118
  br i1 %cmp298, label %for.body300, label %for.end492, !dbg !5119

for.body300:                                      ; preds = %for.cond297
  %200 = load i32, i32* %j, align 4, !dbg !5120
  %idxprom301 = sext i32 %200 to i64, !dbg !5122
  %201 = load i8*, i8** %alloc_table, align 8, !dbg !5122
  %arrayidx302 = getelementptr inbounds i8, i8* %201, i64 %idxprom301, !dbg !5122
  %202 = load i8, i8* %arrayidx302, align 1, !dbg !5122
  %conv303 = zext i8 %202 to i32, !dbg !5122
  store i32 %conv303, i32* %bit_alloc_bits, align 4, !dbg !5123
  %203 = load i32, i32* %i, align 4, !dbg !5124
  %idxprom304 = sext i32 %203 to i64, !dbg !5125
  %arrayidx305 = getelementptr inbounds [2 x [32 x i8]], [2 x [32 x i8]]* %bit_alloc, i64 0, i64 0, !dbg !5125
  %arrayidx306 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx305, i64 0, i64 %idxprom304, !dbg !5125
  %204 = load i8, i8* %arrayidx306, align 1, !dbg !5125
  %conv307 = zext i8 %204 to i32, !dbg !5125
  store i32 %conv307, i32* %b, align 4, !dbg !5126
  %205 = load i32, i32* %b, align 4, !dbg !5127
  %tobool308 = icmp ne i32 %205, 0, !dbg !5127
  br i1 %tobool308, label %if.then309, label %if.else432, !dbg !5129

if.then309:                                       ; preds = %for.body300
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !5130, metadata !2019), !dbg !5132
  call void @llvm.dbg.declare(metadata i32* %scale0, metadata !5133, metadata !2019), !dbg !5134
  call void @llvm.dbg.declare(metadata i32* %scale1, metadata !5135, metadata !2019), !dbg !5136
  %206 = load i32, i32* %k, align 4, !dbg !5137
  %idxprom310 = sext i32 %206 to i64, !dbg !5138
  %207 = load i32, i32* %i, align 4, !dbg !5139
  %idxprom311 = sext i32 %207 to i64, !dbg !5138
  %arrayidx312 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 0, !dbg !5138
  %arrayidx313 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx312, i64 0, i64 %idxprom311, !dbg !5138
  %arrayidx314 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx313, i64 0, i64 %idxprom310, !dbg !5138
  %208 = load i8, i8* %arrayidx314, align 1, !dbg !5138
  %conv315 = zext i8 %208 to i32, !dbg !5138
  store i32 %conv315, i32* %scale0, align 4, !dbg !5140
  %209 = load i32, i32* %k, align 4, !dbg !5141
  %idxprom316 = sext i32 %209 to i64, !dbg !5142
  %210 = load i32, i32* %i, align 4, !dbg !5143
  %idxprom317 = sext i32 %210 to i64, !dbg !5142
  %arrayidx318 = getelementptr inbounds [2 x [32 x [3 x i8]]], [2 x [32 x [3 x i8]]]* %scale_factors, i64 0, i64 1, !dbg !5142
  %arrayidx319 = getelementptr inbounds [32 x [3 x i8]], [32 x [3 x i8]]* %arrayidx318, i64 0, i64 %idxprom317, !dbg !5142
  %arrayidx320 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx319, i64 0, i64 %idxprom316, !dbg !5142
  %211 = load i8, i8* %arrayidx320, align 1, !dbg !5142
  %conv321 = zext i8 %211 to i32, !dbg !5142
  store i32 %conv321, i32* %scale1, align 4, !dbg !5144
  %212 = load i32, i32* %j, align 4, !dbg !5145
  %213 = load i32, i32* %b, align 4, !dbg !5146
  %add322 = add nsw i32 %212, %213, !dbg !5147
  %idxprom323 = sext i32 %add322 to i64, !dbg !5148
  %214 = load i8*, i8** %alloc_table, align 8, !dbg !5148
  %arrayidx324 = getelementptr inbounds i8, i8* %214, i64 %idxprom323, !dbg !5148
  %215 = load i8, i8* %arrayidx324, align 1, !dbg !5148
  %conv325 = zext i8 %215 to i32, !dbg !5148
  store i32 %conv325, i32* %qindex, align 4, !dbg !5149
  %216 = load i32, i32* %qindex, align 4, !dbg !5150
  %idxprom326 = sext i32 %216 to i64, !dbg !5151
  %arrayidx327 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_bits, i64 0, i64 %idxprom326, !dbg !5151
  %217 = load i32, i32* %arrayidx327, align 4, !dbg !5151
  store i32 %217, i32* %bits, align 4, !dbg !5152
  %218 = load i32, i32* %bits, align 4, !dbg !5153
  %cmp328 = icmp slt i32 %218, 0, !dbg !5155
  br i1 %cmp328, label %if.then330, label %if.else399, !dbg !5156

if.then330:                                       ; preds = %if.then309
  %219 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5157
  %gb331 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %219, i32 0, i32 14, !dbg !5159
  %220 = load i32, i32* %bits, align 4, !dbg !5160
  %sub332 = sub nsw i32 0, %220, !dbg !5161
  %call333 = call i32 @get_bits(%struct.GetBitContext* %gb331, i32 %sub332), !dbg !5162
  store i32 %call333, i32* %v, align 4, !dbg !5163
  %221 = load i32, i32* %qindex, align 4, !dbg !5164
  %idxprom334 = sext i32 %221 to i64, !dbg !5165
  %arrayidx335 = getelementptr inbounds [17 x i32], [17 x i32]* @ff_mpa_quant_steps, i64 0, i64 %idxprom334, !dbg !5165
  %222 = load i32, i32* %arrayidx335, align 4, !dbg !5165
  store i32 %222, i32* %steps, align 4, !dbg !5166
  %223 = load i32, i32* %v, align 4, !dbg !5167
  %224 = load i32, i32* %steps, align 4, !dbg !5168
  %rem = srem i32 %223, %224, !dbg !5169
  store i32 %rem, i32* %mant, align 4, !dbg !5170
  %225 = load i32, i32* %v, align 4, !dbg !5171
  %226 = load i32, i32* %steps, align 4, !dbg !5172
  %div336 = sdiv i32 %225, %226, !dbg !5173
  store i32 %div336, i32* %v, align 4, !dbg !5174
  %227 = load i32, i32* %steps, align 4, !dbg !5175
  %228 = load i32, i32* %mant, align 4, !dbg !5176
  %229 = load i32, i32* %scale0, align 4, !dbg !5177
  %call337 = call i32 @l2_unscale_group(i32 %227, i32 %228, i32 %229), !dbg !5178
  %230 = load i32, i32* %i, align 4, !dbg !5179
  %idxprom338 = sext i32 %230 to i64, !dbg !5180
  %231 = load i32, i32* %k, align 4, !dbg !5181
  %mul339 = mul nsw i32 %231, 12, !dbg !5182
  %232 = load i32, i32* %l, align 4, !dbg !5183
  %add340 = add nsw i32 %mul339, %232, !dbg !5184
  %add341 = add nsw i32 %add340, 0, !dbg !5185
  %idxprom342 = sext i32 %add341 to i64, !dbg !5180
  %233 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5180
  %sb_samples343 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %233, i32 0, i32 20, !dbg !5186
  %arrayidx344 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples343, i64 0, i64 0, !dbg !5180
  %arrayidx345 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx344, i64 0, i64 %idxprom342, !dbg !5180
  %arrayidx346 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx345, i64 0, i64 %idxprom338, !dbg !5180
  store i32 %call337, i32* %arrayidx346, align 4, !dbg !5187
  %234 = load i32, i32* %steps, align 4, !dbg !5188
  %235 = load i32, i32* %mant, align 4, !dbg !5189
  %236 = load i32, i32* %scale1, align 4, !dbg !5190
  %call347 = call i32 @l2_unscale_group(i32 %234, i32 %235, i32 %236), !dbg !5191
  %237 = load i32, i32* %i, align 4, !dbg !5192
  %idxprom348 = sext i32 %237 to i64, !dbg !5193
  %238 = load i32, i32* %k, align 4, !dbg !5194
  %mul349 = mul nsw i32 %238, 12, !dbg !5195
  %239 = load i32, i32* %l, align 4, !dbg !5196
  %add350 = add nsw i32 %mul349, %239, !dbg !5197
  %add351 = add nsw i32 %add350, 0, !dbg !5198
  %idxprom352 = sext i32 %add351 to i64, !dbg !5193
  %240 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5193
  %sb_samples353 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %240, i32 0, i32 20, !dbg !5199
  %arrayidx354 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples353, i64 0, i64 1, !dbg !5193
  %arrayidx355 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx354, i64 0, i64 %idxprom352, !dbg !5193
  %arrayidx356 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx355, i64 0, i64 %idxprom348, !dbg !5193
  store i32 %call347, i32* %arrayidx356, align 4, !dbg !5200
  %241 = load i32, i32* %v, align 4, !dbg !5201
  %242 = load i32, i32* %steps, align 4, !dbg !5202
  %rem357 = srem i32 %241, %242, !dbg !5203
  store i32 %rem357, i32* %mant, align 4, !dbg !5204
  %243 = load i32, i32* %v, align 4, !dbg !5205
  %244 = load i32, i32* %steps, align 4, !dbg !5206
  %div358 = sdiv i32 %243, %244, !dbg !5207
  store i32 %div358, i32* %v, align 4, !dbg !5208
  %245 = load i32, i32* %steps, align 4, !dbg !5209
  %246 = load i32, i32* %mant, align 4, !dbg !5210
  %247 = load i32, i32* %scale0, align 4, !dbg !5211
  %call359 = call i32 @l2_unscale_group(i32 %245, i32 %246, i32 %247), !dbg !5212
  %248 = load i32, i32* %i, align 4, !dbg !5213
  %idxprom360 = sext i32 %248 to i64, !dbg !5214
  %249 = load i32, i32* %k, align 4, !dbg !5215
  %mul361 = mul nsw i32 %249, 12, !dbg !5216
  %250 = load i32, i32* %l, align 4, !dbg !5217
  %add362 = add nsw i32 %mul361, %250, !dbg !5218
  %add363 = add nsw i32 %add362, 1, !dbg !5219
  %idxprom364 = sext i32 %add363 to i64, !dbg !5214
  %251 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5214
  %sb_samples365 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %251, i32 0, i32 20, !dbg !5220
  %arrayidx366 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples365, i64 0, i64 0, !dbg !5214
  %arrayidx367 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx366, i64 0, i64 %idxprom364, !dbg !5214
  %arrayidx368 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx367, i64 0, i64 %idxprom360, !dbg !5214
  store i32 %call359, i32* %arrayidx368, align 4, !dbg !5221
  %252 = load i32, i32* %steps, align 4, !dbg !5222
  %253 = load i32, i32* %mant, align 4, !dbg !5223
  %254 = load i32, i32* %scale1, align 4, !dbg !5224
  %call369 = call i32 @l2_unscale_group(i32 %252, i32 %253, i32 %254), !dbg !5225
  %255 = load i32, i32* %i, align 4, !dbg !5226
  %idxprom370 = sext i32 %255 to i64, !dbg !5227
  %256 = load i32, i32* %k, align 4, !dbg !5228
  %mul371 = mul nsw i32 %256, 12, !dbg !5229
  %257 = load i32, i32* %l, align 4, !dbg !5230
  %add372 = add nsw i32 %mul371, %257, !dbg !5231
  %add373 = add nsw i32 %add372, 1, !dbg !5232
  %idxprom374 = sext i32 %add373 to i64, !dbg !5227
  %258 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5227
  %sb_samples375 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %258, i32 0, i32 20, !dbg !5233
  %arrayidx376 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples375, i64 0, i64 1, !dbg !5227
  %arrayidx377 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx376, i64 0, i64 %idxprom374, !dbg !5227
  %arrayidx378 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx377, i64 0, i64 %idxprom370, !dbg !5227
  store i32 %call369, i32* %arrayidx378, align 4, !dbg !5234
  %259 = load i32, i32* %steps, align 4, !dbg !5235
  %260 = load i32, i32* %v, align 4, !dbg !5236
  %261 = load i32, i32* %scale0, align 4, !dbg !5237
  %call379 = call i32 @l2_unscale_group(i32 %259, i32 %260, i32 %261), !dbg !5238
  %262 = load i32, i32* %i, align 4, !dbg !5239
  %idxprom380 = sext i32 %262 to i64, !dbg !5240
  %263 = load i32, i32* %k, align 4, !dbg !5241
  %mul381 = mul nsw i32 %263, 12, !dbg !5242
  %264 = load i32, i32* %l, align 4, !dbg !5243
  %add382 = add nsw i32 %mul381, %264, !dbg !5244
  %add383 = add nsw i32 %add382, 2, !dbg !5245
  %idxprom384 = sext i32 %add383 to i64, !dbg !5240
  %265 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5240
  %sb_samples385 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %265, i32 0, i32 20, !dbg !5246
  %arrayidx386 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples385, i64 0, i64 0, !dbg !5240
  %arrayidx387 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx386, i64 0, i64 %idxprom384, !dbg !5240
  %arrayidx388 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx387, i64 0, i64 %idxprom380, !dbg !5240
  store i32 %call379, i32* %arrayidx388, align 4, !dbg !5247
  %266 = load i32, i32* %steps, align 4, !dbg !5248
  %267 = load i32, i32* %v, align 4, !dbg !5249
  %268 = load i32, i32* %scale1, align 4, !dbg !5250
  %call389 = call i32 @l2_unscale_group(i32 %266, i32 %267, i32 %268), !dbg !5251
  %269 = load i32, i32* %i, align 4, !dbg !5252
  %idxprom390 = sext i32 %269 to i64, !dbg !5253
  %270 = load i32, i32* %k, align 4, !dbg !5254
  %mul391 = mul nsw i32 %270, 12, !dbg !5255
  %271 = load i32, i32* %l, align 4, !dbg !5256
  %add392 = add nsw i32 %mul391, %271, !dbg !5257
  %add393 = add nsw i32 %add392, 2, !dbg !5258
  %idxprom394 = sext i32 %add393 to i64, !dbg !5253
  %272 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5253
  %sb_samples395 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %272, i32 0, i32 20, !dbg !5259
  %arrayidx396 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples395, i64 0, i64 1, !dbg !5253
  %arrayidx397 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx396, i64 0, i64 %idxprom394, !dbg !5253
  %arrayidx398 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx397, i64 0, i64 %idxprom390, !dbg !5253
  store i32 %call389, i32* %arrayidx398, align 4, !dbg !5260
  br label %if.end431, !dbg !5261

if.else399:                                       ; preds = %if.then309
  store i32 0, i32* %m, align 4, !dbg !5262
  br label %for.cond400, !dbg !5265

for.cond400:                                      ; preds = %for.inc428, %if.else399
  %273 = load i32, i32* %m, align 4, !dbg !5266
  %cmp401 = icmp slt i32 %273, 3, !dbg !5269
  br i1 %cmp401, label %for.body403, label %for.end430, !dbg !5270

for.body403:                                      ; preds = %for.cond400
  %274 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5271
  %gb404 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %274, i32 0, i32 14, !dbg !5273
  %275 = load i32, i32* %bits, align 4, !dbg !5274
  %call405 = call i32 @get_bits(%struct.GetBitContext* %gb404, i32 %275), !dbg !5275
  store i32 %call405, i32* %mant, align 4, !dbg !5276
  %276 = load i32, i32* %bits, align 4, !dbg !5277
  %sub406 = sub nsw i32 %276, 1, !dbg !5278
  %277 = load i32, i32* %mant, align 4, !dbg !5279
  %278 = load i32, i32* %scale0, align 4, !dbg !5280
  %call407 = call i32 @l1_unscale(i32 %sub406, i32 %277, i32 %278), !dbg !5281
  %279 = load i32, i32* %i, align 4, !dbg !5282
  %idxprom408 = sext i32 %279 to i64, !dbg !5283
  %280 = load i32, i32* %k, align 4, !dbg !5284
  %mul409 = mul nsw i32 %280, 12, !dbg !5285
  %281 = load i32, i32* %l, align 4, !dbg !5286
  %add410 = add nsw i32 %mul409, %281, !dbg !5287
  %282 = load i32, i32* %m, align 4, !dbg !5288
  %add411 = add nsw i32 %add410, %282, !dbg !5289
  %idxprom412 = sext i32 %add411 to i64, !dbg !5283
  %283 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5283
  %sb_samples413 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %283, i32 0, i32 20, !dbg !5290
  %arrayidx414 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples413, i64 0, i64 0, !dbg !5283
  %arrayidx415 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx414, i64 0, i64 %idxprom412, !dbg !5283
  %arrayidx416 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx415, i64 0, i64 %idxprom408, !dbg !5283
  store i32 %call407, i32* %arrayidx416, align 4, !dbg !5291
  %284 = load i32, i32* %bits, align 4, !dbg !5292
  %sub417 = sub nsw i32 %284, 1, !dbg !5293
  %285 = load i32, i32* %mant, align 4, !dbg !5294
  %286 = load i32, i32* %scale1, align 4, !dbg !5295
  %call418 = call i32 @l1_unscale(i32 %sub417, i32 %285, i32 %286), !dbg !5296
  %287 = load i32, i32* %i, align 4, !dbg !5297
  %idxprom419 = sext i32 %287 to i64, !dbg !5298
  %288 = load i32, i32* %k, align 4, !dbg !5299
  %mul420 = mul nsw i32 %288, 12, !dbg !5300
  %289 = load i32, i32* %l, align 4, !dbg !5301
  %add421 = add nsw i32 %mul420, %289, !dbg !5302
  %290 = load i32, i32* %m, align 4, !dbg !5303
  %add422 = add nsw i32 %add421, %290, !dbg !5304
  %idxprom423 = sext i32 %add422 to i64, !dbg !5298
  %291 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5298
  %sb_samples424 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %291, i32 0, i32 20, !dbg !5305
  %arrayidx425 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples424, i64 0, i64 1, !dbg !5298
  %arrayidx426 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx425, i64 0, i64 %idxprom423, !dbg !5298
  %arrayidx427 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx426, i64 0, i64 %idxprom419, !dbg !5298
  store i32 %call418, i32* %arrayidx427, align 4, !dbg !5306
  br label %for.inc428, !dbg !5307

for.inc428:                                       ; preds = %for.body403
  %292 = load i32, i32* %m, align 4, !dbg !5308
  %inc429 = add nsw i32 %292, 1, !dbg !5308
  store i32 %inc429, i32* %m, align 4, !dbg !5308
  br label %for.cond400, !dbg !5310, !llvm.loop !5311

for.end430:                                       ; preds = %for.cond400
  br label %if.end431

if.end431:                                        ; preds = %for.end430, %if.then330
  br label %if.end487, !dbg !5313

if.else432:                                       ; preds = %for.body300
  %293 = load i32, i32* %i, align 4, !dbg !5314
  %idxprom433 = sext i32 %293 to i64, !dbg !5316
  %294 = load i32, i32* %k, align 4, !dbg !5317
  %mul434 = mul nsw i32 %294, 12, !dbg !5318
  %295 = load i32, i32* %l, align 4, !dbg !5319
  %add435 = add nsw i32 %mul434, %295, !dbg !5320
  %add436 = add nsw i32 %add435, 0, !dbg !5321
  %idxprom437 = sext i32 %add436 to i64, !dbg !5316
  %296 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5316
  %sb_samples438 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %296, i32 0, i32 20, !dbg !5322
  %arrayidx439 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples438, i64 0, i64 0, !dbg !5316
  %arrayidx440 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx439, i64 0, i64 %idxprom437, !dbg !5316
  %arrayidx441 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx440, i64 0, i64 %idxprom433, !dbg !5316
  store i32 0, i32* %arrayidx441, align 4, !dbg !5323
  %297 = load i32, i32* %i, align 4, !dbg !5324
  %idxprom442 = sext i32 %297 to i64, !dbg !5325
  %298 = load i32, i32* %k, align 4, !dbg !5326
  %mul443 = mul nsw i32 %298, 12, !dbg !5327
  %299 = load i32, i32* %l, align 4, !dbg !5328
  %add444 = add nsw i32 %mul443, %299, !dbg !5329
  %add445 = add nsw i32 %add444, 1, !dbg !5330
  %idxprom446 = sext i32 %add445 to i64, !dbg !5325
  %300 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5325
  %sb_samples447 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %300, i32 0, i32 20, !dbg !5331
  %arrayidx448 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples447, i64 0, i64 0, !dbg !5325
  %arrayidx449 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx448, i64 0, i64 %idxprom446, !dbg !5325
  %arrayidx450 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx449, i64 0, i64 %idxprom442, !dbg !5325
  store i32 0, i32* %arrayidx450, align 4, !dbg !5332
  %301 = load i32, i32* %i, align 4, !dbg !5333
  %idxprom451 = sext i32 %301 to i64, !dbg !5334
  %302 = load i32, i32* %k, align 4, !dbg !5335
  %mul452 = mul nsw i32 %302, 12, !dbg !5336
  %303 = load i32, i32* %l, align 4, !dbg !5337
  %add453 = add nsw i32 %mul452, %303, !dbg !5338
  %add454 = add nsw i32 %add453, 2, !dbg !5339
  %idxprom455 = sext i32 %add454 to i64, !dbg !5334
  %304 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5334
  %sb_samples456 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %304, i32 0, i32 20, !dbg !5340
  %arrayidx457 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples456, i64 0, i64 0, !dbg !5334
  %arrayidx458 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx457, i64 0, i64 %idxprom455, !dbg !5334
  %arrayidx459 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx458, i64 0, i64 %idxprom451, !dbg !5334
  store i32 0, i32* %arrayidx459, align 4, !dbg !5341
  %305 = load i32, i32* %i, align 4, !dbg !5342
  %idxprom460 = sext i32 %305 to i64, !dbg !5343
  %306 = load i32, i32* %k, align 4, !dbg !5344
  %mul461 = mul nsw i32 %306, 12, !dbg !5345
  %307 = load i32, i32* %l, align 4, !dbg !5346
  %add462 = add nsw i32 %mul461, %307, !dbg !5347
  %add463 = add nsw i32 %add462, 0, !dbg !5348
  %idxprom464 = sext i32 %add463 to i64, !dbg !5343
  %308 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5343
  %sb_samples465 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %308, i32 0, i32 20, !dbg !5349
  %arrayidx466 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples465, i64 0, i64 1, !dbg !5343
  %arrayidx467 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx466, i64 0, i64 %idxprom464, !dbg !5343
  %arrayidx468 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx467, i64 0, i64 %idxprom460, !dbg !5343
  store i32 0, i32* %arrayidx468, align 4, !dbg !5350
  %309 = load i32, i32* %i, align 4, !dbg !5351
  %idxprom469 = sext i32 %309 to i64, !dbg !5352
  %310 = load i32, i32* %k, align 4, !dbg !5353
  %mul470 = mul nsw i32 %310, 12, !dbg !5354
  %311 = load i32, i32* %l, align 4, !dbg !5355
  %add471 = add nsw i32 %mul470, %311, !dbg !5356
  %add472 = add nsw i32 %add471, 1, !dbg !5357
  %idxprom473 = sext i32 %add472 to i64, !dbg !5352
  %312 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5352
  %sb_samples474 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %312, i32 0, i32 20, !dbg !5358
  %arrayidx475 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples474, i64 0, i64 1, !dbg !5352
  %arrayidx476 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx475, i64 0, i64 %idxprom473, !dbg !5352
  %arrayidx477 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx476, i64 0, i64 %idxprom469, !dbg !5352
  store i32 0, i32* %arrayidx477, align 4, !dbg !5359
  %313 = load i32, i32* %i, align 4, !dbg !5360
  %idxprom478 = sext i32 %313 to i64, !dbg !5361
  %314 = load i32, i32* %k, align 4, !dbg !5362
  %mul479 = mul nsw i32 %314, 12, !dbg !5363
  %315 = load i32, i32* %l, align 4, !dbg !5364
  %add480 = add nsw i32 %mul479, %315, !dbg !5365
  %add481 = add nsw i32 %add480, 2, !dbg !5366
  %idxprom482 = sext i32 %add481 to i64, !dbg !5361
  %316 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5361
  %sb_samples483 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %316, i32 0, i32 20, !dbg !5367
  %arrayidx484 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples483, i64 0, i64 1, !dbg !5361
  %arrayidx485 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx484, i64 0, i64 %idxprom482, !dbg !5361
  %arrayidx486 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx485, i64 0, i64 %idxprom478, !dbg !5361
  store i32 0, i32* %arrayidx486, align 4, !dbg !5368
  br label %if.end487

if.end487:                                        ; preds = %if.else432, %if.end431
  %317 = load i32, i32* %bit_alloc_bits, align 4, !dbg !5369
  %shl488 = shl i32 1, %317, !dbg !5370
  %318 = load i32, i32* %j, align 4, !dbg !5371
  %add489 = add nsw i32 %318, %shl488, !dbg !5371
  store i32 %add489, i32* %j, align 4, !dbg !5371
  br label %for.inc490, !dbg !5372

for.inc490:                                       ; preds = %if.end487
  %319 = load i32, i32* %i, align 4, !dbg !5373
  %inc491 = add nsw i32 %319, 1, !dbg !5373
  store i32 %inc491, i32* %i, align 4, !dbg !5373
  br label %for.cond297, !dbg !5375, !llvm.loop !5376

for.end492:                                       ; preds = %for.cond297
  %320 = load i32, i32* %sblimit, align 4, !dbg !5378
  store i32 %320, i32* %i, align 4, !dbg !5380
  br label %for.cond493, !dbg !5381

for.cond493:                                      ; preds = %for.inc535, %for.end492
  %321 = load i32, i32* %i, align 4, !dbg !5382
  %cmp494 = icmp slt i32 %321, 32, !dbg !5385
  br i1 %cmp494, label %for.body496, label %for.end537, !dbg !5386

for.body496:                                      ; preds = %for.cond493
  store i32 0, i32* %ch, align 4, !dbg !5387
  br label %for.cond497, !dbg !5390

for.cond497:                                      ; preds = %for.inc532, %for.body496
  %322 = load i32, i32* %ch, align 4, !dbg !5391
  %323 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5394
  %nb_channels498 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %323, i32 0, i32 6, !dbg !5395
  %324 = load i32, i32* %nb_channels498, align 8, !dbg !5395
  %cmp499 = icmp slt i32 %322, %324, !dbg !5396
  br i1 %cmp499, label %for.body501, label %for.end534, !dbg !5397

for.body501:                                      ; preds = %for.cond497
  %325 = load i32, i32* %i, align 4, !dbg !5398
  %idxprom502 = sext i32 %325 to i64, !dbg !5400
  %326 = load i32, i32* %k, align 4, !dbg !5401
  %mul503 = mul nsw i32 %326, 12, !dbg !5402
  %327 = load i32, i32* %l, align 4, !dbg !5403
  %add504 = add nsw i32 %mul503, %327, !dbg !5404
  %add505 = add nsw i32 %add504, 0, !dbg !5405
  %idxprom506 = sext i32 %add505 to i64, !dbg !5400
  %328 = load i32, i32* %ch, align 4, !dbg !5406
  %idxprom507 = sext i32 %328 to i64, !dbg !5400
  %329 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5400
  %sb_samples508 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %329, i32 0, i32 20, !dbg !5407
  %arrayidx509 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples508, i64 0, i64 %idxprom507, !dbg !5400
  %arrayidx510 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx509, i64 0, i64 %idxprom506, !dbg !5400
  %arrayidx511 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx510, i64 0, i64 %idxprom502, !dbg !5400
  store i32 0, i32* %arrayidx511, align 4, !dbg !5408
  %330 = load i32, i32* %i, align 4, !dbg !5409
  %idxprom512 = sext i32 %330 to i64, !dbg !5410
  %331 = load i32, i32* %k, align 4, !dbg !5411
  %mul513 = mul nsw i32 %331, 12, !dbg !5412
  %332 = load i32, i32* %l, align 4, !dbg !5413
  %add514 = add nsw i32 %mul513, %332, !dbg !5414
  %add515 = add nsw i32 %add514, 1, !dbg !5415
  %idxprom516 = sext i32 %add515 to i64, !dbg !5410
  %333 = load i32, i32* %ch, align 4, !dbg !5416
  %idxprom517 = sext i32 %333 to i64, !dbg !5410
  %334 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5410
  %sb_samples518 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %334, i32 0, i32 20, !dbg !5417
  %arrayidx519 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples518, i64 0, i64 %idxprom517, !dbg !5410
  %arrayidx520 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx519, i64 0, i64 %idxprom516, !dbg !5410
  %arrayidx521 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx520, i64 0, i64 %idxprom512, !dbg !5410
  store i32 0, i32* %arrayidx521, align 4, !dbg !5418
  %335 = load i32, i32* %i, align 4, !dbg !5419
  %idxprom522 = sext i32 %335 to i64, !dbg !5420
  %336 = load i32, i32* %k, align 4, !dbg !5421
  %mul523 = mul nsw i32 %336, 12, !dbg !5422
  %337 = load i32, i32* %l, align 4, !dbg !5423
  %add524 = add nsw i32 %mul523, %337, !dbg !5424
  %add525 = add nsw i32 %add524, 2, !dbg !5425
  %idxprom526 = sext i32 %add525 to i64, !dbg !5420
  %338 = load i32, i32* %ch, align 4, !dbg !5426
  %idxprom527 = sext i32 %338 to i64, !dbg !5420
  %339 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5420
  %sb_samples528 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %339, i32 0, i32 20, !dbg !5427
  %arrayidx529 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples528, i64 0, i64 %idxprom527, !dbg !5420
  %arrayidx530 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx529, i64 0, i64 %idxprom526, !dbg !5420
  %arrayidx531 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx530, i64 0, i64 %idxprom522, !dbg !5420
  store i32 0, i32* %arrayidx531, align 4, !dbg !5428
  br label %for.inc532, !dbg !5429

for.inc532:                                       ; preds = %for.body501
  %340 = load i32, i32* %ch, align 4, !dbg !5430
  %inc533 = add nsw i32 %340, 1, !dbg !5430
  store i32 %inc533, i32* %ch, align 4, !dbg !5430
  br label %for.cond497, !dbg !5432, !llvm.loop !5433

for.end534:                                       ; preds = %for.cond497
  br label %for.inc535, !dbg !5435

for.inc535:                                       ; preds = %for.end534
  %341 = load i32, i32* %i, align 4, !dbg !5436
  %inc536 = add nsw i32 %341, 1, !dbg !5436
  store i32 %inc536, i32* %i, align 4, !dbg !5436
  br label %for.cond493, !dbg !5438, !llvm.loop !5439

for.end537:                                       ; preds = %for.cond493
  br label %for.inc538, !dbg !5441

for.inc538:                                       ; preds = %for.end537
  %342 = load i32, i32* %l, align 4, !dbg !5442
  %add539 = add nsw i32 %342, 3, !dbg !5442
  store i32 %add539, i32* %l, align 4, !dbg !5442
  br label %for.cond152, !dbg !5444, !llvm.loop !5445

for.end540:                                       ; preds = %for.cond152
  br label %for.inc541, !dbg !5447

for.inc541:                                       ; preds = %for.end540
  %343 = load i32, i32* %k, align 4, !dbg !5448
  %inc542 = add nsw i32 %343, 1, !dbg !5448
  store i32 %inc542, i32* %k, align 4, !dbg !5448
  br label %for.cond148, !dbg !5450, !llvm.loop !5451

for.end543:                                       ; preds = %for.cond148
  ret i32 36, !dbg !5453
}

; Function Attrs: nounwind uwtable
define internal i32 @mp_decode_layer3(%struct.MPADecodeContext* %s) #1 !dbg !5454 {
entry:
  %slen.addr.i1074 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i1074, metadata !5455, metadata !2019), !dbg !5459
  %sf.addr.i1075 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i1075, metadata !5474, metadata !2019), !dbg !5475
  %n1.addr.i1076 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i1076, metadata !5476, metadata !2019), !dbg !5477
  %n2.addr.i1077 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i1077, metadata !5478, metadata !2019), !dbg !5479
  %n3.addr.i1078 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i1078, metadata !5480, metadata !2019), !dbg !5481
  %m.i1079 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i1079, metadata !5482, metadata !2019), !dbg !5485
  %m9.i1080 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i1080, metadata !5486, metadata !2019), !dbg !5490
  %m18.i1081 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i1081, metadata !5491, metadata !2019), !dbg !5494
  %m31.i1082 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i1082, metadata !5495, metadata !2019), !dbg !5498
  %m46.i1083 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i1083, metadata !5499, metadata !2019), !dbg !5503
  %m55.i1084 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i1084, metadata !5504, metadata !2019), !dbg !5507
  %m69.i1085 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i1085, metadata !5508, metadata !2019), !dbg !5511
  %m84.i1086 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i1086, metadata !5512, metadata !2019), !dbg !5516
  %m93.i1087 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i1087, metadata !5517, metadata !2019), !dbg !5520
  %slen.addr.i955 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i955, metadata !5455, metadata !2019), !dbg !5521
  %sf.addr.i956 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i956, metadata !5474, metadata !2019), !dbg !5524
  %n1.addr.i957 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i957, metadata !5476, metadata !2019), !dbg !5525
  %n2.addr.i958 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i958, metadata !5478, metadata !2019), !dbg !5526
  %n3.addr.i959 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i959, metadata !5480, metadata !2019), !dbg !5527
  %m.i960 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i960, metadata !5482, metadata !2019), !dbg !5528
  %m9.i961 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i961, metadata !5486, metadata !2019), !dbg !5529
  %m18.i962 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i962, metadata !5491, metadata !2019), !dbg !5530
  %m31.i963 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i963, metadata !5495, metadata !2019), !dbg !5531
  %m46.i964 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i964, metadata !5499, metadata !2019), !dbg !5532
  %m55.i965 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i965, metadata !5504, metadata !2019), !dbg !5533
  %m69.i966 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i966, metadata !5508, metadata !2019), !dbg !5534
  %m84.i967 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i967, metadata !5512, metadata !2019), !dbg !5535
  %m93.i968 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i968, metadata !5517, metadata !2019), !dbg !5536
  %slen.addr.i836 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i836, metadata !5455, metadata !2019), !dbg !5537
  %sf.addr.i837 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i837, metadata !5474, metadata !2019), !dbg !5540
  %n1.addr.i838 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i838, metadata !5476, metadata !2019), !dbg !5541
  %n2.addr.i839 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i839, metadata !5478, metadata !2019), !dbg !5542
  %n3.addr.i840 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i840, metadata !5480, metadata !2019), !dbg !5543
  %m.i841 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i841, metadata !5482, metadata !2019), !dbg !5544
  %m9.i842 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i842, metadata !5486, metadata !2019), !dbg !5545
  %m18.i843 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i843, metadata !5491, metadata !2019), !dbg !5546
  %m31.i844 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i844, metadata !5495, metadata !2019), !dbg !5547
  %m46.i845 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i845, metadata !5499, metadata !2019), !dbg !5548
  %m55.i846 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i846, metadata !5504, metadata !2019), !dbg !5549
  %m69.i847 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i847, metadata !5508, metadata !2019), !dbg !5550
  %m84.i848 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i848, metadata !5512, metadata !2019), !dbg !5551
  %m93.i849 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i849, metadata !5517, metadata !2019), !dbg !5552
  %slen.addr.i717 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i717, metadata !5455, metadata !2019), !dbg !5553
  %sf.addr.i718 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i718, metadata !5474, metadata !2019), !dbg !5559
  %n1.addr.i719 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i719, metadata !5476, metadata !2019), !dbg !5560
  %n2.addr.i720 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i720, metadata !5478, metadata !2019), !dbg !5561
  %n3.addr.i721 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i721, metadata !5480, metadata !2019), !dbg !5562
  %m.i722 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i722, metadata !5482, metadata !2019), !dbg !5563
  %m9.i723 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i723, metadata !5486, metadata !2019), !dbg !5564
  %m18.i724 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i724, metadata !5491, metadata !2019), !dbg !5565
  %m31.i725 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i725, metadata !5495, metadata !2019), !dbg !5566
  %m46.i726 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i726, metadata !5499, metadata !2019), !dbg !5567
  %m55.i727 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i727, metadata !5504, metadata !2019), !dbg !5568
  %m69.i728 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i728, metadata !5508, metadata !2019), !dbg !5569
  %m84.i729 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i729, metadata !5512, metadata !2019), !dbg !5570
  %m93.i730 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i730, metadata !5517, metadata !2019), !dbg !5571
  %slen.addr.i598 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i598, metadata !5455, metadata !2019), !dbg !5572
  %sf.addr.i599 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i599, metadata !5474, metadata !2019), !dbg !5575
  %n1.addr.i600 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i600, metadata !5476, metadata !2019), !dbg !5576
  %n2.addr.i601 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i601, metadata !5478, metadata !2019), !dbg !5577
  %n3.addr.i602 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i602, metadata !5480, metadata !2019), !dbg !5578
  %m.i603 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i603, metadata !5482, metadata !2019), !dbg !5579
  %m9.i604 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i604, metadata !5486, metadata !2019), !dbg !5580
  %m18.i605 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i605, metadata !5491, metadata !2019), !dbg !5581
  %m31.i606 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i606, metadata !5495, metadata !2019), !dbg !5582
  %m46.i607 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i607, metadata !5499, metadata !2019), !dbg !5583
  %m55.i608 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i608, metadata !5504, metadata !2019), !dbg !5584
  %m69.i609 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i609, metadata !5508, metadata !2019), !dbg !5585
  %m84.i610 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i610, metadata !5512, metadata !2019), !dbg !5586
  %m93.i611 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i611, metadata !5517, metadata !2019), !dbg !5587
  %slen.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %slen.addr.i, metadata !5455, metadata !2019), !dbg !5588
  %sf.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr.i, metadata !5474, metadata !2019), !dbg !5591
  %n1.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n1.addr.i, metadata !5476, metadata !2019), !dbg !5592
  %n2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n2.addr.i, metadata !5478, metadata !2019), !dbg !5593
  %n3.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n3.addr.i, metadata !5480, metadata !2019), !dbg !5594
  %m.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.i, metadata !5482, metadata !2019), !dbg !5595
  %m9.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m9.i, metadata !5486, metadata !2019), !dbg !5596
  %m18.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m18.i, metadata !5491, metadata !2019), !dbg !5597
  %m31.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m31.i, metadata !5495, metadata !2019), !dbg !5598
  %m46.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m46.i, metadata !5499, metadata !2019), !dbg !5599
  %m55.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m55.i, metadata !5504, metadata !2019), !dbg !5600
  %m69.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m69.i, metadata !5508, metadata !2019), !dbg !5601
  %m84.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m84.i, metadata !5512, metadata !2019), !dbg !5602
  %m93.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m93.i, metadata !5517, metadata !2019), !dbg !5603
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5604, metadata !2019), !dbg !5609
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5614, metadata !2019), !dbg !5615
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5616, metadata !2019), !dbg !5617
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %nb_granules = alloca i32, align 4
  %main_data_begin = alloca i32, align 4
  %gr = alloca i32, align 4
  %ch = alloca i32, align 4
  %blocksplit_flag = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %bits_pos = alloca i32, align 4
  %g = alloca %struct.GranuleDef*, align 8
  %exponents = alloca [576 x i16], align 16
  %region_address1 = alloca i32, align 4
  %region_address2 = alloca i32, align 4
  %skip = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %sc = alloca i8*, align 8
  %slen = alloca i32, align 4
  %slen1 = alloca i32, align 4
  %slen2 = alloca i32, align 4
  %tindex = alloca i32, align 4
  %tindex2 = alloca i32, align 4
  %slen427 = alloca [4 x i32], align 16
  %sl = alloca i32, align 4
  %sf = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !5618, metadata !2019), !dbg !5619
  call void @llvm.dbg.declare(metadata i32* %nb_granules, metadata !5620, metadata !2019), !dbg !5621
  call void @llvm.dbg.declare(metadata i32* %main_data_begin, metadata !5622, metadata !2019), !dbg !5623
  call void @llvm.dbg.declare(metadata i32* %gr, metadata !5624, metadata !2019), !dbg !5625
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5626, metadata !2019), !dbg !5627
  call void @llvm.dbg.declare(metadata i32* %blocksplit_flag, metadata !5628, metadata !2019), !dbg !5629
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5630, metadata !2019), !dbg !5631
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5632, metadata !2019), !dbg !5633
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5634, metadata !2019), !dbg !5635
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5636, metadata !2019), !dbg !5637
  call void @llvm.dbg.declare(metadata i32* %bits_pos, metadata !5638, metadata !2019), !dbg !5639
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g, metadata !5640, metadata !2019), !dbg !5641
  call void @llvm.dbg.declare(metadata [576 x i16]* %exponents, metadata !5642, metadata !2019), !dbg !5644
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5645
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 9, !dbg !5647
  %1 = load i32, i32* %lsf, align 4, !dbg !5647
  %tobool = icmp ne i32 %1, 0, !dbg !5645
  br i1 %tobool, label %if.then, label %if.else, !dbg !5648

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5649
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 14, !dbg !5651
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !5652
  store i32 %call, i32* %main_data_begin, align 4, !dbg !5653
  %3 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5654
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %3, i32 0, i32 14, !dbg !5655
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5656
  %nb_channels = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 6, !dbg !5657
  %5 = load i32, i32* %nb_channels, align 8, !dbg !5657
  call void @skip_bits(%struct.GetBitContext* %gb1, i32 %5), !dbg !5658
  store i32 1, i32* %nb_granules, align 4, !dbg !5659
  br label %if.end19, !dbg !5660

if.else:                                          ; preds = %entry
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5661
  %gb2 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 14, !dbg !5663
  %call3 = call i32 @get_bits(%struct.GetBitContext* %gb2, i32 9), !dbg !5664
  store i32 %call3, i32* %main_data_begin, align 4, !dbg !5665
  %7 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5666
  %nb_channels4 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %7, i32 0, i32 6, !dbg !5668
  %8 = load i32, i32* %nb_channels4, align 8, !dbg !5668
  %cmp = icmp eq i32 %8, 2, !dbg !5669
  br i1 %cmp, label %if.then5, label %if.else7, !dbg !5670

if.then5:                                         ; preds = %if.else
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5671
  %gb6 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 14, !dbg !5672
  call void @skip_bits(%struct.GetBitContext* %gb6, i32 3), !dbg !5673
  br label %if.end, !dbg !5673

if.else7:                                         ; preds = %if.else
  %10 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5674
  %gb8 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %10, i32 0, i32 14, !dbg !5675
  call void @skip_bits(%struct.GetBitContext* %gb8, i32 5), !dbg !5676
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then5
  store i32 2, i32* %nb_granules, align 4, !dbg !5677
  store i32 0, i32* %ch, align 4, !dbg !5678
  br label %for.cond, !dbg !5680

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %ch, align 4, !dbg !5681
  %12 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5684
  %nb_channels9 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %12, i32 0, i32 6, !dbg !5685
  %13 = load i32, i32* %nb_channels9, align 8, !dbg !5685
  %cmp10 = icmp slt i32 %11, %13, !dbg !5686
  br i1 %cmp10, label %for.body, label %for.end, !dbg !5687

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %ch, align 4, !dbg !5688
  %idxprom = sext i32 %14 to i64, !dbg !5690
  %15 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5690
  %granules = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %15, i32 0, i32 22, !dbg !5691
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules, i64 0, i64 %idxprom, !dbg !5690
  %arrayidx11 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx, i64 0, i64 0, !dbg !5690
  %scfsi = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %arrayidx11, i32 0, i32 0, !dbg !5692
  store i8 0, i8* %scfsi, align 32, !dbg !5693
  %16 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5694
  %gb12 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %16, i32 0, i32 14, !dbg !5695
  %call13 = call i32 @get_bits(%struct.GetBitContext* %gb12, i32 4), !dbg !5696
  %conv = trunc i32 %call13 to i8, !dbg !5696
  %17 = load i32, i32* %ch, align 4, !dbg !5697
  %idxprom14 = sext i32 %17 to i64, !dbg !5698
  %18 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5698
  %granules15 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %18, i32 0, i32 22, !dbg !5699
  %arrayidx16 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules15, i64 0, i64 %idxprom14, !dbg !5698
  %arrayidx17 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx16, i64 0, i64 1, !dbg !5698
  %scfsi18 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %arrayidx17, i32 0, i32 0, !dbg !5700
  store i8 %conv, i8* %scfsi18, align 32, !dbg !5701
  br label %for.inc, !dbg !5702

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %ch, align 4, !dbg !5703
  %inc = add nsw i32 %19, 1, !dbg !5703
  store i32 %inc, i32* %ch, align 4, !dbg !5703
  br label %for.cond, !dbg !5705, !llvm.loop !5706

for.end:                                          ; preds = %for.cond
  br label %if.end19

if.end19:                                         ; preds = %for.end, %if.then
  store i32 0, i32* %gr, align 4, !dbg !5708
  br label %for.cond20, !dbg !5710

for.cond20:                                       ; preds = %for.inc139, %if.end19
  %20 = load i32, i32* %gr, align 4, !dbg !5711
  %21 = load i32, i32* %nb_granules, align 4, !dbg !5714
  %cmp21 = icmp slt i32 %20, %21, !dbg !5715
  br i1 %cmp21, label %for.body23, label %for.end141, !dbg !5716

for.body23:                                       ; preds = %for.cond20
  store i32 0, i32* %ch, align 4, !dbg !5717
  br label %for.cond24, !dbg !5720

for.cond24:                                       ; preds = %for.inc136, %for.body23
  %22 = load i32, i32* %ch, align 4, !dbg !5721
  %23 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5724
  %nb_channels25 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %23, i32 0, i32 6, !dbg !5725
  %24 = load i32, i32* %nb_channels25, align 8, !dbg !5725
  %cmp26 = icmp slt i32 %22, %24, !dbg !5726
  br i1 %cmp26, label %for.body28, label %for.end138, !dbg !5727

for.body28:                                       ; preds = %for.cond24
  br label %do.body, !dbg !5728, !llvm.loop !5730

do.body:                                          ; preds = %for.body28
  br label %do.end, !dbg !5731

do.end:                                           ; preds = %do.body
  %25 = load i32, i32* %gr, align 4, !dbg !5734
  %idxprom29 = sext i32 %25 to i64, !dbg !5735
  %26 = load i32, i32* %ch, align 4, !dbg !5736
  %idxprom30 = sext i32 %26 to i64, !dbg !5735
  %27 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5735
  %granules31 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %27, i32 0, i32 22, !dbg !5737
  %arrayidx32 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules31, i64 0, i64 %idxprom30, !dbg !5735
  %arrayidx33 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !5735
  store %struct.GranuleDef* %arrayidx33, %struct.GranuleDef** %g, align 8, !dbg !5738
  %28 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5739
  %gb34 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %28, i32 0, i32 14, !dbg !5740
  %call35 = call i32 @get_bits(%struct.GetBitContext* %gb34, i32 12), !dbg !5741
  %29 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5742
  %part2_3_length = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %29, i32 0, i32 1, !dbg !5743
  store i32 %call35, i32* %part2_3_length, align 4, !dbg !5744
  %30 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5745
  %gb36 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %30, i32 0, i32 14, !dbg !5746
  %call37 = call i32 @get_bits(%struct.GetBitContext* %gb36, i32 9), !dbg !5747
  %31 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5748
  %big_values = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %31, i32 0, i32 2, !dbg !5749
  store i32 %call37, i32* %big_values, align 8, !dbg !5750
  %32 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5751
  %big_values38 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %32, i32 0, i32 2, !dbg !5753
  %33 = load i32, i32* %big_values38, align 8, !dbg !5753
  %cmp39 = icmp sgt i32 %33, 288, !dbg !5754
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !5755

if.then41:                                        ; preds = %do.end
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5756
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %34, i32 0, i32 26, !dbg !5758
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !5758
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !5756
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i32 0, i32 0)), !dbg !5759
  store i32 -1094995529, i32* %retval, align 4, !dbg !5760
  br label %return, !dbg !5760

if.end42:                                         ; preds = %do.end
  %37 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5761
  %gb43 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %37, i32 0, i32 14, !dbg !5762
  %call44 = call i32 @get_bits(%struct.GetBitContext* %gb43, i32 8), !dbg !5763
  %38 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5764
  %global_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %38, i32 0, i32 3, !dbg !5765
  store i32 %call44, i32* %global_gain, align 4, !dbg !5766
  %39 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5767
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %39, i32 0, i32 8, !dbg !5769
  %40 = load i32, i32* %mode_ext, align 32, !dbg !5769
  %and = and i32 %40, 3, !dbg !5770
  %cmp45 = icmp eq i32 %and, 2, !dbg !5771
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !5772

if.then47:                                        ; preds = %if.end42
  %41 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5773
  %global_gain48 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %41, i32 0, i32 3, !dbg !5774
  %42 = load i32, i32* %global_gain48, align 4, !dbg !5775
  %sub = sub nsw i32 %42, 2, !dbg !5775
  store i32 %sub, i32* %global_gain48, align 4, !dbg !5775
  br label %if.end49, !dbg !5773

if.end49:                                         ; preds = %if.then47, %if.end42
  %43 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5776
  %lsf50 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %43, i32 0, i32 9, !dbg !5778
  %44 = load i32, i32* %lsf50, align 4, !dbg !5778
  %tobool51 = icmp ne i32 %44, 0, !dbg !5776
  br i1 %tobool51, label %if.then52, label %if.else55, !dbg !5779

if.then52:                                        ; preds = %if.end49
  %45 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5780
  %gb53 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %45, i32 0, i32 14, !dbg !5781
  %call54 = call i32 @get_bits(%struct.GetBitContext* %gb53, i32 9), !dbg !5782
  %46 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5783
  %scalefac_compress = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %46, i32 0, i32 4, !dbg !5784
  store i32 %call54, i32* %scalefac_compress, align 16, !dbg !5785
  br label %if.end59, !dbg !5783

if.else55:                                        ; preds = %if.end49
  %47 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5786
  %gb56 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %47, i32 0, i32 14, !dbg !5787
  %call57 = call i32 @get_bits(%struct.GetBitContext* %gb56, i32 4), !dbg !5788
  %48 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5789
  %scalefac_compress58 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %48, i32 0, i32 4, !dbg !5790
  store i32 %call57, i32* %scalefac_compress58, align 16, !dbg !5791
  br label %if.end59

if.end59:                                         ; preds = %if.else55, %if.then52
  %49 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5792
  %gb60 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %49, i32 0, i32 14, !dbg !5793
  %call61 = call i32 @get_bits1(%struct.GetBitContext* %gb60), !dbg !5794
  store i32 %call61, i32* %blocksplit_flag, align 4, !dbg !5795
  %50 = load i32, i32* %blocksplit_flag, align 4, !dbg !5796
  %tobool62 = icmp ne i32 %50, 0, !dbg !5796
  br i1 %tobool62, label %if.then63, label %if.else99, !dbg !5798

if.then63:                                        ; preds = %if.end59
  %51 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5799
  %gb64 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %51, i32 0, i32 14, !dbg !5801
  %call65 = call i32 @get_bits(%struct.GetBitContext* %gb64, i32 2), !dbg !5802
  %conv66 = trunc i32 %call65 to i8, !dbg !5802
  %52 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5803
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %52, i32 0, i32 5, !dbg !5804
  store i8 %conv66, i8* %block_type, align 4, !dbg !5805
  %53 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5806
  %block_type67 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %53, i32 0, i32 5, !dbg !5808
  %54 = load i8, i8* %block_type67, align 4, !dbg !5808
  %conv68 = zext i8 %54 to i32, !dbg !5806
  %cmp69 = icmp eq i32 %conv68, 0, !dbg !5809
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !5810

if.then71:                                        ; preds = %if.then63
  %55 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5811
  %avctx72 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %55, i32 0, i32 26, !dbg !5813
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx72, align 16, !dbg !5813
  %57 = bitcast %struct.AVCodecContext* %56 to i8*, !dbg !5811
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0)), !dbg !5814
  store i32 -1094995529, i32* %retval, align 4, !dbg !5815
  br label %return, !dbg !5815

if.end73:                                         ; preds = %if.then63
  %58 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5816
  %gb74 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %58, i32 0, i32 14, !dbg !5817
  %call75 = call i32 @get_bits1(%struct.GetBitContext* %gb74), !dbg !5818
  %conv76 = trunc i32 %call75 to i8, !dbg !5818
  %59 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5819
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %59, i32 0, i32 6, !dbg !5820
  store i8 %conv76, i8* %switch_point, align 1, !dbg !5821
  store i32 0, i32* %i, align 4, !dbg !5822
  br label %for.cond77, !dbg !5824

for.cond77:                                       ; preds = %for.inc85, %if.end73
  %60 = load i32, i32* %i, align 4, !dbg !5825
  %cmp78 = icmp slt i32 %60, 2, !dbg !5828
  br i1 %cmp78, label %for.body80, label %for.end87, !dbg !5829

for.body80:                                       ; preds = %for.cond77
  %61 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5830
  %gb81 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %61, i32 0, i32 14, !dbg !5831
  %call82 = call i32 @get_bits(%struct.GetBitContext* %gb81, i32 5), !dbg !5832
  %62 = load i32, i32* %i, align 4, !dbg !5833
  %idxprom83 = sext i32 %62 to i64, !dbg !5834
  %63 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5834
  %table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %63, i32 0, i32 7, !dbg !5835
  %arrayidx84 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select, i64 0, i64 %idxprom83, !dbg !5834
  store i32 %call82, i32* %arrayidx84, align 4, !dbg !5836
  br label %for.inc85, !dbg !5834

for.inc85:                                        ; preds = %for.body80
  %64 = load i32, i32* %i, align 4, !dbg !5837
  %inc86 = add nsw i32 %64, 1, !dbg !5837
  store i32 %inc86, i32* %i, align 4, !dbg !5837
  br label %for.cond77, !dbg !5839, !llvm.loop !5840

for.end87:                                        ; preds = %for.cond77
  store i32 0, i32* %i, align 4, !dbg !5842
  br label %for.cond88, !dbg !5844

for.cond88:                                       ; preds = %for.inc96, %for.end87
  %65 = load i32, i32* %i, align 4, !dbg !5845
  %cmp89 = icmp slt i32 %65, 3, !dbg !5848
  br i1 %cmp89, label %for.body91, label %for.end98, !dbg !5849

for.body91:                                       ; preds = %for.cond88
  %66 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5850
  %gb92 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %66, i32 0, i32 14, !dbg !5851
  %call93 = call i32 @get_bits(%struct.GetBitContext* %gb92, i32 3), !dbg !5852
  %67 = load i32, i32* %i, align 4, !dbg !5853
  %idxprom94 = sext i32 %67 to i64, !dbg !5854
  %68 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5854
  %subblock_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %68, i32 0, i32 8, !dbg !5855
  %arrayidx95 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain, i64 0, i64 %idxprom94, !dbg !5854
  store i32 %call93, i32* %arrayidx95, align 4, !dbg !5856
  br label %for.inc96, !dbg !5854

for.inc96:                                        ; preds = %for.body91
  %69 = load i32, i32* %i, align 4, !dbg !5857
  %inc97 = add nsw i32 %69, 1, !dbg !5857
  store i32 %inc97, i32* %i, align 4, !dbg !5857
  br label %for.cond88, !dbg !5859, !llvm.loop !5860

for.end98:                                        ; preds = %for.cond88
  %70 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5862
  %71 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5863
  call void @init_short_region(%struct.MPADecodeContext* %70, %struct.GranuleDef* %71), !dbg !5864
  br label %if.end120, !dbg !5865

if.else99:                                        ; preds = %if.end59
  call void @llvm.dbg.declare(metadata i32* %region_address1, metadata !5866, metadata !2019), !dbg !5868
  call void @llvm.dbg.declare(metadata i32* %region_address2, metadata !5869, metadata !2019), !dbg !5870
  %72 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5871
  %block_type100 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %72, i32 0, i32 5, !dbg !5872
  store i8 0, i8* %block_type100, align 4, !dbg !5873
  %73 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5874
  %switch_point101 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %73, i32 0, i32 6, !dbg !5875
  store i8 0, i8* %switch_point101, align 1, !dbg !5876
  store i32 0, i32* %i, align 4, !dbg !5877
  br label %for.cond102, !dbg !5879

for.cond102:                                      ; preds = %for.inc111, %if.else99
  %74 = load i32, i32* %i, align 4, !dbg !5880
  %cmp103 = icmp slt i32 %74, 3, !dbg !5883
  br i1 %cmp103, label %for.body105, label %for.end113, !dbg !5884

for.body105:                                      ; preds = %for.cond102
  %75 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5885
  %gb106 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %75, i32 0, i32 14, !dbg !5886
  %call107 = call i32 @get_bits(%struct.GetBitContext* %gb106, i32 5), !dbg !5887
  %76 = load i32, i32* %i, align 4, !dbg !5888
  %idxprom108 = sext i32 %76 to i64, !dbg !5889
  %77 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5889
  %table_select109 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %77, i32 0, i32 7, !dbg !5890
  %arrayidx110 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select109, i64 0, i64 %idxprom108, !dbg !5889
  store i32 %call107, i32* %arrayidx110, align 4, !dbg !5891
  br label %for.inc111, !dbg !5889

for.inc111:                                       ; preds = %for.body105
  %78 = load i32, i32* %i, align 4, !dbg !5892
  %inc112 = add nsw i32 %78, 1, !dbg !5892
  store i32 %inc112, i32* %i, align 4, !dbg !5892
  br label %for.cond102, !dbg !5894, !llvm.loop !5895

for.end113:                                       ; preds = %for.cond102
  %79 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5897
  %gb114 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %79, i32 0, i32 14, !dbg !5898
  %call115 = call i32 @get_bits(%struct.GetBitContext* %gb114, i32 4), !dbg !5899
  store i32 %call115, i32* %region_address1, align 4, !dbg !5900
  %80 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5901
  %gb116 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %80, i32 0, i32 14, !dbg !5902
  %call117 = call i32 @get_bits(%struct.GetBitContext* %gb116, i32 3), !dbg !5903
  store i32 %call117, i32* %region_address2, align 4, !dbg !5904
  br label %do.body118, !dbg !5905, !llvm.loop !5906

do.body118:                                       ; preds = %for.end113
  br label %do.end119, !dbg !5907

do.end119:                                        ; preds = %do.body118
  %81 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5910
  %82 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5911
  %83 = load i32, i32* %region_address1, align 4, !dbg !5912
  %84 = load i32, i32* %region_address2, align 4, !dbg !5913
  call void @init_long_region(%struct.MPADecodeContext* %81, %struct.GranuleDef* %82, i32 %83, i32 %84), !dbg !5914
  br label %if.end120

if.end120:                                        ; preds = %do.end119, %for.end98
  %85 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5915
  call void @region_offset2size(%struct.GranuleDef* %85), !dbg !5916
  %86 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5917
  %87 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5918
  call void @compute_band_indexes(%struct.MPADecodeContext* %86, %struct.GranuleDef* %87), !dbg !5919
  %88 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5920
  %preflag = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %88, i32 0, i32 12, !dbg !5921
  store i32 0, i32* %preflag, align 16, !dbg !5922
  %89 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5923
  %lsf121 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %89, i32 0, i32 9, !dbg !5925
  %90 = load i32, i32* %lsf121, align 4, !dbg !5925
  %tobool122 = icmp ne i32 %90, 0, !dbg !5923
  br i1 %tobool122, label %if.end127, label %if.then123, !dbg !5926

if.then123:                                       ; preds = %if.end120
  %91 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5927
  %gb124 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %91, i32 0, i32 14, !dbg !5928
  %call125 = call i32 @get_bits1(%struct.GetBitContext* %gb124), !dbg !5929
  %92 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5930
  %preflag126 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %92, i32 0, i32 12, !dbg !5931
  store i32 %call125, i32* %preflag126, align 16, !dbg !5932
  br label %if.end127, !dbg !5930

if.end127:                                        ; preds = %if.then123, %if.end120
  %93 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5933
  %gb128 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %93, i32 0, i32 14, !dbg !5934
  %call129 = call i32 @get_bits1(%struct.GetBitContext* %gb128), !dbg !5935
  %conv130 = trunc i32 %call129 to i8, !dbg !5935
  %94 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5936
  %scalefac_scale = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %94, i32 0, i32 9, !dbg !5937
  store i8 %conv130, i8* %scalefac_scale, align 16, !dbg !5938
  %95 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5939
  %gb131 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %95, i32 0, i32 14, !dbg !5940
  %call132 = call i32 @get_bits1(%struct.GetBitContext* %gb131), !dbg !5941
  %conv133 = trunc i32 %call132 to i8, !dbg !5941
  %96 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !5942
  %count1table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %96, i32 0, i32 10, !dbg !5943
  store i8 %conv133, i8* %count1table_select, align 1, !dbg !5944
  br label %do.body134, !dbg !5945, !llvm.loop !5946

do.body134:                                       ; preds = %if.end127
  br label %do.end135, !dbg !5947

do.end135:                                        ; preds = %do.body134
  br label %for.inc136, !dbg !5950

for.inc136:                                       ; preds = %do.end135
  %97 = load i32, i32* %ch, align 4, !dbg !5951
  %inc137 = add nsw i32 %97, 1, !dbg !5951
  store i32 %inc137, i32* %ch, align 4, !dbg !5951
  br label %for.cond24, !dbg !5953, !llvm.loop !5954

for.end138:                                       ; preds = %for.cond24
  br label %for.inc139, !dbg !5956

for.inc139:                                       ; preds = %for.end138
  %98 = load i32, i32* %gr, align 4, !dbg !5957
  %inc140 = add nsw i32 %98, 1, !dbg !5957
  store i32 %inc140, i32* %gr, align 4, !dbg !5957
  br label %for.cond20, !dbg !5959, !llvm.loop !5960

for.end141:                                       ; preds = %for.cond20
  %99 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5962
  %adu_mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %99, i32 0, i32 23, !dbg !5963
  %100 = load i32, i32* %adu_mode, align 32, !dbg !5963
  %tobool142 = icmp ne i32 %100, 0, !dbg !5962
  br i1 %tobool142, label %if.else238, label %if.then143, !dbg !5964

if.then143:                                       ; preds = %for.end141
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !5965, metadata !2019), !dbg !5966
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5967, metadata !2019), !dbg !5968
  %101 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5969
  %gb144 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %101, i32 0, i32 14, !dbg !5970
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb144, i32 0, i32 0, !dbg !5971
  %102 = load i8*, i8** %buffer, align 16, !dbg !5971
  %103 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5972
  %gb145 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %103, i32 0, i32 14, !dbg !5973
  %call146 = call i32 @get_bits_count(%struct.GetBitContext* %gb145), !dbg !5974
  %shr = ashr i32 %call146, 3, !dbg !5975
  %idx.ext = sext i32 %shr to i64, !dbg !5976
  %add.ptr = getelementptr inbounds i8, i8* %102, i64 %idx.ext, !dbg !5976
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !5968
  %104 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5977
  %gb147 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %104, i32 0, i32 14, !dbg !5978
  %call148 = call i32 @get_bits_left(%struct.GetBitContext* %gb147), !dbg !5979
  %shr149 = ashr i32 %call148, 3, !dbg !5980
  %105 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5981
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %105, i32 0, i32 12, !dbg !5982
  %106 = load i32, i32* %extrasize, align 4, !dbg !5982
  %sub150 = sub nsw i32 %shr149, %106, !dbg !5983
  %107 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5984
  %last_buf_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %107, i32 0, i32 11, !dbg !5985
  %108 = load i32, i32* %last_buf_size, align 32, !dbg !5985
  %sub151 = sub nsw i32 1048, %108, !dbg !5986
  %cmp152 = icmp sgt i32 0, %sub151, !dbg !5987
  br i1 %cmp152, label %cond.true, label %cond.false, !dbg !5988

cond.true:                                        ; preds = %if.then143
  br label %cond.end, !dbg !5989

cond.false:                                       ; preds = %if.then143
  %109 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !5990
  %last_buf_size154 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %109, i32 0, i32 11, !dbg !5992
  %110 = load i32, i32* %last_buf_size154, align 32, !dbg !5992
  %sub155 = sub nsw i32 1048, %110, !dbg !5993
  br label %cond.end, !dbg !5994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub155, %cond.false ], !dbg !5995
  store i32 %sub150, i32* %a.addr.i, align 4, !dbg !5997
  store i32 0, i32* %amin.addr.i, align 4, !dbg !5997
  store i32 %cond, i32* %amax.addr.i, align 4, !dbg !5997
  %111 = load i32, i32* %a.addr.i, align 4, !dbg !5998
  %112 = load i32, i32* %amin.addr.i, align 4, !dbg !6000
  %cmp.i = icmp slt i32 %111, %112, !dbg !6001
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6002

if.then.i:                                        ; preds = %cond.end
  %113 = load i32, i32* %amin.addr.i, align 4, !dbg !6003
  store i32 %113, i32* %retval.i, align 4, !dbg !6005
  br label %av_clip_c.exit, !dbg !6005

if.else.i:                                        ; preds = %cond.end
  %114 = load i32, i32* %a.addr.i, align 4, !dbg !6006
  %115 = load i32, i32* %amax.addr.i, align 4, !dbg !6008
  %cmp1.i = icmp sgt i32 %114, %115, !dbg !6009
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6010

if.then2.i:                                       ; preds = %if.else.i
  %116 = load i32, i32* %amax.addr.i, align 4, !dbg !6011
  store i32 %116, i32* %retval.i, align 4, !dbg !6013
  br label %av_clip_c.exit, !dbg !6013

if.else3.i:                                       ; preds = %if.else.i
  %117 = load i32, i32* %a.addr.i, align 4, !dbg !6014
  store i32 %117, i32* %retval.i, align 4, !dbg !6015
  br label %av_clip_c.exit, !dbg !6015

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %118 = load i32, i32* %retval.i, align 4, !dbg !6016
  %119 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6017
  %extrasize157 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %119, i32 0, i32 12, !dbg !6018
  store i32 %118, i32* %extrasize157, align 4, !dbg !6019
  br label %do.body158, !dbg !6020, !llvm.loop !6021

do.body158:                                       ; preds = %av_clip_c.exit
  br label %do.end159, !dbg !6022

do.end159:                                        ; preds = %do.body158
  %120 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6025
  %last_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %120, i32 0, i32 10, !dbg !6026
  %arraydecay = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf, i32 0, i32 0, !dbg !6025
  %121 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6027
  %last_buf_size160 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %121, i32 0, i32 11, !dbg !6028
  %122 = load i32, i32* %last_buf_size160, align 32, !dbg !6028
  %idx.ext161 = sext i32 %122 to i64, !dbg !6029
  %add.ptr162 = getelementptr inbounds i8, i8* %arraydecay, i64 %idx.ext161, !dbg !6029
  %123 = load i8*, i8** %ptr, align 8, !dbg !6030
  %124 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6031
  %extrasize163 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %124, i32 0, i32 12, !dbg !6032
  %125 = load i32, i32* %extrasize163, align 4, !dbg !6032
  %conv164 = sext i32 %125 to i64, !dbg !6031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr162, i8* %123, i64 %conv164, i32 1, i1 false), !dbg !6033
  %126 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6034
  %in_gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %126, i32 0, i32 15, !dbg !6035
  %127 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6036
  %gb165 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %127, i32 0, i32 14, !dbg !6037
  %128 = bitcast %struct.GetBitContext* %in_gb to i8*, !dbg !6037
  %129 = bitcast %struct.GetBitContext* %gb165 to i8*, !dbg !6037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 32, i32 16, i1 false), !dbg !6037
  %130 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6038
  %gb166 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %130, i32 0, i32 14, !dbg !6039
  %131 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6040
  %last_buf167 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %131, i32 0, i32 10, !dbg !6041
  %arraydecay168 = getelementptr inbounds [1048 x i8], [1048 x i8]* %last_buf167, i32 0, i32 0, !dbg !6040
  %132 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6042
  %last_buf_size169 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %132, i32 0, i32 11, !dbg !6043
  %133 = load i32, i32* %last_buf_size169, align 32, !dbg !6043
  %134 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6044
  %extrasize170 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %134, i32 0, i32 12, !dbg !6045
  %135 = load i32, i32* %extrasize170, align 4, !dbg !6045
  %add = add nsw i32 %133, %135, !dbg !6046
  %mul = mul nsw i32 %add, 8, !dbg !6047
  %call171 = call i32 @init_get_bits(%struct.GetBitContext* %gb166, i8* %arraydecay168, i32 %mul), !dbg !6048
  %136 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6049
  %last_buf_size172 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %136, i32 0, i32 11, !dbg !6050
  %137 = load i32, i32* %last_buf_size172, align 32, !dbg !6051
  %shl = shl i32 %137, 3, !dbg !6051
  store i32 %shl, i32* %last_buf_size172, align 32, !dbg !6051
  store i32 0, i32* %gr, align 4, !dbg !6052
  br label %for.cond173, !dbg !6054

for.cond173:                                      ; preds = %for.inc207, %do.end159
  %138 = load i32, i32* %gr, align 4, !dbg !6055
  %139 = load i32, i32* %nb_granules, align 4, !dbg !6058
  %cmp174 = icmp slt i32 %138, %139, !dbg !6059
  br i1 %cmp174, label %land.rhs, label %land.end, !dbg !6060

land.rhs:                                         ; preds = %for.cond173
  %140 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6061
  %last_buf_size176 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %140, i32 0, i32 11, !dbg !6063
  %141 = load i32, i32* %last_buf_size176, align 32, !dbg !6063
  %shr177 = ashr i32 %141, 3, !dbg !6064
  %142 = load i32, i32* %main_data_begin, align 4, !dbg !6065
  %cmp178 = icmp slt i32 %shr177, %142, !dbg !6066
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond173
  %143 = phi i1 [ false, %for.cond173 ], [ %cmp178, %land.rhs ]
  br i1 %143, label %for.body180, label %for.end209, !dbg !6067

for.body180:                                      ; preds = %land.end
  store i32 0, i32* %ch, align 4, !dbg !6069
  br label %for.cond181, !dbg !6072

for.cond181:                                      ; preds = %for.inc204, %for.body180
  %144 = load i32, i32* %ch, align 4, !dbg !6073
  %145 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6076
  %nb_channels182 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %145, i32 0, i32 6, !dbg !6077
  %146 = load i32, i32* %nb_channels182, align 8, !dbg !6077
  %cmp183 = icmp slt i32 %144, %146, !dbg !6078
  br i1 %cmp183, label %for.body185, label %for.end206, !dbg !6079

for.body185:                                      ; preds = %for.cond181
  %147 = load i32, i32* %gr, align 4, !dbg !6080
  %idxprom186 = sext i32 %147 to i64, !dbg !6082
  %148 = load i32, i32* %ch, align 4, !dbg !6083
  %idxprom187 = sext i32 %148 to i64, !dbg !6082
  %149 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6082
  %granules188 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %149, i32 0, i32 22, !dbg !6084
  %arrayidx189 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules188, i64 0, i64 %idxprom187, !dbg !6082
  %arrayidx190 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx189, i64 0, i64 %idxprom186, !dbg !6082
  store %struct.GranuleDef* %arrayidx190, %struct.GranuleDef** %g, align 8, !dbg !6085
  %150 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6086
  %part2_3_length191 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %150, i32 0, i32 1, !dbg !6087
  %151 = load i32, i32* %part2_3_length191, align 4, !dbg !6087
  %152 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6088
  %last_buf_size192 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %152, i32 0, i32 11, !dbg !6089
  %153 = load i32, i32* %last_buf_size192, align 32, !dbg !6090
  %add193 = add nsw i32 %153, %151, !dbg !6090
  store i32 %add193, i32* %last_buf_size192, align 32, !dbg !6090
  %154 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6091
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %154, i32 0, i32 17, !dbg !6092
  %arraydecay194 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid, i32 0, i32 0, !dbg !6093
  %155 = bitcast i32* %arraydecay194 to i8*, !dbg !6093
  call void @llvm.memset.p0i8.i64(i8* %155, i8 0, i64 2304, i32 16, i1 false), !dbg !6093
  %156 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6094
  %157 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6095
  %158 = load i32, i32* %gr, align 4, !dbg !6096
  %mul195 = mul nsw i32 18, %158, !dbg !6097
  %idxprom196 = sext i32 %mul195 to i64, !dbg !6098
  %159 = load i32, i32* %ch, align 4, !dbg !6099
  %idxprom197 = sext i32 %159 to i64, !dbg !6098
  %160 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6098
  %sb_samples = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %160, i32 0, i32 20, !dbg !6100
  %arrayidx198 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples, i64 0, i64 %idxprom197, !dbg !6098
  %arrayidx199 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx198, i64 0, i64 %idxprom196, !dbg !6098
  %arrayidx200 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx199, i64 0, i64 0, !dbg !6098
  %161 = load i32, i32* %ch, align 4, !dbg !6101
  %idxprom201 = sext i32 %161 to i64, !dbg !6102
  %162 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6102
  %mdct_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %162, i32 0, i32 21, !dbg !6103
  %arrayidx202 = getelementptr inbounds [2 x [576 x i32]], [2 x [576 x i32]]* %mdct_buf, i64 0, i64 %idxprom201, !dbg !6102
  %arraydecay203 = getelementptr inbounds [576 x i32], [576 x i32]* %arrayidx202, i32 0, i32 0, !dbg !6102
  call void @compute_imdct(%struct.MPADecodeContext* %156, %struct.GranuleDef* %157, i32* %arrayidx200, i32* %arraydecay203), !dbg !6104
  br label %for.inc204, !dbg !6105

for.inc204:                                       ; preds = %for.body185
  %163 = load i32, i32* %ch, align 4, !dbg !6106
  %inc205 = add nsw i32 %163, 1, !dbg !6106
  store i32 %inc205, i32* %ch, align 4, !dbg !6106
  br label %for.cond181, !dbg !6108, !llvm.loop !6109

for.end206:                                       ; preds = %for.cond181
  br label %for.inc207, !dbg !6111

for.inc207:                                       ; preds = %for.end206
  %164 = load i32, i32* %gr, align 4, !dbg !6112
  %inc208 = add nsw i32 %164, 1, !dbg !6112
  store i32 %inc208, i32* %gr, align 4, !dbg !6112
  br label %for.cond173, !dbg !6114, !llvm.loop !6115

for.end209:                                       ; preds = %land.end
  %165 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6117
  %last_buf_size210 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %165, i32 0, i32 11, !dbg !6118
  %166 = load i32, i32* %last_buf_size210, align 32, !dbg !6118
  %167 = load i32, i32* %main_data_begin, align 4, !dbg !6119
  %mul211 = mul nsw i32 8, %167, !dbg !6120
  %sub212 = sub nsw i32 %166, %mul211, !dbg !6121
  store i32 %sub212, i32* %skip, align 4, !dbg !6122
  %168 = load i32, i32* %skip, align 4, !dbg !6123
  %169 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6125
  %gb213 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %169, i32 0, i32 14, !dbg !6126
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb213, i32 0, i32 3, !dbg !6127
  %170 = load i32, i32* %size_in_bits, align 4, !dbg !6127
  %171 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6128
  %extrasize214 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %171, i32 0, i32 12, !dbg !6129
  %172 = load i32, i32* %extrasize214, align 4, !dbg !6129
  %mul215 = mul nsw i32 %172, 8, !dbg !6130
  %sub216 = sub nsw i32 %170, %mul215, !dbg !6131
  %cmp217 = icmp sge i32 %168, %sub216, !dbg !6132
  br i1 %cmp217, label %land.lhs.true, label %if.else235, !dbg !6133

land.lhs.true:                                    ; preds = %for.end209
  %173 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6134
  %in_gb219 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %173, i32 0, i32 15, !dbg !6136
  %buffer220 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb219, i32 0, i32 0, !dbg !6137
  %174 = load i8*, i8** %buffer220, align 16, !dbg !6137
  %tobool221 = icmp ne i8* %174, null, !dbg !6134
  br i1 %tobool221, label %if.then222, label %if.else235, !dbg !6138

if.then222:                                       ; preds = %land.lhs.true
  %175 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6139
  %in_gb223 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %175, i32 0, i32 15, !dbg !6141
  %176 = load i32, i32* %skip, align 4, !dbg !6142
  %177 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6143
  %gb224 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %177, i32 0, i32 14, !dbg !6144
  %size_in_bits225 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb224, i32 0, i32 3, !dbg !6145
  %178 = load i32, i32* %size_in_bits225, align 4, !dbg !6145
  %sub226 = sub nsw i32 %176, %178, !dbg !6146
  %179 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6147
  %extrasize227 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %179, i32 0, i32 12, !dbg !6148
  %180 = load i32, i32* %extrasize227, align 4, !dbg !6148
  %mul228 = mul nsw i32 %180, 8, !dbg !6149
  %add229 = add nsw i32 %sub226, %mul228, !dbg !6150
  call void @skip_bits_long(%struct.GetBitContext* %in_gb223, i32 %add229), !dbg !6151
  %181 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6152
  %gb230 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %181, i32 0, i32 14, !dbg !6153
  %182 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6154
  %in_gb231 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %182, i32 0, i32 15, !dbg !6155
  %183 = bitcast %struct.GetBitContext* %gb230 to i8*, !dbg !6155
  %184 = bitcast %struct.GetBitContext* %in_gb231 to i8*, !dbg !6155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %183, i8* %184, i64 32, i32 16, i1 false), !dbg !6155
  %185 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6156
  %in_gb232 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %185, i32 0, i32 15, !dbg !6157
  %buffer233 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb232, i32 0, i32 0, !dbg !6158
  store i8* null, i8** %buffer233, align 16, !dbg !6159
  %186 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6160
  %extrasize234 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %186, i32 0, i32 12, !dbg !6161
  store i32 0, i32* %extrasize234, align 4, !dbg !6162
  br label %if.end237, !dbg !6163

if.else235:                                       ; preds = %land.lhs.true, %for.end209
  %187 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6164
  %gb236 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %187, i32 0, i32 14, !dbg !6166
  %188 = load i32, i32* %skip, align 4, !dbg !6167
  call void @skip_bits_long(%struct.GetBitContext* %gb236, i32 %188), !dbg !6168
  br label %if.end237

if.end237:                                        ; preds = %if.else235, %if.then222
  br label %if.end240, !dbg !6169

if.else238:                                       ; preds = %for.end141
  store i32 0, i32* %gr, align 4, !dbg !6170
  %189 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6172
  %extrasize239 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %189, i32 0, i32 12, !dbg !6173
  store i32 0, i32* %extrasize239, align 4, !dbg !6174
  br label %if.end240

if.end240:                                        ; preds = %if.else238, %if.end237
  br label %for.cond241, !dbg !6175

for.cond241:                                      ; preds = %for.inc581, %if.end240
  %190 = load i32, i32* %gr, align 4, !dbg !6176
  %191 = load i32, i32* %nb_granules, align 4, !dbg !6178
  %cmp242 = icmp slt i32 %190, %191, !dbg !6179
  br i1 %cmp242, label %for.body244, label %for.end583, !dbg !6180

for.body244:                                      ; preds = %for.cond241
  store i32 0, i32* %ch, align 4, !dbg !6181
  br label %for.cond245, !dbg !6182

for.cond245:                                      ; preds = %for.inc542, %for.body244
  %192 = load i32, i32* %ch, align 4, !dbg !6183
  %193 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6185
  %nb_channels246 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %193, i32 0, i32 6, !dbg !6186
  %194 = load i32, i32* %nb_channels246, align 8, !dbg !6186
  %cmp247 = icmp slt i32 %192, %194, !dbg !6187
  br i1 %cmp247, label %for.body249, label %for.end544, !dbg !6188

for.body249:                                      ; preds = %for.cond245
  %195 = load i32, i32* %gr, align 4, !dbg !6189
  %idxprom250 = sext i32 %195 to i64, !dbg !6190
  %196 = load i32, i32* %ch, align 4, !dbg !6191
  %idxprom251 = sext i32 %196 to i64, !dbg !6190
  %197 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6190
  %granules252 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %197, i32 0, i32 22, !dbg !6192
  %arrayidx253 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules252, i64 0, i64 %idxprom251, !dbg !6190
  %arrayidx254 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx253, i64 0, i64 %idxprom250, !dbg !6190
  store %struct.GranuleDef* %arrayidx254, %struct.GranuleDef** %g, align 8, !dbg !6193
  %198 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6194
  %gb255 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %198, i32 0, i32 14, !dbg !6195
  %call256 = call i32 @get_bits_count(%struct.GetBitContext* %gb255), !dbg !6196
  store i32 %call256, i32* %bits_pos, align 4, !dbg !6197
  %199 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6198
  %lsf257 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %199, i32 0, i32 9, !dbg !6199
  %200 = load i32, i32* %lsf257, align 4, !dbg !6199
  %tobool258 = icmp ne i32 %200, 0, !dbg !6198
  br i1 %tobool258, label %if.else426, label %if.then259, !dbg !6200

if.then259:                                       ; preds = %for.body249
  call void @llvm.dbg.declare(metadata i8** %sc, metadata !6201, metadata !2019), !dbg !6203
  call void @llvm.dbg.declare(metadata i32* %slen, metadata !6204, metadata !2019), !dbg !6205
  call void @llvm.dbg.declare(metadata i32* %slen1, metadata !6206, metadata !2019), !dbg !6207
  call void @llvm.dbg.declare(metadata i32* %slen2, metadata !6208, metadata !2019), !dbg !6209
  %201 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6210
  %scalefac_compress260 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %201, i32 0, i32 4, !dbg !6211
  %202 = load i32, i32* %scalefac_compress260, align 16, !dbg !6211
  %idxprom261 = sext i32 %202 to i64, !dbg !6212
  %arrayidx262 = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @slen_table, i64 0, i64 0), i64 0, i64 %idxprom261, !dbg !6212
  %203 = load i8, i8* %arrayidx262, align 1, !dbg !6212
  %conv263 = zext i8 %203 to i32, !dbg !6212
  store i32 %conv263, i32* %slen1, align 4, !dbg !6213
  %204 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6214
  %scalefac_compress264 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %204, i32 0, i32 4, !dbg !6215
  %205 = load i32, i32* %scalefac_compress264, align 16, !dbg !6215
  %idxprom265 = sext i32 %205 to i64, !dbg !6216
  %arrayidx266 = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @slen_table, i64 0, i64 1), i64 0, i64 %idxprom265, !dbg !6216
  %206 = load i8, i8* %arrayidx266, align 1, !dbg !6216
  %conv267 = zext i8 %206 to i32, !dbg !6216
  store i32 %conv267, i32* %slen2, align 4, !dbg !6217
  br label %do.body268, !dbg !6218, !llvm.loop !6219

do.body268:                                       ; preds = %if.then259
  br label %do.end269, !dbg !6220

do.end269:                                        ; preds = %do.body268
  %207 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6223
  %block_type270 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %207, i32 0, i32 5, !dbg !6225
  %208 = load i8, i8* %block_type270, align 4, !dbg !6225
  %conv271 = zext i8 %208 to i32, !dbg !6223
  %cmp272 = icmp eq i32 %conv271, 2, !dbg !6226
  br i1 %cmp272, label %if.then274, label %if.else347, !dbg !6227

if.then274:                                       ; preds = %do.end269
  %209 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6228
  %switch_point275 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %209, i32 0, i32 6, !dbg !6230
  %210 = load i8, i8* %switch_point275, align 1, !dbg !6230
  %conv276 = zext i8 %210 to i32, !dbg !6228
  %tobool277 = icmp ne i32 %conv276, 0, !dbg !6228
  %cond278 = select i1 %tobool277, i32 17, i32 18, !dbg !6228
  store i32 %cond278, i32* %n, align 4, !dbg !6231
  store i32 0, i32* %j, align 4, !dbg !6232
  %211 = load i32, i32* %slen1, align 4, !dbg !6233
  %tobool279 = icmp ne i32 %211, 0, !dbg !6233
  br i1 %tobool279, label %if.then280, label %if.else294, !dbg !6235

if.then280:                                       ; preds = %if.then274
  store i32 0, i32* %i, align 4, !dbg !6236
  br label %for.cond281, !dbg !6239

for.cond281:                                      ; preds = %for.inc291, %if.then280
  %212 = load i32, i32* %i, align 4, !dbg !6240
  %213 = load i32, i32* %n, align 4, !dbg !6243
  %cmp282 = icmp slt i32 %212, %213, !dbg !6244
  br i1 %cmp282, label %for.body284, label %for.end293, !dbg !6245

for.body284:                                      ; preds = %for.cond281
  %214 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6246
  %gb285 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %214, i32 0, i32 14, !dbg !6247
  %215 = load i32, i32* %slen1, align 4, !dbg !6248
  %call286 = call i32 @get_bits(%struct.GetBitContext* %gb285, i32 %215), !dbg !6249
  %conv287 = trunc i32 %call286 to i8, !dbg !6249
  %216 = load i32, i32* %j, align 4, !dbg !6250
  %inc288 = add nsw i32 %216, 1, !dbg !6250
  store i32 %inc288, i32* %j, align 4, !dbg !6250
  %idxprom289 = sext i32 %216 to i64, !dbg !6251
  %217 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6251
  %scale_factors = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %217, i32 0, i32 15, !dbg !6252
  %arrayidx290 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors, i64 0, i64 %idxprom289, !dbg !6251
  store i8 %conv287, i8* %arrayidx290, align 1, !dbg !6253
  br label %for.inc291, !dbg !6251

for.inc291:                                       ; preds = %for.body284
  %218 = load i32, i32* %i, align 4, !dbg !6254
  %inc292 = add nsw i32 %218, 1, !dbg !6254
  store i32 %inc292, i32* %i, align 4, !dbg !6254
  br label %for.cond281, !dbg !6256, !llvm.loop !6257

for.end293:                                       ; preds = %for.cond281
  br label %if.end306, !dbg !6259

if.else294:                                       ; preds = %if.then274
  store i32 0, i32* %i, align 4, !dbg !6260
  br label %for.cond295, !dbg !6263

for.cond295:                                      ; preds = %for.inc303, %if.else294
  %219 = load i32, i32* %i, align 4, !dbg !6264
  %220 = load i32, i32* %n, align 4, !dbg !6267
  %cmp296 = icmp slt i32 %219, %220, !dbg !6268
  br i1 %cmp296, label %for.body298, label %for.end305, !dbg !6269

for.body298:                                      ; preds = %for.cond295
  %221 = load i32, i32* %j, align 4, !dbg !6270
  %inc299 = add nsw i32 %221, 1, !dbg !6270
  store i32 %inc299, i32* %j, align 4, !dbg !6270
  %idxprom300 = sext i32 %221 to i64, !dbg !6271
  %222 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6271
  %scale_factors301 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %222, i32 0, i32 15, !dbg !6272
  %arrayidx302 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors301, i64 0, i64 %idxprom300, !dbg !6271
  store i8 0, i8* %arrayidx302, align 1, !dbg !6273
  br label %for.inc303, !dbg !6271

for.inc303:                                       ; preds = %for.body298
  %223 = load i32, i32* %i, align 4, !dbg !6274
  %inc304 = add nsw i32 %223, 1, !dbg !6274
  store i32 %inc304, i32* %i, align 4, !dbg !6274
  br label %for.cond295, !dbg !6276, !llvm.loop !6277

for.end305:                                       ; preds = %for.cond295
  br label %if.end306

if.end306:                                        ; preds = %for.end305, %for.end293
  %224 = load i32, i32* %slen2, align 4, !dbg !6279
  %tobool307 = icmp ne i32 %224, 0, !dbg !6279
  br i1 %tobool307, label %if.then308, label %if.else334, !dbg !6281

if.then308:                                       ; preds = %if.end306
  store i32 0, i32* %i, align 4, !dbg !6282
  br label %for.cond309, !dbg !6285

for.cond309:                                      ; preds = %for.inc320, %if.then308
  %225 = load i32, i32* %i, align 4, !dbg !6286
  %cmp310 = icmp slt i32 %225, 18, !dbg !6289
  br i1 %cmp310, label %for.body312, label %for.end322, !dbg !6290

for.body312:                                      ; preds = %for.cond309
  %226 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6291
  %gb313 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %226, i32 0, i32 14, !dbg !6292
  %227 = load i32, i32* %slen2, align 4, !dbg !6293
  %call314 = call i32 @get_bits(%struct.GetBitContext* %gb313, i32 %227), !dbg !6294
  %conv315 = trunc i32 %call314 to i8, !dbg !6294
  %228 = load i32, i32* %j, align 4, !dbg !6295
  %inc316 = add nsw i32 %228, 1, !dbg !6295
  store i32 %inc316, i32* %j, align 4, !dbg !6295
  %idxprom317 = sext i32 %228 to i64, !dbg !6296
  %229 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6296
  %scale_factors318 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %229, i32 0, i32 15, !dbg !6297
  %arrayidx319 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors318, i64 0, i64 %idxprom317, !dbg !6296
  store i8 %conv315, i8* %arrayidx319, align 1, !dbg !6298
  br label %for.inc320, !dbg !6296

for.inc320:                                       ; preds = %for.body312
  %230 = load i32, i32* %i, align 4, !dbg !6299
  %inc321 = add nsw i32 %230, 1, !dbg !6299
  store i32 %inc321, i32* %i, align 4, !dbg !6299
  br label %for.cond309, !dbg !6301, !llvm.loop !6302

for.end322:                                       ; preds = %for.cond309
  store i32 0, i32* %i, align 4, !dbg !6304
  br label %for.cond323, !dbg !6306

for.cond323:                                      ; preds = %for.inc331, %for.end322
  %231 = load i32, i32* %i, align 4, !dbg !6307
  %cmp324 = icmp slt i32 %231, 3, !dbg !6310
  br i1 %cmp324, label %for.body326, label %for.end333, !dbg !6311

for.body326:                                      ; preds = %for.cond323
  %232 = load i32, i32* %j, align 4, !dbg !6312
  %inc327 = add nsw i32 %232, 1, !dbg !6312
  store i32 %inc327, i32* %j, align 4, !dbg !6312
  %idxprom328 = sext i32 %232 to i64, !dbg !6313
  %233 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6313
  %scale_factors329 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %233, i32 0, i32 15, !dbg !6314
  %arrayidx330 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors329, i64 0, i64 %idxprom328, !dbg !6313
  store i8 0, i8* %arrayidx330, align 1, !dbg !6315
  br label %for.inc331, !dbg !6313

for.inc331:                                       ; preds = %for.body326
  %234 = load i32, i32* %i, align 4, !dbg !6316
  %inc332 = add nsw i32 %234, 1, !dbg !6316
  store i32 %inc332, i32* %i, align 4, !dbg !6316
  br label %for.cond323, !dbg !6318, !llvm.loop !6319

for.end333:                                       ; preds = %for.cond323
  br label %if.end346, !dbg !6321

if.else334:                                       ; preds = %if.end306
  store i32 0, i32* %i, align 4, !dbg !6322
  br label %for.cond335, !dbg !6325

for.cond335:                                      ; preds = %for.inc343, %if.else334
  %235 = load i32, i32* %i, align 4, !dbg !6326
  %cmp336 = icmp slt i32 %235, 21, !dbg !6329
  br i1 %cmp336, label %for.body338, label %for.end345, !dbg !6330

for.body338:                                      ; preds = %for.cond335
  %236 = load i32, i32* %j, align 4, !dbg !6331
  %inc339 = add nsw i32 %236, 1, !dbg !6331
  store i32 %inc339, i32* %j, align 4, !dbg !6331
  %idxprom340 = sext i32 %236 to i64, !dbg !6332
  %237 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6332
  %scale_factors341 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %237, i32 0, i32 15, !dbg !6333
  %arrayidx342 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors341, i64 0, i64 %idxprom340, !dbg !6332
  store i8 0, i8* %arrayidx342, align 1, !dbg !6334
  br label %for.inc343, !dbg !6332

for.inc343:                                       ; preds = %for.body338
  %238 = load i32, i32* %i, align 4, !dbg !6335
  %inc344 = add nsw i32 %238, 1, !dbg !6335
  store i32 %inc344, i32* %i, align 4, !dbg !6335
  br label %for.cond335, !dbg !6337, !llvm.loop !6338

for.end345:                                       ; preds = %for.cond335
  br label %if.end346

if.end346:                                        ; preds = %for.end345, %for.end333
  br label %if.end425, !dbg !6340

if.else347:                                       ; preds = %do.end269
  %239 = load i32, i32* %ch, align 4, !dbg !6341
  %idxprom348 = sext i32 %239 to i64, !dbg !6343
  %240 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6343
  %granules349 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %240, i32 0, i32 22, !dbg !6344
  %arrayidx350 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules349, i64 0, i64 %idxprom348, !dbg !6343
  %arrayidx351 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx350, i64 0, i64 0, !dbg !6343
  %scale_factors352 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %arrayidx351, i32 0, i32 15, !dbg !6345
  %arraydecay353 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors352, i32 0, i32 0, !dbg !6343
  store i8* %arraydecay353, i8** %sc, align 8, !dbg !6346
  store i32 0, i32* %j, align 4, !dbg !6347
  store i32 0, i32* %k, align 4, !dbg !6348
  br label %for.cond354, !dbg !6350

for.cond354:                                      ; preds = %for.inc418, %if.else347
  %241 = load i32, i32* %k, align 4, !dbg !6351
  %cmp355 = icmp slt i32 %241, 4, !dbg !6354
  br i1 %cmp355, label %for.body357, label %for.end420, !dbg !6355

for.body357:                                      ; preds = %for.cond354
  %242 = load i32, i32* %k, align 4, !dbg !6356
  %cmp358 = icmp eq i32 %242, 0, !dbg !6358
  %cond360 = select i1 %cmp358, i32 6, i32 5, !dbg !6356
  store i32 %cond360, i32* %n, align 4, !dbg !6359
  %243 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6360
  %scfsi361 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %243, i32 0, i32 0, !dbg !6362
  %244 = load i8, i8* %scfsi361, align 16, !dbg !6362
  %conv362 = zext i8 %244 to i32, !dbg !6360
  %245 = load i32, i32* %k, align 4, !dbg !6363
  %shr363 = ashr i32 8, %245, !dbg !6364
  %and364 = and i32 %conv362, %shr363, !dbg !6365
  %cmp365 = icmp eq i32 %and364, 0, !dbg !6366
  br i1 %cmp365, label %if.then367, label %if.else403, !dbg !6367

if.then367:                                       ; preds = %for.body357
  %246 = load i32, i32* %k, align 4, !dbg !6368
  %cmp368 = icmp slt i32 %246, 2, !dbg !6370
  br i1 %cmp368, label %cond.true370, label %cond.false371, !dbg !6371

cond.true370:                                     ; preds = %if.then367
  %247 = load i32, i32* %slen1, align 4, !dbg !6372
  br label %cond.end372, !dbg !6374

cond.false371:                                    ; preds = %if.then367
  %248 = load i32, i32* %slen2, align 4, !dbg !6375
  br label %cond.end372, !dbg !6377

cond.end372:                                      ; preds = %cond.false371, %cond.true370
  %cond373 = phi i32 [ %247, %cond.true370 ], [ %248, %cond.false371 ], !dbg !6378
  store i32 %cond373, i32* %slen, align 4, !dbg !6380
  %249 = load i32, i32* %slen, align 4, !dbg !6381
  %tobool374 = icmp ne i32 %249, 0, !dbg !6381
  br i1 %tobool374, label %if.then375, label %if.else390, !dbg !6383

if.then375:                                       ; preds = %cond.end372
  store i32 0, i32* %i, align 4, !dbg !6384
  br label %for.cond376, !dbg !6387

for.cond376:                                      ; preds = %for.inc387, %if.then375
  %250 = load i32, i32* %i, align 4, !dbg !6388
  %251 = load i32, i32* %n, align 4, !dbg !6391
  %cmp377 = icmp slt i32 %250, %251, !dbg !6392
  br i1 %cmp377, label %for.body379, label %for.end389, !dbg !6393

for.body379:                                      ; preds = %for.cond376
  %252 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6394
  %gb380 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %252, i32 0, i32 14, !dbg !6395
  %253 = load i32, i32* %slen, align 4, !dbg !6396
  %call381 = call i32 @get_bits(%struct.GetBitContext* %gb380, i32 %253), !dbg !6397
  %conv382 = trunc i32 %call381 to i8, !dbg !6397
  %254 = load i32, i32* %j, align 4, !dbg !6398
  %inc383 = add nsw i32 %254, 1, !dbg !6398
  store i32 %inc383, i32* %j, align 4, !dbg !6398
  %idxprom384 = sext i32 %254 to i64, !dbg !6399
  %255 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6399
  %scale_factors385 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %255, i32 0, i32 15, !dbg !6400
  %arrayidx386 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors385, i64 0, i64 %idxprom384, !dbg !6399
  store i8 %conv382, i8* %arrayidx386, align 1, !dbg !6401
  br label %for.inc387, !dbg !6399

for.inc387:                                       ; preds = %for.body379
  %256 = load i32, i32* %i, align 4, !dbg !6402
  %inc388 = add nsw i32 %256, 1, !dbg !6402
  store i32 %inc388, i32* %i, align 4, !dbg !6402
  br label %for.cond376, !dbg !6404, !llvm.loop !6405

for.end389:                                       ; preds = %for.cond376
  br label %if.end402, !dbg !6407

if.else390:                                       ; preds = %cond.end372
  store i32 0, i32* %i, align 4, !dbg !6408
  br label %for.cond391, !dbg !6411

for.cond391:                                      ; preds = %for.inc399, %if.else390
  %257 = load i32, i32* %i, align 4, !dbg !6412
  %258 = load i32, i32* %n, align 4, !dbg !6415
  %cmp392 = icmp slt i32 %257, %258, !dbg !6416
  br i1 %cmp392, label %for.body394, label %for.end401, !dbg !6417

for.body394:                                      ; preds = %for.cond391
  %259 = load i32, i32* %j, align 4, !dbg !6418
  %inc395 = add nsw i32 %259, 1, !dbg !6418
  store i32 %inc395, i32* %j, align 4, !dbg !6418
  %idxprom396 = sext i32 %259 to i64, !dbg !6419
  %260 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6419
  %scale_factors397 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %260, i32 0, i32 15, !dbg !6420
  %arrayidx398 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors397, i64 0, i64 %idxprom396, !dbg !6419
  store i8 0, i8* %arrayidx398, align 1, !dbg !6421
  br label %for.inc399, !dbg !6419

for.inc399:                                       ; preds = %for.body394
  %261 = load i32, i32* %i, align 4, !dbg !6422
  %inc400 = add nsw i32 %261, 1, !dbg !6422
  store i32 %inc400, i32* %i, align 4, !dbg !6422
  br label %for.cond391, !dbg !6424, !llvm.loop !6425

for.end401:                                       ; preds = %for.cond391
  br label %if.end402

if.end402:                                        ; preds = %for.end401, %for.end389
  br label %if.end417, !dbg !6427

if.else403:                                       ; preds = %for.body357
  store i32 0, i32* %i, align 4, !dbg !6428
  br label %for.cond404, !dbg !6431

for.cond404:                                      ; preds = %for.inc414, %if.else403
  %262 = load i32, i32* %i, align 4, !dbg !6432
  %263 = load i32, i32* %n, align 4, !dbg !6435
  %cmp405 = icmp slt i32 %262, %263, !dbg !6436
  br i1 %cmp405, label %for.body407, label %for.end416, !dbg !6437

for.body407:                                      ; preds = %for.cond404
  %264 = load i32, i32* %j, align 4, !dbg !6438
  %idxprom408 = sext i32 %264 to i64, !dbg !6440
  %265 = load i8*, i8** %sc, align 8, !dbg !6440
  %arrayidx409 = getelementptr inbounds i8, i8* %265, i64 %idxprom408, !dbg !6440
  %266 = load i8, i8* %arrayidx409, align 1, !dbg !6440
  %267 = load i32, i32* %j, align 4, !dbg !6441
  %idxprom410 = sext i32 %267 to i64, !dbg !6442
  %268 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6442
  %scale_factors411 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %268, i32 0, i32 15, !dbg !6443
  %arrayidx412 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors411, i64 0, i64 %idxprom410, !dbg !6442
  store i8 %266, i8* %arrayidx412, align 1, !dbg !6444
  %269 = load i32, i32* %j, align 4, !dbg !6445
  %inc413 = add nsw i32 %269, 1, !dbg !6445
  store i32 %inc413, i32* %j, align 4, !dbg !6445
  br label %for.inc414, !dbg !6446

for.inc414:                                       ; preds = %for.body407
  %270 = load i32, i32* %i, align 4, !dbg !6447
  %inc415 = add nsw i32 %270, 1, !dbg !6447
  store i32 %inc415, i32* %i, align 4, !dbg !6447
  br label %for.cond404, !dbg !6449, !llvm.loop !6450

for.end416:                                       ; preds = %for.cond404
  br label %if.end417

if.end417:                                        ; preds = %for.end416, %if.end402
  br label %for.inc418, !dbg !6452

for.inc418:                                       ; preds = %if.end417
  %271 = load i32, i32* %k, align 4, !dbg !6453
  %inc419 = add nsw i32 %271, 1, !dbg !6453
  store i32 %inc419, i32* %k, align 4, !dbg !6453
  br label %for.cond354, !dbg !6455, !llvm.loop !6456

for.end420:                                       ; preds = %for.cond354
  %272 = load i32, i32* %j, align 4, !dbg !6458
  %inc421 = add nsw i32 %272, 1, !dbg !6458
  store i32 %inc421, i32* %j, align 4, !dbg !6458
  %idxprom422 = sext i32 %272 to i64, !dbg !6459
  %273 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6459
  %scale_factors423 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %273, i32 0, i32 15, !dbg !6460
  %arrayidx424 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors423, i64 0, i64 %idxprom422, !dbg !6459
  store i8 0, i8* %arrayidx424, align 1, !dbg !6461
  br label %if.end425

if.end425:                                        ; preds = %for.end420, %if.end346
  br label %if.end536, !dbg !6462

if.else426:                                       ; preds = %for.body249
  call void @llvm.dbg.declare(metadata i32* %tindex, metadata !6463, metadata !2019), !dbg !6464
  call void @llvm.dbg.declare(metadata i32* %tindex2, metadata !6465, metadata !2019), !dbg !6466
  call void @llvm.dbg.declare(metadata [4 x i32]* %slen427, metadata !6467, metadata !2019), !dbg !6468
  call void @llvm.dbg.declare(metadata i32* %sl, metadata !6469, metadata !2019), !dbg !6470
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !6471, metadata !2019), !dbg !6472
  %274 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6473
  %block_type428 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %274, i32 0, i32 5, !dbg !6475
  %275 = load i8, i8* %block_type428, align 4, !dbg !6475
  %conv429 = zext i8 %275 to i32, !dbg !6473
  %cmp430 = icmp eq i32 %conv429, 2, !dbg !6476
  br i1 %cmp430, label %if.then432, label %if.else437, !dbg !6477

if.then432:                                       ; preds = %if.else426
  %276 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6478
  %switch_point433 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %276, i32 0, i32 6, !dbg !6479
  %277 = load i8, i8* %switch_point433, align 1, !dbg !6479
  %conv434 = zext i8 %277 to i32, !dbg !6478
  %tobool435 = icmp ne i32 %conv434, 0, !dbg !6478
  %cond436 = select i1 %tobool435, i32 2, i32 1, !dbg !6478
  store i32 %cond436, i32* %tindex, align 4, !dbg !6480
  br label %if.end438, !dbg !6481

if.else437:                                       ; preds = %if.else426
  store i32 0, i32* %tindex, align 4, !dbg !6482
  br label %if.end438

if.end438:                                        ; preds = %if.else437, %if.then432
  %278 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !6483
  %scalefac_compress439 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %278, i32 0, i32 4, !dbg !6484
  %279 = load i32, i32* %scalefac_compress439, align 16, !dbg !6484
  store i32 %279, i32* %sf, align 4, !dbg !6485
  %280 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !6486
  %mode_ext440 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %280, i32 0, i32 8, !dbg !6487
  %281 = load i32, i32* %mode_ext440, align 32, !dbg !6487
  %and441 = and i32 %281, 1, !dbg !6488
  %tobool442 = icmp ne i32 %and441, 0, !dbg !6488
  br i1 %tobool442, label %land.lhs.true443, label %if.else463, !dbg !6489

land.lhs.true443:                                 ; preds = %if.end438
  %282 = load i32, i32* %ch, align 4, !dbg !6490
  %cmp444 = icmp eq i32 %282, 1, !dbg !6492
  br i1 %cmp444, label %if.then446, label %if.else463, !dbg !6493

if.then446:                                       ; preds = %land.lhs.true443
  %283 = load i32, i32* %sf, align 4, !dbg !6494
  %shr447 = ashr i32 %283, 1, !dbg !6494
  store i32 %shr447, i32* %sf, align 4, !dbg !6494
  %284 = load i32, i32* %sf, align 4, !dbg !6495
  %cmp448 = icmp slt i32 %284, 180, !dbg !6496
  br i1 %cmp448, label %if.then450, label %if.else452, !dbg !6497

if.then450:                                       ; preds = %if.then446
  %arraydecay451 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !6498
  %285 = load i32, i32* %sf, align 4, !dbg !6499
  store i32* %arraydecay451, i32** %slen.addr.i, align 8, !dbg !6500
  store i32 %285, i32* %sf.addr.i, align 4, !dbg !6500
  store i32 6, i32* %n1.addr.i, align 4, !dbg !6500
  store i32 6, i32* %n2.addr.i, align 4, !dbg !6500
  store i32 0, i32* %n3.addr.i, align 4, !dbg !6500
  %286 = load i32, i32* %n3.addr.i, align 4, !dbg !6501
  %cmp.i595 = icmp eq i32 %286, 3, !dbg !6502
  br i1 %cmp.i595, label %if.then.i596, label %if.else.i597, !dbg !6503

if.then.i596:                                     ; preds = %if.then450
  %287 = load i32, i32* %sf.addr.i, align 4, !dbg !6504
  %mul.i = mul nsw i32 %287, 171, !dbg !6506
  %shr.i = ashr i32 %mul.i, 9, !dbg !6507
  store i32 %shr.i, i32* %m.i, align 4, !dbg !6508
  %288 = load i32, i32* %sf.addr.i, align 4, !dbg !6509
  %289 = load i32, i32* %m.i, align 4, !dbg !6510
  %mul1.i = mul nsw i32 3, %289, !dbg !6511
  %sub.i = sub nsw i32 %288, %mul1.i, !dbg !6512
  %290 = load i32*, i32** %slen.addr.i, align 8, !dbg !6513
  %arrayidx.i = getelementptr inbounds i32, i32* %290, i64 3, !dbg !6513
  store i32 %sub.i, i32* %arrayidx.i, align 4, !dbg !6514
  %291 = load i32, i32* %m.i, align 4, !dbg !6515
  store i32 %291, i32* %sf.addr.i, align 4, !dbg !6516
  br label %if.end28.i, !dbg !6517

if.else.i597:                                     ; preds = %if.then450
  %292 = load i32, i32* %n3.addr.i, align 4, !dbg !6518
  %cmp2.i = icmp eq i32 %292, 4, !dbg !6520
  br i1 %cmp2.i, label %if.then3.i, label %if.else6.i, !dbg !6518

if.then3.i:                                       ; preds = %if.else.i597
  %293 = load i32, i32* %sf.addr.i, align 4, !dbg !6521
  %and.i = and i32 %293, 3, !dbg !6524
  %294 = load i32*, i32** %slen.addr.i, align 8, !dbg !6525
  %arrayidx4.i = getelementptr inbounds i32, i32* %294, i64 3, !dbg !6525
  store i32 %and.i, i32* %arrayidx4.i, align 4, !dbg !6526
  %295 = load i32, i32* %sf.addr.i, align 4, !dbg !6527
  %shr5.i = ashr i32 %295, 2, !dbg !6527
  store i32 %shr5.i, i32* %sf.addr.i, align 4, !dbg !6527
  br label %if.end27.i, !dbg !6528

if.else6.i:                                       ; preds = %if.else.i597
  %296 = load i32, i32* %n3.addr.i, align 4, !dbg !6529
  %cmp7.i = icmp eq i32 %296, 5, !dbg !6531
  br i1 %cmp7.i, label %if.then8.i, label %if.else15.i, !dbg !6529

if.then8.i:                                       ; preds = %if.else6.i
  %297 = load i32, i32* %sf.addr.i, align 4, !dbg !6532
  %mul10.i = mul nsw i32 %297, 205, !dbg !6534
  %shr11.i = ashr i32 %mul10.i, 10, !dbg !6535
  store i32 %shr11.i, i32* %m9.i, align 4, !dbg !6536
  %298 = load i32, i32* %sf.addr.i, align 4, !dbg !6537
  %299 = load i32, i32* %m9.i, align 4, !dbg !6538
  %mul12.i = mul nsw i32 5, %299, !dbg !6539
  %sub13.i = sub nsw i32 %298, %mul12.i, !dbg !6540
  %300 = load i32*, i32** %slen.addr.i, align 8, !dbg !6541
  %arrayidx14.i = getelementptr inbounds i32, i32* %300, i64 3, !dbg !6541
  store i32 %sub13.i, i32* %arrayidx14.i, align 4, !dbg !6542
  %301 = load i32, i32* %m9.i, align 4, !dbg !6543
  store i32 %301, i32* %sf.addr.i, align 4, !dbg !6544
  br label %if.end26.i, !dbg !6545

if.else15.i:                                      ; preds = %if.else6.i
  %302 = load i32, i32* %n3.addr.i, align 4, !dbg !6546
  %cmp16.i = icmp eq i32 %302, 6, !dbg !6548
  br i1 %cmp16.i, label %if.then17.i, label %if.else24.i, !dbg !6546

if.then17.i:                                      ; preds = %if.else15.i
  %303 = load i32, i32* %sf.addr.i, align 4, !dbg !6549
  %mul19.i = mul nsw i32 %303, 171, !dbg !6551
  %shr20.i = ashr i32 %mul19.i, 10, !dbg !6552
  store i32 %shr20.i, i32* %m18.i, align 4, !dbg !6553
  %304 = load i32, i32* %sf.addr.i, align 4, !dbg !6554
  %305 = load i32, i32* %m18.i, align 4, !dbg !6555
  %mul21.i = mul nsw i32 6, %305, !dbg !6556
  %sub22.i = sub nsw i32 %304, %mul21.i, !dbg !6557
  %306 = load i32*, i32** %slen.addr.i, align 8, !dbg !6558
  %arrayidx23.i = getelementptr inbounds i32, i32* %306, i64 3, !dbg !6558
  store i32 %sub22.i, i32* %arrayidx23.i, align 4, !dbg !6559
  %307 = load i32, i32* %m18.i, align 4, !dbg !6560
  store i32 %307, i32* %sf.addr.i, align 4, !dbg !6561
  br label %if.end.i, !dbg !6562

if.else24.i:                                      ; preds = %if.else15.i
  %308 = load i32*, i32** %slen.addr.i, align 8, !dbg !6563
  %arrayidx25.i = getelementptr inbounds i32, i32* %308, i64 3, !dbg !6563
  store i32 0, i32* %arrayidx25.i, align 4, !dbg !6566
  br label %if.end.i, !dbg !6500

if.end.i:                                         ; preds = %if.else24.i, %if.then17.i
  br label %if.end26.i, !dbg !6500

if.end26.i:                                       ; preds = %if.end.i, %if.then8.i
  br label %if.end27.i, !dbg !6500

if.end27.i:                                       ; preds = %if.end26.i, %if.then3.i
  br label %if.end28.i, !dbg !6500

if.end28.i:                                       ; preds = %if.end27.i, %if.then.i596
  %309 = load i32, i32* %n2.addr.i, align 4, !dbg !6567
  %cmp29.i = icmp eq i32 %309, 3, !dbg !6568
  br i1 %cmp29.i, label %if.then30.i, label %if.else37.i, !dbg !6569

if.then30.i:                                      ; preds = %if.end28.i
  %310 = load i32, i32* %sf.addr.i, align 4, !dbg !6570
  %mul32.i = mul nsw i32 %310, 171, !dbg !6572
  %shr33.i = ashr i32 %mul32.i, 9, !dbg !6573
  store i32 %shr33.i, i32* %m31.i, align 4, !dbg !6574
  %311 = load i32, i32* %sf.addr.i, align 4, !dbg !6575
  %312 = load i32, i32* %m31.i, align 4, !dbg !6576
  %mul34.i = mul nsw i32 3, %312, !dbg !6577
  %sub35.i = sub nsw i32 %311, %mul34.i, !dbg !6578
  %313 = load i32*, i32** %slen.addr.i, align 8, !dbg !6579
  %arrayidx36.i = getelementptr inbounds i32, i32* %313, i64 2, !dbg !6579
  store i32 %sub35.i, i32* %arrayidx36.i, align 4, !dbg !6580
  %314 = load i32, i32* %m31.i, align 4, !dbg !6581
  store i32 %314, i32* %sf.addr.i, align 4, !dbg !6582
  br label %if.end66.i, !dbg !6583

if.else37.i:                                      ; preds = %if.end28.i
  %315 = load i32, i32* %n2.addr.i, align 4, !dbg !6584
  %cmp38.i = icmp eq i32 %315, 4, !dbg !6586
  br i1 %cmp38.i, label %if.then39.i, label %if.else43.i, !dbg !6584

if.then39.i:                                      ; preds = %if.else37.i
  %316 = load i32, i32* %sf.addr.i, align 4, !dbg !6587
  %and40.i = and i32 %316, 3, !dbg !6590
  %317 = load i32*, i32** %slen.addr.i, align 8, !dbg !6591
  %arrayidx41.i = getelementptr inbounds i32, i32* %317, i64 2, !dbg !6591
  store i32 %and40.i, i32* %arrayidx41.i, align 4, !dbg !6592
  %318 = load i32, i32* %sf.addr.i, align 4, !dbg !6593
  %shr42.i = ashr i32 %318, 2, !dbg !6593
  store i32 %shr42.i, i32* %sf.addr.i, align 4, !dbg !6593
  br label %if.end65.i, !dbg !6594

if.else43.i:                                      ; preds = %if.else37.i
  %319 = load i32, i32* %n2.addr.i, align 4, !dbg !6595
  %cmp44.i = icmp eq i32 %319, 5, !dbg !6597
  br i1 %cmp44.i, label %if.then45.i, label %if.else52.i, !dbg !6595

if.then45.i:                                      ; preds = %if.else43.i
  %320 = load i32, i32* %sf.addr.i, align 4, !dbg !6598
  %mul47.i = mul nsw i32 %320, 205, !dbg !6600
  %shr48.i = ashr i32 %mul47.i, 10, !dbg !6601
  store i32 %shr48.i, i32* %m46.i, align 4, !dbg !6602
  %321 = load i32, i32* %sf.addr.i, align 4, !dbg !6603
  %322 = load i32, i32* %m46.i, align 4, !dbg !6604
  %mul49.i = mul nsw i32 5, %322, !dbg !6605
  %sub50.i = sub nsw i32 %321, %mul49.i, !dbg !6606
  %323 = load i32*, i32** %slen.addr.i, align 8, !dbg !6607
  %arrayidx51.i = getelementptr inbounds i32, i32* %323, i64 2, !dbg !6607
  store i32 %sub50.i, i32* %arrayidx51.i, align 4, !dbg !6608
  %324 = load i32, i32* %m46.i, align 4, !dbg !6609
  store i32 %324, i32* %sf.addr.i, align 4, !dbg !6610
  br label %if.end64.i, !dbg !6611

if.else52.i:                                      ; preds = %if.else43.i
  %325 = load i32, i32* %n2.addr.i, align 4, !dbg !6612
  %cmp53.i = icmp eq i32 %325, 6, !dbg !6614
  br i1 %cmp53.i, label %if.then54.i, label %if.else61.i, !dbg !6612

if.then54.i:                                      ; preds = %if.else52.i
  %326 = load i32, i32* %sf.addr.i, align 4, !dbg !6615
  %mul56.i = mul nsw i32 %326, 171, !dbg !6617
  %shr57.i = ashr i32 %mul56.i, 10, !dbg !6618
  store i32 %shr57.i, i32* %m55.i, align 4, !dbg !6619
  %327 = load i32, i32* %sf.addr.i, align 4, !dbg !6620
  %328 = load i32, i32* %m55.i, align 4, !dbg !6621
  %mul58.i = mul nsw i32 6, %328, !dbg !6622
  %sub59.i = sub nsw i32 %327, %mul58.i, !dbg !6623
  %329 = load i32*, i32** %slen.addr.i, align 8, !dbg !6624
  %arrayidx60.i = getelementptr inbounds i32, i32* %329, i64 2, !dbg !6624
  store i32 %sub59.i, i32* %arrayidx60.i, align 4, !dbg !6625
  %330 = load i32, i32* %m55.i, align 4, !dbg !6626
  store i32 %330, i32* %sf.addr.i, align 4, !dbg !6627
  br label %if.end63.i, !dbg !6628

if.else61.i:                                      ; preds = %if.else52.i
  %331 = load i32*, i32** %slen.addr.i, align 8, !dbg !6629
  %arrayidx62.i = getelementptr inbounds i32, i32* %331, i64 2, !dbg !6629
  store i32 0, i32* %arrayidx62.i, align 4, !dbg !6632
  br label %if.end63.i, !dbg !6500

if.end63.i:                                       ; preds = %if.else61.i, %if.then54.i
  br label %if.end64.i, !dbg !6500

if.end64.i:                                       ; preds = %if.end63.i, %if.then45.i
  br label %if.end65.i, !dbg !6500

if.end65.i:                                       ; preds = %if.end64.i, %if.then39.i
  br label %if.end66.i, !dbg !6500

if.end66.i:                                       ; preds = %if.end65.i, %if.then30.i
  %332 = load i32, i32* %n1.addr.i, align 4, !dbg !6633
  %cmp67.i = icmp eq i32 %332, 3, !dbg !6634
  br i1 %cmp67.i, label %if.then68.i, label %if.else75.i, !dbg !6635

if.then68.i:                                      ; preds = %if.end66.i
  %333 = load i32, i32* %sf.addr.i, align 4, !dbg !6636
  %mul70.i = mul nsw i32 %333, 171, !dbg !6638
  %shr71.i = ashr i32 %mul70.i, 9, !dbg !6639
  store i32 %shr71.i, i32* %m69.i, align 4, !dbg !6640
  %334 = load i32, i32* %sf.addr.i, align 4, !dbg !6641
  %335 = load i32, i32* %m69.i, align 4, !dbg !6642
  %mul72.i = mul nsw i32 3, %335, !dbg !6643
  %sub73.i = sub nsw i32 %334, %mul72.i, !dbg !6644
  %336 = load i32*, i32** %slen.addr.i, align 8, !dbg !6645
  %arrayidx74.i = getelementptr inbounds i32, i32* %336, i64 1, !dbg !6645
  store i32 %sub73.i, i32* %arrayidx74.i, align 4, !dbg !6646
  %337 = load i32, i32* %m69.i, align 4, !dbg !6647
  store i32 %337, i32* %sf.addr.i, align 4, !dbg !6648
  br label %lsf_sf_expand.exit, !dbg !6649

if.else75.i:                                      ; preds = %if.end66.i
  %338 = load i32, i32* %n1.addr.i, align 4, !dbg !6650
  %cmp76.i = icmp eq i32 %338, 4, !dbg !6652
  br i1 %cmp76.i, label %if.then77.i, label %if.else81.i, !dbg !6650

if.then77.i:                                      ; preds = %if.else75.i
  %339 = load i32, i32* %sf.addr.i, align 4, !dbg !6653
  %and78.i = and i32 %339, 3, !dbg !6656
  %340 = load i32*, i32** %slen.addr.i, align 8, !dbg !6657
  %arrayidx79.i = getelementptr inbounds i32, i32* %340, i64 1, !dbg !6657
  store i32 %and78.i, i32* %arrayidx79.i, align 4, !dbg !6658
  %341 = load i32, i32* %sf.addr.i, align 4, !dbg !6659
  %shr80.i = ashr i32 %341, 2, !dbg !6659
  store i32 %shr80.i, i32* %sf.addr.i, align 4, !dbg !6659
  br label %if.end103.i, !dbg !6660

if.else81.i:                                      ; preds = %if.else75.i
  %342 = load i32, i32* %n1.addr.i, align 4, !dbg !6661
  %cmp82.i = icmp eq i32 %342, 5, !dbg !6663
  br i1 %cmp82.i, label %if.then83.i, label %if.else90.i, !dbg !6661

if.then83.i:                                      ; preds = %if.else81.i
  %343 = load i32, i32* %sf.addr.i, align 4, !dbg !6664
  %mul85.i = mul nsw i32 %343, 205, !dbg !6666
  %shr86.i = ashr i32 %mul85.i, 10, !dbg !6667
  store i32 %shr86.i, i32* %m84.i, align 4, !dbg !6668
  %344 = load i32, i32* %sf.addr.i, align 4, !dbg !6669
  %345 = load i32, i32* %m84.i, align 4, !dbg !6670
  %mul87.i = mul nsw i32 5, %345, !dbg !6671
  %sub88.i = sub nsw i32 %344, %mul87.i, !dbg !6672
  %346 = load i32*, i32** %slen.addr.i, align 8, !dbg !6673
  %arrayidx89.i = getelementptr inbounds i32, i32* %346, i64 1, !dbg !6673
  store i32 %sub88.i, i32* %arrayidx89.i, align 4, !dbg !6674
  %347 = load i32, i32* %m84.i, align 4, !dbg !6675
  store i32 %347, i32* %sf.addr.i, align 4, !dbg !6676
  br label %if.end102.i, !dbg !6677

if.else90.i:                                      ; preds = %if.else81.i
  %348 = load i32, i32* %n1.addr.i, align 4, !dbg !6678
  %cmp91.i = icmp eq i32 %348, 6, !dbg !6680
  br i1 %cmp91.i, label %if.then92.i, label %if.else99.i, !dbg !6678

if.then92.i:                                      ; preds = %if.else90.i
  %349 = load i32, i32* %sf.addr.i, align 4, !dbg !6681
  %mul94.i = mul nsw i32 %349, 171, !dbg !6683
  %shr95.i = ashr i32 %mul94.i, 10, !dbg !6684
  store i32 %shr95.i, i32* %m93.i, align 4, !dbg !6685
  %350 = load i32, i32* %sf.addr.i, align 4, !dbg !6686
  %351 = load i32, i32* %m93.i, align 4, !dbg !6687
  %mul96.i = mul nsw i32 6, %351, !dbg !6688
  %sub97.i = sub nsw i32 %350, %mul96.i, !dbg !6689
  %352 = load i32*, i32** %slen.addr.i, align 8, !dbg !6690
  %arrayidx98.i = getelementptr inbounds i32, i32* %352, i64 1, !dbg !6690
  store i32 %sub97.i, i32* %arrayidx98.i, align 4, !dbg !6691
  %353 = load i32, i32* %m93.i, align 4, !dbg !6692
  store i32 %353, i32* %sf.addr.i, align 4, !dbg !6693
  br label %if.end101.i, !dbg !6694

if.else99.i:                                      ; preds = %if.else90.i
  %354 = load i32*, i32** %slen.addr.i, align 8, !dbg !6695
  %arrayidx100.i = getelementptr inbounds i32, i32* %354, i64 1, !dbg !6695
  store i32 0, i32* %arrayidx100.i, align 4, !dbg !6698
  br label %if.end101.i, !dbg !6500

if.end101.i:                                      ; preds = %if.else99.i, %if.then92.i
  br label %if.end102.i, !dbg !6500

if.end102.i:                                      ; preds = %if.end101.i, %if.then83.i
  br label %if.end103.i, !dbg !6500

if.end103.i:                                      ; preds = %if.end102.i, %if.then77.i
  br label %lsf_sf_expand.exit, !dbg !6500

lsf_sf_expand.exit:                               ; preds = %if.then68.i, %if.end103.i
  %355 = load i32, i32* %sf.addr.i, align 4, !dbg !6699
  %356 = load i32*, i32** %slen.addr.i, align 8, !dbg !6700
  store i32 %355, i32* %356, align 4, !dbg !6701
  store i32 3, i32* %tindex2, align 4, !dbg !6702
  br label %if.end462, !dbg !6703

if.else452:                                       ; preds = %if.then446
  %357 = load i32, i32* %sf, align 4, !dbg !6704
  %cmp453 = icmp slt i32 %357, 244, !dbg !6706
  br i1 %cmp453, label %if.then455, label %if.else458, !dbg !6704

if.then455:                                       ; preds = %if.else452
  %arraydecay456 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !6707
  %358 = load i32, i32* %sf, align 4, !dbg !6708
  %sub457 = sub nsw i32 %358, 180, !dbg !6709
  store i32* %arraydecay456, i32** %slen.addr.i598, align 8, !dbg !6710
  store i32 %sub457, i32* %sf.addr.i599, align 4, !dbg !6710
  store i32 4, i32* %n1.addr.i600, align 4, !dbg !6710
  store i32 4, i32* %n2.addr.i601, align 4, !dbg !6710
  store i32 0, i32* %n3.addr.i602, align 4, !dbg !6710
  %359 = load i32, i32* %n3.addr.i602, align 4, !dbg !6711
  %cmp.i612 = icmp eq i32 %359, 3, !dbg !6712
  br i1 %cmp.i612, label %if.then.i618, label %if.else.i620, !dbg !6713

if.then.i618:                                     ; preds = %if.then455
  %360 = load i32, i32* %sf.addr.i599, align 4, !dbg !6714
  %mul.i613 = mul nsw i32 %360, 171, !dbg !6715
  %shr.i614 = ashr i32 %mul.i613, 9, !dbg !6716
  store i32 %shr.i614, i32* %m.i603, align 4, !dbg !6717
  %361 = load i32, i32* %sf.addr.i599, align 4, !dbg !6718
  %362 = load i32, i32* %m.i603, align 4, !dbg !6719
  %mul1.i615 = mul nsw i32 3, %362, !dbg !6720
  %sub.i616 = sub nsw i32 %361, %mul1.i615, !dbg !6721
  %363 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6722
  %arrayidx.i617 = getelementptr inbounds i32, i32* %363, i64 3, !dbg !6722
  store i32 %sub.i616, i32* %arrayidx.i617, align 4, !dbg !6723
  %364 = load i32, i32* %m.i603, align 4, !dbg !6724
  store i32 %364, i32* %sf.addr.i599, align 4, !dbg !6725
  br label %if.end28.i647, !dbg !6726

if.else.i620:                                     ; preds = %if.then455
  %365 = load i32, i32* %n3.addr.i602, align 4, !dbg !6727
  %cmp2.i619 = icmp eq i32 %365, 4, !dbg !6728
  br i1 %cmp2.i619, label %if.then3.i624, label %if.else6.i626, !dbg !6727

if.then3.i624:                                    ; preds = %if.else.i620
  %366 = load i32, i32* %sf.addr.i599, align 4, !dbg !6729
  %and.i621 = and i32 %366, 3, !dbg !6730
  %367 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6731
  %arrayidx4.i622 = getelementptr inbounds i32, i32* %367, i64 3, !dbg !6731
  store i32 %and.i621, i32* %arrayidx4.i622, align 4, !dbg !6732
  %368 = load i32, i32* %sf.addr.i599, align 4, !dbg !6733
  %shr5.i623 = ashr i32 %368, 2, !dbg !6733
  store i32 %shr5.i623, i32* %sf.addr.i599, align 4, !dbg !6733
  br label %if.end27.i645, !dbg !6734

if.else6.i626:                                    ; preds = %if.else.i620
  %369 = load i32, i32* %n3.addr.i602, align 4, !dbg !6735
  %cmp7.i625 = icmp eq i32 %369, 5, !dbg !6736
  br i1 %cmp7.i625, label %if.then8.i632, label %if.else15.i634, !dbg !6735

if.then8.i632:                                    ; preds = %if.else6.i626
  %370 = load i32, i32* %sf.addr.i599, align 4, !dbg !6737
  %mul10.i627 = mul nsw i32 %370, 205, !dbg !6738
  %shr11.i628 = ashr i32 %mul10.i627, 10, !dbg !6739
  store i32 %shr11.i628, i32* %m9.i604, align 4, !dbg !6740
  %371 = load i32, i32* %sf.addr.i599, align 4, !dbg !6741
  %372 = load i32, i32* %m9.i604, align 4, !dbg !6742
  %mul12.i629 = mul nsw i32 5, %372, !dbg !6743
  %sub13.i630 = sub nsw i32 %371, %mul12.i629, !dbg !6744
  %373 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6745
  %arrayidx14.i631 = getelementptr inbounds i32, i32* %373, i64 3, !dbg !6745
  store i32 %sub13.i630, i32* %arrayidx14.i631, align 4, !dbg !6746
  %374 = load i32, i32* %m9.i604, align 4, !dbg !6747
  store i32 %374, i32* %sf.addr.i599, align 4, !dbg !6748
  br label %if.end26.i644, !dbg !6749

if.else15.i634:                                   ; preds = %if.else6.i626
  %375 = load i32, i32* %n3.addr.i602, align 4, !dbg !6750
  %cmp16.i633 = icmp eq i32 %375, 6, !dbg !6751
  br i1 %cmp16.i633, label %if.then17.i640, label %if.else24.i642, !dbg !6750

if.then17.i640:                                   ; preds = %if.else15.i634
  %376 = load i32, i32* %sf.addr.i599, align 4, !dbg !6752
  %mul19.i635 = mul nsw i32 %376, 171, !dbg !6753
  %shr20.i636 = ashr i32 %mul19.i635, 10, !dbg !6754
  store i32 %shr20.i636, i32* %m18.i605, align 4, !dbg !6755
  %377 = load i32, i32* %sf.addr.i599, align 4, !dbg !6756
  %378 = load i32, i32* %m18.i605, align 4, !dbg !6757
  %mul21.i637 = mul nsw i32 6, %378, !dbg !6758
  %sub22.i638 = sub nsw i32 %377, %mul21.i637, !dbg !6759
  %379 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6760
  %arrayidx23.i639 = getelementptr inbounds i32, i32* %379, i64 3, !dbg !6760
  store i32 %sub22.i638, i32* %arrayidx23.i639, align 4, !dbg !6761
  %380 = load i32, i32* %m18.i605, align 4, !dbg !6762
  store i32 %380, i32* %sf.addr.i599, align 4, !dbg !6763
  br label %if.end.i643, !dbg !6764

if.else24.i642:                                   ; preds = %if.else15.i634
  %381 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6765
  %arrayidx25.i641 = getelementptr inbounds i32, i32* %381, i64 3, !dbg !6765
  store i32 0, i32* %arrayidx25.i641, align 4, !dbg !6766
  br label %if.end.i643, !dbg !6710

if.end.i643:                                      ; preds = %if.else24.i642, %if.then17.i640
  br label %if.end26.i644, !dbg !6710

if.end26.i644:                                    ; preds = %if.end.i643, %if.then8.i632
  br label %if.end27.i645, !dbg !6710

if.end27.i645:                                    ; preds = %if.end26.i644, %if.then3.i624
  br label %if.end28.i647, !dbg !6710

if.end28.i647:                                    ; preds = %if.end27.i645, %if.then.i618
  %382 = load i32, i32* %n2.addr.i601, align 4, !dbg !6767
  %cmp29.i646 = icmp eq i32 %382, 3, !dbg !6768
  br i1 %cmp29.i646, label %if.then30.i653, label %if.else37.i655, !dbg !6769

if.then30.i653:                                   ; preds = %if.end28.i647
  %383 = load i32, i32* %sf.addr.i599, align 4, !dbg !6770
  %mul32.i648 = mul nsw i32 %383, 171, !dbg !6771
  %shr33.i649 = ashr i32 %mul32.i648, 9, !dbg !6772
  store i32 %shr33.i649, i32* %m31.i606, align 4, !dbg !6773
  %384 = load i32, i32* %sf.addr.i599, align 4, !dbg !6774
  %385 = load i32, i32* %m31.i606, align 4, !dbg !6775
  %mul34.i650 = mul nsw i32 3, %385, !dbg !6776
  %sub35.i651 = sub nsw i32 %384, %mul34.i650, !dbg !6777
  %386 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6778
  %arrayidx36.i652 = getelementptr inbounds i32, i32* %386, i64 2, !dbg !6778
  store i32 %sub35.i651, i32* %arrayidx36.i652, align 4, !dbg !6779
  %387 = load i32, i32* %m31.i606, align 4, !dbg !6780
  store i32 %387, i32* %sf.addr.i599, align 4, !dbg !6781
  br label %if.end66.i682, !dbg !6782

if.else37.i655:                                   ; preds = %if.end28.i647
  %388 = load i32, i32* %n2.addr.i601, align 4, !dbg !6783
  %cmp38.i654 = icmp eq i32 %388, 4, !dbg !6784
  br i1 %cmp38.i654, label %if.then39.i659, label %if.else43.i661, !dbg !6783

if.then39.i659:                                   ; preds = %if.else37.i655
  %389 = load i32, i32* %sf.addr.i599, align 4, !dbg !6785
  %and40.i656 = and i32 %389, 3, !dbg !6786
  %390 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6787
  %arrayidx41.i657 = getelementptr inbounds i32, i32* %390, i64 2, !dbg !6787
  store i32 %and40.i656, i32* %arrayidx41.i657, align 4, !dbg !6788
  %391 = load i32, i32* %sf.addr.i599, align 4, !dbg !6789
  %shr42.i658 = ashr i32 %391, 2, !dbg !6789
  store i32 %shr42.i658, i32* %sf.addr.i599, align 4, !dbg !6789
  br label %if.end65.i680, !dbg !6790

if.else43.i661:                                   ; preds = %if.else37.i655
  %392 = load i32, i32* %n2.addr.i601, align 4, !dbg !6791
  %cmp44.i660 = icmp eq i32 %392, 5, !dbg !6792
  br i1 %cmp44.i660, label %if.then45.i667, label %if.else52.i669, !dbg !6791

if.then45.i667:                                   ; preds = %if.else43.i661
  %393 = load i32, i32* %sf.addr.i599, align 4, !dbg !6793
  %mul47.i662 = mul nsw i32 %393, 205, !dbg !6794
  %shr48.i663 = ashr i32 %mul47.i662, 10, !dbg !6795
  store i32 %shr48.i663, i32* %m46.i607, align 4, !dbg !6796
  %394 = load i32, i32* %sf.addr.i599, align 4, !dbg !6797
  %395 = load i32, i32* %m46.i607, align 4, !dbg !6798
  %mul49.i664 = mul nsw i32 5, %395, !dbg !6799
  %sub50.i665 = sub nsw i32 %394, %mul49.i664, !dbg !6800
  %396 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6801
  %arrayidx51.i666 = getelementptr inbounds i32, i32* %396, i64 2, !dbg !6801
  store i32 %sub50.i665, i32* %arrayidx51.i666, align 4, !dbg !6802
  %397 = load i32, i32* %m46.i607, align 4, !dbg !6803
  store i32 %397, i32* %sf.addr.i599, align 4, !dbg !6804
  br label %if.end64.i679, !dbg !6805

if.else52.i669:                                   ; preds = %if.else43.i661
  %398 = load i32, i32* %n2.addr.i601, align 4, !dbg !6806
  %cmp53.i668 = icmp eq i32 %398, 6, !dbg !6807
  br i1 %cmp53.i668, label %if.then54.i675, label %if.else61.i677, !dbg !6806

if.then54.i675:                                   ; preds = %if.else52.i669
  %399 = load i32, i32* %sf.addr.i599, align 4, !dbg !6808
  %mul56.i670 = mul nsw i32 %399, 171, !dbg !6809
  %shr57.i671 = ashr i32 %mul56.i670, 10, !dbg !6810
  store i32 %shr57.i671, i32* %m55.i608, align 4, !dbg !6811
  %400 = load i32, i32* %sf.addr.i599, align 4, !dbg !6812
  %401 = load i32, i32* %m55.i608, align 4, !dbg !6813
  %mul58.i672 = mul nsw i32 6, %401, !dbg !6814
  %sub59.i673 = sub nsw i32 %400, %mul58.i672, !dbg !6815
  %402 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6816
  %arrayidx60.i674 = getelementptr inbounds i32, i32* %402, i64 2, !dbg !6816
  store i32 %sub59.i673, i32* %arrayidx60.i674, align 4, !dbg !6817
  %403 = load i32, i32* %m55.i608, align 4, !dbg !6818
  store i32 %403, i32* %sf.addr.i599, align 4, !dbg !6819
  br label %if.end63.i678, !dbg !6820

if.else61.i677:                                   ; preds = %if.else52.i669
  %404 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6821
  %arrayidx62.i676 = getelementptr inbounds i32, i32* %404, i64 2, !dbg !6821
  store i32 0, i32* %arrayidx62.i676, align 4, !dbg !6822
  br label %if.end63.i678, !dbg !6710

if.end63.i678:                                    ; preds = %if.else61.i677, %if.then54.i675
  br label %if.end64.i679, !dbg !6710

if.end64.i679:                                    ; preds = %if.end63.i678, %if.then45.i667
  br label %if.end65.i680, !dbg !6710

if.end65.i680:                                    ; preds = %if.end64.i679, %if.then39.i659
  br label %if.end66.i682, !dbg !6710

if.end66.i682:                                    ; preds = %if.end65.i680, %if.then30.i653
  %405 = load i32, i32* %n1.addr.i600, align 4, !dbg !6823
  %cmp67.i681 = icmp eq i32 %405, 3, !dbg !6824
  br i1 %cmp67.i681, label %if.then68.i688, label %if.else75.i690, !dbg !6825

if.then68.i688:                                   ; preds = %if.end66.i682
  %406 = load i32, i32* %sf.addr.i599, align 4, !dbg !6826
  %mul70.i683 = mul nsw i32 %406, 171, !dbg !6827
  %shr71.i684 = ashr i32 %mul70.i683, 9, !dbg !6828
  store i32 %shr71.i684, i32* %m69.i609, align 4, !dbg !6829
  %407 = load i32, i32* %sf.addr.i599, align 4, !dbg !6830
  %408 = load i32, i32* %m69.i609, align 4, !dbg !6831
  %mul72.i685 = mul nsw i32 3, %408, !dbg !6832
  %sub73.i686 = sub nsw i32 %407, %mul72.i685, !dbg !6833
  %409 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6834
  %arrayidx74.i687 = getelementptr inbounds i32, i32* %409, i64 1, !dbg !6834
  store i32 %sub73.i686, i32* %arrayidx74.i687, align 4, !dbg !6835
  %410 = load i32, i32* %m69.i609, align 4, !dbg !6836
  store i32 %410, i32* %sf.addr.i599, align 4, !dbg !6837
  br label %lsf_sf_expand.exit716, !dbg !6838

if.else75.i690:                                   ; preds = %if.end66.i682
  %411 = load i32, i32* %n1.addr.i600, align 4, !dbg !6839
  %cmp76.i689 = icmp eq i32 %411, 4, !dbg !6840
  br i1 %cmp76.i689, label %if.then77.i694, label %if.else81.i696, !dbg !6839

if.then77.i694:                                   ; preds = %if.else75.i690
  %412 = load i32, i32* %sf.addr.i599, align 4, !dbg !6841
  %and78.i691 = and i32 %412, 3, !dbg !6842
  %413 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6843
  %arrayidx79.i692 = getelementptr inbounds i32, i32* %413, i64 1, !dbg !6843
  store i32 %and78.i691, i32* %arrayidx79.i692, align 4, !dbg !6844
  %414 = load i32, i32* %sf.addr.i599, align 4, !dbg !6845
  %shr80.i693 = ashr i32 %414, 2, !dbg !6845
  store i32 %shr80.i693, i32* %sf.addr.i599, align 4, !dbg !6845
  br label %if.end103.i715, !dbg !6846

if.else81.i696:                                   ; preds = %if.else75.i690
  %415 = load i32, i32* %n1.addr.i600, align 4, !dbg !6847
  %cmp82.i695 = icmp eq i32 %415, 5, !dbg !6848
  br i1 %cmp82.i695, label %if.then83.i702, label %if.else90.i704, !dbg !6847

if.then83.i702:                                   ; preds = %if.else81.i696
  %416 = load i32, i32* %sf.addr.i599, align 4, !dbg !6849
  %mul85.i697 = mul nsw i32 %416, 205, !dbg !6850
  %shr86.i698 = ashr i32 %mul85.i697, 10, !dbg !6851
  store i32 %shr86.i698, i32* %m84.i610, align 4, !dbg !6852
  %417 = load i32, i32* %sf.addr.i599, align 4, !dbg !6853
  %418 = load i32, i32* %m84.i610, align 4, !dbg !6854
  %mul87.i699 = mul nsw i32 5, %418, !dbg !6855
  %sub88.i700 = sub nsw i32 %417, %mul87.i699, !dbg !6856
  %419 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6857
  %arrayidx89.i701 = getelementptr inbounds i32, i32* %419, i64 1, !dbg !6857
  store i32 %sub88.i700, i32* %arrayidx89.i701, align 4, !dbg !6858
  %420 = load i32, i32* %m84.i610, align 4, !dbg !6859
  store i32 %420, i32* %sf.addr.i599, align 4, !dbg !6860
  br label %if.end102.i714, !dbg !6861

if.else90.i704:                                   ; preds = %if.else81.i696
  %421 = load i32, i32* %n1.addr.i600, align 4, !dbg !6862
  %cmp91.i703 = icmp eq i32 %421, 6, !dbg !6863
  br i1 %cmp91.i703, label %if.then92.i710, label %if.else99.i712, !dbg !6862

if.then92.i710:                                   ; preds = %if.else90.i704
  %422 = load i32, i32* %sf.addr.i599, align 4, !dbg !6864
  %mul94.i705 = mul nsw i32 %422, 171, !dbg !6865
  %shr95.i706 = ashr i32 %mul94.i705, 10, !dbg !6866
  store i32 %shr95.i706, i32* %m93.i611, align 4, !dbg !6867
  %423 = load i32, i32* %sf.addr.i599, align 4, !dbg !6868
  %424 = load i32, i32* %m93.i611, align 4, !dbg !6869
  %mul96.i707 = mul nsw i32 6, %424, !dbg !6870
  %sub97.i708 = sub nsw i32 %423, %mul96.i707, !dbg !6871
  %425 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6872
  %arrayidx98.i709 = getelementptr inbounds i32, i32* %425, i64 1, !dbg !6872
  store i32 %sub97.i708, i32* %arrayidx98.i709, align 4, !dbg !6873
  %426 = load i32, i32* %m93.i611, align 4, !dbg !6874
  store i32 %426, i32* %sf.addr.i599, align 4, !dbg !6875
  br label %if.end101.i713, !dbg !6876

if.else99.i712:                                   ; preds = %if.else90.i704
  %427 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6877
  %arrayidx100.i711 = getelementptr inbounds i32, i32* %427, i64 1, !dbg !6877
  store i32 0, i32* %arrayidx100.i711, align 4, !dbg !6878
  br label %if.end101.i713, !dbg !6710

if.end101.i713:                                   ; preds = %if.else99.i712, %if.then92.i710
  br label %if.end102.i714, !dbg !6710

if.end102.i714:                                   ; preds = %if.end101.i713, %if.then83.i702
  br label %if.end103.i715, !dbg !6710

if.end103.i715:                                   ; preds = %if.end102.i714, %if.then77.i694
  br label %lsf_sf_expand.exit716, !dbg !6710

lsf_sf_expand.exit716:                            ; preds = %if.then68.i688, %if.end103.i715
  %428 = load i32, i32* %sf.addr.i599, align 4, !dbg !6879
  %429 = load i32*, i32** %slen.addr.i598, align 8, !dbg !6880
  store i32 %428, i32* %429, align 4, !dbg !6881
  store i32 4, i32* %tindex2, align 4, !dbg !6882
  br label %if.end461, !dbg !6883

if.else458:                                       ; preds = %if.else452
  %arraydecay459 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !6884
  %430 = load i32, i32* %sf, align 4, !dbg !6885
  %sub460 = sub nsw i32 %430, 244, !dbg !6886
  store i32* %arraydecay459, i32** %slen.addr.i717, align 8, !dbg !6887
  store i32 %sub460, i32* %sf.addr.i718, align 4, !dbg !6887
  store i32 3, i32* %n1.addr.i719, align 4, !dbg !6887
  store i32 0, i32* %n2.addr.i720, align 4, !dbg !6887
  store i32 0, i32* %n3.addr.i721, align 4, !dbg !6887
  %431 = load i32, i32* %n3.addr.i721, align 4, !dbg !6888
  %cmp.i731 = icmp eq i32 %431, 3, !dbg !6889
  br i1 %cmp.i731, label %if.then.i737, label %if.else.i739, !dbg !6890

if.then.i737:                                     ; preds = %if.else458
  %432 = load i32, i32* %sf.addr.i718, align 4, !dbg !6891
  %mul.i732 = mul nsw i32 %432, 171, !dbg !6892
  %shr.i733 = ashr i32 %mul.i732, 9, !dbg !6893
  store i32 %shr.i733, i32* %m.i722, align 4, !dbg !6894
  %433 = load i32, i32* %sf.addr.i718, align 4, !dbg !6895
  %434 = load i32, i32* %m.i722, align 4, !dbg !6896
  %mul1.i734 = mul nsw i32 3, %434, !dbg !6897
  %sub.i735 = sub nsw i32 %433, %mul1.i734, !dbg !6898
  %435 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6899
  %arrayidx.i736 = getelementptr inbounds i32, i32* %435, i64 3, !dbg !6899
  store i32 %sub.i735, i32* %arrayidx.i736, align 4, !dbg !6900
  %436 = load i32, i32* %m.i722, align 4, !dbg !6901
  store i32 %436, i32* %sf.addr.i718, align 4, !dbg !6902
  br label %if.end28.i766, !dbg !6903

if.else.i739:                                     ; preds = %if.else458
  %437 = load i32, i32* %n3.addr.i721, align 4, !dbg !6904
  %cmp2.i738 = icmp eq i32 %437, 4, !dbg !6905
  br i1 %cmp2.i738, label %if.then3.i743, label %if.else6.i745, !dbg !6904

if.then3.i743:                                    ; preds = %if.else.i739
  %438 = load i32, i32* %sf.addr.i718, align 4, !dbg !6906
  %and.i740 = and i32 %438, 3, !dbg !6907
  %439 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6908
  %arrayidx4.i741 = getelementptr inbounds i32, i32* %439, i64 3, !dbg !6908
  store i32 %and.i740, i32* %arrayidx4.i741, align 4, !dbg !6909
  %440 = load i32, i32* %sf.addr.i718, align 4, !dbg !6910
  %shr5.i742 = ashr i32 %440, 2, !dbg !6910
  store i32 %shr5.i742, i32* %sf.addr.i718, align 4, !dbg !6910
  br label %if.end27.i764, !dbg !6911

if.else6.i745:                                    ; preds = %if.else.i739
  %441 = load i32, i32* %n3.addr.i721, align 4, !dbg !6912
  %cmp7.i744 = icmp eq i32 %441, 5, !dbg !6913
  br i1 %cmp7.i744, label %if.then8.i751, label %if.else15.i753, !dbg !6912

if.then8.i751:                                    ; preds = %if.else6.i745
  %442 = load i32, i32* %sf.addr.i718, align 4, !dbg !6914
  %mul10.i746 = mul nsw i32 %442, 205, !dbg !6915
  %shr11.i747 = ashr i32 %mul10.i746, 10, !dbg !6916
  store i32 %shr11.i747, i32* %m9.i723, align 4, !dbg !6917
  %443 = load i32, i32* %sf.addr.i718, align 4, !dbg !6918
  %444 = load i32, i32* %m9.i723, align 4, !dbg !6919
  %mul12.i748 = mul nsw i32 5, %444, !dbg !6920
  %sub13.i749 = sub nsw i32 %443, %mul12.i748, !dbg !6921
  %445 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6922
  %arrayidx14.i750 = getelementptr inbounds i32, i32* %445, i64 3, !dbg !6922
  store i32 %sub13.i749, i32* %arrayidx14.i750, align 4, !dbg !6923
  %446 = load i32, i32* %m9.i723, align 4, !dbg !6924
  store i32 %446, i32* %sf.addr.i718, align 4, !dbg !6925
  br label %if.end26.i763, !dbg !6926

if.else15.i753:                                   ; preds = %if.else6.i745
  %447 = load i32, i32* %n3.addr.i721, align 4, !dbg !6927
  %cmp16.i752 = icmp eq i32 %447, 6, !dbg !6928
  br i1 %cmp16.i752, label %if.then17.i759, label %if.else24.i761, !dbg !6927

if.then17.i759:                                   ; preds = %if.else15.i753
  %448 = load i32, i32* %sf.addr.i718, align 4, !dbg !6929
  %mul19.i754 = mul nsw i32 %448, 171, !dbg !6930
  %shr20.i755 = ashr i32 %mul19.i754, 10, !dbg !6931
  store i32 %shr20.i755, i32* %m18.i724, align 4, !dbg !6932
  %449 = load i32, i32* %sf.addr.i718, align 4, !dbg !6933
  %450 = load i32, i32* %m18.i724, align 4, !dbg !6934
  %mul21.i756 = mul nsw i32 6, %450, !dbg !6935
  %sub22.i757 = sub nsw i32 %449, %mul21.i756, !dbg !6936
  %451 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6937
  %arrayidx23.i758 = getelementptr inbounds i32, i32* %451, i64 3, !dbg !6937
  store i32 %sub22.i757, i32* %arrayidx23.i758, align 4, !dbg !6938
  %452 = load i32, i32* %m18.i724, align 4, !dbg !6939
  store i32 %452, i32* %sf.addr.i718, align 4, !dbg !6940
  br label %if.end.i762, !dbg !6941

if.else24.i761:                                   ; preds = %if.else15.i753
  %453 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6942
  %arrayidx25.i760 = getelementptr inbounds i32, i32* %453, i64 3, !dbg !6942
  store i32 0, i32* %arrayidx25.i760, align 4, !dbg !6943
  br label %if.end.i762, !dbg !6887

if.end.i762:                                      ; preds = %if.else24.i761, %if.then17.i759
  br label %if.end26.i763, !dbg !6887

if.end26.i763:                                    ; preds = %if.end.i762, %if.then8.i751
  br label %if.end27.i764, !dbg !6887

if.end27.i764:                                    ; preds = %if.end26.i763, %if.then3.i743
  br label %if.end28.i766, !dbg !6887

if.end28.i766:                                    ; preds = %if.end27.i764, %if.then.i737
  %454 = load i32, i32* %n2.addr.i720, align 4, !dbg !6944
  %cmp29.i765 = icmp eq i32 %454, 3, !dbg !6945
  br i1 %cmp29.i765, label %if.then30.i772, label %if.else37.i774, !dbg !6946

if.then30.i772:                                   ; preds = %if.end28.i766
  %455 = load i32, i32* %sf.addr.i718, align 4, !dbg !6947
  %mul32.i767 = mul nsw i32 %455, 171, !dbg !6948
  %shr33.i768 = ashr i32 %mul32.i767, 9, !dbg !6949
  store i32 %shr33.i768, i32* %m31.i725, align 4, !dbg !6950
  %456 = load i32, i32* %sf.addr.i718, align 4, !dbg !6951
  %457 = load i32, i32* %m31.i725, align 4, !dbg !6952
  %mul34.i769 = mul nsw i32 3, %457, !dbg !6953
  %sub35.i770 = sub nsw i32 %456, %mul34.i769, !dbg !6954
  %458 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6955
  %arrayidx36.i771 = getelementptr inbounds i32, i32* %458, i64 2, !dbg !6955
  store i32 %sub35.i770, i32* %arrayidx36.i771, align 4, !dbg !6956
  %459 = load i32, i32* %m31.i725, align 4, !dbg !6957
  store i32 %459, i32* %sf.addr.i718, align 4, !dbg !6958
  br label %if.end66.i801, !dbg !6959

if.else37.i774:                                   ; preds = %if.end28.i766
  %460 = load i32, i32* %n2.addr.i720, align 4, !dbg !6960
  %cmp38.i773 = icmp eq i32 %460, 4, !dbg !6961
  br i1 %cmp38.i773, label %if.then39.i778, label %if.else43.i780, !dbg !6960

if.then39.i778:                                   ; preds = %if.else37.i774
  %461 = load i32, i32* %sf.addr.i718, align 4, !dbg !6962
  %and40.i775 = and i32 %461, 3, !dbg !6963
  %462 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6964
  %arrayidx41.i776 = getelementptr inbounds i32, i32* %462, i64 2, !dbg !6964
  store i32 %and40.i775, i32* %arrayidx41.i776, align 4, !dbg !6965
  %463 = load i32, i32* %sf.addr.i718, align 4, !dbg !6966
  %shr42.i777 = ashr i32 %463, 2, !dbg !6966
  store i32 %shr42.i777, i32* %sf.addr.i718, align 4, !dbg !6966
  br label %if.end65.i799, !dbg !6967

if.else43.i780:                                   ; preds = %if.else37.i774
  %464 = load i32, i32* %n2.addr.i720, align 4, !dbg !6968
  %cmp44.i779 = icmp eq i32 %464, 5, !dbg !6969
  br i1 %cmp44.i779, label %if.then45.i786, label %if.else52.i788, !dbg !6968

if.then45.i786:                                   ; preds = %if.else43.i780
  %465 = load i32, i32* %sf.addr.i718, align 4, !dbg !6970
  %mul47.i781 = mul nsw i32 %465, 205, !dbg !6971
  %shr48.i782 = ashr i32 %mul47.i781, 10, !dbg !6972
  store i32 %shr48.i782, i32* %m46.i726, align 4, !dbg !6973
  %466 = load i32, i32* %sf.addr.i718, align 4, !dbg !6974
  %467 = load i32, i32* %m46.i726, align 4, !dbg !6975
  %mul49.i783 = mul nsw i32 5, %467, !dbg !6976
  %sub50.i784 = sub nsw i32 %466, %mul49.i783, !dbg !6977
  %468 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6978
  %arrayidx51.i785 = getelementptr inbounds i32, i32* %468, i64 2, !dbg !6978
  store i32 %sub50.i784, i32* %arrayidx51.i785, align 4, !dbg !6979
  %469 = load i32, i32* %m46.i726, align 4, !dbg !6980
  store i32 %469, i32* %sf.addr.i718, align 4, !dbg !6981
  br label %if.end64.i798, !dbg !6982

if.else52.i788:                                   ; preds = %if.else43.i780
  %470 = load i32, i32* %n2.addr.i720, align 4, !dbg !6983
  %cmp53.i787 = icmp eq i32 %470, 6, !dbg !6984
  br i1 %cmp53.i787, label %if.then54.i794, label %if.else61.i796, !dbg !6983

if.then54.i794:                                   ; preds = %if.else52.i788
  %471 = load i32, i32* %sf.addr.i718, align 4, !dbg !6985
  %mul56.i789 = mul nsw i32 %471, 171, !dbg !6986
  %shr57.i790 = ashr i32 %mul56.i789, 10, !dbg !6987
  store i32 %shr57.i790, i32* %m55.i727, align 4, !dbg !6988
  %472 = load i32, i32* %sf.addr.i718, align 4, !dbg !6989
  %473 = load i32, i32* %m55.i727, align 4, !dbg !6990
  %mul58.i791 = mul nsw i32 6, %473, !dbg !6991
  %sub59.i792 = sub nsw i32 %472, %mul58.i791, !dbg !6992
  %474 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6993
  %arrayidx60.i793 = getelementptr inbounds i32, i32* %474, i64 2, !dbg !6993
  store i32 %sub59.i792, i32* %arrayidx60.i793, align 4, !dbg !6994
  %475 = load i32, i32* %m55.i727, align 4, !dbg !6995
  store i32 %475, i32* %sf.addr.i718, align 4, !dbg !6996
  br label %if.end63.i797, !dbg !6997

if.else61.i796:                                   ; preds = %if.else52.i788
  %476 = load i32*, i32** %slen.addr.i717, align 8, !dbg !6998
  %arrayidx62.i795 = getelementptr inbounds i32, i32* %476, i64 2, !dbg !6998
  store i32 0, i32* %arrayidx62.i795, align 4, !dbg !6999
  br label %if.end63.i797, !dbg !6887

if.end63.i797:                                    ; preds = %if.else61.i796, %if.then54.i794
  br label %if.end64.i798, !dbg !6887

if.end64.i798:                                    ; preds = %if.end63.i797, %if.then45.i786
  br label %if.end65.i799, !dbg !6887

if.end65.i799:                                    ; preds = %if.end64.i798, %if.then39.i778
  br label %if.end66.i801, !dbg !6887

if.end66.i801:                                    ; preds = %if.end65.i799, %if.then30.i772
  %477 = load i32, i32* %n1.addr.i719, align 4, !dbg !7000
  %cmp67.i800 = icmp eq i32 %477, 3, !dbg !7001
  br i1 %cmp67.i800, label %if.then68.i807, label %if.else75.i809, !dbg !7002

if.then68.i807:                                   ; preds = %if.end66.i801
  %478 = load i32, i32* %sf.addr.i718, align 4, !dbg !7003
  %mul70.i802 = mul nsw i32 %478, 171, !dbg !7004
  %shr71.i803 = ashr i32 %mul70.i802, 9, !dbg !7005
  store i32 %shr71.i803, i32* %m69.i728, align 4, !dbg !7006
  %479 = load i32, i32* %sf.addr.i718, align 4, !dbg !7007
  %480 = load i32, i32* %m69.i728, align 4, !dbg !7008
  %mul72.i804 = mul nsw i32 3, %480, !dbg !7009
  %sub73.i805 = sub nsw i32 %479, %mul72.i804, !dbg !7010
  %481 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7011
  %arrayidx74.i806 = getelementptr inbounds i32, i32* %481, i64 1, !dbg !7011
  store i32 %sub73.i805, i32* %arrayidx74.i806, align 4, !dbg !7012
  %482 = load i32, i32* %m69.i728, align 4, !dbg !7013
  store i32 %482, i32* %sf.addr.i718, align 4, !dbg !7014
  br label %lsf_sf_expand.exit835, !dbg !7015

if.else75.i809:                                   ; preds = %if.end66.i801
  %483 = load i32, i32* %n1.addr.i719, align 4, !dbg !7016
  %cmp76.i808 = icmp eq i32 %483, 4, !dbg !7017
  br i1 %cmp76.i808, label %if.then77.i813, label %if.else81.i815, !dbg !7016

if.then77.i813:                                   ; preds = %if.else75.i809
  %484 = load i32, i32* %sf.addr.i718, align 4, !dbg !7018
  %and78.i810 = and i32 %484, 3, !dbg !7019
  %485 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7020
  %arrayidx79.i811 = getelementptr inbounds i32, i32* %485, i64 1, !dbg !7020
  store i32 %and78.i810, i32* %arrayidx79.i811, align 4, !dbg !7021
  %486 = load i32, i32* %sf.addr.i718, align 4, !dbg !7022
  %shr80.i812 = ashr i32 %486, 2, !dbg !7022
  store i32 %shr80.i812, i32* %sf.addr.i718, align 4, !dbg !7022
  br label %if.end103.i834, !dbg !7023

if.else81.i815:                                   ; preds = %if.else75.i809
  %487 = load i32, i32* %n1.addr.i719, align 4, !dbg !7024
  %cmp82.i814 = icmp eq i32 %487, 5, !dbg !7025
  br i1 %cmp82.i814, label %if.then83.i821, label %if.else90.i823, !dbg !7024

if.then83.i821:                                   ; preds = %if.else81.i815
  %488 = load i32, i32* %sf.addr.i718, align 4, !dbg !7026
  %mul85.i816 = mul nsw i32 %488, 205, !dbg !7027
  %shr86.i817 = ashr i32 %mul85.i816, 10, !dbg !7028
  store i32 %shr86.i817, i32* %m84.i729, align 4, !dbg !7029
  %489 = load i32, i32* %sf.addr.i718, align 4, !dbg !7030
  %490 = load i32, i32* %m84.i729, align 4, !dbg !7031
  %mul87.i818 = mul nsw i32 5, %490, !dbg !7032
  %sub88.i819 = sub nsw i32 %489, %mul87.i818, !dbg !7033
  %491 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7034
  %arrayidx89.i820 = getelementptr inbounds i32, i32* %491, i64 1, !dbg !7034
  store i32 %sub88.i819, i32* %arrayidx89.i820, align 4, !dbg !7035
  %492 = load i32, i32* %m84.i729, align 4, !dbg !7036
  store i32 %492, i32* %sf.addr.i718, align 4, !dbg !7037
  br label %if.end102.i833, !dbg !7038

if.else90.i823:                                   ; preds = %if.else81.i815
  %493 = load i32, i32* %n1.addr.i719, align 4, !dbg !7039
  %cmp91.i822 = icmp eq i32 %493, 6, !dbg !7040
  br i1 %cmp91.i822, label %if.then92.i829, label %if.else99.i831, !dbg !7039

if.then92.i829:                                   ; preds = %if.else90.i823
  %494 = load i32, i32* %sf.addr.i718, align 4, !dbg !7041
  %mul94.i824 = mul nsw i32 %494, 171, !dbg !7042
  %shr95.i825 = ashr i32 %mul94.i824, 10, !dbg !7043
  store i32 %shr95.i825, i32* %m93.i730, align 4, !dbg !7044
  %495 = load i32, i32* %sf.addr.i718, align 4, !dbg !7045
  %496 = load i32, i32* %m93.i730, align 4, !dbg !7046
  %mul96.i826 = mul nsw i32 6, %496, !dbg !7047
  %sub97.i827 = sub nsw i32 %495, %mul96.i826, !dbg !7048
  %497 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7049
  %arrayidx98.i828 = getelementptr inbounds i32, i32* %497, i64 1, !dbg !7049
  store i32 %sub97.i827, i32* %arrayidx98.i828, align 4, !dbg !7050
  %498 = load i32, i32* %m93.i730, align 4, !dbg !7051
  store i32 %498, i32* %sf.addr.i718, align 4, !dbg !7052
  br label %if.end101.i832, !dbg !7053

if.else99.i831:                                   ; preds = %if.else90.i823
  %499 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7054
  %arrayidx100.i830 = getelementptr inbounds i32, i32* %499, i64 1, !dbg !7054
  store i32 0, i32* %arrayidx100.i830, align 4, !dbg !7055
  br label %if.end101.i832, !dbg !6887

if.end101.i832:                                   ; preds = %if.else99.i831, %if.then92.i829
  br label %if.end102.i833, !dbg !6887

if.end102.i833:                                   ; preds = %if.end101.i832, %if.then83.i821
  br label %if.end103.i834, !dbg !6887

if.end103.i834:                                   ; preds = %if.end102.i833, %if.then77.i813
  br label %lsf_sf_expand.exit835, !dbg !6887

lsf_sf_expand.exit835:                            ; preds = %if.then68.i807, %if.end103.i834
  %500 = load i32, i32* %sf.addr.i718, align 4, !dbg !7056
  %501 = load i32*, i32** %slen.addr.i717, align 8, !dbg !7057
  store i32 %500, i32* %501, align 4, !dbg !7058
  store i32 5, i32* %tindex2, align 4, !dbg !7059
  br label %if.end461

if.end461:                                        ; preds = %lsf_sf_expand.exit835, %lsf_sf_expand.exit716
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %lsf_sf_expand.exit
  br label %if.end480, !dbg !7060

if.else463:                                       ; preds = %land.lhs.true443, %if.end438
  %502 = load i32, i32* %sf, align 4, !dbg !7061
  %cmp464 = icmp slt i32 %502, 400, !dbg !7062
  br i1 %cmp464, label %if.then466, label %if.else468, !dbg !7063

if.then466:                                       ; preds = %if.else463
  %arraydecay467 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !7064
  %503 = load i32, i32* %sf, align 4, !dbg !7065
  store i32* %arraydecay467, i32** %slen.addr.i836, align 8, !dbg !7066
  store i32 %503, i32* %sf.addr.i837, align 4, !dbg !7066
  store i32 5, i32* %n1.addr.i838, align 4, !dbg !7066
  store i32 4, i32* %n2.addr.i839, align 4, !dbg !7066
  store i32 4, i32* %n3.addr.i840, align 4, !dbg !7066
  %504 = load i32, i32* %n3.addr.i840, align 4, !dbg !7067
  %cmp.i850 = icmp eq i32 %504, 3, !dbg !7068
  br i1 %cmp.i850, label %if.then.i856, label %if.else.i858, !dbg !7069

if.then.i856:                                     ; preds = %if.then466
  %505 = load i32, i32* %sf.addr.i837, align 4, !dbg !7070
  %mul.i851 = mul nsw i32 %505, 171, !dbg !7071
  %shr.i852 = ashr i32 %mul.i851, 9, !dbg !7072
  store i32 %shr.i852, i32* %m.i841, align 4, !dbg !7073
  %506 = load i32, i32* %sf.addr.i837, align 4, !dbg !7074
  %507 = load i32, i32* %m.i841, align 4, !dbg !7075
  %mul1.i853 = mul nsw i32 3, %507, !dbg !7076
  %sub.i854 = sub nsw i32 %506, %mul1.i853, !dbg !7077
  %508 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7078
  %arrayidx.i855 = getelementptr inbounds i32, i32* %508, i64 3, !dbg !7078
  store i32 %sub.i854, i32* %arrayidx.i855, align 4, !dbg !7079
  %509 = load i32, i32* %m.i841, align 4, !dbg !7080
  store i32 %509, i32* %sf.addr.i837, align 4, !dbg !7081
  br label %if.end28.i885, !dbg !7082

if.else.i858:                                     ; preds = %if.then466
  %510 = load i32, i32* %n3.addr.i840, align 4, !dbg !7083
  %cmp2.i857 = icmp eq i32 %510, 4, !dbg !7084
  br i1 %cmp2.i857, label %if.then3.i862, label %if.else6.i864, !dbg !7083

if.then3.i862:                                    ; preds = %if.else.i858
  %511 = load i32, i32* %sf.addr.i837, align 4, !dbg !7085
  %and.i859 = and i32 %511, 3, !dbg !7086
  %512 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7087
  %arrayidx4.i860 = getelementptr inbounds i32, i32* %512, i64 3, !dbg !7087
  store i32 %and.i859, i32* %arrayidx4.i860, align 4, !dbg !7088
  %513 = load i32, i32* %sf.addr.i837, align 4, !dbg !7089
  %shr5.i861 = ashr i32 %513, 2, !dbg !7089
  store i32 %shr5.i861, i32* %sf.addr.i837, align 4, !dbg !7089
  br label %if.end27.i883, !dbg !7090

if.else6.i864:                                    ; preds = %if.else.i858
  %514 = load i32, i32* %n3.addr.i840, align 4, !dbg !7091
  %cmp7.i863 = icmp eq i32 %514, 5, !dbg !7092
  br i1 %cmp7.i863, label %if.then8.i870, label %if.else15.i872, !dbg !7091

if.then8.i870:                                    ; preds = %if.else6.i864
  %515 = load i32, i32* %sf.addr.i837, align 4, !dbg !7093
  %mul10.i865 = mul nsw i32 %515, 205, !dbg !7094
  %shr11.i866 = ashr i32 %mul10.i865, 10, !dbg !7095
  store i32 %shr11.i866, i32* %m9.i842, align 4, !dbg !7096
  %516 = load i32, i32* %sf.addr.i837, align 4, !dbg !7097
  %517 = load i32, i32* %m9.i842, align 4, !dbg !7098
  %mul12.i867 = mul nsw i32 5, %517, !dbg !7099
  %sub13.i868 = sub nsw i32 %516, %mul12.i867, !dbg !7100
  %518 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7101
  %arrayidx14.i869 = getelementptr inbounds i32, i32* %518, i64 3, !dbg !7101
  store i32 %sub13.i868, i32* %arrayidx14.i869, align 4, !dbg !7102
  %519 = load i32, i32* %m9.i842, align 4, !dbg !7103
  store i32 %519, i32* %sf.addr.i837, align 4, !dbg !7104
  br label %if.end26.i882, !dbg !7105

if.else15.i872:                                   ; preds = %if.else6.i864
  %520 = load i32, i32* %n3.addr.i840, align 4, !dbg !7106
  %cmp16.i871 = icmp eq i32 %520, 6, !dbg !7107
  br i1 %cmp16.i871, label %if.then17.i878, label %if.else24.i880, !dbg !7106

if.then17.i878:                                   ; preds = %if.else15.i872
  %521 = load i32, i32* %sf.addr.i837, align 4, !dbg !7108
  %mul19.i873 = mul nsw i32 %521, 171, !dbg !7109
  %shr20.i874 = ashr i32 %mul19.i873, 10, !dbg !7110
  store i32 %shr20.i874, i32* %m18.i843, align 4, !dbg !7111
  %522 = load i32, i32* %sf.addr.i837, align 4, !dbg !7112
  %523 = load i32, i32* %m18.i843, align 4, !dbg !7113
  %mul21.i875 = mul nsw i32 6, %523, !dbg !7114
  %sub22.i876 = sub nsw i32 %522, %mul21.i875, !dbg !7115
  %524 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7116
  %arrayidx23.i877 = getelementptr inbounds i32, i32* %524, i64 3, !dbg !7116
  store i32 %sub22.i876, i32* %arrayidx23.i877, align 4, !dbg !7117
  %525 = load i32, i32* %m18.i843, align 4, !dbg !7118
  store i32 %525, i32* %sf.addr.i837, align 4, !dbg !7119
  br label %if.end.i881, !dbg !7120

if.else24.i880:                                   ; preds = %if.else15.i872
  %526 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7121
  %arrayidx25.i879 = getelementptr inbounds i32, i32* %526, i64 3, !dbg !7121
  store i32 0, i32* %arrayidx25.i879, align 4, !dbg !7122
  br label %if.end.i881, !dbg !7066

if.end.i881:                                      ; preds = %if.else24.i880, %if.then17.i878
  br label %if.end26.i882, !dbg !7066

if.end26.i882:                                    ; preds = %if.end.i881, %if.then8.i870
  br label %if.end27.i883, !dbg !7066

if.end27.i883:                                    ; preds = %if.end26.i882, %if.then3.i862
  br label %if.end28.i885, !dbg !7066

if.end28.i885:                                    ; preds = %if.end27.i883, %if.then.i856
  %527 = load i32, i32* %n2.addr.i839, align 4, !dbg !7123
  %cmp29.i884 = icmp eq i32 %527, 3, !dbg !7124
  br i1 %cmp29.i884, label %if.then30.i891, label %if.else37.i893, !dbg !7125

if.then30.i891:                                   ; preds = %if.end28.i885
  %528 = load i32, i32* %sf.addr.i837, align 4, !dbg !7126
  %mul32.i886 = mul nsw i32 %528, 171, !dbg !7127
  %shr33.i887 = ashr i32 %mul32.i886, 9, !dbg !7128
  store i32 %shr33.i887, i32* %m31.i844, align 4, !dbg !7129
  %529 = load i32, i32* %sf.addr.i837, align 4, !dbg !7130
  %530 = load i32, i32* %m31.i844, align 4, !dbg !7131
  %mul34.i888 = mul nsw i32 3, %530, !dbg !7132
  %sub35.i889 = sub nsw i32 %529, %mul34.i888, !dbg !7133
  %531 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7134
  %arrayidx36.i890 = getelementptr inbounds i32, i32* %531, i64 2, !dbg !7134
  store i32 %sub35.i889, i32* %arrayidx36.i890, align 4, !dbg !7135
  %532 = load i32, i32* %m31.i844, align 4, !dbg !7136
  store i32 %532, i32* %sf.addr.i837, align 4, !dbg !7137
  br label %if.end66.i920, !dbg !7138

if.else37.i893:                                   ; preds = %if.end28.i885
  %533 = load i32, i32* %n2.addr.i839, align 4, !dbg !7139
  %cmp38.i892 = icmp eq i32 %533, 4, !dbg !7140
  br i1 %cmp38.i892, label %if.then39.i897, label %if.else43.i899, !dbg !7139

if.then39.i897:                                   ; preds = %if.else37.i893
  %534 = load i32, i32* %sf.addr.i837, align 4, !dbg !7141
  %and40.i894 = and i32 %534, 3, !dbg !7142
  %535 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7143
  %arrayidx41.i895 = getelementptr inbounds i32, i32* %535, i64 2, !dbg !7143
  store i32 %and40.i894, i32* %arrayidx41.i895, align 4, !dbg !7144
  %536 = load i32, i32* %sf.addr.i837, align 4, !dbg !7145
  %shr42.i896 = ashr i32 %536, 2, !dbg !7145
  store i32 %shr42.i896, i32* %sf.addr.i837, align 4, !dbg !7145
  br label %if.end65.i918, !dbg !7146

if.else43.i899:                                   ; preds = %if.else37.i893
  %537 = load i32, i32* %n2.addr.i839, align 4, !dbg !7147
  %cmp44.i898 = icmp eq i32 %537, 5, !dbg !7148
  br i1 %cmp44.i898, label %if.then45.i905, label %if.else52.i907, !dbg !7147

if.then45.i905:                                   ; preds = %if.else43.i899
  %538 = load i32, i32* %sf.addr.i837, align 4, !dbg !7149
  %mul47.i900 = mul nsw i32 %538, 205, !dbg !7150
  %shr48.i901 = ashr i32 %mul47.i900, 10, !dbg !7151
  store i32 %shr48.i901, i32* %m46.i845, align 4, !dbg !7152
  %539 = load i32, i32* %sf.addr.i837, align 4, !dbg !7153
  %540 = load i32, i32* %m46.i845, align 4, !dbg !7154
  %mul49.i902 = mul nsw i32 5, %540, !dbg !7155
  %sub50.i903 = sub nsw i32 %539, %mul49.i902, !dbg !7156
  %541 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7157
  %arrayidx51.i904 = getelementptr inbounds i32, i32* %541, i64 2, !dbg !7157
  store i32 %sub50.i903, i32* %arrayidx51.i904, align 4, !dbg !7158
  %542 = load i32, i32* %m46.i845, align 4, !dbg !7159
  store i32 %542, i32* %sf.addr.i837, align 4, !dbg !7160
  br label %if.end64.i917, !dbg !7161

if.else52.i907:                                   ; preds = %if.else43.i899
  %543 = load i32, i32* %n2.addr.i839, align 4, !dbg !7162
  %cmp53.i906 = icmp eq i32 %543, 6, !dbg !7163
  br i1 %cmp53.i906, label %if.then54.i913, label %if.else61.i915, !dbg !7162

if.then54.i913:                                   ; preds = %if.else52.i907
  %544 = load i32, i32* %sf.addr.i837, align 4, !dbg !7164
  %mul56.i908 = mul nsw i32 %544, 171, !dbg !7165
  %shr57.i909 = ashr i32 %mul56.i908, 10, !dbg !7166
  store i32 %shr57.i909, i32* %m55.i846, align 4, !dbg !7167
  %545 = load i32, i32* %sf.addr.i837, align 4, !dbg !7168
  %546 = load i32, i32* %m55.i846, align 4, !dbg !7169
  %mul58.i910 = mul nsw i32 6, %546, !dbg !7170
  %sub59.i911 = sub nsw i32 %545, %mul58.i910, !dbg !7171
  %547 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7172
  %arrayidx60.i912 = getelementptr inbounds i32, i32* %547, i64 2, !dbg !7172
  store i32 %sub59.i911, i32* %arrayidx60.i912, align 4, !dbg !7173
  %548 = load i32, i32* %m55.i846, align 4, !dbg !7174
  store i32 %548, i32* %sf.addr.i837, align 4, !dbg !7175
  br label %if.end63.i916, !dbg !7176

if.else61.i915:                                   ; preds = %if.else52.i907
  %549 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7177
  %arrayidx62.i914 = getelementptr inbounds i32, i32* %549, i64 2, !dbg !7177
  store i32 0, i32* %arrayidx62.i914, align 4, !dbg !7178
  br label %if.end63.i916, !dbg !7066

if.end63.i916:                                    ; preds = %if.else61.i915, %if.then54.i913
  br label %if.end64.i917, !dbg !7066

if.end64.i917:                                    ; preds = %if.end63.i916, %if.then45.i905
  br label %if.end65.i918, !dbg !7066

if.end65.i918:                                    ; preds = %if.end64.i917, %if.then39.i897
  br label %if.end66.i920, !dbg !7066

if.end66.i920:                                    ; preds = %if.end65.i918, %if.then30.i891
  %550 = load i32, i32* %n1.addr.i838, align 4, !dbg !7179
  %cmp67.i919 = icmp eq i32 %550, 3, !dbg !7180
  br i1 %cmp67.i919, label %if.then68.i926, label %if.else75.i928, !dbg !7181

if.then68.i926:                                   ; preds = %if.end66.i920
  %551 = load i32, i32* %sf.addr.i837, align 4, !dbg !7182
  %mul70.i921 = mul nsw i32 %551, 171, !dbg !7183
  %shr71.i922 = ashr i32 %mul70.i921, 9, !dbg !7184
  store i32 %shr71.i922, i32* %m69.i847, align 4, !dbg !7185
  %552 = load i32, i32* %sf.addr.i837, align 4, !dbg !7186
  %553 = load i32, i32* %m69.i847, align 4, !dbg !7187
  %mul72.i923 = mul nsw i32 3, %553, !dbg !7188
  %sub73.i924 = sub nsw i32 %552, %mul72.i923, !dbg !7189
  %554 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7190
  %arrayidx74.i925 = getelementptr inbounds i32, i32* %554, i64 1, !dbg !7190
  store i32 %sub73.i924, i32* %arrayidx74.i925, align 4, !dbg !7191
  %555 = load i32, i32* %m69.i847, align 4, !dbg !7192
  store i32 %555, i32* %sf.addr.i837, align 4, !dbg !7193
  br label %lsf_sf_expand.exit954, !dbg !7194

if.else75.i928:                                   ; preds = %if.end66.i920
  %556 = load i32, i32* %n1.addr.i838, align 4, !dbg !7195
  %cmp76.i927 = icmp eq i32 %556, 4, !dbg !7196
  br i1 %cmp76.i927, label %if.then77.i932, label %if.else81.i934, !dbg !7195

if.then77.i932:                                   ; preds = %if.else75.i928
  %557 = load i32, i32* %sf.addr.i837, align 4, !dbg !7197
  %and78.i929 = and i32 %557, 3, !dbg !7198
  %558 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7199
  %arrayidx79.i930 = getelementptr inbounds i32, i32* %558, i64 1, !dbg !7199
  store i32 %and78.i929, i32* %arrayidx79.i930, align 4, !dbg !7200
  %559 = load i32, i32* %sf.addr.i837, align 4, !dbg !7201
  %shr80.i931 = ashr i32 %559, 2, !dbg !7201
  store i32 %shr80.i931, i32* %sf.addr.i837, align 4, !dbg !7201
  br label %if.end103.i953, !dbg !7202

if.else81.i934:                                   ; preds = %if.else75.i928
  %560 = load i32, i32* %n1.addr.i838, align 4, !dbg !7203
  %cmp82.i933 = icmp eq i32 %560, 5, !dbg !7204
  br i1 %cmp82.i933, label %if.then83.i940, label %if.else90.i942, !dbg !7203

if.then83.i940:                                   ; preds = %if.else81.i934
  %561 = load i32, i32* %sf.addr.i837, align 4, !dbg !7205
  %mul85.i935 = mul nsw i32 %561, 205, !dbg !7206
  %shr86.i936 = ashr i32 %mul85.i935, 10, !dbg !7207
  store i32 %shr86.i936, i32* %m84.i848, align 4, !dbg !7208
  %562 = load i32, i32* %sf.addr.i837, align 4, !dbg !7209
  %563 = load i32, i32* %m84.i848, align 4, !dbg !7210
  %mul87.i937 = mul nsw i32 5, %563, !dbg !7211
  %sub88.i938 = sub nsw i32 %562, %mul87.i937, !dbg !7212
  %564 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7213
  %arrayidx89.i939 = getelementptr inbounds i32, i32* %564, i64 1, !dbg !7213
  store i32 %sub88.i938, i32* %arrayidx89.i939, align 4, !dbg !7214
  %565 = load i32, i32* %m84.i848, align 4, !dbg !7215
  store i32 %565, i32* %sf.addr.i837, align 4, !dbg !7216
  br label %if.end102.i952, !dbg !7217

if.else90.i942:                                   ; preds = %if.else81.i934
  %566 = load i32, i32* %n1.addr.i838, align 4, !dbg !7218
  %cmp91.i941 = icmp eq i32 %566, 6, !dbg !7219
  br i1 %cmp91.i941, label %if.then92.i948, label %if.else99.i950, !dbg !7218

if.then92.i948:                                   ; preds = %if.else90.i942
  %567 = load i32, i32* %sf.addr.i837, align 4, !dbg !7220
  %mul94.i943 = mul nsw i32 %567, 171, !dbg !7221
  %shr95.i944 = ashr i32 %mul94.i943, 10, !dbg !7222
  store i32 %shr95.i944, i32* %m93.i849, align 4, !dbg !7223
  %568 = load i32, i32* %sf.addr.i837, align 4, !dbg !7224
  %569 = load i32, i32* %m93.i849, align 4, !dbg !7225
  %mul96.i945 = mul nsw i32 6, %569, !dbg !7226
  %sub97.i946 = sub nsw i32 %568, %mul96.i945, !dbg !7227
  %570 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7228
  %arrayidx98.i947 = getelementptr inbounds i32, i32* %570, i64 1, !dbg !7228
  store i32 %sub97.i946, i32* %arrayidx98.i947, align 4, !dbg !7229
  %571 = load i32, i32* %m93.i849, align 4, !dbg !7230
  store i32 %571, i32* %sf.addr.i837, align 4, !dbg !7231
  br label %if.end101.i951, !dbg !7232

if.else99.i950:                                   ; preds = %if.else90.i942
  %572 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7233
  %arrayidx100.i949 = getelementptr inbounds i32, i32* %572, i64 1, !dbg !7233
  store i32 0, i32* %arrayidx100.i949, align 4, !dbg !7234
  br label %if.end101.i951, !dbg !7066

if.end101.i951:                                   ; preds = %if.else99.i950, %if.then92.i948
  br label %if.end102.i952, !dbg !7066

if.end102.i952:                                   ; preds = %if.end101.i951, %if.then83.i940
  br label %if.end103.i953, !dbg !7066

if.end103.i953:                                   ; preds = %if.end102.i952, %if.then77.i932
  br label %lsf_sf_expand.exit954, !dbg !7066

lsf_sf_expand.exit954:                            ; preds = %if.then68.i926, %if.end103.i953
  %573 = load i32, i32* %sf.addr.i837, align 4, !dbg !7235
  %574 = load i32*, i32** %slen.addr.i836, align 8, !dbg !7236
  store i32 %573, i32* %574, align 4, !dbg !7237
  store i32 0, i32* %tindex2, align 4, !dbg !7238
  br label %if.end479, !dbg !7239

if.else468:                                       ; preds = %if.else463
  %575 = load i32, i32* %sf, align 4, !dbg !7240
  %cmp469 = icmp slt i32 %575, 500, !dbg !7242
  br i1 %cmp469, label %if.then471, label %if.else474, !dbg !7240

if.then471:                                       ; preds = %if.else468
  %arraydecay472 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !7243
  %576 = load i32, i32* %sf, align 4, !dbg !7244
  %sub473 = sub nsw i32 %576, 400, !dbg !7245
  store i32* %arraydecay472, i32** %slen.addr.i955, align 8, !dbg !7246
  store i32 %sub473, i32* %sf.addr.i956, align 4, !dbg !7246
  store i32 5, i32* %n1.addr.i957, align 4, !dbg !7246
  store i32 4, i32* %n2.addr.i958, align 4, !dbg !7246
  store i32 0, i32* %n3.addr.i959, align 4, !dbg !7246
  %577 = load i32, i32* %n3.addr.i959, align 4, !dbg !7247
  %cmp.i969 = icmp eq i32 %577, 3, !dbg !7248
  br i1 %cmp.i969, label %if.then.i975, label %if.else.i977, !dbg !7249

if.then.i975:                                     ; preds = %if.then471
  %578 = load i32, i32* %sf.addr.i956, align 4, !dbg !7250
  %mul.i970 = mul nsw i32 %578, 171, !dbg !7251
  %shr.i971 = ashr i32 %mul.i970, 9, !dbg !7252
  store i32 %shr.i971, i32* %m.i960, align 4, !dbg !7253
  %579 = load i32, i32* %sf.addr.i956, align 4, !dbg !7254
  %580 = load i32, i32* %m.i960, align 4, !dbg !7255
  %mul1.i972 = mul nsw i32 3, %580, !dbg !7256
  %sub.i973 = sub nsw i32 %579, %mul1.i972, !dbg !7257
  %581 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7258
  %arrayidx.i974 = getelementptr inbounds i32, i32* %581, i64 3, !dbg !7258
  store i32 %sub.i973, i32* %arrayidx.i974, align 4, !dbg !7259
  %582 = load i32, i32* %m.i960, align 4, !dbg !7260
  store i32 %582, i32* %sf.addr.i956, align 4, !dbg !7261
  br label %if.end28.i1004, !dbg !7262

if.else.i977:                                     ; preds = %if.then471
  %583 = load i32, i32* %n3.addr.i959, align 4, !dbg !7263
  %cmp2.i976 = icmp eq i32 %583, 4, !dbg !7264
  br i1 %cmp2.i976, label %if.then3.i981, label %if.else6.i983, !dbg !7263

if.then3.i981:                                    ; preds = %if.else.i977
  %584 = load i32, i32* %sf.addr.i956, align 4, !dbg !7265
  %and.i978 = and i32 %584, 3, !dbg !7266
  %585 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7267
  %arrayidx4.i979 = getelementptr inbounds i32, i32* %585, i64 3, !dbg !7267
  store i32 %and.i978, i32* %arrayidx4.i979, align 4, !dbg !7268
  %586 = load i32, i32* %sf.addr.i956, align 4, !dbg !7269
  %shr5.i980 = ashr i32 %586, 2, !dbg !7269
  store i32 %shr5.i980, i32* %sf.addr.i956, align 4, !dbg !7269
  br label %if.end27.i1002, !dbg !7270

if.else6.i983:                                    ; preds = %if.else.i977
  %587 = load i32, i32* %n3.addr.i959, align 4, !dbg !7271
  %cmp7.i982 = icmp eq i32 %587, 5, !dbg !7272
  br i1 %cmp7.i982, label %if.then8.i989, label %if.else15.i991, !dbg !7271

if.then8.i989:                                    ; preds = %if.else6.i983
  %588 = load i32, i32* %sf.addr.i956, align 4, !dbg !7273
  %mul10.i984 = mul nsw i32 %588, 205, !dbg !7274
  %shr11.i985 = ashr i32 %mul10.i984, 10, !dbg !7275
  store i32 %shr11.i985, i32* %m9.i961, align 4, !dbg !7276
  %589 = load i32, i32* %sf.addr.i956, align 4, !dbg !7277
  %590 = load i32, i32* %m9.i961, align 4, !dbg !7278
  %mul12.i986 = mul nsw i32 5, %590, !dbg !7279
  %sub13.i987 = sub nsw i32 %589, %mul12.i986, !dbg !7280
  %591 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7281
  %arrayidx14.i988 = getelementptr inbounds i32, i32* %591, i64 3, !dbg !7281
  store i32 %sub13.i987, i32* %arrayidx14.i988, align 4, !dbg !7282
  %592 = load i32, i32* %m9.i961, align 4, !dbg !7283
  store i32 %592, i32* %sf.addr.i956, align 4, !dbg !7284
  br label %if.end26.i1001, !dbg !7285

if.else15.i991:                                   ; preds = %if.else6.i983
  %593 = load i32, i32* %n3.addr.i959, align 4, !dbg !7286
  %cmp16.i990 = icmp eq i32 %593, 6, !dbg !7287
  br i1 %cmp16.i990, label %if.then17.i997, label %if.else24.i999, !dbg !7286

if.then17.i997:                                   ; preds = %if.else15.i991
  %594 = load i32, i32* %sf.addr.i956, align 4, !dbg !7288
  %mul19.i992 = mul nsw i32 %594, 171, !dbg !7289
  %shr20.i993 = ashr i32 %mul19.i992, 10, !dbg !7290
  store i32 %shr20.i993, i32* %m18.i962, align 4, !dbg !7291
  %595 = load i32, i32* %sf.addr.i956, align 4, !dbg !7292
  %596 = load i32, i32* %m18.i962, align 4, !dbg !7293
  %mul21.i994 = mul nsw i32 6, %596, !dbg !7294
  %sub22.i995 = sub nsw i32 %595, %mul21.i994, !dbg !7295
  %597 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7296
  %arrayidx23.i996 = getelementptr inbounds i32, i32* %597, i64 3, !dbg !7296
  store i32 %sub22.i995, i32* %arrayidx23.i996, align 4, !dbg !7297
  %598 = load i32, i32* %m18.i962, align 4, !dbg !7298
  store i32 %598, i32* %sf.addr.i956, align 4, !dbg !7299
  br label %if.end.i1000, !dbg !7300

if.else24.i999:                                   ; preds = %if.else15.i991
  %599 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7301
  %arrayidx25.i998 = getelementptr inbounds i32, i32* %599, i64 3, !dbg !7301
  store i32 0, i32* %arrayidx25.i998, align 4, !dbg !7302
  br label %if.end.i1000, !dbg !7246

if.end.i1000:                                     ; preds = %if.else24.i999, %if.then17.i997
  br label %if.end26.i1001, !dbg !7246

if.end26.i1001:                                   ; preds = %if.end.i1000, %if.then8.i989
  br label %if.end27.i1002, !dbg !7246

if.end27.i1002:                                   ; preds = %if.end26.i1001, %if.then3.i981
  br label %if.end28.i1004, !dbg !7246

if.end28.i1004:                                   ; preds = %if.end27.i1002, %if.then.i975
  %600 = load i32, i32* %n2.addr.i958, align 4, !dbg !7303
  %cmp29.i1003 = icmp eq i32 %600, 3, !dbg !7304
  br i1 %cmp29.i1003, label %if.then30.i1010, label %if.else37.i1012, !dbg !7305

if.then30.i1010:                                  ; preds = %if.end28.i1004
  %601 = load i32, i32* %sf.addr.i956, align 4, !dbg !7306
  %mul32.i1005 = mul nsw i32 %601, 171, !dbg !7307
  %shr33.i1006 = ashr i32 %mul32.i1005, 9, !dbg !7308
  store i32 %shr33.i1006, i32* %m31.i963, align 4, !dbg !7309
  %602 = load i32, i32* %sf.addr.i956, align 4, !dbg !7310
  %603 = load i32, i32* %m31.i963, align 4, !dbg !7311
  %mul34.i1007 = mul nsw i32 3, %603, !dbg !7312
  %sub35.i1008 = sub nsw i32 %602, %mul34.i1007, !dbg !7313
  %604 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7314
  %arrayidx36.i1009 = getelementptr inbounds i32, i32* %604, i64 2, !dbg !7314
  store i32 %sub35.i1008, i32* %arrayidx36.i1009, align 4, !dbg !7315
  %605 = load i32, i32* %m31.i963, align 4, !dbg !7316
  store i32 %605, i32* %sf.addr.i956, align 4, !dbg !7317
  br label %if.end66.i1039, !dbg !7318

if.else37.i1012:                                  ; preds = %if.end28.i1004
  %606 = load i32, i32* %n2.addr.i958, align 4, !dbg !7319
  %cmp38.i1011 = icmp eq i32 %606, 4, !dbg !7320
  br i1 %cmp38.i1011, label %if.then39.i1016, label %if.else43.i1018, !dbg !7319

if.then39.i1016:                                  ; preds = %if.else37.i1012
  %607 = load i32, i32* %sf.addr.i956, align 4, !dbg !7321
  %and40.i1013 = and i32 %607, 3, !dbg !7322
  %608 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7323
  %arrayidx41.i1014 = getelementptr inbounds i32, i32* %608, i64 2, !dbg !7323
  store i32 %and40.i1013, i32* %arrayidx41.i1014, align 4, !dbg !7324
  %609 = load i32, i32* %sf.addr.i956, align 4, !dbg !7325
  %shr42.i1015 = ashr i32 %609, 2, !dbg !7325
  store i32 %shr42.i1015, i32* %sf.addr.i956, align 4, !dbg !7325
  br label %if.end65.i1037, !dbg !7326

if.else43.i1018:                                  ; preds = %if.else37.i1012
  %610 = load i32, i32* %n2.addr.i958, align 4, !dbg !7327
  %cmp44.i1017 = icmp eq i32 %610, 5, !dbg !7328
  br i1 %cmp44.i1017, label %if.then45.i1024, label %if.else52.i1026, !dbg !7327

if.then45.i1024:                                  ; preds = %if.else43.i1018
  %611 = load i32, i32* %sf.addr.i956, align 4, !dbg !7329
  %mul47.i1019 = mul nsw i32 %611, 205, !dbg !7330
  %shr48.i1020 = ashr i32 %mul47.i1019, 10, !dbg !7331
  store i32 %shr48.i1020, i32* %m46.i964, align 4, !dbg !7332
  %612 = load i32, i32* %sf.addr.i956, align 4, !dbg !7333
  %613 = load i32, i32* %m46.i964, align 4, !dbg !7334
  %mul49.i1021 = mul nsw i32 5, %613, !dbg !7335
  %sub50.i1022 = sub nsw i32 %612, %mul49.i1021, !dbg !7336
  %614 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7337
  %arrayidx51.i1023 = getelementptr inbounds i32, i32* %614, i64 2, !dbg !7337
  store i32 %sub50.i1022, i32* %arrayidx51.i1023, align 4, !dbg !7338
  %615 = load i32, i32* %m46.i964, align 4, !dbg !7339
  store i32 %615, i32* %sf.addr.i956, align 4, !dbg !7340
  br label %if.end64.i1036, !dbg !7341

if.else52.i1026:                                  ; preds = %if.else43.i1018
  %616 = load i32, i32* %n2.addr.i958, align 4, !dbg !7342
  %cmp53.i1025 = icmp eq i32 %616, 6, !dbg !7343
  br i1 %cmp53.i1025, label %if.then54.i1032, label %if.else61.i1034, !dbg !7342

if.then54.i1032:                                  ; preds = %if.else52.i1026
  %617 = load i32, i32* %sf.addr.i956, align 4, !dbg !7344
  %mul56.i1027 = mul nsw i32 %617, 171, !dbg !7345
  %shr57.i1028 = ashr i32 %mul56.i1027, 10, !dbg !7346
  store i32 %shr57.i1028, i32* %m55.i965, align 4, !dbg !7347
  %618 = load i32, i32* %sf.addr.i956, align 4, !dbg !7348
  %619 = load i32, i32* %m55.i965, align 4, !dbg !7349
  %mul58.i1029 = mul nsw i32 6, %619, !dbg !7350
  %sub59.i1030 = sub nsw i32 %618, %mul58.i1029, !dbg !7351
  %620 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7352
  %arrayidx60.i1031 = getelementptr inbounds i32, i32* %620, i64 2, !dbg !7352
  store i32 %sub59.i1030, i32* %arrayidx60.i1031, align 4, !dbg !7353
  %621 = load i32, i32* %m55.i965, align 4, !dbg !7354
  store i32 %621, i32* %sf.addr.i956, align 4, !dbg !7355
  br label %if.end63.i1035, !dbg !7356

if.else61.i1034:                                  ; preds = %if.else52.i1026
  %622 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7357
  %arrayidx62.i1033 = getelementptr inbounds i32, i32* %622, i64 2, !dbg !7357
  store i32 0, i32* %arrayidx62.i1033, align 4, !dbg !7358
  br label %if.end63.i1035, !dbg !7246

if.end63.i1035:                                   ; preds = %if.else61.i1034, %if.then54.i1032
  br label %if.end64.i1036, !dbg !7246

if.end64.i1036:                                   ; preds = %if.end63.i1035, %if.then45.i1024
  br label %if.end65.i1037, !dbg !7246

if.end65.i1037:                                   ; preds = %if.end64.i1036, %if.then39.i1016
  br label %if.end66.i1039, !dbg !7246

if.end66.i1039:                                   ; preds = %if.end65.i1037, %if.then30.i1010
  %623 = load i32, i32* %n1.addr.i957, align 4, !dbg !7359
  %cmp67.i1038 = icmp eq i32 %623, 3, !dbg !7360
  br i1 %cmp67.i1038, label %if.then68.i1045, label %if.else75.i1047, !dbg !7361

if.then68.i1045:                                  ; preds = %if.end66.i1039
  %624 = load i32, i32* %sf.addr.i956, align 4, !dbg !7362
  %mul70.i1040 = mul nsw i32 %624, 171, !dbg !7363
  %shr71.i1041 = ashr i32 %mul70.i1040, 9, !dbg !7364
  store i32 %shr71.i1041, i32* %m69.i966, align 4, !dbg !7365
  %625 = load i32, i32* %sf.addr.i956, align 4, !dbg !7366
  %626 = load i32, i32* %m69.i966, align 4, !dbg !7367
  %mul72.i1042 = mul nsw i32 3, %626, !dbg !7368
  %sub73.i1043 = sub nsw i32 %625, %mul72.i1042, !dbg !7369
  %627 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7370
  %arrayidx74.i1044 = getelementptr inbounds i32, i32* %627, i64 1, !dbg !7370
  store i32 %sub73.i1043, i32* %arrayidx74.i1044, align 4, !dbg !7371
  %628 = load i32, i32* %m69.i966, align 4, !dbg !7372
  store i32 %628, i32* %sf.addr.i956, align 4, !dbg !7373
  br label %lsf_sf_expand.exit1073, !dbg !7374

if.else75.i1047:                                  ; preds = %if.end66.i1039
  %629 = load i32, i32* %n1.addr.i957, align 4, !dbg !7375
  %cmp76.i1046 = icmp eq i32 %629, 4, !dbg !7376
  br i1 %cmp76.i1046, label %if.then77.i1051, label %if.else81.i1053, !dbg !7375

if.then77.i1051:                                  ; preds = %if.else75.i1047
  %630 = load i32, i32* %sf.addr.i956, align 4, !dbg !7377
  %and78.i1048 = and i32 %630, 3, !dbg !7378
  %631 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7379
  %arrayidx79.i1049 = getelementptr inbounds i32, i32* %631, i64 1, !dbg !7379
  store i32 %and78.i1048, i32* %arrayidx79.i1049, align 4, !dbg !7380
  %632 = load i32, i32* %sf.addr.i956, align 4, !dbg !7381
  %shr80.i1050 = ashr i32 %632, 2, !dbg !7381
  store i32 %shr80.i1050, i32* %sf.addr.i956, align 4, !dbg !7381
  br label %if.end103.i1072, !dbg !7382

if.else81.i1053:                                  ; preds = %if.else75.i1047
  %633 = load i32, i32* %n1.addr.i957, align 4, !dbg !7383
  %cmp82.i1052 = icmp eq i32 %633, 5, !dbg !7384
  br i1 %cmp82.i1052, label %if.then83.i1059, label %if.else90.i1061, !dbg !7383

if.then83.i1059:                                  ; preds = %if.else81.i1053
  %634 = load i32, i32* %sf.addr.i956, align 4, !dbg !7385
  %mul85.i1054 = mul nsw i32 %634, 205, !dbg !7386
  %shr86.i1055 = ashr i32 %mul85.i1054, 10, !dbg !7387
  store i32 %shr86.i1055, i32* %m84.i967, align 4, !dbg !7388
  %635 = load i32, i32* %sf.addr.i956, align 4, !dbg !7389
  %636 = load i32, i32* %m84.i967, align 4, !dbg !7390
  %mul87.i1056 = mul nsw i32 5, %636, !dbg !7391
  %sub88.i1057 = sub nsw i32 %635, %mul87.i1056, !dbg !7392
  %637 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7393
  %arrayidx89.i1058 = getelementptr inbounds i32, i32* %637, i64 1, !dbg !7393
  store i32 %sub88.i1057, i32* %arrayidx89.i1058, align 4, !dbg !7394
  %638 = load i32, i32* %m84.i967, align 4, !dbg !7395
  store i32 %638, i32* %sf.addr.i956, align 4, !dbg !7396
  br label %if.end102.i1071, !dbg !7397

if.else90.i1061:                                  ; preds = %if.else81.i1053
  %639 = load i32, i32* %n1.addr.i957, align 4, !dbg !7398
  %cmp91.i1060 = icmp eq i32 %639, 6, !dbg !7399
  br i1 %cmp91.i1060, label %if.then92.i1067, label %if.else99.i1069, !dbg !7398

if.then92.i1067:                                  ; preds = %if.else90.i1061
  %640 = load i32, i32* %sf.addr.i956, align 4, !dbg !7400
  %mul94.i1062 = mul nsw i32 %640, 171, !dbg !7401
  %shr95.i1063 = ashr i32 %mul94.i1062, 10, !dbg !7402
  store i32 %shr95.i1063, i32* %m93.i968, align 4, !dbg !7403
  %641 = load i32, i32* %sf.addr.i956, align 4, !dbg !7404
  %642 = load i32, i32* %m93.i968, align 4, !dbg !7405
  %mul96.i1064 = mul nsw i32 6, %642, !dbg !7406
  %sub97.i1065 = sub nsw i32 %641, %mul96.i1064, !dbg !7407
  %643 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7408
  %arrayidx98.i1066 = getelementptr inbounds i32, i32* %643, i64 1, !dbg !7408
  store i32 %sub97.i1065, i32* %arrayidx98.i1066, align 4, !dbg !7409
  %644 = load i32, i32* %m93.i968, align 4, !dbg !7410
  store i32 %644, i32* %sf.addr.i956, align 4, !dbg !7411
  br label %if.end101.i1070, !dbg !7412

if.else99.i1069:                                  ; preds = %if.else90.i1061
  %645 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7413
  %arrayidx100.i1068 = getelementptr inbounds i32, i32* %645, i64 1, !dbg !7413
  store i32 0, i32* %arrayidx100.i1068, align 4, !dbg !7414
  br label %if.end101.i1070, !dbg !7246

if.end101.i1070:                                  ; preds = %if.else99.i1069, %if.then92.i1067
  br label %if.end102.i1071, !dbg !7246

if.end102.i1071:                                  ; preds = %if.end101.i1070, %if.then83.i1059
  br label %if.end103.i1072, !dbg !7246

if.end103.i1072:                                  ; preds = %if.end102.i1071, %if.then77.i1051
  br label %lsf_sf_expand.exit1073, !dbg !7246

lsf_sf_expand.exit1073:                           ; preds = %if.then68.i1045, %if.end103.i1072
  %646 = load i32, i32* %sf.addr.i956, align 4, !dbg !7415
  %647 = load i32*, i32** %slen.addr.i955, align 8, !dbg !7416
  store i32 %646, i32* %647, align 4, !dbg !7417
  store i32 1, i32* %tindex2, align 4, !dbg !7418
  br label %if.end478, !dbg !7419

if.else474:                                       ; preds = %if.else468
  %arraydecay475 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i32 0, i32 0, !dbg !7420
  %648 = load i32, i32* %sf, align 4, !dbg !7421
  %sub476 = sub nsw i32 %648, 500, !dbg !7422
  store i32* %arraydecay475, i32** %slen.addr.i1074, align 8, !dbg !7423
  store i32 %sub476, i32* %sf.addr.i1075, align 4, !dbg !7423
  store i32 3, i32* %n1.addr.i1076, align 4, !dbg !7423
  store i32 0, i32* %n2.addr.i1077, align 4, !dbg !7423
  store i32 0, i32* %n3.addr.i1078, align 4, !dbg !7423
  %649 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7424
  %cmp.i1088 = icmp eq i32 %649, 3, !dbg !7425
  br i1 %cmp.i1088, label %if.then.i1094, label %if.else.i1096, !dbg !7426

if.then.i1094:                                    ; preds = %if.else474
  %650 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7427
  %mul.i1089 = mul nsw i32 %650, 171, !dbg !7428
  %shr.i1090 = ashr i32 %mul.i1089, 9, !dbg !7429
  store i32 %shr.i1090, i32* %m.i1079, align 4, !dbg !7430
  %651 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7431
  %652 = load i32, i32* %m.i1079, align 4, !dbg !7432
  %mul1.i1091 = mul nsw i32 3, %652, !dbg !7433
  %sub.i1092 = sub nsw i32 %651, %mul1.i1091, !dbg !7434
  %653 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7435
  %arrayidx.i1093 = getelementptr inbounds i32, i32* %653, i64 3, !dbg !7435
  store i32 %sub.i1092, i32* %arrayidx.i1093, align 4, !dbg !7436
  %654 = load i32, i32* %m.i1079, align 4, !dbg !7437
  store i32 %654, i32* %sf.addr.i1075, align 4, !dbg !7438
  br label %if.end28.i1123, !dbg !7439

if.else.i1096:                                    ; preds = %if.else474
  %655 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7440
  %cmp2.i1095 = icmp eq i32 %655, 4, !dbg !7441
  br i1 %cmp2.i1095, label %if.then3.i1100, label %if.else6.i1102, !dbg !7440

if.then3.i1100:                                   ; preds = %if.else.i1096
  %656 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7442
  %and.i1097 = and i32 %656, 3, !dbg !7443
  %657 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7444
  %arrayidx4.i1098 = getelementptr inbounds i32, i32* %657, i64 3, !dbg !7444
  store i32 %and.i1097, i32* %arrayidx4.i1098, align 4, !dbg !7445
  %658 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7446
  %shr5.i1099 = ashr i32 %658, 2, !dbg !7446
  store i32 %shr5.i1099, i32* %sf.addr.i1075, align 4, !dbg !7446
  br label %if.end27.i1121, !dbg !7447

if.else6.i1102:                                   ; preds = %if.else.i1096
  %659 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7448
  %cmp7.i1101 = icmp eq i32 %659, 5, !dbg !7449
  br i1 %cmp7.i1101, label %if.then8.i1108, label %if.else15.i1110, !dbg !7448

if.then8.i1108:                                   ; preds = %if.else6.i1102
  %660 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7450
  %mul10.i1103 = mul nsw i32 %660, 205, !dbg !7451
  %shr11.i1104 = ashr i32 %mul10.i1103, 10, !dbg !7452
  store i32 %shr11.i1104, i32* %m9.i1080, align 4, !dbg !7453
  %661 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7454
  %662 = load i32, i32* %m9.i1080, align 4, !dbg !7455
  %mul12.i1105 = mul nsw i32 5, %662, !dbg !7456
  %sub13.i1106 = sub nsw i32 %661, %mul12.i1105, !dbg !7457
  %663 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7458
  %arrayidx14.i1107 = getelementptr inbounds i32, i32* %663, i64 3, !dbg !7458
  store i32 %sub13.i1106, i32* %arrayidx14.i1107, align 4, !dbg !7459
  %664 = load i32, i32* %m9.i1080, align 4, !dbg !7460
  store i32 %664, i32* %sf.addr.i1075, align 4, !dbg !7461
  br label %if.end26.i1120, !dbg !7462

if.else15.i1110:                                  ; preds = %if.else6.i1102
  %665 = load i32, i32* %n3.addr.i1078, align 4, !dbg !7463
  %cmp16.i1109 = icmp eq i32 %665, 6, !dbg !7464
  br i1 %cmp16.i1109, label %if.then17.i1116, label %if.else24.i1118, !dbg !7463

if.then17.i1116:                                  ; preds = %if.else15.i1110
  %666 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7465
  %mul19.i1111 = mul nsw i32 %666, 171, !dbg !7466
  %shr20.i1112 = ashr i32 %mul19.i1111, 10, !dbg !7467
  store i32 %shr20.i1112, i32* %m18.i1081, align 4, !dbg !7468
  %667 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7469
  %668 = load i32, i32* %m18.i1081, align 4, !dbg !7470
  %mul21.i1113 = mul nsw i32 6, %668, !dbg !7471
  %sub22.i1114 = sub nsw i32 %667, %mul21.i1113, !dbg !7472
  %669 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7473
  %arrayidx23.i1115 = getelementptr inbounds i32, i32* %669, i64 3, !dbg !7473
  store i32 %sub22.i1114, i32* %arrayidx23.i1115, align 4, !dbg !7474
  %670 = load i32, i32* %m18.i1081, align 4, !dbg !7475
  store i32 %670, i32* %sf.addr.i1075, align 4, !dbg !7476
  br label %if.end.i1119, !dbg !7477

if.else24.i1118:                                  ; preds = %if.else15.i1110
  %671 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7478
  %arrayidx25.i1117 = getelementptr inbounds i32, i32* %671, i64 3, !dbg !7478
  store i32 0, i32* %arrayidx25.i1117, align 4, !dbg !7479
  br label %if.end.i1119, !dbg !7423

if.end.i1119:                                     ; preds = %if.else24.i1118, %if.then17.i1116
  br label %if.end26.i1120, !dbg !7423

if.end26.i1120:                                   ; preds = %if.end.i1119, %if.then8.i1108
  br label %if.end27.i1121, !dbg !7423

if.end27.i1121:                                   ; preds = %if.end26.i1120, %if.then3.i1100
  br label %if.end28.i1123, !dbg !7423

if.end28.i1123:                                   ; preds = %if.end27.i1121, %if.then.i1094
  %672 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7480
  %cmp29.i1122 = icmp eq i32 %672, 3, !dbg !7481
  br i1 %cmp29.i1122, label %if.then30.i1129, label %if.else37.i1131, !dbg !7482

if.then30.i1129:                                  ; preds = %if.end28.i1123
  %673 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7483
  %mul32.i1124 = mul nsw i32 %673, 171, !dbg !7484
  %shr33.i1125 = ashr i32 %mul32.i1124, 9, !dbg !7485
  store i32 %shr33.i1125, i32* %m31.i1082, align 4, !dbg !7486
  %674 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7487
  %675 = load i32, i32* %m31.i1082, align 4, !dbg !7488
  %mul34.i1126 = mul nsw i32 3, %675, !dbg !7489
  %sub35.i1127 = sub nsw i32 %674, %mul34.i1126, !dbg !7490
  %676 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7491
  %arrayidx36.i1128 = getelementptr inbounds i32, i32* %676, i64 2, !dbg !7491
  store i32 %sub35.i1127, i32* %arrayidx36.i1128, align 4, !dbg !7492
  %677 = load i32, i32* %m31.i1082, align 4, !dbg !7493
  store i32 %677, i32* %sf.addr.i1075, align 4, !dbg !7494
  br label %if.end66.i1158, !dbg !7495

if.else37.i1131:                                  ; preds = %if.end28.i1123
  %678 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7496
  %cmp38.i1130 = icmp eq i32 %678, 4, !dbg !7497
  br i1 %cmp38.i1130, label %if.then39.i1135, label %if.else43.i1137, !dbg !7496

if.then39.i1135:                                  ; preds = %if.else37.i1131
  %679 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7498
  %and40.i1132 = and i32 %679, 3, !dbg !7499
  %680 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7500
  %arrayidx41.i1133 = getelementptr inbounds i32, i32* %680, i64 2, !dbg !7500
  store i32 %and40.i1132, i32* %arrayidx41.i1133, align 4, !dbg !7501
  %681 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7502
  %shr42.i1134 = ashr i32 %681, 2, !dbg !7502
  store i32 %shr42.i1134, i32* %sf.addr.i1075, align 4, !dbg !7502
  br label %if.end65.i1156, !dbg !7503

if.else43.i1137:                                  ; preds = %if.else37.i1131
  %682 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7504
  %cmp44.i1136 = icmp eq i32 %682, 5, !dbg !7505
  br i1 %cmp44.i1136, label %if.then45.i1143, label %if.else52.i1145, !dbg !7504

if.then45.i1143:                                  ; preds = %if.else43.i1137
  %683 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7506
  %mul47.i1138 = mul nsw i32 %683, 205, !dbg !7507
  %shr48.i1139 = ashr i32 %mul47.i1138, 10, !dbg !7508
  store i32 %shr48.i1139, i32* %m46.i1083, align 4, !dbg !7509
  %684 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7510
  %685 = load i32, i32* %m46.i1083, align 4, !dbg !7511
  %mul49.i1140 = mul nsw i32 5, %685, !dbg !7512
  %sub50.i1141 = sub nsw i32 %684, %mul49.i1140, !dbg !7513
  %686 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7514
  %arrayidx51.i1142 = getelementptr inbounds i32, i32* %686, i64 2, !dbg !7514
  store i32 %sub50.i1141, i32* %arrayidx51.i1142, align 4, !dbg !7515
  %687 = load i32, i32* %m46.i1083, align 4, !dbg !7516
  store i32 %687, i32* %sf.addr.i1075, align 4, !dbg !7517
  br label %if.end64.i1155, !dbg !7518

if.else52.i1145:                                  ; preds = %if.else43.i1137
  %688 = load i32, i32* %n2.addr.i1077, align 4, !dbg !7519
  %cmp53.i1144 = icmp eq i32 %688, 6, !dbg !7520
  br i1 %cmp53.i1144, label %if.then54.i1151, label %if.else61.i1153, !dbg !7519

if.then54.i1151:                                  ; preds = %if.else52.i1145
  %689 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7521
  %mul56.i1146 = mul nsw i32 %689, 171, !dbg !7522
  %shr57.i1147 = ashr i32 %mul56.i1146, 10, !dbg !7523
  store i32 %shr57.i1147, i32* %m55.i1084, align 4, !dbg !7524
  %690 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7525
  %691 = load i32, i32* %m55.i1084, align 4, !dbg !7526
  %mul58.i1148 = mul nsw i32 6, %691, !dbg !7527
  %sub59.i1149 = sub nsw i32 %690, %mul58.i1148, !dbg !7528
  %692 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7529
  %arrayidx60.i1150 = getelementptr inbounds i32, i32* %692, i64 2, !dbg !7529
  store i32 %sub59.i1149, i32* %arrayidx60.i1150, align 4, !dbg !7530
  %693 = load i32, i32* %m55.i1084, align 4, !dbg !7531
  store i32 %693, i32* %sf.addr.i1075, align 4, !dbg !7532
  br label %if.end63.i1154, !dbg !7533

if.else61.i1153:                                  ; preds = %if.else52.i1145
  %694 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7534
  %arrayidx62.i1152 = getelementptr inbounds i32, i32* %694, i64 2, !dbg !7534
  store i32 0, i32* %arrayidx62.i1152, align 4, !dbg !7535
  br label %if.end63.i1154, !dbg !7423

if.end63.i1154:                                   ; preds = %if.else61.i1153, %if.then54.i1151
  br label %if.end64.i1155, !dbg !7423

if.end64.i1155:                                   ; preds = %if.end63.i1154, %if.then45.i1143
  br label %if.end65.i1156, !dbg !7423

if.end65.i1156:                                   ; preds = %if.end64.i1155, %if.then39.i1135
  br label %if.end66.i1158, !dbg !7423

if.end66.i1158:                                   ; preds = %if.end65.i1156, %if.then30.i1129
  %695 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7536
  %cmp67.i1157 = icmp eq i32 %695, 3, !dbg !7537
  br i1 %cmp67.i1157, label %if.then68.i1164, label %if.else75.i1166, !dbg !7538

if.then68.i1164:                                  ; preds = %if.end66.i1158
  %696 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7539
  %mul70.i1159 = mul nsw i32 %696, 171, !dbg !7540
  %shr71.i1160 = ashr i32 %mul70.i1159, 9, !dbg !7541
  store i32 %shr71.i1160, i32* %m69.i1085, align 4, !dbg !7542
  %697 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7543
  %698 = load i32, i32* %m69.i1085, align 4, !dbg !7544
  %mul72.i1161 = mul nsw i32 3, %698, !dbg !7545
  %sub73.i1162 = sub nsw i32 %697, %mul72.i1161, !dbg !7546
  %699 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7547
  %arrayidx74.i1163 = getelementptr inbounds i32, i32* %699, i64 1, !dbg !7547
  store i32 %sub73.i1162, i32* %arrayidx74.i1163, align 4, !dbg !7548
  %700 = load i32, i32* %m69.i1085, align 4, !dbg !7549
  store i32 %700, i32* %sf.addr.i1075, align 4, !dbg !7550
  br label %lsf_sf_expand.exit1192, !dbg !7551

if.else75.i1166:                                  ; preds = %if.end66.i1158
  %701 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7552
  %cmp76.i1165 = icmp eq i32 %701, 4, !dbg !7553
  br i1 %cmp76.i1165, label %if.then77.i1170, label %if.else81.i1172, !dbg !7552

if.then77.i1170:                                  ; preds = %if.else75.i1166
  %702 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7554
  %and78.i1167 = and i32 %702, 3, !dbg !7555
  %703 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7556
  %arrayidx79.i1168 = getelementptr inbounds i32, i32* %703, i64 1, !dbg !7556
  store i32 %and78.i1167, i32* %arrayidx79.i1168, align 4, !dbg !7557
  %704 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7558
  %shr80.i1169 = ashr i32 %704, 2, !dbg !7558
  store i32 %shr80.i1169, i32* %sf.addr.i1075, align 4, !dbg !7558
  br label %if.end103.i1191, !dbg !7559

if.else81.i1172:                                  ; preds = %if.else75.i1166
  %705 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7560
  %cmp82.i1171 = icmp eq i32 %705, 5, !dbg !7561
  br i1 %cmp82.i1171, label %if.then83.i1178, label %if.else90.i1180, !dbg !7560

if.then83.i1178:                                  ; preds = %if.else81.i1172
  %706 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7562
  %mul85.i1173 = mul nsw i32 %706, 205, !dbg !7563
  %shr86.i1174 = ashr i32 %mul85.i1173, 10, !dbg !7564
  store i32 %shr86.i1174, i32* %m84.i1086, align 4, !dbg !7565
  %707 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7566
  %708 = load i32, i32* %m84.i1086, align 4, !dbg !7567
  %mul87.i1175 = mul nsw i32 5, %708, !dbg !7568
  %sub88.i1176 = sub nsw i32 %707, %mul87.i1175, !dbg !7569
  %709 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7570
  %arrayidx89.i1177 = getelementptr inbounds i32, i32* %709, i64 1, !dbg !7570
  store i32 %sub88.i1176, i32* %arrayidx89.i1177, align 4, !dbg !7571
  %710 = load i32, i32* %m84.i1086, align 4, !dbg !7572
  store i32 %710, i32* %sf.addr.i1075, align 4, !dbg !7573
  br label %if.end102.i1190, !dbg !7574

if.else90.i1180:                                  ; preds = %if.else81.i1172
  %711 = load i32, i32* %n1.addr.i1076, align 4, !dbg !7575
  %cmp91.i1179 = icmp eq i32 %711, 6, !dbg !7576
  br i1 %cmp91.i1179, label %if.then92.i1186, label %if.else99.i1188, !dbg !7575

if.then92.i1186:                                  ; preds = %if.else90.i1180
  %712 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7577
  %mul94.i1181 = mul nsw i32 %712, 171, !dbg !7578
  %shr95.i1182 = ashr i32 %mul94.i1181, 10, !dbg !7579
  store i32 %shr95.i1182, i32* %m93.i1087, align 4, !dbg !7580
  %713 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7581
  %714 = load i32, i32* %m93.i1087, align 4, !dbg !7582
  %mul96.i1183 = mul nsw i32 6, %714, !dbg !7583
  %sub97.i1184 = sub nsw i32 %713, %mul96.i1183, !dbg !7584
  %715 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7585
  %arrayidx98.i1185 = getelementptr inbounds i32, i32* %715, i64 1, !dbg !7585
  store i32 %sub97.i1184, i32* %arrayidx98.i1185, align 4, !dbg !7586
  %716 = load i32, i32* %m93.i1087, align 4, !dbg !7587
  store i32 %716, i32* %sf.addr.i1075, align 4, !dbg !7588
  br label %if.end101.i1189, !dbg !7589

if.else99.i1188:                                  ; preds = %if.else90.i1180
  %717 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7590
  %arrayidx100.i1187 = getelementptr inbounds i32, i32* %717, i64 1, !dbg !7590
  store i32 0, i32* %arrayidx100.i1187, align 4, !dbg !7591
  br label %if.end101.i1189, !dbg !7423

if.end101.i1189:                                  ; preds = %if.else99.i1188, %if.then92.i1186
  br label %if.end102.i1190, !dbg !7423

if.end102.i1190:                                  ; preds = %if.end101.i1189, %if.then83.i1178
  br label %if.end103.i1191, !dbg !7423

if.end103.i1191:                                  ; preds = %if.end102.i1190, %if.then77.i1170
  br label %lsf_sf_expand.exit1192, !dbg !7423

lsf_sf_expand.exit1192:                           ; preds = %if.then68.i1164, %if.end103.i1191
  %718 = load i32, i32* %sf.addr.i1075, align 4, !dbg !7592
  %719 = load i32*, i32** %slen.addr.i1074, align 8, !dbg !7593
  store i32 %718, i32* %719, align 4, !dbg !7594
  store i32 2, i32* %tindex2, align 4, !dbg !7595
  %720 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7596
  %preflag477 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %720, i32 0, i32 12, !dbg !7597
  store i32 1, i32* %preflag477, align 16, !dbg !7598
  br label %if.end478

if.end478:                                        ; preds = %lsf_sf_expand.exit1192, %lsf_sf_expand.exit1073
  br label %if.end479

if.end479:                                        ; preds = %if.end478, %lsf_sf_expand.exit954
  br label %if.end480

if.end480:                                        ; preds = %if.end479, %if.end462
  store i32 0, i32* %j, align 4, !dbg !7599
  store i32 0, i32* %k, align 4, !dbg !7600
  br label %for.cond481, !dbg !7602

for.cond481:                                      ; preds = %for.inc523, %if.end480
  %721 = load i32, i32* %k, align 4, !dbg !7603
  %cmp482 = icmp slt i32 %721, 4, !dbg !7606
  br i1 %cmp482, label %for.body484, label %for.end525, !dbg !7607

for.body484:                                      ; preds = %for.cond481
  %722 = load i32, i32* %k, align 4, !dbg !7608
  %idxprom485 = sext i32 %722 to i64, !dbg !7610
  %723 = load i32, i32* %tindex, align 4, !dbg !7611
  %idxprom486 = sext i32 %723 to i64, !dbg !7610
  %724 = load i32, i32* %tindex2, align 4, !dbg !7612
  %idxprom487 = sext i32 %724 to i64, !dbg !7610
  %arrayidx488 = getelementptr inbounds [6 x [3 x [4 x i8]]], [6 x [3 x [4 x i8]]]* @lsf_nsf_table, i64 0, i64 %idxprom487, !dbg !7610
  %arrayidx489 = getelementptr inbounds [3 x [4 x i8]], [3 x [4 x i8]]* %arrayidx488, i64 0, i64 %idxprom486, !dbg !7610
  %arrayidx490 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx489, i64 0, i64 %idxprom485, !dbg !7610
  %725 = load i8, i8* %arrayidx490, align 1, !dbg !7610
  %conv491 = zext i8 %725 to i32, !dbg !7610
  store i32 %conv491, i32* %n, align 4, !dbg !7613
  %726 = load i32, i32* %k, align 4, !dbg !7614
  %idxprom492 = sext i32 %726 to i64, !dbg !7615
  %arrayidx493 = getelementptr inbounds [4 x i32], [4 x i32]* %slen427, i64 0, i64 %idxprom492, !dbg !7615
  %727 = load i32, i32* %arrayidx493, align 4, !dbg !7615
  store i32 %727, i32* %sl, align 4, !dbg !7616
  %728 = load i32, i32* %sl, align 4, !dbg !7617
  %tobool494 = icmp ne i32 %728, 0, !dbg !7617
  br i1 %tobool494, label %if.then495, label %if.else510, !dbg !7619

if.then495:                                       ; preds = %for.body484
  store i32 0, i32* %i, align 4, !dbg !7620
  br label %for.cond496, !dbg !7623

for.cond496:                                      ; preds = %for.inc507, %if.then495
  %729 = load i32, i32* %i, align 4, !dbg !7624
  %730 = load i32, i32* %n, align 4, !dbg !7627
  %cmp497 = icmp slt i32 %729, %730, !dbg !7628
  br i1 %cmp497, label %for.body499, label %for.end509, !dbg !7629

for.body499:                                      ; preds = %for.cond496
  %731 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7630
  %gb500 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %731, i32 0, i32 14, !dbg !7631
  %732 = load i32, i32* %sl, align 4, !dbg !7632
  %call501 = call i32 @get_bits(%struct.GetBitContext* %gb500, i32 %732), !dbg !7633
  %conv502 = trunc i32 %call501 to i8, !dbg !7633
  %733 = load i32, i32* %j, align 4, !dbg !7634
  %inc503 = add nsw i32 %733, 1, !dbg !7634
  store i32 %inc503, i32* %j, align 4, !dbg !7634
  %idxprom504 = sext i32 %733 to i64, !dbg !7635
  %734 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7635
  %scale_factors505 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %734, i32 0, i32 15, !dbg !7636
  %arrayidx506 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors505, i64 0, i64 %idxprom504, !dbg !7635
  store i8 %conv502, i8* %arrayidx506, align 1, !dbg !7637
  br label %for.inc507, !dbg !7635

for.inc507:                                       ; preds = %for.body499
  %735 = load i32, i32* %i, align 4, !dbg !7638
  %inc508 = add nsw i32 %735, 1, !dbg !7638
  store i32 %inc508, i32* %i, align 4, !dbg !7638
  br label %for.cond496, !dbg !7640, !llvm.loop !7641

for.end509:                                       ; preds = %for.cond496
  br label %if.end522, !dbg !7643

if.else510:                                       ; preds = %for.body484
  store i32 0, i32* %i, align 4, !dbg !7644
  br label %for.cond511, !dbg !7647

for.cond511:                                      ; preds = %for.inc519, %if.else510
  %736 = load i32, i32* %i, align 4, !dbg !7648
  %737 = load i32, i32* %n, align 4, !dbg !7651
  %cmp512 = icmp slt i32 %736, %737, !dbg !7652
  br i1 %cmp512, label %for.body514, label %for.end521, !dbg !7653

for.body514:                                      ; preds = %for.cond511
  %738 = load i32, i32* %j, align 4, !dbg !7654
  %inc515 = add nsw i32 %738, 1, !dbg !7654
  store i32 %inc515, i32* %j, align 4, !dbg !7654
  %idxprom516 = sext i32 %738 to i64, !dbg !7655
  %739 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7655
  %scale_factors517 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %739, i32 0, i32 15, !dbg !7656
  %arrayidx518 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors517, i64 0, i64 %idxprom516, !dbg !7655
  store i8 0, i8* %arrayidx518, align 1, !dbg !7657
  br label %for.inc519, !dbg !7655

for.inc519:                                       ; preds = %for.body514
  %740 = load i32, i32* %i, align 4, !dbg !7658
  %inc520 = add nsw i32 %740, 1, !dbg !7658
  store i32 %inc520, i32* %i, align 4, !dbg !7658
  br label %for.cond511, !dbg !7660, !llvm.loop !7661

for.end521:                                       ; preds = %for.cond511
  br label %if.end522

if.end522:                                        ; preds = %for.end521, %for.end509
  br label %for.inc523, !dbg !7663

for.inc523:                                       ; preds = %if.end522
  %741 = load i32, i32* %k, align 4, !dbg !7664
  %inc524 = add nsw i32 %741, 1, !dbg !7664
  store i32 %inc524, i32* %k, align 4, !dbg !7664
  br label %for.cond481, !dbg !7666, !llvm.loop !7667

for.end525:                                       ; preds = %for.cond481
  br label %for.cond526, !dbg !7669

for.cond526:                                      ; preds = %for.inc533, %for.end525
  %742 = load i32, i32* %j, align 4, !dbg !7670
  %cmp527 = icmp slt i32 %742, 40, !dbg !7674
  br i1 %cmp527, label %for.body529, label %for.end535, !dbg !7675

for.body529:                                      ; preds = %for.cond526
  %743 = load i32, i32* %j, align 4, !dbg !7676
  %idxprom530 = sext i32 %743 to i64, !dbg !7677
  %744 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7677
  %scale_factors531 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %744, i32 0, i32 15, !dbg !7678
  %arrayidx532 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors531, i64 0, i64 %idxprom530, !dbg !7677
  store i8 0, i8* %arrayidx532, align 1, !dbg !7679
  br label %for.inc533, !dbg !7677

for.inc533:                                       ; preds = %for.body529
  %745 = load i32, i32* %j, align 4, !dbg !7680
  %inc534 = add nsw i32 %745, 1, !dbg !7680
  store i32 %inc534, i32* %j, align 4, !dbg !7680
  br label %for.cond526, !dbg !7682, !llvm.loop !7683

for.end535:                                       ; preds = %for.cond526
  br label %if.end536

if.end536:                                        ; preds = %for.end535, %if.end425
  %746 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7684
  %747 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7685
  %arraydecay537 = getelementptr inbounds [576 x i16], [576 x i16]* %exponents, i32 0, i32 0, !dbg !7686
  call void @exponents_from_scale_factors(%struct.MPADecodeContext* %746, %struct.GranuleDef* %747, i16* %arraydecay537), !dbg !7687
  %748 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7688
  %749 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7689
  %arraydecay538 = getelementptr inbounds [576 x i16], [576 x i16]* %exponents, i32 0, i32 0, !dbg !7690
  %750 = load i32, i32* %bits_pos, align 4, !dbg !7691
  %751 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7692
  %part2_3_length539 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %751, i32 0, i32 1, !dbg !7693
  %752 = load i32, i32* %part2_3_length539, align 4, !dbg !7693
  %add540 = add nsw i32 %750, %752, !dbg !7694
  %call541 = call i32 @huffman_decode(%struct.MPADecodeContext* %748, %struct.GranuleDef* %749, i16* %arraydecay538, i32 %add540), !dbg !7695
  br label %for.inc542, !dbg !7696

for.inc542:                                       ; preds = %if.end536
  %753 = load i32, i32* %ch, align 4, !dbg !7697
  %inc543 = add nsw i32 %753, 1, !dbg !7697
  store i32 %inc543, i32* %ch, align 4, !dbg !7697
  br label %for.cond245, !dbg !7699, !llvm.loop !7700

for.end544:                                       ; preds = %for.cond245
  %754 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7702
  %mode = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %754, i32 0, i32 7, !dbg !7704
  %755 = load i32, i32* %mode, align 4, !dbg !7704
  %cmp545 = icmp eq i32 %755, 1, !dbg !7705
  br i1 %cmp545, label %if.then547, label %if.end556, !dbg !7706

if.then547:                                       ; preds = %for.end544
  %756 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7707
  %757 = load i32, i32* %gr, align 4, !dbg !7708
  %idxprom548 = sext i32 %757 to i64, !dbg !7709
  %758 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7709
  %granules549 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %758, i32 0, i32 22, !dbg !7710
  %arrayidx550 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules549, i64 0, i64 0, !dbg !7709
  %arrayidx551 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx550, i64 0, i64 %idxprom548, !dbg !7709
  %759 = load i32, i32* %gr, align 4, !dbg !7711
  %idxprom552 = sext i32 %759 to i64, !dbg !7712
  %760 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7712
  %granules553 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %760, i32 0, i32 22, !dbg !7713
  %arrayidx554 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules553, i64 0, i64 1, !dbg !7712
  %arrayidx555 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx554, i64 0, i64 %idxprom552, !dbg !7712
  call void @compute_stereo(%struct.MPADecodeContext* %756, %struct.GranuleDef* %arrayidx551, %struct.GranuleDef* %arrayidx555), !dbg !7714
  br label %if.end556, !dbg !7714

if.end556:                                        ; preds = %if.then547, %for.end544
  store i32 0, i32* %ch, align 4, !dbg !7715
  br label %for.cond557, !dbg !7717

for.cond557:                                      ; preds = %for.inc578, %if.end556
  %761 = load i32, i32* %ch, align 4, !dbg !7718
  %762 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7721
  %nb_channels558 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %762, i32 0, i32 6, !dbg !7722
  %763 = load i32, i32* %nb_channels558, align 8, !dbg !7722
  %cmp559 = icmp slt i32 %761, %763, !dbg !7723
  br i1 %cmp559, label %for.body561, label %for.end580, !dbg !7724

for.body561:                                      ; preds = %for.cond557
  %764 = load i32, i32* %gr, align 4, !dbg !7725
  %idxprom562 = sext i32 %764 to i64, !dbg !7727
  %765 = load i32, i32* %ch, align 4, !dbg !7728
  %idxprom563 = sext i32 %765 to i64, !dbg !7727
  %766 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7727
  %granules564 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %766, i32 0, i32 22, !dbg !7729
  %arrayidx565 = getelementptr inbounds [2 x [2 x %struct.GranuleDef]], [2 x [2 x %struct.GranuleDef]]* %granules564, i64 0, i64 %idxprom563, !dbg !7727
  %arrayidx566 = getelementptr inbounds [2 x %struct.GranuleDef], [2 x %struct.GranuleDef]* %arrayidx565, i64 0, i64 %idxprom562, !dbg !7727
  store %struct.GranuleDef* %arrayidx566, %struct.GranuleDef** %g, align 8, !dbg !7730
  %767 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7731
  %768 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7732
  call void @reorder_block(%struct.MPADecodeContext* %767, %struct.GranuleDef* %768), !dbg !7733
  %769 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7734
  %770 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7735
  call void @compute_antialias(%struct.MPADecodeContext* %769, %struct.GranuleDef* %770), !dbg !7736
  %771 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7737
  %772 = load %struct.GranuleDef*, %struct.GranuleDef** %g, align 8, !dbg !7738
  %773 = load i32, i32* %gr, align 4, !dbg !7739
  %mul567 = mul nsw i32 18, %773, !dbg !7740
  %idxprom568 = sext i32 %mul567 to i64, !dbg !7741
  %774 = load i32, i32* %ch, align 4, !dbg !7742
  %idxprom569 = sext i32 %774 to i64, !dbg !7741
  %775 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7741
  %sb_samples570 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %775, i32 0, i32 20, !dbg !7743
  %arrayidx571 = getelementptr inbounds [2 x [36 x [32 x i32]]], [2 x [36 x [32 x i32]]]* %sb_samples570, i64 0, i64 %idxprom569, !dbg !7741
  %arrayidx572 = getelementptr inbounds [36 x [32 x i32]], [36 x [32 x i32]]* %arrayidx571, i64 0, i64 %idxprom568, !dbg !7741
  %arrayidx573 = getelementptr inbounds [32 x i32], [32 x i32]* %arrayidx572, i64 0, i64 0, !dbg !7741
  %776 = load i32, i32* %ch, align 4, !dbg !7744
  %idxprom574 = sext i32 %776 to i64, !dbg !7745
  %777 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7745
  %mdct_buf575 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %777, i32 0, i32 21, !dbg !7746
  %arrayidx576 = getelementptr inbounds [2 x [576 x i32]], [2 x [576 x i32]]* %mdct_buf575, i64 0, i64 %idxprom574, !dbg !7745
  %arraydecay577 = getelementptr inbounds [576 x i32], [576 x i32]* %arrayidx576, i32 0, i32 0, !dbg !7745
  call void @compute_imdct(%struct.MPADecodeContext* %771, %struct.GranuleDef* %772, i32* %arrayidx573, i32* %arraydecay577), !dbg !7747
  br label %for.inc578, !dbg !7748

for.inc578:                                       ; preds = %for.body561
  %778 = load i32, i32* %ch, align 4, !dbg !7749
  %inc579 = add nsw i32 %778, 1, !dbg !7749
  store i32 %inc579, i32* %ch, align 4, !dbg !7749
  br label %for.cond557, !dbg !7751, !llvm.loop !7752

for.end580:                                       ; preds = %for.cond557
  br label %for.inc581, !dbg !7754

for.inc581:                                       ; preds = %for.end580
  %779 = load i32, i32* %gr, align 4, !dbg !7755
  %inc582 = add nsw i32 %779, 1, !dbg !7755
  store i32 %inc582, i32* %gr, align 4, !dbg !7755
  br label %for.cond241, !dbg !7757, !llvm.loop !7758

for.end583:                                       ; preds = %for.cond241
  %780 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7759
  %gb584 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %780, i32 0, i32 14, !dbg !7761
  %call585 = call i32 @get_bits_count(%struct.GetBitContext* %gb584), !dbg !7762
  %cmp586 = icmp slt i32 %call585, 0, !dbg !7763
  br i1 %cmp586, label %if.then588, label %if.end593, !dbg !7764

if.then588:                                       ; preds = %for.end583
  %781 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7765
  %gb589 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %781, i32 0, i32 14, !dbg !7766
  %782 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !7767
  %gb590 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %782, i32 0, i32 14, !dbg !7768
  %call591 = call i32 @get_bits_count(%struct.GetBitContext* %gb590), !dbg !7769
  %sub592 = sub nsw i32 0, %call591, !dbg !7770
  call void @skip_bits_long(%struct.GetBitContext* %gb589, i32 %sub592), !dbg !7771
  br label %if.end593, !dbg !7773

if.end593:                                        ; preds = %if.then588, %for.end583
  %783 = load i32, i32* %nb_granules, align 4, !dbg !7774
  %mul594 = mul nsw i32 %783, 18, !dbg !7775
  store i32 %mul594, i32* %retval, align 4, !dbg !7776
  br label %return, !dbg !7776

return:                                           ; preds = %if.end593, %if.then71, %if.then41
  %784 = load i32, i32* %retval, align 4, !dbg !7777
  ret i32 %784, !dbg !7777
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #7 !dbg !7778 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7781, metadata !2019), !dbg !7782
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7783, metadata !2019), !dbg !7784
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7785
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !7786
  %sub = sub nsw i32 0, %call, !dbg !7787
  %and = and i32 %sub, 7, !dbg !7788
  store i32 %and, i32* %n, align 4, !dbg !7784
  %1 = load i32, i32* %n, align 4, !dbg !7789
  %tobool = icmp ne i32 %1, 0, !dbg !7789
  br i1 %tobool, label %if.then, label %if.end, !dbg !7791

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7792
  %3 = load i32, i32* %n, align 4, !dbg !7793
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !7794
  br label %if.end, !dbg !7794

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7795
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7796
  %5 = load i8*, i8** %buffer, align 8, !dbg !7796
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7797
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !7798
  %7 = load i32, i32* %index, align 8, !dbg !7798
  %shr = ashr i32 %7, 3, !dbg !7799
  %idx.ext = sext i32 %shr to i64, !dbg !7800
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7800
  ret i8* %add.ptr, !dbg !7801
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #7 !dbg !7802 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7805, metadata !2019), !dbg !7806
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7807
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !7808
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !7808
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7809
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !7810
  %sub = sub nsw i32 %1, %call, !dbg !7811
  ret i32 %sub, !dbg !7812
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #7 !dbg !7813 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7818, metadata !2019), !dbg !7819
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7820
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7821
  %1 = load i32, i32* %index, align 8, !dbg !7821
  ret i32 %1, !dbg !7822
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

declare void @ff_mpa_synth_filter_fixed(%struct.MPADSPContext*, i32*, i32*, i32*, i32*, i16*, i64, i32*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #7 !dbg !7823 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2070, metadata !2019), !dbg !7826
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7828, metadata !2019), !dbg !7829
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7830, metadata !2019), !dbg !7831
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7832, metadata !2019), !dbg !7833
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7834, metadata !2019), !dbg !7835
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7836
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7837
  %1 = load i32, i32* %index, align 8, !dbg !7837
  store i32 %1, i32* %re_index, align 4, !dbg !7835
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7838, metadata !2019), !dbg !7839
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7840, metadata !2019), !dbg !7841
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7842
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7843
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7843
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7841
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7844
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7845
  %5 = load i8*, i8** %buffer, align 8, !dbg !7845
  %6 = load i32, i32* %re_index, align 4, !dbg !7846
  %shr = lshr i32 %6, 3, !dbg !7847
  %idx.ext = zext i32 %shr to i64, !dbg !7848
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7848
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7849
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7849
  %8 = load i32, i32* %l, align 1, !dbg !7849
  store i32 %8, i32* %x.addr.i, align 4, !dbg !7850
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !7851
  %shl.i = shl i32 %9, 8, !dbg !7852
  %and.i = and i32 %shl.i, 65280, !dbg !7853
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !7854
  %shr.i = lshr i32 %10, 8, !dbg !7855
  %and1.i = and i32 %shr.i, 255, !dbg !7856
  %or.i = or i32 %and.i, %and1.i, !dbg !7857
  %shl2.i = shl i32 %or.i, 16, !dbg !7858
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7859
  %shr3.i = lshr i32 %11, 16, !dbg !7860
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7861
  %and5.i = and i32 %shl4.i, 65280, !dbg !7862
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7863
  %shr6.i = lshr i32 %12, 16, !dbg !7864
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7865
  %and8.i = and i32 %shr7.i, 255, !dbg !7866
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7867
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7868
  %13 = load i32, i32* %re_index, align 4, !dbg !7869
  %and = and i32 %13, 7, !dbg !7870
  %shl = shl i32 %or10.i, %and, !dbg !7871
  store i32 %shl, i32* %re_cache, align 4, !dbg !7872
  %14 = load i32, i32* %re_cache, align 4, !dbg !7873
  %15 = load i32, i32* %n.addr, align 4, !dbg !7874
  %conv = trunc i32 %15 to i8, !dbg !7874
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !7875
  store i32 %call4, i32* %tmp, align 4, !dbg !7876
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !7877
  %17 = load i32, i32* %re_index, align 4, !dbg !7878
  %18 = load i32, i32* %n.addr, align 4, !dbg !7879
  %add = add i32 %17, %18, !dbg !7880
  %cmp = icmp ugt i32 %16, %add, !dbg !7881
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7882

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !7883
  %20 = load i32, i32* %n.addr, align 4, !dbg !7885
  %add6 = add i32 %19, %20, !dbg !7886
  br label %cond.end, !dbg !7887

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !7888
  br label %cond.end, !dbg !7890

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !7891
  store i32 %cond, i32* %re_index, align 4, !dbg !7893
  %22 = load i32, i32* %re_index, align 4, !dbg !7894
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7895
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !7896
  store i32 %22, i32* %index7, align 8, !dbg !7897
  %24 = load i32, i32* %tmp, align 4, !dbg !7898
  ret i32 %24, !dbg !7899
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @l1_unscale(i32 %n, i32 %mant, i32 %scale_factor) #7 !dbg !7900 {
entry:
  %n.addr = alloca i32, align 4
  %mant.addr = alloca i32, align 4
  %scale_factor.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %mod = alloca i32, align 4
  %val = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7901, metadata !2019), !dbg !7902
  store i32 %mant, i32* %mant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mant.addr, metadata !7903, metadata !2019), !dbg !7904
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !7905, metadata !2019), !dbg !7906
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7907, metadata !2019), !dbg !7908
  call void @llvm.dbg.declare(metadata i32* %mod, metadata !7909, metadata !2019), !dbg !7910
  call void @llvm.dbg.declare(metadata i64* %val, metadata !7911, metadata !2019), !dbg !7912
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !7913
  %idxprom = sext i32 %0 to i64, !dbg !7914
  %arrayidx = getelementptr inbounds [64 x i16], [64 x i16]* @scale_factor_modshift, i64 0, i64 %idxprom, !dbg !7914
  %1 = load i16, i16* %arrayidx, align 2, !dbg !7914
  %conv = zext i16 %1 to i32, !dbg !7914
  store i32 %conv, i32* %shift, align 4, !dbg !7915
  %2 = load i32, i32* %shift, align 4, !dbg !7916
  %and = and i32 %2, 3, !dbg !7917
  store i32 %and, i32* %mod, align 4, !dbg !7918
  %3 = load i32, i32* %shift, align 4, !dbg !7919
  %shr = ashr i32 %3, 2, !dbg !7919
  store i32 %shr, i32* %shift, align 4, !dbg !7919
  %4 = load i32, i32* %mant.addr, align 4, !dbg !7920
  %5 = load i32, i32* %n.addr, align 4, !dbg !7921
  %shl = shl i32 -1, %5, !dbg !7922
  %add = add i32 %4, %shl, !dbg !7923
  %add1 = add i32 %add, 1, !dbg !7924
  %conv2 = sext i32 %add1 to i64, !dbg !7925
  %6 = load i32, i32* %mod, align 4, !dbg !7926
  %idxprom3 = sext i32 %6 to i64, !dbg !7927
  %7 = load i32, i32* %n.addr, align 4, !dbg !7928
  %sub = sub nsw i32 %7, 1, !dbg !7929
  %idxprom4 = sext i32 %sub to i64, !dbg !7927
  %arrayidx5 = getelementptr inbounds [15 x [3 x i32]], [15 x [3 x i32]]* @scale_factor_mult, i64 0, i64 %idxprom4, !dbg !7927
  %arrayidx6 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx5, i64 0, i64 %idxprom3, !dbg !7927
  %8 = load i32, i32* %arrayidx6, align 4, !dbg !7927
  %conv7 = sext i32 %8 to i64, !dbg !7930
  %mul = mul nsw i64 %conv2, %conv7, !dbg !7931
  store i64 %mul, i64* %val, align 8, !dbg !7932
  %9 = load i32, i32* %n.addr, align 4, !dbg !7933
  %10 = load i32, i32* %shift, align 4, !dbg !7934
  %add8 = add nsw i32 %10, %9, !dbg !7934
  store i32 %add8, i32* %shift, align 4, !dbg !7934
  %11 = load i64, i64* %val, align 8, !dbg !7935
  %12 = load i32, i32* %shift, align 4, !dbg !7936
  %sub9 = sub nsw i32 %12, 1, !dbg !7937
  %sh_prom = zext i32 %sub9 to i64, !dbg !7938
  %shl10 = shl i64 1, %sh_prom, !dbg !7938
  %add11 = add nsw i64 %11, %shl10, !dbg !7939
  %13 = load i32, i32* %shift, align 4, !dbg !7940
  %sh_prom12 = zext i32 %13 to i64, !dbg !7941
  %shr13 = ashr i64 %add11, %sh_prom12, !dbg !7941
  %conv14 = trunc i64 %shr13 to i32, !dbg !7942
  ret i32 %conv14, !dbg !7943
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #7 !dbg !7944 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7948, metadata !2019), !dbg !7949
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7950, metadata !2019), !dbg !7951
  %0 = load i32, i32* %a.addr, align 4, !dbg !7952
  %1 = load i8, i8* %s.addr, align 1, !dbg !7953
  %conv = sext i8 %1 to i32, !dbg !7953
  %sub = sub nsw i32 0, %conv, !dbg !7954
  %conv1 = trunc i32 %sub to i8, !dbg !7955
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !7952, !srcloc !7956
  store i32 %2, i32* %a.addr, align 4, !dbg !7952
  %3 = load i32, i32* %a.addr, align 4, !dbg !7957
  ret i32 %3, !dbg !7958
}

declare i32 @ff_mpa_l2_select_table(i32, i32, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @l2_unscale_group(i32 %steps, i32 %mant, i32 %scale_factor) #7 !dbg !7959 {
entry:
  %steps.addr = alloca i32, align 4
  %mant.addr = alloca i32, align 4
  %scale_factor.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %mod = alloca i32, align 4
  %val = alloca i32, align 4
  store i32 %steps, i32* %steps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %steps.addr, metadata !7960, metadata !2019), !dbg !7961
  store i32 %mant, i32* %mant.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mant.addr, metadata !7962, metadata !2019), !dbg !7963
  store i32 %scale_factor, i32* %scale_factor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !7964, metadata !2019), !dbg !7965
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7966, metadata !2019), !dbg !7967
  call void @llvm.dbg.declare(metadata i32* %mod, metadata !7968, metadata !2019), !dbg !7969
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7970, metadata !2019), !dbg !7971
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !7972
  %idxprom = sext i32 %0 to i64, !dbg !7973
  %arrayidx = getelementptr inbounds [64 x i16], [64 x i16]* @scale_factor_modshift, i64 0, i64 %idxprom, !dbg !7973
  %1 = load i16, i16* %arrayidx, align 2, !dbg !7973
  %conv = zext i16 %1 to i32, !dbg !7973
  store i32 %conv, i32* %shift, align 4, !dbg !7974
  %2 = load i32, i32* %shift, align 4, !dbg !7975
  %and = and i32 %2, 3, !dbg !7976
  store i32 %and, i32* %mod, align 4, !dbg !7977
  %3 = load i32, i32* %shift, align 4, !dbg !7978
  %shr = ashr i32 %3, 2, !dbg !7978
  store i32 %shr, i32* %shift, align 4, !dbg !7978
  %4 = load i32, i32* %mant.addr, align 4, !dbg !7979
  %5 = load i32, i32* %steps.addr, align 4, !dbg !7980
  %shr1 = ashr i32 %5, 1, !dbg !7981
  %sub = sub nsw i32 %4, %shr1, !dbg !7982
  %6 = load i32, i32* %mod, align 4, !dbg !7983
  %idxprom2 = sext i32 %6 to i64, !dbg !7984
  %7 = load i32, i32* %steps.addr, align 4, !dbg !7985
  %shr3 = ashr i32 %7, 2, !dbg !7986
  %idxprom4 = sext i32 %shr3 to i64, !dbg !7984
  %arrayidx5 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* @scale_factor_mult2, i64 0, i64 %idxprom4, !dbg !7984
  %arrayidx6 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx5, i64 0, i64 %idxprom2, !dbg !7984
  %8 = load i32, i32* %arrayidx6, align 4, !dbg !7984
  %mul = mul nsw i32 %sub, %8, !dbg !7987
  store i32 %mul, i32* %val, align 4, !dbg !7988
  %9 = load i32, i32* %shift, align 4, !dbg !7989
  %cmp = icmp sgt i32 %9, 0, !dbg !7991
  br i1 %cmp, label %if.then, label %if.end, !dbg !7992

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %val, align 4, !dbg !7993
  %11 = load i32, i32* %shift, align 4, !dbg !7994
  %sub8 = sub nsw i32 %11, 1, !dbg !7995
  %shl = shl i32 1, %sub8, !dbg !7996
  %add = add nsw i32 %10, %shl, !dbg !7997
  %12 = load i32, i32* %shift, align 4, !dbg !7998
  %shr9 = ashr i32 %add, %12, !dbg !7999
  store i32 %shr9, i32* %val, align 4, !dbg !8000
  br label %if.end, !dbg !8001

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %val, align 4, !dbg !8002
  ret i32 %13, !dbg !8003
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #7 !dbg !8004 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8007, metadata !2019), !dbg !8008
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8009, metadata !2019), !dbg !8010
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8011
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8012
  %1 = load i32, i32* %index1, align 8, !dbg !8012
  store i32 %1, i32* %index, align 4, !dbg !8010
  call void @llvm.dbg.declare(metadata i8* %result, metadata !8013, metadata !2019), !dbg !8014
  %2 = load i32, i32* %index, align 4, !dbg !8015
  %shr = lshr i32 %2, 3, !dbg !8016
  %idxprom = zext i32 %shr to i64, !dbg !8017
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8017
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !8018
  %4 = load i8*, i8** %buffer, align 8, !dbg !8018
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !8017
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8017
  store i8 %5, i8* %result, align 1, !dbg !8014
  %6 = load i32, i32* %index, align 4, !dbg !8019
  %and = and i32 %6, 7, !dbg !8020
  %7 = load i8, i8* %result, align 1, !dbg !8021
  %conv = zext i8 %7 to i32, !dbg !8021
  %shl = shl i32 %conv, %and, !dbg !8021
  %conv2 = trunc i32 %shl to i8, !dbg !8021
  store i8 %conv2, i8* %result, align 1, !dbg !8021
  %8 = load i8, i8* %result, align 1, !dbg !8022
  %conv3 = zext i8 %8 to i32, !dbg !8022
  %shr4 = ashr i32 %conv3, 7, !dbg !8022
  %conv5 = trunc i32 %shr4 to i8, !dbg !8022
  store i8 %conv5, i8* %result, align 1, !dbg !8022
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8023
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !8025
  %10 = load i32, i32* %index6, align 8, !dbg !8025
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8026
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !8027
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8027
  %cmp = icmp slt i32 %10, %12, !dbg !8028
  br i1 %cmp, label %if.then, label %if.end, !dbg !8029

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !8030
  %inc = add i32 %13, 1, !dbg !8030
  store i32 %inc, i32* %index, align 4, !dbg !8030
  br label %if.end, !dbg !8031

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !8032
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8033
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8034
  store i32 %14, i32* %index8, align 8, !dbg !8035
  %16 = load i8, i8* %result, align 1, !dbg !8036
  %conv9 = zext i8 %16 to i32, !dbg !8036
  ret i32 %conv9, !dbg !8037
}

; Function Attrs: nounwind uwtable
define internal void @init_short_region(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !8038 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8041, metadata !2019), !dbg !8042
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8043, metadata !2019), !dbg !8044
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8045
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !8047
  %1 = load i8, i8* %block_type, align 4, !dbg !8047
  %conv = zext i8 %1 to i32, !dbg !8045
  %cmp = icmp eq i32 %conv, 2, !dbg !8048
  br i1 %cmp, label %if.then, label %if.else7, !dbg !8049

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8050
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 4, !dbg !8053
  %3 = load i32, i32* %sample_rate_index, align 16, !dbg !8053
  %cmp2 = icmp ne i32 %3, 8, !dbg !8054
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !8055

if.then4:                                         ; preds = %if.then
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8056
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 11, !dbg !8057
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 0, !dbg !8056
  store i32 18, i32* %arrayidx, align 4, !dbg !8058
  br label %if.end, !dbg !8056

if.else:                                          ; preds = %if.then
  %5 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8059
  %region_size5 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %5, i32 0, i32 11, !dbg !8060
  %arrayidx6 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size5, i64 0, i64 0, !dbg !8059
  store i32 36, i32* %arrayidx6, align 4, !dbg !8061
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end26, !dbg !8062

if.else7:                                         ; preds = %entry
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8063
  %sample_rate_index8 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 4, !dbg !8066
  %7 = load i32, i32* %sample_rate_index8, align 16, !dbg !8066
  %cmp9 = icmp sle i32 %7, 2, !dbg !8067
  br i1 %cmp9, label %if.then11, label %if.else14, !dbg !8068

if.then11:                                        ; preds = %if.else7
  %8 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8069
  %region_size12 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %8, i32 0, i32 11, !dbg !8070
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size12, i64 0, i64 0, !dbg !8069
  store i32 18, i32* %arrayidx13, align 4, !dbg !8071
  br label %if.end25, !dbg !8069

if.else14:                                        ; preds = %if.else7
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8072
  %sample_rate_index15 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 4, !dbg !8074
  %10 = load i32, i32* %sample_rate_index15, align 16, !dbg !8074
  %cmp16 = icmp ne i32 %10, 8, !dbg !8075
  br i1 %cmp16, label %if.then18, label %if.else21, !dbg !8076

if.then18:                                        ; preds = %if.else14
  %11 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8077
  %region_size19 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %11, i32 0, i32 11, !dbg !8078
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size19, i64 0, i64 0, !dbg !8077
  store i32 27, i32* %arrayidx20, align 4, !dbg !8079
  br label %if.end24, !dbg !8077

if.else21:                                        ; preds = %if.else14
  %12 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8080
  %region_size22 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %12, i32 0, i32 11, !dbg !8081
  %arrayidx23 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size22, i64 0, i64 0, !dbg !8080
  store i32 54, i32* %arrayidx23, align 4, !dbg !8082
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then18
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8083
  %region_size27 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 11, !dbg !8084
  %arrayidx28 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size27, i64 0, i64 1, !dbg !8083
  store i32 288, i32* %arrayidx28, align 4, !dbg !8085
  ret void, !dbg !8086
}

; Function Attrs: nounwind uwtable
define internal void @init_long_region(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, i32 %ra1, i32 %ra2) #1 !dbg !8087 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %ra1.addr = alloca i32, align 4
  %ra2.addr = alloca i32, align 4
  %l = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8090, metadata !2019), !dbg !8091
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8092, metadata !2019), !dbg !8093
  store i32 %ra1, i32* %ra1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra1.addr, metadata !8094, metadata !2019), !dbg !8095
  store i32 %ra2, i32* %ra2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ra2.addr, metadata !8096, metadata !2019), !dbg !8097
  call void @llvm.dbg.declare(metadata i32* %l, metadata !8098, metadata !2019), !dbg !8099
  %0 = load i32, i32* %ra1.addr, align 4, !dbg !8100
  %add = add nsw i32 %0, 1, !dbg !8101
  %idxprom = sext i32 %add to i64, !dbg !8102
  %1 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8103
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %1, i32 0, i32 4, !dbg !8104
  %2 = load i32, i32* %sample_rate_index, align 16, !dbg !8104
  %idxprom1 = sext i32 %2 to i64, !dbg !8102
  %arrayidx = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom1, !dbg !8102
  %arrayidx2 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx, i64 0, i64 %idxprom, !dbg !8102
  %3 = load i16, i16* %arrayidx2, align 2, !dbg !8102
  %conv = zext i16 %3 to i32, !dbg !8102
  %shr = ashr i32 %conv, 1, !dbg !8105
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8106
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 11, !dbg !8107
  %arrayidx3 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 0, !dbg !8106
  store i32 %shr, i32* %arrayidx3, align 4, !dbg !8108
  %5 = load i32, i32* %ra1.addr, align 4, !dbg !8109
  %6 = load i32, i32* %ra2.addr, align 4, !dbg !8110
  %add4 = add nsw i32 %5, %6, !dbg !8111
  %add5 = add nsw i32 %add4, 2, !dbg !8112
  %cmp = icmp sgt i32 %add5, 22, !dbg !8113
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8114

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !8115

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %ra1.addr, align 4, !dbg !8117
  %8 = load i32, i32* %ra2.addr, align 4, !dbg !8119
  %add7 = add nsw i32 %7, %8, !dbg !8120
  %add8 = add nsw i32 %add7, 2, !dbg !8121
  br label %cond.end, !dbg !8122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 22, %cond.true ], [ %add8, %cond.false ], !dbg !8123
  store i32 %cond, i32* %l, align 4, !dbg !8125
  %9 = load i32, i32* %l, align 4, !dbg !8126
  %idxprom9 = sext i32 %9 to i64, !dbg !8127
  %10 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8128
  %sample_rate_index10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %10, i32 0, i32 4, !dbg !8129
  %11 = load i32, i32* %sample_rate_index10, align 16, !dbg !8129
  %idxprom11 = sext i32 %11 to i64, !dbg !8127
  %arrayidx12 = getelementptr inbounds [9 x [23 x i16]], [9 x [23 x i16]]* @band_index_long, i64 0, i64 %idxprom11, !dbg !8127
  %arrayidx13 = getelementptr inbounds [23 x i16], [23 x i16]* %arrayidx12, i64 0, i64 %idxprom9, !dbg !8127
  %12 = load i16, i16* %arrayidx13, align 2, !dbg !8127
  %conv14 = zext i16 %12 to i32, !dbg !8127
  %shr15 = ashr i32 %conv14, 1, !dbg !8130
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8131
  %region_size16 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 11, !dbg !8132
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size16, i64 0, i64 1, !dbg !8131
  store i32 %shr15, i32* %arrayidx17, align 4, !dbg !8133
  ret void, !dbg !8134
}

; Function Attrs: nounwind uwtable
define internal void @region_offset2size(%struct.GranuleDef* %g) #1 !dbg !8135 {
entry:
  %g.addr = alloca %struct.GranuleDef*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8138, metadata !2019), !dbg !8139
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8140, metadata !2019), !dbg !8141
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8142, metadata !2019), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8144, metadata !2019), !dbg !8145
  store i32 0, i32* %j, align 4, !dbg !8145
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8146
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 11, !dbg !8147
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 2, !dbg !8146
  store i32 288, i32* %arrayidx, align 4, !dbg !8148
  store i32 0, i32* %i, align 4, !dbg !8149
  br label %for.cond, !dbg !8151

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8152
  %cmp = icmp slt i32 %1, 3, !dbg !8155
  br i1 %cmp, label %for.body, label %for.end, !dbg !8156

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !8157
  %idxprom = sext i32 %2 to i64, !dbg !8159
  %3 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8159
  %region_size1 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %3, i32 0, i32 11, !dbg !8160
  %arrayidx2 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size1, i64 0, i64 %idxprom, !dbg !8159
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !8159
  %5 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8161
  %big_values = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %5, i32 0, i32 2, !dbg !8162
  %6 = load i32, i32* %big_values, align 8, !dbg !8162
  %cmp3 = icmp sgt i32 %4, %6, !dbg !8163
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !8164

cond.true:                                        ; preds = %for.body
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8165
  %big_values4 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 2, !dbg !8167
  %8 = load i32, i32* %big_values4, align 8, !dbg !8167
  br label %cond.end, !dbg !8168

cond.false:                                       ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !8169
  %idxprom5 = sext i32 %9 to i64, !dbg !8171
  %10 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8171
  %region_size6 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %10, i32 0, i32 11, !dbg !8172
  %arrayidx7 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size6, i64 0, i64 %idxprom5, !dbg !8171
  %11 = load i32, i32* %arrayidx7, align 4, !dbg !8171
  br label %cond.end, !dbg !8173

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %11, %cond.false ], !dbg !8174
  store i32 %cond, i32* %k, align 4, !dbg !8176
  %12 = load i32, i32* %k, align 4, !dbg !8177
  %13 = load i32, i32* %j, align 4, !dbg !8178
  %sub = sub nsw i32 %12, %13, !dbg !8179
  %14 = load i32, i32* %i, align 4, !dbg !8180
  %idxprom8 = sext i32 %14 to i64, !dbg !8181
  %15 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8181
  %region_size9 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %15, i32 0, i32 11, !dbg !8182
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %region_size9, i64 0, i64 %idxprom8, !dbg !8181
  store i32 %sub, i32* %arrayidx10, align 4, !dbg !8183
  %16 = load i32, i32* %k, align 4, !dbg !8184
  store i32 %16, i32* %j, align 4, !dbg !8185
  br label %for.inc, !dbg !8186

for.inc:                                          ; preds = %cond.end
  %17 = load i32, i32* %i, align 4, !dbg !8187
  %inc = add nsw i32 %17, 1, !dbg !8187
  store i32 %inc, i32* %i, align 4, !dbg !8187
  br label %for.cond, !dbg !8189, !llvm.loop !8190

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8192
}

; Function Attrs: nounwind uwtable
define internal void @compute_band_indexes(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !8193 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8194, metadata !2019), !dbg !8195
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8196, metadata !2019), !dbg !8197
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8198
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !8200
  %1 = load i8, i8* %block_type, align 4, !dbg !8200
  %conv = zext i8 %1 to i32, !dbg !8198
  %cmp = icmp eq i32 %conv, 2, !dbg !8201
  br i1 %cmp, label %if.then, label %if.else16, !dbg !8202

if.then:                                          ; preds = %entry
  %2 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8203
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %2, i32 0, i32 6, !dbg !8206
  %3 = load i8, i8* %switch_point, align 1, !dbg !8206
  %tobool = icmp ne i8 %3, 0, !dbg !8203
  br i1 %tobool, label %if.then2, label %if.else12, !dbg !8207

if.then2:                                         ; preds = %if.then
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8208
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 4, !dbg !8211
  %5 = load i32, i32* %sample_rate_index, align 16, !dbg !8211
  %cmp3 = icmp eq i32 %5, 8, !dbg !8212
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !8213

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8214
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 26, !dbg !8215
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !8215
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !8214
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0)), !dbg !8216
  br label %if.end, !dbg !8216

if.end:                                           ; preds = %if.then5, %if.then2
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8217
  %sample_rate_index6 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 4, !dbg !8219
  %10 = load i32, i32* %sample_rate_index6, align 16, !dbg !8219
  %cmp7 = icmp sle i32 %10, 2, !dbg !8220
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !8221

if.then9:                                         ; preds = %if.end
  %11 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8222
  %long_end = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %11, i32 0, i32 14, !dbg !8223
  store i32 8, i32* %long_end, align 8, !dbg !8224
  br label %if.end11, !dbg !8222

if.else:                                          ; preds = %if.end
  %12 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8225
  %long_end10 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %12, i32 0, i32 14, !dbg !8226
  store i32 6, i32* %long_end10, align 8, !dbg !8227
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8228
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 13, !dbg !8229
  store i32 3, i32* %short_start, align 4, !dbg !8230
  br label %if.end15, !dbg !8231

if.else12:                                        ; preds = %if.then
  %14 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8232
  %long_end13 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %14, i32 0, i32 14, !dbg !8234
  store i32 0, i32* %long_end13, align 8, !dbg !8235
  %15 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8236
  %short_start14 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %15, i32 0, i32 13, !dbg !8237
  store i32 0, i32* %short_start14, align 4, !dbg !8238
  br label %if.end15

if.end15:                                         ; preds = %if.else12, %if.end11
  br label %if.end19, !dbg !8239

if.else16:                                        ; preds = %entry
  %16 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8240
  %short_start17 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %16, i32 0, i32 13, !dbg !8242
  store i32 13, i32* %short_start17, align 4, !dbg !8243
  %17 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8244
  %long_end18 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %17, i32 0, i32 14, !dbg !8245
  store i32 22, i32* %long_end18, align 8, !dbg !8246
  br label %if.end19

if.end19:                                         ; preds = %if.else16, %if.end15
  ret void, !dbg !8247
}

; Function Attrs: nounwind uwtable
define internal void @compute_imdct(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, i32* %sb_samples, i32* %mdct_buf) #1 !dbg !8248 {
entry:
  %a.addr.i227 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i227, metadata !8251, metadata !2019), !dbg !8256
  %b.addr.i228 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i228, metadata !8264, metadata !2019), !dbg !8265
  %a.addr.i220 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i220, metadata !8251, metadata !2019), !dbg !8266
  %b.addr.i221 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i221, metadata !8264, metadata !2019), !dbg !8268
  %a.addr.i213 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i213, metadata !8251, metadata !2019), !dbg !8269
  %b.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i214, metadata !8264, metadata !2019), !dbg !8274
  %a.addr.i206 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i206, metadata !8251, metadata !2019), !dbg !8275
  %b.addr.i207 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i207, metadata !8264, metadata !2019), !dbg !8280
  %a.addr.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i199, metadata !8251, metadata !2019), !dbg !8281
  %b.addr.i200 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i200, metadata !8264, metadata !2019), !dbg !8283
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8251, metadata !2019), !dbg !8284
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !8264, metadata !2019), !dbg !8286
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %sb_samples.addr = alloca i32*, align 8
  %mdct_buf.addr = alloca i32*, align 8
  %win = alloca i32*, align 8
  %out_ptr = alloca i32*, align 8
  %ptr = alloca i32*, align 8
  %buf = alloca i32*, align 8
  %ptr1 = alloca i32*, align 8
  %out2 = alloca [12 x i32], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mdct_long_end = alloca i32, align 4
  %sblimit = alloca i32, align 4
  %p = alloca i32*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8287, metadata !2019), !dbg !8288
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8289, metadata !2019), !dbg !8290
  store i32* %sb_samples, i32** %sb_samples.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sb_samples.addr, metadata !8291, metadata !2019), !dbg !8292
  store i32* %mdct_buf, i32** %mdct_buf.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mdct_buf.addr, metadata !8293, metadata !2019), !dbg !8294
  call void @llvm.dbg.declare(metadata i32** %win, metadata !8295, metadata !2019), !dbg !8296
  call void @llvm.dbg.declare(metadata i32** %out_ptr, metadata !8297, metadata !2019), !dbg !8298
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !8299, metadata !2019), !dbg !8300
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !8301, metadata !2019), !dbg !8302
  call void @llvm.dbg.declare(metadata i32** %ptr1, metadata !8303, metadata !2019), !dbg !8304
  call void @llvm.dbg.declare(metadata [12 x i32]* %out2, metadata !8305, metadata !2019), !dbg !8309
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8310, metadata !2019), !dbg !8311
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8312, metadata !2019), !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %mdct_long_end, metadata !8314, metadata !2019), !dbg !8315
  call void @llvm.dbg.declare(metadata i32* %sblimit, metadata !8316, metadata !2019), !dbg !8317
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8318
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 17, !dbg !8319
  %arraydecay = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid, i32 0, i32 0, !dbg !8318
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 576, !dbg !8320
  store i32* %add.ptr, i32** %ptr, align 8, !dbg !8321
  %1 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8322
  %sb_hybrid1 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %1, i32 0, i32 17, !dbg !8323
  %arraydecay2 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid1, i32 0, i32 0, !dbg !8322
  %add.ptr3 = getelementptr inbounds i32, i32* %arraydecay2, i64 36, !dbg !8324
  store i32* %add.ptr3, i32** %ptr1, align 8, !dbg !8325
  br label %while.cond, !dbg !8326

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i32*, i32** %ptr, align 8, !dbg !8327
  %3 = load i32*, i32** %ptr1, align 8, !dbg !8329
  %cmp = icmp uge i32* %2, %3, !dbg !8330
  br i1 %cmp, label %while.body, label %while.end, !dbg !8331

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %p, metadata !8332, metadata !2019), !dbg !8334
  %4 = load i32*, i32** %ptr, align 8, !dbg !8335
  %add.ptr4 = getelementptr inbounds i32, i32* %4, i64 -6, !dbg !8335
  store i32* %add.ptr4, i32** %ptr, align 8, !dbg !8335
  %5 = load i32*, i32** %ptr, align 8, !dbg !8336
  store i32* %5, i32** %p, align 8, !dbg !8337
  %6 = load i32*, i32** %p, align 8, !dbg !8338
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 0, !dbg !8338
  %7 = load i32, i32* %arrayidx, align 4, !dbg !8338
  %8 = load i32*, i32** %p, align 8, !dbg !8340
  %arrayidx5 = getelementptr inbounds i32, i32* %8, i64 1, !dbg !8340
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !8340
  %or = or i32 %7, %9, !dbg !8341
  %10 = load i32*, i32** %p, align 8, !dbg !8342
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 2, !dbg !8342
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !8342
  %or7 = or i32 %or, %11, !dbg !8343
  %12 = load i32*, i32** %p, align 8, !dbg !8344
  %arrayidx8 = getelementptr inbounds i32, i32* %12, i64 3, !dbg !8344
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !8344
  %or9 = or i32 %or7, %13, !dbg !8345
  %14 = load i32*, i32** %p, align 8, !dbg !8346
  %arrayidx10 = getelementptr inbounds i32, i32* %14, i64 4, !dbg !8346
  %15 = load i32, i32* %arrayidx10, align 4, !dbg !8346
  %or11 = or i32 %or9, %15, !dbg !8347
  %16 = load i32*, i32** %p, align 8, !dbg !8348
  %arrayidx12 = getelementptr inbounds i32, i32* %16, i64 5, !dbg !8348
  %17 = load i32, i32* %arrayidx12, align 4, !dbg !8348
  %or13 = or i32 %or11, %17, !dbg !8349
  %tobool = icmp ne i32 %or13, 0, !dbg !8349
  br i1 %tobool, label %if.then, label %if.end, !dbg !8350

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !8351

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !8352, !llvm.loop !8354

while.end:                                        ; preds = %if.then, %while.cond
  %18 = load i32*, i32** %ptr, align 8, !dbg !8355
  %19 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8356
  %sb_hybrid14 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %19, i32 0, i32 17, !dbg !8357
  %arraydecay15 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid14, i32 0, i32 0, !dbg !8356
  %sub.ptr.lhs.cast = ptrtoint i32* %18 to i64, !dbg !8358
  %sub.ptr.rhs.cast = ptrtoint i32* %arraydecay15 to i64, !dbg !8358
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8358
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4, !dbg !8358
  %div = sdiv i64 %sub.ptr.div, 18, !dbg !8359
  %add = add nsw i64 %div, 1, !dbg !8360
  %conv = trunc i64 %add to i32, !dbg !8361
  store i32 %conv, i32* %sblimit, align 4, !dbg !8362
  %20 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8363
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %20, i32 0, i32 5, !dbg !8365
  %21 = load i8, i8* %block_type, align 4, !dbg !8365
  %conv16 = zext i8 %21 to i32, !dbg !8363
  %cmp17 = icmp eq i32 %conv16, 2, !dbg !8366
  br i1 %cmp17, label %if.then19, label %if.else23, !dbg !8367

if.then19:                                        ; preds = %while.end
  %22 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8368
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %22, i32 0, i32 6, !dbg !8371
  %23 = load i8, i8* %switch_point, align 1, !dbg !8371
  %tobool20 = icmp ne i8 %23, 0, !dbg !8368
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !8372

if.then21:                                        ; preds = %if.then19
  store i32 2, i32* %mdct_long_end, align 4, !dbg !8373
  br label %if.end22, !dbg !8374

if.else:                                          ; preds = %if.then19
  store i32 0, i32* %mdct_long_end, align 4, !dbg !8375
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then21
  br label %if.end24, !dbg !8376

if.else23:                                        ; preds = %while.end
  %24 = load i32, i32* %sblimit, align 4, !dbg !8377
  store i32 %24, i32* %mdct_long_end, align 4, !dbg !8379
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.end22
  %25 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8380
  %mpadsp = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %25, i32 0, i32 27, !dbg !8381
  %imdct36_blocks_fixed = getelementptr inbounds %struct.MPADSPContext, %struct.MPADSPContext* %mpadsp, i32 0, i32 5, !dbg !8382
  %26 = load void (i32*, i32*, i32*, i32, i32, i32)*, void (i32*, i32*, i32*, i32, i32, i32)** %imdct36_blocks_fixed, align 8, !dbg !8382
  %27 = load i32*, i32** %sb_samples.addr, align 8, !dbg !8383
  %28 = load i32*, i32** %mdct_buf.addr, align 8, !dbg !8384
  %29 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8385
  %sb_hybrid25 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %29, i32 0, i32 17, !dbg !8386
  %arraydecay26 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid25, i32 0, i32 0, !dbg !8385
  %30 = load i32, i32* %mdct_long_end, align 4, !dbg !8387
  %31 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8388
  %switch_point27 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %31, i32 0, i32 6, !dbg !8389
  %32 = load i8, i8* %switch_point27, align 1, !dbg !8389
  %conv28 = zext i8 %32 to i32, !dbg !8388
  %33 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8390
  %block_type29 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %33, i32 0, i32 5, !dbg !8391
  %34 = load i8, i8* %block_type29, align 4, !dbg !8391
  %conv30 = zext i8 %34 to i32, !dbg !8390
  call void %26(i32* %27, i32* %28, i32* %arraydecay26, i32 %30, i32 %conv28, i32 %conv30), !dbg !8380
  %35 = load i32*, i32** %mdct_buf.addr, align 8, !dbg !8392
  %36 = load i32, i32* %mdct_long_end, align 4, !dbg !8393
  %shr = ashr i32 %36, 2, !dbg !8394
  %mul = mul nsw i32 72, %shr, !dbg !8395
  %idx.ext = sext i32 %mul to i64, !dbg !8396
  %add.ptr31 = getelementptr inbounds i32, i32* %35, i64 %idx.ext, !dbg !8396
  %37 = load i32, i32* %mdct_long_end, align 4, !dbg !8397
  %and = and i32 %37, 3, !dbg !8398
  %idx.ext32 = sext i32 %and to i64, !dbg !8399
  %add.ptr33 = getelementptr inbounds i32, i32* %add.ptr31, i64 %idx.ext32, !dbg !8399
  store i32* %add.ptr33, i32** %buf, align 8, !dbg !8400
  %38 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8401
  %sb_hybrid34 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %38, i32 0, i32 17, !dbg !8402
  %arraydecay35 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid34, i32 0, i32 0, !dbg !8401
  %39 = load i32, i32* %mdct_long_end, align 4, !dbg !8403
  %mul36 = mul nsw i32 18, %39, !dbg !8404
  %idx.ext37 = sext i32 %mul36 to i64, !dbg !8405
  %add.ptr38 = getelementptr inbounds i32, i32* %arraydecay35, i64 %idx.ext37, !dbg !8405
  store i32* %add.ptr38, i32** %ptr, align 8, !dbg !8406
  %40 = load i32, i32* %mdct_long_end, align 4, !dbg !8407
  store i32 %40, i32* %j, align 4, !dbg !8408
  br label %for.cond, !dbg !8409

for.cond:                                         ; preds = %for.inc167, %if.end24
  %41 = load i32, i32* %j, align 4, !dbg !8410
  %42 = load i32, i32* %sblimit, align 4, !dbg !8412
  %cmp39 = icmp slt i32 %41, %42, !dbg !8413
  br i1 %cmp39, label %for.body, label %for.end169, !dbg !8414

for.body:                                         ; preds = %for.cond
  %43 = load i32, i32* %j, align 4, !dbg !8415
  %and41 = and i32 %43, 1, !dbg !8416
  %sub = sub nsw i32 0, %and41, !dbg !8417
  %and42 = and i32 4, %sub, !dbg !8418
  %add43 = add nsw i32 2, %and42, !dbg !8419
  %idxprom = sext i32 %add43 to i64, !dbg !8420
  %arrayidx44 = getelementptr inbounds [8 x [40 x i32]], [8 x [40 x i32]]* @ff_mdct_win_fixed, i64 0, i64 %idxprom, !dbg !8420
  %arraydecay45 = getelementptr inbounds [40 x i32], [40 x i32]* %arrayidx44, i32 0, i32 0, !dbg !8420
  store i32* %arraydecay45, i32** %win, align 8, !dbg !8421
  %44 = load i32*, i32** %sb_samples.addr, align 8, !dbg !8422
  %45 = load i32, i32* %j, align 4, !dbg !8423
  %idx.ext46 = sext i32 %45 to i64, !dbg !8424
  %add.ptr47 = getelementptr inbounds i32, i32* %44, i64 %idx.ext46, !dbg !8424
  store i32* %add.ptr47, i32** %out_ptr, align 8, !dbg !8425
  store i32 0, i32* %i, align 4, !dbg !8426
  br label %for.cond48, !dbg !8428

for.cond48:                                       ; preds = %for.inc, %for.body
  %46 = load i32, i32* %i, align 4, !dbg !8429
  %cmp49 = icmp slt i32 %46, 6, !dbg !8432
  br i1 %cmp49, label %for.body51, label %for.end, !dbg !8433

for.body51:                                       ; preds = %for.cond48
  %47 = load i32, i32* %i, align 4, !dbg !8434
  %mul52 = mul nsw i32 4, %47, !dbg !8436
  %idxprom53 = sext i32 %mul52 to i64, !dbg !8437
  %48 = load i32*, i32** %buf, align 8, !dbg !8437
  %arrayidx54 = getelementptr inbounds i32, i32* %48, i64 %idxprom53, !dbg !8437
  %49 = load i32, i32* %arrayidx54, align 4, !dbg !8437
  %50 = load i32*, i32** %out_ptr, align 8, !dbg !8438
  store i32 %49, i32* %50, align 4, !dbg !8439
  %51 = load i32*, i32** %out_ptr, align 8, !dbg !8440
  %add.ptr55 = getelementptr inbounds i32, i32* %51, i64 32, !dbg !8440
  store i32* %add.ptr55, i32** %out_ptr, align 8, !dbg !8440
  br label %for.inc, !dbg !8441

for.inc:                                          ; preds = %for.body51
  %52 = load i32, i32* %i, align 4, !dbg !8442
  %inc = add nsw i32 %52, 1, !dbg !8442
  store i32 %inc, i32* %i, align 4, !dbg !8442
  br label %for.cond48, !dbg !8444, !llvm.loop !8445

for.end:                                          ; preds = %for.cond48
  %arraydecay56 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i32 0, i32 0, !dbg !8447
  %53 = load i32*, i32** %ptr, align 8, !dbg !8448
  %add.ptr57 = getelementptr inbounds i32, i32* %53, i64 0, !dbg !8449
  call void @imdct12(i32* %arraydecay56, i32* %add.ptr57), !dbg !8450
  store i32 0, i32* %i, align 4, !dbg !8451
  br label %for.cond58, !dbg !8452

for.cond58:                                       ; preds = %for.inc85, %for.end
  %54 = load i32, i32* %i, align 4, !dbg !8453
  %cmp59 = icmp slt i32 %54, 6, !dbg !8455
  br i1 %cmp59, label %for.body61, label %for.end87, !dbg !8456

for.body61:                                       ; preds = %for.cond58
  %55 = load i32, i32* %i, align 4, !dbg !8457
  %idxprom62 = sext i32 %55 to i64, !dbg !8458
  %arrayidx63 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i64 0, i64 %idxprom62, !dbg !8458
  %56 = load i32, i32* %arrayidx63, align 4, !dbg !8458
  %mul64 = mul nsw i32 1, %56, !dbg !8459
  %57 = load i32, i32* %i, align 4, !dbg !8460
  %idxprom65 = sext i32 %57 to i64, !dbg !8461
  %58 = load i32*, i32** %win, align 8, !dbg !8461
  %arrayidx66 = getelementptr inbounds i32, i32* %58, i64 %idxprom65, !dbg !8461
  %59 = load i32, i32* %arrayidx66, align 4, !dbg !8461
  store i32 %mul64, i32* %a.addr.i, align 4, !dbg !8462
  store i32 %59, i32* %b.addr.i, align 4, !dbg !8462
  %60 = load i32, i32* %a.addr.i, align 4, !dbg !8463
  %conv.i = sext i32 %60 to i64, !dbg !8464
  %61 = load i32, i32* %b.addr.i, align 4, !dbg !8465
  %conv1.i = sext i32 %61 to i64, !dbg !8466
  %mul.i = mul nsw i64 %conv.i, %conv1.i, !dbg !8467
  %shr.i = ashr i64 %mul.i, 32, !dbg !8468
  %conv2.i = trunc i64 %shr.i to i32, !dbg !8469
  %62 = load i32, i32* %i, align 4, !dbg !8470
  %add67 = add nsw i32 %62, 6, !dbg !8471
  %mul68 = mul nsw i32 4, %add67, !dbg !8472
  %idxprom69 = sext i32 %mul68 to i64, !dbg !8473
  %63 = load i32*, i32** %buf, align 8, !dbg !8473
  %arrayidx70 = getelementptr inbounds i32, i32* %63, i64 %idxprom69, !dbg !8473
  %64 = load i32, i32* %arrayidx70, align 4, !dbg !8473
  %add71 = add nsw i32 %conv2.i, %64, !dbg !8474
  %65 = load i32*, i32** %out_ptr, align 8, !dbg !8475
  store i32 %add71, i32* %65, align 4, !dbg !8476
  %66 = load i32, i32* %i, align 4, !dbg !8477
  %add72 = add nsw i32 %66, 6, !dbg !8478
  %idxprom73 = sext i32 %add72 to i64, !dbg !8479
  %arrayidx74 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i64 0, i64 %idxprom73, !dbg !8479
  %67 = load i32, i32* %arrayidx74, align 4, !dbg !8479
  %mul75 = mul nsw i32 1, %67, !dbg !8480
  %68 = load i32, i32* %i, align 4, !dbg !8481
  %add76 = add nsw i32 %68, 6, !dbg !8482
  %idxprom77 = sext i32 %add76 to i64, !dbg !8483
  %69 = load i32*, i32** %win, align 8, !dbg !8483
  %arrayidx78 = getelementptr inbounds i32, i32* %69, i64 %idxprom77, !dbg !8483
  %70 = load i32, i32* %arrayidx78, align 4, !dbg !8483
  store i32 %mul75, i32* %a.addr.i213, align 4, !dbg !8484
  store i32 %70, i32* %b.addr.i214, align 4, !dbg !8484
  %71 = load i32, i32* %a.addr.i213, align 4, !dbg !8485
  %conv.i215 = sext i32 %71 to i64, !dbg !8486
  %72 = load i32, i32* %b.addr.i214, align 4, !dbg !8487
  %conv1.i216 = sext i32 %72 to i64, !dbg !8488
  %mul.i217 = mul nsw i64 %conv.i215, %conv1.i216, !dbg !8489
  %shr.i218 = ashr i64 %mul.i217, 32, !dbg !8490
  %conv2.i219 = trunc i64 %shr.i218 to i32, !dbg !8491
  %73 = load i32, i32* %i, align 4, !dbg !8492
  %add80 = add nsw i32 %73, 12, !dbg !8493
  %mul81 = mul nsw i32 4, %add80, !dbg !8494
  %idxprom82 = sext i32 %mul81 to i64, !dbg !8495
  %74 = load i32*, i32** %buf, align 8, !dbg !8495
  %arrayidx83 = getelementptr inbounds i32, i32* %74, i64 %idxprom82, !dbg !8495
  store i32 %conv2.i219, i32* %arrayidx83, align 4, !dbg !8496
  %75 = load i32*, i32** %out_ptr, align 8, !dbg !8497
  %add.ptr84 = getelementptr inbounds i32, i32* %75, i64 32, !dbg !8497
  store i32* %add.ptr84, i32** %out_ptr, align 8, !dbg !8497
  br label %for.inc85, !dbg !8498

for.inc85:                                        ; preds = %for.body61
  %76 = load i32, i32* %i, align 4, !dbg !8499
  %inc86 = add nsw i32 %76, 1, !dbg !8499
  store i32 %inc86, i32* %i, align 4, !dbg !8499
  br label %for.cond58, !dbg !8501, !llvm.loop !8502

for.end87:                                        ; preds = %for.cond58
  %arraydecay88 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i32 0, i32 0, !dbg !8504
  %77 = load i32*, i32** %ptr, align 8, !dbg !8505
  %add.ptr89 = getelementptr inbounds i32, i32* %77, i64 1, !dbg !8506
  call void @imdct12(i32* %arraydecay88, i32* %add.ptr89), !dbg !8507
  store i32 0, i32* %i, align 4, !dbg !8508
  br label %for.cond90, !dbg !8509

for.cond90:                                       ; preds = %for.inc118, %for.end87
  %78 = load i32, i32* %i, align 4, !dbg !8510
  %cmp91 = icmp slt i32 %78, 6, !dbg !8512
  br i1 %cmp91, label %for.body93, label %for.end120, !dbg !8513

for.body93:                                       ; preds = %for.cond90
  %79 = load i32, i32* %i, align 4, !dbg !8514
  %idxprom94 = sext i32 %79 to i64, !dbg !8515
  %arrayidx95 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i64 0, i64 %idxprom94, !dbg !8515
  %80 = load i32, i32* %arrayidx95, align 4, !dbg !8515
  %mul96 = mul nsw i32 1, %80, !dbg !8516
  %81 = load i32, i32* %i, align 4, !dbg !8517
  %idxprom97 = sext i32 %81 to i64, !dbg !8518
  %82 = load i32*, i32** %win, align 8, !dbg !8518
  %arrayidx98 = getelementptr inbounds i32, i32* %82, i64 %idxprom97, !dbg !8518
  %83 = load i32, i32* %arrayidx98, align 4, !dbg !8518
  store i32 %mul96, i32* %a.addr.i227, align 4, !dbg !8519
  store i32 %83, i32* %b.addr.i228, align 4, !dbg !8519
  %84 = load i32, i32* %a.addr.i227, align 4, !dbg !8520
  %conv.i229 = sext i32 %84 to i64, !dbg !8521
  %85 = load i32, i32* %b.addr.i228, align 4, !dbg !8522
  %conv1.i230 = sext i32 %85 to i64, !dbg !8523
  %mul.i231 = mul nsw i64 %conv.i229, %conv1.i230, !dbg !8524
  %shr.i232 = ashr i64 %mul.i231, 32, !dbg !8525
  %conv2.i233 = trunc i64 %shr.i232 to i32, !dbg !8526
  %86 = load i32, i32* %i, align 4, !dbg !8527
  %add100 = add nsw i32 %86, 12, !dbg !8528
  %mul101 = mul nsw i32 4, %add100, !dbg !8529
  %idxprom102 = sext i32 %mul101 to i64, !dbg !8530
  %87 = load i32*, i32** %buf, align 8, !dbg !8530
  %arrayidx103 = getelementptr inbounds i32, i32* %87, i64 %idxprom102, !dbg !8530
  %88 = load i32, i32* %arrayidx103, align 4, !dbg !8530
  %add104 = add nsw i32 %conv2.i233, %88, !dbg !8531
  %89 = load i32*, i32** %out_ptr, align 8, !dbg !8532
  store i32 %add104, i32* %89, align 4, !dbg !8533
  %90 = load i32, i32* %i, align 4, !dbg !8534
  %add105 = add nsw i32 %90, 6, !dbg !8535
  %idxprom106 = sext i32 %add105 to i64, !dbg !8536
  %arrayidx107 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i64 0, i64 %idxprom106, !dbg !8536
  %91 = load i32, i32* %arrayidx107, align 4, !dbg !8536
  %mul108 = mul nsw i32 1, %91, !dbg !8537
  %92 = load i32, i32* %i, align 4, !dbg !8538
  %add109 = add nsw i32 %92, 6, !dbg !8539
  %idxprom110 = sext i32 %add109 to i64, !dbg !8540
  %93 = load i32*, i32** %win, align 8, !dbg !8540
  %arrayidx111 = getelementptr inbounds i32, i32* %93, i64 %idxprom110, !dbg !8540
  %94 = load i32, i32* %arrayidx111, align 4, !dbg !8540
  store i32 %mul108, i32* %a.addr.i220, align 4, !dbg !8541
  store i32 %94, i32* %b.addr.i221, align 4, !dbg !8541
  %95 = load i32, i32* %a.addr.i220, align 4, !dbg !8542
  %conv.i222 = sext i32 %95 to i64, !dbg !8543
  %96 = load i32, i32* %b.addr.i221, align 4, !dbg !8544
  %conv1.i223 = sext i32 %96 to i64, !dbg !8545
  %mul.i224 = mul nsw i64 %conv.i222, %conv1.i223, !dbg !8546
  %shr.i225 = ashr i64 %mul.i224, 32, !dbg !8547
  %conv2.i226 = trunc i64 %shr.i225 to i32, !dbg !8548
  %97 = load i32, i32* %i, align 4, !dbg !8549
  %add113 = add nsw i32 %97, 0, !dbg !8550
  %mul114 = mul nsw i32 4, %add113, !dbg !8551
  %idxprom115 = sext i32 %mul114 to i64, !dbg !8552
  %98 = load i32*, i32** %buf, align 8, !dbg !8552
  %arrayidx116 = getelementptr inbounds i32, i32* %98, i64 %idxprom115, !dbg !8552
  store i32 %conv2.i226, i32* %arrayidx116, align 4, !dbg !8553
  %99 = load i32*, i32** %out_ptr, align 8, !dbg !8554
  %add.ptr117 = getelementptr inbounds i32, i32* %99, i64 32, !dbg !8554
  store i32* %add.ptr117, i32** %out_ptr, align 8, !dbg !8554
  br label %for.inc118, !dbg !8555

for.inc118:                                       ; preds = %for.body93
  %100 = load i32, i32* %i, align 4, !dbg !8556
  %inc119 = add nsw i32 %100, 1, !dbg !8556
  store i32 %inc119, i32* %i, align 4, !dbg !8556
  br label %for.cond90, !dbg !8558, !llvm.loop !8559

for.end120:                                       ; preds = %for.cond90
  %arraydecay121 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i32 0, i32 0, !dbg !8561
  %101 = load i32*, i32** %ptr, align 8, !dbg !8562
  %add.ptr122 = getelementptr inbounds i32, i32* %101, i64 2, !dbg !8563
  call void @imdct12(i32* %arraydecay121, i32* %add.ptr122), !dbg !8564
  store i32 0, i32* %i, align 4, !dbg !8565
  br label %for.cond123, !dbg !8566

for.cond123:                                      ; preds = %for.inc158, %for.end120
  %102 = load i32, i32* %i, align 4, !dbg !8567
  %cmp124 = icmp slt i32 %102, 6, !dbg !8569
  br i1 %cmp124, label %for.body126, label %for.end160, !dbg !8570

for.body126:                                      ; preds = %for.cond123
  %103 = load i32, i32* %i, align 4, !dbg !8571
  %idxprom127 = sext i32 %103 to i64, !dbg !8572
  %arrayidx128 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i64 0, i64 %idxprom127, !dbg !8572
  %104 = load i32, i32* %arrayidx128, align 4, !dbg !8572
  %mul129 = mul nsw i32 1, %104, !dbg !8573
  %105 = load i32, i32* %i, align 4, !dbg !8574
  %idxprom130 = sext i32 %105 to i64, !dbg !8575
  %106 = load i32*, i32** %win, align 8, !dbg !8575
  %arrayidx131 = getelementptr inbounds i32, i32* %106, i64 %idxprom130, !dbg !8575
  %107 = load i32, i32* %arrayidx131, align 4, !dbg !8575
  store i32 %mul129, i32* %a.addr.i206, align 4, !dbg !8576
  store i32 %107, i32* %b.addr.i207, align 4, !dbg !8576
  %108 = load i32, i32* %a.addr.i206, align 4, !dbg !8577
  %conv.i208 = sext i32 %108 to i64, !dbg !8578
  %109 = load i32, i32* %b.addr.i207, align 4, !dbg !8579
  %conv1.i209 = sext i32 %109 to i64, !dbg !8580
  %mul.i210 = mul nsw i64 %conv.i208, %conv1.i209, !dbg !8581
  %shr.i211 = ashr i64 %mul.i210, 32, !dbg !8582
  %conv2.i212 = trunc i64 %shr.i211 to i32, !dbg !8583
  %110 = load i32, i32* %i, align 4, !dbg !8584
  %add133 = add nsw i32 %110, 0, !dbg !8585
  %mul134 = mul nsw i32 4, %add133, !dbg !8586
  %idxprom135 = sext i32 %mul134 to i64, !dbg !8587
  %111 = load i32*, i32** %buf, align 8, !dbg !8587
  %arrayidx136 = getelementptr inbounds i32, i32* %111, i64 %idxprom135, !dbg !8587
  %112 = load i32, i32* %arrayidx136, align 4, !dbg !8587
  %add137 = add nsw i32 %conv2.i212, %112, !dbg !8588
  %113 = load i32, i32* %i, align 4, !dbg !8589
  %add138 = add nsw i32 %113, 0, !dbg !8590
  %mul139 = mul nsw i32 4, %add138, !dbg !8591
  %idxprom140 = sext i32 %mul139 to i64, !dbg !8592
  %114 = load i32*, i32** %buf, align 8, !dbg !8592
  %arrayidx141 = getelementptr inbounds i32, i32* %114, i64 %idxprom140, !dbg !8592
  store i32 %add137, i32* %arrayidx141, align 4, !dbg !8593
  %115 = load i32, i32* %i, align 4, !dbg !8594
  %add142 = add nsw i32 %115, 6, !dbg !8595
  %idxprom143 = sext i32 %add142 to i64, !dbg !8596
  %arrayidx144 = getelementptr inbounds [12 x i32], [12 x i32]* %out2, i64 0, i64 %idxprom143, !dbg !8596
  %116 = load i32, i32* %arrayidx144, align 4, !dbg !8596
  %mul145 = mul nsw i32 1, %116, !dbg !8597
  %117 = load i32, i32* %i, align 4, !dbg !8598
  %add146 = add nsw i32 %117, 6, !dbg !8599
  %idxprom147 = sext i32 %add146 to i64, !dbg !8600
  %118 = load i32*, i32** %win, align 8, !dbg !8600
  %arrayidx148 = getelementptr inbounds i32, i32* %118, i64 %idxprom147, !dbg !8600
  %119 = load i32, i32* %arrayidx148, align 4, !dbg !8600
  store i32 %mul145, i32* %a.addr.i199, align 4, !dbg !8601
  store i32 %119, i32* %b.addr.i200, align 4, !dbg !8601
  %120 = load i32, i32* %a.addr.i199, align 4, !dbg !8602
  %conv.i201 = sext i32 %120 to i64, !dbg !8603
  %121 = load i32, i32* %b.addr.i200, align 4, !dbg !8604
  %conv1.i202 = sext i32 %121 to i64, !dbg !8605
  %mul.i203 = mul nsw i64 %conv.i201, %conv1.i202, !dbg !8606
  %shr.i204 = ashr i64 %mul.i203, 32, !dbg !8607
  %conv2.i205 = trunc i64 %shr.i204 to i32, !dbg !8608
  %122 = load i32, i32* %i, align 4, !dbg !8609
  %add150 = add nsw i32 %122, 6, !dbg !8610
  %mul151 = mul nsw i32 4, %add150, !dbg !8611
  %idxprom152 = sext i32 %mul151 to i64, !dbg !8612
  %123 = load i32*, i32** %buf, align 8, !dbg !8612
  %arrayidx153 = getelementptr inbounds i32, i32* %123, i64 %idxprom152, !dbg !8612
  store i32 %conv2.i205, i32* %arrayidx153, align 4, !dbg !8613
  %124 = load i32, i32* %i, align 4, !dbg !8614
  %add154 = add nsw i32 %124, 12, !dbg !8615
  %mul155 = mul nsw i32 4, %add154, !dbg !8616
  %idxprom156 = sext i32 %mul155 to i64, !dbg !8617
  %125 = load i32*, i32** %buf, align 8, !dbg !8617
  %arrayidx157 = getelementptr inbounds i32, i32* %125, i64 %idxprom156, !dbg !8617
  store i32 0, i32* %arrayidx157, align 4, !dbg !8618
  br label %for.inc158, !dbg !8619

for.inc158:                                       ; preds = %for.body126
  %126 = load i32, i32* %i, align 4, !dbg !8620
  %inc159 = add nsw i32 %126, 1, !dbg !8620
  store i32 %inc159, i32* %i, align 4, !dbg !8620
  br label %for.cond123, !dbg !8622, !llvm.loop !8623

for.end160:                                       ; preds = %for.cond123
  %127 = load i32*, i32** %ptr, align 8, !dbg !8625
  %add.ptr161 = getelementptr inbounds i32, i32* %127, i64 18, !dbg !8625
  store i32* %add.ptr161, i32** %ptr, align 8, !dbg !8625
  %128 = load i32, i32* %j, align 4, !dbg !8626
  %and162 = and i32 %128, 3, !dbg !8627
  %cmp163 = icmp ne i32 %and162, 3, !dbg !8628
  %cond = select i1 %cmp163, i32 1, i32 69, !dbg !8629
  %129 = load i32*, i32** %buf, align 8, !dbg !8630
  %idx.ext165 = sext i32 %cond to i64, !dbg !8630
  %add.ptr166 = getelementptr inbounds i32, i32* %129, i64 %idx.ext165, !dbg !8630
  store i32* %add.ptr166, i32** %buf, align 8, !dbg !8630
  br label %for.inc167, !dbg !8631

for.inc167:                                       ; preds = %for.end160
  %130 = load i32, i32* %j, align 4, !dbg !8632
  %inc168 = add nsw i32 %130, 1, !dbg !8632
  store i32 %inc168, i32* %j, align 4, !dbg !8632
  br label %for.cond, !dbg !8634, !llvm.loop !8635

for.end169:                                       ; preds = %for.cond
  %131 = load i32, i32* %sblimit, align 4, !dbg !8637
  store i32 %131, i32* %j, align 4, !dbg !8639
  br label %for.cond170, !dbg !8640

for.cond170:                                      ; preds = %for.inc196, %for.end169
  %132 = load i32, i32* %j, align 4, !dbg !8641
  %cmp171 = icmp slt i32 %132, 32, !dbg !8644
  br i1 %cmp171, label %for.body173, label %for.end198, !dbg !8645

for.body173:                                      ; preds = %for.cond170
  %133 = load i32*, i32** %sb_samples.addr, align 8, !dbg !8646
  %134 = load i32, i32* %j, align 4, !dbg !8648
  %idx.ext174 = sext i32 %134 to i64, !dbg !8649
  %add.ptr175 = getelementptr inbounds i32, i32* %133, i64 %idx.ext174, !dbg !8649
  store i32* %add.ptr175, i32** %out_ptr, align 8, !dbg !8650
  store i32 0, i32* %i, align 4, !dbg !8651
  br label %for.cond176, !dbg !8653

for.cond176:                                      ; preds = %for.inc187, %for.body173
  %135 = load i32, i32* %i, align 4, !dbg !8654
  %cmp177 = icmp slt i32 %135, 18, !dbg !8657
  br i1 %cmp177, label %for.body179, label %for.end189, !dbg !8658

for.body179:                                      ; preds = %for.cond176
  %136 = load i32, i32* %i, align 4, !dbg !8659
  %mul180 = mul nsw i32 4, %136, !dbg !8661
  %idxprom181 = sext i32 %mul180 to i64, !dbg !8662
  %137 = load i32*, i32** %buf, align 8, !dbg !8662
  %arrayidx182 = getelementptr inbounds i32, i32* %137, i64 %idxprom181, !dbg !8662
  %138 = load i32, i32* %arrayidx182, align 4, !dbg !8662
  %139 = load i32*, i32** %out_ptr, align 8, !dbg !8663
  store i32 %138, i32* %139, align 4, !dbg !8664
  %140 = load i32, i32* %i, align 4, !dbg !8665
  %mul183 = mul nsw i32 4, %140, !dbg !8666
  %idxprom184 = sext i32 %mul183 to i64, !dbg !8667
  %141 = load i32*, i32** %buf, align 8, !dbg !8667
  %arrayidx185 = getelementptr inbounds i32, i32* %141, i64 %idxprom184, !dbg !8667
  store i32 0, i32* %arrayidx185, align 4, !dbg !8668
  %142 = load i32*, i32** %out_ptr, align 8, !dbg !8669
  %add.ptr186 = getelementptr inbounds i32, i32* %142, i64 32, !dbg !8669
  store i32* %add.ptr186, i32** %out_ptr, align 8, !dbg !8669
  br label %for.inc187, !dbg !8670

for.inc187:                                       ; preds = %for.body179
  %143 = load i32, i32* %i, align 4, !dbg !8671
  %inc188 = add nsw i32 %143, 1, !dbg !8671
  store i32 %inc188, i32* %i, align 4, !dbg !8671
  br label %for.cond176, !dbg !8673, !llvm.loop !8674

for.end189:                                       ; preds = %for.cond176
  %144 = load i32, i32* %j, align 4, !dbg !8676
  %and190 = and i32 %144, 3, !dbg !8677
  %cmp191 = icmp ne i32 %and190, 3, !dbg !8678
  %cond193 = select i1 %cmp191, i32 1, i32 69, !dbg !8679
  %145 = load i32*, i32** %buf, align 8, !dbg !8680
  %idx.ext194 = sext i32 %cond193 to i64, !dbg !8680
  %add.ptr195 = getelementptr inbounds i32, i32* %145, i64 %idx.ext194, !dbg !8680
  store i32* %add.ptr195, i32** %buf, align 8, !dbg !8680
  br label %for.inc196, !dbg !8681

for.inc196:                                       ; preds = %for.end189
  %146 = load i32, i32* %j, align 4, !dbg !8682
  %inc197 = add nsw i32 %146, 1, !dbg !8682
  store i32 %inc197, i32* %j, align 4, !dbg !8682
  br label %for.cond170, !dbg !8684, !llvm.loop !8685

for.end198:                                       ; preds = %for.cond170
  ret void, !dbg !8687
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #7 !dbg !8688 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5604, metadata !2019), !dbg !8689
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !5614, metadata !2019), !dbg !8691
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !5616, metadata !2019), !dbg !8692
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8693, metadata !2019), !dbg !8694
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8695, metadata !2019), !dbg !8696
  %0 = load i32, i32* %n.addr, align 4, !dbg !8697
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8698
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !8699
  %2 = load i32, i32* %index, align 8, !dbg !8699
  %sub = sub nsw i32 0, %2, !dbg !8700
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8701
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !8702
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8702
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8703
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !8704
  %6 = load i32, i32* %index1, align 8, !dbg !8704
  %sub2 = sub nsw i32 %4, %6, !dbg !8705
  store i32 %0, i32* %a.addr.i, align 4, !dbg !8706
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !8706
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !8706
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !8707
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !8708
  %cmp.i = icmp slt i32 %7, %8, !dbg !8709
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8710

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !8711
  store i32 %9, i32* %retval.i, align 4, !dbg !8712
  br label %av_clip_c.exit, !dbg !8712

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !8713
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !8714
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !8715
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8716

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !8717
  store i32 %12, i32* %retval.i, align 4, !dbg !8718
  br label %av_clip_c.exit, !dbg !8718

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !8719
  store i32 %13, i32* %retval.i, align 4, !dbg !8720
  br label %av_clip_c.exit, !dbg !8720

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !8721
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8722
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8723
  %16 = load i32, i32* %index3, align 8, !dbg !8724
  %add = add nsw i32 %16, %14, !dbg !8724
  store i32 %add, i32* %index3, align 8, !dbg !8724
  ret void, !dbg !8725
}

; Function Attrs: nounwind uwtable
define internal void @exponents_from_scale_factors(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, i16* %exponents) #1 !dbg !8726 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %exponents.addr = alloca i16*, align 8
  %bstab = alloca i8*, align 8
  %pretab = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %v0 = alloca i32, align 4
  %shift = alloca i32, align 4
  %gain = alloca i32, align 4
  %gains = alloca [3 x i32], align 4
  %exp_ptr = alloca i16*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !8729, metadata !2019), !dbg !8730
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !8731, metadata !2019), !dbg !8732
  store i16* %exponents, i16** %exponents.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %exponents.addr, metadata !8733, metadata !2019), !dbg !8734
  call void @llvm.dbg.declare(metadata i8** %bstab, metadata !8735, metadata !2019), !dbg !8736
  call void @llvm.dbg.declare(metadata i8** %pretab, metadata !8737, metadata !2019), !dbg !8738
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8739, metadata !2019), !dbg !8740
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8741, metadata !2019), !dbg !8742
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8743, metadata !2019), !dbg !8744
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8745, metadata !2019), !dbg !8746
  call void @llvm.dbg.declare(metadata i32* %l, metadata !8747, metadata !2019), !dbg !8748
  call void @llvm.dbg.declare(metadata i32* %v0, metadata !8749, metadata !2019), !dbg !8750
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !8751, metadata !2019), !dbg !8752
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !8753, metadata !2019), !dbg !8754
  call void @llvm.dbg.declare(metadata [3 x i32]* %gains, metadata !8755, metadata !2019), !dbg !8756
  call void @llvm.dbg.declare(metadata i16** %exp_ptr, metadata !8757, metadata !2019), !dbg !8758
  %0 = load i16*, i16** %exponents.addr, align 8, !dbg !8759
  store i16* %0, i16** %exp_ptr, align 8, !dbg !8760
  %1 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8761
  %global_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %1, i32 0, i32 3, !dbg !8762
  %2 = load i32, i32* %global_gain, align 4, !dbg !8762
  %sub = sub nsw i32 %2, 210, !dbg !8763
  store i32 %sub, i32* %gain, align 4, !dbg !8764
  %3 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8765
  %scalefac_scale = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %3, i32 0, i32 9, !dbg !8766
  %4 = load i8, i8* %scalefac_scale, align 16, !dbg !8766
  %conv = zext i8 %4 to i32, !dbg !8765
  %add = add nsw i32 %conv, 1, !dbg !8767
  store i32 %add, i32* %shift, align 4, !dbg !8768
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8769
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 4, !dbg !8770
  %6 = load i32, i32* %sample_rate_index, align 16, !dbg !8770
  %idxprom = sext i32 %6 to i64, !dbg !8771
  %arrayidx = getelementptr inbounds [9 x [22 x i8]], [9 x [22 x i8]]* @band_size_long, i64 0, i64 %idxprom, !dbg !8771
  %arraydecay = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx, i32 0, i32 0, !dbg !8771
  store i8* %arraydecay, i8** %bstab, align 8, !dbg !8772
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8773
  %preflag = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 12, !dbg !8774
  %8 = load i32, i32* %preflag, align 16, !dbg !8774
  %idxprom1 = sext i32 %8 to i64, !dbg !8775
  %arrayidx2 = getelementptr inbounds [2 x [22 x i8]], [2 x [22 x i8]]* @mpa_pretab, i64 0, i64 %idxprom1, !dbg !8775
  %arraydecay3 = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx2, i32 0, i32 0, !dbg !8775
  store i8* %arraydecay3, i8** %pretab, align 8, !dbg !8776
  store i32 0, i32* %i, align 4, !dbg !8777
  br label %for.cond, !dbg !8779

for.cond:                                         ; preds = %for.inc22, %entry
  %9 = load i32, i32* %i, align 4, !dbg !8780
  %10 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8783
  %long_end = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %10, i32 0, i32 14, !dbg !8784
  %11 = load i32, i32* %long_end, align 8, !dbg !8784
  %cmp = icmp slt i32 %9, %11, !dbg !8785
  br i1 %cmp, label %for.body, label %for.end23, !dbg !8786

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %gain, align 4, !dbg !8787
  %13 = load i32, i32* %i, align 4, !dbg !8789
  %idxprom5 = sext i32 %13 to i64, !dbg !8790
  %14 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8790
  %scale_factors = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %14, i32 0, i32 15, !dbg !8791
  %arrayidx6 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors, i64 0, i64 %idxprom5, !dbg !8790
  %15 = load i8, i8* %arrayidx6, align 1, !dbg !8790
  %conv7 = zext i8 %15 to i32, !dbg !8790
  %16 = load i32, i32* %i, align 4, !dbg !8792
  %idxprom8 = sext i32 %16 to i64, !dbg !8793
  %17 = load i8*, i8** %pretab, align 8, !dbg !8793
  %arrayidx9 = getelementptr inbounds i8, i8* %17, i64 %idxprom8, !dbg !8793
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !8793
  %conv10 = zext i8 %18 to i32, !dbg !8793
  %add11 = add nsw i32 %conv7, %conv10, !dbg !8794
  %19 = load i32, i32* %shift, align 4, !dbg !8795
  %shl = shl i32 %add11, %19, !dbg !8796
  %sub12 = sub nsw i32 %12, %shl, !dbg !8797
  %add13 = add nsw i32 %sub12, 400, !dbg !8798
  store i32 %add13, i32* %v0, align 4, !dbg !8799
  %20 = load i32, i32* %i, align 4, !dbg !8800
  %idxprom14 = sext i32 %20 to i64, !dbg !8801
  %21 = load i8*, i8** %bstab, align 8, !dbg !8801
  %arrayidx15 = getelementptr inbounds i8, i8* %21, i64 %idxprom14, !dbg !8801
  %22 = load i8, i8* %arrayidx15, align 1, !dbg !8801
  %conv16 = zext i8 %22 to i32, !dbg !8801
  store i32 %conv16, i32* %len, align 4, !dbg !8802
  %23 = load i32, i32* %len, align 4, !dbg !8803
  store i32 %23, i32* %j, align 4, !dbg !8805
  br label %for.cond17, !dbg !8806

for.cond17:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %j, align 4, !dbg !8807
  %cmp18 = icmp sgt i32 %24, 0, !dbg !8810
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !8811

for.body20:                                       ; preds = %for.cond17
  %25 = load i32, i32* %v0, align 4, !dbg !8812
  %conv21 = trunc i32 %25 to i16, !dbg !8812
  %26 = load i16*, i16** %exp_ptr, align 8, !dbg !8813
  %incdec.ptr = getelementptr inbounds i16, i16* %26, i32 1, !dbg !8813
  store i16* %incdec.ptr, i16** %exp_ptr, align 8, !dbg !8813
  store i16 %conv21, i16* %26, align 2, !dbg !8814
  br label %for.inc, !dbg !8815

for.inc:                                          ; preds = %for.body20
  %27 = load i32, i32* %j, align 4, !dbg !8816
  %dec = add nsw i32 %27, -1, !dbg !8816
  store i32 %dec, i32* %j, align 4, !dbg !8816
  br label %for.cond17, !dbg !8818, !llvm.loop !8819

for.end:                                          ; preds = %for.cond17
  br label %for.inc22, !dbg !8821

for.inc22:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !8822
  %inc = add nsw i32 %28, 1, !dbg !8822
  store i32 %inc, i32* %i, align 4, !dbg !8822
  br label %for.cond, !dbg !8824, !llvm.loop !8825

for.end23:                                        ; preds = %for.cond
  %29 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8827
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %29, i32 0, i32 13, !dbg !8829
  %30 = load i32, i32* %short_start, align 4, !dbg !8829
  %cmp24 = icmp slt i32 %30, 13, !dbg !8830
  br i1 %cmp24, label %if.then, label %if.end, !dbg !8831

if.then:                                          ; preds = %for.end23
  %31 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !8832
  %sample_rate_index26 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %31, i32 0, i32 4, !dbg !8834
  %32 = load i32, i32* %sample_rate_index26, align 16, !dbg !8834
  %idxprom27 = sext i32 %32 to i64, !dbg !8835
  %arrayidx28 = getelementptr inbounds [9 x [13 x i8]], [9 x [13 x i8]]* @band_size_short, i64 0, i64 %idxprom27, !dbg !8835
  %arraydecay29 = getelementptr inbounds [13 x i8], [13 x i8]* %arrayidx28, i32 0, i32 0, !dbg !8835
  store i8* %arraydecay29, i8** %bstab, align 8, !dbg !8836
  %33 = load i32, i32* %gain, align 4, !dbg !8837
  %34 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8838
  %subblock_gain = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %34, i32 0, i32 8, !dbg !8839
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain, i64 0, i64 0, !dbg !8838
  %35 = load i32, i32* %arrayidx30, align 4, !dbg !8838
  %shl31 = shl i32 %35, 3, !dbg !8840
  %sub32 = sub nsw i32 %33, %shl31, !dbg !8841
  %arrayidx33 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 0, !dbg !8842
  store i32 %sub32, i32* %arrayidx33, align 4, !dbg !8843
  %36 = load i32, i32* %gain, align 4, !dbg !8844
  %37 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8845
  %subblock_gain34 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %37, i32 0, i32 8, !dbg !8846
  %arrayidx35 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain34, i64 0, i64 1, !dbg !8845
  %38 = load i32, i32* %arrayidx35, align 4, !dbg !8845
  %shl36 = shl i32 %38, 3, !dbg !8847
  %sub37 = sub nsw i32 %36, %shl36, !dbg !8848
  %arrayidx38 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 1, !dbg !8849
  store i32 %sub37, i32* %arrayidx38, align 4, !dbg !8850
  %39 = load i32, i32* %gain, align 4, !dbg !8851
  %40 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8852
  %subblock_gain39 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %40, i32 0, i32 8, !dbg !8853
  %arrayidx40 = getelementptr inbounds [3 x i32], [3 x i32]* %subblock_gain39, i64 0, i64 2, !dbg !8852
  %41 = load i32, i32* %arrayidx40, align 4, !dbg !8852
  %shl41 = shl i32 %41, 3, !dbg !8854
  %sub42 = sub nsw i32 %39, %shl41, !dbg !8855
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 2, !dbg !8856
  store i32 %sub42, i32* %arrayidx43, align 4, !dbg !8857
  %42 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8858
  %long_end44 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %42, i32 0, i32 14, !dbg !8859
  %43 = load i32, i32* %long_end44, align 8, !dbg !8859
  store i32 %43, i32* %k, align 4, !dbg !8860
  %44 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8861
  %short_start45 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %44, i32 0, i32 13, !dbg !8863
  %45 = load i32, i32* %short_start45, align 4, !dbg !8863
  store i32 %45, i32* %i, align 4, !dbg !8864
  br label %for.cond46, !dbg !8865

for.cond46:                                       ; preds = %for.inc79, %if.then
  %46 = load i32, i32* %i, align 4, !dbg !8866
  %cmp47 = icmp slt i32 %46, 13, !dbg !8869
  br i1 %cmp47, label %for.body49, label %for.end81, !dbg !8870

for.body49:                                       ; preds = %for.cond46
  %47 = load i32, i32* %i, align 4, !dbg !8871
  %idxprom50 = sext i32 %47 to i64, !dbg !8873
  %48 = load i8*, i8** %bstab, align 8, !dbg !8873
  %arrayidx51 = getelementptr inbounds i8, i8* %48, i64 %idxprom50, !dbg !8873
  %49 = load i8, i8* %arrayidx51, align 1, !dbg !8873
  %conv52 = zext i8 %49 to i32, !dbg !8873
  store i32 %conv52, i32* %len, align 4, !dbg !8874
  store i32 0, i32* %l, align 4, !dbg !8875
  br label %for.cond53, !dbg !8877

for.cond53:                                       ; preds = %for.inc76, %for.body49
  %50 = load i32, i32* %l, align 4, !dbg !8878
  %cmp54 = icmp slt i32 %50, 3, !dbg !8881
  br i1 %cmp54, label %for.body56, label %for.end78, !dbg !8882

for.body56:                                       ; preds = %for.cond53
  %51 = load i32, i32* %l, align 4, !dbg !8883
  %idxprom57 = sext i32 %51 to i64, !dbg !8885
  %arrayidx58 = getelementptr inbounds [3 x i32], [3 x i32]* %gains, i64 0, i64 %idxprom57, !dbg !8885
  %52 = load i32, i32* %arrayidx58, align 4, !dbg !8885
  %53 = load i32, i32* %k, align 4, !dbg !8886
  %inc59 = add nsw i32 %53, 1, !dbg !8886
  store i32 %inc59, i32* %k, align 4, !dbg !8886
  %idxprom60 = sext i32 %53 to i64, !dbg !8887
  %54 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !8887
  %scale_factors61 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %54, i32 0, i32 15, !dbg !8888
  %arrayidx62 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors61, i64 0, i64 %idxprom60, !dbg !8887
  %55 = load i8, i8* %arrayidx62, align 1, !dbg !8887
  %conv63 = zext i8 %55 to i32, !dbg !8887
  %56 = load i32, i32* %shift, align 4, !dbg !8889
  %shl64 = shl i32 %conv63, %56, !dbg !8890
  %sub65 = sub nsw i32 %52, %shl64, !dbg !8891
  %add66 = add nsw i32 %sub65, 400, !dbg !8892
  store i32 %add66, i32* %v0, align 4, !dbg !8893
  %57 = load i32, i32* %len, align 4, !dbg !8894
  store i32 %57, i32* %j, align 4, !dbg !8896
  br label %for.cond67, !dbg !8897

for.cond67:                                       ; preds = %for.inc73, %for.body56
  %58 = load i32, i32* %j, align 4, !dbg !8898
  %cmp68 = icmp sgt i32 %58, 0, !dbg !8901
  br i1 %cmp68, label %for.body70, label %for.end75, !dbg !8902

for.body70:                                       ; preds = %for.cond67
  %59 = load i32, i32* %v0, align 4, !dbg !8903
  %conv71 = trunc i32 %59 to i16, !dbg !8903
  %60 = load i16*, i16** %exp_ptr, align 8, !dbg !8904
  %incdec.ptr72 = getelementptr inbounds i16, i16* %60, i32 1, !dbg !8904
  store i16* %incdec.ptr72, i16** %exp_ptr, align 8, !dbg !8904
  store i16 %conv71, i16* %60, align 2, !dbg !8905
  br label %for.inc73, !dbg !8906

for.inc73:                                        ; preds = %for.body70
  %61 = load i32, i32* %j, align 4, !dbg !8907
  %dec74 = add nsw i32 %61, -1, !dbg !8907
  store i32 %dec74, i32* %j, align 4, !dbg !8907
  br label %for.cond67, !dbg !8909, !llvm.loop !8910

for.end75:                                        ; preds = %for.cond67
  br label %for.inc76, !dbg !8912

for.inc76:                                        ; preds = %for.end75
  %62 = load i32, i32* %l, align 4, !dbg !8913
  %inc77 = add nsw i32 %62, 1, !dbg !8913
  store i32 %inc77, i32* %l, align 4, !dbg !8913
  br label %for.cond53, !dbg !8915, !llvm.loop !8916

for.end78:                                        ; preds = %for.cond53
  br label %for.inc79, !dbg !8918

for.inc79:                                        ; preds = %for.end78
  %63 = load i32, i32* %i, align 4, !dbg !8919
  %inc80 = add nsw i32 %63, 1, !dbg !8919
  store i32 %inc80, i32* %i, align 4, !dbg !8919
  br label %for.cond46, !dbg !8921, !llvm.loop !8922

for.end81:                                        ; preds = %for.cond46
  br label %if.end, !dbg !8924

if.end:                                           ; preds = %for.end81, %for.end23
  ret void, !dbg !8925
}

; Function Attrs: nounwind uwtable
define internal i32 @huffman_decode(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g, i16* %exponents, i32 %end_pos2) #1 !dbg !1844 {
entry:
  %x.addr.i96.i309 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i309, metadata !2070, metadata !2019), !dbg !8926
  %x.addr.i81.i310 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i310, metadata !2070, metadata !2019), !dbg !8939
  %x.addr.i.i311 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i311, metadata !2070, metadata !2019), !dbg !8942
  %s.addr.i312 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i312, metadata !8944, metadata !2019), !dbg !8945
  %table.addr.i313 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i313, metadata !8946, metadata !2019), !dbg !8947
  %bits.addr.i314 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i314, metadata !8948, metadata !2019), !dbg !8949
  %max_depth.addr.i315 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i315, metadata !8950, metadata !2019), !dbg !8951
  %code.i316 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i316, metadata !8952, metadata !2019), !dbg !8953
  %re_index.i317 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i317, metadata !8954, metadata !2019), !dbg !8955
  %re_cache.i318 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i318, metadata !8956, metadata !2019), !dbg !8957
  %re_size_plus8.i319 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i319, metadata !8958, metadata !2019), !dbg !8959
  %n.i320 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i320, metadata !8960, metadata !2019), !dbg !8961
  %nb_bits.i321 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i321, metadata !8962, metadata !2019), !dbg !8963
  %index1.i322 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i322, metadata !8964, metadata !2019), !dbg !8965
  %s.addr.i300 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i300, metadata !8966, metadata !2019), !dbg !8970
  %n.addr.i301 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i301, metadata !8982, metadata !2019), !dbg !8983
  %s.addr.i291 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i291, metadata !8966, metadata !2019), !dbg !8984
  %n.addr.i292 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i292, metadata !8982, metadata !2019), !dbg !8989
  %s.addr.i286 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i286, metadata !8966, metadata !2019), !dbg !8990
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !8982, metadata !2019), !dbg !8994
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !2070, metadata !2019), !dbg !8995
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !2070, metadata !2019), !dbg !8998
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2070, metadata !2019), !dbg !9000
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !8944, metadata !2019), !dbg !9002
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !8946, metadata !2019), !dbg !9003
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !8948, metadata !2019), !dbg !9004
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !8950, metadata !2019), !dbg !9005
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !8952, metadata !2019), !dbg !9006
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !8954, metadata !2019), !dbg !9007
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !8956, metadata !2019), !dbg !9008
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !8958, metadata !2019), !dbg !9009
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !8960, metadata !2019), !dbg !9010
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !8962, metadata !2019), !dbg !9011
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !8964, metadata !2019), !dbg !9012
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %exponents.addr = alloca i16*, align 8
  %end_pos2.addr = alloca i32, align 4
  %s_index = alloca i32, align 4
  %i = alloca i32, align 4
  %last_pos = alloca i32, align 4
  %bits_left = alloca i32, align 4
  %vlc = alloca %struct.VLC*, align 8
  %end_pos = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %linbits = alloca i32, align 4
  %exponent = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %v = alloca i32, align 4
  %pos = alloca i32, align 4
  %pos180 = alloca i32, align 4
  %code = alloca i32, align 4
  %v230 = alloca i32, align 4
  %pos231 = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !9013, metadata !2019), !dbg !9014
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !9015, metadata !2019), !dbg !9016
  store i16* %exponents, i16** %exponents.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %exponents.addr, metadata !9017, metadata !2019), !dbg !9018
  store i32 %end_pos2, i32* %end_pos2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end_pos2.addr, metadata !9019, metadata !2019), !dbg !9020
  call void @llvm.dbg.declare(metadata i32* %s_index, metadata !9021, metadata !2019), !dbg !9022
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9023, metadata !2019), !dbg !9024
  call void @llvm.dbg.declare(metadata i32* %last_pos, metadata !9025, metadata !2019), !dbg !9026
  call void @llvm.dbg.declare(metadata i32* %bits_left, metadata !9027, metadata !2019), !dbg !9028
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc, metadata !9029, metadata !2019), !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %end_pos, metadata !9032, metadata !2019), !dbg !9033
  %0 = load i32, i32* %end_pos2.addr, align 4, !dbg !9034
  %1 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9035
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %1, i32 0, i32 14, !dbg !9036
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb, i32 0, i32 3, !dbg !9037
  %2 = load i32, i32* %size_in_bits, align 4, !dbg !9037
  %3 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9038
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %3, i32 0, i32 12, !dbg !9039
  %4 = load i32, i32* %extrasize, align 4, !dbg !9039
  %mul = mul nsw i32 %4, 8, !dbg !9040
  %sub = sub nsw i32 %2, %mul, !dbg !9041
  %cmp = icmp sgt i32 %0, %sub, !dbg !9042
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9043

cond.true:                                        ; preds = %entry
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9044
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 14, !dbg !9046
  %size_in_bits2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb1, i32 0, i32 3, !dbg !9047
  %6 = load i32, i32* %size_in_bits2, align 4, !dbg !9047
  %7 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9048
  %extrasize3 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %7, i32 0, i32 12, !dbg !9049
  %8 = load i32, i32* %extrasize3, align 4, !dbg !9049
  %mul4 = mul nsw i32 %8, 8, !dbg !9050
  %sub5 = sub nsw i32 %6, %mul4, !dbg !9051
  br label %cond.end, !dbg !9052

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %end_pos2.addr, align 4, !dbg !9053
  br label %cond.end, !dbg !9055

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub5, %cond.true ], [ %9, %cond.false ], !dbg !9056
  store i32 %cond, i32* %end_pos, align 4, !dbg !9058
  store i32 0, i32* %s_index, align 4, !dbg !9059
  store i32 0, i32* %i, align 4, !dbg !9060
  br label %for.cond, !dbg !9061

for.cond:                                         ; preds = %for.inc174, %cond.end
  %10 = load i32, i32* %i, align 4, !dbg !9062
  %cmp6 = icmp slt i32 %10, 3, !dbg !9064
  br i1 %cmp6, label %for.body, label %for.end175, !dbg !9065

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9066, metadata !2019), !dbg !9067
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9068, metadata !2019), !dbg !9069
  call void @llvm.dbg.declare(metadata i32* %l, metadata !9070, metadata !2019), !dbg !9071
  call void @llvm.dbg.declare(metadata i32* %linbits, metadata !9072, metadata !2019), !dbg !9073
  %11 = load i32, i32* %i, align 4, !dbg !9074
  %idxprom = sext i32 %11 to i64, !dbg !9075
  %12 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9075
  %region_size = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %12, i32 0, i32 11, !dbg !9076
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %region_size, i64 0, i64 %idxprom, !dbg !9075
  %13 = load i32, i32* %arrayidx, align 4, !dbg !9075
  store i32 %13, i32* %j, align 4, !dbg !9077
  %14 = load i32, i32* %j, align 4, !dbg !9078
  %cmp7 = icmp eq i32 %14, 0, !dbg !9080
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9081

if.then:                                          ; preds = %for.body
  br label %for.inc174, !dbg !9082

if.end:                                           ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !9083
  %idxprom8 = sext i32 %15 to i64, !dbg !9084
  %16 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9084
  %table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %16, i32 0, i32 7, !dbg !9085
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %table_select, i64 0, i64 %idxprom8, !dbg !9084
  %17 = load i32, i32* %arrayidx9, align 4, !dbg !9084
  store i32 %17, i32* %k, align 4, !dbg !9086
  %18 = load i32, i32* %k, align 4, !dbg !9087
  %idxprom10 = sext i32 %18 to i64, !dbg !9088
  %arrayidx11 = getelementptr inbounds [32 x [2 x i8]], [32 x [2 x i8]]* @mpa_huff_data, i64 0, i64 %idxprom10, !dbg !9088
  %arrayidx12 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx11, i64 0, i64 0, !dbg !9088
  %19 = load i8, i8* %arrayidx12, align 2, !dbg !9088
  %conv = zext i8 %19 to i32, !dbg !9088
  store i32 %conv, i32* %l, align 4, !dbg !9089
  %20 = load i32, i32* %k, align 4, !dbg !9090
  %idxprom13 = sext i32 %20 to i64, !dbg !9091
  %arrayidx14 = getelementptr inbounds [32 x [2 x i8]], [32 x [2 x i8]]* @mpa_huff_data, i64 0, i64 %idxprom13, !dbg !9091
  %arrayidx15 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx14, i64 0, i64 1, !dbg !9091
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !9091
  %conv16 = zext i8 %21 to i32, !dbg !9091
  store i32 %conv16, i32* %linbits, align 4, !dbg !9092
  %22 = load i32, i32* %l, align 4, !dbg !9093
  %idxprom17 = sext i32 %22 to i64, !dbg !9094
  %arrayidx18 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* @huff_vlc, i64 0, i64 %idxprom17, !dbg !9094
  store %struct.VLC* %arrayidx18, %struct.VLC** %vlc, align 8, !dbg !9095
  %23 = load i32, i32* %l, align 4, !dbg !9096
  %tobool = icmp ne i32 %23, 0, !dbg !9096
  br i1 %tobool, label %if.end25, label %if.then19, !dbg !9098

if.then19:                                        ; preds = %if.end
  %24 = load i32, i32* %s_index, align 4, !dbg !9099
  %idxprom20 = sext i32 %24 to i64, !dbg !9101
  %25 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9101
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %25, i32 0, i32 17, !dbg !9102
  %arrayidx21 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid, i64 0, i64 %idxprom20, !dbg !9101
  %26 = bitcast i32* %arrayidx21 to i8*, !dbg !9103
  %27 = load i32, i32* %j, align 4, !dbg !9104
  %conv22 = sext i32 %27 to i64, !dbg !9104
  %mul23 = mul i64 8, %conv22, !dbg !9105
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 %mul23, i32 4, i1 false), !dbg !9103
  %28 = load i32, i32* %j, align 4, !dbg !9106
  %mul24 = mul nsw i32 2, %28, !dbg !9107
  %29 = load i32, i32* %s_index, align 4, !dbg !9108
  %add = add nsw i32 %29, %mul24, !dbg !9108
  store i32 %add, i32* %s_index, align 4, !dbg !9108
  br label %for.inc174, !dbg !9109

if.end25:                                         ; preds = %if.end
  br label %for.cond26, !dbg !9110

for.cond26:                                       ; preds = %for.inc, %if.end25
  %30 = load i32, i32* %j, align 4, !dbg !9111
  %cmp27 = icmp sgt i32 %30, 0, !dbg !9113
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !9114

for.body29:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !9115, metadata !2019), !dbg !9116
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9117, metadata !2019), !dbg !9118
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9119, metadata !2019), !dbg !9120
  call void @llvm.dbg.declare(metadata i32* %v, metadata !9121, metadata !2019), !dbg !9122
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9123, metadata !2019), !dbg !9124
  %31 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9125
  %gb30 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %31, i32 0, i32 14, !dbg !9126
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb30), !dbg !9127
  store i32 %call, i32* %pos, align 4, !dbg !9124
  %32 = load i32, i32* %pos, align 4, !dbg !9128
  %33 = load i32, i32* %end_pos, align 4, !dbg !9130
  %cmp31 = icmp sge i32 %32, %33, !dbg !9131
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !9132

if.then33:                                        ; preds = %for.body29
  %34 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9133
  call void @switch_buffer(%struct.MPADecodeContext* %34, i32* %pos, i32* %end_pos, i32* %end_pos2.addr), !dbg !9135
  %35 = load i32, i32* %pos, align 4, !dbg !9136
  %36 = load i32, i32* %end_pos, align 4, !dbg !9138
  %cmp34 = icmp sge i32 %35, %36, !dbg !9139
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !9140

if.then36:                                        ; preds = %if.then33
  br label %for.end, !dbg !9141

if.end37:                                         ; preds = %if.then33
  br label %if.end38, !dbg !9142

if.end38:                                         ; preds = %if.end37, %for.body29
  %37 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9143
  %gb39 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %37, i32 0, i32 14, !dbg !9144
  %38 = load %struct.VLC*, %struct.VLC** %vlc, align 8, !dbg !9145
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %38, i32 0, i32 1, !dbg !9146
  %39 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !9146
  store %struct.GetBitContext* %gb39, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9147
  store [2 x i16]* %39, [2 x i16]** %table.addr.i, align 8, !dbg !9147
  store i32 7, i32* %bits.addr.i, align 4, !dbg !9147
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !9147
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9148
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %40, i32 0, i32 2, !dbg !9149
  %41 = load i32, i32* %index.i, align 8, !dbg !9149
  store i32 %41, i32* %re_index.i, align 4, !dbg !9007
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9150
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %42, i32 0, i32 4, !dbg !9151
  %43 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !9151
  store i32 %43, i32* %re_size_plus8.i, align 4, !dbg !9009
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9152
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %44, i32 0, i32 0, !dbg !9153
  %45 = load i8*, i8** %buffer.i, align 8, !dbg !9153
  %46 = load i32, i32* %re_index.i, align 4, !dbg !9154
  %shr.i = lshr i32 %46, 3, !dbg !9155
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !9156
  %add.ptr.i = getelementptr inbounds i8, i8* %45, i64 %idx.ext.i, !dbg !9156
  %47 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !9157
  %l.i = bitcast %union.unaligned_32* %47 to i32*, !dbg !9157
  %48 = load i32, i32* %l.i, align 1, !dbg !9157
  store i32 %48, i32* %x.addr.i.i, align 4, !dbg !9158
  %49 = load i32, i32* %x.addr.i.i, align 4, !dbg !9159
  %shl.i.i = shl i32 %49, 8, !dbg !9160
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !9161
  %50 = load i32, i32* %x.addr.i.i, align 4, !dbg !9162
  %shr.i.i = lshr i32 %50, 8, !dbg !9163
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !9164
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !9165
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !9166
  %51 = load i32, i32* %x.addr.i.i, align 4, !dbg !9167
  %shr3.i.i = lshr i32 %51, 16, !dbg !9168
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !9169
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !9170
  %52 = load i32, i32* %x.addr.i.i, align 4, !dbg !9171
  %shr6.i.i = lshr i32 %52, 16, !dbg !9172
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !9173
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !9174
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !9175
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !9176
  %53 = load i32, i32* %re_index.i, align 4, !dbg !9177
  %and.i = and i32 %53, 7, !dbg !9178
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !9179
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !9180
  %54 = load i32, i32* %re_cache.i, align 4, !dbg !9181
  %55 = load i32, i32* %bits.addr.i, align 4, !dbg !9183
  %conv.i = trunc i32 %55 to i8, !dbg !9183
  %call2.i = call i32 @NEG_USR32(i32 %54, i8 signext %conv.i) #9, !dbg !9184
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !9185
  %56 = load i32, i32* %index1.i, align 4, !dbg !9186
  %idxprom.i = zext i32 %56 to i64, !dbg !9187
  %57 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9187
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %57, i64 %idxprom.i, !dbg !9187
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !9187
  %58 = load i16, i16* %arrayidx3.i, align 2, !dbg !9187
  %conv4.i = sext i16 %58 to i32, !dbg !9187
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !9188
  %59 = load i32, i32* %index1.i, align 4, !dbg !9189
  %idxprom5.i = zext i32 %59 to i64, !dbg !9190
  %60 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9190
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %60, i64 %idxprom5.i, !dbg !9190
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !9190
  %61 = load i16, i16* %arrayidx7.i, align 2, !dbg !9190
  %conv8.i = sext i16 %61 to i32, !dbg !9190
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !9191
  %62 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9192
  %cmp.i = icmp sgt i32 %62, 1, !dbg !9193
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !9194

land.lhs.true.i:                                  ; preds = %if.end38
  %63 = load i32, i32* %n.i, align 4, !dbg !9195
  %cmp10.i = icmp slt i32 %63, 0, !dbg !9197
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !9198

if.then.i:                                        ; preds = %land.lhs.true.i
  %64 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9199
  %65 = load i32, i32* %re_index.i, align 4, !dbg !9201
  %66 = load i32, i32* %bits.addr.i, align 4, !dbg !9202
  %add.i = add i32 %65, %66, !dbg !9203
  %cmp12.i = icmp ugt i32 %64, %add.i, !dbg !9204
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !9205

cond.true.i:                                      ; preds = %if.then.i
  %67 = load i32, i32* %re_index.i, align 4, !dbg !9206
  %68 = load i32, i32* %bits.addr.i, align 4, !dbg !9208
  %add14.i = add i32 %67, %68, !dbg !9209
  br label %cond.end.i, !dbg !9210

cond.false.i:                                     ; preds = %if.then.i
  %69 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9211
  br label %cond.end.i, !dbg !9213

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %69, %cond.false.i ], !dbg !9214
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !9215
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9216
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %70, i32 0, i32 0, !dbg !9217
  %71 = load i8*, i8** %buffer15.i, align 8, !dbg !9217
  %72 = load i32, i32* %re_index.i, align 4, !dbg !9218
  %shr16.i = lshr i32 %72, 3, !dbg !9219
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !9220
  %add.ptr18.i = getelementptr inbounds i8, i8* %71, i64 %idx.ext17.i, !dbg !9220
  %73 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !9221
  %l19.i = bitcast %union.unaligned_32* %73 to i32*, !dbg !9221
  %74 = load i32, i32* %l19.i, align 1, !dbg !9221
  store i32 %74, i32* %x.addr.i81.i, align 4, !dbg !9222
  %75 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9223
  %shl.i82.i = shl i32 %75, 8, !dbg !9224
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !9225
  %76 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9226
  %shr.i84.i = lshr i32 %76, 8, !dbg !9227
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !9228
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !9229
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !9230
  %77 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9231
  %shr3.i88.i = lshr i32 %77, 16, !dbg !9232
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !9233
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !9234
  %78 = load i32, i32* %x.addr.i81.i, align 4, !dbg !9235
  %shr6.i91.i = lshr i32 %78, 16, !dbg !9236
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !9237
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !9238
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !9239
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !9240
  %79 = load i32, i32* %re_index.i, align 4, !dbg !9241
  %and21.i = and i32 %79, 7, !dbg !9242
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !9243
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !9244
  %80 = load i32, i32* %n.i, align 4, !dbg !9245
  %sub.i = sub nsw i32 0, %80, !dbg !9246
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !9247
  %81 = load i32, i32* %re_cache.i, align 4, !dbg !9248
  %82 = load i32, i32* %nb_bits.i, align 4, !dbg !9249
  %conv23.i = trunc i32 %82 to i8, !dbg !9249
  %call24.i = call i32 @NEG_USR32(i32 %81, i8 signext %conv23.i) #9, !dbg !9250
  %83 = load i32, i32* %code.i, align 4, !dbg !9252
  %add25.i = add i32 %call24.i, %83, !dbg !9253
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !9254
  %84 = load i32, i32* %index1.i, align 4, !dbg !9255
  %idxprom26.i = zext i32 %84 to i64, !dbg !9256
  %85 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9256
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %85, i64 %idxprom26.i, !dbg !9256
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !9256
  %86 = load i16, i16* %arrayidx28.i, align 2, !dbg !9256
  %conv29.i = sext i16 %86 to i32, !dbg !9256
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !9257
  %87 = load i32, i32* %index1.i, align 4, !dbg !9258
  %idxprom30.i = zext i32 %87 to i64, !dbg !9259
  %88 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9259
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %88, i64 %idxprom30.i, !dbg !9259
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !9259
  %89 = load i16, i16* %arrayidx32.i, align 2, !dbg !9259
  %conv33.i = sext i16 %89 to i32, !dbg !9259
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !9260
  %90 = load i32, i32* %max_depth.addr.i, align 4, !dbg !9261
  %cmp34.i = icmp sgt i32 %90, 2, !dbg !9262
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !9263

land.lhs.true36.i:                                ; preds = %cond.end.i
  %91 = load i32, i32* %n.i, align 4, !dbg !9264
  %cmp37.i = icmp slt i32 %91, 0, !dbg !9266
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !9267

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %92 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9268
  %93 = load i32, i32* %re_index.i, align 4, !dbg !9270
  %94 = load i32, i32* %nb_bits.i, align 4, !dbg !9271
  %add40.i = add i32 %93, %94, !dbg !9272
  %cmp41.i = icmp ugt i32 %92, %add40.i, !dbg !9273
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !9274

cond.true43.i:                                    ; preds = %if.then39.i
  %95 = load i32, i32* %re_index.i, align 4, !dbg !9275
  %96 = load i32, i32* %nb_bits.i, align 4, !dbg !9277
  %add44.i = add i32 %95, %96, !dbg !9278
  br label %cond.end46.i, !dbg !9279

cond.false45.i:                                   ; preds = %if.then39.i
  %97 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9280
  br label %cond.end46.i, !dbg !9282

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %97, %cond.false45.i ], !dbg !9283
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !9284
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9285
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %98, i32 0, i32 0, !dbg !9286
  %99 = load i8*, i8** %buffer48.i, align 8, !dbg !9286
  %100 = load i32, i32* %re_index.i, align 4, !dbg !9287
  %shr49.i = lshr i32 %100, 3, !dbg !9288
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !9289
  %add.ptr51.i = getelementptr inbounds i8, i8* %99, i64 %idx.ext50.i, !dbg !9289
  %101 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !9290
  %l52.i = bitcast %union.unaligned_32* %101 to i32*, !dbg !9290
  %102 = load i32, i32* %l52.i, align 1, !dbg !9290
  store i32 %102, i32* %x.addr.i96.i, align 4, !dbg !9291
  %103 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9292
  %shl.i97.i = shl i32 %103, 8, !dbg !9293
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !9294
  %104 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9295
  %shr.i99.i = lshr i32 %104, 8, !dbg !9296
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !9297
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !9298
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !9299
  %105 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9300
  %shr3.i103.i = lshr i32 %105, 16, !dbg !9301
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !9302
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !9303
  %106 = load i32, i32* %x.addr.i96.i, align 4, !dbg !9304
  %shr6.i106.i = lshr i32 %106, 16, !dbg !9305
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !9306
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !9307
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !9308
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !9309
  %107 = load i32, i32* %re_index.i, align 4, !dbg !9310
  %and54.i = and i32 %107, 7, !dbg !9311
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !9312
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !9313
  %108 = load i32, i32* %n.i, align 4, !dbg !9314
  %sub56.i = sub nsw i32 0, %108, !dbg !9315
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !9316
  %109 = load i32, i32* %re_cache.i, align 4, !dbg !9317
  %110 = load i32, i32* %nb_bits.i, align 4, !dbg !9318
  %conv57.i = trunc i32 %110 to i8, !dbg !9318
  %call58.i = call i32 @NEG_USR32(i32 %109, i8 signext %conv57.i) #9, !dbg !9319
  %111 = load i32, i32* %code.i, align 4, !dbg !9321
  %add59.i = add i32 %call58.i, %111, !dbg !9322
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !9323
  %112 = load i32, i32* %index1.i, align 4, !dbg !9324
  %idxprom60.i = zext i32 %112 to i64, !dbg !9325
  %113 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9325
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %113, i64 %idxprom60.i, !dbg !9325
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !9325
  %114 = load i16, i16* %arrayidx62.i, align 2, !dbg !9325
  %conv63.i = sext i16 %114 to i32, !dbg !9325
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !9326
  %115 = load i32, i32* %index1.i, align 4, !dbg !9327
  %idxprom64.i = zext i32 %115 to i64, !dbg !9328
  %116 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !9328
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %116, i64 %idxprom64.i, !dbg !9328
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !9328
  %117 = load i16, i16* %arrayidx66.i, align 2, !dbg !9328
  %conv67.i = sext i16 %117 to i32, !dbg !9328
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !9329
  br label %if.end.i, !dbg !9330

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !9331

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.end38
  %118 = load i32, i32* %n.i, align 4, !dbg !9333
  %119 = load i32, i32* %re_cache.i, align 4, !dbg !9336
  %shl70.i = shl i32 %119, %118, !dbg !9336
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !9336
  %120 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9337
  %121 = load i32, i32* %re_index.i, align 4, !dbg !9338
  %122 = load i32, i32* %n.i, align 4, !dbg !9339
  %add71.i = add i32 %121, %122, !dbg !9340
  %cmp72.i = icmp ugt i32 %120, %add71.i, !dbg !9341
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !9342

cond.true74.i:                                    ; preds = %if.end68.i
  %123 = load i32, i32* %re_index.i, align 4, !dbg !9343
  %124 = load i32, i32* %n.i, align 4, !dbg !9345
  %add75.i = add i32 %123, %124, !dbg !9346
  br label %get_vlc2.exit, !dbg !9347

cond.false76.i:                                   ; preds = %if.end68.i
  %125 = load i32, i32* %re_size_plus8.i, align 4, !dbg !9348
  br label %get_vlc2.exit, !dbg !9350

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %125, %cond.false76.i ], !dbg !9351
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !9353
  %126 = load i32, i32* %re_index.i, align 4, !dbg !9354
  %127 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !9355
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %127, i32 0, i32 2, !dbg !9356
  store i32 %126, i32* %index80.i, align 8, !dbg !9357
  %128 = load i32, i32* %code.i, align 4, !dbg !9358
  store i32 %128, i32* %y, align 4, !dbg !9359
  %129 = load i32, i32* %y, align 4, !dbg !9360
  %tobool41 = icmp ne i32 %129, 0, !dbg !9360
  br i1 %tobool41, label %if.end51, label %if.then42, !dbg !9362

if.then42:                                        ; preds = %get_vlc2.exit
  %130 = load i32, i32* %s_index, align 4, !dbg !9363
  %add43 = add nsw i32 %130, 1, !dbg !9365
  %idxprom44 = sext i32 %add43 to i64, !dbg !9366
  %131 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9366
  %sb_hybrid45 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %131, i32 0, i32 17, !dbg !9367
  %arrayidx46 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid45, i64 0, i64 %idxprom44, !dbg !9366
  store i32 0, i32* %arrayidx46, align 4, !dbg !9368
  %132 = load i32, i32* %s_index, align 4, !dbg !9369
  %idxprom47 = sext i32 %132 to i64, !dbg !9370
  %133 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9370
  %sb_hybrid48 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %133, i32 0, i32 17, !dbg !9371
  %arrayidx49 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid48, i64 0, i64 %idxprom47, !dbg !9370
  store i32 0, i32* %arrayidx49, align 4, !dbg !9372
  %134 = load i32, i32* %s_index, align 4, !dbg !9373
  %add50 = add nsw i32 %134, 2, !dbg !9373
  store i32 %add50, i32* %s_index, align 4, !dbg !9373
  br label %for.inc, !dbg !9374

if.end51:                                         ; preds = %get_vlc2.exit
  %135 = load i32, i32* %s_index, align 4, !dbg !9375
  %idxprom52 = sext i32 %135 to i64, !dbg !9376
  %136 = load i16*, i16** %exponents.addr, align 8, !dbg !9376
  %arrayidx53 = getelementptr inbounds i16, i16* %136, i64 %idxprom52, !dbg !9376
  %137 = load i16, i16* %arrayidx53, align 2, !dbg !9376
  %conv54 = sext i16 %137 to i32, !dbg !9376
  store i32 %conv54, i32* %exponent, align 4, !dbg !9377
  br label %do.body, !dbg !9378, !llvm.loop !9379

do.body:                                          ; preds = %if.end51
  br label %do.end, !dbg !9380

do.end:                                           ; preds = %do.body
  %138 = load i32, i32* %y, align 4, !dbg !9383
  %and = and i32 %138, 16, !dbg !9384
  %tobool55 = icmp ne i32 %and, 0, !dbg !9384
  br i1 %tobool55, label %if.then56, label %if.else119, !dbg !9385

if.then56:                                        ; preds = %do.end
  %139 = load i32, i32* %y, align 4, !dbg !9386
  %shr = ashr i32 %139, 5, !dbg !9387
  store i32 %shr, i32* %x, align 4, !dbg !9388
  %140 = load i32, i32* %y, align 4, !dbg !9389
  %and57 = and i32 %140, 15, !dbg !9390
  store i32 %and57, i32* %y, align 4, !dbg !9391
  %141 = load i32, i32* %x, align 4, !dbg !9392
  %cmp58 = icmp slt i32 %141, 15, !dbg !9393
  br i1 %cmp58, label %if.then60, label %if.else, !dbg !9394

if.then60:                                        ; preds = %if.then56
  %142 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9395
  %gb61 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %142, i32 0, i32 14, !dbg !9397
  %call62 = call i32 @get_bits1(%struct.GetBitContext* %gb61), !dbg !9398
  %sub63 = sub i32 0, %call62, !dbg !9399
  store i32 %sub63, i32* %v, align 4, !dbg !9400
  %143 = load i32, i32* %exponent, align 4, !dbg !9401
  %idxprom64 = sext i32 %143 to i64, !dbg !9402
  %arrayidx65 = getelementptr inbounds [512 x [16 x i32]], [512 x [16 x i32]]* @expval_table_fixed, i64 0, i64 %idxprom64, !dbg !9402
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx65, i32 0, i32 0, !dbg !9402
  %144 = load i32, i32* %x, align 4, !dbg !9403
  %idx.ext = sext i32 %144 to i64, !dbg !9404
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %idx.ext, !dbg !9404
  %145 = load i32, i32* %add.ptr, align 4, !dbg !9405
  %146 = load i32, i32* %v, align 4, !dbg !9406
  %xor = xor i32 %145, %146, !dbg !9407
  %147 = load i32, i32* %v, align 4, !dbg !9408
  %sub66 = sub i32 %xor, %147, !dbg !9409
  %148 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9410
  %sb_hybrid67 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %148, i32 0, i32 17, !dbg !9411
  %arraydecay68 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid67, i32 0, i32 0, !dbg !9410
  %149 = load i32, i32* %s_index, align 4, !dbg !9412
  %idx.ext69 = sext i32 %149 to i64, !dbg !9413
  %add.ptr70 = getelementptr inbounds i32, i32* %arraydecay68, i64 %idx.ext69, !dbg !9413
  store i32 %sub66, i32* %add.ptr70, align 4, !dbg !9414
  br label %if.end84, !dbg !9415

if.else:                                          ; preds = %if.then56
  %150 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9416
  %gb71 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %150, i32 0, i32 14, !dbg !9417
  %151 = load i32, i32* %linbits, align 4, !dbg !9418
  store %struct.GetBitContext* %gb71, %struct.GetBitContext** %s.addr.i286, align 8, !dbg !9419
  store i32 %151, i32* %n.addr.i, align 4, !dbg !9419
  %152 = load i32, i32* %n.addr.i, align 4, !dbg !9420
  %tobool.i = icmp ne i32 %152, 0, !dbg !9420
  br i1 %tobool.i, label %cond.true.i287, label %cond.false.i288, !dbg !9420

cond.true.i287:                                   ; preds = %if.else
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i286, align 8, !dbg !9421
  %154 = load i32, i32* %n.addr.i, align 4, !dbg !9423
  %call.i = call i32 @get_bits(%struct.GetBitContext* %153, i32 %154) #9, !dbg !9424
  br label %get_bitsz.exit, !dbg !9425

cond.false.i288:                                  ; preds = %if.else
  br label %get_bitsz.exit, !dbg !9426

get_bitsz.exit:                                   ; preds = %cond.true.i287, %cond.false.i288
  %cond.i289 = phi i32 [ %call.i, %cond.true.i287 ], [ 0, %cond.false.i288 ], !dbg !9428
  %155 = load i32, i32* %x, align 4, !dbg !9430
  %add73 = add nsw i32 %155, %cond.i289, !dbg !9430
  store i32 %add73, i32* %x, align 4, !dbg !9430
  %156 = load i32, i32* %x, align 4, !dbg !9431
  %157 = load i32, i32* %exponent, align 4, !dbg !9432
  %call74 = call i32 @l3_unscale(i32 %156, i32 %157), !dbg !9433
  store i32 %call74, i32* %v, align 4, !dbg !9434
  %158 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9435
  %gb75 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %158, i32 0, i32 14, !dbg !9437
  %call76 = call i32 @get_bits1(%struct.GetBitContext* %gb75), !dbg !9438
  %tobool77 = icmp ne i32 %call76, 0, !dbg !9438
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !9439

if.then78:                                        ; preds = %get_bitsz.exit
  %159 = load i32, i32* %v, align 4, !dbg !9440
  %sub79 = sub nsw i32 0, %159, !dbg !9441
  store i32 %sub79, i32* %v, align 4, !dbg !9442
  br label %if.end80, !dbg !9443

if.end80:                                         ; preds = %if.then78, %get_bitsz.exit
  %160 = load i32, i32* %v, align 4, !dbg !9444
  %161 = load i32, i32* %s_index, align 4, !dbg !9445
  %idxprom81 = sext i32 %161 to i64, !dbg !9446
  %162 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9446
  %sb_hybrid82 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %162, i32 0, i32 17, !dbg !9447
  %arrayidx83 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid82, i64 0, i64 %idxprom81, !dbg !9446
  store i32 %160, i32* %arrayidx83, align 4, !dbg !9448
  br label %if.end84

if.end84:                                         ; preds = %if.end80, %if.then60
  %163 = load i32, i32* %y, align 4, !dbg !9449
  %cmp85 = icmp slt i32 %163, 15, !dbg !9450
  br i1 %cmp85, label %if.then87, label %if.else103, !dbg !9451

if.then87:                                        ; preds = %if.end84
  %164 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9452
  %gb88 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %164, i32 0, i32 14, !dbg !9454
  %call89 = call i32 @get_bits1(%struct.GetBitContext* %gb88), !dbg !9455
  %sub90 = sub i32 0, %call89, !dbg !9456
  store i32 %sub90, i32* %v, align 4, !dbg !9457
  %165 = load i32, i32* %exponent, align 4, !dbg !9458
  %idxprom91 = sext i32 %165 to i64, !dbg !9459
  %arrayidx92 = getelementptr inbounds [512 x [16 x i32]], [512 x [16 x i32]]* @expval_table_fixed, i64 0, i64 %idxprom91, !dbg !9459
  %arraydecay93 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx92, i32 0, i32 0, !dbg !9459
  %166 = load i32, i32* %y, align 4, !dbg !9460
  %idx.ext94 = sext i32 %166 to i64, !dbg !9461
  %add.ptr95 = getelementptr inbounds i32, i32* %arraydecay93, i64 %idx.ext94, !dbg !9461
  %167 = load i32, i32* %add.ptr95, align 4, !dbg !9462
  %168 = load i32, i32* %v, align 4, !dbg !9463
  %xor96 = xor i32 %167, %168, !dbg !9464
  %169 = load i32, i32* %v, align 4, !dbg !9465
  %sub97 = sub i32 %xor96, %169, !dbg !9466
  %170 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9467
  %sb_hybrid98 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %170, i32 0, i32 17, !dbg !9468
  %arraydecay99 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid98, i32 0, i32 0, !dbg !9467
  %171 = load i32, i32* %s_index, align 4, !dbg !9469
  %idx.ext100 = sext i32 %171 to i64, !dbg !9470
  %add.ptr101 = getelementptr inbounds i32, i32* %arraydecay99, i64 %idx.ext100, !dbg !9470
  %add.ptr102 = getelementptr inbounds i32, i32* %add.ptr101, i64 1, !dbg !9471
  store i32 %sub97, i32* %add.ptr102, align 4, !dbg !9472
  br label %if.end118, !dbg !9473

if.else103:                                       ; preds = %if.end84
  %172 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9474
  %gb104 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %172, i32 0, i32 14, !dbg !9475
  %173 = load i32, i32* %linbits, align 4, !dbg !9476
  store %struct.GetBitContext* %gb104, %struct.GetBitContext** %s.addr.i291, align 8, !dbg !9477
  store i32 %173, i32* %n.addr.i292, align 4, !dbg !9477
  %174 = load i32, i32* %n.addr.i292, align 4, !dbg !9478
  %tobool.i293 = icmp ne i32 %174, 0, !dbg !9478
  br i1 %tobool.i293, label %cond.true.i295, label %cond.false.i296, !dbg !9478

cond.true.i295:                                   ; preds = %if.else103
  %175 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i291, align 8, !dbg !9479
  %176 = load i32, i32* %n.addr.i292, align 4, !dbg !9480
  %call.i294 = call i32 @get_bits(%struct.GetBitContext* %175, i32 %176) #9, !dbg !9481
  br label %get_bitsz.exit299, !dbg !9482

cond.false.i296:                                  ; preds = %if.else103
  br label %get_bitsz.exit299, !dbg !9483

get_bitsz.exit299:                                ; preds = %cond.true.i295, %cond.false.i296
  %cond.i297 = phi i32 [ %call.i294, %cond.true.i295 ], [ 0, %cond.false.i296 ], !dbg !9484
  %177 = load i32, i32* %y, align 4, !dbg !9485
  %add106 = add nsw i32 %177, %cond.i297, !dbg !9485
  store i32 %add106, i32* %y, align 4, !dbg !9485
  %178 = load i32, i32* %y, align 4, !dbg !9486
  %179 = load i32, i32* %exponent, align 4, !dbg !9487
  %call107 = call i32 @l3_unscale(i32 %178, i32 %179), !dbg !9488
  store i32 %call107, i32* %v, align 4, !dbg !9489
  %180 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9490
  %gb108 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %180, i32 0, i32 14, !dbg !9492
  %call109 = call i32 @get_bits1(%struct.GetBitContext* %gb108), !dbg !9493
  %tobool110 = icmp ne i32 %call109, 0, !dbg !9493
  br i1 %tobool110, label %if.then111, label %if.end113, !dbg !9494

if.then111:                                       ; preds = %get_bitsz.exit299
  %181 = load i32, i32* %v, align 4, !dbg !9495
  %sub112 = sub nsw i32 0, %181, !dbg !9496
  store i32 %sub112, i32* %v, align 4, !dbg !9497
  br label %if.end113, !dbg !9498

if.end113:                                        ; preds = %if.then111, %get_bitsz.exit299
  %182 = load i32, i32* %v, align 4, !dbg !9499
  %183 = load i32, i32* %s_index, align 4, !dbg !9500
  %add114 = add nsw i32 %183, 1, !dbg !9501
  %idxprom115 = sext i32 %add114 to i64, !dbg !9502
  %184 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9502
  %sb_hybrid116 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %184, i32 0, i32 17, !dbg !9503
  %arrayidx117 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid116, i64 0, i64 %idxprom115, !dbg !9502
  store i32 %182, i32* %arrayidx117, align 4, !dbg !9504
  br label %if.end118

if.end118:                                        ; preds = %if.end113, %if.then87
  br label %if.end172, !dbg !9505

if.else119:                                       ; preds = %do.end
  %185 = load i32, i32* %y, align 4, !dbg !9506
  %shr120 = ashr i32 %185, 5, !dbg !9507
  store i32 %shr120, i32* %x, align 4, !dbg !9508
  %186 = load i32, i32* %y, align 4, !dbg !9509
  %and121 = and i32 %186, 15, !dbg !9510
  store i32 %and121, i32* %y, align 4, !dbg !9511
  %187 = load i32, i32* %y, align 4, !dbg !9512
  %188 = load i32, i32* %x, align 4, !dbg !9513
  %add122 = add nsw i32 %188, %187, !dbg !9513
  store i32 %add122, i32* %x, align 4, !dbg !9513
  %189 = load i32, i32* %x, align 4, !dbg !9514
  %cmp123 = icmp slt i32 %189, 15, !dbg !9515
  br i1 %cmp123, label %if.then125, label %if.else144, !dbg !9516

if.then125:                                       ; preds = %if.else119
  %190 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9517
  %gb126 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %190, i32 0, i32 14, !dbg !9519
  %call127 = call i32 @get_bits1(%struct.GetBitContext* %gb126), !dbg !9520
  %sub128 = sub i32 0, %call127, !dbg !9521
  store i32 %sub128, i32* %v, align 4, !dbg !9522
  %191 = load i32, i32* %exponent, align 4, !dbg !9523
  %idxprom129 = sext i32 %191 to i64, !dbg !9524
  %arrayidx130 = getelementptr inbounds [512 x [16 x i32]], [512 x [16 x i32]]* @expval_table_fixed, i64 0, i64 %idxprom129, !dbg !9524
  %arraydecay131 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx130, i32 0, i32 0, !dbg !9524
  %192 = load i32, i32* %x, align 4, !dbg !9525
  %idx.ext132 = sext i32 %192 to i64, !dbg !9526
  %add.ptr133 = getelementptr inbounds i32, i32* %arraydecay131, i64 %idx.ext132, !dbg !9526
  %193 = load i32, i32* %add.ptr133, align 4, !dbg !9527
  %194 = load i32, i32* %v, align 4, !dbg !9528
  %xor134 = xor i32 %193, %194, !dbg !9529
  %195 = load i32, i32* %v, align 4, !dbg !9530
  %sub135 = sub i32 %xor134, %195, !dbg !9531
  %196 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9532
  %sb_hybrid136 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %196, i32 0, i32 17, !dbg !9533
  %arraydecay137 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid136, i32 0, i32 0, !dbg !9532
  %197 = load i32, i32* %s_index, align 4, !dbg !9534
  %idx.ext138 = sext i32 %197 to i64, !dbg !9535
  %add.ptr139 = getelementptr inbounds i32, i32* %arraydecay137, i64 %idx.ext138, !dbg !9535
  %198 = load i32, i32* %y, align 4, !dbg !9536
  %tobool140 = icmp ne i32 %198, 0, !dbg !9537
  %lnot = xor i1 %tobool140, true, !dbg !9537
  %lnot141 = xor i1 %lnot, true, !dbg !9538
  %lnot.ext = zext i1 %lnot141 to i32, !dbg !9538
  %idx.ext142 = sext i32 %lnot.ext to i64, !dbg !9539
  %add.ptr143 = getelementptr inbounds i32, i32* %add.ptr139, i64 %idx.ext142, !dbg !9539
  store i32 %sub135, i32* %add.ptr143, align 4, !dbg !9540
  br label %if.end164, !dbg !9541

if.else144:                                       ; preds = %if.else119
  %199 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9542
  %gb145 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %199, i32 0, i32 14, !dbg !9543
  %200 = load i32, i32* %linbits, align 4, !dbg !9544
  store %struct.GetBitContext* %gb145, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !9545
  store i32 %200, i32* %n.addr.i301, align 4, !dbg !9545
  %201 = load i32, i32* %n.addr.i301, align 4, !dbg !9546
  %tobool.i302 = icmp ne i32 %201, 0, !dbg !9546
  br i1 %tobool.i302, label %cond.true.i304, label %cond.false.i305, !dbg !9546

cond.true.i304:                                   ; preds = %if.else144
  %202 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i300, align 8, !dbg !9547
  %203 = load i32, i32* %n.addr.i301, align 4, !dbg !9548
  %call.i303 = call i32 @get_bits(%struct.GetBitContext* %202, i32 %203) #9, !dbg !9549
  br label %get_bitsz.exit308, !dbg !9550

cond.false.i305:                                  ; preds = %if.else144
  br label %get_bitsz.exit308, !dbg !9551

get_bitsz.exit308:                                ; preds = %cond.true.i304, %cond.false.i305
  %cond.i306 = phi i32 [ %call.i303, %cond.true.i304 ], [ 0, %cond.false.i305 ], !dbg !9552
  %204 = load i32, i32* %x, align 4, !dbg !9553
  %add147 = add nsw i32 %204, %cond.i306, !dbg !9553
  store i32 %add147, i32* %x, align 4, !dbg !9553
  %205 = load i32, i32* %x, align 4, !dbg !9554
  %206 = load i32, i32* %exponent, align 4, !dbg !9555
  %call148 = call i32 @l3_unscale(i32 %205, i32 %206), !dbg !9556
  store i32 %call148, i32* %v, align 4, !dbg !9557
  %207 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9558
  %gb149 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %207, i32 0, i32 14, !dbg !9560
  %call150 = call i32 @get_bits1(%struct.GetBitContext* %gb149), !dbg !9561
  %tobool151 = icmp ne i32 %call150, 0, !dbg !9561
  br i1 %tobool151, label %if.then152, label %if.end154, !dbg !9562

if.then152:                                       ; preds = %get_bitsz.exit308
  %208 = load i32, i32* %v, align 4, !dbg !9563
  %sub153 = sub nsw i32 0, %208, !dbg !9564
  store i32 %sub153, i32* %v, align 4, !dbg !9565
  br label %if.end154, !dbg !9566

if.end154:                                        ; preds = %if.then152, %get_bitsz.exit308
  %209 = load i32, i32* %v, align 4, !dbg !9567
  %210 = load i32, i32* %s_index, align 4, !dbg !9568
  %211 = load i32, i32* %y, align 4, !dbg !9569
  %tobool155 = icmp ne i32 %211, 0, !dbg !9570
  %lnot156 = xor i1 %tobool155, true, !dbg !9570
  %lnot158 = xor i1 %lnot156, true, !dbg !9571
  %lnot.ext159 = zext i1 %lnot158 to i32, !dbg !9571
  %add160 = add nsw i32 %210, %lnot.ext159, !dbg !9572
  %idxprom161 = sext i32 %add160 to i64, !dbg !9573
  %212 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9573
  %sb_hybrid162 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %212, i32 0, i32 17, !dbg !9574
  %arrayidx163 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid162, i64 0, i64 %idxprom161, !dbg !9573
  store i32 %209, i32* %arrayidx163, align 4, !dbg !9575
  br label %if.end164

if.end164:                                        ; preds = %if.end154, %if.then125
  %213 = load i32, i32* %s_index, align 4, !dbg !9576
  %214 = load i32, i32* %y, align 4, !dbg !9577
  %tobool165 = icmp ne i32 %214, 0, !dbg !9578
  %lnot166 = xor i1 %tobool165, true, !dbg !9578
  %lnot.ext167 = zext i1 %lnot166 to i32, !dbg !9578
  %add168 = add nsw i32 %213, %lnot.ext167, !dbg !9579
  %idxprom169 = sext i32 %add168 to i64, !dbg !9580
  %215 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9580
  %sb_hybrid170 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %215, i32 0, i32 17, !dbg !9581
  %arrayidx171 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid170, i64 0, i64 %idxprom169, !dbg !9580
  store i32 0, i32* %arrayidx171, align 4, !dbg !9582
  br label %if.end172

if.end172:                                        ; preds = %if.end164, %if.end118
  %216 = load i32, i32* %s_index, align 4, !dbg !9583
  %add173 = add nsw i32 %216, 2, !dbg !9583
  store i32 %add173, i32* %s_index, align 4, !dbg !9583
  br label %for.inc, !dbg !9584

for.inc:                                          ; preds = %if.end172, %if.then42
  %217 = load i32, i32* %j, align 4, !dbg !9585
  %dec = add nsw i32 %217, -1, !dbg !9585
  store i32 %dec, i32* %j, align 4, !dbg !9585
  br label %for.cond26, !dbg !9587, !llvm.loop !9588

for.end:                                          ; preds = %if.then36, %for.cond26
  br label %for.inc174, !dbg !9589

for.inc174:                                       ; preds = %for.end, %if.then19, %if.then
  %218 = load i32, i32* %i, align 4, !dbg !9590
  %inc = add nsw i32 %218, 1, !dbg !9590
  store i32 %inc, i32* %i, align 4, !dbg !9590
  br label %for.cond, !dbg !9592, !llvm.loop !9593

for.end175:                                       ; preds = %for.cond
  %219 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9595
  %count1table_select = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %219, i32 0, i32 10, !dbg !9596
  %220 = load i8, i8* %count1table_select, align 1, !dbg !9596
  %idxprom176 = zext i8 %220 to i64, !dbg !9597
  %arrayidx177 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @huff_quad_vlc, i64 0, i64 %idxprom176, !dbg !9597
  store %struct.VLC* %arrayidx177, %struct.VLC** %vlc, align 8, !dbg !9598
  store i32 0, i32* %last_pos, align 4, !dbg !9599
  br label %while.cond, !dbg !9600

while.cond:                                       ; preds = %while.end, %for.end175
  %221 = load i32, i32* %s_index, align 4, !dbg !9601
  %cmp178 = icmp sle i32 %221, 572, !dbg !9602
  br i1 %cmp178, label %while.body, label %while.end254, !dbg !9603

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %pos180, metadata !9604, metadata !2019), !dbg !9605
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9606, metadata !2019), !dbg !9607
  %222 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9608
  %gb181 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %222, i32 0, i32 14, !dbg !9609
  %call182 = call i32 @get_bits_count(%struct.GetBitContext* %gb181), !dbg !9610
  store i32 %call182, i32* %pos180, align 4, !dbg !9611
  %223 = load i32, i32* %pos180, align 4, !dbg !9612
  %224 = load i32, i32* %end_pos, align 4, !dbg !9614
  %cmp183 = icmp sge i32 %223, %224, !dbg !9615
  br i1 %cmp183, label %if.then185, label %if.end205, !dbg !9616

if.then185:                                       ; preds = %while.body
  %225 = load i32, i32* %pos180, align 4, !dbg !9617
  %226 = load i32, i32* %end_pos2.addr, align 4, !dbg !9620
  %cmp186 = icmp sgt i32 %225, %226, !dbg !9621
  br i1 %cmp186, label %land.lhs.true, label %if.end200, !dbg !9622

land.lhs.true:                                    ; preds = %if.then185
  %227 = load i32, i32* %last_pos, align 4, !dbg !9623
  %tobool188 = icmp ne i32 %227, 0, !dbg !9623
  br i1 %tobool188, label %if.then189, label %if.end200, !dbg !9625

if.then189:                                       ; preds = %land.lhs.true
  %228 = load i32, i32* %s_index, align 4, !dbg !9626
  %sub190 = sub nsw i32 %228, 4, !dbg !9626
  store i32 %sub190, i32* %s_index, align 4, !dbg !9626
  %229 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9628
  %gb191 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %229, i32 0, i32 14, !dbg !9629
  %230 = load i32, i32* %last_pos, align 4, !dbg !9630
  %231 = load i32, i32* %pos180, align 4, !dbg !9631
  %sub192 = sub nsw i32 %230, %231, !dbg !9632
  call void @skip_bits_long(%struct.GetBitContext* %gb191, i32 %sub192), !dbg !9633
  %232 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9634
  %avctx = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %232, i32 0, i32 26, !dbg !9635
  %233 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !9635
  %234 = bitcast %struct.AVCodecContext* %233 to i8*, !dbg !9634
  %235 = load i32, i32* %last_pos, align 4, !dbg !9636
  %236 = load i32, i32* %pos180, align 4, !dbg !9637
  %sub193 = sub nsw i32 %235, %236, !dbg !9638
  %237 = load i32, i32* %end_pos, align 4, !dbg !9639
  %238 = load i32, i32* %pos180, align 4, !dbg !9640
  %sub194 = sub nsw i32 %237, %238, !dbg !9641
  %239 = load i32, i32* %end_pos2.addr, align 4, !dbg !9642
  %240 = load i32, i32* %pos180, align 4, !dbg !9643
  %sub195 = sub nsw i32 %239, %240, !dbg !9644
  call void (i8*, i32, i8*, ...) @av_log(i8* %234, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 %sub193, i32 %sub194, i32 %sub195), !dbg !9645
  %241 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9646
  %err_recognition = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %241, i32 0, i32 25, !dbg !9648
  %242 = load i32, i32* %err_recognition, align 8, !dbg !9648
  %and196 = and i32 %242, 131074, !dbg !9649
  %tobool197 = icmp ne i32 %and196, 0, !dbg !9649
  br i1 %tobool197, label %if.then198, label %if.end199, !dbg !9650

if.then198:                                       ; preds = %if.then189
  store i32 0, i32* %s_index, align 4, !dbg !9651
  br label %if.end199, !dbg !9652

if.end199:                                        ; preds = %if.then198, %if.then189
  br label %while.end254, !dbg !9653

if.end200:                                        ; preds = %land.lhs.true, %if.then185
  %243 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9654
  call void @switch_buffer(%struct.MPADecodeContext* %243, i32* %pos180, i32* %end_pos, i32* %end_pos2.addr), !dbg !9655
  %244 = load i32, i32* %pos180, align 4, !dbg !9656
  %245 = load i32, i32* %end_pos, align 4, !dbg !9658
  %cmp201 = icmp sge i32 %244, %245, !dbg !9659
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !9660

if.then203:                                       ; preds = %if.end200
  br label %while.end254, !dbg !9661

if.end204:                                        ; preds = %if.end200
  br label %if.end205, !dbg !9662

if.end205:                                        ; preds = %if.end204, %while.body
  %246 = load i32, i32* %pos180, align 4, !dbg !9663
  store i32 %246, i32* %last_pos, align 4, !dbg !9664
  %247 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9665
  %gb206 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %247, i32 0, i32 14, !dbg !9666
  %248 = load %struct.VLC*, %struct.VLC** %vlc, align 8, !dbg !9667
  %table207 = getelementptr inbounds %struct.VLC, %struct.VLC* %248, i32 0, i32 1, !dbg !9668
  %249 = load [2 x i16]*, [2 x i16]** %table207, align 8, !dbg !9668
  %250 = load %struct.VLC*, %struct.VLC** %vlc, align 8, !dbg !9669
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %250, i32 0, i32 0, !dbg !9670
  %251 = load i32, i32* %bits, align 8, !dbg !9670
  store %struct.GetBitContext* %gb206, %struct.GetBitContext** %s.addr.i312, align 8, !dbg !9671
  store [2 x i16]* %249, [2 x i16]** %table.addr.i313, align 8, !dbg !9671
  store i32 %251, i32* %bits.addr.i314, align 4, !dbg !9671
  store i32 1, i32* %max_depth.addr.i315, align 4, !dbg !9671
  %252 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i312, align 8, !dbg !9672
  %index.i323 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %252, i32 0, i32 2, !dbg !9673
  %253 = load i32, i32* %index.i323, align 8, !dbg !9673
  store i32 %253, i32* %re_index.i317, align 4, !dbg !8955
  %254 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i312, align 8, !dbg !9674
  %size_in_bits_plus8.i324 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %254, i32 0, i32 4, !dbg !9675
  %255 = load i32, i32* %size_in_bits_plus8.i324, align 8, !dbg !9675
  store i32 %255, i32* %re_size_plus8.i319, align 4, !dbg !8959
  %256 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i312, align 8, !dbg !9676
  %buffer.i325 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %256, i32 0, i32 0, !dbg !9677
  %257 = load i8*, i8** %buffer.i325, align 8, !dbg !9677
  %258 = load i32, i32* %re_index.i317, align 4, !dbg !9678
  %shr.i326 = lshr i32 %258, 3, !dbg !9679
  %idx.ext.i327 = zext i32 %shr.i326 to i64, !dbg !9680
  %add.ptr.i328 = getelementptr inbounds i8, i8* %257, i64 %idx.ext.i327, !dbg !9680
  %259 = bitcast i8* %add.ptr.i328 to %union.unaligned_32*, !dbg !9681
  %l.i329 = bitcast %union.unaligned_32* %259 to i32*, !dbg !9681
  %260 = load i32, i32* %l.i329, align 1, !dbg !9681
  store i32 %260, i32* %x.addr.i.i311, align 4, !dbg !9682
  %261 = load i32, i32* %x.addr.i.i311, align 4, !dbg !9683
  %shl.i.i330 = shl i32 %261, 8, !dbg !9684
  %and.i.i331 = and i32 %shl.i.i330, 65280, !dbg !9685
  %262 = load i32, i32* %x.addr.i.i311, align 4, !dbg !9686
  %shr.i.i332 = lshr i32 %262, 8, !dbg !9687
  %and1.i.i333 = and i32 %shr.i.i332, 255, !dbg !9688
  %or.i.i334 = or i32 %and.i.i331, %and1.i.i333, !dbg !9689
  %shl2.i.i335 = shl i32 %or.i.i334, 16, !dbg !9690
  %263 = load i32, i32* %x.addr.i.i311, align 4, !dbg !9691
  %shr3.i.i336 = lshr i32 %263, 16, !dbg !9692
  %shl4.i.i337 = shl i32 %shr3.i.i336, 8, !dbg !9693
  %and5.i.i338 = and i32 %shl4.i.i337, 65280, !dbg !9694
  %264 = load i32, i32* %x.addr.i.i311, align 4, !dbg !9695
  %shr6.i.i339 = lshr i32 %264, 16, !dbg !9696
  %shr7.i.i340 = lshr i32 %shr6.i.i339, 8, !dbg !9697
  %and8.i.i341 = and i32 %shr7.i.i340, 255, !dbg !9698
  %or9.i.i342 = or i32 %and5.i.i338, %and8.i.i341, !dbg !9699
  %or10.i.i343 = or i32 %shl2.i.i335, %or9.i.i342, !dbg !9700
  %265 = load i32, i32* %re_index.i317, align 4, !dbg !9701
  %and.i344 = and i32 %265, 7, !dbg !9702
  %shl.i345 = shl i32 %or10.i.i343, %and.i344, !dbg !9703
  store i32 %shl.i345, i32* %re_cache.i318, align 4, !dbg !9704
  %266 = load i32, i32* %re_cache.i318, align 4, !dbg !9705
  %267 = load i32, i32* %bits.addr.i314, align 4, !dbg !9706
  %conv.i346 = trunc i32 %267 to i8, !dbg !9706
  %call2.i347 = call i32 @NEG_USR32(i32 %266, i8 signext %conv.i346) #9, !dbg !9707
  store i32 %call2.i347, i32* %index1.i322, align 4, !dbg !9708
  %268 = load i32, i32* %index1.i322, align 4, !dbg !9709
  %idxprom.i348 = zext i32 %268 to i64, !dbg !9710
  %269 = load [2 x i16]*, [2 x i16]** %table.addr.i313, align 8, !dbg !9710
  %arrayidx.i349 = getelementptr inbounds [2 x i16], [2 x i16]* %269, i64 %idxprom.i348, !dbg !9710
  %arrayidx3.i350 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i349, i64 0, i64 0, !dbg !9710
  %270 = load i16, i16* %arrayidx3.i350, align 2, !dbg !9710
  %conv4.i351 = sext i16 %270 to i32, !dbg !9710
  store i32 %conv4.i351, i32* %code.i316, align 4, !dbg !9711
  %271 = load i32, i32* %index1.i322, align 4, !dbg !9712
  %idxprom5.i352 = zext i32 %271 to i64, !dbg !9713
  %272 = load [2 x i16]*, [2 x i16]** %table.addr.i313, align 8, !dbg !9713
  %arrayidx6.i353 = getelementptr inbounds [2 x i16], [2 x i16]* %272, i64 %idxprom5.i352, !dbg !9713
  %arrayidx7.i354 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i353, i64 0, i64 1, !dbg !9713
  %273 = load i16, i16* %arrayidx7.i354, align 2, !dbg !9713
  %conv8.i355 = sext i16 %273 to i32, !dbg !9713
  store i32 %conv8.i355, i32* %n.i320, align 4, !dbg !9714
  %274 = load i32, i32* %max_depth.addr.i315, align 4, !dbg !9715
  %cmp.i356 = icmp sgt i32 %274, 1, !dbg !9716
  br i1 %cmp.i356, label %land.lhs.true.i358, label %if.end68.i445, !dbg !9717

land.lhs.true.i358:                               ; preds = %if.end205
  %275 = load i32, i32* %n.i320, align 4, !dbg !9718
  %cmp10.i357 = icmp slt i32 %275, 0, !dbg !9719
  br i1 %cmp10.i357, label %if.then.i361, label %if.end68.i445, !dbg !9720

if.then.i361:                                     ; preds = %land.lhs.true.i358
  %276 = load i32, i32* %re_size_plus8.i319, align 4, !dbg !9721
  %277 = load i32, i32* %re_index.i317, align 4, !dbg !9722
  %278 = load i32, i32* %bits.addr.i314, align 4, !dbg !9723
  %add.i359 = add i32 %277, %278, !dbg !9724
  %cmp12.i360 = icmp ugt i32 %276, %add.i359, !dbg !9725
  br i1 %cmp12.i360, label %cond.true.i363, label %cond.false.i364, !dbg !9726

cond.true.i363:                                   ; preds = %if.then.i361
  %279 = load i32, i32* %re_index.i317, align 4, !dbg !9727
  %280 = load i32, i32* %bits.addr.i314, align 4, !dbg !9728
  %add14.i362 = add i32 %279, %280, !dbg !9729
  br label %cond.end.i400, !dbg !9730

cond.false.i364:                                  ; preds = %if.then.i361
  %281 = load i32, i32* %re_size_plus8.i319, align 4, !dbg !9731
  br label %cond.end.i400, !dbg !9732

cond.end.i400:                                    ; preds = %cond.false.i364, %cond.true.i363
  %cond.i365 = phi i32 [ %add14.i362, %cond.true.i363 ], [ %281, %cond.false.i364 ], !dbg !9733
  store i32 %cond.i365, i32* %re_index.i317, align 4, !dbg !9734
  %282 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i312, align 8, !dbg !9735
  %buffer15.i366 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %282, i32 0, i32 0, !dbg !9736
  %283 = load i8*, i8** %buffer15.i366, align 8, !dbg !9736
  %284 = load i32, i32* %re_index.i317, align 4, !dbg !9737
  %shr16.i367 = lshr i32 %284, 3, !dbg !9738
  %idx.ext17.i368 = zext i32 %shr16.i367 to i64, !dbg !9739
  %add.ptr18.i369 = getelementptr inbounds i8, i8* %283, i64 %idx.ext17.i368, !dbg !9739
  %285 = bitcast i8* %add.ptr18.i369 to %union.unaligned_32*, !dbg !9740
  %l19.i370 = bitcast %union.unaligned_32* %285 to i32*, !dbg !9740
  %286 = load i32, i32* %l19.i370, align 1, !dbg !9740
  store i32 %286, i32* %x.addr.i81.i310, align 4, !dbg !9741
  %287 = load i32, i32* %x.addr.i81.i310, align 4, !dbg !9742
  %shl.i82.i371 = shl i32 %287, 8, !dbg !9743
  %and.i83.i372 = and i32 %shl.i82.i371, 65280, !dbg !9744
  %288 = load i32, i32* %x.addr.i81.i310, align 4, !dbg !9745
  %shr.i84.i373 = lshr i32 %288, 8, !dbg !9746
  %and1.i85.i374 = and i32 %shr.i84.i373, 255, !dbg !9747
  %or.i86.i375 = or i32 %and.i83.i372, %and1.i85.i374, !dbg !9748
  %shl2.i87.i376 = shl i32 %or.i86.i375, 16, !dbg !9749
  %289 = load i32, i32* %x.addr.i81.i310, align 4, !dbg !9750
  %shr3.i88.i377 = lshr i32 %289, 16, !dbg !9751
  %shl4.i89.i378 = shl i32 %shr3.i88.i377, 8, !dbg !9752
  %and5.i90.i379 = and i32 %shl4.i89.i378, 65280, !dbg !9753
  %290 = load i32, i32* %x.addr.i81.i310, align 4, !dbg !9754
  %shr6.i91.i380 = lshr i32 %290, 16, !dbg !9755
  %shr7.i92.i381 = lshr i32 %shr6.i91.i380, 8, !dbg !9756
  %and8.i93.i382 = and i32 %shr7.i92.i381, 255, !dbg !9757
  %or9.i94.i383 = or i32 %and5.i90.i379, %and8.i93.i382, !dbg !9758
  %or10.i95.i384 = or i32 %shl2.i87.i376, %or9.i94.i383, !dbg !9759
  %291 = load i32, i32* %re_index.i317, align 4, !dbg !9760
  %and21.i385 = and i32 %291, 7, !dbg !9761
  %shl22.i386 = shl i32 %or10.i95.i384, %and21.i385, !dbg !9762
  store i32 %shl22.i386, i32* %re_cache.i318, align 4, !dbg !9763
  %292 = load i32, i32* %n.i320, align 4, !dbg !9764
  %sub.i387 = sub nsw i32 0, %292, !dbg !9765
  store i32 %sub.i387, i32* %nb_bits.i321, align 4, !dbg !9766
  %293 = load i32, i32* %re_cache.i318, align 4, !dbg !9767
  %294 = load i32, i32* %nb_bits.i321, align 4, !dbg !9768
  %conv23.i388 = trunc i32 %294 to i8, !dbg !9768
  %call24.i389 = call i32 @NEG_USR32(i32 %293, i8 signext %conv23.i388) #9, !dbg !9769
  %295 = load i32, i32* %code.i316, align 4, !dbg !9770
  %add25.i390 = add i32 %call24.i389, %295, !dbg !9771
  store i32 %add25.i390, i32* %index1.i322, align 4, !dbg !9772
  %296 = load i32, i32* %index1.i322, align 4, !dbg !9773
  %idxprom26.i391 = zext i32 %296 to i64, !dbg !9774
  %297 = load [2 x i16]*, [2 x i16]** %table.addr.i313, align 8, !dbg !9774
  %arrayidx27.i392 = getelementptr inbounds [2 x i16], [2 x i16]* %297, i64 %idxprom26.i391, !dbg !9774
  %arrayidx28.i393 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i392, i64 0, i64 0, !dbg !9774
  %298 = load i16, i16* %arrayidx28.i393, align 2, !dbg !9774
  %conv29.i394 = sext i16 %298 to i32, !dbg !9774
  store i32 %conv29.i394, i32* %code.i316, align 4, !dbg !9775
  %299 = load i32, i32* %index1.i322, align 4, !dbg !9776
  %idxprom30.i395 = zext i32 %299 to i64, !dbg !9777
  %300 = load [2 x i16]*, [2 x i16]** %table.addr.i313, align 8, !dbg !9777
  %arrayidx31.i396 = getelementptr inbounds [2 x i16], [2 x i16]* %300, i64 %idxprom30.i395, !dbg !9777
  %arrayidx32.i397 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i396, i64 0, i64 1, !dbg !9777
  %301 = load i16, i16* %arrayidx32.i397, align 2, !dbg !9777
  %conv33.i398 = sext i16 %301 to i32, !dbg !9777
  store i32 %conv33.i398, i32* %n.i320, align 4, !dbg !9778
  %302 = load i32, i32* %max_depth.addr.i315, align 4, !dbg !9779
  %cmp34.i399 = icmp sgt i32 %302, 2, !dbg !9780
  br i1 %cmp34.i399, label %land.lhs.true36.i402, label %if.end.i444, !dbg !9781

land.lhs.true36.i402:                             ; preds = %cond.end.i400
  %303 = load i32, i32* %n.i320, align 4, !dbg !9782
  %cmp37.i401 = icmp slt i32 %303, 0, !dbg !9783
  br i1 %cmp37.i401, label %if.then39.i405, label %if.end.i444, !dbg !9784

if.then39.i405:                                   ; preds = %land.lhs.true36.i402
  %304 = load i32, i32* %re_size_plus8.i319, align 4, !dbg !9785
  %305 = load i32, i32* %re_index.i317, align 4, !dbg !9786
  %306 = load i32, i32* %nb_bits.i321, align 4, !dbg !9787
  %add40.i403 = add i32 %305, %306, !dbg !9788
  %cmp41.i404 = icmp ugt i32 %304, %add40.i403, !dbg !9789
  br i1 %cmp41.i404, label %cond.true43.i407, label %cond.false45.i408, !dbg !9790

cond.true43.i407:                                 ; preds = %if.then39.i405
  %307 = load i32, i32* %re_index.i317, align 4, !dbg !9791
  %308 = load i32, i32* %nb_bits.i321, align 4, !dbg !9792
  %add44.i406 = add i32 %307, %308, !dbg !9793
  br label %cond.end46.i443, !dbg !9794

cond.false45.i408:                                ; preds = %if.then39.i405
  %309 = load i32, i32* %re_size_plus8.i319, align 4, !dbg !9795
  br label %cond.end46.i443, !dbg !9796

cond.end46.i443:                                  ; preds = %cond.false45.i408, %cond.true43.i407
  %cond47.i409 = phi i32 [ %add44.i406, %cond.true43.i407 ], [ %309, %cond.false45.i408 ], !dbg !9797
  store i32 %cond47.i409, i32* %re_index.i317, align 4, !dbg !9798
  %310 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i312, align 8, !dbg !9799
  %buffer48.i410 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %310, i32 0, i32 0, !dbg !9800
  %311 = load i8*, i8** %buffer48.i410, align 8, !dbg !9800
  %312 = load i32, i32* %re_index.i317, align 4, !dbg !9801
  %shr49.i411 = lshr i32 %312, 3, !dbg !9802
  %idx.ext50.i412 = zext i32 %shr49.i411 to i64, !dbg !9803
  %add.ptr51.i413 = getelementptr inbounds i8, i8* %311, i64 %idx.ext50.i412, !dbg !9803
  %313 = bitcast i8* %add.ptr51.i413 to %union.unaligned_32*, !dbg !9804
  %l52.i414 = bitcast %union.unaligned_32* %313 to i32*, !dbg !9804
  %314 = load i32, i32* %l52.i414, align 1, !dbg !9804
  store i32 %314, i32* %x.addr.i96.i309, align 4, !dbg !9805
  %315 = load i32, i32* %x.addr.i96.i309, align 4, !dbg !9806
  %shl.i97.i415 = shl i32 %315, 8, !dbg !9807
  %and.i98.i416 = and i32 %shl.i97.i415, 65280, !dbg !9808
  %316 = load i32, i32* %x.addr.i96.i309, align 4, !dbg !9809
  %shr.i99.i417 = lshr i32 %316, 8, !dbg !9810
  %and1.i100.i418 = and i32 %shr.i99.i417, 255, !dbg !9811
  %or.i101.i419 = or i32 %and.i98.i416, %and1.i100.i418, !dbg !9812
  %shl2.i102.i420 = shl i32 %or.i101.i419, 16, !dbg !9813
  %317 = load i32, i32* %x.addr.i96.i309, align 4, !dbg !9814
  %shr3.i103.i421 = lshr i32 %317, 16, !dbg !9815
  %shl4.i104.i422 = shl i32 %shr3.i103.i421, 8, !dbg !9816
  %and5.i105.i423 = and i32 %shl4.i104.i422, 65280, !dbg !9817
  %318 = load i32, i32* %x.addr.i96.i309, align 4, !dbg !9818
  %shr6.i106.i424 = lshr i32 %318, 16, !dbg !9819
  %shr7.i107.i425 = lshr i32 %shr6.i106.i424, 8, !dbg !9820
  %and8.i108.i426 = and i32 %shr7.i107.i425, 255, !dbg !9821
  %or9.i109.i427 = or i32 %and5.i105.i423, %and8.i108.i426, !dbg !9822
  %or10.i110.i428 = or i32 %shl2.i102.i420, %or9.i109.i427, !dbg !9823
  %319 = load i32, i32* %re_index.i317, align 4, !dbg !9824
  %and54.i429 = and i32 %319, 7, !dbg !9825
  %shl55.i430 = shl i32 %or10.i110.i428, %and54.i429, !dbg !9826
  store i32 %shl55.i430, i32* %re_cache.i318, align 4, !dbg !9827
  %320 = load i32, i32* %n.i320, align 4, !dbg !9828
  %sub56.i431 = sub nsw i32 0, %320, !dbg !9829
  store i32 %sub56.i431, i32* %nb_bits.i321, align 4, !dbg !9830
  %321 = load i32, i32* %re_cache.i318, align 4, !dbg !9831
  %322 = load i32, i32* %nb_bits.i321, align 4, !dbg !9832
  %conv57.i432 = trunc i32 %322 to i8, !dbg !9832
  %call58.i433 = call i32 @NEG_USR32(i32 %321, i8 signext %conv57.i432) #9, !dbg !9833
  %323 = load i32, i32* %code.i316, align 4, !dbg !9834
  %add59.i434 = add i32 %call58.i433, %323, !dbg !9835
  store i32 %add59.i434, i32* %index1.i322, align 4, !dbg !9836
  %324 = load i32, i32* %index1.i322, align 4, !dbg !9837
  %idxprom60.i435 = zext i32 %324 to i64, !dbg !9838
  %325 = load [2 x i16]*, [2 x i16]** %table.addr.i313, align 8, !dbg !9838
  %arrayidx61.i436 = getelementptr inbounds [2 x i16], [2 x i16]* %325, i64 %idxprom60.i435, !dbg !9838
  %arrayidx62.i437 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i436, i64 0, i64 0, !dbg !9838
  %326 = load i16, i16* %arrayidx62.i437, align 2, !dbg !9838
  %conv63.i438 = sext i16 %326 to i32, !dbg !9838
  store i32 %conv63.i438, i32* %code.i316, align 4, !dbg !9839
  %327 = load i32, i32* %index1.i322, align 4, !dbg !9840
  %idxprom64.i439 = zext i32 %327 to i64, !dbg !9841
  %328 = load [2 x i16]*, [2 x i16]** %table.addr.i313, align 8, !dbg !9841
  %arrayidx65.i440 = getelementptr inbounds [2 x i16], [2 x i16]* %328, i64 %idxprom64.i439, !dbg !9841
  %arrayidx66.i441 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i440, i64 0, i64 1, !dbg !9841
  %329 = load i16, i16* %arrayidx66.i441, align 2, !dbg !9841
  %conv67.i442 = sext i16 %329 to i32, !dbg !9841
  store i32 %conv67.i442, i32* %n.i320, align 4, !dbg !9842
  br label %if.end.i444, !dbg !9843

if.end.i444:                                      ; preds = %cond.end46.i443, %land.lhs.true36.i402, %cond.end.i400
  br label %if.end68.i445, !dbg !9844

if.end68.i445:                                    ; preds = %if.end.i444, %land.lhs.true.i358, %if.end205
  %330 = load i32, i32* %n.i320, align 4, !dbg !9845
  %331 = load i32, i32* %re_cache.i318, align 4, !dbg !9846
  %shl70.i446 = shl i32 %331, %330, !dbg !9846
  store i32 %shl70.i446, i32* %re_cache.i318, align 4, !dbg !9846
  %332 = load i32, i32* %re_size_plus8.i319, align 4, !dbg !9847
  %333 = load i32, i32* %re_index.i317, align 4, !dbg !9848
  %334 = load i32, i32* %n.i320, align 4, !dbg !9849
  %add71.i447 = add i32 %333, %334, !dbg !9850
  %cmp72.i448 = icmp ugt i32 %332, %add71.i447, !dbg !9851
  br i1 %cmp72.i448, label %cond.true74.i450, label %cond.false76.i451, !dbg !9852

cond.true74.i450:                                 ; preds = %if.end68.i445
  %335 = load i32, i32* %re_index.i317, align 4, !dbg !9853
  %336 = load i32, i32* %n.i320, align 4, !dbg !9854
  %add75.i449 = add i32 %335, %336, !dbg !9855
  br label %get_vlc2.exit454, !dbg !9856

cond.false76.i451:                                ; preds = %if.end68.i445
  %337 = load i32, i32* %re_size_plus8.i319, align 4, !dbg !9857
  br label %get_vlc2.exit454, !dbg !9858

get_vlc2.exit454:                                 ; preds = %cond.true74.i450, %cond.false76.i451
  %cond78.i452 = phi i32 [ %add75.i449, %cond.true74.i450 ], [ %337, %cond.false76.i451 ], !dbg !9859
  store i32 %cond78.i452, i32* %re_index.i317, align 4, !dbg !9860
  %338 = load i32, i32* %re_index.i317, align 4, !dbg !9861
  %339 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i312, align 8, !dbg !9862
  %index80.i453 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %339, i32 0, i32 2, !dbg !9863
  store i32 %338, i32* %index80.i453, align 8, !dbg !9864
  %340 = load i32, i32* %code.i316, align 4, !dbg !9865
  store i32 %340, i32* %code, align 4, !dbg !9866
  br label %do.body209, !dbg !9867, !llvm.loop !9868

do.body209:                                       ; preds = %get_vlc2.exit454
  br label %do.end210, !dbg !9869

do.end210:                                        ; preds = %do.body209
  %341 = load i32, i32* %s_index, align 4, !dbg !9872
  %add211 = add nsw i32 %341, 3, !dbg !9873
  %idxprom212 = sext i32 %add211 to i64, !dbg !9874
  %342 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9874
  %sb_hybrid213 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %342, i32 0, i32 17, !dbg !9875
  %arrayidx214 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid213, i64 0, i64 %idxprom212, !dbg !9874
  store i32 0, i32* %arrayidx214, align 4, !dbg !9876
  %343 = load i32, i32* %s_index, align 4, !dbg !9877
  %add215 = add nsw i32 %343, 2, !dbg !9878
  %idxprom216 = sext i32 %add215 to i64, !dbg !9879
  %344 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9879
  %sb_hybrid217 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %344, i32 0, i32 17, !dbg !9880
  %arrayidx218 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid217, i64 0, i64 %idxprom216, !dbg !9879
  store i32 0, i32* %arrayidx218, align 4, !dbg !9881
  %345 = load i32, i32* %s_index, align 4, !dbg !9882
  %add219 = add nsw i32 %345, 1, !dbg !9883
  %idxprom220 = sext i32 %add219 to i64, !dbg !9884
  %346 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9884
  %sb_hybrid221 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %346, i32 0, i32 17, !dbg !9885
  %arrayidx222 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid221, i64 0, i64 %idxprom220, !dbg !9884
  store i32 0, i32* %arrayidx222, align 4, !dbg !9886
  %347 = load i32, i32* %s_index, align 4, !dbg !9887
  %add223 = add nsw i32 %347, 0, !dbg !9888
  %idxprom224 = sext i32 %add223 to i64, !dbg !9889
  %348 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9889
  %sb_hybrid225 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %348, i32 0, i32 17, !dbg !9890
  %arrayidx226 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid225, i64 0, i64 %idxprom224, !dbg !9889
  store i32 0, i32* %arrayidx226, align 4, !dbg !9891
  br label %while.cond227, !dbg !9892

while.cond227:                                    ; preds = %while.body229, %do.end210
  %349 = load i32, i32* %code, align 4, !dbg !9893
  %tobool228 = icmp ne i32 %349, 0, !dbg !9895
  br i1 %tobool228, label %while.body229, label %while.end, !dbg !9895

while.body229:                                    ; preds = %while.cond227
  call void @llvm.dbg.declare(metadata i32* %v230, metadata !9896, metadata !2019), !dbg !9898
  call void @llvm.dbg.declare(metadata i32* %pos231, metadata !9899, metadata !2019), !dbg !9900
  %350 = load i32, i32* %s_index, align 4, !dbg !9901
  %351 = load i32, i32* %code, align 4, !dbg !9902
  %idxprom232 = sext i32 %351 to i64, !dbg !9903
  %arrayidx233 = getelementptr inbounds [16 x i32], [16 x i32]* @huffman_decode.idxtab, i64 0, i64 %idxprom232, !dbg !9903
  %352 = load i32, i32* %arrayidx233, align 4, !dbg !9903
  %add234 = add nsw i32 %350, %352, !dbg !9904
  store i32 %add234, i32* %pos231, align 4, !dbg !9900
  %353 = load i32, i32* %code, align 4, !dbg !9905
  %idxprom235 = sext i32 %353 to i64, !dbg !9906
  %arrayidx236 = getelementptr inbounds [16 x i32], [16 x i32]* @huffman_decode.idxtab, i64 0, i64 %idxprom235, !dbg !9906
  %354 = load i32, i32* %arrayidx236, align 4, !dbg !9906
  %shr237 = ashr i32 8, %354, !dbg !9907
  %355 = load i32, i32* %code, align 4, !dbg !9908
  %xor238 = xor i32 %355, %shr237, !dbg !9908
  store i32 %xor238, i32* %code, align 4, !dbg !9908
  %356 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9909
  %gb239 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %356, i32 0, i32 14, !dbg !9910
  %call240 = call i32 @get_bits1(%struct.GetBitContext* %gb239), !dbg !9911
  %sub241 = sub i32 0, %call240, !dbg !9912
  store i32 %sub241, i32* %v230, align 4, !dbg !9913
  %357 = load i32, i32* %pos231, align 4, !dbg !9914
  %idxprom242 = sext i32 %357 to i64, !dbg !9915
  %358 = load i16*, i16** %exponents.addr, align 8, !dbg !9915
  %arrayidx243 = getelementptr inbounds i16, i16* %358, i64 %idxprom242, !dbg !9915
  %359 = load i16, i16* %arrayidx243, align 2, !dbg !9915
  %conv244 = sext i16 %359 to i32, !dbg !9915
  %idx.ext245 = sext i32 %conv244 to i64, !dbg !9916
  %add.ptr246 = getelementptr inbounds i32, i32* getelementptr inbounds ([512 x i32], [512 x i32]* @exp_table_fixed, i32 0, i32 0), i64 %idx.ext245, !dbg !9916
  %360 = load i32, i32* %add.ptr246, align 4, !dbg !9917
  %361 = load i32, i32* %v230, align 4, !dbg !9918
  %xor247 = xor i32 %360, %361, !dbg !9919
  %362 = load i32, i32* %v230, align 4, !dbg !9920
  %sub248 = sub i32 %xor247, %362, !dbg !9921
  %363 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9922
  %sb_hybrid249 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %363, i32 0, i32 17, !dbg !9923
  %arraydecay250 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid249, i32 0, i32 0, !dbg !9922
  %364 = load i32, i32* %pos231, align 4, !dbg !9924
  %idx.ext251 = sext i32 %364 to i64, !dbg !9925
  %add.ptr252 = getelementptr inbounds i32, i32* %arraydecay250, i64 %idx.ext251, !dbg !9925
  store i32 %sub248, i32* %add.ptr252, align 4, !dbg !9926
  br label %while.cond227, !dbg !9927, !llvm.loop !9929

while.end:                                        ; preds = %while.cond227
  %365 = load i32, i32* %s_index, align 4, !dbg !9930
  %add253 = add nsw i32 %365, 4, !dbg !9930
  store i32 %add253, i32* %s_index, align 4, !dbg !9930
  br label %while.cond, !dbg !9931, !llvm.loop !9932

while.end254:                                     ; preds = %if.then203, %if.end199, %while.cond
  %366 = load i32, i32* %end_pos2.addr, align 4, !dbg !9933
  %367 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9934
  %gb255 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %367, i32 0, i32 14, !dbg !9935
  %call256 = call i32 @get_bits_count(%struct.GetBitContext* %gb255), !dbg !9936
  %sub257 = sub nsw i32 %366, %call256, !dbg !9937
  store i32 %sub257, i32* %bits_left, align 4, !dbg !9938
  %368 = load i32, i32* %bits_left, align 4, !dbg !9939
  %cmp258 = icmp slt i32 %368, 0, !dbg !9941
  br i1 %cmp258, label %land.lhs.true260, label %if.else266, !dbg !9942

land.lhs.true260:                                 ; preds = %while.end254
  %369 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9943
  %err_recognition261 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %369, i32 0, i32 25, !dbg !9945
  %370 = load i32, i32* %err_recognition261, align 8, !dbg !9945
  %and262 = and i32 %370, 131076, !dbg !9946
  %tobool263 = icmp ne i32 %and262, 0, !dbg !9946
  br i1 %tobool263, label %if.then264, label %if.else266, !dbg !9947

if.then264:                                       ; preds = %land.lhs.true260
  %371 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9948
  %avctx265 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %371, i32 0, i32 26, !dbg !9950
  %372 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx265, align 16, !dbg !9950
  %373 = bitcast %struct.AVCodecContext* %372 to i8*, !dbg !9948
  %374 = load i32, i32* %bits_left, align 4, !dbg !9951
  call void (i8*, i32, i8*, ...) @av_log(i8* %373, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i32 %374), !dbg !9952
  store i32 0, i32* %s_index, align 4, !dbg !9953
  br label %if.end276, !dbg !9954

if.else266:                                       ; preds = %land.lhs.true260, %while.end254
  %375 = load i32, i32* %bits_left, align 4, !dbg !9955
  %cmp267 = icmp sgt i32 %375, 0, !dbg !9958
  br i1 %cmp267, label %land.lhs.true269, label %if.end275, !dbg !9959

land.lhs.true269:                                 ; preds = %if.else266
  %376 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9960
  %err_recognition270 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %376, i32 0, i32 25, !dbg !9962
  %377 = load i32, i32* %err_recognition270, align 8, !dbg !9962
  %and271 = and i32 %377, 262148, !dbg !9963
  %tobool272 = icmp ne i32 %and271, 0, !dbg !9963
  br i1 %tobool272, label %if.then273, label %if.end275, !dbg !9964

if.then273:                                       ; preds = %land.lhs.true269
  %378 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9965
  %avctx274 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %378, i32 0, i32 26, !dbg !9967
  %379 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx274, align 16, !dbg !9967
  %380 = bitcast %struct.AVCodecContext* %379 to i8*, !dbg !9965
  %381 = load i32, i32* %bits_left, align 4, !dbg !9968
  call void (i8*, i32, i8*, ...) @av_log(i8* %380, i32 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i32 %381), !dbg !9969
  store i32 0, i32* %s_index, align 4, !dbg !9970
  br label %if.end275, !dbg !9971

if.end275:                                        ; preds = %if.then273, %land.lhs.true269, %if.else266
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.then264
  %382 = load i32, i32* %s_index, align 4, !dbg !9972
  %idxprom277 = sext i32 %382 to i64, !dbg !9973
  %383 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !9973
  %sb_hybrid278 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %383, i32 0, i32 17, !dbg !9974
  %arrayidx279 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid278, i64 0, i64 %idxprom277, !dbg !9973
  %384 = bitcast i32* %arrayidx279 to i8*, !dbg !9975
  %385 = load i32, i32* %s_index, align 4, !dbg !9976
  %sub280 = sub nsw i32 576, %385, !dbg !9977
  %conv281 = sext i32 %sub280 to i64, !dbg !9978
  %mul282 = mul i64 4, %conv281, !dbg !9979
  call void @llvm.memset.p0i8.i64(i8* %384, i8 0, i64 %mul282, i32 4, i1 false), !dbg !9975
  %386 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9980
  %gb283 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %386, i32 0, i32 14, !dbg !9981
  %387 = load i32, i32* %bits_left, align 4, !dbg !9982
  call void @skip_bits_long(%struct.GetBitContext* %gb283, i32 %387), !dbg !9983
  %388 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9984
  %gb284 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %388, i32 0, i32 14, !dbg !9985
  %call285 = call i32 @get_bits_count(%struct.GetBitContext* %gb284), !dbg !9986
  store i32 %call285, i32* %i, align 4, !dbg !9987
  %389 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !9988
  call void @switch_buffer(%struct.MPADecodeContext* %389, i32* %i, i32* %end_pos, i32* %end_pos2.addr), !dbg !9989
  ret i32 0, !dbg !9990
}

; Function Attrs: nounwind uwtable
define internal void @compute_stereo(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g0, %struct.GranuleDef* %g1) #1 !dbg !9991 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g0.addr = alloca %struct.GranuleDef*, align 8
  %g1.addr = alloca %struct.GranuleDef*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %sf_max = alloca i32, align 4
  %sf = alloca i32, align 4
  %len = alloca i32, align 4
  %non_zero_found = alloca i32, align 4
  %is_tab = alloca [16 x i32]*, align 8
  %tab0 = alloca i32*, align 8
  %tab1 = alloca i32*, align 8
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %tmp0 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  %non_zero_found_short = alloca [3 x i32], align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !9994, metadata !2019), !dbg !9995
  store %struct.GranuleDef* %g0, %struct.GranuleDef** %g0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g0.addr, metadata !9996, metadata !2019), !dbg !9997
  store %struct.GranuleDef* %g1, %struct.GranuleDef** %g1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g1.addr, metadata !9998, metadata !2019), !dbg !9999
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10000, metadata !2019), !dbg !10001
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10002, metadata !2019), !dbg !10003
  call void @llvm.dbg.declare(metadata i32* %k, metadata !10004, metadata !2019), !dbg !10005
  call void @llvm.dbg.declare(metadata i32* %l, metadata !10006, metadata !2019), !dbg !10007
  call void @llvm.dbg.declare(metadata i32* %sf_max, metadata !10008, metadata !2019), !dbg !10009
  call void @llvm.dbg.declare(metadata i32* %sf, metadata !10010, metadata !2019), !dbg !10011
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10012, metadata !2019), !dbg !10013
  call void @llvm.dbg.declare(metadata i32* %non_zero_found, metadata !10014, metadata !2019), !dbg !10015
  call void @llvm.dbg.declare(metadata [16 x i32]** %is_tab, metadata !10016, metadata !2019), !dbg !10019
  call void @llvm.dbg.declare(metadata i32** %tab0, metadata !10020, metadata !2019), !dbg !10021
  call void @llvm.dbg.declare(metadata i32** %tab1, metadata !10022, metadata !2019), !dbg !10023
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !10024, metadata !2019), !dbg !10025
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !10026, metadata !2019), !dbg !10027
  call void @llvm.dbg.declare(metadata i32* %tmp0, metadata !10028, metadata !2019), !dbg !10029
  call void @llvm.dbg.declare(metadata i32* %tmp1, metadata !10030, metadata !2019), !dbg !10031
  call void @llvm.dbg.declare(metadata [3 x i32]* %non_zero_found_short, metadata !10032, metadata !2019), !dbg !10033
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10034
  %mode_ext = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 8, !dbg !10036
  %1 = load i32, i32* %mode_ext, align 32, !dbg !10036
  %and = and i32 %1, 1, !dbg !10037
  %tobool = icmp ne i32 %and, 0, !dbg !10037
  br i1 %tobool, label %if.then, label %if.else229, !dbg !10038

if.then:                                          ; preds = %entry
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10039
  %lsf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 9, !dbg !10042
  %3 = load i32, i32* %lsf, align 4, !dbg !10042
  %tobool1 = icmp ne i32 %3, 0, !dbg !10039
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !10043

if.then2:                                         ; preds = %if.then
  store [16 x i32]* getelementptr inbounds ([2 x [16 x i32]], [2 x [16 x i32]]* @is_table, i32 0, i32 0), [16 x i32]** %is_tab, align 8, !dbg !10044
  store i32 7, i32* %sf_max, align 4, !dbg !10046
  br label %if.end, !dbg !10047

if.else:                                          ; preds = %if.then
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10048
  %scalefac_compress = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 4, !dbg !10050
  %5 = load i32, i32* %scalefac_compress, align 16, !dbg !10050
  %and3 = and i32 %5, 1, !dbg !10051
  %idxprom = sext i32 %and3 to i64, !dbg !10052
  %arrayidx = getelementptr inbounds [2 x [2 x [16 x i32]]], [2 x [2 x [16 x i32]]]* @is_table_lsf, i64 0, i64 %idxprom, !dbg !10052
  %arraydecay = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* %arrayidx, i32 0, i32 0, !dbg !10052
  store [16 x i32]* %arraydecay, [16 x i32]** %is_tab, align 8, !dbg !10053
  store i32 16, i32* %sf_max, align 4, !dbg !10054
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %6 = load %struct.GranuleDef*, %struct.GranuleDef** %g0.addr, align 8, !dbg !10055
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %6, i32 0, i32 17, !dbg !10056
  %arraydecay4 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid, i32 0, i32 0, !dbg !10055
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay4, i64 576, !dbg !10057
  store i32* %add.ptr, i32** %tab0, align 8, !dbg !10058
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10059
  %sb_hybrid5 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 17, !dbg !10060
  %arraydecay6 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid5, i32 0, i32 0, !dbg !10059
  %add.ptr7 = getelementptr inbounds i32, i32* %arraydecay6, i64 576, !dbg !10061
  store i32* %add.ptr7, i32** %tab1, align 8, !dbg !10062
  %arrayidx8 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 0, !dbg !10063
  store i32 0, i32* %arrayidx8, align 4, !dbg !10064
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 1, !dbg !10065
  store i32 0, i32* %arrayidx9, align 4, !dbg !10066
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 2, !dbg !10067
  store i32 0, i32* %arrayidx10, align 4, !dbg !10068
  %8 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10069
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %8, i32 0, i32 13, !dbg !10070
  %9 = load i32, i32* %short_start, align 4, !dbg !10070
  %sub = sub nsw i32 13, %9, !dbg !10071
  %mul = mul nsw i32 %sub, 3, !dbg !10072
  %10 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10073
  %long_end = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %10, i32 0, i32 14, !dbg !10074
  %11 = load i32, i32* %long_end, align 8, !dbg !10074
  %add = add nsw i32 %mul, %11, !dbg !10075
  %sub11 = sub nsw i32 %add, 3, !dbg !10076
  store i32 %sub11, i32* %k, align 4, !dbg !10077
  store i32 12, i32* %i, align 4, !dbg !10078
  br label %for.cond, !dbg !10080

for.cond:                                         ; preds = %for.inc115, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !10081
  %13 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10084
  %short_start12 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %13, i32 0, i32 13, !dbg !10085
  %14 = load i32, i32* %short_start12, align 4, !dbg !10085
  %cmp = icmp sge i32 %12, %14, !dbg !10086
  br i1 %cmp, label %for.body, label %for.end117, !dbg !10087

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !10088
  %cmp13 = icmp ne i32 %15, 11, !dbg !10091
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !10092

if.then14:                                        ; preds = %for.body
  %16 = load i32, i32* %k, align 4, !dbg !10093
  %sub15 = sub nsw i32 %16, 3, !dbg !10093
  store i32 %sub15, i32* %k, align 4, !dbg !10093
  br label %if.end16, !dbg !10094

if.end16:                                         ; preds = %if.then14, %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10095
  %idxprom17 = sext i32 %17 to i64, !dbg !10096
  %18 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10097
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %18, i32 0, i32 4, !dbg !10098
  %19 = load i32, i32* %sample_rate_index, align 16, !dbg !10098
  %idxprom18 = sext i32 %19 to i64, !dbg !10096
  %arrayidx19 = getelementptr inbounds [9 x [13 x i8]], [9 x [13 x i8]]* @band_size_short, i64 0, i64 %idxprom18, !dbg !10096
  %arrayidx20 = getelementptr inbounds [13 x i8], [13 x i8]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !10096
  %20 = load i8, i8* %arrayidx20, align 1, !dbg !10096
  %conv = zext i8 %20 to i32, !dbg !10096
  store i32 %conv, i32* %len, align 4, !dbg !10099
  store i32 2, i32* %l, align 4, !dbg !10100
  br label %for.cond21, !dbg !10102

for.cond21:                                       ; preds = %for.inc113, %if.end16
  %21 = load i32, i32* %l, align 4, !dbg !10103
  %cmp22 = icmp sge i32 %21, 0, !dbg !10106
  br i1 %cmp22, label %for.body24, label %for.end114, !dbg !10107

for.body24:                                       ; preds = %for.cond21
  %22 = load i32, i32* %len, align 4, !dbg !10108
  %23 = load i32*, i32** %tab0, align 8, !dbg !10110
  %idx.ext = sext i32 %22 to i64, !dbg !10110
  %idx.neg = sub i64 0, %idx.ext, !dbg !10110
  %add.ptr25 = getelementptr inbounds i32, i32* %23, i64 %idx.neg, !dbg !10110
  store i32* %add.ptr25, i32** %tab0, align 8, !dbg !10110
  %24 = load i32, i32* %len, align 4, !dbg !10111
  %25 = load i32*, i32** %tab1, align 8, !dbg !10112
  %idx.ext26 = sext i32 %24 to i64, !dbg !10112
  %idx.neg27 = sub i64 0, %idx.ext26, !dbg !10112
  %add.ptr28 = getelementptr inbounds i32, i32* %25, i64 %idx.neg27, !dbg !10112
  store i32* %add.ptr28, i32** %tab1, align 8, !dbg !10112
  %26 = load i32, i32* %l, align 4, !dbg !10113
  %idxprom29 = sext i32 %26 to i64, !dbg !10115
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 %idxprom29, !dbg !10115
  %27 = load i32, i32* %arrayidx30, align 4, !dbg !10115
  %tobool31 = icmp ne i32 %27, 0, !dbg !10115
  br i1 %tobool31, label %if.else81, label %if.then32, !dbg !10116

if.then32:                                        ; preds = %for.body24
  store i32 0, i32* %j, align 4, !dbg !10117
  br label %for.cond33, !dbg !10120

for.cond33:                                       ; preds = %for.inc, %if.then32
  %28 = load i32, i32* %j, align 4, !dbg !10121
  %29 = load i32, i32* %len, align 4, !dbg !10124
  %cmp34 = icmp slt i32 %28, %29, !dbg !10125
  br i1 %cmp34, label %for.body36, label %for.end, !dbg !10126

for.body36:                                       ; preds = %for.cond33
  %30 = load i32, i32* %j, align 4, !dbg !10127
  %idxprom37 = sext i32 %30 to i64, !dbg !10130
  %31 = load i32*, i32** %tab1, align 8, !dbg !10130
  %arrayidx38 = getelementptr inbounds i32, i32* %31, i64 %idxprom37, !dbg !10130
  %32 = load i32, i32* %arrayidx38, align 4, !dbg !10130
  %cmp39 = icmp ne i32 %32, 0, !dbg !10131
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !10132

if.then41:                                        ; preds = %for.body36
  %33 = load i32, i32* %l, align 4, !dbg !10133
  %idxprom42 = sext i32 %33 to i64, !dbg !10135
  %arrayidx43 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 %idxprom42, !dbg !10135
  store i32 1, i32* %arrayidx43, align 4, !dbg !10136
  br label %found1, !dbg !10137

if.end44:                                         ; preds = %for.body36
  br label %for.inc, !dbg !10138

for.inc:                                          ; preds = %if.end44
  %34 = load i32, i32* %j, align 4, !dbg !10139
  %inc = add nsw i32 %34, 1, !dbg !10139
  store i32 %inc, i32* %j, align 4, !dbg !10139
  br label %for.cond33, !dbg !10141, !llvm.loop !10142

for.end:                                          ; preds = %for.cond33
  %35 = load i32, i32* %k, align 4, !dbg !10144
  %36 = load i32, i32* %l, align 4, !dbg !10145
  %add45 = add nsw i32 %35, %36, !dbg !10146
  %idxprom46 = sext i32 %add45 to i64, !dbg !10147
  %37 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10147
  %scale_factors = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %37, i32 0, i32 15, !dbg !10148
  %arrayidx47 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors, i64 0, i64 %idxprom46, !dbg !10147
  %38 = load i8, i8* %arrayidx47, align 1, !dbg !10147
  %conv48 = zext i8 %38 to i32, !dbg !10147
  store i32 %conv48, i32* %sf, align 4, !dbg !10149
  %39 = load i32, i32* %sf, align 4, !dbg !10150
  %40 = load i32, i32* %sf_max, align 4, !dbg !10152
  %cmp49 = icmp sge i32 %39, %40, !dbg !10153
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !10154

if.then51:                                        ; preds = %for.end
  br label %found1, !dbg !10155

if.end52:                                         ; preds = %for.end
  %41 = load i32, i32* %sf, align 4, !dbg !10156
  %idxprom53 = sext i32 %41 to i64, !dbg !10157
  %42 = load [16 x i32]*, [16 x i32]** %is_tab, align 8, !dbg !10157
  %arrayidx54 = getelementptr inbounds [16 x i32], [16 x i32]* %42, i64 0, !dbg !10157
  %arrayidx55 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx54, i64 0, i64 %idxprom53, !dbg !10157
  %43 = load i32, i32* %arrayidx55, align 4, !dbg !10157
  store i32 %43, i32* %v1, align 4, !dbg !10158
  %44 = load i32, i32* %sf, align 4, !dbg !10159
  %idxprom56 = sext i32 %44 to i64, !dbg !10160
  %45 = load [16 x i32]*, [16 x i32]** %is_tab, align 8, !dbg !10160
  %arrayidx57 = getelementptr inbounds [16 x i32], [16 x i32]* %45, i64 1, !dbg !10160
  %arrayidx58 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx57, i64 0, i64 %idxprom56, !dbg !10160
  %46 = load i32, i32* %arrayidx58, align 4, !dbg !10160
  store i32 %46, i32* %v2, align 4, !dbg !10161
  store i32 0, i32* %j, align 4, !dbg !10162
  br label %for.cond59, !dbg !10164

for.cond59:                                       ; preds = %for.inc78, %if.end52
  %47 = load i32, i32* %j, align 4, !dbg !10165
  %48 = load i32, i32* %len, align 4, !dbg !10168
  %cmp60 = icmp slt i32 %47, %48, !dbg !10169
  br i1 %cmp60, label %for.body62, label %for.end80, !dbg !10170

for.body62:                                       ; preds = %for.cond59
  %49 = load i32, i32* %j, align 4, !dbg !10171
  %idxprom63 = sext i32 %49 to i64, !dbg !10173
  %50 = load i32*, i32** %tab0, align 8, !dbg !10173
  %arrayidx64 = getelementptr inbounds i32, i32* %50, i64 %idxprom63, !dbg !10173
  %51 = load i32, i32* %arrayidx64, align 4, !dbg !10173
  store i32 %51, i32* %tmp0, align 4, !dbg !10174
  %52 = load i32, i32* %tmp0, align 4, !dbg !10175
  %conv65 = sext i32 %52 to i64, !dbg !10176
  %53 = load i32, i32* %v1, align 4, !dbg !10177
  %conv66 = sext i32 %53 to i64, !dbg !10178
  %mul67 = mul nsw i64 %conv65, %conv66, !dbg !10179
  %shr = ashr i64 %mul67, 23, !dbg !10180
  %conv68 = trunc i64 %shr to i32, !dbg !10181
  %54 = load i32, i32* %j, align 4, !dbg !10182
  %idxprom69 = sext i32 %54 to i64, !dbg !10183
  %55 = load i32*, i32** %tab0, align 8, !dbg !10183
  %arrayidx70 = getelementptr inbounds i32, i32* %55, i64 %idxprom69, !dbg !10183
  store i32 %conv68, i32* %arrayidx70, align 4, !dbg !10184
  %56 = load i32, i32* %tmp0, align 4, !dbg !10185
  %conv71 = sext i32 %56 to i64, !dbg !10186
  %57 = load i32, i32* %v2, align 4, !dbg !10187
  %conv72 = sext i32 %57 to i64, !dbg !10188
  %mul73 = mul nsw i64 %conv71, %conv72, !dbg !10189
  %shr74 = ashr i64 %mul73, 23, !dbg !10190
  %conv75 = trunc i64 %shr74 to i32, !dbg !10191
  %58 = load i32, i32* %j, align 4, !dbg !10192
  %idxprom76 = sext i32 %58 to i64, !dbg !10193
  %59 = load i32*, i32** %tab1, align 8, !dbg !10193
  %arrayidx77 = getelementptr inbounds i32, i32* %59, i64 %idxprom76, !dbg !10193
  store i32 %conv75, i32* %arrayidx77, align 4, !dbg !10194
  br label %for.inc78, !dbg !10195

for.inc78:                                        ; preds = %for.body62
  %60 = load i32, i32* %j, align 4, !dbg !10196
  %inc79 = add nsw i32 %60, 1, !dbg !10196
  store i32 %inc79, i32* %j, align 4, !dbg !10196
  br label %for.cond59, !dbg !10198, !llvm.loop !10199

for.end80:                                        ; preds = %for.cond59
  br label %if.end112, !dbg !10201

if.else81:                                        ; preds = %for.body24
  br label %found1, !dbg !10202

found1:                                           ; preds = %if.else81, %if.then51, %if.then41
  %61 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10204
  %mode_ext82 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %61, i32 0, i32 8, !dbg !10207
  %62 = load i32, i32* %mode_ext82, align 32, !dbg !10207
  %and83 = and i32 %62, 2, !dbg !10208
  %tobool84 = icmp ne i32 %and83, 0, !dbg !10208
  br i1 %tobool84, label %if.then85, label %if.end111, !dbg !10209

if.then85:                                        ; preds = %found1
  store i32 0, i32* %j, align 4, !dbg !10210
  br label %for.cond86, !dbg !10213

for.cond86:                                       ; preds = %for.inc108, %if.then85
  %63 = load i32, i32* %j, align 4, !dbg !10214
  %64 = load i32, i32* %len, align 4, !dbg !10217
  %cmp87 = icmp slt i32 %63, %64, !dbg !10218
  br i1 %cmp87, label %for.body89, label %for.end110, !dbg !10219

for.body89:                                       ; preds = %for.cond86
  %65 = load i32, i32* %j, align 4, !dbg !10220
  %idxprom90 = sext i32 %65 to i64, !dbg !10222
  %66 = load i32*, i32** %tab0, align 8, !dbg !10222
  %arrayidx91 = getelementptr inbounds i32, i32* %66, i64 %idxprom90, !dbg !10222
  %67 = load i32, i32* %arrayidx91, align 4, !dbg !10222
  store i32 %67, i32* %tmp0, align 4, !dbg !10223
  %68 = load i32, i32* %j, align 4, !dbg !10224
  %idxprom92 = sext i32 %68 to i64, !dbg !10225
  %69 = load i32*, i32** %tab1, align 8, !dbg !10225
  %arrayidx93 = getelementptr inbounds i32, i32* %69, i64 %idxprom92, !dbg !10225
  %70 = load i32, i32* %arrayidx93, align 4, !dbg !10225
  store i32 %70, i32* %tmp1, align 4, !dbg !10226
  %71 = load i32, i32* %tmp0, align 4, !dbg !10227
  %72 = load i32, i32* %tmp1, align 4, !dbg !10228
  %add94 = add i32 %71, %72, !dbg !10229
  %conv95 = sext i32 %add94 to i64, !dbg !10230
  %mul96 = mul nsw i64 %conv95, 5931642, !dbg !10231
  %shr97 = ashr i64 %mul96, 23, !dbg !10232
  %conv98 = trunc i64 %shr97 to i32, !dbg !10233
  %73 = load i32, i32* %j, align 4, !dbg !10234
  %idxprom99 = sext i32 %73 to i64, !dbg !10235
  %74 = load i32*, i32** %tab0, align 8, !dbg !10235
  %arrayidx100 = getelementptr inbounds i32, i32* %74, i64 %idxprom99, !dbg !10235
  store i32 %conv98, i32* %arrayidx100, align 4, !dbg !10236
  %75 = load i32, i32* %tmp0, align 4, !dbg !10237
  %76 = load i32, i32* %tmp1, align 4, !dbg !10238
  %sub101 = sub i32 %75, %76, !dbg !10239
  %conv102 = sext i32 %sub101 to i64, !dbg !10240
  %mul103 = mul nsw i64 %conv102, 5931642, !dbg !10241
  %shr104 = ashr i64 %mul103, 23, !dbg !10242
  %conv105 = trunc i64 %shr104 to i32, !dbg !10243
  %77 = load i32, i32* %j, align 4, !dbg !10244
  %idxprom106 = sext i32 %77 to i64, !dbg !10245
  %78 = load i32*, i32** %tab1, align 8, !dbg !10245
  %arrayidx107 = getelementptr inbounds i32, i32* %78, i64 %idxprom106, !dbg !10245
  store i32 %conv105, i32* %arrayidx107, align 4, !dbg !10246
  br label %for.inc108, !dbg !10247

for.inc108:                                       ; preds = %for.body89
  %79 = load i32, i32* %j, align 4, !dbg !10248
  %inc109 = add nsw i32 %79, 1, !dbg !10248
  store i32 %inc109, i32* %j, align 4, !dbg !10248
  br label %for.cond86, !dbg !10250, !llvm.loop !10251

for.end110:                                       ; preds = %for.cond86
  br label %if.end111, !dbg !10253

if.end111:                                        ; preds = %for.end110, %found1
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %for.end80
  br label %for.inc113, !dbg !10254

for.inc113:                                       ; preds = %if.end112
  %80 = load i32, i32* %l, align 4, !dbg !10255
  %dec = add nsw i32 %80, -1, !dbg !10255
  store i32 %dec, i32* %l, align 4, !dbg !10255
  br label %for.cond21, !dbg !10257, !llvm.loop !10258

for.end114:                                       ; preds = %for.cond21
  br label %for.inc115, !dbg !10260

for.inc115:                                       ; preds = %for.end114
  %81 = load i32, i32* %i, align 4, !dbg !10261
  %dec116 = add nsw i32 %81, -1, !dbg !10261
  store i32 %dec116, i32* %i, align 4, !dbg !10261
  br label %for.cond, !dbg !10263, !llvm.loop !10264

for.end117:                                       ; preds = %for.cond
  %arrayidx118 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 0, !dbg !10266
  %82 = load i32, i32* %arrayidx118, align 4, !dbg !10266
  %arrayidx119 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 1, !dbg !10267
  %83 = load i32, i32* %arrayidx119, align 4, !dbg !10267
  %or = or i32 %82, %83, !dbg !10268
  %arrayidx120 = getelementptr inbounds [3 x i32], [3 x i32]* %non_zero_found_short, i64 0, i64 2, !dbg !10269
  %84 = load i32, i32* %arrayidx120, align 4, !dbg !10269
  %or121 = or i32 %or, %84, !dbg !10270
  store i32 %or121, i32* %non_zero_found, align 4, !dbg !10271
  %85 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10272
  %long_end122 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %85, i32 0, i32 14, !dbg !10274
  %86 = load i32, i32* %long_end122, align 8, !dbg !10274
  %sub123 = sub nsw i32 %86, 1, !dbg !10275
  store i32 %sub123, i32* %i, align 4, !dbg !10276
  br label %for.cond124, !dbg !10277

for.cond124:                                      ; preds = %for.inc226, %for.end117
  %87 = load i32, i32* %i, align 4, !dbg !10278
  %cmp125 = icmp sge i32 %87, 0, !dbg !10281
  br i1 %cmp125, label %for.body127, label %for.end228, !dbg !10282

for.body127:                                      ; preds = %for.cond124
  %88 = load i32, i32* %i, align 4, !dbg !10283
  %idxprom128 = sext i32 %88 to i64, !dbg !10285
  %89 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10286
  %sample_rate_index129 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %89, i32 0, i32 4, !dbg !10287
  %90 = load i32, i32* %sample_rate_index129, align 16, !dbg !10287
  %idxprom130 = sext i32 %90 to i64, !dbg !10285
  %arrayidx131 = getelementptr inbounds [9 x [22 x i8]], [9 x [22 x i8]]* @band_size_long, i64 0, i64 %idxprom130, !dbg !10285
  %arrayidx132 = getelementptr inbounds [22 x i8], [22 x i8]* %arrayidx131, i64 0, i64 %idxprom128, !dbg !10285
  %91 = load i8, i8* %arrayidx132, align 1, !dbg !10285
  %conv133 = zext i8 %91 to i32, !dbg !10285
  store i32 %conv133, i32* %len, align 4, !dbg !10288
  %92 = load i32, i32* %len, align 4, !dbg !10289
  %93 = load i32*, i32** %tab0, align 8, !dbg !10290
  %idx.ext134 = sext i32 %92 to i64, !dbg !10290
  %idx.neg135 = sub i64 0, %idx.ext134, !dbg !10290
  %add.ptr136 = getelementptr inbounds i32, i32* %93, i64 %idx.neg135, !dbg !10290
  store i32* %add.ptr136, i32** %tab0, align 8, !dbg !10290
  %94 = load i32, i32* %len, align 4, !dbg !10291
  %95 = load i32*, i32** %tab1, align 8, !dbg !10292
  %idx.ext137 = sext i32 %94 to i64, !dbg !10292
  %idx.neg138 = sub i64 0, %idx.ext137, !dbg !10292
  %add.ptr139 = getelementptr inbounds i32, i32* %95, i64 %idx.neg138, !dbg !10292
  store i32* %add.ptr139, i32** %tab1, align 8, !dbg !10292
  %96 = load i32, i32* %non_zero_found, align 4, !dbg !10293
  %tobool140 = icmp ne i32 %96, 0, !dbg !10293
  br i1 %tobool140, label %if.else194, label %if.then141, !dbg !10295

if.then141:                                       ; preds = %for.body127
  store i32 0, i32* %j, align 4, !dbg !10296
  br label %for.cond142, !dbg !10299

for.cond142:                                      ; preds = %for.inc152, %if.then141
  %97 = load i32, i32* %j, align 4, !dbg !10300
  %98 = load i32, i32* %len, align 4, !dbg !10303
  %cmp143 = icmp slt i32 %97, %98, !dbg !10304
  br i1 %cmp143, label %for.body145, label %for.end154, !dbg !10305

for.body145:                                      ; preds = %for.cond142
  %99 = load i32, i32* %j, align 4, !dbg !10306
  %idxprom146 = sext i32 %99 to i64, !dbg !10309
  %100 = load i32*, i32** %tab1, align 8, !dbg !10309
  %arrayidx147 = getelementptr inbounds i32, i32* %100, i64 %idxprom146, !dbg !10309
  %101 = load i32, i32* %arrayidx147, align 4, !dbg !10309
  %cmp148 = icmp ne i32 %101, 0, !dbg !10310
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !10311

if.then150:                                       ; preds = %for.body145
  store i32 1, i32* %non_zero_found, align 4, !dbg !10312
  br label %found2, !dbg !10314

if.end151:                                        ; preds = %for.body145
  br label %for.inc152, !dbg !10315

for.inc152:                                       ; preds = %if.end151
  %102 = load i32, i32* %j, align 4, !dbg !10316
  %inc153 = add nsw i32 %102, 1, !dbg !10316
  store i32 %inc153, i32* %j, align 4, !dbg !10316
  br label %for.cond142, !dbg !10318, !llvm.loop !10319

for.end154:                                       ; preds = %for.cond142
  %103 = load i32, i32* %i, align 4, !dbg !10321
  %cmp155 = icmp eq i32 %103, 21, !dbg !10322
  br i1 %cmp155, label %cond.true, label %cond.false, !dbg !10323

cond.true:                                        ; preds = %for.end154
  br label %cond.end, !dbg !10324

cond.false:                                       ; preds = %for.end154
  %104 = load i32, i32* %i, align 4, !dbg !10326
  br label %cond.end, !dbg !10328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 20, %cond.true ], [ %104, %cond.false ], !dbg !10329
  store i32 %cond, i32* %k, align 4, !dbg !10331
  %105 = load i32, i32* %k, align 4, !dbg !10332
  %idxprom157 = sext i32 %105 to i64, !dbg !10333
  %106 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10333
  %scale_factors158 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %106, i32 0, i32 15, !dbg !10334
  %arrayidx159 = getelementptr inbounds [40 x i8], [40 x i8]* %scale_factors158, i64 0, i64 %idxprom157, !dbg !10333
  %107 = load i8, i8* %arrayidx159, align 1, !dbg !10333
  %conv160 = zext i8 %107 to i32, !dbg !10333
  store i32 %conv160, i32* %sf, align 4, !dbg !10335
  %108 = load i32, i32* %sf, align 4, !dbg !10336
  %109 = load i32, i32* %sf_max, align 4, !dbg !10338
  %cmp161 = icmp sge i32 %108, %109, !dbg !10339
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !10340

if.then163:                                       ; preds = %cond.end
  br label %found2, !dbg !10341

if.end164:                                        ; preds = %cond.end
  %110 = load i32, i32* %sf, align 4, !dbg !10342
  %idxprom165 = sext i32 %110 to i64, !dbg !10343
  %111 = load [16 x i32]*, [16 x i32]** %is_tab, align 8, !dbg !10343
  %arrayidx166 = getelementptr inbounds [16 x i32], [16 x i32]* %111, i64 0, !dbg !10343
  %arrayidx167 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx166, i64 0, i64 %idxprom165, !dbg !10343
  %112 = load i32, i32* %arrayidx167, align 4, !dbg !10343
  store i32 %112, i32* %v1, align 4, !dbg !10344
  %113 = load i32, i32* %sf, align 4, !dbg !10345
  %idxprom168 = sext i32 %113 to i64, !dbg !10346
  %114 = load [16 x i32]*, [16 x i32]** %is_tab, align 8, !dbg !10346
  %arrayidx169 = getelementptr inbounds [16 x i32], [16 x i32]* %114, i64 1, !dbg !10346
  %arrayidx170 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx169, i64 0, i64 %idxprom168, !dbg !10346
  %115 = load i32, i32* %arrayidx170, align 4, !dbg !10346
  store i32 %115, i32* %v2, align 4, !dbg !10347
  store i32 0, i32* %j, align 4, !dbg !10348
  br label %for.cond171, !dbg !10350

for.cond171:                                      ; preds = %for.inc191, %if.end164
  %116 = load i32, i32* %j, align 4, !dbg !10351
  %117 = load i32, i32* %len, align 4, !dbg !10354
  %cmp172 = icmp slt i32 %116, %117, !dbg !10355
  br i1 %cmp172, label %for.body174, label %for.end193, !dbg !10356

for.body174:                                      ; preds = %for.cond171
  %118 = load i32, i32* %j, align 4, !dbg !10357
  %idxprom175 = sext i32 %118 to i64, !dbg !10359
  %119 = load i32*, i32** %tab0, align 8, !dbg !10359
  %arrayidx176 = getelementptr inbounds i32, i32* %119, i64 %idxprom175, !dbg !10359
  %120 = load i32, i32* %arrayidx176, align 4, !dbg !10359
  store i32 %120, i32* %tmp0, align 4, !dbg !10360
  %121 = load i32, i32* %tmp0, align 4, !dbg !10361
  %conv177 = sext i32 %121 to i64, !dbg !10362
  %122 = load i32, i32* %v1, align 4, !dbg !10363
  %conv178 = sext i32 %122 to i64, !dbg !10364
  %mul179 = mul nsw i64 %conv177, %conv178, !dbg !10365
  %shr180 = ashr i64 %mul179, 23, !dbg !10366
  %conv181 = trunc i64 %shr180 to i32, !dbg !10367
  %123 = load i32, i32* %j, align 4, !dbg !10368
  %idxprom182 = sext i32 %123 to i64, !dbg !10369
  %124 = load i32*, i32** %tab0, align 8, !dbg !10369
  %arrayidx183 = getelementptr inbounds i32, i32* %124, i64 %idxprom182, !dbg !10369
  store i32 %conv181, i32* %arrayidx183, align 4, !dbg !10370
  %125 = load i32, i32* %tmp0, align 4, !dbg !10371
  %conv184 = sext i32 %125 to i64, !dbg !10372
  %126 = load i32, i32* %v2, align 4, !dbg !10373
  %conv185 = sext i32 %126 to i64, !dbg !10374
  %mul186 = mul nsw i64 %conv184, %conv185, !dbg !10375
  %shr187 = ashr i64 %mul186, 23, !dbg !10376
  %conv188 = trunc i64 %shr187 to i32, !dbg !10377
  %127 = load i32, i32* %j, align 4, !dbg !10378
  %idxprom189 = sext i32 %127 to i64, !dbg !10379
  %128 = load i32*, i32** %tab1, align 8, !dbg !10379
  %arrayidx190 = getelementptr inbounds i32, i32* %128, i64 %idxprom189, !dbg !10379
  store i32 %conv188, i32* %arrayidx190, align 4, !dbg !10380
  br label %for.inc191, !dbg !10381

for.inc191:                                       ; preds = %for.body174
  %129 = load i32, i32* %j, align 4, !dbg !10382
  %inc192 = add nsw i32 %129, 1, !dbg !10382
  store i32 %inc192, i32* %j, align 4, !dbg !10382
  br label %for.cond171, !dbg !10384, !llvm.loop !10385

for.end193:                                       ; preds = %for.cond171
  br label %if.end225, !dbg !10387

if.else194:                                       ; preds = %for.body127
  br label %found2, !dbg !10388

found2:                                           ; preds = %if.else194, %if.then163, %if.then150
  %130 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10390
  %mode_ext195 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %130, i32 0, i32 8, !dbg !10393
  %131 = load i32, i32* %mode_ext195, align 32, !dbg !10393
  %and196 = and i32 %131, 2, !dbg !10394
  %tobool197 = icmp ne i32 %and196, 0, !dbg !10394
  br i1 %tobool197, label %if.then198, label %if.end224, !dbg !10395

if.then198:                                       ; preds = %found2
  store i32 0, i32* %j, align 4, !dbg !10396
  br label %for.cond199, !dbg !10399

for.cond199:                                      ; preds = %for.inc221, %if.then198
  %132 = load i32, i32* %j, align 4, !dbg !10400
  %133 = load i32, i32* %len, align 4, !dbg !10403
  %cmp200 = icmp slt i32 %132, %133, !dbg !10404
  br i1 %cmp200, label %for.body202, label %for.end223, !dbg !10405

for.body202:                                      ; preds = %for.cond199
  %134 = load i32, i32* %j, align 4, !dbg !10406
  %idxprom203 = sext i32 %134 to i64, !dbg !10408
  %135 = load i32*, i32** %tab0, align 8, !dbg !10408
  %arrayidx204 = getelementptr inbounds i32, i32* %135, i64 %idxprom203, !dbg !10408
  %136 = load i32, i32* %arrayidx204, align 4, !dbg !10408
  store i32 %136, i32* %tmp0, align 4, !dbg !10409
  %137 = load i32, i32* %j, align 4, !dbg !10410
  %idxprom205 = sext i32 %137 to i64, !dbg !10411
  %138 = load i32*, i32** %tab1, align 8, !dbg !10411
  %arrayidx206 = getelementptr inbounds i32, i32* %138, i64 %idxprom205, !dbg !10411
  %139 = load i32, i32* %arrayidx206, align 4, !dbg !10411
  store i32 %139, i32* %tmp1, align 4, !dbg !10412
  %140 = load i32, i32* %tmp0, align 4, !dbg !10413
  %141 = load i32, i32* %tmp1, align 4, !dbg !10414
  %add207 = add i32 %140, %141, !dbg !10415
  %conv208 = sext i32 %add207 to i64, !dbg !10416
  %mul209 = mul nsw i64 %conv208, 5931642, !dbg !10417
  %shr210 = ashr i64 %mul209, 23, !dbg !10418
  %conv211 = trunc i64 %shr210 to i32, !dbg !10419
  %142 = load i32, i32* %j, align 4, !dbg !10420
  %idxprom212 = sext i32 %142 to i64, !dbg !10421
  %143 = load i32*, i32** %tab0, align 8, !dbg !10421
  %arrayidx213 = getelementptr inbounds i32, i32* %143, i64 %idxprom212, !dbg !10421
  store i32 %conv211, i32* %arrayidx213, align 4, !dbg !10422
  %144 = load i32, i32* %tmp0, align 4, !dbg !10423
  %145 = load i32, i32* %tmp1, align 4, !dbg !10424
  %sub214 = sub i32 %144, %145, !dbg !10425
  %conv215 = sext i32 %sub214 to i64, !dbg !10426
  %mul216 = mul nsw i64 %conv215, 5931642, !dbg !10427
  %shr217 = ashr i64 %mul216, 23, !dbg !10428
  %conv218 = trunc i64 %shr217 to i32, !dbg !10429
  %146 = load i32, i32* %j, align 4, !dbg !10430
  %idxprom219 = sext i32 %146 to i64, !dbg !10431
  %147 = load i32*, i32** %tab1, align 8, !dbg !10431
  %arrayidx220 = getelementptr inbounds i32, i32* %147, i64 %idxprom219, !dbg !10431
  store i32 %conv218, i32* %arrayidx220, align 4, !dbg !10432
  br label %for.inc221, !dbg !10433

for.inc221:                                       ; preds = %for.body202
  %148 = load i32, i32* %j, align 4, !dbg !10434
  %inc222 = add nsw i32 %148, 1, !dbg !10434
  store i32 %inc222, i32* %j, align 4, !dbg !10434
  br label %for.cond199, !dbg !10436, !llvm.loop !10437

for.end223:                                       ; preds = %for.cond199
  br label %if.end224, !dbg !10439

if.end224:                                        ; preds = %for.end223, %found2
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %for.end193
  br label %for.inc226, !dbg !10440

for.inc226:                                       ; preds = %if.end225
  %149 = load i32, i32* %i, align 4, !dbg !10441
  %dec227 = add nsw i32 %149, -1, !dbg !10441
  store i32 %dec227, i32* %i, align 4, !dbg !10441
  br label %for.cond124, !dbg !10443, !llvm.loop !10444

for.end228:                                       ; preds = %for.cond124
  br label %if.end256, !dbg !10446

if.else229:                                       ; preds = %entry
  %150 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10447
  %mode_ext230 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %150, i32 0, i32 8, !dbg !10450
  %151 = load i32, i32* %mode_ext230, align 32, !dbg !10450
  %and231 = and i32 %151, 2, !dbg !10451
  %tobool232 = icmp ne i32 %and231, 0, !dbg !10451
  br i1 %tobool232, label %if.then233, label %if.end255, !dbg !10447

if.then233:                                       ; preds = %if.else229
  %152 = load %struct.GranuleDef*, %struct.GranuleDef** %g0.addr, align 8, !dbg !10452
  %sb_hybrid234 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %152, i32 0, i32 17, !dbg !10454
  %arraydecay235 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid234, i32 0, i32 0, !dbg !10452
  store i32* %arraydecay235, i32** %tab0, align 8, !dbg !10455
  %153 = load %struct.GranuleDef*, %struct.GranuleDef** %g1.addr, align 8, !dbg !10456
  %sb_hybrid236 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %153, i32 0, i32 17, !dbg !10457
  %arraydecay237 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid236, i32 0, i32 0, !dbg !10456
  store i32* %arraydecay237, i32** %tab1, align 8, !dbg !10458
  store i32 0, i32* %i, align 4, !dbg !10459
  br label %for.cond238, !dbg !10461

for.cond238:                                      ; preds = %for.inc252, %if.then233
  %154 = load i32, i32* %i, align 4, !dbg !10462
  %cmp239 = icmp slt i32 %154, 576, !dbg !10465
  br i1 %cmp239, label %for.body241, label %for.end254, !dbg !10466

for.body241:                                      ; preds = %for.cond238
  %155 = load i32, i32* %i, align 4, !dbg !10467
  %idxprom242 = sext i32 %155 to i64, !dbg !10469
  %156 = load i32*, i32** %tab0, align 8, !dbg !10469
  %arrayidx243 = getelementptr inbounds i32, i32* %156, i64 %idxprom242, !dbg !10469
  %157 = load i32, i32* %arrayidx243, align 4, !dbg !10469
  store i32 %157, i32* %tmp0, align 4, !dbg !10470
  %158 = load i32, i32* %i, align 4, !dbg !10471
  %idxprom244 = sext i32 %158 to i64, !dbg !10472
  %159 = load i32*, i32** %tab1, align 8, !dbg !10472
  %arrayidx245 = getelementptr inbounds i32, i32* %159, i64 %idxprom244, !dbg !10472
  %160 = load i32, i32* %arrayidx245, align 4, !dbg !10472
  store i32 %160, i32* %tmp1, align 4, !dbg !10473
  %161 = load i32, i32* %tmp0, align 4, !dbg !10474
  %162 = load i32, i32* %tmp1, align 4, !dbg !10475
  %add246 = add i32 %161, %162, !dbg !10476
  %163 = load i32, i32* %i, align 4, !dbg !10477
  %idxprom247 = sext i32 %163 to i64, !dbg !10478
  %164 = load i32*, i32** %tab0, align 8, !dbg !10478
  %arrayidx248 = getelementptr inbounds i32, i32* %164, i64 %idxprom247, !dbg !10478
  store i32 %add246, i32* %arrayidx248, align 4, !dbg !10479
  %165 = load i32, i32* %tmp0, align 4, !dbg !10480
  %166 = load i32, i32* %tmp1, align 4, !dbg !10481
  %sub249 = sub i32 %165, %166, !dbg !10482
  %167 = load i32, i32* %i, align 4, !dbg !10483
  %idxprom250 = sext i32 %167 to i64, !dbg !10484
  %168 = load i32*, i32** %tab1, align 8, !dbg !10484
  %arrayidx251 = getelementptr inbounds i32, i32* %168, i64 %idxprom250, !dbg !10484
  store i32 %sub249, i32* %arrayidx251, align 4, !dbg !10485
  br label %for.inc252, !dbg !10486

for.inc252:                                       ; preds = %for.body241
  %169 = load i32, i32* %i, align 4, !dbg !10487
  %inc253 = add nsw i32 %169, 1, !dbg !10487
  store i32 %inc253, i32* %i, align 4, !dbg !10487
  br label %for.cond238, !dbg !10489, !llvm.loop !10490

for.end254:                                       ; preds = %for.cond238
  br label %if.end255, !dbg !10492

if.end255:                                        ; preds = %for.end254, %if.else229
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %for.end228
  ret void, !dbg !10493
}

; Function Attrs: nounwind uwtable
define internal void @reorder_block(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !10494 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca i32, align 4
  %ptr = alloca i32*, align 8
  %dst = alloca i32*, align 8
  %ptr1 = alloca i32*, align 8
  %tmp = alloca [576 x i32], align 16
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !10495, metadata !2019), !dbg !10496
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !10497, metadata !2019), !dbg !10498
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10499, metadata !2019), !dbg !10500
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10501, metadata !2019), !dbg !10502
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10503, metadata !2019), !dbg !10504
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !10505, metadata !2019), !dbg !10506
  call void @llvm.dbg.declare(metadata i32** %dst, metadata !10507, metadata !2019), !dbg !10508
  call void @llvm.dbg.declare(metadata i32** %ptr1, metadata !10509, metadata !2019), !dbg !10510
  call void @llvm.dbg.declare(metadata [576 x i32]* %tmp, metadata !10511, metadata !2019), !dbg !10512
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10513
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !10515
  %1 = load i8, i8* %block_type, align 4, !dbg !10515
  %conv = zext i8 %1 to i32, !dbg !10513
  %cmp = icmp ne i32 %conv, 2, !dbg !10516
  br i1 %cmp, label %if.then, label %if.end, !dbg !10517

if.then:                                          ; preds = %entry
  br label %for.end43, !dbg !10518

if.end:                                           ; preds = %entry
  %2 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10519
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %2, i32 0, i32 6, !dbg !10521
  %3 = load i8, i8* %switch_point, align 1, !dbg !10521
  %tobool = icmp ne i8 %3, 0, !dbg !10519
  br i1 %tobool, label %if.then2, label %if.else10, !dbg !10522

if.then2:                                         ; preds = %if.end
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10523
  %sample_rate_index = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 4, !dbg !10526
  %5 = load i32, i32* %sample_rate_index, align 16, !dbg !10526
  %cmp3 = icmp ne i32 %5, 8, !dbg !10527
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !10528

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10529
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %6, i32 0, i32 17, !dbg !10530
  %arraydecay = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid, i32 0, i32 0, !dbg !10529
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 36, !dbg !10531
  store i32* %add.ptr, i32** %ptr, align 8, !dbg !10532
  br label %if.end9, !dbg !10533

if.else:                                          ; preds = %if.then2
  %7 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10534
  %sb_hybrid6 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %7, i32 0, i32 17, !dbg !10535
  %arraydecay7 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid6, i32 0, i32 0, !dbg !10534
  %add.ptr8 = getelementptr inbounds i32, i32* %arraydecay7, i64 72, !dbg !10536
  store i32* %add.ptr8, i32** %ptr, align 8, !dbg !10537
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  br label %if.end13, !dbg !10538

if.else10:                                        ; preds = %if.end
  %8 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10539
  %sb_hybrid11 = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %8, i32 0, i32 17, !dbg !10541
  %arraydecay12 = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid11, i32 0, i32 0, !dbg !10539
  store i32* %arraydecay12, i32** %ptr, align 8, !dbg !10542
  br label %if.end13

if.end13:                                         ; preds = %if.else10, %if.end9
  %9 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10543
  %short_start = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %9, i32 0, i32 13, !dbg !10545
  %10 = load i32, i32* %short_start, align 4, !dbg !10545
  store i32 %10, i32* %i, align 4, !dbg !10546
  br label %for.cond, !dbg !10547

for.cond:                                         ; preds = %for.inc42, %if.end13
  %11 = load i32, i32* %i, align 4, !dbg !10548
  %cmp14 = icmp slt i32 %11, 13, !dbg !10551
  br i1 %cmp14, label %for.body, label %for.end43, !dbg !10552

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !10553
  %idxprom = sext i32 %12 to i64, !dbg !10555
  %13 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !10556
  %sample_rate_index16 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %13, i32 0, i32 4, !dbg !10557
  %14 = load i32, i32* %sample_rate_index16, align 16, !dbg !10557
  %idxprom17 = sext i32 %14 to i64, !dbg !10555
  %arrayidx = getelementptr inbounds [9 x [13 x i8]], [9 x [13 x i8]]* @band_size_short, i64 0, i64 %idxprom17, !dbg !10555
  %arrayidx18 = getelementptr inbounds [13 x i8], [13 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !10555
  %15 = load i8, i8* %arrayidx18, align 1, !dbg !10555
  %conv19 = zext i8 %15 to i32, !dbg !10555
  store i32 %conv19, i32* %len, align 4, !dbg !10558
  %16 = load i32*, i32** %ptr, align 8, !dbg !10559
  store i32* %16, i32** %ptr1, align 8, !dbg !10560
  %arraydecay20 = getelementptr inbounds [576 x i32], [576 x i32]* %tmp, i32 0, i32 0, !dbg !10561
  store i32* %arraydecay20, i32** %dst, align 8, !dbg !10562
  %17 = load i32, i32* %len, align 4, !dbg !10563
  store i32 %17, i32* %j, align 4, !dbg !10565
  br label %for.cond21, !dbg !10566

for.cond21:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %j, align 4, !dbg !10567
  %cmp22 = icmp sgt i32 %18, 0, !dbg !10570
  br i1 %cmp22, label %for.body24, label %for.end, !dbg !10571

for.body24:                                       ; preds = %for.cond21
  %19 = load i32, i32* %len, align 4, !dbg !10572
  %mul = mul nsw i32 0, %19, !dbg !10574
  %idxprom25 = sext i32 %mul to i64, !dbg !10575
  %20 = load i32*, i32** %ptr, align 8, !dbg !10575
  %arrayidx26 = getelementptr inbounds i32, i32* %20, i64 %idxprom25, !dbg !10575
  %21 = load i32, i32* %arrayidx26, align 4, !dbg !10575
  %22 = load i32*, i32** %dst, align 8, !dbg !10576
  %incdec.ptr = getelementptr inbounds i32, i32* %22, i32 1, !dbg !10576
  store i32* %incdec.ptr, i32** %dst, align 8, !dbg !10576
  store i32 %21, i32* %22, align 4, !dbg !10577
  %23 = load i32, i32* %len, align 4, !dbg !10578
  %mul27 = mul nsw i32 1, %23, !dbg !10579
  %idxprom28 = sext i32 %mul27 to i64, !dbg !10580
  %24 = load i32*, i32** %ptr, align 8, !dbg !10580
  %arrayidx29 = getelementptr inbounds i32, i32* %24, i64 %idxprom28, !dbg !10580
  %25 = load i32, i32* %arrayidx29, align 4, !dbg !10580
  %26 = load i32*, i32** %dst, align 8, !dbg !10581
  %incdec.ptr30 = getelementptr inbounds i32, i32* %26, i32 1, !dbg !10581
  store i32* %incdec.ptr30, i32** %dst, align 8, !dbg !10581
  store i32 %25, i32* %26, align 4, !dbg !10582
  %27 = load i32, i32* %len, align 4, !dbg !10583
  %mul31 = mul nsw i32 2, %27, !dbg !10584
  %idxprom32 = sext i32 %mul31 to i64, !dbg !10585
  %28 = load i32*, i32** %ptr, align 8, !dbg !10585
  %arrayidx33 = getelementptr inbounds i32, i32* %28, i64 %idxprom32, !dbg !10585
  %29 = load i32, i32* %arrayidx33, align 4, !dbg !10585
  %30 = load i32*, i32** %dst, align 8, !dbg !10586
  %incdec.ptr34 = getelementptr inbounds i32, i32* %30, i32 1, !dbg !10586
  store i32* %incdec.ptr34, i32** %dst, align 8, !dbg !10586
  store i32 %29, i32* %30, align 4, !dbg !10587
  %31 = load i32*, i32** %ptr, align 8, !dbg !10588
  %incdec.ptr35 = getelementptr inbounds i32, i32* %31, i32 1, !dbg !10588
  store i32* %incdec.ptr35, i32** %ptr, align 8, !dbg !10588
  br label %for.inc, !dbg !10589

for.inc:                                          ; preds = %for.body24
  %32 = load i32, i32* %j, align 4, !dbg !10590
  %dec = add nsw i32 %32, -1, !dbg !10590
  store i32 %dec, i32* %j, align 4, !dbg !10590
  br label %for.cond21, !dbg !10592, !llvm.loop !10593

for.end:                                          ; preds = %for.cond21
  %33 = load i32, i32* %len, align 4, !dbg !10595
  %mul36 = mul nsw i32 2, %33, !dbg !10596
  %34 = load i32*, i32** %ptr, align 8, !dbg !10597
  %idx.ext = sext i32 %mul36 to i64, !dbg !10597
  %add.ptr37 = getelementptr inbounds i32, i32* %34, i64 %idx.ext, !dbg !10597
  store i32* %add.ptr37, i32** %ptr, align 8, !dbg !10597
  %35 = load i32*, i32** %ptr1, align 8, !dbg !10598
  %36 = bitcast i32* %35 to i8*, !dbg !10599
  %arraydecay38 = getelementptr inbounds [576 x i32], [576 x i32]* %tmp, i32 0, i32 0, !dbg !10599
  %37 = bitcast i32* %arraydecay38 to i8*, !dbg !10599
  %38 = load i32, i32* %len, align 4, !dbg !10600
  %mul39 = mul nsw i32 %38, 3, !dbg !10601
  %conv40 = sext i32 %mul39 to i64, !dbg !10600
  %mul41 = mul i64 %conv40, 4, !dbg !10602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 %mul41, i32 4, i1 false), !dbg !10599
  br label %for.inc42, !dbg !10603

for.inc42:                                        ; preds = %for.end
  %39 = load i32, i32* %i, align 4, !dbg !10604
  %inc = add nsw i32 %39, 1, !dbg !10604
  store i32 %inc, i32* %i, align 4, !dbg !10604
  br label %for.cond, !dbg !10606, !llvm.loop !10607

for.end43:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !10609
}

; Function Attrs: nounwind uwtable
define internal void @compute_antialias(%struct.MPADecodeContext* %s, %struct.GranuleDef* %g) #1 !dbg !10610 {
entry:
  %a.addr.i287 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i287, metadata !8251, metadata !2019), !dbg !10611
  %b.addr.i288 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i288, metadata !8264, metadata !2019), !dbg !10619
  %a.addr.i280 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i280, metadata !8251, metadata !2019), !dbg !10620
  %b.addr.i281 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i281, metadata !8264, metadata !2019), !dbg !10623
  %a.addr.i273 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i273, metadata !8251, metadata !2019), !dbg !10624
  %b.addr.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i274, metadata !8264, metadata !2019), !dbg !10628
  %a.addr.i266 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i266, metadata !8251, metadata !2019), !dbg !10629
  %b.addr.i267 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i267, metadata !8264, metadata !2019), !dbg !10632
  %a.addr.i259 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i259, metadata !8251, metadata !2019), !dbg !10633
  %b.addr.i260 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i260, metadata !8264, metadata !2019), !dbg !10636
  %a.addr.i252 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i252, metadata !8251, metadata !2019), !dbg !10637
  %b.addr.i253 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i253, metadata !8264, metadata !2019), !dbg !10641
  %a.addr.i245 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i245, metadata !8251, metadata !2019), !dbg !10642
  %b.addr.i246 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i246, metadata !8264, metadata !2019), !dbg !10645
  %a.addr.i238 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i238, metadata !8251, metadata !2019), !dbg !10646
  %b.addr.i239 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i239, metadata !8264, metadata !2019), !dbg !10649
  %a.addr.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i231, metadata !8251, metadata !2019), !dbg !10650
  %b.addr.i232 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i232, metadata !8264, metadata !2019), !dbg !10654
  %a.addr.i224 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i224, metadata !8251, metadata !2019), !dbg !10655
  %b.addr.i225 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i225, metadata !8264, metadata !2019), !dbg !10658
  %a.addr.i217 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i217, metadata !8251, metadata !2019), !dbg !10659
  %b.addr.i218 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i218, metadata !8264, metadata !2019), !dbg !10662
  %a.addr.i210 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i210, metadata !8251, metadata !2019), !dbg !10663
  %b.addr.i211 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i211, metadata !8264, metadata !2019), !dbg !10667
  %a.addr.i203 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i203, metadata !8251, metadata !2019), !dbg !10668
  %b.addr.i204 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i204, metadata !8264, metadata !2019), !dbg !10671
  %a.addr.i196 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i196, metadata !8251, metadata !2019), !dbg !10672
  %b.addr.i197 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i197, metadata !8264, metadata !2019), !dbg !10675
  %a.addr.i189 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i189, metadata !8251, metadata !2019), !dbg !10676
  %b.addr.i190 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i190, metadata !8264, metadata !2019), !dbg !10680
  %a.addr.i182 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i182, metadata !8251, metadata !2019), !dbg !10681
  %b.addr.i183 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i183, metadata !8264, metadata !2019), !dbg !10684
  %a.addr.i175 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i175, metadata !8251, metadata !2019), !dbg !10685
  %b.addr.i176 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i176, metadata !8264, metadata !2019), !dbg !10688
  %a.addr.i168 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i168, metadata !8251, metadata !2019), !dbg !10689
  %b.addr.i169 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i169, metadata !8264, metadata !2019), !dbg !10693
  %a.addr.i161 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i161, metadata !8251, metadata !2019), !dbg !10694
  %b.addr.i162 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i162, metadata !8264, metadata !2019), !dbg !10697
  %a.addr.i154 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i154, metadata !8251, metadata !2019), !dbg !10698
  %b.addr.i155 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i155, metadata !8264, metadata !2019), !dbg !10701
  %a.addr.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i147, metadata !8251, metadata !2019), !dbg !10702
  %b.addr.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i148, metadata !8264, metadata !2019), !dbg !10706
  %a.addr.i140 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i140, metadata !8251, metadata !2019), !dbg !10707
  %b.addr.i141 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i141, metadata !8264, metadata !2019), !dbg !10710
  %a.addr.i133 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i133, metadata !8251, metadata !2019), !dbg !10711
  %b.addr.i134 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i134, metadata !8264, metadata !2019), !dbg !10714
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8251, metadata !2019), !dbg !10715
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !8264, metadata !2019), !dbg !10717
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %g.addr = alloca %struct.GranuleDef*, align 8
  %ptr = alloca i32*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp0 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  %tmp014 = alloca i32, align 4
  %tmp116 = alloca i32, align 4
  %tmp218 = alloca i32, align 4
  %tmp031 = alloca i32, align 4
  %tmp133 = alloca i32, align 4
  %tmp235 = alloca i32, align 4
  %tmp048 = alloca i32, align 4
  %tmp150 = alloca i32, align 4
  %tmp252 = alloca i32, align 4
  %tmp065 = alloca i32, align 4
  %tmp167 = alloca i32, align 4
  %tmp269 = alloca i32, align 4
  %tmp082 = alloca i32, align 4
  %tmp184 = alloca i32, align 4
  %tmp286 = alloca i32, align 4
  %tmp099 = alloca i32, align 4
  %tmp1101 = alloca i32, align 4
  %tmp2103 = alloca i32, align 4
  %tmp0116 = alloca i32, align 4
  %tmp1118 = alloca i32, align 4
  %tmp2120 = alloca i32, align 4
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !10718, metadata !2019), !dbg !10719
  store %struct.GranuleDef* %g, %struct.GranuleDef** %g.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GranuleDef** %g.addr, metadata !10720, metadata !2019), !dbg !10721
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !10722, metadata !2019), !dbg !10723
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10724, metadata !2019), !dbg !10725
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10726, metadata !2019), !dbg !10727
  %0 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10728
  %block_type = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %0, i32 0, i32 5, !dbg !10730
  %1 = load i8, i8* %block_type, align 4, !dbg !10730
  %conv = zext i8 %1 to i32, !dbg !10728
  %cmp = icmp eq i32 %conv, 2, !dbg !10731
  br i1 %cmp, label %if.then, label %if.else, !dbg !10732

if.then:                                          ; preds = %entry
  %2 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10733
  %switch_point = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %2, i32 0, i32 6, !dbg !10736
  %3 = load i8, i8* %switch_point, align 1, !dbg !10736
  %tobool = icmp ne i8 %3, 0, !dbg !10733
  br i1 %tobool, label %if.end, label %if.then2, !dbg !10737

if.then2:                                         ; preds = %if.then
  br label %for.end, !dbg !10738

if.end:                                           ; preds = %if.then
  store i32 1, i32* %n, align 4, !dbg !10739
  br label %if.end3, !dbg !10740

if.else:                                          ; preds = %entry
  store i32 31, i32* %n, align 4, !dbg !10741
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end
  %4 = load %struct.GranuleDef*, %struct.GranuleDef** %g.addr, align 8, !dbg !10743
  %sb_hybrid = getelementptr inbounds %struct.GranuleDef, %struct.GranuleDef* %4, i32 0, i32 17, !dbg !10744
  %arraydecay = getelementptr inbounds [576 x i32], [576 x i32]* %sb_hybrid, i32 0, i32 0, !dbg !10743
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 18, !dbg !10745
  store i32* %add.ptr, i32** %ptr, align 8, !dbg !10746
  %5 = load i32, i32* %n, align 4, !dbg !10747
  store i32 %5, i32* %i, align 4, !dbg !10748
  br label %for.cond, !dbg !10749

for.cond:                                         ; preds = %for.inc, %if.end3
  %6 = load i32, i32* %i, align 4, !dbg !10750
  %cmp4 = icmp sgt i32 %6, 0, !dbg !10752
  br i1 %cmp4, label %for.body, label %for.end, !dbg !10753

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !10754, !llvm.loop !10755

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %tmp0, metadata !10756, metadata !2019), !dbg !10757
  %7 = load i32*, i32** %ptr, align 8, !dbg !10758
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 -1, !dbg !10758
  %8 = load i32, i32* %arrayidx, align 4, !dbg !10758
  store i32 %8, i32* %tmp0, align 4, !dbg !10759
  call void @llvm.dbg.declare(metadata i32* %tmp1, metadata !10760, metadata !2019), !dbg !10761
  %9 = load i32*, i32** %ptr, align 8, !dbg !10762
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 0, !dbg !10762
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !10762
  store i32 %10, i32* %tmp1, align 4, !dbg !10763
  call void @llvm.dbg.declare(metadata i32* %tmp2, metadata !10764, metadata !2019), !dbg !10765
  %11 = load i32, i32* %tmp0, align 4, !dbg !10766
  %12 = load i32, i32* %tmp1, align 4, !dbg !10767
  %add = add i32 %11, %12, !dbg !10768
  %13 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 0, i64 0), align 16, !dbg !10769
  store i32 %add, i32* %a.addr.i, align 4, !dbg !10770
  store i32 %13, i32* %b.addr.i, align 4, !dbg !10770
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !10771
  %conv.i = sext i32 %14 to i64, !dbg !10772
  %15 = load i32, i32* %b.addr.i, align 4, !dbg !10773
  %conv1.i = sext i32 %15 to i64, !dbg !10774
  %mul.i = mul nsw i64 %conv.i, %conv1.i, !dbg !10775
  %shr.i = ashr i64 %mul.i, 32, !dbg !10776
  %conv2.i = trunc i64 %shr.i to i32, !dbg !10777
  store i32 %conv2.i, i32* %tmp2, align 4, !dbg !10778
  %16 = load i32, i32* %tmp2, align 4, !dbg !10779
  %17 = load i32, i32* %tmp1, align 4, !dbg !10780
  %18 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 0, i64 2), align 8, !dbg !10781
  store i32 %17, i32* %a.addr.i287, align 4, !dbg !10782
  store i32 %18, i32* %b.addr.i288, align 4, !dbg !10782
  %19 = load i32, i32* %a.addr.i287, align 4, !dbg !10783
  %conv.i289 = sext i32 %19 to i64, !dbg !10784
  %20 = load i32, i32* %b.addr.i288, align 4, !dbg !10785
  %conv1.i290 = sext i32 %20 to i64, !dbg !10786
  %mul.i291 = mul nsw i64 %conv.i289, %conv1.i290, !dbg !10787
  %shr.i292 = ashr i64 %mul.i291, 32, !dbg !10788
  %conv2.i293 = trunc i64 %shr.i292 to i32, !dbg !10789
  %sub = sub i32 %16, %conv2.i293, !dbg !10790
  %mul = mul i32 4, %sub, !dbg !10791
  %21 = load i32*, i32** %ptr, align 8, !dbg !10792
  %arrayidx8 = getelementptr inbounds i32, i32* %21, i64 -1, !dbg !10792
  store i32 %mul, i32* %arrayidx8, align 4, !dbg !10793
  %22 = load i32, i32* %tmp2, align 4, !dbg !10794
  %23 = load i32, i32* %tmp0, align 4, !dbg !10795
  %24 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 0, i64 3), align 4, !dbg !10796
  store i32 %23, i32* %a.addr.i280, align 4, !dbg !10797
  store i32 %24, i32* %b.addr.i281, align 4, !dbg !10797
  %25 = load i32, i32* %a.addr.i280, align 4, !dbg !10798
  %conv.i282 = sext i32 %25 to i64, !dbg !10799
  %26 = load i32, i32* %b.addr.i281, align 4, !dbg !10800
  %conv1.i283 = sext i32 %26 to i64, !dbg !10801
  %mul.i284 = mul nsw i64 %conv.i282, %conv1.i283, !dbg !10802
  %shr.i285 = ashr i64 %mul.i284, 32, !dbg !10803
  %conv2.i286 = trunc i64 %shr.i285 to i32, !dbg !10804
  %add10 = add i32 %22, %conv2.i286, !dbg !10805
  %mul11 = mul i32 4, %add10, !dbg !10806
  %27 = load i32*, i32** %ptr, align 8, !dbg !10807
  %arrayidx12 = getelementptr inbounds i32, i32* %27, i64 0, !dbg !10807
  store i32 %mul11, i32* %arrayidx12, align 4, !dbg !10808
  br label %do.end, !dbg !10809

do.end:                                           ; preds = %do.body
  br label %do.body13, !dbg !10810, !llvm.loop !10811

do.body13:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %tmp014, metadata !10812, metadata !2019), !dbg !10813
  %28 = load i32*, i32** %ptr, align 8, !dbg !10814
  %arrayidx15 = getelementptr inbounds i32, i32* %28, i64 -2, !dbg !10814
  %29 = load i32, i32* %arrayidx15, align 4, !dbg !10814
  store i32 %29, i32* %tmp014, align 4, !dbg !10815
  call void @llvm.dbg.declare(metadata i32* %tmp116, metadata !10816, metadata !2019), !dbg !10817
  %30 = load i32*, i32** %ptr, align 8, !dbg !10818
  %arrayidx17 = getelementptr inbounds i32, i32* %30, i64 1, !dbg !10818
  %31 = load i32, i32* %arrayidx17, align 4, !dbg !10818
  store i32 %31, i32* %tmp116, align 4, !dbg !10819
  call void @llvm.dbg.declare(metadata i32* %tmp218, metadata !10820, metadata !2019), !dbg !10821
  %32 = load i32, i32* %tmp014, align 4, !dbg !10822
  %33 = load i32, i32* %tmp116, align 4, !dbg !10823
  %add19 = add i32 %32, %33, !dbg !10824
  %34 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 1, i64 0), align 16, !dbg !10825
  store i32 %add19, i32* %a.addr.i273, align 4, !dbg !10826
  store i32 %34, i32* %b.addr.i274, align 4, !dbg !10826
  %35 = load i32, i32* %a.addr.i273, align 4, !dbg !10827
  %conv.i275 = sext i32 %35 to i64, !dbg !10828
  %36 = load i32, i32* %b.addr.i274, align 4, !dbg !10829
  %conv1.i276 = sext i32 %36 to i64, !dbg !10830
  %mul.i277 = mul nsw i64 %conv.i275, %conv1.i276, !dbg !10831
  %shr.i278 = ashr i64 %mul.i277, 32, !dbg !10832
  %conv2.i279 = trunc i64 %shr.i278 to i32, !dbg !10833
  store i32 %conv2.i279, i32* %tmp218, align 4, !dbg !10834
  %37 = load i32, i32* %tmp218, align 4, !dbg !10835
  %38 = load i32, i32* %tmp116, align 4, !dbg !10836
  %39 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 1, i64 2), align 8, !dbg !10837
  store i32 %38, i32* %a.addr.i266, align 4, !dbg !10838
  store i32 %39, i32* %b.addr.i267, align 4, !dbg !10838
  %40 = load i32, i32* %a.addr.i266, align 4, !dbg !10839
  %conv.i268 = sext i32 %40 to i64, !dbg !10840
  %41 = load i32, i32* %b.addr.i267, align 4, !dbg !10841
  %conv1.i269 = sext i32 %41 to i64, !dbg !10842
  %mul.i270 = mul nsw i64 %conv.i268, %conv1.i269, !dbg !10843
  %shr.i271 = ashr i64 %mul.i270, 32, !dbg !10844
  %conv2.i272 = trunc i64 %shr.i271 to i32, !dbg !10845
  %sub22 = sub i32 %37, %conv2.i272, !dbg !10846
  %mul23 = mul i32 4, %sub22, !dbg !10847
  %42 = load i32*, i32** %ptr, align 8, !dbg !10848
  %arrayidx24 = getelementptr inbounds i32, i32* %42, i64 -2, !dbg !10848
  store i32 %mul23, i32* %arrayidx24, align 4, !dbg !10849
  %43 = load i32, i32* %tmp218, align 4, !dbg !10850
  %44 = load i32, i32* %tmp014, align 4, !dbg !10851
  %45 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 1, i64 3), align 4, !dbg !10852
  store i32 %44, i32* %a.addr.i259, align 4, !dbg !10853
  store i32 %45, i32* %b.addr.i260, align 4, !dbg !10853
  %46 = load i32, i32* %a.addr.i259, align 4, !dbg !10854
  %conv.i261 = sext i32 %46 to i64, !dbg !10855
  %47 = load i32, i32* %b.addr.i260, align 4, !dbg !10856
  %conv1.i262 = sext i32 %47 to i64, !dbg !10857
  %mul.i263 = mul nsw i64 %conv.i261, %conv1.i262, !dbg !10858
  %shr.i264 = ashr i64 %mul.i263, 32, !dbg !10859
  %conv2.i265 = trunc i64 %shr.i264 to i32, !dbg !10860
  %add26 = add i32 %43, %conv2.i265, !dbg !10861
  %mul27 = mul i32 4, %add26, !dbg !10862
  %48 = load i32*, i32** %ptr, align 8, !dbg !10863
  %arrayidx28 = getelementptr inbounds i32, i32* %48, i64 1, !dbg !10863
  store i32 %mul27, i32* %arrayidx28, align 4, !dbg !10864
  br label %do.end29, !dbg !10865

do.end29:                                         ; preds = %do.body13
  br label %do.body30, !dbg !10866, !llvm.loop !10867

do.body30:                                        ; preds = %do.end29
  call void @llvm.dbg.declare(metadata i32* %tmp031, metadata !10868, metadata !2019), !dbg !10869
  %49 = load i32*, i32** %ptr, align 8, !dbg !10870
  %arrayidx32 = getelementptr inbounds i32, i32* %49, i64 -3, !dbg !10870
  %50 = load i32, i32* %arrayidx32, align 4, !dbg !10870
  store i32 %50, i32* %tmp031, align 4, !dbg !10871
  call void @llvm.dbg.declare(metadata i32* %tmp133, metadata !10872, metadata !2019), !dbg !10873
  %51 = load i32*, i32** %ptr, align 8, !dbg !10874
  %arrayidx34 = getelementptr inbounds i32, i32* %51, i64 2, !dbg !10874
  %52 = load i32, i32* %arrayidx34, align 4, !dbg !10874
  store i32 %52, i32* %tmp133, align 4, !dbg !10875
  call void @llvm.dbg.declare(metadata i32* %tmp235, metadata !10876, metadata !2019), !dbg !10877
  %53 = load i32, i32* %tmp031, align 4, !dbg !10878
  %54 = load i32, i32* %tmp133, align 4, !dbg !10879
  %add36 = add i32 %53, %54, !dbg !10880
  %55 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 2, i64 0), align 16, !dbg !10881
  store i32 %add36, i32* %a.addr.i252, align 4, !dbg !10882
  store i32 %55, i32* %b.addr.i253, align 4, !dbg !10882
  %56 = load i32, i32* %a.addr.i252, align 4, !dbg !10883
  %conv.i254 = sext i32 %56 to i64, !dbg !10884
  %57 = load i32, i32* %b.addr.i253, align 4, !dbg !10885
  %conv1.i255 = sext i32 %57 to i64, !dbg !10886
  %mul.i256 = mul nsw i64 %conv.i254, %conv1.i255, !dbg !10887
  %shr.i257 = ashr i64 %mul.i256, 32, !dbg !10888
  %conv2.i258 = trunc i64 %shr.i257 to i32, !dbg !10889
  store i32 %conv2.i258, i32* %tmp235, align 4, !dbg !10890
  %58 = load i32, i32* %tmp235, align 4, !dbg !10891
  %59 = load i32, i32* %tmp133, align 4, !dbg !10892
  %60 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 2, i64 2), align 8, !dbg !10893
  store i32 %59, i32* %a.addr.i245, align 4, !dbg !10894
  store i32 %60, i32* %b.addr.i246, align 4, !dbg !10894
  %61 = load i32, i32* %a.addr.i245, align 4, !dbg !10895
  %conv.i247 = sext i32 %61 to i64, !dbg !10896
  %62 = load i32, i32* %b.addr.i246, align 4, !dbg !10897
  %conv1.i248 = sext i32 %62 to i64, !dbg !10898
  %mul.i249 = mul nsw i64 %conv.i247, %conv1.i248, !dbg !10899
  %shr.i250 = ashr i64 %mul.i249, 32, !dbg !10900
  %conv2.i251 = trunc i64 %shr.i250 to i32, !dbg !10901
  %sub39 = sub i32 %58, %conv2.i251, !dbg !10902
  %mul40 = mul i32 4, %sub39, !dbg !10903
  %63 = load i32*, i32** %ptr, align 8, !dbg !10904
  %arrayidx41 = getelementptr inbounds i32, i32* %63, i64 -3, !dbg !10904
  store i32 %mul40, i32* %arrayidx41, align 4, !dbg !10905
  %64 = load i32, i32* %tmp235, align 4, !dbg !10906
  %65 = load i32, i32* %tmp031, align 4, !dbg !10907
  %66 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 2, i64 3), align 4, !dbg !10908
  store i32 %65, i32* %a.addr.i238, align 4, !dbg !10909
  store i32 %66, i32* %b.addr.i239, align 4, !dbg !10909
  %67 = load i32, i32* %a.addr.i238, align 4, !dbg !10910
  %conv.i240 = sext i32 %67 to i64, !dbg !10911
  %68 = load i32, i32* %b.addr.i239, align 4, !dbg !10912
  %conv1.i241 = sext i32 %68 to i64, !dbg !10913
  %mul.i242 = mul nsw i64 %conv.i240, %conv1.i241, !dbg !10914
  %shr.i243 = ashr i64 %mul.i242, 32, !dbg !10915
  %conv2.i244 = trunc i64 %shr.i243 to i32, !dbg !10916
  %add43 = add i32 %64, %conv2.i244, !dbg !10917
  %mul44 = mul i32 4, %add43, !dbg !10918
  %69 = load i32*, i32** %ptr, align 8, !dbg !10919
  %arrayidx45 = getelementptr inbounds i32, i32* %69, i64 2, !dbg !10919
  store i32 %mul44, i32* %arrayidx45, align 4, !dbg !10920
  br label %do.end46, !dbg !10921

do.end46:                                         ; preds = %do.body30
  br label %do.body47, !dbg !10922, !llvm.loop !10923

do.body47:                                        ; preds = %do.end46
  call void @llvm.dbg.declare(metadata i32* %tmp048, metadata !10924, metadata !2019), !dbg !10925
  %70 = load i32*, i32** %ptr, align 8, !dbg !10926
  %arrayidx49 = getelementptr inbounds i32, i32* %70, i64 -4, !dbg !10926
  %71 = load i32, i32* %arrayidx49, align 4, !dbg !10926
  store i32 %71, i32* %tmp048, align 4, !dbg !10927
  call void @llvm.dbg.declare(metadata i32* %tmp150, metadata !10928, metadata !2019), !dbg !10929
  %72 = load i32*, i32** %ptr, align 8, !dbg !10930
  %arrayidx51 = getelementptr inbounds i32, i32* %72, i64 3, !dbg !10930
  %73 = load i32, i32* %arrayidx51, align 4, !dbg !10930
  store i32 %73, i32* %tmp150, align 4, !dbg !10931
  call void @llvm.dbg.declare(metadata i32* %tmp252, metadata !10932, metadata !2019), !dbg !10933
  %74 = load i32, i32* %tmp048, align 4, !dbg !10934
  %75 = load i32, i32* %tmp150, align 4, !dbg !10935
  %add53 = add i32 %74, %75, !dbg !10936
  %76 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 3, i64 0), align 16, !dbg !10937
  store i32 %add53, i32* %a.addr.i231, align 4, !dbg !10938
  store i32 %76, i32* %b.addr.i232, align 4, !dbg !10938
  %77 = load i32, i32* %a.addr.i231, align 4, !dbg !10939
  %conv.i233 = sext i32 %77 to i64, !dbg !10940
  %78 = load i32, i32* %b.addr.i232, align 4, !dbg !10941
  %conv1.i234 = sext i32 %78 to i64, !dbg !10942
  %mul.i235 = mul nsw i64 %conv.i233, %conv1.i234, !dbg !10943
  %shr.i236 = ashr i64 %mul.i235, 32, !dbg !10944
  %conv2.i237 = trunc i64 %shr.i236 to i32, !dbg !10945
  store i32 %conv2.i237, i32* %tmp252, align 4, !dbg !10946
  %79 = load i32, i32* %tmp252, align 4, !dbg !10947
  %80 = load i32, i32* %tmp150, align 4, !dbg !10948
  %81 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 3, i64 2), align 8, !dbg !10949
  store i32 %80, i32* %a.addr.i224, align 4, !dbg !10950
  store i32 %81, i32* %b.addr.i225, align 4, !dbg !10950
  %82 = load i32, i32* %a.addr.i224, align 4, !dbg !10951
  %conv.i226 = sext i32 %82 to i64, !dbg !10952
  %83 = load i32, i32* %b.addr.i225, align 4, !dbg !10953
  %conv1.i227 = sext i32 %83 to i64, !dbg !10954
  %mul.i228 = mul nsw i64 %conv.i226, %conv1.i227, !dbg !10955
  %shr.i229 = ashr i64 %mul.i228, 32, !dbg !10956
  %conv2.i230 = trunc i64 %shr.i229 to i32, !dbg !10957
  %sub56 = sub i32 %79, %conv2.i230, !dbg !10958
  %mul57 = mul i32 4, %sub56, !dbg !10959
  %84 = load i32*, i32** %ptr, align 8, !dbg !10960
  %arrayidx58 = getelementptr inbounds i32, i32* %84, i64 -4, !dbg !10960
  store i32 %mul57, i32* %arrayidx58, align 4, !dbg !10961
  %85 = load i32, i32* %tmp252, align 4, !dbg !10962
  %86 = load i32, i32* %tmp048, align 4, !dbg !10963
  %87 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 3, i64 3), align 4, !dbg !10964
  store i32 %86, i32* %a.addr.i217, align 4, !dbg !10965
  store i32 %87, i32* %b.addr.i218, align 4, !dbg !10965
  %88 = load i32, i32* %a.addr.i217, align 4, !dbg !10966
  %conv.i219 = sext i32 %88 to i64, !dbg !10967
  %89 = load i32, i32* %b.addr.i218, align 4, !dbg !10968
  %conv1.i220 = sext i32 %89 to i64, !dbg !10969
  %mul.i221 = mul nsw i64 %conv.i219, %conv1.i220, !dbg !10970
  %shr.i222 = ashr i64 %mul.i221, 32, !dbg !10971
  %conv2.i223 = trunc i64 %shr.i222 to i32, !dbg !10972
  %add60 = add i32 %85, %conv2.i223, !dbg !10973
  %mul61 = mul i32 4, %add60, !dbg !10974
  %90 = load i32*, i32** %ptr, align 8, !dbg !10975
  %arrayidx62 = getelementptr inbounds i32, i32* %90, i64 3, !dbg !10975
  store i32 %mul61, i32* %arrayidx62, align 4, !dbg !10976
  br label %do.end63, !dbg !10977

do.end63:                                         ; preds = %do.body47
  br label %do.body64, !dbg !10978, !llvm.loop !10979

do.body64:                                        ; preds = %do.end63
  call void @llvm.dbg.declare(metadata i32* %tmp065, metadata !10980, metadata !2019), !dbg !10981
  %91 = load i32*, i32** %ptr, align 8, !dbg !10982
  %arrayidx66 = getelementptr inbounds i32, i32* %91, i64 -5, !dbg !10982
  %92 = load i32, i32* %arrayidx66, align 4, !dbg !10982
  store i32 %92, i32* %tmp065, align 4, !dbg !10983
  call void @llvm.dbg.declare(metadata i32* %tmp167, metadata !10984, metadata !2019), !dbg !10985
  %93 = load i32*, i32** %ptr, align 8, !dbg !10986
  %arrayidx68 = getelementptr inbounds i32, i32* %93, i64 4, !dbg !10986
  %94 = load i32, i32* %arrayidx68, align 4, !dbg !10986
  store i32 %94, i32* %tmp167, align 4, !dbg !10987
  call void @llvm.dbg.declare(metadata i32* %tmp269, metadata !10988, metadata !2019), !dbg !10989
  %95 = load i32, i32* %tmp065, align 4, !dbg !10990
  %96 = load i32, i32* %tmp167, align 4, !dbg !10991
  %add70 = add i32 %95, %96, !dbg !10992
  %97 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 4, i64 0), align 16, !dbg !10993
  store i32 %add70, i32* %a.addr.i210, align 4, !dbg !10994
  store i32 %97, i32* %b.addr.i211, align 4, !dbg !10994
  %98 = load i32, i32* %a.addr.i210, align 4, !dbg !10995
  %conv.i212 = sext i32 %98 to i64, !dbg !10996
  %99 = load i32, i32* %b.addr.i211, align 4, !dbg !10997
  %conv1.i213 = sext i32 %99 to i64, !dbg !10998
  %mul.i214 = mul nsw i64 %conv.i212, %conv1.i213, !dbg !10999
  %shr.i215 = ashr i64 %mul.i214, 32, !dbg !11000
  %conv2.i216 = trunc i64 %shr.i215 to i32, !dbg !11001
  store i32 %conv2.i216, i32* %tmp269, align 4, !dbg !11002
  %100 = load i32, i32* %tmp269, align 4, !dbg !11003
  %101 = load i32, i32* %tmp167, align 4, !dbg !11004
  %102 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 4, i64 2), align 8, !dbg !11005
  store i32 %101, i32* %a.addr.i203, align 4, !dbg !11006
  store i32 %102, i32* %b.addr.i204, align 4, !dbg !11006
  %103 = load i32, i32* %a.addr.i203, align 4, !dbg !11007
  %conv.i205 = sext i32 %103 to i64, !dbg !11008
  %104 = load i32, i32* %b.addr.i204, align 4, !dbg !11009
  %conv1.i206 = sext i32 %104 to i64, !dbg !11010
  %mul.i207 = mul nsw i64 %conv.i205, %conv1.i206, !dbg !11011
  %shr.i208 = ashr i64 %mul.i207, 32, !dbg !11012
  %conv2.i209 = trunc i64 %shr.i208 to i32, !dbg !11013
  %sub73 = sub i32 %100, %conv2.i209, !dbg !11014
  %mul74 = mul i32 4, %sub73, !dbg !11015
  %105 = load i32*, i32** %ptr, align 8, !dbg !11016
  %arrayidx75 = getelementptr inbounds i32, i32* %105, i64 -5, !dbg !11016
  store i32 %mul74, i32* %arrayidx75, align 4, !dbg !11017
  %106 = load i32, i32* %tmp269, align 4, !dbg !11018
  %107 = load i32, i32* %tmp065, align 4, !dbg !11019
  %108 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 4, i64 3), align 4, !dbg !11020
  store i32 %107, i32* %a.addr.i196, align 4, !dbg !11021
  store i32 %108, i32* %b.addr.i197, align 4, !dbg !11021
  %109 = load i32, i32* %a.addr.i196, align 4, !dbg !11022
  %conv.i198 = sext i32 %109 to i64, !dbg !11023
  %110 = load i32, i32* %b.addr.i197, align 4, !dbg !11024
  %conv1.i199 = sext i32 %110 to i64, !dbg !11025
  %mul.i200 = mul nsw i64 %conv.i198, %conv1.i199, !dbg !11026
  %shr.i201 = ashr i64 %mul.i200, 32, !dbg !11027
  %conv2.i202 = trunc i64 %shr.i201 to i32, !dbg !11028
  %add77 = add i32 %106, %conv2.i202, !dbg !11029
  %mul78 = mul i32 4, %add77, !dbg !11030
  %111 = load i32*, i32** %ptr, align 8, !dbg !11031
  %arrayidx79 = getelementptr inbounds i32, i32* %111, i64 4, !dbg !11031
  store i32 %mul78, i32* %arrayidx79, align 4, !dbg !11032
  br label %do.end80, !dbg !11033

do.end80:                                         ; preds = %do.body64
  br label %do.body81, !dbg !11034, !llvm.loop !11035

do.body81:                                        ; preds = %do.end80
  call void @llvm.dbg.declare(metadata i32* %tmp082, metadata !11036, metadata !2019), !dbg !11037
  %112 = load i32*, i32** %ptr, align 8, !dbg !11038
  %arrayidx83 = getelementptr inbounds i32, i32* %112, i64 -6, !dbg !11038
  %113 = load i32, i32* %arrayidx83, align 4, !dbg !11038
  store i32 %113, i32* %tmp082, align 4, !dbg !11039
  call void @llvm.dbg.declare(metadata i32* %tmp184, metadata !11040, metadata !2019), !dbg !11041
  %114 = load i32*, i32** %ptr, align 8, !dbg !11042
  %arrayidx85 = getelementptr inbounds i32, i32* %114, i64 5, !dbg !11042
  %115 = load i32, i32* %arrayidx85, align 4, !dbg !11042
  store i32 %115, i32* %tmp184, align 4, !dbg !11043
  call void @llvm.dbg.declare(metadata i32* %tmp286, metadata !11044, metadata !2019), !dbg !11045
  %116 = load i32, i32* %tmp082, align 4, !dbg !11046
  %117 = load i32, i32* %tmp184, align 4, !dbg !11047
  %add87 = add i32 %116, %117, !dbg !11048
  %118 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 5, i64 0), align 16, !dbg !11049
  store i32 %add87, i32* %a.addr.i189, align 4, !dbg !11050
  store i32 %118, i32* %b.addr.i190, align 4, !dbg !11050
  %119 = load i32, i32* %a.addr.i189, align 4, !dbg !11051
  %conv.i191 = sext i32 %119 to i64, !dbg !11052
  %120 = load i32, i32* %b.addr.i190, align 4, !dbg !11053
  %conv1.i192 = sext i32 %120 to i64, !dbg !11054
  %mul.i193 = mul nsw i64 %conv.i191, %conv1.i192, !dbg !11055
  %shr.i194 = ashr i64 %mul.i193, 32, !dbg !11056
  %conv2.i195 = trunc i64 %shr.i194 to i32, !dbg !11057
  store i32 %conv2.i195, i32* %tmp286, align 4, !dbg !11058
  %121 = load i32, i32* %tmp286, align 4, !dbg !11059
  %122 = load i32, i32* %tmp184, align 4, !dbg !11060
  %123 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 5, i64 2), align 8, !dbg !11061
  store i32 %122, i32* %a.addr.i182, align 4, !dbg !11062
  store i32 %123, i32* %b.addr.i183, align 4, !dbg !11062
  %124 = load i32, i32* %a.addr.i182, align 4, !dbg !11063
  %conv.i184 = sext i32 %124 to i64, !dbg !11064
  %125 = load i32, i32* %b.addr.i183, align 4, !dbg !11065
  %conv1.i185 = sext i32 %125 to i64, !dbg !11066
  %mul.i186 = mul nsw i64 %conv.i184, %conv1.i185, !dbg !11067
  %shr.i187 = ashr i64 %mul.i186, 32, !dbg !11068
  %conv2.i188 = trunc i64 %shr.i187 to i32, !dbg !11069
  %sub90 = sub i32 %121, %conv2.i188, !dbg !11070
  %mul91 = mul i32 4, %sub90, !dbg !11071
  %126 = load i32*, i32** %ptr, align 8, !dbg !11072
  %arrayidx92 = getelementptr inbounds i32, i32* %126, i64 -6, !dbg !11072
  store i32 %mul91, i32* %arrayidx92, align 4, !dbg !11073
  %127 = load i32, i32* %tmp286, align 4, !dbg !11074
  %128 = load i32, i32* %tmp082, align 4, !dbg !11075
  %129 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 5, i64 3), align 4, !dbg !11076
  store i32 %128, i32* %a.addr.i175, align 4, !dbg !11077
  store i32 %129, i32* %b.addr.i176, align 4, !dbg !11077
  %130 = load i32, i32* %a.addr.i175, align 4, !dbg !11078
  %conv.i177 = sext i32 %130 to i64, !dbg !11079
  %131 = load i32, i32* %b.addr.i176, align 4, !dbg !11080
  %conv1.i178 = sext i32 %131 to i64, !dbg !11081
  %mul.i179 = mul nsw i64 %conv.i177, %conv1.i178, !dbg !11082
  %shr.i180 = ashr i64 %mul.i179, 32, !dbg !11083
  %conv2.i181 = trunc i64 %shr.i180 to i32, !dbg !11084
  %add94 = add i32 %127, %conv2.i181, !dbg !11085
  %mul95 = mul i32 4, %add94, !dbg !11086
  %132 = load i32*, i32** %ptr, align 8, !dbg !11087
  %arrayidx96 = getelementptr inbounds i32, i32* %132, i64 5, !dbg !11087
  store i32 %mul95, i32* %arrayidx96, align 4, !dbg !11088
  br label %do.end97, !dbg !11089

do.end97:                                         ; preds = %do.body81
  br label %do.body98, !dbg !11090, !llvm.loop !11091

do.body98:                                        ; preds = %do.end97
  call void @llvm.dbg.declare(metadata i32* %tmp099, metadata !11092, metadata !2019), !dbg !11093
  %133 = load i32*, i32** %ptr, align 8, !dbg !11094
  %arrayidx100 = getelementptr inbounds i32, i32* %133, i64 -7, !dbg !11094
  %134 = load i32, i32* %arrayidx100, align 4, !dbg !11094
  store i32 %134, i32* %tmp099, align 4, !dbg !11095
  call void @llvm.dbg.declare(metadata i32* %tmp1101, metadata !11096, metadata !2019), !dbg !11097
  %135 = load i32*, i32** %ptr, align 8, !dbg !11098
  %arrayidx102 = getelementptr inbounds i32, i32* %135, i64 6, !dbg !11098
  %136 = load i32, i32* %arrayidx102, align 4, !dbg !11098
  store i32 %136, i32* %tmp1101, align 4, !dbg !11099
  call void @llvm.dbg.declare(metadata i32* %tmp2103, metadata !11100, metadata !2019), !dbg !11101
  %137 = load i32, i32* %tmp099, align 4, !dbg !11102
  %138 = load i32, i32* %tmp1101, align 4, !dbg !11103
  %add104 = add i32 %137, %138, !dbg !11104
  %139 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 6, i64 0), align 16, !dbg !11105
  store i32 %add104, i32* %a.addr.i168, align 4, !dbg !11106
  store i32 %139, i32* %b.addr.i169, align 4, !dbg !11106
  %140 = load i32, i32* %a.addr.i168, align 4, !dbg !11107
  %conv.i170 = sext i32 %140 to i64, !dbg !11108
  %141 = load i32, i32* %b.addr.i169, align 4, !dbg !11109
  %conv1.i171 = sext i32 %141 to i64, !dbg !11110
  %mul.i172 = mul nsw i64 %conv.i170, %conv1.i171, !dbg !11111
  %shr.i173 = ashr i64 %mul.i172, 32, !dbg !11112
  %conv2.i174 = trunc i64 %shr.i173 to i32, !dbg !11113
  store i32 %conv2.i174, i32* %tmp2103, align 4, !dbg !11114
  %142 = load i32, i32* %tmp2103, align 4, !dbg !11115
  %143 = load i32, i32* %tmp1101, align 4, !dbg !11116
  %144 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 6, i64 2), align 8, !dbg !11117
  store i32 %143, i32* %a.addr.i161, align 4, !dbg !11118
  store i32 %144, i32* %b.addr.i162, align 4, !dbg !11118
  %145 = load i32, i32* %a.addr.i161, align 4, !dbg !11119
  %conv.i163 = sext i32 %145 to i64, !dbg !11120
  %146 = load i32, i32* %b.addr.i162, align 4, !dbg !11121
  %conv1.i164 = sext i32 %146 to i64, !dbg !11122
  %mul.i165 = mul nsw i64 %conv.i163, %conv1.i164, !dbg !11123
  %shr.i166 = ashr i64 %mul.i165, 32, !dbg !11124
  %conv2.i167 = trunc i64 %shr.i166 to i32, !dbg !11125
  %sub107 = sub i32 %142, %conv2.i167, !dbg !11126
  %mul108 = mul i32 4, %sub107, !dbg !11127
  %147 = load i32*, i32** %ptr, align 8, !dbg !11128
  %arrayidx109 = getelementptr inbounds i32, i32* %147, i64 -7, !dbg !11128
  store i32 %mul108, i32* %arrayidx109, align 4, !dbg !11129
  %148 = load i32, i32* %tmp2103, align 4, !dbg !11130
  %149 = load i32, i32* %tmp099, align 4, !dbg !11131
  %150 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 6, i64 3), align 4, !dbg !11132
  store i32 %149, i32* %a.addr.i154, align 4, !dbg !11133
  store i32 %150, i32* %b.addr.i155, align 4, !dbg !11133
  %151 = load i32, i32* %a.addr.i154, align 4, !dbg !11134
  %conv.i156 = sext i32 %151 to i64, !dbg !11135
  %152 = load i32, i32* %b.addr.i155, align 4, !dbg !11136
  %conv1.i157 = sext i32 %152 to i64, !dbg !11137
  %mul.i158 = mul nsw i64 %conv.i156, %conv1.i157, !dbg !11138
  %shr.i159 = ashr i64 %mul.i158, 32, !dbg !11139
  %conv2.i160 = trunc i64 %shr.i159 to i32, !dbg !11140
  %add111 = add i32 %148, %conv2.i160, !dbg !11141
  %mul112 = mul i32 4, %add111, !dbg !11142
  %153 = load i32*, i32** %ptr, align 8, !dbg !11143
  %arrayidx113 = getelementptr inbounds i32, i32* %153, i64 6, !dbg !11143
  store i32 %mul112, i32* %arrayidx113, align 4, !dbg !11144
  br label %do.end114, !dbg !11145

do.end114:                                        ; preds = %do.body98
  br label %do.body115, !dbg !11146, !llvm.loop !11147

do.body115:                                       ; preds = %do.end114
  call void @llvm.dbg.declare(metadata i32* %tmp0116, metadata !11148, metadata !2019), !dbg !11149
  %154 = load i32*, i32** %ptr, align 8, !dbg !11150
  %arrayidx117 = getelementptr inbounds i32, i32* %154, i64 -8, !dbg !11150
  %155 = load i32, i32* %arrayidx117, align 4, !dbg !11150
  store i32 %155, i32* %tmp0116, align 4, !dbg !11151
  call void @llvm.dbg.declare(metadata i32* %tmp1118, metadata !11152, metadata !2019), !dbg !11153
  %156 = load i32*, i32** %ptr, align 8, !dbg !11154
  %arrayidx119 = getelementptr inbounds i32, i32* %156, i64 7, !dbg !11154
  %157 = load i32, i32* %arrayidx119, align 4, !dbg !11154
  store i32 %157, i32* %tmp1118, align 4, !dbg !11155
  call void @llvm.dbg.declare(metadata i32* %tmp2120, metadata !11156, metadata !2019), !dbg !11157
  %158 = load i32, i32* %tmp0116, align 4, !dbg !11158
  %159 = load i32, i32* %tmp1118, align 4, !dbg !11159
  %add121 = add i32 %158, %159, !dbg !11160
  %160 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 7, i64 0), align 16, !dbg !11161
  store i32 %add121, i32* %a.addr.i147, align 4, !dbg !11162
  store i32 %160, i32* %b.addr.i148, align 4, !dbg !11162
  %161 = load i32, i32* %a.addr.i147, align 4, !dbg !11163
  %conv.i149 = sext i32 %161 to i64, !dbg !11164
  %162 = load i32, i32* %b.addr.i148, align 4, !dbg !11165
  %conv1.i150 = sext i32 %162 to i64, !dbg !11166
  %mul.i151 = mul nsw i64 %conv.i149, %conv1.i150, !dbg !11167
  %shr.i152 = ashr i64 %mul.i151, 32, !dbg !11168
  %conv2.i153 = trunc i64 %shr.i152 to i32, !dbg !11169
  store i32 %conv2.i153, i32* %tmp2120, align 4, !dbg !11170
  %163 = load i32, i32* %tmp2120, align 4, !dbg !11171
  %164 = load i32, i32* %tmp1118, align 4, !dbg !11172
  %165 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 7, i64 2), align 8, !dbg !11173
  store i32 %164, i32* %a.addr.i140, align 4, !dbg !11174
  store i32 %165, i32* %b.addr.i141, align 4, !dbg !11174
  %166 = load i32, i32* %a.addr.i140, align 4, !dbg !11175
  %conv.i142 = sext i32 %166 to i64, !dbg !11176
  %167 = load i32, i32* %b.addr.i141, align 4, !dbg !11177
  %conv1.i143 = sext i32 %167 to i64, !dbg !11178
  %mul.i144 = mul nsw i64 %conv.i142, %conv1.i143, !dbg !11179
  %shr.i145 = ashr i64 %mul.i144, 32, !dbg !11180
  %conv2.i146 = trunc i64 %shr.i145 to i32, !dbg !11181
  %sub124 = sub i32 %163, %conv2.i146, !dbg !11182
  %mul125 = mul i32 4, %sub124, !dbg !11183
  %168 = load i32*, i32** %ptr, align 8, !dbg !11184
  %arrayidx126 = getelementptr inbounds i32, i32* %168, i64 -8, !dbg !11184
  store i32 %mul125, i32* %arrayidx126, align 4, !dbg !11185
  %169 = load i32, i32* %tmp2120, align 4, !dbg !11186
  %170 = load i32, i32* %tmp0116, align 4, !dbg !11187
  %171 = load i32, i32* getelementptr inbounds ([8 x [4 x i32]], [8 x [4 x i32]]* @csa_table, i64 0, i64 7, i64 3), align 4, !dbg !11188
  store i32 %170, i32* %a.addr.i133, align 4, !dbg !11189
  store i32 %171, i32* %b.addr.i134, align 4, !dbg !11189
  %172 = load i32, i32* %a.addr.i133, align 4, !dbg !11190
  %conv.i135 = sext i32 %172 to i64, !dbg !11191
  %173 = load i32, i32* %b.addr.i134, align 4, !dbg !11192
  %conv1.i136 = sext i32 %173 to i64, !dbg !11193
  %mul.i137 = mul nsw i64 %conv.i135, %conv1.i136, !dbg !11194
  %shr.i138 = ashr i64 %mul.i137, 32, !dbg !11195
  %conv2.i139 = trunc i64 %shr.i138 to i32, !dbg !11196
  %add128 = add i32 %169, %conv2.i139, !dbg !11197
  %mul129 = mul i32 4, %add128, !dbg !11198
  %174 = load i32*, i32** %ptr, align 8, !dbg !11199
  %arrayidx130 = getelementptr inbounds i32, i32* %174, i64 7, !dbg !11199
  store i32 %mul129, i32* %arrayidx130, align 4, !dbg !11200
  br label %do.end131, !dbg !11201

do.end131:                                        ; preds = %do.body115
  %175 = load i32*, i32** %ptr, align 8, !dbg !11202
  %add.ptr132 = getelementptr inbounds i32, i32* %175, i64 18, !dbg !11202
  store i32* %add.ptr132, i32** %ptr, align 8, !dbg !11202
  br label %for.inc, !dbg !11203

for.inc:                                          ; preds = %do.end131
  %176 = load i32, i32* %i, align 4, !dbg !11204
  %dec = add nsw i32 %176, -1, !dbg !11204
  store i32 %dec, i32* %i, align 4, !dbg !11204
  br label %for.cond, !dbg !11206, !llvm.loop !11207

for.end:                                          ; preds = %if.then2, %for.cond
  ret void, !dbg !11209
}

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal void @imdct12(i32* %out, i32* %in) #1 !dbg !11210 {
entry:
  %a.addr.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i72, metadata !8251, metadata !2019), !dbg !11214
  %b.addr.i73 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i73, metadata !8264, metadata !2019), !dbg !11216
  %a.addr.i65 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i65, metadata !8251, metadata !2019), !dbg !11217
  %b.addr.i66 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i66, metadata !8264, metadata !2019), !dbg !11219
  %a.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i58, metadata !8251, metadata !2019), !dbg !11220
  %b.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i59, metadata !8264, metadata !2019), !dbg !11222
  %a.addr.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i51, metadata !8251, metadata !2019), !dbg !11223
  %b.addr.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i52, metadata !8264, metadata !2019), !dbg !11225
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8251, metadata !2019), !dbg !11226
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !8264, metadata !2019), !dbg !11228
  %out.addr = alloca i32*, align 8
  %in.addr = alloca i32*, align 8
  %in0 = alloca i32, align 4
  %in1 = alloca i32, align 4
  %in2 = alloca i32, align 4
  %in3 = alloca i32, align 4
  %in4 = alloca i32, align 4
  %in5 = alloca i32, align 4
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  store i32* %out, i32** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out.addr, metadata !11229, metadata !2019), !dbg !11230
  store i32* %in, i32** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %in.addr, metadata !11231, metadata !2019), !dbg !11232
  call void @llvm.dbg.declare(metadata i32* %in0, metadata !11233, metadata !2019), !dbg !11234
  call void @llvm.dbg.declare(metadata i32* %in1, metadata !11235, metadata !2019), !dbg !11236
  call void @llvm.dbg.declare(metadata i32* %in2, metadata !11237, metadata !2019), !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %in3, metadata !11239, metadata !2019), !dbg !11240
  call void @llvm.dbg.declare(metadata i32* %in4, metadata !11241, metadata !2019), !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %in5, metadata !11243, metadata !2019), !dbg !11244
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !11245, metadata !2019), !dbg !11246
  call void @llvm.dbg.declare(metadata i32* %t2, metadata !11247, metadata !2019), !dbg !11248
  %0 = load i32*, i32** %in.addr, align 8, !dbg !11249
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !11249
  %1 = load i32, i32* %arrayidx, align 4, !dbg !11249
  store i32 %1, i32* %in0, align 4, !dbg !11250
  %2 = load i32*, i32** %in.addr, align 8, !dbg !11251
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 3, !dbg !11251
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !11251
  %4 = load i32*, i32** %in.addr, align 8, !dbg !11252
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 0, !dbg !11252
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !11252
  %add = add i32 %3, %5, !dbg !11253
  store i32 %add, i32* %in1, align 4, !dbg !11254
  %6 = load i32*, i32** %in.addr, align 8, !dbg !11255
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 6, !dbg !11255
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !11255
  %8 = load i32*, i32** %in.addr, align 8, !dbg !11256
  %arrayidx4 = getelementptr inbounds i32, i32* %8, i64 3, !dbg !11256
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !11256
  %add5 = add i32 %7, %9, !dbg !11257
  store i32 %add5, i32* %in2, align 4, !dbg !11258
  %10 = load i32*, i32** %in.addr, align 8, !dbg !11259
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 9, !dbg !11259
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !11259
  %12 = load i32*, i32** %in.addr, align 8, !dbg !11260
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 6, !dbg !11260
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !11260
  %add8 = add i32 %11, %13, !dbg !11261
  store i32 %add8, i32* %in3, align 4, !dbg !11262
  %14 = load i32*, i32** %in.addr, align 8, !dbg !11263
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 12, !dbg !11263
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !11263
  %16 = load i32*, i32** %in.addr, align 8, !dbg !11264
  %arrayidx10 = getelementptr inbounds i32, i32* %16, i64 9, !dbg !11264
  %17 = load i32, i32* %arrayidx10, align 4, !dbg !11264
  %add11 = add i32 %15, %17, !dbg !11265
  store i32 %add11, i32* %in4, align 4, !dbg !11266
  %18 = load i32*, i32** %in.addr, align 8, !dbg !11267
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 15, !dbg !11267
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !11267
  %20 = load i32*, i32** %in.addr, align 8, !dbg !11268
  %arrayidx13 = getelementptr inbounds i32, i32* %20, i64 12, !dbg !11268
  %21 = load i32, i32* %arrayidx13, align 4, !dbg !11268
  %add14 = add i32 %19, %21, !dbg !11269
  store i32 %add14, i32* %in5, align 4, !dbg !11270
  %22 = load i32, i32* %in3, align 4, !dbg !11271
  %23 = load i32, i32* %in5, align 4, !dbg !11272
  %add15 = add i32 %23, %22, !dbg !11272
  store i32 %add15, i32* %in5, align 4, !dbg !11272
  %24 = load i32, i32* %in1, align 4, !dbg !11273
  %25 = load i32, i32* %in3, align 4, !dbg !11274
  %add16 = add i32 %25, %24, !dbg !11274
  store i32 %add16, i32* %in3, align 4, !dbg !11274
  %26 = load i32, i32* %in2, align 4, !dbg !11275
  %mul = mul i32 2, %26, !dbg !11276
  store i32 %mul, i32* %a.addr.i, align 4, !dbg !11277
  store i32 1859775393, i32* %b.addr.i, align 4, !dbg !11277
  %27 = load i32, i32* %a.addr.i, align 4, !dbg !11278
  %conv.i = sext i32 %27 to i64, !dbg !11279
  %28 = load i32, i32* %b.addr.i, align 4, !dbg !11280
  %conv1.i = sext i32 %28 to i64, !dbg !11281
  %mul.i = mul nsw i64 %conv.i, %conv1.i, !dbg !11282
  %shr.i = ashr i64 %mul.i, 32, !dbg !11283
  %conv2.i = trunc i64 %shr.i to i32, !dbg !11284
  store i32 %conv2.i, i32* %in2, align 4, !dbg !11285
  %29 = load i32, i32* %in3, align 4, !dbg !11286
  %mul17 = mul i32 4, %29, !dbg !11287
  store i32 %mul17, i32* %a.addr.i72, align 4, !dbg !11288
  store i32 1859775393, i32* %b.addr.i73, align 4, !dbg !11288
  %30 = load i32, i32* %a.addr.i72, align 4, !dbg !11289
  %conv.i74 = sext i32 %30 to i64, !dbg !11290
  %31 = load i32, i32* %b.addr.i73, align 4, !dbg !11291
  %conv1.i75 = sext i32 %31 to i64, !dbg !11292
  %mul.i76 = mul nsw i64 %conv.i74, %conv1.i75, !dbg !11293
  %shr.i77 = ashr i64 %mul.i76, 32, !dbg !11294
  %conv2.i78 = trunc i64 %shr.i77 to i32, !dbg !11295
  store i32 %conv2.i78, i32* %in3, align 4, !dbg !11296
  %32 = load i32, i32* %in0, align 4, !dbg !11297
  %33 = load i32, i32* %in4, align 4, !dbg !11298
  %sub = sub i32 %32, %33, !dbg !11299
  store i32 %sub, i32* %t1, align 4, !dbg !11300
  %34 = load i32, i32* %in1, align 4, !dbg !11301
  %35 = load i32, i32* %in5, align 4, !dbg !11302
  %sub19 = sub i32 %34, %35, !dbg !11303
  %mul20 = mul i32 2, %sub19, !dbg !11304
  store i32 %mul20, i32* %a.addr.i65, align 4, !dbg !11305
  store i32 1518500250, i32* %b.addr.i66, align 4, !dbg !11305
  %36 = load i32, i32* %a.addr.i65, align 4, !dbg !11306
  %conv.i67 = sext i32 %36 to i64, !dbg !11307
  %37 = load i32, i32* %b.addr.i66, align 4, !dbg !11308
  %conv1.i68 = sext i32 %37 to i64, !dbg !11309
  %mul.i69 = mul nsw i64 %conv.i67, %conv1.i68, !dbg !11310
  %shr.i70 = ashr i64 %mul.i69, 32, !dbg !11311
  %conv2.i71 = trunc i64 %shr.i70 to i32, !dbg !11312
  store i32 %conv2.i71, i32* %t2, align 4, !dbg !11313
  %38 = load i32, i32* %t1, align 4, !dbg !11314
  %39 = load i32, i32* %t2, align 4, !dbg !11315
  %add22 = add i32 %38, %39, !dbg !11316
  %40 = load i32*, i32** %out.addr, align 8, !dbg !11317
  %arrayidx23 = getelementptr inbounds i32, i32* %40, i64 10, !dbg !11317
  store i32 %add22, i32* %arrayidx23, align 4, !dbg !11318
  %41 = load i32*, i32** %out.addr, align 8, !dbg !11319
  %arrayidx24 = getelementptr inbounds i32, i32* %41, i64 7, !dbg !11319
  store i32 %add22, i32* %arrayidx24, align 4, !dbg !11320
  %42 = load i32, i32* %t1, align 4, !dbg !11321
  %43 = load i32, i32* %t2, align 4, !dbg !11322
  %sub25 = sub i32 %42, %43, !dbg !11323
  %44 = load i32*, i32** %out.addr, align 8, !dbg !11324
  %arrayidx26 = getelementptr inbounds i32, i32* %44, i64 4, !dbg !11324
  store i32 %sub25, i32* %arrayidx26, align 4, !dbg !11325
  %45 = load i32*, i32** %out.addr, align 8, !dbg !11326
  %arrayidx27 = getelementptr inbounds i32, i32* %45, i64 1, !dbg !11326
  store i32 %sub25, i32* %arrayidx27, align 4, !dbg !11327
  %46 = load i32, i32* %in4, align 4, !dbg !11328
  %shr = ashr i32 %46, 1, !dbg !11329
  %47 = load i32, i32* %in0, align 4, !dbg !11330
  %add28 = add i32 %47, %shr, !dbg !11330
  store i32 %add28, i32* %in0, align 4, !dbg !11330
  %48 = load i32, i32* %in0, align 4, !dbg !11331
  %49 = load i32, i32* %in2, align 4, !dbg !11332
  %add29 = add i32 %48, %49, !dbg !11333
  store i32 %add29, i32* %in4, align 4, !dbg !11334
  %50 = load i32, i32* %in1, align 4, !dbg !11335
  %mul30 = mul i32 2, %50, !dbg !11336
  %51 = load i32, i32* %in5, align 4, !dbg !11337
  %add31 = add i32 %51, %mul30, !dbg !11337
  store i32 %add31, i32* %in5, align 4, !dbg !11337
  %52 = load i32, i32* %in5, align 4, !dbg !11338
  %53 = load i32, i32* %in3, align 4, !dbg !11339
  %add32 = add i32 %52, %53, !dbg !11340
  %mul33 = mul i32 1, %add32, !dbg !11341
  store i32 %mul33, i32* %a.addr.i58, align 4, !dbg !11342
  store i32 1111619334, i32* %b.addr.i59, align 4, !dbg !11342
  %54 = load i32, i32* %a.addr.i58, align 4, !dbg !11343
  %conv.i60 = sext i32 %54 to i64, !dbg !11344
  %55 = load i32, i32* %b.addr.i59, align 4, !dbg !11345
  %conv1.i61 = sext i32 %55 to i64, !dbg !11346
  %mul.i62 = mul nsw i64 %conv.i60, %conv1.i61, !dbg !11347
  %shr.i63 = ashr i64 %mul.i62, 32, !dbg !11348
  %conv2.i64 = trunc i64 %shr.i63 to i32, !dbg !11349
  store i32 %conv2.i64, i32* %in1, align 4, !dbg !11350
  %56 = load i32, i32* %in4, align 4, !dbg !11351
  %57 = load i32, i32* %in1, align 4, !dbg !11352
  %add35 = add i32 %56, %57, !dbg !11353
  %58 = load i32*, i32** %out.addr, align 8, !dbg !11354
  %arrayidx36 = getelementptr inbounds i32, i32* %58, i64 9, !dbg !11354
  store i32 %add35, i32* %arrayidx36, align 4, !dbg !11355
  %59 = load i32*, i32** %out.addr, align 8, !dbg !11356
  %arrayidx37 = getelementptr inbounds i32, i32* %59, i64 8, !dbg !11356
  store i32 %add35, i32* %arrayidx37, align 4, !dbg !11357
  %60 = load i32, i32* %in4, align 4, !dbg !11358
  %61 = load i32, i32* %in1, align 4, !dbg !11359
  %sub38 = sub i32 %60, %61, !dbg !11360
  %62 = load i32*, i32** %out.addr, align 8, !dbg !11361
  %arrayidx39 = getelementptr inbounds i32, i32* %62, i64 3, !dbg !11361
  store i32 %sub38, i32* %arrayidx39, align 4, !dbg !11362
  %63 = load i32*, i32** %out.addr, align 8, !dbg !11363
  %arrayidx40 = getelementptr inbounds i32, i32* %63, i64 2, !dbg !11363
  store i32 %sub38, i32* %arrayidx40, align 4, !dbg !11364
  %64 = load i32, i32* %in2, align 4, !dbg !11365
  %65 = load i32, i32* %in0, align 4, !dbg !11366
  %sub41 = sub i32 %65, %64, !dbg !11366
  store i32 %sub41, i32* %in0, align 4, !dbg !11366
  %66 = load i32, i32* %in5, align 4, !dbg !11367
  %67 = load i32, i32* %in3, align 4, !dbg !11368
  %sub42 = sub i32 %66, %67, !dbg !11369
  %mul43 = mul i32 2, %sub42, !dbg !11370
  store i32 %mul43, i32* %a.addr.i51, align 4, !dbg !11371
  store i32 2074309917, i32* %b.addr.i52, align 4, !dbg !11371
  %68 = load i32, i32* %a.addr.i51, align 4, !dbg !11372
  %conv.i53 = sext i32 %68 to i64, !dbg !11373
  %69 = load i32, i32* %b.addr.i52, align 4, !dbg !11374
  %conv1.i54 = sext i32 %69 to i64, !dbg !11375
  %mul.i55 = mul nsw i64 %conv.i53, %conv1.i54, !dbg !11376
  %shr.i56 = ashr i64 %mul.i55, 32, !dbg !11377
  %conv2.i57 = trunc i64 %shr.i56 to i32, !dbg !11378
  store i32 %conv2.i57, i32* %in5, align 4, !dbg !11379
  %70 = load i32, i32* %in0, align 4, !dbg !11380
  %71 = load i32, i32* %in5, align 4, !dbg !11381
  %sub45 = sub i32 %70, %71, !dbg !11382
  %72 = load i32*, i32** %out.addr, align 8, !dbg !11383
  %arrayidx46 = getelementptr inbounds i32, i32* %72, i64 5, !dbg !11383
  store i32 %sub45, i32* %arrayidx46, align 4, !dbg !11384
  %73 = load i32*, i32** %out.addr, align 8, !dbg !11385
  %arrayidx47 = getelementptr inbounds i32, i32* %73, i64 0, !dbg !11385
  store i32 %sub45, i32* %arrayidx47, align 4, !dbg !11386
  %74 = load i32, i32* %in0, align 4, !dbg !11387
  %75 = load i32, i32* %in5, align 4, !dbg !11388
  %add48 = add i32 %74, %75, !dbg !11389
  %76 = load i32*, i32** %out.addr, align 8, !dbg !11390
  %arrayidx49 = getelementptr inbounds i32, i32* %76, i64 11, !dbg !11390
  store i32 %add48, i32* %arrayidx49, align 4, !dbg !11391
  %77 = load i32*, i32** %out.addr, align 8, !dbg !11392
  %arrayidx50 = getelementptr inbounds i32, i32* %77, i64 6, !dbg !11392
  store i32 %add48, i32* %arrayidx50, align 4, !dbg !11393
  ret void, !dbg !11394
}

; Function Attrs: nounwind uwtable
define internal void @switch_buffer(%struct.MPADecodeContext* %s, i32* %pos, i32* %end_pos, i32* %end_pos2) #1 !dbg !11395 {
entry:
  %s.addr = alloca %struct.MPADecodeContext*, align 8
  %pos.addr = alloca i32*, align 8
  %end_pos.addr = alloca i32*, align 8
  %end_pos2.addr = alloca i32*, align 8
  store %struct.MPADecodeContext* %s, %struct.MPADecodeContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %s.addr, metadata !11398, metadata !2019), !dbg !11399
  store i32* %pos, i32** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pos.addr, metadata !11400, metadata !2019), !dbg !11401
  store i32* %end_pos, i32** %end_pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %end_pos.addr, metadata !11402, metadata !2019), !dbg !11403
  store i32* %end_pos2, i32** %end_pos2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %end_pos2.addr, metadata !11404, metadata !2019), !dbg !11405
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11406
  %in_gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 15, !dbg !11408
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb, i32 0, i32 0, !dbg !11409
  %1 = load i8*, i8** %buffer, align 16, !dbg !11409
  %tobool = icmp ne i8* %1, null, !dbg !11406
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11410

land.lhs.true:                                    ; preds = %entry
  %2 = load i32*, i32** %pos.addr, align 8, !dbg !11411
  %3 = load i32, i32* %2, align 4, !dbg !11413
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11414
  %gb = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 14, !dbg !11415
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %gb, i32 0, i32 3, !dbg !11416
  %5 = load i32, i32* %size_in_bits, align 4, !dbg !11416
  %6 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11417
  %extrasize = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %6, i32 0, i32 12, !dbg !11418
  %7 = load i32, i32* %extrasize, align 4, !dbg !11418
  %mul = mul nsw i32 %7, 8, !dbg !11419
  %sub = sub nsw i32 %5, %mul, !dbg !11420
  %cmp = icmp sge i32 %3, %sub, !dbg !11421
  br i1 %cmp, label %if.then, label %if.end, !dbg !11422

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11423
  %gb1 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %8, i32 0, i32 14, !dbg !11425
  %9 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11426
  %in_gb2 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %9, i32 0, i32 15, !dbg !11427
  %10 = bitcast %struct.GetBitContext* %gb1 to i8*, !dbg !11427
  %11 = bitcast %struct.GetBitContext* %in_gb2 to i8*, !dbg !11427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 16, i1 false), !dbg !11427
  %12 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11428
  %in_gb3 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %12, i32 0, i32 15, !dbg !11429
  %buffer4 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %in_gb3, i32 0, i32 0, !dbg !11430
  store i8* null, i8** %buffer4, align 16, !dbg !11431
  %13 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11432
  %extrasize5 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %13, i32 0, i32 12, !dbg !11433
  store i32 0, i32* %extrasize5, align 4, !dbg !11434
  %14 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11435
  %gb6 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %14, i32 0, i32 14, !dbg !11436
  %15 = load i32*, i32** %pos.addr, align 8, !dbg !11437
  %16 = load i32, i32* %15, align 4, !dbg !11438
  %17 = load i32*, i32** %end_pos.addr, align 8, !dbg !11439
  %18 = load i32, i32* %17, align 4, !dbg !11440
  %sub7 = sub nsw i32 %16, %18, !dbg !11441
  call void @skip_bits_long(%struct.GetBitContext* %gb6, i32 %sub7), !dbg !11442
  %19 = load i32*, i32** %end_pos2.addr, align 8, !dbg !11443
  %20 = load i32, i32* %19, align 4, !dbg !11444
  %21 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11445
  %gb8 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %21, i32 0, i32 14, !dbg !11446
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb8), !dbg !11447
  %add = add nsw i32 %20, %call, !dbg !11448
  %22 = load i32*, i32** %pos.addr, align 8, !dbg !11449
  %23 = load i32, i32* %22, align 4, !dbg !11450
  %sub9 = sub nsw i32 %add, %23, !dbg !11451
  %24 = load i32*, i32** %end_pos.addr, align 8, !dbg !11452
  store i32 %sub9, i32* %24, align 4, !dbg !11453
  %25 = load i32*, i32** %end_pos2.addr, align 8, !dbg !11454
  store i32 %sub9, i32* %25, align 4, !dbg !11455
  %26 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %s.addr, align 8, !dbg !11456
  %gb10 = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %26, i32 0, i32 14, !dbg !11457
  %call11 = call i32 @get_bits_count(%struct.GetBitContext* %gb10), !dbg !11458
  %27 = load i32*, i32** %pos.addr, align 8, !dbg !11459
  store i32 %call11, i32* %27, align 4, !dbg !11460
  br label %if.end, !dbg !11461

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !11462
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @l3_unscale(i32 %value, i32 %exponent) #7 !dbg !11463 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %exponent.addr = alloca i32, align 4
  %m = alloca i32, align 4
  %e = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11464, metadata !2019), !dbg !11465
  store i32 %exponent, i32* %exponent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exponent.addr, metadata !11466, metadata !2019), !dbg !11467
  call void @llvm.dbg.declare(metadata i32* %m, metadata !11468, metadata !2019), !dbg !11469
  call void @llvm.dbg.declare(metadata i32* %e, metadata !11470, metadata !2019), !dbg !11471
  %0 = load i32, i32* %value.addr, align 4, !dbg !11472
  %mul = mul nsw i32 4, %0, !dbg !11473
  %1 = load i32, i32* %exponent.addr, align 4, !dbg !11474
  %and = and i32 %1, 3, !dbg !11475
  %add = add nsw i32 %mul, %and, !dbg !11476
  %idxprom = sext i32 %add to i64, !dbg !11477
  %arrayidx = getelementptr inbounds [32828 x i8], [32828 x i8]* @table_4_3_exp, i64 0, i64 %idxprom, !dbg !11477
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11477
  %conv = sext i8 %2 to i32, !dbg !11477
  store i32 %conv, i32* %e, align 4, !dbg !11478
  %3 = load i32, i32* %value.addr, align 4, !dbg !11479
  %mul1 = mul nsw i32 4, %3, !dbg !11480
  %4 = load i32, i32* %exponent.addr, align 4, !dbg !11481
  %and2 = and i32 %4, 3, !dbg !11482
  %add3 = add nsw i32 %mul1, %and2, !dbg !11483
  %idxprom4 = sext i32 %add3 to i64, !dbg !11484
  %arrayidx5 = getelementptr inbounds [32828 x i32], [32828 x i32]* @table_4_3_value, i64 0, i64 %idxprom4, !dbg !11484
  %5 = load i32, i32* %arrayidx5, align 4, !dbg !11484
  store i32 %5, i32* %m, align 4, !dbg !11485
  %6 = load i32, i32* %exponent.addr, align 4, !dbg !11486
  %shr = ashr i32 %6, 2, !dbg !11487
  %7 = load i32, i32* %e, align 4, !dbg !11488
  %sub = sub nsw i32 %7, %shr, !dbg !11488
  store i32 %sub, i32* %e, align 4, !dbg !11488
  %8 = load i32, i32* %e, align 4, !dbg !11489
  %cmp = icmp ugt i32 %8, 31, !dbg !11491
  br i1 %cmp, label %if.then, label %if.end, !dbg !11492

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11493
  br label %return, !dbg !11493

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %m, align 4, !dbg !11494
  %10 = load i32, i32* %e, align 4, !dbg !11495
  %shl = shl i32 1, %10, !dbg !11496
  %shr7 = lshr i32 %shl, 1, !dbg !11497
  %add8 = add i32 %9, %shr7, !dbg !11498
  %11 = load i32, i32* %e, align 4, !dbg !11499
  %shr9 = lshr i32 %add8, %11, !dbg !11500
  store i32 %shr9, i32* %m, align 4, !dbg !11501
  %12 = load i32, i32* %m, align 4, !dbg !11502
  store i32 %12, i32* %retval, align 4, !dbg !11503
  br label %return, !dbg !11503

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !11504
  ret i32 %13, !dbg !11504
}

; Function Attrs: nounwind uwtable
define internal void @mp_flush(%struct.MPADecodeContext* %ctx) #1 !dbg !11505 {
entry:
  %ctx.addr = alloca %struct.MPADecodeContext*, align 8
  store %struct.MPADecodeContext* %ctx, %struct.MPADecodeContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPADecodeContext** %ctx.addr, metadata !11508, metadata !2019), !dbg !11509
  %0 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11510
  %synth_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %0, i32 0, i32 17, !dbg !11511
  %arraydecay = getelementptr inbounds [2 x [1024 x i32]], [2 x [1024 x i32]]* %synth_buf, i32 0, i32 0, !dbg !11512
  %1 = bitcast [1024 x i32]* %arraydecay to i8*, !dbg !11512
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 8192, i32 32, i1 false), !dbg !11512
  %2 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11513
  %mdct_buf = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %2, i32 0, i32 21, !dbg !11514
  %arraydecay1 = getelementptr inbounds [2 x [576 x i32]], [2 x [576 x i32]]* %mdct_buf, i32 0, i32 0, !dbg !11515
  %3 = bitcast [576 x i32]* %arraydecay1 to i8*, !dbg !11515
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 4608, i32 32, i1 false), !dbg !11515
  %4 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11516
  %last_buf_size = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %4, i32 0, i32 11, !dbg !11517
  store i32 0, i32* %last_buf_size, align 32, !dbg !11518
  %5 = load %struct.MPADecodeContext*, %struct.MPADecodeContext** %ctx.addr, align 8, !dbg !11519
  %dither_state = getelementptr inbounds %struct.MPADecodeContext, %struct.MPADecodeContext* %5, i32 0, i32 24, !dbg !11520
  store i32 0, i32* %dither_state, align 4, !dbg !11521
  ret void, !dbg !11522
}

declare i32 @avpriv_mpeg4audio_get_config(%struct.MPEG4AudioConfig*, i8*, i32, i32) #3

declare noalias i8* @av_mallocz(i64) #3

declare void @av_freep(i8*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2015, !2016}
!llvm.ident = !{!2017}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !887, globals: !934)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--mpegaudiodec_fixed.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !{!888, !891, !892, !893, !894, !895, !902, !917, !923, !925, !927}
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !889, line: 40, baseType: !890)
!889 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!890 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!891 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!893 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!894 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64, align: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !898, line: 221, size: 32, align: 8, elements: !899)
!898 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !{!900}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !897, file: !898, line: 221, baseType: !901, size: 32, align: 32)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !889, line: 51, baseType: !894)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64, align: 64)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPADecodeHeader", file: !904, line: 48, baseType: !905)
!904 = !DIFile(filename: "libavcodec/mpegaudiodecheader.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPADecodeHeader", file: !904, line: 46, size: 320, align: 32, elements: !906)
!906 = !{!907, !908, !909, !910, !911, !912, !913, !914, !915, !916}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "error_protection", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 96)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate_index", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 160)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 192)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 224)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "mode_ext", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 256)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "lsf", scope: !905, file: !904, line: 47, baseType: !891, size: 32, align: 32, offset: 288)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64, align: 64)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "OUT_INT", file: !920, line: 76, baseType: !921)
!920 = !DIFile(filename: "libavcodec/mpegaudio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !889, line: 37, baseType: !922)
!922 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !889, line: 48, baseType: !924)
!924 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !889, line: 38, baseType: !891)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !898, line: 222, size: 16, align: 8, elements: !930)
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !929, file: !898, line: 222, baseType: !932, size: 16, align: 16)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !889, line: 49, baseType: !933)
!933 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!934 = !{!935, !1659, !1660, !1661, !1662, !1663, !1667, !1671, !1676, !1690, !1692, !1694, !1698, !1700, !1701, !1702, !1704, !1706, !1707, !1708, !1712, !1714, !1715, !1716, !1717, !1718, !1720, !1722, !1723, !1724, !1725, !1726, !1730, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1743, !1756, !1758, !1762, !1764, !1766, !1769, !1770, !1774, !1778, !1785, !1787, !1791, !1793, !1797, !1799, !1802, !1804, !1808, !1810, !1812, !1816, !1818, !1821, !1824, !1827, !1831, !1832, !1836, !1839, !1843, !2003, !2006, !2008, !2012}
!935 = distinct !DIGlobalVariable(name: "ff_mp1_decoder", scope: !0, file: !936, line: 42, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp1_decoder)
!936 = !DIFile(filename: "libavcodec/mpegaudiodec_fixed.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !939)
!939 = !{!940, !944, !945, !946, !947, !948, !957, !960, !963, !966, !971, !972, !1013, !1021, !1022, !1023, !1025, !1574, !1580, !1588, !1592, !1593, !1630, !1634, !1638, !1639, !1643, !1647, !1648, !1652, !1653, !1654}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !938, file: !14, line: 3475, baseType: !941, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !938, file: !14, line: 3480, baseType: !941, size: 64, align: 64, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !938, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !938, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !938, file: !14, line: 3487, baseType: !891, size: 32, align: 32, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !938, file: !14, line: 3488, baseType: !949, size: 64, align: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !952, line: 61, baseType: !953)
!952 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !952, line: 58, size: 64, align: 32, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !953, file: !952, line: 59, baseType: !891, size: 32, align: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !953, file: !952, line: 60, baseType: !891, size: 32, align: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !938, file: !14, line: 3489, baseType: !958, size: 64, align: 64, offset: 320)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !938, file: !14, line: 3490, baseType: !961, size: 64, align: 64, offset: 384)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64, align: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !938, file: !14, line: 3491, baseType: !964, size: 64, align: 64, offset: 448)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !938, file: !14, line: 3492, baseType: !967, size: 64, align: 64, offset: 512)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !889, line: 55, baseType: !970)
!970 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !938, file: !14, line: 3493, baseType: !923, size: 8, align: 8, offset: 576)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !938, file: !14, line: 3494, baseType: !973, size: 64, align: 64, offset: 640)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !977)
!977 = !{!978, !979, !983, !987, !988, !989, !990, !994, !1000, !1002, !1006}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !976, file: !691, line: 72, baseType: !941, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !976, file: !691, line: 78, baseType: !980, size: 64, align: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!941, !892}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !976, file: !691, line: 85, baseType: !984, size: 64, align: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !976, file: !691, line: 93, baseType: !891, size: 32, align: 32, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !976, file: !691, line: 99, baseType: !891, size: 32, align: 32, offset: 224)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !976, file: !691, line: 108, baseType: !891, size: 32, align: 32, offset: 256)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !976, file: !691, line: 113, baseType: !991, size: 64, align: 64, offset: 320)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!892, !892, !892}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !976, file: !691, line: 123, baseType: !995, size: 64, align: 64, offset: 384)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!998, !998}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !976, file: !691, line: 130, baseType: !1001, size: 32, align: 32, offset: 448)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !976, file: !691, line: 136, baseType: !1003, size: 64, align: 64, offset: 512)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!1001, !892}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !976, file: !691, line: 142, baseType: !1007, size: 64, align: 64, offset: 576)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!891, !1010, !892, !941, !891}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !938, file: !14, line: 3495, baseType: !1014, size: 64, align: 64, offset: 704)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1017, file: !14, line: 3402, baseType: !891, size: 32, align: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1017, file: !14, line: 3403, baseType: !941, size: 64, align: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !938, file: !14, line: 3507, baseType: !941, size: 64, align: 64, offset: 768)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !938, file: !14, line: 3516, baseType: !891, size: 32, align: 32, offset: 832)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !938, file: !14, line: 3517, baseType: !1024, size: 64, align: 64, offset: 896)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64, align: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !938, file: !14, line: 3527, baseType: !1026, size: 64, align: 64, offset: 960)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!891, !1029}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1039, !1040, !1041, !1042, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1322, !1326, !1327, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1512, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1031, file: !14, line: 1561, baseType: !973, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1031, file: !14, line: 1562, baseType: !891, size: 32, align: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1031, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1031, file: !14, line: 1565, baseType: !1037, size: 64, align: 64, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1031, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1031, file: !14, line: 1581, baseType: !894, size: 32, align: 32, offset: 224)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1031, file: !14, line: 1583, baseType: !892, size: 64, align: 64, offset: 256)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1031, file: !14, line: 1591, baseType: !1043, size: 64, align: 64, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1045, line: 129, size: 1664, align: 64, elements: !1046)
!1045 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1046 = !{!1047, !1048, !1049, !1050, !1148, !1169, !1170, !1199, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1044, file: !1045, line: 136, baseType: !891, size: 32, align: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1044, file: !1045, line: 151, baseType: !891, size: 32, align: 32, offset: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1044, file: !1045, line: 157, baseType: !891, size: 32, align: 32, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1044, file: !1045, line: 159, baseType: !1051, size: 64, align: 64, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1054)
!1054 = !{!1055, !1060, !1062, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1100, !1102, !1103, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1136, !1137, !1138, !1139, !1140, !1141, !1144, !1145, !1146, !1147}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1053, file: !722, line: 282, baseType: !1056, size: 512, align: 64)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 512, align: 64, elements: !1058)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64, align: 64)
!1058 = !{!1059}
!1059 = !DISubrange(count: 8)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1053, file: !722, line: 299, baseType: !1061, size: 256, align: 32, offset: 512)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 256, align: 32, elements: !1058)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1053, file: !722, line: 315, baseType: !1063, size: 64, align: 64, offset: 768)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1053, file: !722, line: 326, baseType: !891, size: 32, align: 32, offset: 832)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1053, file: !722, line: 326, baseType: !891, size: 32, align: 32, offset: 864)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1053, file: !722, line: 334, baseType: !891, size: 32, align: 32, offset: 896)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1053, file: !722, line: 341, baseType: !891, size: 32, align: 32, offset: 928)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1053, file: !722, line: 346, baseType: !891, size: 32, align: 32, offset: 960)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1053, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1053, file: !722, line: 356, baseType: !951, size: 64, align: 32, offset: 1024)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1053, file: !722, line: 361, baseType: !888, size: 64, align: 64, offset: 1088)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1053, file: !722, line: 369, baseType: !888, size: 64, align: 64, offset: 1152)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1053, file: !722, line: 377, baseType: !888, size: 64, align: 64, offset: 1216)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1053, file: !722, line: 382, baseType: !891, size: 32, align: 32, offset: 1280)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1053, file: !722, line: 386, baseType: !891, size: 32, align: 32, offset: 1312)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1053, file: !722, line: 391, baseType: !891, size: 32, align: 32, offset: 1344)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1053, file: !722, line: 396, baseType: !892, size: 64, align: 64, offset: 1408)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1053, file: !722, line: 403, baseType: !1079, size: 512, align: 64, offset: 1472)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 512, align: 64, elements: !1058)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1053, file: !722, line: 410, baseType: !891, size: 32, align: 32, offset: 1984)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1053, file: !722, line: 415, baseType: !891, size: 32, align: 32, offset: 2016)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1053, file: !722, line: 420, baseType: !891, size: 32, align: 32, offset: 2048)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1053, file: !722, line: 425, baseType: !891, size: 32, align: 32, offset: 2080)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1053, file: !722, line: 435, baseType: !888, size: 64, align: 64, offset: 2112)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1053, file: !722, line: 440, baseType: !891, size: 32, align: 32, offset: 2176)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1053, file: !722, line: 445, baseType: !969, size: 64, align: 64, offset: 2240)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1053, file: !722, line: 459, baseType: !1088, size: 512, align: 64, offset: 2304)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1089, size: 512, align: 64, elements: !1058)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1091, line: 94, baseType: !1092)
!1091 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1091, line: 81, size: 192, align: 64, elements: !1093)
!1093 = !{!1094, !1098, !1099}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1092, file: !1091, line: 82, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1091, line: 73, baseType: !1097)
!1097 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1091, line: 73, flags: DIFlagFwdDecl)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1092, file: !1091, line: 89, baseType: !1057, size: 64, align: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1092, file: !1091, line: 93, baseType: !891, size: 32, align: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1053, file: !722, line: 473, baseType: !1101, size: 64, align: 64, offset: 2816)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1053, file: !722, line: 477, baseType: !891, size: 32, align: 32, offset: 2880)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1053, file: !722, line: 479, baseType: !1104, size: 64, align: 64, offset: 2944)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1112, !1117}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1107, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1107, file: !722, line: 203, baseType: !1057, size: 64, align: 64, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1107, file: !722, line: 204, baseType: !891, size: 32, align: 32, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1107, file: !722, line: 205, baseType: !1113, size: 64, align: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1115, line: 86, baseType: !1116)
!1115 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1116 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1115, line: 86, flags: DIFlagFwdDecl)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1107, file: !722, line: 206, baseType: !1089, size: 64, align: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1053, file: !722, line: 480, baseType: !891, size: 32, align: 32, offset: 3008)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1053, file: !722, line: 505, baseType: !891, size: 32, align: 32, offset: 3040)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1053, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1053, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1053, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1053, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1053, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1053, file: !722, line: 532, baseType: !888, size: 64, align: 64, offset: 3264)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1053, file: !722, line: 539, baseType: !888, size: 64, align: 64, offset: 3328)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1053, file: !722, line: 547, baseType: !888, size: 64, align: 64, offset: 3392)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1053, file: !722, line: 554, baseType: !1113, size: 64, align: 64, offset: 3456)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1053, file: !722, line: 563, baseType: !891, size: 32, align: 32, offset: 3520)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1053, file: !722, line: 572, baseType: !891, size: 32, align: 32, offset: 3552)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1053, file: !722, line: 581, baseType: !891, size: 32, align: 32, offset: 3584)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1053, file: !722, line: 588, baseType: !1133, size: 64, align: 64, offset: 3648)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !889, line: 36, baseType: !1135)
!1135 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1053, file: !722, line: 593, baseType: !891, size: 32, align: 32, offset: 3712)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1053, file: !722, line: 596, baseType: !891, size: 32, align: 32, offset: 3744)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1053, file: !722, line: 599, baseType: !1089, size: 64, align: 64, offset: 3776)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1053, file: !722, line: 605, baseType: !1089, size: 64, align: 64, offset: 3840)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1053, file: !722, line: 616, baseType: !1089, size: 64, align: 64, offset: 3904)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1053, file: !722, line: 626, baseType: !1142, size: 64, align: 64, offset: 3968)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1143, line: 216, baseType: !970)
!1143 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1053, file: !722, line: 627, baseType: !1142, size: 64, align: 64, offset: 4032)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1053, file: !722, line: 628, baseType: !1142, size: 64, align: 64, offset: 4096)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1053, file: !722, line: 629, baseType: !1142, size: 64, align: 64, offset: 4160)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1053, file: !722, line: 645, baseType: !1089, size: 64, align: 64, offset: 4224)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1044, file: !1045, line: 161, baseType: !1149, size: 64, align: 64, offset: 192)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1045, line: 117, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1045, line: 100, size: 832, align: 64, elements: !1152)
!1152 = !{!1153, !1160, !1161, !1162, !1163, !1164, !1166, !1167, !1168}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1151, file: !1045, line: 105, baseType: !1154, size: 256, align: 64)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 256, align: 64, elements: !1158)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1091, line: 238, baseType: !1157)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1091, line: 238, flags: DIFlagFwdDecl)
!1158 = !{!1159}
!1159 = !DISubrange(count: 4)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1151, file: !1045, line: 110, baseType: !891, size: 32, align: 32, offset: 256)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1151, file: !1045, line: 111, baseType: !891, size: 32, align: 32, offset: 288)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1151, file: !1045, line: 111, baseType: !891, size: 32, align: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1151, file: !1045, line: 112, baseType: !1061, size: 256, align: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1151, file: !1045, line: 113, baseType: !1165, size: 128, align: 32, offset: 608)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 128, align: 32, elements: !1158)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1151, file: !1045, line: 114, baseType: !891, size: 32, align: 32, offset: 736)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1151, file: !1045, line: 115, baseType: !891, size: 32, align: 32, offset: 768)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1151, file: !1045, line: 116, baseType: !891, size: 32, align: 32, offset: 800)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1044, file: !1045, line: 163, baseType: !892, size: 64, align: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1044, file: !1045, line: 165, baseType: !1171, size: 128, align: 64, offset: 320)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1045, line: 122, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1045, line: 119, size: 128, align: 64, elements: !1173)
!1173 = !{!1174, !1198}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1172, file: !1045, line: 120, baseType: !1175, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1194, !1195, !1196, !1197}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1177, file: !14, line: 1451, baseType: !1089, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1177, file: !14, line: 1461, baseType: !888, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1177, file: !14, line: 1467, baseType: !888, size: 64, align: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1177, file: !14, line: 1468, baseType: !1057, size: 64, align: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1177, file: !14, line: 1469, baseType: !891, size: 32, align: 32, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1177, file: !14, line: 1470, baseType: !891, size: 32, align: 32, offset: 288)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1177, file: !14, line: 1474, baseType: !891, size: 32, align: 32, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1177, file: !14, line: 1479, baseType: !1187, size: 64, align: 64, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1189, file: !14, line: 1412, baseType: !1057, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1189, file: !14, line: 1413, baseType: !891, size: 32, align: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1189, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1177, file: !14, line: 1480, baseType: !891, size: 32, align: 32, offset: 448)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1177, file: !14, line: 1486, baseType: !888, size: 64, align: 64, offset: 512)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1177, file: !14, line: 1488, baseType: !888, size: 64, align: 64, offset: 576)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1177, file: !14, line: 1497, baseType: !888, size: 64, align: 64, offset: 640)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1172, file: !1045, line: 121, baseType: !1051, size: 64, align: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1044, file: !1045, line: 166, baseType: !1200, size: 128, align: 64, offset: 448)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1045, line: 127, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1045, line: 124, size: 128, align: 64, elements: !1202)
!1202 = !{!1203, !1276}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1201, file: !1045, line: 125, baseType: !1204, size: 64, align: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1208)
!1208 = !{!1209, !1210, !1234, !1238, !1239, !1273, !1274, !1275}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1207, file: !14, line: 5751, baseType: !973, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1207, file: !14, line: 5756, baseType: !1211, size: 64, align: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1219, !1220, !1221, !1225, !1229, !1233}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1213, file: !14, line: 5797, baseType: !941, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1213, file: !14, line: 5804, baseType: !1217, size: 64, align: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1213, file: !14, line: 5815, baseType: !973, size: 64, align: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1213, file: !14, line: 5825, baseType: !891, size: 32, align: 32, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1213, file: !14, line: 5826, baseType: !1222, size: 64, align: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!891, !1205}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1213, file: !14, line: 5827, baseType: !1226, size: 64, align: 64, offset: 320)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!891, !1205, !1175}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1213, file: !14, line: 5828, baseType: !1230, size: 64, align: 64, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{null, !1205}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1213, file: !14, line: 5829, baseType: !1230, size: 64, align: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1207, file: !14, line: 5762, baseType: !1235, size: 64, align: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1237)
!1237 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1207, file: !14, line: 5768, baseType: !892, size: 64, align: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1207, file: !14, line: 5775, baseType: !1240, size: 64, align: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1242, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1242, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1242, file: !14, line: 3948, baseType: !901, size: 32, align: 32, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1242, file: !14, line: 3958, baseType: !1057, size: 64, align: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1242, file: !14, line: 3962, baseType: !891, size: 32, align: 32, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1242, file: !14, line: 3968, baseType: !891, size: 32, align: 32, offset: 224)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1242, file: !14, line: 3973, baseType: !888, size: 64, align: 64, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1242, file: !14, line: 3986, baseType: !891, size: 32, align: 32, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1242, file: !14, line: 3999, baseType: !891, size: 32, align: 32, offset: 352)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1242, file: !14, line: 4004, baseType: !891, size: 32, align: 32, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1242, file: !14, line: 4005, baseType: !891, size: 32, align: 32, offset: 416)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1242, file: !14, line: 4010, baseType: !891, size: 32, align: 32, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1242, file: !14, line: 4011, baseType: !891, size: 32, align: 32, offset: 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1242, file: !14, line: 4020, baseType: !951, size: 64, align: 32, offset: 512)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1242, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1242, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1242, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1242, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1242, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1242, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1242, file: !14, line: 4039, baseType: !891, size: 32, align: 32, offset: 768)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1242, file: !14, line: 4046, baseType: !969, size: 64, align: 64, offset: 832)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1242, file: !14, line: 4050, baseType: !891, size: 32, align: 32, offset: 896)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1242, file: !14, line: 4054, baseType: !891, size: 32, align: 32, offset: 928)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1242, file: !14, line: 4061, baseType: !891, size: 32, align: 32, offset: 960)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1242, file: !14, line: 4065, baseType: !891, size: 32, align: 32, offset: 992)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1242, file: !14, line: 4073, baseType: !891, size: 32, align: 32, offset: 1024)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1242, file: !14, line: 4080, baseType: !891, size: 32, align: 32, offset: 1056)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1242, file: !14, line: 4084, baseType: !891, size: 32, align: 32, offset: 1088)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1207, file: !14, line: 5781, baseType: !1240, size: 64, align: 64, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1207, file: !14, line: 5787, baseType: !951, size: 64, align: 32, offset: 384)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1207, file: !14, line: 5793, baseType: !951, size: 64, align: 32, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1201, file: !1045, line: 126, baseType: !891, size: 32, align: 32, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1044, file: !1045, line: 172, baseType: !1175, size: 64, align: 64, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1044, file: !1045, line: 177, baseType: !1057, size: 64, align: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1044, file: !1045, line: 178, baseType: !894, size: 32, align: 32, offset: 704)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1044, file: !1045, line: 180, baseType: !892, size: 64, align: 64, offset: 768)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1044, file: !1045, line: 185, baseType: !891, size: 32, align: 32, offset: 832)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1044, file: !1045, line: 190, baseType: !892, size: 64, align: 64, offset: 896)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1044, file: !1045, line: 195, baseType: !891, size: 32, align: 32, offset: 960)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1044, file: !1045, line: 200, baseType: !1175, size: 64, align: 64, offset: 1024)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1044, file: !1045, line: 201, baseType: !891, size: 32, align: 32, offset: 1088)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1044, file: !1045, line: 202, baseType: !1051, size: 64, align: 64, offset: 1152)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1044, file: !1045, line: 203, baseType: !891, size: 32, align: 32, offset: 1216)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1044, file: !1045, line: 205, baseType: !891, size: 32, align: 32, offset: 1248)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1044, file: !1045, line: 206, baseType: !891, size: 32, align: 32, offset: 1280)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1044, file: !1045, line: 209, baseType: !1142, size: 64, align: 64, offset: 1344)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1044, file: !1045, line: 212, baseType: !1142, size: 64, align: 64, offset: 1408)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1044, file: !1045, line: 213, baseType: !1051, size: 64, align: 64, offset: 1472)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1044, file: !1045, line: 215, baseType: !891, size: 32, align: 32, offset: 1536)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1044, file: !1045, line: 217, baseType: !891, size: 32, align: 32, offset: 1568)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1044, file: !1045, line: 220, baseType: !891, size: 32, align: 32, offset: 1600)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1031, file: !14, line: 1598, baseType: !892, size: 64, align: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1031, file: !14, line: 1606, baseType: !888, size: 64, align: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1031, file: !14, line: 1614, baseType: !891, size: 32, align: 32, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1031, file: !14, line: 1622, baseType: !891, size: 32, align: 32, offset: 544)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1031, file: !14, line: 1628, baseType: !891, size: 32, align: 32, offset: 576)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1031, file: !14, line: 1636, baseType: !891, size: 32, align: 32, offset: 608)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1031, file: !14, line: 1643, baseType: !891, size: 32, align: 32, offset: 640)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1031, file: !14, line: 1657, baseType: !1057, size: 64, align: 64, offset: 704)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1031, file: !14, line: 1658, baseType: !891, size: 32, align: 32, offset: 768)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1031, file: !14, line: 1679, baseType: !951, size: 64, align: 32, offset: 800)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1031, file: !14, line: 1688, baseType: !891, size: 32, align: 32, offset: 864)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1031, file: !14, line: 1712, baseType: !891, size: 32, align: 32, offset: 896)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1031, file: !14, line: 1729, baseType: !891, size: 32, align: 32, offset: 928)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1031, file: !14, line: 1729, baseType: !891, size: 32, align: 32, offset: 960)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1031, file: !14, line: 1744, baseType: !891, size: 32, align: 32, offset: 992)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1031, file: !14, line: 1744, baseType: !891, size: 32, align: 32, offset: 1024)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1031, file: !14, line: 1751, baseType: !891, size: 32, align: 32, offset: 1056)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1031, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1031, file: !14, line: 1791, baseType: !1315, size: 64, align: 64, offset: 1152)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{null, !1318, !1319, !1321, !891, !891, !891}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64, align: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1031, file: !14, line: 1808, baseType: !1323, size: 64, align: 64, offset: 1216)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!473, !1318, !958}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1031, file: !14, line: 1816, baseType: !891, size: 32, align: 32, offset: 1280)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1031, file: !14, line: 1825, baseType: !1328, size: 32, align: 32, offset: 1312)
!1328 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1031, file: !14, line: 1830, baseType: !891, size: 32, align: 32, offset: 1344)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1031, file: !14, line: 1838, baseType: !1328, size: 32, align: 32, offset: 1376)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1031, file: !14, line: 1846, baseType: !891, size: 32, align: 32, offset: 1408)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1031, file: !14, line: 1851, baseType: !891, size: 32, align: 32, offset: 1440)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1031, file: !14, line: 1861, baseType: !1328, size: 32, align: 32, offset: 1472)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1031, file: !14, line: 1868, baseType: !1328, size: 32, align: 32, offset: 1504)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1031, file: !14, line: 1875, baseType: !1328, size: 32, align: 32, offset: 1536)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1031, file: !14, line: 1882, baseType: !1328, size: 32, align: 32, offset: 1568)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1031, file: !14, line: 1889, baseType: !1328, size: 32, align: 32, offset: 1600)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1031, file: !14, line: 1896, baseType: !1328, size: 32, align: 32, offset: 1632)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1031, file: !14, line: 1903, baseType: !1328, size: 32, align: 32, offset: 1664)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1031, file: !14, line: 1910, baseType: !891, size: 32, align: 32, offset: 1696)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1031, file: !14, line: 1915, baseType: !891, size: 32, align: 32, offset: 1728)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1031, file: !14, line: 1926, baseType: !1321, size: 64, align: 64, offset: 1792)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1031, file: !14, line: 1935, baseType: !951, size: 64, align: 32, offset: 1856)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1031, file: !14, line: 1942, baseType: !891, size: 32, align: 32, offset: 1920)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1031, file: !14, line: 1948, baseType: !891, size: 32, align: 32, offset: 1952)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1031, file: !14, line: 1954, baseType: !891, size: 32, align: 32, offset: 1984)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1031, file: !14, line: 1960, baseType: !891, size: 32, align: 32, offset: 2016)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1031, file: !14, line: 1984, baseType: !891, size: 32, align: 32, offset: 2048)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1031, file: !14, line: 1991, baseType: !891, size: 32, align: 32, offset: 2080)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1031, file: !14, line: 1996, baseType: !891, size: 32, align: 32, offset: 2112)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1031, file: !14, line: 2004, baseType: !891, size: 32, align: 32, offset: 2144)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1031, file: !14, line: 2011, baseType: !891, size: 32, align: 32, offset: 2176)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1031, file: !14, line: 2018, baseType: !891, size: 32, align: 32, offset: 2208)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1031, file: !14, line: 2027, baseType: !891, size: 32, align: 32, offset: 2240)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1031, file: !14, line: 2034, baseType: !891, size: 32, align: 32, offset: 2272)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1031, file: !14, line: 2044, baseType: !891, size: 32, align: 32, offset: 2304)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1031, file: !14, line: 2054, baseType: !1358, size: 64, align: 64, offset: 2368)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64, align: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1031, file: !14, line: 2061, baseType: !1358, size: 64, align: 64, offset: 2432)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1031, file: !14, line: 2066, baseType: !891, size: 32, align: 32, offset: 2496)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1031, file: !14, line: 2070, baseType: !891, size: 32, align: 32, offset: 2528)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1031, file: !14, line: 2078, baseType: !891, size: 32, align: 32, offset: 2560)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1031, file: !14, line: 2085, baseType: !891, size: 32, align: 32, offset: 2592)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1031, file: !14, line: 2092, baseType: !891, size: 32, align: 32, offset: 2624)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1031, file: !14, line: 2099, baseType: !891, size: 32, align: 32, offset: 2656)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1031, file: !14, line: 2106, baseType: !891, size: 32, align: 32, offset: 2688)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1031, file: !14, line: 2113, baseType: !891, size: 32, align: 32, offset: 2720)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1031, file: !14, line: 2120, baseType: !891, size: 32, align: 32, offset: 2752)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1031, file: !14, line: 2125, baseType: !891, size: 32, align: 32, offset: 2784)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1031, file: !14, line: 2133, baseType: !891, size: 32, align: 32, offset: 2816)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1031, file: !14, line: 2140, baseType: !891, size: 32, align: 32, offset: 2848)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1031, file: !14, line: 2145, baseType: !891, size: 32, align: 32, offset: 2880)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1031, file: !14, line: 2153, baseType: !891, size: 32, align: 32, offset: 2912)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1031, file: !14, line: 2158, baseType: !891, size: 32, align: 32, offset: 2944)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1031, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1031, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1031, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1031, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1031, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1031, file: !14, line: 2203, baseType: !891, size: 32, align: 32, offset: 3136)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1031, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1031, file: !14, line: 2212, baseType: !891, size: 32, align: 32, offset: 3200)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1031, file: !14, line: 2213, baseType: !891, size: 32, align: 32, offset: 3232)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1031, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1031, file: !14, line: 2232, baseType: !891, size: 32, align: 32, offset: 3296)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1031, file: !14, line: 2243, baseType: !891, size: 32, align: 32, offset: 3328)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1031, file: !14, line: 2249, baseType: !891, size: 32, align: 32, offset: 3360)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1031, file: !14, line: 2256, baseType: !891, size: 32, align: 32, offset: 3392)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1031, file: !14, line: 2263, baseType: !969, size: 64, align: 64, offset: 3456)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1031, file: !14, line: 2270, baseType: !969, size: 64, align: 64, offset: 3520)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1031, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1031, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1031, file: !14, line: 2367, baseType: !1394, size: 64, align: 64, offset: 3648)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64, align: 64)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!891, !1318, !1051, !891}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1031, file: !14, line: 2383, baseType: !891, size: 32, align: 32, offset: 3712)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1031, file: !14, line: 2386, baseType: !1328, size: 32, align: 32, offset: 3744)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1031, file: !14, line: 2387, baseType: !1328, size: 32, align: 32, offset: 3776)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1031, file: !14, line: 2394, baseType: !891, size: 32, align: 32, offset: 3808)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1031, file: !14, line: 2401, baseType: !891, size: 32, align: 32, offset: 3840)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1031, file: !14, line: 2408, baseType: !891, size: 32, align: 32, offset: 3872)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1031, file: !14, line: 2415, baseType: !891, size: 32, align: 32, offset: 3904)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1031, file: !14, line: 2422, baseType: !891, size: 32, align: 32, offset: 3936)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1031, file: !14, line: 2423, baseType: !1406, size: 64, align: 64, offset: 3968)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64, align: 64)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1413}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1408, file: !14, line: 827, baseType: !891, size: 32, align: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1408, file: !14, line: 828, baseType: !891, size: 32, align: 32, offset: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1408, file: !14, line: 829, baseType: !891, size: 32, align: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1408, file: !14, line: 830, baseType: !1328, size: 32, align: 32, offset: 96)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1031, file: !14, line: 2430, baseType: !888, size: 64, align: 64, offset: 4032)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1031, file: !14, line: 2437, baseType: !888, size: 64, align: 64, offset: 4096)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1031, file: !14, line: 2444, baseType: !1328, size: 32, align: 32, offset: 4160)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1031, file: !14, line: 2451, baseType: !1328, size: 32, align: 32, offset: 4192)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1031, file: !14, line: 2458, baseType: !891, size: 32, align: 32, offset: 4224)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1031, file: !14, line: 2469, baseType: !891, size: 32, align: 32, offset: 4256)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1031, file: !14, line: 2475, baseType: !891, size: 32, align: 32, offset: 4288)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1031, file: !14, line: 2481, baseType: !891, size: 32, align: 32, offset: 4320)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1031, file: !14, line: 2485, baseType: !891, size: 32, align: 32, offset: 4352)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1031, file: !14, line: 2489, baseType: !891, size: 32, align: 32, offset: 4384)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1031, file: !14, line: 2493, baseType: !891, size: 32, align: 32, offset: 4416)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1031, file: !14, line: 2501, baseType: !891, size: 32, align: 32, offset: 4448)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1031, file: !14, line: 2506, baseType: !891, size: 32, align: 32, offset: 4480)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1031, file: !14, line: 2510, baseType: !891, size: 32, align: 32, offset: 4512)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1031, file: !14, line: 2514, baseType: !888, size: 64, align: 64, offset: 4544)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1031, file: !14, line: 2528, baseType: !1430, size: 64, align: 64, offset: 4608)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64, align: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{null, !1318, !892, !891, !891}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1031, file: !14, line: 2534, baseType: !891, size: 32, align: 32, offset: 4672)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1031, file: !14, line: 2545, baseType: !891, size: 32, align: 32, offset: 4704)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1031, file: !14, line: 2547, baseType: !891, size: 32, align: 32, offset: 4736)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1031, file: !14, line: 2549, baseType: !891, size: 32, align: 32, offset: 4768)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1031, file: !14, line: 2551, baseType: !891, size: 32, align: 32, offset: 4800)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1031, file: !14, line: 2553, baseType: !891, size: 32, align: 32, offset: 4832)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1031, file: !14, line: 2555, baseType: !891, size: 32, align: 32, offset: 4864)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1031, file: !14, line: 2557, baseType: !891, size: 32, align: 32, offset: 4896)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1031, file: !14, line: 2559, baseType: !891, size: 32, align: 32, offset: 4928)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1031, file: !14, line: 2563, baseType: !891, size: 32, align: 32, offset: 4960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1031, file: !14, line: 2571, baseType: !1444, size: 64, align: 64, offset: 4992)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1031, file: !14, line: 2579, baseType: !1444, size: 64, align: 64, offset: 5056)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1031, file: !14, line: 2586, baseType: !891, size: 32, align: 32, offset: 5120)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1031, file: !14, line: 2615, baseType: !891, size: 32, align: 32, offset: 5152)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1031, file: !14, line: 2627, baseType: !891, size: 32, align: 32, offset: 5184)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1031, file: !14, line: 2637, baseType: !891, size: 32, align: 32, offset: 5216)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1031, file: !14, line: 2681, baseType: !891, size: 32, align: 32, offset: 5248)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1031, file: !14, line: 2709, baseType: !888, size: 64, align: 64, offset: 5312)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1031, file: !14, line: 2716, baseType: !1453, size: 64, align: 64, offset: 5376)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64, align: 64)
!1454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461, !1462, !1466, !1472, !1476, !1477, !1478, !1479, !1485, !1486, !1487, !1488, !1489}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1455, file: !14, line: 3642, baseType: !941, size: 64, align: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1455, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1455, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1455, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1455, file: !14, line: 3669, baseType: !891, size: 32, align: 32, offset: 160)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1455, file: !14, line: 3682, baseType: !1463, size: 64, align: 64, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64, align: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!891, !1029, !1051}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1455, file: !14, line: 3698, baseType: !1467, size: 64, align: 64, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64, align: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!891, !1029, !1470, !901}
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64, align: 64)
!1471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1455, file: !14, line: 3712, baseType: !1473, size: 64, align: 64, offset: 320)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64, align: 64)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!891, !1029, !891, !1470, !901}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1455, file: !14, line: 3726, baseType: !1467, size: 64, align: 64, offset: 384)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1455, file: !14, line: 3737, baseType: !1026, size: 64, align: 64, offset: 448)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1455, file: !14, line: 3746, baseType: !891, size: 32, align: 32, offset: 512)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1455, file: !14, line: 3757, baseType: !1480, size: 64, align: 64, offset: 576)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64, align: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{null, !1483}
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64, align: 64)
!1484 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1455, file: !14, line: 3766, baseType: !1026, size: 64, align: 64, offset: 640)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1455, file: !14, line: 3774, baseType: !1026, size: 64, align: 64, offset: 704)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1455, file: !14, line: 3780, baseType: !891, size: 32, align: 32, offset: 768)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1455, file: !14, line: 3785, baseType: !891, size: 32, align: 32, offset: 800)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1455, file: !14, line: 3795, baseType: !1490, size: 64, align: 64, offset: 832)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!891, !1029, !1089}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1031, file: !14, line: 2728, baseType: !892, size: 64, align: 64, offset: 5440)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1031, file: !14, line: 2735, baseType: !1079, size: 512, align: 64, offset: 5504)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1031, file: !14, line: 2742, baseType: !891, size: 32, align: 32, offset: 6016)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1031, file: !14, line: 2755, baseType: !891, size: 32, align: 32, offset: 6048)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1031, file: !14, line: 2776, baseType: !891, size: 32, align: 32, offset: 6080)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1031, file: !14, line: 2783, baseType: !891, size: 32, align: 32, offset: 6112)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1031, file: !14, line: 2791, baseType: !891, size: 32, align: 32, offset: 6144)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1031, file: !14, line: 2802, baseType: !1051, size: 64, align: 64, offset: 6208)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1031, file: !14, line: 2811, baseType: !891, size: 32, align: 32, offset: 6272)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1031, file: !14, line: 2821, baseType: !891, size: 32, align: 32, offset: 6304)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1031, file: !14, line: 2830, baseType: !891, size: 32, align: 32, offset: 6336)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1031, file: !14, line: 2840, baseType: !891, size: 32, align: 32, offset: 6368)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1031, file: !14, line: 2851, baseType: !1506, size: 64, align: 64, offset: 6400)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64, align: 64)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!891, !1318, !1509, !892, !1321, !891, !891}
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!891, !1318, !892}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1031, file: !14, line: 2871, baseType: !1513, size: 64, align: 64, offset: 6464)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!891, !1318, !1516, !892, !1321, !891}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64, align: 64)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!891, !1318, !892, !891, !891}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1031, file: !14, line: 2878, baseType: !891, size: 32, align: 32, offset: 6528)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1031, file: !14, line: 2885, baseType: !891, size: 32, align: 32, offset: 6560)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1031, file: !14, line: 3005, baseType: !891, size: 32, align: 32, offset: 6592)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1031, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1031, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1031, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1031, file: !14, line: 3037, baseType: !1057, size: 64, align: 64, offset: 6720)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1031, file: !14, line: 3038, baseType: !891, size: 32, align: 32, offset: 6784)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1031, file: !14, line: 3050, baseType: !969, size: 64, align: 64, offset: 6848)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1031, file: !14, line: 3065, baseType: !891, size: 32, align: 32, offset: 6912)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1031, file: !14, line: 3083, baseType: !891, size: 32, align: 32, offset: 6944)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1031, file: !14, line: 3092, baseType: !951, size: 64, align: 32, offset: 6976)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1031, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1031, file: !14, line: 3106, baseType: !951, size: 64, align: 32, offset: 7072)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1031, file: !14, line: 3113, baseType: !1534, size: 64, align: 64, offset: 7168)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1538)
!1538 = !{!1539, !1540, !1541, !1542, !1543, !1544, !1547}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1537, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1537, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1537, file: !14, line: 720, baseType: !941, size: 64, align: 64, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1537, file: !14, line: 724, baseType: !941, size: 64, align: 64, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1537, file: !14, line: 728, baseType: !891, size: 32, align: 32, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1537, file: !14, line: 734, baseType: !1545, size: 64, align: 64, offset: 256)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64, align: 64)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1537, file: !14, line: 739, baseType: !1548, size: 64, align: 64, offset: 320)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1031, file: !14, line: 3129, baseType: !888, size: 64, align: 64, offset: 7232)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1031, file: !14, line: 3130, baseType: !888, size: 64, align: 64, offset: 7296)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1031, file: !14, line: 3131, baseType: !888, size: 64, align: 64, offset: 7360)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1031, file: !14, line: 3132, baseType: !888, size: 64, align: 64, offset: 7424)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1031, file: !14, line: 3139, baseType: !1444, size: 64, align: 64, offset: 7488)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1031, file: !14, line: 3147, baseType: !891, size: 32, align: 32, offset: 7552)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1031, file: !14, line: 3165, baseType: !891, size: 32, align: 32, offset: 7584)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1031, file: !14, line: 3172, baseType: !891, size: 32, align: 32, offset: 7616)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1031, file: !14, line: 3180, baseType: !891, size: 32, align: 32, offset: 7648)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1031, file: !14, line: 3191, baseType: !1358, size: 64, align: 64, offset: 7680)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1031, file: !14, line: 3199, baseType: !1057, size: 64, align: 64, offset: 7744)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1031, file: !14, line: 3207, baseType: !1444, size: 64, align: 64, offset: 7808)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1031, file: !14, line: 3214, baseType: !894, size: 32, align: 32, offset: 7872)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1031, file: !14, line: 3224, baseType: !1187, size: 64, align: 64, offset: 7936)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1031, file: !14, line: 3225, baseType: !891, size: 32, align: 32, offset: 8000)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1031, file: !14, line: 3249, baseType: !1089, size: 64, align: 64, offset: 8064)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1031, file: !14, line: 3256, baseType: !891, size: 32, align: 32, offset: 8128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1031, file: !14, line: 3271, baseType: !891, size: 32, align: 32, offset: 8160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1031, file: !14, line: 3279, baseType: !888, size: 64, align: 64, offset: 8192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1031, file: !14, line: 3301, baseType: !1089, size: 64, align: 64, offset: 8256)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1031, file: !14, line: 3310, baseType: !891, size: 32, align: 32, offset: 8320)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1031, file: !14, line: 3337, baseType: !891, size: 32, align: 32, offset: 8352)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1031, file: !14, line: 3351, baseType: !891, size: 32, align: 32, offset: 8384)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1031, file: !14, line: 3359, baseType: !891, size: 32, align: 32, offset: 8416)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !938, file: !14, line: 3535, baseType: !1575, size: 64, align: 64, offset: 1024)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64, align: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!891, !1029, !1578}
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !938, file: !14, line: 3541, baseType: !1581, size: 64, align: 64, offset: 1088)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1045, line: 223, size: 128, align: 64, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1584, file: !1045, line: 224, baseType: !1470, size: 64, align: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1584, file: !1045, line: 225, baseType: !1470, size: 64, align: 64, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !938, file: !14, line: 3549, baseType: !1589, size: 64, align: 64, offset: 1152)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64, align: 64)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{null, !1024}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !938, file: !14, line: 3551, baseType: !1026, size: 64, align: 64, offset: 1216)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !938, file: !14, line: 3552, baseType: !1594, size: 64, align: 64, offset: 1280)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!891, !1029, !1057, !891, !1597}
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1604, !1605, !1629}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1599, file: !14, line: 3921, baseType: !932, size: 16, align: 16)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1599, file: !14, line: 3922, baseType: !901, size: 32, align: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1599, file: !14, line: 3923, baseType: !901, size: 32, align: 32, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1599, file: !14, line: 3924, baseType: !894, size: 32, align: 32, offset: 96)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1599, file: !14, line: 3925, baseType: !1606, size: 64, align: 64, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1622, !1624, !1625, !1626, !1627, !1628}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1609, file: !14, line: 3886, baseType: !891, size: 32, align: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1609, file: !14, line: 3887, baseType: !891, size: 32, align: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1609, file: !14, line: 3888, baseType: !891, size: 32, align: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1609, file: !14, line: 3889, baseType: !891, size: 32, align: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1609, file: !14, line: 3890, baseType: !891, size: 32, align: 32, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1609, file: !14, line: 3897, baseType: !1617, size: 768, align: 64, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1618, file: !14, line: 3855, baseType: !1056, size: 512, align: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1618, file: !14, line: 3857, baseType: !1061, size: 256, align: 32, offset: 512)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1609, file: !14, line: 3903, baseType: !1623, size: 256, align: 64, offset: 960)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 256, align: 64, elements: !1158)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1609, file: !14, line: 3904, baseType: !1165, size: 128, align: 32, offset: 1216)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1609, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1609, file: !14, line: 3908, baseType: !1444, size: 64, align: 64, offset: 1408)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1609, file: !14, line: 3915, baseType: !1444, size: 64, align: 64, offset: 1472)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1609, file: !14, line: 3917, baseType: !891, size: 32, align: 32, offset: 1536)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1599, file: !14, line: 3926, baseType: !888, size: 64, align: 64, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !938, file: !14, line: 3564, baseType: !1631, size: 64, align: 64, offset: 1344)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64, align: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!891, !1029, !1175, !1319, !1321}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !938, file: !14, line: 3566, baseType: !1635, size: 64, align: 64, offset: 1408)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64, align: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!891, !1029, !892, !1321, !1175}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !938, file: !14, line: 3567, baseType: !1026, size: 64, align: 64, offset: 1472)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !938, file: !14, line: 3576, baseType: !1640, size: 64, align: 64, offset: 1536)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!891, !1029, !1319}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !938, file: !14, line: 3577, baseType: !1644, size: 64, align: 64, offset: 1600)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!891, !1029, !1175}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !938, file: !14, line: 3584, baseType: !1463, size: 64, align: 64, offset: 1664)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !938, file: !14, line: 3589, baseType: !1649, size: 64, align: 64, offset: 1728)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64, align: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{null, !1029}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !938, file: !14, line: 3594, baseType: !891, size: 32, align: 32, offset: 1792)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !938, file: !14, line: 3600, baseType: !941, size: 64, align: 64, offset: 1856)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !938, file: !14, line: 3609, baseType: !1655, size: 64, align: 64, offset: 1920)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64, align: 64)
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1658)
!1658 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1659 = distinct !DIGlobalVariable(name: "ff_mp2_decoder", scope: !0, file: !936, line: 58, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp2_decoder)
!1660 = distinct !DIGlobalVariable(name: "ff_mp3_decoder", scope: !0, file: !936, line: 74, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp3_decoder)
!1661 = distinct !DIGlobalVariable(name: "ff_mp3adu_decoder", scope: !0, file: !936, line: 90, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp3adu_decoder)
!1662 = distinct !DIGlobalVariable(name: "ff_mp3on4_decoder", scope: !0, file: !936, line: 106, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_mp3on4_decoder)
!1663 = distinct !DIGlobalVariable(name: "initialized_tables", scope: !1664, file: !1665, line: 423, type: !891, isLocal: true, isDefinition: true, variable: i32* @decode_init.initialized_tables)
!1664 = distinct !DISubprogram(name: "decode_init", scope: !1665, file: !1665, line: 421, type: !1027, isLocal: true, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!1665 = !DIFile(filename: "libavcodec/mpegaudiodec_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1666 = !{}
!1667 = distinct !DIGlobalVariable(name: "scale_factor_modshift", scope: !0, file: !1665, line: 128, type: !1668, isLocal: true, isDefinition: true, variable: [64 x i16]* @scale_factor_modshift)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 1024, align: 16, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 64)
!1671 = distinct !DIGlobalVariable(name: "scale_factor_mult", scope: !0, file: !1665, line: 130, type: !1672, isLocal: true, isDefinition: true, variable: [15 x [3 x i32]]* @scale_factor_mult)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 1440, align: 32, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DISubrange(count: 15)
!1675 = !DISubrange(count: 3)
!1676 = distinct !DIGlobalVariable(name: "mpa_huff_tables", scope: !0, file: !1677, line: 505, type: !1678, isLocal: true, isDefinition: true, variable: [16 x %struct.HuffTable]* @mpa_huff_tables)
!1677 = !DIFile(filename: "libavcodec/mpegaudiodectab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1679, size: 3072, align: 64, elements: !1688)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "HuffTable", file: !1677, line: 43, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HuffTable", file: !1677, line: 39, size: 192, align: 64, elements: !1682)
!1682 = !{!1683, !1684, !1685}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "xsize", scope: !1681, file: !1677, line: 40, baseType: !891, size: 32, align: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1681, file: !1677, line: 41, baseType: !1470, size: 64, align: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "codes", scope: !1681, file: !1677, line: 42, baseType: !1686, size: 64, align: 64, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!1688 = !{!1689}
!1689 = !DISubrange(count: 16)
!1690 = distinct !DIGlobalVariable(name: "mpa_huffbits_1", scope: !0, file: !1677, line: 67, type: !1691, isLocal: true, isDefinition: true, variable: [4 x i8]* @mpa_huffbits_1)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 32, align: 8, elements: !1158)
!1692 = distinct !DIGlobalVariable(name: "mpa_huffcodes_1", scope: !0, file: !1677, line: 63, type: !1693, isLocal: true, isDefinition: true, variable: [4 x i16]* @mpa_huffcodes_1)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 64, align: 16, elements: !1158)
!1694 = distinct !DIGlobalVariable(name: "mpa_huffbits_2", scope: !0, file: !1677, line: 76, type: !1695, isLocal: true, isDefinition: true, variable: [9 x i8]* @mpa_huffbits_2)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 72, align: 8, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 9)
!1698 = distinct !DIGlobalVariable(name: "mpa_huffcodes_2", scope: !0, file: !1677, line: 71, type: !1699, isLocal: true, isDefinition: true, variable: [9 x i16]* @mpa_huffcodes_2)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 144, align: 16, elements: !1696)
!1700 = distinct !DIGlobalVariable(name: "mpa_huffbits_3", scope: !0, file: !1677, line: 86, type: !1695, isLocal: true, isDefinition: true, variable: [9 x i8]* @mpa_huffbits_3)
!1701 = distinct !DIGlobalVariable(name: "mpa_huffcodes_3", scope: !0, file: !1677, line: 81, type: !1699, isLocal: true, isDefinition: true, variable: [9 x i16]* @mpa_huffcodes_3)
!1702 = distinct !DIGlobalVariable(name: "mpa_huffbits_5", scope: !0, file: !1677, line: 96, type: !1703, isLocal: true, isDefinition: true, variable: [16 x i8]* @mpa_huffbits_5)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 128, align: 8, elements: !1688)
!1704 = distinct !DIGlobalVariable(name: "mpa_huffcodes_5", scope: !0, file: !1677, line: 91, type: !1705, isLocal: true, isDefinition: true, variable: [16 x i16]* @mpa_huffcodes_5)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 256, align: 16, elements: !1688)
!1706 = distinct !DIGlobalVariable(name: "mpa_huffbits_6", scope: !0, file: !1677, line: 106, type: !1703, isLocal: true, isDefinition: true, variable: [16 x i8]* @mpa_huffbits_6)
!1707 = distinct !DIGlobalVariable(name: "mpa_huffcodes_6", scope: !0, file: !1677, line: 101, type: !1705, isLocal: true, isDefinition: true, variable: [16 x i16]* @mpa_huffcodes_6)
!1708 = distinct !DIGlobalVariable(name: "mpa_huffbits_7", scope: !0, file: !1677, line: 119, type: !1709, isLocal: true, isDefinition: true, variable: [36 x i8]* @mpa_huffbits_7)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 288, align: 8, elements: !1710)
!1710 = !{!1711}
!1711 = !DISubrange(count: 36)
!1712 = distinct !DIGlobalVariable(name: "mpa_huffcodes_7", scope: !0, file: !1677, line: 111, type: !1713, isLocal: true, isDefinition: true, variable: [36 x i16]* @mpa_huffcodes_7)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 576, align: 16, elements: !1710)
!1714 = distinct !DIGlobalVariable(name: "mpa_huffbits_8", scope: !0, file: !1677, line: 135, type: !1709, isLocal: true, isDefinition: true, variable: [36 x i8]* @mpa_huffbits_8)
!1715 = distinct !DIGlobalVariable(name: "mpa_huffcodes_8", scope: !0, file: !1677, line: 127, type: !1713, isLocal: true, isDefinition: true, variable: [36 x i16]* @mpa_huffcodes_8)
!1716 = distinct !DIGlobalVariable(name: "mpa_huffbits_9", scope: !0, file: !1677, line: 151, type: !1709, isLocal: true, isDefinition: true, variable: [36 x i8]* @mpa_huffbits_9)
!1717 = distinct !DIGlobalVariable(name: "mpa_huffcodes_9", scope: !0, file: !1677, line: 143, type: !1713, isLocal: true, isDefinition: true, variable: [36 x i16]* @mpa_huffcodes_9)
!1718 = distinct !DIGlobalVariable(name: "mpa_huffbits_10", scope: !0, file: !1677, line: 170, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @mpa_huffbits_10)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 512, align: 8, elements: !1669)
!1720 = distinct !DIGlobalVariable(name: "mpa_huffcodes_10", scope: !0, file: !1677, line: 159, type: !1721, isLocal: true, isDefinition: true, variable: [64 x i16]* @mpa_huffcodes_10)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 1024, align: 16, elements: !1669)
!1722 = distinct !DIGlobalVariable(name: "mpa_huffbits_11", scope: !0, file: !1677, line: 192, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @mpa_huffbits_11)
!1723 = distinct !DIGlobalVariable(name: "mpa_huffcodes_11", scope: !0, file: !1677, line: 181, type: !1721, isLocal: true, isDefinition: true, variable: [64 x i16]* @mpa_huffcodes_11)
!1724 = distinct !DIGlobalVariable(name: "mpa_huffbits_12", scope: !0, file: !1677, line: 214, type: !1719, isLocal: true, isDefinition: true, variable: [64 x i8]* @mpa_huffbits_12)
!1725 = distinct !DIGlobalVariable(name: "mpa_huffcodes_12", scope: !0, file: !1677, line: 203, type: !1721, isLocal: true, isDefinition: true, variable: [64 x i16]* @mpa_huffcodes_12)
!1726 = distinct !DIGlobalVariable(name: "mpa_huffbits_13", scope: !0, file: !1677, line: 260, type: !1727, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_13)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 2048, align: 8, elements: !1728)
!1728 = !{!1729}
!1729 = !DISubrange(count: 256)
!1730 = distinct !DIGlobalVariable(name: "mpa_huffcodes_13", scope: !0, file: !1677, line: 225, type: !1731, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_13)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 4096, align: 16, elements: !1728)
!1732 = distinct !DIGlobalVariable(name: "mpa_huffbits_15", scope: !0, file: !1677, line: 330, type: !1727, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_15)
!1733 = distinct !DIGlobalVariable(name: "mpa_huffcodes_15", scope: !0, file: !1677, line: 295, type: !1731, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_15)
!1734 = distinct !DIGlobalVariable(name: "mpa_huffbits_16", scope: !0, file: !1677, line: 400, type: !1727, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_16)
!1735 = distinct !DIGlobalVariable(name: "mpa_huffcodes_16", scope: !0, file: !1677, line: 365, type: !1731, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_16)
!1736 = distinct !DIGlobalVariable(name: "mpa_huffbits_24", scope: !0, file: !1677, line: 470, type: !1727, isLocal: true, isDefinition: true, variable: [256 x i8]* @mpa_huffbits_24)
!1737 = distinct !DIGlobalVariable(name: "mpa_huffcodes_24", scope: !0, file: !1677, line: 435, type: !1731, isLocal: true, isDefinition: true, variable: [256 x i16]* @mpa_huffcodes_24)
!1738 = distinct !DIGlobalVariable(name: "huff_vlc_tables", scope: !0, file: !1665, line: 100, type: !1739, isLocal: true, isDefinition: true, variable: [3746 x [2 x i16]]* @huff_vlc_tables)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 119872, align: 16, elements: !1740)
!1740 = !{!1741, !1742}
!1741 = !DISubrange(count: 3746)
!1742 = !DISubrange(count: 2)
!1743 = distinct !DIGlobalVariable(name: "huff_vlc", scope: !0, file: !1665, line: 99, type: !1744, isLocal: true, isDefinition: true, variable: [16 x %struct.VLC]* @huff_vlc)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1745, size: 3072, align: 64, elements: !1688)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1746, line: 30, baseType: !1747)
!1746 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1746, line: 26, size: 192, align: 64, elements: !1748)
!1748 = !{!1749, !1750, !1754, !1755}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1747, file: !1746, line: 27, baseType: !891, size: 32, align: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1747, file: !1746, line: 28, baseType: !1751, size: 64, align: 64, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 32, align: 16, elements: !1753)
!1753 = !{!1742}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1747, file: !1746, line: 29, baseType: !891, size: 32, align: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1747, file: !1746, line: 29, baseType: !891, size: 32, align: 32, offset: 160)
!1756 = distinct !DIGlobalVariable(name: "huff_vlc_tables_sizes", scope: !0, file: !1665, line: 104, type: !1757, isLocal: true, isDefinition: true, variable: [16 x i32]* @huff_vlc_tables_sizes)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 512, align: 32, elements: !1688)
!1758 = distinct !DIGlobalVariable(name: "huff_quad_vlc_tables", scope: !0, file: !1665, line: 109, type: !1759, isLocal: true, isDefinition: true, variable: [144 x [2 x i16]]* @huff_quad_vlc_tables)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 4608, align: 16, elements: !1760)
!1760 = !{!1761, !1742}
!1761 = !DISubrange(count: 144)
!1762 = distinct !DIGlobalVariable(name: "huff_quad_vlc", scope: !0, file: !1665, line: 108, type: !1763, isLocal: true, isDefinition: true, variable: [2 x %struct.VLC]* @huff_quad_vlc)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1745, size: 384, align: 64, elements: !1753)
!1764 = distinct !DIGlobalVariable(name: "huff_quad_vlc_tables_sizes", scope: !0, file: !1665, line: 110, type: !1765, isLocal: true, isDefinition: true, variable: [2 x i32]* @huff_quad_vlc_tables_sizes)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 64, align: 32, elements: !1753)
!1766 = distinct !DIGlobalVariable(name: "mpa_quad_bits", scope: !0, file: !1677, line: 566, type: !1767, isLocal: true, isDefinition: true, variable: [2 x [16 x i8]]* @mpa_quad_bits)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 256, align: 8, elements: !1768)
!1768 = !{!1742, !1689}
!1769 = distinct !DIGlobalVariable(name: "mpa_quad_codes", scope: !0, file: !1677, line: 561, type: !1767, isLocal: true, isDefinition: true, variable: [2 x [16 x i8]]* @mpa_quad_codes)
!1770 = distinct !DIGlobalVariable(name: "band_index_long", scope: !0, file: !1665, line: 112, type: !1771, isLocal: true, isDefinition: true, variable: [9 x [23 x i16]]* @band_index_long)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 3312, align: 16, elements: !1772)
!1772 = !{!1697, !1773}
!1773 = !DISubrange(count: 23)
!1774 = distinct !DIGlobalVariable(name: "band_size_long", scope: !0, file: !1677, line: 572, type: !1775, isLocal: true, isDefinition: true, variable: [9 x [22 x i8]]* @band_size_long)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 1584, align: 8, elements: !1776)
!1776 = !{!1697, !1777}
!1777 = !DISubrange(count: 22)
!1778 = distinct !DIGlobalVariable(name: "exp2_lut", scope: !1779, file: !1780, line: 48, type: !1783, isLocal: true, isDefinition: true, variable: [4 x double]* @mpegaudio_tableinit.exp2_lut)
!1779 = distinct !DISubprogram(name: "mpegaudio_tableinit", scope: !1780, file: !1780, line: 45, type: !1781, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!1780 = !DIFile(filename: "libavcodec/mpegaudio_tablegen.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1781 = !DISubroutineType(types: !1782)
!1782 = !{null}
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 256, align: 64, elements: !1158)
!1784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!1785 = distinct !DIGlobalVariable(name: "pow43_lut", scope: !1779, file: !1780, line: 54, type: !1786, isLocal: true, isDefinition: true, variable: [16 x double]* @mpegaudio_tableinit.pow43_lut)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !893, size: 1024, align: 64, elements: !1688)
!1787 = distinct !DIGlobalVariable(name: "table_4_3_value", scope: !0, file: !1780, line: 36, type: !1788, isLocal: true, isDefinition: true, variable: [32828 x i32]* @table_4_3_value)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 1050496, align: 32, elements: !1789)
!1789 = !{!1790}
!1790 = !DISubrange(count: 32828)
!1791 = distinct !DIGlobalVariable(name: "table_4_3_exp", scope: !0, file: !1780, line: 35, type: !1792, isLocal: true, isDefinition: true, variable: [32828 x i8]* @table_4_3_exp)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 262624, align: 8, elements: !1789)
!1793 = distinct !DIGlobalVariable(name: "expval_table_fixed", scope: !0, file: !1780, line: 38, type: !1794, isLocal: true, isDefinition: true, variable: [512 x [16 x i32]]* @expval_table_fixed)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 262144, align: 32, elements: !1795)
!1795 = !{!1796, !1689}
!1796 = !DISubrange(count: 512)
!1797 = distinct !DIGlobalVariable(name: "expval_table_float", scope: !0, file: !1780, line: 40, type: !1798, isLocal: true, isDefinition: true, variable: [512 x [16 x float]]* @expval_table_float)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 262144, align: 32, elements: !1795)
!1799 = distinct !DIGlobalVariable(name: "exp_table_fixed", scope: !0, file: !1780, line: 37, type: !1800, isLocal: true, isDefinition: true, variable: [512 x i32]* @exp_table_fixed)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 16384, align: 32, elements: !1801)
!1801 = !{!1796}
!1802 = distinct !DIGlobalVariable(name: "exp_table_float", scope: !0, file: !1780, line: 39, type: !1803, isLocal: true, isDefinition: true, variable: [512 x float]* @exp_table_float)
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 16384, align: 32, elements: !1801)
!1804 = distinct !DIGlobalVariable(name: "division_tabs", scope: !0, file: !1665, line: 123, type: !1805, isLocal: true, isDefinition: true, variable: [4 x i16*]* @division_tabs)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 256, align: 64, elements: !1158)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!1808 = distinct !DIGlobalVariable(name: "division_tab3", scope: !0, file: !1665, line: 119, type: !1809, isLocal: true, isDefinition: true, variable: [64 x i16]* @division_tab3)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 1024, align: 16, elements: !1669)
!1810 = distinct !DIGlobalVariable(name: "division_tab5", scope: !0, file: !1665, line: 120, type: !1811, isLocal: true, isDefinition: true, variable: [256 x i16]* @division_tab5)
!1811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 4096, align: 16, elements: !1728)
!1812 = distinct !DIGlobalVariable(name: "division_tab9", scope: !0, file: !1665, line: 121, type: !1813, isLocal: true, isDefinition: true, variable: [2048 x i16]* @division_tab9)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 32768, align: 16, elements: !1814)
!1814 = !{!1815}
!1815 = !DISubrange(count: 2048)
!1816 = distinct !DIGlobalVariable(name: "is_table", scope: !0, file: !1665, line: 115, type: !1817, isLocal: true, isDefinition: true, variable: [2 x [16 x i32]]* @is_table)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 1024, align: 32, elements: !1768)
!1818 = distinct !DIGlobalVariable(name: "is_table_lsf", scope: !0, file: !1665, line: 116, type: !1819, isLocal: true, isDefinition: true, variable: [2 x [2 x [16 x i32]]]* @is_table_lsf)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 2048, align: 32, elements: !1820)
!1820 = !{!1742, !1742, !1689}
!1821 = distinct !DIGlobalVariable(name: "ci_table", scope: !0, file: !1677, line: 611, type: !1822, isLocal: true, isDefinition: true, variable: [8 x float]* @ci_table)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1823, size: 256, align: 32, elements: !1058)
!1823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!1824 = distinct !DIGlobalVariable(name: "csa_table", scope: !0, file: !1665, line: 117, type: !1825, isLocal: true, isDefinition: true, variable: [8 x [4 x i32]]* @csa_table)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 1024, align: 32, elements: !1826)
!1826 = !{!1059, !1159}
!1827 = distinct !DIGlobalVariable(name: "scale_factor_mult2", scope: !0, file: !1665, line: 136, type: !1828, isLocal: true, isDefinition: true, variable: [3 x [3 x i32]]* @scale_factor_mult2)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1829, size: 288, align: 32, elements: !1830)
!1829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!1830 = !{!1675, !1675}
!1831 = distinct !DIGlobalVariable(name: "slen_table", scope: !0, file: !1677, line: 46, type: !1767, isLocal: true, isDefinition: true, variable: [2 x [16 x i8]]* @slen_table)
!1832 = distinct !DIGlobalVariable(name: "lsf_nsf_table", scope: !0, file: !1677, line: 52, type: !1833, isLocal: true, isDefinition: true, variable: [6 x [3 x [4 x i8]]]* @lsf_nsf_table)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 576, align: 8, elements: !1834)
!1834 = !{!1835, !1675, !1159}
!1835 = !DISubrange(count: 6)
!1836 = distinct !DIGlobalVariable(name: "mpa_pretab", scope: !0, file: !1677, line: 605, type: !1837, isLocal: true, isDefinition: true, variable: [2 x [22 x i8]]* @mpa_pretab)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 352, align: 8, elements: !1838)
!1838 = !{!1742, !1777}
!1839 = distinct !DIGlobalVariable(name: "band_size_short", scope: !0, file: !1677, line: 593, type: !1840, isLocal: true, isDefinition: true, variable: [9 x [13 x i8]]* @band_size_short)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 936, align: 8, elements: !1841)
!1841 = !{!1697, !1842}
!1842 = !DISubrange(count: 13)
!1843 = distinct !DIGlobalVariable(name: "idxtab", scope: !1844, file: !1665, line: 974, type: !1757, isLocal: true, isDefinition: true, variable: [16 x i32]* @huffman_decode.idxtab)
!1844 = distinct !DISubprogram(name: "huffman_decode", scope: !1665, file: !1665, line: 852, type: !1845, isLocal: true, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!891, !1847, !2002, !1807, !891}
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64, align: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPADecodeContext", file: !1665, line: 91, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPADecodeContext", file: !1665, line: 70, size: 264448, align: 256, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1865, !1866, !1867, !1868, !1878, !1879, !1884, !1886, !1890, !1894, !1924, !1925, !1926, !1927, !1928, !1960, !2001}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "error_protection", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 96)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate_index", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 160)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 192)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 224)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mode_ext", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 256)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "lsf", scope: !1849, file: !1665, line: 71, baseType: !891, size: 32, align: 32, offset: 288)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "last_buf", scope: !1849, file: !1665, line: 72, baseType: !1862, size: 8384, align: 8, offset: 320)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 8384, align: 8, elements: !1863)
!1863 = !{!1864}
!1864 = !DISubrange(count: 1048)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "last_buf_size", scope: !1849, file: !1665, line: 73, baseType: !891, size: 32, align: 32, offset: 8704)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "extrasize", scope: !1849, file: !1665, line: 74, baseType: !891, size: 32, align: 32, offset: 8736)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "free_format_next_header", scope: !1849, file: !1665, line: 76, baseType: !901, size: 32, align: 32, offset: 8768)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1849, file: !1665, line: 77, baseType: !1869, size: 256, align: 64, offset: 8832)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1870, line: 70, baseType: !1871)
!1870 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1870, line: 61, size: 256, align: 64, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1871, file: !1870, line: 62, baseType: !1470, size: 64, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1871, file: !1870, line: 62, baseType: !1470, size: 64, align: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1871, file: !1870, line: 67, baseType: !891, size: 32, align: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1871, file: !1870, line: 68, baseType: !891, size: 32, align: 32, offset: 160)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1871, file: !1870, line: 69, baseType: !891, size: 32, align: 32, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "in_gb", scope: !1849, file: !1665, line: 78, baseType: !1869, size: 256, align: 64, offset: 9088)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "synth_buf", scope: !1849, file: !1665, line: 79, baseType: !1880, size: 65536, align: 32, offset: 9472)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1881, size: 65536, align: 32, elements: !1882)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPA_INT", file: !920, line: 75, baseType: !926)
!1882 = !{!1742, !1883}
!1883 = !DISubrange(count: 1024)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "synth_buf_offset", scope: !1849, file: !1665, line: 80, baseType: !1885, size: 64, align: 32, offset: 75008)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 64, align: 32, elements: !1753)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "sb_samples", scope: !1849, file: !1665, line: 81, baseType: !1887, size: 73728, align: 32, offset: 75264)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 73728, align: 32, elements: !1888)
!1888 = !{!1742, !1711, !1889}
!1889 = !DISubrange(count: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_buf", scope: !1849, file: !1665, line: 82, baseType: !1891, size: 36864, align: 32, offset: 148992)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 36864, align: 32, elements: !1892)
!1892 = !{!1742, !1893}
!1893 = !DISubrange(count: 576)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "granules", scope: !1849, file: !1665, line: 83, baseType: !1895, size: 77824, align: 128, offset: 185856)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1896, size: 77824, align: 128, elements: !1923)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "GranuleDef", file: !1665, line: 68, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GranuleDef", file: !1665, line: 51, size: 19456, align: 128, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1920}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "scfsi", scope: !1897, file: !1665, line: 52, baseType: !923, size: 8, align: 8)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "part2_3_length", scope: !1897, file: !1665, line: 53, baseType: !891, size: 32, align: 32, offset: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "big_values", scope: !1897, file: !1665, line: 54, baseType: !891, size: 32, align: 32, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "global_gain", scope: !1897, file: !1665, line: 55, baseType: !891, size: 32, align: 32, offset: 96)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "scalefac_compress", scope: !1897, file: !1665, line: 56, baseType: !891, size: 32, align: 32, offset: 128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "block_type", scope: !1897, file: !1665, line: 57, baseType: !923, size: 8, align: 8, offset: 160)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "switch_point", scope: !1897, file: !1665, line: 58, baseType: !923, size: 8, align: 8, offset: 168)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "table_select", scope: !1897, file: !1665, line: 59, baseType: !1907, size: 96, align: 32, offset: 192)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 96, align: 32, elements: !1908)
!1908 = !{!1675}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "subblock_gain", scope: !1897, file: !1665, line: 60, baseType: !1907, size: 96, align: 32, offset: 288)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "scalefac_scale", scope: !1897, file: !1665, line: 61, baseType: !923, size: 8, align: 8, offset: 384)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "count1table_select", scope: !1897, file: !1665, line: 62, baseType: !923, size: 8, align: 8, offset: 392)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "region_size", scope: !1897, file: !1665, line: 63, baseType: !1907, size: 96, align: 32, offset: 416)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "preflag", scope: !1897, file: !1665, line: 64, baseType: !891, size: 32, align: 32, offset: 512)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "short_start", scope: !1897, file: !1665, line: 65, baseType: !891, size: 32, align: 32, offset: 544)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "long_end", scope: !1897, file: !1665, line: 65, baseType: !891, size: 32, align: 32, offset: 576)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factors", scope: !1897, file: !1665, line: 66, baseType: !1917, size: 320, align: 8, offset: 608)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 320, align: 8, elements: !1918)
!1918 = !{!1919}
!1919 = !DISubrange(count: 40)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "sb_hybrid", scope: !1897, file: !1665, line: 67, baseType: !1921, size: 18432, align: 32, offset: 1024)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 18432, align: 32, elements: !1922)
!1922 = !{!1893}
!1923 = !{!1742, !1742}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "adu_mode", scope: !1849, file: !1665, line: 84, baseType: !891, size: 32, align: 32, offset: 263680)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "dither_state", scope: !1849, file: !1665, line: 85, baseType: !891, size: 32, align: 32, offset: 263712)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1849, file: !1665, line: 86, baseType: !891, size: 32, align: 32, offset: 263744)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1849, file: !1665, line: 87, baseType: !1029, size: 64, align: 64, offset: 263808)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mpadsp", scope: !1849, file: !1665, line: 88, baseType: !1929, size: 384, align: 64, offset: 263872)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPADSPContext", file: !1930, line: 41, baseType: !1931)
!1930 = !DIFile(filename: "libavcodec/mpegaudiodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPADSPContext", file: !1930, line: 27, size: 384, align: 64, elements: !1932)
!1932 = !{!1933, !1939, !1943, !1948, !1952, !1956}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_float", scope: !1931, file: !1930, line: 28, baseType: !1934, size: 64, align: 64)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64, align: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{null, !1937, !1937, !1321, !1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64, align: 64)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1143, line: 149, baseType: !890)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_fixed", scope: !1931, file: !1930, line: 31, baseType: !1940, size: 64, align: 64, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64, align: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null, !925, !925, !1321, !1807, !1938}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "dct32_float", scope: !1931, file: !1930, line: 34, baseType: !1944, size: 64, align: 64, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64, align: 64)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{null, !1937, !1947}
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64, align: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "dct32_fixed", scope: !1931, file: !1930, line: 35, baseType: !1949, size: 64, align: 64, offset: 192)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64, align: 64)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1321, !961}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "imdct36_blocks_float", scope: !1931, file: !1930, line: 37, baseType: !1953, size: 64, align: 64, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64, align: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{null, !1937, !1937, !1937, !891, !891, !891}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "imdct36_blocks_fixed", scope: !1931, file: !1930, line: 39, baseType: !1957, size: 64, align: 64, offset: 320)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64, align: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{null, !1321, !1321, !1321, !891, !891, !891}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1849, file: !1665, line: 89, baseType: !1961, size: 64, align: 64, offset: 264256)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64, align: 64)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1963, line: 192, baseType: !1964)
!1963 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1963, line: 24, size: 704, align: 64, elements: !1965)
!1965 = !{!1966, !1970, !1974, !1980, !1981, !1982, !1986, !1987, !1988, !1993, !1997}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1964, file: !1963, line: 38, baseType: !1967, size: 64, align: 64)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64, align: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{null, !1937, !1947, !1947, !891}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1964, file: !1963, line: 54, baseType: !1971, size: 64, align: 64, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64, align: 64)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{null, !1937, !1947, !1328, !891}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1964, file: !1963, line: 70, baseType: !1975, size: 64, align: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64, align: 64)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1978, !1979, !893, !891}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64, align: 64)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1964, file: !1963, line: 85, baseType: !1971, size: 64, align: 64, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1964, file: !1963, line: 100, baseType: !1975, size: 64, align: 64, offset: 256)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1964, file: !1963, line: 119, baseType: !1983, size: 64, align: 64, offset: 320)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64, align: 64)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1937, !1947, !1947, !1947, !891}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1964, file: !1963, line: 137, baseType: !1983, size: 64, align: 64, offset: 384)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1964, file: !1963, line: 154, baseType: !1967, size: 64, align: 64, offset: 448)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1964, file: !1963, line: 164, baseType: !1989, size: 64, align: 64, offset: 512)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64, align: 64)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{null, !1992, !1992, !891}
!1992 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1937)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1964, file: !1963, line: 175, baseType: !1994, size: 64, align: 64, offset: 576)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64, align: 64)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!1328, !1947, !1947, !891}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1964, file: !1963, line: 190, baseType: !1998, size: 64, align: 64, offset: 640)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64, align: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{null, !1978, !1979, !1979, !891}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1849, file: !1665, line: 90, baseType: !1051, size: 64, align: 64, offset: 264320)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64, align: 64)
!2003 = distinct !DIGlobalVariable(name: "mpa_huff_data", scope: !0, file: !1677, line: 524, type: !2004, isLocal: true, isDefinition: true, variable: [32 x [2 x i8]]* @mpa_huff_data)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 512, align: 8, elements: !2005)
!2005 = !{!1889, !1742}
!2006 = distinct !DIGlobalVariable(name: "mp3Frames", scope: !0, file: !1665, line: 1802, type: !2007, isLocal: true, isDefinition: true, variable: [8 x i8]* @mp3Frames)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 64, align: 8, elements: !1058)
!2008 = distinct !DIGlobalVariable(name: "chan_offset", scope: !0, file: !1665, line: 1805, type: !2009, isLocal: true, isDefinition: true, variable: [8 x [5 x i8]]* @chan_offset)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 320, align: 8, elements: !2010)
!2010 = !{!1059, !2011}
!2011 = !DISubrange(count: 5)
!2012 = distinct !DIGlobalVariable(name: "chan_layout", scope: !0, file: !1665, line: 1817, type: !2013, isLocal: true, isDefinition: true, variable: [8 x i16]* @chan_layout)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 128, align: 16, elements: !1058)
!2014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!2015 = !{i32 2, !"Dwarf Version", i32 4}
!2016 = !{i32 2, !"Debug Info Version", i32 3}
!2017 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2018 = !DILocalVariable(name: "avctx", arg: 1, scope: !1664, file: !1665, line: 421, type: !1029)
!2019 = !DIExpression()
!2020 = !DILocation(line: 421, column: 63, scope: !1664)
!2021 = !DILocalVariable(name: "s", scope: !1664, file: !1665, line: 424, type: !1847)
!2022 = !DILocation(line: 424, column: 23, scope: !1664)
!2023 = !DILocation(line: 424, column: 27, scope: !1664)
!2024 = !DILocation(line: 424, column: 34, scope: !1664)
!2025 = !DILocation(line: 426, column: 10, scope: !2026)
!2026 = distinct !DILexicalBlock(scope: !1664, file: !1665, line: 426, column: 9)
!2027 = !DILocation(line: 426, column: 9, scope: !1664)
!2028 = !DILocation(line: 427, column: 9, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2026, file: !1665, line: 426, column: 30)
!2030 = !DILocation(line: 428, column: 28, scope: !2029)
!2031 = !DILocation(line: 429, column: 5, scope: !2029)
!2032 = !DILocation(line: 431, column: 16, scope: !1664)
!2033 = !DILocation(line: 431, column: 5, scope: !1664)
!2034 = !DILocation(line: 431, column: 8, scope: !1664)
!2035 = !DILocation(line: 431, column: 14, scope: !1664)
!2036 = !DILocation(line: 439, column: 21, scope: !1664)
!2037 = !DILocation(line: 439, column: 24, scope: !1664)
!2038 = !DILocation(line: 439, column: 5, scope: !1664)
!2039 = !DILocation(line: 441, column: 9, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !1664, file: !1665, line: 441, column: 9)
!2041 = !DILocation(line: 441, column: 16, scope: !2040)
!2042 = !DILocation(line: 441, column: 35, scope: !2040)
!2043 = !DILocation(line: 441, column: 56, scope: !2040)
!2044 = !DILocation(line: 442, column: 9, scope: !2040)
!2045 = !DILocation(line: 442, column: 16, scope: !2040)
!2046 = !DILocation(line: 442, column: 25, scope: !2040)
!2047 = !DILocation(line: 441, column: 9, scope: !2048)
!2048 = !DILexicalBlockFile(scope: !1664, file: !1665, discriminator: 1)
!2049 = !DILocation(line: 443, column: 9, scope: !2040)
!2050 = !DILocation(line: 443, column: 16, scope: !2040)
!2051 = !DILocation(line: 443, column: 27, scope: !2040)
!2052 = !DILocation(line: 445, column: 9, scope: !2040)
!2053 = !DILocation(line: 445, column: 16, scope: !2040)
!2054 = !DILocation(line: 445, column: 27, scope: !2040)
!2055 = !DILocation(line: 446, column: 26, scope: !1664)
!2056 = !DILocation(line: 446, column: 33, scope: !1664)
!2057 = !DILocation(line: 446, column: 5, scope: !1664)
!2058 = !DILocation(line: 446, column: 8, scope: !1664)
!2059 = !DILocation(line: 446, column: 24, scope: !1664)
!2060 = !DILocation(line: 448, column: 9, scope: !2061)
!2061 = distinct !DILexicalBlock(scope: !1664, file: !1665, line: 448, column: 9)
!2062 = !DILocation(line: 448, column: 16, scope: !2061)
!2063 = !DILocation(line: 448, column: 25, scope: !2061)
!2064 = !DILocation(line: 448, column: 9, scope: !1664)
!2065 = !DILocation(line: 449, column: 9, scope: !2061)
!2066 = !DILocation(line: 449, column: 12, scope: !2061)
!2067 = !DILocation(line: 449, column: 21, scope: !2061)
!2068 = !DILocation(line: 451, column: 5, scope: !1664)
!2069 = distinct !DISubprogram(name: "decode_frame", scope: !1665, file: !1665, line: 1648, type: !1636, isLocal: true, isDefinition: true, scopeLine: 1650, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2070 = !DILocalVariable(name: "x", arg: 1, scope: !2071, file: !2072, line: 66, type: !901)
!2071 = distinct !DISubprogram(name: "av_bswap32", scope: !2072, file: !2072, line: 66, type: !2073, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2072 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!901, !901}
!2075 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !2076)
!2076 = distinct !DILocation(line: 1668, column: 22, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2069, file: !1665, line: 1668, column: 9)
!2078 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !2079)
!2079 = distinct !DILocation(line: 1667, column: 14, scope: !2069)
!2080 = !DILocalVariable(name: "avctx", arg: 1, scope: !2069, file: !1665, line: 1648, type: !1029)
!2081 = !DILocation(line: 1648, column: 42, scope: !2069)
!2082 = !DILocalVariable(name: "data", arg: 2, scope: !2069, file: !1665, line: 1648, type: !892)
!2083 = !DILocation(line: 1648, column: 55, scope: !2069)
!2084 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2069, file: !1665, line: 1648, type: !1321)
!2085 = !DILocation(line: 1648, column: 66, scope: !2069)
!2086 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2069, file: !1665, line: 1649, type: !1175)
!2087 = !DILocation(line: 1649, column: 35, scope: !2069)
!2088 = !DILocalVariable(name: "buf", scope: !2069, file: !1665, line: 1651, type: !1470)
!2089 = !DILocation(line: 1651, column: 20, scope: !2069)
!2090 = !DILocation(line: 1651, column: 26, scope: !2069)
!2091 = !DILocation(line: 1651, column: 33, scope: !2069)
!2092 = !DILocalVariable(name: "buf_size", scope: !2069, file: !1665, line: 1652, type: !891)
!2093 = !DILocation(line: 1652, column: 9, scope: !2069)
!2094 = !DILocation(line: 1652, column: 20, scope: !2069)
!2095 = !DILocation(line: 1652, column: 27, scope: !2069)
!2096 = !DILocalVariable(name: "s", scope: !2069, file: !1665, line: 1653, type: !1847)
!2097 = !DILocation(line: 1653, column: 23, scope: !2069)
!2098 = !DILocation(line: 1653, column: 27, scope: !2069)
!2099 = !DILocation(line: 1653, column: 34, scope: !2069)
!2100 = !DILocalVariable(name: "header", scope: !2069, file: !1665, line: 1654, type: !901)
!2101 = !DILocation(line: 1654, column: 14, scope: !2069)
!2102 = !DILocalVariable(name: "ret", scope: !2069, file: !1665, line: 1655, type: !891)
!2103 = !DILocation(line: 1655, column: 9, scope: !2069)
!2104 = !DILocalVariable(name: "skipped", scope: !2069, file: !1665, line: 1657, type: !891)
!2105 = !DILocation(line: 1657, column: 9, scope: !2069)
!2106 = !DILocation(line: 1658, column: 5, scope: !2069)
!2107 = !DILocation(line: 1658, column: 11, scope: !2108)
!2108 = !DILexicalBlockFile(scope: !2069, file: !1665, discriminator: 1)
!2109 = !DILocation(line: 1658, column: 20, scope: !2108)
!2110 = !DILocation(line: 1658, column: 25, scope: !2111)
!2111 = !DILexicalBlockFile(scope: !2069, file: !1665, discriminator: 2)
!2112 = !DILocation(line: 1658, column: 24, scope: !2111)
!2113 = !DILocation(line: 1658, column: 23, scope: !2111)
!2114 = !DILocation(line: 1658, column: 5, scope: !2115)
!2115 = !DILexicalBlockFile(scope: !2069, file: !1665, discriminator: 3)
!2116 = !DILocation(line: 1659, column: 12, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2069, file: !1665, line: 1658, column: 29)
!2118 = !DILocation(line: 1660, column: 17, scope: !2117)
!2119 = !DILocation(line: 1661, column: 16, scope: !2117)
!2120 = !DILocation(line: 1658, column: 5, scope: !2121)
!2121 = !DILexicalBlockFile(scope: !2069, file: !1665, discriminator: 4)
!2122 = distinct !{!2122, !2106}
!2123 = !DILocation(line: 1664, column: 9, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2069, file: !1665, line: 1664, column: 9)
!2125 = !DILocation(line: 1664, column: 18, scope: !2124)
!2126 = !DILocation(line: 1664, column: 9, scope: !2069)
!2127 = !DILocation(line: 1665, column: 9, scope: !2124)
!2128 = !DILocation(line: 1667, column: 57, scope: !2069)
!2129 = !DILocation(line: 1667, column: 64, scope: !2069)
!2130 = !DILocation(line: 1667, column: 14, scope: !2069)
!2131 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !2079)
!2132 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !2079)
!2133 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !2079)
!2134 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !2079)
!2135 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !2079)
!2136 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !2079)
!2137 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !2079)
!2138 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !2079)
!2139 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !2079)
!2140 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !2079)
!2141 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !2079)
!2142 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !2079)
!2143 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !2079)
!2144 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !2079)
!2145 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !2079)
!2146 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !2079)
!2147 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !2079)
!2148 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !2079)
!2149 = !DILocation(line: 1667, column: 12, scope: !2069)
!2150 = !DILocation(line: 1668, column: 9, scope: !2077)
!2151 = !DILocation(line: 1668, column: 15, scope: !2077)
!2152 = !DILocation(line: 1668, column: 74, scope: !2077)
!2153 = !DILocation(line: 1668, column: 22, scope: !2077)
!2154 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !2076)
!2155 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !2076)
!2156 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !2076)
!2157 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !2076)
!2158 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !2076)
!2159 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !2076)
!2160 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !2076)
!2161 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !2076)
!2162 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !2076)
!2163 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !2076)
!2164 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !2076)
!2165 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !2076)
!2166 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !2076)
!2167 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !2076)
!2168 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !2076)
!2169 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !2076)
!2170 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !2076)
!2171 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !2076)
!2172 = !DILocation(line: 1668, column: 77, scope: !2077)
!2173 = !DILocation(line: 1668, column: 19, scope: !2077)
!2174 = !DILocation(line: 1668, column: 9, scope: !2069)
!2175 = !DILocation(line: 1669, column: 16, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2077, file: !1665, line: 1668, column: 82)
!2177 = !DILocation(line: 1669, column: 9, scope: !2176)
!2178 = !DILocation(line: 1670, column: 16, scope: !2176)
!2179 = !DILocation(line: 1670, column: 27, scope: !2176)
!2180 = !DILocation(line: 1670, column: 25, scope: !2176)
!2181 = !DILocation(line: 1670, column: 9, scope: !2176)
!2182 = !DILocation(line: 1672, column: 61, scope: !2069)
!2183 = !DILocation(line: 1672, column: 42, scope: !2069)
!2184 = !DILocation(line: 1672, column: 64, scope: !2069)
!2185 = !DILocation(line: 1672, column: 11, scope: !2069)
!2186 = !DILocation(line: 1672, column: 9, scope: !2069)
!2187 = !DILocation(line: 1673, column: 9, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2069, file: !1665, line: 1673, column: 9)
!2189 = !DILocation(line: 1673, column: 13, scope: !2188)
!2190 = !DILocation(line: 1673, column: 9, scope: !2069)
!2191 = !DILocation(line: 1674, column: 16, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2188, file: !1665, line: 1673, column: 18)
!2193 = !DILocation(line: 1674, column: 9, scope: !2192)
!2194 = !DILocation(line: 1675, column: 9, scope: !2192)
!2195 = !DILocation(line: 1676, column: 16, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2188, file: !1665, line: 1676, column: 16)
!2197 = !DILocation(line: 1676, column: 20, scope: !2196)
!2198 = !DILocation(line: 1676, column: 16, scope: !2188)
!2199 = !DILocation(line: 1678, column: 9, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !2196, file: !1665, line: 1676, column: 26)
!2201 = !DILocation(line: 1678, column: 12, scope: !2200)
!2202 = !DILocation(line: 1678, column: 23, scope: !2200)
!2203 = !DILocation(line: 1679, column: 9, scope: !2200)
!2204 = !DILocation(line: 1682, column: 23, scope: !2069)
!2205 = !DILocation(line: 1682, column: 26, scope: !2069)
!2206 = !DILocation(line: 1682, column: 5, scope: !2069)
!2207 = !DILocation(line: 1682, column: 12, scope: !2069)
!2208 = !DILocation(line: 1682, column: 21, scope: !2069)
!2209 = !DILocation(line: 1683, column: 29, scope: !2069)
!2210 = !DILocation(line: 1683, column: 32, scope: !2069)
!2211 = !DILocation(line: 1683, column: 44, scope: !2069)
!2212 = !DILocation(line: 1683, column: 5, scope: !2069)
!2213 = !DILocation(line: 1683, column: 12, scope: !2069)
!2214 = !DILocation(line: 1683, column: 27, scope: !2069)
!2215 = !DILocation(line: 1684, column: 10, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2069, file: !1665, line: 1684, column: 9)
!2217 = !DILocation(line: 1684, column: 17, scope: !2216)
!2218 = !DILocation(line: 1684, column: 9, scope: !2069)
!2219 = !DILocation(line: 1685, column: 27, scope: !2216)
!2220 = !DILocation(line: 1685, column: 30, scope: !2216)
!2221 = !DILocation(line: 1685, column: 9, scope: !2216)
!2222 = !DILocation(line: 1685, column: 16, scope: !2216)
!2223 = !DILocation(line: 1685, column: 25, scope: !2216)
!2224 = !DILocation(line: 1687, column: 9, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2069, file: !1665, line: 1687, column: 9)
!2226 = !DILocation(line: 1687, column: 12, scope: !2225)
!2227 = !DILocation(line: 1687, column: 23, scope: !2225)
!2228 = !DILocation(line: 1687, column: 9, scope: !2069)
!2229 = !DILocation(line: 1688, column: 16, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2225, file: !1665, line: 1687, column: 29)
!2231 = !DILocation(line: 1688, column: 9, scope: !2230)
!2232 = !DILocation(line: 1689, column: 9, scope: !2230)
!2233 = !DILocation(line: 1690, column: 16, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2225, file: !1665, line: 1690, column: 16)
!2235 = !DILocation(line: 1690, column: 19, scope: !2234)
!2236 = !DILocation(line: 1690, column: 32, scope: !2234)
!2237 = !DILocation(line: 1690, column: 30, scope: !2234)
!2238 = !DILocation(line: 1690, column: 16, scope: !2225)
!2239 = !DILocation(line: 1691, column: 16, scope: !2240)
!2240 = distinct !DILexicalBlock(scope: !2234, file: !1665, line: 1690, column: 42)
!2241 = !DILocation(line: 1691, column: 9, scope: !2240)
!2242 = !DILocation(line: 1692, column: 19, scope: !2240)
!2243 = !DILocation(line: 1692, column: 22, scope: !2240)
!2244 = !DILocation(line: 1692, column: 17, scope: !2240)
!2245 = !DILocation(line: 1693, column: 5, scope: !2240)
!2246 = !DILocation(line: 1695, column: 16, scope: !2069)
!2247 = !DILocation(line: 1695, column: 5, scope: !2069)
!2248 = !DILocation(line: 1695, column: 8, scope: !2069)
!2249 = !DILocation(line: 1695, column: 14, scope: !2069)
!2250 = !DILocation(line: 1697, column: 27, scope: !2069)
!2251 = !DILocation(line: 1697, column: 35, scope: !2069)
!2252 = !DILocation(line: 1697, column: 40, scope: !2069)
!2253 = !DILocation(line: 1697, column: 11, scope: !2069)
!2254 = !DILocation(line: 1697, column: 9, scope: !2069)
!2255 = !DILocation(line: 1698, column: 9, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2069, file: !1665, line: 1698, column: 9)
!2257 = !DILocation(line: 1698, column: 13, scope: !2256)
!2258 = !DILocation(line: 1698, column: 9, scope: !2069)
!2259 = !DILocation(line: 1699, column: 32, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2256, file: !1665, line: 1698, column: 19)
!2261 = !DILocation(line: 1699, column: 39, scope: !2260)
!2262 = !DILocation(line: 1699, column: 9, scope: !2260)
!2263 = !DILocation(line: 1699, column: 12, scope: !2260)
!2264 = !DILocation(line: 1699, column: 19, scope: !2260)
!2265 = !DILocation(line: 1699, column: 30, scope: !2260)
!2266 = !DILocation(line: 1700, column: 10, scope: !2260)
!2267 = !DILocation(line: 1700, column: 24, scope: !2260)
!2268 = !DILocation(line: 1701, column: 30, scope: !2260)
!2269 = !DILocation(line: 1701, column: 33, scope: !2260)
!2270 = !DILocation(line: 1701, column: 9, scope: !2260)
!2271 = !DILocation(line: 1701, column: 16, scope: !2260)
!2272 = !DILocation(line: 1701, column: 28, scope: !2260)
!2273 = !DILocation(line: 1703, column: 5, scope: !2260)
!2274 = !DILocation(line: 1704, column: 16, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2256, file: !1665, line: 1703, column: 12)
!2276 = !DILocation(line: 1704, column: 9, scope: !2275)
!2277 = !DILocation(line: 1710, column: 10, scope: !2275)
!2278 = !DILocation(line: 1710, column: 24, scope: !2275)
!2279 = !DILocation(line: 1711, column: 13, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2275, file: !1665, line: 1711, column: 13)
!2281 = !DILocation(line: 1711, column: 25, scope: !2280)
!2282 = !DILocation(line: 1711, column: 32, scope: !2280)
!2283 = !DILocation(line: 1711, column: 22, scope: !2280)
!2284 = !DILocation(line: 1711, column: 37, scope: !2280)
!2285 = !DILocation(line: 1711, column: 40, scope: !2286)
!2286 = !DILexicalBlockFile(scope: !2280, file: !1665, discriminator: 1)
!2287 = !DILocation(line: 1711, column: 44, scope: !2286)
!2288 = !DILocation(line: 1711, column: 13, scope: !2286)
!2289 = !DILocation(line: 1712, column: 20, scope: !2280)
!2290 = !DILocation(line: 1712, column: 13, scope: !2280)
!2291 = !DILocation(line: 1714, column: 5, scope: !2069)
!2292 = !DILocation(line: 1714, column: 8, scope: !2069)
!2293 = !DILocation(line: 1714, column: 19, scope: !2069)
!2294 = !DILocation(line: 1715, column: 12, scope: !2069)
!2295 = !DILocation(line: 1715, column: 23, scope: !2069)
!2296 = !DILocation(line: 1715, column: 21, scope: !2069)
!2297 = !DILocation(line: 1715, column: 5, scope: !2069)
!2298 = !DILocation(line: 1716, column: 1, scope: !2069)
!2299 = distinct !DISubprogram(name: "flush", scope: !1665, file: !1665, line: 1726, type: !1650, isLocal: true, isDefinition: true, scopeLine: 1727, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2300 = !DILocalVariable(name: "avctx", arg: 1, scope: !2299, file: !1665, line: 1726, type: !1029)
!2301 = !DILocation(line: 1726, column: 35, scope: !2299)
!2302 = !DILocation(line: 1728, column: 14, scope: !2299)
!2303 = !DILocation(line: 1728, column: 21, scope: !2299)
!2304 = !DILocation(line: 1728, column: 5, scope: !2299)
!2305 = !DILocation(line: 1729, column: 1, scope: !2299)
!2306 = distinct !DISubprogram(name: "decode_frame_adu", scope: !1665, file: !1665, line: 1732, type: !1636, isLocal: true, isDefinition: true, scopeLine: 1734, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2307 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !2308)
!2308 = distinct !DILocation(line: 1755, column: 14, scope: !2306)
!2309 = !DILocalVariable(name: "avctx", arg: 1, scope: !2306, file: !1665, line: 1732, type: !1029)
!2310 = !DILocation(line: 1732, column: 45, scope: !2306)
!2311 = !DILocalVariable(name: "data", arg: 2, scope: !2306, file: !1665, line: 1732, type: !892)
!2312 = !DILocation(line: 1732, column: 58, scope: !2306)
!2313 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2306, file: !1665, line: 1733, type: !1321)
!2314 = !DILocation(line: 1733, column: 34, scope: !2306)
!2315 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2306, file: !1665, line: 1733, type: !1175)
!2316 = !DILocation(line: 1733, column: 59, scope: !2306)
!2317 = !DILocalVariable(name: "buf", scope: !2306, file: !1665, line: 1735, type: !1470)
!2318 = !DILocation(line: 1735, column: 20, scope: !2306)
!2319 = !DILocation(line: 1735, column: 26, scope: !2306)
!2320 = !DILocation(line: 1735, column: 33, scope: !2306)
!2321 = !DILocalVariable(name: "buf_size", scope: !2306, file: !1665, line: 1736, type: !891)
!2322 = !DILocation(line: 1736, column: 9, scope: !2306)
!2323 = !DILocation(line: 1736, column: 20, scope: !2306)
!2324 = !DILocation(line: 1736, column: 27, scope: !2306)
!2325 = !DILocalVariable(name: "s", scope: !2306, file: !1665, line: 1737, type: !1847)
!2326 = !DILocation(line: 1737, column: 23, scope: !2306)
!2327 = !DILocation(line: 1737, column: 27, scope: !2306)
!2328 = !DILocation(line: 1737, column: 34, scope: !2306)
!2329 = !DILocalVariable(name: "header", scope: !2306, file: !1665, line: 1738, type: !901)
!2330 = !DILocation(line: 1738, column: 14, scope: !2306)
!2331 = !DILocalVariable(name: "len", scope: !2306, file: !1665, line: 1739, type: !891)
!2332 = !DILocation(line: 1739, column: 9, scope: !2306)
!2333 = !DILocalVariable(name: "ret", scope: !2306, file: !1665, line: 1739, type: !891)
!2334 = !DILocation(line: 1739, column: 14, scope: !2306)
!2335 = !DILocalVariable(name: "out_size", scope: !2306, file: !1665, line: 1740, type: !891)
!2336 = !DILocation(line: 1740, column: 33, scope: !2306)
!2337 = !DILocation(line: 1742, column: 11, scope: !2306)
!2338 = !DILocation(line: 1742, column: 9, scope: !2306)
!2339 = !DILocation(line: 1745, column: 9, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2306, file: !1665, line: 1745, column: 9)
!2341 = !DILocation(line: 1745, column: 18, scope: !2340)
!2342 = !DILocation(line: 1745, column: 9, scope: !2306)
!2343 = !DILocation(line: 1746, column: 16, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2340, file: !1665, line: 1745, column: 23)
!2345 = !DILocation(line: 1746, column: 9, scope: !2344)
!2346 = !DILocation(line: 1747, column: 9, scope: !2344)
!2347 = !DILocation(line: 1751, column: 9, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2306, file: !1665, line: 1751, column: 9)
!2349 = !DILocation(line: 1751, column: 13, scope: !2348)
!2350 = !DILocation(line: 1751, column: 9, scope: !2306)
!2351 = !DILocation(line: 1752, column: 13, scope: !2348)
!2352 = !DILocation(line: 1752, column: 9, scope: !2348)
!2353 = !DILocation(line: 1755, column: 57, scope: !2306)
!2354 = !DILocation(line: 1755, column: 64, scope: !2306)
!2355 = !DILocation(line: 1755, column: 14, scope: !2306)
!2356 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !2308)
!2357 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !2308)
!2358 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !2308)
!2359 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !2308)
!2360 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !2308)
!2361 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !2308)
!2362 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !2308)
!2363 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !2308)
!2364 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !2308)
!2365 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !2308)
!2366 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !2308)
!2367 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !2308)
!2368 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !2308)
!2369 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !2308)
!2370 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !2308)
!2371 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !2308)
!2372 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !2308)
!2373 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !2308)
!2374 = !DILocation(line: 1755, column: 68, scope: !2306)
!2375 = !DILocation(line: 1755, column: 12, scope: !2306)
!2376 = !DILocation(line: 1757, column: 61, scope: !2306)
!2377 = !DILocation(line: 1757, column: 42, scope: !2306)
!2378 = !DILocation(line: 1757, column: 64, scope: !2306)
!2379 = !DILocation(line: 1757, column: 11, scope: !2306)
!2380 = !DILocation(line: 1757, column: 9, scope: !2306)
!2381 = !DILocation(line: 1758, column: 9, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2306, file: !1665, line: 1758, column: 9)
!2383 = !DILocation(line: 1758, column: 13, scope: !2382)
!2384 = !DILocation(line: 1758, column: 9, scope: !2306)
!2385 = !DILocation(line: 1759, column: 16, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2382, file: !1665, line: 1758, column: 18)
!2387 = !DILocation(line: 1759, column: 9, scope: !2386)
!2388 = !DILocation(line: 1760, column: 16, scope: !2386)
!2389 = !DILocation(line: 1760, column: 9, scope: !2386)
!2390 = !DILocation(line: 1763, column: 26, scope: !2306)
!2391 = !DILocation(line: 1763, column: 29, scope: !2306)
!2392 = !DILocation(line: 1763, column: 5, scope: !2306)
!2393 = !DILocation(line: 1763, column: 12, scope: !2306)
!2394 = !DILocation(line: 1763, column: 24, scope: !2306)
!2395 = !DILocation(line: 1764, column: 23, scope: !2306)
!2396 = !DILocation(line: 1764, column: 26, scope: !2306)
!2397 = !DILocation(line: 1764, column: 5, scope: !2306)
!2398 = !DILocation(line: 1764, column: 12, scope: !2306)
!2399 = !DILocation(line: 1764, column: 21, scope: !2306)
!2400 = !DILocation(line: 1765, column: 29, scope: !2306)
!2401 = !DILocation(line: 1765, column: 32, scope: !2306)
!2402 = !DILocation(line: 1765, column: 44, scope: !2306)
!2403 = !DILocation(line: 1765, column: 5, scope: !2306)
!2404 = !DILocation(line: 1765, column: 12, scope: !2306)
!2405 = !DILocation(line: 1765, column: 27, scope: !2306)
!2406 = !DILocation(line: 1766, column: 10, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2306, file: !1665, line: 1766, column: 9)
!2408 = !DILocation(line: 1766, column: 17, scope: !2407)
!2409 = !DILocation(line: 1766, column: 9, scope: !2306)
!2410 = !DILocation(line: 1767, column: 27, scope: !2407)
!2411 = !DILocation(line: 1767, column: 30, scope: !2407)
!2412 = !DILocation(line: 1767, column: 9, scope: !2407)
!2413 = !DILocation(line: 1767, column: 16, scope: !2407)
!2414 = !DILocation(line: 1767, column: 25, scope: !2407)
!2415 = !DILocation(line: 1769, column: 21, scope: !2306)
!2416 = !DILocation(line: 1769, column: 5, scope: !2306)
!2417 = !DILocation(line: 1769, column: 8, scope: !2306)
!2418 = !DILocation(line: 1769, column: 19, scope: !2306)
!2419 = !DILocation(line: 1771, column: 16, scope: !2306)
!2420 = !DILocation(line: 1771, column: 5, scope: !2306)
!2421 = !DILocation(line: 1771, column: 8, scope: !2306)
!2422 = !DILocation(line: 1771, column: 14, scope: !2306)
!2423 = !DILocation(line: 1773, column: 27, scope: !2306)
!2424 = !DILocation(line: 1773, column: 35, scope: !2306)
!2425 = !DILocation(line: 1773, column: 40, scope: !2306)
!2426 = !DILocation(line: 1773, column: 11, scope: !2306)
!2427 = !DILocation(line: 1773, column: 9, scope: !2306)
!2428 = !DILocation(line: 1774, column: 9, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2306, file: !1665, line: 1774, column: 9)
!2430 = !DILocation(line: 1774, column: 13, scope: !2429)
!2431 = !DILocation(line: 1774, column: 9, scope: !2306)
!2432 = !DILocation(line: 1775, column: 16, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2429, file: !1665, line: 1774, column: 18)
!2434 = !DILocation(line: 1775, column: 9, scope: !2433)
!2435 = !DILocation(line: 1776, column: 16, scope: !2433)
!2436 = !DILocation(line: 1776, column: 9, scope: !2433)
!2437 = !DILocation(line: 1779, column: 6, scope: !2306)
!2438 = !DILocation(line: 1779, column: 20, scope: !2306)
!2439 = !DILocation(line: 1781, column: 12, scope: !2306)
!2440 = !DILocation(line: 1781, column: 5, scope: !2306)
!2441 = !DILocation(line: 1782, column: 1, scope: !2306)
!2442 = distinct !DISubprogram(name: "decode_init_mp3on4", scope: !1665, file: !1665, line: 1843, type: !1027, isLocal: true, isDefinition: true, scopeLine: 1844, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2443 = !DILocalVariable(name: "avctx", arg: 1, scope: !2442, file: !1665, line: 1843, type: !1029)
!2444 = !DILocation(line: 1843, column: 70, scope: !2442)
!2445 = !DILocalVariable(name: "s", scope: !2442, file: !1665, line: 1845, type: !2446)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64, align: 64)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "MP3On4DecodeContext", file: !1665, line: 1795, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MP3On4DecodeContext", file: !1665, line: 1790, size: 448, align: 64, elements: !2449)
!2449 = !{!2450, !2451, !2452, !2453}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2448, file: !1665, line: 1791, baseType: !891, size: 32, align: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "syncword", scope: !2448, file: !1665, line: 1792, baseType: !891, size: 32, align: 32, offset: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "coff", scope: !2448, file: !1665, line: 1793, baseType: !1470, size: 64, align: 64, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "mp3decctx", scope: !2448, file: !1665, line: 1794, baseType: !2454, size: 320, align: 64, offset: 128)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 320, align: 64, elements: !2455)
!2455 = !{!2011}
!2456 = !DILocation(line: 1845, column: 26, scope: !2442)
!2457 = !DILocation(line: 1845, column: 30, scope: !2442)
!2458 = !DILocation(line: 1845, column: 37, scope: !2442)
!2459 = !DILocalVariable(name: "cfg", scope: !2442, file: !1665, line: 1846, type: !2460)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !2461, line: 46, baseType: !2462)
!2461 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !2461, line: 33, size: 384, align: 32, elements: !2463)
!2463 = !{!2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2462, file: !2461, line: 34, baseType: !891, size: 32, align: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2462, file: !2461, line: 35, baseType: !891, size: 32, align: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2462, file: !2461, line: 36, baseType: !891, size: 32, align: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2462, file: !2461, line: 37, baseType: !891, size: 32, align: 32, offset: 96)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2462, file: !2461, line: 38, baseType: !891, size: 32, align: 32, offset: 128)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2462, file: !2461, line: 39, baseType: !891, size: 32, align: 32, offset: 160)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2462, file: !2461, line: 40, baseType: !891, size: 32, align: 32, offset: 192)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2462, file: !2461, line: 41, baseType: !891, size: 32, align: 32, offset: 224)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2462, file: !2461, line: 42, baseType: !891, size: 32, align: 32, offset: 256)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2462, file: !2461, line: 43, baseType: !891, size: 32, align: 32, offset: 288)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2462, file: !2461, line: 44, baseType: !891, size: 32, align: 32, offset: 320)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2462, file: !2461, line: 45, baseType: !891, size: 32, align: 32, offset: 352)
!2476 = !DILocation(line: 1846, column: 22, scope: !2442)
!2477 = !DILocalVariable(name: "i", scope: !2442, file: !1665, line: 1847, type: !891)
!2478 = !DILocation(line: 1847, column: 9, scope: !2442)
!2479 = !DILocation(line: 1849, column: 10, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2442, file: !1665, line: 1849, column: 9)
!2481 = !DILocation(line: 1849, column: 17, scope: !2480)
!2482 = !DILocation(line: 1849, column: 32, scope: !2480)
!2483 = !DILocation(line: 1849, column: 37, scope: !2480)
!2484 = !DILocation(line: 1849, column: 41, scope: !2485)
!2485 = !DILexicalBlockFile(scope: !2480, file: !1665, discriminator: 1)
!2486 = !DILocation(line: 1849, column: 48, scope: !2485)
!2487 = !DILocation(line: 1849, column: 9, scope: !2485)
!2488 = !DILocation(line: 1850, column: 16, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2480, file: !1665, line: 1849, column: 59)
!2490 = !DILocation(line: 1850, column: 9, scope: !2489)
!2491 = !DILocation(line: 1851, column: 9, scope: !2489)
!2492 = !DILocation(line: 1854, column: 40, scope: !2442)
!2493 = !DILocation(line: 1854, column: 47, scope: !2442)
!2494 = !DILocation(line: 1855, column: 34, scope: !2442)
!2495 = !DILocation(line: 1855, column: 41, scope: !2442)
!2496 = !DILocation(line: 1855, column: 56, scope: !2442)
!2497 = !DILocation(line: 1854, column: 5, scope: !2442)
!2498 = !DILocation(line: 1856, column: 14, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2442, file: !1665, line: 1856, column: 9)
!2500 = !DILocation(line: 1856, column: 10, scope: !2499)
!2501 = !DILocation(line: 1856, column: 26, scope: !2499)
!2502 = !DILocation(line: 1856, column: 33, scope: !2503)
!2503 = !DILexicalBlockFile(scope: !2499, file: !1665, discriminator: 1)
!2504 = !DILocation(line: 1856, column: 45, scope: !2503)
!2505 = !DILocation(line: 1856, column: 9, scope: !2503)
!2506 = !DILocation(line: 1857, column: 16, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2499, file: !1665, line: 1856, column: 50)
!2508 = !DILocation(line: 1857, column: 9, scope: !2507)
!2509 = !DILocation(line: 1858, column: 9, scope: !2507)
!2510 = !DILocation(line: 1860, column: 31, scope: !2442)
!2511 = !DILocation(line: 1860, column: 17, scope: !2442)
!2512 = !DILocation(line: 1860, column: 5, scope: !2442)
!2513 = !DILocation(line: 1860, column: 8, scope: !2442)
!2514 = !DILocation(line: 1860, column: 15, scope: !2442)
!2515 = !DILocation(line: 1861, column: 31, scope: !2442)
!2516 = !DILocation(line: 1861, column: 15, scope: !2442)
!2517 = !DILocation(line: 1861, column: 5, scope: !2442)
!2518 = !DILocation(line: 1861, column: 8, scope: !2442)
!2519 = !DILocation(line: 1861, column: 13, scope: !2442)
!2520 = !DILocation(line: 1862, column: 50, scope: !2442)
!2521 = !DILocation(line: 1862, column: 23, scope: !2442)
!2522 = !DILocation(line: 1862, column: 5, scope: !2442)
!2523 = !DILocation(line: 1862, column: 12, scope: !2442)
!2524 = !DILocation(line: 1862, column: 21, scope: !2442)
!2525 = !DILocation(line: 1863, column: 45, scope: !2442)
!2526 = !DILocation(line: 1863, column: 29, scope: !2442)
!2527 = !DILocation(line: 1863, column: 5, scope: !2442)
!2528 = !DILocation(line: 1863, column: 12, scope: !2442)
!2529 = !DILocation(line: 1863, column: 27, scope: !2442)
!2530 = !DILocation(line: 1865, column: 13, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2442, file: !1665, line: 1865, column: 9)
!2532 = !DILocation(line: 1865, column: 25, scope: !2531)
!2533 = !DILocation(line: 1865, column: 9, scope: !2442)
!2534 = !DILocation(line: 1866, column: 9, scope: !2531)
!2535 = !DILocation(line: 1866, column: 12, scope: !2531)
!2536 = !DILocation(line: 1866, column: 21, scope: !2531)
!2537 = !DILocation(line: 1868, column: 9, scope: !2531)
!2538 = !DILocation(line: 1868, column: 12, scope: !2531)
!2539 = !DILocation(line: 1868, column: 21, scope: !2531)
!2540 = !DILocation(line: 1876, column: 23, scope: !2442)
!2541 = !DILocation(line: 1876, column: 5, scope: !2442)
!2542 = !DILocation(line: 1876, column: 8, scope: !2442)
!2543 = !DILocation(line: 1876, column: 21, scope: !2442)
!2544 = !DILocation(line: 1877, column: 10, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2442, file: !1665, line: 1877, column: 9)
!2546 = !DILocation(line: 1877, column: 13, scope: !2545)
!2547 = !DILocation(line: 1877, column: 9, scope: !2442)
!2548 = !DILocation(line: 1878, column: 9, scope: !2545)
!2549 = !DILocation(line: 1880, column: 24, scope: !2442)
!2550 = !DILocation(line: 1880, column: 27, scope: !2442)
!2551 = !DILocation(line: 1880, column: 5, scope: !2442)
!2552 = !DILocation(line: 1880, column: 12, scope: !2442)
!2553 = !DILocation(line: 1880, column: 22, scope: !2442)
!2554 = !DILocation(line: 1881, column: 17, scope: !2442)
!2555 = !DILocation(line: 1881, column: 5, scope: !2442)
!2556 = !DILocation(line: 1883, column: 24, scope: !2442)
!2557 = !DILocation(line: 1883, column: 5, scope: !2442)
!2558 = !DILocation(line: 1883, column: 12, scope: !2442)
!2559 = !DILocation(line: 1883, column: 22, scope: !2442)
!2560 = !DILocation(line: 1884, column: 5, scope: !2442)
!2561 = !DILocation(line: 1884, column: 8, scope: !2442)
!2562 = !DILocation(line: 1884, column: 22, scope: !2442)
!2563 = !DILocation(line: 1884, column: 31, scope: !2442)
!2564 = !DILocation(line: 1889, column: 12, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2442, file: !1665, line: 1889, column: 5)
!2566 = !DILocation(line: 1889, column: 10, scope: !2565)
!2567 = !DILocation(line: 1889, column: 17, scope: !2568)
!2568 = !DILexicalBlockFile(scope: !2569, file: !1665, discriminator: 1)
!2569 = distinct !DILexicalBlock(scope: !2565, file: !1665, line: 1889, column: 5)
!2570 = !DILocation(line: 1889, column: 21, scope: !2568)
!2571 = !DILocation(line: 1889, column: 24, scope: !2568)
!2572 = !DILocation(line: 1889, column: 19, scope: !2568)
!2573 = !DILocation(line: 1889, column: 5, scope: !2568)
!2574 = !DILocation(line: 1890, column: 27, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2569, file: !1665, line: 1889, column: 37)
!2576 = !DILocation(line: 1890, column: 22, scope: !2575)
!2577 = !DILocation(line: 1890, column: 9, scope: !2575)
!2578 = !DILocation(line: 1890, column: 12, scope: !2575)
!2579 = !DILocation(line: 1890, column: 25, scope: !2575)
!2580 = !DILocation(line: 1891, column: 27, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2575, file: !1665, line: 1891, column: 13)
!2582 = !DILocation(line: 1891, column: 14, scope: !2581)
!2583 = !DILocation(line: 1891, column: 17, scope: !2581)
!2584 = !DILocation(line: 1891, column: 13, scope: !2575)
!2585 = !DILocation(line: 1892, column: 13, scope: !2581)
!2586 = !DILocation(line: 1893, column: 22, scope: !2575)
!2587 = !DILocation(line: 1893, column: 9, scope: !2575)
!2588 = !DILocation(line: 1893, column: 12, scope: !2575)
!2589 = !DILocation(line: 1893, column: 26, scope: !2575)
!2590 = !DILocation(line: 1893, column: 35, scope: !2575)
!2591 = !DILocation(line: 1894, column: 34, scope: !2575)
!2592 = !DILocation(line: 1894, column: 22, scope: !2575)
!2593 = !DILocation(line: 1894, column: 9, scope: !2575)
!2594 = !DILocation(line: 1894, column: 12, scope: !2575)
!2595 = !DILocation(line: 1894, column: 26, scope: !2575)
!2596 = !DILocation(line: 1894, column: 32, scope: !2575)
!2597 = !DILocation(line: 1895, column: 22, scope: !2575)
!2598 = !DILocation(line: 1895, column: 9, scope: !2575)
!2599 = !DILocation(line: 1895, column: 12, scope: !2575)
!2600 = !DILocation(line: 1895, column: 26, scope: !2575)
!2601 = !DILocation(line: 1895, column: 35, scope: !2575)
!2602 = !DILocation(line: 1895, column: 38, scope: !2575)
!2603 = !DILocation(line: 1895, column: 52, scope: !2575)
!2604 = !DILocation(line: 1896, column: 33, scope: !2575)
!2605 = !DILocation(line: 1896, column: 36, scope: !2575)
!2606 = !DILocation(line: 1896, column: 50, scope: !2575)
!2607 = !DILocation(line: 1896, column: 22, scope: !2575)
!2608 = !DILocation(line: 1896, column: 9, scope: !2575)
!2609 = !DILocation(line: 1896, column: 12, scope: !2575)
!2610 = !DILocation(line: 1896, column: 26, scope: !2575)
!2611 = !DILocation(line: 1896, column: 31, scope: !2575)
!2612 = !DILocation(line: 1897, column: 5, scope: !2575)
!2613 = !DILocation(line: 1889, column: 33, scope: !2614)
!2614 = !DILexicalBlockFile(scope: !2569, file: !1665, discriminator: 2)
!2615 = !DILocation(line: 1889, column: 5, scope: !2614)
!2616 = distinct !{!2616, !2617}
!2617 = !DILocation(line: 1889, column: 5, scope: !2442)
!2618 = !DILocation(line: 1899, column: 5, scope: !2442)
!2619 = !DILocation(line: 1901, column: 25, scope: !2442)
!2620 = !DILocation(line: 1901, column: 5, scope: !2442)
!2621 = !DILocation(line: 1902, column: 5, scope: !2442)
!2622 = !DILocation(line: 1903, column: 1, scope: !2442)
!2623 = distinct !DISubprogram(name: "decode_frame_mp3on4", scope: !1665, file: !1665, line: 1916, type: !1636, isLocal: true, isDefinition: true, scopeLine: 1918, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2624 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !2625)
!2625 = distinct !DILocation(line: 1953, column: 19, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2627, file: !1665, line: 1943, column: 40)
!2627 = distinct !DILexicalBlock(scope: !2628, file: !1665, line: 1943, column: 5)
!2628 = distinct !DILexicalBlock(scope: !2623, file: !1665, line: 1943, column: 5)
!2629 = !DILocalVariable(name: "x", arg: 1, scope: !2630, file: !2072, line: 58, type: !932)
!2630 = distinct !DISubprogram(name: "av_bswap16", scope: !2072, file: !2072, line: 58, type: !2631, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!932, !932}
!2633 = !DILocation(line: 58, column: 98, scope: !2630, inlinedAt: !2634)
!2634 = distinct !DILocation(line: 1944, column: 17, scope: !2626)
!2635 = !DILocalVariable(name: "avctx", arg: 1, scope: !2623, file: !1665, line: 1916, type: !1029)
!2636 = !DILocation(line: 1916, column: 48, scope: !2623)
!2637 = !DILocalVariable(name: "data", arg: 2, scope: !2623, file: !1665, line: 1916, type: !892)
!2638 = !DILocation(line: 1916, column: 61, scope: !2623)
!2639 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2623, file: !1665, line: 1917, type: !1321)
!2640 = !DILocation(line: 1917, column: 37, scope: !2623)
!2641 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2623, file: !1665, line: 1917, type: !1175)
!2642 = !DILocation(line: 1917, column: 62, scope: !2623)
!2643 = !DILocalVariable(name: "frame", scope: !2623, file: !1665, line: 1919, type: !1051)
!2644 = !DILocation(line: 1919, column: 14, scope: !2623)
!2645 = !DILocation(line: 1919, column: 22, scope: !2623)
!2646 = !DILocalVariable(name: "buf", scope: !2623, file: !1665, line: 1920, type: !1470)
!2647 = !DILocation(line: 1920, column: 20, scope: !2623)
!2648 = !DILocation(line: 1920, column: 26, scope: !2623)
!2649 = !DILocation(line: 1920, column: 33, scope: !2623)
!2650 = !DILocalVariable(name: "buf_size", scope: !2623, file: !1665, line: 1921, type: !891)
!2651 = !DILocation(line: 1921, column: 9, scope: !2623)
!2652 = !DILocation(line: 1921, column: 20, scope: !2623)
!2653 = !DILocation(line: 1921, column: 27, scope: !2623)
!2654 = !DILocalVariable(name: "s", scope: !2623, file: !1665, line: 1922, type: !2446)
!2655 = !DILocation(line: 1922, column: 26, scope: !2623)
!2656 = !DILocation(line: 1922, column: 30, scope: !2623)
!2657 = !DILocation(line: 1922, column: 37, scope: !2623)
!2658 = !DILocalVariable(name: "m", scope: !2623, file: !1665, line: 1923, type: !1847)
!2659 = !DILocation(line: 1923, column: 23, scope: !2623)
!2660 = !DILocalVariable(name: "fsize", scope: !2623, file: !1665, line: 1924, type: !891)
!2661 = !DILocation(line: 1924, column: 9, scope: !2623)
!2662 = !DILocalVariable(name: "len", scope: !2623, file: !1665, line: 1924, type: !891)
!2663 = !DILocation(line: 1924, column: 16, scope: !2623)
!2664 = !DILocation(line: 1924, column: 22, scope: !2623)
!2665 = !DILocalVariable(name: "out_size", scope: !2623, file: !1665, line: 1924, type: !891)
!2666 = !DILocation(line: 1924, column: 32, scope: !2623)
!2667 = !DILocalVariable(name: "header", scope: !2623, file: !1665, line: 1925, type: !901)
!2668 = !DILocation(line: 1925, column: 14, scope: !2623)
!2669 = !DILocalVariable(name: "out_samples", scope: !2623, file: !1665, line: 1926, type: !917)
!2670 = !DILocation(line: 1926, column: 15, scope: !2623)
!2671 = !DILocalVariable(name: "outptr", scope: !2623, file: !1665, line: 1927, type: !2672)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 128, align: 64, elements: !1753)
!2673 = !DILocation(line: 1927, column: 14, scope: !2623)
!2674 = !DILocalVariable(name: "fr", scope: !2623, file: !1665, line: 1928, type: !891)
!2675 = !DILocation(line: 1928, column: 9, scope: !2623)
!2676 = !DILocalVariable(name: "ch", scope: !2623, file: !1665, line: 1928, type: !891)
!2677 = !DILocation(line: 1928, column: 13, scope: !2623)
!2678 = !DILocalVariable(name: "ret", scope: !2623, file: !1665, line: 1928, type: !891)
!2679 = !DILocation(line: 1928, column: 17, scope: !2623)
!2680 = !DILocation(line: 1931, column: 5, scope: !2623)
!2681 = !DILocation(line: 1931, column: 12, scope: !2623)
!2682 = !DILocation(line: 1931, column: 23, scope: !2623)
!2683 = !DILocation(line: 1932, column: 30, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2623, file: !1665, line: 1932, column: 9)
!2685 = !DILocation(line: 1932, column: 37, scope: !2684)
!2686 = !DILocation(line: 1932, column: 16, scope: !2684)
!2687 = !DILocation(line: 1932, column: 14, scope: !2684)
!2688 = !DILocation(line: 1932, column: 48, scope: !2684)
!2689 = !DILocation(line: 1932, column: 9, scope: !2623)
!2690 = !DILocation(line: 1933, column: 16, scope: !2684)
!2691 = !DILocation(line: 1933, column: 9, scope: !2684)
!2692 = !DILocation(line: 1934, column: 31, scope: !2623)
!2693 = !DILocation(line: 1934, column: 38, scope: !2623)
!2694 = !DILocation(line: 1934, column: 19, scope: !2623)
!2695 = !DILocation(line: 1934, column: 17, scope: !2623)
!2696 = !DILocation(line: 1937, column: 9, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2623, file: !1665, line: 1937, column: 9)
!2698 = !DILocation(line: 1937, column: 18, scope: !2697)
!2699 = !DILocation(line: 1937, column: 9, scope: !2623)
!2700 = !DILocation(line: 1938, column: 9, scope: !2697)
!2701 = !DILocation(line: 1940, column: 5, scope: !2623)
!2702 = !DILocation(line: 1940, column: 12, scope: !2623)
!2703 = !DILocation(line: 1940, column: 21, scope: !2623)
!2704 = !DILocation(line: 1942, column: 8, scope: !2623)
!2705 = !DILocation(line: 1943, column: 13, scope: !2628)
!2706 = !DILocation(line: 1943, column: 10, scope: !2628)
!2707 = !DILocation(line: 1943, column: 18, scope: !2708)
!2708 = !DILexicalBlockFile(scope: !2627, file: !1665, discriminator: 1)
!2709 = !DILocation(line: 1943, column: 23, scope: !2708)
!2710 = !DILocation(line: 1943, column: 26, scope: !2708)
!2711 = !DILocation(line: 1943, column: 21, scope: !2708)
!2712 = !DILocation(line: 1943, column: 5, scope: !2708)
!2713 = !DILocation(line: 1944, column: 60, scope: !2626)
!2714 = !DILocation(line: 1944, column: 67, scope: !2626)
!2715 = !DILocation(line: 1944, column: 17, scope: !2626)
!2716 = !DILocation(line: 60, column: 9, scope: !2630, inlinedAt: !2634)
!2717 = !DILocation(line: 60, column: 10, scope: !2630, inlinedAt: !2634)
!2718 = !DILocation(line: 60, column: 18, scope: !2630, inlinedAt: !2634)
!2719 = !DILocation(line: 60, column: 19, scope: !2630, inlinedAt: !2634)
!2720 = !DILocation(line: 60, column: 15, scope: !2630, inlinedAt: !2634)
!2721 = !DILocation(line: 60, column: 8, scope: !2630, inlinedAt: !2634)
!2722 = !DILocation(line: 60, column: 6, scope: !2630, inlinedAt: !2634)
!2723 = !DILocation(line: 61, column: 12, scope: !2630, inlinedAt: !2634)
!2724 = !DILocation(line: 1944, column: 71, scope: !2626)
!2725 = !DILocation(line: 1944, column: 15, scope: !2626)
!2726 = !DILocation(line: 1945, column: 21, scope: !2626)
!2727 = !DILocation(line: 1945, column: 31, scope: !2626)
!2728 = !DILocation(line: 1945, column: 28, scope: !2626)
!2729 = !DILocation(line: 1945, column: 20, scope: !2626)
!2730 = !DILocation(line: 1945, column: 39, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 1)
!2732 = !DILocation(line: 1945, column: 20, scope: !2731)
!2733 = !DILocation(line: 1945, column: 47, scope: !2734)
!2734 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 2)
!2735 = !DILocation(line: 1945, column: 20, scope: !2734)
!2736 = !DILocation(line: 1945, column: 20, scope: !2737)
!2737 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 3)
!2738 = !DILocation(line: 1945, column: 56, scope: !2737)
!2739 = !DILocation(line: 1945, column: 18, scope: !2737)
!2740 = !DILocation(line: 1945, column: 18, scope: !2741)
!2741 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 4)
!2742 = !DILocation(line: 1945, column: 79, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 5)
!2744 = !DILocation(line: 1945, column: 89, scope: !2743)
!2745 = !DILocation(line: 1945, column: 86, scope: !2743)
!2746 = !DILocation(line: 1945, column: 78, scope: !2743)
!2747 = !DILocation(line: 1945, column: 97, scope: !2748)
!2748 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 6)
!2749 = !DILocation(line: 1945, column: 78, scope: !2748)
!2750 = !DILocation(line: 1945, column: 105, scope: !2751)
!2751 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 7)
!2752 = !DILocation(line: 1945, column: 78, scope: !2751)
!2753 = !DILocation(line: 1945, column: 78, scope: !2754)
!2754 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 8)
!2755 = !DILocation(line: 1945, column: 18, scope: !2754)
!2756 = !DILocation(line: 1945, column: 18, scope: !2757)
!2757 = !DILexicalBlockFile(scope: !2626, file: !1665, discriminator: 9)
!2758 = !DILocation(line: 1945, column: 15, scope: !2757)
!2759 = !DILocation(line: 1946, column: 26, scope: !2626)
!2760 = !DILocation(line: 1946, column: 13, scope: !2626)
!2761 = !DILocation(line: 1946, column: 16, scope: !2626)
!2762 = !DILocation(line: 1946, column: 11, scope: !2626)
!2763 = !DILocation(line: 1949, column: 13, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2626, file: !1665, line: 1949, column: 13)
!2765 = !DILocation(line: 1949, column: 19, scope: !2764)
!2766 = !DILocation(line: 1949, column: 13, scope: !2626)
!2767 = !DILocation(line: 1950, column: 20, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2764, file: !1665, line: 1949, column: 24)
!2769 = !DILocation(line: 1950, column: 13, scope: !2768)
!2770 = !DILocation(line: 1951, column: 13, scope: !2768)
!2771 = !DILocation(line: 1953, column: 62, scope: !2626)
!2772 = !DILocation(line: 1953, column: 69, scope: !2626)
!2773 = !DILocation(line: 1953, column: 19, scope: !2626)
!2774 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !2625)
!2775 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !2625)
!2776 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !2625)
!2777 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !2625)
!2778 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !2625)
!2779 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !2625)
!2780 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !2625)
!2781 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !2625)
!2782 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !2625)
!2783 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !2625)
!2784 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !2625)
!2785 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !2625)
!2786 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !2625)
!2787 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !2625)
!2788 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !2625)
!2789 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !2625)
!2790 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !2625)
!2791 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !2625)
!2792 = !DILocation(line: 1953, column: 73, scope: !2626)
!2793 = !DILocation(line: 1953, column: 89, scope: !2626)
!2794 = !DILocation(line: 1953, column: 92, scope: !2626)
!2795 = !DILocation(line: 1953, column: 87, scope: !2626)
!2796 = !DILocation(line: 1953, column: 16, scope: !2626)
!2797 = !DILocation(line: 1955, column: 65, scope: !2626)
!2798 = !DILocation(line: 1955, column: 46, scope: !2626)
!2799 = !DILocation(line: 1955, column: 68, scope: !2626)
!2800 = !DILocation(line: 1955, column: 15, scope: !2626)
!2801 = !DILocation(line: 1955, column: 13, scope: !2626)
!2802 = !DILocation(line: 1956, column: 13, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2626, file: !1665, line: 1956, column: 13)
!2804 = !DILocation(line: 1956, column: 17, scope: !2803)
!2805 = !DILocation(line: 1956, column: 13, scope: !2626)
!2806 = !DILocation(line: 1957, column: 20, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2803, file: !1665, line: 1956, column: 22)
!2808 = !DILocation(line: 1957, column: 13, scope: !2807)
!2809 = !DILocation(line: 1958, column: 13, scope: !2807)
!2810 = !DILocation(line: 1961, column: 13, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2626, file: !1665, line: 1961, column: 13)
!2812 = !DILocation(line: 1961, column: 18, scope: !2811)
!2813 = !DILocation(line: 1961, column: 21, scope: !2811)
!2814 = !DILocation(line: 1961, column: 16, scope: !2811)
!2815 = !DILocation(line: 1961, column: 35, scope: !2811)
!2816 = !DILocation(line: 1961, column: 42, scope: !2811)
!2817 = !DILocation(line: 1961, column: 33, scope: !2811)
!2818 = !DILocation(line: 1961, column: 51, scope: !2811)
!2819 = !DILocation(line: 1962, column: 21, scope: !2811)
!2820 = !DILocation(line: 1962, column: 13, scope: !2811)
!2821 = !DILocation(line: 1962, column: 16, scope: !2811)
!2822 = !DILocation(line: 1962, column: 27, scope: !2811)
!2823 = !DILocation(line: 1962, column: 30, scope: !2811)
!2824 = !DILocation(line: 1962, column: 25, scope: !2811)
!2825 = !DILocation(line: 1962, column: 44, scope: !2811)
!2826 = !DILocation(line: 1962, column: 51, scope: !2811)
!2827 = !DILocation(line: 1962, column: 42, scope: !2811)
!2828 = !DILocation(line: 1961, column: 13, scope: !2731)
!2829 = !DILocation(line: 1963, column: 20, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2811, file: !1665, line: 1962, column: 61)
!2831 = !DILocation(line: 1963, column: 13, scope: !2830)
!2832 = !DILocation(line: 1965, column: 13, scope: !2830)
!2833 = !DILocation(line: 1967, column: 15, scope: !2626)
!2834 = !DILocation(line: 1967, column: 18, scope: !2626)
!2835 = !DILocation(line: 1967, column: 12, scope: !2626)
!2836 = !DILocation(line: 1969, column: 41, scope: !2626)
!2837 = !DILocation(line: 1969, column: 33, scope: !2626)
!2838 = !DILocation(line: 1969, column: 36, scope: !2626)
!2839 = !DILocation(line: 1969, column: 21, scope: !2626)
!2840 = !DILocation(line: 1969, column: 9, scope: !2626)
!2841 = !DILocation(line: 1969, column: 19, scope: !2626)
!2842 = !DILocation(line: 1970, column: 13, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2626, file: !1665, line: 1970, column: 13)
!2844 = !DILocation(line: 1970, column: 16, scope: !2843)
!2845 = !DILocation(line: 1970, column: 28, scope: !2843)
!2846 = !DILocation(line: 1970, column: 13, scope: !2626)
!2847 = !DILocation(line: 1971, column: 45, scope: !2843)
!2848 = !DILocation(line: 1971, column: 37, scope: !2843)
!2849 = !DILocation(line: 1971, column: 40, scope: !2843)
!2850 = !DILocation(line: 1971, column: 49, scope: !2843)
!2851 = !DILocation(line: 1971, column: 25, scope: !2843)
!2852 = !DILocation(line: 1971, column: 13, scope: !2843)
!2853 = !DILocation(line: 1971, column: 23, scope: !2843)
!2854 = !DILocation(line: 1973, column: 36, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2626, file: !1665, line: 1973, column: 13)
!2856 = !DILocation(line: 1973, column: 39, scope: !2855)
!2857 = !DILocation(line: 1973, column: 47, scope: !2855)
!2858 = !DILocation(line: 1973, column: 52, scope: !2855)
!2859 = !DILocation(line: 1973, column: 20, scope: !2855)
!2860 = !DILocation(line: 1973, column: 18, scope: !2855)
!2861 = !DILocation(line: 1973, column: 60, scope: !2855)
!2862 = !DILocation(line: 1973, column: 13, scope: !2626)
!2863 = !DILocation(line: 1974, column: 20, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2855, file: !1665, line: 1973, column: 65)
!2865 = !DILocation(line: 1974, column: 64, scope: !2864)
!2866 = !DILocation(line: 1974, column: 13, scope: !2864)
!2867 = !DILocation(line: 1975, column: 20, scope: !2864)
!2868 = !DILocation(line: 1975, column: 13, scope: !2864)
!2869 = !DILocation(line: 1976, column: 17, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2864, file: !1665, line: 1976, column: 17)
!2871 = !DILocation(line: 1976, column: 20, scope: !2870)
!2872 = !DILocation(line: 1976, column: 32, scope: !2870)
!2873 = !DILocation(line: 1976, column: 17, scope: !2864)
!2874 = !DILocation(line: 1977, column: 24, scope: !2870)
!2875 = !DILocation(line: 1977, column: 17, scope: !2870)
!2876 = !DILocation(line: 1978, column: 19, scope: !2864)
!2877 = !DILocation(line: 1978, column: 22, scope: !2864)
!2878 = !DILocation(line: 1978, column: 34, scope: !2864)
!2879 = !DILocation(line: 1978, column: 40, scope: !2864)
!2880 = !DILocation(line: 1978, column: 17, scope: !2864)
!2881 = !DILocation(line: 1979, column: 9, scope: !2864)
!2882 = !DILocation(line: 1981, column: 21, scope: !2626)
!2883 = !DILocation(line: 1981, column: 18, scope: !2626)
!2884 = !DILocation(line: 1982, column: 16, scope: !2626)
!2885 = !DILocation(line: 1982, column: 13, scope: !2626)
!2886 = !DILocation(line: 1983, column: 16, scope: !2626)
!2887 = !DILocation(line: 1983, column: 13, scope: !2626)
!2888 = !DILocation(line: 1985, column: 28, scope: !2626)
!2889 = !DILocation(line: 1985, column: 31, scope: !2626)
!2890 = !DILocation(line: 1985, column: 9, scope: !2626)
!2891 = !DILocation(line: 1985, column: 16, scope: !2626)
!2892 = !DILocation(line: 1985, column: 25, scope: !2626)
!2893 = !DILocation(line: 1986, column: 5, scope: !2626)
!2894 = !DILocation(line: 1943, column: 36, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !2627, file: !1665, discriminator: 2)
!2896 = !DILocation(line: 1943, column: 5, scope: !2895)
!2897 = distinct !{!2897, !2898}
!2898 = !DILocation(line: 1943, column: 5, scope: !2623)
!2899 = !DILocation(line: 1987, column: 9, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2623, file: !1665, line: 1987, column: 9)
!2901 = !DILocation(line: 1987, column: 15, scope: !2900)
!2902 = !DILocation(line: 1987, column: 22, scope: !2900)
!2903 = !DILocation(line: 1987, column: 12, scope: !2900)
!2904 = !DILocation(line: 1987, column: 9, scope: !2623)
!2905 = !DILocation(line: 1988, column: 16, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2900, file: !1665, line: 1987, column: 32)
!2907 = !DILocation(line: 1988, column: 9, scope: !2906)
!2908 = !DILocation(line: 1989, column: 9, scope: !2906)
!2909 = !DILocation(line: 1993, column: 26, scope: !2623)
!2910 = !DILocation(line: 1993, column: 29, scope: !2623)
!2911 = !DILocation(line: 1993, column: 43, scope: !2623)
!2912 = !DILocation(line: 1993, column: 5, scope: !2623)
!2913 = !DILocation(line: 1993, column: 12, scope: !2623)
!2914 = !DILocation(line: 1993, column: 24, scope: !2623)
!2915 = !DILocation(line: 1995, column: 25, scope: !2623)
!2916 = !DILocation(line: 1995, column: 37, scope: !2623)
!2917 = !DILocation(line: 1995, column: 44, scope: !2623)
!2918 = !DILocation(line: 1995, column: 53, scope: !2623)
!2919 = !DILocation(line: 1995, column: 34, scope: !2623)
!2920 = !DILocation(line: 1995, column: 5, scope: !2623)
!2921 = !DILocation(line: 1995, column: 12, scope: !2623)
!2922 = !DILocation(line: 1995, column: 23, scope: !2623)
!2923 = !DILocation(line: 1996, column: 6, scope: !2623)
!2924 = !DILocation(line: 1996, column: 20, scope: !2623)
!2925 = !DILocation(line: 1998, column: 12, scope: !2623)
!2926 = !DILocation(line: 1998, column: 5, scope: !2623)
!2927 = !DILocation(line: 1999, column: 1, scope: !2623)
!2928 = distinct !DISubprogram(name: "decode_close_mp3on4", scope: !1665, file: !1665, line: 1828, type: !1027, isLocal: true, isDefinition: true, scopeLine: 1829, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2929 = !DILocalVariable(name: "avctx", arg: 1, scope: !2928, file: !1665, line: 1828, type: !1029)
!2930 = !DILocation(line: 1828, column: 71, scope: !2928)
!2931 = !DILocalVariable(name: "s", scope: !2928, file: !1665, line: 1830, type: !2446)
!2932 = !DILocation(line: 1830, column: 26, scope: !2928)
!2933 = !DILocation(line: 1830, column: 30, scope: !2928)
!2934 = !DILocation(line: 1830, column: 37, scope: !2928)
!2935 = !DILocalVariable(name: "i", scope: !2928, file: !1665, line: 1831, type: !891)
!2936 = !DILocation(line: 1831, column: 9, scope: !2928)
!2937 = !DILocation(line: 1833, column: 9, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2928, file: !1665, line: 1833, column: 9)
!2939 = !DILocation(line: 1833, column: 12, scope: !2938)
!2940 = !DILocation(line: 1833, column: 9, scope: !2928)
!2941 = !DILocation(line: 1834, column: 19, scope: !2938)
!2942 = !DILocation(line: 1834, column: 22, scope: !2938)
!2943 = !DILocation(line: 1834, column: 36, scope: !2938)
!2944 = !DILocation(line: 1834, column: 18, scope: !2938)
!2945 = !DILocation(line: 1834, column: 9, scope: !2938)
!2946 = !DILocation(line: 1836, column: 12, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2928, file: !1665, line: 1836, column: 5)
!2948 = !DILocation(line: 1836, column: 10, scope: !2947)
!2949 = !DILocation(line: 1836, column: 17, scope: !2950)
!2950 = !DILexicalBlockFile(scope: !2951, file: !1665, discriminator: 1)
!2951 = distinct !DILexicalBlock(scope: !2947, file: !1665, line: 1836, column: 5)
!2952 = !DILocation(line: 1836, column: 21, scope: !2950)
!2953 = !DILocation(line: 1836, column: 24, scope: !2950)
!2954 = !DILocation(line: 1836, column: 19, scope: !2950)
!2955 = !DILocation(line: 1836, column: 5, scope: !2950)
!2956 = !DILocation(line: 1837, column: 32, scope: !2951)
!2957 = !DILocation(line: 1837, column: 19, scope: !2951)
!2958 = !DILocation(line: 1837, column: 22, scope: !2951)
!2959 = !DILocation(line: 1837, column: 18, scope: !2951)
!2960 = !DILocation(line: 1837, column: 9, scope: !2951)
!2961 = !DILocation(line: 1836, column: 33, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2951, file: !1665, discriminator: 2)
!2963 = !DILocation(line: 1836, column: 5, scope: !2962)
!2964 = distinct !{!2964, !2965}
!2965 = !DILocation(line: 1836, column: 5, scope: !2928)
!2966 = !DILocation(line: 1839, column: 5, scope: !2928)
!2967 = distinct !DISubprogram(name: "flush_mp3on4", scope: !1665, file: !1665, line: 1906, type: !1650, isLocal: true, isDefinition: true, scopeLine: 1907, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2968 = !DILocalVariable(name: "avctx", arg: 1, scope: !2967, file: !1665, line: 1906, type: !1029)
!2969 = !DILocation(line: 1906, column: 42, scope: !2967)
!2970 = !DILocalVariable(name: "i", scope: !2967, file: !1665, line: 1908, type: !891)
!2971 = !DILocation(line: 1908, column: 9, scope: !2967)
!2972 = !DILocalVariable(name: "s", scope: !2967, file: !1665, line: 1909, type: !2446)
!2973 = !DILocation(line: 1909, column: 26, scope: !2967)
!2974 = !DILocation(line: 1909, column: 30, scope: !2967)
!2975 = !DILocation(line: 1909, column: 37, scope: !2967)
!2976 = !DILocation(line: 1911, column: 12, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2967, file: !1665, line: 1911, column: 5)
!2978 = !DILocation(line: 1911, column: 10, scope: !2977)
!2979 = !DILocation(line: 1911, column: 17, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !2981, file: !1665, discriminator: 1)
!2981 = distinct !DILexicalBlock(scope: !2977, file: !1665, line: 1911, column: 5)
!2982 = !DILocation(line: 1911, column: 21, scope: !2980)
!2983 = !DILocation(line: 1911, column: 24, scope: !2980)
!2984 = !DILocation(line: 1911, column: 19, scope: !2980)
!2985 = !DILocation(line: 1911, column: 5, scope: !2980)
!2986 = !DILocation(line: 1912, column: 31, scope: !2981)
!2987 = !DILocation(line: 1912, column: 18, scope: !2981)
!2988 = !DILocation(line: 1912, column: 21, scope: !2981)
!2989 = !DILocation(line: 1912, column: 9, scope: !2981)
!2990 = !DILocation(line: 1911, column: 33, scope: !2991)
!2991 = !DILexicalBlockFile(scope: !2981, file: !1665, discriminator: 2)
!2992 = !DILocation(line: 1911, column: 5, scope: !2991)
!2993 = distinct !{!2993, !2994}
!2994 = !DILocation(line: 1911, column: 5, scope: !2967)
!2995 = !DILocation(line: 1913, column: 1, scope: !2967)
!2996 = distinct !DISubprogram(name: "decode_init_static", scope: !1665, file: !1665, line: 261, type: !1781, isLocal: true, isDefinition: true, scopeLine: 262, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!2997 = !DILocalVariable(name: "i", scope: !2996, file: !1665, line: 263, type: !891)
!2998 = !DILocation(line: 263, column: 9, scope: !2996)
!2999 = !DILocalVariable(name: "j", scope: !2996, file: !1665, line: 263, type: !891)
!3000 = !DILocation(line: 263, column: 12, scope: !2996)
!3001 = !DILocalVariable(name: "k", scope: !2996, file: !1665, line: 263, type: !891)
!3002 = !DILocation(line: 263, column: 15, scope: !2996)
!3003 = !DILocalVariable(name: "offset", scope: !2996, file: !1665, line: 264, type: !891)
!3004 = !DILocation(line: 264, column: 9, scope: !2996)
!3005 = !DILocation(line: 267, column: 12, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 267, column: 5)
!3007 = !DILocation(line: 267, column: 10, scope: !3006)
!3008 = !DILocation(line: 267, column: 17, scope: !3009)
!3009 = !DILexicalBlockFile(scope: !3010, file: !1665, discriminator: 1)
!3010 = distinct !DILexicalBlock(scope: !3006, file: !1665, line: 267, column: 5)
!3011 = !DILocation(line: 267, column: 19, scope: !3009)
!3012 = !DILocation(line: 267, column: 5, scope: !3009)
!3013 = !DILocalVariable(name: "shift", scope: !3014, file: !1665, line: 268, type: !891)
!3014 = distinct !DILexicalBlock(scope: !3010, file: !1665, line: 267, column: 30)
!3015 = !DILocation(line: 268, column: 13, scope: !3014)
!3016 = !DILocalVariable(name: "mod", scope: !3014, file: !1665, line: 268, type: !891)
!3017 = !DILocation(line: 268, column: 20, scope: !3014)
!3018 = !DILocation(line: 270, column: 17, scope: !3014)
!3019 = !DILocation(line: 270, column: 19, scope: !3014)
!3020 = !DILocation(line: 270, column: 15, scope: !3014)
!3021 = !DILocation(line: 271, column: 15, scope: !3014)
!3022 = !DILocation(line: 271, column: 17, scope: !3014)
!3023 = !DILocation(line: 271, column: 13, scope: !3014)
!3024 = !DILocation(line: 272, column: 36, scope: !3014)
!3025 = !DILocation(line: 272, column: 43, scope: !3014)
!3026 = !DILocation(line: 272, column: 49, scope: !3014)
!3027 = !DILocation(line: 272, column: 40, scope: !3014)
!3028 = !DILocation(line: 272, column: 31, scope: !3014)
!3029 = !DILocation(line: 272, column: 9, scope: !3014)
!3030 = !DILocation(line: 272, column: 34, scope: !3014)
!3031 = !DILocation(line: 273, column: 5, scope: !3014)
!3032 = !DILocation(line: 267, column: 26, scope: !3033)
!3033 = !DILexicalBlockFile(scope: !3010, file: !1665, discriminator: 2)
!3034 = !DILocation(line: 267, column: 5, scope: !3033)
!3035 = distinct !{!3035, !3036}
!3036 = !DILocation(line: 267, column: 5, scope: !2996)
!3037 = !DILocation(line: 276, column: 12, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 276, column: 5)
!3039 = !DILocation(line: 276, column: 10, scope: !3038)
!3040 = !DILocation(line: 276, column: 17, scope: !3041)
!3041 = !DILexicalBlockFile(scope: !3042, file: !1665, discriminator: 1)
!3042 = distinct !DILexicalBlock(scope: !3038, file: !1665, line: 276, column: 5)
!3043 = !DILocation(line: 276, column: 19, scope: !3041)
!3044 = !DILocation(line: 276, column: 5, scope: !3041)
!3045 = !DILocalVariable(name: "n", scope: !3046, file: !1665, line: 277, type: !891)
!3046 = distinct !DILexicalBlock(scope: !3042, file: !1665, line: 276, column: 30)
!3047 = !DILocation(line: 277, column: 13, scope: !3046)
!3048 = !DILocalVariable(name: "norm", scope: !3046, file: !1665, line: 277, type: !891)
!3049 = !DILocation(line: 277, column: 16, scope: !3046)
!3050 = !DILocation(line: 278, column: 13, scope: !3046)
!3051 = !DILocation(line: 278, column: 15, scope: !3046)
!3052 = !DILocation(line: 278, column: 11, scope: !3046)
!3053 = !DILocation(line: 279, column: 24, scope: !3046)
!3054 = !DILocation(line: 279, column: 21, scope: !3046)
!3055 = !DILocation(line: 279, column: 27, scope: !3046)
!3056 = !DILocation(line: 279, column: 49, scope: !3046)
!3057 = !DILocation(line: 279, column: 46, scope: !3046)
!3058 = !DILocation(line: 279, column: 52, scope: !3046)
!3059 = !DILocation(line: 279, column: 42, scope: !3046)
!3060 = !DILocation(line: 279, column: 40, scope: !3046)
!3061 = !DILocation(line: 279, column: 16, scope: !3046)
!3062 = !DILocation(line: 279, column: 14, scope: !3046)
!3063 = !DILocation(line: 280, column: 53, scope: !3046)
!3064 = !DILocation(line: 280, column: 37, scope: !3046)
!3065 = !DILocation(line: 280, column: 60, scope: !3046)
!3066 = !DILocation(line: 280, column: 115, scope: !3046)
!3067 = !DILocation(line: 280, column: 35, scope: !3046)
!3068 = !DILocation(line: 280, column: 27, scope: !3046)
!3069 = !DILocation(line: 280, column: 9, scope: !3046)
!3070 = !DILocation(line: 280, column: 33, scope: !3046)
!3071 = !DILocation(line: 281, column: 53, scope: !3046)
!3072 = !DILocation(line: 281, column: 37, scope: !3046)
!3073 = !DILocation(line: 281, column: 60, scope: !3046)
!3074 = !DILocation(line: 281, column: 124, scope: !3046)
!3075 = !DILocation(line: 281, column: 35, scope: !3046)
!3076 = !DILocation(line: 281, column: 27, scope: !3046)
!3077 = !DILocation(line: 281, column: 9, scope: !3046)
!3078 = !DILocation(line: 281, column: 33, scope: !3046)
!3079 = !DILocation(line: 282, column: 53, scope: !3046)
!3080 = !DILocation(line: 282, column: 37, scope: !3046)
!3081 = !DILocation(line: 282, column: 60, scope: !3046)
!3082 = !DILocation(line: 282, column: 124, scope: !3046)
!3083 = !DILocation(line: 282, column: 35, scope: !3046)
!3084 = !DILocation(line: 282, column: 27, scope: !3046)
!3085 = !DILocation(line: 282, column: 9, scope: !3046)
!3086 = !DILocation(line: 282, column: 33, scope: !3046)
!3087 = !DILocation(line: 283, column: 9, scope: !3046)
!3088 = distinct !{!3088, !3087}
!3089 = !DILocation(line: 283, column: 109, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !3091, file: !1665, discriminator: 1)
!3091 = distinct !DILexicalBlock(scope: !3046, file: !1665, line: 283, column: 12)
!3092 = !DILocation(line: 288, column: 5, scope: !3046)
!3093 = !DILocation(line: 276, column: 26, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !3042, file: !1665, discriminator: 2)
!3095 = !DILocation(line: 276, column: 5, scope: !3094)
!3096 = distinct !{!3096, !3097}
!3097 = !DILocation(line: 276, column: 5, scope: !2996)
!3098 = !DILocation(line: 290, column: 5, scope: !2996)
!3099 = !DILocation(line: 293, column: 12, scope: !2996)
!3100 = !DILocation(line: 294, column: 12, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 294, column: 5)
!3102 = !DILocation(line: 294, column: 10, scope: !3101)
!3103 = !DILocation(line: 294, column: 17, scope: !3104)
!3104 = !DILexicalBlockFile(scope: !3105, file: !1665, discriminator: 1)
!3105 = distinct !DILexicalBlock(scope: !3101, file: !1665, line: 294, column: 5)
!3106 = !DILocation(line: 294, column: 19, scope: !3104)
!3107 = !DILocation(line: 294, column: 5, scope: !3104)
!3108 = !DILocalVariable(name: "h", scope: !3109, file: !1665, line: 295, type: !3110)
!3109 = distinct !DILexicalBlock(scope: !3105, file: !1665, line: 294, column: 30)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64, align: 64)
!3111 = !DILocation(line: 295, column: 26, scope: !3109)
!3112 = !DILocation(line: 295, column: 47, scope: !3109)
!3113 = !DILocation(line: 295, column: 31, scope: !3109)
!3114 = !DILocalVariable(name: "xsize", scope: !3109, file: !1665, line: 296, type: !891)
!3115 = !DILocation(line: 296, column: 13, scope: !3109)
!3116 = !DILocalVariable(name: "x", scope: !3109, file: !1665, line: 296, type: !891)
!3117 = !DILocation(line: 296, column: 20, scope: !3109)
!3118 = !DILocalVariable(name: "y", scope: !3109, file: !1665, line: 296, type: !891)
!3119 = !DILocation(line: 296, column: 23, scope: !3109)
!3120 = !DILocalVariable(name: "tmp_bits", scope: !3109, file: !1665, line: 297, type: !3121)
!3121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 4096, align: 8, elements: !1801)
!3122 = !DILocation(line: 297, column: 17, scope: !3109)
!3123 = !DILocalVariable(name: "tmp_codes", scope: !3109, file: !1665, line: 298, type: !3124)
!3124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 8192, align: 16, elements: !1801)
!3125 = !DILocation(line: 298, column: 18, scope: !3109)
!3126 = !DILocation(line: 300, column: 17, scope: !3109)
!3127 = !DILocation(line: 300, column: 20, scope: !3109)
!3128 = !DILocation(line: 300, column: 15, scope: !3109)
!3129 = !DILocation(line: 302, column: 11, scope: !3109)
!3130 = !DILocation(line: 303, column: 16, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3109, file: !1665, line: 303, column: 9)
!3132 = !DILocation(line: 303, column: 14, scope: !3131)
!3133 = !DILocation(line: 303, column: 21, scope: !3134)
!3134 = !DILexicalBlockFile(scope: !3135, file: !1665, discriminator: 1)
!3135 = distinct !DILexicalBlock(scope: !3131, file: !1665, line: 303, column: 9)
!3136 = !DILocation(line: 303, column: 25, scope: !3134)
!3137 = !DILocation(line: 303, column: 23, scope: !3134)
!3138 = !DILocation(line: 303, column: 9, scope: !3134)
!3139 = !DILocation(line: 304, column: 20, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3141, file: !1665, line: 304, column: 13)
!3141 = distinct !DILexicalBlock(scope: !3135, file: !1665, line: 303, column: 37)
!3142 = !DILocation(line: 304, column: 18, scope: !3140)
!3143 = !DILocation(line: 304, column: 25, scope: !3144)
!3144 = !DILexicalBlockFile(scope: !3145, file: !1665, discriminator: 1)
!3145 = distinct !DILexicalBlock(scope: !3140, file: !1665, line: 304, column: 13)
!3146 = !DILocation(line: 304, column: 29, scope: !3144)
!3147 = !DILocation(line: 304, column: 27, scope: !3144)
!3148 = !DILocation(line: 304, column: 13, scope: !3144)
!3149 = !DILocation(line: 305, column: 65, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3145, file: !1665, line: 304, column: 41)
!3151 = !DILocation(line: 305, column: 56, scope: !3150)
!3152 = !DILocation(line: 305, column: 59, scope: !3150)
!3153 = !DILocation(line: 305, column: 28, scope: !3150)
!3154 = !DILocation(line: 305, column: 30, scope: !3150)
!3155 = !DILocation(line: 305, column: 38, scope: !3150)
!3156 = !DILocation(line: 305, column: 36, scope: !3150)
!3157 = !DILocation(line: 305, column: 44, scope: !3150)
!3158 = !DILocation(line: 305, column: 45, scope: !3150)
!3159 = !DILocation(line: 305, column: 47, scope: !3160)
!3160 = !DILexicalBlockFile(scope: !3150, file: !1665, discriminator: 1)
!3161 = !DILocation(line: 305, column: 45, scope: !3160)
!3162 = !DILocation(line: 305, column: 45, scope: !3163)
!3163 = !DILexicalBlockFile(scope: !3150, file: !1665, discriminator: 2)
!3164 = !DILocation(line: 305, column: 49, scope: !3163)
!3165 = !DILocation(line: 305, column: 40, scope: !3163)
!3166 = !DILocation(line: 305, column: 17, scope: !3163)
!3167 = !DILocation(line: 305, column: 54, scope: !3163)
!3168 = !DILocation(line: 306, column: 66, scope: !3150)
!3169 = !DILocation(line: 306, column: 56, scope: !3150)
!3170 = !DILocation(line: 306, column: 59, scope: !3150)
!3171 = !DILocation(line: 306, column: 28, scope: !3150)
!3172 = !DILocation(line: 306, column: 30, scope: !3150)
!3173 = !DILocation(line: 306, column: 38, scope: !3150)
!3174 = !DILocation(line: 306, column: 36, scope: !3150)
!3175 = !DILocation(line: 306, column: 44, scope: !3150)
!3176 = !DILocation(line: 306, column: 45, scope: !3150)
!3177 = !DILocation(line: 306, column: 47, scope: !3160)
!3178 = !DILocation(line: 306, column: 45, scope: !3160)
!3179 = !DILocation(line: 306, column: 45, scope: !3163)
!3180 = !DILocation(line: 306, column: 49, scope: !3163)
!3181 = !DILocation(line: 306, column: 40, scope: !3163)
!3182 = !DILocation(line: 306, column: 17, scope: !3163)
!3183 = !DILocation(line: 306, column: 54, scope: !3163)
!3184 = !DILocation(line: 307, column: 13, scope: !3150)
!3185 = !DILocation(line: 304, column: 37, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !3145, file: !1665, discriminator: 2)
!3187 = !DILocation(line: 304, column: 13, scope: !3186)
!3188 = distinct !{!3188, !3189}
!3189 = !DILocation(line: 304, column: 13, scope: !3141)
!3190 = !DILocation(line: 308, column: 9, scope: !3141)
!3191 = !DILocation(line: 303, column: 33, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !3135, file: !1665, discriminator: 2)
!3193 = !DILocation(line: 303, column: 9, scope: !3192)
!3194 = distinct !{!3194, !3195}
!3195 = !DILocation(line: 303, column: 9, scope: !3109)
!3196 = !DILocation(line: 311, column: 45, scope: !3109)
!3197 = !DILocation(line: 311, column: 44, scope: !3109)
!3198 = !DILocation(line: 311, column: 18, scope: !3109)
!3199 = !DILocation(line: 311, column: 9, scope: !3109)
!3200 = !DILocation(line: 311, column: 21, scope: !3109)
!3201 = !DILocation(line: 311, column: 27, scope: !3109)
!3202 = !DILocation(line: 312, column: 61, scope: !3109)
!3203 = !DILocation(line: 312, column: 39, scope: !3109)
!3204 = !DILocation(line: 312, column: 18, scope: !3109)
!3205 = !DILocation(line: 312, column: 9, scope: !3109)
!3206 = !DILocation(line: 312, column: 21, scope: !3109)
!3207 = !DILocation(line: 312, column: 37, scope: !3109)
!3208 = !DILocation(line: 313, column: 38, scope: !3109)
!3209 = !DILocation(line: 313, column: 29, scope: !3109)
!3210 = !DILocation(line: 313, column: 50, scope: !3109)
!3211 = !DILocation(line: 313, column: 66, scope: !3109)
!3212 = !DILocation(line: 313, column: 9, scope: !3109)
!3213 = !DILocation(line: 316, column: 41, scope: !3109)
!3214 = !DILocation(line: 316, column: 19, scope: !3109)
!3215 = !DILocation(line: 316, column: 16, scope: !3109)
!3216 = !DILocation(line: 317, column: 5, scope: !3109)
!3217 = !DILocation(line: 294, column: 26, scope: !3218)
!3218 = !DILexicalBlockFile(scope: !3105, file: !1665, discriminator: 2)
!3219 = !DILocation(line: 294, column: 5, scope: !3218)
!3220 = distinct !{!3220, !3221}
!3221 = !DILocation(line: 294, column: 5, scope: !2996)
!3222 = !DILocation(line: 318, column: 5, scope: !2996)
!3223 = distinct !{!3223, !3222}
!3224 = !DILocation(line: 318, column: 16, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3226, file: !1665, discriminator: 1)
!3226 = distinct !DILexicalBlock(scope: !3227, file: !1665, line: 318, column: 14)
!3227 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 318, column: 8)
!3228 = !DILocation(line: 318, column: 23, scope: !3225)
!3229 = !DILocation(line: 318, column: 14, scope: !3225)
!3230 = !DILocation(line: 318, column: 87, scope: !3231)
!3231 = !DILexicalBlockFile(scope: !3232, file: !1665, discriminator: 2)
!3232 = distinct !DILexicalBlock(scope: !3226, file: !1665, line: 318, column: 85)
!3233 = !DILocation(line: 318, column: 157, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !3231, file: !1665, discriminator: 4)
!3235 = !DILocation(line: 318, column: 157, scope: !3231)
!3236 = !DILocation(line: 318, column: 168, scope: !3237)
!3237 = !DILexicalBlockFile(scope: !3227, file: !1665, discriminator: 3)
!3238 = !DILocation(line: 320, column: 12, scope: !2996)
!3239 = !DILocation(line: 321, column: 12, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 321, column: 5)
!3241 = !DILocation(line: 321, column: 10, scope: !3240)
!3242 = !DILocation(line: 321, column: 17, scope: !3243)
!3243 = !DILexicalBlockFile(scope: !3244, file: !1665, discriminator: 1)
!3244 = distinct !DILexicalBlock(scope: !3240, file: !1665, line: 321, column: 5)
!3245 = !DILocation(line: 321, column: 19, scope: !3243)
!3246 = !DILocation(line: 321, column: 5, scope: !3243)
!3247 = !DILocation(line: 322, column: 55, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3244, file: !1665, line: 321, column: 29)
!3249 = !DILocation(line: 322, column: 54, scope: !3248)
!3250 = !DILocation(line: 322, column: 23, scope: !3248)
!3251 = !DILocation(line: 322, column: 9, scope: !3248)
!3252 = !DILocation(line: 322, column: 26, scope: !3248)
!3253 = !DILocation(line: 322, column: 32, scope: !3248)
!3254 = !DILocation(line: 323, column: 71, scope: !3248)
!3255 = !DILocation(line: 323, column: 44, scope: !3248)
!3256 = !DILocation(line: 323, column: 23, scope: !3248)
!3257 = !DILocation(line: 323, column: 9, scope: !3248)
!3258 = !DILocation(line: 323, column: 26, scope: !3248)
!3259 = !DILocation(line: 323, column: 42, scope: !3248)
!3260 = !DILocation(line: 324, column: 43, scope: !3248)
!3261 = !DILocation(line: 324, column: 29, scope: !3248)
!3262 = !DILocation(line: 324, column: 47, scope: !3248)
!3263 = !DILocation(line: 324, column: 49, scope: !3248)
!3264 = !DILocation(line: 324, column: 81, scope: !3248)
!3265 = !DILocation(line: 324, column: 67, scope: !3248)
!3266 = !DILocation(line: 324, column: 106, scope: !3248)
!3267 = !DILocation(line: 324, column: 91, scope: !3248)
!3268 = !DILocation(line: 324, column: 9, scope: !3248)
!3269 = !DILocation(line: 327, column: 46, scope: !3248)
!3270 = !DILocation(line: 327, column: 19, scope: !3248)
!3271 = !DILocation(line: 327, column: 16, scope: !3248)
!3272 = !DILocation(line: 328, column: 5, scope: !3248)
!3273 = !DILocation(line: 321, column: 25, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3244, file: !1665, discriminator: 2)
!3275 = !DILocation(line: 321, column: 5, scope: !3274)
!3276 = distinct !{!3276, !3277}
!3277 = !DILocation(line: 321, column: 5, scope: !2996)
!3278 = !DILocation(line: 329, column: 5, scope: !2996)
!3279 = distinct !{!3279, !3278}
!3280 = !DILocation(line: 329, column: 16, scope: !3281)
!3281 = !DILexicalBlockFile(scope: !3282, file: !1665, discriminator: 1)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !1665, line: 329, column: 14)
!3283 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 329, column: 8)
!3284 = !DILocation(line: 329, column: 23, scope: !3281)
!3285 = !DILocation(line: 329, column: 14, scope: !3281)
!3286 = !DILocation(line: 329, column: 97, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !3288, file: !1665, discriminator: 2)
!3288 = distinct !DILexicalBlock(scope: !3282, file: !1665, line: 329, column: 95)
!3289 = !DILocation(line: 329, column: 167, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3287, file: !1665, discriminator: 4)
!3291 = !DILocation(line: 329, column: 167, scope: !3287)
!3292 = !DILocation(line: 329, column: 178, scope: !3293)
!3293 = !DILexicalBlockFile(scope: !3283, file: !1665, discriminator: 3)
!3294 = !DILocation(line: 331, column: 12, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 331, column: 5)
!3296 = !DILocation(line: 331, column: 10, scope: !3295)
!3297 = !DILocation(line: 331, column: 17, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3299, file: !1665, discriminator: 1)
!3299 = distinct !DILexicalBlock(scope: !3295, file: !1665, line: 331, column: 5)
!3300 = !DILocation(line: 331, column: 19, scope: !3298)
!3301 = !DILocation(line: 331, column: 5, scope: !3298)
!3302 = !DILocation(line: 332, column: 11, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3299, file: !1665, line: 331, column: 29)
!3304 = !DILocation(line: 333, column: 16, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3303, file: !1665, line: 333, column: 9)
!3306 = !DILocation(line: 333, column: 14, scope: !3305)
!3307 = !DILocation(line: 333, column: 21, scope: !3308)
!3308 = !DILexicalBlockFile(scope: !3309, file: !1665, discriminator: 1)
!3309 = distinct !DILexicalBlock(scope: !3305, file: !1665, line: 333, column: 9)
!3310 = !DILocation(line: 333, column: 23, scope: !3308)
!3311 = !DILocation(line: 333, column: 9, scope: !3308)
!3312 = !DILocation(line: 334, column: 37, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3309, file: !1665, line: 333, column: 34)
!3314 = !DILocation(line: 334, column: 32, scope: !3313)
!3315 = !DILocation(line: 334, column: 13, scope: !3313)
!3316 = !DILocation(line: 334, column: 29, scope: !3313)
!3317 = !DILocation(line: 334, column: 35, scope: !3313)
!3318 = !DILocation(line: 335, column: 36, scope: !3313)
!3319 = !DILocation(line: 335, column: 18, scope: !3313)
!3320 = !DILocation(line: 335, column: 33, scope: !3313)
!3321 = !DILocation(line: 335, column: 15, scope: !3313)
!3322 = !DILocation(line: 336, column: 9, scope: !3313)
!3323 = !DILocation(line: 333, column: 30, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !3309, file: !1665, discriminator: 2)
!3325 = !DILocation(line: 333, column: 9, scope: !3324)
!3326 = distinct !{!3326, !3327}
!3327 = !DILocation(line: 333, column: 9, scope: !3303)
!3328 = !DILocation(line: 337, column: 34, scope: !3303)
!3329 = !DILocation(line: 337, column: 25, scope: !3303)
!3330 = !DILocation(line: 337, column: 9, scope: !3303)
!3331 = !DILocation(line: 337, column: 32, scope: !3303)
!3332 = !DILocation(line: 338, column: 5, scope: !3303)
!3333 = !DILocation(line: 331, column: 25, scope: !3334)
!3334 = !DILexicalBlockFile(scope: !3299, file: !1665, discriminator: 2)
!3335 = !DILocation(line: 331, column: 5, scope: !3334)
!3336 = distinct !{!3336, !3337}
!3337 = !DILocation(line: 331, column: 5, scope: !2996)
!3338 = !DILocation(line: 342, column: 5, scope: !2996)
!3339 = !DILocation(line: 344, column: 12, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 344, column: 5)
!3341 = !DILocation(line: 344, column: 10, scope: !3340)
!3342 = !DILocation(line: 344, column: 17, scope: !3343)
!3343 = !DILexicalBlockFile(scope: !3344, file: !1665, discriminator: 1)
!3344 = distinct !DILexicalBlock(scope: !3340, file: !1665, line: 344, column: 5)
!3345 = !DILocation(line: 344, column: 19, scope: !3343)
!3346 = !DILocation(line: 344, column: 5, scope: !3343)
!3347 = !DILocation(line: 345, column: 31, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !1665, line: 345, column: 13)
!3349 = distinct !DILexicalBlock(scope: !3344, file: !1665, line: 344, column: 29)
!3350 = !DILocation(line: 345, column: 13, scope: !3348)
!3351 = !DILocation(line: 345, column: 34, scope: !3348)
!3352 = !DILocation(line: 345, column: 13, scope: !3349)
!3353 = !DILocation(line: 346, column: 20, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !1665, line: 346, column: 13)
!3355 = distinct !DILexicalBlock(scope: !3348, file: !1665, line: 345, column: 39)
!3356 = !DILocation(line: 346, column: 18, scope: !3354)
!3357 = !DILocation(line: 346, column: 25, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3359, file: !1665, discriminator: 1)
!3359 = distinct !DILexicalBlock(scope: !3354, file: !1665, line: 346, column: 13)
!3360 = !DILocation(line: 346, column: 55, scope: !3358)
!3361 = !DILocation(line: 346, column: 37, scope: !3358)
!3362 = !DILocation(line: 346, column: 36, scope: !3358)
!3363 = !DILocation(line: 346, column: 57, scope: !3358)
!3364 = !DILocation(line: 346, column: 32, scope: !3358)
!3365 = !DILocation(line: 346, column: 27, scope: !3358)
!3366 = !DILocation(line: 346, column: 13, scope: !3358)
!3367 = !DILocalVariable(name: "val1", scope: !3368, file: !1665, line: 347, type: !891)
!3368 = distinct !DILexicalBlock(scope: !3359, file: !1665, line: 346, column: 68)
!3369 = !DILocation(line: 347, column: 21, scope: !3368)
!3370 = !DILocalVariable(name: "val2", scope: !3368, file: !1665, line: 347, type: !891)
!3371 = !DILocation(line: 347, column: 27, scope: !3368)
!3372 = !DILocalVariable(name: "val3", scope: !3368, file: !1665, line: 347, type: !891)
!3373 = !DILocation(line: 347, column: 33, scope: !3368)
!3374 = !DILocalVariable(name: "steps", scope: !3368, file: !1665, line: 347, type: !891)
!3375 = !DILocation(line: 347, column: 39, scope: !3368)
!3376 = !DILocalVariable(name: "val", scope: !3368, file: !1665, line: 348, type: !891)
!3377 = !DILocation(line: 348, column: 21, scope: !3368)
!3378 = !DILocation(line: 348, column: 27, scope: !3368)
!3379 = !DILocation(line: 349, column: 44, scope: !3368)
!3380 = !DILocation(line: 349, column: 25, scope: !3368)
!3381 = !DILocation(line: 349, column: 23, scope: !3368)
!3382 = !DILocation(line: 350, column: 24, scope: !3368)
!3383 = !DILocation(line: 350, column: 30, scope: !3368)
!3384 = !DILocation(line: 350, column: 28, scope: !3368)
!3385 = !DILocation(line: 350, column: 22, scope: !3368)
!3386 = !DILocation(line: 351, column: 24, scope: !3368)
!3387 = !DILocation(line: 351, column: 21, scope: !3368)
!3388 = !DILocation(line: 352, column: 24, scope: !3368)
!3389 = !DILocation(line: 352, column: 30, scope: !3368)
!3390 = !DILocation(line: 352, column: 28, scope: !3368)
!3391 = !DILocation(line: 352, column: 22, scope: !3368)
!3392 = !DILocation(line: 353, column: 24, scope: !3368)
!3393 = !DILocation(line: 353, column: 30, scope: !3368)
!3394 = !DILocation(line: 353, column: 28, scope: !3368)
!3395 = !DILocation(line: 353, column: 22, scope: !3368)
!3396 = !DILocation(line: 354, column: 39, scope: !3368)
!3397 = !DILocation(line: 354, column: 47, scope: !3368)
!3398 = !DILocation(line: 354, column: 52, scope: !3368)
!3399 = !DILocation(line: 354, column: 44, scope: !3368)
!3400 = !DILocation(line: 354, column: 61, scope: !3368)
!3401 = !DILocation(line: 354, column: 66, scope: !3368)
!3402 = !DILocation(line: 354, column: 58, scope: !3368)
!3403 = !DILocation(line: 354, column: 34, scope: !3368)
!3404 = !DILocation(line: 354, column: 17, scope: !3368)
!3405 = !DILocation(line: 354, column: 31, scope: !3368)
!3406 = !DILocation(line: 354, column: 37, scope: !3368)
!3407 = !DILocation(line: 355, column: 13, scope: !3368)
!3408 = !DILocation(line: 346, column: 64, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3359, file: !1665, discriminator: 2)
!3410 = !DILocation(line: 346, column: 13, scope: !3409)
!3411 = distinct !{!3411, !3412}
!3412 = !DILocation(line: 346, column: 13, scope: !3355)
!3413 = !DILocation(line: 356, column: 9, scope: !3355)
!3414 = !DILocation(line: 357, column: 5, scope: !3349)
!3415 = !DILocation(line: 344, column: 25, scope: !3416)
!3416 = !DILexicalBlockFile(scope: !3344, file: !1665, discriminator: 2)
!3417 = !DILocation(line: 344, column: 5, scope: !3416)
!3418 = distinct !{!3418, !3419}
!3419 = !DILocation(line: 344, column: 5, scope: !2996)
!3420 = !DILocation(line: 360, column: 12, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 360, column: 5)
!3422 = !DILocation(line: 360, column: 10, scope: !3421)
!3423 = !DILocation(line: 360, column: 17, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3425, file: !1665, discriminator: 1)
!3425 = distinct !DILexicalBlock(scope: !3421, file: !1665, line: 360, column: 5)
!3426 = !DILocation(line: 360, column: 19, scope: !3424)
!3427 = !DILocation(line: 360, column: 5, scope: !3424)
!3428 = !DILocalVariable(name: "f", scope: !3429, file: !1665, line: 361, type: !1328)
!3429 = distinct !DILexicalBlock(scope: !3425, file: !1665, line: 360, column: 29)
!3430 = !DILocation(line: 361, column: 15, scope: !3429)
!3431 = !DILocalVariable(name: "v", scope: !3429, file: !1665, line: 362, type: !891)
!3432 = !DILocation(line: 362, column: 13, scope: !3429)
!3433 = !DILocation(line: 363, column: 13, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3429, file: !1665, line: 363, column: 13)
!3435 = !DILocation(line: 363, column: 15, scope: !3434)
!3436 = !DILocation(line: 363, column: 13, scope: !3429)
!3437 = !DILocation(line: 364, column: 29, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3434, file: !1665, line: 363, column: 21)
!3439 = !DILocation(line: 364, column: 21, scope: !3438)
!3440 = !DILocation(line: 364, column: 31, scope: !3438)
!3441 = !DILocation(line: 364, column: 37, scope: !3438)
!3442 = !DILocation(line: 364, column: 17, scope: !3438)
!3443 = !DILocation(line: 364, column: 15, scope: !3438)
!3444 = !DILocation(line: 365, column: 25, scope: !3438)
!3445 = !DILocation(line: 365, column: 36, scope: !3438)
!3446 = !DILocation(line: 365, column: 34, scope: !3438)
!3447 = !DILocation(line: 365, column: 27, scope: !3438)
!3448 = !DILocation(line: 365, column: 40, scope: !3438)
!3449 = !DILocation(line: 365, column: 52, scope: !3438)
!3450 = !DILocation(line: 365, column: 18, scope: !3438)
!3451 = !DILocation(line: 365, column: 15, scope: !3438)
!3452 = !DILocation(line: 366, column: 9, scope: !3438)
!3453 = !DILocation(line: 367, column: 15, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3434, file: !1665, line: 366, column: 16)
!3455 = !DILocation(line: 369, column: 27, scope: !3429)
!3456 = !DILocation(line: 369, column: 22, scope: !3429)
!3457 = !DILocation(line: 369, column: 9, scope: !3429)
!3458 = !DILocation(line: 369, column: 25, scope: !3429)
!3459 = !DILocation(line: 370, column: 30, scope: !3429)
!3460 = !DILocation(line: 370, column: 25, scope: !3429)
!3461 = !DILocation(line: 370, column: 23, scope: !3429)
!3462 = !DILocation(line: 370, column: 9, scope: !3429)
!3463 = !DILocation(line: 370, column: 28, scope: !3429)
!3464 = !DILocation(line: 371, column: 5, scope: !3429)
!3465 = !DILocation(line: 360, column: 25, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3425, file: !1665, discriminator: 2)
!3467 = !DILocation(line: 360, column: 5, scope: !3466)
!3468 = distinct !{!3468, !3469}
!3469 = !DILocation(line: 360, column: 5, scope: !2996)
!3470 = !DILocation(line: 373, column: 12, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 373, column: 5)
!3472 = !DILocation(line: 373, column: 10, scope: !3471)
!3473 = !DILocation(line: 373, column: 17, scope: !3474)
!3474 = !DILexicalBlockFile(scope: !3475, file: !1665, discriminator: 1)
!3475 = distinct !DILexicalBlock(scope: !3471, file: !1665, line: 373, column: 5)
!3476 = !DILocation(line: 373, column: 19, scope: !3474)
!3477 = !DILocation(line: 373, column: 5, scope: !3474)
!3478 = !DILocation(line: 374, column: 38, scope: !3475)
!3479 = !DILocation(line: 374, column: 26, scope: !3475)
!3480 = !DILocation(line: 374, column: 41, scope: !3475)
!3481 = !DILocation(line: 374, column: 21, scope: !3475)
!3482 = !DILocation(line: 374, column: 9, scope: !3475)
!3483 = !DILocation(line: 374, column: 24, scope: !3475)
!3484 = !DILocation(line: 373, column: 26, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !3475, file: !1665, discriminator: 2)
!3486 = !DILocation(line: 373, column: 5, scope: !3485)
!3487 = distinct !{!3487, !3488}
!3488 = !DILocation(line: 373, column: 5, scope: !2996)
!3489 = !DILocation(line: 376, column: 12, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 376, column: 5)
!3491 = !DILocation(line: 376, column: 10, scope: !3490)
!3492 = !DILocation(line: 376, column: 17, scope: !3493)
!3493 = !DILexicalBlockFile(scope: !3494, file: !1665, discriminator: 1)
!3494 = distinct !DILexicalBlock(scope: !3490, file: !1665, line: 376, column: 5)
!3495 = !DILocation(line: 376, column: 19, scope: !3493)
!3496 = !DILocation(line: 376, column: 5, scope: !3493)
!3497 = !DILocalVariable(name: "f", scope: !3498, file: !1665, line: 377, type: !893)
!3498 = distinct !DILexicalBlock(scope: !3494, file: !1665, line: 376, column: 30)
!3499 = !DILocation(line: 377, column: 16, scope: !3498)
!3500 = !DILocalVariable(name: "e", scope: !3498, file: !1665, line: 378, type: !891)
!3501 = !DILocation(line: 378, column: 13, scope: !3498)
!3502 = !DILocalVariable(name: "k", scope: !3498, file: !1665, line: 378, type: !891)
!3503 = !DILocation(line: 378, column: 16, scope: !3498)
!3504 = !DILocation(line: 380, column: 16, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3498, file: !1665, line: 380, column: 9)
!3506 = !DILocation(line: 380, column: 14, scope: !3505)
!3507 = !DILocation(line: 380, column: 21, scope: !3508)
!3508 = !DILexicalBlockFile(scope: !3509, file: !1665, discriminator: 1)
!3509 = distinct !DILexicalBlock(scope: !3505, file: !1665, line: 380, column: 9)
!3510 = !DILocation(line: 380, column: 23, scope: !3508)
!3511 = !DILocation(line: 380, column: 9, scope: !3508)
!3512 = !DILocation(line: 381, column: 19, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !1665, line: 380, column: 33)
!3514 = !DILocation(line: 381, column: 21, scope: !3513)
!3515 = !DILocation(line: 381, column: 17, scope: !3513)
!3516 = !DILocation(line: 381, column: 30, scope: !3513)
!3517 = !DILocation(line: 381, column: 32, scope: !3513)
!3518 = !DILocation(line: 381, column: 37, scope: !3513)
!3519 = !DILocation(line: 381, column: 26, scope: !3513)
!3520 = !DILocation(line: 381, column: 15, scope: !3513)
!3521 = !DILocation(line: 382, column: 22, scope: !3513)
!3522 = !DILocation(line: 382, column: 24, scope: !3513)
!3523 = !DILocation(line: 382, column: 17, scope: !3513)
!3524 = !DILocation(line: 382, column: 15, scope: !3513)
!3525 = !DILocation(line: 383, column: 17, scope: !3513)
!3526 = !DILocation(line: 383, column: 19, scope: !3513)
!3527 = !DILocation(line: 383, column: 15, scope: !3513)
!3528 = !DILocation(line: 384, column: 49, scope: !3513)
!3529 = !DILocation(line: 384, column: 52, scope: !3513)
!3530 = !DILocation(line: 384, column: 64, scope: !3513)
!3531 = !DILocation(line: 384, column: 42, scope: !3513)
!3532 = !DILocation(line: 384, column: 36, scope: !3513)
!3533 = !DILocation(line: 384, column: 13, scope: !3513)
!3534 = !DILocation(line: 384, column: 29, scope: !3513)
!3535 = !DILocation(line: 384, column: 31, scope: !3513)
!3536 = !DILocation(line: 384, column: 26, scope: !3513)
!3537 = !DILocation(line: 384, column: 39, scope: !3513)
!3538 = !DILocation(line: 385, column: 33, scope: !3513)
!3539 = !DILocation(line: 385, column: 13, scope: !3513)
!3540 = !DILocation(line: 385, column: 29, scope: !3513)
!3541 = !DILocation(line: 385, column: 26, scope: !3513)
!3542 = !DILocation(line: 385, column: 36, scope: !3513)
!3543 = !DILocation(line: 386, column: 13, scope: !3513)
!3544 = distinct !{!3544, !3543}
!3545 = !DILocation(line: 386, column: 118, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !3547, file: !1665, discriminator: 1)
!3547 = distinct !DILexicalBlock(scope: !3513, file: !1665, line: 386, column: 16)
!3548 = !DILocation(line: 389, column: 9, scope: !3513)
!3549 = !DILocation(line: 380, column: 29, scope: !3550)
!3550 = !DILexicalBlockFile(scope: !3509, file: !1665, discriminator: 2)
!3551 = !DILocation(line: 380, column: 9, scope: !3550)
!3552 = distinct !{!3552, !3553}
!3553 = !DILocation(line: 380, column: 9, scope: !3498)
!3554 = !DILocation(line: 390, column: 5, scope: !3498)
!3555 = !DILocation(line: 376, column: 26, scope: !3556)
!3556 = !DILexicalBlockFile(scope: !3494, file: !1665, discriminator: 2)
!3557 = !DILocation(line: 376, column: 5, scope: !3556)
!3558 = distinct !{!3558, !3559}
!3559 = !DILocation(line: 376, column: 5, scope: !2996)
!3560 = !DILocation(line: 392, column: 12, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !2996, file: !1665, line: 392, column: 5)
!3562 = !DILocation(line: 392, column: 10, scope: !3561)
!3563 = !DILocation(line: 392, column: 17, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3565, file: !1665, discriminator: 1)
!3565 = distinct !DILexicalBlock(scope: !3561, file: !1665, line: 392, column: 5)
!3566 = !DILocation(line: 392, column: 19, scope: !3564)
!3567 = !DILocation(line: 392, column: 5, scope: !3564)
!3568 = !DILocalVariable(name: "ci", scope: !3569, file: !1665, line: 393, type: !893)
!3569 = distinct !DILexicalBlock(scope: !3565, file: !1665, line: 392, column: 29)
!3570 = !DILocation(line: 393, column: 16, scope: !3569)
!3571 = !DILocalVariable(name: "cs", scope: !3569, file: !1665, line: 393, type: !893)
!3572 = !DILocation(line: 393, column: 20, scope: !3569)
!3573 = !DILocalVariable(name: "ca", scope: !3569, file: !1665, line: 393, type: !893)
!3574 = !DILocation(line: 393, column: 24, scope: !3569)
!3575 = !DILocation(line: 394, column: 23, scope: !3569)
!3576 = !DILocation(line: 394, column: 14, scope: !3569)
!3577 = !DILocation(line: 394, column: 12, scope: !3569)
!3578 = !DILocation(line: 395, column: 31, scope: !3569)
!3579 = !DILocation(line: 395, column: 36, scope: !3569)
!3580 = !DILocation(line: 395, column: 34, scope: !3569)
!3581 = !DILocation(line: 395, column: 29, scope: !3569)
!3582 = !DILocation(line: 395, column: 20, scope: !3569)
!3583 = !DILocation(line: 395, column: 18, scope: !3569)
!3584 = !DILocation(line: 395, column: 12, scope: !3569)
!3585 = !DILocation(line: 396, column: 14, scope: !3569)
!3586 = !DILocation(line: 396, column: 19, scope: !3569)
!3587 = !DILocation(line: 396, column: 17, scope: !3569)
!3588 = !DILocation(line: 396, column: 12, scope: !3569)
!3589 = !DILocation(line: 398, column: 35, scope: !3569)
!3590 = !DILocation(line: 398, column: 37, scope: !3569)
!3591 = !DILocation(line: 398, column: 41, scope: !3569)
!3592 = !DILocation(line: 398, column: 53, scope: !3569)
!3593 = !DILocation(line: 398, column: 28, scope: !3569)
!3594 = !DILocation(line: 398, column: 19, scope: !3569)
!3595 = !DILocation(line: 398, column: 9, scope: !3569)
!3596 = !DILocation(line: 398, column: 25, scope: !3569)
!3597 = !DILocation(line: 399, column: 35, scope: !3569)
!3598 = !DILocation(line: 399, column: 37, scope: !3569)
!3599 = !DILocation(line: 399, column: 41, scope: !3569)
!3600 = !DILocation(line: 399, column: 53, scope: !3569)
!3601 = !DILocation(line: 399, column: 28, scope: !3569)
!3602 = !DILocation(line: 399, column: 19, scope: !3569)
!3603 = !DILocation(line: 399, column: 9, scope: !3569)
!3604 = !DILocation(line: 399, column: 25, scope: !3569)
!3605 = !DILocation(line: 400, column: 35, scope: !3569)
!3606 = !DILocation(line: 400, column: 37, scope: !3569)
!3607 = !DILocation(line: 400, column: 41, scope: !3569)
!3608 = !DILocation(line: 400, column: 53, scope: !3569)
!3609 = !DILocation(line: 400, column: 28, scope: !3569)
!3610 = !DILocation(line: 400, column: 71, scope: !3569)
!3611 = !DILocation(line: 400, column: 73, scope: !3569)
!3612 = !DILocation(line: 400, column: 77, scope: !3569)
!3613 = !DILocation(line: 400, column: 89, scope: !3569)
!3614 = !DILocation(line: 400, column: 64, scope: !3569)
!3615 = !DILocation(line: 400, column: 61, scope: !3569)
!3616 = !DILocation(line: 400, column: 19, scope: !3569)
!3617 = !DILocation(line: 400, column: 9, scope: !3569)
!3618 = !DILocation(line: 400, column: 25, scope: !3569)
!3619 = !DILocation(line: 401, column: 35, scope: !3569)
!3620 = !DILocation(line: 401, column: 37, scope: !3569)
!3621 = !DILocation(line: 401, column: 41, scope: !3569)
!3622 = !DILocation(line: 401, column: 53, scope: !3569)
!3623 = !DILocation(line: 401, column: 28, scope: !3569)
!3624 = !DILocation(line: 401, column: 71, scope: !3569)
!3625 = !DILocation(line: 401, column: 73, scope: !3569)
!3626 = !DILocation(line: 401, column: 77, scope: !3569)
!3627 = !DILocation(line: 401, column: 89, scope: !3569)
!3628 = !DILocation(line: 401, column: 64, scope: !3569)
!3629 = !DILocation(line: 401, column: 61, scope: !3569)
!3630 = !DILocation(line: 401, column: 19, scope: !3569)
!3631 = !DILocation(line: 401, column: 9, scope: !3569)
!3632 = !DILocation(line: 401, column: 25, scope: !3569)
!3633 = !DILocation(line: 408, column: 5, scope: !3569)
!3634 = !DILocation(line: 392, column: 25, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !3565, file: !1665, discriminator: 2)
!3636 = !DILocation(line: 392, column: 5, scope: !3635)
!3637 = distinct !{!3637, !3638}
!3638 = !DILocation(line: 392, column: 5, scope: !2996)
!3639 = !DILocation(line: 409, column: 1, scope: !2996)
!3640 = !DILocalVariable(name: "i", scope: !1779, file: !1780, line: 47, type: !891)
!3641 = !DILocation(line: 47, column: 9, scope: !1779)
!3642 = !DILocalVariable(name: "value", scope: !1779, file: !1780, line: 47, type: !891)
!3643 = !DILocation(line: 47, column: 12, scope: !1779)
!3644 = !DILocalVariable(name: "exponent", scope: !1779, file: !1780, line: 47, type: !891)
!3645 = !DILocation(line: 47, column: 19, scope: !1779)
!3646 = !DILocalVariable(name: "exp2_base", scope: !1779, file: !1780, line: 55, type: !893)
!3647 = !DILocation(line: 55, column: 12, scope: !1779)
!3648 = !DILocalVariable(name: "exp2_val", scope: !1779, file: !1780, line: 56, type: !893)
!3649 = !DILocation(line: 56, column: 12, scope: !1779)
!3650 = !DILocalVariable(name: "pow43_val", scope: !1779, file: !1780, line: 57, type: !893)
!3651 = !DILocation(line: 57, column: 12, scope: !1779)
!3652 = !DILocation(line: 58, column: 12, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !1779, file: !1780, line: 58, column: 5)
!3654 = !DILocation(line: 58, column: 10, scope: !3653)
!3655 = !DILocation(line: 58, column: 17, scope: !3656)
!3656 = !DILexicalBlockFile(scope: !3657, file: !1780, discriminator: 1)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !1780, line: 58, column: 5)
!3658 = !DILocation(line: 58, column: 19, scope: !3656)
!3659 = !DILocation(line: 58, column: 5, scope: !3656)
!3660 = !DILocation(line: 59, column: 24, scope: !3657)
!3661 = !DILocation(line: 59, column: 33, scope: !3657)
!3662 = !DILocation(line: 59, column: 28, scope: !3657)
!3663 = !DILocation(line: 59, column: 26, scope: !3657)
!3664 = !DILocation(line: 59, column: 19, scope: !3657)
!3665 = !DILocation(line: 59, column: 9, scope: !3657)
!3666 = !DILocation(line: 59, column: 22, scope: !3657)
!3667 = !DILocation(line: 58, column: 25, scope: !3668)
!3668 = !DILexicalBlockFile(scope: !3657, file: !1780, discriminator: 2)
!3669 = !DILocation(line: 58, column: 5, scope: !3668)
!3670 = distinct !{!3670, !3671}
!3671 = !DILocation(line: 58, column: 5, scope: !1779)
!3672 = !DILocation(line: 61, column: 12, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !1779, file: !1780, line: 61, column: 5)
!3674 = !DILocation(line: 61, column: 10, scope: !3673)
!3675 = !DILocation(line: 61, column: 17, scope: !3676)
!3676 = !DILexicalBlockFile(scope: !3677, file: !1780, discriminator: 1)
!3677 = distinct !DILexicalBlock(scope: !3673, file: !1780, line: 61, column: 5)
!3678 = !DILocation(line: 61, column: 19, scope: !3676)
!3679 = !DILocation(line: 61, column: 5, scope: !3676)
!3680 = !DILocalVariable(name: "f", scope: !3681, file: !1780, line: 62, type: !893)
!3681 = distinct !DILexicalBlock(scope: !3677, file: !1780, line: 61, column: 41)
!3682 = !DILocation(line: 62, column: 16, scope: !3681)
!3683 = !DILocalVariable(name: "fm", scope: !3681, file: !1780, line: 62, type: !893)
!3684 = !DILocation(line: 62, column: 19, scope: !3681)
!3685 = !DILocalVariable(name: "e", scope: !3681, file: !1780, line: 63, type: !891)
!3686 = !DILocation(line: 63, column: 13, scope: !3681)
!3687 = !DILocalVariable(name: "m", scope: !3681, file: !1780, line: 63, type: !891)
!3688 = !DILocation(line: 63, column: 16, scope: !3681)
!3689 = !DILocalVariable(name: "value", scope: !3681, file: !1780, line: 64, type: !893)
!3690 = !DILocation(line: 64, column: 16, scope: !3681)
!3691 = !DILocation(line: 64, column: 24, scope: !3681)
!3692 = !DILocation(line: 64, column: 26, scope: !3681)
!3693 = !DILocation(line: 65, column: 14, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3681, file: !1780, line: 65, column: 13)
!3695 = !DILocation(line: 65, column: 16, scope: !3694)
!3696 = !DILocation(line: 65, column: 21, scope: !3694)
!3697 = !DILocation(line: 65, column: 13, scope: !3681)
!3698 = !DILocation(line: 66, column: 25, scope: !3694)
!3699 = !DILocation(line: 66, column: 31, scope: !3694)
!3700 = !DILocation(line: 66, column: 46, scope: !3694)
!3701 = !DILocation(line: 66, column: 41, scope: !3694)
!3702 = !DILocation(line: 66, column: 39, scope: !3694)
!3703 = !DILocation(line: 66, column: 23, scope: !3694)
!3704 = !DILocation(line: 66, column: 13, scope: !3694)
!3705 = !DILocation(line: 67, column: 13, scope: !3681)
!3706 = !DILocation(line: 67, column: 34, scope: !3681)
!3707 = !DILocation(line: 67, column: 36, scope: !3681)
!3708 = !DILocation(line: 67, column: 25, scope: !3681)
!3709 = !DILocation(line: 67, column: 23, scope: !3681)
!3710 = !DILocation(line: 67, column: 11, scope: !3681)
!3711 = !DILocation(line: 68, column: 20, scope: !3681)
!3712 = !DILocation(line: 68, column: 14, scope: !3681)
!3713 = !DILocation(line: 68, column: 12, scope: !3681)
!3714 = !DILocation(line: 69, column: 20, scope: !3681)
!3715 = !DILocation(line: 69, column: 23, scope: !3681)
!3716 = !DILocation(line: 69, column: 13, scope: !3681)
!3717 = !DILocation(line: 69, column: 11, scope: !3681)
!3718 = !DILocation(line: 70, column: 11, scope: !3681)
!3719 = !DILocation(line: 73, column: 30, scope: !3681)
!3720 = !DILocation(line: 73, column: 25, scope: !3681)
!3721 = !DILocation(line: 73, column: 9, scope: !3681)
!3722 = !DILocation(line: 73, column: 28, scope: !3681)
!3723 = !DILocation(line: 74, column: 29, scope: !3681)
!3724 = !DILocation(line: 74, column: 28, scope: !3681)
!3725 = !DILocation(line: 74, column: 23, scope: !3681)
!3726 = !DILocation(line: 74, column: 9, scope: !3681)
!3727 = !DILocation(line: 74, column: 26, scope: !3681)
!3728 = !DILocation(line: 75, column: 5, scope: !3681)
!3729 = !DILocation(line: 61, column: 37, scope: !3730)
!3730 = !DILexicalBlockFile(scope: !3677, file: !1780, discriminator: 2)
!3731 = !DILocation(line: 61, column: 5, scope: !3730)
!3732 = distinct !{!3732, !3733}
!3733 = !DILocation(line: 61, column: 5, scope: !1779)
!3734 = !DILocation(line: 76, column: 19, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !1779, file: !1780, line: 76, column: 5)
!3736 = !DILocation(line: 76, column: 10, scope: !3735)
!3737 = !DILocation(line: 76, column: 24, scope: !3738)
!3738 = !DILexicalBlockFile(scope: !3739, file: !1780, discriminator: 1)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !1780, line: 76, column: 5)
!3740 = !DILocation(line: 76, column: 33, scope: !3738)
!3741 = !DILocation(line: 76, column: 5, scope: !3738)
!3742 = !DILocation(line: 77, column: 13, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !1780, line: 77, column: 13)
!3744 = distinct !DILexicalBlock(scope: !3739, file: !1780, line: 76, column: 52)
!3745 = !DILocation(line: 77, column: 22, scope: !3743)
!3746 = !DILocation(line: 77, column: 26, scope: !3747)
!3747 = !DILexicalBlockFile(scope: !3743, file: !1780, discriminator: 1)
!3748 = !DILocation(line: 77, column: 35, scope: !3747)
!3749 = !DILocation(line: 77, column: 40, scope: !3747)
!3750 = !DILocation(line: 77, column: 13, scope: !3747)
!3751 = !DILocation(line: 78, column: 23, scope: !3743)
!3752 = !DILocation(line: 78, column: 13, scope: !3743)
!3753 = !DILocation(line: 79, column: 20, scope: !3744)
!3754 = !DILocation(line: 79, column: 41, scope: !3744)
!3755 = !DILocation(line: 79, column: 50, scope: !3744)
!3756 = !DILocation(line: 79, column: 32, scope: !3744)
!3757 = !DILocation(line: 79, column: 30, scope: !3744)
!3758 = !DILocation(line: 79, column: 55, scope: !3744)
!3759 = !DILocation(line: 79, column: 18, scope: !3744)
!3760 = !DILocation(line: 80, column: 20, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3744, file: !1780, line: 80, column: 9)
!3762 = !DILocation(line: 80, column: 14, scope: !3761)
!3763 = !DILocation(line: 80, column: 25, scope: !3764)
!3764 = !DILexicalBlockFile(scope: !3765, file: !1780, discriminator: 1)
!3765 = distinct !DILexicalBlock(scope: !3761, file: !1780, line: 80, column: 9)
!3766 = !DILocation(line: 80, column: 31, scope: !3764)
!3767 = !DILocation(line: 80, column: 9, scope: !3764)
!3768 = !DILocalVariable(name: "f", scope: !3769, file: !1780, line: 81, type: !893)
!3769 = distinct !DILexicalBlock(scope: !3765, file: !1780, line: 80, column: 46)
!3770 = !DILocation(line: 81, column: 20, scope: !3769)
!3771 = !DILocation(line: 81, column: 34, scope: !3769)
!3772 = !DILocation(line: 81, column: 24, scope: !3769)
!3773 = !DILocation(line: 81, column: 43, scope: !3769)
!3774 = !DILocation(line: 81, column: 41, scope: !3769)
!3775 = !DILocation(line: 82, column: 52, scope: !3769)
!3776 = !DILocation(line: 82, column: 54, scope: !3769)
!3777 = !DILocation(line: 82, column: 76, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3769, file: !1780, discriminator: 1)
!3779 = !DILocation(line: 82, column: 69, scope: !3778)
!3780 = !DILocation(line: 82, column: 52, scope: !3778)
!3781 = !DILocation(line: 82, column: 52, scope: !3782)
!3782 = !DILexicalBlockFile(scope: !3769, file: !1780, discriminator: 2)
!3783 = !DILocation(line: 82, column: 52, scope: !3784)
!3784 = !DILexicalBlockFile(scope: !3769, file: !1780, discriminator: 3)
!3785 = !DILocation(line: 82, column: 51, scope: !3784)
!3786 = !DILocation(line: 82, column: 42, scope: !3784)
!3787 = !DILocation(line: 82, column: 13, scope: !3784)
!3788 = !DILocation(line: 82, column: 32, scope: !3784)
!3789 = !DILocation(line: 82, column: 49, scope: !3784)
!3790 = !DILocation(line: 83, column: 51, scope: !3769)
!3791 = !DILocation(line: 83, column: 42, scope: !3769)
!3792 = !DILocation(line: 83, column: 13, scope: !3769)
!3793 = !DILocation(line: 83, column: 32, scope: !3769)
!3794 = !DILocation(line: 83, column: 49, scope: !3769)
!3795 = !DILocation(line: 84, column: 9, scope: !3769)
!3796 = !DILocation(line: 80, column: 42, scope: !3797)
!3797 = !DILexicalBlockFile(scope: !3765, file: !1780, discriminator: 2)
!3798 = !DILocation(line: 80, column: 9, scope: !3797)
!3799 = distinct !{!3799, !3800}
!3800 = !DILocation(line: 80, column: 9, scope: !3744)
!3801 = !DILocation(line: 85, column: 56, scope: !3744)
!3802 = !DILocation(line: 85, column: 37, scope: !3744)
!3803 = !DILocation(line: 85, column: 25, scope: !3744)
!3804 = !DILocation(line: 85, column: 9, scope: !3744)
!3805 = !DILocation(line: 85, column: 35, scope: !3744)
!3806 = !DILocation(line: 86, column: 56, scope: !3744)
!3807 = !DILocation(line: 86, column: 37, scope: !3744)
!3808 = !DILocation(line: 86, column: 25, scope: !3744)
!3809 = !DILocation(line: 86, column: 9, scope: !3744)
!3810 = !DILocation(line: 86, column: 35, scope: !3744)
!3811 = !DILocation(line: 87, column: 5, scope: !3744)
!3812 = !DILocation(line: 76, column: 48, scope: !3813)
!3813 = !DILexicalBlockFile(scope: !3739, file: !1780, discriminator: 2)
!3814 = !DILocation(line: 76, column: 5, scope: !3813)
!3815 = distinct !{!3815, !3816}
!3816 = !DILocation(line: 76, column: 5, scope: !1779)
!3817 = !DILocation(line: 88, column: 1, scope: !1779)
!3818 = distinct !DISubprogram(name: "mp_decode_frame", scope: !1665, file: !1665, line: 1560, type: !3819, isLocal: true, isDefinition: true, scopeLine: 1562, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!891, !1847, !917, !1470, !891}
!3821 = !DILocalVariable(name: "s", arg: 1, scope: !3818, file: !1665, line: 1560, type: !1847)
!3822 = !DILocation(line: 1560, column: 46, scope: !3818)
!3823 = !DILocalVariable(name: "samples", arg: 2, scope: !3818, file: !1665, line: 1560, type: !917)
!3824 = !DILocation(line: 1560, column: 59, scope: !3818)
!3825 = !DILocalVariable(name: "buf", arg: 3, scope: !3818, file: !1665, line: 1561, type: !1470)
!3826 = !DILocation(line: 1561, column: 43, scope: !3818)
!3827 = !DILocalVariable(name: "buf_size", arg: 4, scope: !3818, file: !1665, line: 1561, type: !891)
!3828 = !DILocation(line: 1561, column: 52, scope: !3818)
!3829 = !DILocalVariable(name: "i", scope: !3818, file: !1665, line: 1563, type: !891)
!3830 = !DILocation(line: 1563, column: 9, scope: !3818)
!3831 = !DILocalVariable(name: "nb_frames", scope: !3818, file: !1665, line: 1563, type: !891)
!3832 = !DILocation(line: 1563, column: 12, scope: !3818)
!3833 = !DILocalVariable(name: "ch", scope: !3818, file: !1665, line: 1563, type: !891)
!3834 = !DILocation(line: 1563, column: 23, scope: !3818)
!3835 = !DILocalVariable(name: "ret", scope: !3818, file: !1665, line: 1563, type: !891)
!3836 = !DILocation(line: 1563, column: 27, scope: !3818)
!3837 = !DILocalVariable(name: "samples_ptr", scope: !3818, file: !1665, line: 1564, type: !918)
!3838 = !DILocation(line: 1564, column: 14, scope: !3818)
!3839 = !DILocation(line: 1566, column: 20, scope: !3818)
!3840 = !DILocation(line: 1566, column: 23, scope: !3818)
!3841 = !DILocation(line: 1566, column: 27, scope: !3818)
!3842 = !DILocation(line: 1566, column: 31, scope: !3818)
!3843 = !DILocation(line: 1566, column: 37, scope: !3818)
!3844 = !DILocation(line: 1566, column: 46, scope: !3818)
!3845 = !DILocation(line: 1566, column: 51, scope: !3818)
!3846 = !DILocation(line: 1566, column: 5, scope: !3818)
!3847 = !DILocation(line: 1569, column: 9, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3818, file: !1665, line: 1569, column: 9)
!3849 = !DILocation(line: 1569, column: 12, scope: !3848)
!3850 = !DILocation(line: 1569, column: 9, scope: !3818)
!3851 = !DILocation(line: 1570, column: 20, scope: !3848)
!3852 = !DILocation(line: 1570, column: 23, scope: !3848)
!3853 = !DILocation(line: 1570, column: 9, scope: !3848)
!3854 = !DILocation(line: 1572, column: 12, scope: !3818)
!3855 = !DILocation(line: 1572, column: 15, scope: !3818)
!3856 = !DILocation(line: 1572, column: 5, scope: !3818)
!3857 = !DILocation(line: 1574, column: 9, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3818, file: !1665, line: 1572, column: 22)
!3859 = !DILocation(line: 1574, column: 12, scope: !3858)
!3860 = !DILocation(line: 1574, column: 19, scope: !3858)
!3861 = !DILocation(line: 1574, column: 30, scope: !3858)
!3862 = !DILocation(line: 1575, column: 38, scope: !3858)
!3863 = !DILocation(line: 1575, column: 21, scope: !3858)
!3864 = !DILocation(line: 1575, column: 19, scope: !3858)
!3865 = !DILocation(line: 1576, column: 9, scope: !3858)
!3866 = !DILocation(line: 1578, column: 9, scope: !3858)
!3867 = !DILocation(line: 1578, column: 12, scope: !3858)
!3868 = !DILocation(line: 1578, column: 19, scope: !3858)
!3869 = !DILocation(line: 1578, column: 30, scope: !3858)
!3870 = !DILocation(line: 1579, column: 38, scope: !3858)
!3871 = !DILocation(line: 1579, column: 21, scope: !3858)
!3872 = !DILocation(line: 1579, column: 19, scope: !3858)
!3873 = !DILocation(line: 1580, column: 9, scope: !3858)
!3874 = !DILocation(line: 1582, column: 32, scope: !3858)
!3875 = !DILocation(line: 1582, column: 35, scope: !3858)
!3876 = !DILocation(line: 1582, column: 9, scope: !3858)
!3877 = !DILocation(line: 1582, column: 12, scope: !3858)
!3878 = !DILocation(line: 1582, column: 19, scope: !3858)
!3879 = !DILocation(line: 1582, column: 30, scope: !3858)
!3880 = !DILocation(line: 1584, column: 38, scope: !3858)
!3881 = !DILocation(line: 1584, column: 21, scope: !3858)
!3882 = !DILocation(line: 1584, column: 19, scope: !3858)
!3883 = !DILocation(line: 1586, column: 9, scope: !3858)
!3884 = !DILocation(line: 1586, column: 12, scope: !3858)
!3885 = !DILocation(line: 1586, column: 25, scope: !3858)
!3886 = !DILocation(line: 1587, column: 13, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3858, file: !1665, line: 1587, column: 13)
!3888 = !DILocation(line: 1587, column: 16, scope: !3887)
!3889 = !DILocation(line: 1587, column: 22, scope: !3887)
!3890 = !DILocation(line: 1587, column: 13, scope: !3858)
!3891 = !DILocation(line: 1588, column: 29, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3887, file: !1665, line: 1587, column: 30)
!3893 = !DILocation(line: 1588, column: 32, scope: !3892)
!3894 = !DILocation(line: 1588, column: 13, scope: !3892)
!3895 = !DILocation(line: 1589, column: 33, scope: !3892)
!3896 = !DILocation(line: 1589, column: 36, scope: !3892)
!3897 = !DILocation(line: 1589, column: 18, scope: !3892)
!3898 = !DILocation(line: 1589, column: 40, scope: !3892)
!3899 = !DILocation(line: 1589, column: 48, scope: !3892)
!3900 = !DILocation(line: 1589, column: 51, scope: !3892)
!3901 = !DILocation(line: 1589, column: 46, scope: !3892)
!3902 = !DILocation(line: 1589, column: 15, scope: !3892)
!3903 = !DILocation(line: 1590, column: 17, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3892, file: !1665, line: 1590, column: 17)
!3905 = !DILocation(line: 1590, column: 19, scope: !3904)
!3906 = !DILocation(line: 1590, column: 24, scope: !3904)
!3907 = !DILocation(line: 1590, column: 27, scope: !3908)
!3908 = !DILexicalBlockFile(scope: !3904, file: !1665, discriminator: 1)
!3909 = !DILocation(line: 1590, column: 29, scope: !3908)
!3910 = !DILocation(line: 1590, column: 17, scope: !3908)
!3911 = !DILocation(line: 1591, column: 25, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3904, file: !1665, line: 1590, column: 37)
!3913 = !DILocation(line: 1591, column: 28, scope: !3912)
!3914 = !DILocation(line: 1591, column: 17, scope: !3912)
!3915 = !DILocation(line: 1591, column: 38, scope: !3912)
!3916 = !DILocation(line: 1591, column: 41, scope: !3912)
!3917 = !DILocation(line: 1591, column: 44, scope: !3912)
!3918 = !DILocation(line: 1591, column: 70, scope: !3912)
!3919 = !DILocation(line: 1591, column: 73, scope: !3912)
!3920 = !DILocation(line: 1591, column: 54, scope: !3912)
!3921 = !DILocation(line: 1591, column: 76, scope: !3912)
!3922 = !DILocation(line: 1591, column: 51, scope: !3912)
!3923 = !DILocation(line: 1591, column: 82, scope: !3912)
!3924 = !DILocation(line: 1591, column: 17, scope: !3925)
!3925 = !DILexicalBlockFile(scope: !3912, file: !1665, discriminator: 1)
!3926 = !DILocation(line: 1592, column: 34, scope: !3912)
!3927 = !DILocation(line: 1592, column: 17, scope: !3912)
!3928 = !DILocation(line: 1592, column: 20, scope: !3912)
!3929 = !DILocation(line: 1592, column: 33, scope: !3912)
!3930 = !DILocation(line: 1593, column: 13, scope: !3912)
!3931 = !DILocation(line: 1594, column: 24, scope: !3904)
!3932 = !DILocation(line: 1594, column: 27, scope: !3904)
!3933 = !DILocation(line: 1594, column: 67, scope: !3904)
!3934 = !DILocation(line: 1594, column: 17, scope: !3904)
!3935 = !DILocation(line: 1595, column: 13, scope: !3892)
!3936 = !DILocation(line: 1595, column: 16, scope: !3892)
!3937 = !DILocation(line: 1595, column: 21, scope: !3892)
!3938 = !DILocation(line: 1595, column: 24, scope: !3892)
!3939 = !DILocation(line: 1596, column: 13, scope: !3892)
!3940 = !DILocation(line: 1596, column: 16, scope: !3892)
!3941 = !DILocation(line: 1596, column: 22, scope: !3892)
!3942 = !DILocation(line: 1596, column: 29, scope: !3892)
!3943 = !DILocation(line: 1597, column: 13, scope: !3892)
!3944 = !DILocation(line: 1597, column: 16, scope: !3892)
!3945 = !DILocation(line: 1597, column: 26, scope: !3892)
!3946 = !DILocation(line: 1598, column: 9, scope: !3892)
!3947 = !DILocation(line: 1600, column: 25, scope: !3858)
!3948 = !DILocation(line: 1600, column: 28, scope: !3858)
!3949 = !DILocation(line: 1600, column: 9, scope: !3858)
!3950 = !DILocation(line: 1602, column: 29, scope: !3858)
!3951 = !DILocation(line: 1602, column: 32, scope: !3858)
!3952 = !DILocation(line: 1602, column: 14, scope: !3858)
!3953 = !DILocation(line: 1602, column: 36, scope: !3858)
!3954 = !DILocation(line: 1602, column: 44, scope: !3858)
!3955 = !DILocation(line: 1602, column: 47, scope: !3858)
!3956 = !DILocation(line: 1602, column: 42, scope: !3858)
!3957 = !DILocation(line: 1602, column: 11, scope: !3858)
!3958 = !DILocation(line: 1603, column: 13, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3858, file: !1665, line: 1603, column: 13)
!3960 = !DILocation(line: 1603, column: 15, scope: !3959)
!3961 = !DILocation(line: 1603, column: 19, scope: !3959)
!3962 = !DILocation(line: 1603, column: 22, scope: !3963)
!3963 = !DILexicalBlockFile(scope: !3959, file: !1665, discriminator: 1)
!3964 = !DILocation(line: 1603, column: 24, scope: !3963)
!3965 = !DILocation(line: 1603, column: 30, scope: !3963)
!3966 = !DILocation(line: 1603, column: 33, scope: !3967)
!3967 = !DILexicalBlockFile(scope: !3959, file: !1665, discriminator: 2)
!3968 = !DILocation(line: 1603, column: 43, scope: !3967)
!3969 = !DILocation(line: 1603, column: 13, scope: !3967)
!3970 = !DILocation(line: 1604, column: 17, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !1665, line: 1604, column: 17)
!3972 = distinct !DILexicalBlock(scope: !3959, file: !1665, line: 1603, column: 48)
!3973 = !DILocation(line: 1604, column: 19, scope: !3971)
!3974 = !DILocation(line: 1604, column: 17, scope: !3972)
!3975 = !DILocation(line: 1605, column: 24, scope: !3971)
!3976 = !DILocation(line: 1605, column: 27, scope: !3971)
!3977 = !DILocation(line: 1605, column: 67, scope: !3971)
!3978 = !DILocation(line: 1605, column: 17, scope: !3971)
!3979 = !DILocation(line: 1606, column: 27, scope: !3972)
!3980 = !DILocation(line: 1606, column: 36, scope: !3972)
!3981 = !DILocation(line: 1606, column: 24, scope: !3972)
!3982 = !DILocation(line: 1606, column: 18, scope: !3972)
!3983 = !DILocation(line: 1606, column: 44, scope: !3984)
!3984 = !DILexicalBlockFile(scope: !3972, file: !1665, discriminator: 1)
!3985 = !DILocation(line: 1606, column: 53, scope: !3984)
!3986 = !DILocation(line: 1606, column: 18, scope: !3984)
!3987 = !DILocation(line: 1606, column: 18, scope: !3988)
!3988 = !DILexicalBlockFile(scope: !3972, file: !1665, discriminator: 2)
!3989 = !DILocation(line: 1606, column: 18, scope: !3990)
!3990 = !DILexicalBlockFile(scope: !3972, file: !1665, discriminator: 3)
!3991 = !DILocation(line: 1606, column: 15, scope: !3990)
!3992 = !DILocation(line: 1607, column: 9, scope: !3972)
!3993 = !DILocation(line: 1609, column: 16, scope: !3858)
!3994 = !DILocation(line: 1609, column: 19, scope: !3858)
!3995 = !DILocation(line: 1609, column: 30, scope: !3858)
!3996 = !DILocation(line: 1609, column: 33, scope: !3858)
!3997 = !DILocation(line: 1609, column: 28, scope: !3858)
!3998 = !DILocation(line: 1609, column: 48, scope: !3858)
!3999 = !DILocation(line: 1609, column: 51, scope: !3858)
!4000 = !DILocation(line: 1609, column: 54, scope: !3858)
!4001 = !DILocation(line: 1609, column: 63, scope: !3858)
!4002 = !DILocation(line: 1609, column: 61, scope: !3858)
!4003 = !DILocation(line: 1609, column: 72, scope: !3858)
!4004 = !DILocation(line: 1609, column: 78, scope: !3858)
!4005 = !DILocation(line: 1609, column: 76, scope: !3858)
!4006 = !DILocation(line: 1609, column: 81, scope: !3858)
!4007 = !DILocation(line: 1609, column: 9, scope: !3858)
!4008 = !DILocation(line: 1610, column: 29, scope: !3858)
!4009 = !DILocation(line: 1610, column: 9, scope: !3858)
!4010 = !DILocation(line: 1610, column: 12, scope: !3858)
!4011 = !DILocation(line: 1610, column: 26, scope: !3858)
!4012 = !DILocation(line: 1611, column: 5, scope: !3858)
!4013 = !DILocation(line: 1613, column: 8, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3818, file: !1665, line: 1613, column: 8)
!4015 = !DILocation(line: 1613, column: 18, scope: !4014)
!4016 = !DILocation(line: 1613, column: 8, scope: !3818)
!4017 = !DILocation(line: 1614, column: 16, scope: !4014)
!4018 = !DILocation(line: 1614, column: 9, scope: !4014)
!4019 = !DILocation(line: 1617, column: 10, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3818, file: !1665, line: 1617, column: 9)
!4021 = !DILocation(line: 1617, column: 9, scope: !3818)
!4022 = !DILocation(line: 1618, column: 9, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4020, file: !1665, line: 1617, column: 19)
!4024 = distinct !{!4024, !4022}
!4025 = !DILocation(line: 1618, column: 20, scope: !4026)
!4026 = !DILexicalBlockFile(scope: !4027, file: !1665, discriminator: 1)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !1665, line: 1618, column: 18)
!4028 = distinct !DILexicalBlock(scope: !4023, file: !1665, line: 1618, column: 12)
!4029 = !DILocation(line: 1618, column: 23, scope: !4026)
!4030 = !DILocation(line: 1618, column: 19, scope: !4026)
!4031 = !DILocation(line: 1618, column: 18, scope: !4026)
!4032 = !DILocation(line: 1618, column: 33, scope: !4033)
!4033 = !DILexicalBlockFile(scope: !4034, file: !1665, discriminator: 2)
!4034 = distinct !DILexicalBlock(scope: !4027, file: !1665, line: 1618, column: 31)
!4035 = !DILocation(line: 1618, column: 104, scope: !4036)
!4036 = !DILexicalBlockFile(scope: !4033, file: !1665, discriminator: 4)
!4037 = !DILocation(line: 1618, column: 104, scope: !4033)
!4038 = !DILocation(line: 1618, column: 115, scope: !4039)
!4039 = !DILexicalBlockFile(scope: !4028, file: !1665, discriminator: 3)
!4040 = !DILocation(line: 1619, column: 32, scope: !4023)
!4041 = !DILocation(line: 1619, column: 35, scope: !4023)
!4042 = !DILocation(line: 1619, column: 42, scope: !4023)
!4043 = !DILocation(line: 1619, column: 9, scope: !4023)
!4044 = !DILocation(line: 1619, column: 12, scope: !4023)
!4045 = !DILocation(line: 1619, column: 19, scope: !4023)
!4046 = !DILocation(line: 1619, column: 30, scope: !4023)
!4047 = !DILocation(line: 1620, column: 34, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4023, file: !1665, line: 1620, column: 13)
!4049 = !DILocation(line: 1620, column: 37, scope: !4048)
!4050 = !DILocation(line: 1620, column: 44, scope: !4048)
!4051 = !DILocation(line: 1620, column: 47, scope: !4048)
!4052 = !DILocation(line: 1620, column: 20, scope: !4048)
!4053 = !DILocation(line: 1620, column: 18, scope: !4048)
!4054 = !DILocation(line: 1620, column: 58, scope: !4048)
!4055 = !DILocation(line: 1620, column: 13, scope: !4023)
!4056 = !DILocation(line: 1621, column: 20, scope: !4048)
!4057 = !DILocation(line: 1621, column: 13, scope: !4048)
!4058 = !DILocation(line: 1622, column: 31, scope: !4023)
!4059 = !DILocation(line: 1622, column: 34, scope: !4023)
!4060 = !DILocation(line: 1622, column: 41, scope: !4023)
!4061 = !DILocation(line: 1622, column: 19, scope: !4023)
!4062 = !DILocation(line: 1622, column: 17, scope: !4023)
!4063 = !DILocation(line: 1623, column: 5, scope: !4023)
!4064 = !DILocation(line: 1626, column: 13, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3818, file: !1665, line: 1626, column: 5)
!4066 = !DILocation(line: 1626, column: 10, scope: !4065)
!4067 = !DILocation(line: 1626, column: 18, scope: !4068)
!4068 = !DILexicalBlockFile(scope: !4069, file: !1665, discriminator: 1)
!4069 = distinct !DILexicalBlock(scope: !4065, file: !1665, line: 1626, column: 5)
!4070 = !DILocation(line: 1626, column: 23, scope: !4068)
!4071 = !DILocation(line: 1626, column: 26, scope: !4068)
!4072 = !DILocation(line: 1626, column: 21, scope: !4068)
!4073 = !DILocation(line: 1626, column: 5, scope: !4068)
!4074 = !DILocalVariable(name: "sample_stride", scope: !4075, file: !1665, line: 1627, type: !891)
!4075 = distinct !DILexicalBlock(scope: !4069, file: !1665, line: 1626, column: 45)
!4076 = !DILocation(line: 1627, column: 13, scope: !4075)
!4077 = !DILocation(line: 1628, column: 13, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4075, file: !1665, line: 1628, column: 13)
!4079 = !DILocation(line: 1628, column: 16, scope: !4078)
!4080 = !DILocation(line: 1628, column: 23, scope: !4078)
!4081 = !DILocation(line: 1628, column: 34, scope: !4078)
!4082 = !DILocation(line: 1628, column: 13, scope: !4075)
!4083 = !DILocation(line: 1629, column: 35, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4078, file: !1665, line: 1628, column: 57)
!4085 = !DILocation(line: 1629, column: 27, scope: !4084)
!4086 = !DILocation(line: 1629, column: 25, scope: !4084)
!4087 = !DILocation(line: 1630, column: 27, scope: !4084)
!4088 = !DILocation(line: 1631, column: 9, scope: !4084)
!4089 = !DILocation(line: 1632, column: 27, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4078, file: !1665, line: 1631, column: 16)
!4091 = !DILocation(line: 1632, column: 40, scope: !4090)
!4092 = !DILocation(line: 1632, column: 38, scope: !4090)
!4093 = !DILocation(line: 1632, column: 25, scope: !4090)
!4094 = !DILocation(line: 1633, column: 29, scope: !4090)
!4095 = !DILocation(line: 1633, column: 32, scope: !4090)
!4096 = !DILocation(line: 1633, column: 27, scope: !4090)
!4097 = !DILocation(line: 1635, column: 16, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4075, file: !1665, line: 1635, column: 9)
!4099 = !DILocation(line: 1635, column: 14, scope: !4098)
!4100 = !DILocation(line: 1635, column: 21, scope: !4101)
!4101 = !DILexicalBlockFile(scope: !4102, file: !1665, discriminator: 1)
!4102 = distinct !DILexicalBlock(scope: !4098, file: !1665, line: 1635, column: 9)
!4103 = !DILocation(line: 1635, column: 25, scope: !4101)
!4104 = !DILocation(line: 1635, column: 23, scope: !4101)
!4105 = !DILocation(line: 1635, column: 9, scope: !4101)
!4106 = !DILocation(line: 1636, column: 40, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4102, file: !1665, line: 1635, column: 41)
!4108 = !DILocation(line: 1636, column: 43, scope: !4107)
!4109 = !DILocation(line: 1636, column: 64, scope: !4107)
!4110 = !DILocation(line: 1636, column: 51, scope: !4107)
!4111 = !DILocation(line: 1636, column: 54, scope: !4107)
!4112 = !DILocation(line: 1637, column: 63, scope: !4107)
!4113 = !DILocation(line: 1637, column: 43, scope: !4107)
!4114 = !DILocation(line: 1637, column: 46, scope: !4107)
!4115 = !DILocation(line: 1639, column: 42, scope: !4107)
!4116 = !DILocation(line: 1639, column: 45, scope: !4107)
!4117 = !DILocation(line: 1639, column: 59, scope: !4107)
!4118 = !DILocation(line: 1640, column: 41, scope: !4107)
!4119 = !DILocation(line: 1640, column: 74, scope: !4107)
!4120 = !DILocation(line: 1640, column: 56, scope: !4107)
!4121 = !DILocation(line: 1640, column: 70, scope: !4107)
!4122 = !DILocation(line: 1640, column: 59, scope: !4107)
!4123 = !DILocation(line: 1636, column: 13, scope: !4107)
!4124 = !DILocation(line: 1641, column: 33, scope: !4107)
!4125 = !DILocation(line: 1641, column: 31, scope: !4107)
!4126 = !DILocation(line: 1641, column: 25, scope: !4107)
!4127 = !DILocation(line: 1642, column: 9, scope: !4107)
!4128 = !DILocation(line: 1635, column: 37, scope: !4129)
!4129 = !DILexicalBlockFile(scope: !4102, file: !1665, discriminator: 2)
!4130 = !DILocation(line: 1635, column: 9, scope: !4129)
!4131 = distinct !{!4131, !4132}
!4132 = !DILocation(line: 1635, column: 9, scope: !4075)
!4133 = !DILocation(line: 1643, column: 5, scope: !4075)
!4134 = !DILocation(line: 1626, column: 41, scope: !4135)
!4135 = !DILexicalBlockFile(scope: !4069, file: !1665, discriminator: 2)
!4136 = !DILocation(line: 1626, column: 5, scope: !4135)
!4137 = distinct !{!4137, !4138}
!4138 = !DILocation(line: 1626, column: 5, scope: !3818)
!4139 = !DILocation(line: 1645, column: 12, scope: !3818)
!4140 = !DILocation(line: 1645, column: 22, scope: !3818)
!4141 = !DILocation(line: 1645, column: 27, scope: !3818)
!4142 = !DILocation(line: 1645, column: 47, scope: !3818)
!4143 = !DILocation(line: 1645, column: 50, scope: !3818)
!4144 = !DILocation(line: 1645, column: 45, scope: !3818)
!4145 = !DILocation(line: 1645, column: 5, scope: !3818)
!4146 = !DILocation(line: 1646, column: 1, scope: !3818)
!4147 = distinct !DISubprogram(name: "init_get_bits", scope: !1870, file: !1870, line: 615, type: !4148, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!891, !4150, !1470, !891}
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64, align: 64)
!4151 = !DILocalVariable(name: "s", arg: 1, scope: !4147, file: !1870, line: 615, type: !4150)
!4152 = !DILocation(line: 615, column: 48, scope: !4147)
!4153 = !DILocalVariable(name: "buffer", arg: 2, scope: !4147, file: !1870, line: 615, type: !1470)
!4154 = !DILocation(line: 615, column: 66, scope: !4147)
!4155 = !DILocalVariable(name: "bit_size", arg: 3, scope: !4147, file: !1870, line: 616, type: !891)
!4156 = !DILocation(line: 616, column: 37, scope: !4147)
!4157 = !DILocalVariable(name: "buffer_size", scope: !4147, file: !1870, line: 618, type: !891)
!4158 = !DILocation(line: 618, column: 9, scope: !4147)
!4159 = !DILocalVariable(name: "ret", scope: !4147, file: !1870, line: 619, type: !891)
!4160 = !DILocation(line: 619, column: 9, scope: !4147)
!4161 = !DILocation(line: 621, column: 9, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4147, file: !1870, line: 621, column: 9)
!4163 = !DILocation(line: 621, column: 18, scope: !4162)
!4164 = !DILocation(line: 621, column: 64, scope: !4162)
!4165 = !DILocation(line: 621, column: 67, scope: !4166)
!4166 = !DILexicalBlockFile(scope: !4162, file: !1870, discriminator: 1)
!4167 = !DILocation(line: 621, column: 76, scope: !4166)
!4168 = !DILocation(line: 621, column: 80, scope: !4166)
!4169 = !DILocation(line: 621, column: 84, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4162, file: !1870, discriminator: 2)
!4171 = !DILocation(line: 621, column: 9, scope: !4170)
!4172 = !DILocation(line: 622, column: 18, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4162, file: !1870, line: 621, column: 92)
!4174 = !DILocation(line: 623, column: 16, scope: !4173)
!4175 = !DILocation(line: 624, column: 13, scope: !4173)
!4176 = !DILocation(line: 625, column: 5, scope: !4173)
!4177 = !DILocation(line: 627, column: 20, scope: !4147)
!4178 = !DILocation(line: 627, column: 29, scope: !4147)
!4179 = !DILocation(line: 627, column: 34, scope: !4147)
!4180 = !DILocation(line: 627, column: 17, scope: !4147)
!4181 = !DILocation(line: 629, column: 17, scope: !4147)
!4182 = !DILocation(line: 629, column: 5, scope: !4147)
!4183 = !DILocation(line: 629, column: 8, scope: !4147)
!4184 = !DILocation(line: 629, column: 15, scope: !4147)
!4185 = !DILocation(line: 630, column: 23, scope: !4147)
!4186 = !DILocation(line: 630, column: 5, scope: !4147)
!4187 = !DILocation(line: 630, column: 8, scope: !4147)
!4188 = !DILocation(line: 630, column: 21, scope: !4147)
!4189 = !DILocation(line: 631, column: 29, scope: !4147)
!4190 = !DILocation(line: 631, column: 38, scope: !4147)
!4191 = !DILocation(line: 631, column: 5, scope: !4147)
!4192 = !DILocation(line: 631, column: 8, scope: !4147)
!4193 = !DILocation(line: 631, column: 27, scope: !4147)
!4194 = !DILocation(line: 632, column: 21, scope: !4147)
!4195 = !DILocation(line: 632, column: 30, scope: !4147)
!4196 = !DILocation(line: 632, column: 28, scope: !4147)
!4197 = !DILocation(line: 632, column: 5, scope: !4147)
!4198 = !DILocation(line: 632, column: 8, scope: !4147)
!4199 = !DILocation(line: 632, column: 19, scope: !4147)
!4200 = !DILocation(line: 633, column: 5, scope: !4147)
!4201 = !DILocation(line: 633, column: 8, scope: !4147)
!4202 = !DILocation(line: 633, column: 14, scope: !4147)
!4203 = !DILocation(line: 639, column: 12, scope: !4147)
!4204 = !DILocation(line: 639, column: 5, scope: !4147)
!4205 = distinct !DISubprogram(name: "skip_bits", scope: !1870, file: !1870, line: 460, type: !4206, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{null, !4150, !891}
!4208 = !DILocalVariable(name: "s", arg: 1, scope: !4205, file: !1870, line: 460, type: !4150)
!4209 = !DILocation(line: 460, column: 45, scope: !4205)
!4210 = !DILocalVariable(name: "n", arg: 2, scope: !4205, file: !1870, line: 460, type: !891)
!4211 = !DILocation(line: 460, column: 52, scope: !4205)
!4212 = !DILocalVariable(name: "re_index", scope: !4205, file: !1870, line: 481, type: !894)
!4213 = !DILocation(line: 481, column: 18, scope: !4205)
!4214 = !DILocation(line: 481, column: 30, scope: !4205)
!4215 = !DILocation(line: 481, column: 34, scope: !4205)
!4216 = !DILocalVariable(name: "re_cache", scope: !4205, file: !1870, line: 481, type: !894)
!4217 = !DILocation(line: 481, column: 78, scope: !4205)
!4218 = !DILocalVariable(name: "re_size_plus8", scope: !4205, file: !1870, line: 481, type: !894)
!4219 = !DILocation(line: 481, column: 101, scope: !4205)
!4220 = !DILocation(line: 481, column: 118, scope: !4205)
!4221 = !DILocation(line: 481, column: 122, scope: !4205)
!4222 = !DILocation(line: 482, column: 18, scope: !4205)
!4223 = !DILocation(line: 482, column: 36, scope: !4205)
!4224 = !DILocation(line: 482, column: 48, scope: !4205)
!4225 = !DILocation(line: 482, column: 45, scope: !4205)
!4226 = !DILocation(line: 482, column: 33, scope: !4205)
!4227 = !DILocation(line: 482, column: 17, scope: !4205)
!4228 = !DILocation(line: 482, column: 55, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4205, file: !1870, discriminator: 1)
!4230 = !DILocation(line: 482, column: 67, scope: !4229)
!4231 = !DILocation(line: 482, column: 64, scope: !4229)
!4232 = !DILocation(line: 482, column: 17, scope: !4229)
!4233 = !DILocation(line: 482, column: 74, scope: !4234)
!4234 = !DILexicalBlockFile(scope: !4205, file: !1870, discriminator: 2)
!4235 = !DILocation(line: 482, column: 17, scope: !4234)
!4236 = !DILocation(line: 482, column: 17, scope: !4237)
!4237 = !DILexicalBlockFile(scope: !4205, file: !1870, discriminator: 3)
!4238 = !DILocation(line: 482, column: 14, scope: !4237)
!4239 = !DILocation(line: 483, column: 18, scope: !4205)
!4240 = !DILocation(line: 483, column: 6, scope: !4205)
!4241 = !DILocation(line: 483, column: 10, scope: !4205)
!4242 = !DILocation(line: 483, column: 16, scope: !4205)
!4243 = !DILocation(line: 485, column: 1, scope: !4205)
!4244 = distinct !DISubprogram(name: "mp_decode_layer1", scope: !1665, file: !1665, line: 503, type: !4245, isLocal: true, isDefinition: true, scopeLine: 504, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!891, !1847}
!4247 = !DILocalVariable(name: "s", arg: 1, scope: !4244, file: !1665, line: 503, type: !1847)
!4248 = !DILocation(line: 503, column: 47, scope: !4244)
!4249 = !DILocalVariable(name: "bound", scope: !4244, file: !1665, line: 505, type: !891)
!4250 = !DILocation(line: 505, column: 9, scope: !4244)
!4251 = !DILocalVariable(name: "i", scope: !4244, file: !1665, line: 505, type: !891)
!4252 = !DILocation(line: 505, column: 16, scope: !4244)
!4253 = !DILocalVariable(name: "v", scope: !4244, file: !1665, line: 505, type: !891)
!4254 = !DILocation(line: 505, column: 19, scope: !4244)
!4255 = !DILocalVariable(name: "n", scope: !4244, file: !1665, line: 505, type: !891)
!4256 = !DILocation(line: 505, column: 22, scope: !4244)
!4257 = !DILocalVariable(name: "ch", scope: !4244, file: !1665, line: 505, type: !891)
!4258 = !DILocation(line: 505, column: 25, scope: !4244)
!4259 = !DILocalVariable(name: "j", scope: !4244, file: !1665, line: 505, type: !891)
!4260 = !DILocation(line: 505, column: 29, scope: !4244)
!4261 = !DILocalVariable(name: "mant", scope: !4244, file: !1665, line: 505, type: !891)
!4262 = !DILocation(line: 505, column: 32, scope: !4244)
!4263 = !DILocalVariable(name: "allocation", scope: !4244, file: !1665, line: 506, type: !4264)
!4264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 512, align: 8, elements: !4265)
!4265 = !{!1742, !1889}
!4266 = !DILocation(line: 506, column: 13, scope: !4244)
!4267 = !DILocalVariable(name: "scale_factors", scope: !4244, file: !1665, line: 507, type: !4264)
!4268 = !DILocation(line: 507, column: 13, scope: !4244)
!4269 = !DILocation(line: 509, column: 9, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 509, column: 9)
!4271 = !DILocation(line: 509, column: 12, scope: !4270)
!4272 = !DILocation(line: 509, column: 17, scope: !4270)
!4273 = !DILocation(line: 509, column: 9, scope: !4244)
!4274 = !DILocation(line: 510, column: 18, scope: !4270)
!4275 = !DILocation(line: 510, column: 21, scope: !4270)
!4276 = !DILocation(line: 510, column: 30, scope: !4270)
!4277 = !DILocation(line: 510, column: 35, scope: !4270)
!4278 = !DILocation(line: 510, column: 15, scope: !4270)
!4279 = !DILocation(line: 510, column: 9, scope: !4270)
!4280 = !DILocation(line: 512, column: 15, scope: !4270)
!4281 = !DILocation(line: 515, column: 12, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 515, column: 5)
!4283 = !DILocation(line: 515, column: 10, scope: !4282)
!4284 = !DILocation(line: 515, column: 17, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4286, file: !1665, discriminator: 1)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !1665, line: 515, column: 5)
!4287 = !DILocation(line: 515, column: 21, scope: !4285)
!4288 = !DILocation(line: 515, column: 19, scope: !4285)
!4289 = !DILocation(line: 515, column: 5, scope: !4285)
!4290 = !DILocation(line: 516, column: 17, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !1665, line: 516, column: 9)
!4292 = distinct !DILexicalBlock(scope: !4286, file: !1665, line: 515, column: 33)
!4293 = !DILocation(line: 516, column: 14, scope: !4291)
!4294 = !DILocation(line: 516, column: 22, scope: !4295)
!4295 = !DILexicalBlockFile(scope: !4296, file: !1665, discriminator: 1)
!4296 = distinct !DILexicalBlock(scope: !4291, file: !1665, line: 516, column: 9)
!4297 = !DILocation(line: 516, column: 27, scope: !4295)
!4298 = !DILocation(line: 516, column: 30, scope: !4295)
!4299 = !DILocation(line: 516, column: 25, scope: !4295)
!4300 = !DILocation(line: 516, column: 9, scope: !4295)
!4301 = !DILocation(line: 517, column: 43, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4296, file: !1665, line: 516, column: 49)
!4303 = !DILocation(line: 517, column: 46, scope: !4302)
!4304 = !DILocation(line: 517, column: 33, scope: !4302)
!4305 = !DILocation(line: 517, column: 28, scope: !4302)
!4306 = !DILocation(line: 517, column: 13, scope: !4302)
!4307 = !DILocation(line: 517, column: 24, scope: !4302)
!4308 = !DILocation(line: 517, column: 31, scope: !4302)
!4309 = !DILocation(line: 518, column: 9, scope: !4302)
!4310 = !DILocation(line: 516, column: 45, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4296, file: !1665, discriminator: 2)
!4312 = !DILocation(line: 516, column: 9, scope: !4311)
!4313 = distinct !{!4313, !4314}
!4314 = !DILocation(line: 516, column: 9, scope: !4292)
!4315 = !DILocation(line: 519, column: 5, scope: !4292)
!4316 = !DILocation(line: 515, column: 29, scope: !4317)
!4317 = !DILexicalBlockFile(scope: !4286, file: !1665, discriminator: 2)
!4318 = !DILocation(line: 515, column: 5, scope: !4317)
!4319 = distinct !{!4319, !4320}
!4320 = !DILocation(line: 515, column: 5, scope: !4244)
!4321 = !DILocation(line: 520, column: 14, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 520, column: 5)
!4323 = !DILocation(line: 520, column: 12, scope: !4322)
!4324 = !DILocation(line: 520, column: 10, scope: !4322)
!4325 = !DILocation(line: 520, column: 21, scope: !4326)
!4326 = !DILexicalBlockFile(scope: !4327, file: !1665, discriminator: 1)
!4327 = distinct !DILexicalBlock(scope: !4322, file: !1665, line: 520, column: 5)
!4328 = !DILocation(line: 520, column: 23, scope: !4326)
!4329 = !DILocation(line: 520, column: 5, scope: !4326)
!4330 = !DILocation(line: 521, column: 38, scope: !4327)
!4331 = !DILocation(line: 521, column: 41, scope: !4327)
!4332 = !DILocation(line: 521, column: 28, scope: !4327)
!4333 = !DILocation(line: 521, column: 23, scope: !4327)
!4334 = !DILocation(line: 521, column: 9, scope: !4327)
!4335 = !DILocation(line: 521, column: 26, scope: !4327)
!4336 = !DILocation(line: 520, column: 30, scope: !4337)
!4337 = !DILexicalBlockFile(scope: !4327, file: !1665, discriminator: 2)
!4338 = !DILocation(line: 520, column: 5, scope: !4337)
!4339 = distinct !{!4339, !4340}
!4340 = !DILocation(line: 520, column: 5, scope: !4244)
!4341 = !DILocation(line: 524, column: 12, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 524, column: 5)
!4343 = !DILocation(line: 524, column: 10, scope: !4342)
!4344 = !DILocation(line: 524, column: 17, scope: !4345)
!4345 = !DILexicalBlockFile(scope: !4346, file: !1665, discriminator: 1)
!4346 = distinct !DILexicalBlock(scope: !4342, file: !1665, line: 524, column: 5)
!4347 = !DILocation(line: 524, column: 21, scope: !4345)
!4348 = !DILocation(line: 524, column: 19, scope: !4345)
!4349 = !DILocation(line: 524, column: 5, scope: !4345)
!4350 = !DILocation(line: 525, column: 17, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !1665, line: 525, column: 9)
!4352 = distinct !DILexicalBlock(scope: !4346, file: !1665, line: 524, column: 33)
!4353 = !DILocation(line: 525, column: 14, scope: !4351)
!4354 = !DILocation(line: 525, column: 22, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4356, file: !1665, discriminator: 1)
!4356 = distinct !DILexicalBlock(scope: !4351, file: !1665, line: 525, column: 9)
!4357 = !DILocation(line: 525, column: 27, scope: !4355)
!4358 = !DILocation(line: 525, column: 30, scope: !4355)
!4359 = !DILocation(line: 525, column: 25, scope: !4355)
!4360 = !DILocation(line: 525, column: 9, scope: !4355)
!4361 = !DILocation(line: 526, column: 32, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !1665, line: 526, column: 17)
!4363 = distinct !DILexicalBlock(scope: !4356, file: !1665, line: 525, column: 49)
!4364 = !DILocation(line: 526, column: 17, scope: !4362)
!4365 = !DILocation(line: 526, column: 28, scope: !4362)
!4366 = !DILocation(line: 526, column: 17, scope: !4363)
!4367 = !DILocation(line: 527, column: 50, scope: !4362)
!4368 = !DILocation(line: 527, column: 53, scope: !4362)
!4369 = !DILocation(line: 527, column: 40, scope: !4362)
!4370 = !DILocation(line: 527, column: 35, scope: !4362)
!4371 = !DILocation(line: 527, column: 17, scope: !4362)
!4372 = !DILocation(line: 527, column: 31, scope: !4362)
!4373 = !DILocation(line: 527, column: 38, scope: !4362)
!4374 = !DILocation(line: 528, column: 9, scope: !4363)
!4375 = !DILocation(line: 525, column: 45, scope: !4376)
!4376 = !DILexicalBlockFile(scope: !4356, file: !1665, discriminator: 2)
!4377 = !DILocation(line: 525, column: 9, scope: !4376)
!4378 = distinct !{!4378, !4379}
!4379 = !DILocation(line: 525, column: 9, scope: !4352)
!4380 = !DILocation(line: 529, column: 5, scope: !4352)
!4381 = !DILocation(line: 524, column: 29, scope: !4382)
!4382 = !DILexicalBlockFile(scope: !4346, file: !1665, discriminator: 2)
!4383 = !DILocation(line: 524, column: 5, scope: !4382)
!4384 = distinct !{!4384, !4385}
!4385 = !DILocation(line: 524, column: 5, scope: !4244)
!4386 = !DILocation(line: 530, column: 14, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 530, column: 5)
!4388 = !DILocation(line: 530, column: 12, scope: !4387)
!4389 = !DILocation(line: 530, column: 10, scope: !4387)
!4390 = !DILocation(line: 530, column: 21, scope: !4391)
!4391 = !DILexicalBlockFile(scope: !4392, file: !1665, discriminator: 1)
!4392 = distinct !DILexicalBlock(scope: !4387, file: !1665, line: 530, column: 5)
!4393 = !DILocation(line: 530, column: 23, scope: !4391)
!4394 = !DILocation(line: 530, column: 5, scope: !4391)
!4395 = !DILocation(line: 531, column: 27, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !1665, line: 531, column: 13)
!4397 = distinct !DILexicalBlock(scope: !4392, file: !1665, line: 530, column: 34)
!4398 = !DILocation(line: 531, column: 13, scope: !4396)
!4399 = !DILocation(line: 531, column: 13, scope: !4397)
!4400 = !DILocation(line: 532, column: 45, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4396, file: !1665, line: 531, column: 31)
!4402 = !DILocation(line: 532, column: 48, scope: !4401)
!4403 = !DILocation(line: 532, column: 35, scope: !4401)
!4404 = !DILocation(line: 532, column: 30, scope: !4401)
!4405 = !DILocation(line: 532, column: 13, scope: !4401)
!4406 = !DILocation(line: 532, column: 33, scope: !4401)
!4407 = !DILocation(line: 533, column: 45, scope: !4401)
!4408 = !DILocation(line: 533, column: 48, scope: !4401)
!4409 = !DILocation(line: 533, column: 35, scope: !4401)
!4410 = !DILocation(line: 533, column: 30, scope: !4401)
!4411 = !DILocation(line: 533, column: 13, scope: !4401)
!4412 = !DILocation(line: 533, column: 33, scope: !4401)
!4413 = !DILocation(line: 534, column: 9, scope: !4401)
!4414 = !DILocation(line: 535, column: 5, scope: !4397)
!4415 = !DILocation(line: 530, column: 30, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4392, file: !1665, discriminator: 2)
!4417 = !DILocation(line: 530, column: 5, scope: !4416)
!4418 = distinct !{!4418, !4419}
!4419 = !DILocation(line: 530, column: 5, scope: !4244)
!4420 = !DILocation(line: 538, column: 12, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4244, file: !1665, line: 538, column: 5)
!4422 = !DILocation(line: 538, column: 10, scope: !4421)
!4423 = !DILocation(line: 538, column: 17, scope: !4424)
!4424 = !DILexicalBlockFile(scope: !4425, file: !1665, discriminator: 1)
!4425 = distinct !DILexicalBlock(scope: !4421, file: !1665, line: 538, column: 5)
!4426 = !DILocation(line: 538, column: 19, scope: !4424)
!4427 = !DILocation(line: 538, column: 5, scope: !4424)
!4428 = !DILocation(line: 539, column: 16, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !1665, line: 539, column: 9)
!4430 = distinct !DILexicalBlock(scope: !4425, file: !1665, line: 538, column: 30)
!4431 = !DILocation(line: 539, column: 14, scope: !4429)
!4432 = !DILocation(line: 539, column: 21, scope: !4433)
!4433 = !DILexicalBlockFile(scope: !4434, file: !1665, discriminator: 1)
!4434 = distinct !DILexicalBlock(scope: !4429, file: !1665, line: 539, column: 9)
!4435 = !DILocation(line: 539, column: 25, scope: !4433)
!4436 = !DILocation(line: 539, column: 23, scope: !4433)
!4437 = !DILocation(line: 539, column: 9, scope: !4433)
!4438 = !DILocation(line: 540, column: 21, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4440, file: !1665, line: 540, column: 13)
!4440 = distinct !DILexicalBlock(scope: !4434, file: !1665, line: 539, column: 37)
!4441 = !DILocation(line: 540, column: 18, scope: !4439)
!4442 = !DILocation(line: 540, column: 26, scope: !4443)
!4443 = !DILexicalBlockFile(scope: !4444, file: !1665, discriminator: 1)
!4444 = distinct !DILexicalBlock(scope: !4439, file: !1665, line: 540, column: 13)
!4445 = !DILocation(line: 540, column: 31, scope: !4443)
!4446 = !DILocation(line: 540, column: 34, scope: !4443)
!4447 = !DILocation(line: 540, column: 29, scope: !4443)
!4448 = !DILocation(line: 540, column: 13, scope: !4443)
!4449 = !DILocation(line: 541, column: 36, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4444, file: !1665, line: 540, column: 53)
!4451 = !DILocation(line: 541, column: 21, scope: !4450)
!4452 = !DILocation(line: 541, column: 32, scope: !4450)
!4453 = !DILocation(line: 541, column: 19, scope: !4450)
!4454 = !DILocation(line: 542, column: 21, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4450, file: !1665, line: 542, column: 21)
!4456 = !DILocation(line: 542, column: 21, scope: !4450)
!4457 = !DILocation(line: 543, column: 38, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4455, file: !1665, line: 542, column: 24)
!4459 = !DILocation(line: 543, column: 41, scope: !4458)
!4460 = !DILocation(line: 543, column: 45, scope: !4458)
!4461 = !DILocation(line: 543, column: 47, scope: !4458)
!4462 = !DILocation(line: 543, column: 28, scope: !4458)
!4463 = !DILocation(line: 543, column: 26, scope: !4458)
!4464 = !DILocation(line: 544, column: 36, scope: !4458)
!4465 = !DILocation(line: 544, column: 39, scope: !4458)
!4466 = !DILocation(line: 544, column: 63, scope: !4458)
!4467 = !DILocation(line: 544, column: 45, scope: !4458)
!4468 = !DILocation(line: 544, column: 59, scope: !4458)
!4469 = !DILocation(line: 544, column: 25, scope: !4458)
!4470 = !DILocation(line: 544, column: 23, scope: !4458)
!4471 = !DILocation(line: 545, column: 17, scope: !4458)
!4472 = !DILocation(line: 546, column: 23, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4455, file: !1665, line: 545, column: 24)
!4474 = !DILocation(line: 548, column: 43, scope: !4450)
!4475 = !DILocation(line: 548, column: 38, scope: !4450)
!4476 = !DILocation(line: 548, column: 17, scope: !4450)
!4477 = !DILocation(line: 548, column: 35, scope: !4450)
!4478 = !DILocation(line: 548, column: 31, scope: !4450)
!4479 = !DILocation(line: 548, column: 20, scope: !4450)
!4480 = !DILocation(line: 548, column: 41, scope: !4450)
!4481 = !DILocation(line: 549, column: 13, scope: !4450)
!4482 = !DILocation(line: 540, column: 49, scope: !4483)
!4483 = !DILexicalBlockFile(scope: !4444, file: !1665, discriminator: 2)
!4484 = !DILocation(line: 540, column: 13, scope: !4483)
!4485 = distinct !{!4485, !4486}
!4486 = !DILocation(line: 540, column: 13, scope: !4440)
!4487 = !DILocation(line: 550, column: 9, scope: !4440)
!4488 = !DILocation(line: 539, column: 33, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !4434, file: !1665, discriminator: 2)
!4490 = !DILocation(line: 539, column: 9, scope: !4489)
!4491 = distinct !{!4491, !4492}
!4492 = !DILocation(line: 539, column: 9, scope: !4430)
!4493 = !DILocation(line: 551, column: 18, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4430, file: !1665, line: 551, column: 9)
!4495 = !DILocation(line: 551, column: 16, scope: !4494)
!4496 = !DILocation(line: 551, column: 14, scope: !4494)
!4497 = !DILocation(line: 551, column: 25, scope: !4498)
!4498 = !DILexicalBlockFile(scope: !4499, file: !1665, discriminator: 1)
!4499 = distinct !DILexicalBlock(scope: !4494, file: !1665, line: 551, column: 9)
!4500 = !DILocation(line: 551, column: 27, scope: !4498)
!4501 = !DILocation(line: 551, column: 9, scope: !4498)
!4502 = !DILocation(line: 552, column: 31, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !1665, line: 551, column: 38)
!4504 = !DILocation(line: 552, column: 17, scope: !4503)
!4505 = !DILocation(line: 552, column: 15, scope: !4503)
!4506 = !DILocation(line: 553, column: 17, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4503, file: !1665, line: 553, column: 17)
!4508 = !DILocation(line: 553, column: 17, scope: !4503)
!4509 = !DILocation(line: 554, column: 34, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4507, file: !1665, line: 553, column: 20)
!4511 = !DILocation(line: 554, column: 37, scope: !4510)
!4512 = !DILocation(line: 554, column: 41, scope: !4510)
!4513 = !DILocation(line: 554, column: 43, scope: !4510)
!4514 = !DILocation(line: 554, column: 24, scope: !4510)
!4515 = !DILocation(line: 554, column: 22, scope: !4510)
!4516 = !DILocation(line: 555, column: 32, scope: !4510)
!4517 = !DILocation(line: 555, column: 35, scope: !4510)
!4518 = !DILocation(line: 555, column: 58, scope: !4510)
!4519 = !DILocation(line: 555, column: 41, scope: !4510)
!4520 = !DILocation(line: 555, column: 21, scope: !4510)
!4521 = !DILocation(line: 555, column: 19, scope: !4510)
!4522 = !DILocation(line: 556, column: 42, scope: !4510)
!4523 = !DILocation(line: 556, column: 37, scope: !4510)
!4524 = !DILocation(line: 556, column: 17, scope: !4510)
!4525 = !DILocation(line: 556, column: 34, scope: !4510)
!4526 = !DILocation(line: 556, column: 20, scope: !4510)
!4527 = !DILocation(line: 556, column: 40, scope: !4510)
!4528 = !DILocation(line: 557, column: 32, scope: !4510)
!4529 = !DILocation(line: 557, column: 35, scope: !4510)
!4530 = !DILocation(line: 557, column: 58, scope: !4510)
!4531 = !DILocation(line: 557, column: 41, scope: !4510)
!4532 = !DILocation(line: 557, column: 21, scope: !4510)
!4533 = !DILocation(line: 557, column: 19, scope: !4510)
!4534 = !DILocation(line: 558, column: 42, scope: !4510)
!4535 = !DILocation(line: 558, column: 37, scope: !4510)
!4536 = !DILocation(line: 558, column: 17, scope: !4510)
!4537 = !DILocation(line: 558, column: 34, scope: !4510)
!4538 = !DILocation(line: 558, column: 20, scope: !4510)
!4539 = !DILocation(line: 558, column: 40, scope: !4510)
!4540 = !DILocation(line: 559, column: 13, scope: !4510)
!4541 = !DILocation(line: 560, column: 37, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4507, file: !1665, line: 559, column: 20)
!4543 = !DILocation(line: 560, column: 17, scope: !4542)
!4544 = !DILocation(line: 560, column: 34, scope: !4542)
!4545 = !DILocation(line: 560, column: 20, scope: !4542)
!4546 = !DILocation(line: 560, column: 40, scope: !4542)
!4547 = !DILocation(line: 561, column: 37, scope: !4542)
!4548 = !DILocation(line: 561, column: 17, scope: !4542)
!4549 = !DILocation(line: 561, column: 34, scope: !4542)
!4550 = !DILocation(line: 561, column: 20, scope: !4542)
!4551 = !DILocation(line: 561, column: 40, scope: !4542)
!4552 = !DILocation(line: 563, column: 9, scope: !4503)
!4553 = !DILocation(line: 551, column: 34, scope: !4554)
!4554 = !DILexicalBlockFile(scope: !4499, file: !1665, discriminator: 2)
!4555 = !DILocation(line: 551, column: 9, scope: !4554)
!4556 = distinct !{!4556, !4557}
!4557 = !DILocation(line: 551, column: 9, scope: !4430)
!4558 = !DILocation(line: 564, column: 5, scope: !4430)
!4559 = !DILocation(line: 538, column: 26, scope: !4560)
!4560 = !DILexicalBlockFile(scope: !4425, file: !1665, discriminator: 2)
!4561 = !DILocation(line: 538, column: 5, scope: !4560)
!4562 = distinct !{!4562, !4563}
!4563 = !DILocation(line: 538, column: 5, scope: !4244)
!4564 = !DILocation(line: 565, column: 5, scope: !4244)
!4565 = distinct !DISubprogram(name: "mp_decode_layer2", scope: !1665, file: !1665, line: 568, type: !4245, isLocal: true, isDefinition: true, scopeLine: 569, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!4566 = !DILocalVariable(name: "s", arg: 1, scope: !4565, file: !1665, line: 568, type: !1847)
!4567 = !DILocation(line: 568, column: 47, scope: !4565)
!4568 = !DILocalVariable(name: "sblimit", scope: !4565, file: !1665, line: 570, type: !891)
!4569 = !DILocation(line: 570, column: 9, scope: !4565)
!4570 = !DILocalVariable(name: "alloc_table", scope: !4565, file: !1665, line: 571, type: !4571)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64, align: 64)
!4572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!4573 = !DILocation(line: 571, column: 26, scope: !4565)
!4574 = !DILocalVariable(name: "table", scope: !4565, file: !1665, line: 572, type: !891)
!4575 = !DILocation(line: 572, column: 9, scope: !4565)
!4576 = !DILocalVariable(name: "bit_alloc_bits", scope: !4565, file: !1665, line: 572, type: !891)
!4577 = !DILocation(line: 572, column: 16, scope: !4565)
!4578 = !DILocalVariable(name: "i", scope: !4565, file: !1665, line: 572, type: !891)
!4579 = !DILocation(line: 572, column: 32, scope: !4565)
!4580 = !DILocalVariable(name: "j", scope: !4565, file: !1665, line: 572, type: !891)
!4581 = !DILocation(line: 572, column: 35, scope: !4565)
!4582 = !DILocalVariable(name: "ch", scope: !4565, file: !1665, line: 572, type: !891)
!4583 = !DILocation(line: 572, column: 38, scope: !4565)
!4584 = !DILocalVariable(name: "bound", scope: !4565, file: !1665, line: 572, type: !891)
!4585 = !DILocation(line: 572, column: 42, scope: !4565)
!4586 = !DILocalVariable(name: "v", scope: !4565, file: !1665, line: 572, type: !891)
!4587 = !DILocation(line: 572, column: 49, scope: !4565)
!4588 = !DILocalVariable(name: "bit_alloc", scope: !4565, file: !1665, line: 573, type: !4589)
!4589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 512, align: 8, elements: !4265)
!4590 = !DILocation(line: 573, column: 19, scope: !4565)
!4591 = !DILocalVariable(name: "scale_code", scope: !4565, file: !1665, line: 574, type: !4589)
!4592 = !DILocation(line: 574, column: 19, scope: !4565)
!4593 = !DILocalVariable(name: "scale_factors", scope: !4565, file: !1665, line: 575, type: !4594)
!4594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 1536, align: 8, elements: !4595)
!4595 = !{!1742, !1889, !1675}
!4596 = !DILocation(line: 575, column: 19, scope: !4565)
!4597 = !DILocalVariable(name: "sf", scope: !4565, file: !1665, line: 575, type: !4598)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64, align: 64)
!4599 = !DILocation(line: 575, column: 45, scope: !4565)
!4600 = !DILocalVariable(name: "scale", scope: !4565, file: !1665, line: 576, type: !891)
!4601 = !DILocation(line: 576, column: 9, scope: !4565)
!4602 = !DILocalVariable(name: "qindex", scope: !4565, file: !1665, line: 576, type: !891)
!4603 = !DILocation(line: 576, column: 16, scope: !4565)
!4604 = !DILocalVariable(name: "bits", scope: !4565, file: !1665, line: 576, type: !891)
!4605 = !DILocation(line: 576, column: 24, scope: !4565)
!4606 = !DILocalVariable(name: "steps", scope: !4565, file: !1665, line: 576, type: !891)
!4607 = !DILocation(line: 576, column: 30, scope: !4565)
!4608 = !DILocalVariable(name: "k", scope: !4565, file: !1665, line: 576, type: !891)
!4609 = !DILocation(line: 576, column: 37, scope: !4565)
!4610 = !DILocalVariable(name: "l", scope: !4565, file: !1665, line: 576, type: !891)
!4611 = !DILocation(line: 576, column: 40, scope: !4565)
!4612 = !DILocalVariable(name: "m", scope: !4565, file: !1665, line: 576, type: !891)
!4613 = !DILocation(line: 576, column: 43, scope: !4565)
!4614 = !DILocalVariable(name: "b", scope: !4565, file: !1665, line: 576, type: !891)
!4615 = !DILocation(line: 576, column: 46, scope: !4565)
!4616 = !DILocation(line: 579, column: 36, scope: !4565)
!4617 = !DILocation(line: 579, column: 39, scope: !4565)
!4618 = !DILocation(line: 579, column: 48, scope: !4565)
!4619 = !DILocation(line: 579, column: 56, scope: !4565)
!4620 = !DILocation(line: 579, column: 59, scope: !4565)
!4621 = !DILocation(line: 580, column: 36, scope: !4565)
!4622 = !DILocation(line: 580, column: 39, scope: !4565)
!4623 = !DILocation(line: 580, column: 52, scope: !4565)
!4624 = !DILocation(line: 580, column: 55, scope: !4565)
!4625 = !DILocation(line: 579, column: 13, scope: !4565)
!4626 = !DILocation(line: 579, column: 11, scope: !4565)
!4627 = !DILocation(line: 581, column: 36, scope: !4565)
!4628 = !DILocation(line: 581, column: 15, scope: !4565)
!4629 = !DILocation(line: 581, column: 13, scope: !4565)
!4630 = !DILocation(line: 582, column: 39, scope: !4565)
!4631 = !DILocation(line: 582, column: 19, scope: !4565)
!4632 = !DILocation(line: 582, column: 17, scope: !4565)
!4633 = !DILocation(line: 584, column: 9, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 584, column: 9)
!4635 = !DILocation(line: 584, column: 12, scope: !4634)
!4636 = !DILocation(line: 584, column: 17, scope: !4634)
!4637 = !DILocation(line: 584, column: 9, scope: !4565)
!4638 = !DILocation(line: 585, column: 18, scope: !4634)
!4639 = !DILocation(line: 585, column: 21, scope: !4634)
!4640 = !DILocation(line: 585, column: 30, scope: !4634)
!4641 = !DILocation(line: 585, column: 35, scope: !4634)
!4642 = !DILocation(line: 585, column: 15, scope: !4634)
!4643 = !DILocation(line: 585, column: 9, scope: !4634)
!4644 = !DILocation(line: 587, column: 17, scope: !4634)
!4645 = !DILocation(line: 587, column: 15, scope: !4634)
!4646 = !DILocation(line: 589, column: 5, scope: !4565)
!4647 = distinct !{!4647, !4646}
!4648 = !DILocation(line: 589, column: 80, scope: !4649)
!4649 = !DILexicalBlockFile(scope: !4650, file: !1665, discriminator: 1)
!4650 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 589, column: 8)
!4651 = !DILocation(line: 592, column: 9, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 592, column: 9)
!4653 = !DILocation(line: 592, column: 17, scope: !4652)
!4654 = !DILocation(line: 592, column: 15, scope: !4652)
!4655 = !DILocation(line: 592, column: 9, scope: !4565)
!4656 = !DILocation(line: 593, column: 17, scope: !4652)
!4657 = !DILocation(line: 593, column: 15, scope: !4652)
!4658 = !DILocation(line: 593, column: 9, scope: !4652)
!4659 = !DILocation(line: 596, column: 7, scope: !4565)
!4660 = !DILocation(line: 597, column: 12, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 597, column: 5)
!4662 = !DILocation(line: 597, column: 10, scope: !4661)
!4663 = !DILocation(line: 597, column: 17, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !4665, file: !1665, discriminator: 1)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !1665, line: 597, column: 5)
!4666 = !DILocation(line: 597, column: 21, scope: !4664)
!4667 = !DILocation(line: 597, column: 19, scope: !4664)
!4668 = !DILocation(line: 597, column: 5, scope: !4664)
!4669 = !DILocation(line: 598, column: 38, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4665, file: !1665, line: 597, column: 33)
!4671 = !DILocation(line: 598, column: 26, scope: !4670)
!4672 = !DILocation(line: 598, column: 24, scope: !4670)
!4673 = !DILocation(line: 599, column: 17, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4670, file: !1665, line: 599, column: 9)
!4675 = !DILocation(line: 599, column: 14, scope: !4674)
!4676 = !DILocation(line: 599, column: 22, scope: !4677)
!4677 = !DILexicalBlockFile(scope: !4678, file: !1665, discriminator: 1)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !1665, line: 599, column: 9)
!4679 = !DILocation(line: 599, column: 27, scope: !4677)
!4680 = !DILocation(line: 599, column: 30, scope: !4677)
!4681 = !DILocation(line: 599, column: 25, scope: !4677)
!4682 = !DILocation(line: 599, column: 9, scope: !4677)
!4683 = !DILocation(line: 600, column: 42, scope: !4678)
!4684 = !DILocation(line: 600, column: 45, scope: !4678)
!4685 = !DILocation(line: 600, column: 49, scope: !4678)
!4686 = !DILocation(line: 600, column: 32, scope: !4678)
!4687 = !DILocation(line: 600, column: 27, scope: !4678)
!4688 = !DILocation(line: 600, column: 13, scope: !4678)
!4689 = !DILocation(line: 600, column: 23, scope: !4678)
!4690 = !DILocation(line: 600, column: 30, scope: !4678)
!4691 = !DILocation(line: 599, column: 45, scope: !4692)
!4692 = !DILexicalBlockFile(scope: !4678, file: !1665, discriminator: 2)
!4693 = !DILocation(line: 599, column: 9, scope: !4692)
!4694 = distinct !{!4694, !4695}
!4695 = !DILocation(line: 599, column: 9, scope: !4670)
!4696 = !DILocation(line: 601, column: 19, scope: !4670)
!4697 = !DILocation(line: 601, column: 16, scope: !4670)
!4698 = !DILocation(line: 601, column: 11, scope: !4670)
!4699 = !DILocation(line: 602, column: 5, scope: !4670)
!4700 = !DILocation(line: 597, column: 29, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4665, file: !1665, discriminator: 2)
!4702 = !DILocation(line: 597, column: 5, scope: !4701)
!4703 = distinct !{!4703, !4704}
!4704 = !DILocation(line: 597, column: 5, scope: !4565)
!4705 = !DILocation(line: 603, column: 14, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 603, column: 5)
!4707 = !DILocation(line: 603, column: 12, scope: !4706)
!4708 = !DILocation(line: 603, column: 10, scope: !4706)
!4709 = !DILocation(line: 603, column: 21, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4711, file: !1665, discriminator: 1)
!4711 = distinct !DILexicalBlock(scope: !4706, file: !1665, line: 603, column: 5)
!4712 = !DILocation(line: 603, column: 25, scope: !4710)
!4713 = !DILocation(line: 603, column: 23, scope: !4710)
!4714 = !DILocation(line: 603, column: 5, scope: !4710)
!4715 = !DILocation(line: 604, column: 38, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4711, file: !1665, line: 603, column: 39)
!4717 = !DILocation(line: 604, column: 26, scope: !4716)
!4718 = !DILocation(line: 604, column: 24, scope: !4716)
!4719 = !DILocation(line: 605, column: 23, scope: !4716)
!4720 = !DILocation(line: 605, column: 26, scope: !4716)
!4721 = !DILocation(line: 605, column: 30, scope: !4716)
!4722 = !DILocation(line: 605, column: 13, scope: !4716)
!4723 = !DILocation(line: 605, column: 11, scope: !4716)
!4724 = !DILocation(line: 606, column: 27, scope: !4716)
!4725 = !DILocation(line: 606, column: 22, scope: !4716)
!4726 = !DILocation(line: 606, column: 9, scope: !4716)
!4727 = !DILocation(line: 606, column: 25, scope: !4716)
!4728 = !DILocation(line: 607, column: 27, scope: !4716)
!4729 = !DILocation(line: 607, column: 22, scope: !4716)
!4730 = !DILocation(line: 607, column: 9, scope: !4716)
!4731 = !DILocation(line: 607, column: 25, scope: !4716)
!4732 = !DILocation(line: 608, column: 19, scope: !4716)
!4733 = !DILocation(line: 608, column: 16, scope: !4716)
!4734 = !DILocation(line: 608, column: 11, scope: !4716)
!4735 = !DILocation(line: 609, column: 5, scope: !4716)
!4736 = !DILocation(line: 603, column: 35, scope: !4737)
!4737 = !DILexicalBlockFile(scope: !4711, file: !1665, discriminator: 2)
!4738 = !DILocation(line: 603, column: 5, scope: !4737)
!4739 = distinct !{!4739, !4740}
!4740 = !DILocation(line: 603, column: 5, scope: !4565)
!4741 = !DILocation(line: 612, column: 12, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 612, column: 5)
!4743 = !DILocation(line: 612, column: 10, scope: !4742)
!4744 = !DILocation(line: 612, column: 17, scope: !4745)
!4745 = !DILexicalBlockFile(scope: !4746, file: !1665, discriminator: 1)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !1665, line: 612, column: 5)
!4747 = !DILocation(line: 612, column: 21, scope: !4745)
!4748 = !DILocation(line: 612, column: 19, scope: !4745)
!4749 = !DILocation(line: 612, column: 5, scope: !4745)
!4750 = !DILocation(line: 613, column: 17, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !1665, line: 613, column: 9)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !1665, line: 612, column: 35)
!4753 = !DILocation(line: 613, column: 14, scope: !4751)
!4754 = !DILocation(line: 613, column: 22, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4756, file: !1665, discriminator: 1)
!4756 = distinct !DILexicalBlock(scope: !4751, file: !1665, line: 613, column: 9)
!4757 = !DILocation(line: 613, column: 27, scope: !4755)
!4758 = !DILocation(line: 613, column: 30, scope: !4755)
!4759 = !DILocation(line: 613, column: 25, scope: !4755)
!4760 = !DILocation(line: 613, column: 9, scope: !4755)
!4761 = !DILocation(line: 614, column: 31, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !1665, line: 614, column: 17)
!4763 = distinct !DILexicalBlock(scope: !4756, file: !1665, line: 613, column: 49)
!4764 = !DILocation(line: 614, column: 17, scope: !4762)
!4765 = !DILocation(line: 614, column: 27, scope: !4762)
!4766 = !DILocation(line: 614, column: 17, scope: !4763)
!4767 = !DILocation(line: 615, column: 47, scope: !4762)
!4768 = !DILocation(line: 615, column: 50, scope: !4762)
!4769 = !DILocation(line: 615, column: 37, scope: !4762)
!4770 = !DILocation(line: 615, column: 32, scope: !4762)
!4771 = !DILocation(line: 615, column: 17, scope: !4762)
!4772 = !DILocation(line: 615, column: 28, scope: !4762)
!4773 = !DILocation(line: 615, column: 35, scope: !4762)
!4774 = !DILocation(line: 616, column: 9, scope: !4763)
!4775 = !DILocation(line: 613, column: 45, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !4756, file: !1665, discriminator: 2)
!4777 = !DILocation(line: 613, column: 9, scope: !4776)
!4778 = distinct !{!4778, !4779}
!4779 = !DILocation(line: 613, column: 9, scope: !4752)
!4780 = !DILocation(line: 617, column: 5, scope: !4752)
!4781 = !DILocation(line: 612, column: 31, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !4746, file: !1665, discriminator: 2)
!4783 = !DILocation(line: 612, column: 5, scope: !4782)
!4784 = distinct !{!4784, !4785}
!4785 = !DILocation(line: 612, column: 5, scope: !4565)
!4786 = !DILocation(line: 620, column: 12, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 620, column: 5)
!4788 = !DILocation(line: 620, column: 10, scope: !4787)
!4789 = !DILocation(line: 620, column: 17, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !4791, file: !1665, discriminator: 1)
!4791 = distinct !DILexicalBlock(scope: !4787, file: !1665, line: 620, column: 5)
!4792 = !DILocation(line: 620, column: 21, scope: !4790)
!4793 = !DILocation(line: 620, column: 19, scope: !4790)
!4794 = !DILocation(line: 620, column: 5, scope: !4790)
!4795 = !DILocation(line: 621, column: 17, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !1665, line: 621, column: 9)
!4797 = distinct !DILexicalBlock(scope: !4791, file: !1665, line: 620, column: 35)
!4798 = !DILocation(line: 621, column: 14, scope: !4796)
!4799 = !DILocation(line: 621, column: 22, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4801, file: !1665, discriminator: 1)
!4801 = distinct !DILexicalBlock(scope: !4796, file: !1665, line: 621, column: 9)
!4802 = !DILocation(line: 621, column: 27, scope: !4800)
!4803 = !DILocation(line: 621, column: 30, scope: !4800)
!4804 = !DILocation(line: 621, column: 25, scope: !4800)
!4805 = !DILocation(line: 621, column: 9, scope: !4800)
!4806 = !DILocation(line: 622, column: 31, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !1665, line: 622, column: 17)
!4808 = distinct !DILexicalBlock(scope: !4801, file: !1665, line: 621, column: 49)
!4809 = !DILocation(line: 622, column: 17, scope: !4807)
!4810 = !DILocation(line: 622, column: 27, scope: !4807)
!4811 = !DILocation(line: 622, column: 17, scope: !4808)
!4812 = !DILocation(line: 623, column: 40, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4807, file: !1665, line: 622, column: 35)
!4814 = !DILocation(line: 623, column: 22, scope: !4813)
!4815 = !DILocation(line: 623, column: 36, scope: !4813)
!4816 = !DILocation(line: 623, column: 20, scope: !4813)
!4817 = !DILocation(line: 624, column: 40, scope: !4813)
!4818 = !DILocation(line: 624, column: 25, scope: !4813)
!4819 = !DILocation(line: 624, column: 36, scope: !4813)
!4820 = !DILocation(line: 624, column: 17, scope: !4813)
!4821 = !DILocation(line: 624, column: 44, scope: !4822)
!4822 = !DILexicalBlockFile(scope: !4813, file: !1665, discriminator: 1)
!4823 = !DILocation(line: 627, column: 39, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4813, file: !1665, line: 624, column: 44)
!4825 = !DILocation(line: 627, column: 42, scope: !4824)
!4826 = !DILocation(line: 627, column: 29, scope: !4824)
!4827 = !DILocation(line: 627, column: 21, scope: !4824)
!4828 = !DILocation(line: 627, column: 27, scope: !4824)
!4829 = !DILocation(line: 628, column: 39, scope: !4824)
!4830 = !DILocation(line: 628, column: 42, scope: !4824)
!4831 = !DILocation(line: 628, column: 29, scope: !4824)
!4832 = !DILocation(line: 628, column: 21, scope: !4824)
!4833 = !DILocation(line: 628, column: 27, scope: !4824)
!4834 = !DILocation(line: 629, column: 39, scope: !4824)
!4835 = !DILocation(line: 629, column: 42, scope: !4824)
!4836 = !DILocation(line: 629, column: 29, scope: !4824)
!4837 = !DILocation(line: 629, column: 21, scope: !4824)
!4838 = !DILocation(line: 629, column: 27, scope: !4824)
!4839 = !DILocation(line: 630, column: 21, scope: !4824)
!4840 = !DILocation(line: 632, column: 39, scope: !4824)
!4841 = !DILocation(line: 632, column: 42, scope: !4824)
!4842 = !DILocation(line: 632, column: 29, scope: !4824)
!4843 = !DILocation(line: 632, column: 21, scope: !4824)
!4844 = !DILocation(line: 632, column: 27, scope: !4824)
!4845 = !DILocation(line: 633, column: 29, scope: !4824)
!4846 = !DILocation(line: 633, column: 21, scope: !4824)
!4847 = !DILocation(line: 633, column: 27, scope: !4824)
!4848 = !DILocation(line: 634, column: 29, scope: !4824)
!4849 = !DILocation(line: 634, column: 21, scope: !4824)
!4850 = !DILocation(line: 634, column: 27, scope: !4824)
!4851 = !DILocation(line: 635, column: 21, scope: !4824)
!4852 = !DILocation(line: 637, column: 39, scope: !4824)
!4853 = !DILocation(line: 637, column: 42, scope: !4824)
!4854 = !DILocation(line: 637, column: 29, scope: !4824)
!4855 = !DILocation(line: 637, column: 21, scope: !4824)
!4856 = !DILocation(line: 637, column: 27, scope: !4824)
!4857 = !DILocation(line: 638, column: 39, scope: !4824)
!4858 = !DILocation(line: 638, column: 42, scope: !4824)
!4859 = !DILocation(line: 638, column: 29, scope: !4824)
!4860 = !DILocation(line: 638, column: 21, scope: !4824)
!4861 = !DILocation(line: 638, column: 27, scope: !4824)
!4862 = !DILocation(line: 639, column: 29, scope: !4824)
!4863 = !DILocation(line: 639, column: 21, scope: !4824)
!4864 = !DILocation(line: 639, column: 27, scope: !4824)
!4865 = !DILocation(line: 640, column: 21, scope: !4824)
!4866 = !DILocation(line: 642, column: 39, scope: !4824)
!4867 = !DILocation(line: 642, column: 42, scope: !4824)
!4868 = !DILocation(line: 642, column: 29, scope: !4824)
!4869 = !DILocation(line: 642, column: 21, scope: !4824)
!4870 = !DILocation(line: 642, column: 27, scope: !4824)
!4871 = !DILocation(line: 643, column: 39, scope: !4824)
!4872 = !DILocation(line: 643, column: 42, scope: !4824)
!4873 = !DILocation(line: 643, column: 29, scope: !4824)
!4874 = !DILocation(line: 643, column: 21, scope: !4824)
!4875 = !DILocation(line: 643, column: 27, scope: !4824)
!4876 = !DILocation(line: 644, column: 29, scope: !4824)
!4877 = !DILocation(line: 644, column: 21, scope: !4824)
!4878 = !DILocation(line: 644, column: 27, scope: !4824)
!4879 = !DILocation(line: 645, column: 21, scope: !4824)
!4880 = !DILocation(line: 647, column: 13, scope: !4813)
!4881 = !DILocation(line: 648, column: 9, scope: !4808)
!4882 = !DILocation(line: 621, column: 45, scope: !4883)
!4883 = !DILexicalBlockFile(scope: !4801, file: !1665, discriminator: 2)
!4884 = !DILocation(line: 621, column: 9, scope: !4883)
!4885 = distinct !{!4885, !4886}
!4886 = !DILocation(line: 621, column: 9, scope: !4797)
!4887 = !DILocation(line: 649, column: 5, scope: !4797)
!4888 = !DILocation(line: 620, column: 31, scope: !4889)
!4889 = !DILexicalBlockFile(scope: !4791, file: !1665, discriminator: 2)
!4890 = !DILocation(line: 620, column: 5, scope: !4889)
!4891 = distinct !{!4891, !4892}
!4892 = !DILocation(line: 620, column: 5, scope: !4565)
!4893 = !DILocation(line: 652, column: 12, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4565, file: !1665, line: 652, column: 5)
!4895 = !DILocation(line: 652, column: 10, scope: !4894)
!4896 = !DILocation(line: 652, column: 17, scope: !4897)
!4897 = !DILexicalBlockFile(scope: !4898, file: !1665, discriminator: 1)
!4898 = distinct !DILexicalBlock(scope: !4894, file: !1665, line: 652, column: 5)
!4899 = !DILocation(line: 652, column: 19, scope: !4897)
!4900 = !DILocation(line: 652, column: 5, scope: !4897)
!4901 = !DILocation(line: 653, column: 16, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !1665, line: 653, column: 9)
!4903 = distinct !DILexicalBlock(scope: !4898, file: !1665, line: 652, column: 29)
!4904 = !DILocation(line: 653, column: 14, scope: !4902)
!4905 = !DILocation(line: 653, column: 21, scope: !4906)
!4906 = !DILexicalBlockFile(scope: !4907, file: !1665, discriminator: 1)
!4907 = distinct !DILexicalBlock(scope: !4902, file: !1665, line: 653, column: 9)
!4908 = !DILocation(line: 653, column: 23, scope: !4906)
!4909 = !DILocation(line: 653, column: 9, scope: !4906)
!4910 = !DILocation(line: 654, column: 15, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4907, file: !1665, line: 653, column: 37)
!4912 = !DILocation(line: 655, column: 20, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4911, file: !1665, line: 655, column: 13)
!4914 = !DILocation(line: 655, column: 18, scope: !4913)
!4915 = !DILocation(line: 655, column: 25, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !4917, file: !1665, discriminator: 1)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !1665, line: 655, column: 13)
!4918 = !DILocation(line: 655, column: 29, scope: !4916)
!4919 = !DILocation(line: 655, column: 27, scope: !4916)
!4920 = !DILocation(line: 655, column: 13, scope: !4916)
!4921 = !DILocation(line: 656, column: 46, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4917, file: !1665, line: 655, column: 41)
!4923 = !DILocation(line: 656, column: 34, scope: !4922)
!4924 = !DILocation(line: 656, column: 32, scope: !4922)
!4925 = !DILocation(line: 657, column: 25, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !1665, line: 657, column: 17)
!4927 = !DILocation(line: 657, column: 22, scope: !4926)
!4928 = !DILocation(line: 657, column: 30, scope: !4929)
!4929 = !DILexicalBlockFile(scope: !4930, file: !1665, discriminator: 1)
!4930 = distinct !DILexicalBlock(scope: !4926, file: !1665, line: 657, column: 17)
!4931 = !DILocation(line: 657, column: 35, scope: !4929)
!4932 = !DILocation(line: 657, column: 38, scope: !4929)
!4933 = !DILocation(line: 657, column: 33, scope: !4929)
!4934 = !DILocation(line: 657, column: 17, scope: !4929)
!4935 = !DILocation(line: 658, column: 39, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4930, file: !1665, line: 657, column: 57)
!4937 = !DILocation(line: 658, column: 25, scope: !4936)
!4938 = !DILocation(line: 658, column: 35, scope: !4936)
!4939 = !DILocation(line: 658, column: 23, scope: !4936)
!4940 = !DILocation(line: 659, column: 25, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4936, file: !1665, line: 659, column: 25)
!4942 = !DILocation(line: 659, column: 25, scope: !4936)
!4943 = !DILocation(line: 660, column: 54, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4941, file: !1665, line: 659, column: 28)
!4945 = !DILocation(line: 660, column: 33, scope: !4944)
!4946 = !DILocation(line: 660, column: 51, scope: !4944)
!4947 = !DILocation(line: 660, column: 47, scope: !4944)
!4948 = !DILocation(line: 660, column: 31, scope: !4944)
!4949 = !DILocation(line: 661, column: 46, scope: !4944)
!4950 = !DILocation(line: 661, column: 48, scope: !4944)
!4951 = !DILocation(line: 661, column: 47, scope: !4944)
!4952 = !DILocation(line: 661, column: 34, scope: !4944)
!4953 = !DILocation(line: 661, column: 32, scope: !4944)
!4954 = !DILocation(line: 662, column: 50, scope: !4944)
!4955 = !DILocation(line: 662, column: 32, scope: !4944)
!4956 = !DILocation(line: 662, column: 30, scope: !4944)
!4957 = !DILocation(line: 663, column: 29, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4944, file: !1665, line: 663, column: 29)
!4959 = !DILocation(line: 663, column: 34, scope: !4958)
!4960 = !DILocation(line: 663, column: 29, scope: !4944)
!4961 = !DILocalVariable(name: "v2", scope: !4962, file: !1665, line: 664, type: !891)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !1665, line: 663, column: 39)
!4963 = !DILocation(line: 664, column: 33, scope: !4962)
!4964 = !DILocation(line: 666, column: 43, scope: !4962)
!4965 = !DILocation(line: 666, column: 46, scope: !4962)
!4966 = !DILocation(line: 666, column: 51, scope: !4962)
!4967 = !DILocation(line: 666, column: 50, scope: !4962)
!4968 = !DILocation(line: 666, column: 33, scope: !4962)
!4969 = !DILocation(line: 666, column: 31, scope: !4962)
!4970 = !DILocation(line: 667, column: 56, scope: !4962)
!4971 = !DILocation(line: 667, column: 34, scope: !4962)
!4972 = !DILocation(line: 667, column: 48, scope: !4962)
!4973 = !DILocation(line: 667, column: 32, scope: !4962)
!4974 = !DILocation(line: 668, column: 56, scope: !4962)
!4975 = !DILocation(line: 668, column: 37, scope: !4962)
!4976 = !DILocation(line: 668, column: 35, scope: !4962)
!4977 = !DILocation(line: 671, column: 50, scope: !4962)
!4978 = !DILocation(line: 671, column: 57, scope: !4962)
!4979 = !DILocation(line: 671, column: 60, scope: !4962)
!4980 = !DILocation(line: 671, column: 66, scope: !4962)
!4981 = !DILocation(line: 671, column: 33, scope: !4962)
!4982 = !DILocation(line: 670, column: 63, scope: !4962)
!4983 = !DILocation(line: 670, column: 29, scope: !4962)
!4984 = !DILocation(line: 670, column: 47, scope: !4962)
!4985 = !DILocation(line: 670, column: 49, scope: !4962)
!4986 = !DILocation(line: 670, column: 56, scope: !4962)
!4987 = !DILocation(line: 670, column: 54, scope: !4962)
!4988 = !DILocation(line: 670, column: 58, scope: !4962)
!4989 = !DILocation(line: 670, column: 43, scope: !4962)
!4990 = !DILocation(line: 670, column: 32, scope: !4962)
!4991 = !DILocation(line: 670, column: 66, scope: !4962)
!4992 = !DILocation(line: 673, column: 50, scope: !4962)
!4993 = !DILocation(line: 673, column: 58, scope: !4962)
!4994 = !DILocation(line: 673, column: 61, scope: !4962)
!4995 = !DILocation(line: 673, column: 67, scope: !4962)
!4996 = !DILocation(line: 673, column: 73, scope: !4962)
!4997 = !DILocation(line: 673, column: 33, scope: !4962)
!4998 = !DILocation(line: 672, column: 63, scope: !4962)
!4999 = !DILocation(line: 672, column: 29, scope: !4962)
!5000 = !DILocation(line: 672, column: 47, scope: !4962)
!5001 = !DILocation(line: 672, column: 49, scope: !4962)
!5002 = !DILocation(line: 672, column: 56, scope: !4962)
!5003 = !DILocation(line: 672, column: 54, scope: !4962)
!5004 = !DILocation(line: 672, column: 58, scope: !4962)
!5005 = !DILocation(line: 672, column: 43, scope: !4962)
!5006 = !DILocation(line: 672, column: 32, scope: !4962)
!5007 = !DILocation(line: 672, column: 66, scope: !4962)
!5008 = !DILocation(line: 675, column: 50, scope: !4962)
!5009 = !DILocation(line: 675, column: 57, scope: !4962)
!5010 = !DILocation(line: 675, column: 60, scope: !4962)
!5011 = !DILocation(line: 675, column: 67, scope: !4962)
!5012 = !DILocation(line: 675, column: 33, scope: !4962)
!5013 = !DILocation(line: 674, column: 63, scope: !4962)
!5014 = !DILocation(line: 674, column: 29, scope: !4962)
!5015 = !DILocation(line: 674, column: 47, scope: !4962)
!5016 = !DILocation(line: 674, column: 49, scope: !4962)
!5017 = !DILocation(line: 674, column: 56, scope: !4962)
!5018 = !DILocation(line: 674, column: 54, scope: !4962)
!5019 = !DILocation(line: 674, column: 58, scope: !4962)
!5020 = !DILocation(line: 674, column: 43, scope: !4962)
!5021 = !DILocation(line: 674, column: 32, scope: !4962)
!5022 = !DILocation(line: 674, column: 66, scope: !4962)
!5023 = !DILocation(line: 676, column: 25, scope: !4962)
!5024 = !DILocation(line: 677, column: 36, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !1665, line: 677, column: 29)
!5026 = distinct !DILexicalBlock(scope: !4958, file: !1665, line: 676, column: 32)
!5027 = !DILocation(line: 677, column: 34, scope: !5025)
!5028 = !DILocation(line: 677, column: 41, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !5030, file: !1665, discriminator: 1)
!5030 = distinct !DILexicalBlock(scope: !5025, file: !1665, line: 677, column: 29)
!5031 = !DILocation(line: 677, column: 43, scope: !5029)
!5032 = !DILocation(line: 677, column: 29, scope: !5029)
!5033 = !DILocation(line: 678, column: 47, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !1665, line: 677, column: 53)
!5035 = !DILocation(line: 678, column: 50, scope: !5034)
!5036 = !DILocation(line: 678, column: 54, scope: !5034)
!5037 = !DILocation(line: 678, column: 37, scope: !5034)
!5038 = !DILocation(line: 678, column: 35, scope: !5034)
!5039 = !DILocation(line: 679, column: 48, scope: !5034)
!5040 = !DILocation(line: 679, column: 53, scope: !5034)
!5041 = !DILocation(line: 679, column: 58, scope: !5034)
!5042 = !DILocation(line: 679, column: 61, scope: !5034)
!5043 = !DILocation(line: 679, column: 37, scope: !5034)
!5044 = !DILocation(line: 679, column: 35, scope: !5034)
!5045 = !DILocation(line: 680, column: 72, scope: !5034)
!5046 = !DILocation(line: 680, column: 67, scope: !5034)
!5047 = !DILocation(line: 680, column: 33, scope: !5034)
!5048 = !DILocation(line: 680, column: 51, scope: !5034)
!5049 = !DILocation(line: 680, column: 53, scope: !5034)
!5050 = !DILocation(line: 680, column: 60, scope: !5034)
!5051 = !DILocation(line: 680, column: 58, scope: !5034)
!5052 = !DILocation(line: 680, column: 64, scope: !5034)
!5053 = !DILocation(line: 680, column: 62, scope: !5034)
!5054 = !DILocation(line: 680, column: 47, scope: !5034)
!5055 = !DILocation(line: 680, column: 36, scope: !5034)
!5056 = !DILocation(line: 680, column: 70, scope: !5034)
!5057 = !DILocation(line: 681, column: 29, scope: !5034)
!5058 = !DILocation(line: 677, column: 49, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5030, file: !1665, discriminator: 2)
!5060 = !DILocation(line: 677, column: 29, scope: !5059)
!5061 = distinct !{!5061, !5062}
!5062 = !DILocation(line: 677, column: 29, scope: !5026)
!5063 = !DILocation(line: 683, column: 21, scope: !4944)
!5064 = !DILocation(line: 684, column: 59, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !4941, file: !1665, line: 683, column: 28)
!5066 = !DILocation(line: 684, column: 25, scope: !5065)
!5067 = !DILocation(line: 684, column: 43, scope: !5065)
!5068 = !DILocation(line: 684, column: 45, scope: !5065)
!5069 = !DILocation(line: 684, column: 52, scope: !5065)
!5070 = !DILocation(line: 684, column: 50, scope: !5065)
!5071 = !DILocation(line: 684, column: 54, scope: !5065)
!5072 = !DILocation(line: 684, column: 39, scope: !5065)
!5073 = !DILocation(line: 684, column: 28, scope: !5065)
!5074 = !DILocation(line: 684, column: 62, scope: !5065)
!5075 = !DILocation(line: 685, column: 59, scope: !5065)
!5076 = !DILocation(line: 685, column: 25, scope: !5065)
!5077 = !DILocation(line: 685, column: 43, scope: !5065)
!5078 = !DILocation(line: 685, column: 45, scope: !5065)
!5079 = !DILocation(line: 685, column: 52, scope: !5065)
!5080 = !DILocation(line: 685, column: 50, scope: !5065)
!5081 = !DILocation(line: 685, column: 54, scope: !5065)
!5082 = !DILocation(line: 685, column: 39, scope: !5065)
!5083 = !DILocation(line: 685, column: 28, scope: !5065)
!5084 = !DILocation(line: 685, column: 62, scope: !5065)
!5085 = !DILocation(line: 686, column: 59, scope: !5065)
!5086 = !DILocation(line: 686, column: 25, scope: !5065)
!5087 = !DILocation(line: 686, column: 43, scope: !5065)
!5088 = !DILocation(line: 686, column: 45, scope: !5065)
!5089 = !DILocation(line: 686, column: 52, scope: !5065)
!5090 = !DILocation(line: 686, column: 50, scope: !5065)
!5091 = !DILocation(line: 686, column: 54, scope: !5065)
!5092 = !DILocation(line: 686, column: 39, scope: !5065)
!5093 = !DILocation(line: 686, column: 28, scope: !5065)
!5094 = !DILocation(line: 686, column: 62, scope: !5065)
!5095 = !DILocation(line: 688, column: 17, scope: !4936)
!5096 = !DILocation(line: 657, column: 53, scope: !5097)
!5097 = !DILexicalBlockFile(scope: !4930, file: !1665, discriminator: 2)
!5098 = !DILocation(line: 657, column: 17, scope: !5097)
!5099 = distinct !{!5099, !5100}
!5100 = !DILocation(line: 657, column: 17, scope: !4922)
!5101 = !DILocation(line: 690, column: 27, scope: !4922)
!5102 = !DILocation(line: 690, column: 24, scope: !4922)
!5103 = !DILocation(line: 690, column: 19, scope: !4922)
!5104 = !DILocation(line: 691, column: 13, scope: !4922)
!5105 = !DILocation(line: 655, column: 37, scope: !5106)
!5106 = !DILexicalBlockFile(scope: !4917, file: !1665, discriminator: 2)
!5107 = !DILocation(line: 655, column: 13, scope: !5106)
!5108 = distinct !{!5108, !5109}
!5109 = !DILocation(line: 655, column: 13, scope: !4911)
!5110 = !DILocation(line: 693, column: 22, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !4911, file: !1665, line: 693, column: 13)
!5112 = !DILocation(line: 693, column: 20, scope: !5111)
!5113 = !DILocation(line: 693, column: 18, scope: !5111)
!5114 = !DILocation(line: 693, column: 29, scope: !5115)
!5115 = !DILexicalBlockFile(scope: !5116, file: !1665, discriminator: 1)
!5116 = distinct !DILexicalBlock(scope: !5111, file: !1665, line: 693, column: 13)
!5117 = !DILocation(line: 693, column: 33, scope: !5115)
!5118 = !DILocation(line: 693, column: 31, scope: !5115)
!5119 = !DILocation(line: 693, column: 13, scope: !5115)
!5120 = !DILocation(line: 694, column: 46, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5116, file: !1665, line: 693, column: 47)
!5122 = !DILocation(line: 694, column: 34, scope: !5121)
!5123 = !DILocation(line: 694, column: 32, scope: !5121)
!5124 = !DILocation(line: 695, column: 34, scope: !5121)
!5125 = !DILocation(line: 695, column: 21, scope: !5121)
!5126 = !DILocation(line: 695, column: 19, scope: !5121)
!5127 = !DILocation(line: 696, column: 21, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5121, file: !1665, line: 696, column: 21)
!5129 = !DILocation(line: 696, column: 21, scope: !5121)
!5130 = !DILocalVariable(name: "mant", scope: !5131, file: !1665, line: 697, type: !891)
!5131 = distinct !DILexicalBlock(scope: !5128, file: !1665, line: 696, column: 24)
!5132 = !DILocation(line: 697, column: 25, scope: !5131)
!5133 = !DILocalVariable(name: "scale0", scope: !5131, file: !1665, line: 697, type: !891)
!5134 = !DILocation(line: 697, column: 31, scope: !5131)
!5135 = !DILocalVariable(name: "scale1", scope: !5131, file: !1665, line: 697, type: !891)
!5136 = !DILocation(line: 697, column: 39, scope: !5131)
!5137 = !DILocation(line: 698, column: 50, scope: !5131)
!5138 = !DILocation(line: 698, column: 30, scope: !5131)
!5139 = !DILocation(line: 698, column: 47, scope: !5131)
!5140 = !DILocation(line: 698, column: 28, scope: !5131)
!5141 = !DILocation(line: 699, column: 50, scope: !5131)
!5142 = !DILocation(line: 699, column: 30, scope: !5131)
!5143 = !DILocation(line: 699, column: 47, scope: !5131)
!5144 = !DILocation(line: 699, column: 28, scope: !5131)
!5145 = !DILocation(line: 700, column: 42, scope: !5131)
!5146 = !DILocation(line: 700, column: 44, scope: !5131)
!5147 = !DILocation(line: 700, column: 43, scope: !5131)
!5148 = !DILocation(line: 700, column: 30, scope: !5131)
!5149 = !DILocation(line: 700, column: 28, scope: !5131)
!5150 = !DILocation(line: 701, column: 46, scope: !5131)
!5151 = !DILocation(line: 701, column: 28, scope: !5131)
!5152 = !DILocation(line: 701, column: 26, scope: !5131)
!5153 = !DILocation(line: 702, column: 25, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5131, file: !1665, line: 702, column: 25)
!5155 = !DILocation(line: 702, column: 30, scope: !5154)
!5156 = !DILocation(line: 702, column: 25, scope: !5131)
!5157 = !DILocation(line: 704, column: 39, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !1665, line: 702, column: 35)
!5159 = !DILocation(line: 704, column: 42, scope: !5158)
!5160 = !DILocation(line: 704, column: 47, scope: !5158)
!5161 = !DILocation(line: 704, column: 46, scope: !5158)
!5162 = !DILocation(line: 704, column: 29, scope: !5158)
!5163 = !DILocation(line: 704, column: 27, scope: !5158)
!5164 = !DILocation(line: 705, column: 52, scope: !5158)
!5165 = !DILocation(line: 705, column: 33, scope: !5158)
!5166 = !DILocation(line: 705, column: 31, scope: !5158)
!5167 = !DILocation(line: 706, column: 32, scope: !5158)
!5168 = !DILocation(line: 706, column: 36, scope: !5158)
!5169 = !DILocation(line: 706, column: 34, scope: !5158)
!5170 = !DILocation(line: 706, column: 30, scope: !5158)
!5171 = !DILocation(line: 707, column: 29, scope: !5158)
!5172 = !DILocation(line: 707, column: 33, scope: !5158)
!5173 = !DILocation(line: 707, column: 31, scope: !5158)
!5174 = !DILocation(line: 707, column: 27, scope: !5158)
!5175 = !DILocation(line: 709, column: 46, scope: !5158)
!5176 = !DILocation(line: 709, column: 53, scope: !5158)
!5177 = !DILocation(line: 709, column: 59, scope: !5158)
!5178 = !DILocation(line: 709, column: 29, scope: !5158)
!5179 = !DILocation(line: 708, column: 58, scope: !5158)
!5180 = !DILocation(line: 708, column: 25, scope: !5158)
!5181 = !DILocation(line: 708, column: 42, scope: !5158)
!5182 = !DILocation(line: 708, column: 44, scope: !5158)
!5183 = !DILocation(line: 708, column: 51, scope: !5158)
!5184 = !DILocation(line: 708, column: 49, scope: !5158)
!5185 = !DILocation(line: 708, column: 53, scope: !5158)
!5186 = !DILocation(line: 708, column: 28, scope: !5158)
!5187 = !DILocation(line: 708, column: 61, scope: !5158)
!5188 = !DILocation(line: 711, column: 46, scope: !5158)
!5189 = !DILocation(line: 711, column: 53, scope: !5158)
!5190 = !DILocation(line: 711, column: 59, scope: !5158)
!5191 = !DILocation(line: 711, column: 29, scope: !5158)
!5192 = !DILocation(line: 710, column: 58, scope: !5158)
!5193 = !DILocation(line: 710, column: 25, scope: !5158)
!5194 = !DILocation(line: 710, column: 42, scope: !5158)
!5195 = !DILocation(line: 710, column: 44, scope: !5158)
!5196 = !DILocation(line: 710, column: 51, scope: !5158)
!5197 = !DILocation(line: 710, column: 49, scope: !5158)
!5198 = !DILocation(line: 710, column: 53, scope: !5158)
!5199 = !DILocation(line: 710, column: 28, scope: !5158)
!5200 = !DILocation(line: 710, column: 61, scope: !5158)
!5201 = !DILocation(line: 712, column: 32, scope: !5158)
!5202 = !DILocation(line: 712, column: 36, scope: !5158)
!5203 = !DILocation(line: 712, column: 34, scope: !5158)
!5204 = !DILocation(line: 712, column: 30, scope: !5158)
!5205 = !DILocation(line: 713, column: 29, scope: !5158)
!5206 = !DILocation(line: 713, column: 33, scope: !5158)
!5207 = !DILocation(line: 713, column: 31, scope: !5158)
!5208 = !DILocation(line: 713, column: 27, scope: !5158)
!5209 = !DILocation(line: 715, column: 46, scope: !5158)
!5210 = !DILocation(line: 715, column: 53, scope: !5158)
!5211 = !DILocation(line: 715, column: 59, scope: !5158)
!5212 = !DILocation(line: 715, column: 29, scope: !5158)
!5213 = !DILocation(line: 714, column: 58, scope: !5158)
!5214 = !DILocation(line: 714, column: 25, scope: !5158)
!5215 = !DILocation(line: 714, column: 42, scope: !5158)
!5216 = !DILocation(line: 714, column: 44, scope: !5158)
!5217 = !DILocation(line: 714, column: 51, scope: !5158)
!5218 = !DILocation(line: 714, column: 49, scope: !5158)
!5219 = !DILocation(line: 714, column: 53, scope: !5158)
!5220 = !DILocation(line: 714, column: 28, scope: !5158)
!5221 = !DILocation(line: 714, column: 61, scope: !5158)
!5222 = !DILocation(line: 717, column: 46, scope: !5158)
!5223 = !DILocation(line: 717, column: 53, scope: !5158)
!5224 = !DILocation(line: 717, column: 59, scope: !5158)
!5225 = !DILocation(line: 717, column: 29, scope: !5158)
!5226 = !DILocation(line: 716, column: 58, scope: !5158)
!5227 = !DILocation(line: 716, column: 25, scope: !5158)
!5228 = !DILocation(line: 716, column: 42, scope: !5158)
!5229 = !DILocation(line: 716, column: 44, scope: !5158)
!5230 = !DILocation(line: 716, column: 51, scope: !5158)
!5231 = !DILocation(line: 716, column: 49, scope: !5158)
!5232 = !DILocation(line: 716, column: 53, scope: !5158)
!5233 = !DILocation(line: 716, column: 28, scope: !5158)
!5234 = !DILocation(line: 716, column: 61, scope: !5158)
!5235 = !DILocation(line: 719, column: 46, scope: !5158)
!5236 = !DILocation(line: 719, column: 53, scope: !5158)
!5237 = !DILocation(line: 719, column: 56, scope: !5158)
!5238 = !DILocation(line: 719, column: 29, scope: !5158)
!5239 = !DILocation(line: 718, column: 58, scope: !5158)
!5240 = !DILocation(line: 718, column: 25, scope: !5158)
!5241 = !DILocation(line: 718, column: 42, scope: !5158)
!5242 = !DILocation(line: 718, column: 44, scope: !5158)
!5243 = !DILocation(line: 718, column: 51, scope: !5158)
!5244 = !DILocation(line: 718, column: 49, scope: !5158)
!5245 = !DILocation(line: 718, column: 53, scope: !5158)
!5246 = !DILocation(line: 718, column: 28, scope: !5158)
!5247 = !DILocation(line: 718, column: 61, scope: !5158)
!5248 = !DILocation(line: 721, column: 46, scope: !5158)
!5249 = !DILocation(line: 721, column: 53, scope: !5158)
!5250 = !DILocation(line: 721, column: 56, scope: !5158)
!5251 = !DILocation(line: 721, column: 29, scope: !5158)
!5252 = !DILocation(line: 720, column: 58, scope: !5158)
!5253 = !DILocation(line: 720, column: 25, scope: !5158)
!5254 = !DILocation(line: 720, column: 42, scope: !5158)
!5255 = !DILocation(line: 720, column: 44, scope: !5158)
!5256 = !DILocation(line: 720, column: 51, scope: !5158)
!5257 = !DILocation(line: 720, column: 49, scope: !5158)
!5258 = !DILocation(line: 720, column: 53, scope: !5158)
!5259 = !DILocation(line: 720, column: 28, scope: !5158)
!5260 = !DILocation(line: 720, column: 61, scope: !5158)
!5261 = !DILocation(line: 722, column: 21, scope: !5158)
!5262 = !DILocation(line: 723, column: 32, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !1665, line: 723, column: 25)
!5264 = distinct !DILexicalBlock(scope: !5154, file: !1665, line: 722, column: 28)
!5265 = !DILocation(line: 723, column: 30, scope: !5263)
!5266 = !DILocation(line: 723, column: 37, scope: !5267)
!5267 = !DILexicalBlockFile(scope: !5268, file: !1665, discriminator: 1)
!5268 = distinct !DILexicalBlock(scope: !5263, file: !1665, line: 723, column: 25)
!5269 = !DILocation(line: 723, column: 39, scope: !5267)
!5270 = !DILocation(line: 723, column: 25, scope: !5267)
!5271 = !DILocation(line: 724, column: 46, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5268, file: !1665, line: 723, column: 49)
!5273 = !DILocation(line: 724, column: 49, scope: !5272)
!5274 = !DILocation(line: 724, column: 53, scope: !5272)
!5275 = !DILocation(line: 724, column: 36, scope: !5272)
!5276 = !DILocation(line: 724, column: 34, scope: !5272)
!5277 = !DILocation(line: 726, column: 44, scope: !5272)
!5278 = !DILocation(line: 726, column: 49, scope: !5272)
!5279 = !DILocation(line: 726, column: 54, scope: !5272)
!5280 = !DILocation(line: 726, column: 60, scope: !5272)
!5281 = !DILocation(line: 726, column: 33, scope: !5272)
!5282 = !DILocation(line: 725, column: 62, scope: !5272)
!5283 = !DILocation(line: 725, column: 29, scope: !5272)
!5284 = !DILocation(line: 725, column: 46, scope: !5272)
!5285 = !DILocation(line: 725, column: 48, scope: !5272)
!5286 = !DILocation(line: 725, column: 55, scope: !5272)
!5287 = !DILocation(line: 725, column: 53, scope: !5272)
!5288 = !DILocation(line: 725, column: 59, scope: !5272)
!5289 = !DILocation(line: 725, column: 57, scope: !5272)
!5290 = !DILocation(line: 725, column: 32, scope: !5272)
!5291 = !DILocation(line: 725, column: 65, scope: !5272)
!5292 = !DILocation(line: 728, column: 44, scope: !5272)
!5293 = !DILocation(line: 728, column: 49, scope: !5272)
!5294 = !DILocation(line: 728, column: 54, scope: !5272)
!5295 = !DILocation(line: 728, column: 60, scope: !5272)
!5296 = !DILocation(line: 728, column: 33, scope: !5272)
!5297 = !DILocation(line: 727, column: 62, scope: !5272)
!5298 = !DILocation(line: 727, column: 29, scope: !5272)
!5299 = !DILocation(line: 727, column: 46, scope: !5272)
!5300 = !DILocation(line: 727, column: 48, scope: !5272)
!5301 = !DILocation(line: 727, column: 55, scope: !5272)
!5302 = !DILocation(line: 727, column: 53, scope: !5272)
!5303 = !DILocation(line: 727, column: 59, scope: !5272)
!5304 = !DILocation(line: 727, column: 57, scope: !5272)
!5305 = !DILocation(line: 727, column: 32, scope: !5272)
!5306 = !DILocation(line: 727, column: 65, scope: !5272)
!5307 = !DILocation(line: 729, column: 25, scope: !5272)
!5308 = !DILocation(line: 723, column: 45, scope: !5309)
!5309 = !DILexicalBlockFile(scope: !5268, file: !1665, discriminator: 2)
!5310 = !DILocation(line: 723, column: 25, scope: !5309)
!5311 = distinct !{!5311, !5312}
!5312 = !DILocation(line: 723, column: 25, scope: !5264)
!5313 = !DILocation(line: 731, column: 17, scope: !5131)
!5314 = !DILocation(line: 732, column: 54, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5128, file: !1665, line: 731, column: 24)
!5316 = !DILocation(line: 732, column: 21, scope: !5315)
!5317 = !DILocation(line: 732, column: 38, scope: !5315)
!5318 = !DILocation(line: 732, column: 40, scope: !5315)
!5319 = !DILocation(line: 732, column: 47, scope: !5315)
!5320 = !DILocation(line: 732, column: 45, scope: !5315)
!5321 = !DILocation(line: 732, column: 49, scope: !5315)
!5322 = !DILocation(line: 732, column: 24, scope: !5315)
!5323 = !DILocation(line: 732, column: 57, scope: !5315)
!5324 = !DILocation(line: 733, column: 54, scope: !5315)
!5325 = !DILocation(line: 733, column: 21, scope: !5315)
!5326 = !DILocation(line: 733, column: 38, scope: !5315)
!5327 = !DILocation(line: 733, column: 40, scope: !5315)
!5328 = !DILocation(line: 733, column: 47, scope: !5315)
!5329 = !DILocation(line: 733, column: 45, scope: !5315)
!5330 = !DILocation(line: 733, column: 49, scope: !5315)
!5331 = !DILocation(line: 733, column: 24, scope: !5315)
!5332 = !DILocation(line: 733, column: 57, scope: !5315)
!5333 = !DILocation(line: 734, column: 54, scope: !5315)
!5334 = !DILocation(line: 734, column: 21, scope: !5315)
!5335 = !DILocation(line: 734, column: 38, scope: !5315)
!5336 = !DILocation(line: 734, column: 40, scope: !5315)
!5337 = !DILocation(line: 734, column: 47, scope: !5315)
!5338 = !DILocation(line: 734, column: 45, scope: !5315)
!5339 = !DILocation(line: 734, column: 49, scope: !5315)
!5340 = !DILocation(line: 734, column: 24, scope: !5315)
!5341 = !DILocation(line: 734, column: 57, scope: !5315)
!5342 = !DILocation(line: 735, column: 54, scope: !5315)
!5343 = !DILocation(line: 735, column: 21, scope: !5315)
!5344 = !DILocation(line: 735, column: 38, scope: !5315)
!5345 = !DILocation(line: 735, column: 40, scope: !5315)
!5346 = !DILocation(line: 735, column: 47, scope: !5315)
!5347 = !DILocation(line: 735, column: 45, scope: !5315)
!5348 = !DILocation(line: 735, column: 49, scope: !5315)
!5349 = !DILocation(line: 735, column: 24, scope: !5315)
!5350 = !DILocation(line: 735, column: 57, scope: !5315)
!5351 = !DILocation(line: 736, column: 54, scope: !5315)
!5352 = !DILocation(line: 736, column: 21, scope: !5315)
!5353 = !DILocation(line: 736, column: 38, scope: !5315)
!5354 = !DILocation(line: 736, column: 40, scope: !5315)
!5355 = !DILocation(line: 736, column: 47, scope: !5315)
!5356 = !DILocation(line: 736, column: 45, scope: !5315)
!5357 = !DILocation(line: 736, column: 49, scope: !5315)
!5358 = !DILocation(line: 736, column: 24, scope: !5315)
!5359 = !DILocation(line: 736, column: 57, scope: !5315)
!5360 = !DILocation(line: 737, column: 54, scope: !5315)
!5361 = !DILocation(line: 737, column: 21, scope: !5315)
!5362 = !DILocation(line: 737, column: 38, scope: !5315)
!5363 = !DILocation(line: 737, column: 40, scope: !5315)
!5364 = !DILocation(line: 737, column: 47, scope: !5315)
!5365 = !DILocation(line: 737, column: 45, scope: !5315)
!5366 = !DILocation(line: 737, column: 49, scope: !5315)
!5367 = !DILocation(line: 737, column: 24, scope: !5315)
!5368 = !DILocation(line: 737, column: 57, scope: !5315)
!5369 = !DILocation(line: 740, column: 27, scope: !5121)
!5370 = !DILocation(line: 740, column: 24, scope: !5121)
!5371 = !DILocation(line: 740, column: 19, scope: !5121)
!5372 = !DILocation(line: 741, column: 13, scope: !5121)
!5373 = !DILocation(line: 693, column: 43, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5116, file: !1665, discriminator: 2)
!5375 = !DILocation(line: 693, column: 13, scope: !5374)
!5376 = distinct !{!5376, !5377}
!5377 = !DILocation(line: 693, column: 13, scope: !4911)
!5378 = !DILocation(line: 743, column: 22, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !4911, file: !1665, line: 743, column: 13)
!5380 = !DILocation(line: 743, column: 20, scope: !5379)
!5381 = !DILocation(line: 743, column: 18, scope: !5379)
!5382 = !DILocation(line: 743, column: 31, scope: !5383)
!5383 = !DILexicalBlockFile(scope: !5384, file: !1665, discriminator: 1)
!5384 = distinct !DILexicalBlock(scope: !5379, file: !1665, line: 743, column: 13)
!5385 = !DILocation(line: 743, column: 33, scope: !5383)
!5386 = !DILocation(line: 743, column: 13, scope: !5383)
!5387 = !DILocation(line: 744, column: 25, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !1665, line: 744, column: 17)
!5389 = distinct !DILexicalBlock(scope: !5384, file: !1665, line: 743, column: 44)
!5390 = !DILocation(line: 744, column: 22, scope: !5388)
!5391 = !DILocation(line: 744, column: 30, scope: !5392)
!5392 = !DILexicalBlockFile(scope: !5393, file: !1665, discriminator: 1)
!5393 = distinct !DILexicalBlock(scope: !5388, file: !1665, line: 744, column: 17)
!5394 = !DILocation(line: 744, column: 35, scope: !5392)
!5395 = !DILocation(line: 744, column: 38, scope: !5392)
!5396 = !DILocation(line: 744, column: 33, scope: !5392)
!5397 = !DILocation(line: 744, column: 17, scope: !5392)
!5398 = !DILocation(line: 745, column: 55, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5393, file: !1665, line: 744, column: 57)
!5400 = !DILocation(line: 745, column: 21, scope: !5399)
!5401 = !DILocation(line: 745, column: 39, scope: !5399)
!5402 = !DILocation(line: 745, column: 41, scope: !5399)
!5403 = !DILocation(line: 745, column: 48, scope: !5399)
!5404 = !DILocation(line: 745, column: 46, scope: !5399)
!5405 = !DILocation(line: 745, column: 50, scope: !5399)
!5406 = !DILocation(line: 745, column: 35, scope: !5399)
!5407 = !DILocation(line: 745, column: 24, scope: !5399)
!5408 = !DILocation(line: 745, column: 58, scope: !5399)
!5409 = !DILocation(line: 746, column: 55, scope: !5399)
!5410 = !DILocation(line: 746, column: 21, scope: !5399)
!5411 = !DILocation(line: 746, column: 39, scope: !5399)
!5412 = !DILocation(line: 746, column: 41, scope: !5399)
!5413 = !DILocation(line: 746, column: 48, scope: !5399)
!5414 = !DILocation(line: 746, column: 46, scope: !5399)
!5415 = !DILocation(line: 746, column: 50, scope: !5399)
!5416 = !DILocation(line: 746, column: 35, scope: !5399)
!5417 = !DILocation(line: 746, column: 24, scope: !5399)
!5418 = !DILocation(line: 746, column: 58, scope: !5399)
!5419 = !DILocation(line: 747, column: 55, scope: !5399)
!5420 = !DILocation(line: 747, column: 21, scope: !5399)
!5421 = !DILocation(line: 747, column: 39, scope: !5399)
!5422 = !DILocation(line: 747, column: 41, scope: !5399)
!5423 = !DILocation(line: 747, column: 48, scope: !5399)
!5424 = !DILocation(line: 747, column: 46, scope: !5399)
!5425 = !DILocation(line: 747, column: 50, scope: !5399)
!5426 = !DILocation(line: 747, column: 35, scope: !5399)
!5427 = !DILocation(line: 747, column: 24, scope: !5399)
!5428 = !DILocation(line: 747, column: 58, scope: !5399)
!5429 = !DILocation(line: 748, column: 17, scope: !5399)
!5430 = !DILocation(line: 744, column: 53, scope: !5431)
!5431 = !DILexicalBlockFile(scope: !5393, file: !1665, discriminator: 2)
!5432 = !DILocation(line: 744, column: 17, scope: !5431)
!5433 = distinct !{!5433, !5434}
!5434 = !DILocation(line: 744, column: 17, scope: !5389)
!5435 = !DILocation(line: 749, column: 13, scope: !5389)
!5436 = !DILocation(line: 743, column: 40, scope: !5437)
!5437 = !DILexicalBlockFile(scope: !5384, file: !1665, discriminator: 2)
!5438 = !DILocation(line: 743, column: 13, scope: !5437)
!5439 = distinct !{!5439, !5440}
!5440 = !DILocation(line: 743, column: 13, scope: !4911)
!5441 = !DILocation(line: 750, column: 9, scope: !4911)
!5442 = !DILocation(line: 653, column: 31, scope: !5443)
!5443 = !DILexicalBlockFile(scope: !4907, file: !1665, discriminator: 2)
!5444 = !DILocation(line: 653, column: 9, scope: !5443)
!5445 = distinct !{!5445, !5446}
!5446 = !DILocation(line: 653, column: 9, scope: !4903)
!5447 = !DILocation(line: 751, column: 5, scope: !4903)
!5448 = !DILocation(line: 652, column: 25, scope: !5449)
!5449 = !DILexicalBlockFile(scope: !4898, file: !1665, discriminator: 2)
!5450 = !DILocation(line: 652, column: 5, scope: !5449)
!5451 = distinct !{!5451, !5452}
!5452 = !DILocation(line: 652, column: 5, scope: !4565)
!5453 = !DILocation(line: 752, column: 5, scope: !4565)
!5454 = distinct !DISubprogram(name: "mp_decode_layer3", scope: !1665, file: !1665, line: 1306, type: !4245, isLocal: true, isDefinition: true, scopeLine: 1307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!5455 = !DILocalVariable(name: "slen", arg: 1, scope: !5456, file: !1665, line: 775, type: !1321)
!5456 = distinct !DISubprogram(name: "lsf_sf_expand", scope: !1665, file: !1665, line: 775, type: !5457, isLocal: true, isDefinition: true, scopeLine: 777, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{null, !1321, !891, !891, !891, !891}
!5459 = !DILocation(line: 775, column: 70, scope: !5456, inlinedAt: !5460)
!5460 = distinct !DILocation(line: 1515, column: 25, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !1665, line: 1514, column: 28)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !1665, line: 1511, column: 32)
!5463 = distinct !DILexicalBlock(scope: !5464, file: !1665, line: 1508, column: 25)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !1665, line: 1506, column: 24)
!5465 = distinct !DILexicalBlock(scope: !5466, file: !1665, line: 1493, column: 21)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !1665, line: 1483, column: 20)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !1665, line: 1432, column: 17)
!5468 = distinct !DILexicalBlock(scope: !5469, file: !1665, line: 1428, column: 49)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !1665, line: 1428, column: 9)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !1665, line: 1428, column: 9)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !1665, line: 1427, column: 36)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !1665, line: 1427, column: 5)
!5473 = distinct !DILexicalBlock(scope: !5454, file: !1665, line: 1427, column: 5)
!5474 = !DILocalVariable(name: "sf", arg: 2, scope: !5456, file: !1665, line: 775, type: !891)
!5475 = !DILocation(line: 775, column: 80, scope: !5456, inlinedAt: !5460)
!5476 = !DILocalVariable(name: "n1", arg: 3, scope: !5456, file: !1665, line: 775, type: !891)
!5477 = !DILocation(line: 775, column: 88, scope: !5456, inlinedAt: !5460)
!5478 = !DILocalVariable(name: "n2", arg: 4, scope: !5456, file: !1665, line: 775, type: !891)
!5479 = !DILocation(line: 775, column: 96, scope: !5456, inlinedAt: !5460)
!5480 = !DILocalVariable(name: "n3", arg: 5, scope: !5456, file: !1665, line: 776, type: !891)
!5481 = !DILocation(line: 776, column: 48, scope: !5456, inlinedAt: !5460)
!5482 = !DILocalVariable(name: "m", scope: !5483, file: !1665, line: 778, type: !891)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !1665, line: 778, column: 18)
!5484 = distinct !DILexicalBlock(scope: !5456, file: !1665, line: 778, column: 9)
!5485 = !DILocation(line: 778, column: 24, scope: !5483, inlinedAt: !5460)
!5486 = !DILocalVariable(name: "m", scope: !5487, file: !1665, line: 778, type: !891)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !1665, line: 778, column: 145)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !1665, line: 778, column: 136)
!5489 = distinct !DILexicalBlock(scope: !5484, file: !1665, line: 778, column: 86)
!5490 = !DILocation(line: 778, column: 151, scope: !5487, inlinedAt: !5460)
!5491 = !DILocalVariable(name: "m", scope: !5492, file: !1665, line: 778, type: !891)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !1665, line: 778, column: 223)
!5493 = distinct !DILexicalBlock(scope: !5488, file: !1665, line: 778, column: 214)
!5494 = !DILocation(line: 778, column: 229, scope: !5492, inlinedAt: !5460)
!5495 = !DILocalVariable(name: "m", scope: !5496, file: !1665, line: 779, type: !891)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !1665, line: 779, column: 18)
!5497 = distinct !DILexicalBlock(scope: !5456, file: !1665, line: 779, column: 9)
!5498 = !DILocation(line: 779, column: 24, scope: !5496, inlinedAt: !5460)
!5499 = !DILocalVariable(name: "m", scope: !5500, file: !1665, line: 779, type: !891)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !1665, line: 779, column: 145)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !1665, line: 779, column: 136)
!5502 = distinct !DILexicalBlock(scope: !5497, file: !1665, line: 779, column: 86)
!5503 = !DILocation(line: 779, column: 151, scope: !5500, inlinedAt: !5460)
!5504 = !DILocalVariable(name: "m", scope: !5505, file: !1665, line: 779, type: !891)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !1665, line: 779, column: 223)
!5506 = distinct !DILexicalBlock(scope: !5501, file: !1665, line: 779, column: 214)
!5507 = !DILocation(line: 779, column: 229, scope: !5505, inlinedAt: !5460)
!5508 = !DILocalVariable(name: "m", scope: !5509, file: !1665, line: 780, type: !891)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !1665, line: 780, column: 18)
!5510 = distinct !DILexicalBlock(scope: !5456, file: !1665, line: 780, column: 9)
!5511 = !DILocation(line: 780, column: 24, scope: !5509, inlinedAt: !5460)
!5512 = !DILocalVariable(name: "m", scope: !5513, file: !1665, line: 780, type: !891)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !1665, line: 780, column: 145)
!5514 = distinct !DILexicalBlock(scope: !5515, file: !1665, line: 780, column: 136)
!5515 = distinct !DILexicalBlock(scope: !5510, file: !1665, line: 780, column: 86)
!5516 = !DILocation(line: 780, column: 151, scope: !5513, inlinedAt: !5460)
!5517 = !DILocalVariable(name: "m", scope: !5518, file: !1665, line: 780, type: !891)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !1665, line: 780, column: 223)
!5519 = distinct !DILexicalBlock(scope: !5514, file: !1665, line: 780, column: 214)
!5520 = !DILocation(line: 780, column: 229, scope: !5518, inlinedAt: !5460)
!5521 = !DILocation(line: 775, column: 70, scope: !5456, inlinedAt: !5522)
!5522 = distinct !DILocation(line: 1512, column: 25, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5462, file: !1665, line: 1511, column: 42)
!5524 = !DILocation(line: 775, column: 80, scope: !5456, inlinedAt: !5522)
!5525 = !DILocation(line: 775, column: 88, scope: !5456, inlinedAt: !5522)
!5526 = !DILocation(line: 775, column: 96, scope: !5456, inlinedAt: !5522)
!5527 = !DILocation(line: 776, column: 48, scope: !5456, inlinedAt: !5522)
!5528 = !DILocation(line: 778, column: 24, scope: !5483, inlinedAt: !5522)
!5529 = !DILocation(line: 778, column: 151, scope: !5487, inlinedAt: !5522)
!5530 = !DILocation(line: 778, column: 229, scope: !5492, inlinedAt: !5522)
!5531 = !DILocation(line: 779, column: 24, scope: !5496, inlinedAt: !5522)
!5532 = !DILocation(line: 779, column: 151, scope: !5500, inlinedAt: !5522)
!5533 = !DILocation(line: 779, column: 229, scope: !5505, inlinedAt: !5522)
!5534 = !DILocation(line: 780, column: 24, scope: !5509, inlinedAt: !5522)
!5535 = !DILocation(line: 780, column: 151, scope: !5513, inlinedAt: !5522)
!5536 = !DILocation(line: 780, column: 229, scope: !5518, inlinedAt: !5522)
!5537 = !DILocation(line: 775, column: 70, scope: !5456, inlinedAt: !5538)
!5538 = distinct !DILocation(line: 1509, column: 25, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5463, file: !1665, line: 1508, column: 35)
!5540 = !DILocation(line: 775, column: 80, scope: !5456, inlinedAt: !5538)
!5541 = !DILocation(line: 775, column: 88, scope: !5456, inlinedAt: !5538)
!5542 = !DILocation(line: 775, column: 96, scope: !5456, inlinedAt: !5538)
!5543 = !DILocation(line: 776, column: 48, scope: !5456, inlinedAt: !5538)
!5544 = !DILocation(line: 778, column: 24, scope: !5483, inlinedAt: !5538)
!5545 = !DILocation(line: 778, column: 151, scope: !5487, inlinedAt: !5538)
!5546 = !DILocation(line: 778, column: 229, scope: !5492, inlinedAt: !5538)
!5547 = !DILocation(line: 779, column: 24, scope: !5496, inlinedAt: !5538)
!5548 = !DILocation(line: 779, column: 151, scope: !5500, inlinedAt: !5538)
!5549 = !DILocation(line: 779, column: 229, scope: !5505, inlinedAt: !5538)
!5550 = !DILocation(line: 780, column: 24, scope: !5509, inlinedAt: !5538)
!5551 = !DILocation(line: 780, column: 151, scope: !5513, inlinedAt: !5538)
!5552 = !DILocation(line: 780, column: 229, scope: !5518, inlinedAt: !5538)
!5553 = !DILocation(line: 775, column: 70, scope: !5456, inlinedAt: !5554)
!5554 = distinct !DILocation(line: 1503, column: 25, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !1665, line: 1502, column: 28)
!5556 = distinct !DILexicalBlock(scope: !5557, file: !1665, line: 1499, column: 32)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !1665, line: 1496, column: 25)
!5558 = distinct !DILexicalBlock(scope: !5465, file: !1665, line: 1493, column: 51)
!5559 = !DILocation(line: 775, column: 80, scope: !5456, inlinedAt: !5554)
!5560 = !DILocation(line: 775, column: 88, scope: !5456, inlinedAt: !5554)
!5561 = !DILocation(line: 775, column: 96, scope: !5456, inlinedAt: !5554)
!5562 = !DILocation(line: 776, column: 48, scope: !5456, inlinedAt: !5554)
!5563 = !DILocation(line: 778, column: 24, scope: !5483, inlinedAt: !5554)
!5564 = !DILocation(line: 778, column: 151, scope: !5487, inlinedAt: !5554)
!5565 = !DILocation(line: 778, column: 229, scope: !5492, inlinedAt: !5554)
!5566 = !DILocation(line: 779, column: 24, scope: !5496, inlinedAt: !5554)
!5567 = !DILocation(line: 779, column: 151, scope: !5500, inlinedAt: !5554)
!5568 = !DILocation(line: 779, column: 229, scope: !5505, inlinedAt: !5554)
!5569 = !DILocation(line: 780, column: 24, scope: !5509, inlinedAt: !5554)
!5570 = !DILocation(line: 780, column: 151, scope: !5513, inlinedAt: !5554)
!5571 = !DILocation(line: 780, column: 229, scope: !5518, inlinedAt: !5554)
!5572 = !DILocation(line: 775, column: 70, scope: !5456, inlinedAt: !5573)
!5573 = distinct !DILocation(line: 1500, column: 25, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5556, file: !1665, line: 1499, column: 42)
!5575 = !DILocation(line: 775, column: 80, scope: !5456, inlinedAt: !5573)
!5576 = !DILocation(line: 775, column: 88, scope: !5456, inlinedAt: !5573)
!5577 = !DILocation(line: 775, column: 96, scope: !5456, inlinedAt: !5573)
!5578 = !DILocation(line: 776, column: 48, scope: !5456, inlinedAt: !5573)
!5579 = !DILocation(line: 778, column: 24, scope: !5483, inlinedAt: !5573)
!5580 = !DILocation(line: 778, column: 151, scope: !5487, inlinedAt: !5573)
!5581 = !DILocation(line: 778, column: 229, scope: !5492, inlinedAt: !5573)
!5582 = !DILocation(line: 779, column: 24, scope: !5496, inlinedAt: !5573)
!5583 = !DILocation(line: 779, column: 151, scope: !5500, inlinedAt: !5573)
!5584 = !DILocation(line: 779, column: 229, scope: !5505, inlinedAt: !5573)
!5585 = !DILocation(line: 780, column: 24, scope: !5509, inlinedAt: !5573)
!5586 = !DILocation(line: 780, column: 151, scope: !5513, inlinedAt: !5573)
!5587 = !DILocation(line: 780, column: 229, scope: !5518, inlinedAt: !5573)
!5588 = !DILocation(line: 775, column: 70, scope: !5456, inlinedAt: !5589)
!5589 = distinct !DILocation(line: 1497, column: 25, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5557, file: !1665, line: 1496, column: 35)
!5591 = !DILocation(line: 775, column: 80, scope: !5456, inlinedAt: !5589)
!5592 = !DILocation(line: 775, column: 88, scope: !5456, inlinedAt: !5589)
!5593 = !DILocation(line: 775, column: 96, scope: !5456, inlinedAt: !5589)
!5594 = !DILocation(line: 776, column: 48, scope: !5456, inlinedAt: !5589)
!5595 = !DILocation(line: 778, column: 24, scope: !5483, inlinedAt: !5589)
!5596 = !DILocation(line: 778, column: 151, scope: !5487, inlinedAt: !5589)
!5597 = !DILocation(line: 778, column: 229, scope: !5492, inlinedAt: !5589)
!5598 = !DILocation(line: 779, column: 24, scope: !5496, inlinedAt: !5589)
!5599 = !DILocation(line: 779, column: 151, scope: !5500, inlinedAt: !5589)
!5600 = !DILocation(line: 779, column: 229, scope: !5505, inlinedAt: !5589)
!5601 = !DILocation(line: 780, column: 24, scope: !5509, inlinedAt: !5589)
!5602 = !DILocation(line: 780, column: 151, scope: !5513, inlinedAt: !5589)
!5603 = !DILocation(line: 780, column: 229, scope: !5518, inlinedAt: !5589)
!5604 = !DILocalVariable(name: "a", arg: 1, scope: !5605, file: !5606, line: 127, type: !891)
!5605 = distinct !DISubprogram(name: "av_clip_c", scope: !5606, file: !5606, line: 127, type: !5607, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!5606 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!891, !891, !891, !891}
!5609 = !DILocation(line: 127, column: 87, scope: !5605, inlinedAt: !5610)
!5610 = distinct !DILocation(line: 1394, column: 24, scope: !5611)
!5611 = !DILexicalBlockFile(scope: !5612, file: !1665, discriminator: 1)
!5612 = distinct !DILexicalBlock(scope: !5613, file: !1665, line: 1391, column: 23)
!5613 = distinct !DILexicalBlock(scope: !5454, file: !1665, line: 1391, column: 9)
!5614 = !DILocalVariable(name: "amin", arg: 2, scope: !5605, file: !5606, line: 127, type: !891)
!5615 = !DILocation(line: 127, column: 94, scope: !5605, inlinedAt: !5610)
!5616 = !DILocalVariable(name: "amax", arg: 3, scope: !5605, file: !5606, line: 127, type: !891)
!5617 = !DILocation(line: 127, column: 104, scope: !5605, inlinedAt: !5610)
!5618 = !DILocalVariable(name: "s", arg: 1, scope: !5454, file: !1665, line: 1306, type: !1847)
!5619 = !DILocation(line: 1306, column: 47, scope: !5454)
!5620 = !DILocalVariable(name: "nb_granules", scope: !5454, file: !1665, line: 1308, type: !891)
!5621 = !DILocation(line: 1308, column: 9, scope: !5454)
!5622 = !DILocalVariable(name: "main_data_begin", scope: !5454, file: !1665, line: 1308, type: !891)
!5623 = !DILocation(line: 1308, column: 22, scope: !5454)
!5624 = !DILocalVariable(name: "gr", scope: !5454, file: !1665, line: 1309, type: !891)
!5625 = !DILocation(line: 1309, column: 9, scope: !5454)
!5626 = !DILocalVariable(name: "ch", scope: !5454, file: !1665, line: 1309, type: !891)
!5627 = !DILocation(line: 1309, column: 13, scope: !5454)
!5628 = !DILocalVariable(name: "blocksplit_flag", scope: !5454, file: !1665, line: 1309, type: !891)
!5629 = !DILocation(line: 1309, column: 17, scope: !5454)
!5630 = !DILocalVariable(name: "i", scope: !5454, file: !1665, line: 1309, type: !891)
!5631 = !DILocation(line: 1309, column: 34, scope: !5454)
!5632 = !DILocalVariable(name: "j", scope: !5454, file: !1665, line: 1309, type: !891)
!5633 = !DILocation(line: 1309, column: 37, scope: !5454)
!5634 = !DILocalVariable(name: "k", scope: !5454, file: !1665, line: 1309, type: !891)
!5635 = !DILocation(line: 1309, column: 40, scope: !5454)
!5636 = !DILocalVariable(name: "n", scope: !5454, file: !1665, line: 1309, type: !891)
!5637 = !DILocation(line: 1309, column: 43, scope: !5454)
!5638 = !DILocalVariable(name: "bits_pos", scope: !5454, file: !1665, line: 1309, type: !891)
!5639 = !DILocation(line: 1309, column: 46, scope: !5454)
!5640 = !DILocalVariable(name: "g", scope: !5454, file: !1665, line: 1310, type: !2002)
!5641 = !DILocation(line: 1310, column: 17, scope: !5454)
!5642 = !DILocalVariable(name: "exponents", scope: !5454, file: !1665, line: 1311, type: !5643)
!5643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 9216, align: 16, elements: !1922)
!5644 = !DILocation(line: 1311, column: 13, scope: !5454)
!5645 = !DILocation(line: 1314, column: 9, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5454, file: !1665, line: 1314, column: 9)
!5647 = !DILocation(line: 1314, column: 12, scope: !5646)
!5648 = !DILocation(line: 1314, column: 9, scope: !5454)
!5649 = !DILocation(line: 1315, column: 37, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5646, file: !1665, line: 1314, column: 17)
!5651 = !DILocation(line: 1315, column: 40, scope: !5650)
!5652 = !DILocation(line: 1315, column: 27, scope: !5650)
!5653 = !DILocation(line: 1315, column: 25, scope: !5650)
!5654 = !DILocation(line: 1316, column: 20, scope: !5650)
!5655 = !DILocation(line: 1316, column: 23, scope: !5650)
!5656 = !DILocation(line: 1316, column: 27, scope: !5650)
!5657 = !DILocation(line: 1316, column: 30, scope: !5650)
!5658 = !DILocation(line: 1316, column: 9, scope: !5650)
!5659 = !DILocation(line: 1317, column: 21, scope: !5650)
!5660 = !DILocation(line: 1318, column: 5, scope: !5650)
!5661 = !DILocation(line: 1319, column: 37, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5646, file: !1665, line: 1318, column: 12)
!5663 = !DILocation(line: 1319, column: 40, scope: !5662)
!5664 = !DILocation(line: 1319, column: 27, scope: !5662)
!5665 = !DILocation(line: 1319, column: 25, scope: !5662)
!5666 = !DILocation(line: 1320, column: 13, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5662, file: !1665, line: 1320, column: 13)
!5668 = !DILocation(line: 1320, column: 16, scope: !5667)
!5669 = !DILocation(line: 1320, column: 28, scope: !5667)
!5670 = !DILocation(line: 1320, column: 13, scope: !5662)
!5671 = !DILocation(line: 1321, column: 24, scope: !5667)
!5672 = !DILocation(line: 1321, column: 27, scope: !5667)
!5673 = !DILocation(line: 1321, column: 13, scope: !5667)
!5674 = !DILocation(line: 1323, column: 24, scope: !5667)
!5675 = !DILocation(line: 1323, column: 27, scope: !5667)
!5676 = !DILocation(line: 1323, column: 13, scope: !5667)
!5677 = !DILocation(line: 1324, column: 21, scope: !5662)
!5678 = !DILocation(line: 1325, column: 17, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5662, file: !1665, line: 1325, column: 9)
!5680 = !DILocation(line: 1325, column: 14, scope: !5679)
!5681 = !DILocation(line: 1325, column: 22, scope: !5682)
!5682 = !DILexicalBlockFile(scope: !5683, file: !1665, discriminator: 1)
!5683 = distinct !DILexicalBlock(scope: !5679, file: !1665, line: 1325, column: 9)
!5684 = !DILocation(line: 1325, column: 27, scope: !5682)
!5685 = !DILocation(line: 1325, column: 30, scope: !5682)
!5686 = !DILocation(line: 1325, column: 25, scope: !5682)
!5687 = !DILocation(line: 1325, column: 9, scope: !5682)
!5688 = !DILocation(line: 1326, column: 25, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5683, file: !1665, line: 1325, column: 49)
!5690 = !DILocation(line: 1326, column: 13, scope: !5689)
!5691 = !DILocation(line: 1326, column: 16, scope: !5689)
!5692 = !DILocation(line: 1326, column: 32, scope: !5689)
!5693 = !DILocation(line: 1326, column: 38, scope: !5689)
!5694 = !DILocation(line: 1327, column: 50, scope: !5689)
!5695 = !DILocation(line: 1327, column: 53, scope: !5689)
!5696 = !DILocation(line: 1327, column: 40, scope: !5689)
!5697 = !DILocation(line: 1327, column: 25, scope: !5689)
!5698 = !DILocation(line: 1327, column: 13, scope: !5689)
!5699 = !DILocation(line: 1327, column: 16, scope: !5689)
!5700 = !DILocation(line: 1327, column: 32, scope: !5689)
!5701 = !DILocation(line: 1327, column: 38, scope: !5689)
!5702 = !DILocation(line: 1328, column: 9, scope: !5689)
!5703 = !DILocation(line: 1325, column: 45, scope: !5704)
!5704 = !DILexicalBlockFile(scope: !5683, file: !1665, discriminator: 2)
!5705 = !DILocation(line: 1325, column: 9, scope: !5704)
!5706 = distinct !{!5706, !5707}
!5707 = !DILocation(line: 1325, column: 9, scope: !5662)
!5708 = !DILocation(line: 1331, column: 13, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5454, file: !1665, line: 1331, column: 5)
!5710 = !DILocation(line: 1331, column: 10, scope: !5709)
!5711 = !DILocation(line: 1331, column: 18, scope: !5712)
!5712 = !DILexicalBlockFile(scope: !5713, file: !1665, discriminator: 1)
!5713 = distinct !DILexicalBlock(scope: !5709, file: !1665, line: 1331, column: 5)
!5714 = !DILocation(line: 1331, column: 23, scope: !5712)
!5715 = !DILocation(line: 1331, column: 21, scope: !5712)
!5716 = !DILocation(line: 1331, column: 5, scope: !5712)
!5717 = !DILocation(line: 1332, column: 17, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !1665, line: 1332, column: 9)
!5719 = distinct !DILexicalBlock(scope: !5713, file: !1665, line: 1331, column: 42)
!5720 = !DILocation(line: 1332, column: 14, scope: !5718)
!5721 = !DILocation(line: 1332, column: 22, scope: !5722)
!5722 = !DILexicalBlockFile(scope: !5723, file: !1665, discriminator: 1)
!5723 = distinct !DILexicalBlock(scope: !5718, file: !1665, line: 1332, column: 9)
!5724 = !DILocation(line: 1332, column: 27, scope: !5722)
!5725 = !DILocation(line: 1332, column: 30, scope: !5722)
!5726 = !DILocation(line: 1332, column: 25, scope: !5722)
!5727 = !DILocation(line: 1332, column: 9, scope: !5722)
!5728 = !DILocation(line: 1333, column: 13, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5723, file: !1665, line: 1332, column: 49)
!5730 = distinct !{!5730, !5728}
!5731 = !DILocation(line: 1333, column: 83, scope: !5732)
!5732 = !DILexicalBlockFile(scope: !5733, file: !1665, discriminator: 1)
!5733 = distinct !DILexicalBlock(scope: !5729, file: !1665, line: 1333, column: 16)
!5734 = !DILocation(line: 1334, column: 34, scope: !5729)
!5735 = !DILocation(line: 1334, column: 18, scope: !5729)
!5736 = !DILocation(line: 1334, column: 30, scope: !5729)
!5737 = !DILocation(line: 1334, column: 21, scope: !5729)
!5738 = !DILocation(line: 1334, column: 15, scope: !5729)
!5739 = !DILocation(line: 1335, column: 43, scope: !5729)
!5740 = !DILocation(line: 1335, column: 46, scope: !5729)
!5741 = !DILocation(line: 1335, column: 33, scope: !5729)
!5742 = !DILocation(line: 1335, column: 13, scope: !5729)
!5743 = !DILocation(line: 1335, column: 16, scope: !5729)
!5744 = !DILocation(line: 1335, column: 31, scope: !5729)
!5745 = !DILocation(line: 1336, column: 39, scope: !5729)
!5746 = !DILocation(line: 1336, column: 42, scope: !5729)
!5747 = !DILocation(line: 1336, column: 29, scope: !5729)
!5748 = !DILocation(line: 1336, column: 13, scope: !5729)
!5749 = !DILocation(line: 1336, column: 16, scope: !5729)
!5750 = !DILocation(line: 1336, column: 27, scope: !5729)
!5751 = !DILocation(line: 1337, column: 17, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5729, file: !1665, line: 1337, column: 17)
!5753 = !DILocation(line: 1337, column: 20, scope: !5752)
!5754 = !DILocation(line: 1337, column: 31, scope: !5752)
!5755 = !DILocation(line: 1337, column: 17, scope: !5729)
!5756 = !DILocation(line: 1338, column: 24, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5752, file: !1665, line: 1337, column: 38)
!5758 = !DILocation(line: 1338, column: 27, scope: !5757)
!5759 = !DILocation(line: 1338, column: 17, scope: !5757)
!5760 = !DILocation(line: 1339, column: 17, scope: !5757)
!5761 = !DILocation(line: 1342, column: 40, scope: !5729)
!5762 = !DILocation(line: 1342, column: 43, scope: !5729)
!5763 = !DILocation(line: 1342, column: 30, scope: !5729)
!5764 = !DILocation(line: 1342, column: 13, scope: !5729)
!5765 = !DILocation(line: 1342, column: 16, scope: !5729)
!5766 = !DILocation(line: 1342, column: 28, scope: !5729)
!5767 = !DILocation(line: 1345, column: 18, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5729, file: !1665, line: 1345, column: 17)
!5769 = !DILocation(line: 1345, column: 21, scope: !5768)
!5770 = !DILocation(line: 1345, column: 30, scope: !5768)
!5771 = !DILocation(line: 1345, column: 41, scope: !5768)
!5772 = !DILocation(line: 1345, column: 17, scope: !5729)
!5773 = !DILocation(line: 1347, column: 17, scope: !5768)
!5774 = !DILocation(line: 1347, column: 20, scope: !5768)
!5775 = !DILocation(line: 1347, column: 32, scope: !5768)
!5776 = !DILocation(line: 1348, column: 17, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5729, file: !1665, line: 1348, column: 17)
!5778 = !DILocation(line: 1348, column: 20, scope: !5777)
!5779 = !DILocation(line: 1348, column: 17, scope: !5729)
!5780 = !DILocation(line: 1349, column: 50, scope: !5777)
!5781 = !DILocation(line: 1349, column: 53, scope: !5777)
!5782 = !DILocation(line: 1349, column: 40, scope: !5777)
!5783 = !DILocation(line: 1349, column: 17, scope: !5777)
!5784 = !DILocation(line: 1349, column: 20, scope: !5777)
!5785 = !DILocation(line: 1349, column: 38, scope: !5777)
!5786 = !DILocation(line: 1351, column: 50, scope: !5777)
!5787 = !DILocation(line: 1351, column: 53, scope: !5777)
!5788 = !DILocation(line: 1351, column: 40, scope: !5777)
!5789 = !DILocation(line: 1351, column: 17, scope: !5777)
!5790 = !DILocation(line: 1351, column: 20, scope: !5777)
!5791 = !DILocation(line: 1351, column: 38, scope: !5777)
!5792 = !DILocation(line: 1352, column: 42, scope: !5729)
!5793 = !DILocation(line: 1352, column: 45, scope: !5729)
!5794 = !DILocation(line: 1352, column: 31, scope: !5729)
!5795 = !DILocation(line: 1352, column: 29, scope: !5729)
!5796 = !DILocation(line: 1353, column: 17, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5729, file: !1665, line: 1353, column: 17)
!5798 = !DILocation(line: 1353, column: 17, scope: !5729)
!5799 = !DILocation(line: 1354, column: 43, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5797, file: !1665, line: 1353, column: 34)
!5801 = !DILocation(line: 1354, column: 46, scope: !5800)
!5802 = !DILocation(line: 1354, column: 33, scope: !5800)
!5803 = !DILocation(line: 1354, column: 17, scope: !5800)
!5804 = !DILocation(line: 1354, column: 20, scope: !5800)
!5805 = !DILocation(line: 1354, column: 31, scope: !5800)
!5806 = !DILocation(line: 1355, column: 21, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5800, file: !1665, line: 1355, column: 21)
!5808 = !DILocation(line: 1355, column: 24, scope: !5807)
!5809 = !DILocation(line: 1355, column: 35, scope: !5807)
!5810 = !DILocation(line: 1355, column: 21, scope: !5800)
!5811 = !DILocation(line: 1356, column: 28, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5807, file: !1665, line: 1355, column: 41)
!5813 = !DILocation(line: 1356, column: 31, scope: !5812)
!5814 = !DILocation(line: 1356, column: 21, scope: !5812)
!5815 = !DILocation(line: 1357, column: 21, scope: !5812)
!5816 = !DILocation(line: 1359, column: 46, scope: !5800)
!5817 = !DILocation(line: 1359, column: 49, scope: !5800)
!5818 = !DILocation(line: 1359, column: 35, scope: !5800)
!5819 = !DILocation(line: 1359, column: 17, scope: !5800)
!5820 = !DILocation(line: 1359, column: 20, scope: !5800)
!5821 = !DILocation(line: 1359, column: 33, scope: !5800)
!5822 = !DILocation(line: 1360, column: 24, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5800, file: !1665, line: 1360, column: 17)
!5824 = !DILocation(line: 1360, column: 22, scope: !5823)
!5825 = !DILocation(line: 1360, column: 29, scope: !5826)
!5826 = !DILexicalBlockFile(scope: !5827, file: !1665, discriminator: 1)
!5827 = distinct !DILexicalBlock(scope: !5823, file: !1665, line: 1360, column: 17)
!5828 = !DILocation(line: 1360, column: 31, scope: !5826)
!5829 = !DILocation(line: 1360, column: 17, scope: !5826)
!5830 = !DILocation(line: 1361, column: 52, scope: !5827)
!5831 = !DILocation(line: 1361, column: 55, scope: !5827)
!5832 = !DILocation(line: 1361, column: 42, scope: !5827)
!5833 = !DILocation(line: 1361, column: 37, scope: !5827)
!5834 = !DILocation(line: 1361, column: 21, scope: !5827)
!5835 = !DILocation(line: 1361, column: 24, scope: !5827)
!5836 = !DILocation(line: 1361, column: 40, scope: !5827)
!5837 = !DILocation(line: 1360, column: 37, scope: !5838)
!5838 = !DILexicalBlockFile(scope: !5827, file: !1665, discriminator: 2)
!5839 = !DILocation(line: 1360, column: 17, scope: !5838)
!5840 = distinct !{!5840, !5841}
!5841 = !DILocation(line: 1360, column: 17, scope: !5800)
!5842 = !DILocation(line: 1362, column: 24, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5800, file: !1665, line: 1362, column: 17)
!5844 = !DILocation(line: 1362, column: 22, scope: !5843)
!5845 = !DILocation(line: 1362, column: 29, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5847, file: !1665, discriminator: 1)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !1665, line: 1362, column: 17)
!5848 = !DILocation(line: 1362, column: 31, scope: !5846)
!5849 = !DILocation(line: 1362, column: 17, scope: !5846)
!5850 = !DILocation(line: 1363, column: 53, scope: !5847)
!5851 = !DILocation(line: 1363, column: 56, scope: !5847)
!5852 = !DILocation(line: 1363, column: 43, scope: !5847)
!5853 = !DILocation(line: 1363, column: 38, scope: !5847)
!5854 = !DILocation(line: 1363, column: 21, scope: !5847)
!5855 = !DILocation(line: 1363, column: 24, scope: !5847)
!5856 = !DILocation(line: 1363, column: 41, scope: !5847)
!5857 = !DILocation(line: 1362, column: 37, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !5847, file: !1665, discriminator: 2)
!5859 = !DILocation(line: 1362, column: 17, scope: !5858)
!5860 = distinct !{!5860, !5861}
!5861 = !DILocation(line: 1362, column: 17, scope: !5800)
!5862 = !DILocation(line: 1364, column: 35, scope: !5800)
!5863 = !DILocation(line: 1364, column: 38, scope: !5800)
!5864 = !DILocation(line: 1364, column: 17, scope: !5800)
!5865 = !DILocation(line: 1365, column: 13, scope: !5800)
!5866 = !DILocalVariable(name: "region_address1", scope: !5867, file: !1665, line: 1366, type: !891)
!5867 = distinct !DILexicalBlock(scope: !5797, file: !1665, line: 1365, column: 20)
!5868 = !DILocation(line: 1366, column: 21, scope: !5867)
!5869 = !DILocalVariable(name: "region_address2", scope: !5867, file: !1665, line: 1366, type: !891)
!5870 = !DILocation(line: 1366, column: 38, scope: !5867)
!5871 = !DILocation(line: 1367, column: 17, scope: !5867)
!5872 = !DILocation(line: 1367, column: 20, scope: !5867)
!5873 = !DILocation(line: 1367, column: 31, scope: !5867)
!5874 = !DILocation(line: 1368, column: 17, scope: !5867)
!5875 = !DILocation(line: 1368, column: 20, scope: !5867)
!5876 = !DILocation(line: 1368, column: 33, scope: !5867)
!5877 = !DILocation(line: 1369, column: 24, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5867, file: !1665, line: 1369, column: 17)
!5879 = !DILocation(line: 1369, column: 22, scope: !5878)
!5880 = !DILocation(line: 1369, column: 29, scope: !5881)
!5881 = !DILexicalBlockFile(scope: !5882, file: !1665, discriminator: 1)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !1665, line: 1369, column: 17)
!5883 = !DILocation(line: 1369, column: 31, scope: !5881)
!5884 = !DILocation(line: 1369, column: 17, scope: !5881)
!5885 = !DILocation(line: 1370, column: 52, scope: !5882)
!5886 = !DILocation(line: 1370, column: 55, scope: !5882)
!5887 = !DILocation(line: 1370, column: 42, scope: !5882)
!5888 = !DILocation(line: 1370, column: 37, scope: !5882)
!5889 = !DILocation(line: 1370, column: 21, scope: !5882)
!5890 = !DILocation(line: 1370, column: 24, scope: !5882)
!5891 = !DILocation(line: 1370, column: 40, scope: !5882)
!5892 = !DILocation(line: 1369, column: 37, scope: !5893)
!5893 = !DILexicalBlockFile(scope: !5882, file: !1665, discriminator: 2)
!5894 = !DILocation(line: 1369, column: 17, scope: !5893)
!5895 = distinct !{!5895, !5896}
!5896 = !DILocation(line: 1369, column: 17, scope: !5867)
!5897 = !DILocation(line: 1372, column: 45, scope: !5867)
!5898 = !DILocation(line: 1372, column: 48, scope: !5867)
!5899 = !DILocation(line: 1372, column: 35, scope: !5867)
!5900 = !DILocation(line: 1372, column: 33, scope: !5867)
!5901 = !DILocation(line: 1373, column: 45, scope: !5867)
!5902 = !DILocation(line: 1373, column: 48, scope: !5867)
!5903 = !DILocation(line: 1373, column: 35, scope: !5867)
!5904 = !DILocation(line: 1373, column: 33, scope: !5867)
!5905 = !DILocation(line: 1374, column: 17, scope: !5867)
!5906 = distinct !{!5906, !5905}
!5907 = !DILocation(line: 1374, column: 112, scope: !5908)
!5908 = !DILexicalBlockFile(scope: !5909, file: !1665, discriminator: 1)
!5909 = distinct !DILexicalBlock(scope: !5867, file: !1665, line: 1374, column: 20)
!5910 = !DILocation(line: 1376, column: 34, scope: !5867)
!5911 = !DILocation(line: 1376, column: 37, scope: !5867)
!5912 = !DILocation(line: 1376, column: 40, scope: !5867)
!5913 = !DILocation(line: 1376, column: 57, scope: !5867)
!5914 = !DILocation(line: 1376, column: 17, scope: !5867)
!5915 = !DILocation(line: 1378, column: 32, scope: !5729)
!5916 = !DILocation(line: 1378, column: 13, scope: !5729)
!5917 = !DILocation(line: 1379, column: 34, scope: !5729)
!5918 = !DILocation(line: 1379, column: 37, scope: !5729)
!5919 = !DILocation(line: 1379, column: 13, scope: !5729)
!5920 = !DILocation(line: 1381, column: 13, scope: !5729)
!5921 = !DILocation(line: 1381, column: 16, scope: !5729)
!5922 = !DILocation(line: 1381, column: 24, scope: !5729)
!5923 = !DILocation(line: 1382, column: 18, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5729, file: !1665, line: 1382, column: 17)
!5925 = !DILocation(line: 1382, column: 21, scope: !5924)
!5926 = !DILocation(line: 1382, column: 17, scope: !5729)
!5927 = !DILocation(line: 1383, column: 41, scope: !5924)
!5928 = !DILocation(line: 1383, column: 44, scope: !5924)
!5929 = !DILocation(line: 1383, column: 30, scope: !5924)
!5930 = !DILocation(line: 1383, column: 17, scope: !5924)
!5931 = !DILocation(line: 1383, column: 20, scope: !5924)
!5932 = !DILocation(line: 1383, column: 28, scope: !5924)
!5933 = !DILocation(line: 1384, column: 44, scope: !5729)
!5934 = !DILocation(line: 1384, column: 47, scope: !5729)
!5935 = !DILocation(line: 1384, column: 33, scope: !5729)
!5936 = !DILocation(line: 1384, column: 13, scope: !5729)
!5937 = !DILocation(line: 1384, column: 16, scope: !5729)
!5938 = !DILocation(line: 1384, column: 31, scope: !5729)
!5939 = !DILocation(line: 1385, column: 48, scope: !5729)
!5940 = !DILocation(line: 1385, column: 51, scope: !5729)
!5941 = !DILocation(line: 1385, column: 37, scope: !5729)
!5942 = !DILocation(line: 1385, column: 13, scope: !5729)
!5943 = !DILocation(line: 1385, column: 16, scope: !5729)
!5944 = !DILocation(line: 1385, column: 35, scope: !5729)
!5945 = !DILocation(line: 1386, column: 13, scope: !5729)
!5946 = distinct !{!5946, !5945}
!5947 = !DILocation(line: 1386, column: 114, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !5949, file: !1665, discriminator: 1)
!5949 = distinct !DILexicalBlock(scope: !5729, file: !1665, line: 1386, column: 16)
!5950 = !DILocation(line: 1388, column: 9, scope: !5729)
!5951 = !DILocation(line: 1332, column: 45, scope: !5952)
!5952 = !DILexicalBlockFile(scope: !5723, file: !1665, discriminator: 2)
!5953 = !DILocation(line: 1332, column: 9, scope: !5952)
!5954 = distinct !{!5954, !5955}
!5955 = !DILocation(line: 1332, column: 9, scope: !5719)
!5956 = !DILocation(line: 1389, column: 5, scope: !5719)
!5957 = !DILocation(line: 1331, column: 38, scope: !5958)
!5958 = !DILexicalBlockFile(scope: !5713, file: !1665, discriminator: 2)
!5959 = !DILocation(line: 1331, column: 5, scope: !5958)
!5960 = distinct !{!5960, !5961}
!5961 = !DILocation(line: 1331, column: 5, scope: !5454)
!5962 = !DILocation(line: 1391, column: 10, scope: !5613)
!5963 = !DILocation(line: 1391, column: 13, scope: !5613)
!5964 = !DILocation(line: 1391, column: 9, scope: !5454)
!5965 = !DILocalVariable(name: "skip", scope: !5612, file: !1665, line: 1392, type: !891)
!5966 = !DILocation(line: 1392, column: 13, scope: !5612)
!5967 = !DILocalVariable(name: "ptr", scope: !5612, file: !1665, line: 1393, type: !1470)
!5968 = !DILocation(line: 1393, column: 24, scope: !5612)
!5969 = !DILocation(line: 1393, column: 30, scope: !5612)
!5970 = !DILocation(line: 1393, column: 33, scope: !5612)
!5971 = !DILocation(line: 1393, column: 36, scope: !5612)
!5972 = !DILocation(line: 1393, column: 62, scope: !5612)
!5973 = !DILocation(line: 1393, column: 65, scope: !5612)
!5974 = !DILocation(line: 1393, column: 46, scope: !5612)
!5975 = !DILocation(line: 1393, column: 68, scope: !5612)
!5976 = !DILocation(line: 1393, column: 43, scope: !5612)
!5977 = !DILocation(line: 1394, column: 50, scope: !5612)
!5978 = !DILocation(line: 1394, column: 53, scope: !5612)
!5979 = !DILocation(line: 1394, column: 35, scope: !5612)
!5980 = !DILocation(line: 1394, column: 57, scope: !5612)
!5981 = !DILocation(line: 1394, column: 65, scope: !5612)
!5982 = !DILocation(line: 1394, column: 68, scope: !5612)
!5983 = !DILocation(line: 1394, column: 63, scope: !5612)
!5984 = !DILocation(line: 1395, column: 55, scope: !5612)
!5985 = !DILocation(line: 1395, column: 58, scope: !5612)
!5986 = !DILocation(line: 1395, column: 53, scope: !5612)
!5987 = !DILocation(line: 1395, column: 37, scope: !5612)
!5988 = !DILocation(line: 1395, column: 33, scope: !5612)
!5989 = !DILocation(line: 1395, column: 33, scope: !5611)
!5990 = !DILocation(line: 1395, column: 97, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !5612, file: !1665, discriminator: 2)
!5992 = !DILocation(line: 1395, column: 100, scope: !5991)
!5993 = !DILocation(line: 1395, column: 95, scope: !5991)
!5994 = !DILocation(line: 1395, column: 33, scope: !5991)
!5995 = !DILocation(line: 1395, column: 33, scope: !5996)
!5996 = !DILexicalBlockFile(scope: !5612, file: !1665, discriminator: 3)
!5997 = !DILocation(line: 1394, column: 24, scope: !5611)
!5998 = !DILocation(line: 132, column: 9, scope: !5999, inlinedAt: !5610)
!5999 = distinct !DILexicalBlock(scope: !5605, file: !5606, line: 132, column: 9)
!6000 = !DILocation(line: 132, column: 13, scope: !5999, inlinedAt: !5610)
!6001 = !DILocation(line: 132, column: 11, scope: !5999, inlinedAt: !5610)
!6002 = !DILocation(line: 132, column: 9, scope: !5605, inlinedAt: !5610)
!6003 = !DILocation(line: 132, column: 26, scope: !6004, inlinedAt: !5610)
!6004 = !DILexicalBlockFile(scope: !5999, file: !5606, discriminator: 1)
!6005 = !DILocation(line: 132, column: 19, scope: !6004, inlinedAt: !5610)
!6006 = !DILocation(line: 133, column: 14, scope: !6007, inlinedAt: !5610)
!6007 = distinct !DILexicalBlock(scope: !5999, file: !5606, line: 133, column: 14)
!6008 = !DILocation(line: 133, column: 18, scope: !6007, inlinedAt: !5610)
!6009 = !DILocation(line: 133, column: 16, scope: !6007, inlinedAt: !5610)
!6010 = !DILocation(line: 133, column: 14, scope: !5999, inlinedAt: !5610)
!6011 = !DILocation(line: 133, column: 31, scope: !6012, inlinedAt: !5610)
!6012 = !DILexicalBlockFile(scope: !6007, file: !5606, discriminator: 1)
!6013 = !DILocation(line: 133, column: 24, scope: !6012, inlinedAt: !5610)
!6014 = !DILocation(line: 134, column: 17, scope: !6007, inlinedAt: !5610)
!6015 = !DILocation(line: 134, column: 10, scope: !6007, inlinedAt: !5610)
!6016 = !DILocation(line: 135, column: 1, scope: !5605, inlinedAt: !5610)
!6017 = !DILocation(line: 1394, column: 9, scope: !5611)
!6018 = !DILocation(line: 1394, column: 12, scope: !5611)
!6019 = !DILocation(line: 1394, column: 22, scope: !5611)
!6020 = !DILocation(line: 1398, column: 9, scope: !5612)
!6021 = distinct !{!6021, !6020}
!6022 = !DILocation(line: 1398, column: 107, scope: !6023)
!6023 = !DILexicalBlockFile(scope: !6024, file: !1665, discriminator: 1)
!6024 = distinct !DILexicalBlock(scope: !5612, file: !1665, line: 1398, column: 12)
!6025 = !DILocation(line: 1401, column: 16, scope: !5612)
!6026 = !DILocation(line: 1401, column: 19, scope: !5612)
!6027 = !DILocation(line: 1401, column: 30, scope: !5612)
!6028 = !DILocation(line: 1401, column: 33, scope: !5612)
!6029 = !DILocation(line: 1401, column: 28, scope: !5612)
!6030 = !DILocation(line: 1401, column: 48, scope: !5612)
!6031 = !DILocation(line: 1401, column: 53, scope: !5612)
!6032 = !DILocation(line: 1401, column: 56, scope: !5612)
!6033 = !DILocation(line: 1401, column: 9, scope: !5612)
!6034 = !DILocation(line: 1402, column: 9, scope: !5612)
!6035 = !DILocation(line: 1402, column: 12, scope: !5612)
!6036 = !DILocation(line: 1402, column: 20, scope: !5612)
!6037 = !DILocation(line: 1402, column: 23, scope: !5612)
!6038 = !DILocation(line: 1403, column: 24, scope: !5612)
!6039 = !DILocation(line: 1403, column: 27, scope: !5612)
!6040 = !DILocation(line: 1403, column: 31, scope: !5612)
!6041 = !DILocation(line: 1403, column: 34, scope: !5612)
!6042 = !DILocation(line: 1403, column: 45, scope: !5612)
!6043 = !DILocation(line: 1403, column: 48, scope: !5612)
!6044 = !DILocation(line: 1403, column: 64, scope: !5612)
!6045 = !DILocation(line: 1403, column: 67, scope: !5612)
!6046 = !DILocation(line: 1403, column: 62, scope: !5612)
!6047 = !DILocation(line: 1403, column: 78, scope: !5612)
!6048 = !DILocation(line: 1403, column: 9, scope: !5612)
!6049 = !DILocation(line: 1404, column: 9, scope: !5612)
!6050 = !DILocation(line: 1404, column: 12, scope: !5612)
!6051 = !DILocation(line: 1404, column: 26, scope: !5612)
!6052 = !DILocation(line: 1405, column: 17, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !5612, file: !1665, line: 1405, column: 9)
!6054 = !DILocation(line: 1405, column: 14, scope: !6053)
!6055 = !DILocation(line: 1405, column: 22, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !6057, file: !1665, discriminator: 1)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !1665, line: 1405, column: 9)
!6058 = !DILocation(line: 1405, column: 27, scope: !6056)
!6059 = !DILocation(line: 1405, column: 25, scope: !6056)
!6060 = !DILocation(line: 1405, column: 39, scope: !6056)
!6061 = !DILocation(line: 1405, column: 43, scope: !6062)
!6062 = !DILexicalBlockFile(scope: !6057, file: !1665, discriminator: 2)
!6063 = !DILocation(line: 1405, column: 46, scope: !6062)
!6064 = !DILocation(line: 1405, column: 60, scope: !6062)
!6065 = !DILocation(line: 1405, column: 68, scope: !6062)
!6066 = !DILocation(line: 1405, column: 66, scope: !6062)
!6067 = !DILocation(line: 1405, column: 9, scope: !6068)
!6068 = !DILexicalBlockFile(scope: !6053, file: !1665, discriminator: 3)
!6069 = !DILocation(line: 1406, column: 21, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !1665, line: 1406, column: 13)
!6071 = distinct !DILexicalBlock(scope: !6057, file: !1665, line: 1405, column: 91)
!6072 = !DILocation(line: 1406, column: 18, scope: !6070)
!6073 = !DILocation(line: 1406, column: 26, scope: !6074)
!6074 = !DILexicalBlockFile(scope: !6075, file: !1665, discriminator: 1)
!6075 = distinct !DILexicalBlock(scope: !6070, file: !1665, line: 1406, column: 13)
!6076 = !DILocation(line: 1406, column: 31, scope: !6074)
!6077 = !DILocation(line: 1406, column: 34, scope: !6074)
!6078 = !DILocation(line: 1406, column: 29, scope: !6074)
!6079 = !DILocation(line: 1406, column: 13, scope: !6074)
!6080 = !DILocation(line: 1407, column: 38, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6075, file: !1665, line: 1406, column: 53)
!6082 = !DILocation(line: 1407, column: 22, scope: !6081)
!6083 = !DILocation(line: 1407, column: 34, scope: !6081)
!6084 = !DILocation(line: 1407, column: 25, scope: !6081)
!6085 = !DILocation(line: 1407, column: 19, scope: !6081)
!6086 = !DILocation(line: 1408, column: 37, scope: !6081)
!6087 = !DILocation(line: 1408, column: 40, scope: !6081)
!6088 = !DILocation(line: 1408, column: 17, scope: !6081)
!6089 = !DILocation(line: 1408, column: 20, scope: !6081)
!6090 = !DILocation(line: 1408, column: 34, scope: !6081)
!6091 = !DILocation(line: 1409, column: 24, scope: !6081)
!6092 = !DILocation(line: 1409, column: 27, scope: !6081)
!6093 = !DILocation(line: 1409, column: 17, scope: !6081)
!6094 = !DILocation(line: 1410, column: 31, scope: !6081)
!6095 = !DILocation(line: 1410, column: 34, scope: !6081)
!6096 = !DILocation(line: 1410, column: 61, scope: !6081)
!6097 = !DILocation(line: 1410, column: 59, scope: !6081)
!6098 = !DILocation(line: 1410, column: 38, scope: !6081)
!6099 = !DILocation(line: 1410, column: 52, scope: !6081)
!6100 = !DILocation(line: 1410, column: 41, scope: !6081)
!6101 = !DILocation(line: 1410, column: 81, scope: !6081)
!6102 = !DILocation(line: 1410, column: 69, scope: !6081)
!6103 = !DILocation(line: 1410, column: 72, scope: !6081)
!6104 = !DILocation(line: 1410, column: 17, scope: !6081)
!6105 = !DILocation(line: 1411, column: 13, scope: !6081)
!6106 = !DILocation(line: 1406, column: 49, scope: !6107)
!6107 = !DILexicalBlockFile(scope: !6075, file: !1665, discriminator: 2)
!6108 = !DILocation(line: 1406, column: 13, scope: !6107)
!6109 = distinct !{!6109, !6110}
!6110 = !DILocation(line: 1406, column: 13, scope: !6071)
!6111 = !DILocation(line: 1412, column: 9, scope: !6071)
!6112 = !DILocation(line: 1405, column: 87, scope: !6113)
!6113 = !DILexicalBlockFile(scope: !6057, file: !1665, discriminator: 4)
!6114 = !DILocation(line: 1405, column: 9, scope: !6113)
!6115 = distinct !{!6115, !6116}
!6116 = !DILocation(line: 1405, column: 9, scope: !5612)
!6117 = !DILocation(line: 1413, column: 16, scope: !5612)
!6118 = !DILocation(line: 1413, column: 19, scope: !5612)
!6119 = !DILocation(line: 1413, column: 39, scope: !5612)
!6120 = !DILocation(line: 1413, column: 37, scope: !5612)
!6121 = !DILocation(line: 1413, column: 33, scope: !5612)
!6122 = !DILocation(line: 1413, column: 14, scope: !5612)
!6123 = !DILocation(line: 1414, column: 13, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !5612, file: !1665, line: 1414, column: 13)
!6125 = !DILocation(line: 1414, column: 21, scope: !6124)
!6126 = !DILocation(line: 1414, column: 24, scope: !6124)
!6127 = !DILocation(line: 1414, column: 27, scope: !6124)
!6128 = !DILocation(line: 1414, column: 42, scope: !6124)
!6129 = !DILocation(line: 1414, column: 45, scope: !6124)
!6130 = !DILocation(line: 1414, column: 55, scope: !6124)
!6131 = !DILocation(line: 1414, column: 40, scope: !6124)
!6132 = !DILocation(line: 1414, column: 18, scope: !6124)
!6133 = !DILocation(line: 1414, column: 59, scope: !6124)
!6134 = !DILocation(line: 1414, column: 62, scope: !6135)
!6135 = !DILexicalBlockFile(scope: !6124, file: !1665, discriminator: 1)
!6136 = !DILocation(line: 1414, column: 65, scope: !6135)
!6137 = !DILocation(line: 1414, column: 71, scope: !6135)
!6138 = !DILocation(line: 1414, column: 13, scope: !6135)
!6139 = !DILocation(line: 1415, column: 29, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6124, file: !1665, line: 1414, column: 79)
!6141 = !DILocation(line: 1415, column: 32, scope: !6140)
!6142 = !DILocation(line: 1415, column: 39, scope: !6140)
!6143 = !DILocation(line: 1415, column: 46, scope: !6140)
!6144 = !DILocation(line: 1415, column: 49, scope: !6140)
!6145 = !DILocation(line: 1415, column: 52, scope: !6140)
!6146 = !DILocation(line: 1415, column: 44, scope: !6140)
!6147 = !DILocation(line: 1415, column: 67, scope: !6140)
!6148 = !DILocation(line: 1415, column: 70, scope: !6140)
!6149 = !DILocation(line: 1415, column: 80, scope: !6140)
!6150 = !DILocation(line: 1415, column: 65, scope: !6140)
!6151 = !DILocation(line: 1415, column: 13, scope: !6140)
!6152 = !DILocation(line: 1416, column: 13, scope: !6140)
!6153 = !DILocation(line: 1416, column: 16, scope: !6140)
!6154 = !DILocation(line: 1416, column: 21, scope: !6140)
!6155 = !DILocation(line: 1416, column: 24, scope: !6140)
!6156 = !DILocation(line: 1417, column: 13, scope: !6140)
!6157 = !DILocation(line: 1417, column: 16, scope: !6140)
!6158 = !DILocation(line: 1417, column: 22, scope: !6140)
!6159 = !DILocation(line: 1417, column: 29, scope: !6140)
!6160 = !DILocation(line: 1418, column: 13, scope: !6140)
!6161 = !DILocation(line: 1418, column: 16, scope: !6140)
!6162 = !DILocation(line: 1418, column: 26, scope: !6140)
!6163 = !DILocation(line: 1419, column: 9, scope: !6140)
!6164 = !DILocation(line: 1420, column: 29, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6124, file: !1665, line: 1419, column: 16)
!6166 = !DILocation(line: 1420, column: 32, scope: !6165)
!6167 = !DILocation(line: 1420, column: 36, scope: !6165)
!6168 = !DILocation(line: 1420, column: 13, scope: !6165)
!6169 = !DILocation(line: 1422, column: 5, scope: !5612)
!6170 = !DILocation(line: 1423, column: 12, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !5613, file: !1665, line: 1422, column: 12)
!6172 = !DILocation(line: 1424, column: 9, scope: !6171)
!6173 = !DILocation(line: 1424, column: 12, scope: !6171)
!6174 = !DILocation(line: 1424, column: 22, scope: !6171)
!6175 = !DILocation(line: 1427, column: 5, scope: !5454)
!6176 = !DILocation(line: 1427, column: 12, scope: !6177)
!6177 = !DILexicalBlockFile(scope: !5472, file: !1665, discriminator: 1)
!6178 = !DILocation(line: 1427, column: 17, scope: !6177)
!6179 = !DILocation(line: 1427, column: 15, scope: !6177)
!6180 = !DILocation(line: 1427, column: 5, scope: !6177)
!6181 = !DILocation(line: 1428, column: 17, scope: !5470)
!6182 = !DILocation(line: 1428, column: 14, scope: !5470)
!6183 = !DILocation(line: 1428, column: 22, scope: !6184)
!6184 = !DILexicalBlockFile(scope: !5469, file: !1665, discriminator: 1)
!6185 = !DILocation(line: 1428, column: 27, scope: !6184)
!6186 = !DILocation(line: 1428, column: 30, scope: !6184)
!6187 = !DILocation(line: 1428, column: 25, scope: !6184)
!6188 = !DILocation(line: 1428, column: 9, scope: !6184)
!6189 = !DILocation(line: 1429, column: 34, scope: !5468)
!6190 = !DILocation(line: 1429, column: 18, scope: !5468)
!6191 = !DILocation(line: 1429, column: 30, scope: !5468)
!6192 = !DILocation(line: 1429, column: 21, scope: !5468)
!6193 = !DILocation(line: 1429, column: 15, scope: !5468)
!6194 = !DILocation(line: 1430, column: 40, scope: !5468)
!6195 = !DILocation(line: 1430, column: 43, scope: !5468)
!6196 = !DILocation(line: 1430, column: 24, scope: !5468)
!6197 = !DILocation(line: 1430, column: 22, scope: !5468)
!6198 = !DILocation(line: 1432, column: 18, scope: !5467)
!6199 = !DILocation(line: 1432, column: 21, scope: !5467)
!6200 = !DILocation(line: 1432, column: 17, scope: !5468)
!6201 = !DILocalVariable(name: "sc", scope: !6202, file: !1665, line: 1433, type: !1057)
!6202 = distinct !DILexicalBlock(scope: !5467, file: !1665, line: 1432, column: 26)
!6203 = !DILocation(line: 1433, column: 26, scope: !6202)
!6204 = !DILocalVariable(name: "slen", scope: !6202, file: !1665, line: 1434, type: !891)
!6205 = !DILocation(line: 1434, column: 21, scope: !6202)
!6206 = !DILocalVariable(name: "slen1", scope: !6202, file: !1665, line: 1434, type: !891)
!6207 = !DILocation(line: 1434, column: 27, scope: !6202)
!6208 = !DILocalVariable(name: "slen2", scope: !6202, file: !1665, line: 1434, type: !891)
!6209 = !DILocation(line: 1434, column: 34, scope: !6202)
!6210 = !DILocation(line: 1437, column: 39, scope: !6202)
!6211 = !DILocation(line: 1437, column: 42, scope: !6202)
!6212 = !DILocation(line: 1437, column: 25, scope: !6202)
!6213 = !DILocation(line: 1437, column: 23, scope: !6202)
!6214 = !DILocation(line: 1438, column: 39, scope: !6202)
!6215 = !DILocation(line: 1438, column: 42, scope: !6202)
!6216 = !DILocation(line: 1438, column: 25, scope: !6202)
!6217 = !DILocation(line: 1438, column: 23, scope: !6202)
!6218 = !DILocation(line: 1439, column: 17, scope: !6202)
!6219 = distinct !{!6219, !6218}
!6220 = !DILocation(line: 1439, column: 88, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !6222, file: !1665, discriminator: 1)
!6222 = distinct !DILexicalBlock(scope: !6202, file: !1665, line: 1439, column: 20)
!6223 = !DILocation(line: 1440, column: 21, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6202, file: !1665, line: 1440, column: 21)
!6225 = !DILocation(line: 1440, column: 24, scope: !6224)
!6226 = !DILocation(line: 1440, column: 35, scope: !6224)
!6227 = !DILocation(line: 1440, column: 21, scope: !6202)
!6228 = !DILocation(line: 1441, column: 25, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6224, file: !1665, line: 1440, column: 41)
!6230 = !DILocation(line: 1441, column: 28, scope: !6229)
!6231 = !DILocation(line: 1441, column: 23, scope: !6229)
!6232 = !DILocation(line: 1442, column: 23, scope: !6229)
!6233 = !DILocation(line: 1443, column: 25, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6229, file: !1665, line: 1443, column: 25)
!6235 = !DILocation(line: 1443, column: 25, scope: !6229)
!6236 = !DILocation(line: 1444, column: 32, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !1665, line: 1444, column: 25)
!6238 = distinct !DILexicalBlock(scope: !6234, file: !1665, line: 1443, column: 32)
!6239 = !DILocation(line: 1444, column: 30, scope: !6237)
!6240 = !DILocation(line: 1444, column: 37, scope: !6241)
!6241 = !DILexicalBlockFile(scope: !6242, file: !1665, discriminator: 1)
!6242 = distinct !DILexicalBlock(scope: !6237, file: !1665, line: 1444, column: 25)
!6243 = !DILocation(line: 1444, column: 41, scope: !6241)
!6244 = !DILocation(line: 1444, column: 39, scope: !6241)
!6245 = !DILocation(line: 1444, column: 25, scope: !6241)
!6246 = !DILocation(line: 1445, column: 63, scope: !6242)
!6247 = !DILocation(line: 1445, column: 66, scope: !6242)
!6248 = !DILocation(line: 1445, column: 70, scope: !6242)
!6249 = !DILocation(line: 1445, column: 53, scope: !6242)
!6250 = !DILocation(line: 1445, column: 47, scope: !6242)
!6251 = !DILocation(line: 1445, column: 29, scope: !6242)
!6252 = !DILocation(line: 1445, column: 32, scope: !6242)
!6253 = !DILocation(line: 1445, column: 51, scope: !6242)
!6254 = !DILocation(line: 1444, column: 45, scope: !6255)
!6255 = !DILexicalBlockFile(scope: !6242, file: !1665, discriminator: 2)
!6256 = !DILocation(line: 1444, column: 25, scope: !6255)
!6257 = distinct !{!6257, !6258}
!6258 = !DILocation(line: 1444, column: 25, scope: !6238)
!6259 = !DILocation(line: 1446, column: 21, scope: !6238)
!6260 = !DILocation(line: 1447, column: 32, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !1665, line: 1447, column: 25)
!6262 = distinct !DILexicalBlock(scope: !6234, file: !1665, line: 1446, column: 28)
!6263 = !DILocation(line: 1447, column: 30, scope: !6261)
!6264 = !DILocation(line: 1447, column: 37, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !6266, file: !1665, discriminator: 1)
!6266 = distinct !DILexicalBlock(scope: !6261, file: !1665, line: 1447, column: 25)
!6267 = !DILocation(line: 1447, column: 41, scope: !6265)
!6268 = !DILocation(line: 1447, column: 39, scope: !6265)
!6269 = !DILocation(line: 1447, column: 25, scope: !6265)
!6270 = !DILocation(line: 1448, column: 47, scope: !6266)
!6271 = !DILocation(line: 1448, column: 29, scope: !6266)
!6272 = !DILocation(line: 1448, column: 32, scope: !6266)
!6273 = !DILocation(line: 1448, column: 51, scope: !6266)
!6274 = !DILocation(line: 1447, column: 45, scope: !6275)
!6275 = !DILexicalBlockFile(scope: !6266, file: !1665, discriminator: 2)
!6276 = !DILocation(line: 1447, column: 25, scope: !6275)
!6277 = distinct !{!6277, !6278}
!6278 = !DILocation(line: 1447, column: 25, scope: !6262)
!6279 = !DILocation(line: 1450, column: 25, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6229, file: !1665, line: 1450, column: 25)
!6281 = !DILocation(line: 1450, column: 25, scope: !6229)
!6282 = !DILocation(line: 1451, column: 32, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !1665, line: 1451, column: 25)
!6284 = distinct !DILexicalBlock(scope: !6280, file: !1665, line: 1450, column: 32)
!6285 = !DILocation(line: 1451, column: 30, scope: !6283)
!6286 = !DILocation(line: 1451, column: 37, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !6288, file: !1665, discriminator: 1)
!6288 = distinct !DILexicalBlock(scope: !6283, file: !1665, line: 1451, column: 25)
!6289 = !DILocation(line: 1451, column: 39, scope: !6287)
!6290 = !DILocation(line: 1451, column: 25, scope: !6287)
!6291 = !DILocation(line: 1452, column: 63, scope: !6288)
!6292 = !DILocation(line: 1452, column: 66, scope: !6288)
!6293 = !DILocation(line: 1452, column: 70, scope: !6288)
!6294 = !DILocation(line: 1452, column: 53, scope: !6288)
!6295 = !DILocation(line: 1452, column: 47, scope: !6288)
!6296 = !DILocation(line: 1452, column: 29, scope: !6288)
!6297 = !DILocation(line: 1452, column: 32, scope: !6288)
!6298 = !DILocation(line: 1452, column: 51, scope: !6288)
!6299 = !DILocation(line: 1451, column: 46, scope: !6300)
!6300 = !DILexicalBlockFile(scope: !6288, file: !1665, discriminator: 2)
!6301 = !DILocation(line: 1451, column: 25, scope: !6300)
!6302 = distinct !{!6302, !6303}
!6303 = !DILocation(line: 1451, column: 25, scope: !6284)
!6304 = !DILocation(line: 1453, column: 32, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6284, file: !1665, line: 1453, column: 25)
!6306 = !DILocation(line: 1453, column: 30, scope: !6305)
!6307 = !DILocation(line: 1453, column: 37, scope: !6308)
!6308 = !DILexicalBlockFile(scope: !6309, file: !1665, discriminator: 1)
!6309 = distinct !DILexicalBlock(scope: !6305, file: !1665, line: 1453, column: 25)
!6310 = !DILocation(line: 1453, column: 39, scope: !6308)
!6311 = !DILocation(line: 1453, column: 25, scope: !6308)
!6312 = !DILocation(line: 1454, column: 47, scope: !6309)
!6313 = !DILocation(line: 1454, column: 29, scope: !6309)
!6314 = !DILocation(line: 1454, column: 32, scope: !6309)
!6315 = !DILocation(line: 1454, column: 51, scope: !6309)
!6316 = !DILocation(line: 1453, column: 45, scope: !6317)
!6317 = !DILexicalBlockFile(scope: !6309, file: !1665, discriminator: 2)
!6318 = !DILocation(line: 1453, column: 25, scope: !6317)
!6319 = distinct !{!6319, !6320}
!6320 = !DILocation(line: 1453, column: 25, scope: !6284)
!6321 = !DILocation(line: 1455, column: 21, scope: !6284)
!6322 = !DILocation(line: 1456, column: 32, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6324, file: !1665, line: 1456, column: 25)
!6324 = distinct !DILexicalBlock(scope: !6280, file: !1665, line: 1455, column: 28)
!6325 = !DILocation(line: 1456, column: 30, scope: !6323)
!6326 = !DILocation(line: 1456, column: 37, scope: !6327)
!6327 = !DILexicalBlockFile(scope: !6328, file: !1665, discriminator: 1)
!6328 = distinct !DILexicalBlock(scope: !6323, file: !1665, line: 1456, column: 25)
!6329 = !DILocation(line: 1456, column: 39, scope: !6327)
!6330 = !DILocation(line: 1456, column: 25, scope: !6327)
!6331 = !DILocation(line: 1457, column: 47, scope: !6328)
!6332 = !DILocation(line: 1457, column: 29, scope: !6328)
!6333 = !DILocation(line: 1457, column: 32, scope: !6328)
!6334 = !DILocation(line: 1457, column: 51, scope: !6328)
!6335 = !DILocation(line: 1456, column: 46, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !6328, file: !1665, discriminator: 2)
!6337 = !DILocation(line: 1456, column: 25, scope: !6336)
!6338 = distinct !{!6338, !6339}
!6339 = !DILocation(line: 1456, column: 25, scope: !6324)
!6340 = !DILocation(line: 1459, column: 17, scope: !6229)
!6341 = !DILocation(line: 1460, column: 38, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6224, file: !1665, line: 1459, column: 24)
!6343 = !DILocation(line: 1460, column: 26, scope: !6342)
!6344 = !DILocation(line: 1460, column: 29, scope: !6342)
!6345 = !DILocation(line: 1460, column: 45, scope: !6342)
!6346 = !DILocation(line: 1460, column: 24, scope: !6342)
!6347 = !DILocation(line: 1461, column: 23, scope: !6342)
!6348 = !DILocation(line: 1462, column: 28, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6342, file: !1665, line: 1462, column: 21)
!6350 = !DILocation(line: 1462, column: 26, scope: !6349)
!6351 = !DILocation(line: 1462, column: 33, scope: !6352)
!6352 = !DILexicalBlockFile(scope: !6353, file: !1665, discriminator: 1)
!6353 = distinct !DILexicalBlock(scope: !6349, file: !1665, line: 1462, column: 21)
!6354 = !DILocation(line: 1462, column: 35, scope: !6352)
!6355 = !DILocation(line: 1462, column: 21, scope: !6352)
!6356 = !DILocation(line: 1463, column: 29, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !1665, line: 1462, column: 45)
!6358 = !DILocation(line: 1463, column: 31, scope: !6357)
!6359 = !DILocation(line: 1463, column: 27, scope: !6357)
!6360 = !DILocation(line: 1464, column: 30, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6357, file: !1665, line: 1464, column: 29)
!6362 = !DILocation(line: 1464, column: 33, scope: !6361)
!6363 = !DILocation(line: 1464, column: 49, scope: !6361)
!6364 = !DILocation(line: 1464, column: 46, scope: !6361)
!6365 = !DILocation(line: 1464, column: 39, scope: !6361)
!6366 = !DILocation(line: 1464, column: 53, scope: !6361)
!6367 = !DILocation(line: 1464, column: 29, scope: !6357)
!6368 = !DILocation(line: 1465, column: 37, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6361, file: !1665, line: 1464, column: 59)
!6370 = !DILocation(line: 1465, column: 39, scope: !6369)
!6371 = !DILocation(line: 1465, column: 36, scope: !6369)
!6372 = !DILocation(line: 1465, column: 46, scope: !6373)
!6373 = !DILexicalBlockFile(scope: !6369, file: !1665, discriminator: 1)
!6374 = !DILocation(line: 1465, column: 36, scope: !6373)
!6375 = !DILocation(line: 1465, column: 54, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6369, file: !1665, discriminator: 2)
!6377 = !DILocation(line: 1465, column: 36, scope: !6376)
!6378 = !DILocation(line: 1465, column: 36, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6369, file: !1665, discriminator: 3)
!6380 = !DILocation(line: 1465, column: 34, scope: !6379)
!6381 = !DILocation(line: 1466, column: 33, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6369, file: !1665, line: 1466, column: 33)
!6383 = !DILocation(line: 1466, column: 33, scope: !6369)
!6384 = !DILocation(line: 1467, column: 40, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !1665, line: 1467, column: 33)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !1665, line: 1466, column: 39)
!6387 = !DILocation(line: 1467, column: 38, scope: !6385)
!6388 = !DILocation(line: 1467, column: 45, scope: !6389)
!6389 = !DILexicalBlockFile(scope: !6390, file: !1665, discriminator: 1)
!6390 = distinct !DILexicalBlock(scope: !6385, file: !1665, line: 1467, column: 33)
!6391 = !DILocation(line: 1467, column: 49, scope: !6389)
!6392 = !DILocation(line: 1467, column: 47, scope: !6389)
!6393 = !DILocation(line: 1467, column: 33, scope: !6389)
!6394 = !DILocation(line: 1468, column: 71, scope: !6390)
!6395 = !DILocation(line: 1468, column: 74, scope: !6390)
!6396 = !DILocation(line: 1468, column: 78, scope: !6390)
!6397 = !DILocation(line: 1468, column: 61, scope: !6390)
!6398 = !DILocation(line: 1468, column: 55, scope: !6390)
!6399 = !DILocation(line: 1468, column: 37, scope: !6390)
!6400 = !DILocation(line: 1468, column: 40, scope: !6390)
!6401 = !DILocation(line: 1468, column: 59, scope: !6390)
!6402 = !DILocation(line: 1467, column: 53, scope: !6403)
!6403 = !DILexicalBlockFile(scope: !6390, file: !1665, discriminator: 2)
!6404 = !DILocation(line: 1467, column: 33, scope: !6403)
!6405 = distinct !{!6405, !6406}
!6406 = !DILocation(line: 1467, column: 33, scope: !6386)
!6407 = !DILocation(line: 1469, column: 29, scope: !6386)
!6408 = !DILocation(line: 1470, column: 40, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !1665, line: 1470, column: 33)
!6410 = distinct !DILexicalBlock(scope: !6382, file: !1665, line: 1469, column: 36)
!6411 = !DILocation(line: 1470, column: 38, scope: !6409)
!6412 = !DILocation(line: 1470, column: 45, scope: !6413)
!6413 = !DILexicalBlockFile(scope: !6414, file: !1665, discriminator: 1)
!6414 = distinct !DILexicalBlock(scope: !6409, file: !1665, line: 1470, column: 33)
!6415 = !DILocation(line: 1470, column: 49, scope: !6413)
!6416 = !DILocation(line: 1470, column: 47, scope: !6413)
!6417 = !DILocation(line: 1470, column: 33, scope: !6413)
!6418 = !DILocation(line: 1471, column: 55, scope: !6414)
!6419 = !DILocation(line: 1471, column: 37, scope: !6414)
!6420 = !DILocation(line: 1471, column: 40, scope: !6414)
!6421 = !DILocation(line: 1471, column: 59, scope: !6414)
!6422 = !DILocation(line: 1470, column: 53, scope: !6423)
!6423 = !DILexicalBlockFile(scope: !6414, file: !1665, discriminator: 2)
!6424 = !DILocation(line: 1470, column: 33, scope: !6423)
!6425 = distinct !{!6425, !6426}
!6426 = !DILocation(line: 1470, column: 33, scope: !6410)
!6427 = !DILocation(line: 1473, column: 25, scope: !6369)
!6428 = !DILocation(line: 1475, column: 36, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !1665, line: 1475, column: 29)
!6430 = distinct !DILexicalBlock(scope: !6361, file: !1665, line: 1473, column: 32)
!6431 = !DILocation(line: 1475, column: 34, scope: !6429)
!6432 = !DILocation(line: 1475, column: 41, scope: !6433)
!6433 = !DILexicalBlockFile(scope: !6434, file: !1665, discriminator: 1)
!6434 = distinct !DILexicalBlock(scope: !6429, file: !1665, line: 1475, column: 29)
!6435 = !DILocation(line: 1475, column: 45, scope: !6433)
!6436 = !DILocation(line: 1475, column: 43, scope: !6433)
!6437 = !DILocation(line: 1475, column: 29, scope: !6433)
!6438 = !DILocation(line: 1476, column: 58, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6434, file: !1665, line: 1475, column: 53)
!6440 = !DILocation(line: 1476, column: 55, scope: !6439)
!6441 = !DILocation(line: 1476, column: 50, scope: !6439)
!6442 = !DILocation(line: 1476, column: 33, scope: !6439)
!6443 = !DILocation(line: 1476, column: 36, scope: !6439)
!6444 = !DILocation(line: 1476, column: 53, scope: !6439)
!6445 = !DILocation(line: 1477, column: 34, scope: !6439)
!6446 = !DILocation(line: 1478, column: 29, scope: !6439)
!6447 = !DILocation(line: 1475, column: 49, scope: !6448)
!6448 = !DILexicalBlockFile(scope: !6434, file: !1665, discriminator: 2)
!6449 = !DILocation(line: 1475, column: 29, scope: !6448)
!6450 = distinct !{!6450, !6451}
!6451 = !DILocation(line: 1475, column: 29, scope: !6430)
!6452 = !DILocation(line: 1480, column: 21, scope: !6357)
!6453 = !DILocation(line: 1462, column: 41, scope: !6454)
!6454 = !DILexicalBlockFile(scope: !6353, file: !1665, discriminator: 2)
!6455 = !DILocation(line: 1462, column: 21, scope: !6454)
!6456 = distinct !{!6456, !6457}
!6457 = !DILocation(line: 1462, column: 21, scope: !6342)
!6458 = !DILocation(line: 1481, column: 39, scope: !6342)
!6459 = !DILocation(line: 1481, column: 21, scope: !6342)
!6460 = !DILocation(line: 1481, column: 24, scope: !6342)
!6461 = !DILocation(line: 1481, column: 43, scope: !6342)
!6462 = !DILocation(line: 1483, column: 13, scope: !6202)
!6463 = !DILocalVariable(name: "tindex", scope: !5466, file: !1665, line: 1484, type: !891)
!6464 = !DILocation(line: 1484, column: 21, scope: !5466)
!6465 = !DILocalVariable(name: "tindex2", scope: !5466, file: !1665, line: 1484, type: !891)
!6466 = !DILocation(line: 1484, column: 29, scope: !5466)
!6467 = !DILocalVariable(name: "slen", scope: !5466, file: !1665, line: 1484, type: !1165)
!6468 = !DILocation(line: 1484, column: 38, scope: !5466)
!6469 = !DILocalVariable(name: "sl", scope: !5466, file: !1665, line: 1484, type: !891)
!6470 = !DILocation(line: 1484, column: 47, scope: !5466)
!6471 = !DILocalVariable(name: "sf", scope: !5466, file: !1665, line: 1484, type: !891)
!6472 = !DILocation(line: 1484, column: 51, scope: !5466)
!6473 = !DILocation(line: 1487, column: 21, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !5466, file: !1665, line: 1487, column: 21)
!6475 = !DILocation(line: 1487, column: 24, scope: !6474)
!6476 = !DILocation(line: 1487, column: 35, scope: !6474)
!6477 = !DILocation(line: 1487, column: 21, scope: !5466)
!6478 = !DILocation(line: 1488, column: 30, scope: !6474)
!6479 = !DILocation(line: 1488, column: 33, scope: !6474)
!6480 = !DILocation(line: 1488, column: 28, scope: !6474)
!6481 = !DILocation(line: 1488, column: 21, scope: !6474)
!6482 = !DILocation(line: 1490, column: 28, scope: !6474)
!6483 = !DILocation(line: 1492, column: 22, scope: !5466)
!6484 = !DILocation(line: 1492, column: 25, scope: !5466)
!6485 = !DILocation(line: 1492, column: 20, scope: !5466)
!6486 = !DILocation(line: 1493, column: 22, scope: !5465)
!6487 = !DILocation(line: 1493, column: 25, scope: !5465)
!6488 = !DILocation(line: 1493, column: 34, scope: !5465)
!6489 = !DILocation(line: 1493, column: 39, scope: !5465)
!6490 = !DILocation(line: 1493, column: 42, scope: !6491)
!6491 = !DILexicalBlockFile(scope: !5465, file: !1665, discriminator: 1)
!6492 = !DILocation(line: 1493, column: 45, scope: !6491)
!6493 = !DILocation(line: 1493, column: 21, scope: !6491)
!6494 = !DILocation(line: 1495, column: 24, scope: !5558)
!6495 = !DILocation(line: 1496, column: 25, scope: !5557)
!6496 = !DILocation(line: 1496, column: 28, scope: !5557)
!6497 = !DILocation(line: 1496, column: 25, scope: !5558)
!6498 = !DILocation(line: 1497, column: 39, scope: !5590)
!6499 = !DILocation(line: 1497, column: 45, scope: !5590)
!6500 = !DILocation(line: 1497, column: 25, scope: !5590)
!6501 = !DILocation(line: 778, column: 9, scope: !5484, inlinedAt: !5589)
!6502 = !DILocation(line: 778, column: 12, scope: !5484, inlinedAt: !5589)
!6503 = !DILocation(line: 778, column: 9, scope: !5456, inlinedAt: !5589)
!6504 = !DILocation(line: 778, column: 29, scope: !6505, inlinedAt: !5589)
!6505 = !DILexicalBlockFile(scope: !5483, file: !1665, discriminator: 1)
!6506 = !DILocation(line: 778, column: 32, scope: !6505, inlinedAt: !5589)
!6507 = !DILocation(line: 778, column: 39, scope: !6505, inlinedAt: !5589)
!6508 = !DILocation(line: 778, column: 24, scope: !6505, inlinedAt: !5589)
!6509 = !DILocation(line: 778, column: 55, scope: !6505, inlinedAt: !5589)
!6510 = !DILocation(line: 778, column: 64, scope: !6505, inlinedAt: !5589)
!6511 = !DILocation(line: 778, column: 62, scope: !6505, inlinedAt: !5589)
!6512 = !DILocation(line: 778, column: 58, scope: !6505, inlinedAt: !5589)
!6513 = !DILocation(line: 778, column: 45, scope: !6505, inlinedAt: !5589)
!6514 = !DILocation(line: 778, column: 53, scope: !6505, inlinedAt: !5589)
!6515 = !DILocation(line: 778, column: 72, scope: !6505, inlinedAt: !5589)
!6516 = !DILocation(line: 778, column: 70, scope: !6505, inlinedAt: !5589)
!6517 = !DILocation(line: 778, column: 75, scope: !6505, inlinedAt: !5589)
!6518 = !DILocation(line: 778, column: 86, scope: !6519, inlinedAt: !5589)
!6519 = !DILexicalBlockFile(scope: !5489, file: !1665, discriminator: 2)
!6520 = !DILocation(line: 778, column: 89, scope: !6519, inlinedAt: !5589)
!6521 = !DILocation(line: 778, column: 107, scope: !6522, inlinedAt: !5589)
!6522 = !DILexicalBlockFile(scope: !6523, file: !1665, discriminator: 3)
!6523 = distinct !DILexicalBlock(scope: !5489, file: !1665, line: 778, column: 95)
!6524 = !DILocation(line: 778, column: 110, scope: !6522, inlinedAt: !5589)
!6525 = !DILocation(line: 778, column: 97, scope: !6522, inlinedAt: !5589)
!6526 = !DILocation(line: 778, column: 105, scope: !6522, inlinedAt: !5589)
!6527 = !DILocation(line: 778, column: 118, scope: !6522, inlinedAt: !5589)
!6528 = !DILocation(line: 778, column: 125, scope: !6522, inlinedAt: !5589)
!6529 = !DILocation(line: 778, column: 136, scope: !6530, inlinedAt: !5589)
!6530 = !DILexicalBlockFile(scope: !5488, file: !1665, discriminator: 4)
!6531 = !DILocation(line: 778, column: 139, scope: !6530, inlinedAt: !5589)
!6532 = !DILocation(line: 778, column: 156, scope: !6533, inlinedAt: !5589)
!6533 = !DILexicalBlockFile(scope: !5487, file: !1665, discriminator: 5)
!6534 = !DILocation(line: 778, column: 159, scope: !6533, inlinedAt: !5589)
!6535 = !DILocation(line: 778, column: 166, scope: !6533, inlinedAt: !5589)
!6536 = !DILocation(line: 778, column: 151, scope: !6533, inlinedAt: !5589)
!6537 = !DILocation(line: 778, column: 183, scope: !6533, inlinedAt: !5589)
!6538 = !DILocation(line: 778, column: 192, scope: !6533, inlinedAt: !5589)
!6539 = !DILocation(line: 778, column: 190, scope: !6533, inlinedAt: !5589)
!6540 = !DILocation(line: 778, column: 186, scope: !6533, inlinedAt: !5589)
!6541 = !DILocation(line: 778, column: 173, scope: !6533, inlinedAt: !5589)
!6542 = !DILocation(line: 778, column: 181, scope: !6533, inlinedAt: !5589)
!6543 = !DILocation(line: 778, column: 200, scope: !6533, inlinedAt: !5589)
!6544 = !DILocation(line: 778, column: 198, scope: !6533, inlinedAt: !5589)
!6545 = !DILocation(line: 778, column: 203, scope: !6533, inlinedAt: !5589)
!6546 = !DILocation(line: 778, column: 214, scope: !6547, inlinedAt: !5589)
!6547 = !DILexicalBlockFile(scope: !5493, file: !1665, discriminator: 6)
!6548 = !DILocation(line: 778, column: 217, scope: !6547, inlinedAt: !5589)
!6549 = !DILocation(line: 778, column: 234, scope: !6550, inlinedAt: !5589)
!6550 = !DILexicalBlockFile(scope: !5492, file: !1665, discriminator: 7)
!6551 = !DILocation(line: 778, column: 237, scope: !6550, inlinedAt: !5589)
!6552 = !DILocation(line: 778, column: 244, scope: !6550, inlinedAt: !5589)
!6553 = !DILocation(line: 778, column: 229, scope: !6550, inlinedAt: !5589)
!6554 = !DILocation(line: 778, column: 261, scope: !6550, inlinedAt: !5589)
!6555 = !DILocation(line: 778, column: 270, scope: !6550, inlinedAt: !5589)
!6556 = !DILocation(line: 778, column: 268, scope: !6550, inlinedAt: !5589)
!6557 = !DILocation(line: 778, column: 264, scope: !6550, inlinedAt: !5589)
!6558 = !DILocation(line: 778, column: 251, scope: !6550, inlinedAt: !5589)
!6559 = !DILocation(line: 778, column: 259, scope: !6550, inlinedAt: !5589)
!6560 = !DILocation(line: 778, column: 278, scope: !6550, inlinedAt: !5589)
!6561 = !DILocation(line: 778, column: 276, scope: !6550, inlinedAt: !5589)
!6562 = !DILocation(line: 778, column: 281, scope: !6550, inlinedAt: !5589)
!6563 = !DILocation(line: 778, column: 290, scope: !6564, inlinedAt: !5589)
!6564 = !DILexicalBlockFile(scope: !6565, file: !1665, discriminator: 8)
!6565 = distinct !DILexicalBlock(scope: !5493, file: !1665, line: 778, column: 288)
!6566 = !DILocation(line: 778, column: 298, scope: !6564, inlinedAt: !5589)
!6567 = !DILocation(line: 779, column: 9, scope: !5497, inlinedAt: !5589)
!6568 = !DILocation(line: 779, column: 12, scope: !5497, inlinedAt: !5589)
!6569 = !DILocation(line: 779, column: 9, scope: !5456, inlinedAt: !5589)
!6570 = !DILocation(line: 779, column: 29, scope: !6571, inlinedAt: !5589)
!6571 = !DILexicalBlockFile(scope: !5496, file: !1665, discriminator: 1)
!6572 = !DILocation(line: 779, column: 32, scope: !6571, inlinedAt: !5589)
!6573 = !DILocation(line: 779, column: 39, scope: !6571, inlinedAt: !5589)
!6574 = !DILocation(line: 779, column: 24, scope: !6571, inlinedAt: !5589)
!6575 = !DILocation(line: 779, column: 55, scope: !6571, inlinedAt: !5589)
!6576 = !DILocation(line: 779, column: 64, scope: !6571, inlinedAt: !5589)
!6577 = !DILocation(line: 779, column: 62, scope: !6571, inlinedAt: !5589)
!6578 = !DILocation(line: 779, column: 58, scope: !6571, inlinedAt: !5589)
!6579 = !DILocation(line: 779, column: 45, scope: !6571, inlinedAt: !5589)
!6580 = !DILocation(line: 779, column: 53, scope: !6571, inlinedAt: !5589)
!6581 = !DILocation(line: 779, column: 72, scope: !6571, inlinedAt: !5589)
!6582 = !DILocation(line: 779, column: 70, scope: !6571, inlinedAt: !5589)
!6583 = !DILocation(line: 779, column: 75, scope: !6571, inlinedAt: !5589)
!6584 = !DILocation(line: 779, column: 86, scope: !6585, inlinedAt: !5589)
!6585 = !DILexicalBlockFile(scope: !5502, file: !1665, discriminator: 2)
!6586 = !DILocation(line: 779, column: 89, scope: !6585, inlinedAt: !5589)
!6587 = !DILocation(line: 779, column: 107, scope: !6588, inlinedAt: !5589)
!6588 = !DILexicalBlockFile(scope: !6589, file: !1665, discriminator: 3)
!6589 = distinct !DILexicalBlock(scope: !5502, file: !1665, line: 779, column: 95)
!6590 = !DILocation(line: 779, column: 110, scope: !6588, inlinedAt: !5589)
!6591 = !DILocation(line: 779, column: 97, scope: !6588, inlinedAt: !5589)
!6592 = !DILocation(line: 779, column: 105, scope: !6588, inlinedAt: !5589)
!6593 = !DILocation(line: 779, column: 118, scope: !6588, inlinedAt: !5589)
!6594 = !DILocation(line: 779, column: 125, scope: !6588, inlinedAt: !5589)
!6595 = !DILocation(line: 779, column: 136, scope: !6596, inlinedAt: !5589)
!6596 = !DILexicalBlockFile(scope: !5501, file: !1665, discriminator: 4)
!6597 = !DILocation(line: 779, column: 139, scope: !6596, inlinedAt: !5589)
!6598 = !DILocation(line: 779, column: 156, scope: !6599, inlinedAt: !5589)
!6599 = !DILexicalBlockFile(scope: !5500, file: !1665, discriminator: 5)
!6600 = !DILocation(line: 779, column: 159, scope: !6599, inlinedAt: !5589)
!6601 = !DILocation(line: 779, column: 166, scope: !6599, inlinedAt: !5589)
!6602 = !DILocation(line: 779, column: 151, scope: !6599, inlinedAt: !5589)
!6603 = !DILocation(line: 779, column: 183, scope: !6599, inlinedAt: !5589)
!6604 = !DILocation(line: 779, column: 192, scope: !6599, inlinedAt: !5589)
!6605 = !DILocation(line: 779, column: 190, scope: !6599, inlinedAt: !5589)
!6606 = !DILocation(line: 779, column: 186, scope: !6599, inlinedAt: !5589)
!6607 = !DILocation(line: 779, column: 173, scope: !6599, inlinedAt: !5589)
!6608 = !DILocation(line: 779, column: 181, scope: !6599, inlinedAt: !5589)
!6609 = !DILocation(line: 779, column: 200, scope: !6599, inlinedAt: !5589)
!6610 = !DILocation(line: 779, column: 198, scope: !6599, inlinedAt: !5589)
!6611 = !DILocation(line: 779, column: 203, scope: !6599, inlinedAt: !5589)
!6612 = !DILocation(line: 779, column: 214, scope: !6613, inlinedAt: !5589)
!6613 = !DILexicalBlockFile(scope: !5506, file: !1665, discriminator: 6)
!6614 = !DILocation(line: 779, column: 217, scope: !6613, inlinedAt: !5589)
!6615 = !DILocation(line: 779, column: 234, scope: !6616, inlinedAt: !5589)
!6616 = !DILexicalBlockFile(scope: !5505, file: !1665, discriminator: 7)
!6617 = !DILocation(line: 779, column: 237, scope: !6616, inlinedAt: !5589)
!6618 = !DILocation(line: 779, column: 244, scope: !6616, inlinedAt: !5589)
!6619 = !DILocation(line: 779, column: 229, scope: !6616, inlinedAt: !5589)
!6620 = !DILocation(line: 779, column: 261, scope: !6616, inlinedAt: !5589)
!6621 = !DILocation(line: 779, column: 270, scope: !6616, inlinedAt: !5589)
!6622 = !DILocation(line: 779, column: 268, scope: !6616, inlinedAt: !5589)
!6623 = !DILocation(line: 779, column: 264, scope: !6616, inlinedAt: !5589)
!6624 = !DILocation(line: 779, column: 251, scope: !6616, inlinedAt: !5589)
!6625 = !DILocation(line: 779, column: 259, scope: !6616, inlinedAt: !5589)
!6626 = !DILocation(line: 779, column: 278, scope: !6616, inlinedAt: !5589)
!6627 = !DILocation(line: 779, column: 276, scope: !6616, inlinedAt: !5589)
!6628 = !DILocation(line: 779, column: 281, scope: !6616, inlinedAt: !5589)
!6629 = !DILocation(line: 779, column: 290, scope: !6630, inlinedAt: !5589)
!6630 = !DILexicalBlockFile(scope: !6631, file: !1665, discriminator: 8)
!6631 = distinct !DILexicalBlock(scope: !5506, file: !1665, line: 779, column: 288)
!6632 = !DILocation(line: 779, column: 298, scope: !6630, inlinedAt: !5589)
!6633 = !DILocation(line: 780, column: 9, scope: !5510, inlinedAt: !5589)
!6634 = !DILocation(line: 780, column: 12, scope: !5510, inlinedAt: !5589)
!6635 = !DILocation(line: 780, column: 9, scope: !5456, inlinedAt: !5589)
!6636 = !DILocation(line: 780, column: 29, scope: !6637, inlinedAt: !5589)
!6637 = !DILexicalBlockFile(scope: !5509, file: !1665, discriminator: 1)
!6638 = !DILocation(line: 780, column: 32, scope: !6637, inlinedAt: !5589)
!6639 = !DILocation(line: 780, column: 39, scope: !6637, inlinedAt: !5589)
!6640 = !DILocation(line: 780, column: 24, scope: !6637, inlinedAt: !5589)
!6641 = !DILocation(line: 780, column: 55, scope: !6637, inlinedAt: !5589)
!6642 = !DILocation(line: 780, column: 64, scope: !6637, inlinedAt: !5589)
!6643 = !DILocation(line: 780, column: 62, scope: !6637, inlinedAt: !5589)
!6644 = !DILocation(line: 780, column: 58, scope: !6637, inlinedAt: !5589)
!6645 = !DILocation(line: 780, column: 45, scope: !6637, inlinedAt: !5589)
!6646 = !DILocation(line: 780, column: 53, scope: !6637, inlinedAt: !5589)
!6647 = !DILocation(line: 780, column: 72, scope: !6637, inlinedAt: !5589)
!6648 = !DILocation(line: 780, column: 70, scope: !6637, inlinedAt: !5589)
!6649 = !DILocation(line: 780, column: 75, scope: !6637, inlinedAt: !5589)
!6650 = !DILocation(line: 780, column: 86, scope: !6651, inlinedAt: !5589)
!6651 = !DILexicalBlockFile(scope: !5515, file: !1665, discriminator: 2)
!6652 = !DILocation(line: 780, column: 89, scope: !6651, inlinedAt: !5589)
!6653 = !DILocation(line: 780, column: 107, scope: !6654, inlinedAt: !5589)
!6654 = !DILexicalBlockFile(scope: !6655, file: !1665, discriminator: 3)
!6655 = distinct !DILexicalBlock(scope: !5515, file: !1665, line: 780, column: 95)
!6656 = !DILocation(line: 780, column: 110, scope: !6654, inlinedAt: !5589)
!6657 = !DILocation(line: 780, column: 97, scope: !6654, inlinedAt: !5589)
!6658 = !DILocation(line: 780, column: 105, scope: !6654, inlinedAt: !5589)
!6659 = !DILocation(line: 780, column: 118, scope: !6654, inlinedAt: !5589)
!6660 = !DILocation(line: 780, column: 125, scope: !6654, inlinedAt: !5589)
!6661 = !DILocation(line: 780, column: 136, scope: !6662, inlinedAt: !5589)
!6662 = !DILexicalBlockFile(scope: !5514, file: !1665, discriminator: 4)
!6663 = !DILocation(line: 780, column: 139, scope: !6662, inlinedAt: !5589)
!6664 = !DILocation(line: 780, column: 156, scope: !6665, inlinedAt: !5589)
!6665 = !DILexicalBlockFile(scope: !5513, file: !1665, discriminator: 5)
!6666 = !DILocation(line: 780, column: 159, scope: !6665, inlinedAt: !5589)
!6667 = !DILocation(line: 780, column: 166, scope: !6665, inlinedAt: !5589)
!6668 = !DILocation(line: 780, column: 151, scope: !6665, inlinedAt: !5589)
!6669 = !DILocation(line: 780, column: 183, scope: !6665, inlinedAt: !5589)
!6670 = !DILocation(line: 780, column: 192, scope: !6665, inlinedAt: !5589)
!6671 = !DILocation(line: 780, column: 190, scope: !6665, inlinedAt: !5589)
!6672 = !DILocation(line: 780, column: 186, scope: !6665, inlinedAt: !5589)
!6673 = !DILocation(line: 780, column: 173, scope: !6665, inlinedAt: !5589)
!6674 = !DILocation(line: 780, column: 181, scope: !6665, inlinedAt: !5589)
!6675 = !DILocation(line: 780, column: 200, scope: !6665, inlinedAt: !5589)
!6676 = !DILocation(line: 780, column: 198, scope: !6665, inlinedAt: !5589)
!6677 = !DILocation(line: 780, column: 203, scope: !6665, inlinedAt: !5589)
!6678 = !DILocation(line: 780, column: 214, scope: !6679, inlinedAt: !5589)
!6679 = !DILexicalBlockFile(scope: !5519, file: !1665, discriminator: 6)
!6680 = !DILocation(line: 780, column: 217, scope: !6679, inlinedAt: !5589)
!6681 = !DILocation(line: 780, column: 234, scope: !6682, inlinedAt: !5589)
!6682 = !DILexicalBlockFile(scope: !5518, file: !1665, discriminator: 7)
!6683 = !DILocation(line: 780, column: 237, scope: !6682, inlinedAt: !5589)
!6684 = !DILocation(line: 780, column: 244, scope: !6682, inlinedAt: !5589)
!6685 = !DILocation(line: 780, column: 229, scope: !6682, inlinedAt: !5589)
!6686 = !DILocation(line: 780, column: 261, scope: !6682, inlinedAt: !5589)
!6687 = !DILocation(line: 780, column: 270, scope: !6682, inlinedAt: !5589)
!6688 = !DILocation(line: 780, column: 268, scope: !6682, inlinedAt: !5589)
!6689 = !DILocation(line: 780, column: 264, scope: !6682, inlinedAt: !5589)
!6690 = !DILocation(line: 780, column: 251, scope: !6682, inlinedAt: !5589)
!6691 = !DILocation(line: 780, column: 259, scope: !6682, inlinedAt: !5589)
!6692 = !DILocation(line: 780, column: 278, scope: !6682, inlinedAt: !5589)
!6693 = !DILocation(line: 780, column: 276, scope: !6682, inlinedAt: !5589)
!6694 = !DILocation(line: 780, column: 281, scope: !6682, inlinedAt: !5589)
!6695 = !DILocation(line: 780, column: 290, scope: !6696, inlinedAt: !5589)
!6696 = !DILexicalBlockFile(scope: !6697, file: !1665, discriminator: 8)
!6697 = distinct !DILexicalBlock(scope: !5519, file: !1665, line: 780, column: 288)
!6698 = !DILocation(line: 780, column: 298, scope: !6696, inlinedAt: !5589)
!6699 = !DILocation(line: 781, column: 15, scope: !5456, inlinedAt: !5589)
!6700 = !DILocation(line: 781, column: 5, scope: !5456, inlinedAt: !5589)
!6701 = !DILocation(line: 781, column: 13, scope: !5456, inlinedAt: !5589)
!6702 = !DILocation(line: 1498, column: 33, scope: !5590)
!6703 = !DILocation(line: 1499, column: 21, scope: !5590)
!6704 = !DILocation(line: 1499, column: 32, scope: !6705)
!6705 = !DILexicalBlockFile(scope: !5556, file: !1665, discriminator: 1)
!6706 = !DILocation(line: 1499, column: 35, scope: !6705)
!6707 = !DILocation(line: 1500, column: 39, scope: !5574)
!6708 = !DILocation(line: 1500, column: 45, scope: !5574)
!6709 = !DILocation(line: 1500, column: 48, scope: !5574)
!6710 = !DILocation(line: 1500, column: 25, scope: !5574)
!6711 = !DILocation(line: 778, column: 9, scope: !5484, inlinedAt: !5573)
!6712 = !DILocation(line: 778, column: 12, scope: !5484, inlinedAt: !5573)
!6713 = !DILocation(line: 778, column: 9, scope: !5456, inlinedAt: !5573)
!6714 = !DILocation(line: 778, column: 29, scope: !6505, inlinedAt: !5573)
!6715 = !DILocation(line: 778, column: 32, scope: !6505, inlinedAt: !5573)
!6716 = !DILocation(line: 778, column: 39, scope: !6505, inlinedAt: !5573)
!6717 = !DILocation(line: 778, column: 24, scope: !6505, inlinedAt: !5573)
!6718 = !DILocation(line: 778, column: 55, scope: !6505, inlinedAt: !5573)
!6719 = !DILocation(line: 778, column: 64, scope: !6505, inlinedAt: !5573)
!6720 = !DILocation(line: 778, column: 62, scope: !6505, inlinedAt: !5573)
!6721 = !DILocation(line: 778, column: 58, scope: !6505, inlinedAt: !5573)
!6722 = !DILocation(line: 778, column: 45, scope: !6505, inlinedAt: !5573)
!6723 = !DILocation(line: 778, column: 53, scope: !6505, inlinedAt: !5573)
!6724 = !DILocation(line: 778, column: 72, scope: !6505, inlinedAt: !5573)
!6725 = !DILocation(line: 778, column: 70, scope: !6505, inlinedAt: !5573)
!6726 = !DILocation(line: 778, column: 75, scope: !6505, inlinedAt: !5573)
!6727 = !DILocation(line: 778, column: 86, scope: !6519, inlinedAt: !5573)
!6728 = !DILocation(line: 778, column: 89, scope: !6519, inlinedAt: !5573)
!6729 = !DILocation(line: 778, column: 107, scope: !6522, inlinedAt: !5573)
!6730 = !DILocation(line: 778, column: 110, scope: !6522, inlinedAt: !5573)
!6731 = !DILocation(line: 778, column: 97, scope: !6522, inlinedAt: !5573)
!6732 = !DILocation(line: 778, column: 105, scope: !6522, inlinedAt: !5573)
!6733 = !DILocation(line: 778, column: 118, scope: !6522, inlinedAt: !5573)
!6734 = !DILocation(line: 778, column: 125, scope: !6522, inlinedAt: !5573)
!6735 = !DILocation(line: 778, column: 136, scope: !6530, inlinedAt: !5573)
!6736 = !DILocation(line: 778, column: 139, scope: !6530, inlinedAt: !5573)
!6737 = !DILocation(line: 778, column: 156, scope: !6533, inlinedAt: !5573)
!6738 = !DILocation(line: 778, column: 159, scope: !6533, inlinedAt: !5573)
!6739 = !DILocation(line: 778, column: 166, scope: !6533, inlinedAt: !5573)
!6740 = !DILocation(line: 778, column: 151, scope: !6533, inlinedAt: !5573)
!6741 = !DILocation(line: 778, column: 183, scope: !6533, inlinedAt: !5573)
!6742 = !DILocation(line: 778, column: 192, scope: !6533, inlinedAt: !5573)
!6743 = !DILocation(line: 778, column: 190, scope: !6533, inlinedAt: !5573)
!6744 = !DILocation(line: 778, column: 186, scope: !6533, inlinedAt: !5573)
!6745 = !DILocation(line: 778, column: 173, scope: !6533, inlinedAt: !5573)
!6746 = !DILocation(line: 778, column: 181, scope: !6533, inlinedAt: !5573)
!6747 = !DILocation(line: 778, column: 200, scope: !6533, inlinedAt: !5573)
!6748 = !DILocation(line: 778, column: 198, scope: !6533, inlinedAt: !5573)
!6749 = !DILocation(line: 778, column: 203, scope: !6533, inlinedAt: !5573)
!6750 = !DILocation(line: 778, column: 214, scope: !6547, inlinedAt: !5573)
!6751 = !DILocation(line: 778, column: 217, scope: !6547, inlinedAt: !5573)
!6752 = !DILocation(line: 778, column: 234, scope: !6550, inlinedAt: !5573)
!6753 = !DILocation(line: 778, column: 237, scope: !6550, inlinedAt: !5573)
!6754 = !DILocation(line: 778, column: 244, scope: !6550, inlinedAt: !5573)
!6755 = !DILocation(line: 778, column: 229, scope: !6550, inlinedAt: !5573)
!6756 = !DILocation(line: 778, column: 261, scope: !6550, inlinedAt: !5573)
!6757 = !DILocation(line: 778, column: 270, scope: !6550, inlinedAt: !5573)
!6758 = !DILocation(line: 778, column: 268, scope: !6550, inlinedAt: !5573)
!6759 = !DILocation(line: 778, column: 264, scope: !6550, inlinedAt: !5573)
!6760 = !DILocation(line: 778, column: 251, scope: !6550, inlinedAt: !5573)
!6761 = !DILocation(line: 778, column: 259, scope: !6550, inlinedAt: !5573)
!6762 = !DILocation(line: 778, column: 278, scope: !6550, inlinedAt: !5573)
!6763 = !DILocation(line: 778, column: 276, scope: !6550, inlinedAt: !5573)
!6764 = !DILocation(line: 778, column: 281, scope: !6550, inlinedAt: !5573)
!6765 = !DILocation(line: 778, column: 290, scope: !6564, inlinedAt: !5573)
!6766 = !DILocation(line: 778, column: 298, scope: !6564, inlinedAt: !5573)
!6767 = !DILocation(line: 779, column: 9, scope: !5497, inlinedAt: !5573)
!6768 = !DILocation(line: 779, column: 12, scope: !5497, inlinedAt: !5573)
!6769 = !DILocation(line: 779, column: 9, scope: !5456, inlinedAt: !5573)
!6770 = !DILocation(line: 779, column: 29, scope: !6571, inlinedAt: !5573)
!6771 = !DILocation(line: 779, column: 32, scope: !6571, inlinedAt: !5573)
!6772 = !DILocation(line: 779, column: 39, scope: !6571, inlinedAt: !5573)
!6773 = !DILocation(line: 779, column: 24, scope: !6571, inlinedAt: !5573)
!6774 = !DILocation(line: 779, column: 55, scope: !6571, inlinedAt: !5573)
!6775 = !DILocation(line: 779, column: 64, scope: !6571, inlinedAt: !5573)
!6776 = !DILocation(line: 779, column: 62, scope: !6571, inlinedAt: !5573)
!6777 = !DILocation(line: 779, column: 58, scope: !6571, inlinedAt: !5573)
!6778 = !DILocation(line: 779, column: 45, scope: !6571, inlinedAt: !5573)
!6779 = !DILocation(line: 779, column: 53, scope: !6571, inlinedAt: !5573)
!6780 = !DILocation(line: 779, column: 72, scope: !6571, inlinedAt: !5573)
!6781 = !DILocation(line: 779, column: 70, scope: !6571, inlinedAt: !5573)
!6782 = !DILocation(line: 779, column: 75, scope: !6571, inlinedAt: !5573)
!6783 = !DILocation(line: 779, column: 86, scope: !6585, inlinedAt: !5573)
!6784 = !DILocation(line: 779, column: 89, scope: !6585, inlinedAt: !5573)
!6785 = !DILocation(line: 779, column: 107, scope: !6588, inlinedAt: !5573)
!6786 = !DILocation(line: 779, column: 110, scope: !6588, inlinedAt: !5573)
!6787 = !DILocation(line: 779, column: 97, scope: !6588, inlinedAt: !5573)
!6788 = !DILocation(line: 779, column: 105, scope: !6588, inlinedAt: !5573)
!6789 = !DILocation(line: 779, column: 118, scope: !6588, inlinedAt: !5573)
!6790 = !DILocation(line: 779, column: 125, scope: !6588, inlinedAt: !5573)
!6791 = !DILocation(line: 779, column: 136, scope: !6596, inlinedAt: !5573)
!6792 = !DILocation(line: 779, column: 139, scope: !6596, inlinedAt: !5573)
!6793 = !DILocation(line: 779, column: 156, scope: !6599, inlinedAt: !5573)
!6794 = !DILocation(line: 779, column: 159, scope: !6599, inlinedAt: !5573)
!6795 = !DILocation(line: 779, column: 166, scope: !6599, inlinedAt: !5573)
!6796 = !DILocation(line: 779, column: 151, scope: !6599, inlinedAt: !5573)
!6797 = !DILocation(line: 779, column: 183, scope: !6599, inlinedAt: !5573)
!6798 = !DILocation(line: 779, column: 192, scope: !6599, inlinedAt: !5573)
!6799 = !DILocation(line: 779, column: 190, scope: !6599, inlinedAt: !5573)
!6800 = !DILocation(line: 779, column: 186, scope: !6599, inlinedAt: !5573)
!6801 = !DILocation(line: 779, column: 173, scope: !6599, inlinedAt: !5573)
!6802 = !DILocation(line: 779, column: 181, scope: !6599, inlinedAt: !5573)
!6803 = !DILocation(line: 779, column: 200, scope: !6599, inlinedAt: !5573)
!6804 = !DILocation(line: 779, column: 198, scope: !6599, inlinedAt: !5573)
!6805 = !DILocation(line: 779, column: 203, scope: !6599, inlinedAt: !5573)
!6806 = !DILocation(line: 779, column: 214, scope: !6613, inlinedAt: !5573)
!6807 = !DILocation(line: 779, column: 217, scope: !6613, inlinedAt: !5573)
!6808 = !DILocation(line: 779, column: 234, scope: !6616, inlinedAt: !5573)
!6809 = !DILocation(line: 779, column: 237, scope: !6616, inlinedAt: !5573)
!6810 = !DILocation(line: 779, column: 244, scope: !6616, inlinedAt: !5573)
!6811 = !DILocation(line: 779, column: 229, scope: !6616, inlinedAt: !5573)
!6812 = !DILocation(line: 779, column: 261, scope: !6616, inlinedAt: !5573)
!6813 = !DILocation(line: 779, column: 270, scope: !6616, inlinedAt: !5573)
!6814 = !DILocation(line: 779, column: 268, scope: !6616, inlinedAt: !5573)
!6815 = !DILocation(line: 779, column: 264, scope: !6616, inlinedAt: !5573)
!6816 = !DILocation(line: 779, column: 251, scope: !6616, inlinedAt: !5573)
!6817 = !DILocation(line: 779, column: 259, scope: !6616, inlinedAt: !5573)
!6818 = !DILocation(line: 779, column: 278, scope: !6616, inlinedAt: !5573)
!6819 = !DILocation(line: 779, column: 276, scope: !6616, inlinedAt: !5573)
!6820 = !DILocation(line: 779, column: 281, scope: !6616, inlinedAt: !5573)
!6821 = !DILocation(line: 779, column: 290, scope: !6630, inlinedAt: !5573)
!6822 = !DILocation(line: 779, column: 298, scope: !6630, inlinedAt: !5573)
!6823 = !DILocation(line: 780, column: 9, scope: !5510, inlinedAt: !5573)
!6824 = !DILocation(line: 780, column: 12, scope: !5510, inlinedAt: !5573)
!6825 = !DILocation(line: 780, column: 9, scope: !5456, inlinedAt: !5573)
!6826 = !DILocation(line: 780, column: 29, scope: !6637, inlinedAt: !5573)
!6827 = !DILocation(line: 780, column: 32, scope: !6637, inlinedAt: !5573)
!6828 = !DILocation(line: 780, column: 39, scope: !6637, inlinedAt: !5573)
!6829 = !DILocation(line: 780, column: 24, scope: !6637, inlinedAt: !5573)
!6830 = !DILocation(line: 780, column: 55, scope: !6637, inlinedAt: !5573)
!6831 = !DILocation(line: 780, column: 64, scope: !6637, inlinedAt: !5573)
!6832 = !DILocation(line: 780, column: 62, scope: !6637, inlinedAt: !5573)
!6833 = !DILocation(line: 780, column: 58, scope: !6637, inlinedAt: !5573)
!6834 = !DILocation(line: 780, column: 45, scope: !6637, inlinedAt: !5573)
!6835 = !DILocation(line: 780, column: 53, scope: !6637, inlinedAt: !5573)
!6836 = !DILocation(line: 780, column: 72, scope: !6637, inlinedAt: !5573)
!6837 = !DILocation(line: 780, column: 70, scope: !6637, inlinedAt: !5573)
!6838 = !DILocation(line: 780, column: 75, scope: !6637, inlinedAt: !5573)
!6839 = !DILocation(line: 780, column: 86, scope: !6651, inlinedAt: !5573)
!6840 = !DILocation(line: 780, column: 89, scope: !6651, inlinedAt: !5573)
!6841 = !DILocation(line: 780, column: 107, scope: !6654, inlinedAt: !5573)
!6842 = !DILocation(line: 780, column: 110, scope: !6654, inlinedAt: !5573)
!6843 = !DILocation(line: 780, column: 97, scope: !6654, inlinedAt: !5573)
!6844 = !DILocation(line: 780, column: 105, scope: !6654, inlinedAt: !5573)
!6845 = !DILocation(line: 780, column: 118, scope: !6654, inlinedAt: !5573)
!6846 = !DILocation(line: 780, column: 125, scope: !6654, inlinedAt: !5573)
!6847 = !DILocation(line: 780, column: 136, scope: !6662, inlinedAt: !5573)
!6848 = !DILocation(line: 780, column: 139, scope: !6662, inlinedAt: !5573)
!6849 = !DILocation(line: 780, column: 156, scope: !6665, inlinedAt: !5573)
!6850 = !DILocation(line: 780, column: 159, scope: !6665, inlinedAt: !5573)
!6851 = !DILocation(line: 780, column: 166, scope: !6665, inlinedAt: !5573)
!6852 = !DILocation(line: 780, column: 151, scope: !6665, inlinedAt: !5573)
!6853 = !DILocation(line: 780, column: 183, scope: !6665, inlinedAt: !5573)
!6854 = !DILocation(line: 780, column: 192, scope: !6665, inlinedAt: !5573)
!6855 = !DILocation(line: 780, column: 190, scope: !6665, inlinedAt: !5573)
!6856 = !DILocation(line: 780, column: 186, scope: !6665, inlinedAt: !5573)
!6857 = !DILocation(line: 780, column: 173, scope: !6665, inlinedAt: !5573)
!6858 = !DILocation(line: 780, column: 181, scope: !6665, inlinedAt: !5573)
!6859 = !DILocation(line: 780, column: 200, scope: !6665, inlinedAt: !5573)
!6860 = !DILocation(line: 780, column: 198, scope: !6665, inlinedAt: !5573)
!6861 = !DILocation(line: 780, column: 203, scope: !6665, inlinedAt: !5573)
!6862 = !DILocation(line: 780, column: 214, scope: !6679, inlinedAt: !5573)
!6863 = !DILocation(line: 780, column: 217, scope: !6679, inlinedAt: !5573)
!6864 = !DILocation(line: 780, column: 234, scope: !6682, inlinedAt: !5573)
!6865 = !DILocation(line: 780, column: 237, scope: !6682, inlinedAt: !5573)
!6866 = !DILocation(line: 780, column: 244, scope: !6682, inlinedAt: !5573)
!6867 = !DILocation(line: 780, column: 229, scope: !6682, inlinedAt: !5573)
!6868 = !DILocation(line: 780, column: 261, scope: !6682, inlinedAt: !5573)
!6869 = !DILocation(line: 780, column: 270, scope: !6682, inlinedAt: !5573)
!6870 = !DILocation(line: 780, column: 268, scope: !6682, inlinedAt: !5573)
!6871 = !DILocation(line: 780, column: 264, scope: !6682, inlinedAt: !5573)
!6872 = !DILocation(line: 780, column: 251, scope: !6682, inlinedAt: !5573)
!6873 = !DILocation(line: 780, column: 259, scope: !6682, inlinedAt: !5573)
!6874 = !DILocation(line: 780, column: 278, scope: !6682, inlinedAt: !5573)
!6875 = !DILocation(line: 780, column: 276, scope: !6682, inlinedAt: !5573)
!6876 = !DILocation(line: 780, column: 281, scope: !6682, inlinedAt: !5573)
!6877 = !DILocation(line: 780, column: 290, scope: !6696, inlinedAt: !5573)
!6878 = !DILocation(line: 780, column: 298, scope: !6696, inlinedAt: !5573)
!6879 = !DILocation(line: 781, column: 15, scope: !5456, inlinedAt: !5573)
!6880 = !DILocation(line: 781, column: 5, scope: !5456, inlinedAt: !5573)
!6881 = !DILocation(line: 781, column: 13, scope: !5456, inlinedAt: !5573)
!6882 = !DILocation(line: 1501, column: 33, scope: !5574)
!6883 = !DILocation(line: 1502, column: 21, scope: !5574)
!6884 = !DILocation(line: 1503, column: 39, scope: !5555)
!6885 = !DILocation(line: 1503, column: 45, scope: !5555)
!6886 = !DILocation(line: 1503, column: 48, scope: !5555)
!6887 = !DILocation(line: 1503, column: 25, scope: !5555)
!6888 = !DILocation(line: 778, column: 9, scope: !5484, inlinedAt: !5554)
!6889 = !DILocation(line: 778, column: 12, scope: !5484, inlinedAt: !5554)
!6890 = !DILocation(line: 778, column: 9, scope: !5456, inlinedAt: !5554)
!6891 = !DILocation(line: 778, column: 29, scope: !6505, inlinedAt: !5554)
!6892 = !DILocation(line: 778, column: 32, scope: !6505, inlinedAt: !5554)
!6893 = !DILocation(line: 778, column: 39, scope: !6505, inlinedAt: !5554)
!6894 = !DILocation(line: 778, column: 24, scope: !6505, inlinedAt: !5554)
!6895 = !DILocation(line: 778, column: 55, scope: !6505, inlinedAt: !5554)
!6896 = !DILocation(line: 778, column: 64, scope: !6505, inlinedAt: !5554)
!6897 = !DILocation(line: 778, column: 62, scope: !6505, inlinedAt: !5554)
!6898 = !DILocation(line: 778, column: 58, scope: !6505, inlinedAt: !5554)
!6899 = !DILocation(line: 778, column: 45, scope: !6505, inlinedAt: !5554)
!6900 = !DILocation(line: 778, column: 53, scope: !6505, inlinedAt: !5554)
!6901 = !DILocation(line: 778, column: 72, scope: !6505, inlinedAt: !5554)
!6902 = !DILocation(line: 778, column: 70, scope: !6505, inlinedAt: !5554)
!6903 = !DILocation(line: 778, column: 75, scope: !6505, inlinedAt: !5554)
!6904 = !DILocation(line: 778, column: 86, scope: !6519, inlinedAt: !5554)
!6905 = !DILocation(line: 778, column: 89, scope: !6519, inlinedAt: !5554)
!6906 = !DILocation(line: 778, column: 107, scope: !6522, inlinedAt: !5554)
!6907 = !DILocation(line: 778, column: 110, scope: !6522, inlinedAt: !5554)
!6908 = !DILocation(line: 778, column: 97, scope: !6522, inlinedAt: !5554)
!6909 = !DILocation(line: 778, column: 105, scope: !6522, inlinedAt: !5554)
!6910 = !DILocation(line: 778, column: 118, scope: !6522, inlinedAt: !5554)
!6911 = !DILocation(line: 778, column: 125, scope: !6522, inlinedAt: !5554)
!6912 = !DILocation(line: 778, column: 136, scope: !6530, inlinedAt: !5554)
!6913 = !DILocation(line: 778, column: 139, scope: !6530, inlinedAt: !5554)
!6914 = !DILocation(line: 778, column: 156, scope: !6533, inlinedAt: !5554)
!6915 = !DILocation(line: 778, column: 159, scope: !6533, inlinedAt: !5554)
!6916 = !DILocation(line: 778, column: 166, scope: !6533, inlinedAt: !5554)
!6917 = !DILocation(line: 778, column: 151, scope: !6533, inlinedAt: !5554)
!6918 = !DILocation(line: 778, column: 183, scope: !6533, inlinedAt: !5554)
!6919 = !DILocation(line: 778, column: 192, scope: !6533, inlinedAt: !5554)
!6920 = !DILocation(line: 778, column: 190, scope: !6533, inlinedAt: !5554)
!6921 = !DILocation(line: 778, column: 186, scope: !6533, inlinedAt: !5554)
!6922 = !DILocation(line: 778, column: 173, scope: !6533, inlinedAt: !5554)
!6923 = !DILocation(line: 778, column: 181, scope: !6533, inlinedAt: !5554)
!6924 = !DILocation(line: 778, column: 200, scope: !6533, inlinedAt: !5554)
!6925 = !DILocation(line: 778, column: 198, scope: !6533, inlinedAt: !5554)
!6926 = !DILocation(line: 778, column: 203, scope: !6533, inlinedAt: !5554)
!6927 = !DILocation(line: 778, column: 214, scope: !6547, inlinedAt: !5554)
!6928 = !DILocation(line: 778, column: 217, scope: !6547, inlinedAt: !5554)
!6929 = !DILocation(line: 778, column: 234, scope: !6550, inlinedAt: !5554)
!6930 = !DILocation(line: 778, column: 237, scope: !6550, inlinedAt: !5554)
!6931 = !DILocation(line: 778, column: 244, scope: !6550, inlinedAt: !5554)
!6932 = !DILocation(line: 778, column: 229, scope: !6550, inlinedAt: !5554)
!6933 = !DILocation(line: 778, column: 261, scope: !6550, inlinedAt: !5554)
!6934 = !DILocation(line: 778, column: 270, scope: !6550, inlinedAt: !5554)
!6935 = !DILocation(line: 778, column: 268, scope: !6550, inlinedAt: !5554)
!6936 = !DILocation(line: 778, column: 264, scope: !6550, inlinedAt: !5554)
!6937 = !DILocation(line: 778, column: 251, scope: !6550, inlinedAt: !5554)
!6938 = !DILocation(line: 778, column: 259, scope: !6550, inlinedAt: !5554)
!6939 = !DILocation(line: 778, column: 278, scope: !6550, inlinedAt: !5554)
!6940 = !DILocation(line: 778, column: 276, scope: !6550, inlinedAt: !5554)
!6941 = !DILocation(line: 778, column: 281, scope: !6550, inlinedAt: !5554)
!6942 = !DILocation(line: 778, column: 290, scope: !6564, inlinedAt: !5554)
!6943 = !DILocation(line: 778, column: 298, scope: !6564, inlinedAt: !5554)
!6944 = !DILocation(line: 779, column: 9, scope: !5497, inlinedAt: !5554)
!6945 = !DILocation(line: 779, column: 12, scope: !5497, inlinedAt: !5554)
!6946 = !DILocation(line: 779, column: 9, scope: !5456, inlinedAt: !5554)
!6947 = !DILocation(line: 779, column: 29, scope: !6571, inlinedAt: !5554)
!6948 = !DILocation(line: 779, column: 32, scope: !6571, inlinedAt: !5554)
!6949 = !DILocation(line: 779, column: 39, scope: !6571, inlinedAt: !5554)
!6950 = !DILocation(line: 779, column: 24, scope: !6571, inlinedAt: !5554)
!6951 = !DILocation(line: 779, column: 55, scope: !6571, inlinedAt: !5554)
!6952 = !DILocation(line: 779, column: 64, scope: !6571, inlinedAt: !5554)
!6953 = !DILocation(line: 779, column: 62, scope: !6571, inlinedAt: !5554)
!6954 = !DILocation(line: 779, column: 58, scope: !6571, inlinedAt: !5554)
!6955 = !DILocation(line: 779, column: 45, scope: !6571, inlinedAt: !5554)
!6956 = !DILocation(line: 779, column: 53, scope: !6571, inlinedAt: !5554)
!6957 = !DILocation(line: 779, column: 72, scope: !6571, inlinedAt: !5554)
!6958 = !DILocation(line: 779, column: 70, scope: !6571, inlinedAt: !5554)
!6959 = !DILocation(line: 779, column: 75, scope: !6571, inlinedAt: !5554)
!6960 = !DILocation(line: 779, column: 86, scope: !6585, inlinedAt: !5554)
!6961 = !DILocation(line: 779, column: 89, scope: !6585, inlinedAt: !5554)
!6962 = !DILocation(line: 779, column: 107, scope: !6588, inlinedAt: !5554)
!6963 = !DILocation(line: 779, column: 110, scope: !6588, inlinedAt: !5554)
!6964 = !DILocation(line: 779, column: 97, scope: !6588, inlinedAt: !5554)
!6965 = !DILocation(line: 779, column: 105, scope: !6588, inlinedAt: !5554)
!6966 = !DILocation(line: 779, column: 118, scope: !6588, inlinedAt: !5554)
!6967 = !DILocation(line: 779, column: 125, scope: !6588, inlinedAt: !5554)
!6968 = !DILocation(line: 779, column: 136, scope: !6596, inlinedAt: !5554)
!6969 = !DILocation(line: 779, column: 139, scope: !6596, inlinedAt: !5554)
!6970 = !DILocation(line: 779, column: 156, scope: !6599, inlinedAt: !5554)
!6971 = !DILocation(line: 779, column: 159, scope: !6599, inlinedAt: !5554)
!6972 = !DILocation(line: 779, column: 166, scope: !6599, inlinedAt: !5554)
!6973 = !DILocation(line: 779, column: 151, scope: !6599, inlinedAt: !5554)
!6974 = !DILocation(line: 779, column: 183, scope: !6599, inlinedAt: !5554)
!6975 = !DILocation(line: 779, column: 192, scope: !6599, inlinedAt: !5554)
!6976 = !DILocation(line: 779, column: 190, scope: !6599, inlinedAt: !5554)
!6977 = !DILocation(line: 779, column: 186, scope: !6599, inlinedAt: !5554)
!6978 = !DILocation(line: 779, column: 173, scope: !6599, inlinedAt: !5554)
!6979 = !DILocation(line: 779, column: 181, scope: !6599, inlinedAt: !5554)
!6980 = !DILocation(line: 779, column: 200, scope: !6599, inlinedAt: !5554)
!6981 = !DILocation(line: 779, column: 198, scope: !6599, inlinedAt: !5554)
!6982 = !DILocation(line: 779, column: 203, scope: !6599, inlinedAt: !5554)
!6983 = !DILocation(line: 779, column: 214, scope: !6613, inlinedAt: !5554)
!6984 = !DILocation(line: 779, column: 217, scope: !6613, inlinedAt: !5554)
!6985 = !DILocation(line: 779, column: 234, scope: !6616, inlinedAt: !5554)
!6986 = !DILocation(line: 779, column: 237, scope: !6616, inlinedAt: !5554)
!6987 = !DILocation(line: 779, column: 244, scope: !6616, inlinedAt: !5554)
!6988 = !DILocation(line: 779, column: 229, scope: !6616, inlinedAt: !5554)
!6989 = !DILocation(line: 779, column: 261, scope: !6616, inlinedAt: !5554)
!6990 = !DILocation(line: 779, column: 270, scope: !6616, inlinedAt: !5554)
!6991 = !DILocation(line: 779, column: 268, scope: !6616, inlinedAt: !5554)
!6992 = !DILocation(line: 779, column: 264, scope: !6616, inlinedAt: !5554)
!6993 = !DILocation(line: 779, column: 251, scope: !6616, inlinedAt: !5554)
!6994 = !DILocation(line: 779, column: 259, scope: !6616, inlinedAt: !5554)
!6995 = !DILocation(line: 779, column: 278, scope: !6616, inlinedAt: !5554)
!6996 = !DILocation(line: 779, column: 276, scope: !6616, inlinedAt: !5554)
!6997 = !DILocation(line: 779, column: 281, scope: !6616, inlinedAt: !5554)
!6998 = !DILocation(line: 779, column: 290, scope: !6630, inlinedAt: !5554)
!6999 = !DILocation(line: 779, column: 298, scope: !6630, inlinedAt: !5554)
!7000 = !DILocation(line: 780, column: 9, scope: !5510, inlinedAt: !5554)
!7001 = !DILocation(line: 780, column: 12, scope: !5510, inlinedAt: !5554)
!7002 = !DILocation(line: 780, column: 9, scope: !5456, inlinedAt: !5554)
!7003 = !DILocation(line: 780, column: 29, scope: !6637, inlinedAt: !5554)
!7004 = !DILocation(line: 780, column: 32, scope: !6637, inlinedAt: !5554)
!7005 = !DILocation(line: 780, column: 39, scope: !6637, inlinedAt: !5554)
!7006 = !DILocation(line: 780, column: 24, scope: !6637, inlinedAt: !5554)
!7007 = !DILocation(line: 780, column: 55, scope: !6637, inlinedAt: !5554)
!7008 = !DILocation(line: 780, column: 64, scope: !6637, inlinedAt: !5554)
!7009 = !DILocation(line: 780, column: 62, scope: !6637, inlinedAt: !5554)
!7010 = !DILocation(line: 780, column: 58, scope: !6637, inlinedAt: !5554)
!7011 = !DILocation(line: 780, column: 45, scope: !6637, inlinedAt: !5554)
!7012 = !DILocation(line: 780, column: 53, scope: !6637, inlinedAt: !5554)
!7013 = !DILocation(line: 780, column: 72, scope: !6637, inlinedAt: !5554)
!7014 = !DILocation(line: 780, column: 70, scope: !6637, inlinedAt: !5554)
!7015 = !DILocation(line: 780, column: 75, scope: !6637, inlinedAt: !5554)
!7016 = !DILocation(line: 780, column: 86, scope: !6651, inlinedAt: !5554)
!7017 = !DILocation(line: 780, column: 89, scope: !6651, inlinedAt: !5554)
!7018 = !DILocation(line: 780, column: 107, scope: !6654, inlinedAt: !5554)
!7019 = !DILocation(line: 780, column: 110, scope: !6654, inlinedAt: !5554)
!7020 = !DILocation(line: 780, column: 97, scope: !6654, inlinedAt: !5554)
!7021 = !DILocation(line: 780, column: 105, scope: !6654, inlinedAt: !5554)
!7022 = !DILocation(line: 780, column: 118, scope: !6654, inlinedAt: !5554)
!7023 = !DILocation(line: 780, column: 125, scope: !6654, inlinedAt: !5554)
!7024 = !DILocation(line: 780, column: 136, scope: !6662, inlinedAt: !5554)
!7025 = !DILocation(line: 780, column: 139, scope: !6662, inlinedAt: !5554)
!7026 = !DILocation(line: 780, column: 156, scope: !6665, inlinedAt: !5554)
!7027 = !DILocation(line: 780, column: 159, scope: !6665, inlinedAt: !5554)
!7028 = !DILocation(line: 780, column: 166, scope: !6665, inlinedAt: !5554)
!7029 = !DILocation(line: 780, column: 151, scope: !6665, inlinedAt: !5554)
!7030 = !DILocation(line: 780, column: 183, scope: !6665, inlinedAt: !5554)
!7031 = !DILocation(line: 780, column: 192, scope: !6665, inlinedAt: !5554)
!7032 = !DILocation(line: 780, column: 190, scope: !6665, inlinedAt: !5554)
!7033 = !DILocation(line: 780, column: 186, scope: !6665, inlinedAt: !5554)
!7034 = !DILocation(line: 780, column: 173, scope: !6665, inlinedAt: !5554)
!7035 = !DILocation(line: 780, column: 181, scope: !6665, inlinedAt: !5554)
!7036 = !DILocation(line: 780, column: 200, scope: !6665, inlinedAt: !5554)
!7037 = !DILocation(line: 780, column: 198, scope: !6665, inlinedAt: !5554)
!7038 = !DILocation(line: 780, column: 203, scope: !6665, inlinedAt: !5554)
!7039 = !DILocation(line: 780, column: 214, scope: !6679, inlinedAt: !5554)
!7040 = !DILocation(line: 780, column: 217, scope: !6679, inlinedAt: !5554)
!7041 = !DILocation(line: 780, column: 234, scope: !6682, inlinedAt: !5554)
!7042 = !DILocation(line: 780, column: 237, scope: !6682, inlinedAt: !5554)
!7043 = !DILocation(line: 780, column: 244, scope: !6682, inlinedAt: !5554)
!7044 = !DILocation(line: 780, column: 229, scope: !6682, inlinedAt: !5554)
!7045 = !DILocation(line: 780, column: 261, scope: !6682, inlinedAt: !5554)
!7046 = !DILocation(line: 780, column: 270, scope: !6682, inlinedAt: !5554)
!7047 = !DILocation(line: 780, column: 268, scope: !6682, inlinedAt: !5554)
!7048 = !DILocation(line: 780, column: 264, scope: !6682, inlinedAt: !5554)
!7049 = !DILocation(line: 780, column: 251, scope: !6682, inlinedAt: !5554)
!7050 = !DILocation(line: 780, column: 259, scope: !6682, inlinedAt: !5554)
!7051 = !DILocation(line: 780, column: 278, scope: !6682, inlinedAt: !5554)
!7052 = !DILocation(line: 780, column: 276, scope: !6682, inlinedAt: !5554)
!7053 = !DILocation(line: 780, column: 281, scope: !6682, inlinedAt: !5554)
!7054 = !DILocation(line: 780, column: 290, scope: !6696, inlinedAt: !5554)
!7055 = !DILocation(line: 780, column: 298, scope: !6696, inlinedAt: !5554)
!7056 = !DILocation(line: 781, column: 15, scope: !5456, inlinedAt: !5554)
!7057 = !DILocation(line: 781, column: 5, scope: !5456, inlinedAt: !5554)
!7058 = !DILocation(line: 781, column: 13, scope: !5456, inlinedAt: !5554)
!7059 = !DILocation(line: 1504, column: 33, scope: !5555)
!7060 = !DILocation(line: 1506, column: 17, scope: !5558)
!7061 = !DILocation(line: 1508, column: 25, scope: !5463)
!7062 = !DILocation(line: 1508, column: 28, scope: !5463)
!7063 = !DILocation(line: 1508, column: 25, scope: !5464)
!7064 = !DILocation(line: 1509, column: 39, scope: !5539)
!7065 = !DILocation(line: 1509, column: 45, scope: !5539)
!7066 = !DILocation(line: 1509, column: 25, scope: !5539)
!7067 = !DILocation(line: 778, column: 9, scope: !5484, inlinedAt: !5538)
!7068 = !DILocation(line: 778, column: 12, scope: !5484, inlinedAt: !5538)
!7069 = !DILocation(line: 778, column: 9, scope: !5456, inlinedAt: !5538)
!7070 = !DILocation(line: 778, column: 29, scope: !6505, inlinedAt: !5538)
!7071 = !DILocation(line: 778, column: 32, scope: !6505, inlinedAt: !5538)
!7072 = !DILocation(line: 778, column: 39, scope: !6505, inlinedAt: !5538)
!7073 = !DILocation(line: 778, column: 24, scope: !6505, inlinedAt: !5538)
!7074 = !DILocation(line: 778, column: 55, scope: !6505, inlinedAt: !5538)
!7075 = !DILocation(line: 778, column: 64, scope: !6505, inlinedAt: !5538)
!7076 = !DILocation(line: 778, column: 62, scope: !6505, inlinedAt: !5538)
!7077 = !DILocation(line: 778, column: 58, scope: !6505, inlinedAt: !5538)
!7078 = !DILocation(line: 778, column: 45, scope: !6505, inlinedAt: !5538)
!7079 = !DILocation(line: 778, column: 53, scope: !6505, inlinedAt: !5538)
!7080 = !DILocation(line: 778, column: 72, scope: !6505, inlinedAt: !5538)
!7081 = !DILocation(line: 778, column: 70, scope: !6505, inlinedAt: !5538)
!7082 = !DILocation(line: 778, column: 75, scope: !6505, inlinedAt: !5538)
!7083 = !DILocation(line: 778, column: 86, scope: !6519, inlinedAt: !5538)
!7084 = !DILocation(line: 778, column: 89, scope: !6519, inlinedAt: !5538)
!7085 = !DILocation(line: 778, column: 107, scope: !6522, inlinedAt: !5538)
!7086 = !DILocation(line: 778, column: 110, scope: !6522, inlinedAt: !5538)
!7087 = !DILocation(line: 778, column: 97, scope: !6522, inlinedAt: !5538)
!7088 = !DILocation(line: 778, column: 105, scope: !6522, inlinedAt: !5538)
!7089 = !DILocation(line: 778, column: 118, scope: !6522, inlinedAt: !5538)
!7090 = !DILocation(line: 778, column: 125, scope: !6522, inlinedAt: !5538)
!7091 = !DILocation(line: 778, column: 136, scope: !6530, inlinedAt: !5538)
!7092 = !DILocation(line: 778, column: 139, scope: !6530, inlinedAt: !5538)
!7093 = !DILocation(line: 778, column: 156, scope: !6533, inlinedAt: !5538)
!7094 = !DILocation(line: 778, column: 159, scope: !6533, inlinedAt: !5538)
!7095 = !DILocation(line: 778, column: 166, scope: !6533, inlinedAt: !5538)
!7096 = !DILocation(line: 778, column: 151, scope: !6533, inlinedAt: !5538)
!7097 = !DILocation(line: 778, column: 183, scope: !6533, inlinedAt: !5538)
!7098 = !DILocation(line: 778, column: 192, scope: !6533, inlinedAt: !5538)
!7099 = !DILocation(line: 778, column: 190, scope: !6533, inlinedAt: !5538)
!7100 = !DILocation(line: 778, column: 186, scope: !6533, inlinedAt: !5538)
!7101 = !DILocation(line: 778, column: 173, scope: !6533, inlinedAt: !5538)
!7102 = !DILocation(line: 778, column: 181, scope: !6533, inlinedAt: !5538)
!7103 = !DILocation(line: 778, column: 200, scope: !6533, inlinedAt: !5538)
!7104 = !DILocation(line: 778, column: 198, scope: !6533, inlinedAt: !5538)
!7105 = !DILocation(line: 778, column: 203, scope: !6533, inlinedAt: !5538)
!7106 = !DILocation(line: 778, column: 214, scope: !6547, inlinedAt: !5538)
!7107 = !DILocation(line: 778, column: 217, scope: !6547, inlinedAt: !5538)
!7108 = !DILocation(line: 778, column: 234, scope: !6550, inlinedAt: !5538)
!7109 = !DILocation(line: 778, column: 237, scope: !6550, inlinedAt: !5538)
!7110 = !DILocation(line: 778, column: 244, scope: !6550, inlinedAt: !5538)
!7111 = !DILocation(line: 778, column: 229, scope: !6550, inlinedAt: !5538)
!7112 = !DILocation(line: 778, column: 261, scope: !6550, inlinedAt: !5538)
!7113 = !DILocation(line: 778, column: 270, scope: !6550, inlinedAt: !5538)
!7114 = !DILocation(line: 778, column: 268, scope: !6550, inlinedAt: !5538)
!7115 = !DILocation(line: 778, column: 264, scope: !6550, inlinedAt: !5538)
!7116 = !DILocation(line: 778, column: 251, scope: !6550, inlinedAt: !5538)
!7117 = !DILocation(line: 778, column: 259, scope: !6550, inlinedAt: !5538)
!7118 = !DILocation(line: 778, column: 278, scope: !6550, inlinedAt: !5538)
!7119 = !DILocation(line: 778, column: 276, scope: !6550, inlinedAt: !5538)
!7120 = !DILocation(line: 778, column: 281, scope: !6550, inlinedAt: !5538)
!7121 = !DILocation(line: 778, column: 290, scope: !6564, inlinedAt: !5538)
!7122 = !DILocation(line: 778, column: 298, scope: !6564, inlinedAt: !5538)
!7123 = !DILocation(line: 779, column: 9, scope: !5497, inlinedAt: !5538)
!7124 = !DILocation(line: 779, column: 12, scope: !5497, inlinedAt: !5538)
!7125 = !DILocation(line: 779, column: 9, scope: !5456, inlinedAt: !5538)
!7126 = !DILocation(line: 779, column: 29, scope: !6571, inlinedAt: !5538)
!7127 = !DILocation(line: 779, column: 32, scope: !6571, inlinedAt: !5538)
!7128 = !DILocation(line: 779, column: 39, scope: !6571, inlinedAt: !5538)
!7129 = !DILocation(line: 779, column: 24, scope: !6571, inlinedAt: !5538)
!7130 = !DILocation(line: 779, column: 55, scope: !6571, inlinedAt: !5538)
!7131 = !DILocation(line: 779, column: 64, scope: !6571, inlinedAt: !5538)
!7132 = !DILocation(line: 779, column: 62, scope: !6571, inlinedAt: !5538)
!7133 = !DILocation(line: 779, column: 58, scope: !6571, inlinedAt: !5538)
!7134 = !DILocation(line: 779, column: 45, scope: !6571, inlinedAt: !5538)
!7135 = !DILocation(line: 779, column: 53, scope: !6571, inlinedAt: !5538)
!7136 = !DILocation(line: 779, column: 72, scope: !6571, inlinedAt: !5538)
!7137 = !DILocation(line: 779, column: 70, scope: !6571, inlinedAt: !5538)
!7138 = !DILocation(line: 779, column: 75, scope: !6571, inlinedAt: !5538)
!7139 = !DILocation(line: 779, column: 86, scope: !6585, inlinedAt: !5538)
!7140 = !DILocation(line: 779, column: 89, scope: !6585, inlinedAt: !5538)
!7141 = !DILocation(line: 779, column: 107, scope: !6588, inlinedAt: !5538)
!7142 = !DILocation(line: 779, column: 110, scope: !6588, inlinedAt: !5538)
!7143 = !DILocation(line: 779, column: 97, scope: !6588, inlinedAt: !5538)
!7144 = !DILocation(line: 779, column: 105, scope: !6588, inlinedAt: !5538)
!7145 = !DILocation(line: 779, column: 118, scope: !6588, inlinedAt: !5538)
!7146 = !DILocation(line: 779, column: 125, scope: !6588, inlinedAt: !5538)
!7147 = !DILocation(line: 779, column: 136, scope: !6596, inlinedAt: !5538)
!7148 = !DILocation(line: 779, column: 139, scope: !6596, inlinedAt: !5538)
!7149 = !DILocation(line: 779, column: 156, scope: !6599, inlinedAt: !5538)
!7150 = !DILocation(line: 779, column: 159, scope: !6599, inlinedAt: !5538)
!7151 = !DILocation(line: 779, column: 166, scope: !6599, inlinedAt: !5538)
!7152 = !DILocation(line: 779, column: 151, scope: !6599, inlinedAt: !5538)
!7153 = !DILocation(line: 779, column: 183, scope: !6599, inlinedAt: !5538)
!7154 = !DILocation(line: 779, column: 192, scope: !6599, inlinedAt: !5538)
!7155 = !DILocation(line: 779, column: 190, scope: !6599, inlinedAt: !5538)
!7156 = !DILocation(line: 779, column: 186, scope: !6599, inlinedAt: !5538)
!7157 = !DILocation(line: 779, column: 173, scope: !6599, inlinedAt: !5538)
!7158 = !DILocation(line: 779, column: 181, scope: !6599, inlinedAt: !5538)
!7159 = !DILocation(line: 779, column: 200, scope: !6599, inlinedAt: !5538)
!7160 = !DILocation(line: 779, column: 198, scope: !6599, inlinedAt: !5538)
!7161 = !DILocation(line: 779, column: 203, scope: !6599, inlinedAt: !5538)
!7162 = !DILocation(line: 779, column: 214, scope: !6613, inlinedAt: !5538)
!7163 = !DILocation(line: 779, column: 217, scope: !6613, inlinedAt: !5538)
!7164 = !DILocation(line: 779, column: 234, scope: !6616, inlinedAt: !5538)
!7165 = !DILocation(line: 779, column: 237, scope: !6616, inlinedAt: !5538)
!7166 = !DILocation(line: 779, column: 244, scope: !6616, inlinedAt: !5538)
!7167 = !DILocation(line: 779, column: 229, scope: !6616, inlinedAt: !5538)
!7168 = !DILocation(line: 779, column: 261, scope: !6616, inlinedAt: !5538)
!7169 = !DILocation(line: 779, column: 270, scope: !6616, inlinedAt: !5538)
!7170 = !DILocation(line: 779, column: 268, scope: !6616, inlinedAt: !5538)
!7171 = !DILocation(line: 779, column: 264, scope: !6616, inlinedAt: !5538)
!7172 = !DILocation(line: 779, column: 251, scope: !6616, inlinedAt: !5538)
!7173 = !DILocation(line: 779, column: 259, scope: !6616, inlinedAt: !5538)
!7174 = !DILocation(line: 779, column: 278, scope: !6616, inlinedAt: !5538)
!7175 = !DILocation(line: 779, column: 276, scope: !6616, inlinedAt: !5538)
!7176 = !DILocation(line: 779, column: 281, scope: !6616, inlinedAt: !5538)
!7177 = !DILocation(line: 779, column: 290, scope: !6630, inlinedAt: !5538)
!7178 = !DILocation(line: 779, column: 298, scope: !6630, inlinedAt: !5538)
!7179 = !DILocation(line: 780, column: 9, scope: !5510, inlinedAt: !5538)
!7180 = !DILocation(line: 780, column: 12, scope: !5510, inlinedAt: !5538)
!7181 = !DILocation(line: 780, column: 9, scope: !5456, inlinedAt: !5538)
!7182 = !DILocation(line: 780, column: 29, scope: !6637, inlinedAt: !5538)
!7183 = !DILocation(line: 780, column: 32, scope: !6637, inlinedAt: !5538)
!7184 = !DILocation(line: 780, column: 39, scope: !6637, inlinedAt: !5538)
!7185 = !DILocation(line: 780, column: 24, scope: !6637, inlinedAt: !5538)
!7186 = !DILocation(line: 780, column: 55, scope: !6637, inlinedAt: !5538)
!7187 = !DILocation(line: 780, column: 64, scope: !6637, inlinedAt: !5538)
!7188 = !DILocation(line: 780, column: 62, scope: !6637, inlinedAt: !5538)
!7189 = !DILocation(line: 780, column: 58, scope: !6637, inlinedAt: !5538)
!7190 = !DILocation(line: 780, column: 45, scope: !6637, inlinedAt: !5538)
!7191 = !DILocation(line: 780, column: 53, scope: !6637, inlinedAt: !5538)
!7192 = !DILocation(line: 780, column: 72, scope: !6637, inlinedAt: !5538)
!7193 = !DILocation(line: 780, column: 70, scope: !6637, inlinedAt: !5538)
!7194 = !DILocation(line: 780, column: 75, scope: !6637, inlinedAt: !5538)
!7195 = !DILocation(line: 780, column: 86, scope: !6651, inlinedAt: !5538)
!7196 = !DILocation(line: 780, column: 89, scope: !6651, inlinedAt: !5538)
!7197 = !DILocation(line: 780, column: 107, scope: !6654, inlinedAt: !5538)
!7198 = !DILocation(line: 780, column: 110, scope: !6654, inlinedAt: !5538)
!7199 = !DILocation(line: 780, column: 97, scope: !6654, inlinedAt: !5538)
!7200 = !DILocation(line: 780, column: 105, scope: !6654, inlinedAt: !5538)
!7201 = !DILocation(line: 780, column: 118, scope: !6654, inlinedAt: !5538)
!7202 = !DILocation(line: 780, column: 125, scope: !6654, inlinedAt: !5538)
!7203 = !DILocation(line: 780, column: 136, scope: !6662, inlinedAt: !5538)
!7204 = !DILocation(line: 780, column: 139, scope: !6662, inlinedAt: !5538)
!7205 = !DILocation(line: 780, column: 156, scope: !6665, inlinedAt: !5538)
!7206 = !DILocation(line: 780, column: 159, scope: !6665, inlinedAt: !5538)
!7207 = !DILocation(line: 780, column: 166, scope: !6665, inlinedAt: !5538)
!7208 = !DILocation(line: 780, column: 151, scope: !6665, inlinedAt: !5538)
!7209 = !DILocation(line: 780, column: 183, scope: !6665, inlinedAt: !5538)
!7210 = !DILocation(line: 780, column: 192, scope: !6665, inlinedAt: !5538)
!7211 = !DILocation(line: 780, column: 190, scope: !6665, inlinedAt: !5538)
!7212 = !DILocation(line: 780, column: 186, scope: !6665, inlinedAt: !5538)
!7213 = !DILocation(line: 780, column: 173, scope: !6665, inlinedAt: !5538)
!7214 = !DILocation(line: 780, column: 181, scope: !6665, inlinedAt: !5538)
!7215 = !DILocation(line: 780, column: 200, scope: !6665, inlinedAt: !5538)
!7216 = !DILocation(line: 780, column: 198, scope: !6665, inlinedAt: !5538)
!7217 = !DILocation(line: 780, column: 203, scope: !6665, inlinedAt: !5538)
!7218 = !DILocation(line: 780, column: 214, scope: !6679, inlinedAt: !5538)
!7219 = !DILocation(line: 780, column: 217, scope: !6679, inlinedAt: !5538)
!7220 = !DILocation(line: 780, column: 234, scope: !6682, inlinedAt: !5538)
!7221 = !DILocation(line: 780, column: 237, scope: !6682, inlinedAt: !5538)
!7222 = !DILocation(line: 780, column: 244, scope: !6682, inlinedAt: !5538)
!7223 = !DILocation(line: 780, column: 229, scope: !6682, inlinedAt: !5538)
!7224 = !DILocation(line: 780, column: 261, scope: !6682, inlinedAt: !5538)
!7225 = !DILocation(line: 780, column: 270, scope: !6682, inlinedAt: !5538)
!7226 = !DILocation(line: 780, column: 268, scope: !6682, inlinedAt: !5538)
!7227 = !DILocation(line: 780, column: 264, scope: !6682, inlinedAt: !5538)
!7228 = !DILocation(line: 780, column: 251, scope: !6682, inlinedAt: !5538)
!7229 = !DILocation(line: 780, column: 259, scope: !6682, inlinedAt: !5538)
!7230 = !DILocation(line: 780, column: 278, scope: !6682, inlinedAt: !5538)
!7231 = !DILocation(line: 780, column: 276, scope: !6682, inlinedAt: !5538)
!7232 = !DILocation(line: 780, column: 281, scope: !6682, inlinedAt: !5538)
!7233 = !DILocation(line: 780, column: 290, scope: !6696, inlinedAt: !5538)
!7234 = !DILocation(line: 780, column: 298, scope: !6696, inlinedAt: !5538)
!7235 = !DILocation(line: 781, column: 15, scope: !5456, inlinedAt: !5538)
!7236 = !DILocation(line: 781, column: 5, scope: !5456, inlinedAt: !5538)
!7237 = !DILocation(line: 781, column: 13, scope: !5456, inlinedAt: !5538)
!7238 = !DILocation(line: 1510, column: 33, scope: !5539)
!7239 = !DILocation(line: 1511, column: 21, scope: !5539)
!7240 = !DILocation(line: 1511, column: 32, scope: !7241)
!7241 = !DILexicalBlockFile(scope: !5462, file: !1665, discriminator: 1)
!7242 = !DILocation(line: 1511, column: 35, scope: !7241)
!7243 = !DILocation(line: 1512, column: 39, scope: !5523)
!7244 = !DILocation(line: 1512, column: 45, scope: !5523)
!7245 = !DILocation(line: 1512, column: 48, scope: !5523)
!7246 = !DILocation(line: 1512, column: 25, scope: !5523)
!7247 = !DILocation(line: 778, column: 9, scope: !5484, inlinedAt: !5522)
!7248 = !DILocation(line: 778, column: 12, scope: !5484, inlinedAt: !5522)
!7249 = !DILocation(line: 778, column: 9, scope: !5456, inlinedAt: !5522)
!7250 = !DILocation(line: 778, column: 29, scope: !6505, inlinedAt: !5522)
!7251 = !DILocation(line: 778, column: 32, scope: !6505, inlinedAt: !5522)
!7252 = !DILocation(line: 778, column: 39, scope: !6505, inlinedAt: !5522)
!7253 = !DILocation(line: 778, column: 24, scope: !6505, inlinedAt: !5522)
!7254 = !DILocation(line: 778, column: 55, scope: !6505, inlinedAt: !5522)
!7255 = !DILocation(line: 778, column: 64, scope: !6505, inlinedAt: !5522)
!7256 = !DILocation(line: 778, column: 62, scope: !6505, inlinedAt: !5522)
!7257 = !DILocation(line: 778, column: 58, scope: !6505, inlinedAt: !5522)
!7258 = !DILocation(line: 778, column: 45, scope: !6505, inlinedAt: !5522)
!7259 = !DILocation(line: 778, column: 53, scope: !6505, inlinedAt: !5522)
!7260 = !DILocation(line: 778, column: 72, scope: !6505, inlinedAt: !5522)
!7261 = !DILocation(line: 778, column: 70, scope: !6505, inlinedAt: !5522)
!7262 = !DILocation(line: 778, column: 75, scope: !6505, inlinedAt: !5522)
!7263 = !DILocation(line: 778, column: 86, scope: !6519, inlinedAt: !5522)
!7264 = !DILocation(line: 778, column: 89, scope: !6519, inlinedAt: !5522)
!7265 = !DILocation(line: 778, column: 107, scope: !6522, inlinedAt: !5522)
!7266 = !DILocation(line: 778, column: 110, scope: !6522, inlinedAt: !5522)
!7267 = !DILocation(line: 778, column: 97, scope: !6522, inlinedAt: !5522)
!7268 = !DILocation(line: 778, column: 105, scope: !6522, inlinedAt: !5522)
!7269 = !DILocation(line: 778, column: 118, scope: !6522, inlinedAt: !5522)
!7270 = !DILocation(line: 778, column: 125, scope: !6522, inlinedAt: !5522)
!7271 = !DILocation(line: 778, column: 136, scope: !6530, inlinedAt: !5522)
!7272 = !DILocation(line: 778, column: 139, scope: !6530, inlinedAt: !5522)
!7273 = !DILocation(line: 778, column: 156, scope: !6533, inlinedAt: !5522)
!7274 = !DILocation(line: 778, column: 159, scope: !6533, inlinedAt: !5522)
!7275 = !DILocation(line: 778, column: 166, scope: !6533, inlinedAt: !5522)
!7276 = !DILocation(line: 778, column: 151, scope: !6533, inlinedAt: !5522)
!7277 = !DILocation(line: 778, column: 183, scope: !6533, inlinedAt: !5522)
!7278 = !DILocation(line: 778, column: 192, scope: !6533, inlinedAt: !5522)
!7279 = !DILocation(line: 778, column: 190, scope: !6533, inlinedAt: !5522)
!7280 = !DILocation(line: 778, column: 186, scope: !6533, inlinedAt: !5522)
!7281 = !DILocation(line: 778, column: 173, scope: !6533, inlinedAt: !5522)
!7282 = !DILocation(line: 778, column: 181, scope: !6533, inlinedAt: !5522)
!7283 = !DILocation(line: 778, column: 200, scope: !6533, inlinedAt: !5522)
!7284 = !DILocation(line: 778, column: 198, scope: !6533, inlinedAt: !5522)
!7285 = !DILocation(line: 778, column: 203, scope: !6533, inlinedAt: !5522)
!7286 = !DILocation(line: 778, column: 214, scope: !6547, inlinedAt: !5522)
!7287 = !DILocation(line: 778, column: 217, scope: !6547, inlinedAt: !5522)
!7288 = !DILocation(line: 778, column: 234, scope: !6550, inlinedAt: !5522)
!7289 = !DILocation(line: 778, column: 237, scope: !6550, inlinedAt: !5522)
!7290 = !DILocation(line: 778, column: 244, scope: !6550, inlinedAt: !5522)
!7291 = !DILocation(line: 778, column: 229, scope: !6550, inlinedAt: !5522)
!7292 = !DILocation(line: 778, column: 261, scope: !6550, inlinedAt: !5522)
!7293 = !DILocation(line: 778, column: 270, scope: !6550, inlinedAt: !5522)
!7294 = !DILocation(line: 778, column: 268, scope: !6550, inlinedAt: !5522)
!7295 = !DILocation(line: 778, column: 264, scope: !6550, inlinedAt: !5522)
!7296 = !DILocation(line: 778, column: 251, scope: !6550, inlinedAt: !5522)
!7297 = !DILocation(line: 778, column: 259, scope: !6550, inlinedAt: !5522)
!7298 = !DILocation(line: 778, column: 278, scope: !6550, inlinedAt: !5522)
!7299 = !DILocation(line: 778, column: 276, scope: !6550, inlinedAt: !5522)
!7300 = !DILocation(line: 778, column: 281, scope: !6550, inlinedAt: !5522)
!7301 = !DILocation(line: 778, column: 290, scope: !6564, inlinedAt: !5522)
!7302 = !DILocation(line: 778, column: 298, scope: !6564, inlinedAt: !5522)
!7303 = !DILocation(line: 779, column: 9, scope: !5497, inlinedAt: !5522)
!7304 = !DILocation(line: 779, column: 12, scope: !5497, inlinedAt: !5522)
!7305 = !DILocation(line: 779, column: 9, scope: !5456, inlinedAt: !5522)
!7306 = !DILocation(line: 779, column: 29, scope: !6571, inlinedAt: !5522)
!7307 = !DILocation(line: 779, column: 32, scope: !6571, inlinedAt: !5522)
!7308 = !DILocation(line: 779, column: 39, scope: !6571, inlinedAt: !5522)
!7309 = !DILocation(line: 779, column: 24, scope: !6571, inlinedAt: !5522)
!7310 = !DILocation(line: 779, column: 55, scope: !6571, inlinedAt: !5522)
!7311 = !DILocation(line: 779, column: 64, scope: !6571, inlinedAt: !5522)
!7312 = !DILocation(line: 779, column: 62, scope: !6571, inlinedAt: !5522)
!7313 = !DILocation(line: 779, column: 58, scope: !6571, inlinedAt: !5522)
!7314 = !DILocation(line: 779, column: 45, scope: !6571, inlinedAt: !5522)
!7315 = !DILocation(line: 779, column: 53, scope: !6571, inlinedAt: !5522)
!7316 = !DILocation(line: 779, column: 72, scope: !6571, inlinedAt: !5522)
!7317 = !DILocation(line: 779, column: 70, scope: !6571, inlinedAt: !5522)
!7318 = !DILocation(line: 779, column: 75, scope: !6571, inlinedAt: !5522)
!7319 = !DILocation(line: 779, column: 86, scope: !6585, inlinedAt: !5522)
!7320 = !DILocation(line: 779, column: 89, scope: !6585, inlinedAt: !5522)
!7321 = !DILocation(line: 779, column: 107, scope: !6588, inlinedAt: !5522)
!7322 = !DILocation(line: 779, column: 110, scope: !6588, inlinedAt: !5522)
!7323 = !DILocation(line: 779, column: 97, scope: !6588, inlinedAt: !5522)
!7324 = !DILocation(line: 779, column: 105, scope: !6588, inlinedAt: !5522)
!7325 = !DILocation(line: 779, column: 118, scope: !6588, inlinedAt: !5522)
!7326 = !DILocation(line: 779, column: 125, scope: !6588, inlinedAt: !5522)
!7327 = !DILocation(line: 779, column: 136, scope: !6596, inlinedAt: !5522)
!7328 = !DILocation(line: 779, column: 139, scope: !6596, inlinedAt: !5522)
!7329 = !DILocation(line: 779, column: 156, scope: !6599, inlinedAt: !5522)
!7330 = !DILocation(line: 779, column: 159, scope: !6599, inlinedAt: !5522)
!7331 = !DILocation(line: 779, column: 166, scope: !6599, inlinedAt: !5522)
!7332 = !DILocation(line: 779, column: 151, scope: !6599, inlinedAt: !5522)
!7333 = !DILocation(line: 779, column: 183, scope: !6599, inlinedAt: !5522)
!7334 = !DILocation(line: 779, column: 192, scope: !6599, inlinedAt: !5522)
!7335 = !DILocation(line: 779, column: 190, scope: !6599, inlinedAt: !5522)
!7336 = !DILocation(line: 779, column: 186, scope: !6599, inlinedAt: !5522)
!7337 = !DILocation(line: 779, column: 173, scope: !6599, inlinedAt: !5522)
!7338 = !DILocation(line: 779, column: 181, scope: !6599, inlinedAt: !5522)
!7339 = !DILocation(line: 779, column: 200, scope: !6599, inlinedAt: !5522)
!7340 = !DILocation(line: 779, column: 198, scope: !6599, inlinedAt: !5522)
!7341 = !DILocation(line: 779, column: 203, scope: !6599, inlinedAt: !5522)
!7342 = !DILocation(line: 779, column: 214, scope: !6613, inlinedAt: !5522)
!7343 = !DILocation(line: 779, column: 217, scope: !6613, inlinedAt: !5522)
!7344 = !DILocation(line: 779, column: 234, scope: !6616, inlinedAt: !5522)
!7345 = !DILocation(line: 779, column: 237, scope: !6616, inlinedAt: !5522)
!7346 = !DILocation(line: 779, column: 244, scope: !6616, inlinedAt: !5522)
!7347 = !DILocation(line: 779, column: 229, scope: !6616, inlinedAt: !5522)
!7348 = !DILocation(line: 779, column: 261, scope: !6616, inlinedAt: !5522)
!7349 = !DILocation(line: 779, column: 270, scope: !6616, inlinedAt: !5522)
!7350 = !DILocation(line: 779, column: 268, scope: !6616, inlinedAt: !5522)
!7351 = !DILocation(line: 779, column: 264, scope: !6616, inlinedAt: !5522)
!7352 = !DILocation(line: 779, column: 251, scope: !6616, inlinedAt: !5522)
!7353 = !DILocation(line: 779, column: 259, scope: !6616, inlinedAt: !5522)
!7354 = !DILocation(line: 779, column: 278, scope: !6616, inlinedAt: !5522)
!7355 = !DILocation(line: 779, column: 276, scope: !6616, inlinedAt: !5522)
!7356 = !DILocation(line: 779, column: 281, scope: !6616, inlinedAt: !5522)
!7357 = !DILocation(line: 779, column: 290, scope: !6630, inlinedAt: !5522)
!7358 = !DILocation(line: 779, column: 298, scope: !6630, inlinedAt: !5522)
!7359 = !DILocation(line: 780, column: 9, scope: !5510, inlinedAt: !5522)
!7360 = !DILocation(line: 780, column: 12, scope: !5510, inlinedAt: !5522)
!7361 = !DILocation(line: 780, column: 9, scope: !5456, inlinedAt: !5522)
!7362 = !DILocation(line: 780, column: 29, scope: !6637, inlinedAt: !5522)
!7363 = !DILocation(line: 780, column: 32, scope: !6637, inlinedAt: !5522)
!7364 = !DILocation(line: 780, column: 39, scope: !6637, inlinedAt: !5522)
!7365 = !DILocation(line: 780, column: 24, scope: !6637, inlinedAt: !5522)
!7366 = !DILocation(line: 780, column: 55, scope: !6637, inlinedAt: !5522)
!7367 = !DILocation(line: 780, column: 64, scope: !6637, inlinedAt: !5522)
!7368 = !DILocation(line: 780, column: 62, scope: !6637, inlinedAt: !5522)
!7369 = !DILocation(line: 780, column: 58, scope: !6637, inlinedAt: !5522)
!7370 = !DILocation(line: 780, column: 45, scope: !6637, inlinedAt: !5522)
!7371 = !DILocation(line: 780, column: 53, scope: !6637, inlinedAt: !5522)
!7372 = !DILocation(line: 780, column: 72, scope: !6637, inlinedAt: !5522)
!7373 = !DILocation(line: 780, column: 70, scope: !6637, inlinedAt: !5522)
!7374 = !DILocation(line: 780, column: 75, scope: !6637, inlinedAt: !5522)
!7375 = !DILocation(line: 780, column: 86, scope: !6651, inlinedAt: !5522)
!7376 = !DILocation(line: 780, column: 89, scope: !6651, inlinedAt: !5522)
!7377 = !DILocation(line: 780, column: 107, scope: !6654, inlinedAt: !5522)
!7378 = !DILocation(line: 780, column: 110, scope: !6654, inlinedAt: !5522)
!7379 = !DILocation(line: 780, column: 97, scope: !6654, inlinedAt: !5522)
!7380 = !DILocation(line: 780, column: 105, scope: !6654, inlinedAt: !5522)
!7381 = !DILocation(line: 780, column: 118, scope: !6654, inlinedAt: !5522)
!7382 = !DILocation(line: 780, column: 125, scope: !6654, inlinedAt: !5522)
!7383 = !DILocation(line: 780, column: 136, scope: !6662, inlinedAt: !5522)
!7384 = !DILocation(line: 780, column: 139, scope: !6662, inlinedAt: !5522)
!7385 = !DILocation(line: 780, column: 156, scope: !6665, inlinedAt: !5522)
!7386 = !DILocation(line: 780, column: 159, scope: !6665, inlinedAt: !5522)
!7387 = !DILocation(line: 780, column: 166, scope: !6665, inlinedAt: !5522)
!7388 = !DILocation(line: 780, column: 151, scope: !6665, inlinedAt: !5522)
!7389 = !DILocation(line: 780, column: 183, scope: !6665, inlinedAt: !5522)
!7390 = !DILocation(line: 780, column: 192, scope: !6665, inlinedAt: !5522)
!7391 = !DILocation(line: 780, column: 190, scope: !6665, inlinedAt: !5522)
!7392 = !DILocation(line: 780, column: 186, scope: !6665, inlinedAt: !5522)
!7393 = !DILocation(line: 780, column: 173, scope: !6665, inlinedAt: !5522)
!7394 = !DILocation(line: 780, column: 181, scope: !6665, inlinedAt: !5522)
!7395 = !DILocation(line: 780, column: 200, scope: !6665, inlinedAt: !5522)
!7396 = !DILocation(line: 780, column: 198, scope: !6665, inlinedAt: !5522)
!7397 = !DILocation(line: 780, column: 203, scope: !6665, inlinedAt: !5522)
!7398 = !DILocation(line: 780, column: 214, scope: !6679, inlinedAt: !5522)
!7399 = !DILocation(line: 780, column: 217, scope: !6679, inlinedAt: !5522)
!7400 = !DILocation(line: 780, column: 234, scope: !6682, inlinedAt: !5522)
!7401 = !DILocation(line: 780, column: 237, scope: !6682, inlinedAt: !5522)
!7402 = !DILocation(line: 780, column: 244, scope: !6682, inlinedAt: !5522)
!7403 = !DILocation(line: 780, column: 229, scope: !6682, inlinedAt: !5522)
!7404 = !DILocation(line: 780, column: 261, scope: !6682, inlinedAt: !5522)
!7405 = !DILocation(line: 780, column: 270, scope: !6682, inlinedAt: !5522)
!7406 = !DILocation(line: 780, column: 268, scope: !6682, inlinedAt: !5522)
!7407 = !DILocation(line: 780, column: 264, scope: !6682, inlinedAt: !5522)
!7408 = !DILocation(line: 780, column: 251, scope: !6682, inlinedAt: !5522)
!7409 = !DILocation(line: 780, column: 259, scope: !6682, inlinedAt: !5522)
!7410 = !DILocation(line: 780, column: 278, scope: !6682, inlinedAt: !5522)
!7411 = !DILocation(line: 780, column: 276, scope: !6682, inlinedAt: !5522)
!7412 = !DILocation(line: 780, column: 281, scope: !6682, inlinedAt: !5522)
!7413 = !DILocation(line: 780, column: 290, scope: !6696, inlinedAt: !5522)
!7414 = !DILocation(line: 780, column: 298, scope: !6696, inlinedAt: !5522)
!7415 = !DILocation(line: 781, column: 15, scope: !5456, inlinedAt: !5522)
!7416 = !DILocation(line: 781, column: 5, scope: !5456, inlinedAt: !5522)
!7417 = !DILocation(line: 781, column: 13, scope: !5456, inlinedAt: !5522)
!7418 = !DILocation(line: 1513, column: 33, scope: !5523)
!7419 = !DILocation(line: 1514, column: 21, scope: !5523)
!7420 = !DILocation(line: 1515, column: 39, scope: !5461)
!7421 = !DILocation(line: 1515, column: 45, scope: !5461)
!7422 = !DILocation(line: 1515, column: 48, scope: !5461)
!7423 = !DILocation(line: 1515, column: 25, scope: !5461)
!7424 = !DILocation(line: 778, column: 9, scope: !5484, inlinedAt: !5460)
!7425 = !DILocation(line: 778, column: 12, scope: !5484, inlinedAt: !5460)
!7426 = !DILocation(line: 778, column: 9, scope: !5456, inlinedAt: !5460)
!7427 = !DILocation(line: 778, column: 29, scope: !6505, inlinedAt: !5460)
!7428 = !DILocation(line: 778, column: 32, scope: !6505, inlinedAt: !5460)
!7429 = !DILocation(line: 778, column: 39, scope: !6505, inlinedAt: !5460)
!7430 = !DILocation(line: 778, column: 24, scope: !6505, inlinedAt: !5460)
!7431 = !DILocation(line: 778, column: 55, scope: !6505, inlinedAt: !5460)
!7432 = !DILocation(line: 778, column: 64, scope: !6505, inlinedAt: !5460)
!7433 = !DILocation(line: 778, column: 62, scope: !6505, inlinedAt: !5460)
!7434 = !DILocation(line: 778, column: 58, scope: !6505, inlinedAt: !5460)
!7435 = !DILocation(line: 778, column: 45, scope: !6505, inlinedAt: !5460)
!7436 = !DILocation(line: 778, column: 53, scope: !6505, inlinedAt: !5460)
!7437 = !DILocation(line: 778, column: 72, scope: !6505, inlinedAt: !5460)
!7438 = !DILocation(line: 778, column: 70, scope: !6505, inlinedAt: !5460)
!7439 = !DILocation(line: 778, column: 75, scope: !6505, inlinedAt: !5460)
!7440 = !DILocation(line: 778, column: 86, scope: !6519, inlinedAt: !5460)
!7441 = !DILocation(line: 778, column: 89, scope: !6519, inlinedAt: !5460)
!7442 = !DILocation(line: 778, column: 107, scope: !6522, inlinedAt: !5460)
!7443 = !DILocation(line: 778, column: 110, scope: !6522, inlinedAt: !5460)
!7444 = !DILocation(line: 778, column: 97, scope: !6522, inlinedAt: !5460)
!7445 = !DILocation(line: 778, column: 105, scope: !6522, inlinedAt: !5460)
!7446 = !DILocation(line: 778, column: 118, scope: !6522, inlinedAt: !5460)
!7447 = !DILocation(line: 778, column: 125, scope: !6522, inlinedAt: !5460)
!7448 = !DILocation(line: 778, column: 136, scope: !6530, inlinedAt: !5460)
!7449 = !DILocation(line: 778, column: 139, scope: !6530, inlinedAt: !5460)
!7450 = !DILocation(line: 778, column: 156, scope: !6533, inlinedAt: !5460)
!7451 = !DILocation(line: 778, column: 159, scope: !6533, inlinedAt: !5460)
!7452 = !DILocation(line: 778, column: 166, scope: !6533, inlinedAt: !5460)
!7453 = !DILocation(line: 778, column: 151, scope: !6533, inlinedAt: !5460)
!7454 = !DILocation(line: 778, column: 183, scope: !6533, inlinedAt: !5460)
!7455 = !DILocation(line: 778, column: 192, scope: !6533, inlinedAt: !5460)
!7456 = !DILocation(line: 778, column: 190, scope: !6533, inlinedAt: !5460)
!7457 = !DILocation(line: 778, column: 186, scope: !6533, inlinedAt: !5460)
!7458 = !DILocation(line: 778, column: 173, scope: !6533, inlinedAt: !5460)
!7459 = !DILocation(line: 778, column: 181, scope: !6533, inlinedAt: !5460)
!7460 = !DILocation(line: 778, column: 200, scope: !6533, inlinedAt: !5460)
!7461 = !DILocation(line: 778, column: 198, scope: !6533, inlinedAt: !5460)
!7462 = !DILocation(line: 778, column: 203, scope: !6533, inlinedAt: !5460)
!7463 = !DILocation(line: 778, column: 214, scope: !6547, inlinedAt: !5460)
!7464 = !DILocation(line: 778, column: 217, scope: !6547, inlinedAt: !5460)
!7465 = !DILocation(line: 778, column: 234, scope: !6550, inlinedAt: !5460)
!7466 = !DILocation(line: 778, column: 237, scope: !6550, inlinedAt: !5460)
!7467 = !DILocation(line: 778, column: 244, scope: !6550, inlinedAt: !5460)
!7468 = !DILocation(line: 778, column: 229, scope: !6550, inlinedAt: !5460)
!7469 = !DILocation(line: 778, column: 261, scope: !6550, inlinedAt: !5460)
!7470 = !DILocation(line: 778, column: 270, scope: !6550, inlinedAt: !5460)
!7471 = !DILocation(line: 778, column: 268, scope: !6550, inlinedAt: !5460)
!7472 = !DILocation(line: 778, column: 264, scope: !6550, inlinedAt: !5460)
!7473 = !DILocation(line: 778, column: 251, scope: !6550, inlinedAt: !5460)
!7474 = !DILocation(line: 778, column: 259, scope: !6550, inlinedAt: !5460)
!7475 = !DILocation(line: 778, column: 278, scope: !6550, inlinedAt: !5460)
!7476 = !DILocation(line: 778, column: 276, scope: !6550, inlinedAt: !5460)
!7477 = !DILocation(line: 778, column: 281, scope: !6550, inlinedAt: !5460)
!7478 = !DILocation(line: 778, column: 290, scope: !6564, inlinedAt: !5460)
!7479 = !DILocation(line: 778, column: 298, scope: !6564, inlinedAt: !5460)
!7480 = !DILocation(line: 779, column: 9, scope: !5497, inlinedAt: !5460)
!7481 = !DILocation(line: 779, column: 12, scope: !5497, inlinedAt: !5460)
!7482 = !DILocation(line: 779, column: 9, scope: !5456, inlinedAt: !5460)
!7483 = !DILocation(line: 779, column: 29, scope: !6571, inlinedAt: !5460)
!7484 = !DILocation(line: 779, column: 32, scope: !6571, inlinedAt: !5460)
!7485 = !DILocation(line: 779, column: 39, scope: !6571, inlinedAt: !5460)
!7486 = !DILocation(line: 779, column: 24, scope: !6571, inlinedAt: !5460)
!7487 = !DILocation(line: 779, column: 55, scope: !6571, inlinedAt: !5460)
!7488 = !DILocation(line: 779, column: 64, scope: !6571, inlinedAt: !5460)
!7489 = !DILocation(line: 779, column: 62, scope: !6571, inlinedAt: !5460)
!7490 = !DILocation(line: 779, column: 58, scope: !6571, inlinedAt: !5460)
!7491 = !DILocation(line: 779, column: 45, scope: !6571, inlinedAt: !5460)
!7492 = !DILocation(line: 779, column: 53, scope: !6571, inlinedAt: !5460)
!7493 = !DILocation(line: 779, column: 72, scope: !6571, inlinedAt: !5460)
!7494 = !DILocation(line: 779, column: 70, scope: !6571, inlinedAt: !5460)
!7495 = !DILocation(line: 779, column: 75, scope: !6571, inlinedAt: !5460)
!7496 = !DILocation(line: 779, column: 86, scope: !6585, inlinedAt: !5460)
!7497 = !DILocation(line: 779, column: 89, scope: !6585, inlinedAt: !5460)
!7498 = !DILocation(line: 779, column: 107, scope: !6588, inlinedAt: !5460)
!7499 = !DILocation(line: 779, column: 110, scope: !6588, inlinedAt: !5460)
!7500 = !DILocation(line: 779, column: 97, scope: !6588, inlinedAt: !5460)
!7501 = !DILocation(line: 779, column: 105, scope: !6588, inlinedAt: !5460)
!7502 = !DILocation(line: 779, column: 118, scope: !6588, inlinedAt: !5460)
!7503 = !DILocation(line: 779, column: 125, scope: !6588, inlinedAt: !5460)
!7504 = !DILocation(line: 779, column: 136, scope: !6596, inlinedAt: !5460)
!7505 = !DILocation(line: 779, column: 139, scope: !6596, inlinedAt: !5460)
!7506 = !DILocation(line: 779, column: 156, scope: !6599, inlinedAt: !5460)
!7507 = !DILocation(line: 779, column: 159, scope: !6599, inlinedAt: !5460)
!7508 = !DILocation(line: 779, column: 166, scope: !6599, inlinedAt: !5460)
!7509 = !DILocation(line: 779, column: 151, scope: !6599, inlinedAt: !5460)
!7510 = !DILocation(line: 779, column: 183, scope: !6599, inlinedAt: !5460)
!7511 = !DILocation(line: 779, column: 192, scope: !6599, inlinedAt: !5460)
!7512 = !DILocation(line: 779, column: 190, scope: !6599, inlinedAt: !5460)
!7513 = !DILocation(line: 779, column: 186, scope: !6599, inlinedAt: !5460)
!7514 = !DILocation(line: 779, column: 173, scope: !6599, inlinedAt: !5460)
!7515 = !DILocation(line: 779, column: 181, scope: !6599, inlinedAt: !5460)
!7516 = !DILocation(line: 779, column: 200, scope: !6599, inlinedAt: !5460)
!7517 = !DILocation(line: 779, column: 198, scope: !6599, inlinedAt: !5460)
!7518 = !DILocation(line: 779, column: 203, scope: !6599, inlinedAt: !5460)
!7519 = !DILocation(line: 779, column: 214, scope: !6613, inlinedAt: !5460)
!7520 = !DILocation(line: 779, column: 217, scope: !6613, inlinedAt: !5460)
!7521 = !DILocation(line: 779, column: 234, scope: !6616, inlinedAt: !5460)
!7522 = !DILocation(line: 779, column: 237, scope: !6616, inlinedAt: !5460)
!7523 = !DILocation(line: 779, column: 244, scope: !6616, inlinedAt: !5460)
!7524 = !DILocation(line: 779, column: 229, scope: !6616, inlinedAt: !5460)
!7525 = !DILocation(line: 779, column: 261, scope: !6616, inlinedAt: !5460)
!7526 = !DILocation(line: 779, column: 270, scope: !6616, inlinedAt: !5460)
!7527 = !DILocation(line: 779, column: 268, scope: !6616, inlinedAt: !5460)
!7528 = !DILocation(line: 779, column: 264, scope: !6616, inlinedAt: !5460)
!7529 = !DILocation(line: 779, column: 251, scope: !6616, inlinedAt: !5460)
!7530 = !DILocation(line: 779, column: 259, scope: !6616, inlinedAt: !5460)
!7531 = !DILocation(line: 779, column: 278, scope: !6616, inlinedAt: !5460)
!7532 = !DILocation(line: 779, column: 276, scope: !6616, inlinedAt: !5460)
!7533 = !DILocation(line: 779, column: 281, scope: !6616, inlinedAt: !5460)
!7534 = !DILocation(line: 779, column: 290, scope: !6630, inlinedAt: !5460)
!7535 = !DILocation(line: 779, column: 298, scope: !6630, inlinedAt: !5460)
!7536 = !DILocation(line: 780, column: 9, scope: !5510, inlinedAt: !5460)
!7537 = !DILocation(line: 780, column: 12, scope: !5510, inlinedAt: !5460)
!7538 = !DILocation(line: 780, column: 9, scope: !5456, inlinedAt: !5460)
!7539 = !DILocation(line: 780, column: 29, scope: !6637, inlinedAt: !5460)
!7540 = !DILocation(line: 780, column: 32, scope: !6637, inlinedAt: !5460)
!7541 = !DILocation(line: 780, column: 39, scope: !6637, inlinedAt: !5460)
!7542 = !DILocation(line: 780, column: 24, scope: !6637, inlinedAt: !5460)
!7543 = !DILocation(line: 780, column: 55, scope: !6637, inlinedAt: !5460)
!7544 = !DILocation(line: 780, column: 64, scope: !6637, inlinedAt: !5460)
!7545 = !DILocation(line: 780, column: 62, scope: !6637, inlinedAt: !5460)
!7546 = !DILocation(line: 780, column: 58, scope: !6637, inlinedAt: !5460)
!7547 = !DILocation(line: 780, column: 45, scope: !6637, inlinedAt: !5460)
!7548 = !DILocation(line: 780, column: 53, scope: !6637, inlinedAt: !5460)
!7549 = !DILocation(line: 780, column: 72, scope: !6637, inlinedAt: !5460)
!7550 = !DILocation(line: 780, column: 70, scope: !6637, inlinedAt: !5460)
!7551 = !DILocation(line: 780, column: 75, scope: !6637, inlinedAt: !5460)
!7552 = !DILocation(line: 780, column: 86, scope: !6651, inlinedAt: !5460)
!7553 = !DILocation(line: 780, column: 89, scope: !6651, inlinedAt: !5460)
!7554 = !DILocation(line: 780, column: 107, scope: !6654, inlinedAt: !5460)
!7555 = !DILocation(line: 780, column: 110, scope: !6654, inlinedAt: !5460)
!7556 = !DILocation(line: 780, column: 97, scope: !6654, inlinedAt: !5460)
!7557 = !DILocation(line: 780, column: 105, scope: !6654, inlinedAt: !5460)
!7558 = !DILocation(line: 780, column: 118, scope: !6654, inlinedAt: !5460)
!7559 = !DILocation(line: 780, column: 125, scope: !6654, inlinedAt: !5460)
!7560 = !DILocation(line: 780, column: 136, scope: !6662, inlinedAt: !5460)
!7561 = !DILocation(line: 780, column: 139, scope: !6662, inlinedAt: !5460)
!7562 = !DILocation(line: 780, column: 156, scope: !6665, inlinedAt: !5460)
!7563 = !DILocation(line: 780, column: 159, scope: !6665, inlinedAt: !5460)
!7564 = !DILocation(line: 780, column: 166, scope: !6665, inlinedAt: !5460)
!7565 = !DILocation(line: 780, column: 151, scope: !6665, inlinedAt: !5460)
!7566 = !DILocation(line: 780, column: 183, scope: !6665, inlinedAt: !5460)
!7567 = !DILocation(line: 780, column: 192, scope: !6665, inlinedAt: !5460)
!7568 = !DILocation(line: 780, column: 190, scope: !6665, inlinedAt: !5460)
!7569 = !DILocation(line: 780, column: 186, scope: !6665, inlinedAt: !5460)
!7570 = !DILocation(line: 780, column: 173, scope: !6665, inlinedAt: !5460)
!7571 = !DILocation(line: 780, column: 181, scope: !6665, inlinedAt: !5460)
!7572 = !DILocation(line: 780, column: 200, scope: !6665, inlinedAt: !5460)
!7573 = !DILocation(line: 780, column: 198, scope: !6665, inlinedAt: !5460)
!7574 = !DILocation(line: 780, column: 203, scope: !6665, inlinedAt: !5460)
!7575 = !DILocation(line: 780, column: 214, scope: !6679, inlinedAt: !5460)
!7576 = !DILocation(line: 780, column: 217, scope: !6679, inlinedAt: !5460)
!7577 = !DILocation(line: 780, column: 234, scope: !6682, inlinedAt: !5460)
!7578 = !DILocation(line: 780, column: 237, scope: !6682, inlinedAt: !5460)
!7579 = !DILocation(line: 780, column: 244, scope: !6682, inlinedAt: !5460)
!7580 = !DILocation(line: 780, column: 229, scope: !6682, inlinedAt: !5460)
!7581 = !DILocation(line: 780, column: 261, scope: !6682, inlinedAt: !5460)
!7582 = !DILocation(line: 780, column: 270, scope: !6682, inlinedAt: !5460)
!7583 = !DILocation(line: 780, column: 268, scope: !6682, inlinedAt: !5460)
!7584 = !DILocation(line: 780, column: 264, scope: !6682, inlinedAt: !5460)
!7585 = !DILocation(line: 780, column: 251, scope: !6682, inlinedAt: !5460)
!7586 = !DILocation(line: 780, column: 259, scope: !6682, inlinedAt: !5460)
!7587 = !DILocation(line: 780, column: 278, scope: !6682, inlinedAt: !5460)
!7588 = !DILocation(line: 780, column: 276, scope: !6682, inlinedAt: !5460)
!7589 = !DILocation(line: 780, column: 281, scope: !6682, inlinedAt: !5460)
!7590 = !DILocation(line: 780, column: 290, scope: !6696, inlinedAt: !5460)
!7591 = !DILocation(line: 780, column: 298, scope: !6696, inlinedAt: !5460)
!7592 = !DILocation(line: 781, column: 15, scope: !5456, inlinedAt: !5460)
!7593 = !DILocation(line: 781, column: 5, scope: !5456, inlinedAt: !5460)
!7594 = !DILocation(line: 781, column: 13, scope: !5456, inlinedAt: !5460)
!7595 = !DILocation(line: 1516, column: 33, scope: !5461)
!7596 = !DILocation(line: 1517, column: 25, scope: !5461)
!7597 = !DILocation(line: 1517, column: 28, scope: !5461)
!7598 = !DILocation(line: 1517, column: 36, scope: !5461)
!7599 = !DILocation(line: 1521, column: 19, scope: !5466)
!7600 = !DILocation(line: 1522, column: 24, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !5466, file: !1665, line: 1522, column: 17)
!7602 = !DILocation(line: 1522, column: 22, scope: !7601)
!7603 = !DILocation(line: 1522, column: 29, scope: !7604)
!7604 = !DILexicalBlockFile(scope: !7605, file: !1665, discriminator: 1)
!7605 = distinct !DILexicalBlock(scope: !7601, file: !1665, line: 1522, column: 17)
!7606 = !DILocation(line: 1522, column: 31, scope: !7604)
!7607 = !DILocation(line: 1522, column: 17, scope: !7604)
!7608 = !DILocation(line: 1523, column: 56, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7605, file: !1665, line: 1522, column: 41)
!7610 = !DILocation(line: 1523, column: 25, scope: !7609)
!7611 = !DILocation(line: 1523, column: 48, scope: !7609)
!7612 = !DILocation(line: 1523, column: 39, scope: !7609)
!7613 = !DILocation(line: 1523, column: 23, scope: !7609)
!7614 = !DILocation(line: 1524, column: 31, scope: !7609)
!7615 = !DILocation(line: 1524, column: 26, scope: !7609)
!7616 = !DILocation(line: 1524, column: 24, scope: !7609)
!7617 = !DILocation(line: 1525, column: 25, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7609, file: !1665, line: 1525, column: 25)
!7619 = !DILocation(line: 1525, column: 25, scope: !7609)
!7620 = !DILocation(line: 1526, column: 32, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !1665, line: 1526, column: 25)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !1665, line: 1525, column: 29)
!7623 = !DILocation(line: 1526, column: 30, scope: !7621)
!7624 = !DILocation(line: 1526, column: 37, scope: !7625)
!7625 = !DILexicalBlockFile(scope: !7626, file: !1665, discriminator: 1)
!7626 = distinct !DILexicalBlock(scope: !7621, file: !1665, line: 1526, column: 25)
!7627 = !DILocation(line: 1526, column: 41, scope: !7625)
!7628 = !DILocation(line: 1526, column: 39, scope: !7625)
!7629 = !DILocation(line: 1526, column: 25, scope: !7625)
!7630 = !DILocation(line: 1527, column: 63, scope: !7626)
!7631 = !DILocation(line: 1527, column: 66, scope: !7626)
!7632 = !DILocation(line: 1527, column: 70, scope: !7626)
!7633 = !DILocation(line: 1527, column: 53, scope: !7626)
!7634 = !DILocation(line: 1527, column: 47, scope: !7626)
!7635 = !DILocation(line: 1527, column: 29, scope: !7626)
!7636 = !DILocation(line: 1527, column: 32, scope: !7626)
!7637 = !DILocation(line: 1527, column: 51, scope: !7626)
!7638 = !DILocation(line: 1526, column: 45, scope: !7639)
!7639 = !DILexicalBlockFile(scope: !7626, file: !1665, discriminator: 2)
!7640 = !DILocation(line: 1526, column: 25, scope: !7639)
!7641 = distinct !{!7641, !7642}
!7642 = !DILocation(line: 1526, column: 25, scope: !7622)
!7643 = !DILocation(line: 1528, column: 21, scope: !7622)
!7644 = !DILocation(line: 1529, column: 32, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !1665, line: 1529, column: 25)
!7646 = distinct !DILexicalBlock(scope: !7618, file: !1665, line: 1528, column: 28)
!7647 = !DILocation(line: 1529, column: 30, scope: !7645)
!7648 = !DILocation(line: 1529, column: 37, scope: !7649)
!7649 = !DILexicalBlockFile(scope: !7650, file: !1665, discriminator: 1)
!7650 = distinct !DILexicalBlock(scope: !7645, file: !1665, line: 1529, column: 25)
!7651 = !DILocation(line: 1529, column: 41, scope: !7649)
!7652 = !DILocation(line: 1529, column: 39, scope: !7649)
!7653 = !DILocation(line: 1529, column: 25, scope: !7649)
!7654 = !DILocation(line: 1530, column: 47, scope: !7650)
!7655 = !DILocation(line: 1530, column: 29, scope: !7650)
!7656 = !DILocation(line: 1530, column: 32, scope: !7650)
!7657 = !DILocation(line: 1530, column: 51, scope: !7650)
!7658 = !DILocation(line: 1529, column: 45, scope: !7659)
!7659 = !DILexicalBlockFile(scope: !7650, file: !1665, discriminator: 2)
!7660 = !DILocation(line: 1529, column: 25, scope: !7659)
!7661 = distinct !{!7661, !7662}
!7662 = !DILocation(line: 1529, column: 25, scope: !7646)
!7663 = !DILocation(line: 1532, column: 17, scope: !7609)
!7664 = !DILocation(line: 1522, column: 37, scope: !7665)
!7665 = !DILexicalBlockFile(scope: !7605, file: !1665, discriminator: 2)
!7666 = !DILocation(line: 1522, column: 17, scope: !7665)
!7667 = distinct !{!7667, !7668}
!7668 = !DILocation(line: 1522, column: 17, scope: !5466)
!7669 = !DILocation(line: 1534, column: 17, scope: !5466)
!7670 = !DILocation(line: 1534, column: 24, scope: !7671)
!7671 = !DILexicalBlockFile(scope: !7672, file: !1665, discriminator: 1)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !1665, line: 1534, column: 17)
!7673 = distinct !DILexicalBlock(scope: !5466, file: !1665, line: 1534, column: 17)
!7674 = !DILocation(line: 1534, column: 26, scope: !7671)
!7675 = !DILocation(line: 1534, column: 17, scope: !7671)
!7676 = !DILocation(line: 1535, column: 38, scope: !7672)
!7677 = !DILocation(line: 1535, column: 21, scope: !7672)
!7678 = !DILocation(line: 1535, column: 24, scope: !7672)
!7679 = !DILocation(line: 1535, column: 41, scope: !7672)
!7680 = !DILocation(line: 1534, column: 33, scope: !7681)
!7681 = !DILexicalBlockFile(scope: !7672, file: !1665, discriminator: 2)
!7682 = !DILocation(line: 1534, column: 17, scope: !7681)
!7683 = distinct !{!7683, !7669}
!7684 = !DILocation(line: 1538, column: 42, scope: !5468)
!7685 = !DILocation(line: 1538, column: 45, scope: !5468)
!7686 = !DILocation(line: 1538, column: 48, scope: !5468)
!7687 = !DILocation(line: 1538, column: 13, scope: !5468)
!7688 = !DILocation(line: 1541, column: 28, scope: !5468)
!7689 = !DILocation(line: 1541, column: 31, scope: !5468)
!7690 = !DILocation(line: 1541, column: 34, scope: !5468)
!7691 = !DILocation(line: 1541, column: 45, scope: !5468)
!7692 = !DILocation(line: 1541, column: 56, scope: !5468)
!7693 = !DILocation(line: 1541, column: 59, scope: !5468)
!7694 = !DILocation(line: 1541, column: 54, scope: !5468)
!7695 = !DILocation(line: 1541, column: 13, scope: !5468)
!7696 = !DILocation(line: 1542, column: 9, scope: !5468)
!7697 = !DILocation(line: 1428, column: 45, scope: !7698)
!7698 = !DILexicalBlockFile(scope: !5469, file: !1665, discriminator: 2)
!7699 = !DILocation(line: 1428, column: 9, scope: !7698)
!7700 = distinct !{!7700, !7701}
!7701 = !DILocation(line: 1428, column: 9, scope: !5471)
!7702 = !DILocation(line: 1544, column: 13, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !5471, file: !1665, line: 1544, column: 13)
!7704 = !DILocation(line: 1544, column: 16, scope: !7703)
!7705 = !DILocation(line: 1544, column: 21, scope: !7703)
!7706 = !DILocation(line: 1544, column: 13, scope: !5471)
!7707 = !DILocation(line: 1545, column: 28, scope: !7703)
!7708 = !DILocation(line: 1545, column: 47, scope: !7703)
!7709 = !DILocation(line: 1545, column: 32, scope: !7703)
!7710 = !DILocation(line: 1545, column: 35, scope: !7703)
!7711 = !DILocation(line: 1545, column: 68, scope: !7703)
!7712 = !DILocation(line: 1545, column: 53, scope: !7703)
!7713 = !DILocation(line: 1545, column: 56, scope: !7703)
!7714 = !DILocation(line: 1545, column: 13, scope: !7703)
!7715 = !DILocation(line: 1547, column: 17, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !5471, file: !1665, line: 1547, column: 9)
!7717 = !DILocation(line: 1547, column: 14, scope: !7716)
!7718 = !DILocation(line: 1547, column: 22, scope: !7719)
!7719 = !DILexicalBlockFile(scope: !7720, file: !1665, discriminator: 1)
!7720 = distinct !DILexicalBlock(scope: !7716, file: !1665, line: 1547, column: 9)
!7721 = !DILocation(line: 1547, column: 27, scope: !7719)
!7722 = !DILocation(line: 1547, column: 30, scope: !7719)
!7723 = !DILocation(line: 1547, column: 25, scope: !7719)
!7724 = !DILocation(line: 1547, column: 9, scope: !7719)
!7725 = !DILocation(line: 1548, column: 34, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !1665, line: 1547, column: 49)
!7727 = !DILocation(line: 1548, column: 18, scope: !7726)
!7728 = !DILocation(line: 1548, column: 30, scope: !7726)
!7729 = !DILocation(line: 1548, column: 21, scope: !7726)
!7730 = !DILocation(line: 1548, column: 15, scope: !7726)
!7731 = !DILocation(line: 1550, column: 27, scope: !7726)
!7732 = !DILocation(line: 1550, column: 30, scope: !7726)
!7733 = !DILocation(line: 1550, column: 13, scope: !7726)
!7734 = !DILocation(line: 1551, column: 31, scope: !7726)
!7735 = !DILocation(line: 1551, column: 34, scope: !7726)
!7736 = !DILocation(line: 1551, column: 13, scope: !7726)
!7737 = !DILocation(line: 1552, column: 27, scope: !7726)
!7738 = !DILocation(line: 1552, column: 30, scope: !7726)
!7739 = !DILocation(line: 1552, column: 57, scope: !7726)
!7740 = !DILocation(line: 1552, column: 55, scope: !7726)
!7741 = !DILocation(line: 1552, column: 34, scope: !7726)
!7742 = !DILocation(line: 1552, column: 48, scope: !7726)
!7743 = !DILocation(line: 1552, column: 37, scope: !7726)
!7744 = !DILocation(line: 1552, column: 77, scope: !7726)
!7745 = !DILocation(line: 1552, column: 65, scope: !7726)
!7746 = !DILocation(line: 1552, column: 68, scope: !7726)
!7747 = !DILocation(line: 1552, column: 13, scope: !7726)
!7748 = !DILocation(line: 1553, column: 9, scope: !7726)
!7749 = !DILocation(line: 1547, column: 45, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !7720, file: !1665, discriminator: 2)
!7751 = !DILocation(line: 1547, column: 9, scope: !7750)
!7752 = distinct !{!7752, !7753}
!7753 = !DILocation(line: 1547, column: 9, scope: !5471)
!7754 = !DILocation(line: 1554, column: 5, scope: !5471)
!7755 = !DILocation(line: 1427, column: 32, scope: !7756)
!7756 = !DILexicalBlockFile(scope: !5472, file: !1665, discriminator: 2)
!7757 = !DILocation(line: 1427, column: 5, scope: !7756)
!7758 = distinct !{!7758, !6175}
!7759 = !DILocation(line: 1555, column: 25, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !5454, file: !1665, line: 1555, column: 9)
!7761 = !DILocation(line: 1555, column: 28, scope: !7760)
!7762 = !DILocation(line: 1555, column: 9, scope: !7760)
!7763 = !DILocation(line: 1555, column: 32, scope: !7760)
!7764 = !DILocation(line: 1555, column: 9, scope: !5454)
!7765 = !DILocation(line: 1556, column: 25, scope: !7760)
!7766 = !DILocation(line: 1556, column: 28, scope: !7760)
!7767 = !DILocation(line: 1556, column: 49, scope: !7760)
!7768 = !DILocation(line: 1556, column: 52, scope: !7760)
!7769 = !DILocation(line: 1556, column: 33, scope: !7760)
!7770 = !DILocation(line: 1556, column: 32, scope: !7760)
!7771 = !DILocation(line: 1556, column: 9, scope: !7772)
!7772 = !DILexicalBlockFile(scope: !7760, file: !1665, discriminator: 1)
!7773 = !DILocation(line: 1556, column: 9, scope: !7760)
!7774 = !DILocation(line: 1557, column: 12, scope: !5454)
!7775 = !DILocation(line: 1557, column: 24, scope: !5454)
!7776 = !DILocation(line: 1557, column: 5, scope: !5454)
!7777 = !DILocation(line: 1558, column: 1, scope: !5454)
!7778 = distinct !DISubprogram(name: "align_get_bits", scope: !1870, file: !1870, line: 658, type: !7779, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!1470, !4150}
!7781 = !DILocalVariable(name: "s", arg: 1, scope: !7778, file: !1870, line: 658, type: !4150)
!7782 = !DILocation(line: 658, column: 60, scope: !7778)
!7783 = !DILocalVariable(name: "n", scope: !7778, file: !1870, line: 660, type: !891)
!7784 = !DILocation(line: 660, column: 9, scope: !7778)
!7785 = !DILocation(line: 660, column: 29, scope: !7778)
!7786 = !DILocation(line: 660, column: 14, scope: !7778)
!7787 = !DILocation(line: 660, column: 13, scope: !7778)
!7788 = !DILocation(line: 660, column: 32, scope: !7778)
!7789 = !DILocation(line: 661, column: 9, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7778, file: !1870, line: 661, column: 9)
!7791 = !DILocation(line: 661, column: 9, scope: !7778)
!7792 = !DILocation(line: 662, column: 19, scope: !7790)
!7793 = !DILocation(line: 662, column: 22, scope: !7790)
!7794 = !DILocation(line: 662, column: 9, scope: !7790)
!7795 = !DILocation(line: 663, column: 12, scope: !7778)
!7796 = !DILocation(line: 663, column: 15, scope: !7778)
!7797 = !DILocation(line: 663, column: 25, scope: !7778)
!7798 = !DILocation(line: 663, column: 28, scope: !7778)
!7799 = !DILocation(line: 663, column: 34, scope: !7778)
!7800 = !DILocation(line: 663, column: 22, scope: !7778)
!7801 = !DILocation(line: 663, column: 5, scope: !7778)
!7802 = distinct !DISubprogram(name: "get_bits_left", scope: !1870, file: !1870, line: 814, type: !7803, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!7803 = !DISubroutineType(types: !7804)
!7804 = !{!891, !4150}
!7805 = !DILocalVariable(name: "gb", arg: 1, scope: !7802, file: !1870, line: 814, type: !4150)
!7806 = !DILocation(line: 814, column: 48, scope: !7802)
!7807 = !DILocation(line: 816, column: 12, scope: !7802)
!7808 = !DILocation(line: 816, column: 16, scope: !7802)
!7809 = !DILocation(line: 816, column: 46, scope: !7802)
!7810 = !DILocation(line: 816, column: 31, scope: !7802)
!7811 = !DILocation(line: 816, column: 29, scope: !7802)
!7812 = !DILocation(line: 816, column: 5, scope: !7802)
!7813 = distinct !DISubprogram(name: "get_bits_count", scope: !1870, file: !1870, line: 219, type: !7814, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!891, !7816}
!7816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7817, size: 64, align: 64)
!7817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!7818 = !DILocalVariable(name: "s", arg: 1, scope: !7813, file: !1870, line: 219, type: !7816)
!7819 = !DILocation(line: 219, column: 55, scope: !7813)
!7820 = !DILocation(line: 224, column: 12, scope: !7813)
!7821 = !DILocation(line: 224, column: 15, scope: !7813)
!7822 = !DILocation(line: 224, column: 5, scope: !7813)
!7823 = distinct !DISubprogram(name: "get_bits", scope: !1870, file: !1870, line: 381, type: !7824, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!7824 = !DISubroutineType(types: !7825)
!7825 = !{!894, !4150, !891}
!7826 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !7827)
!7827 = distinct !DILocation(line: 401, column: 16, scope: !7823)
!7828 = !DILocalVariable(name: "s", arg: 1, scope: !7823, file: !1870, line: 381, type: !4150)
!7829 = !DILocation(line: 381, column: 52, scope: !7823)
!7830 = !DILocalVariable(name: "n", arg: 2, scope: !7823, file: !1870, line: 381, type: !891)
!7831 = !DILocation(line: 381, column: 59, scope: !7823)
!7832 = !DILocalVariable(name: "tmp", scope: !7823, file: !1870, line: 383, type: !891)
!7833 = !DILocation(line: 383, column: 18, scope: !7823)
!7834 = !DILocalVariable(name: "re_index", scope: !7823, file: !1870, line: 399, type: !894)
!7835 = !DILocation(line: 399, column: 18, scope: !7823)
!7836 = !DILocation(line: 399, column: 30, scope: !7823)
!7837 = !DILocation(line: 399, column: 34, scope: !7823)
!7838 = !DILocalVariable(name: "re_cache", scope: !7823, file: !1870, line: 399, type: !894)
!7839 = !DILocation(line: 399, column: 78, scope: !7823)
!7840 = !DILocalVariable(name: "re_size_plus8", scope: !7823, file: !1870, line: 399, type: !894)
!7841 = !DILocation(line: 399, column: 101, scope: !7823)
!7842 = !DILocation(line: 399, column: 118, scope: !7823)
!7843 = !DILocation(line: 399, column: 122, scope: !7823)
!7844 = !DILocation(line: 401, column: 60, scope: !7823)
!7845 = !DILocation(line: 401, column: 64, scope: !7823)
!7846 = !DILocation(line: 401, column: 74, scope: !7823)
!7847 = !DILocation(line: 401, column: 83, scope: !7823)
!7848 = !DILocation(line: 401, column: 71, scope: !7823)
!7849 = !DILocation(line: 401, column: 92, scope: !7823)
!7850 = !DILocation(line: 401, column: 16, scope: !7823)
!7851 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !7827)
!7852 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !7827)
!7853 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !7827)
!7854 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !7827)
!7855 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !7827)
!7856 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !7827)
!7857 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !7827)
!7858 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !7827)
!7859 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !7827)
!7860 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !7827)
!7861 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !7827)
!7862 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !7827)
!7863 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !7827)
!7864 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !7827)
!7865 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !7827)
!7866 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !7827)
!7867 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !7827)
!7868 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !7827)
!7869 = !DILocation(line: 401, column: 100, scope: !7823)
!7870 = !DILocation(line: 401, column: 109, scope: !7823)
!7871 = !DILocation(line: 401, column: 96, scope: !7823)
!7872 = !DILocation(line: 401, column: 14, scope: !7823)
!7873 = !DILocation(line: 402, column: 21, scope: !7823)
!7874 = !DILocation(line: 402, column: 31, scope: !7823)
!7875 = !DILocation(line: 402, column: 11, scope: !7823)
!7876 = !DILocation(line: 402, column: 9, scope: !7823)
!7877 = !DILocation(line: 403, column: 18, scope: !7823)
!7878 = !DILocation(line: 403, column: 36, scope: !7823)
!7879 = !DILocation(line: 403, column: 48, scope: !7823)
!7880 = !DILocation(line: 403, column: 45, scope: !7823)
!7881 = !DILocation(line: 403, column: 33, scope: !7823)
!7882 = !DILocation(line: 403, column: 17, scope: !7823)
!7883 = !DILocation(line: 403, column: 55, scope: !7884)
!7884 = !DILexicalBlockFile(scope: !7823, file: !1870, discriminator: 1)
!7885 = !DILocation(line: 403, column: 67, scope: !7884)
!7886 = !DILocation(line: 403, column: 64, scope: !7884)
!7887 = !DILocation(line: 403, column: 17, scope: !7884)
!7888 = !DILocation(line: 403, column: 74, scope: !7889)
!7889 = !DILexicalBlockFile(scope: !7823, file: !1870, discriminator: 2)
!7890 = !DILocation(line: 403, column: 17, scope: !7889)
!7891 = !DILocation(line: 403, column: 17, scope: !7892)
!7892 = !DILexicalBlockFile(scope: !7823, file: !1870, discriminator: 3)
!7893 = !DILocation(line: 403, column: 14, scope: !7892)
!7894 = !DILocation(line: 404, column: 18, scope: !7823)
!7895 = !DILocation(line: 404, column: 6, scope: !7823)
!7896 = !DILocation(line: 404, column: 10, scope: !7823)
!7897 = !DILocation(line: 404, column: 16, scope: !7823)
!7898 = !DILocation(line: 406, column: 12, scope: !7823)
!7899 = !DILocation(line: 406, column: 5, scope: !7823)
!7900 = distinct !DISubprogram(name: "l1_unscale", scope: !1665, file: !1665, line: 212, type: !5607, isLocal: true, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!7901 = !DILocalVariable(name: "n", arg: 1, scope: !7900, file: !1665, line: 212, type: !891)
!7902 = !DILocation(line: 212, column: 34, scope: !7900)
!7903 = !DILocalVariable(name: "mant", arg: 2, scope: !7900, file: !1665, line: 212, type: !891)
!7904 = !DILocation(line: 212, column: 41, scope: !7900)
!7905 = !DILocalVariable(name: "scale_factor", arg: 3, scope: !7900, file: !1665, line: 212, type: !891)
!7906 = !DILocation(line: 212, column: 51, scope: !7900)
!7907 = !DILocalVariable(name: "shift", scope: !7900, file: !1665, line: 214, type: !891)
!7908 = !DILocation(line: 214, column: 9, scope: !7900)
!7909 = !DILocalVariable(name: "mod", scope: !7900, file: !1665, line: 214, type: !891)
!7910 = !DILocation(line: 214, column: 16, scope: !7900)
!7911 = !DILocalVariable(name: "val", scope: !7900, file: !1665, line: 215, type: !888)
!7912 = !DILocation(line: 215, column: 13, scope: !7900)
!7913 = !DILocation(line: 217, column: 35, scope: !7900)
!7914 = !DILocation(line: 217, column: 13, scope: !7900)
!7915 = !DILocation(line: 217, column: 11, scope: !7900)
!7916 = !DILocation(line: 218, column: 11, scope: !7900)
!7917 = !DILocation(line: 218, column: 17, scope: !7900)
!7918 = !DILocation(line: 218, column: 9, scope: !7900)
!7919 = !DILocation(line: 219, column: 11, scope: !7900)
!7920 = !DILocation(line: 220, column: 28, scope: !7900)
!7921 = !DILocation(line: 220, column: 43, scope: !7900)
!7922 = !DILocation(line: 220, column: 40, scope: !7900)
!7923 = !DILocation(line: 220, column: 33, scope: !7900)
!7924 = !DILocation(line: 220, column: 46, scope: !7900)
!7925 = !DILocation(line: 220, column: 12, scope: !7900)
!7926 = !DILocation(line: 220, column: 87, scope: !7900)
!7927 = !DILocation(line: 220, column: 64, scope: !7900)
!7928 = !DILocation(line: 220, column: 82, scope: !7900)
!7929 = !DILocation(line: 220, column: 83, scope: !7900)
!7930 = !DILocation(line: 220, column: 54, scope: !7900)
!7931 = !DILocation(line: 220, column: 52, scope: !7900)
!7932 = !DILocation(line: 220, column: 9, scope: !7900)
!7933 = !DILocation(line: 221, column: 14, scope: !7900)
!7934 = !DILocation(line: 221, column: 11, scope: !7900)
!7935 = !DILocation(line: 223, column: 19, scope: !7900)
!7936 = !DILocation(line: 223, column: 34, scope: !7900)
!7937 = !DILocation(line: 223, column: 40, scope: !7900)
!7938 = !DILocation(line: 223, column: 30, scope: !7900)
!7939 = !DILocation(line: 223, column: 23, scope: !7900)
!7940 = !DILocation(line: 223, column: 50, scope: !7900)
!7941 = !DILocation(line: 223, column: 47, scope: !7900)
!7942 = !DILocation(line: 223, column: 12, scope: !7900)
!7943 = !DILocation(line: 223, column: 5, scope: !7900)
!7944 = distinct !DISubprogram(name: "NEG_USR32", scope: !7945, file: !7945, line: 124, type: !7946, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!7945 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!901, !901, !1134}
!7948 = !DILocalVariable(name: "a", arg: 1, scope: !7944, file: !7945, line: 124, type: !901)
!7949 = !DILocation(line: 124, column: 43, scope: !7944)
!7950 = !DILocalVariable(name: "s", arg: 2, scope: !7944, file: !7945, line: 124, type: !1134)
!7951 = !DILocation(line: 124, column: 53, scope: !7944)
!7952 = !DILocation(line: 125, column: 5, scope: !7944)
!7953 = !DILocation(line: 127, column: 29, scope: !7944)
!7954 = !DILocation(line: 127, column: 28, scope: !7944)
!7955 = !DILocation(line: 127, column: 18, scope: !7944)
!7956 = !{i32 181443, i32 181457}
!7957 = !DILocation(line: 129, column: 12, scope: !7944)
!7958 = !DILocation(line: 129, column: 5, scope: !7944)
!7959 = distinct !DISubprogram(name: "l2_unscale_group", scope: !1665, file: !1665, line: 226, type: !5607, isLocal: true, isDefinition: true, scopeLine: 227, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!7960 = !DILocalVariable(name: "steps", arg: 1, scope: !7959, file: !1665, line: 226, type: !891)
!7961 = !DILocation(line: 226, column: 40, scope: !7959)
!7962 = !DILocalVariable(name: "mant", arg: 2, scope: !7959, file: !1665, line: 226, type: !891)
!7963 = !DILocation(line: 226, column: 51, scope: !7959)
!7964 = !DILocalVariable(name: "scale_factor", arg: 3, scope: !7959, file: !1665, line: 226, type: !891)
!7965 = !DILocation(line: 226, column: 61, scope: !7959)
!7966 = !DILocalVariable(name: "shift", scope: !7959, file: !1665, line: 228, type: !891)
!7967 = !DILocation(line: 228, column: 9, scope: !7959)
!7968 = !DILocalVariable(name: "mod", scope: !7959, file: !1665, line: 228, type: !891)
!7969 = !DILocation(line: 228, column: 16, scope: !7959)
!7970 = !DILocalVariable(name: "val", scope: !7959, file: !1665, line: 228, type: !891)
!7971 = !DILocation(line: 228, column: 21, scope: !7959)
!7972 = !DILocation(line: 230, column: 35, scope: !7959)
!7973 = !DILocation(line: 230, column: 13, scope: !7959)
!7974 = !DILocation(line: 230, column: 11, scope: !7959)
!7975 = !DILocation(line: 231, column: 11, scope: !7959)
!7976 = !DILocation(line: 231, column: 17, scope: !7959)
!7977 = !DILocation(line: 231, column: 9, scope: !7959)
!7978 = !DILocation(line: 232, column: 11, scope: !7959)
!7979 = !DILocation(line: 234, column: 12, scope: !7959)
!7980 = !DILocation(line: 234, column: 20, scope: !7959)
!7981 = !DILocation(line: 234, column: 26, scope: !7959)
!7982 = !DILocation(line: 234, column: 17, scope: !7959)
!7983 = !DILocation(line: 234, column: 66, scope: !7959)
!7984 = !DILocation(line: 234, column: 35, scope: !7959)
!7985 = !DILocation(line: 234, column: 54, scope: !7959)
!7986 = !DILocation(line: 234, column: 60, scope: !7959)
!7987 = !DILocation(line: 234, column: 33, scope: !7959)
!7988 = !DILocation(line: 234, column: 9, scope: !7959)
!7989 = !DILocation(line: 236, column: 9, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7959, file: !1665, line: 236, column: 9)
!7991 = !DILocation(line: 236, column: 15, scope: !7990)
!7992 = !DILocation(line: 236, column: 9, scope: !7959)
!7993 = !DILocation(line: 237, column: 16, scope: !7990)
!7994 = !DILocation(line: 237, column: 29, scope: !7990)
!7995 = !DILocation(line: 237, column: 35, scope: !7990)
!7996 = !DILocation(line: 237, column: 25, scope: !7990)
!7997 = !DILocation(line: 237, column: 20, scope: !7990)
!7998 = !DILocation(line: 237, column: 45, scope: !7990)
!7999 = !DILocation(line: 237, column: 42, scope: !7990)
!8000 = !DILocation(line: 237, column: 13, scope: !7990)
!8001 = !DILocation(line: 237, column: 9, scope: !7990)
!8002 = !DILocation(line: 238, column: 12, scope: !7959)
!8003 = !DILocation(line: 238, column: 5, scope: !7959)
!8004 = distinct !DISubprogram(name: "get_bits1", scope: !1870, file: !1870, line: 487, type: !8005, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8005 = !DISubroutineType(types: !8006)
!8006 = !{!894, !4150}
!8007 = !DILocalVariable(name: "s", arg: 1, scope: !8004, file: !1870, line: 487, type: !4150)
!8008 = !DILocation(line: 487, column: 53, scope: !8004)
!8009 = !DILocalVariable(name: "index", scope: !8004, file: !1870, line: 499, type: !894)
!8010 = !DILocation(line: 499, column: 18, scope: !8004)
!8011 = !DILocation(line: 499, column: 26, scope: !8004)
!8012 = !DILocation(line: 499, column: 29, scope: !8004)
!8013 = !DILocalVariable(name: "result", scope: !8004, file: !1870, line: 500, type: !923)
!8014 = !DILocation(line: 500, column: 13, scope: !8004)
!8015 = !DILocation(line: 500, column: 32, scope: !8004)
!8016 = !DILocation(line: 500, column: 38, scope: !8004)
!8017 = !DILocation(line: 500, column: 22, scope: !8004)
!8018 = !DILocation(line: 500, column: 25, scope: !8004)
!8019 = !DILocation(line: 505, column: 16, scope: !8004)
!8020 = !DILocation(line: 505, column: 22, scope: !8004)
!8021 = !DILocation(line: 505, column: 12, scope: !8004)
!8022 = !DILocation(line: 506, column: 12, scope: !8004)
!8023 = !DILocation(line: 509, column: 9, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8004, file: !1870, line: 509, column: 9)
!8025 = !DILocation(line: 509, column: 12, scope: !8024)
!8026 = !DILocation(line: 509, column: 20, scope: !8024)
!8027 = !DILocation(line: 509, column: 23, scope: !8024)
!8028 = !DILocation(line: 509, column: 18, scope: !8024)
!8029 = !DILocation(line: 509, column: 9, scope: !8004)
!8030 = !DILocation(line: 511, column: 14, scope: !8024)
!8031 = !DILocation(line: 511, column: 9, scope: !8024)
!8032 = !DILocation(line: 512, column: 16, scope: !8004)
!8033 = !DILocation(line: 512, column: 5, scope: !8004)
!8034 = !DILocation(line: 512, column: 8, scope: !8004)
!8035 = !DILocation(line: 512, column: 14, scope: !8004)
!8036 = !DILocation(line: 514, column: 12, scope: !8004)
!8037 = !DILocation(line: 514, column: 5, scope: !8004)
!8038 = distinct !DISubprogram(name: "init_short_region", scope: !1665, file: !1665, line: 157, type: !8039, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{null, !1847, !2002}
!8041 = !DILocalVariable(name: "s", arg: 1, scope: !8038, file: !1665, line: 157, type: !1847)
!8042 = !DILocation(line: 157, column: 49, scope: !8038)
!8043 = !DILocalVariable(name: "g", arg: 2, scope: !8038, file: !1665, line: 157, type: !2002)
!8044 = !DILocation(line: 157, column: 64, scope: !8038)
!8045 = !DILocation(line: 159, column: 9, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8038, file: !1665, line: 159, column: 9)
!8047 = !DILocation(line: 159, column: 12, scope: !8046)
!8048 = !DILocation(line: 159, column: 23, scope: !8046)
!8049 = !DILocation(line: 159, column: 9, scope: !8038)
!8050 = !DILocation(line: 160, column: 13, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !1665, line: 160, column: 13)
!8052 = distinct !DILexicalBlock(scope: !8046, file: !1665, line: 159, column: 29)
!8053 = !DILocation(line: 160, column: 16, scope: !8051)
!8054 = !DILocation(line: 160, column: 34, scope: !8051)
!8055 = !DILocation(line: 160, column: 13, scope: !8052)
!8056 = !DILocation(line: 161, column: 13, scope: !8051)
!8057 = !DILocation(line: 161, column: 16, scope: !8051)
!8058 = !DILocation(line: 161, column: 31, scope: !8051)
!8059 = !DILocation(line: 163, column: 13, scope: !8051)
!8060 = !DILocation(line: 163, column: 16, scope: !8051)
!8061 = !DILocation(line: 163, column: 31, scope: !8051)
!8062 = !DILocation(line: 164, column: 5, scope: !8052)
!8063 = !DILocation(line: 165, column: 13, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !1665, line: 165, column: 13)
!8065 = distinct !DILexicalBlock(scope: !8046, file: !1665, line: 164, column: 12)
!8066 = !DILocation(line: 165, column: 16, scope: !8064)
!8067 = !DILocation(line: 165, column: 34, scope: !8064)
!8068 = !DILocation(line: 165, column: 13, scope: !8065)
!8069 = !DILocation(line: 166, column: 13, scope: !8064)
!8070 = !DILocation(line: 166, column: 16, scope: !8064)
!8071 = !DILocation(line: 166, column: 31, scope: !8064)
!8072 = !DILocation(line: 167, column: 18, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8064, file: !1665, line: 167, column: 18)
!8074 = !DILocation(line: 167, column: 21, scope: !8073)
!8075 = !DILocation(line: 167, column: 39, scope: !8073)
!8076 = !DILocation(line: 167, column: 18, scope: !8064)
!8077 = !DILocation(line: 168, column: 13, scope: !8073)
!8078 = !DILocation(line: 168, column: 16, scope: !8073)
!8079 = !DILocation(line: 168, column: 31, scope: !8073)
!8080 = !DILocation(line: 170, column: 13, scope: !8073)
!8081 = !DILocation(line: 170, column: 16, scope: !8073)
!8082 = !DILocation(line: 170, column: 31, scope: !8073)
!8083 = !DILocation(line: 172, column: 5, scope: !8038)
!8084 = !DILocation(line: 172, column: 8, scope: !8038)
!8085 = !DILocation(line: 172, column: 23, scope: !8038)
!8086 = !DILocation(line: 173, column: 1, scope: !8038)
!8087 = distinct !DISubprogram(name: "init_long_region", scope: !1665, file: !1665, line: 175, type: !8088, isLocal: true, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{null, !1847, !2002, !891, !891}
!8090 = !DILocalVariable(name: "s", arg: 1, scope: !8087, file: !1665, line: 175, type: !1847)
!8091 = !DILocation(line: 175, column: 48, scope: !8087)
!8092 = !DILocalVariable(name: "g", arg: 2, scope: !8087, file: !1665, line: 175, type: !2002)
!8093 = !DILocation(line: 175, column: 63, scope: !8087)
!8094 = !DILocalVariable(name: "ra1", arg: 3, scope: !8087, file: !1665, line: 176, type: !891)
!8095 = !DILocation(line: 176, column: 34, scope: !8087)
!8096 = !DILocalVariable(name: "ra2", arg: 4, scope: !8087, file: !1665, line: 176, type: !891)
!8097 = !DILocation(line: 176, column: 43, scope: !8087)
!8098 = !DILocalVariable(name: "l", scope: !8087, file: !1665, line: 178, type: !891)
!8099 = !DILocation(line: 178, column: 9, scope: !8087)
!8100 = !DILocation(line: 179, column: 63, scope: !8087)
!8101 = !DILocation(line: 179, column: 67, scope: !8087)
!8102 = !DILocation(line: 179, column: 25, scope: !8087)
!8103 = !DILocation(line: 179, column: 41, scope: !8087)
!8104 = !DILocation(line: 179, column: 44, scope: !8087)
!8105 = !DILocation(line: 179, column: 72, scope: !8087)
!8106 = !DILocation(line: 179, column: 5, scope: !8087)
!8107 = !DILocation(line: 179, column: 8, scope: !8087)
!8108 = !DILocation(line: 179, column: 23, scope: !8087)
!8109 = !DILocation(line: 181, column: 11, scope: !8087)
!8110 = !DILocation(line: 181, column: 17, scope: !8087)
!8111 = !DILocation(line: 181, column: 15, scope: !8087)
!8112 = !DILocation(line: 181, column: 21, scope: !8087)
!8113 = !DILocation(line: 181, column: 26, scope: !8087)
!8114 = !DILocation(line: 181, column: 10, scope: !8087)
!8115 = !DILocation(line: 181, column: 10, scope: !8116)
!8116 = !DILexicalBlockFile(scope: !8087, file: !1665, discriminator: 1)
!8117 = !DILocation(line: 181, column: 43, scope: !8118)
!8118 = !DILexicalBlockFile(scope: !8087, file: !1665, discriminator: 2)
!8119 = !DILocation(line: 181, column: 49, scope: !8118)
!8120 = !DILocation(line: 181, column: 47, scope: !8118)
!8121 = !DILocation(line: 181, column: 53, scope: !8118)
!8122 = !DILocation(line: 181, column: 10, scope: !8118)
!8123 = !DILocation(line: 181, column: 10, scope: !8124)
!8124 = !DILexicalBlockFile(scope: !8087, file: !1665, discriminator: 3)
!8125 = !DILocation(line: 181, column: 7, scope: !8124)
!8126 = !DILocation(line: 182, column: 64, scope: !8087)
!8127 = !DILocation(line: 182, column: 25, scope: !8087)
!8128 = !DILocation(line: 182, column: 41, scope: !8087)
!8129 = !DILocation(line: 182, column: 44, scope: !8087)
!8130 = !DILocation(line: 182, column: 67, scope: !8087)
!8131 = !DILocation(line: 182, column: 5, scope: !8087)
!8132 = !DILocation(line: 182, column: 8, scope: !8087)
!8133 = !DILocation(line: 182, column: 23, scope: !8087)
!8134 = !DILocation(line: 183, column: 1, scope: !8087)
!8135 = distinct !DISubprogram(name: "region_offset2size", scope: !1665, file: !1665, line: 146, type: !8136, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{null, !2002}
!8138 = !DILocalVariable(name: "g", arg: 1, scope: !8135, file: !1665, line: 146, type: !2002)
!8139 = !DILocation(line: 146, column: 44, scope: !8135)
!8140 = !DILocalVariable(name: "i", scope: !8135, file: !1665, line: 148, type: !891)
!8141 = !DILocation(line: 148, column: 9, scope: !8135)
!8142 = !DILocalVariable(name: "k", scope: !8135, file: !1665, line: 148, type: !891)
!8143 = !DILocation(line: 148, column: 12, scope: !8135)
!8144 = !DILocalVariable(name: "j", scope: !8135, file: !1665, line: 148, type: !891)
!8145 = !DILocation(line: 148, column: 15, scope: !8135)
!8146 = !DILocation(line: 149, column: 5, scope: !8135)
!8147 = !DILocation(line: 149, column: 8, scope: !8135)
!8148 = !DILocation(line: 149, column: 23, scope: !8135)
!8149 = !DILocation(line: 150, column: 12, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8135, file: !1665, line: 150, column: 5)
!8151 = !DILocation(line: 150, column: 10, scope: !8150)
!8152 = !DILocation(line: 150, column: 17, scope: !8153)
!8153 = !DILexicalBlockFile(scope: !8154, file: !1665, discriminator: 1)
!8154 = distinct !DILexicalBlock(scope: !8150, file: !1665, line: 150, column: 5)
!8155 = !DILocation(line: 150, column: 19, scope: !8153)
!8156 = !DILocation(line: 150, column: 5, scope: !8153)
!8157 = !DILocation(line: 151, column: 30, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !1665, line: 150, column: 29)
!8159 = !DILocation(line: 151, column: 15, scope: !8158)
!8160 = !DILocation(line: 151, column: 18, scope: !8158)
!8161 = !DILocation(line: 151, column: 37, scope: !8158)
!8162 = !DILocation(line: 151, column: 40, scope: !8158)
!8163 = !DILocation(line: 151, column: 34, scope: !8158)
!8164 = !DILocation(line: 151, column: 14, scope: !8158)
!8165 = !DILocation(line: 151, column: 55, scope: !8166)
!8166 = !DILexicalBlockFile(scope: !8158, file: !1665, discriminator: 1)
!8167 = !DILocation(line: 151, column: 58, scope: !8166)
!8168 = !DILocation(line: 151, column: 14, scope: !8166)
!8169 = !DILocation(line: 151, column: 88, scope: !8170)
!8170 = !DILexicalBlockFile(scope: !8158, file: !1665, discriminator: 2)
!8171 = !DILocation(line: 151, column: 73, scope: !8170)
!8172 = !DILocation(line: 151, column: 76, scope: !8170)
!8173 = !DILocation(line: 151, column: 14, scope: !8170)
!8174 = !DILocation(line: 151, column: 14, scope: !8175)
!8175 = !DILexicalBlockFile(scope: !8158, file: !1665, discriminator: 3)
!8176 = !DILocation(line: 151, column: 11, scope: !8175)
!8177 = !DILocation(line: 152, column: 29, scope: !8158)
!8178 = !DILocation(line: 152, column: 33, scope: !8158)
!8179 = !DILocation(line: 152, column: 31, scope: !8158)
!8180 = !DILocation(line: 152, column: 24, scope: !8158)
!8181 = !DILocation(line: 152, column: 9, scope: !8158)
!8182 = !DILocation(line: 152, column: 12, scope: !8158)
!8183 = !DILocation(line: 152, column: 27, scope: !8158)
!8184 = !DILocation(line: 153, column: 13, scope: !8158)
!8185 = !DILocation(line: 153, column: 11, scope: !8158)
!8186 = !DILocation(line: 154, column: 5, scope: !8158)
!8187 = !DILocation(line: 150, column: 25, scope: !8188)
!8188 = !DILexicalBlockFile(scope: !8154, file: !1665, discriminator: 2)
!8189 = !DILocation(line: 150, column: 5, scope: !8188)
!8190 = distinct !{!8190, !8191}
!8191 = !DILocation(line: 150, column: 5, scope: !8135)
!8192 = !DILocation(line: 155, column: 1, scope: !8135)
!8193 = distinct !DISubprogram(name: "compute_band_indexes", scope: !1665, file: !1665, line: 185, type: !8039, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8194 = !DILocalVariable(name: "s", arg: 1, scope: !8193, file: !1665, line: 185, type: !1847)
!8195 = !DILocation(line: 185, column: 52, scope: !8193)
!8196 = !DILocalVariable(name: "g", arg: 2, scope: !8193, file: !1665, line: 185, type: !2002)
!8197 = !DILocation(line: 185, column: 67, scope: !8193)
!8198 = !DILocation(line: 187, column: 9, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8193, file: !1665, line: 187, column: 9)
!8200 = !DILocation(line: 187, column: 12, scope: !8199)
!8201 = !DILocation(line: 187, column: 23, scope: !8199)
!8202 = !DILocation(line: 187, column: 9, scope: !8193)
!8203 = !DILocation(line: 188, column: 13, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !1665, line: 188, column: 13)
!8205 = distinct !DILexicalBlock(scope: !8199, file: !1665, line: 187, column: 29)
!8206 = !DILocation(line: 188, column: 16, scope: !8204)
!8207 = !DILocation(line: 188, column: 13, scope: !8205)
!8208 = !DILocation(line: 189, column: 16, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !1665, line: 189, column: 16)
!8210 = distinct !DILexicalBlock(scope: !8204, file: !1665, line: 188, column: 30)
!8211 = !DILocation(line: 189, column: 19, scope: !8209)
!8212 = !DILocation(line: 189, column: 37, scope: !8209)
!8213 = !DILocation(line: 189, column: 16, scope: !8210)
!8214 = !DILocation(line: 190, column: 39, scope: !8209)
!8215 = !DILocation(line: 190, column: 42, scope: !8209)
!8216 = !DILocation(line: 190, column: 17, scope: !8209)
!8217 = !DILocation(line: 194, column: 17, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8210, file: !1665, line: 194, column: 17)
!8219 = !DILocation(line: 194, column: 20, scope: !8218)
!8220 = !DILocation(line: 194, column: 38, scope: !8218)
!8221 = !DILocation(line: 194, column: 17, scope: !8210)
!8222 = !DILocation(line: 195, column: 17, scope: !8218)
!8223 = !DILocation(line: 195, column: 20, scope: !8218)
!8224 = !DILocation(line: 195, column: 29, scope: !8218)
!8225 = !DILocation(line: 197, column: 17, scope: !8218)
!8226 = !DILocation(line: 197, column: 20, scope: !8218)
!8227 = !DILocation(line: 197, column: 29, scope: !8218)
!8228 = !DILocation(line: 199, column: 13, scope: !8210)
!8229 = !DILocation(line: 199, column: 16, scope: !8210)
!8230 = !DILocation(line: 199, column: 28, scope: !8210)
!8231 = !DILocation(line: 200, column: 9, scope: !8210)
!8232 = !DILocation(line: 201, column: 13, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8204, file: !1665, line: 200, column: 16)
!8234 = !DILocation(line: 201, column: 16, scope: !8233)
!8235 = !DILocation(line: 201, column: 25, scope: !8233)
!8236 = !DILocation(line: 202, column: 13, scope: !8233)
!8237 = !DILocation(line: 202, column: 16, scope: !8233)
!8238 = !DILocation(line: 202, column: 28, scope: !8233)
!8239 = !DILocation(line: 204, column: 5, scope: !8205)
!8240 = !DILocation(line: 205, column: 9, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8199, file: !1665, line: 204, column: 12)
!8242 = !DILocation(line: 205, column: 12, scope: !8241)
!8243 = !DILocation(line: 205, column: 24, scope: !8241)
!8244 = !DILocation(line: 206, column: 9, scope: !8241)
!8245 = !DILocation(line: 206, column: 12, scope: !8241)
!8246 = !DILocation(line: 206, column: 21, scope: !8241)
!8247 = !DILocation(line: 208, column: 1, scope: !8193)
!8248 = distinct !DISubprogram(name: "compute_imdct", scope: !1665, file: !1665, line: 1226, type: !8249, isLocal: true, isDefinition: true, scopeLine: 1228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8249 = !DISubroutineType(types: !8250)
!8250 = !{null, !1847, !2002, !1321, !1321}
!8251 = !DILocalVariable(name: "a", arg: 1, scope: !8252, file: !8253, line: 62, type: !891)
!8252 = distinct !DISubprogram(name: "MULH", scope: !8253, file: !8253, line: 62, type: !8254, isLocal: true, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8253 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8254 = !DISubroutineType(types: !8255)
!8255 = !{!891, !891, !891}
!8256 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !8257)
!8257 = distinct !DILocation(line: 1279, column: 24, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !1665, line: 1278, column: 33)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !1665, line: 1278, column: 9)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !1665, line: 1278, column: 9)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !1665, line: 1262, column: 47)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !1665, line: 1262, column: 5)
!8263 = distinct !DILexicalBlock(scope: !8248, file: !1665, line: 1262, column: 5)
!8264 = !DILocalVariable(name: "b", arg: 2, scope: !8252, file: !8253, line: 62, type: !891)
!8265 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !8257)
!8266 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !8267)
!8267 = distinct !DILocation(line: 1280, column: 32, scope: !8258)
!8268 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !8267)
!8269 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !8270)
!8270 = distinct !DILocation(line: 1274, column: 32, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !1665, line: 1272, column: 33)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !1665, line: 1272, column: 9)
!8273 = distinct !DILexicalBlock(scope: !8261, file: !1665, line: 1272, column: 9)
!8274 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !8270)
!8275 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !8276)
!8276 = distinct !DILocation(line: 1285, column: 32, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !1665, line: 1284, column: 33)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !1665, line: 1284, column: 9)
!8279 = distinct !DILexicalBlock(scope: !8261, file: !1665, line: 1284, column: 9)
!8280 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !8276)
!8281 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !8282)
!8282 = distinct !DILocation(line: 1286, column: 32, scope: !8277)
!8283 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !8282)
!8284 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !8285)
!8285 = distinct !DILocation(line: 1273, column: 24, scope: !8271)
!8286 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !8285)
!8287 = !DILocalVariable(name: "s", arg: 1, scope: !8248, file: !1665, line: 1226, type: !1847)
!8288 = !DILocation(line: 1226, column: 45, scope: !8248)
!8289 = !DILocalVariable(name: "g", arg: 2, scope: !8248, file: !1665, line: 1226, type: !2002)
!8290 = !DILocation(line: 1226, column: 60, scope: !8248)
!8291 = !DILocalVariable(name: "sb_samples", arg: 3, scope: !8248, file: !1665, line: 1227, type: !1321)
!8292 = !DILocation(line: 1227, column: 32, scope: !8248)
!8293 = !DILocalVariable(name: "mdct_buf", arg: 4, scope: !8248, file: !1665, line: 1227, type: !1321)
!8294 = !DILocation(line: 1227, column: 49, scope: !8248)
!8295 = !DILocalVariable(name: "win", scope: !8248, file: !1665, line: 1229, type: !1321)
!8296 = !DILocation(line: 1229, column: 10, scope: !8248)
!8297 = !DILocalVariable(name: "out_ptr", scope: !8248, file: !1665, line: 1229, type: !1321)
!8298 = !DILocation(line: 1229, column: 16, scope: !8248)
!8299 = !DILocalVariable(name: "ptr", scope: !8248, file: !1665, line: 1229, type: !1321)
!8300 = !DILocation(line: 1229, column: 26, scope: !8248)
!8301 = !DILocalVariable(name: "buf", scope: !8248, file: !1665, line: 1229, type: !1321)
!8302 = !DILocation(line: 1229, column: 32, scope: !8248)
!8303 = !DILocalVariable(name: "ptr1", scope: !8248, file: !1665, line: 1229, type: !1321)
!8304 = !DILocation(line: 1229, column: 38, scope: !8248)
!8305 = !DILocalVariable(name: "out2", scope: !8248, file: !1665, line: 1230, type: !8306)
!8306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 384, align: 32, elements: !8307)
!8307 = !{!8308}
!8308 = !DISubrange(count: 12)
!8309 = !DILocation(line: 1230, column: 9, scope: !8248)
!8310 = !DILocalVariable(name: "i", scope: !8248, file: !1665, line: 1231, type: !891)
!8311 = !DILocation(line: 1231, column: 9, scope: !8248)
!8312 = !DILocalVariable(name: "j", scope: !8248, file: !1665, line: 1231, type: !891)
!8313 = !DILocation(line: 1231, column: 12, scope: !8248)
!8314 = !DILocalVariable(name: "mdct_long_end", scope: !8248, file: !1665, line: 1231, type: !891)
!8315 = !DILocation(line: 1231, column: 15, scope: !8248)
!8316 = !DILocalVariable(name: "sblimit", scope: !8248, file: !1665, line: 1231, type: !891)
!8317 = !DILocation(line: 1231, column: 30, scope: !8248)
!8318 = !DILocation(line: 1234, column: 11, scope: !8248)
!8319 = !DILocation(line: 1234, column: 14, scope: !8248)
!8320 = !DILocation(line: 1234, column: 24, scope: !8248)
!8321 = !DILocation(line: 1234, column: 9, scope: !8248)
!8322 = !DILocation(line: 1235, column: 12, scope: !8248)
!8323 = !DILocation(line: 1235, column: 15, scope: !8248)
!8324 = !DILocation(line: 1235, column: 25, scope: !8248)
!8325 = !DILocation(line: 1235, column: 10, scope: !8248)
!8326 = !DILocation(line: 1236, column: 5, scope: !8248)
!8327 = !DILocation(line: 1236, column: 12, scope: !8328)
!8328 = !DILexicalBlockFile(scope: !8248, file: !1665, discriminator: 1)
!8329 = !DILocation(line: 1236, column: 19, scope: !8328)
!8330 = !DILocation(line: 1236, column: 16, scope: !8328)
!8331 = !DILocation(line: 1236, column: 5, scope: !8328)
!8332 = !DILocalVariable(name: "p", scope: !8333, file: !1665, line: 1237, type: !925)
!8333 = distinct !DILexicalBlock(scope: !8248, file: !1665, line: 1236, column: 25)
!8334 = !DILocation(line: 1237, column: 18, scope: !8333)
!8335 = !DILocation(line: 1238, column: 13, scope: !8333)
!8336 = !DILocation(line: 1239, column: 23, scope: !8333)
!8337 = !DILocation(line: 1239, column: 11, scope: !8333)
!8338 = !DILocation(line: 1240, column: 13, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8333, file: !1665, line: 1240, column: 13)
!8340 = !DILocation(line: 1240, column: 20, scope: !8339)
!8341 = !DILocation(line: 1240, column: 18, scope: !8339)
!8342 = !DILocation(line: 1240, column: 27, scope: !8339)
!8343 = !DILocation(line: 1240, column: 25, scope: !8339)
!8344 = !DILocation(line: 1240, column: 34, scope: !8339)
!8345 = !DILocation(line: 1240, column: 32, scope: !8339)
!8346 = !DILocation(line: 1240, column: 41, scope: !8339)
!8347 = !DILocation(line: 1240, column: 39, scope: !8339)
!8348 = !DILocation(line: 1240, column: 48, scope: !8339)
!8349 = !DILocation(line: 1240, column: 46, scope: !8339)
!8350 = !DILocation(line: 1240, column: 13, scope: !8333)
!8351 = !DILocation(line: 1241, column: 13, scope: !8339)
!8352 = !DILocation(line: 1236, column: 5, scope: !8353)
!8353 = !DILexicalBlockFile(scope: !8248, file: !1665, discriminator: 2)
!8354 = distinct !{!8354, !8326}
!8355 = !DILocation(line: 1243, column: 17, scope: !8248)
!8356 = !DILocation(line: 1243, column: 23, scope: !8248)
!8357 = !DILocation(line: 1243, column: 26, scope: !8248)
!8358 = !DILocation(line: 1243, column: 21, scope: !8248)
!8359 = !DILocation(line: 1243, column: 37, scope: !8248)
!8360 = !DILocation(line: 1243, column: 43, scope: !8248)
!8361 = !DILocation(line: 1243, column: 15, scope: !8248)
!8362 = !DILocation(line: 1243, column: 13, scope: !8248)
!8363 = !DILocation(line: 1245, column: 9, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8248, file: !1665, line: 1245, column: 9)
!8365 = !DILocation(line: 1245, column: 12, scope: !8364)
!8366 = !DILocation(line: 1245, column: 23, scope: !8364)
!8367 = !DILocation(line: 1245, column: 9, scope: !8248)
!8368 = !DILocation(line: 1247, column: 13, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !1665, line: 1247, column: 13)
!8370 = distinct !DILexicalBlock(scope: !8364, file: !1665, line: 1245, column: 29)
!8371 = !DILocation(line: 1247, column: 16, scope: !8369)
!8372 = !DILocation(line: 1247, column: 13, scope: !8370)
!8373 = !DILocation(line: 1248, column: 27, scope: !8369)
!8374 = !DILocation(line: 1248, column: 13, scope: !8369)
!8375 = !DILocation(line: 1250, column: 27, scope: !8369)
!8376 = !DILocation(line: 1251, column: 5, scope: !8370)
!8377 = !DILocation(line: 1252, column: 25, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8364, file: !1665, line: 1251, column: 12)
!8379 = !DILocation(line: 1252, column: 23, scope: !8378)
!8380 = !DILocation(line: 1255, column: 5, scope: !8248)
!8381 = !DILocation(line: 1255, column: 8, scope: !8248)
!8382 = !DILocation(line: 1255, column: 15, scope: !8248)
!8383 = !DILocation(line: 1255, column: 36, scope: !8248)
!8384 = !DILocation(line: 1255, column: 48, scope: !8248)
!8385 = !DILocation(line: 1255, column: 58, scope: !8248)
!8386 = !DILocation(line: 1255, column: 61, scope: !8248)
!8387 = !DILocation(line: 1256, column: 38, scope: !8248)
!8388 = !DILocation(line: 1256, column: 53, scope: !8248)
!8389 = !DILocation(line: 1256, column: 56, scope: !8248)
!8390 = !DILocation(line: 1257, column: 38, scope: !8248)
!8391 = !DILocation(line: 1257, column: 41, scope: !8248)
!8392 = !DILocation(line: 1259, column: 11, scope: !8248)
!8393 = !DILocation(line: 1259, column: 28, scope: !8248)
!8394 = !DILocation(line: 1259, column: 42, scope: !8248)
!8395 = !DILocation(line: 1259, column: 26, scope: !8248)
!8396 = !DILocation(line: 1259, column: 20, scope: !8248)
!8397 = !DILocation(line: 1259, column: 51, scope: !8248)
!8398 = !DILocation(line: 1259, column: 65, scope: !8248)
!8399 = !DILocation(line: 1259, column: 48, scope: !8248)
!8400 = !DILocation(line: 1259, column: 9, scope: !8248)
!8401 = !DILocation(line: 1260, column: 11, scope: !8248)
!8402 = !DILocation(line: 1260, column: 14, scope: !8248)
!8403 = !DILocation(line: 1260, column: 31, scope: !8248)
!8404 = !DILocation(line: 1260, column: 29, scope: !8248)
!8405 = !DILocation(line: 1260, column: 24, scope: !8248)
!8406 = !DILocation(line: 1260, column: 9, scope: !8248)
!8407 = !DILocation(line: 1262, column: 14, scope: !8263)
!8408 = !DILocation(line: 1262, column: 12, scope: !8263)
!8409 = !DILocation(line: 1262, column: 10, scope: !8263)
!8410 = !DILocation(line: 1262, column: 29, scope: !8411)
!8411 = !DILexicalBlockFile(scope: !8262, file: !1665, discriminator: 1)
!8412 = !DILocation(line: 1262, column: 33, scope: !8411)
!8413 = !DILocation(line: 1262, column: 31, scope: !8411)
!8414 = !DILocation(line: 1262, column: 5, scope: !8411)
!8415 = !DILocation(line: 1264, column: 44, scope: !8261)
!8416 = !DILocation(line: 1264, column: 46, scope: !8261)
!8417 = !DILocation(line: 1264, column: 42, scope: !8261)
!8418 = !DILocation(line: 1264, column: 40, scope: !8261)
!8419 = !DILocation(line: 1264, column: 35, scope: !8261)
!8420 = !DILocation(line: 1264, column: 15, scope: !8261)
!8421 = !DILocation(line: 1264, column: 13, scope: !8261)
!8422 = !DILocation(line: 1265, column: 19, scope: !8261)
!8423 = !DILocation(line: 1265, column: 32, scope: !8261)
!8424 = !DILocation(line: 1265, column: 30, scope: !8261)
!8425 = !DILocation(line: 1265, column: 17, scope: !8261)
!8426 = !DILocation(line: 1267, column: 16, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8261, file: !1665, line: 1267, column: 9)
!8428 = !DILocation(line: 1267, column: 14, scope: !8427)
!8429 = !DILocation(line: 1267, column: 21, scope: !8430)
!8430 = !DILexicalBlockFile(scope: !8431, file: !1665, discriminator: 1)
!8431 = distinct !DILexicalBlock(scope: !8427, file: !1665, line: 1267, column: 9)
!8432 = !DILocation(line: 1267, column: 23, scope: !8430)
!8433 = !DILocation(line: 1267, column: 9, scope: !8430)
!8434 = !DILocation(line: 1268, column: 30, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8431, file: !1665, line: 1267, column: 33)
!8436 = !DILocation(line: 1268, column: 29, scope: !8435)
!8437 = !DILocation(line: 1268, column: 24, scope: !8435)
!8438 = !DILocation(line: 1268, column: 14, scope: !8435)
!8439 = !DILocation(line: 1268, column: 22, scope: !8435)
!8440 = !DILocation(line: 1269, column: 21, scope: !8435)
!8441 = !DILocation(line: 1270, column: 9, scope: !8435)
!8442 = !DILocation(line: 1267, column: 29, scope: !8443)
!8443 = !DILexicalBlockFile(scope: !8431, file: !1665, discriminator: 2)
!8444 = !DILocation(line: 1267, column: 9, scope: !8443)
!8445 = distinct !{!8445, !8446}
!8446 = !DILocation(line: 1267, column: 9, scope: !8261)
!8447 = !DILocation(line: 1271, column: 17, scope: !8261)
!8448 = !DILocation(line: 1271, column: 23, scope: !8261)
!8449 = !DILocation(line: 1271, column: 27, scope: !8261)
!8450 = !DILocation(line: 1271, column: 9, scope: !8261)
!8451 = !DILocation(line: 1272, column: 16, scope: !8273)
!8452 = !DILocation(line: 1272, column: 14, scope: !8273)
!8453 = !DILocation(line: 1272, column: 21, scope: !8454)
!8454 = !DILexicalBlockFile(scope: !8272, file: !1665, discriminator: 1)
!8455 = !DILocation(line: 1272, column: 23, scope: !8454)
!8456 = !DILocation(line: 1272, column: 9, scope: !8454)
!8457 = !DILocation(line: 1273, column: 39, scope: !8271)
!8458 = !DILocation(line: 1273, column: 34, scope: !8271)
!8459 = !DILocation(line: 1273, column: 32, scope: !8271)
!8460 = !DILocation(line: 1273, column: 49, scope: !8271)
!8461 = !DILocation(line: 1273, column: 45, scope: !8271)
!8462 = !DILocation(line: 1273, column: 24, scope: !8271)
!8463 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !8285)
!8464 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !8285)
!8465 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !8285)
!8466 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !8285)
!8467 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !8285)
!8468 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !8285)
!8469 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !8285)
!8470 = !DILocation(line: 1273, column: 63, scope: !8271)
!8471 = !DILocation(line: 1273, column: 65, scope: !8271)
!8472 = !DILocation(line: 1273, column: 61, scope: !8271)
!8473 = !DILocation(line: 1273, column: 56, scope: !8271)
!8474 = !DILocation(line: 1273, column: 54, scope: !8271)
!8475 = !DILocation(line: 1273, column: 14, scope: !8271)
!8476 = !DILocation(line: 1273, column: 22, scope: !8271)
!8477 = !DILocation(line: 1274, column: 47, scope: !8271)
!8478 = !DILocation(line: 1274, column: 49, scope: !8271)
!8479 = !DILocation(line: 1274, column: 42, scope: !8271)
!8480 = !DILocation(line: 1274, column: 40, scope: !8271)
!8481 = !DILocation(line: 1274, column: 60, scope: !8271)
!8482 = !DILocation(line: 1274, column: 62, scope: !8271)
!8483 = !DILocation(line: 1274, column: 56, scope: !8271)
!8484 = !DILocation(line: 1274, column: 32, scope: !8271)
!8485 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !8270)
!8486 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !8270)
!8487 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !8270)
!8488 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !8270)
!8489 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !8270)
!8490 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !8270)
!8491 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !8270)
!8492 = !DILocation(line: 1274, column: 20, scope: !8271)
!8493 = !DILocation(line: 1274, column: 22, scope: !8271)
!8494 = !DILocation(line: 1274, column: 18, scope: !8271)
!8495 = !DILocation(line: 1274, column: 13, scope: !8271)
!8496 = !DILocation(line: 1274, column: 30, scope: !8271)
!8497 = !DILocation(line: 1275, column: 21, scope: !8271)
!8498 = !DILocation(line: 1276, column: 9, scope: !8271)
!8499 = !DILocation(line: 1272, column: 29, scope: !8500)
!8500 = !DILexicalBlockFile(scope: !8272, file: !1665, discriminator: 2)
!8501 = !DILocation(line: 1272, column: 9, scope: !8500)
!8502 = distinct !{!8502, !8503}
!8503 = !DILocation(line: 1272, column: 9, scope: !8261)
!8504 = !DILocation(line: 1277, column: 17, scope: !8261)
!8505 = !DILocation(line: 1277, column: 23, scope: !8261)
!8506 = !DILocation(line: 1277, column: 27, scope: !8261)
!8507 = !DILocation(line: 1277, column: 9, scope: !8261)
!8508 = !DILocation(line: 1278, column: 16, scope: !8260)
!8509 = !DILocation(line: 1278, column: 14, scope: !8260)
!8510 = !DILocation(line: 1278, column: 21, scope: !8511)
!8511 = !DILexicalBlockFile(scope: !8259, file: !1665, discriminator: 1)
!8512 = !DILocation(line: 1278, column: 23, scope: !8511)
!8513 = !DILocation(line: 1278, column: 9, scope: !8511)
!8514 = !DILocation(line: 1279, column: 39, scope: !8258)
!8515 = !DILocation(line: 1279, column: 34, scope: !8258)
!8516 = !DILocation(line: 1279, column: 32, scope: !8258)
!8517 = !DILocation(line: 1279, column: 49, scope: !8258)
!8518 = !DILocation(line: 1279, column: 45, scope: !8258)
!8519 = !DILocation(line: 1279, column: 24, scope: !8258)
!8520 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !8257)
!8521 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !8257)
!8522 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !8257)
!8523 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !8257)
!8524 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !8257)
!8525 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !8257)
!8526 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !8257)
!8527 = !DILocation(line: 1279, column: 63, scope: !8258)
!8528 = !DILocation(line: 1279, column: 65, scope: !8258)
!8529 = !DILocation(line: 1279, column: 61, scope: !8258)
!8530 = !DILocation(line: 1279, column: 56, scope: !8258)
!8531 = !DILocation(line: 1279, column: 54, scope: !8258)
!8532 = !DILocation(line: 1279, column: 14, scope: !8258)
!8533 = !DILocation(line: 1279, column: 22, scope: !8258)
!8534 = !DILocation(line: 1280, column: 47, scope: !8258)
!8535 = !DILocation(line: 1280, column: 49, scope: !8258)
!8536 = !DILocation(line: 1280, column: 42, scope: !8258)
!8537 = !DILocation(line: 1280, column: 40, scope: !8258)
!8538 = !DILocation(line: 1280, column: 60, scope: !8258)
!8539 = !DILocation(line: 1280, column: 62, scope: !8258)
!8540 = !DILocation(line: 1280, column: 56, scope: !8258)
!8541 = !DILocation(line: 1280, column: 32, scope: !8258)
!8542 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !8267)
!8543 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !8267)
!8544 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !8267)
!8545 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !8267)
!8546 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !8267)
!8547 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !8267)
!8548 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !8267)
!8549 = !DILocation(line: 1280, column: 20, scope: !8258)
!8550 = !DILocation(line: 1280, column: 22, scope: !8258)
!8551 = !DILocation(line: 1280, column: 18, scope: !8258)
!8552 = !DILocation(line: 1280, column: 13, scope: !8258)
!8553 = !DILocation(line: 1280, column: 30, scope: !8258)
!8554 = !DILocation(line: 1281, column: 21, scope: !8258)
!8555 = !DILocation(line: 1282, column: 9, scope: !8258)
!8556 = !DILocation(line: 1278, column: 29, scope: !8557)
!8557 = !DILexicalBlockFile(scope: !8259, file: !1665, discriminator: 2)
!8558 = !DILocation(line: 1278, column: 9, scope: !8557)
!8559 = distinct !{!8559, !8560}
!8560 = !DILocation(line: 1278, column: 9, scope: !8261)
!8561 = !DILocation(line: 1283, column: 17, scope: !8261)
!8562 = !DILocation(line: 1283, column: 23, scope: !8261)
!8563 = !DILocation(line: 1283, column: 27, scope: !8261)
!8564 = !DILocation(line: 1283, column: 9, scope: !8261)
!8565 = !DILocation(line: 1284, column: 16, scope: !8279)
!8566 = !DILocation(line: 1284, column: 14, scope: !8279)
!8567 = !DILocation(line: 1284, column: 21, scope: !8568)
!8568 = !DILexicalBlockFile(scope: !8278, file: !1665, discriminator: 1)
!8569 = !DILocation(line: 1284, column: 23, scope: !8568)
!8570 = !DILocation(line: 1284, column: 9, scope: !8568)
!8571 = !DILocation(line: 1285, column: 47, scope: !8277)
!8572 = !DILocation(line: 1285, column: 42, scope: !8277)
!8573 = !DILocation(line: 1285, column: 40, scope: !8277)
!8574 = !DILocation(line: 1285, column: 57, scope: !8277)
!8575 = !DILocation(line: 1285, column: 53, scope: !8277)
!8576 = !DILocation(line: 1285, column: 32, scope: !8277)
!8577 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !8276)
!8578 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !8276)
!8579 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !8276)
!8580 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !8276)
!8581 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !8276)
!8582 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !8276)
!8583 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !8276)
!8584 = !DILocation(line: 1285, column: 71, scope: !8277)
!8585 = !DILocation(line: 1285, column: 73, scope: !8277)
!8586 = !DILocation(line: 1285, column: 69, scope: !8277)
!8587 = !DILocation(line: 1285, column: 64, scope: !8277)
!8588 = !DILocation(line: 1285, column: 62, scope: !8277)
!8589 = !DILocation(line: 1285, column: 20, scope: !8277)
!8590 = !DILocation(line: 1285, column: 22, scope: !8277)
!8591 = !DILocation(line: 1285, column: 18, scope: !8277)
!8592 = !DILocation(line: 1285, column: 13, scope: !8277)
!8593 = !DILocation(line: 1285, column: 30, scope: !8277)
!8594 = !DILocation(line: 1286, column: 47, scope: !8277)
!8595 = !DILocation(line: 1286, column: 49, scope: !8277)
!8596 = !DILocation(line: 1286, column: 42, scope: !8277)
!8597 = !DILocation(line: 1286, column: 40, scope: !8277)
!8598 = !DILocation(line: 1286, column: 60, scope: !8277)
!8599 = !DILocation(line: 1286, column: 62, scope: !8277)
!8600 = !DILocation(line: 1286, column: 56, scope: !8277)
!8601 = !DILocation(line: 1286, column: 32, scope: !8277)
!8602 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !8282)
!8603 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !8282)
!8604 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !8282)
!8605 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !8282)
!8606 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !8282)
!8607 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !8282)
!8608 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !8282)
!8609 = !DILocation(line: 1286, column: 20, scope: !8277)
!8610 = !DILocation(line: 1286, column: 22, scope: !8277)
!8611 = !DILocation(line: 1286, column: 18, scope: !8277)
!8612 = !DILocation(line: 1286, column: 13, scope: !8277)
!8613 = !DILocation(line: 1286, column: 30, scope: !8277)
!8614 = !DILocation(line: 1287, column: 20, scope: !8277)
!8615 = !DILocation(line: 1287, column: 22, scope: !8277)
!8616 = !DILocation(line: 1287, column: 18, scope: !8277)
!8617 = !DILocation(line: 1287, column: 13, scope: !8277)
!8618 = !DILocation(line: 1287, column: 30, scope: !8277)
!8619 = !DILocation(line: 1288, column: 9, scope: !8277)
!8620 = !DILocation(line: 1284, column: 29, scope: !8621)
!8621 = !DILexicalBlockFile(scope: !8278, file: !1665, discriminator: 2)
!8622 = !DILocation(line: 1284, column: 9, scope: !8621)
!8623 = distinct !{!8623, !8624}
!8624 = !DILocation(line: 1284, column: 9, scope: !8261)
!8625 = !DILocation(line: 1289, column: 13, scope: !8261)
!8626 = !DILocation(line: 1290, column: 17, scope: !8261)
!8627 = !DILocation(line: 1290, column: 18, scope: !8261)
!8628 = !DILocation(line: 1290, column: 22, scope: !8261)
!8629 = !DILocation(line: 1290, column: 16, scope: !8261)
!8630 = !DILocation(line: 1290, column: 13, scope: !8261)
!8631 = !DILocation(line: 1291, column: 5, scope: !8261)
!8632 = !DILocation(line: 1262, column: 43, scope: !8633)
!8633 = !DILexicalBlockFile(scope: !8262, file: !1665, discriminator: 2)
!8634 = !DILocation(line: 1262, column: 5, scope: !8633)
!8635 = distinct !{!8635, !8636}
!8636 = !DILocation(line: 1262, column: 5, scope: !8248)
!8637 = !DILocation(line: 1293, column: 14, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8248, file: !1665, line: 1293, column: 5)
!8639 = !DILocation(line: 1293, column: 12, scope: !8638)
!8640 = !DILocation(line: 1293, column: 10, scope: !8638)
!8641 = !DILocation(line: 1293, column: 23, scope: !8642)
!8642 = !DILexicalBlockFile(scope: !8643, file: !1665, discriminator: 1)
!8643 = distinct !DILexicalBlock(scope: !8638, file: !1665, line: 1293, column: 5)
!8644 = !DILocation(line: 1293, column: 25, scope: !8642)
!8645 = !DILocation(line: 1293, column: 5, scope: !8642)
!8646 = !DILocation(line: 1295, column: 19, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8643, file: !1665, line: 1293, column: 36)
!8648 = !DILocation(line: 1295, column: 32, scope: !8647)
!8649 = !DILocation(line: 1295, column: 30, scope: !8647)
!8650 = !DILocation(line: 1295, column: 17, scope: !8647)
!8651 = !DILocation(line: 1296, column: 16, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8647, file: !1665, line: 1296, column: 9)
!8653 = !DILocation(line: 1296, column: 14, scope: !8652)
!8654 = !DILocation(line: 1296, column: 21, scope: !8655)
!8655 = !DILexicalBlockFile(scope: !8656, file: !1665, discriminator: 1)
!8656 = distinct !DILexicalBlock(scope: !8652, file: !1665, line: 1296, column: 9)
!8657 = !DILocation(line: 1296, column: 23, scope: !8655)
!8658 = !DILocation(line: 1296, column: 9, scope: !8655)
!8659 = !DILocation(line: 1297, column: 30, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8656, file: !1665, line: 1296, column: 34)
!8661 = !DILocation(line: 1297, column: 29, scope: !8660)
!8662 = !DILocation(line: 1297, column: 24, scope: !8660)
!8663 = !DILocation(line: 1297, column: 14, scope: !8660)
!8664 = !DILocation(line: 1297, column: 22, scope: !8660)
!8665 = !DILocation(line: 1298, column: 19, scope: !8660)
!8666 = !DILocation(line: 1298, column: 18, scope: !8660)
!8667 = !DILocation(line: 1298, column: 13, scope: !8660)
!8668 = !DILocation(line: 1298, column: 22, scope: !8660)
!8669 = !DILocation(line: 1299, column: 21, scope: !8660)
!8670 = !DILocation(line: 1300, column: 9, scope: !8660)
!8671 = !DILocation(line: 1296, column: 30, scope: !8672)
!8672 = !DILexicalBlockFile(scope: !8656, file: !1665, discriminator: 2)
!8673 = !DILocation(line: 1296, column: 9, scope: !8672)
!8674 = distinct !{!8674, !8675}
!8675 = !DILocation(line: 1296, column: 9, scope: !8647)
!8676 = !DILocation(line: 1301, column: 17, scope: !8647)
!8677 = !DILocation(line: 1301, column: 18, scope: !8647)
!8678 = !DILocation(line: 1301, column: 22, scope: !8647)
!8679 = !DILocation(line: 1301, column: 16, scope: !8647)
!8680 = !DILocation(line: 1301, column: 13, scope: !8647)
!8681 = !DILocation(line: 1302, column: 5, scope: !8647)
!8682 = !DILocation(line: 1293, column: 32, scope: !8683)
!8683 = !DILexicalBlockFile(scope: !8643, file: !1665, discriminator: 2)
!8684 = !DILocation(line: 1293, column: 5, scope: !8683)
!8685 = distinct !{!8685, !8686}
!8686 = !DILocation(line: 1293, column: 5, scope: !8248)
!8687 = !DILocation(line: 1303, column: 1, scope: !8248)
!8688 = distinct !DISubprogram(name: "skip_bits_long", scope: !1870, file: !1870, line: 293, type: !4206, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8689 = !DILocation(line: 127, column: 87, scope: !5605, inlinedAt: !8690)
!8690 = distinct !DILocation(line: 301, column: 17, scope: !8688)
!8691 = !DILocation(line: 127, column: 94, scope: !5605, inlinedAt: !8690)
!8692 = !DILocation(line: 127, column: 104, scope: !5605, inlinedAt: !8690)
!8693 = !DILocalVariable(name: "s", arg: 1, scope: !8688, file: !1870, line: 293, type: !4150)
!8694 = !DILocation(line: 293, column: 50, scope: !8688)
!8695 = !DILocalVariable(name: "n", arg: 2, scope: !8688, file: !1870, line: 293, type: !891)
!8696 = !DILocation(line: 293, column: 57, scope: !8688)
!8697 = !DILocation(line: 301, column: 27, scope: !8688)
!8698 = !DILocation(line: 301, column: 31, scope: !8688)
!8699 = !DILocation(line: 301, column: 34, scope: !8688)
!8700 = !DILocation(line: 301, column: 30, scope: !8688)
!8701 = !DILocation(line: 301, column: 41, scope: !8688)
!8702 = !DILocation(line: 301, column: 44, scope: !8688)
!8703 = !DILocation(line: 301, column: 65, scope: !8688)
!8704 = !DILocation(line: 301, column: 68, scope: !8688)
!8705 = !DILocation(line: 301, column: 63, scope: !8688)
!8706 = !DILocation(line: 301, column: 17, scope: !8688)
!8707 = !DILocation(line: 132, column: 9, scope: !5999, inlinedAt: !8690)
!8708 = !DILocation(line: 132, column: 13, scope: !5999, inlinedAt: !8690)
!8709 = !DILocation(line: 132, column: 11, scope: !5999, inlinedAt: !8690)
!8710 = !DILocation(line: 132, column: 9, scope: !5605, inlinedAt: !8690)
!8711 = !DILocation(line: 132, column: 26, scope: !6004, inlinedAt: !8690)
!8712 = !DILocation(line: 132, column: 19, scope: !6004, inlinedAt: !8690)
!8713 = !DILocation(line: 133, column: 14, scope: !6007, inlinedAt: !8690)
!8714 = !DILocation(line: 133, column: 18, scope: !6007, inlinedAt: !8690)
!8715 = !DILocation(line: 133, column: 16, scope: !6007, inlinedAt: !8690)
!8716 = !DILocation(line: 133, column: 14, scope: !5999, inlinedAt: !8690)
!8717 = !DILocation(line: 133, column: 31, scope: !6012, inlinedAt: !8690)
!8718 = !DILocation(line: 133, column: 24, scope: !6012, inlinedAt: !8690)
!8719 = !DILocation(line: 134, column: 17, scope: !6007, inlinedAt: !8690)
!8720 = !DILocation(line: 134, column: 10, scope: !6007, inlinedAt: !8690)
!8721 = !DILocation(line: 135, column: 1, scope: !5605, inlinedAt: !8690)
!8722 = !DILocation(line: 301, column: 5, scope: !8688)
!8723 = !DILocation(line: 301, column: 8, scope: !8688)
!8724 = !DILocation(line: 301, column: 14, scope: !8688)
!8725 = !DILocation(line: 304, column: 1, scope: !8688)
!8726 = distinct !DISubprogram(name: "exponents_from_scale_factors", scope: !1665, file: !1665, line: 784, type: !8727, isLocal: true, isDefinition: true, scopeLine: 786, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{null, !1847, !2002, !1807}
!8729 = !DILocalVariable(name: "s", arg: 1, scope: !8726, file: !1665, line: 784, type: !1847)
!8730 = !DILocation(line: 784, column: 60, scope: !8726)
!8731 = !DILocalVariable(name: "g", arg: 2, scope: !8726, file: !1665, line: 784, type: !2002)
!8732 = !DILocation(line: 784, column: 75, scope: !8726)
!8733 = !DILocalVariable(name: "exponents", arg: 3, scope: !8726, file: !1665, line: 785, type: !1807)
!8734 = !DILocation(line: 785, column: 51, scope: !8726)
!8735 = !DILocalVariable(name: "bstab", scope: !8726, file: !1665, line: 787, type: !1470)
!8736 = !DILocation(line: 787, column: 20, scope: !8726)
!8737 = !DILocalVariable(name: "pretab", scope: !8726, file: !1665, line: 787, type: !1470)
!8738 = !DILocation(line: 787, column: 28, scope: !8726)
!8739 = !DILocalVariable(name: "len", scope: !8726, file: !1665, line: 788, type: !891)
!8740 = !DILocation(line: 788, column: 9, scope: !8726)
!8741 = !DILocalVariable(name: "i", scope: !8726, file: !1665, line: 788, type: !891)
!8742 = !DILocation(line: 788, column: 14, scope: !8726)
!8743 = !DILocalVariable(name: "j", scope: !8726, file: !1665, line: 788, type: !891)
!8744 = !DILocation(line: 788, column: 17, scope: !8726)
!8745 = !DILocalVariable(name: "k", scope: !8726, file: !1665, line: 788, type: !891)
!8746 = !DILocation(line: 788, column: 20, scope: !8726)
!8747 = !DILocalVariable(name: "l", scope: !8726, file: !1665, line: 788, type: !891)
!8748 = !DILocation(line: 788, column: 23, scope: !8726)
!8749 = !DILocalVariable(name: "v0", scope: !8726, file: !1665, line: 788, type: !891)
!8750 = !DILocation(line: 788, column: 26, scope: !8726)
!8751 = !DILocalVariable(name: "shift", scope: !8726, file: !1665, line: 788, type: !891)
!8752 = !DILocation(line: 788, column: 30, scope: !8726)
!8753 = !DILocalVariable(name: "gain", scope: !8726, file: !1665, line: 788, type: !891)
!8754 = !DILocation(line: 788, column: 37, scope: !8726)
!8755 = !DILocalVariable(name: "gains", scope: !8726, file: !1665, line: 788, type: !1907)
!8756 = !DILocation(line: 788, column: 43, scope: !8726)
!8757 = !DILocalVariable(name: "exp_ptr", scope: !8726, file: !1665, line: 789, type: !1807)
!8758 = !DILocation(line: 789, column: 14, scope: !8726)
!8759 = !DILocation(line: 791, column: 15, scope: !8726)
!8760 = !DILocation(line: 791, column: 13, scope: !8726)
!8761 = !DILocation(line: 792, column: 12, scope: !8726)
!8762 = !DILocation(line: 792, column: 15, scope: !8726)
!8763 = !DILocation(line: 792, column: 27, scope: !8726)
!8764 = !DILocation(line: 792, column: 10, scope: !8726)
!8765 = !DILocation(line: 793, column: 13, scope: !8726)
!8766 = !DILocation(line: 793, column: 16, scope: !8726)
!8767 = !DILocation(line: 793, column: 31, scope: !8726)
!8768 = !DILocation(line: 793, column: 11, scope: !8726)
!8769 = !DILocation(line: 795, column: 28, scope: !8726)
!8770 = !DILocation(line: 795, column: 31, scope: !8726)
!8771 = !DILocation(line: 795, column: 13, scope: !8726)
!8772 = !DILocation(line: 795, column: 11, scope: !8726)
!8773 = !DILocation(line: 796, column: 25, scope: !8726)
!8774 = !DILocation(line: 796, column: 28, scope: !8726)
!8775 = !DILocation(line: 796, column: 14, scope: !8726)
!8776 = !DILocation(line: 796, column: 12, scope: !8726)
!8777 = !DILocation(line: 797, column: 12, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8726, file: !1665, line: 797, column: 5)
!8779 = !DILocation(line: 797, column: 10, scope: !8778)
!8780 = !DILocation(line: 797, column: 17, scope: !8781)
!8781 = !DILexicalBlockFile(scope: !8782, file: !1665, discriminator: 1)
!8782 = distinct !DILexicalBlock(scope: !8778, file: !1665, line: 797, column: 5)
!8783 = !DILocation(line: 797, column: 21, scope: !8781)
!8784 = !DILocation(line: 797, column: 24, scope: !8781)
!8785 = !DILocation(line: 797, column: 19, scope: !8781)
!8786 = !DILocation(line: 797, column: 5, scope: !8781)
!8787 = !DILocation(line: 798, column: 14, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8782, file: !1665, line: 797, column: 39)
!8789 = !DILocation(line: 798, column: 40, scope: !8788)
!8790 = !DILocation(line: 798, column: 23, scope: !8788)
!8791 = !DILocation(line: 798, column: 26, scope: !8788)
!8792 = !DILocation(line: 798, column: 52, scope: !8788)
!8793 = !DILocation(line: 798, column: 45, scope: !8788)
!8794 = !DILocation(line: 798, column: 43, scope: !8788)
!8795 = !DILocation(line: 798, column: 59, scope: !8788)
!8796 = !DILocation(line: 798, column: 56, scope: !8788)
!8797 = !DILocation(line: 798, column: 19, scope: !8788)
!8798 = !DILocation(line: 798, column: 66, scope: !8788)
!8799 = !DILocation(line: 798, column: 12, scope: !8788)
!8800 = !DILocation(line: 799, column: 21, scope: !8788)
!8801 = !DILocation(line: 799, column: 15, scope: !8788)
!8802 = !DILocation(line: 799, column: 13, scope: !8788)
!8803 = !DILocation(line: 800, column: 18, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8788, file: !1665, line: 800, column: 9)
!8805 = !DILocation(line: 800, column: 16, scope: !8804)
!8806 = !DILocation(line: 800, column: 14, scope: !8804)
!8807 = !DILocation(line: 800, column: 23, scope: !8808)
!8808 = !DILexicalBlockFile(scope: !8809, file: !1665, discriminator: 1)
!8809 = distinct !DILexicalBlock(scope: !8804, file: !1665, line: 800, column: 9)
!8810 = !DILocation(line: 800, column: 25, scope: !8808)
!8811 = !DILocation(line: 800, column: 9, scope: !8808)
!8812 = !DILocation(line: 801, column: 26, scope: !8809)
!8813 = !DILocation(line: 801, column: 21, scope: !8809)
!8814 = !DILocation(line: 801, column: 24, scope: !8809)
!8815 = !DILocation(line: 801, column: 13, scope: !8809)
!8816 = !DILocation(line: 800, column: 31, scope: !8817)
!8817 = !DILexicalBlockFile(scope: !8809, file: !1665, discriminator: 2)
!8818 = !DILocation(line: 800, column: 9, scope: !8817)
!8819 = distinct !{!8819, !8820}
!8820 = !DILocation(line: 800, column: 9, scope: !8788)
!8821 = !DILocation(line: 802, column: 5, scope: !8788)
!8822 = !DILocation(line: 797, column: 35, scope: !8823)
!8823 = !DILexicalBlockFile(scope: !8782, file: !1665, discriminator: 2)
!8824 = !DILocation(line: 797, column: 5, scope: !8823)
!8825 = distinct !{!8825, !8826}
!8826 = !DILocation(line: 797, column: 5, scope: !8726)
!8827 = !DILocation(line: 804, column: 9, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8726, file: !1665, line: 804, column: 9)
!8829 = !DILocation(line: 804, column: 12, scope: !8828)
!8830 = !DILocation(line: 804, column: 24, scope: !8828)
!8831 = !DILocation(line: 804, column: 9, scope: !8726)
!8832 = !DILocation(line: 805, column: 33, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8828, file: !1665, line: 804, column: 30)
!8834 = !DILocation(line: 805, column: 36, scope: !8833)
!8835 = !DILocation(line: 805, column: 17, scope: !8833)
!8836 = !DILocation(line: 805, column: 15, scope: !8833)
!8837 = !DILocation(line: 806, column: 20, scope: !8833)
!8838 = !DILocation(line: 806, column: 28, scope: !8833)
!8839 = !DILocation(line: 806, column: 31, scope: !8833)
!8840 = !DILocation(line: 806, column: 48, scope: !8833)
!8841 = !DILocation(line: 806, column: 25, scope: !8833)
!8842 = !DILocation(line: 806, column: 9, scope: !8833)
!8843 = !DILocation(line: 806, column: 18, scope: !8833)
!8844 = !DILocation(line: 807, column: 20, scope: !8833)
!8845 = !DILocation(line: 807, column: 28, scope: !8833)
!8846 = !DILocation(line: 807, column: 31, scope: !8833)
!8847 = !DILocation(line: 807, column: 48, scope: !8833)
!8848 = !DILocation(line: 807, column: 25, scope: !8833)
!8849 = !DILocation(line: 807, column: 9, scope: !8833)
!8850 = !DILocation(line: 807, column: 18, scope: !8833)
!8851 = !DILocation(line: 808, column: 20, scope: !8833)
!8852 = !DILocation(line: 808, column: 28, scope: !8833)
!8853 = !DILocation(line: 808, column: 31, scope: !8833)
!8854 = !DILocation(line: 808, column: 48, scope: !8833)
!8855 = !DILocation(line: 808, column: 25, scope: !8833)
!8856 = !DILocation(line: 808, column: 9, scope: !8833)
!8857 = !DILocation(line: 808, column: 18, scope: !8833)
!8858 = !DILocation(line: 809, column: 13, scope: !8833)
!8859 = !DILocation(line: 809, column: 16, scope: !8833)
!8860 = !DILocation(line: 809, column: 11, scope: !8833)
!8861 = !DILocation(line: 810, column: 18, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8833, file: !1665, line: 810, column: 9)
!8863 = !DILocation(line: 810, column: 21, scope: !8862)
!8864 = !DILocation(line: 810, column: 16, scope: !8862)
!8865 = !DILocation(line: 810, column: 14, scope: !8862)
!8866 = !DILocation(line: 810, column: 34, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !8868, file: !1665, discriminator: 1)
!8868 = distinct !DILexicalBlock(scope: !8862, file: !1665, line: 810, column: 9)
!8869 = !DILocation(line: 810, column: 36, scope: !8867)
!8870 = !DILocation(line: 810, column: 9, scope: !8867)
!8871 = !DILocation(line: 811, column: 25, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8868, file: !1665, line: 810, column: 47)
!8873 = !DILocation(line: 811, column: 19, scope: !8872)
!8874 = !DILocation(line: 811, column: 17, scope: !8872)
!8875 = !DILocation(line: 812, column: 20, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8872, file: !1665, line: 812, column: 13)
!8877 = !DILocation(line: 812, column: 18, scope: !8876)
!8878 = !DILocation(line: 812, column: 25, scope: !8879)
!8879 = !DILexicalBlockFile(scope: !8880, file: !1665, discriminator: 1)
!8880 = distinct !DILexicalBlock(scope: !8876, file: !1665, line: 812, column: 13)
!8881 = !DILocation(line: 812, column: 27, scope: !8879)
!8882 = !DILocation(line: 812, column: 13, scope: !8879)
!8883 = !DILocation(line: 813, column: 28, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8880, file: !1665, line: 812, column: 37)
!8885 = !DILocation(line: 813, column: 22, scope: !8884)
!8886 = !DILocation(line: 813, column: 52, scope: !8884)
!8887 = !DILocation(line: 813, column: 34, scope: !8884)
!8888 = !DILocation(line: 813, column: 37, scope: !8884)
!8889 = !DILocation(line: 813, column: 59, scope: !8884)
!8890 = !DILocation(line: 813, column: 56, scope: !8884)
!8891 = !DILocation(line: 813, column: 31, scope: !8884)
!8892 = !DILocation(line: 813, column: 66, scope: !8884)
!8893 = !DILocation(line: 813, column: 20, scope: !8884)
!8894 = !DILocation(line: 814, column: 26, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8884, file: !1665, line: 814, column: 17)
!8896 = !DILocation(line: 814, column: 24, scope: !8895)
!8897 = !DILocation(line: 814, column: 22, scope: !8895)
!8898 = !DILocation(line: 814, column: 31, scope: !8899)
!8899 = !DILexicalBlockFile(scope: !8900, file: !1665, discriminator: 1)
!8900 = distinct !DILexicalBlock(scope: !8895, file: !1665, line: 814, column: 17)
!8901 = !DILocation(line: 814, column: 33, scope: !8899)
!8902 = !DILocation(line: 814, column: 17, scope: !8899)
!8903 = !DILocation(line: 815, column: 34, scope: !8900)
!8904 = !DILocation(line: 815, column: 29, scope: !8900)
!8905 = !DILocation(line: 815, column: 32, scope: !8900)
!8906 = !DILocation(line: 815, column: 21, scope: !8900)
!8907 = !DILocation(line: 814, column: 39, scope: !8908)
!8908 = !DILexicalBlockFile(scope: !8900, file: !1665, discriminator: 2)
!8909 = !DILocation(line: 814, column: 17, scope: !8908)
!8910 = distinct !{!8910, !8911}
!8911 = !DILocation(line: 814, column: 17, scope: !8884)
!8912 = !DILocation(line: 816, column: 13, scope: !8884)
!8913 = !DILocation(line: 812, column: 33, scope: !8914)
!8914 = !DILexicalBlockFile(scope: !8880, file: !1665, discriminator: 2)
!8915 = !DILocation(line: 812, column: 13, scope: !8914)
!8916 = distinct !{!8916, !8917}
!8917 = !DILocation(line: 812, column: 13, scope: !8872)
!8918 = !DILocation(line: 817, column: 9, scope: !8872)
!8919 = !DILocation(line: 810, column: 43, scope: !8920)
!8920 = !DILexicalBlockFile(scope: !8868, file: !1665, discriminator: 2)
!8921 = !DILocation(line: 810, column: 9, scope: !8920)
!8922 = distinct !{!8922, !8923}
!8923 = !DILocation(line: 810, column: 9, scope: !8833)
!8924 = !DILocation(line: 818, column: 5, scope: !8833)
!8925 = !DILocation(line: 819, column: 1, scope: !8726)
!8926 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !8927)
!8927 = distinct !DILocation(line: 788, column: 601, scope: !8928, inlinedAt: !8937)
!8928 = !DILexicalBlockFile(scope: !8929, file: !1870, discriminator: 11)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !1870, line: 788, column: 490)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !1870, line: 788, column: 466)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !1870, line: 788, column: 154)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !1870, line: 788, column: 130)
!8933 = distinct !DILexicalBlock(scope: !8934, file: !1870, line: 788, column: 8)
!8934 = distinct !DISubprogram(name: "get_vlc2", scope: !1870, file: !1870, line: 762, type: !8935, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!891, !4150, !1751, !891, !891}
!8937 = distinct !DILocation(line: 967, column: 16, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !1844, file: !1665, line: 947, column: 28)
!8939 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !8940)
!8940 = distinct !DILocation(line: 788, column: 259, scope: !8941, inlinedAt: !8937)
!8941 = !DILexicalBlockFile(scope: !8931, file: !1870, discriminator: 6)
!8942 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !8943)
!8943 = distinct !DILocation(line: 786, column: 16, scope: !8934, inlinedAt: !8937)
!8944 = !DILocalVariable(name: "s", arg: 1, scope: !8934, file: !1870, line: 762, type: !4150)
!8945 = !DILocation(line: 762, column: 74, scope: !8934, inlinedAt: !8937)
!8946 = !DILocalVariable(name: "table", arg: 2, scope: !8934, file: !1870, line: 762, type: !1751)
!8947 = !DILocation(line: 762, column: 87, scope: !8934, inlinedAt: !8937)
!8948 = !DILocalVariable(name: "bits", arg: 3, scope: !8934, file: !1870, line: 763, type: !891)
!8949 = !DILocation(line: 763, column: 42, scope: !8934, inlinedAt: !8937)
!8950 = !DILocalVariable(name: "max_depth", arg: 4, scope: !8934, file: !1870, line: 763, type: !891)
!8951 = !DILocation(line: 763, column: 52, scope: !8934, inlinedAt: !8937)
!8952 = !DILocalVariable(name: "code", scope: !8934, file: !1870, line: 783, type: !891)
!8953 = !DILocation(line: 783, column: 9, scope: !8934, inlinedAt: !8937)
!8954 = !DILocalVariable(name: "re_index", scope: !8934, file: !1870, line: 785, type: !894)
!8955 = !DILocation(line: 785, column: 18, scope: !8934, inlinedAt: !8937)
!8956 = !DILocalVariable(name: "re_cache", scope: !8934, file: !1870, line: 785, type: !894)
!8957 = !DILocation(line: 785, column: 78, scope: !8934, inlinedAt: !8937)
!8958 = !DILocalVariable(name: "re_size_plus8", scope: !8934, file: !1870, line: 785, type: !894)
!8959 = !DILocation(line: 785, column: 101, scope: !8934, inlinedAt: !8937)
!8960 = !DILocalVariable(name: "n", scope: !8933, file: !1870, line: 788, type: !891)
!8961 = !DILocation(line: 788, column: 14, scope: !8933, inlinedAt: !8937)
!8962 = !DILocalVariable(name: "nb_bits", scope: !8933, file: !1870, line: 788, type: !891)
!8963 = !DILocation(line: 788, column: 17, scope: !8933, inlinedAt: !8937)
!8964 = !DILocalVariable(name: "index", scope: !8933, file: !1870, line: 788, type: !894)
!8965 = !DILocation(line: 788, column: 39, scope: !8933, inlinedAt: !8937)
!8966 = !DILocalVariable(name: "s", arg: 1, scope: !8967, file: !1870, line: 412, type: !4150)
!8967 = distinct !DISubprogram(name: "get_bitsz", scope: !1870, file: !1870, line: 412, type: !8968, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!8968 = !DISubroutineType(types: !8969)
!8969 = !{!891, !4150, !891}
!8970 = !DILocation(line: 412, column: 75, scope: !8967, inlinedAt: !8971)
!8971 = distinct !DILocation(line: 932, column: 26, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !1665, line: 931, column: 24)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !1665, line: 929, column: 21)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !1665, line: 925, column: 20)
!8975 = distinct !DILexicalBlock(scope: !8976, file: !1665, line: 904, column: 17)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !1665, line: 881, column: 28)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !1665, line: 881, column: 9)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !1665, line: 881, column: 9)
!8979 = distinct !DILexicalBlock(scope: !8980, file: !1665, line: 863, column: 29)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !1665, line: 863, column: 5)
!8981 = distinct !DILexicalBlock(scope: !1844, file: !1665, line: 863, column: 5)
!8982 = !DILocalVariable(name: "n", arg: 2, scope: !8967, file: !1870, line: 412, type: !891)
!8983 = !DILocation(line: 412, column: 82, scope: !8967, inlinedAt: !8971)
!8984 = !DILocation(line: 412, column: 75, scope: !8967, inlinedAt: !8985)
!8985 = distinct !DILocation(line: 919, column: 26, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !1665, line: 918, column: 24)
!8987 = distinct !DILexicalBlock(scope: !8988, file: !1665, line: 916, column: 21)
!8988 = distinct !DILexicalBlock(scope: !8975, file: !1665, line: 904, column: 25)
!8989 = !DILocation(line: 412, column: 82, scope: !8967, inlinedAt: !8985)
!8990 = !DILocation(line: 412, column: 75, scope: !8967, inlinedAt: !8991)
!8991 = distinct !DILocation(line: 910, column: 26, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !1665, line: 909, column: 24)
!8993 = distinct !DILexicalBlock(scope: !8988, file: !1665, line: 907, column: 21)
!8994 = !DILocation(line: 412, column: 82, scope: !8967, inlinedAt: !8991)
!8995 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !8996)
!8996 = distinct !DILocation(line: 788, column: 601, scope: !8928, inlinedAt: !8997)
!8997 = distinct !DILocation(line: 891, column: 17, scope: !8976)
!8998 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !8999)
!8999 = distinct !DILocation(line: 788, column: 259, scope: !8941, inlinedAt: !8997)
!9000 = !DILocation(line: 66, column: 98, scope: !2071, inlinedAt: !9001)
!9001 = distinct !DILocation(line: 786, column: 16, scope: !8934, inlinedAt: !8997)
!9002 = !DILocation(line: 762, column: 74, scope: !8934, inlinedAt: !8997)
!9003 = !DILocation(line: 762, column: 87, scope: !8934, inlinedAt: !8997)
!9004 = !DILocation(line: 763, column: 42, scope: !8934, inlinedAt: !8997)
!9005 = !DILocation(line: 763, column: 52, scope: !8934, inlinedAt: !8997)
!9006 = !DILocation(line: 783, column: 9, scope: !8934, inlinedAt: !8997)
!9007 = !DILocation(line: 785, column: 18, scope: !8934, inlinedAt: !8997)
!9008 = !DILocation(line: 785, column: 78, scope: !8934, inlinedAt: !8997)
!9009 = !DILocation(line: 785, column: 101, scope: !8934, inlinedAt: !8997)
!9010 = !DILocation(line: 788, column: 14, scope: !8933, inlinedAt: !8997)
!9011 = !DILocation(line: 788, column: 17, scope: !8933, inlinedAt: !8997)
!9012 = !DILocation(line: 788, column: 39, scope: !8933, inlinedAt: !8997)
!9013 = !DILocalVariable(name: "s", arg: 1, scope: !1844, file: !1665, line: 852, type: !1847)
!9014 = !DILocation(line: 852, column: 45, scope: !1844)
!9015 = !DILocalVariable(name: "g", arg: 2, scope: !1844, file: !1665, line: 852, type: !2002)
!9016 = !DILocation(line: 852, column: 60, scope: !1844)
!9017 = !DILocalVariable(name: "exponents", arg: 3, scope: !1844, file: !1665, line: 853, type: !1807)
!9018 = !DILocation(line: 853, column: 36, scope: !1844)
!9019 = !DILocalVariable(name: "end_pos2", arg: 4, scope: !1844, file: !1665, line: 853, type: !891)
!9020 = !DILocation(line: 853, column: 51, scope: !1844)
!9021 = !DILocalVariable(name: "s_index", scope: !1844, file: !1665, line: 855, type: !891)
!9022 = !DILocation(line: 855, column: 9, scope: !1844)
!9023 = !DILocalVariable(name: "i", scope: !1844, file: !1665, line: 856, type: !891)
!9024 = !DILocation(line: 856, column: 9, scope: !1844)
!9025 = !DILocalVariable(name: "last_pos", scope: !1844, file: !1665, line: 857, type: !891)
!9026 = !DILocation(line: 857, column: 9, scope: !1844)
!9027 = !DILocalVariable(name: "bits_left", scope: !1844, file: !1665, line: 857, type: !891)
!9028 = !DILocation(line: 857, column: 19, scope: !1844)
!9029 = !DILocalVariable(name: "vlc", scope: !1844, file: !1665, line: 858, type: !9030)
!9030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64, align: 64)
!9031 = !DILocation(line: 858, column: 10, scope: !1844)
!9032 = !DILocalVariable(name: "end_pos", scope: !1844, file: !1665, line: 859, type: !891)
!9033 = !DILocation(line: 859, column: 9, scope: !1844)
!9034 = !DILocation(line: 859, column: 21, scope: !1844)
!9035 = !DILocation(line: 859, column: 34, scope: !1844)
!9036 = !DILocation(line: 859, column: 37, scope: !1844)
!9037 = !DILocation(line: 859, column: 40, scope: !1844)
!9038 = !DILocation(line: 859, column: 55, scope: !1844)
!9039 = !DILocation(line: 859, column: 58, scope: !1844)
!9040 = !DILocation(line: 859, column: 68, scope: !1844)
!9041 = !DILocation(line: 859, column: 53, scope: !1844)
!9042 = !DILocation(line: 859, column: 31, scope: !1844)
!9043 = !DILocation(line: 859, column: 20, scope: !1844)
!9044 = !DILocation(line: 859, column: 76, scope: !9045)
!9045 = !DILexicalBlockFile(scope: !1844, file: !1665, discriminator: 1)
!9046 = !DILocation(line: 859, column: 79, scope: !9045)
!9047 = !DILocation(line: 859, column: 82, scope: !9045)
!9048 = !DILocation(line: 859, column: 97, scope: !9045)
!9049 = !DILocation(line: 859, column: 100, scope: !9045)
!9050 = !DILocation(line: 859, column: 110, scope: !9045)
!9051 = !DILocation(line: 859, column: 95, scope: !9045)
!9052 = !DILocation(line: 859, column: 20, scope: !9045)
!9053 = !DILocation(line: 859, column: 118, scope: !9054)
!9054 = !DILexicalBlockFile(scope: !1844, file: !1665, discriminator: 2)
!9055 = !DILocation(line: 859, column: 20, scope: !9054)
!9056 = !DILocation(line: 859, column: 20, scope: !9057)
!9057 = !DILexicalBlockFile(scope: !1844, file: !1665, discriminator: 3)
!9058 = !DILocation(line: 859, column: 9, scope: !9057)
!9059 = !DILocation(line: 862, column: 13, scope: !1844)
!9060 = !DILocation(line: 863, column: 12, scope: !8981)
!9061 = !DILocation(line: 863, column: 10, scope: !8981)
!9062 = !DILocation(line: 863, column: 17, scope: !9063)
!9063 = !DILexicalBlockFile(scope: !8980, file: !1665, discriminator: 1)
!9064 = !DILocation(line: 863, column: 19, scope: !9063)
!9065 = !DILocation(line: 863, column: 5, scope: !9063)
!9066 = !DILocalVariable(name: "j", scope: !8979, file: !1665, line: 864, type: !891)
!9067 = !DILocation(line: 864, column: 13, scope: !8979)
!9068 = !DILocalVariable(name: "k", scope: !8979, file: !1665, line: 864, type: !891)
!9069 = !DILocation(line: 864, column: 16, scope: !8979)
!9070 = !DILocalVariable(name: "l", scope: !8979, file: !1665, line: 864, type: !891)
!9071 = !DILocation(line: 864, column: 19, scope: !8979)
!9072 = !DILocalVariable(name: "linbits", scope: !8979, file: !1665, line: 864, type: !891)
!9073 = !DILocation(line: 864, column: 22, scope: !8979)
!9074 = !DILocation(line: 865, column: 28, scope: !8979)
!9075 = !DILocation(line: 865, column: 13, scope: !8979)
!9076 = !DILocation(line: 865, column: 16, scope: !8979)
!9077 = !DILocation(line: 865, column: 11, scope: !8979)
!9078 = !DILocation(line: 866, column: 13, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !8979, file: !1665, line: 866, column: 13)
!9080 = !DILocation(line: 866, column: 15, scope: !9079)
!9081 = !DILocation(line: 866, column: 13, scope: !8979)
!9082 = !DILocation(line: 867, column: 13, scope: !9079)
!9083 = !DILocation(line: 869, column: 29, scope: !8979)
!9084 = !DILocation(line: 869, column: 13, scope: !8979)
!9085 = !DILocation(line: 869, column: 16, scope: !8979)
!9086 = !DILocation(line: 869, column: 11, scope: !8979)
!9087 = !DILocation(line: 870, column: 27, scope: !8979)
!9088 = !DILocation(line: 870, column: 13, scope: !8979)
!9089 = !DILocation(line: 870, column: 11, scope: !8979)
!9090 = !DILocation(line: 871, column: 33, scope: !8979)
!9091 = !DILocation(line: 871, column: 19, scope: !8979)
!9092 = !DILocation(line: 871, column: 17, scope: !8979)
!9093 = !DILocation(line: 872, column: 25, scope: !8979)
!9094 = !DILocation(line: 872, column: 16, scope: !8979)
!9095 = !DILocation(line: 872, column: 13, scope: !8979)
!9096 = !DILocation(line: 874, column: 14, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !8979, file: !1665, line: 874, column: 13)
!9098 = !DILocation(line: 874, column: 13, scope: !8979)
!9099 = !DILocation(line: 875, column: 34, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9097, file: !1665, line: 874, column: 17)
!9101 = !DILocation(line: 875, column: 21, scope: !9100)
!9102 = !DILocation(line: 875, column: 24, scope: !9100)
!9103 = !DILocation(line: 875, column: 13, scope: !9100)
!9104 = !DILocation(line: 875, column: 75, scope: !9100)
!9105 = !DILocation(line: 875, column: 73, scope: !9100)
!9106 = !DILocation(line: 876, column: 28, scope: !9100)
!9107 = !DILocation(line: 876, column: 26, scope: !9100)
!9108 = !DILocation(line: 876, column: 21, scope: !9100)
!9109 = !DILocation(line: 877, column: 13, scope: !9100)
!9110 = !DILocation(line: 881, column: 9, scope: !8979)
!9111 = !DILocation(line: 881, column: 16, scope: !9112)
!9112 = !DILexicalBlockFile(scope: !8977, file: !1665, discriminator: 1)
!9113 = !DILocation(line: 881, column: 18, scope: !9112)
!9114 = !DILocation(line: 881, column: 9, scope: !9112)
!9115 = !DILocalVariable(name: "exponent", scope: !8976, file: !1665, line: 882, type: !891)
!9116 = !DILocation(line: 882, column: 17, scope: !8976)
!9117 = !DILocalVariable(name: "x", scope: !8976, file: !1665, line: 882, type: !891)
!9118 = !DILocation(line: 882, column: 27, scope: !8976)
!9119 = !DILocalVariable(name: "y", scope: !8976, file: !1665, line: 882, type: !891)
!9120 = !DILocation(line: 882, column: 30, scope: !8976)
!9121 = !DILocalVariable(name: "v", scope: !8976, file: !1665, line: 883, type: !891)
!9122 = !DILocation(line: 883, column: 17, scope: !8976)
!9123 = !DILocalVariable(name: "pos", scope: !8976, file: !1665, line: 884, type: !891)
!9124 = !DILocation(line: 884, column: 17, scope: !8976)
!9125 = !DILocation(line: 884, column: 39, scope: !8976)
!9126 = !DILocation(line: 884, column: 42, scope: !8976)
!9127 = !DILocation(line: 884, column: 23, scope: !8976)
!9128 = !DILocation(line: 886, column: 17, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !8976, file: !1665, line: 886, column: 17)
!9130 = !DILocation(line: 886, column: 24, scope: !9129)
!9131 = !DILocation(line: 886, column: 21, scope: !9129)
!9132 = !DILocation(line: 886, column: 17, scope: !8976)
!9133 = !DILocation(line: 887, column: 31, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9129, file: !1665, line: 886, column: 32)
!9135 = !DILocation(line: 887, column: 17, scope: !9134)
!9136 = !DILocation(line: 888, column: 21, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9134, file: !1665, line: 888, column: 21)
!9138 = !DILocation(line: 888, column: 28, scope: !9137)
!9139 = !DILocation(line: 888, column: 25, scope: !9137)
!9140 = !DILocation(line: 888, column: 21, scope: !9134)
!9141 = !DILocation(line: 889, column: 21, scope: !9137)
!9142 = !DILocation(line: 890, column: 13, scope: !9134)
!9143 = !DILocation(line: 891, column: 27, scope: !8976)
!9144 = !DILocation(line: 891, column: 30, scope: !8976)
!9145 = !DILocation(line: 891, column: 34, scope: !8976)
!9146 = !DILocation(line: 891, column: 39, scope: !8976)
!9147 = !DILocation(line: 891, column: 17, scope: !8976)
!9148 = !DILocation(line: 785, column: 30, scope: !8934, inlinedAt: !8997)
!9149 = !DILocation(line: 785, column: 34, scope: !8934, inlinedAt: !8997)
!9150 = !DILocation(line: 785, column: 118, scope: !8934, inlinedAt: !8997)
!9151 = !DILocation(line: 785, column: 122, scope: !8934, inlinedAt: !8997)
!9152 = !DILocation(line: 786, column: 60, scope: !8934, inlinedAt: !8997)
!9153 = !DILocation(line: 786, column: 64, scope: !8934, inlinedAt: !8997)
!9154 = !DILocation(line: 786, column: 74, scope: !8934, inlinedAt: !8997)
!9155 = !DILocation(line: 786, column: 83, scope: !8934, inlinedAt: !8997)
!9156 = !DILocation(line: 786, column: 71, scope: !8934, inlinedAt: !8997)
!9157 = !DILocation(line: 786, column: 92, scope: !8934, inlinedAt: !8997)
!9158 = !DILocation(line: 786, column: 16, scope: !8934, inlinedAt: !8997)
!9159 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !9001)
!9160 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !9001)
!9161 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !9001)
!9162 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !9001)
!9163 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !9001)
!9164 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !9001)
!9165 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !9001)
!9166 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !9001)
!9167 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !9001)
!9168 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !9001)
!9169 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !9001)
!9170 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !9001)
!9171 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !9001)
!9172 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !9001)
!9173 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !9001)
!9174 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !9001)
!9175 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !9001)
!9176 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !9001)
!9177 = !DILocation(line: 786, column: 100, scope: !8934, inlinedAt: !8997)
!9178 = !DILocation(line: 786, column: 109, scope: !8934, inlinedAt: !8997)
!9179 = !DILocation(line: 786, column: 96, scope: !8934, inlinedAt: !8997)
!9180 = !DILocation(line: 786, column: 14, scope: !8934, inlinedAt: !8997)
!9181 = !DILocation(line: 788, column: 64, scope: !9182, inlinedAt: !8997)
!9182 = !DILexicalBlockFile(scope: !8933, file: !1870, discriminator: 1)
!9183 = !DILocation(line: 788, column: 74, scope: !9182, inlinedAt: !8997)
!9184 = !DILocation(line: 788, column: 54, scope: !9182, inlinedAt: !8997)
!9185 = !DILocation(line: 788, column: 52, scope: !9182, inlinedAt: !8997)
!9186 = !DILocation(line: 788, column: 94, scope: !9182, inlinedAt: !8997)
!9187 = !DILocation(line: 788, column: 88, scope: !9182, inlinedAt: !8997)
!9188 = !DILocation(line: 788, column: 86, scope: !9182, inlinedAt: !8997)
!9189 = !DILocation(line: 788, column: 115, scope: !9182, inlinedAt: !8997)
!9190 = !DILocation(line: 788, column: 109, scope: !9182, inlinedAt: !8997)
!9191 = !DILocation(line: 788, column: 107, scope: !9182, inlinedAt: !8997)
!9192 = !DILocation(line: 788, column: 130, scope: !9182, inlinedAt: !8997)
!9193 = !DILocation(line: 788, column: 140, scope: !9182, inlinedAt: !8997)
!9194 = !DILocation(line: 788, column: 144, scope: !9182, inlinedAt: !8997)
!9195 = !DILocation(line: 788, column: 147, scope: !9196, inlinedAt: !8997)
!9196 = !DILexicalBlockFile(scope: !8932, file: !1870, discriminator: 2)
!9197 = !DILocation(line: 788, column: 149, scope: !9196, inlinedAt: !8997)
!9198 = !DILocation(line: 788, column: 130, scope: !9196, inlinedAt: !8997)
!9199 = !DILocation(line: 788, column: 169, scope: !9200, inlinedAt: !8997)
!9200 = !DILexicalBlockFile(scope: !8931, file: !1870, discriminator: 3)
!9201 = !DILocation(line: 788, column: 187, scope: !9200, inlinedAt: !8997)
!9202 = !DILocation(line: 788, column: 199, scope: !9200, inlinedAt: !8997)
!9203 = !DILocation(line: 788, column: 196, scope: !9200, inlinedAt: !8997)
!9204 = !DILocation(line: 788, column: 184, scope: !9200, inlinedAt: !8997)
!9205 = !DILocation(line: 788, column: 168, scope: !9200, inlinedAt: !8997)
!9206 = !DILocation(line: 788, column: 209, scope: !9207, inlinedAt: !8997)
!9207 = !DILexicalBlockFile(scope: !8931, file: !1870, discriminator: 4)
!9208 = !DILocation(line: 788, column: 221, scope: !9207, inlinedAt: !8997)
!9209 = !DILocation(line: 788, column: 218, scope: !9207, inlinedAt: !8997)
!9210 = !DILocation(line: 788, column: 168, scope: !9207, inlinedAt: !8997)
!9211 = !DILocation(line: 788, column: 231, scope: !9212, inlinedAt: !8997)
!9212 = !DILexicalBlockFile(scope: !8931, file: !1870, discriminator: 5)
!9213 = !DILocation(line: 788, column: 168, scope: !9212, inlinedAt: !8997)
!9214 = !DILocation(line: 788, column: 168, scope: !8941, inlinedAt: !8997)
!9215 = !DILocation(line: 788, column: 165, scope: !8941, inlinedAt: !8997)
!9216 = !DILocation(line: 788, column: 303, scope: !8941, inlinedAt: !8997)
!9217 = !DILocation(line: 788, column: 307, scope: !8941, inlinedAt: !8997)
!9218 = !DILocation(line: 788, column: 317, scope: !8941, inlinedAt: !8997)
!9219 = !DILocation(line: 788, column: 326, scope: !8941, inlinedAt: !8997)
!9220 = !DILocation(line: 788, column: 314, scope: !8941, inlinedAt: !8997)
!9221 = !DILocation(line: 788, column: 335, scope: !8941, inlinedAt: !8997)
!9222 = !DILocation(line: 788, column: 259, scope: !8941, inlinedAt: !8997)
!9223 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !8999)
!9224 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !8999)
!9225 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !8999)
!9226 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !8999)
!9227 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !8999)
!9228 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !8999)
!9229 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !8999)
!9230 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !8999)
!9231 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !8999)
!9232 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !8999)
!9233 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !8999)
!9234 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !8999)
!9235 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !8999)
!9236 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !8999)
!9237 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !8999)
!9238 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !8999)
!9239 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !8999)
!9240 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !8999)
!9241 = !DILocation(line: 788, column: 343, scope: !8941, inlinedAt: !8997)
!9242 = !DILocation(line: 788, column: 352, scope: !8941, inlinedAt: !8997)
!9243 = !DILocation(line: 788, column: 339, scope: !8941, inlinedAt: !8997)
!9244 = !DILocation(line: 788, column: 257, scope: !8941, inlinedAt: !8997)
!9245 = !DILocation(line: 788, column: 369, scope: !8941, inlinedAt: !8997)
!9246 = !DILocation(line: 788, column: 368, scope: !8941, inlinedAt: !8997)
!9247 = !DILocation(line: 788, column: 366, scope: !8941, inlinedAt: !8997)
!9248 = !DILocation(line: 788, column: 390, scope: !8941, inlinedAt: !8997)
!9249 = !DILocation(line: 788, column: 400, scope: !8941, inlinedAt: !8997)
!9250 = !DILocation(line: 788, column: 380, scope: !9251, inlinedAt: !8997)
!9251 = !DILexicalBlockFile(scope: !8941, file: !1870, discriminator: 19)
!9252 = !DILocation(line: 788, column: 411, scope: !8941, inlinedAt: !8997)
!9253 = !DILocation(line: 788, column: 409, scope: !8941, inlinedAt: !8997)
!9254 = !DILocation(line: 788, column: 378, scope: !8941, inlinedAt: !8997)
!9255 = !DILocation(line: 788, column: 430, scope: !8941, inlinedAt: !8997)
!9256 = !DILocation(line: 788, column: 424, scope: !8941, inlinedAt: !8997)
!9257 = !DILocation(line: 788, column: 422, scope: !8941, inlinedAt: !8997)
!9258 = !DILocation(line: 788, column: 451, scope: !8941, inlinedAt: !8997)
!9259 = !DILocation(line: 788, column: 445, scope: !8941, inlinedAt: !8997)
!9260 = !DILocation(line: 788, column: 443, scope: !8941, inlinedAt: !8997)
!9261 = !DILocation(line: 788, column: 466, scope: !8941, inlinedAt: !8997)
!9262 = !DILocation(line: 788, column: 476, scope: !8941, inlinedAt: !8997)
!9263 = !DILocation(line: 788, column: 480, scope: !8941, inlinedAt: !8997)
!9264 = !DILocation(line: 788, column: 483, scope: !9265, inlinedAt: !8997)
!9265 = !DILexicalBlockFile(scope: !8930, file: !1870, discriminator: 7)
!9266 = !DILocation(line: 788, column: 485, scope: !9265, inlinedAt: !8997)
!9267 = !DILocation(line: 788, column: 466, scope: !9265, inlinedAt: !8997)
!9268 = !DILocation(line: 788, column: 505, scope: !9269, inlinedAt: !8997)
!9269 = !DILexicalBlockFile(scope: !8929, file: !1870, discriminator: 8)
!9270 = !DILocation(line: 788, column: 523, scope: !9269, inlinedAt: !8997)
!9271 = !DILocation(line: 788, column: 535, scope: !9269, inlinedAt: !8997)
!9272 = !DILocation(line: 788, column: 532, scope: !9269, inlinedAt: !8997)
!9273 = !DILocation(line: 788, column: 520, scope: !9269, inlinedAt: !8997)
!9274 = !DILocation(line: 788, column: 504, scope: !9269, inlinedAt: !8997)
!9275 = !DILocation(line: 788, column: 548, scope: !9276, inlinedAt: !8997)
!9276 = !DILexicalBlockFile(scope: !8929, file: !1870, discriminator: 9)
!9277 = !DILocation(line: 788, column: 560, scope: !9276, inlinedAt: !8997)
!9278 = !DILocation(line: 788, column: 557, scope: !9276, inlinedAt: !8997)
!9279 = !DILocation(line: 788, column: 504, scope: !9276, inlinedAt: !8997)
!9280 = !DILocation(line: 788, column: 573, scope: !9281, inlinedAt: !8997)
!9281 = !DILexicalBlockFile(scope: !8929, file: !1870, discriminator: 10)
!9282 = !DILocation(line: 788, column: 504, scope: !9281, inlinedAt: !8997)
!9283 = !DILocation(line: 788, column: 504, scope: !8928, inlinedAt: !8997)
!9284 = !DILocation(line: 788, column: 501, scope: !8928, inlinedAt: !8997)
!9285 = !DILocation(line: 788, column: 645, scope: !8928, inlinedAt: !8997)
!9286 = !DILocation(line: 788, column: 649, scope: !8928, inlinedAt: !8997)
!9287 = !DILocation(line: 788, column: 659, scope: !8928, inlinedAt: !8997)
!9288 = !DILocation(line: 788, column: 668, scope: !8928, inlinedAt: !8997)
!9289 = !DILocation(line: 788, column: 656, scope: !8928, inlinedAt: !8997)
!9290 = !DILocation(line: 788, column: 677, scope: !8928, inlinedAt: !8997)
!9291 = !DILocation(line: 788, column: 601, scope: !8928, inlinedAt: !8997)
!9292 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !8996)
!9293 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !8996)
!9294 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !8996)
!9295 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !8996)
!9296 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !8996)
!9297 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !8996)
!9298 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !8996)
!9299 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !8996)
!9300 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !8996)
!9301 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !8996)
!9302 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !8996)
!9303 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !8996)
!9304 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !8996)
!9305 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !8996)
!9306 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !8996)
!9307 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !8996)
!9308 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !8996)
!9309 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !8996)
!9310 = !DILocation(line: 788, column: 685, scope: !8928, inlinedAt: !8997)
!9311 = !DILocation(line: 788, column: 694, scope: !8928, inlinedAt: !8997)
!9312 = !DILocation(line: 788, column: 681, scope: !8928, inlinedAt: !8997)
!9313 = !DILocation(line: 788, column: 599, scope: !8928, inlinedAt: !8997)
!9314 = !DILocation(line: 788, column: 711, scope: !8928, inlinedAt: !8997)
!9315 = !DILocation(line: 788, column: 710, scope: !8928, inlinedAt: !8997)
!9316 = !DILocation(line: 788, column: 708, scope: !8928, inlinedAt: !8997)
!9317 = !DILocation(line: 788, column: 732, scope: !8928, inlinedAt: !8997)
!9318 = !DILocation(line: 788, column: 742, scope: !8928, inlinedAt: !8997)
!9319 = !DILocation(line: 788, column: 722, scope: !9320, inlinedAt: !8997)
!9320 = !DILexicalBlockFile(scope: !8928, file: !1870, discriminator: 20)
!9321 = !DILocation(line: 788, column: 753, scope: !8928, inlinedAt: !8997)
!9322 = !DILocation(line: 788, column: 751, scope: !8928, inlinedAt: !8997)
!9323 = !DILocation(line: 788, column: 720, scope: !8928, inlinedAt: !8997)
!9324 = !DILocation(line: 788, column: 772, scope: !8928, inlinedAt: !8997)
!9325 = !DILocation(line: 788, column: 766, scope: !8928, inlinedAt: !8997)
!9326 = !DILocation(line: 788, column: 764, scope: !8928, inlinedAt: !8997)
!9327 = !DILocation(line: 788, column: 793, scope: !8928, inlinedAt: !8997)
!9328 = !DILocation(line: 788, column: 787, scope: !8928, inlinedAt: !8997)
!9329 = !DILocation(line: 788, column: 785, scope: !8928, inlinedAt: !8997)
!9330 = !DILocation(line: 788, column: 804, scope: !8928, inlinedAt: !8997)
!9331 = !DILocation(line: 788, column: 806, scope: !9332, inlinedAt: !8997)
!9332 = !DILexicalBlockFile(scope: !8931, file: !1870, discriminator: 12)
!9333 = !DILocation(line: 788, column: 827, scope: !9334, inlinedAt: !8997)
!9334 = !DILexicalBlockFile(scope: !9335, file: !1870, discriminator: 14)
!9335 = distinct !DILexicalBlock(scope: !8933, file: !1870, line: 788, column: 811)
!9336 = !DILocation(line: 788, column: 822, scope: !9334, inlinedAt: !8997)
!9337 = !DILocation(line: 788, column: 844, scope: !9334, inlinedAt: !8997)
!9338 = !DILocation(line: 788, column: 862, scope: !9334, inlinedAt: !8997)
!9339 = !DILocation(line: 788, column: 874, scope: !9334, inlinedAt: !8997)
!9340 = !DILocation(line: 788, column: 871, scope: !9334, inlinedAt: !8997)
!9341 = !DILocation(line: 788, column: 859, scope: !9334, inlinedAt: !8997)
!9342 = !DILocation(line: 788, column: 843, scope: !9334, inlinedAt: !8997)
!9343 = !DILocation(line: 788, column: 881, scope: !9344, inlinedAt: !8997)
!9344 = !DILexicalBlockFile(scope: !9335, file: !1870, discriminator: 15)
!9345 = !DILocation(line: 788, column: 893, scope: !9344, inlinedAt: !8997)
!9346 = !DILocation(line: 788, column: 890, scope: !9344, inlinedAt: !8997)
!9347 = !DILocation(line: 788, column: 843, scope: !9344, inlinedAt: !8997)
!9348 = !DILocation(line: 788, column: 900, scope: !9349, inlinedAt: !8997)
!9349 = !DILexicalBlockFile(scope: !9335, file: !1870, discriminator: 16)
!9350 = !DILocation(line: 788, column: 843, scope: !9349, inlinedAt: !8997)
!9351 = !DILocation(line: 788, column: 843, scope: !9352, inlinedAt: !8997)
!9352 = !DILexicalBlockFile(scope: !9335, file: !1870, discriminator: 17)
!9353 = !DILocation(line: 788, column: 840, scope: !9352, inlinedAt: !8997)
!9354 = !DILocation(line: 790, column: 18, scope: !8934, inlinedAt: !8997)
!9355 = !DILocation(line: 790, column: 6, scope: !8934, inlinedAt: !8997)
!9356 = !DILocation(line: 790, column: 10, scope: !8934, inlinedAt: !8997)
!9357 = !DILocation(line: 790, column: 16, scope: !8934, inlinedAt: !8997)
!9358 = !DILocation(line: 792, column: 12, scope: !8934, inlinedAt: !8997)
!9359 = !DILocation(line: 891, column: 15, scope: !8976)
!9360 = !DILocation(line: 893, column: 18, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !8976, file: !1665, line: 893, column: 17)
!9362 = !DILocation(line: 893, column: 17, scope: !8976)
!9363 = !DILocation(line: 895, column: 30, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9361, file: !1665, line: 893, column: 21)
!9365 = !DILocation(line: 895, column: 37, scope: !9364)
!9366 = !DILocation(line: 895, column: 17, scope: !9364)
!9367 = !DILocation(line: 895, column: 20, scope: !9364)
!9368 = !DILocation(line: 895, column: 41, scope: !9364)
!9369 = !DILocation(line: 894, column: 30, scope: !9364)
!9370 = !DILocation(line: 894, column: 17, scope: !9364)
!9371 = !DILocation(line: 894, column: 20, scope: !9364)
!9372 = !DILocation(line: 894, column: 40, scope: !9364)
!9373 = !DILocation(line: 896, column: 25, scope: !9364)
!9374 = !DILocation(line: 897, column: 17, scope: !9364)
!9375 = !DILocation(line: 900, column: 33, scope: !8976)
!9376 = !DILocation(line: 900, column: 23, scope: !8976)
!9377 = !DILocation(line: 900, column: 21, scope: !8976)
!9378 = !DILocation(line: 902, column: 13, scope: !8976)
!9379 = distinct !{!9379, !9378}
!9380 = !DILocation(line: 902, column: 118, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !9382, file: !1665, discriminator: 1)
!9382 = distinct !DILexicalBlock(scope: !8976, file: !1665, line: 902, column: 16)
!9383 = !DILocation(line: 904, column: 17, scope: !8975)
!9384 = !DILocation(line: 904, column: 19, scope: !8975)
!9385 = !DILocation(line: 904, column: 17, scope: !8976)
!9386 = !DILocation(line: 905, column: 21, scope: !8988)
!9387 = !DILocation(line: 905, column: 23, scope: !8988)
!9388 = !DILocation(line: 905, column: 19, scope: !8988)
!9389 = !DILocation(line: 906, column: 21, scope: !8988)
!9390 = !DILocation(line: 906, column: 23, scope: !8988)
!9391 = !DILocation(line: 906, column: 19, scope: !8988)
!9392 = !DILocation(line: 907, column: 21, scope: !8993)
!9393 = !DILocation(line: 907, column: 23, scope: !8993)
!9394 = !DILocation(line: 907, column: 21, scope: !8988)
!9395 = !DILocation(line: 908, column: 37, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !8993, file: !1665, line: 907, column: 29)
!9397 = !DILocation(line: 908, column: 40, scope: !9396)
!9398 = !DILocation(line: 908, column: 26, scope: !9396)
!9399 = !DILocation(line: 908, column: 25, scope: !9396)
!9400 = !DILocation(line: 908, column: 23, scope: !9396)
!9401 = !DILocation(line: 908, column: 95, scope: !9396)
!9402 = !DILocation(line: 908, column: 76, scope: !9396)
!9403 = !DILocation(line: 908, column: 107, scope: !9396)
!9404 = !DILocation(line: 908, column: 105, scope: !9396)
!9405 = !DILocation(line: 908, column: 74, scope: !9396)
!9406 = !DILocation(line: 908, column: 112, scope: !9396)
!9407 = !DILocation(line: 908, column: 110, scope: !9396)
!9408 = !DILocation(line: 908, column: 117, scope: !9396)
!9409 = !DILocation(line: 908, column: 115, scope: !9396)
!9410 = !DILocation(line: 908, column: 47, scope: !9396)
!9411 = !DILocation(line: 908, column: 50, scope: !9396)
!9412 = !DILocation(line: 908, column: 62, scope: !9396)
!9413 = !DILocation(line: 908, column: 60, scope: !9396)
!9414 = !DILocation(line: 908, column: 71, scope: !9396)
!9415 = !DILocation(line: 909, column: 17, scope: !9396)
!9416 = !DILocation(line: 910, column: 37, scope: !8992)
!9417 = !DILocation(line: 910, column: 40, scope: !8992)
!9418 = !DILocation(line: 910, column: 44, scope: !8992)
!9419 = !DILocation(line: 910, column: 26, scope: !8992)
!9420 = !DILocation(line: 414, column: 12, scope: !8967, inlinedAt: !8991)
!9421 = !DILocation(line: 414, column: 25, scope: !9422, inlinedAt: !8991)
!9422 = !DILexicalBlockFile(scope: !8967, file: !1870, discriminator: 1)
!9423 = !DILocation(line: 414, column: 28, scope: !9422, inlinedAt: !8991)
!9424 = !DILocation(line: 414, column: 16, scope: !9422, inlinedAt: !8991)
!9425 = !DILocation(line: 414, column: 12, scope: !9422, inlinedAt: !8991)
!9426 = !DILocation(line: 414, column: 12, scope: !9427, inlinedAt: !8991)
!9427 = !DILexicalBlockFile(scope: !8967, file: !1870, discriminator: 2)
!9428 = !DILocation(line: 414, column: 12, scope: !9429, inlinedAt: !8991)
!9429 = !DILexicalBlockFile(scope: !8967, file: !1870, discriminator: 3)
!9430 = !DILocation(line: 910, column: 23, scope: !8992)
!9431 = !DILocation(line: 911, column: 36, scope: !8992)
!9432 = !DILocation(line: 911, column: 39, scope: !8992)
!9433 = !DILocation(line: 911, column: 25, scope: !8992)
!9434 = !DILocation(line: 911, column: 23, scope: !8992)
!9435 = !DILocation(line: 912, column: 36, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !8992, file: !1665, line: 912, column: 25)
!9437 = !DILocation(line: 912, column: 39, scope: !9436)
!9438 = !DILocation(line: 912, column: 25, scope: !9436)
!9439 = !DILocation(line: 912, column: 25, scope: !8992)
!9440 = !DILocation(line: 913, column: 30, scope: !9436)
!9441 = !DILocation(line: 913, column: 29, scope: !9436)
!9442 = !DILocation(line: 913, column: 27, scope: !9436)
!9443 = !DILocation(line: 913, column: 25, scope: !9436)
!9444 = !DILocation(line: 914, column: 45, scope: !8992)
!9445 = !DILocation(line: 914, column: 34, scope: !8992)
!9446 = !DILocation(line: 914, column: 21, scope: !8992)
!9447 = !DILocation(line: 914, column: 24, scope: !8992)
!9448 = !DILocation(line: 914, column: 43, scope: !8992)
!9449 = !DILocation(line: 916, column: 21, scope: !8987)
!9450 = !DILocation(line: 916, column: 23, scope: !8987)
!9451 = !DILocation(line: 916, column: 21, scope: !8988)
!9452 = !DILocation(line: 917, column: 37, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !8987, file: !1665, line: 916, column: 29)
!9454 = !DILocation(line: 917, column: 40, scope: !9453)
!9455 = !DILocation(line: 917, column: 26, scope: !9453)
!9456 = !DILocation(line: 917, column: 25, scope: !9453)
!9457 = !DILocation(line: 917, column: 23, scope: !9453)
!9458 = !DILocation(line: 917, column: 99, scope: !9453)
!9459 = !DILocation(line: 917, column: 80, scope: !9453)
!9460 = !DILocation(line: 917, column: 111, scope: !9453)
!9461 = !DILocation(line: 917, column: 109, scope: !9453)
!9462 = !DILocation(line: 917, column: 78, scope: !9453)
!9463 = !DILocation(line: 917, column: 116, scope: !9453)
!9464 = !DILocation(line: 917, column: 114, scope: !9453)
!9465 = !DILocation(line: 917, column: 121, scope: !9453)
!9466 = !DILocation(line: 917, column: 119, scope: !9453)
!9467 = !DILocation(line: 917, column: 47, scope: !9453)
!9468 = !DILocation(line: 917, column: 50, scope: !9453)
!9469 = !DILocation(line: 917, column: 62, scope: !9453)
!9470 = !DILocation(line: 917, column: 60, scope: !9453)
!9471 = !DILocation(line: 917, column: 70, scope: !9453)
!9472 = !DILocation(line: 917, column: 75, scope: !9453)
!9473 = !DILocation(line: 918, column: 17, scope: !9453)
!9474 = !DILocation(line: 919, column: 37, scope: !8986)
!9475 = !DILocation(line: 919, column: 40, scope: !8986)
!9476 = !DILocation(line: 919, column: 44, scope: !8986)
!9477 = !DILocation(line: 919, column: 26, scope: !8986)
!9478 = !DILocation(line: 414, column: 12, scope: !8967, inlinedAt: !8985)
!9479 = !DILocation(line: 414, column: 25, scope: !9422, inlinedAt: !8985)
!9480 = !DILocation(line: 414, column: 28, scope: !9422, inlinedAt: !8985)
!9481 = !DILocation(line: 414, column: 16, scope: !9422, inlinedAt: !8985)
!9482 = !DILocation(line: 414, column: 12, scope: !9422, inlinedAt: !8985)
!9483 = !DILocation(line: 414, column: 12, scope: !9427, inlinedAt: !8985)
!9484 = !DILocation(line: 414, column: 12, scope: !9429, inlinedAt: !8985)
!9485 = !DILocation(line: 919, column: 23, scope: !8986)
!9486 = !DILocation(line: 920, column: 36, scope: !8986)
!9487 = !DILocation(line: 920, column: 39, scope: !8986)
!9488 = !DILocation(line: 920, column: 25, scope: !8986)
!9489 = !DILocation(line: 920, column: 23, scope: !8986)
!9490 = !DILocation(line: 921, column: 36, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !8986, file: !1665, line: 921, column: 25)
!9492 = !DILocation(line: 921, column: 39, scope: !9491)
!9493 = !DILocation(line: 921, column: 25, scope: !9491)
!9494 = !DILocation(line: 921, column: 25, scope: !8986)
!9495 = !DILocation(line: 922, column: 30, scope: !9491)
!9496 = !DILocation(line: 922, column: 29, scope: !9491)
!9497 = !DILocation(line: 922, column: 27, scope: !9491)
!9498 = !DILocation(line: 922, column: 25, scope: !9491)
!9499 = !DILocation(line: 923, column: 47, scope: !8986)
!9500 = !DILocation(line: 923, column: 34, scope: !8986)
!9501 = !DILocation(line: 923, column: 41, scope: !8986)
!9502 = !DILocation(line: 923, column: 21, scope: !8986)
!9503 = !DILocation(line: 923, column: 24, scope: !8986)
!9504 = !DILocation(line: 923, column: 45, scope: !8986)
!9505 = !DILocation(line: 925, column: 13, scope: !8988)
!9506 = !DILocation(line: 926, column: 21, scope: !8974)
!9507 = !DILocation(line: 926, column: 23, scope: !8974)
!9508 = !DILocation(line: 926, column: 19, scope: !8974)
!9509 = !DILocation(line: 927, column: 21, scope: !8974)
!9510 = !DILocation(line: 927, column: 23, scope: !8974)
!9511 = !DILocation(line: 927, column: 19, scope: !8974)
!9512 = !DILocation(line: 928, column: 22, scope: !8974)
!9513 = !DILocation(line: 928, column: 19, scope: !8974)
!9514 = !DILocation(line: 929, column: 21, scope: !8973)
!9515 = !DILocation(line: 929, column: 23, scope: !8973)
!9516 = !DILocation(line: 929, column: 21, scope: !8974)
!9517 = !DILocation(line: 930, column: 37, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !8973, file: !1665, line: 929, column: 29)
!9519 = !DILocation(line: 930, column: 40, scope: !9518)
!9520 = !DILocation(line: 930, column: 26, scope: !9518)
!9521 = !DILocation(line: 930, column: 25, scope: !9518)
!9522 = !DILocation(line: 930, column: 23, scope: !9518)
!9523 = !DILocation(line: 930, column: 101, scope: !9518)
!9524 = !DILocation(line: 930, column: 82, scope: !9518)
!9525 = !DILocation(line: 930, column: 113, scope: !9518)
!9526 = !DILocation(line: 930, column: 111, scope: !9518)
!9527 = !DILocation(line: 930, column: 80, scope: !9518)
!9528 = !DILocation(line: 930, column: 118, scope: !9518)
!9529 = !DILocation(line: 930, column: 116, scope: !9518)
!9530 = !DILocation(line: 930, column: 123, scope: !9518)
!9531 = !DILocation(line: 930, column: 121, scope: !9518)
!9532 = !DILocation(line: 930, column: 47, scope: !9518)
!9533 = !DILocation(line: 930, column: 50, scope: !9518)
!9534 = !DILocation(line: 930, column: 62, scope: !9518)
!9535 = !DILocation(line: 930, column: 60, scope: !9518)
!9536 = !DILocation(line: 930, column: 74, scope: !9518)
!9537 = !DILocation(line: 930, column: 73, scope: !9518)
!9538 = !DILocation(line: 930, column: 72, scope: !9518)
!9539 = !DILocation(line: 930, column: 70, scope: !9518)
!9540 = !DILocation(line: 930, column: 77, scope: !9518)
!9541 = !DILocation(line: 931, column: 17, scope: !9518)
!9542 = !DILocation(line: 932, column: 37, scope: !8972)
!9543 = !DILocation(line: 932, column: 40, scope: !8972)
!9544 = !DILocation(line: 932, column: 44, scope: !8972)
!9545 = !DILocation(line: 932, column: 26, scope: !8972)
!9546 = !DILocation(line: 414, column: 12, scope: !8967, inlinedAt: !8971)
!9547 = !DILocation(line: 414, column: 25, scope: !9422, inlinedAt: !8971)
!9548 = !DILocation(line: 414, column: 28, scope: !9422, inlinedAt: !8971)
!9549 = !DILocation(line: 414, column: 16, scope: !9422, inlinedAt: !8971)
!9550 = !DILocation(line: 414, column: 12, scope: !9422, inlinedAt: !8971)
!9551 = !DILocation(line: 414, column: 12, scope: !9427, inlinedAt: !8971)
!9552 = !DILocation(line: 414, column: 12, scope: !9429, inlinedAt: !8971)
!9553 = !DILocation(line: 932, column: 23, scope: !8972)
!9554 = !DILocation(line: 933, column: 36, scope: !8972)
!9555 = !DILocation(line: 933, column: 39, scope: !8972)
!9556 = !DILocation(line: 933, column: 25, scope: !8972)
!9557 = !DILocation(line: 933, column: 23, scope: !8972)
!9558 = !DILocation(line: 934, column: 36, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !8972, file: !1665, line: 934, column: 25)
!9560 = !DILocation(line: 934, column: 39, scope: !9559)
!9561 = !DILocation(line: 934, column: 25, scope: !9559)
!9562 = !DILocation(line: 934, column: 25, scope: !8972)
!9563 = !DILocation(line: 935, column: 30, scope: !9559)
!9564 = !DILocation(line: 935, column: 29, scope: !9559)
!9565 = !DILocation(line: 935, column: 27, scope: !9559)
!9566 = !DILocation(line: 935, column: 25, scope: !9559)
!9567 = !DILocation(line: 936, column: 49, scope: !8972)
!9568 = !DILocation(line: 936, column: 34, scope: !8972)
!9569 = !DILocation(line: 936, column: 44, scope: !8972)
!9570 = !DILocation(line: 936, column: 43, scope: !8972)
!9571 = !DILocation(line: 936, column: 42, scope: !8972)
!9572 = !DILocation(line: 936, column: 41, scope: !8972)
!9573 = !DILocation(line: 936, column: 21, scope: !8972)
!9574 = !DILocation(line: 936, column: 24, scope: !8972)
!9575 = !DILocation(line: 936, column: 47, scope: !8972)
!9576 = !DILocation(line: 938, column: 30, scope: !8974)
!9577 = !DILocation(line: 938, column: 41, scope: !8974)
!9578 = !DILocation(line: 938, column: 40, scope: !8974)
!9579 = !DILocation(line: 938, column: 38, scope: !8974)
!9580 = !DILocation(line: 938, column: 17, scope: !8974)
!9581 = !DILocation(line: 938, column: 20, scope: !8974)
!9582 = !DILocation(line: 938, column: 44, scope: !8974)
!9583 = !DILocation(line: 940, column: 21, scope: !8976)
!9584 = !DILocation(line: 941, column: 9, scope: !8976)
!9585 = !DILocation(line: 881, column: 24, scope: !9586)
!9586 = !DILexicalBlockFile(scope: !8977, file: !1665, discriminator: 2)
!9587 = !DILocation(line: 881, column: 9, scope: !9586)
!9588 = distinct !{!9588, !9110}
!9589 = !DILocation(line: 942, column: 5, scope: !8979)
!9590 = !DILocation(line: 863, column: 25, scope: !9591)
!9591 = !DILexicalBlockFile(scope: !8980, file: !1665, discriminator: 2)
!9592 = !DILocation(line: 863, column: 5, scope: !9591)
!9593 = distinct !{!9593, !9594}
!9594 = !DILocation(line: 863, column: 5, scope: !1844)
!9595 = !DILocation(line: 945, column: 26, scope: !1844)
!9596 = !DILocation(line: 945, column: 29, scope: !1844)
!9597 = !DILocation(line: 945, column: 12, scope: !1844)
!9598 = !DILocation(line: 945, column: 9, scope: !1844)
!9599 = !DILocation(line: 946, column: 14, scope: !1844)
!9600 = !DILocation(line: 947, column: 5, scope: !1844)
!9601 = !DILocation(line: 947, column: 12, scope: !9045)
!9602 = !DILocation(line: 947, column: 20, scope: !9045)
!9603 = !DILocation(line: 947, column: 5, scope: !9045)
!9604 = !DILocalVariable(name: "pos", scope: !8938, file: !1665, line: 948, type: !891)
!9605 = !DILocation(line: 948, column: 13, scope: !8938)
!9606 = !DILocalVariable(name: "code", scope: !8938, file: !1665, line: 948, type: !891)
!9607 = !DILocation(line: 948, column: 18, scope: !8938)
!9608 = !DILocation(line: 949, column: 31, scope: !8938)
!9609 = !DILocation(line: 949, column: 34, scope: !8938)
!9610 = !DILocation(line: 949, column: 15, scope: !8938)
!9611 = !DILocation(line: 949, column: 13, scope: !8938)
!9612 = !DILocation(line: 950, column: 13, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !8938, file: !1665, line: 950, column: 13)
!9614 = !DILocation(line: 950, column: 20, scope: !9613)
!9615 = !DILocation(line: 950, column: 17, scope: !9613)
!9616 = !DILocation(line: 950, column: 13, scope: !8938)
!9617 = !DILocation(line: 951, column: 17, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !1665, line: 951, column: 17)
!9619 = distinct !DILexicalBlock(scope: !9613, file: !1665, line: 950, column: 29)
!9620 = !DILocation(line: 951, column: 23, scope: !9618)
!9621 = !DILocation(line: 951, column: 21, scope: !9618)
!9622 = !DILocation(line: 951, column: 32, scope: !9618)
!9623 = !DILocation(line: 951, column: 35, scope: !9624)
!9624 = !DILexicalBlockFile(scope: !9618, file: !1665, discriminator: 1)
!9625 = !DILocation(line: 951, column: 17, scope: !9624)
!9626 = !DILocation(line: 954, column: 25, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9618, file: !1665, line: 951, column: 45)
!9628 = !DILocation(line: 955, column: 33, scope: !9627)
!9629 = !DILocation(line: 955, column: 36, scope: !9627)
!9630 = !DILocation(line: 955, column: 40, scope: !9627)
!9631 = !DILocation(line: 955, column: 51, scope: !9627)
!9632 = !DILocation(line: 955, column: 49, scope: !9627)
!9633 = !DILocation(line: 955, column: 17, scope: !9627)
!9634 = !DILocation(line: 956, column: 24, scope: !9627)
!9635 = !DILocation(line: 956, column: 27, scope: !9627)
!9636 = !DILocation(line: 956, column: 77, scope: !9627)
!9637 = !DILocation(line: 956, column: 88, scope: !9627)
!9638 = !DILocation(line: 956, column: 86, scope: !9627)
!9639 = !DILocation(line: 956, column: 93, scope: !9627)
!9640 = !DILocation(line: 956, column: 101, scope: !9627)
!9641 = !DILocation(line: 956, column: 100, scope: !9627)
!9642 = !DILocation(line: 956, column: 106, scope: !9627)
!9643 = !DILocation(line: 956, column: 115, scope: !9627)
!9644 = !DILocation(line: 956, column: 114, scope: !9627)
!9645 = !DILocation(line: 956, column: 17, scope: !9627)
!9646 = !DILocation(line: 957, column: 20, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9627, file: !1665, line: 957, column: 20)
!9648 = !DILocation(line: 957, column: 23, scope: !9647)
!9649 = !DILocation(line: 957, column: 39, scope: !9647)
!9650 = !DILocation(line: 957, column: 20, scope: !9627)
!9651 = !DILocation(line: 958, column: 28, scope: !9647)
!9652 = !DILocation(line: 958, column: 21, scope: !9647)
!9653 = !DILocation(line: 959, column: 17, scope: !9627)
!9654 = !DILocation(line: 961, column: 27, scope: !9619)
!9655 = !DILocation(line: 961, column: 13, scope: !9619)
!9656 = !DILocation(line: 962, column: 17, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9619, file: !1665, line: 962, column: 17)
!9658 = !DILocation(line: 962, column: 24, scope: !9657)
!9659 = !DILocation(line: 962, column: 21, scope: !9657)
!9660 = !DILocation(line: 962, column: 17, scope: !9619)
!9661 = !DILocation(line: 963, column: 17, scope: !9657)
!9662 = !DILocation(line: 964, column: 9, scope: !9619)
!9663 = !DILocation(line: 965, column: 20, scope: !8938)
!9664 = !DILocation(line: 965, column: 18, scope: !8938)
!9665 = !DILocation(line: 967, column: 26, scope: !8938)
!9666 = !DILocation(line: 967, column: 29, scope: !8938)
!9667 = !DILocation(line: 967, column: 33, scope: !8938)
!9668 = !DILocation(line: 967, column: 38, scope: !8938)
!9669 = !DILocation(line: 967, column: 45, scope: !8938)
!9670 = !DILocation(line: 967, column: 50, scope: !8938)
!9671 = !DILocation(line: 967, column: 16, scope: !8938)
!9672 = !DILocation(line: 785, column: 30, scope: !8934, inlinedAt: !8937)
!9673 = !DILocation(line: 785, column: 34, scope: !8934, inlinedAt: !8937)
!9674 = !DILocation(line: 785, column: 118, scope: !8934, inlinedAt: !8937)
!9675 = !DILocation(line: 785, column: 122, scope: !8934, inlinedAt: !8937)
!9676 = !DILocation(line: 786, column: 60, scope: !8934, inlinedAt: !8937)
!9677 = !DILocation(line: 786, column: 64, scope: !8934, inlinedAt: !8937)
!9678 = !DILocation(line: 786, column: 74, scope: !8934, inlinedAt: !8937)
!9679 = !DILocation(line: 786, column: 83, scope: !8934, inlinedAt: !8937)
!9680 = !DILocation(line: 786, column: 71, scope: !8934, inlinedAt: !8937)
!9681 = !DILocation(line: 786, column: 92, scope: !8934, inlinedAt: !8937)
!9682 = !DILocation(line: 786, column: 16, scope: !8934, inlinedAt: !8937)
!9683 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !8943)
!9684 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !8943)
!9685 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !8943)
!9686 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !8943)
!9687 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !8943)
!9688 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !8943)
!9689 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !8943)
!9690 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !8943)
!9691 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !8943)
!9692 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !8943)
!9693 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !8943)
!9694 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !8943)
!9695 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !8943)
!9696 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !8943)
!9697 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !8943)
!9698 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !8943)
!9699 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !8943)
!9700 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !8943)
!9701 = !DILocation(line: 786, column: 100, scope: !8934, inlinedAt: !8937)
!9702 = !DILocation(line: 786, column: 109, scope: !8934, inlinedAt: !8937)
!9703 = !DILocation(line: 786, column: 96, scope: !8934, inlinedAt: !8937)
!9704 = !DILocation(line: 786, column: 14, scope: !8934, inlinedAt: !8937)
!9705 = !DILocation(line: 788, column: 64, scope: !9182, inlinedAt: !8937)
!9706 = !DILocation(line: 788, column: 74, scope: !9182, inlinedAt: !8937)
!9707 = !DILocation(line: 788, column: 54, scope: !9182, inlinedAt: !8937)
!9708 = !DILocation(line: 788, column: 52, scope: !9182, inlinedAt: !8937)
!9709 = !DILocation(line: 788, column: 94, scope: !9182, inlinedAt: !8937)
!9710 = !DILocation(line: 788, column: 88, scope: !9182, inlinedAt: !8937)
!9711 = !DILocation(line: 788, column: 86, scope: !9182, inlinedAt: !8937)
!9712 = !DILocation(line: 788, column: 115, scope: !9182, inlinedAt: !8937)
!9713 = !DILocation(line: 788, column: 109, scope: !9182, inlinedAt: !8937)
!9714 = !DILocation(line: 788, column: 107, scope: !9182, inlinedAt: !8937)
!9715 = !DILocation(line: 788, column: 130, scope: !9182, inlinedAt: !8937)
!9716 = !DILocation(line: 788, column: 140, scope: !9182, inlinedAt: !8937)
!9717 = !DILocation(line: 788, column: 144, scope: !9182, inlinedAt: !8937)
!9718 = !DILocation(line: 788, column: 147, scope: !9196, inlinedAt: !8937)
!9719 = !DILocation(line: 788, column: 149, scope: !9196, inlinedAt: !8937)
!9720 = !DILocation(line: 788, column: 130, scope: !9196, inlinedAt: !8937)
!9721 = !DILocation(line: 788, column: 169, scope: !9200, inlinedAt: !8937)
!9722 = !DILocation(line: 788, column: 187, scope: !9200, inlinedAt: !8937)
!9723 = !DILocation(line: 788, column: 199, scope: !9200, inlinedAt: !8937)
!9724 = !DILocation(line: 788, column: 196, scope: !9200, inlinedAt: !8937)
!9725 = !DILocation(line: 788, column: 184, scope: !9200, inlinedAt: !8937)
!9726 = !DILocation(line: 788, column: 168, scope: !9200, inlinedAt: !8937)
!9727 = !DILocation(line: 788, column: 209, scope: !9207, inlinedAt: !8937)
!9728 = !DILocation(line: 788, column: 221, scope: !9207, inlinedAt: !8937)
!9729 = !DILocation(line: 788, column: 218, scope: !9207, inlinedAt: !8937)
!9730 = !DILocation(line: 788, column: 168, scope: !9207, inlinedAt: !8937)
!9731 = !DILocation(line: 788, column: 231, scope: !9212, inlinedAt: !8937)
!9732 = !DILocation(line: 788, column: 168, scope: !9212, inlinedAt: !8937)
!9733 = !DILocation(line: 788, column: 168, scope: !8941, inlinedAt: !8937)
!9734 = !DILocation(line: 788, column: 165, scope: !8941, inlinedAt: !8937)
!9735 = !DILocation(line: 788, column: 303, scope: !8941, inlinedAt: !8937)
!9736 = !DILocation(line: 788, column: 307, scope: !8941, inlinedAt: !8937)
!9737 = !DILocation(line: 788, column: 317, scope: !8941, inlinedAt: !8937)
!9738 = !DILocation(line: 788, column: 326, scope: !8941, inlinedAt: !8937)
!9739 = !DILocation(line: 788, column: 314, scope: !8941, inlinedAt: !8937)
!9740 = !DILocation(line: 788, column: 335, scope: !8941, inlinedAt: !8937)
!9741 = !DILocation(line: 788, column: 259, scope: !8941, inlinedAt: !8937)
!9742 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !8940)
!9743 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !8940)
!9744 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !8940)
!9745 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !8940)
!9746 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !8940)
!9747 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !8940)
!9748 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !8940)
!9749 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !8940)
!9750 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !8940)
!9751 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !8940)
!9752 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !8940)
!9753 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !8940)
!9754 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !8940)
!9755 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !8940)
!9756 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !8940)
!9757 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !8940)
!9758 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !8940)
!9759 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !8940)
!9760 = !DILocation(line: 788, column: 343, scope: !8941, inlinedAt: !8937)
!9761 = !DILocation(line: 788, column: 352, scope: !8941, inlinedAt: !8937)
!9762 = !DILocation(line: 788, column: 339, scope: !8941, inlinedAt: !8937)
!9763 = !DILocation(line: 788, column: 257, scope: !8941, inlinedAt: !8937)
!9764 = !DILocation(line: 788, column: 369, scope: !8941, inlinedAt: !8937)
!9765 = !DILocation(line: 788, column: 368, scope: !8941, inlinedAt: !8937)
!9766 = !DILocation(line: 788, column: 366, scope: !8941, inlinedAt: !8937)
!9767 = !DILocation(line: 788, column: 390, scope: !8941, inlinedAt: !8937)
!9768 = !DILocation(line: 788, column: 400, scope: !8941, inlinedAt: !8937)
!9769 = !DILocation(line: 788, column: 380, scope: !9251, inlinedAt: !8937)
!9770 = !DILocation(line: 788, column: 411, scope: !8941, inlinedAt: !8937)
!9771 = !DILocation(line: 788, column: 409, scope: !8941, inlinedAt: !8937)
!9772 = !DILocation(line: 788, column: 378, scope: !8941, inlinedAt: !8937)
!9773 = !DILocation(line: 788, column: 430, scope: !8941, inlinedAt: !8937)
!9774 = !DILocation(line: 788, column: 424, scope: !8941, inlinedAt: !8937)
!9775 = !DILocation(line: 788, column: 422, scope: !8941, inlinedAt: !8937)
!9776 = !DILocation(line: 788, column: 451, scope: !8941, inlinedAt: !8937)
!9777 = !DILocation(line: 788, column: 445, scope: !8941, inlinedAt: !8937)
!9778 = !DILocation(line: 788, column: 443, scope: !8941, inlinedAt: !8937)
!9779 = !DILocation(line: 788, column: 466, scope: !8941, inlinedAt: !8937)
!9780 = !DILocation(line: 788, column: 476, scope: !8941, inlinedAt: !8937)
!9781 = !DILocation(line: 788, column: 480, scope: !8941, inlinedAt: !8937)
!9782 = !DILocation(line: 788, column: 483, scope: !9265, inlinedAt: !8937)
!9783 = !DILocation(line: 788, column: 485, scope: !9265, inlinedAt: !8937)
!9784 = !DILocation(line: 788, column: 466, scope: !9265, inlinedAt: !8937)
!9785 = !DILocation(line: 788, column: 505, scope: !9269, inlinedAt: !8937)
!9786 = !DILocation(line: 788, column: 523, scope: !9269, inlinedAt: !8937)
!9787 = !DILocation(line: 788, column: 535, scope: !9269, inlinedAt: !8937)
!9788 = !DILocation(line: 788, column: 532, scope: !9269, inlinedAt: !8937)
!9789 = !DILocation(line: 788, column: 520, scope: !9269, inlinedAt: !8937)
!9790 = !DILocation(line: 788, column: 504, scope: !9269, inlinedAt: !8937)
!9791 = !DILocation(line: 788, column: 548, scope: !9276, inlinedAt: !8937)
!9792 = !DILocation(line: 788, column: 560, scope: !9276, inlinedAt: !8937)
!9793 = !DILocation(line: 788, column: 557, scope: !9276, inlinedAt: !8937)
!9794 = !DILocation(line: 788, column: 504, scope: !9276, inlinedAt: !8937)
!9795 = !DILocation(line: 788, column: 573, scope: !9281, inlinedAt: !8937)
!9796 = !DILocation(line: 788, column: 504, scope: !9281, inlinedAt: !8937)
!9797 = !DILocation(line: 788, column: 504, scope: !8928, inlinedAt: !8937)
!9798 = !DILocation(line: 788, column: 501, scope: !8928, inlinedAt: !8937)
!9799 = !DILocation(line: 788, column: 645, scope: !8928, inlinedAt: !8937)
!9800 = !DILocation(line: 788, column: 649, scope: !8928, inlinedAt: !8937)
!9801 = !DILocation(line: 788, column: 659, scope: !8928, inlinedAt: !8937)
!9802 = !DILocation(line: 788, column: 668, scope: !8928, inlinedAt: !8937)
!9803 = !DILocation(line: 788, column: 656, scope: !8928, inlinedAt: !8937)
!9804 = !DILocation(line: 788, column: 677, scope: !8928, inlinedAt: !8937)
!9805 = !DILocation(line: 788, column: 601, scope: !8928, inlinedAt: !8937)
!9806 = !DILocation(line: 68, column: 16, scope: !2071, inlinedAt: !8927)
!9807 = !DILocation(line: 68, column: 19, scope: !2071, inlinedAt: !8927)
!9808 = !DILocation(line: 68, column: 24, scope: !2071, inlinedAt: !8927)
!9809 = !DILocation(line: 68, column: 38, scope: !2071, inlinedAt: !8927)
!9810 = !DILocation(line: 68, column: 41, scope: !2071, inlinedAt: !8927)
!9811 = !DILocation(line: 68, column: 46, scope: !2071, inlinedAt: !8927)
!9812 = !DILocation(line: 68, column: 34, scope: !2071, inlinedAt: !8927)
!9813 = !DILocation(line: 68, column: 57, scope: !2071, inlinedAt: !8927)
!9814 = !DILocation(line: 68, column: 69, scope: !2071, inlinedAt: !8927)
!9815 = !DILocation(line: 68, column: 72, scope: !2071, inlinedAt: !8927)
!9816 = !DILocation(line: 68, column: 79, scope: !2071, inlinedAt: !8927)
!9817 = !DILocation(line: 68, column: 84, scope: !2071, inlinedAt: !8927)
!9818 = !DILocation(line: 68, column: 99, scope: !2071, inlinedAt: !8927)
!9819 = !DILocation(line: 68, column: 102, scope: !2071, inlinedAt: !8927)
!9820 = !DILocation(line: 68, column: 109, scope: !2071, inlinedAt: !8927)
!9821 = !DILocation(line: 68, column: 114, scope: !2071, inlinedAt: !8927)
!9822 = !DILocation(line: 68, column: 94, scope: !2071, inlinedAt: !8927)
!9823 = !DILocation(line: 68, column: 63, scope: !2071, inlinedAt: !8927)
!9824 = !DILocation(line: 788, column: 685, scope: !8928, inlinedAt: !8937)
!9825 = !DILocation(line: 788, column: 694, scope: !8928, inlinedAt: !8937)
!9826 = !DILocation(line: 788, column: 681, scope: !8928, inlinedAt: !8937)
!9827 = !DILocation(line: 788, column: 599, scope: !8928, inlinedAt: !8937)
!9828 = !DILocation(line: 788, column: 711, scope: !8928, inlinedAt: !8937)
!9829 = !DILocation(line: 788, column: 710, scope: !8928, inlinedAt: !8937)
!9830 = !DILocation(line: 788, column: 708, scope: !8928, inlinedAt: !8937)
!9831 = !DILocation(line: 788, column: 732, scope: !8928, inlinedAt: !8937)
!9832 = !DILocation(line: 788, column: 742, scope: !8928, inlinedAt: !8937)
!9833 = !DILocation(line: 788, column: 722, scope: !9320, inlinedAt: !8937)
!9834 = !DILocation(line: 788, column: 753, scope: !8928, inlinedAt: !8937)
!9835 = !DILocation(line: 788, column: 751, scope: !8928, inlinedAt: !8937)
!9836 = !DILocation(line: 788, column: 720, scope: !8928, inlinedAt: !8937)
!9837 = !DILocation(line: 788, column: 772, scope: !8928, inlinedAt: !8937)
!9838 = !DILocation(line: 788, column: 766, scope: !8928, inlinedAt: !8937)
!9839 = !DILocation(line: 788, column: 764, scope: !8928, inlinedAt: !8937)
!9840 = !DILocation(line: 788, column: 793, scope: !8928, inlinedAt: !8937)
!9841 = !DILocation(line: 788, column: 787, scope: !8928, inlinedAt: !8937)
!9842 = !DILocation(line: 788, column: 785, scope: !8928, inlinedAt: !8937)
!9843 = !DILocation(line: 788, column: 804, scope: !8928, inlinedAt: !8937)
!9844 = !DILocation(line: 788, column: 806, scope: !9332, inlinedAt: !8937)
!9845 = !DILocation(line: 788, column: 827, scope: !9334, inlinedAt: !8937)
!9846 = !DILocation(line: 788, column: 822, scope: !9334, inlinedAt: !8937)
!9847 = !DILocation(line: 788, column: 844, scope: !9334, inlinedAt: !8937)
!9848 = !DILocation(line: 788, column: 862, scope: !9334, inlinedAt: !8937)
!9849 = !DILocation(line: 788, column: 874, scope: !9334, inlinedAt: !8937)
!9850 = !DILocation(line: 788, column: 871, scope: !9334, inlinedAt: !8937)
!9851 = !DILocation(line: 788, column: 859, scope: !9334, inlinedAt: !8937)
!9852 = !DILocation(line: 788, column: 843, scope: !9334, inlinedAt: !8937)
!9853 = !DILocation(line: 788, column: 881, scope: !9344, inlinedAt: !8937)
!9854 = !DILocation(line: 788, column: 893, scope: !9344, inlinedAt: !8937)
!9855 = !DILocation(line: 788, column: 890, scope: !9344, inlinedAt: !8937)
!9856 = !DILocation(line: 788, column: 843, scope: !9344, inlinedAt: !8937)
!9857 = !DILocation(line: 788, column: 900, scope: !9349, inlinedAt: !8937)
!9858 = !DILocation(line: 788, column: 843, scope: !9349, inlinedAt: !8937)
!9859 = !DILocation(line: 788, column: 843, scope: !9352, inlinedAt: !8937)
!9860 = !DILocation(line: 788, column: 840, scope: !9352, inlinedAt: !8937)
!9861 = !DILocation(line: 790, column: 18, scope: !8934, inlinedAt: !8937)
!9862 = !DILocation(line: 790, column: 6, scope: !8934, inlinedAt: !8937)
!9863 = !DILocation(line: 790, column: 10, scope: !8934, inlinedAt: !8937)
!9864 = !DILocation(line: 790, column: 16, scope: !8934, inlinedAt: !8937)
!9865 = !DILocation(line: 792, column: 12, scope: !8934, inlinedAt: !8937)
!9866 = !DILocation(line: 967, column: 14, scope: !8938)
!9867 = !DILocation(line: 968, column: 9, scope: !8938)
!9868 = distinct !{!9868, !9867}
!9869 = !DILocation(line: 968, column: 90, scope: !9870)
!9870 = !DILexicalBlockFile(scope: !9871, file: !1665, discriminator: 1)
!9871 = distinct !DILexicalBlock(scope: !8938, file: !1665, line: 968, column: 12)
!9872 = !DILocation(line: 972, column: 22, scope: !8938)
!9873 = !DILocation(line: 972, column: 29, scope: !8938)
!9874 = !DILocation(line: 972, column: 9, scope: !8938)
!9875 = !DILocation(line: 972, column: 12, scope: !8938)
!9876 = !DILocation(line: 972, column: 33, scope: !8938)
!9877 = !DILocation(line: 971, column: 22, scope: !8938)
!9878 = !DILocation(line: 971, column: 29, scope: !8938)
!9879 = !DILocation(line: 971, column: 9, scope: !8938)
!9880 = !DILocation(line: 971, column: 12, scope: !8938)
!9881 = !DILocation(line: 971, column: 33, scope: !8938)
!9882 = !DILocation(line: 970, column: 22, scope: !8938)
!9883 = !DILocation(line: 970, column: 29, scope: !8938)
!9884 = !DILocation(line: 970, column: 9, scope: !8938)
!9885 = !DILocation(line: 970, column: 12, scope: !8938)
!9886 = !DILocation(line: 970, column: 33, scope: !8938)
!9887 = !DILocation(line: 969, column: 22, scope: !8938)
!9888 = !DILocation(line: 969, column: 29, scope: !8938)
!9889 = !DILocation(line: 969, column: 9, scope: !8938)
!9890 = !DILocation(line: 969, column: 12, scope: !8938)
!9891 = !DILocation(line: 969, column: 33, scope: !8938)
!9892 = !DILocation(line: 973, column: 9, scope: !8938)
!9893 = !DILocation(line: 973, column: 16, scope: !9894)
!9894 = !DILexicalBlockFile(scope: !8938, file: !1665, discriminator: 1)
!9895 = !DILocation(line: 973, column: 9, scope: !9894)
!9896 = !DILocalVariable(name: "v", scope: !9897, file: !1665, line: 975, type: !891)
!9897 = distinct !DILexicalBlock(scope: !8938, file: !1665, line: 973, column: 22)
!9898 = !DILocation(line: 975, column: 17, scope: !9897)
!9899 = !DILocalVariable(name: "pos", scope: !9897, file: !1665, line: 976, type: !891)
!9900 = !DILocation(line: 976, column: 17, scope: !9897)
!9901 = !DILocation(line: 976, column: 23, scope: !9897)
!9902 = !DILocation(line: 976, column: 40, scope: !9897)
!9903 = !DILocation(line: 976, column: 33, scope: !9897)
!9904 = !DILocation(line: 976, column: 31, scope: !9897)
!9905 = !DILocation(line: 977, column: 33, scope: !9897)
!9906 = !DILocation(line: 977, column: 26, scope: !9897)
!9907 = !DILocation(line: 977, column: 23, scope: !9897)
!9908 = !DILocation(line: 977, column: 18, scope: !9897)
!9909 = !DILocation(line: 978, column: 29, scope: !9897)
!9910 = !DILocation(line: 978, column: 32, scope: !9897)
!9911 = !DILocation(line: 978, column: 18, scope: !9897)
!9912 = !DILocation(line: 978, column: 17, scope: !9897)
!9913 = !DILocation(line: 978, column: 15, scope: !9897)
!9914 = !DILocation(line: 978, column: 90, scope: !9897)
!9915 = !DILocation(line: 978, column: 80, scope: !9897)
!9916 = !DILocation(line: 978, column: 79, scope: !9897)
!9917 = !DILocation(line: 978, column: 62, scope: !9897)
!9918 = !DILocation(line: 978, column: 98, scope: !9897)
!9919 = !DILocation(line: 978, column: 96, scope: !9897)
!9920 = !DILocation(line: 978, column: 103, scope: !9897)
!9921 = !DILocation(line: 978, column: 101, scope: !9897)
!9922 = !DILocation(line: 978, column: 39, scope: !9897)
!9923 = !DILocation(line: 978, column: 42, scope: !9897)
!9924 = !DILocation(line: 978, column: 54, scope: !9897)
!9925 = !DILocation(line: 978, column: 52, scope: !9897)
!9926 = !DILocation(line: 978, column: 59, scope: !9897)
!9927 = !DILocation(line: 973, column: 9, scope: !9928)
!9928 = !DILexicalBlockFile(scope: !8938, file: !1665, discriminator: 2)
!9929 = distinct !{!9929, !9892}
!9930 = !DILocation(line: 980, column: 17, scope: !8938)
!9931 = !DILocation(line: 947, column: 5, scope: !9054)
!9932 = distinct !{!9932, !9600}
!9933 = !DILocation(line: 983, column: 17, scope: !1844)
!9934 = !DILocation(line: 983, column: 44, scope: !1844)
!9935 = !DILocation(line: 983, column: 47, scope: !1844)
!9936 = !DILocation(line: 983, column: 28, scope: !1844)
!9937 = !DILocation(line: 983, column: 26, scope: !1844)
!9938 = !DILocation(line: 983, column: 15, scope: !1844)
!9939 = !DILocation(line: 984, column: 9, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !1844, file: !1665, line: 984, column: 9)
!9941 = !DILocation(line: 984, column: 19, scope: !9940)
!9942 = !DILocation(line: 984, column: 23, scope: !9940)
!9943 = !DILocation(line: 984, column: 27, scope: !9944)
!9944 = !DILexicalBlockFile(scope: !9940, file: !1665, discriminator: 1)
!9945 = !DILocation(line: 984, column: 30, scope: !9944)
!9946 = !DILocation(line: 984, column: 46, scope: !9944)
!9947 = !DILocation(line: 984, column: 9, scope: !9944)
!9948 = !DILocation(line: 985, column: 16, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9940, file: !1665, line: 984, column: 67)
!9950 = !DILocation(line: 985, column: 19, scope: !9949)
!9951 = !DILocation(line: 985, column: 48, scope: !9949)
!9952 = !DILocation(line: 985, column: 9, scope: !9949)
!9953 = !DILocation(line: 986, column: 16, scope: !9949)
!9954 = !DILocation(line: 987, column: 5, scope: !9949)
!9955 = !DILocation(line: 987, column: 16, scope: !9956)
!9956 = !DILexicalBlockFile(scope: !9957, file: !1665, discriminator: 1)
!9957 = distinct !DILexicalBlock(scope: !9940, file: !1665, line: 987, column: 16)
!9958 = !DILocation(line: 987, column: 26, scope: !9956)
!9959 = !DILocation(line: 987, column: 30, scope: !9956)
!9960 = !DILocation(line: 987, column: 34, scope: !9961)
!9961 = !DILexicalBlockFile(scope: !9957, file: !1665, discriminator: 2)
!9962 = !DILocation(line: 987, column: 37, scope: !9961)
!9963 = !DILocation(line: 987, column: 53, scope: !9961)
!9964 = !DILocation(line: 987, column: 16, scope: !9961)
!9965 = !DILocation(line: 988, column: 16, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9957, file: !1665, line: 987, column: 74)
!9967 = !DILocation(line: 988, column: 19, scope: !9966)
!9968 = !DILocation(line: 988, column: 48, scope: !9966)
!9969 = !DILocation(line: 988, column: 9, scope: !9966)
!9970 = !DILocation(line: 989, column: 17, scope: !9966)
!9971 = !DILocation(line: 990, column: 5, scope: !9966)
!9972 = !DILocation(line: 991, column: 26, scope: !1844)
!9973 = !DILocation(line: 991, column: 13, scope: !1844)
!9974 = !DILocation(line: 991, column: 16, scope: !1844)
!9975 = !DILocation(line: 991, column: 5, scope: !1844)
!9976 = !DILocation(line: 991, column: 70, scope: !1844)
!9977 = !DILocation(line: 991, column: 68, scope: !1844)
!9978 = !DILocation(line: 991, column: 63, scope: !1844)
!9979 = !DILocation(line: 991, column: 61, scope: !1844)
!9980 = !DILocation(line: 992, column: 21, scope: !1844)
!9981 = !DILocation(line: 992, column: 24, scope: !1844)
!9982 = !DILocation(line: 992, column: 28, scope: !1844)
!9983 = !DILocation(line: 992, column: 5, scope: !1844)
!9984 = !DILocation(line: 994, column: 25, scope: !1844)
!9985 = !DILocation(line: 994, column: 28, scope: !1844)
!9986 = !DILocation(line: 994, column: 9, scope: !1844)
!9987 = !DILocation(line: 994, column: 7, scope: !1844)
!9988 = !DILocation(line: 995, column: 19, scope: !1844)
!9989 = !DILocation(line: 995, column: 5, scope: !1844)
!9990 = !DILocation(line: 997, column: 5, scope: !1844)
!9991 = distinct !DISubprogram(name: "compute_stereo", scope: !1665, file: !1665, line: 1038, type: !9992, isLocal: true, isDefinition: true, scopeLine: 1039, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{null, !1847, !2002, !2002}
!9994 = !DILocalVariable(name: "s", arg: 1, scope: !9991, file: !1665, line: 1038, type: !1847)
!9995 = !DILocation(line: 1038, column: 46, scope: !9991)
!9996 = !DILocalVariable(name: "g0", arg: 2, scope: !9991, file: !1665, line: 1038, type: !2002)
!9997 = !DILocation(line: 1038, column: 61, scope: !9991)
!9998 = !DILocalVariable(name: "g1", arg: 3, scope: !9991, file: !1665, line: 1038, type: !2002)
!9999 = !DILocation(line: 1038, column: 77, scope: !9991)
!10000 = !DILocalVariable(name: "i", scope: !9991, file: !1665, line: 1040, type: !891)
!10001 = !DILocation(line: 1040, column: 9, scope: !9991)
!10002 = !DILocalVariable(name: "j", scope: !9991, file: !1665, line: 1040, type: !891)
!10003 = !DILocation(line: 1040, column: 12, scope: !9991)
!10004 = !DILocalVariable(name: "k", scope: !9991, file: !1665, line: 1040, type: !891)
!10005 = !DILocation(line: 1040, column: 15, scope: !9991)
!10006 = !DILocalVariable(name: "l", scope: !9991, file: !1665, line: 1040, type: !891)
!10007 = !DILocation(line: 1040, column: 18, scope: !9991)
!10008 = !DILocalVariable(name: "sf_max", scope: !9991, file: !1665, line: 1041, type: !891)
!10009 = !DILocation(line: 1041, column: 9, scope: !9991)
!10010 = !DILocalVariable(name: "sf", scope: !9991, file: !1665, line: 1041, type: !891)
!10011 = !DILocation(line: 1041, column: 17, scope: !9991)
!10012 = !DILocalVariable(name: "len", scope: !9991, file: !1665, line: 1041, type: !891)
!10013 = !DILocation(line: 1041, column: 21, scope: !9991)
!10014 = !DILocalVariable(name: "non_zero_found", scope: !9991, file: !1665, line: 1041, type: !891)
!10015 = !DILocation(line: 1041, column: 26, scope: !9991)
!10016 = !DILocalVariable(name: "is_tab", scope: !9991, file: !1665, line: 1042, type: !10017)
!10017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10018, size: 64, align: 64)
!10018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 512, align: 32, elements: !1688)
!10019 = !DILocation(line: 1042, column: 11, scope: !9991)
!10020 = !DILocalVariable(name: "tab0", scope: !9991, file: !1665, line: 1042, type: !1321)
!10021 = !DILocation(line: 1042, column: 25, scope: !9991)
!10022 = !DILocalVariable(name: "tab1", scope: !9991, file: !1665, line: 1042, type: !1321)
!10023 = !DILocation(line: 1042, column: 32, scope: !9991)
!10024 = !DILocalVariable(name: "v1", scope: !9991, file: !1665, line: 1042, type: !891)
!10025 = !DILocation(line: 1042, column: 38, scope: !9991)
!10026 = !DILocalVariable(name: "v2", scope: !9991, file: !1665, line: 1042, type: !891)
!10027 = !DILocation(line: 1042, column: 42, scope: !9991)
!10028 = !DILocalVariable(name: "tmp0", scope: !9991, file: !1665, line: 1043, type: !894)
!10029 = !DILocation(line: 1043, column: 14, scope: !9991)
!10030 = !DILocalVariable(name: "tmp1", scope: !9991, file: !1665, line: 1043, type: !894)
!10031 = !DILocation(line: 1043, column: 20, scope: !9991)
!10032 = !DILocalVariable(name: "non_zero_found_short", scope: !9991, file: !1665, line: 1044, type: !1907)
!10033 = !DILocation(line: 1044, column: 9, scope: !9991)
!10034 = !DILocation(line: 1047, column: 9, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !9991, file: !1665, line: 1047, column: 9)
!10036 = !DILocation(line: 1047, column: 12, scope: !10035)
!10037 = !DILocation(line: 1047, column: 21, scope: !10035)
!10038 = !DILocation(line: 1047, column: 9, scope: !9991)
!10039 = !DILocation(line: 1048, column: 14, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !1665, line: 1048, column: 13)
!10041 = distinct !DILexicalBlock(scope: !10035, file: !1665, line: 1047, column: 26)
!10042 = !DILocation(line: 1048, column: 17, scope: !10040)
!10043 = !DILocation(line: 1048, column: 13, scope: !10041)
!10044 = !DILocation(line: 1049, column: 20, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10040, file: !1665, line: 1048, column: 22)
!10046 = !DILocation(line: 1050, column: 20, scope: !10045)
!10047 = !DILocation(line: 1051, column: 9, scope: !10045)
!10048 = !DILocation(line: 1052, column: 35, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10040, file: !1665, line: 1051, column: 16)
!10050 = !DILocation(line: 1052, column: 39, scope: !10049)
!10051 = !DILocation(line: 1052, column: 57, scope: !10049)
!10052 = !DILocation(line: 1052, column: 22, scope: !10049)
!10053 = !DILocation(line: 1052, column: 20, scope: !10049)
!10054 = !DILocation(line: 1053, column: 20, scope: !10049)
!10055 = !DILocation(line: 1056, column: 16, scope: !10041)
!10056 = !DILocation(line: 1056, column: 20, scope: !10041)
!10057 = !DILocation(line: 1056, column: 30, scope: !10041)
!10058 = !DILocation(line: 1056, column: 14, scope: !10041)
!10059 = !DILocation(line: 1057, column: 16, scope: !10041)
!10060 = !DILocation(line: 1057, column: 20, scope: !10041)
!10061 = !DILocation(line: 1057, column: 30, scope: !10041)
!10062 = !DILocation(line: 1057, column: 14, scope: !10041)
!10063 = !DILocation(line: 1059, column: 9, scope: !10041)
!10064 = !DILocation(line: 1059, column: 33, scope: !10041)
!10065 = !DILocation(line: 1060, column: 9, scope: !10041)
!10066 = !DILocation(line: 1060, column: 33, scope: !10041)
!10067 = !DILocation(line: 1061, column: 9, scope: !10041)
!10068 = !DILocation(line: 1061, column: 33, scope: !10041)
!10069 = !DILocation(line: 1062, column: 19, scope: !10041)
!10070 = !DILocation(line: 1062, column: 23, scope: !10041)
!10071 = !DILocation(line: 1062, column: 17, scope: !10041)
!10072 = !DILocation(line: 1062, column: 36, scope: !10041)
!10073 = !DILocation(line: 1062, column: 42, scope: !10041)
!10074 = !DILocation(line: 1062, column: 46, scope: !10041)
!10075 = !DILocation(line: 1062, column: 40, scope: !10041)
!10076 = !DILocation(line: 1062, column: 55, scope: !10041)
!10077 = !DILocation(line: 1062, column: 11, scope: !10041)
!10078 = !DILocation(line: 1063, column: 16, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10041, file: !1665, line: 1063, column: 9)
!10080 = !DILocation(line: 1063, column: 14, scope: !10079)
!10081 = !DILocation(line: 1063, column: 22, scope: !10082)
!10082 = !DILexicalBlockFile(scope: !10083, file: !1665, discriminator: 1)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !1665, line: 1063, column: 9)
!10084 = !DILocation(line: 1063, column: 27, scope: !10082)
!10085 = !DILocation(line: 1063, column: 31, scope: !10082)
!10086 = !DILocation(line: 1063, column: 24, scope: !10082)
!10087 = !DILocation(line: 1063, column: 9, scope: !10082)
!10088 = !DILocation(line: 1065, column: 17, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !1665, line: 1065, column: 17)
!10090 = distinct !DILexicalBlock(scope: !10083, file: !1665, line: 1063, column: 49)
!10091 = !DILocation(line: 1065, column: 19, scope: !10089)
!10092 = !DILocation(line: 1065, column: 17, scope: !10090)
!10093 = !DILocation(line: 1066, column: 19, scope: !10089)
!10094 = !DILocation(line: 1066, column: 17, scope: !10089)
!10095 = !DILocation(line: 1067, column: 57, scope: !10090)
!10096 = !DILocation(line: 1067, column: 19, scope: !10090)
!10097 = !DILocation(line: 1067, column: 35, scope: !10090)
!10098 = !DILocation(line: 1067, column: 38, scope: !10090)
!10099 = !DILocation(line: 1067, column: 17, scope: !10090)
!10100 = !DILocation(line: 1068, column: 20, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10090, file: !1665, line: 1068, column: 13)
!10102 = !DILocation(line: 1068, column: 18, scope: !10101)
!10103 = !DILocation(line: 1068, column: 25, scope: !10104)
!10104 = !DILexicalBlockFile(scope: !10105, file: !1665, discriminator: 1)
!10105 = distinct !DILexicalBlock(scope: !10101, file: !1665, line: 1068, column: 13)
!10106 = !DILocation(line: 1068, column: 27, scope: !10104)
!10107 = !DILocation(line: 1068, column: 13, scope: !10104)
!10108 = !DILocation(line: 1069, column: 25, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10105, file: !1665, line: 1068, column: 38)
!10110 = !DILocation(line: 1069, column: 22, scope: !10109)
!10111 = !DILocation(line: 1070, column: 25, scope: !10109)
!10112 = !DILocation(line: 1070, column: 22, scope: !10109)
!10113 = !DILocation(line: 1071, column: 43, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10109, file: !1665, line: 1071, column: 21)
!10115 = !DILocation(line: 1071, column: 22, scope: !10114)
!10116 = !DILocation(line: 1071, column: 21, scope: !10109)
!10117 = !DILocation(line: 1073, column: 28, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !1665, line: 1073, column: 21)
!10119 = distinct !DILexicalBlock(scope: !10114, file: !1665, line: 1071, column: 47)
!10120 = !DILocation(line: 1073, column: 26, scope: !10118)
!10121 = !DILocation(line: 1073, column: 33, scope: !10122)
!10122 = !DILexicalBlockFile(scope: !10123, file: !1665, discriminator: 1)
!10123 = distinct !DILexicalBlock(scope: !10118, file: !1665, line: 1073, column: 21)
!10124 = !DILocation(line: 1073, column: 37, scope: !10122)
!10125 = !DILocation(line: 1073, column: 35, scope: !10122)
!10126 = !DILocation(line: 1073, column: 21, scope: !10122)
!10127 = !DILocation(line: 1074, column: 34, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10129, file: !1665, line: 1074, column: 29)
!10129 = distinct !DILexicalBlock(scope: !10123, file: !1665, line: 1073, column: 47)
!10130 = !DILocation(line: 1074, column: 29, scope: !10128)
!10131 = !DILocation(line: 1074, column: 37, scope: !10128)
!10132 = !DILocation(line: 1074, column: 29, scope: !10129)
!10133 = !DILocation(line: 1075, column: 50, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10128, file: !1665, line: 1074, column: 43)
!10135 = !DILocation(line: 1075, column: 29, scope: !10134)
!10136 = !DILocation(line: 1075, column: 53, scope: !10134)
!10137 = !DILocation(line: 1076, column: 29, scope: !10134)
!10138 = !DILocation(line: 1078, column: 21, scope: !10129)
!10139 = !DILocation(line: 1073, column: 43, scope: !10140)
!10140 = !DILexicalBlockFile(scope: !10123, file: !1665, discriminator: 2)
!10141 = !DILocation(line: 1073, column: 21, scope: !10140)
!10142 = distinct !{!10142, !10143}
!10143 = !DILocation(line: 1073, column: 21, scope: !10119)
!10144 = !DILocation(line: 1079, column: 44, scope: !10119)
!10145 = !DILocation(line: 1079, column: 48, scope: !10119)
!10146 = !DILocation(line: 1079, column: 46, scope: !10119)
!10147 = !DILocation(line: 1079, column: 26, scope: !10119)
!10148 = !DILocation(line: 1079, column: 30, scope: !10119)
!10149 = !DILocation(line: 1079, column: 24, scope: !10119)
!10150 = !DILocation(line: 1080, column: 25, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10119, file: !1665, line: 1080, column: 25)
!10152 = !DILocation(line: 1080, column: 31, scope: !10151)
!10153 = !DILocation(line: 1080, column: 28, scope: !10151)
!10154 = !DILocation(line: 1080, column: 25, scope: !10119)
!10155 = !DILocation(line: 1081, column: 25, scope: !10151)
!10156 = !DILocation(line: 1083, column: 36, scope: !10119)
!10157 = !DILocation(line: 1083, column: 26, scope: !10119)
!10158 = !DILocation(line: 1083, column: 24, scope: !10119)
!10159 = !DILocation(line: 1084, column: 36, scope: !10119)
!10160 = !DILocation(line: 1084, column: 26, scope: !10119)
!10161 = !DILocation(line: 1084, column: 24, scope: !10119)
!10162 = !DILocation(line: 1085, column: 28, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10119, file: !1665, line: 1085, column: 21)
!10164 = !DILocation(line: 1085, column: 26, scope: !10163)
!10165 = !DILocation(line: 1085, column: 33, scope: !10166)
!10166 = !DILexicalBlockFile(scope: !10167, file: !1665, discriminator: 1)
!10167 = distinct !DILexicalBlock(scope: !10163, file: !1665, line: 1085, column: 21)
!10168 = !DILocation(line: 1085, column: 37, scope: !10166)
!10169 = !DILocation(line: 1085, column: 35, scope: !10166)
!10170 = !DILocation(line: 1085, column: 21, scope: !10166)
!10171 = !DILocation(line: 1086, column: 37, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10167, file: !1665, line: 1085, column: 47)
!10173 = !DILocation(line: 1086, column: 32, scope: !10172)
!10174 = !DILocation(line: 1086, column: 30, scope: !10172)
!10175 = !DILocation(line: 1087, column: 53, scope: !10172)
!10176 = !DILocation(line: 1087, column: 37, scope: !10172)
!10177 = !DILocation(line: 1087, column: 73, scope: !10172)
!10178 = !DILocation(line: 1087, column: 62, scope: !10172)
!10179 = !DILocation(line: 1087, column: 60, scope: !10172)
!10180 = !DILocation(line: 1087, column: 79, scope: !10172)
!10181 = !DILocation(line: 1087, column: 35, scope: !10172)
!10182 = !DILocation(line: 1087, column: 30, scope: !10172)
!10183 = !DILocation(line: 1087, column: 25, scope: !10172)
!10184 = !DILocation(line: 1087, column: 33, scope: !10172)
!10185 = !DILocation(line: 1088, column: 53, scope: !10172)
!10186 = !DILocation(line: 1088, column: 37, scope: !10172)
!10187 = !DILocation(line: 1088, column: 73, scope: !10172)
!10188 = !DILocation(line: 1088, column: 62, scope: !10172)
!10189 = !DILocation(line: 1088, column: 60, scope: !10172)
!10190 = !DILocation(line: 1088, column: 79, scope: !10172)
!10191 = !DILocation(line: 1088, column: 35, scope: !10172)
!10192 = !DILocation(line: 1088, column: 30, scope: !10172)
!10193 = !DILocation(line: 1088, column: 25, scope: !10172)
!10194 = !DILocation(line: 1088, column: 33, scope: !10172)
!10195 = !DILocation(line: 1089, column: 21, scope: !10172)
!10196 = !DILocation(line: 1085, column: 43, scope: !10197)
!10197 = !DILexicalBlockFile(scope: !10167, file: !1665, discriminator: 2)
!10198 = !DILocation(line: 1085, column: 21, scope: !10197)
!10199 = distinct !{!10199, !10200}
!10200 = !DILocation(line: 1085, column: 21, scope: !10119)
!10201 = !DILocation(line: 1090, column: 17, scope: !10119)
!10202 = !DILocation(line: 1090, column: 24, scope: !10203)
!10203 = !DILexicalBlockFile(scope: !10114, file: !1665, discriminator: 1)
!10204 = !DILocation(line: 1092, column: 25, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10206, file: !1665, line: 1092, column: 25)
!10206 = distinct !DILexicalBlock(scope: !10114, file: !1665, line: 1090, column: 24)
!10207 = !DILocation(line: 1092, column: 28, scope: !10205)
!10208 = !DILocation(line: 1092, column: 37, scope: !10205)
!10209 = !DILocation(line: 1092, column: 25, scope: !10206)
!10210 = !DILocation(line: 1095, column: 32, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !1665, line: 1095, column: 25)
!10212 = distinct !DILexicalBlock(scope: !10205, file: !1665, line: 1092, column: 42)
!10213 = !DILocation(line: 1095, column: 30, scope: !10211)
!10214 = !DILocation(line: 1095, column: 37, scope: !10215)
!10215 = !DILexicalBlockFile(scope: !10216, file: !1665, discriminator: 1)
!10216 = distinct !DILexicalBlock(scope: !10211, file: !1665, line: 1095, column: 25)
!10217 = !DILocation(line: 1095, column: 41, scope: !10215)
!10218 = !DILocation(line: 1095, column: 39, scope: !10215)
!10219 = !DILocation(line: 1095, column: 25, scope: !10215)
!10220 = !DILocation(line: 1096, column: 41, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10216, file: !1665, line: 1095, column: 51)
!10222 = !DILocation(line: 1096, column: 36, scope: !10221)
!10223 = !DILocation(line: 1096, column: 34, scope: !10221)
!10224 = !DILocation(line: 1097, column: 41, scope: !10221)
!10225 = !DILocation(line: 1097, column: 36, scope: !10221)
!10226 = !DILocation(line: 1097, column: 34, scope: !10221)
!10227 = !DILocation(line: 1098, column: 57, scope: !10221)
!10228 = !DILocation(line: 1098, column: 64, scope: !10221)
!10229 = !DILocation(line: 1098, column: 62, scope: !10221)
!10230 = !DILocation(line: 1098, column: 41, scope: !10221)
!10231 = !DILocation(line: 1098, column: 71, scope: !10221)
!10232 = !DILocation(line: 1098, column: 139, scope: !10221)
!10233 = !DILocation(line: 1098, column: 39, scope: !10221)
!10234 = !DILocation(line: 1098, column: 34, scope: !10221)
!10235 = !DILocation(line: 1098, column: 29, scope: !10221)
!10236 = !DILocation(line: 1098, column: 37, scope: !10221)
!10237 = !DILocation(line: 1099, column: 57, scope: !10221)
!10238 = !DILocation(line: 1099, column: 64, scope: !10221)
!10239 = !DILocation(line: 1099, column: 62, scope: !10221)
!10240 = !DILocation(line: 1099, column: 41, scope: !10221)
!10241 = !DILocation(line: 1099, column: 71, scope: !10221)
!10242 = !DILocation(line: 1099, column: 139, scope: !10221)
!10243 = !DILocation(line: 1099, column: 39, scope: !10221)
!10244 = !DILocation(line: 1099, column: 34, scope: !10221)
!10245 = !DILocation(line: 1099, column: 29, scope: !10221)
!10246 = !DILocation(line: 1099, column: 37, scope: !10221)
!10247 = !DILocation(line: 1100, column: 25, scope: !10221)
!10248 = !DILocation(line: 1095, column: 47, scope: !10249)
!10249 = !DILexicalBlockFile(scope: !10216, file: !1665, discriminator: 2)
!10250 = !DILocation(line: 1095, column: 25, scope: !10249)
!10251 = distinct !{!10251, !10252}
!10252 = !DILocation(line: 1095, column: 25, scope: !10212)
!10253 = !DILocation(line: 1101, column: 21, scope: !10212)
!10254 = !DILocation(line: 1103, column: 13, scope: !10109)
!10255 = !DILocation(line: 1068, column: 34, scope: !10256)
!10256 = !DILexicalBlockFile(scope: !10105, file: !1665, discriminator: 2)
!10257 = !DILocation(line: 1068, column: 13, scope: !10256)
!10258 = distinct !{!10258, !10259}
!10259 = !DILocation(line: 1068, column: 13, scope: !10090)
!10260 = !DILocation(line: 1104, column: 9, scope: !10090)
!10261 = !DILocation(line: 1063, column: 45, scope: !10262)
!10262 = !DILexicalBlockFile(scope: !10083, file: !1665, discriminator: 2)
!10263 = !DILocation(line: 1063, column: 9, scope: !10262)
!10264 = distinct !{!10264, !10265}
!10265 = !DILocation(line: 1063, column: 9, scope: !10041)
!10266 = !DILocation(line: 1106, column: 26, scope: !10041)
!10267 = !DILocation(line: 1107, column: 26, scope: !10041)
!10268 = !DILocation(line: 1106, column: 50, scope: !10041)
!10269 = !DILocation(line: 1108, column: 26, scope: !10041)
!10270 = !DILocation(line: 1107, column: 50, scope: !10041)
!10271 = !DILocation(line: 1106, column: 24, scope: !10041)
!10272 = !DILocation(line: 1110, column: 18, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10041, file: !1665, line: 1110, column: 9)
!10274 = !DILocation(line: 1110, column: 22, scope: !10273)
!10275 = !DILocation(line: 1110, column: 31, scope: !10273)
!10276 = !DILocation(line: 1110, column: 16, scope: !10273)
!10277 = !DILocation(line: 1110, column: 14, scope: !10273)
!10278 = !DILocation(line: 1110, column: 35, scope: !10279)
!10279 = !DILexicalBlockFile(scope: !10280, file: !1665, discriminator: 1)
!10280 = distinct !DILexicalBlock(scope: !10273, file: !1665, line: 1110, column: 9)
!10281 = !DILocation(line: 1110, column: 37, scope: !10279)
!10282 = !DILocation(line: 1110, column: 9, scope: !10279)
!10283 = !DILocation(line: 1111, column: 56, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10280, file: !1665, line: 1110, column: 47)
!10285 = !DILocation(line: 1111, column: 19, scope: !10284)
!10286 = !DILocation(line: 1111, column: 34, scope: !10284)
!10287 = !DILocation(line: 1111, column: 37, scope: !10284)
!10288 = !DILocation(line: 1111, column: 17, scope: !10284)
!10289 = !DILocation(line: 1112, column: 21, scope: !10284)
!10290 = !DILocation(line: 1112, column: 18, scope: !10284)
!10291 = !DILocation(line: 1113, column: 21, scope: !10284)
!10292 = !DILocation(line: 1113, column: 18, scope: !10284)
!10293 = !DILocation(line: 1115, column: 18, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10284, file: !1665, line: 1115, column: 17)
!10295 = !DILocation(line: 1115, column: 17, scope: !10284)
!10296 = !DILocation(line: 1116, column: 24, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !1665, line: 1116, column: 17)
!10298 = distinct !DILexicalBlock(scope: !10294, file: !1665, line: 1115, column: 34)
!10299 = !DILocation(line: 1116, column: 22, scope: !10297)
!10300 = !DILocation(line: 1116, column: 29, scope: !10301)
!10301 = !DILexicalBlockFile(scope: !10302, file: !1665, discriminator: 1)
!10302 = distinct !DILexicalBlock(scope: !10297, file: !1665, line: 1116, column: 17)
!10303 = !DILocation(line: 1116, column: 33, scope: !10301)
!10304 = !DILocation(line: 1116, column: 31, scope: !10301)
!10305 = !DILocation(line: 1116, column: 17, scope: !10301)
!10306 = !DILocation(line: 1117, column: 30, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !1665, line: 1117, column: 25)
!10308 = distinct !DILexicalBlock(scope: !10302, file: !1665, line: 1116, column: 43)
!10309 = !DILocation(line: 1117, column: 25, scope: !10307)
!10310 = !DILocation(line: 1117, column: 33, scope: !10307)
!10311 = !DILocation(line: 1117, column: 25, scope: !10308)
!10312 = !DILocation(line: 1118, column: 40, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10307, file: !1665, line: 1117, column: 39)
!10314 = !DILocation(line: 1119, column: 25, scope: !10313)
!10315 = !DILocation(line: 1121, column: 17, scope: !10308)
!10316 = !DILocation(line: 1116, column: 39, scope: !10317)
!10317 = !DILexicalBlockFile(scope: !10302, file: !1665, discriminator: 2)
!10318 = !DILocation(line: 1116, column: 17, scope: !10317)
!10319 = distinct !{!10319, !10320}
!10320 = !DILocation(line: 1116, column: 17, scope: !10298)
!10321 = !DILocation(line: 1123, column: 22, scope: !10298)
!10322 = !DILocation(line: 1123, column: 24, scope: !10298)
!10323 = !DILocation(line: 1123, column: 21, scope: !10298)
!10324 = !DILocation(line: 1123, column: 21, scope: !10325)
!10325 = !DILexicalBlockFile(scope: !10298, file: !1665, discriminator: 1)
!10326 = !DILocation(line: 1123, column: 38, scope: !10327)
!10327 = !DILexicalBlockFile(scope: !10298, file: !1665, discriminator: 2)
!10328 = !DILocation(line: 1123, column: 21, scope: !10327)
!10329 = !DILocation(line: 1123, column: 21, scope: !10330)
!10330 = !DILexicalBlockFile(scope: !10298, file: !1665, discriminator: 3)
!10331 = !DILocation(line: 1123, column: 19, scope: !10330)
!10332 = !DILocation(line: 1124, column: 40, scope: !10298)
!10333 = !DILocation(line: 1124, column: 22, scope: !10298)
!10334 = !DILocation(line: 1124, column: 26, scope: !10298)
!10335 = !DILocation(line: 1124, column: 20, scope: !10298)
!10336 = !DILocation(line: 1125, column: 21, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10298, file: !1665, line: 1125, column: 21)
!10338 = !DILocation(line: 1125, column: 27, scope: !10337)
!10339 = !DILocation(line: 1125, column: 24, scope: !10337)
!10340 = !DILocation(line: 1125, column: 21, scope: !10298)
!10341 = !DILocation(line: 1126, column: 21, scope: !10337)
!10342 = !DILocation(line: 1127, column: 32, scope: !10298)
!10343 = !DILocation(line: 1127, column: 22, scope: !10298)
!10344 = !DILocation(line: 1127, column: 20, scope: !10298)
!10345 = !DILocation(line: 1128, column: 32, scope: !10298)
!10346 = !DILocation(line: 1128, column: 22, scope: !10298)
!10347 = !DILocation(line: 1128, column: 20, scope: !10298)
!10348 = !DILocation(line: 1129, column: 24, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10298, file: !1665, line: 1129, column: 17)
!10350 = !DILocation(line: 1129, column: 22, scope: !10349)
!10351 = !DILocation(line: 1129, column: 29, scope: !10352)
!10352 = !DILexicalBlockFile(scope: !10353, file: !1665, discriminator: 1)
!10353 = distinct !DILexicalBlock(scope: !10349, file: !1665, line: 1129, column: 17)
!10354 = !DILocation(line: 1129, column: 33, scope: !10352)
!10355 = !DILocation(line: 1129, column: 31, scope: !10352)
!10356 = !DILocation(line: 1129, column: 17, scope: !10352)
!10357 = !DILocation(line: 1130, column: 33, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10353, file: !1665, line: 1129, column: 43)
!10359 = !DILocation(line: 1130, column: 28, scope: !10358)
!10360 = !DILocation(line: 1130, column: 26, scope: !10358)
!10361 = !DILocation(line: 1131, column: 49, scope: !10358)
!10362 = !DILocation(line: 1131, column: 33, scope: !10358)
!10363 = !DILocation(line: 1131, column: 69, scope: !10358)
!10364 = !DILocation(line: 1131, column: 58, scope: !10358)
!10365 = !DILocation(line: 1131, column: 56, scope: !10358)
!10366 = !DILocation(line: 1131, column: 75, scope: !10358)
!10367 = !DILocation(line: 1131, column: 31, scope: !10358)
!10368 = !DILocation(line: 1131, column: 26, scope: !10358)
!10369 = !DILocation(line: 1131, column: 21, scope: !10358)
!10370 = !DILocation(line: 1131, column: 29, scope: !10358)
!10371 = !DILocation(line: 1132, column: 49, scope: !10358)
!10372 = !DILocation(line: 1132, column: 33, scope: !10358)
!10373 = !DILocation(line: 1132, column: 69, scope: !10358)
!10374 = !DILocation(line: 1132, column: 58, scope: !10358)
!10375 = !DILocation(line: 1132, column: 56, scope: !10358)
!10376 = !DILocation(line: 1132, column: 75, scope: !10358)
!10377 = !DILocation(line: 1132, column: 31, scope: !10358)
!10378 = !DILocation(line: 1132, column: 26, scope: !10358)
!10379 = !DILocation(line: 1132, column: 21, scope: !10358)
!10380 = !DILocation(line: 1132, column: 29, scope: !10358)
!10381 = !DILocation(line: 1133, column: 17, scope: !10358)
!10382 = !DILocation(line: 1129, column: 39, scope: !10383)
!10383 = !DILexicalBlockFile(scope: !10353, file: !1665, discriminator: 2)
!10384 = !DILocation(line: 1129, column: 17, scope: !10383)
!10385 = distinct !{!10385, !10386}
!10386 = !DILocation(line: 1129, column: 17, scope: !10298)
!10387 = !DILocation(line: 1134, column: 13, scope: !10298)
!10388 = !DILocation(line: 1134, column: 20, scope: !10389)
!10389 = !DILexicalBlockFile(scope: !10294, file: !1665, discriminator: 1)
!10390 = !DILocation(line: 1136, column: 21, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !1665, line: 1136, column: 21)
!10392 = distinct !DILexicalBlock(scope: !10294, file: !1665, line: 1134, column: 20)
!10393 = !DILocation(line: 1136, column: 24, scope: !10391)
!10394 = !DILocation(line: 1136, column: 33, scope: !10391)
!10395 = !DILocation(line: 1136, column: 21, scope: !10392)
!10396 = !DILocation(line: 1139, column: 28, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10398, file: !1665, line: 1139, column: 21)
!10398 = distinct !DILexicalBlock(scope: !10391, file: !1665, line: 1136, column: 38)
!10399 = !DILocation(line: 1139, column: 26, scope: !10397)
!10400 = !DILocation(line: 1139, column: 33, scope: !10401)
!10401 = !DILexicalBlockFile(scope: !10402, file: !1665, discriminator: 1)
!10402 = distinct !DILexicalBlock(scope: !10397, file: !1665, line: 1139, column: 21)
!10403 = !DILocation(line: 1139, column: 37, scope: !10401)
!10404 = !DILocation(line: 1139, column: 35, scope: !10401)
!10405 = !DILocation(line: 1139, column: 21, scope: !10401)
!10406 = !DILocation(line: 1140, column: 37, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10402, file: !1665, line: 1139, column: 47)
!10408 = !DILocation(line: 1140, column: 32, scope: !10407)
!10409 = !DILocation(line: 1140, column: 30, scope: !10407)
!10410 = !DILocation(line: 1141, column: 37, scope: !10407)
!10411 = !DILocation(line: 1141, column: 32, scope: !10407)
!10412 = !DILocation(line: 1141, column: 30, scope: !10407)
!10413 = !DILocation(line: 1142, column: 53, scope: !10407)
!10414 = !DILocation(line: 1142, column: 60, scope: !10407)
!10415 = !DILocation(line: 1142, column: 58, scope: !10407)
!10416 = !DILocation(line: 1142, column: 37, scope: !10407)
!10417 = !DILocation(line: 1142, column: 67, scope: !10407)
!10418 = !DILocation(line: 1142, column: 135, scope: !10407)
!10419 = !DILocation(line: 1142, column: 35, scope: !10407)
!10420 = !DILocation(line: 1142, column: 30, scope: !10407)
!10421 = !DILocation(line: 1142, column: 25, scope: !10407)
!10422 = !DILocation(line: 1142, column: 33, scope: !10407)
!10423 = !DILocation(line: 1143, column: 53, scope: !10407)
!10424 = !DILocation(line: 1143, column: 60, scope: !10407)
!10425 = !DILocation(line: 1143, column: 58, scope: !10407)
!10426 = !DILocation(line: 1143, column: 37, scope: !10407)
!10427 = !DILocation(line: 1143, column: 67, scope: !10407)
!10428 = !DILocation(line: 1143, column: 135, scope: !10407)
!10429 = !DILocation(line: 1143, column: 35, scope: !10407)
!10430 = !DILocation(line: 1143, column: 30, scope: !10407)
!10431 = !DILocation(line: 1143, column: 25, scope: !10407)
!10432 = !DILocation(line: 1143, column: 33, scope: !10407)
!10433 = !DILocation(line: 1144, column: 21, scope: !10407)
!10434 = !DILocation(line: 1139, column: 43, scope: !10435)
!10435 = !DILexicalBlockFile(scope: !10402, file: !1665, discriminator: 2)
!10436 = !DILocation(line: 1139, column: 21, scope: !10435)
!10437 = distinct !{!10437, !10438}
!10438 = !DILocation(line: 1139, column: 21, scope: !10398)
!10439 = !DILocation(line: 1145, column: 17, scope: !10398)
!10440 = !DILocation(line: 1147, column: 9, scope: !10284)
!10441 = !DILocation(line: 1110, column: 43, scope: !10442)
!10442 = !DILexicalBlockFile(scope: !10280, file: !1665, discriminator: 2)
!10443 = !DILocation(line: 1110, column: 9, scope: !10442)
!10444 = distinct !{!10444, !10445}
!10445 = !DILocation(line: 1110, column: 9, scope: !10041)
!10446 = !DILocation(line: 1148, column: 5, scope: !10041)
!10447 = !DILocation(line: 1148, column: 16, scope: !10448)
!10448 = !DILexicalBlockFile(scope: !10449, file: !1665, discriminator: 1)
!10449 = distinct !DILexicalBlock(scope: !10035, file: !1665, line: 1148, column: 16)
!10450 = !DILocation(line: 1148, column: 19, scope: !10448)
!10451 = !DILocation(line: 1148, column: 28, scope: !10448)
!10452 = !DILocation(line: 1155, column: 16, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10449, file: !1665, line: 1148, column: 33)
!10454 = !DILocation(line: 1155, column: 20, scope: !10453)
!10455 = !DILocation(line: 1155, column: 14, scope: !10453)
!10456 = !DILocation(line: 1156, column: 16, scope: !10453)
!10457 = !DILocation(line: 1156, column: 20, scope: !10453)
!10458 = !DILocation(line: 1156, column: 14, scope: !10453)
!10459 = !DILocation(line: 1157, column: 16, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10453, file: !1665, line: 1157, column: 9)
!10461 = !DILocation(line: 1157, column: 14, scope: !10460)
!10462 = !DILocation(line: 1157, column: 21, scope: !10463)
!10463 = !DILexicalBlockFile(scope: !10464, file: !1665, discriminator: 1)
!10464 = distinct !DILexicalBlock(scope: !10460, file: !1665, line: 1157, column: 9)
!10465 = !DILocation(line: 1157, column: 23, scope: !10463)
!10466 = !DILocation(line: 1157, column: 9, scope: !10463)
!10467 = !DILocation(line: 1158, column: 25, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10464, file: !1665, line: 1157, column: 35)
!10469 = !DILocation(line: 1158, column: 20, scope: !10468)
!10470 = !DILocation(line: 1158, column: 18, scope: !10468)
!10471 = !DILocation(line: 1159, column: 25, scope: !10468)
!10472 = !DILocation(line: 1159, column: 20, scope: !10468)
!10473 = !DILocation(line: 1159, column: 18, scope: !10468)
!10474 = !DILocation(line: 1160, column: 23, scope: !10468)
!10475 = !DILocation(line: 1160, column: 30, scope: !10468)
!10476 = !DILocation(line: 1160, column: 28, scope: !10468)
!10477 = !DILocation(line: 1160, column: 18, scope: !10468)
!10478 = !DILocation(line: 1160, column: 13, scope: !10468)
!10479 = !DILocation(line: 1160, column: 21, scope: !10468)
!10480 = !DILocation(line: 1161, column: 23, scope: !10468)
!10481 = !DILocation(line: 1161, column: 30, scope: !10468)
!10482 = !DILocation(line: 1161, column: 28, scope: !10468)
!10483 = !DILocation(line: 1161, column: 18, scope: !10468)
!10484 = !DILocation(line: 1161, column: 13, scope: !10468)
!10485 = !DILocation(line: 1161, column: 21, scope: !10468)
!10486 = !DILocation(line: 1162, column: 9, scope: !10468)
!10487 = !DILocation(line: 1157, column: 31, scope: !10488)
!10488 = !DILexicalBlockFile(scope: !10464, file: !1665, discriminator: 2)
!10489 = !DILocation(line: 1157, column: 9, scope: !10488)
!10490 = distinct !{!10490, !10491}
!10491 = !DILocation(line: 1157, column: 9, scope: !10453)
!10492 = !DILocation(line: 1164, column: 5, scope: !10453)
!10493 = !DILocation(line: 1165, column: 1, scope: !9991)
!10494 = distinct !DISubprogram(name: "reorder_block", scope: !1665, file: !1665, line: 1003, type: !8039, isLocal: true, isDefinition: true, scopeLine: 1004, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!10495 = !DILocalVariable(name: "s", arg: 1, scope: !10494, file: !1665, line: 1003, type: !1847)
!10496 = !DILocation(line: 1003, column: 45, scope: !10494)
!10497 = !DILocalVariable(name: "g", arg: 2, scope: !10494, file: !1665, line: 1003, type: !2002)
!10498 = !DILocation(line: 1003, column: 60, scope: !10494)
!10499 = !DILocalVariable(name: "i", scope: !10494, file: !1665, line: 1005, type: !891)
!10500 = !DILocation(line: 1005, column: 9, scope: !10494)
!10501 = !DILocalVariable(name: "j", scope: !10494, file: !1665, line: 1005, type: !891)
!10502 = !DILocation(line: 1005, column: 12, scope: !10494)
!10503 = !DILocalVariable(name: "len", scope: !10494, file: !1665, line: 1005, type: !891)
!10504 = !DILocation(line: 1005, column: 15, scope: !10494)
!10505 = !DILocalVariable(name: "ptr", scope: !10494, file: !1665, line: 1006, type: !1321)
!10506 = !DILocation(line: 1006, column: 10, scope: !10494)
!10507 = !DILocalVariable(name: "dst", scope: !10494, file: !1665, line: 1006, type: !1321)
!10508 = !DILocation(line: 1006, column: 16, scope: !10494)
!10509 = !DILocalVariable(name: "ptr1", scope: !10494, file: !1665, line: 1006, type: !1321)
!10510 = !DILocation(line: 1006, column: 22, scope: !10494)
!10511 = !DILocalVariable(name: "tmp", scope: !10494, file: !1665, line: 1007, type: !1921)
!10512 = !DILocation(line: 1007, column: 9, scope: !10494)
!10513 = !DILocation(line: 1009, column: 9, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10494, file: !1665, line: 1009, column: 9)
!10515 = !DILocation(line: 1009, column: 12, scope: !10514)
!10516 = !DILocation(line: 1009, column: 23, scope: !10514)
!10517 = !DILocation(line: 1009, column: 9, scope: !10494)
!10518 = !DILocation(line: 1010, column: 9, scope: !10514)
!10519 = !DILocation(line: 1012, column: 9, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10494, file: !1665, line: 1012, column: 9)
!10521 = !DILocation(line: 1012, column: 12, scope: !10520)
!10522 = !DILocation(line: 1012, column: 9, scope: !10494)
!10523 = !DILocation(line: 1013, column: 13, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !1665, line: 1013, column: 13)
!10525 = distinct !DILexicalBlock(scope: !10520, file: !1665, line: 1012, column: 26)
!10526 = !DILocation(line: 1013, column: 16, scope: !10524)
!10527 = !DILocation(line: 1013, column: 34, scope: !10524)
!10528 = !DILocation(line: 1013, column: 13, scope: !10525)
!10529 = !DILocation(line: 1014, column: 19, scope: !10524)
!10530 = !DILocation(line: 1014, column: 22, scope: !10524)
!10531 = !DILocation(line: 1014, column: 32, scope: !10524)
!10532 = !DILocation(line: 1014, column: 17, scope: !10524)
!10533 = !DILocation(line: 1014, column: 13, scope: !10524)
!10534 = !DILocation(line: 1016, column: 19, scope: !10524)
!10535 = !DILocation(line: 1016, column: 22, scope: !10524)
!10536 = !DILocation(line: 1016, column: 32, scope: !10524)
!10537 = !DILocation(line: 1016, column: 17, scope: !10524)
!10538 = !DILocation(line: 1017, column: 5, scope: !10525)
!10539 = !DILocation(line: 1018, column: 15, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10520, file: !1665, line: 1017, column: 12)
!10541 = !DILocation(line: 1018, column: 18, scope: !10540)
!10542 = !DILocation(line: 1018, column: 13, scope: !10540)
!10543 = !DILocation(line: 1021, column: 14, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10494, file: !1665, line: 1021, column: 5)
!10545 = !DILocation(line: 1021, column: 17, scope: !10544)
!10546 = !DILocation(line: 1021, column: 12, scope: !10544)
!10547 = !DILocation(line: 1021, column: 10, scope: !10544)
!10548 = !DILocation(line: 1021, column: 30, scope: !10549)
!10549 = !DILexicalBlockFile(scope: !10550, file: !1665, discriminator: 1)
!10550 = distinct !DILexicalBlock(scope: !10544, file: !1665, line: 1021, column: 5)
!10551 = !DILocation(line: 1021, column: 32, scope: !10549)
!10552 = !DILocation(line: 1021, column: 5, scope: !10549)
!10553 = !DILocation(line: 1022, column: 53, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10550, file: !1665, line: 1021, column: 43)
!10555 = !DILocation(line: 1022, column: 15, scope: !10554)
!10556 = !DILocation(line: 1022, column: 31, scope: !10554)
!10557 = !DILocation(line: 1022, column: 34, scope: !10554)
!10558 = !DILocation(line: 1022, column: 13, scope: !10554)
!10559 = !DILocation(line: 1023, column: 16, scope: !10554)
!10560 = !DILocation(line: 1023, column: 14, scope: !10554)
!10561 = !DILocation(line: 1024, column: 15, scope: !10554)
!10562 = !DILocation(line: 1024, column: 13, scope: !10554)
!10563 = !DILocation(line: 1025, column: 18, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10554, file: !1665, line: 1025, column: 9)
!10565 = !DILocation(line: 1025, column: 16, scope: !10564)
!10566 = !DILocation(line: 1025, column: 14, scope: !10564)
!10567 = !DILocation(line: 1025, column: 23, scope: !10568)
!10568 = !DILexicalBlockFile(scope: !10569, file: !1665, discriminator: 1)
!10569 = distinct !DILexicalBlock(scope: !10564, file: !1665, line: 1025, column: 9)
!10570 = !DILocation(line: 1025, column: 25, scope: !10568)
!10571 = !DILocation(line: 1025, column: 9, scope: !10568)
!10572 = !DILocation(line: 1026, column: 28, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10569, file: !1665, line: 1025, column: 35)
!10574 = !DILocation(line: 1026, column: 27, scope: !10573)
!10575 = !DILocation(line: 1026, column: 22, scope: !10573)
!10576 = !DILocation(line: 1026, column: 17, scope: !10573)
!10577 = !DILocation(line: 1026, column: 20, scope: !10573)
!10578 = !DILocation(line: 1027, column: 28, scope: !10573)
!10579 = !DILocation(line: 1027, column: 27, scope: !10573)
!10580 = !DILocation(line: 1027, column: 22, scope: !10573)
!10581 = !DILocation(line: 1027, column: 17, scope: !10573)
!10582 = !DILocation(line: 1027, column: 20, scope: !10573)
!10583 = !DILocation(line: 1028, column: 28, scope: !10573)
!10584 = !DILocation(line: 1028, column: 27, scope: !10573)
!10585 = !DILocation(line: 1028, column: 22, scope: !10573)
!10586 = !DILocation(line: 1028, column: 17, scope: !10573)
!10587 = !DILocation(line: 1028, column: 20, scope: !10573)
!10588 = !DILocation(line: 1029, column: 16, scope: !10573)
!10589 = !DILocation(line: 1030, column: 9, scope: !10573)
!10590 = !DILocation(line: 1025, column: 31, scope: !10591)
!10591 = !DILexicalBlockFile(scope: !10569, file: !1665, discriminator: 2)
!10592 = !DILocation(line: 1025, column: 9, scope: !10591)
!10593 = distinct !{!10593, !10594}
!10594 = !DILocation(line: 1025, column: 9, scope: !10554)
!10595 = !DILocation(line: 1031, column: 20, scope: !10554)
!10596 = !DILocation(line: 1031, column: 18, scope: !10554)
!10597 = !DILocation(line: 1031, column: 13, scope: !10554)
!10598 = !DILocation(line: 1032, column: 16, scope: !10554)
!10599 = !DILocation(line: 1032, column: 9, scope: !10554)
!10600 = !DILocation(line: 1032, column: 27, scope: !10554)
!10601 = !DILocation(line: 1032, column: 31, scope: !10554)
!10602 = !DILocation(line: 1032, column: 35, scope: !10554)
!10603 = !DILocation(line: 1033, column: 5, scope: !10554)
!10604 = !DILocation(line: 1021, column: 39, scope: !10605)
!10605 = !DILexicalBlockFile(scope: !10550, file: !1665, discriminator: 2)
!10606 = !DILocation(line: 1021, column: 5, scope: !10605)
!10607 = distinct !{!10607, !10608}
!10608 = !DILocation(line: 1021, column: 5, scope: !10494)
!10609 = !DILocation(line: 1034, column: 1, scope: !10494)
!10610 = distinct !DISubprogram(name: "compute_antialias", scope: !1665, file: !1665, line: 1195, type: !8039, isLocal: true, isDefinition: true, scopeLine: 1196, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!10611 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10612)
!10612 = distinct !DILocation(line: 1212, column: 142, scope: !10613)
!10613 = !DILexicalBlockFile(scope: !10614, file: !1665, discriminator: 2)
!10614 = !DILexicalBlockFile(scope: !10615, file: !1665, discriminator: 1)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1212, column: 12)
!10616 = distinct !DILexicalBlock(scope: !10617, file: !1665, line: 1211, column: 29)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !1665, line: 1211, column: 5)
!10618 = distinct !DILexicalBlock(scope: !10610, file: !1665, line: 1211, column: 5)
!10619 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10612)
!10620 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10621)
!10621 = distinct !DILocation(line: 1212, column: 194, scope: !10622)
!10622 = !DILexicalBlockFile(scope: !10614, file: !1665, discriminator: 3)
!10623 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10621)
!10624 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10625)
!10625 = distinct !DILocation(line: 1213, column: 82, scope: !10626)
!10626 = !DILexicalBlockFile(scope: !10627, file: !1665, discriminator: 1)
!10627 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1213, column: 12)
!10628 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10625)
!10629 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10630)
!10630 = distinct !DILocation(line: 1213, column: 142, scope: !10631)
!10631 = !DILexicalBlockFile(scope: !10626, file: !1665, discriminator: 2)
!10632 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10630)
!10633 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10634)
!10634 = distinct !DILocation(line: 1213, column: 194, scope: !10635)
!10635 = !DILexicalBlockFile(scope: !10626, file: !1665, discriminator: 3)
!10636 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10634)
!10637 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10638)
!10638 = distinct !DILocation(line: 1214, column: 82, scope: !10639)
!10639 = !DILexicalBlockFile(scope: !10640, file: !1665, discriminator: 1)
!10640 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1214, column: 12)
!10641 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10638)
!10642 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10643)
!10643 = distinct !DILocation(line: 1214, column: 142, scope: !10644)
!10644 = !DILexicalBlockFile(scope: !10639, file: !1665, discriminator: 2)
!10645 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10643)
!10646 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10647)
!10647 = distinct !DILocation(line: 1214, column: 194, scope: !10648)
!10648 = !DILexicalBlockFile(scope: !10639, file: !1665, discriminator: 3)
!10649 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10647)
!10650 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10651)
!10651 = distinct !DILocation(line: 1215, column: 82, scope: !10652)
!10652 = !DILexicalBlockFile(scope: !10653, file: !1665, discriminator: 1)
!10653 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1215, column: 12)
!10654 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10651)
!10655 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10656)
!10656 = distinct !DILocation(line: 1215, column: 142, scope: !10657)
!10657 = !DILexicalBlockFile(scope: !10652, file: !1665, discriminator: 2)
!10658 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10656)
!10659 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10660)
!10660 = distinct !DILocation(line: 1215, column: 194, scope: !10661)
!10661 = !DILexicalBlockFile(scope: !10652, file: !1665, discriminator: 3)
!10662 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10660)
!10663 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10664)
!10664 = distinct !DILocation(line: 1216, column: 82, scope: !10665)
!10665 = !DILexicalBlockFile(scope: !10666, file: !1665, discriminator: 1)
!10666 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1216, column: 12)
!10667 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10664)
!10668 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10669)
!10669 = distinct !DILocation(line: 1216, column: 142, scope: !10670)
!10670 = !DILexicalBlockFile(scope: !10665, file: !1665, discriminator: 2)
!10671 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10669)
!10672 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10673)
!10673 = distinct !DILocation(line: 1216, column: 194, scope: !10674)
!10674 = !DILexicalBlockFile(scope: !10665, file: !1665, discriminator: 3)
!10675 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10673)
!10676 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10677)
!10677 = distinct !DILocation(line: 1217, column: 82, scope: !10678)
!10678 = !DILexicalBlockFile(scope: !10679, file: !1665, discriminator: 1)
!10679 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1217, column: 12)
!10680 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10677)
!10681 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10682)
!10682 = distinct !DILocation(line: 1217, column: 142, scope: !10683)
!10683 = !DILexicalBlockFile(scope: !10678, file: !1665, discriminator: 2)
!10684 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10682)
!10685 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10686)
!10686 = distinct !DILocation(line: 1217, column: 194, scope: !10687)
!10687 = !DILexicalBlockFile(scope: !10678, file: !1665, discriminator: 3)
!10688 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10686)
!10689 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10690)
!10690 = distinct !DILocation(line: 1218, column: 82, scope: !10691)
!10691 = !DILexicalBlockFile(scope: !10692, file: !1665, discriminator: 1)
!10692 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1218, column: 12)
!10693 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10690)
!10694 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10695)
!10695 = distinct !DILocation(line: 1218, column: 142, scope: !10696)
!10696 = !DILexicalBlockFile(scope: !10691, file: !1665, discriminator: 2)
!10697 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10695)
!10698 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10699)
!10699 = distinct !DILocation(line: 1218, column: 194, scope: !10700)
!10700 = !DILexicalBlockFile(scope: !10691, file: !1665, discriminator: 3)
!10701 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10699)
!10702 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10703)
!10703 = distinct !DILocation(line: 1219, column: 82, scope: !10704)
!10704 = !DILexicalBlockFile(scope: !10705, file: !1665, discriminator: 1)
!10705 = distinct !DILexicalBlock(scope: !10616, file: !1665, line: 1219, column: 12)
!10706 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10703)
!10707 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10708)
!10708 = distinct !DILocation(line: 1219, column: 142, scope: !10709)
!10709 = !DILexicalBlockFile(scope: !10704, file: !1665, discriminator: 2)
!10710 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10708)
!10711 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10712)
!10712 = distinct !DILocation(line: 1219, column: 194, scope: !10713)
!10713 = !DILexicalBlockFile(scope: !10704, file: !1665, discriminator: 3)
!10714 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10712)
!10715 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !10716)
!10716 = distinct !DILocation(line: 1212, column: 82, scope: !10614)
!10717 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !10716)
!10718 = !DILocalVariable(name: "s", arg: 1, scope: !10610, file: !1665, line: 1195, type: !1847)
!10719 = !DILocation(line: 1195, column: 49, scope: !10610)
!10720 = !DILocalVariable(name: "g", arg: 2, scope: !10610, file: !1665, line: 1195, type: !2002)
!10721 = !DILocation(line: 1195, column: 64, scope: !10610)
!10722 = !DILocalVariable(name: "ptr", scope: !10610, file: !1665, line: 1197, type: !1321)
!10723 = !DILocation(line: 1197, column: 10, scope: !10610)
!10724 = !DILocalVariable(name: "n", scope: !10610, file: !1665, line: 1198, type: !891)
!10725 = !DILocation(line: 1198, column: 9, scope: !10610)
!10726 = !DILocalVariable(name: "i", scope: !10610, file: !1665, line: 1198, type: !891)
!10727 = !DILocation(line: 1198, column: 12, scope: !10610)
!10728 = !DILocation(line: 1201, column: 9, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10610, file: !1665, line: 1201, column: 9)
!10730 = !DILocation(line: 1201, column: 12, scope: !10729)
!10731 = !DILocation(line: 1201, column: 23, scope: !10729)
!10732 = !DILocation(line: 1201, column: 9, scope: !10610)
!10733 = !DILocation(line: 1202, column: 14, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10735, file: !1665, line: 1202, column: 13)
!10735 = distinct !DILexicalBlock(scope: !10729, file: !1665, line: 1201, column: 29)
!10736 = !DILocation(line: 1202, column: 17, scope: !10734)
!10737 = !DILocation(line: 1202, column: 13, scope: !10735)
!10738 = !DILocation(line: 1203, column: 13, scope: !10734)
!10739 = !DILocation(line: 1205, column: 11, scope: !10735)
!10740 = !DILocation(line: 1206, column: 5, scope: !10735)
!10741 = !DILocation(line: 1207, column: 11, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10729, file: !1665, line: 1206, column: 12)
!10743 = !DILocation(line: 1210, column: 11, scope: !10610)
!10744 = !DILocation(line: 1210, column: 14, scope: !10610)
!10745 = !DILocation(line: 1210, column: 24, scope: !10610)
!10746 = !DILocation(line: 1210, column: 9, scope: !10610)
!10747 = !DILocation(line: 1211, column: 14, scope: !10618)
!10748 = !DILocation(line: 1211, column: 12, scope: !10618)
!10749 = !DILocation(line: 1211, column: 10, scope: !10618)
!10750 = !DILocation(line: 1211, column: 17, scope: !10751)
!10751 = !DILexicalBlockFile(scope: !10617, file: !1665, discriminator: 1)
!10752 = !DILocation(line: 1211, column: 19, scope: !10751)
!10753 = !DILocation(line: 1211, column: 5, scope: !10751)
!10754 = !DILocation(line: 1212, column: 9, scope: !10616)
!10755 = distinct !{!10755, !10754}
!10756 = !DILocalVariable(name: "tmp0", scope: !10615, file: !1665, line: 1212, type: !894)
!10757 = !DILocation(line: 1212, column: 23, scope: !10615)
!10758 = !DILocation(line: 1212, column: 30, scope: !10614)
!10759 = !DILocation(line: 1212, column: 23, scope: !10614)
!10760 = !DILocalVariable(name: "tmp1", scope: !10615, file: !1665, line: 1212, type: !894)
!10761 = !DILocation(line: 1212, column: 50, scope: !10615)
!10762 = !DILocation(line: 1212, column: 57, scope: !10614)
!10763 = !DILocation(line: 1212, column: 50, scope: !10614)
!10764 = !DILocalVariable(name: "tmp2", scope: !10615, file: !1665, line: 1212, type: !894)
!10765 = !DILocation(line: 1212, column: 75, scope: !10615)
!10766 = !DILocation(line: 1212, column: 87, scope: !10614)
!10767 = !DILocation(line: 1212, column: 94, scope: !10614)
!10768 = !DILocation(line: 1212, column: 92, scope: !10614)
!10769 = !DILocation(line: 1212, column: 100, scope: !10614)
!10770 = !DILocation(line: 1212, column: 82, scope: !10614)
!10771 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10716)
!10772 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10716)
!10773 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10716)
!10774 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10716)
!10775 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10716)
!10776 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10716)
!10777 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10716)
!10778 = !DILocation(line: 1212, column: 75, scope: !10614)
!10779 = !DILocation(line: 1212, column: 135, scope: !10614)
!10780 = !DILocation(line: 1212, column: 147, scope: !10614)
!10781 = !DILocation(line: 1212, column: 153, scope: !10614)
!10782 = !DILocation(line: 1212, column: 142, scope: !10613)
!10783 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10612)
!10784 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10612)
!10785 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10612)
!10786 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10612)
!10787 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10612)
!10788 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10612)
!10789 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10612)
!10790 = !DILocation(line: 1212, column: 140, scope: !10614)
!10791 = !DILocation(line: 1212, column: 132, scope: !10614)
!10792 = !DILocation(line: 1212, column: 118, scope: !10614)
!10793 = !DILocation(line: 1212, column: 128, scope: !10614)
!10794 = !DILocation(line: 1212, column: 187, scope: !10614)
!10795 = !DILocation(line: 1212, column: 199, scope: !10614)
!10796 = !DILocation(line: 1212, column: 205, scope: !10614)
!10797 = !DILocation(line: 1212, column: 194, scope: !10622)
!10798 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10621)
!10799 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10621)
!10800 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10621)
!10801 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10621)
!10802 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10621)
!10803 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10621)
!10804 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10621)
!10805 = !DILocation(line: 1212, column: 192, scope: !10614)
!10806 = !DILocation(line: 1212, column: 184, scope: !10614)
!10807 = !DILocation(line: 1212, column: 172, scope: !10614)
!10808 = !DILocation(line: 1212, column: 180, scope: !10614)
!10809 = !DILocation(line: 1212, column: 224, scope: !10614)
!10810 = !DILocation(line: 1213, column: 9, scope: !10616)
!10811 = distinct !{!10811, !10810}
!10812 = !DILocalVariable(name: "tmp0", scope: !10627, file: !1665, line: 1213, type: !894)
!10813 = !DILocation(line: 1213, column: 23, scope: !10627)
!10814 = !DILocation(line: 1213, column: 30, scope: !10626)
!10815 = !DILocation(line: 1213, column: 23, scope: !10626)
!10816 = !DILocalVariable(name: "tmp1", scope: !10627, file: !1665, line: 1213, type: !894)
!10817 = !DILocation(line: 1213, column: 50, scope: !10627)
!10818 = !DILocation(line: 1213, column: 57, scope: !10626)
!10819 = !DILocation(line: 1213, column: 50, scope: !10626)
!10820 = !DILocalVariable(name: "tmp2", scope: !10627, file: !1665, line: 1213, type: !894)
!10821 = !DILocation(line: 1213, column: 75, scope: !10627)
!10822 = !DILocation(line: 1213, column: 87, scope: !10626)
!10823 = !DILocation(line: 1213, column: 94, scope: !10626)
!10824 = !DILocation(line: 1213, column: 92, scope: !10626)
!10825 = !DILocation(line: 1213, column: 100, scope: !10626)
!10826 = !DILocation(line: 1213, column: 82, scope: !10626)
!10827 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10625)
!10828 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10625)
!10829 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10625)
!10830 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10625)
!10831 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10625)
!10832 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10625)
!10833 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10625)
!10834 = !DILocation(line: 1213, column: 75, scope: !10626)
!10835 = !DILocation(line: 1213, column: 135, scope: !10626)
!10836 = !DILocation(line: 1213, column: 147, scope: !10626)
!10837 = !DILocation(line: 1213, column: 153, scope: !10626)
!10838 = !DILocation(line: 1213, column: 142, scope: !10631)
!10839 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10630)
!10840 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10630)
!10841 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10630)
!10842 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10630)
!10843 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10630)
!10844 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10630)
!10845 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10630)
!10846 = !DILocation(line: 1213, column: 140, scope: !10626)
!10847 = !DILocation(line: 1213, column: 132, scope: !10626)
!10848 = !DILocation(line: 1213, column: 118, scope: !10626)
!10849 = !DILocation(line: 1213, column: 128, scope: !10626)
!10850 = !DILocation(line: 1213, column: 187, scope: !10626)
!10851 = !DILocation(line: 1213, column: 199, scope: !10626)
!10852 = !DILocation(line: 1213, column: 205, scope: !10626)
!10853 = !DILocation(line: 1213, column: 194, scope: !10635)
!10854 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10634)
!10855 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10634)
!10856 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10634)
!10857 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10634)
!10858 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10634)
!10859 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10634)
!10860 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10634)
!10861 = !DILocation(line: 1213, column: 192, scope: !10626)
!10862 = !DILocation(line: 1213, column: 184, scope: !10626)
!10863 = !DILocation(line: 1213, column: 172, scope: !10626)
!10864 = !DILocation(line: 1213, column: 180, scope: !10626)
!10865 = !DILocation(line: 1213, column: 224, scope: !10626)
!10866 = !DILocation(line: 1214, column: 9, scope: !10616)
!10867 = distinct !{!10867, !10866}
!10868 = !DILocalVariable(name: "tmp0", scope: !10640, file: !1665, line: 1214, type: !894)
!10869 = !DILocation(line: 1214, column: 23, scope: !10640)
!10870 = !DILocation(line: 1214, column: 30, scope: !10639)
!10871 = !DILocation(line: 1214, column: 23, scope: !10639)
!10872 = !DILocalVariable(name: "tmp1", scope: !10640, file: !1665, line: 1214, type: !894)
!10873 = !DILocation(line: 1214, column: 50, scope: !10640)
!10874 = !DILocation(line: 1214, column: 57, scope: !10639)
!10875 = !DILocation(line: 1214, column: 50, scope: !10639)
!10876 = !DILocalVariable(name: "tmp2", scope: !10640, file: !1665, line: 1214, type: !894)
!10877 = !DILocation(line: 1214, column: 75, scope: !10640)
!10878 = !DILocation(line: 1214, column: 87, scope: !10639)
!10879 = !DILocation(line: 1214, column: 94, scope: !10639)
!10880 = !DILocation(line: 1214, column: 92, scope: !10639)
!10881 = !DILocation(line: 1214, column: 100, scope: !10639)
!10882 = !DILocation(line: 1214, column: 82, scope: !10639)
!10883 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10638)
!10884 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10638)
!10885 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10638)
!10886 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10638)
!10887 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10638)
!10888 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10638)
!10889 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10638)
!10890 = !DILocation(line: 1214, column: 75, scope: !10639)
!10891 = !DILocation(line: 1214, column: 135, scope: !10639)
!10892 = !DILocation(line: 1214, column: 147, scope: !10639)
!10893 = !DILocation(line: 1214, column: 153, scope: !10639)
!10894 = !DILocation(line: 1214, column: 142, scope: !10644)
!10895 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10643)
!10896 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10643)
!10897 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10643)
!10898 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10643)
!10899 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10643)
!10900 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10643)
!10901 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10643)
!10902 = !DILocation(line: 1214, column: 140, scope: !10639)
!10903 = !DILocation(line: 1214, column: 132, scope: !10639)
!10904 = !DILocation(line: 1214, column: 118, scope: !10639)
!10905 = !DILocation(line: 1214, column: 128, scope: !10639)
!10906 = !DILocation(line: 1214, column: 187, scope: !10639)
!10907 = !DILocation(line: 1214, column: 199, scope: !10639)
!10908 = !DILocation(line: 1214, column: 205, scope: !10639)
!10909 = !DILocation(line: 1214, column: 194, scope: !10648)
!10910 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10647)
!10911 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10647)
!10912 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10647)
!10913 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10647)
!10914 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10647)
!10915 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10647)
!10916 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10647)
!10917 = !DILocation(line: 1214, column: 192, scope: !10639)
!10918 = !DILocation(line: 1214, column: 184, scope: !10639)
!10919 = !DILocation(line: 1214, column: 172, scope: !10639)
!10920 = !DILocation(line: 1214, column: 180, scope: !10639)
!10921 = !DILocation(line: 1214, column: 224, scope: !10639)
!10922 = !DILocation(line: 1215, column: 9, scope: !10616)
!10923 = distinct !{!10923, !10922}
!10924 = !DILocalVariable(name: "tmp0", scope: !10653, file: !1665, line: 1215, type: !894)
!10925 = !DILocation(line: 1215, column: 23, scope: !10653)
!10926 = !DILocation(line: 1215, column: 30, scope: !10652)
!10927 = !DILocation(line: 1215, column: 23, scope: !10652)
!10928 = !DILocalVariable(name: "tmp1", scope: !10653, file: !1665, line: 1215, type: !894)
!10929 = !DILocation(line: 1215, column: 50, scope: !10653)
!10930 = !DILocation(line: 1215, column: 57, scope: !10652)
!10931 = !DILocation(line: 1215, column: 50, scope: !10652)
!10932 = !DILocalVariable(name: "tmp2", scope: !10653, file: !1665, line: 1215, type: !894)
!10933 = !DILocation(line: 1215, column: 75, scope: !10653)
!10934 = !DILocation(line: 1215, column: 87, scope: !10652)
!10935 = !DILocation(line: 1215, column: 94, scope: !10652)
!10936 = !DILocation(line: 1215, column: 92, scope: !10652)
!10937 = !DILocation(line: 1215, column: 100, scope: !10652)
!10938 = !DILocation(line: 1215, column: 82, scope: !10652)
!10939 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10651)
!10940 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10651)
!10941 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10651)
!10942 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10651)
!10943 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10651)
!10944 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10651)
!10945 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10651)
!10946 = !DILocation(line: 1215, column: 75, scope: !10652)
!10947 = !DILocation(line: 1215, column: 135, scope: !10652)
!10948 = !DILocation(line: 1215, column: 147, scope: !10652)
!10949 = !DILocation(line: 1215, column: 153, scope: !10652)
!10950 = !DILocation(line: 1215, column: 142, scope: !10657)
!10951 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10656)
!10952 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10656)
!10953 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10656)
!10954 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10656)
!10955 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10656)
!10956 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10656)
!10957 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10656)
!10958 = !DILocation(line: 1215, column: 140, scope: !10652)
!10959 = !DILocation(line: 1215, column: 132, scope: !10652)
!10960 = !DILocation(line: 1215, column: 118, scope: !10652)
!10961 = !DILocation(line: 1215, column: 128, scope: !10652)
!10962 = !DILocation(line: 1215, column: 187, scope: !10652)
!10963 = !DILocation(line: 1215, column: 199, scope: !10652)
!10964 = !DILocation(line: 1215, column: 205, scope: !10652)
!10965 = !DILocation(line: 1215, column: 194, scope: !10661)
!10966 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10660)
!10967 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10660)
!10968 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10660)
!10969 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10660)
!10970 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10660)
!10971 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10660)
!10972 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10660)
!10973 = !DILocation(line: 1215, column: 192, scope: !10652)
!10974 = !DILocation(line: 1215, column: 184, scope: !10652)
!10975 = !DILocation(line: 1215, column: 172, scope: !10652)
!10976 = !DILocation(line: 1215, column: 180, scope: !10652)
!10977 = !DILocation(line: 1215, column: 224, scope: !10652)
!10978 = !DILocation(line: 1216, column: 9, scope: !10616)
!10979 = distinct !{!10979, !10978}
!10980 = !DILocalVariable(name: "tmp0", scope: !10666, file: !1665, line: 1216, type: !894)
!10981 = !DILocation(line: 1216, column: 23, scope: !10666)
!10982 = !DILocation(line: 1216, column: 30, scope: !10665)
!10983 = !DILocation(line: 1216, column: 23, scope: !10665)
!10984 = !DILocalVariable(name: "tmp1", scope: !10666, file: !1665, line: 1216, type: !894)
!10985 = !DILocation(line: 1216, column: 50, scope: !10666)
!10986 = !DILocation(line: 1216, column: 57, scope: !10665)
!10987 = !DILocation(line: 1216, column: 50, scope: !10665)
!10988 = !DILocalVariable(name: "tmp2", scope: !10666, file: !1665, line: 1216, type: !894)
!10989 = !DILocation(line: 1216, column: 75, scope: !10666)
!10990 = !DILocation(line: 1216, column: 87, scope: !10665)
!10991 = !DILocation(line: 1216, column: 94, scope: !10665)
!10992 = !DILocation(line: 1216, column: 92, scope: !10665)
!10993 = !DILocation(line: 1216, column: 100, scope: !10665)
!10994 = !DILocation(line: 1216, column: 82, scope: !10665)
!10995 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10664)
!10996 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10664)
!10997 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10664)
!10998 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10664)
!10999 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10664)
!11000 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10664)
!11001 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10664)
!11002 = !DILocation(line: 1216, column: 75, scope: !10665)
!11003 = !DILocation(line: 1216, column: 135, scope: !10665)
!11004 = !DILocation(line: 1216, column: 147, scope: !10665)
!11005 = !DILocation(line: 1216, column: 153, scope: !10665)
!11006 = !DILocation(line: 1216, column: 142, scope: !10670)
!11007 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10669)
!11008 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10669)
!11009 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10669)
!11010 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10669)
!11011 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10669)
!11012 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10669)
!11013 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10669)
!11014 = !DILocation(line: 1216, column: 140, scope: !10665)
!11015 = !DILocation(line: 1216, column: 132, scope: !10665)
!11016 = !DILocation(line: 1216, column: 118, scope: !10665)
!11017 = !DILocation(line: 1216, column: 128, scope: !10665)
!11018 = !DILocation(line: 1216, column: 187, scope: !10665)
!11019 = !DILocation(line: 1216, column: 199, scope: !10665)
!11020 = !DILocation(line: 1216, column: 205, scope: !10665)
!11021 = !DILocation(line: 1216, column: 194, scope: !10674)
!11022 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10673)
!11023 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10673)
!11024 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10673)
!11025 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10673)
!11026 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10673)
!11027 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10673)
!11028 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10673)
!11029 = !DILocation(line: 1216, column: 192, scope: !10665)
!11030 = !DILocation(line: 1216, column: 184, scope: !10665)
!11031 = !DILocation(line: 1216, column: 172, scope: !10665)
!11032 = !DILocation(line: 1216, column: 180, scope: !10665)
!11033 = !DILocation(line: 1216, column: 224, scope: !10665)
!11034 = !DILocation(line: 1217, column: 9, scope: !10616)
!11035 = distinct !{!11035, !11034}
!11036 = !DILocalVariable(name: "tmp0", scope: !10679, file: !1665, line: 1217, type: !894)
!11037 = !DILocation(line: 1217, column: 23, scope: !10679)
!11038 = !DILocation(line: 1217, column: 30, scope: !10678)
!11039 = !DILocation(line: 1217, column: 23, scope: !10678)
!11040 = !DILocalVariable(name: "tmp1", scope: !10679, file: !1665, line: 1217, type: !894)
!11041 = !DILocation(line: 1217, column: 50, scope: !10679)
!11042 = !DILocation(line: 1217, column: 57, scope: !10678)
!11043 = !DILocation(line: 1217, column: 50, scope: !10678)
!11044 = !DILocalVariable(name: "tmp2", scope: !10679, file: !1665, line: 1217, type: !894)
!11045 = !DILocation(line: 1217, column: 75, scope: !10679)
!11046 = !DILocation(line: 1217, column: 87, scope: !10678)
!11047 = !DILocation(line: 1217, column: 94, scope: !10678)
!11048 = !DILocation(line: 1217, column: 92, scope: !10678)
!11049 = !DILocation(line: 1217, column: 100, scope: !10678)
!11050 = !DILocation(line: 1217, column: 82, scope: !10678)
!11051 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10677)
!11052 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10677)
!11053 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10677)
!11054 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10677)
!11055 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10677)
!11056 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10677)
!11057 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10677)
!11058 = !DILocation(line: 1217, column: 75, scope: !10678)
!11059 = !DILocation(line: 1217, column: 135, scope: !10678)
!11060 = !DILocation(line: 1217, column: 147, scope: !10678)
!11061 = !DILocation(line: 1217, column: 153, scope: !10678)
!11062 = !DILocation(line: 1217, column: 142, scope: !10683)
!11063 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10682)
!11064 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10682)
!11065 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10682)
!11066 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10682)
!11067 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10682)
!11068 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10682)
!11069 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10682)
!11070 = !DILocation(line: 1217, column: 140, scope: !10678)
!11071 = !DILocation(line: 1217, column: 132, scope: !10678)
!11072 = !DILocation(line: 1217, column: 118, scope: !10678)
!11073 = !DILocation(line: 1217, column: 128, scope: !10678)
!11074 = !DILocation(line: 1217, column: 187, scope: !10678)
!11075 = !DILocation(line: 1217, column: 199, scope: !10678)
!11076 = !DILocation(line: 1217, column: 205, scope: !10678)
!11077 = !DILocation(line: 1217, column: 194, scope: !10687)
!11078 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10686)
!11079 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10686)
!11080 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10686)
!11081 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10686)
!11082 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10686)
!11083 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10686)
!11084 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10686)
!11085 = !DILocation(line: 1217, column: 192, scope: !10678)
!11086 = !DILocation(line: 1217, column: 184, scope: !10678)
!11087 = !DILocation(line: 1217, column: 172, scope: !10678)
!11088 = !DILocation(line: 1217, column: 180, scope: !10678)
!11089 = !DILocation(line: 1217, column: 224, scope: !10678)
!11090 = !DILocation(line: 1218, column: 9, scope: !10616)
!11091 = distinct !{!11091, !11090}
!11092 = !DILocalVariable(name: "tmp0", scope: !10692, file: !1665, line: 1218, type: !894)
!11093 = !DILocation(line: 1218, column: 23, scope: !10692)
!11094 = !DILocation(line: 1218, column: 30, scope: !10691)
!11095 = !DILocation(line: 1218, column: 23, scope: !10691)
!11096 = !DILocalVariable(name: "tmp1", scope: !10692, file: !1665, line: 1218, type: !894)
!11097 = !DILocation(line: 1218, column: 50, scope: !10692)
!11098 = !DILocation(line: 1218, column: 57, scope: !10691)
!11099 = !DILocation(line: 1218, column: 50, scope: !10691)
!11100 = !DILocalVariable(name: "tmp2", scope: !10692, file: !1665, line: 1218, type: !894)
!11101 = !DILocation(line: 1218, column: 75, scope: !10692)
!11102 = !DILocation(line: 1218, column: 87, scope: !10691)
!11103 = !DILocation(line: 1218, column: 94, scope: !10691)
!11104 = !DILocation(line: 1218, column: 92, scope: !10691)
!11105 = !DILocation(line: 1218, column: 100, scope: !10691)
!11106 = !DILocation(line: 1218, column: 82, scope: !10691)
!11107 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10690)
!11108 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10690)
!11109 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10690)
!11110 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10690)
!11111 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10690)
!11112 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10690)
!11113 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10690)
!11114 = !DILocation(line: 1218, column: 75, scope: !10691)
!11115 = !DILocation(line: 1218, column: 135, scope: !10691)
!11116 = !DILocation(line: 1218, column: 147, scope: !10691)
!11117 = !DILocation(line: 1218, column: 153, scope: !10691)
!11118 = !DILocation(line: 1218, column: 142, scope: !10696)
!11119 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10695)
!11120 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10695)
!11121 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10695)
!11122 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10695)
!11123 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10695)
!11124 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10695)
!11125 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10695)
!11126 = !DILocation(line: 1218, column: 140, scope: !10691)
!11127 = !DILocation(line: 1218, column: 132, scope: !10691)
!11128 = !DILocation(line: 1218, column: 118, scope: !10691)
!11129 = !DILocation(line: 1218, column: 128, scope: !10691)
!11130 = !DILocation(line: 1218, column: 187, scope: !10691)
!11131 = !DILocation(line: 1218, column: 199, scope: !10691)
!11132 = !DILocation(line: 1218, column: 205, scope: !10691)
!11133 = !DILocation(line: 1218, column: 194, scope: !10700)
!11134 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10699)
!11135 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10699)
!11136 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10699)
!11137 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10699)
!11138 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10699)
!11139 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10699)
!11140 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10699)
!11141 = !DILocation(line: 1218, column: 192, scope: !10691)
!11142 = !DILocation(line: 1218, column: 184, scope: !10691)
!11143 = !DILocation(line: 1218, column: 172, scope: !10691)
!11144 = !DILocation(line: 1218, column: 180, scope: !10691)
!11145 = !DILocation(line: 1218, column: 224, scope: !10691)
!11146 = !DILocation(line: 1219, column: 9, scope: !10616)
!11147 = distinct !{!11147, !11146}
!11148 = !DILocalVariable(name: "tmp0", scope: !10705, file: !1665, line: 1219, type: !894)
!11149 = !DILocation(line: 1219, column: 23, scope: !10705)
!11150 = !DILocation(line: 1219, column: 30, scope: !10704)
!11151 = !DILocation(line: 1219, column: 23, scope: !10704)
!11152 = !DILocalVariable(name: "tmp1", scope: !10705, file: !1665, line: 1219, type: !894)
!11153 = !DILocation(line: 1219, column: 50, scope: !10705)
!11154 = !DILocation(line: 1219, column: 57, scope: !10704)
!11155 = !DILocation(line: 1219, column: 50, scope: !10704)
!11156 = !DILocalVariable(name: "tmp2", scope: !10705, file: !1665, line: 1219, type: !894)
!11157 = !DILocation(line: 1219, column: 75, scope: !10705)
!11158 = !DILocation(line: 1219, column: 87, scope: !10704)
!11159 = !DILocation(line: 1219, column: 94, scope: !10704)
!11160 = !DILocation(line: 1219, column: 92, scope: !10704)
!11161 = !DILocation(line: 1219, column: 100, scope: !10704)
!11162 = !DILocation(line: 1219, column: 82, scope: !10704)
!11163 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10703)
!11164 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10703)
!11165 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10703)
!11166 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10703)
!11167 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10703)
!11168 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10703)
!11169 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10703)
!11170 = !DILocation(line: 1219, column: 75, scope: !10704)
!11171 = !DILocation(line: 1219, column: 135, scope: !10704)
!11172 = !DILocation(line: 1219, column: 147, scope: !10704)
!11173 = !DILocation(line: 1219, column: 153, scope: !10704)
!11174 = !DILocation(line: 1219, column: 142, scope: !10709)
!11175 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10708)
!11176 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10708)
!11177 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10708)
!11178 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10708)
!11179 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10708)
!11180 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10708)
!11181 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10708)
!11182 = !DILocation(line: 1219, column: 140, scope: !10704)
!11183 = !DILocation(line: 1219, column: 132, scope: !10704)
!11184 = !DILocation(line: 1219, column: 118, scope: !10704)
!11185 = !DILocation(line: 1219, column: 128, scope: !10704)
!11186 = !DILocation(line: 1219, column: 187, scope: !10704)
!11187 = !DILocation(line: 1219, column: 199, scope: !10704)
!11188 = !DILocation(line: 1219, column: 205, scope: !10704)
!11189 = !DILocation(line: 1219, column: 194, scope: !10713)
!11190 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !10712)
!11191 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !10712)
!11192 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !10712)
!11193 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !10712)
!11194 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !10712)
!11195 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !10712)
!11196 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !10712)
!11197 = !DILocation(line: 1219, column: 192, scope: !10704)
!11198 = !DILocation(line: 1219, column: 184, scope: !10704)
!11199 = !DILocation(line: 1219, column: 172, scope: !10704)
!11200 = !DILocation(line: 1219, column: 180, scope: !10704)
!11201 = !DILocation(line: 1219, column: 224, scope: !10704)
!11202 = !DILocation(line: 1221, column: 13, scope: !10616)
!11203 = !DILocation(line: 1222, column: 5, scope: !10616)
!11204 = !DILocation(line: 1211, column: 25, scope: !11205)
!11205 = !DILexicalBlockFile(scope: !10617, file: !1665, discriminator: 2)
!11206 = !DILocation(line: 1211, column: 5, scope: !11205)
!11207 = distinct !{!11207, !11208}
!11208 = !DILocation(line: 1211, column: 5, scope: !10610)
!11209 = !DILocation(line: 1223, column: 1, scope: !10610)
!11210 = distinct !DISubprogram(name: "imdct12", scope: !1665, file: !1665, line: 461, type: !11211, isLocal: true, isDefinition: true, scopeLine: 462, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!11211 = !DISubroutineType(types: !11212)
!11212 = !{null, !1321, !11213}
!11213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64, align: 64)
!11214 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !11215)
!11215 = distinct !DILocation(line: 475, column: 11, scope: !11210)
!11216 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !11215)
!11217 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !11218)
!11218 = distinct !DILocation(line: 478, column: 10, scope: !11210)
!11219 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !11218)
!11220 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !11221)
!11221 = distinct !DILocation(line: 488, column: 11, scope: !11210)
!11222 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !11221)
!11223 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !11224)
!11224 = distinct !DILocation(line: 495, column: 11, scope: !11210)
!11225 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !11224)
!11226 = !DILocation(line: 62, column: 59, scope: !8252, inlinedAt: !11227)
!11227 = distinct !DILocation(line: 474, column: 11, scope: !11210)
!11228 = !DILocation(line: 62, column: 66, scope: !8252, inlinedAt: !11227)
!11229 = !DILocalVariable(name: "out", arg: 1, scope: !11210, file: !1665, line: 461, type: !1321)
!11230 = !DILocation(line: 461, column: 26, scope: !11210)
!11231 = !DILocalVariable(name: "in", arg: 2, scope: !11210, file: !1665, line: 461, type: !11213)
!11232 = !DILocation(line: 461, column: 41, scope: !11210)
!11233 = !DILocalVariable(name: "in0", scope: !11210, file: !1665, line: 463, type: !894)
!11234 = !DILocation(line: 463, column: 14, scope: !11210)
!11235 = !DILocalVariable(name: "in1", scope: !11210, file: !1665, line: 463, type: !894)
!11236 = !DILocation(line: 463, column: 19, scope: !11210)
!11237 = !DILocalVariable(name: "in2", scope: !11210, file: !1665, line: 463, type: !894)
!11238 = !DILocation(line: 463, column: 24, scope: !11210)
!11239 = !DILocalVariable(name: "in3", scope: !11210, file: !1665, line: 463, type: !894)
!11240 = !DILocation(line: 463, column: 29, scope: !11210)
!11241 = !DILocalVariable(name: "in4", scope: !11210, file: !1665, line: 463, type: !894)
!11242 = !DILocation(line: 463, column: 34, scope: !11210)
!11243 = !DILocalVariable(name: "in5", scope: !11210, file: !1665, line: 463, type: !894)
!11244 = !DILocation(line: 463, column: 39, scope: !11210)
!11245 = !DILocalVariable(name: "t1", scope: !11210, file: !1665, line: 463, type: !894)
!11246 = !DILocation(line: 463, column: 44, scope: !11210)
!11247 = !DILocalVariable(name: "t2", scope: !11210, file: !1665, line: 463, type: !894)
!11248 = !DILocation(line: 463, column: 48, scope: !11210)
!11249 = !DILocation(line: 465, column: 11, scope: !11210)
!11250 = !DILocation(line: 465, column: 9, scope: !11210)
!11251 = !DILocation(line: 466, column: 11, scope: !11210)
!11252 = !DILocation(line: 466, column: 21, scope: !11210)
!11253 = !DILocation(line: 466, column: 19, scope: !11210)
!11254 = !DILocation(line: 466, column: 9, scope: !11210)
!11255 = !DILocation(line: 467, column: 11, scope: !11210)
!11256 = !DILocation(line: 467, column: 21, scope: !11210)
!11257 = !DILocation(line: 467, column: 19, scope: !11210)
!11258 = !DILocation(line: 467, column: 9, scope: !11210)
!11259 = !DILocation(line: 468, column: 11, scope: !11210)
!11260 = !DILocation(line: 468, column: 21, scope: !11210)
!11261 = !DILocation(line: 468, column: 19, scope: !11210)
!11262 = !DILocation(line: 468, column: 9, scope: !11210)
!11263 = !DILocation(line: 469, column: 11, scope: !11210)
!11264 = !DILocation(line: 469, column: 21, scope: !11210)
!11265 = !DILocation(line: 469, column: 19, scope: !11210)
!11266 = !DILocation(line: 469, column: 9, scope: !11210)
!11267 = !DILocation(line: 470, column: 11, scope: !11210)
!11268 = !DILocation(line: 470, column: 21, scope: !11210)
!11269 = !DILocation(line: 470, column: 19, scope: !11210)
!11270 = !DILocation(line: 470, column: 9, scope: !11210)
!11271 = !DILocation(line: 471, column: 12, scope: !11210)
!11272 = !DILocation(line: 471, column: 9, scope: !11210)
!11273 = !DILocation(line: 472, column: 12, scope: !11210)
!11274 = !DILocation(line: 472, column: 9, scope: !11210)
!11275 = !DILocation(line: 474, column: 21, scope: !11210)
!11276 = !DILocation(line: 474, column: 19, scope: !11210)
!11277 = !DILocation(line: 474, column: 11, scope: !11210)
!11278 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !11227)
!11279 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !11227)
!11280 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !11227)
!11281 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !11227)
!11282 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !11227)
!11283 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !11227)
!11284 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !11227)
!11285 = !DILocation(line: 474, column: 9, scope: !11210)
!11286 = !DILocation(line: 475, column: 21, scope: !11210)
!11287 = !DILocation(line: 475, column: 19, scope: !11210)
!11288 = !DILocation(line: 475, column: 11, scope: !11210)
!11289 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !11215)
!11290 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !11215)
!11291 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !11215)
!11292 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !11215)
!11293 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !11215)
!11294 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !11215)
!11295 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !11215)
!11296 = !DILocation(line: 475, column: 9, scope: !11210)
!11297 = !DILocation(line: 477, column: 10, scope: !11210)
!11298 = !DILocation(line: 477, column: 16, scope: !11210)
!11299 = !DILocation(line: 477, column: 14, scope: !11210)
!11300 = !DILocation(line: 477, column: 8, scope: !11210)
!11301 = !DILocation(line: 478, column: 20, scope: !11210)
!11302 = !DILocation(line: 478, column: 26, scope: !11210)
!11303 = !DILocation(line: 478, column: 24, scope: !11210)
!11304 = !DILocation(line: 478, column: 18, scope: !11210)
!11305 = !DILocation(line: 478, column: 10, scope: !11210)
!11306 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !11218)
!11307 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !11218)
!11308 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !11218)
!11309 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !11218)
!11310 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !11218)
!11311 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !11218)
!11312 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !11218)
!11313 = !DILocation(line: 478, column: 8, scope: !11210)
!11314 = !DILocation(line: 481, column: 15, scope: !11210)
!11315 = !DILocation(line: 481, column: 20, scope: !11210)
!11316 = !DILocation(line: 481, column: 18, scope: !11210)
!11317 = !DILocation(line: 481, column: 5, scope: !11210)
!11318 = !DILocation(line: 481, column: 13, scope: !11210)
!11319 = !DILocation(line: 480, column: 5, scope: !11210)
!11320 = !DILocation(line: 480, column: 13, scope: !11210)
!11321 = !DILocation(line: 483, column: 15, scope: !11210)
!11322 = !DILocation(line: 483, column: 20, scope: !11210)
!11323 = !DILocation(line: 483, column: 18, scope: !11210)
!11324 = !DILocation(line: 483, column: 5, scope: !11210)
!11325 = !DILocation(line: 483, column: 13, scope: !11210)
!11326 = !DILocation(line: 482, column: 5, scope: !11210)
!11327 = !DILocation(line: 482, column: 13, scope: !11210)
!11328 = !DILocation(line: 485, column: 20, scope: !11210)
!11329 = !DILocation(line: 485, column: 25, scope: !11210)
!11330 = !DILocation(line: 485, column: 9, scope: !11210)
!11331 = !DILocation(line: 486, column: 11, scope: !11210)
!11332 = !DILocation(line: 486, column: 17, scope: !11210)
!11333 = !DILocation(line: 486, column: 15, scope: !11210)
!11334 = !DILocation(line: 486, column: 9, scope: !11210)
!11335 = !DILocation(line: 487, column: 14, scope: !11210)
!11336 = !DILocation(line: 487, column: 13, scope: !11210)
!11337 = !DILocation(line: 487, column: 9, scope: !11210)
!11338 = !DILocation(line: 488, column: 21, scope: !11210)
!11339 = !DILocation(line: 488, column: 27, scope: !11210)
!11340 = !DILocation(line: 488, column: 25, scope: !11210)
!11341 = !DILocation(line: 488, column: 19, scope: !11210)
!11342 = !DILocation(line: 488, column: 11, scope: !11210)
!11343 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !11221)
!11344 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !11221)
!11345 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !11221)
!11346 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !11221)
!11347 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !11221)
!11348 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !11221)
!11349 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !11221)
!11350 = !DILocation(line: 488, column: 9, scope: !11210)
!11351 = !DILocation(line: 490, column: 15, scope: !11210)
!11352 = !DILocation(line: 490, column: 21, scope: !11210)
!11353 = !DILocation(line: 490, column: 19, scope: !11210)
!11354 = !DILocation(line: 490, column: 5, scope: !11210)
!11355 = !DILocation(line: 490, column: 13, scope: !11210)
!11356 = !DILocation(line: 489, column: 5, scope: !11210)
!11357 = !DILocation(line: 489, column: 13, scope: !11210)
!11358 = !DILocation(line: 492, column: 15, scope: !11210)
!11359 = !DILocation(line: 492, column: 21, scope: !11210)
!11360 = !DILocation(line: 492, column: 19, scope: !11210)
!11361 = !DILocation(line: 492, column: 5, scope: !11210)
!11362 = !DILocation(line: 492, column: 13, scope: !11210)
!11363 = !DILocation(line: 491, column: 5, scope: !11210)
!11364 = !DILocation(line: 491, column: 13, scope: !11210)
!11365 = !DILocation(line: 494, column: 12, scope: !11210)
!11366 = !DILocation(line: 494, column: 9, scope: !11210)
!11367 = !DILocation(line: 495, column: 21, scope: !11210)
!11368 = !DILocation(line: 495, column: 27, scope: !11210)
!11369 = !DILocation(line: 495, column: 25, scope: !11210)
!11370 = !DILocation(line: 495, column: 19, scope: !11210)
!11371 = !DILocation(line: 495, column: 11, scope: !11210)
!11372 = !DILocation(line: 63, column: 23, scope: !8252, inlinedAt: !11224)
!11373 = !DILocation(line: 63, column: 13, scope: !8252, inlinedAt: !11224)
!11374 = !DILocation(line: 63, column: 38, scope: !8252, inlinedAt: !11224)
!11375 = !DILocation(line: 63, column: 28, scope: !8252, inlinedAt: !11224)
!11376 = !DILocation(line: 63, column: 26, scope: !8252, inlinedAt: !11224)
!11377 = !DILocation(line: 63, column: 42, scope: !8252, inlinedAt: !11224)
!11378 = !DILocation(line: 63, column: 12, scope: !8252, inlinedAt: !11224)
!11379 = !DILocation(line: 495, column: 9, scope: !11210)
!11380 = !DILocation(line: 497, column: 15, scope: !11210)
!11381 = !DILocation(line: 497, column: 21, scope: !11210)
!11382 = !DILocation(line: 497, column: 19, scope: !11210)
!11383 = !DILocation(line: 497, column: 5, scope: !11210)
!11384 = !DILocation(line: 497, column: 13, scope: !11210)
!11385 = !DILocation(line: 496, column: 5, scope: !11210)
!11386 = !DILocation(line: 496, column: 13, scope: !11210)
!11387 = !DILocation(line: 499, column: 15, scope: !11210)
!11388 = !DILocation(line: 499, column: 21, scope: !11210)
!11389 = !DILocation(line: 499, column: 19, scope: !11210)
!11390 = !DILocation(line: 499, column: 5, scope: !11210)
!11391 = !DILocation(line: 499, column: 13, scope: !11210)
!11392 = !DILocation(line: 498, column: 5, scope: !11210)
!11393 = !DILocation(line: 498, column: 13, scope: !11210)
!11394 = !DILocation(line: 500, column: 1, scope: !11210)
!11395 = distinct !DISubprogram(name: "switch_buffer", scope: !1665, file: !1665, line: 821, type: !11396, isLocal: true, isDefinition: true, scopeLine: 823, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!11396 = !DISubroutineType(types: !11397)
!11397 = !{null, !1847, !1321, !1321, !1321}
!11398 = !DILocalVariable(name: "s", arg: 1, scope: !11395, file: !1665, line: 821, type: !1847)
!11399 = !DILocation(line: 821, column: 45, scope: !11395)
!11400 = !DILocalVariable(name: "pos", arg: 2, scope: !11395, file: !1665, line: 821, type: !1321)
!11401 = !DILocation(line: 821, column: 53, scope: !11395)
!11402 = !DILocalVariable(name: "end_pos", arg: 3, scope: !11395, file: !1665, line: 821, type: !1321)
!11403 = !DILocation(line: 821, column: 63, scope: !11395)
!11404 = !DILocalVariable(name: "end_pos2", arg: 4, scope: !11395, file: !1665, line: 822, type: !1321)
!11405 = !DILocation(line: 822, column: 32, scope: !11395)
!11406 = !DILocation(line: 824, column: 9, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11395, file: !1665, line: 824, column: 9)
!11408 = !DILocation(line: 824, column: 12, scope: !11407)
!11409 = !DILocation(line: 824, column: 18, scope: !11407)
!11410 = !DILocation(line: 824, column: 25, scope: !11407)
!11411 = !DILocation(line: 824, column: 29, scope: !11412)
!11412 = !DILexicalBlockFile(scope: !11407, file: !1665, discriminator: 1)
!11413 = !DILocation(line: 824, column: 28, scope: !11412)
!11414 = !DILocation(line: 824, column: 36, scope: !11412)
!11415 = !DILocation(line: 824, column: 39, scope: !11412)
!11416 = !DILocation(line: 824, column: 42, scope: !11412)
!11417 = !DILocation(line: 824, column: 57, scope: !11412)
!11418 = !DILocation(line: 824, column: 60, scope: !11412)
!11419 = !DILocation(line: 824, column: 70, scope: !11412)
!11420 = !DILocation(line: 824, column: 55, scope: !11412)
!11421 = !DILocation(line: 824, column: 33, scope: !11412)
!11422 = !DILocation(line: 824, column: 9, scope: !11412)
!11423 = !DILocation(line: 825, column: 9, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11407, file: !1665, line: 824, column: 75)
!11425 = !DILocation(line: 825, column: 12, scope: !11424)
!11426 = !DILocation(line: 825, column: 17, scope: !11424)
!11427 = !DILocation(line: 825, column: 20, scope: !11424)
!11428 = !DILocation(line: 826, column: 9, scope: !11424)
!11429 = !DILocation(line: 826, column: 12, scope: !11424)
!11430 = !DILocation(line: 826, column: 18, scope: !11424)
!11431 = !DILocation(line: 826, column: 25, scope: !11424)
!11432 = !DILocation(line: 827, column: 9, scope: !11424)
!11433 = !DILocation(line: 827, column: 12, scope: !11424)
!11434 = !DILocation(line: 827, column: 22, scope: !11424)
!11435 = !DILocation(line: 829, column: 25, scope: !11424)
!11436 = !DILocation(line: 829, column: 28, scope: !11424)
!11437 = !DILocation(line: 829, column: 33, scope: !11424)
!11438 = !DILocation(line: 829, column: 32, scope: !11424)
!11439 = !DILocation(line: 829, column: 40, scope: !11424)
!11440 = !DILocation(line: 829, column: 39, scope: !11424)
!11441 = !DILocation(line: 829, column: 37, scope: !11424)
!11442 = !DILocation(line: 829, column: 9, scope: !11424)
!11443 = !DILocation(line: 831, column: 21, scope: !11424)
!11444 = !DILocation(line: 831, column: 20, scope: !11424)
!11445 = !DILocation(line: 831, column: 48, scope: !11424)
!11446 = !DILocation(line: 831, column: 51, scope: !11424)
!11447 = !DILocation(line: 831, column: 32, scope: !11424)
!11448 = !DILocation(line: 831, column: 30, scope: !11424)
!11449 = !DILocation(line: 831, column: 58, scope: !11424)
!11450 = !DILocation(line: 831, column: 57, scope: !11424)
!11451 = !DILocation(line: 831, column: 55, scope: !11424)
!11452 = !DILocation(line: 831, column: 10, scope: !11424)
!11453 = !DILocation(line: 831, column: 18, scope: !11424)
!11454 = !DILocation(line: 830, column: 10, scope: !11424)
!11455 = !DILocation(line: 830, column: 19, scope: !11424)
!11456 = !DILocation(line: 832, column: 32, scope: !11424)
!11457 = !DILocation(line: 832, column: 35, scope: !11424)
!11458 = !DILocation(line: 832, column: 16, scope: !11424)
!11459 = !DILocation(line: 832, column: 10, scope: !11424)
!11460 = !DILocation(line: 832, column: 14, scope: !11424)
!11461 = !DILocation(line: 833, column: 5, scope: !11424)
!11462 = !DILocation(line: 834, column: 1, scope: !11395)
!11463 = distinct !DISubprogram(name: "l3_unscale", scope: !1665, file: !1665, line: 242, type: !8254, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!11464 = !DILocalVariable(name: "value", arg: 1, scope: !11463, file: !1665, line: 242, type: !891)
!11465 = !DILocation(line: 242, column: 34, scope: !11463)
!11466 = !DILocalVariable(name: "exponent", arg: 2, scope: !11463, file: !1665, line: 242, type: !891)
!11467 = !DILocation(line: 242, column: 45, scope: !11463)
!11468 = !DILocalVariable(name: "m", scope: !11463, file: !1665, line: 244, type: !894)
!11469 = !DILocation(line: 244, column: 18, scope: !11463)
!11470 = !DILocalVariable(name: "e", scope: !11463, file: !1665, line: 245, type: !891)
!11471 = !DILocation(line: 245, column: 9, scope: !11463)
!11472 = !DILocation(line: 247, column: 28, scope: !11463)
!11473 = !DILocation(line: 247, column: 26, scope: !11463)
!11474 = !DILocation(line: 247, column: 37, scope: !11463)
!11475 = !DILocation(line: 247, column: 46, scope: !11463)
!11476 = !DILocation(line: 247, column: 34, scope: !11463)
!11477 = !DILocation(line: 247, column: 9, scope: !11463)
!11478 = !DILocation(line: 247, column: 7, scope: !11463)
!11479 = !DILocation(line: 248, column: 29, scope: !11463)
!11480 = !DILocation(line: 248, column: 27, scope: !11463)
!11481 = !DILocation(line: 248, column: 38, scope: !11463)
!11482 = !DILocation(line: 248, column: 47, scope: !11463)
!11483 = !DILocation(line: 248, column: 35, scope: !11463)
!11484 = !DILocation(line: 248, column: 9, scope: !11463)
!11485 = !DILocation(line: 248, column: 7, scope: !11463)
!11486 = !DILocation(line: 249, column: 10, scope: !11463)
!11487 = !DILocation(line: 249, column: 19, scope: !11463)
!11488 = !DILocation(line: 249, column: 7, scope: !11463)
!11489 = !DILocation(line: 254, column: 9, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11463, file: !1665, line: 254, column: 9)
!11491 = !DILocation(line: 254, column: 11, scope: !11490)
!11492 = !DILocation(line: 254, column: 9, scope: !11463)
!11493 = !DILocation(line: 255, column: 9, scope: !11490)
!11494 = !DILocation(line: 256, column: 10, scope: !11463)
!11495 = !DILocation(line: 256, column: 22, scope: !11463)
!11496 = !DILocation(line: 256, column: 19, scope: !11463)
!11497 = !DILocation(line: 256, column: 24, scope: !11463)
!11498 = !DILocation(line: 256, column: 12, scope: !11463)
!11499 = !DILocation(line: 256, column: 33, scope: !11463)
!11500 = !DILocation(line: 256, column: 30, scope: !11463)
!11501 = !DILocation(line: 256, column: 7, scope: !11463)
!11502 = !DILocation(line: 258, column: 12, scope: !11463)
!11503 = !DILocation(line: 258, column: 5, scope: !11463)
!11504 = !DILocation(line: 259, column: 1, scope: !11463)
!11505 = distinct !DISubprogram(name: "mp_flush", scope: !1665, file: !1665, line: 1718, type: !11506, isLocal: true, isDefinition: true, scopeLine: 1719, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1666)
!11506 = !DISubroutineType(types: !11507)
!11507 = !{null, !1847}
!11508 = !DILocalVariable(name: "ctx", arg: 1, scope: !11505, file: !1665, line: 1718, type: !1847)
!11509 = !DILocation(line: 1718, column: 40, scope: !11505)
!11510 = !DILocation(line: 1720, column: 12, scope: !11505)
!11511 = !DILocation(line: 1720, column: 17, scope: !11505)
!11512 = !DILocation(line: 1720, column: 5, scope: !11505)
!11513 = !DILocation(line: 1721, column: 12, scope: !11505)
!11514 = !DILocation(line: 1721, column: 17, scope: !11505)
!11515 = !DILocation(line: 1721, column: 5, scope: !11505)
!11516 = !DILocation(line: 1722, column: 5, scope: !11505)
!11517 = !DILocation(line: 1722, column: 10, scope: !11505)
!11518 = !DILocation(line: 1722, column: 24, scope: !11505)
!11519 = !DILocation(line: 1723, column: 5, scope: !11505)
!11520 = !DILocation(line: 1723, column: 10, scope: !11505)
!11521 = !DILocation(line: 1723, column: 23, scope: !11505)
!11522 = !DILocation(line: 1724, column: 1, scope: !11505)
